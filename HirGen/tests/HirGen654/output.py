import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_11 = relay.var("var_11", dtype = "float64", shape = (12, 14, 9))#candidate|11|(12, 14, 9)|var|float64
uop_12 = relay.sin(var_11.astype('float64')) # shape=(12, 14, 9)
output = uop_12
output2 = uop_12
func_31 = relay.Function([var_11,], output)
mod['func_31'] = func_31
mod = relay.transform.InferType()(mod)
mutated_mod['func_31'] = func_31
mutated_mod = relay.transform.InferType()(mutated_mod)
var_32 = relay.var("var_32", dtype = "float64", shape = (12, 14, 9))#candidate|32|(12, 14, 9)|var|float64
func_31_call = mutated_mod.get_global_var('func_31')
call_33 = func_31_call(var_32)
output = call_33
func_34 = relay.Function([var_32], output)
mutated_mod['func_34'] = func_34
mutated_mod = relay.transform.InferType()(mutated_mod)
var_73 = relay.var("var_73", dtype = "float64", shape = ())#candidate|73|()|var|float64
var_74 = relay.var("var_74", dtype = "float64", shape = (16, 7, 2))#candidate|74|(16, 7, 2)|var|float64
bop_75 = relay.divide(var_73.astype('float64'), var_74.astype('float64')) # shape=(16, 7, 2)
bop_87 = relay.right_shift(var_74.astype('uint32'), relay.reshape(bop_75.astype('uint32'), relay.shape_of(var_74))) # shape=(16, 7, 2)
output = bop_87
output2 = bop_87
func_94 = relay.Function([var_73,var_74,], output)
mod['func_94'] = func_94
mod = relay.transform.InferType()(mod)
mutated_mod['func_94'] = func_94
mutated_mod = relay.transform.InferType()(mutated_mod)
func_94_call = mutated_mod.get_global_var('func_94')
var_96 = relay.var("var_96", dtype = "float64", shape = ())#candidate|96|()|var|float64
var_97 = relay.var("var_97", dtype = "float64", shape = (16, 7, 2))#candidate|97|(16, 7, 2)|var|float64
call_95 = func_94_call(var_96,var_97,)
output = call_95
func_98 = relay.Function([var_96,var_97,], output)
mutated_mod['func_98'] = func_98
mutated_mod = relay.transform.InferType()(mutated_mod)
var_169 = relay.var("var_169", dtype = "bool", shape = (2, 2, 6))#candidate|169|(2, 2, 6)|var|bool
var_170 = relay.var("var_170", dtype = "bool", shape = (2, 2, 6))#candidate|170|(2, 2, 6)|var|bool
bop_171 = relay.logical_and(var_169.astype('bool'), relay.reshape(var_170.astype('bool'), relay.shape_of(var_169))) # shape=(2, 2, 6)
func_31_call = mod.get_global_var('func_31')
func_34_call = mutated_mod.get_global_var('func_34')
const_179 = relay.const([7.442706,-7.008358,8.856108,-9.103543,8.579403,5.354821,6.387950,4.596658,2.342266,-7.145633,2.926666,-5.929802,-2.299632,-8.816262,-4.687122,0.230226,-4.218976,-5.637925,5.897603,8.130234,5.995375,6.973843,4.458233,7.615505,-2.987302,-5.066165,-2.478586,2.175029,-0.988814,-1.254972,-8.393095,-5.840245,0.267137,-2.390598,-1.507135,2.741080,-8.319988,-7.291947,-3.148771,-8.930954,2.726483,-2.821496,9.973968,-3.686517,-6.585228,-3.289896,3.034362,9.035113,3.690069,5.423514,-4.207854,-8.266763,3.365492,-9.901610,-6.739061,5.301064,8.434481,1.909150,9.977002,-8.763211,-4.995115,-7.904011,-1.294024,-6.761684,8.493631,0.539056,-0.170087,-5.262179,-9.972258,3.535283,1.711407,8.392019,0.831938,3.922216,-9.086971,-9.304230,-2.650349,-7.372097,-8.280463,5.585371,0.133043,4.207176,-4.141256,2.738217,-3.379785,9.839632,5.345128,-3.348100,0.855204,-4.271943,-3.272822,-4.919015,1.110587,6.064641,8.594842,-1.373056,8.888151,-7.136284,1.772311,-6.693141,9.210790,-2.290567,-4.894544,2.705595,-4.079122,-7.990024,-7.613529,-6.301559,5.610058,3.093652,-4.256093,0.247965,-7.320453,6.882596,-9.599196,8.580397,0.105804,-7.672926,8.778144,7.872657,5.758911,-8.536347,-8.119233,-1.148458,-2.253322,-5.769359,3.396600,-1.280393,2.866568,3.718782,8.058708,9.346139,-3.874366,2.752196,7.393318,-1.536960,-1.990622,-0.252699,3.115037,-6.263116,1.549290,-1.995956,8.930669,-8.972011,-6.602894,-5.143344,-9.869827,-5.015104,3.490039,-1.049579,-7.819819,-0.770617,8.003019,3.778269,8.382220,-0.901376,-4.391577,5.784970,3.120020,-7.103078,4.536376,-8.505395,0.689134,8.151974,-2.506730,7.335876,-6.993157,3.236970,3.204779,-9.903413,-4.485267,9.346741,0.701341,-9.010700,-4.498815,-2.509506,1.916016,8.847382,6.947502,-3.563869,0.975118,-3.281633,3.786343,8.810535,-1.890997,7.589624,5.206265,2.692338,1.322153,4.706934,-0.249574,2.356152,-0.639257,-1.549968,8.174362,0.163420,8.810039,-5.695130,3.821661,1.557490,7.837059,5.369194,4.858130,9.870440,-9.368077,-2.973585,-3.478229,4.496884,-8.981905,-1.201548,-9.560322,-4.228530,5.258583,-6.213084,8.350462,-4.348556,-9.545843,9.988983,-9.025766,-5.309954,2.412701,-9.854262,-8.314497,9.331695,5.203201,7.519237,6.640645,3.044802,-5.290228,-6.888202,0.259420,3.722021,-5.829621,4.659821,1.448794,3.913757,-7.295671,4.960133,5.253307,-4.596729,-3.458064,-0.959607,4.022005,0.911962,7.736380,2.025400,-9.237631,-6.166385,3.065618,-8.900026,3.830061,-0.772216,4.344097,5.802187,-6.780156,9.274833,0.433659,-5.798989,-8.989282,-8.123931,9.892565,-1.080764,-7.196042,-0.279324,2.439899,5.724624,0.667107,-6.682450,4.555520,6.876845,6.032917,-7.321590,6.363609,-0.709810,-4.180501,1.152761,-4.527464,-0.385323,9.972059,0.227867,4.350693,9.284448,-2.824439,1.498174,5.002354,6.102042,2.451263,7.981698,-8.560038,-7.188562,8.101340,5.253910,-2.685804,-0.794751,-7.782316,-7.305607,-6.843734,-8.247397,7.949838,-4.287940,5.829496,-3.261991,-0.806215,1.733580,7.541016,3.623573,1.654040,-8.269859,-9.988401,5.954271,-3.974701,-7.814064,-9.213640,5.416982,-9.646428,-6.065119,6.321284,6.192719,9.895618,2.027593,-8.932215,4.514283,0.518199,9.485771,-3.454913,-1.410473,-6.473559,-4.939240,-2.052101,2.836000,6.310965,-1.807649,-2.348343,-6.845963,-6.478555,-5.808268,0.746057,-4.645217,4.156315,-3.717368,1.343640,3.700740,-2.125833,-7.710638,5.903272,4.524221,8.610181,-5.933999,6.367904,3.760110,-5.403181,8.727559,5.290138,-2.738567,4.699363,7.918630,8.149808,3.619666,-1.891934,-8.943976,8.453750,-3.600314,5.382301,-2.517989,-4.540676,-4.590393,9.339225,-3.155126,-5.674141,9.197166,8.049080,-1.916889,3.091150,-8.460699,1.384760,-3.288051,1.287337,9.009857,6.872529,6.244651,-1.220562,-9.363080,7.904287,-9.477122,4.358986,-5.049267,-7.649736,7.342596,-7.995373,9.777460,4.256782,-7.712155,2.057900,0.758299,9.457712,-0.036623,2.688823,2.031053,0.259391,-0.765948,7.822153,5.172119,8.522950,-1.650812,0.992667,2.069358,1.724675,2.278759,1.903206,4.147193,0.006076,-4.330060,-6.199437,-3.488385,-2.074166,-8.751624,3.021956,8.275026,-6.138937,-8.475860,-7.520259,-3.849319,0.600673,-5.481880,4.329974,1.133806,1.893430,7.830412,0.533333,2.519491,-9.690426,0.878971,9.289236,-3.244286,-9.134942,9.472471,-2.041062,-4.226918,4.801196,-3.808761,-1.707525,-8.637764,-4.590850,1.846596,6.090792,1.745544,-9.267643,7.989853,8.259002,-5.772740,-9.044746,-6.795383,2.577487,-1.862485,4.089152,8.085789,-0.845214,5.527417,7.684108,-4.306161,4.356207,-5.685003,-6.243223,-9.049504,1.410519,-4.483655,-0.588728,-8.423811,4.926464,6.956512,-3.460061,2.667850,-2.130144,7.633762,8.650347,-4.697696,9.531188,8.929797,-0.074919,9.295406,-3.560608,1.512121,3.481007,-7.754294,-1.049291,1.081016,8.876573,7.482966,-7.031297,1.012193,-1.970946,-2.884840,1.431597,6.091834,2.324709,0.831366,-3.260836,1.067535,1.161606,1.973591,7.204429,-3.432878,4.767918,-9.795363,-0.299884,4.663276,9.848453,-7.942627,9.657663,-8.471047,-1.321290,-8.299726,-2.255030,-6.414242,-4.063430,7.336953,4.525584,-3.264018,0.521820,-9.678063,-8.318564,-3.331974,6.929412,-7.323267,-6.064038,-9.395515,1.286159,-7.593028,-5.192492,6.411517,-7.799768,-5.587287,-7.831244,-5.794691,8.121177,8.755196,-1.995631,4.373754,-8.086143,9.306855,-3.764271,2.145232,-0.412369,0.903216,2.961090,7.581212,6.711358,5.277066,-0.610445,1.984794,-4.887102,-6.503055,-7.314239,-7.953452,6.887909,2.246484,6.148705,9.160141,-8.075346,-2.134694,2.464356,8.977137,6.383716,-2.250505,-7.506783,7.836210,-5.301338,-4.071649,2.888003,1.973038,-6.077602,-0.423627,-9.820616,6.680068,-2.430016,-6.598083,-7.999329,-3.867443,-0.304914,1.505846,-9.477710,0.312840,-0.274873,3.218178,-0.427213,8.242435,-2.187225,9.971573,7.106733,9.601373,-6.547492,-3.909500,-9.006561,7.810697,6.274521,0.762660,8.260398,8.747157,-8.375480,-2.504491,6.357539,5.234832,4.643534,-2.538805,-3.874078,7.430202,5.654556,0.734237,-2.618066,-5.419789,2.963674,-3.098180,-4.741356,7.852841,-8.762819,-7.762968,4.316562,1.120061,-7.346187,5.168405,-3.267672,5.074233,-5.234180,9.373026,0.679971,4.900185,4.011237,-5.105660,8.689769,7.567119,9.737195,3.749329,6.552163,1.683416,1.839496,-6.986160,4.148594,5.706206,-4.276695,0.506032,0.766573,4.896628,-7.045667,-9.816615,1.052272,3.020666,1.860940,3.076035,-7.412516,-6.934167,3.016812,7.003186,4.213373,3.198940,8.867398,1.126996,5.426700,0.607126,-7.146583,0.234641,2.388593,-2.665920,4.652321,-6.254872,4.810240,5.564776,8.541818,8.625085,-8.517592,5.000121,2.833448,-8.043407,4.383458,-2.685650,3.289195,4.844407,3.404648,-4.469616,4.606114,-8.090753,0.794496,9.812571,-7.079534,4.933580,7.068454,-4.889302,-7.916850,3.188834,-3.420664,0.223398,6.177627,7.914993,7.689398,-4.411561,-9.143936,5.884887,-6.687781,-0.737589,0.021481,6.622029,-5.911551,-4.219136,-8.043650,-6.407061,5.457659,0.142227,-5.643594,8.693845,-1.855255,-3.149181,-7.356793,-5.867564,9.803870,0.239464,2.081541,0.955652,-5.938881,-0.753495,-0.434257,-7.604470,-1.648472,-3.466619,-6.916764,-2.231038,3.087112,4.531654,-0.970564,0.117129,-9.863023,9.338535,1.932480,-8.596338,-4.052118,9.573276,8.655536,-3.524021,1.790001,5.378042,7.595528,-0.771006,-4.270955,-4.835776,8.727877,-0.585664,3.342208,5.240231,3.252015,-4.890050,-7.168027,-0.610295,9.322631,-9.231396,2.997495,-9.020390,5.825137,-4.831783,-6.152644,0.611281,-5.020504,-5.513130,6.047805,-1.137042,2.627731,-9.425534,-2.838760,8.074939,8.001378,-0.660077,0.750929,9.369880,2.356791,6.006563,3.650071,-2.483344,-9.653559,0.860542,-3.735230,-4.611456,-1.196375,-0.687380,2.082207,9.924498,5.630367,-0.251750,-9.907267,6.639620,9.067081,-7.453939,1.472828,-1.246133,6.079515,9.175993,5.247775,3.514306,-6.769373,1.218209,6.827772,7.234595,-2.819672,-0.250282,1.274908,3.406521,-2.198375,2.172056,-9.311863,2.646464,4.028189,7.154848,3.742760,3.771480,-6.072590,5.125312,7.777576,-5.198602,-4.311185,-3.733958,1.644604,-4.265139,1.069969,9.499084,4.355596,1.283267,-9.562966,-8.385308,4.925025,5.027233,-7.281296,-9.593522,2.109492,6.332844,4.498331,-7.573769,2.305111,-5.656593,-8.520548,-0.256670,-0.176166,0.652172,3.215441,-8.523780,8.144667,-7.355255,4.944990,1.457251,-1.343230,-8.683940,-9.318556,-9.175861,-1.743137,1.929852,-5.144837,-7.510910,0.849232,2.237712,7.024356,-5.598905,-7.262700,-3.253293,8.932719,-9.713377,3.683208,6.305469,9.066471,3.091628,-3.225361,9.306240,1.219099,2.901077,0.304665,8.820397,4.261671,2.977021,-0.101303,3.869271,5.526712,0.085577,-5.458139,-9.543474,-7.509838,7.394498,-8.420608,-7.779400,0.503251,5.191860,-8.810936,6.599257,-9.263895,0.811207,9.420439,-3.982026,2.058751,1.559751,-6.396873,3.295392,5.966744,6.252750,0.922198,5.780604,0.671201,9.518030,0.383328,7.599274,5.711923,2.642823,6.089604,2.106430,8.322224,2.835012,4.083395,6.202185,8.473185,-6.193067,-2.500812,3.077880,-8.057827,5.077260,-3.437041,9.220631,-6.564218,-6.308448,-4.093056,-5.183304,-7.186122,3.762280,-3.493408,-4.980691,9.531817,7.980235,6.621237,-6.371995,1.217412,1.672550,-0.714173,-6.882614,3.184391,1.987827,-5.057131,-2.984327,2.326080,-7.448779,-6.275488,5.314424,-5.058469,1.961330,-2.746823,4.499951,0.436558,2.389477,-6.649701,-2.457643,-0.581890,3.303601,5.774930,9.902033,-5.370117,2.290368,-4.668404,-7.032639,5.895396,-3.537094,7.545573,5.638006,9.154368,4.087317,-3.044706,3.412849,4.411514,-6.461850,-3.077905,9.532228,9.829425,6.564599,4.598587,-7.048998,1.324979,-2.602295,4.971168,-9.129008,-3.260625,-9.890206,5.383569,9.701572,-3.104950,-5.909544,7.201581,2.638297,-3.835563,7.928822,9.223230,-7.282938,-8.098628,8.058529,-3.154183,-5.154302,4.059220,-6.204147,1.197827,1.165389,6.344548,-0.908281,9.429779,2.903252,7.235763,-1.821480,0.356577,6.709723,3.912598,1.421356,-5.921841,4.788031,-9.928142,4.996424,9.760720,3.445136,-0.402773,-5.320301,-3.277030,6.987531,-0.606012,-4.304492,-0.602675,8.104492,-2.353803,7.385200,2.561575,4.868965,-5.092185,5.102153,4.489985,-0.224431,-9.889104,-0.851010,8.075228,-6.648232,6.992340,0.414810,5.062985,4.216787,6.050342,-7.098055,6.436369,-8.813558,-0.254730,-6.163415,-1.907128,4.032716,5.353011,4.525373,5.534183,-3.055933,-9.783685,-2.874411,-0.716337,-0.129163,0.790923,-7.673744,-0.047688,-0.673701,-5.377199,-6.605998,-3.691440,-6.538816,2.507814,-9.117921,6.923091,2.876022,-7.694920,1.956553,-7.339865,-5.587510,7.943989,-4.120339,1.096685,-9.140346,3.937326,-3.391609,1.099499,0.872620,8.388383,2.346319,-3.273254,-2.561863,3.393145,-5.597571,8.238109,0.963493,2.560691,-6.235198,-7.600530,9.599396,-4.359430,7.867080,-0.698344,-0.670447,-8.091426,-6.246668,5.043583,9.620814,3.594413,-6.740351,-8.635411,5.908661,7.740212,-6.787058,-3.695028,-9.074501,-9.870673,-7.953885,-7.985262,-4.434336,2.662510,-5.275018,9.253036,5.815269,7.418024,-8.267171,8.371579,6.516805,3.964087,-1.580191,0.029802,-4.345056,9.418964,-0.203284,-9.565527,-2.579367,-1.478206,-2.888169,5.529193,-7.328711,7.793626,-8.746724,-8.048163,1.675624,-9.643417,9.506454,-3.846442,9.927822,3.628516,-6.258516,-1.789996,7.856272,7.984651,-4.202453,6.816742,4.522418,1.371437,3.874674,0.299993,-0.370159,-0.994355,-7.771487,8.235461,-7.677542,6.263394,-7.325248,-3.579959,-9.840550,4.409202,-4.026556,5.017649,6.409780,3.468050,-4.117375,-3.556295,-3.293504,2.004671,0.296294,-5.961280,4.836463,-1.964183,0.528565,8.217623,-9.948021,5.976105,0.578579,-3.266433,7.484275,6.852108,4.708119,-1.576646,-9.031273,-2.320887,9.672630,-9.900455,-9.270970,-4.928733,2.673596,-9.384359,4.198260,-5.414943,-1.312119,3.113291,-7.541631,-1.674490,-1.413569,-9.898204,-1.760646,2.200861,9.637951,-8.448226,-1.162962,-1.605289,-3.166631,-9.561110,-3.038244,-6.785641,0.652069,-0.618384,-1.488657,1.191040,-2.418743,7.327321,-4.311205,-3.206209,-4.384067,-8.102335,4.396953,-9.926286,7.802176,7.874206,3.915702,-9.068505,-6.617498,5.272711,7.486888,8.676023,-2.080121,-9.705409,7.203838,-1.140978,5.581107,1.707411,9.524720,-1.680865,-0.525789,-8.573904,2.759831,-6.696446,-2.872603,-3.919755,6.780895,9.853321,0.160394,-4.227322,-8.738829,-0.893667,6.807705,-8.057608,-8.538196,7.561317,1.828436,-0.272535,2.139381,-4.100136,-1.175365,8.731583,-3.001973,3.036321,6.957292,4.745380,5.310083,5.306257,2.343812,7.847346,0.911673,-7.270325,4.570000,0.041912,2.822684,-8.723126,4.641928,4.483826,-4.946142,4.843910,0.338623,6.043777,-5.303339,5.164911,-9.497135,2.310234,-3.105460,-5.032661,2.447390,-9.912558,4.037378,-0.699510,-1.688778,7.420453,9.017705,-1.646923,8.167040,4.513677,7.881898,0.528920,4.042359,9.095768,-5.381918,7.586788,7.132721,-7.042391,-4.619844,2.158117,8.599537,8.069927,1.467447,3.449139,1.000641,2.856188,4.581958,6.280291,8.830058,-2.414785,-7.173604,0.008933,8.380113,0.830644,3.856939,5.480216,7.286749,9.877487,-4.544159,0.181222,3.171380,-0.024666,8.382327,3.832589,-8.177912,-1.331425,-1.481079,8.237941,8.070334,5.372624,1.997828,6.434037,-2.630001,-6.058223,4.281598,-5.042281,-6.191657,-2.051150,-1.060780,-2.109348,3.286351,-6.048350,5.760492,-5.326504,-3.137259,0.689206,-6.757704,-0.608739,4.123400,3.271140,-2.609391,7.641868,3.762891,-6.793623,2.925448,-6.335376,9.604976,-6.040196,-3.767375,8.889830,8.156877,5.559819,-0.247294,-8.518778,-1.938002,-2.136165,1.009462,9.076693,7.706415,6.290824,-4.265706,-1.561058,-2.181391,-2.015918,2.976622,1.652122,-4.764308,-0.302190,-3.322793,-8.265971,-4.717544,6.946345,-4.180843,-7.234660,-5.483547,9.562090,-9.598890,-5.304110,-9.906149,5.640752,-4.032062,-6.702400,1.570549,5.424472,6.552518,-2.085435,6.877569,-2.539866,-5.298444,0.903787,-6.246291,-5.356657,-5.360166,1.236055,4.216774,-5.359711,8.924873,6.937701,4.164448,-0.073913,-4.025680,2.967505,-7.591876,-1.435605,-5.366107,5.060982,-3.891926,9.277861,-4.706386,1.220871,-9.635040,1.476898,5.471913,-3.134417,-0.215998,5.403264,-0.910679,-5.168804,-6.074574,4.558863,-4.348277,4.141365,-2.494534,-3.860912,1.825340,7.791531,9.137772,3.666842,2.589902,-2.474048,-2.158523,-7.557237,-3.412130,4.039513,1.820399,0.132094,7.778001,-5.737117,-3.620773,-1.511481,0.162250,5.978910,5.414642,0.112758,-3.012581,-2.591952,1.810116,3.259799,8.324848,7.019395,-6.067684,-0.681387,9.039788,9.124022,6.296024,-9.506144,3.493142,-5.582750,-6.483486,1.201546,4.137606,-5.244363,8.751829,-5.488231,-6.586690,1.037114,-3.914803,8.561148,5.618211,1.886520,-9.676075,9.115140,6.145929,-2.601649,4.641549,6.383969,0.682412,6.485821,0.992495,8.761016,7.170479,-7.914850,2.809303,-8.837247,5.787880,7.267745,5.764936,7.727976,-9.836419,-5.151431,-7.380073,-8.129369,7.484565,-5.938482,6.154945,5.159685,-9.033922,0.499871,8.735688], dtype = "float64")#candidate|179|(1512,)|const|float64
call_178 = func_31_call(relay.reshape(const_179.astype('float64'), [12, 14, 9]))
call_180 = func_31_call(relay.reshape(const_179.astype('float64'), [12, 14, 9]))
uop_216 = relay.asin(var_169.astype('float32')) # shape=(2, 2, 6)
uop_219 = relay.log(const_179.astype('float32')) # shape=(1512,)
func_94_call = mod.get_global_var('func_94')
func_98_call = mutated_mod.get_global_var('func_98')
var_222 = relay.var("var_222", dtype = "float64", shape = ())#candidate|222|()|var|float64
var_223 = relay.var("var_223", dtype = "float64", shape = (224,))#candidate|223|(224,)|var|float64
call_221 = func_94_call(relay.reshape(var_222.astype('float64'), []), relay.reshape(var_223.astype('float64'), [16, 7, 2]), )
call_224 = func_94_call(relay.reshape(var_222.astype('float64'), []), relay.reshape(var_223.astype('float64'), [16, 7, 2]), )
uop_225 = relay.erf(uop_219.astype('float32')) # shape=(1512,)
output = relay.Tuple([bop_171,call_178,uop_216,call_221,var_222,var_223,uop_225,])
output2 = relay.Tuple([bop_171,call_180,uop_216,call_224,var_222,var_223,uop_225,])
func_236 = relay.Function([var_169,var_170,var_222,var_223,], output)
mod['func_236'] = func_236
mod = relay.transform.InferType()(mod)
var_237 = relay.var("var_237", dtype = "bool", shape = (2, 2, 6))#candidate|237|(2, 2, 6)|var|bool
var_238 = relay.var("var_238", dtype = "bool", shape = (2, 2, 6))#candidate|238|(2, 2, 6)|var|bool
var_239 = relay.var("var_239", dtype = "float64", shape = ())#candidate|239|()|var|float64
var_240 = relay.var("var_240", dtype = "float64", shape = (224,))#candidate|240|(224,)|var|float64
output = func_236(var_237,var_238,var_239,var_240,)
func_241 = relay.Function([var_237,var_238,var_239,var_240,], output)
mutated_mod['func_241'] = func_241
mutated_mod = relay.transform.InferType()(mutated_mod)
var_542 = relay.var("var_542", dtype = "bool", shape = ())#candidate|542|()|var|bool
var_543 = relay.var("var_543", dtype = "bool", shape = (1, 8, 3))#candidate|543|(1, 8, 3)|var|bool
bop_544 = relay.logical_and(var_542.astype('bool'), var_543.astype('bool')) # shape=(1, 8, 3)
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
var_548 = relay.var("var_548", dtype = "float64", shape = (224,))#candidate|548|(224,)|var|float64
call_547 = relay.TupleGetItem(func_236_call(relay.reshape(var_543.astype('bool'), [2, 2, 6]), relay.reshape(bop_544.astype('bool'), [2, 2, 6]), relay.reshape(var_542.astype('float64'), []), relay.reshape(var_548.astype('float64'), [224,]), ), 2)
call_549 = relay.TupleGetItem(func_241_call(relay.reshape(var_543.astype('bool'), [2, 2, 6]), relay.reshape(bop_544.astype('bool'), [2, 2, 6]), relay.reshape(var_542.astype('float64'), []), relay.reshape(var_548.astype('float64'), [224,]), ), 2)
func_94_call = mod.get_global_var('func_94')
func_98_call = mutated_mod.get_global_var('func_98')
call_559 = func_94_call(relay.reshape(var_542.astype('float64'), []), relay.reshape(var_548.astype('float64'), [16, 7, 2]), )
call_560 = func_94_call(relay.reshape(var_542.astype('float64'), []), relay.reshape(var_548.astype('float64'), [16, 7, 2]), )
func_31_call = mod.get_global_var('func_31')
func_34_call = mutated_mod.get_global_var('func_34')
const_574 = relay.const([[8.852177],[3.354641],[4.592024],[1.644972],[-6.141926],[-4.980252],[-7.056606],[1.765155],[8.518342],[9.876127],[1.377361],[-0.096090],[-0.353122],[-1.448081],[-2.908653],[2.358197],[-7.263320],[-0.164057],[-2.715433],[-0.391771],[8.160455],[-5.035554],[7.877275],[9.228139],[-7.098699],[-2.296922],[-2.625118],[4.514374],[2.063206],[-0.056702],[-1.985913],[4.801876],[-3.786566],[4.129052],[2.956407],[1.999248],[-9.590475],[-0.462634],[4.781097],[-2.425920],[-1.831231],[6.865256],[7.301585],[9.585056],[-1.446454],[9.633188],[5.834106],[7.444855],[-6.272482],[-5.672186],[7.639463],[-4.005016],[7.795316],[6.208495],[3.080754],[2.601483],[-6.063345],[-3.870277],[9.188544],[-4.223407],[7.430051],[5.626946],[-1.440665],[-4.773328],[3.402859],[-2.585044],[-5.439354],[-2.722622],[1.284075],[3.888832],[4.420826],[-0.782314],[0.174042],[2.908524],[5.075114],[6.573709],[5.019603],[1.134949],[4.390430],[-3.551523],[3.625171],[6.567021],[-4.631134],[7.655470],[9.103247],[-7.515305],[8.271498],[3.146418],[1.686123],[-3.758463],[-6.063474],[-8.946077],[-3.034495],[-7.486764],[8.922238],[-4.826487],[0.082148],[5.484944],[4.221700],[-5.827813],[8.501262],[7.857275],[2.734898],[7.849636],[1.204712],[9.251654],[0.312336],[-6.618594],[-2.220085],[-0.689409],[4.164865],[-0.027090],[-3.146366],[-0.239349],[-7.024146],[2.421224],[6.566245],[2.451805],[7.132272],[-4.195242],[-1.328811],[-4.940123],[1.061268],[5.200280],[6.809667],[2.199302],[-7.874513],[-5.844121],[1.086015],[-2.651020],[8.250062],[3.068421],[-1.294372],[6.456158],[-6.447775],[-9.760892],[-5.500290],[-1.297259],[1.232915],[3.997274],[4.762366],[-9.355275],[-0.974680],[0.598153],[5.715140],[6.977832],[0.340312],[-3.182520],[7.416242],[2.905396],[2.693919],[-4.023105],[-9.966393],[2.684727],[-5.001923],[0.058567],[8.029466],[7.358160],[-2.896595],[-2.778375],[-5.933398],[-7.392997],[-3.588115],[7.840315],[-8.298149],[5.764161],[1.423995],[6.817123],[6.221320],[6.797291],[6.920744],[6.733293],[-5.452359],[-9.585930],[6.881860],[8.956852],[1.374537],[3.682479],[-3.056636],[9.479878],[4.874699],[-7.811981],[4.146934],[3.456811],[-7.917486],[-3.777370],[2.223106],[-8.167320],[8.518918],[-7.163567],[2.719239],[-9.788909],[6.953125],[4.638052],[4.724560],[-2.119438],[2.458082],[5.353086],[4.954377],[2.536448],[1.093281],[4.616508],[-3.814967],[0.040811],[3.331155],[-7.382284],[5.641173],[3.091697],[1.461807],[-4.071197],[1.566744],[2.656502],[8.366624],[7.687304],[5.416806],[-8.268206],[6.360967],[2.942659],[7.771020],[9.752748],[-5.426290],[-3.282074],[-2.117679],[-9.165304],[-9.277030],[-8.270204],[-2.845878],[-8.956533],[-4.476545],[-5.466039],[9.617484],[7.452467],[-7.091454],[-8.329332],[4.151236],[-5.200798],[6.920985],[0.555182],[-5.101007],[4.840940],[-3.538454],[4.495402],[-7.217461],[-3.845112],[9.285256],[-9.157795],[3.711151],[3.232790],[4.158812],[5.759795],[6.651524],[-0.455289],[-0.457090],[3.207259],[-1.064581],[4.635136],[-7.233934],[3.102527],[5.603905],[-0.410375],[-3.098591],[7.559679],[-7.577189],[6.641561],[-5.823231],[-0.368750],[1.733456],[-6.605808],[-0.816546],[-9.659986],[8.769269],[1.344564],[-6.632054],[-5.911452],[-2.996120],[3.228493],[4.965902],[-5.522849],[8.661100],[1.581620],[-4.361675],[-8.398149],[4.849609],[-1.783323],[-0.650678],[-4.401560],[-4.283069],[3.686765],[-6.763271],[-0.313812],[-5.602441],[2.610598],[-2.915151],[6.728944],[8.507519],[3.829054],[-1.358941],[6.802109],[6.419497],[4.749619],[1.200851],[7.708732],[0.858745],[-2.921212],[-4.320380],[-3.612195],[-5.624428],[-9.874103],[1.603625],[7.037784],[9.519289],[1.924976],[-5.234624],[7.861217],[-2.151510],[7.859015],[-6.238761],[9.962355],[6.779060],[7.367384],[1.206182],[8.598892],[4.911284],[-3.184347],[0.387891],[8.109738],[3.884811],[5.795949],[-7.721814],[7.477747],[4.676029],[-1.503371],[0.639758],[-0.333679],[9.175156],[-4.457096],[6.236870],[3.000618],[1.666059],[-0.709683],[6.646386],[0.987807],[-8.669646],[-8.652246],[0.179358],[4.236002],[-9.764275],[-7.158777],[1.829829],[-3.905966],[-8.405025],[8.295380],[-8.794176],[-7.534760],[7.049983],[6.416372],[6.760100],[3.451770],[0.043983],[-6.008425],[1.431478],[5.267033],[4.622742],[6.415561],[-1.534905],[4.581454],[-1.132554],[4.535038],[6.734154],[-1.072064],[-1.499174],[5.214447],[0.348548],[4.730826],[-2.530818],[6.357797],[2.855352],[3.449577],[0.956229],[6.971464],[5.616538],[-7.074613],[-9.606681],[-2.485489],[-1.509849],[-7.515997],[-2.782092],[-8.026117],[-2.378954],[-3.267008],[2.692475],[-5.887769],[8.772859],[0.909044],[-2.301463],[-2.271788],[3.303182],[2.226956],[-1.548271],[-5.596815],[-7.278775],[6.391504],[-1.846454],[-4.949466],[3.017604],[-4.043911],[2.673104],[4.414547],[-2.502316],[2.890507],[-9.474236],[-8.873617],[-5.119248],[8.182479],[-6.791212],[3.469935],[-4.268965],[8.305633],[-9.279373],[7.674377],[3.710333],[-0.086068],[-6.694924],[6.701686],[-0.870388],[6.287268],[-2.413099],[6.067248],[5.736585],[-5.001535],[-5.999837],[-8.647372],[-5.714431],[0.512020],[-6.890765],[3.008668],[-0.915012],[-8.399217],[0.274307],[-0.124649],[-7.323169],[-5.499878],[2.810524],[1.176903],[-2.998135],[-5.614962],[-7.749062],[4.635041],[6.580866],[7.182796],[3.819079],[9.870558],[2.137979],[-3.945359],[3.106799],[-8.502001],[-6.796373],[-7.774062],[-0.011087],[-1.711863],[2.357227],[3.447127],[-6.526923],[7.824157],[-8.119192],[2.381670],[4.480139],[2.872210],[-0.229056],[1.786920],[-1.938118],[5.602152],[0.731583],[5.440352],[7.274082],[-7.415439],[-8.658656],[-1.550779],[8.080836],[-0.738457],[3.344298],[9.088247],[-8.320073],[7.390219],[6.287363],[-4.186468],[-9.477667],[-4.139771],[-1.671562],[-0.439780],[-7.898436],[-8.422400],[-6.216930],[2.703716],[-6.495656],[6.811579],[6.938822],[-9.461032],[-2.310284],[-9.191782],[1.978474],[4.256960],[-1.602588],[0.587406],[7.010969],[-1.129214],[-0.909579],[9.293874],[-3.113456],[-4.063334],[-7.236634],[-3.137637],[9.344427],[-7.511219],[-0.514809],[9.925009],[1.821063],[9.640729],[-2.927040],[-6.360171],[-9.006340],[5.775838],[-8.018036],[-1.312650],[9.354917],[2.901628],[-1.398638],[5.670493],[2.764107],[6.981086],[-0.262000],[7.248079],[-7.583740],[9.323157],[1.174610],[-9.658215],[3.273794],[-5.474920],[-4.010635],[-2.686213],[-2.026309],[-2.402230],[3.336767],[-4.310583],[8.477359],[-7.928636],[-9.361588],[0.082189],[-5.421584],[0.535681],[5.950452],[-1.809555],[-5.314615],[-0.949188],[9.325291],[-9.957909],[-8.136214],[-6.343068],[2.124427],[-2.797158],[0.477223],[-5.761400],[-9.313444],[-8.580610],[7.262902],[-3.267204],[8.221211],[5.210372],[-7.064720],[5.516508],[-0.775175],[5.549987],[-5.975696],[-7.910155],[-3.943828],[-6.034909],[0.871264],[8.361468],[-8.649243],[-6.423327],[2.652946],[-0.343135],[3.661770],[-7.946024],[0.047963],[1.475478],[-2.582019],[2.694620],[3.927465],[-6.913039],[-9.145140],[4.055152],[5.358752],[-3.773676],[-4.223933],[9.599703],[8.662420],[-1.884519],[5.744573],[-1.580224],[-2.326059],[-3.329815],[-4.567842],[5.398601],[5.595140],[0.945520],[-3.977491],[4.950446],[7.039029],[-5.424668],[5.840360],[-1.358001],[0.466454],[3.432347],[1.319156],[-5.200458],[-1.520020],[-1.923525],[-5.516060],[-7.497132],[5.580656],[3.215954],[-3.821647],[-8.097593],[-5.250316],[5.221723],[-3.311017],[0.490646],[-8.183401],[4.493416],[-3.686486],[-9.275621],[-8.644339],[-0.798853],[-4.016275],[8.432918],[-2.583160],[-8.703913],[5.792656],[6.311750],[1.228914],[2.712222],[-1.601677],[9.721299],[-0.426419],[-0.624618],[-1.195687],[8.159793],[-5.285256],[1.594091],[-0.518259],[-1.415354],[-9.482862],[3.557558],[9.625677],[0.628207],[0.145399],[2.645100],[2.302223],[-5.845528],[4.843183],[8.785447],[9.867297],[-2.759936],[-6.032882],[5.690385],[-0.223148],[4.680040],[-2.409771],[5.718624],[0.276202],[-3.136169],[5.249195],[-3.874729],[-9.797884],[-3.483182],[-4.901900],[-3.124368],[-0.041949],[6.089376],[-9.093930],[3.127446],[-3.579332],[7.359267],[8.579103],[9.222890],[-0.706802],[5.652692],[0.814764],[-5.658021],[4.828105],[1.598260],[-1.612505],[4.436314],[-4.774122],[9.448628],[0.497668],[-8.030315],[-5.991842],[-6.547465],[-3.300862],[-9.920225],[8.994978],[-4.864047],[-4.136112],[3.823188],[-4.422814],[4.137297],[-4.267688],[1.746940],[5.046002],[0.323215],[-8.772889],[-6.053808],[-7.408202],[-8.676430],[-1.577091],[8.571056],[8.390046],[-4.950068],[-3.738006],[0.500886],[-9.817681],[-0.017129],[7.356354],[-0.689909],[-4.185167],[-3.313446],[6.981091],[7.403406],[3.393212],[-1.259234],[2.501189],[-1.450258],[1.196846],[-5.174210],[-2.910066],[-5.735539],[-3.740394],[1.386412],[7.545853],[-4.232944],[4.810879],[-2.450636],[3.479246],[-8.592719],[6.596149],[7.777406],[-6.702775],[8.935233],[-4.959543],[-4.029739],[8.870137],[-7.592598],[6.573424],[-6.024027],[1.155509],[-3.189967],[0.217519],[6.696009],[6.217243],[4.328457],[-6.501925],[0.261065],[-4.493645],[-7.636670],[-7.374419],[2.151642],[-5.209676],[4.379352],[2.672520],[-3.566784],[-0.841472],[-9.544213],[0.179893],[-5.534525],[2.927090],[8.408776],[-1.521526],[5.461485],[-6.128758],[-1.509842],[-7.833106],[-4.372644],[6.932112],[-6.154704],[8.004766],[8.632496],[7.007078],[4.337551],[8.171964],[1.311037],[-3.174364],[-6.179315],[0.223377],[1.789226],[4.781047],[-4.947610],[-1.849324],[-0.207328],[-7.689127],[-9.499818],[4.367092],[6.936016],[0.885655],[0.518051],[4.589789],[-1.518182],[-6.640687],[-1.260508],[-0.896128],[6.071794],[8.869812],[5.189035],[-8.055501],[9.339471],[-5.603920],[6.456008],[1.233664],[-9.983471],[2.133957],[3.829682],[1.217366],[-6.764823],[-3.382775],[2.909723],[4.362145],[0.484069],[6.911746],[-8.042712],[-5.144990],[-5.967767],[6.218850],[7.432242],[9.818337],[-8.184859],[0.297490],[2.405104],[6.307182],[-7.422252],[-8.766884],[-2.989459],[-3.428449],[4.588224],[-0.839371],[-1.386188],[5.040693],[5.034021],[-9.218714],[-1.175049],[-0.215152],[-4.234330],[-4.472874],[-6.676713],[-8.373404],[-1.257949],[7.336009],[-8.344393],[-3.980770],[3.363844],[8.336637],[0.363775],[-0.512412],[3.264495],[4.851767],[-0.970433],[-9.773182],[-1.701965],[-9.421203],[-4.165376],[6.511319],[-7.560155],[6.304645],[1.924164],[-3.412727],[-7.142550],[-9.698987],[-4.444031],[-5.837087],[5.145662],[5.817261],[-0.906632],[-5.288280],[6.455863],[0.434076],[9.954245],[-6.512141],[3.901331],[-1.462867],[8.565637],[1.063401],[-5.228207],[9.703569],[5.166672],[0.787742],[-5.549685],[-2.548127],[-4.396833],[6.397052],[-8.328106],[-4.786822],[2.449395],[0.040657],[-7.158937],[4.860633],[-0.730297],[-6.641200],[-4.970014],[7.898908],[6.344824],[-5.310861],[-3.604401],[-6.714861],[-1.999734],[-2.287447],[6.185549],[-3.150049],[6.502227],[1.947257],[-3.792066],[2.316166],[-9.991859],[3.526459],[1.227496],[-2.265016],[6.915880],[-7.771668],[2.978141],[2.060074],[-4.459142],[-2.393146],[-1.058724],[7.986001],[-3.277203],[1.284387],[8.221656],[1.621556],[-8.567515],[2.376533],[-2.047546],[1.981872],[-1.246300],[2.094967],[-3.822234],[8.111365],[-2.233522],[-9.413426],[5.491060],[-5.943352],[9.949757],[-8.115020],[-5.740711],[-2.646668],[-7.055693],[-4.378917],[7.953385],[2.918429],[-9.864862],[2.949809],[9.473830],[1.221335],[6.021855],[-4.503044],[1.138773],[-8.530347],[-2.256871],[-2.822551],[5.787915],[-4.503598],[-7.641973],[-1.737730],[-9.253646],[4.665965],[-3.959341],[0.499380],[-5.029862],[9.436570],[3.252256],[-0.041130],[-9.828029],[4.300950],[2.459123],[1.606053],[-2.375422],[-9.521585],[-5.595026],[-4.763144],[-1.741674],[7.702665],[-7.704324],[-0.946466],[-7.064381],[-5.641758],[1.823439],[-0.075583],[-8.034061],[5.548632],[1.244767],[-0.796703],[-3.572275],[-2.995289],[5.592067],[9.617432],[1.717921],[-9.075987],[6.157070],[-3.712529],[-4.142024],[6.413061],[1.421137],[9.425759],[3.464136],[5.993744],[4.229356],[-3.536494],[-4.077721],[-7.353083],[2.571085],[-4.988993],[9.306998],[4.717618],[1.994225],[-2.162095],[-0.035990],[-6.209838],[7.558069],[1.959606],[-1.447811],[-7.794209],[-2.745594],[6.934048],[2.219006],[-1.092811],[4.683137],[1.749458],[9.221678],[8.850087],[-7.059935],[-2.080227],[-9.316506],[-5.286311],[-1.032976],[-4.001575],[-0.137976],[-7.880174],[-6.087646],[-7.765520],[-5.645609],[-5.224036],[6.820553],[-6.361834],[-9.622326],[5.916890],[5.963439],[-9.377796],[-4.325352],[1.299299],[-8.139995],[8.952386],[-9.184680],[-8.571236],[8.339243],[8.448952],[9.512982],[0.638579],[4.650733],[-5.308987],[-0.456160],[3.424049],[8.769895],[8.928258],[-2.091490],[1.541717],[-4.943299],[-0.621414],[-9.985225],[1.690509],[8.855897],[9.195010],[9.465083],[4.482250],[-4.329928],[-3.670332],[2.563472],[-4.254030],[9.679479],[0.944188],[1.270745],[0.494351],[1.042726],[-5.844289],[-6.504879],[-3.619029],[-0.572689],[-8.509588],[-2.275954],[8.450464],[7.666920],[5.750860],[6.725394],[-7.079937],[8.667513],[-0.385514],[-4.368170],[9.232499],[5.276381],[7.754938],[4.136255],[0.965810],[-4.511132],[0.142278],[5.221360],[7.542873],[6.506771],[-3.617999],[5.828792],[9.757857],[-2.359301],[7.096201],[6.653663],[-0.695814],[-5.942456],[-6.171750],[2.928141],[-3.841259],[-2.006740],[4.785917],[-3.319263],[-1.753979],[4.873482],[-5.298537],[6.303332],[-1.705532],[3.515297],[-8.414680],[-4.817516],[-1.718722],[1.511683],[-3.683613],[-0.096249],[-7.493026],[5.810300],[9.013619],[-0.240080],[6.160826],[-8.862575],[-8.708145],[2.530370],[1.465391],[-1.064355],[-8.176666],[-6.477044],[-9.342099],[8.690749],[5.829504],[5.365627],[-0.059844],[5.634341],[-4.921692],[-1.261732],[2.567065],[3.010115],[-0.284338],[-3.583628],[3.718756],[-4.342504],[7.523319],[-2.847982],[-5.081759],[3.094156],[-1.519695],[1.017993],[0.620984],[-7.244664],[-1.221055],[2.209855],[0.665029],[-2.646304],[2.187692],[2.000543],[0.746147],[-5.335178],[-4.630339],[-7.955379],[0.232265],[-3.296934],[-3.288523],[-9.322842],[-0.639216],[9.763805],[3.430509],[3.789782],[8.955819],[3.344552],[-0.412165],[-3.605911],[-0.035676],[0.577685],[1.717467],[4.425422],[0.665432],[-5.349031],[3.615881],[2.976500],[5.612743],[-4.021349],[3.703732],[2.143632],[9.707447],[7.853081],[6.420941],[-9.784849],[6.143711],[4.200696],[4.923218],[7.439580],[-7.774554],[5.413543],[-8.764293],[-9.902467],[8.322856],[6.137003],[-5.674660],[-6.626802],[4.247919],[5.288379],[1.292713],[-8.551901],[1.671411],[4.190630],[-0.596451],[9.399902],[2.928822],[-2.324354],[8.155229],[6.940677],[9.083442],[6.083810],[-0.957697],[-0.207711],[-5.905353],[-9.272893],[0.991295],[-8.661614],[-0.026365],[8.831891],[-1.223567],[-2.577546],[8.372282],[0.005855],[1.387916],[-3.466204],[5.799017],[-9.314639],[5.232447],[9.479963],[-9.896039],[4.801159],[-6.613552],[6.412736],[1.911769],[0.422846],[4.483433],[3.714489],[-2.928182],[-9.813165],[-3.409405],[5.733024],[-1.145374],[3.975484],[-6.484827],[6.643422],[-5.824570],[-8.473654],[-9.512340],[-9.873449],[-2.320657],[2.685620],[1.281324],[1.282901],[-8.471547],[6.854275],[-1.870679],[-9.685770],[-3.171639],[-3.382196],[1.153968],[0.300969],[-6.626036],[-0.056848],[5.378521],[-2.865618],[5.475121],[-7.763814],[3.467607],[-3.058676],[6.193484],[-7.821390],[-7.405471],[-7.449113],[-0.806704],[9.407099],[3.822089],[1.519086],[-0.655967],[-6.392794],[-3.498727],[-7.791557],[5.899594],[-1.391565],[-5.937335],[-4.160881],[-6.999709],[3.052325],[4.243118],[9.967027],[-5.735073],[9.886777],[-9.187187],[7.340203],[6.908082],[-3.546381],[-8.241526],[2.638346],[0.775442],[-4.525685],[-3.476771],[1.787201],[8.825671],[-5.215923],[8.049759],[-1.661935],[-2.560437],[2.197769],[4.249985],[-8.396923],[-2.616611],[-0.118158],[2.049578],[-5.737863],[-2.047648],[-1.439855],[3.369191],[6.875705],[-3.770595],[-0.799335],[-8.256272],[0.123099],[-6.895764],[8.664204],[8.083963],[-4.776830],[-7.861706],[-7.972326],[-9.946802],[6.473494],[-7.473586],[-1.124673],[6.991514],[-5.291182],[2.748307],[9.313788],[-4.619356],[-5.489687],[0.788758],[-1.957553],[1.362829],[9.017197],[1.383096],[0.450250],[-7.739702],[-8.118176],[-3.269187],[4.967395],[4.878443],[4.687016],[-2.124678],[-7.029882],[5.933921],[3.990480],[-5.881752],[4.011833],[3.706557],[8.118639],[2.206572],[-3.099979],[9.505915],[-8.900001],[7.009480],[-0.469034],[9.585794],[1.910418],[-3.612085],[-0.624616],[7.120936],[3.143849],[4.378835],[8.261302],[4.302372],[-4.197686],[-9.906311],[-1.791903],[9.674844],[8.999963],[-8.155840],[7.220134],[-2.634472],[4.381339],[-9.973393],[-2.830976],[-9.862320],[2.814933],[0.839685],[-2.393209],[-2.587711],[2.298440],[2.557715],[-7.799147],[-7.509458],[-4.357430],[7.801150],[-6.401060],[-9.653168],[3.759611],[-0.168777],[-0.553692],[9.230679],[-0.293793],[8.130845],[2.520152],[7.684771],[-6.029963],[-1.305305],[-1.778725],[-4.818214],[-2.226687],[-0.852448],[0.523932],[-0.647432],[-8.750881],[5.721366],[0.870048],[-4.563990],[6.666700],[-1.498138],[1.573778],[2.814496],[7.967449],[5.988582],[-3.121447],[-9.158326],[7.773714],[3.071764],[3.234547],[9.937480],[-5.775980],[4.007468],[2.839272],[-1.146005],[3.401966],[1.438240],[-0.491840],[-9.148078],[4.312404],[5.456090],[4.195861],[-1.107866],[8.949163],[-4.478234],[3.893738],[-1.253530],[-5.892780],[-6.893107],[5.242093],[-8.983704],[8.121834],[-5.041160],[-0.478291],[9.124243],[-3.745563],[6.342818],[-1.120696],[-6.959933],[2.810029],[1.426208],[1.566363],[1.005654],[7.808680],[0.360756],[-9.455342],[3.287730],[-3.226678],[3.614563],[-1.209983],[-9.094849],[-6.607843],[-6.316268],[4.876182],[-8.196048],[6.140167],[9.052580],[3.060918],[-8.434766],[-9.787972],[7.232932],[2.804236],[5.637421],[-4.232900],[-6.869017],[3.371826],[6.380822],[-6.093659]], dtype = "float64")#candidate|574|(1512, 1)|const|float64
call_573 = func_31_call(relay.reshape(const_574.astype('float64'), [12, 14, 9]))
call_575 = func_31_call(relay.reshape(const_574.astype('float64'), [12, 14, 9]))
output = relay.Tuple([bop_544,call_547,var_548,call_559,call_573,const_574,])
output2 = relay.Tuple([bop_544,call_549,var_548,call_560,call_575,const_574,])
func_590 = relay.Function([var_542,var_543,var_548,], output)
mod['func_590'] = func_590
mod = relay.transform.InferType()(mod)
mutated_mod['func_590'] = func_590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_590_call = mutated_mod.get_global_var('func_590')
var_592 = relay.var("var_592", dtype = "bool", shape = ())#candidate|592|()|var|bool
var_593 = relay.var("var_593", dtype = "bool", shape = (1, 8, 3))#candidate|593|(1, 8, 3)|var|bool
var_594 = relay.var("var_594", dtype = "float64", shape = (224,))#candidate|594|(224,)|var|float64
call_591 = func_590_call(var_592,var_593,var_594,)
output = call_591
func_595 = relay.Function([var_592,var_593,var_594,], output)
mutated_mod['func_595'] = func_595
mutated_mod = relay.transform.InferType()(mutated_mod)
var_664 = relay.var("var_664", dtype = "uint16", shape = (2, 5, 6))#candidate|664|(2, 5, 6)|var|uint16
var_665 = relay.var("var_665", dtype = "uint16", shape = (2, 5, 6))#candidate|665|(2, 5, 6)|var|uint16
bop_666 = relay.minimum(var_664.astype('uint16'), relay.reshape(var_665.astype('uint16'), relay.shape_of(var_664))) # shape=(2, 5, 6)
output = bop_666
output2 = bop_666
func_672 = relay.Function([var_664,var_665,], output)
mod['func_672'] = func_672
mod = relay.transform.InferType()(mod)
mutated_mod['func_672'] = func_672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_672_call = mutated_mod.get_global_var('func_672')
var_674 = relay.var("var_674", dtype = "uint16", shape = (2, 5, 6))#candidate|674|(2, 5, 6)|var|uint16
var_675 = relay.var("var_675", dtype = "uint16", shape = (2, 5, 6))#candidate|675|(2, 5, 6)|var|uint16
call_673 = func_672_call(var_674,var_675,)
output = call_673
func_676 = relay.Function([var_674,var_675,], output)
mutated_mod['func_676'] = func_676
mutated_mod = relay.transform.InferType()(mutated_mod)
var_738 = relay.var("var_738", dtype = "float64", shape = (4, 7, 7))#candidate|738|(4, 7, 7)|var|float64
uop_739 = relay.sqrt(var_738.astype('float64')) # shape=(4, 7, 7)
uop_743 = relay.sin(uop_739.astype('float64')) # shape=(4, 7, 7)
output = uop_743
output2 = uop_743
func_746 = relay.Function([var_738,], output)
mod['func_746'] = func_746
mod = relay.transform.InferType()(mod)
mutated_mod['func_746'] = func_746
mutated_mod = relay.transform.InferType()(mutated_mod)
var_747 = relay.var("var_747", dtype = "float64", shape = (4, 7, 7))#candidate|747|(4, 7, 7)|var|float64
func_746_call = mutated_mod.get_global_var('func_746')
call_748 = func_746_call(var_747)
output = call_748
func_749 = relay.Function([var_747], output)
mutated_mod['func_749'] = func_749
mutated_mod = relay.transform.InferType()(mutated_mod)
var_869 = relay.var("var_869", dtype = "float64", shape = (9, 6, 13))#candidate|869|(9, 6, 13)|var|float64
uop_870 = relay.erf(var_869.astype('float64')) # shape=(9, 6, 13)
output = relay.Tuple([uop_870,])
output2 = relay.Tuple([uop_870,])
func_875 = relay.Function([var_869,], output)
mod['func_875'] = func_875
mod = relay.transform.InferType()(mod)
mutated_mod['func_875'] = func_875
mutated_mod = relay.transform.InferType()(mutated_mod)
var_876 = relay.var("var_876", dtype = "float64", shape = (9, 6, 13))#candidate|876|(9, 6, 13)|var|float64
func_875_call = mutated_mod.get_global_var('func_875')
call_877 = func_875_call(var_876)
output = call_877
func_878 = relay.Function([var_876], output)
mutated_mod['func_878'] = func_878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1014 = relay.var("var_1014", dtype = "float32", shape = (13, 14, 16))#candidate|1014|(13, 14, 16)|var|float32
uop_1015 = relay.atan(var_1014.astype('float32')) # shape=(13, 14, 16)
output = uop_1015
output2 = uop_1015
func_1021 = relay.Function([var_1014,], output)
mod['func_1021'] = func_1021
mod = relay.transform.InferType()(mod)
var_1022 = relay.var("var_1022", dtype = "float32", shape = (13, 14, 16))#candidate|1022|(13, 14, 16)|var|float32
output = func_1021(var_1022)
func_1023 = relay.Function([var_1022], output)
mutated_mod['func_1023'] = func_1023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1155 = relay.var("var_1155", dtype = "float64", shape = ())#candidate|1155|()|var|float64
var_1156 = relay.var("var_1156", dtype = "float64", shape = (13, 4, 13))#candidate|1156|(13, 4, 13)|var|float64
bop_1157 = relay.mod(var_1155.astype('float64'), var_1156.astype('float64')) # shape=(13, 4, 13)
output = relay.Tuple([bop_1157,])
output2 = relay.Tuple([bop_1157,])
func_1172 = relay.Function([var_1155,var_1156,], output)
mod['func_1172'] = func_1172
mod = relay.transform.InferType()(mod)
mutated_mod['func_1172'] = func_1172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1172_call = mutated_mod.get_global_var('func_1172')
var_1174 = relay.var("var_1174", dtype = "float64", shape = ())#candidate|1174|()|var|float64
var_1175 = relay.var("var_1175", dtype = "float64", shape = (13, 4, 13))#candidate|1175|(13, 4, 13)|var|float64
call_1173 = func_1172_call(var_1174,var_1175,)
output = call_1173
func_1176 = relay.Function([var_1174,var_1175,], output)
mutated_mod['func_1176'] = func_1176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2193 = relay.var("var_2193", dtype = "int32", shape = (2, 10, 13))#candidate|2193|(2, 10, 13)|var|int32
var_2194 = relay.var("var_2194", dtype = "int32", shape = (2, 10, 13))#candidate|2194|(2, 10, 13)|var|int32
bop_2195 = relay.greater(var_2193.astype('bool'), relay.reshape(var_2194.astype('bool'), relay.shape_of(var_2193))) # shape=(2, 10, 13)
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
var_2203 = relay.var("var_2203", dtype = "bool", shape = (24,))#candidate|2203|(24,)|var|bool
var_2204 = relay.var("var_2204", dtype = "float64", shape = ())#candidate|2204|()|var|float64
var_2205 = relay.var("var_2205", dtype = "float64", shape = (224,))#candidate|2205|(224,)|var|float64
call_2202 = relay.TupleGetItem(func_236_call(relay.reshape(var_2203.astype('bool'), [2, 2, 6]), relay.reshape(var_2203.astype('bool'), [2, 2, 6]), relay.reshape(var_2204.astype('float64'), []), relay.reshape(var_2205.astype('float64'), [224,]), ), 6)
call_2206 = relay.TupleGetItem(func_241_call(relay.reshape(var_2203.astype('bool'), [2, 2, 6]), relay.reshape(var_2203.astype('bool'), [2, 2, 6]), relay.reshape(var_2204.astype('float64'), []), relay.reshape(var_2205.astype('float64'), [224,]), ), 6)
func_590_call = mod.get_global_var('func_590')
func_595_call = mutated_mod.get_global_var('func_595')
call_2210 = relay.TupleGetItem(func_590_call(relay.reshape(var_2204.astype('bool'), []), relay.reshape(var_2203.astype('bool'), [1, 8, 3]), relay.reshape(var_2205.astype('float64'), [224,]), ), 3)
call_2211 = relay.TupleGetItem(func_595_call(relay.reshape(var_2204.astype('bool'), []), relay.reshape(var_2203.astype('bool'), [1, 8, 3]), relay.reshape(var_2205.astype('float64'), [224,]), ), 3)
func_31_call = mod.get_global_var('func_31')
func_34_call = mutated_mod.get_global_var('func_34')
call_2221 = func_31_call(relay.reshape(call_2202.astype('float64'), [12, 14, 9]))
call_2222 = func_31_call(relay.reshape(call_2202.astype('float64'), [12, 14, 9]))
output = relay.Tuple([bop_2195,call_2202,var_2203,var_2204,var_2205,call_2210,call_2221,])
output2 = relay.Tuple([bop_2195,call_2206,var_2203,var_2204,var_2205,call_2211,call_2222,])
func_2223 = relay.Function([var_2193,var_2194,var_2203,var_2204,var_2205,], output)
mod['func_2223'] = func_2223
mod = relay.transform.InferType()(mod)
mutated_mod['func_2223'] = func_2223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2223_call = mutated_mod.get_global_var('func_2223')
var_2225 = relay.var("var_2225", dtype = "int32", shape = (2, 10, 13))#candidate|2225|(2, 10, 13)|var|int32
var_2226 = relay.var("var_2226", dtype = "int32", shape = (2, 10, 13))#candidate|2226|(2, 10, 13)|var|int32
var_2227 = relay.var("var_2227", dtype = "bool", shape = (24,))#candidate|2227|(24,)|var|bool
var_2228 = relay.var("var_2228", dtype = "float64", shape = ())#candidate|2228|()|var|float64
var_2229 = relay.var("var_2229", dtype = "float64", shape = (224,))#candidate|2229|(224,)|var|float64
call_2224 = func_2223_call(var_2225,var_2226,var_2227,var_2228,var_2229,)
output = call_2224
func_2230 = relay.Function([var_2225,var_2226,var_2227,var_2228,var_2229,], output)
mutated_mod['func_2230'] = func_2230
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2318 = relay.const(4, dtype = "int8")#candidate|2318|()|const|int8
var_2319 = relay.var("var_2319", dtype = "int8", shape = (1, 11, 1))#candidate|2319|(1, 11, 1)|var|int8
bop_2320 = relay.bitwise_and(const_2318.astype('int8'), var_2319.astype('int8')) # shape=(1, 11, 1)
output = relay.Tuple([bop_2320,])
output2 = relay.Tuple([bop_2320,])
func_2324 = relay.Function([var_2319,], output)
mod['func_2324'] = func_2324
mod = relay.transform.InferType()(mod)
var_2325 = relay.var("var_2325", dtype = "int8", shape = (1, 11, 1))#candidate|2325|(1, 11, 1)|var|int8
output = func_2324(var_2325)
func_2326 = relay.Function([var_2325], output)
mutated_mod['func_2326'] = func_2326
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2627 = relay.var("var_2627", dtype = "float64", shape = (9, 12, 9))#candidate|2627|(9, 12, 9)|var|float64
var_2628 = relay.var("var_2628", dtype = "float64", shape = (9, 12, 9))#candidate|2628|(9, 12, 9)|var|float64
bop_2629 = relay.less(var_2627.astype('bool'), relay.reshape(var_2628.astype('bool'), relay.shape_of(var_2627))) # shape=(9, 12, 9)
output = bop_2629
output2 = bop_2629
func_2634 = relay.Function([var_2627,var_2628,], output)
mod['func_2634'] = func_2634
mod = relay.transform.InferType()(mod)
mutated_mod['func_2634'] = func_2634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mutated_mod.get_global_var('func_2634')
var_2636 = relay.var("var_2636", dtype = "float64", shape = (9, 12, 9))#candidate|2636|(9, 12, 9)|var|float64
var_2637 = relay.var("var_2637", dtype = "float64", shape = (9, 12, 9))#candidate|2637|(9, 12, 9)|var|float64
call_2635 = func_2634_call(var_2636,var_2637,)
output = call_2635
func_2638 = relay.Function([var_2636,var_2637,], output)
mutated_mod['func_2638'] = func_2638
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2674 = relay.var("var_2674", dtype = "uint16", shape = (4, 1, 8))#candidate|2674|(4, 1, 8)|var|uint16
var_2675 = relay.var("var_2675", dtype = "uint16", shape = (4, 7, 8))#candidate|2675|(4, 7, 8)|var|uint16
bop_2676 = relay.not_equal(var_2674.astype('bool'), var_2675.astype('bool')) # shape=(4, 7, 8)
output = relay.Tuple([bop_2676,])
output2 = relay.Tuple([bop_2676,])
func_2693 = relay.Function([var_2674,var_2675,], output)
mod['func_2693'] = func_2693
mod = relay.transform.InferType()(mod)
var_2694 = relay.var("var_2694", dtype = "uint16", shape = (4, 1, 8))#candidate|2694|(4, 1, 8)|var|uint16
var_2695 = relay.var("var_2695", dtype = "uint16", shape = (4, 7, 8))#candidate|2695|(4, 7, 8)|var|uint16
output = func_2693(var_2694,var_2695,)
func_2696 = relay.Function([var_2694,var_2695,], output)
mutated_mod['func_2696'] = func_2696
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2710 = relay.var("var_2710", dtype = "float32", shape = ())#candidate|2710|()|var|float32
var_2711 = relay.var("var_2711", dtype = "float32", shape = (3, 5, 9))#candidate|2711|(3, 5, 9)|var|float32
bop_2712 = relay.floor_mod(var_2710.astype('float32'), var_2711.astype('float32')) # shape=(3, 5, 9)
output = bop_2712
output2 = bop_2712
func_2721 = relay.Function([var_2710,var_2711,], output)
mod['func_2721'] = func_2721
mod = relay.transform.InferType()(mod)
mutated_mod['func_2721'] = func_2721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2721_call = mutated_mod.get_global_var('func_2721')
var_2723 = relay.var("var_2723", dtype = "float32", shape = ())#candidate|2723|()|var|float32
var_2724 = relay.var("var_2724", dtype = "float32", shape = (3, 5, 9))#candidate|2724|(3, 5, 9)|var|float32
call_2722 = func_2721_call(var_2723,var_2724,)
output = call_2722
func_2725 = relay.Function([var_2723,var_2724,], output)
mutated_mod['func_2725'] = func_2725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2819 = relay.var("var_2819", dtype = "float32", shape = (6, 3, 14))#candidate|2819|(6, 3, 14)|var|float32
uop_2820 = relay.tan(var_2819.astype('float32')) # shape=(6, 3, 14)
bop_2825 = relay.divide(uop_2820.astype('float64'), relay.reshape(var_2819.astype('float64'), relay.shape_of(uop_2820))) # shape=(6, 3, 14)
func_2693_call = mod.get_global_var('func_2693')
func_2696_call = mutated_mod.get_global_var('func_2696')
const_2832 = relay.const([10,1,9,-3,6,1,10,7,4,-7,5,-4,-2,7,5,-6,-4,-2,-6,5,4,-9,-4,6,-6,-10,4,-7,4,6,4,6], dtype = "uint16")#candidate|2832|(32,)|const|uint16
var_2833 = relay.var("var_2833", dtype = "uint16", shape = (224,))#candidate|2833|(224,)|var|uint16
call_2831 = relay.TupleGetItem(func_2693_call(relay.reshape(const_2832.astype('uint16'), [4, 1, 8]), relay.reshape(var_2833.astype('uint16'), [4, 7, 8]), ), 0)
call_2834 = relay.TupleGetItem(func_2696_call(relay.reshape(const_2832.astype('uint16'), [4, 1, 8]), relay.reshape(var_2833.astype('uint16'), [4, 7, 8]), ), 0)
func_1172_call = mod.get_global_var('func_1172')
func_1176_call = mutated_mod.get_global_var('func_1176')
const_2843 = relay.const(-6.238176, dtype = "float64")#candidate|2843|()|const|float64
const_2844 = relay.const([3.081216,9.834527,6.487475,6.328936,-6.310862,-5.656487,-5.004065,2.671411,3.847643,-9.632973,5.491014,-3.613068,-0.913334,-3.364441,6.363614,-2.377539,7.828626,3.577983,-0.549876,-8.375522,9.490218,-5.452524,4.690681,-3.436931,7.286127,-2.384343,0.192407,-2.242386,8.555351,7.034331,5.553211,0.346559,-8.077699,2.507256,9.055648,9.505965,-0.308472,-8.132900,1.814321,-3.260061,-6.648698,2.238181,-8.198570,9.092159,-6.140900,-4.538381,-0.243393,0.387581,-0.066098,-6.112814,-7.222310,-2.290983,9.272779,2.762424,5.948972,7.973251,-5.537645,9.378646,-1.653460,-6.909850,-3.734833,-5.480442,4.000931,6.111784,-9.742814,4.459556,3.027627,-6.756654,3.202476,9.213205,8.434850,-9.342635,-0.220652,-6.310995,-7.608577,3.101360,-5.360065,-5.581517,9.483608,7.191490,7.056158,0.376816,6.206901,3.619612,6.493386,5.638618,8.484878,-1.903058,-5.721651,8.395998,4.915454,8.003884,-1.785914,4.172812,0.043825,-8.640566,-2.797846,2.827593,4.509002,-6.784542,1.297029,6.786625,9.179716,-5.865062,8.024449,-1.179056,9.684968,-1.715060,1.053948,2.319752,-9.070041,4.894145,3.970763,-2.257477,2.406394,9.984691,2.299848,-4.464318,-3.040285,-6.583282,-9.777575,3.267487,-6.471902,9.742573,1.913321,-7.859941,-8.099235,-1.865009,-0.733281,-8.907084,0.340366,-7.667343,2.714031,1.605636,-7.341847,2.533354,6.898694,-5.982351,-3.094523,4.822890,-2.400208,8.634498,-1.670077,3.443303,4.991718,-3.924269,0.892596,1.335362,3.296536,5.074220,-4.712028,-2.810166,3.763066,3.306029,5.053494,2.322037,-5.643134,-4.484232,9.044428,9.036685,-1.503515,7.192064,-1.059016,-5.612467,-7.573897,5.325969,-0.275843,-5.873719,-5.952087,0.896642,-2.185038,-9.350336,0.340555,7.702112,-4.405994,5.665243,6.729562,-1.299609,4.144681,7.156451,-0.783108,-8.650364,5.264012,-2.121458,-9.633354,2.525749,9.992646,8.257286,-8.826415,9.550066,3.169230,6.838229,9.858015,1.226666,-6.350777,-0.021685,6.950706,9.596924,7.725508,1.794968,7.315130,7.109955,-8.264655,-1.729033,3.194882,2.091847,-4.156316,1.968387,-9.586598,1.608633,-5.710880,-7.375892,-8.740793,-1.655341,3.828632,-4.428798,-1.441999,7.671474,-2.016172,6.594390,8.158793,2.912867,-1.487279,-5.414601,6.754928,5.323529,4.979824,2.193716,-3.078785,-7.548139,5.462404,-3.235796,-1.873267,-7.875325,5.775541,-7.710547,-5.509007,3.832296,9.498616,-1.742507,8.222417,-4.562440,0.662171,-9.482138,9.346132,6.609261,3.124698,-7.604442,-6.586616,2.079331,-3.478785,-8.564199,0.813141,9.135217,4.188839,4.268240,-9.012716,-8.309621,0.175197,7.520448,1.469266,-4.150989,-0.964927,-0.004238,0.456431,3.550196,6.208562,3.013057,8.061703,1.855339,-4.373018,1.682493,-1.732209,-5.547423,-9.699447,-8.336453,-6.746837,9.691812,1.855270,0.413062,4.134862,5.016799,6.734307,4.485287,7.197176,5.812776,3.466410,-7.756811,-9.524099,8.731444,-6.426867,-0.323673,-1.208945,-9.793968,2.728249,4.734570,-8.423091,-5.017408,1.394406,-8.615653,-6.872689,-6.151756,-7.944368,-4.100958,7.464538,0.124183,6.192636,-6.944756,1.660441,-2.422946,9.889472,8.980908,-7.763082,2.369320,1.732328,-8.181204,7.779576,1.681843,-8.172579,4.978886,-5.490480,4.522600,-9.485196,2.475894,-4.722779,4.461291,4.243711,0.053293,-4.605078,7.251336,-9.333022,4.232898,-9.792814,1.414478,-2.165849,-9.985806,-1.894641,1.578071,-3.679421,-5.683560,-2.556286,-9.467375,1.125156,7.206279,-1.956127,6.845148,-0.736734,-0.330675,-9.877958,5.832130,-5.323541,9.111171,-2.576509,-9.514714,6.753230,5.359831,-8.108555,-9.048187,-6.396579,1.194431,-8.891349,1.160199,1.622223,-8.967245,-7.817916,7.478551,6.497367,2.874521,5.811806,-5.076831,-8.155473,-4.078457,8.642968,-7.243628,-3.216987,-2.948703,2.052150,6.312864,-1.214023,-3.342676,-9.988460,2.056098,-6.865102,6.557596,-1.432684,-4.302568,1.097049,1.637414,6.350872,-8.177473,2.665361,0.304041,9.221165,-7.580709,-1.452033,-5.669780,-9.636153,-1.328842,-7.287173,-0.059247,-5.696843,0.429761,8.102979,-2.136028,5.194543,-8.130235,-6.109315,5.362334,-3.589096,4.209857,-2.253563,5.277355,4.430907,3.427354,3.207099,9.506097,-7.611268,-0.655268,4.849503,5.479860,6.950995,-2.264556,7.708425,1.805047,0.528609,-7.376995,-1.586939,-4.801407,6.868607,9.144591,8.922541,-6.288717,-8.754943,3.470121,-4.446097,-7.114555,-8.742306,4.846242,-1.673126,2.877958,1.600450,5.764338,-9.392162,9.712175,8.574060,-2.982550,9.840250,-8.735276,7.978318,-7.121567,-8.658754,-4.775054,4.206120,-5.762218,-9.693738,0.254038,0.222394,-6.154828,-4.257063,-3.322599,-8.024710,-0.176631,7.295967,3.873898,-6.864445,-3.759955,-1.234216,4.480598,-4.928867,8.821134,7.879921,-4.105835,4.799351,-9.455788,6.389010,5.465895,-1.667435,0.464471,1.911602,-6.614031,-7.683460,-0.181260,1.798689,-8.632484,-3.102099,4.443938,-7.868197,-9.195601,-1.846805,2.537085,0.286872,5.208557,-8.140081,-2.342244,-7.694610,0.714465,1.164284,4.007331,8.805883,8.567617,-2.513431,-2.897144,-6.521468,-1.577664,2.904244,-9.891838,3.611025,-7.632716,3.987784,5.330212,-6.970628,-3.498540,-5.047611,-8.773611,-6.871766,9.712150,-2.684208,4.791140,6.138402,3.436592,-0.087053,0.211305,-6.230739,1.276159,-2.569351,4.421750,-2.597562,0.850121,7.112527,-0.625523,7.544245,-6.781775,6.720835,-0.202203,-5.665089,-5.733293,-9.606419,-4.680750,9.367103,-4.352481,-3.918816,-5.421630,4.167182,6.575908,-7.218900,-1.512933,-0.714735,1.022071,9.447664,-4.205830,-0.219601,-8.186602,-0.531012,2.660830,-0.273981,-2.600357,1.667843,8.763556,-1.475816,0.604980,5.087628,-3.919681,4.602087,7.449382,2.272063,-3.482655,-1.818488,-1.147753,7.206283,0.846095,6.793832,-2.669771,-1.937547,-6.157941,-2.554024,6.322824,9.215243,7.297944,-0.602456,2.391467,-9.915776,6.506213,-5.135732,-3.178461,3.146176,-3.183571,6.645924,7.204230,-9.555249,-4.187559,9.070429,-0.303418,2.744620,5.706985,7.716113,7.319238,-3.565272,-1.102724,5.575638,-7.971519,-2.009058,5.894542,3.188329,-2.383019,-9.205527,6.478691,-1.332721,1.305208,6.468798,6.564300,8.379271,8.625512,0.740291,2.193496,-2.342185,5.120149,-7.932826,-5.561249,1.214573,8.463247,9.060143,-1.489612,9.820754,1.533321,-7.870637,3.894894,8.992490,-4.417303,-3.773492,3.635070,0.189296,-2.843745,-2.184873,-2.337215,8.876039,8.139740,-5.139310,-9.940821,2.676096,-6.820826,5.100968,-6.474955,-4.035691,2.608183,-9.492030,1.651305,-6.709138,9.827912,-5.569594,-0.628045,3.265688,-9.406363,2.110100,6.079450,-7.567407,8.902459,6.146036,4.917563,-2.544255,9.261290,8.174016,-8.190095,-0.683724,-4.512477,5.217243,-6.128659,1.102615,-7.837283,2.714320,1.264645,-4.125721,7.452810,-7.612556,4.957454,-9.635917,4.003846], dtype = "float64")#candidate|2844|(676,)|const|float64
call_2842 = relay.TupleGetItem(func_1172_call(relay.reshape(const_2843.astype('float64'), []), relay.reshape(const_2844.astype('float64'), [13, 4, 13]), ), 0)
call_2845 = relay.TupleGetItem(func_1176_call(relay.reshape(const_2843.astype('float64'), []), relay.reshape(const_2844.astype('float64'), [13, 4, 13]), ), 0)
func_2223_call = mod.get_global_var('func_2223')
func_2230_call = mutated_mod.get_global_var('func_2230')
const_2853 = relay.const([-2,-8,-8,6,-3,1,2,-10,-10,5,4,2,-3,-4,1,-1,8,5,-10,10,-5,1,-8,10,7,4,7,7,2,-10,3,-8,-3,-7,-4,-6,7,-8,-10,5,-6,-9,4,3,-9,10,4,-3,1,-10,6,-5,5,9,2,5,2,8,-3,-5,6,4,-3,7,-8,10,4,8,9,-9,3,6,9,5,-9,-6,-6,-4,-9,7,-1,1,2,-7,7,1,-1,5,-3,3,1,-6,2,-7,3,8,1,-9,7,8,-3,5,-6,-5,-1,10,10,10,-5,2,-3,2,-2,-10,1,4,-5,-10,-9,9,-5,-3,-4,-8,-10,-7,-3,-8,1,3,-4,-6,5,-9,10,4,8,2,-10,10,-1,4,7,-8,-10,10,9,2,-1,8,-10,1,-10,1,-3,4,10,-9,-10,5,9,3,-3,-2,5,-10,-2,6,-3,-6,9,-10,9,-6,-10,8,-8,9,-5,8,3,-8,8,-1,-2,7,6,-10,9,-4,9,-10,5,10,10,-4,5,-8,-8,4,-5,-9,10,-5,-7,8,5,3,-7,1,-9,10,9,-1,-8,-6,7,5,-7,6,1,10,-4,-5,-3,8,-5,10,-10,-10,-5,3,-4,-9,1,6,1,-10,-8,4,3,-5,-4,-2,-5,5,1,-4,-6,-7,-10,9,-1,-4,3,-10,2,7,-2,10], dtype = "int32")#candidate|2853|(260,)|const|int32
var_2854 = relay.var("var_2854", dtype = "bool", shape = (24,))#candidate|2854|(24,)|var|bool
call_2852 = relay.TupleGetItem(func_2223_call(relay.reshape(const_2853.astype('int32'), [2, 10, 13]), relay.reshape(const_2853.astype('int32'), [2, 10, 13]), relay.reshape(var_2854.astype('bool'), [24,]), relay.reshape(const_2843.astype('float64'), []), relay.reshape(var_2833.astype('float64'), [224,]), ), 5)
call_2855 = relay.TupleGetItem(func_2230_call(relay.reshape(const_2853.astype('int32'), [2, 10, 13]), relay.reshape(const_2853.astype('int32'), [2, 10, 13]), relay.reshape(var_2854.astype('bool'), [24,]), relay.reshape(const_2843.astype('float64'), []), relay.reshape(var_2833.astype('float64'), [224,]), ), 5)
output = relay.Tuple([bop_2825,call_2831,const_2832,var_2833,call_2842,const_2843,const_2844,call_2852,const_2853,var_2854,])
output2 = relay.Tuple([bop_2825,call_2834,const_2832,var_2833,call_2845,const_2843,const_2844,call_2855,const_2853,var_2854,])
func_2859 = relay.Function([var_2819,var_2833,var_2854,], output)
mod['func_2859'] = func_2859
mod = relay.transform.InferType()(mod)
mutated_mod['func_2859'] = func_2859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2859_call = mutated_mod.get_global_var('func_2859')
var_2861 = relay.var("var_2861", dtype = "float32", shape = (6, 3, 14))#candidate|2861|(6, 3, 14)|var|float32
var_2862 = relay.var("var_2862", dtype = "uint16", shape = (224,))#candidate|2862|(224,)|var|uint16
var_2863 = relay.var("var_2863", dtype = "bool", shape = (24,))#candidate|2863|(24,)|var|bool
call_2860 = func_2859_call(var_2861,var_2862,var_2863,)
output = call_2860
func_2864 = relay.Function([var_2861,var_2862,var_2863,], output)
mutated_mod['func_2864'] = func_2864
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2989 = relay.var("var_2989", dtype = "float64", shape = (4, 10, 13))#candidate|2989|(4, 10, 13)|var|float64
uop_2990 = relay.acosh(var_2989.astype('float64')) # shape=(4, 10, 13)
output = relay.Tuple([uop_2990,])
output2 = relay.Tuple([uop_2990,])
func_3003 = relay.Function([var_2989,], output)
mod['func_3003'] = func_3003
mod = relay.transform.InferType()(mod)
var_3004 = relay.var("var_3004", dtype = "float64", shape = (4, 10, 13))#candidate|3004|(4, 10, 13)|var|float64
output = func_3003(var_3004)
func_3005 = relay.Function([var_3004], output)
mutated_mod['func_3005'] = func_3005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3277 = relay.var("var_3277", dtype = "float64", shape = (16, 14, 11))#candidate|3277|(16, 14, 11)|var|float64
var_3278 = relay.var("var_3278", dtype = "float64", shape = (16, 14, 11))#candidate|3278|(16, 14, 11)|var|float64
bop_3279 = relay.divide(var_3277.astype('float64'), relay.reshape(var_3278.astype('float64'), relay.shape_of(var_3277))) # shape=(16, 14, 11)
uop_3282 = relay.erf(var_3277.astype('float64')) # shape=(16, 14, 11)
uop_3288 = relay.exp(uop_3282.astype('float32')) # shape=(16, 14, 11)
output = relay.Tuple([bop_3279,uop_3288,])
output2 = relay.Tuple([bop_3279,uop_3288,])
func_3290 = relay.Function([var_3277,var_3278,], output)
mod['func_3290'] = func_3290
mod = relay.transform.InferType()(mod)
mutated_mod['func_3290'] = func_3290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3290_call = mutated_mod.get_global_var('func_3290')
var_3292 = relay.var("var_3292", dtype = "float64", shape = (16, 14, 11))#candidate|3292|(16, 14, 11)|var|float64
var_3293 = relay.var("var_3293", dtype = "float64", shape = (16, 14, 11))#candidate|3293|(16, 14, 11)|var|float64
call_3291 = func_3290_call(var_3292,var_3293,)
output = call_3291
func_3294 = relay.Function([var_3292,var_3293,], output)
mutated_mod['func_3294'] = func_3294
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3378 = relay.const(-1, dtype = "int32")#candidate|3378|()|const|int32
var_3379 = relay.var("var_3379", dtype = "int32", shape = (14, 16, 2))#candidate|3379|(14, 16, 2)|var|int32
bop_3380 = relay.bitwise_and(const_3378.astype('int32'), var_3379.astype('int32')) # shape=(14, 16, 2)
func_2859_call = mod.get_global_var('func_2859')
func_2864_call = mutated_mod.get_global_var('func_2864')
const_3392 = relay.const([-2.778817,2.636980,-0.446232,5.504229,-2.532912,8.205339,5.240514,-6.717374,6.116902,4.846421,2.742516,-0.611374,1.763215,7.307731,-6.951571,3.583418,5.095045,-2.510193,9.451192,6.131615,-8.806910,0.817923,-3.380671,4.880038,-4.000269,5.536671,5.482809,8.423075,8.480423,9.740773,6.096218,8.622600,8.886955,-3.538578,4.400696,6.224942,-9.022890,2.783799,-2.656185,-5.268826,7.157264,-7.722259,-1.205050,-6.079034,-7.599133,8.760373,-6.281318,0.517532,-5.642600,-7.364919,4.115677,-8.058155,3.800262,-6.172763,-7.576876,-0.569871,-6.711986,-8.316704,-7.573144,1.309622,-3.334628,-0.060312,3.549638,-5.655548,0.226413,4.571522,-9.370361,0.774875,-8.815534,7.121756,-3.164661,-1.167933,7.767208,9.761895,2.324016,-8.003849,-3.039773,9.953234,-2.756656,5.125451,-6.919719,-1.057306,-3.156418,-6.110851,8.891005,3.073716,-0.206109,0.794212,-3.094095,0.896631,9.750137,8.230840,6.582360,3.787732,7.960810,6.996888,1.006554,-0.085906,2.638872,-8.921266,4.618943,1.041991,-7.700564,5.453131,2.428186,-8.695403,-2.029881,-0.311724,-5.187250,-4.199223,4.922699,-8.860820,1.740618,-5.284328,5.694164,-2.298158,9.124378,-4.951236,-5.155450,-8.257045,2.311820,-7.975357,7.168997,5.617416,-4.404013,4.601479,4.872473,-9.466145,-1.801787,-6.092586,-4.999092,-0.876162,-9.372626,0.305415,-7.654691,-3.445241,-0.369028,-9.648219,-1.111272,-7.843041,4.623887,-5.795432,7.656496,9.197612,7.639303,8.475189,-0.115823,9.953544,9.853065,3.294263,0.326372,1.620662,-9.408045,2.279094,7.357906,5.135344,7.011288,4.018643,4.762517,-7.844030,-5.819708,-4.376342,-9.895433,9.683320,-7.100641,2.094631,9.802943,0.423609,-0.051284,-9.883185,-1.506024,-3.873757,8.866656,-6.464282,9.749648,0.225038,3.776880,-4.320927,-6.668465,3.752380,7.855553,-5.840333,8.029828,-1.777510,-2.634167,7.859127,0.636711,-2.426584,8.926685,7.267056,2.164925,8.813716,-4.501147,-1.753092,9.661329,4.751976,6.486670,9.056913,4.725552,-4.342717,-0.343320,9.475211,-3.752779,-8.430236,-8.045423,-7.695200,7.053480,-2.189799,2.628526,-6.734933,-4.232900,1.042367,5.019198,-5.083073,9.476558,-1.345786,-1.133447,1.106437,0.875513,5.514080,0.533110,5.150289,7.695283,-4.860585,9.679886,3.537970,-3.250956,1.020250,-6.262965,-9.176125,-1.330969,2.097910,-0.455507,9.202629,8.632677,-1.819414,-2.785386,6.201111,9.506426,6.657936,-9.440661,3.676323,8.873734,-1.180621,-4.331956,8.425470,7.281057,-5.120118,6.299714,5.237659,-1.656376,5.796837], dtype = "float32")#candidate|3392|(252,)|const|float32
const_3393 = relay.const([10,2,5,1,-10,-5,9,-6,1,10,2,-6,-4,8,-5,-6,-5,9,4,3,-8,8,8,-4,9,-8,3,9,-1,3,8,-10,-2,10,8,-4,6,6,6,-2,3,10,-6,-5,-8,2,2,8,3,-9,-5,-9,-5,-4,4,-9,-8,3,8,10,8,3,-7,1,-2,9,5,10,-3,-2,2,4,-10,5,-4,-7,10,10,2,-5,4,-4,4,-1,-10,-5,-6,-4,5,6,4,-2,3,10,-5,-2,1,-10,-9,3,3,2,7,8,5,1,-7,-4,5,6,10,-1,-3,5,3,3,-6,-7,-3,4,9,9,-8,-4,10,-5,9,3,-8,-8,-6,8,8,-4,-8,-10,4,3,-2,-7,9,3,1,-2,4,-1,-8,6,-4,-8,-1,-1,8,8,-1,2,-8,-7,-3,-7,6,-9,7,-4,-6,-3,-1,-1,-6,-8,-4,6,7,1,2,-7,6,-7,-1,-5,-1,3,3,-10,-3,-8,9,8,-7,6,-7,-10,-10,9,5,-10,2,-10,-9,4,9,8,-5,-5,-7,4,5,8,-10,-7,-1,-5,2,6,8,-3,3,6,-10,-4,2,-1,-3,-4], dtype = "uint16")#candidate|3393|(224,)|const|uint16
var_3394 = relay.var("var_3394", dtype = "bool", shape = (2, 12))#candidate|3394|(2, 12)|var|bool
call_3391 = relay.TupleGetItem(func_2859_call(relay.reshape(const_3392.astype('float32'), [6, 3, 14]), relay.reshape(const_3393.astype('uint16'), [224,]), relay.reshape(var_3394.astype('bool'), [24,]), ), 4)
call_3395 = relay.TupleGetItem(func_2864_call(relay.reshape(const_3392.astype('float32'), [6, 3, 14]), relay.reshape(const_3393.astype('uint16'), [224,]), relay.reshape(var_3394.astype('bool'), [24,]), ), 4)
output = relay.Tuple([bop_3380,call_3391,const_3392,const_3393,var_3394,])
output2 = relay.Tuple([bop_3380,call_3395,const_3392,const_3393,var_3394,])
func_3396 = relay.Function([var_3379,var_3394,], output)
mod['func_3396'] = func_3396
mod = relay.transform.InferType()(mod)
var_3397 = relay.var("var_3397", dtype = "int32", shape = (14, 16, 2))#candidate|3397|(14, 16, 2)|var|int32
var_3398 = relay.var("var_3398", dtype = "bool", shape = (2, 12))#candidate|3398|(2, 12)|var|bool
output = func_3396(var_3397,var_3398,)
func_3399 = relay.Function([var_3397,var_3398,], output)
mutated_mod['func_3399'] = func_3399
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3911 = relay.const([[[False,False,True,False,True,True,True,False,True,False,True],[True,True,False,True,False,True,False,True,False,False,False],[False,False,False,True,True,True,True,True,True,False,True],[True,False,False,False,True,False,True,True,False,False,True],[False,True,True,True,False,False,True,False,True,True,True],[True,False,False,True,False,False,False,False,True,True,False],[False,True,True,False,False,False,False,False,True,False,False]],[[False,True,False,True,False,False,False,False,True,True,False],[False,False,False,False,True,False,True,False,False,True,False],[True,False,False,False,False,True,True,True,True,False,False],[True,True,True,True,True,True,True,False,True,True,True],[False,True,False,False,False,False,True,False,False,False,False],[True,False,False,False,False,True,True,False,False,False,True],[True,True,False,False,False,False,True,True,True,True,False]],[[True,False,True,False,True,True,False,True,True,True,False],[True,True,False,True,False,False,True,False,True,False,False],[True,False,False,True,True,False,True,True,False,False,True],[True,False,False,False,True,True,True,False,True,True,False],[True,False,False,True,True,True,False,True,True,True,True],[True,True,False,True,False,True,False,False,False,True,True],[False,False,False,False,True,False,True,False,False,True,False]],[[True,False,True,False,True,False,True,False,True,False,True],[False,False,True,True,False,False,False,True,True,False,True],[True,False,True,True,False,True,False,True,False,True,True],[True,True,False,False,False,True,True,False,False,True,False],[False,True,False,False,True,False,True,True,True,False,False],[False,True,False,False,True,True,False,False,False,True,True],[True,True,True,False,True,False,False,False,False,False,True]],[[True,False,False,True,True,False,False,True,False,True,True],[False,True,False,True,True,True,True,False,False,False,False],[False,False,True,False,True,True,False,True,True,True,False],[True,False,True,True,True,True,True,False,False,True,True],[False,False,False,True,False,False,False,False,False,False,True],[True,False,False,True,False,True,False,False,True,True,False],[True,True,True,False,False,True,False,False,False,False,False]],[[False,False,False,True,False,True,True,False,False,True,False],[False,False,False,True,False,False,True,True,True,False,False],[False,False,True,False,False,True,False,False,True,True,False],[False,False,False,True,True,False,True,False,False,True,False],[True,False,False,True,True,False,False,True,False,True,True],[True,True,True,False,True,False,False,False,False,False,False],[True,True,False,True,False,False,False,True,True,True,True]],[[True,False,True,True,True,False,False,False,False,True,True],[True,False,False,True,False,True,False,False,True,True,True],[True,False,True,False,False,False,True,True,True,False,False],[False,False,True,True,False,True,True,True,False,False,True],[False,False,True,True,False,True,True,True,False,False,True],[True,False,False,True,True,True,True,False,True,True,False],[False,False,False,True,True,True,True,False,True,False,False]],[[False,True,False,False,False,True,False,True,False,False,True],[False,True,True,False,False,True,True,False,True,False,False],[True,True,False,False,True,False,True,True,False,False,False],[False,False,True,True,False,False,True,False,True,False,False],[False,False,False,True,True,False,False,True,True,True,True],[True,False,False,True,True,True,True,True,True,True,True],[False,False,False,False,True,False,False,True,False,False,True]],[[True,False,True,True,False,False,False,False,True,True,False],[True,False,True,False,True,True,False,False,False,False,False],[False,True,False,True,True,True,True,True,True,False,True],[False,False,False,False,False,False,False,False,False,True,False],[True,False,False,False,False,False,True,False,True,True,True],[True,False,False,False,False,False,True,False,True,True,False],[True,False,True,True,False,True,True,True,True,True,True]],[[True,True,True,False,False,False,True,False,True,False,False],[False,False,False,False,False,True,True,True,True,True,True],[False,False,True,True,False,True,True,True,False,False,False],[False,False,True,False,True,True,True,True,True,True,False],[False,True,False,True,True,True,False,False,True,True,False],[False,False,False,True,True,True,False,False,False,False,False],[True,False,False,False,True,True,True,True,True,True,False]],[[True,False,True,True,True,True,False,False,False,False,False],[False,False,False,False,False,False,False,False,False,True,False],[False,True,True,False,False,False,True,False,True,True,False],[False,False,True,False,False,True,False,False,False,False,False],[False,False,False,False,False,False,False,True,False,True,False],[False,True,True,False,False,True,True,True,True,False,True],[True,False,True,False,False,False,False,False,False,False,True]],[[True,False,True,True,True,True,False,False,True,False,True],[False,False,True,True,False,True,True,False,False,False,False],[False,False,False,False,True,False,False,True,True,True,False],[True,True,True,False,True,True,True,True,False,False,True],[True,True,True,False,False,True,True,False,True,True,True],[True,True,False,False,True,True,True,True,True,False,False],[False,False,True,True,False,False,True,False,True,True,True]]], dtype = "bool")#candidate|3911|(12, 7, 11)|const|bool
var_3912 = relay.var("var_3912", dtype = "bool", shape = (12, 7, 11))#candidate|3912|(12, 7, 11)|var|bool
bop_3913 = relay.logical_or(const_3911.astype('bool'), relay.reshape(var_3912.astype('bool'), relay.shape_of(const_3911))) # shape=(12, 7, 11)
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
var_3931 = relay.var("var_3931", dtype = "bool", shape = (24,))#candidate|3931|(24,)|var|bool
const_3932 = relay.const(-3.295746, dtype = "float64")#candidate|3932|()|const|float64
const_3933 = relay.const([2.016050,5.602406,3.231594,6.619136,6.042634,-6.524654,0.922975,8.959836,-5.191870,-9.819275,8.783874,-2.722333,-8.847873,6.401967,-9.097129,-4.841214,1.022065,7.222217,5.410452,7.189235,3.882635,-8.628497,-1.511150,-1.301165,-1.164639,-8.992803,-5.220469,-5.057767,1.349899,4.832901,4.179528,9.764553,1.741764,0.363574,-9.876049,8.999634,-1.228694,-3.982568,6.124407,7.460074,6.957850,-0.719709,-7.958266,-9.951812,-5.268477,-2.706276,6.446465,-1.520375,-4.587644,-0.974094,-9.266473,-8.178592,4.362484,2.350804,4.717488,-9.017662,-1.272163,3.787672,5.661195,5.924433,4.240695,7.702444,6.548746,1.091453,2.345084,-5.769861,-6.045318,-4.641402,7.519581,-8.282521,-0.630974,3.022763,8.859296,-7.454339,3.832222,-6.522889,5.978670,2.320471,3.112261,-1.770989,-3.727401,9.684876,3.903800,7.003538,0.808489,1.016498,-1.944516,3.731189,4.976272,1.825346,7.946130,6.727093,3.875711,9.180028,-1.894222,-9.412291,4.696003,4.091569,9.952831,6.315470,-4.237515,5.368869,-0.953468,0.176588,-3.214720,-9.983772,-7.094618,-8.866492,-6.576106,6.132909,9.722617,-5.935456,4.455349,6.969213,-1.083756,6.015158,9.577637,3.139559,6.320009,-7.607803,4.594687,5.296503,-4.009107,-7.292116,-8.090498,0.495782,7.856432,-4.312320,4.125093,3.385815,-8.930160,5.003945,2.966292,1.546171,8.425802,-8.544185,-0.060760,-8.425607,9.931016,-8.823332,-1.730145,5.969197,1.950643,-5.010289,2.983627,-8.975201,5.176846,-6.202420,-2.296566,6.856000,4.318483,4.200948,-6.290583,-9.559539,-6.332770,5.700423,7.691646,-1.927767,-4.545538,2.898051,-4.764533,3.181577,1.205334,1.392737,-5.580051,2.292009,-6.006975,7.416869,5.065205,2.479556,-1.652000,-1.837515,6.414487,-4.752990,-5.753006,-9.689302,0.009690,-5.230773,7.825582,2.781313,-7.780439,3.506287,1.178340,7.343540,-6.560243,-4.648860,7.758569,-4.935750,7.763065,-2.624181,4.417846,-7.574005,2.065245,5.640679,-4.952212,-4.582743,-3.134367,-4.358311,-8.091342,-3.981829,-8.605255,-8.870031,4.485837,-2.797899,7.344365,-0.890466,0.415709,-9.337493,6.701693,5.187403,-0.537264,3.979078,6.762219,-0.822215,1.729489,5.439070,7.007239,-8.877950,-8.264529,1.855316,8.832584,-6.671174,-5.951019,5.420406], dtype = "float64")#candidate|3933|(224,)|const|float64
call_3930 = relay.TupleGetItem(func_236_call(relay.reshape(var_3931.astype('bool'), [2, 2, 6]), relay.reshape(var_3931.astype('bool'), [2, 2, 6]), relay.reshape(const_3932.astype('float64'), []), relay.reshape(const_3933.astype('float64'), [224,]), ), 1)
call_3934 = relay.TupleGetItem(func_241_call(relay.reshape(var_3931.astype('bool'), [2, 2, 6]), relay.reshape(var_3931.astype('bool'), [2, 2, 6]), relay.reshape(const_3932.astype('float64'), []), relay.reshape(const_3933.astype('float64'), [224,]), ), 1)
func_2634_call = mod.get_global_var('func_2634')
func_2638_call = mutated_mod.get_global_var('func_2638')
const_3937 = relay.const([2.118377,4.972299,7.032630,-2.581318,-5.633397,8.400317,-4.313425,0.470103,1.765895,4.348307,-9.287447,-3.046890,1.177116,-2.115288,0.326692,-7.251536,-6.895855,0.838079,-5.172499,-8.216859,-8.806196,-3.332621,7.148763,4.170284,2.358626,7.675598,-3.810034,6.544079,-6.628545,-8.201215,8.198251,-9.697913,5.529084,4.908133,1.607260,-8.239824,-9.427441,4.413298,9.192288,-4.356894,5.399407,-2.783612,7.001905,8.968759,-0.097042,5.522940,-7.851054,9.907330,-6.744781,8.910346,-2.209249,0.029182,-1.067653,-3.935197,9.733327,-0.283687,-9.942833,6.093169,-6.072989,1.496614,-9.610207,7.494188,9.966592,-0.042924,5.707398,8.826136,-5.271069,-0.790728,0.304371,-9.363154,-9.174411,4.742215,9.753858,-3.428177,5.016822,-4.024652,7.556114,9.873654,7.342087,-1.389552,2.297742,-9.545762,-1.184753,6.415953,-7.848100,-2.150383,-0.848501,6.390602,-2.152201,-4.878942,-0.230374,-0.248216,-2.429954,-2.604345,9.140528,-5.600008,-6.575654,-6.987087,-8.869137,9.824827,4.763827,5.955790,3.594623,-5.222590,-3.999910,-5.153514,6.951035,-8.134024,-0.350090,6.787799,5.298631,-7.979999,3.257746,-0.582534,-5.010352,-4.956962,-5.621412,-2.614645,-4.851378,0.423731,6.572871,9.834654,-8.339516,-0.519157,-6.093230,0.031081,2.577650,-6.246327,-8.783475,-9.720235,-6.069949,5.715915,-3.248942,-1.181553,-7.596730,-3.481664,8.065141,-0.002163,0.846301,-5.655087,7.949274,-3.903315,-1.504224,7.426317,2.146704,3.837148,-0.801373,-4.429544,-8.520877,2.171345,0.676985,-7.810923,-2.288715,-4.885594,5.253343,2.099498,-9.049419,-5.111975,-6.859460,-1.795353,4.422255,3.825726,-5.252214,7.691593,4.235527,7.999664,-6.129615,7.062038,-4.434568,-5.151387,0.123856,-9.643483,1.404269,-9.732344,-2.939570,-0.146035,-9.348013,7.422067,3.875600,-5.954679,-9.036836,4.788483,2.766596,1.419194,0.644650,-2.598668,5.612172,-7.373326,4.312079,2.266662,1.939942,4.751102,9.217076,-5.228176,0.931495,0.370957,-1.538081,-4.766552,-2.585844,-2.970089,-9.177787,-1.447156,0.659536,-5.222688,1.657878,1.971103,9.806459,-8.259165,6.312936,-3.170878,5.160566,-8.649187,-2.790903,-2.197934,-1.542921,-2.510856,8.429779,3.184611,-4.947320,8.389289,9.552186,-3.017772,6.867729,8.575718,-3.076612,-8.295195,-2.169228,8.218299,1.555007,3.121265,-2.357453,-2.124725,-9.762907,6.854556,-0.175284,-9.511302,2.399676,-5.319368,9.027470,9.194601,8.894396,-2.284712,2.268150,5.876549,0.608088,-1.999040,-3.894295,5.944668,-1.699594,6.822541,2.974590,-8.918999,4.580368,3.724400,3.886468,-5.625432,-7.549072,-3.171585,-2.420066,4.231623,-8.535768,-0.097154,-2.777080,3.243601,-2.751349,5.577758,-7.695952,-7.742633,6.270031,-3.285806,-6.334100,6.662802,3.849654,-8.520627,6.163349,8.552741,-5.588847,1.912653,5.723271,4.796767,2.813917,9.486182,5.451981,2.475103,-9.904321,5.152949,-6.412050,3.971481,-8.687891,-9.924709,8.329665,7.485752,5.375948,2.131516,8.301814,-1.408448,9.867913,-9.764472,7.369781,8.290394,3.806506,-8.164683,-4.266400,-2.554925,-5.961348,-1.027799,-0.273344,7.138189,-4.965467,0.059023,4.030396,5.574446,9.956397,6.328516,9.940438,-0.278013,2.032552,2.164989,7.643159,-5.340493,-5.199873,9.936419,-8.838967,-2.063279,0.209476,-9.915033,9.495634,-5.520251,2.374260,9.389845,-2.368606,-8.573043,-9.468435,9.334643,1.893951,8.107672,8.631114,-8.562295,5.948552,-5.901808,-2.685184,-6.502823,-5.281524,1.399705,-4.970111,7.249099,-8.545556,5.200171,6.000108,-8.233572,-0.222120,-2.560222,7.992395,-4.509519,4.882456,3.784790,0.732263,2.152893,-7.511178,-1.826042,9.729847,-7.735324,7.883312,-9.426215,-3.378194,3.558804,9.307267,-5.745232,-5.038164,8.968238,-9.658040,-2.955046,-7.693810,5.059930,-4.888129,-2.182748,8.604348,3.968086,-5.851381,4.349290,5.403402,0.280666,-0.632080,5.040984,-4.846964,-8.245745,5.136088,3.789638,-5.951640,1.074931,-5.491022,-0.883318,-5.952323,-0.153141,-3.764784,8.612192,-0.353363,-2.414717,6.382374,9.508765,-7.601446,-7.860028,-8.183967,-8.290320,-6.354736,1.729825,6.902400,2.005681,-2.327489,-2.511973,1.188571,-3.617592,-7.875565,2.038380,-2.657239,-2.104210,-7.024853,-7.605335,-0.937306,-3.367561,-9.475251,6.121175,7.712017,4.409858,-3.069803,-8.386188,-4.385819,8.330546,6.046351,-8.035256,2.424711,2.756494,7.537125,8.866529,-7.770891,-0.124680,7.232009,-3.743529,-9.371088,-8.735191,5.197175,2.752655,1.902503,-3.969169,9.463774,-3.837438,6.641303,-3.264934,-8.053331,-2.871823,7.503478,3.725584,-8.760736,-1.742322,-6.103508,3.577699,5.645418,4.221684,8.881031,-0.896323,-0.958238,-7.443617,-0.168962,-4.668411,-3.435854,6.038426,7.827441,-4.610578,-3.726345,8.764527,-0.797565,-4.203215,7.124683,-1.768424,1.736254,2.538373,-5.433443,-1.026263,-9.602010,7.326015,9.094271,1.349115,4.029262,8.724844,-1.747747,-3.482609,8.285106,-8.515258,-4.848630,-5.789461,0.011122,5.027795,0.606237,-6.423150,-2.693388,-4.859649,-1.364489,9.468498,3.957699,4.581138,6.298279,-4.067539,-4.270118,9.522021,-1.752169,3.241367,0.295816,4.720280,-2.968207,-3.892774,1.107073,-0.500358,-4.312624,8.736201,-2.714974,0.901951,9.854299,5.409387,4.111526,-5.721182,-6.483718,9.092232,2.546440,-2.556107,7.263666,-5.310980,2.331061,-4.365567,-8.816192,6.967502,9.917624,-6.691892,5.972488,-1.778074,-8.213248,-2.557175,-2.539044,-7.022816,-7.485634,5.558378,-3.703468,-0.441143,3.716194,3.108357,-5.958553,-3.590185,-0.607888,-7.235649,-6.187450,-6.782309,-7.675293,4.920262,-9.235923,-2.628507,-1.965026,-2.871534,5.176741,-8.868758,-5.799150,2.448338,4.189350,-2.302334,-1.521883,7.603358,8.068667,-2.583714,-7.765898,3.936047,0.946005,6.474288,8.453503,-1.569632,-0.161968,1.245504,6.084899,3.672865,5.122440,-4.832326,6.732911,-8.939977,8.389914,-3.250109,7.525150,-5.420218,5.765912,-6.226810,-4.429898,2.419575,-8.613907,2.746872,4.875859,-4.009184,-2.815096,0.324959,-7.866306,-9.909520,-4.837016,1.507904,-5.376335,-5.915610,7.868340,0.535194,-7.911050,-4.239590,0.800315,-2.337979,-5.264739,7.733894,7.770441,-8.530341,6.963977,9.998440,1.089456,5.002144,-2.882818,3.014880,-0.988642,1.180361,-6.014609,6.489790,4.893070,-6.770978,-9.631416,-5.679537,-5.745395,5.621062,-9.307967,4.339290,7.263864,3.803986,5.231213,8.999660,6.441865,-2.679007,-9.736971,-0.223495,8.688200,-7.032920,-1.528124,4.004725,2.009088,-3.979960,0.451571,-4.662825,-7.012410,-3.045689,-5.978566,-3.271895,7.094782,1.694982,-7.884125,0.231413,3.019111,-8.069960,5.584705,-3.910358,-5.841878,-0.923125,3.822446,0.686144,-3.881888,8.604246,4.830990,6.730826,-5.521718,6.656200,-5.807440,-5.399754,-1.683023,0.916816,-7.185557,-3.964955,1.893547,-4.007765,5.655238,-0.900176,0.302286,6.995226,2.295565,4.197991,2.914414,3.301013,-5.389801,1.079425,-0.285524,-9.396451,8.328228,2.017256,3.634072,2.425328,8.668304,-1.464498,4.929637,-9.998294,-4.796437,-6.966908,-4.332823,2.234626,9.879396,6.592886,-6.246921,-0.294624,-7.129928,-3.419079,3.961693,4.301554,9.186461,0.980481,0.966283,-8.469637,-5.656997,2.061170,-6.908519,2.546934,-9.005223,8.696090,-8.033179,-6.337676,4.110849,-0.023800,-6.784465,-7.115912,1.900740,-4.355985,2.913598,2.178971,6.050819,-1.714107,3.661402,9.130179,-7.418497,-7.448920,-2.594180,4.613145,9.934316,-9.499501,5.431635,-5.987834,-1.212081,6.732903,8.954118,6.453832,-7.642848,-0.800972,5.723954,7.542510,-2.871460,-7.233678,-0.624181,-5.932582,6.497051,6.087323,3.758385,-0.305403,-9.543778,2.222436,-8.739049,-2.854559,-6.413410,-4.182866,-8.609556,2.331693,-3.349308,2.434476,-9.296362,-4.344520,-3.979931,-6.897483,3.226309,9.089681,8.163797,0.009717,-2.330822,-3.564561,-0.696774,-6.526915,-0.522716,0.709194,-0.599788,0.922285,6.043119,-9.157535,2.312492,6.021206,7.538790,-2.588838,-9.687353,-0.541032,9.922917,8.033065,-2.468119,-7.151933,-4.023692,1.494631,-4.210592,3.548068,-2.985537,3.647678,-7.963097,9.911495,6.255945,-1.370663,8.924162,-6.229348,0.338360,0.384215,-1.990739,-4.629577,6.941532,0.795490,-8.019642,6.260379,-9.624763,-6.334329,-2.028608,0.266377,6.713110,1.720692,-9.026917,3.019309,1.071711,1.223285,-9.799879,-9.390255,9.117056,6.732641,-6.354901,0.164871,1.493793,-2.509505,1.837976,-5.187865,8.458642,7.242762,7.518464,-6.948753,4.128922,-8.712281,3.173844,-0.317726,-5.849998,6.931992,-0.764555,-6.547890,-3.668211,1.458584,-3.247038,8.484443,8.240720,8.160275,2.479340,-8.287838,-1.637253,6.281575,1.781693,-4.472470,7.661089,7.154183,-1.110351,-9.454411,-7.230979,-5.099744,5.963321,-1.360928,8.599042,8.683414,7.314811,9.943200,3.043138,-9.171231,-8.115027,-9.078064,-7.645238,-7.196925,8.063366,6.379057,-8.783258,-6.623061,7.218418,9.357309,0.873326,-7.616953,-9.501373,-8.628533,-6.222891,-2.000875,1.257481,-4.673488,-5.387664,3.887603,3.888794,3.683111,-3.431015,6.841570,9.212043,-6.117217,-1.134746,7.867420,1.412519,-0.933356,-6.662349,-2.273516,9.357917,8.451010,4.218798,-5.474870,-1.688358,5.034339,0.425187,-1.929893,6.464484,4.020983,7.089538,-7.986808,-3.188898,-1.869320,8.140316,9.309731,-0.538649,1.046759,3.048290,-7.878351,8.461429,-3.750147,2.071631,2.008150,-0.942792,-7.066262,-9.053295,-7.161204,6.386540,9.765877,2.609383,4.361731,-4.620171,-1.182422,-6.122850,4.805222,-6.041335,0.668157,-1.439084,-2.361065,2.814649,3.072296,7.137937,8.271305,-5.105600,8.539517,5.265903,8.044285,5.135241,1.719566,9.699119,-7.684357,-9.352585,1.039086,-4.691921,6.384044,-6.822535,6.856689,-5.978705,-7.552742,-7.097491,5.208745,-5.067200,0.237294,-4.606918,-4.411600,4.173960,8.965462,-8.490486,-4.529911], dtype = "float64")#candidate|3937|(972,)|const|float64
call_3936 = func_2634_call(relay.reshape(const_3937.astype('float64'), [9, 12, 9]), relay.reshape(const_3937.astype('float64'), [9, 12, 9]), )
call_3938 = func_2634_call(relay.reshape(const_3937.astype('float64'), [9, 12, 9]), relay.reshape(const_3937.astype('float64'), [9, 12, 9]), )
func_3396_call = mod.get_global_var('func_3396')
func_3399_call = mutated_mod.get_global_var('func_3399')
var_3941 = relay.var("var_3941", dtype = "int32", shape = (112, 4))#candidate|3941|(112, 4)|var|int32
call_3940 = relay.TupleGetItem(func_3396_call(relay.reshape(var_3941.astype('int32'), [14, 16, 2]), relay.reshape(var_3931.astype('bool'), [2, 12]), ), 1)
call_3942 = relay.TupleGetItem(func_3399_call(relay.reshape(var_3941.astype('int32'), [14, 16, 2]), relay.reshape(var_3931.astype('bool'), [2, 12]), ), 1)
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
call_3947 = relay.TupleGetItem(func_236_call(relay.reshape(var_3931.astype('bool'), [2, 2, 6]), relay.reshape(var_3931.astype('bool'), [2, 2, 6]), relay.reshape(const_3932.astype('float64'), []), relay.reshape(const_3933.astype('float64'), [224,]), ), 6)
call_3948 = relay.TupleGetItem(func_241_call(relay.reshape(var_3931.astype('bool'), [2, 2, 6]), relay.reshape(var_3931.astype('bool'), [2, 2, 6]), relay.reshape(const_3932.astype('float64'), []), relay.reshape(const_3933.astype('float64'), [224,]), ), 6)
bop_3971 = relay.logical_xor(call_3947.astype('int32'), const_3932.astype('int32')) # shape=(1512,)
bop_3974 = relay.logical_xor(call_3948.astype('int32'), const_3932.astype('int32')) # shape=(1512,)
func_2634_call = mod.get_global_var('func_2634')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_3975 = func_2634_call(relay.reshape(const_3937.astype('float64'), [9, 12, 9]), relay.reshape(call_3936.astype('float64'), [9, 12, 9]), )
call_3976 = func_2634_call(relay.reshape(const_3937.astype('float64'), [9, 12, 9]), relay.reshape(call_3936.astype('float64'), [9, 12, 9]), )
bop_3978 = relay.logical_and(call_3940.astype('bool'), const_3932.astype('bool')) # shape=(13, 4, 13)
bop_3981 = relay.logical_and(call_3942.astype('bool'), const_3932.astype('bool')) # shape=(13, 4, 13)
output = relay.Tuple([bop_3913,call_3930,var_3931,const_3933,call_3936,const_3937,var_3941,bop_3971,call_3975,bop_3978,])
output2 = relay.Tuple([bop_3913,call_3934,var_3931,const_3933,call_3938,const_3937,var_3941,bop_3974,call_3976,bop_3981,])
func_3983 = relay.Function([var_3912,var_3931,var_3941,], output)
mod['func_3983'] = func_3983
mod = relay.transform.InferType()(mod)
mutated_mod['func_3983'] = func_3983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3983_call = mutated_mod.get_global_var('func_3983')
var_3985 = relay.var("var_3985", dtype = "bool", shape = (12, 7, 11))#candidate|3985|(12, 7, 11)|var|bool
var_3986 = relay.var("var_3986", dtype = "bool", shape = (24,))#candidate|3986|(24,)|var|bool
var_3987 = relay.var("var_3987", dtype = "int32", shape = (112, 4))#candidate|3987|(112, 4)|var|int32
call_3984 = func_3983_call(var_3985,var_3986,var_3987,)
output = call_3984
func_3988 = relay.Function([var_3985,var_3986,var_3987,], output)
mutated_mod['func_3988'] = func_3988
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4230 = relay.var("var_4230", dtype = "uint32", shape = (14, 6, 6))#candidate|4230|(14, 6, 6)|var|uint32
var_4231 = relay.var("var_4231", dtype = "uint32", shape = (14, 6, 6))#candidate|4231|(14, 6, 6)|var|uint32
bop_4232 = relay.greater(var_4230.astype('bool'), relay.reshape(var_4231.astype('bool'), relay.shape_of(var_4230))) # shape=(14, 6, 6)
output = relay.Tuple([bop_4232,])
output2 = relay.Tuple([bop_4232,])
func_4244 = relay.Function([var_4230,var_4231,], output)
mod['func_4244'] = func_4244
mod = relay.transform.InferType()(mod)
mutated_mod['func_4244'] = func_4244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4244_call = mutated_mod.get_global_var('func_4244')
var_4246 = relay.var("var_4246", dtype = "uint32", shape = (14, 6, 6))#candidate|4246|(14, 6, 6)|var|uint32
var_4247 = relay.var("var_4247", dtype = "uint32", shape = (14, 6, 6))#candidate|4247|(14, 6, 6)|var|uint32
call_4245 = func_4244_call(var_4246,var_4247,)
output = call_4245
func_4248 = relay.Function([var_4246,var_4247,], output)
mutated_mod['func_4248'] = func_4248
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4255 = relay.var("var_4255", dtype = "float64", shape = (6, 4, 16))#candidate|4255|(6, 4, 16)|var|float64
uop_4256 = relay.sigmoid(var_4255.astype('float64')) # shape=(6, 4, 16)
output = uop_4256
output2 = uop_4256
func_4258 = relay.Function([var_4255,], output)
mod['func_4258'] = func_4258
mod = relay.transform.InferType()(mod)
mutated_mod['func_4258'] = func_4258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4259 = relay.var("var_4259", dtype = "float64", shape = (6, 4, 16))#candidate|4259|(6, 4, 16)|var|float64
func_4258_call = mutated_mod.get_global_var('func_4258')
call_4260 = func_4258_call(var_4259)
output = call_4260
func_4261 = relay.Function([var_4259], output)
mutated_mod['func_4261'] = func_4261
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4611 = relay.var("var_4611", dtype = "float64", shape = (5, 6, 8))#candidate|4611|(5, 6, 8)|var|float64
uop_4612 = relay.tan(var_4611.astype('float64')) # shape=(5, 6, 8)
uop_4646 = relay.sigmoid(uop_4612.astype('float32')) # shape=(5, 6, 8)
output = relay.Tuple([uop_4646,])
output2 = relay.Tuple([uop_4646,])
func_4664 = relay.Function([var_4611,], output)
mod['func_4664'] = func_4664
mod = relay.transform.InferType()(mod)
mutated_mod['func_4664'] = func_4664
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4665 = relay.var("var_4665", dtype = "float64", shape = (5, 6, 8))#candidate|4665|(5, 6, 8)|var|float64
func_4664_call = mutated_mod.get_global_var('func_4664')
call_4666 = func_4664_call(var_4665)
output = call_4666
func_4667 = relay.Function([var_4665], output)
mutated_mod['func_4667'] = func_4667
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4700 = relay.const([[[-0.828285,-7.355082,2.706114,-3.588904,3.761602,-0.306551,4.074194,-2.706314,-7.288519,-7.596076],[7.347695,-3.183770,9.458913,9.875599,-8.155058,-5.587483,-4.662532,8.872680,-7.819306,-1.182200],[-6.657085,-8.153721,3.848158,2.061242,-1.345366,8.720859,-3.055059,-9.026922,2.481829,-0.902087]],[[-9.164957,-6.211741,4.235460,9.264048,-2.599710,-4.247548,-4.527069,-7.218986,6.102159,9.493769],[6.431871,8.130748,-6.943242,-3.730023,1.639971,8.529324,8.983759,8.911078,4.769952,-9.900305],[-1.043098,-9.053230,8.482152,1.354656,-6.227948,-8.284819,3.225556,-1.926607,4.015812,8.986105]],[[7.029560,4.683291,-3.423097,8.831138,6.548426,4.011428,-6.800584,-2.154512,6.919268,-7.158130],[-2.012458,1.009784,-5.657135,4.318570,-5.291900,4.762738,7.944252,-3.289556,9.262562,-9.796798],[-3.492522,-1.174754,1.286243,-0.174670,-7.435249,3.368632,-8.552907,-0.334775,-3.558191,-4.416898]],[[-9.158313,-0.285843,-8.902145,-7.011426,-9.251341,-8.291773,-4.040271,-9.647174,9.354221,-2.329588],[3.690502,-1.201073,3.222327,6.007234,-2.228297,-2.491195,3.649964,5.837256,-2.935249,3.458207],[-1.143934,7.229402,-0.189414,-4.859582,-4.243389,-2.393354,-8.117402,5.038446,1.311201,6.613778]],[[5.247909,7.266599,-9.438992,-6.160351,-9.321914,-9.975444,-2.758676,2.387037,1.845461,-8.511274],[7.469164,6.982680,-9.885274,3.102015,8.079563,3.205560,-9.845714,8.239188,0.438954,3.682632],[5.148880,-8.870087,6.153374,6.186782,-9.593610,2.162040,-2.441167,4.305535,7.963814,-2.937813]],[[-2.947448,9.442547,-4.150736,4.515432,8.886377,2.281446,-1.367411,-9.206616,-2.213391,-4.434695],[4.200570,-0.078423,5.732135,-0.876836,-3.409523,2.422550,4.343384,7.487645,-6.473926,1.400456],[-0.877287,-6.629950,3.534002,-0.368136,-5.124877,-2.669296,-3.076622,9.510415,-3.413644,2.205919]],[[7.790332,4.409658,2.048336,-7.282275,-2.054254,6.283324,9.482605,9.984914,-9.969381,-1.605152],[0.883288,3.438028,9.249985,9.047186,-0.073443,-8.004158,7.937314,-4.246065,-2.722526,-4.462035],[8.261263,6.221129,-1.287966,4.735306,4.718690,7.082935,-3.861349,-1.262630,-0.164907,2.007747]],[[-1.367759,-6.267744,-3.274788,3.647310,2.813924,9.396307,6.572651,4.990219,6.809859,7.819697],[-3.689493,1.408328,3.792253,-6.726780,3.175027,-9.909701,1.454118,-9.040679,-2.066136,3.093938],[7.991808,-0.484347,9.505503,-2.673154,-4.698698,1.709471,6.866531,5.926827,6.211965,-8.217030]],[[3.337425,-9.354293,9.682341,-1.929638,-0.344346,4.192142,-6.184564,0.171093,-0.418565,9.203461],[8.796007,4.985946,1.384734,1.123229,7.750549,-4.616197,-5.836074,5.169348,0.244456,3.549636],[5.255660,3.744601,-1.215468,-9.271491,3.215059,6.660967,-2.397431,8.709618,8.379327,-9.407394]]], dtype = "float32")#candidate|4700|(9, 3, 10)|const|float32
uop_4701 = relay.sqrt(const_4700.astype('float32')) # shape=(9, 3, 10)
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
var_4715 = relay.var("var_4715", dtype = "bool", shape = (24,))#candidate|4715|(24,)|var|bool
var_4716 = relay.var("var_4716", dtype = "float64", shape = ())#candidate|4716|()|var|float64
var_4717 = relay.var("var_4717", dtype = "float64", shape = (224,))#candidate|4717|(224,)|var|float64
call_4714 = relay.TupleGetItem(func_236_call(relay.reshape(var_4715.astype('bool'), [2, 2, 6]), relay.reshape(var_4715.astype('bool'), [2, 2, 6]), relay.reshape(var_4716.astype('float64'), []), relay.reshape(var_4717.astype('float64'), [224,]), ), 6)
call_4718 = relay.TupleGetItem(func_241_call(relay.reshape(var_4715.astype('bool'), [2, 2, 6]), relay.reshape(var_4715.astype('bool'), [2, 2, 6]), relay.reshape(var_4716.astype('float64'), []), relay.reshape(var_4717.astype('float64'), [224,]), ), 6)
bop_4722 = relay.multiply(uop_4701.astype('int32'), relay.reshape(const_4700.astype('int32'), relay.shape_of(uop_4701))) # shape=(9, 3, 10)
output = relay.Tuple([call_4714,var_4715,var_4716,var_4717,bop_4722,])
output2 = relay.Tuple([call_4718,var_4715,var_4716,var_4717,bop_4722,])
func_4730 = relay.Function([var_4715,var_4716,var_4717,], output)
mod['func_4730'] = func_4730
mod = relay.transform.InferType()(mod)
mutated_mod['func_4730'] = func_4730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4730_call = mutated_mod.get_global_var('func_4730')
var_4732 = relay.var("var_4732", dtype = "bool", shape = (24,))#candidate|4732|(24,)|var|bool
var_4733 = relay.var("var_4733", dtype = "float64", shape = ())#candidate|4733|()|var|float64
var_4734 = relay.var("var_4734", dtype = "float64", shape = (224,))#candidate|4734|(224,)|var|float64
call_4731 = func_4730_call(var_4732,var_4733,var_4734,)
output = call_4731
func_4735 = relay.Function([var_4732,var_4733,var_4734,], output)
mutated_mod['func_4735'] = func_4735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4850 = relay.var("var_4850", dtype = "float32", shape = (3, 4, 2))#candidate|4850|(3, 4, 2)|var|float32
uop_4851 = relay.log2(var_4850.astype('float32')) # shape=(3, 4, 2)
bop_4855 = relay.equal(uop_4851.astype('bool'), relay.reshape(var_4850.astype('bool'), relay.shape_of(uop_4851))) # shape=(3, 4, 2)
output = bop_4855
output2 = bop_4855
func_4868 = relay.Function([var_4850,], output)
mod['func_4868'] = func_4868
mod = relay.transform.InferType()(mod)
var_4869 = relay.var("var_4869", dtype = "float32", shape = (3, 4, 2))#candidate|4869|(3, 4, 2)|var|float32
output = func_4868(var_4869)
func_4870 = relay.Function([var_4869], output)
mutated_mod['func_4870'] = func_4870
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5019 = relay.var("var_5019", dtype = "float32", shape = (11, 16, 1))#candidate|5019|(11, 16, 1)|var|float32
uop_5020 = relay.atan(var_5019.astype('float32')) # shape=(11, 16, 1)
uop_5027 = relay.erf(uop_5020.astype('float32')) # shape=(11, 16, 1)
func_4730_call = mod.get_global_var('func_4730')
func_4735_call = mutated_mod.get_global_var('func_4735')
var_5038 = relay.var("var_5038", dtype = "bool", shape = (24,))#candidate|5038|(24,)|var|bool
const_5039 = relay.const(9.525094, dtype = "float64")#candidate|5039|()|const|float64
var_5040 = relay.var("var_5040", dtype = "float64", shape = (1, 224))#candidate|5040|(1, 224)|var|float64
call_5037 = relay.TupleGetItem(func_4730_call(relay.reshape(var_5038.astype('bool'), [24,]), relay.reshape(const_5039.astype('float64'), []), relay.reshape(var_5040.astype('float64'), [224,]), ), 2)
call_5041 = relay.TupleGetItem(func_4735_call(relay.reshape(var_5038.astype('bool'), [24,]), relay.reshape(const_5039.astype('float64'), []), relay.reshape(var_5040.astype('float64'), [224,]), ), 2)
output = relay.Tuple([uop_5027,call_5037,var_5038,const_5039,var_5040,])
output2 = relay.Tuple([uop_5027,call_5041,var_5038,const_5039,var_5040,])
func_5042 = relay.Function([var_5019,var_5038,var_5040,], output)
mod['func_5042'] = func_5042
mod = relay.transform.InferType()(mod)
var_5043 = relay.var("var_5043", dtype = "float32", shape = (11, 16, 1))#candidate|5043|(11, 16, 1)|var|float32
var_5044 = relay.var("var_5044", dtype = "bool", shape = (24,))#candidate|5044|(24,)|var|bool
var_5045 = relay.var("var_5045", dtype = "float64", shape = (1, 224))#candidate|5045|(1, 224)|var|float64
output = func_5042(var_5043,var_5044,var_5045,)
func_5046 = relay.Function([var_5043,var_5044,var_5045,], output)
mutated_mod['func_5046'] = func_5046
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5906 = relay.const(-6, dtype = "uint32")#candidate|5906|()|const|uint32
const_5907 = relay.const([[[5,-8,-9,8,6]],[[1,8,1,7,5]],[[-3,7,9,3,1]],[[3,-9,2,2,10]],[[-9,-2,-5,4,-2]],[[-5,4,-3,1,4]],[[-9,1,10,4,3]],[[-9,-6,-1,7,-4]],[[-4,4,-5,3,-2]],[[-10,-8,6,4,1]],[[7,2,-3,6,-8]],[[-9,-1,4,-9,-2]],[[6,9,-4,-1,9]],[[8,3,9,2,-6]],[[-8,-7,-7,5,-8]],[[6,-10,7,3,2]]], dtype = "uint32")#candidate|5907|(16, 1, 5)|const|uint32
bop_5908 = relay.left_shift(const_5906.astype('uint32'), const_5907.astype('uint32')) # shape=(16, 1, 5)
uop_5934 = relay.cos(bop_5908.astype('float64')) # shape=(16, 1, 5)
output = relay.Tuple([uop_5934,])
output2 = relay.Tuple([uop_5934,])
func_5938 = relay.Function([], output)
mod['func_5938'] = func_5938
mod = relay.transform.InferType()(mod)
output = func_5938()
func_5939 = relay.Function([], output)
mutated_mod['func_5939'] = func_5939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_5946 = relay.TupleGetItem(func_5938_call(), 0)
call_5947 = relay.TupleGetItem(func_5939_call(), 0)
func_746_call = mod.get_global_var('func_746')
func_749_call = mutated_mod.get_global_var('func_749')
var_5985 = relay.var("var_5985", dtype = "float64", shape = (196,))#candidate|5985|(196,)|var|float64
call_5984 = func_746_call(relay.reshape(var_5985.astype('float64'), [4, 7, 7]))
call_5986 = func_746_call(relay.reshape(var_5985.astype('float64'), [4, 7, 7]))
var_5996 = relay.var("var_5996", dtype = "float64", shape = (4, 7, 7))#candidate|5996|(4, 7, 7)|var|float64
bop_5997 = relay.divide(call_5984.astype('float32'), relay.reshape(var_5996.astype('float32'), relay.shape_of(call_5984))) # shape=(4, 7, 7)
bop_6000 = relay.divide(call_5986.astype('float32'), relay.reshape(var_5996.astype('float32'), relay.shape_of(call_5986))) # shape=(4, 7, 7)
output = relay.Tuple([call_5946,var_5985,bop_5997,])
output2 = relay.Tuple([call_5947,var_5985,bop_6000,])
func_6015 = relay.Function([var_5985,var_5996,], output)
mod['func_6015'] = func_6015
mod = relay.transform.InferType()(mod)
var_6016 = relay.var("var_6016", dtype = "float64", shape = (196,))#candidate|6016|(196,)|var|float64
var_6017 = relay.var("var_6017", dtype = "float64", shape = (4, 7, 7))#candidate|6017|(4, 7, 7)|var|float64
output = func_6015(var_6016,var_6017,)
func_6018 = relay.Function([var_6016,var_6017,], output)
mutated_mod['func_6018'] = func_6018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_6081 = relay.TupleGetItem(func_5938_call(), 0)
call_6082 = relay.TupleGetItem(func_5939_call(), 0)
output = relay.Tuple([call_6081,])
output2 = relay.Tuple([call_6082,])
func_6114 = relay.Function([], output)
mod['func_6114'] = func_6114
mod = relay.transform.InferType()(mod)
output = func_6114()
func_6115 = relay.Function([], output)
mutated_mod['func_6115'] = func_6115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6114_call = mod.get_global_var('func_6114')
func_6115_call = mutated_mod.get_global_var('func_6115')
call_6184 = relay.TupleGetItem(func_6114_call(), 0)
call_6185 = relay.TupleGetItem(func_6115_call(), 0)
func_6114_call = mod.get_global_var('func_6114')
func_6115_call = mutated_mod.get_global_var('func_6115')
call_6195 = relay.TupleGetItem(func_6114_call(), 0)
call_6196 = relay.TupleGetItem(func_6115_call(), 0)
func_2693_call = mod.get_global_var('func_2693')
func_2696_call = mutated_mod.get_global_var('func_2696')
const_6202 = relay.const([[10],[-8],[-6],[8],[10],[7],[-6],[7],[-9],[7],[-2],[-9],[-5],[-8],[2],[3],[2],[6],[-10],[6],[-8],[-7],[1],[-4],[-8],[4],[1],[7],[-4],[2],[7],[-7]], dtype = "uint16")#candidate|6202|(32, 1)|const|uint16
const_6203 = relay.const([[10,-1,7,-8,-5,-5,-2,-2,-8,-8,-9,9,2,3,-5,-6,5,5,-5,4,-6,9,-5,-8,-5,9,3,-7,4,-6,4,-4,-1,2,2,8,-4,-3,-7,1,7,3,8,6,9,-10,6,-4,3,-5,-10,2,-9,5,7,-7,8,6,-9,9,-4,2,3,9,10,2,6,-7,2,-10,-10,3,6,-5,2,4,10,-8,-2,10,2,5,7,-4,6,8,-2,3,10,4,1,-8,5,-8,4,2,-2,-3,-1,-10,2,2,-8,-1,-4,-10,6,-9,-7,-10,5,-6,-9,5,-5,-6,2,-2,-4,9,-9,-4,-9,6,8,-7,-7,7,2,-7,-7,-6,10,9,1,1,-9,7,-6,5,10,-6,-5,-5,6,-5,-5,-4,-1,7,3,3,3,-3,4,2,2,-3,10,5,9,1,-3,7,9,5,3,7,2,4,8,10,-3,-8,-10,-1,4,-1,8,-10,-3,1,7,-2,8,4,2,-7,-6,8,-9,-5,2,10,5,8,-9,5,-7,-4,5,-10,-2,9,-3,6,-7,-4,6,-8,-8,-8,-5,4,2,-6,5,-1,4,-7,-9,8,-3,-5]], dtype = "uint16")#candidate|6203|(1, 224)|const|uint16
call_6201 = relay.TupleGetItem(func_2693_call(relay.reshape(const_6202.astype('uint16'), [4, 1, 8]), relay.reshape(const_6203.astype('uint16'), [4, 7, 8]), ), 0)
call_6204 = relay.TupleGetItem(func_2696_call(relay.reshape(const_6202.astype('uint16'), [4, 1, 8]), relay.reshape(const_6203.astype('uint16'), [4, 7, 8]), ), 0)
bop_6207 = relay.bitwise_and(const_6203.astype('int16'), const_6202.astype('int16')) # shape=(32, 224)
func_4730_call = mod.get_global_var('func_4730')
func_4735_call = mutated_mod.get_global_var('func_4735')
var_6221 = relay.var("var_6221", dtype = "bool", shape = (24,))#candidate|6221|(24,)|var|bool
const_6222 = relay.const(8.999785, dtype = "float64")#candidate|6222|()|const|float64
call_6220 = relay.TupleGetItem(func_4730_call(relay.reshape(var_6221.astype('bool'), [24,]), relay.reshape(const_6222.astype('float64'), []), relay.reshape(call_6201.astype('float64'), [224,]), ), 1)
call_6223 = relay.TupleGetItem(func_4735_call(relay.reshape(var_6221.astype('bool'), [24,]), relay.reshape(const_6222.astype('float64'), []), relay.reshape(call_6201.astype('float64'), [224,]), ), 1)
func_3290_call = mod.get_global_var('func_3290')
func_3294_call = mutated_mod.get_global_var('func_3294')
const_6244 = relay.const([0.753811,8.401429,9.400348,5.560331,-8.633722,-7.865744,2.537273,-7.000557,-0.948756,-1.810469,4.333745,-9.052427,-9.773913,5.974526,-9.824884,8.695473,1.230216,-7.158171,-9.044600,-6.593154,2.347593,-6.794513,-5.376503,-0.114697,0.124001,-0.007052,7.146303,3.141800,4.834296,5.753331,7.805579,7.792996,-5.559280,8.884863,-8.213505,1.264974,5.280036,-2.207573,-7.595707,-7.970320,8.206725,-2.024284,0.028775,-2.431344,0.073225,-9.511425,-9.912547,1.016708,-6.197751,7.805975,-0.485254,-1.876815,2.983430,-6.575593,-5.530364,2.279526,5.361644,-4.530437,0.298711,9.703031,-6.694975,6.232007,-7.182313,6.743892,-5.480984,8.753662,4.916822,-2.778423,-5.239009,-0.037033,1.238373,-8.967928,-2.436338,9.409826,7.332416,-7.768408,-2.262021,2.819200,-4.748792,1.752198,3.674652,-1.375674,6.069113,7.857594,6.111487,-6.292017,3.855157,2.995495,9.302623,-5.776635,0.940417,-8.230849,-4.140018,-8.136875,1.798298,3.382690,-9.552342,0.545479,-5.702956,4.664497,3.084290,-4.995822,-4.518452,-3.651328,-4.161851,8.524389,5.596294,-0.703238,0.914481,-7.550337,-7.352154,3.827319,2.274415,-4.221931,-6.633798,9.398673,2.757942,-2.584999,3.873432,4.717584,5.565859,-8.836900,3.027976,8.045605,6.532768,8.793078,6.190188,5.260093,8.304130,1.904378,3.376251,6.992438,-7.452259,2.660451,-9.453030,-7.859315,0.431255,-4.433845,0.315608,1.957516,-6.617518,-6.521216,4.713304,-4.882633,-3.280981,-5.463380,8.925737,-2.785951,-8.669191,2.032654,7.539404,-2.136055,-0.266822,7.297312,-3.452577,0.425344,5.630089,8.737419,2.062762,7.765788,4.610549,1.385551,-2.822369,-3.055069,5.240199,0.326111,6.318368,5.883218,5.753261,7.042127,5.334596,-7.273974,5.795292,-0.240204,0.479200,-9.367502,4.122393,7.739169,4.771732,-6.410598,-2.688576,0.566940,-8.139298,5.504644,1.513494,6.527217,2.897647,5.805820,4.674016,8.786081,-3.585799,5.820918,-5.718320,1.835677,6.681324,-7.541050,3.752319,7.205768,4.289737,2.516841,-6.524998,4.440884,-6.789894,-5.698913,-6.022749,7.523598,4.213546,5.835443,8.574777,5.751038,-0.574631,-7.762600,-3.618654,8.727989,6.903134,-2.053503,-5.063981,1.700588,5.964205,-1.612171,-7.575533,-1.160289,6.830066,6.982035,-1.596182,7.449722,-7.193026,-1.652219,1.449710,-4.211070,1.506239,-4.909995,0.031535,-2.859575,3.953057,-1.031245,-6.426877,1.619067,-6.996407,2.933672,-5.071460,-8.881043,-0.966048,7.498087,-2.315022,-8.841444,-2.940535,0.300008,1.209202,-9.654770,0.266227,-8.331205,0.228627,9.465918,-2.750814,-7.334931,9.998858,9.230346,-9.938606,2.797190,4.922005,-9.453759,5.751721,3.822630,3.106768,5.791455,-3.785925,7.393405,-6.131549,-7.289165,0.160370,6.711897,7.481875,-8.396971,7.008762,-2.496511,-6.223069,-6.055869,6.657463,-1.530473,-9.890422,9.384220,2.671520,-0.806198,0.290205,-3.505203,-0.711119,2.521359,-8.505647,7.096327,7.712849,-8.552597,-4.507896,0.452559,-5.449547,-4.614740,-6.153281,-5.918825,-7.548394,1.505095,9.330556,-2.448129,6.632608,5.511204,-8.318539,4.504476,-0.267959,3.917473,-6.223236,-7.481390,-7.973856,8.339711,-8.132409,-7.574097,1.716435,-1.886272,4.452519,-5.705943,-3.136157,-7.160400,-1.020622,1.283382,-3.582615,9.196288,5.193607,5.314133,-2.440227,-8.599942,-6.128622,-9.697431,-2.098287,-9.003266,8.830326,-2.106054,-2.384927,-5.699644,-0.997475,-1.644537,-5.212037,-2.524846,5.245069,2.873902,-5.049304,8.656971,-3.973112,-3.432349,-9.049307,-1.731005,7.687846,-5.245951,-0.279964,-3.142554,-3.444834,7.450433,-4.257921,-1.744774,0.376238,-8.075520,-7.186670,4.467832,7.775047,7.544484,-4.801164,4.136607,3.787553,-9.109519,7.182101,-2.647839,3.370047,-9.970586,7.936780,5.685391,8.036802,0.546776,1.292721,-7.324273,-6.124993,3.455629,-3.467042,5.342583,-2.173698,3.680898,-9.436035,0.518167,7.457376,-2.713505,-3.572052,0.781035,4.519817,7.114323,9.569756,7.959508,-2.697141,9.062940,6.843910,-8.042647,-3.761882,8.498447,6.281866,-9.473885,6.712885,-7.263424,-7.189379,2.169278,-4.098950,5.799155,-6.348726,2.502272,0.107947,1.051131,4.784252,-7.610063,3.960868,4.594505,-5.505726,2.880421,-4.550891,8.153570,-0.646524,-3.398567,-5.737777,-9.355998,-1.651353,1.419426,-9.149849,-2.090993,-4.035217,8.060343,8.157956,-5.647505,-6.153877,5.036322,4.621208,-2.629903,7.517247,-2.542748,-3.456863,-4.283647,3.893007,-9.544721,7.430498,1.814883,3.174309,0.033620,3.555961,-7.584782,-4.611217,-4.560498,-8.087852,6.689491,7.362308,0.190958,-9.767774,-8.090748,5.307122,-5.544810,-0.639014,-5.608862,-5.539199,-8.961590,-5.847061,-7.180153,-8.628776,-6.824759,2.101222,-7.531839,-9.928604,-5.491323,4.249588,-9.308411,7.641058,7.300704,-6.457238,1.540065,-7.237021,0.138609,-9.341274,5.749190,-7.148947,5.867456,0.724376,5.097580,-5.417862,-1.643381,-5.694891,-2.809246,2.678717,7.717226,-7.186028,8.278278,-8.583797,0.667065,-7.476238,3.407829,-7.258565,-0.834637,-5.464470,5.506616,3.459149,4.104747,-1.018339,9.230302,1.011179,-6.112649,1.471134,-9.880077,-6.514060,-0.376662,-9.076181,9.956424,-2.706661,-5.383053,9.091872,2.062227,-5.835716,6.758403,9.303713,-9.513851,1.698197,-6.518464,-7.886074,6.873050,-9.205106,2.262013,9.464227,5.477966,-7.608947,9.909875,-5.771726,-9.465393,3.855033,0.559320,-9.891442,7.352200,-6.393750,-0.702222,4.025566,2.501421,1.956850,-3.452542,-0.115532,6.574388,-9.868067,-1.433239,0.069685,0.878195,-3.206676,6.332229,-3.488069,1.982495,-8.316096,-7.234374,0.037196,2.127566,-1.228496,8.263725,-8.721759,-5.456141,9.540652,6.371423,2.137200,2.964868,5.909284,8.431718,-8.510168,3.345648,-4.087593,-6.767263,5.699805,5.996061,8.873247,-7.035486,9.330303,-9.270154,-5.258393,7.983444,-3.284290,8.771426,-9.328559,-2.468504,0.691186,3.044525,5.874143,7.889606,-9.372629,-1.381905,-7.548261,0.361908,2.171961,-7.616775,8.839058,-5.397590,3.222807,4.270141,-8.828625,-2.053807,6.912492,5.556650,4.467503,-1.773755,9.045790,1.300084,9.673580,5.789269,8.084638,-3.603509,-0.869740,-4.860065,3.859489,0.335316,2.236046,1.684956,2.871459,3.370044,-9.288407,-1.233370,6.255065,7.149643,-7.840056,2.902204,-0.545380,-2.157068,-4.190831,-6.503907,5.708035,3.243030,4.284347,0.258586,-5.770250,7.400906,-9.711422,-2.812910,-0.562740,3.029483,0.839760,-0.869776,-2.473203,-5.893453,2.064280,-2.744588,-3.984355,-6.855626,6.467228,-6.991339,-8.238170,-9.678579,-0.543554,-0.017970,-9.101755,4.408973,6.033983,9.287159,4.441460,-1.862884,2.545023,6.884578,0.701954,9.279902,3.881729,-3.255202,-4.748755,2.813320,4.905769,2.841732,3.921719,4.342169,-5.061568,-1.004959,-2.676646,-1.173336,-3.645461,4.210106,6.854236,-0.796737,1.401744,1.537989,0.647647,-5.808754,-1.050917,-9.938527,-6.968511,-5.290771,-9.312336,-7.884028,-7.654775,-8.040213,-6.423596,-0.138342,5.544713,9.208089,7.018198,-3.296579,6.817029,4.636671,-0.035036,8.779850,-2.124386,5.933883,-7.700859,3.791887,-1.667038,6.841097,-6.791009,3.021896,-6.835417,-3.694380,3.489275,-4.908767,8.539232,-4.306478,6.504557,-5.789137,-1.578269,8.124728,-1.919817,2.624534,-2.740238,1.632862,-0.201507,-9.664699,3.438991,-2.637835,4.804975,4.759329,-9.488493,-0.546874,1.934670,6.905014,-1.990930,1.767105,-6.782612,-6.586176,4.744054,4.609747,-9.813213,9.754334,-7.546816,-5.724911,-2.017585,-6.316376,1.836616,8.310062,4.816096,-8.438989,2.061502,-7.676536,-2.971388,-5.188153,6.762896,0.212342,-6.704839,7.173848,-9.612500,-0.407077,-1.410659,-4.965272,-2.590454,-3.817293,-9.670399,8.394229,-0.070031,1.580525,-1.552557,0.620380,0.511028,1.051705,2.204974,-5.449298,-2.960197,-8.901510,1.066650,8.632661,-2.013761,-8.085563,-3.874664,-1.790281,6.256578,-5.971317,-7.925849,8.691547,-9.296663,1.842192,-1.602322,-3.294209,-1.736109,8.990563,6.225324,6.568356,-1.120886,-4.926257,-8.808189,-2.871946,5.479019,1.436099,-5.041640,2.133341,-3.317461,-2.338743,3.558086,2.898934,7.413209,2.406410,0.124200,3.988093,-3.499766,9.447613,-8.344308,0.782071,-2.423980,6.238035,9.810297,0.635835,1.479246,-0.795064,-6.128094,3.236529,-2.173863,-7.026769,4.487759,-9.654256,-5.501399,-6.360025,1.881275,-4.055621,1.201485,-6.172227,-9.203278,-4.963361,3.915632,-3.110207,-4.099517,8.491368,9.505388,8.032040,6.523905,-0.713764,8.071096,6.425250,-3.217220,-7.908867,9.768082,9.342974,-7.298663,-6.382823,-1.314270,-7.764854,-7.360344,-1.312640,9.811608,-6.577594,4.043883,-6.123750,-2.530668,1.076323,6.691439,-2.124873,-3.819771,2.092298,7.598202,-1.974630,-2.745539,-4.808849,-7.563496,-4.860969,-5.144001,0.908018,-5.704652,-5.692329,4.449158,3.446457,5.685701,0.555999,8.069239,0.048592,-3.465032,3.169987,-6.296571,9.513745,-0.757545,-5.251659,2.217753,-6.248232,-6.282695,-1.182330,-1.187259,-8.724956,9.985942,9.970385,-3.522487,6.269427,-4.928780,-5.904257,-3.777489,2.030627,0.659909,-6.805726,4.794429,-2.396701,2.854142,3.229483,6.586951,-6.718849,-8.828832,8.361371,-7.358089,2.812264,8.645001,3.379121,-1.764453,-3.407021,-7.047281,-4.796909,1.363247,0.357819,7.485229,-8.129887,3.466593,4.993605,-9.359847,-1.156457,2.284171,8.397898,8.615621,-0.682333,-7.552407,-3.305382,6.415369,-8.134184,3.156364,-9.072446,7.919230,5.720464,2.560035,-8.322430,-7.093616,-8.415644,-6.879562,-7.586784,-5.557846,5.109714,-8.415888,5.514528,-9.753681,-4.807475,-1.640625,-4.873753,-5.460152,-4.463714,-5.831052,3.236954,0.853431,-9.056828,-6.449497,-6.631316,-2.216815,9.532470,5.905890,-9.404849,-4.605472,2.715980,7.387990,-6.548478,-3.082555,8.923896,3.943161,9.971852,-9.435375,6.967129,-9.735140,4.679323,6.036860,4.052984,-9.395755,3.918809,0.353409,0.090815,-0.068578,-8.154667,-0.716458,-7.734951,-2.260692,-2.074855,1.756318,8.337435,2.327115,-6.356919,1.112771,1.506060,-8.955461,4.818798,-9.592206,-4.897434,-7.569355,1.657782,3.621659,8.098343,6.968130,-0.226178,5.060733,-0.378916,8.757506,9.440719,7.918391,-4.468285,7.068040,4.814373,-4.162942,5.329231,-4.456342,9.127203,-5.117951,0.214675,-3.343130,-2.881727,-6.567001,8.699071,-8.723642,-6.342913,7.837760,2.656501,-4.966542,-3.340592,-8.560032,-0.860081,-5.403862,-2.132137,-4.294385,-2.971207,-7.548897,-3.066983,-7.030732,-9.202541,-5.679269,-0.776049,0.358924,2.297740,-5.538075,-3.245500,5.259691,4.650657,-8.455748,-9.999421,3.036523,5.632255,7.053293,-9.466945,2.971712,-6.059899,-6.392477,-9.225744,-4.388122,7.562325,3.219245,-2.565652,-1.410460,2.078069,4.783028,8.202933,-0.501274,-1.215585,-3.758410,9.332833,3.375143,-4.825669,-6.569140,7.992801,-4.018151,0.597549,-0.486280,-8.285110,0.969606,0.242987,5.408941,-7.606935,-5.572958,7.383380,4.248596,-4.692781,2.444838,-4.595804,9.939710,-5.079081,7.389118,-1.591040,6.469225,-2.805031,-2.364597,-2.570973,1.126630,3.816797,7.842605,-7.073996,-5.028485,-3.858951,5.155857,3.703644,-6.855960,-5.399732,-0.073814,-8.495324,2.806609,-5.553521,-2.823931,9.663845,8.657089,2.894572,-8.872432,-1.929400,4.042833,-7.790133,6.777794,6.683496,8.633697,5.744232,-6.298160,-7.215069,5.454786,7.282722,5.540044,9.753837,-4.615608,6.610733,-1.977078,1.400299,-9.042123,4.325304,1.756892,-6.670842,-1.066368,-6.004562,3.423381,0.714294,-3.504034,-2.405356,6.780435,-5.895279,1.536493,-7.407615,6.818172,7.547293,9.308649,-0.989224,3.837331,-5.759474,-7.382122,1.509760,5.632461,-7.763059,9.888742,5.948034,-1.854662,-4.634925,3.314804,-0.223578,-2.906173,6.149831,-2.338513,2.073041,-8.843195,6.433300,-9.720551,-8.608677,6.343087,1.725253,7.849442,-3.919364,9.448290,8.862698,7.389537,7.758036,2.415135,-4.732859,-5.233535,-9.978002,0.999941,-9.342283,-5.344130,6.895926,5.506388,-5.020938,4.392815,8.802121,-5.650306,2.193143,-2.693941,9.560025,8.572053,5.094734,9.842827,-4.001474,5.073764,9.165289,9.478692,-7.060087,0.491512,-7.472035,5.564791,5.970549,-2.804322,1.177829,-4.445222,6.691823,-1.446008,1.268378,-3.618612,-1.109995,-7.865128,9.616314,-3.486484,2.243614,-7.918149,-1.361918,7.420171,1.243124,3.401597,-1.209482,-9.942936,4.154798,-3.152977,-4.588057,4.583307,-2.538013,-9.868408,0.154501,6.477854,8.369135,-2.344067,8.415230,0.102885,-9.220022,-4.911574,-4.608166,-7.015792,2.480489,8.640110,6.771079,3.256575,-2.835673,0.421065,-7.148647,-1.995175,-9.403139,-3.834635,-5.869695,6.764113,-8.819501,8.271570,-4.233900,-5.326468,-2.478636,8.048590,-2.859658,-0.284578,1.496756,1.764751,-2.322809,9.004287,-5.508895,4.044547,3.174031,6.438617,-6.466079,0.694452,-6.124646,-7.755040,4.056582,-5.267592,-7.641993,-8.236421,-5.756036,-8.433872,-0.868978,-4.271847,5.246235,7.918810,-6.962879,-4.431945,-4.426403,1.688074,4.429811,7.948735,4.643791,1.789915,-6.107197,0.481332,1.066311,-5.257653,0.798887,-2.390572,-2.775364,-8.000583,7.607875,2.721844,-2.741834,-7.746176,-8.917552,-5.791603,-9.069308,-0.706419,2.147616,1.976604,6.817778,-0.943750,-0.427598,8.351136,8.194300,1.651208,-7.347575,-2.090632,5.108474,-8.162005,-7.116632,-2.668250,-8.306766,-0.042215,-0.904126,-2.739974,9.637402,8.766214,-5.496558,-2.972852,-4.944439,-7.369644,-6.971293,8.531604,6.172235,5.635452,-0.344373,-0.120737,-0.855079,-6.787576,5.972646,-8.696819,-0.759472,-1.387644,-9.312417,-5.427155,6.823156,2.884527,0.115660,7.943938,1.034565,-8.529296,-9.486198,-7.120123,3.432664,-7.976152,-5.411183,9.040932,-8.561309,9.178839,-1.162554,2.396996,-2.482721,3.875828,1.969812,-9.327862,-3.109960,-5.790105,-3.597526,0.882147,1.452351,-1.023228,5.381196,-8.914007,4.268459,-6.928962,0.794597,8.332207,3.223158,7.771888,-0.009880,2.713579,7.445886,8.719887,-9.295883,6.258109,-4.058335,0.602806,-3.918751,1.733389,1.162484,0.725801,1.210323,-7.573676,-1.587135,4.957493,-1.407788,6.902307,-7.693053,2.494869,3.156819,1.634575,-1.771629,2.498947,-9.103428,-1.932247,8.179690,8.342201,4.223437,4.748508,6.042760,-7.326260,0.049506,5.096956,-1.951787,-3.614949,-8.736731,-5.413284,9.177738,1.087073,-0.902768,5.611597,1.764865,9.994310,7.634341,-0.701762,5.241192,-7.181372,-0.413778,0.444802,-6.402886,4.264111,8.100031,5.192339,7.274393,-6.787775,-3.416055,2.286782,-1.871214,-6.847270,1.409003,1.388450,8.660775,4.340600,8.224091,5.095388,2.870442,-9.132271,-8.124733,4.053825,-2.737656,8.599019,8.951939,6.024513,3.984781,7.723544,-1.989731,-2.127789,-2.818020,-3.817488,-9.066147,1.408721,-3.498402,-5.749955,5.161237,-5.154958,8.364931,4.504048,2.278501,5.570920,-7.393715,6.864110,0.338205,4.518744,-7.479337,9.206095,5.634795,-7.337360,8.697050,-4.167996,-7.867487,-9.070476,-8.801233,-0.793211,-4.573233,0.137361,9.534524,-5.492830,-3.162055,-9.250813,1.500859,5.808926,2.761185,-4.010038,-7.515238,7.325289,0.718866,-2.388527,0.097215,9.713431,-0.151566,1.065234,-7.697818,-4.363204,8.812615,9.567712,3.674775,7.499510,-4.050334,9.276502,-2.476824,6.303266,-9.866210,8.979027,-3.021267,-5.104982,7.778440,-0.605740,6.335196,-0.872486,-8.126749,9.582861,-4.436843,-8.871486,-8.281785,5.259162,-1.374239,-4.177840,2.128358,8.674092,5.861003,-3.940401,3.776765,-7.052405,-5.807728,3.741372,-5.550558,-0.502990,9.594609,3.030602,-8.346987,-4.707333,3.741645,3.493273,-1.091361,-5.230803,-7.231096,5.632519,-6.570105,-7.237941,-1.658999,1.525867,-9.273512,-7.042158,-6.667253,9.065549,-9.381629,2.101692,5.990840,-2.699795,9.307908,8.068872,-4.158432,2.394945,-4.825547,0.213307,0.041236,7.354031,-9.546622,5.757609,7.160554,5.300270,-5.495234,9.061487,3.136288,-3.847906,-4.613555,2.105561,-1.656852,6.149970,-7.809950,7.647568,0.371272,-4.230004,-5.366387,-3.934946,-0.203097,-6.364338,7.567725,-6.231003,7.162006,8.718723,-8.105902,-3.856846,-6.576122,6.481026,-3.002916,-1.631225,1.423478,7.952006,3.599555,5.127558,0.413544,-9.366592,8.813962,-0.455082,3.616513,2.917062,-2.815063,-7.259824,3.883081,7.347248,5.541266,-2.748324,-1.759065,-6.809666,7.715611,-2.877124,4.032684,9.962490,5.116809,-1.294687,-3.868203,8.114423,2.554307,3.321854,5.985796,3.392763,-5.369744,-5.675289,3.464184,-9.891999,-2.341021,-6.618143,-1.855773,4.845510,8.165092,-3.478330,6.763397,-3.761634,-6.221077,0.861351,-2.964146,-4.401816,-0.060432,-6.392397,7.688903,4.296757,2.724050,-3.911222,9.237305,8.569473,0.695148,-7.810916,1.910878,0.121272,-8.249272,-7.148790,2.947689,-0.402621,9.625291,-1.756344,2.980816,-4.953648,2.784389,-2.865675,-4.948756,3.057239,-8.479786,-6.031053,-2.651448,8.801980,6.026550,6.019874,-5.097122,-3.706315,-2.601357,-4.482772,-3.413395,-2.268333,4.710035,1.848560,4.700635,3.796539,-4.513971,5.735983,-1.268203,-3.132691,-4.339436,-7.225861,5.620617,-3.631996,8.903134,7.101354,-3.663140,9.828590,0.708091,4.141997,7.313976,-8.348331,1.574590,-1.410784,-3.125673,7.818359,9.679178,3.794858,-9.659695,-3.316181,-4.018410,-7.536769,-2.766652,1.550069,-0.144425,-9.006833,3.028214,0.147682,-5.625218,-5.152289,-3.450423,-0.101123,-8.276622,-1.459752,6.839526,-8.541115,9.438504,-1.471525,4.070631,1.973489,2.498749,0.530190,-2.486429,6.750542,1.820602,6.187663,5.771100,2.038371,9.363085,-0.056368,-2.483364,-5.956600,7.599057,7.772038,-7.736798,-8.698907,-7.542720,2.106665,3.974838,-7.600611,-1.015101,-8.889713,2.504210,5.377447,-5.454015,8.603018,1.440803,-6.543913,8.893452,2.095711,-4.520820,6.354118,2.602523,4.863917,2.109875,4.834289,5.685588,4.354995,7.366289,5.615976,-7.076909,7.343980,-4.219563,3.200702,3.956744,-5.152102,-8.039412,2.477386,-1.925360,-8.151318,-1.602991,7.174240,-3.039452,-2.132268,-1.330819,9.034273,-7.927587,-8.816203,-2.810727,-5.813056,-4.962595,4.339938,-6.506708,-2.946691,2.423368,-5.116141,0.314013,6.962452,-1.524381,6.015912,8.155445,-4.424414,9.035640,-8.411261,-2.349404,-2.593511,6.615082,7.841389,-2.929585,-2.859919,1.183925,0.847992,4.485678,-0.635668,-5.037840,-1.846768,-4.275248,5.868174,8.211666,7.912815,8.938652,-8.201677,0.538151,-2.544473,1.273028,2.914082,-8.571149,6.425634,7.464694,0.948134,-6.415992,6.666473,-9.545710,-6.387642,-5.510044,8.401970,3.008493,0.030714,-5.119497,-5.382866,-3.422600,-2.838960,-3.216010,-9.198200,2.517320,8.146253,6.592602,-7.186091,-1.262584,5.223727,-3.372832,-2.347633,-7.257335,-3.295193,3.970728,0.892228,-1.906301,-5.952427,7.529076,-9.439390,4.379078,-1.612424,-8.387709,-9.597249,-7.192767,0.428265,5.927516,-3.564065,6.668879,-2.988020,-4.504735,7.131054,0.909310,7.539410,-7.020728,6.062906,-8.244463,8.025258,-1.854869,0.409644,4.299343,5.559205,-7.239082,1.416236,-0.870961,-3.257596,5.700014,3.442225,-7.180547,7.299222,-5.663713,-5.060841,1.567527,4.952367,7.460013,-2.054001,5.689586,2.458747,5.555602,-5.043378,-4.923035,-1.615289,-4.403335,-8.310312,9.353562,2.634847,-5.099750,-1.130326,5.739180,2.315326,-6.448857,-0.430960,8.002799,0.746809,-5.458861,-1.146702,-5.702554,-0.629877,-9.099977,9.085890,-3.739051,4.815281,-3.331902,-3.059481,8.511986,2.112111,2.763231,-7.701171,3.165439,-1.420618,3.364184,3.501509,8.630348,-0.483203,-8.759052,0.902268,-9.449753,-0.357953,-6.867800,7.024618,-1.124817,5.323341,-8.060724,3.416636,4.477675,4.276800,-8.418801,8.781438,-3.829340,-9.924200,6.635291,6.621555,-6.113000,6.477669,1.260175,3.618473,8.329369,0.485851,-9.086691,4.229782,-5.730456,-2.506158,1.158066,0.984933,7.191717,2.763561,7.871657,-0.531897,-2.152196,2.050002,-1.988321,2.264873,4.968239,6.778142,7.274542,-2.248770,5.470129,8.823893,-2.654294,-7.928711,-2.726775,-0.428268,1.889539,9.440109,-4.415832,4.219251,6.395780,-6.255425,4.106622,-6.155357,7.991495,3.335065,4.886789,4.960695,4.656568,9.423393,9.008387,1.773270,6.195480,-8.425444,0.604004,-8.775991,0.747831,-4.361701,9.943013,9.438640,1.803553,1.508876,5.732773,-9.466253,9.213224,-8.938644,6.972110,0.721643,6.382524,6.143356,6.961777,9.905437,-4.435234,0.447604,6.979485,-9.252118,2.698941,5.190019,9.511721,0.046966,-7.374787,1.633674,-1.989086,-1.410608,3.817764,-9.794271,1.847875,8.823732,6.610875,9.037339,0.128409,5.218478,-4.236862,-0.610283,-8.189187,-1.386639,3.087491,5.372349,-7.616360,6.559686,2.077116,-4.252183,-0.026632,-8.646405,-4.073235,-0.985058,-5.074778,6.414492,-3.668361,-5.983187,8.151208,6.549007,-8.567238,-4.404812,-6.088367,-0.502855,-0.520389,5.873692,-6.165884,-3.211672,5.557778,4.666301,6.282370,-8.410730,-3.342205,-2.884179,3.105964,-0.128878,-3.173487,-8.047122,3.617640,-2.474772,8.020891,-0.954398,-4.851946,1.498543,5.740095,0.708631,7.847382,-4.067066,-7.346557,9.616969,6.141448,6.314570,6.885277,-7.479106,3.864689,-6.801684,-1.231139,-3.205808,9.347271,1.657404,-1.273731,4.717177,-5.604763,0.931869,6.904687,8.432584,1.575941,-5.116445,-6.510814,2.635428,-0.537798,7.776929,-1.318775,4.258931,2.145501,-5.186750,0.920618,7.215269,4.977086,-2.195513,2.626879,0.021613,-5.457882,9.447826,8.641972,-4.578495,-5.759901,-4.563132,-2.038575,3.176954,-2.677736,2.361512,7.762121,-7.538297,-2.309663,4.446556,-3.503362,-6.174016,5.730951,1.933275,-1.780350,-8.075299,0.902233,1.306868,-5.453331,3.850970,-1.242319,-3.546415,2.950854,-6.144155,6.589602,-4.951878,0.785915,-9.230543,-2.245689,4.759728,-9.724755,-4.875296,-3.939615,2.616283,-8.509714,-8.300729,5.667017,-3.735804,8.312186,-4.839040,3.426840,-4.579423,5.442283,5.895584,-8.537491,-0.042255,-5.000378,5.673200,-6.523730,7.954499,8.694495,3.362324,-8.741195,-8.076914,9.968318,-9.504938,7.162310,5.444728,5.123789,-7.970112,4.647734,-2.297726,9.758573,-7.737117,-0.345002,-6.629547,5.013822,3.045680,-1.210543,1.459399,-7.115688,-9.915125,-0.979619,3.477896,-4.537334,-3.968111,-5.757483,4.296975,-9.539574,-0.763092,0.649933,-2.635119,-2.925359,-2.511511,1.074866,-6.608430,9.413589,9.658229,-0.610025,6.274569,3.807758,-4.816963,9.128337,8.271034,-0.275544,-3.765496,6.591900,-5.633320,-0.043441,-9.031983,3.807958,-0.371828,9.399863,-5.708337,-4.916264,-9.247652,7.688484,3.874658,-9.277921,-9.611931,-6.542895,-3.337606,-2.552893,-8.897549,7.775417,-5.168550,9.012305,8.776385,6.372220,6.610234,2.344673,6.888458,-1.274324,1.620111,6.528734,1.761820,3.586271,2.345398,6.748264,-9.169689,-1.505809,1.680400,1.854055,-6.514680,-8.137639,-0.330214,4.275201,8.197513,6.423943,-5.473337,-3.755984,-8.876429,3.419136,3.653212,8.282540,9.377396,9.371612,-9.231102,2.416130,4.892299,-7.410631,-5.013944,2.987774,2.687803,-6.651216,3.022549,-0.775170,-2.019006,-5.078572,-6.774482,-5.781521,4.063886,-3.189121,-5.793774,3.088044,5.396884,-8.115902,1.158726,2.937748,-9.570774,7.808971,6.575308,3.687142,4.199653,7.972535,-2.351234,-7.766973,2.776917,9.219971,-9.133326,1.094388,-1.553169,1.588194,9.641736,-9.357034,5.588200,-2.017519,5.333666,-7.283150,1.522008,-2.180826,9.792019,1.854597,0.123517,7.708854,9.223822,-1.476903,-3.955258,-6.679228,-7.536913,7.142269,-3.596033,-4.290100,0.562494,-8.878385,6.031155,-6.833334,3.966304,9.180692,-4.543290,9.681823,-8.133146,5.709349,2.574825,-2.008484,1.355471,6.841159,9.870080,1.521237,2.070534,9.770965,7.205498,2.659366,-3.478909,0.815544,3.786051,-2.860181,-5.557670,-6.127971,4.960163,-0.609538,-8.423885,-6.053747,5.080388,3.332997,-1.298857,7.039884,-1.668406,-0.543415,-0.639115,-5.621678,-3.728243,7.603042,-7.122223,6.103139,-5.310369,-9.070712,8.400383,7.010286,4.565985,7.497237,6.618693,4.748067,-3.439246,-3.223438,0.447843,-6.199198,-1.337838,7.546048,-3.323628,-7.440343,-5.583903,7.139811,-2.232033,-4.970859,4.286164,0.455228,2.595666,3.212209,-2.552183,-7.692587,-2.270140,-1.555320,-5.136883,6.157438,-2.472556,9.571064,2.788442,-3.756827,5.086339,5.952356,9.550535,-7.426907,4.784707,-2.958681,3.013736,1.943086,1.688799,-3.994787,6.460505,-0.385930,-3.234500,-1.380842,0.956666,8.668706,-9.554188,3.166326,5.849557,-5.346055,6.238076,-1.696691,5.026283,-8.325082,6.485178,-7.325825,4.926424,-7.230523,-6.912951,2.336249,-0.326277,0.544376,7.614051,-3.093714,-2.372252,0.955317,1.395594,-1.735485,4.402978,0.460228,-4.772139,-3.721451,3.510415,2.637954,8.421151,1.864287,4.584292,-5.966611,2.827339,3.012522,1.953428,-9.467233,-1.314787,8.970074,8.936681,2.660150,-8.752407,4.297325,-5.142299,-5.916712,3.504494,5.320541,-7.373931,0.232610,-0.329939,8.600208,6.654410,-2.894986,-0.636888,-0.165070,2.689986,8.922069], dtype = "float64")#candidate|6244|(2464,)|const|float64
call_6243 = relay.TupleGetItem(func_3290_call(relay.reshape(const_6244.astype('float64'), [16, 14, 11]), relay.reshape(const_6244.astype('float64'), [16, 14, 11]), ), 1)
call_6245 = relay.TupleGetItem(func_3294_call(relay.reshape(const_6244.astype('float64'), [16, 14, 11]), relay.reshape(const_6244.astype('float64'), [16, 14, 11]), ), 1)
output = relay.Tuple([call_6184,call_6195,call_6201,bop_6207,call_6220,var_6221,const_6222,call_6243,const_6244,])
output2 = relay.Tuple([call_6185,call_6196,call_6204,bop_6207,call_6223,var_6221,const_6222,call_6245,const_6244,])
func_6248 = relay.Function([var_6221,], output)
mod['func_6248'] = func_6248
mod = relay.transform.InferType()(mod)
mutated_mod['func_6248'] = func_6248
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6249 = relay.var("var_6249", dtype = "bool", shape = (24,))#candidate|6249|(24,)|var|bool
func_6248_call = mutated_mod.get_global_var('func_6248')
call_6250 = func_6248_call(var_6249)
output = call_6250
func_6251 = relay.Function([var_6249], output)
mutated_mod['func_6251'] = func_6251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_6262 = relay.TupleGetItem(func_5938_call(), 0)
call_6263 = relay.TupleGetItem(func_5939_call(), 0)
output = call_6262
output2 = call_6263
func_6266 = relay.Function([], output)
mod['func_6266'] = func_6266
mod = relay.transform.InferType()(mod)
mutated_mod['func_6266'] = func_6266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6266_call = mutated_mod.get_global_var('func_6266')
call_6267 = func_6266_call()
output = call_6267
func_6268 = relay.Function([], output)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_6384 = relay.TupleGetItem(func_5938_call(), 0)
call_6385 = relay.TupleGetItem(func_5939_call(), 0)
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
const_6396 = relay.const([True,False,True,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False], dtype = "bool")#candidate|6396|(24,)|const|bool
const_6397 = relay.const(-2.101762, dtype = "float64")#candidate|6397|()|const|float64
var_6398 = relay.var("var_6398", dtype = "float64", shape = (224,))#candidate|6398|(224,)|var|float64
call_6395 = relay.TupleGetItem(func_236_call(relay.reshape(const_6396.astype('bool'), [2, 2, 6]), relay.reshape(const_6396.astype('bool'), [2, 2, 6]), relay.reshape(const_6397.astype('float64'), []), relay.reshape(var_6398.astype('float64'), [224,]), ), 3)
call_6399 = relay.TupleGetItem(func_241_call(relay.reshape(const_6396.astype('bool'), [2, 2, 6]), relay.reshape(const_6396.astype('bool'), [2, 2, 6]), relay.reshape(const_6397.astype('float64'), []), relay.reshape(var_6398.astype('float64'), [224,]), ), 3)
output = relay.Tuple([call_6384,call_6395,const_6396,const_6397,var_6398,])
output2 = relay.Tuple([call_6385,call_6399,const_6396,const_6397,var_6398,])
func_6404 = relay.Function([var_6398,], output)
mod['func_6404'] = func_6404
mod = relay.transform.InferType()(mod)
mutated_mod['func_6404'] = func_6404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6405 = relay.var("var_6405", dtype = "float64", shape = (224,))#candidate|6405|(224,)|var|float64
func_6404_call = mutated_mod.get_global_var('func_6404')
call_6406 = func_6404_call(var_6405)
output = call_6406
func_6407 = relay.Function([var_6405], output)
mutated_mod['func_6407'] = func_6407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_6487 = relay.TupleGetItem(func_5938_call(), 0)
call_6488 = relay.TupleGetItem(func_5939_call(), 0)
output = call_6487
output2 = call_6488
func_6492 = relay.Function([], output)
mod['func_6492'] = func_6492
mod = relay.transform.InferType()(mod)
output = func_6492()
func_6493 = relay.Function([], output)
mutated_mod['func_6493'] = func_6493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_6532 = relay.TupleGetItem(func_5938_call(), 0)
call_6533 = relay.TupleGetItem(func_5939_call(), 0)
var_6538 = relay.var("var_6538", dtype = "float64", shape = (16, 9, 5))#candidate|6538|(16, 9, 5)|var|float64
bop_6539 = relay.bitwise_and(call_6532.astype('uint8'), var_6538.astype('uint8')) # shape=(16, 9, 5)
bop_6542 = relay.bitwise_and(call_6533.astype('uint8'), var_6538.astype('uint8')) # shape=(16, 9, 5)
output = bop_6539
output2 = bop_6542
func_6547 = relay.Function([var_6538,], output)
mod['func_6547'] = func_6547
mod = relay.transform.InferType()(mod)
var_6548 = relay.var("var_6548", dtype = "float64", shape = (16, 9, 5))#candidate|6548|(16, 9, 5)|var|float64
output = func_6547(var_6548)
func_6549 = relay.Function([var_6548], output)
mutated_mod['func_6549'] = func_6549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_6580 = relay.TupleGetItem(func_5938_call(), 0)
call_6581 = relay.TupleGetItem(func_5939_call(), 0)
output = call_6580
output2 = call_6581
func_6600 = relay.Function([], output)
mod['func_6600'] = func_6600
mod = relay.transform.InferType()(mod)
mutated_mod['func_6600'] = func_6600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6600_call = mutated_mod.get_global_var('func_6600')
call_6601 = func_6600_call()
output = call_6601
func_6602 = relay.Function([], output)
mutated_mod['func_6602'] = func_6602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_6611 = relay.TupleGetItem(func_5938_call(), 0)
call_6612 = relay.TupleGetItem(func_5939_call(), 0)
output = relay.Tuple([call_6611,])
output2 = relay.Tuple([call_6612,])
func_6617 = relay.Function([], output)
mod['func_6617'] = func_6617
mod = relay.transform.InferType()(mod)
output = func_6617()
func_6618 = relay.Function([], output)
mutated_mod['func_6618'] = func_6618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6114_call = mod.get_global_var('func_6114')
func_6115_call = mutated_mod.get_global_var('func_6115')
call_6658 = relay.TupleGetItem(func_6114_call(), 0)
call_6659 = relay.TupleGetItem(func_6115_call(), 0)
func_4258_call = mod.get_global_var('func_4258')
func_4261_call = mutated_mod.get_global_var('func_4261')
const_6661 = relay.const([[-4.128019,3.492016,-2.451240,3.030524,2.083366,3.164728,-2.695297,-8.704327,-2.833726,2.219118,-3.451204,-0.705093,-6.622477,-5.946349,-1.085755,3.618905,1.986252,-5.246857,-1.019555,7.802937,4.965617,2.548109,-5.728792,0.423538,-7.695722,-9.160534,6.679425,-0.069488,3.359396,3.014988,7.754179,-5.136807],[9.808277,-1.015180,-0.479617,7.053192,3.795277,5.042255,-5.826375,-9.158471,8.105918,4.670460,-2.741140,-9.117843,-1.874767,6.329672,-2.027763,4.349168,-7.515996,0.437457,0.486334,-2.967574,-0.572057,-3.584888,-0.772436,6.639193,8.448854,1.771298,-2.337142,6.710840,1.831864,3.003021,-3.733462,8.920678],[-1.046755,8.957385,-4.129312,-9.207975,8.293641,9.470902,-9.471230,0.587232,-6.545317,8.544371,-7.412747,9.830927,7.251439,2.387104,7.849779,-3.721384,-7.073950,0.874743,9.856474,9.955483,-7.286952,-7.704659,2.825945,0.870612,-6.659759,1.631803,1.057558,-5.469244,7.136375,1.172160,2.974720,-3.003854],[9.460723,-6.239723,-6.373021,-2.942428,-8.098123,5.326413,-6.171005,4.983826,9.061603,-5.093042,-5.935394,2.124194,-4.449673,-0.327576,-4.998351,5.606120,4.162126,-8.943523,9.615714,-2.836652,9.369093,-9.808427,-6.331829,5.261507,-0.721627,1.058023,-4.469964,-3.165247,1.850661,-8.377981,5.080478,8.032619],[7.444357,-6.069396,-7.697783,1.250551,-5.146540,-7.129533,9.085445,-8.269950,5.272423,-4.225941,-4.429132,-0.164866,-5.434830,4.508989,7.952422,-0.790117,-6.621975,7.894164,4.139985,6.862852,-9.996575,0.781680,5.055182,1.056728,8.843557,-9.166867,-0.106582,7.731174,-4.198239,6.169336,1.729797,-6.883720],[-0.107907,5.062138,-0.640205,-2.051682,-8.846763,6.461828,2.858374,-6.381803,-1.389923,1.621891,0.959207,6.956191,1.383700,0.424847,-3.877800,9.383402,-7.781393,6.886767,6.531211,5.845907,0.139288,5.883739,-0.687770,8.577126,-7.116298,6.171169,3.101686,0.249959,0.380764,4.693110,3.978734,3.054573],[8.009318,-4.145680,-3.458449,-7.499927,-6.713137,-6.520808,2.401010,-8.991700,-6.617085,-3.345192,-6.360365,6.018959,-9.156371,-8.942579,0.965621,4.784283,-5.110050,6.806383,-4.338396,-2.197991,6.486759,7.623961,-3.659694,-5.053385,1.199139,-5.660499,0.662147,-0.547997,-0.422203,5.901328,-3.081530,7.691105],[-9.723083,1.743831,-9.703512,-6.163530,-0.180707,2.624520,1.205051,-7.703326,-6.985319,-8.220464,-2.444670,3.839072,3.740412,-9.007696,-7.934711,-3.323183,-1.828511,9.902454,3.900111,-0.825807,5.462033,-1.868761,1.636998,3.807380,6.830250,8.540735,-9.277828,0.823041,7.823197,6.676233,9.580082,0.543113],[6.421819,-7.970909,-5.488865,7.136679,-4.927625,-0.125323,-7.122946,5.994857,5.551597,3.060001,-1.556316,-5.381664,-4.002029,3.902746,3.413970,1.429787,2.799619,-7.307816,-7.847234,1.630921,3.780219,-0.542078,1.838221,-0.374405,5.176483,1.937054,-1.314994,3.552473,8.550288,-3.643124,8.476287,-5.069802],[5.966431,-2.718012,-3.361503,9.864719,4.750924,9.066277,1.060692,-1.979395,1.654985,-5.138906,2.703590,-6.052704,-7.102125,4.783643,-4.535472,-7.903789,-0.579783,6.005683,-3.869395,1.578388,-8.894740,3.559812,-7.715040,-9.134985,7.725832,1.965714,3.080503,2.219192,-3.841898,8.896920,-9.790880,-8.007252],[2.829020,6.670422,-0.758240,3.507159,0.970714,5.347816,-1.728258,8.338752,-4.887386,-3.724085,-8.344001,-5.253990,6.537510,8.456943,2.891503,-8.152127,0.275697,0.500928,-1.683119,9.345847,8.907115,7.745487,-3.405309,0.374230,5.409574,-3.667294,2.046833,-9.604698,8.653766,5.643681,-0.608189,7.788355],[4.873430,9.614554,7.733214,-8.974156,4.910680,4.477887,-6.508667,6.482502,-4.833748,-9.977145,-3.178286,-6.413792,-9.919931,-4.629149,-2.252658,1.284013,-0.897938,1.280440,6.316262,-6.563279,-7.316937,-3.940783,-4.118251,-2.878036,-9.786000,7.524728,-8.028525,-8.744310,3.902319,7.741023,-8.187904,5.756418]], dtype = "float64")#candidate|6661|(12, 32)|const|float64
call_6660 = func_4258_call(relay.reshape(const_6661.astype('float64'), [6, 4, 16]))
call_6662 = func_4258_call(relay.reshape(const_6661.astype('float64'), [6, 4, 16]))
bop_6677 = relay.greater(const_6661.astype('bool'), relay.reshape(call_6660.astype('bool'), relay.shape_of(const_6661))) # shape=(12, 32)
bop_6680 = relay.greater(const_6661.astype('bool'), relay.reshape(call_6662.astype('bool'), relay.shape_of(const_6661))) # shape=(12, 32)
uop_6688 = relay.atanh(bop_6677.astype('float32')) # shape=(12, 32)
uop_6690 = relay.atanh(bop_6680.astype('float32')) # shape=(12, 32)
uop_6693 = relay.log2(const_6661.astype('float32')) # shape=(12, 32)
output = relay.Tuple([call_6658,uop_6688,uop_6693,])
output2 = relay.Tuple([call_6659,uop_6690,uop_6693,])
func_6709 = relay.Function([], output)
mod['func_6709'] = func_6709
mod = relay.transform.InferType()(mod)
mutated_mod['func_6709'] = func_6709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6709_call = mutated_mod.get_global_var('func_6709')
call_6710 = func_6709_call()
output = call_6710
func_6711 = relay.Function([], output)
mutated_mod['func_6711'] = func_6711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6600_call = mod.get_global_var('func_6600')
func_6602_call = mutated_mod.get_global_var('func_6602')
call_6723 = func_6600_call()
call_6724 = func_6600_call()
func_6266_call = mod.get_global_var('func_6266')
func_6268_call = mutated_mod.get_global_var('func_6268')
call_6728 = func_6266_call()
call_6729 = func_6266_call()
output = relay.Tuple([call_6723,call_6728,])
output2 = relay.Tuple([call_6724,call_6729,])
func_6734 = relay.Function([], output)
mod['func_6734'] = func_6734
mod = relay.transform.InferType()(mod)
output = func_6734()
func_6735 = relay.Function([], output)
mutated_mod['func_6735'] = func_6735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6709_call = mod.get_global_var('func_6709')
func_6711_call = mutated_mod.get_global_var('func_6711')
call_6749 = relay.TupleGetItem(func_6709_call(), 0)
call_6750 = relay.TupleGetItem(func_6711_call(), 0)
output = relay.Tuple([call_6749,])
output2 = relay.Tuple([call_6750,])
func_6756 = relay.Function([], output)
mod['func_6756'] = func_6756
mod = relay.transform.InferType()(mod)
output = func_6756()
func_6757 = relay.Function([], output)
mutated_mod['func_6757'] = func_6757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_6807 = relay.TupleGetItem(func_5938_call(), 0)
call_6808 = relay.TupleGetItem(func_5939_call(), 0)
uop_6839 = relay.tan(call_6807.astype('float64')) # shape=(16, 1, 5)
uop_6841 = relay.tan(call_6808.astype('float64')) # shape=(16, 1, 5)
output = uop_6839
output2 = uop_6841
func_6866 = relay.Function([], output)
mod['func_6866'] = func_6866
mod = relay.transform.InferType()(mod)
output = func_6866()
func_6867 = relay.Function([], output)
mutated_mod['func_6867'] = func_6867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6114_call = mod.get_global_var('func_6114')
func_6115_call = mutated_mod.get_global_var('func_6115')
call_6884 = relay.TupleGetItem(func_6114_call(), 0)
call_6885 = relay.TupleGetItem(func_6115_call(), 0)
const_6888 = relay.const([[[-9.934199,-0.835536,-1.593038,-3.255567,-4.295586],[9.057789,8.830411,5.447927,-8.613246,0.688178]],[[2.208713,-3.728451,-2.635649,1.524118,-5.769280],[-9.121179,-6.068215,6.036058,-3.579461,-6.044323]],[[3.036406,-9.931919,-8.529999,5.687886,-4.936577],[6.645172,3.777870,6.906165,7.925908,-8.772889]],[[4.386774,-0.093722,7.109218,3.622141,4.298968],[7.618985,7.619566,-2.735304,6.662882,-2.817516]],[[-4.064745,7.047781,8.245149,-7.153330,3.423535],[4.493693,3.294301,-8.197148,8.379703,-3.280257]],[[2.109423,6.339208,-2.264454,-9.773196,-0.041400],[2.342425,3.547540,-7.405473,5.791895,1.996897]],[[0.176147,4.121267,4.617152,-1.277076,2.652072],[4.417434,-4.312874,-2.024419,-5.196924,-8.201999]],[[7.249187,-0.686270,-8.935090,-7.126555,6.900443],[-8.677826,-4.932125,7.274083,5.463000,-0.929612]],[[-6.365559,-1.346833,-7.125024,8.904029,7.192549],[2.292963,5.007171,0.374816,-0.981621,4.732071]],[[-1.685267,8.901428,-1.075132,-0.862581,-0.417620],[-7.952320,-1.319748,4.312604,5.258998,-9.266471]],[[-1.742322,-7.720259,4.667061,1.127247,1.035109],[6.615563,-0.179374,-9.585175,0.507867,-5.943704]],[[6.486528,-7.056262,6.760483,-8.183397,6.458834],[-7.775786,4.342807,3.524262,-8.395221,-6.890400]],[[-5.499834,5.498611,-6.557328,6.807204,-5.445539],[8.481383,-9.148272,-9.046808,4.957833,1.624294]],[[1.204372,-1.796300,-2.949885,4.691037,-1.539373],[-1.345682,3.750114,7.439275,6.583295,9.774508]],[[4.728542,7.158314,-8.928335,0.614051,-5.763687],[-5.335838,-5.246960,-3.778880,4.624170,-5.621821]],[[-4.349614,-1.352730,-3.830538,8.391251,-2.925078],[-3.413126,-0.462367,5.569583,3.276383,-4.824568]]], dtype = "float64")#candidate|6888|(16, 2, 5)|const|float64
bop_6889 = relay.bitwise_xor(call_6884.astype('uint64'), const_6888.astype('uint64')) # shape=(16, 2, 5)
bop_6892 = relay.bitwise_xor(call_6885.astype('uint64'), const_6888.astype('uint64')) # shape=(16, 2, 5)
var_6900 = relay.var("var_6900", dtype = "float64", shape = (16, 7, 5))#candidate|6900|(16, 7, 5)|var|float64
bop_6901 = relay.floor_divide(call_6884.astype('float32'), var_6900.astype('float32')) # shape=(16, 7, 5)
bop_6904 = relay.floor_divide(call_6885.astype('float32'), var_6900.astype('float32')) # shape=(16, 7, 5)
func_4258_call = mod.get_global_var('func_4258')
func_4261_call = mutated_mod.get_global_var('func_4261')
const_6906 = relay.const([1.566998,9.215729,7.962030,-2.334088,-1.585093,4.773369,5.369477,-4.666885,-9.867162,-1.750251,2.442778,4.676935,-2.582601,-1.906495,8.995616,-7.070815,5.592844,-5.952140,-4.730327,5.518840,2.065444,2.032851,-7.464891,9.971922,8.081927,3.618472,5.454170,-8.862662,-3.472625,5.472867,-6.261301,-4.731705,4.520482,1.701776,3.292533,-8.156280,5.366811,4.356552,7.753828,-5.021159,1.981951,-3.302090,-3.317914,-8.936595,5.171200,-1.842134,9.726868,7.472997,1.434231,0.166930,7.421415,8.819440,7.975753,-8.045270,-7.222672,7.694455,-4.049974,-0.165625,-2.211489,4.858456,-1.130445,-9.061347,-2.220468,-9.542772,-4.399895,-9.935885,-0.605193,-6.565741,8.721531,-9.271803,8.830267,9.404141,5.076421,-8.542099,-2.754633,5.775622,2.448762,2.374699,2.956217,1.154662,9.301522,6.685194,2.551727,3.744605,0.617061,-0.896124,9.024730,-5.088289,1.638467,1.251466,0.829404,-0.588165,-9.740922,-8.204648,-4.788985,1.051427,-7.048738,7.281976,-0.279416,-3.024003,-4.156368,-7.768251,-7.334504,5.325458,1.798185,0.079163,8.913523,8.185300,5.627655,-1.895780,8.656760,8.129302,-5.412603,7.645629,3.953179,-8.953365,3.914690,-9.539603,-7.669392,5.645036,-5.983731,-8.828553,9.221125,0.483766,4.258094,-4.796029,6.060317,-2.465056,-3.148399,-4.487084,9.904283,5.042875,3.753136,-5.604870,3.835329,3.035440,7.922702,-6.714922,9.947652,9.092981,7.659462,8.194947,-4.849333,-8.724581,4.412954,-2.096289,-1.754730,6.954952,9.983666,0.831263,-3.950694,-3.102527,-6.769958,-5.334435,-0.912483,-8.771055,1.608757,-6.437153,-0.717285,-6.329137,5.006198,-7.374759,-1.775063,8.600867,-9.561922,7.629770,0.289566,-7.846091,-3.076969,6.287951,-3.881867,-1.145072,7.888589,2.544595,2.564620,-0.052176,6.485735,-4.016856,-0.943470,5.251200,-0.956986,7.373376,9.719516,1.171995,-7.248161,-5.947439,2.658401,-0.229661,-9.438750,-7.806027,9.124341,-8.521429,9.372405,2.867052,8.210424,-1.263868,4.148424,8.910752,1.659760,-1.672288,-4.413603,5.333065,5.378349,-6.658656,4.127686,5.574758,1.080931,6.927707,5.392845,4.454459,-6.583904,-8.124856,0.126830,-4.402421,4.116223,3.732514,0.372822,3.706147,-1.951094,-8.747561,-1.943725,9.157034,-1.496813,-2.893741,0.876615,-4.472401,-1.706486,5.291083,-3.162993,-5.942539,-7.052350,8.987602,-5.289448,-0.792191,4.533663,9.354703,-3.596767,4.923171,5.983764,-7.130750,1.282883,-2.874429,-0.875846,-0.543494,3.442417,-6.662590,-0.911271,-2.795512,-9.564609,3.948434,4.694385,9.268054,0.329023,-5.345978,-7.429808,0.520499,7.196473,0.310546,4.820367,3.055637,8.292098,-8.677836,6.975035,-2.563979,5.838319,3.377380,-8.042130,3.086613,-2.620544,5.607722,-5.588861,-8.384687,-3.253721,3.740169,8.668015,5.381304,-2.731469,-4.196271,-5.426909,6.268130,5.258156,-3.848654,4.246272,6.731843,-5.953749,8.072099,-7.722662,-7.353665,0.720647,-3.587647,-6.928475,1.363197,-7.188557,8.284641,1.989910,-5.929769,7.394653,-2.666771,-2.170708,-0.095509,-5.969661,-2.281032,-3.601902,-6.980082,-4.280673,-2.182358,-8.078642,-0.892154,-2.795015,9.837862,-7.416981,-1.373857,-0.812561,7.337739,-0.052798,9.651578,6.615428,3.065365,3.038448,5.362377,4.559099,-4.903352,-0.618602,-6.002539,-9.941234,-4.950468,1.274608,0.451954,2.760817,2.081342,-4.266356,2.702174,-1.354362,7.128950,-8.386270,6.914783,7.404617,1.483953,-3.088300,-8.092358,3.153768,-2.766391,9.147342,-1.150503,-3.270226,-4.659540,6.343410,-2.204745,6.698173,7.477504,-5.732280,5.347534,-0.075260,8.135281,-5.761978,-9.640632,-8.793343,-0.730475,-2.823654,7.798493,-0.257348,5.243805,8.420092,6.484322,-7.600238,-0.200114,-5.508081,-9.523691,-1.836792,1.779076,8.366632,-4.301817,-7.672170,0.257823,6.796269,1.654620,-7.800179,6.654107,-4.939117,-7.814336,7.824284,-9.545781,-9.027131,1.763291], dtype = "float64")#candidate|6906|(384,)|const|float64
call_6905 = func_4258_call(relay.reshape(const_6906.astype('float64'), [6, 4, 16]))
call_6907 = func_4258_call(relay.reshape(const_6906.astype('float64'), [6, 4, 16]))
bop_6922 = relay.add(bop_6901.astype('float32'), call_6884.astype('float32')) # shape=(16, 7, 5)
bop_6925 = relay.add(bop_6904.astype('float32'), call_6885.astype('float32')) # shape=(16, 7, 5)
output = relay.Tuple([bop_6889,call_6905,const_6906,bop_6922,])
output2 = relay.Tuple([bop_6892,call_6907,const_6906,bop_6925,])
func_6926 = relay.Function([var_6900,], output)
mod['func_6926'] = func_6926
mod = relay.transform.InferType()(mod)
var_6927 = relay.var("var_6927", dtype = "float64", shape = (16, 7, 5))#candidate|6927|(16, 7, 5)|var|float64
output = func_6926(var_6927)
func_6928 = relay.Function([var_6927], output)
mutated_mod['func_6928'] = func_6928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6492_call = mod.get_global_var('func_6492')
func_6493_call = mutated_mod.get_global_var('func_6493')
call_6980 = func_6492_call()
call_6981 = func_6492_call()
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
const_6989 = relay.const([[False,False],[True,True],[False,False],[True,False],[True,True],[True,False],[True,False],[False,False],[True,False],[True,True],[False,False],[False,True]], dtype = "bool")#candidate|6989|(12, 2)|const|bool
var_6990 = relay.var("var_6990", dtype = "float64", shape = ())#candidate|6990|()|var|float64
var_6991 = relay.var("var_6991", dtype = "float64", shape = (224,))#candidate|6991|(224,)|var|float64
call_6988 = relay.TupleGetItem(func_236_call(relay.reshape(const_6989.astype('bool'), [2, 2, 6]), relay.reshape(const_6989.astype('bool'), [2, 2, 6]), relay.reshape(var_6990.astype('float64'), []), relay.reshape(var_6991.astype('float64'), [224,]), ), 4)
call_6992 = relay.TupleGetItem(func_241_call(relay.reshape(const_6989.astype('bool'), [2, 2, 6]), relay.reshape(const_6989.astype('bool'), [2, 2, 6]), relay.reshape(var_6990.astype('float64'), []), relay.reshape(var_6991.astype('float64'), [224,]), ), 4)
func_6617_call = mod.get_global_var('func_6617')
func_6618_call = mutated_mod.get_global_var('func_6618')
call_6994 = relay.TupleGetItem(func_6617_call(), 0)
call_6995 = relay.TupleGetItem(func_6618_call(), 0)
bop_6996 = relay.minimum(call_6980.astype('uint32'), var_6990.astype('uint32')) # shape=(16, 1, 5)
bop_6999 = relay.minimum(call_6981.astype('uint32'), var_6990.astype('uint32')) # shape=(16, 1, 5)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_7005 = relay.TupleGetItem(func_5938_call(), 0)
call_7006 = relay.TupleGetItem(func_5939_call(), 0)
func_746_call = mod.get_global_var('func_746')
func_749_call = mutated_mod.get_global_var('func_749')
var_7019 = relay.var("var_7019", dtype = "float64", shape = (196,))#candidate|7019|(196,)|var|float64
call_7018 = func_746_call(relay.reshape(var_7019.astype('float64'), [4, 7, 7]))
call_7020 = func_746_call(relay.reshape(var_7019.astype('float64'), [4, 7, 7]))
uop_7029 = relay.cosh(bop_6996.astype('float64')) # shape=(16, 1, 5)
uop_7031 = relay.cosh(bop_6999.astype('float64')) # shape=(16, 1, 5)
func_3003_call = mod.get_global_var('func_3003')
func_3005_call = mutated_mod.get_global_var('func_3005')
var_7034 = relay.var("var_7034", dtype = "float64", shape = (520,))#candidate|7034|(520,)|var|float64
call_7033 = relay.TupleGetItem(func_3003_call(relay.reshape(var_7034.astype('float64'), [4, 10, 13])), 0)
call_7035 = relay.TupleGetItem(func_3005_call(relay.reshape(var_7034.astype('float64'), [4, 10, 13])), 0)
func_31_call = mod.get_global_var('func_31')
func_34_call = mutated_mod.get_global_var('func_34')
var_7056 = relay.var("var_7056", dtype = "float64", shape = (1512,))#candidate|7056|(1512,)|var|float64
call_7055 = func_31_call(relay.reshape(var_7056.astype('float64'), [12, 14, 9]))
call_7057 = func_31_call(relay.reshape(var_7056.astype('float64'), [12, 14, 9]))
func_2721_call = mod.get_global_var('func_2721')
func_2725_call = mutated_mod.get_global_var('func_2725')
var_7081 = relay.var("var_7081", dtype = "float32", shape = (135,))#candidate|7081|(135,)|var|float32
call_7080 = func_2721_call(relay.reshape(call_6988.astype('float32'), []), relay.reshape(var_7081.astype('float32'), [3, 5, 9]), )
call_7082 = func_2721_call(relay.reshape(call_6988.astype('float32'), []), relay.reshape(var_7081.astype('float32'), [3, 5, 9]), )
output = relay.Tuple([call_6988,const_6989,var_6991,call_6994,call_7005,call_7018,var_7019,uop_7029,call_7033,var_7034,call_7055,var_7056,call_7080,var_7081,])
output2 = relay.Tuple([call_6992,const_6989,var_6991,call_6995,call_7006,call_7020,var_7019,uop_7031,call_7035,var_7034,call_7057,var_7056,call_7082,var_7081,])
func_7083 = relay.Function([var_6990,var_6991,var_7019,var_7034,var_7056,var_7081,], output)
mod['func_7083'] = func_7083
mod = relay.transform.InferType()(mod)
mutated_mod['func_7083'] = func_7083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7083_call = mutated_mod.get_global_var('func_7083')
var_7085 = relay.var("var_7085", dtype = "float64", shape = ())#candidate|7085|()|var|float64
var_7086 = relay.var("var_7086", dtype = "float64", shape = (224,))#candidate|7086|(224,)|var|float64
var_7087 = relay.var("var_7087", dtype = "float64", shape = (196,))#candidate|7087|(196,)|var|float64
var_7088 = relay.var("var_7088", dtype = "float64", shape = (520,))#candidate|7088|(520,)|var|float64
var_7089 = relay.var("var_7089", dtype = "float64", shape = (1512,))#candidate|7089|(1512,)|var|float64
var_7090 = relay.var("var_7090", dtype = "float32", shape = (135,))#candidate|7090|(135,)|var|float32
call_7084 = func_7083_call(var_7085,var_7086,var_7087,var_7088,var_7089,var_7090,)
output = call_7084
func_7091 = relay.Function([var_7085,var_7086,var_7087,var_7088,var_7089,var_7090,], output)
mutated_mod['func_7091'] = func_7091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_7093 = relay.TupleGetItem(func_5938_call(), 0)
call_7094 = relay.TupleGetItem(func_5939_call(), 0)
func_6866_call = mod.get_global_var('func_6866')
func_6867_call = mutated_mod.get_global_var('func_6867')
call_7096 = func_6866_call()
call_7097 = func_6866_call()
func_746_call = mod.get_global_var('func_746')
func_749_call = mutated_mod.get_global_var('func_749')
var_7101 = relay.var("var_7101", dtype = "float64", shape = (196,))#candidate|7101|(196,)|var|float64
call_7100 = func_746_call(relay.reshape(var_7101.astype('float64'), [4, 7, 7]))
call_7102 = func_746_call(relay.reshape(var_7101.astype('float64'), [4, 7, 7]))
output = relay.Tuple([call_7093,call_7096,call_7100,var_7101,])
output2 = relay.Tuple([call_7094,call_7097,call_7102,var_7101,])
func_7104 = relay.Function([var_7101,], output)
mod['func_7104'] = func_7104
mod = relay.transform.InferType()(mod)
mutated_mod['func_7104'] = func_7104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7105 = relay.var("var_7105", dtype = "float64", shape = (196,))#candidate|7105|(196,)|var|float64
func_7104_call = mutated_mod.get_global_var('func_7104')
call_7106 = func_7104_call(var_7105)
output = call_7106
func_7107 = relay.Function([var_7105], output)
mutated_mod['func_7107'] = func_7107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6756_call = mod.get_global_var('func_6756')
func_6757_call = mutated_mod.get_global_var('func_6757')
call_7157 = relay.TupleGetItem(func_6756_call(), 0)
call_7158 = relay.TupleGetItem(func_6757_call(), 0)
output = call_7157
output2 = call_7158
func_7159 = relay.Function([], output)
mod['func_7159'] = func_7159
mod = relay.transform.InferType()(mod)
output = func_7159()
func_7160 = relay.Function([], output)
mutated_mod['func_7160'] = func_7160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6617_call = mod.get_global_var('func_6617')
func_6618_call = mutated_mod.get_global_var('func_6618')
call_7193 = relay.TupleGetItem(func_6617_call(), 0)
call_7194 = relay.TupleGetItem(func_6618_call(), 0)
func_3983_call = mod.get_global_var('func_3983')
func_3988_call = mutated_mod.get_global_var('func_3988')
const_7210 = relay.const([True,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,False,False,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True], dtype = "bool")#candidate|7210|(924,)|const|bool
var_7211 = relay.var("var_7211", dtype = "bool", shape = (24,))#candidate|7211|(24,)|var|bool
const_7212 = relay.const([2,-7,-10,10,7,4,-2,-8,-6,6,4,2,-1,6,-3,-3,10,2,9,7,-6,5,-8,2,5,-3,-3,-2,4,-2,-2,1,-2,-1,-9,-6,1,-4,6,5,4,-4,-3,-5,-6,-3,1,2,1,6,-4,-4,6,8,-3,-7,10,-6,-8,1,8,-4,-10,-6,-10,10,7,-8,1,6,8,-1,-5,-3,-5,-8,-8,4,7,-8,2,-10,1,3,6,6,-3,4,3,10,4,1,-10,-10,4,-3,-6,-7,-1,-9,-10,-10,-1,10,4,9,7,7,-6,-4,7,-9,8,-9,8,5,10,-2,10,4,3,-1,5,8,7,6,-9,6,-2,-8,1,-8,-9,-4,4,2,-1,-8,10,-2,9,-2,2,10,1,6,-1,6,7,-10,8,-6,6,-7,-1,-5,6,1,-5,4,8,1,4,-3,7,-2,7,6,-2,-2,-4,3,6,8,6,-9,-1,8,-8,-6,4,2,6,7,-2,2,9,6,1,9,7,4,8,3,10,-3,-7,-6,-4,2,-3,2,10,-7,5,6,6,1,-1,2,-6,-6,1,-8,6,-10,2,10,1,3,-5,-9,-9,7,-7,-1,-5,7,-10,10,5,-4,-2,-9,4,-3,10,-10,-4,-1,9,5,-1,-1,-5,7,-10,7,5,-9,7,-8,3,8,-6,-8,10,-8,-6,-2,-9,-1,9,-3,5,5,-1,10,10,1,6,-2,5,-9,-8,-1,9,-6,-1,7,10,-7,5,-4,5,5,-9,8,-5,-2,-8,-2,7,7,6,4,-6,-6,8,9,7,5,-9,9,-9,-8,6,-4,-7,-10,7,-10,5,-5,8,-6,-6,-3,5,-2,5,-3,-10,-3,-10,-2,7,9,8,4,-5,-10,-3,-7,-5,5,1,-2,-5,-9,-9,1,3,-7,3,6,4,-1,1,7,9,7,-2,-10,-3,3,2,-8,-5,7,-8,5,10,-1,6,-8,-4,4,3,2,-4,8,10,-2,-10,-2,-3,2,-3,-6,-3,-3,-9,-10,2,8,8,4,1,10,3,2,8,-1,7,9,2,-4,10,5,5,-10,9,-10,7,2,3,-8,-7,2,-6,3,-5,-1,10,-7,-7,-9,-10,-7,-10,-1,-4,-6,9,7,8,-3,7,-8,-10,-4,-3,-5,4,1,2,9,-2,9,2,7,3,5,-6,7,-9,4], dtype = "int32")#candidate|7212|(448,)|const|int32
call_7209 = relay.TupleGetItem(func_3983_call(relay.reshape(const_7210.astype('bool'), [12, 7, 11]), relay.reshape(var_7211.astype('bool'), [24,]), relay.reshape(const_7212.astype('int32'), [112, 4]), ), 7)
call_7213 = relay.TupleGetItem(func_3988_call(relay.reshape(const_7210.astype('bool'), [12, 7, 11]), relay.reshape(var_7211.astype('bool'), [24,]), relay.reshape(const_7212.astype('int32'), [112, 4]), ), 7)
func_6114_call = mod.get_global_var('func_6114')
func_6115_call = mutated_mod.get_global_var('func_6115')
call_7230 = relay.TupleGetItem(func_6114_call(), 0)
call_7231 = relay.TupleGetItem(func_6115_call(), 0)
output = relay.Tuple([call_7193,call_7209,const_7210,var_7211,const_7212,call_7230,])
output2 = relay.Tuple([call_7194,call_7213,const_7210,var_7211,const_7212,call_7231,])
func_7234 = relay.Function([var_7211,], output)
mod['func_7234'] = func_7234
mod = relay.transform.InferType()(mod)
var_7235 = relay.var("var_7235", dtype = "bool", shape = (24,))#candidate|7235|(24,)|var|bool
output = func_7234(var_7235)
func_7236 = relay.Function([var_7235], output)
mutated_mod['func_7236'] = func_7236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6709_call = mod.get_global_var('func_6709')
func_6711_call = mutated_mod.get_global_var('func_6711')
call_7329 = relay.TupleGetItem(func_6709_call(), 0)
call_7330 = relay.TupleGetItem(func_6711_call(), 0)
func_94_call = mod.get_global_var('func_94')
func_98_call = mutated_mod.get_global_var('func_98')
const_7341 = relay.const(-1.325976, dtype = "float64")#candidate|7341|()|const|float64
const_7342 = relay.const([6.449596,9.651538,2.876017,-4.865665,-8.192090,3.136311,5.622596,-8.819814,-2.450779,-5.020916,5.307350,-5.673057,-6.833037,-1.835015,2.631633,-0.923993,-7.917039,-3.829813,-9.165009,-1.382424,8.126194,-5.947709,9.697323,-4.058636,-6.394556,-3.999846,2.845212,-9.431276,7.862188,0.658088,2.983624,-9.825818,-6.539934,5.675317,0.957017,6.935333,-4.261495,-8.934499,-6.985758,8.696845,2.847008,8.690121,-1.022033,-0.480254,-9.014973,-9.416745,2.767908,6.980705,1.771671,3.620087,4.593041,-3.720856,-2.871029,4.700671,1.606553,6.749159,-7.211928,4.796594,6.743865,5.857920,1.112470,3.104793,-4.259660,-9.702173,5.752490,-9.773364,-8.637818,-3.567279,4.204416,-2.877056,-0.792021,-6.536873,-4.150582,2.911633,3.989454,2.975857,9.152627,-7.778612,6.201775,5.427065,-2.971871,3.729617,-0.343858,1.139252,0.408399,-0.125588,3.663229,5.495910,-5.158981,4.258887,9.706269,4.490779,7.969089,-4.495843,-8.211480,-2.905722,9.971000,-9.041987,1.667316,-1.215582,1.762954,5.148647,4.842818,-4.511955,5.095013,3.159895,-6.321280,2.745804,-0.331612,-8.206167,-5.938371,2.390718,7.059786,4.538883,7.803246,2.386483,7.094196,-4.753306,8.532130,-5.780676,-0.821398,4.312226,-4.873663,8.551076,-6.363842,-0.650475,-3.831411,0.437853,8.390719,-9.718574,-2.758526,0.527282,-6.469446,-1.093329,-4.470262,8.649468,-9.768317,5.889744,8.504073,-7.666917,-6.674213,-7.294345,-5.795749,-4.909936,2.628949,4.066432,1.433364,8.687229,-0.655360,8.360595,-2.156928,7.361903,-2.561130,-1.249051,1.560295,1.934596,8.604331,-9.125528,3.099388,6.712395,-4.249264,-4.726856,1.518524,0.700700,0.775842,-5.273762,2.770950,5.909488,-7.209896,-7.226603,-0.965737,1.085491,9.520713,3.286076,6.078679,6.619011,4.396759,2.474516,8.162964,-4.104025,0.279132,7.090076,8.508253,-6.138208,-8.478432,9.886598,9.156037,-8.714605,9.430027,5.209328,-0.014633,-7.595284,7.479544,-4.213511,-2.836467,4.133077,3.577963,8.679835,0.251124,-9.038752,-7.855289,-9.054934,-8.398343,-1.768318,5.537704,-9.723450,8.440391,2.751453,-5.045594,2.127303,4.733997,9.714924,6.376911,4.866990,-2.151192,-3.107418,4.285010,-0.489726,7.264732,4.388803,4.532997,-5.270652,-0.440401,2.498533], dtype = "float64")#candidate|7342|(224,)|const|float64
call_7340 = func_94_call(relay.reshape(const_7341.astype('float64'), []), relay.reshape(const_7342.astype('float64'), [16, 7, 2]), )
call_7343 = func_94_call(relay.reshape(const_7341.astype('float64'), []), relay.reshape(const_7342.astype('float64'), [16, 7, 2]), )
func_6266_call = mod.get_global_var('func_6266')
func_6268_call = mutated_mod.get_global_var('func_6268')
call_7351 = func_6266_call()
call_7352 = func_6266_call()
output = relay.Tuple([call_7329,call_7340,const_7341,const_7342,call_7351,])
output2 = relay.Tuple([call_7330,call_7343,const_7341,const_7342,call_7352,])
func_7360 = relay.Function([], output)
mod['func_7360'] = func_7360
mod = relay.transform.InferType()(mod)
mutated_mod['func_7360'] = func_7360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7360_call = mutated_mod.get_global_var('func_7360')
call_7361 = func_7360_call()
output = call_7361
func_7362 = relay.Function([], output)
mutated_mod['func_7362'] = func_7362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7372 = relay.var("var_7372", dtype = "int16", shape = (2, 11, 14))#candidate|7372|(2, 11, 14)|var|int16
var_7373 = relay.var("var_7373", dtype = "int16", shape = (2, 11, 14))#candidate|7373|(2, 11, 14)|var|int16
bop_7374 = relay.less(var_7372.astype('bool'), relay.reshape(var_7373.astype('bool'), relay.shape_of(var_7372))) # shape=(2, 11, 14)
uop_7382 = relay.atanh(bop_7374.astype('float64')) # shape=(2, 11, 14)
uop_7388 = relay.asinh(uop_7382.astype('float32')) # shape=(2, 11, 14)
output = uop_7388
output2 = uop_7388
func_7415 = relay.Function([var_7372,var_7373,], output)
mod['func_7415'] = func_7415
mod = relay.transform.InferType()(mod)
mutated_mod['func_7415'] = func_7415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7415_call = mutated_mod.get_global_var('func_7415')
var_7417 = relay.var("var_7417", dtype = "int16", shape = (2, 11, 14))#candidate|7417|(2, 11, 14)|var|int16
var_7418 = relay.var("var_7418", dtype = "int16", shape = (2, 11, 14))#candidate|7418|(2, 11, 14)|var|int16
call_7416 = func_7415_call(var_7417,var_7418,)
output = call_7416
func_7419 = relay.Function([var_7417,var_7418,], output)
mutated_mod['func_7419'] = func_7419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7159_call = mod.get_global_var('func_7159')
func_7160_call = mutated_mod.get_global_var('func_7160')
call_7463 = func_7159_call()
call_7464 = func_7159_call()
func_7234_call = mod.get_global_var('func_7234')
func_7236_call = mutated_mod.get_global_var('func_7236')
const_7499 = relay.const([True,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,False,True,True,False], dtype = "bool")#candidate|7499|(24,)|const|bool
call_7498 = relay.TupleGetItem(func_7234_call(relay.reshape(const_7499.astype('bool'), [24,])), 5)
call_7500 = relay.TupleGetItem(func_7236_call(relay.reshape(const_7499.astype('bool'), [24,])), 5)
func_3396_call = mod.get_global_var('func_3396')
func_3399_call = mutated_mod.get_global_var('func_3399')
const_7504 = relay.const([[6,4,8,-4,5,8,-9,3],[2,10,9,5,-5,4,4,5],[-9,6,10,-10,1,3,3,-8],[3,-4,-3,8,-5,7,10,9],[-2,7,-5,5,5,6,3,-10],[1,1,-6,4,-3,3,5,-3],[9,9,6,-1,-3,8,2,-4],[-5,9,-6,-3,3,2,-7,5],[4,-9,-9,3,7,9,1,-2],[-10,8,-3,-5,-6,-6,-4,9],[6,-10,10,8,7,9,-1,-4],[4,-9,10,5,2,9,4,-6],[9,5,1,9,1,4,2,4],[-10,3,6,-6,-1,6,6,-4],[-8,-4,-4,-7,-2,-10,-8,10],[-9,8,3,6,2,9,-4,2],[-6,10,-1,7,-7,8,3,-3],[-1,10,8,9,-7,-5,3,-10],[-4,-9,9,-8,4,4,-4,-2],[10,2,-7,6,-9,-3,-10,9],[5,-1,-3,1,-7,-7,-1,-9],[-10,-9,-1,-8,-9,1,4,-5],[10,-3,7,2,-8,8,-7,-2],[-7,3,7,-6,-2,6,-1,-7],[7,5,6,9,-6,3,1,2],[6,5,7,-10,2,-5,4,-3],[-1,-4,-8,1,7,9,9,7],[-7,1,-6,10,-4,1,6,1],[-4,4,-8,-6,-9,5,6,-5],[4,6,-4,6,-1,8,-10,-5],[-3,-6,4,-6,-5,-10,10,-4],[1,4,6,7,-8,-7,5,-5],[-10,9,-1,6,-3,8,4,-2],[4,2,8,1,6,8,-9,10],[-4,-5,2,-2,10,2,4,8],[-10,9,-2,7,8,7,-10,1],[6,10,9,-4,-6,2,-10,9],[3,-1,-10,-2,4,8,-8,10],[6,3,4,6,-6,9,3,8],[-5,10,9,-4,3,9,-2,7],[-8,3,8,1,10,-9,-7,-8],[10,-8,3,-2,-3,-10,-9,-2],[5,-1,7,-6,4,-1,-6,5],[-8,-3,-6,-7,-7,5,2,-4],[-5,10,9,-10,-1,5,-9,-3],[5,7,-10,-10,9,-4,-3,10],[3,9,-5,-6,9,6,-4,-4],[-5,-10,-3,-4,6,-5,-4,6],[-4,1,5,8,1,-1,-2,-5],[5,-2,6,5,3,10,5,-7],[4,-10,7,2,-9,6,1,8],[5,-6,-7,-2,3,8,-1,-8],[-2,5,-6,1,1,9,-9,9],[7,6,8,-4,3,10,-4,-10],[-7,-10,-1,8,-10,-5,4,-2],[9,6,-7,10,-2,-3,-9,7]], dtype = "int32")#candidate|7504|(56, 8)|const|int32
call_7503 = relay.TupleGetItem(func_3396_call(relay.reshape(const_7504.astype('int32'), [14, 16, 2]), relay.reshape(const_7499.astype('bool'), [2, 12]), ), 2)
call_7505 = relay.TupleGetItem(func_3399_call(relay.reshape(const_7504.astype('int32'), [14, 16, 2]), relay.reshape(const_7499.astype('bool'), [2, 12]), ), 2)
output = relay.Tuple([call_7463,call_7498,const_7499,call_7503,const_7504,])
output2 = relay.Tuple([call_7464,call_7500,const_7499,call_7505,const_7504,])
func_7517 = relay.Function([], output)
mod['func_7517'] = func_7517
mod = relay.transform.InferType()(mod)
output = func_7517()
func_7518 = relay.Function([], output)
mutated_mod['func_7518'] = func_7518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6756_call = mod.get_global_var('func_6756')
func_6757_call = mutated_mod.get_global_var('func_6757')
call_7544 = relay.TupleGetItem(func_6756_call(), 0)
call_7545 = relay.TupleGetItem(func_6757_call(), 0)
output = relay.Tuple([call_7544,])
output2 = relay.Tuple([call_7545,])
func_7549 = relay.Function([], output)
mod['func_7549'] = func_7549
mod = relay.transform.InferType()(mod)
mutated_mod['func_7549'] = func_7549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7549_call = mutated_mod.get_global_var('func_7549')
call_7550 = func_7549_call()
output = call_7550
func_7551 = relay.Function([], output)
mutated_mod['func_7551'] = func_7551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6492_call = mod.get_global_var('func_6492')
func_6493_call = mutated_mod.get_global_var('func_6493')
call_7645 = func_6492_call()
call_7646 = func_6492_call()
output = call_7645
output2 = call_7646
func_7655 = relay.Function([], output)
mod['func_7655'] = func_7655
mod = relay.transform.InferType()(mod)
output = func_7655()
func_7656 = relay.Function([], output)
mutated_mod['func_7656'] = func_7656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7549_call = mod.get_global_var('func_7549')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_7686 = relay.TupleGetItem(func_7549_call(), 0)
call_7687 = relay.TupleGetItem(func_7551_call(), 0)
output = relay.Tuple([call_7686,])
output2 = relay.Tuple([call_7687,])
func_7690 = relay.Function([], output)
mod['func_7690'] = func_7690
mod = relay.transform.InferType()(mod)
mutated_mod['func_7690'] = func_7690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7690_call = mutated_mod.get_global_var('func_7690')
call_7691 = func_7690_call()
output = call_7691
func_7692 = relay.Function([], output)
mutated_mod['func_7692'] = func_7692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6866_call = mod.get_global_var('func_6866')
func_6867_call = mutated_mod.get_global_var('func_6867')
call_7745 = func_6866_call()
call_7746 = func_6866_call()
func_6926_call = mod.get_global_var('func_6926')
func_6928_call = mutated_mod.get_global_var('func_6928')
var_7754 = relay.var("var_7754", dtype = "float64", shape = (560,))#candidate|7754|(560,)|var|float64
call_7753 = relay.TupleGetItem(func_6926_call(relay.reshape(var_7754.astype('float64'), [16, 7, 5])), 1)
call_7755 = relay.TupleGetItem(func_6928_call(relay.reshape(var_7754.astype('float64'), [16, 7, 5])), 1)
output = relay.Tuple([call_7745,call_7753,var_7754,])
output2 = relay.Tuple([call_7746,call_7755,var_7754,])
func_7774 = relay.Function([var_7754,], output)
mod['func_7774'] = func_7774
mod = relay.transform.InferType()(mod)
mutated_mod['func_7774'] = func_7774
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7775 = relay.var("var_7775", dtype = "float64", shape = (560,))#candidate|7775|(560,)|var|float64
func_7774_call = mutated_mod.get_global_var('func_7774')
call_7776 = func_7774_call(var_7775)
output = call_7776
func_7777 = relay.Function([var_7775], output)
mutated_mod['func_7777'] = func_7777
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7843 = relay.const([[[-2.528346,-6.576930,-1.011139],[0.935314,-5.840767,8.712102],[0.784415,9.775006,-5.460584],[8.583204,6.802808,-9.871657],[3.045860,1.599289,0.466528],[-7.001998,-1.253671,-8.477701],[-6.134909,0.424087,9.104035],[-2.807905,8.081760,-2.308025],[7.114343,-8.196457,7.359863],[-9.400641,0.126912,7.392672],[-9.966450,-0.162856,5.298835],[-5.041026,-9.706896,-2.894937],[-1.607436,-8.824302,7.119045],[6.125329,3.386952,1.907393],[6.084380,0.618293,4.978340]],[[7.133527,-6.645806,-2.210131],[-2.993994,3.732099,-0.082090],[0.830403,-5.994458,5.569728],[-8.139515,6.650281,-8.741972],[-2.696640,-8.814299,-0.703952],[9.027854,6.914873,6.417772],[3.005766,-3.509128,-2.768435],[-9.104466,-9.450089,-4.212836],[-4.714573,-6.820185,-5.479096],[-2.013378,-1.236854,-6.290278],[-2.569652,3.703351,5.151621],[3.571810,-9.433378,3.924407],[0.441753,-1.375294,-4.900971],[3.336312,9.596806,-5.591623],[-9.552463,3.508072,0.123537]],[[-5.006794,3.899891,-9.500939],[-3.630132,8.940739,5.329771],[-2.446731,-8.173754,-0.518529],[8.196233,-2.478996,-2.607003],[-4.472424,8.312988,4.146921],[4.465494,3.623101,0.097724],[9.790252,3.301417,8.330160],[9.332915,5.202221,-8.573539],[-0.775288,5.313195,9.442534],[-7.720039,4.410809,0.810014],[-8.458096,-7.108802,9.398674],[8.095391,5.523015,7.851434],[-8.806152,-0.134410,-6.928633],[2.666049,-9.965308,1.344241],[-7.723727,1.082541,-8.432973]],[[2.391351,4.398934,-4.936126],[7.484405,5.822976,-5.957737],[2.525851,0.058885,4.170383],[5.947010,4.639954,8.644194],[8.870535,-8.553011,9.711044],[6.297821,0.588023,-3.240281],[3.841762,-7.000361,1.755485],[3.705373,2.253725,-9.784189],[-3.921752,5.283086,-8.562408],[2.515347,2.497988,-9.168489],[-4.130346,1.857379,7.935807],[9.730156,5.712859,7.783638],[-9.422827,-0.409790,-6.994339],[-4.782088,-0.729258,-1.554871],[8.227884,-3.895558,8.532161]],[[4.886802,-5.172511,2.936541],[2.922362,-3.655211,-4.181831],[1.526759,-0.535710,-4.573465],[-9.683847,5.482671,8.814341],[1.264781,9.588479,9.212597],[1.933639,-1.571114,5.970989],[7.976555,-5.065087,1.398396],[3.300192,-9.371697,-3.951228],[-4.897567,7.764545,7.246128],[3.556285,2.608166,-0.430010],[5.201481,-7.557002,6.680456],[-5.160580,-2.083570,-0.047127],[3.960234,-0.555376,9.338729],[3.541834,0.210913,-3.050676],[7.823335,-0.714116,-5.603964]],[[8.924846,-4.670281,-9.395773],[7.094736,-3.193413,7.372842],[7.202555,-9.822682,-9.190063],[8.155526,-3.272834,1.966951],[7.141607,-5.282634,4.656063],[5.303353,1.898218,-6.914900],[7.700139,-3.032926,8.064383],[5.530927,-6.955781,-4.059951],[0.615934,-9.628092,1.964132],[-7.048441,-2.150885,-5.363871],[-7.003617,-0.145810,3.179756],[7.535401,-5.805495,-9.058228],[7.934577,0.115427,5.623009],[0.231298,4.979486,-5.820792],[2.570644,9.554476,-8.417433]],[[7.561031,3.162287,-3.766425],[4.668689,-9.752454,0.274786],[6.481132,-9.399211,-1.030281],[5.124763,-5.539642,-8.775847],[3.902834,-6.220441,6.670439],[-0.369826,0.595008,5.076977],[-0.506091,7.612384,-6.138675],[5.120631,4.732629,-3.190777],[5.775337,5.022727,-6.194821],[1.236580,3.454923,4.466884],[-2.062521,-3.709042,9.387325],[5.648508,-9.266821,-0.160888],[0.081817,-6.270300,1.562136],[-6.542970,-1.532642,4.458854],[7.088328,-2.600595,-3.481726]],[[-4.673513,1.061395,-9.378509],[-0.731562,-4.338318,-5.545784],[5.848413,-0.436077,-7.048687],[3.163838,4.101251,2.207169],[-3.118328,4.916815,4.151500],[-2.571025,-9.628086,-7.929893],[7.552214,-4.241991,6.056325],[-0.574191,-0.461779,7.266467],[4.326175,2.080795,-1.764401],[1.958029,-7.494087,-8.904184],[-3.205397,7.943185,-2.777052],[3.193144,-4.388737,-4.657452],[-5.892847,-4.640827,3.747633],[0.258667,-6.501663,3.377833],[4.300585,-0.634690,7.276168]],[[-8.221013,5.662653,-1.955877],[5.430526,6.624306,8.905365],[-9.160972,2.987389,-0.670238],[-9.294042,3.771096,2.797225],[5.192389,9.514162,-3.182844],[-4.925369,-7.723608,-9.073836],[-7.782310,-9.440484,9.064353],[8.296484,3.379555,-8.779825],[8.096257,8.155305,-1.004612],[-4.276953,-5.129982,1.267368],[-2.499684,2.233117,2.013127],[-8.179269,8.555284,-4.260824],[-0.674439,-6.808441,-0.625639],[-2.970810,9.112215,-1.307939],[-3.362953,-7.735928,-7.620831]],[[5.697937,4.850627,3.214791],[-0.394451,-6.562568,-1.684233],[-9.629007,-0.273167,-4.201700],[1.338002,5.972070,-7.540818],[-3.994640,-3.812789,2.814156],[-9.265895,0.046582,0.215513],[1.694576,-7.483546,-2.878648],[-8.292051,-1.516613,1.126438],[4.236693,3.453420,-3.374643],[-8.339275,-8.747142,0.593450],[2.151312,-4.233327,5.534279],[1.126127,3.437597,7.892827],[-5.625455,-1.249134,-4.207678],[9.816630,-3.701344,-8.523532],[-7.359681,-7.186361,1.593555]],[[3.309986,5.751421,-8.598935],[8.211287,5.451025,3.677322],[-1.821318,-6.658503,-7.746654],[3.678451,-1.801737,-3.962729],[-5.296617,6.529581,6.685085],[-5.527603,2.708636,-1.176651],[-3.269342,3.911392,-4.081230],[-3.412348,-3.656180,3.987398],[-9.140468,-0.438176,2.869064],[1.059956,-3.356744,-3.914615],[-3.184109,-6.444090,-7.107667],[5.036017,-8.456254,2.453747],[4.080295,-1.981103,-4.249842],[0.448362,-0.964692,-8.191846],[-9.689708,0.070721,-7.535171]],[[5.433802,-8.538246,6.121634],[-2.975948,8.861547,2.163643],[-2.882026,9.401523,2.102092],[-2.522108,-1.011421,-3.536190],[-4.111256,-2.817056,5.910632],[0.203001,0.689959,-3.460437],[2.238703,6.491365,-8.393069],[3.690050,-4.244832,5.504198],[-0.215070,-9.139266,-8.148223],[5.834394,5.767181,-1.709362],[7.896041,7.418061,8.675402],[5.204601,5.869460,5.988073],[3.458134,-1.688393,8.370247],[4.548714,5.200436,-6.360153],[3.104713,4.780601,-9.313102]],[[3.396253,5.438546,-8.355912],[1.115075,9.587803,9.249251],[-2.443628,7.127949,-0.207037],[-5.308189,1.269483,2.390616],[7.263524,5.617310,2.198289],[-6.940932,6.502622,-1.341039],[-7.136396,7.339345,-0.686269],[-4.492248,-3.268086,3.374039],[3.559963,-1.305938,5.803731],[-1.556677,-0.572472,7.888523],[2.759119,1.188105,-0.410876],[5.547351,3.851042,-8.459361],[5.170079,-6.745878,6.397184],[-7.616845,2.217550,8.728665],[-9.365293,1.694368,9.104510]]], dtype = "float32")#candidate|7843|(13, 15, 3)|const|float32
var_7844 = relay.var("var_7844", dtype = "float32", shape = (13, 15, 3))#candidate|7844|(13, 15, 3)|var|float32
bop_7845 = relay.divide(const_7843.astype('float32'), relay.reshape(var_7844.astype('float32'), relay.shape_of(const_7843))) # shape=(13, 15, 3)
func_7104_call = mod.get_global_var('func_7104')
func_7107_call = mutated_mod.get_global_var('func_7107')
const_7851 = relay.const([-4.518695,6.517436,-8.645892,-1.003325,-8.942332,-7.883437,-7.950906,-2.707141,-6.075293,4.427519,-2.550845,8.576691,3.947341,-5.214542,-1.045287,3.699627,-4.033133,-6.564956,-2.626503,6.502518,-5.644077,-6.392327,9.138946,-6.599572,-8.390138,6.614913,7.764351,5.467598,5.348042,1.111855,-1.053801,9.825822,-3.174983,-6.589553,-7.935728,7.792098,8.178241,-4.429625,-5.739958,9.005057,-4.399560,5.423759,0.087685,6.796555,-7.449217,7.572564,1.029447,-0.954829,-7.757109,6.548618,-8.534210,5.614751,-3.669934,-7.165890,-8.467383,9.445552,2.006659,0.833282,-0.622700,1.984263,7.499323,2.517787,7.172307,-2.349224,-5.057352,2.756341,4.028173,5.534852,-7.339655,-4.893956,7.133496,3.327561,6.160445,8.571101,0.051013,-3.739834,1.442545,-7.355312,7.710527,-5.186348,-7.940644,6.948322,7.133066,6.326747,-4.367735,-4.925399,-3.412299,-2.976528,-8.580320,8.400461,4.431814,8.099669,0.031676,6.549799,-8.536764,9.481467,1.588218,-0.440742,8.121199,-9.155793,-0.696126,0.490361,9.057347,-5.372238,1.197249,9.948733,5.006222,-8.547915,-4.444359,-0.098369,3.233352,6.034713,-2.077840,7.199051,-7.360721,4.866278,1.604995,5.233475,7.581217,-5.353015,5.734285,9.454880,-5.755142,8.031704,4.676278,-8.643313,8.742401,-7.822492,9.904169,5.685108,4.107896,-3.848024,9.378732,2.116161,0.974055,-1.451368,-7.977135,-1.545543,0.498694,7.466067,2.363249,9.068935,-4.675949,-2.554942,-9.454905,0.056299,-1.554735,-6.598952,3.589869,-6.935109,1.994859,1.842702,-2.573989,9.207402,9.235515,7.057547,-1.809585,-9.126624,-9.106452,-4.585745,-7.987311,-6.425672,-9.172716,4.206149,3.135378,-9.678174,-8.345409,-9.273274,5.268231,-4.620433,-2.789635,4.068043,-7.175804,7.010157,-9.612259,6.524288,8.782513,-0.649296,-0.767964,0.914825,1.437901,8.387101,9.322927,8.160549,7.556011,-5.356250,2.589492,-6.274712,4.496774,-6.013702,4.581034,-9.544662,2.160678,-3.527415,-0.758335,7.987101], dtype = "float64")#candidate|7851|(196,)|const|float64
call_7850 = relay.TupleGetItem(func_7104_call(relay.reshape(const_7851.astype('float64'), [196,])), 2)
call_7852 = relay.TupleGetItem(func_7107_call(relay.reshape(const_7851.astype('float64'), [196,])), 2)
output = relay.Tuple([bop_7845,call_7850,const_7851,])
output2 = relay.Tuple([bop_7845,call_7852,const_7851,])
func_7854 = relay.Function([var_7844,], output)
mod['func_7854'] = func_7854
mod = relay.transform.InferType()(mod)
mutated_mod['func_7854'] = func_7854
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7855 = relay.var("var_7855", dtype = "float32", shape = (13, 15, 3))#candidate|7855|(13, 15, 3)|var|float32
func_7854_call = mutated_mod.get_global_var('func_7854')
call_7856 = func_7854_call(var_7855)
output = call_7856
func_7857 = relay.Function([var_7855], output)
mutated_mod['func_7857'] = func_7857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6709_call = mod.get_global_var('func_6709')
func_6711_call = mutated_mod.get_global_var('func_6711')
call_7955 = relay.TupleGetItem(func_6709_call(), 1)
call_7956 = relay.TupleGetItem(func_6711_call(), 1)
uop_7964 = relay.asinh(call_7955.astype('float64')) # shape=(12, 32)
uop_7966 = relay.asinh(call_7956.astype('float64')) # shape=(12, 32)
uop_7967 = relay.sigmoid(call_7955.astype('float64')) # shape=(12, 32)
uop_7969 = relay.sigmoid(call_7956.astype('float64')) # shape=(12, 32)
output = relay.Tuple([uop_7964,uop_7967,])
output2 = relay.Tuple([uop_7966,uop_7969,])
func_7979 = relay.Function([], output)
mod['func_7979'] = func_7979
mod = relay.transform.InferType()(mod)
output = func_7979()
func_7980 = relay.Function([], output)
mutated_mod['func_7980'] = func_7980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7979_call = mod.get_global_var('func_7979')
func_7980_call = mutated_mod.get_global_var('func_7980')
call_7993 = relay.TupleGetItem(func_7979_call(), 1)
call_7994 = relay.TupleGetItem(func_7980_call(), 1)
uop_7995 = relay.sinh(call_7993.astype('float32')) # shape=(12, 32)
uop_7997 = relay.sinh(call_7994.astype('float32')) # shape=(12, 32)
uop_8004 = relay.acos(uop_7995.astype('float32')) # shape=(12, 32)
uop_8006 = relay.acos(uop_7997.astype('float32')) # shape=(12, 32)
output = uop_8004
output2 = uop_8006
func_8007 = relay.Function([], output)
mod['func_8007'] = func_8007
mod = relay.transform.InferType()(mod)
output = func_8007()
func_8008 = relay.Function([], output)
mutated_mod['func_8008'] = func_8008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6266_call = mod.get_global_var('func_6266')
func_6268_call = mutated_mod.get_global_var('func_6268')
call_8012 = func_6266_call()
call_8013 = func_6266_call()
const_8014 = relay.const([[[-7.919238,1.323995,1.939463,-9.716379,0.795641]],[[-2.785070,-0.671758,-9.765286,1.414438,-9.236992]],[[-1.496564,3.450251,2.499537,1.776788,-7.858894]],[[-1.125977,-4.836345,5.043376,7.408584,-0.669621]],[[6.216363,8.759937,-9.288218,8.070535,5.385387]],[[2.361272,3.224683,-1.687540,2.858727,7.586087]],[[6.628620,-4.614033,7.599923,6.165762,6.246794]],[[3.750467,-5.557807,-9.563019,-5.570648,3.407293]],[[-6.920771,2.946391,5.317193,-6.230464,8.448414]],[[8.959097,3.224895,-0.483961,7.502282,5.819691]],[[-5.161328,4.917606,-5.874902,4.611644,4.305547]],[[-5.214031,8.416509,-3.813192,5.871818,9.432745]],[[-7.630751,2.968625,2.793862,9.251582,2.201795]],[[9.085639,5.729105,2.212598,5.928889,6.528052]],[[3.661548,-8.165040,3.219594,8.024673,4.279062]],[[-2.608717,4.190373,0.793243,3.696789,0.471893]]], dtype = "float64")#candidate|8014|(16, 1, 5)|const|float64
bop_8015 = relay.greater_equal(call_8012.astype('bool'), relay.reshape(const_8014.astype('bool'), relay.shape_of(call_8012))) # shape=(16, 1, 5)
bop_8018 = relay.greater_equal(call_8013.astype('bool'), relay.reshape(const_8014.astype('bool'), relay.shape_of(call_8013))) # shape=(16, 1, 5)
func_8007_call = mod.get_global_var('func_8007')
func_8008_call = mutated_mod.get_global_var('func_8008')
call_8021 = func_8007_call()
call_8022 = func_8007_call()
output = relay.Tuple([bop_8015,call_8021,])
output2 = relay.Tuple([bop_8018,call_8022,])
func_8025 = relay.Function([], output)
mod['func_8025'] = func_8025
mod = relay.transform.InferType()(mod)
mutated_mod['func_8025'] = func_8025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8025_call = mutated_mod.get_global_var('func_8025')
call_8026 = func_8025_call()
output = call_8026
func_8027 = relay.Function([], output)
mutated_mod['func_8027'] = func_8027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6866_call = mod.get_global_var('func_6866')
func_6867_call = mutated_mod.get_global_var('func_6867')
call_8033 = func_6866_call()
call_8034 = func_6866_call()
output = relay.Tuple([call_8033,])
output2 = relay.Tuple([call_8034,])
func_8064 = relay.Function([], output)
mod['func_8064'] = func_8064
mod = relay.transform.InferType()(mod)
mutated_mod['func_8064'] = func_8064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8064_call = mutated_mod.get_global_var('func_8064')
call_8065 = func_8064_call()
output = call_8065
func_8066 = relay.Function([], output)
mutated_mod['func_8066'] = func_8066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7159_call = mod.get_global_var('func_7159')
func_7160_call = mutated_mod.get_global_var('func_7160')
call_8127 = func_7159_call()
call_8128 = func_7159_call()
func_6492_call = mod.get_global_var('func_6492')
func_6493_call = mutated_mod.get_global_var('func_6493')
call_8131 = func_6492_call()
call_8132 = func_6492_call()
func_2324_call = mod.get_global_var('func_2324')
func_2326_call = mutated_mod.get_global_var('func_2326')
var_8145 = relay.var("var_8145", dtype = "int8", shape = (11,))#candidate|8145|(11,)|var|int8
call_8144 = relay.TupleGetItem(func_2324_call(relay.reshape(var_8145.astype('int8'), [1, 11, 1])), 0)
call_8146 = relay.TupleGetItem(func_2326_call(relay.reshape(var_8145.astype('int8'), [1, 11, 1])), 0)
output = relay.Tuple([call_8127,call_8131,call_8144,var_8145,])
output2 = relay.Tuple([call_8128,call_8132,call_8146,var_8145,])
func_8147 = relay.Function([var_8145,], output)
mod['func_8147'] = func_8147
mod = relay.transform.InferType()(mod)
mutated_mod['func_8147'] = func_8147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8148 = relay.var("var_8148", dtype = "int8", shape = (11,))#candidate|8148|(11,)|var|int8
func_8147_call = mutated_mod.get_global_var('func_8147')
call_8149 = func_8147_call(var_8148)
output = call_8149
func_8150 = relay.Function([var_8148], output)
mutated_mod['func_8150'] = func_8150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6600_call = mod.get_global_var('func_6600')
func_6602_call = mutated_mod.get_global_var('func_6602')
call_8226 = func_6600_call()
call_8227 = func_6600_call()
output = relay.Tuple([call_8226,])
output2 = relay.Tuple([call_8227,])
func_8229 = relay.Function([], output)
mod['func_8229'] = func_8229
mod = relay.transform.InferType()(mod)
output = func_8229()
func_8230 = relay.Function([], output)
mutated_mod['func_8230'] = func_8230
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8250 = relay.const([[[5,4,-2],[-2,7,9],[-10,-2,5],[-7,2,-1],[-7,-3,9],[6,1,-7],[-8,-8,-3],[-10,2,-3],[-7,8,-2]],[[-8,-9,7],[-6,-10,-2],[9,-8,-6],[6,5,-9],[-2,9,-6],[10,9,6],[7,-10,8],[-6,1,-6],[6,-2,-9]],[[-7,7,-3],[-6,-8,2],[2,5,-6],[3,10,7],[-2,9,4],[-7,8,-7],[-1,-2,2],[5,5,8],[-5,-5,-9]],[[-2,-7,-5],[6,2,-9],[3,-3,-9],[2,1,-5],[1,9,4],[10,9,4],[8,9,6],[-10,6,-5],[-10,-8,-6]],[[-7,-1,-1],[-6,-1,-10],[-10,-7,-8],[-5,-3,2],[7,-6,-3],[7,7,8],[-5,1,-1],[2,-9,10],[-3,6,7]],[[3,9,8],[10,-4,7],[5,8,9],[8,1,-2],[5,-8,-9],[-8,-9,-10],[1,-4,6],[-6,-5,-10],[-2,-6,6]],[[-5,-1,-1],[-8,-3,-5],[5,4,8],[-3,5,-9],[-2,3,-5],[6,-9,3],[-9,8,9],[6,9,3],[4,-4,-4]],[[5,-3,4],[7,-7,8],[8,-10,-1],[2,-3,9],[-10,2,3],[-6,-9,-7],[6,2,-4],[-3,8,-9],[-2,-6,1]],[[9,-10,5],[6,-2,-10],[-8,4,-10],[-2,1,6],[-9,-2,-3],[10,-4,4],[6,3,-5],[-6,9,-4],[-10,-2,6]],[[-10,8,8],[5,-3,2],[10,-5,5],[-6,-4,-3],[-6,3,-4],[7,2,6],[-7,1,1],[5,-1,-2],[2,-1,3]],[[-5,7,-8],[-6,6,10],[-1,-4,7],[8,-5,-6],[-7,-5,7],[2,-8,9],[-3,2,-7],[3,9,2],[3,10,1]],[[6,-6,-6],[-10,2,-1],[-5,8,-4],[-10,-2,-4],[-9,-6,-4],[-6,-5,-1],[3,3,-1],[-8,1,-4],[10,-3,6]],[[-9,-2,-3],[2,-7,2],[-1,-9,-2],[-9,9,-8],[-6,-10,3],[6,-9,6],[7,3,-6],[1,-2,2],[-3,6,-2]],[[6,1,6],[-1,5,-3],[4,-3,-3],[4,8,4],[-1,2,10],[2,-3,3],[-8,-4,-6],[5,4,-9],[-9,-10,-10]]], dtype = "uint16")#candidate|8250|(14, 9, 3)|const|uint16
var_8251 = relay.var("var_8251", dtype = "uint16", shape = (14, 9, 3))#candidate|8251|(14, 9, 3)|var|uint16
bop_8252 = relay.greater_equal(const_8250.astype('bool'), relay.reshape(var_8251.astype('bool'), relay.shape_of(const_8250))) # shape=(14, 9, 3)
bop_8258 = relay.left_shift(bop_8252.astype('uint64'), relay.reshape(const_8250.astype('uint64'), relay.shape_of(bop_8252))) # shape=(14, 9, 3)
uop_8271 = relay.sqrt(bop_8252.astype('float32')) # shape=(14, 9, 3)
output = relay.Tuple([bop_8258,uop_8271,])
output2 = relay.Tuple([bop_8258,uop_8271,])
func_8276 = relay.Function([var_8251,], output)
mod['func_8276'] = func_8276
mod = relay.transform.InferType()(mod)
mutated_mod['func_8276'] = func_8276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8277 = relay.var("var_8277", dtype = "uint16", shape = (14, 9, 3))#candidate|8277|(14, 9, 3)|var|uint16
func_8276_call = mutated_mod.get_global_var('func_8276')
call_8278 = func_8276_call(var_8277)
output = call_8278
func_8279 = relay.Function([var_8277], output)
mutated_mod['func_8279'] = func_8279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_8371 = relay.TupleGetItem(func_5938_call(), 0)
call_8372 = relay.TupleGetItem(func_5939_call(), 0)
output = relay.Tuple([call_8371,])
output2 = relay.Tuple([call_8372,])
func_8377 = relay.Function([], output)
mod['func_8377'] = func_8377
mod = relay.transform.InferType()(mod)
output = func_8377()
func_8378 = relay.Function([], output)
mutated_mod['func_8378'] = func_8378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8393 = relay.var("var_8393", dtype = "float64", shape = (12, 8, 5))#candidate|8393|(12, 8, 5)|var|float64
uop_8394 = relay.tan(var_8393.astype('float64')) # shape=(12, 8, 5)
uop_8397 = relay.rsqrt(uop_8394.astype('float32')) # shape=(12, 8, 5)
uop_8399 = relay.erf(uop_8397.astype('float32')) # shape=(12, 8, 5)
output = relay.Tuple([uop_8399,])
output2 = relay.Tuple([uop_8399,])
func_8405 = relay.Function([var_8393,], output)
mod['func_8405'] = func_8405
mod = relay.transform.InferType()(mod)
mutated_mod['func_8405'] = func_8405
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8406 = relay.var("var_8406", dtype = "float64", shape = (12, 8, 5))#candidate|8406|(12, 8, 5)|var|float64
func_8405_call = mutated_mod.get_global_var('func_8405')
call_8407 = func_8405_call(var_8406)
output = call_8407
func_8408 = relay.Function([var_8406], output)
mutated_mod['func_8408'] = func_8408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6114_call = mod.get_global_var('func_6114')
func_6115_call = mutated_mod.get_global_var('func_6115')
call_8453 = relay.TupleGetItem(func_6114_call(), 0)
call_8454 = relay.TupleGetItem(func_6115_call(), 0)
output = relay.Tuple([call_8453,])
output2 = relay.Tuple([call_8454,])
func_8457 = relay.Function([], output)
mod['func_8457'] = func_8457
mod = relay.transform.InferType()(mod)
mutated_mod['func_8457'] = func_8457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8457_call = mutated_mod.get_global_var('func_8457')
call_8458 = func_8457_call()
output = call_8458
func_8459 = relay.Function([], output)
mutated_mod['func_8459'] = func_8459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7159_call = mod.get_global_var('func_7159')
func_7160_call = mutated_mod.get_global_var('func_7160')
call_8513 = func_7159_call()
call_8514 = func_7159_call()
uop_8516 = relay.log(call_8513.astype('float64')) # shape=(16, 1, 5)
uop_8518 = relay.log(call_8514.astype('float64')) # shape=(16, 1, 5)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_8528 = relay.TupleGetItem(func_5938_call(), 0)
call_8529 = relay.TupleGetItem(func_5939_call(), 0)
bop_8534 = relay.subtract(uop_8516.astype('int64'), relay.reshape(call_8528.astype('int64'), relay.shape_of(uop_8516))) # shape=(16, 1, 5)
bop_8537 = relay.subtract(uop_8518.astype('int64'), relay.reshape(call_8529.astype('int64'), relay.shape_of(uop_8518))) # shape=(16, 1, 5)
func_4868_call = mod.get_global_var('func_4868')
func_4870_call = mutated_mod.get_global_var('func_4870')
var_8544 = relay.var("var_8544", dtype = "float32", shape = (12, 2))#candidate|8544|(12, 2)|var|float32
call_8543 = func_4868_call(relay.reshape(var_8544.astype('float32'), [3, 4, 2]))
call_8545 = func_4868_call(relay.reshape(var_8544.astype('float32'), [3, 4, 2]))
output = relay.Tuple([bop_8534,call_8543,var_8544,])
output2 = relay.Tuple([bop_8537,call_8545,var_8544,])
func_8551 = relay.Function([var_8544,], output)
mod['func_8551'] = func_8551
mod = relay.transform.InferType()(mod)
mutated_mod['func_8551'] = func_8551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8552 = relay.var("var_8552", dtype = "float32", shape = (12, 2))#candidate|8552|(12, 2)|var|float32
func_8551_call = mutated_mod.get_global_var('func_8551')
call_8553 = func_8551_call(var_8552)
output = call_8553
func_8554 = relay.Function([var_8552], output)
mutated_mod['func_8554'] = func_8554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6734_call = mod.get_global_var('func_6734')
func_6735_call = mutated_mod.get_global_var('func_6735')
call_8645 = relay.TupleGetItem(func_6734_call(), 0)
call_8646 = relay.TupleGetItem(func_6735_call(), 0)
func_4244_call = mod.get_global_var('func_4244')
func_4248_call = mutated_mod.get_global_var('func_4248')
const_8653 = relay.const([[7,-3,2,5,-7,3,2,8,-5,2,-2,-4,6,-7,-2,-1,-8,6,-4,1,-5,-9,4,-9,-10,7,-4,8,-7,-10,-7,9,-9,5,-7,-7,5,-1,3,-10,-1,-4,-7,4,7,-4,8,2,-8,1,5,6,-5,-1,-7,1,5,2,10,-6,3,-3,-3,8,-2,-5,-8,9,9,2,-10,-5,-2,6,6,-1,4,-8,9,-6,-7,-9,3,-2],[9,-10,9,-3,4,-5,3,-7,-7,2,5,6,1,10,-5,-6,-6,-3,-2,8,-8,-6,6,-8,2,-1,-7,10,-4,10,3,-6,-2,6,9,-2,6,8,3,6,-3,4,-6,8,7,1,-5,8,8,-3,-9,-4,3,6,-5,5,3,-9,-6,-9,8,2,5,-3,6,-9,-3,8,4,-3,-10,8,8,10,-8,-6,7,2,-7,-6,-2,-8,10,10],[1,3,-4,5,-10,-7,-4,-5,-10,-6,1,-10,10,6,3,4,-9,-7,7,4,-9,-8,-3,-5,-9,10,4,2,7,4,4,-7,-4,-6,6,-10,3,7,10,-9,-4,8,-8,-2,8,6,-3,-7,-7,9,6,-8,7,5,1,8,-4,5,-9,-8,4,-1,6,5,-4,9,-4,-9,4,10,-9,-3,7,4,5,-4,-5,-8,-4,4,-5,-8,-10,10],[10,-1,8,-3,-2,-10,-8,-5,-1,1,4,-5,-10,8,9,-6,-7,1,3,-2,-10,9,9,8,9,-7,-7,-3,-5,-7,-8,7,-1,3,-2,-8,-9,8,-1,8,-6,-2,-7,-1,6,1,2,3,6,-9,3,1,-4,-10,5,-6,2,7,-5,-4,-6,-6,2,-6,-5,9,2,-10,10,3,7,-10,7,10,6,4,-10,-2,10,-3,3,-5,-3,-1],[-6,-10,-4,-3,8,7,-9,5,1,-4,-5,10,-8,-5,1,-3,2,7,4,1,3,-5,6,4,7,-10,4,2,-4,-4,-3,-9,10,1,8,-7,9,-5,-2,-4,-4,1,2,-1,-10,-1,-2,8,-8,8,-10,-7,7,-5,1,-5,-2,5,2,2,9,-5,-4,2,1,-8,-5,1,6,-10,-3,-2,-3,-1,-10,-1,8,1,8,-4,3,1,8,1],[-9,-9,-6,-9,7,-8,-5,-10,-4,5,-4,2,-2,7,-6,-1,9,-9,-2,-8,10,-8,2,6,-8,-7,-1,-10,-3,-10,-7,-5,-3,-3,-3,-6,4,8,1,-3,6,-1,-10,-9,-8,-3,-1,1,-5,1,-3,2,2,-7,-5,-1,-2,-9,3,-7,-6,6,-1,3,3,-3,-2,6,-7,6,3,3,4,-8,-10,10,5,3,-4,1,2,-4,1,10]], dtype = "uint32")#candidate|8653|(6, 84)|const|uint32
call_8652 = relay.TupleGetItem(func_4244_call(relay.reshape(const_8653.astype('uint32'), [14, 6, 6]), relay.reshape(const_8653.astype('uint32'), [14, 6, 6]), ), 0)
call_8654 = relay.TupleGetItem(func_4248_call(relay.reshape(const_8653.astype('uint32'), [14, 6, 6]), relay.reshape(const_8653.astype('uint32'), [14, 6, 6]), ), 0)
const_8655 = relay.const([[[False,True,True,True,False,False],[False,False,True,False,True,True],[False,False,False,False,True,False],[True,False,False,True,False,False],[False,True,True,False,False,True],[False,False,False,True,True,False]],[[False,False,True,True,False,False],[False,False,False,False,False,True],[True,True,False,True,False,False],[False,True,True,True,True,True],[False,False,True,True,True,False],[True,True,False,False,False,True]],[[False,True,True,False,True,False],[False,False,True,False,False,False],[False,False,True,True,True,False],[False,True,False,True,False,False],[True,False,True,False,False,False],[True,True,True,False,True,False]],[[False,True,True,False,True,True],[False,True,True,True,False,False],[True,False,True,False,True,False],[False,True,False,True,True,False],[True,False,True,False,False,True],[True,True,False,False,True,False]],[[True,True,True,False,False,False],[False,True,False,True,True,False],[True,True,True,True,True,False],[False,False,False,True,True,False],[False,False,True,True,False,False],[True,True,True,False,True,True]],[[False,True,True,True,False,False],[True,False,False,False,True,True],[False,True,True,False,True,False],[False,True,False,False,False,False],[False,True,True,False,False,False],[True,False,True,False,True,False]],[[True,False,False,True,False,True],[False,False,True,True,False,False],[False,True,True,False,True,False],[True,True,True,False,True,True],[True,True,False,False,True,True],[False,False,False,False,True,False]],[[False,True,True,True,True,True],[True,True,False,False,True,True],[False,False,True,False,True,False],[True,False,True,True,False,True],[True,True,True,True,True,True],[True,True,False,False,False,True]],[[False,True,False,False,False,False],[False,False,False,True,False,True],[True,False,True,True,True,False],[False,False,True,True,True,False],[False,True,False,True,True,False],[False,True,False,True,False,False]],[[True,False,False,True,True,True],[True,False,True,False,True,False],[False,True,True,True,True,False],[False,True,True,False,False,True],[False,True,False,False,False,False],[False,True,False,True,False,True]],[[False,True,False,True,False,True],[True,False,True,False,False,False],[True,False,True,False,False,False],[True,False,True,False,True,True],[False,True,False,True,False,False],[False,False,False,False,True,False]],[[False,True,False,True,True,False],[True,False,False,False,True,False],[False,False,True,True,False,False],[False,True,True,False,False,False],[True,False,False,True,True,False],[True,True,True,True,False,False]],[[False,True,True,False,True,False],[True,False,False,False,True,True],[False,False,False,True,False,False],[True,True,False,False,False,True],[False,True,False,True,True,False],[True,True,True,False,True,True]],[[False,False,True,True,False,False],[False,False,False,False,False,True],[False,True,False,False,True,True],[False,True,False,False,False,True],[True,False,False,False,False,False],[True,True,False,False,False,True]]], dtype = "bool")#candidate|8655|(14, 6, 6)|const|bool
bop_8656 = relay.subtract(call_8652.astype('int8'), relay.reshape(const_8655.astype('int8'), relay.shape_of(call_8652))) # shape=(14, 6, 6)
bop_8659 = relay.subtract(call_8654.astype('int8'), relay.reshape(const_8655.astype('int8'), relay.shape_of(call_8654))) # shape=(14, 6, 6)
output = relay.Tuple([call_8645,const_8653,bop_8656,])
output2 = relay.Tuple([call_8646,const_8653,bop_8659,])
func_8670 = relay.Function([], output)
mod['func_8670'] = func_8670
mod = relay.transform.InferType()(mod)
output = func_8670()
func_8671 = relay.Function([], output)
mutated_mod['func_8671'] = func_8671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7517_call = mod.get_global_var('func_7517')
func_7518_call = mutated_mod.get_global_var('func_7518')
call_8685 = relay.TupleGetItem(func_7517_call(), 4)
call_8686 = relay.TupleGetItem(func_7518_call(), 4)
func_1021_call = mod.get_global_var('func_1021')
func_1023_call = mutated_mod.get_global_var('func_1023')
const_8688 = relay.const([-9.621567,-8.633512,9.789996,9.054535,4.273352,-1.353755,-0.879459,3.486985,-8.262244,2.582128,0.592469,5.435100,4.489277,-0.518406,0.821098,-2.025992,0.275123,-9.200003,6.615762,-0.732077,9.185706,-8.201859,3.152338,2.141974,9.155688,9.781751,-9.073892,5.634419,3.974274,-6.073384,2.495812,-8.287462,1.450689,-8.232063,-9.397230,-9.209090,6.349576,2.606368,-7.557410,-6.508350,-4.889236,-9.826820,-5.283571,-8.339161,9.731892,-4.338449,-8.817560,5.718313,0.101934,-9.140796,1.867718,-1.201457,-3.561303,7.182512,-9.129783,-9.397266,-4.676989,1.125452,-6.493383,-3.480142,-2.243365,2.644782,5.406726,7.198705,-1.487716,0.918567,-5.881665,-5.744019,4.582903,5.037324,6.223733,-3.863065,1.263995,-3.899672,-2.066556,5.687923,1.973223,4.094459,-3.211454,-5.078101,-6.032731,-7.032228,1.533059,2.066367,-1.385771,-9.475203,6.275696,2.653328,-6.299163,-1.819815,-2.555074,8.716751,-8.102749,8.900186,1.750486,8.141368,2.261283,-8.783814,-6.472578,0.976091,6.082825,-8.822091,8.725242,6.410693,3.731405,-2.114536,7.678223,-3.949267,-4.039577,-0.581159,9.638440,5.443472,7.661344,8.165497,-8.632029,0.235405,-1.278235,-5.688429,8.579590,9.502240,4.533754,2.513044,1.055894,1.520120,3.371013,-7.851631,9.547612,4.258619,6.759235,5.342499,8.305170,5.365550,-8.367634,3.685835,1.355743,7.182192,-1.636907,-0.619302,-8.711427,5.303356,5.161838,-3.125593,-4.976622,-4.339715,-3.213820,8.908087,-7.095775,6.789105,-2.538592,-7.826863,4.025561,-3.156969,-7.115727,2.648702,-7.526536,-9.157641,-0.011473,7.369662,-4.850365,3.045961,3.331659,2.723974,1.376817,-5.366526,6.213353,-4.721539,-7.863517,5.869487,3.673326,3.977279,7.554728,3.743350,-1.769815,-2.290540,-9.248695,7.388653,-8.150771,6.798891,7.695009,9.582411,7.463049,8.070663,1.773505,-2.504381,-7.463946,-5.070224,-0.286015,7.369229,-4.866462,3.606984,7.037710,-6.344140,4.463861,-9.984682,-1.639086,-0.389129,0.935276,4.617273,-6.975656,2.499369,-5.869344,-8.116140,8.932318,3.047081,-4.814180,6.749277,-1.793659,9.519477,2.795051,-9.733712,-9.916653,7.669424,0.452302,-2.367964,2.667625,-3.657198,1.937288,-1.840414,-8.428404,7.869587,-4.387526,8.787795,-2.150901,1.353204,-4.644712,8.838313,-2.313463,-1.926949,-6.939393,9.077216,-2.842579,9.420974,-1.221145,-3.870202,0.607277,2.871206,-3.557993,-5.539087,-8.813673,3.546897,-1.037954,7.469263,9.704271,-8.277874,-6.261059,5.647053,0.206621,-9.079261,-1.211633,-2.965929,-6.329296,-9.517709,-6.744986,-5.882892,-6.338350,2.099825,-6.215932,2.356727,-4.059860,0.962106,6.144187,4.733861,7.251492,-5.665870,0.326338,-3.232794,7.913453,-5.111125,5.596185,-6.568878,-0.557220,-2.064546,-1.235649,7.208311,6.862780,7.402394,5.856237,5.834738,-3.177723,0.158302,8.638964,-6.245717,-0.125316,-8.414811,4.646497,7.917835,5.392501,-2.060933,6.116973,-8.016855,0.641749,3.750714,8.085355,4.801874,-1.500808,4.381870,-6.795209,-1.387264,-7.584036,1.334234,9.664261,-8.385765,-0.391072,-0.853373,-7.587714,4.345469,-6.206668,-8.066922,8.505505,-0.680089,-1.319504,4.881783,2.678727,5.009504,0.805929,5.878204,7.702674,0.217176,-3.880675,0.532736,-9.032639,-4.759937,7.125878,-2.739507,8.048893,0.578923,-9.693984,-5.354513,-2.859399,-2.817141,-0.670090,6.407510,1.151936,-9.470841,-4.077781,-7.907181,-7.094819,-3.892272,4.697334,-7.448246,0.177926,6.370351,8.844991,9.082693,7.339505,7.527798,2.474984,-6.515964,7.037898,-5.588971,-0.399452,-8.278929,-0.475657,6.176548,-5.007268,-8.911380,7.609428,6.082793,8.934907,-8.859603,-2.575824,6.145301,-1.127844,-3.509382,-1.062082,-2.745482,4.332787,4.694131,8.398447,-1.520396,-5.405070,1.613690,-5.837548,-3.612549,4.301715,-2.804291,-9.973932,6.512867,3.362104,-5.618792,-1.245639,7.298526,-3.664402,1.124932,7.813082,1.808956,-9.702037,7.661658,5.824558,6.724547,-0.360826,3.977562,5.602947,-2.698662,-2.203048,-4.860410,9.068142,6.383173,-2.470117,7.987435,-6.148277,3.714258,1.865277,3.665132,1.022247,5.311266,-7.790048,-8.000956,8.718575,0.813090,-1.013691,-0.475009,4.817866,0.885596,3.062190,6.760158,5.929017,-3.321250,6.489181,8.495688,-1.123836,-6.583205,5.304252,-8.214079,3.059238,1.190273,8.515579,7.998626,5.733680,-5.053011,5.154239,-8.216357,0.593067,5.449144,-7.180070,2.878146,3.053322,7.593468,-2.844405,6.585978,5.307037,1.250532,4.933289,5.111708,8.778789,2.110977,2.378456,9.002101,-8.626575,1.074105,-0.510463,-9.187018,7.291786,-2.296127,1.413145,3.007540,-2.521984,-2.149208,-0.484018,-3.991543,4.503547,-1.900462,9.981698,9.831813,7.313415,-1.343545,2.849013,6.616414,7.201429,1.479458,-0.252686,1.860986,0.407723,-2.083209,-7.718681,-9.723770,-4.034809,-9.275829,-4.231692,7.577160,5.225723,7.285130,-7.343052,1.910491,8.699492,2.730320,5.977613,-7.183174,-8.922775,-9.982370,-0.765201,-5.741793,-9.847894,-1.206565,1.496641,-0.327472,-8.405251,5.311208,-3.828978,-1.614473,9.655758,8.655953,-2.928730,-8.858940,-2.110244,0.242106,4.824242,5.640117,8.551192,-3.988977,-0.980479,9.325386,1.634463,1.743213,5.938527,4.870778,8.797973,9.772762,-2.306789,-8.217982,0.405350,5.700826,-4.154432,-8.275184,6.124322,-8.096228,8.137450,-7.693100,-0.147372,-7.668892,9.508466,6.180176,9.603858,-0.565562,-3.702494,-5.184921,4.867351,-1.150458,4.555849,8.325566,8.175957,-7.179345,5.918250,3.974548,-2.228862,3.775831,0.655336,3.026460,1.909289,5.579237,-3.869525,6.608067,1.446865,6.841885,-6.194021,0.434247,-6.402372,-0.144650,-9.598349,-2.334112,-1.711994,-1.122570,-8.854898,-6.537582,-6.179627,3.856087,9.285876,-4.024901,-2.294212,4.433338,-4.402933,-7.447417,-3.017263,-6.034246,1.833658,-6.189040,-1.248631,9.092281,-6.707414,-0.608451,7.888278,4.496676,0.545961,-5.658430,-6.751333,-3.744290,-6.697407,1.540470,-2.787632,-2.129230,-9.736797,0.215309,8.223739,0.675576,-1.375643,-3.051483,0.049617,-8.018977,4.382145,-6.036780,1.307237,-0.832674,-9.080689,-8.706070,5.245333,-3.422482,8.563712,-0.067600,-7.859547,-0.979043,-7.667951,8.845126,1.246034,-5.251464,-8.598229,-0.425340,7.559013,2.339957,-1.242779,-4.131795,-3.451333,-2.302238,-5.657657,5.770268,-7.713205,8.127850,-9.275922,8.089082,2.504571,1.304255,-4.242096,9.812057,-8.293784,6.939501,-5.999102,9.534193,-6.780571,1.755715,-0.631324,-3.456662,-5.341758,1.525551,-5.493763,-8.610267,-4.666327,3.790438,9.822531,4.801739,9.959675,8.206533,-8.782624,9.897515,-5.330669,-0.209787,7.059021,4.030418,-8.433038,-6.574153,3.650334,-6.399486,-0.886804,7.498860,-8.207930,-7.876353,5.715046,-5.433976,-7.117554,0.998071,-3.381224,1.084756,-3.370448,1.461665,-3.489241,4.809468,3.934839,3.493865,7.840373,0.094600,4.188065,0.135603,8.098537,0.100345,6.919057,-1.771467,-2.356045,8.192824,4.328427,4.611484,6.474348,4.879394,5.095427,-7.488097,2.859252,-4.271689,4.036946,-2.770157,5.276564,-5.247378,-8.009629,-2.656478,4.897760,6.308974,8.904272,-9.181582,2.361819,0.059339,-7.243213,0.463586,1.886871,0.760976,6.817141,-8.947538,7.062934,-5.994964,2.139676,-3.676221,-7.053075,0.460272,-6.466259,-7.236315,-6.938297,-9.477758,-3.658580,-3.742798,-0.035401,-0.008226,9.628738,-5.346817,-8.667117,-8.769175,-9.449457,-6.913801,-0.354880,-9.771259,7.163801,-5.385258,-5.871406,-5.021961,-9.632775,-0.701751,-8.235679,1.965763,2.443022,-1.892619,-4.024453,-0.590615,7.268241,3.714341,-0.317195,3.077403,4.234297,0.154898,-1.419069,-1.045685,0.379434,5.185297,4.281637,2.072977,5.874794,-3.459535,9.629368,-4.924867,0.995861,-9.412578,3.002519,2.956878,-2.575153,-3.493046,4.822516,6.126186,4.167154,-2.442928,0.811856,-2.342616,-8.787228,-6.804034,8.759101,-2.142756,3.205632,-4.381551,-1.912112,5.128257,9.538033,-9.824547,-6.462182,1.507344,-1.808924,-5.021119,1.724597,-8.883346,-5.878085,4.862388,2.272133,-1.860072,3.231278,8.853243,1.209544,-4.700008,-8.827559,4.819791,-4.170144,2.287135,-5.535235,0.375458,-5.697010,1.469209,-3.511925,-5.831339,2.015638,-4.146183,1.416383,-3.390807,-2.118082,0.251221,1.740681,6.175411,8.596342,1.546912,0.250205,-0.613808,-0.213288,-6.743425,-7.002612,3.007023,7.957472,-6.848869,7.509926,7.096989,0.724378,2.341933,2.014348,7.322132,9.560675,2.485733,9.921461,-2.831046,5.148465,-2.857739,5.209307,2.615186,-2.794004,7.792407,7.511720,0.961491,-5.330508,5.632561,-5.235029,-5.641137,9.464390,-7.155198,6.557171,4.270646,9.540506,8.308615,1.676755,5.871741,-7.852603,3.703144,-0.276006,0.070936,6.051603,-4.319190,7.807741,7.736272,-9.483553,2.336208,-3.187286,3.973565,-7.247096,-0.223260,7.354546,0.065513,1.252201,1.451637,-5.360179,-9.979519,-8.632185,4.609452,2.846349,-2.669287,-5.917342,-6.967500,-7.540331,-2.678200,-6.443580,-1.946993,-7.649386,6.578921,5.283941,4.184683,4.223917,8.865973,4.310050,3.621988,-0.331711,-6.585188,7.631285,6.566850,-7.301189,1.003351,3.794361,8.395524,3.364347,7.581782,6.640941,-5.360889,-2.344975,-1.153580,-5.750370,-6.351796,-8.821923,0.646022,9.015434,5.901104,-4.483409,-8.148275,3.213461,-0.150768,8.018780,4.474552,-3.412253,0.026924,8.948335,-2.634450,-4.374053,-3.698555,-9.764431,-2.230334,0.433026,6.655078,-1.521711,2.692682,4.254718,4.785763,2.093643,-3.414391,-5.294248,-4.258485,2.620499,-2.043317,3.746650,-9.821705,-2.979162,-1.921786,7.067154,-4.835725,3.552463,7.860367,7.425909,0.766233,8.282998,-6.736176,-7.532078,4.379624,-6.588165,7.106092,7.028918,8.861493,-5.916005,0.822721,2.802645,-1.759334,5.236877,-2.329232,-7.659260,4.431121,0.594795,9.844120,-5.948825,2.112582,-5.806341,-2.361338,0.804914,-4.211729,9.981151,1.642921,3.170472,-9.081329,7.421294,8.348576,-9.447777,2.352333,-7.220029,9.591263,1.012078,5.533789,9.972001,6.805166,1.031747,8.420566,3.737155,-9.247021,-4.455038,4.724844,9.826941,2.395849,9.607703,9.083750,4.144186,-8.744193,8.414856,4.583702,-7.739794,4.973744,-8.549868,-9.879149,9.272520,-2.561998,8.451359,9.358158,-0.076783,0.509131,3.680485,2.383297,7.320005,-5.754763,-4.935204,-4.218720,-1.246625,-3.245849,-7.353083,3.895741,4.118586,4.352705,0.564487,6.343953,4.049163,-3.481710,3.361247,2.898221,8.786511,-4.272286,9.870786,-1.401852,-8.254120,-9.487092,-2.001182,6.859922,4.326659,-5.165147,5.559112,-5.978374,-5.715617,-7.161293,6.925722,0.595236,5.250330,-8.479036,-8.474812,-9.917961,1.468136,9.587435,-3.871049,-0.324559,6.510020,4.067847,-5.098056,4.486531,-4.604819,4.223707,1.853138,-6.574812,-5.756400,-6.841719,-8.460076,5.248320,5.418243,3.669774,2.126828,-7.827696,-1.135617,-1.132278,2.070497,-1.641749,9.392665,3.174254,-9.074389,5.471405,-7.984693,8.783097,-3.789478,5.281237,8.103185,-1.018369,-2.643664,0.028385,-9.793884,8.920819,9.271644,8.965845,0.152021,2.740857,-2.932788,-3.173288,-6.524607,9.145209,3.232532,1.697519,3.719234,7.282863,-2.255843,6.797738,-3.702327,-8.399949,-8.233091,-7.441604,9.383405,6.780896,-6.806947,-8.257092,6.827269,-2.495611,-9.433128,4.084554,9.889947,1.337879,3.747390,-8.550833,-6.688498,1.403227,-8.315061,-3.479136,2.293076,7.666668,-8.345142,4.659023,-1.965161,-0.623392,5.663308,-5.592458,-6.918125,-5.330469,-7.443452,-8.264754,1.131113,9.456586,7.988875,4.023005,7.647247,9.083895,5.106180,4.364476,-7.321818,-3.466386,9.087434,-7.732389,0.736342,7.274417,7.826986,-7.026984,1.519997,-4.319857,9.842366,-5.969672,-9.032212,-3.428054,-1.074230,5.676794,1.543155,-1.546869,3.550556,6.840227,5.067505,-9.944221,-0.145986,7.171157,0.597871,-6.704807,-9.942778,2.045997,-6.376990,-9.188483,-8.438078,0.443746,0.139239,-9.898192,-0.615636,0.687162,8.812441,-1.484601,-9.266673,7.096994,5.188587,5.005911,-0.676501,9.002412,-4.617220,3.946148,0.119600,8.937471,-6.254472,7.213487,1.665566,-6.956493,1.853391,-8.722887,9.867899,9.810827,4.326552,-6.647437,1.657672,8.623275,7.890943,-5.277163,4.853538,2.300006,-8.077539,6.104477,-1.868063,-6.839721,-7.228469,2.456290,-1.959418,3.315695,4.583476,-4.013035,1.978718,1.057279,-0.838792,0.336906,3.923981,-0.900017,-5.918720,7.602889,5.264195,-3.986994,-9.036779,4.541192,-6.827632,-4.594739,-6.686064,-7.711563,-3.811665,-4.430019,-4.050072,4.890748,0.079579,3.739511,1.605783,-6.034079,-8.909474,-9.255073,-1.618681,6.935151,-6.208427,1.491139,-9.768539,-4.900918,2.477193,-0.816599,6.309954,4.514482,0.813165,-6.998203,3.360329,9.245478,9.157599,-4.116368,-1.289067,-0.735200,2.078144,1.817142,6.480267,4.743830,2.603208,-2.188634,6.601531,1.430227,-2.275558,0.155289,-6.650095,6.480441,-4.747264,4.398556,-7.593458,-7.535696,4.334882,6.673473,9.381853,2.116968,-9.816402,7.642182,6.223551,-8.348158,-0.065738,0.454218,1.439451,-8.614707,-6.569279,-6.665801,5.771941,0.884420,-1.668771,-3.897565,2.240791,-5.470972,3.748940,6.787610,-3.113439,8.802079,8.106093,1.022327,1.949503,-0.725657,-7.943243,-9.637105,1.985502,-0.116655,8.689712,-0.734911,5.402978,-2.573191,-3.318000,6.906806,-1.283866,-1.941280,-1.801224,-1.070873,4.365152,1.396733,6.837845,-0.856020,3.265818,-8.354844,4.113051,0.586180,-1.013351,4.973883,3.442623,1.869230,0.165983,4.633934,-6.606598,-8.472702,1.478622,0.539380,4.843268,0.448694,-9.692550,7.842057,-6.683159,-6.153264,3.392873,-8.672673,6.138867,-8.873679,8.626917,-6.054391,6.680313,6.948625,-0.355399,5.949170,-7.940736,9.617780,-8.579516,-9.145726,7.795266,6.575970,7.435398,-4.043878,-2.205078,1.797294,-0.056054,4.107554,-1.997800,-2.206111,5.538076,5.687978,0.026213,-3.756597,0.560766,-7.458233,-6.945812,4.753222,8.950348,-0.490291,-3.997926,5.089205,6.516220,-9.913415,-8.988834,-7.819478,-8.306706,6.396575,-6.135673,-4.067833,7.869034,3.795718,-2.462543,5.107952,-3.380957,1.694293,4.722722,1.059043,5.562709,3.986351,4.698071,6.346805,0.985642,9.546155,3.523797,0.857961,-9.622270,-1.567656,-8.945480,4.461507,5.592972,7.328820,8.734757,1.451118,5.525526,-9.186960,-7.222243,-4.177177,8.019015,-6.150307,5.954514,8.070540,-9.737143,1.552594,8.380782,6.590937,8.522694,1.467523,6.885871,-1.760040,6.964019,3.465522,-7.928830,6.661002,1.092775,-8.215889,-9.609770,4.191035,2.116876,4.030847,8.183554,8.355806,7.405691,8.017682,3.418321,0.708846,5.249269,7.077048,1.396003,6.294170,-5.148492,4.420590,3.779914,6.141540,0.598437,9.240725,3.343732,-5.404890,9.145405,8.262840,1.088323,-4.005243,-9.869358,-6.061294,-1.771656,-6.644784,-6.342987,7.228652,-8.897039,-8.559501,2.396039,-8.237538,4.070165,-7.677625,5.598766,5.630407,-5.893614,2.272091,7.728280,-0.478785,8.660722,-9.271000,3.191449,6.849930,-4.838833,1.527909,4.932901,-6.875238,-7.280876,6.555456,5.823440,-9.522108,-6.397562,-8.641708,-6.124685,-3.303772,4.610417,6.406281,-3.005394,6.113320,-4.957238,8.990825,-3.170105,-8.176007,-5.757405,-8.957786,1.414786,9.527532,-0.403175,4.930205,8.303591,-8.668326,1.034705,7.658798,-8.910453,-0.154992,8.660923,-4.463412,-8.505805,3.808941,0.603204,-6.566947,-9.773894,-4.389259,8.282945,4.873781,5.472358,0.205903,0.195197,5.641608,1.772280,8.343472,5.454191,6.299373,-2.789563,-2.345513,-3.008767,-9.979471,-6.771058,-2.216464,3.623616,-1.658062,0.973756,5.039792,-8.083345,2.611201,-3.077180,0.484405,-2.480579,5.698298,4.124177,-9.223917,-8.716816,-2.852032,-3.194231,-4.758339,2.022441,-7.983468,6.711630,8.156120,-1.741333,4.384363,3.344898,-0.377090,0.273305,3.907127,8.308729,8.647758,-6.787967,0.767342,-6.239744,-9.153261,-6.829262,-2.763074,-5.987098,-9.187216,-8.117832,-6.374374,-7.359810,-7.354497,-9.626226,-7.661131,0.677563,-8.856243,1.378520,-8.317814,4.832113,0.772846,-4.816444,7.859327,-5.571729,2.307500,-6.396462,-0.470002,1.409271,-8.088696,-3.212104,5.291216,-6.913166,-8.973892,4.253677,5.727318,7.402455,4.393860,7.702613,0.138843,-9.895553,-3.107199,-2.411346,7.470586,6.752066,9.398346,-2.904173,-3.143162,-6.508919,-4.156620,5.736148,9.384480,1.221888,-3.316556,1.847635,-3.583681,6.616777,-1.491963,4.203711,2.833121,-1.234951,8.336415,9.331589,2.875962,-9.910860,-8.465058,-7.307468,-2.863480,-3.321685,-1.602909,-0.410841,5.038616,0.139168,9.915858,9.456183,-9.324170,-2.967207,-6.833685,2.960258,9.180962,8.578692,8.248981,5.251687,9.209102,4.673442,-1.927504,-2.467110,3.721570,8.466135,8.976088,4.428033,-9.463963,2.908919,2.802016,6.856153,-7.428375,-7.004987,-8.339646,6.010687,3.385148,2.599677,2.513017,8.128467,1.646742,3.068492,5.670158,-5.570026,-4.820916,-7.901380,-3.291727,1.162123,3.275805,9.113863,4.071329,5.812325,2.583699,-0.491246,5.534486,8.286780,6.327052,0.564433,1.421771,-2.387424,5.993179,9.909463,-4.424878,-9.410895,9.329679,4.509712,-5.115246,2.664267,8.473287,-3.044436,-9.577257,-6.123833,0.614745,-6.225403,6.664768,-3.869719,-8.216579,7.032663,-3.383984,-3.132247,3.625908,8.371453,-6.624237,4.903021,-9.127249,-9.176960,3.663492,-0.426337,-4.316679,4.353594,-9.716530,-2.025342,5.858956,8.429559,0.541156,7.467291,-0.720026,5.878892,-2.539238,-5.338828,-9.552528,3.734414,1.142131,-6.926589,-3.806003,-9.366862,-1.885759,9.831873,-6.015650,5.731881,-1.961825,-7.705734,2.009848,-2.911749,-6.371609,0.597778,1.959816,-3.221471,-7.379690,5.012402,-3.087562,3.763673,-5.583873,-7.652072,-3.319356,4.906414,5.691975,2.648633,8.835204,-0.343196,-7.350537,-8.688081,-5.217065,4.581819,-1.495215,9.222570,-2.523211,6.395548,-9.732134,8.978451,2.237143,3.685715,-8.884499,-4.909002,-9.953781,1.262621,-5.195671,3.869005,-5.617106,9.336556,1.641497,6.788824,-5.524765,-8.438814,-4.342194,5.612667,-0.068439,-5.029485,8.292571,-9.959747,3.035866,-1.182908,-5.525304,-4.137492,-0.500583,6.264795,9.266058,5.276319,7.697159,-7.317751,3.930666,7.070992,-7.728587,-9.897672,-2.060708,-0.927846,-3.441831,1.292637,-3.271602,7.331917,-9.422637,-8.935084,9.176247,2.281222,9.438807,4.151684,6.169752,2.734050,-0.099509,6.481052,-4.154597,8.904517,-7.483191,6.075479,-5.920012,-9.773420,7.752213,-1.346070,-7.582047,9.111687,1.808763,4.033659,-2.627754,4.457449,-2.208685,6.404605,-6.124580,-8.083435,-4.285886,0.845635,-3.234319,2.257576,-7.043234,6.851028,3.366698,-5.579056,4.182443,9.852820,-6.223253,-7.403865,2.171895,-8.104261,-3.198325,-1.473836,-4.120220,-9.826826,4.612534,2.597489,2.917905,8.587751,3.886867,-4.487904,3.653052,-9.716236,-5.281141,-1.181875,1.234176,9.276959,4.077433,-4.795218,9.363780,6.012199,-1.904727,-7.382499,3.247133,-2.407725,5.068363,7.342175,-1.041519,5.431091,-6.042678,-0.793834,-1.738565,-9.476703,0.658189,6.893105,9.882895,-6.028756,0.123043,9.521445,-6.081326,-1.643997,-4.675565,-4.139035,3.480460,0.047747,8.437570,3.405343,6.062421,-8.952892,-8.577348,6.077846,-5.230697,9.399746,-3.175268,-6.530459,-1.734959,4.896685,-9.691404,1.841522,8.107390,5.752222,-5.749549,-8.146707,-5.580527,3.121212,-0.715149,-6.203206,-3.799649,5.841959,8.041598,8.846081,-0.092106,-6.849751,-4.534135,-7.422852,2.237576,-2.587028,0.897764,4.916894,5.633202,-4.752374,-5.756809,-0.018165,5.127743,2.388525,8.233249,-9.013437,3.202476,-5.799391,3.893934,5.539763,3.085584,-2.176444,-4.615919,-5.617549,-6.036150,-7.540835,-3.385348,6.764957,-5.610599,-6.819673,2.489211,3.179882,5.316369,-3.874972,-4.105625,6.280114,-4.793579,-7.499634,-0.564320,-6.328140,-1.752434,5.136024,-4.965125,-2.969988,3.735608,-9.151350,8.943970,-0.663340,-9.783173,4.483775,-9.636588,-3.496071,1.432082,-0.582727,1.701505,-8.806304,1.937534,-7.858856,5.768702,-8.481671,9.815155,2.468253,-4.018644,-6.566939,1.600163,2.051296,-2.007793,-3.696276,7.067091,1.019261,3.120703,-7.589825,7.309461,-6.039396,8.461458,-8.697893,-6.743481,8.385531,4.360330,4.636362,-8.973753,-5.375191,-5.656558,-4.905788,5.637241,-1.905496,7.213319,8.709687,-4.982149,3.223787,-1.060517,-8.716640,-6.592128,1.253631,2.252282,-8.612242,-1.710666,4.356977,9.459872,-2.823942,2.298290,5.579200,5.826015,-5.726784,9.050441,4.964042,2.832693,-5.392239,0.219202,2.746765,-7.241065,-2.943987,-4.061639,8.744706,7.837802,1.387204,-1.946869,-3.255541,6.022212,7.941555,-3.801045,9.852848,7.215558,6.541794,7.804130,4.483485,-4.387967,-8.657750,9.397838,-0.955208,0.668657,-0.006110,8.540560,4.902726,7.235993,9.020499,2.549876,6.467762,-4.330111,-0.707991,9.162610,3.999719,4.893786,-3.131309,8.490740,-0.231241,-7.187651,-2.339386,1.693420,6.023524,3.457182,-3.119222,8.001705,4.098654,2.939932,1.290185,0.973847,-3.161946,9.318347,-7.427604,-5.489395,3.905314,1.461746,-7.697151,-5.066917,3.113486,-4.263303,-8.540142,4.348516,9.397394,8.301865,1.477122,4.330278,-7.396977,-3.260109,2.572459,9.944327,-7.575527,-6.237964,2.924843,-1.311425,-9.103127,-7.640605,-0.575781,-2.272282,-4.838706,-5.137953,4.565975,-7.572842,-5.043020,-6.855797,2.862828,6.159193,-6.860425,-5.149345,-5.840648,-5.928032,8.544888,4.027724,-6.130831,4.045411,-3.949662,-4.280181,0.432926,7.177356,5.357099,5.459262,2.349124,-3.500168,-6.814572,2.736085,8.600137,-5.894756,-1.834152,-9.909309,0.761424,-3.777249,-0.233127,6.679245,0.740288,1.283642,-1.649103,6.854944,8.336659,2.786755,-3.820417,-0.819144,-7.241749,-2.646143,1.201727,2.122852,-1.220385,-6.030131,-5.356193,-6.642134,-1.281453,5.656182,-8.469181,-3.060275,-9.219232,5.101863,-4.309574,9.271009,-7.670418,0.411161,-9.542568,0.525955,-8.877879,6.770662,7.847678,-9.455915,-8.742945,6.193790,-8.235002,-8.019224,3.343799,1.227616,-4.167434,6.764037,-6.788312,-6.297225,2.160902,1.452773,5.011981,1.186423,-1.862164,-6.429894,1.396963,3.581403,6.085519,-7.389139,-1.408004,-1.743274,-6.540880,3.820793,-0.375413,-6.534274,7.957830,-4.334095,-2.668200,-9.275431,6.074693,9.886763,-7.961164,4.167878,7.320154,-9.541706,2.649338,-0.537766,-6.783761,7.750591,0.363335,3.278083,2.017168,7.994534,4.300116,5.452576,-1.241836,7.252506,1.715831,-9.142983,-5.244244,-4.658862,6.477869,-0.519092,2.365477,-1.065933,8.789786,8.867262,0.883749,-7.675590,-9.403916,-7.305404,1.777132,2.711137,-8.004946,8.869300,2.089932,-3.822407,-8.372353,-1.660317,-1.682449,-2.780671,-2.975178,6.737232,-2.948557,-9.221835,6.072410,1.869025,-7.835703,8.681222,-4.126252,-6.537366,7.599666,-3.314522,3.543206,3.239680,8.028841,8.363330,0.894751,-6.248353,-0.429020,3.883241,1.251030,-9.882740,1.577335,-5.775308,-3.116400,2.578234,7.720894,5.953446,5.116192,3.748288,-5.692902,-1.354819,7.190466,9.197208,-6.749075,7.337793,8.348348,1.475224,4.385406,-4.070658,-4.761771,9.136078,8.243058,-2.449521,0.979876,-3.728905,-7.463982,-0.332342,9.460603,-9.624712,-8.720402,9.294832,4.667193,-3.420737,-3.897464,7.733743,8.394107,-4.371776,3.073887,7.813950,-7.088587,9.394507,-2.759667,-8.229093,8.588961,4.459532,-7.514340,-9.797330,-1.675801,6.527113,4.068877,5.759478,0.035667,-6.748384,9.612303,-8.817411,0.770729,-2.077225,5.997388,3.272082,0.250404,-2.955066,6.387417,-7.243553,6.178709,-9.368890,-1.818857,3.793028,7.778093,-8.911549,9.792520,5.163875,-6.690996,0.256848,-5.458371,6.602460,4.549397,-6.076744,-6.117140,-0.857779,-8.264432,-8.550160,6.328632,-6.397795,6.984885,4.723629,5.449431,2.920845,-9.350812,3.151509,9.534579,0.487988,-9.288653,4.232166,-9.747351,3.928893,-9.939112,0.053179,0.773329,7.532652,-1.679551,-6.285583,0.354238,-1.630712,-8.905356,-0.789664,-6.889276,-5.776712,1.534108,4.136521,-6.694082,-9.545665,-6.685222,-4.771388,-3.548750,7.397033,-1.158429,-9.772139,6.390867,6.659886,6.069933,-7.963692,6.358461,-8.800735,-7.393919,-3.457618,-8.876785,-3.940272,-4.562169,2.855890,-8.785742,-7.641750,-2.420919,-9.612247,2.917570,1.393411,6.958183,-4.366711,-7.019835,-2.580831,-3.551828,0.051278,6.346797,1.099028,-9.165696,-5.187409,3.566028,9.085400,-4.557089,-3.484232,-3.202774,-8.147568,2.972756,-5.951958,9.087403,-1.632142,-4.475330,7.647403,8.362434,3.257590,4.305370,-7.782790,-2.966256,-9.156761,0.136349,-7.868618,-3.471475,-0.959788,0.239670,5.844833,5.447841,-6.970760,-7.406773,8.779271,1.819134,4.521471,0.338576,4.399276,-1.936967,-6.371427,-4.311638,6.203876,2.232723,-8.252017,-4.796869,9.135490,-1.452943,8.736009,0.583480,-0.521389,-4.757691,2.044957,-4.637434,3.844227,-4.250058,-6.255000,0.288340,9.992605,4.136976,0.398691,-0.651515,4.870980,0.014288,0.533758,-9.387057,1.131870,7.620214,-0.122163,5.188851,-9.760531,6.774270,0.749450,-1.579471,5.302123,-0.828590,-2.618055,5.187681,3.815035,-2.977224,-6.940113,3.147711,8.331488,-7.707547,-5.607440,-9.626972,-4.239614,5.706117,-2.098071,-5.494134,-8.358624,-3.759797,9.041539,-0.741007,-7.544723,3.800501,9.883406,-7.265131,-6.482773,-5.531649,1.491083,4.975164,-5.097098,6.677149,1.104160,-0.473750,-7.553872,-2.122949,0.896001,5.434699,1.311951,-5.315386,2.123829,-0.022614,1.153415,-6.112259,7.920716,-7.214969,-5.176068,-6.780252,-3.698772,5.938466,8.361149,-0.987056,3.348884,5.659670,9.052750,7.821940,-3.221282,-9.784050,5.078230,-4.369848,-0.384130,-4.107409,-8.804368,-7.520374,-9.319289,-6.904318,9.346313,-4.579092,-5.306724,-9.210990,3.922408,-3.439221,6.100303,0.530390,6.684570,4.419764,3.595560,-8.275545,-3.871927,-8.270612,8.773140,-3.893464,2.207145,2.744414,-9.144475,6.933986,6.459046,-4.106244,-1.712821,7.811461,4.804367,-9.505568,0.107675,3.290015,8.075530,-4.025255,-8.395947,-4.786872,0.572963,1.939102,6.090430,7.714642,-4.712124,7.434988,2.680354,-5.508447,2.841424,0.069708,3.047802,-8.067562,-6.132518,9.328285,5.865911,9.915968,9.297165,3.931601,4.171088,-2.715796,-1.873253,8.731294,-1.546404,-9.715014,-2.654834,-8.641595,-4.147827,-8.665567,9.674023,4.183035,5.683472,1.556134,6.143992,7.699816,3.078449,-8.392298,7.817319,-9.930199,1.498535,3.903840,-4.866422,-2.031643,-0.141244,-3.613201,-9.063005,7.525465,-5.407540,1.650285,8.397971,-1.529808,-6.247298,-4.912520,-2.852785,3.132591,7.878862,8.069021,7.373472,2.958022,5.085160,4.126451,3.193746,8.299160,-0.536872,-9.079235,-6.170429,-2.722720,5.570107,-3.959070,3.677365,-3.147424,9.210298,3.174446,7.154578,-8.278704,-9.563503,-5.230861,-9.502730,5.427646,-4.375406,-2.054341,-6.240819,4.900037,3.035373,-8.802760,-6.613168,-4.641092,-8.051617,-4.498541,-1.393414,-4.200534,-2.944718,-2.642693,9.921221,4.363720,1.529836,-8.741851,3.849176,-8.964118,6.559372,3.574454,5.952367,7.960945,2.322730,8.069785,3.476869,-9.471245,-0.330519,-8.930334,-3.159955,-7.866701,-8.172962,-7.413260,-2.379050,-3.067665,8.339401,7.084385,7.312797,-9.076065,-6.940132,-0.324826,-0.189541,-6.186452,-4.631723,-5.686717,-1.471229,-6.972308,3.586447,-6.712711,3.172417,5.372655,3.426815,1.490735,-9.057951,8.229990,1.840497,-8.027520,5.517142,0.791997,5.000157,-6.396269,-1.516754,-0.795466,2.160521,4.310918,-9.076946,6.370234,-2.436235,-1.748459,6.473090,0.882637,-4.651224,-9.207428,-9.554817,8.978901,5.053465,-5.716046,-5.764749,0.894097,7.551872,8.415560,9.046513,4.662339,4.619282,-5.798755,-5.473994,-2.459689,6.213846,-2.552804,-6.134349,-0.890572,7.229609,8.816869,2.806287,-2.943398,1.353488,-9.475554,-7.819802,-7.883031,-0.179114,-7.778642,4.524227,2.716183,4.258886,-1.753645,6.343234,8.246712,6.484056,-9.511193,3.272958,-9.121539,-6.250903,-1.066628,-6.388217,7.735696,0.407983,4.299743,-0.500210,-8.011420,-3.765285,6.072577,3.755605,9.762039,3.678716,7.534618,-9.829935,2.492572,3.176434,4.076742,3.890234,-0.122226,7.681188,1.947076,-1.602298,6.136122,-4.321748,-3.780953,-1.602106,9.435237,5.137841,-2.714209,-4.688608,5.129871,0.739666,2.780787,3.559370,-1.324355,-3.897261,-0.721250,9.941943,3.714394,-6.116831,3.516773,2.381352,-8.584248,2.449853,-3.120532,-2.768402,9.131498,5.806811,-2.154728,-5.438064,9.646865,-5.441711,5.635675,9.944891,-3.665547,-4.074698,-0.391869,-7.040115,0.335733,-2.302864,6.866728,0.845081,-1.284473,2.437987,0.342838,8.344104,-3.595100,-8.051644,7.961732,5.738966,9.517217,4.402036,7.066057,-6.005692,-0.088499,4.259835,0.351867,-2.048009,7.103896,7.872402,-1.037584,4.316499,-1.653041,-4.855749,6.270776,3.867657,-1.070043,1.914882,-8.211136,-9.013329,-5.516374,-6.634997,-0.184537,0.711781,9.162851,-4.466230,-2.574694,-5.472485,4.076389,-7.386365,-5.137210,8.367627,1.404076,2.153162,-3.683821,-9.672868,6.938728,-1.328559,6.444793,2.675377,-2.951184,-6.218836,1.999501,-1.663815,-7.931262,2.948849,-0.978155,4.215296,0.367363,-8.605374,-1.755704,-9.724671,5.740763,9.684725,8.308311,8.275307,-9.166033,-7.389709,3.970947,-0.368628,3.918546,-6.688330,-3.737177,6.465673,-8.274628,2.133761,-2.772580,-5.663864,-7.620545,0.147800,-2.603449,-1.559762,-1.187457,-1.517550,5.270122,0.704731,9.736302,-8.288907,6.398664,7.711007,4.368866,-3.933772], dtype = "float32")#candidate|8688|(2912,)|const|float32
call_8687 = func_1021_call(relay.reshape(const_8688.astype('float32'), [13, 14, 16]))
call_8689 = func_1021_call(relay.reshape(const_8688.astype('float32'), [13, 14, 16]))
output = relay.Tuple([call_8685,call_8687,const_8688,])
output2 = relay.Tuple([call_8686,call_8689,const_8688,])
func_8709 = relay.Function([], output)
mod['func_8709'] = func_8709
mod = relay.transform.InferType()(mod)
output = func_8709()
func_8710 = relay.Function([], output)
mutated_mod['func_8710'] = func_8710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_8767 = relay.TupleGetItem(func_5938_call(), 0)
call_8768 = relay.TupleGetItem(func_5939_call(), 0)
var_8773 = relay.var("var_8773", dtype = "float64", shape = (16, 3, 5))#candidate|8773|(16, 3, 5)|var|float64
bop_8774 = relay.bitwise_or(call_8767.astype('uint32'), var_8773.astype('uint32')) # shape=(16, 3, 5)
bop_8777 = relay.bitwise_or(call_8768.astype('uint32'), var_8773.astype('uint32')) # shape=(16, 3, 5)
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
var_8791 = relay.var("var_8791", dtype = "bool", shape = (24,))#candidate|8791|(24,)|var|bool
const_8792 = relay.const(-9.398593, dtype = "float64")#candidate|8792|()|const|float64
const_8793 = relay.const([8.026681,-2.546176,-8.783820,-2.497103,-8.741110,6.992905,4.482395,-2.181747,-6.633304,-6.855973,-2.903885,-4.866068,3.736428,-9.853356,-0.131345,-5.327856,0.762290,-8.314020,-4.092609,-4.080796,8.791130,4.993773,1.695569,-5.318205,-8.032188,2.825709,-2.778998,-0.764620,-6.809103,-0.914299,8.748590,-7.973845,-0.498929,-1.972197,3.847978,9.919410,-1.863910,-1.171014,-2.493835,0.968214,5.521027,0.511874,4.065268,2.035455,6.798657,-9.210857,6.059572,7.983029,8.353487,-9.674316,-5.971462,7.360711,-5.498119,-2.520192,9.517173,-0.533192,-5.310664,-1.506548,6.350467,5.971666,-3.981579,4.858523,-5.243188,9.953926,5.622188,-1.462766,1.384915,-1.000766,7.679963,-4.140565,0.568301,8.800027,7.095523,1.551496,-4.713430,4.899238,-1.767836,-5.341785,5.069326,-0.700031,3.097205,-3.941970,5.530552,-9.859704,7.703115,1.754518,8.101470,-7.928393,-5.494986,-5.432207,-4.354500,1.819072,-9.310867,1.922172,5.705488,-4.602233,-5.118316,4.777331,-1.552005,7.628329,9.323205,-3.089025,1.297863,2.869565,-7.306962,-1.573903,7.938902,7.882418,3.263059,6.460986,-7.481928,1.980134,-6.915222,-4.398110,5.022284,-7.285502,-8.794030,5.515270,4.901413,-6.363045,-9.551191,-0.075875,-0.327673,-3.139631,-8.319608,5.063445,6.448674,7.642122,1.608913,-1.163406,4.652523,1.836439,3.499624,-9.888821,1.519417,-2.179464,9.696040,7.323653,-0.017742,-5.804987,9.567044,-2.168003,-4.661267,-5.406490,3.233070,-1.524130,5.606647,5.320846,2.749619,4.501673,-8.853269,-7.890090,-7.919809,2.672141,1.882477,1.994070,5.937857,-4.989208,-8.954677,-3.258641,6.029855,-1.555033,-9.215647,-1.058614,6.159796,4.815682,4.976114,-3.823848,1.850923,4.835239,3.263662,-6.318252,-0.984645,-4.824217,3.947553,-6.425598,-7.296836,-8.678985,-8.866564,-0.454561,-5.666555,1.113759,2.499615,-3.900328,-2.624203,-8.731336,-7.977023,-0.375804,5.258536,1.603507,0.874026,7.162352,7.954437,7.914496,-7.096905,7.961061,4.062941,3.142014,-5.173170,4.088464,3.587078,-3.432634,-8.297896,-7.781673,-6.218282,7.348733,5.737615,1.057397,-6.082875,6.480168,-7.911760,8.061226,1.954221,-4.645501,-9.868430,-1.139451,9.293289,-5.277516,-7.934818,7.613237,-0.264344,-8.852670,-3.970150,-3.266736], dtype = "float64")#candidate|8793|(224,)|const|float64
call_8790 = relay.TupleGetItem(func_236_call(relay.reshape(var_8791.astype('bool'), [2, 2, 6]), relay.reshape(var_8791.astype('bool'), [2, 2, 6]), relay.reshape(const_8792.astype('float64'), []), relay.reshape(const_8793.astype('float64'), [224,]), ), 4)
call_8794 = relay.TupleGetItem(func_241_call(relay.reshape(var_8791.astype('bool'), [2, 2, 6]), relay.reshape(var_8791.astype('bool'), [2, 2, 6]), relay.reshape(const_8792.astype('float64'), []), relay.reshape(const_8793.astype('float64'), [224,]), ), 4)
func_7104_call = mod.get_global_var('func_7104')
func_7107_call = mutated_mod.get_global_var('func_7107')
var_8813 = relay.var("var_8813", dtype = "float64", shape = (98, 2))#candidate|8813|(98, 2)|var|float64
call_8812 = relay.TupleGetItem(func_7104_call(relay.reshape(var_8813.astype('float64'), [196,])), 2)
call_8814 = relay.TupleGetItem(func_7107_call(relay.reshape(var_8813.astype('float64'), [196,])), 2)
func_6734_call = mod.get_global_var('func_6734')
func_6735_call = mutated_mod.get_global_var('func_6735')
call_8817 = relay.TupleGetItem(func_6734_call(), 1)
call_8818 = relay.TupleGetItem(func_6735_call(), 1)
output = relay.Tuple([bop_8774,call_8790,var_8791,const_8792,const_8793,call_8812,var_8813,call_8817,])
output2 = relay.Tuple([bop_8777,call_8794,var_8791,const_8792,const_8793,call_8814,var_8813,call_8818,])
func_8833 = relay.Function([var_8773,var_8791,var_8813,], output)
mod['func_8833'] = func_8833
mod = relay.transform.InferType()(mod)
var_8834 = relay.var("var_8834", dtype = "float64", shape = (16, 3, 5))#candidate|8834|(16, 3, 5)|var|float64
var_8835 = relay.var("var_8835", dtype = "bool", shape = (24,))#candidate|8835|(24,)|var|bool
var_8836 = relay.var("var_8836", dtype = "float64", shape = (98, 2))#candidate|8836|(98, 2)|var|float64
output = func_8833(var_8834,var_8835,var_8836,)
func_8837 = relay.Function([var_8834,var_8835,var_8836,], output)
mutated_mod['func_8837'] = func_8837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6617_call = mod.get_global_var('func_6617')
func_6618_call = mutated_mod.get_global_var('func_6618')
call_8886 = relay.TupleGetItem(func_6617_call(), 0)
call_8887 = relay.TupleGetItem(func_6618_call(), 0)
func_8147_call = mod.get_global_var('func_8147')
func_8150_call = mutated_mod.get_global_var('func_8150')
var_8891 = relay.var("var_8891", dtype = "int8", shape = (11, 1))#candidate|8891|(11, 1)|var|int8
call_8890 = relay.TupleGetItem(func_8147_call(relay.reshape(var_8891.astype('int8'), [11,])), 1)
call_8892 = relay.TupleGetItem(func_8150_call(relay.reshape(var_8891.astype('int8'), [11,])), 1)
output = relay.Tuple([call_8886,call_8890,var_8891,])
output2 = relay.Tuple([call_8887,call_8892,var_8891,])
func_8940 = relay.Function([var_8891,], output)
mod['func_8940'] = func_8940
mod = relay.transform.InferType()(mod)
var_8941 = relay.var("var_8941", dtype = "int8", shape = (11, 1))#candidate|8941|(11, 1)|var|int8
output = func_8940(var_8941)
func_8942 = relay.Function([var_8941], output)
mutated_mod['func_8942'] = func_8942
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8960 = relay.var("var_8960", dtype = "float32", shape = (12, 12, 6))#candidate|8960|(12, 12, 6)|var|float32
uop_8961 = relay.sqrt(var_8960.astype('float32')) # shape=(12, 12, 6)
func_2634_call = mod.get_global_var('func_2634')
func_2638_call = mutated_mod.get_global_var('func_2638')
var_8970 = relay.var("var_8970", dtype = "float64", shape = (324, 3))#candidate|8970|(324, 3)|var|float64
call_8969 = func_2634_call(relay.reshape(var_8970.astype('float64'), [9, 12, 9]), relay.reshape(var_8970.astype('float64'), [9, 12, 9]), )
call_8971 = func_2634_call(relay.reshape(var_8970.astype('float64'), [9, 12, 9]), relay.reshape(var_8970.astype('float64'), [9, 12, 9]), )
bop_8985 = relay.greater_equal(var_8970.astype('bool'), relay.reshape(call_8969.astype('bool'), relay.shape_of(var_8970))) # shape=(324, 3)
bop_8988 = relay.greater_equal(var_8970.astype('bool'), relay.reshape(call_8971.astype('bool'), relay.shape_of(var_8970))) # shape=(324, 3)
func_6617_call = mod.get_global_var('func_6617')
func_6618_call = mutated_mod.get_global_var('func_6618')
call_8989 = relay.TupleGetItem(func_6617_call(), 0)
call_8990 = relay.TupleGetItem(func_6618_call(), 0)
func_7083_call = mod.get_global_var('func_7083')
func_7091_call = mutated_mod.get_global_var('func_7091')
var_8994 = relay.var("var_8994", dtype = "float64", shape = ())#candidate|8994|()|var|float64
const_8995 = relay.const([-7.095131,7.198948,-8.064812,2.246478,-1.753840,-3.919477,3.414051,8.675431,4.716982,-3.233715,8.614705,3.982283,-8.882963,-2.707434,9.111963,8.641408,8.826217,-2.512247,0.899525,4.033483,9.702235,-9.048552,9.511634,8.696768,7.945558,-4.732977,-0.893696,2.397363,2.025927,-5.913730,9.388286,-9.223309,-3.933551,4.155923,7.135787,2.649820,-7.049889,0.478594,-0.342251,-1.148055,6.803744,-4.139779,-8.518053,-3.759410,4.302678,3.642928,-1.801330,4.428725,-1.549787,-9.701271,2.351663,-7.250240,1.174182,8.936863,-9.079123,3.150648,-7.310474,3.297690,-3.460895,-7.960059,-0.005067,-7.395027,-6.059602,-9.799315,-4.864517,-6.356512,-5.534460,-4.525035,-8.661909,8.422410,2.666324,-9.687930,-1.109165,5.854125,7.081305,1.370306,2.463739,-9.470783,5.587744,-4.977261,0.521717,-4.648702,4.077586,6.693543,-9.923692,-7.907294,-1.988926,-1.675274,7.632995,9.673234,4.223825,-9.908439,-3.068863,-4.816966,2.055158,-5.137410,4.700413,3.591793,6.443455,2.597834,7.121212,3.882761,-6.865106,5.480613,1.748211,4.400640,6.152445,8.789929,-3.920982,6.504347,-7.133103,7.594902,-9.816910,-1.146343,9.637058,-8.977993,-8.964077,-9.743699,1.498250,-4.809923,-5.448172,2.678894,9.272932,-7.977777,0.039292,-1.772127,1.976836,8.876568,-5.805539,4.547493,8.140499,-9.149260,8.996079,8.237393,-6.444975,-3.869752,9.885950,-1.394269,-5.050473,-4.716447,3.522278,-7.570927,-7.367908,-0.151792,7.590352,2.498040,1.033546,-2.514205,-6.572110,9.864508,4.772832,-2.382991,-1.433295,-9.604701,1.784080,-6.301539,2.451434,8.707311,-8.666382,-2.302159,6.866932,7.695117,1.367347,9.446001,0.815330,1.549084,-9.784800,1.567892,-6.280953,-9.548269,-8.229180,-3.293772,8.433942,-5.506372,-8.221856,0.077649,-4.195207,-6.622688,0.484926,6.016613,6.044138,7.750305,-0.139228,-9.055649,-2.478186,-4.762467,2.940007,-6.682122,-8.150260,-9.684799,3.199708,-5.986703,-5.242846,-8.892214,6.757405,-9.661271,-5.142626,-0.661641,-4.709354,8.626082,1.429302,-0.279543,7.917360,6.347614,0.696938,-5.538414,-6.077246,-3.897899,9.295064,-6.884753,-4.549062,0.293412,-7.444808,-4.254634,-4.307922,-2.369398,6.420570,-3.303140,2.515201,5.703391,-7.667772,-1.290272,-1.718170,4.374220], dtype = "float64")#candidate|8995|(224,)|const|float64
const_8996 = relay.const([2.591081,-1.943979,-8.430208,-3.306240,-8.377755,-8.853795,4.733144,-2.236970,6.208699,1.700441,4.117886,-2.649519,-2.970109,-6.437952,4.574112,-6.034911,-6.473291,-1.578096,8.847553,-3.430859,8.938146,1.260165,0.877039,-4.642125,7.440593,-2.241006,6.228672,2.539338,1.008135,6.158666,-8.995796,7.567593,-3.627865,8.223608,-1.975650,3.361714,5.068298,2.256108,4.821423,7.647986,5.319178,7.217938,-9.848302,5.473051,-7.995873,-1.281887,-4.552910,-8.926388,8.173211,-2.014562,2.995415,-9.588020,-6.156086,8.702658,0.317003,9.876190,9.670792,7.311816,1.946801,9.456145,3.934966,-8.375831,3.608642,-4.258501,4.008279,-4.730754,-1.946352,1.665718,-6.752833,-3.811445,2.447781,3.163415,7.057150,-5.665378,5.309817,-4.756925,1.974719,-4.576183,7.660189,2.962313,3.385877,9.398278,-6.295328,-3.141324,-0.006344,-9.246079,-7.016909,-9.780410,-0.576263,-0.522149,-7.766460,-0.362082,-2.926539,-4.544830,6.719988,-9.248932,8.357332,9.328250,-7.327148,2.316648,-4.806209,-0.295077,0.522568,-6.703643,3.561147,8.890070,-9.605637,7.884134,-3.058115,-3.875496,4.982917,-8.563252,6.892488,0.396073,7.077210,-1.801262,-3.271184,1.147069,5.538354,-0.882852,-9.330900,-3.571269,6.129266,0.871432,9.580997,-3.536764,-7.425057,4.827658,-7.052384,5.795619,5.528129,2.130575,-0.434681,7.654284,6.666088,-2.022654,7.666163,-2.024381,-6.513847,-5.101560,6.102065,1.401234,6.980748,2.962981,5.787660,-9.260359,-2.629960,-5.585740,-2.919093,-4.871482,2.422470,2.346959,4.146295,-0.124139,-2.508211,0.427952,7.371841,5.445203,-3.028592,-9.242611,-6.654370,-0.069818,-9.117793,0.318704,8.131237,-8.274390,4.448196,0.355273,6.202260,-9.493293,3.071785,-9.399228,-7.625702,5.609973,-9.589616,-1.381473,-8.673284,-0.663297,-7.129577,5.898782,9.482510,-7.617309,-4.488442,-4.085101,6.691190,3.227234,-1.886801,8.278433,6.878963,4.273631,-8.558936,-9.557996,3.678534,-4.481857,8.213749,5.984256], dtype = "float64")#candidate|8996|(196,)|const|float64
const_8997 = relay.const([7.738645,-9.156205,-8.062519,7.090727,8.580546,-9.007893,-3.747309,-5.679834,9.161695,7.536079,0.989618,-8.745933,-4.618044,-2.219747,-5.129937,8.025026,3.753892,-2.908431,2.465503,-9.949415,4.158929,3.387357,0.771139,-4.076998,0.452344,8.383115,8.434962,0.415849,4.842781,-8.473916,9.593570,6.304103,1.129373,-8.839905,-9.337494,5.187002,6.762126,6.126619,-7.446972,-1.918158,4.381602,8.793169,3.334100,-9.318043,-0.835291,-8.172693,-0.469336,-3.120323,-9.049915,-2.871366,8.584019,-0.370940,0.078046,5.105188,5.291971,6.819890,2.982174,-5.759234,0.930052,5.814728,1.452126,3.459460,-8.082650,3.211314,-9.875714,4.948116,6.841656,8.432168,4.373513,-2.560654,-9.184453,1.889034,-2.860657,-3.131003,1.836861,1.600624,-2.120668,-5.245738,-8.526831,2.894126,-3.939776,8.749463,-3.104278,-9.950276,5.407822,-3.703775,-4.197554,-3.306013,1.420275,-7.857575,-7.323670,7.456683,-8.773465,6.956231,6.375878,3.085157,0.662441,2.680238,5.034066,3.926382,0.965482,-4.381681,-4.062608,-1.059943,-5.775578,-5.711999,6.891336,0.209402,6.225137,-1.205729,6.747856,-6.786663,-7.988704,-4.250679,0.455743,8.756136,4.763418,-7.947706,-6.522190,-3.082418,5.210947,2.866052,-4.647690,-7.854087,-9.210715,5.241426,4.444545,-5.144083,8.425112,4.962271,7.627248,6.316530,4.019637,-3.709766,1.661416,-3.114108,9.702649,8.724896,-2.010600,3.862241,-6.114579,-2.728933,8.049036,-8.777344,9.606420,0.414566,-7.807959,8.205426,6.064852,3.027778,-7.580544,5.633852,6.353277,-6.234065,3.273677,-9.359877,-5.699218,2.898104,-8.777316,-0.946149,7.780051,-6.917531,0.482161,3.774281,7.258021,5.936514,-3.028672,4.365968,9.433410,4.913099,5.271016,-4.308683,-7.791984,2.897944,0.801751,-8.328321,-4.578078,-4.095241,2.697261,-7.407528,-3.292366,-3.907915,-4.706607,5.257197,1.585315,-1.977626,-4.638671,-8.045787,-6.208193,8.183934,-6.031703,8.376005,-9.521606,-3.666949,3.804339,-3.209219,-2.645325,5.990620,-0.234008,-4.079304,5.480225,0.060460,8.319551,8.060717,4.825797,-9.932946,-6.871345,-6.115789,2.751173,-1.461540,0.357136,2.901095,-8.664648,5.869254,7.397092,-8.751104,-7.565650,-7.613717,-5.978387,-8.976677,1.702079,4.292356,-0.277253,-6.590921,-8.432638,-0.504679,-7.921833,0.886731,-7.199406,0.371485,-0.558164,4.001616,7.552403,-0.364431,7.115744,-1.998564,6.657199,-9.453604,5.927501,-0.340325,-4.165490,-5.308759,-4.755647,6.619632,-5.642885,-3.458917,-5.950141,1.958855,2.350340,7.586527,-4.467650,3.617258,3.675560,8.214770,8.694527,-2.392987,6.563858,-9.302655,-8.129060,-9.790509,-1.388262,4.897380,-3.489355,0.650093,4.956147,-8.577632,-2.491294,9.647474,-1.154700,-7.813940,-3.738118,5.577241,7.393625,2.253125,2.053527,-9.638293,-4.839127,-3.526791,3.067812,4.697407,4.761921,-5.824250,2.121721,9.483944,4.309587,1.384168,1.348208,2.050588,-9.341445,-5.158619,-5.271710,-3.533750,8.653741,-8.563839,-1.323605,1.141124,1.936327,2.211698,6.005350,-9.972946,-4.961247,2.451098,-0.115195,1.108889,8.858060,-9.874521,-3.470612,9.180573,-6.135275,-3.316056,1.432610,-6.152770,-1.465105,7.061514,-6.299149,-2.937909,-2.056823,-6.079796,-8.949419,7.139887,-6.851636,4.630415,-9.885930,-3.441737,-2.098342,3.778560,-2.761549,8.085746,4.228926,-2.745047,-4.780516,3.447162,-1.516858,-1.614888,3.903391,0.160501,8.267307,-1.972859,3.973313,-6.054311,-0.355663,3.908020,7.953491,7.974911,0.719315,1.995402,-9.967775,-6.394260,-9.375207,3.973637,5.682223,9.755356,4.885059,-7.948504,-1.283312,2.666262,3.891843,9.786017,3.199548,7.988816,8.943759,-5.397406,7.208902,-4.976021,9.519566,3.971727,-3.153384,-1.313100,3.121001,-5.591141,3.803246,-3.463257,-7.990832,-5.730448,-8.522612,9.259283,-8.247213,9.832229,-1.238952,9.594168,5.208493,-1.875783,-6.679800,6.921644,-0.030072,3.720859,9.011577,-8.142353,-7.904764,1.249109,-8.103130,-3.847760,7.845296,0.284378,1.849986,4.249877,1.925727,7.733979,-9.876425,5.413439,-8.095759,9.556081,-9.596574,-3.386579,-3.983414,5.891841,-0.498638,8.582426,4.236727,3.662649,2.004511,0.818680,9.828531,-9.667956,-3.600032,-2.279340,3.722294,-9.823100,8.593172,-2.859768,3.289211,-2.697781,1.751345,9.527670,-4.352729,1.420692,9.924576,9.233186,3.814726,9.397416,1.710205,2.438224,9.446589,2.214396,-0.308813,-0.412938,0.895720,6.294401,-6.967465,-0.476374,1.286408,-7.551540,-7.824747,6.520014,-9.414116,7.623873,-6.531612,-8.121132,8.712941,-3.012916,4.813776,0.116059,-3.716988,5.066823,1.929399,9.783979,7.104363,4.730520,4.998221,-1.635332,9.692401,-3.231733,-9.079765,5.014167,-3.971659,9.173970,-9.611215,-4.602557,8.648974,4.174972,4.506736,5.946589,8.588746,5.831130,-0.263946,-2.779223,2.170672,0.773113,5.155371,5.603425,1.878054,4.928809,0.247675,-4.682997,3.598930,7.398570,-1.206341,4.847081,-9.977548,1.768334,-1.423589,-3.336339,-8.016320,9.974305,8.878919,5.933287,8.759385,-5.701457,-3.272663,4.016207,7.178545,6.568552,-4.927778,1.394905,5.263863,0.651530,-0.562331,1.623808,8.717659,-2.796382,-1.949957,9.088739,-8.492972,-3.045256,-2.581529,-8.864730,2.937079,-3.702109,-1.924203,-4.706275], dtype = "float64")#candidate|8997|(520,)|const|float64
var_8998 = relay.var("var_8998", dtype = "float64", shape = (1512,))#candidate|8998|(1512,)|var|float64
const_8999 = relay.const([-6.435726,0.107784,9.046015,2.279785,5.086925,-1.059990,6.449882,3.374048,-1.857097,-8.386250,8.926937,-5.823646,-9.103825,-8.177414,7.144762,8.758055,7.201546,-2.372151,7.131398,-1.878561,0.591706,8.980128,6.170447,1.410632,-2.664564,-3.178253,-1.837889,5.082212,3.605966,5.511860,0.504697,4.005076,6.094483,9.164681,8.267263,7.440468,-4.015661,2.995926,3.670583,-7.549770,5.044149,1.806402,0.681471,-5.718753,-3.341687,3.327047,-9.432458,-6.790530,-6.266478,5.671015,0.306102,0.715526,8.929993,5.245802,7.463575,-4.520083,7.379767,2.841392,-4.676401,2.002287,2.450351,-6.308077,0.313720,5.302856,-0.769078,2.292437,-6.071865,3.829769,-2.285099,-7.271160,-6.344605,-8.081280,8.206429,6.568795,1.874603,-5.590253,7.936825,4.957535,-5.440595,8.831156,3.232742,-5.528027,1.413795,5.569538,3.936354,8.162835,-6.082055,3.624658,1.910782,7.579229,8.950617,9.668803,-4.387166,-7.715100,-1.169252,4.714822,-6.034643,1.183103,1.408334,5.939269,-3.694856,6.040921,-3.754746,-8.431682,3.500891,6.449352,-8.165194,3.346475,9.094386,0.732969,3.420604,1.808094,-6.906273,6.032660,4.236868,-4.005594,-7.402315,-9.155064,-2.570681,-9.308457,-5.338986,1.509212,2.363708,0.625862,-1.989474,-9.152202,6.104964,3.911143,-2.395028,2.213871,-9.868319,7.297242,1.712987,8.163715,4.947781], dtype = "float32")#candidate|8999|(135,)|const|float32
call_8993 = relay.TupleGetItem(func_7083_call(relay.reshape(var_8994.astype('float64'), []), relay.reshape(const_8995.astype('float64'), [224,]), relay.reshape(const_8996.astype('float64'), [196,]), relay.reshape(const_8997.astype('float64'), [520,]), relay.reshape(var_8998.astype('float64'), [1512,]), relay.reshape(const_8999.astype('float32'), [135,]), ), 6)
call_9000 = relay.TupleGetItem(func_7091_call(relay.reshape(var_8994.astype('float64'), []), relay.reshape(const_8995.astype('float64'), [224,]), relay.reshape(const_8996.astype('float64'), [196,]), relay.reshape(const_8997.astype('float64'), [520,]), relay.reshape(var_8998.astype('float64'), [1512,]), relay.reshape(const_8999.astype('float32'), [135,]), ), 6)
output = relay.Tuple([uop_8961,bop_8985,call_8989,call_8993,var_8994,const_8995,const_8996,const_8997,var_8998,const_8999,])
output2 = relay.Tuple([uop_8961,bop_8988,call_8990,call_9000,var_8994,const_8995,const_8996,const_8997,var_8998,const_8999,])
func_9001 = relay.Function([var_8960,var_8970,var_8994,var_8998,], output)
mod['func_9001'] = func_9001
mod = relay.transform.InferType()(mod)
mutated_mod['func_9001'] = func_9001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9001_call = mutated_mod.get_global_var('func_9001')
var_9003 = relay.var("var_9003", dtype = "float32", shape = (12, 12, 6))#candidate|9003|(12, 12, 6)|var|float32
var_9004 = relay.var("var_9004", dtype = "float64", shape = (324, 3))#candidate|9004|(324, 3)|var|float64
var_9005 = relay.var("var_9005", dtype = "float64", shape = ())#candidate|9005|()|var|float64
var_9006 = relay.var("var_9006", dtype = "float64", shape = (1512,))#candidate|9006|(1512,)|var|float64
call_9002 = func_9001_call(var_9003,var_9004,var_9005,var_9006,)
output = call_9002
func_9007 = relay.Function([var_9003,var_9004,var_9005,var_9006,], output)
mutated_mod['func_9007'] = func_9007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7979_call = mod.get_global_var('func_7979')
func_7980_call = mutated_mod.get_global_var('func_7980')
call_9011 = relay.TupleGetItem(func_7979_call(), 1)
call_9012 = relay.TupleGetItem(func_7980_call(), 1)
output = relay.Tuple([call_9011,])
output2 = relay.Tuple([call_9012,])
func_9013 = relay.Function([], output)
mod['func_9013'] = func_9013
mod = relay.transform.InferType()(mod)
mutated_mod['func_9013'] = func_9013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9013_call = mutated_mod.get_global_var('func_9013')
call_9014 = func_9013_call()
output = call_9014
func_9015 = relay.Function([], output)
mutated_mod['func_9015'] = func_9015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7360_call = mod.get_global_var('func_7360')
func_7362_call = mutated_mod.get_global_var('func_7362')
call_9018 = relay.TupleGetItem(func_7360_call(), 1)
call_9019 = relay.TupleGetItem(func_7362_call(), 1)
output = relay.Tuple([call_9018,])
output2 = relay.Tuple([call_9019,])
func_9033 = relay.Function([], output)
mod['func_9033'] = func_9033
mod = relay.transform.InferType()(mod)
output = func_9033()
func_9034 = relay.Function([], output)
mutated_mod['func_9034'] = func_9034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7159_call = mod.get_global_var('func_7159')
func_7160_call = mutated_mod.get_global_var('func_7160')
call_9075 = func_7159_call()
call_9076 = func_7159_call()
output = call_9075
output2 = call_9076
func_9109 = relay.Function([], output)
mod['func_9109'] = func_9109
mod = relay.transform.InferType()(mod)
output = func_9109()
func_9110 = relay.Function([], output)
mutated_mod['func_9110'] = func_9110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7360_call = mod.get_global_var('func_7360')
func_7362_call = mutated_mod.get_global_var('func_7362')
call_9116 = relay.TupleGetItem(func_7360_call(), 3)
call_9117 = relay.TupleGetItem(func_7362_call(), 3)
func_7979_call = mod.get_global_var('func_7979')
func_7980_call = mutated_mod.get_global_var('func_7980')
call_9119 = relay.TupleGetItem(func_7979_call(), 1)
call_9120 = relay.TupleGetItem(func_7980_call(), 1)
uop_9140 = relay.acosh(call_9119.astype('float64')) # shape=(12, 32)
uop_9142 = relay.acosh(call_9120.astype('float64')) # shape=(12, 32)
var_9149 = relay.var("var_9149", dtype = "float64", shape = (12, 32))#candidate|9149|(12, 32)|var|float64
bop_9150 = relay.minimum(uop_9140.astype('uint32'), relay.reshape(var_9149.astype('uint32'), relay.shape_of(uop_9140))) # shape=(12, 32)
bop_9153 = relay.minimum(uop_9142.astype('uint32'), relay.reshape(var_9149.astype('uint32'), relay.shape_of(uop_9142))) # shape=(12, 32)
func_94_call = mod.get_global_var('func_94')
func_98_call = mutated_mod.get_global_var('func_98')
var_9159 = relay.var("var_9159", dtype = "float64", shape = ())#candidate|9159|()|var|float64
call_9158 = func_94_call(relay.reshape(var_9159.astype('float64'), []), relay.reshape(call_9116.astype('float64'), [16, 7, 2]), )
call_9160 = func_94_call(relay.reshape(var_9159.astype('float64'), []), relay.reshape(call_9116.astype('float64'), [16, 7, 2]), )
output = relay.Tuple([call_9116,bop_9150,call_9158,var_9159,])
output2 = relay.Tuple([call_9117,bop_9153,call_9160,var_9159,])
func_9163 = relay.Function([var_9149,var_9159,], output)
mod['func_9163'] = func_9163
mod = relay.transform.InferType()(mod)
mutated_mod['func_9163'] = func_9163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9163_call = mutated_mod.get_global_var('func_9163')
var_9165 = relay.var("var_9165", dtype = "float64", shape = (12, 32))#candidate|9165|(12, 32)|var|float64
var_9166 = relay.var("var_9166", dtype = "float64", shape = ())#candidate|9166|()|var|float64
call_9164 = func_9163_call(var_9165,var_9166,)
output = call_9164
func_9167 = relay.Function([var_9165,var_9166,], output)
mutated_mod['func_9167'] = func_9167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6617_call = mod.get_global_var('func_6617')
func_6618_call = mutated_mod.get_global_var('func_6618')
call_9252 = relay.TupleGetItem(func_6617_call(), 0)
call_9253 = relay.TupleGetItem(func_6618_call(), 0)
var_9255 = relay.var("var_9255", dtype = "float64", shape = (16, 4, 5))#candidate|9255|(16, 4, 5)|var|float64
bop_9256 = relay.less(call_9252.astype('bool'), var_9255.astype('bool')) # shape=(16, 4, 5)
bop_9259 = relay.less(call_9253.astype('bool'), var_9255.astype('bool')) # shape=(16, 4, 5)
output = relay.Tuple([bop_9256,])
output2 = relay.Tuple([bop_9259,])
func_9278 = relay.Function([var_9255,], output)
mod['func_9278'] = func_9278
mod = relay.transform.InferType()(mod)
mutated_mod['func_9278'] = func_9278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9279 = relay.var("var_9279", dtype = "float64", shape = (16, 4, 5))#candidate|9279|(16, 4, 5)|var|float64
func_9278_call = mutated_mod.get_global_var('func_9278')
call_9280 = func_9278_call(var_9279)
output = call_9280
func_9281 = relay.Function([var_9279], output)
mutated_mod['func_9281'] = func_9281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6866_call = mod.get_global_var('func_6866')
func_6867_call = mutated_mod.get_global_var('func_6867')
call_9292 = func_6866_call()
call_9293 = func_6866_call()
output = call_9292
output2 = call_9293
func_9294 = relay.Function([], output)
mod['func_9294'] = func_9294
mod = relay.transform.InferType()(mod)
mutated_mod['func_9294'] = func_9294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9294_call = mutated_mod.get_global_var('func_9294')
call_9295 = func_9294_call()
output = call_9295
func_9296 = relay.Function([], output)
mutated_mod['func_9296'] = func_9296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7360_call = mod.get_global_var('func_7360')
func_7362_call = mutated_mod.get_global_var('func_7362')
call_9310 = relay.TupleGetItem(func_7360_call(), 1)
call_9311 = relay.TupleGetItem(func_7362_call(), 1)
func_2634_call = mod.get_global_var('func_2634')
func_2638_call = mutated_mod.get_global_var('func_2638')
const_9316 = relay.const([3.002326,2.733803,3.370921,9.859432,-1.557488,-1.259223,6.436747,9.774919,-9.014995,6.494112,3.633314,2.087628,-0.475657,-3.704409,4.806410,-4.782801,-0.575630,-9.476153,8.310564,1.960902,-9.407768,-3.069016,0.355037,-4.108230,2.183866,0.856830,5.366777,-7.392172,-2.674729,-9.775411,-6.219182,2.815755,-6.376790,8.878258,4.758623,4.664863,-0.335476,6.192728,5.131936,9.826895,-2.244032,5.686517,-8.890024,9.910590,-2.793060,-4.587060,7.919149,5.749148,-1.306406,9.763779,8.855211,5.849105,-2.490177,-6.583358,-9.577541,-4.326919,-2.909903,-0.019749,4.493515,-7.617616,3.342438,2.389028,-1.779870,-4.886733,3.016509,-4.118296,-6.391214,-1.656135,0.846509,-9.081787,-1.531151,-5.765195,-6.396337,7.770701,-1.654454,7.570000,0.094071,-1.276416,6.344419,-7.732257,-2.985969,-7.847144,-7.235461,-1.816310,8.015865,4.146004,3.473479,-3.154963,-9.132800,-9.535607,0.027854,0.259370,-6.608015,-6.761847,-3.121608,-0.272035,-7.737664,-4.157155,8.382968,-2.059989,7.135266,-2.617775,8.655888,8.419191,9.284424,-0.569209,0.066805,0.878509,-0.976224,-3.120928,-3.681125,8.910110,4.934754,7.392007,-5.072610,5.629168,9.788996,5.543080,-2.354722,-8.673553,-3.095110,0.595837,-5.026952,9.327178,-0.578646,-7.701463,-3.714637,6.076873,7.167876,-5.828864,-9.318139,1.511008,0.432872,-1.090744,9.171293,9.151041,-6.587461,-8.314978,4.456705,2.191893,6.519091,-9.405823,2.688580,3.590823,-8.367932,1.896816,0.193242,-6.877597,9.308558,-3.328178,-0.973111,-4.765022,-7.873684,1.391162,-0.528696,-1.301428,-7.630417,0.584850,-3.714549,-4.220722,-0.844716,-8.827365,5.854506,-1.677393,2.174906,8.187478,8.493793,-8.400694,-4.110004,3.971263,-7.804712,-6.689972,2.657228,8.595629,-4.688090,-8.377308,7.484601,-3.975074,-1.896902,1.482706,-6.934046,4.756196,-4.027066,9.825561,6.787804,1.219487,-9.937684,2.302122,1.823539,-4.677133,-9.913330,-7.012655,1.437048,-6.484609,3.660488,2.299570,2.465969,3.846337,2.797468,-3.199574,-4.388060,-1.574456,-5.375957,-8.665663,-2.663274,1.488039,6.193272,-4.223283,2.391564,-2.268588,-5.950537,-1.769662,-1.289312,6.673783,-8.929470,3.912254,0.930922,-0.276415,8.449254,4.205534,9.905898,-6.947161,-3.284218,2.067736,-6.385100,9.590075,1.810530,-9.883958,9.280900,4.459696,1.477510,-5.173055,9.861284,-5.360784,9.194532,-0.596001,4.938459,-6.969868,-0.775987,9.016604,9.896556,8.574179,-0.892687,5.461818,-2.381115,2.546020,7.913442,-3.358873,-2.444048,7.707374,7.698870,-1.639450,-4.054700,-8.222545,-3.400983,6.007642,-9.238464,1.356896,-1.059195,8.044723,0.634483,1.278409,-2.026656,1.232611,-0.650491,8.306743,6.556405,-8.520143,-0.257654,-2.476746,-1.641756,-6.007656,-2.664443,0.613749,-8.567599,1.401963,-2.304291,-7.931755,7.378117,5.660253,-5.409424,8.585225,5.247243,-7.966267,-1.989239,-1.881423,-5.204520,-3.531014,-1.129002,-0.537418,-2.060158,3.165722,-9.368757,8.209703,5.026306,4.411629,8.376792,9.282896,5.709859,-1.942201,-0.072072,-7.513910,-5.296361,-5.553967,2.919081,8.085801,-7.921394,-8.388355,7.700496,-5.820021,-4.921069,-4.975307,-2.909054,-2.313127,2.187643,-1.772390,-8.701982,6.538735,6.354360,5.467285,-3.601218,-4.833544,8.066294,2.898628,-9.358271,-9.034174,5.805165,9.447440,-2.248144,2.703947,-6.474772,-2.741640,4.397760,1.016522,1.363915,3.745450,-3.891053,-0.384817,-2.631297,-6.626308,-3.276247,6.180626,9.739147,8.839729,1.158252,-1.679688,-1.309078,-9.218461,-0.495979,-9.225111,-9.556928,9.063586,7.653026,0.810182,6.463312,4.309172,-3.196209,4.310323,3.782303,6.628057,-1.721191,-6.290850,-3.644740,-6.561006,3.395652,-6.113111,-4.905785,-1.814417,-0.035765,8.338167,9.352990,3.783272,2.539690,0.444847,3.011687,6.882949,-6.691954,5.950645,-2.025134,2.893407,-6.912075,-8.625291,3.747151,5.517435,-6.160108,0.810840,4.424080,2.088389,-6.141163,8.430968,3.858904,4.011386,-8.887229,2.521678,-8.672128,-7.370630,-9.346136,4.944134,3.658645,4.937560,4.822485,3.645618,4.654195,7.179050,-3.071415,-3.789557,-5.810998,0.974532,-6.483612,8.649674,-8.832069,9.803241,-1.889431,-4.967151,5.629748,7.372001,7.750199,7.865159,5.360005,-0.575048,0.612863,-2.240202,-5.467826,6.841481,-2.245516,6.863364,-3.964368,0.457539,1.456041,5.905310,-0.756708,4.020383,7.444545,-5.177344,8.112606,-0.806638,5.664633,-3.246852,8.234251,-3.988182,9.554584,-9.342961,0.006461,-8.359005,3.683273,5.814804,1.776921,4.142596,-0.655473,8.517655,-4.845485,-3.462808,-5.219386,4.656489,-3.299228,2.278092,7.164364,-9.741204,-2.934527,0.478166,-6.734541,2.047115,0.840465,-9.407942,-3.577515,-0.550862,-2.024943,7.927063,0.849086,-4.760160,-1.206690,6.611674,4.428531,-9.862447,4.097769,3.808362,3.106494,5.622450,-5.535066,-7.929810,3.983915,7.661057,2.185712,5.208696,-1.113816,2.664411,3.576655,-4.340039,-8.553518,-4.650214,4.746604,4.012299,-1.280478,5.386952,-1.580152,-1.576853,-4.265202,7.865275,-6.753250,5.257650,-1.359631,9.091572,9.020276,-6.568451,8.289264,7.511736,2.769164,2.331738,1.159867,-1.724786,-4.303551,-7.833068,-8.523201,-2.770549,-8.490584,0.957792,-7.892127,-6.921368,9.465157,1.735865,-9.538876,9.395233,8.114543,6.610459,0.364320,3.037358,-5.639188,6.598569,3.932092,9.077642,0.192273,3.804597,-3.186017,0.794951,-1.383416,-7.303949,-0.024164,-9.138056,-3.534227,-3.188345,2.743958,6.233484,9.972809,0.634227,-1.504808,-4.649806,9.303666,-6.208262,-8.539383,3.904454,-5.042635,1.303700,8.919290,5.297404,1.037756,-0.185853,5.285671,6.689472,-7.628900,1.808063,8.758194,-6.553653,0.989229,-8.499364,-0.935780,8.783063,3.782232,6.884935,-9.982912,-9.789478,1.812281,5.507300,-5.431179,5.879326,3.277011,-5.936114,8.220700,6.190776,0.848540,-1.241398,-2.821345,-8.683854,-4.813927,-4.700952,-7.299998,-1.392845,2.586213,-6.428950,-3.088419,-7.551152,8.094120,8.998817,8.779569,0.115750,-1.308730,4.394824,1.091929,3.811524,0.024719,3.891939,-3.935145,5.823401,7.986649,-6.032317,-7.764758,9.465989,5.534627,-4.696760,5.138347,5.680027,2.365496,-9.264021,-3.056969,-9.409087,-2.514619,-2.077579,8.290252,-1.961929,4.183537,4.137668,-8.801281,5.702776,1.940302,-2.198779,-0.174602,-8.673433,-4.121839,-5.936657,-3.373431,1.692158,-0.067792,-4.757055,7.924698,-5.587467,1.715670,-3.342315,-6.843131,8.604506,3.666841,5.755928,1.345455,3.917098,-7.997951,-0.672993,-1.376050,4.744146,8.331638,1.454600,8.975097,-8.355962,8.264636,-0.419626,-8.397297,5.368112,1.241650,7.016122,-5.471444,4.976049,9.447799,-4.908575,7.667155,-1.302270,3.368258,1.141367,-1.053453,7.021555,5.261090,5.398794,9.403912,8.552623,9.301453,6.130281,-0.343635,2.735436,-6.256793,1.688017,1.512894,6.409750,9.180502,0.074697,-9.234150,5.394532,-8.269538,6.700088,2.509689,8.928148,-5.274505,0.427332,8.130861,-7.118158,-9.382183,6.396358,9.619887,-4.817685,5.372282,-2.901579,-6.495143,8.480572,3.992709,-4.772838,-4.570217,4.237346,-8.236157,3.296826,2.047536,8.381744,6.083181,-3.100823,2.110828,-9.018826,-2.633517,-5.927291,-1.845893,-9.361417,7.454785,0.864592,-6.345619,-0.279239,5.768509,-5.390402,8.991910,-5.854189,-6.893122,4.339964,9.371761,-3.684403,3.759094,-1.214879,5.923036,9.534640,4.217935,-0.345993,6.396530,-8.668880,-8.689153,-6.663537,-2.461711,-1.011756,8.495322,6.659181,0.953714,-2.673259,-8.612887,0.768246,4.259278,-7.460413,3.788038,-2.505523,5.461529,2.429434,6.518354,1.067670,-4.816270,-4.007570,-8.452072,-4.635218,-9.589380,-4.361944,6.381252,-0.414451,-4.808689,2.281283,0.295961,-0.984988,-6.722595,-7.111841,9.514796,1.622226,6.514665,9.074257,4.341389,-0.586294,6.970297,1.937577,-7.907841,6.988976,-8.292524,-8.491735,2.954672,9.280515,-0.658483,8.994548,0.473792,0.317524,1.281372,-9.301667,-7.807752,-3.072349,4.265825,-3.991240,0.080355,-2.570588,-1.408107,5.649473,-9.132087,6.509456,-1.073852,-2.819524,7.991196,-0.421070,5.785055,-7.657366,0.910677,6.922964,-8.647177,-7.495042,2.222561,2.047370,2.362308,8.882385,2.481676,-2.301166,-3.816238,-3.266338,-6.719111,-6.545982,0.616289,9.199558,5.709698,-2.131182,-2.534355,9.812364,9.072815,0.220221,5.081912,-2.771353,8.641285,-1.438668,-7.863415,-8.430661,5.339379,-5.872446,3.469684,-8.841728,-4.901006,-9.132065,8.093273,-2.655054,-2.226201,-0.131272,7.878395,8.623981,6.970332,-8.056296,-7.213058,1.808790,2.218585,-5.335706,3.322358,1.747647,8.813470,9.584767,5.400958,-1.116159,9.144055,3.662318,4.761221,-5.346070,-4.762585,-0.536512,3.115304,-5.576863,1.211704,1.483985,0.448380,-4.263254,-0.884330,-1.776286,-6.835539,4.459657,8.880597,-1.382977,5.317645,2.757266,4.660408,-2.513133,9.475883,9.915709,-2.422189,-3.556553,4.999752,-0.238597,-2.568700,8.877359,5.662192,-6.851047,5.900032,-2.910119,2.252240,-0.765511,8.607508,3.422196,3.810492,-3.740343,5.439780,-9.179498,1.828370,-3.334845,3.823143,-4.299046,8.773726,5.779979,8.607644,1.908585,5.820946,8.057656,8.579250,-0.547058,0.631548,-5.713182,3.729049,3.671047,4.410061,-8.104660,0.931795,-9.650436,5.202790,2.569951,3.791454,-0.742812,-2.327922,4.458414,-0.658752,8.437712,-9.017313,1.322694,-6.593167,7.242894,-3.354642,-0.446904,-5.323643,-5.841028,-6.171806,2.491223,8.184101,-7.895525,9.610435,6.105292,1.076579,-0.080817,-0.439716,1.728204,-1.402747,-4.745475,-5.444949,6.395343,2.227045,5.460254,6.402290,0.881153,-9.034627,6.926779,-7.525042,9.142603,1.959879,8.996018,6.883573,-9.736105,1.441328,9.322725,1.983703,0.686434,-3.512242,-0.056619,5.271062,-9.328346,0.387487,0.934975,-0.936377,-8.075522,-8.723064,2.654087], dtype = "float64")#candidate|9316|(972,)|const|float64
call_9315 = func_2634_call(relay.reshape(const_9316.astype('float64'), [9, 12, 9]), relay.reshape(const_9316.astype('float64'), [9, 12, 9]), )
call_9317 = func_2634_call(relay.reshape(const_9316.astype('float64'), [9, 12, 9]), relay.reshape(const_9316.astype('float64'), [9, 12, 9]), )
output = relay.Tuple([call_9310,call_9315,const_9316,])
output2 = relay.Tuple([call_9311,call_9317,const_9316,])
func_9318 = relay.Function([], output)
mod['func_9318'] = func_9318
mod = relay.transform.InferType()(mod)
mutated_mod['func_9318'] = func_9318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9318_call = mutated_mod.get_global_var('func_9318')
call_9319 = func_9318_call()
output = call_9319
func_9320 = relay.Function([], output)
mutated_mod['func_9320'] = func_9320
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9351 = relay.var("var_9351", dtype = "float32", shape = (4, 6, 14))#candidate|9351|(4, 6, 14)|var|float32
uop_9352 = relay.cosh(var_9351.astype('float32')) # shape=(4, 6, 14)
const_9365 = relay.const([[[-3.624907,2.304843,1.530459,3.115806,-3.679799,-1.954643,2.126143,1.801084,-5.983388,2.543548,-8.145010,3.677915,-3.970543,-5.217318],[8.625138,-7.634173,-4.102691,-0.996699,-1.965219,5.224141,6.510682,3.640264,1.433548,4.515694,-9.353229,3.486143,-3.535942,6.204749],[-8.066170,5.204402,8.478114,9.777339,8.900852,7.809189,2.443582,-9.076918,7.984650,0.428680,-4.603396,-6.739330,-7.866471,2.251739],[2.337993,3.961952,-8.157890,0.020474,9.216021,-0.298789,-5.150427,-5.879747,-8.758789,-2.229711,-1.007914,-0.463348,-7.238237,8.378234],[-8.005683,1.494919,-0.239023,5.240752,1.077510,-5.772301,-7.250696,9.370682,6.848644,-8.908393,-9.367239,0.502442,6.932924,0.981914],[-3.582394,-2.382957,-3.962909,-7.766575,-7.798546,8.825046,-6.347574,-5.824530,-1.155417,-3.278803,7.278940,8.579428,5.082622,-3.658773]],[[-9.349816,7.240773,1.953017,-1.150232,9.909904,-7.731981,-8.245026,-3.080921,0.835247,4.815009,-1.486650,5.413946,0.818619,-4.553800],[5.950799,3.819503,-2.806393,1.388840,-4.701402,9.114155,-1.866936,9.271836,-2.516414,-9.789882,0.205095,6.388194,4.441459,7.810261],[-1.572846,1.228824,2.951727,7.751291,9.965198,9.701975,-2.699165,-7.256209,-3.726213,-5.324041,8.837534,-8.108178,-7.236319,-6.418798],[0.361251,-7.929168,6.106188,9.483653,-1.464251,8.517555,1.212899,8.920925,5.155876,5.939072,-9.770081,-8.306300,-1.987926,-3.289980],[6.939808,-6.908694,-8.027902,-7.135176,-5.305414,-4.238765,-4.057740,2.299986,-6.369473,-2.357070,-4.605285,4.726105,7.427839,-7.715478],[7.310506,-5.735020,9.377883,6.547543,-5.656841,-4.797999,4.928023,5.872305,-3.392654,-5.138756,-3.445837,-8.373569,-2.544259,6.384445]],[[-0.986799,3.249271,-7.793418,-2.215619,-4.796939,0.041794,5.822561,0.345703,5.912640,-4.019556,5.968369,-3.967592,2.854253,-1.717378],[7.227990,7.731706,8.246784,5.211457,5.528765,-9.030385,5.336705,-2.025874,0.135637,5.388792,-4.419536,-0.491123,-9.440826,3.185297],[8.243194,0.699280,3.771237,-2.349015,9.014095,-0.934726,6.355696,-4.195012,9.127730,8.971954,4.437063,8.845728,7.573634,2.159584],[-9.321317,3.544427,3.646966,-9.402060,-3.246765,8.155843,-5.504728,-3.225184,-8.765639,-2.929999,3.395890,-1.332105,8.498243,-9.734351],[6.305307,-4.136474,5.233566,-5.429125,7.485361,7.960054,1.838161,6.559081,8.707981,-2.004191,6.540467,8.038199,-9.238142,9.248068],[4.341447,-9.354158,1.787128,-5.613900,4.236464,8.394211,-5.736393,-6.965270,-6.519988,2.967044,9.620326,9.309056,8.264891,7.782234]],[[4.278458,8.898227,-4.359622,1.278439,-0.426315,-4.631142,-0.690401,-8.191043,4.388569,3.730158,8.098282,8.223990,-2.953462,0.053911],[1.518815,7.179388,5.081682,5.847909,3.224515,9.195471,-7.955176,3.789988,-5.128341,8.218188,-0.053290,2.170234,-8.091608,-9.675695],[6.167190,-7.010712,-4.777152,6.002472,-1.282452,2.127939,-2.684519,8.709829,7.327052,3.246402,1.655310,1.630396,5.031339,2.570457],[6.878114,-9.708425,4.096828,3.163943,4.631029,1.378859,9.091711,1.355913,3.514607,-3.772229,0.911777,-6.644639,3.885979,-8.050967],[-3.833909,-5.370632,4.646585,4.265690,0.156319,-1.083656,3.358458,-4.983268,-5.079997,-2.915021,-4.887968,-9.452830,8.227579,-5.487540],[-0.569437,6.998877,-6.166352,-9.147935,5.390901,-1.504375,-7.355229,2.481328,-1.831648,-5.719560,8.727162,1.222978,-8.184801,6.176212]]], dtype = "float32")#candidate|9365|(4, 6, 14)|const|float32
bop_9366 = relay.maximum(uop_9352.astype('int32'), relay.reshape(const_9365.astype('int32'), relay.shape_of(uop_9352))) # shape=(4, 6, 14)
output = bop_9366
output2 = bop_9366
func_9379 = relay.Function([var_9351,], output)
mod['func_9379'] = func_9379
mod = relay.transform.InferType()(mod)
mutated_mod['func_9379'] = func_9379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9380 = relay.var("var_9380", dtype = "float32", shape = (4, 6, 14))#candidate|9380|(4, 6, 14)|var|float32
func_9379_call = mutated_mod.get_global_var('func_9379')
call_9381 = func_9379_call(var_9380)
output = call_9381
func_9382 = relay.Function([var_9380], output)
mutated_mod['func_9382'] = func_9382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8025_call = mod.get_global_var('func_8025')
func_8027_call = mutated_mod.get_global_var('func_8027')
call_9384 = relay.TupleGetItem(func_8025_call(), 0)
call_9385 = relay.TupleGetItem(func_8027_call(), 0)
output = call_9384
output2 = call_9385
func_9408 = relay.Function([], output)
mod['func_9408'] = func_9408
mod = relay.transform.InferType()(mod)
output = func_9408()
func_9409 = relay.Function([], output)
mutated_mod['func_9409'] = func_9409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6709_call = mod.get_global_var('func_6709')
func_6711_call = mutated_mod.get_global_var('func_6711')
call_9417 = relay.TupleGetItem(func_6709_call(), 0)
call_9418 = relay.TupleGetItem(func_6711_call(), 0)
output = call_9417
output2 = call_9418
func_9422 = relay.Function([], output)
mod['func_9422'] = func_9422
mod = relay.transform.InferType()(mod)
mutated_mod['func_9422'] = func_9422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9422_call = mutated_mod.get_global_var('func_9422')
call_9423 = func_9422_call()
output = call_9423
func_9424 = relay.Function([], output)
mutated_mod['func_9424'] = func_9424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9422_call = mod.get_global_var('func_9422')
func_9424_call = mutated_mod.get_global_var('func_9424')
call_9458 = func_9422_call()
call_9459 = func_9422_call()
func_9294_call = mod.get_global_var('func_9294')
func_9296_call = mutated_mod.get_global_var('func_9296')
call_9464 = func_9294_call()
call_9465 = func_9294_call()
output = relay.Tuple([call_9458,call_9464,])
output2 = relay.Tuple([call_9459,call_9465,])
func_9466 = relay.Function([], output)
mod['func_9466'] = func_9466
mod = relay.transform.InferType()(mod)
output = func_9466()
func_9467 = relay.Function([], output)
mutated_mod['func_9467'] = func_9467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9294_call = mod.get_global_var('func_9294')
func_9296_call = mutated_mod.get_global_var('func_9296')
call_9498 = func_9294_call()
call_9499 = func_9294_call()
func_9318_call = mod.get_global_var('func_9318')
func_9320_call = mutated_mod.get_global_var('func_9320')
call_9516 = relay.TupleGetItem(func_9318_call(), 1)
call_9517 = relay.TupleGetItem(func_9320_call(), 1)
const_9530 = relay.const([[[True,False,False,False,False,True,False,True,False],[True,True,True,True,False,False,False,False,True],[False,False,False,True,True,False,True,True,True],[True,False,False,True,True,True,True,False,True],[True,False,True,True,True,False,True,False,False],[True,False,True,False,True,True,False,False,True],[False,False,False,False,True,False,False,True,True],[True,False,True,True,True,False,False,True,True],[False,False,False,True,True,False,False,True,True],[True,True,False,False,True,False,False,True,True],[False,False,False,False,True,True,True,False,False],[True,False,True,True,True,True,True,False,False]],[[True,False,True,True,True,False,True,False,False],[True,False,True,False,True,True,True,True,True],[False,False,True,False,False,False,False,True,True],[True,False,True,False,True,True,True,False,False],[False,True,False,False,False,True,True,True,False],[True,False,True,False,False,True,True,False,True],[True,False,False,False,False,False,True,False,False],[False,True,False,True,True,False,True,True,False],[False,True,True,False,False,True,True,False,True],[True,True,False,False,True,False,True,True,False],[True,True,False,True,True,False,False,False,True],[False,False,True,False,False,False,False,True,False]],[[True,False,False,True,True,True,True,False,False],[True,True,False,False,False,True,False,False,False],[False,False,True,False,False,True,True,False,True],[True,False,False,True,False,True,True,True,False],[False,False,False,True,True,True,True,True,False],[False,False,False,False,False,False,True,False,False],[False,True,False,False,False,True,False,True,True],[True,False,False,False,True,False,False,False,True],[False,True,True,False,True,True,False,True,True],[False,True,False,False,True,True,False,True,False],[True,False,True,False,True,False,False,True,True],[False,False,True,False,False,False,True,False,True]],[[False,False,False,True,False,True,True,False,True],[True,False,False,True,False,False,False,False,False],[False,True,True,True,True,True,False,True,True],[False,False,True,True,False,True,False,False,True],[True,True,True,False,False,False,True,True,False],[True,False,False,True,False,True,True,False,True],[False,False,False,False,True,True,True,False,True],[True,False,True,False,False,True,False,False,True],[False,True,True,False,True,True,False,False,True],[False,True,True,True,False,False,True,False,True],[False,True,True,False,False,False,True,True,False],[False,True,False,False,True,False,True,True,True]],[[False,True,True,True,True,True,True,False,True],[True,False,True,False,False,False,True,False,True],[True,False,False,True,False,True,False,False,False],[False,True,True,True,True,False,False,True,False],[True,False,False,False,True,False,True,True,True],[False,False,True,True,False,True,True,True,False],[False,True,False,False,True,False,True,False,True],[True,True,False,True,False,False,False,True,True],[False,False,False,True,False,True,True,True,True],[False,False,False,False,False,False,True,False,True],[True,True,False,False,True,True,True,False,True],[True,False,False,True,True,True,True,False,True]],[[False,True,True,True,False,True,False,False,False],[False,True,False,True,False,False,True,True,True],[False,False,True,False,True,False,False,False,True],[True,False,True,True,False,True,False,False,True],[True,False,True,True,False,True,False,True,True],[False,True,False,True,True,False,False,True,False],[False,False,False,True,True,False,True,False,True],[False,False,True,True,False,True,False,True,True],[True,True,False,True,True,True,True,False,True],[False,True,False,False,True,False,False,True,False],[True,False,False,False,False,True,True,True,True],[False,True,False,True,True,False,True,False,True]],[[True,True,False,False,True,True,False,True,False],[True,False,True,True,True,True,True,True,True],[False,False,False,True,False,False,False,True,True],[False,False,True,True,True,False,True,True,False],[False,False,True,True,True,True,False,False,False],[False,True,True,True,False,True,False,True,True],[False,True,False,True,True,True,False,True,False],[False,False,False,False,True,False,False,False,True],[True,False,True,False,False,False,True,False,False],[True,False,False,False,False,True,True,True,True],[False,True,False,False,True,False,False,False,True],[False,False,True,True,True,False,False,True,False]],[[True,True,False,True,False,False,True,False,False],[True,True,True,False,True,False,False,False,False],[False,False,False,False,True,False,True,False,True],[True,True,True,False,False,False,False,True,False],[True,True,False,True,False,False,True,False,True],[True,False,True,True,False,False,True,False,True],[True,False,True,True,True,False,False,True,False],[False,False,False,False,True,True,False,False,True],[False,True,True,False,True,True,True,False,True],[True,False,False,False,True,False,False,False,True],[False,False,True,True,False,True,True,False,False],[False,True,False,True,True,False,False,True,True]],[[True,True,True,False,False,True,False,True,True],[False,True,True,False,True,False,True,False,False],[False,True,True,False,True,False,False,False,True],[False,False,True,True,True,False,True,False,False],[False,False,True,True,True,False,True,True,False],[True,False,False,True,False,False,False,False,True],[False,False,False,False,True,False,True,False,False],[True,True,False,True,False,False,True,True,True],[True,False,False,True,True,False,False,True,False],[False,True,False,True,False,True,True,False,False],[False,True,False,False,False,False,False,True,False],[False,False,True,False,False,False,False,True,True]]], dtype = "bool")#candidate|9530|(9, 12, 9)|const|bool
bop_9531 = relay.mod(call_9516.astype('float32'), relay.reshape(const_9530.astype('float32'), relay.shape_of(call_9516))) # shape=(9, 12, 9)
bop_9534 = relay.mod(call_9517.astype('float32'), relay.reshape(const_9530.astype('float32'), relay.shape_of(call_9517))) # shape=(9, 12, 9)
bop_9535 = relay.minimum(bop_9531.astype('uint32'), relay.reshape(call_9516.astype('uint32'), relay.shape_of(bop_9531))) # shape=(9, 12, 9)
bop_9538 = relay.minimum(bop_9534.astype('uint32'), relay.reshape(call_9517.astype('uint32'), relay.shape_of(bop_9534))) # shape=(9, 12, 9)
uop_9541 = relay.rsqrt(const_9530.astype('float32')) # shape=(9, 12, 9)
output = relay.Tuple([call_9498,bop_9535,uop_9541,])
output2 = relay.Tuple([call_9499,bop_9538,uop_9541,])
func_9568 = relay.Function([], output)
mod['func_9568'] = func_9568
mod = relay.transform.InferType()(mod)
mutated_mod['func_9568'] = func_9568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9568_call = mutated_mod.get_global_var('func_9568')
call_9569 = func_9568_call()
output = call_9569
func_9570 = relay.Function([], output)
mutated_mod['func_9570'] = func_9570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9318_call = mod.get_global_var('func_9318')
func_9320_call = mutated_mod.get_global_var('func_9320')
call_9585 = relay.TupleGetItem(func_9318_call(), 0)
call_9586 = relay.TupleGetItem(func_9320_call(), 0)
output = call_9585
output2 = call_9586
func_9605 = relay.Function([], output)
mod['func_9605'] = func_9605
mod = relay.transform.InferType()(mod)
output = func_9605()
func_9606 = relay.Function([], output)
mutated_mod['func_9606'] = func_9606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6756_call = mod.get_global_var('func_6756')
func_6757_call = mutated_mod.get_global_var('func_6757')
call_9658 = relay.TupleGetItem(func_6756_call(), 0)
call_9659 = relay.TupleGetItem(func_6757_call(), 0)
func_6547_call = mod.get_global_var('func_6547')
func_6549_call = mutated_mod.get_global_var('func_6549')
const_9664 = relay.const([2.931816,-2.418986,-1.221284,-5.672078,-3.183523,9.982816,1.511402,2.599623,2.517739,6.004822,-6.198669,1.511065,3.318640,5.315581,5.969189,-5.587883,-1.916350,1.940979,-5.020123,-0.463426,-6.792164,3.478818,-2.712461,-8.681618,3.023925,1.485001,1.001245,7.465219,-0.973683,0.864219,-3.955210,-9.622502,-6.853139,7.816874,7.200174,4.791587,3.803166,1.814566,-2.573046,5.077153,-9.942701,5.151829,-1.092957,-6.970205,0.446972,-9.893313,3.807210,0.779990,-9.583050,8.874973,-2.158946,6.126426,8.277134,8.123096,-8.158804,9.397121,4.839829,5.571726,2.828462,-3.702010,2.446994,-2.432440,-4.841785,0.376645,4.459911,-0.075732,1.302061,5.469004,0.808036,-8.405851,-9.424990,-6.555924,8.988291,0.980653,3.946892,6.704603,-6.577420,2.314769,6.595329,7.061271,2.888048,-3.323127,0.200663,8.817213,-1.042395,-2.072145,7.683411,-7.531156,-9.691637,-2.359292,-2.334475,7.677412,5.705676,2.451229,6.127134,9.850416,-8.467388,4.722952,-3.634904,-3.503309,4.439937,4.568355,4.659429,5.209157,5.418127,3.608384,4.668927,-1.510920,-8.161779,-7.691145,-0.120739,-0.458043,5.187153,-1.445088,5.161434,0.448805,9.550889,0.953078,-7.200814,0.197242,-6.042052,7.572284,8.537325,5.605405,1.204842,6.080988,1.789724,8.585021,6.805852,-5.116910,-9.755937,6.257936,-0.186854,6.035480,3.338920,-4.252344,3.351711,-1.326487,0.043947,-3.317272,6.864486,-3.943610,-2.294361,9.928508,2.657880,-8.342375,4.551602,-9.277875,-9.947432,5.467318,-7.778314,-7.466546,5.118709,-2.749858,-4.943961,-7.571372,-1.418769,-4.128000,-0.967439,-8.942741,-9.580646,7.962994,8.135747,1.117800,7.280271,7.335095,8.720388,-3.961193,-2.938415,1.385694,3.261261,-0.864926,5.810267,-8.256552,2.732249,9.492666,8.460777,0.196094,-5.213450,6.820675,8.228774,5.349334,-8.714515,-7.319819,-2.850586,6.681462,3.893517,7.850064,-8.286030,-9.190013,7.601690,1.591051,-6.474053,4.313215,-9.313013,0.593856,9.661686,-1.665765,-2.348719,9.952556,-4.877861,-5.020816,-7.156420,-6.955506,-8.603754,-8.883401,4.010753,-4.815443,7.504922,-6.764852,-3.551224,7.522875,6.503916,9.537310,-0.697356,-9.081818,3.932849,-3.503022,1.387032,4.455680,0.343974,6.806053,9.887751,0.240293,4.382673,-7.269493,4.622383,7.892674,3.864047,-3.597369,8.641215,4.341002,2.304925,4.804051,-5.305821,-7.568215,-4.182012,-7.299841,-3.839324,-8.011947,-6.402161,9.882968,0.519322,-4.179617,-2.681867,-7.357052,4.134661,-6.185326,-9.628228,6.856046,-7.404190,-1.323452,1.714882,8.074375,-5.944490,8.210575,-2.711387,-9.326203,-3.409653,7.258720,4.481558,-1.115013,4.939773,-6.909458,-5.242700,-1.108529,7.893388,-8.332908,-5.287602,-7.460725,8.030999,4.312068,5.714020,8.945464,-4.736736,-9.152580,6.355128,-0.045682,6.970278,-8.662462,6.311715,0.921029,4.243443,1.554375,8.400962,2.969135,-5.061351,-6.042806,-7.316181,0.232401,-2.887712,1.398986,-9.374692,-9.132548,-6.897382,-1.287549,-8.930987,-9.278224,9.832169,2.894508,-1.192345,2.282206,3.001282,-0.365886,-5.314932,-4.742292,2.750933,-3.076812,8.874657,1.131474,0.173644,1.119591,9.955970,3.766676,-9.039689,1.690036,5.820796,1.232544,2.456894,1.126636,2.392050,-7.714445,9.161889,-4.952754,-9.449817,-5.104345,3.581386,1.994132,4.256559,3.635617,1.027979,-8.920750,-6.583264,7.491023,9.413518,8.040597,-1.351871,8.420124,-1.601420,-7.131056,-5.965646,-3.867051,5.932062,-2.277336,-4.733499,-2.047500,8.090749,6.199828,-2.360476,2.661402,8.148142,-4.340818,-8.215165,2.742671,2.398691,0.694827,-3.534197,-8.226857,3.938501,-5.434797,-8.112089,5.826426,-2.563713,6.527643,1.735160,-7.978482,5.201701,-0.988227,2.469502,-3.407243,-7.406778,-3.035791,7.965767,-2.370921,3.548230,1.994109,5.783167,1.581700,9.174226,-7.952797,9.972935,4.995359,1.419114,3.513740,6.833347,8.461207,8.370156,-0.488667,-1.794894,-3.354754,7.647693,-0.726504,-9.333384,-5.395616,-4.113082,4.062909,-3.254519,3.414089,-2.352994,-3.034491,-9.478542,3.866815,0.828976,7.088289,-0.688100,4.950041,9.950961,-9.437425,-4.408430,3.726961,6.153631,-1.853206,5.756844,8.243490,-7.568366,0.886267,-0.333318,9.811560,-5.295930,5.763913,-8.443014,-9.210875,-3.464385,8.855521,-7.155984,-7.807024,2.476637,8.900811,-2.323369,1.456245,-2.776503,8.764908,1.442326,-8.616896,0.073596,9.625824,-4.551952,2.974218,-6.490237,1.976156,4.121790,8.854433,6.336181,9.018510,4.928810,-6.651590,5.234012,-2.526304,-8.183895,-8.874236,9.855666,4.886234,-4.143121,-6.926557,-9.304836,9.260700,1.510415,-3.067348,3.046183,-1.287157,-9.428899,-4.903960,3.152920,9.128035,3.007727,1.838014,3.189083,-6.901953,-6.618740,-9.918944,0.942417,-6.442882,-8.661098,7.934083,8.585961,9.111190,-8.423610,7.274276,-1.286831,-5.297211,9.261168,-7.381247,-3.200870,-0.068651,-5.675498,1.533548,-0.875565,-2.917503,5.342376,-3.789657,-1.170564,-1.628203,8.016771,-4.272673,-2.175647,6.745395,-4.450384,-2.153141,-1.476993,4.141901,-7.830124,-2.917176,2.837828,7.201479,-9.100696,3.329869,5.960764,-7.302071,8.159658,8.272147,1.819707,7.395064,-9.537189,-1.703598,-6.115988,0.974204,7.144969,8.253502,9.847446,0.957394,-0.233224,-9.746834,-2.504186,-2.358654,6.730818,-1.859130,-3.197113,-1.854075,2.454079,-3.314572,8.597686,-2.690423,2.248433,4.225915,4.872770,7.688581,9.182365,7.929690,-1.495205,0.582639,6.246556,-9.829703,-4.391353,7.093655,9.844494,2.401965,6.478906,0.951836,-8.771400,2.217526,5.428357,3.164757,-4.839513,9.348676,1.366853,-4.462145,-0.042812,-3.787985,-6.028218,-8.051009,7.550954,-0.152707,-5.028622,-2.241062,-3.030919,-0.654969,-1.250574,-6.672768,-0.259669,0.835854,-5.893752,4.653143,-8.896695,9.222917,0.992290,-3.583728,-4.061603,0.498159,0.902124,4.492238,-9.326449,3.850072,2.714403,1.900023,7.076183,6.154090,0.848909,-4.296717,3.142874,-1.152873,-2.913059,9.464191,7.368020,5.023368,-6.002693,-7.687675,-6.235828,1.405318,7.486084,9.087385,7.050801,-7.100908,4.078500,-4.996805,8.458615,7.938369,-5.048363,-0.512797,-8.781971,-7.541396,-7.148287,0.760244,-2.054386,-2.833480,0.620027,4.353851,4.531876,5.461899,-8.242698,7.766712,-1.753525,0.377586,5.391408,-6.405805,4.715564,0.734988,5.997063,-5.316840,5.578940,8.433547,8.930619,-6.224556,7.491839,6.744079,9.807785,2.442910,-1.573759,-7.698054,-8.008536,1.640255,8.870286,6.527233,1.416968,8.366192,-7.873083,7.686829,0.448738,-0.210184,-9.230290,-5.968504,-5.420664,8.462680,4.556387,5.912046,1.232319,6.234438,1.391071,8.276206,6.196899,9.319366,-8.147476,4.283190,-4.992201,-1.411289,6.033894,6.702238,-9.467952,-4.641483,-0.495407,1.681385,-6.388959,2.438307,5.433516,-2.501624,0.665303,-4.055227,7.200312,4.267742,-6.172963,-2.180693,-7.624664,6.142808,-6.577163,-1.707876,0.038697,-9.169253,2.162496,1.818143,9.337206,0.273558,-1.731776,-1.480043,7.210025,8.310373,9.223746,6.573069,4.355760,-7.121495,1.327882,7.000472,-1.564862,-4.454681,8.293667,-2.301177,-9.910556,6.370158,2.356642,-6.181988,3.431957,-3.717440,9.782663,-2.620827,2.748296,-5.237303,-3.735645,3.559565,-7.780448,-7.133308,-9.745501,-4.130133], dtype = "float64")#candidate|9664|(720,)|const|float64
call_9663 = func_6547_call(relay.reshape(const_9664.astype('float64'), [16, 9, 5]))
call_9665 = func_6547_call(relay.reshape(const_9664.astype('float64'), [16, 9, 5]))
func_9318_call = mod.get_global_var('func_9318')
func_9320_call = mutated_mod.get_global_var('func_9320')
call_9666 = relay.TupleGetItem(func_9318_call(), 1)
call_9667 = relay.TupleGetItem(func_9320_call(), 1)
func_8457_call = mod.get_global_var('func_8457')
func_8459_call = mutated_mod.get_global_var('func_8459')
call_9668 = relay.TupleGetItem(func_8457_call(), 0)
call_9669 = relay.TupleGetItem(func_8459_call(), 0)
output = relay.Tuple([call_9658,call_9663,const_9664,call_9666,call_9668,])
output2 = relay.Tuple([call_9659,call_9665,const_9664,call_9667,call_9669,])
func_9672 = relay.Function([], output)
mod['func_9672'] = func_9672
mod = relay.transform.InferType()(mod)
output = func_9672()
func_9673 = relay.Function([], output)
mutated_mod['func_9673'] = func_9673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7549_call = mod.get_global_var('func_7549')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_9692 = relay.TupleGetItem(func_7549_call(), 0)
call_9693 = relay.TupleGetItem(func_7551_call(), 0)
output = call_9692
output2 = call_9693
func_9696 = relay.Function([], output)
mod['func_9696'] = func_9696
mod = relay.transform.InferType()(mod)
output = func_9696()
func_9697 = relay.Function([], output)
mutated_mod['func_9697'] = func_9697
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9714 = relay.var("var_9714", dtype = "float64", shape = (12, 4, 13))#candidate|9714|(12, 4, 13)|var|float64
uop_9715 = relay.atan(var_9714.astype('float64')) # shape=(12, 4, 13)
bop_9720 = relay.mod(var_9714.astype('float64'), relay.reshape(uop_9715.astype('float64'), relay.shape_of(var_9714))) # shape=(12, 4, 13)
func_8709_call = mod.get_global_var('func_8709')
func_8710_call = mutated_mod.get_global_var('func_8710')
call_9730 = relay.TupleGetItem(func_8709_call(), 0)
call_9731 = relay.TupleGetItem(func_8710_call(), 0)
output = relay.Tuple([bop_9720,call_9730,])
output2 = relay.Tuple([bop_9720,call_9731,])
func_9739 = relay.Function([var_9714,], output)
mod['func_9739'] = func_9739
mod = relay.transform.InferType()(mod)
var_9740 = relay.var("var_9740", dtype = "float64", shape = (12, 4, 13))#candidate|9740|(12, 4, 13)|var|float64
output = func_9739(var_9740)
func_9741 = relay.Function([var_9740], output)
mutated_mod['func_9741'] = func_9741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7549_call = mod.get_global_var('func_7549')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_9767 = relay.TupleGetItem(func_7549_call(), 0)
call_9768 = relay.TupleGetItem(func_7551_call(), 0)
func_8405_call = mod.get_global_var('func_8405')
func_8408_call = mutated_mod.get_global_var('func_8408')
const_9775 = relay.const([[-7.066791,-9.607515,-2.331845,2.364414,-6.482919,-9.574413,5.953761,7.123049,0.432699,3.882593,2.243363,-0.544847,3.808107,2.409308,-4.184447,-8.635370,-1.745920,1.207744,-2.563608,9.590891,9.924362,-1.800597,-7.986684,3.637809,4.135232,7.992436,-5.119304,4.708923,-6.877122,5.604092,9.240338,8.814943,-1.151718,-1.433031,6.045712,4.717821,-3.134568,4.378322,-2.249370,-9.306811,-7.586812,-8.321835,7.376990,-0.119078,-3.782440,-5.444493,4.827941,4.188795,4.658349,1.623825,-3.357206,8.151503,-5.776498,1.439258,3.241424,3.986014,-3.427689,-0.243679,4.868457,7.558071,-7.172578,-8.009800,0.858042,7.441649,5.902851,-0.957723,-7.246995,-1.669934,-2.676906,8.219551,4.678518,8.897869,-1.158907,0.162614,-7.008102,-4.221019,4.224516,5.144177,-3.292191,0.073807,9.033466,5.557345,4.115030,-2.905997,-8.573247,1.221684,-3.403447,2.987117,1.699121,7.743511,6.016604,-0.380053,-2.419709,7.360094,4.271347,-1.788046,-5.480472,-9.740712,-1.197792,-4.862617,-9.676683,-6.891940,-9.643991,9.428433,5.713777,-6.108291,-7.447849,9.839832,-6.408876,-9.589932,9.475591,-9.091810,-4.912492,6.277081,9.105752,4.243336,0.342508,1.585581,5.087834,0.156329],[7.949943,2.672419,8.896166,-9.747955,-0.713975,7.222184,4.870774,9.992368,-5.248474,-0.876979,-4.972983,9.006384,-3.350905,-9.098871,6.434939,-1.127477,4.482931,7.445982,-9.682066,-0.510309,-0.655264,-2.857671,7.356082,5.219217,-1.586426,4.492500,-6.910576,-8.857560,2.075029,-7.369106,4.946939,4.963079,5.201252,8.092894,-6.516831,-4.283544,4.601073,8.962683,-3.857843,-8.707814,-0.588456,-6.539279,-7.679288,4.319314,0.232483,-1.757276,-1.888040,8.255628,-4.975643,1.175890,-1.210197,5.553595,-2.989211,-3.031874,-8.896986,6.816345,-3.115281,1.215482,2.028262,5.772742,-1.088737,7.539061,8.901626,-2.580415,9.761022,6.791161,0.625483,0.644665,9.863365,7.279955,-5.816868,-9.660686,-1.431356,4.985113,5.359671,-0.419758,-9.903424,-8.293706,-5.017140,-5.768964,2.881193,8.167545,-4.891717,-2.587736,-5.966480,7.081208,6.964370,5.621752,6.004003,7.821939,7.825389,3.522980,3.987241,-3.879958,-8.966923,3.301154,-6.427991,0.430703,9.300339,-5.051757,4.357742,-1.401440,3.178066,-2.009287,-8.744877,2.605114,1.605501,7.832602,4.179531,-1.201887,-6.892537,9.834631,-4.814849,-4.846336,-2.278045,6.870458,-9.225863,-9.497155,2.369795,8.231283],[-1.132297,-7.323291,6.509693,-4.242372,3.221741,-5.693130,-1.385907,-5.462909,-8.478080,-9.015545,4.238520,-1.437305,5.909861,4.613358,9.550404,-0.762599,-4.501282,6.774504,0.514044,-7.027390,-3.068378,-9.855380,-3.853490,0.681781,4.938136,5.135516,8.725801,4.446468,3.376415,-2.616385,3.067477,-3.969455,7.646159,3.463972,-2.150623,1.156964,-7.126178,4.493188,-3.469046,-3.723075,8.732614,-1.161299,7.464921,4.272195,-9.595349,-4.387225,2.816550,5.943968,-3.281224,8.106311,-3.579176,-9.020179,-6.828280,0.774400,-1.691864,4.677590,-1.476045,0.917917,0.430760,-3.055940,-6.186663,2.363386,0.970927,-4.491758,9.097585,-1.023923,-3.903863,-7.422138,1.244334,7.252783,2.452318,1.698111,-7.818320,-6.487455,6.678259,1.642660,1.176303,8.724282,-9.770878,-8.707462,0.484077,3.106912,0.653524,6.914888,-8.363838,4.087667,8.724073,7.742880,4.133406,6.747798,-6.837691,-8.216718,6.854307,-6.333435,4.908907,1.800201,-3.928849,-0.349406,-6.963169,-4.256181,-2.215136,5.846840,-2.815478,1.416832,-3.112351,-5.267592,9.430879,-9.830324,5.760828,-6.986772,1.987677,3.901557,9.903361,-3.577254,6.264168,-6.785101,-9.063798,0.754809,-0.454952,-8.273508],[3.007648,9.100292,7.056035,5.405099,-6.220454,3.649530,8.239220,6.394089,-7.124747,2.819263,-0.457069,2.227203,5.197518,8.448504,5.451580,-5.316733,9.164398,9.157714,6.259727,6.328689,2.209978,5.436954,1.718624,3.846858,-0.091177,-1.203722,-2.581636,5.813066,-7.836322,1.626306,-2.413311,8.311944,6.525814,-2.271532,2.830750,-4.206053,-1.645447,-6.914436,8.547306,1.069683,-4.607720,-8.798829,8.391403,-3.943937,6.268901,4.985319,3.818385,1.166897,-4.997575,5.465827,4.030034,-4.713459,2.537306,1.446879,-8.238656,5.643437,-1.182586,1.257409,1.447115,-9.670556,0.742038,0.892561,-3.926407,0.366183,-0.516099,-0.934498,-7.011182,-6.451521,9.821231,-2.965991,-6.592195,-2.902907,-9.844554,9.027366,9.866054,-1.719023,2.697702,2.183843,-8.276787,-6.096854,4.268785,-7.986485,3.998130,-1.415177,-9.487102,-4.740240,-6.846961,-6.073384,-5.282741,-1.172436,3.622540,-1.647668,-0.314621,-0.792501,-8.332665,-1.699214,9.170201,-1.871847,0.197680,-9.174371,8.835227,-7.147992,6.840000,-5.383513,-8.715474,-9.534988,8.064500,3.157327,-4.271774,-2.017929,-7.016281,5.425016,4.397071,8.212597,-9.288704,1.574651,-0.023367,4.378200,-3.932472,-9.081811]], dtype = "float64")#candidate|9775|(4, 120)|const|float64
call_9774 = relay.TupleGetItem(func_8405_call(relay.reshape(const_9775.astype('float64'), [12, 8, 5])), 0)
call_9776 = relay.TupleGetItem(func_8408_call(relay.reshape(const_9775.astype('float64'), [12, 8, 5])), 0)
uop_9782 = relay.exp(const_9775.astype('float32')) # shape=(4, 120)
uop_9789 = relay.sigmoid(uop_9782.astype('float64')) # shape=(4, 120)
func_672_call = mod.get_global_var('func_672')
func_676_call = mutated_mod.get_global_var('func_676')
var_9797 = relay.var("var_9797", dtype = "uint16", shape = (60,))#candidate|9797|(60,)|var|uint16
call_9796 = func_672_call(relay.reshape(var_9797.astype('uint16'), [2, 5, 6]), relay.reshape(var_9797.astype('uint16'), [2, 5, 6]), )
call_9798 = func_672_call(relay.reshape(var_9797.astype('uint16'), [2, 5, 6]), relay.reshape(var_9797.astype('uint16'), [2, 5, 6]), )
bop_9805 = relay.right_shift(uop_9789.astype('uint16'), relay.reshape(call_9774.astype('uint16'), relay.shape_of(uop_9789))) # shape=(4, 120)
bop_9808 = relay.right_shift(uop_9789.astype('uint16'), relay.reshape(call_9776.astype('uint16'), relay.shape_of(uop_9789))) # shape=(4, 120)
bop_9811 = relay.logical_and(bop_9805.astype('bool'), relay.reshape(uop_9782.astype('bool'), relay.shape_of(bop_9805))) # shape=(4, 120)
bop_9814 = relay.logical_and(bop_9808.astype('bool'), relay.reshape(uop_9782.astype('bool'), relay.shape_of(bop_9808))) # shape=(4, 120)
output = relay.Tuple([call_9767,call_9796,var_9797,bop_9811,])
output2 = relay.Tuple([call_9768,call_9798,var_9797,bop_9814,])
func_9815 = relay.Function([var_9797,], output)
mod['func_9815'] = func_9815
mod = relay.transform.InferType()(mod)
var_9816 = relay.var("var_9816", dtype = "uint16", shape = (60,))#candidate|9816|(60,)|var|uint16
output = func_9815(var_9816)
func_9817 = relay.Function([var_9816], output)
mutated_mod['func_9817'] = func_9817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7159_call = mod.get_global_var('func_7159')
func_7160_call = mutated_mod.get_global_var('func_7160')
call_9819 = func_7159_call()
call_9820 = func_7159_call()
func_9379_call = mod.get_global_var('func_9379')
func_9382_call = mutated_mod.get_global_var('func_9382')
const_9837 = relay.const([[1.670589,-6.032005,-3.904280,-1.514442,5.982241,1.167257,7.215396,-3.207226,-3.773682,3.283438,-8.141622,6.431482,-4.368813,-9.868298,4.486961,-8.766119,1.557783,4.140934,6.793456,9.221425,-6.302557,-8.453627,-9.373771,6.235093,2.633180,-2.315224,5.463025,8.716185,-3.428437,-0.781168,1.692202,-4.451523,2.716035,6.315041,-6.177508,-4.236902,2.336821,-0.553760,5.432642,-3.164842,-7.995846,-8.463379,-9.313678,-8.313604,-7.000633,-3.212531,3.733413,-4.363007,-0.968975,6.801859,0.178613,8.537692,-1.442158,-1.020022,7.048393,-4.060181,6.509601,5.175057,-0.508074,-4.170502,-5.675645,0.046090,-0.111210,7.259901,1.839863,7.528550,-6.056536,8.802629,-8.327481,-8.288935,-5.139746,-7.961056,-3.719481,3.260035,8.973232,0.820465,-4.191805,5.383021,-7.717087,6.355066,2.483237,-5.324054,-6.661343,-7.578750,-1.919747,-1.080268,9.423097,-5.653473,8.968473,-6.316193,-3.568570,-0.421842,-4.878560,5.900843,-8.895093,-8.262689,0.579922,8.314387,-1.940145,-4.012709,6.634483,5.338998,5.822128,-0.930499,4.795321,9.919084,-9.203042,-2.941454,6.150927,3.472009,7.763588,8.948499,2.502405,-4.722746,-4.583784,-2.360388,0.484031,-9.309541,5.751678,2.010399,-0.702367,-4.341816,2.532205,2.181121,-3.551519,-2.955251,3.852758,-7.627961,9.011536,-2.715171,-2.503220,1.992295,8.898121,-4.648250,-9.856241,0.747291,2.044957,3.710057,2.099650,9.037967,4.632198,7.331831,-8.278453,3.519026,-2.823129,4.577897,-6.327722,-2.171619,3.751756,4.992474,8.519546,-5.479914,-7.544032,4.452933,-2.522911,-0.883820,-4.180299,-2.647843,5.078739,-3.855766,-4.254348,-9.091764,-9.349661,-2.591446,-4.961674,1.934680,-3.650399,-5.510025],[1.701501,-2.901174,-7.611652,-9.389281,-4.935969,4.103594,-9.542803,9.235333,-3.672781,-5.141325,9.164832,-1.253043,-0.638837,3.047794,5.642335,5.401868,4.143738,-7.714699,-5.352884,-5.163849,-3.495884,8.699954,-2.406900,0.294104,-2.454286,0.352440,-0.612027,9.661206,-9.491319,3.654211,-1.140528,-6.207228,9.716621,-6.158009,5.332562,-5.199826,-9.500169,0.165318,0.436308,5.327631,-5.996493,4.353742,-3.567942,0.795448,2.955147,-9.277780,1.520389,5.313571,-7.227157,2.815227,-1.246723,8.181288,4.243046,1.898308,5.757937,-2.884637,-9.174443,-9.725195,2.393637,3.332462,-9.547545,-4.039192,-1.873688,-8.589912,9.059556,3.746290,-0.070446,9.293853,2.459029,-7.754863,1.348279,-8.243066,-3.215040,7.044776,-8.589269,-9.177592,-9.689815,-2.970393,-9.235147,5.592849,-6.124963,0.232579,4.353934,-0.563991,-8.487335,8.841155,-2.690559,1.713185,-2.589890,-3.207324,9.113151,-0.837426,8.892580,-9.555068,3.272423,-3.498441,-8.521393,-3.779023,-3.053464,-8.176827,1.905385,-1.484464,9.791830,-8.818790,-4.927164,-9.818177,8.988481,-0.797778,-9.637343,-5.736614,-5.920283,5.316713,8.517247,0.358551,6.960114,-7.670219,8.345328,-0.590879,-7.176294,3.503158,3.620806,-7.703096,-6.739703,6.464730,5.126196,-3.611519,-1.501231,5.842847,-0.018774,0.730157,-2.139341,-8.652843,1.605802,8.515975,-7.588328,-2.467791,-1.736803,-6.039844,4.374933,7.438374,-6.547716,2.563242,-9.485742,-4.769660,6.621890,-3.172235,7.683071,0.993113,1.378086,-2.997552,6.025500,2.037412,6.417676,-7.910939,0.371114,8.950829,-8.475666,8.376659,7.596505,4.621854,9.160703,8.372925,-4.156992,6.592199,1.515083,8.595180,9.138254,-9.051848]], dtype = "float32")#candidate|9837|(2, 168)|const|float32
call_9836 = func_9379_call(relay.reshape(const_9837.astype('float32'), [4, 6, 14]))
call_9838 = func_9379_call(relay.reshape(const_9837.astype('float32'), [4, 6, 14]))
output = relay.Tuple([call_9819,call_9836,const_9837,])
output2 = relay.Tuple([call_9820,call_9838,const_9837,])
func_9841 = relay.Function([], output)
mod['func_9841'] = func_9841
mod = relay.transform.InferType()(mod)
mutated_mod['func_9841'] = func_9841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9841_call = mutated_mod.get_global_var('func_9841')
call_9842 = func_9841_call()
output = call_9842
func_9843 = relay.Function([], output)
mutated_mod['func_9843'] = func_9843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6492_call = mod.get_global_var('func_6492')
func_6493_call = mutated_mod.get_global_var('func_6493')
call_9844 = func_6492_call()
call_9845 = func_6492_call()
func_6709_call = mod.get_global_var('func_6709')
func_6711_call = mutated_mod.get_global_var('func_6711')
call_9879 = relay.TupleGetItem(func_6709_call(), 2)
call_9880 = relay.TupleGetItem(func_6711_call(), 2)
output = relay.Tuple([call_9844,call_9879,])
output2 = relay.Tuple([call_9845,call_9880,])
func_9881 = relay.Function([], output)
mod['func_9881'] = func_9881
mod = relay.transform.InferType()(mod)
mutated_mod['func_9881'] = func_9881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9881_call = mutated_mod.get_global_var('func_9881')
call_9882 = func_9881_call()
output = call_9882
func_9883 = relay.Function([], output)
mutated_mod['func_9883'] = func_9883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8709_call = mod.get_global_var('func_8709')
func_8710_call = mutated_mod.get_global_var('func_8710')
call_9891 = relay.TupleGetItem(func_8709_call(), 0)
call_9892 = relay.TupleGetItem(func_8710_call(), 0)
uop_9906 = relay.log10(call_9891.astype('float32')) # shape=(56, 8)
uop_9908 = relay.log10(call_9892.astype('float32')) # shape=(56, 8)
func_7854_call = mod.get_global_var('func_7854')
func_7857_call = mutated_mod.get_global_var('func_7857')
var_9923 = relay.var("var_9923", dtype = "float32", shape = (585,))#candidate|9923|(585,)|var|float32
call_9922 = relay.TupleGetItem(func_7854_call(relay.reshape(var_9923.astype('float32'), [13, 15, 3])), 0)
call_9924 = relay.TupleGetItem(func_7857_call(relay.reshape(var_9923.astype('float32'), [13, 15, 3])), 0)
bop_9928 = relay.subtract(var_9923.astype('uint16'), relay.reshape(call_9922.astype('uint16'), relay.shape_of(var_9923))) # shape=(585,)
bop_9931 = relay.subtract(var_9923.astype('uint16'), relay.reshape(call_9924.astype('uint16'), relay.shape_of(var_9923))) # shape=(585,)
func_9109_call = mod.get_global_var('func_9109')
func_9110_call = mutated_mod.get_global_var('func_9110')
call_9935 = func_9109_call()
call_9936 = func_9109_call()
output = relay.Tuple([uop_9906,bop_9928,call_9935,])
output2 = relay.Tuple([uop_9908,bop_9931,call_9936,])
func_9937 = relay.Function([var_9923,], output)
mod['func_9937'] = func_9937
mod = relay.transform.InferType()(mod)
var_9938 = relay.var("var_9938", dtype = "float32", shape = (585,))#candidate|9938|(585,)|var|float32
output = func_9937(var_9938)
func_9939 = relay.Function([var_9938], output)
mutated_mod['func_9939'] = func_9939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7517_call = mod.get_global_var('func_7517')
func_7518_call = mutated_mod.get_global_var('func_7518')
call_9957 = relay.TupleGetItem(func_7517_call(), 4)
call_9958 = relay.TupleGetItem(func_7518_call(), 4)
output = call_9957
output2 = call_9958
func_9971 = relay.Function([], output)
mod['func_9971'] = func_9971
mod = relay.transform.InferType()(mod)
output = func_9971()
func_9972 = relay.Function([], output)
mutated_mod['func_9972'] = func_9972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8377_call = mod.get_global_var('func_8377')
func_8378_call = mutated_mod.get_global_var('func_8378')
call_9975 = relay.TupleGetItem(func_8377_call(), 0)
call_9976 = relay.TupleGetItem(func_8378_call(), 0)
output = relay.Tuple([call_9975,])
output2 = relay.Tuple([call_9976,])
func_9978 = relay.Function([], output)
mod['func_9978'] = func_9978
mod = relay.transform.InferType()(mod)
mutated_mod['func_9978'] = func_9978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9978_call = mutated_mod.get_global_var('func_9978')
call_9979 = func_9978_call()
output = call_9979
func_9980 = relay.Function([], output)
mutated_mod['func_9980'] = func_9980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6600_call = mod.get_global_var('func_6600')
func_6602_call = mutated_mod.get_global_var('func_6602')
call_10053 = func_6600_call()
call_10054 = func_6600_call()
output = relay.Tuple([call_10053,])
output2 = relay.Tuple([call_10054,])
func_10061 = relay.Function([], output)
mod['func_10061'] = func_10061
mod = relay.transform.InferType()(mod)
mutated_mod['func_10061'] = func_10061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10061_call = mutated_mod.get_global_var('func_10061')
call_10062 = func_10061_call()
output = call_10062
func_10063 = relay.Function([], output)
mutated_mod['func_10063'] = func_10063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8025_call = mod.get_global_var('func_8025')
func_8027_call = mutated_mod.get_global_var('func_8027')
call_10086 = relay.TupleGetItem(func_8025_call(), 1)
call_10087 = relay.TupleGetItem(func_8027_call(), 1)
output = call_10086
output2 = call_10087
func_10088 = relay.Function([], output)
mod['func_10088'] = func_10088
mod = relay.transform.InferType()(mod)
mutated_mod['func_10088'] = func_10088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10088_call = mutated_mod.get_global_var('func_10088')
call_10089 = func_10088_call()
output = call_10089
func_10090 = relay.Function([], output)
mutated_mod['func_10090'] = func_10090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6734_call = mod.get_global_var('func_6734')
func_6735_call = mutated_mod.get_global_var('func_6735')
call_10141 = relay.TupleGetItem(func_6734_call(), 0)
call_10142 = relay.TupleGetItem(func_6735_call(), 0)
var_10143 = relay.var("var_10143", dtype = "float64", shape = (16, 7, 5))#candidate|10143|(16, 7, 5)|var|float64
bop_10144 = relay.logical_or(call_10141.astype('bool'), var_10143.astype('bool')) # shape=(16, 7, 5)
bop_10147 = relay.logical_or(call_10142.astype('bool'), var_10143.astype('bool')) # shape=(16, 7, 5)
output = relay.Tuple([bop_10144,])
output2 = relay.Tuple([bop_10147,])
func_10154 = relay.Function([var_10143,], output)
mod['func_10154'] = func_10154
mod = relay.transform.InferType()(mod)
mutated_mod['func_10154'] = func_10154
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10155 = relay.var("var_10155", dtype = "float64", shape = (16, 7, 5))#candidate|10155|(16, 7, 5)|var|float64
func_10154_call = mutated_mod.get_global_var('func_10154')
call_10156 = func_10154_call(var_10155)
output = call_10156
func_10157 = relay.Function([var_10155], output)
mutated_mod['func_10157'] = func_10157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6734_call = mod.get_global_var('func_6734')
func_6735_call = mutated_mod.get_global_var('func_6735')
call_10159 = relay.TupleGetItem(func_6734_call(), 1)
call_10160 = relay.TupleGetItem(func_6735_call(), 1)
func_6734_call = mod.get_global_var('func_6734')
func_6735_call = mutated_mod.get_global_var('func_6735')
call_10163 = relay.TupleGetItem(func_6734_call(), 0)
call_10164 = relay.TupleGetItem(func_6735_call(), 0)
func_7655_call = mod.get_global_var('func_7655')
func_7656_call = mutated_mod.get_global_var('func_7656')
call_10172 = func_7655_call()
call_10173 = func_7655_call()
bop_10204 = relay.maximum(call_10163.astype('uint8'), relay.reshape(call_10159.astype('uint8'), relay.shape_of(call_10163))) # shape=(16, 1, 5)
bop_10207 = relay.maximum(call_10164.astype('uint8'), relay.reshape(call_10160.astype('uint8'), relay.shape_of(call_10164))) # shape=(16, 1, 5)
output = relay.Tuple([call_10172,bop_10204,])
output2 = relay.Tuple([call_10173,bop_10207,])
func_10214 = relay.Function([], output)
mod['func_10214'] = func_10214
mod = relay.transform.InferType()(mod)
output = func_10214()
func_10215 = relay.Function([], output)
mutated_mod['func_10215'] = func_10215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9971_call = mod.get_global_var('func_9971')
func_9972_call = mutated_mod.get_global_var('func_9972')
call_10232 = func_9971_call()
call_10233 = func_9971_call()
output = call_10232
output2 = call_10233
func_10234 = relay.Function([], output)
mod['func_10234'] = func_10234
mod = relay.transform.InferType()(mod)
mutated_mod['func_10234'] = func_10234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10234_call = mutated_mod.get_global_var('func_10234')
call_10235 = func_10234_call()
output = call_10235
func_10236 = relay.Function([], output)
mutated_mod['func_10236'] = func_10236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6114_call = mod.get_global_var('func_6114')
func_6115_call = mutated_mod.get_global_var('func_6115')
call_10250 = relay.TupleGetItem(func_6114_call(), 0)
call_10251 = relay.TupleGetItem(func_6115_call(), 0)
output = relay.Tuple([call_10250,])
output2 = relay.Tuple([call_10251,])
func_10257 = relay.Function([], output)
mod['func_10257'] = func_10257
mod = relay.transform.InferType()(mod)
output = func_10257()
func_10258 = relay.Function([], output)
mutated_mod['func_10258'] = func_10258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9013_call = mod.get_global_var('func_9013')
func_9015_call = mutated_mod.get_global_var('func_9015')
call_10346 = relay.TupleGetItem(func_9013_call(), 0)
call_10347 = relay.TupleGetItem(func_9015_call(), 0)
output = call_10346
output2 = call_10347
func_10350 = relay.Function([], output)
mod['func_10350'] = func_10350
mod = relay.transform.InferType()(mod)
output = func_10350()
func_10351 = relay.Function([], output)
mutated_mod['func_10351'] = func_10351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9568_call = mod.get_global_var('func_9568')
func_9570_call = mutated_mod.get_global_var('func_9570')
call_10403 = relay.TupleGetItem(func_9568_call(), 0)
call_10404 = relay.TupleGetItem(func_9570_call(), 0)
output = call_10403
output2 = call_10404
func_10405 = relay.Function([], output)
mod['func_10405'] = func_10405
mod = relay.transform.InferType()(mod)
output = func_10405()
func_10406 = relay.Function([], output)
mutated_mod['func_10406'] = func_10406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9672_call = mod.get_global_var('func_9672')
func_9673_call = mutated_mod.get_global_var('func_9673')
call_10443 = relay.TupleGetItem(func_9672_call(), 4)
call_10444 = relay.TupleGetItem(func_9673_call(), 4)
const_10449 = relay.const([[[3.736957,5.023517,-2.467058,-8.609126,-4.121315],[0.352162,7.771068,-6.081670,8.800037,-2.761992],[-2.173544,-0.340138,0.014055,-9.840696,-1.128468],[-5.928772,-3.188672,3.193998,0.418117,-5.056491],[2.468429,-5.231397,3.868364,3.583783,-0.677475],[8.793550,8.325530,1.990296,-2.425698,-1.102015]],[[2.492236,-0.193851,6.191743,-0.401219,4.047853],[-9.689827,-2.011147,3.829093,6.910347,6.138222],[9.224744,-1.963746,-5.546487,5.801078,5.775488],[7.803419,-8.033870,2.441019,-0.779852,-4.707101],[-6.973642,-9.311416,-0.536874,-9.077055,-9.858947],[3.428836,-4.492835,0.357831,8.238506,1.192442]],[[-8.057926,0.057561,-3.063907,-6.018842,6.361894],[7.411675,6.857126,-9.717050,3.928890,6.831357],[-8.071861,8.529360,-9.101353,-8.605593,1.734336],[9.301431,-6.708533,2.270966,0.870094,6.362513],[-5.229373,-5.534489,8.407998,6.883513,0.018785],[-2.221155,-9.718398,-2.259810,-5.604405,-2.407076]],[[-3.574709,-8.769743,2.472554,6.204787,3.832025],[6.832574,7.363884,-0.096952,-4.855848,-0.827194],[-0.163289,-1.223520,-4.174771,-8.734978,8.895143],[8.717187,-6.286804,-4.950559,2.332155,-2.624546],[5.009665,-6.170454,0.658300,6.863328,0.362105],[8.102420,-7.874504,-9.533278,-0.703310,-7.031998]],[[6.921852,5.934037,7.566299,9.209427,1.272818],[7.295282,5.601479,-1.795637,-2.892823,4.067818],[8.327405,-4.298511,-4.466551,-5.879417,1.245129],[-8.751607,-4.962908,-0.894314,9.354947,-3.834048],[9.477061,7.985972,-9.618834,3.276507,5.170008],[-1.965149,7.303898,3.593543,0.620388,-1.039522]],[[-4.068305,4.567822,-9.342010,-1.696050,-7.540876],[-5.062723,-0.771730,-8.849936,7.094854,-1.614295],[-6.623423,3.399224,0.429471,2.470331,3.577329],[7.049403,-3.515562,-2.328438,-2.878083,9.240779],[-2.764097,-0.167777,1.412165,9.590851,-8.981622],[-9.548620,-8.919993,-6.614481,-5.335443,-3.857278]],[[8.478545,9.191256,-1.085984,-1.621742,-1.278508],[7.642910,6.746967,9.137456,8.225039,-1.176835],[-8.987196,-3.508878,-5.865318,-3.302016,4.160888],[-5.026056,-0.156041,-0.305444,-9.833498,5.616761],[-1.072758,6.075895,-7.149489,7.637529,2.822963],[5.325611,-3.622036,-2.877744,-6.018831,9.128960]],[[2.333134,-8.398729,7.706301,-0.243706,3.559298],[-8.175654,2.527919,-1.302768,-9.670654,0.641105],[2.758899,-2.993081,-9.239234,-2.180487,5.337032],[-2.758528,-9.171474,5.515137,-5.715546,9.988781],[2.070915,6.148587,3.562235,3.264772,1.613961],[4.815826,4.893172,-2.344734,-7.283118,2.407660]],[[-3.181022,-8.001553,-8.920787,-5.496801,4.505743],[1.117417,8.315384,4.128576,-4.289335,4.243081],[5.189714,-8.148407,-3.215205,3.803530,4.335748],[-6.185647,-6.792606,-2.615628,-4.074128,6.876808],[-7.780298,4.200428,-0.452547,-0.083374,6.581194],[-0.502153,-4.158714,4.562868,-5.384962,4.228258]],[[4.008111,3.378548,-3.236781,3.533306,5.773244],[0.139051,4.408998,4.882620,9.435232,-9.511207],[5.580946,-8.181412,0.863068,-2.041330,-4.086885],[9.827971,-5.045876,1.457487,8.153276,4.243516],[-7.232000,-9.719813,8.135058,5.836240,-1.800850],[0.962887,-2.714949,3.294133,-6.484019,1.638827]],[[-1.780314,-2.015974,-5.307775,9.983763,-5.586868],[-9.886394,6.575815,-9.425178,-7.522975,-8.616081],[7.910081,1.682919,7.782394,2.656693,-1.226541],[-1.821063,-2.135808,7.207491,-3.727267,-4.050342],[-8.549638,4.241980,1.149752,-8.108368,5.378211],[-7.084832,9.291801,3.717146,9.593686,-2.964260]],[[1.868445,-5.908151,6.033721,-2.666593,-4.841642],[5.314670,1.755061,1.235529,-5.582137,1.611272],[-1.602250,3.560622,3.239846,-2.998301,4.885536],[-9.975866,5.255904,-1.294249,7.960481,-6.975043],[3.789914,-4.313233,0.600500,-9.613560,2.713974],[7.219463,3.806558,2.493631,8.537242,0.208482]],[[-9.591789,-8.316183,-3.182486,7.740620,3.161836],[-6.486727,6.970432,-9.661683,-0.149302,-3.558847],[-8.103781,9.387899,-8.379650,-6.020525,-6.582543],[2.468902,4.888174,-6.226248,-3.363448,5.340445],[1.441586,9.837815,-3.489748,9.540858,-9.237296],[9.391148,-2.789343,-1.278382,2.824117,-5.461821]],[[7.797454,6.714329,2.746766,-1.652847,9.475701],[-7.462962,0.326151,7.860290,0.882576,-4.373395],[-7.682163,-5.599459,-1.717113,-6.478491,3.111617],[8.728025,-0.756224,0.197126,-7.495341,7.278236],[-5.763363,6.401891,3.809439,1.017701,0.831481],[-0.355370,3.122809,-7.628999,-5.237943,-6.457562]],[[-7.485980,-4.442425,-7.828411,-9.975310,8.591245],[-7.949847,5.741312,-1.752584,-1.523731,9.010674],[8.641491,9.382135,-9.945953,6.075876,-1.849826],[-7.699727,4.589000,8.380203,9.960985,2.896498],[-5.158219,-4.226843,4.618072,-3.983710,-0.860163],[7.526744,-6.866145,6.319812,9.983581,1.664278]],[[-5.390704,-0.452168,-1.733101,5.482685,5.088439],[-9.468819,-6.219089,-4.142119,1.153952,1.853533],[-5.145981,-9.768563,5.706510,-6.103512,-4.315356],[2.705263,2.683929,-7.631044,6.829458,1.336582],[-6.855849,-2.469877,-6.873254,-3.017020,-2.063757],[-7.323691,2.461576,8.202905,-7.715660,8.843277]]], dtype = "float64")#candidate|10449|(16, 6, 5)|const|float64
bop_10450 = relay.maximum(call_10443.astype('float64'), const_10449.astype('float64')) # shape=(16, 6, 5)
bop_10453 = relay.maximum(call_10444.astype('float64'), const_10449.astype('float64')) # shape=(16, 6, 5)
var_10457 = relay.var("var_10457", dtype = "float64", shape = (16, 4, 5))#candidate|10457|(16, 4, 5)|var|float64
bop_10458 = relay.multiply(call_10443.astype('int16'), var_10457.astype('int16')) # shape=(16, 4, 5)
bop_10461 = relay.multiply(call_10444.astype('int16'), var_10457.astype('int16')) # shape=(16, 4, 5)
output = relay.Tuple([bop_10450,bop_10458,])
output2 = relay.Tuple([bop_10453,bop_10461,])
func_10495 = relay.Function([var_10457,], output)
mod['func_10495'] = func_10495
mod = relay.transform.InferType()(mod)
mutated_mod['func_10495'] = func_10495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10496 = relay.var("var_10496", dtype = "float64", shape = (16, 4, 5))#candidate|10496|(16, 4, 5)|var|float64
func_10495_call = mutated_mod.get_global_var('func_10495')
call_10497 = func_10495_call(var_10496)
output = call_10497
func_10498 = relay.Function([var_10496], output)
mutated_mod['func_10498'] = func_10498
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10516 = relay.var("var_10516", dtype = "float64", shape = ())#candidate|10516|()|var|float64
var_10517 = relay.var("var_10517", dtype = "float64", shape = (1, 5))#candidate|10517|(1, 5)|var|float64
bop_10518 = relay.equal(var_10516.astype('bool'), var_10517.astype('bool')) # shape=(1, 5)
output = bop_10518
output2 = bop_10518
func_10527 = relay.Function([var_10516,var_10517,], output)
mod['func_10527'] = func_10527
mod = relay.transform.InferType()(mod)
mutated_mod['func_10527'] = func_10527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10527_call = mutated_mod.get_global_var('func_10527')
var_10529 = relay.var("var_10529", dtype = "float64", shape = ())#candidate|10529|()|var|float64
var_10530 = relay.var("var_10530", dtype = "float64", shape = (1, 5))#candidate|10530|(1, 5)|var|float64
call_10528 = func_10527_call(var_10529,var_10530,)
output = call_10528
func_10531 = relay.Function([var_10529,var_10530,], output)
mutated_mod['func_10531'] = func_10531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10234_call = mod.get_global_var('func_10234')
func_10236_call = mutated_mod.get_global_var('func_10236')
call_10572 = func_10234_call()
call_10573 = func_10234_call()
output = call_10572
output2 = call_10573
func_10580 = relay.Function([], output)
mod['func_10580'] = func_10580
mod = relay.transform.InferType()(mod)
mutated_mod['func_10580'] = func_10580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10580_call = mutated_mod.get_global_var('func_10580')
call_10581 = func_10580_call()
output = call_10581
func_10582 = relay.Function([], output)
mutated_mod['func_10582'] = func_10582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7517_call = mod.get_global_var('func_7517')
func_7518_call = mutated_mod.get_global_var('func_7518')
call_10606 = relay.TupleGetItem(func_7517_call(), 2)
call_10607 = relay.TupleGetItem(func_7518_call(), 2)
output = call_10606
output2 = call_10607
func_10614 = relay.Function([], output)
mod['func_10614'] = func_10614
mod = relay.transform.InferType()(mod)
mutated_mod['func_10614'] = func_10614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10614_call = mutated_mod.get_global_var('func_10614')
call_10615 = func_10614_call()
output = call_10615
func_10616 = relay.Function([], output)
mutated_mod['func_10616'] = func_10616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6600_call = mod.get_global_var('func_6600')
func_6602_call = mutated_mod.get_global_var('func_6602')
call_10632 = func_6600_call()
call_10633 = func_6600_call()
func_10495_call = mod.get_global_var('func_10495')
func_10498_call = mutated_mod.get_global_var('func_10498')
var_10644 = relay.var("var_10644", dtype = "float64", shape = (2, 160))#candidate|10644|(2, 160)|var|float64
call_10643 = relay.TupleGetItem(func_10495_call(relay.reshape(var_10644.astype('float64'), [16, 4, 5])), 0)
call_10645 = relay.TupleGetItem(func_10498_call(relay.reshape(var_10644.astype('float64'), [16, 4, 5])), 0)
func_6756_call = mod.get_global_var('func_6756')
func_6757_call = mutated_mod.get_global_var('func_6757')
call_10675 = relay.TupleGetItem(func_6756_call(), 0)
call_10676 = relay.TupleGetItem(func_6757_call(), 0)
uop_10705 = relay.sinh(var_10644.astype('float64')) # shape=(2, 160)
output = relay.Tuple([call_10632,call_10643,call_10675,uop_10705,])
output2 = relay.Tuple([call_10633,call_10645,call_10676,uop_10705,])
func_10707 = relay.Function([var_10644,], output)
mod['func_10707'] = func_10707
mod = relay.transform.InferType()(mod)
var_10708 = relay.var("var_10708", dtype = "float64", shape = (2, 160))#candidate|10708|(2, 160)|var|float64
output = func_10707(var_10708)
func_10709 = relay.Function([var_10708], output)
mutated_mod['func_10709'] = func_10709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10614_call = mod.get_global_var('func_10614')
func_10616_call = mutated_mod.get_global_var('func_10616')
call_10730 = func_10614_call()
call_10731 = func_10614_call()
func_8147_call = mod.get_global_var('func_8147')
func_8150_call = mutated_mod.get_global_var('func_8150')
var_10734 = relay.var("var_10734", dtype = "int8", shape = (11,))#candidate|10734|(11,)|var|int8
call_10733 = relay.TupleGetItem(func_8147_call(relay.reshape(var_10734.astype('int8'), [11,])), 0)
call_10735 = relay.TupleGetItem(func_8150_call(relay.reshape(var_10734.astype('int8'), [11,])), 0)
func_6248_call = mod.get_global_var('func_6248')
func_6251_call = mutated_mod.get_global_var('func_6251')
call_10736 = relay.TupleGetItem(func_6248_call(relay.reshape(call_10730.astype('bool'), [24,])), 6)
call_10737 = relay.TupleGetItem(func_6251_call(relay.reshape(call_10730.astype('bool'), [24,])), 6)
output = relay.Tuple([call_10730,call_10733,var_10734,call_10736,])
output2 = relay.Tuple([call_10731,call_10735,var_10734,call_10737,])
func_10738 = relay.Function([var_10734,], output)
mod['func_10738'] = func_10738
mod = relay.transform.InferType()(mod)
mutated_mod['func_10738'] = func_10738
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10739 = relay.var("var_10739", dtype = "int8", shape = (11,))#candidate|10739|(11,)|var|int8
func_10738_call = mutated_mod.get_global_var('func_10738')
call_10740 = func_10738_call(var_10739)
output = call_10740
func_10741 = relay.Function([var_10739], output)
mutated_mod['func_10741'] = func_10741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6114_call = mod.get_global_var('func_6114')
func_6115_call = mutated_mod.get_global_var('func_6115')
call_10769 = relay.TupleGetItem(func_6114_call(), 0)
call_10770 = relay.TupleGetItem(func_6115_call(), 0)
func_6492_call = mod.get_global_var('func_6492')
func_6493_call = mutated_mod.get_global_var('func_6493')
call_10797 = func_6492_call()
call_10798 = func_6492_call()
func_8007_call = mod.get_global_var('func_8007')
func_8008_call = mutated_mod.get_global_var('func_8008')
call_10805 = func_8007_call()
call_10806 = func_8007_call()
output = relay.Tuple([call_10769,call_10797,call_10805,])
output2 = relay.Tuple([call_10770,call_10798,call_10806,])
func_10817 = relay.Function([], output)
mod['func_10817'] = func_10817
mod = relay.transform.InferType()(mod)
mutated_mod['func_10817'] = func_10817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10817_call = mutated_mod.get_global_var('func_10817')
call_10818 = func_10817_call()
output = call_10818
func_10819 = relay.Function([], output)
mutated_mod['func_10819'] = func_10819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9881_call = mod.get_global_var('func_9881')
func_9883_call = mutated_mod.get_global_var('func_9883')
call_10833 = relay.TupleGetItem(func_9881_call(), 1)
call_10834 = relay.TupleGetItem(func_9883_call(), 1)
func_8405_call = mod.get_global_var('func_8405')
func_8408_call = mutated_mod.get_global_var('func_8408')
var_10852 = relay.var("var_10852", dtype = "float64", shape = (480,))#candidate|10852|(480,)|var|float64
call_10851 = relay.TupleGetItem(func_8405_call(relay.reshape(var_10852.astype('float64'), [12, 8, 5])), 0)
call_10853 = relay.TupleGetItem(func_8408_call(relay.reshape(var_10852.astype('float64'), [12, 8, 5])), 0)
var_10863 = relay.var("var_10863", dtype = "float32", shape = (12, 32))#candidate|10863|(12, 32)|var|float32
bop_10864 = relay.right_shift(call_10833.astype('int16'), relay.reshape(var_10863.astype('int16'), relay.shape_of(call_10833))) # shape=(12, 32)
bop_10867 = relay.right_shift(call_10834.astype('int16'), relay.reshape(var_10863.astype('int16'), relay.shape_of(call_10834))) # shape=(12, 32)
func_8457_call = mod.get_global_var('func_8457')
func_8459_call = mutated_mod.get_global_var('func_8459')
call_10890 = relay.TupleGetItem(func_8457_call(), 0)
call_10891 = relay.TupleGetItem(func_8459_call(), 0)
bop_10912 = relay.maximum(var_10863.astype('int16'), relay.reshape(call_10833.astype('int16'), relay.shape_of(var_10863))) # shape=(12, 32)
bop_10915 = relay.maximum(var_10863.astype('int16'), relay.reshape(call_10834.astype('int16'), relay.shape_of(var_10863))) # shape=(12, 32)
func_9163_call = mod.get_global_var('func_9163')
func_9167_call = mutated_mod.get_global_var('func_9167')
const_10927 = relay.const(8.320854, dtype = "float64")#candidate|10927|()|const|float64
call_10926 = relay.TupleGetItem(func_9163_call(relay.reshape(call_10833.astype('float64'), [12, 32]), relay.reshape(const_10927.astype('float64'), []), ), 3)
call_10928 = relay.TupleGetItem(func_9167_call(relay.reshape(call_10833.astype('float64'), [12, 32]), relay.reshape(const_10927.astype('float64'), []), ), 3)
output = relay.Tuple([call_10851,var_10852,bop_10864,call_10890,bop_10912,call_10926,const_10927,])
output2 = relay.Tuple([call_10853,var_10852,bop_10867,call_10891,bop_10915,call_10928,const_10927,])
func_10932 = relay.Function([var_10852,var_10863,], output)
mod['func_10932'] = func_10932
mod = relay.transform.InferType()(mod)
var_10933 = relay.var("var_10933", dtype = "float64", shape = (480,))#candidate|10933|(480,)|var|float64
var_10934 = relay.var("var_10934", dtype = "float32", shape = (12, 32))#candidate|10934|(12, 32)|var|float32
output = func_10932(var_10933,var_10934,)
func_10935 = relay.Function([var_10933,var_10934,], output)
mutated_mod['func_10935'] = func_10935
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10986 = relay.var("var_10986", dtype = "float32", shape = (15, 9, 10))#candidate|10986|(15, 9, 10)|var|float32
uop_10987 = relay.log10(var_10986.astype('float32')) # shape=(15, 9, 10)
func_6547_call = mod.get_global_var('func_6547')
func_6549_call = mutated_mod.get_global_var('func_6549')
const_11000 = relay.const([[-9.991202,-6.780222,9.937212,6.955908,-8.997575,5.174579,8.780389,-7.253600,5.422364,-6.482015,7.916153,-4.648354,-1.771418,2.300064,9.216128,5.632871,-4.198795,-6.044052,6.355501,-0.272193,7.718821,0.999218,-7.763945,-6.278211,3.984271,8.406259,-2.634773,-4.126722,5.332138,-7.361225,1.794369,-4.161955,9.420926,8.145605,8.208666,8.015130,-4.982480,3.463426,-9.047149,-4.793718,-8.320197,-8.196243,-0.539179,9.601242,-3.785520,-3.906744,9.585275,5.254422,4.951581,-0.747831,-2.093641,-9.631352,-6.748622,9.862610,0.523201,-9.806070,0.073458,-2.231567,1.804437,-7.596974],[2.935822,4.874342,5.673446,-9.823429,-2.497687,4.154230,-5.705141,0.365841,0.524485,4.670470,-0.200424,7.893413,-4.631081,6.323773,8.701854,3.453023,-3.704656,-3.383522,2.596590,8.228572,0.496654,-3.573404,-9.452492,-4.426547,-8.509218,-9.536942,6.463283,-1.011934,5.088857,-3.450705,2.413170,-3.257703,-1.014701,-6.768474,0.990386,8.143970,-7.457594,-2.847846,2.953426,3.845048,-4.209813,0.838496,2.031044,3.536001,0.724005,8.369667,9.234372,8.145806,-8.579903,7.216747,9.274031,-0.445528,-9.733416,-0.350937,1.657621,2.120389,3.066339,-1.939366,-5.719450,4.610640],[7.709821,2.341993,-6.853197,-0.089793,-1.306070,-4.417221,2.656949,4.096538,5.029588,1.410218,2.450762,-2.409855,3.402366,9.218796,-5.677504,-2.342827,-7.542703,-2.536351,-1.085485,8.192993,-7.222897,-4.784049,6.848104,8.778495,9.816437,2.494759,4.540064,5.452565,-0.474657,4.137841,6.040877,-5.735015,2.098354,5.194938,-2.340270,-8.640897,-2.790721,-4.748777,-1.877779,6.026576,-3.833948,4.634083,-7.023209,8.884892,2.106362,-8.429578,-0.863426,-2.276374,4.279960,6.315386,2.471090,6.216303,-8.050939,7.268829,1.538426,-5.743868,5.857377,-6.571635,-3.167262,4.650992],[-9.380810,-7.536947,-3.403469,-6.830179,-2.203429,6.132568,9.639216,-4.984412,-4.029742,-6.170774,-9.646243,-6.362525,-6.153436,9.448445,-5.998140,8.736801,-8.195786,6.068279,-7.378193,5.962816,2.467170,-5.414272,2.519170,-3.776502,-0.623726,8.109671,8.185342,5.176256,-5.095580,-9.811735,6.316387,3.164732,3.411519,-9.436464,-7.526556,8.586716,7.334820,-2.771339,-0.756540,-6.404537,-8.557321,6.913444,3.125672,1.516579,0.402734,-3.131805,4.891840,7.154343,-8.963979,4.130205,2.484195,-4.236008,-6.238808,8.178222,9.613728,-4.082773,7.148495,9.426242,-4.492362,1.670727],[-5.746792,-8.239425,5.027854,5.055288,8.968889,9.297120,3.438865,4.489347,-9.806732,-5.567422,5.204286,3.377536,-8.703826,1.808550,-4.114218,-5.412909,1.208440,-1.200390,-8.038162,-0.873862,-8.331158,-3.947467,-3.947200,-9.876688,-2.383223,-5.882635,8.166688,0.410953,4.268525,-7.797182,7.226088,-4.396202,0.851207,8.242684,-4.353698,8.631988,4.212287,-1.593557,-1.027158,1.717777,4.536235,-0.624472,9.319439,-7.401040,-2.134849,-8.113101,-0.727368,-9.111840,-9.271971,4.769989,-8.700958,8.971359,2.204142,1.639311,-1.817835,-5.551805,-2.568057,-5.987271,-5.923148,-7.430630],[4.704487,-3.036858,-1.276199,5.461354,8.326038,2.635700,-2.523635,9.080064,6.205980,6.589665,4.653300,3.390786,-5.808800,-4.872030,0.520956,8.457011,6.924963,-9.071559,2.052591,-0.852889,-6.707689,-3.917877,8.766209,-4.313206,-8.966290,-7.416286,-7.365338,4.933728,-3.054354,6.906846,9.746807,-6.265281,3.309935,-3.956537,2.758594,6.781017,-6.901580,-2.294499,9.493669,-5.643105,-4.888313,-1.846479,0.344998,0.668465,9.162382,1.222169,4.567459,5.984138,-6.290694,5.962307,4.506939,9.033653,-1.442654,5.229395,8.569631,7.415323,-0.731292,-7.837078,-2.633160,8.834514],[-2.125223,-4.309883,3.792671,-3.099530,1.615535,1.713337,-2.810685,-3.569471,-2.590847,7.627889,-0.856303,4.658395,-4.582132,-1.792910,2.141833,-3.011574,-8.927784,3.806160,-0.827115,0.954104,-5.085982,-7.665834,1.772679,0.072121,-7.630902,6.342668,-1.569704,-5.679532,-1.609760,0.470219,-0.626588,-5.428847,-3.044578,-8.446283,5.759059,-6.769396,-4.505728,4.397507,3.155105,1.567984,8.665107,-7.460684,6.633560,-6.116195,2.351650,2.270171,6.118526,-1.873161,-1.323670,-3.324542,-8.114924,8.310151,-6.482192,5.430262,1.311972,9.170528,3.911489,-2.897943,-0.435593,3.903298],[-1.727816,-6.827129,-0.870541,7.607274,7.985269,-1.966235,-1.112169,1.570739,-9.115143,3.229258,4.012189,-2.802275,-1.832572,-4.885952,4.550220,7.426600,-5.461208,3.981977,-6.835750,7.159863,8.280655,-0.585002,9.348750,-5.931503,-5.221403,-4.577006,-6.501784,-2.156509,3.459905,-3.362717,-3.138637,0.480108,6.804602,1.183984,3.248911,5.315824,6.151720,1.711128,5.590954,-4.306853,7.083325,-9.755822,-0.483702,-8.187406,7.268083,-0.350297,-9.701992,-8.974885,4.591586,-6.254009,2.698039,3.734190,1.721780,0.215394,-9.015486,-1.510217,-4.489331,5.132876,7.622583,6.460798],[-2.548878,5.787880,8.592337,-1.850333,7.362157,7.573952,2.845751,1.054604,7.691990,7.994237,7.641196,7.031786,-2.699048,-1.490644,1.430832,-6.337327,9.462301,-1.686244,-9.945876,5.461410,7.747639,-6.267540,9.217345,8.874905,-6.908439,-7.636176,-5.514151,-1.775552,4.932995,4.687137,-8.013122,-2.940130,9.182524,-6.793531,-6.694581,6.718846,-2.262924,-0.977326,-4.240846,0.458906,-6.203033,-3.632396,1.872038,-5.956235,3.056176,8.124620,5.285607,9.442104,6.203043,-9.537269,-8.058733,8.622830,5.657080,-8.340295,-7.332424,1.077571,-3.870826,3.421187,-0.494292,-1.600562],[3.752961,6.779273,2.363212,8.727137,-1.968117,-1.697105,-3.003610,9.779022,6.523149,0.701300,7.718245,9.813010,-1.056433,-3.278713,-3.226480,-7.358059,-8.997875,-5.068637,-2.487127,-0.447844,-7.718957,3.155377,4.042800,-6.996304,9.333327,-3.450811,-6.575237,-6.351329,-3.868870,1.392157,6.748033,7.828651,3.202732,4.913653,6.554505,-1.881178,5.124569,-3.946596,6.132400,8.318632,-6.958809,5.796561,7.788438,5.307649,-0.836682,-1.658114,-8.603455,-2.351748,-5.835342,-4.920417,6.258403,8.223755,-6.556865,7.711205,-6.778176,-9.262583,-3.292893,-4.955484,1.586569,-4.450474],[-0.906059,0.997900,-1.920232,2.576730,-5.044763,-7.974372,-0.100269,-3.113750,-6.289389,-1.718428,-5.940381,4.596451,7.092093,8.628696,-6.231138,-4.830068,-1.910606,5.108709,1.365932,9.310753,-9.509746,-0.559284,4.107914,-8.123169,-5.105549,2.894716,2.751961,-0.626756,-9.752855,-2.968341,8.846752,1.290342,-5.765315,-6.889272,5.809353,3.738876,6.967797,1.324957,-4.025633,-5.055056,-0.584001,-4.397304,5.636964,-9.794263,-6.558052,-7.005126,-6.492489,0.022207,-6.367866,-2.032231,-0.395208,-1.823253,0.955244,-8.346119,2.542755,5.028124,-8.354608,1.374700,-4.001648,3.912743],[-5.548238,-4.763122,-8.414002,-4.898791,8.500622,-5.752210,-1.015942,1.376668,-7.824819,-7.245839,7.786254,-5.489309,8.952154,8.619994,5.478990,-6.274134,-6.594814,-2.452791,-4.451194,2.452128,-2.448705,2.209138,-9.813769,-6.524776,5.478873,-2.766036,-4.551406,-1.740296,6.842376,8.305797,5.085450,-3.062237,-9.575423,-1.634763,4.991814,-7.810812,5.066468,9.917450,1.402149,8.400702,-6.767135,7.191616,-3.462390,-9.173573,0.434412,-2.108294,6.633495,-7.020749,-1.028591,-8.773239,-6.654184,9.972119,4.097008,-0.547941,-3.502036,2.256786,5.781922,-0.357470,-7.407000,0.108647]], dtype = "float64")#candidate|11000|(12, 60)|const|float64
call_10999 = func_6547_call(relay.reshape(const_11000.astype('float64'), [16, 9, 5]))
call_11001 = func_6547_call(relay.reshape(const_11000.astype('float64'), [16, 9, 5]))
func_590_call = mod.get_global_var('func_590')
func_595_call = mutated_mod.get_global_var('func_595')
const_11013 = relay.const(True, dtype = "bool")#candidate|11013|()|const|bool
var_11014 = relay.var("var_11014", dtype = "bool", shape = (24,))#candidate|11014|(24,)|var|bool
var_11015 = relay.var("var_11015", dtype = "float64", shape = (1, 224))#candidate|11015|(1, 224)|var|float64
call_11012 = relay.TupleGetItem(func_590_call(relay.reshape(const_11013.astype('bool'), []), relay.reshape(var_11014.astype('bool'), [1, 8, 3]), relay.reshape(var_11015.astype('float64'), [224,]), ), 3)
call_11016 = relay.TupleGetItem(func_595_call(relay.reshape(const_11013.astype('bool'), []), relay.reshape(var_11014.astype('bool'), [1, 8, 3]), relay.reshape(var_11015.astype('float64'), [224,]), ), 3)
func_9318_call = mod.get_global_var('func_9318')
func_9320_call = mutated_mod.get_global_var('func_9320')
call_11017 = relay.TupleGetItem(func_9318_call(), 0)
call_11018 = relay.TupleGetItem(func_9320_call(), 0)
output = relay.Tuple([uop_10987,call_10999,const_11000,call_11012,const_11013,var_11014,var_11015,call_11017,])
output2 = relay.Tuple([uop_10987,call_11001,const_11000,call_11016,const_11013,var_11014,var_11015,call_11018,])
func_11024 = relay.Function([var_10986,var_11014,var_11015,], output)
mod['func_11024'] = func_11024
mod = relay.transform.InferType()(mod)
mutated_mod['func_11024'] = func_11024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11024_call = mutated_mod.get_global_var('func_11024')
var_11026 = relay.var("var_11026", dtype = "float32", shape = (15, 9, 10))#candidate|11026|(15, 9, 10)|var|float32
var_11027 = relay.var("var_11027", dtype = "bool", shape = (24,))#candidate|11027|(24,)|var|bool
var_11028 = relay.var("var_11028", dtype = "float64", shape = (1, 224))#candidate|11028|(1, 224)|var|float64
call_11025 = func_11024_call(var_11026,var_11027,var_11028,)
output = call_11025
func_11029 = relay.Function([var_11026,var_11027,var_11028,], output)
mutated_mod['func_11029'] = func_11029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7360_call = mod.get_global_var('func_7360')
func_7362_call = mutated_mod.get_global_var('func_7362')
call_11040 = relay.TupleGetItem(func_7360_call(), 3)
call_11041 = relay.TupleGetItem(func_7362_call(), 3)
output = relay.Tuple([call_11040,])
output2 = relay.Tuple([call_11041,])
func_11056 = relay.Function([], output)
mod['func_11056'] = func_11056
mod = relay.transform.InferType()(mod)
mutated_mod['func_11056'] = func_11056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11056_call = mutated_mod.get_global_var('func_11056')
call_11057 = func_11056_call()
output = call_11057
func_11058 = relay.Function([], output)
mutated_mod['func_11058'] = func_11058
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11090 = relay.const([[[-6,-1,-2,-1,9,-2,3,5,-3,-4,-4],[2,10,-7,1,-8,-10,7,9,10,9,-7],[3,-4,6,-7,-7,-2,-10,-3,-4,-7,2],[-8,-1,-9,8,3,-9,8,-7,6,6,4],[-9,-9,9,-7,8,-4,-2,1,8,-3,-5],[10,8,7,-6,-1,9,7,-4,1,-10,4],[7,-3,-1,9,7,-7,9,-10,6,-9,-1],[-5,1,-8,-2,-2,-10,-1,3,-7,3,-7],[2,7,-9,5,5,5,-7,-8,7,-5,4],[8,-9,-8,-2,5,2,-2,-2,-1,6,-4],[2,1,1,8,3,5,-2,-4,-7,6,5]],[[-2,-6,6,10,-4,-4,-2,10,-2,-6,5],[-9,-10,-8,-8,8,-1,-5,-6,-7,-5,-7],[5,7,-10,-4,10,-4,2,9,-6,-1,1],[4,-1,10,-1,5,6,-5,4,1,-3,-4],[-10,4,-2,-5,-1,4,9,9,3,-5,-5],[-5,-10,-3,-3,7,-10,1,5,8,-4,-9],[-6,-2,2,8,-10,8,-9,-2,-6,8,-9],[1,-7,-2,-1,4,1,6,5,-3,-7,4],[10,8,4,-5,9,7,-6,6,9,-7,-6],[-4,-7,6,7,-9,8,6,-7,5,8,-1],[8,-4,-7,-7,-3,6,9,-5,-3,-5,4]],[[-3,4,-7,9,-9,-5,-5,-3,7,-5,-6],[-6,3,7,-2,-9,2,-2,-6,-8,7,-7],[8,-5,3,-10,6,-2,-7,7,10,4,-9],[-4,7,-7,7,-7,3,-2,5,9,-9,-10],[-10,6,5,5,-6,9,10,8,-10,-2,8],[-1,-7,-6,-1,-3,-5,4,-10,-4,-7,2],[8,7,-6,3,5,8,-4,8,-1,8,-1],[6,1,-10,2,8,-3,-10,-3,4,8,-2],[6,-10,3,3,-2,7,-10,4,10,-3,-6],[-1,-7,7,-5,-10,8,-8,-1,7,1,-9],[-3,-2,-6,6,-10,-10,-10,-10,5,7,-1]],[[-6,-7,6,-7,8,7,-4,7,-4,5,-1],[1,3,3,-1,7,5,-2,-2,5,10,-2],[-4,4,-7,1,7,1,-8,-2,-9,8,-4],[4,-9,8,2,4,10,-5,9,4,6,4],[10,-2,-6,4,1,8,8,1,-7,-5,5],[3,-5,-7,-2,4,-8,2,9,6,5,-9],[-9,2,-7,2,-8,3,-1,4,-3,7,9],[7,-7,-7,6,-5,8,10,4,-7,-4,4],[3,9,8,-9,-5,-4,-1,3,9,-4,-5],[4,6,-2,2,-6,-5,10,10,2,-8,-8],[-9,10,-10,9,-9,-5,-2,7,-4,-6,-9]],[[4,-8,7,-5,8,-9,-6,-3,6,-7,8],[9,-3,8,2,10,9,4,-3,-2,-7,-9],[9,9,5,6,5,-9,-8,10,6,-10,7],[10,7,2,4,6,-5,-9,-10,4,-2,-4],[9,4,5,10,-10,-3,-4,-8,8,2,-10],[4,7,5,-2,-2,4,-8,-8,2,-1,-4],[2,5,-7,-5,-9,-6,8,8,2,-3,-3],[-7,9,10,6,7,5,8,-1,10,-4,8],[10,2,-5,-10,5,-1,9,-4,-5,-3,-5],[4,-5,-5,5,-1,-7,-8,-9,3,8,-6],[-5,-1,3,5,-8,3,-5,4,-2,-4,-9]],[[3,3,-10,10,-7,8,7,4,3,-1,5],[7,-6,4,1,-6,-1,-2,9,7,-9,6],[10,10,-3,-2,-8,8,9,8,5,-6,-3],[7,2,-10,3,-7,-7,8,9,-8,10,-3],[-8,-1,-2,-9,-7,9,-2,-8,-6,-8,3],[4,-6,9,10,7,2,3,4,1,8,-1],[-10,5,-6,-10,9,-3,8,-2,-5,-6,-6],[-2,-1,-4,-4,1,-5,-1,-9,2,-7,-4],[-10,-3,3,3,-8,-10,2,2,-8,-10,-1],[-4,2,-10,-4,3,-9,10,-6,1,-9,-7],[-6,7,-5,-5,-7,-9,-6,9,-3,3,-9]],[[-6,-5,2,-10,5,9,-10,-6,-1,5,-6],[-8,2,-7,5,-7,2,-10,3,3,-5,-9],[-7,1,10,7,-8,2,6,4,-7,2,10],[4,-3,-3,-1,5,-7,-7,2,-4,-9,-10],[-6,-8,-3,2,4,9,5,6,-2,6,-9],[8,-7,4,9,-2,-8,7,3,-9,5,6],[9,6,5,3,-6,-5,-3,8,-5,-6,3],[8,-1,4,-2,8,4,-5,7,-3,10,6],[7,5,6,-6,-5,4,-1,5,-1,-7,6],[-2,-1,-6,2,-4,5,2,-3,10,-5,7],[7,9,3,-2,7,4,10,-9,-3,3,2]],[[-1,8,-4,-8,-8,1,4,5,-4,2,2],[-9,6,4,10,-7,-3,-2,9,-8,-6,6],[4,8,4,8,-1,7,-9,-7,8,-9,10],[-8,3,7,4,1,-5,-7,-8,4,-2,-5],[3,9,5,-4,9,-5,9,-4,-5,2,6],[6,-6,1,3,-10,-7,10,7,10,-8,-10],[7,10,1,-10,3,8,10,9,7,-2,10],[-10,-7,-5,-5,2,9,4,5,-6,3,10],[-5,-7,-10,-1,-10,-9,3,-4,7,2,9],[5,-1,-6,6,8,-7,-8,-1,-1,-1,-9],[-4,-5,-10,-8,-5,5,-5,2,9,5,-2]],[[-4,1,5,-6,10,-7,1,-4,-8,-2,-6],[-6,-10,-8,-10,7,5,-9,-4,5,5,9],[-1,4,1,-2,7,-7,2,2,-6,-6,-9],[-9,4,-6,-8,-4,7,8,-8,-5,10,-9],[-7,-4,2,-4,-9,-3,-9,-9,-4,-7,2],[7,10,4,5,-2,-6,5,-8,-8,-4,-7],[10,1,2,-4,-7,-6,-4,7,-4,4,-7],[6,10,2,5,-6,-7,8,8,6,5,-2],[-10,10,10,-2,3,-2,-1,4,4,-10,10],[2,2,-1,8,7,2,2,9,7,-3,4],[3,-10,9,-2,2,7,2,2,-1,9,-4]],[[3,8,-7,1,5,-9,-5,-8,9,10,5],[-4,-3,-6,8,7,5,-3,4,-6,-2,-5],[5,-1,-5,-2,5,7,-1,-4,3,10,7],[-4,9,-2,-5,5,2,8,-9,8,-4,-5],[10,-2,1,2,-7,-8,6,-7,-9,-5,-10],[-10,1,6,5,-10,9,7,-6,-7,-7,9],[-5,6,-9,-6,-2,-10,4,-8,-5,3,2],[5,9,1,9,9,6,-7,-4,4,7,9],[-9,-10,7,10,3,7,9,8,-8,1,2],[-1,-1,4,-10,-1,10,-3,7,6,1,4],[1,-8,-8,-5,7,7,-2,7,-4,10,4]],[[-2,-9,2,2,-1,-5,4,-8,-4,-6,4],[-3,-9,-3,-2,-4,-9,3,-4,5,-9,-4],[8,1,-10,4,-2,-7,4,2,7,10,-9],[-7,-9,-8,-7,-9,-8,-6,7,10,-6,2],[9,6,10,-1,-1,1,1,6,4,10,8],[-8,-5,-6,-7,3,-2,1,-4,-10,1,5],[-3,-9,-8,8,-6,-1,-7,5,5,2,-6],[-1,7,7,5,1,3,-4,10,9,8,-10],[6,1,-3,1,5,-2,-7,2,1,1,-3],[6,-9,-3,4,-2,-9,4,-5,1,-8,6],[-2,-9,-2,-10,5,10,1,-1,-7,5,-7]],[[9,-5,3,5,-9,8,1,-8,4,-7,9],[10,-4,4,-4,-8,2,5,-7,5,-7,-5],[10,1,1,10,7,10,8,1,-5,-5,4],[-2,-10,8,9,-10,-9,3,-1,9,-5,-9],[5,5,3,-8,-1,8,7,-1,-1,5,1],[1,-3,10,-1,2,-3,7,8,10,4,-3],[6,-7,-6,-7,2,-9,-10,4,-1,9,-3],[9,10,3,9,-6,3,-2,-8,5,8,-5],[-6,2,-3,-1,-5,-10,-2,-10,-2,-8,2],[3,2,7,4,10,9,7,-1,10,1,-1],[-6,7,-9,-2,-8,10,3,-10,9,8,2]],[[-4,6,-10,-6,1,4,-10,5,-2,9,3],[-9,-10,2,10,3,-8,-8,5,9,-7,-4],[-6,1,3,1,-1,-6,-1,-8,4,-7,-8],[1,10,-9,-3,-8,-5,-8,-8,-2,-9,3],[-9,-5,2,-5,6,6,-6,-6,10,-9,-2],[1,5,-10,-2,-8,-4,3,-2,10,6,5],[3,-2,-3,7,-7,-7,4,9,-2,8,-8],[4,1,10,-10,-9,6,5,4,7,2,6],[-3,5,-1,-1,-6,-1,-9,-4,9,1,5],[-7,7,2,9,-9,-2,8,-7,-2,-6,-10],[7,-5,7,2,-9,3,-2,-7,-3,-3,-3]]], dtype = "uint32")#candidate|11090|(13, 11, 11)|const|uint32
var_11091 = relay.var("var_11091", dtype = "uint32", shape = (13, 11, 11))#candidate|11091|(13, 11, 11)|var|uint32
bop_11092 = relay.left_shift(const_11090.astype('uint32'), relay.reshape(var_11091.astype('uint32'), relay.shape_of(const_11090))) # shape=(13, 11, 11)
output = relay.Tuple([bop_11092,])
output2 = relay.Tuple([bop_11092,])
F = relay.Function([var_11091,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_11091,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_861() -> Tensor[(8, 16, 7), bool] {
  %0 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %0.0
}

def @func_7104() -> Tensor[(12, 10, 15), float64] {
  %1 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
  %1.1
}

def @func_19775() -> Tensor[(3, 16, 1), float64] {
  @func_8228() /* ty=Tensor[(3, 16, 1), float64] */
}

def @func_13258() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %2 = @func_2229() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %3 = @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %4 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
  %5 = %2.0;
  %6 = %3.0;
  %7 = @func_6420() /* ty=Tensor[(12, 10, 15), float64] */;
  %8 = %4.1;
  (%5, %6, %7, %8)
}

def @func_2347() -> (Tensor[(12, 10, 15), float64],) {
  %9 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %10 = %9.1;
  (%10,)
}

def @func_11684(%var_11672: Tensor[(5, 30), float64]) -> (Tensor[(5, 30), float64], Tensor[(12, 10, 15), float64]) {
  %11 = @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */;
  %12 = %11.3;
  %13 = cast(%var_11672, dtype="int16") /* ty=Tensor[(5, 30), int16] */;
  %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(2), int32] */;
  %15 = cast(%12, dtype="int16") /* ty=Tensor[(5, 30), int16] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %17 = subtract(%15, %16) /* ty=Tensor[(5, 30), int16] */;
  %18 = cast(%17, dtype="float64") /* ty=Tensor[(5, 30), float64] */;
  %19 = @func_10500() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %20 = log2(%18) /* ty=Tensor[(5, 30), float64] */;
  %21 = %19.1;
  (%20, %21)
}

def @func_6405() -> (Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) {
  %22 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %23 = cast(meta[relay.Constant][0] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %24 = reshape(%23, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
  %25 = @func_513(%24) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(8, 16, 7), uint32]) */;
  %26 = @func_2920() /* ty=Tensor[(25, 6), float64] */;
  %27 = %22.0;
  %28 = %25.2;
  %29 = @func_4579() /* ty=Tensor[(12, 10, 15), float64] */;
  (%26, %27, %28, meta[relay.Constant][0] /* ty=Tensor[(896), bool] */, %29)
}

def @func_17307() -> (Tensor[(12, 10, 15), float64],) {
  %30 = @func_14296() /* ty=Tensor[(12, 10, 15), float64] */;
  (%30,)
}

def @func_167() -> (Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) {
  %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 16, 7), bool] */, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %32 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(8, 16, 7), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 16, 7), bool] */, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %35 = @func_143() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %36 = logical_or(%33, %34) /* ty=Tensor[(8, 16, 7), bool] */;
  %37 = %35.3;
  (%36, %37)
}

def @func_8464() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
  %38 = @func_6920() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %39 = @func_5439() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %40 = %38.1;
  %41 = %39.0;
  %42 = @func_861() /* ty=Tensor[(8, 16, 7), bool] */;
  (%40, %41, %42)
}

def @func_42() -> Tensor[(12, 10, 15), float64] {
  %43 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 10, 15), float64] */, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  sin(%43) /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_1427() -> Tensor[(12, 10, 15), float64] {
  %44 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %44.1
}

def @func_10597(%var_10585: Tensor[(3, 8, 14), float64]) -> Tensor[(3, 8, 14), float64] {
  %45 = cast(%var_10585, dtype="float64") /* ty=Tensor[(3, 8, 14), float64] */;
  tan(%45) /* ty=Tensor[(3, 8, 14), float64] */
}

def @func_4439(%var_4420: Tensor[(11, 3, 3), uint64], %var_4421: Tensor[(11, 3, 3), uint64]) -> (Tensor[(11, 3, 3), uint64], Tensor[(12, 10, 15), float64]) {
  %46 = cast(%var_4421, dtype="uint64") /* ty=Tensor[(11, 3, 3), uint64] */;
  %47 = shape_of(%var_4420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(%var_4420, dtype="uint64") /* ty=Tensor[(11, 3, 3), uint64] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %50 = bitwise_and(%48, %49) /* ty=Tensor[(11, 3, 3), uint64] */;
  %51 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  (%50, %51)
}

def @func_15834() -> (Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %52 = @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %53 = @func_12529() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %54 = @func_11175() /* ty=(Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %55 = @func_7913() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %56 = @func_7979() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %57 = %52.0;
  %58 = %53.0;
  %59 = %54.2;
  %60 = %55.0;
  %61 = %56.0;
  (%57, %58, %59, %60, %61)
}

def @func_1992() -> (Tensor[(12, 10, 15), float64],) {
  %62 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %63 = %62.0;
  (%63,)
}

def @func_15991() -> (Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %64 = @func_4146() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %65 = @func_7242() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %66 = @func_13112() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %67 = %64.0;
  %68 = @func_7204() /* ty=Tensor[(12, 10, 15), float64] */;
  %69 = %65.2;
  %70 = @func_5101() /* ty=Tensor[(12, 10, 15), float64] */;
  %71 = %66.0;
  (%67, %68, %69, %70, %71)
}

def @func_14663(%var_14661: Tensor[(336), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64]) {
  %72 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %73 = cast(%var_14661, dtype="float64") /* ty=Tensor[(336), float64] */;
  %74 = reshape(%73, newshape=[3, 8, 14]) /* ty=Tensor[(3, 8, 14), float64] */;
  %75 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
  %76 = %72.0;
  %77 = @func_10597(%74) /* ty=Tensor[(3, 8, 14), float64] */;
  (%75, %76, %77, %var_14661)
}

def @func_16063() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %78 = @func_3741() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) */;
  %79 = %78.1;
  %80 = @func_3417() /* ty=Tensor[(12, 10, 15), float64] */;
  (%79, %80)
}

def @func_13893() -> Tensor[(12, 10, 15), float64] {
  %81 = @func_9331() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64]) */;
  %81.0
}

def @func_19200(%var_19150: Tensor[(560), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64], Tensor[(?, 896), int64], Tensor[(16, 7, 5), bool], Tensor[(560), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %82 = @func_15195() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(3, 16, 896), float64], Tensor[(150), float64], Tensor[(?, 896), int64]) */;
  %83 = cast(%var_19150, dtype="float32") /* ty=Tensor[(560), float32] */;
  %84 = cast(%var_19150, dtype="float32") /* ty=Tensor[(560), float32] */;
  %85 = reshape(%83, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), float32] */;
  %86 = reshape(%84, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), float32] */;
  %87 = @func_18888(%85, %86) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(16, 7, 5), bool]) */;
  %88 = @func_4190() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %89 = @func_11666() /* ty=(Tensor[(25, 6), float64], Tensor[(8, 16, 7), bool]) */;
  %90 = @func_6531() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %91 = @func_5404() /* ty=Tensor[(12, 10, 15), float64] */;
  %92 = @func_15373() /* ty=Tensor[(12, 10, 15), int64] */;
  %93 = %82.3;
  %94 = %87.1;
  %95 = @func_7022() /* ty=Tensor[(12, 10, 15), float64] */;
  %96 = %88.2;
  %97 = %89.0;
  %98 = @func_2823() /* ty=Tensor[(12, 10, 15), float64] */;
  %99 = %90.0;
  (%91, %92, %93, %94, %var_19150, %95, %96, %97, %98, %99)
}

def @func_4275() -> Tensor[(150), float64] {
  %100 = @func_1863() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), bool]) */;
  %100.2
}

def @func_2889() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) {
  %101 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %102 = cast(meta[relay.Constant][4] /* ty=Tensor[(25, 6), float64] */, dtype="float64") /* ty=Tensor[(25, 6), float64] */;
  %103 = reshape(%102, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %104 = @func_1101(%103) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
  %105 = %101.0;
  %106 = @func_2646() /* ty=Tensor[(12, 10, 15), float64] */;
  %107 = %104.2;
  (%105, %106, %107, meta[relay.Constant][4] /* ty=Tensor[(25, 6), float64] */)
}

def @func_3635(%var_3606: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) {
  %108 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %109 = cast(%var_3606, dtype="bool") /* ty=Tensor[(896), bool] */;
  %110 = reshape(%109, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %111 = @func_3290(%110) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(35), float32], Tensor[(896), bool]) */;
  %112 = %108.0;
  %113 = %111.3;
  %114 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  (%112, %113, %var_3606, %114)
}

def @func_5394() -> Tensor[(12, 10, 15), float64] {
  %115 = @func_143() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %115.2
}

def @func_17935() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %116 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %117 = @func_12389() /* ty=Tensor[(12, 10, 15), float64] */;
  %118 = %116.0;
  (%117, %118)
}

def @func_6882(%var_6827: Tensor[(896), bool]) -> (Tensor[(6, 6, 12), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(1, 15, 10), float64]) {
  %119 = @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %120 = cast(%var_6827, dtype="bool") /* ty=Tensor[(896), bool] */;
  %121 = reshape(%120, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %122 = @func_2726(%121) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) */;
  %123 = cast(meta[relay.Constant][5] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %124 = reshape(%123, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %125 = @func_3790(%124) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %126 = @func_852() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %127 = @func_5124() /* ty=(Tensor[(1, 15, 10), float64], Tensor[(12, 10, 15), float64], Tensor[(5, 30), float64], Tensor[(25, 6), float64]) */;
  %128 = %119.0;
  %129 = %122.3;
  %130 = %125.1;
  %131 = @func_6289() /* ty=Tensor[(12, 10, 15), float64] */;
  %132 = @func_5394() /* ty=Tensor[(12, 10, 15), float64] */;
  %133 = %126.0;
  %134 = %127.0;
  (%128, %129, %var_6827, %130, meta[relay.Constant][5] /* ty=Tensor[(150), float64] */, %131, %132, %133, %134)
}

def @func_3697() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %135 = @func_3558() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %136 = @func_1379() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %137 = @func_143() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %138 = %135.1;
  %139 = %136.1;
  %140 = %137.1;
  %141 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  (%138, %139, %140, %141)
}

def @func_12951(%var_12948: Tensor[(16, 12, 3), float32]) -> Tensor[(16, 12, 3), float32] {
  %142 = cast(%var_12948, dtype="float32") /* ty=Tensor[(16, 12, 3), float32] */;
  sqrt(%142) /* ty=Tensor[(16, 12, 3), float32] */
}

def @func_5899() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %143 = @func_954() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) */;
  %144 = @func_4503() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %145 = @func_3697() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %146 = @func_5404() /* ty=Tensor[(12, 10, 15), float64] */;
  %147 = %143.0;
  %148 = %144.0;
  %149 = %145.0;
  %150 = @func_3124() /* ty=Tensor[(12, 10, 15), float64] */;
  (%146, %147, %148, %149, %150)
}

def @func_13512() -> (Tensor[(12, 10, 15), float64],) {
  %151 = @func_4503() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %152 = %151.0;
  (%152,)
}

def @func_13283(%var_13273: Tensor[(25, 6), float64]) -> (Tensor[(25, 6), float32], Tensor[(25, 6), bool]) {
  %153 = @func_2920() /* ty=Tensor[(25, 6), float64] */;
  %154 = cast(%153, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %155 = cast(%var_13273, dtype="bool") /* ty=Tensor[(25, 6), bool] */;
  %156 = shape_of(%153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %157 = cast(%153, dtype="bool") /* ty=Tensor[(25, 6), bool] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %159 = cos(%154) /* ty=Tensor[(25, 6), float32] */;
  %160 = greater_equal(%157, %158) /* ty=Tensor[(25, 6), bool] */;
  (%159, %160)
}

def @func_13537() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %161 = @func_13258() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %162 = @func_11834() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
  %163 = @func_13116() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %164 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %165 = %161.3;
  %166 = %162.2;
  %167 = %163.0;
  %168 = @func_2502() /* ty=Tensor[(12, 10, 15), float64] */;
  (%164, %165, %166, %167, %168)
}

def @func_3976(%var_3967: Tensor[(150), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) {
  %169 = cast(%var_3967, dtype="float64") /* ty=Tensor[(150), float64] */;
  %170 = reshape(%169, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %171 = @func_1101(%170) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
  %172 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  %173 = %171.4;
  (%172, %173, %var_3967)
}

def @func_4730() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) {
  %174 = @func_1289() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %175 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 30), float64] */, dtype="float64") /* ty=Tensor[(5, 30), float64] */;
  %176 = reshape(%175, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %177 = @func_4065(%176) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(12, 10, 15), uint64]) */;
  %178 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
  %179 = %174.1;
  %180 = %177.3;
  (%178, %179, %180, meta[relay.Constant][6] /* ty=Tensor[(5, 30), float64] */)
}

def @func_14631(%var_14610: Tensor[(48), float64]) -> (Tensor[(8, 16, 7), bool], Tensor[(12, 2, 2), float64], Tensor[(48), float64]) {
  %181 = cast(%var_14610, dtype="float64") /* ty=Tensor[(48), float64] */;
  %182 = reshape(%181, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float64] */;
  %183 = @func_8245(%182) /* ty=(Tensor[(12, 2, 2), float64],) */;
  %184 = @func_871() /* ty=Tensor[(8, 16, 7), bool] */;
  %185 = %183.0;
  (%184, %185, %var_14610)
}

def @func_16282(%var_16274: Tensor[(6, 6, 12), float64]) -> (Tensor[(6, 6, 12), int16],) {
  %186 = @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %187 = %186.0;
  %188 = cast(%var_16274, dtype="int16") /* ty=Tensor[(6, 6, 12), int16] */;
  %189 = shape_of(%187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%187, dtype="int16") /* ty=Tensor[(6, 6, 12), int16] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %192 = left_shift(%190, %191) /* ty=Tensor[(6, 6, 12), int16] */;
  (%192,)
}

def @func_12352() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %193 = @func_6531() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %194 = @func_5150() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %195 = %193.0;
  %196 = %194.1;
  (%195, %196)
}

def @func_294() -> Tensor[(12, 10, 15), float64] {
  %197 = @func_274() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %197.0
}

def @func_6323() -> (Tensor[(12, 10, 15), float64],) {
  %198 = @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %199 = %198.0;
  (%199,)
}

def @func_1480() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %200 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %201 = @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %202 = %200.0;
  %203 = %201.1;
  %204 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
  (%202, %203, %204)
}

def @func_223() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %205 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %206 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  (%205, %206)
}

def @func_4766() -> (Tensor[(12, 10, 15), float64],) {
  %207 = @func_3558() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %208 = %207.1;
  (%208,)
}

def @func_7585() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %209 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %210 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %211 = %209.0;
  %212 = %210.0;
  (%211, %212)
}

def @func_14840() -> (Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64]) {
  %213 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %214 = %213.0;
  %215 = @func_10905() /* ty=Tensor[(6, 6, 12), float64] */;
  (%214, %215)
}

def @func_21718() -> (Tensor[(12, 10, 15), float64],) {
  %216 = @func_18171() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %217 = %216.0;
  (%217,)
}

def @func_4258() -> Tensor[(12, 10, 15), float64] {
  @func_3417() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_18260() -> (Tensor[(12, 10, 15), float64],) {
  %218 = @func_11276() /* ty=Tensor[(12, 10, 15), float64] */;
  (%218,)
}

def @func_19726() -> Tensor[(12, 10, 15), float64] {
  %219 = @func_9174() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %219.2
}

def @func_11292() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
  %220 = @func_9210() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %221 = %220.0;
  %222 = @func_6995() /* ty=Tensor[(8, 16, 7), bool] */;
  (%221, %222)
}

def @func_21678() -> Tensor[(12, 10, 15), float64] {
  %223 = @func_8464() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %223.1
}

def @func_5714() -> (Tensor[(12, 10, 15), float64],) {
  %224 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %225 = %224.1;
  (%225,)
}

def @func_10767() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  %226 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %227 = @func_9975() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %228 = @func_6770() /* ty=(Tensor[(150), float64],) */;
  %229 = @func_5373() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(56, 16), bool]) */;
  %230 = %226.1;
  %231 = %227.0;
  %232 = %228.0;
  %233 = %229.0;
  (%230, %231, %232, %233)
}

def @func_8228() -> Tensor[(3, 16, 1), float64] {
  @func_5458() /* ty=Tensor[(3, 16, 1), float64] */
}

def @func_22502(%var_22490: Tensor[(11, 11, 11), float32], %var_22493: Tensor[(11, 11, 11), float32]) -> (Tensor[(11, 11, 11), bool],) {
  %234 = cast(%var_22490, dtype="float32") /* ty=Tensor[(11, 11, 11), float32] */;
  %235 = acos(%234) /* ty=Tensor[(11, 11, 11), float32] */;
  %236 = cast(%var_22493, dtype="bool") /* ty=Tensor[(11, 11, 11), bool] */;
  %237 = shape_of(%235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%235, dtype="bool") /* ty=Tensor[(11, 11, 11), bool] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %240 = logical_or(%238, %239) /* ty=Tensor[(11, 11, 11), bool] */;
  (%240,)
}

def @func_9678() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %241 = @func_5150() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %242 = @func_6622() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %243 = @func_2566() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %244 = %241.0;
  %245 = %242.0;
  %246 = %243.0;
  (%244, %245, %246)
}

def @func_18345() -> Tensor[(12, 10, 15), float64] {
  %247 = @func_13537() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %247.0
}

def @func_2575() -> Tensor[(12, 10, 15), float64] {
  %248 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %248.1
}

def @func_22171() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(126), float64], Tensor[(2, 448), bool]) {
  %249 = cast(meta[relay.Constant][7] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %250 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 448), bool] */, dtype="bool") /* ty=Tensor[(2, 448), bool] */;
  %251 = reshape(%249, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float64] */;
  %252 = reshape(%250, newshape=[896, 1]) /* ty=Tensor[(896, 1), bool] */;
  %253 = @func_20499(%251, %252) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(6, 3, 7), float64], Tensor[(12, 10, 15), float64]) */;
  %254 = @func_5394() /* ty=Tensor[(12, 10, 15), float64] */;
  %255 = %253.3;
  (%254, %255, meta[relay.Constant][7] /* ty=Tensor[(126), float64] */, meta[relay.Constant][8] /* ty=Tensor[(2, 448), bool] */)
}

def @func_14111() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %256 = @func_7482() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %257 = @func_7544() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %258 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  %259 = %256.0;
  %260 = %257.1;
  (%258, %259, %260)
}

def @func_4698() -> (Tensor[(12, 10, 15), float64],) {
  %261 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %262 = %261.0;
  (%262,)
}

def @func_8199() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
  %263 = @func_7544() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %264 = %263.1;
  %265 = @func_5323() /* ty=Tensor[(8, 16, 7), bool] */;
  (%264, %265)
}

def @func_4665() -> (Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(110), float64], Tensor[(1, 896), bool], Tensor[(455), float32], Tensor[(12, 10, 15), float64]) {
  %266 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %267 = cast(meta[relay.Constant][9] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %268 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 896), bool] */, dtype="bool") /* ty=Tensor[(1, 896), bool] */;
  %269 = %266.0;
  %270 = cast(%269, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %271 = cast(meta[relay.Constant][11] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %272 = reshape(%267, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), float64] */;
  %273 = reshape(%268, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %274 = reshape(%270, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
  %275 = reshape(%271, newshape=[13, 35]) /* ty=Tensor[(13, 35), float32] */;
  %276 = @func_3092(%272, %273, %274, %275) /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(12, 10, 15), float64], Tensor[(13, 35), int64]) */;
  %277 = @func_3697() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %278 = %276.2;
  %279 = %277.3;
  (%269, %278, meta[relay.Constant][9] /* ty=Tensor[(110), float64] */, meta[relay.Constant][10] /* ty=Tensor[(1, 896), bool] */, meta[relay.Constant][11] /* ty=Tensor[(455), float32] */, %279)
}

def @func_5150() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %280 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %281 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %282 = %280.1;
  %283 = %281.0;
  (%282, %283)
}

def @func_6495() -> (Tensor[(12, 10, 15), float64],) {
  %284 = @func_4146() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %285 = %284.1;
  (%285,)
}

def @func_16982() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %286 = @func_7482() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %287 = @func_11034() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) */;
  %288 = %286.0;
  %289 = %287.0;
  (%288, %289)
}

def @func_513(%var_461: Tensor[(8, 16, 7), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(8, 16, 7), uint32]) {
  %290 = @func_143() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %291 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %292 = %291.0;
  %293 = cast(%var_461, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %294 = shape_of(%292, dtype="int32") /* ty=Tensor[(3), int32] */;
  %295 = cast(%292, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %297 = less(%295, %296) /* ty=Tensor[(8, 16, 7), bool] */;
  %298 = cast(%var_461, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%297, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %302 = cast(%297, dtype="uint32") /* ty=Tensor[(8, 16, 7), uint32] */;
  %303 = shape_of(%292, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%292, dtype="uint32") /* ty=Tensor[(8, 16, 7), uint32] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %306 = %290.0;
  %307 = not_equal(%300, %301) /* ty=Tensor[(8, 16, 7), bool] */;
  %308 = multiply(%304, %305) /* ty=Tensor[(8, 16, 7), uint32] */;
  (%306, %307, %308)
}

def @func_17851() -> Tensor[(8, 16, 7), bool] {
  @func_6995() /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_15347(%var_15314: Tensor[(432), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(432), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %309 = @func_4309() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %310 = cast(meta[relay.Constant][12] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %311 = cast(%var_15314, dtype="float64") /* ty=Tensor[(432), float64] */;
  %312 = reshape(%310, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %313 = reshape(%311, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), float64] */;
  %314 = @func_8407(%312, %313) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(9, 6, 11), float32], Tensor[(594), float32], Tensor[(896), bool], Tensor[(896), bool], Tensor[(150), float64], Tensor[(6, 6, 12), float64], Tensor[(16, 10, 10), int8], Tensor[(1600), int8]) */;
  %315 = @func_8294() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %316 = @func_12670() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %317 = %309.0;
  %318 = %314.1;
  %319 = %315.1;
  %320 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
  %321 = %316.0;
  (%317, %318, meta[relay.Constant][12] /* ty=Tensor[(896), bool] */, %var_15314, %319, %320, %321)
}

def @func_10293() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %322 = @func_7767() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %323 = @func_9733() /* ty=Tensor[(12, 10, 15), float64] */;
  %324 = %322.1;
  %325 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
  (%323, %324, %325)
}

def @func_21547() -> (Tensor[(12, 10, 15), float64],) {
  %326 = @func_9210() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %327 = %326.0;
  (%327,)
}

def @func_11234() -> Tensor[(12, 10, 15), float64] {
  @func_2502() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_7022() -> Tensor[(12, 10, 15), float64] {
  %328 = @func_2765() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %328.0
}

def @func_1395() -> (Tensor[(12, 10, 15), float64],) {
  %329 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %330 = %329.1;
  (%330,)
}

def @func_13116() -> (Tensor[(12, 10, 15), float64],) {
  %331 = @func_9733() /* ty=Tensor[(12, 10, 15), float64] */;
  (%331,)
}

def @func_566() -> Tensor[(12, 10, 15), float64] {
  %332 = @func_143() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %332.0
}

def @func_16232(%var_16218: Tensor[(10, 11, 1), float64], %var_16219: Tensor[(10, 11, 11), float64]) -> (Tensor[(10, 11, 11), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32], Tensor[(448, 2), bool]) {
  %333 = cast(%var_16218, dtype="float64") /* ty=Tensor[(10, 11, 1), float64] */;
  %334 = cast(%var_16219, dtype="float64") /* ty=Tensor[(10, 11, 11), float64] */;
  %335 = @func_12529() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %336 = cast(meta[relay.Constant][13] /* ty=Tensor[(448, 2), bool] */, dtype="bool") /* ty=Tensor[(448, 2), bool] */;
  %337 = reshape(%336, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
  %338 = @func_9939(%337) /* ty=(Tensor[(8, 16, 7), int32], Tensor[(8, 16, 7), float32]) */;
  %339 = mod(%333, %334) /* ty=Tensor[(10, 11, 11), float64] */;
  %340 = %335.0;
  %341 = %338.1;
  (%339, %340, %341, meta[relay.Constant][13] /* ty=Tensor[(448, 2), bool] */)
}

def @func_2944() -> (Tensor[(6, 6, 12), float64],) {
  %342 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 6, 12), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 12), float32] */;
  %343 = cos(%342) /* ty=Tensor[(6, 6, 12), float32] */;
  %344 = cast(%343, dtype="float64") /* ty=Tensor[(6, 6, 12), float64] */;
  %345 = asin(%344) /* ty=Tensor[(6, 6, 12), float64] */;
  (%345,)
}

def @func_17534() -> (Tensor[(12, 10, 15), float64],) {
  %346 = @func_6323() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %347 = %346.0;
  (%347,)
}

def @func_16383() -> (Tensor[(150), float64], Tensor[(12, 10, 15), int64]) {
  %348 = @func_12899() /* ty=(Tensor[(150), float64],) */;
  %349 = %348.0;
  %350 = @func_2313() /* ty=Tensor[(12, 10, 15), int64] */;
  (%349, %350)
}

def @func_15570() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150, 1), float64]) {
  %351 = @func_4698() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %352 = @func_9210() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %353 = cast(meta[relay.Constant][15] /* ty=Tensor[(150, 1), float64] */, dtype="float64") /* ty=Tensor[(150, 1), float64] */;
  %354 = cast(meta[relay.Constant][15] /* ty=Tensor[(150, 1), float64] */, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
  %355 = reshape(%353, newshape=[25, 6]) /* ty=Tensor[(25, 6), float64] */;
  %356 = reshape(%354, newshape=[25, 6]) /* ty=Tensor[(25, 6), float32] */;
  %357 = @func_10699(%355, %356) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(25, 6), bool], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), int32], Tensor[(12, 10, 15), float64]) */;
  %358 = %351.0;
  %359 = %352.0;
  %360 = %357.4;
  (%358, %359, %360, meta[relay.Constant][15] /* ty=Tensor[(150, 1), float64] */)
}

def @func_8294() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %361 = @func_954() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) */;
  %362 = @func_5439() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %363 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %364 = %361.0;
  %365 = %362.0;
  %366 = %363.0;
  (%364, %365, %366)
}

def @func_13345() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) {
  %367 = @func_10106() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %368 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %369 = %367.0;
  %370 = %368.0;
  (%369, %370)
}

def @func_21805() -> (Tensor[(12, 10, 15), float64],) {
  %371 = @func_13625() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %372 = %371.0;
  (%372,)
}

def @func_12449() -> (Tensor[(12, 10, 15), float64],) {
  %373 = @func_11522() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %374 = %373.0;
  (%374,)
}

def @func_2313() -> Tensor[(12, 10, 15), int64] {
  %375 = @func_1289() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %376 = %375.0;
  %377 = @func_1685() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %378 = %377.0;
  %379 = cast(%378, dtype="int64") /* ty=Tensor[(12, 10, 15), int64] */;
  %380 = shape_of(%376, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%376, dtype="int64") /* ty=Tensor[(12, 10, 15), int64] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%381, %382) /* ty=Tensor[(12, 10, 15), int64] */
}

def @func_16737() -> (Tensor[(6, 6, 12), float64],) {
  %383 = @func_3521() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %384 = %383.0;
  (%384,)
}

def @func_19661() -> Tensor[(6, 6, 12), float64] {
  @func_10905() /* ty=Tensor[(6, 6, 12), float64] */
}

def @func_2211() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(896), bool], Tensor[(8, 16, 7), bool]) {
  %385 = @func_852() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %386 = @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %387 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %389 = reshape(%388, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
  %390 = @func_1780(%389) /* ty=(Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %391 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 10, 15), float64] */, dtype="uint64") /* ty=Tensor[(12, 10, 15), uint64] */;
  %392 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%387, dtype="uint64") /* ty=Tensor[(12, 10, 15), uint64] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %395 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %396 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %397 = cast(meta[relay.Constant][17] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %398 = reshape(%397, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
  %399 = @func_513(%398) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(8, 16, 7), uint32]) */;
  %400 = %385.0;
  %401 = @func_1208() /* ty=Tensor[(12, 10, 15), float64] */;
  %402 = %386.0;
  %403 = %390.0;
  %404 = right_shift(%393, %394) /* ty=Tensor[(12, 10, 15), uint64] */;
  %405 = %395.0;
  %406 = @func_294() /* ty=Tensor[(12, 10, 15), float64] */;
  %407 = %396.2;
  %408 = @func_294() /* ty=Tensor[(12, 10, 15), float64] */;
  %409 = @func_1208() /* ty=Tensor[(12, 10, 15), float64] */;
  %410 = %399.1;
  %411 = @func_871() /* ty=Tensor[(8, 16, 7), bool] */;
  (%400, %401, %402, %403, %404, %405, %406, %407, %408, %409, %410, meta[relay.Constant][17] /* ty=Tensor[(896), bool] */, %411)
}

def @func_22366() -> (Tensor[(12, 10, 15), float64],) {
  %412 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %413 = %412.2;
  (%413,)
}

def @func_4309() -> (Tensor[(12, 10, 15), float64],) {
  %414 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %415 = %414.0;
  (%415,)
}

def @func_19409() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) {
  %416 = @func_18995() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %417 = @func_6622() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %418 = %416.0;
  %419 = %417.0;
  (%418, %419)
}

def @func_20579() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %420 = @func_16153() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(144), int64]) */;
  %421 = %420.1;
  %422 = @func_12627() /* ty=Tensor[(12, 10, 15), float64] */;
  (%421, %422)
}

def @func_22032() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %423 = @func_14395() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %424 = %423.2;
  %425 = @func_5225() /* ty=Tensor[(12, 10, 15), float64] */;
  (%424, %425)
}

def @func_852() -> (Tensor[(12, 10, 15), float32],) {
  %426 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %427 = %426.0;
  %428 = cast(%427, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
  %429 = tan(%428) /* ty=Tensor[(12, 10, 15), float32] */;
  (%429,)
}

def @func_906() -> (Tensor[(12, 10, 15), float64],) {
  %430 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %431 = %430.1;
  (%431,)
}

def @func_17269(%var_17244: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) {
  %432 = @func_1863() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), bool]) */;
  %433 = cast(%var_17244, dtype="bool") /* ty=Tensor[(896), bool] */;
  %434 = reshape(%433, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %435 = @func_10991(%434) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) */;
  %436 = %432.3;
  %437 = @func_5028() /* ty=Tensor[(12, 10, 15), float64] */;
  %438 = %435.1;
  (%436, %437, %438, %var_17244)
}

def @func_11600() -> (Tensor[(12, 10, 15), float64],) {
  %439 = @func_2229() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %440 = %439.0;
  (%440,)
}

def @func_9975() -> (Tensor[(12, 10, 15), float64],) {
  %441 = @func_2765() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %442 = %441.0;
  (%442,)
}

def @func_1208() -> Tensor[(12, 10, 15), float64] {
  %443 = @func_954() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) */;
  %443.0
}

def @func_19712() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %444 = @func_6720() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %445 = @func_18064() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %446 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %447 = @func_17534() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %448 = %444.2;
  %449 = %445.0;
  %450 = %446.1;
  %451 = %447.0;
  (%448, %449, %450, %451)
}

def @func_21890(%var_21887: Tensor[(15, 9, 12), float32]) -> (Tensor[(15, 9, 12), float32],) {
  %452 = cast(%var_21887, dtype="float32") /* ty=Tensor[(15, 9, 12), float32] */;
  %453 = rsqrt(%452) /* ty=Tensor[(15, 9, 12), float32] */;
  (%453,)
}

def @func_5439() -> (Tensor[(12, 10, 15), float64],) {
  %454 = @func_5225() /* ty=Tensor[(12, 10, 15), float64] */;
  (%454,)
}

def @func_7242() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %455 = @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %456 = @func_2566() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %457 = @func_2251() /* ty=Tensor[(12, 10, 15), float64] */;
  %458 = %455.0;
  %459 = %456.0;
  (%457, %458, %459)
}

def @func_18483(%var_18465: Tensor[(12, 16, 14), int64], %var_18466: Tensor[(12, 16, 14), int64], %var_18474: Tensor[(432), float64]) -> (Tensor[(12, 16, 14), int64], Tensor[(6, 6, 12), float64], Tensor[(896, 1), bool], Tensor[(432), float64]) {
  %460 = cast(%var_18466, dtype="int64") /* ty=Tensor[(12, 16, 14), int64] */;
  %461 = shape_of(%var_18465, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%var_18465, dtype="int64") /* ty=Tensor[(12, 16, 14), int64] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %464 = cast(meta[relay.Constant][18] /* ty=Tensor[(896, 1), bool] */, dtype="bool") /* ty=Tensor[(896, 1), bool] */;
  %465 = cast(%var_18474, dtype="float64") /* ty=Tensor[(432), float64] */;
  %466 = reshape(%464, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %467 = reshape(%465, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), float64] */;
  %468 = @func_8407(%466, %467) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(9, 6, 11), float32], Tensor[(594), float32], Tensor[(896), bool], Tensor[(896), bool], Tensor[(150), float64], Tensor[(6, 6, 12), float64], Tensor[(16, 10, 10), int8], Tensor[(1600), int8]) */;
  %469 = subtract(%462, %463) /* ty=Tensor[(12, 16, 14), int64] */;
  %470 = %468.8;
  (%469, %470, meta[relay.Constant][18] /* ty=Tensor[(896, 1), bool] */, %var_18474)
}

def @func_7913() -> (Tensor[(12, 10, 15), float64],) {
  %471 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  (%471,)
}

def @func_6102() -> (Tensor[(12, 10, 15), float64],) {
  %472 = @func_2765() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %473 = %472.0;
  (%473,)
}

def @func_19248(%var_19241: Tensor[(56, 16), bool]) -> Tensor[(56, 16), bool] {
  %474 = @func_5373() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(56, 16), bool]) */;
  %475 = %474.2;
  %476 = cast(%var_19241, dtype="bool") /* ty=Tensor[(56, 16), bool] */;
  %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(2), int32] */;
  %478 = cast(%475, dtype="bool") /* ty=Tensor[(56, 16), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  logical_and(%478, %479) /* ty=Tensor[(56, 16), bool] */
}

def @func_12122() -> (Tensor[(12, 10, 15), float64], Tensor[(1, 880), int16], Tensor[(880), int16], Tensor[(12, 10, 15), float64]) {
  %480 = @func_5899() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %481 = cast(meta[relay.Constant][19] /* ty=Tensor[(880), int16] */, dtype="int16") /* ty=Tensor[(880), int16] */;
  %482 = reshape(%481, newshape=[1, 880]) /* ty=Tensor[(1, 880), int16] */;
  %483 = @func_12019(%482) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(6, 6, 12), float64], Tensor[(3, 16, 1), float64], Tensor[(11, 8, 10), bool], Tensor[(1, 880), int16], Tensor[(12, 10, 15), float64]) */;
  %484 = @func_7585() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %485 = %480.3;
  %486 = %483.6;
  %487 = %484.0;
  (%485, %486, meta[relay.Constant][19] /* ty=Tensor[(880), int16] */, %487)
}

def @func_22433() -> Tensor[(12, 10, 15), float64] {
  %488 = @func_20579() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %488.0
}

def @func_21972(%var_21934: Tensor[(7, 2, 8), float64]) -> (Tensor[(7, 2, 8), float64], Tensor[(16, 10, 10), int8], Tensor[(1600), int8], Tensor[(12, 10, 15), float64]) {
  %489 = cast(%var_21934, dtype="float64") /* ty=Tensor[(7, 2, 8), float64] */;
  %490 = cast(meta[relay.Constant][20] /* ty=Tensor[(1600), int8] */, dtype="int8") /* ty=Tensor[(1600), int8] */;
  %491 = reshape(%490, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), int8] */;
  %492 = @func_18772() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %493 = log2(%489) /* ty=Tensor[(7, 2, 8), float64] */;
  %494 = @func_5255(%491) /* ty=Tensor[(16, 10, 10), int8] */;
  %495 = %492.0;
  (%493, %494, meta[relay.Constant][20] /* ty=Tensor[(1600), int8] */, %495)
}

def @func_6995() -> Tensor[(8, 16, 7), bool] {
  %496 = @func_4221() /* ty=(Tensor[(8, 16, 7), bool],) */;
  %496.0
}

def @func_7335() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %497 = @func_6531() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %498 = @func_7125() /* ty=Tensor[(12, 10, 15), float64] */;
  %499 = %497.0;
  (%498, %499)
}

def @func_19301(%var_19260: Tensor[(2, 1, 7), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(2, ?, 7), uint32]) {
  %500 = @func_11034() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) */;
  %501 = cast(%var_19260, dtype="float64") /* ty=Tensor[(2, 1, 7), float64] */;
  %502 = acos(%501) /* ty=Tensor[(2, 1, 7), float64] */;
  %503 = cast(%var_19260, dtype="uint32") /* ty=Tensor[(2, 1, 7), uint32] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%502, dtype="uint32") /* ty=Tensor[(2, 1, 7), uint32] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %507 = %500.1;
  %508 = maximum(%505, %506) /* ty=Tensor[(2, ?, 7), uint32] */;
  (%507, %508)
}

def @func_9407() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %509 = @func_3697() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %510 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %511 = %510.0;
  %512 = cast(%511, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
  %513 = %509.3;
  %514 = cosh(%512) /* ty=Tensor[(12, 10, 15), float32] */;
  (%513, %514)
}

def @func_6531() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %515 = @func_6198() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %516 = %515.1;
  %517 = @func_3417() /* ty=Tensor[(12, 10, 15), float64] */;
  (%516, %517)
}

def @func_14036() -> (Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  %518 = @func_5523() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(150), float64]) */;
  %519 = @func_11376() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %520 = %518.5;
  %521 = %519.0;
  (%520, %521)
}

def @func_5028() -> Tensor[(12, 10, 15), float64] {
  @func_1427() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_20499(%var_20440: Tensor[(6, 3, 7), float64], %var_20447: Tensor[(896, 1), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(6, 3, 7), float64], Tensor[(12, 10, 15), float64]) {
  %522 = cast(%var_20447, dtype="bool") /* ty=Tensor[(896, 1), bool] */;
  %523 = reshape(%522, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %524 = @func_2726(%523) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) */;
  %525 = cast(%var_20440, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  %526 = sigmoid(%525) /* ty=Tensor[(6, 3, 7), float64] */;
  %527 = cast(%526, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  %528 = %524.1;
  %529 = log10(%527) /* ty=Tensor[(6, 3, 7), float64] */;
  %530 = @func_5028() /* ty=Tensor[(12, 10, 15), float64] */;
  (%528, %var_20447, %529, %530)
}

def @func_10905() -> Tensor[(6, 6, 12), float64] {
  %531 = @func_3521() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %531.0
}

def @func_274() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %532 = @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %533 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  %534 = %532.0;
  (%533, %534)
}

def @func_11546() -> (Tensor[(12, 10, 15), float64],) {
  %535 = @func_8464() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %536 = %535.1;
  (%536,)
}

def @func_16900() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %537 = @func_2566() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %538 = @func_143() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %539 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %540 = %537.0;
  %541 = %538.0;
  %542 = %539.2;
  %543 = @func_2777() /* ty=Tensor[(12, 10, 15), float64] */;
  (%540, %541, %542, %543)
}

def @func_17549() -> (Tensor[(12, 10, 15), float64],) {
  %544 = @func_7104() /* ty=Tensor[(12, 10, 15), float64] */;
  (%544,)
}

def @func_21330() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %545 = @func_18064() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %546 = @func_14395() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %547 = %545.3;
  %548 = %546.0;
  (%547, %548)
}

def @func_2920() -> Tensor[(25, 6), float64] {
  %549 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %549.3
}

def @func_6920() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %550 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
  %551 = %550.1;
  %552 = @func_3124() /* ty=Tensor[(12, 10, 15), float64] */;
  (%551, %552)
}

def @func_9331() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64]) {
  %553 = @func_7242() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %554 = @func_6323() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %555 = %553.1;
  %556 = @func_3863() /* ty=Tensor[(12, 10, 15), float64] */;
  %557 = @func_8228() /* ty=Tensor[(3, 16, 1), float64] */;
  %558 = %554.0;
  (%555, %556, %557, %558)
}

def @func_7152() -> (Tensor[(12, 10, 15), float64],) {
  %559 = @func_2502() /* ty=Tensor[(12, 10, 15), float64] */;
  (%559,)
}

def @func_9733() -> Tensor[(12, 10, 15), float64] {
  @func_5101() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_14424() -> (Tensor[(8, 16, 7), bool], Tensor[(72, 4), float32], Tensor[(288), float32]) {
  %560 = @func_4221() /* ty=(Tensor[(8, 16, 7), bool],) */;
  %561 = cast(meta[relay.Constant][21] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %562 = reshape(%561, newshape=[72, 4]) /* ty=Tensor[(72, 4), float32] */;
  %563 = @func_14358(%562) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(330, 1), float64], Tensor[(72, 4), float32]) */;
  %564 = %560.0;
  %565 = %563.5;
  (%564, %565, meta[relay.Constant][21] /* ty=Tensor[(288), float32] */)
}

def @func_5795() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %566 = @func_5394() /* ty=Tensor[(12, 10, 15), float64] */;
  %567 = @func_3124() /* ty=Tensor[(12, 10, 15), float64] */;
  (%566, %567)
}

def @func_18573() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32]) {
  %568 = @func_11376() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %569 = @func_4381() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32], Tensor[(12, 10, 15), float64]) */;
  %570 = %568.1;
  %571 = %569.3;
  (%570, %571)
}

def @func_21882(%var_21871: Tensor[(18), float32], %var_21872: Tensor[(288), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64], Tensor[(18), float32], Tensor[(288), float32]) {
  %572 = @func_14875() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %573 = @func_16737() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %574 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %575 = cast(%var_21871, dtype="float32") /* ty=Tensor[(18), float32] */;
  %576 = cast(%var_21872, dtype="float32") /* ty=Tensor[(288), float32] */;
  %577 = reshape(%575, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %578 = reshape(%576, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), float32] */;
  %579 = @func_3492(%577, %578) /* ty=(Tensor[(6, 3, 16), int16], Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) */;
  %580 = %572.0;
  %581 = %573.0;
  %582 = @func_7347() /* ty=Tensor[(12, 10, 15), float64] */;
  %583 = %574.1;
  %584 = %579.1;
  (%580, %581, %582, %583, %584, %var_21871, %var_21872)
}

def @func_19819() -> (Tensor[(8, 16, 7), bool],) {
  %585 = @func_3242() /* ty=Tensor[(8, 16, 7), bool] */;
  (%585,)
}

def @func_14722() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(455, 110), float64]) {
  %586 = @func_11175() /* ty=(Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %587 = cast(meta[relay.Constant][22] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %588 = cast(meta[relay.Constant][23] /* ty=Tensor[(896, 1), bool] */, dtype="bool") /* ty=Tensor[(896, 1), bool] */;
  %589 = %586.1;
  %590 = cast(%589, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %591 = cast(meta[relay.Constant][24] /* ty=Tensor[(455, 1), float32] */, dtype="float32") /* ty=Tensor[(455, 1), float32] */;
  %592 = reshape(%587, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), float64] */;
  %593 = reshape(%588, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %594 = reshape(%590, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
  %595 = reshape(%591, newshape=[13, 35]) /* ty=Tensor[(13, 35), float32] */;
  %596 = @func_3092(%592, %593, %594, %595) /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(12, 10, 15), float64], Tensor[(13, 35), int64]) */;
  %597 = cast(meta[relay.Constant][24] /* ty=Tensor[(455, 1), float32] */, dtype="uint32") /* ty=Tensor[(455, 1), uint32] */;
  %598 = cast(meta[relay.Constant][22] /* ty=Tensor[(110), float64] */, dtype="uint32") /* ty=Tensor[(110), uint32] */;
  %599 = bitwise_xor(%597, %598) /* ty=Tensor[(455, 110), uint32] */;
  %600 = cast(%599, dtype="float64") /* ty=Tensor[(455, 110), float64] */;
  %601 = %596.1;
  %602 = acos(%600) /* ty=Tensor[(455, 110), float64] */;
  (%589, %601, meta[relay.Constant][23] /* ty=Tensor[(896, 1), bool] */, %602)
}

def @func_20047() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) {
  %603 = @func_8464() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %604 = @func_6323() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %605 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %606 = %603.1;
  %607 = %604.0;
  %608 = %605.3;
  (%606, %607, %608)
}

def @func_10500() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %609 = @func_6147() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %610 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %611 = @func_10356() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
  %612 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %613 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %614 = %609.0;
  %615 = %610.0;
  %616 = %611.3;
  %617 = %612.0;
  %618 = @func_5636() /* ty=Tensor[(12, 10, 15), float64] */;
  (%613, %614, %615, %616, %617, %618)
}

def @func_15924(%var_15912: Tensor[(880), int16]) -> (Tensor[(12, 10, 15), float32], Tensor[(880), int64]) {
  %619 = @func_9407() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %620 = @func_12122() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 880), int16], Tensor[(880), int16], Tensor[(12, 10, 15), float64]) */;
  %621 = %620.2;
  %622 = cast(%var_15912, dtype="int64") /* ty=Tensor[(880), int64] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(1), int32] */;
  %624 = cast(%621, dtype="int64") /* ty=Tensor[(880), int64] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?), int64] */;
  %626 = %619.1;
  %627 = bitwise_xor(%624, %625) /* ty=Tensor[(880), int64] */;
  (%626, %627)
}

def @func_14875() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %628 = @func_4766() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %629 = %628.0;
  %630 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  (%629, %630)
}

def @func_20979() -> (Tensor[(8, 16, 7), bool], Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %631 = @func_11175() /* ty=(Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %632 = @func_9678() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %633 = @func_6995() /* ty=Tensor[(8, 16, 7), bool] */;
  %634 = %631.0;
  %635 = %632.1;
  %636 = @func_18345() /* ty=Tensor[(12, 10, 15), float64] */;
  (%633, %634, %635, %636)
}

def @func_22376() -> (Tensor[(12, 10, 15), float64],) {
  %637 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %638 = %637.0;
  (%638,)
}

def @func_17382() -> Tensor[(12, 10, 15), float64] {
  @func_6289() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_954() -> (Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) {
  %639 = @func_274() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %640 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 14, 13), float64] */, dtype="float64") /* ty=Tensor[(6, 14, 13), float64] */;
  %641 = sigmoid(%640) /* ty=Tensor[(6, 14, 13), float64] */;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(6, 14, 13), float32] */;
  %643 = %639.1;
  %644 = exp(%642) /* ty=Tensor[(6, 14, 13), float32] */;
  (%643, %644)
}

def @func_4579() -> Tensor[(12, 10, 15), float64] {
  %645 = @func_1289() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %645.0
}

def @func_19326() -> Tensor[(6, 6, 12), float64] {
  %646 = @func_16737() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %646.0
}

def @func_20695(%var_20688: Tensor[(360), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 896), float64], Tensor[(4, 6, 15), float64], Tensor[(360), float64]) {
  %647 = @func_11119() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %648 = @func_11706() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %649 = cast(%var_20688, dtype="float64") /* ty=Tensor[(360), float64] */;
  %650 = reshape(%649, newshape=[4, 6, 15]) /* ty=Tensor[(4, 6, 15), float64] */;
  %651 = @func_15678(%650) /* ty=(Tensor[(4, 6, 15), float64],) */;
  %652 = %647.1;
  %653 = %648.0;
  %654 = @func_19567() /* ty=Tensor[(3, 16, 896), float64] */;
  %655 = %651.0;
  (%652, %653, %654, %655, %var_20688)
}

def @func_19838() -> Tensor[(12, 10, 15), float64] {
  %656 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %656.0
}

def @func_18756() -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool]) {
  %657 = @func_4766() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %658 = @func_18302() /* ty=(Tensor[(896), bool],) */;
  %659 = %657.0;
  %660 = %658.0;
  (%659, %660)
}

def @func_21179() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(12, 10, 15), float64]) {
  %661 = @func_7767() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %662 = @func_12449() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %663 = @func_14722() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(455, 110), float64]) */;
  %664 = @func_14526() /* ty=(Tensor[(880), int16], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %665 = %661.0;
  %666 = %662.0;
  %667 = %663.2;
  %668 = %664.1;
  (%665, %666, %667, %668)
}

def @func_10356() -> (Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  %669 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %670 = cast(meta[relay.Constant][26] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %671 = reshape(%670, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %672 = @func_3790(%671) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %673 = %669.1;
  %674 = %672.3;
  %675 = @func_7697() /* ty=Tensor[(12, 10, 15), float64] */;
  (%673, %674, meta[relay.Constant][26] /* ty=Tensor[(150), float64] */, %675)
}

def @func_1926() -> (Tensor[(12, 10, 15), float64],) {
  %676 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %677 = %676.0;
  (%677,)
}

def @func_2460() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %678 = @func_1379() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %679 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %680 = %679.0;
  %681 = cast(%680, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
  %682 = %678.0;
  %683 = atanh(%681) /* ty=Tensor[(12, 10, 15), float32] */;
  (%682, %683)
}

def @func_18080() -> (Tensor[(8, 16, 7), bool],) {
  %684 = @func_17851() /* ty=Tensor[(8, 16, 7), bool] */;
  (%684,)
}

def @func_9262() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %685 = @func_8998() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %686 = %685.0;
  %687 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  (%686, %687)
}

def @func_11834() -> (Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  %688 = @func_8998() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %689 = @func_10767() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
  %690 = @func_5899() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %691 = %688.0;
  %692 = %689.2;
  %693 = %690.4;
  (%691, %692, %693)
}

def @func_12627() -> Tensor[(12, 10, 15), float64] {
  %694 = @func_4190() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %694.0
}

def @func_6684(%var_6681: Tensor[(11, 8, 11), float64]) -> Tensor[(11, 8, 11), float64] {
  %695 = cast(%var_6681, dtype="float64") /* ty=Tensor[(11, 8, 11), float64] */;
  cos(%695) /* ty=Tensor[(11, 8, 11), float64] */
}

def @func_5636() -> Tensor[(12, 10, 15), float64] {
  @func_5394() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_16537() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %696 = @func_8199() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %697 = @func_10401() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %698 = %696.0;
  %699 = %697.1;
  (%698, %699)
}

def @func_17513(%var_17479: Tensor[(432), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), int16], Tensor[(432), float64], Tensor[(12, 10, 15), float64]) {
  %700 = @func_15213() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %701 = cast(%var_17479, dtype="float64") /* ty=Tensor[(432), float64] */;
  %702 = reshape(%701, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), float64] */;
  %703 = @func_16282(%702) /* ty=(Tensor[(6, 6, 12), int16],) */;
  %704 = @func_11546() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %705 = %700.0;
  %706 = %703.0;
  %707 = %704.0;
  (%705, %706, %var_17479, %707)
}

def @func_18725() -> (Tensor[(288), float32], Tensor[(25, 6), float64], Tensor[(8, 16, 7), bool]) {
  %708 = @func_14272() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(18), float32], Tensor[(288), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(56, 16), bool], Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64]) */;
  %709 = @func_18080() /* ty=(Tensor[(8, 16, 7), bool],) */;
  %710 = %708.4;
  %711 = @func_2920() /* ty=Tensor[(25, 6), float64] */;
  %712 = %709.0;
  (%710, %711, %712)
}

def @func_9785() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %713 = @func_7585() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %714 = @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */;
  %715 = %713.0;
  %716 = %714.0;
  (%715, %716)
}

def @func_10966() -> Tensor[(12, 10, 15), float64] {
  %717 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %717.1
}

def @func_22593() -> Tensor[(12, 10, 15), float64] {
  %718 = @func_21052() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %718.0
}

def @func_18682() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %719 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %720 = @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %721 = @func_9224() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %722 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
  %723 = %719.0;
  %724 = %720.0;
  %725 = %721.0;
  (%722, %723, %724, %725)
}

def @func_15195() -> (Tensor[(12, 10, 15), float64], Tensor[(3, 16, 896), float64], Tensor[(150), float64], Tensor[(?, 896), int64]) {
  %726 = @func_4665() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(110), float64], Tensor[(1, 896), bool], Tensor[(455), float32], Tensor[(12, 10, 15), float64]) */;
  %727 = %726.3;
  %728 = @func_9331() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64]) */;
  %729 = %728.2;
  %730 = cast(%727, dtype="float64") /* ty=Tensor[(1, 896), float64] */;
  %731 = cast(%729, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
  %732 = @func_14036() /* ty=(Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
  %733 = cast(%727, dtype="float64") /* ty=Tensor[(1, 896), float64] */;
  %734 = asinh(%733) /* ty=Tensor[(1, 896), float64] */;
  %735 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 896), float64] */, dtype="int64") /* ty=Tensor[(1, 896), int64] */;
  %736 = shape_of(%734, dtype="int32") /* ty=Tensor[(2), int32] */;
  %737 = cast(%734, dtype="int64") /* ty=Tensor[(1, 896), int64] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %739 = @func_10966() /* ty=Tensor[(12, 10, 15), float64] */;
  %740 = divide(%730, %731) /* ty=Tensor[(3, 16, 896), float64] */;
  %741 = %732.0;
  %742 = bitwise_xor(%737, %738) /* ty=Tensor[(?, 896), int64] */;
  (%739, %740, %741, %742)
}

def @func_2276() -> (Tensor[(12, 10, 15), float64],) {
  %743 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %744 = %743.0;
  (%744,)
}

def @func_5458() -> Tensor[(3, 16, 1), float64] {
  %745 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
  %746 = sigmoid(%745) /* ty=Tensor[(3, 16, 1), float64] */;
  %747 = cast(%746, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
  asinh(%747) /* ty=Tensor[(3, 16, 1), float64] */
}

def @func_3350() -> Tensor[(12, 10, 15), float64] {
  %748 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %748.0
}

def @func_16172() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %749 = @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %750 = @func_7585() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %751 = @func_6933() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %752 = %749.0;
  %753 = %750.0;
  %754 = %751.0;
  %755 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
  (%752, %753, %754, %755)
}

def @func_4503() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %756 = @func_1427() /* ty=Tensor[(12, 10, 15), float64] */;
  %757 = @func_2777() /* ty=Tensor[(12, 10, 15), float64] */;
  (%756, %757)
}

def @func_11175() -> (Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %758 = @func_6453() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %759 = @func_10356() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
  %760 = @func_5458() /* ty=Tensor[(3, 16, 1), float64] */;
  %761 = %758.2;
  %762 = %759.3;
  (%760, %761, %762)
}

def @func_17720() -> Tensor[(8, 16, 7), bool] {
  %763 = @func_4221() /* ty=(Tensor[(8, 16, 7), bool],) */;
  %763.0
}

def @func_20999() -> Tensor[(12, 10, 15), float64] {
  %764 = @func_20649() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %764.2
}

def @func_17190() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %765 = @func_15834() /* ty=(Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %766 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
  %767 = @func_2823() /* ty=Tensor[(12, 10, 15), float64] */;
  %768 = %765.3;
  (%766, %767, %768)
}

def @func_16782() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %769 = @func_15873() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %770 = %769.0;
  %771 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
  %772 = @func_3417() /* ty=Tensor[(12, 10, 15), float64] */;
  (%770, %771, %772)
}

def @func_20918() -> (Tensor[(12, 10, 15), float64],) {
  %773 = @func_6566() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %774 = %773.2;
  (%774,)
}

def @func_14815() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %775 = @func_13258() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %776 = @func_13202() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %777 = %775.1;
  %778 = %776.0;
  (%777, %778)
}

def @func_3863() -> Tensor[(12, 10, 15), float64] {
  %779 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %779.2
}

def @func_1975(%var_1953: Tensor[(8, 16, 7), bool]) -> (Tensor[(8, 16, 7), uint64], Tensor[(12, 10, 15), float64]) {
  %780 = @func_861() /* ty=Tensor[(8, 16, 7), bool] */;
  %781 = cast(%var_1953, dtype="uint64") /* ty=Tensor[(8, 16, 7), uint64] */;
  %782 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%780, dtype="uint64") /* ty=Tensor[(8, 16, 7), uint64] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %785 = @func_1542() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) */;
  %786 = subtract(%783, %784) /* ty=Tensor[(8, 16, 7), uint64] */;
  %787 = %785.1;
  (%786, %787)
}

def @func_10821() -> Tensor[(3, 16, 1), float64] {
  @func_8228() /* ty=Tensor[(3, 16, 1), float64] */
}

def @func_5404() -> Tensor[(12, 10, 15), float64] {
  %788 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %788.0
}

def @func_372() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %789 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %790 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  (%789, %790)
}

def @func_5124() -> (Tensor[(1, 15, 10), float64], Tensor[(12, 10, 15), float64], Tensor[(5, 30), float64], Tensor[(25, 6), float64]) {
  %791 = @func_1863() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), bool]) */;
  %792 = @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */;
  %793 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
  %794 = %791.1;
  %795 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  %796 = %792.3;
  %797 = %793.3;
  (%794, %795, %796, %797)
}

def @func_12882() -> Tensor[(12, 10, 15), float64] {
  @func_3863() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_21924() -> (Tensor[(3, 16, 896), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %798 = @func_8199() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %799 = @func_5795() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %800 = @func_19567() /* ty=Tensor[(3, 16, 896), float64] */;
  %801 = @func_2251() /* ty=Tensor[(12, 10, 15), float64] */;
  %802 = %798.0;
  %803 = %799.1;
  (%800, %801, %802, %803)
}

def @func_12899() -> (Tensor[(150), float64],) {
  %804 = @func_4275() /* ty=Tensor[(150), float64] */;
  (%804,)
}

def @func_16661() -> Tensor[(12, 10, 15), float64] {
  @func_12717() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_7544() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %805 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %806 = @func_294() /* ty=Tensor[(12, 10, 15), float64] */;
  %807 = %805.2;
  (%806, %807)
}

def @func_20305(%var_20280: Tensor[(3, 16, 8), float32]) -> (Tensor[(3, 16, 8), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %808 = cast(%var_20280, dtype="float32") /* ty=Tensor[(3, 16, 8), float32] */;
  %809 = @func_18995() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %810 = acos(%808) /* ty=Tensor[(3, 16, 8), float32] */;
  %811 = @func_16661() /* ty=Tensor[(12, 10, 15), float64] */;
  %812 = %809.0;
  (%810, %811, %812)
}

def @func_20519() -> Tensor[(12, 10, 15), float64] {
  %813 = @func_12438() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %813.0
}

def @func_15474() -> (Tensor[(12, 10, 15), float64],) {
  %814 = @func_9656() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %815 = %814.2;
  (%815,)
}

def @func_3558() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %816 = @func_2566() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %817 = @func_2276() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %818 = %816.0;
  %819 = %817.0;
  %820 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
  (%818, %819, %820)
}

def @func_2251() -> Tensor[(12, 10, 15), float64] {
  @func_294() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_3521() -> (Tensor[(6, 6, 12), float64],) {
  %821 = @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %822 = %821.0;
  (%822,)
}

def @func_1101(%var_1077: Tensor[(150), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  %823 = cast(%var_1077, dtype="float64") /* ty=Tensor[(150), float64] */;
  %824 = reshape(%823, newshape=[1, 15, 10]) /* ty=Tensor[(1, 15, 10), float64] */;
  %825 = @func_768(%824) /* ty=(Tensor[(1, 15, 10), float64],) */;
  %826 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %827 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  %828 = @func_861() /* ty=Tensor[(8, 16, 7), bool] */;
  %829 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  %830 = @func_861() /* ty=Tensor[(8, 16, 7), bool] */;
  %831 = %825.0;
  %832 = %826.1;
  (%827, %828, %829, %830, %831, %var_1077, %832)
}

def @func_11581() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %833 = @func_8294() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %834 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
  %835 = %833.2;
  %836 = %834.1;
  (%835, %836)
}

def @func_20221(%var_20189: Tensor[(1600), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1600), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %837 = @func_2765() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %838 = cast(%var_20189, dtype="float32") /* ty=Tensor[(1600), float32] */;
  %839 = reshape(%838, newshape=[800, 2]) /* ty=Tensor[(800, 2), float32] */;
  %840 = @func_11483(%839) /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(16, 10, 10), int8], Tensor[(12, 10, 15), float64], Tensor[(7, ?, 5), bool], Tensor[(35), float32], Tensor[(800, 2), bool], Tensor[(800, 2), bool], Tensor[(12, 10, 15), float64]) */;
  %841 = @func_7767() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %842 = @func_1182() /* ty=Tensor[(12, 10, 15), float64] */;
  %843 = %837.0;
  %844 = %840.1;
  %845 = @func_12882() /* ty=Tensor[(12, 10, 15), float64] */;
  %846 = %841.0;
  (%842, %843, %844, %var_20189, %845, %846)
}

def @func_20649() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %847 = @func_14296() /* ty=Tensor[(12, 10, 15), float64] */;
  %848 = @func_18612() /* ty=Tensor[(12, 10, 15), float64] */;
  %849 = @func_18345() /* ty=Tensor[(12, 10, 15), float64] */;
  (%847, %848, %849)
}

def @func_4221() -> (Tensor[(8, 16, 7), bool],) {
  %850 = @func_2211() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(896), bool], Tensor[(8, 16, 7), bool]) */;
  %851 = %850.12;
  (%851,)
}

def @func_627() -> Tensor[(12, 10, 15), float64] {
  %852 = @func_274() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %852.1
}

def @func_18888(%var_18867: Tensor[(16, 7, 5), float32], %var_18883: Tensor[(16, 7, 5), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(16, 7, 5), bool]) {
  %853 = @func_12449() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %854 = cast(%var_18867, dtype="float32") /* ty=Tensor[(16, 7, 5), float32] */;
  %855 = sinh(%854) /* ty=Tensor[(16, 7, 5), float32] */;
  %856 = cast(%855, dtype="float32") /* ty=Tensor[(16, 7, 5), float32] */;
  %857 = atanh(%856) /* ty=Tensor[(16, 7, 5), float32] */;
  %858 = cast(%var_18883, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
  %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%857, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %862 = %853.0;
  %863 = not_equal(%860, %861) /* ty=Tensor[(16, 7, 5), bool] */;
  (%862, %863)
}

def @func_16444() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %864 = @func_7152() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %865 = @func_10401() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %866 = %864.0;
  %867 = %865.1;
  (%866, %867)
}

def @func_11087() -> (Tensor[(12, 10, 15), float64],) {
  %868 = @func_4190() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %869 = %868.1;
  (%869,)
}

def @func_5225() -> Tensor[(12, 10, 15), float64] {
  @func_3417() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_11376() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %870 = @func_10401() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %871 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %872 = @func_8985() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %873 = @func_10106() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %874 = %870.0;
  %875 = %871.0;
  %876 = %872.2;
  %877 = %873.0;
  (%874, %875, %876, %877)
}

def @func_10928() -> (Tensor[(896), bool],) {
  %878 = @func_6720() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %879 = %878.0;
  (%879,)
}

def @func_13605() -> Tensor[(12, 10, 15), float64] {
  @func_3350() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_6420() -> Tensor[(12, 10, 15), float64] {
  %880 = @func_5617() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %880.0
}

def @func_9174() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %881 = @func_5340() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %882 = @func_6920() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %883 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
  %884 = %881.0;
  %885 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  %886 = %882.1;
  (%883, %884, %885, %886)
}

def @func_9656() -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %887 = @func_6720() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %888 = @func_5150() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %889 = @func_6276() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %890 = %887.0;
  %891 = %888.0;
  %892 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  %893 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
  %894 = %889.2;
  (%890, %891, %892, %893, %894)
}

def @func_1140() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %895 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %896 = %895.0;
  %897 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  (%896, %897)
}

def @func_14296() -> Tensor[(12, 10, 15), float64] {
  @func_10966() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_22400() -> (Tensor[(12, 10, 15), float64],) {
  %898 = @func_20009() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %899 = %898.0;
  (%899,)
}

def @func_6720() -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %900 = @func_6405() /* ty=(Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */;
  %901 = %900.3;
  %902 = @func_5404() /* ty=Tensor[(12, 10, 15), float64] */;
  %903 = @func_294() /* ty=Tensor[(12, 10, 15), float64] */;
  (%901, %902, %903)
}

def @func_871() -> Tensor[(8, 16, 7), bool] {
  @func_861() /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_7125() -> Tensor[(12, 10, 15), float64] {
  %904 = @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */;
  %904.1
}

def @func_143() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %905 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  %906 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  %907 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %908 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  (%905, %906, %907, %908)
}

def @func_20156() -> Tensor[(12, 10, 15), float64] {
  @func_7204() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_18772() -> (Tensor[(12, 10, 15), float64],) {
  %909 = @func_11706() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %910 = %909.0;
  (%910,)
}

def @func_2995(%var_2955: Tensor[(7, 1, 5), float32], %var_2956: Tensor[(7, 1, 5), float32], %var_2963: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) {
  %911 = cast(%var_2963, dtype="bool") /* ty=Tensor[(896), bool] */;
  %912 = reshape(%911, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
  %913 = @func_513(%912) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(8, 16, 7), uint32]) */;
  %914 = cast(%var_2956, dtype="bool") /* ty=Tensor[(7, 1, 5), bool] */;
  %915 = shape_of(%var_2955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %916 = cast(%var_2955, dtype="bool") /* ty=Tensor[(7, 1, 5), bool] */;
  %917 = dyn.reshape(%914, %915, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %918 = less(%916, %917) /* ty=Tensor[(7, ?, 5), bool] */;
  %919 = cast(%var_2955, dtype="bool") /* ty=Tensor[(7, 1, 5), bool] */;
  %920 = shape_of(%918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %921 = cast(%918, dtype="bool") /* ty=Tensor[(7, ?, 5), bool] */;
  %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %923 = %913.0;
  %924 = logical_and(%921, %922) /* ty=Tensor[(7, ?, 5), bool] */;
  (%923, %var_2963, %924)
}

def @func_16211() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) {
  %925 = @func_11706() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %926 = @func_9656() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %927 = %925.1;
  %928 = @func_3242() /* ty=Tensor[(8, 16, 7), bool] */;
  %929 = %926.2;
  (%927, %928, %929)
}

def @func_13920(%var_13908: Tensor[(1, 16, 9), float64]) -> Tensor[(?, 16, 9), float32] {
  %930 = cast(%var_13908, dtype="float64") /* ty=Tensor[(1, 16, 9), float64] */;
  %931 = sinh(%930) /* ty=Tensor[(1, 16, 9), float64] */;
  %932 = cast(%931, dtype="float32") /* ty=Tensor[(1, 16, 9), float32] */;
  %933 = shape_of(%var_13908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%var_13908, dtype="float32") /* ty=Tensor[(1, 16, 9), float32] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  multiply(%934, %935) /* ty=Tensor[(?, 16, 9), float32] */
}

def @func_7979() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %936 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %937 = @func_1542() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) */;
  %938 = %936.0;
  %939 = %937.0;
  (%938, %939)
}

def @func_1863() -> (Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), bool]) {
  %940 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %941 = cast(meta[relay.Constant][29] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %942 = reshape(%941, newshape=[1, 15, 10]) /* ty=Tensor[(1, 15, 10), float64] */;
  %943 = @func_768(%942) /* ty=(Tensor[(1, 15, 10), float64],) */;
  %944 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %945 = %944.2;
  %946 = cast(%945, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %947 = reshape(%946, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
  %948 = @func_1780(%947) /* ty=(Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %949 = @func_294() /* ty=Tensor[(12, 10, 15), float64] */;
  %950 = cast(%945, dtype="bool") /* ty=Tensor[(12, 10, 15), bool] */;
  %951 = shape_of(%949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %952 = cast(%949, dtype="bool") /* ty=Tensor[(12, 10, 15), bool] */;
  %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %954 = %940.1;
  %955 = %943.0;
  %956 = %948.2;
  %957 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  %958 = less_equal(%952, %953) /* ty=Tensor[(12, 10, 15), bool] */;
  (%954, %955, meta[relay.Constant][29] /* ty=Tensor[(150), float64] */, %956, %957, %958)
}

def @func_13490() -> (Tensor[(12, 10, 15), float64],) {
  %959 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %960 = %959.0;
  (%960,)
}

def @func_7204() -> Tensor[(12, 10, 15), float64] {
  %961 = @func_2460() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %961.0
}

def @func_2726(%var_2679: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) {
  %962 = @func_1379() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %963 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %964 = cast(%var_2679, dtype="bool") /* ty=Tensor[(896), bool] */;
  %965 = reshape(%964, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
  %966 = @func_513(%965) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(8, 16, 7), uint32]) */;
  %967 = %962.0;
  %968 = %963.0;
  %969 = %966.0;
  (%967, %968, %969, %var_2679)
}

def @func_7697() -> Tensor[(12, 10, 15), float64] {
  %970 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %970.0
}

def @func_3913() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) {
  %971 = @func_3741() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) */;
  %972 = %971.1;
  %973 = cast(%972, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %974 = reshape(%973, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
  %975 = @func_1780(%974) /* ty=(Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %976 = @func_1182() /* ty=Tensor[(12, 10, 15), float64] */;
  %977 = %975.0;
  %978 = @func_2920() /* ty=Tensor[(25, 6), float64] */;
  (%976, %972, %977, %978)
}

def @func_13732() -> (Tensor[(12, 10, 15), float64],) {
  %979 = @func_5101() /* ty=Tensor[(12, 10, 15), float64] */;
  (%979,)
}

def @func_9939(%var_9899: Tensor[(8, 16, 7), bool]) -> (Tensor[(8, 16, 7), int32], Tensor[(8, 16, 7), float32]) {
  %980 = @func_4146() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %981 = %980.0;
  %982 = cast(%var_9899, dtype="int32") /* ty=Tensor[(8, 16, 7), int32] */;
  %983 = shape_of(%981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %984 = cast(%981, dtype="int32") /* ty=Tensor[(8, 16, 7), int32] */;
  %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %986 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 16, 7), bool] */, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
  %987 = shape_of(%981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %988 = cast(%981, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
  %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %990 = minimum(%984, %985) /* ty=Tensor[(8, 16, 7), int32] */;
  %991 = power(%988, %989) /* ty=Tensor[(8, 16, 7), float32] */;
  (%990, %991)
}

def @func_12085() -> Tensor[(8, 16, 7), float64] {
  %992 = @func_871() /* ty=Tensor[(8, 16, 7), bool] */;
  %993 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 16, 7), bool] */, dtype="float64") /* ty=Tensor[(8, 16, 7), float64] */;
  %994 = shape_of(%992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(%992, dtype="float64") /* ty=Tensor[(8, 16, 7), float64] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%995, %996) /* ty=Tensor[(8, 16, 7), float64] */
}

def @func_2777() -> Tensor[(12, 10, 15), float64] {
  %997 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %997.0
}

def @func_21473() -> Tensor[(12, 10, 15), float64] {
  %998 = @func_5795() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %998.0
}

def @func_738() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %999 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  %1000 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  (%999, %1000)
}

def @func_5617() -> (Tensor[(12, 10, 15), float64],) {
  %1001 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1001,)
}

def @func_7347() -> Tensor[(12, 10, 15), float64] {
  %1002 = @func_274() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1002.1
}

def @func_2823() -> Tensor[(12, 10, 15), float64] {
  %1003 = @func_2229() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1003.0
}

def @func_11606() -> Tensor[(12, 10, 15), float64] {
  %1004 = @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1004.0
}

def @func_16722(%var_16711: Tensor[(35), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(7, ?, 5), bool], Tensor[(35), float32], Tensor[(14, 64), bool], Tensor[(12, 10, 15), float64]) {
  %1005 = @func_4503() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1006 = cast(meta[relay.Constant][32] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1007 = reshape(%1006, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %1008 = @func_3790(%1007) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %1009 = @func_5899() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1010 = cast(%var_16711, dtype="float32") /* ty=Tensor[(35), float32] */;
  %1011 = cast(%var_16711, dtype="float32") /* ty=Tensor[(35), float32] */;
  %1012 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 64), bool] */, dtype="bool") /* ty=Tensor[(14, 64), bool] */;
  %1013 = reshape(%1010, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
  %1014 = reshape(%1011, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
  %1015 = reshape(%1012, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1016 = @func_2995(%1013, %1014, %1015) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) */;
  %1017 = %1005.0;
  %1018 = %1008.1;
  %1019 = %1009.2;
  %1020 = %1016.2;
  %1021 = @func_5225() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1017, %1018, meta[relay.Constant][32] /* ty=Tensor[(150), float64] */, %1019, %1020, %var_16711, meta[relay.Constant][33] /* ty=Tensor[(14, 64), bool] */, %1021)
}

def @func_21514() -> (Tensor[(8, 16, 7), float64], Tensor[(12, 10, 15), float64]) {
  %1022 = @func_20275() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float64]) */;
  %1023 = %1022.1;
  %1024 = @func_7347() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1023, %1024)
}

def @func_10106() -> (Tensor[(12, 10, 15), float32],) {
  %1025 = @func_7242() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %1026 = %1025.2;
  (%1026,)
}

def @func_5323() -> Tensor[(8, 16, 7), bool] {
  @func_861() /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_22054() -> (Tensor[(12, 10, 15), float64],) {
  %1027 = @func_12062() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1028 = %1027.1;
  (%1028,)
}

def @func_86() -> Tensor[(12, 10, 15), float64] {
  @func_42() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_6147() -> (Tensor[(12, 10, 15), float64],) {
  %1029 = @func_3323() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1029,)
}

def @func_1685() -> (Tensor[(12, 10, 15), float64],) {
  %1030 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1030,)
}

def @func_1780(%var_1764: Tensor[(12, 10, 15), float64]) -> (Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1031 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  %1032 = cast(%var_1764, dtype="uint64") /* ty=Tensor[(12, 10, 15), uint64] */;
  %1033 = shape_of(%1031, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1034 = cast(%1031, dtype="uint64") /* ty=Tensor[(12, 10, 15), uint64] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1036 = @func_1379() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1037 = cast(%1031, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %1038 = multiply(%1034, %1035) /* ty=Tensor[(12, 10, 15), uint64] */;
  %1039 = %1036.1;
  %1040 = acos(%1037) /* ty=Tensor[(12, 10, 15), float64] */;
  (%1038, %1039, %1040)
}

def @func_4902(%var_4871: Tensor[(11, 8, 10), int16]) -> (Tensor[(11, 8, 10), bool], Tensor[(8, 16, 7), bool]) {
  %1041 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 8, 10), int16] */, dtype="bool") /* ty=Tensor[(1, 8, 10), bool] */;
  %1042 = cast(%var_4871, dtype="bool") /* ty=Tensor[(11, 8, 10), bool] */;
  %1043 = greater(%1041, %1042) /* ty=Tensor[(11, 8, 10), bool] */;
  %1044 = @func_3242() /* ty=Tensor[(8, 16, 7), bool] */;
  (%1043, %1044)
}

def @func_21273() -> (Tensor[(12, 10, 15), float64],) {
  %1045 = @func_17639() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1045,)
}

def @func_15373() -> Tensor[(12, 10, 15), int64] {
  @func_14059() /* ty=Tensor[(12, 10, 15), int64] */
}

def @func_14746() -> (Tensor[(12, 10, 15), float32],) {
  %1046 = @func_10106() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %1047 = %1046.0;
  (%1047,)
}

def @func_11034() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) {
  %1048 = @func_10106() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %1049 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1050 = %1048.0;
  %1051 = %1049.1;
  (%1050, %1051)
}

def @func_17900() -> (Tensor[(150), float64],) {
  %1052 = @func_12899() /* ty=(Tensor[(150), float64],) */;
  %1053 = %1052.0;
  (%1053,)
}

def @func_3092(%var_3003: Tensor[(5, 2, 11), float64], %var_3040: Tensor[(896), bool], %var_3046: Tensor[(12, 10, 15), float64], %var_3080: Tensor[(13, 35), float32]) -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(12, 10, 15), float64], Tensor[(13, 35), int64]) {
  %1054 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 35), float32] */, dtype="float32") /* ty=Tensor[(1, 35), float32] */;
  %1055 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 35), float32] */, dtype="float32") /* ty=Tensor[(1, 35), float32] */;
  %1056 = cast(%var_3040, dtype="bool") /* ty=Tensor[(896), bool] */;
  %1057 = reshape(%1054, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
  %1058 = reshape(%1055, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
  %1059 = reshape(%1056, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1060 = @func_2995(%1057, %1058, %1059) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) */;
  %1061 = %1060.0;
  %1062 = cast(%var_3046, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %1063 = shape_of(%1061, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1064 = cast(%1061, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %1065 = dyn.reshape(%1062, %1063, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1066 = cast(%var_3003, dtype="float64") /* ty=Tensor[(5, 2, 11), float64] */;
  %1067 = exp(%1066) /* ty=Tensor[(5, 2, 11), float64] */;
  %1068 = cast(%1067, dtype="float32") /* ty=Tensor[(5, 2, 11), float32] */;
  %1069 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1070 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 35), float32] */, dtype="int64") /* ty=Tensor[(1, 35), int64] */;
  %1071 = cast(%var_3080, dtype="int64") /* ty=Tensor[(13, 35), int64] */;
  %1072 = divide(%1064, %1065) /* ty=Tensor[(12, 10, 15), float64] */;
  %1073 = sqrt(%1068) /* ty=Tensor[(5, 2, 11), float32] */;
  %1074 = %1069.1;
  %1075 = subtract(%1070, %1071) /* ty=Tensor[(13, 35), int64] */;
  (%var_3040, %1072, %1073, %1074, %1075)
}

def @func_768(%var_759: Tensor[(1, 15, 10), float64]) -> (Tensor[(1, 15, 10), float64],) {
  %1076 = cast(%var_759, dtype="float64") /* ty=Tensor[(1, 15, 10), float64] */;
  %1077 = atan(%1076) /* ty=Tensor[(1, 15, 10), float64] */;
  (%1077,)
}

def @func_815() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1078 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1079 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1080 = %1078.0;
  %1081 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  %1082 = %1079.1;
  (%1080, %1081, %1082)
}

def @func_9224() -> (Tensor[(12, 10, 15), float64],) {
  %1083 = @func_5225() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1083,)
}

def @func_9514() -> (Tensor[(12, 10, 15), float64],) {
  %1084 = @func_6622() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1085 = %1084.0;
  (%1085,)
}

def @func_19889() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1086 = @func_6531() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1087 = @func_18171() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1088 = %1086.1;
  %1089 = %1087.1;
  (%1088, %1089)
}

def @func_7414() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(880), int16]) {
  %1090 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1091 = cast(meta[relay.Constant][36] /* ty=Tensor[(880), int16] */, dtype="int16") /* ty=Tensor[(880), int16] */;
  %1092 = reshape(%1091, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), int16] */;
  %1093 = @func_4902(%1092) /* ty=(Tensor[(11, 8, 10), bool], Tensor[(8, 16, 7), bool]) */;
  %1094 = %1090.0;
  %1095 = %1093.1;
  (%1094, %1095, meta[relay.Constant][36] /* ty=Tensor[(880), int16] */)
}

def @func_12438() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1096 = @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1097 = @func_12122() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 880), int16], Tensor[(880), int16], Tensor[(12, 10, 15), float64]) */;
  %1098 = %1096.0;
  %1099 = %1097.0;
  (%1098, %1099)
}

def @func_5340() -> (Tensor[(12, 10, 15), float64],) {
  %1100 = @func_2646() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1100,)
}

def @func_7482() -> (Tensor[(12, 10, 15), float64],) {
  %1101 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1102 = %1101.0;
  (%1102,)
}

def @func_8081() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1103 = @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1104 = @func_2211() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(896), bool], Tensor[(8, 16, 7), bool]) */;
  %1105 = @func_7152() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1106 = @func_274() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1107 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1108 = %1103.0;
  %1109 = %1104.8;
  %1110 = %1105.0;
  %1111 = %1106.0;
  %1112 = %1107.0;
  (%1108, %1109, %1110, %1111, %1112)
}

def @func_8985() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1113 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1114 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1115 = @func_2575() /* ty=Tensor[(12, 10, 15), float64] */;
  %1116 = %1113.1;
  %1117 = %1114.0;
  %1118 = @func_1182() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1115, %1116, %1117, %1118)
}

def @func_3741() -> (Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) {
  %1119 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1120 = @func_2313() /* ty=Tensor[(12, 10, 15), int64] */;
  %1121 = %1119.2;
  (%1120, %1121)
}

def @func_5101() -> Tensor[(12, 10, 15), float64] {
  @func_86() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_5487() -> (Tensor[(12, 10, 15), float64],) {
  %1122 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1122,)
}

def @func_6566() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1123 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1124 = %1123.0;
  %1125 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  %1126 = @func_3124() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1124, %1125, %1126)
}

def @func_12389() -> Tensor[(12, 10, 15), float64] {
  %1127 = @func_9852() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1127.2
}

def @func_5566(%var_5530: Tensor[(1, 5, 5), float64], %var_5535: Tensor[(35), float32], %var_5536: Tensor[(896), bool]) -> (Tensor[(1, 5, 5), float64], Tensor[(896), bool], Tensor[(35), float32], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) {
  %1128 = cast(%var_5530, dtype="float64") /* ty=Tensor[(1, 5, 5), float64] */;
  %1129 = cast(%var_5535, dtype="float32") /* ty=Tensor[(35), float32] */;
  %1130 = cast(%var_5535, dtype="float32") /* ty=Tensor[(35), float32] */;
  %1131 = cast(%var_5536, dtype="bool") /* ty=Tensor[(896), bool] */;
  %1132 = reshape(%1129, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
  %1133 = reshape(%1130, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
  %1134 = reshape(%1131, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1135 = @func_2995(%1132, %1133, %1134) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) */;
  %1136 = atanh(%1128) /* ty=Tensor[(1, 5, 5), float64] */;
  %1137 = %1135.1;
  %1138 = @func_3417() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1136, %1137, %var_5535, %var_5536, %1138)
}

def @func_13202() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
  %1139 = @func_2229() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1140 = @func_11292() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %1141 = %1139.0;
  %1142 = %1140.1;
  (%1141, %1142)
}

def @func_14272() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(18), float32], Tensor[(288), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(56, 16), bool], Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64]) {
  %1143 = @func_7979() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %1144 = cast(meta[relay.Constant][37] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1145 = cast(meta[relay.Constant][38] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1146 = reshape(%1144, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %1147 = reshape(%1145, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), float32] */;
  %1148 = @func_3492(%1146, %1147) /* ty=(Tensor[(6, 3, 16), int16], Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) */;
  %1149 = @func_10500() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1150 = cast(meta[relay.Constant][39] /* ty=Tensor[(56, 16), bool] */, dtype="bool") /* ty=Tensor[(56, 16), bool] */;
  %1151 = reshape(%1150, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
  %1152 = @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %1153 = @func_5636() /* ty=Tensor[(12, 10, 15), float64] */;
  %1154 = %1143.1;
  %1155 = %1148.2;
  %1156 = @func_1182() /* ty=Tensor[(12, 10, 15), float64] */;
  %1157 = %1149.1;
  %1158 = @func_10869(%1151) /* ty=Tensor[(8, 16, 7), bool] */;
  %1159 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  %1160 = %1152.0;
  (%1153, %1154, %1155, meta[relay.Constant][37] /* ty=Tensor[(18), float32] */, meta[relay.Constant][38] /* ty=Tensor[(288), float32] */, %1156, %1157, %1158, meta[relay.Constant][39] /* ty=Tensor[(56, 16), bool] */, %1159, %1160)
}

def @func_15213() -> (Tensor[(12, 10, 15), float64],) {
  %1161 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %1162 = %1161.1;
  (%1162,)
}

def @func_15678(%var_15671: Tensor[(4, 6, 15), float64]) -> (Tensor[(4, 6, 15), float64],) {
  %1163 = cast(%var_15671, dtype="float64") /* ty=Tensor[(4, 6, 15), float64] */;
  %1164 = log(%1163) /* ty=Tensor[(4, 6, 15), float64] */;
  (%1164,)
}

def @func_19049() -> (Tensor[(12, 10, 15), float64],) {
  %1165 = @func_13116() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1166 = %1165.0;
  (%1166,)
}

def @func_3290(%var_3261: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(35), float32], Tensor[(896), bool]) {
  %1167 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1168 = cast(meta[relay.Constant][40] /* ty=Tensor[(35), float32] */, dtype="float32") /* ty=Tensor[(35), float32] */;
  %1169 = cast(meta[relay.Constant][40] /* ty=Tensor[(35), float32] */, dtype="float32") /* ty=Tensor[(35), float32] */;
  %1170 = cast(%var_3261, dtype="bool") /* ty=Tensor[(896), bool] */;
  %1171 = reshape(%1168, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
  %1172 = reshape(%1169, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
  %1173 = reshape(%1170, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1174 = @func_2995(%1171, %1172, %1173) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) */;
  %1175 = %1167.2;
  %1176 = %1174.1;
  (%1175, %1176, meta[relay.Constant][40] /* ty=Tensor[(35), float32] */, %var_3261)
}

def @func_6770() -> (Tensor[(150), float64],) {
  %1177 = @func_4275() /* ty=Tensor[(150), float64] */;
  (%1177,)
}

def @func_11119() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1178 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1179 = %1178.0;
  %1180 = @func_1182() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1179, %1180)
}

def @func_11706() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1181 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1182 = %1181.2;
  %1183 = @func_4258() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1182, %1183)
}

def @func_6622() -> (Tensor[(12, 10, 15), float64],) {
  %1184 = @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1185 = %1184.0;
  (%1185,)
}

def @func_14526() -> (Tensor[(880), int16], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1186 = @func_14442() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64], Tensor[(150), float64], Tensor[(880), int16]) */;
  %1187 = @func_1289() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %1188 = @func_5795() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1189 = %1186.3;
  %1190 = %1187.0;
  %1191 = %1188.1;
  %1192 = @func_7697() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1189, %1190, %1191, %1192)
}

def @func_12019(%var_11984: Tensor[(1, 880), int16]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(6, 6, 12), float64], Tensor[(3, 16, 1), float64], Tensor[(11, 8, 10), bool], Tensor[(1, 880), int16], Tensor[(12, 10, 15), float64]) {
  %1193 = @func_3558() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1194 = @func_6405() /* ty=(Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */;
  %1195 = %1194.2;
  %1196 = cast(%1195, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %1197 = reshape(%1196, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1198 = @func_6882(%1197) /* ty=(Tensor[(6, 6, 12), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(1, 15, 10), float64]) */;
  %1199 = cast(%var_11984, dtype="int16") /* ty=Tensor[(1, 880), int16] */;
  %1200 = reshape(%1199, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), int16] */;
  %1201 = @func_4902(%1200) /* ty=(Tensor[(11, 8, 10), bool], Tensor[(8, 16, 7), bool]) */;
  %1202 = @func_7242() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %1203 = @func_11234() /* ty=Tensor[(12, 10, 15), float64] */;
  %1204 = %1193.1;
  %1205 = %1198.0;
  %1206 = @func_8228() /* ty=Tensor[(3, 16, 1), float64] */;
  %1207 = %1201.0;
  %1208 = %1202.0;
  (%1203, %1204, %1195, %1205, %1206, %1207, %var_11984, %1208)
}

def @func_3417() -> Tensor[(12, 10, 15), float64] {
  @func_1208() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_4381() -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32], Tensor[(12, 10, 15), float64]) {
  %1209 = @func_861() /* ty=Tensor[(8, 16, 7), bool] */;
  %1210 = cast(%1209, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %1211 = reshape(%1210, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1212 = @func_3635(%1211) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */;
  %1213 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1214 = cast(%1209, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
  %1215 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
  %1216 = %1212.1;
  %1217 = %1213.0;
  %1218 = @func_2777() /* ty=Tensor[(12, 10, 15), float64] */;
  %1219 = asinh(%1214) /* ty=Tensor[(8, 16, 7), float32] */;
  %1220 = %1215.0;
  (%1216, %1217, %1218, %1219, %1220)
}

def @func_11666() -> (Tensor[(25, 6), float64], Tensor[(8, 16, 7), bool]) {
  %1221 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
  %1222 = %1221.3;
  %1223 = @func_5323() /* ty=Tensor[(8, 16, 7), bool] */;
  (%1222, %1223)
}

def @func_12062() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1224 = @func_2765() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1225 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %1226 = %1224.0;
  (%1225, %1226)
}

def @main(%var_22762: Tensor[(8, 16, 7), bool]) -> (Tensor[(8, 16, 7), int32], Tensor[(3, 16, 896), bool]) {
  %1227 = @func_8199() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %1228 = %1227.1;
  %1229 = cast(%var_22762, dtype="int32") /* ty=Tensor[(8, 16, 7), int32] */;
  %1230 = shape_of(%1228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1231 = cast(%1228, dtype="int32") /* ty=Tensor[(8, 16, 7), int32] */;
  %1232 = dyn.reshape(%1229, %1230, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1233 = @func_19567() /* ty=Tensor[(3, 16, 896), float64] */;
  %1234 = cast(%1233, dtype="float64") /* ty=Tensor[(3, 16, 896), float64] */;
  %1235 = rsqrt(%1234) /* ty=Tensor[(3, 16, 896), float64] */;
  %1236 = cast(%1233, dtype="float64") /* ty=Tensor[(3, 16, 896), float64] */;
  %1237 = asin(%1236) /* ty=Tensor[(3, 16, 896), float64] */;
  %1238 = cast(%1237, dtype="float64") /* ty=Tensor[(3, 16, 896), float64] */;
  %1239 = atanh(%1238) /* ty=Tensor[(3, 16, 896), float64] */;
  %1240 = cast(%1239, dtype="float64") /* ty=Tensor[(3, 16, 896), float64] */;
  %1241 = shape_of(%1235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1242 = cast(%1235, dtype="float64") /* ty=Tensor[(3, 16, 896), float64] */;
  %1243 = dyn.reshape(%1240, %1241, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1244 = mod(%1242, %1243) /* ty=Tensor[(3, 16, 896), float64] */;
  %1245 = cast(%1235, dtype="bool") /* ty=Tensor[(3, 16, 896), bool] */;
  %1246 = shape_of(%1244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1247 = cast(%1244, dtype="bool") /* ty=Tensor[(3, 16, 896), bool] */;
  %1248 = dyn.reshape(%1245, %1246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1249 = right_shift(%1231, %1232) /* ty=Tensor[(8, 16, 7), int32] */;
  %1250 = less(%1247, %1248) /* ty=Tensor[(3, 16, 896), bool] */;
  (%1249, %1250)
}

def @func_15246() -> Tensor[(12, 10, 15), float64] {
  @func_11606() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_3492(%var_3462: Tensor[(6, 3, 1), float32], %var_3463: Tensor[(6, 3, 16), float32]) -> (Tensor[(6, 3, 16), int16], Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) {
  %1251 = cast(%var_3462, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
  %1252 = cast(%var_3463, dtype="float32") /* ty=Tensor[(6, 3, 16), float32] */;
  %1253 = mod(%1251, %1252) /* ty=Tensor[(6, 3, 16), float32] */;
  %1254 = cast(%1253, dtype="int16") /* ty=Tensor[(6, 3, 16), int16] */;
  %1255 = shape_of(%var_3463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1256 = cast(%var_3463, dtype="int16") /* ty=Tensor[(6, 3, 16), int16] */;
  %1257 = dyn.reshape(%1254, %1255, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1258 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1259 = left_shift(%1256, %1257) /* ty=Tensor[(6, 3, 16), int16] */;
  %1260 = @func_2313() /* ty=Tensor[(12, 10, 15), int64] */;
  %1261 = %1258.1;
  (%1259, %1260, %1261)
}

def @func_19341(%var_19335: Tensor[(2, 8, 15), float64]) -> Tensor[(2, 8, 15), float64] {
  %1262 = cast(%var_19335, dtype="float64") /* ty=Tensor[(2, 8, 15), float64] */;
  cos(%1262) /* ty=Tensor[(2, 8, 15), float64] */
}

def @func_10991(%var_10987: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) {
  %1263 = @func_6622() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1264 = cast(%var_10987, dtype="bool") /* ty=Tensor[(896), bool] */;
  %1265 = reshape(%1264, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
  %1266 = @func_1975(%1265) /* ty=(Tensor[(8, 16, 7), uint64], Tensor[(12, 10, 15), float64]) */;
  %1267 = %1263.0;
  %1268 = %1266.1;
  (%1267, %1268, %var_10987)
}

def @func_7767() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1269 = @func_954() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) */;
  %1270 = @func_3323() /* ty=Tensor[(12, 10, 15), float64] */;
  %1271 = %1269.0;
  (%1270, %1271)
}

def @func_21249() -> (Tensor[(12, 10, 15), float64],) {
  %1272 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %1273 = %1272.0;
  (%1273,)
}

def @func_8407(%var_8386: Tensor[(896), bool], %var_8394: Tensor[(6, 6, 12), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(9, 6, 11), float32], Tensor[(594), float32], Tensor[(896), bool], Tensor[(896), bool], Tensor[(150), float64], Tensor[(6, 6, 12), float64], Tensor[(16, 10, 10), int8], Tensor[(1600), int8]) {
  %1274 = cast(meta[relay.Constant][41] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1275 = reshape(%1274, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %1276 = @func_3790(%1275) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %1277 = cast(meta[relay.Constant][42] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1278 = reshape(%1277, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), float32] */;
  %1279 = cast(%var_8386, dtype="bool") /* ty=Tensor[(896), bool] */;
  %1280 = reshape(%1279, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1281 = @func_3290(%1280) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(35), float32], Tensor[(896), bool]) */;
  %1282 = cast(meta[relay.Constant][41] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1283 = reshape(%1282, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %1284 = @func_3976(%1283) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %1285 = @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %1286 = %1285.0;
  %1287 = cast(%var_8394, dtype="float64") /* ty=Tensor[(6, 6, 12), float64] */;
  %1288 = shape_of(%1286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1289 = cast(%1286, dtype="float64") /* ty=Tensor[(6, 6, 12), float64] */;
  %1290 = dyn.reshape(%1287, %1288, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1291 = cast(meta[relay.Constant][43] /* ty=Tensor[(1600), int8] */, dtype="int8") /* ty=Tensor[(1600), int8] */;
  %1292 = reshape(%1291, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), int8] */;
  %1293 = @func_2823() /* ty=Tensor[(12, 10, 15), float64] */;
  %1294 = %1276.0;
  %1295 = @func_6043(%1278) /* ty=Tensor[(9, 6, 11), float32] */;
  %1296 = %1281.3;
  %1297 = %1284.2;
  %1298 = subtract(%1289, %1290) /* ty=Tensor[(6, 6, 12), float64] */;
  %1299 = @func_5255(%1292) /* ty=Tensor[(16, 10, 10), int8] */;
  (%1293, %1294, meta[relay.Constant][41] /* ty=Tensor[(150), float64] */, %1295, meta[relay.Constant][42] /* ty=Tensor[(594), float32] */, %1296, %var_8386, %1297, %1298, %1299, meta[relay.Constant][43] /* ty=Tensor[(1600), int8] */)
}

def @func_11483(%var_11462: Tensor[(800, 2), float32]) -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(16, 10, 10), int8], Tensor[(12, 10, 15), float64], Tensor[(7, ?, 5), bool], Tensor[(35), float32], Tensor[(800, 2), bool], Tensor[(800, 2), bool], Tensor[(12, 10, 15), float64]) {
  %1300 = @func_10928() /* ty=(Tensor[(896), bool],) */;
  %1301 = @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */;
  %1302 = @func_9785() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1303 = cast(meta[relay.Constant][44] /* ty=Tensor[(800, 2), int8] */, dtype="int8") /* ty=Tensor[(800, 2), int8] */;
  %1304 = reshape(%1303, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), int8] */;
  %1305 = @func_7767() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1306 = cast(meta[relay.Constant][45] /* ty=Tensor[(35), float32] */, dtype="float32") /* ty=Tensor[(35), float32] */;
  %1307 = cast(meta[relay.Constant][45] /* ty=Tensor[(35), float32] */, dtype="float32") /* ty=Tensor[(35), float32] */;
  %1308 = %1300.0;
  %1309 = cast(%1308, dtype="bool") /* ty=Tensor[(896), bool] */;
  %1310 = reshape(%1306, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
  %1311 = reshape(%1307, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
  %1312 = reshape(%1309, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1313 = @func_2995(%1310, %1311, %1312) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) */;
  %1314 = cast(meta[relay.Constant][44] /* ty=Tensor[(800, 2), int8] */, dtype="float64") /* ty=Tensor[(800, 2), float64] */;
  %1315 = cosh(%1314) /* ty=Tensor[(800, 2), float64] */;
  %1316 = cast(%1315, dtype="float32") /* ty=Tensor[(800, 2), float32] */;
  %1317 = sqrt(%1316) /* ty=Tensor[(800, 2), float32] */;
  %1318 = cast(%var_11462, dtype="bool") /* ty=Tensor[(800, 2), bool] */;
  %1319 = shape_of(%1317, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1320 = cast(%1317, dtype="bool") /* ty=Tensor[(800, 2), bool] */;
  %1321 = dyn.reshape(%1318, %1319, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1322 = cast(%1317, dtype="bool") /* ty=Tensor[(800, 2), bool] */;
  %1323 = shape_of(%1315, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1324 = cast(%1315, dtype="bool") /* ty=Tensor[(800, 2), bool] */;
  %1325 = dyn.reshape(%1322, %1323, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1326 = @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1327 = %1301.0;
  %1328 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  %1329 = %1302.0;
  %1330 = @func_5255(%1304) /* ty=Tensor[(16, 10, 10), int8] */;
  %1331 = %1305.1;
  %1332 = %1313.2;
  %1333 = less_equal(%1320, %1321) /* ty=Tensor[(800, 2), bool] */;
  %1334 = greater_equal(%1324, %1325) /* ty=Tensor[(800, 2), bool] */;
  %1335 = %1326.0;
  (%1308, %1327, %1328, %1329, %1330, %1331, %1332, meta[relay.Constant][45] /* ty=Tensor[(35), float32] */, %1333, %1334, %1335)
}

def @func_5373() -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(56, 16), bool]) {
  %1336 = @func_3558() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1337 = cast(meta[relay.Constant][46] /* ty=Tensor[(56, 16), bool] */, dtype="bool") /* ty=Tensor[(56, 16), bool] */;
  %1338 = reshape(%1337, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1339 = @func_3635(%1338) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */;
  %1340 = %1336.1;
  %1341 = %1339.1;
  (%1340, %1341, meta[relay.Constant][46] /* ty=Tensor[(56, 16), bool] */)
}

def @func_6453() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1342 = @func_4698() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1343 = @func_6102() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1344 = %1342.0;
  %1345 = @func_5636() /* ty=Tensor[(12, 10, 15), float64] */;
  %1346 = %1343.0;
  (%1344, %1345, %1346)
}

def @func_12560() -> Tensor[(12, 10, 15), float64] {
  @func_2575() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_7461() -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64]) {
  %1347 = @func_5373() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(56, 16), bool]) */;
  %1348 = @func_7242() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %1349 = %1347.1;
  %1350 = %1348.1;
  (%1349, %1350)
}

def @func_20765(%var_20763: Tensor[(880), int16]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(880), int16]) {
  %1351 = @func_7242() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %1352 = @func_13490() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1353 = cast(%var_20763, dtype="int16") /* ty=Tensor[(880), int16] */;
  %1354 = reshape(%1353, newshape=[1, 880]) /* ty=Tensor[(1, 880), int16] */;
  %1355 = @func_12019(%1354) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(6, 6, 12), float64], Tensor[(3, 16, 1), float64], Tensor[(11, 8, 10), bool], Tensor[(1, 880), int16], Tensor[(12, 10, 15), float64]) */;
  %1356 = %1351.1;
  %1357 = %1352.0;
  %1358 = %1355.7;
  (%1356, %1357, %1358, %var_20763)
}

def @func_9760(%var_9741: Tensor[(11, 3, 10), float64], %var_9742: Tensor[(11, 3, 10), float64], %var_9751: Tensor[(288), float32]) -> (Tensor[(11, 3, 10), float64], Tensor[(6, 3, 16), int16], Tensor[(18), float32], Tensor[(288), float32], Tensor[(12, 10, 15), float64]) {
  %1359 = cast(%var_9742, dtype="float64") /* ty=Tensor[(11, 3, 10), float64] */;
  %1360 = shape_of(%var_9741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1361 = cast(%var_9741, dtype="float64") /* ty=Tensor[(11, 3, 10), float64] */;
  %1362 = dyn.reshape(%1359, %1360, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1363 = cast(meta[relay.Constant][47] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1364 = cast(%var_9751, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1365 = reshape(%1363, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %1366 = reshape(%1364, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), float32] */;
  %1367 = @func_3492(%1365, %1366) /* ty=(Tensor[(6, 3, 16), int16], Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) */;
  %1368 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1369 = minimum(%1361, %1362) /* ty=Tensor[(11, 3, 10), float64] */;
  %1370 = %1367.0;
  %1371 = %1368.0;
  (%1369, %1370, meta[relay.Constant][47] /* ty=Tensor[(18), float32] */, %var_9751, %1371)
}

def @func_18064() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1372 = @func_17935() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1373 = @func_1685() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1374 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %1375 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1376 = @func_7204() /* ty=Tensor[(12, 10, 15), float64] */;
  %1377 = %1372.1;
  %1378 = %1373.0;
  %1379 = %1374.1;
  %1380 = %1375.0;
  (%1376, %1377, %1378, %1379, %1380)
}

def @func_1379() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1381 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1382 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
  %1383 = %1381.0;
  (%1382, %1383)
}

def @func_21731() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64]) {
  %1384 = @func_6622() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1385 = %1384.0;
  %1386 = @func_14059() /* ty=Tensor[(12, 10, 15), int64] */;
  (%1385, %1386)
}

def @func_6276() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1387 = @func_852() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %1388 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1389 = %1387.0;
  %1390 = @func_1427() /* ty=Tensor[(12, 10, 15), float64] */;
  %1391 = @func_2575() /* ty=Tensor[(12, 10, 15), float64] */;
  %1392 = %1388.0;
  %1393 = @func_5028() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1389, %1390, %1391, %1392, %1393)
}

def @func_15873() -> (Tensor[(12, 10, 15), float64],) {
  %1394 = @func_6102() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1395 = %1394.0;
  (%1395,)
}

def @func_18018() -> (Tensor[(8, 16, 7), bool],) {
  %1396 = @func_13202() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %1397 = %1396.1;
  (%1397,)
}

def @func_11724() -> (Tensor[(12, 10, 15), float64],) {
  %1398 = @func_1379() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1399 = %1398.0;
  (%1399,)
}

def @func_11884() -> Tensor[(6, 6, 12), float64] {
  @func_10905() /* ty=Tensor[(6, 6, 12), float64] */
}

def @func_1542() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) {
  %1400 = @func_852() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %1401 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1402 = %1400.0;
  %1403 = %1401.1;
  (%1402, %1403)
}

def @func_6043(%var_6038: Tensor[(9, 6, 11), float32]) -> Tensor[(9, 6, 11), float32] {
  %1404 = cast(%var_6038, dtype="float32") /* ty=Tensor[(9, 6, 11), float32] */;
  sqrt(%1404) /* ty=Tensor[(9, 6, 11), float32] */
}

def @func_10401() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1405 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1406 = %1405.0;
  %1407 = @func_4579() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1406, %1407)
}

def @func_8517(%var_8482: Tensor[(4, 12, 3), int64]) -> (Tensor[(4, 12, 3), int64], Tensor[(12, 10, 15), float64]) {
  %1408 = cast(%var_8482, dtype="int64") /* ty=Tensor[(4, 12, 3), int64] */;
  %1409 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(4, 12, 3), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1410 = cast(meta[relay.Constant][48] /* ty=Tensor[(4, 12, 3), int64] */, dtype="int64") /* ty=Tensor[(4, 12, 3), int64] */;
  %1411 = dyn.reshape(%1408, %1409, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1412 = @func_6323() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1413 = bitwise_and(%1410, %1411) /* ty=Tensor[(4, 12, 3), int64] */;
  %1414 = %1412.0;
  (%1413, %1414)
}

def @func_14395() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1415 = @func_5617() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1416 = @func_6531() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1417 = @func_6198() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1418 = %1415.0;
  %1419 = %1416.1;
  %1420 = %1417.0;
  (%1418, %1419, %1420)
}

def @func_18171() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1421 = @func_6720() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1422 = @func_8081() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1423 = %1421.2;
  %1424 = %1422.2;
  (%1423, %1424)
}

def @func_22625(%var_22620: float64) -> Tensor[(16, 1, 7), bool] {
  %1425 = cast(%var_22620, dtype="bool") /* ty=bool */;
  %1426 = cast(meta[relay.Constant][49] /* ty=Tensor[(16, 1, 7), float64] */, dtype="bool") /* ty=Tensor[(16, 1, 7), bool] */;
  not_equal(%1425, %1426) /* ty=Tensor[(16, 1, 7), bool] */
}

def @func_4065(%var_4045: Tensor[(150), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(12, 10, 15), uint64]) {
  %1427 = cast(%var_4045, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1428 = reshape(%1427, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %1429 = @func_3790(%1428) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %1430 = @func_3863() /* ty=Tensor[(12, 10, 15), float64] */;
  %1431 = cast(%1430, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %1432 = reshape(%1431, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
  %1433 = @func_1780(%1432) /* ty=(Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1434 = %1429.4;
  %1435 = %1433.0;
  (%1430, %1434, %var_4045, %1435)
}

def @func_12717() -> Tensor[(12, 10, 15), float64] {
  @func_566() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_8245(%var_8237: Tensor[(12, 2, 2), float64]) -> (Tensor[(12, 2, 2), float64],) {
  %1436 = cast(%var_8237, dtype="float64") /* ty=Tensor[(12, 2, 2), float64] */;
  %1437 = tan(%1436) /* ty=Tensor[(12, 2, 2), float64] */;
  (%1437,)
}

def @func_17639() -> Tensor[(12, 10, 15), float64] {
  %1438 = @func_8294() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1438.1
}

def @func_4146() -> (Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) {
  %1439 = @func_861() /* ty=Tensor[(8, 16, 7), bool] */;
  %1440 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1439, %1440)
}

def @func_13459(%var_13425: Tensor[(25, 6), float64], %var_13439: Tensor[(1, 880), int16]) -> (Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(1, 880), float64]) {
  %1441 = @func_11666() /* ty=(Tensor[(25, 6), float64], Tensor[(8, 16, 7), bool]) */;
  %1442 = %1441.0;
  %1443 = cast(%var_13425, dtype="float64") /* ty=Tensor[(25, 6), float64] */;
  %1444 = shape_of(%1442, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1445 = cast(%1442, dtype="float64") /* ty=Tensor[(25, 6), float64] */;
  %1446 = dyn.reshape(%1443, %1444, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1447 = @func_7544() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1448 = cast(%var_13439, dtype="int16") /* ty=Tensor[(1, 880), int16] */;
  %1449 = reshape(%1448, newshape=[1, 880]) /* ty=Tensor[(1, 880), int16] */;
  %1450 = @func_12019(%1449) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(6, 6, 12), float64], Tensor[(3, 16, 1), float64], Tensor[(11, 8, 10), bool], Tensor[(1, 880), int16], Tensor[(12, 10, 15), float64]) */;
  %1451 = cast(%var_13439, dtype="float64") /* ty=Tensor[(1, 880), float64] */;
  %1452 = atanh(%1451) /* ty=Tensor[(1, 880), float64] */;
  %1453 = cast(%1452, dtype="float64") /* ty=Tensor[(1, 880), float64] */;
  %1454 = floor_mod(%1445, %1446) /* ty=Tensor[(25, 6), float64] */;
  %1455 = %1447.1;
  %1456 = %1450.4;
  %1457 = erf(%1453) /* ty=Tensor[(1, 880), float64] */;
  (%1454, %1455, %1456, %1457)
}

def @func_13625() -> (Tensor[(12, 10, 15), float64],) {
  %1458 = @func_9224() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1459 = %1458.0;
  (%1459,)
}

def @func_15624() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 13), float64]) {
  %1460 = @func_4309() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1461 = @func_5458() /* ty=Tensor[(3, 16, 1), float64] */;
  %1462 = cast(%1461, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
  %1463 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 16, 13), float64] */, dtype="float64") /* ty=Tensor[(3, 16, 13), float64] */;
  %1464 = @func_11606() /* ty=Tensor[(12, 10, 15), float64] */;
  %1465 = %1460.0;
  %1466 = divide(%1462, %1463) /* ty=Tensor[(3, 16, 13), float64] */;
  (%1464, %1465, %1466)
}

def @func_5523() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(150), float64]) {
  %1467 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1468 = @func_852() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %1469 = cast(meta[relay.Constant][51] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1470 = reshape(%1469, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %1471 = @func_3790(%1470) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %1472 = %1467.1;
  %1473 = @func_5404() /* ty=Tensor[(12, 10, 15), float64] */;
  %1474 = %1468.0;
  %1475 = @func_5323() /* ty=Tensor[(8, 16, 7), bool] */;
  %1476 = %1471.0;
  (%1472, %1473, %1474, %1475, %1476, meta[relay.Constant][51] /* ty=Tensor[(150), float64] */)
}

def @func_12670() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1477 = @func_5150() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1478 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1479 = %1477.0;
  %1480 = %1478.0;
  (%1479, %1480)
}

def @func_22346() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1481 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1482 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %1483 = %1481.0;
  %1484 = %1482.0;
  (%1483, %1484)
}

def @func_2229() -> (Tensor[(12, 10, 15), float64],) {
  %1485 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1486 = %1485.0;
  (%1486,)
}

def @func_17100() -> (Tensor[(12, 10, 15), float64],) {
  %1487 = @func_5028() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1487,)
}

def @func_22578() -> Tensor[(12, 10, 15), float64] {
  @func_14296() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_21979() -> (Tensor[(12, 10, 15), float32],) {
  %1488 = @func_18995() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %1489 = %1488.0;
  (%1489,)
}

def @func_21411() -> Tensor[(12, 10, 15), float64] {
  @func_19726() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_22733() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1490 = @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1491 = @func_16444() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1492 = %1490.1;
  %1493 = %1491.1;
  (%1492, %1493)
}

def @func_14059() -> Tensor[(12, 10, 15), int64] {
  @func_2313() /* ty=Tensor[(12, 10, 15), int64] */
}

def @func_14358(%var_14351: Tensor[(72, 4), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(330, 1), float64], Tensor[(72, 4), float32]) {
  %1494 = @func_7913() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1495 = cast(meta[relay.Constant][52] /* ty=Tensor[(330, 1), float64] */, dtype="float64") /* ty=Tensor[(330, 1), float64] */;
  %1496 = cast(meta[relay.Constant][52] /* ty=Tensor[(330, 1), float64] */, dtype="float64") /* ty=Tensor[(330, 1), float64] */;
  %1497 = cast(%var_14351, dtype="float32") /* ty=Tensor[(72, 4), float32] */;
  %1498 = reshape(%1495, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), float64] */;
  %1499 = reshape(%1496, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), float64] */;
  %1500 = reshape(%1497, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1501 = @func_9760(%1498, %1499, %1500) /* ty=(Tensor[(11, 3, 10), float64], Tensor[(6, 3, 16), int16], Tensor[(18), float32], Tensor[(288), float32], Tensor[(12, 10, 15), float64]) */;
  %1502 = @func_9733() /* ty=Tensor[(12, 10, 15), float64] */;
  %1503 = @func_3323() /* ty=Tensor[(12, 10, 15), float64] */;
  %1504 = %1494.0;
  %1505 = %1501.4;
  (%1502, %1503, %1504, %1505, meta[relay.Constant][52] /* ty=Tensor[(330, 1), float64] */, %var_14351)
}

def @func_17789(%var_17781: Tensor[(1, 16, 16), float64]) -> (Tensor[(1, 16, 16), float64], Tensor[(8, 16, 7), bool]) {
  %1506 = cast(%var_17781, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  %1507 = cosh(%1506) /* ty=Tensor[(1, 16, 16), float64] */;
  %1508 = @func_3242() /* ty=Tensor[(8, 16, 7), bool] */;
  (%1507, %1508)
}

def @func_3323() -> Tensor[(12, 10, 15), float64] {
  @func_2813() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_11276() -> Tensor[(12, 10, 15), float64] {
  @func_2251() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_5594() -> (Tensor[(12, 10, 15), float64],) {
  %1509 = @func_2813() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1509,)
}

def @func_13112() -> (Tensor[(12, 10, 15), float64],) {
  %1510 = @func_2575() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1510,)
}

def @func_2566() -> (Tensor[(12, 10, 15), float32],) {
  %1511 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1512 = %1511.1;
  %1513 = cast(%1512, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
  %1514 = asinh(%1513) /* ty=Tensor[(12, 10, 15), float32] */;
  (%1514,)
}

def @func_18995() -> (Tensor[(12, 10, 15), float32],) {
  %1515 = @func_3558() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1516 = %1515.0;
  (%1516,)
}

def @func_3124() -> Tensor[(12, 10, 15), float64] {
  @func_627() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_8802(%var_8770: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(20, 80), uint32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(110), float64], Tensor[(896), bool], Tensor[(455), float32], Tensor[(12, 10, 15), float64], Tensor[(16, 10, 10), float32]) {
  %1517 = @func_6531() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1518 = @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */;
  %1519 = cast(meta[relay.Constant][53] /* ty=Tensor[(20, 80), int8] */, dtype="int8") /* ty=Tensor[(20, 80), int8] */;
  %1520 = reshape(%1519, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), int8] */;
  %1521 = @func_5255(%1520) /* ty=Tensor[(16, 10, 10), int8] */;
  %1522 = cast(%1521, dtype="uint32") /* ty=Tensor[(16, 10, 10), uint32] */;
  %1523 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(20, 80), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1524 = cast(meta[relay.Constant][53] /* ty=Tensor[(20, 80), int8] */, dtype="uint32") /* ty=Tensor[(20, 80), uint32] */;
  %1525 = dyn.reshape(%1522, %1523, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1526 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1527 = @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1528 = @func_3521() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %1529 = cast(meta[relay.Constant][54] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %1530 = cast(%var_8770, dtype="bool") /* ty=Tensor[(896), bool] */;
  %1531 = %1527.0;
  %1532 = cast(%1531, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %1533 = cast(meta[relay.Constant][55] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %1534 = reshape(%1529, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), float64] */;
  %1535 = reshape(%1530, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1536 = reshape(%1532, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
  %1537 = reshape(%1533, newshape=[13, 35]) /* ty=Tensor[(13, 35), float32] */;
  %1538 = @func_3092(%1534, %1535, %1536, %1537) /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(12, 10, 15), float64], Tensor[(13, 35), int64]) */;
  %1539 = cast(%var_8770, dtype="bool") /* ty=Tensor[(896), bool] */;
  %1540 = reshape(%1539, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1541 = @func_3635(%1540) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */;
  %1542 = cast(meta[relay.Constant][53] /* ty=Tensor[(20, 80), int8] */, dtype="float32") /* ty=Tensor[(20, 80), float32] */;
  %1543 = cos(%1542) /* ty=Tensor[(20, 80), float32] */;
  %1544 = cast(%1543, dtype="float32") /* ty=Tensor[(20, 80), float32] */;
  %1545 = shape_of(%1521, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1546 = cast(%1521, dtype="float32") /* ty=Tensor[(16, 10, 10), float32] */;
  %1547 = dyn.reshape(%1544, %1545, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1548 = %1517.0;
  %1549 = @func_4258() /* ty=Tensor[(12, 10, 15), float64] */;
  %1550 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  %1551 = %1518.2;
  %1552 = left_shift(%1524, %1525) /* ty=Tensor[(20, 80), uint32] */;
  %1553 = %1526.0;
  %1554 = %1528.0;
  %1555 = %1538.1;
  %1556 = %1541.3;
  %1557 = divide(%1546, %1547) /* ty=Tensor[(16, 10, 10), float32] */;
  (%1548, %1549, %1550, %1551, %1552, %1553, %1531, %1554, %1555, meta[relay.Constant][54] /* ty=Tensor[(110), float64] */, %var_8770, meta[relay.Constant][55] /* ty=Tensor[(455), float32] */, %1556, %1557)
}

def @func_654() -> Tensor[(12, 10, 15), float64] {
  @func_566() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_20275() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float64]) {
  %1558 = @func_19712() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1559 = @func_18440() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float64]) */;
  %1560 = %1558.1;
  %1561 = %1559.3;
  (%1560, %1561)
}

def @func_18440() -> (Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float64]) {
  %1562 = @func_15213() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1563 = @func_16737() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %1564 = @func_17997() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %1565 = %1562.0;
  %1566 = %1563.0;
  %1567 = %1564.1;
  %1568 = @func_12085() /* ty=Tensor[(8, 16, 7), float64] */;
  (%1565, %1566, %1567, %1568)
}

def @func_2813() -> Tensor[(12, 10, 15), float64] {
  %1569 = @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1569.0
}

def @func_9852() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1570 = @func_6933() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1571 = @func_6289() /* ty=Tensor[(12, 10, 15), float64] */;
  %1572 = %1570.0;
  %1573 = @func_5404() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1571, %1572, %1573)
}

def @func_20729() -> Tensor[(150), float64] {
  @func_4275() /* ty=Tensor[(150), float64] */
}

def @func_19967() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64]) {
  %1574 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1575 = @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1576 = %1574.0;
  %1577 = %1575.0;
  %1578 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %1579 = @func_2313() /* ty=Tensor[(12, 10, 15), int64] */;
  (%1576, %1577, %1578, %1579)
}

def @func_6198() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1580 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1581 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
  %1582 = %1580.0;
  (%1581, %1582)
}

def @func_3242() -> Tensor[(8, 16, 7), bool] {
  %1583 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %1583.0
}

def @func_16153() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(144), int64]) {
  %1584 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1585 = cast(meta[relay.Constant][56] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %1586 = reshape(%1585, newshape=[4, 12, 3]) /* ty=Tensor[(4, 12, 3), int64] */;
  %1587 = @func_8517(%1586) /* ty=(Tensor[(4, 12, 3), int64], Tensor[(12, 10, 15), float64]) */;
  %1588 = @func_12389() /* ty=Tensor[(12, 10, 15), float64] */;
  %1589 = %1584.0;
  %1590 = %1587.1;
  (%1588, %1589, %1590, meta[relay.Constant][56] /* ty=Tensor[(144), int64] */)
}

def @func_11522() -> (Tensor[(12, 10, 15), float64],) {
  %1591 = @func_4503() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1592 = %1591.1;
  (%1592,)
}

def @func_6289() -> Tensor[(12, 10, 15), float64] {
  %1593 = @func_954() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) */;
  %1593.0
}

def @func_9697() -> Tensor[(12, 10, 15), float64] {
  %1594 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1594.0
}

def @func_18816() -> (Tensor[(12, 10, 15), int64],) {
  %1595 = @func_15373() /* ty=Tensor[(12, 10, 15), int64] */;
  (%1595,)
}

def @func_15766(%var_15743: Tensor[(3, 1, 10), int16]) -> (Tensor[(3, 1, 10), int16],) {
  %1596 = cast(meta[relay.Constant][57] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1597 = cast(%var_15743, dtype="int16") /* ty=Tensor[(3, 1, 10), int16] */;
  %1598 = subtract(%1596, %1597) /* ty=Tensor[(3, 1, 10), int16] */;
  (%1598,)
}

def @func_21052() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1599 = @func_8998() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1600 = @func_5101() /* ty=Tensor[(12, 10, 15), float64] */;
  %1601 = %1599.0;
  (%1600, %1601)
}

def @func_22272() -> (Tensor[(12, 10, 15), float64], Tensor[(4, 12, 3), int64], Tensor[(144), int64], Tensor[(12, 10, 15), float64]) {
  %1602 = cast(meta[relay.Constant][58] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %1603 = reshape(%1602, newshape=[4, 12, 3]) /* ty=Tensor[(4, 12, 3), int64] */;
  %1604 = @func_8517(%1603) /* ty=(Tensor[(4, 12, 3), int64], Tensor[(12, 10, 15), float64]) */;
  %1605 = @func_9224() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1606 = @func_5225() /* ty=Tensor[(12, 10, 15), float64] */;
  %1607 = %1604.0;
  %1608 = %1605.0;
  (%1606, %1607, meta[relay.Constant][58] /* ty=Tensor[(144), int64] */, %1608)
}

def @func_6933() -> (Tensor[(12, 10, 15), float64],) {
  %1609 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1609,)
}

def @func_10869(%var_10849: Tensor[(8, 16, 7), bool]) -> Tensor[(8, 16, 7), bool] {
  %1610 = @func_871() /* ty=Tensor[(8, 16, 7), bool] */;
  %1611 = cast(%var_10849, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %1612 = shape_of(%1610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1613 = cast(%1610, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %1614 = dyn.reshape(%1611, %1612, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1613, %1614) /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_1182() -> Tensor[(12, 10, 15), float64] {
  %1615 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1615.1
}

def @func_3790(%var_3780: Tensor[(150), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) {
  %1616 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1617 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1618 = @func_3697() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1619 = cast(%var_3780, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1620 = reshape(%1619, newshape=[1, 15, 10]) /* ty=Tensor[(1, 15, 10), float64] */;
  %1621 = @func_768(%1620) /* ty=(Tensor[(1, 15, 10), float64],) */;
  %1622 = %1616.0;
  %1623 = %1617.1;
  %1624 = %1618.3;
  %1625 = %1621.0;
  (%1622, %1623, %1624, %1625, %var_3780)
}

def @func_9210() -> (Tensor[(12, 10, 15), float64],) {
  %1626 = @func_4503() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1627 = %1626.1;
  (%1627,)
}

def @func_14927() -> (Tensor[(12, 10, 15), float64],) {
  %1628 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1629 = %1628.0;
  (%1629,)
}

def @func_18302() -> (Tensor[(896), bool],) {
  %1630 = @func_10928() /* ty=(Tensor[(896), bool],) */;
  %1631 = %1630.0;
  (%1631,)
}

def @func_19567() -> Tensor[(3, 16, 896), float64] {
  %1632 = @func_15195() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(3, 16, 896), float64], Tensor[(150), float64], Tensor[(?, 896), int64]) */;
  %1632.1
}

def @func_5255(%var_5250: Tensor[(16, 10, 10), int8]) -> Tensor[(16, 10, 10), int8] {
  %1633 = cast(%var_5250, dtype="int8") /* ty=Tensor[(16, 10, 10), int8] */;
  %1634 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(16, 10, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1635 = cast(meta[relay.Constant][59] /* ty=Tensor[(16, 10, 10), int8] */, dtype="int8") /* ty=Tensor[(16, 10, 10), int8] */;
  %1636 = dyn.reshape(%1633, %1634, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  subtract(%1635, %1636) /* ty=Tensor[(16, 10, 10), int8] */
}

def @func_12529() -> (Tensor[(12, 10, 15), float64],) {
  %1637 = @func_9975() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1638 = %1637.0;
  (%1638,)
}

def @func_1289() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) {
  %1639 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1640 = cast(meta[relay.Constant][60] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1641 = reshape(%1640, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %1642 = @func_1101(%1641) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
  %1643 = %1639.1;
  %1644 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %1645 = %1642.4;
  (%1643, %1644, %1645, meta[relay.Constant][60] /* ty=Tensor[(150), float64] */)
}

def @func_21110() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1646 = @func_17307() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1647 = @func_18260() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1648 = %1646.0;
  %1649 = %1647.0;
  %1650 = @func_17382() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1648, %1649, %1650)
}

def @func_10699(%var_10631: Tensor[(25, 6), float64], %var_10652: Tensor[(25, 6), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(25, 6), bool], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), int32], Tensor[(12, 10, 15), float64]) {
  %1651 = @func_6933() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1652 = @func_2920() /* ty=Tensor[(25, 6), float64] */;
  %1653 = cast(%var_10631, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %1654 = shape_of(%1652, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1655 = cast(%1652, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %1656 = dyn.reshape(%1653, %1654, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1657 = mod(%1655, %1656) /* ty=Tensor[(25, 6), float32] */;
  %1658 = cast(%var_10652, dtype="bool") /* ty=Tensor[(25, 6), bool] */;
  %1659 = shape_of(%1657, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1660 = cast(%1657, dtype="bool") /* ty=Tensor[(25, 6), bool] */;
  %1661 = dyn.reshape(%1658, %1659, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1662 = @func_2211() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(896), bool], Tensor[(8, 16, 7), bool]) */;
  %1663 = @func_8294() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1664 = cast(%1657, dtype="int32") /* ty=Tensor[(25, 6), int32] */;
  %1665 = shape_of(%1652, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1666 = cast(%1652, dtype="int32") /* ty=Tensor[(25, 6), int32] */;
  %1667 = dyn.reshape(%1664, %1665, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1668 = %1651.0;
  %1669 = less(%1660, %1661) /* ty=Tensor[(25, 6), bool] */;
  %1670 = @func_5323() /* ty=Tensor[(8, 16, 7), bool] */;
  %1671 = %1662.1;
  %1672 = %1663.2;
  %1673 = subtract(%1666, %1667) /* ty=Tensor[(25, 6), int32] */;
  %1674 = @func_7104() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1668, %1669, %1670, %1671, %1672, %1673, %1674)
}

def @func_8998() -> (Tensor[(12, 10, 15), float64],) {
  %1675 = @func_4190() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1676 = %1675.0;
  (%1676,)
}

def @func_22488() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(2688), int64], Tensor[(432), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1677 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1678 = cast(meta[relay.Constant][61] /* ty=Tensor[(2688), int64] */, dtype="int64") /* ty=Tensor[(2688), int64] */;
  %1679 = cast(meta[relay.Constant][61] /* ty=Tensor[(2688), int64] */, dtype="int64") /* ty=Tensor[(2688), int64] */;
  %1680 = cast(meta[relay.Constant][62] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %1681 = reshape(%1678, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int64] */;
  %1682 = reshape(%1679, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int64] */;
  %1683 = reshape(%1680, newshape=[432]) /* ty=Tensor[(432), float64] */;
  %1684 = @func_18483(%1681, %1682, %1683) /* ty=(Tensor[(12, 16, 14), int64], Tensor[(6, 6, 12), float64], Tensor[(896, 1), bool], Tensor[(432), float64]) */;
  %1685 = @func_7913() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1686 = @func_2777() /* ty=Tensor[(12, 10, 15), float64] */;
  %1687 = %1677.2;
  %1688 = %1684.2;
  %1689 = @func_21473() /* ty=Tensor[(12, 10, 15), float64] */;
  %1690 = %1685.0;
  (%1686, %1687, %1688, meta[relay.Constant][61] /* ty=Tensor[(2688), int64] */, meta[relay.Constant][62] /* ty=Tensor[(432), float64] */, %1689, %1690)
}

def @func_16500() -> (Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64]) {
  %1691 = @func_10293() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1692 = @func_8228() /* ty=Tensor[(3, 16, 1), float64] */;
  %1693 = %1691.2;
  (%1692, %1693)
}

def @func_448() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1694 = @func_274() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1695 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1696 = %1694.1;
  %1697 = %1695.1;
  (%1696, %1697)
}

def @func_14442() -> (Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64], Tensor[(150), float64], Tensor[(880), int16]) {
  %1698 = cast(meta[relay.Constant][63] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1699 = cast(meta[relay.Constant][64] /* ty=Tensor[(880), int16] */, dtype="int16") /* ty=Tensor[(880), int16] */;
  %1700 = reshape(%1698, newshape=[25, 6]) /* ty=Tensor[(25, 6), float64] */;
  %1701 = reshape(%1699, newshape=[1, 880]) /* ty=Tensor[(1, 880), int16] */;
  %1702 = @func_13459(%1700, %1701) /* ty=(Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(1, 880), float64]) */;
  %1703 = @func_3323() /* ty=Tensor[(12, 10, 15), float64] */;
  %1704 = %1702.0;
  (%1703, %1704, meta[relay.Constant][63] /* ty=Tensor[(150), float64] */, meta[relay.Constant][64] /* ty=Tensor[(880), int16] */)
}

def @func_18612() -> Tensor[(12, 10, 15), float64] {
  @func_1208() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_21369() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1705 = @func_15474() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1706 = %1705.0;
  %1707 = @func_11606() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1706, %1707)
}

def @func_20009() -> (Tensor[(12, 10, 15), float64],) {
  %1708 = @func_11376() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %1709 = %1708.2;
  (%1709,)
}

def @func_17997() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
  %1710 = @func_6920() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1711 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %1712 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %1713 = %1710.0;
  %1714 = %1711.1;
  %1715 = %1712.0;
  (%1713, %1714, %1715)
}

def @func_18246(%var_18242: Tensor[(336), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(336), float64]) {
  %1716 = @func_7544() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1717 = cast(%var_18242, dtype="float64") /* ty=Tensor[(336), float64] */;
  %1718 = reshape(%1717, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %1719 = @func_14663(%1718) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64]) */;
  %1720 = %1716.0;
  %1721 = @func_13605() /* ty=Tensor[(12, 10, 15), float64] */;
  %1722 = %1719.1;
  (%1720, %1721, %1722, %var_18242)
}

def @func_2646() -> Tensor[(12, 10, 15), float64] {
  %1723 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1723.1
}

def @func_2502() -> Tensor[(12, 10, 15), float64] {
  %1724 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1724.0
}

def @func_22670() -> (Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(12, 10, 15), float64]) {
  %1725 = @func_7461() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */;
  %1726 = @func_1863() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), bool]) */;
  %1727 = @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1728 = %1725.1;
  %1729 = %1726.1;
  %1730 = %1727.0;
  (%1728, %1729, %1730)
}

def @func_4190() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1731 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %1732 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1733 = %1731.2;
  %1734 = %1732.0;
  %1735 = @func_1427() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1733, %1734, %1735)
}

def @func_2765() -> (Tensor[(12, 10, 15), float64],) {
  %1736 = @func_2502() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1736,)
}

def @func_19528() -> Tensor[(12, 10, 15), float64] {
  %1737 = @func_18756() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool]) */;
  %1737.0
}

def @func_20063() -> Tensor[(12, 10, 15), float64] {
  %1738 = @func_11087() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1738.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12440() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_12438() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_16213() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) {
  @func_16211() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */
}

def @func_21548() -> (Tensor[(12, 10, 15), float64],) {
  %2 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %0 = @func_9210() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_5029() -> Tensor[(12, 10, 15), float64] {
  %3 = fn () -> Tensor[(12, 10, 15), float64] {
    @func_1427() /* ty=Tensor[(12, 10, 15), float64] */
  };
  %3() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_20650() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %7 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %4 = @func_14296() /* ty=Tensor[(12, 10, 15), float64] */;
    %5 = @func_18612() /* ty=Tensor[(12, 10, 15), float64] */;
    %6 = @func_18345() /* ty=Tensor[(12, 10, 15), float64] */;
    (%4, %5, %6)
  };
  %7() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_7243() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %13 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
    %8 = @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %9 = @func_2566() /* ty=(Tensor[(12, 10, 15), float32],) */;
    %10 = @func_2251() /* ty=Tensor[(12, 10, 15), float64] */;
    %11 = %8.0;
    %12 = %9.0;
    (%10, %11, %12)
  };
  %13() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */
}

def @func_770(%var_769: Tensor[(1, 15, 10), float64]) -> (Tensor[(1, 15, 10), float64],) {
  %16 = fn (%var_759: Tensor[(1, 15, 10), float64]) -> (Tensor[(1, 15, 10), float64],) {
    %14 = cast(%var_759, dtype="float64") /* ty=Tensor[(1, 15, 10), float64] */;
    %15 = atan(%14) /* ty=Tensor[(1, 15, 10), float64] */;
    (%15,)
  };
  %16(%var_769) /* ty=(Tensor[(1, 15, 10), float64],) */
}

def @func_2348() -> (Tensor[(12, 10, 15), float64],) {
  %19 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %17 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %18 = %17.1;
    (%18,)
  };
  %19() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_9765(%var_9762: Tensor[(11, 3, 10), float64], %var_9763: Tensor[(11, 3, 10), float64], %var_9764: Tensor[(288), float32]) -> (Tensor[(11, 3, 10), float64], Tensor[(6, 3, 16), int16], Tensor[(18), float32], Tensor[(288), float32], Tensor[(12, 10, 15), float64]) {
  @func_9760(%var_9762, %var_9763, %var_9764) /* ty=(Tensor[(11, 3, 10), float64], Tensor[(6, 3, 16), int16], Tensor[(18), float32], Tensor[(288), float32], Tensor[(12, 10, 15), float64]) */
}

def @func_3097(%var_3093: Tensor[(5, 2, 11), float64], %var_3094: Tensor[(896), bool], %var_3095: Tensor[(12, 10, 15), float64], %var_3096: Tensor[(13, 35), float32]) -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(12, 10, 15), float64], Tensor[(13, 35), int64]) {
  %42 = fn (%var_3003: Tensor[(5, 2, 11), float64], %var_3040: Tensor[(896), bool], %var_3046: Tensor[(12, 10, 15), float64], %var_3080: Tensor[(13, 35), float32]) -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(12, 10, 15), float64], Tensor[(13, 35), int64]) {
    %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 35), float32] */, dtype="float32") /* ty=Tensor[(1, 35), float32] */;
    %21 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 35), float32] */, dtype="float32") /* ty=Tensor[(1, 35), float32] */;
    %22 = cast(%var_3040, dtype="bool") /* ty=Tensor[(896), bool] */;
    %23 = reshape(%20, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
    %24 = reshape(%21, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
    %25 = reshape(%22, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %26 = @func_2995(%23, %24, %25) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) */;
    %27 = %26.0;
    %28 = cast(%var_3046, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
    %29 = shape_of(%27, dtype="int32") /* ty=Tensor[(3), int32] */;
    %30 = cast(%27, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
    %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %32 = cast(%var_3003, dtype="float64") /* ty=Tensor[(5, 2, 11), float64] */;
    %33 = exp(%32) /* ty=Tensor[(5, 2, 11), float64] */;
    %34 = cast(%33, dtype="float32") /* ty=Tensor[(5, 2, 11), float32] */;
    %35 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %36 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 35), float32] */, dtype="int64") /* ty=Tensor[(1, 35), int64] */;
    %37 = cast(%var_3080, dtype="int64") /* ty=Tensor[(13, 35), int64] */;
    %38 = divide(%30, %31) /* ty=Tensor[(12, 10, 15), float64] */;
    %39 = sqrt(%34) /* ty=Tensor[(5, 2, 11), float32] */;
    %40 = %35.1;
    %41 = subtract(%36, %37) /* ty=Tensor[(13, 35), int64] */;
    (%var_3040, %38, %39, %40, %41)
  };
  %42(%var_3093, %var_3094, %var_3095, %var_3096) /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(12, 10, 15), float64], Tensor[(13, 35), int64]) */
}

def @func_1863() -> (Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), bool]) {
  %43 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %44 = cast(meta[relay.Constant][1] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %45 = reshape(%44, newshape=[1, 15, 10]) /* ty=Tensor[(1, 15, 10), float64] */;
  %46 = @func_768(%45) /* ty=(Tensor[(1, 15, 10), float64],) */;
  %47 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %48 = %47.2;
  %49 = cast(%48, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %50 = reshape(%49, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
  %51 = @func_1780(%50) /* ty=(Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %52 = @func_294() /* ty=Tensor[(12, 10, 15), float64] */;
  %53 = cast(%48, dtype="bool") /* ty=Tensor[(12, 10, 15), bool] */;
  %54 = shape_of(%52, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%52, dtype="bool") /* ty=Tensor[(12, 10, 15), bool] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %57 = %43.1;
  %58 = %46.0;
  %59 = %51.2;
  %60 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  %61 = less_equal(%55, %56) /* ty=Tensor[(12, 10, 15), bool] */;
  (%57, %58, meta[relay.Constant][1] /* ty=Tensor[(150), float64] */, %59, %60, %61)
}

def @func_3419() -> Tensor[(12, 10, 15), float64] {
  @func_3417() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_8986() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %68 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %62 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %63 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %64 = @func_2575() /* ty=Tensor[(12, 10, 15), float64] */;
    %65 = %62.1;
    %66 = %63.0;
    %67 = @func_1182() /* ty=Tensor[(12, 10, 15), float64] */;
    (%64, %65, %66, %67)
  };
  %68() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_5226() -> Tensor[(12, 10, 15), float64] {
  %69 = fn () -> Tensor[(12, 10, 15), float64] {
    @func_3417() /* ty=Tensor[(12, 10, 15), float64] */
  };
  %69() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_17308() -> (Tensor[(12, 10, 15), float64],) {
  %71 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %70 = @func_14296() /* ty=Tensor[(12, 10, 15), float64] */;
    (%70,)
  };
  %71() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_19821() -> (Tensor[(8, 16, 7), bool],) {
  @func_19819() /* ty=(Tensor[(8, 16, 7), bool],) */
}

def @func_19967() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64]) {
  %72 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %73 = @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %74 = %72.0;
  %75 = %73.0;
  %76 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %77 = @func_2313() /* ty=Tensor[(12, 10, 15), int64] */;
  (%74, %75, %76, %77)
}

def @func_10929() -> (Tensor[(896), bool],) {
  %80 = fn () -> (Tensor[(896), bool],) {
    %78 = @func_6720() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %79 = %78.0;
    (%79,)
  };
  %80() /* ty=(Tensor[(896), bool],) */
}

def @func_4902(%var_4871: Tensor[(11, 8, 10), int16]) -> (Tensor[(11, 8, 10), bool], Tensor[(8, 16, 7), bool]) {
  %81 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 8, 10), int16] */, dtype="bool") /* ty=Tensor[(1, 8, 10), bool] */;
  %82 = cast(%var_4871, dtype="bool") /* ty=Tensor[(11, 8, 10), bool] */;
  %83 = greater(%81, %82) /* ty=Tensor[(11, 8, 10), bool] */;
  %84 = @func_3242() /* ty=Tensor[(8, 16, 7), bool] */;
  (%83, %84)
}

def @func_11601() -> (Tensor[(12, 10, 15), float64],) {
  %87 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %85 = @func_2229() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %86 = %85.0;
    (%86,)
  };
  %87() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_4309() -> (Tensor[(12, 10, 15), float64],) {
  %88 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %89 = %88.0;
  (%89,)
}

def @func_12560() -> Tensor[(12, 10, 15), float64] {
  @func_2575() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_18347() -> Tensor[(12, 10, 15), float64] {
  @func_18345() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_4443(%var_4441: Tensor[(11, 3, 3), uint64], %var_4442: Tensor[(11, 3, 3), uint64]) -> (Tensor[(11, 3, 3), uint64], Tensor[(12, 10, 15), float64]) {
  @func_4439(%var_4441, %var_4442) /* ty=(Tensor[(11, 3, 3), uint64], Tensor[(12, 10, 15), float64]) */
}

def @func_223() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %90 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %91 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  (%90, %91)
}

def @func_22489() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(2688), int64], Tensor[(432), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %106 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(2688), int64], Tensor[(432), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %92 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %93 = cast(meta[relay.Constant][3] /* ty=Tensor[(2688), int64] */, dtype="int64") /* ty=Tensor[(2688), int64] */;
    %94 = cast(meta[relay.Constant][3] /* ty=Tensor[(2688), int64] */, dtype="int64") /* ty=Tensor[(2688), int64] */;
    %95 = cast(meta[relay.Constant][4] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
    %96 = reshape(%93, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int64] */;
    %97 = reshape(%94, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int64] */;
    %98 = reshape(%95, newshape=[432]) /* ty=Tensor[(432), float64] */;
    %99 = @func_18483(%96, %97, %98) /* ty=(Tensor[(12, 16, 14), int64], Tensor[(6, 6, 12), float64], Tensor[(896, 1), bool], Tensor[(432), float64]) */;
    %100 = @func_7913() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %101 = @func_2777() /* ty=Tensor[(12, 10, 15), float64] */;
    %102 = %92.2;
    %103 = %99.2;
    %104 = @func_21473() /* ty=Tensor[(12, 10, 15), float64] */;
    %105 = %100.0;
    (%101, %102, %103, meta[relay.Constant][3] /* ty=Tensor[(2688), int64] */, meta[relay.Constant][4] /* ty=Tensor[(432), float64] */, %104, %105)
  };
  %106() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(2688), int64], Tensor[(432), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_8228() -> Tensor[(3, 16, 1), float64] {
  @func_5458() /* ty=Tensor[(3, 16, 1), float64] */
}

def @func_14929() -> (Tensor[(12, 10, 15), float64],) {
  @func_14927() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_12530() -> (Tensor[(12, 10, 15), float64],) {
  %109 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %107 = @func_9975() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %108 = %107.0;
    (%108,)
  };
  %109() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_6495() -> (Tensor[(12, 10, 15), float64],) {
  %110 = @func_4146() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %111 = %110.1;
  (%111,)
}

def @func_15375() -> Tensor[(12, 10, 15), int64] {
  @func_15373() /* ty=Tensor[(12, 10, 15), int64] */
}

def @func_13538() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %120 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %112 = @func_13258() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %113 = @func_11834() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
    %114 = @func_13116() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %115 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
    %116 = %112.3;
    %117 = %113.2;
    %118 = %114.0;
    %119 = @func_2502() /* ty=Tensor[(12, 10, 15), float64] */;
    (%115, %116, %117, %118, %119)
  };
  %120() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_19969() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64]) {
  @func_19967() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64]) */
}

def @func_11726() -> (Tensor[(12, 10, 15), float64],) {
  @func_11724() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_16663() -> Tensor[(12, 10, 15), float64] {
  @func_16661() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_17192() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_17190() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_8520(%var_8518: Tensor[(4, 12, 3), int64]) -> (Tensor[(4, 12, 3), int64], Tensor[(12, 10, 15), float64]) {
  @func_8517(%var_8518) /* ty=(Tensor[(4, 12, 3), int64], Tensor[(12, 10, 15), float64]) */
}

def @func_18081() -> (Tensor[(8, 16, 7), bool],) {
  %122 = fn () -> (Tensor[(8, 16, 7), bool],) {
    %121 = @func_17851() /* ty=Tensor[(8, 16, 7), bool] */;
    (%121,)
  };
  %122() /* ty=(Tensor[(8, 16, 7), bool],) */
}

def @func_20011() -> (Tensor[(12, 10, 15), float64],) {
  @func_20009() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_449() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %127 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %123 = @func_274() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %124 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %125 = %123.1;
    %126 = %124.1;
    (%125, %126)
  };
  %127() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_11234() -> Tensor[(12, 10, 15), float64] {
  @func_2502() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_11523() -> (Tensor[(12, 10, 15), float64],) {
  %130 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %128 = @func_4503() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %129 = %128.1;
    (%129,)
  };
  %130() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_16900() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %131 = @func_2566() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %132 = @func_143() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %133 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %134 = %131.0;
  %135 = %132.0;
  %136 = %133.2;
  %137 = @func_2777() /* ty=Tensor[(12, 10, 15), float64] */;
  (%134, %135, %136, %137)
}

def @func_21980() -> (Tensor[(12, 10, 15), float32],) {
  %140 = fn () -> (Tensor[(12, 10, 15), float32],) {
    %138 = @func_18995() /* ty=(Tensor[(12, 10, 15), float32],) */;
    %139 = %138.0;
    (%139,)
  };
  %140() /* ty=(Tensor[(12, 10, 15), float32],) */
}

def @func_14296() -> Tensor[(12, 10, 15), float64] {
  @func_10966() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_17641() -> Tensor[(12, 10, 15), float64] {
  @func_17639() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_7153() -> (Tensor[(12, 10, 15), float64],) {
  %142 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %141 = @func_2502() /* ty=Tensor[(12, 10, 15), float64] */;
    (%141,)
  };
  %142() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_2212() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(896), bool], Tensor[(8, 16, 7), bool]) {
  %170 = fn () -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(896), bool], Tensor[(8, 16, 7), bool]) {
    %143 = @func_852() /* ty=(Tensor[(12, 10, 15), float32],) */;
    %144 = @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %145 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
    %146 = cast(%145, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
    %147 = reshape(%146, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
    %148 = @func_1780(%147) /* ty=(Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %149 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 10, 15), float64] */, dtype="uint64") /* ty=Tensor[(12, 10, 15), uint64] */;
    %150 = shape_of(%145, dtype="int32") /* ty=Tensor[(3), int32] */;
    %151 = cast(%145, dtype="uint64") /* ty=Tensor[(12, 10, 15), uint64] */;
    %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %153 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %154 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %155 = cast(meta[relay.Constant][6] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
    %156 = reshape(%155, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
    %157 = @func_513(%156) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(8, 16, 7), uint32]) */;
    %158 = %143.0;
    %159 = @func_1208() /* ty=Tensor[(12, 10, 15), float64] */;
    %160 = %144.0;
    %161 = %148.0;
    %162 = right_shift(%151, %152) /* ty=Tensor[(12, 10, 15), uint64] */;
    %163 = %153.0;
    %164 = @func_294() /* ty=Tensor[(12, 10, 15), float64] */;
    %165 = %154.2;
    %166 = @func_294() /* ty=Tensor[(12, 10, 15), float64] */;
    %167 = @func_1208() /* ty=Tensor[(12, 10, 15), float64] */;
    %168 = %157.1;
    %169 = @func_871() /* ty=Tensor[(8, 16, 7), bool] */;
    (%158, %159, %160, %161, %162, %163, %164, %165, %166, %167, %168, meta[relay.Constant][6] /* ty=Tensor[(896), bool] */, %169)
  };
  %170() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(896), bool], Tensor[(8, 16, 7), bool]) */
}

def @func_14061() -> Tensor[(12, 10, 15), int64] {
  @func_14059() /* ty=Tensor[(12, 10, 15), int64] */
}

def @func_2814() -> Tensor[(12, 10, 15), float64] {
  %172 = fn () -> Tensor[(12, 10, 15), float64] {
    %171 = @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %171.0
  };
  %172() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_7414() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(880), int16]) {
  %173 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %174 = cast(meta[relay.Constant][7] /* ty=Tensor[(880), int16] */, dtype="int16") /* ty=Tensor[(880), int16] */;
  %175 = reshape(%174, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), int16] */;
  %176 = @func_4902(%175) /* ty=(Tensor[(11, 8, 10), bool], Tensor[(8, 16, 7), bool]) */;
  %177 = %173.0;
  %178 = %176.1;
  (%177, %178, meta[relay.Constant][7] /* ty=Tensor[(880), int16] */)
}

def @func_8230() -> Tensor[(3, 16, 1), float64] {
  @func_8228() /* ty=Tensor[(3, 16, 1), float64] */
}

def @func_9680() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  @func_9678() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */
}

def @func_10906() -> Tensor[(6, 6, 12), float64] {
  %180 = fn () -> Tensor[(6, 6, 12), float64] {
    %179 = @func_3521() /* ty=(Tensor[(6, 6, 12), float64],) */;
    %179.0
  };
  %180() /* ty=Tensor[(6, 6, 12), float64] */
}

def @func_373() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %183 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %181 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
    %182 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
    (%181, %182)
  };
  %183() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_7698() -> Tensor[(12, 10, 15), float64] {
  %185 = fn () -> Tensor[(12, 10, 15), float64] {
    %184 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %184.0
  };
  %185() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_2890() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) {
  %193 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) {
    %186 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %187 = cast(meta[relay.Constant][8] /* ty=Tensor[(25, 6), float64] */, dtype="float64") /* ty=Tensor[(25, 6), float64] */;
    %188 = reshape(%187, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %189 = @func_1101(%188) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
    %190 = %186.0;
    %191 = @func_2646() /* ty=Tensor[(12, 10, 15), float64] */;
    %192 = %189.2;
    (%190, %191, %192, meta[relay.Constant][8] /* ty=Tensor[(25, 6), float64] */)
  };
  %193() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */
}

def @func_3325() -> Tensor[(12, 10, 15), float64] {
  @func_3323() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_15373() -> Tensor[(12, 10, 15), int64] {
  @func_14059() /* ty=Tensor[(12, 10, 15), int64] */
}

def @func_9226() -> (Tensor[(12, 10, 15), float64],) {
  @func_9224() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_18345() -> Tensor[(12, 10, 15), float64] {
  %194 = @func_13537() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %194.0
}

def @func_3699() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_3697() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_16500() -> (Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64]) {
  %195 = @func_10293() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %196 = @func_8228() /* ty=Tensor[(3, 16, 1), float64] */;
  %197 = %195.2;
  (%196, %197)
}

def @func_21678() -> Tensor[(12, 10, 15), float64] {
  %198 = @func_8464() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %198.1
}

def @func_15196() -> (Tensor[(12, 10, 15), float64], Tensor[(3, 16, 896), float64], Tensor[(150), float64], Tensor[(?, 896), int64]) {
  %216 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(3, 16, 896), float64], Tensor[(150), float64], Tensor[(?, 896), int64]) {
    %199 = @func_4665() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(110), float64], Tensor[(1, 896), bool], Tensor[(455), float32], Tensor[(12, 10, 15), float64]) */;
    %200 = %199.3;
    %201 = @func_9331() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64]) */;
    %202 = %201.2;
    %203 = cast(%200, dtype="float64") /* ty=Tensor[(1, 896), float64] */;
    %204 = cast(%202, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
    %205 = @func_14036() /* ty=(Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
    %206 = cast(%200, dtype="float64") /* ty=Tensor[(1, 896), float64] */;
    %207 = asinh(%206) /* ty=Tensor[(1, 896), float64] */;
    %208 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 896), float64] */, dtype="int64") /* ty=Tensor[(1, 896), int64] */;
    %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(2), int32] */;
    %210 = cast(%207, dtype="int64") /* ty=Tensor[(1, 896), int64] */;
    %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %212 = @func_10966() /* ty=Tensor[(12, 10, 15), float64] */;
    %213 = divide(%203, %204) /* ty=Tensor[(3, 16, 896), float64] */;
    %214 = %205.0;
    %215 = bitwise_xor(%210, %211) /* ty=Tensor[(?, 896), int64] */;
    (%212, %213, %214, %215)
  };
  %216() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(3, 16, 896), float64], Tensor[(150), float64], Tensor[(?, 896), int64]) */
}

def @func_1209() -> Tensor[(12, 10, 15), float64] {
  %218 = fn () -> Tensor[(12, 10, 15), float64] {
    %217 = @func_954() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) */;
    %217.0
  };
  %218() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_5715() -> (Tensor[(12, 10, 15), float64],) {
  %221 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %219 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %220 = %219.1;
    (%220,)
  };
  %221() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_2253() -> Tensor[(12, 10, 15), float64] {
  @func_2251() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_9211() -> (Tensor[(12, 10, 15), float64],) {
  %224 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %222 = @func_4503() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %223 = %222.1;
    (%223,)
  };
  %224() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_6532() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %228 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %225 = @func_6198() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %226 = %225.1;
    %227 = @func_3417() /* ty=Tensor[(12, 10, 15), float64] */;
    (%226, %227)
  };
  %228() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_1291() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) {
  @func_1289() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */
}

def @func_13607() -> Tensor[(12, 10, 15), float64] {
  @func_13605() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_10991(%var_10987: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) {
  %229 = @func_6622() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %230 = cast(%var_10987, dtype="bool") /* ty=Tensor[(896), bool] */;
  %231 = reshape(%230, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
  %232 = @func_1975(%231) /* ty=(Tensor[(8, 16, 7), uint64], Tensor[(12, 10, 15), float64]) */;
  %233 = %229.0;
  %234 = %232.1;
  (%233, %234, %var_10987)
}

def @func_9263() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %238 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %235 = @func_8998() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %236 = %235.0;
    %237 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
    (%236, %237)
  };
  %238() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_22054() -> (Tensor[(12, 10, 15), float64],) {
  %239 = @func_12062() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %240 = %239.1;
  (%240,)
}

def @func_21110() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %241 = @func_17307() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %242 = @func_18260() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %243 = %241.0;
  %244 = %242.0;
  %245 = @func_17382() /* ty=Tensor[(12, 10, 15), float64] */;
  (%243, %244, %245)
}

def @func_4192() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_4190() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_14634(%var_14632: Tensor[(48), float64]) -> (Tensor[(8, 16, 7), bool], Tensor[(12, 2, 2), float64], Tensor[(48), float64]) {
  @func_14631(%var_14632) /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 2, 2), float64], Tensor[(48), float64]) */
}

def @func_19568() -> Tensor[(3, 16, 896), float64] {
  %247 = fn () -> Tensor[(3, 16, 896), float64] {
    %246 = @func_15195() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(3, 16, 896), float64], Tensor[(150), float64], Tensor[(?, 896), int64]) */;
    %246.1
  };
  %247() /* ty=Tensor[(3, 16, 896), float64] */
}

def @func_19410() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) {
  %252 = fn () -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) {
    %248 = @func_18995() /* ty=(Tensor[(12, 10, 15), float32],) */;
    %249 = @func_6622() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %250 = %248.0;
    %251 = %249.0;
    (%250, %251)
  };
  %252() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) */
}

def @func_3292(%var_3291: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(35), float32], Tensor[(896), bool]) {
  %263 = fn (%var_3261: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(35), float32], Tensor[(896), bool]) {
    %253 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %254 = cast(meta[relay.Constant][10] /* ty=Tensor[(35), float32] */, dtype="float32") /* ty=Tensor[(35), float32] */;
    %255 = cast(meta[relay.Constant][10] /* ty=Tensor[(35), float32] */, dtype="float32") /* ty=Tensor[(35), float32] */;
    %256 = cast(%var_3261, dtype="bool") /* ty=Tensor[(896), bool] */;
    %257 = reshape(%254, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
    %258 = reshape(%255, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
    %259 = reshape(%256, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %260 = @func_2995(%257, %258, %259) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) */;
    %261 = %253.2;
    %262 = %260.1;
    (%261, %262, meta[relay.Constant][10] /* ty=Tensor[(35), float32] */, %var_3261)
  };
  %263(%var_3291) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(35), float32], Tensor[(896), bool]) */
}

def @func_3865() -> Tensor[(12, 10, 15), float64] {
  @func_3863() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_19661() -> Tensor[(6, 6, 12), float64] {
  @func_10905() /* ty=Tensor[(6, 6, 12), float64] */
}

def @func_4503() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %264 = @func_1427() /* ty=Tensor[(12, 10, 15), float64] */;
  %265 = @func_2777() /* ty=Tensor[(12, 10, 15), float64] */;
  (%264, %265)
}

def @func_20305(%var_20280: Tensor[(3, 16, 8), float32]) -> (Tensor[(3, 16, 8), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %266 = cast(%var_20280, dtype="float32") /* ty=Tensor[(3, 16, 8), float32] */;
  %267 = @func_18995() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %268 = acos(%266) /* ty=Tensor[(3, 16, 8), float32] */;
  %269 = @func_16661() /* ty=Tensor[(12, 10, 15), float64] */;
  %270 = %267.0;
  (%268, %269, %270)
}

def @func_17536() -> (Tensor[(12, 10, 15), float64],) {
  @func_17534() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_13492() -> (Tensor[(12, 10, 15), float64],) {
  @func_13490() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_6147() -> (Tensor[(12, 10, 15), float64],) {
  %271 = @func_3323() /* ty=Tensor[(12, 10, 15), float64] */;
  (%271,)
}

def @func_1975(%var_1953: Tensor[(8, 16, 7), bool]) -> (Tensor[(8, 16, 7), uint64], Tensor[(12, 10, 15), float64]) {
  %272 = @func_861() /* ty=Tensor[(8, 16, 7), bool] */;
  %273 = cast(%var_1953, dtype="uint64") /* ty=Tensor[(8, 16, 7), uint64] */;
  %274 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%272, dtype="uint64") /* ty=Tensor[(8, 16, 7), uint64] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %277 = @func_1542() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) */;
  %278 = subtract(%275, %276) /* ty=Tensor[(8, 16, 7), uint64] */;
  %279 = %277.1;
  (%278, %279)
}

def @func_816() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %285 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %280 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %281 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %282 = %280.0;
    %283 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
    %284 = %281.1;
    (%282, %283, %284)
  };
  %285() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_11834() -> (Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  %286 = @func_8998() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %287 = @func_10767() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
  %288 = @func_5899() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %289 = %286.0;
  %290 = %287.2;
  %291 = %288.4;
  (%289, %290, %291)
}

def @func_4381() -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32], Tensor[(12, 10, 15), float64]) {
  %292 = @func_861() /* ty=Tensor[(8, 16, 7), bool] */;
  %293 = cast(%292, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %294 = reshape(%293, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %295 = @func_3635(%294) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */;
  %296 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %297 = cast(%292, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
  %298 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
  %299 = %295.1;
  %300 = %296.0;
  %301 = @func_2777() /* ty=Tensor[(12, 10, 15), float64] */;
  %302 = asinh(%297) /* ty=Tensor[(8, 16, 7), float32] */;
  %303 = %298.0;
  (%299, %300, %301, %302, %303)
}

def @func_14113() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_14111() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_18441() -> (Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float64]) {
  %311 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float64]) {
    %304 = @func_15213() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %305 = @func_16737() /* ty=(Tensor[(6, 6, 12), float64],) */;
    %306 = @func_17997() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
    %307 = %304.0;
    %308 = %305.0;
    %309 = %306.1;
    %310 = @func_12085() /* ty=Tensor[(8, 16, 7), float64] */;
    (%307, %308, %309, %310)
  };
  %311() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float64]) */
}

def @func_22273() -> (Tensor[(12, 10, 15), float64], Tensor[(4, 12, 3), int64], Tensor[(144), int64], Tensor[(12, 10, 15), float64]) {
  %319 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(4, 12, 3), int64], Tensor[(144), int64], Tensor[(12, 10, 15), float64]) {
    %312 = cast(meta[relay.Constant][11] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
    %313 = reshape(%312, newshape=[4, 12, 3]) /* ty=Tensor[(4, 12, 3), int64] */;
    %314 = @func_8517(%313) /* ty=(Tensor[(4, 12, 3), int64], Tensor[(12, 10, 15), float64]) */;
    %315 = @func_9224() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %316 = @func_5225() /* ty=Tensor[(12, 10, 15), float64] */;
    %317 = %314.0;
    %318 = %315.0;
    (%316, %317, meta[relay.Constant][11] /* ty=Tensor[(144), int64] */, %318)
  };
  %319() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(4, 12, 3), int64], Tensor[(144), int64], Tensor[(12, 10, 15), float64]) */
}

def @func_6497() -> (Tensor[(12, 10, 15), float64],) {
  @func_6495() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_7545() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %323 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %320 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
    %321 = @func_294() /* ty=Tensor[(12, 10, 15), float64] */;
    %322 = %320.2;
    (%321, %322)
  };
  %323() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_8804(%var_8803: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(20, 80), uint32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(110), float64], Tensor[(896), bool], Tensor[(455), float32], Tensor[(12, 10, 15), float64], Tensor[(16, 10, 10), float32]) {
  %365 = fn (%var_8770: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(20, 80), uint32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(110), float64], Tensor[(896), bool], Tensor[(455), float32], Tensor[(12, 10, 15), float64], Tensor[(16, 10, 10), float32]) {
    %324 = @func_6531() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %325 = @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */;
    %326 = cast(meta[relay.Constant][12] /* ty=Tensor[(20, 80), int8] */, dtype="int8") /* ty=Tensor[(20, 80), int8] */;
    %327 = reshape(%326, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), int8] */;
    %328 = @func_5255(%327) /* ty=Tensor[(16, 10, 10), int8] */;
    %329 = cast(%328, dtype="uint32") /* ty=Tensor[(16, 10, 10), uint32] */;
    %330 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(20, 80), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %331 = cast(meta[relay.Constant][12] /* ty=Tensor[(20, 80), int8] */, dtype="uint32") /* ty=Tensor[(20, 80), uint32] */;
    %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %333 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %334 = @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %335 = @func_3521() /* ty=(Tensor[(6, 6, 12), float64],) */;
    %336 = cast(meta[relay.Constant][13] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
    %337 = cast(%var_8770, dtype="bool") /* ty=Tensor[(896), bool] */;
    %338 = %334.0;
    %339 = cast(%338, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
    %340 = cast(meta[relay.Constant][14] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
    %341 = reshape(%336, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), float64] */;
    %342 = reshape(%337, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %343 = reshape(%339, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
    %344 = reshape(%340, newshape=[13, 35]) /* ty=Tensor[(13, 35), float32] */;
    %345 = @func_3092(%341, %342, %343, %344) /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(12, 10, 15), float64], Tensor[(13, 35), int64]) */;
    %346 = cast(%var_8770, dtype="bool") /* ty=Tensor[(896), bool] */;
    %347 = reshape(%346, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %348 = @func_3635(%347) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */;
    %349 = cast(meta[relay.Constant][12] /* ty=Tensor[(20, 80), int8] */, dtype="float32") /* ty=Tensor[(20, 80), float32] */;
    %350 = cos(%349) /* ty=Tensor[(20, 80), float32] */;
    %351 = cast(%350, dtype="float32") /* ty=Tensor[(20, 80), float32] */;
    %352 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
    %353 = cast(%328, dtype="float32") /* ty=Tensor[(16, 10, 10), float32] */;
    %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %355 = %324.0;
    %356 = @func_4258() /* ty=Tensor[(12, 10, 15), float64] */;
    %357 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
    %358 = %325.2;
    %359 = left_shift(%331, %332) /* ty=Tensor[(20, 80), uint32] */;
    %360 = %333.0;
    %361 = %335.0;
    %362 = %345.1;
    %363 = %348.3;
    %364 = divide(%353, %354) /* ty=Tensor[(16, 10, 10), float32] */;
    (%355, %356, %357, %358, %359, %360, %338, %361, %362, meta[relay.Constant][13] /* ty=Tensor[(110), float64] */, %var_8770, meta[relay.Constant][14] /* ty=Tensor[(455), float32] */, %363, %364)
  };
  %365(%var_8803) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(20, 80), uint32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(110), float64], Tensor[(896), bool], Tensor[(455), float32], Tensor[(12, 10, 15), float64], Tensor[(16, 10, 10), float32]) */
}

def @func_18773() -> (Tensor[(12, 10, 15), float64],) {
  %368 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %366 = @func_11706() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %367 = %366.0;
    (%367,)
  };
  %368() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_44() -> Tensor[(12, 10, 15), float64] {
  @func_42() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_18995() -> (Tensor[(12, 10, 15), float32],) {
  %369 = @func_3558() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %370 = %369.0;
  (%370,)
}

def @func_3697() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %371 = @func_3558() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %372 = @func_1379() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %373 = @func_143() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %374 = %371.1;
  %375 = %372.1;
  %376 = %373.1;
  %377 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  (%374, %375, %376, %377)
}

def @func_6885(%var_6883: Tensor[(896), bool]) -> (Tensor[(6, 6, 12), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(1, 15, 10), float64]) {
  @func_6882(%var_6883) /* ty=(Tensor[(6, 6, 12), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(1, 15, 10), float64]) */
}

def @func_9515() -> (Tensor[(12, 10, 15), float64],) {
  %380 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %378 = @func_6622() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %379 = %378.0;
    (%379,)
  };
  %380() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_4147() -> (Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) {
  %383 = fn () -> (Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) {
    %381 = @func_861() /* ty=Tensor[(8, 16, 7), bool] */;
    %382 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
    (%381, %382)
  };
  %383() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */
}

def @func_18064() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %384 = @func_17935() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %385 = @func_1685() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %386 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %387 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %388 = @func_7204() /* ty=Tensor[(12, 10, 15), float64] */;
  %389 = %384.1;
  %390 = %385.0;
  %391 = %386.1;
  %392 = %387.0;
  (%388, %389, %390, %391, %392)
}

def @func_6277() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %400 = fn () -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %393 = @func_852() /* ty=(Tensor[(12, 10, 15), float32],) */;
    %394 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %395 = %393.0;
    %396 = @func_1427() /* ty=Tensor[(12, 10, 15), float64] */;
    %397 = @func_2575() /* ty=Tensor[(12, 10, 15), float64] */;
    %398 = %394.0;
    %399 = @func_5028() /* ty=Tensor[(12, 10, 15), float64] */;
    (%395, %396, %397, %398, %399)
  };
  %400() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_10401() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %401 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %402 = %401.0;
  %403 = @func_4579() /* ty=Tensor[(12, 10, 15), float64] */;
  (%402, %403)
}

def @func_22402() -> (Tensor[(12, 10, 15), float64],) {
  @func_22400() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_2461() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %410 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
    %404 = @func_1379() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %405 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %406 = %405.0;
    %407 = cast(%406, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
    %408 = %404.0;
    %409 = atanh(%407) /* ty=Tensor[(12, 10, 15), float32] */;
    (%408, %409)
  };
  %410() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */
}

def @func_16155() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(144), int64]) {
  @func_16153() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(144), int64]) */
}

def @func_14528() -> (Tensor[(880), int16], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_14526() /* ty=(Tensor[(880), int16], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_12627() -> Tensor[(12, 10, 15), float64] {
  %411 = @func_4190() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %411.0
}

def @func_5618() -> (Tensor[(12, 10, 15), float64],) {
  %413 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %412 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
    (%412,)
  };
  %413() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_7768() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %417 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %414 = @func_954() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) */;
    %415 = @func_3323() /* ty=Tensor[(12, 10, 15), float64] */;
    %416 = %414.0;
    (%415, %416)
  };
  %417() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_5594() -> (Tensor[(12, 10, 15), float64],) {
  %418 = @func_2813() /* ty=Tensor[(12, 10, 15), float64] */;
  (%418,)
}

def @func_6622() -> (Tensor[(12, 10, 15), float64],) {
  %419 = @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %420 = %419.0;
  (%420,)
}

def @func_16737() -> (Tensor[(6, 6, 12), float64],) {
  %421 = @func_3521() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %422 = %421.0;
  (%422,)
}

def @func_21892(%var_21891: Tensor[(15, 9, 12), float32]) -> (Tensor[(15, 9, 12), float32],) {
  %425 = fn (%var_21887: Tensor[(15, 9, 12), float32]) -> (Tensor[(15, 9, 12), float32],) {
    %423 = cast(%var_21887, dtype="float32") /* ty=Tensor[(15, 9, 12), float32] */;
    %424 = rsqrt(%423) /* ty=Tensor[(15, 9, 12), float32] */;
    (%424,)
  };
  %425(%var_21891) /* ty=(Tensor[(15, 9, 12), float32],) */
}

def @func_5395() -> Tensor[(12, 10, 15), float64] {
  %427 = fn () -> Tensor[(12, 10, 15), float64] {
    %426 = @func_143() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %426.2
  };
  %427() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_16739() -> (Tensor[(6, 6, 12), float64],) {
  @func_16737() /* ty=(Tensor[(6, 6, 12), float64],) */
}

def @func_6997() -> Tensor[(8, 16, 7), bool] {
  @func_6995() /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_17901() -> (Tensor[(150), float64],) {
  %430 = fn () -> (Tensor[(150), float64],) {
    %428 = @func_12899() /* ty=(Tensor[(150), float64],) */;
    %429 = %428.0;
    (%429,)
  };
  %430() /* ty=(Tensor[(150), float64],) */
}

def @func_1782(%var_1781: Tensor[(12, 10, 15), float64]) -> (Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %441 = fn (%var_1764: Tensor[(12, 10, 15), float64]) -> (Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %431 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
    %432 = cast(%var_1764, dtype="uint64") /* ty=Tensor[(12, 10, 15), uint64] */;
    %433 = shape_of(%431, dtype="int32") /* ty=Tensor[(3), int32] */;
    %434 = cast(%431, dtype="uint64") /* ty=Tensor[(12, 10, 15), uint64] */;
    %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %436 = @func_1379() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %437 = cast(%431, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
    %438 = multiply(%434, %435) /* ty=Tensor[(12, 10, 15), uint64] */;
    %439 = %436.1;
    %440 = acos(%437) /* ty=Tensor[(12, 10, 15), float64] */;
    (%438, %439, %440)
  };
  %441(%var_1781) /* ty=(Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_17190() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %442 = @func_15834() /* ty=(Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %443 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
  %444 = @func_2823() /* ty=Tensor[(12, 10, 15), float64] */;
  %445 = %442.3;
  (%443, %444, %445)
}

def @func_22172() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(126), float64], Tensor[(2, 448), bool]) {
  %453 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(126), float64], Tensor[(2, 448), bool]) {
    %446 = cast(meta[relay.Constant][15] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %447 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 448), bool] */, dtype="bool") /* ty=Tensor[(2, 448), bool] */;
    %448 = reshape(%446, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float64] */;
    %449 = reshape(%447, newshape=[896, 1]) /* ty=Tensor[(896, 1), bool] */;
    %450 = @func_20499(%448, %449) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(6, 3, 7), float64], Tensor[(12, 10, 15), float64]) */;
    %451 = @func_5394() /* ty=Tensor[(12, 10, 15), float64] */;
    %452 = %450.3;
    (%451, %452, meta[relay.Constant][15] /* ty=Tensor[(126), float64] */, meta[relay.Constant][16] /* ty=Tensor[(2, 448), bool] */)
  };
  %453() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(126), float64], Tensor[(2, 448), bool]) */
}

def @func_22578() -> Tensor[(12, 10, 15), float64] {
  @func_14296() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_18684() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_18682() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_10871(%var_10870: Tensor[(8, 16, 7), bool]) -> Tensor[(8, 16, 7), bool] {
  %459 = fn (%var_10849: Tensor[(8, 16, 7), bool]) -> Tensor[(8, 16, 7), bool] {
    %454 = @func_871() /* ty=Tensor[(8, 16, 7), bool] */;
    %455 = cast(%var_10849, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
    %456 = shape_of(%454, dtype="int32") /* ty=Tensor[(3), int32] */;
    %457 = cast(%454, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
    %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%457, %458) /* ty=Tensor[(8, 16, 7), bool] */
  };
  %459(%var_10870) /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_16384() -> (Tensor[(150), float64], Tensor[(12, 10, 15), int64]) {
  %463 = fn () -> (Tensor[(150), float64], Tensor[(12, 10, 15), int64]) {
    %460 = @func_12899() /* ty=(Tensor[(150), float64],) */;
    %461 = %460.0;
    %462 = @func_2313() /* ty=Tensor[(12, 10, 15), int64] */;
    (%461, %462)
  };
  %463() /* ty=(Tensor[(150), float64], Tensor[(12, 10, 15), int64]) */
}

def @func_2825() -> Tensor[(12, 10, 15), float64] {
  @func_2823() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_22377() -> (Tensor[(12, 10, 15), float64],) {
  %466 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %464 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %465 = %464.0;
    (%465,)
  };
  %466() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_3523() -> (Tensor[(6, 6, 12), float64],) {
  @func_3521() /* ty=(Tensor[(6, 6, 12), float64],) */
}

def @func_4730() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) {
  %467 = @func_1289() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %468 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 30), float64] */, dtype="float64") /* ty=Tensor[(5, 30), float64] */;
  %469 = reshape(%468, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %470 = @func_4065(%469) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(12, 10, 15), uint64]) */;
  %471 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
  %472 = %467.1;
  %473 = %470.3;
  (%471, %472, %473, meta[relay.Constant][17] /* ty=Tensor[(5, 30), float64] */)
}

def @func_6043(%var_6038: Tensor[(9, 6, 11), float32]) -> Tensor[(9, 6, 11), float32] {
  %474 = cast(%var_6038, dtype="float32") /* ty=Tensor[(9, 6, 11), float32] */;
  sqrt(%474) /* ty=Tensor[(9, 6, 11), float32] */
}

def @func_6103() -> (Tensor[(12, 10, 15), float64],) {
  %477 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %475 = @func_2765() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %476 = %475.0;
    (%476,)
  };
  %477() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_6720() -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %478 = @func_6405() /* ty=(Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */;
  %479 = %478.3;
  %480 = @func_5404() /* ty=Tensor[(12, 10, 15), float64] */;
  %481 = @func_294() /* ty=Tensor[(12, 10, 15), float64] */;
  (%479, %480, %481)
}

def @func_7979() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %482 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %483 = @func_1542() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) */;
  %484 = %482.0;
  %485 = %483.0;
  (%484, %485)
}

def @func_20308(%var_20306: Tensor[(3, 16, 8), float32]) -> (Tensor[(3, 16, 8), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  @func_20305(%var_20306) /* ty=(Tensor[(3, 16, 8), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */
}

def @func_3743() -> (Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) {
  @func_3741() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) */
}

def @func_5795() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %486 = @func_5394() /* ty=Tensor[(12, 10, 15), float64] */;
  %487 = @func_3124() /* ty=Tensor[(12, 10, 15), float64] */;
  (%486, %487)
}

def @func_21413() -> Tensor[(12, 10, 15), float64] {
  @func_21411() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_2276() -> (Tensor[(12, 10, 15), float64],) {
  %488 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %489 = %488.0;
  (%489,)
}

def @func_10767() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  %490 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %491 = @func_9975() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %492 = @func_6770() /* ty=(Tensor[(150), float64],) */;
  %493 = @func_5373() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(56, 16), bool]) */;
  %494 = %490.1;
  %495 = %491.0;
  %496 = %492.0;
  %497 = %493.0;
  (%494, %495, %496, %497)
}

def @func_6882(%var_6827: Tensor[(896), bool]) -> (Tensor[(6, 6, 12), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(1, 15, 10), float64]) {
  %498 = @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %499 = cast(%var_6827, dtype="bool") /* ty=Tensor[(896), bool] */;
  %500 = reshape(%499, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %501 = @func_2726(%500) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) */;
  %502 = cast(meta[relay.Constant][18] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %503 = reshape(%502, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %504 = @func_3790(%503) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %505 = @func_852() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %506 = @func_5124() /* ty=(Tensor[(1, 15, 10), float64], Tensor[(12, 10, 15), float64], Tensor[(5, 30), float64], Tensor[(25, 6), float64]) */;
  %507 = %498.0;
  %508 = %501.3;
  %509 = %504.1;
  %510 = @func_6289() /* ty=Tensor[(12, 10, 15), float64] */;
  %511 = @func_5394() /* ty=Tensor[(12, 10, 15), float64] */;
  %512 = %505.0;
  %513 = %506.0;
  (%507, %508, %var_6827, %509, meta[relay.Constant][18] /* ty=Tensor[(150), float64] */, %510, %511, %512, %513)
}

def @func_13732() -> (Tensor[(12, 10, 15), float64],) {
  %514 = @func_5101() /* ty=Tensor[(12, 10, 15), float64] */;
  (%514,)
}

def @func_6567() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %519 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %515 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %516 = %515.0;
    %517 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
    %518 = @func_3124() /* ty=Tensor[(12, 10, 15), float64] */;
    (%516, %517, %518)
  };
  %519() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_16446() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_16444() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_16902() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_16900() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_21515() -> (Tensor[(8, 16, 7), float64], Tensor[(12, 10, 15), float64]) {
  %523 = fn () -> (Tensor[(8, 16, 7), float64], Tensor[(12, 10, 15), float64]) {
    %520 = @func_20275() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float64]) */;
    %521 = %520.1;
    %522 = @func_7347() /* ty=Tensor[(12, 10, 15), float64] */;
    (%521, %522)
  };
  %523() /* ty=(Tensor[(8, 16, 7), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_1184() -> Tensor[(12, 10, 15), float64] {
  @func_1182() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_7337() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_7335() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_20579() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %524 = @func_16153() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(144), int64]) */;
  %525 = %524.1;
  %526 = @func_12627() /* ty=Tensor[(12, 10, 15), float64] */;
  (%525, %526)
}

def @func_21975(%var_21973: Tensor[(7, 2, 8), float64]) -> (Tensor[(7, 2, 8), float64], Tensor[(16, 10, 10), int8], Tensor[(1600), int8], Tensor[(12, 10, 15), float64]) {
  @func_21972(%var_21973) /* ty=(Tensor[(7, 2, 8), float64], Tensor[(16, 10, 10), int8], Tensor[(1600), int8], Tensor[(12, 10, 15), float64]) */
}

def @func_13734() -> (Tensor[(12, 10, 15), float64],) {
  @func_13732() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_15769(%var_15767: Tensor[(3, 1, 10), int16]) -> (Tensor[(3, 1, 10), int16],) {
  @func_15766(%var_15767) /* ty=(Tensor[(3, 1, 10), int16],) */
}

def @func_16065() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_16063() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_7335() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %527 = @func_6531() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %528 = @func_7125() /* ty=Tensor[(12, 10, 15), float64] */;
  %529 = %527.0;
  (%528, %529)
}

def @func_3863() -> Tensor[(12, 10, 15), float64] {
  %530 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %530.2
}

def @func_18817() -> (Tensor[(12, 10, 15), int64],) {
  %532 = fn () -> (Tensor[(12, 10, 15), int64],) {
    %531 = @func_15373() /* ty=Tensor[(12, 10, 15), int64] */;
    (%531,)
  };
  %532() /* ty=(Tensor[(12, 10, 15), int64],) */
}

def @func_9656() -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %533 = @func_6720() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %534 = @func_5150() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %535 = @func_6276() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %536 = %533.0;
  %537 = %534.0;
  %538 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  %539 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
  %540 = %535.2;
  (%536, %537, %538, %539, %540)
}

def @func_873() -> Tensor[(8, 16, 7), bool] {
  @func_871() /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_13113() -> (Tensor[(12, 10, 15), float64],) {
  %542 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %541 = @func_2575() /* ty=Tensor[(12, 10, 15), float64] */;
    (%541,)
  };
  %542() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_15766(%var_15743: Tensor[(3, 1, 10), int16]) -> (Tensor[(3, 1, 10), int16],) {
  %543 = cast(meta[relay.Constant][19] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %544 = cast(%var_15743, dtype="int16") /* ty=Tensor[(3, 1, 10), int16] */;
  %545 = subtract(%543, %544) /* ty=Tensor[(3, 1, 10), int16] */;
  (%545,)
}

def @func_14059() -> Tensor[(12, 10, 15), int64] {
  @func_2313() /* ty=Tensor[(12, 10, 15), int64] */
}

def @func_20919() -> (Tensor[(12, 10, 15), float64],) {
  %548 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %546 = @func_6566() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %547 = %546.2;
    (%547,)
  };
  %548() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_21250() -> (Tensor[(12, 10, 15), float64],) {
  %551 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %549 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
    %550 = %549.0;
    (%550,)
  };
  %551() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_21330() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %552 = @func_18064() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %553 = @func_14395() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %554 = %552.3;
  %555 = %553.0;
  (%554, %555)
}

def @func_8464() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
  %556 = @func_6920() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %557 = @func_5439() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %558 = %556.1;
  %559 = %557.0;
  %560 = @func_861() /* ty=Tensor[(8, 16, 7), bool] */;
  (%558, %559, %560)
}

def @func_1396() -> (Tensor[(12, 10, 15), float64],) {
  %563 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %561 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %562 = %561.1;
    (%562,)
  };
  %563() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_7416() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(880), int16]) {
  @func_7414() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(880), int16]) */
}

def @func_12389() -> Tensor[(12, 10, 15), float64] {
  %564 = @func_9852() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %564.2
}

def @func_18891(%var_18889: Tensor[(16, 7, 5), float32], %var_18890: Tensor[(16, 7, 5), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(16, 7, 5), bool]) {
  %576 = fn (%var_18867: Tensor[(16, 7, 5), float32], %var_18883: Tensor[(16, 7, 5), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(16, 7, 5), bool]) {
    %565 = @func_12449() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %566 = cast(%var_18867, dtype="float32") /* ty=Tensor[(16, 7, 5), float32] */;
    %567 = sinh(%566) /* ty=Tensor[(16, 7, 5), float32] */;
    %568 = cast(%567, dtype="float32") /* ty=Tensor[(16, 7, 5), float32] */;
    %569 = atanh(%568) /* ty=Tensor[(16, 7, 5), float32] */;
    %570 = cast(%var_18883, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
    %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
    %572 = cast(%569, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
    %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %574 = %565.0;
    %575 = not_equal(%572, %573) /* ty=Tensor[(16, 7, 5), bool] */;
    (%574, %575)
  };
  %576(%var_18889, %var_18890) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(16, 7, 5), bool]) */
}

def @func_22366() -> (Tensor[(12, 10, 15), float64],) {
  %577 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %578 = %577.2;
  (%578,)
}

def @func_9853() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %583 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %579 = @func_6933() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %580 = @func_6289() /* ty=Tensor[(12, 10, 15), float64] */;
    %581 = %579.0;
    %582 = @func_5404() /* ty=Tensor[(12, 10, 15), float64] */;
    (%580, %581, %582)
  };
  %583() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_11377() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %592 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
    %584 = @func_10401() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %585 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %586 = @func_8985() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %587 = @func_10106() /* ty=(Tensor[(12, 10, 15), float32],) */;
    %588 = %584.0;
    %589 = %585.0;
    %590 = %586.2;
    %591 = %587.0;
    (%588, %589, %590, %591)
  };
  %592() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */
}

def @func_5124() -> (Tensor[(1, 15, 10), float64], Tensor[(12, 10, 15), float64], Tensor[(5, 30), float64], Tensor[(25, 6), float64]) {
  %593 = @func_1863() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), bool]) */;
  %594 = @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */;
  %595 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
  %596 = %593.1;
  %597 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  %598 = %594.3;
  %599 = %595.3;
  (%596, %597, %598, %599)
}

def @func_21885(%var_21883: Tensor[(18), float32], %var_21884: Tensor[(288), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64], Tensor[(18), float32], Tensor[(288), float32]) {
  %613 = fn (%var_21871: Tensor[(18), float32], %var_21872: Tensor[(288), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64], Tensor[(18), float32], Tensor[(288), float32]) {
    %600 = @func_14875() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %601 = @func_16737() /* ty=(Tensor[(6, 6, 12), float64],) */;
    %602 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %603 = cast(%var_21871, dtype="float32") /* ty=Tensor[(18), float32] */;
    %604 = cast(%var_21872, dtype="float32") /* ty=Tensor[(288), float32] */;
    %605 = reshape(%603, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
    %606 = reshape(%604, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), float32] */;
    %607 = @func_3492(%605, %606) /* ty=(Tensor[(6, 3, 16), int16], Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) */;
    %608 = %600.0;
    %609 = %601.0;
    %610 = @func_7347() /* ty=Tensor[(12, 10, 15), float64] */;
    %611 = %602.1;
    %612 = %607.1;
    (%608, %609, %610, %611, %612, %var_21871, %var_21872)
  };
  %613(%var_21883, %var_21884) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64], Tensor[(18), float32], Tensor[(288), float32]) */
}

def @func_11884() -> Tensor[(6, 6, 12), float64] {
  @func_10905() /* ty=Tensor[(6, 6, 12), float64] */
}

def @func_7586() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %618 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %614 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %615 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %616 = %614.0;
    %617 = %615.0;
    (%616, %617)
  };
  %618() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_19890() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %623 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %619 = @func_6531() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %620 = @func_18171() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %621 = %619.1;
    %622 = %620.1;
    (%621, %622)
  };
  %623() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_9939(%var_9899: Tensor[(8, 16, 7), bool]) -> (Tensor[(8, 16, 7), int32], Tensor[(8, 16, 7), float32]) {
  %624 = @func_4146() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %625 = %624.0;
  %626 = cast(%var_9899, dtype="int32") /* ty=Tensor[(8, 16, 7), int32] */;
  %627 = shape_of(%625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(%625, dtype="int32") /* ty=Tensor[(8, 16, 7), int32] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %630 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 16, 7), bool] */, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
  %631 = shape_of(%625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%625, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %634 = minimum(%628, %629) /* ty=Tensor[(8, 16, 7), int32] */;
  %635 = power(%632, %633) /* ty=Tensor[(8, 16, 7), float32] */;
  (%634, %635)
}

def @func_20157() -> Tensor[(12, 10, 15), float64] {
  %636 = fn () -> Tensor[(12, 10, 15), float64] {
    @func_7204() /* ty=Tensor[(12, 10, 15), float64] */
  };
  %636() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_12451() -> (Tensor[(12, 10, 15), float64],) {
  @func_12449() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_4068(%var_4066: Tensor[(150), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(12, 10, 15), uint64]) {
  @func_4065(%var_4066) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(12, 10, 15), uint64]) */
}

def @func_5901() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_5899() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_3741() -> (Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) {
  %637 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %638 = @func_2313() /* ty=Tensor[(12, 10, 15), int64] */;
  %639 = %637.2;
  (%638, %639)
}

def @func_8247(%var_8246: Tensor[(12, 2, 2), float64]) -> (Tensor[(12, 2, 2), float64],) {
  %642 = fn (%var_8237: Tensor[(12, 2, 2), float64]) -> (Tensor[(12, 2, 2), float64],) {
    %640 = cast(%var_8237, dtype="float64") /* ty=Tensor[(12, 2, 2), float64] */;
    %641 = tan(%640) /* ty=Tensor[(12, 2, 2), float64] */;
    (%641,)
  };
  %642(%var_8246) /* ty=(Tensor[(12, 2, 2), float64],) */
}

def @func_144() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %647 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %643 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
    %644 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
    %645 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
    %646 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
    (%643, %644, %645, %646)
  };
  %647() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_9942(%var_9940: Tensor[(8, 16, 7), bool]) -> (Tensor[(8, 16, 7), int32], Tensor[(8, 16, 7), float32]) {
  @func_9939(%var_9940) /* ty=(Tensor[(8, 16, 7), int32], Tensor[(8, 16, 7), float32]) */
}

def @func_12672() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_12670() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_12449() -> (Tensor[(12, 10, 15), float64],) {
  %648 = @func_11522() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %649 = %648.0;
  (%649,)
}

def @func_5899() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %650 = @func_954() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) */;
  %651 = @func_4503() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %652 = @func_3697() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %653 = @func_5404() /* ty=Tensor[(12, 10, 15), float64] */;
  %654 = %650.0;
  %655 = %651.0;
  %656 = %652.0;
  %657 = @func_3124() /* ty=Tensor[(12, 10, 15), float64] */;
  (%653, %654, %655, %656, %657)
}

def @func_17789(%var_17781: Tensor[(1, 16, 16), float64]) -> (Tensor[(1, 16, 16), float64], Tensor[(8, 16, 7), bool]) {
  %658 = cast(%var_17781, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  %659 = cosh(%658) /* ty=Tensor[(1, 16, 16), float64] */;
  %660 = @func_3242() /* ty=Tensor[(8, 16, 7), bool] */;
  (%659, %660)
}

def @func_863() -> Tensor[(8, 16, 7), bool] {
  @func_861() /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_8517(%var_8482: Tensor[(4, 12, 3), int64]) -> (Tensor[(4, 12, 3), int64], Tensor[(12, 10, 15), float64]) {
  %661 = cast(%var_8482, dtype="int64") /* ty=Tensor[(4, 12, 3), int64] */;
  %662 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(4, 12, 3), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 12, 3), int64] */, dtype="int64") /* ty=Tensor[(4, 12, 3), int64] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %665 = @func_6323() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %666 = bitwise_and(%663, %664) /* ty=Tensor[(4, 12, 3), int64] */;
  %667 = %665.0;
  (%666, %667)
}

def @func_21181() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(12, 10, 15), float64]) {
  @func_21179() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(12, 10, 15), float64]) */
}

def @func_1140() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %668 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %669 = %668.0;
  %670 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  (%669, %670)
}

def @func_3521() -> (Tensor[(6, 6, 12), float64],) {
  %671 = @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %672 = %671.0;
  (%672,)
}

def @func_5342() -> (Tensor[(12, 10, 15), float64],) {
  @func_5340() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_2729(%var_2727: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) {
  @func_2726(%var_2727) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) */
}

def @func_10703(%var_10701: Tensor[(25, 6), float64], %var_10702: Tensor[(25, 6), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(25, 6), bool], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), int32], Tensor[(12, 10, 15), float64]) {
  @func_10699(%var_10701, %var_10702) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(25, 6), bool], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), int32], Tensor[(12, 10, 15), float64]) */
}

def @func_15571() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150, 1), float64]) {
  %683 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150, 1), float64]) {
    %673 = @func_4698() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %674 = @func_9210() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %675 = cast(meta[relay.Constant][22] /* ty=Tensor[(150, 1), float64] */, dtype="float64") /* ty=Tensor[(150, 1), float64] */;
    %676 = cast(meta[relay.Constant][22] /* ty=Tensor[(150, 1), float64] */, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
    %677 = reshape(%675, newshape=[25, 6]) /* ty=Tensor[(25, 6), float64] */;
    %678 = reshape(%676, newshape=[25, 6]) /* ty=Tensor[(25, 6), float32] */;
    %679 = @func_10699(%677, %678) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(25, 6), bool], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), int32], Tensor[(12, 10, 15), float64]) */;
    %680 = %673.0;
    %681 = %674.0;
    %682 = %679.4;
    (%680, %681, %682, meta[relay.Constant][22] /* ty=Tensor[(150, 1), float64] */)
  };
  %683() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150, 1), float64]) */
}

def @func_1928() -> (Tensor[(12, 10, 15), float64],) {
  @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_10403() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_10401() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_22368() -> (Tensor[(12, 10, 15), float64],) {
  @func_22366() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_4766() -> (Tensor[(12, 10, 15), float64],) {
  %684 = @func_3558() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %685 = %684.1;
  (%685,)
}

def @func_3352() -> Tensor[(12, 10, 15), float64] {
  @func_3350() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_20503(%var_20501: Tensor[(6, 3, 7), float64], %var_20502: Tensor[(896, 1), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(6, 3, 7), float64], Tensor[(12, 10, 15), float64]) {
  @func_20499(%var_20501, %var_20502) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(6, 3, 7), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_13920(%var_13908: Tensor[(1, 16, 9), float64]) -> Tensor[(?, 16, 9), float32] {
  %686 = cast(%var_13908, dtype="float64") /* ty=Tensor[(1, 16, 9), float64] */;
  %687 = sinh(%686) /* ty=Tensor[(1, 16, 9), float64] */;
  %688 = cast(%687, dtype="float32") /* ty=Tensor[(1, 16, 9), float32] */;
  %689 = shape_of(%var_13908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%var_13908, dtype="float32") /* ty=Tensor[(1, 16, 9), float32] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  multiply(%690, %691) /* ty=Tensor[(?, 16, 9), float32] */
}

def @func_17513(%var_17479: Tensor[(432), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), int16], Tensor[(432), float64], Tensor[(12, 10, 15), float64]) {
  %692 = @func_15213() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %693 = cast(%var_17479, dtype="float64") /* ty=Tensor[(432), float64] */;
  %694 = reshape(%693, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), float64] */;
  %695 = @func_16282(%694) /* ty=(Tensor[(6, 6, 12), int16],) */;
  %696 = @func_11546() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %697 = %692.0;
  %698 = %695.0;
  %699 = %696.0;
  (%697, %698, %var_17479, %699)
}

def @func_19663() -> Tensor[(6, 6, 12), float64] {
  @func_19661() /* ty=Tensor[(6, 6, 12), float64] */
}

def @func_18682() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %700 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %701 = @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %702 = @func_9224() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %703 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
  %704 = %700.0;
  %705 = %701.0;
  %706 = %702.0;
  (%703, %704, %705, %706)
}

def @func_5566(%var_5530: Tensor[(1, 5, 5), float64], %var_5535: Tensor[(35), float32], %var_5536: Tensor[(896), bool]) -> (Tensor[(1, 5, 5), float64], Tensor[(896), bool], Tensor[(35), float32], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) {
  %707 = cast(%var_5530, dtype="float64") /* ty=Tensor[(1, 5, 5), float64] */;
  %708 = cast(%var_5535, dtype="float32") /* ty=Tensor[(35), float32] */;
  %709 = cast(%var_5535, dtype="float32") /* ty=Tensor[(35), float32] */;
  %710 = cast(%var_5536, dtype="bool") /* ty=Tensor[(896), bool] */;
  %711 = reshape(%708, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
  %712 = reshape(%709, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
  %713 = reshape(%710, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %714 = @func_2995(%711, %712, %713) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) */;
  %715 = atanh(%707) /* ty=Tensor[(1, 5, 5), float64] */;
  %716 = %714.1;
  %717 = @func_3417() /* ty=Tensor[(12, 10, 15), float64] */;
  (%715, %716, %var_5535, %var_5536, %717)
}

def @func_18483(%var_18465: Tensor[(12, 16, 14), int64], %var_18466: Tensor[(12, 16, 14), int64], %var_18474: Tensor[(432), float64]) -> (Tensor[(12, 16, 14), int64], Tensor[(6, 6, 12), float64], Tensor[(896, 1), bool], Tensor[(432), float64]) {
  %718 = cast(%var_18466, dtype="int64") /* ty=Tensor[(12, 16, 14), int64] */;
  %719 = shape_of(%var_18465, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%var_18465, dtype="int64") /* ty=Tensor[(12, 16, 14), int64] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %722 = cast(meta[relay.Constant][23] /* ty=Tensor[(896, 1), bool] */, dtype="bool") /* ty=Tensor[(896, 1), bool] */;
  %723 = cast(%var_18474, dtype="float64") /* ty=Tensor[(432), float64] */;
  %724 = reshape(%722, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %725 = reshape(%723, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), float64] */;
  %726 = @func_8407(%724, %725) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(9, 6, 11), float32], Tensor[(594), float32], Tensor[(896), bool], Tensor[(896), bool], Tensor[(150), float64], Tensor[(6, 6, 12), float64], Tensor[(16, 10, 10), int8], Tensor[(1600), int8]) */;
  %727 = subtract(%720, %721) /* ty=Tensor[(12, 16, 14), int64] */;
  %728 = %726.8;
  (%727, %728, meta[relay.Constant][23] /* ty=Tensor[(896, 1), bool] */, %var_18474)
}

def @func_21052() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %729 = @func_8998() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %730 = @func_5101() /* ty=Tensor[(12, 10, 15), float64] */;
  %731 = %729.0;
  (%730, %731)
}

def @func_18758() -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool]) {
  @func_18756() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool]) */
}

def @func_1142() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_6323() -> (Tensor[(12, 10, 15), float64],) {
  %732 = @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %733 = %732.0;
  (%733,)
}

def @func_11485(%var_11484: Tensor[(800, 2), float32]) -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(16, 10, 10), int8], Tensor[(12, 10, 15), float64], Tensor[(7, ?, 5), bool], Tensor[(35), float32], Tensor[(800, 2), bool], Tensor[(800, 2), bool], Tensor[(12, 10, 15), float64]) {
  %770 = fn (%var_11462: Tensor[(800, 2), float32]) -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(16, 10, 10), int8], Tensor[(12, 10, 15), float64], Tensor[(7, ?, 5), bool], Tensor[(35), float32], Tensor[(800, 2), bool], Tensor[(800, 2), bool], Tensor[(12, 10, 15), float64]) {
    %734 = @func_10928() /* ty=(Tensor[(896), bool],) */;
    %735 = @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */;
    %736 = @func_9785() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %737 = cast(meta[relay.Constant][24] /* ty=Tensor[(800, 2), int8] */, dtype="int8") /* ty=Tensor[(800, 2), int8] */;
    %738 = reshape(%737, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), int8] */;
    %739 = @func_7767() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %740 = cast(meta[relay.Constant][25] /* ty=Tensor[(35), float32] */, dtype="float32") /* ty=Tensor[(35), float32] */;
    %741 = cast(meta[relay.Constant][25] /* ty=Tensor[(35), float32] */, dtype="float32") /* ty=Tensor[(35), float32] */;
    %742 = %734.0;
    %743 = cast(%742, dtype="bool") /* ty=Tensor[(896), bool] */;
    %744 = reshape(%740, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
    %745 = reshape(%741, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
    %746 = reshape(%743, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %747 = @func_2995(%744, %745, %746) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) */;
    %748 = cast(meta[relay.Constant][24] /* ty=Tensor[(800, 2), int8] */, dtype="float64") /* ty=Tensor[(800, 2), float64] */;
    %749 = cosh(%748) /* ty=Tensor[(800, 2), float64] */;
    %750 = cast(%749, dtype="float32") /* ty=Tensor[(800, 2), float32] */;
    %751 = sqrt(%750) /* ty=Tensor[(800, 2), float32] */;
    %752 = cast(%var_11462, dtype="bool") /* ty=Tensor[(800, 2), bool] */;
    %753 = shape_of(%751, dtype="int32") /* ty=Tensor[(2), int32] */;
    %754 = cast(%751, dtype="bool") /* ty=Tensor[(800, 2), bool] */;
    %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %756 = cast(%751, dtype="bool") /* ty=Tensor[(800, 2), bool] */;
    %757 = shape_of(%749, dtype="int32") /* ty=Tensor[(2), int32] */;
    %758 = cast(%749, dtype="bool") /* ty=Tensor[(800, 2), bool] */;
    %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %760 = @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %761 = %735.0;
    %762 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
    %763 = %736.0;
    %764 = @func_5255(%738) /* ty=Tensor[(16, 10, 10), int8] */;
    %765 = %739.1;
    %766 = %747.2;
    %767 = less_equal(%754, %755) /* ty=Tensor[(800, 2), bool] */;
    %768 = greater_equal(%758, %759) /* ty=Tensor[(800, 2), bool] */;
    %769 = %760.0;
    (%742, %761, %762, %763, %764, %765, %766, meta[relay.Constant][25] /* ty=Tensor[(35), float32] */, %767, %768, %769)
  };
  %770(%var_11484) /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(16, 10, 10), int8], Tensor[(12, 10, 15), float64], Tensor[(7, ?, 5), bool], Tensor[(35), float32], Tensor[(800, 2), bool], Tensor[(800, 2), bool], Tensor[(12, 10, 15), float64]) */
}

def @func_18488(%var_18485: Tensor[(12, 16, 14), int64], %var_18486: Tensor[(12, 16, 14), int64], %var_18487: Tensor[(432), float64]) -> (Tensor[(12, 16, 14), int64], Tensor[(6, 6, 12), float64], Tensor[(896, 1), bool], Tensor[(432), float64]) {
  @func_18483(%var_18485, %var_18486, %var_18487) /* ty=(Tensor[(12, 16, 14), int64], Tensor[(6, 6, 12), float64], Tensor[(896, 1), bool], Tensor[(432), float64]) */
}

def @func_13605() -> Tensor[(12, 10, 15), float64] {
  @func_3350() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_13283(%var_13273: Tensor[(25, 6), float64]) -> (Tensor[(25, 6), float32], Tensor[(25, 6), bool]) {
  %771 = @func_2920() /* ty=Tensor[(25, 6), float64] */;
  %772 = cast(%771, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %773 = cast(%var_13273, dtype="bool") /* ty=Tensor[(25, 6), bool] */;
  %774 = shape_of(%771, dtype="int32") /* ty=Tensor[(2), int32] */;
  %775 = cast(%771, dtype="bool") /* ty=Tensor[(25, 6), bool] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %777 = cos(%772) /* ty=Tensor[(25, 6), float32] */;
  %778 = greater_equal(%775, %776) /* ty=Tensor[(25, 6), bool] */;
  (%777, %778)
}

def @func_22347() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %783 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %779 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %780 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
    %781 = %779.0;
    %782 = %780.0;
    (%781, %782)
  };
  %783() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_4581() -> Tensor[(12, 10, 15), float64] {
  @func_4579() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_14038() -> (Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  @func_14036() /* ty=(Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_17852() -> Tensor[(8, 16, 7), bool] {
  %784 = fn () -> Tensor[(8, 16, 7), bool] {
    @func_6995() /* ty=Tensor[(8, 16, 7), bool] */
  };
  %784() /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_18261() -> (Tensor[(12, 10, 15), float64],) {
  %786 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %785 = @func_11276() /* ty=Tensor[(12, 10, 15), float64] */;
    (%785,)
  };
  %786() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_1926() -> (Tensor[(12, 10, 15), float64],) {
  %787 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %788 = %787.0;
  (%788,)
}

def @func_5489() -> (Tensor[(12, 10, 15), float64],) {
  @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_16983() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %793 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
    %789 = @func_7482() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %790 = @func_11034() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) */;
    %791 = %789.0;
    %792 = %790.0;
    (%791, %792)
  };
  %793() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */
}

def @func_20009() -> (Tensor[(12, 10, 15), float64],) {
  %794 = @func_11376() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %795 = %794.2;
  (%795,)
}

def @func_18573() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32]) {
  %796 = @func_11376() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %797 = @func_4381() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32], Tensor[(12, 10, 15), float64]) */;
  %798 = %796.1;
  %799 = %797.3;
  (%798, %799)
}

def @func_20224(%var_20222: Tensor[(1600), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1600), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_20221(%var_20222) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1600), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_740() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_4505() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_4503() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_17101() -> (Tensor[(12, 10, 15), float64],) {
  %801 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %800 = @func_5028() /* ty=Tensor[(12, 10, 15), float64] */;
    (%800,)
  };
  %801() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_2646() -> Tensor[(12, 10, 15), float64] {
  %802 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %802.1
}

def @func_1978(%var_1976: Tensor[(8, 16, 7), bool]) -> (Tensor[(8, 16, 7), uint64], Tensor[(12, 10, 15), float64]) {
  @func_1975(%var_1976) /* ty=(Tensor[(8, 16, 7), uint64], Tensor[(12, 10, 15), float64]) */
}

def @func_275() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %806 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %803 = @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %804 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
    %805 = %803.0;
    (%804, %805)
  };
  %806() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_16211() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) {
  %807 = @func_11706() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %808 = @func_9656() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %809 = %807.1;
  %810 = @func_3242() /* ty=Tensor[(8, 16, 7), bool] */;
  %811 = %808.2;
  (%809, %810, %811)
}

def @func_4311() -> (Tensor[(12, 10, 15), float64],) {
  @func_4309() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_6149() -> (Tensor[(12, 10, 15), float64],) {
  @func_6147() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_6453() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %812 = @func_4698() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %813 = @func_6102() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %814 = %812.0;
  %815 = @func_5636() /* ty=Tensor[(12, 10, 15), float64] */;
  %816 = %813.0;
  (%814, %815, %816)
}

def @func_19304(%var_19302: Tensor[(2, 1, 7), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(2, ?, 7), uint32]) {
  @func_19301(%var_19302) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(2, ?, 7), uint32]) */
}

def @func_2765() -> (Tensor[(12, 10, 15), float64],) {
  %817 = @func_2502() /* ty=Tensor[(12, 10, 15), float64] */;
  (%817,)
}

def @func_9678() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %818 = @func_5150() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %819 = @func_6622() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %820 = @func_2566() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %821 = %818.0;
  %822 = %819.0;
  %823 = %820.0;
  (%821, %822, %823)
}

def @func_21807() -> (Tensor[(12, 10, 15), float64],) {
  @func_21805() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_6325() -> (Tensor[(12, 10, 15), float64],) {
  @func_6323() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_10967() -> Tensor[(12, 10, 15), float64] {
  %825 = fn () -> Tensor[(12, 10, 15), float64] {
    %824 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %824.1
  };
  %825() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_2503() -> Tensor[(12, 10, 15), float64] {
  %827 = fn () -> Tensor[(12, 10, 15), float64] {
    %826 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %826.0
  };
  %827() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_8410(%var_8408: Tensor[(896), bool], %var_8409: Tensor[(6, 6, 12), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(9, 6, 11), float32], Tensor[(594), float32], Tensor[(896), bool], Tensor[(896), bool], Tensor[(150), float64], Tensor[(6, 6, 12), float64], Tensor[(16, 10, 10), int8], Tensor[(1600), int8]) {
  %854 = fn (%var_8386: Tensor[(896), bool], %var_8394: Tensor[(6, 6, 12), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(9, 6, 11), float32], Tensor[(594), float32], Tensor[(896), bool], Tensor[(896), bool], Tensor[(150), float64], Tensor[(6, 6, 12), float64], Tensor[(16, 10, 10), int8], Tensor[(1600), int8]) {
    %828 = cast(meta[relay.Constant][26] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
    %829 = reshape(%828, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %830 = @func_3790(%829) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
    %831 = cast(meta[relay.Constant][27] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
    %832 = reshape(%831, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), float32] */;
    %833 = cast(%var_8386, dtype="bool") /* ty=Tensor[(896), bool] */;
    %834 = reshape(%833, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %835 = @func_3290(%834) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(35), float32], Tensor[(896), bool]) */;
    %836 = cast(meta[relay.Constant][26] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
    %837 = reshape(%836, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %838 = @func_3976(%837) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
    %839 = @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */;
    %840 = %839.0;
    %841 = cast(%var_8394, dtype="float64") /* ty=Tensor[(6, 6, 12), float64] */;
    %842 = shape_of(%840, dtype="int32") /* ty=Tensor[(3), int32] */;
    %843 = cast(%840, dtype="float64") /* ty=Tensor[(6, 6, 12), float64] */;
    %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %845 = cast(meta[relay.Constant][28] /* ty=Tensor[(1600), int8] */, dtype="int8") /* ty=Tensor[(1600), int8] */;
    %846 = reshape(%845, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), int8] */;
    %847 = @func_2823() /* ty=Tensor[(12, 10, 15), float64] */;
    %848 = %830.0;
    %849 = @func_6043(%832) /* ty=Tensor[(9, 6, 11), float32] */;
    %850 = %835.3;
    %851 = %838.2;
    %852 = subtract(%843, %844) /* ty=Tensor[(6, 6, 12), float64] */;
    %853 = @func_5255(%846) /* ty=Tensor[(16, 10, 10), int8] */;
    (%847, %848, meta[relay.Constant][26] /* ty=Tensor[(150), float64] */, %849, meta[relay.Constant][27] /* ty=Tensor[(594), float32] */, %850, %var_8386, %851, %852, %853, meta[relay.Constant][28] /* ty=Tensor[(1600), int8] */)
  };
  %854(%var_8408, %var_8409) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(9, 6, 11), float32], Tensor[(594), float32], Tensor[(896), bool], Tensor[(896), bool], Tensor[(150), float64], Tensor[(6, 6, 12), float64], Tensor[(16, 10, 10), int8], Tensor[(1600), int8]) */
}

def @func_8295() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %861 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %855 = @func_954() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) */;
    %856 = @func_5439() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %857 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %858 = %855.0;
    %859 = %856.0;
    %860 = %857.0;
    (%858, %859, %860)
  };
  %861() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_11582() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %866 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %862 = @func_8294() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %863 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
    %864 = %862.2;
    %865 = %863.1;
    (%864, %865)
  };
  %866() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_12670() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %867 = @func_5150() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %868 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %869 = %867.0;
  %870 = %868.0;
  (%869, %870)
}

def @func_12629() -> Tensor[(12, 10, 15), float64] {
  @func_12627() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_627() -> Tensor[(12, 10, 15), float64] {
  %871 = @func_274() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %871.1
}

def @func_871() -> Tensor[(8, 16, 7), bool] {
  @func_861() /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_1289() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) {
  %872 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %873 = cast(meta[relay.Constant][29] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %874 = reshape(%873, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %875 = @func_1101(%874) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
  %876 = %872.1;
  %877 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %878 = %875.4;
  (%876, %877, %878, meta[relay.Constant][29] /* ty=Tensor[(150), float64] */)
}

def @func_9224() -> (Tensor[(12, 10, 15), float64],) {
  %879 = @func_5225() /* ty=Tensor[(12, 10, 15), float64] */;
  (%879,)
}

def @func_4905(%var_4903: Tensor[(11, 8, 10), int16]) -> (Tensor[(11, 8, 10), bool], Tensor[(8, 16, 7), bool]) {
  @func_4902(%var_4903) /* ty=(Tensor[(11, 8, 10), bool], Tensor[(8, 16, 7), bool]) */
}

def @func_13923(%var_13921: Tensor[(1, 16, 9), float64]) -> Tensor[(?, 16, 9), float32] {
  @func_13920(%var_13921) /* ty=Tensor[(?, 16, 9), float32] */
}

def @func_9975() -> (Tensor[(12, 10, 15), float64],) {
  %880 = @func_2765() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %881 = %880.0;
  (%881,)
}

def @func_5459() -> Tensor[(3, 16, 1), float64] {
  %885 = fn () -> Tensor[(3, 16, 1), float64] {
    %882 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
    %883 = sigmoid(%882) /* ty=Tensor[(3, 16, 1), float64] */;
    %884 = cast(%883, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
    asinh(%884) /* ty=Tensor[(3, 16, 1), float64] */
  };
  %885() /* ty=Tensor[(3, 16, 1), float64] */
}

def @func_3323() -> Tensor[(12, 10, 15), float64] {
  @func_2813() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_11292() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
  %886 = @func_9210() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %887 = %886.0;
  %888 = @func_6995() /* ty=Tensor[(8, 16, 7), bool] */;
  (%887, %888)
}

def @func_14444() -> (Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64], Tensor[(150), float64], Tensor[(880), int16]) {
  @func_14442() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64], Tensor[(150), float64], Tensor[(880), int16]) */
}

def @func_513(%var_461: Tensor[(8, 16, 7), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(8, 16, 7), uint32]) {
  %889 = @func_143() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %890 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %891 = %890.0;
  %892 = cast(%var_461, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %893 = shape_of(%891, dtype="int32") /* ty=Tensor[(3), int32] */;
  %894 = cast(%891, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %896 = less(%894, %895) /* ty=Tensor[(8, 16, 7), bool] */;
  %897 = cast(%var_461, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %898 = shape_of(%896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%896, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %901 = cast(%896, dtype="uint32") /* ty=Tensor[(8, 16, 7), uint32] */;
  %902 = shape_of(%891, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%891, dtype="uint32") /* ty=Tensor[(8, 16, 7), uint32] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %905 = %889.0;
  %906 = not_equal(%899, %900) /* ty=Tensor[(8, 16, 7), bool] */;
  %907 = multiply(%903, %904) /* ty=Tensor[(8, 16, 7), uint32] */;
  (%905, %906, %907)
}

def @func_21179() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(12, 10, 15), float64]) {
  %908 = @func_7767() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %909 = @func_12449() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %910 = @func_14722() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(455, 110), float64]) */;
  %911 = @func_14526() /* ty=(Tensor[(880), int16], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %912 = %908.0;
  %913 = %909.0;
  %914 = %910.2;
  %915 = %911.1;
  (%912, %913, %914, %915)
}

def @func_6420() -> Tensor[(12, 10, 15), float64] {
  %916 = @func_5617() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %916.0
}

def @func_6291() -> Tensor[(12, 10, 15), float64] {
  @func_6289() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_13117() -> (Tensor[(12, 10, 15), float64],) {
  %918 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %917 = @func_9733() /* ty=Tensor[(12, 10, 15), float64] */;
    (%917,)
  };
  %918() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_9408() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  %925 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
    %919 = @func_3697() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %920 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %921 = %920.0;
    %922 = cast(%921, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
    %923 = %919.3;
    %924 = cosh(%922) /* ty=Tensor[(12, 10, 15), float32] */;
    (%923, %924)
  };
  %925() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */
}

def @func_13462(%var_13460: Tensor[(25, 6), float64], %var_13461: Tensor[(1, 880), int16]) -> (Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(1, 880), float64]) {
  %943 = fn (%var_13425: Tensor[(25, 6), float64], %var_13439: Tensor[(1, 880), int16]) -> (Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(1, 880), float64]) {
    %926 = @func_11666() /* ty=(Tensor[(25, 6), float64], Tensor[(8, 16, 7), bool]) */;
    %927 = %926.0;
    %928 = cast(%var_13425, dtype="float64") /* ty=Tensor[(25, 6), float64] */;
    %929 = shape_of(%927, dtype="int32") /* ty=Tensor[(2), int32] */;
    %930 = cast(%927, dtype="float64") /* ty=Tensor[(25, 6), float64] */;
    %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %932 = @func_7544() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %933 = cast(%var_13439, dtype="int16") /* ty=Tensor[(1, 880), int16] */;
    %934 = reshape(%933, newshape=[1, 880]) /* ty=Tensor[(1, 880), int16] */;
    %935 = @func_12019(%934) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(6, 6, 12), float64], Tensor[(3, 16, 1), float64], Tensor[(11, 8, 10), bool], Tensor[(1, 880), int16], Tensor[(12, 10, 15), float64]) */;
    %936 = cast(%var_13439, dtype="float64") /* ty=Tensor[(1, 880), float64] */;
    %937 = atanh(%936) /* ty=Tensor[(1, 880), float64] */;
    %938 = cast(%937, dtype="float64") /* ty=Tensor[(1, 880), float64] */;
    %939 = floor_mod(%930, %931) /* ty=Tensor[(25, 6), float64] */;
    %940 = %932.1;
    %941 = %935.4;
    %942 = erf(%938) /* ty=Tensor[(1, 880), float64] */;
    (%939, %940, %941, %942)
  };
  %943(%var_13460, %var_13461) /* ty=(Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(1, 880), float64]) */
}

def @func_21925() -> (Tensor[(3, 16, 896), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %950 = fn () -> (Tensor[(3, 16, 896), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %944 = @func_8199() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
    %945 = @func_5795() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %946 = @func_19567() /* ty=Tensor[(3, 16, 896), float64] */;
    %947 = @func_2251() /* ty=Tensor[(12, 10, 15), float64] */;
    %948 = %944.0;
    %949 = %945.1;
    (%946, %947, %948, %949)
  };
  %950() /* ty=(Tensor[(3, 16, 896), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_20767(%var_20766: Tensor[(880), int16]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(880), int16]) {
  %959 = fn (%var_20763: Tensor[(880), int16]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(880), int16]) {
    %951 = @func_7242() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
    %952 = @func_13490() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %953 = cast(%var_20763, dtype="int16") /* ty=Tensor[(880), int16] */;
    %954 = reshape(%953, newshape=[1, 880]) /* ty=Tensor[(1, 880), int16] */;
    %955 = @func_12019(%954) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(6, 6, 12), float64], Tensor[(3, 16, 1), float64], Tensor[(11, 8, 10), bool], Tensor[(1, 880), int16], Tensor[(12, 10, 15), float64]) */;
    %956 = %951.1;
    %957 = %952.0;
    %958 = %955.7;
    (%956, %957, %958, %var_20763)
  };
  %959(%var_20766) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(880), int16]) */
}

def @func_2315() -> Tensor[(12, 10, 15), int64] {
  @func_2313() /* ty=Tensor[(12, 10, 15), int64] */
}

def @func_6422() -> Tensor[(12, 10, 15), float64] {
  @func_6420() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_21370() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %963 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %960 = @func_15474() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %961 = %960.0;
    %962 = @func_11606() /* ty=Tensor[(12, 10, 15), float64] */;
    (%961, %962)
  };
  %963() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_15474() -> (Tensor[(12, 10, 15), float64],) {
  %964 = @func_9656() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %965 = %964.2;
  (%965,)
}

def @func_9760(%var_9741: Tensor[(11, 3, 10), float64], %var_9742: Tensor[(11, 3, 10), float64], %var_9751: Tensor[(288), float32]) -> (Tensor[(11, 3, 10), float64], Tensor[(6, 3, 16), int16], Tensor[(18), float32], Tensor[(288), float32], Tensor[(12, 10, 15), float64]) {
  %966 = cast(%var_9742, dtype="float64") /* ty=Tensor[(11, 3, 10), float64] */;
  %967 = shape_of(%var_9741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %968 = cast(%var_9741, dtype="float64") /* ty=Tensor[(11, 3, 10), float64] */;
  %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %970 = cast(meta[relay.Constant][31] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %971 = cast(%var_9751, dtype="float32") /* ty=Tensor[(288), float32] */;
  %972 = reshape(%970, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %973 = reshape(%971, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), float32] */;
  %974 = @func_3492(%972, %973) /* ty=(Tensor[(6, 3, 16), int16], Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) */;
  %975 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %976 = minimum(%968, %969) /* ty=Tensor[(11, 3, 10), float64] */;
  %977 = %974.0;
  %978 = %975.0;
  (%976, %977, meta[relay.Constant][31] /* ty=Tensor[(18), float32] */, %var_9751, %978)
}

def @func_2823() -> Tensor[(12, 10, 15), float64] {
  %979 = @func_2229() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %979.0
}

def @func_3558() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %980 = @func_2566() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %981 = @func_2276() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %982 = %980.0;
  %983 = %981.0;
  %984 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
  (%982, %983, %984)
}

def @func_2779() -> Tensor[(12, 10, 15), float64] {
  @func_2777() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_12123() -> (Tensor[(12, 10, 15), float64], Tensor[(1, 880), int16], Tensor[(880), int16], Tensor[(12, 10, 15), float64]) {
  %993 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(1, 880), int16], Tensor[(880), int16], Tensor[(12, 10, 15), float64]) {
    %985 = @func_5899() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %986 = cast(meta[relay.Constant][32] /* ty=Tensor[(880), int16] */, dtype="int16") /* ty=Tensor[(880), int16] */;
    %987 = reshape(%986, newshape=[1, 880]) /* ty=Tensor[(1, 880), int16] */;
    %988 = @func_12019(%987) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(6, 6, 12), float64], Tensor[(3, 16, 1), float64], Tensor[(11, 8, 10), bool], Tensor[(1, 880), int16], Tensor[(12, 10, 15), float64]) */;
    %989 = @func_7585() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %990 = %985.3;
    %991 = %988.6;
    %992 = %989.0;
    (%990, %991, meta[relay.Constant][32] /* ty=Tensor[(880), int16] */, %992)
  };
  %993() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 880), int16], Tensor[(880), int16], Tensor[(12, 10, 15), float64]) */
}

def @func_21054() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_21052() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_6935() -> (Tensor[(12, 10, 15), float64],) {
  @func_6933() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_18756() -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool]) {
  %994 = @func_4766() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %995 = @func_18302() /* ty=(Tensor[(896), bool],) */;
  %996 = %994.0;
  %997 = %995.0;
  (%996, %997)
}

def @func_11547() -> (Tensor[(12, 10, 15), float64],) {
  %1000 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %998 = @func_8464() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
    %999 = %998.1;
    (%999,)
  };
  %1000() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_4065(%var_4045: Tensor[(150), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(150), float64], Tensor[(12, 10, 15), uint64]) {
  %1001 = cast(%var_4045, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1002 = reshape(%1001, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %1003 = @func_3790(%1002) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %1004 = @func_3863() /* ty=Tensor[(12, 10, 15), float64] */;
  %1005 = cast(%1004, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  %1006 = reshape(%1005, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
  %1007 = @func_1780(%1006) /* ty=(Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1008 = %1003.4;
  %1009 = %1007.0;
  (%1004, %1008, %var_4045, %1009)
}

def @func_6406() -> (Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) {
  %1018 = fn () -> (Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) {
    %1010 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1011 = cast(meta[relay.Constant][33] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
    %1012 = reshape(%1011, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
    %1013 = @func_513(%1012) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(8, 16, 7), uint32]) */;
    %1014 = @func_2920() /* ty=Tensor[(25, 6), float64] */;
    %1015 = %1010.0;
    %1016 = %1013.2;
    %1017 = @func_4579() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1014, %1015, %1016, meta[relay.Constant][33] /* ty=Tensor[(896), bool] */, %1017)
  };
  %1018() /* ty=(Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */
}

def @func_629() -> Tensor[(12, 10, 15), float64] {
  @func_627() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_16444() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1019 = @func_7152() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1020 = @func_10401() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1021 = %1019.0;
  %1022 = %1020.1;
  (%1021, %1022)
}

def @func_11236() -> Tensor[(12, 10, 15), float64] {
  @func_11234() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_11277() -> Tensor[(12, 10, 15), float64] {
  %1023 = fn () -> Tensor[(12, 10, 15), float64] {
    @func_2251() /* ty=Tensor[(12, 10, 15), float64] */
  };
  %1023() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_20730() -> Tensor[(150), float64] {
  %1024 = fn () -> Tensor[(150), float64] {
    @func_4275() /* ty=Tensor[(150), float64] */
  };
  %1024() /* ty=Tensor[(150), float64] */
}

def @func_17534() -> (Tensor[(12, 10, 15), float64],) {
  %1025 = @func_6323() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1026 = %1025.0;
  (%1026,)
}

def @func_21274() -> (Tensor[(12, 10, 15), float64],) {
  %1028 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %1027 = @func_17639() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1027,)
  };
  %1028() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_22734() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1033 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1029 = @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1030 = @func_16444() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1031 = %1029.1;
    %1032 = %1030.1;
    (%1031, %1032)
  };
  %1033() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_11035() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) {
  %1038 = fn () -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) {
    %1034 = @func_10106() /* ty=(Tensor[(12, 10, 15), float32],) */;
    %1035 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1036 = %1034.0;
    %1037 = %1035.1;
    (%1036, %1037)
  };
  %1038() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) */
}

def @func_20065() -> Tensor[(12, 10, 15), float64] {
  @func_20063() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_14526() -> (Tensor[(880), int16], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1039 = @func_14442() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64], Tensor[(150), float64], Tensor[(880), int16]) */;
  %1040 = @func_1289() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %1041 = @func_5795() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1042 = %1039.3;
  %1043 = %1040.0;
  %1044 = %1041.1;
  %1045 = @func_7697() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1042, %1043, %1044, %1045)
}

def @func_15350(%var_15348: Tensor[(432), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(432), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_15347(%var_15348) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(432), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_3496(%var_3494: Tensor[(6, 3, 1), float32], %var_3495: Tensor[(6, 3, 16), float32]) -> (Tensor[(6, 3, 16), int16], Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) {
  @func_3492(%var_3494, %var_3495) /* ty=(Tensor[(6, 3, 16), int16], Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) */
}

def @func_12717() -> Tensor[(12, 10, 15), float64] {
  @func_566() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_7023() -> Tensor[(12, 10, 15), float64] {
  %1047 = fn () -> Tensor[(12, 10, 15), float64] {
    %1046 = @func_2765() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1046.0
  };
  %1047() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_22625(%var_22620: float64) -> Tensor[(16, 1, 7), bool] {
  %1048 = cast(%var_22620, dtype="bool") /* ty=bool */;
  %1049 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 1, 7), float64] */, dtype="bool") /* ty=Tensor[(16, 1, 7), bool] */;
  not_equal(%1048, %1049) /* ty=Tensor[(16, 1, 7), bool] */
}

def @func_8998() -> (Tensor[(12, 10, 15), float64],) {
  %1050 = @func_4190() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1051 = %1050.0;
  (%1051,)
}

def @func_2648() -> Tensor[(12, 10, 15), float64] {
  @func_2646() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_6921() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1055 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1052 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
    %1053 = %1052.1;
    %1054 = @func_3124() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1053, %1054)
  };
  %1055() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_4439(%var_4420: Tensor[(11, 3, 3), uint64], %var_4421: Tensor[(11, 3, 3), uint64]) -> (Tensor[(11, 3, 3), uint64], Tensor[(12, 10, 15), float64]) {
  %1056 = cast(%var_4421, dtype="uint64") /* ty=Tensor[(11, 3, 3), uint64] */;
  %1057 = shape_of(%var_4420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1058 = cast(%var_4420, dtype="uint64") /* ty=Tensor[(11, 3, 3), uint64] */;
  %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1060 = bitwise_and(%1058, %1059) /* ty=Tensor[(11, 3, 3), uint64] */;
  %1061 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1060, %1061)
}

def @func_908() -> (Tensor[(12, 10, 15), float64],) {
  @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_21680() -> Tensor[(12, 10, 15), float64] {
  @func_21678() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_2313() -> Tensor[(12, 10, 15), int64] {
  %1062 = @func_1289() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %1063 = %1062.0;
  %1064 = @func_1685() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1065 = %1064.0;
  %1066 = cast(%1065, dtype="int64") /* ty=Tensor[(12, 10, 15), int64] */;
  %1067 = shape_of(%1063, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1068 = cast(%1063, dtype="int64") /* ty=Tensor[(12, 10, 15), int64] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%1068, %1069) /* ty=Tensor[(12, 10, 15), int64] */
}

def @func_516(%var_514: Tensor[(8, 16, 7), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(8, 16, 7), uint32]) {
  @func_513(%var_514) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(8, 16, 7), uint32]) */
}

def @func_14298() -> Tensor[(12, 10, 15), float64] {
  @func_14296() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_9787() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_9785() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_7205() -> Tensor[(12, 10, 15), float64] {
  %1071 = fn () -> Tensor[(12, 10, 15), float64] {
    %1070 = @func_2460() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
    %1070.0
  };
  %1071() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_11836() -> (Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  @func_11834() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_11886() -> Tensor[(6, 6, 12), float64] {
  @func_11884() /* ty=Tensor[(6, 6, 12), float64] */
}

def @func_16235(%var_16233: Tensor[(10, 11, 1), float64], %var_16234: Tensor[(10, 11, 11), float64]) -> (Tensor[(10, 11, 11), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32], Tensor[(448, 2), bool]) {
  %1081 = fn (%var_16218: Tensor[(10, 11, 1), float64], %var_16219: Tensor[(10, 11, 11), float64]) -> (Tensor[(10, 11, 11), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32], Tensor[(448, 2), bool]) {
    %1072 = cast(%var_16218, dtype="float64") /* ty=Tensor[(10, 11, 1), float64] */;
    %1073 = cast(%var_16219, dtype="float64") /* ty=Tensor[(10, 11, 11), float64] */;
    %1074 = @func_12529() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1075 = cast(meta[relay.Constant][35] /* ty=Tensor[(448, 2), bool] */, dtype="bool") /* ty=Tensor[(448, 2), bool] */;
    %1076 = reshape(%1075, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
    %1077 = @func_9939(%1076) /* ty=(Tensor[(8, 16, 7), int32], Tensor[(8, 16, 7), float32]) */;
    %1078 = mod(%1072, %1073) /* ty=Tensor[(10, 11, 11), float64] */;
    %1079 = %1074.0;
    %1080 = %1077.1;
    (%1078, %1079, %1080, meta[relay.Constant][35] /* ty=Tensor[(448, 2), bool] */)
  };
  %1081(%var_16233, %var_16234) /* ty=(Tensor[(10, 11, 11), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32], Tensor[(448, 2), bool]) */
}

def @func_14877() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_14875() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_14361(%var_14359: Tensor[(72, 4), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(330, 1), float64], Tensor[(72, 4), float32]) {
  @func_14358(%var_14359) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(330, 1), float64], Tensor[(72, 4), float32]) */
}

def @func_17792(%var_17790: Tensor[(1, 16, 16), float64]) -> (Tensor[(1, 16, 16), float64], Tensor[(8, 16, 7), bool]) {
  @func_17789(%var_17790) /* ty=(Tensor[(1, 16, 16), float64], Tensor[(8, 16, 7), bool]) */
}

def @func_12882() -> Tensor[(12, 10, 15), float64] {
  @func_3863() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_20276() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float64]) {
  %1086 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float64]) {
    %1082 = @func_19712() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1083 = @func_18440() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float64]) */;
    %1084 = %1082.1;
    %1085 = %1083.3;
    (%1084, %1085)
  };
  %1086() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float64]) */
}

def @func_225() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_168() -> (Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) {
  %1094 = fn () -> (Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) {
    %1087 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 16, 7), bool] */, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
    %1088 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(8, 16, 7), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1089 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 16, 7), bool] */, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
    %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1091 = @func_143() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1092 = logical_or(%1089, %1090) /* ty=Tensor[(8, 16, 7), bool] */;
    %1093 = %1091.3;
    (%1092, %1093)
  };
  %1094() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */
}

def @func_15874() -> (Tensor[(12, 10, 15), float64],) {
  %1097 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %1095 = @func_6102() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1096 = %1095.0;
    (%1096,)
  };
  %1097() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_11667() -> (Tensor[(25, 6), float64], Tensor[(8, 16, 7), bool]) {
  %1101 = fn () -> (Tensor[(25, 6), float64], Tensor[(8, 16, 7), bool]) {
    %1098 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
    %1099 = %1098.3;
    %1100 = @func_5323() /* ty=Tensor[(8, 16, 7), bool] */;
    (%1099, %1100)
  };
  %1101() /* ty=(Tensor[(25, 6), float64], Tensor[(8, 16, 7), bool]) */
}

def @func_16502() -> (Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64]) {
  @func_16500() /* ty=(Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_19727() -> Tensor[(12, 10, 15), float64] {
  %1103 = fn () -> Tensor[(12, 10, 15), float64] {
    %1102 = @func_9174() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1102.2
  };
  %1103() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_22628(%var_22626: float64) -> Tensor[(16, 1, 7), bool] {
  @func_22625(%var_22626) /* ty=Tensor[(16, 1, 7), bool] */
}

def @func_16724(%var_16723: Tensor[(35), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(7, ?, 5), bool], Tensor[(35), float32], Tensor[(14, 64), bool], Tensor[(12, 10, 15), float64]) {
  %1121 = fn (%var_16711: Tensor[(35), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(7, ?, 5), bool], Tensor[(35), float32], Tensor[(14, 64), bool], Tensor[(12, 10, 15), float64]) {
    %1104 = @func_4503() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1105 = cast(meta[relay.Constant][38] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
    %1106 = reshape(%1105, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %1107 = @func_3790(%1106) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
    %1108 = @func_5899() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1109 = cast(%var_16711, dtype="float32") /* ty=Tensor[(35), float32] */;
    %1110 = cast(%var_16711, dtype="float32") /* ty=Tensor[(35), float32] */;
    %1111 = cast(meta[relay.Constant][39] /* ty=Tensor[(14, 64), bool] */, dtype="bool") /* ty=Tensor[(14, 64), bool] */;
    %1112 = reshape(%1109, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
    %1113 = reshape(%1110, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float32] */;
    %1114 = reshape(%1111, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %1115 = @func_2995(%1112, %1113, %1114) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) */;
    %1116 = %1104.0;
    %1117 = %1107.1;
    %1118 = %1108.2;
    %1119 = %1115.2;
    %1120 = @func_5225() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1116, %1117, meta[relay.Constant][38] /* ty=Tensor[(150), float64] */, %1118, %1119, %var_16711, meta[relay.Constant][39] /* ty=Tensor[(14, 64), bool] */, %1120)
  };
  %1121(%var_16723) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(7, ?, 5), bool], Tensor[(35), float32], Tensor[(14, 64), bool], Tensor[(12, 10, 15), float64]) */
}

def @func_15248() -> Tensor[(12, 10, 15), float64] {
  @func_15246() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_4276() -> Tensor[(150), float64] {
  %1123 = fn () -> Tensor[(150), float64] {
    %1122 = @func_1863() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), bool]) */;
    %1122.2
  };
  %1123() /* ty=Tensor[(150), float64] */
}

def @func_21719() -> (Tensor[(12, 10, 15), float64],) {
  %1126 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %1124 = @func_18171() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1125 = %1124.0;
    (%1125,)
  };
  %1126() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_20980() -> (Tensor[(8, 16, 7), bool], Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1133 = fn () -> (Tensor[(8, 16, 7), bool], Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1127 = @func_11175() /* ty=(Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1128 = @func_9678() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
    %1129 = @func_6995() /* ty=Tensor[(8, 16, 7), bool] */;
    %1130 = %1127.0;
    %1131 = %1128.1;
    %1132 = @func_18345() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1129, %1130, %1131, %1132)
  };
  %1133() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_22056() -> (Tensor[(12, 10, 15), float64],) {
  @func_22054() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_5571(%var_5568: Tensor[(1, 5, 5), float64], %var_5569: Tensor[(35), float32], %var_5570: Tensor[(896), bool]) -> (Tensor[(1, 5, 5), float64], Tensor[(896), bool], Tensor[(35), float32], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) {
  @func_5566(%var_5568, %var_5569, %var_5570) /* ty=(Tensor[(1, 5, 5), float64], Tensor[(896), bool], Tensor[(35), float32], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */
}

def @func_1429() -> Tensor[(12, 10, 15), float64] {
  @func_1427() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_18613() -> Tensor[(12, 10, 15), float64] {
  %1134 = fn () -> Tensor[(12, 10, 15), float64] {
    @func_1208() /* ty=Tensor[(12, 10, 15), float64] */
  };
  %1134() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_954() -> (Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) {
  %1135 = @func_274() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1136 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 14, 13), float64] */, dtype="float64") /* ty=Tensor[(6, 14, 13), float64] */;
  %1137 = sigmoid(%1136) /* ty=Tensor[(6, 14, 13), float64] */;
  %1138 = cast(%1137, dtype="float32") /* ty=Tensor[(6, 14, 13), float32] */;
  %1139 = %1135.1;
  %1140 = exp(%1138) /* ty=Tensor[(6, 14, 13), float32] */;
  (%1139, %1140)
}

def @func_14425() -> (Tensor[(8, 16, 7), bool], Tensor[(72, 4), float32], Tensor[(288), float32]) {
  %1147 = fn () -> (Tensor[(8, 16, 7), bool], Tensor[(72, 4), float32], Tensor[(288), float32]) {
    %1141 = @func_4221() /* ty=(Tensor[(8, 16, 7), bool],) */;
    %1142 = cast(meta[relay.Constant][41] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %1143 = reshape(%1142, newshape=[72, 4]) /* ty=Tensor[(72, 4), float32] */;
    %1144 = @func_14358(%1143) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(330, 1), float64], Tensor[(72, 4), float32]) */;
    %1145 = %1141.0;
    %1146 = %1144.5;
    (%1145, %1146, meta[relay.Constant][41] /* ty=Tensor[(288), float32] */)
  };
  %1147() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(72, 4), float32], Tensor[(288), float32]) */
}

def @func_1481() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1153 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1148 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1149 = @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1150 = %1148.0;
    %1151 = %1149.1;
    %1152 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1150, %1151, %1152)
  };
  %1153() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_7914() -> (Tensor[(12, 10, 15), float64],) {
  %1155 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %1154 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1154,)
  };
  %1155() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_18172() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1160 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1156 = @func_6720() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1157 = @func_8081() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1158 = %1156.2;
    %1159 = %1157.2;
    (%1158, %1159)
  };
  %1160() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_17382() -> Tensor[(12, 10, 15), float64] {
  @func_6289() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_22434() -> Tensor[(12, 10, 15), float64] {
  %1162 = fn () -> Tensor[(12, 10, 15), float64] {
    %1161 = @func_20579() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1161.0
  };
  %1162() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_15246() -> Tensor[(12, 10, 15), float64] {
  @func_11606() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_2946() -> (Tensor[(6, 6, 12), float64],) {
  @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */
}

def @func_21805() -> (Tensor[(12, 10, 15), float64],) {
  %1163 = @func_13625() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1164 = %1163.0;
  (%1164,)
}

def @func_4579() -> Tensor[(12, 10, 15), float64] {
  %1165 = @func_1289() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %1165.0
}

def @func_6722() -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_6720() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_13514() -> (Tensor[(12, 10, 15), float64],) {
  @func_13512() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_21000() -> Tensor[(12, 10, 15), float64] {
  %1167 = fn () -> Tensor[(12, 10, 15), float64] {
    %1166 = @func_20649() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1166.2
  };
  %1167() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_4259() -> Tensor[(12, 10, 15), float64] {
  %1168 = fn () -> Tensor[(12, 10, 15), float64] {
    @func_3417() /* ty=Tensor[(12, 10, 15), float64] */
  };
  %1168() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_1379() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1169 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1170 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
  %1171 = %1169.0;
  (%1170, %1171)
}

def @func_20221(%var_20189: Tensor[(1600), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1600), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1172 = @func_2765() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1173 = cast(%var_20189, dtype="float32") /* ty=Tensor[(1600), float32] */;
  %1174 = reshape(%1173, newshape=[800, 2]) /* ty=Tensor[(800, 2), float32] */;
  %1175 = @func_11483(%1174) /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(16, 10, 10), int8], Tensor[(12, 10, 15), float64], Tensor[(7, ?, 5), bool], Tensor[(35), float32], Tensor[(800, 2), bool], Tensor[(800, 2), bool], Tensor[(12, 10, 15), float64]) */;
  %1176 = @func_7767() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1177 = @func_1182() /* ty=Tensor[(12, 10, 15), float64] */;
  %1178 = %1172.0;
  %1179 = %1175.1;
  %1180 = @func_12882() /* ty=Tensor[(12, 10, 15), float64] */;
  %1181 = %1176.0;
  (%1177, %1178, %1179, %var_20189, %1180, %1181)
}

def @func_14816() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1186 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1182 = @func_13258() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1183 = @func_13202() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
    %1184 = %1182.1;
    %1185 = %1183.0;
    (%1184, %1185)
  };
  %1186() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_15678(%var_15671: Tensor[(4, 6, 15), float64]) -> (Tensor[(4, 6, 15), float64],) {
  %1187 = cast(%var_15671, dtype="float64") /* ty=Tensor[(4, 6, 15), float64] */;
  %1188 = log(%1187) /* ty=Tensor[(4, 6, 15), float64] */;
  (%1188,)
}

def @func_17516(%var_17514: Tensor[(432), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), int16], Tensor[(432), float64], Tensor[(12, 10, 15), float64]) {
  @func_17513(%var_17514) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), int16], Tensor[(432), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_6624() -> (Tensor[(12, 10, 15), float64],) {
  @func_6622() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_8200() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
  %1192 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
    %1189 = @func_7544() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1190 = %1189.1;
    %1191 = @func_5323() /* ty=Tensor[(8, 16, 7), bool] */;
    (%1190, %1191)
  };
  %1192() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */
}

def @func_3125() -> Tensor[(12, 10, 15), float64] {
  %1193 = fn () -> Tensor[(12, 10, 15), float64] {
    @func_627() /* ty=Tensor[(12, 10, 15), float64] */
  };
  %1193() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_11607() -> Tensor[(12, 10, 15), float64] {
  %1195 = fn () -> Tensor[(12, 10, 15), float64] {
    %1194 = @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1194.0
  };
  %1195() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_9977() -> (Tensor[(12, 10, 15), float64],) {
  @func_9975() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_566() -> Tensor[(12, 10, 15), float64] {
  %1196 = @func_143() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1196.0
}

def @func_20695(%var_20688: Tensor[(360), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 896), float64], Tensor[(4, 6, 15), float64], Tensor[(360), float64]) {
  %1197 = @func_11119() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1198 = @func_11706() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1199 = cast(%var_20688, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1200 = reshape(%1199, newshape=[4, 6, 15]) /* ty=Tensor[(4, 6, 15), float64] */;
  %1201 = @func_15678(%1200) /* ty=(Tensor[(4, 6, 15), float64],) */;
  %1202 = %1197.1;
  %1203 = %1198.0;
  %1204 = @func_19567() /* ty=Tensor[(3, 16, 896), float64] */;
  %1205 = %1201.0;
  (%1202, %1203, %1204, %1205, %var_20688)
}

def @func_14665(%var_14664: Tensor[(336), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64]) {
  %1212 = fn (%var_14661: Tensor[(336), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64]) {
    %1206 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
    %1207 = cast(%var_14661, dtype="float64") /* ty=Tensor[(336), float64] */;
    %1208 = reshape(%1207, newshape=[3, 8, 14]) /* ty=Tensor[(3, 8, 14), float64] */;
    %1209 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
    %1210 = %1206.0;
    %1211 = @func_10597(%1208) /* ty=Tensor[(3, 8, 14), float64] */;
    (%1209, %1210, %1211, %var_14661)
  };
  %1212(%var_14664) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64]) */
}

def @func_22670() -> (Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(12, 10, 15), float64]) {
  %1213 = @func_7461() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */;
  %1214 = @func_1863() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), bool]) */;
  %1215 = @func_223() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1216 = %1213.1;
  %1217 = %1214.1;
  %1218 = %1215.0;
  (%1216, %1217, %1218)
}

def @func_12064() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_12062() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_1427() -> Tensor[(12, 10, 15), float64] {
  %1219 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1219.1
}

def @func_9332() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64]) {
  %1226 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64]) {
    %1220 = @func_7242() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
    %1221 = @func_6323() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1222 = %1220.1;
    %1223 = @func_3863() /* ty=Tensor[(12, 10, 15), float64] */;
    %1224 = @func_8228() /* ty=Tensor[(3, 16, 1), float64] */;
    %1225 = %1221.0;
    (%1222, %1223, %1224, %1225)
  };
  %1226() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_16063() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1227 = @func_3741() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) */;
  %1228 = %1227.1;
  %1229 = @func_3417() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1228, %1229)
}

def @func_568() -> Tensor[(12, 10, 15), float64] {
  @func_566() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_7483() -> (Tensor[(12, 10, 15), float64],) {
  %1232 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %1230 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1231 = %1230.0;
    (%1231,)
  };
  %1232() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_5103() -> Tensor[(12, 10, 15), float64] {
  @func_5101() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_21112() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_21110() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_18303() -> (Tensor[(896), bool],) {
  %1235 = fn () -> (Tensor[(896), bool],) {
    %1233 = @func_10928() /* ty=(Tensor[(896), bool],) */;
    %1234 = %1233.0;
    (%1234,)
  };
  %1235() /* ty=(Tensor[(896), bool],) */
}

def @func_2944() -> (Tensor[(6, 6, 12), float64],) {
  %1236 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 6, 12), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 12), float32] */;
  %1237 = cos(%1236) /* ty=Tensor[(6, 6, 12), float32] */;
  %1238 = cast(%1237, dtype="float64") /* ty=Tensor[(6, 6, 12), float64] */;
  %1239 = asin(%1238) /* ty=Tensor[(6, 6, 12), float64] */;
  (%1239,)
}

def @func_11724() -> (Tensor[(12, 10, 15), float64],) {
  %1240 = @func_1379() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1241 = %1240.0;
  (%1241,)
}

def @func_11088() -> (Tensor[(12, 10, 15), float64],) {
  %1244 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %1242 = @func_4190() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1243 = %1242.1;
    (%1243,)
  };
  %1244() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_22594() -> Tensor[(12, 10, 15), float64] {
  %1246 = fn () -> Tensor[(12, 10, 15), float64] {
    %1245 = @func_21052() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1245.0
  };
  %1246() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_9000() -> (Tensor[(12, 10, 15), float64],) {
  @func_8998() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_5440() -> (Tensor[(12, 10, 15), float64],) {
  %1248 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %1247 = @func_5225() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1247,)
  };
  %1248() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_13258() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1249 = @func_2229() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1250 = @func_5487() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1251 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
  %1252 = %1249.0;
  %1253 = %1250.0;
  %1254 = @func_6420() /* ty=Tensor[(12, 10, 15), float64] */;
  %1255 = %1251.1;
  (%1252, %1253, %1254, %1255)
}

def @func_7981() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) {
  @func_7979() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */
}

def @func_5797() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_5795() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_15681(%var_15679: Tensor[(4, 6, 15), float64]) -> (Tensor[(4, 6, 15), float64],) {
  @func_15678(%var_15679) /* ty=(Tensor[(4, 6, 15), float64],) */
}

def @func_2230() -> (Tensor[(12, 10, 15), float64],) {
  %1258 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %1256 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1257 = %1256.0;
    (%1257,)
  };
  %1258() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_15214() -> (Tensor[(12, 10, 15), float64],) {
  %1261 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %1259 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
    %1260 = %1259.1;
    (%1260,)
  };
  %1261() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_3417() -> Tensor[(12, 10, 15), float64] {
  @func_1208() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_6455() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_6453() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_15836() -> (Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_15834() /* ty=(Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_8466() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
  @func_8464() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */
}

def @func_4383() -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32], Tensor[(12, 10, 15), float64]) {
  @func_4381() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32], Tensor[(12, 10, 15), float64]) */
}

def @func_13346() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) {
  %1266 = fn () -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) {
    %1262 = @func_10106() /* ty=(Tensor[(12, 10, 15), float32],) */;
    %1263 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1264 = %1262.0;
    %1265 = %1263.0;
    (%1264, %1265)
  };
  %1266() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) */
}

def @func_5323() -> Tensor[(8, 16, 7), bool] {
  @func_861() /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_7125() -> Tensor[(12, 10, 15), float64] {
  %1267 = @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */;
  %1267.1
}

def @func_2576() -> Tensor[(12, 10, 15), float64] {
  %1269 = fn () -> Tensor[(12, 10, 15), float64] {
    %1268 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1268.1
  };
  %1269() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_17271(%var_17270: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) {
  %1277 = fn (%var_17244: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) {
    %1270 = @func_1863() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), bool]) */;
    %1271 = cast(%var_17244, dtype="bool") /* ty=Tensor[(896), bool] */;
    %1272 = reshape(%1271, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %1273 = @func_10991(%1272) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) */;
    %1274 = %1270.3;
    %1275 = @func_5028() /* ty=Tensor[(12, 10, 15), float64] */;
    %1276 = %1273.1;
    (%1274, %1275, %1276, %var_17244)
  };
  %1277(%var_17270) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) */
}

def @func_17549() -> (Tensor[(12, 10, 15), float64],) {
  %1278 = @func_7104() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1278,)
}

def @func_7462() -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64]) {
  %1283 = fn () -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64]) {
    %1279 = @func_5373() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(56, 16), bool]) */;
    %1280 = @func_7242() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
    %1281 = %1279.1;
    %1282 = %1280.1;
    (%1281, %1282)
  };
  %1283() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */
}

def @func_17721() -> Tensor[(8, 16, 7), bool] {
  %1285 = fn () -> Tensor[(8, 16, 7), bool] {
    %1284 = @func_4221() /* ty=(Tensor[(8, 16, 7), bool],) */;
    %1284.0
  };
  %1285() /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_9697() -> Tensor[(12, 10, 15), float64] {
  %1286 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1286.0
}

def @func_9658() -> (Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_9656() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_7127() -> Tensor[(12, 10, 15), float64] {
  @func_7125() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_906() -> (Tensor[(12, 10, 15), float64],) {
  %1287 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1288 = %1287.1;
  (%1288,)
}

def @func_6686(%var_6685: Tensor[(11, 8, 11), float64]) -> Tensor[(11, 8, 11), float64] {
  %1290 = fn (%var_6681: Tensor[(11, 8, 11), float64]) -> Tensor[(11, 8, 11), float64] {
    %1289 = cast(%var_6681, dtype="float64") /* ty=Tensor[(11, 8, 11), float64] */;
    cos(%1289) /* ty=Tensor[(11, 8, 11), float64] */
  };
  %1290(%var_6685) /* ty=Tensor[(11, 8, 11), float64] */
}

def @func_11294() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
  @func_11292() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */
}

def @func_956() -> (Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) {
  @func_954() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) */
}

def @func_21732() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64]) {
  %1294 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64]) {
    %1291 = @func_6622() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1292 = %1291.0;
    %1293 = @func_14059() /* ty=Tensor[(12, 10, 15), int64] */;
    (%1292, %1293)
  };
  %1294() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64]) */
}

def @func_7349() -> Tensor[(12, 10, 15), float64] {
  @func_7347() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_2921() -> Tensor[(25, 6), float64] {
  %1296 = fn () -> Tensor[(25, 6), float64] {
    %1295 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
    %1295.3
  };
  %1296() /* ty=Tensor[(25, 6), float64] */
}

def @func_10699(%var_10631: Tensor[(25, 6), float64], %var_10652: Tensor[(25, 6), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(25, 6), bool], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), int32], Tensor[(12, 10, 15), float64]) {
  %1297 = @func_6933() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1298 = @func_2920() /* ty=Tensor[(25, 6), float64] */;
  %1299 = cast(%var_10631, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %1300 = shape_of(%1298, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1301 = cast(%1298, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %1302 = dyn.reshape(%1299, %1300, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1303 = mod(%1301, %1302) /* ty=Tensor[(25, 6), float32] */;
  %1304 = cast(%var_10652, dtype="bool") /* ty=Tensor[(25, 6), bool] */;
  %1305 = shape_of(%1303, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1306 = cast(%1303, dtype="bool") /* ty=Tensor[(25, 6), bool] */;
  %1307 = dyn.reshape(%1304, %1305, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1308 = @func_2211() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(896), bool], Tensor[(8, 16, 7), bool]) */;
  %1309 = @func_8294() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1310 = cast(%1303, dtype="int32") /* ty=Tensor[(25, 6), int32] */;
  %1311 = shape_of(%1298, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1312 = cast(%1298, dtype="int32") /* ty=Tensor[(25, 6), int32] */;
  %1313 = dyn.reshape(%1310, %1311, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1314 = %1297.0;
  %1315 = less(%1306, %1307) /* ty=Tensor[(25, 6), bool] */;
  %1316 = @func_5323() /* ty=Tensor[(8, 16, 7), bool] */;
  %1317 = %1308.1;
  %1318 = %1309.2;
  %1319 = subtract(%1312, %1313) /* ty=Tensor[(25, 6), int32] */;
  %1320 = @func_7104() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1314, %1315, %1316, %1317, %1318, %1319, %1320)
}

def @func_19341(%var_19335: Tensor[(2, 8, 15), float64]) -> Tensor[(2, 8, 15), float64] {
  %1321 = cast(%var_19335, dtype="float64") /* ty=Tensor[(2, 8, 15), float64] */;
  cos(%1321) /* ty=Tensor[(2, 8, 15), float64] */
}

def @func_20049() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) {
  @func_20047() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */
}

def @func_1543() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) {
  %1326 = fn () -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) {
    %1322 = @func_852() /* ty=(Tensor[(12, 10, 15), float32],) */;
    %1323 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1324 = %1322.0;
    %1325 = %1323.1;
    (%1324, %1325)
  };
  %1326() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) */
}

def @func_4768() -> (Tensor[(12, 10, 15), float64],) {
  @func_4766() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_3978(%var_3977: Tensor[(150), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) {
  %1332 = fn (%var_3967: Tensor[(150), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) {
    %1327 = cast(%var_3967, dtype="float64") /* ty=Tensor[(150), float64] */;
    %1328 = reshape(%1327, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %1329 = @func_1101(%1328) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
    %1330 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
    %1331 = %1329.4;
    (%1330, %1331, %var_3967)
  };
  %1332(%var_3977) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */
}

def @func_5257(%var_5256: Tensor[(16, 10, 10), int8]) -> Tensor[(16, 10, 10), int8] {
  %1337 = fn (%var_5250: Tensor[(16, 10, 10), int8]) -> Tensor[(16, 10, 10), int8] {
    %1333 = cast(%var_5250, dtype="int8") /* ty=Tensor[(16, 10, 10), int8] */;
    %1334 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(16, 10, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1335 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 10, 10), int8] */, dtype="int8") /* ty=Tensor[(16, 10, 10), int8] */;
    %1336 = dyn.reshape(%1333, %1334, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    subtract(%1335, %1336) /* ty=Tensor[(16, 10, 10), int8] */
  };
  %1337(%var_5256) /* ty=Tensor[(16, 10, 10), int8] */
}

def @func_21972(%var_21934: Tensor[(7, 2, 8), float64]) -> (Tensor[(7, 2, 8), float64], Tensor[(16, 10, 10), int8], Tensor[(1600), int8], Tensor[(12, 10, 15), float64]) {
  %1338 = cast(%var_21934, dtype="float64") /* ty=Tensor[(7, 2, 8), float64] */;
  %1339 = cast(meta[relay.Constant][44] /* ty=Tensor[(1600), int8] */, dtype="int8") /* ty=Tensor[(1600), int8] */;
  %1340 = reshape(%1339, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), int8] */;
  %1341 = @func_18772() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1342 = log2(%1338) /* ty=Tensor[(7, 2, 8), float64] */;
  %1343 = @func_5255(%1340) /* ty=Tensor[(16, 10, 10), int8] */;
  %1344 = %1341.0;
  (%1342, %1343, meta[relay.Constant][44] /* ty=Tensor[(1600), int8] */, %1344)
}

def @func_3914() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) {
  %1353 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) {
    %1345 = @func_3741() /* ty=(Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) */;
    %1346 = %1345.1;
    %1347 = cast(%1346, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
    %1348 = reshape(%1347, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
    %1349 = @func_1780(%1348) /* ty=(Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1350 = @func_1182() /* ty=Tensor[(12, 10, 15), float64] */;
    %1351 = %1349.0;
    %1352 = @func_2920() /* ty=Tensor[(25, 6), float64] */;
    (%1350, %1346, %1351, %1352)
  };
  %1353() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */
}

def @func_12087() -> Tensor[(8, 16, 7), float64] {
  @func_12085() /* ty=Tensor[(8, 16, 7), float64] */
}

def @func_16173() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1361 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1354 = @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1355 = @func_7585() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1356 = @func_6933() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1357 = %1354.0;
    %1358 = %1355.0;
    %1359 = %1356.0;
    %1360 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1357, %1358, %1359, %1360)
  };
  %1361() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_15927(%var_15925: Tensor[(880), int16]) -> (Tensor[(12, 10, 15), float32], Tensor[(880), int64]) {
  @func_15924(%var_15925) /* ty=(Tensor[(12, 10, 15), float32], Tensor[(880), int64]) */
}

def @func_15924(%var_15912: Tensor[(880), int16]) -> (Tensor[(12, 10, 15), float32], Tensor[(880), int64]) {
  %1362 = @func_9407() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %1363 = @func_12122() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 880), int16], Tensor[(880), int16], Tensor[(12, 10, 15), float64]) */;
  %1364 = %1363.2;
  %1365 = cast(%var_15912, dtype="int64") /* ty=Tensor[(880), int64] */;
  %1366 = shape_of(%1364, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1367 = cast(%1364, dtype="int64") /* ty=Tensor[(880), int64] */;
  %1368 = dyn.reshape(%1365, %1366, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1369 = %1362.1;
  %1370 = bitwise_xor(%1367, %1368) /* ty=Tensor[(880), int64] */;
  (%1369, %1370)
}

def @func_14397() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_14395() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_16661() -> Tensor[(12, 10, 15), float64] {
  @func_12717() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_20519() -> Tensor[(12, 10, 15), float64] {
  %1371 = @func_12438() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1371.0
}

def @func_16153() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(144), int64]) {
  %1372 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1373 = cast(meta[relay.Constant][45] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %1374 = reshape(%1373, newshape=[4, 12, 3]) /* ty=Tensor[(4, 12, 3), int64] */;
  %1375 = @func_8517(%1374) /* ty=(Tensor[(4, 12, 3), int64], Tensor[(12, 10, 15), float64]) */;
  %1376 = @func_12389() /* ty=Tensor[(12, 10, 15), float64] */;
  %1377 = %1372.0;
  %1378 = %1375.1;
  (%1376, %1377, %1378, meta[relay.Constant][45] /* ty=Tensor[(144), int64] */)
}

def @func_12352() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1379 = @func_6531() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1380 = @func_5150() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1381 = %1379.0;
  %1382 = %1380.1;
  (%1381, %1382)
}

def @func_10357() -> (Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  %1390 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
    %1383 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1384 = cast(meta[relay.Constant][46] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
    %1385 = reshape(%1384, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %1386 = @func_3790(%1385) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
    %1387 = %1383.1;
    %1388 = %1386.3;
    %1389 = @func_7697() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1387, %1388, meta[relay.Constant][46] /* ty=Tensor[(150), float64] */, %1389)
  };
  %1390() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_15625() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 13), float64]) {
  %1398 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 13), float64]) {
    %1391 = @func_4309() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1392 = @func_5458() /* ty=Tensor[(3, 16, 1), float64] */;
    %1393 = cast(%1392, dtype="float64") /* ty=Tensor[(3, 16, 1), float64] */;
    %1394 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 16, 13), float64] */, dtype="float64") /* ty=Tensor[(3, 16, 13), float64] */;
    %1395 = @func_11606() /* ty=Tensor[(12, 10, 15), float64] */;
    %1396 = %1391.0;
    %1397 = divide(%1393, %1394) /* ty=Tensor[(3, 16, 13), float64] */;
    (%1395, %1396, %1397)
  };
  %1398() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 13), float64]) */
}

def @func_12021(%var_12020: Tensor[(1, 880), int16]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(6, 6, 12), float64], Tensor[(3, 16, 1), float64], Tensor[(11, 8, 10), bool], Tensor[(1, 880), int16], Tensor[(12, 10, 15), float64]) {
  %1415 = fn (%var_11984: Tensor[(1, 880), int16]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(6, 6, 12), float64], Tensor[(3, 16, 1), float64], Tensor[(11, 8, 10), bool], Tensor[(1, 880), int16], Tensor[(12, 10, 15), float64]) {
    %1399 = @func_3558() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1400 = @func_6405() /* ty=(Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */;
    %1401 = %1400.2;
    %1402 = cast(%1401, dtype="bool") /* ty=Tensor[(8, 16, 7), bool] */;
    %1403 = reshape(%1402, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %1404 = @func_6882(%1403) /* ty=(Tensor[(6, 6, 12), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(1, 15, 10), float64]) */;
    %1405 = cast(%var_11984, dtype="int16") /* ty=Tensor[(1, 880), int16] */;
    %1406 = reshape(%1405, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), int16] */;
    %1407 = @func_4902(%1406) /* ty=(Tensor[(11, 8, 10), bool], Tensor[(8, 16, 7), bool]) */;
    %1408 = @func_7242() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
    %1409 = @func_11234() /* ty=Tensor[(12, 10, 15), float64] */;
    %1410 = %1399.1;
    %1411 = %1404.0;
    %1412 = @func_8228() /* ty=Tensor[(3, 16, 1), float64] */;
    %1413 = %1407.0;
    %1414 = %1408.0;
    (%1409, %1410, %1401, %1411, %1412, %1413, %var_11984, %1414)
  };
  %1415(%var_12020) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), uint32], Tensor[(6, 6, 12), float64], Tensor[(3, 16, 1), float64], Tensor[(11, 8, 10), bool], Tensor[(1, 880), int16], Tensor[(12, 10, 15), float64]) */
}

def @func_5325() -> Tensor[(8, 16, 7), bool] {
  @func_5323() /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_14395() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1416 = @func_5617() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1417 = @func_6531() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1418 = @func_6198() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1419 = %1416.0;
  %1420 = %1417.1;
  %1421 = %1418.0;
  (%1419, %1420, %1421)
}

def @func_19326() -> Tensor[(6, 6, 12), float64] {
  %1422 = @func_16737() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %1422.0
}

def @func_19776() -> Tensor[(3, 16, 1), float64] {
  %1423 = fn () -> Tensor[(3, 16, 1), float64] {
    @func_8228() /* ty=Tensor[(3, 16, 1), float64] */
  };
  %1423() /* ty=Tensor[(3, 16, 1), float64] */
}

def @func_2278() -> (Tensor[(12, 10, 15), float64],) {
  @func_2276() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_21474() -> Tensor[(12, 10, 15), float64] {
  %1425 = fn () -> Tensor[(12, 10, 15), float64] {
    %1424 = @func_5795() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1424.0
  };
  %1425() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_14842() -> (Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64]) {
  @func_14840() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64]) */
}

def @func_2567() -> (Tensor[(12, 10, 15), float32],) {
  %1430 = fn () -> (Tensor[(12, 10, 15), float32],) {
    %1426 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1427 = %1426.1;
    %1428 = cast(%1427, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
    %1429 = asinh(%1428) /* ty=Tensor[(12, 10, 15), float32] */;
    (%1429,)
  };
  %1430() /* ty=(Tensor[(12, 10, 15), float32],) */
}

def @func_2999(%var_2996: Tensor[(7, 1, 5), float32], %var_2997: Tensor[(7, 1, 5), float32], %var_2998: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) {
  %1445 = fn (%var_2955: Tensor[(7, 1, 5), float32], %var_2956: Tensor[(7, 1, 5), float32], %var_2963: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) {
    %1431 = cast(%var_2963, dtype="bool") /* ty=Tensor[(896), bool] */;
    %1432 = reshape(%1431, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
    %1433 = @func_513(%1432) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(8, 16, 7), uint32]) */;
    %1434 = cast(%var_2956, dtype="bool") /* ty=Tensor[(7, 1, 5), bool] */;
    %1435 = shape_of(%var_2955, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1436 = cast(%var_2955, dtype="bool") /* ty=Tensor[(7, 1, 5), bool] */;
    %1437 = dyn.reshape(%1434, %1435, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1438 = less(%1436, %1437) /* ty=Tensor[(7, ?, 5), bool] */;
    %1439 = cast(%var_2955, dtype="bool") /* ty=Tensor[(7, 1, 5), bool] */;
    %1440 = shape_of(%1438, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1441 = cast(%1438, dtype="bool") /* ty=Tensor[(7, ?, 5), bool] */;
    %1442 = dyn.reshape(%1439, %1440, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1443 = %1433.0;
    %1444 = logical_and(%1441, %1442) /* ty=Tensor[(7, ?, 5), bool] */;
    (%1443, %var_2963, %1444)
  };
  %1445(%var_2996, %var_2997, %var_2998) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(7, ?, 5), bool]) */
}

def @func_14036() -> (Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  %1446 = @func_5523() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(150), float64]) */;
  %1447 = @func_11376() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %1448 = %1446.5;
  %1449 = %1447.0;
  (%1448, %1449)
}

def @func_5101() -> Tensor[(12, 10, 15), float64] {
  @func_86() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_19713() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1458 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1450 = @func_6720() /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1451 = @func_18064() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1452 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
    %1453 = @func_17534() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1454 = %1450.2;
    %1455 = %1451.0;
    %1456 = %1452.1;
    %1457 = %1453.0;
    (%1454, %1455, %1456, %1457)
  };
  %1458() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_14746() -> (Tensor[(12, 10, 15), float32],) {
  %1459 = @func_10106() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %1460 = %1459.0;
  (%1460,)
}

def @func_10502() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_10500() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_12953(%var_12952: Tensor[(16, 12, 3), float32]) -> Tensor[(16, 12, 3), float32] {
  %1462 = fn (%var_12948: Tensor[(16, 12, 3), float32]) -> Tensor[(16, 12, 3), float32] {
    %1461 = cast(%var_12948, dtype="float32") /* ty=Tensor[(16, 12, 3), float32] */;
    sqrt(%1461) /* ty=Tensor[(16, 12, 3), float32] */
  };
  %1462(%var_12952) /* ty=Tensor[(16, 12, 3), float32] */
}

def @func_4190() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1463 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %1464 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1465 = %1463.2;
  %1466 = %1464.0;
  %1467 = @func_1427() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1465, %1466, %1467)
}

def @func_9734() -> Tensor[(12, 10, 15), float64] {
  %1468 = fn () -> Tensor[(12, 10, 15), float64] {
    @func_5101() /* ty=Tensor[(12, 10, 15), float64] */
  };
  %1468() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_22033() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1472 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1469 = @func_14395() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1470 = %1469.2;
    %1471 = @func_5225() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1470, %1471)
  };
  %1472() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_17639() -> Tensor[(12, 10, 15), float64] {
  %1473 = @func_8294() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1473.1
}

def @func_21332() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_21330() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_14631(%var_14610: Tensor[(48), float64]) -> (Tensor[(8, 16, 7), bool], Tensor[(12, 2, 2), float64], Tensor[(48), float64]) {
  %1474 = cast(%var_14610, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1475 = reshape(%1474, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float64] */;
  %1476 = @func_8245(%1475) /* ty=(Tensor[(12, 2, 2), float64],) */;
  %1477 = @func_871() /* ty=Tensor[(8, 16, 7), bool] */;
  %1478 = %1476.0;
  (%1477, %1478, %var_14610)
}

def @func_20521() -> Tensor[(12, 10, 15), float64] {
  @func_20519() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_17384() -> Tensor[(12, 10, 15), float64] {
  @func_17382() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_3792(%var_3791: Tensor[(150), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) {
  %1489 = fn (%var_3780: Tensor[(150), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) {
    %1479 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1480 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1481 = @func_3697() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1482 = cast(%var_3780, dtype="float64") /* ty=Tensor[(150), float64] */;
    %1483 = reshape(%1482, newshape=[1, 15, 10]) /* ty=Tensor[(1, 15, 10), float64] */;
    %1484 = @func_768(%1483) /* ty=(Tensor[(1, 15, 10), float64],) */;
    %1485 = %1479.0;
    %1486 = %1480.1;
    %1487 = %1481.3;
    %1488 = %1484.0;
    (%1485, %1486, %1487, %1488, %var_3780)
  };
  %1489(%var_3791) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */
}

def @func_22672() -> (Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(12, 10, 15), float64]) {
  @func_22670() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_5126() -> (Tensor[(1, 15, 10), float64], Tensor[(12, 10, 15), float64], Tensor[(5, 30), float64], Tensor[(25, 6), float64]) {
  @func_5124() /* ty=(Tensor[(1, 15, 10), float64], Tensor[(12, 10, 15), float64], Tensor[(5, 30), float64], Tensor[(25, 6), float64]) */
}

def @func_1994() -> (Tensor[(12, 10, 15), float64],) {
  @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_853() -> (Tensor[(12, 10, 15), float32],) {
  %1494 = fn () -> (Tensor[(12, 10, 15), float32],) {
    %1490 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1491 = %1490.0;
    %1492 = cast(%1491, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
    %1493 = tan(%1492) /* ty=Tensor[(12, 10, 15), float32] */;
    (%1493,)
  };
  %1494() /* ty=(Tensor[(12, 10, 15), float32],) */
}

def @func_10107() -> (Tensor[(12, 10, 15), float32],) {
  %1497 = fn () -> (Tensor[(12, 10, 15), float32],) {
    %1495 = @func_7242() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
    %1496 = %1495.2;
    (%1496,)
  };
  %1497() /* ty=(Tensor[(12, 10, 15), float32],) */
}

def @func_4698() -> (Tensor[(12, 10, 15), float64],) {
  %1498 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %1499 = %1498.0;
  (%1499,)
}

def @func_14274() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(18), float32], Tensor[(288), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(56, 16), bool], Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64]) {
  @func_14272() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(18), float32], Tensor[(288), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(56, 16), bool], Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64]) */
}

def @func_5637() -> Tensor[(12, 10, 15), float64] {
  %1500 = fn () -> Tensor[(12, 10, 15), float64] {
    @func_5394() /* ty=Tensor[(12, 10, 15), float64] */
  };
  %1500() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_16783() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1505 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1501 = @func_15873() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1502 = %1501.0;
    %1503 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
    %1504 = @func_3417() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1502, %1503, %1504)
  };
  %1505() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_20047() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) {
  %1506 = @func_8464() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %1507 = @func_6323() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1508 = @func_2889() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64]) */;
  %1509 = %1506.1;
  %1510 = %1507.0;
  %1511 = %1508.3;
  (%1509, %1510, %1511)
}

def @func_11177() -> (Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_11175() /* ty=(Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_18248(%var_18247: Tensor[(336), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(336), float64]) {
  %1519 = fn (%var_18242: Tensor[(336), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(336), float64]) {
    %1512 = @func_7544() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1513 = cast(%var_18242, dtype="float64") /* ty=Tensor[(336), float64] */;
    %1514 = reshape(%1513, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %1515 = @func_14663(%1514) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64]) */;
    %1516 = %1512.0;
    %1517 = @func_13605() /* ty=Tensor[(12, 10, 15), float64] */;
    %1518 = %1515.1;
    (%1516, %1517, %1518, %var_18242)
  };
  %1519(%var_18247) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(336), float64]) */
}

def @func_20581() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_20579() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_16538() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1524 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1520 = @func_8199() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
    %1521 = @func_10401() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1522 = %1520.0;
    %1523 = %1521.1;
    (%1522, %1523)
  };
  %1524() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_19344(%var_19342: Tensor[(2, 8, 15), float64]) -> Tensor[(2, 8, 15), float64] {
  @func_19341(%var_19342) /* ty=Tensor[(2, 8, 15), float64] */
}

def @func_1865() -> (Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), bool]) {
  @func_1863() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), bool]) */
}

def @func_20698(%var_20696: Tensor[(360), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 896), float64], Tensor[(4, 6, 15), float64], Tensor[(360), float64]) {
  @func_20695(%var_20696) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 896), float64], Tensor[(4, 6, 15), float64], Tensor[(360), float64]) */
}

def @func_13286(%var_13284: Tensor[(25, 6), float64]) -> (Tensor[(25, 6), float32], Tensor[(25, 6), bool]) {
  @func_13283(%var_13284) /* ty=(Tensor[(25, 6), float32], Tensor[(25, 6), bool]) */
}

def @func_14875() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1525 = @func_4766() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1526 = %1525.0;
  %1527 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1526, %1527)
}

def @func_12085() -> Tensor[(8, 16, 7), float64] {
  %1528 = @func_871() /* ty=Tensor[(8, 16, 7), bool] */;
  %1529 = cast(meta[relay.Constant][48] /* ty=Tensor[(8, 16, 7), bool] */, dtype="float64") /* ty=Tensor[(8, 16, 7), float64] */;
  %1530 = shape_of(%1528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1531 = cast(%1528, dtype="float64") /* ty=Tensor[(8, 16, 7), float64] */;
  %1532 = dyn.reshape(%1529, %1530, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%1531, %1532) /* ty=Tensor[(8, 16, 7), float64] */
}

def @func_14442() -> (Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64], Tensor[(150), float64], Tensor[(880), int16]) {
  %1533 = cast(meta[relay.Constant][49] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1534 = cast(meta[relay.Constant][50] /* ty=Tensor[(880), int16] */, dtype="int16") /* ty=Tensor[(880), int16] */;
  %1535 = reshape(%1533, newshape=[25, 6]) /* ty=Tensor[(25, 6), float64] */;
  %1536 = reshape(%1534, newshape=[1, 880]) /* ty=Tensor[(1, 880), int16] */;
  %1537 = @func_13459(%1535, %1536) /* ty=(Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(1, 880), float64]) */;
  %1538 = @func_3323() /* ty=Tensor[(12, 10, 15), float64] */;
  %1539 = %1537.0;
  (%1538, %1539, meta[relay.Constant][49] /* ty=Tensor[(150), float64] */, meta[relay.Constant][50] /* ty=Tensor[(880), int16] */)
}

def @main(%var_22762: Tensor[(8, 16, 7), bool]) -> (Tensor[(8, 16, 7), int32], Tensor[(3, 16, 896), bool]) {
  %1540 = @func_8200() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
  %1541 = %1540.1;
  %1542 = cast(%var_22762, dtype="int32") /* ty=Tensor[(8, 16, 7), int32] */;
  %1543 = shape_of(%1541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1544 = cast(%1541, dtype="int32") /* ty=Tensor[(8, 16, 7), int32] */;
  %1545 = dyn.reshape(%1542, %1543, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1546 = @func_19567() /* ty=Tensor[(3, 16, 896), float64] */;
  %1547 = cast(%1546, dtype="float64") /* ty=Tensor[(3, 16, 896), float64] */;
  %1548 = rsqrt(%1547) /* ty=Tensor[(3, 16, 896), float64] */;
  %1549 = cast(%1546, dtype="float64") /* ty=Tensor[(3, 16, 896), float64] */;
  %1550 = asin(%1549) /* ty=Tensor[(3, 16, 896), float64] */;
  %1551 = cast(%1550, dtype="float64") /* ty=Tensor[(3, 16, 896), float64] */;
  %1552 = atanh(%1551) /* ty=Tensor[(3, 16, 896), float64] */;
  %1553 = cast(%1552, dtype="float64") /* ty=Tensor[(3, 16, 896), float64] */;
  %1554 = shape_of(%1548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1555 = cast(%1548, dtype="float64") /* ty=Tensor[(3, 16, 896), float64] */;
  %1556 = dyn.reshape(%1553, %1554, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1557 = mod(%1555, %1556) /* ty=Tensor[(3, 16, 896), float64] */;
  %1558 = cast(%1548, dtype="bool") /* ty=Tensor[(3, 16, 896), bool] */;
  %1559 = shape_of(%1557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1560 = cast(%1557, dtype="bool") /* ty=Tensor[(3, 16, 896), bool] */;
  %1561 = dyn.reshape(%1558, %1559, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1562 = right_shift(%1544, %1545) /* ty=Tensor[(8, 16, 7), int32] */;
  %1563 = less(%1560, %1561) /* ty=Tensor[(3, 16, 896), bool] */;
  (%1562, %1563)
}

def @func_738() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1564 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  %1565 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1564, %1565)
}

def @func_5487() -> (Tensor[(12, 10, 15), float64],) {
  %1566 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1566,)
}

def @func_4222() -> (Tensor[(8, 16, 7), bool],) {
  %1569 = fn () -> (Tensor[(8, 16, 7), bool],) {
    %1567 = @func_2211() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(896), bool], Tensor[(8, 16, 7), bool]) */;
    %1568 = %1567.12;
    (%1568,)
  };
  %1569() /* ty=(Tensor[(8, 16, 7), bool],) */
}

def @func_3243() -> Tensor[(8, 16, 7), bool] {
  %1571 = fn () -> Tensor[(8, 16, 7), bool] {
    %1570 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
    %1570.0
  };
  %1571() /* ty=Tensor[(8, 16, 7), bool] */
}

def @func_6289() -> Tensor[(12, 10, 15), float64] {
  %1572 = @func_954() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(6, 14, 13), float32]) */;
  %1572.0
}

def @func_10822() -> Tensor[(3, 16, 1), float64] {
  %1573 = fn () -> Tensor[(3, 16, 1), float64] {
    @func_8228() /* ty=Tensor[(3, 16, 1), float64] */
  };
  %1573() /* ty=Tensor[(3, 16, 1), float64] */
}

def @func_15992() -> (Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1582 = fn () -> (Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1574 = @func_4146() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
    %1575 = @func_7242() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
    %1576 = @func_13112() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1577 = %1574.0;
    %1578 = @func_7204() /* ty=Tensor[(12, 10, 15), float64] */;
    %1579 = %1575.2;
    %1580 = @func_5101() /* ty=Tensor[(12, 10, 15), float64] */;
    %1581 = %1576.0;
    (%1577, %1578, %1579, %1580, %1581)
  };
  %1582() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_9785() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1583 = @func_7585() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1584 = @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */;
  %1585 = %1583.0;
  %1586 = %1584.0;
  (%1585, %1586)
}

def @func_3350() -> Tensor[(12, 10, 15), float64] {
  %1587 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1587.0
}

def @func_10994(%var_10992: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) {
  @func_10991(%var_10992) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) */
}

def @func_13490() -> (Tensor[(12, 10, 15), float64],) {
  %1588 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1589 = %1588.0;
  (%1589,)
}

def @func_20063() -> Tensor[(12, 10, 15), float64] {
  %1590 = @func_11087() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1590.0
}

def @func_2767() -> (Tensor[(12, 10, 15), float64],) {
  @func_2765() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_22580() -> Tensor[(12, 10, 15), float64] {
  @func_22578() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_13512() -> (Tensor[(12, 10, 15), float64],) {
  %1591 = @func_4503() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1592 = %1591.0;
  (%1592,)
}

def @func_1101(%var_1077: Tensor[(150), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  %1593 = cast(%var_1077, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1594 = reshape(%1593, newshape=[1, 15, 10]) /* ty=Tensor[(1, 15, 10), float64] */;
  %1595 = @func_768(%1594) /* ty=(Tensor[(1, 15, 10), float64],) */;
  %1596 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1597 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  %1598 = @func_861() /* ty=Tensor[(8, 16, 7), bool] */;
  %1599 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  %1600 = @func_861() /* ty=Tensor[(8, 16, 7), bool] */;
  %1601 = %1595.0;
  %1602 = %1596.1;
  (%1597, %1598, %1599, %1600, %1601, %var_1077, %1602)
}

def @func_10294() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1607 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1603 = @func_7767() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1604 = @func_9733() /* ty=Tensor[(12, 10, 15), float64] */;
    %1605 = %1603.1;
    %1606 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1604, %1605, %1606)
  };
  %1607() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_11708() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_11706() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_3492(%var_3462: Tensor[(6, 3, 1), float32], %var_3463: Tensor[(6, 3, 16), float32]) -> (Tensor[(6, 3, 16), int16], Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) {
  %1608 = cast(%var_3462, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
  %1609 = cast(%var_3463, dtype="float32") /* ty=Tensor[(6, 3, 16), float32] */;
  %1610 = mod(%1608, %1609) /* ty=Tensor[(6, 3, 16), float32] */;
  %1611 = cast(%1610, dtype="int16") /* ty=Tensor[(6, 3, 16), int16] */;
  %1612 = shape_of(%var_3463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1613 = cast(%var_3463, dtype="int16") /* ty=Tensor[(6, 3, 16), int16] */;
  %1614 = dyn.reshape(%1611, %1612, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1615 = @func_1140() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1616 = left_shift(%1613, %1614) /* ty=Tensor[(6, 3, 16), int16] */;
  %1617 = @func_2313() /* ty=Tensor[(12, 10, 15), int64] */;
  %1618 = %1615.1;
  (%1616, %1617, %1618)
}

def @func_3637(%var_3636: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) {
  %1626 = fn (%var_3606: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) {
    %1619 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1620 = cast(%var_3606, dtype="bool") /* ty=Tensor[(896), bool] */;
    %1621 = reshape(%1620, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %1622 = @func_3290(%1621) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(35), float32], Tensor[(896), bool]) */;
    %1623 = %1619.0;
    %1624 = %1622.3;
    %1625 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1623, %1624, %var_3606, %1625)
  };
  %1626(%var_3636) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */
}

def @func_12562() -> Tensor[(12, 10, 15), float64] {
  @func_12560() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_5151() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1631 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1627 = @func_372() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1628 = @func_1480() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1629 = %1627.1;
    %1630 = %1628.0;
    (%1629, %1630)
  };
  %1631() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_19301(%var_19260: Tensor[(2, 1, 7), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(2, ?, 7), uint32]) {
  %1632 = @func_11034() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64]) */;
  %1633 = cast(%var_19260, dtype="float64") /* ty=Tensor[(2, 1, 7), float64] */;
  %1634 = acos(%1633) /* ty=Tensor[(2, 1, 7), float64] */;
  %1635 = cast(%var_19260, dtype="uint32") /* ty=Tensor[(2, 1, 7), uint32] */;
  %1636 = shape_of(%1634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1637 = cast(%1634, dtype="uint32") /* ty=Tensor[(2, 1, 7), uint32] */;
  %1638 = dyn.reshape(%1635, %1636, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1639 = %1632.1;
  %1640 = maximum(%1637, %1638) /* ty=Tensor[(2, ?, 7), uint32] */;
  (%1639, %1640)
}

def @func_9699() -> Tensor[(12, 10, 15), float64] {
  @func_9697() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_15347(%var_15314: Tensor[(432), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(432), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1641 = @func_4309() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1642 = cast(meta[relay.Constant][51] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %1643 = cast(%var_15314, dtype="float64") /* ty=Tensor[(432), float64] */;
  %1644 = reshape(%1642, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1645 = reshape(%1643, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), float64] */;
  %1646 = @func_8407(%1644, %1645) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(9, 6, 11), float32], Tensor[(594), float32], Tensor[(896), bool], Tensor[(896), bool], Tensor[(150), float64], Tensor[(6, 6, 12), float64], Tensor[(16, 10, 10), int8], Tensor[(1600), int8]) */;
  %1647 = @func_8294() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1648 = @func_12670() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1649 = %1641.0;
  %1650 = %1646.1;
  %1651 = %1647.1;
  %1652 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
  %1653 = %1648.0;
  (%1649, %1650, meta[relay.Constant][51] /* ty=Tensor[(896), bool] */, %var_15314, %1651, %1652, %1653)
}

def @func_11686(%var_11685: Tensor[(5, 30), float64]) -> (Tensor[(5, 30), float64], Tensor[(12, 10, 15), float64]) {
  %1665 = fn (%var_11672: Tensor[(5, 30), float64]) -> (Tensor[(5, 30), float64], Tensor[(12, 10, 15), float64]) {
    %1654 = @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */;
    %1655 = %1654.3;
    %1656 = cast(%var_11672, dtype="int16") /* ty=Tensor[(5, 30), int16] */;
    %1657 = shape_of(%1655, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1658 = cast(%1655, dtype="int16") /* ty=Tensor[(5, 30), int16] */;
    %1659 = dyn.reshape(%1656, %1657, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %1660 = subtract(%1658, %1659) /* ty=Tensor[(5, 30), int16] */;
    %1661 = cast(%1660, dtype="float64") /* ty=Tensor[(5, 30), float64] */;
    %1662 = @func_10500() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1663 = log2(%1661) /* ty=Tensor[(5, 30), float64] */;
    %1664 = %1662.1;
    (%1663, %1664)
  };
  %1665(%var_11685) /* ty=(Tensor[(5, 30), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_11706() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1666 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1667 = %1666.2;
  %1668 = @func_4258() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1667, %1668)
}

def @func_14748() -> (Tensor[(12, 10, 15), float32],) {
  @func_14746() /* ty=(Tensor[(12, 10, 15), float32],) */
}

def @func_1381() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_1379() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_4732() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) {
  @func_4730() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(5, 30), float64]) */
}

def @func_42() -> Tensor[(12, 10, 15), float64] {
  %1669 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 10, 15), float64] */, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
  sin(%1669) /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_13260() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_13258() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_20499(%var_20440: Tensor[(6, 3, 7), float64], %var_20447: Tensor[(896, 1), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(6, 3, 7), float64], Tensor[(12, 10, 15), float64]) {
  %1670 = cast(%var_20447, dtype="bool") /* ty=Tensor[(896, 1), bool] */;
  %1671 = reshape(%1670, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %1672 = @func_2726(%1671) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) */;
  %1673 = cast(%var_20440, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  %1674 = sigmoid(%1673) /* ty=Tensor[(6, 3, 7), float64] */;
  %1675 = cast(%1674, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  %1676 = %1672.1;
  %1677 = log10(%1675) /* ty=Tensor[(6, 3, 7), float64] */;
  %1678 = @func_5028() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1676, %var_20447, %1677, %1678)
}

def @func_6046(%var_6044: Tensor[(9, 6, 11), float32]) -> Tensor[(9, 6, 11), float32] {
  @func_6043(%var_6044) /* ty=Tensor[(9, 6, 11), float32] */
}

def @func_12884() -> Tensor[(12, 10, 15), float64] {
  @func_12882() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_18066() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_18064() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_6771() -> (Tensor[(150), float64],) {
  %1680 = fn () -> (Tensor[(150), float64],) {
    %1679 = @func_4275() /* ty=Tensor[(150), float64] */;
    (%1679,)
  };
  %1680() /* ty=(Tensor[(150), float64],) */
}

def @func_19839() -> Tensor[(12, 10, 15), float64] {
  %1682 = fn () -> Tensor[(12, 10, 15), float64] {
    %1681 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1681.0
  };
  %1682() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_21411() -> Tensor[(12, 10, 15), float64] {
  @func_19726() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_19819() -> (Tensor[(8, 16, 7), bool],) {
  %1683 = @func_3242() /* ty=Tensor[(8, 16, 7), bool] */;
  (%1683,)
}

def @func_8082() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1694 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1684 = @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1685 = @func_2211() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), uint64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(896), bool], Tensor[(8, 16, 7), bool]) */;
    %1686 = @func_7152() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1687 = @func_274() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1688 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1689 = %1684.0;
    %1690 = %1685.8;
    %1691 = %1686.0;
    %1692 = %1687.0;
    %1693 = %1688.0;
    (%1689, %1690, %1691, %1692, %1693)
  };
  %1694() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_13894() -> Tensor[(12, 10, 15), float64] {
  %1696 = fn () -> Tensor[(12, 10, 15), float64] {
    %1695 = @func_9331() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64]) */;
    %1695.0
  };
  %1696() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_6995() -> Tensor[(8, 16, 7), bool] {
  %1697 = @func_4221() /* ty=(Tensor[(8, 16, 7), bool],) */;
  %1697.0
}

def @func_18575() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32]) {
  @func_18573() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), float32]) */
}

def @func_1104(%var_1102: Tensor[(150), float64]) -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  @func_1101(%var_1102) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_12062() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1698 = @func_2765() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1699 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %1700 = %1698.0;
  (%1699, %1700)
}

def @func_14927() -> (Tensor[(12, 10, 15), float64],) {
  %1701 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1702 = %1701.0;
  (%1702,)
}

def @func_17551() -> (Tensor[(12, 10, 15), float64],) {
  @func_17549() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_1992() -> (Tensor[(12, 10, 15), float64],) {
  %1703 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1704 = %1703.0;
  (%1704,)
}

def @func_655() -> Tensor[(12, 10, 15), float64] {
  %1705 = fn () -> Tensor[(12, 10, 15), float64] {
    @func_566() /* ty=Tensor[(12, 10, 15), float64] */
  };
  %1705() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_19050() -> (Tensor[(12, 10, 15), float64],) {
  %1708 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %1706 = @func_13116() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1707 = %1706.0;
    (%1707,)
  };
  %1708() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_296() -> Tensor[(12, 10, 15), float64] {
  @func_294() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_1182() -> Tensor[(12, 10, 15), float64] {
  %1709 = @func_448() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1709.1
}

def @func_5523() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(150), float64]) {
  %1710 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1711 = @func_852() /* ty=(Tensor[(12, 10, 15), float32],) */;
  %1712 = cast(meta[relay.Constant][53] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1713 = reshape(%1712, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %1714 = @func_3790(%1713) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64]) */;
  %1715 = %1710.1;
  %1716 = @func_5404() /* ty=Tensor[(12, 10, 15), float64] */;
  %1717 = %1711.0;
  %1718 = @func_5323() /* ty=Tensor[(8, 16, 7), bool] */;
  %1719 = %1714.0;
  (%1715, %1716, %1717, %1718, %1719, meta[relay.Constant][53] /* ty=Tensor[(150), float64] */)
}

def @func_12391() -> Tensor[(12, 10, 15), float64] {
  @func_12389() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_12438() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1720 = @func_1992() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1721 = @func_12122() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 880), int16], Tensor[(880), int16], Tensor[(12, 10, 15), float64]) */;
  %1722 = %1720.0;
  %1723 = %1721.0;
  (%1722, %1723)
}

def @func_7347() -> Tensor[(12, 10, 15), float64] {
  %1724 = @func_274() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1724.1
}

def @func_2251() -> Tensor[(12, 10, 15), float64] {
  @func_294() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_6933() -> (Tensor[(12, 10, 15), float64],) {
  %1725 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1725,)
}

def @func_10769() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) {
  @func_10767() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_15476() -> (Tensor[(12, 10, 15), float64],) {
  @func_15474() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_861() -> Tensor[(8, 16, 7), bool] {
  %1726 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
  %1726.0
}

def @func_294() -> Tensor[(12, 10, 15), float64] {
  %1727 = @func_274() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1727.0
}

def @func_6199() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1731 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1728 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1729 = @func_654() /* ty=Tensor[(12, 10, 15), float64] */;
    %1730 = %1728.0;
    (%1729, %1730)
  };
  %1731() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_19529() -> Tensor[(12, 10, 15), float64] {
  %1733 = fn () -> Tensor[(12, 10, 15), float64] {
    %1732 = @func_18756() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool]) */;
    %1732.0
  };
  %1733() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_22505(%var_22503: Tensor[(11, 11, 11), float32], %var_22504: Tensor[(11, 11, 11), float32]) -> (Tensor[(11, 11, 11), bool],) {
  %1741 = fn (%var_22490: Tensor[(11, 11, 11), float32], %var_22493: Tensor[(11, 11, 11), float32]) -> (Tensor[(11, 11, 11), bool],) {
    %1734 = cast(%var_22490, dtype="float32") /* ty=Tensor[(11, 11, 11), float32] */;
    %1735 = acos(%1734) /* ty=Tensor[(11, 11, 11), float32] */;
    %1736 = cast(%var_22493, dtype="bool") /* ty=Tensor[(11, 11, 11), bool] */;
    %1737 = shape_of(%1735, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1738 = cast(%1735, dtype="bool") /* ty=Tensor[(11, 11, 11), bool] */;
    %1739 = dyn.reshape(%1736, %1737, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1740 = logical_or(%1738, %1739) /* ty=Tensor[(11, 11, 11), bool] */;
    (%1740,)
  };
  %1741(%var_22503, %var_22504) /* ty=(Tensor[(11, 11, 11), bool],) */
}

def @func_16284(%var_16283: Tensor[(6, 6, 12), float64]) -> (Tensor[(6, 6, 12), int16],) {
  %1749 = fn (%var_16274: Tensor[(6, 6, 12), float64]) -> (Tensor[(6, 6, 12), int16],) {
    %1742 = @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */;
    %1743 = %1742.0;
    %1744 = cast(%var_16274, dtype="int16") /* ty=Tensor[(6, 6, 12), int16] */;
    %1745 = shape_of(%1743, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1746 = cast(%1743, dtype="int16") /* ty=Tensor[(6, 6, 12), int16] */;
    %1747 = dyn.reshape(%1744, %1745, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1748 = left_shift(%1746, %1747) /* ty=Tensor[(6, 6, 12), int16] */;
    (%1748,)
  };
  %1749(%var_16283) /* ty=(Tensor[(6, 6, 12), int16],) */
}

def @func_19250(%var_19249: Tensor[(56, 16), bool]) -> Tensor[(56, 16), bool] {
  %1756 = fn (%var_19241: Tensor[(56, 16), bool]) -> Tensor[(56, 16), bool] {
    %1750 = @func_5373() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(56, 16), bool]) */;
    %1751 = %1750.2;
    %1752 = cast(%var_19241, dtype="bool") /* ty=Tensor[(56, 16), bool] */;
    %1753 = shape_of(%1751, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1754 = cast(%1751, dtype="bool") /* ty=Tensor[(56, 16), bool] */;
    %1755 = dyn.reshape(%1752, %1753, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    logical_and(%1754, %1755) /* ty=Tensor[(56, 16), bool] */
  };
  %1756(%var_19249) /* ty=Tensor[(56, 16), bool] */
}

def @func_2726(%var_2679: Tensor[(896), bool]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896), bool]) {
  %1757 = @func_1379() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1758 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1759 = cast(%var_2679, dtype="bool") /* ty=Tensor[(896), bool] */;
  %1760 = reshape(%1759, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
  %1761 = @func_513(%1760) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(8, 16, 7), uint32]) */;
  %1762 = %1757.0;
  %1763 = %1758.0;
  %1764 = %1761.0;
  (%1762, %1763, %1764, %var_2679)
}

def @func_13626() -> (Tensor[(12, 10, 15), float64],) {
  %1767 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %1765 = @func_9224() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1766 = %1765.0;
    (%1766,)
  };
  %1767() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_14272() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(18), float32], Tensor[(288), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(56, 16), bool], Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64]) {
  %1768 = @func_7979() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %1769 = cast(meta[relay.Constant][54] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1770 = cast(meta[relay.Constant][55] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1771 = reshape(%1769, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %1772 = reshape(%1770, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), float32] */;
  %1773 = @func_3492(%1771, %1772) /* ty=(Tensor[(6, 3, 16), int16], Tensor[(12, 10, 15), int64], Tensor[(12, 10, 15), float64]) */;
  %1774 = @func_10500() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1775 = cast(meta[relay.Constant][56] /* ty=Tensor[(56, 16), bool] */, dtype="bool") /* ty=Tensor[(56, 16), bool] */;
  %1776 = reshape(%1775, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), bool] */;
  %1777 = @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %1778 = @func_5636() /* ty=Tensor[(12, 10, 15), float64] */;
  %1779 = %1768.1;
  %1780 = %1773.2;
  %1781 = @func_1182() /* ty=Tensor[(12, 10, 15), float64] */;
  %1782 = %1774.1;
  %1783 = @func_10869(%1776) /* ty=Tensor[(8, 16, 7), bool] */;
  %1784 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
  %1785 = %1777.0;
  (%1778, %1779, %1780, meta[relay.Constant][54] /* ty=Tensor[(18), float32] */, meta[relay.Constant][55] /* ty=Tensor[(288), float32] */, %1781, %1782, %1783, meta[relay.Constant][56] /* ty=Tensor[(56, 16), bool] */, %1784, %1785)
}

def @func_10500() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1786 = @func_6147() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1787 = @func_906() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1788 = @func_10356() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
  %1789 = @func_738() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1790 = @func_42() /* ty=Tensor[(12, 10, 15), float64] */;
  %1791 = %1786.0;
  %1792 = %1787.0;
  %1793 = %1788.3;
  %1794 = %1789.0;
  %1795 = @func_5636() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1790, %1791, %1792, %1793, %1794, %1795)
}

def @func_1686() -> (Tensor[(12, 10, 15), float64],) {
  %1797 = fn () -> (Tensor[(12, 10, 15), float64],) {
    %1796 = @func_627() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1796,)
  };
  %1797() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_7105() -> Tensor[(12, 10, 15), float64] {
  %1799 = fn () -> Tensor[(12, 10, 15), float64] {
    %1798 = @func_3913() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), uint64], Tensor[(25, 6), float64]) */;
    %1798.1
  };
  %1799() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_12900() -> (Tensor[(150), float64],) {
  %1801 = fn () -> (Tensor[(150), float64],) {
    %1800 = @func_4275() /* ty=Tensor[(150), float64] */;
    (%1800,)
  };
  %1801() /* ty=(Tensor[(150), float64],) */
}

def @func_4700() -> (Tensor[(12, 10, 15), float64],) {
  @func_4698() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_12719() -> Tensor[(12, 10, 15), float64] {
  @func_12717() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_15834() -> (Tensor[(6, 6, 12), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1802 = @func_2944() /* ty=(Tensor[(6, 6, 12), float64],) */;
  %1803 = @func_12529() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1804 = @func_11175() /* ty=(Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1805 = @func_7913() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1806 = @func_7979() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32]) */;
  %1807 = %1802.0;
  %1808 = %1803.0;
  %1809 = %1804.2;
  %1810 = %1805.0;
  %1811 = %1806.0;
  (%1807, %1808, %1809, %1810, %1811)
}

def @func_12354() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_12352() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_5596() -> (Tensor[(12, 10, 15), float64],) {
  @func_5594() /* ty=(Tensor[(12, 10, 15), float64],) */
}

def @func_5405() -> Tensor[(12, 10, 15), float64] {
  %1813 = fn () -> Tensor[(12, 10, 15), float64] {
    %1812 = @func_815() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1812.0
  };
  %1813() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_14111() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1814 = @func_7482() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1815 = @func_7544() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1816 = @func_86() /* ty=Tensor[(12, 10, 15), float64] */;
  %1817 = %1814.0;
  %1818 = %1815.1;
  (%1816, %1817, %1818)
}

def @func_17998() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
  %1825 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
    %1819 = @func_6920() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1820 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
    %1821 = @func_167() /* ty=(Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64]) */;
    %1822 = %1819.0;
    %1823 = %1820.1;
    %1824 = %1821.0;
    (%1822, %1823, %1824)
  };
  %1825() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */
}

def @func_22400() -> (Tensor[(12, 10, 15), float64],) {
  %1826 = @func_20009() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1827 = %1826.0;
  (%1827,)
}

def @func_10599(%var_10598: Tensor[(3, 8, 14), float64]) -> Tensor[(3, 8, 14), float64] {
  %1829 = fn (%var_10585: Tensor[(3, 8, 14), float64]) -> Tensor[(3, 8, 14), float64] {
    %1828 = cast(%var_10585, dtype="float64") /* ty=Tensor[(3, 8, 14), float64] */;
    tan(%1828) /* ty=Tensor[(3, 8, 14), float64] */
  };
  %1829(%var_10598) /* ty=Tensor[(3, 8, 14), float64] */
}

def @func_18727() -> (Tensor[(288), float32], Tensor[(25, 6), float64], Tensor[(8, 16, 7), bool]) {
  @func_18725() /* ty=(Tensor[(288), float32], Tensor[(25, 6), float64], Tensor[(8, 16, 7), bool]) */
}

def @func_19328() -> Tensor[(6, 6, 12), float64] {
  @func_19326() /* ty=Tensor[(6, 6, 12), float64] */
}

def @func_14723() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(455, 110), float64]) {
  %1847 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(455, 110), float64]) {
    %1830 = @func_11175() /* ty=(Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1831 = cast(meta[relay.Constant][57] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
    %1832 = cast(meta[relay.Constant][58] /* ty=Tensor[(896, 1), bool] */, dtype="bool") /* ty=Tensor[(896, 1), bool] */;
    %1833 = %1830.1;
    %1834 = cast(%1833, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
    %1835 = cast(meta[relay.Constant][59] /* ty=Tensor[(455, 1), float32] */, dtype="float32") /* ty=Tensor[(455, 1), float32] */;
    %1836 = reshape(%1831, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), float64] */;
    %1837 = reshape(%1832, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %1838 = reshape(%1834, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
    %1839 = reshape(%1835, newshape=[13, 35]) /* ty=Tensor[(13, 35), float32] */;
    %1840 = @func_3092(%1836, %1837, %1838, %1839) /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(12, 10, 15), float64], Tensor[(13, 35), int64]) */;
    %1841 = cast(meta[relay.Constant][59] /* ty=Tensor[(455, 1), float32] */, dtype="uint32") /* ty=Tensor[(455, 1), uint32] */;
    %1842 = cast(meta[relay.Constant][57] /* ty=Tensor[(110), float64] */, dtype="uint32") /* ty=Tensor[(110), uint32] */;
    %1843 = bitwise_xor(%1841, %1842) /* ty=Tensor[(455, 110), uint32] */;
    %1844 = cast(%1843, dtype="float64") /* ty=Tensor[(455, 110), float64] */;
    %1845 = %1840.1;
    %1846 = acos(%1844) /* ty=Tensor[(455, 110), float64] */;
    (%1833, %1845, meta[relay.Constant][58] /* ty=Tensor[(896, 1), bool] */, %1846)
  };
  %1847() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(896, 1), bool], Tensor[(455, 110), float64]) */
}

def @func_11175() -> (Tensor[(3, 16, 1), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1848 = @func_6453() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
  %1849 = @func_10356() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(1, 15, 10), float64], Tensor[(150), float64], Tensor[(12, 10, 15), float64]) */;
  %1850 = @func_5458() /* ty=Tensor[(3, 16, 1), float64] */;
  %1851 = %1848.2;
  %1852 = %1849.3;
  (%1850, %1851, %1852)
}

def @func_87() -> Tensor[(12, 10, 15), float64] {
  %1853 = fn () -> Tensor[(12, 10, 15), float64] {
    @func_42() /* ty=Tensor[(12, 10, 15), float64] */
  };
  %1853() /* ty=Tensor[(12, 10, 15), float64] */
}

def @func_19202(%var_19201: Tensor[(560), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64], Tensor[(?, 896), int64], Tensor[(16, 7, 5), bool], Tensor[(560), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1872 = fn (%var_19150: Tensor[(560), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64], Tensor[(?, 896), int64], Tensor[(16, 7, 5), bool], Tensor[(560), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1854 = @func_15195() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(3, 16, 896), float64], Tensor[(150), float64], Tensor[(?, 896), int64]) */;
    %1855 = cast(%var_19150, dtype="float32") /* ty=Tensor[(560), float32] */;
    %1856 = cast(%var_19150, dtype="float32") /* ty=Tensor[(560), float32] */;
    %1857 = reshape(%1855, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), float32] */;
    %1858 = reshape(%1856, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), float32] */;
    %1859 = @func_18888(%1857, %1858) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(16, 7, 5), bool]) */;
    %1860 = @func_4190() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1861 = @func_11666() /* ty=(Tensor[(25, 6), float64], Tensor[(8, 16, 7), bool]) */;
    %1862 = @func_6531() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1863 = @func_5404() /* ty=Tensor[(12, 10, 15), float64] */;
    %1864 = @func_15373() /* ty=Tensor[(12, 10, 15), int64] */;
    %1865 = %1854.3;
    %1866 = %1859.1;
    %1867 = @func_7022() /* ty=Tensor[(12, 10, 15), float64] */;
    %1868 = %1860.2;
    %1869 = %1861.0;
    %1870 = @func_2823() /* ty=Tensor[(12, 10, 15), float64] */;
    %1871 = %1862.0;
    (%1863, %1864, %1865, %1866, %var_19150, %1867, %1868, %1869, %1870, %1871)
  };
  %1872(%var_19201) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), int64], Tensor[(?, 896), int64], Tensor[(16, 7, 5), bool], Tensor[(560), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(25, 6), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_17936() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1876 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1873 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1874 = @func_12389() /* ty=Tensor[(12, 10, 15), float64] */;
    %1875 = %1873.0;
    (%1874, %1875)
  };
  %1876() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_14840() -> (Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64]) {
  %1877 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1878 = %1877.0;
  %1879 = @func_10905() /* ty=Tensor[(6, 6, 12), float64] */;
  (%1878, %1879)
}

def @func_18019() -> (Tensor[(8, 16, 7), bool],) {
  %1882 = fn () -> (Tensor[(8, 16, 7), bool],) {
    %1880 = @func_13202() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
    %1881 = %1880.1;
    (%1881,)
  };
  %1882() /* ty=(Tensor[(8, 16, 7), bool],) */
}

def @func_11120() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1886 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1883 = @func_1926() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1884 = %1883.0;
    %1885 = @func_1182() /* ty=Tensor[(12, 10, 15), float64] */;
    (%1884, %1885)
  };
  %1886() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_18997() -> (Tensor[(12, 10, 15), float32],) {
  @func_18995() /* ty=(Tensor[(12, 10, 15), float32],) */
}

def @func_18725() -> (Tensor[(288), float32], Tensor[(25, 6), float64], Tensor[(8, 16, 7), bool]) {
  %1887 = @func_14272() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(18), float32], Tensor[(288), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool], Tensor[(56, 16), bool], Tensor[(12, 10, 15), float64], Tensor[(6, 6, 12), float64]) */;
  %1888 = @func_18080() /* ty=(Tensor[(8, 16, 7), bool],) */;
  %1889 = %1887.4;
  %1890 = @func_2920() /* ty=Tensor[(25, 6), float64] */;
  %1891 = %1888.0;
  (%1889, %1890, %1891)
}

def @func_3560() -> (Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  @func_3558() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

def @func_5525() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(150), float64]) {
  @func_5523() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float32], Tensor[(8, 16, 7), bool], Tensor[(12, 10, 15), float64], Tensor[(150), float64]) */
}

def @func_4666() -> (Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(110), float64], Tensor[(1, 896), bool], Tensor[(455), float32], Tensor[(12, 10, 15), float64]) {
  %1906 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(110), float64], Tensor[(1, 896), bool], Tensor[(455), float32], Tensor[(12, 10, 15), float64]) {
    %1892 = @func_2347() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1893 = cast(meta[relay.Constant][60] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
    %1894 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 896), bool] */, dtype="bool") /* ty=Tensor[(1, 896), bool] */;
    %1895 = %1892.0;
    %1896 = cast(%1895, dtype="float64") /* ty=Tensor[(12, 10, 15), float64] */;
    %1897 = cast(meta[relay.Constant][62] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
    %1898 = reshape(%1893, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), float64] */;
    %1899 = reshape(%1894, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %1900 = reshape(%1896, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float64] */;
    %1901 = reshape(%1897, newshape=[13, 35]) /* ty=Tensor[(13, 35), float32] */;
    %1902 = @func_3092(%1898, %1899, %1900, %1901) /* ty=(Tensor[(896), bool], Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(12, 10, 15), float64], Tensor[(13, 35), int64]) */;
    %1903 = @func_3697() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1904 = %1902.2;
    %1905 = %1903.3;
    (%1895, %1904, meta[relay.Constant][60] /* ty=Tensor[(110), float64] */, meta[relay.Constant][61] /* ty=Tensor[(1, 896), bool] */, meta[relay.Constant][62] /* ty=Tensor[(455), float32] */, %1905)
  };
  %1906() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(5, 2, 11), float32], Tensor[(110), float64], Tensor[(1, 896), bool], Tensor[(455), float32], Tensor[(12, 10, 15), float64]) */
}

def @func_5340() -> (Tensor[(12, 10, 15), float64],) {
  %1907 = @func_2646() /* ty=Tensor[(12, 10, 15), float64] */;
  (%1907,)
}

def @func_13203() -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
  %1912 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) {
    %1908 = @func_2229() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1909 = @func_11292() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */;
    %1910 = %1908.0;
    %1911 = %1909.1;
    (%1910, %1911)
  };
  %1912() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(8, 16, 7), bool]) */
}

def @func_2777() -> Tensor[(12, 10, 15), float64] {
  %1913 = @func_1395() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1913.0
}

def @func_14358(%var_14351: Tensor[(72, 4), float32]) -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(330, 1), float64], Tensor[(72, 4), float32]) {
  %1914 = @func_7913() /* ty=(Tensor[(12, 10, 15), float64],) */;
  %1915 = cast(meta[relay.Constant][63] /* ty=Tensor[(330, 1), float64] */, dtype="float64") /* ty=Tensor[(330, 1), float64] */;
  %1916 = cast(meta[relay.Constant][63] /* ty=Tensor[(330, 1), float64] */, dtype="float64") /* ty=Tensor[(330, 1), float64] */;
  %1917 = cast(%var_14351, dtype="float32") /* ty=Tensor[(72, 4), float32] */;
  %1918 = reshape(%1915, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), float64] */;
  %1919 = reshape(%1916, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), float64] */;
  %1920 = reshape(%1917, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1921 = @func_9760(%1918, %1919, %1920) /* ty=(Tensor[(11, 3, 10), float64], Tensor[(6, 3, 16), int16], Tensor[(18), float32], Tensor[(288), float32], Tensor[(12, 10, 15), float64]) */;
  %1922 = @func_9733() /* ty=Tensor[(12, 10, 15), float64] */;
  %1923 = @func_3323() /* ty=Tensor[(12, 10, 15), float64] */;
  %1924 = %1914.0;
  %1925 = %1921.4;
  (%1922, %1923, %1924, %1925, meta[relay.Constant][63] /* ty=Tensor[(330, 1), float64] */, %var_14351)
}

def @func_5374() -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(56, 16), bool]) {
  %1932 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(56, 16), bool]) {
    %1926 = @func_3558() /* ty=(Tensor[(12, 10, 15), float32], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1927 = cast(meta[relay.Constant][64] /* ty=Tensor[(56, 16), bool] */, dtype="bool") /* ty=Tensor[(56, 16), bool] */;
    %1928 = reshape(%1927, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %1929 = @func_3635(%1928) /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(896), bool], Tensor[(12, 10, 15), float64]) */;
    %1930 = %1926.1;
    %1931 = %1929.1;
    (%1930, %1931, meta[relay.Constant][64] /* ty=Tensor[(56, 16), bool] */)
  };
  %1932() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(896), bool], Tensor[(56, 16), bool]) */
}

def @func_9175() -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
  %1939 = fn () -> (Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) {
    %1933 = @func_5340() /* ty=(Tensor[(12, 10, 15), float64],) */;
    %1934 = @func_6920() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */;
    %1935 = @func_3350() /* ty=Tensor[(12, 10, 15), float64] */;
    %1936 = %1933.0;
    %1937 = @func_566() /* ty=Tensor[(12, 10, 15), float64] */;
    %1938 = %1934.1;
    (%1935, %1936, %1937, %1938)
  };
  %1939() /* ty=(Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64], Tensor[(12, 10, 15), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen953/build/output.py", line 7823, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:59:08] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


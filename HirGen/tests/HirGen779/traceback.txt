==========mod==========
#[version = "0.0.5"]
def @func_6980() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) {
  %0 = @func_3587() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %1 = @func_2446() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %2 = %0.0;
  %3 = %1.0;
  (%2, %3)
}

def @func_9056(%var_9049: uint64, %var_9050: Tensor[(11, 7, 14), uint64]) -> (Tensor[(11, 7, 14), bool],) {
  %4 = cast(%var_9049, dtype="bool") /* ty=bool */;
  %5 = cast(%var_9050, dtype="bool") /* ty=Tensor[(11, 7, 14), bool] */;
  %6 = not_equal(%4, %5) /* ty=Tensor[(11, 7, 14), bool] */;
  (%6,)
}

def @func_8659() -> (Tensor[(8, 8, 6), float64],) {
  %7 = @func_7037() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %8 = %7.1;
  (%8,)
}

def @func_8519(%var_8517: Tensor[(2688), float32]) -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32]) {
  %9 = @func_5648() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %10 = cast(%var_8517, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %11 = reshape(%10, newshape=[16, 12, 14]) /* ty=Tensor[(16, 12, 14), float32] */;
  %12 = %9.1;
  %13 = @func_1721() /* ty=Tensor[(8, 8, 6), float64] */;
  %14 = @func_3696(%11) /* ty=Tensor[(16, 12, 14), float32] */;
  (%12, %13, %14, %var_8517)
}

def @func_12890() -> Tensor[(16, 14, ?), bool] {
  %15 = @func_12429() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */;
  %15.1
}

def @func_3222(%var_3195: Tensor[(16, 14, 9), float64]) -> Tensor[(16, 14, 9), float32] {
  %16 = @func_2123() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %17 = %16.0;
  %18 = cast(%17, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  %19 = cast(%var_3195, dtype="float32") /* ty=Tensor[(16, 14, 9), float32] */;
  add(%18, %19) /* ty=Tensor[(16, 14, 9), float32] */
}

def @func_16071() -> (Tensor[(8, 8, 6), bool],) {
  %20 = @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */;
  %21 = %20.1;
  (%21,)
}

def @func_8552() -> (Tensor[(8, 8, 6), int64],) {
  %22 = @func_7240() /* ty=Tensor[(8, 8, 6), int64] */;
  (%22,)
}

def @func_4099() -> Tensor[(8, 8, 6), float64] {
  %23 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %23.0
}

def @func_6276() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) {
  %24 = @func_5390() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %25 = @func_2067() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %26 = %24.1;
  %27 = %25.0;
  (%26, %27)
}

def @func_15107() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %28 = @func_11860() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %29 = @func_8078() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
  %30 = %28.2;
  %31 = %29.2;
  (%30, %31)
}

def @func_10526() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %32 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %33 = @func_9090() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %34 = %32.1;
  %35 = %33.1;
  (%34, %35)
}

def @func_5064() -> (Tensor[(8, 8, 6), float64],) {
  %36 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %37 = %36.0;
  (%37,)
}

def @func_6140() -> Tensor[(8, 8, 6), float64] {
  %38 = @func_3326() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %38.0
}

def @func_3991() -> Tensor[(8, 8, 6), float64] {
  %39 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %39.0
}

def @func_11017() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, 2016), uint8]) {
  %40 = @func_5402() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %41 = @func_4217() /* ty=(Tensor[(16, 14, 9), float32], Tensor[(16, 14, 2016), float32], Tensor[(16, 14, 2016), uint8]) */;
  %42 = %40.0;
  %43 = @func_4865() /* ty=Tensor[(16, 14, 1), float64] */;
  %44 = %41.2;
  (%42, %43, %44)
}

def @func_7573() -> (Tensor[(8, 8, 6), float64],) {
  %45 = @func_5064() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %46 = %45.0;
  (%46,)
}

def @func_15438() -> (Tensor[(8, 8, 6), float64],) {
  %47 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  (%47,)
}

def @func_16752() -> (Tensor[(8, 8, 6), float64],) {
  %48 = @func_13967() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) */;
  %49 = %48.1;
  (%49,)
}

def @func_6556(%var_6536: int16, %var_6537: Tensor[(13, 4, 2), int16]) -> (Tensor[(13, 4, 2), int16], Tensor[(8, 8, 6), int64]) {
  %50 = cast(%var_6536, dtype="int16") /* ty=int16 */;
  %51 = cast(%var_6537, dtype="int16") /* ty=Tensor[(13, 4, 2), int16] */;
  %52 = @func_4670() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %53 = bitwise_xor(%50, %51) /* ty=Tensor[(13, 4, 2), int16] */;
  %54 = %52.0;
  (%53, %54)
}

def @func_2446() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %55 = @func_2083() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %56 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %57 = %55.0;
  %58 = %56.1;
  %59 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  (%57, %58, %59)
}

def @func_8479() -> Tensor[(8, 8, 6), float64] {
  %60 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %60.0
}

def @func_10022() -> Tensor[(8, 8, 6), float64] {
  %61 = @func_8149() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %61.0
}

def @func_14670() -> (Tensor[(16, 14, 1), float64],) {
  %62 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %63 = %62.0;
  (%63,)
}

def @func_7907() -> (Tensor[(16, 14, 1), float64],) {
  %64 = @func_3023() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %65 = %64.0;
  (%65,)
}

def @func_15254() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32], Tensor[(8, 8, 6), int64]) {
  %66 = cast(meta[relay.Constant][0] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %67 = reshape(%66, newshape=[16, 12, 14]) /* ty=Tensor[(16, 12, 14), float32] */;
  %68 = @func_13788() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %69 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  %70 = @func_3696(%67) /* ty=Tensor[(16, 12, 14), float32] */;
  %71 = %68.0;
  (%69, %70, meta[relay.Constant][0] /* ty=Tensor[(2688), float32] */, %71)
}

def @func_4323() -> Tensor[(8, 8, 6), float64] {
  %72 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %72.0
}

def @func_4455() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64]) {
  %73 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %74 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %75 = @func_1972() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %76 = @func_2639() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %77 = %73.2;
  %78 = %74.0;
  %79 = @func_3747() /* ty=Tensor[(8, 8, 6), float64] */;
  %80 = %75.1;
  %81 = %76.2;
  %82 = @func_3371() /* ty=Tensor[(8, 8, 6), float64] */;
  (%77, %78, %79, %80, %81, %82)
}

def @func_1008() -> (Tensor[(16, 14, 1), float64],) {
  %83 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %84 = %83.0;
  (%84,)
}

def @func_16577() -> Tensor[(8, 8, 6), float64] {
  @func_14373() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_8528() -> Tensor[(8, 8, 6), int64] {
  %85 = @func_6980() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
  %85.0
}

def @func_247() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %86 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %87 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %88 = %86.0;
  %89 = %87.0;
  (%88, %89)
}

def @func_7751() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %90 = @func_5064() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %91 = @func_6980() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
  %92 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
  %93 = %90.0;
  %94 = %91.1;
  (%92, %93, %94)
}

def @func_12648() -> (Tensor[(16, 14, 1), float64],) {
  %95 = @func_8814() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %96 = %95.1;
  (%96,)
}

def @func_6945() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %97 = @func_2639() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %98 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %99 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %100 = %97.3;
  %101 = %98.0;
  %102 = %99.0;
  (%100, %101, %102)
}

def @func_1045() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) {
  %103 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  %104 = cast(%103, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
  %105 = reshape(%104, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float32] */;
  %106 = @func_900(%105) /* ty=Tensor[(8, 8, 6), int64] */;
  (%103, %106)
}

def @func_12465() -> (Tensor[(8, 8, 6), float64],) {
  %107 = @func_8158() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %108 = %107.1;
  (%108,)
}

def @func_13735() -> (Tensor[(16, 14, 1), float64],) {
  %109 = @func_13133() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %110 = %109.0;
  (%110,)
}

def @func_11922() -> (Tensor[(16, 14, ?), bool],) {
  %111 = @func_9951() /* ty=Tensor[(16, 14, ?), bool] */;
  (%111,)
}

def @func_17291() -> (Tensor[(8, 8, 6), float64],) {
  %112 = @func_1869() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %113 = %112.0;
  (%113,)
}

def @func_3139() -> (Tensor[(8, 8, 6), float64],) {
  %114 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  (%114,)
}

def @func_13381() -> (Tensor[(8, 8, 6), float64],) {
  %115 = @func_10128() /* ty=Tensor[(8, 8, 6), float64] */;
  (%115,)
}

def @func_2880() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %116 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %117 = @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */;
  %118 = %116.0;
  %119 = %117.0;
  (%118, %119)
}

def @func_4044(%var_4020: Tensor[(16, 14, 7), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 7), bool]) {
  %120 = @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */;
  %121 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %122 = %121.0;
  %123 = cast(%122, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %124 = cast(%var_4020, dtype="bool") /* ty=Tensor[(16, 14, 7), bool] */;
  %125 = %120.0;
  %126 = equal(%123, %124) /* ty=Tensor[(16, 14, 7), bool] */;
  (%125, %126)
}

def @func_6827() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) {
  %127 = @func_3032() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %128 = @func_6448() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %129 = %128.0;
  %130 = cast(%129, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  %131 = %127.0;
  %132 = log10(%130) /* ty=Tensor[(16, 14, 1), float32] */;
  (%131, %132)
}

def @func_7292() -> Tensor[(8, 8, 6), float64] {
  %133 = @func_2083() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %133.0
}

def @func_7444() -> Tensor[(8, 8, 6), float64] {
  @func_837() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_6009() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) {
  %134 = @func_5039() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %135 = %134.1;
  %136 = @func_4847() /* ty=Tensor[(8, 8, 6), float32] */;
  (%135, %136)
}

def @func_3059() -> Tensor[(8, 8, 6), int64] {
  %137 = @func_1489() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %137.2
}

def @func_9864(%var_9841: Tensor[(14, 144), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(14, 144), uint16]) {
  %138 = @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */;
  %139 = cast(%var_9841, dtype="float64") /* ty=Tensor[(14, 144), float64] */;
  %140 = reshape(%139, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %141 = @func_3222(%140) /* ty=Tensor[(16, 14, 9), float32] */;
  %142 = cast(%141, dtype="uint16") /* ty=Tensor[(16, 14, 9), uint16] */;
  %143 = shape_of(%var_9841, dtype="int32") /* ty=Tensor[(2), int32] */;
  %144 = cast(%var_9841, dtype="uint16") /* ty=Tensor[(14, 144), uint16] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %146 = %138.0;
  %147 = bitwise_and(%144, %145) /* ty=Tensor[(14, 144), uint16] */;
  (%146, %147)
}

def @func_10399() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %148 = @func_2178() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %149 = @func_5144() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %150 = %148.1;
  %151 = @func_1377() /* ty=Tensor[(16, 14, 1), float64] */;
  %152 = %149.0;
  %153 = @func_5675() /* ty=Tensor[(8, 8, 6), float64] */;
  (%150, %151, %152, %153)
}

def @func_15551() -> (Tensor[(16, 14, 1), float32], Tensor[(8, 8, 6), int64]) {
  %154 = @func_11695() /* ty=Tensor[(16, 14, 1), float32] */;
  %155 = @func_11986() /* ty=Tensor[(8, 8, 6), int64] */;
  (%154, %155)
}

def @func_16865(%var_16859: Tensor[(16, 14, 2), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 2), uint64]) {
  %156 = @func_8138() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %157 = @func_8814() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %158 = %157.1;
  %159 = cast(%158, dtype="uint64") /* ty=Tensor[(16, 14, 1), uint64] */;
  %160 = cast(%var_16859, dtype="uint64") /* ty=Tensor[(16, 14, 2), uint64] */;
  %161 = %156.1;
  %162 = minimum(%159, %160) /* ty=Tensor[(16, 14, 2), uint64] */;
  (%161, %162)
}

def @func_9582(%var_9561: Tensor[(1792), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 8), bool], Tensor[(1792), float64], Tensor[(8, 8, 6), int64], Tensor[(5, 6, 4), float64], Tensor[(120), float64]) {
  %163 = @func_5039() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %164 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %165 = cast(%var_9561, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %166 = reshape(%165, newshape=[16, 14, 8]) /* ty=Tensor[(16, 14, 8), float64] */;
  %167 = @func_5730(%166) /* ty=(Tensor[(16, 14, 8), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %168 = @func_8078() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
  %169 = cast(meta[relay.Constant][1] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %170 = reshape(%169, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %171 = %163.0;
  %172 = %164.1;
  %173 = @func_8479() /* ty=Tensor[(8, 8, 6), float64] */;
  %174 = %167.0;
  %175 = %168.1;
  %176 = @func_4903(%170) /* ty=Tensor[(5, 6, 4), float64] */;
  (%171, %172, %173, %174, %var_9561, %175, %176, meta[relay.Constant][1] /* ty=Tensor[(120), float64] */)
}

def @func_1869() -> (Tensor[(8, 8, 6), float64],) {
  %177 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  (%177,)
}

def @func_3032() -> (Tensor[(8, 8, 6), float64],) {
  %178 = @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %179 = %178.0;
  (%179,)
}

def @func_3504(%var_3480: Tensor[(12, 4, 13), uint64], %var_3481: Tensor[(12, 4, 13), uint64]) -> (Tensor[(12, 4, 13), float64], Tensor[(8, 8, 6), float64]) {
  %180 = cast(%var_3481, dtype="uint64") /* ty=Tensor[(12, 4, 13), uint64] */;
  %181 = shape_of(%var_3480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %182 = cast(%var_3480, dtype="uint64") /* ty=Tensor[(12, 4, 13), uint64] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %184 = logical_xor(%182, %183) /* ty=Tensor[(12, 4, 13), uint64] */;
  %185 = cast(%184, dtype="float64") /* ty=Tensor[(12, 4, 13), float64] */;
  %186 = @func_1846() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %187 = erf(%185) /* ty=Tensor[(12, 4, 13), float64] */;
  %188 = %186.1;
  (%187, %188)
}

def @func_5402() -> (Tensor[(8, 8, 6), float64],) {
  %189 = @func_1972() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %190 = %189.1;
  (%190,)
}

def @func_1563(%var_1528: Tensor[(8, 8, 6), float64]) -> (Tensor[(8, 8, 6), int16], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %191 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %192 = %191.2;
  %193 = cast(%var_1528, dtype="int16") /* ty=Tensor[(8, 8, 6), int16] */;
  %194 = shape_of(%192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%192, dtype="int16") /* ty=Tensor[(8, 8, 6), int16] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %197 = @func_1489() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %198 = %197.2;
  %199 = cast(%198, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %200 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %201 = left_shift(%195, %196) /* ty=Tensor[(8, 8, 6), int16] */;
  %202 = erf(%199) /* ty=Tensor[(8, 8, 6), float64] */;
  %203 = %200.0;
  (%201, %202, %203)
}

def @func_11746(%var_11741: Tensor[(15, 2, 11), float32]) -> Tensor[(15, 2, 11), float32] {
  %204 = cast(%var_11741, dtype="float32") /* ty=Tensor[(15, 2, 11), float32] */;
  log(%204) /* ty=Tensor[(15, 2, 11), float32] */
}

def @func_15006() -> Tensor[(8, 8, 6), int64] {
  %205 = @func_8552() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %205.0
}

def @func_3587() -> (Tensor[(8, 8, 6), int64],) {
  %206 = @func_3563() /* ty=Tensor[(8, 8, 6), int64] */;
  (%206,)
}

def @func_7514() -> (Tensor[(16, 14, 1), float32],) {
  %207 = @func_1167() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %208 = %207.1;
  (%208,)
}

def @func_5461() -> Tensor[(8, 8, 6), float64] {
  @func_353() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_16727(%var_16724: Tensor[(1287), float32]) -> (Tensor[(16, 14, 1), float64], Tensor[(11, 9, 13), bool], Tensor[(1287), float32]) {
  %209 = @func_5144() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %210 = cast(%var_16724, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %211 = cast(%var_16724, dtype="bool") /* ty=Tensor[(1287), bool] */;
  %212 = reshape(%210, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float32] */;
  %213 = reshape(%211, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), bool] */;
  %214 = @func_7328(%212, %213) /* ty=(Tensor[(11, 9, 13), bool], Tensor[(8, 8, 6), int64]) */;
  %215 = %209.0;
  %216 = %214.0;
  (%215, %216, %var_16724)
}

def @func_3300() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %217 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  %218 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  %219 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
  (%217, %218, %219)
}

def @func_2373() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %220 = @func_1846() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %221 = @func_1288() /* ty=(Tensor[(8, 8, 6), int32], Tensor[(8, 8, 6), float64]) */;
  %222 = %220.2;
  %223 = %221.1;
  (%222, %223)
}

def @func_423() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), uint64]) {
  %224 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %225 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %226 = %225.1;
  %227 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 8, 6), float64] */, dtype="uint64") /* ty=Tensor[(8, 8, 6), uint64] */;
  %228 = shape_of(%226, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(%226, dtype="uint64") /* ty=Tensor[(8, 8, 6), uint64] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %231 = %224.1;
  %232 = maximum(%229, %230) /* ty=Tensor[(8, 8, 6), uint64] */;
  (%231, %232)
}

def @func_16426(%var_16401: Tensor[(14, 3, 2), int16], %var_16402: Tensor[(14, 3, 2), int16], %var_16423: Tensor[(330), float32]) -> (Tensor[(14, 3, 2), int16], Tensor[(8, 8, 6), float64], Tensor[(330), float32]) {
  %233 = cast(%var_16402, dtype="int16") /* ty=Tensor[(14, 3, 2), int16] */;
  %234 = shape_of(%var_16401, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%var_16401, dtype="int16") /* ty=Tensor[(14, 3, 2), int16] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %237 = cast(%var_16423, dtype="float32") /* ty=Tensor[(330), float32] */;
  %238 = reshape(%237, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), float32] */;
  %239 = @func_2337(%238) /* ty=(Tensor[(2, 11, 15), bool], Tensor[(2, 11, 15), int8], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %240 = left_shift(%235, %236) /* ty=Tensor[(14, 3, 2), int16] */;
  %241 = %239.2;
  (%240, %241, %var_16423)
}

def @func_8170() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %242 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %243 = %242.0;
  %244 = @func_3747() /* ty=Tensor[(8, 8, 6), float64] */;
  (%243, %244)
}

def @func_8814() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %245 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %246 = @func_7266() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %247 = %245.1;
  %248 = %246.0;
  (%247, %248)
}

def @func_8490() -> Tensor[(16, 14, 1), float32] {
  %249 = @func_7266() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %250 = %249.0;
  %251 = cast(%250, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  log(%251) /* ty=Tensor[(16, 14, 1), float32] */
}

def @func_12104() -> Tensor[(8, 8, 6), float64] {
  %252 = @func_8267() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %252.1
}

def @func_15810() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %253 = @func_11468() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %254 = @func_7218() /* ty=Tensor[(8, 8, 6), float64] */;
  %255 = %253.0;
  %256 = @func_4099() /* ty=Tensor[(8, 8, 6), float64] */;
  (%254, %255, %256)
}

def @func_12067() -> (Tensor[(8, 8, 6), float64],) {
  %257 = @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %258 = %257.0;
  (%258,)
}

def @func_9257() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 7), uint8], Tensor[(448), uint8], Tensor[(8, 8, 6), float64]) {
  %259 = cast(meta[relay.Constant][3] /* ty=Tensor[(448), uint8] */, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %260 = cast(meta[relay.Constant][3] /* ty=Tensor[(448), uint8] */, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %261 = reshape(%259, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), uint8] */;
  %262 = reshape(%260, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), uint8] */;
  %263 = @func_8267() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %264 = @func_837() /* ty=Tensor[(8, 8, 6), float64] */;
  %265 = @func_4847() /* ty=Tensor[(8, 8, 6), float32] */;
  %266 = @func_837() /* ty=Tensor[(8, 8, 6), float64] */;
  %267 = @func_7703(%261, %262) /* ty=Tensor[(8, 8, 7), uint8] */;
  %268 = %263.1;
  (%264, %265, %266, %267, meta[relay.Constant][3] /* ty=Tensor[(448), uint8] */, %268)
}

def @func_10454() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %269 = @func_4670() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %270 = @func_3371() /* ty=Tensor[(8, 8, 6), float64] */;
  %271 = %269.1;
  (%270, %271)
}

def @func_1635() -> (Tensor[(8, 8, 6), float64],) {
  %272 = @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %273 = %272.0;
  (%273,)
}

def @func_10691() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32], Tensor[(16, 14, 1), float64]) {
  %274 = @func_7573() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %275 = cast(meta[relay.Constant][4] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %276 = reshape(%275, newshape=[1, 2688]) /* ty=Tensor[(1, 2688), float32] */;
  %277 = @func_9375(%276) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(1, 2688), float32], Tensor[(8, 8, 6), float64]) */;
  %278 = @func_3023() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %279 = %274.0;
  %280 = %277.1;
  %281 = %278.0;
  (%279, %280, meta[relay.Constant][4] /* ty=Tensor[(2688), float32] */, %281)
}

def @func_17158() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %282 = @func_7218() /* ty=Tensor[(8, 8, 6), float64] */;
  %283 = @func_4099() /* ty=Tensor[(8, 8, 6), float64] */;
  (%282, %283)
}

def @func_12088() -> (Tensor[(16, 14, 1), float64],) {
  %284 = @func_11297() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %285 = %284.0;
  (%285,)
}

def @func_10413() -> Tensor[(16, 14, 1), float64] {
  %286 = @func_4892() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %286.0
}

def @func_446() -> Tensor[(8, 8, 6), float64] {
  @func_353() /* ty=Tensor[(8, 8, 6), float64] */
}

def @main(%var_17328: uint16) -> (Tensor[(11, 1, 4), uint16],) {
  %287 = cast(%var_17328, dtype="uint16") /* ty=uint16 */;
  %288 = cast(meta[relay.Constant][5] /* ty=Tensor[(11, 1, 4), uint16] */, dtype="uint16") /* ty=Tensor[(11, 1, 4), uint16] */;
  %289 = subtract(%287, %288) /* ty=Tensor[(11, 1, 4), uint16] */;
  (%289,)
}

def @func_8214() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %290 = @func_4670() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %291 = @func_2123() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %292 = @func_7413() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %293 = %290.1;
  %294 = %291.0;
  %295 = %292.3;
  %296 = @func_7218() /* ty=Tensor[(8, 8, 6), float64] */;
  (%293, %294, %295, %296)
}

def @func_4892() -> (Tensor[(16, 14, 1), float64],) {
  %297 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %298 = %297.0;
  (%298,)
}

def @func_672(%var_664: Tensor[(2, 16, 10), float64]) -> (Tensor[(2, 16, 10), float64],) {
  %299 = cast(%var_664, dtype="float64") /* ty=Tensor[(2, 16, 10), float64] */;
  %300 = exp(%299) /* ty=Tensor[(2, 16, 10), float64] */;
  (%300,)
}

def @func_353() -> Tensor[(8, 8, 6), float64] {
  %301 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %301.0
}

def @func_13172() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int32]) {
  %302 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %303 = %302.1;
  %304 = cast(%303, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %305 = reshape(%304, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %306 = @func_3677(%305) /* ty=Tensor[(8, 8, 6), int32] */;
  (%303, %306)
}

def @func_15532() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %307 = @func_1972() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %308 = @func_10803() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %309 = %307.0;
  %310 = %308.3;
  (%309, %310)
}

def @func_1448() -> Tensor[(8, 8, 6), float64] {
  %311 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %311.1
}

def @func_8158() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %312 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
  %313 = @func_3747() /* ty=Tensor[(8, 8, 6), float64] */;
  (%312, %313)
}

def @func_1328() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %314 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %315 = @func_1167() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %316 = %314.0;
  %317 = %315.0;
  (%316, %317)
}

def @func_4670() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %318 = @func_3873() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %319 = @func_1489() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %320 = @func_2902() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %321 = %318.0;
  %322 = %319.1;
  %323 = %320.0;
  %324 = @func_3991() /* ty=Tensor[(8, 8, 6), float64] */;
  (%321, %322, %323, %324)
}

def @func_16140(%var_16128: Tensor[(16, 14, 1), float64], %var_16138: uint64) -> (Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64], Tensor[(1584), float64], uint64) {
  %325 = @func_13528() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(15, 2, 15), float64], Tensor[(1, 624), uint64], Tensor[(16, 14, 1), float64]) */;
  %326 = %325.0;
  %327 = cast(%var_16128, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%326, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %331 = cast(meta[relay.Constant][6] /* ty=Tensor[(1584), float64] */, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %332 = cast(%var_16138, dtype="uint64") /* ty=uint64 */;
  %333 = reshape(%331, newshape=[1584]) /* ty=Tensor[(1584), float64] */;
  %334 = reshape(%332, newshape=[]) /* ty=uint64 */;
  %335 = @func_15336(%333, %334) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(1584), float64], Tensor[(11, 7, 14), bool], uint64, Tensor[(1078), uint64], Tensor[(8, 8, 6), float64]) */;
  %336 = equal(%329, %330) /* ty=Tensor[(16, 14, ?), bool] */;
  %337 = %335.6;
  (%336, %337, meta[relay.Constant][6] /* ty=Tensor[(1584), float64] */, %var_16138)
}

def @func_12198() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %338 = @func_3587() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %339 = @func_5039() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %340 = @func_2880() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %341 = %338.0;
  %342 = %339.0;
  %343 = %340.1;
  (%341, %342, %343)
}

def @func_13684() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(1287), float32]) {
  %344 = @func_7057() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %345 = cast(meta[relay.Constant][7] /* ty=Tensor[(1287), float32] */, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %346 = cast(meta[relay.Constant][7] /* ty=Tensor[(1287), float32] */, dtype="bool") /* ty=Tensor[(1287), bool] */;
  %347 = reshape(%345, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float32] */;
  %348 = reshape(%346, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), bool] */;
  %349 = @func_7328(%347, %348) /* ty=(Tensor[(11, 9, 13), bool], Tensor[(8, 8, 6), int64]) */;
  %350 = %344.0;
  %351 = %349.1;
  (%350, %351, meta[relay.Constant][7] /* ty=Tensor[(1287), float32] */)
}

def @func_13788() -> (Tensor[(8, 8, 6), int64],) {
  %352 = @func_12045() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %353 = %352.0;
  (%353,)
}

def @func_7703(%var_7690: Tensor[(8, 8, 7), uint8], %var_7691: Tensor[(8, 8, 7), uint8]) -> Tensor[(8, 8, 7), uint8] {
  %354 = cast(%var_7691, dtype="uint8") /* ty=Tensor[(8, 8, 7), uint8] */;
  %355 = shape_of(%var_7690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%var_7690, dtype="uint8") /* ty=Tensor[(8, 8, 7), uint8] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%356, %357) /* ty=Tensor[(8, 8, 7), uint8] */
}

def @func_14708() -> Tensor[(8, 8, 6), float64] {
  %358 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %358.0
}

def @func_13201() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %359 = @func_8214() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %360 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %361 = @func_8149() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %362 = %359.1;
  %363 = %360.0;
  %364 = %361.0;
  (%362, %363, %364)
}

def @func_10200() -> (Tensor[(8, 8, 6), float64],) {
  %365 = @func_7444() /* ty=Tensor[(8, 8, 6), float64] */;
  (%365,)
}

def @func_6233() -> (Tensor[(8, 8, 6), float64],) {
  %366 = @func_3139() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %367 = %366.0;
  (%367,)
}

def @func_5730(%var_5705: Tensor[(16, 14, 8), float64]) -> (Tensor[(16, 14, 8), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %368 = @func_3023() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %369 = %368.0;
  %370 = cast(%369, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %371 = cast(%var_5705, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
  %372 = @func_1489() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %373 = @func_1846() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %374 = greater_equal(%370, %371) /* ty=Tensor[(16, 14, 8), bool] */;
  %375 = %372.1;
  %376 = %373.2;
  (%374, %375, %376)
}

def @func_12670() -> (Tensor[(8, 8, 6), float64],) {
  %377 = @func_2902() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %378 = %377.0;
  (%378,)
}

def @func_6448() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %379 = @func_5144() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %380 = @func_3139() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %381 = %379.0;
  %382 = %380.0;
  (%381, %382)
}

def @func_394() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %383 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 14, 1), float64] */, dtype="float64") /* ty=Tensor[(16, 14, 1), float64] */;
  %384 = asin(%383) /* ty=Tensor[(16, 14, 1), float64] */;
  %385 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  (%384, %385)
}

def @func_2697() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) {
  %386 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %387 = %386.0;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %389 = reshape(%388, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %390 = @func_313(%389) /* ty=(Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %391 = %390.0;
  (%387, %391)
}

def @func_13456() -> (Tensor[(8, 8, 6), float64],) {
  %392 = @func_9175() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %393 = %392.0;
  (%393,)
}

def @func_16220() -> (Tensor[(8, 8, 6), float64],) {
  %394 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %395 = %394.0;
  (%395,)
}

def @func_3326() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %396 = @func_2902() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %397 = @func_1008() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %398 = %396.0;
  %399 = %397.0;
  (%398, %399)
}

def @func_3563() -> Tensor[(8, 8, 6), int64] {
  @func_3059() /* ty=Tensor[(8, 8, 6), int64] */
}

def @func_9515() -> (Tensor[(8, 8, 6), float64],) {
  %400 = @func_2083() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %401 = %400.0;
  (%401,)
}

def @func_5144() -> (Tensor[(16, 14, 1), float64],) {
  %402 = @func_4992() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %403 = %402.0;
  (%403,)
}

def @func_1489() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) {
  %404 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  %405 = cast(%404, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
  %406 = reshape(%405, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float32] */;
  %407 = @func_1377() /* ty=Tensor[(16, 14, 1), float64] */;
  %408 = @func_900(%406) /* ty=Tensor[(8, 8, 6), int64] */;
  (%407, %404, %408)
}

def @func_10939(%var_10927: int16) -> (Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], int16, Tensor[(104), int16]) {
  %409 = @func_9515() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %410 = cast(%var_10927, dtype="int16") /* ty=int16 */;
  %411 = cast(meta[relay.Constant][9] /* ty=Tensor[(104), int16] */, dtype="int16") /* ty=Tensor[(104), int16] */;
  %412 = reshape(%410, newshape=[]) /* ty=int16 */;
  %413 = reshape(%411, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), int16] */;
  %414 = @func_6556(%412, %413) /* ty=(Tensor[(13, 4, 2), int16], Tensor[(8, 8, 6), int64]) */;
  %415 = @func_10743() /* ty=Tensor[(16, 14, ?), bool] */;
  %416 = %409.0;
  %417 = %414.1;
  (%415, %416, %417, %var_10927, meta[relay.Constant][9] /* ty=Tensor[(104), int16] */)
}

def @func_789(%var_727: Tensor[(1, 7, 13), float64], %var_728: Tensor[(4, 7, 13), float64], %var_736: Tensor[(6, 7, 13), float64]) -> (Tensor[(4, 7, 13), float64], Tensor[(6, 7, 13), float32], Tensor[(8, 8, 6), int16], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float32]) {
  %418 = cast(%var_727, dtype="float64") /* ty=Tensor[(1, 7, 13), float64] */;
  %419 = cast(%var_728, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  %420 = cast(%var_727, dtype="float32") /* ty=Tensor[(1, 7, 13), float32] */;
  %421 = cast(%var_736, dtype="float32") /* ty=Tensor[(6, 7, 13), float32] */;
  %422 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  %423 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  %424 = cast(%423, dtype="int16") /* ty=Tensor[(8, 8, 6), int16] */;
  %425 = shape_of(%422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%422, dtype="int16") /* ty=Tensor[(8, 8, 6), int16] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %428 = cast(%423, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %429 = reshape(%428, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %430 = @func_313(%429) /* ty=(Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %431 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %432 = divide(%418, %419) /* ty=Tensor[(4, 7, 13), float64] */;
  %433 = floor_mod(%420, %421) /* ty=Tensor[(6, 7, 13), float32] */;
  %434 = subtract(%426, %427) /* ty=Tensor[(8, 8, 6), int16] */;
  %435 = %430.3;
  %436 = %431.1;
  (%432, %433, %434, %435, %436)
}

def @func_13071(%var_13062: Tensor[(14, 4, 2), float32], %var_13063: Tensor[(14, 4, 2), float32]) -> (Tensor[(14, 4, 2), bool],) {
  %437 = cast(%var_13063, dtype="bool") /* ty=Tensor[(14, 4, 2), bool] */;
  %438 = shape_of(%var_13062, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%var_13062, dtype="bool") /* ty=Tensor[(14, 4, 2), bool] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %441 = equal(%439, %440) /* ty=Tensor[(14, 4, 2), bool] */;
  (%441,)
}

def @func_17233() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %442 = @func_16220() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %443 = @func_10413() /* ty=Tensor[(16, 14, 1), float64] */;
  %444 = %442.0;
  (%443, %444)
}

def @func_9470() -> (Tensor[(8, 8, 6), float64],) {
  %445 = @func_2880() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %446 = %445.0;
  (%446,)
}

def @func_14762(%var_14754: Tensor[(4, 15, 6), int16], %var_14755: Tensor[(4, 15, 6), int16]) -> Tensor[(4, 15, 6), bool] {
  %447 = cast(%var_14755, dtype="bool") /* ty=Tensor[(4, 15, 6), bool] */;
  %448 = shape_of(%var_14754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%var_14754, dtype="bool") /* ty=Tensor[(4, 15, 6), bool] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%449, %450) /* ty=Tensor[(4, 15, 6), bool] */
}

def @func_11733() -> (Tensor[(16, 14, 1), float64],) {
  %451 = @func_10526() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %452 = %451.1;
  (%452,)
}

def @func_10803() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %453 = @func_6651() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %454 = @func_7561() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %455 = @func_4006() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) */;
  %456 = @func_5039() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %457 = %453.1;
  %458 = %454.1;
  %459 = %455.1;
  %460 = %456.0;
  (%457, %458, %459, %460)
}

def @func_7561() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %461 = @func_4892() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %462 = @func_1130() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %463 = %461.0;
  %464 = %462.1;
  (%463, %464)
}

def @func_7328(%var_7317: Tensor[(11, 9, 13), float32], %var_7321: Tensor[(11, 9, 13), bool]) -> (Tensor[(11, 9, 13), bool], Tensor[(8, 8, 6), int64]) {
  %465 = cast(%var_7317, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %466 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(11, 9, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(meta[relay.Constant][10] /* ty=Tensor[(11, 9, 13), float32] */, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %469 = not_equal(%467, %468) /* ty=Tensor[(11, 9, 13), bool] */;
  %470 = cast(%var_7321, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%469, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %474 = @func_3957() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %475 = less_equal(%472, %473) /* ty=Tensor[(11, 9, 13), bool] */;
  %476 = %474.0;
  (%475, %476)
}

def @func_4847() -> Tensor[(8, 8, 6), float32] {
  %477 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %477.0
}

def @func_4992() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %478 = @func_2373() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %479 = @func_1377() /* ty=Tensor[(16, 14, 1), float64] */;
  %480 = %478.0;
  (%479, %480)
}

def @func_8138() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %481 = @func_6233() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %482 = %481.0;
  %483 = @func_7444() /* ty=Tensor[(8, 8, 6), float64] */;
  (%482, %483)
}

def @func_16327(%var_16322: Tensor[(16, 14, 2016), bool]) -> (Tensor[(16, 14, 2016), uint64], Tensor[(16, 14, 2016), bool]) {
  %484 = @func_4217() /* ty=(Tensor[(16, 14, 9), float32], Tensor[(16, 14, 2016), float32], Tensor[(16, 14, 2016), uint8]) */;
  %485 = %484.2;
  %486 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 14, 2016), uint8] */, dtype="bool") /* ty=Tensor[(16, 14, 2016), bool] */;
  %487 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%485, dtype="bool") /* ty=Tensor[(16, 14, 2016), bool] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %490 = greater_equal(%488, %489) /* ty=Tensor[(16, 14, 2016), bool] */;
  %491 = cast(%490, dtype="uint64") /* ty=Tensor[(16, 14, 2016), uint64] */;
  %492 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(16, 14, 2016), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 14, 2016), uint8] */, dtype="uint64") /* ty=Tensor[(16, 14, 2016), uint64] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %495 = cast(%var_16322, dtype="bool") /* ty=Tensor[(16, 14, 2016), bool] */;
  %496 = shape_of(%490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%490, dtype="bool") /* ty=Tensor[(16, 14, 2016), bool] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %499 = right_shift(%493, %494) /* ty=Tensor[(16, 14, 2016), uint64] */;
  %500 = logical_or(%497, %498) /* ty=Tensor[(16, 14, 2016), bool] */;
  (%499, %500)
}

def @func_14603(%var_14592: Tensor[(1078), uint64]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float32], Tensor[(11, 7, 14), bool], uint64, Tensor[(1078), uint64]) {
  %501 = @func_12648() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %502 = @func_14295() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */;
  %503 = @func_6009() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) */;
  %504 = cast(meta[relay.Constant][12] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %505 = cast(%var_14592, dtype="uint64") /* ty=Tensor[(1078), uint64] */;
  %506 = reshape(%504, newshape=[]) /* ty=uint64 */;
  %507 = reshape(%505, newshape=[11, 7, 14]) /* ty=Tensor[(11, 7, 14), uint64] */;
  %508 = @func_9056(%506, %507) /* ty=(Tensor[(11, 7, 14), bool],) */;
  %509 = @func_10128() /* ty=Tensor[(8, 8, 6), float64] */;
  %510 = %501.0;
  %511 = %502.1;
  %512 = %503.1;
  %513 = %508.0;
  (%509, %510, %511, %512, %513, meta[relay.Constant][12] /* ty=uint64 */, %var_14592)
}

def @func_2185() -> (Tensor[(8, 8, 6), float64],) {
  %514 = @func_1846() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %515 = %514.2;
  (%515,)
}

def @func_14828() -> (Tensor[(8, 8, 6), float64],) {
  %516 = @func_3455() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %517 = %516.0;
  (%517,)
}

def @func_1435() -> (Tensor[(8, 8, 6), float64],) {
  %518 = @func_1130() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %519 = %518.1;
  (%519,)
}

def @func_8631() -> (Tensor[(16, 14, 1), float64],) {
  %520 = @func_5144() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %521 = %520.0;
  (%521,)
}

def @func_10113(%var_10083: Tensor[(1, 1, 5), uint64], %var_10084: Tensor[(13, 14, 5), uint64]) -> (Tensor[(13, 14, 5), uint64], Tensor[(1, 1, 5), float64]) {
  %522 = cast(%var_10083, dtype="uint64") /* ty=Tensor[(1, 1, 5), uint64] */;
  %523 = cast(%var_10084, dtype="uint64") /* ty=Tensor[(13, 14, 5), uint64] */;
  %524 = cast(%var_10083, dtype="float64") /* ty=Tensor[(1, 1, 5), float64] */;
  %525 = bitwise_xor(%522, %523) /* ty=Tensor[(13, 14, 5), uint64] */;
  %526 = erf(%524) /* ty=Tensor[(1, 1, 5), float64] */;
  (%525, %526)
}

def @func_972() -> (Tensor[(16, 14, 1), float64],) {
  %527 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %528 = %527.0;
  (%528,)
}

def @func_6765() -> Tensor[(8, 8, 6), float32] {
  %529 = @func_5461() /* ty=Tensor[(8, 8, 6), float64] */;
  %530 = cast(%529, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
  tan(%530) /* ty=Tensor[(8, 8, 6), float32] */
}

def @func_2083() -> (Tensor[(8, 8, 6), float64],) {
  %531 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
  (%531,)
}

def @func_16186() -> (Tensor[(16, 14, 5), bool], Tensor[(16, 14, 1), float64]) {
  %532 = @func_15911() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %533 = @func_5960() /* ty=Tensor[(16, 14, 5), bool] */;
  %534 = %532.2;
  (%533, %534)
}

def @func_4006() -> (Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) {
  %535 = @func_3587() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %536 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %537 = %535.0;
  %538 = %536.0;
  (%537, %538)
}

def @func_16450() -> (Tensor[(8, 8, 6), float64],) {
  %539 = @func_6827() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %540 = %539.0;
  (%540,)
}

def @func_1288() -> (Tensor[(8, 8, 6), int32], Tensor[(8, 8, 6), float64]) {
  %541 = @func_423() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), uint64]) */;
  %542 = %541.1;
  %543 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 8, 6), uint64] */, dtype="int32") /* ty=Tensor[(8, 8, 6), int32] */;
  %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%542, dtype="int32") /* ty=Tensor[(8, 8, 6), int32] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %547 = logical_xor(%545, %546) /* ty=Tensor[(8, 8, 6), int32] */;
  %548 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  (%547, %548)
}

def @func_8078() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) {
  %549 = @func_4006() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) */;
  %550 = @func_6233() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %551 = @func_3991() /* ty=Tensor[(8, 8, 6), float64] */;
  %552 = %549.0;
  %553 = %550.0;
  (%551, %552, %553)
}

def @func_7621() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) {
  %554 = @func_6827() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %555 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
  %556 = %554.1;
  (%555, %556)
}

def @func_5960() -> Tensor[(16, 14, 5), bool] {
  %557 = @func_2123() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %558 = %557.0;
  %559 = cast(%558, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %560 = cast(meta[relay.Constant][14] /* ty=Tensor[(16, 14, 5), float64] */, dtype="bool") /* ty=Tensor[(16, 14, 5), bool] */;
  greater(%559, %560) /* ty=Tensor[(16, 14, 5), bool] */
}

def @func_9175() -> (Tensor[(8, 8, 6), float64],) {
  %561 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %562 = %561.0;
  (%562,)
}

def @func_900(%var_889: Tensor[(8, 8, 6), float32]) -> Tensor[(8, 8, 6), int64] {
  %563 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %564 = %563.0;
  %565 = cast(%564, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
  %566 = asin(%565) /* ty=Tensor[(8, 8, 6), float32] */;
  %567 = cast(%var_889, dtype="int64") /* ty=Tensor[(8, 8, 6), int64] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%566, dtype="int64") /* ty=Tensor[(8, 8, 6), int64] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_or(%569, %570) /* ty=Tensor[(8, 8, 6), int64] */
}

def @func_10128() -> Tensor[(8, 8, 6), float64] {
  %571 = @func_7751() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %571.1
}

def @func_11780() -> (Tensor[(8, 8, 6), float64],) {
  %572 = @func_7621() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %573 = %572.0;
  (%573,)
}

def @func_2949() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %574 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %575 = @func_2446() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %576 = @func_2373() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %577 = %574.1;
  %578 = %575.0;
  %579 = %576.0;
  (%577, %578, %579)
}

def @func_4601(%var_4567: Tensor[(624), uint64]) -> (Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(16, 14, 9), float32], Tensor[(8, 8, 6), int32], Tensor[(384), float64], Tensor[(8, 8, 6), float64], Tensor[(624), uint64]) {
  %580 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 2, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 15), float64] */;
  %581 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 2, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 15), float64] */;
  %582 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 2, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 15), float64] */;
  %583 = @func_4217() /* ty=(Tensor[(16, 14, 9), float32], Tensor[(16, 14, 2016), float32], Tensor[(16, 14, 2016), uint8]) */;
  %584 = cast(meta[relay.Constant][16] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %585 = reshape(%584, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %586 = cast(%var_4567, dtype="uint64") /* ty=Tensor[(624), uint64] */;
  %587 = cast(%var_4567, dtype="uint64") /* ty=Tensor[(624), uint64] */;
  %588 = reshape(%586, newshape=[12, 4, 13]) /* ty=Tensor[(12, 4, 13), uint64] */;
  %589 = reshape(%587, newshape=[12, 4, 13]) /* ty=Tensor[(12, 4, 13), uint64] */;
  %590 = @func_3504(%588, %589) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(8, 8, 6), float64]) */;
  %591 = sinh(%580) /* ty=Tensor[(15, 2, 15), float64] */;
  %592 = rsqrt(%581) /* ty=Tensor[(15, 2, 15), float64] */;
  %593 = sigmoid(%582) /* ty=Tensor[(15, 2, 15), float64] */;
  %594 = %583.0;
  %595 = @func_3677(%585) /* ty=Tensor[(8, 8, 6), int32] */;
  %596 = %590.1;
  (%591, %592, %593, %594, %595, meta[relay.Constant][16] /* ty=Tensor[(384), float64] */, %596, %var_4567)
}

def @func_2992(%var_2961: Tensor[(8, 8, 6), float64]) -> (Tensor[(8, 8, 6), int8],) {
  %597 = @func_2446() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %598 = %597.0;
  %599 = cast(%var_2961, dtype="int8") /* ty=Tensor[(8, 8, 6), int8] */;
  %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%598, dtype="int8") /* ty=Tensor[(8, 8, 6), int8] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %603 = right_shift(%601, %602) /* ty=Tensor[(8, 8, 6), int8] */;
  (%603,)
}

def @func_5791(%var_5784: int16, %var_5785: Tensor[(1, 1, 12), int16]) -> Tensor[(1, 1, 12), bool] {
  %604 = cast(%var_5784, dtype="bool") /* ty=bool */;
  %605 = cast(%var_5785, dtype="bool") /* ty=Tensor[(1, 1, 12), bool] */;
  less(%604, %605) /* ty=Tensor[(1, 1, 12), bool] */
}

def @func_7413() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
  %606 = @func_2083() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %607 = @func_5390() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %608 = @func_6276() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %609 = %608.1;
  %610 = cast(%609, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %611 = reshape(%610, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %612 = @func_313(%611) /* ty=(Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %613 = %606.0;
  %614 = %607.2;
  %615 = %612.2;
  (%613, %614, %609, %615)
}

def @func_10668(%var_10650: Tensor[(3, 9, 13), float64]) -> (Tensor[(3, 9, 13), float64], Tensor[(2016), float64], Tensor[(2016), float64]) {
  %616 = cast(%var_10650, dtype="float64") /* ty=Tensor[(3, 9, 13), float64] */;
  %617 = cast(meta[relay.Constant][17] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %618 = reshape(%617, newshape=[2016]) /* ty=Tensor[(2016), float64] */;
  %619 = @func_10591(%618) /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2016), float64], Tensor[(16, 14, 1), float64]) */;
  %620 = asinh(%616) /* ty=Tensor[(3, 9, 13), float64] */;
  %621 = %619.4;
  (%620, %621, meta[relay.Constant][17] /* ty=Tensor[(2016), float64] */)
}

def @func_12863() -> (Tensor[(8, 8, 6), float64],) {
  %622 = @func_2902() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %623 = %622.0;
  (%623,)
}

def @func_8438(%var_8431: Tensor[(13, 1, 4), float32]) -> (Tensor[(13, 1, 4), float32],) {
  %624 = cast(%var_8431, dtype="float32") /* ty=Tensor[(13, 1, 4), float32] */;
  %625 = asinh(%624) /* ty=Tensor[(13, 1, 4), float32] */;
  (%625,)
}

def @func_6426() -> (Tensor[(8, 8, 6), int64],) {
  %626 = @func_3059() /* ty=Tensor[(8, 8, 6), int64] */;
  (%626,)
}

def @func_11242(%var_11227: Tensor[(14, 2, 11), int64], %var_11238: Tensor[(2688), float32]) -> (Tensor[(14, 2, 11), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2688), float32]) {
  %627 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 2, 11), int64] */, dtype="int64") /* ty=Tensor[(14, 2, 11), int64] */;
  %628 = shape_of(%var_11227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%var_11227, dtype="int64") /* ty=Tensor[(14, 2, 11), int64] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %631 = @func_6276() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %632 = cast(%var_11238, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %633 = reshape(%632, newshape=[1, 2688]) /* ty=Tensor[(1, 2688), float32] */;
  %634 = @func_9375(%633) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(1, 2688), float32], Tensor[(8, 8, 6), float64]) */;
  %635 = subtract(%629, %630) /* ty=Tensor[(14, 2, 11), int64] */;
  %636 = %631.0;
  %637 = %634.0;
  (%635, %636, %637, %var_11238)
}

def @func_4865() -> Tensor[(16, 14, 1), float64] {
  %638 = @func_2123() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %638.0
}

def @func_10743() -> Tensor[(16, 14, ?), bool] {
  @func_9951() /* ty=Tensor[(16, 14, ?), bool] */
}

def @func_13862() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %639 = @func_2779() /* ty=Tensor[(8, 8, 6), float64] */;
  %640 = @func_12104() /* ty=Tensor[(8, 8, 6), float64] */;
  %641 = @func_3747() /* ty=Tensor[(8, 8, 6), float64] */;
  (%639, %640, %641)
}

def @func_5816() -> (Tensor[(8, 8, 6), float64],) {
  %642 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
  (%642,)
}

def @func_13528() -> (Tensor[(16, 14, 1), float64], Tensor[(15, 2, 15), float64], Tensor[(1, 624), uint64], Tensor[(16, 14, 1), float64]) {
  %643 = @func_11468() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %644 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 624), uint64] */, dtype="uint64") /* ty=Tensor[(1, 624), uint64] */;
  %645 = reshape(%644, newshape=[624]) /* ty=Tensor[(624), uint64] */;
  %646 = @func_4601(%645) /* ty=(Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(16, 14, 9), float32], Tensor[(8, 8, 6), int32], Tensor[(384), float64], Tensor[(8, 8, 6), float64], Tensor[(624), uint64]) */;
  %647 = @func_2178() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %648 = %643.0;
  %649 = %646.1;
  %650 = %647.4;
  (%648, %649, meta[relay.Constant][19] /* ty=Tensor[(1, 624), uint64] */, %650)
}

def @func_15336(%var_15293: Tensor[(1584), float64], %var_15308: uint64) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(1584), float64], Tensor[(11, 7, 14), bool], uint64, Tensor[(1078), uint64], Tensor[(8, 8, 6), float64]) {
  %651 = @func_1328() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %652 = cast(%var_15293, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %653 = reshape(%652, newshape=[12, 12, 11]) /* ty=Tensor[(12, 12, 11), float64] */;
  %654 = @func_9634(%653) /* ty=(Tensor[(12, 12, 11), bool], Tensor[(8, 8, 6), float64]) */;
  %655 = cast(%var_15308, dtype="uint64") /* ty=uint64 */;
  %656 = cast(meta[relay.Constant][20] /* ty=Tensor[(1078), uint64] */, dtype="uint64") /* ty=Tensor[(1078), uint64] */;
  %657 = reshape(%655, newshape=[]) /* ty=uint64 */;
  %658 = reshape(%656, newshape=[11, 7, 14]) /* ty=Tensor[(11, 7, 14), uint64] */;
  %659 = @func_9056(%657, %658) /* ty=(Tensor[(11, 7, 14), bool],) */;
  %660 = %651.1;
  %661 = %654.1;
  %662 = %659.0;
  %663 = @func_5461() /* ty=Tensor[(8, 8, 6), float64] */;
  (%660, %661, %var_15293, %662, %var_15308, meta[relay.Constant][20] /* ty=Tensor[(1078), uint64] */, %663)
}

def @func_5039() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %664 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %665 = @func_1328() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %666 = %664.0;
  %667 = %665.0;
  (%666, %667)
}

def @func_13031(%var_13011: Tensor[(330), float32]) -> (Tensor[(8, 8, 6), float64], Tensor[(2, 11, 15), bool], Tensor[(330), float32]) {
  %668 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %669 = cast(%var_13011, dtype="float32") /* ty=Tensor[(330), float32] */;
  %670 = reshape(%669, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), float32] */;
  %671 = @func_2337(%670) /* ty=(Tensor[(2, 11, 15), bool], Tensor[(2, 11, 15), int8], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %672 = cast(%var_13011, dtype="float32") /* ty=Tensor[(330), float32] */;
  %673 = %668.2;
  %674 = %671.0;
  %675 = log10(%672) /* ty=Tensor[(330), float32] */;
  (%673, %674, %675)
}

def @func_11695() -> Tensor[(16, 14, 1), float32] {
  %676 = @func_6827() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %676.1
}

def @func_12247(%var_12237: Tensor[(16, 14, 9), float64]) -> (Tensor[(16, 14, 9), float32],) {
  %677 = @func_4217() /* ty=(Tensor[(16, 14, 9), float32], Tensor[(16, 14, 2016), float32], Tensor[(16, 14, 2016), uint8]) */;
  %678 = %677.0;
  %679 = cast(%678, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
  %680 = log(%679) /* ty=Tensor[(16, 14, 9), float64] */;
  %681 = cast(%var_12237, dtype="float32") /* ty=Tensor[(16, 14, 9), float32] */;
  %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%680, dtype="float32") /* ty=Tensor[(16, 14, 9), float32] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %685 = floor_mod(%683, %684) /* ty=Tensor[(16, 14, 9), float32] */;
  (%685,)
}

def @func_6401() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64]) {
  %686 = @func_3587() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %687 = @func_3587() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %688 = %686.0;
  %689 = %687.0;
  (%688, %689)
}

def @func_12045() -> (Tensor[(8, 8, 6), int64],) {
  %690 = @func_4006() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) */;
  %691 = %690.0;
  (%691,)
}

def @func_6212() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) {
  %692 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %693 = @func_5039() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %694 = @func_6140() /* ty=Tensor[(8, 8, 6), float64] */;
  %695 = @func_3747() /* ty=Tensor[(8, 8, 6), float64] */;
  %696 = %692.0;
  %697 = @func_3059() /* ty=Tensor[(8, 8, 6), int64] */;
  %698 = %693.0;
  (%694, %695, %696, %697, %698)
}

def @func_2779() -> Tensor[(8, 8, 6), float64] {
  %699 = @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %699.0
}

def @func_313(%var_260: Tensor[(8, 8, 6), float64]) -> (Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
  %700 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %701 = %700.1;
  %702 = cast(%var_260, dtype="bool") /* ty=Tensor[(8, 8, 6), bool] */;
  %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%701, dtype="bool") /* ty=Tensor[(8, 8, 6), bool] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %706 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %707 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %708 = cast(%701, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
  %709 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %710 = not_equal(%704, %705) /* ty=Tensor[(8, 8, 6), bool] */;
  %711 = %706.0;
  %712 = %707.1;
  %713 = log10(%708) /* ty=Tensor[(8, 8, 6), float32] */;
  %714 = %709.1;
  (%710, %711, %712, %713, %714)
}

def @func_8103() -> (Tensor[(8, 8, 6), float64],) {
  %715 = @func_5816() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %716 = %715.0;
  (%716,)
}

def @func_1377() -> Tensor[(16, 14, 1), float64] {
  %717 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %717.0
}

def @func_11860() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %718 = @func_1869() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %719 = @func_10849() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
  %720 = %718.0;
  %721 = cast(%720, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %722 = reshape(%721, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %723 = @func_313(%722) /* ty=(Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %724 = %719.1;
  %725 = %723.4;
  (%720, %724, %725)
}

def @func_2902() -> (Tensor[(8, 8, 6), float64],) {
  %726 = @func_2446() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %727 = %726.0;
  (%727,)
}

def @func_9951() -> Tensor[(16, 14, ?), bool] {
  %728 = @func_6260() /* ty=(Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */;
  %728.0
}

def @func_837() -> Tensor[(8, 8, 6), float64] {
  @func_353() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_7240() -> Tensor[(8, 8, 6), int64] {
  %729 = @func_6426() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %729.0
}

def @func_7037() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %730 = @func_4769() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %731 = @func_1167() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %732 = %730.0;
  %733 = %731.0;
  (%732, %733)
}

def @func_10849() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) {
  %734 = @func_3957() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %735 = @func_6945() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %736 = %734.0;
  %737 = %735.0;
  (%736, %737)
}

def @func_16929(%var_16924: Tensor[(16, 14, 2), float32]) -> Tensor[(16, 14, 2), bool] {
  %738 = @func_11695() /* ty=Tensor[(16, 14, 1), float32] */;
  %739 = cast(%738, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %740 = cast(%var_16924, dtype="bool") /* ty=Tensor[(16, 14, 2), bool] */;
  logical_and(%739, %740) /* ty=Tensor[(16, 14, 2), bool] */
}

def @func_5648() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %741 = @func_3873() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %742 = @func_3873() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %743 = @func_3455() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %744 = @func_1167() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %745 = @func_5144() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %746 = @func_5461() /* ty=Tensor[(8, 8, 6), float64] */;
  %747 = %741.0;
  %748 = %742.0;
  %749 = %743.0;
  %750 = %744.0;
  %751 = %745.0;
  (%746, %747, %748, %749, %750, %751)
}

def @func_12972() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
  %752 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %753 = @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */;
  %754 = %752.0;
  %755 = %753.0;
  (%754, %755)
}

def @func_9022() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %756 = @func_7037() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %757 = %756.1;
  %758 = @func_837() /* ty=Tensor[(8, 8, 6), float64] */;
  (%757, %758)
}

def @func_12761() -> Tensor[(16, 14, ?), bool] {
  @func_9951() /* ty=Tensor[(16, 14, ?), bool] */
}

def @func_13133() -> (Tensor[(16, 14, 1), float64],) {
  %759 = @func_9090() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %760 = %759.1;
  (%760,)
}

def @func_7967() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %761 = @func_5648() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %762 = @func_5402() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %763 = @func_7444() /* ty=Tensor[(8, 8, 6), float64] */;
  %764 = %761.5;
  %765 = %762.0;
  (%763, %764, %765)
}

def @func_3371() -> Tensor[(8, 8, 6), float64] {
  %766 = @func_1895() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %766.1
}

def @func_4903(%var_4899: Tensor[(5, 6, 4), float64]) -> Tensor[(5, 6, 4), float64] {
  %767 = cast(%var_4899, dtype="float64") /* ty=Tensor[(5, 6, 4), float64] */;
  atanh(%767) /* ty=Tensor[(5, 6, 4), float64] */
}

def @func_12429() -> (Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) {
  %768 = @func_6009() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) */;
  %769 = @func_4992() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %770 = %768.1;
  %771 = @func_10743() /* ty=Tensor[(16, 14, ?), bool] */;
  %772 = %769.1;
  (%770, %771, %772)
}

def @func_15013() -> (Tensor[(8, 8, 6), float64],) {
  %773 = @func_13818() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %774 = %773.1;
  (%774,)
}

def @func_15584() -> (Tensor[(8, 8, 6), int64],) {
  %775 = @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %776 = %775.1;
  (%776,)
}

def @func_13058(%var_13051: Tensor[(2016), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2016), float64]) {
  %777 = @func_7573() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %778 = cast(%var_13051, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %779 = reshape(%778, newshape=[2016]) /* ty=Tensor[(2016), float64] */;
  %780 = @func_10591(%779) /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2016), float64], Tensor[(16, 14, 1), float64]) */;
  %781 = %777.0;
  %782 = %780.1;
  (%781, %782, %var_13051)
}

def @func_14512(%var_14506: Tensor[(16, 14, 1), float64]) -> (Tensor[(5, 6, 4), float64], Tensor[(120), float64], Tensor[(16, 14, ?), uint32]) {
  %783 = cast(meta[relay.Constant][21] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %784 = reshape(%783, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %785 = @func_12648() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %786 = %785.0;
  %787 = cast(%var_14506, dtype="uint32") /* ty=Tensor[(16, 14, 1), uint32] */;
  %788 = shape_of(%786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%786, dtype="uint32") /* ty=Tensor[(16, 14, 1), uint32] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %791 = @func_4903(%784) /* ty=Tensor[(5, 6, 4), float64] */;
  %792 = bitwise_xor(%789, %790) /* ty=Tensor[(16, 14, ?), uint32] */;
  (%791, meta[relay.Constant][21] /* ty=Tensor[(120), float64] */, %792)
}

def @func_12477() -> (Tensor[(8, 8, 6), float64],) {
  %793 = @func_11017() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, 2016), uint8]) */;
  %794 = %793.0;
  (%794,)
}

def @func_16006() -> Tensor[(8, 8, 6), float64] {
  %795 = @func_13862() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %795.0
}

def @func_1972() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %796 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
  %797 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  (%796, %797)
}

def @func_8368() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %798 = @func_8214() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %799 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %800 = @func_6140() /* ty=Tensor[(8, 8, 6), float64] */;
  %801 = %798.2;
  %802 = %799.0;
  (%800, %801, %802)
}

def @func_5898(%var_5887: Tensor[(320), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(2, 16, 10), float64], Tensor[(320), float64], Tensor[(8, 8, 6), float64]) {
  %803 = cast(%var_5887, dtype="float64") /* ty=Tensor[(320), float64] */;
  %804 = reshape(%803, newshape=[2, 16, 10]) /* ty=Tensor[(2, 16, 10), float64] */;
  %805 = @func_672(%804) /* ty=(Tensor[(2, 16, 10), float64],) */;
  %806 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %807 = @func_5461() /* ty=Tensor[(8, 8, 6), float64] */;
  %808 = %805.0;
  %809 = %806.1;
  (%807, %808, %var_5887, %809)
}

def @func_12382() -> Tensor[(8, 8, 6), float64] {
  @func_1518() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_11468() -> (Tensor[(16, 14, 1), float64],) {
  %810 = @func_8631() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %811 = %810.0;
  (%811,)
}

def @func_11516() -> (Tensor[(8, 8, 6), float64],) {
  %812 = @func_6326() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %813 = %812.0;
  (%813,)
}

def @func_11543() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %814 = @func_10803() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %815 = @func_10128() /* ty=Tensor[(8, 8, 6), float64] */;
  %816 = %814.3;
  (%815, %816)
}

def @func_4769() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %817 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %818 = %817.0;
  %819 = @func_3371() /* ty=Tensor[(8, 8, 6), float64] */;
  (%818, %819)
}

def @func_9962() -> Tensor[(8, 8, 6), float64] {
  %820 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %820.0
}

def @func_15209() -> Tensor[(8, 8, 6), float64] {
  %821 = @func_1869() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %821.0
}

def @func_13315() -> (Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64]) {
  %822 = @func_6276() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %823 = @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */;
  %824 = %822.1;
  %825 = @func_12890() /* ty=Tensor[(16, 14, ?), bool] */;
  %826 = %823.1;
  %827 = @func_5461() /* ty=Tensor[(8, 8, 6), float64] */;
  (%824, %825, %826, %827)
}

def @func_11809(%var_11783: float64, %var_11784: Tensor[(1, 13, 1), float64], %var_11793: Tensor[(624), uint64]) -> (Tensor[(1, 13, 1), float64], Tensor[(624), uint64], Tensor[(1, 13, 384), int32]) {
  %828 = cast(%var_11783, dtype="float64") /* ty=float64 */;
  %829 = cast(%var_11784, dtype="float64") /* ty=Tensor[(1, 13, 1), float64] */;
  %830 = cast(%var_11793, dtype="uint64") /* ty=Tensor[(624), uint64] */;
  %831 = reshape(%830, newshape=[624]) /* ty=Tensor[(624), uint64] */;
  %832 = @func_4601(%831) /* ty=(Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(16, 14, 9), float32], Tensor[(8, 8, 6), int32], Tensor[(384), float64], Tensor[(8, 8, 6), float64], Tensor[(624), uint64]) */;
  %833 = %832.5;
  %834 = cast(%833, dtype="int32") /* ty=Tensor[(384), int32] */;
  %835 = cast(%var_11784, dtype="int32") /* ty=Tensor[(1, 13, 1), int32] */;
  %836 = mod(%828, %829) /* ty=Tensor[(1, 13, 1), float64] */;
  %837 = left_shift(%834, %835) /* ty=Tensor[(1, 13, 384), int32] */;
  (%836, %var_11793, %837)
}

def @func_16254(%var_16240: Tensor[(8, 4, 10), float32], %var_16241: Tensor[(8, 4, 10), float32]) -> (Tensor[(8, 4, 10), float32], Tensor[(14, 6, 15), float32]) {
  %838 = cast(%var_16241, dtype="float32") /* ty=Tensor[(8, 4, 10), float32] */;
  %839 = shape_of(%var_16240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%var_16240, dtype="float32") /* ty=Tensor[(8, 4, 10), float32] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %842 = @func_13899() /* ty=(Tensor[(14, 6, 15), float32],) */;
  %843 = mod(%840, %841) /* ty=Tensor[(8, 4, 10), float32] */;
  %844 = %842.0;
  (%843, %844)
}

def @func_11636() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %845 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %846 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %847 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %848 = @func_4670() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %849 = %845.0;
  %850 = %846.0;
  %851 = %847.0;
  %852 = %848.1;
  (%849, %850, %851, %852)
}

def @func_9090() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %853 = @func_7907() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %854 = @func_8479() /* ty=Tensor[(8, 8, 6), float64] */;
  %855 = %853.0;
  (%854, %855)
}

def @func_5390() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %856 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %857 = @func_2446() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %858 = %856.1;
  %859 = @func_2779() /* ty=Tensor[(8, 8, 6), float64] */;
  %860 = %857.1;
  (%858, %859, %860)
}

def @func_1721() -> Tensor[(8, 8, 6), float64] {
  %861 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %861.1
}

def @func_6326() -> (Tensor[(8, 8, 6), float64],) {
  %862 = @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %863 = %862.0;
  (%863,)
}

def @func_8149() -> (Tensor[(8, 8, 6), float64],) {
  %864 = @func_6212() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
  %865 = %864.4;
  (%865,)
}

def @func_8267() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
  %866 = @func_6009() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) */;
  %867 = @func_7573() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %868 = %866.1;
  %869 = %867.0;
  (%868, %869)
}

def @func_9634(%var_9617: Tensor[(12, 12, 11), float64]) -> (Tensor[(12, 12, 11), bool], Tensor[(8, 8, 6), float64]) {
  %870 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 12, 11), float64] */, dtype="bool") /* ty=Tensor[(12, 12, 11), bool] */;
  %871 = shape_of(%var_9617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%var_9617, dtype="bool") /* ty=Tensor[(12, 12, 11), bool] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %874 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %875 = greater(%872, %873) /* ty=Tensor[(12, 12, 11), bool] */;
  %876 = %874.1;
  (%875, %876)
}

def @func_1130() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %877 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %878 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  %879 = %877.0;
  (%878, %879)
}

def @func_12827(%var_12803: Tensor[(1, 91), float64], %var_12804: Tensor[(364), float64], %var_12805: Tensor[(546), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(8, 8, 6), float32], Tensor[(364), float64], Tensor[(546), float64], Tensor[(1, 91), float64]) {
  %880 = @func_6827() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %881 = cast(%var_12803, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
  %882 = cast(%var_12804, dtype="float64") /* ty=Tensor[(364), float64] */;
  %883 = cast(%var_12805, dtype="float64") /* ty=Tensor[(546), float64] */;
  %884 = reshape(%881, newshape=[1, 7, 13]) /* ty=Tensor[(1, 7, 13), float64] */;
  %885 = reshape(%882, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), float64] */;
  %886 = reshape(%883, newshape=[6, 7, 13]) /* ty=Tensor[(6, 7, 13), float64] */;
  %887 = @func_789(%884, %885, %886) /* ty=(Tensor[(4, 7, 13), float64], Tensor[(6, 7, 13), float32], Tensor[(8, 8, 6), int16], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float32]) */;
  %888 = cast(%var_12803, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
  %889 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  %890 = %880.1;
  %891 = %887.3;
  %892 = atan(%888) /* ty=Tensor[(1, 91), float64] */;
  (%889, %890, %891, %var_12804, %var_12805, %892)
}

def @func_1167() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) {
  %893 = @func_1130() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %894 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %895 = %894.0;
  %896 = cast(%895, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  %897 = %893.0;
  %898 = acos(%896) /* ty=Tensor[(16, 14, 1), float32] */;
  (%897, %898)
}

def @func_4217() -> (Tensor[(16, 14, 9), float32], Tensor[(16, 14, 2016), float32], Tensor[(16, 14, 2016), uint8]) {
  %899 = cast(meta[relay.Constant][23] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %900 = reshape(%899, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %901 = @func_2123() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %902 = %901.0;
  %903 = cast(meta[relay.Constant][23] /* ty=Tensor[(2016), float64] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %904 = cast(%902, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  %905 = cast(%902, dtype="uint8") /* ty=Tensor[(16, 14, 1), uint8] */;
  %906 = cast(meta[relay.Constant][23] /* ty=Tensor[(2016), float64] */, dtype="uint8") /* ty=Tensor[(2016), uint8] */;
  %907 = @func_3222(%900) /* ty=Tensor[(16, 14, 9), float32] */;
  %908 = floor_mod(%903, %904) /* ty=Tensor[(16, 14, 2016), float32] */;
  %909 = left_shift(%905, %906) /* ty=Tensor[(16, 14, 2016), uint8] */;
  (%907, %908, %909)
}

def @func_15732() -> Tensor[(16, 14, 1), float64] {
  %910 = @func_11636() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %910.2
}

def @func_15929() -> Tensor[(8, 8, 6), float64] {
  @func_7218() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_13818() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %911 = @func_1130() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %912 = @func_5675() /* ty=Tensor[(8, 8, 6), float64] */;
  %913 = %911.0;
  (%912, %913)
}

def @func_7218() -> Tensor[(8, 8, 6), float64] {
  @func_2779() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_7866() -> Tensor[(8, 8, 6), float64] {
  @func_5461() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_11297() -> (Tensor[(16, 14, 1), float64],) {
  %914 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %915 = %914.0;
  (%915,)
}

def @func_6651() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) {
  %916 = @func_5648() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %917 = %916.4;
  %918 = @func_3563() /* ty=Tensor[(8, 8, 6), int64] */;
  (%917, %918)
}

def @func_14481() -> (Tensor[(16, 14, 1), float32],) {
  %919 = @func_11695() /* ty=Tensor[(16, 14, 1), float32] */;
  (%919,)
}

def @func_14884() -> Tensor[(8, 8, 6), float64] {
  %920 = @func_8158() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %920.0
}

def @func_2123() -> (Tensor[(16, 14, 1), float64],) {
  %921 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %922 = %921.0;
  (%922,)
}

def @func_8918() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %923 = @func_7057() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %924 = @func_2902() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %925 = %923.0;
  %926 = %924.0;
  (%925, %926)
}

def @func_14362(%var_14335: Tensor[(6, 13, 13), float32], %var_14355: Tensor[(6, 13, 13), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int32], Tensor[(6, 13, 13), int64]) {
  %927 = @func_10454() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %928 = @func_8918() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %929 = @func_13172() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int32]) */;
  %930 = cast(%var_14335, dtype="float32") /* ty=Tensor[(6, 13, 13), float32] */;
  %931 = rsqrt(%930) /* ty=Tensor[(6, 13, 13), float32] */;
  %932 = cast(%var_14335, dtype="float64") /* ty=Tensor[(6, 13, 13), float64] */;
  %933 = shape_of(%931, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%931, dtype="float64") /* ty=Tensor[(6, 13, 13), float64] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %936 = power(%934, %935) /* ty=Tensor[(6, 13, 13), float64] */;
  %937 = cast(%var_14355, dtype="int64") /* ty=Tensor[(6, 13, 13), int64] */;
  %938 = shape_of(%936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%936, dtype="int64") /* ty=Tensor[(6, 13, 13), int64] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %941 = %927.1;
  %942 = %928.0;
  %943 = %929.1;
  %944 = multiply(%939, %940) /* ty=Tensor[(6, 13, 13), int64] */;
  (%941, %942, %943, %944)
}

def @func_2178() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %945 = @func_1869() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %946 = @func_1846() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %947 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %948 = @func_1377() /* ty=Tensor[(16, 14, 1), float64] */;
  %949 = cast(%948, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  %950 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %951 = %945.0;
  %952 = %946.2;
  %953 = %947.0;
  %954 = sinh(%949) /* ty=Tensor[(16, 14, 1), float32] */;
  %955 = %950.0;
  %956 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  (%951, %952, %953, %954, %955, %956)
}

def @func_3455() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %957 = @func_3326() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %958 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %959 = %957.0;
  %960 = %958.0;
  (%959, %960)
}

def @func_3873() -> (Tensor[(8, 8, 6), int64],) {
  %961 = @func_3059() /* ty=Tensor[(8, 8, 6), int64] */;
  (%961,)
}

def @func_12305(%var_12302: Tensor[(5, 5, 5), float32]) -> (Tensor[(5, 5, 5), float32],) {
  %962 = cast(%var_12302, dtype="float32") /* ty=Tensor[(5, 5, 5), float32] */;
  %963 = log2(%962) /* ty=Tensor[(5, 5, 5), float32] */;
  (%963,)
}

def @func_519() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %964 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %965 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %966 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %967 = %964.1;
  %968 = %965.0;
  %969 = %966.0;
  (%967, %968, %969)
}

def @func_14373() -> Tensor[(8, 8, 6), float64] {
  %970 = @func_6980() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
  %970.1
}

def @func_14058() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) {
  %971 = @func_13133() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %972 = @func_12972() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %973 = %971.0;
  %974 = %972.0;
  (%973, %974)
}

def @func_3677(%var_3667: Tensor[(8, 8, 6), float64]) -> Tensor[(8, 8, 6), int32] {
  %975 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
  %976 = cast(%var_3667, dtype="int32") /* ty=Tensor[(8, 8, 6), int32] */;
  %977 = shape_of(%975, dtype="int32") /* ty=Tensor[(3), int32] */;
  %978 = cast(%975, dtype="int32") /* ty=Tensor[(8, 8, 6), int32] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  minimum(%978, %979) /* ty=Tensor[(8, 8, 6), int32] */
}

def @func_2639() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) {
  %980 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  %981 = cast(%980, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %982 = reshape(%981, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %983 = @func_313(%982) /* ty=(Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %984 = @func_1635() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %985 = %984.0;
  %986 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 8, 6), float64] */, dtype="bool") /* ty=Tensor[(8, 8, 6), bool] */;
  %987 = shape_of(%985, dtype="int32") /* ty=Tensor[(3), int32] */;
  %988 = cast(%985, dtype="bool") /* ty=Tensor[(8, 8, 6), bool] */;
  %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %990 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %991 = @func_2067() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %992 = %983.2;
  %993 = less(%988, %989) /* ty=Tensor[(8, 8, 6), bool] */;
  %994 = %990.2;
  %995 = %991.0;
  (%980, %992, %993, %994, %995)
}

def @func_10470() -> (Tensor[(8, 8, 6), float64],) {
  %996 = @func_7621() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %997 = %996.0;
  (%997,)
}

def @func_16994() -> (Tensor[(16, 14, 1), float64], Tensor[(16, 14, 1), float64]) {
  %998 = @func_12948() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(16, 14, ?), bool]) */;
  %999 = @func_8368() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %1000 = %998.0;
  %1001 = %999.2;
  (%1000, %1001)
}

def @func_1895() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
  %1002 = @func_423() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), uint64]) */;
  %1003 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1004 = %1002.0;
  %1005 = %1003.0;
  (%1004, %1005)
}

def @func_12574(%var_12507: Tensor[(13, 4, 14), uint64], %var_12508: Tensor[(13, 4, 14), uint64], %var_12557: Tensor[(13, 4, 14), float32]) -> (Tensor[(13, 4, 14), uint64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(13, 4, 14), int16], Tensor[(16, 14, 1), float64], Tensor[(13, 4, 14), bool]) {
  %1006 = cast(%var_12508, dtype="uint64") /* ty=Tensor[(13, 4, 14), uint64] */;
  %1007 = shape_of(%var_12507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1008 = cast(%var_12507, dtype="uint64") /* ty=Tensor[(13, 4, 14), uint64] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1010 = @func_11780() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1011 = cast(%var_12507, dtype="int16") /* ty=Tensor[(13, 4, 14), int16] */;
  %1012 = shape_of(%var_12508, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1013 = cast(%var_12508, dtype="int16") /* ty=Tensor[(13, 4, 14), int16] */;
  %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1015 = @func_12088() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1016 = cast(%var_12508, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
  %1017 = shape_of(%var_12507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1018 = cast(%var_12507, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
  %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1020 = bitwise_or(%1018, %1019) /* ty=Tensor[(13, 4, 14), uint8] */;
  %1021 = cast(%1020, dtype="float32") /* ty=Tensor[(13, 4, 14), float32] */;
  %1022 = tan(%1021) /* ty=Tensor[(13, 4, 14), float32] */;
  %1023 = cast(%var_12557, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %1024 = shape_of(%1022, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1025 = cast(%1022, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %1026 = dyn.reshape(%1023, %1024, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1027 = right_shift(%1008, %1009) /* ty=Tensor[(13, 4, 14), uint64] */;
  %1028 = %1010.0;
  %1029 = @func_8479() /* ty=Tensor[(8, 8, 6), float64] */;
  %1030 = @func_4847() /* ty=Tensor[(8, 8, 6), float32] */;
  %1031 = subtract(%1013, %1014) /* ty=Tensor[(13, 4, 14), int16] */;
  %1032 = %1015.0;
  %1033 = equal(%1025, %1026) /* ty=Tensor[(13, 4, 14), bool] */;
  (%1027, %1028, %1029, %1030, %1031, %1032, %1033)
}

def @func_2067() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1034 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %1035 = @func_1288() /* ty=(Tensor[(8, 8, 6), int32], Tensor[(8, 8, 6), float64]) */;
  %1036 = @func_423() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), uint64]) */;
  %1037 = %1034.1;
  %1038 = cast(%1037, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %1039 = reshape(%1038, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %1040 = @func_1563(%1039) /* ty=(Tensor[(8, 8, 6), int16], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1041 = @func_1972() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1042 = %1035.1;
  %1043 = %1036.0;
  %1044 = %1040.1;
  %1045 = %1041.1;
  (%1037, %1042, %1043, %1044, %1045)
}

def @func_3957() -> (Tensor[(8, 8, 6), int64],) {
  %1046 = @func_3059() /* ty=Tensor[(8, 8, 6), int64] */;
  (%1046,)
}

def @func_14295() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) {
  %1047 = @func_9470() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1048 = %1047.0;
  %1049 = @func_10743() /* ty=Tensor[(16, 14, ?), bool] */;
  %1050 = @func_837() /* ty=Tensor[(8, 8, 6), float64] */;
  (%1048, %1049, %1050)
}

def @func_8678(%var_8664: int32, %var_8665: Tensor[(2, 4, 6), int32]) -> (Tensor[(2, 4, 6), float32],) {
  %1051 = cast(%var_8664, dtype="int32") /* ty=int32 */;
  %1052 = cast(%var_8665, dtype="int32") /* ty=Tensor[(2, 4, 6), int32] */;
  %1053 = bitwise_xor(%1051, %1052) /* ty=Tensor[(2, 4, 6), int32] */;
  %1054 = cast(%var_8665, dtype="float32") /* ty=Tensor[(2, 4, 6), float32] */;
  %1055 = shape_of(%1053, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1056 = cast(%1053, dtype="float32") /* ty=Tensor[(2, 4, 6), float32] */;
  %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1058 = mod(%1056, %1057) /* ty=Tensor[(2, 4, 6), float32] */;
  (%1058,)
}

def @func_13967() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) {
  %1059 = @func_12670() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1060 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1061 = @func_8479() /* ty=Tensor[(8, 8, 6), float64] */;
  %1062 = cast(%1061, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
  %1063 = reshape(%1062, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float32] */;
  %1064 = @func_2123() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1065 = %1059.0;
  %1066 = %1060.0;
  %1067 = @func_900(%1063) /* ty=Tensor[(8, 8, 6), int64] */;
  %1068 = %1064.0;
  (%1061, %1065, %1066, %1067, %1068)
}

def @func_2524() -> (Tensor[(8, 8, 6), float64],) {
  %1069 = @func_2178() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %1070 = %1069.0;
  (%1070,)
}

def @func_7266() -> (Tensor[(16, 14, 1), float64],) {
  %1071 = @func_1008() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1072 = %1071.0;
  (%1072,)
}

def @func_12712() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1073 = @func_2880() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1074 = %1073.0;
  %1075 = @func_12104() /* ty=Tensor[(8, 8, 6), float64] */;
  (%1074, %1075)
}

def @func_11267() -> (Tensor[(16, 14, 1), float64],) {
  %1076 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1077 = %1076.0;
  (%1077,)
}

def @func_8783(%var_8720: Tensor[(16, 14, 7), float64]) -> (Tensor[(16, 14, 7), int32], Tensor[(8, 8, 6), float64]) {
  %1078 = @func_4892() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1079 = %1078.0;
  %1080 = cast(%1079, dtype="int32") /* ty=Tensor[(16, 14, 1), int32] */;
  %1081 = cast(%var_8720, dtype="int32") /* ty=Tensor[(16, 14, 7), int32] */;
  %1082 = @func_3455() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1083 = add(%1080, %1081) /* ty=Tensor[(16, 14, 7), int32] */;
  %1084 = %1082.0;
  (%1083, %1084)
}

def @func_150() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) {
  %1085 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %1086 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %1087 = atan(%1086) /* ty=Tensor[(8, 8, 6), float64] */;
  %1088 = cast(%1087, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
  %1089 = atanh(%1085) /* ty=Tensor[(8, 8, 6), float64] */;
  %1090 = acos(%1088) /* ty=Tensor[(8, 8, 6), float32] */;
  (%1089, %1090)
}

def @func_14382() -> (Tensor[(8, 8, 6), float64],) {
  %1091 = @func_9962() /* ty=Tensor[(8, 8, 6), float64] */;
  (%1091,)
}

def @func_5675() -> Tensor[(8, 8, 6), float64] {
  %1092 = @func_2639() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %1092.3
}

def @func_14642(%var_14627: Tensor[(6, 9, 14), float32], %var_14628: Tensor[(6, 9, 14), float32]) -> (Tensor[(6, 9, 14), float32], Tensor[(6, 9, 14), float32]) {
  %1093 = cast(%var_14628, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
  %1094 = shape_of(%var_14627, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1095 = cast(%var_14627, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
  %1096 = dyn.reshape(%1093, %1094, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1097 = cast(%var_14627, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
  %1098 = divide(%1095, %1096) /* ty=Tensor[(6, 9, 14), float32] */;
  %1099 = exp(%1097) /* ty=Tensor[(6, 9, 14), float32] */;
  (%1098, %1099)
}

def @func_13586(%var_13563: Tensor[(1, 624), bool]) -> (Tensor[(8, 8, 6), float32], Tensor[(16, 14, 7), bool], Tensor[(405), bool], Tensor[(1568), float64], Tensor[(?, 624), float32], Tensor[(?, 624), float32], Tensor[(8, 8, 6), float64]) {
  %1100 = @func_6009() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) */;
  %1101 = cast(meta[relay.Constant][26] /* ty=Tensor[(405), bool] */, dtype="bool") /* ty=Tensor[(405), bool] */;
  %1102 = cast(meta[relay.Constant][26] /* ty=Tensor[(405), bool] */, dtype="bool") /* ty=Tensor[(405), bool] */;
  %1103 = cast(meta[relay.Constant][27] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %1104 = reshape(%1101, newshape=[9, 9, 5]) /* ty=Tensor[(9, 9, 5), bool] */;
  %1105 = reshape(%1102, newshape=[9, 9, 5]) /* ty=Tensor[(9, 9, 5), bool] */;
  %1106 = reshape(%1103, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %1107 = @func_11156(%1104, %1105, %1106) /* ty=(Tensor[(9, 9, 5), bool], Tensor[(16, 14, 7), bool], Tensor[(1568), float64]) */;
  %1108 = @func_13528() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(15, 2, 15), float64], Tensor[(1, 624), uint64], Tensor[(16, 14, 1), float64]) */;
  %1109 = %1108.2;
  %1110 = cast(%1109, dtype="float64") /* ty=Tensor[(1, 624), float64] */;
  %1111 = cos(%1110) /* ty=Tensor[(1, 624), float64] */;
  %1112 = cast(%1109, dtype="bool") /* ty=Tensor[(1, 624), bool] */;
  %1113 = shape_of(%1111, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1114 = cast(%1111, dtype="bool") /* ty=Tensor[(1, 624), bool] */;
  %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1116 = less(%1114, %1115) /* ty=Tensor[(?, 624), bool] */;
  %1117 = cast(%var_13563, dtype="float32") /* ty=Tensor[(1, 624), float32] */;
  %1118 = shape_of(%1116, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1119 = cast(%1116, dtype="float32") /* ty=Tensor[(?, 624), float32] */;
  %1120 = dyn.reshape(%1117, %1118, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1121 = cast(%1116, dtype="float64") /* ty=Tensor[(?, 624), float64] */;
  %1122 = acos(%1121) /* ty=Tensor[(?, 624), float64] */;
  %1123 = cast(%1122, dtype="float32") /* ty=Tensor[(?, 624), float32] */;
  %1124 = @func_11516() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1125 = %1100.1;
  %1126 = %1107.1;
  %1127 = add(%1119, %1120) /* ty=Tensor[(?, 624), float32] */;
  %1128 = exp(%1123) /* ty=Tensor[(?, 624), float32] */;
  %1129 = %1124.0;
  (%1125, %1126, meta[relay.Constant][26] /* ty=Tensor[(405), bool] */, meta[relay.Constant][27] /* ty=Tensor[(1568), float64] */, %1127, %1128, %1129)
}

def @func_12348() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1130 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %1131 = %1130.0;
  %1132 = @func_11889() /* ty=Tensor[(8, 8, 6), float64] */;
  %1133 = @func_11889() /* ty=Tensor[(8, 8, 6), float64] */;
  (%1131, %1132, %1133)
}

def @func_7057() -> (Tensor[(8, 8, 6), float64],) {
  %1134 = @func_1518() /* ty=Tensor[(8, 8, 6), float64] */;
  (%1134,)
}

def @func_12503() -> Tensor[(8, 8, 6), float64] {
  %1135 = @func_9470() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1135.0
}

def @func_7887(%var_7871: Tensor[(12, 15, 16), int16]) -> Tensor[(12, 15, 16), int16] {
  %1136 = cast(meta[relay.Constant][28] /* ty=Tensor[(12, 15, 16), int16] */, dtype="int16") /* ty=Tensor[(12, 15, 16), int16] */;
  %1137 = shape_of(%var_7871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1138 = cast(%var_7871, dtype="int16") /* ty=Tensor[(12, 15, 16), int16] */;
  %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  multiply(%1138, %1139) /* ty=Tensor[(12, 15, 16), int16] */
}

def @func_3696(%var_3693: Tensor[(16, 12, 14), float32]) -> Tensor[(16, 12, 14), float32] {
  %1140 = cast(%var_3693, dtype="float32") /* ty=Tensor[(16, 12, 14), float32] */;
  sinh(%1140) /* ty=Tensor[(16, 12, 14), float32] */
}

def @func_13899() -> (Tensor[(14, 6, 15), float32],) {
  %1141 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 6, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %1142 = exp(%1141) /* ty=Tensor[(14, 6, 15), float32] */;
  (%1142,)
}

def @func_14545() -> Tensor[(8, 8, 6), float64] {
  @func_1721() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_9375(%var_9347: Tensor[(1, 2688), float32]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(1, 2688), float32], Tensor[(8, 8, 6), float64]) {
  %1143 = cast(%var_9347, dtype="float32") /* ty=Tensor[(1, 2688), float32] */;
  %1144 = reshape(%1143, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %1145 = @func_8519(%1144) /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32]) */;
  %1146 = @func_3747() /* ty=Tensor[(8, 8, 6), float64] */;
  %1147 = %1145.2;
  %1148 = @func_3991() /* ty=Tensor[(8, 8, 6), float64] */;
  (%1146, %1147, %var_9347, %1148)
}

def @func_9410(%var_9387: Tensor[(9, 5, 6), float64], %var_9388: Tensor[(9, 5, 6), float64]) -> Tensor[(9, 5, 6), float64] {
  %1149 = cast(%var_9388, dtype="float64") /* ty=Tensor[(9, 5, 6), float64] */;
  %1150 = shape_of(%var_9387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1151 = cast(%var_9387, dtype="float64") /* ty=Tensor[(9, 5, 6), float64] */;
  %1152 = dyn.reshape(%1149, %1150, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%1151, %1152) /* ty=Tensor[(9, 5, 6), float64] */
}

def @func_11889() -> Tensor[(8, 8, 6), float64] {
  %1153 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %1153.1
}

def @func_5505() -> Tensor[(8, 8, 6), float64] {
  @func_2779() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_13322() -> (Tensor[(8, 8, 6), float64],) {
  %1154 = @func_8170() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1155 = %1154.0;
  (%1155,)
}

def @func_13418() -> Tensor[(16, 14, 1), float64] {
  %1156 = @func_10691() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32], Tensor[(16, 14, 1), float64]) */;
  %1156.3
}

def @func_11156(%var_11135: Tensor[(9, 9, 5), bool], %var_11136: Tensor[(9, 9, 5), bool], %var_11152: Tensor[(1568), float64]) -> (Tensor[(9, 9, 5), bool], Tensor[(16, 14, 7), bool], Tensor[(1568), float64]) {
  %1157 = cast(%var_11136, dtype="bool") /* ty=Tensor[(9, 9, 5), bool] */;
  %1158 = shape_of(%var_11135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1159 = cast(%var_11135, dtype="bool") /* ty=Tensor[(9, 9, 5), bool] */;
  %1160 = dyn.reshape(%1157, %1158, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1161 = cast(%var_11152, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %1162 = reshape(%1161, newshape=[16, 14, 7]) /* ty=Tensor[(16, 14, 7), float64] */;
  %1163 = @func_4044(%1162) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 7), bool]) */;
  %1164 = logical_and(%1159, %1160) /* ty=Tensor[(9, 9, 5), bool] */;
  %1165 = %1163.1;
  (%1164, %1165, %var_11152)
}

def @func_11357() -> Tensor[(8, 8, 6), float64] {
  %1166 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1166.0
}

def @func_10591(%var_10580: Tensor[(2016), float64]) -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2016), float64], Tensor[(16, 14, 1), float64]) {
  %1167 = @func_6426() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %1168 = @func_1130() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1169 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1170 = cast(%var_10580, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1171 = reshape(%1170, newshape=[14, 144]) /* ty=Tensor[(14, 144), float64] */;
  %1172 = @func_9864(%1171) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(14, 144), uint16]) */;
  %1173 = @func_4992() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %1174 = %1167.0;
  %1175 = %1168.0;
  %1176 = %1169.0;
  %1177 = %1172.0;
  %1178 = %1173.0;
  (%1174, %1175, %1176, %1177, %var_10580, %1178)
}

def @func_6260() -> (Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) {
  %1179 = @func_5144() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1180 = %1179.0;
  %1181 = cast(%1180, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  %1182 = sigmoid(%1181) /* ty=Tensor[(16, 14, 1), float32] */;
  %1183 = cast(%1180, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %1184 = shape_of(%1182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1185 = cast(%1182, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %1186 = dyn.reshape(%1183, %1184, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1187 = @func_2902() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1188 = not_equal(%1185, %1186) /* ty=Tensor[(16, 14, ?), bool] */;
  %1189 = %1187.0;
  (%1188, %1189)
}

def @func_16819() -> (Tensor[(16, 14, 1), float64],) {
  %1190 = @func_6009() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) */;
  %1191 = %1190.0;
  (%1191,)
}

def @func_3747() -> Tensor[(8, 8, 6), float64] {
  %1192 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1192.0
}

def @func_11986() -> Tensor[(8, 8, 6), int64] {
  %1193 = @func_3957() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %1193.0
}

def @func_16660() -> (Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), bool]) {
  %1194 = @func_3957() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %1195 = @func_11297() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1196 = @func_2639() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %1197 = %1194.0;
  %1198 = %1195.0;
  %1199 = %1196.2;
  (%1197, %1198, %1199)
}

def @func_2337(%var_2280: Tensor[(2, 11, 15), float32]) -> (Tensor[(2, 11, 15), bool], Tensor[(2, 11, 15), int8], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1200 = cast(%var_2280, dtype="bool") /* ty=Tensor[(2, 11, 15), bool] */;
  %1201 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(2, 11, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1202 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 11, 15), float32] */, dtype="bool") /* ty=Tensor[(2, 11, 15), bool] */;
  %1203 = dyn.reshape(%1200, %1201, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1204 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 11, 15), float32] */, dtype="int8") /* ty=Tensor[(2, 11, 15), int8] */;
  %1205 = shape_of(%var_2280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1206 = cast(%var_2280, dtype="int8") /* ty=Tensor[(2, 11, 15), int8] */;
  %1207 = dyn.reshape(%1204, %1205, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1208 = @func_1869() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1209 = @func_1635() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1210 = greater(%1202, %1203) /* ty=Tensor[(2, 11, 15), bool] */;
  %1211 = subtract(%1206, %1207) /* ty=Tensor[(2, 11, 15), int8] */;
  %1212 = %1208.0;
  %1213 = %1209.0;
  (%1210, %1211, %1212, %1213)
}

def @func_9748(%var_9721: Tensor[(6, 7, 12), int64], %var_9722: Tensor[(6, 7, 12), int64]) -> Tensor[(6, 7, 12), float32] {
  %1214 = cast(%var_9722, dtype="int64") /* ty=Tensor[(6, 7, 12), int64] */;
  %1215 = shape_of(%var_9721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1216 = cast(%var_9721, dtype="int64") /* ty=Tensor[(6, 7, 12), int64] */;
  %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1218 = bitwise_xor(%1216, %1217) /* ty=Tensor[(6, 7, 12), int64] */;
  %1219 = cast(%1218, dtype="float32") /* ty=Tensor[(6, 7, 12), float32] */;
  cosh(%1219) /* ty=Tensor[(6, 7, 12), float32] */
}

def @func_12948() -> (Tensor[(16, 14, 1), float64], Tensor[(16, 14, ?), bool]) {
  %1220 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1221 = %1220.0;
  %1222 = @func_10743() /* ty=Tensor[(16, 14, ?), bool] */;
  (%1221, %1222)
}

def @func_17266() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1223 = @func_7037() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1224 = @func_5390() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1225 = %1223.0;
  %1226 = %1224.0;
  (%1225, %1226)
}

def @func_14145() -> (Tensor[(8, 8, 6), float64],) {
  %1227 = @func_12429() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */;
  %1228 = %1227.2;
  (%1228,)
}

def @func_10272() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1229 = @func_2639() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %1230 = @func_9470() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1231 = %1229.1;
  %1232 = %1230.0;
  (%1231, %1232)
}

def @func_10147() -> (Tensor[(8, 8, 6), float64],) {
  %1233 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %1234 = %1233.0;
  (%1234,)
}

def @func_3023() -> (Tensor[(16, 14, 1), float64],) {
  %1235 = @func_1008() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1236 = %1235.0;
  (%1236,)
}

def @func_15847(%var_15836: Tensor[(16, 14, 10), bool]) -> (Tensor[(16, 14, 10), uint32], Tensor[(8, 8, 6), float64]) {
  %1237 = @func_12429() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */;
  %1238 = %1237.1;
  %1239 = cast(%1238, dtype="uint32") /* ty=Tensor[(16, 14, ?), uint32] */;
  %1240 = cast(%var_15836, dtype="uint32") /* ty=Tensor[(16, 14, 10), uint32] */;
  %1241 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1242 = left_shift(%1239, %1240) /* ty=Tensor[(16, 14, 10), uint32] */;
  %1243 = %1241.0;
  (%1242, %1243)
}

def @func_15911() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %1244 = @func_14382() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1245 = @func_2880() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1246 = @func_8631() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1247 = %1246.0;
  %1248 = cast(%1247, dtype="float64") /* ty=Tensor[(16, 14, 1), float64] */;
  %1249 = %1244.0;
  %1250 = %1245.1;
  %1251 = erf(%1248) /* ty=Tensor[(16, 14, 1), float64] */;
  (%1249, %1250, %1251)
}

def @func_1518() -> Tensor[(8, 8, 6), float64] {
  @func_837() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_1846() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1252 = @func_1130() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1253 = @func_1635() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1254 = %1252.0;
  %1255 = @func_1721() /* ty=Tensor[(8, 8, 6), float64] */;
  %1256 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  %1257 = %1253.0;
  (%1254, %1255, %1256, %1257)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3326() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %0 = @func_2902() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1 = @func_1008() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %2 = %0.0;
  %3 = %1.0;
  (%2, %3)
}

def @func_7703(%var_7690: Tensor[(8, 8, 7), uint8], %var_7691: Tensor[(8, 8, 7), uint8]) -> Tensor[(8, 8, 7), uint8] {
  %4 = cast(%var_7691, dtype="uint8") /* ty=Tensor[(8, 8, 7), uint8] */;
  %5 = shape_of(%var_7690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%var_7690, dtype="uint8") /* ty=Tensor[(8, 8, 7), uint8] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%6, %7) /* ty=Tensor[(8, 8, 7), uint8] */
}

def @func_11518() -> (Tensor[(8, 8, 6), float64],) {
  @func_11516() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_12479() -> (Tensor[(8, 8, 6), float64],) {
  @func_12477() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_315(%var_314: Tensor[(8, 8, 6), float64]) -> (Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
  %23 = fn (%var_260: Tensor[(8, 8, 6), float64]) -> (Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
    %8 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %9 = %8.1;
    %10 = cast(%var_260, dtype="bool") /* ty=Tensor[(8, 8, 6), bool] */;
    %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
    %12 = cast(%9, dtype="bool") /* ty=Tensor[(8, 8, 6), bool] */;
    %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %14 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
    %15 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %16 = cast(%9, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
    %17 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %18 = not_equal(%12, %13) /* ty=Tensor[(8, 8, 6), bool] */;
    %19 = %14.0;
    %20 = %15.1;
    %21 = log10(%16) /* ty=Tensor[(8, 8, 6), float32] */;
    %22 = %17.1;
    (%18, %19, %20, %21, %22)
  };
  %23(%var_314) /* ty=(Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */
}

def @func_13789() -> (Tensor[(8, 8, 6), int64],) {
  %26 = fn () -> (Tensor[(8, 8, 6), int64],) {
    %24 = @func_12045() /* ty=(Tensor[(8, 8, 6), int64],) */;
    %25 = %24.0;
    (%25,)
  };
  %26() /* ty=(Tensor[(8, 8, 6), int64],) */
}

def @func_2995(%var_2993: Tensor[(8, 8, 6), float64]) -> (Tensor[(8, 8, 6), int8],) {
  @func_2992(%var_2993) /* ty=(Tensor[(8, 8, 6), int8],) */
}

def @func_12069() -> (Tensor[(8, 8, 6), float64],) {
  @func_12067() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_10274() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_10272() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_1167() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) {
  %27 = @func_1130() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %28 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %29 = %28.0;
  %30 = cast(%29, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  %31 = %27.0;
  %32 = acos(%30) /* ty=Tensor[(16, 14, 1), float32] */;
  (%31, %32)
}

def @func_6276() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) {
  %33 = @func_5390() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %34 = @func_2067() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %35 = %33.1;
  %36 = %34.0;
  (%35, %36)
}

def @func_3958() -> (Tensor[(8, 8, 6), int64],) {
  %38 = fn () -> (Tensor[(8, 8, 6), int64],) {
    %37 = @func_3059() /* ty=Tensor[(8, 8, 6), int64] */;
    (%37,)
  };
  %38() /* ty=(Tensor[(8, 8, 6), int64],) */
}

def @func_2699() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) {
  @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */
}

def @func_3141() -> (Tensor[(8, 8, 6), float64],) {
  @func_3139() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_10692() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32], Tensor[(16, 14, 1), float64]) {
  %47 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32], Tensor[(16, 14, 1), float64]) {
    %39 = @func_7573() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %40 = cast(meta[relay.Constant][0] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %41 = reshape(%40, newshape=[1, 2688]) /* ty=Tensor[(1, 2688), float32] */;
    %42 = @func_9375(%41) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(1, 2688), float32], Tensor[(8, 8, 6), float64]) */;
    %43 = @func_3023() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %44 = %39.0;
    %45 = %42.1;
    %46 = %43.0;
    (%44, %45, meta[relay.Constant][0] /* ty=Tensor[(2688), float32] */, %46)
  };
  %47() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32], Tensor[(16, 14, 1), float64]) */
}

def @func_11696() -> Tensor[(16, 14, 1), float32] {
  %49 = fn () -> Tensor[(16, 14, 1), float32] {
    %48 = @func_6827() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
    %48.1
  };
  %49() /* ty=Tensor[(16, 14, 1), float32] */
}

def @func_12067() -> (Tensor[(8, 8, 6), float64],) {
  %50 = @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %51 = %50.0;
  (%51,)
}

def @func_12891() -> Tensor[(16, 14, ?), bool] {
  %53 = fn () -> Tensor[(16, 14, ?), bool] {
    %52 = @func_12429() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */;
    %52.1
  };
  %53() /* ty=Tensor[(16, 14, ?), bool] */
}

def @func_10527() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %58 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
    %54 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %55 = @func_9090() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
    %56 = %54.1;
    %57 = %55.1;
    (%56, %57)
  };
  %58() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */
}

def @func_16008() -> Tensor[(8, 8, 6), float64] {
  @func_16006() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_5066() -> (Tensor[(8, 8, 6), float64],) {
  @func_5064() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_2068() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %71 = fn () -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %59 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
    %60 = @func_1288() /* ty=(Tensor[(8, 8, 6), int32], Tensor[(8, 8, 6), float64]) */;
    %61 = @func_423() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), uint64]) */;
    %62 = %59.1;
    %63 = cast(%62, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
    %64 = reshape(%63, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
    %65 = @func_1563(%64) /* ty=(Tensor[(8, 8, 6), int16], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %66 = @func_1972() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %67 = %60.1;
    %68 = %61.0;
    %69 = %65.1;
    %70 = %66.1;
    (%62, %67, %68, %69, %70)
  };
  %71() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_8554() -> (Tensor[(8, 8, 6), int64],) {
  @func_8552() /* ty=(Tensor[(8, 8, 6), int64],) */
}

def @func_6212() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) {
  %72 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %73 = @func_5039() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %74 = @func_6140() /* ty=Tensor[(8, 8, 6), float64] */;
  %75 = @func_3747() /* ty=Tensor[(8, 8, 6), float64] */;
  %76 = %72.0;
  %77 = @func_3059() /* ty=Tensor[(8, 8, 6), int64] */;
  %78 = %73.0;
  (%74, %75, %76, %77, %78)
}

def @func_16729(%var_16728: Tensor[(1287), float32]) -> (Tensor[(16, 14, 1), float64], Tensor[(11, 9, 13), bool], Tensor[(1287), float32]) {
  %87 = fn (%var_16724: Tensor[(1287), float32]) -> (Tensor[(16, 14, 1), float64], Tensor[(11, 9, 13), bool], Tensor[(1287), float32]) {
    %79 = @func_5144() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %80 = cast(%var_16724, dtype="float32") /* ty=Tensor[(1287), float32] */;
    %81 = cast(%var_16724, dtype="bool") /* ty=Tensor[(1287), bool] */;
    %82 = reshape(%80, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float32] */;
    %83 = reshape(%81, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), bool] */;
    %84 = @func_7328(%82, %83) /* ty=(Tensor[(11, 9, 13), bool], Tensor[(8, 8, 6), int64]) */;
    %85 = %79.0;
    %86 = %84.0;
    (%85, %86, %var_16724)
  };
  %87(%var_16728) /* ty=(Tensor[(16, 14, 1), float64], Tensor[(11, 9, 13), bool], Tensor[(1287), float32]) */
}

def @func_10671(%var_10669: Tensor[(3, 9, 13), float64]) -> (Tensor[(3, 9, 13), float64], Tensor[(2016), float64], Tensor[(2016), float64]) {
  @func_10668(%var_10669) /* ty=(Tensor[(3, 9, 13), float64], Tensor[(2016), float64], Tensor[(2016), float64]) */
}

def @func_11269() -> (Tensor[(16, 14, 1), float64],) {
  @func_11267() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_11735() -> (Tensor[(16, 14, 1), float64],) {
  @func_11733() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_1489() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) {
  %88 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  %89 = cast(%88, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
  %90 = reshape(%89, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float32] */;
  %91 = @func_1377() /* ty=Tensor[(16, 14, 1), float64] */;
  %92 = @func_900(%90) /* ty=Tensor[(8, 8, 6), int64] */;
  (%91, %88, %92)
}

def @func_8785(%var_8784: Tensor[(16, 14, 7), float64]) -> (Tensor[(16, 14, 7), int32], Tensor[(8, 8, 6), float64]) {
  %100 = fn (%var_8720: Tensor[(16, 14, 7), float64]) -> (Tensor[(16, 14, 7), int32], Tensor[(8, 8, 6), float64]) {
    %93 = @func_4892() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %94 = %93.0;
    %95 = cast(%94, dtype="int32") /* ty=Tensor[(16, 14, 1), int32] */;
    %96 = cast(%var_8720, dtype="int32") /* ty=Tensor[(16, 14, 7), int32] */;
    %97 = @func_3455() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %98 = add(%95, %96) /* ty=Tensor[(16, 14, 7), int32] */;
    %99 = %97.0;
    (%98, %99)
  };
  %100(%var_8784) /* ty=(Tensor[(16, 14, 7), int32], Tensor[(8, 8, 6), float64]) */
}

def @func_5403() -> (Tensor[(8, 8, 6), float64],) {
  %103 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %101 = @func_1972() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %102 = %101.1;
    (%102,)
  };
  %103() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_15210() -> Tensor[(8, 8, 6), float64] {
  %105 = fn () -> Tensor[(8, 8, 6), float64] {
    %104 = @func_1869() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %104.0
  };
  %105() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_3873() -> (Tensor[(8, 8, 6), int64],) {
  %106 = @func_3059() /* ty=Tensor[(8, 8, 6), int64] */;
  (%106,)
}

def @func_6426() -> (Tensor[(8, 8, 6), int64],) {
  %107 = @func_3059() /* ty=Tensor[(8, 8, 6), int64] */;
  (%107,)
}

def @func_3024() -> (Tensor[(16, 14, 1), float64],) {
  %110 = fn () -> (Tensor[(16, 14, 1), float64],) {
    %108 = @func_1008() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %109 = %108.0;
    (%109,)
  };
  %110() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_447() -> Tensor[(8, 8, 6), float64] {
  %111 = fn () -> Tensor[(8, 8, 6), float64] {
    @func_353() /* ty=Tensor[(8, 8, 6), float64] */
  };
  %111() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_8552() -> (Tensor[(8, 8, 6), int64],) {
  %112 = @func_7240() /* ty=Tensor[(8, 8, 6), int64] */;
  (%112,)
}

def @func_789(%var_727: Tensor[(1, 7, 13), float64], %var_728: Tensor[(4, 7, 13), float64], %var_736: Tensor[(6, 7, 13), float64]) -> (Tensor[(4, 7, 13), float64], Tensor[(6, 7, 13), float32], Tensor[(8, 8, 6), int16], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float32]) {
  %113 = cast(%var_727, dtype="float64") /* ty=Tensor[(1, 7, 13), float64] */;
  %114 = cast(%var_728, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  %115 = cast(%var_727, dtype="float32") /* ty=Tensor[(1, 7, 13), float32] */;
  %116 = cast(%var_736, dtype="float32") /* ty=Tensor[(6, 7, 13), float32] */;
  %117 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  %118 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  %119 = cast(%118, dtype="int16") /* ty=Tensor[(8, 8, 6), int16] */;
  %120 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%117, dtype="int16") /* ty=Tensor[(8, 8, 6), int16] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %123 = cast(%118, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %124 = reshape(%123, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %125 = @func_313(%124) /* ty=(Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %126 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %127 = divide(%113, %114) /* ty=Tensor[(4, 7, 13), float64] */;
  %128 = floor_mod(%115, %116) /* ty=Tensor[(6, 7, 13), float32] */;
  %129 = subtract(%121, %122) /* ty=Tensor[(8, 8, 6), int16] */;
  %130 = %125.3;
  %131 = %126.1;
  (%127, %128, %129, %130, %131)
}

def @func_14547() -> Tensor[(8, 8, 6), float64] {
  @func_14545() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_15732() -> Tensor[(16, 14, 1), float64] {
  %132 = @func_11636() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %132.2
}

def @func_14885() -> Tensor[(8, 8, 6), float64] {
  %134 = fn () -> Tensor[(8, 8, 6), float64] {
    %133 = @func_8158() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %133.0
  };
  %134() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_13034(%var_13032: Tensor[(330), float32]) -> (Tensor[(8, 8, 6), float64], Tensor[(2, 11, 15), bool], Tensor[(330), float32]) {
  @func_13031(%var_13032) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(2, 11, 15), bool], Tensor[(330), float32]) */
}

def @func_5040() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %139 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
    %135 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
    %136 = @func_1328() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %137 = %135.0;
    %138 = %136.0;
    (%137, %138)
  };
  %139() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */
}

def @func_17268() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_17266() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_15812() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  @func_15810() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_1330() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  @func_1328() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_14375() -> Tensor[(8, 8, 6), float64] {
  @func_14373() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_6945() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %140 = @func_2639() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %141 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %142 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %143 = %140.3;
  %144 = %141.0;
  %145 = %142.0;
  (%143, %144, %145)
}

def @func_2903() -> (Tensor[(8, 8, 6), float64],) {
  %148 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %146 = @func_2446() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %147 = %146.0;
    (%147,)
  };
  %148() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_1974() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_1972() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_12384() -> Tensor[(8, 8, 6), float64] {
  @func_12382() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_13074(%var_13072: Tensor[(14, 4, 2), float32], %var_13073: Tensor[(14, 4, 2), float32]) -> (Tensor[(14, 4, 2), bool],) {
  %154 = fn (%var_13062: Tensor[(14, 4, 2), float32], %var_13063: Tensor[(14, 4, 2), float32]) -> (Tensor[(14, 4, 2), bool],) {
    %149 = cast(%var_13063, dtype="bool") /* ty=Tensor[(14, 4, 2), bool] */;
    %150 = shape_of(%var_13062, dtype="int32") /* ty=Tensor[(3), int32] */;
    %151 = cast(%var_13062, dtype="bool") /* ty=Tensor[(14, 4, 2), bool] */;
    %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %153 = equal(%151, %152) /* ty=Tensor[(14, 4, 2), bool] */;
    (%153,)
  };
  %154(%var_13072, %var_13073) /* ty=(Tensor[(14, 4, 2), bool],) */
}

def @func_16660() -> (Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), bool]) {
  %155 = @func_3957() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %156 = @func_11297() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %157 = @func_2639() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %158 = %155.0;
  %159 = %156.0;
  %160 = %157.2;
  (%158, %159, %160)
}

def @func_7514() -> (Tensor[(16, 14, 1), float32],) {
  %161 = @func_1167() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %162 = %161.1;
  (%162,)
}

def @func_1721() -> Tensor[(8, 8, 6), float64] {
  %163 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %163.1
}

def @func_12972() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
  %164 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %165 = @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */;
  %166 = %164.0;
  %167 = %165.0;
  (%166, %167)
}

def @func_6278() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) {
  @func_6276() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */
}

def @func_10113(%var_10083: Tensor[(1, 1, 5), uint64], %var_10084: Tensor[(13, 14, 5), uint64]) -> (Tensor[(13, 14, 5), uint64], Tensor[(1, 1, 5), float64]) {
  %168 = cast(%var_10083, dtype="uint64") /* ty=Tensor[(1, 1, 5), uint64] */;
  %169 = cast(%var_10084, dtype="uint64") /* ty=Tensor[(13, 14, 5), uint64] */;
  %170 = cast(%var_10083, dtype="float64") /* ty=Tensor[(1, 1, 5), float64] */;
  %171 = bitwise_xor(%168, %169) /* ty=Tensor[(13, 14, 5), uint64] */;
  %172 = erf(%170) /* ty=Tensor[(1, 1, 5), float64] */;
  (%171, %172)
}

def @func_8631() -> (Tensor[(16, 14, 1), float64],) {
  %173 = @func_5144() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %174 = %173.0;
  (%174,)
}

def @func_11298() -> (Tensor[(16, 14, 1), float64],) {
  %177 = fn () -> (Tensor[(16, 14, 1), float64],) {
    %175 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %176 = %175.0;
    (%176,)
  };
  %177() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_5733(%var_5731: Tensor[(16, 14, 8), float64]) -> (Tensor[(16, 14, 8), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_5730(%var_5731) /* ty=(Tensor[(16, 14, 8), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_6234() -> (Tensor[(8, 8, 6), float64],) {
  %180 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %178 = @func_3139() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %179 = %178.0;
    (%179,)
  };
  %180() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_10941(%var_10940: int16) -> (Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], int16, Tensor[(104), int16]) {
  %190 = fn (%var_10927: int16) -> (Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], int16, Tensor[(104), int16]) {
    %181 = @func_9515() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %182 = cast(%var_10927, dtype="int16") /* ty=int16 */;
    %183 = cast(meta[relay.Constant][1] /* ty=Tensor[(104), int16] */, dtype="int16") /* ty=Tensor[(104), int16] */;
    %184 = reshape(%182, newshape=[]) /* ty=int16 */;
    %185 = reshape(%183, newshape=[13, 4, 2]) /* ty=Tensor[(13, 4, 2), int16] */;
    %186 = @func_6556(%184, %185) /* ty=(Tensor[(13, 4, 2), int16], Tensor[(8, 8, 6), int64]) */;
    %187 = @func_10743() /* ty=Tensor[(16, 14, ?), bool] */;
    %188 = %181.0;
    %189 = %186.1;
    (%187, %188, %189, %var_10927, meta[relay.Constant][1] /* ty=Tensor[(104), int16] */)
  };
  %190(%var_10940) /* ty=(Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], int16, Tensor[(104), int16]) */
}

def @func_11780() -> (Tensor[(8, 8, 6), float64],) {
  %191 = @func_7621() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %192 = %191.0;
  (%192,)
}

def @func_5818() -> (Tensor[(8, 8, 6), float64],) {
  @func_5816() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_8370() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  @func_8368() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */
}

def @func_6142() -> Tensor[(8, 8, 6), float64] {
  @func_6140() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_15439() -> (Tensor[(8, 8, 6), float64],) {
  %194 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %193 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
    (%193,)
  };
  %194() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_1008() -> (Tensor[(16, 14, 1), float64],) {
  %195 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %196 = %195.0;
  (%196,)
}

def @func_8492() -> Tensor[(16, 14, 1), float32] {
  @func_8490() /* ty=Tensor[(16, 14, 1), float32] */
}

def @func_13134() -> (Tensor[(16, 14, 1), float64],) {
  %199 = fn () -> (Tensor[(16, 14, 1), float64],) {
    %197 = @func_9090() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
    %198 = %197.1;
    (%198,)
  };
  %199() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_11018() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, 2016), uint8]) {
  %205 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, 2016), uint8]) {
    %200 = @func_5402() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %201 = @func_4217() /* ty=(Tensor[(16, 14, 9), float32], Tensor[(16, 14, 2016), float32], Tensor[(16, 14, 2016), uint8]) */;
    %202 = %200.0;
    %203 = @func_4865() /* ty=Tensor[(16, 14, 1), float64] */;
    %204 = %201.2;
    (%202, %203, %204)
  };
  %205() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, 2016), uint8]) */
}

def @func_13457() -> (Tensor[(8, 8, 6), float64],) {
  %208 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %206 = @func_9175() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %207 = %206.0;
    (%207,)
  };
  %208() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_11544() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %212 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %209 = @func_10803() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %210 = @func_10128() /* ty=Tensor[(8, 8, 6), float64] */;
    %211 = %209.3;
    (%210, %211)
  };
  %212() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_2375() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_2373() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_1871() -> (Tensor[(8, 8, 6), float64],) {
  @func_1869() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_3589() -> (Tensor[(8, 8, 6), int64],) {
  @func_3587() /* ty=(Tensor[(8, 8, 6), int64],) */
}

def @func_7267() -> (Tensor[(16, 14, 1), float64],) {
  %215 = fn () -> (Tensor[(16, 14, 1), float64],) {
    %213 = @func_1008() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %214 = %213.0;
    (%214,)
  };
  %215() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_11637() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %224 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
    %216 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %217 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %218 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %219 = @func_4670() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %220 = %216.0;
    %221 = %217.0;
    %222 = %218.0;
    %223 = %219.1;
    (%220, %221, %222, %223)
  };
  %224() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_5961() -> Tensor[(16, 14, 5), bool] {
  %229 = fn () -> Tensor[(16, 14, 5), bool] {
    %225 = @func_2123() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %226 = %225.0;
    %227 = cast(%226, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
    %228 = cast(meta[relay.Constant][2] /* ty=Tensor[(16, 14, 5), float64] */, dtype="bool") /* ty=Tensor[(16, 14, 5), bool] */;
    greater(%227, %228) /* ty=Tensor[(16, 14, 5), bool] */
  };
  %229() /* ty=Tensor[(16, 14, 5), bool] */
}

def @func_13899() -> (Tensor[(14, 6, 15), float32],) {
  %230 = cast(meta[relay.Constant][3] /* ty=Tensor[(14, 6, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %231 = exp(%230) /* ty=Tensor[(14, 6, 15), float32] */;
  (%231,)
}

def @func_12088() -> (Tensor[(16, 14, 1), float64],) {
  %232 = @func_11297() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %233 = %232.0;
  (%233,)
}

def @func_12431() -> (Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) {
  @func_12429() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */
}

def @func_1450() -> Tensor[(8, 8, 6), float64] {
  @func_1448() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_6214() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) {
  @func_6212() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */
}

def @func_9517() -> (Tensor[(8, 8, 6), float64],) {
  @func_9515() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_13174() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int32]) {
  @func_13172() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int32]) */
}

def @func_3032() -> (Tensor[(8, 8, 6), float64],) {
  %234 = @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %235 = %234.0;
  (%235,)
}

def @func_12199() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %242 = fn () -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %236 = @func_3587() /* ty=(Tensor[(8, 8, 6), int64],) */;
    %237 = @func_5039() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
    %238 = @func_2880() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %239 = %236.0;
    %240 = %237.0;
    %241 = %238.1;
    (%239, %240, %241)
  };
  %242() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_3991() -> Tensor[(8, 8, 6), float64] {
  %243 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %243.0
}

def @func_902(%var_901: Tensor[(8, 8, 6), float32]) -> Tensor[(8, 8, 6), int64] {
  %252 = fn (%var_889: Tensor[(8, 8, 6), float32]) -> Tensor[(8, 8, 6), int64] {
    %244 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %245 = %244.0;
    %246 = cast(%245, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
    %247 = asin(%246) /* ty=Tensor[(8, 8, 6), float32] */;
    %248 = cast(%var_889, dtype="int64") /* ty=Tensor[(8, 8, 6), int64] */;
    %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
    %250 = cast(%247, dtype="int64") /* ty=Tensor[(8, 8, 6), int64] */;
    %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    bitwise_or(%250, %251) /* ty=Tensor[(8, 8, 6), int64] */
  };
  %252(%var_901) /* ty=Tensor[(8, 8, 6), int64] */
}

def @func_6560(%var_6558: int16, %var_6559: Tensor[(13, 4, 2), int16]) -> (Tensor[(13, 4, 2), int16], Tensor[(8, 8, 6), int64]) {
  @func_6556(%var_6558, %var_6559) /* ty=(Tensor[(13, 4, 2), int16], Tensor[(8, 8, 6), int64]) */
}

def @func_11987() -> Tensor[(8, 8, 6), int64] {
  %254 = fn () -> Tensor[(8, 8, 6), int64] {
    %253 = @func_3957() /* ty=(Tensor[(8, 8, 6), int64],) */;
    %253.0
  };
  %254() /* ty=Tensor[(8, 8, 6), int64] */
}

def @func_151() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) {
  %261 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) {
    %255 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
    %256 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
    %257 = atan(%256) /* ty=Tensor[(8, 8, 6), float64] */;
    %258 = cast(%257, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
    %259 = atanh(%255) /* ty=Tensor[(8, 8, 6), float64] */;
    %260 = acos(%258) /* ty=Tensor[(8, 8, 6), float32] */;
    (%259, %260)
  };
  %261() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */
}

def @func_1010() -> (Tensor[(16, 14, 1), float64],) {
  @func_1008() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_15336(%var_15293: Tensor[(1584), float64], %var_15308: uint64) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(1584), float64], Tensor[(11, 7, 14), bool], uint64, Tensor[(1078), uint64], Tensor[(8, 8, 6), float64]) {
  %262 = @func_1328() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %263 = cast(%var_15293, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %264 = reshape(%263, newshape=[12, 12, 11]) /* ty=Tensor[(12, 12, 11), float64] */;
  %265 = @func_9634(%264) /* ty=(Tensor[(12, 12, 11), bool], Tensor[(8, 8, 6), float64]) */;
  %266 = cast(%var_15308, dtype="uint64") /* ty=uint64 */;
  %267 = cast(meta[relay.Constant][5] /* ty=Tensor[(1078), uint64] */, dtype="uint64") /* ty=Tensor[(1078), uint64] */;
  %268 = reshape(%266, newshape=[]) /* ty=uint64 */;
  %269 = reshape(%267, newshape=[11, 7, 14]) /* ty=Tensor[(11, 7, 14), uint64] */;
  %270 = @func_9056(%268, %269) /* ty=(Tensor[(11, 7, 14), bool],) */;
  %271 = %262.1;
  %272 = %265.1;
  %273 = %270.0;
  %274 = @func_5461() /* ty=Tensor[(8, 8, 6), float64] */;
  (%271, %272, %var_15293, %273, %var_15308, meta[relay.Constant][5] /* ty=Tensor[(1078), uint64] */, %274)
}

def @func_5064() -> (Tensor[(8, 8, 6), float64],) {
  %275 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %276 = %275.0;
  (%276,)
}

def @func_7563() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  @func_7561() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_5794(%var_5792: int16, %var_5793: Tensor[(1, 1, 12), int16]) -> Tensor[(1, 1, 12), bool] {
  %279 = fn (%var_5784: int16, %var_5785: Tensor[(1, 1, 12), int16]) -> Tensor[(1, 1, 12), bool] {
    %277 = cast(%var_5784, dtype="bool") /* ty=bool */;
    %278 = cast(%var_5785, dtype="bool") /* ty=Tensor[(1, 1, 12), bool] */;
    less(%277, %278) /* ty=Tensor[(1, 1, 12), bool] */
  };
  %279(%var_5792, %var_5793) /* ty=Tensor[(1, 1, 12), bool] */
}

def @func_14058() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) {
  %280 = @func_13133() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %281 = @func_12972() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %282 = %280.0;
  %283 = %281.0;
  (%282, %283)
}

def @func_5898(%var_5887: Tensor[(320), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(2, 16, 10), float64], Tensor[(320), float64], Tensor[(8, 8, 6), float64]) {
  %284 = cast(%var_5887, dtype="float64") /* ty=Tensor[(320), float64] */;
  %285 = reshape(%284, newshape=[2, 16, 10]) /* ty=Tensor[(2, 16, 10), float64] */;
  %286 = @func_672(%285) /* ty=(Tensor[(2, 16, 10), float64],) */;
  %287 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %288 = @func_5461() /* ty=Tensor[(8, 8, 6), float64] */;
  %289 = %286.0;
  %290 = %287.1;
  (%288, %289, %var_5887, %290)
}

def @func_10023() -> Tensor[(8, 8, 6), float64] {
  %292 = fn () -> Tensor[(8, 8, 6), float64] {
    %291 = @func_8149() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %291.0
  };
  %292() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_14708() -> Tensor[(8, 8, 6), float64] {
  %293 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %293.0
}

def @func_12046() -> (Tensor[(8, 8, 6), int64],) {
  %296 = fn () -> (Tensor[(8, 8, 6), int64],) {
    %294 = @func_4006() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) */;
    %295 = %294.0;
    (%295,)
  };
  %296() /* ty=(Tensor[(8, 8, 6), int64],) */
}

def @func_10471() -> (Tensor[(8, 8, 6), float64],) {
  %299 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %297 = @func_7621() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
    %298 = %297.0;
    (%298,)
  };
  %299() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_12671() -> (Tensor[(8, 8, 6), float64],) {
  %302 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %300 = @func_2902() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %301 = %300.0;
    (%301,)
  };
  %302() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_2124() -> (Tensor[(16, 14, 1), float64],) {
  %305 = fn () -> (Tensor[(16, 14, 1), float64],) {
    %303 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %304 = %303.0;
    (%304,)
  };
  %305() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_8528() -> Tensor[(8, 8, 6), int64] {
  %306 = @func_6980() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
  %306.0
}

def @func_5730(%var_5705: Tensor[(16, 14, 8), float64]) -> (Tensor[(16, 14, 8), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %307 = @func_3023() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %308 = %307.0;
  %309 = cast(%308, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %310 = cast(%var_5705, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
  %311 = @func_1489() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %312 = @func_1846() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %313 = greater_equal(%309, %310) /* ty=Tensor[(16, 14, 8), bool] */;
  %314 = %311.1;
  %315 = %312.2;
  (%313, %314, %315)
}

def @func_4993() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %319 = fn () -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
    %316 = @func_2373() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %317 = @func_1377() /* ty=Tensor[(16, 14, 1), float64] */;
    %318 = %316.0;
    (%317, %318)
  };
  %319() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_4219() -> (Tensor[(16, 14, 9), float32], Tensor[(16, 14, 2016), float32], Tensor[(16, 14, 2016), uint8]) {
  @func_4217() /* ty=(Tensor[(16, 14, 9), float32], Tensor[(16, 14, 2016), float32], Tensor[(16, 14, 2016), uint8]) */
}

def @func_11860() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %320 = @func_1869() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %321 = @func_10849() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
  %322 = %320.0;
  %323 = cast(%322, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %324 = reshape(%323, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %325 = @func_313(%324) /* ty=(Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %326 = %321.1;
  %327 = %325.4;
  (%322, %326, %327)
}

def @func_11813(%var_11810: float64, %var_11811: Tensor[(1, 13, 1), float64], %var_11812: Tensor[(624), uint64]) -> (Tensor[(1, 13, 1), float64], Tensor[(624), uint64], Tensor[(1, 13, 384), int32]) {
  %338 = fn (%var_11783: float64, %var_11784: Tensor[(1, 13, 1), float64], %var_11793: Tensor[(624), uint64]) -> (Tensor[(1, 13, 1), float64], Tensor[(624), uint64], Tensor[(1, 13, 384), int32]) {
    %328 = cast(%var_11783, dtype="float64") /* ty=float64 */;
    %329 = cast(%var_11784, dtype="float64") /* ty=Tensor[(1, 13, 1), float64] */;
    %330 = cast(%var_11793, dtype="uint64") /* ty=Tensor[(624), uint64] */;
    %331 = reshape(%330, newshape=[624]) /* ty=Tensor[(624), uint64] */;
    %332 = @func_4601(%331) /* ty=(Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(16, 14, 9), float32], Tensor[(8, 8, 6), int32], Tensor[(384), float64], Tensor[(8, 8, 6), float64], Tensor[(624), uint64]) */;
    %333 = %332.5;
    %334 = cast(%333, dtype="int32") /* ty=Tensor[(384), int32] */;
    %335 = cast(%var_11784, dtype="int32") /* ty=Tensor[(1, 13, 1), int32] */;
    %336 = mod(%328, %329) /* ty=Tensor[(1, 13, 1), float64] */;
    %337 = left_shift(%334, %335) /* ty=Tensor[(1, 13, 384), int32] */;
    (%336, %var_11793, %337)
  };
  %338(%var_11810, %var_11811, %var_11812) /* ty=(Tensor[(1, 13, 1), float64], Tensor[(624), uint64], Tensor[(1, 13, 384), int32]) */
}

def @func_7219() -> Tensor[(8, 8, 6), float64] {
  %339 = fn () -> Tensor[(8, 8, 6), float64] {
    @func_2779() /* ty=Tensor[(8, 8, 6), float64] */
  };
  %339() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_9751(%var_9749: Tensor[(6, 7, 12), int64], %var_9750: Tensor[(6, 7, 12), int64]) -> Tensor[(6, 7, 12), float32] {
  %346 = fn (%var_9721: Tensor[(6, 7, 12), int64], %var_9722: Tensor[(6, 7, 12), int64]) -> Tensor[(6, 7, 12), float32] {
    %340 = cast(%var_9722, dtype="int64") /* ty=Tensor[(6, 7, 12), int64] */;
    %341 = shape_of(%var_9721, dtype="int32") /* ty=Tensor[(3), int32] */;
    %342 = cast(%var_9721, dtype="int64") /* ty=Tensor[(6, 7, 12), int64] */;
    %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %344 = bitwise_xor(%342, %343) /* ty=Tensor[(6, 7, 12), int64] */;
    %345 = cast(%344, dtype="float32") /* ty=Tensor[(6, 7, 12), float32] */;
    cosh(%345) /* ty=Tensor[(6, 7, 12), float32] */
  };
  %346(%var_9749, %var_9750) /* ty=Tensor[(6, 7, 12), float32] */
}

def @func_6402() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64]) {
  %351 = fn () -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64]) {
    %347 = @func_3587() /* ty=(Tensor[(8, 8, 6), int64],) */;
    %348 = @func_3587() /* ty=(Tensor[(8, 8, 6), int64],) */;
    %349 = %347.0;
    %350 = %348.0;
    (%349, %350)
  };
  %351() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64]) */
}

def @func_15533() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %356 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %352 = @func_1972() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %353 = @func_10803() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %354 = %352.0;
    %355 = %353.3;
    (%354, %355)
  };
  %356() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_13382() -> (Tensor[(8, 8, 6), float64],) {
  %358 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %357 = @func_10128() /* ty=Tensor[(8, 8, 6), float64] */;
    (%357,)
  };
  %358() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_8079() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) {
  %364 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) {
    %359 = @func_4006() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) */;
    %360 = @func_6233() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %361 = @func_3991() /* ty=Tensor[(8, 8, 6), float64] */;
    %362 = %359.0;
    %363 = %360.0;
    (%361, %362, %363)
  };
  %364() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */
}

def @func_15552() -> (Tensor[(16, 14, 1), float32], Tensor[(8, 8, 6), int64]) {
  %367 = fn () -> (Tensor[(16, 14, 1), float32], Tensor[(8, 8, 6), int64]) {
    %365 = @func_11695() /* ty=Tensor[(16, 14, 1), float32] */;
    %366 = @func_11986() /* ty=Tensor[(8, 8, 6), int64] */;
    (%365, %366)
  };
  %367() /* ty=(Tensor[(16, 14, 1), float32], Tensor[(8, 8, 6), int64]) */
}

def @func_3875() -> (Tensor[(8, 8, 6), int64],) {
  @func_3873() /* ty=(Tensor[(8, 8, 6), int64],) */
}

def @func_10745() -> Tensor[(16, 14, ?), bool] {
  @func_10743() /* ty=Tensor[(16, 14, ?), bool] */
}

def @func_1131() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %371 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %368 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
    %369 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
    %370 = %368.0;
    (%369, %370)
  };
  %371() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_16450() -> (Tensor[(8, 8, 6), float64],) {
  %372 = @func_6827() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %373 = %372.0;
  (%373,)
}

def @func_8269() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
  @func_8267() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */
}

def @func_15929() -> Tensor[(8, 8, 6), float64] {
  @func_7218() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_974() -> (Tensor[(16, 14, 1), float64],) {
  @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_1518() -> Tensor[(8, 8, 6), float64] {
  @func_837() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_16995() -> (Tensor[(16, 14, 1), float64], Tensor[(16, 14, 1), float64]) {
  %378 = fn () -> (Tensor[(16, 14, 1), float64], Tensor[(16, 14, 1), float64]) {
    %374 = @func_12948() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(16, 14, ?), bool]) */;
    %375 = @func_8368() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
    %376 = %374.0;
    %377 = %375.2;
    (%376, %377)
  };
  %378() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(16, 14, 1), float64]) */
}

def @func_15340(%var_15338: Tensor[(1584), float64], %var_15339: uint64) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(1584), float64], Tensor[(11, 7, 14), bool], uint64, Tensor[(1078), uint64], Tensor[(8, 8, 6), float64]) {
  @func_15336(%var_15338, %var_15339) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(1584), float64], Tensor[(11, 7, 14), bool], uint64, Tensor[(1078), uint64], Tensor[(8, 8, 6), float64]) */
}

def @func_16006() -> Tensor[(8, 8, 6), float64] {
  %379 = @func_13862() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %379.0
}

def @func_6328() -> (Tensor[(8, 8, 6), float64],) {
  @func_6326() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_14060() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) {
  @func_14058() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) */
}

def @func_6428() -> (Tensor[(8, 8, 6), int64],) {
  @func_6426() /* ty=(Tensor[(8, 8, 6), int64],) */
}

def @func_12249(%var_12248: Tensor[(16, 14, 9), float64]) -> (Tensor[(16, 14, 9), float32],) {
  %389 = fn (%var_12237: Tensor[(16, 14, 9), float64]) -> (Tensor[(16, 14, 9), float32],) {
    %380 = @func_4217() /* ty=(Tensor[(16, 14, 9), float32], Tensor[(16, 14, 2016), float32], Tensor[(16, 14, 2016), uint8]) */;
    %381 = %380.0;
    %382 = cast(%381, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
    %383 = log(%382) /* ty=Tensor[(16, 14, 9), float64] */;
    %384 = cast(%var_12237, dtype="float32") /* ty=Tensor[(16, 14, 9), float32] */;
    %385 = shape_of(%383, dtype="int32") /* ty=Tensor[(3), int32] */;
    %386 = cast(%383, dtype="float32") /* ty=Tensor[(16, 14, 9), float32] */;
    %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %388 = floor_mod(%386, %387) /* ty=Tensor[(16, 14, 9), float32] */;
    (%388,)
  };
  %389(%var_12248) /* ty=(Tensor[(16, 14, 9), float32],) */
}

def @func_3587() -> (Tensor[(8, 8, 6), int64],) {
  %390 = @func_3563() /* ty=Tensor[(8, 8, 6), int64] */;
  (%390,)
}

def @func_5145() -> (Tensor[(16, 14, 1), float64],) {
  %393 = fn () -> (Tensor[(16, 14, 1), float64],) {
    %391 = @func_4992() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %392 = %391.0;
    (%392,)
  };
  %393() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_12504() -> Tensor[(8, 8, 6), float64] {
  %395 = fn () -> Tensor[(8, 8, 6), float64] {
    %394 = @func_9470() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %394.0
  };
  %395() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_2448() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_2446() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_8172() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_8170() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_6260() -> (Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) {
  %396 = @func_5144() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %397 = %396.0;
  %398 = cast(%397, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  %399 = sigmoid(%398) /* ty=Tensor[(16, 14, 1), float32] */;
  %400 = cast(%397, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%399, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %404 = @func_2902() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %405 = not_equal(%402, %403) /* ty=Tensor[(16, 14, ?), bool] */;
  %406 = %404.0;
  (%405, %406)
}

def @func_9515() -> (Tensor[(8, 8, 6), float64],) {
  %407 = @func_2083() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %408 = %407.0;
  (%408,)
}

def @func_249() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_8151() -> (Tensor[(8, 8, 6), float64],) {
  @func_8149() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_8103() -> (Tensor[(8, 8, 6), float64],) {
  %409 = @func_5816() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %410 = %409.0;
  (%410,)
}

def @func_10414() -> Tensor[(16, 14, 1), float64] {
  %412 = fn () -> Tensor[(16, 14, 1), float64] {
    %411 = @func_4892() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %411.0
  };
  %412() /* ty=Tensor[(16, 14, 1), float64] */
}

def @func_9582(%var_9561: Tensor[(1792), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 8), bool], Tensor[(1792), float64], Tensor[(8, 8, 6), int64], Tensor[(5, 6, 4), float64], Tensor[(120), float64]) {
  %413 = @func_5039() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %414 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %415 = cast(%var_9561, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %416 = reshape(%415, newshape=[16, 14, 8]) /* ty=Tensor[(16, 14, 8), float64] */;
  %417 = @func_5730(%416) /* ty=(Tensor[(16, 14, 8), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %418 = @func_8078() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
  %419 = cast(meta[relay.Constant][6] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %420 = reshape(%419, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %421 = %413.0;
  %422 = %414.1;
  %423 = @func_8479() /* ty=Tensor[(8, 8, 6), float64] */;
  %424 = %417.0;
  %425 = %418.1;
  %426 = @func_4903(%420) /* ty=Tensor[(5, 6, 4), float64] */;
  (%421, %422, %423, %424, %var_9561, %425, %426, meta[relay.Constant][6] /* ty=Tensor[(120), float64] */)
}

def @func_10851() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) {
  @func_10849() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */
}

def @func_2992(%var_2961: Tensor[(8, 8, 6), float64]) -> (Tensor[(8, 8, 6), int8],) {
  %427 = @func_2446() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %428 = %427.0;
  %429 = cast(%var_2961, dtype="int8") /* ty=Tensor[(8, 8, 6), int8] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%428, dtype="int8") /* ty=Tensor[(8, 8, 6), int8] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %433 = right_shift(%431, %432) /* ty=Tensor[(8, 8, 6), int8] */;
  (%433,)
}

def @func_13172() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int32]) {
  %434 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %435 = %434.1;
  %436 = cast(%435, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %437 = reshape(%436, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %438 = @func_3677(%437) /* ty=Tensor[(8, 8, 6), int32] */;
  (%435, %438)
}

def @func_2882() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_2880() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_12712() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %439 = @func_2880() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %440 = %439.0;
  %441 = @func_12104() /* ty=Tensor[(8, 8, 6), float64] */;
  (%440, %441)
}

def @func_14512(%var_14506: Tensor[(16, 14, 1), float64]) -> (Tensor[(5, 6, 4), float64], Tensor[(120), float64], Tensor[(16, 14, ?), uint32]) {
  %442 = cast(meta[relay.Constant][7] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %443 = reshape(%442, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %444 = @func_12648() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %445 = %444.0;
  %446 = cast(%var_14506, dtype="uint32") /* ty=Tensor[(16, 14, 1), uint32] */;
  %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%445, dtype="uint32") /* ty=Tensor[(16, 14, 1), uint32] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %450 = @func_4903(%443) /* ty=Tensor[(5, 6, 4), float64] */;
  %451 = bitwise_xor(%448, %449) /* ty=Tensor[(16, 14, ?), uint32] */;
  (%450, meta[relay.Constant][7] /* ty=Tensor[(120), float64] */, %451)
}

def @func_14671() -> (Tensor[(16, 14, 1), float64],) {
  %454 = fn () -> (Tensor[(16, 14, 1), float64],) {
    %452 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %453 = %452.0;
    (%453,)
  };
  %454() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_7908() -> (Tensor[(16, 14, 1), float64],) {
  %457 = fn () -> (Tensor[(16, 14, 1), float64],) {
    %455 = @func_3023() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %456 = %455.0;
    (%456,)
  };
  %457() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_12350() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_12348() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_1869() -> (Tensor[(8, 8, 6), float64],) {
  %458 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  (%458,)
}

def @func_11923() -> (Tensor[(16, 14, ?), bool],) {
  %460 = fn () -> (Tensor[(16, 14, ?), bool],) {
    %459 = @func_9951() /* ty=Tensor[(16, 14, ?), bool] */;
    (%459,)
  };
  %460() /* ty=(Tensor[(16, 14, ?), bool],) */
}

def @func_4865() -> Tensor[(16, 14, 1), float64] {
  %461 = @func_2123() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %461.0
}

def @func_15734() -> Tensor[(16, 14, 1), float64] {
  @func_15732() /* ty=Tensor[(16, 14, 1), float64] */
}

def @func_10593(%var_10592: Tensor[(2016), float64]) -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2016), float64], Tensor[(16, 14, 1), float64]) {
  %474 = fn (%var_10580: Tensor[(2016), float64]) -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2016), float64], Tensor[(16, 14, 1), float64]) {
    %462 = @func_6426() /* ty=(Tensor[(8, 8, 6), int64],) */;
    %463 = @func_1130() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %464 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %465 = cast(%var_10580, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %466 = reshape(%465, newshape=[14, 144]) /* ty=Tensor[(14, 144), float64] */;
    %467 = @func_9864(%466) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(14, 144), uint16]) */;
    %468 = @func_4992() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %469 = %462.0;
    %470 = %463.0;
    %471 = %464.0;
    %472 = %467.0;
    %473 = %468.0;
    (%469, %470, %471, %472, %var_10580, %473)
  };
  %474(%var_10592) /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2016), float64], Tensor[(16, 14, 1), float64]) */
}

def @func_16754() -> (Tensor[(8, 8, 6), float64],) {
  @func_16752() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_6140() -> Tensor[(8, 8, 6), float64] {
  %475 = @func_3326() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %475.0
}

def @func_10743() -> Tensor[(16, 14, ?), bool] {
  @func_9951() /* ty=Tensor[(16, 14, ?), bool] */
}

def @func_16222() -> (Tensor[(8, 8, 6), float64],) {
  @func_16220() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_8816() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  @func_8814() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */
}

def @func_10668(%var_10650: Tensor[(3, 9, 13), float64]) -> (Tensor[(3, 9, 13), float64], Tensor[(2016), float64], Tensor[(2016), float64]) {
  %476 = cast(%var_10650, dtype="float64") /* ty=Tensor[(3, 9, 13), float64] */;
  %477 = cast(meta[relay.Constant][8] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %478 = reshape(%477, newshape=[2016]) /* ty=Tensor[(2016), float64] */;
  %479 = @func_10591(%478) /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2016), float64], Tensor[(16, 14, 1), float64]) */;
  %480 = asinh(%476) /* ty=Tensor[(3, 9, 13), float64] */;
  %481 = %479.4;
  (%480, %481, meta[relay.Constant][8] /* ty=Tensor[(2016), float64] */)
}

def @func_15585() -> (Tensor[(8, 8, 6), int64],) {
  %484 = fn () -> (Tensor[(8, 8, 6), int64],) {
    %482 = @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
    %483 = %482.1;
    (%483,)
  };
  %484() /* ty=(Tensor[(8, 8, 6), int64],) */
}

def @func_1290() -> (Tensor[(8, 8, 6), int32], Tensor[(8, 8, 6), float64]) {
  @func_1288() /* ty=(Tensor[(8, 8, 6), int32], Tensor[(8, 8, 6), float64]) */
}

def @func_12649() -> (Tensor[(16, 14, 1), float64],) {
  %487 = fn () -> (Tensor[(16, 14, 1), float64],) {
    %485 = @func_8814() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
    %486 = %485.1;
    (%486,)
  };
  %487() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_14366(%var_14364: Tensor[(6, 13, 13), float32], %var_14365: Tensor[(6, 13, 13), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int32], Tensor[(6, 13, 13), int64]) {
  @func_14362(%var_14364, %var_14365) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int32], Tensor[(6, 13, 13), int64]) */
}

def @func_14605(%var_14604: Tensor[(1078), uint64]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float32], Tensor[(11, 7, 14), bool], uint64, Tensor[(1078), uint64]) {
  %501 = fn (%var_14592: Tensor[(1078), uint64]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float32], Tensor[(11, 7, 14), bool], uint64, Tensor[(1078), uint64]) {
    %488 = @func_12648() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %489 = @func_14295() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */;
    %490 = @func_6009() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) */;
    %491 = cast(meta[relay.Constant][9] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %492 = cast(%var_14592, dtype="uint64") /* ty=Tensor[(1078), uint64] */;
    %493 = reshape(%491, newshape=[]) /* ty=uint64 */;
    %494 = reshape(%492, newshape=[11, 7, 14]) /* ty=Tensor[(11, 7, 14), uint64] */;
    %495 = @func_9056(%493, %494) /* ty=(Tensor[(11, 7, 14), bool],) */;
    %496 = @func_10128() /* ty=Tensor[(8, 8, 6), float64] */;
    %497 = %488.0;
    %498 = %489.1;
    %499 = %490.1;
    %500 = %495.0;
    (%496, %497, %498, %499, %500, meta[relay.Constant][9] /* ty=uint64 */, %var_14592)
  };
  %501(%var_14604) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float32], Tensor[(11, 7, 14), bool], uint64, Tensor[(1078), uint64]) */
}

def @func_2373() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %502 = @func_1846() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %503 = @func_1288() /* ty=(Tensor[(8, 8, 6), int32], Tensor[(8, 8, 6), float64]) */;
  %504 = %502.2;
  %505 = %503.1;
  (%504, %505)
}

def @func_3061() -> Tensor[(8, 8, 6), int64] {
  @func_3059() /* ty=Tensor[(8, 8, 6), int64] */
}

def @func_14765(%var_14763: Tensor[(4, 15, 6), int16], %var_14764: Tensor[(4, 15, 6), int16]) -> Tensor[(4, 15, 6), bool] {
  %510 = fn (%var_14754: Tensor[(4, 15, 6), int16], %var_14755: Tensor[(4, 15, 6), int16]) -> Tensor[(4, 15, 6), bool] {
    %506 = cast(%var_14755, dtype="bool") /* ty=Tensor[(4, 15, 6), bool] */;
    %507 = shape_of(%var_14754, dtype="int32") /* ty=Tensor[(3), int32] */;
    %508 = cast(%var_14754, dtype="bool") /* ty=Tensor[(4, 15, 6), bool] */;
    %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%508, %509) /* ty=Tensor[(4, 15, 6), bool] */
  };
  %510(%var_14763, %var_14764) /* ty=Tensor[(4, 15, 6), bool] */
}

def @func_8215() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %518 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %511 = @func_4670() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %512 = @func_2123() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %513 = @func_7413() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
    %514 = %511.1;
    %515 = %512.0;
    %516 = %513.3;
    %517 = @func_7218() /* ty=Tensor[(8, 8, 6), float64] */;
    (%514, %515, %516, %517)
  };
  %518() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_7038() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %523 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %519 = @func_4769() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %520 = @func_1167() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
    %521 = %519.0;
    %522 = %520.0;
    (%521, %522)
  };
  %523() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_3301() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %527 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %524 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
    %525 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
    %526 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
    (%524, %525, %526)
  };
  %527() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_8105() -> (Tensor[(8, 8, 6), float64],) {
  @func_8103() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_8659() -> (Tensor[(8, 8, 6), float64],) {
  %528 = @func_7037() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %529 = %528.1;
  (%529,)
}

def @func_10117(%var_10115: Tensor[(1, 1, 5), uint64], %var_10116: Tensor[(13, 14, 5), uint64]) -> (Tensor[(13, 14, 5), uint64], Tensor[(1, 1, 5), float64]) {
  @func_10113(%var_10115, %var_10116) /* ty=(Tensor[(13, 14, 5), uint64], Tensor[(1, 1, 5), float64]) */
}

def @func_12948() -> (Tensor[(16, 14, 1), float64], Tensor[(16, 14, ?), bool]) {
  %530 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %531 = %530.0;
  %532 = @func_10743() /* ty=Tensor[(16, 14, ?), bool] */;
  (%531, %532)
}

def @func_11733() -> (Tensor[(16, 14, 1), float64],) {
  %533 = @func_10526() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %534 = %533.1;
  (%534,)
}

def @func_2880() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %535 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %536 = @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */;
  %537 = %535.0;
  %538 = %536.0;
  (%537, %538)
}

def @func_16931(%var_16930: Tensor[(16, 14, 2), float32]) -> Tensor[(16, 14, 2), bool] {
  %542 = fn (%var_16924: Tensor[(16, 14, 2), float32]) -> Tensor[(16, 14, 2), bool] {
    %539 = @func_11695() /* ty=Tensor[(16, 14, 1), float32] */;
    %540 = cast(%539, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
    %541 = cast(%var_16924, dtype="bool") /* ty=Tensor[(16, 14, 2), bool] */;
    logical_and(%540, %541) /* ty=Tensor[(16, 14, 2), bool] */
  };
  %542(%var_16930) /* ty=Tensor[(16, 14, 2), bool] */
}

def @func_15810() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %543 = @func_11468() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %544 = @func_7218() /* ty=Tensor[(8, 8, 6), float64] */;
  %545 = %543.0;
  %546 = @func_4099() /* ty=Tensor[(8, 8, 6), float64] */;
  (%544, %545, %546)
}

def @func_13202() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %553 = fn () -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %547 = @func_8214() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %548 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %549 = @func_8149() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %550 = %547.1;
    %551 = %548.0;
    %552 = %549.0;
    (%550, %551, %552)
  };
  %553() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_7622() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) {
  %557 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) {
    %554 = @func_6827() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
    %555 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
    %556 = %554.1;
    (%555, %556)
  };
  %557() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */
}

def @func_9952() -> Tensor[(16, 14, ?), bool] {
  %559 = fn () -> Tensor[(16, 14, ?), bool] {
    %558 = @func_6260() /* ty=(Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */;
    %558.0
  };
  %559() /* ty=Tensor[(16, 14, ?), bool] */
}

def @func_11782() -> (Tensor[(8, 8, 6), float64],) {
  @func_11780() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_5676() -> Tensor[(8, 8, 6), float64] {
  %561 = fn () -> Tensor[(8, 8, 6), float64] {
    %560 = @func_2639() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
    %560.3
  };
  %561() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_9377(%var_9376: Tensor[(1, 2688), float32]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(1, 2688), float32], Tensor[(8, 8, 6), float64]) {
  %568 = fn (%var_9347: Tensor[(1, 2688), float32]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(1, 2688), float32], Tensor[(8, 8, 6), float64]) {
    %562 = cast(%var_9347, dtype="float32") /* ty=Tensor[(1, 2688), float32] */;
    %563 = reshape(%562, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
    %564 = @func_8519(%563) /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32]) */;
    %565 = @func_3747() /* ty=Tensor[(8, 8, 6), float64] */;
    %566 = %564.2;
    %567 = @func_3991() /* ty=Tensor[(8, 8, 6), float64] */;
    (%565, %566, %var_9347, %567)
  };
  %568(%var_9376) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(1, 2688), float32], Tensor[(8, 8, 6), float64]) */
}

def @func_972() -> (Tensor[(16, 14, 1), float64],) {
  %569 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %570 = %569.0;
  (%570,)
}

def @func_14515(%var_14513: Tensor[(16, 14, 1), float64]) -> (Tensor[(5, 6, 4), float64], Tensor[(120), float64], Tensor[(16, 14, ?), uint32]) {
  @func_14512(%var_14513) /* ty=(Tensor[(5, 6, 4), float64], Tensor[(120), float64], Tensor[(16, 14, ?), uint32]) */
}

def @func_6982() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) {
  @func_6980() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */
}

def @func_8530() -> Tensor[(8, 8, 6), int64] {
  @func_8528() /* ty=Tensor[(8, 8, 6), int64] */
}

def @func_14147() -> (Tensor[(8, 8, 6), float64],) {
  @func_14145() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_1520() -> Tensor[(8, 8, 6), float64] {
  @func_1518() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_3372() -> Tensor[(8, 8, 6), float64] {
  %572 = fn () -> Tensor[(8, 8, 6), float64] {
    %571 = @func_1895() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
    %571.1
  };
  %572() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_9176() -> (Tensor[(8, 8, 6), float64],) {
  %575 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %573 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %574 = %573.0;
    (%574,)
  };
  %575() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_16752() -> (Tensor[(8, 8, 6), float64],) {
  %576 = @func_13967() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) */;
  %577 = %576.1;
  (%577,)
}

def @func_6450() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  @func_6448() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_17266() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %578 = @func_7037() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %579 = @func_5390() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %580 = %578.0;
  %581 = %579.0;
  (%580, %581)
}

def @func_9414(%var_9412: Tensor[(9, 5, 6), float64], %var_9413: Tensor[(9, 5, 6), float64]) -> Tensor[(9, 5, 6), float64] {
  @func_9410(%var_9412, %var_9413) /* ty=Tensor[(9, 5, 6), float64] */
}

def @func_3328() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  @func_3326() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */
}

def @func_12429() -> (Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) {
  %582 = @func_6009() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) */;
  %583 = @func_4992() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %584 = %582.1;
  %585 = @func_10743() /* ty=Tensor[(16, 14, ?), bool] */;
  %586 = %583.1;
  (%584, %585, %586)
}

def @func_16330(%var_16328: Tensor[(16, 14, 2016), bool]) -> (Tensor[(16, 14, 2016), uint64], Tensor[(16, 14, 2016), bool]) {
  @func_16327(%var_16328) /* ty=(Tensor[(16, 14, 2016), uint64], Tensor[(16, 14, 2016), bool]) */
}

def @func_3139() -> (Tensor[(8, 8, 6), float64],) {
  %587 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  (%587,)
}

def @func_2340(%var_2338: Tensor[(2, 11, 15), float32]) -> (Tensor[(2, 11, 15), bool], Tensor[(2, 11, 15), int8], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_2337(%var_2338) /* ty=(Tensor[(2, 11, 15), bool], Tensor[(2, 11, 15), int8], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_8918() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %588 = @func_7057() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %589 = @func_2902() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %590 = %588.0;
  %591 = %589.0;
  (%590, %591)
}

def @func_15911() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %592 = @func_14382() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %593 = @func_2880() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %594 = @func_8631() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %595 = %594.0;
  %596 = cast(%595, dtype="float64") /* ty=Tensor[(16, 14, 1), float64] */;
  %597 = %592.0;
  %598 = %593.1;
  %599 = erf(%596) /* ty=Tensor[(16, 14, 1), float64] */;
  (%597, %598, %599)
}

def @func_17292() -> (Tensor[(8, 8, 6), float64],) {
  %602 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %600 = @func_1869() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %601 = %600.0;
    (%601,)
  };
  %602() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_2780() -> Tensor[(8, 8, 6), float64] {
  %604 = fn () -> Tensor[(8, 8, 6), float64] {
    %603 = @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
    %603.0
  };
  %604() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_13863() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %608 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %605 = @func_2779() /* ty=Tensor[(8, 8, 6), float64] */;
    %606 = @func_12104() /* ty=Tensor[(8, 8, 6), float64] */;
    %607 = @func_3747() /* ty=Tensor[(8, 8, 6), float64] */;
    (%605, %606, %607)
  };
  %608() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_2187() -> (Tensor[(8, 8, 6), float64],) {
  @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_13324() -> (Tensor[(8, 8, 6), float64],) {
  @func_13322() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_839() -> Tensor[(8, 8, 6), float64] {
  @func_837() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_5816() -> (Tensor[(8, 8, 6), float64],) {
  %609 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
  (%609,)
}

def @func_7573() -> (Tensor[(8, 8, 6), float64],) {
  %610 = @func_5064() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %611 = %610.0;
  (%611,)
}

def @func_14362(%var_14335: Tensor[(6, 13, 13), float32], %var_14355: Tensor[(6, 13, 13), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int32], Tensor[(6, 13, 13), int64]) {
  %612 = @func_10454() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %613 = @func_8918() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %614 = @func_13172() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int32]) */;
  %615 = cast(%var_14335, dtype="float32") /* ty=Tensor[(6, 13, 13), float32] */;
  %616 = rsqrt(%615) /* ty=Tensor[(6, 13, 13), float32] */;
  %617 = cast(%var_14335, dtype="float64") /* ty=Tensor[(6, 13, 13), float64] */;
  %618 = shape_of(%616, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%616, dtype="float64") /* ty=Tensor[(6, 13, 13), float64] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %621 = power(%619, %620) /* ty=Tensor[(6, 13, 13), float64] */;
  %622 = cast(%var_14355, dtype="int64") /* ty=Tensor[(6, 13, 13), int64] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%621, dtype="int64") /* ty=Tensor[(6, 13, 13), int64] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %626 = %612.1;
  %627 = %613.0;
  %628 = %614.1;
  %629 = multiply(%624, %625) /* ty=Tensor[(6, 13, 13), int64] */;
  (%626, %627, %628, %629)
}

def @func_3225(%var_3223: Tensor[(16, 14, 9), float64]) -> Tensor[(16, 14, 9), float32] {
  @func_3222(%var_3223) /* ty=Tensor[(16, 14, 9), float32] */
}

def @func_11267() -> (Tensor[(16, 14, 1), float64],) {
  %630 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %631 = %630.0;
  (%631,)
}

def @func_3698(%var_3697: Tensor[(16, 12, 14), float32]) -> Tensor[(16, 12, 14), float32] {
  %633 = fn (%var_3693: Tensor[(16, 12, 14), float32]) -> Tensor[(16, 12, 14), float32] {
    %632 = cast(%var_3693, dtype="float32") /* ty=Tensor[(16, 12, 14), float32] */;
    sinh(%632) /* ty=Tensor[(16, 12, 14), float32] */
  };
  %633(%var_3697) /* ty=Tensor[(16, 12, 14), float32] */
}

def @func_12382() -> Tensor[(8, 8, 6), float64] {
  @func_1518() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_13419() -> Tensor[(16, 14, 1), float64] {
  %635 = fn () -> Tensor[(16, 14, 1), float64] {
    %634 = @func_10691() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32], Tensor[(16, 14, 1), float64]) */;
    %634.3
  };
  %635() /* ty=Tensor[(16, 14, 1), float64] */
}

def @func_794(%var_791: Tensor[(1, 7, 13), float64], %var_792: Tensor[(4, 7, 13), float64], %var_793: Tensor[(6, 7, 13), float64]) -> (Tensor[(4, 7, 13), float64], Tensor[(6, 7, 13), float32], Tensor[(8, 8, 6), int16], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float32]) {
  @func_789(%var_791, %var_792, %var_793) /* ty=(Tensor[(4, 7, 13), float64], Tensor[(6, 7, 13), float32], Tensor[(8, 8, 6), int16], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float32]) */
}

def @func_14145() -> (Tensor[(8, 8, 6), float64],) {
  %636 = @func_12429() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */;
  %637 = %636.2;
  (%637,)
}

def @func_13968() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) {
  %648 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) {
    %638 = @func_12670() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %639 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %640 = @func_8479() /* ty=Tensor[(8, 8, 6), float64] */;
    %641 = cast(%640, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
    %642 = reshape(%641, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float32] */;
    %643 = @func_2123() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %644 = %638.0;
    %645 = %639.0;
    %646 = @func_900(%642) /* ty=Tensor[(8, 8, 6), int64] */;
    %647 = %643.0;
    (%640, %644, %645, %646, %647)
  };
  %648() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) */
}

def @func_4893() -> (Tensor[(16, 14, 1), float64],) {
  %651 = fn () -> (Tensor[(16, 14, 1), float64],) {
    %649 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %650 = %649.0;
    (%650,)
  };
  %651() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_11246(%var_11244: Tensor[(14, 2, 11), int64], %var_11245: Tensor[(2688), float32]) -> (Tensor[(14, 2, 11), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2688), float32]) {
  @func_11242(%var_11244, %var_11245) /* ty=(Tensor[(14, 2, 11), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2688), float32]) */
}

def @func_8681(%var_8679: int32, %var_8680: Tensor[(2, 4, 6), int32]) -> (Tensor[(2, 4, 6), float32],) {
  %660 = fn (%var_8664: int32, %var_8665: Tensor[(2, 4, 6), int32]) -> (Tensor[(2, 4, 6), float32],) {
    %652 = cast(%var_8664, dtype="int32") /* ty=int32 */;
    %653 = cast(%var_8665, dtype="int32") /* ty=Tensor[(2, 4, 6), int32] */;
    %654 = bitwise_xor(%652, %653) /* ty=Tensor[(2, 4, 6), int32] */;
    %655 = cast(%var_8665, dtype="float32") /* ty=Tensor[(2, 4, 6), float32] */;
    %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
    %657 = cast(%654, dtype="float32") /* ty=Tensor[(2, 4, 6), float32] */;
    %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %659 = mod(%657, %658) /* ty=Tensor[(2, 4, 6), float32] */;
    (%659,)
  };
  %660(%var_8679, %var_8680) /* ty=(Tensor[(2, 4, 6), float32],) */
}

def @func_10149() -> (Tensor[(8, 8, 6), float64],) {
  @func_10147() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_7242() -> Tensor[(8, 8, 6), int64] {
  @func_7240() /* ty=Tensor[(8, 8, 6), int64] */
}

def @func_13322() -> (Tensor[(8, 8, 6), float64],) {
  %661 = @func_8170() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %662 = %661.0;
  (%662,)
}

def @func_7059() -> (Tensor[(8, 8, 6), float64],) {
  @func_7057() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_14710() -> Tensor[(8, 8, 6), float64] {
  @func_14708() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_15913() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  @func_15911() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */
}

def @func_16430(%var_16427: Tensor[(14, 3, 2), int16], %var_16428: Tensor[(14, 3, 2), int16], %var_16429: Tensor[(330), float32]) -> (Tensor[(14, 3, 2), int16], Tensor[(8, 8, 6), float64], Tensor[(330), float32]) {
  %672 = fn (%var_16401: Tensor[(14, 3, 2), int16], %var_16402: Tensor[(14, 3, 2), int16], %var_16423: Tensor[(330), float32]) -> (Tensor[(14, 3, 2), int16], Tensor[(8, 8, 6), float64], Tensor[(330), float32]) {
    %663 = cast(%var_16402, dtype="int16") /* ty=Tensor[(14, 3, 2), int16] */;
    %664 = shape_of(%var_16401, dtype="int32") /* ty=Tensor[(3), int32] */;
    %665 = cast(%var_16401, dtype="int16") /* ty=Tensor[(14, 3, 2), int16] */;
    %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %667 = cast(%var_16423, dtype="float32") /* ty=Tensor[(330), float32] */;
    %668 = reshape(%667, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), float32] */;
    %669 = @func_2337(%668) /* ty=(Tensor[(2, 11, 15), bool], Tensor[(2, 11, 15), int8], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %670 = left_shift(%665, %666) /* ty=Tensor[(14, 3, 2), int16] */;
    %671 = %669.2;
    (%670, %671, %var_16423)
  };
  %672(%var_16427, %var_16428, %var_16429) /* ty=(Tensor[(14, 3, 2), int16], Tensor[(8, 8, 6), float64], Tensor[(330), float32]) */
}

def @func_1491() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) {
  @func_1489() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */
}

def @func_12104() -> Tensor[(8, 8, 6), float64] {
  %673 = @func_8267() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %673.1
}

def @func_2084() -> (Tensor[(8, 8, 6), float64],) {
  %675 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %674 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
    (%674,)
  };
  %675() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_6947() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_6945() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_9471() -> (Tensor[(8, 8, 6), float64],) {
  %678 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %676 = @func_2880() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %677 = %676.0;
    (%677,)
  };
  %678() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_3508(%var_3506: Tensor[(12, 4, 13), uint64], %var_3507: Tensor[(12, 4, 13), uint64]) -> (Tensor[(12, 4, 13), float64], Tensor[(8, 8, 6), float64]) {
  @func_3504(%var_3506, %var_3507) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_8170() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %679 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %680 = %679.0;
  %681 = @func_3747() /* ty=Tensor[(8, 8, 6), float64] */;
  (%680, %681)
}

def @func_15254() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32], Tensor[(8, 8, 6), int64]) {
  %682 = cast(meta[relay.Constant][10] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %683 = reshape(%682, newshape=[16, 12, 14]) /* ty=Tensor[(16, 12, 14), float32] */;
  %684 = @func_13788() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %685 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  %686 = @func_3696(%683) /* ty=Tensor[(16, 12, 14), float32] */;
  %687 = %684.0;
  (%685, %686, meta[relay.Constant][10] /* ty=Tensor[(2688), float32] */, %687)
}

def @func_3564() -> Tensor[(8, 8, 6), int64] {
  %688 = fn () -> Tensor[(8, 8, 6), int64] {
    @func_3059() /* ty=Tensor[(8, 8, 6), int64] */
  };
  %688() /* ty=Tensor[(8, 8, 6), int64] */
}

def @func_7240() -> Tensor[(8, 8, 6), int64] {
  %689 = @func_6426() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %689.0
}

def @func_7057() -> (Tensor[(8, 8, 6), float64],) {
  %690 = @func_1518() /* ty=Tensor[(8, 8, 6), float64] */;
  (%690,)
}

def @func_7967() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %691 = @func_5648() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %692 = @func_5402() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %693 = @func_7444() /* ty=Tensor[(8, 8, 6), float64] */;
  %694 = %691.5;
  %695 = %692.0;
  (%693, %694, %695)
}

def @func_4100() -> Tensor[(8, 8, 6), float64] {
  %697 = fn () -> Tensor[(8, 8, 6), float64] {
    %696 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
    %696.0
  };
  %697() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_12974() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
  @func_12972() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */
}

def @func_9092() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  @func_9090() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */
}

def @func_12578(%var_12575: Tensor[(13, 4, 14), uint64], %var_12576: Tensor[(13, 4, 14), uint64], %var_12577: Tensor[(13, 4, 14), float32]) -> (Tensor[(13, 4, 14), uint64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(13, 4, 14), int16], Tensor[(16, 14, 1), float64], Tensor[(13, 4, 14), bool]) {
  %726 = fn (%var_12507: Tensor[(13, 4, 14), uint64], %var_12508: Tensor[(13, 4, 14), uint64], %var_12557: Tensor[(13, 4, 14), float32]) -> (Tensor[(13, 4, 14), uint64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(13, 4, 14), int16], Tensor[(16, 14, 1), float64], Tensor[(13, 4, 14), bool]) {
    %698 = cast(%var_12508, dtype="uint64") /* ty=Tensor[(13, 4, 14), uint64] */;
    %699 = shape_of(%var_12507, dtype="int32") /* ty=Tensor[(3), int32] */;
    %700 = cast(%var_12507, dtype="uint64") /* ty=Tensor[(13, 4, 14), uint64] */;
    %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %702 = @func_11780() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %703 = cast(%var_12507, dtype="int16") /* ty=Tensor[(13, 4, 14), int16] */;
    %704 = shape_of(%var_12508, dtype="int32") /* ty=Tensor[(3), int32] */;
    %705 = cast(%var_12508, dtype="int16") /* ty=Tensor[(13, 4, 14), int16] */;
    %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %707 = @func_12088() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %708 = cast(%var_12508, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
    %709 = shape_of(%var_12507, dtype="int32") /* ty=Tensor[(3), int32] */;
    %710 = cast(%var_12507, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
    %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %712 = bitwise_or(%710, %711) /* ty=Tensor[(13, 4, 14), uint8] */;
    %713 = cast(%712, dtype="float32") /* ty=Tensor[(13, 4, 14), float32] */;
    %714 = tan(%713) /* ty=Tensor[(13, 4, 14), float32] */;
    %715 = cast(%var_12557, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
    %716 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
    %717 = cast(%714, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
    %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %719 = right_shift(%700, %701) /* ty=Tensor[(13, 4, 14), uint64] */;
    %720 = %702.0;
    %721 = @func_8479() /* ty=Tensor[(8, 8, 6), float64] */;
    %722 = @func_4847() /* ty=Tensor[(8, 8, 6), float32] */;
    %723 = subtract(%705, %706) /* ty=Tensor[(13, 4, 14), int16] */;
    %724 = %707.0;
    %725 = equal(%717, %718) /* ty=Tensor[(13, 4, 14), bool] */;
    (%719, %720, %721, %722, %723, %724, %725)
  };
  %726(%var_12575, %var_12576, %var_12577) /* ty=(Tensor[(13, 4, 14), uint64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(13, 4, 14), int16], Tensor[(16, 14, 1), float64], Tensor[(13, 4, 14), bool]) */
}

def @func_11749(%var_11747: Tensor[(15, 2, 11), float32]) -> Tensor[(15, 2, 11), float32] {
  @func_11746(%var_11747) /* ty=Tensor[(15, 2, 11), float32] */
}

def @func_7445() -> Tensor[(8, 8, 6), float64] {
  %727 = fn () -> Tensor[(8, 8, 6), float64] {
    @func_837() /* ty=Tensor[(8, 8, 6), float64] */
  };
  %727() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_13031(%var_13011: Tensor[(330), float32]) -> (Tensor[(8, 8, 6), float64], Tensor[(2, 11, 15), bool], Tensor[(330), float32]) {
  %728 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %729 = cast(%var_13011, dtype="float32") /* ty=Tensor[(330), float32] */;
  %730 = reshape(%729, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), float32] */;
  %731 = @func_2337(%730) /* ty=(Tensor[(2, 11, 15), bool], Tensor[(2, 11, 15), int8], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %732 = cast(%var_13011, dtype="float32") /* ty=Tensor[(330), float32] */;
  %733 = %728.2;
  %734 = %731.0;
  %735 = log10(%732) /* ty=Tensor[(330), float32] */;
  (%733, %734, %735)
}

def @func_1972() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %736 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
  %737 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  (%736, %737)
}

def @func_11358() -> Tensor[(8, 8, 6), float64] {
  %739 = fn () -> Tensor[(8, 8, 6), float64] {
    %738 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %738.0
  };
  %739() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_15256() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32], Tensor[(8, 8, 6), int64]) {
  @func_15254() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32], Tensor[(8, 8, 6), int64]) */
}

def @func_9410(%var_9387: Tensor[(9, 5, 6), float64], %var_9388: Tensor[(9, 5, 6), float64]) -> Tensor[(9, 5, 6), float64] {
  %740 = cast(%var_9388, dtype="float64") /* ty=Tensor[(9, 5, 6), float64] */;
  %741 = shape_of(%var_9387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%var_9387, dtype="float64") /* ty=Tensor[(9, 5, 6), float64] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%742, %743) /* ty=Tensor[(9, 5, 6), float64] */
}

def @func_2179() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %756 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
    %744 = @func_1869() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %745 = @func_1846() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %746 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %747 = @func_1377() /* ty=Tensor[(16, 14, 1), float64] */;
    %748 = cast(%747, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
    %749 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %750 = %744.0;
    %751 = %745.2;
    %752 = %746.0;
    %753 = sinh(%748) /* ty=Tensor[(16, 14, 1), float32] */;
    %754 = %749.0;
    %755 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
    (%750, %751, %752, %753, %754, %755)
  };
  %756() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_1636() -> (Tensor[(8, 8, 6), float64],) {
  %759 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %757 = @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
    %758 = %757.0;
    (%758,)
  };
  %759() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_7561() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %760 = @func_4892() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %761 = @func_1130() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %762 = %760.0;
  %763 = %761.1;
  (%762, %763)
}

def @func_10200() -> (Tensor[(8, 8, 6), float64],) {
  %764 = @func_7444() /* ty=Tensor[(8, 8, 6), float64] */;
  (%764,)
}

def @func_12950() -> (Tensor[(16, 14, 1), float64], Tensor[(16, 14, ?), bool]) {
  @func_12948() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(16, 14, ?), bool]) */
}

def @func_7516() -> (Tensor[(16, 14, 1), float32],) {
  @func_7514() /* ty=(Tensor[(16, 14, 1), float32],) */
}

def @func_8368() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %765 = @func_8214() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %766 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %767 = @func_6140() /* ty=Tensor[(8, 8, 6), float64] */;
  %768 = %765.2;
  %769 = %766.0;
  (%767, %768, %769)
}

def @func_3222(%var_3195: Tensor[(16, 14, 9), float64]) -> Tensor[(16, 14, 9), float32] {
  %770 = @func_2123() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %771 = %770.0;
  %772 = cast(%771, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  %773 = cast(%var_3195, dtype="float32") /* ty=Tensor[(16, 14, 9), float32] */;
  add(%772, %773) /* ty=Tensor[(16, 14, 9), float32] */
}

def @func_674(%var_673: Tensor[(2, 16, 10), float64]) -> (Tensor[(2, 16, 10), float64],) {
  %776 = fn (%var_664: Tensor[(2, 16, 10), float64]) -> (Tensor[(2, 16, 10), float64],) {
    %774 = cast(%var_664, dtype="float64") /* ty=Tensor[(2, 16, 10), float64] */;
    %775 = exp(%774) /* ty=Tensor[(2, 16, 10), float64] */;
    (%775,)
  };
  %776(%var_673) /* ty=(Tensor[(2, 16, 10), float64],) */
}

def @func_5392() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_5390() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_12477() -> (Tensor[(8, 8, 6), float64],) {
  %777 = @func_11017() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, 2016), uint8]) */;
  %778 = %777.0;
  (%778,)
}

def @func_6262() -> (Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) {
  @func_6260() /* ty=(Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */
}

def @func_6828() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) {
  %785 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) {
    %779 = @func_3032() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %780 = @func_6448() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %781 = %780.0;
    %782 = cast(%781, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
    %783 = %779.0;
    %784 = log10(%782) /* ty=Tensor[(16, 14, 1), float32] */;
    (%783, %784)
  };
  %785() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */
}

def @func_5390() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %786 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %787 = @func_2446() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %788 = %786.1;
  %789 = @func_2779() /* ty=Tensor[(8, 8, 6), float64] */;
  %790 = %787.1;
  (%788, %789, %790)
}

def @func_10147() -> (Tensor[(8, 8, 6), float64],) {
  %791 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %792 = %791.0;
  (%792,)
}

def @func_4046(%var_4045: Tensor[(16, 14, 7), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 7), bool]) {
  %800 = fn (%var_4020: Tensor[(16, 14, 7), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 7), bool]) {
    %793 = @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */;
    %794 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %795 = %794.0;
    %796 = cast(%795, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
    %797 = cast(%var_4020, dtype="bool") /* ty=Tensor[(16, 14, 7), bool] */;
    %798 = %793.0;
    %799 = equal(%796, %797) /* ty=Tensor[(16, 14, 7), bool] */;
    (%798, %799)
  };
  %800(%var_4045) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 7), bool]) */
}

def @func_6980() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) {
  %801 = @func_3587() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %802 = @func_2446() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %803 = %801.0;
  %804 = %802.0;
  (%803, %804)
}

def @func_4867() -> Tensor[(16, 14, 1), float64] {
  @func_4865() /* ty=Tensor[(16, 14, 1), float64] */
}

def @func_1047() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) {
  @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */
}

def @func_6448() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %805 = @func_5144() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %806 = @func_3139() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %807 = %805.0;
  %808 = %806.0;
  (%807, %808)
}

def @func_355() -> Tensor[(8, 8, 6), float64] {
  @func_353() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_14646(%var_14644: Tensor[(6, 9, 14), float32], %var_14645: Tensor[(6, 9, 14), float32]) -> (Tensor[(6, 9, 14), float32], Tensor[(6, 9, 14), float32]) {
  @func_14642(%var_14644, %var_14645) /* ty=(Tensor[(6, 9, 14), float32], Tensor[(6, 9, 14), float32]) */
}

def @func_13686() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(1287), float32]) {
  @func_13684() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(1287), float32]) */
}

def @func_14545() -> Tensor[(8, 8, 6), float64] {
  @func_1721() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_16820() -> (Tensor[(16, 14, 1), float64],) {
  %811 = fn () -> (Tensor[(16, 14, 1), float64],) {
    %809 = @func_6009() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) */;
    %810 = %809.0;
    (%810,)
  };
  %811() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_17235() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  @func_17233() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_5505() -> Tensor[(8, 8, 6), float64] {
  @func_2779() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_5507() -> Tensor[(8, 8, 6), float64] {
  @func_5505() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_5650() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  @func_5648() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */
}

def @func_2951() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_2949() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_12714() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_12712() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_5462() -> Tensor[(8, 8, 6), float64] {
  %812 = fn () -> Tensor[(8, 8, 6), float64] {
    @func_353() /* ty=Tensor[(8, 8, 6), float64] */
  };
  %812() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_1896() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
  %817 = fn () -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
    %813 = @func_423() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), uint64]) */;
    %814 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %815 = %813.0;
    %816 = %814.0;
    (%815, %816)
  };
  %817() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */
}

def @func_247() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %818 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %819 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %820 = %818.0;
  %821 = %819.0;
  (%820, %821)
}

def @func_8480() -> Tensor[(8, 8, 6), float64] {
  %823 = fn () -> Tensor[(8, 8, 6), float64] {
    %822 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %822.0
  };
  %823() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_12090() -> (Tensor[(16, 14, 1), float64],) {
  @func_12088() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_1378() -> Tensor[(16, 14, 1), float64] {
  %825 = fn () -> Tensor[(16, 14, 1), float64] {
    %824 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %824.0
  };
  %825() /* ty=Tensor[(16, 14, 1), float64] */
}

def @func_11161(%var_11158: Tensor[(9, 9, 5), bool], %var_11159: Tensor[(9, 9, 5), bool], %var_11160: Tensor[(1568), float64]) -> (Tensor[(9, 9, 5), bool], Tensor[(16, 14, 7), bool], Tensor[(1568), float64]) {
  @func_11156(%var_11158, %var_11159, %var_11160) /* ty=(Tensor[(9, 9, 5), bool], Tensor[(16, 14, 7), bool], Tensor[(1568), float64]) */
}

def @func_6556(%var_6536: int16, %var_6537: Tensor[(13, 4, 2), int16]) -> (Tensor[(13, 4, 2), int16], Tensor[(8, 8, 6), int64]) {
  %826 = cast(%var_6536, dtype="int16") /* ty=int16 */;
  %827 = cast(%var_6537, dtype="int16") /* ty=Tensor[(13, 4, 2), int16] */;
  %828 = @func_4670() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %829 = bitwise_xor(%826, %827) /* ty=Tensor[(13, 4, 2), int16] */;
  %830 = %828.0;
  (%829, %830)
}

def @func_394() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %831 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 14, 1), float64] */, dtype="float64") /* ty=Tensor[(16, 14, 1), float64] */;
  %832 = asin(%831) /* ty=Tensor[(16, 14, 1), float64] */;
  %833 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  (%832, %833)
}

def @func_521() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_13315() -> (Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64]) {
  %834 = @func_6276() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %835 = @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */;
  %836 = %834.1;
  %837 = @func_12890() /* ty=Tensor[(16, 14, ?), bool] */;
  %838 = %835.1;
  %839 = @func_5461() /* ty=Tensor[(8, 8, 6), float64] */;
  (%836, %837, %838, %839)
}

def @func_4769() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %840 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %841 = %840.0;
  %842 = @func_3371() /* ty=Tensor[(8, 8, 6), float64] */;
  (%841, %842)
}

def @func_1045() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) {
  %843 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
  %845 = reshape(%844, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float32] */;
  %846 = @func_900(%845) /* ty=Tensor[(8, 8, 6), int64] */;
  (%843, %846)
}

def @func_2337(%var_2280: Tensor[(2, 11, 15), float32]) -> (Tensor[(2, 11, 15), bool], Tensor[(2, 11, 15), int8], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %847 = cast(%var_2280, dtype="bool") /* ty=Tensor[(2, 11, 15), bool] */;
  %848 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(2, 11, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %849 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 11, 15), float32] */, dtype="bool") /* ty=Tensor[(2, 11, 15), bool] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %851 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 11, 15), float32] */, dtype="int8") /* ty=Tensor[(2, 11, 15), int8] */;
  %852 = shape_of(%var_2280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %853 = cast(%var_2280, dtype="int8") /* ty=Tensor[(2, 11, 15), int8] */;
  %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %855 = @func_1869() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %856 = @func_1635() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %857 = greater(%849, %850) /* ty=Tensor[(2, 11, 15), bool] */;
  %858 = subtract(%853, %854) /* ty=Tensor[(2, 11, 15), int8] */;
  %859 = %855.0;
  %860 = %856.0;
  (%857, %858, %859, %860)
}

def @func_396() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_423() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), uint64]) {
  %861 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %862 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %863 = %862.1;
  %864 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 8, 6), float64] */, dtype="uint64") /* ty=Tensor[(8, 8, 6), uint64] */;
  %865 = shape_of(%863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%863, dtype="uint64") /* ty=Tensor[(8, 8, 6), uint64] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %868 = %861.1;
  %869 = maximum(%866, %867) /* ty=Tensor[(8, 8, 6), uint64] */;
  (%868, %869)
}

def @func_1563(%var_1528: Tensor[(8, 8, 6), float64]) -> (Tensor[(8, 8, 6), int16], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %870 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %871 = %870.2;
  %872 = cast(%var_1528, dtype="int16") /* ty=Tensor[(8, 8, 6), int16] */;
  %873 = shape_of(%871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%871, dtype="int16") /* ty=Tensor[(8, 8, 6), int16] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %876 = @func_1489() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %877 = %876.2;
  %878 = cast(%877, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %879 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %880 = left_shift(%874, %875) /* ty=Tensor[(8, 8, 6), int16] */;
  %881 = erf(%878) /* ty=Tensor[(8, 8, 6), float64] */;
  %882 = %879.0;
  (%880, %881, %882)
}

def @func_11516() -> (Tensor[(8, 8, 6), float64],) {
  %883 = @func_6326() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %884 = %883.0;
  (%884,)
}

def @func_7969() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  @func_7967() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_8139() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %888 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %885 = @func_6233() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %886 = %885.0;
    %887 = @func_7444() /* ty=Tensor[(8, 8, 6), float64] */;
    (%886, %887)
  };
  %888() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_15931() -> Tensor[(8, 8, 6), float64] {
  @func_15929() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_16071() -> (Tensor[(8, 8, 6), bool],) {
  %889 = @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */;
  %890 = %889.1;
  (%890,)
}

def @func_11468() -> (Tensor[(16, 14, 1), float64],) {
  %891 = @func_8631() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %892 = %891.0;
  (%892,)
}

def @func_10400() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %899 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
    %893 = @func_2178() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %894 = @func_5144() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %895 = %893.1;
    %896 = @func_1377() /* ty=Tensor[(16, 14, 1), float64] */;
    %897 = %894.0;
    %898 = @func_5675() /* ty=Tensor[(8, 8, 6), float64] */;
    (%895, %896, %897, %898)
  };
  %899() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_15007() -> Tensor[(8, 8, 6), int64] {
  %901 = fn () -> Tensor[(8, 8, 6), int64] {
    %900 = @func_8552() /* ty=(Tensor[(8, 8, 6), int64],) */;
    %900.0
  };
  %901() /* ty=Tensor[(8, 8, 6), int64] */
}

def @main(%var_17328: uint16) -> (Tensor[(11, 1, 4), uint16],) {
  %902 = cast(%var_17328, dtype="uint16") /* ty=uint16 */;
  %903 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 1, 4), uint16] */, dtype="uint16") /* ty=Tensor[(11, 1, 4), uint16] */;
  %904 = subtract(%902, %903) /* ty=Tensor[(11, 1, 4), uint16] */;
  (%904,)
}

def @func_9090() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %905 = @func_7907() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %906 = @func_8479() /* ty=Tensor[(8, 8, 6), float64] */;
  %907 = %905.0;
  (%906, %907)
}

def @func_15108() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %912 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %908 = @func_11860() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %909 = @func_8078() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
    %910 = %908.2;
    %911 = %909.2;
    (%910, %911)
  };
  %912() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_4323() -> Tensor[(8, 8, 6), float64] {
  %913 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %913.0
}

def @func_16662() -> (Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), bool]) {
  @func_16660() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), bool]) */
}

def @func_12466() -> (Tensor[(8, 8, 6), float64],) {
  %916 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %914 = @func_8158() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %915 = %914.1;
    (%915,)
  };
  %916() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_13901() -> (Tensor[(14, 6, 15), float32],) {
  @func_13899() /* ty=(Tensor[(14, 6, 15), float32],) */
}

def @func_3679(%var_3678: Tensor[(8, 8, 6), float64]) -> Tensor[(8, 8, 6), int32] {
  %922 = fn (%var_3667: Tensor[(8, 8, 6), float64]) -> Tensor[(8, 8, 6), int32] {
    %917 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
    %918 = cast(%var_3667, dtype="int32") /* ty=Tensor[(8, 8, 6), int32] */;
    %919 = shape_of(%917, dtype="int32") /* ty=Tensor[(3), int32] */;
    %920 = cast(%917, dtype="int32") /* ty=Tensor[(8, 8, 6), int32] */;
    %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    minimum(%920, %921) /* ty=Tensor[(8, 8, 6), int32] */
  };
  %922(%var_3678) /* ty=Tensor[(8, 8, 6), int32] */
}

def @func_15849(%var_15848: Tensor[(16, 14, 10), bool]) -> (Tensor[(16, 14, 10), uint32], Tensor[(8, 8, 6), float64]) {
  %930 = fn (%var_15836: Tensor[(16, 14, 10), bool]) -> (Tensor[(16, 14, 10), uint32], Tensor[(8, 8, 6), float64]) {
    %923 = @func_12429() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */;
    %924 = %923.1;
    %925 = cast(%924, dtype="uint32") /* ty=Tensor[(16, 14, ?), uint32] */;
    %926 = cast(%var_15836, dtype="uint32") /* ty=Tensor[(16, 14, 10), uint32] */;
    %927 = @func_2185() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %928 = left_shift(%925, %926) /* ty=Tensor[(16, 14, 10), uint32] */;
    %929 = %927.0;
    (%928, %929)
  };
  %930(%var_15848) /* ty=(Tensor[(16, 14, 10), uint32], Tensor[(8, 8, 6), float64]) */
}

def @func_13529() -> (Tensor[(16, 14, 1), float64], Tensor[(15, 2, 15), float64], Tensor[(1, 624), uint64], Tensor[(16, 14, 1), float64]) {
  %939 = fn () -> (Tensor[(16, 14, 1), float64], Tensor[(15, 2, 15), float64], Tensor[(1, 624), uint64], Tensor[(16, 14, 1), float64]) {
    %931 = @func_11468() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %932 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 624), uint64] */, dtype="uint64") /* ty=Tensor[(1, 624), uint64] */;
    %933 = reshape(%932, newshape=[624]) /* ty=Tensor[(624), uint64] */;
    %934 = @func_4601(%933) /* ty=(Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(16, 14, 9), float32], Tensor[(8, 8, 6), int32], Tensor[(384), float64], Tensor[(8, 8, 6), float64], Tensor[(624), uint64]) */;
    %935 = @func_2178() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %936 = %931.0;
    %937 = %934.1;
    %938 = %935.4;
    (%936, %937, meta[relay.Constant][15] /* ty=Tensor[(1, 624), uint64] */, %938)
  };
  %939() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(15, 2, 15), float64], Tensor[(1, 624), uint64], Tensor[(16, 14, 1), float64]) */
}

def @func_4325() -> Tensor[(8, 8, 6), float64] {
  @func_4323() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_16868(%var_16866: Tensor[(16, 14, 2), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 2), uint64]) {
  @func_16865(%var_16866) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 2), uint64]) */
}

def @func_2446() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %940 = @func_2083() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %941 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %942 = %940.0;
  %943 = %941.1;
  %944 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  (%942, %943, %944)
}

def @func_1435() -> (Tensor[(8, 8, 6), float64],) {
  %945 = @func_1130() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %946 = %945.1;
  (%946,)
}

def @func_14829() -> (Tensor[(8, 8, 6), float64],) {
  %949 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %947 = @func_3455() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %948 = %947.0;
    (%948,)
  };
  %949() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_8490() -> Tensor[(16, 14, 1), float32] {
  %950 = @func_7266() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %951 = %950.0;
  %952 = cast(%951, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  log(%952) /* ty=Tensor[(16, 14, 1), float32] */
}

def @func_1448() -> Tensor[(8, 8, 6), float64] {
  %953 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %953.1
}

def @func_11242(%var_11227: Tensor[(14, 2, 11), int64], %var_11238: Tensor[(2688), float32]) -> (Tensor[(14, 2, 11), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2688), float32]) {
  %954 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 2, 11), int64] */, dtype="int64") /* ty=Tensor[(14, 2, 11), int64] */;
  %955 = shape_of(%var_11227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %956 = cast(%var_11227, dtype="int64") /* ty=Tensor[(14, 2, 11), int64] */;
  %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %958 = @func_6276() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %959 = cast(%var_11238, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %960 = reshape(%959, newshape=[1, 2688]) /* ty=Tensor[(1, 2688), float32] */;
  %961 = @func_9375(%960) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(1, 2688), float32], Tensor[(8, 8, 6), float64]) */;
  %962 = subtract(%956, %957) /* ty=Tensor[(14, 2, 11), int64] */;
  %963 = %958.0;
  %964 = %961.0;
  (%962, %963, %964, %var_11238)
}

def @func_16140(%var_16128: Tensor[(16, 14, 1), float64], %var_16138: uint64) -> (Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64], Tensor[(1584), float64], uint64) {
  %965 = @func_13528() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(15, 2, 15), float64], Tensor[(1, 624), uint64], Tensor[(16, 14, 1), float64]) */;
  %966 = %965.0;
  %967 = cast(%var_16128, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %968 = shape_of(%966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %969 = cast(%966, dtype="bool") /* ty=Tensor[(16, 14, 1), bool] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %971 = cast(meta[relay.Constant][17] /* ty=Tensor[(1584), float64] */, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %972 = cast(%var_16138, dtype="uint64") /* ty=uint64 */;
  %973 = reshape(%971, newshape=[1584]) /* ty=Tensor[(1584), float64] */;
  %974 = reshape(%972, newshape=[]) /* ty=uint64 */;
  %975 = @func_15336(%973, %974) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(1584), float64], Tensor[(11, 7, 14), bool], uint64, Tensor[(1078), uint64], Tensor[(8, 8, 6), float64]) */;
  %976 = equal(%969, %970) /* ty=Tensor[(16, 14, ?), bool] */;
  %977 = %975.6;
  (%976, %977, meta[relay.Constant][17] /* ty=Tensor[(1584), float64] */, %var_16138)
}

def @func_7866() -> Tensor[(8, 8, 6), float64] {
  @func_5461() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_353() -> Tensor[(8, 8, 6), float64] {
  %978 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %978.0
}

def @func_16258(%var_16256: Tensor[(8, 4, 10), float32], %var_16257: Tensor[(8, 4, 10), float32]) -> (Tensor[(8, 4, 10), float32], Tensor[(14, 6, 15), float32]) {
  @func_16254(%var_16256, %var_16257) /* ty=(Tensor[(8, 4, 10), float32], Tensor[(14, 6, 15), float32]) */
}

def @func_16865(%var_16859: Tensor[(16, 14, 2), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 2), uint64]) {
  %979 = @func_8138() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %980 = @func_8814() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %981 = %980.1;
  %982 = cast(%981, dtype="uint64") /* ty=Tensor[(16, 14, 1), uint64] */;
  %983 = cast(%var_16859, dtype="uint64") /* ty=Tensor[(16, 14, 2), uint64] */;
  %984 = %979.1;
  %985 = minimum(%982, %983) /* ty=Tensor[(16, 14, 2), uint64] */;
  (%984, %985)
}

def @func_7752() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %991 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %986 = @func_5064() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %987 = @func_6980() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
    %988 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
    %989 = %986.0;
    %990 = %987.1;
    (%988, %989, %990)
  };
  %991() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_8158() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %992 = @func_1448() /* ty=Tensor[(8, 8, 6), float64] */;
  %993 = @func_3747() /* ty=Tensor[(8, 8, 6), float64] */;
  (%992, %993)
}

def @func_5901(%var_5899: Tensor[(320), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(2, 16, 10), float64], Tensor[(320), float64], Tensor[(8, 8, 6), float64]) {
  @func_5898(%var_5899) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(2, 16, 10), float64], Tensor[(320), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_9023() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %997 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %994 = @func_7037() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %995 = %994.1;
    %996 = @func_837() /* ty=Tensor[(8, 8, 6), float64] */;
    (%995, %996)
  };
  %997() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_14296() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) {
  %1002 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) {
    %998 = @func_9470() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %999 = %998.0;
    %1000 = @func_10743() /* ty=Tensor[(16, 14, ?), bool] */;
    %1001 = @func_837() /* ty=Tensor[(8, 8, 6), float64] */;
    (%999, %1000, %1001)
  };
  %1002() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64]) */
}

def @func_4007() -> (Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) {
  %1007 = fn () -> (Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) {
    %1003 = @func_3587() /* ty=(Tensor[(8, 8, 6), int64],) */;
    %1004 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %1005 = %1003.0;
    %1006 = %1004.0;
    (%1005, %1006)
  };
  %1007() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) */
}

def @func_16073() -> (Tensor[(8, 8, 6), bool],) {
  @func_16071() /* ty=(Tensor[(8, 8, 6), bool],) */
}

def @func_8661() -> (Tensor[(8, 8, 6), float64],) {
  @func_8659() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_10129() -> Tensor[(8, 8, 6), float64] {
  %1009 = fn () -> Tensor[(8, 8, 6), float64] {
    %1008 = @func_7751() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %1008.1
  };
  %1009() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_9585(%var_9583: Tensor[(1792), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 8), bool], Tensor[(1792), float64], Tensor[(8, 8, 6), int64], Tensor[(5, 6, 4), float64], Tensor[(120), float64]) {
  @func_9582(%var_9583) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 8), bool], Tensor[(1792), float64], Tensor[(8, 8, 6), int64], Tensor[(5, 6, 4), float64], Tensor[(120), float64]) */
}

def @func_1566(%var_1564: Tensor[(8, 8, 6), float64]) -> (Tensor[(8, 8, 6), int16], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_1563(%var_1564) /* ty=(Tensor[(8, 8, 6), int16], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_4456() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64]) {
  %1020 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64]) {
    %1010 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %1011 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %1012 = @func_1972() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %1013 = @func_2639() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
    %1014 = %1010.2;
    %1015 = %1011.0;
    %1016 = @func_3747() /* ty=Tensor[(8, 8, 6), float64] */;
    %1017 = %1012.1;
    %1018 = %1013.2;
    %1019 = @func_3371() /* ty=Tensor[(8, 8, 6), float64] */;
    (%1014, %1015, %1016, %1017, %1018, %1019)
  };
  %1020() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64]) */
}

def @func_519() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1021 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %1022 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %1023 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %1024 = %1021.1;
  %1025 = %1022.0;
  %1026 = %1023.0;
  (%1024, %1025, %1026)
}

def @func_7707(%var_7705: Tensor[(8, 8, 7), uint8], %var_7706: Tensor[(8, 8, 7), uint8]) -> Tensor[(8, 8, 7), uint8] {
  @func_7703(%var_7705, %var_7706) /* ty=Tensor[(8, 8, 7), uint8] */
}

def @func_2949() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1027 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %1028 = @func_2446() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1029 = @func_2373() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1030 = %1027.1;
  %1031 = %1028.0;
  %1032 = %1029.0;
  (%1030, %1031, %1032)
}

def @func_14483() -> (Tensor[(16, 14, 1), float32],) {
  @func_14481() /* ty=(Tensor[(16, 14, 1), float32],) */
}

def @func_2640() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) {
  %1049 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) {
    %1033 = @func_446() /* ty=Tensor[(8, 8, 6), float64] */;
    %1034 = cast(%1033, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
    %1035 = reshape(%1034, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
    %1036 = @func_313(%1035) /* ty=(Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
    %1037 = @func_1635() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %1038 = %1037.0;
    %1039 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 8, 6), float64] */, dtype="bool") /* ty=Tensor[(8, 8, 6), bool] */;
    %1040 = shape_of(%1038, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1041 = cast(%1038, dtype="bool") /* ty=Tensor[(8, 8, 6), bool] */;
    %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1043 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %1044 = @func_2067() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %1045 = %1036.2;
    %1046 = less(%1041, %1042) /* ty=Tensor[(8, 8, 6), bool] */;
    %1047 = %1043.2;
    %1048 = %1044.0;
    (%1033, %1045, %1046, %1047, %1048)
  };
  %1049() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */
}

def @func_1169() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) {
  @func_1167() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */
}

def @func_2185() -> (Tensor[(8, 8, 6), float64],) {
  %1050 = @func_1846() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1051 = %1050.2;
  (%1051,)
}

def @func_3748() -> Tensor[(8, 8, 6), float64] {
  %1053 = fn () -> Tensor[(8, 8, 6), float64] {
    %1052 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %1052.0
  };
  %1053() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_8441(%var_8439: Tensor[(13, 1, 4), float32]) -> (Tensor[(13, 1, 4), float32],) {
  @func_8438(%var_8439) /* ty=(Tensor[(13, 1, 4), float32],) */
}

def @func_8267() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
  %1054 = @func_6009() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) */;
  %1055 = @func_7573() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1056 = %1054.1;
  %1057 = %1055.0;
  (%1056, %1057)
}

def @func_8633() -> (Tensor[(16, 14, 1), float64],) {
  @func_8631() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_837() -> Tensor[(8, 8, 6), float64] {
  @func_353() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_425() -> (Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), uint64]) {
  @func_423() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), uint64]) */
}

def @func_3456() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1062 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %1058 = @func_3326() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
    %1059 = @func_2524() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %1060 = %1058.0;
    %1061 = %1059.0;
    (%1060, %1061)
  };
  %1062() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_4771() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_4769() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_6326() -> (Tensor[(8, 8, 6), float64],) {
  %1063 = @func_1045() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %1064 = %1063.0;
  (%1064,)
}

def @func_13317() -> (Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64]) {
  @func_13315() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64]) */
}

def @func_10849() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) {
  %1065 = @func_3957() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %1066 = @func_6945() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1067 = %1065.0;
  %1068 = %1066.0;
  (%1067, %1068)
}

def @func_12305(%var_12302: Tensor[(5, 5, 5), float32]) -> (Tensor[(5, 5, 5), float32],) {
  %1069 = cast(%var_12302, dtype="float32") /* ty=Tensor[(5, 5, 5), float32] */;
  %1070 = log2(%1069) /* ty=Tensor[(5, 5, 5), float32] */;
  (%1070,)
}

def @func_9258() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 7), uint8], Tensor[(448), uint8], Tensor[(8, 8, 6), float64]) {
  %1081 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 7), uint8], Tensor[(448), uint8], Tensor[(8, 8, 6), float64]) {
    %1071 = cast(meta[relay.Constant][19] /* ty=Tensor[(448), uint8] */, dtype="uint8") /* ty=Tensor[(448), uint8] */;
    %1072 = cast(meta[relay.Constant][19] /* ty=Tensor[(448), uint8] */, dtype="uint8") /* ty=Tensor[(448), uint8] */;
    %1073 = reshape(%1071, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), uint8] */;
    %1074 = reshape(%1072, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), uint8] */;
    %1075 = @func_8267() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
    %1076 = @func_837() /* ty=Tensor[(8, 8, 6), float64] */;
    %1077 = @func_4847() /* ty=Tensor[(8, 8, 6), float32] */;
    %1078 = @func_837() /* ty=Tensor[(8, 8, 6), float64] */;
    %1079 = @func_7703(%1073, %1074) /* ty=Tensor[(8, 8, 7), uint8] */;
    %1080 = %1075.1;
    (%1076, %1077, %1078, %1079, meta[relay.Constant][19] /* ty=Tensor[(448), uint8] */, %1080)
  };
  %1081() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 7), uint8], Tensor[(448), uint8], Tensor[(8, 8, 6), float64]) */
}

def @func_7293() -> Tensor[(8, 8, 6), float64] {
  %1083 = fn () -> Tensor[(8, 8, 6), float64] {
    %1082 = @func_2083() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %1082.0
  };
  %1083() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_8814() -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %1084 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
  %1085 = @func_7266() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1086 = %1084.1;
  %1087 = %1085.0;
  (%1086, %1087)
}

def @func_1723() -> Tensor[(8, 8, 6), float64] {
  @func_1721() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_11470() -> (Tensor[(16, 14, 1), float64],) {
  @func_11468() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_12761() -> Tensor[(16, 14, ?), bool] {
  @func_9951() /* ty=Tensor[(16, 14, ?), bool] */
}

def @func_16254(%var_16240: Tensor[(8, 4, 10), float32], %var_16241: Tensor[(8, 4, 10), float32]) -> (Tensor[(8, 4, 10), float32], Tensor[(14, 6, 15), float32]) {
  %1088 = cast(%var_16241, dtype="float32") /* ty=Tensor[(8, 4, 10), float32] */;
  %1089 = shape_of(%var_16240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1090 = cast(%var_16240, dtype="float32") /* ty=Tensor[(8, 4, 10), float32] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1092 = @func_13899() /* ty=(Tensor[(14, 6, 15), float32],) */;
  %1093 = mod(%1090, %1091) /* ty=Tensor[(8, 4, 10), float32] */;
  %1094 = %1092.0;
  (%1093, %1094)
}

def @func_13060(%var_13059: Tensor[(2016), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2016), float64]) {
  %1101 = fn (%var_13051: Tensor[(2016), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2016), float64]) {
    %1095 = @func_7573() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %1096 = cast(%var_13051, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %1097 = reshape(%1096, newshape=[2016]) /* ty=Tensor[(2016), float64] */;
    %1098 = @func_10591(%1097) /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2016), float64], Tensor[(16, 14, 1), float64]) */;
    %1099 = %1095.0;
    %1100 = %1098.1;
    (%1099, %1100, %var_13051)
  };
  %1101(%var_13059) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(2016), float64]) */
}

def @func_1288() -> (Tensor[(8, 8, 6), int32], Tensor[(8, 8, 6), float64]) {
  %1102 = @func_423() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), uint64]) */;
  %1103 = %1102.1;
  %1104 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 8, 6), uint64] */, dtype="int32") /* ty=Tensor[(8, 8, 6), int32] */;
  %1105 = shape_of(%1103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1106 = cast(%1103, dtype="int32") /* ty=Tensor[(8, 8, 6), int32] */;
  %1107 = dyn.reshape(%1104, %1105, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1108 = logical_xor(%1106, %1107) /* ty=Tensor[(8, 8, 6), int32] */;
  %1109 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
  (%1108, %1109)
}

def @func_14384() -> (Tensor[(8, 8, 6), float64],) {
  @func_14382() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_9634(%var_9617: Tensor[(12, 12, 11), float64]) -> (Tensor[(12, 12, 11), bool], Tensor[(8, 8, 6), float64]) {
  %1110 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 12, 11), float64] */, dtype="bool") /* ty=Tensor[(12, 12, 11), bool] */;
  %1111 = shape_of(%var_9617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1112 = cast(%var_9617, dtype="bool") /* ty=Tensor[(12, 12, 11), bool] */;
  %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1114 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1115 = greater(%1112, %1113) /* ty=Tensor[(12, 12, 11), bool] */;
  %1116 = %1114.1;
  (%1115, %1116)
}

def @func_8149() -> (Tensor[(8, 8, 6), float64],) {
  %1117 = @func_6212() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
  %1118 = %1117.4;
  (%1118,)
}

def @func_6653() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) {
  @func_6651() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */
}

def @func_14481() -> (Tensor[(16, 14, 1), float32],) {
  %1119 = @func_11695() /* ty=Tensor[(16, 14, 1), float32] */;
  (%1119,)
}

def @func_1847() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1126 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %1120 = @func_1130() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %1121 = @func_1635() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %1122 = %1120.0;
    %1123 = @func_1721() /* ty=Tensor[(8, 8, 6), float64] */;
    %1124 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
    %1125 = %1121.0;
    (%1122, %1123, %1124, %1125)
  };
  %1126() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_6651() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) {
  %1127 = @func_5648() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
  %1128 = %1127.4;
  %1129 = @func_3563() /* ty=Tensor[(8, 8, 6), int64] */;
  (%1128, %1129)
}

def @func_11890() -> Tensor[(8, 8, 6), float64] {
  %1131 = fn () -> Tensor[(8, 8, 6), float64] {
    %1130 = @func_394() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %1130.1
  };
  %1131() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_15014() -> (Tensor[(8, 8, 6), float64],) {
  %1134 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %1132 = @func_13818() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %1133 = %1132.1;
    (%1133,)
  };
  %1134() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_12348() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1135 = @func_150() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %1136 = %1135.0;
  %1137 = @func_11889() /* ty=Tensor[(8, 8, 6), float64] */;
  %1138 = @func_11889() /* ty=Tensor[(8, 8, 6), float64] */;
  (%1136, %1137, %1138)
}

def @func_8438(%var_8431: Tensor[(13, 1, 4), float32]) -> (Tensor[(13, 1, 4), float32],) {
  %1139 = cast(%var_8431, dtype="float32") /* ty=Tensor[(13, 1, 4), float32] */;
  %1140 = asinh(%1139) /* ty=Tensor[(13, 1, 4), float32] */;
  (%1140,)
}

def @func_10455() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1144 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %1141 = @func_4670() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %1142 = @func_3371() /* ty=Tensor[(8, 8, 6), float64] */;
    %1143 = %1141.1;
    (%1142, %1143)
  };
  %1144() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_16187() -> (Tensor[(16, 14, 5), bool], Tensor[(16, 14, 1), float64]) {
  %1148 = fn () -> (Tensor[(16, 14, 5), bool], Tensor[(16, 14, 1), float64]) {
    %1145 = @func_15911() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
    %1146 = @func_5960() /* ty=Tensor[(16, 14, 5), bool] */;
    %1147 = %1145.2;
    (%1146, %1147)
  };
  %1148() /* ty=(Tensor[(16, 14, 5), bool], Tensor[(16, 14, 1), float64]) */
}

def @func_4603(%var_4602: Tensor[(624), uint64]) -> (Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(16, 14, 9), float32], Tensor[(8, 8, 6), int32], Tensor[(384), float64], Tensor[(8, 8, 6), float64], Tensor[(624), uint64]) {
  %1166 = fn (%var_4567: Tensor[(624), uint64]) -> (Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(16, 14, 9), float32], Tensor[(8, 8, 6), int32], Tensor[(384), float64], Tensor[(8, 8, 6), float64], Tensor[(624), uint64]) {
    %1149 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 2, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 15), float64] */;
    %1150 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 2, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 15), float64] */;
    %1151 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 2, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 15), float64] */;
    %1152 = @func_4217() /* ty=(Tensor[(16, 14, 9), float32], Tensor[(16, 14, 2016), float32], Tensor[(16, 14, 2016), uint8]) */;
    %1153 = cast(meta[relay.Constant][23] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %1154 = reshape(%1153, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
    %1155 = cast(%var_4567, dtype="uint64") /* ty=Tensor[(624), uint64] */;
    %1156 = cast(%var_4567, dtype="uint64") /* ty=Tensor[(624), uint64] */;
    %1157 = reshape(%1155, newshape=[12, 4, 13]) /* ty=Tensor[(12, 4, 13), uint64] */;
    %1158 = reshape(%1156, newshape=[12, 4, 13]) /* ty=Tensor[(12, 4, 13), uint64] */;
    %1159 = @func_3504(%1157, %1158) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(8, 8, 6), float64]) */;
    %1160 = sinh(%1149) /* ty=Tensor[(15, 2, 15), float64] */;
    %1161 = rsqrt(%1150) /* ty=Tensor[(15, 2, 15), float64] */;
    %1162 = sigmoid(%1151) /* ty=Tensor[(15, 2, 15), float64] */;
    %1163 = %1152.0;
    %1164 = @func_3677(%1154) /* ty=Tensor[(8, 8, 6), int32] */;
    %1165 = %1159.1;
    (%1160, %1161, %1162, %1163, %1164, meta[relay.Constant][23] /* ty=Tensor[(384), float64] */, %1165, %var_4567)
  };
  %1166(%var_4602) /* ty=(Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(15, 2, 15), float64], Tensor[(16, 14, 9), float32], Tensor[(8, 8, 6), int32], Tensor[(384), float64], Tensor[(8, 8, 6), float64], Tensor[(624), uint64]) */
}

def @func_9963() -> Tensor[(8, 8, 6), float64] {
  %1168 = fn () -> Tensor[(8, 8, 6), float64] {
    %1167 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %1167.0
  };
  %1168() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_12763() -> Tensor[(16, 14, ?), bool] {
  @func_12761() /* ty=Tensor[(16, 14, ?), bool] */
}

def @func_13736() -> (Tensor[(16, 14, 1), float64],) {
  %1171 = fn () -> (Tensor[(16, 14, 1), float64],) {
    %1169 = @func_13133() /* ty=(Tensor[(16, 14, 1), float64],) */;
    %1170 = %1169.0;
    (%1170,)
  };
  %1171() /* ty=(Tensor[(16, 14, 1), float64],) */
}

def @func_16327(%var_16322: Tensor[(16, 14, 2016), bool]) -> (Tensor[(16, 14, 2016), uint64], Tensor[(16, 14, 2016), bool]) {
  %1172 = @func_4217() /* ty=(Tensor[(16, 14, 9), float32], Tensor[(16, 14, 2016), float32], Tensor[(16, 14, 2016), uint8]) */;
  %1173 = %1172.2;
  %1174 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 14, 2016), uint8] */, dtype="bool") /* ty=Tensor[(16, 14, 2016), bool] */;
  %1175 = shape_of(%1173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1176 = cast(%1173, dtype="bool") /* ty=Tensor[(16, 14, 2016), bool] */;
  %1177 = dyn.reshape(%1174, %1175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1178 = greater_equal(%1176, %1177) /* ty=Tensor[(16, 14, 2016), bool] */;
  %1179 = cast(%1178, dtype="uint64") /* ty=Tensor[(16, 14, 2016), uint64] */;
  %1180 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(16, 14, 2016), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1181 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 14, 2016), uint8] */, dtype="uint64") /* ty=Tensor[(16, 14, 2016), uint64] */;
  %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1183 = cast(%var_16322, dtype="bool") /* ty=Tensor[(16, 14, 2016), bool] */;
  %1184 = shape_of(%1178, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1185 = cast(%1178, dtype="bool") /* ty=Tensor[(16, 14, 2016), bool] */;
  %1186 = dyn.reshape(%1183, %1184, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1187 = right_shift(%1181, %1182) /* ty=Tensor[(16, 14, 2016), uint64] */;
  %1188 = logical_or(%1185, %1186) /* ty=Tensor[(16, 14, 2016), bool] */;
  (%1187, %1188)
}

def @func_3993() -> Tensor[(8, 8, 6), float64] {
  @func_3991() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_16579() -> Tensor[(8, 8, 6), float64] {
  @func_16577() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_13819() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1192 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
    %1189 = @func_1130() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %1190 = @func_5675() /* ty=Tensor[(8, 8, 6), float64] */;
    %1191 = %1189.0;
    (%1190, %1191)
  };
  %1192() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_1437() -> (Tensor[(8, 8, 6), float64],) {
  @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_17160() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_17158() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_10202() -> (Tensor[(8, 8, 6), float64],) {
  @func_10200() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_8920() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_8918() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_16577() -> Tensor[(8, 8, 6), float64] {
  @func_14373() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_10272() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1193 = @func_2639() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
  %1194 = @func_9470() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1195 = %1193.1;
  %1196 = %1194.0;
  (%1195, %1196)
}

def @func_4217() -> (Tensor[(16, 14, 9), float32], Tensor[(16, 14, 2016), float32], Tensor[(16, 14, 2016), uint8]) {
  %1197 = cast(meta[relay.Constant][25] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1198 = reshape(%1197, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %1199 = @func_2123() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1200 = %1199.0;
  %1201 = cast(meta[relay.Constant][25] /* ty=Tensor[(2016), float64] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %1202 = cast(%1200, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  %1203 = cast(%1200, dtype="uint8") /* ty=Tensor[(16, 14, 1), uint8] */;
  %1204 = cast(meta[relay.Constant][25] /* ty=Tensor[(2016), float64] */, dtype="uint8") /* ty=Tensor[(2016), uint8] */;
  %1205 = @func_3222(%1198) /* ty=Tensor[(16, 14, 9), float32] */;
  %1206 = floor_mod(%1201, %1202) /* ty=Tensor[(16, 14, 2016), float32] */;
  %1207 = left_shift(%1203, %1204) /* ty=Tensor[(16, 14, 2016), uint8] */;
  (%1205, %1206, %1207)
}

def @func_12831(%var_12828: Tensor[(1, 91), float64], %var_12829: Tensor[(364), float64], %var_12830: Tensor[(546), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(8, 8, 6), float32], Tensor[(364), float64], Tensor[(546), float64], Tensor[(1, 91), float64]) {
  %1221 = fn (%var_12803: Tensor[(1, 91), float64], %var_12804: Tensor[(364), float64], %var_12805: Tensor[(546), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(8, 8, 6), float32], Tensor[(364), float64], Tensor[(546), float64], Tensor[(1, 91), float64]) {
    %1208 = @func_6827() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
    %1209 = cast(%var_12803, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
    %1210 = cast(%var_12804, dtype="float64") /* ty=Tensor[(364), float64] */;
    %1211 = cast(%var_12805, dtype="float64") /* ty=Tensor[(546), float64] */;
    %1212 = reshape(%1209, newshape=[1, 7, 13]) /* ty=Tensor[(1, 7, 13), float64] */;
    %1213 = reshape(%1210, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), float64] */;
    %1214 = reshape(%1211, newshape=[6, 7, 13]) /* ty=Tensor[(6, 7, 13), float64] */;
    %1215 = @func_789(%1212, %1213, %1214) /* ty=(Tensor[(4, 7, 13), float64], Tensor[(6, 7, 13), float32], Tensor[(8, 8, 6), int16], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float32]) */;
    %1216 = cast(%var_12803, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
    %1217 = @func_353() /* ty=Tensor[(8, 8, 6), float64] */;
    %1218 = %1208.1;
    %1219 = %1215.3;
    %1220 = atan(%1216) /* ty=Tensor[(1, 91), float64] */;
    (%1217, %1218, %1219, %var_12804, %var_12805, %1220)
  };
  %1221(%var_12828, %var_12829, %var_12830) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(8, 8, 6), float32], Tensor[(364), float64], Tensor[(546), float64], Tensor[(1, 91), float64]) */
}

def @func_13589(%var_13587: Tensor[(1, 624), bool]) -> (Tensor[(8, 8, 6), float32], Tensor[(16, 14, 7), bool], Tensor[(405), bool], Tensor[(1568), float64], Tensor[(?, 624), float32], Tensor[(?, 624), float32], Tensor[(8, 8, 6), float64]) {
  @func_13586(%var_13587) /* ty=(Tensor[(8, 8, 6), float32], Tensor[(16, 14, 7), bool], Tensor[(405), bool], Tensor[(1568), float64], Tensor[(?, 624), float32], Tensor[(?, 624), float32], Tensor[(8, 8, 6), float64]) */
}

def @func_4848() -> Tensor[(8, 8, 6), float32] {
  %1223 = fn () -> Tensor[(8, 8, 6), float32] {
    %1222 = @func_519() /* ty=(Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %1222.0
  };
  %1223() /* ty=Tensor[(8, 8, 6), float32] */
}

def @func_7332(%var_7330: Tensor[(11, 9, 13), float32], %var_7331: Tensor[(11, 9, 13), bool]) -> (Tensor[(11, 9, 13), bool], Tensor[(8, 8, 6), int64]) {
  @func_7328(%var_7330, %var_7331) /* ty=(Tensor[(11, 9, 13), bool], Tensor[(8, 8, 6), int64]) */
}

def @func_8160() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_8158() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_5648() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) {
  %1224 = @func_3873() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %1225 = @func_3873() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %1226 = @func_3455() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1227 = @func_1167() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %1228 = @func_5144() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1229 = @func_5461() /* ty=Tensor[(8, 8, 6), float64] */;
  %1230 = %1224.0;
  %1231 = %1225.0;
  %1232 = %1226.0;
  %1233 = %1227.0;
  %1234 = %1228.0;
  (%1229, %1230, %1231, %1232, %1233, %1234)
}

def @func_2697() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) {
  %1235 = @func_247() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1236 = %1235.0;
  %1237 = cast(%1236, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %1238 = reshape(%1237, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %1239 = @func_313(%1238) /* ty=(Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
  %1240 = %1239.0;
  (%1236, %1240)
}

def @func_14373() -> Tensor[(8, 8, 6), float64] {
  %1241 = @func_6980() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64]) */;
  %1241.1
}

def @func_4672() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_4670() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_7575() -> (Tensor[(8, 8, 6), float64],) {
  @func_7573() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_9637(%var_9635: Tensor[(12, 12, 11), float64]) -> (Tensor[(12, 12, 11), bool], Tensor[(8, 8, 6), float64]) {
  @func_9634(%var_9635) /* ty=(Tensor[(12, 12, 11), bool], Tensor[(8, 8, 6), float64]) */
}

def @func_7889(%var_7888: Tensor[(12, 15, 16), int16]) -> Tensor[(12, 15, 16), int16] {
  %1246 = fn (%var_7871: Tensor[(12, 15, 16), int16]) -> Tensor[(12, 15, 16), int16] {
    %1242 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 15, 16), int16] */, dtype="int16") /* ty=Tensor[(12, 15, 16), int16] */;
    %1243 = shape_of(%var_7871, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1244 = cast(%var_7871, dtype="int16") /* ty=Tensor[(12, 15, 16), int16] */;
    %1245 = dyn.reshape(%1242, %1243, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    multiply(%1244, %1245) /* ty=Tensor[(12, 15, 16), int16] */
  };
  %1246(%var_7888) /* ty=Tensor[(12, 15, 16), int16] */
}

def @func_10804() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %1255 = fn () -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
    %1247 = @func_6651() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
    %1248 = @func_7561() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %1249 = @func_4006() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(16, 14, 1), float64]) */;
    %1250 = @func_5039() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
    %1251 = %1247.1;
    %1252 = %1248.1;
    %1253 = %1249.1;
    %1254 = %1250.0;
    (%1251, %1252, %1253, %1254)
  };
  %1255() /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_4905(%var_4904: Tensor[(5, 6, 4), float64]) -> Tensor[(5, 6, 4), float64] {
  %1257 = fn (%var_4899: Tensor[(5, 6, 4), float64]) -> Tensor[(5, 6, 4), float64] {
    %1256 = cast(%var_4899, dtype="float64") /* ty=Tensor[(5, 6, 4), float64] */;
    atanh(%1256) /* ty=Tensor[(5, 6, 4), float64] */
  };
  %1257(%var_4904) /* ty=Tensor[(5, 6, 4), float64] */
}

def @func_4670() -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1258 = @func_3873() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %1259 = @func_1489() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %1260 = @func_2902() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1261 = %1258.0;
  %1262 = %1259.1;
  %1263 = %1260.0;
  %1264 = @func_3991() /* ty=Tensor[(8, 8, 6), float64] */;
  (%1261, %1262, %1263, %1264)
}

def @func_14642(%var_14627: Tensor[(6, 9, 14), float32], %var_14628: Tensor[(6, 9, 14), float32]) -> (Tensor[(6, 9, 14), float32], Tensor[(6, 9, 14), float32]) {
  %1265 = cast(%var_14628, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
  %1266 = shape_of(%var_14627, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1267 = cast(%var_14627, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
  %1268 = dyn.reshape(%1265, %1266, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1269 = cast(%var_14627, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
  %1270 = divide(%1267, %1268) /* ty=Tensor[(6, 9, 14), float32] */;
  %1271 = exp(%1269) /* ty=Tensor[(6, 9, 14), float32] */;
  (%1270, %1271)
}

def @func_16220() -> (Tensor[(8, 8, 6), float64],) {
  %1272 = @func_1435() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1273 = %1272.0;
  (%1273,)
}

def @func_17158() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  %1274 = @func_7218() /* ty=Tensor[(8, 8, 6), float64] */;
  %1275 = @func_4099() /* ty=Tensor[(8, 8, 6), float64] */;
  (%1274, %1275)
}

def @func_8521(%var_8520: Tensor[(2688), float32]) -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32]) {
  %1282 = fn (%var_8517: Tensor[(2688), float32]) -> (Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32]) {
    %1276 = @func_5648() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
    %1277 = cast(%var_8517, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %1278 = reshape(%1277, newshape=[16, 12, 14]) /* ty=Tensor[(16, 12, 14), float32] */;
    %1279 = %1276.1;
    %1280 = @func_1721() /* ty=Tensor[(8, 8, 6), float64] */;
    %1281 = @func_3696(%1278) /* ty=Tensor[(16, 12, 14), float32] */;
    (%1279, %1280, %1281, %var_8517)
  };
  %1282(%var_8520) /* ty=(Tensor[(8, 8, 6), int64], Tensor[(8, 8, 6), float64], Tensor[(16, 12, 14), float32], Tensor[(2688), float32]) */
}

def @func_12308(%var_12306: Tensor[(5, 5, 5), float32]) -> (Tensor[(5, 5, 5), float32],) {
  @func_12305(%var_12306) /* ty=(Tensor[(5, 5, 5), float32],) */
}

def @func_1328() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %1283 = @func_972() /* ty=(Tensor[(16, 14, 1), float64],) */;
  %1284 = @func_1167() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32]) */;
  %1285 = %1283.0;
  %1286 = %1284.0;
  (%1285, %1286)
}

def @func_2525() -> (Tensor[(8, 8, 6), float64],) {
  %1289 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %1287 = @func_2178() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float32], Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) */;
    %1288 = %1287.0;
    (%1288,)
  };
  %1289() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_9866(%var_9865: Tensor[(14, 144), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(14, 144), uint16]) {
  %1300 = fn (%var_9841: Tensor[(14, 144), float64]) -> (Tensor[(8, 8, 6), float64], Tensor[(14, 144), uint16]) {
    %1290 = @func_2697() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), bool]) */;
    %1291 = cast(%var_9841, dtype="float64") /* ty=Tensor[(14, 144), float64] */;
    %1292 = reshape(%1291, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
    %1293 = @func_3222(%1292) /* ty=Tensor[(16, 14, 9), float32] */;
    %1294 = cast(%1293, dtype="uint16") /* ty=Tensor[(16, 14, 9), uint16] */;
    %1295 = shape_of(%var_9841, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1296 = cast(%var_9841, dtype="uint16") /* ty=Tensor[(14, 144), uint16] */;
    %1297 = dyn.reshape(%1294, %1295, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %1298 = %1290.0;
    %1299 = bitwise_and(%1296, %1297) /* ty=Tensor[(14, 144), uint16] */;
    (%1298, %1299)
  };
  %1300(%var_9865) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(14, 144), uint16]) */
}

def @func_7328(%var_7317: Tensor[(11, 9, 13), float32], %var_7321: Tensor[(11, 9, 13), bool]) -> (Tensor[(11, 9, 13), bool], Tensor[(8, 8, 6), int64]) {
  %1301 = cast(%var_7317, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %1302 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(11, 9, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1303 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 9, 13), float32] */, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %1304 = dyn.reshape(%1301, %1302, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1305 = not_equal(%1303, %1304) /* ty=Tensor[(11, 9, 13), bool] */;
  %1306 = cast(%var_7321, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %1307 = shape_of(%1305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1308 = cast(%1305, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %1309 = dyn.reshape(%1306, %1307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1310 = @func_3957() /* ty=(Tensor[(8, 8, 6), int64],) */;
  %1311 = less_equal(%1308, %1309) /* ty=Tensor[(11, 9, 13), bool] */;
  %1312 = %1310.0;
  (%1311, %1312)
}

def @func_7414() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
  %1323 = fn () -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) {
    %1313 = @func_2083() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %1314 = @func_5390() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
    %1315 = @func_6276() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32]) */;
    %1316 = %1315.1;
    %1317 = cast(%1316, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
    %1318 = reshape(%1317, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
    %1319 = @func_313(%1318) /* ty=(Tensor[(8, 8, 6), bool], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */;
    %1320 = %1313.0;
    %1321 = %1314.2;
    %1322 = %1319.2;
    (%1320, %1321, %1316, %1322)
  };
  %1323() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float32], Tensor[(8, 8, 6), float64]) */
}

def @func_3059() -> Tensor[(8, 8, 6), int64] {
  %1324 = @func_1489() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64]) */;
  %1324.2
}

def @func_12864() -> (Tensor[(8, 8, 6), float64],) {
  %1327 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %1325 = @func_2902() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %1326 = %1325.0;
    (%1326,)
  };
  %1327() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_11862() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) {
  @func_11860() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */
}

def @func_16144(%var_16142: Tensor[(16, 14, 1), float64], %var_16143: uint64) -> (Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64], Tensor[(1584), float64], uint64) {
  @func_16140(%var_16142, %var_16143) /* ty=(Tensor[(16, 14, ?), bool], Tensor[(8, 8, 6), float64], Tensor[(1584), float64], uint64) */
}

def @func_17233() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float64]) {
  %1328 = @func_16220() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1329 = @func_10413() /* ty=Tensor[(16, 14, 1), float64] */;
  %1330 = %1328.0;
  (%1329, %1330)
}

def @func_7868() -> Tensor[(8, 8, 6), float64] {
  @func_7866() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_16452() -> (Tensor[(8, 8, 6), float64],) {
  @func_16450() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_3034() -> (Tensor[(8, 8, 6), float64],) {
  @func_3032() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_12106() -> Tensor[(8, 8, 6), float64] {
  @func_12104() /* ty=Tensor[(8, 8, 6), float64] */
}

def @func_3504(%var_3480: Tensor[(12, 4, 13), uint64], %var_3481: Tensor[(12, 4, 13), uint64]) -> (Tensor[(12, 4, 13), float64], Tensor[(8, 8, 6), float64]) {
  %1331 = cast(%var_3481, dtype="uint64") /* ty=Tensor[(12, 4, 13), uint64] */;
  %1332 = shape_of(%var_3480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1333 = cast(%var_3480, dtype="uint64") /* ty=Tensor[(12, 4, 13), uint64] */;
  %1334 = dyn.reshape(%1331, %1332, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1335 = logical_xor(%1333, %1334) /* ty=Tensor[(12, 4, 13), uint64] */;
  %1336 = cast(%1335, dtype="float64") /* ty=Tensor[(12, 4, 13), float64] */;
  %1337 = @func_1846() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), float64]) */;
  %1338 = erf(%1336) /* ty=Tensor[(12, 4, 13), float64] */;
  %1339 = %1337.1;
  (%1338, %1339)
}

def @func_13586(%var_13563: Tensor[(1, 624), bool]) -> (Tensor[(8, 8, 6), float32], Tensor[(16, 14, 7), bool], Tensor[(405), bool], Tensor[(1568), float64], Tensor[(?, 624), float32], Tensor[(?, 624), float32], Tensor[(8, 8, 6), float64]) {
  %1340 = @func_6009() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) */;
  %1341 = cast(meta[relay.Constant][28] /* ty=Tensor[(405), bool] */, dtype="bool") /* ty=Tensor[(405), bool] */;
  %1342 = cast(meta[relay.Constant][28] /* ty=Tensor[(405), bool] */, dtype="bool") /* ty=Tensor[(405), bool] */;
  %1343 = cast(meta[relay.Constant][29] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %1344 = reshape(%1341, newshape=[9, 9, 5]) /* ty=Tensor[(9, 9, 5), bool] */;
  %1345 = reshape(%1342, newshape=[9, 9, 5]) /* ty=Tensor[(9, 9, 5), bool] */;
  %1346 = reshape(%1343, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %1347 = @func_11156(%1344, %1345, %1346) /* ty=(Tensor[(9, 9, 5), bool], Tensor[(16, 14, 7), bool], Tensor[(1568), float64]) */;
  %1348 = @func_13528() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(15, 2, 15), float64], Tensor[(1, 624), uint64], Tensor[(16, 14, 1), float64]) */;
  %1349 = %1348.2;
  %1350 = cast(%1349, dtype="float64") /* ty=Tensor[(1, 624), float64] */;
  %1351 = cos(%1350) /* ty=Tensor[(1, 624), float64] */;
  %1352 = cast(%1349, dtype="bool") /* ty=Tensor[(1, 624), bool] */;
  %1353 = shape_of(%1351, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1354 = cast(%1351, dtype="bool") /* ty=Tensor[(1, 624), bool] */;
  %1355 = dyn.reshape(%1352, %1353, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1356 = less(%1354, %1355) /* ty=Tensor[(?, 624), bool] */;
  %1357 = cast(%var_13563, dtype="float32") /* ty=Tensor[(1, 624), float32] */;
  %1358 = shape_of(%1356, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1359 = cast(%1356, dtype="float32") /* ty=Tensor[(?, 624), float32] */;
  %1360 = dyn.reshape(%1357, %1358, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1361 = cast(%1356, dtype="float64") /* ty=Tensor[(?, 624), float64] */;
  %1362 = acos(%1361) /* ty=Tensor[(?, 624), float64] */;
  %1363 = cast(%1362, dtype="float32") /* ty=Tensor[(?, 624), float32] */;
  %1364 = @func_11516() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1365 = %1340.1;
  %1366 = %1347.1;
  %1367 = add(%1359, %1360) /* ty=Tensor[(?, 624), float32] */;
  %1368 = exp(%1363) /* ty=Tensor[(?, 624), float32] */;
  %1369 = %1364.0;
  (%1365, %1366, meta[relay.Constant][28] /* ty=Tensor[(405), bool] */, meta[relay.Constant][29] /* ty=Tensor[(1568), float64] */, %1367, %1368, %1369)
}

def @func_11746(%var_11741: Tensor[(15, 2, 11), float32]) -> Tensor[(15, 2, 11), float32] {
  %1370 = cast(%var_11741, dtype="float32") /* ty=Tensor[(15, 2, 11), float32] */;
  log(%1370) /* ty=Tensor[(15, 2, 11), float32] */
}

def @func_9059(%var_9057: uint64, %var_9058: Tensor[(11, 7, 14), uint64]) -> (Tensor[(11, 7, 14), bool],) {
  %1374 = fn (%var_9049: uint64, %var_9050: Tensor[(11, 7, 14), uint64]) -> (Tensor[(11, 7, 14), bool],) {
    %1371 = cast(%var_9049, dtype="bool") /* ty=bool */;
    %1372 = cast(%var_9050, dtype="bool") /* ty=Tensor[(11, 7, 14), bool] */;
    %1373 = not_equal(%1371, %1372) /* ty=Tensor[(11, 7, 14), bool] */;
    (%1373,)
  };
  %1374(%var_9057, %var_9058) /* ty=(Tensor[(11, 7, 14), bool],) */
}

def @func_13684() -> (Tensor[(8, 8, 6), float64], Tensor[(8, 8, 6), int64], Tensor[(1287), float32]) {
  %1375 = @func_7057() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1376 = cast(meta[relay.Constant][30] /* ty=Tensor[(1287), float32] */, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %1377 = cast(meta[relay.Constant][30] /* ty=Tensor[(1287), float32] */, dtype="bool") /* ty=Tensor[(1287), bool] */;
  %1378 = reshape(%1376, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float32] */;
  %1379 = reshape(%1377, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), bool] */;
  %1380 = @func_7328(%1378, %1379) /* ty=(Tensor[(11, 9, 13), bool], Tensor[(8, 8, 6), int64]) */;
  %1381 = %1375.0;
  %1382 = %1380.1;
  (%1381, %1382, meta[relay.Constant][30] /* ty=Tensor[(1287), float32] */)
}

def @func_6766() -> Tensor[(8, 8, 6), float32] {
  %1385 = fn () -> Tensor[(8, 8, 6), float32] {
    %1383 = @func_5461() /* ty=Tensor[(8, 8, 6), float64] */;
    %1384 = cast(%1383, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
    tan(%1384) /* ty=Tensor[(8, 8, 6), float32] */
  };
  %1385() /* ty=Tensor[(8, 8, 6), float32] */
}

def @func_14382() -> (Tensor[(8, 8, 6), float64],) {
  %1386 = @func_9962() /* ty=Tensor[(8, 8, 6), float64] */;
  (%1386,)
}

def @func_6010() -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) {
  %1390 = fn () -> (Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) {
    %1387 = @func_5039() /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 1), float64]) */;
    %1388 = %1387.1;
    %1389 = @func_4847() /* ty=Tensor[(8, 8, 6), float32] */;
    (%1388, %1389)
  };
  %1390() /* ty=(Tensor[(16, 14, 1), float64], Tensor[(8, 8, 6), float32]) */
}

def @func_11156(%var_11135: Tensor[(9, 9, 5), bool], %var_11136: Tensor[(9, 9, 5), bool], %var_11152: Tensor[(1568), float64]) -> (Tensor[(9, 9, 5), bool], Tensor[(16, 14, 7), bool], Tensor[(1568), float64]) {
  %1391 = cast(%var_11136, dtype="bool") /* ty=Tensor[(9, 9, 5), bool] */;
  %1392 = shape_of(%var_11135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1393 = cast(%var_11135, dtype="bool") /* ty=Tensor[(9, 9, 5), bool] */;
  %1394 = dyn.reshape(%1391, %1392, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1395 = cast(%var_11152, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %1396 = reshape(%1395, newshape=[16, 14, 7]) /* ty=Tensor[(16, 14, 7), float64] */;
  %1397 = @func_4044(%1396) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(16, 14, 7), bool]) */;
  %1398 = logical_and(%1393, %1394) /* ty=Tensor[(9, 9, 5), bool] */;
  %1399 = %1397.1;
  (%1398, %1399, %var_11152)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen779/build/output.py:5670: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen779/build/output.py", line 5675, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(44) tvmgen_default_fused_subtract_kernel0(ushort* __restrict__ T_subtract, ushort* __restrict__ placeholder, ushort* __restrict__ placeholder1) {
  T_subtract[(((int)threadIdx.x))] = (placeholder[(0)] - placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


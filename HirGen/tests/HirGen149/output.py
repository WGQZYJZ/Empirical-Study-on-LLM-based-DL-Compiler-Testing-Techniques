import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_109 = relay.var("var_109", dtype = "float32", shape = (12, 14, 5))#candidate|109|(12, 14, 5)|var|float32
uop_110 = relay.exp(var_109.astype('float32')) # shape=(12, 14, 5)
bop_122 = relay.logical_or(uop_110.astype('bool'), relay.reshape(var_109.astype('bool'), relay.shape_of(uop_110))) # shape=(12, 14, 5)
output = bop_122
output2 = bop_122
func_147 = relay.Function([var_109,], output)
mod['func_147'] = func_147
mod = relay.transform.InferType()(mod)
var_148 = relay.var("var_148", dtype = "float32", shape = (12, 14, 5))#candidate|148|(12, 14, 5)|var|float32
output = func_147(var_148)
func_149 = relay.Function([var_148], output)
mutated_mod['func_149'] = func_149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_270 = relay.var("var_270", dtype = "float64", shape = (5, 5, 5))#candidate|270|(5, 5, 5)|var|float64
uop_271 = relay.asinh(var_270.astype('float64')) # shape=(5, 5, 5)
output = uop_271
output2 = uop_271
func_289 = relay.Function([var_270,], output)
mod['func_289'] = func_289
mod = relay.transform.InferType()(mod)
mutated_mod['func_289'] = func_289
mutated_mod = relay.transform.InferType()(mutated_mod)
var_290 = relay.var("var_290", dtype = "float64", shape = (5, 5, 5))#candidate|290|(5, 5, 5)|var|float64
func_289_call = mutated_mod.get_global_var('func_289')
call_291 = func_289_call(var_290)
output = call_291
func_292 = relay.Function([var_290], output)
mutated_mod['func_292'] = func_292
mutated_mod = relay.transform.InferType()(mutated_mod)
var_555 = relay.var("var_555", dtype = "uint16", shape = (1, 5))#candidate|555|(1, 5)|var|uint16
const_556 = relay.const([[5,-3,-10,9,6],[1,9,-5,-9,-1]], dtype = "uint16")#candidate|556|(2, 5)|const|uint16
bop_557 = relay.left_shift(var_555.astype('uint16'), const_556.astype('uint16')) # shape=(2, 5)
output = bop_557
output2 = bop_557
func_571 = relay.Function([var_555,], output)
mod['func_571'] = func_571
mod = relay.transform.InferType()(mod)
mutated_mod['func_571'] = func_571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_572 = relay.var("var_572", dtype = "uint16", shape = (1, 5))#candidate|572|(1, 5)|var|uint16
func_571_call = mutated_mod.get_global_var('func_571')
call_573 = func_571_call(var_572)
output = call_573
func_574 = relay.Function([var_572], output)
mutated_mod['func_574'] = func_574
mutated_mod = relay.transform.InferType()(mutated_mod)
var_754 = relay.var("var_754", dtype = "float64", shape = (4, 6, 1))#candidate|754|(4, 6, 1)|var|float64
var_755 = relay.var("var_755", dtype = "float64", shape = (4, 6, 3))#candidate|755|(4, 6, 3)|var|float64
bop_756 = relay.floor_mod(var_754.astype('float64'), var_755.astype('float64')) # shape=(4, 6, 3)
bop_761 = relay.greater_equal(var_754.astype('bool'), bop_756.astype('bool')) # shape=(4, 6, 3)
output = bop_761
output2 = bop_761
func_765 = relay.Function([var_754,var_755,], output)
mod['func_765'] = func_765
mod = relay.transform.InferType()(mod)
mutated_mod['func_765'] = func_765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_765_call = mutated_mod.get_global_var('func_765')
var_767 = relay.var("var_767", dtype = "float64", shape = (4, 6, 1))#candidate|767|(4, 6, 1)|var|float64
var_768 = relay.var("var_768", dtype = "float64", shape = (4, 6, 3))#candidate|768|(4, 6, 3)|var|float64
call_766 = func_765_call(var_767,var_768,)
output = call_766
func_769 = relay.Function([var_767,var_768,], output)
mutated_mod['func_769'] = func_769
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1040 = relay.var("var_1040", dtype = "int8", shape = (4, 12, 8))#candidate|1040|(4, 12, 8)|var|int8
var_1041 = relay.var("var_1041", dtype = "int8", shape = (4, 12, 8))#candidate|1041|(4, 12, 8)|var|int8
bop_1042 = relay.greater_equal(var_1040.astype('bool'), relay.reshape(var_1041.astype('bool'), relay.shape_of(var_1040))) # shape=(4, 12, 8)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
var_1046 = relay.var("var_1046", dtype = "float32", shape = (840,))#candidate|1046|(840,)|var|float32
call_1045 = func_147_call(relay.reshape(var_1046.astype('float32'), [12, 14, 5]))
call_1047 = func_147_call(relay.reshape(var_1046.astype('float32'), [12, 14, 5]))
output = relay.Tuple([bop_1042,call_1045,var_1046,])
output2 = relay.Tuple([bop_1042,call_1047,var_1046,])
func_1052 = relay.Function([var_1040,var_1041,var_1046,], output)
mod['func_1052'] = func_1052
mod = relay.transform.InferType()(mod)
var_1053 = relay.var("var_1053", dtype = "int8", shape = (4, 12, 8))#candidate|1053|(4, 12, 8)|var|int8
var_1054 = relay.var("var_1054", dtype = "int8", shape = (4, 12, 8))#candidate|1054|(4, 12, 8)|var|int8
var_1055 = relay.var("var_1055", dtype = "float32", shape = (840,))#candidate|1055|(840,)|var|float32
output = func_1052(var_1053,var_1054,var_1055,)
func_1056 = relay.Function([var_1053,var_1054,var_1055,], output)
mutated_mod['func_1056'] = func_1056
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1222 = relay.var("var_1222", dtype = "int32", shape = (3, 9, 8))#candidate|1222|(3, 9, 8)|var|int32
var_1223 = relay.var("var_1223", dtype = "int32", shape = (3, 9, 8))#candidate|1223|(3, 9, 8)|var|int32
bop_1224 = relay.not_equal(var_1222.astype('bool'), relay.reshape(var_1223.astype('bool'), relay.shape_of(var_1222))) # shape=(3, 9, 8)
output = bop_1224
output2 = bop_1224
func_1230 = relay.Function([var_1222,var_1223,], output)
mod['func_1230'] = func_1230
mod = relay.transform.InferType()(mod)
var_1231 = relay.var("var_1231", dtype = "int32", shape = (3, 9, 8))#candidate|1231|(3, 9, 8)|var|int32
var_1232 = relay.var("var_1232", dtype = "int32", shape = (3, 9, 8))#candidate|1232|(3, 9, 8)|var|int32
output = func_1230(var_1231,var_1232,)
func_1233 = relay.Function([var_1231,var_1232,], output)
mutated_mod['func_1233'] = func_1233
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1260 = relay.var("var_1260", dtype = "int16", shape = (6, 4, 9))#candidate|1260|(6, 4, 9)|var|int16
var_1261 = relay.var("var_1261", dtype = "int16", shape = (6, 4, 9))#candidate|1261|(6, 4, 9)|var|int16
bop_1262 = relay.not_equal(var_1260.astype('bool'), relay.reshape(var_1261.astype('bool'), relay.shape_of(var_1260))) # shape=(6, 4, 9)
output = relay.Tuple([bop_1262,])
output2 = relay.Tuple([bop_1262,])
func_1286 = relay.Function([var_1260,var_1261,], output)
mod['func_1286'] = func_1286
mod = relay.transform.InferType()(mod)
mutated_mod['func_1286'] = func_1286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1286_call = mutated_mod.get_global_var('func_1286')
var_1288 = relay.var("var_1288", dtype = "int16", shape = (6, 4, 9))#candidate|1288|(6, 4, 9)|var|int16
var_1289 = relay.var("var_1289", dtype = "int16", shape = (6, 4, 9))#candidate|1289|(6, 4, 9)|var|int16
call_1287 = func_1286_call(var_1288,var_1289,)
output = call_1287
func_1290 = relay.Function([var_1288,var_1289,], output)
mutated_mod['func_1290'] = func_1290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1297 = relay.var("var_1297", dtype = "int32", shape = (11, 9, 12))#candidate|1297|(11, 9, 12)|var|int32
var_1298 = relay.var("var_1298", dtype = "int32", shape = (11, 9, 12))#candidate|1298|(11, 9, 12)|var|int32
bop_1299 = relay.less(var_1297.astype('bool'), relay.reshape(var_1298.astype('bool'), relay.shape_of(var_1297))) # shape=(11, 9, 12)
output = relay.Tuple([bop_1299,])
output2 = relay.Tuple([bop_1299,])
func_1312 = relay.Function([var_1297,var_1298,], output)
mod['func_1312'] = func_1312
mod = relay.transform.InferType()(mod)
mutated_mod['func_1312'] = func_1312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1312_call = mutated_mod.get_global_var('func_1312')
var_1314 = relay.var("var_1314", dtype = "int32", shape = (11, 9, 12))#candidate|1314|(11, 9, 12)|var|int32
var_1315 = relay.var("var_1315", dtype = "int32", shape = (11, 9, 12))#candidate|1315|(11, 9, 12)|var|int32
call_1313 = func_1312_call(var_1314,var_1315,)
output = call_1313
func_1316 = relay.Function([var_1314,var_1315,], output)
mutated_mod['func_1316'] = func_1316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1376 = relay.var("var_1376", dtype = "bool", shape = (12, 6, 13))#candidate|1376|(12, 6, 13)|var|bool
var_1377 = relay.var("var_1377", dtype = "bool", shape = (12, 6, 13))#candidate|1377|(12, 6, 13)|var|bool
bop_1378 = relay.logical_or(var_1376.astype('bool'), relay.reshape(var_1377.astype('bool'), relay.shape_of(var_1376))) # shape=(12, 6, 13)
output = bop_1378
output2 = bop_1378
func_1386 = relay.Function([var_1376,var_1377,], output)
mod['func_1386'] = func_1386
mod = relay.transform.InferType()(mod)
var_1387 = relay.var("var_1387", dtype = "bool", shape = (12, 6, 13))#candidate|1387|(12, 6, 13)|var|bool
var_1388 = relay.var("var_1388", dtype = "bool", shape = (12, 6, 13))#candidate|1388|(12, 6, 13)|var|bool
output = func_1386(var_1387,var_1388,)
func_1389 = relay.Function([var_1387,var_1388,], output)
mutated_mod['func_1389'] = func_1389
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1537 = relay.const([[[-7.429579],[7.467555],[-8.276171],[-3.864349],[-6.029241],[8.345203],[8.903416],[1.306279],[4.661577],[-7.993371],[1.762087]],[[-8.027616],[3.942283],[8.148987],[-3.374502],[2.711107],[-7.639305],[-8.621898],[-0.024153],[7.900650],[-6.399585],[-8.909039]],[[-3.699927],[6.119579],[-6.182574],[0.222494],[-4.302098],[-3.921128],[5.078925],[-8.261293],[-2.612485],[-2.272766],[-9.207326]],[[-9.123491],[9.754607],[-8.484873],[-6.801450],[5.456209],[-7.610129],[-9.610267],[-4.759873],[6.689226],[8.902157],[-9.506407]],[[4.509335],[3.051631],[-8.032460],[-0.687755],[-8.889758],[-2.190995],[-7.300800],[2.256885],[3.755516],[2.457952],[1.805827]],[[9.462910],[3.593244],[-5.615255],[-5.419719],[4.651286],[0.889855],[0.089936],[-5.533211],[5.030103],[-1.443937],[-2.535983]],[[-2.061227],[-0.562708],[-4.871264],[5.443178],[5.640906],[-1.196544],[7.449119],[-8.351148],[7.373438],[-3.582458],[-3.514607]],[[1.580867],[4.214817],[3.123800],[-6.183425],[3.637662],[-7.589581],[-7.530271],[9.979418],[-0.456151],[-3.665566],[-6.166463]],[[-5.996586],[9.969494],[-2.240812],[-7.242797],[-3.247094],[-2.068031],[-7.254235],[2.148170],[5.660049],[5.643595],[-2.892243]],[[0.655361],[-5.416795],[4.294646],[-4.424275],[-7.103451],[-6.356683],[-9.777309],[9.198521],[0.987310],[-5.908264],[-6.357955]],[[5.760764],[3.569429],[-2.721763],[-4.041043],[8.457874],[-2.488992],[-6.519147],[-9.485132],[2.287257],[4.615023],[8.651860]],[[9.877843],[-5.765735],[-8.304602],[-1.842253],[-3.098310],[-4.183519],[-7.729712],[-5.782908],[-2.139126],[-6.290447],[4.755121]],[[-4.980442],[8.025356],[6.239380],[7.772955],[2.507905],[6.561097],[1.770851],[-0.469802],[-9.477602],[7.626821],[3.662087]],[[9.960147],[9.817232],[2.674106],[4.712922],[-1.594674],[-6.326041],[5.570852],[-9.062412],[-9.788527],[9.897011],[8.187290]]], dtype = "float32")#candidate|1537|(14, 11, 1)|const|float32
uop_1538 = relay.log10(const_1537.astype('float32')) # shape=(14, 11, 1)
bop_1545 = relay.left_shift(const_1537.astype('int64'), relay.reshape(uop_1538.astype('int64'), relay.shape_of(const_1537))) # shape=(14, 11, 1)
bop_1560 = relay.multiply(bop_1545.astype('int16'), relay.reshape(const_1537.astype('int16'), relay.shape_of(bop_1545))) # shape=(14, 11, 1)
bop_1569 = relay.add(const_1537.astype('float32'), relay.reshape(bop_1560.astype('float32'), relay.shape_of(const_1537))) # shape=(14, 11, 1)
func_1052_call = mod.get_global_var('func_1052')
func_1056_call = mutated_mod.get_global_var('func_1056')
var_1576 = relay.var("var_1576", dtype = "int8", shape = (384,))#candidate|1576|(384,)|var|int8
var_1577 = relay.var("var_1577", dtype = "float32", shape = (6, 140))#candidate|1577|(6, 140)|var|float32
call_1575 = relay.TupleGetItem(func_1052_call(relay.reshape(var_1576.astype('int8'), [4, 12, 8]), relay.reshape(var_1576.astype('int8'), [4, 12, 8]), relay.reshape(var_1577.astype('float32'), [840,]), ), 0)
call_1578 = relay.TupleGetItem(func_1056_call(relay.reshape(var_1576.astype('int8'), [4, 12, 8]), relay.reshape(var_1576.astype('int8'), [4, 12, 8]), relay.reshape(var_1577.astype('float32'), [840,]), ), 0)
uop_1580 = relay.asinh(bop_1545.astype('float64')) # shape=(14, 11, 1)
func_1312_call = mod.get_global_var('func_1312')
func_1316_call = mutated_mod.get_global_var('func_1316')
const_1590 = relay.const([1,4,2,-5,-3,4,-4,7,-6,-7,-7,-1,7,-3,9,-10,5,-2,-1,-9,-10,8,-5,-9,3,5,4,-1,5,-6,6,-3,-1,10,-4,8,4,-9,3,2,-8,8,-5,1,-4,4,-4,-3,-2,8,-3,-9,2,-8,7,-3,-10,-7,1,-5,-8,9,6,8,6,-5,10,-10,3,1,9,-7,6,-4,-3,-6,-9,-4,6,4,-5,2,4,-2,-9,9,7,-7,-3,2,1,8,10,5,-1,7,-8,3,-1,9,8,-8,-7,9,-9,7,-8,9,6,-3,3,-4,1,4,-2,3,-2,-6,7,8,-6,-5,-9,-4,10,-1,9,5,1,-3,-2,-5,-7,-5,6,-10,8,7,-10,10,8,3,5,9,-7,10,-7,6,-6,8,-4,-4,-2,10,4,1,1,3,-4,-3,5,2,10,7,9,-10,4,3,-7,-9,3,6,4,2,-2,-8,-10,-10,-8,-8,2,8,-2,-1,6,-3,-10,2,8,1,-9,-8,9,9,5,-4,5,-1,5,-9,4,7,-1,-7,3,9,-8,10,5,7,-1,6,-3,5,1,-8,-4,-8,-5,3,4,9,1,1,3,7,-9,9,2,-9,-10,9,-3,10,-3,-6,-7,10,6,-5,1,2,4,1,7,-8,-8,-10,3,9,-3,4,-1,7,10,-6,-5,-9,2,-7,-2,6,2,-1,6,-5,-6,-8,-5,-2,-10,-6,-1,-5,4,1,-7,-6,-5,-5,8,1,-1,10,-5,-1,-3,9,1,-6,-6,-3,-6,-1,7,-3,10,-10,4,-6,-2,-5,3,10,7,-1,5,-5,4,-5,6,7,-3,-6,8,-7,7,7,5,6,-5,7,2,2,-2,6,-4,-5,-9,-5,10,-9,-3,9,-4,-4,-3,-1,-6,10,10,7,6,-1,2,-3,-8,-9,9,-3,-6,-3,7,-3,-7,-1,8,10,-10,10,1,-4,8,-1,3,1,8,-8,10,-10,-6,-5,-8,10,-8,-10,6,9,7,-10,-4,10,6,9,-3,2,-9,-4,4,3,-6,2,-6,5,-10,6,7,6,-5,-9,3,8,10,6,-7,5,-3,5,-7,5,-5,-9,-8,-6,-9,1,-8,-3,2,2,10,5,6,7,10,3,4,10,9,4,2,-2,-6,-1,-6,-2,-2,-2,-4,-6,-10,10,10,-7,-5,-9,-10,-9,5,7,-3,-8,5,-7,-8,3,-1,3,2,-10,-2,-6,-9,-9,3,4,6,-2,1,-7,-2,6,-3,5,-10,2,6,-2,-3,9,-8,5,-6,-2,6,-5,-2,-4,-3,-10,-5,-3,-2,-6,-10,2,-10,2,4,5,5,-10,5,2,4,9,4,-10,10,1,5,-8,10,2,-3,-4,9,5,-10,1,7,-3,3,7,-3,1,-2,2,-8,6,3,10,-5,-7,-10,-3,8,9,-1,-3,7,-2,-5,-2,9,4,9,-6,-9,-1,9,7,10,-9,6,-7,9,3,4,-9,-5,-4,7,9,1,4,-6,9,8,-10,1,-7,-7,-6,-10,-3,-8,-9,5,2,2,9,-8,7,-6,10,4,-8,2,1,9,-6,1,3,-7,-3,10,8,-10,-3,2,4,5,-7,5,8,4,-2,-1,-10,-9,-7,6,-8,10,1,-9,8,-8,-8,4,9,-1,-2,8,-1,4,-8,3,7,9,5,-4,9,-9,6,-4,3,8,6,-7,2,6,2,-6,-3,8,1,3,5,-9,-5,-8,6,2,-3,-10,-10,3,-8,-4,3,10,-3,6,-3,9,-7,6,4,-7,7,-1,6,3,-4,4,9,3,-5,10,-1,-7,9,-2,-1,1,8,9,6,5,-8,-7,-3,1,-9,-7,3,1,-7,-4,-1,8,-4,3,-10,-2,-7,7,9,-9,8,-9,2,-2,4,-9,10,-4,6,-6,6,-5,9,3,10,6,-8,9,-6,10,7,-5,-9,-3,8,3,9,9,2,6,5,-9,9,-4,-9,5,6,-4,10,-1,-1,4,-4,10,6,7,-7,6,-6,-3,7,-4,-7,-7,8,-7,4,-8,4,-6,3,-4,2,8,-2,-5,-10,-1,7,-6,-8,3,2,-2,-9,-9,-2,5,-4,-1,6,5,-7,1,-8,9,9,10,5,-10,-10,7,5,-5,-4,5,-6,-4,-9,-9,3,5,-1,-3,-6,-9,5,10,7,-7,6,9,-2,-5,9,10,-1,3,-9,-6,-3,-3,2,-8,-9,-8,-9,-6,-1,4,4,-3,8,-7,-6,1,-10,8,8,-1,-5,1,-7,6,10,1,3,-7,1,7,-6,7,-1,-10,-2,-5,1,10,-6,7,6,8,-1,2,10,9,8,-4,10,-7,4,-1,1,-2,-10,1,-6,-7,5,-8,9,-10,3,5,7,-8,-7,3,-4,2,-5,-2,-3,9,8,-4,-7,5,8,3,-3,4,2,7,4,2,4,2,10,-7,9,7,-6,5,-2,7,9,-7,-1,-9,-4,6,-2,9,-8,-2,8,4,-4,7,-5,-3,-8,-7,5,-5,6,10,10,4,6,6,5,-9,8,7,2,10,-10,-2,5,-7,1,-3,-7,-10,2,6,-5,-8,-10,-8,3,-6,-7,2,-6,-4,-6,-7,-3,5,-2,-5,-5,1,6,-2,7,5,-4,7,6,8,-10,7,1,-1,3,1,-8,5,-2,-6,3,-5,8,9,-5,10,-2,-1,8,-10,-9,-9,5,-3,-1,8,-10,-4,-6,6,10,7,2,-8,9,9,9,4,-4,-1,-8,10,5,-8,-7,-2,-2,-10,6,-3,6,-4,-2,8,-7,-10,9,5,-5,7,-9,10,10,4,-8,3,-10,8,9,-9,-5,3,10,10,-1,7,7,-9,-7,-3,1,10,4,5,-4,-2,-5,6,3,1,4,3,-5,-6,-7,-7,4,-2,-5,-4,1,-1,8,-2,-3,4,10,9,-10,-8,-6,5,-4,8,4,-10,7,3,-9,8,-9,1,8,7,-9,-4,1,4,-8,5,-6,9,6,-9,-1,9,9,-1,4,-6,-4,7,-2,1,5,2,-10,-5,4,-3,2,5,4,10,-6,2,-7,-7,9,-6,3,6,-8,-10,-4,7,5,-9,10,6,4,-9,-6,-9,-4,9,-3,-9,-5,-5,-1,7,6,4,3,-5,-9,-9,1,-10,-3,2,-6], dtype = "int32")#candidate|1590|(1188,)|const|int32
call_1589 = relay.TupleGetItem(func_1312_call(relay.reshape(const_1590.astype('int32'), [11, 9, 12]), relay.reshape(const_1590.astype('int32'), [11, 9, 12]), ), 0)
call_1591 = relay.TupleGetItem(func_1316_call(relay.reshape(const_1590.astype('int32'), [11, 9, 12]), relay.reshape(const_1590.astype('int32'), [11, 9, 12]), ), 0)
bop_1604 = relay.logical_or(uop_1580.astype('bool'), const_1590.astype('bool')) # shape=(14, 11, 1188)
func_1286_call = mod.get_global_var('func_1286')
func_1290_call = mutated_mod.get_global_var('func_1290')
var_1608 = relay.var("var_1608", dtype = "int16", shape = (216,))#candidate|1608|(216,)|var|int16
call_1607 = relay.TupleGetItem(func_1286_call(relay.reshape(var_1608.astype('int16'), [6, 4, 9]), relay.reshape(var_1608.astype('int16'), [6, 4, 9]), ), 0)
call_1609 = relay.TupleGetItem(func_1290_call(relay.reshape(var_1608.astype('int16'), [6, 4, 9]), relay.reshape(var_1608.astype('int16'), [6, 4, 9]), ), 0)
uop_1623 = relay.log(call_1607.astype('float32')) # shape=(6, 4, 9)
uop_1625 = relay.log(call_1609.astype('float32')) # shape=(6, 4, 9)
func_1386_call = mod.get_global_var('func_1386')
func_1389_call = mutated_mod.get_global_var('func_1389')
var_1636 = relay.var("var_1636", dtype = "bool", shape = (936,))#candidate|1636|(936,)|var|bool
call_1635 = func_1386_call(relay.reshape(var_1636.astype('bool'), [12, 6, 13]), relay.reshape(var_1636.astype('bool'), [12, 6, 13]), )
call_1637 = func_1386_call(relay.reshape(var_1636.astype('bool'), [12, 6, 13]), relay.reshape(var_1636.astype('bool'), [12, 6, 13]), )
output = relay.Tuple([bop_1569,call_1575,var_1576,var_1577,call_1589,bop_1604,var_1608,uop_1623,call_1635,var_1636,])
output2 = relay.Tuple([bop_1569,call_1578,var_1576,var_1577,call_1591,bop_1604,var_1608,uop_1625,call_1637,var_1636,])
func_1639 = relay.Function([var_1576,var_1577,var_1608,var_1636,], output)
mod['func_1639'] = func_1639
mod = relay.transform.InferType()(mod)
mutated_mod['func_1639'] = func_1639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mutated_mod.get_global_var('func_1639')
var_1641 = relay.var("var_1641", dtype = "int8", shape = (384,))#candidate|1641|(384,)|var|int8
var_1642 = relay.var("var_1642", dtype = "float32", shape = (6, 140))#candidate|1642|(6, 140)|var|float32
var_1643 = relay.var("var_1643", dtype = "int16", shape = (216,))#candidate|1643|(216,)|var|int16
var_1644 = relay.var("var_1644", dtype = "bool", shape = (936,))#candidate|1644|(936,)|var|bool
call_1640 = func_1639_call(var_1641,var_1642,var_1643,var_1644,)
output = call_1640
func_1645 = relay.Function([var_1641,var_1642,var_1643,var_1644,], output)
mutated_mod['func_1645'] = func_1645
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1676 = relay.const(False, dtype = "bool")#candidate|1676|()|const|bool
var_1677 = relay.var("var_1677", dtype = "bool", shape = (13, 5, 8))#candidate|1677|(13, 5, 8)|var|bool
bop_1678 = relay.logical_or(const_1676.astype('bool'), var_1677.astype('bool')) # shape=(13, 5, 8)
output = bop_1678
output2 = bop_1678
func_1682 = relay.Function([var_1677,], output)
mod['func_1682'] = func_1682
mod = relay.transform.InferType()(mod)
mutated_mod['func_1682'] = func_1682
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1683 = relay.var("var_1683", dtype = "bool", shape = (13, 5, 8))#candidate|1683|(13, 5, 8)|var|bool
func_1682_call = mutated_mod.get_global_var('func_1682')
call_1684 = func_1682_call(var_1683)
output = call_1684
func_1685 = relay.Function([var_1683], output)
mutated_mod['func_1685'] = func_1685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1854 = relay.var("var_1854", dtype = "float64", shape = (10, 9))#candidate|1854|(10, 9)|var|float64
var_1855 = relay.var("var_1855", dtype = "float64", shape = (10, 9))#candidate|1855|(10, 9)|var|float64
bop_1856 = relay.divide(var_1854.astype('float64'), relay.reshape(var_1855.astype('float64'), relay.shape_of(var_1854))) # shape=(10, 9)
func_1052_call = mod.get_global_var('func_1052')
func_1056_call = mutated_mod.get_global_var('func_1056')
var_1873 = relay.var("var_1873", dtype = "int8", shape = (384,))#candidate|1873|(384,)|var|int8
const_1874 = relay.const([[-1.191992,-5.609248],[-2.080741,-1.721525],[-9.863688,8.631578],[8.670047,9.235386],[-4.265653,9.713927],[9.015795,-1.648026],[1.720533,-5.088517],[-0.184052,7.948283],[-7.610766,7.562065],[7.877136,-4.292234],[6.466775,-2.386308],[9.923828,6.156407],[-2.145944,-7.967931],[-6.734052,8.469409],[-2.418820,9.992970],[-0.282672,3.995159],[-9.689391,-0.990601],[7.147688,-6.993931],[-8.386740,3.169751],[-1.844593,2.233617],[-2.904874,-2.122871],[-0.318027,-1.590125],[1.913008,-9.897372],[-6.036233,-0.475255],[-3.419294,-6.030103],[7.050669,-6.382581],[-5.744147,-4.507261],[2.779375,3.637416],[5.234120,-9.275886],[5.342920,7.789681],[-8.786494,4.759383],[5.885336,-6.216314],[-9.372339,2.633573],[2.125381,1.741064],[-4.370376,-6.024894],[1.744140,8.177530],[-4.300127,-2.615880],[-4.283629,-5.280475],[2.034925,9.420906],[-5.911544,-2.721111],[-6.474025,-3.100171],[-3.742194,1.126746],[3.239858,-5.833498],[8.075104,-0.005216],[0.194435,-7.548844],[-1.658123,-8.661934],[-2.080610,-6.538408],[5.562896,1.436871],[3.950363,8.402687],[1.914350,-6.751643],[4.844113,0.231466],[-4.646490,-6.972541],[-0.844690,8.138745],[0.607519,2.688214],[5.911836,-8.073563],[-0.714324,-2.020792],[-8.057449,9.322066],[1.863439,-9.514282],[-3.351433,8.497687],[0.695838,-4.026566],[-1.280675,-0.441026],[-8.002231,8.376522],[-1.010552,-2.897338],[1.877384,-6.881586],[3.468187,2.715651],[1.219425,5.266536],[8.182437,-0.360116],[-7.865845,5.406818],[-0.130278,-7.339762],[1.391814,-8.400502],[-0.451067,-8.633789],[0.497309,5.540151],[9.933553,7.276455],[-5.641053,-9.897505],[-6.110672,3.109877],[-3.615379,5.726394],[-9.133429,9.162735],[-2.327111,3.059096],[-3.217794,-6.744173],[-5.497925,-2.434876],[0.776034,-7.717742],[-4.563284,1.377791],[1.436248,1.176574],[4.906849,-9.934841],[0.148084,0.244842],[9.416913,-4.415134],[3.346023,-5.306271],[-1.777982,7.609206],[-0.189978,0.725895],[-9.831761,8.237376],[3.572560,0.862283],[-7.318359,0.649670],[4.525644,5.205611],[0.248320,3.304987],[-1.300675,0.781612],[-5.009455,-5.300578],[-0.198995,-9.867256],[3.061872,0.685309],[-8.982133,3.646063],[-9.046860,-8.777516],[-1.007007,4.067942],[9.442971,-2.937008],[-6.795177,-6.868821],[-5.322939,5.579827],[3.861442,5.537351],[-1.974840,5.282077],[-0.664770,3.293655],[8.942709,-8.342269],[5.098545,-5.149515],[-9.041720,-7.552729],[-5.070096,-5.084543],[-8.746789,3.623873],[0.781168,-2.832255],[0.803856,-6.616226],[-8.950226,3.211978],[-5.985895,3.788107],[5.147324,-2.452914],[-4.211657,-9.351578],[-9.260066,2.228218],[-8.269278,-8.634382],[-4.172049,5.113706],[-8.591619,0.197045],[2.029778,7.340607],[-5.438606,4.962953],[-0.588524,-3.450630],[3.700751,0.363813],[8.031236,-0.880934],[3.636354,7.443700],[9.126701,-0.877030],[-8.765476,-4.780753],[-2.329996,0.706980],[0.143306,-0.515861],[8.281978,-8.958482],[4.181473,-2.390252],[1.538747,-4.837580],[0.482186,-8.452889],[4.441698,-0.716434],[-9.074054,5.804157],[-4.166288,4.224479],[-0.035437,4.649954],[-6.139981,-0.384616],[7.833741,-1.496174],[5.749838,-1.636731],[-4.705103,5.694614],[1.627657,-3.991789],[-3.204155,-1.439774],[-3.176716,-9.376396],[1.498595,-0.150042],[-4.408505,1.407696],[2.137193,-1.650924],[-7.522873,8.514628],[3.981496,-6.430088],[7.675464,-5.741395],[2.497019,-5.579045],[-0.920223,-0.106481],[9.929392,-3.703295],[4.113865,4.996316],[8.444566,2.585300],[-4.062542,3.402296],[2.292692,-0.921309],[-7.810471,-3.438848],[5.916600,6.585321],[-7.689402,0.944997],[3.839175,6.072238],[7.373473,4.049866],[-3.533915,0.096842],[-4.076427,-5.512021],[-4.575141,-4.235810],[7.462922,-0.912614],[3.514195,-7.701655],[5.740201,2.012345],[7.952188,2.786001],[-8.316172,-1.635611],[4.216146,5.516092],[-3.693427,2.890423],[7.033123,3.859712],[6.305241,4.643618],[8.633747,-9.591511],[-5.703806,7.638916],[-4.430149,-6.811260],[-1.426037,1.312870],[-2.629147,2.497788],[-7.681634,-5.440455],[-0.781095,-2.713314],[7.553854,-2.356445],[6.635601,-7.603646],[9.739552,-4.346740],[-1.383874,-7.799840],[8.226598,8.818556],[-5.507175,-0.454140],[0.596270,-9.974606],[-6.165815,9.994177],[9.911525,-6.467760],[-0.845922,-2.814193],[6.369832,7.047288],[1.200155,-9.685885],[5.973222,1.230424],[-5.277242,-5.885548],[-9.791588,6.635841],[2.343927,-8.113248],[-6.027375,-2.459542],[2.579135,-1.257407],[3.790192,7.005822],[3.179215,6.811225],[5.163918,5.080259],[-7.225073,4.845396],[-2.088041,7.301990],[-5.607977,-9.349490],[-1.698479,0.478801],[5.240254,-8.525819],[-0.934580,-9.080119],[1.450654,-6.832885],[-7.817686,-8.436056],[-2.554189,6.250703],[-8.425966,-9.162193],[-3.661439,-8.471995],[3.032282,4.108428],[9.940147,5.417757],[4.062654,-2.376030],[3.487423,6.050980],[-0.625889,-7.200618],[4.169551,1.163255],[-4.815712,-0.762977],[8.122297,-0.530041],[2.575859,9.253500],[7.625325,-6.496095],[-0.430521,-1.036506],[9.086071,6.594752],[9.647465,-9.258841],[1.212829,9.120613],[-5.414702,9.138839],[-4.698702,-3.258984],[7.140766,-0.343929],[6.105593,6.875964],[0.997914,2.478600],[5.330338,-7.293222],[5.171945,6.381111],[8.457699,-9.317332],[9.535731,0.178134],[7.490036,0.705261],[5.410209,-1.994560],[-5.230255,8.649945],[5.333755,-9.325265],[2.389372,5.929601],[-5.731731,-8.182053],[5.116066,8.362852],[-2.247177,-6.775018],[-7.813539,-6.784234],[-1.064583,-6.113370],[-9.170069,-2.506431],[1.805943,-3.380610],[-1.224271,1.140897],[-5.799179,-6.703246],[-0.433814,-8.894366],[-5.318938,3.316912],[-6.267485,-5.014864],[-0.568959,7.789485],[-2.265901,-4.760452],[5.624509,9.440275],[-8.218250,-6.912666],[-9.649684,5.940869],[-9.192195,6.040644],[-3.756799,4.363586],[-9.652061,2.919533],[5.949028,0.464429],[3.264992,8.733259],[-2.469870,-0.339334],[3.327658,5.574700],[7.236693,-8.305800],[1.203998,-5.056986],[-6.370794,-4.756220],[0.520202,2.503528],[8.209416,6.013037],[-6.287728,1.143809],[8.102933,-7.278654],[-4.697458,-4.396467],[-2.699477,6.808555],[-4.700496,7.569633],[1.621826,6.258934],[-1.062648,2.049001],[2.672759,-2.311370],[3.274004,-0.424293],[5.797282,5.811270],[-1.116533,1.384506],[5.065409,-7.937198],[-9.823258,-2.197881],[-0.356516,-6.818945],[2.727446,-9.636792],[-5.823772,-0.074583],[-4.208480,-5.401571],[5.564405,8.449924],[4.515948,-9.235082],[3.236620,-7.350582],[6.833276,4.079247],[-5.250225,-1.978549],[-0.503450,-3.392973],[1.707678,-7.745122],[6.218147,9.060205],[5.907265,1.495836],[2.858254,7.855116],[-7.231334,-2.705186],[-4.182194,5.144438],[7.505646,-6.109609],[-8.721779,5.068941],[-3.365948,8.905286],[-8.268852,-4.961844],[0.769479,1.649350],[-1.603913,2.303749],[-4.795395,-6.119438],[-2.230501,-9.805878],[3.926748,0.441079],[1.673223,9.471246],[-0.776375,-3.263801],[9.949386,-5.557097],[-1.815046,0.077707],[-0.328080,2.905157],[-6.659998,-8.074815],[-1.984654,-4.899448],[5.929703,2.141143],[-3.130689,-8.034443],[-1.026001,-1.555747],[-8.518551,-9.499892],[-3.265996,0.518672],[2.137423,1.933409],[-6.896229,-5.553229],[-2.833683,-8.562794],[-7.378494,5.929090],[-3.950669,3.870957],[-7.367365,-6.108035],[6.459921,0.010972],[-4.640622,-5.684694],[0.118860,6.405578],[5.206648,-7.130891],[-6.846527,-2.632893],[6.071296,-5.690790],[2.610112,-9.215201],[9.059140,-6.966691],[0.121866,-6.766896],[-7.726410,2.365122],[-9.824625,0.339941],[-9.758963,-5.404754],[-0.939181,4.849032],[-6.172648,5.718008],[-1.345180,1.129736],[-5.807185,-6.800449],[4.494045,5.573306],[8.893993,1.251341],[0.844200,-0.564578],[6.137486,1.065693],[9.581910,1.579574],[-7.616253,9.990083],[-7.112429,-4.360168],[4.558936,-4.232482],[6.194270,-7.794241],[3.664005,-3.687647],[3.946301,-9.635231],[9.602885,-4.992845],[1.001233,-3.275702],[1.600486,-5.040534],[-9.816047,-9.462733],[7.532993,-7.853013],[0.006858,6.983596],[8.012528,1.727384],[-3.008664,4.724169],[9.669122,-1.086368],[4.800957,-4.386837],[6.305984,-0.782861],[0.016904,3.601854],[5.562955,1.527451],[-8.437770,0.338110],[2.047437,-1.060859],[9.966454,1.440043],[-2.955909,8.277787],[7.144036,-8.906880],[-9.960927,-0.324879],[5.486878,-5.664427],[-2.554095,6.192405],[-5.066402,-6.926507],[-8.581927,-3.311256],[-7.726374,-3.067025],[9.134678,-5.942484],[-6.978474,4.906369],[9.226057,-4.751412],[5.615241,9.640902],[4.968435,6.186253],[-7.117967,4.024621],[-9.355187,-5.274926],[1.734267,7.670198],[-6.279263,7.125211],[-1.767002,2.380357],[7.274483,7.477641],[-9.503048,-2.743027],[7.573556,5.974061],[7.508398,-6.630405],[-4.226957,-5.895495],[-2.838113,8.272665],[8.313290,3.876205],[6.507348,5.907556],[-4.876342,-5.973825],[8.309281,-8.859249],[-6.867312,-1.654847],[-9.049154,6.912200],[7.210066,0.446173],[-6.848234,-5.056513],[1.226089,8.446024],[-5.622382,1.934159],[6.448398,8.879461],[-9.459328,-3.018944],[-0.979656,-6.637395],[1.218154,2.168646],[5.570692,-5.772573],[9.946946,1.086721],[-1.037807,-0.281843],[2.024725,-6.155125],[5.744569,-1.370142],[3.007426,-5.483704],[3.401337,7.647597],[-5.015941,-5.417435],[9.077530,0.010882],[9.333876,6.493080]], dtype = "float32")#candidate|1874|(420, 2)|const|float32
call_1872 = relay.TupleGetItem(func_1052_call(relay.reshape(var_1873.astype('int8'), [4, 12, 8]), relay.reshape(var_1873.astype('int8'), [4, 12, 8]), relay.reshape(const_1874.astype('float32'), [840,]), ), 1)
call_1875 = relay.TupleGetItem(func_1056_call(relay.reshape(var_1873.astype('int8'), [4, 12, 8]), relay.reshape(var_1873.astype('int8'), [4, 12, 8]), relay.reshape(const_1874.astype('float32'), [840,]), ), 1)
output = relay.Tuple([bop_1856,call_1872,var_1873,const_1874,])
output2 = relay.Tuple([bop_1856,call_1875,var_1873,const_1874,])
func_1884 = relay.Function([var_1854,var_1855,var_1873,], output)
mod['func_1884'] = func_1884
mod = relay.transform.InferType()(mod)
var_1885 = relay.var("var_1885", dtype = "float64", shape = (10, 9))#candidate|1885|(10, 9)|var|float64
var_1886 = relay.var("var_1886", dtype = "float64", shape = (10, 9))#candidate|1886|(10, 9)|var|float64
var_1887 = relay.var("var_1887", dtype = "int8", shape = (384,))#candidate|1887|(384,)|var|int8
output = func_1884(var_1885,var_1886,var_1887,)
func_1888 = relay.Function([var_1885,var_1886,var_1887,], output)
mutated_mod['func_1888'] = func_1888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2408 = relay.var("var_2408", dtype = "int32", shape = (12, 11, 9))#candidate|2408|(12, 11, 9)|var|int32
var_2409 = relay.var("var_2409", dtype = "int32", shape = (12, 11, 9))#candidate|2409|(12, 11, 9)|var|int32
bop_2410 = relay.maximum(var_2408.astype('int32'), relay.reshape(var_2409.astype('int32'), relay.shape_of(var_2408))) # shape=(12, 11, 9)
output = bop_2410
output2 = bop_2410
func_2423 = relay.Function([var_2408,var_2409,], output)
mod['func_2423'] = func_2423
mod = relay.transform.InferType()(mod)
mutated_mod['func_2423'] = func_2423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mutated_mod.get_global_var('func_2423')
var_2425 = relay.var("var_2425", dtype = "int32", shape = (12, 11, 9))#candidate|2425|(12, 11, 9)|var|int32
var_2426 = relay.var("var_2426", dtype = "int32", shape = (12, 11, 9))#candidate|2426|(12, 11, 9)|var|int32
call_2424 = func_2423_call(var_2425,var_2426,)
output = call_2424
func_2427 = relay.Function([var_2425,var_2426,], output)
mutated_mod['func_2427'] = func_2427
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2478 = relay.var("var_2478", dtype = "float32", shape = (4, 5, 2))#candidate|2478|(4, 5, 2)|var|float32
var_2479 = relay.var("var_2479", dtype = "float32", shape = (4, 5, 2))#candidate|2479|(4, 5, 2)|var|float32
bop_2480 = relay.mod(var_2478.astype('float32'), relay.reshape(var_2479.astype('float32'), relay.shape_of(var_2478))) # shape=(4, 5, 2)
output = relay.Tuple([bop_2480,])
output2 = relay.Tuple([bop_2480,])
func_2485 = relay.Function([var_2478,var_2479,], output)
mod['func_2485'] = func_2485
mod = relay.transform.InferType()(mod)
mutated_mod['func_2485'] = func_2485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2485_call = mutated_mod.get_global_var('func_2485')
var_2487 = relay.var("var_2487", dtype = "float32", shape = (4, 5, 2))#candidate|2487|(4, 5, 2)|var|float32
var_2488 = relay.var("var_2488", dtype = "float32", shape = (4, 5, 2))#candidate|2488|(4, 5, 2)|var|float32
call_2486 = func_2485_call(var_2487,var_2488,)
output = call_2486
func_2489 = relay.Function([var_2487,var_2488,], output)
mutated_mod['func_2489'] = func_2489
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2557 = relay.var("var_2557", dtype = "float32", shape = (9, 4, 3))#candidate|2557|(9, 4, 3)|var|float32
var_2558 = relay.var("var_2558", dtype = "float32", shape = (9, 4, 3))#candidate|2558|(9, 4, 3)|var|float32
bop_2559 = relay.divide(var_2557.astype('float32'), relay.reshape(var_2558.astype('float32'), relay.shape_of(var_2557))) # shape=(9, 4, 3)
bop_2564 = relay.mod(bop_2559.astype('float32'), relay.reshape(var_2557.astype('float32'), relay.shape_of(bop_2559))) # shape=(9, 4, 3)
func_1230_call = mod.get_global_var('func_1230')
func_1233_call = mutated_mod.get_global_var('func_1233')
var_2571 = relay.var("var_2571", dtype = "int32", shape = (216,))#candidate|2571|(216,)|var|int32
call_2570 = func_1230_call(relay.reshape(var_2571.astype('int32'), [3, 9, 8]), relay.reshape(var_2571.astype('int32'), [3, 9, 8]), )
call_2572 = func_1230_call(relay.reshape(var_2571.astype('int32'), [3, 9, 8]), relay.reshape(var_2571.astype('int32'), [3, 9, 8]), )
func_1682_call = mod.get_global_var('func_1682')
func_1685_call = mutated_mod.get_global_var('func_1685')
const_2575 = relay.const([True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,True,True,True,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,False,False,True,False,False,True,False,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,False,False], dtype = "bool")#candidate|2575|(520,)|const|bool
call_2574 = func_1682_call(relay.reshape(const_2575.astype('bool'), [13, 5, 8]))
call_2576 = func_1682_call(relay.reshape(const_2575.astype('bool'), [13, 5, 8]))
output = relay.Tuple([bop_2564,call_2570,var_2571,call_2574,const_2575,])
output2 = relay.Tuple([bop_2564,call_2572,var_2571,call_2576,const_2575,])
func_2577 = relay.Function([var_2557,var_2558,var_2571,], output)
mod['func_2577'] = func_2577
mod = relay.transform.InferType()(mod)
var_2578 = relay.var("var_2578", dtype = "float32", shape = (9, 4, 3))#candidate|2578|(9, 4, 3)|var|float32
var_2579 = relay.var("var_2579", dtype = "float32", shape = (9, 4, 3))#candidate|2579|(9, 4, 3)|var|float32
var_2580 = relay.var("var_2580", dtype = "int32", shape = (216,))#candidate|2580|(216,)|var|int32
output = func_2577(var_2578,var_2579,var_2580,)
func_2581 = relay.Function([var_2578,var_2579,var_2580,], output)
mutated_mod['func_2581'] = func_2581
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2801 = relay.const([[[3,10,6,-9,-6,-6,-5,8,8,6,-10,10],[-4,-7,-2,-4,-7,-9,10,-2,10,-7,-8,-1]],[[-6,10,-1,4,-3,-2,-7,2,-5,-7,-8,9],[8,-6,-2,-3,-5,-4,5,-4,10,5,-4,-1]],[[9,-2,-10,-8,-7,-3,1,-9,10,7,-5,6],[-6,-3,10,-7,-6,8,10,-2,-10,9,-4,-10]],[[-4,-10,7,-6,-10,1,-5,-1,-9,-6,-6,-7],[-5,8,5,-4,6,-9,3,-3,-4,-5,5,9]],[[6,3,4,-6,6,-10,3,-9,-9,9,-6,5],[9,7,5,-7,1,-10,-10,4,2,7,8,-4]]], dtype = "int8")#candidate|2801|(5, 2, 12)|const|int8
var_2802 = relay.var("var_2802", dtype = "int8", shape = (5, 2, 12))#candidate|2802|(5, 2, 12)|var|int8
bop_2803 = relay.bitwise_and(const_2801.astype('int8'), relay.reshape(var_2802.astype('int8'), relay.shape_of(const_2801))) # shape=(5, 2, 12)
func_1682_call = mod.get_global_var('func_1682')
func_1685_call = mutated_mod.get_global_var('func_1685')
var_2808 = relay.var("var_2808", dtype = "bool", shape = (520,))#candidate|2808|(520,)|var|bool
call_2807 = func_1682_call(relay.reshape(var_2808.astype('bool'), [13, 5, 8]))
call_2809 = func_1682_call(relay.reshape(var_2808.astype('bool'), [13, 5, 8]))
func_1884_call = mod.get_global_var('func_1884')
func_1888_call = mutated_mod.get_global_var('func_1888')
const_2814 = relay.const([-2.200086,-1.717614,6.941954,-9.333554,0.148286,-4.695796,-8.266655,-6.275518,7.085375,-2.163881,8.593322,-7.245015,-2.701058,-9.429276,-0.507198,3.849704,-6.234510,-3.909771,-5.614273,-7.684372,8.935462,5.236707,-6.232160,-0.635130,-9.799508,5.192405,-6.736999,3.511306,4.178625,-3.618416,-1.037817,5.424407,4.005962,-0.439426,-2.027801,5.276091,-2.617173,-6.236768,-2.835493,-3.115140,3.983431,-1.467803,-4.288686,0.146802,-4.449632,1.933912,2.670604,8.377915,-0.037973,-0.844446,-5.500222,-9.962065,4.398557,-4.517918,4.118807,-6.823765,-2.097599,-1.488287,1.925019,1.692556,0.854651,-2.753762,2.062172,-1.482221,9.330586,-3.328201,-4.115363,-2.384206,6.931820,-9.990224,-9.010585,-5.708056,9.742904,0.436413,-0.510118,-7.218938,6.125579,-9.529656,0.199342,-9.434805,-7.715224,-8.786862,2.638126,-7.016628,2.134782,1.172128,1.340597,1.384954,6.752252,8.415323], dtype = "float64")#candidate|2814|(90,)|const|float64
const_2815 = relay.const([-9,-1,-10,3,-9,3,9,-9,-3,-9,-2,1,9,5,7,3,1,-8,-8,10,-9,1,-2,-3,7,2,-3,7,8,-3,1,10,1,2,1,7,5,-10,-10,2,2,-9,6,8,7,8,7,-2,7,8,-6,-8,4,-7,-8,4,-4,9,-8,-5,-8,4,4,6,10,9,-8,4,-4,8,2,6,-4,8,-3,8,-10,9,-10,5,-8,3,-3,9,10,1,-9,9,-3,-5,2,8,-6,5,-1,-6,-7,6,-6,7,-4,9,9,-7,7,-9,-5,-2,-3,9,-9,4,1,-4,-6,-4,-3,-6,-1,3,4,8,8,-2,-8,6,3,-3,-1,-3,10,-9,-10,-3,7,10,9,-1,-9,9,-4,-5,6,-1,-5,-8,-2,7,-2,-1,-8,10,-9,6,6,5,2,-4,10,-7,-2,1,2,3,10,-4,-7,8,7,-5,-1,2,-2,2,-6,8,-6,9,7,-3,-6,-9,-3,-10,-3,5,5,5,-6,1,8,7,6,-3,7,-4,-6,7,-10,-10,-10,-4,2,4,8,9,3,-9,1,-6,1,3,-4,5,-5,-6,-1,2,4,3,-1,8,-10,7,-1,2,-4,9,5,-2,2,7,-2,9,7,6,6,-4,-2,-10,3,-5,6,6,10,2,-8,5,8,-6,8,2,7,-10,6,-2,-1,9,2,1,-3,-8,-3,-5,-9,-5,4,-8,-5,9,-8,2,9,9,7,7,-6,-3,8,-10,-8,1,-4,4,-9,1,-6,-7,4,-8,9,-1,2,1,-1,-6,-8,2,8,-3,8,2,-7,-1,-6,-2,-6,-9,-8,-8,-3,-9,-3,-5,6,8,2,-8,-1,-9,-7,4,-5,-4,3,-3,6,9,2,10,2,2,10,-10,-10,-9,-2,-2,4,-2,-8,5,-5,-5,6,5,-5,-1,-8,3,-2,4,-5,-4,2,8,-9,4,-5,2,-6,1,-5,-4,3,-10,-2,-10,-1,-6,10,-1,-6,4,-5,5,7,-3,-6,7,4,6,-4,-3], dtype = "int8")#candidate|2815|(384,)|const|int8
call_2813 = relay.TupleGetItem(func_1884_call(relay.reshape(const_2814.astype('float64'), [10, 9]), relay.reshape(const_2814.astype('float64'), [10, 9]), relay.reshape(const_2815.astype('int8'), [384,]), ), 2)
call_2816 = relay.TupleGetItem(func_1888_call(relay.reshape(const_2814.astype('float64'), [10, 9]), relay.reshape(const_2814.astype('float64'), [10, 9]), relay.reshape(const_2815.astype('int8'), [384,]), ), 2)
bop_2822 = relay.divide(call_2813.astype('float64'), relay.reshape(const_2815.astype('float64'), relay.shape_of(call_2813))) # shape=(384,)
bop_2825 = relay.divide(call_2816.astype('float64'), relay.reshape(const_2815.astype('float64'), relay.shape_of(call_2816))) # shape=(384,)
func_1052_call = mod.get_global_var('func_1052')
func_1056_call = mutated_mod.get_global_var('func_1056')
var_2837 = relay.var("var_2837", dtype = "float32", shape = (840,))#candidate|2837|(840,)|var|float32
call_2836 = relay.TupleGetItem(func_1052_call(relay.reshape(bop_2822.astype('int8'), [4, 12, 8]), relay.reshape(call_2813.astype('int8'), [4, 12, 8]), relay.reshape(var_2837.astype('float32'), [840,]), ), 0)
call_2838 = relay.TupleGetItem(func_1056_call(relay.reshape(bop_2822.astype('int8'), [4, 12, 8]), relay.reshape(call_2813.astype('int8'), [4, 12, 8]), relay.reshape(var_2837.astype('float32'), [840,]), ), 0)
output = relay.Tuple([bop_2803,call_2807,var_2808,const_2814,bop_2822,call_2836,var_2837,])
output2 = relay.Tuple([bop_2803,call_2809,var_2808,const_2814,bop_2825,call_2838,var_2837,])
func_2840 = relay.Function([var_2802,var_2808,var_2837,], output)
mod['func_2840'] = func_2840
mod = relay.transform.InferType()(mod)
mutated_mod['func_2840'] = func_2840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2840_call = mutated_mod.get_global_var('func_2840')
var_2842 = relay.var("var_2842", dtype = "int8", shape = (5, 2, 12))#candidate|2842|(5, 2, 12)|var|int8
var_2843 = relay.var("var_2843", dtype = "bool", shape = (520,))#candidate|2843|(520,)|var|bool
var_2844 = relay.var("var_2844", dtype = "float32", shape = (840,))#candidate|2844|(840,)|var|float32
call_2841 = func_2840_call(var_2842,var_2843,var_2844,)
output = call_2841
func_2845 = relay.Function([var_2842,var_2843,var_2844,], output)
mutated_mod['func_2845'] = func_2845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2939 = relay.var("var_2939", dtype = "int8", shape = (4, 9, 9))#candidate|2939|(4, 9, 9)|var|int8
var_2940 = relay.var("var_2940", dtype = "int8", shape = (4, 9, 9))#candidate|2940|(4, 9, 9)|var|int8
bop_2941 = relay.add(var_2939.astype('int8'), relay.reshape(var_2940.astype('int8'), relay.shape_of(var_2939))) # shape=(4, 9, 9)
uop_2946 = relay.log(var_2940.astype('float64')) # shape=(4, 9, 9)
func_765_call = mod.get_global_var('func_765')
func_769_call = mutated_mod.get_global_var('func_769')
const_2960 = relay.const([-5.719634,-1.130805,8.570795,8.983610,0.736778,-4.249120,5.348446,3.753151,8.903273,-2.665811,-0.388344,2.929385,-6.923948,2.352028,-7.581641,-1.831378,-5.672358,9.298869,7.993404,-9.451848,-1.418881,7.367260,-0.400184,-6.537547], dtype = "float64")#candidate|2960|(24,)|const|float64
const_2961 = relay.const([-6.209526,2.257735,-4.814044,2.478048,1.148114,8.799112,-4.976393,2.092550,5.002782,-7.899034,-9.828127,-1.907754,-5.666699,2.169323,0.913368,7.416852,4.038961,-4.329433,3.214557,-5.186053,7.951684,7.988867,-2.746004,-9.159551,-2.275506,9.370121,-9.802925,-2.452717,6.027521,-9.308595,-3.745109,-2.802758,6.718097,5.849227,-1.242313,9.406787,-3.767953,9.322552,-5.321191,-8.483994,9.390083,9.920317,9.260863,-8.141235,3.863604,4.440765,9.051067,9.804862,-5.107811,9.689733,-0.518028,6.588824,5.336844,0.287331,-6.609717,7.602738,-6.437339,7.825023,-0.268792,-6.526397,3.513788,9.606297,9.667833,0.474904,1.819785,9.577991,1.324099,-3.705834,2.263552,-8.726574,-5.006833,7.445567], dtype = "float64")#candidate|2961|(72,)|const|float64
call_2959 = func_765_call(relay.reshape(const_2960.astype('float64'), [4, 6, 1]), relay.reshape(const_2961.astype('float64'), [4, 6, 3]), )
call_2962 = func_765_call(relay.reshape(const_2960.astype('float64'), [4, 6, 1]), relay.reshape(const_2961.astype('float64'), [4, 6, 3]), )
bop_2964 = relay.floor_divide(uop_2946.astype('float32'), relay.reshape(var_2940.astype('float32'), relay.shape_of(uop_2946))) # shape=(4, 9, 9)
uop_2967 = relay.asinh(uop_2946.astype('float64')) # shape=(4, 9, 9)
output = relay.Tuple([bop_2941,call_2959,const_2960,const_2961,bop_2964,uop_2967,])
output2 = relay.Tuple([bop_2941,call_2962,const_2960,const_2961,bop_2964,uop_2967,])
func_2971 = relay.Function([var_2939,var_2940,], output)
mod['func_2971'] = func_2971
mod = relay.transform.InferType()(mod)
mutated_mod['func_2971'] = func_2971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2971_call = mutated_mod.get_global_var('func_2971')
var_2973 = relay.var("var_2973", dtype = "int8", shape = (4, 9, 9))#candidate|2973|(4, 9, 9)|var|int8
var_2974 = relay.var("var_2974", dtype = "int8", shape = (4, 9, 9))#candidate|2974|(4, 9, 9)|var|int8
call_2972 = func_2971_call(var_2973,var_2974,)
output = call_2972
func_2975 = relay.Function([var_2973,var_2974,], output)
mutated_mod['func_2975'] = func_2975
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3127 = relay.var("var_3127", dtype = "float32", shape = (7, 8, 13))#candidate|3127|(7, 8, 13)|var|float32
uop_3128 = relay.rsqrt(var_3127.astype('float32')) # shape=(7, 8, 13)
uop_3130 = relay.erf(var_3127.astype('float32')) # shape=(7, 8, 13)
output = relay.Tuple([uop_3128,uop_3130,])
output2 = relay.Tuple([uop_3128,uop_3130,])
func_3134 = relay.Function([var_3127,], output)
mod['func_3134'] = func_3134
mod = relay.transform.InferType()(mod)
var_3135 = relay.var("var_3135", dtype = "float32", shape = (7, 8, 13))#candidate|3135|(7, 8, 13)|var|float32
output = func_3134(var_3135)
func_3136 = relay.Function([var_3135], output)
mutated_mod['func_3136'] = func_3136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3169 = relay.var("var_3169", dtype = "float64", shape = (12, 6, 15))#candidate|3169|(12, 6, 15)|var|float64
var_3170 = relay.var("var_3170", dtype = "float64", shape = (12, 6, 15))#candidate|3170|(12, 6, 15)|var|float64
bop_3171 = relay.floor_mod(var_3169.astype('float64'), relay.reshape(var_3170.astype('float64'), relay.shape_of(var_3169))) # shape=(12, 6, 15)
var_3175 = relay.var("var_3175", dtype = "float64", shape = (12, 6, 15))#candidate|3175|(12, 6, 15)|var|float64
bop_3176 = relay.floor_divide(var_3169.astype('float64'), relay.reshape(var_3175.astype('float64'), relay.shape_of(var_3169))) # shape=(12, 6, 15)
func_2971_call = mod.get_global_var('func_2971')
func_2975_call = mutated_mod.get_global_var('func_2975')
var_3195 = relay.var("var_3195", dtype = "int8", shape = (324,))#candidate|3195|(324,)|var|int8
call_3194 = relay.TupleGetItem(func_2971_call(relay.reshape(var_3195.astype('int8'), [4, 9, 9]), relay.reshape(var_3195.astype('int8'), [4, 9, 9]), ), 3)
call_3196 = relay.TupleGetItem(func_2975_call(relay.reshape(var_3195.astype('int8'), [4, 9, 9]), relay.reshape(var_3195.astype('int8'), [4, 9, 9]), ), 3)
func_1639_call = mod.get_global_var('func_1639')
func_1645_call = mutated_mod.get_global_var('func_1645')
var_3198 = relay.var("var_3198", dtype = "int8", shape = (384,))#candidate|3198|(384,)|var|int8
const_3199 = relay.const([9.887242,3.894504,0.116580,-3.756918,8.462936,-9.706464,-7.157226,1.838567,5.706515,-7.332334,1.413206,9.836883,-5.092812,1.422911,7.160290,-0.353023,8.361012,8.063403,-5.636728,-8.884233,9.839778,5.741890,-2.887355,-5.726250,-9.395494,4.617996,-6.336761,-7.933086,8.371662,7.334765,9.883136,7.668749,7.521762,0.216502,-5.376240,1.792261,3.420278,-6.760289,7.006953,1.980809,6.261021,3.927256,9.073786,8.502237,8.354167,-6.838292,-7.830569,-9.593721,-3.064209,2.905273,6.354802,-8.773951,6.803756,-0.326627,-8.710349,-1.461032,-2.090615,1.725579,3.259538,-3.448597,3.170235,9.798749,-2.310193,0.237838,-5.881714,5.366226,2.897379,-4.833541,-1.297791,2.760321,-2.615964,5.121348,-2.563058,-0.502765,2.717758,-2.379170,8.828301,-1.637449,7.994918,0.890573,-4.446118,9.030453,-8.665422,-6.780855,-4.225493,6.879014,1.226520,7.183959,-5.016598,-4.893831,-4.286522,-9.692076,-7.492309,2.615696,0.625477,4.228306,-3.161078,5.798212,-2.824067,4.189980,-9.048649,3.675907,3.057829,5.661536,6.322478,4.333685,-4.489336,6.286783,-1.279017,3.050916,7.642017,9.218780,7.670066,8.766244,-7.714171,0.074078,6.857654,1.854670,8.480577,-7.583491,-2.269108,0.720196,-8.392895,2.294526,4.929319,-1.968572,-2.262998,-9.493500,-3.279374,4.205280,6.447521,6.874083,-1.329717,3.454924,2.534923,-0.383389,-6.802807,9.682857,-4.676223,5.175824,7.702499,9.705914,-0.637030,2.645300,0.036255,6.616312,1.176861,0.800658,3.726918,-8.619565,5.687105,-2.463550,-5.457345,-0.187997,6.998422,-8.303254,1.373675,-6.358299,-5.268898,-5.526583,-0.336518,-9.158949,6.039665,2.266559,-0.304082,3.426139,-1.195311,8.547857,9.990820,-3.001302,-7.587231,2.476469,-4.240815,7.298709,-7.598914,-3.205424,5.334967,-0.965191,-8.989405,-8.584390,5.371628,-0.239599,5.701647,-3.283814,1.411980,4.123392,-5.495311,8.954927,-9.201601,9.845405,7.583866,-7.018396,-7.386215,4.824044,-0.546675,3.092629,3.959467,-1.036399,-9.373716,-7.045758,0.808957,4.518216,-8.085392,-2.259519,0.100107,0.378413,5.283653,2.770993,6.277098,-3.737283,-0.486180,5.516956,-7.429684,0.324466,6.503699,-6.762256,6.605220,-1.030434,5.058151,2.134937,-3.381722,2.280576,-4.452195,2.134837,5.552071,5.368840,3.346794,3.686737,-1.763108,-0.106180,-1.932364,-9.109449,-9.901782,-9.086606,2.361359,-6.508275,-5.936209,6.327006,0.660387,-3.060805,3.000490,-5.526556,9.732083,-2.755408,-2.119194,6.987749,0.304944,0.147428,-6.553837,3.542102,8.372371,9.922163,9.921466,-0.115768,5.781277,5.355709,-9.773276,4.146209,-9.415084,-4.357984,0.529275,4.826729,1.105504,-8.648576,-7.294510,-6.561703,-6.239145,-3.513051,-1.483501,-4.010921,6.657619,-6.205065,0.533710,2.040966,2.897305,6.835883,3.788050,-3.601257,2.619877,-1.425053,-1.088938,5.786010,-8.898417,2.667669,-9.248023,-1.537777,7.961135,8.488314,2.053208,-4.329552,-7.022577,1.889257,1.968843,3.692784,-7.766315,-2.791073,-1.443951,2.425662,3.107747,2.999493,-6.407151,-6.631076,2.453097,9.986444,-4.480897,1.927469,6.928344,1.519940,-4.848203,2.926916,-9.579883,-0.640533,2.913947,-0.225419,-4.555369,-2.295010,3.237559,-5.656549,-2.635837,6.617312,-8.636673,-0.921801,4.856419,-5.243459,-2.432476,2.834108,9.733482,1.765762,6.214222,-0.767374,1.518001,8.186894,4.751450,7.588343,7.900351,-9.471678,-6.849850,7.135805,-4.216668,7.357941,2.233506,-1.357334,-2.981715,0.280924,8.428848,2.602308,-9.362836,5.513359,1.132851,4.753791,-7.151637,-4.480548,-5.588735,-9.947086,4.125957,9.587477,-4.049342,4.752394,3.983280,4.654239,-7.248328,-1.593057,8.322876,-9.824531,-1.402655,5.671124,-7.694337,9.002889,5.661099,4.473306,-8.972580,3.972073,-6.977377,8.171635,5.547728,-7.979696,-9.964789,-6.079717,0.259212,-4.019593,-2.629725,-5.043123,1.324543,-0.432069,0.081439,5.786056,-7.254196,4.082917,6.076759,2.815927,7.019608,3.087626,-7.662005,3.755536,-2.477531,9.343598,9.936396,5.940018,-7.436164,8.757411,-4.197429,7.010088,9.918777,4.069314,2.685645,6.942221,1.797269,-3.767089,-3.366955,9.950742,8.783483,0.064772,-9.171518,2.114247,-5.690087,-5.262757,5.848163,-5.635895,-7.909012,-0.204798,-1.061893,-7.473833,-4.934450,6.611924,-6.179052,9.097057,7.759279,-6.488976,-3.073796,-4.155436,-7.518461,4.652248,-2.581309,-2.643298,1.701837,9.311598,-3.589496,5.793572,-9.112632,5.926223,5.599290,9.362126,-3.705929,-7.461883,7.590379,6.160881,-7.555040,-8.652332,-3.340967,2.472404,6.193261,6.040560,8.688553,-0.268539,2.844224,-9.125171,-8.641330,-5.187831,-4.239621,6.651877,8.033415,9.738898,5.503325,0.901547,7.548432,-9.897594,4.081082,-1.732621,-2.972376,-5.235646,4.413026,9.129400,-0.690330,-9.572917,-4.432220,7.537574,-2.049783,9.942632,-8.855623,-3.349546,-2.922521,-6.696869,-8.514054,-9.887029,4.315103,9.077610,0.509014,-1.260891,-2.166922,-0.562906,7.837349,-2.930634,2.829548,2.841452,-8.736280,8.408362,-5.009102,-1.532731,-8.193627,-9.659549,-2.921084,-7.942428,-4.956008,9.628047,5.307477,9.729906,0.035628,0.238087,-4.376889,-7.493320,-5.802408,0.408920,9.158706,9.242288,-6.372902,6.608201,5.838388,-6.753558,2.542881,-3.247251,-6.533951,6.877091,-0.996484,-1.219058,1.907967,4.809997,-0.183045,9.886591,1.522415,1.803807,-5.766681,-7.815891,9.863061,7.127319,-8.117896,1.923386,8.269835,7.592172,8.291287,-7.550489,-1.909093,-6.178546,-1.828236,6.528543,5.074851,0.686706,8.969179,5.818117,5.620311,8.739967,0.446528,-7.393948,6.701667,-3.893023,7.506787,-2.084391,-1.117724,-4.916288,-1.490779,-0.301542,-1.121734,8.702272,7.290840,-2.044121,8.431878,1.139921,1.060508,2.766101,4.456770,4.066166,4.922567,-4.855873,8.212668,-1.232030,-0.903195,4.794487,2.821511,7.667220,8.459988,7.707578,8.684844,1.598446,-0.947069,-3.856163,-0.357463,-8.677452,4.482159,-0.028382,3.677563,-0.190565,5.196326,-0.893691,-6.548424,-1.123491,-3.755174,-4.226956,-7.785869,-0.347286,-7.768992,-5.678529,-5.793656,-0.475008,0.066653,-1.253286,-0.896423,6.374834,-8.722887,-2.620231,7.982826,4.490140,-6.483765,6.063479,5.984308,8.513193,-0.262497,4.815706,-1.124826,-4.574726,-2.069398,-1.595629,6.631456,-4.057424,9.702186,-1.652380,4.114214,-1.059737,5.905334,-8.588454,4.350473,3.568852,6.610457,5.398035,-7.493207,-6.278684,-7.896653,3.272351,-0.649830,-0.427295,-4.014604,-6.187309,-4.515283,0.408969,-1.588971,-1.316375,8.725915,-7.522646,-0.225422,-1.163202,2.968903,9.933162,0.988283,-2.463652,9.111558,-7.156663,7.027597,2.299786,3.349969,-4.617095,0.627912,-4.790512,-6.962501,9.917659,-3.998147,5.557292,-3.647804,9.159715,-1.329590,3.190097,-8.887452,9.966450,-5.999530,7.735063,-4.332306,-3.260267,5.932676,-1.884151,5.868821,-1.494996,-2.794671,4.559729,3.672956,-6.979256,-0.316823,7.276649,6.126155,8.153853,9.033345,-9.325551,-5.568937,7.550723,6.008370,7.266129,-2.631203,-6.534249,8.517308,6.499753,-7.432503,-2.867710,-1.740440,-4.411482,8.438275,8.901561,-5.261488,-5.058856,-4.428917,-9.792767,3.733294,-6.780253,-6.031225,-2.340484,6.861418,-5.880666,-0.031537,-0.596289,-7.484785,-5.975974,-1.042902,-1.260682,2.849097,5.515422,8.943420,3.288701,1.400134,-0.827953,-5.089346,-7.468677,-0.032946,-1.261800,9.000814,1.174601,9.389280,1.719213,-3.675000,-3.786162,-8.437605,9.560478,-9.343706,4.997587,1.644834,8.715374,-2.584929,9.369004,-7.540168,3.647046,-0.762507,3.106956,7.246841,-1.053144,-0.643050,4.974943,-5.262465,-3.334256,-1.703747,6.010468,2.314688,8.938094,-3.375669,2.650864,-5.300970,-6.116157,5.485061,-7.795945,1.844198,-1.523033,-3.494930,-1.316753,3.164064,2.808409,-5.807542,7.777714,4.915238,-3.350664,5.759229,-9.250288,-1.617721,-2.650141,-8.536084,-5.040972,0.421602,6.037602,6.317286,6.951953,8.604484,-3.171598,8.156510,4.511458,-7.297989,-6.579410,4.135925,-0.425441,2.175875,-5.522880,2.175168,5.433892,3.465410,-8.952182,6.009807,7.992291,-9.707053,-6.077077,1.052459,-3.388504,9.087378,9.200946,2.088539,5.923183,3.189068,-2.202557,-7.774384,2.624893,1.041373,-5.326246,6.970033,0.718293,2.366091,6.951876,0.166713,7.625082,-6.041342,-0.059910,-0.081865,0.439847,3.535896,-0.881342,8.972966,5.654191,-1.494650,9.668449,-3.577063,5.367904,5.581998,-9.985962,5.926774,7.294073,5.165699,0.809372,6.836655,6.154751,5.242959,4.804663], dtype = "float32")#candidate|3199|(840,)|const|float32
const_3200 = relay.const([-6,9,10,-1,-6,-10,-7,-3,-3,5,3,7,-3,5,-4,3,9,-7,6,5,-6,1,10,-10,-4,-10,-6,3,7,-1,-8,-3,6,6,-10,6,-6,9,10,10,6,-2,-6,2,-5,-8,-9,8,3,-1,-6,8,3,-5,-7,-6,-4,-7,-5,8,4,-1,-7,2,4,4,10,2,-9,6,-4,1,3,10,7,-8,-2,-5,9,-8,1,-4,3,-4,-3,-10,-3,2,-1,3,-10,10,-1,10,4,-2,-1,-8,10,-9,-10,-7,2,-10,4,10,4,6,8,-5,8,-9,-4,5,9,-9,3,-4,9,-7,-7,7,-8,9,10,8,1,-7,6,-1,6,-6,7,-5,5,-9,8,6,-10,-3,6,8,-1,-4,-7,-2,8,3,1,2,-9,-8,9,-4,-6,-1,8,-4,6,-6,5,-5,7,8,5,3,1,10,5,10,1,-8,1,-8,9,10,-1,9,-5,5,7,2,1,-9,-6,-2,10,-7,-1,8,6,-6,-4,-4,-1,9,-9,5,4,10,5,-8,1,8,8,-4,5,-1,6,-10,-4,-5,9,-5,-8,-3], dtype = "int16")#candidate|3200|(216,)|const|int16
const_3201 = relay.const([[False],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[False]], dtype = "bool")#candidate|3201|(936, 1)|const|bool
call_3197 = relay.TupleGetItem(func_1639_call(relay.reshape(var_3198.astype('int8'), [384,]), relay.reshape(const_3199.astype('float32'), [6, 140]), relay.reshape(const_3200.astype('int16'), [216,]), relay.reshape(const_3201.astype('bool'), [936,]), ), 2)
call_3202 = relay.TupleGetItem(func_1645_call(relay.reshape(var_3198.astype('int8'), [384,]), relay.reshape(const_3199.astype('float32'), [6, 140]), relay.reshape(const_3200.astype('int16'), [216,]), relay.reshape(const_3201.astype('bool'), [936,]), ), 2)
output = relay.Tuple([bop_3171,bop_3176,call_3194,var_3195,call_3197,var_3198,const_3199,const_3200,const_3201,])
output2 = relay.Tuple([bop_3171,bop_3176,call_3196,var_3195,call_3202,var_3198,const_3199,const_3200,const_3201,])
func_3217 = relay.Function([var_3169,var_3170,var_3175,var_3195,var_3198,], output)
mod['func_3217'] = func_3217
mod = relay.transform.InferType()(mod)
mutated_mod['func_3217'] = func_3217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3217_call = mutated_mod.get_global_var('func_3217')
var_3219 = relay.var("var_3219", dtype = "float64", shape = (12, 6, 15))#candidate|3219|(12, 6, 15)|var|float64
var_3220 = relay.var("var_3220", dtype = "float64", shape = (12, 6, 15))#candidate|3220|(12, 6, 15)|var|float64
var_3221 = relay.var("var_3221", dtype = "float64", shape = (12, 6, 15))#candidate|3221|(12, 6, 15)|var|float64
var_3222 = relay.var("var_3222", dtype = "int8", shape = (324,))#candidate|3222|(324,)|var|int8
var_3223 = relay.var("var_3223", dtype = "int8", shape = (384,))#candidate|3223|(384,)|var|int8
call_3218 = func_3217_call(var_3219,var_3220,var_3221,var_3222,var_3223,)
output = call_3218
func_3224 = relay.Function([var_3219,var_3220,var_3221,var_3222,var_3223,], output)
mutated_mod['func_3224'] = func_3224
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3479 = relay.const([[[-5.937182,-0.596694,-8.151715,-7.319038,1.659126,-6.495854,8.155475,3.488498,-6.962267,2.473165,1.847043],[5.616403,9.024075,2.679092,0.092074,1.797550,1.688934,2.155358,0.433969,-1.745570,-0.937328,-4.119111],[-0.813376,0.389642,9.195518,1.670880,9.413245,-6.899127,7.037597,9.304154,-8.148433,-2.589369,-8.323483],[-1.551936,-7.754640,0.237785,5.173791,-0.870191,7.453080,-5.088600,-7.069079,5.710646,-4.031648,8.204776],[6.818924,-5.428457,7.172359,-0.963416,8.196510,0.180355,3.631423,-9.951684,-1.770797,-9.239193,8.121596],[-1.637728,4.458293,8.154181,4.820592,6.964893,4.213334,4.211020,-1.194935,7.868440,-0.946217,5.483597],[8.426973,-8.194114,7.579155,8.411822,1.885086,-9.938640,4.443826,-8.609902,-1.473379,-6.886943,4.677834],[-9.177837,4.641928,5.266294,-1.009867,7.662745,7.340794,0.422133,-7.345748,7.206197,1.371422,-1.672000]],[[9.074387,1.019198,-1.634886,9.229259,3.508411,-3.326207,8.122126,-9.484468,-2.117214,8.627985,9.062729],[-3.405499,2.363915,3.764469,-9.217416,-1.873868,-4.193885,4.830583,0.560020,8.092813,8.542296,6.031592],[0.161016,-0.701628,1.077494,1.271583,1.468222,-7.250204,7.365975,5.432131,-6.132035,8.483375,0.110594],[4.068426,-2.645833,-2.820530,-0.669106,-1.338735,9.567326,-6.700440,1.918704,-1.799560,7.692491,6.763864],[-5.675787,-5.358336,-1.942129,-2.541876,7.674387,-8.739621,-8.554199,9.569423,-7.858975,-2.277382,-4.794787],[-7.623148,9.181052,-3.857779,-9.643794,4.995321,-8.733319,8.535637,-7.668700,6.422058,7.963460,4.530063],[-2.919532,7.109940,-4.887460,-1.962963,-0.767180,-7.768495,3.306474,-1.082160,9.531835,8.800082,-9.236102],[-9.748609,-1.695071,-7.905604,-8.829284,5.415644,-7.776493,1.860644,-1.092624,9.658167,4.532495,-2.310136]],[[3.930056,-4.685782,5.282109,-1.437473,-1.856531,-3.929819,-2.440122,-0.868134,-5.899171,3.380899,-3.911418],[7.300048,8.122229,5.721308,4.086882,0.826629,6.438740,2.045549,9.704279,-2.633623,-9.930256,-1.663417],[1.215525,9.618366,-5.129426,-7.715806,-6.007444,-3.415245,-9.558522,-0.919272,9.879420,-6.283443,2.310863],[4.658282,-5.092530,-0.711619,-1.240093,5.038230,1.681380,0.614342,-8.974921,7.618044,-1.981371,-7.994986],[9.125363,-8.594858,-3.612397,8.838996,-4.987824,5.913839,-3.557531,3.340413,-4.314221,-6.765826,-5.837314],[-8.336811,0.565613,3.738263,1.104028,6.894859,-2.352434,1.129787,-0.893757,-3.440645,-0.111054,7.216195],[6.918178,7.013830,-7.119749,9.003182,-2.811939,6.015780,8.533782,4.175235,-6.971155,-3.372194,-5.117381],[0.914871,-2.137186,8.629074,5.716063,-7.668651,7.350140,8.547332,4.196333,-5.118991,-4.072177,-5.598501]],[[-9.742649,-8.942573,-2.130956,6.167052,-0.066253,7.470458,-1.230154,5.144616,-2.693780,-6.841494,-5.556068],[5.004671,6.625978,7.631397,3.839325,8.374056,7.041216,-6.034625,-4.569926,-3.475795,-8.433210,-6.495731],[-8.897202,5.595964,3.231926,-0.067339,5.917722,8.695818,-3.655753,-8.771173,-9.447151,6.276445,6.616646],[6.479174,-3.233220,-8.066481,-5.590956,5.313903,6.925201,7.517188,5.843831,-7.685754,5.365258,6.321403],[-5.730400,0.144524,7.419377,-3.087030,-4.866517,6.350141,5.081495,1.454937,-3.095185,-2.097424,9.119848],[-9.830980,7.508066,5.498945,-8.385403,-4.244799,-2.563307,-7.385291,2.260099,-7.062860,-8.412312,-8.846892],[-5.783857,8.186662,-2.813879,-2.412826,1.156069,-8.623818,3.631590,9.864165,-2.205124,-3.509667,1.970291],[3.181484,5.250681,-1.296176,0.921762,1.477456,3.857340,-4.732047,-4.343870,0.327557,2.788789,-2.714645]],[[-5.687999,-0.971123,-4.939050,6.168189,3.640304,-4.384458,9.470090,9.095849,0.985268,-5.566648,5.071507],[-8.073049,8.359843,-3.245135,-4.371723,8.331947,-0.970841,2.105590,-4.105368,3.056233,1.084065,-3.283569],[-9.325047,4.743023,-3.008029,-3.947652,-3.652148,6.792061,4.529157,-7.774418,-3.751729,-0.353720,-0.503812],[8.504529,-2.804774,-3.961028,-4.391942,-3.377919,-7.169492,-5.755254,6.538343,5.089151,-1.604591,1.259047],[-4.898167,5.278767,0.182428,3.216701,2.686238,-9.639839,2.573281,-5.731637,1.202187,2.203926,-0.682559],[-7.615127,-5.939078,-8.407732,-3.565358,-0.187288,6.618164,-8.365080,1.309960,-0.016827,-2.638077,8.914682],[-7.659386,-1.108395,-7.486671,5.722077,4.094038,2.118215,9.248464,-6.783725,4.551650,-5.635034,-2.844607],[-6.535070,4.096955,0.874271,7.917320,0.953514,-9.118613,-5.099799,8.639685,1.106795,2.091360,3.382333]],[[-2.949176,1.150752,-3.837639,4.034833,-8.694678,9.584925,-9.920693,8.039880,1.635923,1.641095,-0.759195],[-5.365742,-9.970277,4.160806,-8.048379,-9.756395,-7.495085,4.355993,-3.591145,-6.940290,-9.845969,-3.050053],[-5.506828,-5.789738,-3.895652,4.095061,1.627829,4.792460,7.271187,-8.280660,1.906389,1.475000,-0.814790],[-6.078172,4.644442,5.375277,-8.785508,-5.746308,4.863444,-7.560696,0.457080,2.509859,-0.480002,-5.923424],[7.693658,5.422886,8.229827,-0.489037,7.711008,-1.453494,6.886491,-0.730781,4.173658,-7.505360,-7.851450],[5.178809,-9.146858,-8.847198,3.950104,7.496429,9.374471,0.488453,5.818165,-0.587395,-7.017995,4.037205],[-1.051804,-5.451017,-4.237205,3.835826,7.732689,-1.808222,4.256905,-2.119656,6.562205,4.352062,4.971648],[-5.297148,-0.793004,9.170932,7.538705,2.251439,8.164683,-1.861512,-2.472361,-1.980663,-6.086644,-4.819709]],[[5.204560,-0.805226,-6.114272,-8.729313,-4.851827,-1.998979,9.338623,8.642868,-6.942082,9.030166,-3.001259],[5.007048,4.412264,1.125549,0.121244,4.469587,-5.141557,5.234492,5.536131,-5.610057,-3.081042,-3.961542],[8.468804,0.426294,-9.609838,1.752941,-3.009186,-4.267260,-3.471082,9.913342,6.630391,-8.989327,-0.750150],[-4.554147,8.822468,7.427892,7.380162,-0.617812,3.864283,-8.880969,-1.178333,2.352764,-4.778040,-7.446758],[2.382327,-8.286612,-8.780735,-9.229980,0.581269,-8.828470,-8.630067,-8.382173,8.819214,-1.577078,-8.034154],[8.922862,-0.638728,8.745348,-3.123437,3.831508,8.831794,-0.088584,-7.438381,-7.122206,0.940621,3.029553],[-1.709318,9.305516,-4.963854,7.803818,-9.436795,6.325327,2.523943,5.613176,-8.256689,1.053407,4.099034],[1.045785,-7.500225,3.356652,-3.436148,3.594894,-8.165732,-3.324459,-3.346717,-7.162989,-1.541318,0.294636]],[[-7.987520,9.672333,3.466239,9.834648,-5.162595,7.192049,-0.204680,-6.495708,1.802458,-1.863621,-3.177764],[-1.343760,-7.561398,7.497046,-4.897005,-5.624185,-0.547332,4.472743,-2.320910,-5.318553,4.405397,6.174090],[-2.168260,-4.300853,-1.021598,5.366420,9.152160,1.929112,-2.371804,8.496816,-7.655152,-2.853330,3.638634],[-1.280560,-4.067919,5.190070,-3.280186,1.817550,-5.437238,-4.803816,-4.115693,-8.553934,9.503947,5.243637],[-2.181230,-9.408198,-6.856811,9.996601,-6.036145,2.668346,-2.268007,-1.884397,-5.728332,3.918185,6.816660],[0.636115,-7.784510,-1.161978,3.471376,2.622886,-0.546511,-3.992318,-8.220535,-6.244973,-5.437704,2.020554],[-8.075140,0.376272,-4.859348,-8.012109,3.893914,0.447362,1.729929,5.846861,-9.680431,-4.353187,1.042758],[8.549605,8.162403,-4.039885,-4.736916,-3.534613,-6.943054,3.446312,6.790934,-8.174072,9.787237,-9.221874]],[[1.135819,5.323103,-1.259864,-6.334868,6.071190,-1.245326,-9.507914,-5.039490,-2.384079,3.744245,-4.750728],[5.199574,-3.547494,-4.706052,-0.931029,-0.429714,0.753513,5.596923,-9.981233,2.856052,9.935211,-6.149739],[-2.669672,-5.756912,5.009587,5.241258,-7.891727,4.082525,2.614769,-6.921644,-4.630507,1.676853,8.185677],[-0.779796,1.697948,6.712167,8.112902,-4.256647,-2.174982,-6.929716,-6.085089,1.958273,2.700883,-1.760885],[3.662967,-9.863808,6.652772,0.574512,-1.000463,-3.165432,1.438783,-4.519126,3.469680,-7.910126,-3.372313],[-5.204088,3.777340,5.352739,-1.291436,7.512378,3.218498,-4.832606,5.220218,5.855644,7.279514,7.753170],[6.059629,9.426189,-8.167863,-7.256241,-1.744544,-4.013272,-7.802130,-2.286604,0.063585,-1.121770,1.842431],[1.629741,-0.043846,-8.770149,4.062054,-7.885408,-6.972779,9.827110,-3.232706,7.605515,-7.746570,-8.380538]],[[3.428281,-4.251078,-8.658275,2.436868,0.064080,-3.686962,2.011691,6.866592,2.993619,0.387692,6.896216],[-8.206918,-0.789419,-6.105424,9.896460,-2.389744,-9.087498,2.535783,4.954379,-5.632887,-1.332042,7.004885],[-6.004513,-0.121162,-7.927244,0.964585,-3.026679,0.727764,9.584489,-3.295891,-1.021591,6.311063,1.148158],[3.356761,-8.216140,6.050061,2.635806,-9.320962,0.814574,2.989476,2.997993,2.398547,-3.957306,-5.372030],[-2.700291,9.471590,6.791815,8.561083,4.714122,-3.617583,2.517411,-9.658284,-0.830223,-6.017727,1.774160],[6.439619,-4.231728,1.582773,-8.115046,-4.139045,-5.754715,3.989320,-6.053179,-9.440607,-2.080189,6.563575],[-1.436243,-1.349892,0.124298,-6.424856,-8.186170,3.937441,-3.401589,1.189731,-3.284535,5.994243,9.013113],[8.041624,-9.209225,-0.383799,-6.961743,-1.596896,0.479872,0.985356,8.354902,-8.179106,0.105768,-0.827392]],[[-5.202973,-7.497601,1.083652,6.879955,6.342067,-3.000254,-9.289328,-9.233094,5.270498,6.418049,3.974448],[3.754530,-5.930533,-1.391460,7.273206,3.161177,-4.576693,-7.604992,3.838233,3.537878,-2.015484,-3.011636],[-5.282154,1.177964,7.253875,-0.823014,9.281024,7.289168,7.650728,-5.740925,-7.484763,-2.329064,5.737434],[-6.555719,-6.759662,7.100908,-8.428293,6.908065,-1.342487,-9.999592,3.308874,-9.821797,-1.566859,-1.479428],[3.103151,-8.065090,-8.338746,0.369536,5.525592,1.469691,7.993274,5.425107,-7.319060,-9.645070,2.659715],[3.284194,6.128349,-6.717903,3.063164,-3.532006,2.903088,7.807356,2.844258,0.924970,-0.605991,1.733495],[-3.258358,6.988003,3.162298,2.955743,-0.428211,-3.314496,1.362999,8.873089,3.013178,7.439365,-3.007221],[2.437798,6.261754,7.313608,8.346219,7.442188,6.443230,-9.234580,-1.873934,3.618607,-5.443272,6.466909]],[[-3.723388,2.778537,-2.202874,-0.209636,5.399929,-9.741753,5.944840,-8.579819,-9.917989,-7.837343,2.136278],[5.750985,-6.169945,-8.728321,-8.043149,-1.976221,2.678000,-4.604433,4.625432,-2.731889,-5.178941,2.461348],[-0.475792,-8.410877,-1.990425,-7.700789,-7.920782,9.174322,5.823720,0.935654,6.430913,-9.578427,6.943548],[-2.573216,-0.367106,8.693875,-4.983834,-3.903738,7.081090,2.639630,9.294364,7.694137,1.137294,-0.224591],[-6.840741,-7.548968,-6.810920,-4.208234,-4.603009,-2.891605,-2.570512,9.795658,-0.443251,5.647796,3.411884],[5.187239,7.458457,-2.054472,-9.515014,3.983258,-8.202453,-4.524242,-1.578577,4.326639,-1.721207,6.630283],[4.563118,5.054519,-6.877153,4.669635,7.427674,-3.733947,8.457513,-4.511482,-9.529345,9.021291,7.431913],[6.230553,-3.156475,-7.400843,-0.525147,4.026750,3.966866,5.681006,-0.484186,6.150063,-2.027766,-3.899428]],[[-9.776897,7.100228,-8.427568,7.736729,-0.655350,4.868564,9.384714,4.887174,-4.259581,-0.947171,1.590017],[2.213943,-9.966312,-9.324523,0.551019,0.817880,7.088983,-2.752224,8.892046,6.880179,-2.567497,-1.826360],[3.996700,9.386683,0.967402,3.996534,7.408357,-5.181720,8.106994,-2.798254,8.740054,-2.486729,-3.008025],[-9.210786,-8.927245,-7.463738,-7.803248,7.363442,-4.182878,6.155476,-8.141730,1.944735,-5.961006,7.694441],[-9.024377,-5.095351,8.734926,-1.842087,3.975971,6.199518,-8.065122,-8.690436,6.943709,-0.079196,-8.383708],[1.570096,-3.079364,-4.319165,-0.066423,-1.071610,-5.674126,-9.975785,6.301940,7.402324,2.138000,2.592938],[-7.906704,-4.059208,8.726274,-9.855334,7.364428,-0.490533,-8.944067,-1.030421,-3.493710,3.979906,8.275816],[5.495228,-0.785752,9.369126,5.316751,4.735175,-6.085163,7.230377,2.084086,7.796545,3.141507,-2.645852]]], dtype = "float32")#candidate|3479|(13, 8, 11)|const|float32
var_3480 = relay.var("var_3480", dtype = "float32", shape = (13, 8, 11))#candidate|3480|(13, 8, 11)|var|float32
bop_3481 = relay.mod(const_3479.astype('float32'), relay.reshape(var_3480.astype('float32'), relay.shape_of(const_3479))) # shape=(13, 8, 11)
func_2577_call = mod.get_global_var('func_2577')
func_2581_call = mutated_mod.get_global_var('func_2581')
var_3492 = relay.var("var_3492", dtype = "float32", shape = (1, 108))#candidate|3492|(1, 108)|var|float32
const_3493 = relay.const([[7,8,8,-7,-3,-4,-10,-1,2,9,10,-10,-4,-4,-4,-5,-6,-10,-9,7,-9,2,3,-2,5,-10,-1,9,1,-10,-10,5,-1,4,-1,-9,3,2,7,1,-7,-8,-3,6,10,10,-4,-10,1,-3,5,5,-5,2,-2,5,-5,-8,8,6,-1,-2,3,-9,3,7,4,-6,10,3,2,-1,-1,-7,4,-8,10,-1,-1,-7,10,4,7,-5,7,-9,7,6,-9,-6,-8,10,-4,1,1,10,2,-9,4,-6,-3,-8,4,-8,-10,-10,7,-4,-2,6,3,-7,10,3,-10,-2,5,3,7,4,4,-4,3,1,3,9,3,-10,-9,-4,-6,-2,-8,10,-6,3,-8,10,6,-7,1,4,1,7,-1,-9,-9,7,5,5,2,1,6,1,5,1,-5,9,3,6,-7,10,-5,7,2,3,-1,-6,-6,-9,7,8,-6,-8,5,2,10,-1,-7,-6,10,5,-4,8,-9,4,8,-8,2,-3,1,-10,7,5,-8,7,2,7,4,-9,-2,-7,-6,-7,2,-3,7,-1,3,-10,-10,-8,10,10,1,-5]], dtype = "int32")#candidate|3493|(1, 216)|const|int32
call_3491 = relay.TupleGetItem(func_2577_call(relay.reshape(var_3492.astype('float32'), [9, 4, 3]), relay.reshape(var_3492.astype('float32'), [9, 4, 3]), relay.reshape(const_3493.astype('int32'), [216,]), ), 4)
call_3494 = relay.TupleGetItem(func_2581_call(relay.reshape(var_3492.astype('float32'), [9, 4, 3]), relay.reshape(var_3492.astype('float32'), [9, 4, 3]), relay.reshape(const_3493.astype('int32'), [216,]), ), 4)
const_3498 = relay.const([[6,-4,-2,-10,-6,-2,7,-4,8,-4,1,-1,7,5,-10,7,5,-10,8,1,-2,7,-5,-2,3,8,-2,-7,2,10,7,8,1,-10,8,2,-2,-9,-2,-10,7,-10,-8,9,-9,2,8,-9,-7,-9,10,-5,2,9,-7,8,-8,4,-7,4,3,1,5,2,9,-7,3,-1,-9,9,-1,1,-7,-3,-9,-10,4,-4,3,3,7,3,5,7,4,2,-2,5,10,-6,7,-1,-9,-2,-1,6,-6,-10,-3,-6,2,2,-1,-5,-5,9,-7,2,5,10,-10,8,5,8,-4,5,-4,-9,-6,-7,-7,4,5,2,2,8,8,8,3,-1,10,-2,-5,-1,-7,-3,-3,10,2,1,-4,6,6,-5,-9,5,-10,-4,-10,-7,3,3,6,-5,-7,-4,5,3,1,-10,2,-10,4,1,-2,3,8,-1,-3,-7,-3,1,1,9,2,4,7,-8,1,7,8,7,9,-2,-4,-1,10,-7,6,4,-9,1,4,9,9,-7,7,2,-3,8,-3,-6,-3,-5,1,8,-10,6,-10,-9,10,-5,1,-2,-2,-2],[3,10,-1,6,8,1,-5,-2,-9,-2,-7,5,4,10,2,-1,-10,-1,-7,2,-3,3,-10,-10,6,-8,-1,-2,-10,1,6,7,2,-8,6,-6,5,-4,-4,1,-10,-4,-2,6,-9,-6,-6,3,-10,8,-1,5,-4,10,-7,10,10,6,2,-5,-8,8,-3,-3,1,1,8,9,-6,1,-10,9,-9,-3,9,-4,1,3,4,-1,1,-9,7,-2,7,-6,-6,-8,-4,-6,8,-1,3,-5,10,-3,7,2,2,-8,-7,7,-3,-10,3,-9,-9,2,-4,8,4,-7,-5,-6,10,5,10,5,-6,-10,3,2,10,4,4,8,-5,-8,1,-5,-7,10,-4,-3,-2,-9,-10,6,6,4,4,-7,-4,-9,-10,5,7,-7,2,1,-2,-10,-3,4,8,1,-7,-3,5,5,-6,-5,10,8,-3,-8,1,-9,4,-6,-3,-6,-7,-1,-9,-10,-1,-2,10,-2,10,9,-8,6,6,-6,-10,7,-9,4,9,7,-10,8,8,4,-2,9,-3,-1,8,-6,-10,-10,5,9,7,-1,-4,8,1,-1,-6,2,-7,10],[2,8,1,3,9,10,-7,-6,2,-4,-7,-7,-5,-4,-3,10,10,-9,3,9,-1,1,-1,-10,2,-9,1,3,4,10,2,5,7,7,4,-5,6,-5,-2,2,-1,2,7,-9,3,-8,-1,-10,-7,-2,4,7,3,7,-7,1,1,1,9,9,-3,-10,2,-5,-7,-1,4,1,10,-7,8,-6,-1,5,10,5,-2,6,-5,4,-9,4,-3,-3,2,9,-7,-9,5,-2,9,-6,4,-7,-4,4,-4,-9,3,9,3,5,4,-2,-9,1,4,1,1,9,-8,1,1,-10,-3,10,-6,7,3,8,4,2,-9,7,2,7,1,4,9,8,1,-7,-5,7,-4,9,-4,-9,5,-3,4,-9,-8,-8,-6,-7,4,-6,-10,6,7,5,8,4,-2,2,-5,-2,7,9,8,-2,2,3,10,10,-7,-9,-1,-8,-8,-8,5,-7,3,6,2,6,-8,7,-10,-5,2,-4,5,-5,-4,7,4,-4,7,-8,9,-4,7,-5,8,6,2,-2,-1,9,9,-9,-9,10,4,-7,-4,-2,-4,-9,-6,2,-4,6],[-3,-5,2,-5,-8,1,3,-6,10,-9,6,-7,-5,-4,-5,-8,-7,9,8,4,-9,7,2,-2,-3,9,10,-6,4,6,10,8,-7,-1,-2,-1,10,4,3,-8,-6,-10,10,-1,-3,6,9,5,10,10,-10,5,-1,4,5,-2,7,-7,-7,-3,-5,6,-2,1,6,6,-4,-6,9,9,-1,5,5,7,10,4,1,-3,-2,7,-8,4,3,7,9,6,-8,-6,-2,-5,-4,-2,-1,-10,-7,-9,-9,9,2,-5,-3,-10,3,6,-10,-10,1,1,-4,5,7,8,-8,9,-4,-2,7,-10,8,6,10,-4,7,-5,4,4,-5,-7,-1,2,3,2,5,-10,9,-1,-1,2,-8,-9,-6,-4,-5,-3,-9,2,8,-2,6,-6,-8,-6,1,7,4,4,6,10,-10,8,9,-3,-3,-1,-9,-6,3,-7,9,-6,9,4,7,-1,-8,-8,10,-5,6,-2,3,3,-9,4,6,2,7,5,9,-3,-4,3,2,-6,3,5,-7,6,1,-5,-8,-6,-10,-1,6,3,6,-3,3,-7,7,-4,2,-2,8,2],[2,-4,-1,-1,-10,-7,2,3,9,-4,1,3,-10,8,2,-5,-10,-9,4,7,6,-10,-4,-6,4,1,9,-1,-9,-6,-9,-5,10,1,4,7,4,8,10,-2,3,-10,-9,9,9,1,6,10,-10,9,-1,-3,4,2,7,-8,1,-3,2,10,-9,1,7,-9,-2,-10,-5,-5,-6,2,-3,4,-2,-4,-10,6,-5,3,8,-6,2,-3,-1,-5,7,8,2,6,10,-8,6,8,-3,-1,4,-1,-3,5,-5,1,-2,4,3,-9,9,3,-3,7,1,7,5,-6,-2,-4,-3,-9,-6,-10,2,-1,-7,6,-5,-4,-1,6,8,-6,-2,7,5,-2,-6,9,-10,-9,-7,6,10,-10,10,-6,-7,9,1,5,-10,7,9,-4,-8,-9,9,-7,-5,9,5,6,-6,-1,10,4,-5,8,7,-7,6,-8,-1,-4,-5,4,8,2,-4,2,-1,8,5,3,9,-5,-6,-1,-1,3,-8,4,6,10,8,-6,6,4,9,5,7,-4,-4,-2,-2,9,-2,7,-8,8,1,-5,-9,10,8,7,-5,10,7,-4],[-7,-2,5,-6,8,-9,1,6,4,-7,3,-10,4,8,2,-2,-5,7,-4,3,1,1,-7,-10,-4,5,-1,-4,5,-8,-5,7,7,-10,-8,-4,-6,-9,-1,5,-7,3,-5,3,-10,-8,-3,5,-8,-2,-7,-5,3,-5,6,2,-10,9,3,-5,5,7,10,-10,6,-7,10,7,10,10,4,7,-6,-9,-10,-1,10,5,-10,8,-8,-1,9,-4,10,4,5,-9,-10,9,5,-7,7,-4,-6,5,9,4,3,-8,-3,10,6,2,-6,-7,2,5,-5,-8,-3,-7,-10,2,-1,8,-5,-6,6,10,-9,-4,-9,10,-7,-5,3,3,-2,-7,-7,9,-3,-4,2,-4,1,4,6,5,2,4,-1,9,1,-8,-2,2,-3,8,-2,-8,8,-4,6,8,9,-5,10,-4,1,1,9,1,-2,9,9,9,-9,-4,10,5,5,-10,6,-7,-5,2,-4,6,-2,-1,2,2,1,-6,-9,2,9,-10,5,-3,8,4,8,9,5,-5,-8,-8,-5,3,3,10,7,-8,9,-5,-7,-10,-1,7,9,-4,-10,-9],[9,9,-7,-6,10,9,7,10,-4,-9,1,4,-9,-6,-3,2,-7,5,-3,-8,-7,6,-2,-10,-9,5,4,-8,10,-1,-1,6,-5,1,2,-3,-8,-4,5,1,2,2,7,-8,7,9,-2,7,-4,7,10,6,7,2,-4,6,1,2,9,3,9,4,-7,-1,9,-10,8,-9,-5,-8,4,-7,-1,10,-10,6,7,3,10,8,3,-10,-1,7,2,7,1,-2,2,4,7,3,9,9,-1,-1,-2,-5,-2,2,-10,-1,-2,5,4,-8,-9,-6,-7,8,-1,-2,1,-7,2,8,-8,-4,9,6,9,4,-7,4,5,-3,10,9,-3,-4,-6,6,1,-6,-9,6,8,-4,10,10,10,4,-9,3,1,-6,2,-3,-1,-3,-3,8,9,-8,-10,8,4,-3,-5,4,6,3,1,10,4,4,-4,-1,-4,6,9,-5,-4,-5,-7,-4,-6,-10,10,-1,-5,4,-5,4,1,-5,-4,3,-1,8,7,10,9,-4,-9,-5,-8,-8,1,-4,4,5,4,-9,-8,2,10,-3,-1,8,-10,8,2,-2,-8,7],[10,1,2,8,6,7,3,3,-5,-7,3,-4,1,-8,-4,10,-5,-7,-10,6,6,-10,-3,4,5,2,7,3,-2,7,-3,2,-10,6,-6,4,8,-3,-10,-9,-8,-10,-5,-3,3,-2,8,8,-5,-8,1,-4,-9,-1,6,1,-9,9,6,-10,3,-9,8,-3,-4,-3,-4,-5,4,1,4,-3,4,8,5,3,1,-3,1,-1,8,1,1,-6,-2,6,-10,10,1,8,-7,8,-4,7,8,10,2,-7,-9,-7,-9,-6,9,4,5,10,4,-2,-10,2,6,3,5,-8,-2,-5,7,-1,-9,-10,1,-8,7,-1,-8,-6,-9,2,-6,10,7,-10,-9,1,-10,-4,-1,5,-4,-9,-1,7,-2,4,1,-8,9,3,3,-8,8,-5,6,-9,6,3,2,7,-2,4,7,4,-1,6,4,8,-5,1,5,-4,-9,-8,10,7,-10,-5,-2,-5,-9,-9,-4,-5,2,-2,7,7,4,8,-3,-6,-3,-2,-4,-8,-7,-6,-5,-9,6,-3,-1,10,8,-1,-3,5,-10,3,-1,6,1,8,10,3,1,10],[8,7,-8,-8,7,-10,-8,2,-5,9,8,-2,-5,6,-4,-7,-6,10,-5,8,-10,9,-1,-9,-7,4,6,-8,2,-6,-2,-1,-9,4,-7,-6,-9,7,5,-8,-4,2,10,-10,5,1,3,6,10,8,2,-4,-8,-5,-7,-7,-7,3,-10,2,-3,3,-2,7,-10,-9,8,5,6,-3,3,6,-1,-7,-1,6,-1,-9,-7,5,1,10,-1,9,5,10,2,-7,-2,3,5,-9,-8,9,5,3,-2,-7,-9,8,-8,1,-4,-2,7,2,-5,-10,7,8,-5,-10,-5,-8,3,8,4,-9,10,-5,-9,10,-7,-8,-10,-8,7,-2,5,7,-7,7,-6,2,-10,-4,-5,4,5,-10,-8,9,-8,-8,-2,9,9,3,-4,1,3,4,2,-1,10,1,10,3,-3,-9,5,-6,-7,2,-3,7,10,5,-9,-8,-8,5,1,3,9,10,-3,-2,5,-2,-7,-6,10,9,-8,6,-6,-3,1,10,2,-7,6,5,-1,2,8,7,1,-7,4,6,-6,-6,5,-8,6,1,-5,5,-5,-4,-7,1,8,9],[-3,2,4,-8,-6,5,4,-5,-4,2,7,4,-10,2,-5,8,5,-7,9,-7,4,8,10,4,4,-3,4,3,-2,-2,5,5,1,9,7,-7,-8,8,8,1,-8,1,4,7,-8,-5,10,-2,-1,-3,7,-1,6,-4,-1,-8,-1,-2,4,1,10,-6,-5,3,1,8,7,6,1,10,5,3,-7,-1,6,-5,-9,7,1,-1,8,-2,-1,10,8,-5,10,-1,3,-7,5,5,3,9,6,8,-1,8,-9,-3,-10,10,-4,-4,2,-8,-5,10,-9,-6,8,6,4,-1,-2,-10,3,-10,-10,6,10,-8,8,-7,-6,1,-6,-3,-1,-3,-9,7,2,10,6,3,-1,2,-8,6,1,8,-4,-8,-7,2,-4,7,8,10,-3,-1,2,4,2,4,7,3,-4,8,1,-7,-9,-1,-2,-3,3,-9,-7,7,-3,5,4,1,8,-1,-7,4,-5,-3,7,3,-9,-5,7,8,-2,10,-10,3,-10,6,5,3,4,-8,-3,-1,5,-9,-7,-4,9,-4,-7,-8,3,6,2,9,-7,-9,10,-5,5,9],[10,-10,9,9,-4,3,-10,7,-8,10,-3,-8,-8,-8,-8,4,10,6,-9,-3,1,-10,7,-3,-4,-2,1,-10,4,1,-4,-7,-8,-4,-9,1,5,1,1,-6,-6,-3,-8,-7,2,-2,10,3,-4,6,-3,5,8,-9,9,-3,-4,3,9,4,-5,-10,-8,4,7,7,-7,-8,-8,4,-4,2,3,-10,7,-6,2,9,8,-6,-3,4,5,7,-1,-1,-7,-5,-2,7,-2,-2,-10,6,6,10,5,1,8,-5,8,7,9,-8,-6,-10,9,-3,-5,-4,3,2,9,-9,-1,9,-8,-5,-6,-10,7,3,4,-4,8,-9,3,8,5,3,10,3,6,-9,-10,-9,8,4,9,-10,7,8,1,6,-3,-9,-8,-3,2,-9,10,1,9,2,7,-6,1,6,10,-7,-10,-10,-1,-3,6,7,-9,5,-6,-7,-7,7,5,-10,-7,1,-3,8,-3,-9,4,-4,4,10,-6,-3,9,3,-7,-10,9,-4,2,8,-2,4,-5,-8,10,9,6,-1,3,-9,-8,-5,-4,-1,10,4,10,-7,-8,4,-4,6],[-6,-4,-10,1,6,6,6,6,9,-9,8,2,2,6,8,5,8,2,6,7,-1,2,10,-3,-8,8,8,-1,-5,-6,10,6,3,-7,3,-1,-9,-2,-10,8,9,3,-5,10,5,2,9,3,-5,-3,6,-3,-8,4,3,-8,-9,2,7,-3,-9,-6,-10,-4,-1,5,2,10,4,10,7,10,6,9,7,6,4,6,-2,1,9,9,-4,1,-7,7,-6,-10,-10,-8,9,-3,-9,-9,1,-4,-3,-4,-6,-7,6,6,3,-8,5,10,-3,8,-5,-3,-4,9,-2,6,-7,-10,7,7,-2,-4,3,2,8,6,-7,-2,-5,-10,-3,4,1,5,10,9,8,-8,7,9,-1,1,-5,1,-5,9,-9,-1,9,-10,9,10,3,10,-9,9,5,8,-4,-10,-1,-10,3,3,-7,-8,4,-6,7,9,7,8,10,2,6,-5,-2,-1,6,7,-7,-10,5,10,-3,10,8,4,3,-2,-7,-7,-1,3,2,-1,-5,2,8,-3,-2,3,-10,-8,10,-3,-6,-7,1,-2,-10,-4,5,-8,-9,-4,-6,2],[1,-1,9,-9,8,-2,5,-2,7,3,-3,5,-2,4,5,3,6,-8,-10,10,4,-5,-5,6,-4,-6,-10,8,7,9,7,-9,-6,10,3,-1,1,7,-4,10,2,4,6,-3,5,-6,-3,-9,-9,4,8,-10,-3,7,-10,5,4,5,5,-4,9,5,4,-1,-3,-8,10,2,-4,1,9,-7,7,-4,9,5,7,-8,-5,5,-3,1,-10,5,3,10,-1,-6,9,5,9,4,1,8,-2,-4,-5,-8,-7,10,8,3,-7,2,-10,-3,-4,-6,2,10,8,-1,-8,-1,-2,4,-1,1,-9,-3,7,-9,-5,-7,10,1,1,4,-2,2,-6,-4,-7,-4,-8,-5,-4,-8,-1,8,-4,3,2,3,-2,8,5,-4,8,9,8,-3,-2,1,-9,7,9,-7,7,3,-8,9,4,8,-3,8,-4,-4,-3,10,-6,-3,8,6,-3,7,9,-7,-1,-4,1,-8,2,-1,-8,9,9,1,-4,-5,5,8,-9,-6,9,9,-2,7,10,1,1,4,-1,-7,1,4,5,-7,-5,7,4,4,-4,10,-10,-1],[-10,-1,1,8,2,-5,3,1,8,-4,5,-8,10,2,10,1,2,3,-1,-5,-4,-10,-6,-7,-1,7,-8,5,-5,-9,4,-7,1,-10,-4,3,-7,4,-4,-8,-1,-10,-1,8,6,1,5,-4,9,-9,1,10,5,-3,-5,5,-7,-7,-2,6,-2,5,6,-6,-7,7,-8,-6,-1,3,10,-3,1,-7,5,-10,-2,-6,8,3,-6,-3,-7,7,-8,3,-8,-6,6,-3,-7,-8,2,7,-6,5,-1,6,9,-6,-4,6,-7,3,6,-2,9,-3,-4,2,3,9,8,-3,-1,-4,10,-8,-4,8,-7,4,10,8,10,-3,-7,-8,-10,-2,10,7,-7,4,-6,-1,3,-10,5,-9,5,-9,-8,7,-5,-10,-6,2,-4,7,9,2,5,6,-7,6,-1,-6,9,-7,-6,-7,4,8,-8,-7,-4,8,10,-9,1,2,-10,10,-6,2,-4,4,10,7,8,-4,4,2,-8,-4,8,-2,6,6,7,-2,10,-10,-8,10,-10,10,6,9,-5,-2,8,-3,-4,-4,8,-5,-2,1,-1,-9,3,6,-1,3]], dtype = "int32")#candidate|3498|(14, 216)|const|int32
bop_3499 = relay.divide(const_3493.astype('float64'), const_3498.astype('float64')) # shape=(14, 216)
output = relay.Tuple([bop_3481,call_3491,var_3492,bop_3499,])
output2 = relay.Tuple([bop_3481,call_3494,var_3492,bop_3499,])
func_3506 = relay.Function([var_3480,var_3492,], output)
mod['func_3506'] = func_3506
mod = relay.transform.InferType()(mod)
mutated_mod['func_3506'] = func_3506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3506_call = mutated_mod.get_global_var('func_3506')
var_3508 = relay.var("var_3508", dtype = "float32", shape = (13, 8, 11))#candidate|3508|(13, 8, 11)|var|float32
var_3509 = relay.var("var_3509", dtype = "float32", shape = (1, 108))#candidate|3509|(1, 108)|var|float32
call_3507 = func_3506_call(var_3508,var_3509,)
output = call_3507
func_3510 = relay.Function([var_3508,var_3509,], output)
mutated_mod['func_3510'] = func_3510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3543 = relay.var("var_3543", dtype = "bool", shape = (10, 13, 12))#candidate|3543|(10, 13, 12)|var|bool
var_3544 = relay.var("var_3544", dtype = "bool", shape = (10, 13, 12))#candidate|3544|(10, 13, 12)|var|bool
bop_3545 = relay.logical_and(var_3543.astype('bool'), relay.reshape(var_3544.astype('bool'), relay.shape_of(var_3543))) # shape=(10, 13, 12)
output = relay.Tuple([bop_3545,])
output2 = relay.Tuple([bop_3545,])
func_3552 = relay.Function([var_3543,var_3544,], output)
mod['func_3552'] = func_3552
mod = relay.transform.InferType()(mod)
mutated_mod['func_3552'] = func_3552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3552_call = mutated_mod.get_global_var('func_3552')
var_3554 = relay.var("var_3554", dtype = "bool", shape = (10, 13, 12))#candidate|3554|(10, 13, 12)|var|bool
var_3555 = relay.var("var_3555", dtype = "bool", shape = (10, 13, 12))#candidate|3555|(10, 13, 12)|var|bool
call_3553 = func_3552_call(var_3554,var_3555,)
output = call_3553
func_3556 = relay.Function([var_3554,var_3555,], output)
mutated_mod['func_3556'] = func_3556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3817 = relay.var("var_3817", dtype = "float64", shape = (16, 7, 7))#candidate|3817|(16, 7, 7)|var|float64
uop_3818 = relay.log2(var_3817.astype('float64')) # shape=(16, 7, 7)
func_1230_call = mod.get_global_var('func_1230')
func_1233_call = mutated_mod.get_global_var('func_1233')
var_3844 = relay.var("var_3844", dtype = "int32", shape = (1, 216))#candidate|3844|(1, 216)|var|int32
call_3843 = func_1230_call(relay.reshape(var_3844.astype('int32'), [3, 9, 8]), relay.reshape(var_3844.astype('int32'), [3, 9, 8]), )
call_3845 = func_1230_call(relay.reshape(var_3844.astype('int32'), [3, 9, 8]), relay.reshape(var_3844.astype('int32'), [3, 9, 8]), )
uop_3856 = relay.acos(uop_3818.astype('float32')) # shape=(16, 7, 7)
bop_3862 = relay.power(uop_3818.astype('float64'), relay.reshape(uop_3856.astype('float64'), relay.shape_of(uop_3818))) # shape=(16, 7, 7)
func_1052_call = mod.get_global_var('func_1052')
func_1056_call = mutated_mod.get_global_var('func_1056')
var_3874 = relay.var("var_3874", dtype = "int8", shape = (48, 8))#candidate|3874|(48, 8)|var|int8
const_3875 = relay.const([5.784592,6.727607,-0.703563,0.499367,8.335271,-0.049254,2.645395,-4.456511,-7.545292,-7.398046,1.177459,5.012131,3.571702,4.169481,-4.223302,-8.146819,-1.797330,-5.814015,-3.053959,-3.809425,-1.366034,0.959748,-3.792920,3.793417,9.813693,1.543390,-7.343133,-8.225472,-0.375524,-6.453035,-8.747651,-1.534399,-0.054278,5.745151,-4.230302,-3.016377,8.162738,6.042701,2.534620,-8.323980,-2.234536,-4.390940,-8.246958,-0.487565,-5.557031,9.707669,5.746646,9.184738,-7.521641,-9.510119,-6.252350,3.607068,9.879865,4.933673,1.459844,2.824100,-3.273353,-0.844771,-7.203320,3.248820,-6.671421,-0.701015,2.635208,1.544327,-5.932797,-1.625969,8.652808,-3.326428,-6.849831,9.688448,7.086548,1.070435,-7.380332,-1.198721,-9.242877,-9.004466,-6.270222,1.332786,-4.379385,0.738038,-0.060908,-2.840999,-3.993042,-4.174422,-6.032955,-5.517846,4.349755,2.225186,-7.418344,-2.864874,-4.667201,2.488435,5.550098,-7.742430,3.549191,1.868814,3.089738,4.171751,-5.885872,8.863309,-7.557413,4.165495,1.892908,7.118466,-4.646481,3.786489,-9.504826,-8.792759,8.479397,-5.672871,-1.366414,-0.250448,8.850922,4.812546,-1.811854,-7.574509,9.441885,-0.668597,1.092919,-5.864359,0.579904,-2.092673,-6.035359,-1.091873,9.965709,-1.430296,-1.042783,8.213849,5.547464,7.959716,7.069958,-1.507528,3.346059,-7.212101,-2.326877,1.235428,-8.228119,-0.043215,-0.856916,-6.870437,8.998167,2.877077,5.299594,6.168131,-1.937200,-6.127554,-5.707451,-3.353337,8.448288,-1.430557,2.165874,-6.367766,7.173123,-6.468592,3.243611,1.417047,3.655612,-5.808254,-6.537861,1.454585,-1.046491,-7.138822,-5.146619,6.884179,1.982957,-2.091135,6.866095,-6.891658,9.427385,-5.465004,6.815980,5.949842,-8.645040,-3.540804,2.289075,3.152346,3.155737,-2.566701,-7.331168,-2.192158,-9.280879,-3.087932,4.050410,-8.766332,1.690790,6.601621,8.014511,-8.795988,-0.665234,-7.959401,-5.179286,1.962346,4.058617,-5.112729,5.253605,-5.707121,1.303838,3.211660,1.642705,9.213784,-3.239229,-1.803494,6.496166,-2.585752,5.332716,0.606556,-2.992131,3.155736,-9.447093,-2.101509,-9.218738,8.746897,1.095897,-5.352766,2.261659,-7.557553,-7.426682,2.288823,1.075120,3.671346,-7.925261,-3.300138,-3.372551,-4.485022,4.864898,-1.466493,9.210491,9.715197,4.735234,-9.170257,6.279315,-4.596499,8.673583,8.906609,9.127790,4.843198,4.909857,1.752211,9.206769,5.437559,-5.285558,9.608325,5.428874,-9.452161,-8.203496,0.408085,6.389449,-3.149854,5.661256,0.986588,-4.813978,-7.912507,5.943713,7.810861,-9.254207,5.174876,2.937232,-4.624415,-0.212026,2.630640,7.235283,-4.629601,-4.965557,1.246009,5.624310,2.126208,0.458563,9.715163,0.102792,-0.139120,3.997387,-8.751797,-9.439388,-5.602124,4.938585,4.854876,-6.956252,-2.507387,-5.618883,5.755128,-3.591510,-8.956683,-6.573018,-8.693464,-7.871997,2.193085,5.161893,-8.042660,3.493692,-8.662105,-8.041737,7.751488,1.905103,-5.320428,-1.100346,6.415351,-0.905430,-3.208957,-0.223965,-5.842969,0.270387,-8.982031,1.139625,-3.080632,0.624376,2.035523,6.352122,0.942315,-0.793111,-9.913958,3.906999,-0.481029,3.095020,-7.928020,3.032424,4.837202,6.404918,1.273434,-7.725382,0.563892,-4.484398,-5.336299,7.601484,2.171470,3.047841,-6.662039,6.142106,-1.521231,-3.333363,-5.756686,2.269635,-7.047302,-1.620841,3.171199,-6.929386,-7.805290,1.665005,-6.653423,-1.866069,6.613421,9.014192,-9.274871,-9.491726,-4.378812,-8.328401,-7.604543,-6.403769,-8.796926,0.496215,7.557666,-1.352484,-8.177222,-6.108954,-5.550315,-3.225573,-0.918738,-7.244118,9.853465,3.838649,1.511145,-2.821040,0.241561,-9.937536,8.821627,9.187521,4.900072,0.203519,-2.034523,-2.429563,-2.419862,-3.418489,8.306267,-2.107854,8.957561,-6.603084,6.870874,-2.052156,3.958857,-4.926382,-9.021432,5.581706,8.361394,-6.527005,3.952830,-2.733191,4.750453,-3.353853,5.337743,6.863516,3.996445,0.755372,8.409407,5.782513,7.071483,8.519762,-1.430797,9.070056,5.468571,1.420815,3.757597,2.551782,-0.889974,8.974232,-7.256145,-2.516118,-4.224207,-6.313667,6.928923,-0.722174,8.169275,0.294287,-3.385830,9.136977,-6.161758,-1.555387,-5.865552,-3.204964,-9.130169,9.704961,9.833717,-0.791759,6.099604,0.673929,-6.556016,2.059160,9.837213,5.195478,-2.165679,-0.070624,8.415998,-7.078939,-4.956705,-0.070056,-9.899720,4.880541,5.496930,3.348907,-4.209587,-7.788588,-9.570640,-0.390677,-7.529799,9.403299,-9.943146,5.805599,6.584406,3.732607,-7.589375,-6.529790,1.641524,-8.892815,2.561482,-5.289221,-6.413036,-2.059541,-7.573142,1.244357,3.672661,8.783159,-3.654832,6.352223,-0.862802,7.907667,3.487141,7.220215,6.951130,9.808271,1.872669,-7.309653,-6.949991,-5.603140,8.822109,3.305245,0.589351,-4.096601,4.175739,2.909961,-3.870261,2.585549,-6.897994,7.722646,-8.935978,-1.863125,-8.606837,-3.824904,4.625888,2.336543,-0.161119,5.115439,-9.442803,1.329643,-7.218677,1.427530,2.149875,-9.607645,-3.338237,0.482798,-6.276942,-1.107418,-5.798356,-1.228926,-1.883552,-8.000428,-1.465062,-7.088484,9.354814,3.918429,-5.600186,-4.856528,6.301347,3.107160,-9.719194,-0.055945,-7.671756,2.341463,6.307907,-1.896030,-3.306057,-3.072471,9.531630,6.000275,-9.350502,-2.992173,7.289594,-6.227642,2.092496,-3.876208,-4.959808,-2.607041,-4.374077,0.864487,7.246291,2.123926,-4.905801,3.524724,-9.197894,-2.325088,5.133760,1.537105,-8.693339,2.850686,2.306816,9.199353,-7.341501,-5.496081,-7.549947,1.688712,6.548097,5.189825,-2.160122,2.974275,1.201131,-6.010142,-8.574165,4.851732,2.282375,-3.719465,1.863275,5.135337,-3.069847,-1.525725,6.843433,-2.587260,-7.459408,6.405808,-8.161898,4.008488,-1.044943,-2.153336,4.779280,1.612389,-2.559865,9.395446,-2.724192,-7.081039,-4.892466,5.361722,-1.365491,-6.578165,4.497459,2.181183,8.439110,7.429685,-4.504043,-2.580115,3.990918,4.535323,-6.176220,3.495618,5.676737,5.831286,-5.322178,2.674524,-7.761694,8.784575,4.638783,-2.307902,3.700440,8.386130,6.856613,5.504061,4.688205,4.513096,7.896322,-0.556234,-0.422997,-2.761856,-4.014317,3.139346,-2.666312,-4.591219,1.462455,-0.147212,-6.050019,6.066126,5.242748,7.601356,9.530396,-4.049685,4.033088,2.459807,-3.722751,6.053904,1.012591,-7.719554,2.660396,-4.603732,4.309339,-1.903772,-8.989594,9.320533,-4.841152,-2.265306,3.555961,7.991650,-8.554103,-3.986309,-7.328666,0.341093,-4.453300,3.065452,2.442710,4.240186,-4.137407,-8.800404,2.854993,4.372801,-1.498149,3.752107,-5.515440,0.656734,8.500496,-5.024494,2.597677,9.151461,3.933285,9.148132,-4.859914,3.499159,-9.080185,8.052906,9.500841,-5.264147,2.588007,-5.794784,-4.479043,-8.999119,7.874566,0.026660,-7.475919,0.932908,-6.834626,-1.856091,2.506577,1.544271,-6.223648,4.420699,5.681314,0.693595,0.011619,8.623325,0.853884,0.528121,-5.273666,3.116277,3.333812,-8.130038,-8.301036,2.604194,-1.203623,8.518530,6.299946,-5.758364,-4.052883,3.905234,0.064173,0.631674,-6.416027,-9.281493,-2.898139,-5.748305,-6.406436,3.818141,6.185340,-4.061202,1.912701,-0.411738,-2.822908,-3.816736,7.473687,-0.438385,-0.510890,2.610277,-9.090439,5.870832,-2.924834,-0.409445,-8.808279,9.063645,-4.179000,9.131906,0.991179,6.534409,-5.887113,0.708481,3.661363,6.956157,4.161106,0.729338,-2.534428,-2.676924,-2.135486,2.818595,-0.676305,-3.723894,-1.756436,1.149810,-5.777601,9.816864,-9.003626,-5.023744,-5.312801,5.844954,-6.078309,3.251879,4.043557,8.569126,-4.407943,-2.479730,3.928888,-5.048456,-3.187279,-9.146029,-2.302187,4.060729,-0.717720,-4.000812,1.667568,-0.034434,-1.049752,-1.736951,-5.830497,7.145762,-0.448852,8.901747,4.181750,2.222425,0.286681,-6.880049,8.067611,-8.321061,4.962320,-6.262550,-7.306738,-0.348264,-8.860239,-6.005364,6.187893,-5.714316,1.083836,1.972431,5.070519,-9.669399,-2.065944,-2.639628,6.890988,4.362486,4.728445,3.700523,6.460957,7.469214,8.121430,-3.341645,2.838249,-7.600071,-1.308885,1.622296,1.877124,7.089880,-6.538050,9.923691,-4.840224,-8.303711,7.036666,-9.113642,-7.596100,-9.714483,7.501783,-2.653374,3.314084,-9.294989,-4.668115,0.692082,1.457780,-8.353327,-4.968365,8.607200,-9.002444,5.796659,-7.074533,-5.107755,2.418138,-7.524297,1.402209,8.173077,3.101951,7.719436,-8.926186,2.418149,2.022105,7.712205,-5.200760,-1.601477,7.093102,-5.885964,5.388365,-2.068501,3.900757,-9.991929,4.159327], dtype = "float32")#candidate|3875|(840,)|const|float32
call_3873 = relay.TupleGetItem(func_1052_call(relay.reshape(var_3874.astype('int8'), [4, 12, 8]), relay.reshape(var_3874.astype('int8'), [4, 12, 8]), relay.reshape(const_3875.astype('float32'), [840,]), ), 2)
call_3876 = relay.TupleGetItem(func_1056_call(relay.reshape(var_3874.astype('int8'), [4, 12, 8]), relay.reshape(var_3874.astype('int8'), [4, 12, 8]), relay.reshape(const_3875.astype('float32'), [840,]), ), 2)
uop_3880 = relay.sigmoid(bop_3862.astype('float64')) # shape=(16, 7, 7)
func_2423_call = mod.get_global_var('func_2423')
func_2427_call = mutated_mod.get_global_var('func_2427')
const_3895 = relay.const([-1,-4,-4,4,5,10,-7,-4,3,2,-10,-7,1,-6,10,-7,-6,9,9,9,5,3,2,-10,7,-7,1,7,10,2,-9,-10,9,5,5,3,-5,-3,-6,-2,-7,8,-4,1,-8,-3,1,10,-5,9,8,9,10,10,6,-9,-2,-10,-3,10,3,6,1,3,2,-5,6,6,9,-2,-8,8,7,6,-1,1,4,-10,-5,10,-9,-8,2,-8,9,-5,-10,-7,-3,9,3,-9,-7,-9,-4,-10,5,-7,-1,5,-7,-7,3,6,-8,9,-4,8,9,-4,8,7,3,8,1,3,6,-6,7,3,6,-7,-2,4,4,-6,3,4,9,9,7,-7,4,-10,-5,6,-8,-2,10,4,3,4,5,-1,2,-4,1,-2,3,4,8,9,-5,-6,8,-8,-2,-6,-2,9,6,5,-5,2,2,7,-8,-5,9,9,-3,-8,-1,2,-3,9,6,-7,-4,10,7,-5,-6,-7,4,-2,-2,4,5,7,8,-7,4,5,5,2,-5,-8,-7,-5,10,2,8,-5,1,-10,2,3,-5,1,-6,-3,-10,-3,5,-2,7,-7,9,5,6,10,5,3,4,10,-7,-2,-4,-5,-4,2,-8,-4,2,10,-7,7,6,1,-4,-9,-6,7,7,-6,9,-2,-8,-6,8,-2,6,8,-9,-1,4,3,4,-9,-2,-4,5,-7,-4,7,9,-10,7,9,9,-9,2,4,-2,7,-9,2,-6,-9,4,-6,-3,9,6,-8,-8,9,-10,3,5,-5,-10,-8,-8,1,-3,6,-5,8,3,-6,6,10,-8,10,-5,-8,6,5,3,7,-5,3,-7,9,10,2,1,-4,7,4,2,10,10,-3,1,10,-4,4,-6,3,10,-2,7,2,1,-7,8,3,1,10,10,8,2,5,-4,-2,4,-5,-1,3,3,-6,-7,10,7,-10,1,-10,9,-1,-6,7,-10,-10,-1,4,3,6,1,8,7,6,7,3,5,-8,8,2,-10,-8,5,5,-1,10,9,9,-7,6,-3,9,-2,9,-6,7,-1,-9,4,-6,6,-7,3,3,-3,5,7,-3,3,-10,-5,7,1,-4,-9,-1,4,10,-6,-7,-3,2,-8,-10,9,2,-6,-9,2,-3,2,3,-4,3,-9,6,5,-3,-6,-6,4,8,6,8,-1,-8,-7,-8,6,-2,6,-9,9,-5,-5,-8,10,9,-3,3,-10,-6,-2,1,-10,4,-10,-8,-5,1,-6,10,-7,2,-8,6,6,8,-8,7,-9,-3,-4,-7,6,2,9,7,-1,-9,-4,8,7,-9,4,-5,6,1,1,-10,7,6,-4,-3,-4,5,-7,9,10,1,1,-6,-3,9,-4,-8,1,-7,9,-1,4,10,-10,7,4,-1,-3,-1,3,-2,-1,7,6,-8,-8,5,-4,5,-3,-1,2,3,-10,-4,4,-1,6,-6,6,7,-2,7,-9,-9,7,-1,-5,-6,7,-9,8,8,10,6,10,1,6,-10,-10,-9,-1,6,3,3,2,4,4,3,8,1,3,-3,-9,7,-4,-6,7,2,-4,3,-7,-7,9,-6,-1,8,-10,-6,6,6,-10,-6,4,8,-5,5,7,4,2,-4,8,9,-5,-4,-6,10,5,-4,3,7,2,1,-4,5,4,8,-3,7,2,6,4,-6,1,-7,2,2,8,1,-8,-7,-8,-4,2,7,-5,-1,-9,9,7,-4,-2,10,10,9,10,2,-10,6,-8,-7,-8,-3,7,6,-7,-2,-7,-8,-8,6,-2,-5,-3,-6,6,5,4,-10,7,7,-4,-3,-5,-7,8,10,-2,-4,-8,7,6,7,-9,2,-2,-1,2,-7,-5,-10,10,4,-7,-8,-1,-10,-8,-10,5,-2,-3,-3,-7,1,-5,-6,1,8,10,-4,2,9,-10,-6,3,1,-2,-10,-3,2,2,-6,8,4,9,-1,1,-10,1,5,3,-1,-10,-4,3,-4,4,1,-3,9,10,-4,2,-3,9,6,-6,9,-7,9,-8,7,3,5,-1,-8,6,4,-6,-10,5,-7,2,-6,-10,3,8,-2,-7,4,3,1,-4,7,1,4,-3,6,-8,8,-7,-8,10,5,8,3,1,-9,8,4,-3,-7,1,4,8,-9,-3,-10,-6,-8,4,6,-7,10,-10,7,5,10,9,-5,-7,2,1,3,-6,-4,6,6,4,1,2,-7,-3,-3,2,1,-4,9,6,-3,-5,-3,-6,4,-6,-3,-4,7,1,4,-2,3,8,1,6,-8,-2,1,1,7,-2,-8,-5,6,7,-7,6,4,4,8,1,8,-7,1,-4,-7,-1,5,-2,-1,-2,7,-10,2,8,1,-5,1,8,2,-2,-10,-6,10,5,-6,-10,5,-5,2,-6,-1,4,5,-5,5,7,-2,-10,10,4,2,-8,1,-3,-7,8,2,-1,3,5,7,3,7,-4,1,-5,-1,2,-8,-7,-4,4,-4,-2,-5,4,10,-3,-5,6,-4,-8,3,7,7,-6,-10,6,7,2,4,4,-5,3,-4,5,9,3,5,3,5,-10,2,-8,3,-1,-5,-3,3,-2,6,-5,1,6,7,8,1,-6,4,-3,3,6,-10,10,-4,10,-8,-4,2,-4,1,2,10,6,3,4,3,6,8,9,-8,1,-4,6,-7,7,-4,10,7,1,5,-6,3,6,-5,5,-3,-1,3,5,8,8,8,-8,-5,-5,-2,1,-10,-9,1,10,10,1,7,-5,-7,-8,10,2,-5,-8,-7,-4,-5,1,7,-9,3,2,7,6,10,-1,-2,-8,9,5,4,-2,-4,-6,-6,-2,7,10,3,10,-2,4,5,2,-7,-1,-8,-9,-9,7,-9,6,-5,2,2,9,-6,-7,-6,-6,-6,3,3,8,6,9,4,-3,-2,5,8,8,-1,-4,4,8,-8,-3,5,-5,5,-8,9,-8,-6,-5,-10,-6,-9,-6,10,-2,8,-1,7,4,10,-2,5,10,-6,-8,1,7,-6,-5,-10,-7,2,-1,-6,2,-9,4,6,-5,-2,-1,9,-5,3,-1,6,-1,-8,9,7,9,-8,10,-1,-8,-10,-8,-9,3,-2,6,4,8,10,-5,1,-5,-9,4,-1,-4,3,1,-2,3,1,-2,7,-7,7,5,8], dtype = "int32")#candidate|3895|(1188,)|const|int32
call_3894 = func_2423_call(relay.reshape(const_3895.astype('int32'), [12, 11, 9]), relay.reshape(const_3895.astype('int32'), [12, 11, 9]), )
call_3896 = func_2423_call(relay.reshape(const_3895.astype('int32'), [12, 11, 9]), relay.reshape(const_3895.astype('int32'), [12, 11, 9]), )
func_1639_call = mod.get_global_var('func_1639')
func_1645_call = mutated_mod.get_global_var('func_1645')
var_3900 = relay.var("var_3900", dtype = "bool", shape = (936,))#candidate|3900|(936,)|var|bool
call_3899 = relay.TupleGetItem(func_1639_call(relay.reshape(var_3874.astype('int8'), [384,]), relay.reshape(call_3873.astype('float32'), [6, 140]), relay.reshape(call_3843.astype('int16'), [216,]), relay.reshape(var_3900.astype('bool'), [936,]), ), 4)
call_3901 = relay.TupleGetItem(func_1645_call(relay.reshape(var_3874.astype('int8'), [384,]), relay.reshape(call_3873.astype('float32'), [6, 140]), relay.reshape(call_3843.astype('int16'), [216,]), relay.reshape(var_3900.astype('bool'), [936,]), ), 4)
bop_3909 = relay.bitwise_xor(uop_3880.astype('int64'), relay.reshape(uop_3818.astype('int64'), relay.shape_of(uop_3880))) # shape=(16, 7, 7)
output = relay.Tuple([call_3843,var_3844,call_3873,var_3874,const_3875,call_3894,const_3895,call_3899,var_3900,bop_3909,])
output2 = relay.Tuple([call_3845,var_3844,call_3876,var_3874,const_3875,call_3896,const_3895,call_3901,var_3900,bop_3909,])
func_3915 = relay.Function([var_3817,var_3844,var_3874,var_3900,], output)
mod['func_3915'] = func_3915
mod = relay.transform.InferType()(mod)
mutated_mod['func_3915'] = func_3915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3915_call = mutated_mod.get_global_var('func_3915')
var_3917 = relay.var("var_3917", dtype = "float64", shape = (16, 7, 7))#candidate|3917|(16, 7, 7)|var|float64
var_3918 = relay.var("var_3918", dtype = "int32", shape = (1, 216))#candidate|3918|(1, 216)|var|int32
var_3919 = relay.var("var_3919", dtype = "int8", shape = (48, 8))#candidate|3919|(48, 8)|var|int8
var_3920 = relay.var("var_3920", dtype = "bool", shape = (936,))#candidate|3920|(936,)|var|bool
call_3916 = func_3915_call(var_3917,var_3918,var_3919,var_3920,)
output = call_3916
func_3921 = relay.Function([var_3917,var_3918,var_3919,var_3920,], output)
mutated_mod['func_3921'] = func_3921
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4142 = relay.var("var_4142", dtype = "float64", shape = (2, 7, 8))#candidate|4142|(2, 7, 8)|var|float64
uop_4143 = relay.cosh(var_4142.astype('float64')) # shape=(2, 7, 8)
func_2971_call = mod.get_global_var('func_2971')
func_2975_call = mutated_mod.get_global_var('func_2975')
const_4152 = relay.const([-5,-4,-5,3,6,6,6,-8,10,2,-7,9,-3,9,8,-2,6,-3,6,10,6,5,-6,4,4,-3,-1,1,5,-4,7,-7,-5,-5,-4,2,-10,1,7,-1,-1,4,-1,8,6,-8,-1,5,5,4,4,1,-2,-2,-8,-1,-9,5,-9,-5,-4,-9,2,-10,3,-8,9,-5,-2,9,1,-2,-3,2,7,-1,4,7,-4,-3,-8,-6,-10,7,7,5,4,-10,-2,10,-2,2,1,-2,-4,-1,-5,3,-7,1,-4,4,4,6,-8,5,9,8,7,-2,4,-7,-10,6,9,-1,-4,3,-1,-3,-7,-1,-8,-6,-8,7,-4,10,-7,1,-6,10,-7,9,4,-7,2,9,6,6,8,5,-10,-7,-1,-2,1,6,-7,-6,-7,-5,-4,1,-4,3,10,5,2,8,8,-10,-4,-7,-3,3,9,-9,4,10,-8,-9,2,10,-6,7,8,3,6,-2,-4,-9,5,-5,-9,-7,9,-5,2,4,4,3,3,-4,7,-9,3,5,7,6,-4,-5,3,-3,7,-4,-3,5,-5,4,-6,-3,1,6,-6,4,-9,3,8,8,7,8,-1,5,-1,7,4,-6,-6,2,7,3,4,-8,4,-10,10,-3,9,6,-7,-9,3,-5,-8,-2,-5,-10,3,-3,-6,9,1,8,10,-1,-8,-9,6,1,-2,-10,10,-6,-10,1,2,-1,-2,4,-4,10,-5,-5,4,4,9,-1,-4,3,7,-9,3,-3,-10,6,2,-7,6,10,8,-4,-10,7,3,7,3,1,5,-1,-1,-8,-5,-1,-7,-1,-7,-3,1,10,-1,5,4,-9,2,-3,-1,7,7,8,-1,2,-3,4], dtype = "int8")#candidate|4152|(324,)|const|int8
call_4151 = relay.TupleGetItem(func_2971_call(relay.reshape(const_4152.astype('int8'), [4, 9, 9]), relay.reshape(const_4152.astype('int8'), [4, 9, 9]), ), 0)
call_4153 = relay.TupleGetItem(func_2975_call(relay.reshape(const_4152.astype('int8'), [4, 9, 9]), relay.reshape(const_4152.astype('int8'), [4, 9, 9]), ), 0)
const_4157 = relay.const([[[7.933369,3.500894,2.788053,-0.984408,6.306698,-1.192651,-3.480127,-5.846439],[-6.482337,6.607272,7.402149,6.259144,4.482139,-7.488859,5.747283,-7.284682],[0.422945,-8.258380,5.183800,-4.220265,-9.143576,8.098194,-1.046240,4.809678],[4.699818,-7.183620,9.372437,-6.601230,-7.530037,-0.602343,0.893163,-4.360077],[-4.157876,4.747283,7.087674,2.474215,-0.264555,-4.758583,-9.993604,1.546465],[-8.899274,-6.611736,-0.959980,-3.415636,0.725749,-7.020302,7.039381,2.504949],[8.576950,7.000979,3.063348,1.678374,5.813842,-5.663517,9.523011,8.294814]],[[4.248710,8.765219,8.182702,-7.573465,-0.155402,8.709731,3.671642,-5.131393],[3.155811,2.962969,-7.588192,-1.901377,-2.004388,6.698080,2.552867,2.570467],[-5.654144,-4.121080,-0.056553,-3.484297,8.404617,-7.850365,0.093941,-4.411043],[-0.246800,9.275377,-8.348070,-3.862858,-9.873052,-8.511769,-8.310490,-7.472147],[-6.697035,-1.415059,7.269644,6.612513,-7.384844,8.217522,-4.818987,-6.399048],[8.647337,8.193932,-3.630296,-6.915701,7.757854,-1.006708,-5.789594,-3.708137],[3.933932,7.743967,-8.764321,1.067002,-9.956169,-9.722655,-9.931203,8.142203]]], dtype = "float64")#candidate|4157|(2, 7, 8)|const|float64
bop_4158 = relay.right_shift(var_4142.astype('int64'), relay.reshape(const_4157.astype('int64'), relay.shape_of(var_4142))) # shape=(2, 7, 8)
uop_4171 = relay.rsqrt(var_4142.astype('float64')) # shape=(2, 7, 8)
func_1286_call = mod.get_global_var('func_1286')
func_1290_call = mutated_mod.get_global_var('func_1290')
const_4194 = relay.const([8,-7,-2,7,-10,10,-8,-5,9,2,1,9,5,-2,-3,1,1,-8,-5,-10,-1,-2,-5,9,10,3,3,9,-4,-4,-6,-2,5,9,-2,4,9,-2,5,-10,7,8,-5,-7,10,8,6,-4,-8,10,1,-3,10,-5,-1,3,8,9,8,2,7,5,-8,6,-3,-5,-10,5,8,-6,4,-8,-1,-8,2,9,10,5,-5,5,7,4,-10,7,6,-6,5,5,-10,-4,-2,2,-9,3,5,-3,10,10,-6,-10,10,-5,2,10,-2,2,9,10,-8,3,-3,-6,4,4,2,-2,-2,9,6,3,6,-4,9,3,6,-3,-2,1,6,6,1,-10,5,-6,1,-9,-7,3,4,5,2,7,6,10,3,-10,3,7,1,1,5,10,10,9,-9,-5,10,-3,-2,-10,10,-1,-10,-3,4,-5,-3,-2,-8,10,-3,8,-7,-2,5,-5,-10,10,-7,-2,-8,-1,-2,5,-5,-9,7,4,2,4,7,-4,8,-8,-8,7,7,-6,-4,-3,5,-5,-1,10,-4,1,-6,8,-1,-10,-9,5,-6,5,4,-6], dtype = "int16")#candidate|4194|(216,)|const|int16
call_4193 = relay.TupleGetItem(func_1286_call(relay.reshape(const_4194.astype('int16'), [6, 4, 9]), relay.reshape(const_4194.astype('int16'), [6, 4, 9]), ), 0)
call_4195 = relay.TupleGetItem(func_1290_call(relay.reshape(const_4194.astype('int16'), [6, 4, 9]), relay.reshape(const_4194.astype('int16'), [6, 4, 9]), ), 0)
func_1052_call = mod.get_global_var('func_1052')
func_1056_call = mutated_mod.get_global_var('func_1056')
const_4202 = relay.const([5,5,-9,3,-3,-2,-1,5,4,7,-3,5,-2,-1,3,-2,1,-8,-6,2,-1,2,-9,10,-7,5,-7,10,-3,-6,-8,5,-10,10,4,-7,6,5,-6,-1,1,3,-6,7,7,-8,-4,4,5,-1,-6,4,-8,9,3,9,6,1,-4,-5,-2,5,5,-1,5,-3,-10,5,5,4,-4,1,-4,5,-3,-8,-3,-2,-4,3,6,-10,-1,6,9,-4,-2,4,-9,3,-9,-8,6,1,4,-7,7,9,-2,-4,5,-5,-4,5,8,-7,1,-9,5,4,3,-10,-9,-10,3,4,-3,7,8,3,1,4,5,-6,-3,-10,2,-7,-6,-5,-1,7,10,3,7,5,-6,-10,10,3,-6,10,-2,2,3,9,8,10,-3,5,7,-7,-7,-7,-5,-2,5,1,-8,7,2,-7,-3,8,8,-5,-3,1,1,9,-10,7,3,-3,2,-4,8,-5,-6,9,8,10,-8,3,9,-7,3,4,-1,8,-1,-10,-2,1,9,4,4,1,5,1,-8,-4,-2,8,9,1,-8,8,5,2,7,-3,9,3,8,1,4,-8,6,-4,-3,5,-5,5,-2,3,-2,2,-10,7,-1,-5,-4,5,-10,6,-5,7,4,7,-9,-7,7,-2,6,-7,8,4,-5,-3,-10,-10,-10,5,1,1,-4,-2,-8,8,-6,1,-6,-7,7,-8,10,4,-9,5,-8,-1,-5,-3,-7,-6,-7,8,-5,-6,6,-9,-6,-6,9,6,-8,-2,-9,-5,-8,-1,8,-10,-4,-5,-2,7,-7,-2,6,6,4,6,-2,2,-2,7,-4,-4,3,1,6,-3,2,-9,-1,4,-4,-9,-1,-8,-5,6,-2,-10,-10,2,10,8,1,2,-4,-9,5,7,-10,1,-2,7,-7,-10,-9,-4,-8,-2,-10,2,9,2,-9,1,6,7,1,1,-2,-7,-5,-9,-1,-5,3,7,-9,7,-10,7,2,-1,7,-1,6,9,8,6,9,2,-9,6,-8,7,-1,3], dtype = "int8")#candidate|4202|(384,)|const|int8
const_4203 = relay.const([[5.295554,-7.915505],[-5.795668,-3.418292],[-2.297905,0.641096],[-1.666855,-0.393853],[7.046106,-8.074499],[-8.493214,1.356183],[-4.304467,9.332432],[-6.260899,-3.460901],[7.750942,1.040466],[-5.722766,-0.646288],[-4.078785,-8.202533],[-3.105198,9.845243],[8.678036,-2.458692],[9.413642,8.204522],[-4.748479,-1.513825],[2.395146,-3.267141],[-2.775289,-6.786158],[0.102670,4.647161],[-7.728152,9.678148],[-8.980272,0.170967],[-5.174128,5.767721],[6.704669,9.215696],[-9.909805,-1.040132],[-4.914827,-3.430488],[-6.721541,3.657986],[3.399230,-9.711512],[-6.162259,-4.844555],[-7.072728,3.678785],[1.646698,-0.370975],[4.615105,-5.889364],[6.054366,0.271731],[4.405889,-3.691421],[-7.549781,9.867845],[7.981958,-2.358049],[2.672873,-6.890300],[-7.830148,-6.817339],[6.554365,-1.497039],[-2.988027,-9.149098],[-1.543204,4.189786],[5.905053,2.894081],[2.878726,2.251226],[-1.500103,0.191321],[-1.151091,8.333685],[0.281820,-6.876519],[-9.708868,1.452245],[5.145818,8.885860],[7.026130,4.494302],[-7.200863,-5.759753],[3.633245,-1.159568],[9.424583,-1.215608],[-1.317043,-8.908882],[7.552953,-4.430454],[-5.456505,8.287949],[4.374971,8.534192],[3.772770,0.502911],[8.165542,-0.271638],[7.556999,3.335028],[-4.258224,-3.574346],[4.698702,-1.623661],[8.641028,3.562875],[-1.166379,3.240719],[6.963274,-3.614767],[2.706281,-4.115347],[5.882776,9.399375],[-6.572816,-9.760072],[-0.795889,4.941193],[9.765089,8.640111],[-2.319712,-1.736093],[7.242000,-5.159047],[-7.886932,9.900153],[-4.965730,2.011928],[-0.808891,-6.512929],[3.363084,8.846850],[1.233400,3.859114],[-5.109534,7.176791],[1.937010,5.468152],[2.506317,4.315317],[-8.250543,9.662679],[0.713689,5.826919],[9.903547,-7.251297],[-3.095932,1.593309],[-8.375761,-7.227342],[1.589047,2.084316],[-2.844564,2.035548],[-9.859798,8.361398],[3.627119,6.011597],[1.388303,6.928246],[-2.511713,5.625020],[0.773488,-2.886586],[-6.269662,6.184450],[-5.449056,-9.533757],[5.934844,-2.104954],[0.233943,0.623201],[-1.774310,2.153094],[9.031773,-1.125362],[-0.152815,-4.052800],[-3.829233,2.128524],[4.990111,-5.479551],[6.202341,-8.744038],[-3.993812,-2.265679],[8.808033,5.919736],[-3.078627,6.643876],[9.118300,9.821319],[-2.801907,0.224346],[-3.812083,2.150048],[8.813842,5.134039],[-8.576174,-9.256671],[-9.934212,-8.302036],[-1.910196,5.095866],[-1.536713,-7.474716],[-6.606336,7.041551],[0.035474,-3.302919],[9.229543,2.101081],[1.999128,1.236771],[2.886289,5.233802],[-6.441625,4.989478],[0.494335,3.956426],[4.047029,8.522025],[6.995175,-6.100062],[6.999158,-1.083715],[-7.142681,-0.064402],[-5.989382,-3.783030],[4.609199,6.866603],[1.389524,-1.560742],[1.636038,3.597161],[5.125093,5.849605],[5.199204,0.555175],[-0.587569,-4.056983],[2.669018,-5.468577],[-2.897178,0.122203],[-1.481450,-5.081943],[0.879150,-4.867210],[-1.138643,-0.056416],[-5.217989,5.920433],[1.201464,4.614275],[-8.787637,5.761622],[-8.480393,-3.887176],[-6.417669,-6.362243],[-3.074206,-0.917018],[1.332778,4.399177],[-0.014840,5.970031],[1.923137,4.237795],[3.183597,-2.010218],[-5.224544,2.078661],[5.026271,1.566573],[-3.497650,5.163670],[-2.717796,-1.584544],[-0.197349,-1.251759],[2.915222,-5.287689],[-9.375832,-7.653878],[-5.788908,2.234032],[-3.868287,9.329159],[-7.418694,2.937778],[-3.316741,-2.813298],[-2.803392,-1.470864],[-7.382975,-1.251910],[-1.501972,-5.609446],[-2.722507,-2.681730],[7.817980,8.946711],[-2.009435,5.482612],[5.459956,2.001510],[0.250060,8.179381],[3.239323,8.498693],[-6.641332,0.707750],[-0.010623,2.362466],[-2.769178,7.741362],[6.101005,6.723280],[5.780127,8.959479],[4.230423,-0.925736],[-8.735251,5.861598],[6.604218,4.958041],[-5.245245,-6.761874],[-5.857730,3.667234],[8.721099,-2.350628],[3.783801,-4.241693],[-2.066931,8.069527],[0.885973,1.358619],[8.228516,9.315424],[8.380926,-6.699070],[5.319547,-9.538782],[-5.607506,2.639846],[-8.662443,6.591709],[7.395955,-7.534475],[5.185367,-6.073211],[9.755713,-0.177928],[-6.755997,5.778748],[-0.163640,5.395568],[-6.336124,8.154289],[2.239262,-9.938364],[-1.838227,1.344917],[5.655234,0.028788],[4.817351,6.963575],[6.693115,-2.329810],[8.487755,9.546763],[9.151737,-5.370773],[-7.454831,8.549730],[-7.999232,0.176113],[8.618457,-4.458091],[-8.265027,4.363242],[5.694776,-9.786866],[-0.327422,-5.022818],[-6.586246,2.134466],[-5.621854,0.007922],[1.679482,-6.620765],[-2.789490,-2.980079],[-7.972254,8.105198],[-5.105678,5.389397],[2.935392,7.117026],[-8.872504,-2.593509],[7.422748,-4.358096],[5.133603,8.388482],[-3.425098,-3.590077],[2.193589,-7.916703],[2.664427,6.452224],[-9.253272,-8.643157],[-8.260966,0.312413],[4.959897,-8.532317],[7.605489,9.902751],[-9.952652,9.682029],[-4.876072,-5.773158],[-4.278784,-7.211177],[-4.520674,-8.745978],[-7.258450,-3.063537],[-6.178736,6.168836],[5.202806,-2.188775],[-7.529048,6.873854],[-1.775916,-8.610943],[-1.783033,9.469865],[9.551303,5.234946],[1.808985,6.602917],[-1.830008,-5.395573],[9.008983,-0.255569],[4.388095,-8.747743],[-2.912496,1.324352],[-3.641091,-3.607817],[-3.536260,-7.643664],[2.678548,3.388196],[1.217978,-0.252329],[-0.561292,-0.243828],[-2.857112,6.634507],[1.531638,4.366368],[8.908682,4.623376],[-4.739194,5.703250],[1.210233,6.573414],[9.424935,7.473489],[2.101778,-6.875626],[-4.957973,7.555105],[8.317412,1.578429],[-1.017058,8.243301],[2.589537,-2.980099],[-7.011251,-9.707620],[5.149381,-1.965480],[-5.500240,8.707428],[4.105331,0.634477],[-6.569330,-6.777726],[7.069510,-3.227402],[-8.645815,-2.789381],[-4.354544,-0.945037],[-7.780393,-9.931455],[-2.174015,-6.319291],[-8.575538,-4.245325],[2.204882,-7.215711],[-9.823673,6.088688],[-8.407620,-9.739331],[0.106477,-6.266084],[1.293429,-7.465256],[9.128808,9.348759],[1.099884,-2.619497],[1.624097,4.816770],[-0.442410,-5.468993],[-1.097098,8.879052],[7.719114,-9.094498],[-8.465359,0.207069],[6.666539,8.481508],[-8.726152,-9.396076],[-0.231778,-2.656084],[2.603628,-5.376514],[4.881845,-5.807336],[-3.423454,-4.584386],[6.686209,6.650704],[1.107925,8.346935],[-0.177644,8.150705],[0.575741,5.328038],[-8.178672,1.193412],[7.116773,2.333801],[-8.309242,3.206943],[2.440456,7.566817],[-7.196999,-7.393312],[0.435033,-3.032858],[-5.608760,-3.991190],[2.674660,0.570607],[6.589950,7.156551],[-9.423353,2.350186],[-0.178571,-6.447692],[-5.088222,1.287583],[-7.815567,-1.114715],[9.862029,6.159466],[-9.003294,-6.978259],[5.326855,8.035872],[-8.002204,-3.070680],[-5.639589,-0.017623],[-7.199921,-1.343032],[-6.959837,7.679593],[-6.505597,-4.998517],[-4.505422,2.824071],[3.111247,-9.288881],[-1.409692,-0.523621],[-9.874147,1.371778],[-8.149981,0.989657],[-1.987086,-0.671087],[3.506537,5.787680],[6.843094,-2.081509],[-0.250029,1.556546],[1.224841,-0.194509],[2.864786,-4.586834],[6.496331,-7.882744],[1.100577,-9.087889],[-3.555491,-4.115165],[-4.739002,9.384372],[9.145954,2.619704],[9.880725,-9.312363],[-8.619475,-8.214248],[8.354458,2.534202],[6.633104,-6.444154],[-0.724315,-9.992742],[8.777780,-4.460284],[5.670071,-6.933835],[2.838928,-3.616390],[-6.861940,0.783575],[9.918495,-9.126701],[5.223875,-7.363379],[-7.928172,8.165713],[3.518955,4.062632],[4.534995,0.905466],[8.425885,0.301288],[0.245486,0.121330],[-6.019503,7.016170],[9.833876,-4.822736],[3.741767,1.224604],[-8.551649,-5.307548],[-2.438537,-4.029268],[-6.074387,-5.480087],[5.647094,-7.461717],[3.823342,-7.351226],[0.411978,-1.933815],[-5.114220,5.150888],[2.551972,0.593039],[7.595163,5.976409],[5.298781,3.334008],[6.448427,9.357976],[-9.987186,-0.496321],[3.424605,2.094944],[-5.518199,2.598867],[2.615655,-7.974443],[9.427291,-8.466722],[-1.797357,7.335576],[3.187346,6.231409],[-8.741096,-7.040926],[-8.173778,0.565861],[5.791103,-2.599806],[-3.220426,-5.741714],[-7.902483,-9.485219],[-3.279109,8.645160],[-9.374438,-9.396140],[5.980521,6.191916],[-5.107574,-9.917191],[-8.639549,0.130372],[1.216475,7.032816],[9.594109,7.466478],[-5.953749,-2.871717],[-7.490553,6.423266],[-4.111234,-4.622614],[4.802649,4.307984],[7.461707,2.443420],[7.357393,-8.562508],[-8.146197,-5.539132],[9.302471,-5.052440],[2.031197,6.287812],[-9.746457,8.318167],[-7.477082,-0.096179],[9.246892,-0.377794],[-9.392128,-2.665249],[-5.069476,-5.628586],[-6.748244,-8.061390],[-4.859953,4.704186],[5.084607,4.930515],[-8.947441,-2.818396],[-6.003994,-9.983914],[9.950273,8.470546],[-8.664769,8.837342],[-3.488770,-4.004543],[5.424287,-7.154092],[0.319153,4.182707],[-1.948778,-8.736121],[5.050973,-3.613782],[5.206371,6.392897],[1.618107,-5.617257],[-9.386825,-5.236601],[8.481259,3.984620],[9.862462,-1.705740],[-4.455041,-5.756570],[-3.556880,8.768334],[5.131910,-9.588823],[-5.790131,9.652865],[-5.082524,-8.125990],[-7.237906,1.172687],[3.788544,-0.899738],[-1.516012,4.618191],[-5.840452,-3.738048],[-1.874389,8.598260],[6.665672,-8.140225],[8.410442,8.894174],[-1.804627,1.407807],[-4.229632,-2.654918],[4.619546,-9.956513],[-9.034084,-3.686479],[4.037843,0.976616],[-2.024690,-2.098052],[-7.696175,-3.651503],[-4.944418,6.849386]], dtype = "float32")#candidate|4203|(420, 2)|const|float32
call_4201 = relay.TupleGetItem(func_1052_call(relay.reshape(const_4202.astype('int8'), [4, 12, 8]), relay.reshape(const_4202.astype('int8'), [4, 12, 8]), relay.reshape(const_4203.astype('float32'), [840,]), ), 2)
call_4204 = relay.TupleGetItem(func_1056_call(relay.reshape(const_4202.astype('int8'), [4, 12, 8]), relay.reshape(const_4202.astype('int8'), [4, 12, 8]), relay.reshape(const_4203.astype('float32'), [840,]), ), 2)
var_4208 = relay.var("var_4208", dtype = "int64", shape = (2, 7, 8))#candidate|4208|(2, 7, 8)|var|int64
bop_4209 = relay.less_equal(bop_4158.astype('bool'), relay.reshape(var_4208.astype('bool'), relay.shape_of(bop_4158))) # shape=(2, 7, 8)
func_2423_call = mod.get_global_var('func_2423')
func_2427_call = mutated_mod.get_global_var('func_2427')
var_4223 = relay.var("var_4223", dtype = "int32", shape = (1188,))#candidate|4223|(1188,)|var|int32
call_4222 = func_2423_call(relay.reshape(var_4223.astype('int32'), [12, 11, 9]), relay.reshape(var_4223.astype('int32'), [12, 11, 9]), )
call_4224 = func_2423_call(relay.reshape(var_4223.astype('int32'), [12, 11, 9]), relay.reshape(var_4223.astype('int32'), [12, 11, 9]), )
func_3552_call = mod.get_global_var('func_3552')
func_3556_call = mutated_mod.get_global_var('func_3556')
var_4228 = relay.var("var_4228", dtype = "bool", shape = (780, 2))#candidate|4228|(780, 2)|var|bool
call_4227 = relay.TupleGetItem(func_3552_call(relay.reshape(var_4228.astype('bool'), [10, 13, 12]), relay.reshape(var_4228.astype('bool'), [10, 13, 12]), ), 0)
call_4229 = relay.TupleGetItem(func_3556_call(relay.reshape(var_4228.astype('bool'), [10, 13, 12]), relay.reshape(var_4228.astype('bool'), [10, 13, 12]), ), 0)
func_2577_call = mod.get_global_var('func_2577')
func_2581_call = mutated_mod.get_global_var('func_2581')
const_4258 = relay.const([-0.574330,6.164407,8.441545,1.831080,0.731652,8.429613,-9.401215,-8.811431,-2.570397,9.434501,-3.306259,5.813951,-5.326417,6.724582,-0.388732,-4.802890,-8.804493,-8.268098,-6.363546,2.122265,9.744239,-5.735305,-6.254815,-0.868089,-6.529606,-2.105789,0.442232,-2.402582,-8.110701,4.539450,8.321866,1.318850,5.809184,6.387333,-9.694062,7.763697,1.369525,2.074391,0.249017,-9.242318,5.043871,-3.111383,-0.081313,5.651424,-7.193830,-2.706662,-6.486370,-7.583141,2.667850,6.218906,-2.953966,-7.443686,-9.017213,2.401049,6.260351,5.228882,2.523993,6.319772,9.878047,-2.357388,8.359095,3.522427,-1.708434,-1.994245,3.294741,5.477155,-7.675062,-8.507478,-1.440744,-8.413870,5.345980,-5.150879,-7.203679,6.613052,-8.211413,6.708594,-2.888728,5.718633,-3.276717,-7.809334,5.880789,9.431832,8.770290,-6.746014,-3.992841,-0.141495,9.700567,-5.041197,-1.116811,4.485187,0.514816,3.504470,7.638895,-5.151450,-9.453435,3.690335,0.043466,4.436145,-5.996380,-0.442135,5.796791,1.117806,8.061202,-3.313102,1.289064,8.991100,-9.528182,-5.912518], dtype = "float32")#candidate|4258|(108,)|const|float32
call_4257 = relay.TupleGetItem(func_2577_call(relay.reshape(const_4258.astype('float32'), [9, 4, 3]), relay.reshape(const_4258.astype('float32'), [9, 4, 3]), relay.reshape(call_4193.astype('int32'), [216,]), ), 2)
call_4259 = relay.TupleGetItem(func_2581_call(relay.reshape(const_4258.astype('float32'), [9, 4, 3]), relay.reshape(const_4258.astype('float32'), [9, 4, 3]), relay.reshape(call_4193.astype('int32'), [216,]), ), 2)
uop_4260 = relay.erf(call_4222.astype('float32')) # shape=(12, 11, 9)
uop_4262 = relay.erf(call_4224.astype('float32')) # shape=(12, 11, 9)
func_3552_call = mod.get_global_var('func_3552')
func_3556_call = mutated_mod.get_global_var('func_3556')
call_4271 = relay.TupleGetItem(func_3552_call(relay.reshape(call_4227.astype('bool'), [10, 13, 12]), relay.reshape(call_4227.astype('bool'), [10, 13, 12]), ), 0)
call_4272 = relay.TupleGetItem(func_3556_call(relay.reshape(call_4227.astype('bool'), [10, 13, 12]), relay.reshape(call_4227.astype('bool'), [10, 13, 12]), ), 0)
uop_4279 = relay.sigmoid(call_4151.astype('float32')) # shape=(4, 9, 9)
uop_4281 = relay.sigmoid(call_4153.astype('float32')) # shape=(4, 9, 9)
output = relay.Tuple([uop_4143,const_4152,uop_4171,call_4193,const_4194,call_4201,const_4202,const_4203,bop_4209,var_4223,call_4227,var_4228,call_4257,const_4258,uop_4260,call_4271,uop_4279,])
output2 = relay.Tuple([uop_4143,const_4152,uop_4171,call_4195,const_4194,call_4204,const_4202,const_4203,bop_4209,var_4223,call_4229,var_4228,call_4259,const_4258,uop_4262,call_4272,uop_4281,])
func_4285 = relay.Function([var_4142,var_4208,var_4223,var_4228,], output)
mod['func_4285'] = func_4285
mod = relay.transform.InferType()(mod)
mutated_mod['func_4285'] = func_4285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4285_call = mutated_mod.get_global_var('func_4285')
var_4287 = relay.var("var_4287", dtype = "float64", shape = (2, 7, 8))#candidate|4287|(2, 7, 8)|var|float64
var_4288 = relay.var("var_4288", dtype = "int64", shape = (2, 7, 8))#candidate|4288|(2, 7, 8)|var|int64
var_4289 = relay.var("var_4289", dtype = "int32", shape = (1188,))#candidate|4289|(1188,)|var|int32
var_4290 = relay.var("var_4290", dtype = "bool", shape = (780, 2))#candidate|4290|(780, 2)|var|bool
call_4286 = func_4285_call(var_4287,var_4288,var_4289,var_4290,)
output = call_4286
func_4291 = relay.Function([var_4287,var_4288,var_4289,var_4290,], output)
mutated_mod['func_4291'] = func_4291
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4506 = relay.var("var_4506", dtype = "int64", shape = (2, 12, 9))#candidate|4506|(2, 12, 9)|var|int64
const_4507 = relay.const([[[-6,-3,-5,2,7,8,-7,-10,9],[9,7,-6,4,1,7,5,10,-10],[4,2,-3,3,3,1,9,1,-4],[7,4,1,7,7,-5,6,-10,-3],[3,3,9,-9,-7,-6,-9,8,-1],[5,6,7,10,1,4,-2,-9,-2],[-2,7,-1,-10,-6,-2,-9,6,10],[7,9,-9,-1,9,-10,8,-1,-1],[8,1,-2,-2,1,-8,-5,10,-2],[-8,-1,-5,-7,-3,8,1,5,-3],[-6,-10,4,7,-3,-5,7,2,-2],[1,9,-10,-7,-6,-2,1,-3,4]],[[-3,1,9,2,1,5,10,5,-9],[-8,-5,-9,3,-4,5,8,-8,-3],[-6,2,-9,-3,3,8,-4,-6,-3],[5,-9,6,6,3,2,-10,10,-6],[-8,-8,8,3,-2,-8,-6,-3,-3],[-10,-3,-2,8,3,-5,-7,-9,-6],[-10,-6,7,-9,10,-7,-1,1,-9],[-8,6,-5,2,6,6,8,-10,-10],[2,-8,-3,3,-4,-7,7,2,-9],[-6,8,4,-5,-1,9,-10,3,1],[-6,2,-1,5,-6,-3,3,-8,1],[-4,-4,-1,-8,-4,-10,-9,-1,6]]], dtype = "int64")#candidate|4507|(2, 12, 9)|const|int64
bop_4508 = relay.add(var_4506.astype('int64'), relay.reshape(const_4507.astype('int64'), relay.shape_of(var_4506))) # shape=(2, 12, 9)
bop_4520 = relay.divide(const_4507.astype('float32'), relay.reshape(bop_4508.astype('float32'), relay.shape_of(const_4507))) # shape=(2, 12, 9)
uop_4531 = relay.asinh(const_4507.astype('float32')) # shape=(2, 12, 9)
output = relay.Tuple([bop_4520,uop_4531,])
output2 = relay.Tuple([bop_4520,uop_4531,])
func_4537 = relay.Function([var_4506,], output)
mod['func_4537'] = func_4537
mod = relay.transform.InferType()(mod)
var_4538 = relay.var("var_4538", dtype = "int64", shape = (2, 12, 9))#candidate|4538|(2, 12, 9)|var|int64
output = func_4537(var_4538)
func_4539 = relay.Function([var_4538], output)
mutated_mod['func_4539'] = func_4539
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4546 = relay.var("var_4546", dtype = "int16", shape = (2, 15, 8))#candidate|4546|(2, 15, 8)|var|int16
var_4547 = relay.var("var_4547", dtype = "int16", shape = (2, 15, 8))#candidate|4547|(2, 15, 8)|var|int16
bop_4548 = relay.bitwise_and(var_4546.astype('int16'), relay.reshape(var_4547.astype('int16'), relay.shape_of(var_4546))) # shape=(2, 15, 8)
bop_4551 = relay.logical_or(var_4547.astype('bool'), relay.reshape(bop_4548.astype('bool'), relay.shape_of(var_4547))) # shape=(2, 15, 8)
func_1286_call = mod.get_global_var('func_1286')
func_1290_call = mutated_mod.get_global_var('func_1290')
const_4561 = relay.const([-7,-9,-8,-9,9,1,-8,-2,2,10,6,-2,9,-9,9,6,-5,-8,-1,-7,8,2,5,-3,-2,7,-3,8,-2,-4,7,8,4,4,4,-6,1,10,-4,5,6,-3,-4,2,-1,6,4,-7,1,-6,5,1,7,-2,-4,6,-2,10,-1,-1,-9,-10,4,-3,-1,9,-8,1,-2,8,-3,-8,5,-10,-10,-1,-1,-2,-10,-9,-2,8,1,-9,4,8,2,-2,-4,3,5,-3,-5,-3,-9,-8,1,3,5,4,9,-5,-10,10,-9,-9,9,5,6,10,8,-8,-4,-2,3,6,-10,5,-10,-5,7,5,8,9,6,9,7,-7,-8,-10,5,-3,9,-6,-2,-7,-6,3,10,8,-1,-4,-6,-1,-9,5,7,10,7,-2,-8,-6,-1,10,2,1,-7,-6,-5,-7,-6,-10,-4,8,10,-10,8,5,-6,-3,5,6,9,6,6,10,-8,6,3,-3,1,1,1,1,1,8,5,9,-5,-8,8,5,-8,-10,-3,4,-8,7,3,7,-9,-9,8,-8,2,-3,4,8,9,5,-3,-9,-5,10,-4,1], dtype = "int16")#candidate|4561|(216,)|const|int16
call_4560 = relay.TupleGetItem(func_1286_call(relay.reshape(const_4561.astype('int16'), [6, 4, 9]), relay.reshape(const_4561.astype('int16'), [6, 4, 9]), ), 0)
call_4562 = relay.TupleGetItem(func_1290_call(relay.reshape(const_4561.astype('int16'), [6, 4, 9]), relay.reshape(const_4561.astype('int16'), [6, 4, 9]), ), 0)
uop_4566 = relay.asin(bop_4548.astype('float32')) # shape=(2, 15, 8)
func_571_call = mod.get_global_var('func_571')
func_574_call = mutated_mod.get_global_var('func_574')
var_4572 = relay.var("var_4572", dtype = "uint16", shape = (5,))#candidate|4572|(5,)|var|uint16
call_4571 = func_571_call(relay.reshape(var_4572.astype('uint16'), [1, 5]))
call_4573 = func_571_call(relay.reshape(var_4572.astype('uint16'), [1, 5]))
func_289_call = mod.get_global_var('func_289')
func_292_call = mutated_mod.get_global_var('func_292')
const_4578 = relay.const([9.221712,-8.993423,-4.672911,-0.314090,-9.238352,1.645964,-4.529884,0.839734,1.304478,3.715307,-5.952540,-2.403489,-8.426884,-7.475191,-2.701680,0.995001,-3.228187,-0.209839,9.770305,-5.546779,-2.141346,2.383878,8.911821,0.783481,-6.948942,-0.303195,9.179765,-9.918506,7.152941,9.916819,-4.699451,6.816605,4.129453,-5.857900,7.096567,-5.383210,-2.122235,-0.824654,5.183846,-6.777695,-4.196296,-2.947006,8.788815,7.151105,1.264320,6.073776,-7.005051,-9.860571,-1.171252,-2.550674,6.260120,5.445108,1.121311,4.158019,7.718840,-2.519631,-8.381511,2.757699,3.019368,1.516168,-4.436148,0.369766,2.548072,-5.589462,-1.092433,0.247869,6.892956,5.815178,0.072428,9.983760,-2.449012,-9.739755,-0.426261,-8.621357,4.984746,2.236751,-9.857221,-1.531983,-5.099741,1.807362,2.222401,3.730980,8.644061,2.269318,4.017401,6.904264,3.113157,9.933039,-8.977956,0.704071,9.798290,1.360948,6.157179,3.393311,-3.006948,-6.654190,-6.010019,-9.796421,-4.623608,-2.928049,4.757643,6.366750,7.648526,-2.949684,1.945669,2.852919,-8.228076,-3.003580,-5.908430,-5.229758,0.535368,5.340902,-4.067436,1.542674,9.876213,-9.850718,-3.414783,8.761735,-4.843607,3.438916,-2.822426,-2.418166,0.437499,-3.977097,4.696281], dtype = "float64")#candidate|4578|(125,)|const|float64
call_4577 = func_289_call(relay.reshape(const_4578.astype('float64'), [5, 5, 5]))
call_4579 = func_289_call(relay.reshape(const_4578.astype('float64'), [5, 5, 5]))
output = relay.Tuple([bop_4551,call_4560,const_4561,uop_4566,call_4571,var_4572,call_4577,const_4578,])
output2 = relay.Tuple([bop_4551,call_4562,const_4561,uop_4566,call_4573,var_4572,call_4579,const_4578,])
func_4583 = relay.Function([var_4546,var_4547,var_4572,], output)
mod['func_4583'] = func_4583
mod = relay.transform.InferType()(mod)
var_4584 = relay.var("var_4584", dtype = "int16", shape = (2, 15, 8))#candidate|4584|(2, 15, 8)|var|int16
var_4585 = relay.var("var_4585", dtype = "int16", shape = (2, 15, 8))#candidate|4585|(2, 15, 8)|var|int16
var_4586 = relay.var("var_4586", dtype = "uint16", shape = (5,))#candidate|4586|(5,)|var|uint16
output = func_4583(var_4584,var_4585,var_4586,)
func_4587 = relay.Function([var_4584,var_4585,var_4586,], output)
mutated_mod['func_4587'] = func_4587
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4628 = relay.var("var_4628", dtype = "float64", shape = (1, 2, 15))#candidate|4628|(1, 2, 15)|var|float64
uop_4629 = relay.tan(var_4628.astype('float64')) # shape=(1, 2, 15)
uop_4636 = relay.sin(uop_4629.astype('float64')) # shape=(1, 2, 15)
uop_4647 = relay.atanh(uop_4629.astype('float32')) # shape=(1, 2, 15)
func_2423_call = mod.get_global_var('func_2423')
func_2427_call = mutated_mod.get_global_var('func_2427')
var_4658 = relay.var("var_4658", dtype = "int32", shape = (1188,))#candidate|4658|(1188,)|var|int32
call_4657 = func_2423_call(relay.reshape(var_4658.astype('int32'), [12, 11, 9]), relay.reshape(var_4658.astype('int32'), [12, 11, 9]), )
call_4659 = func_2423_call(relay.reshape(var_4658.astype('int32'), [12, 11, 9]), relay.reshape(var_4658.astype('int32'), [12, 11, 9]), )
output = relay.Tuple([uop_4636,uop_4647,call_4657,var_4658,])
output2 = relay.Tuple([uop_4636,uop_4647,call_4659,var_4658,])
func_4665 = relay.Function([var_4628,var_4658,], output)
mod['func_4665'] = func_4665
mod = relay.transform.InferType()(mod)
var_4666 = relay.var("var_4666", dtype = "float64", shape = (1, 2, 15))#candidate|4666|(1, 2, 15)|var|float64
var_4667 = relay.var("var_4667", dtype = "int32", shape = (1188,))#candidate|4667|(1188,)|var|int32
output = func_4665(var_4666,var_4667,)
func_4668 = relay.Function([var_4666,var_4667,], output)
mutated_mod['func_4668'] = func_4668
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4779 = relay.const([[[8.998526,-9.417837,-1.893599,-0.988170,1.703685,1.621690,-2.241018,-4.134309,-2.113977,4.690324,2.947209,-9.123343,1.188299,5.065026,3.492455,7.160933]]], dtype = "float32")#candidate|4779|(1, 1, 16)|const|float32
var_4780 = relay.var("var_4780", dtype = "float32", shape = (13, 9, 16))#candidate|4780|(13, 9, 16)|var|float32
bop_4781 = relay.less(const_4779.astype('bool'), var_4780.astype('bool')) # shape=(13, 9, 16)
output = relay.Tuple([bop_4781,])
output2 = relay.Tuple([bop_4781,])
func_4784 = relay.Function([var_4780,], output)
mod['func_4784'] = func_4784
mod = relay.transform.InferType()(mod)
mutated_mod['func_4784'] = func_4784
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4785 = relay.var("var_4785", dtype = "float32", shape = (13, 9, 16))#candidate|4785|(13, 9, 16)|var|float32
func_4784_call = mutated_mod.get_global_var('func_4784')
call_4786 = func_4784_call(var_4785)
output = call_4786
func_4787 = relay.Function([var_4785], output)
mutated_mod['func_4787'] = func_4787
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4920 = relay.constdtype = "float32")#candidate|4920|(12, 16, 13)|const|float32
uop_4921 = relay.acosh(const_4920.astype('float32')) # shape=(12, 16, 13)
output = uop_4921
output2 = uop_4921
func_4926 = relay.Function([], output)
mod['func_4926'] = func_4926
mod = relay.transform.InferType()(mod)
output = func_4926()
func_4927 = relay.Function([], output)
mutated_mod['func_4927'] = func_4927
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4952 = relay.var("var_4952", dtype = "float64", shape = (13, 5, 15))#candidate|4952|(13, 5, 15)|var|float64
const_4953 = relay.const([[[-9.246479,7.863651,-5.359730,-7.025196,6.567003,1.071370,5.985201,4.680616,-0.085640,-6.693330,-8.447309,-7.854156,-0.023071,6.886593,4.368807],[-7.720352,7.659085,-8.622978,1.293727,0.966809,4.404560,-5.347289,-0.482605,-5.536977,-3.062842,-6.939302,9.159432,-0.477096,-4.969436,-9.966185],[8.145917,1.536437,9.154857,-1.014013,3.008400,8.006540,-3.157259,9.745530,7.588733,-5.490968,-1.775463,4.131404,4.424596,3.470303,7.485277],[9.506192,0.659181,5.467969,-7.565591,6.258499,-9.734625,-2.048689,1.696132,9.798863,-7.743200,-8.106660,-9.864011,-0.122494,-0.973267,-1.124192],[5.611440,-1.649539,-6.707302,7.833250,0.904427,-3.342335,1.144233,9.827864,-3.003214,-5.246571,-1.465075,-3.420411,-3.385992,-9.525122,-5.980043]],[[-0.089372,-0.381116,-8.024011,5.393695,0.021972,2.473079,-8.635841,-1.375940,3.432251,-0.462843,2.285214,-6.353517,-2.846183,-2.245528,6.743710],[4.059008,7.207467,-5.406062,-4.645830,3.432520,4.959745,-2.794470,-0.410982,7.686107,4.501562,6.355307,-9.857788,-7.462828,-5.638101,8.168063],[-7.006956,8.599388,-1.205244,9.923232,7.690339,-8.037417,3.396232,-2.937815,2.356506,0.542592,-2.097440,-1.086182,8.034878,4.911615,5.246497],[5.033699,8.080251,5.688709,8.974165,-9.542129,-6.099273,0.030346,1.396329,2.015778,2.693759,-8.295915,4.758369,-3.538829,7.819477,-4.052516],[-6.955103,-5.530348,-0.534370,5.620533,7.548158,7.064884,-0.231598,9.488951,-5.358711,-2.299527,-9.801840,9.830753,2.948578,-1.025765,7.328161]],[[-4.859704,-8.580145,0.833954,-1.196441,-9.083709,4.049654,9.894945,-7.466293,3.345324,6.747770,-6.126324,-4.026967,3.225878,4.557676,4.716886],[-3.585865,-8.332159,-5.071953,-6.686845,-1.201639,-7.759035,-0.860107,2.741205,9.340534,0.087842,9.827494,-1.250220,-1.967112,2.104425,4.866345],[-6.835767,-8.133786,-9.177262,1.762855,-8.882095,-1.717195,4.013283,-9.232263,7.080598,8.770579,9.227394,7.206201,2.820835,2.774259,0.387305],[1.172420,7.058947,0.072808,-3.921873,-0.308827,-2.553434,-6.117695,2.266605,5.360321,-5.874198,1.021611,8.939012,6.026716,-0.626282,2.171750],[9.600421,-8.479291,9.177649,-0.248705,-2.409027,-4.908242,6.247848,-1.537199,1.271278,-4.809717,-2.770949,9.424286,-1.523415,-0.672135,-5.630053]],[[-0.578167,-3.300442,-9.951778,-8.816677,-9.985233,4.072635,-7.654808,2.236670,4.355567,-3.005127,-5.063242,9.105349,-0.262771,-8.691913,3.782406],[-9.001254,-4.107361,-5.859552,-5.358356,3.747501,5.258664,3.198046,-7.302784,-3.619011,-0.013736,5.822920,1.730288,-6.177301,-5.378120,0.095208],[9.179399,7.304101,-2.037567,-3.356457,0.169256,6.740550,-6.226685,-9.421269,4.545264,-3.196864,9.734706,-2.339673,0.025294,-5.953164,0.438170],[9.999329,6.146427,-0.281835,-5.305471,9.963825,0.563210,-1.761330,4.335227,-9.954766,0.943714,-0.486855,-1.506249,8.136482,-3.586358,2.317341],[8.111385,-0.168334,5.983933,8.065473,-4.920371,9.906814,1.642647,0.226530,-7.583645,-5.750348,0.269834,-0.179957,5.484830,4.613830,8.711425]],[[-3.206095,1.038020,-9.975617,7.799523,-5.371551,-7.970947,2.076950,7.074857,-7.489697,-7.837206,8.769617,-6.997125,4.855753,8.847043,3.881677],[7.012851,-2.912965,-1.906145,-4.358249,-1.633555,2.268247,-1.241670,-9.140444,-7.778054,-6.129613,8.797604,-5.135902,5.305305,-0.242813,-7.487422],[-3.444439,9.779254,-0.804836,4.102458,2.241075,9.011652,-6.163552,-6.262520,9.965791,5.343660,9.129832,4.555359,-4.895787,-8.230488,1.088738],[-4.665538,-7.035523,-4.077993,-9.040913,6.994806,5.650990,-5.119654,1.573012,0.794331,2.190954,-1.424386,1.999880,-6.744633,-5.727690,-2.799897],[3.640633,9.526616,-1.873574,-5.110341,2.415820,4.909197,-7.733968,-5.223566,-6.129086,-1.227125,0.984205,-7.943754,-6.142421,-7.239920,7.243850]],[[4.987672,-7.336812,1.046192,-1.018041,6.101364,6.891998,3.033217,-3.135851,3.369540,2.574304,4.687866,-8.540937,5.235877,-4.685823,-8.779616],[2.713545,7.440001,-9.764633,-1.474120,-7.065412,4.076620,-7.444983,-9.451682,-1.599447,3.731208,7.180456,-7.053256,3.775897,2.150800,-7.359546],[3.228181,4.815236,0.573703,0.763381,-7.290964,9.293530,-6.547805,-0.834372,-7.931738,-3.938281,-7.773222,-8.731012,-4.915506,1.268121,-1.106922],[9.365631,5.930505,-7.994999,-8.038802,-9.963508,5.467067,-9.745576,-2.964979,-3.826604,-8.494917,-5.878204,7.740196,1.161918,-8.112168,3.844984],[-0.178503,5.844225,2.169184,-4.381364,5.517983,-5.888376,-6.159126,-9.355262,-1.396817,-4.626706,-5.389758,7.564295,1.477589,9.801912,6.409815]],[[-0.180617,2.480803,3.000210,7.839775,-0.121461,7.914813,-9.212104,-8.516366,-7.296027,0.988753,3.792745,2.781112,3.577478,2.791144,5.193935],[2.172484,7.826562,8.516775,4.795892,-2.809815,9.071070,6.531997,-2.891900,2.748144,-3.246675,5.198726,-5.781808,-4.307486,9.600962,-6.196490],[9.754303,3.977049,-6.701554,8.854671,5.287420,5.176551,7.633966,-2.033330,-7.677305,-2.394899,3.218391,-3.469461,6.862347,8.239510,3.383672],[0.151300,-2.396170,8.073715,1.305092,-7.446134,-8.923681,6.883326,-6.919877,9.991162,0.438911,4.010170,4.926483,-9.588132,5.684947,-5.616928],[1.571371,4.232869,-9.827693,-0.198629,1.416273,-4.191906,6.593314,-0.200278,-2.095919,-2.112358,3.937182,-9.009197,-6.463849,5.935748,-0.730771]],[[-5.046448,4.257321,1.346733,-6.187314,3.576104,0.829684,9.018983,-9.626333,-5.049796,-7.882323,-9.035062,4.208907,-0.146822,-9.804806,4.736109],[9.997557,-1.317542,7.140036,-7.481038,-2.965510,9.912020,-0.298619,-0.449205,-7.161233,1.392354,2.683940,6.824864,-1.063567,-4.277124,5.965674],[3.544395,9.348660,-9.329428,-8.070451,-2.752156,-1.768019,-3.779062,4.947082,9.299691,8.323284,-5.431343,9.031897,6.488877,8.190448,-6.599812],[3.918363,-5.266516,0.902328,0.870474,1.964019,-1.155722,-7.366408,-0.469845,6.855988,6.150844,-3.073924,-5.291323,4.784542,0.741217,8.238222],[-2.065823,-0.933175,-7.508702,7.463496,2.879152,6.679857,-8.319884,-4.683685,1.058794,6.957913,-6.618974,-9.908399,4.698363,7.569036,9.937208]],[[-5.930801,5.643273,-8.947197,-0.710560,-9.493577,-2.728894,-1.761468,3.434296,-8.065452,-7.545304,5.059159,6.471467,3.405985,-3.051706,-6.759253],[-8.987099,4.138173,1.007997,3.818912,7.856371,5.730121,3.652735,-6.143526,-0.960053,-0.837158,-2.914455,5.708812,9.661461,-8.081438,4.854796],[3.548267,0.616685,-6.401454,-5.802826,2.971151,2.793774,-7.914051,-2.079690,5.967809,9.593980,0.635389,1.311455,4.658961,-2.073883,-1.532732],[-7.603229,4.343267,-1.559446,-1.652448,8.472507,-2.543881,-3.217684,4.872605,-1.574935,9.764322,-1.386442,9.211669,-6.882153,1.007361,2.881726],[-6.967308,7.920487,6.905371,8.460713,6.282301,0.792908,0.772667,-4.093257,-6.914390,3.424573,-4.844975,0.831668,-6.037056,-6.366708,-7.976828]],[[4.467757,-5.011415,-5.751115,2.276992,7.726194,-3.528279,-9.986726,3.676250,-9.106087,4.092522,1.855748,-0.126486,-3.209696,-9.445669,-6.379886],[-6.103150,-1.937311,-9.199145,-8.533879,-5.008791,-9.705986,1.277355,4.788373,0.942726,-8.889311,7.226642,-3.257439,-1.467661,-7.395987,-6.409226],[2.068040,4.787138,8.415403,-1.493077,5.443877,9.388353,7.835869,-8.393472,0.948942,8.492807,2.864940,-9.677276,-3.821861,-9.067410,2.863953],[5.560496,7.048214,-1.522286,-2.338137,-0.238832,-6.806118,-1.003793,-1.898054,-2.277231,-2.392952,-3.402581,-6.398746,-5.162049,8.749885,-6.912779],[3.038192,-4.217457,-3.997978,4.468709,6.368501,-0.931898,6.996244,-2.448700,9.287015,-6.208313,-5.299100,2.699436,1.472753,1.349740,-8.295687]],[[2.020724,1.163461,-8.260541,9.492160,-2.765494,-4.297006,-9.843102,7.267417,7.885424,2.929855,7.551912,-7.645519,-1.444042,-9.541190,1.025647],[3.994551,-4.968609,-9.900045,-9.874240,-5.107577,-9.254311,7.334546,-4.049809,6.656929,-3.446810,4.359775,-9.605349,-8.566372,5.686454,-7.173562],[-1.654083,-5.112080,-5.905059,3.557125,-6.353992,-7.924397,-1.118952,7.146167,-6.459532,4.908881,2.452284,-0.148446,-1.797890,-6.909779,6.555571],[-7.043194,0.127316,-2.875350,6.100373,-9.430484,7.291057,8.860684,3.280592,3.296010,4.259497,-6.007673,0.745494,0.191573,2.223632,-5.151728],[-7.354363,-4.358598,9.414256,-5.710340,4.342956,-9.668756,7.573556,-1.398309,-4.872962,-4.039186,-0.548572,-1.666665,-1.756409,-8.843351,2.841801]],[[-7.764631,0.393778,2.548180,-3.328948,-4.172553,0.236086,-7.761923,-1.577136,0.497477,-6.422642,-4.788125,-9.562419,6.567239,-8.768369,-2.328529],[-0.892367,-7.149790,-3.264448,-5.532930,0.281764,-9.114820,2.366579,7.179502,7.475538,-1.591698,-2.944811,8.958918,8.212613,5.260898,-6.070939],[5.693894,2.656918,-9.792651,-7.215597,-0.417822,7.353474,-1.831835,6.998154,-4.306628,-4.398256,0.398735,-4.682586,5.298767,6.719321,9.702549],[-5.169445,-6.444983,-6.487915,3.126016,2.668200,-8.625093,-2.762741,6.567797,-8.708753,9.702833,-0.029894,-8.842572,8.550290,-0.087039,-4.936853],[-7.776546,-8.505549,-1.082511,5.973138,3.585368,7.727565,-6.186037,-0.506264,-3.446499,1.181272,3.533624,-8.323335,-8.244161,8.102360,-0.495325]],[[5.693919,7.427399,7.626478,-2.107676,8.322380,4.285838,-0.394317,2.915111,2.361216,7.412747,6.951282,-5.355570,-7.235138,0.846611,8.390673],[-9.259476,-3.694045,-1.210292,2.426158,-1.675217,4.292959,-8.040912,2.155900,-6.897758,8.288891,-9.900271,1.891698,-9.608956,6.697089,9.439748],[9.633680,8.189256,4.166246,5.694070,6.256959,-2.118851,7.630663,-5.302572,-6.754021,6.633783,-8.196175,-9.861335,-1.537966,-2.535146,-6.371913],[-3.219250,3.131914,9.554416,5.915374,3.521738,-1.835555,6.864264,-6.633322,5.985021,5.586007,-4.646432,-3.071913,7.556552,4.907531,-4.895960],[8.148199,3.098129,7.929754,-5.457690,6.806164,3.705929,9.930068,5.058166,-7.164093,-5.366641,5.492750,7.987497,7.920251,-4.371752,-5.155828]]], dtype = "float64")#candidate|4953|(13, 5, 15)|const|float64
bop_4954 = relay.multiply(var_4952.astype('float64'), relay.reshape(const_4953.astype('float64'), relay.shape_of(var_4952))) # shape=(13, 5, 15)
output = relay.Tuple([bop_4954,])
output2 = relay.Tuple([bop_4954,])
func_4957 = relay.Function([var_4952,], output)
mod['func_4957'] = func_4957
mod = relay.transform.InferType()(mod)
var_4958 = relay.var("var_4958", dtype = "float64", shape = (13, 5, 15))#candidate|4958|(13, 5, 15)|var|float64
output = func_4957(var_4958)
func_4959 = relay.Function([var_4958], output)
mutated_mod['func_4959'] = func_4959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4926_call = mod.get_global_var('func_4926')
func_4927_call = mutated_mod.get_global_var('func_4927')
call_5021 = func_4926_call()
call_5022 = func_4926_call()
func_2485_call = mod.get_global_var('func_2485')
func_2489_call = mutated_mod.get_global_var('func_2489')
var_5024 = relay.var("var_5024", dtype = "float32", shape = (40,))#candidate|5024|(40,)|var|float32
call_5023 = relay.TupleGetItem(func_2485_call(relay.reshape(var_5024.astype('float32'), [4, 5, 2]), relay.reshape(var_5024.astype('float32'), [4, 5, 2]), ), 0)
call_5025 = relay.TupleGetItem(func_2489_call(relay.reshape(var_5024.astype('float32'), [4, 5, 2]), relay.reshape(var_5024.astype('float32'), [4, 5, 2]), ), 0)
func_3134_call = mod.get_global_var('func_3134')
func_3136_call = mutated_mod.get_global_var('func_3136')
const_5035 = relay.const([4.718393,9.776266,-8.739022,-5.116711,5.735043,-4.981354,8.926950,8.170104,6.330149,-8.501257,-5.646120,-5.539586,-0.617170,7.731147,7.189879,-9.035267,0.100712,4.051627,7.563497,-7.944741,0.337641,0.765395,-8.862313,-0.664483,7.852147,-2.352806,-7.096357,-3.785783,4.770351,-1.769112,-7.205871,9.860121,-3.894074,0.443254,-2.095912,7.988939,-7.399105,-8.936502,9.222319,4.499235,3.234389,-8.591446,-2.575887,6.342345,-5.665235,1.363100,-8.268250,-7.367730,5.897272,3.096278,4.323305,-9.001608,3.809791,-3.503824,8.964592,-6.162808,-9.188649,-7.690550,8.842132,-3.304980,-4.717364,-7.090308,-1.418015,6.894871,-1.564021,-0.929105,7.979585,-6.510560,4.006461,3.624121,-6.245668,-9.400277,5.656396,4.460391,-1.737015,-5.919742,9.830807,3.100227,-8.389355,-7.865183,9.305794,-4.906167,8.956502,-7.962638,-4.396631,0.144387,9.304644,5.998882,-2.614100,8.625345,-2.919483,2.216465,-5.271405,5.424487,-8.733258,3.482837,-5.838578,-9.939464,-1.867803,7.817374,0.755308,0.156063,-5.166767,8.153704,-3.509153,2.779480,-4.329930,-2.970933,9.267016,7.193406,1.111926,-6.440145,6.719813,1.720061,4.083253,-3.106014,6.501640,3.772913,-3.613883,0.032196,8.660170,0.086219,2.697180,-7.600083,7.613433,-2.668002,-4.673275,4.924869,-0.544132,-1.795299,0.236821,-4.431545,-3.489934,-6.708265,-9.207695,6.044290,-6.818719,8.373762,8.841432,-0.018294,-7.931840,3.127323,0.631603,-4.259892,-8.142938,5.081368,3.710108,-6.725077,5.362305,-2.425045,-0.280916,8.640318,-7.301715,7.190956,-4.363099,-3.780001,-7.204676,-6.508958,-1.802579,0.824169,2.656435,-3.250466,-2.700944,-0.291783,7.327585,3.162138,8.033374,-2.897454,-6.689846,8.185536,-9.513536,2.734304,0.145087,-0.994490,-9.221259,-7.050040,8.962826,-9.617949,-7.230989,2.061098,7.313079,8.309079,-1.325366,-3.575192,9.704465,9.872889,9.376291,3.194573,-8.037606,4.108511,4.521365,-4.865280,-8.807586,0.390305,-6.768625,7.540021,7.130847,-8.667608,-9.676760,-3.951701,-3.898975,9.365749,-7.647380,-6.423395,5.072767,9.884609,-2.632820,0.104103,-4.236558,2.334571,9.381445,-9.550122,6.910390,-4.052682,5.902532,-0.107844,0.785910,-4.514079,-6.894134,-3.725262,-2.024934,-4.692758,-7.485320,1.100543,-8.559398,2.139738,8.429141,2.924998,-4.339046,1.537726,-1.937428,5.618251,5.095687,-2.828019,-1.345942,1.612987,-1.789485,0.434108,8.158898,-4.347875,9.332875,-2.952106,0.399341,-2.044864,8.411525,-9.144057,8.516652,2.400208,6.353127,-7.033929,2.620153,-8.959647,9.321289,-3.643429,-6.098928,1.559237,-2.336231,3.352297,6.705222,7.174322,6.948341,-4.340842,3.924116,8.157816,1.433289,-3.724438,-2.121655,9.943666,0.046845,-8.066594,-2.257883,0.144344,1.426728,-1.606908,-4.226080,-7.513610,1.954894,-9.083886,-3.918329,3.013577,4.253385,-3.512908,-2.415592,-9.436469,5.920719,-1.897721,-0.976347,-4.719923,-6.608336,-8.371517,-6.770561,-3.570803,2.619429,-2.303914,-2.242461,-9.050238,-3.586702,8.001209,-3.332961,-6.696637,2.754235,1.917172,-8.209253,5.910931,-7.542562,-2.435612,-0.484657,5.329761,5.760754,-4.620996,2.062473,-0.785796,3.822788,8.999006,9.050145,-4.676234,-8.716505,-1.054758,8.493335,6.716795,2.952554,6.302818,-9.184350,0.085488,-7.762750,4.150017,-2.902460,1.480445,-7.642320,3.603194,-2.913989,-1.765411,1.521793,-8.989605,-1.365871,3.485788,2.903416,-6.227706,9.272262,6.355881,3.012018,8.517301,-9.003102,0.694470,5.315355,-9.399627,-6.691475,-8.290894,6.061610,9.706809,-9.657104,3.435154,3.421176,0.140747,-9.923607,-9.292423,-6.974066,4.619489,8.640890,0.221522,-2.802643,-6.238655,-5.534000,-7.786536,7.282217,4.364289,-4.227156,2.118951,-0.839432,-1.618028,-4.227846,-7.487265,0.941010,2.288202,7.987866,0.864308,2.140731,-5.258174,5.212775,2.595194,-4.684568,-9.497096,-4.158309,-9.945778,7.420566,8.949031,-4.997968,-9.191228,4.811797,-1.654179,-4.617660,-7.846488,8.916845,4.729387,-6.132241,-5.587255,8.152675,8.276316,-5.601160,5.007719,8.145305,2.048346,-7.513156,4.923800,-8.929646,-2.267255,6.481541,-7.660140,-1.512103,0.918765,-6.053790,7.309773,5.870833,4.994701,1.305627,6.281218,3.846617,-1.178742,-2.617186,-9.985110,4.452812,7.712813,6.216205,3.322109,8.900107,-2.353301,-7.657831,4.751854,6.655238,-5.816865,6.453935,8.065757,-5.224545,6.627941,0.646555,1.916633,-6.371736,0.709168,-0.002573,8.008562,-1.990493,-9.568840,-9.671612,-3.007334,-9.416237,-3.748305,-1.900744,6.034680,6.495111,4.356725,-1.510506,1.446088,2.816351,-3.363008,4.287337,3.194808,-2.674264,9.868727,8.269287,-0.962467,-0.485104,-8.954168,-8.937133,1.052038,-7.728253,-5.096063,-2.762928,2.895573,-2.962554,7.468971,-0.795861,3.222355,-4.180370,1.072819,-6.826342,-0.054574,-4.183552,1.040614,-3.198706,-6.522440,0.008587,3.486706,-6.004078,8.323337,-0.460651,-3.044834,4.896948,1.059282,-1.001039,-1.996068,-5.200183,5.440696,3.418657,1.113444,-4.859615,-5.863264,-5.392486,5.400570,-1.413407,-6.924989,6.934660,4.414289,-3.023737,9.803450,0.890875,-3.935570,-7.044265,-4.365857,-2.029991,3.209342,6.578352,4.318902,7.817029,-5.489578,4.703882,-2.343531,-5.097306,-9.730215,7.796712,1.443432,2.714124,-6.016278,-6.332682,8.154172,0.541508,5.159547,-1.250690,-6.121559,3.405797,2.171213,4.048422,4.902413,-3.741955,5.908177,7.080518,-1.098726,-1.678286,-8.631652,-8.756277,0.404578,-2.229491,-9.441787,4.979462,-7.807195,-9.538644,-6.556054,-3.208287,4.494465,6.000782,-0.530590,9.348976,9.750069,9.408469,-8.285182,1.470591,3.488619,-8.563282,-3.470161,2.490724,-3.330032,-9.847543,2.038060,4.083856,0.085152,6.329393,1.321434,4.425781,-9.739792,7.805881,-5.066418,5.836966,-0.018022,1.560328,0.760452,-5.767485,-6.698350,-9.879913,3.356382,-2.694945,-2.801886,-7.683811,1.979171,-8.030532,-6.715459,-1.649924,-8.664909,7.770513,-9.730617,3.894975,8.070747,3.018018,3.981648,6.236478,0.042252,9.031699,-3.701665,-7.046531,2.012656,0.352379,-3.800007,-4.981309,3.644215,6.872555,5.549704,-0.637158,-9.858663,-5.564233,9.276461,-3.368178,-4.002294,3.952431,8.922082,-3.230654,-2.249477,6.530875,6.813467,-8.082535,9.060989,-5.389968,-1.699003,6.768617,9.848405,-0.580637,4.127649,2.347678,3.592240,-9.793111,-7.865868,6.556960,2.447276,3.935085,7.042382,3.841108,-6.423073,2.999209,-9.954204,2.511297,-6.150502,3.217115,2.077914,3.414113,9.045647,8.359320,-1.771880,-7.927314,5.876760,0.507224,3.893881,1.496621,-6.250593,5.261384,3.798812,-3.412971,-9.319284,-9.330641,4.876464,-7.171482,7.226035,-0.910913,1.440137,9.168975,7.973087,2.131135,-5.203677,-9.641616,5.742221,6.520977,-2.263364,-7.948184,6.824527,-5.518988,2.703283,4.133867,5.909575,-3.859019,8.982143,0.017140,-6.203757,4.863319,-4.043561,-0.213922,0.642150,-4.911529,0.272373,4.873203,9.194049,4.053160,-3.374627,-9.534752,3.887874,-4.023701,-8.146473,3.680640,-9.056989,5.753276,-7.879838,-7.781055,-4.635864,1.228786,-5.257106,-4.120060,0.357350,-5.980500,5.867467,5.554499,4.244204,4.905079,1.091340,3.486338,1.612224,-5.831690,-0.792188,-4.186232,-9.253111,-0.376706,-0.951657,-8.314240,9.293829,3.379313,0.688108,0.834348,0.913564,0.970323,8.905437,-7.944293,4.047915,-5.792678,-4.321835], dtype = "float32")#candidate|5035|(728,)|const|float32
call_5034 = relay.TupleGetItem(func_3134_call(relay.reshape(const_5035.astype('float32'), [7, 8, 13])), 0)
call_5036 = relay.TupleGetItem(func_3136_call(relay.reshape(const_5035.astype('float32'), [7, 8, 13])), 0)
func_289_call = mod.get_global_var('func_289')
func_292_call = mutated_mod.get_global_var('func_292')
const_5038 = relay.const([-4.440569,-7.861747,-9.718959,-4.212695,-7.637564,-8.294103,8.421331,-4.019577,-5.388269,-3.274200,3.622035,4.404021,4.877780,6.591926,-1.496698,8.172171,2.563680,0.023298,2.927924,0.735879,4.075932,6.143237,2.510069,-9.003704,-1.260696,-1.274387,2.540080,5.202634,4.633287,7.443358,-8.360197,3.761199,-2.944734,5.304186,-3.170807,-6.316434,-3.048431,-3.151315,1.743414,-2.768650,-7.906354,-4.920567,-4.449197,-1.193404,-1.397690,-2.345292,-2.498082,-3.350955,-9.745685,9.179117,-5.861225,-5.060600,0.785647,-6.881290,0.805595,-7.895399,0.658055,-8.448367,5.675148,5.933384,-5.475080,-8.147741,7.955232,-4.318860,7.494871,0.424579,2.524430,-4.606515,-1.537886,0.429813,9.610819,0.616426,-6.275927,5.332489,4.261007,7.080174,-6.019897,-6.019377,-2.809961,6.955055,-4.944903,3.596771,-6.174961,9.171690,-5.962356,-2.045973,-6.949815,-4.346874,6.012010,-5.155514,3.923477,5.864892,-0.191156,7.333136,-8.041216,-8.943826,0.741384,-7.167271,0.170447,4.316365,-9.882858,-8.078751,8.101560,-6.126516,-0.535003,9.346715,-2.753693,5.042481,1.330877,-5.664335,9.406530,-0.330772,-9.734781,-8.537261,-0.079597,-8.913492,3.406703,-8.318668,1.888580,-6.970380,5.116067,6.883442,-2.592178,-3.110614,-6.581378], dtype = "float64")#candidate|5038|(125,)|const|float64
call_5037 = func_289_call(relay.reshape(const_5038.astype('float64'), [5, 5, 5]))
call_5039 = func_289_call(relay.reshape(const_5038.astype('float64'), [5, 5, 5]))
uop_5045 = relay.tan(call_5037.astype('float64')) # shape=(5, 5, 5)
uop_5047 = relay.tan(call_5039.astype('float64')) # shape=(5, 5, 5)
bop_5054 = relay.logical_xor(uop_5045.astype('uint32'), relay.reshape(const_5038.astype('uint32'), relay.shape_of(uop_5045))) # shape=(5, 5, 5)
bop_5057 = relay.logical_xor(uop_5047.astype('uint32'), relay.reshape(const_5038.astype('uint32'), relay.shape_of(uop_5047))) # shape=(5, 5, 5)
output = relay.Tuple([call_5021,call_5023,var_5024,call_5034,const_5035,bop_5054,])
output2 = relay.Tuple([call_5022,call_5025,var_5024,call_5036,const_5035,bop_5057,])
func_5071 = relay.Function([var_5024,], output)
mod['func_5071'] = func_5071
mod = relay.transform.InferType()(mod)
var_5072 = relay.var("var_5072", dtype = "float32", shape = (40,))#candidate|5072|(40,)|var|float32
output = func_5071(var_5072)
func_5073 = relay.Function([var_5072], output)
mutated_mod['func_5073'] = func_5073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4926_call = mod.get_global_var('func_4926')
func_4927_call = mutated_mod.get_global_var('func_4927')
call_5110 = func_4926_call()
call_5111 = func_4926_call()
func_4285_call = mod.get_global_var('func_4285')
func_4291_call = mutated_mod.get_global_var('func_4291')
var_5118 = relay.var("var_5118", dtype = "float64", shape = (112,))#candidate|5118|(112,)|var|float64
const_5119 = relay.const([-6,7,3,-5,-2,10,-10,6,-2,2,-8,-8,2,-9,-5,-8,9,8,-9,9,-2,3,-7,-3,-9,-10,7,5,-9,-4,-7,7,8,-10,-8,10,9,3,-4,7,-3,-2,7,10,2,-2,8,6,5,-5,-4,-5,2,-9,6,10,4,-10,9,-7,-7,1,10,-3,5,10,-5,-2,-2,-3,-8,-8,7,5,9,9,3,-1,-9,-8,2,-4,2,4,-9,-2,10,-1,-9,4,-10,-4,-5,6,9,8,3,-10,10,-8,-1,-5,-2,9,-5,-1,-8,-10,2,-8,-1,4,-10,8,8,-8,8,-9,2,-4,-3,-3,-10,5,-10,-2,-1,4,1,-1,10,8,-5,-8,7,5,5,-10,-3,-6,7,-4,6,-10,-10,8,2,-7,4,-5,5,10,10,-6,4,3,-2,2,5,-7,-2,-6,-2,1,-8,9,-6,5,1,-8,3,-8,10,-5,1,1,-8,8,-10,7,7,1,-7,9,8,-2,-1,-8,-2,6,-6,7,-4,5,7,-1,-10,-8,-9,-4,6,-9,-8,-6,9,-6,-8,10,-9,5,-9,-10,9,5,-7,-6,-4,-10,10,-5,-7,-4,3,7,9,9,8,-4,-1,6,7,-1,-5,-3,6,-5,-8,-9,5,4,8,1,-7,5,-5,6,-5,10,7,-6,-3,9,2,-2,-4,10,-4,-9,7,6,7,1,-10,-3,-6,1,1,-1,-8,1,-1,-5,3,3,10,-9,3,10,-3,-2,3,8,-3,-1,2,-4,-7,8,-5,-10,-2,3,-1,1,-7,4,-6,7,1,-4,-2,-8,9,8,8,-8,-9,10,-3,5,-3,3,-1,-3,-8,7,-5,-10,-2,-8,-8,-3,-7,-6,-3,2,10,-7,6,1,-7,6,5,10,-6,-8,-7,1,1,6,-10,1,-6,9,10,-7,-2,3,-9,-3,-1,1,-9,10,2,5,6,2,-4,-3,-4,-1,1,2,-7,9,5,4,2,7,1,8,7,9,-4,6,-1,4,3,6,-2,-7,-4,-2,-6,4,10,7,3,-9,-8,-5,-1,5,-5,-3,-7,-4,1,9,7,-7,5,-4,-9,5,5,-10,-7,2,5,8,8,-5,10,-8,-9,-3,8,5,8,7,-8,-2,2,-6,3,-1,8,2,1,-6,-5,-7,8,-2,-1,-2,6,3,-1,-4,-7,-5,-2,4,7,6,-8,-6,-6,-3,-7,-6,-10,-10,-2,-5,-9,3,-7,5,-4,7,5,-10,-2,-7,-9,-4,4,2,-8,2,-7,-1,1,-10,10,-10,-3,-5,5,-7,-5,-5,-5,-4,6,-2,-2,-1,10,9,-1,4,-9,-10,-3,9,8,-8,5,-7,7,-7,-4,-3,10,-4,-2,6,9,6,-4,1,-2,-4,10,-9,-1,-7,3,-1,3,3,-6,-7,-4,9,9,-10,1,-8,-7,10,-1,5,7,6,-1,-5,9,-6,-4,-3,-6,-4,8,10,8,3,6,-5,4,-5,2,4,2,6,-4,9,-9,9,-2,3,8,9,-4,7,6,4,1,-1,7,-9,4,5,8,3,4,9,-1,-5,3,-6,-3,-8,8,7,7,-10,-1,-8,-10,8,8,5,-8,-8,-2,1,-5,-2,-10,-10,-5,2,5,5,-3,-9,-2,2,-5,-10,-5,4,10,2,-7,9,-5,7,10,-5,-7,-6,1,9,-10,-4,-10,6,-8,-1,3,4,10,-7,-5,5,-9,3,9,-7,-10,6,3,3,-2,-6,-6,-2,4,-1,4,-1,7,4,-5,-6,5,-9,6,2,8,-3,-8,3,6,9,9,4,3,3,10,2,-5,-6,3,-9,5,7,8,-3,5,-4,-3,2,6,-3,7,4,8,-1,9,4,-3,-7,-1,3,4,10,-4,3,-8,-8,4,6,-3,7,-8,-6,-1,10,-3,8,10,5,10,6,6,4,-8,-6,-7,3,-1,6,1,-4,1,-2,-1,9,-6,-1,10,6,4,-9,4,-8,-2,-9,-2,-9,-8,-6,-9,2,1,-2,9,-9,10,5,1,-1,10,5,-4,5,-5,-10,-7,2,4,-8,-1,-7,6,-7,7,-9,-9,-7,9,2,4,-10,4,8,5,-2,-5,-9,3,8,-5,7,1,6,7,-4,2,3,-6,-4,6,-9,-5,2,6,7,6,7,9,7,-3,-6,-7,-1,-9,3,-10,-8,3,-4,1,4,5,-7,7,10,-7,9,7,-6,-4,4,5,1,-4,-9,-6,2,-4,-8,3,3,6,5,-1,-2,3,-10,-7,-6,-8,6,6,7,-9,1,3,-3,7,4,10,-4,9,-1,7,-9,-10,8,7,6,-10,-9,4,-2,1,-10,2,-5,-9,9,-4,10,-5,2,2,7,6,5,-9,2,4,4,5,7,8,10,6,7,-6,3,-8,2,-8,5,-5,-1,8,-7,5,-7,-1,6,-4,-7,6,10,2,-10,-8,-10,-4,4,-6,-7,4,-7,-2,2,-8,8,-1,-9,-10,-5,-6,3,-8,3,9,-7,5,-10,9,-5,-1,2,-1,6,10,4,-8,7,6,-10,-10,-10,2,-2,-1,9,-9,-5,2,6,5,-9,8,9,-5,-1,-9,-2,10,-4,-10,-1,4,1,-9,7,8,-7,3,10,-6,-5,-1,-5,-8,10,-2,8,8,1,8,-3,5,3,-5,-7,4,-5,-6,6,9,-5,8,4,-5,-5,-4,-1,8,8,7,-6,7,7,-2,-9,-10,2,8,-4,-3,-9,-9,6,4,-3,-9,-3,-2,10,-5,5,-3,-3,-4,-7,-8,-6,7,-4,-7,-4,-8,3,-9,-4,-3,-2,-7,-9,-2,10,3,6,-9,2,7,-4,-3,3,-1,-10,5,3,7,-4,10,-10,1,4,-6,8,10,-8,-3,9,-9,10,-1,7,5,-8,7,-8,3,8,6,-1,-2,-1,2,-8,-9,7,1,7,-5,-1,-4,-1,-2,-4,-9,-7,6,3,-10,-10,-9,-8,-1,6,-3,-10,-5,1,10,-6,-2,9,2,7,2,2,4,-2,6,-3,-5,3,-4,9,-10,4,-9,10,-4,7,4,-9,-9,5,1,4,3,-9,-2,2,5,-5,-8,8,-2,9,-4,6,3,9,-1,1,-10,10,9,5,-7,-8,5,-10,3,-5,-10,-10,-4,7,2,7,8,-4,-9,-1,-9,-3,7,5], dtype = "int32")#candidate|5119|(1188,)|const|int32
const_5120 = relay.const([True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True], dtype = "bool")#candidate|5120|(1560,)|const|bool
call_5117 = relay.TupleGetItem(func_4285_call(relay.reshape(var_5118.astype('float64'), [2, 7, 8]), relay.reshape(var_5118.astype('int64'), [2, 7, 8]), relay.reshape(const_5119.astype('int32'), [1188,]), relay.reshape(const_5120.astype('bool'), [780, 2]), ), 2)
call_5121 = relay.TupleGetItem(func_4291_call(relay.reshape(var_5118.astype('float64'), [2, 7, 8]), relay.reshape(var_5118.astype('int64'), [2, 7, 8]), relay.reshape(const_5119.astype('int32'), [1188,]), relay.reshape(const_5120.astype('bool'), [780, 2]), ), 2)
func_4583_call = mod.get_global_var('func_4583')
func_4587_call = mutated_mod.get_global_var('func_4587')
const_5131 = relay.const([[-9,-4,-4,3,-2,-7,5,2,-5,4,-3,10,3,-5,-7,-5,10,5,4,8,-7,2,2,-4,2,4,-10,-7,4,-3,6,7,-9,-10,10,-10,2,1,-8,10,-2,7,1,-4,-5,7,-4,9,-9,-8,-6,6,-10,9,3,-8,-6,-8,1,3,10,9,-6,-9,5,4,4,9,-10,-2,2,9,-6,-4,-10,3,10,-5,-10,3,-10,9,8,5,-8,10,-8,-7,-9,-9,9,10,4,6,-8,9,8,1,8,4,5,-6,-7,5,-4,-5,-8,4,10,8,-1,-5,7,-4,2,-10,4,-9,-1,-6],[-3,-9,6,5,-5,2,-1,6,-3,-2,-10,3,10,-4,-8,-5,-9,-4,-10,-1,-1,5,-1,10,1,2,-8,-5,9,-9,-8,-8,3,-4,-10,-1,9,2,7,6,6,9,-3,4,2,8,10,-10,9,-7,10,-9,2,-9,-5,-6,2,-7,-10,6,-4,3,-2,6,-9,-10,1,-8,-1,1,-1,-9,4,10,6,-5,4,-6,-1,8,7,8,7,10,-2,-6,-10,8,2,8,-7,10,-3,8,9,3,-3,-4,7,-2,7,-2,4,2,9,4,5,5,-10,-1,8,5,-6,-6,2,-2,6,7,3,6]], dtype = "int16")#candidate|5131|(2, 120)|const|int16
const_5132 = relay.const([3,2,5,-1,3], dtype = "uint16")#candidate|5132|(5,)|const|uint16
call_5130 = relay.TupleGetItem(func_4583_call(relay.reshape(const_5131.astype('int16'), [2, 15, 8]), relay.reshape(const_5131.astype('int16'), [2, 15, 8]), relay.reshape(const_5132.astype('uint16'), [5,]), ), 3)
call_5133 = relay.TupleGetItem(func_4587_call(relay.reshape(const_5131.astype('int16'), [2, 15, 8]), relay.reshape(const_5131.astype('int16'), [2, 15, 8]), relay.reshape(const_5132.astype('uint16'), [5,]), ), 3)
output = relay.Tuple([call_5110,call_5117,var_5118,const_5119,const_5120,call_5130,const_5131,const_5132,])
output2 = relay.Tuple([call_5111,call_5121,var_5118,const_5119,const_5120,call_5133,const_5131,const_5132,])
func_5143 = relay.Function([var_5118,], output)
mod['func_5143'] = func_5143
mod = relay.transform.InferType()(mod)
mutated_mod['func_5143'] = func_5143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5144 = relay.var("var_5144", dtype = "float64", shape = (112,))#candidate|5144|(112,)|var|float64
func_5143_call = mutated_mod.get_global_var('func_5143')
call_5145 = func_5143_call(var_5144)
output = call_5145
func_5146 = relay.Function([var_5144], output)
mutated_mod['func_5146'] = func_5146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4926_call = mod.get_global_var('func_4926')
func_4927_call = mutated_mod.get_global_var('func_4927')
call_5166 = func_4926_call()
call_5167 = func_4926_call()
output = relay.Tuple([call_5166,])
output2 = relay.Tuple([call_5167,])
func_5176 = relay.Function([], output)
mod['func_5176'] = func_5176
mod = relay.transform.InferType()(mod)
output = func_5176()
func_5177 = relay.Function([], output)
mutated_mod['func_5177'] = func_5177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5176_call = mod.get_global_var('func_5176')
func_5177_call = mutated_mod.get_global_var('func_5177')
call_5183 = relay.TupleGetItem(func_5176_call(), 0)
call_5184 = relay.TupleGetItem(func_5177_call(), 0)
func_4957_call = mod.get_global_var('func_4957')
func_4959_call = mutated_mod.get_global_var('func_4959')
const_5186 = relay.const([-2.652390,3.283387,-8.357088,4.560108,-8.495656,-4.481229,4.505019,9.611492,-7.008345,3.143416,7.116137,5.963495,3.861071,5.154624,-7.041677,-4.336511,-3.527679,-0.485902,0.727332,-4.110249,0.562940,-3.647184,-1.509069,5.715273,7.686766,-6.080341,7.477842,-1.416680,8.464017,5.765743,3.371496,-3.318316,6.592023,-0.440714,-7.263982,-8.723729,-7.620073,-8.178325,-5.132083,4.282408,7.969399,2.058541,-6.338149,9.521461,6.920763,8.484130,-2.023001,-8.187510,-3.710571,9.477749,5.990159,-4.670163,-9.033429,6.031270,-8.984058,5.831718,-6.424562,-5.580283,-7.757061,-1.552507,-8.344782,-4.839264,-7.052405,-2.028564,-2.686138,6.309140,2.278812,9.723433,3.263009,4.730707,0.079761,1.691178,9.779228,-6.571696,5.702466,2.892734,-7.272820,-3.616444,-0.555456,9.933320,-3.489408,4.737282,9.695574,-8.134067,8.207302,-3.730522,-9.967852,-0.897059,-8.815897,1.758022,5.423039,7.514833,-0.327470,-0.130620,1.433383,0.639357,2.666035,1.296517,3.461696,2.188464,0.066829,-0.463510,0.360025,0.944750,5.445742,8.037104,0.917027,7.220729,-4.929251,8.691869,6.854000,-3.503454,0.059633,9.450206,4.870506,4.290054,6.063367,-9.627087,-4.137176,-5.253756,-6.288506,-0.793757,-1.188582,2.190684,-4.634277,-8.392293,-4.104213,-8.846475,4.397653,-7.807186,-9.223451,0.917222,8.166962,-6.480783,-1.427992,-0.639091,-7.188314,-3.570116,-6.559521,1.195825,-1.837596,-3.258526,-0.175595,-9.208024,2.669342,-7.248514,-1.678025,1.426658,7.725162,9.861587,-1.259527,-2.376455,5.228054,6.109764,3.875499,-8.177703,3.805365,-9.203729,6.853863,7.692701,1.121073,-8.789373,7.450551,-7.797936,2.282005,-8.189580,0.797508,-6.822709,-1.424316,-0.918617,-5.459017,5.882738,7.009188,-5.790308,1.648890,9.582603,7.219579,-4.708563,3.536942,-5.278092,9.175551,-0.175445,8.636547,8.959912,7.374162,2.257679,-1.376763,8.527195,-4.902173,-2.983032,4.107882,3.144776,3.296072,0.737386,-1.670876,2.467738,1.475257,-4.128196,-8.338651,-1.531031,7.200912,9.026348,-8.876541,9.719481,-1.523010,-7.565722,-0.211604,2.116516,-0.687337,-1.814989,-1.657134,-3.927455,-3.282721,-2.874110,-6.805614,-7.214762,3.188297,4.054737,-6.419823,-9.107148,-6.672614,-4.781643,-0.644416,-7.612591,-4.407499,1.889181,-8.488615,-1.997443,-5.918222,0.778399,9.601709,-5.572389,4.867753,0.022543,3.539237,2.072686,-5.398123,-2.352372,4.630595,3.041930,9.716804,-8.583242,-9.062816,-7.907235,2.592620,2.128890,8.193091,1.160358,5.439183,-3.476921,0.274748,-0.731188,7.772175,-6.900730,7.797313,9.972926,2.164755,-0.250767,-1.046180,-1.858877,-0.930469,7.530573,-2.237232,3.885480,7.690967,-1.543714,5.521994,-9.222083,5.664365,1.979982,1.089704,9.084885,-3.902081,-4.264914,9.178892,-4.983641,6.641883,7.505471,3.317120,0.580121,4.778840,6.164996,0.270692,1.031040,-0.695255,4.121498,2.831094,-3.590431,1.498270,8.337912,-2.967401,-0.803335,4.919876,5.549735,-0.973313,1.616529,-4.401597,-9.545767,-8.261822,-6.397901,-6.717523,-9.786394,-6.331661,6.281838,-0.981695,-3.785131,6.193063,-0.445927,4.991421,0.934519,-3.328359,3.439888,6.622958,-1.236812,1.620816,-3.027459,2.062495,-6.833428,-5.560215,0.860553,-0.665185,1.709609,-9.116525,-9.499787,5.386905,-0.296177,-2.168402,-4.053086,7.850902,8.171811,6.871478,5.761293,3.200927,-0.868856,6.478810,-7.219421,-1.085524,7.750355,7.206813,-8.272883,1.882620,-8.923345,-7.473985,2.075262,-4.588762,-7.807332,9.825894,-4.461116,4.460323,-3.822676,-7.210002,-9.181812,-1.861847,8.804934,0.426411,-7.127361,-9.006581,-4.992622,9.903377,0.025432,8.427506,1.554562,3.792235,2.417446,-9.371727,1.144611,-6.660702,0.283938,-3.327415,-8.317039,-8.835283,-5.141470,7.140197,1.159326,3.362263,-2.536003,4.540367,0.629269,2.013757,8.664442,-6.089892,-5.338636,3.341498,9.358639,4.842944,7.258108,-5.094618,-2.075995,8.964038,-9.167941,-7.144608,7.967463,-3.820350,-2.359272,3.468663,5.997157,5.767893,-7.742012,-1.262253,-9.839020,0.922169,8.318969,6.341312,3.749743,-6.702398,9.023793,5.605840,-0.206757,1.877941,6.494412,-0.590525,-6.392580,9.745652,-5.074622,-5.138932,8.902853,4.074605,5.229116,-6.196277,1.879183,-5.890816,-8.238475,6.176130,6.927613,6.834387,7.555151,-5.104024,7.996415,-0.058016,9.934451,-2.620802,-7.995751,2.820787,9.056149,-4.267813,-6.572300,6.708814,-7.314766,0.801352,-5.774276,4.515468,9.620509,0.411795,2.683206,-5.404996,8.488369,1.292185,-2.672550,8.224247,-4.533461,-1.772395,6.087728,6.197737,-7.255632,9.981335,-4.116513,-2.889678,-1.992648,-7.224994,3.377128,-0.670962,-6.373240,-2.669045,3.175707,-9.262658,-8.401937,-7.197370,-2.469983,6.671490,7.766617,2.368433,7.199875,3.378015,-7.420315,6.394198,-9.547260,-5.223118,4.230091,-5.823759,-6.424849,1.064707,6.410710,-5.003755,2.731682,0.686721,5.638837,-3.595003,-3.048011,-5.361771,-8.034131,8.992005,-8.553741,2.735225,-0.242109,-5.570156,-9.812991,0.478977,9.117353,4.219874,-3.321967,6.600431,-0.018952,-0.455639,6.552143,9.948480,8.510587,6.278844,-2.030309,2.564317,-6.465012,2.197684,8.441240,-9.178921,2.557192,-1.388105,-6.664421,5.313078,4.108404,-2.105034,-6.584036,-2.240273,-0.734240,6.741795,-2.993248,1.614003,-9.036890,8.281243,-5.089624,2.198470,-7.800813,2.929532,0.161123,5.021146,-8.705791,-2.208131,6.101009,-2.207866,-4.052847,-8.263731,9.445598,0.428217,-9.808539,7.009032,-3.084089,-1.919000,-0.190304,-3.243140,-5.075376,7.792221,5.846436,-9.226948,-7.521181,-4.825882,-2.296543,-6.725221,-8.454537,-9.023413,-9.637582,9.029473,-9.160655,7.275000,7.586603,-2.661531,3.743248,5.176289,9.187563,3.715915,-0.409375,-6.055305,-1.327088,-5.421966,-9.872655,-6.491166,7.765274,-4.925495,2.852278,-5.620319,9.613495,5.878992,-9.976853,6.062985,-5.033772,-4.973383,-5.213041,0.523100,2.338581,5.181332,-8.326522,-1.502623,-9.022613,1.467539,9.079781,-7.185444,3.536189,2.529114,-1.541377,8.126226,-7.895862,-8.430419,5.939497,9.666370,1.604304,-2.511492,-2.324965,7.169511,8.707038,1.235868,0.928905,1.984219,7.223568,-9.463401,6.328649,-5.606728,0.207325,-7.783983,-1.449497,2.809583,5.929138,-8.166449,2.687607,-2.962592,-1.224126,1.725770,2.862525,-0.940760,4.806053,6.128484,4.691910,-5.651952,-9.454177,2.832788,5.141922,-5.992026,-8.881547,-5.795549,9.013291,7.732924,-2.457705,9.495778,2.850212,-4.812960,-5.776025,-4.599953,7.104572,5.337734,8.674626,0.149976,5.744117,4.379045,-1.226580,0.374812,-3.557288,0.543771,4.918473,1.737620,6.608264,-6.114913,3.494830,5.761010,1.635246,-2.131911,2.153873,5.618714,1.130849,-9.845663,5.075678,5.768620,-8.684233,-7.302490,0.479875,1.325878,-8.582607,5.160140,-6.422408,-3.598288,3.533290,-1.089929,-8.722917,9.452088,4.409759,5.281050,-6.665258,-4.475931,-5.569593,-8.806265,-9.642421,-7.963074,4.224079,-4.010169,-4.035520,-9.880379,3.958492,-1.110553,-7.265384,-7.517534,4.902159,-5.924000,-3.419159,5.800699,-3.457454,5.366120,9.961805,6.722631,9.783383,-8.881006,-4.391400,3.923741,6.433851,-7.569816,4.883921,1.311640,-5.643719,-1.916743,3.485022,0.917976,-8.480441,-4.744029,-2.665510,-8.568046,-2.350578,6.265731,0.487975,-3.089189,-6.800961,0.543873,8.554589,8.882608,-5.876931,6.277716,8.109632,1.743571,9.816384,0.781768,5.851757,4.583314,-0.927379,4.036989,8.771599,-1.786359,-0.919631,7.359518,2.833798,0.346395,2.727690,1.522724,-5.688509,-1.888520,-5.648987,3.058249,8.405500,0.675927,-7.591405,-0.806446,2.141599,2.583084,-4.157694,9.783659,0.979294,4.172659,0.329979,9.037374,-8.492224,2.787913,4.816071,-7.592445,8.359176,-9.107640,-4.227942,4.847577,-4.264109,1.700374,-7.670480,-9.152029,-5.413567,-9.804543,-4.246256,7.978464,6.739126,0.292308,6.314094,7.834476,-9.273684,-1.240512,-8.626646,-9.338022,0.822196,0.113204,-0.031584,8.924414,-5.194280,3.693157,-4.365761,7.463862,4.181191,-0.341886,-9.601476,-7.699235,-4.563157,-4.107673,-1.491283,9.856415,-6.710788,9.809007,-8.087528,5.335785,-2.950236,7.462422,5.252293,-1.512390,7.513538,-8.491285,9.850428,-1.611900,2.592308,-9.016425,2.209302,5.884014,2.312094,4.573693,-0.437425,-2.789618,0.233304,1.407595,-1.341788,7.475351,-7.342427,2.368752,-0.217138,9.822532,-1.479036,-2.393308,7.119328,-1.112608,-1.612665,-2.485961,-5.987379,-6.467838,-3.494699,9.112925,3.742485,3.587146,-4.602665,3.536818,-5.671950,-5.023966,7.331593,7.148939,7.024227,9.519051,2.698305,-8.899461,-1.139962,1.371932,-7.996553,1.885405,1.673497,7.762246,2.893553,5.787595,-0.506138,3.052610,-9.099995,-3.766322,-9.917565,0.230174,-3.040110,6.415891,-5.559101,3.162792,4.624413,1.578092,0.878786,-2.250330,2.469570,6.171779,-3.828796,5.009380,0.242070,-6.200647,4.887949,5.735150,7.302031,-4.718278,8.665508,-2.473455,-9.296805,2.317913,-3.219022,4.842045,1.855897,8.049854,3.118727,-4.745327,5.329630,-1.316111,9.495267,-7.894897,-8.452957,-4.979256,-3.591125,9.881219,-2.052858,1.192913,-6.317633,7.800836,0.224993,9.320793,9.136056,5.058810,-9.554446,-6.596211,4.658978,-6.637081,8.425106,8.347767,8.914026,4.253230,6.824848,3.514445,1.437259,-9.426834,0.790796,1.722771,8.273429,8.977217,-2.636476,4.646171,-0.097978,6.616186,3.728287,-5.988357,0.705519,-7.798968,-6.613198,3.022730,-8.489474,-4.987085,1.006230,9.684679,-1.725133,3.267079,-9.709369,-6.007616,-4.267960,-5.055067,-6.859303,3.777856,-5.480080,-9.875787,1.959179,-0.458946,9.326769,9.337234,-8.160676,-6.897556,-4.927222,8.996778,-6.499871,1.188862,-0.739018,-5.545160,-3.819645,-4.604600,-9.323838,3.867900,-2.327542,5.990587,-9.619176,5.350744,9.751990,8.315860,9.589212,-4.384215,-9.109516,-6.786241], dtype = "float64")#candidate|5186|(975,)|const|float64
call_5185 = relay.TupleGetItem(func_4957_call(relay.reshape(const_5186.astype('float64'), [13, 5, 15])), 0)
call_5187 = relay.TupleGetItem(func_4959_call(relay.reshape(const_5186.astype('float64'), [13, 5, 15])), 0)
var_5207 = relay.var("var_5207", dtype = "float64", shape = (13, 5, 15))#candidate|5207|(13, 5, 15)|var|float64
bop_5208 = relay.logical_or(call_5185.astype('bool'), relay.reshape(var_5207.astype('bool'), relay.shape_of(call_5185))) # shape=(13, 5, 15)
bop_5211 = relay.logical_or(call_5187.astype('bool'), relay.reshape(var_5207.astype('bool'), relay.shape_of(call_5187))) # shape=(13, 5, 15)
output = relay.Tuple([call_5183,const_5186,bop_5208,])
output2 = relay.Tuple([call_5184,const_5186,bop_5211,])
func_5212 = relay.Function([var_5207,], output)
mod['func_5212'] = func_5212
mod = relay.transform.InferType()(mod)
mutated_mod['func_5212'] = func_5212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5213 = relay.var("var_5213", dtype = "float64", shape = (13, 5, 15))#candidate|5213|(13, 5, 15)|var|float64
func_5212_call = mutated_mod.get_global_var('func_5212')
call_5214 = func_5212_call(var_5213)
output = call_5214
func_5215 = relay.Function([var_5213], output)
mutated_mod['func_5215'] = func_5215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4926_call = mod.get_global_var('func_4926')
func_4927_call = mutated_mod.get_global_var('func_4927')
call_5220 = func_4926_call()
call_5221 = func_4926_call()
func_289_call = mod.get_global_var('func_289')
func_292_call = mutated_mod.get_global_var('func_292')
const_5228 = relay.const([-9.359141,5.934360,-0.331304,-8.835854,-4.683696,-2.663277,7.788221,0.586908,-0.363024,2.693248,9.695747,-2.237873,-3.725816,-9.742728,-2.369128,1.651888,7.624141,4.966407,-0.367038,-0.627858,0.429098,-0.158398,-3.832130,0.089688,1.519731,7.736731,-1.255675,0.359454,-1.621723,-8.880182,1.719206,4.330035,9.546552,0.815986,-6.681539,-8.697251,-2.090161,-8.738576,-0.820201,7.368598,-0.375834,2.272242,-1.991662,7.528206,-9.051499,-9.536834,9.465290,-8.234279,-9.147390,-6.289165,8.277424,-0.912131,8.205768,-7.803400,-1.180819,5.199795,-2.682734,0.547127,-3.661784,5.151004,4.338316,-8.408626,3.526814,8.939291,-4.289183,-3.642212,-3.091260,-1.973452,6.272273,4.166667,-9.316091,-2.725091,6.838936,-4.075907,-2.534630,-7.895529,7.095218,6.970257,7.716142,-5.659876,-0.589090,-9.072022,3.309837,2.425232,9.603528,-9.778134,6.027796,0.101345,8.300520,-5.028732,0.290889,3.763572,-5.548723,-8.435635,1.553036,8.380924,5.147735,-1.679418,-5.362104,-1.823668,-1.040327,-6.176147,0.412220,9.550214,6.938201,4.395060,-7.368720,9.134478,0.109649,0.449808,-4.927282,-5.060901,-2.414912,-6.832772,-5.916091,-9.020885,1.676681,2.293857,-0.751632,2.261004,-4.134912,7.275826,3.543590,9.061969,-2.050391], dtype = "float64")#candidate|5228|(125,)|const|float64
call_5227 = func_289_call(relay.reshape(const_5228.astype('float64'), [5, 5, 5]))
call_5229 = func_289_call(relay.reshape(const_5228.astype('float64'), [5, 5, 5]))
func_2485_call = mod.get_global_var('func_2485')
func_2489_call = mutated_mod.get_global_var('func_2489')
const_5246 = relay.const([4.316890,-6.497494,-7.082081,2.686462,-8.228721,6.211611,5.837305,-6.341203,-3.444553,-9.257395,-0.551212,-2.120346,-0.986115,-6.849455,6.701602,7.466702,1.618398,-4.415483,1.927290,3.179211,3.652200,-8.511948,0.757269,3.165517,-9.814134,-1.298499,-4.256019,-7.787278,-9.739595,-5.280675,-3.394771,4.530417,6.465399,7.977339,7.631955,-0.636603,8.542144,6.438381,1.530415,-6.002820], dtype = "float32")#candidate|5246|(40,)|const|float32
call_5245 = relay.TupleGetItem(func_2485_call(relay.reshape(const_5246.astype('float32'), [4, 5, 2]), relay.reshape(const_5246.astype('float32'), [4, 5, 2]), ), 0)
call_5247 = relay.TupleGetItem(func_2489_call(relay.reshape(const_5246.astype('float32'), [4, 5, 2]), relay.reshape(const_5246.astype('float32'), [4, 5, 2]), ), 0)
uop_5259 = relay.rsqrt(const_5228.astype('float32')) # shape=(125,)
func_1312_call = mod.get_global_var('func_1312')
func_1316_call = mutated_mod.get_global_var('func_1316')
const_5262 = relay.const([-8,10,-3,6,1,8,-10,7,-7,-6,10,-9,-8,-6,-6,2,10,-1,6,-4,9,-3,1,9,-7,-6,-10,9,-4,7,-6,6,-10,2,8,3,5,6,-5,5,-1,-10,-6,9,4,1,-4,7,-8,9,4,-1,7,-5,2,6,-1,-4,-5,-8,-8,8,-8,5,-5,-9,-8,8,-10,8,4,-5,2,3,-4,-6,-10,6,1,-3,8,5,-6,1,-7,8,-5,-6,4,-2,-10,1,-3,9,10,10,6,4,-8,8,2,-5,-8,-3,10,-3,4,-10,2,-10,-1,-10,6,1,-7,-9,6,7,5,-8,-3,-7,4,-5,7,9,-6,9,1,5,-10,8,-8,-9,4,2,-6,-6,6,-7,7,-3,4,-6,-1,-6,7,6,-8,-2,10,-10,3,-9,7,4,-5,-6,8,-6,3,1,-6,5,9,6,1,10,-2,-3,-8,-1,-5,-1,-9,3,9,-1,-10,-10,-4,-2,2,9,10,5,8,-10,4,-5,8,-2,1,-1,10,1,8,8,-5,6,-8,3,6,8,-5,-3,-2,-10,-8,7,-4,3,2,-2,8,-4,10,4,-3,5,7,10,3,-4,1,-3,2,7,-7,2,-10,4,4,-5,10,2,10,-9,-2,-5,6,9,4,-1,6,10,10,3,2,10,10,1,5,-4,-7,-9,-9,-1,4,-7,5,-4,1,-8,7,-7,9,-8,2,-1,-3,9,9,-6,-2,-3,10,4,7,4,-2,-3,-3,-7,-5,1,1,1,-10,4,9,2,7,1,-10,7,8,-6,5,5,2,-9,5,-2,6,-10,-3,6,-8,3,-2,3,2,-2,-1,-6,-2,-5,-6,4,4,9,-4,-7,-2,2,1,-5,-5,8,3,-10,-1,-1,-3,-1,7,-4,4,5,10,-9,3,3,-10,-3,-9,7,-9,6,-1,8,-8,-1,4,8,3,6,-3,5,2,-4,2,-10,10,-4,-5,-1,7,-7,9,-8,5,10,6,9,5,8,7,-10,-8,-9,7,7,-3,-8,10,-5,-1,-10,10,5,-5,3,-3,-10,-7,5,1,9,-6,8,-2,-10,-10,10,-10,-5,7,8,1,2,-6,-4,-1,-1,-10,3,-2,7,-1,-1,-9,7,-6,-8,2,-7,-9,5,3,-4,-7,-7,10,-2,-10,-4,-1,6,8,6,-6,-10,5,-2,3,5,5,-8,7,-5,-3,5,4,1,5,-3,2,5,-1,8,-5,4,7,4,-2,-9,2,8,7,-7,9,-5,-7,10,9,2,3,3,-7,-3,8,1,10,-3,9,1,-3,-10,-7,8,10,-10,-5,-4,2,1,-1,-7,4,-8,-3,2,5,6,-2,-10,4,7,4,4,-9,5,9,-3,-3,7,-9,-4,1,-8,4,-7,-9,10,6,-9,-8,8,-6,10,1,-7,-6,-7,-1,-10,-7,3,-1,-9,-6,-5,1,-2,2,8,1,6,-6,-2,1,4,-1,2,-10,3,9,10,1,9,-8,-9,-2,-4,-1,7,-2,-8,8,7,2,5,9,-1,9,-4,-7,-6,9,9,-6,-1,-7,-1,10,-4,1,-4,-5,1,-5,3,-9,10,6,-7,6,-3,7,-10,6,-1,-3,7,10,-4,-2,-8,3,-8,-7,-3,3,6,2,8,1,-2,2,4,7,8,6,-8,-6,-2,-9,6,3,-3,9,2,1,-8,-3,-7,-2,-10,3,-9,-2,1,-6,-7,-8,-3,-2,-9,-10,5,1,4,9,4,-1,10,-4,7,6,8,-4,3,7,-8,8,10,5,3,-9,-5,-9,-6,-4,2,8,-5,4,-8,-9,10,2,-9,6,-1,8,-5,-1,-2,3,8,-8,4,9,5,-10,7,4,9,7,-3,7,4,9,4,1,-3,-5,3,9,-3,-2,1,4,4,-9,8,4,-6,1,-7,2,-3,7,10,-3,-4,-1,9,-6,-1,-1,-3,-3,10,-6,6,6,-4,5,-6,-7,3,7,5,6,-8,-5,2,9,1,10,5,7,7,-3,10,5,-8,-5,6,1,8,7,3,3,-1,-3,9,8,-4,8,1,-7,-8,3,6,9,9,6,-4,-8,-4,-3,-5,-6,2,-2,9,-1,4,10,8,-5,-7,-1,-2,6,-1,8,2,4,-9,-4,-8,3,10,3,5,7,7,-3,-6,-4,1,-5,-7,4,7,-6,6,-8,-5,6,-7,1,8,4,4,5,1,8,-10,5,2,-4,-3,5,-1,7,2,3,-4,8,-6,-5,2,8,6,1,7,6,-8,-5,2,9,1,-5,-1,-5,5,-6,3,-3,7,9,-9,-3,10,8,-1,-5,8,-9,5,6,4,-9,5,-10,-5,-8,7,-3,-1,-6,-7,7,5,6,10,9,5,-4,1,-7,-4,3,8,6,-7,4,-5,1,8,9,-9,-3,10,7,3,10,-8,-7,-10,-8,7,-3,2,4,1,-10,-6,7,2,7,-9,-1,1,5,-2,8,-4,2,5,8,1,-8,-10,-1,2,-10,-9,8,-10,9,6,1,-8,-8,9,1,-3,-7,8,7,-7,9,-7,-6,-1,-9,4,-9,-5,7,2,-5,9,-9,-9,-4,-3,-2,1,-9,3,-3,10,-9,-10,8,-4,-6,3,9,2,-8,-8,7,-8,-4,-6,8,-9,-10,3,1,-1,10,2,7,5,-9,8,4,2,-7,-7,4,-1,-4,-4,-2,4,10,3,2,-3,-3,-6,-6,-7,9,-9,-9,-9,7,-10,8,-2,1,-6,-5,3,9,-7,2,-2,-7,5,-3,10,10,10,-5,-6,6,-1,-10,-9,6,8,9,10,-2,1,-1,-7,3,9,-10,8,9,-8,-4,10,4,-9,-9,-8,-3,-10,2,-5,7,-6,-9,2,4,8,7,-9,7,4,8,-1,-3,-7,-8,-3,-6,-1,-1,-4,-1,4,-10,8,2,7,6,-3,7,-5,2,-2,-6,5,6,-4,-4,6,1,3,-8,5,8,-2,-10,2,4,2,8,9,1,-2,2,-8,2,8,2,3,-1,-5,-3,-3,-2,8,6,-6,3,-9,4,7,9,-7,9,10,-8,-1,3,-9,-2,-7,-6,-5,-10,1,-2,-1,4,-1,-9,-4,-8,-7,10,-8,-3,-1,9,-6,-10,3,7,-2,-2,-5,6,8,-4,-4,9,9,8,-8], dtype = "int32")#candidate|5262|(1188,)|const|int32
call_5261 = relay.TupleGetItem(func_1312_call(relay.reshape(const_5262.astype('int32'), [11, 9, 12]), relay.reshape(const_5262.astype('int32'), [11, 9, 12]), ), 0)
call_5263 = relay.TupleGetItem(func_1316_call(relay.reshape(const_5262.astype('int32'), [11, 9, 12]), relay.reshape(const_5262.astype('int32'), [11, 9, 12]), ), 0)
uop_5273 = relay.cos(call_5220.astype('float32')) # shape=(12, 16, 13)
uop_5275 = relay.cos(call_5221.astype('float32')) # shape=(12, 16, 13)
uop_5282 = relay.tan(uop_5259.astype('float64')) # shape=(125,)
func_4583_call = mod.get_global_var('func_4583')
func_4587_call = mutated_mod.get_global_var('func_4587')
var_5287 = relay.var("var_5287", dtype = "int16", shape = (8, 30))#candidate|5287|(8, 30)|var|int16
var_5288 = relay.var("var_5288", dtype = "uint16", shape = (5, 1))#candidate|5288|(5, 1)|var|uint16
call_5286 = relay.TupleGetItem(func_4583_call(relay.reshape(var_5287.astype('int16'), [2, 15, 8]), relay.reshape(var_5287.astype('int16'), [2, 15, 8]), relay.reshape(var_5288.astype('uint16'), [5,]), ), 6)
call_5289 = relay.TupleGetItem(func_4587_call(relay.reshape(var_5287.astype('int16'), [2, 15, 8]), relay.reshape(var_5287.astype('int16'), [2, 15, 8]), relay.reshape(var_5288.astype('uint16'), [5,]), ), 6)
uop_5291 = relay.sqrt(uop_5282.astype('float64')) # shape=(125,)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
var_5296 = relay.var("var_5296", dtype = "float32", shape = (840,))#candidate|5296|(840,)|var|float32
call_5295 = func_147_call(relay.reshape(var_5296.astype('float32'), [12, 14, 5]))
call_5297 = func_147_call(relay.reshape(var_5296.astype('float32'), [12, 14, 5]))
func_5071_call = mod.get_global_var('func_5071')
func_5073_call = mutated_mod.get_global_var('func_5073')
call_5302 = relay.TupleGetItem(func_5071_call(relay.reshape(const_5246.astype('float32'), [40,])), 4)
call_5303 = relay.TupleGetItem(func_5073_call(relay.reshape(const_5246.astype('float32'), [40,])), 4)
var_5304 = relay.var("var_5304", dtype = "float32", shape = (125,))#candidate|5304|(125,)|var|float32
bop_5305 = relay.equal(uop_5259.astype('bool'), relay.reshape(var_5304.astype('bool'), relay.shape_of(uop_5259))) # shape=(125,)
uop_5308 = relay.log10(uop_5291.astype('float64')) # shape=(125,)
output = relay.Tuple([call_5227,call_5245,const_5246,call_5261,const_5262,uop_5273,call_5286,var_5287,var_5288,call_5295,var_5296,call_5302,bop_5305,uop_5308,])
output2 = relay.Tuple([call_5229,call_5247,const_5246,call_5263,const_5262,uop_5275,call_5289,var_5287,var_5288,call_5297,var_5296,call_5303,bop_5305,uop_5308,])
func_5313 = relay.Function([var_5287,var_5288,var_5296,var_5304,], output)
mod['func_5313'] = func_5313
mod = relay.transform.InferType()(mod)
var_5314 = relay.var("var_5314", dtype = "int16", shape = (8, 30))#candidate|5314|(8, 30)|var|int16
var_5315 = relay.var("var_5315", dtype = "uint16", shape = (5, 1))#candidate|5315|(5, 1)|var|uint16
var_5316 = relay.var("var_5316", dtype = "float32", shape = (840,))#candidate|5316|(840,)|var|float32
var_5317 = relay.var("var_5317", dtype = "float32", shape = (125,))#candidate|5317|(125,)|var|float32
output = func_5313(var_5314,var_5315,var_5316,var_5317,)
func_5318 = relay.Function([var_5314,var_5315,var_5316,var_5317,], output)
mutated_mod['func_5318'] = func_5318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5176_call = mod.get_global_var('func_5176')
func_5177_call = mutated_mod.get_global_var('func_5177')
call_5337 = relay.TupleGetItem(func_5176_call(), 0)
call_5338 = relay.TupleGetItem(func_5177_call(), 0)
func_3552_call = mod.get_global_var('func_3552')
func_3556_call = mutated_mod.get_global_var('func_3556')
const_5340 = relay.const([[False,False,True,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,False,True,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,False,False,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True],[False,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False]], dtype = "bool")#candidate|5340|(2, 780)|const|bool
call_5339 = relay.TupleGetItem(func_3552_call(relay.reshape(const_5340.astype('bool'), [10, 13, 12]), relay.reshape(const_5340.astype('bool'), [10, 13, 12]), ), 0)
call_5341 = relay.TupleGetItem(func_3556_call(relay.reshape(const_5340.astype('bool'), [10, 13, 12]), relay.reshape(const_5340.astype('bool'), [10, 13, 12]), ), 0)
output = relay.Tuple([call_5337,call_5339,const_5340,])
output2 = relay.Tuple([call_5338,call_5341,const_5340,])
func_5344 = relay.Function([], output)
mod['func_5344'] = func_5344
mod = relay.transform.InferType()(mod)
output = func_5344()
func_5345 = relay.Function([], output)
mutated_mod['func_5345'] = func_5345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5176_call = mod.get_global_var('func_5176')
func_5177_call = mutated_mod.get_global_var('func_5177')
call_5349 = relay.TupleGetItem(func_5176_call(), 0)
call_5350 = relay.TupleGetItem(func_5177_call(), 0)
func_1052_call = mod.get_global_var('func_1052')
func_1056_call = mutated_mod.get_global_var('func_1056')
var_5361 = relay.var("var_5361", dtype = "int8", shape = (384,))#candidate|5361|(384,)|var|int8
var_5362 = relay.var("var_5362", dtype = "float32", shape = (840,))#candidate|5362|(840,)|var|float32
call_5360 = relay.TupleGetItem(func_1052_call(relay.reshape(var_5361.astype('int8'), [4, 12, 8]), relay.reshape(var_5361.astype('int8'), [4, 12, 8]), relay.reshape(var_5362.astype('float32'), [840,]), ), 1)
call_5363 = relay.TupleGetItem(func_1056_call(relay.reshape(var_5361.astype('int8'), [4, 12, 8]), relay.reshape(var_5361.astype('int8'), [4, 12, 8]), relay.reshape(var_5362.astype('float32'), [840,]), ), 1)
func_571_call = mod.get_global_var('func_571')
func_574_call = mutated_mod.get_global_var('func_574')
const_5376 = relay.const([3,9,-8,7,-7], dtype = "uint16")#candidate|5376|(5,)|const|uint16
call_5375 = func_571_call(relay.reshape(const_5376.astype('uint16'), [1, 5]))
call_5377 = func_571_call(relay.reshape(const_5376.astype('uint16'), [1, 5]))
output = relay.Tuple([call_5349,call_5360,var_5361,var_5362,call_5375,const_5376,])
output2 = relay.Tuple([call_5350,call_5363,var_5361,var_5362,call_5377,const_5376,])
func_5380 = relay.Function([var_5361,var_5362,], output)
mod['func_5380'] = func_5380
mod = relay.transform.InferType()(mod)
mutated_mod['func_5380'] = func_5380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5380_call = mutated_mod.get_global_var('func_5380')
var_5382 = relay.var("var_5382", dtype = "int8", shape = (384,))#candidate|5382|(384,)|var|int8
var_5383 = relay.var("var_5383", dtype = "float32", shape = (840,))#candidate|5383|(840,)|var|float32
call_5381 = func_5380_call(var_5382,var_5383,)
output = call_5381
func_5384 = relay.Function([var_5382,var_5383,], output)
mutated_mod['func_5384'] = func_5384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4926_call = mod.get_global_var('func_4926')
func_4927_call = mutated_mod.get_global_var('func_4927')
call_5407 = func_4926_call()
call_5408 = func_4926_call()
output = call_5407
output2 = call_5408
func_5419 = relay.Function([], output)
mod['func_5419'] = func_5419
mod = relay.transform.InferType()(mod)
mutated_mod['func_5419'] = func_5419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5419_call = mutated_mod.get_global_var('func_5419')
call_5420 = func_5419_call()
output = call_5420
func_5421 = relay.Function([], output)
mutated_mod['func_5421'] = func_5421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4926_call = mod.get_global_var('func_4926')
func_4927_call = mutated_mod.get_global_var('func_4927')
call_5439 = func_4926_call()
call_5440 = func_4926_call()
uop_5441 = relay.sin(call_5439.astype('float32')) # shape=(12, 16, 13)
uop_5443 = relay.sin(call_5440.astype('float32')) # shape=(12, 16, 13)
func_1682_call = mod.get_global_var('func_1682')
func_1685_call = mutated_mod.get_global_var('func_1685')
const_5465 = relay.const([[True,False,False,True,False,True,False,False,False,False,False,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False],[True,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False],[True,False,True,True,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True],[True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False],[False,True,True,True,False,False,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False]], dtype = "bool")#candidate|5465|(5, 104)|const|bool
call_5464 = func_1682_call(relay.reshape(const_5465.astype('bool'), [13, 5, 8]))
call_5466 = func_1682_call(relay.reshape(const_5465.astype('bool'), [13, 5, 8]))
func_4583_call = mod.get_global_var('func_4583')
func_4587_call = mutated_mod.get_global_var('func_4587')
var_5468 = relay.var("var_5468", dtype = "int16", shape = (240,))#candidate|5468|(240,)|var|int16
const_5469 = relay.const([[10,3,-4,-10,-6]], dtype = "uint16")#candidate|5469|(1, 5)|const|uint16
call_5467 = relay.TupleGetItem(func_4583_call(relay.reshape(var_5468.astype('int16'), [2, 15, 8]), relay.reshape(var_5468.astype('int16'), [2, 15, 8]), relay.reshape(const_5469.astype('uint16'), [5,]), ), 5)
call_5470 = relay.TupleGetItem(func_4587_call(relay.reshape(var_5468.astype('int16'), [2, 15, 8]), relay.reshape(var_5468.astype('int16'), [2, 15, 8]), relay.reshape(const_5469.astype('uint16'), [5,]), ), 5)
func_1286_call = mod.get_global_var('func_1286')
func_1290_call = mutated_mod.get_global_var('func_1290')
const_5472 = relay.const([[6,-9,4,-1,-3,-10],[4,4,-9,-5,-1,-4],[6,-10,5,5,-1,-10],[8,-9,-2,-7,-5,10],[9,-1,-2,7,-8,-1],[8,-6,-2,-2,-10,1],[-10,-10,-1,-8,-8,3],[1,-10,-9,-4,8,-4],[6,3,8,8,4,2],[-8,8,-9,-8,10,-3],[-10,6,7,-10,-7,-9],[-7,-3,-6,-6,5,-4],[4,-7,1,-5,-7,1],[-2,-8,-2,-6,-5,9],[5,-10,9,7,6,-8],[-3,10,-4,5,1,-7],[-10,3,-1,9,-6,-6],[-10,8,6,3,-1,-1],[-5,2,-8,1,1,5],[4,8,2,-7,-9,-10],[-5,8,7,4,6,8],[-5,3,-2,-8,4,-8],[-3,1,-4,-9,-6,-6],[6,7,-5,9,-5,-6],[3,-5,1,3,10,8],[-5,-4,5,5,1,-5],[-6,-8,9,10,-1,8],[8,-8,3,4,-4,-10],[10,10,5,2,10,-4],[8,-10,7,-1,-9,-3],[6,2,-8,6,-6,-3],[-2,4,-5,-4,4,-1],[1,-8,-2,3,-10,7],[7,-6,-2,4,4,-9],[-10,-1,6,-5,-6,9],[6,8,-9,2,10,9]], dtype = "int16")#candidate|5472|(36, 6)|const|int16
call_5471 = relay.TupleGetItem(func_1286_call(relay.reshape(const_5472.astype('int16'), [6, 4, 9]), relay.reshape(const_5472.astype('int16'), [6, 4, 9]), ), 0)
call_5473 = relay.TupleGetItem(func_1290_call(relay.reshape(const_5472.astype('int16'), [6, 4, 9]), relay.reshape(const_5472.astype('int16'), [6, 4, 9]), ), 0)
output = relay.Tuple([uop_5441,call_5464,const_5465,call_5467,var_5468,const_5469,call_5471,const_5472,])
output2 = relay.Tuple([uop_5443,call_5466,const_5465,call_5470,var_5468,const_5469,call_5473,const_5472,])
func_5482 = relay.Function([var_5468,], output)
mod['func_5482'] = func_5482
mod = relay.transform.InferType()(mod)
mutated_mod['func_5482'] = func_5482
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5483 = relay.var("var_5483", dtype = "int16", shape = (240,))#candidate|5483|(240,)|var|int16
func_5482_call = mutated_mod.get_global_var('func_5482')
call_5484 = func_5482_call(var_5483)
output = call_5484
func_5485 = relay.Function([var_5483], output)
mutated_mod['func_5485'] = func_5485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5344_call = mod.get_global_var('func_5344')
func_5345_call = mutated_mod.get_global_var('func_5345')
call_5505 = relay.TupleGetItem(func_5344_call(), 0)
call_5506 = relay.TupleGetItem(func_5345_call(), 0)
output = relay.Tuple([call_5505,])
output2 = relay.Tuple([call_5506,])
func_5513 = relay.Function([], output)
mod['func_5513'] = func_5513
mod = relay.transform.InferType()(mod)
output = func_5513()
func_5514 = relay.Function([], output)
mutated_mod['func_5514'] = func_5514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4926_call = mod.get_global_var('func_4926')
func_4927_call = mutated_mod.get_global_var('func_4927')
call_5649 = func_4926_call()
call_5650 = func_4926_call()
output = call_5649
output2 = call_5650
func_5666 = relay.Function([], output)
mod['func_5666'] = func_5666
mod = relay.transform.InferType()(mod)
mutated_mod['func_5666'] = func_5666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5666_call = mutated_mod.get_global_var('func_5666')
call_5667 = func_5666_call()
output = call_5667
func_5668 = relay.Function([], output)
mutated_mod['func_5668'] = func_5668
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5673 = relay.const([[[-0.526876,3.156942,-9.300453,8.477632,0.639757,5.208930,-1.843835,4.147157],[-8.837577,-8.838176,9.577442,-7.987831,6.817940,-8.895380,-5.532292,-0.360831],[-1.737287,-8.769044,0.975688,-3.481915,-5.176359,6.543589,-3.542790,8.846486],[-4.391896,-5.563642,-4.584803,4.424331,0.909235,7.570881,3.452797,-4.072201],[4.173920,1.122705,3.487563,9.079211,6.341670,-5.061713,9.932894,-1.683645],[7.318032,-1.554923,-7.975530,-8.937370,1.208757,2.351153,7.159112,-7.266661],[-4.956837,-7.309882,-8.203512,-0.941698,-3.311973,7.235485,-1.079631,3.428739],[0.287510,0.395023,9.425660,3.722148,9.837827,-0.343876,-0.248193,9.663966],[-0.789554,-7.281316,-3.075464,-7.523431,8.180017,-0.659582,-9.185207,-7.577353],[1.620310,8.335890,8.726639,-4.442353,0.934966,8.880831,6.715845,1.185507],[-6.557845,-1.952586,-6.415770,9.944558,4.806661,9.723635,-1.576038,6.898296],[1.847453,-7.529680,2.756736,5.059258,0.582459,-8.791176,7.438477,-1.410405],[-4.278132,-1.352296,-6.889943,-9.865606,-6.919513,4.689589,2.478036,-3.178107]],[[2.628615,5.223239,0.950734,4.944942,-2.095807,-3.568601,5.356132,8.521294],[0.382082,-1.807967,-7.194650,5.724618,-6.081561,4.568896,0.173363,-1.845426],[-0.014228,1.213178,-6.719425,0.078467,6.354877,5.501449,-6.404762,-3.337418],[-4.564141,5.741602,9.035098,5.742561,9.016747,-4.032926,0.300083,8.772118],[-8.415377,0.884369,-2.987355,4.686912,-0.067191,-3.813884,-4.661553,9.539487],[-5.227546,0.136564,5.827504,7.579459,8.704161,-7.188909,6.888386,-7.282482],[-4.588408,-0.289079,-1.810317,-4.896803,-3.957367,-2.375103,3.666422,-9.389415],[-8.940929,-0.241651,-9.483464,1.071203,9.580096,-7.268242,5.772728,-4.012863],[8.870308,-3.177197,7.901590,-9.914524,-5.575671,-0.467789,-4.399524,1.241831],[-2.398350,3.892677,0.850090,-9.337762,-5.230039,9.471998,4.682432,6.968658],[4.111672,0.816502,7.541682,-6.130976,-3.616461,0.909562,7.202481,9.042984],[-5.007336,0.478038,5.575232,-5.268477,-9.356188,-5.570118,-0.879829,-7.092860],[9.638405,-3.941939,-2.356339,-7.215441,3.814634,4.770904,-3.474218,-6.865658]],[[3.510377,2.943874,7.358576,-7.724753,2.457914,8.688083,6.953078,7.777960],[4.169408,8.378589,1.436460,-3.920251,2.132149,6.046471,7.522382,7.013027],[0.712431,7.748440,-1.413254,7.834158,-2.387646,0.073216,-8.217835,6.517931],[-8.196655,7.269086,-3.718815,-4.683260,-1.504151,-9.483582,7.065212,-2.070630],[-7.696135,8.525838,-8.001997,-2.359836,-1.123118,-5.100518,2.469100,-5.937600],[-9.963851,0.126739,-1.396394,-5.519009,9.782991,-4.083709,-8.945411,-6.255475],[-2.540478,-1.767626,-3.319703,-7.158107,-3.719393,8.810886,-1.488531,-7.506200],[-8.553511,8.543868,4.556885,1.293991,-2.675480,-9.064400,-7.701236,3.777578],[-7.134297,2.347662,1.674509,2.267154,-9.046254,1.341383,1.339635,6.035053],[1.929358,-4.196030,3.123756,7.071728,0.052315,-9.999127,-3.371728,-3.650646],[6.226376,0.200781,6.473889,3.562347,-9.030391,-6.612320,-0.592477,9.514371],[4.983139,-8.886422,8.428060,-3.897167,3.435740,-6.882712,1.931147,8.725074],[0.839809,4.062799,8.962073,-3.729044,3.700646,0.670872,1.168140,9.533237]],[[-2.720992,3.847400,2.035455,-8.753793,-4.436676,0.397338,-3.345038,1.123218],[4.000608,-6.127582,4.624100,-1.943020,-2.871760,-3.396488,-5.701975,-4.888097],[1.380078,-1.436557,9.693561,-1.439261,-1.980484,2.039990,-0.567704,-7.133311],[7.087706,-3.556228,1.727601,2.848174,9.061784,5.571534,2.693834,-9.638051],[4.453503,-3.710849,-4.222901,2.568346,-0.934108,9.281228,5.951167,-6.178057],[-9.668493,0.293748,-6.687049,3.623012,-2.927566,9.798617,-4.370556,-9.864922],[5.673420,7.528210,4.264782,-7.377049,4.478585,-8.234465,3.586826,-1.213677],[-0.395870,0.919461,-3.359588,-4.427535,-2.934988,1.912597,7.589867,-8.074341],[-6.893807,-0.419890,-0.564232,4.179572,-1.580170,-2.234171,-2.332285,-3.034109],[-5.620931,4.235794,-0.737515,2.796532,-3.615666,-3.425129,7.746171,-0.173012],[-9.720255,7.126946,6.045114,-0.005216,2.899215,1.163911,0.530113,-2.911809],[9.543584,2.384964,0.610639,-7.208918,3.551903,7.359271,-9.515978,-9.840666],[5.882056,5.263504,-3.015862,-1.088789,4.423420,0.106880,1.852142,-4.487796]],[[-2.968305,8.214309,4.205410,8.355987,-4.628301,7.555974,-0.799734,4.609242],[9.405767,-3.486505,-4.334258,7.921577,-3.709306,6.596687,-5.627927,-4.668990],[8.431347,-7.101818,-3.846882,1.720089,7.454273,4.282935,-3.809905,6.089120],[0.475615,3.288067,-3.067638,4.267461,8.295171,7.704106,7.718365,-4.825887],[2.878567,2.284832,-9.308377,-1.548631,8.217429,4.069649,-1.643722,3.098803],[-5.098401,3.288749,-6.335903,9.300585,7.955219,2.250646,9.883917,5.105217],[1.628306,-6.267489,1.492356,5.875157,-1.421188,-4.817689,1.557988,-3.778972],[-4.895113,-0.442710,1.554238,7.209869,-1.224377,7.453670,-4.571463,-8.222097],[1.236705,-5.844597,7.467977,1.810238,-3.150715,-9.018964,7.030221,-9.348945],[0.851557,-5.994005,-3.848835,7.738653,0.942893,-9.487972,-6.954707,8.402132],[9.621831,-6.471416,7.280474,-2.489379,-4.829275,1.269619,-6.543906,2.353144],[-0.514187,-3.787730,7.288581,-7.395401,-3.359348,2.662831,9.072932,-6.264028],[-2.163363,-6.058269,-4.218281,9.770989,8.875842,-8.037867,-8.033421,0.008394]],[[-6.712262,-4.059159,-2.366813,-3.831359,8.703917,5.460480,-6.165932,-4.876084],[-7.232480,-8.777172,4.192008,1.052561,-8.801323,-9.530017,-3.039064,7.311307],[1.523388,-1.372766,-2.201577,-8.059498,-2.260651,9.498827,6.446541,8.639279],[-7.379271,-0.543782,-3.237826,-3.340125,-1.123858,5.975653,8.269027,9.959874],[-8.215597,-6.754893,-6.978041,3.997647,-6.252609,2.841989,-8.049950,8.944855],[-8.572263,-8.965568,-4.539432,1.337493,-2.915780,3.609416,9.321953,-9.061577],[-0.003490,2.088079,-6.213213,-3.013364,2.269636,-9.309598,-0.460312,-7.020541],[-1.549744,7.114374,1.982355,3.926657,-4.811243,5.626972,5.820845,0.741394],[-4.889846,-2.367239,7.936596,6.797389,-7.553133,-6.806422,-5.328612,7.579922],[-6.391200,2.871677,0.775991,7.820586,0.763752,2.276956,-6.398049,-9.724389],[5.461101,5.062607,4.805186,9.435499,1.362419,0.045178,-2.178555,-7.087227],[3.613590,0.075465,-0.017528,-3.431611,9.454647,-2.248943,3.035420,9.325109],[2.989566,3.425081,5.764150,-2.514521,8.035825,-1.415321,-8.851847,-4.446267]],[[-3.028804,-5.002971,-9.189508,-7.393914,-6.282966,2.512455,-4.052476,2.000349],[-6.458389,-4.470075,4.246479,-2.851437,-1.921223,3.333822,2.928544,8.074360],[5.003593,-5.406130,-7.847280,7.773710,2.027067,-5.372534,5.459493,1.807499],[0.704325,-6.864022,-3.937007,3.813706,8.647871,6.279682,-0.523394,4.953573],[-5.445422,2.257185,-6.095582,4.469602,3.762269,7.621367,0.065862,-2.434028],[2.717398,-2.394037,2.876964,-0.989391,-0.775810,3.426017,-2.113990,-8.216747],[-8.594800,-5.225250,-2.852639,-7.245111,3.615905,2.992499,-5.287842,3.509118],[-8.822171,8.190743,2.732261,-5.779677,4.942525,-9.701113,-5.092681,-0.834099],[-8.622184,-4.608445,5.701057,1.891662,-7.488037,8.243255,-5.644688,-9.763112],[-4.094388,8.103388,-1.104422,3.502762,7.481481,1.040915,-7.593378,1.973212],[-4.676676,-3.714522,-8.264086,9.632418,-2.119600,-9.714139,0.986498,0.685910],[-4.438125,-7.901157,-6.200933,0.150627,3.091083,-6.449608,-7.038031,3.125978],[5.822904,-4.521561,7.537407,-0.579430,5.875205,-1.457502,-7.994669,-2.256047]],[[-6.228539,9.309637,8.199294,6.050154,7.699813,-0.248771,0.431185,0.538543],[4.265412,-8.748158,1.001153,-8.312342,8.482668,4.280306,-2.849066,2.890923],[-9.608358,-8.621051,0.029125,2.523865,4.811645,-7.473569,0.181941,9.066147],[-8.659911,9.044445,-8.390138,-3.135092,-6.949008,4.991449,0.193518,-9.794901],[9.914674,0.709151,-3.745638,-4.030627,6.535304,-3.390080,-4.039554,2.286331],[9.785391,-2.867893,1.955746,-1.907610,-5.541696,-9.453887,-3.289727,-3.402934],[5.101920,-5.381761,-3.527029,5.728867,4.915178,-8.132882,9.940081,-7.316698],[-5.300384,5.110485,0.238364,0.125600,2.785565,-2.925801,-8.570647,-1.297167],[-1.250103,7.857727,0.884029,-2.119201,-0.727883,-2.286627,7.206337,5.801508],[8.456545,4.631576,-2.962040,-2.002535,-6.890779,3.374536,2.958357,2.525758],[-6.446339,-9.359842,2.400719,-4.221895,1.301263,-5.396425,-0.047268,-4.692946],[-4.709308,-6.209614,5.016635,-8.412081,8.229237,-0.107725,2.330235,1.011830],[1.121335,8.030380,-3.768325,-2.125312,-1.329578,-2.948749,-2.646340,-4.449789]],[[-7.014213,4.021087,-6.162757,-8.517726,3.062346,-3.111543,-5.805710,-1.535434],[-8.824224,-2.733527,-7.998576,-6.553453,6.785526,0.092436,-4.421072,-6.147815],[-4.113227,-5.441390,-8.359386,0.835301,4.527932,-2.314986,1.198116,7.767084],[1.148616,-5.146847,4.298721,-4.118943,-5.396067,-8.007531,-5.858250,3.095535],[0.707764,0.234795,-7.600568,2.988370,-5.586506,3.285108,6.421228,7.528427],[0.878089,-8.840063,9.649542,5.104670,-4.912081,-8.678658,3.050967,1.028015],[3.129311,-1.619565,5.032332,3.452445,1.092000,3.779749,-1.368715,1.267959],[3.120473,-8.547679,7.436308,-9.755092,9.632765,-4.187403,-4.520296,2.755580],[-7.757302,-0.399246,-3.714120,5.393481,-7.660078,-7.319549,-8.131280,-3.582826],[2.670088,-2.913507,5.335007,-9.059903,7.774577,6.174351,-8.973643,1.706963],[-2.552420,6.636314,4.185312,-5.603461,6.768873,-4.870714,4.311108,9.531900],[8.446115,2.538260,-7.345053,-1.489268,-2.938109,-1.500460,-5.514785,3.003926],[7.467737,7.141440,1.885540,-5.904034,-5.634509,-7.523425,-8.455183,-4.940167]],[[1.897359,-7.562533,5.298080,1.454321,-9.267083,8.709649,5.524840,0.247017],[9.899101,-9.891109,-9.595180,5.653267,6.263887,-0.676801,-4.684651,-5.451061],[-6.253170,6.598106,0.918074,7.616783,-3.498283,-8.506762,9.951211,-8.126303],[1.069636,-0.104753,-8.947005,-2.575622,8.133439,2.645693,-7.830365,-0.354202],[-5.036634,-9.415872,-9.786738,5.738806,-6.874268,4.291577,4.848615,-8.010407],[-0.361821,-1.823506,4.924031,-8.877502,-5.949798,-2.186086,9.613265,5.002352],[-6.053235,2.057009,-2.738608,-3.529892,5.720367,-7.069828,0.722577,6.959199],[2.797822,-8.015598,-2.958538,-5.683305,-7.064639,3.239790,9.107187,7.030155],[0.603997,-8.163956,6.828478,-6.692172,-0.328242,6.764204,-5.302477,2.562915],[2.552028,-8.199634,6.643554,-6.752737,0.027350,9.880923,-3.191015,-1.255421],[-6.236431,4.464543,0.785853,-7.439677,0.907908,-7.935261,-4.947335,4.751933],[0.722747,2.966266,-4.749223,9.079616,-6.828413,-3.321519,9.668668,-9.770336],[-7.396014,-1.769390,9.245076,9.124464,-9.917518,-9.950848,-2.424155,-6.725059]],[[5.560474,-9.524718,2.664255,1.328524,-3.140840,1.936468,4.207581,8.898422],[2.164332,6.117751,-0.513273,2.774326,-0.319364,3.004345,-9.235933,3.222178],[-5.044996,1.899276,7.512334,8.457309,0.876536,9.440379,-3.640822,-9.015349],[-9.552328,-1.781960,-0.481425,-8.679944,-2.274845,7.617616,0.405959,-9.031328],[-2.955600,-9.485493,6.214555,-6.162921,-2.694084,5.748084,-9.842354,-0.771340],[0.758305,-1.892998,7.799593,4.860846,-0.183284,-2.100811,1.653039,0.123617],[-4.092936,4.339711,7.766970,-6.286559,1.078007,-2.729158,6.582698,9.439039],[-8.170418,3.900209,-3.934160,4.817992,1.731642,-3.128282,-2.933415,2.358308],[8.214488,-6.341443,-7.127566,-7.442032,-1.447807,5.824985,-2.736711,9.124192],[-9.612139,-0.196271,5.894109,-8.832084,7.268672,7.747609,-1.696488,-8.679186],[0.115080,8.143313,-6.095558,5.959886,-1.758593,-3.220343,5.411938,3.419164],[-8.386940,-1.094126,9.790815,8.766424,-2.963590,8.374110,8.355130,-0.344712],[-5.346872,-6.766424,-2.831848,-4.702603,-4.301070,0.704332,-2.831798,-0.005436]],[[-7.577346,-3.591210,8.806205,-0.884271,-5.482420,-8.858715,9.921577,-2.458905],[-0.785216,-3.098139,-2.879060,-4.384092,-3.665860,8.720280,-8.977277,0.645168],[-9.964269,0.006050,2.079063,7.061125,6.748479,2.510461,6.229035,-8.432204],[-9.799637,-1.827891,3.086367,-4.846577,-0.084776,-0.002420,9.508523,4.376544],[5.378424,8.994811,-9.256649,-9.023707,-7.564321,-7.911098,2.777286,-1.711816],[-8.448382,4.683632,3.551817,4.777248,7.184413,-0.240043,3.270708,-9.433239],[-6.165132,-8.680715,5.182723,-9.786612,-5.566959,3.911471,-9.705712,-5.925520],[-7.818132,-3.598003,6.370223,9.520760,-6.168913,9.366894,7.365437,-6.751829],[9.123309,-9.630965,-2.207254,-1.912317,4.770602,-7.206726,9.478177,-0.567985],[-1.175346,5.532362,-5.081996,-1.872531,2.977108,2.121449,-3.339130,-7.033328],[-4.303437,-0.815914,-2.136430,5.746425,-4.410199,6.282464,-4.633556,0.242101],[-2.317560,-0.016750,9.527302,3.101149,-4.969788,3.875957,3.526228,-4.758946],[-0.834464,-2.222624,-3.704101,-3.209574,9.393745,-8.467534,-2.582309,9.102724]],[[7.391817,5.482059,-0.667206,1.553425,9.467357,2.764725,-0.008773,-3.120472],[-4.818081,1.719495,6.442674,2.604134,8.522946,-0.516169,9.106693,3.085720],[-6.064858,1.751885,8.098403,4.311916,2.762846,9.090205,2.725715,-5.959012],[-4.713927,-6.580379,-0.416769,1.729900,3.044090,7.400212,4.404509,2.374195],[9.382612,-8.175826,0.402879,-0.502517,3.782802,8.680700,2.205502,-3.159126],[5.836138,2.534741,1.115189,-9.797120,3.282455,6.235203,-7.457119,-3.902624],[-4.507556,-1.511810,-8.939011,-4.557925,1.627982,-4.796255,-7.706484,-6.686076],[2.563542,6.809772,-7.159484,-3.539401,2.576988,-4.628093,-7.063891,3.537254],[-4.498574,8.506872,-0.669710,-1.897942,9.035941,6.175728,9.120315,7.520141],[4.503852,9.156325,-0.395703,8.848756,-4.998402,8.867842,-1.886671,1.488237],[8.374332,-4.758567,-5.094605,0.764220,5.730435,8.638661,-3.155707,-7.175929],[0.351640,-0.047715,0.721268,7.135643,1.456999,-2.329972,-6.076128,-8.350626],[-2.902106,2.699531,5.286766,-3.521632,7.864178,-7.656463,2.738381,-6.082267]],[[-0.272019,-1.876968,-4.234603,7.711769,8.787017,-7.450004,4.836155,9.959573],[7.603620,8.134572,3.411258,7.123726,1.449923,-2.296800,-2.437304,-1.354597],[5.324740,-9.723029,-4.445390,-2.753277,-6.580633,9.406449,2.207768,7.487873],[-7.161473,-5.606497,0.721325,-3.800563,5.707819,5.446822,5.834439,-1.845667],[-8.316177,8.472390,3.252328,-5.766571,-3.391681,0.026507,-6.113759,-4.458845],[2.635241,-9.516264,-4.776252,-5.035226,-2.656428,-2.132745,3.032332,-4.861622],[7.301206,-7.379931,1.020263,-3.307503,5.793596,-5.474239,2.810228,-7.076872],[4.782555,2.536071,6.126594,1.040316,2.506596,-6.008509,-5.046675,-3.401767],[-1.365932,-5.265607,-1.012727,0.689313,9.361460,4.676889,-4.036685,1.272268],[9.987440,3.045417,-5.666648,-9.542780,-6.183502,-8.740959,6.263865,3.580798],[-8.428161,-1.795440,-6.605774,-3.329429,5.583446,-5.707110,4.665006,8.109339],[-8.943102,6.272589,2.941923,-9.622382,-5.382064,-9.914886,-9.942176,4.264027],[-1.280882,4.089941,1.396432,-6.890202,0.544238,-4.361858,-3.292050,6.533250]],[[6.620975,-8.538918,-9.897194,-1.743129,8.875661,7.235058,-5.884352,-2.377480],[-7.569993,-2.108017,8.249544,-1.967064,9.643168,7.199467,-2.336932,7.713568],[-7.973611,-6.113459,-7.199211,0.703553,9.235930,9.659556,-9.460909,-7.135562],[6.213367,-1.855931,2.487203,-6.744349,-2.642572,4.886089,-5.441390,-3.547727],[-1.100266,-6.410691,1.666985,-4.961063,-6.749961,4.857933,-2.193659,5.133872],[-6.025464,-4.839521,-0.498365,-3.152019,7.464417,7.313827,-3.464804,-0.650855],[-8.242510,-7.773701,-5.619554,-4.759431,-7.389044,5.824312,-0.573928,1.387949],[5.091268,-1.171769,-7.372896,-4.040068,-1.478816,9.749630,1.311627,1.867771],[-5.044092,2.541882,7.963849,0.512685,0.848833,-0.069984,3.696456,-7.031873],[7.135460,-5.036274,-3.798990,4.051344,-2.797759,3.835189,-3.586896,1.297549],[-0.374987,-9.822440,8.775030,-5.576822,-9.798695,-9.715151,-8.627154,-6.801484],[8.295343,0.338844,2.406306,2.726810,4.594158,1.620168,1.159954,8.618424],[-7.583692,5.535207,0.504531,-5.804884,-0.064782,-3.341738,-7.310949,5.059448]]], dtype = "float64")#candidate|5673|(15, 13, 8)|const|float64
var_5674 = relay.var("var_5674", dtype = "float64", shape = (15, 13, 8))#candidate|5674|(15, 13, 8)|var|float64
bop_5675 = relay.mod(const_5673.astype('float64'), relay.reshape(var_5674.astype('float64'), relay.shape_of(const_5673))) # shape=(15, 13, 8)
output = relay.Tuple([bop_5675,])
output2 = relay.Tuple([bop_5675,])
func_5705 = relay.Function([var_5674,], output)
mod['func_5705'] = func_5705
mod = relay.transform.InferType()(mod)
mutated_mod['func_5705'] = func_5705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5706 = relay.var("var_5706", dtype = "float64", shape = (15, 13, 8))#candidate|5706|(15, 13, 8)|var|float64
func_5705_call = mutated_mod.get_global_var('func_5705')
call_5707 = func_5705_call(var_5706)
output = call_5707
func_5708 = relay.Function([var_5706], output)
mutated_mod['func_5708'] = func_5708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4926_call = mod.get_global_var('func_4926')
func_4927_call = mutated_mod.get_global_var('func_4927')
call_5747 = func_4926_call()
call_5748 = func_4926_call()
output = call_5747
output2 = call_5748
func_5749 = relay.Function([], output)
mod['func_5749'] = func_5749
mod = relay.transform.InferType()(mod)
mutated_mod['func_5749'] = func_5749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5749_call = mutated_mod.get_global_var('func_5749')
call_5750 = func_5749_call()
output = call_5750
func_5751 = relay.Function([], output)
mutated_mod['func_5751'] = func_5751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5344_call = mod.get_global_var('func_5344')
func_5345_call = mutated_mod.get_global_var('func_5345')
call_5768 = relay.TupleGetItem(func_5344_call(), 0)
call_5769 = relay.TupleGetItem(func_5345_call(), 0)
func_1312_call = mod.get_global_var('func_1312')
func_1316_call = mutated_mod.get_global_var('func_1316')
const_5817 = relay.const([5,7,-1,8,-7,10,-8,-3,-5,-3,-6,2,-5,-5,2,-4,-7,4,1,9,-6,-8,-10,-7,-5,-7,9,6,-8,-9,-9,7,4,-4,-7,3,-2,10,-9,8,7,-8,5,-2,-5,3,-4,9,-6,-2,-6,8,5,1,-5,9,-2,-10,-1,10,-5,-1,7,-6,-3,-10,3,-8,-6,-2,7,2,-10,-8,9,8,-5,3,-9,7,-7,-10,4,9,-8,-8,-4,-4,-5,5,2,-7,2,-1,9,2,4,6,-1,-6,4,4,6,-2,2,-4,5,-3,3,8,1,-8,4,-1,-7,-4,10,-10,-5,9,4,-4,-7,3,-1,2,3,-5,1,1,-4,10,-2,2,5,-9,-7,5,9,3,-1,2,-4,8,-4,5,4,1,8,-7,5,9,6,5,3,7,-5,-9,-7,-6,8,10,7,-9,-5,7,2,-3,1,6,-7,10,-2,-1,-6,2,6,-5,3,9,10,-9,9,1,-9,-6,9,-8,-2,2,4,1,5,-7,8,8,10,-10,-1,-1,-7,-7,-10,7,-4,2,-2,1,7,-6,2,4,-1,-2,-3,-5,9,-7,8,3,-5,-1,-7,4,8,10,-6,-1,7,1,6,2,-7,4,-5,7,-3,-6,-1,-4,-2,1,7,7,5,5,2,-9,-8,-2,2,-2,-8,-5,3,-9,6,-5,2,-10,-9,-10,-2,-8,2,5,1,-8,10,-1,-7,-7,8,7,-5,-9,-1,3,-8,6,-5,3,-2,9,6,-2,8,-7,5,-8,-2,3,4,9,-9,1,7,1,6,-9,8,7,-5,2,-10,-10,-7,-6,-9,4,-9,3,8,-5,-2,9,10,-5,10,-6,-8,-3,-7,6,3,7,5,-7,-2,9,1,-3,2,5,-5,-4,-5,-8,7,2,5,1,-9,-5,3,6,-10,2,-7,7,9,-3,-10,1,-6,-5,-4,1,5,4,-9,-1,-9,2,3,6,-3,-6,-1,-10,2,9,2,-9,7,-6,-4,-7,1,7,-1,5,3,6,-10,4,-2,8,-5,4,10,10,8,-7,7,4,-10,-1,-2,-8,5,-4,6,-2,1,-7,-7,-7,2,-5,-1,-6,-8,5,-6,-10,-6,8,10,-7,8,-6,-8,-2,-8,-9,6,1,2,1,10,9,-10,9,6,3,-7,3,-1,-6,-1,-1,10,-2,7,-2,-7,-2,-7,8,-5,1,1,7,-8,4,-8,8,-6,-2,-4,-9,-7,-9,-2,-10,-10,-8,5,-3,-8,2,-2,4,3,-1,2,7,1,-6,2,9,-6,-3,2,-4,4,8,8,-2,-10,7,2,-3,-1,5,2,-7,3,-9,-5,7,1,-5,-7,-2,-1,9,7,8,9,-3,-9,9,-8,7,3,5,9,-5,-9,1,7,5,10,-2,-9,1,-5,8,-1,9,8,2,-3,4,-5,2,-5,-8,2,-5,6,9,-8,-5,3,-5,-7,10,3,2,9,1,-2,-10,-10,-7,2,-8,-2,-9,6,-8,10,-2,2,-2,7,4,4,-6,-2,3,-9,-2,3,-6,7,3,-9,-2,-9,1,-10,5,-10,10,-6,-6,3,3,-1,-8,-2,6,6,-4,4,10,10,-2,8,4,5,8,8,-6,2,-7,-5,-8,1,-5,-5,1,-10,-8,4,-4,-2,9,-6,8,8,-2,8,-3,2,-6,-3,-4,1,-3,6,6,-2,9,-7,-5,4,-8,-7,-3,-9,6,9,4,4,7,-9,-9,7,8,-4,-10,8,3,9,4,7,9,-2,6,-2,-7,5,3,-3,-5,-2,7,1,7,6,-7,5,-8,8,-4,-6,-3,-6,-2,-7,-8,-2,-1,5,-2,-3,-5,-4,7,9,-4,4,-6,6,-9,-5,-4,-2,-9,-6,7,1,-10,-4,-8,-10,-10,4,5,5,4,3,-6,-4,-1,7,2,1,-6,-8,-10,9,-5,5,2,5,10,4,4,-3,8,4,-2,9,10,2,-10,-1,3,-4,-5,-1,-9,-3,10,-8,9,-8,7,-9,-7,-10,-4,-1,-6,-2,-5,8,-7,-7,-10,-9,8,-10,-5,5,-9,-10,-3,-10,7,10,6,-6,-10,3,-9,-6,10,-4,-4,8,2,-6,10,-4,7,-8,3,-9,-8,-10,5,-4,2,9,-8,9,6,7,-9,-2,6,-3,-4,1,-5,9,-6,4,-4,4,-9,-10,-8,10,9,-8,-1,-3,3,9,4,5,-4,10,1,7,-8,-6,5,6,7,-8,-4,7,4,5,-5,-2,1,-6,7,-4,-2,1,-6,9,2,-6,-10,-4,-1,4,1,-7,-7,5,-6,-9,1,6,-9,-3,-4,-9,-1,9,-2,-8,-1,5,9,2,-1,4,4,-9,6,-6,-2,7,8,5,-10,-4,9,-1,-1,4,5,-4,-9,-2,9,-7,2,2,9,1,10,2,-5,6,7,8,7,3,-8,-2,4,6,3,-6,-5,4,2,-5,-1,5,-2,-10,-8,6,7,-3,-9,-6,8,7,-1,-9,10,-4,-6,9,-3,-8,3,8,-1,-2,1,3,2,-1,2,9,-7,-3,1,2,2,-6,-3,6,7,-6,-5,-6,-10,3,-10,-6,-3,-9,-2,10,-10,-8,5,10,-1,10,7,5,6,3,-8,2,-9,-8,3,-6,8,-7,7,5,-4,-4,-3,-8,6,-3,-10,8,6,-2,-5,2,-2,6,-8,9,-8,-3,-5,7,2,-8,7,-4,1,1,-6,-1,6,10,-10,4,-6,-6,7,2,7,6,5,6,7,4,-4,2,2,-2,2,10,-4,-1,-2,-4,3,3,-9,-6,8,-10,4,-2,3,-1,-3,-7,7,-2,10,-8,-6,-1,-9,1,-6,2,2,-8,-10,-2,-8,-10,6,4,7,-7,2,-8,-4,10,2,9,6,9,-6,8,1,-9,-1,-10,-6,3,-6,10,-2,1,-2,7,10,3,10,-10,-9,-5,3,-1,4,-8,5,-10,10,-2,-4,10,7,-9,-5,8,-9,6,-10,-10,1,5,-8,4,10,10,-4,-9,-6,-10,9,-4,-4,-8,-9,1,10,5,-2,-6,4,-6,8,1,-4,-4,-10,-1,1,1,10,2,-7,-8,8,3,1,10,7,-3,4,-5,-6,-1,6,8,3,7,-7,-2,8,6,-7,7,10,6,-7,-2,-7,-9,6,-10,7,2,-10], dtype = "int32")#candidate|5817|(1188,)|const|int32
call_5816 = relay.TupleGetItem(func_1312_call(relay.reshape(const_5817.astype('int32'), [11, 9, 12]), relay.reshape(const_5817.astype('int32'), [11, 9, 12]), ), 0)
call_5818 = relay.TupleGetItem(func_1316_call(relay.reshape(const_5817.astype('int32'), [11, 9, 12]), relay.reshape(const_5817.astype('int32'), [11, 9, 12]), ), 0)
output = relay.Tuple([call_5768,call_5816,const_5817,])
output2 = relay.Tuple([call_5769,call_5818,const_5817,])
func_5821 = relay.Function([], output)
mod['func_5821'] = func_5821
mod = relay.transform.InferType()(mod)
output = func_5821()
func_5822 = relay.Function([], output)
mutated_mod['func_5822'] = func_5822
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5884 = relay.var("var_5884", dtype = "uint64", shape = (15, 13, 4))#candidate|5884|(15, 13, 4)|var|uint64
var_5885 = relay.var("var_5885", dtype = "uint64", shape = (15, 13, 4))#candidate|5885|(15, 13, 4)|var|uint64
bop_5886 = relay.logical_xor(var_5884.astype('uint64'), relay.reshape(var_5885.astype('uint64'), relay.shape_of(var_5884))) # shape=(15, 13, 4)
func_1286_call = mod.get_global_var('func_1286')
func_1290_call = mutated_mod.get_global_var('func_1290')
const_5894 = relay.const([[-6,7,-4,-6,8,-2,-10,-2,-2,2,-9,10,-8,9,10,5,4,6],[10,6,3,-2,-1,-6,7,7,-8,-1,-3,-2,-2,8,10,6,7,10],[2,-5,-4,-7,8,9,10,-2,8,7,2,6,9,-6,5,-6,-5,9],[-9,-4,-10,-3,-1,-5,-1,-1,-8,-9,-10,-5,8,-10,-2,6,-7,10],[-1,8,-10,-3,5,-5,10,2,-6,4,8,-9,-5,4,5,-9,-7,-8],[-2,-7,4,2,6,5,8,-8,-5,7,-3,-4,-4,-5,-4,7,6,4],[8,8,-1,5,-4,6,-3,-1,-5,-5,2,8,-6,1,-1,-6,3,10],[-6,-3,-2,-2,-3,1,10,7,-9,7,1,9,-2,-10,10,-9,9,-9],[-1,5,-3,-4,-4,6,-7,9,10,-10,7,-9,2,-3,10,-9,10,8],[10,-10,-2,-8,-1,9,-8,-6,-10,10,-5,-10,-3,-7,-5,-10,-5,-1],[-7,8,-7,1,-5,-8,4,-5,-9,3,8,-6,-4,-9,-7,8,9,-1],[-4,-10,1,-3,6,-5,5,-8,9,7,10,-4,6,10,9,-2,6,-1]], dtype = "int16")#candidate|5894|(12, 18)|const|int16
call_5893 = relay.TupleGetItem(func_1286_call(relay.reshape(const_5894.astype('int16'), [6, 4, 9]), relay.reshape(const_5894.astype('int16'), [6, 4, 9]), ), 0)
call_5895 = relay.TupleGetItem(func_1290_call(relay.reshape(const_5894.astype('int16'), [6, 4, 9]), relay.reshape(const_5894.astype('int16'), [6, 4, 9]), ), 0)
output = relay.Tuple([bop_5886,call_5893,const_5894,])
output2 = relay.Tuple([bop_5886,call_5895,const_5894,])
func_5896 = relay.Function([var_5884,var_5885,], output)
mod['func_5896'] = func_5896
mod = relay.transform.InferType()(mod)
var_5897 = relay.var("var_5897", dtype = "uint64", shape = (15, 13, 4))#candidate|5897|(15, 13, 4)|var|uint64
var_5898 = relay.var("var_5898", dtype = "uint64", shape = (15, 13, 4))#candidate|5898|(15, 13, 4)|var|uint64
output = func_5896(var_5897,var_5898,)
func_5899 = relay.Function([var_5897,var_5898,], output)
mutated_mod['func_5899'] = func_5899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5666_call = mod.get_global_var('func_5666')
func_5668_call = mutated_mod.get_global_var('func_5668')
call_5909 = func_5666_call()
call_5910 = func_5666_call()
output = relay.Tuple([call_5909,])
output2 = relay.Tuple([call_5910,])
func_5921 = relay.Function([], output)
mod['func_5921'] = func_5921
mod = relay.transform.InferType()(mod)
output = func_5921()
func_5922 = relay.Function([], output)
mutated_mod['func_5922'] = func_5922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5419_call = mod.get_global_var('func_5419')
func_5421_call = mutated_mod.get_global_var('func_5421')
call_5934 = func_5419_call()
call_5935 = func_5419_call()
func_2423_call = mod.get_global_var('func_2423')
func_2427_call = mutated_mod.get_global_var('func_2427')
const_5947 = relay.const([[1,10,3,-9,9,-3,1,-10,-7,1,-5,5,1,9,-7,-1,-3,8,-2,2,-6,-10],[2,7,-8,7,5,3,9,-2,-5,5,-1,-5,-1,6,3,6,7,7,2,-9,5,-5],[-3,1,9,5,10,-4,-6,8,-8,7,8,1,7,8,-9,8,-9,10,-8,7,5,-1],[-4,2,-5,-7,4,-2,-5,7,-3,-8,6,10,2,-2,-1,-2,3,-6,5,-9,1,-2],[-4,-2,3,-9,7,3,-9,8,9,2,4,-8,1,-7,-1,-9,-7,-9,-1,9,10,-9],[6,-8,5,-7,-7,-7,-2,-1,3,-7,-10,-9,9,-1,10,7,-7,-1,4,-9,-2,-9],[1,9,-9,4,-5,2,-3,-2,-5,8,-5,-4,8,-9,-2,-9,8,6,-6,-7,-5,6],[6,-10,-8,-2,-9,3,-10,2,-3,-4,8,-10,-10,9,8,3,3,4,2,-6,4,10],[2,-7,-2,-7,1,-7,6,8,1,-9,-5,-8,3,-7,3,-1,9,1,-1,4,-8,4],[-8,10,-4,-6,4,-5,7,-3,9,-5,-4,-4,7,-8,10,8,6,1,-9,-10,-10,9],[7,8,-6,8,1,6,9,-10,-5,1,8,-3,9,-9,8,-8,10,3,-1,5,-3,8],[4,-5,10,-10,9,7,-5,-9,-4,8,-3,9,1,5,-6,8,-5,-9,-8,-5,-10,-5],[9,-10,10,-7,8,-8,2,3,-10,-8,-5,-2,-5,9,9,4,9,1,9,-6,-3,-6],[-10,3,-3,7,-9,10,-7,-3,7,6,-9,-7,4,7,-8,2,-3,9,7,5,-6,4],[-6,-2,2,10,3,-10,-1,-4,-10,-8,-3,-1,7,-8,3,-8,9,-3,-8,-2,10,-9],[9,-3,-10,-3,10,-3,2,-1,5,3,9,-5,-6,-9,-9,1,-2,6,-5,-6,3,-5],[-5,9,4,-4,-5,-10,-7,1,-7,-1,-7,2,-6,-1,10,-3,10,4,1,7,-8,8],[7,-9,-2,-5,9,-10,-8,3,5,-2,5,9,4,3,4,-7,-1,-5,-1,9,-8,5],[10,-3,-2,-9,10,7,5,-8,-1,8,-3,4,-3,-4,-2,4,-4,8,-1,7,7,5],[-3,-9,-10,-6,-1,-9,-3,-3,1,-8,6,5,3,9,5,9,9,-2,-6,3,9,2],[-6,-9,-2,-4,-3,6,-10,-5,10,-10,-4,9,-1,9,-6,-3,6,9,-9,8,1,-7],[8,-3,7,-9,-8,-3,3,-2,-3,-3,-9,8,-7,-1,10,-9,-1,7,8,7,6,-6],[1,8,-2,-2,-3,-8,-7,-9,6,-5,10,3,10,3,-1,5,-4,-6,3,-7,10,-9],[4,-4,-5,9,3,-1,-3,10,-3,6,7,-6,-1,9,8,-8,5,7,3,5,-10,-10],[3,9,-3,5,-8,-10,-4,10,-8,-6,-2,-5,9,-2,8,-3,2,-7,8,4,-3,-5],[-7,8,-7,8,-9,4,-3,-8,8,10,-3,4,-10,-7,7,9,1,7,2,-7,8,-1],[-10,2,10,8,10,5,2,-3,8,-1,9,-4,7,4,-5,-8,3,2,1,-7,2,3],[5,-1,1,-9,3,-3,-7,8,3,-8,6,-10,-10,10,-6,-5,2,-4,-1,-3,-8,-7],[-7,-10,8,7,-8,3,-1,-9,7,-1,-2,-9,-8,7,1,5,-8,-8,-3,-2,-3,8],[-5,2,2,10,8,7,2,-4,-8,10,-3,2,-5,-6,7,-2,-2,-6,-10,8,-6,6],[9,-10,10,-2,-2,9,-9,6,1,-2,-4,7,5,-2,8,-8,7,-3,9,9,10,-9],[-5,8,-10,-8,9,8,9,-4,7,4,-9,10,2,1,7,2,-4,-7,3,1,-1,7],[-9,6,2,-10,7,-10,1,-3,-1,2,7,10,-5,3,9,5,-10,4,1,4,-7,-8],[-6,-7,-8,-4,8,-7,4,10,-10,1,-6,-4,2,6,2,6,-5,-7,-1,9,5,-4],[-8,4,9,-9,-4,-1,-3,-6,1,5,4,-10,-2,-6,-7,-10,7,4,-3,3,8,-4],[3,3,9,-1,-9,1,1,2,10,-4,8,-4,-1,-6,3,9,7,9,2,-2,10,-4],[-1,-1,-10,9,-3,7,-2,-2,-3,8,-4,8,6,9,-1,10,-1,4,-6,-7,8,2],[7,2,6,1,-8,8,-9,3,-9,-4,2,10,-1,-6,1,6,3,-9,9,-8,9,2],[-2,9,-7,-10,3,8,6,-2,3,6,-7,4,-5,4,10,-5,4,-2,7,2,3,-3],[-6,-8,4,-5,-9,8,1,1,1,-4,9,5,-9,7,9,-10,4,3,2,-10,5,6],[-1,7,-2,-6,8,-7,8,-8,-4,1,-6,8,2,-10,6,-5,4,9,-5,-9,8,-10],[9,-5,-6,-3,-3,-2,-8,4,-2,-1,10,-4,-8,-8,8,3,3,2,-6,-4,7,4],[10,-1,6,9,-5,1,-8,8,-6,-7,10,-10,6,5,-10,1,8,2,-6,-8,-8,2],[9,-1,-2,-3,8,9,5,-9,5,-7,-4,7,-2,10,-5,5,2,-8,-6,7,4,10],[-1,8,-1,-1,4,6,4,-7,8,-4,9,7,4,-9,-9,10,10,-8,-3,-9,-6,4],[-10,-10,4,-9,7,-8,9,9,-8,9,-9,2,-5,-10,3,10,8,2,-3,2,-8,-1],[8,4,-3,6,10,-5,-7,6,10,5,-8,-7,-9,-1,1,-1,-3,7,-10,7,10,-6],[6,1,10,3,3,8,-3,9,2,5,9,-1,-6,10,10,-5,8,2,1,5,-9,8],[-2,6,-10,-1,-6,7,-1,-9,5,-7,1,-10,-9,8,7,-8,6,-3,8,5,-6,-7],[1,10,-10,-10,8,-5,4,5,-1,10,-8,4,-9,-9,1,-4,1,-8,-10,-4,-10,-7],[2,8,4,3,-3,9,3,-10,5,-7,-7,9,-5,8,-2,10,7,-9,5,5,6,1],[2,-6,-5,-3,-9,-10,5,-10,2,-3,7,10,-4,10,-6,1,-4,7,9,-2,4,3],[-9,-6,-10,-10,1,-8,2,4,1,-10,-10,6,8,-8,-1,10,1,-3,-5,7,-2,10],[5,3,-7,10,-1,9,-6,10,5,7,7,8,-2,9,-1,7,-3,1,7,-9,10,6]], dtype = "int32")#candidate|5947|(54, 22)|const|int32
call_5946 = func_2423_call(relay.reshape(const_5947.astype('int32'), [12, 11, 9]), relay.reshape(const_5947.astype('int32'), [12, 11, 9]), )
call_5948 = func_2423_call(relay.reshape(const_5947.astype('int32'), [12, 11, 9]), relay.reshape(const_5947.astype('int32'), [12, 11, 9]), )
func_3506_call = mod.get_global_var('func_3506')
func_3510_call = mutated_mod.get_global_var('func_3510')
var_5954 = relay.var("var_5954", dtype = "float32", shape = (1144, 1))#candidate|5954|(1144, 1)|var|float32
var_5955 = relay.var("var_5955", dtype = "float32", shape = (108,))#candidate|5955|(108,)|var|float32
call_5953 = relay.TupleGetItem(func_3506_call(relay.reshape(var_5954.astype('float32'), [13, 8, 11]), relay.reshape(var_5955.astype('float32'), [1, 108]), ), 3)
call_5956 = relay.TupleGetItem(func_3510_call(relay.reshape(var_5954.astype('float32'), [13, 8, 11]), relay.reshape(var_5955.astype('float32'), [1, 108]), ), 3)
var_5960 = relay.var("var_5960", dtype = "float64", shape = (14, 216))#candidate|5960|(14, 216)|var|float64
bop_5961 = relay.mod(call_5953.astype('float64'), relay.reshape(var_5960.astype('float64'), relay.shape_of(call_5953))) # shape=(14, 216)
bop_5964 = relay.mod(call_5956.astype('float64'), relay.reshape(var_5960.astype('float64'), relay.shape_of(call_5956))) # shape=(14, 216)
uop_5973 = relay.sin(var_5960.astype('float32')) # shape=(14, 216)
func_5821_call = mod.get_global_var('func_5821')
func_5822_call = mutated_mod.get_global_var('func_5822')
call_5977 = relay.TupleGetItem(func_5821_call(), 0)
call_5978 = relay.TupleGetItem(func_5822_call(), 0)
var_5993 = relay.var("var_5993", dtype = "float32", shape = (14, 216))#candidate|5993|(14, 216)|var|float32
bop_5994 = relay.bitwise_and(uop_5973.astype('int64'), relay.reshape(var_5993.astype('int64'), relay.shape_of(uop_5973))) # shape=(14, 216)
output = relay.Tuple([call_5934,call_5946,const_5947,var_5954,var_5955,bop_5961,call_5977,bop_5994,])
output2 = relay.Tuple([call_5935,call_5948,const_5947,var_5954,var_5955,bop_5964,call_5978,bop_5994,])
func_5997 = relay.Function([var_5954,var_5955,var_5960,var_5993,], output)
mod['func_5997'] = func_5997
mod = relay.transform.InferType()(mod)
mutated_mod['func_5997'] = func_5997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5997_call = mutated_mod.get_global_var('func_5997')
var_5999 = relay.var("var_5999", dtype = "float32", shape = (1144, 1))#candidate|5999|(1144, 1)|var|float32
var_6000 = relay.var("var_6000", dtype = "float32", shape = (108,))#candidate|6000|(108,)|var|float32
var_6001 = relay.var("var_6001", dtype = "float64", shape = (14, 216))#candidate|6001|(14, 216)|var|float64
var_6002 = relay.var("var_6002", dtype = "float32", shape = (14, 216))#candidate|6002|(14, 216)|var|float32
call_5998 = func_5997_call(var_5999,var_6000,var_6001,var_6002,)
output = call_5998
func_6003 = relay.Function([var_5999,var_6000,var_6001,var_6002,], output)
mutated_mod['func_6003'] = func_6003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mod.get_global_var('func_5921')
func_5922_call = mutated_mod.get_global_var('func_5922')
call_6010 = relay.TupleGetItem(func_5921_call(), 0)
call_6011 = relay.TupleGetItem(func_5922_call(), 0)
output = call_6010
output2 = call_6011
func_6016 = relay.Function([], output)
mod['func_6016'] = func_6016
mod = relay.transform.InferType()(mod)
output = func_6016()
func_6017 = relay.Function([], output)
mutated_mod['func_6017'] = func_6017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6016_call = mod.get_global_var('func_6016')
func_6017_call = mutated_mod.get_global_var('func_6017')
call_6023 = func_6016_call()
call_6024 = func_6016_call()
const_6052 = relay.constdtype = "float32")#candidate|6052|(12, 16, 13)|const|float32
bop_6053 = relay.subtract(call_6023.astype('int16'), relay.reshape(const_6052.astype('int16'), relay.shape_of(call_6023))) # shape=(12, 16, 13)
bop_6056 = relay.subtract(call_6024.astype('int16'), relay.reshape(const_6052.astype('int16'), relay.shape_of(call_6024))) # shape=(12, 16, 13)
func_5380_call = mod.get_global_var('func_5380')
func_5384_call = mutated_mod.get_global_var('func_5384')
const_6060 = relay.const([-2,-1,-8,1,6,-7,5,-3,-7,-2,-1,-1,9,5,8,1,4,-2,-4,-2,9,5,5,8,-10,-5,3,-9,3,-10,-7,-10,5,-3,3,7,5,5,-3,-3,3,-1,5,1,-5,8,3,3,2,-7,3,8,-10,-9,-7,-4,-2,9,7,7,10,-4,-5,-9,2,3,-1,-5,-3,-2,9,-3,4,-10,1,-3,-3,1,3,-7,9,-4,1,9,-6,-6,-10,-7,10,-5,5,1,-6,-7,4,8,4,-4,-3,-10,-6,5,-3,10,2,-4,5,6,-8,4,9,-7,-4,-9,-4,8,-3,-7,5,-2,5,3,-1,-3,2,-1,1,-5,9,-4,2,4,-2,4,8,-6,1,-3,8,1,5,-2,-10,-3,-2,-3,-6,-2,5,10,3,6,-7,6,7,7,1,-10,8,-1,10,-5,-8,7,-2,-9,-4,8,-4,-7,4,-4,-5,6,-6,6,-9,-2,-9,-4,-7,7,-10,3,1,-6,5,-10,4,6,2,-8,6,-2,1,9,1,-9,2,6,3,-10,1,9,-7,7,-8,4,5,2,-2,-3,-6,5,-6,1,2,-6,-3,-10,1,-2,2,-4,2,2,6,8,-10,9,-3,-7,-6,-7,9,1,-5,-8,9,-6,9,-6,5,-6,6,-3,10,3,5,4,9,4,8,-3,-8,-9,-8,2,8,8,-5,-4,-5,8,-9,3,-8,2,-3,-5,5,-7,-7,-4,-7,1,-7,7,-2,-1,-9,-8,3,5,6,-6,3,4,2,-7,4,1,10,3,-4,4,-9,2,-2,-8,6,1,-9,9,5,-2,-3,10,2,-7,6,-10,4,6,7,-4,10,-4,10,-10,-1,-4,5,8,-7,-4,8,9,5,6,9,-7,-7,8,6,4,10,2,4,-3,-6,-8,-10,-4,2,9,2,-10,6,-8,-6,10,10,1,3,-7,-2,3,1,9,9,-5,-3,-2,3,-1,-10,-6,4,-8,-3,4,-9,-1,4,4,-7,4,3,9,4,8,-3,-8], dtype = "int8")#candidate|6060|(384,)|const|int8
var_6061 = relay.var("var_6061", dtype = "float32", shape = (840,))#candidate|6061|(840,)|var|float32
call_6059 = relay.TupleGetItem(func_5380_call(relay.reshape(const_6060.astype('int8'), [384,]), relay.reshape(var_6061.astype('float32'), [840,]), ), 3)
call_6062 = relay.TupleGetItem(func_5384_call(relay.reshape(const_6060.astype('int8'), [384,]), relay.reshape(var_6061.astype('float32'), [840,]), ), 3)
func_2971_call = mod.get_global_var('func_2971')
func_2975_call = mutated_mod.get_global_var('func_2975')
const_6071 = relay.const([8,8,10,-8,9,-5,-3,10,6,-5,-5,-8,-5,1,-2,9,-4,-7,-10,9,7,2,-8,-9,6,-3,-10,-3,10,7,6,-5,-7,-5,7,6,-2,5,1,-4,-7,7,8,4,-3,1,1,10,-8,4,-2,3,-1,4,2,8,-3,-9,-4,-8,-6,-6,6,-6,4,-4,-2,-10,3,6,2,-7,8,5,-8,7,-5,-4,1,-5,-10,1,6,-5,-7,-6,-5,-3,8,-5,4,-4,-6,-10,-8,2,-6,10,-8,10,-7,6,1,7,1,8,3,-4,2,-6,1,-8,4,-6,4,8,4,7,5,-5,-5,10,6,-7,-10,-1,-2,7,-9,-8,10,-8,10,-8,-9,-9,-7,-2,-7,-3,3,-7,3,1,-6,6,-5,-10,10,-1,-10,-1,3,10,-4,6,-5,2,-4,1,-2,-8,1,-3,6,8,-6,3,-4,-9,3,6,6,-7,1,-4,7,1,8,9,-1,9,9,7,2,4,9,5,-9,8,4,-4,-2,9,2,5,6,-9,4,10,1,-3,-3,-6,5,-2,-5,-10,-5,8,-6,9,5,-10,-5,8,4,8,2,-2,9,-7,-4,3,5,-5,4,-6,-5,1,7,-7,1,-2,1,-1,10,7,5,3,1,3,-3,4,5,5,-5,5,-10,-8,-1,-3,8,-4,10,-3,5,-6,-6,4,8,-5,4,6,5,8,4,6,3,-5,7,-4,7,-9,-2,4,4,2,9,3,3,-9,-5,9,5,9,-3,4,-4,-10,-8,6,-8,-2,-8,1,8,-8,-7,9,10,-5,4,10,-6,6,-9,-8,3,-3,6,-10,-6,-7,5,6,-7,-10,-4,-9,-3,4,7,10], dtype = "int8")#candidate|6071|(324,)|const|int8
call_6070 = relay.TupleGetItem(func_2971_call(relay.reshape(const_6071.astype('int8'), [4, 9, 9]), relay.reshape(const_6071.astype('int8'), [4, 9, 9]), ), 3)
call_6072 = relay.TupleGetItem(func_2975_call(relay.reshape(const_6071.astype('int8'), [4, 9, 9]), relay.reshape(const_6071.astype('int8'), [4, 9, 9]), ), 3)
bop_6112 = relay.floor_mod(bop_6053.astype('float32'), relay.reshape(const_6052.astype('float32'), relay.shape_of(bop_6053))) # shape=(12, 16, 13)
bop_6115 = relay.floor_mod(bop_6056.astype('float32'), relay.reshape(const_6052.astype('float32'), relay.shape_of(bop_6056))) # shape=(12, 16, 13)
output = relay.Tuple([call_6059,const_6060,var_6061,call_6070,const_6071,bop_6112,])
output2 = relay.Tuple([call_6062,const_6060,var_6061,call_6072,const_6071,bop_6115,])
func_6116 = relay.Function([var_6061,], output)
mod['func_6116'] = func_6116
mod = relay.transform.InferType()(mod)
var_6117 = relay.var("var_6117", dtype = "float32", shape = (840,))#candidate|6117|(840,)|var|float32
output = func_6116(var_6117)
func_6118 = relay.Function([var_6117], output)
mutated_mod['func_6118'] = func_6118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5419_call = mod.get_global_var('func_5419')
func_5421_call = mutated_mod.get_global_var('func_5421')
call_6125 = func_5419_call()
call_6126 = func_5419_call()
uop_6129 = relay.rsqrt(call_6125.astype('float32')) # shape=(12, 16, 13)
uop_6131 = relay.rsqrt(call_6126.astype('float32')) # shape=(12, 16, 13)
func_2577_call = mod.get_global_var('func_2577')
func_2581_call = mutated_mod.get_global_var('func_2581')
const_6182 = relay.const([[-3.332748,-0.349311,-0.295554,-7.970856,-0.157294,5.402847,9.977942,-7.600425,3.165335,-7.691431,-6.486931,2.850464,-2.781776,-0.853016,-1.145108,-5.780176,-2.905248,9.062536,-4.586405,-7.653441,-1.277314,3.514823,3.911601,-6.403181,-3.541414,8.250251,-7.740412,-6.355172,0.943481,9.977523,-4.008220,-9.643557,-0.533020,7.546377,6.701701,1.768504,-8.836495,1.333713,-2.713768,-5.967255,-3.390371,-0.821740,-0.413800,-0.052259,2.741976,8.969994,2.367846,-6.979912,4.160074,-6.748855,6.259161,-7.154627,9.878996,8.761454,3.104186,-0.589542,3.546212,-3.604735,2.600054,3.128706,-7.688682,-1.834007,-5.193482,4.020074,9.164382,-3.860056,3.250676,-5.317790,8.780953,0.135637,7.206489,-8.609315,-5.956416,-9.253743,1.406668,-6.326357,-2.522030,-7.370988,6.953811,-9.273475,3.008687,-1.502261,3.634312,6.516631,-7.931247,8.496209,-7.131870,1.140750,-7.515889,-8.030312,5.400060,1.206010,-4.972927,6.918148,8.035153,-2.654310,-6.674517,0.377210,6.731870,-4.295589,6.230574,5.761185,-0.050740,-3.959628,-0.887842,-3.044771,4.141076,4.963851]], dtype = "float32")#candidate|6182|(1, 108)|const|float32
var_6183 = relay.var("var_6183", dtype = "int32", shape = (2, 108))#candidate|6183|(2, 108)|var|int32
call_6181 = relay.TupleGetItem(func_2577_call(relay.reshape(const_6182.astype('float32'), [9, 4, 3]), relay.reshape(const_6182.astype('float32'), [9, 4, 3]), relay.reshape(var_6183.astype('int32'), [216,]), ), 4)
call_6184 = relay.TupleGetItem(func_2581_call(relay.reshape(const_6182.astype('float32'), [9, 4, 3]), relay.reshape(const_6182.astype('float32'), [9, 4, 3]), relay.reshape(var_6183.astype('int32'), [216,]), ), 4)
func_1312_call = mod.get_global_var('func_1312')
func_1316_call = mutated_mod.get_global_var('func_1316')
const_6189 = relay.const([[7,-9,-8,4,5,8,4,8,-10,3,10,-10,1,-3,-1,-7,10,-9,2,-6,7,10,-9,5,-3,-1,-10,7,4,10,-1,-6,-6,-9,-10,5,6,1,4,-7,6,-1,8,-8,7,10,8,1,2,-2,5,-4,-3,-8,-10,-7,2,-3,-7,3,-2,4,-10,3,4,-8,3,2,6,-6,-5,-3,2,-7,8,4,10,7,4,-4,5,9,-2,3,-1,4,-1,-4,2,1,1,7,5,3,-6,-8,-7,-9,6,-8,-1,6,9,7,3,-9,-5,-8,-2,10,6,-9,4,3,-9,8,3,-4,-8,-4,-10,7,-1,8,4,9,7,-2,-3,-1,-7,-4,5,-5,-10,-5,-1,-10,5,-4,-7,8,3,2,-8,10,-2,-6,-2,-9,7,7,-6,10,4,-2,-9,2,4,-9,5,-6,2,3,2,-10,-7,8,-3,-9,-6,-7,-3,8,3,8,5,-6,-7,-2,-2,-9,-9,-6,-7,9,-4,-8,-5,4,2,-7,-7,3,-1,-2,-9,-6,8,-3,5,-6,-10,7,1,-3,-5,-9,3,-8,-8,1,-3,-8,-9,6,4,-4,-8,-10,-4,1,5,-4,1,7,2,9,-5,8,7,-7,-6,7,-3,3,2,-7,-4,-9,2,-6,-4,-2,1,2,-2,3,9,3,9,-9,2,9,-6,-4,-6,3,-7,-8,4,8,-10,-5,-1,3,8,10,-8,9,9,10,-4,-5,7,1,7,9,-2,-6,-5,-2,1,-5,5,10,-5,-1,-5,-2,-2,-6,-4,-6,-9,9,3,7,5,2,-5,-6,-5,3,-3,-4,10,6,5,8,4,10,-9,1,10,-6,6,-9,-8,10,-7,-8,6,-1,-6,7,-6,-7,-5,-1,-4,3,-10,8,5,9,4,-9,1,-3,8,-7,8,-1,6,1,-10,7,-7,8,-5,-3,4,1,-1,2,-6,-6,-5,-9,-9,-9,5,9,-3,1,3,10,6,-3,-6,8,6,-6,1,1,6,-8,-8,-10,-3,-10,4,4,-1,-9,-1,-1,-1,9,-2,1,-2,6,6,-2,6,-5,-4,-10,-3,-4,-6,-3,-1,8,-3,-1,7,-7,-3,4,-3,-2,6,-3,-1,-7,-3,-3,-5,10,-1,4,-10,3,-4,-5,-5,-5,8,-2,-9,5,1,8,10,-5,3,-9,4,8,-10,-4,-1,6,9,8,8,1,3,9,-9,4,-6,5,-8,8,6,-1,-3,8,-6,1,2,-7,-3,-8,-1,-4,-7,8,2,1,10,-6,-10,6,-1,-2,-10,7,3,6,8,-2,-9,-10,8,2,5,2,2,-3,-6,-7,-4,-10,8,3,-7,2,-7,8,6,-1,10,10,1,7,8,6,8,1,5,3,10,8,8,1,8,6,-7,-9,10,8,10,10,-3,6,-4,7,-2,9,3,-5,4,-10,-8,1,-5,-5,-4,-4,5,-2,9,-3,6,-3,4,1,-9,-8,10,-4,10,-3,-4,9,9,8,-3,-8,-3,-10,-1,6,2,7,-5,10,-2,-8,-1,6,10,-7,5,4,8,-6,2,9,5,-7,-10,-6,9,-9,-2,-10,6,-7,-3,-8,2,-2,-5,-10,6,3,-6,8,-2,6,9,6,3,8,-4,-9,-10,3,-1,-8,-2,-2,-9,-4,7,-4,-5,-4,6,4,-8,-10,-3,6,6,10,-6,-8,5,7,-3,-10,3,-5,-8,1,-4,-6,4,1,-9,-1,5,1,3,-4,9,5,2,1,10,5,4,1,5,-9,-2,9,-10,-9,-8,-9,9,-9,3,10,-3,-7,8,5,9,8,-6,1,9,9,3,4,-2,-4,2,-10,10,-2,-7,-4,2,-8,-10,4,-8,-7,-3,-4,2,3,3,9,-3,6,9,-4,3,-1,10,-2,-10,-9,10,9,-1,-7,6,-2,8,-6,-7,10,-4,-4,-8,-1,7,-1,-3,-10,5,-3,-3,9,-2,-8,7,10,9,-6,-2,5,-8,6,-9,10,-6,-2,-7,-10,-7,-9,-6,-6,2,-4,-8,4,5,9,-10,5,-9,3,-9,-6,-1,3,-3,6,10,2,9,5,-9,10,-1,-3,6,-8,-1,3,9,-1,4,2,9,3,-1,4,1,9,-10,6,-8,-3,9,1,2,2,1,-2,-7,8,3,8,-7,8,9,5,8,-6,-4,7,-1,3,-3,2,-10,-10,6,7,-4,5,10,-1,-8,7,4,-7,5,6,-5,-9,-3,-7,8,-4,-2,-6,-9,-3,3,-8,-6,-3,4,-10,-10,-5,-10,3,8,-10,4,-3,4,9,-7,-4,1,5,-7,-6,6,1,4,3,1,2,-1,10,4,3,-4,6,6,-3,-8,1,2,7,-8,-10,4,-4,-9,-2,-4,6,-2,5,6,3,7,-6,-8,7,-5,-4,-8,-6,5,-2,3,-6,2,4,-9,10,1,-7,10,4,10,6,8,-9,-10,-3,8,-7,-1,8,8,-10,-7,9,-10,3,-2,-1,1,-3,-10,-3,6,-1,-2,10,9,10,-6,3,1,7,-7,2,-8,-10,-3,-9,4,9,10,-8,9,3,7,1,-4,-9,-9,-10,10,-9,4,6,-7,5,-6,6,-3,1,7,-5,-2,-3,-7,-2,-4,10,9,7,10,-5,7,2,-10,-9,6,-1,10,1,-6,4,4,-7,1,10,6,-10,5,-4,-6,6,-6,-10,9,-4,6,7,4,-4,-8,8,10,-10,1,-1,-8,9,-2,-2,2,-9,6,10,-10,6,-1,-5,-4,5,10,2,-1,-1,2,5,9,-2,-10,4,-1,9,5,-2,-10,6,-2,-5,1,-7,9,-5,-8,3,3,7,10,-7,-1,-5,5,10,-10,-10,2,4,-9,-2,-7,-4,-4,6,8,-8,2,1,-5,-5,-7,5,-10,3,-7,-8,-1,7,-3,7,8,-2,7,10,-6,6,-7,5,10,-7,-4,-3,7,-10,5,-4,3,5,-1,3,-7,-1,1,-2,-5,-10,-5,-3,3,5,-1,10,6,3,10,5,4,-2,1,6,4,-4,-6,-3,2,-6,-6,-4,-4,10,-2,1,-10,-9,-10,6,8,5,8,-3,-6,3,7,-4,4,-5,8,2,-3,-8,5,-7,5,7,9,-6,-10,7,-6,-8,-5,-9,-9,9,-2,-4,-1,10,-2,1,-10,8,-8,7]], dtype = "int32")#candidate|6189|(1, 1188)|const|int32
call_6188 = relay.TupleGetItem(func_1312_call(relay.reshape(const_6189.astype('int32'), [11, 9, 12]), relay.reshape(const_6189.astype('int32'), [11, 9, 12]), ), 0)
call_6190 = relay.TupleGetItem(func_1316_call(relay.reshape(const_6189.astype('int32'), [11, 9, 12]), relay.reshape(const_6189.astype('int32'), [11, 9, 12]), ), 0)
bop_6198 = relay.power(const_6189.astype('float32'), relay.reshape(call_6188.astype('float32'), relay.shape_of(const_6189))) # shape=(1, 1188)
bop_6201 = relay.power(const_6189.astype('float32'), relay.reshape(call_6190.astype('float32'), relay.shape_of(const_6189))) # shape=(1, 1188)
output = relay.Tuple([uop_6129,call_6181,const_6182,var_6183,bop_6198,])
output2 = relay.Tuple([uop_6131,call_6184,const_6182,var_6183,bop_6201,])
func_6208 = relay.Function([var_6183,], output)
mod['func_6208'] = func_6208
mod = relay.transform.InferType()(mod)
mutated_mod['func_6208'] = func_6208
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6209 = relay.var("var_6209", dtype = "int32", shape = (2, 108))#candidate|6209|(2, 108)|var|int32
func_6208_call = mutated_mod.get_global_var('func_6208')
call_6210 = func_6208_call(var_6209)
output = call_6210
func_6211 = relay.Function([var_6209], output)
mutated_mod['func_6211'] = func_6211
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6240 = relay.var("var_6240", dtype = "float32", shape = (4, 12, 15))#candidate|6240|(4, 12, 15)|var|float32
uop_6241 = relay.log(var_6240.astype('float32')) # shape=(4, 12, 15)
func_1884_call = mod.get_global_var('func_1884')
func_1888_call = mutated_mod.get_global_var('func_1888')
var_6268 = relay.var("var_6268", dtype = "float64", shape = (90,))#candidate|6268|(90,)|var|float64
var_6269 = relay.var("var_6269", dtype = "int8", shape = (96, 4))#candidate|6269|(96, 4)|var|int8
call_6267 = relay.TupleGetItem(func_1884_call(relay.reshape(var_6268.astype('float64'), [10, 9]), relay.reshape(var_6268.astype('float64'), [10, 9]), relay.reshape(var_6269.astype('int8'), [384,]), ), 2)
call_6270 = relay.TupleGetItem(func_1888_call(relay.reshape(var_6268.astype('float64'), [10, 9]), relay.reshape(var_6268.astype('float64'), [10, 9]), relay.reshape(var_6269.astype('int8'), [384,]), ), 2)
output = relay.Tuple([uop_6241,call_6267,var_6268,var_6269,])
output2 = relay.Tuple([uop_6241,call_6270,var_6268,var_6269,])
func_6273 = relay.Function([var_6240,var_6268,var_6269,], output)
mod['func_6273'] = func_6273
mod = relay.transform.InferType()(mod)
mutated_mod['func_6273'] = func_6273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6273_call = mutated_mod.get_global_var('func_6273')
var_6275 = relay.var("var_6275", dtype = "float32", shape = (4, 12, 15))#candidate|6275|(4, 12, 15)|var|float32
var_6276 = relay.var("var_6276", dtype = "float64", shape = (90,))#candidate|6276|(90,)|var|float64
var_6277 = relay.var("var_6277", dtype = "int8", shape = (96, 4))#candidate|6277|(96, 4)|var|int8
call_6274 = func_6273_call(var_6275,var_6276,var_6277,)
output = call_6274
func_6278 = relay.Function([var_6275,var_6276,var_6277,], output)
mutated_mod['func_6278'] = func_6278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5419_call = mod.get_global_var('func_5419')
func_5421_call = mutated_mod.get_global_var('func_5421')
call_6286 = func_5419_call()
call_6287 = func_5419_call()
output = call_6286
output2 = call_6287
func_6299 = relay.Function([], output)
mod['func_6299'] = func_6299
mod = relay.transform.InferType()(mod)
output = func_6299()
func_6300 = relay.Function([], output)
mutated_mod['func_6300'] = func_6300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6370 = relay.var("var_6370", dtype = "float32", shape = (2, 3, 10))#candidate|6370|(2, 3, 10)|var|float32
uop_6371 = relay.cos(var_6370.astype('float32')) # shape=(2, 3, 10)
func_5705_call = mod.get_global_var('func_5705')
func_5708_call = mutated_mod.get_global_var('func_5708')
var_6374 = relay.var("var_6374", dtype = "float64", shape = (1560,))#candidate|6374|(1560,)|var|float64
call_6373 = relay.TupleGetItem(func_5705_call(relay.reshape(var_6374.astype('float64'), [15, 13, 8])), 0)
call_6375 = relay.TupleGetItem(func_5708_call(relay.reshape(var_6374.astype('float64'), [15, 13, 8])), 0)
output = relay.Tuple([uop_6371,call_6373,var_6374,])
output2 = relay.Tuple([uop_6371,call_6375,var_6374,])
func_6376 = relay.Function([var_6370,var_6374,], output)
mod['func_6376'] = func_6376
mod = relay.transform.InferType()(mod)
var_6377 = relay.var("var_6377", dtype = "float32", shape = (2, 3, 10))#candidate|6377|(2, 3, 10)|var|float32
var_6378 = relay.var("var_6378", dtype = "float64", shape = (1560,))#candidate|6378|(1560,)|var|float64
output = func_6376(var_6377,var_6378,)
func_6379 = relay.Function([var_6377,var_6378,], output)
mutated_mod['func_6379'] = func_6379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6391 = relay.var("var_6391", dtype = "float64", shape = (10, 9, 16))#candidate|6391|(10, 9, 16)|var|float64
uop_6392 = relay.asinh(var_6391.astype('float64')) # shape=(10, 9, 16)
output = relay.Tuple([uop_6392,])
output2 = relay.Tuple([uop_6392,])
func_6394 = relay.Function([var_6391,], output)
mod['func_6394'] = func_6394
mod = relay.transform.InferType()(mod)
mutated_mod['func_6394'] = func_6394
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6395 = relay.var("var_6395", dtype = "float64", shape = (10, 9, 16))#candidate|6395|(10, 9, 16)|var|float64
func_6394_call = mutated_mod.get_global_var('func_6394')
call_6396 = func_6394_call(var_6395)
output = call_6396
func_6397 = relay.Function([var_6395], output)
mutated_mod['func_6397'] = func_6397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6016_call = mod.get_global_var('func_6016')
func_6017_call = mutated_mod.get_global_var('func_6017')
call_6431 = func_6016_call()
call_6432 = func_6016_call()
output = call_6431
output2 = call_6432
func_6447 = relay.Function([], output)
mod['func_6447'] = func_6447
mod = relay.transform.InferType()(mod)
mutated_mod['func_6447'] = func_6447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6447_call = mutated_mod.get_global_var('func_6447')
call_6448 = func_6447_call()
output = call_6448
func_6449 = relay.Function([], output)
mutated_mod['func_6449'] = func_6449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5176_call = mod.get_global_var('func_5176')
func_5177_call = mutated_mod.get_global_var('func_5177')
call_6489 = relay.TupleGetItem(func_5176_call(), 0)
call_6490 = relay.TupleGetItem(func_5177_call(), 0)
output = call_6489
output2 = call_6490
func_6518 = relay.Function([], output)
mod['func_6518'] = func_6518
mod = relay.transform.InferType()(mod)
output = func_6518()
func_6519 = relay.Function([], output)
mutated_mod['func_6519'] = func_6519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5821_call = mod.get_global_var('func_5821')
func_5822_call = mutated_mod.get_global_var('func_5822')
call_6577 = relay.TupleGetItem(func_5821_call(), 1)
call_6578 = relay.TupleGetItem(func_5822_call(), 1)
uop_6579 = relay.cos(call_6577.astype('float32')) # shape=(11, 9, 12)
uop_6581 = relay.cos(call_6578.astype('float32')) # shape=(11, 9, 12)
uop_6584 = relay.exp(uop_6579.astype('float32')) # shape=(11, 9, 12)
uop_6586 = relay.exp(uop_6581.astype('float32')) # shape=(11, 9, 12)
uop_6588 = relay.atanh(uop_6579.astype('float32')) # shape=(11, 9, 12)
uop_6590 = relay.atanh(uop_6581.astype('float32')) # shape=(11, 9, 12)
var_6591 = relay.var("var_6591", dtype = "float32", shape = (11, 9, 12))#candidate|6591|(11, 9, 12)|var|float32
bop_6592 = relay.maximum(uop_6584.astype('int16'), relay.reshape(var_6591.astype('int16'), relay.shape_of(uop_6584))) # shape=(11, 9, 12)
bop_6595 = relay.maximum(uop_6586.astype('int16'), relay.reshape(var_6591.astype('int16'), relay.shape_of(uop_6586))) # shape=(11, 9, 12)
bop_6602 = relay.floor_divide(call_6577.astype('float32'), relay.reshape(uop_6588.astype('float32'), relay.shape_of(call_6577))) # shape=(11, 9, 12)
bop_6605 = relay.floor_divide(call_6578.astype('float32'), relay.reshape(uop_6590.astype('float32'), relay.shape_of(call_6578))) # shape=(11, 9, 12)
var_6607 = relay.var("var_6607", dtype = "float32", shape = (11, 9, 12))#candidate|6607|(11, 9, 12)|var|float32
bop_6608 = relay.divide(uop_6579.astype('float64'), relay.reshape(var_6607.astype('float64'), relay.shape_of(uop_6579))) # shape=(11, 9, 12)
bop_6611 = relay.divide(uop_6581.astype('float64'), relay.reshape(var_6607.astype('float64'), relay.shape_of(uop_6581))) # shape=(11, 9, 12)
var_6616 = relay.var("var_6616", dtype = "float32", shape = (11, 9, 12))#candidate|6616|(11, 9, 12)|var|float32
bop_6617 = relay.mod(uop_6579.astype('float64'), relay.reshape(var_6616.astype('float64'), relay.shape_of(uop_6579))) # shape=(11, 9, 12)
bop_6620 = relay.mod(uop_6581.astype('float64'), relay.reshape(var_6616.astype('float64'), relay.shape_of(uop_6581))) # shape=(11, 9, 12)
bop_6623 = relay.greater_equal(bop_6608.astype('bool'), relay.reshape(bop_6602.astype('bool'), relay.shape_of(bop_6608))) # shape=(11, 9, 12)
bop_6626 = relay.greater_equal(bop_6611.astype('bool'), relay.reshape(bop_6605.astype('bool'), relay.shape_of(bop_6611))) # shape=(11, 9, 12)
uop_6628 = relay.sqrt(bop_6623.astype('float32')) # shape=(11, 9, 12)
uop_6630 = relay.sqrt(bop_6626.astype('float32')) # shape=(11, 9, 12)
bop_6631 = relay.bitwise_or(uop_6628.astype('uint8'), relay.reshape(uop_6584.astype('uint8'), relay.shape_of(uop_6628))) # shape=(11, 9, 12)
bop_6634 = relay.bitwise_or(uop_6630.astype('uint8'), relay.reshape(uop_6586.astype('uint8'), relay.shape_of(uop_6630))) # shape=(11, 9, 12)
uop_6642 = relay.rsqrt(uop_6584.astype('float64')) # shape=(11, 9, 12)
uop_6644 = relay.rsqrt(uop_6586.astype('float64')) # shape=(11, 9, 12)
uop_6650 = relay.acos(uop_6628.astype('float32')) # shape=(11, 9, 12)
uop_6652 = relay.acos(uop_6630.astype('float32')) # shape=(11, 9, 12)
func_5666_call = mod.get_global_var('func_5666')
func_5668_call = mutated_mod.get_global_var('func_5668')
call_6670 = func_5666_call()
call_6671 = func_5666_call()
output = relay.Tuple([bop_6592,bop_6617,bop_6631,uop_6642,uop_6650,call_6670,])
output2 = relay.Tuple([bop_6595,bop_6620,bop_6634,uop_6644,uop_6652,call_6671,])
func_6672 = relay.Function([var_6591,var_6607,var_6616,], output)
mod['func_6672'] = func_6672
mod = relay.transform.InferType()(mod)
var_6673 = relay.var("var_6673", dtype = "float32", shape = (11, 9, 12))#candidate|6673|(11, 9, 12)|var|float32
var_6674 = relay.var("var_6674", dtype = "float32", shape = (11, 9, 12))#candidate|6674|(11, 9, 12)|var|float32
var_6675 = relay.var("var_6675", dtype = "float32", shape = (11, 9, 12))#candidate|6675|(11, 9, 12)|var|float32
output = func_6672(var_6673,var_6674,var_6675,)
func_6676 = relay.Function([var_6673,var_6674,var_6675,], output)
mutated_mod['func_6676'] = func_6676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mod.get_global_var('func_5921')
func_5922_call = mutated_mod.get_global_var('func_5922')
call_6732 = relay.TupleGetItem(func_5921_call(), 0)
call_6733 = relay.TupleGetItem(func_5922_call(), 0)
var_6747 = relay.var("var_6747", dtype = "float32", shape = (12, 16, 13))#candidate|6747|(12, 16, 13)|var|float32
bop_6748 = relay.maximum(call_6732.astype('int64'), relay.reshape(var_6747.astype('int64'), relay.shape_of(call_6732))) # shape=(12, 16, 13)
bop_6751 = relay.maximum(call_6733.astype('int64'), relay.reshape(var_6747.astype('int64'), relay.shape_of(call_6733))) # shape=(12, 16, 13)
bop_6752 = relay.equal(call_6732.astype('bool'), relay.reshape(bop_6748.astype('bool'), relay.shape_of(call_6732))) # shape=(12, 16, 13)
bop_6755 = relay.equal(call_6733.astype('bool'), relay.reshape(bop_6751.astype('bool'), relay.shape_of(call_6733))) # shape=(12, 16, 13)
output = relay.Tuple([bop_6752,])
output2 = relay.Tuple([bop_6755,])
func_6768 = relay.Function([var_6747,], output)
mod['func_6768'] = func_6768
mod = relay.transform.InferType()(mod)
mutated_mod['func_6768'] = func_6768
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6769 = relay.var("var_6769", dtype = "float32", shape = (12, 16, 13))#candidate|6769|(12, 16, 13)|var|float32
func_6768_call = mutated_mod.get_global_var('func_6768')
call_6770 = func_6768_call(var_6769)
output = call_6770
func_6771 = relay.Function([var_6769], output)
mutated_mod['func_6771'] = func_6771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6789 = relay.var("var_6789", dtype = "float64", shape = (10, 10, 4))#candidate|6789|(10, 10, 4)|var|float64
uop_6790 = relay.asinh(var_6789.astype('float64')) # shape=(10, 10, 4)
output = uop_6790
output2 = uop_6790
func_6792 = relay.Function([var_6789,], output)
mod['func_6792'] = func_6792
mod = relay.transform.InferType()(mod)
mutated_mod['func_6792'] = func_6792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6793 = relay.var("var_6793", dtype = "float64", shape = (10, 10, 4))#candidate|6793|(10, 10, 4)|var|float64
func_6792_call = mutated_mod.get_global_var('func_6792')
call_6794 = func_6792_call(var_6793)
output = call_6794
func_6795 = relay.Function([var_6793], output)
mutated_mod['func_6795'] = func_6795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4926_call = mod.get_global_var('func_4926')
func_4927_call = mutated_mod.get_global_var('func_4927')
call_6923 = func_4926_call()
call_6924 = func_4926_call()
output = call_6923
output2 = call_6924
func_6930 = relay.Function([], output)
mod['func_6930'] = func_6930
mod = relay.transform.InferType()(mod)
mutated_mod['func_6930'] = func_6930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6930_call = mutated_mod.get_global_var('func_6930')
call_6931 = func_6930_call()
output = call_6931
func_6932 = relay.Function([], output)
mutated_mod['func_6932'] = func_6932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5749_call = mod.get_global_var('func_5749')
func_5751_call = mutated_mod.get_global_var('func_5751')
call_6933 = func_5749_call()
call_6934 = func_5749_call()
func_6376_call = mod.get_global_var('func_6376')
func_6379_call = mutated_mod.get_global_var('func_6379')
var_6944 = relay.var("var_6944", dtype = "float32", shape = (60,))#candidate|6944|(60,)|var|float32
var_6945 = relay.var("var_6945", dtype = "float64", shape = (1560,))#candidate|6945|(1560,)|var|float64
call_6943 = relay.TupleGetItem(func_6376_call(relay.reshape(var_6944.astype('float32'), [2, 3, 10]), relay.reshape(var_6945.astype('float64'), [1560,]), ), 0)
call_6946 = relay.TupleGetItem(func_6379_call(relay.reshape(var_6944.astype('float32'), [2, 3, 10]), relay.reshape(var_6945.astype('float64'), [1560,]), ), 0)
func_6518_call = mod.get_global_var('func_6518')
func_6519_call = mutated_mod.get_global_var('func_6519')
call_6951 = func_6518_call()
call_6952 = func_6518_call()
output = relay.Tuple([call_6933,call_6943,var_6944,var_6945,call_6951,])
output2 = relay.Tuple([call_6934,call_6946,var_6944,var_6945,call_6952,])
func_6955 = relay.Function([var_6944,var_6945,], output)
mod['func_6955'] = func_6955
mod = relay.transform.InferType()(mod)
mutated_mod['func_6955'] = func_6955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6955_call = mutated_mod.get_global_var('func_6955')
var_6957 = relay.var("var_6957", dtype = "float32", shape = (60,))#candidate|6957|(60,)|var|float32
var_6958 = relay.var("var_6958", dtype = "float64", shape = (1560,))#candidate|6958|(1560,)|var|float64
call_6956 = func_6955_call(var_6957,var_6958,)
output = call_6956
func_6959 = relay.Function([var_6957,var_6958,], output)
mutated_mod['func_6959'] = func_6959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mod.get_global_var('func_5921')
func_5922_call = mutated_mod.get_global_var('func_5922')
call_6970 = relay.TupleGetItem(func_5921_call(), 0)
call_6971 = relay.TupleGetItem(func_5922_call(), 0)
uop_6979 = relay.cosh(call_6970.astype('float32')) # shape=(12, 16, 13)
uop_6981 = relay.cosh(call_6971.astype('float32')) # shape=(12, 16, 13)
func_4784_call = mod.get_global_var('func_4784')
func_4787_call = mutated_mod.get_global_var('func_4787')
var_6993 = relay.var("var_6993", dtype = "float32", shape = (468, 4))#candidate|6993|(468, 4)|var|float32
call_6992 = relay.TupleGetItem(func_4784_call(relay.reshape(var_6993.astype('float32'), [13, 9, 16])), 0)
call_6994 = relay.TupleGetItem(func_4787_call(relay.reshape(var_6993.astype('float32'), [13, 9, 16])), 0)
output = relay.Tuple([uop_6979,call_6992,var_6993,])
output2 = relay.Tuple([uop_6981,call_6994,var_6993,])
func_6995 = relay.Function([var_6993,], output)
mod['func_6995'] = func_6995
mod = relay.transform.InferType()(mod)
var_6996 = relay.var("var_6996", dtype = "float32", shape = (468, 4))#candidate|6996|(468, 4)|var|float32
output = func_6995(var_6996)
func_6997 = relay.Function([var_6996], output)
mutated_mod['func_6997'] = func_6997
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7011 = relay.const([[[3,-10,-5,2,4,10,-3,-1,-4,9],[1,-6,9,-6,9,1,-4,-4,-10,2],[4,-9,4,4,-9,10,10,-7,-9,2],[-8,3,5,-2,2,6,6,6,7,10],[4,6,-5,-3,-7,-6,9,7,-7,-9]],[[-5,-6,2,10,2,5,-1,-10,-5,3],[-9,7,10,-1,2,-5,-7,-9,3,-8],[1,-10,6,9,4,-3,2,-10,3,9],[-1,6,5,7,-5,2,-10,-8,-2,-10],[-8,-9,5,5,3,7,10,2,-7,5]],[[5,9,10,4,4,-10,8,-5,1,3],[5,5,-3,1,7,-3,-3,-10,8,7],[-7,-6,-8,-2,-2,10,6,3,6,9],[-1,-8,3,-9,3,4,-5,-6,1,2],[4,-9,1,8,-9,1,-7,4,10,-2]],[[-9,2,7,9,-10,1,4,2,3,1],[7,10,4,6,7,-6,6,-2,-9,-3],[9,1,-4,-9,3,9,-3,-3,-6,10],[7,-10,5,8,-3,3,4,7,6,-7],[5,8,8,4,8,-5,-1,2,9,10]],[[-2,5,-8,6,-8,5,-10,9,4,-1],[-9,-1,-3,6,2,5,-10,2,5,-4],[-2,6,3,9,1,2,-8,8,-4,5],[-10,-2,3,10,3,-10,-4,6,-4,-5],[-6,-6,-7,-6,-1,-9,-3,3,4,-3]],[[9,1,-2,1,3,-2,4,-5,-2,-4],[-2,-4,-3,-1,2,3,9,-5,10,-10],[3,-3,-10,7,-9,-7,-3,8,-9,2],[-4,1,10,6,-3,4,8,2,-8,-2],[-2,-8,9,1,-4,7,2,1,5,4]],[[6,3,-7,-4,6,2,4,-2,-7,-10],[8,10,7,-1,-1,-10,5,2,2,9],[-1,-7,2,-9,2,1,-7,9,-4,-8],[-5,3,4,2,-1,-6,-1,-7,-2,-3],[6,-4,6,-8,-4,-5,-7,-7,-4,-8]],[[9,5,-7,-2,-1,-3,10,1,-3,-4],[7,5,10,6,-2,-6,10,-8,6,-8],[-6,5,10,-10,4,1,-7,-7,8,-8],[-2,1,6,3,-1,10,-3,1,-10,6],[7,7,-4,1,-2,4,3,-9,7,2]],[[2,3,-8,9,-7,2,-4,10,-5,-2],[7,-2,3,1,1,8,-7,9,7,-3],[-4,-8,4,-6,8,8,6,-8,-1,-9],[-4,8,-9,-7,6,9,-5,-8,-7,-9],[-4,10,7,1,7,-10,8,-2,-6,3]],[[1,2,1,6,-6,-2,-10,-10,-10,-6],[-2,6,6,-7,9,4,2,-5,-8,2],[3,-4,-6,-1,7,3,-6,9,9,4],[-6,5,6,2,8,-8,9,6,-6,4],[-8,1,8,-4,8,2,-8,-5,-6,8]],[[2,-8,8,6,5,-5,7,-5,-10,9],[-8,-3,7,-3,-4,10,9,-4,-2,-8],[10,-7,3,-9,2,-10,-8,-9,8,1],[-4,-7,9,-7,4,5,3,9,6,9],[-6,8,-2,3,10,-4,-5,7,-4,2]],[[-2,-10,-10,10,-8,4,8,10,-1,-9],[-4,-5,-6,2,9,-8,2,-5,-10,8],[4,2,2,-1,2,3,-7,-7,-3,2],[3,-2,-1,-7,3,-9,-7,-10,-2,1],[-5,3,7,4,1,1,-8,-10,9,2]],[[-3,1,-1,-9,4,-8,-8,-10,1,4],[-9,-5,-5,8,4,-8,-10,-7,9,-3],[-7,3,-1,10,-6,5,9,-4,7,-10],[3,-8,-8,3,2,-2,8,6,-8,-5],[-1,2,10,-4,-10,-8,4,-6,-10,10]],[[9,-10,-7,10,3,2,4,5,9,-3],[-6,2,8,10,10,-1,-2,-8,9,4],[1,-7,-9,-3,2,7,-10,7,8,-7],[7,-9,-2,8,3,5,-10,-3,7,-7],[-3,-8,-7,10,-2,6,-8,6,10,-1]]], dtype = "int16")#candidate|7011|(14, 5, 10)|const|int16
var_7012 = relay.var("var_7012", dtype = "int16", shape = (14, 5, 10))#candidate|7012|(14, 5, 10)|var|int16
bop_7013 = relay.bitwise_and(const_7011.astype('int16'), relay.reshape(var_7012.astype('int16'), relay.shape_of(const_7011))) # shape=(14, 5, 10)
func_6116_call = mod.get_global_var('func_6116')
func_6118_call = mutated_mod.get_global_var('func_6118')
var_7017 = relay.var("var_7017", dtype = "float32", shape = (6, 140))#candidate|7017|(6, 140)|var|float32
call_7016 = relay.TupleGetItem(func_6116_call(relay.reshape(var_7017.astype('float32'), [840,])), 0)
call_7018 = relay.TupleGetItem(func_6118_call(relay.reshape(var_7017.astype('float32'), [840,])), 0)
uop_7021 = relay.cos(var_7012.astype('float32')) # shape=(14, 5, 10)
output = relay.Tuple([bop_7013,call_7016,var_7017,uop_7021,])
output2 = relay.Tuple([bop_7013,call_7018,var_7017,uop_7021,])
F = relay.Function([var_7012,var_7017,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7012,var_7017,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

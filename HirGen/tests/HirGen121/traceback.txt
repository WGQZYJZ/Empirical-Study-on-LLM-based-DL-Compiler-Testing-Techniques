==========mod==========
#[version = "0.0.5"]
def @func_2144(%var_2139: Tensor[(15, 3, 10), uint32]) -> (Tensor[(15, 3, 10), bool],) {
  %0 = cast(%var_2139, dtype="bool") /* ty=Tensor[(15, 3, 10), bool] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(15, 3, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 3, 10), uint32] */, dtype="bool") /* ty=Tensor[(15, 3, 10), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = equal(%2, %3) /* ty=Tensor[(15, 3, 10), bool] */;
  (%4,)
}

def @func_3635() -> (Tensor[(4, 2, 13), float32],) {
  %5 = @func_2749() /* ty=Tensor[(4, 2, 13), float32] */;
  (%5,)
}

def @func_5791() -> (Tensor[(4, 2, 13), float32], Tensor[(6, 3, 12), int32]) {
  %6 = @func_3884() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %7 = @func_4625() /* ty=(Tensor[(6, 3, 12), float32],) */;
  %8 = %7.0;
  %9 = @func_4625() /* ty=(Tensor[(6, 3, 12), float32],) */;
  %10 = %9.0;
  %11 = cast(%10, dtype="int32") /* ty=Tensor[(6, 3, 12), int32] */;
  %12 = shape_of(%8, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(%8, dtype="int32") /* ty=Tensor[(6, 3, 12), int32] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %15 = %6.0;
  %16 = multiply(%13, %14) /* ty=Tensor[(6, 3, 12), int32] */;
  (%15, %16)
}

def @func_5877() -> (Tensor[(4, 2, 13), float32],) {
  %17 = @func_4450() /* ty=Tensor[(4, 2, 13), float32] */;
  (%17,)
}

def @func_5058(%var_5055: Tensor[(16, 7, 9), float64]) -> Tensor[(16, 7, 9), float64] {
  %18 = cast(%var_5055, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
  atan(%18) /* ty=Tensor[(16, 7, 9), float64] */
}

def @func_4269() -> (Tensor[(4, 2, 13), float64], Tensor[(96), float32]) {
  %19 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
  %20 = cast(%19, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %21 = reshape(%20, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %22 = @func_3610(%21) /* ty=(Tensor[(96), float32], Tensor[(4, 2, 13), bool]) */;
  %23 = %22.0;
  (%19, %23)
}

def @func_1574(%var_1565: Tensor[(8, 2, 7), int16], %var_1566: Tensor[(8, 2, 7), int16]) -> (Tensor[(8, 2, 7), int16],) {
  %24 = cast(%var_1566, dtype="int16") /* ty=Tensor[(8, 2, 7), int16] */;
  %25 = shape_of(%var_1565, dtype="int32") /* ty=Tensor[(3), int32] */;
  %26 = cast(%var_1565, dtype="int16") /* ty=Tensor[(8, 2, 7), int16] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %28 = subtract(%26, %27) /* ty=Tensor[(8, 2, 7), int16] */;
  (%28,)
}

def @func_2563() -> Tensor[(4, 2, 13), float64] {
  %29 = @func_1664() /* ty=Tensor[(4, 2, 13), float32] */;
  %30 = cast(%29, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  cosh(%30) /* ty=Tensor[(4, 2, 13), float64] */
}

def @func_4750() -> Tensor[(4, 2, 13), float32] {
  @func_2749() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_3016(%var_2957: Tensor[(12, 12, 13), float64], %var_2963: Tensor[(1120), float32]) -> (Tensor[(5, 14, 16), float32], Tensor[(1120), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(12, 12, 13), uint64]) {
  %31 = cast(%var_2963, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %32 = reshape(%31, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), float32] */;
  %33 = @func_51(%32) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) */;
  %34 = @func_2294() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), bool]) */;
  %35 = cast(%var_2957, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
  %36 = asin(%35) /* ty=Tensor[(12, 12, 13), float64] */;
  %37 = cast(%36, dtype="uint64") /* ty=Tensor[(12, 12, 13), uint64] */;
  %38 = shape_of(%var_2957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%var_2957, dtype="uint64") /* ty=Tensor[(12, 12, 13), uint64] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %41 = %33.0;
  %42 = %34.2;
  %43 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
  %44 = logical_xor(%39, %40) /* ty=Tensor[(12, 12, 13), uint64] */;
  (%41, %var_2963, %42, %43, %44)
}

def @func_1588() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) {
  %45 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %46 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
  %47 = %45.0;
  (%46, %47)
}

def @func_3250() -> Tensor[(4, 2, 13), float32] {
  %48 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %48.0
}

def @func_4031(%var_4017: Tensor[(56, 2), int16]) -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float64], Tensor[(13, 672), bool], Tensor[(8, 2, 7), int16], Tensor[(56, 2), int16]) {
  %49 = @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %50 = @func_3649() /* ty=Tensor[(4, 2, 13), float64] */;
  %51 = cast(%50, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %52 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 84), int8] */, dtype="int8") /* ty=Tensor[(8, 84), int8] */;
  %53 = reshape(%51, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %54 = reshape(%52, newshape=[1, 672]) /* ty=Tensor[(1, 672), int8] */;
  %55 = @func_3801(%53, %54) /* ty=(Tensor[(4, 2, 13), uint32], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float32], Tensor[(4, 2, 13), bool]) */;
  %56 = %55.2;
  %57 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 84), int8] */, dtype="float64") /* ty=Tensor[(8, 84), float64] */;
  %58 = shape_of(%56, dtype="int32") /* ty=Tensor[(2), int32] */;
  %59 = cast(%56, dtype="float64") /* ty=Tensor[(?, 672), float64] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %61 = cast(%56, dtype="bool") /* ty=Tensor[(?, 672), bool] */;
  %62 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 672), float32] */, dtype="bool") /* ty=Tensor[(13, 672), bool] */;
  %63 = cast(%var_4017, dtype="int16") /* ty=Tensor[(56, 2), int16] */;
  %64 = cast(%var_4017, dtype="int16") /* ty=Tensor[(56, 2), int16] */;
  %65 = reshape(%63, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), int16] */;
  %66 = reshape(%64, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), int16] */;
  %67 = @func_1574(%65, %66) /* ty=(Tensor[(8, 2, 7), int16],) */;
  %68 = %49.0;
  %69 = mod(%59, %60) /* ty=Tensor[(?, 672), float64] */;
  %70 = less(%61, %62) /* ty=Tensor[(13, 672), bool] */;
  %71 = %67.0;
  (%50, %68, %69, %70, %71, %var_4017)
}

def @func_948(%var_934: Tensor[(4, 12, 10), int8], %var_935: Tensor[(4, 12, 10), int8], %var_944: Tensor[(1120), float32]) -> (Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) {
  %72 = cast(%var_935, dtype="int8") /* ty=Tensor[(4, 12, 10), int8] */;
  %73 = shape_of(%var_934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%var_934, dtype="int8") /* ty=Tensor[(4, 12, 10), int8] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %76 = cast(%var_944, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %77 = reshape(%76, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), float32] */;
  %78 = @func_51(%77) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) */;
  %79 = bitwise_xor(%74, %75) /* ty=Tensor[(4, 12, 10), int8] */;
  %80 = %78.1;
  (%79, %80, %var_944)
}

def @func_4713() -> Tensor[(1, 16, 6), float32] {
  @func_2916() /* ty=Tensor[(1, 16, 6), float32] */
}

def @func_5456(%var_5445: Tensor[(8, 9, 6), int64]) -> Tensor[(8, 9, 6), float32] {
  %81 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 9, 6), int64] */, dtype="bool") /* ty=Tensor[(8, 9, 6), bool] */;
  %82 = shape_of(%var_5445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%var_5445, dtype="bool") /* ty=Tensor[(8, 9, 6), bool] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %85 = not_equal(%83, %84) /* ty=Tensor[(8, 9, 6), bool] */;
  %86 = cast(%85, dtype="float32") /* ty=Tensor[(8, 9, 6), float32] */;
  atanh(%86) /* ty=Tensor[(8, 9, 6), float32] */
}

def @func_4191(%var_4179: Tensor[(10, 14, 3), float64], %var_4189: Tensor[(150, 3), uint32]) -> (Tensor[(10, 14, 3), float64], Tensor[(15, 3, 10), bool], Tensor[(150, 3), uint32]) {
  %87 = cast(%var_4179, dtype="float64") /* ty=Tensor[(10, 14, 3), float64] */;
  %88 = cast(%var_4189, dtype="uint32") /* ty=Tensor[(150, 3), uint32] */;
  %89 = reshape(%88, newshape=[15, 3, 10]) /* ty=Tensor[(15, 3, 10), uint32] */;
  %90 = @func_2144(%89) /* ty=(Tensor[(15, 3, 10), bool],) */;
  %91 = cos(%87) /* ty=Tensor[(10, 14, 3), float64] */;
  %92 = %90.0;
  (%91, %92, %var_4189)
}

def @func_1626() -> Tensor[(4, 2, 13), float64] {
  %93 = @func_1383() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %94 = %93.0;
  %95 = cast(%94, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  sqrt(%95) /* ty=Tensor[(4, 2, 13), float64] */
}

def @func_5337(%var_5208: Tensor[(12, 13, 1), float64], %var_5299: Tensor[(1120), float32]) -> (Tensor[(4, 2, 13), float64], Tensor[(28, 4), int16], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(12, 13, ?), float32], Tensor[(4, 2, 13), float64], Tensor[(1120), float32], Tensor[(1872), float64], Tensor[(1120), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(12, 13, ?), int32]) {
  %96 = cast(meta[relay.Constant][4] /* ty=Tensor[(28, 4), int16] */, dtype="int16") /* ty=Tensor[(28, 4), int16] */;
  %97 = reshape(%96, newshape=[56, 2]) /* ty=Tensor[(56, 2), int16] */;
  %98 = @func_4031(%97) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float64], Tensor[(13, 672), bool], Tensor[(8, 2, 7), int16], Tensor[(56, 2), int16]) */;
  %99 = @func_3658() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), bool]) */;
  %100 = cast(%var_5208, dtype="float64") /* ty=Tensor[(12, 13, 1), float64] */;
  %101 = exp(%100) /* ty=Tensor[(12, 13, 1), float64] */;
  %102 = cast(%101, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  %103 = log2(%102) /* ty=Tensor[(12, 13, 1), float32] */;
  %104 = cast(%103, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  %105 = acos(%104) /* ty=Tensor[(12, 13, 1), float32] */;
  %106 = cast(%105, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  %107 = cosh(%106) /* ty=Tensor[(12, 13, 1), float32] */;
  %108 = cast(%101, dtype="int32") /* ty=Tensor[(12, 13, 1), int32] */;
  %109 = shape_of(%var_5208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%var_5208, dtype="int32") /* ty=Tensor[(12, 13, 1), int32] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %112 = maximum(%110, %111) /* ty=Tensor[(12, 13, ?), int32] */;
  %113 = cast(%112, dtype="float32") /* ty=Tensor[(12, 13, ?), float32] */;
  %114 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%107, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %117 = @func_3321() /* ty=(Tensor[(4, 2, 13), float64],) */;
  %118 = cast(meta[relay.Constant][5] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %119 = cast(%var_5299, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %120 = reshape(%118, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), float64] */;
  %121 = reshape(%119, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %122 = @func_3016(%120, %121) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(1120), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(12, 12, 13), uint64]) */;
  %123 = @func_3552() /* ty=(Tensor[(4, 2, 13), float64],) */;
  %124 = cast(%112, dtype="float64") /* ty=Tensor[(12, 13, ?), float64] */;
  %125 = shape_of(%105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%105, dtype="float64") /* ty=Tensor[(12, 13, 1), float64] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %128 = divide(%126, %127) /* ty=Tensor[(12, 13, ?), float64] */;
  %129 = cast(%128, dtype="float64") /* ty=Tensor[(12, 13, ?), float64] */;
  %130 = shape_of(%105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%105, dtype="float64") /* ty=Tensor[(12, 13, 1), float64] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %133 = power(%131, %132) /* ty=Tensor[(12, 13, ?), float64] */;
  %134 = cast(%133, dtype="int32") /* ty=Tensor[(12, 13, ?), int32] */;
  %135 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %136 = cast(%107, dtype="int32") /* ty=Tensor[(12, 13, 1), int32] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %138 = %98.0;
  %139 = @func_3949() /* ty=Tensor[(4, 2, 13), float32] */;
  %140 = %99.0;
  %141 = floor_divide(%115, %116) /* ty=Tensor[(12, 13, ?), float32] */;
  %142 = %117.0;
  %143 = %122.1;
  %144 = %123.0;
  %145 = @func_1972() /* ty=Tensor[(4, 2, 13), float32] */;
  %146 = multiply(%136, %137) /* ty=Tensor[(12, 13, ?), int32] */;
  (%138, meta[relay.Constant][4] /* ty=Tensor[(28, 4), int16] */, %139, %140, %141, %142, %143, meta[relay.Constant][5] /* ty=Tensor[(1872), float64] */, %var_5299, %144, %145, %146)
}

def @func_2074(%var_2068: Tensor[(15, 2, 7), float64]) -> Tensor[(15, 2, 7), float64] {
  %147 = cast(%var_2068, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  sinh(%147) /* ty=Tensor[(15, 2, 7), float64] */
}

def @func_5978(%var_5926: Tensor[(450), uint32], %var_5963: Tensor[(8, 84), int8]) -> (Tensor[(4, 2, 13), float64], Tensor[(15, 3, 10), bool], Tensor[(450), uint32], Tensor[(4, 2, 13), uint32], Tensor[(8, 84), int8]) {
  %148 = @func_4387() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), int32]) */;
  %149 = cast(%var_5926, dtype="uint32") /* ty=Tensor[(450), uint32] */;
  %150 = reshape(%149, newshape=[15, 3, 10]) /* ty=Tensor[(15, 3, 10), uint32] */;
  %151 = @func_2144(%150) /* ty=(Tensor[(15, 3, 10), bool],) */;
  %152 = %148.1;
  %153 = cast(%152, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %154 = cast(%var_5963, dtype="int8") /* ty=Tensor[(8, 84), int8] */;
  %155 = reshape(%153, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %156 = reshape(%154, newshape=[1, 672]) /* ty=Tensor[(1, 672), int8] */;
  %157 = @func_3801(%155, %156) /* ty=(Tensor[(4, 2, 13), uint32], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float32], Tensor[(4, 2, 13), bool]) */;
  %158 = %151.0;
  %159 = %157.0;
  (%152, %158, %var_5926, %159, %var_5963)
}

def @func_1664() -> Tensor[(4, 2, 13), float32] {
  %160 = @func_1588() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */;
  %160.1
}

def @func_3152(%var_3139: Tensor[(4, 2, 13), float32]) -> Tensor[(4, 2, 13), bool] {
  %161 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
  %162 = cast(%var_3139, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%161, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%164, %165) /* ty=Tensor[(4, 2, 13), bool] */
}

def @func_4450() -> Tensor[(4, 2, 13), float32] {
  %166 = @func_3658() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), bool]) */;
  %166.0
}

def @func_1223(%var_1209: Tensor[(12, 10, 1), float64], %var_1210: Tensor[(12, 10, 10), float64]) -> (Tensor[(12, 10, 10), bool],) {
  %167 = cast(%var_1209, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %168 = cast(%var_1210, dtype="bool") /* ty=Tensor[(12, 10, 10), bool] */;
  %169 = greater(%167, %168) /* ty=Tensor[(12, 10, 10), bool] */;
  (%169,)
}

def @func_4739() -> (Tensor[(4, 2, 13), float64],) {
  %170 = @func_4387() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), int32]) */;
  %171 = %170.1;
  (%171,)
}

def @func_575(%var_530: Tensor[(15, 2, 15), int8], %var_539: Tensor[(1120, 1), float32]) -> (Tensor[(15, 2, 15), int8], Tensor[(5, 14, 16), float32], Tensor[(1120, ?), float32]) {
  %172 = cast(meta[relay.Constant][6] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %173 = cast(%var_530, dtype="int8") /* ty=Tensor[(15, 2, 15), int8] */;
  %174 = cast(%var_539, dtype="float32") /* ty=Tensor[(1120, 1), float32] */;
  %175 = reshape(%174, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), float32] */;
  %176 = @func_51(%175) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) */;
  %177 = cast(%var_539, dtype="int16") /* ty=Tensor[(1120, 1), int16] */;
  %178 = cast(meta[relay.Constant][6] /* ty=int8 */, dtype="int16") /* ty=int16 */;
  %179 = right_shift(%177, %178) /* ty=Tensor[(1120, 1), int16] */;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(1120, 1), float32] */;
  %181 = asin(%180) /* ty=Tensor[(1120, 1), float32] */;
  %182 = cast(%179, dtype="float64") /* ty=Tensor[(1120, 1), float64] */;
  %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(2), int32] */;
  %184 = cast(%181, dtype="float64") /* ty=Tensor[(1120, 1), float64] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %186 = mod(%184, %185) /* ty=Tensor[(1120, ?), float64] */;
  %187 = cast(%179, dtype="float32") /* ty=Tensor[(1120, 1), float32] */;
  %188 = shape_of(%186, dtype="int32") /* ty=Tensor[(2), int32] */;
  %189 = cast(%186, dtype="float32") /* ty=Tensor[(1120, ?), float32] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %191 = bitwise_and(%172, %173) /* ty=Tensor[(15, 2, 15), int8] */;
  %192 = %176.1;
  %193 = multiply(%189, %190) /* ty=Tensor[(1120, ?), float32] */;
  (%191, %192, %193)
}

def @func_1972() -> Tensor[(4, 2, 13), float32] {
  %194 = @func_1383() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %194.0
}

def @func_4169(%var_4079: Tensor[(4, 2, 13), float32], %var_4090: Tensor[(882), uint32], %var_4117: Tensor[(770), float64], %var_4118: Tensor[(450), int8]) -> (Tensor[(4, 2, 13), int64], Tensor[(9, 7, 14), uint64], Tensor[(882), uint32], Tensor[(96), float32], Tensor[(1120), float32], Tensor[(480), int8], Tensor[(4, 2, 13), float32], Tensor[(7, 10), float64], Tensor[(770), float64], Tensor[(450), int8], Tensor[(14, 5, 1120), float32], Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32], Tensor[(4, 2, 13), float32], Tensor[(1, 770), float64], Tensor[(540), float64]) {
  %195 = @func_3250() /* ty=Tensor[(4, 2, 13), float32] */;
  %196 = cast(%var_4079, dtype="int64") /* ty=Tensor[(4, 2, 13), int64] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%195, dtype="int64") /* ty=Tensor[(4, 2, 13), int64] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %200 = cast(%var_4090, dtype="uint32") /* ty=Tensor[(882), uint32] */;
  %201 = reshape(%200, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), uint32] */;
  %202 = @func_3439(%201) /* ty=(Tensor[(9, 7, 14), uint64], Tensor[(4, 2, 13), float32]) */;
  %203 = cast(%195, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %204 = reshape(%203, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %205 = @func_3610(%204) /* ty=(Tensor[(96), float32], Tensor[(4, 2, 13), bool]) */;
  %206 = cast(meta[relay.Constant][7] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %207 = cast(meta[relay.Constant][7] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %208 = cast(meta[relay.Constant][8] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %209 = reshape(%206, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
  %210 = reshape(%207, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
  %211 = reshape(%208, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %212 = @func_948(%209, %210, %211) /* ty=(Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) */;
  %213 = @func_2318() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */;
  %214 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 10), float64] */;
  %215 = cast(%var_4117, dtype="float64") /* ty=Tensor[(770), float64] */;
  %216 = cast(%var_4118, dtype="int8") /* ty=Tensor[(450), int8] */;
  %217 = reshape(%214, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), float64] */;
  %218 = reshape(%215, newshape=[770]) /* ty=Tensor[(770), float64] */;
  %219 = reshape(%216, newshape=[150, 3]) /* ty=Tensor[(150, 3), int8] */;
  %220 = @func_2356(%217, %218, %219) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(770), float64], Tensor[(150, 3), int8], Tensor[(14, 5, ?), bool]) */;
  %221 = %220.3;
  %222 = cast(%221, dtype="float32") /* ty=Tensor[(14, 5, ?), float32] */;
  %223 = cast(meta[relay.Constant][8] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %224 = cast(meta[relay.Constant][8] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %225 = reshape(%224, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), float32] */;
  %226 = @func_51(%225) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) */;
  %227 = cast(meta[relay.Constant][7] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %228 = cast(meta[relay.Constant][7] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %229 = cast(meta[relay.Constant][8] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %230 = reshape(%227, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
  %231 = reshape(%228, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
  %232 = reshape(%229, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %233 = @func_948(%230, %231, %232) /* ty=(Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) */;
  %234 = cast(meta[relay.Constant][7] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %235 = cast(meta[relay.Constant][7] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %236 = cast(meta[relay.Constant][8] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %237 = reshape(%234, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
  %238 = reshape(%235, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
  %239 = reshape(%236, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %240 = @func_948(%237, %238, %239) /* ty=(Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) */;
  %241 = @func_2318() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */;
  %242 = cast(meta[relay.Constant][10] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %243 = cast(meta[relay.Constant][10] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %244 = reshape(%242, newshape=[10, 9, 6]) /* ty=Tensor[(10, 9, 6), float64] */;
  %245 = reshape(%243, newshape=[10, 9, 6]) /* ty=Tensor[(10, 9, 6), float64] */;
  %246 = @func_2505(%244, %245) /* ty=(Tensor[(10, 9, 6), bool], Tensor[(4, 2, 13), float32], Tensor[(5, 14, 16), float32], Tensor[(1, 770), float64], Tensor[(150, 3), int8], Tensor[(4, 2, 13), float32], Tensor[(10, 9, 6), int32], Tensor[(10, 9, 6), int8]) */;
  %247 = right_shift(%198, %199) /* ty=Tensor[(4, 2, 13), int64] */;
  %248 = %202.0;
  %249 = %205.0;
  %250 = %212.2;
  %251 = %213.2;
  %252 = floor_divide(%222, %223) /* ty=Tensor[(14, 5, 1120), float32] */;
  %253 = %226.1;
  %254 = %233.1;
  %255 = %240.1;
  %256 = %241.1;
  %257 = %246.3;
  (%247, %248, %var_4090, %249, %250, meta[relay.Constant][7] /* ty=Tensor[(480), int8] */, %251, meta[relay.Constant][9] /* ty=Tensor[(7, 10), float64] */, %var_4117, %var_4118, %252, %253, %254, %255, %256, %257, meta[relay.Constant][10] /* ty=Tensor[(540), float64] */)
}

def @func_5414() -> (Tensor[(96), float32], Tensor[(96), float32]) {
  %258 = @func_4269() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(96), float32]) */;
  %259 = @func_4269() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(96), float32]) */;
  %260 = %258.1;
  %261 = %259.1;
  (%260, %261)
}

def @func_2055(%var_1994: Tensor[(4, 2, 13), float32], %var_2039: Tensor[(1120), float32]) -> (Tensor[(4, 2, 13), bool], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(480), int8], Tensor[(1120), float32], Tensor[(4, 2, 13), bool]) {
  %262 = @func_1383() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %263 = %262.0;
  %264 = cast(%263, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %265 = acos(%264) /* ty=Tensor[(4, 2, 13), float32] */;
  %266 = cast(%var_1994, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %267 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%265, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %270 = @func_1588() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */;
  %271 = cast(meta[relay.Constant][11] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %272 = cast(meta[relay.Constant][11] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %273 = cast(%var_2039, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %274 = reshape(%271, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
  %275 = reshape(%272, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
  %276 = reshape(%273, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %277 = @func_948(%274, %275, %276) /* ty=(Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) */;
  %278 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 2, 13), float32] */, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %279 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %280 = cast(%265, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %282 = logical_and(%268, %269) /* ty=Tensor[(4, 2, 13), bool] */;
  %283 = @func_1972() /* ty=Tensor[(4, 2, 13), float32] */;
  %284 = %270.0;
  %285 = %277.2;
  %286 = equal(%280, %281) /* ty=Tensor[(4, 2, 13), bool] */;
  (%282, %283, %284, %285, meta[relay.Constant][11] /* ty=Tensor[(480), int8] */, %var_2039, %286)
}

def @main(%var_6298: Tensor[(54, 10), float64]) -> (Tensor[(4, 2, 13), float64], Tensor[(54, 10), float64], Tensor[(54, 10), float32]) {
  %287 = @func_3552() /* ty=(Tensor[(4, 2, 13), float64],) */;
  %288 = cast(%var_6298, dtype="float64") /* ty=Tensor[(54, 10), float64] */;
  %289 = cast(%var_6298, dtype="float64") /* ty=Tensor[(54, 10), float64] */;
  %290 = reshape(%289, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %291 = @func_4984(%290) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(10, 9, 6), bool], Tensor[(540), float64]) */;
  %292 = %291.2;
  %293 = cast(%292, dtype="float32") /* ty=Tensor[(540), float32] */;
  %294 = shape_of(%var_6298, dtype="int32") /* ty=Tensor[(2), int32] */;
  %295 = cast(%var_6298, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %297 = %287.0;
  %298 = log2(%288) /* ty=Tensor[(54, 10), float64] */;
  %299 = divide(%295, %296) /* ty=Tensor[(54, 10), float32] */;
  (%297, %298, %299)
}

def @func_4387() -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), int32]) {
  %300 = @func_1739() /* ty=(Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) */;
  %301 = @func_3649() /* ty=Tensor[(4, 2, 13), float64] */;
  %302 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
  %303 = %300.3;
  (%301, %302, %303)
}

def @func_3321() -> (Tensor[(4, 2, 13), float64],) {
  %304 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
  (%304,)
}

def @func_1383() -> (Tensor[(4, 2, 13), float32],) {
  %305 = cast(-6.23218f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %306 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %307 = mod(%305, %306) /* ty=Tensor[(4, 2, 13), float32] */;
  (%307,)
}

def @func_3649() -> Tensor[(4, 2, 13), float64] {
  %308 = @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %309 = %308.0;
  %310 = cast(%309, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  asin(%310) /* ty=Tensor[(4, 2, 13), float64] */
}

def @func_5677(%var_5670: Tensor[(4, 16, 13), int32]) -> (Tensor[(4, 16, 13), int32],) {
  %311 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 1, 13), int32] */, dtype="int32") /* ty=Tensor[(4, 1, 13), int32] */;
  %312 = cast(%var_5670, dtype="int32") /* ty=Tensor[(4, 16, 13), int32] */;
  %313 = add(%311, %312) /* ty=Tensor[(4, 16, 13), int32] */;
  (%313,)
}

def @func_2429(%var_2422: Tensor[(1120), float32]) -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %314 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %315 = %314.0;
  %316 = cast(%315, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %317 = sigmoid(%316) /* ty=Tensor[(4, 2, 13), float32] */;
  %318 = cast(%317, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %319 = cast(%var_2422, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %320 = reshape(%318, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %321 = reshape(%319, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %322 = @func_2055(%320, %321) /* ty=(Tensor[(4, 2, 13), bool], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(480), int8], Tensor[(1120), float32], Tensor[(4, 2, 13), bool]) */;
  %323 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
  %324 = @func_1972() /* ty=Tensor[(4, 2, 13), float32] */;
  %325 = %322.3;
  (%323, %317, %324, %325, %var_2422)
}

def @func_5499() -> (Tensor[(4, 2, 13), float32],) {
  %326 = @func_3884() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %327 = %326.0;
  (%327,)
}

def @func_1534() -> Tensor[(4, 2, 13), float32] {
  %328 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %329 = %328.0;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  rsqrt(%330) /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_5398() -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), uint8], Tensor[(4, 2, 13), bool], Tensor[(10, 9, 6), bool]) {
  %331 = @func_4739() /* ty=(Tensor[(4, 2, 13), float64],) */;
  %332 = %331.0;
  %333 = cast(%332, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %334 = reshape(%333, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %335 = @func_4215(%334) /* ty=(Tensor[(4, 2, 13), uint8],) */;
  %336 = @func_2294() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), bool]) */;
  %337 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 180), float64] */, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %338 = reshape(%337, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %339 = @func_4984(%338) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(10, 9, 6), bool], Tensor[(540), float64]) */;
  %340 = %339.1;
  %341 = cast(%340, dtype="bool") /* ty=Tensor[(10, 9, 6), bool] */;
  %342 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(3, 180), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %343 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 180), float64] */, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %345 = not_equal(%343, %344) /* ty=Tensor[(3, 180), bool] */;
  %346 = cast(%345, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %347 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%340, dtype="bool") /* ty=Tensor[(10, 9, 6), bool] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %350 = %335.0;
  %351 = %336.3;
  %352 = logical_or(%348, %349) /* ty=Tensor[(10, 9, 6), bool] */;
  (%332, %350, %351, %352)
}

def @func_4428(%var_4416: Tensor[(70), float64], %var_4417: Tensor[(385, 2), float64]) -> (Tensor[(4, 2, 13), float32], Tensor[(14, 5, ?), bool], Tensor[(70), float64], Tensor[(385, 2), float64], Tensor[(10, 45), int8]) {
  %353 = @func_3884() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %354 = cast(%var_4416, dtype="float64") /* ty=Tensor[(70), float64] */;
  %355 = cast(%var_4417, dtype="float64") /* ty=Tensor[(385, 2), float64] */;
  %356 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 45), int8] */, dtype="int8") /* ty=Tensor[(10, 45), int8] */;
  %357 = reshape(%354, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), float64] */;
  %358 = reshape(%355, newshape=[770]) /* ty=Tensor[(770), float64] */;
  %359 = reshape(%356, newshape=[150, 3]) /* ty=Tensor[(150, 3), int8] */;
  %360 = @func_2356(%357, %358, %359) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(770), float64], Tensor[(150, 3), int8], Tensor[(14, 5, ?), bool]) */;
  %361 = %353.0;
  %362 = %360.3;
  (%361, %362, %var_4416, %var_4417, meta[relay.Constant][16] /* ty=Tensor[(10, 45), int8] */)
}

def @func_51(%var_32: Tensor[(5, 14, 16), float32]) -> (Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) {
  %363 = cast(%var_32, dtype="float32") /* ty=Tensor[(5, 14, 16), float32] */;
  %364 = cosh(%363) /* ty=Tensor[(5, 14, 16), float32] */;
  %365 = cast(%364, dtype="float32") /* ty=Tensor[(5, 14, 16), float32] */;
  %366 = sigmoid(%365) /* ty=Tensor[(5, 14, 16), float32] */;
  %367 = cast(%366, dtype="float32") /* ty=Tensor[(5, 14, 16), float32] */;
  %368 = cast(%366, dtype="float32") /* ty=Tensor[(5, 14, 16), float32] */;
  %369 = exp(%367) /* ty=Tensor[(5, 14, 16), float32] */;
  %370 = sin(%368) /* ty=Tensor[(5, 14, 16), float32] */;
  (%369, %370)
}

def @func_6054() -> (Tensor[(7, 2, 13), int32],) {
  %371 = @func_5846() /* ty=(Tensor[(7, 2, 13), int32], Tensor[(4, 2, 13), float64], Tensor[(1344), float32]) */;
  %372 = %371.0;
  (%372,)
}

def @func_6194(%var_6172: Tensor[(104), float32], %var_6182: Tensor[(12, 156), float64]) -> (Tensor[(1, 16, 6), float32], Tensor[(4, 2, 13), bool], Tensor[(104), float32], Tensor[(12, 156), float64], Tensor[(12, 156), float64], Tensor[(1, 16, 6), float64]) {
  %373 = cast(%var_6172, dtype="float32") /* ty=Tensor[(104), float32] */;
  %374 = reshape(%373, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %375 = cast(%var_6182, dtype="float64") /* ty=Tensor[(12, 156), float64] */;
  %376 = reshape(%375, newshape=[12, 156]) /* ty=Tensor[(12, 156), float64] */;
  %377 = @func_5112(%376) /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(12, 156), float64], Tensor[(1120), float32]) */;
  %378 = @func_5621() /* ty=(Tensor[(420), float64], Tensor[(1, 16, 6), float64], Tensor[(5, 14, 16), float32], Tensor[(770, 1), float64], Tensor[(10, 45), int8], Tensor[(1, 16, 6), float32]) */;
  %379 = @func_4713() /* ty=Tensor[(1, 16, 6), float32] */;
  %380 = @func_3152(%374) /* ty=Tensor[(4, 2, 13), bool] */;
  %381 = %377.2;
  %382 = %378.1;
  (%379, %380, %var_6172, %381, %var_6182, %382)
}

def @func_1426() -> (Tensor[(4, 2, 13), float32],) {
  %383 = @func_1383() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %384 = %383.0;
  (%384,)
}

def @func_4215(%var_4205: Tensor[(4, 2, 13), float32]) -> (Tensor[(4, 2, 13), uint8],) {
  %385 = @func_2749() /* ty=Tensor[(4, 2, 13), float32] */;
  %386 = cast(%var_4205, dtype="uint8") /* ty=Tensor[(4, 2, 13), uint8] */;
  %387 = shape_of(%385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%385, dtype="uint8") /* ty=Tensor[(4, 2, 13), uint8] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %390 = bitwise_and(%388, %389) /* ty=Tensor[(4, 2, 13), uint8] */;
  (%390,)
}

def @func_2848(%var_2826: Tensor[(1344), float32]) -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(14, 12, 8), float32], Tensor[(1344), float32]) {
  %391 = @func_1814() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1, 770), float64], Tensor[(450), int8], Tensor[(4, 2, 13), float64]) */;
  %392 = cast(%var_2826, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %393 = reshape(%392, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %394 = @func_2642(%393) /* ty=(Tensor[(4, 2, 13), float32], Tensor[(14, 12, 8), float32]) */;
  %395 = @func_2810() /* ty=Tensor[(4, 2, 13), float64] */;
  %396 = %391.0;
  %397 = %394.1;
  (%395, %396, %397, %var_2826)
}

def @func_1814() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1, 770), float64], Tensor[(450), int8], Tensor[(4, 2, 13), float64]) {
  %398 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %399 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 770), float64] */, dtype="float64") /* ty=Tensor[(1, 770), float64] */;
  %400 = cast(meta[relay.Constant][18] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %401 = reshape(%399, newshape=[11, 10, 7]) /* ty=Tensor[(11, 10, 7), float64] */;
  %402 = reshape(%400, newshape=[1, 450]) /* ty=Tensor[(1, 450), int8] */;
  %403 = @func_1461(%401, %402) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) */;
  %404 = %398.0;
  %405 = @func_1664() /* ty=Tensor[(4, 2, 13), float32] */;
  %406 = %403.3;
  %407 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
  (%404, %405, %406, meta[relay.Constant][17] /* ty=Tensor[(1, 770), float64] */, meta[relay.Constant][18] /* ty=Tensor[(450), int8] */, %407)
}

def @func_4786() -> Tensor[(4, 2, 13), bool] {
  %408 = @func_3658() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), bool]) */;
  %408.1
}

def @func_4984(%var_4971: Tensor[(540), float64]) -> (Tensor[(4, 2, 13), float64], Tensor[(10, 9, 6), bool], Tensor[(540), float64]) {
  %409 = @func_4739() /* ty=(Tensor[(4, 2, 13), float64],) */;
  %410 = cast(%var_4971, dtype="float64") /* ty=Tensor[(540), float64] */;
  %411 = cast(%var_4971, dtype="float64") /* ty=Tensor[(540), float64] */;
  %412 = reshape(%410, newshape=[10, 9, 6]) /* ty=Tensor[(10, 9, 6), float64] */;
  %413 = reshape(%411, newshape=[10, 9, 6]) /* ty=Tensor[(10, 9, 6), float64] */;
  %414 = @func_2505(%412, %413) /* ty=(Tensor[(10, 9, 6), bool], Tensor[(4, 2, 13), float32], Tensor[(5, 14, 16), float32], Tensor[(1, 770), float64], Tensor[(150, 3), int8], Tensor[(4, 2, 13), float32], Tensor[(10, 9, 6), int32], Tensor[(10, 9, 6), int8]) */;
  %415 = %409.0;
  %416 = %414.0;
  (%415, %416, %var_4971)
}

def @func_3552() -> (Tensor[(4, 2, 13), float64],) {
  %417 = @func_3405() /* ty=(Tensor[(4, 2, 13), float64],) */;
  %418 = %417.0;
  %419 = cast(%418, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  %420 = sin(%419) /* ty=Tensor[(4, 2, 13), float64] */;
  (%420,)
}

def @func_2749() -> Tensor[(4, 2, 13), float32] {
  @func_1664() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_2863() -> (Tensor[(4, 2, 13), float32],) {
  %421 = @func_1972() /* ty=Tensor[(4, 2, 13), float32] */;
  (%421,)
}

def @func_4853() -> (Tensor[(4, 2, 13), float32], Tensor[(150, 3), uint32], Tensor[(420), float64], Tensor[(450, 1), uint32], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), int32]) {
  %422 = @func_3884() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %423 = cast(meta[relay.Constant][19] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %424 = cast(meta[relay.Constant][20] /* ty=Tensor[(450, 1), uint32] */, dtype="uint32") /* ty=Tensor[(450, 1), uint32] */;
  %425 = reshape(%423, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), float64] */;
  %426 = reshape(%424, newshape=[150, 3]) /* ty=Tensor[(150, 3), uint32] */;
  %427 = @func_4191(%425, %426) /* ty=(Tensor[(10, 14, 3), float64], Tensor[(15, 3, 10), bool], Tensor[(150, 3), uint32]) */;
  %428 = @func_1814() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1, 770), float64], Tensor[(450), int8], Tensor[(4, 2, 13), float64]) */;
  %429 = cast(meta[relay.Constant][22] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %430 = cast(meta[relay.Constant][21] /* ty=Tensor[(770), float64] */, dtype="float64") /* ty=Tensor[(770), float64] */;
  %431 = %427.2;
  %432 = cast(%431, dtype="int8") /* ty=Tensor[(150, 3), int8] */;
  %433 = reshape(%429, newshape=[]) /* ty=uint16 */;
  %434 = reshape(%430, newshape=[770]) /* ty=Tensor[(770), float64] */;
  %435 = reshape(%432, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %436 = @func_2197(%433, %434, %435) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), bool]) */;
  %437 = %436.3;
  %438 = cast(%437, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
  %439 = acos(%438) /* ty=Tensor[(7, 2, 13), float32] */;
  %440 = cast(%439, dtype="int32") /* ty=Tensor[(7, 2, 13), int32] */;
  %441 = cast(meta[relay.Constant][22] /* ty=uint16 */, dtype="int32") /* ty=int32 */;
  %442 = %422.0;
  %443 = %428.4;
  %444 = bitwise_xor(%440, %441) /* ty=Tensor[(7, 2, 13), int32] */;
  (%442, %431, meta[relay.Constant][19] /* ty=Tensor[(420), float64] */, meta[relay.Constant][20] /* ty=Tensor[(450, 1), uint32] */, meta[relay.Constant][21] /* ty=Tensor[(770), float64] */, %443, %444)
}

def @func_5182() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64]) {
  %445 = @func_4678() /* ty=Tensor[(4, 2, 13), float32] */;
  %446 = @func_2563() /* ty=Tensor[(4, 2, 13), float64] */;
  (%445, %446)
}

def @func_4290() -> Tensor[(4, 2, 13), float32] {
  %447 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %447.0
}

def @func_5858() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) {
  %448 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
  %449 = @func_3250() /* ty=Tensor[(4, 2, 13), float32] */;
  (%448, %449)
}

def @func_1739() -> (Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) {
  %450 = cast(meta[relay.Constant][23] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %451 = reshape(%450, newshape=[1, 16, 6]) /* ty=Tensor[(1, 16, 6), float32] */;
  %452 = @func_1664() /* ty=Tensor[(4, 2, 13), float32] */;
  %453 = cast(%452, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  %454 = tan(%453) /* ty=Tensor[(4, 2, 13), float64] */;
  %455 = @func_1383() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %456 = %455.0;
  %457 = cast(%456, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %458 = shape_of(%454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%454, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %461 = cast(%452, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %462 = shape_of(%454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%454, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %465 = logical_or(%463, %464) /* ty=Tensor[(4, 2, 13), bool] */;
  %466 = cast(%465, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %467 = shape_of(%454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%454, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %470 = subtract(%468, %469) /* ty=Tensor[(4, 2, 13), float32] */;
  %471 = cast(%470, dtype="int32") /* ty=Tensor[(4, 2, 13), int32] */;
  %472 = shape_of(%465, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%465, dtype="int32") /* ty=Tensor[(4, 2, 13), int32] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %475 = @func_1263(%451) /* ty=Tensor[(1, 16, 6), float32] */;
  %476 = floor_divide(%459, %460) /* ty=Tensor[(4, 2, 13), float32] */;
  %477 = minimum(%473, %474) /* ty=Tensor[(4, 2, 13), int32] */;
  (%475, meta[relay.Constant][23] /* ty=Tensor[(96), float32] */, %476, %477)
}

def @func_4678() -> Tensor[(4, 2, 13), float32] {
  %478 = @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %479 = %478.0;
  %480 = cast(%479, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  atanh(%480) /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_1461(%var_1433: Tensor[(11, 10, 7), float64], %var_1440: Tensor[(1, 450), int8]) -> (Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) {
  %481 = cast(%var_1433, dtype="float64") /* ty=Tensor[(11, 10, 7), float64] */;
  %482 = cast(%var_1433, dtype="float32") /* ty=Tensor[(11, 10, 7), float32] */;
  %483 = cast(%var_1440, dtype="int8") /* ty=Tensor[(1, 450), int8] */;
  %484 = cast(meta[relay.Constant][24] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %485 = reshape(%483, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), int8] */;
  %486 = reshape(%484, newshape=[1120, 1]) /* ty=Tensor[(1120, 1), float32] */;
  %487 = @func_575(%485, %486) /* ty=(Tensor[(15, 2, 15), int8], Tensor[(5, 14, 16), float32], Tensor[(1120, ?), float32]) */;
  %488 = %487.1;
  %489 = cast(%488, dtype="float64") /* ty=Tensor[(5, 14, 16), float64] */;
  %490 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 60), int8] */, dtype="int8") /* ty=Tensor[(8, 60), int8] */;
  %491 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 60), int8] */, dtype="int8") /* ty=Tensor[(8, 60), int8] */;
  %492 = cast(%488, dtype="float32") /* ty=Tensor[(5, 14, 16), float32] */;
  %493 = reshape(%490, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
  %494 = reshape(%491, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
  %495 = reshape(%492, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %496 = @func_948(%493, %494, %495) /* ty=(Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) */;
  %497 = sinh(%481) /* ty=Tensor[(11, 10, 7), float64] */;
  %498 = rsqrt(%482) /* ty=Tensor[(11, 10, 7), float32] */;
  %499 = erf(%489) /* ty=Tensor[(5, 14, 16), float64] */;
  %500 = %496.1;
  (%497, %498, %var_1440, meta[relay.Constant][24] /* ty=Tensor[(1120), float32] */, %499, %500, meta[relay.Constant][25] /* ty=Tensor[(8, 60), int8] */)
}

def @func_5649(%var_5637: Tensor[(16, 16, 6), float32]) -> Tensor[(16, 16, 6), int16] {
  %501 = @func_1739() /* ty=(Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) */;
  %502 = %501.0;
  %503 = cast(%502, dtype="int16") /* ty=Tensor[(1, 16, 6), int16] */;
  %504 = cast(%var_5637, dtype="int16") /* ty=Tensor[(16, 16, 6), int16] */;
  multiply(%503, %504) /* ty=Tensor[(16, 16, 6), int16] */
}

def @func_3377(%var_3368: Tensor[(7, 12, 8), int8]) -> Tensor[(7, 12, 8), int8] {
  %505 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 1, 8), int8] */, dtype="int8") /* ty=Tensor[(7, 1, 8), int8] */;
  %506 = cast(%var_3368, dtype="int8") /* ty=Tensor[(7, 12, 8), int8] */;
  left_shift(%505, %506) /* ty=Tensor[(7, 12, 8), int8] */
}

def @func_3339(%var_3330: Tensor[(4, 3, 7), int8]) -> (Tensor[(4, 3, 7), int8],) {
  %507 = cast(meta[relay.Constant][27] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %508 = cast(%var_3330, dtype="int8") /* ty=Tensor[(4, 3, 7), int8] */;
  %509 = bitwise_and(%507, %508) /* ty=Tensor[(4, 3, 7), int8] */;
  (%509,)
}

def @func_3439(%var_3411: Tensor[(9, 7, 14), uint32]) -> (Tensor[(9, 7, 14), uint64], Tensor[(4, 2, 13), float32]) {
  %510 = cast(%var_3411, dtype="uint32") /* ty=Tensor[(9, 7, 14), uint32] */;
  %511 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(9, 7, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 7, 14), uint32] */, dtype="uint32") /* ty=Tensor[(9, 7, 14), uint32] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %514 = subtract(%512, %513) /* ty=Tensor[(9, 7, 14), uint32] */;
  %515 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 7, 14), uint32] */, dtype="bool") /* ty=Tensor[(9, 7, 14), bool] */;
  %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%514, dtype="bool") /* ty=Tensor[(9, 7, 14), bool] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %519 = not_equal(%517, %518) /* ty=Tensor[(9, 7, 14), bool] */;
  %520 = cast(%519, dtype="uint64") /* ty=Tensor[(9, 7, 14), uint64] */;
  %521 = shape_of(%514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%514, dtype="uint64") /* ty=Tensor[(9, 7, 14), uint64] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %524 = @func_1588() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */;
  %525 = add(%522, %523) /* ty=Tensor[(9, 7, 14), uint64] */;
  %526 = %524.1;
  (%525, %526)
}

def @func_6067() -> Tensor[(4, 2, 13), float32] {
  %527 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %527.0
}

def @func_5846() -> (Tensor[(7, 2, 13), int32], Tensor[(4, 2, 13), float64], Tensor[(1344), float32]) {
  %528 = @func_4853() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(150, 3), uint32], Tensor[(420), float64], Tensor[(450, 1), uint32], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), int32]) */;
  %529 = cast(meta[relay.Constant][29] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %530 = reshape(%529, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
  %531 = @func_2848(%530) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(14, 12, 8), float32], Tensor[(1344), float32]) */;
  %532 = %528.6;
  %533 = %531.0;
  (%532, %533, meta[relay.Constant][29] /* ty=Tensor[(1344), float32] */)
}

def @func_4625() -> (Tensor[(6, 3, 12), float32],) {
  %534 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 3, 12), float32] */, dtype="float32") /* ty=Tensor[(6, 3, 12), float32] */;
  %535 = erf(%534) /* ty=Tensor[(6, 3, 12), float32] */;
  (%535,)
}

def @func_2810() -> Tensor[(4, 2, 13), float64] {
  @func_2563() /* ty=Tensor[(4, 2, 13), float64] */
}

def @func_2318() -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) {
  %536 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %537 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
  %538 = @func_1664() /* ty=Tensor[(4, 2, 13), float32] */;
  %539 = %536.0;
  (%537, %538, %539)
}

def @func_851(%var_847: Tensor[(1, 11, 5), float32]) -> Tensor[(1, 11, 5), float32] {
  %540 = cast(%var_847, dtype="float32") /* ty=Tensor[(1, 11, 5), float32] */;
  asin(%540) /* ty=Tensor[(1, 11, 5), float32] */
}

def @func_2642(%var_2591: Tensor[(14, 12, 8), float32]) -> (Tensor[(4, 2, 13), float32], Tensor[(14, 12, 8), float32]) {
  %541 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %542 = cosh(%541) /* ty=Tensor[(14, 12, 8), float32] */;
  %543 = cast(%var_2591, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%542, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %547 = minimum(%545, %546) /* ty=Tensor[(14, 12, 8), float32] */;
  %548 = cast(%547, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %549 = log(%548) /* ty=Tensor[(14, 12, 8), float32] */;
  %550 = cast(%549, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %551 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
  %552 = atanh(%550) /* ty=Tensor[(14, 12, 8), float32] */;
  (%551, %552)
}

def @func_6002() -> Tensor[(1, 770), float32] {
  %553 = @func_1814() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1, 770), float64], Tensor[(450), int8], Tensor[(4, 2, 13), float64]) */;
  %554 = %553.3;
  %555 = cast(%554, dtype="float32") /* ty=Tensor[(1, 770), float32] */;
  acos(%555) /* ty=Tensor[(1, 770), float32] */
}

def @func_4704() -> (Tensor[(4, 2, 13), float32],) {
  %556 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
  (%556,)
}

def @func_2505(%var_2456: Tensor[(10, 9, 6), float64], %var_2457: Tensor[(10, 9, 6), float64]) -> (Tensor[(10, 9, 6), bool], Tensor[(4, 2, 13), float32], Tensor[(5, 14, 16), float32], Tensor[(1, 770), float64], Tensor[(150, 3), int8], Tensor[(4, 2, 13), float32], Tensor[(10, 9, 6), int32], Tensor[(10, 9, 6), int8]) {
  %557 = cast(%var_2457, dtype="bool") /* ty=Tensor[(10, 9, 6), bool] */;
  %558 = shape_of(%var_2456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%var_2456, dtype="bool") /* ty=Tensor[(10, 9, 6), bool] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %561 = @func_2294() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), bool]) */;
  %562 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 770), float64] */, dtype="float64") /* ty=Tensor[(1, 770), float64] */;
  %563 = cast(meta[relay.Constant][33] /* ty=Tensor[(150, 3), int8] */, dtype="int8") /* ty=Tensor[(150, 3), int8] */;
  %564 = reshape(%562, newshape=[11, 10, 7]) /* ty=Tensor[(11, 10, 7), float64] */;
  %565 = reshape(%563, newshape=[1, 450]) /* ty=Tensor[(1, 450), int8] */;
  %566 = @func_1461(%564, %565) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) */;
  %567 = cast(%var_2457, dtype="float32") /* ty=Tensor[(10, 9, 6), float32] */;
  %568 = shape_of(%var_2456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%var_2456, dtype="float32") /* ty=Tensor[(10, 9, 6), float32] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %571 = floor_divide(%569, %570) /* ty=Tensor[(10, 9, 6), float32] */;
  %572 = cast(%var_2456, dtype="int32") /* ty=Tensor[(10, 9, 6), int32] */;
  %573 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%571, dtype="int32") /* ty=Tensor[(10, 9, 6), int32] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %576 = cast(%var_2457, dtype="float32") /* ty=Tensor[(10, 9, 6), float32] */;
  %577 = exp(%576) /* ty=Tensor[(10, 9, 6), float32] */;
  %578 = cast(%577, dtype="int8") /* ty=Tensor[(10, 9, 6), int8] */;
  %579 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(%571, dtype="int8") /* ty=Tensor[(10, 9, 6), int8] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %582 = less(%559, %560) /* ty=Tensor[(10, 9, 6), bool] */;
  %583 = %561.0;
  %584 = %566.5;
  %585 = @func_1664() /* ty=Tensor[(4, 2, 13), float32] */;
  %586 = maximum(%574, %575) /* ty=Tensor[(10, 9, 6), int32] */;
  %587 = multiply(%580, %581) /* ty=Tensor[(10, 9, 6), int8] */;
  (%582, %583, %584, meta[relay.Constant][32] /* ty=Tensor[(1, 770), float64] */, meta[relay.Constant][33] /* ty=Tensor[(150, 3), int8] */, %585, %586, %587)
}

def @func_1263(%var_1250: Tensor[(1, 16, 6), float32]) -> Tensor[(1, 16, 6), float32] {
  %588 = cast(%var_1250, dtype="float32") /* ty=Tensor[(1, 16, 6), float32] */;
  atanh(%588) /* ty=Tensor[(1, 16, 6), float32] */
}

def @func_2294() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), bool]) {
  %589 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %590 = @func_1383() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %591 = @func_1972() /* ty=Tensor[(4, 2, 13), float32] */;
  %592 = cast(%591, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  %593 = cos(%592) /* ty=Tensor[(4, 2, 13), float64] */;
  %594 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
  %595 = cast(%591, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%594, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %599 = divide(%597, %598) /* ty=Tensor[(4, 2, 13), float32] */;
  %600 = cast(%599, dtype="int32") /* ty=Tensor[(4, 2, 13), int32] */;
  %601 = shape_of(%593, dtype="int32") /* ty=Tensor[(3), int32] */;
  %602 = cast(%593, dtype="int32") /* ty=Tensor[(4, 2, 13), int32] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %604 = bitwise_or(%602, %603) /* ty=Tensor[(4, 2, 13), int32] */;
  %605 = cast(%593, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%604, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %609 = %589.0;
  %610 = %590.0;
  %611 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
  %612 = less(%607, %608) /* ty=Tensor[(4, 2, 13), bool] */;
  (%609, %610, %611, %612)
}

def @func_2916() -> Tensor[(1, 16, 6), float32] {
  %613 = @func_1739() /* ty=(Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) */;
  %613.0
}

def @func_3046() -> (Tensor[(4, 2, 13), float32],) {
  %614 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
  (%614,)
}

def @func_3801(%var_3755: Tensor[(4, 2, 13), float32], %var_3769: Tensor[(1, 672), int8]) -> (Tensor[(4, 2, 13), uint32], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float32], Tensor[(4, 2, 13), bool]) {
  %615 = @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %616 = %615.0;
  %617 = cast(%var_3755, dtype="uint32") /* ty=Tensor[(4, 2, 13), uint32] */;
  %618 = shape_of(%616, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%616, dtype="uint32") /* ty=Tensor[(4, 2, 13), uint32] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %621 = cast(%var_3755, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %622 = cast(%var_3769, dtype="int8") /* ty=Tensor[(1, 672), int8] */;
  %623 = reshape(%622, newshape=[7, 12, 8]) /* ty=Tensor[(7, 12, 8), int8] */;
  %624 = @func_3377(%623) /* ty=Tensor[(7, 12, 8), int8] */;
  %625 = cast(%624, dtype="float32") /* ty=Tensor[(7, 12, 8), float32] */;
  %626 = shape_of(%var_3769, dtype="int32") /* ty=Tensor[(2), int32] */;
  %627 = cast(%var_3769, dtype="float32") /* ty=Tensor[(1, 672), float32] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %629 = cast(%616, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %630 = reshape(%629, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %631 = @func_3610(%630) /* ty=(Tensor[(96), float32], Tensor[(4, 2, 13), bool]) */;
  %632 = logical_xor(%619, %620) /* ty=Tensor[(4, 2, 13), uint32] */;
  %633 = log2(%621) /* ty=Tensor[(4, 2, 13), float32] */;
  %634 = divide(%627, %628) /* ty=Tensor[(?, 672), float32] */;
  %635 = %631.1;
  (%632, %633, %634, %635)
}

def @func_5542(%var_5519: Tensor[(16, 1, 14), uint32], %var_5520: Tensor[(16, 7, 14), uint32], %var_5532: Tensor[(16, 7, 14), uint32]) -> (Tensor[(16, 7, 14), float32],) {
  %636 = cast(%var_5519, dtype="uint32") /* ty=Tensor[(16, 1, 14), uint32] */;
  %637 = cast(%var_5520, dtype="uint32") /* ty=Tensor[(16, 7, 14), uint32] */;
  %638 = bitwise_or(%636, %637) /* ty=Tensor[(16, 7, 14), uint32] */;
  %639 = cast(%var_5532, dtype="float32") /* ty=Tensor[(16, 7, 14), float32] */;
  %640 = shape_of(%638, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%638, dtype="float32") /* ty=Tensor[(16, 7, 14), float32] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %643 = floor_divide(%641, %642) /* ty=Tensor[(16, 7, 14), float32] */;
  (%643,)
}

def @func_6042(%var_6022: Tensor[(104), float32]) -> (Tensor[(1344), float32], Tensor[(96), float32], Tensor[(104), float32], Tensor[(4, 2, 13), float32], Tensor[(540), float64]) {
  %644 = @func_5846() /* ty=(Tensor[(7, 2, 13), int32], Tensor[(4, 2, 13), float64], Tensor[(1344), float32]) */;
  %645 = cast(%var_6022, dtype="float32") /* ty=Tensor[(104), float32] */;
  %646 = reshape(%645, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %647 = @func_3610(%646) /* ty=(Tensor[(96), float32], Tensor[(4, 2, 13), bool]) */;
  %648 = cast(meta[relay.Constant][34] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %649 = cast(meta[relay.Constant][34] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %650 = reshape(%648, newshape=[10, 9, 6]) /* ty=Tensor[(10, 9, 6), float64] */;
  %651 = reshape(%649, newshape=[10, 9, 6]) /* ty=Tensor[(10, 9, 6), float64] */;
  %652 = @func_2505(%650, %651) /* ty=(Tensor[(10, 9, 6), bool], Tensor[(4, 2, 13), float32], Tensor[(5, 14, 16), float32], Tensor[(1, 770), float64], Tensor[(150, 3), int8], Tensor[(4, 2, 13), float32], Tensor[(10, 9, 6), int32], Tensor[(10, 9, 6), int8]) */;
  %653 = %644.2;
  %654 = %647.0;
  %655 = %652.5;
  (%653, %654, %var_6022, %655, meta[relay.Constant][34] /* ty=Tensor[(540), float64] */)
}

def @func_3405() -> (Tensor[(4, 2, 13), float64],) {
  %656 = @func_2810() /* ty=Tensor[(4, 2, 13), float64] */;
  (%656,)
}

def @func_5905() -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32]) {
  %657 = @func_5791() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(6, 3, 12), int32]) */;
  %658 = %657.0;
  %659 = cast(%658, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  %660 = asinh(%659) /* ty=Tensor[(4, 2, 13), float64] */;
  %661 = @func_4450() /* ty=Tensor[(4, 2, 13), float32] */;
  (%660, %661)
}

def @func_6223() -> (Tensor[(4, 2, 13), float32], Tensor[(8, 9, 6), float32], Tensor[(4, 108), int64]) {
  %662 = @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %663 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 108), int64] */, dtype="int64") /* ty=Tensor[(4, 108), int64] */;
  %664 = reshape(%663, newshape=[8, 9, 6]) /* ty=Tensor[(8, 9, 6), int64] */;
  %665 = %662.0;
  %666 = @func_5456(%664) /* ty=Tensor[(8, 9, 6), float32] */;
  (%665, %666, meta[relay.Constant][35] /* ty=Tensor[(4, 108), int64] */)
}

def @func_3610(%var_3603: Tensor[(4, 2, 13), float32]) -> (Tensor[(96), float32], Tensor[(4, 2, 13), bool]) {
  %667 = @func_1739() /* ty=(Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) */;
  %668 = @func_3046() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %669 = %668.0;
  %670 = cast(%var_3603, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %671 = shape_of(%669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%669, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %674 = %667.1;
  %675 = greater_equal(%672, %673) /* ty=Tensor[(4, 2, 13), bool] */;
  (%674, %675)
}

def @func_2197(%var_2179: uint16, %var_2186: Tensor[(770), float64], %var_2187: Tensor[(450), int8]) -> (Tensor[(11, 10, 7), float64], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), bool]) {
  %676 = cast(%var_2186, dtype="float64") /* ty=Tensor[(770), float64] */;
  %677 = cast(%var_2187, dtype="int8") /* ty=Tensor[(450), int8] */;
  %678 = reshape(%676, newshape=[11, 10, 7]) /* ty=Tensor[(11, 10, 7), float64] */;
  %679 = reshape(%677, newshape=[1, 450]) /* ty=Tensor[(1, 450), int8] */;
  %680 = @func_1461(%678, %679) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) */;
  %681 = cast(%var_2179, dtype="bool") /* ty=bool */;
  %682 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 2, 13), uint16] */, dtype="bool") /* ty=Tensor[(7, 2, 13), bool] */;
  %683 = equal(%681, %682) /* ty=Tensor[(7, 2, 13), bool] */;
  %684 = cast(%683, dtype="bool") /* ty=Tensor[(7, 2, 13), bool] */;
  %685 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(7, 2, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 2, 13), uint16] */, dtype="bool") /* ty=Tensor[(7, 2, 13), bool] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %688 = %680.0;
  %689 = logical_and(%686, %687) /* ty=Tensor[(7, 2, 13), bool] */;
  (%688, %var_2186, %var_2187, %689)
}

def @func_3884() -> (Tensor[(4, 2, 13), float32],) {
  %690 = @func_1972() /* ty=Tensor[(4, 2, 13), float32] */;
  (%690,)
}

def @func_3658() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), bool]) {
  %691 = @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %692 = %691.0;
  %693 = cast(%692, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %694 = reshape(%693, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %695 = @func_3610(%694) /* ty=(Tensor[(96), float32], Tensor[(4, 2, 13), bool]) */;
  %696 = %695.1;
  (%692, %696)
}

def @func_1025(%var_1009: Tensor[(11, 1, 13), float64]) -> (Tensor[(11, 1, 13), float64], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) {
  %697 = cast(%var_1009, dtype="float64") /* ty=Tensor[(11, 1, 13), float64] */;
  %698 = cast(meta[relay.Constant][37] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %699 = reshape(%698, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), float32] */;
  %700 = @func_51(%699) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) */;
  %701 = rsqrt(%697) /* ty=Tensor[(11, 1, 13), float64] */;
  %702 = %700.1;
  (%701, %702, meta[relay.Constant][37] /* ty=Tensor[(1120), float32] */)
}

def @func_2356(%var_2335: Tensor[(14, 5, 1), float64], %var_2341: Tensor[(770), float64], %var_2342: Tensor[(150, 3), int8]) -> (Tensor[(5, 14, 16), float32], Tensor[(770), float64], Tensor[(150, 3), int8], Tensor[(14, 5, ?), bool]) {
  %703 = cast(%var_2341, dtype="float64") /* ty=Tensor[(770), float64] */;
  %704 = cast(%var_2342, dtype="int8") /* ty=Tensor[(150, 3), int8] */;
  %705 = reshape(%703, newshape=[11, 10, 7]) /* ty=Tensor[(11, 10, 7), float64] */;
  %706 = reshape(%704, newshape=[1, 450]) /* ty=Tensor[(1, 450), int8] */;
  %707 = @func_1461(%705, %706) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) */;
  %708 = cast(%var_2335, dtype="float64") /* ty=Tensor[(14, 5, 1), float64] */;
  %709 = asin(%708) /* ty=Tensor[(14, 5, 1), float64] */;
  %710 = cast(%var_2335, dtype="bool") /* ty=Tensor[(14, 5, 1), bool] */;
  %711 = shape_of(%709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%709, dtype="bool") /* ty=Tensor[(14, 5, 1), bool] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %714 = %707.5;
  %715 = less_equal(%712, %713) /* ty=Tensor[(14, 5, ?), bool] */;
  (%714, %var_2341, %var_2342, %715)
}

def @func_4924(%var_4889: Tensor[(84), int8]) -> (Tensor[(4, 3, 7), int8], Tensor[(84), int8], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32]) {
  %716 = cast(%var_4889, dtype="int8") /* ty=Tensor[(84), int8] */;
  %717 = reshape(%716, newshape=[4, 3, 7]) /* ty=Tensor[(4, 3, 7), int8] */;
  %718 = @func_3339(%717) /* ty=(Tensor[(4, 3, 7), int8],) */;
  %719 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
  %720 = cast(%719, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  %721 = @func_1814() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1, 770), float64], Tensor[(450), int8], Tensor[(4, 2, 13), float64]) */;
  %722 = %718.0;
  %723 = exp(%720) /* ty=Tensor[(4, 2, 13), float64] */;
  %724 = %721.0;
  (%722, %var_4889, %723, %724)
}

def @func_5112(%var_5107: Tensor[(12, 156), float64]) -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(12, 156), float64], Tensor[(1120), float32]) {
  %725 = cast(%var_5107, dtype="float64") /* ty=Tensor[(12, 156), float64] */;
  %726 = cast(meta[relay.Constant][38] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %727 = reshape(%725, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), float64] */;
  %728 = reshape(%726, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %729 = @func_3016(%727, %728) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(1120), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(12, 12, 13), uint64]) */;
  %730 = @func_4290() /* ty=Tensor[(4, 2, 13), float32] */;
  %731 = %729.3;
  (%730, %731, %var_5107, meta[relay.Constant][38] /* ty=Tensor[(1120), float32] */)
}

def @func_3949() -> Tensor[(4, 2, 13), float32] {
  %732 = @func_3658() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), bool]) */;
  %732.0
}

def @func_5621() -> (Tensor[(420), float64], Tensor[(1, 16, 6), float64], Tensor[(5, 14, 16), float32], Tensor[(770, 1), float64], Tensor[(10, 45), int8], Tensor[(1, 16, 6), float32]) {
  %733 = @func_4853() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(150, 3), uint32], Tensor[(420), float64], Tensor[(450, 1), uint32], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), int32]) */;
  %734 = %733.2;
  %735 = cast(%734, dtype="float64") /* ty=Tensor[(420), float64] */;
  %736 = @func_1739() /* ty=(Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) */;
  %737 = %736.0;
  %738 = cast(%737, dtype="float64") /* ty=Tensor[(1, 16, 6), float64] */;
  %739 = cast(meta[relay.Constant][39] /* ty=Tensor[(770, 1), float64] */, dtype="float64") /* ty=Tensor[(770, 1), float64] */;
  %740 = cast(meta[relay.Constant][40] /* ty=Tensor[(10, 45), int8] */, dtype="int8") /* ty=Tensor[(10, 45), int8] */;
  %741 = reshape(%739, newshape=[11, 10, 7]) /* ty=Tensor[(11, 10, 7), float64] */;
  %742 = reshape(%740, newshape=[1, 450]) /* ty=Tensor[(1, 450), int8] */;
  %743 = @func_1461(%741, %742) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) */;
  %744 = log(%735) /* ty=Tensor[(420), float64] */;
  %745 = sin(%738) /* ty=Tensor[(1, 16, 6), float64] */;
  %746 = %743.5;
  %747 = @func_2916() /* ty=Tensor[(1, 16, 6), float32] */;
  (%744, %745, %746, meta[relay.Constant][39] /* ty=Tensor[(770, 1), float64] */, meta[relay.Constant][40] /* ty=Tensor[(10, 45), int8] */, %747)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2295() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), bool]) {
  %24 = fn () -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), bool]) {
    %0 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
    %1 = @func_1383() /* ty=(Tensor[(4, 2, 13), float32],) */;
    %2 = @func_1972() /* ty=Tensor[(4, 2, 13), float32] */;
    %3 = cast(%2, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
    %4 = cos(%3) /* ty=Tensor[(4, 2, 13), float64] */;
    %5 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
    %6 = cast(%2, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
    %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
    %8 = cast(%5, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
    %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %10 = divide(%8, %9) /* ty=Tensor[(4, 2, 13), float32] */;
    %11 = cast(%10, dtype="int32") /* ty=Tensor[(4, 2, 13), int32] */;
    %12 = shape_of(%4, dtype="int32") /* ty=Tensor[(3), int32] */;
    %13 = cast(%4, dtype="int32") /* ty=Tensor[(4, 2, 13), int32] */;
    %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %15 = bitwise_or(%13, %14) /* ty=Tensor[(4, 2, 13), int32] */;
    %16 = cast(%4, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
    %17 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
    %18 = cast(%15, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
    %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %20 = %0.0;
    %21 = %1.0;
    %22 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
    %23 = less(%18, %19) /* ty=Tensor[(4, 2, 13), bool] */;
    (%20, %21, %22, %23)
  };
  %24() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), bool]) */
}

def @func_4750() -> Tensor[(4, 2, 13), float32] {
  @func_2749() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_6197(%var_6195: Tensor[(104), float32], %var_6196: Tensor[(12, 156), float64]) -> (Tensor[(1, 16, 6), float32], Tensor[(4, 2, 13), bool], Tensor[(104), float32], Tensor[(12, 156), float64], Tensor[(12, 156), float64], Tensor[(1, 16, 6), float64]) {
  %35 = fn (%var_6172: Tensor[(104), float32], %var_6182: Tensor[(12, 156), float64]) -> (Tensor[(1, 16, 6), float32], Tensor[(4, 2, 13), bool], Tensor[(104), float32], Tensor[(12, 156), float64], Tensor[(12, 156), float64], Tensor[(1, 16, 6), float64]) {
    %25 = cast(%var_6172, dtype="float32") /* ty=Tensor[(104), float32] */;
    %26 = reshape(%25, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
    %27 = cast(%var_6182, dtype="float64") /* ty=Tensor[(12, 156), float64] */;
    %28 = reshape(%27, newshape=[12, 156]) /* ty=Tensor[(12, 156), float64] */;
    %29 = @func_5112(%28) /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(12, 156), float64], Tensor[(1120), float32]) */;
    %30 = @func_5621() /* ty=(Tensor[(420), float64], Tensor[(1, 16, 6), float64], Tensor[(5, 14, 16), float32], Tensor[(770, 1), float64], Tensor[(10, 45), int8], Tensor[(1, 16, 6), float32]) */;
    %31 = @func_4713() /* ty=Tensor[(1, 16, 6), float32] */;
    %32 = @func_3152(%26) /* ty=Tensor[(4, 2, 13), bool] */;
    %33 = %29.2;
    %34 = %30.1;
    (%31, %32, %var_6172, %33, %var_6182, %34)
  };
  %35(%var_6195, %var_6196) /* ty=(Tensor[(1, 16, 6), float32], Tensor[(4, 2, 13), bool], Tensor[(104), float32], Tensor[(12, 156), float64], Tensor[(12, 156), float64], Tensor[(1, 16, 6), float64]) */
}

def @func_2144(%var_2139: Tensor[(15, 3, 10), uint32]) -> (Tensor[(15, 3, 10), bool],) {
  %36 = cast(%var_2139, dtype="bool") /* ty=Tensor[(15, 3, 10), bool] */;
  %37 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(15, 3, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 3, 10), uint32] */, dtype="bool") /* ty=Tensor[(15, 3, 10), bool] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %40 = equal(%38, %39) /* ty=Tensor[(15, 3, 10), bool] */;
  (%40,)
}

def @func_5877() -> (Tensor[(4, 2, 13), float32],) {
  %41 = @func_4450() /* ty=Tensor[(4, 2, 13), float32] */;
  (%41,)
}

def @func_1666() -> Tensor[(4, 2, 13), float32] {
  @func_1664() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_4174(%var_4170: Tensor[(4, 2, 13), float32], %var_4171: Tensor[(882), uint32], %var_4172: Tensor[(770), float64], %var_4173: Tensor[(450), int8]) -> (Tensor[(4, 2, 13), int64], Tensor[(9, 7, 14), uint64], Tensor[(882), uint32], Tensor[(96), float32], Tensor[(1120), float32], Tensor[(480), int8], Tensor[(4, 2, 13), float32], Tensor[(7, 10), float64], Tensor[(770), float64], Tensor[(450), int8], Tensor[(14, 5, 1120), float32], Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32], Tensor[(4, 2, 13), float32], Tensor[(1, 770), float64], Tensor[(540), float64]) {
  %105 = fn (%var_4079: Tensor[(4, 2, 13), float32], %var_4090: Tensor[(882), uint32], %var_4117: Tensor[(770), float64], %var_4118: Tensor[(450), int8]) -> (Tensor[(4, 2, 13), int64], Tensor[(9, 7, 14), uint64], Tensor[(882), uint32], Tensor[(96), float32], Tensor[(1120), float32], Tensor[(480), int8], Tensor[(4, 2, 13), float32], Tensor[(7, 10), float64], Tensor[(770), float64], Tensor[(450), int8], Tensor[(14, 5, 1120), float32], Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32], Tensor[(4, 2, 13), float32], Tensor[(1, 770), float64], Tensor[(540), float64]) {
    %42 = @func_3250() /* ty=Tensor[(4, 2, 13), float32] */;
    %43 = cast(%var_4079, dtype="int64") /* ty=Tensor[(4, 2, 13), int64] */;
    %44 = shape_of(%42, dtype="int32") /* ty=Tensor[(3), int32] */;
    %45 = cast(%42, dtype="int64") /* ty=Tensor[(4, 2, 13), int64] */;
    %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %47 = cast(%var_4090, dtype="uint32") /* ty=Tensor[(882), uint32] */;
    %48 = reshape(%47, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), uint32] */;
    %49 = @func_3439(%48) /* ty=(Tensor[(9, 7, 14), uint64], Tensor[(4, 2, 13), float32]) */;
    %50 = cast(%42, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
    %51 = reshape(%50, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
    %52 = @func_3610(%51) /* ty=(Tensor[(96), float32], Tensor[(4, 2, 13), bool]) */;
    %53 = cast(meta[relay.Constant][1] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
    %54 = cast(meta[relay.Constant][1] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
    %55 = cast(meta[relay.Constant][2] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %56 = reshape(%53, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
    %57 = reshape(%54, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
    %58 = reshape(%55, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %59 = @func_948(%56, %57, %58) /* ty=(Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) */;
    %60 = @func_2318() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */;
    %61 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 10), float64] */;
    %62 = cast(%var_4117, dtype="float64") /* ty=Tensor[(770), float64] */;
    %63 = cast(%var_4118, dtype="int8") /* ty=Tensor[(450), int8] */;
    %64 = reshape(%61, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), float64] */;
    %65 = reshape(%62, newshape=[770]) /* ty=Tensor[(770), float64] */;
    %66 = reshape(%63, newshape=[150, 3]) /* ty=Tensor[(150, 3), int8] */;
    %67 = @func_2356(%64, %65, %66) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(770), float64], Tensor[(150, 3), int8], Tensor[(14, 5, ?), bool]) */;
    %68 = %67.3;
    %69 = cast(%68, dtype="float32") /* ty=Tensor[(14, 5, ?), float32] */;
    %70 = cast(meta[relay.Constant][2] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %71 = cast(meta[relay.Constant][2] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %72 = reshape(%71, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), float32] */;
    %73 = @func_51(%72) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) */;
    %74 = cast(meta[relay.Constant][1] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
    %75 = cast(meta[relay.Constant][1] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
    %76 = cast(meta[relay.Constant][2] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %77 = reshape(%74, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
    %78 = reshape(%75, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
    %79 = reshape(%76, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %80 = @func_948(%77, %78, %79) /* ty=(Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) */;
    %81 = cast(meta[relay.Constant][1] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
    %82 = cast(meta[relay.Constant][1] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
    %83 = cast(meta[relay.Constant][2] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %84 = reshape(%81, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
    %85 = reshape(%82, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
    %86 = reshape(%83, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %87 = @func_948(%84, %85, %86) /* ty=(Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) */;
    %88 = @func_2318() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */;
    %89 = cast(meta[relay.Constant][4] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %90 = cast(meta[relay.Constant][4] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %91 = reshape(%89, newshape=[10, 9, 6]) /* ty=Tensor[(10, 9, 6), float64] */;
    %92 = reshape(%90, newshape=[10, 9, 6]) /* ty=Tensor[(10, 9, 6), float64] */;
    %93 = @func_2505(%91, %92) /* ty=(Tensor[(10, 9, 6), bool], Tensor[(4, 2, 13), float32], Tensor[(5, 14, 16), float32], Tensor[(1, 770), float64], Tensor[(150, 3), int8], Tensor[(4, 2, 13), float32], Tensor[(10, 9, 6), int32], Tensor[(10, 9, 6), int8]) */;
    %94 = right_shift(%45, %46) /* ty=Tensor[(4, 2, 13), int64] */;
    %95 = %49.0;
    %96 = %52.0;
    %97 = %59.2;
    %98 = %60.2;
    %99 = floor_divide(%69, %70) /* ty=Tensor[(14, 5, 1120), float32] */;
    %100 = %73.1;
    %101 = %80.1;
    %102 = %87.1;
    %103 = %88.1;
    %104 = %93.3;
    (%94, %95, %var_4090, %96, %97, meta[relay.Constant][1] /* ty=Tensor[(480), int8] */, %98, meta[relay.Constant][3] /* ty=Tensor[(7, 10), float64] */, %var_4117, %var_4118, %99, %100, %101, %102, %103, %104, meta[relay.Constant][4] /* ty=Tensor[(540), float64] */)
  };
  %105(%var_4170, %var_4171, %var_4172, %var_4173) /* ty=(Tensor[(4, 2, 13), int64], Tensor[(9, 7, 14), uint64], Tensor[(882), uint32], Tensor[(96), float32], Tensor[(1120), float32], Tensor[(480), int8], Tensor[(4, 2, 13), float32], Tensor[(7, 10), float64], Tensor[(770), float64], Tensor[(450), int8], Tensor[(14, 5, 1120), float32], Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32], Tensor[(4, 2, 13), float32], Tensor[(1, 770), float64], Tensor[(540), float64]) */
}

def @func_6067() -> Tensor[(4, 2, 13), float32] {
  %106 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %106.0
}

def @func_3380(%var_3378: Tensor[(7, 12, 8), int8]) -> Tensor[(7, 12, 8), int8] {
  @func_3377(%var_3378) /* ty=Tensor[(7, 12, 8), int8] */
}

def @func_2431(%var_2430: Tensor[(1120), float32]) -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %119 = fn (%var_2422: Tensor[(1120), float32]) -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
    %107 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
    %108 = %107.0;
    %109 = cast(%108, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
    %110 = sigmoid(%109) /* ty=Tensor[(4, 2, 13), float32] */;
    %111 = cast(%110, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
    %112 = cast(%var_2422, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %113 = reshape(%111, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
    %114 = reshape(%112, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %115 = @func_2055(%113, %114) /* ty=(Tensor[(4, 2, 13), bool], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(480), int8], Tensor[(1120), float32], Tensor[(4, 2, 13), bool]) */;
    %116 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
    %117 = @func_1972() /* ty=Tensor[(4, 2, 13), float32] */;
    %118 = %115.3;
    (%116, %110, %117, %118, %var_2422)
  };
  %119(%var_2430) /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_3951() -> Tensor[(4, 2, 13), float32] {
  @func_3949() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_3441(%var_3440: Tensor[(9, 7, 14), uint32]) -> (Tensor[(9, 7, 14), uint64], Tensor[(4, 2, 13), float32]) {
  %137 = fn (%var_3411: Tensor[(9, 7, 14), uint32]) -> (Tensor[(9, 7, 14), uint64], Tensor[(4, 2, 13), float32]) {
    %120 = cast(%var_3411, dtype="uint32") /* ty=Tensor[(9, 7, 14), uint32] */;
    %121 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(9, 7, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %122 = cast(meta[relay.Constant][5] /* ty=Tensor[(9, 7, 14), uint32] */, dtype="uint32") /* ty=Tensor[(9, 7, 14), uint32] */;
    %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %124 = subtract(%122, %123) /* ty=Tensor[(9, 7, 14), uint32] */;
    %125 = cast(meta[relay.Constant][5] /* ty=Tensor[(9, 7, 14), uint32] */, dtype="bool") /* ty=Tensor[(9, 7, 14), bool] */;
    %126 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
    %127 = cast(%124, dtype="bool") /* ty=Tensor[(9, 7, 14), bool] */;
    %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %129 = not_equal(%127, %128) /* ty=Tensor[(9, 7, 14), bool] */;
    %130 = cast(%129, dtype="uint64") /* ty=Tensor[(9, 7, 14), uint64] */;
    %131 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
    %132 = cast(%124, dtype="uint64") /* ty=Tensor[(9, 7, 14), uint64] */;
    %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %134 = @func_1588() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */;
    %135 = add(%132, %133) /* ty=Tensor[(9, 7, 14), uint64] */;
    %136 = %134.1;
    (%135, %136)
  };
  %137(%var_3440) /* ty=(Tensor[(9, 7, 14), uint64], Tensor[(4, 2, 13), float32]) */
}

def @func_6054() -> (Tensor[(7, 2, 13), int32],) {
  %138 = @func_5846() /* ty=(Tensor[(7, 2, 13), int32], Tensor[(4, 2, 13), float64], Tensor[(1344), float32]) */;
  %139 = %138.0;
  (%139,)
}

def @func_2361(%var_2358: Tensor[(14, 5, 1), float64], %var_2359: Tensor[(770), float64], %var_2360: Tensor[(150, 3), int8]) -> (Tensor[(5, 14, 16), float32], Tensor[(770), float64], Tensor[(150, 3), int8], Tensor[(14, 5, ?), bool]) {
  @func_2356(%var_2358, %var_2359, %var_2360) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(770), float64], Tensor[(150, 3), int8], Tensor[(14, 5, ?), bool]) */
}

def @func_4431(%var_4429: Tensor[(70), float64], %var_4430: Tensor[(385, 2), float64]) -> (Tensor[(4, 2, 13), float32], Tensor[(14, 5, ?), bool], Tensor[(70), float64], Tensor[(385, 2), float64], Tensor[(10, 45), int8]) {
  %150 = fn (%var_4416: Tensor[(70), float64], %var_4417: Tensor[(385, 2), float64]) -> (Tensor[(4, 2, 13), float32], Tensor[(14, 5, ?), bool], Tensor[(70), float64], Tensor[(385, 2), float64], Tensor[(10, 45), int8]) {
    %140 = @func_3884() /* ty=(Tensor[(4, 2, 13), float32],) */;
    %141 = cast(%var_4416, dtype="float64") /* ty=Tensor[(70), float64] */;
    %142 = cast(%var_4417, dtype="float64") /* ty=Tensor[(385, 2), float64] */;
    %143 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 45), int8] */, dtype="int8") /* ty=Tensor[(10, 45), int8] */;
    %144 = reshape(%141, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), float64] */;
    %145 = reshape(%142, newshape=[770]) /* ty=Tensor[(770), float64] */;
    %146 = reshape(%143, newshape=[150, 3]) /* ty=Tensor[(150, 3), int8] */;
    %147 = @func_2356(%144, %145, %146) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(770), float64], Tensor[(150, 3), int8], Tensor[(14, 5, ?), bool]) */;
    %148 = %140.0;
    %149 = %147.3;
    (%148, %149, %var_4416, %var_4417, meta[relay.Constant][6] /* ty=Tensor[(10, 45), int8] */)
  };
  %150(%var_4429, %var_4430) /* ty=(Tensor[(4, 2, 13), float32], Tensor[(14, 5, ?), bool], Tensor[(70), float64], Tensor[(385, 2), float64], Tensor[(10, 45), int8]) */
}

def @func_2642(%var_2591: Tensor[(14, 12, 8), float32]) -> (Tensor[(4, 2, 13), float32], Tensor[(14, 12, 8), float32]) {
  %151 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %152 = cosh(%151) /* ty=Tensor[(14, 12, 8), float32] */;
  %153 = cast(%var_2591, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %154 = shape_of(%152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%152, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %157 = minimum(%155, %156) /* ty=Tensor[(14, 12, 8), float32] */;
  %158 = cast(%157, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %159 = log(%158) /* ty=Tensor[(14, 12, 8), float32] */;
  %160 = cast(%159, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %161 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
  %162 = atanh(%160) /* ty=Tensor[(14, 12, 8), float32] */;
  (%161, %162)
}

def @func_2201(%var_2198: uint16, %var_2199: Tensor[(770), float64], %var_2200: Tensor[(450), int8]) -> (Tensor[(11, 10, 7), float64], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), bool]) {
  %177 = fn (%var_2179: uint16, %var_2186: Tensor[(770), float64], %var_2187: Tensor[(450), int8]) -> (Tensor[(11, 10, 7), float64], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), bool]) {
    %163 = cast(%var_2186, dtype="float64") /* ty=Tensor[(770), float64] */;
    %164 = cast(%var_2187, dtype="int8") /* ty=Tensor[(450), int8] */;
    %165 = reshape(%163, newshape=[11, 10, 7]) /* ty=Tensor[(11, 10, 7), float64] */;
    %166 = reshape(%164, newshape=[1, 450]) /* ty=Tensor[(1, 450), int8] */;
    %167 = @func_1461(%165, %166) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) */;
    %168 = cast(%var_2179, dtype="bool") /* ty=bool */;
    %169 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 2, 13), uint16] */, dtype="bool") /* ty=Tensor[(7, 2, 13), bool] */;
    %170 = equal(%168, %169) /* ty=Tensor[(7, 2, 13), bool] */;
    %171 = cast(%170, dtype="bool") /* ty=Tensor[(7, 2, 13), bool] */;
    %172 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(7, 2, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %173 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 2, 13), uint16] */, dtype="bool") /* ty=Tensor[(7, 2, 13), bool] */;
    %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %175 = %167.0;
    %176 = logical_and(%173, %174) /* ty=Tensor[(7, 2, 13), bool] */;
    (%175, %var_2186, %var_2187, %176)
  };
  %177(%var_2198, %var_2199, %var_2200) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), bool]) */
}

def @func_2319() -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) {
  %182 = fn () -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) {
    %178 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
    %179 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
    %180 = @func_1664() /* ty=Tensor[(4, 2, 13), float32] */;
    %181 = %178.0;
    (%179, %180, %181)
  };
  %182() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */
}

def @func_2851(%var_2849: Tensor[(1344), float32]) -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(14, 12, 8), float32], Tensor[(1344), float32]) {
  @func_2848(%var_2849) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(14, 12, 8), float32], Tensor[(1344), float32]) */
}

def @func_3949() -> Tensor[(4, 2, 13), float32] {
  %183 = @func_3658() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), bool]) */;
  %183.0
}

def @func_5847() -> (Tensor[(7, 2, 13), int32], Tensor[(4, 2, 13), float64], Tensor[(1344), float32]) {
  %190 = fn () -> (Tensor[(7, 2, 13), int32], Tensor[(4, 2, 13), float64], Tensor[(1344), float32]) {
    %184 = @func_4853() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(150, 3), uint32], Tensor[(420), float64], Tensor[(450, 1), uint32], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), int32]) */;
    %185 = cast(meta[relay.Constant][9] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %186 = reshape(%185, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
    %187 = @func_2848(%186) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(14, 12, 8), float32], Tensor[(1344), float32]) */;
    %188 = %184.6;
    %189 = %187.0;
    (%188, %189, meta[relay.Constant][9] /* ty=Tensor[(1344), float32] */)
  };
  %190() /* ty=(Tensor[(7, 2, 13), int32], Tensor[(4, 2, 13), float64], Tensor[(1344), float32]) */
}

def @func_4290() -> Tensor[(4, 2, 13), float32] {
  %191 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %191.0
}

def @func_1741() -> (Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) {
  @func_1739() /* ty=(Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) */
}

def @func_3650() -> Tensor[(4, 2, 13), float64] {
  %195 = fn () -> Tensor[(4, 2, 13), float64] {
    %192 = @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */;
    %193 = %192.0;
    %194 = cast(%193, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
    asin(%194) /* ty=Tensor[(4, 2, 13), float64] */
  };
  %195() /* ty=Tensor[(4, 2, 13), float64] */
}

def @func_4705() -> (Tensor[(4, 2, 13), float32],) {
  %197 = fn () -> (Tensor[(4, 2, 13), float32],) {
    %196 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
    (%196,)
  };
  %197() /* ty=(Tensor[(4, 2, 13), float32],) */
}

def @func_5459(%var_5457: Tensor[(8, 9, 6), int64]) -> Tensor[(8, 9, 6), float32] {
  @func_5456(%var_5457) /* ty=Tensor[(8, 9, 6), float32] */
}

def @func_3252() -> Tensor[(4, 2, 13), float32] {
  @func_3250() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_3884() -> (Tensor[(4, 2, 13), float32],) {
  %198 = @func_1972() /* ty=Tensor[(4, 2, 13), float32] */;
  (%198,)
}

def @func_2865() -> (Tensor[(4, 2, 13), float32],) {
  @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */
}

def @func_2077(%var_2075: Tensor[(15, 2, 7), float64]) -> Tensor[(15, 2, 7), float64] {
  @func_2074(%var_2075) /* ty=Tensor[(15, 2, 7), float64] */
}

def @func_5456(%var_5445: Tensor[(8, 9, 6), int64]) -> Tensor[(8, 9, 6), float32] {
  %199 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 9, 6), int64] */, dtype="bool") /* ty=Tensor[(8, 9, 6), bool] */;
  %200 = shape_of(%var_5445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%var_5445, dtype="bool") /* ty=Tensor[(8, 9, 6), bool] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %203 = not_equal(%201, %202) /* ty=Tensor[(8, 9, 6), bool] */;
  %204 = cast(%203, dtype="float32") /* ty=Tensor[(8, 9, 6), float32] */;
  atanh(%204) /* ty=Tensor[(8, 9, 6), float32] */
}

def @func_5416() -> (Tensor[(96), float32], Tensor[(96), float32]) {
  @func_5414() /* ty=(Tensor[(96), float32], Tensor[(96), float32]) */
}

def @func_4270() -> (Tensor[(4, 2, 13), float64], Tensor[(96), float32]) {
  %210 = fn () -> (Tensor[(4, 2, 13), float64], Tensor[(96), float32]) {
    %205 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
    %206 = cast(%205, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
    %207 = reshape(%206, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
    %208 = @func_3610(%207) /* ty=(Tensor[(96), float32], Tensor[(4, 2, 13), bool]) */;
    %209 = %208.0;
    (%205, %209)
  };
  %210() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(96), float32]) */
}

def @func_4787() -> Tensor[(4, 2, 13), bool] {
  %212 = fn () -> Tensor[(4, 2, 13), bool] {
    %211 = @func_3658() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), bool]) */;
    %211.1
  };
  %212() /* ty=Tensor[(4, 2, 13), bool] */
}

def @func_4195(%var_4193: Tensor[(10, 14, 3), float64], %var_4194: Tensor[(150, 3), uint32]) -> (Tensor[(10, 14, 3), float64], Tensor[(15, 3, 10), bool], Tensor[(150, 3), uint32]) {
  @func_4191(%var_4193, %var_4194) /* ty=(Tensor[(10, 14, 3), float64], Tensor[(15, 3, 10), bool], Tensor[(150, 3), uint32]) */
}

def @func_3612(%var_3611: Tensor[(4, 2, 13), float32]) -> (Tensor[(96), float32], Tensor[(4, 2, 13), bool]) {
  %222 = fn (%var_3603: Tensor[(4, 2, 13), float32]) -> (Tensor[(96), float32], Tensor[(4, 2, 13), bool]) {
    %213 = @func_1739() /* ty=(Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) */;
    %214 = @func_3046() /* ty=(Tensor[(4, 2, 13), float32],) */;
    %215 = %214.0;
    %216 = cast(%var_3603, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
    %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %218 = cast(%215, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
    %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %220 = %213.1;
    %221 = greater_equal(%218, %219) /* ty=Tensor[(4, 2, 13), bool] */;
    (%220, %221)
  };
  %222(%var_3611) /* ty=(Tensor[(96), float32], Tensor[(4, 2, 13), bool]) */
}

def @func_1465(%var_1463: Tensor[(11, 10, 7), float64], %var_1464: Tensor[(1, 450), int8]) -> (Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) {
  @func_1461(%var_1463, %var_1464) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) */
}

def @func_5341(%var_5339: Tensor[(12, 13, 1), float64], %var_5340: Tensor[(1120), float32]) -> (Tensor[(4, 2, 13), float64], Tensor[(28, 4), int16], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(12, 13, ?), float32], Tensor[(4, 2, 13), float64], Tensor[(1120), float32], Tensor[(1872), float64], Tensor[(1120), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(12, 13, ?), int32]) {
  @func_5337(%var_5339, %var_5340) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(28, 4), int16], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(12, 13, ?), float32], Tensor[(4, 2, 13), float64], Tensor[(1120), float32], Tensor[(1872), float64], Tensor[(1120), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(12, 13, ?), int32]) */
}

def @func_3046() -> (Tensor[(4, 2, 13), float32],) {
  %223 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
  (%223,)
}

def @func_1384() -> (Tensor[(4, 2, 13), float32],) {
  %227 = fn () -> (Tensor[(4, 2, 13), float32],) {
    %224 = cast(-6.23218f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %225 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
    %226 = mod(%224, %225) /* ty=Tensor[(4, 2, 13), float32] */;
    (%226,)
  };
  %227() /* ty=(Tensor[(4, 2, 13), float32],) */
}

def @func_3152(%var_3139: Tensor[(4, 2, 13), float32]) -> Tensor[(4, 2, 13), bool] {
  %228 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
  %229 = cast(%var_3139, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%228, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%231, %232) /* ty=Tensor[(4, 2, 13), bool] */
}

def @func_6069() -> Tensor[(4, 2, 13), float32] {
  @func_6067() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_5621() -> (Tensor[(420), float64], Tensor[(1, 16, 6), float64], Tensor[(5, 14, 16), float32], Tensor[(770, 1), float64], Tensor[(10, 45), int8], Tensor[(1, 16, 6), float32]) {
  %233 = @func_4853() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(150, 3), uint32], Tensor[(420), float64], Tensor[(450, 1), uint32], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), int32]) */;
  %234 = %233.2;
  %235 = cast(%234, dtype="float64") /* ty=Tensor[(420), float64] */;
  %236 = @func_1739() /* ty=(Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) */;
  %237 = %236.0;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(1, 16, 6), float64] */;
  %239 = cast(meta[relay.Constant][12] /* ty=Tensor[(770, 1), float64] */, dtype="float64") /* ty=Tensor[(770, 1), float64] */;
  %240 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 45), int8] */, dtype="int8") /* ty=Tensor[(10, 45), int8] */;
  %241 = reshape(%239, newshape=[11, 10, 7]) /* ty=Tensor[(11, 10, 7), float64] */;
  %242 = reshape(%240, newshape=[1, 450]) /* ty=Tensor[(1, 450), int8] */;
  %243 = @func_1461(%241, %242) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) */;
  %244 = log(%235) /* ty=Tensor[(420), float64] */;
  %245 = sin(%238) /* ty=Tensor[(1, 16, 6), float64] */;
  %246 = %243.5;
  %247 = @func_2916() /* ty=Tensor[(1, 16, 6), float32] */;
  (%244, %245, %246, meta[relay.Constant][12] /* ty=Tensor[(770, 1), float64] */, meta[relay.Constant][13] /* ty=Tensor[(10, 45), int8] */, %247)
}

def @func_2508(%var_2506: Tensor[(10, 9, 6), float64], %var_2507: Tensor[(10, 9, 6), float64]) -> (Tensor[(10, 9, 6), bool], Tensor[(4, 2, 13), float32], Tensor[(5, 14, 16), float32], Tensor[(1, 770), float64], Tensor[(150, 3), int8], Tensor[(4, 2, 13), float32], Tensor[(10, 9, 6), int32], Tensor[(10, 9, 6), int8]) {
  %279 = fn (%var_2456: Tensor[(10, 9, 6), float64], %var_2457: Tensor[(10, 9, 6), float64]) -> (Tensor[(10, 9, 6), bool], Tensor[(4, 2, 13), float32], Tensor[(5, 14, 16), float32], Tensor[(1, 770), float64], Tensor[(150, 3), int8], Tensor[(4, 2, 13), float32], Tensor[(10, 9, 6), int32], Tensor[(10, 9, 6), int8]) {
    %248 = cast(%var_2457, dtype="bool") /* ty=Tensor[(10, 9, 6), bool] */;
    %249 = shape_of(%var_2456, dtype="int32") /* ty=Tensor[(3), int32] */;
    %250 = cast(%var_2456, dtype="bool") /* ty=Tensor[(10, 9, 6), bool] */;
    %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %252 = @func_2294() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), bool]) */;
    %253 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 770), float64] */, dtype="float64") /* ty=Tensor[(1, 770), float64] */;
    %254 = cast(meta[relay.Constant][15] /* ty=Tensor[(150, 3), int8] */, dtype="int8") /* ty=Tensor[(150, 3), int8] */;
    %255 = reshape(%253, newshape=[11, 10, 7]) /* ty=Tensor[(11, 10, 7), float64] */;
    %256 = reshape(%254, newshape=[1, 450]) /* ty=Tensor[(1, 450), int8] */;
    %257 = @func_1461(%255, %256) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) */;
    %258 = cast(%var_2457, dtype="float32") /* ty=Tensor[(10, 9, 6), float32] */;
    %259 = shape_of(%var_2456, dtype="int32") /* ty=Tensor[(3), int32] */;
    %260 = cast(%var_2456, dtype="float32") /* ty=Tensor[(10, 9, 6), float32] */;
    %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %262 = floor_divide(%260, %261) /* ty=Tensor[(10, 9, 6), float32] */;
    %263 = cast(%var_2456, dtype="int32") /* ty=Tensor[(10, 9, 6), int32] */;
    %264 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
    %265 = cast(%262, dtype="int32") /* ty=Tensor[(10, 9, 6), int32] */;
    %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %267 = cast(%var_2457, dtype="float32") /* ty=Tensor[(10, 9, 6), float32] */;
    %268 = exp(%267) /* ty=Tensor[(10, 9, 6), float32] */;
    %269 = cast(%268, dtype="int8") /* ty=Tensor[(10, 9, 6), int8] */;
    %270 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
    %271 = cast(%262, dtype="int8") /* ty=Tensor[(10, 9, 6), int8] */;
    %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %273 = less(%250, %251) /* ty=Tensor[(10, 9, 6), bool] */;
    %274 = %252.0;
    %275 = %257.5;
    %276 = @func_1664() /* ty=Tensor[(4, 2, 13), float32] */;
    %277 = maximum(%265, %266) /* ty=Tensor[(10, 9, 6), int32] */;
    %278 = multiply(%271, %272) /* ty=Tensor[(10, 9, 6), int8] */;
    (%273, %274, %275, meta[relay.Constant][14] /* ty=Tensor[(1, 770), float64] */, meta[relay.Constant][15] /* ty=Tensor[(150, 3), int8] */, %276, %277, %278)
  };
  %279(%var_2506, %var_2507) /* ty=(Tensor[(10, 9, 6), bool], Tensor[(4, 2, 13), float32], Tensor[(5, 14, 16), float32], Tensor[(1, 770), float64], Tensor[(150, 3), int8], Tensor[(4, 2, 13), float32], Tensor[(10, 9, 6), int32], Tensor[(10, 9, 6), int8]) */
}

def @func_2810() -> Tensor[(4, 2, 13), float64] {
  @func_2563() /* ty=Tensor[(4, 2, 13), float64] */
}

def @func_3554() -> (Tensor[(4, 2, 13), float64],) {
  @func_3552() /* ty=(Tensor[(4, 2, 13), float64],) */
}

def @func_953(%var_950: Tensor[(4, 12, 10), int8], %var_951: Tensor[(4, 12, 10), int8], %var_952: Tensor[(1120), float32]) -> (Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) {
  @func_948(%var_950, %var_951, %var_952) /* ty=(Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) */
}

def @func_3250() -> Tensor[(4, 2, 13), float32] {
  %280 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %280.0
}

def @func_5060(%var_5059: Tensor[(16, 7, 9), float64]) -> Tensor[(16, 7, 9), float64] {
  %282 = fn (%var_5055: Tensor[(16, 7, 9), float64]) -> Tensor[(16, 7, 9), float64] {
    %281 = cast(%var_5055, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
    atan(%281) /* ty=Tensor[(16, 7, 9), float64] */
  };
  %282(%var_5059) /* ty=Tensor[(16, 7, 9), float64] */
}

def @func_4987(%var_4985: Tensor[(540), float64]) -> (Tensor[(4, 2, 13), float64], Tensor[(10, 9, 6), bool], Tensor[(540), float64]) {
  @func_4984(%var_4985) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(10, 9, 6), bool], Tensor[(540), float64]) */
}

def @func_5400() -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), uint8], Tensor[(4, 2, 13), bool], Tensor[(10, 9, 6), bool]) {
  @func_5398() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), uint8], Tensor[(4, 2, 13), bool], Tensor[(10, 9, 6), bool]) */
}

def @func_4924(%var_4889: Tensor[(84), int8]) -> (Tensor[(4, 3, 7), int8], Tensor[(84), int8], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32]) {
  %283 = cast(%var_4889, dtype="int8") /* ty=Tensor[(84), int8] */;
  %284 = reshape(%283, newshape=[4, 3, 7]) /* ty=Tensor[(4, 3, 7), int8] */;
  %285 = @func_3339(%284) /* ty=(Tensor[(4, 3, 7), int8],) */;
  %286 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
  %287 = cast(%286, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  %288 = @func_1814() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1, 770), float64], Tensor[(450), int8], Tensor[(4, 2, 13), float64]) */;
  %289 = %285.0;
  %290 = exp(%287) /* ty=Tensor[(4, 2, 13), float64] */;
  %291 = %288.0;
  (%289, %var_4889, %290, %291)
}

def @func_6056() -> (Tensor[(7, 2, 13), int32],) {
  @func_6054() /* ty=(Tensor[(7, 2, 13), int32],) */
}

def @func_6225() -> (Tensor[(4, 2, 13), float32], Tensor[(8, 9, 6), float32], Tensor[(4, 108), int64]) {
  @func_6223() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(8, 9, 6), float32], Tensor[(4, 108), int64]) */
}

def @func_5499() -> (Tensor[(4, 2, 13), float32],) {
  %292 = @func_3884() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %293 = %292.0;
  (%293,)
}

def @func_5651(%var_5650: Tensor[(16, 16, 6), float32]) -> Tensor[(16, 16, 6), int16] {
  %298 = fn (%var_5637: Tensor[(16, 16, 6), float32]) -> Tensor[(16, 16, 6), int16] {
    %294 = @func_1739() /* ty=(Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) */;
    %295 = %294.0;
    %296 = cast(%295, dtype="int16") /* ty=Tensor[(1, 16, 6), int16] */;
    %297 = cast(%var_5637, dtype="int16") /* ty=Tensor[(16, 16, 6), int16] */;
    multiply(%296, %297) /* ty=Tensor[(16, 16, 6), int16] */
  };
  %298(%var_5650) /* ty=Tensor[(16, 16, 6), int16] */
}

def @func_3020(%var_3018: Tensor[(12, 12, 13), float64], %var_3019: Tensor[(1120), float32]) -> (Tensor[(5, 14, 16), float32], Tensor[(1120), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(12, 12, 13), uint64]) {
  @func_3016(%var_3018, %var_3019) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(1120), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(12, 12, 13), uint64]) */
}

def @func_3016(%var_2957: Tensor[(12, 12, 13), float64], %var_2963: Tensor[(1120), float32]) -> (Tensor[(5, 14, 16), float32], Tensor[(1120), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(12, 12, 13), uint64]) {
  %299 = cast(%var_2963, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %300 = reshape(%299, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), float32] */;
  %301 = @func_51(%300) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) */;
  %302 = @func_2294() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), bool]) */;
  %303 = cast(%var_2957, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
  %304 = asin(%303) /* ty=Tensor[(12, 12, 13), float64] */;
  %305 = cast(%304, dtype="uint64") /* ty=Tensor[(12, 12, 13), uint64] */;
  %306 = shape_of(%var_2957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%var_2957, dtype="uint64") /* ty=Tensor[(12, 12, 13), uint64] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %309 = %301.0;
  %310 = %302.2;
  %311 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
  %312 = logical_xor(%307, %308) /* ty=Tensor[(12, 12, 13), uint64] */;
  (%309, %var_2963, %310, %311, %312)
}

def @func_2147(%var_2145: Tensor[(15, 3, 10), uint32]) -> (Tensor[(15, 3, 10), bool],) {
  @func_2144(%var_2145) /* ty=(Tensor[(15, 3, 10), bool],) */
}

def @func_3805(%var_3803: Tensor[(4, 2, 13), float32], %var_3804: Tensor[(1, 672), int8]) -> (Tensor[(4, 2, 13), uint32], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float32], Tensor[(4, 2, 13), bool]) {
  @func_3801(%var_3803, %var_3804) /* ty=(Tensor[(4, 2, 13), uint32], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float32], Tensor[(4, 2, 13), bool]) */
}

def @func_4714() -> Tensor[(1, 16, 6), float32] {
  %313 = fn () -> Tensor[(1, 16, 6), float32] {
    @func_2916() /* ty=Tensor[(1, 16, 6), float32] */
  };
  %313() /* ty=Tensor[(1, 16, 6), float32] */
}

def @func_1227(%var_1225: Tensor[(12, 10, 1), float64], %var_1226: Tensor[(12, 10, 10), float64]) -> (Tensor[(12, 10, 10), bool],) {
  @func_1223(%var_1225, %var_1226) /* ty=(Tensor[(12, 10, 10), bool],) */
}

def @func_4855() -> (Tensor[(4, 2, 13), float32], Tensor[(150, 3), uint32], Tensor[(420), float64], Tensor[(450, 1), uint32], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), int32]) {
  @func_4853() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(150, 3), uint32], Tensor[(420), float64], Tensor[(450, 1), uint32], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), int32]) */
}

def @func_4031(%var_4017: Tensor[(56, 2), int16]) -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float64], Tensor[(13, 672), bool], Tensor[(8, 2, 7), int16], Tensor[(56, 2), int16]) {
  %314 = @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %315 = @func_3649() /* ty=Tensor[(4, 2, 13), float64] */;
  %316 = cast(%315, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %317 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 84), int8] */, dtype="int8") /* ty=Tensor[(8, 84), int8] */;
  %318 = reshape(%316, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %319 = reshape(%317, newshape=[1, 672]) /* ty=Tensor[(1, 672), int8] */;
  %320 = @func_3801(%318, %319) /* ty=(Tensor[(4, 2, 13), uint32], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float32], Tensor[(4, 2, 13), bool]) */;
  %321 = %320.2;
  %322 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 84), int8] */, dtype="float64") /* ty=Tensor[(8, 84), float64] */;
  %323 = shape_of(%321, dtype="int32") /* ty=Tensor[(2), int32] */;
  %324 = cast(%321, dtype="float64") /* ty=Tensor[(?, 672), float64] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %326 = cast(%321, dtype="bool") /* ty=Tensor[(?, 672), bool] */;
  %327 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 672), float32] */, dtype="bool") /* ty=Tensor[(13, 672), bool] */;
  %328 = cast(%var_4017, dtype="int16") /* ty=Tensor[(56, 2), int16] */;
  %329 = cast(%var_4017, dtype="int16") /* ty=Tensor[(56, 2), int16] */;
  %330 = reshape(%328, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), int16] */;
  %331 = reshape(%329, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), int16] */;
  %332 = @func_1574(%330, %331) /* ty=(Tensor[(8, 2, 7), int16],) */;
  %333 = %314.0;
  %334 = mod(%324, %325) /* ty=Tensor[(?, 672), float64] */;
  %335 = less(%326, %327) /* ty=Tensor[(13, 672), bool] */;
  %336 = %332.0;
  (%315, %333, %334, %335, %336, %var_4017)
}

def @func_5501() -> (Tensor[(4, 2, 13), float32],) {
  @func_5499() /* ty=(Tensor[(4, 2, 13), float32],) */
}

def @func_4452() -> Tensor[(4, 2, 13), float32] {
  @func_4450() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_4191(%var_4179: Tensor[(10, 14, 3), float64], %var_4189: Tensor[(150, 3), uint32]) -> (Tensor[(10, 14, 3), float64], Tensor[(15, 3, 10), bool], Tensor[(150, 3), uint32]) {
  %337 = cast(%var_4179, dtype="float64") /* ty=Tensor[(10, 14, 3), float64] */;
  %338 = cast(%var_4189, dtype="uint32") /* ty=Tensor[(150, 3), uint32] */;
  %339 = reshape(%338, newshape=[15, 3, 10]) /* ty=Tensor[(15, 3, 10), uint32] */;
  %340 = @func_2144(%339) /* ty=(Tensor[(15, 3, 10), bool],) */;
  %341 = cos(%337) /* ty=Tensor[(10, 14, 3), float64] */;
  %342 = %340.0;
  (%341, %342, %var_4189)
}

def @func_3322() -> (Tensor[(4, 2, 13), float64],) {
  %344 = fn () -> (Tensor[(4, 2, 13), float64],) {
    %343 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
    (%343,)
  };
  %344() /* ty=(Tensor[(4, 2, 13), float64],) */
}

def @func_3405() -> (Tensor[(4, 2, 13), float64],) {
  %345 = @func_2810() /* ty=Tensor[(4, 2, 13), float64] */;
  (%345,)
}

def @func_4388() -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), int32]) {
  %350 = fn () -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), int32]) {
    %346 = @func_1739() /* ty=(Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) */;
    %347 = @func_3649() /* ty=Tensor[(4, 2, 13), float64] */;
    %348 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
    %349 = %346.3;
    (%347, %348, %349)
  };
  %350() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), int32]) */
}

def @main(%var_6298: Tensor[(54, 10), float64]) -> (Tensor[(4, 2, 13), float64], Tensor[(54, 10), float64], Tensor[(54, 10), float32]) {
  %351 = @func_3554() /* ty=(Tensor[(4, 2, 13), float64],) */;
  %352 = cast(%var_6298, dtype="float64") /* ty=Tensor[(54, 10), float64] */;
  %353 = cast(%var_6298, dtype="float64") /* ty=Tensor[(54, 10), float64] */;
  %354 = reshape(%353, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %355 = @func_4987(%354) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(10, 9, 6), bool], Tensor[(540), float64]) */;
  %356 = %355.2;
  %357 = cast(%356, dtype="float32") /* ty=Tensor[(540), float32] */;
  %358 = shape_of(%var_6298, dtype="int32") /* ty=Tensor[(2), int32] */;
  %359 = cast(%var_6298, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %361 = %351.0;
  %362 = log2(%352) /* ty=Tensor[(54, 10), float64] */;
  %363 = divide(%359, %360) /* ty=Tensor[(54, 10), float32] */;
  (%361, %362, %363)
}

def @func_3659() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), bool]) {
  %370 = fn () -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), bool]) {
    %364 = @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */;
    %365 = %364.0;
    %366 = cast(%365, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
    %367 = reshape(%366, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
    %368 = @func_3610(%367) /* ty=(Tensor[(96), float32], Tensor[(4, 2, 13), bool]) */;
    %369 = %368.1;
    (%365, %369)
  };
  %370() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), bool]) */
}

def @func_1814() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1, 770), float64], Tensor[(450), int8], Tensor[(4, 2, 13), float64]) {
  %371 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %372 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 770), float64] */, dtype="float64") /* ty=Tensor[(1, 770), float64] */;
  %373 = cast(meta[relay.Constant][19] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %374 = reshape(%372, newshape=[11, 10, 7]) /* ty=Tensor[(11, 10, 7), float64] */;
  %375 = reshape(%373, newshape=[1, 450]) /* ty=Tensor[(1, 450), int8] */;
  %376 = @func_1461(%374, %375) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) */;
  %377 = %371.0;
  %378 = @func_1664() /* ty=Tensor[(4, 2, 13), float32] */;
  %379 = %376.3;
  %380 = @func_1626() /* ty=Tensor[(4, 2, 13), float64] */;
  (%377, %378, %379, meta[relay.Constant][18] /* ty=Tensor[(1, 770), float64] */, meta[relay.Constant][19] /* ty=Tensor[(450), int8] */, %380)
}

def @func_1427() -> (Tensor[(4, 2, 13), float32],) {
  %383 = fn () -> (Tensor[(4, 2, 13), float32],) {
    %381 = @func_1383() /* ty=(Tensor[(4, 2, 13), float32],) */;
    %382 = %381.0;
    (%382,)
  };
  %383() /* ty=(Tensor[(4, 2, 13), float32],) */
}

def @func_4034(%var_4032: Tensor[(56, 2), int16]) -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float64], Tensor[(13, 672), bool], Tensor[(8, 2, 7), int16], Tensor[(56, 2), int16]) {
  @func_4031(%var_4032) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float64], Tensor[(13, 672), bool], Tensor[(8, 2, 7), int16], Tensor[(56, 2), int16]) */
}

def @func_1974() -> Tensor[(4, 2, 13), float32] {
  @func_1972() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_3341(%var_3340: Tensor[(4, 3, 7), int8]) -> (Tensor[(4, 3, 7), int8],) {
  %387 = fn (%var_3330: Tensor[(4, 3, 7), int8]) -> (Tensor[(4, 3, 7), int8],) {
    %384 = cast(meta[relay.Constant][20] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %385 = cast(%var_3330, dtype="int8") /* ty=Tensor[(4, 3, 7), int8] */;
    %386 = bitwise_and(%384, %385) /* ty=Tensor[(4, 3, 7), int8] */;
    (%386,)
  };
  %387(%var_3340) /* ty=(Tensor[(4, 3, 7), int8],) */
}

def @func_3155(%var_3153: Tensor[(4, 2, 13), float32]) -> Tensor[(4, 2, 13), bool] {
  @func_3152(%var_3153) /* ty=Tensor[(4, 2, 13), bool] */
}

def @func_4292() -> Tensor[(4, 2, 13), float32] {
  @func_4290() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_4627() -> (Tensor[(6, 3, 12), float32],) {
  @func_4625() /* ty=(Tensor[(6, 3, 12), float32],) */
}

def @func_1626() -> Tensor[(4, 2, 13), float64] {
  %388 = @func_1383() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %389 = %388.0;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  sqrt(%390) /* ty=Tensor[(4, 2, 13), float64] */
}

def @func_5981(%var_5979: Tensor[(450), uint32], %var_5980: Tensor[(8, 84), int8]) -> (Tensor[(4, 2, 13), float64], Tensor[(15, 3, 10), bool], Tensor[(450), uint32], Tensor[(4, 2, 13), uint32], Tensor[(8, 84), int8]) {
  %403 = fn (%var_5926: Tensor[(450), uint32], %var_5963: Tensor[(8, 84), int8]) -> (Tensor[(4, 2, 13), float64], Tensor[(15, 3, 10), bool], Tensor[(450), uint32], Tensor[(4, 2, 13), uint32], Tensor[(8, 84), int8]) {
    %391 = @func_4387() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), int32]) */;
    %392 = cast(%var_5926, dtype="uint32") /* ty=Tensor[(450), uint32] */;
    %393 = reshape(%392, newshape=[15, 3, 10]) /* ty=Tensor[(15, 3, 10), uint32] */;
    %394 = @func_2144(%393) /* ty=(Tensor[(15, 3, 10), bool],) */;
    %395 = %391.1;
    %396 = cast(%395, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
    %397 = cast(%var_5963, dtype="int8") /* ty=Tensor[(8, 84), int8] */;
    %398 = reshape(%396, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
    %399 = reshape(%397, newshape=[1, 672]) /* ty=Tensor[(1, 672), int8] */;
    %400 = @func_3801(%398, %399) /* ty=(Tensor[(4, 2, 13), uint32], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float32], Tensor[(4, 2, 13), bool]) */;
    %401 = %394.0;
    %402 = %400.0;
    (%395, %401, %var_5926, %402, %var_5963)
  };
  %403(%var_5979, %var_5980) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(15, 3, 10), bool], Tensor[(450), uint32], Tensor[(4, 2, 13), uint32], Tensor[(8, 84), int8]) */
}

def @func_1816() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1, 770), float64], Tensor[(450), int8], Tensor[(4, 2, 13), float64]) {
  @func_1814() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1, 770), float64], Tensor[(450), int8], Tensor[(4, 2, 13), float64]) */
}

def @func_5906() -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32]) {
  %409 = fn () -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32]) {
    %404 = @func_5791() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(6, 3, 12), int32]) */;
    %405 = %404.0;
    %406 = cast(%405, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
    %407 = asinh(%406) /* ty=Tensor[(4, 2, 13), float64] */;
    %408 = @func_4450() /* ty=Tensor[(4, 2, 13), float32] */;
    (%407, %408)
  };
  %409() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32]) */
}

def @func_853(%var_852: Tensor[(1, 11, 5), float32]) -> Tensor[(1, 11, 5), float32] {
  %411 = fn (%var_847: Tensor[(1, 11, 5), float32]) -> Tensor[(1, 11, 5), float32] {
    %410 = cast(%var_847, dtype="float32") /* ty=Tensor[(1, 11, 5), float32] */;
    asin(%410) /* ty=Tensor[(1, 11, 5), float32] */
  };
  %411(%var_852) /* ty=Tensor[(1, 11, 5), float32] */
}

def @func_579(%var_577: Tensor[(15, 2, 15), int8], %var_578: Tensor[(1120, 1), float32]) -> (Tensor[(15, 2, 15), int8], Tensor[(5, 14, 16), float32], Tensor[(1120, ?), float32]) {
  @func_575(%var_577, %var_578) /* ty=(Tensor[(15, 2, 15), int8], Tensor[(5, 14, 16), float32], Tensor[(1120, ?), float32]) */
}

def @func_3407() -> (Tensor[(4, 2, 13), float64],) {
  @func_3405() /* ty=(Tensor[(4, 2, 13), float64],) */
}

def @func_1590() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) {
  @func_1588() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */
}

def @func_1578(%var_1576: Tensor[(8, 2, 7), int16], %var_1577: Tensor[(8, 2, 7), int16]) -> (Tensor[(8, 2, 7), int16],) {
  @func_1574(%var_1576, %var_1577) /* ty=(Tensor[(8, 2, 7), int16],) */
}

def @func_2863() -> (Tensor[(4, 2, 13), float32],) {
  %412 = @func_1972() /* ty=Tensor[(4, 2, 13), float32] */;
  (%412,)
}

def @func_4450() -> Tensor[(4, 2, 13), float32] {
  %413 = @func_3658() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), bool]) */;
  %413.0
}

def @func_3377(%var_3368: Tensor[(7, 12, 8), int8]) -> Tensor[(7, 12, 8), int8] {
  %414 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 1, 8), int8] */, dtype="int8") /* ty=Tensor[(7, 1, 8), int8] */;
  %415 = cast(%var_3368, dtype="int8") /* ty=Tensor[(7, 12, 8), int8] */;
  left_shift(%414, %415) /* ty=Tensor[(7, 12, 8), int8] */
}

def @func_1628() -> Tensor[(4, 2, 13), float64] {
  @func_1626() /* ty=Tensor[(4, 2, 13), float64] */
}

def @func_2812() -> Tensor[(4, 2, 13), float64] {
  @func_2810() /* ty=Tensor[(4, 2, 13), float64] */
}

def @func_1972() -> Tensor[(4, 2, 13), float32] {
  %416 = @func_1383() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %416.0
}

def @func_1266(%var_1264: Tensor[(1, 16, 6), float32]) -> Tensor[(1, 16, 6), float32] {
  @func_1263(%var_1264) /* ty=Tensor[(1, 16, 6), float32] */
}

def @func_2917() -> Tensor[(1, 16, 6), float32] {
  %418 = fn () -> Tensor[(1, 16, 6), float32] {
    %417 = @func_1739() /* ty=(Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) */;
    %417.0
  };
  %418() /* ty=Tensor[(1, 16, 6), float32] */
}

def @func_5792() -> (Tensor[(4, 2, 13), float32], Tensor[(6, 3, 12), int32]) {
  %430 = fn () -> (Tensor[(4, 2, 13), float32], Tensor[(6, 3, 12), int32]) {
    %419 = @func_3884() /* ty=(Tensor[(4, 2, 13), float32],) */;
    %420 = @func_4625() /* ty=(Tensor[(6, 3, 12), float32],) */;
    %421 = %420.0;
    %422 = @func_4625() /* ty=(Tensor[(6, 3, 12), float32],) */;
    %423 = %422.0;
    %424 = cast(%423, dtype="int32") /* ty=Tensor[(6, 3, 12), int32] */;
    %425 = shape_of(%421, dtype="int32") /* ty=Tensor[(3), int32] */;
    %426 = cast(%421, dtype="int32") /* ty=Tensor[(6, 3, 12), int32] */;
    %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %428 = %419.0;
    %429 = multiply(%426, %427) /* ty=Tensor[(6, 3, 12), int32] */;
    (%428, %429)
  };
  %430() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(6, 3, 12), int32]) */
}

def @func_2848(%var_2826: Tensor[(1344), float32]) -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(14, 12, 8), float32], Tensor[(1344), float32]) {
  %431 = @func_1814() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1, 770), float64], Tensor[(450), int8], Tensor[(4, 2, 13), float64]) */;
  %432 = cast(%var_2826, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %433 = reshape(%432, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %434 = @func_2642(%433) /* ty=(Tensor[(4, 2, 13), float32], Tensor[(14, 12, 8), float32]) */;
  %435 = @func_2810() /* ty=Tensor[(4, 2, 13), float64] */;
  %436 = %431.0;
  %437 = %434.1;
  (%435, %436, %437, %var_2826)
}

def @func_5115(%var_5113: Tensor[(12, 156), float64]) -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(12, 156), float64], Tensor[(1120), float32]) {
  @func_5112(%var_5113) /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(12, 156), float64], Tensor[(1120), float32]) */
}

def @func_4625() -> (Tensor[(6, 3, 12), float32],) {
  %438 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 3, 12), float32] */, dtype="float32") /* ty=Tensor[(6, 3, 12), float32] */;
  %439 = erf(%438) /* ty=Tensor[(6, 3, 12), float32] */;
  (%439,)
}

def @func_6045(%var_6043: Tensor[(104), float32]) -> (Tensor[(1344), float32], Tensor[(96), float32], Tensor[(104), float32], Tensor[(4, 2, 13), float32], Tensor[(540), float64]) {
  @func_6042(%var_6043) /* ty=(Tensor[(1344), float32], Tensor[(96), float32], Tensor[(104), float32], Tensor[(4, 2, 13), float32], Tensor[(540), float64]) */
}

def @func_51(%var_32: Tensor[(5, 14, 16), float32]) -> (Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) {
  %440 = cast(%var_32, dtype="float32") /* ty=Tensor[(5, 14, 16), float32] */;
  %441 = cosh(%440) /* ty=Tensor[(5, 14, 16), float32] */;
  %442 = cast(%441, dtype="float32") /* ty=Tensor[(5, 14, 16), float32] */;
  %443 = sigmoid(%442) /* ty=Tensor[(5, 14, 16), float32] */;
  %444 = cast(%443, dtype="float32") /* ty=Tensor[(5, 14, 16), float32] */;
  %445 = cast(%443, dtype="float32") /* ty=Tensor[(5, 14, 16), float32] */;
  %446 = exp(%444) /* ty=Tensor[(5, 14, 16), float32] */;
  %447 = sin(%445) /* ty=Tensor[(5, 14, 16), float32] */;
  (%446, %447)
}

def @func_1739() -> (Tensor[(1, 16, 6), float32], Tensor[(96), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), int32]) {
  %448 = cast(meta[relay.Constant][23] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %449 = reshape(%448, newshape=[1, 16, 6]) /* ty=Tensor[(1, 16, 6), float32] */;
  %450 = @func_1664() /* ty=Tensor[(4, 2, 13), float32] */;
  %451 = cast(%450, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  %452 = tan(%451) /* ty=Tensor[(4, 2, 13), float64] */;
  %453 = @func_1383() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %454 = %453.0;
  %455 = cast(%454, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %456 = shape_of(%452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%452, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %459 = cast(%450, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %460 = shape_of(%452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(%452, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %463 = logical_or(%461, %462) /* ty=Tensor[(4, 2, 13), bool] */;
  %464 = cast(%463, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %465 = shape_of(%452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(%452, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %468 = subtract(%466, %467) /* ty=Tensor[(4, 2, 13), float32] */;
  %469 = cast(%468, dtype="int32") /* ty=Tensor[(4, 2, 13), int32] */;
  %470 = shape_of(%463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%463, dtype="int32") /* ty=Tensor[(4, 2, 13), int32] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %473 = @func_1263(%449) /* ty=Tensor[(1, 16, 6), float32] */;
  %474 = floor_divide(%457, %458) /* ty=Tensor[(4, 2, 13), float32] */;
  %475 = minimum(%471, %472) /* ty=Tensor[(4, 2, 13), int32] */;
  (%473, meta[relay.Constant][23] /* ty=Tensor[(96), float32] */, %474, %475)
}

def @func_2356(%var_2335: Tensor[(14, 5, 1), float64], %var_2341: Tensor[(770), float64], %var_2342: Tensor[(150, 3), int8]) -> (Tensor[(5, 14, 16), float32], Tensor[(770), float64], Tensor[(150, 3), int8], Tensor[(14, 5, ?), bool]) {
  %476 = cast(%var_2341, dtype="float64") /* ty=Tensor[(770), float64] */;
  %477 = cast(%var_2342, dtype="int8") /* ty=Tensor[(150, 3), int8] */;
  %478 = reshape(%476, newshape=[11, 10, 7]) /* ty=Tensor[(11, 10, 7), float64] */;
  %479 = reshape(%477, newshape=[1, 450]) /* ty=Tensor[(1, 450), int8] */;
  %480 = @func_1461(%478, %479) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) */;
  %481 = cast(%var_2335, dtype="float64") /* ty=Tensor[(14, 5, 1), float64] */;
  %482 = asin(%481) /* ty=Tensor[(14, 5, 1), float64] */;
  %483 = cast(%var_2335, dtype="bool") /* ty=Tensor[(14, 5, 1), bool] */;
  %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%482, dtype="bool") /* ty=Tensor[(14, 5, 1), bool] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %487 = %480.5;
  %488 = less_equal(%485, %486) /* ty=Tensor[(14, 5, ?), bool] */;
  (%487, %var_2341, %var_2342, %488)
}

def @func_5414() -> (Tensor[(96), float32], Tensor[(96), float32]) {
  %489 = @func_4269() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(96), float32]) */;
  %490 = @func_4269() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(96), float32]) */;
  %491 = %489.1;
  %492 = %490.1;
  (%491, %492)
}

def @func_5112(%var_5107: Tensor[(12, 156), float64]) -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(12, 156), float64], Tensor[(1120), float32]) {
  %493 = cast(%var_5107, dtype="float64") /* ty=Tensor[(12, 156), float64] */;
  %494 = cast(meta[relay.Constant][24] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %495 = reshape(%493, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), float64] */;
  %496 = reshape(%494, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %497 = @func_3016(%495, %496) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(1120), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(12, 12, 13), uint64]) */;
  %498 = @func_4290() /* ty=Tensor[(4, 2, 13), float32] */;
  %499 = %497.3;
  (%498, %499, %var_5107, meta[relay.Constant][24] /* ty=Tensor[(1120), float32] */)
}

def @func_5859() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) {
  %502 = fn () -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) {
    %500 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
    %501 = @func_3250() /* ty=Tensor[(4, 2, 13), float32] */;
    (%500, %501)
  };
  %502() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */
}

def @func_4680() -> Tensor[(4, 2, 13), float32] {
  @func_4678() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_6042(%var_6022: Tensor[(104), float32]) -> (Tensor[(1344), float32], Tensor[(96), float32], Tensor[(104), float32], Tensor[(4, 2, 13), float32], Tensor[(540), float64]) {
  %503 = @func_5846() /* ty=(Tensor[(7, 2, 13), int32], Tensor[(4, 2, 13), float64], Tensor[(1344), float32]) */;
  %504 = cast(%var_6022, dtype="float32") /* ty=Tensor[(104), float32] */;
  %505 = reshape(%504, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %506 = @func_3610(%505) /* ty=(Tensor[(96), float32], Tensor[(4, 2, 13), bool]) */;
  %507 = cast(meta[relay.Constant][25] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %508 = cast(meta[relay.Constant][25] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %509 = reshape(%507, newshape=[10, 9, 6]) /* ty=Tensor[(10, 9, 6), float64] */;
  %510 = reshape(%508, newshape=[10, 9, 6]) /* ty=Tensor[(10, 9, 6), float64] */;
  %511 = @func_2505(%509, %510) /* ty=(Tensor[(10, 9, 6), bool], Tensor[(4, 2, 13), float32], Tensor[(5, 14, 16), float32], Tensor[(1, 770), float64], Tensor[(150, 3), int8], Tensor[(4, 2, 13), float32], Tensor[(10, 9, 6), int32], Tensor[(10, 9, 6), int8]) */;
  %512 = %503.2;
  %513 = %506.0;
  %514 = %511.5;
  (%512, %513, %var_6022, %514, meta[relay.Constant][25] /* ty=Tensor[(540), float64] */)
}

def @func_5623() -> (Tensor[(420), float64], Tensor[(1, 16, 6), float64], Tensor[(5, 14, 16), float32], Tensor[(770, 1), float64], Tensor[(10, 45), int8], Tensor[(1, 16, 6), float32]) {
  @func_5621() /* ty=(Tensor[(420), float64], Tensor[(1, 16, 6), float64], Tensor[(5, 14, 16), float32], Tensor[(770, 1), float64], Tensor[(10, 45), int8], Tensor[(1, 16, 6), float32]) */
}

def @func_5547(%var_5544: Tensor[(16, 1, 14), uint32], %var_5545: Tensor[(16, 7, 14), uint32], %var_5546: Tensor[(16, 7, 14), uint32]) -> (Tensor[(16, 7, 14), float32],) {
  @func_5542(%var_5544, %var_5545, %var_5546) /* ty=(Tensor[(16, 7, 14), float32],) */
}

def @func_5879() -> (Tensor[(4, 2, 13), float32],) {
  @func_5877() /* ty=(Tensor[(4, 2, 13), float32],) */
}

def @func_4740() -> (Tensor[(4, 2, 13), float64],) {
  %517 = fn () -> (Tensor[(4, 2, 13), float64],) {
    %515 = @func_4387() /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), int32]) */;
    %516 = %515.1;
    (%516,)
  };
  %517() /* ty=(Tensor[(4, 2, 13), float64],) */
}

def @func_6223() -> (Tensor[(4, 2, 13), float32], Tensor[(8, 9, 6), float32], Tensor[(4, 108), int64]) {
  %518 = @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %519 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 108), int64] */, dtype="int64") /* ty=Tensor[(4, 108), int64] */;
  %520 = reshape(%519, newshape=[8, 9, 6]) /* ty=Tensor[(8, 9, 6), int64] */;
  %521 = %518.0;
  %522 = @func_5456(%520) /* ty=Tensor[(8, 9, 6), float32] */;
  (%521, %522, meta[relay.Constant][26] /* ty=Tensor[(4, 108), int64] */)
}

def @func_5183() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64]) {
  %525 = fn () -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64]) {
    %523 = @func_4678() /* ty=Tensor[(4, 2, 13), float32] */;
    %524 = @func_2563() /* ty=Tensor[(4, 2, 13), float64] */;
    (%523, %524)
  };
  %525() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64]) */
}

def @func_575(%var_530: Tensor[(15, 2, 15), int8], %var_539: Tensor[(1120, 1), float32]) -> (Tensor[(15, 2, 15), int8], Tensor[(5, 14, 16), float32], Tensor[(1120, ?), float32]) {
  %526 = cast(meta[relay.Constant][27] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %527 = cast(%var_530, dtype="int8") /* ty=Tensor[(15, 2, 15), int8] */;
  %528 = cast(%var_539, dtype="float32") /* ty=Tensor[(1120, 1), float32] */;
  %529 = reshape(%528, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), float32] */;
  %530 = @func_51(%529) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) */;
  %531 = cast(%var_539, dtype="int16") /* ty=Tensor[(1120, 1), int16] */;
  %532 = cast(meta[relay.Constant][27] /* ty=int8 */, dtype="int16") /* ty=int16 */;
  %533 = right_shift(%531, %532) /* ty=Tensor[(1120, 1), int16] */;
  %534 = cast(%533, dtype="float32") /* ty=Tensor[(1120, 1), float32] */;
  %535 = asin(%534) /* ty=Tensor[(1120, 1), float32] */;
  %536 = cast(%533, dtype="float64") /* ty=Tensor[(1120, 1), float64] */;
  %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(2), int32] */;
  %538 = cast(%535, dtype="float64") /* ty=Tensor[(1120, 1), float64] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %540 = mod(%538, %539) /* ty=Tensor[(1120, ?), float64] */;
  %541 = cast(%533, dtype="float32") /* ty=Tensor[(1120, 1), float32] */;
  %542 = shape_of(%540, dtype="int32") /* ty=Tensor[(2), int32] */;
  %543 = cast(%540, dtype="float32") /* ty=Tensor[(1120, ?), float32] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %545 = bitwise_and(%526, %527) /* ty=Tensor[(15, 2, 15), int8] */;
  %546 = %530.1;
  %547 = multiply(%543, %544) /* ty=Tensor[(1120, ?), float32] */;
  (%545, %546, %547)
}

def @func_1025(%var_1009: Tensor[(11, 1, 13), float64]) -> (Tensor[(11, 1, 13), float64], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) {
  %548 = cast(%var_1009, dtype="float64") /* ty=Tensor[(11, 1, 13), float64] */;
  %549 = cast(meta[relay.Constant][28] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %550 = reshape(%549, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), float32] */;
  %551 = @func_51(%550) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) */;
  %552 = rsqrt(%548) /* ty=Tensor[(11, 1, 13), float64] */;
  %553 = %551.1;
  (%552, %553, meta[relay.Constant][28] /* ty=Tensor[(1120), float32] */)
}

def @func_1223(%var_1209: Tensor[(12, 10, 1), float64], %var_1210: Tensor[(12, 10, 10), float64]) -> (Tensor[(12, 10, 10), bool],) {
  %554 = cast(%var_1209, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %555 = cast(%var_1210, dtype="bool") /* ty=Tensor[(12, 10, 10), bool] */;
  %556 = greater(%554, %555) /* ty=Tensor[(12, 10, 10), bool] */;
  (%556,)
}

def @func_4217(%var_4216: Tensor[(4, 2, 13), float32]) -> (Tensor[(4, 2, 13), uint8],) {
  %563 = fn (%var_4205: Tensor[(4, 2, 13), float32]) -> (Tensor[(4, 2, 13), uint8],) {
    %557 = @func_2749() /* ty=Tensor[(4, 2, 13), float32] */;
    %558 = cast(%var_4205, dtype="uint8") /* ty=Tensor[(4, 2, 13), uint8] */;
    %559 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
    %560 = cast(%557, dtype="uint8") /* ty=Tensor[(4, 2, 13), uint8] */;
    %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %562 = bitwise_and(%560, %561) /* ty=Tensor[(4, 2, 13), uint8] */;
    (%562,)
  };
  %563(%var_4216) /* ty=(Tensor[(4, 2, 13), uint8],) */
}

def @func_4927(%var_4925: Tensor[(84), int8]) -> (Tensor[(4, 3, 7), int8], Tensor[(84), int8], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32]) {
  @func_4924(%var_4925) /* ty=(Tensor[(4, 3, 7), int8], Tensor[(84), int8], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32]) */
}

def @func_54(%var_52: Tensor[(5, 14, 16), float32]) -> (Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) {
  @func_51(%var_52) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) */
}

def @func_1664() -> Tensor[(4, 2, 13), float32] {
  %564 = @func_1588() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */;
  %564.1
}

def @func_2751() -> Tensor[(4, 2, 13), float32] {
  @func_2749() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_2645(%var_2643: Tensor[(14, 12, 8), float32]) -> (Tensor[(4, 2, 13), float32], Tensor[(14, 12, 8), float32]) {
  @func_2642(%var_2643) /* ty=(Tensor[(4, 2, 13), float32], Tensor[(14, 12, 8), float32]) */
}

def @func_1588() -> (Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) {
  %565 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %566 = @func_1534() /* ty=Tensor[(4, 2, 13), float32] */;
  %567 = %565.0;
  (%566, %567)
}

def @func_3886() -> (Tensor[(4, 2, 13), float32],) {
  @func_3884() /* ty=(Tensor[(4, 2, 13), float32],) */
}

def @func_1461(%var_1433: Tensor[(11, 10, 7), float64], %var_1440: Tensor[(1, 450), int8]) -> (Tensor[(11, 10, 7), float64], Tensor[(11, 10, 7), float32], Tensor[(1, 450), int8], Tensor[(1120), float32], Tensor[(5, 14, 16), float64], Tensor[(5, 14, 16), float32], Tensor[(8, 60), int8]) {
  %568 = cast(%var_1433, dtype="float64") /* ty=Tensor[(11, 10, 7), float64] */;
  %569 = cast(%var_1433, dtype="float32") /* ty=Tensor[(11, 10, 7), float32] */;
  %570 = cast(%var_1440, dtype="int8") /* ty=Tensor[(1, 450), int8] */;
  %571 = cast(meta[relay.Constant][29] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %572 = reshape(%570, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), int8] */;
  %573 = reshape(%571, newshape=[1120, 1]) /* ty=Tensor[(1120, 1), float32] */;
  %574 = @func_575(%572, %573) /* ty=(Tensor[(15, 2, 15), int8], Tensor[(5, 14, 16), float32], Tensor[(1120, ?), float32]) */;
  %575 = %574.1;
  %576 = cast(%575, dtype="float64") /* ty=Tensor[(5, 14, 16), float64] */;
  %577 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 60), int8] */, dtype="int8") /* ty=Tensor[(8, 60), int8] */;
  %578 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 60), int8] */, dtype="int8") /* ty=Tensor[(8, 60), int8] */;
  %579 = cast(%575, dtype="float32") /* ty=Tensor[(5, 14, 16), float32] */;
  %580 = reshape(%577, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
  %581 = reshape(%578, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
  %582 = reshape(%579, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %583 = @func_948(%580, %581, %582) /* ty=(Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) */;
  %584 = sinh(%568) /* ty=Tensor[(11, 10, 7), float64] */;
  %585 = rsqrt(%569) /* ty=Tensor[(11, 10, 7), float32] */;
  %586 = erf(%576) /* ty=Tensor[(5, 14, 16), float64] */;
  %587 = %583.1;
  (%584, %585, %var_1440, meta[relay.Constant][29] /* ty=Tensor[(1120), float32] */, %586, %587, meta[relay.Constant][30] /* ty=Tensor[(8, 60), int8] */)
}

def @func_6003() -> Tensor[(1, 770), float32] {
  %591 = fn () -> Tensor[(1, 770), float32] {
    %588 = @func_1814() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1, 770), float64], Tensor[(450), int8], Tensor[(4, 2, 13), float64]) */;
    %589 = %588.3;
    %590 = cast(%589, dtype="float32") /* ty=Tensor[(1, 770), float32] */;
    acos(%590) /* ty=Tensor[(1, 770), float32] */
  };
  %591() /* ty=Tensor[(1, 770), float32] */
}

def @func_4678() -> Tensor[(4, 2, 13), float32] {
  %592 = @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %593 = %592.0;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  atanh(%594) /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_5337(%var_5208: Tensor[(12, 13, 1), float64], %var_5299: Tensor[(1120), float32]) -> (Tensor[(4, 2, 13), float64], Tensor[(28, 4), int16], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(12, 13, ?), float32], Tensor[(4, 2, 13), float64], Tensor[(1120), float32], Tensor[(1872), float64], Tensor[(1120), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(12, 13, ?), int32]) {
  %595 = cast(meta[relay.Constant][31] /* ty=Tensor[(28, 4), int16] */, dtype="int16") /* ty=Tensor[(28, 4), int16] */;
  %596 = reshape(%595, newshape=[56, 2]) /* ty=Tensor[(56, 2), int16] */;
  %597 = @func_4031(%596) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float64], Tensor[(13, 672), bool], Tensor[(8, 2, 7), int16], Tensor[(56, 2), int16]) */;
  %598 = @func_3658() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), bool]) */;
  %599 = cast(%var_5208, dtype="float64") /* ty=Tensor[(12, 13, 1), float64] */;
  %600 = exp(%599) /* ty=Tensor[(12, 13, 1), float64] */;
  %601 = cast(%600, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  %602 = log2(%601) /* ty=Tensor[(12, 13, 1), float32] */;
  %603 = cast(%602, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  %604 = acos(%603) /* ty=Tensor[(12, 13, 1), float32] */;
  %605 = cast(%604, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  %606 = cosh(%605) /* ty=Tensor[(12, 13, 1), float32] */;
  %607 = cast(%600, dtype="int32") /* ty=Tensor[(12, 13, 1), int32] */;
  %608 = shape_of(%var_5208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %609 = cast(%var_5208, dtype="int32") /* ty=Tensor[(12, 13, 1), int32] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %611 = maximum(%609, %610) /* ty=Tensor[(12, 13, ?), int32] */;
  %612 = cast(%611, dtype="float32") /* ty=Tensor[(12, 13, ?), float32] */;
  %613 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%606, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %616 = @func_3321() /* ty=(Tensor[(4, 2, 13), float64],) */;
  %617 = cast(meta[relay.Constant][32] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %618 = cast(%var_5299, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %619 = reshape(%617, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), float64] */;
  %620 = reshape(%618, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %621 = @func_3016(%619, %620) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(1120), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), float64], Tensor[(12, 12, 13), uint64]) */;
  %622 = @func_3552() /* ty=(Tensor[(4, 2, 13), float64],) */;
  %623 = cast(%611, dtype="float64") /* ty=Tensor[(12, 13, ?), float64] */;
  %624 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%604, dtype="float64") /* ty=Tensor[(12, 13, 1), float64] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %627 = divide(%625, %626) /* ty=Tensor[(12, 13, ?), float64] */;
  %628 = cast(%627, dtype="float64") /* ty=Tensor[(12, 13, ?), float64] */;
  %629 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%604, dtype="float64") /* ty=Tensor[(12, 13, 1), float64] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %632 = power(%630, %631) /* ty=Tensor[(12, 13, ?), float64] */;
  %633 = cast(%632, dtype="int32") /* ty=Tensor[(12, 13, ?), int32] */;
  %634 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%606, dtype="int32") /* ty=Tensor[(12, 13, 1), int32] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %637 = %597.0;
  %638 = @func_3949() /* ty=Tensor[(4, 2, 13), float32] */;
  %639 = %598.0;
  %640 = floor_divide(%614, %615) /* ty=Tensor[(12, 13, ?), float32] */;
  %641 = %616.0;
  %642 = %621.1;
  %643 = %622.0;
  %644 = @func_1972() /* ty=Tensor[(4, 2, 13), float32] */;
  %645 = multiply(%635, %636) /* ty=Tensor[(12, 13, ?), int32] */;
  (%637, meta[relay.Constant][31] /* ty=Tensor[(28, 4), int16] */, %638, %639, %640, %641, %642, meta[relay.Constant][32] /* ty=Tensor[(1872), float64] */, %var_5299, %643, %644, %645)
}

def @func_948(%var_934: Tensor[(4, 12, 10), int8], %var_935: Tensor[(4, 12, 10), int8], %var_944: Tensor[(1120), float32]) -> (Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) {
  %646 = cast(%var_935, dtype="int8") /* ty=Tensor[(4, 12, 10), int8] */;
  %647 = shape_of(%var_934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%var_934, dtype="int8") /* ty=Tensor[(4, 12, 10), int8] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %650 = cast(%var_944, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %651 = reshape(%650, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), float32] */;
  %652 = @func_51(%651) /* ty=(Tensor[(5, 14, 16), float32], Tensor[(5, 14, 16), float32]) */;
  %653 = bitwise_xor(%648, %649) /* ty=Tensor[(4, 12, 10), int8] */;
  %654 = %652.1;
  (%653, %654, %var_944)
}

def @func_2074(%var_2068: Tensor[(15, 2, 7), float64]) -> Tensor[(15, 2, 7), float64] {
  %655 = cast(%var_2068, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  sinh(%655) /* ty=Tensor[(15, 2, 7), float64] */
}

def @func_1535() -> Tensor[(4, 2, 13), float32] {
  %659 = fn () -> Tensor[(4, 2, 13), float32] {
    %656 = @func_1426() /* ty=(Tensor[(4, 2, 13), float32],) */;
    %657 = %656.0;
    %658 = cast(%657, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
    rsqrt(%658) /* ty=Tensor[(4, 2, 13), float32] */
  };
  %659() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_3801(%var_3755: Tensor[(4, 2, 13), float32], %var_3769: Tensor[(1, 672), int8]) -> (Tensor[(4, 2, 13), uint32], Tensor[(4, 2, 13), float32], Tensor[(?, 672), float32], Tensor[(4, 2, 13), bool]) {
  %660 = @func_2863() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %661 = %660.0;
  %662 = cast(%var_3755, dtype="uint32") /* ty=Tensor[(4, 2, 13), uint32] */;
  %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%661, dtype="uint32") /* ty=Tensor[(4, 2, 13), uint32] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %666 = cast(%var_3755, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %667 = cast(%var_3769, dtype="int8") /* ty=Tensor[(1, 672), int8] */;
  %668 = reshape(%667, newshape=[7, 12, 8]) /* ty=Tensor[(7, 12, 8), int8] */;
  %669 = @func_3377(%668) /* ty=Tensor[(7, 12, 8), int8] */;
  %670 = cast(%669, dtype="float32") /* ty=Tensor[(7, 12, 8), float32] */;
  %671 = shape_of(%var_3769, dtype="int32") /* ty=Tensor[(2), int32] */;
  %672 = cast(%var_3769, dtype="float32") /* ty=Tensor[(1, 672), float32] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %674 = cast(%661, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %675 = reshape(%674, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %676 = @func_3610(%675) /* ty=(Tensor[(96), float32], Tensor[(4, 2, 13), bool]) */;
  %677 = logical_xor(%664, %665) /* ty=Tensor[(4, 2, 13), uint32] */;
  %678 = log2(%666) /* ty=Tensor[(4, 2, 13), float32] */;
  %679 = divide(%672, %673) /* ty=Tensor[(?, 672), float32] */;
  %680 = %676.1;
  (%677, %678, %679, %680)
}

def @func_3552() -> (Tensor[(4, 2, 13), float64],) {
  %681 = @func_3405() /* ty=(Tensor[(4, 2, 13), float64],) */;
  %682 = %681.0;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  %684 = sin(%683) /* ty=Tensor[(4, 2, 13), float64] */;
  (%684,)
}

def @func_5398() -> (Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), uint8], Tensor[(4, 2, 13), bool], Tensor[(10, 9, 6), bool]) {
  %685 = @func_4739() /* ty=(Tensor[(4, 2, 13), float64],) */;
  %686 = %685.0;
  %687 = cast(%686, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
  %688 = reshape(%687, newshape=[4, 2, 13]) /* ty=Tensor[(4, 2, 13), float32] */;
  %689 = @func_4215(%688) /* ty=(Tensor[(4, 2, 13), uint8],) */;
  %690 = @func_2294() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float64], Tensor[(4, 2, 13), bool]) */;
  %691 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 180), float64] */, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %692 = reshape(%691, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %693 = @func_4984(%692) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(10, 9, 6), bool], Tensor[(540), float64]) */;
  %694 = %693.1;
  %695 = cast(%694, dtype="bool") /* ty=Tensor[(10, 9, 6), bool] */;
  %696 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(3, 180), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %697 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 180), float64] */, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %699 = not_equal(%697, %698) /* ty=Tensor[(3, 180), bool] */;
  %700 = cast(%699, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %701 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%694, dtype="bool") /* ty=Tensor[(10, 9, 6), bool] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %704 = %689.0;
  %705 = %690.3;
  %706 = logical_or(%702, %703) /* ty=Tensor[(10, 9, 6), bool] */;
  (%686, %704, %705, %706)
}

def @func_3048() -> (Tensor[(4, 2, 13), float32],) {
  @func_3046() /* ty=(Tensor[(4, 2, 13), float32],) */
}

def @func_2058(%var_2056: Tensor[(4, 2, 13), float32], %var_2057: Tensor[(1120), float32]) -> (Tensor[(4, 2, 13), bool], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(480), int8], Tensor[(1120), float32], Tensor[(4, 2, 13), bool]) {
  %732 = fn (%var_1994: Tensor[(4, 2, 13), float32], %var_2039: Tensor[(1120), float32]) -> (Tensor[(4, 2, 13), bool], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(480), int8], Tensor[(1120), float32], Tensor[(4, 2, 13), bool]) {
    %707 = @func_1383() /* ty=(Tensor[(4, 2, 13), float32],) */;
    %708 = %707.0;
    %709 = cast(%708, dtype="float32") /* ty=Tensor[(4, 2, 13), float32] */;
    %710 = acos(%709) /* ty=Tensor[(4, 2, 13), float32] */;
    %711 = cast(%var_1994, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
    %712 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
    %713 = cast(%710, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
    %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %715 = @func_1588() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32]) */;
    %716 = cast(meta[relay.Constant][34] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
    %717 = cast(meta[relay.Constant][34] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
    %718 = cast(%var_2039, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %719 = reshape(%716, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
    %720 = reshape(%717, newshape=[4, 12, 10]) /* ty=Tensor[(4, 12, 10), int8] */;
    %721 = reshape(%718, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %722 = @func_948(%719, %720, %721) /* ty=(Tensor[(4, 12, 10), int8], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) */;
    %723 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 2, 13), float32] */, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
    %724 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
    %725 = cast(%710, dtype="bool") /* ty=Tensor[(4, 2, 13), bool] */;
    %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %727 = logical_and(%713, %714) /* ty=Tensor[(4, 2, 13), bool] */;
    %728 = @func_1972() /* ty=Tensor[(4, 2, 13), float32] */;
    %729 = %715.0;
    %730 = %722.2;
    %731 = equal(%725, %726) /* ty=Tensor[(4, 2, 13), bool] */;
    (%727, %728, %729, %730, meta[relay.Constant][34] /* ty=Tensor[(480), int8] */, %var_2039, %731)
  };
  %732(%var_2056, %var_2057) /* ty=(Tensor[(4, 2, 13), bool], Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(480), int8], Tensor[(1120), float32], Tensor[(4, 2, 13), bool]) */
}

def @func_3636() -> (Tensor[(4, 2, 13), float32],) {
  %734 = fn () -> (Tensor[(4, 2, 13), float32],) {
    %733 = @func_2749() /* ty=Tensor[(4, 2, 13), float32] */;
    (%733,)
  };
  %734() /* ty=(Tensor[(4, 2, 13), float32],) */
}

def @func_5542(%var_5519: Tensor[(16, 1, 14), uint32], %var_5520: Tensor[(16, 7, 14), uint32], %var_5532: Tensor[(16, 7, 14), uint32]) -> (Tensor[(16, 7, 14), float32],) {
  %735 = cast(%var_5519, dtype="uint32") /* ty=Tensor[(16, 1, 14), uint32] */;
  %736 = cast(%var_5520, dtype="uint32") /* ty=Tensor[(16, 7, 14), uint32] */;
  %737 = bitwise_or(%735, %736) /* ty=Tensor[(16, 7, 14), uint32] */;
  %738 = cast(%var_5532, dtype="float32") /* ty=Tensor[(16, 7, 14), float32] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="float32") /* ty=Tensor[(16, 7, 14), float32] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %742 = floor_divide(%740, %741) /* ty=Tensor[(16, 7, 14), float32] */;
  (%742,)
}

def @func_4984(%var_4971: Tensor[(540), float64]) -> (Tensor[(4, 2, 13), float64], Tensor[(10, 9, 6), bool], Tensor[(540), float64]) {
  %743 = @func_4739() /* ty=(Tensor[(4, 2, 13), float64],) */;
  %744 = cast(%var_4971, dtype="float64") /* ty=Tensor[(540), float64] */;
  %745 = cast(%var_4971, dtype="float64") /* ty=Tensor[(540), float64] */;
  %746 = reshape(%744, newshape=[10, 9, 6]) /* ty=Tensor[(10, 9, 6), float64] */;
  %747 = reshape(%745, newshape=[10, 9, 6]) /* ty=Tensor[(10, 9, 6), float64] */;
  %748 = @func_2505(%746, %747) /* ty=(Tensor[(10, 9, 6), bool], Tensor[(4, 2, 13), float32], Tensor[(5, 14, 16), float32], Tensor[(1, 770), float64], Tensor[(150, 3), int8], Tensor[(4, 2, 13), float32], Tensor[(10, 9, 6), int32], Tensor[(10, 9, 6), int8]) */;
  %749 = %743.0;
  %750 = %748.0;
  (%749, %750, %var_4971)
}

def @func_5679(%var_5678: Tensor[(4, 16, 13), int32]) -> (Tensor[(4, 16, 13), int32],) {
  %754 = fn (%var_5670: Tensor[(4, 16, 13), int32]) -> (Tensor[(4, 16, 13), int32],) {
    %751 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 1, 13), int32] */, dtype="int32") /* ty=Tensor[(4, 1, 13), int32] */;
    %752 = cast(%var_5670, dtype="int32") /* ty=Tensor[(4, 16, 13), int32] */;
    %753 = add(%751, %752) /* ty=Tensor[(4, 16, 13), int32] */;
    (%753,)
  };
  %754(%var_5678) /* ty=(Tensor[(4, 16, 13), int32],) */
}

def @func_1263(%var_1250: Tensor[(1, 16, 6), float32]) -> Tensor[(1, 16, 6), float32] {
  %755 = cast(%var_1250, dtype="float32") /* ty=Tensor[(1, 16, 6), float32] */;
  atanh(%755) /* ty=Tensor[(1, 16, 6), float32] */
}

def @func_2749() -> Tensor[(4, 2, 13), float32] {
  @func_1664() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_2565() -> Tensor[(4, 2, 13), float64] {
  @func_2563() /* ty=Tensor[(4, 2, 13), float64] */
}

def @func_4752() -> Tensor[(4, 2, 13), float32] {
  @func_4750() /* ty=Tensor[(4, 2, 13), float32] */
}

def @func_4853() -> (Tensor[(4, 2, 13), float32], Tensor[(150, 3), uint32], Tensor[(420), float64], Tensor[(450, 1), uint32], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), int32]) {
  %756 = @func_3884() /* ty=(Tensor[(4, 2, 13), float32],) */;
  %757 = cast(meta[relay.Constant][37] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %758 = cast(meta[relay.Constant][38] /* ty=Tensor[(450, 1), uint32] */, dtype="uint32") /* ty=Tensor[(450, 1), uint32] */;
  %759 = reshape(%757, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), float64] */;
  %760 = reshape(%758, newshape=[150, 3]) /* ty=Tensor[(150, 3), uint32] */;
  %761 = @func_4191(%759, %760) /* ty=(Tensor[(10, 14, 3), float64], Tensor[(15, 3, 10), bool], Tensor[(150, 3), uint32]) */;
  %762 = @func_1814() /* ty=(Tensor[(4, 2, 13), float32], Tensor[(4, 2, 13), float32], Tensor[(1120), float32], Tensor[(1, 770), float64], Tensor[(450), int8], Tensor[(4, 2, 13), float64]) */;
  %763 = cast(meta[relay.Constant][40] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %764 = cast(meta[relay.Constant][39] /* ty=Tensor[(770), float64] */, dtype="float64") /* ty=Tensor[(770), float64] */;
  %765 = %761.2;
  %766 = cast(%765, dtype="int8") /* ty=Tensor[(150, 3), int8] */;
  %767 = reshape(%763, newshape=[]) /* ty=uint16 */;
  %768 = reshape(%764, newshape=[770]) /* ty=Tensor[(770), float64] */;
  %769 = reshape(%766, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %770 = @func_2197(%767, %768, %769) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(770), float64], Tensor[(450), int8], Tensor[(7, 2, 13), bool]) */;
  %771 = %770.3;
  %772 = cast(%771, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
  %773 = acos(%772) /* ty=Tensor[(7, 2, 13), float32] */;
  %774 = cast(%773, dtype="int32") /* ty=Tensor[(7, 2, 13), int32] */;
  %775 = cast(meta[relay.Constant][40] /* ty=uint16 */, dtype="int32") /* ty=int32 */;
  %776 = %756.0;
  %777 = %762.4;
  %778 = bitwise_xor(%774, %775) /* ty=Tensor[(7, 2, 13), int32] */;
  (%776, %765, meta[relay.Constant][37] /* ty=Tensor[(420), float64] */, meta[relay.Constant][38] /* ty=Tensor[(450, 1), uint32] */, meta[relay.Constant][39] /* ty=Tensor[(770), float64] */, %777, %778)
}

def @func_2563() -> Tensor[(4, 2, 13), float64] {
  %779 = @func_1664() /* ty=Tensor[(4, 2, 13), float32] */;
  %780 = cast(%779, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  cosh(%780) /* ty=Tensor[(4, 2, 13), float64] */
}

def @func_1028(%var_1026: Tensor[(11, 1, 13), float64]) -> (Tensor[(11, 1, 13), float64], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) {
  @func_1025(%var_1026) /* ty=(Tensor[(11, 1, 13), float64], Tensor[(5, 14, 16), float32], Tensor[(1120), float32]) */
}

def @func_1574(%var_1565: Tensor[(8, 2, 7), int16], %var_1566: Tensor[(8, 2, 7), int16]) -> (Tensor[(8, 2, 7), int16],) {
  %781 = cast(%var_1566, dtype="int16") /* ty=Tensor[(8, 2, 7), int16] */;
  %782 = shape_of(%var_1565, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%var_1565, dtype="int16") /* ty=Tensor[(8, 2, 7), int16] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %785 = subtract(%783, %784) /* ty=Tensor[(8, 2, 7), int16] */;
  (%785,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

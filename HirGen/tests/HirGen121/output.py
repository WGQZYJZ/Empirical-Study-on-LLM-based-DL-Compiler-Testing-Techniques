import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_32 = relay.var("var_32", dtype = "float32", shape = (5, 14, 16))#candidate|32|(5, 14, 16)|var|float32
uop_33 = relay.cosh(var_32.astype('float32')) # shape=(5, 14, 16)
uop_38 = relay.sigmoid(uop_33.astype('float32')) # shape=(5, 14, 16)
uop_41 = relay.exp(uop_38.astype('float32')) # shape=(5, 14, 16)
uop_45 = relay.sin(uop_38.astype('float32')) # shape=(5, 14, 16)
output = relay.Tuple([uop_41,uop_45,])
output2 = relay.Tuple([uop_41,uop_45,])
func_51 = relay.Function([var_32,], output)
mod['func_51'] = func_51
mod = relay.transform.InferType()(mod)
mutated_mod['func_51'] = func_51
mutated_mod = relay.transform.InferType()(mutated_mod)
var_52 = relay.var("var_52", dtype = "float32", shape = (5, 14, 16))#candidate|52|(5, 14, 16)|var|float32
func_51_call = mutated_mod.get_global_var('func_51')
call_53 = func_51_call(var_52)
output = call_53
func_54 = relay.Function([var_52], output)
mutated_mod['func_54'] = func_54
mutated_mod = relay.transform.InferType()(mutated_mod)
const_529 = relay.const(-2, dtype = "int8")#candidate|529|()|const|int8
var_530 = relay.var("var_530", dtype = "int8", shape = (15, 2, 15))#candidate|530|(15, 2, 15)|var|int8
bop_531 = relay.bitwise_and(const_529.astype('int8'), var_530.astype('int8')) # shape=(15, 2, 15)
func_51_call = mod.get_global_var('func_51')
func_54_call = mutated_mod.get_global_var('func_54')
var_539 = relay.var("var_539", dtype = "float32", shape = (1120, 1))#candidate|539|(1120, 1)|var|float32
call_538 = relay.TupleGetItem(func_51_call(relay.reshape(var_539.astype('float32'), [5, 14, 16])), 1)
call_540 = relay.TupleGetItem(func_54_call(relay.reshape(var_539.astype('float32'), [5, 14, 16])), 1)
bop_541 = relay.right_shift(var_539.astype('int16'), const_529.astype('int16')) # shape=(1120, 1)
uop_547 = relay.asin(bop_541.astype('float32')) # shape=(1120, 1)
bop_556 = relay.mod(uop_547.astype('float64'), relay.reshape(bop_541.astype('float64'), relay.shape_of(uop_547))) # shape=(1120, 1)
bop_567 = relay.multiply(bop_556.astype('float32'), relay.reshape(bop_541.astype('float32'), relay.shape_of(bop_556))) # shape=(1120, 1)
output = relay.Tuple([bop_531,call_538,bop_567,])
output2 = relay.Tuple([bop_531,call_540,bop_567,])
func_575 = relay.Function([var_530,var_539,], output)
mod['func_575'] = func_575
mod = relay.transform.InferType()(mod)
mutated_mod['func_575'] = func_575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_575_call = mutated_mod.get_global_var('func_575')
var_577 = relay.var("var_577", dtype = "int8", shape = (15, 2, 15))#candidate|577|(15, 2, 15)|var|int8
var_578 = relay.var("var_578", dtype = "float32", shape = (1120, 1))#candidate|578|(1120, 1)|var|float32
call_576 = func_575_call(var_577,var_578,)
output = call_576
func_579 = relay.Function([var_577,var_578,], output)
mutated_mod['func_579'] = func_579
mutated_mod = relay.transform.InferType()(mutated_mod)
var_847 = relay.var("var_847", dtype = "float32", shape = (1, 11, 5))#candidate|847|(1, 11, 5)|var|float32
uop_848 = relay.asin(var_847.astype('float32')) # shape=(1, 11, 5)
output = uop_848
output2 = uop_848
func_851 = relay.Function([var_847,], output)
mod['func_851'] = func_851
mod = relay.transform.InferType()(mod)
var_852 = relay.var("var_852", dtype = "float32", shape = (1, 11, 5))#candidate|852|(1, 11, 5)|var|float32
output = func_851(var_852)
func_853 = relay.Function([var_852], output)
mutated_mod['func_853'] = func_853
mutated_mod = relay.transform.InferType()(mutated_mod)
var_934 = relay.var("var_934", dtype = "int8", shape = (4, 12, 10))#candidate|934|(4, 12, 10)|var|int8
var_935 = relay.var("var_935", dtype = "int8", shape = (4, 12, 10))#candidate|935|(4, 12, 10)|var|int8
bop_936 = relay.bitwise_xor(var_934.astype('int8'), relay.reshape(var_935.astype('int8'), relay.shape_of(var_934))) # shape=(4, 12, 10)
func_51_call = mod.get_global_var('func_51')
func_54_call = mutated_mod.get_global_var('func_54')
var_944 = relay.var("var_944", dtype = "float32", shape = (1120,))#candidate|944|(1120,)|var|float32
call_943 = relay.TupleGetItem(func_51_call(relay.reshape(var_944.astype('float32'), [5, 14, 16])), 1)
call_945 = relay.TupleGetItem(func_54_call(relay.reshape(var_944.astype('float32'), [5, 14, 16])), 1)
output = relay.Tuple([bop_936,call_943,var_944,])
output2 = relay.Tuple([bop_936,call_945,var_944,])
func_948 = relay.Function([var_934,var_935,var_944,], output)
mod['func_948'] = func_948
mod = relay.transform.InferType()(mod)
mutated_mod['func_948'] = func_948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_948_call = mutated_mod.get_global_var('func_948')
var_950 = relay.var("var_950", dtype = "int8", shape = (4, 12, 10))#candidate|950|(4, 12, 10)|var|int8
var_951 = relay.var("var_951", dtype = "int8", shape = (4, 12, 10))#candidate|951|(4, 12, 10)|var|int8
var_952 = relay.var("var_952", dtype = "float32", shape = (1120,))#candidate|952|(1120,)|var|float32
call_949 = func_948_call(var_950,var_951,var_952,)
output = call_949
func_953 = relay.Function([var_950,var_951,var_952,], output)
mutated_mod['func_953'] = func_953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1009 = relay.var("var_1009", dtype = "float64", shape = (11, 1, 13))#candidate|1009|(11, 1, 13)|var|float64
uop_1010 = relay.rsqrt(var_1009.astype('float64')) # shape=(11, 1, 13)
func_51_call = mod.get_global_var('func_51')
func_54_call = mutated_mod.get_global_var('func_54')
const_1014 = relay.const([-6.696150,-7.851880,0.310652,9.227726,6.337442,-6.061594,1.997883,0.799638,-4.361463,-3.995621,3.867071,-3.209729,5.110220,-8.160806,5.610710,-6.306352,-9.959931,7.149976,-7.174555,4.172119,1.640458,8.461688,0.064694,-6.214881,3.352826,1.064430,5.464113,3.257387,-8.352547,7.850657,-1.451485,6.069129,-9.104494,2.184828,-8.760433,2.511622,-6.737110,-6.327173,5.341786,6.291449,9.138319,-2.317838,-5.307932,8.999902,6.545326,-4.664633,-9.829954,4.246190,2.390432,5.353502,0.189139,3.921202,9.403369,9.445400,-4.961121,-9.043023,-1.497996,9.027634,-0.970346,9.228078,6.887848,-5.651185,-2.914867,4.525246,-8.256035,0.219399,8.902490,4.242201,-0.245441,4.768696,0.733957,-9.474672,-7.228022,-0.243966,-1.438209,4.232696,-0.699676,6.734877,7.368487,-1.136095,3.480184,2.626527,-8.982196,-3.985930,-9.591361,-1.688576,3.880692,9.206489,-5.771323,-3.857859,0.595012,-1.937624,5.802775,-4.535552,-8.859516,-1.993102,-9.389997,-2.836637,-7.175633,8.497619,7.823403,-4.745079,-5.360886,-2.127704,-3.077850,8.458180,-8.480832,9.942990,4.820347,-4.721441,-4.745482,-8.272917,3.426376,1.434571,6.560969,-6.619568,-2.665396,9.717098,-6.864169,1.125086,-3.379111,-4.915608,9.809315,5.456662,-0.319273,-4.632675,-8.931564,2.739242,-2.746965,-7.729633,-8.273344,-7.504331,0.940649,1.150965,3.126013,-4.730713,-2.470594,7.734964,-7.003105,-5.489539,-7.240693,5.315601,9.118987,-8.251808,-1.007586,3.091067,2.994719,3.464545,8.953414,-1.686581,-9.944708,9.425269,-5.728169,-9.248360,6.166673,6.049543,7.689840,-3.670812,2.435087,-5.640965,1.915538,-2.013325,5.143616,-5.307563,6.446832,-9.285536,9.525486,-6.478732,-1.245398,7.626948,1.429474,2.063089,6.575510,-4.939156,1.355252,-4.445497,-1.110439,9.695522,2.309424,5.856284,5.890708,-6.376685,1.930752,-4.850303,8.099315,6.432446,-2.593830,4.157460,-7.775775,-9.758334,6.902409,1.849540,-5.937729,7.751910,-9.158796,-9.603879,-3.474464,-8.421220,2.736254,8.116707,-8.460011,0.190969,-8.250510,4.992472,-7.270296,-2.376763,-9.998465,-8.135165,-4.011476,-6.885389,-8.429587,-2.926195,9.461184,-1.061259,4.641171,4.280192,-8.707104,-7.282288,-9.197841,8.888610,-3.948374,-2.445561,7.894532,6.602402,-6.355284,-2.712347,-4.191704,-3.319936,-3.040508,-9.402393,-9.906808,9.285135,-1.518756,4.519565,9.066066,-9.288505,-4.567444,8.460559,1.146871,-5.876509,-4.552039,-1.022102,4.170441,0.344452,0.209650,-8.038945,7.230338,-4.670840,9.685510,-0.547652,-7.589860,-2.505634,9.252876,7.017038,-3.024326,5.672478,-1.690054,2.188744,-8.664332,1.785938,-9.902516,9.986143,-0.321135,-8.953960,-4.091088,-1.347948,2.275401,5.387940,-2.943120,2.205115,-5.120930,-0.106748,-2.496455,1.528316,-4.035404,-7.295086,-5.489939,-4.659810,3.928358,-0.575121,-3.358414,-8.880083,-0.483796,-0.693229,-9.403628,8.177098,-4.934253,-8.568105,-4.726787,8.457209,-7.259979,7.732739,-2.878094,2.820391,-5.009238,8.729491,9.547161,-2.769691,7.735747,-8.819250,-1.355667,2.220363,7.090244,7.346819,6.238872,-0.136965,-0.232877,-3.987751,-0.194237,-8.782771,7.279947,3.768276,-5.792816,-9.743748,-8.786491,5.967313,5.799656,-8.751336,-6.618191,-0.739260,-8.160883,-2.401471,-0.843363,7.600232,-5.635570,-2.858000,4.487999,-1.314732,0.875593,-1.351628,-4.777015,0.428162,-5.276112,-3.560446,0.020249,-9.825552,-0.837174,6.451996,5.222046,6.752868,-8.316623,6.819062,5.785621,4.847375,3.520774,-6.515165,-2.305014,6.173100,2.492521,1.503375,-6.049105,4.734289,-9.261673,5.318585,7.548929,-8.541065,-2.767324,-7.588326,3.544693,8.357284,5.346113,-6.597772,4.607287,-4.671351,-4.435517,6.856243,9.567146,8.191023,2.407094,4.109144,8.840850,2.592352,6.400260,8.830891,3.010899,8.750368,-9.522003,-1.321764,6.003682,1.838039,0.750442,-4.616205,3.623308,-0.018102,3.399621,3.111039,1.307699,-5.454636,-4.698892,-2.013488,-6.822024,-5.252072,3.854340,-6.100674,9.811370,-9.973686,3.012344,3.136004,-2.688958,5.440456,2.573122,-2.536647,2.017706,-2.645268,-2.402290,-1.273121,-6.399516,-9.598531,1.958745,2.843494,-3.597769,6.067739,-7.209844,-7.638418,7.036456,-8.611512,-3.655383,5.323010,-0.856110,-7.946280,-5.975548,9.743891,2.775932,2.419142,3.084051,-1.952521,-3.184572,6.027738,-3.935134,-8.994602,5.589016,8.277619,3.645627,-9.031837,-3.486498,1.511911,1.261036,2.133349,-4.949887,8.480686,1.512745,1.585511,-0.459352,4.732893,-3.386083,-2.651535,-4.185557,6.464741,-5.257816,4.615313,-6.043091,-5.561396,-1.806383,3.377978,-0.711211,-4.737306,-7.457335,8.378062,-6.566934,3.026819,-9.988428,-2.733057,2.202744,9.761042,0.331332,-0.097569,4.207709,5.540609,4.694518,-9.290917,-5.952920,9.164249,-1.121659,2.730725,9.182713,2.010560,-2.647957,6.913178,1.104536,4.723777,5.118242,1.490285,-1.032270,-5.208871,7.862643,6.211227,3.422989,-9.300976,-2.222914,-0.428082,-2.940711,3.497208,-5.578049,0.442958,1.464017,-8.499923,-3.296607,3.870986,1.432857,-6.244645,-9.739748,-7.922714,6.792492,4.942465,-8.640039,8.752934,6.880327,3.694387,1.748270,-4.850507,0.417843,-8.396499,-9.800813,7.669325,3.277578,-8.705529,5.891921,-6.459408,0.380301,-0.283028,3.959605,-7.825196,2.049886,-2.425742,-6.402253,6.349171,-2.046825,-1.164304,-2.863684,-1.181833,3.039114,3.137740,3.250801,0.219237,-0.167967,-8.701632,-2.014128,-1.732486,-9.610595,-5.113146,2.715294,-2.980598,1.420164,-2.830224,-8.240966,-0.554463,0.731643,7.561024,0.493024,9.850078,-2.261594,9.529474,1.914016,-9.759603,6.504039,-3.936632,9.720386,-2.649031,5.760502,-4.404393,3.189300,-2.906654,-4.020921,0.476820,-8.335954,4.146474,-5.184529,2.597422,0.777805,1.666513,6.657861,8.222477,-3.603965,5.876208,9.474080,-6.843577,-4.429665,4.380114,-4.255572,-6.231449,-9.982029,0.804825,3.886838,-0.257559,6.608536,8.258568,6.453863,2.630231,-7.606843,-1.502495,-0.552393,-4.425721,7.944271,1.778887,-5.099423,-1.913250,-1.805764,2.893502,4.950593,-9.946178,5.197808,1.566194,-6.214932,-5.427868,5.649295,-6.300962,3.911093,0.406025,0.827087,-8.687224,-9.922063,-6.993603,0.605986,-7.771475,0.702458,4.295978,-9.531091,2.638917,1.946594,1.646330,-2.923255,-8.824592,-4.548900,-4.912403,-0.840967,9.362258,-0.324207,0.512681,5.150167,-9.244275,-5.623535,7.164428,-8.951053,-7.659253,9.283495,-9.061920,2.408382,7.727000,-8.715676,3.287987,5.966713,-7.755338,-2.804608,4.484230,4.134732,-4.306769,8.034738,5.756214,6.484370,8.084568,3.733676,-9.180408,-6.876061,9.210874,-7.598585,7.442619,8.211128,3.591216,-8.400017,-7.701358,-1.533782,6.031350,-6.618930,7.835332,-4.391288,-3.757355,-3.970911,5.495249,8.196736,-6.232825,1.086230,3.561729,8.675559,9.959585,6.409288,4.163245,-0.950359,6.214324,7.137638,-5.700269,3.039299,-5.991661,-0.312836,-8.067893,-5.570136,1.992531,-2.944068,-9.980895,9.479856,9.208885,4.686158,-1.736220,-1.709295,5.473726,-6.814746,5.395290,-3.780394,4.225666,1.667324,-1.322010,-6.312339,-9.671620,-9.149414,-7.528642,-5.444729,-1.245053,7.040341,7.270405,-8.471431,2.503711,6.287938,-6.191784,-9.523351,-5.920544,4.009044,5.534479,-3.422183,1.609585,0.399107,-1.087906,0.854963,3.218029,7.507625,-9.617361,2.235445,-4.920065,0.894232,9.224266,-4.367921,0.628746,-5.617453,-1.379337,-3.988112,-9.089367,0.202980,5.874514,6.856784,0.606159,-5.018077,2.843083,-9.197103,-5.847807,-5.173442,8.127227,3.990412,0.045289,-6.274300,-2.409089,8.674026,-2.660551,5.132872,5.436766,-4.958439,0.148558,0.275576,5.730527,-0.615446,8.550002,9.858431,7.998831,8.453033,-8.485147,-5.965658,1.771713,8.984891,5.309757,9.149698,-0.718859,6.445387,-8.159598,-5.101796,-8.943552,6.211044,5.363768,6.689337,8.562356,5.595630,-3.645113,-9.834096,1.472552,0.643900,-6.051106,-7.404207,-3.062637,-7.246569,-1.989895,-0.283007,3.418168,-8.237457,-1.798340,-3.197991,-9.610324,-5.446739,3.869523,-9.794886,-2.446817,2.400685,1.096630,8.374839,-8.364672,-6.187389,-6.385842,3.484269,0.866670,3.959395,0.399711,0.736067,6.414823,-0.985311,6.485501,-4.700826,-1.746659,-7.061276,5.337699,-0.819427,-2.995850,-3.630753,4.539151,-9.957319,1.755446,3.445011,4.747328,-7.542634,-3.136924,-5.709647,-2.177620,1.147547,-3.274094,-7.897988,-0.710966,8.533475,6.401332,2.492027,-9.202813,9.126851,1.854444,-2.507174,-0.948067,-7.517963,-0.008964,-1.796331,1.430730,2.576638,7.665010,6.434467,-9.616183,-0.015744,-2.191668,6.070660,-8.568895,-6.512364,8.913570,-0.519243,5.832710,-2.673297,0.332967,-1.717734,-4.171393,0.642641,4.787973,5.631783,6.704249,-2.928379,-0.934876,-5.483251,-9.754313,-7.308311,-2.719922,2.724696,9.204676,8.633346,-3.432995,2.394567,1.211107,6.062325,3.265063,2.006225,-0.149029,-3.207015,6.917195,9.877942,5.858041,3.172444,8.469187,-2.732991,-1.845137,4.218089,2.726817,4.508804,8.526697,-5.710062,-4.531875,-4.982773,0.486165,4.668594,0.783033,-6.189940,-6.522912,-6.437804,5.887211,4.443392,-9.870821,-0.197651,9.869962,9.111761,-3.062023,-2.427107,9.040010,-8.918282,2.881015,3.169295,-6.196067,-3.391994,3.735966,-6.388317,5.030098,-4.730985,3.783225,6.721448,-7.453648,4.775567,-7.999666,4.993711,-4.699826,-8.259128,6.232688,1.457650,-0.786677,2.030868,-3.257698,-6.609444,2.706817,-6.068983,2.986043,4.389179,-3.613158,1.789915,-7.497360,-3.972668,-1.000560,0.448795,-6.639846,6.329972,-8.130310,-6.387783,7.778753,-7.758393,7.210135,9.853410,-1.697440,-3.236765,5.457588,-0.192904,9.404386,4.412187,1.940441,6.991347,0.590072,-3.116623,3.898859,-7.650755,2.729170,4.967625,0.232966,-0.104410,-3.284781,-5.892885,-3.891284,6.168376,5.648030,3.062843,8.259789,-9.727929,7.228692,-8.752644,4.942999,8.367638,8.858923,0.556831,2.963208,6.375243,9.660002,-0.369616,-4.715402,0.861433,-0.227780,-0.336601,5.240518,-5.705960,-8.515365,-2.676003,9.870807,-0.472581,-9.156952,-9.657295,8.510171,1.676420,3.394406,-7.143502,-9.759170,-0.881244,-3.571803,-0.365917,9.082363,0.291484,-4.465240,-7.801461,5.476430,-3.794340,-9.351687,-6.453680,-0.721909,-9.556949,5.833121,2.335385,-6.586184,-1.976055,3.752431,4.742320,1.597375,-3.718254,-2.992304,4.836878,6.168256,0.177997,-3.803962,-9.978543,-7.940853,7.618230,1.315372,2.588881,-8.781437,9.083323,-2.290286,-9.152887,5.696472,0.055279,9.211410,9.426590,8.159674,2.020364,-2.661938,-1.883868,-9.184029,-6.007123,0.308839,-6.255391,1.959372,8.643668,-2.162987,4.290150,-6.019100,0.814209,-7.698925,-4.668214,3.725001,2.085610,9.004663,-7.330371,2.991207,-7.788151,-6.684228,-4.481194,-4.895566,-6.442105,-6.777363,-4.530916,-7.048388,-6.915167,-4.817933,-8.801745,-7.212743,-1.034816,-8.199319,-4.563618,5.017441,-5.892669,8.245719,-8.924252,-5.429366,-7.708326,-5.882728,5.609346,-5.002958,4.222342,-0.189372,-1.688751,-9.713913,0.296738,-6.723770,-8.705146,-3.295724,8.604169,-2.107904,9.854753,-1.028147,7.811817,-5.227704,-8.792725,-1.804299,8.641167,5.585388,-7.641289,-0.967002,-7.186279,0.880961,3.902927,1.618539,6.294630,-4.736544,-2.057645,-1.794861,2.318881,-3.776706,8.210890,-9.709176,-4.791722,-6.149205,1.900764,-0.071480], dtype = "float32")#candidate|1014|(1120,)|const|float32
call_1013 = relay.TupleGetItem(func_51_call(relay.reshape(const_1014.astype('float32'), [5, 14, 16])), 1)
call_1015 = relay.TupleGetItem(func_54_call(relay.reshape(const_1014.astype('float32'), [5, 14, 16])), 1)
output = relay.Tuple([uop_1010,call_1013,const_1014,])
output2 = relay.Tuple([uop_1010,call_1015,const_1014,])
func_1025 = relay.Function([var_1009,], output)
mod['func_1025'] = func_1025
mod = relay.transform.InferType()(mod)
mutated_mod['func_1025'] = func_1025
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1026 = relay.var("var_1026", dtype = "float64", shape = (11, 1, 13))#candidate|1026|(11, 1, 13)|var|float64
func_1025_call = mutated_mod.get_global_var('func_1025')
call_1027 = func_1025_call(var_1026)
output = call_1027
func_1028 = relay.Function([var_1026], output)
mutated_mod['func_1028'] = func_1028
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1209 = relay.var("var_1209", dtype = "float64", shape = (12, 10, 1))#candidate|1209|(12, 10, 1)|var|float64
var_1210 = relay.var("var_1210", dtype = "float64", shape = (12, 10, 10))#candidate|1210|(12, 10, 10)|var|float64
bop_1211 = relay.greater(var_1209.astype('bool'), var_1210.astype('bool')) # shape=(12, 10, 10)
output = relay.Tuple([bop_1211,])
output2 = relay.Tuple([bop_1211,])
func_1223 = relay.Function([var_1209,var_1210,], output)
mod['func_1223'] = func_1223
mod = relay.transform.InferType()(mod)
mutated_mod['func_1223'] = func_1223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1223_call = mutated_mod.get_global_var('func_1223')
var_1225 = relay.var("var_1225", dtype = "float64", shape = (12, 10, 1))#candidate|1225|(12, 10, 1)|var|float64
var_1226 = relay.var("var_1226", dtype = "float64", shape = (12, 10, 10))#candidate|1226|(12, 10, 10)|var|float64
call_1224 = func_1223_call(var_1225,var_1226,)
output = call_1224
func_1227 = relay.Function([var_1225,var_1226,], output)
mutated_mod['func_1227'] = func_1227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1250 = relay.var("var_1250", dtype = "float32", shape = (1, 16, 6))#candidate|1250|(1, 16, 6)|var|float32
uop_1251 = relay.atanh(var_1250.astype('float32')) # shape=(1, 16, 6)
output = uop_1251
output2 = uop_1251
func_1263 = relay.Function([var_1250,], output)
mod['func_1263'] = func_1263
mod = relay.transform.InferType()(mod)
mutated_mod['func_1263'] = func_1263
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1264 = relay.var("var_1264", dtype = "float32", shape = (1, 16, 6))#candidate|1264|(1, 16, 6)|var|float32
func_1263_call = mutated_mod.get_global_var('func_1263')
call_1265 = func_1263_call(var_1264)
output = call_1265
func_1266 = relay.Function([var_1264], output)
mutated_mod['func_1266'] = func_1266
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1374 = relay.const(-6.232178, dtype = "float32")#candidate|1374|()|const|float32
const_1375 = relay.const([[[-4.683118,-0.164098,9.747041,-6.714177,-8.484614,9.746871,8.044915,8.223145,-2.689420,2.602747,-0.841639,-2.341779,8.881724],[3.709855,-9.645712,5.283373,0.222510,7.650443,-8.103824,3.649831,9.386376,-7.054062,-2.014768,-5.486560,-0.763164,3.266055]],[[2.273309,-5.806023,-9.705964,4.676130,-7.202032,-6.546386,-0.794706,-2.445085,0.656687,8.125384,-5.908911,4.207428,5.866861],[-2.324180,-3.483817,6.800069,7.862163,-2.663525,6.076847,-3.424342,-7.421765,7.001363,8.223084,7.495513,-7.974033,2.133718]],[[-0.333622,7.950282,-9.951975,-3.313871,-8.747529,-2.495663,4.652679,4.164626,-9.888719,-3.613495,-3.744414,-4.896567,-3.631500],[7.409522,-2.718775,3.575761,8.355505,1.178272,-3.821011,-5.197636,3.994726,1.935448,5.415489,4.294016,-9.743957,-8.149648]],[[-7.601697,-7.928064,-7.171216,6.779127,3.136251,-7.016559,3.155143,-7.419683,7.157174,-2.702491,-0.523741,7.027299,9.729381],[0.345351,-3.516502,-7.863005,-8.203222,8.274235,-6.737599,-3.646017,-9.938706,7.455160,-7.147706,2.739802,-3.475346,-1.034352]]], dtype = "float32")#candidate|1375|(4, 2, 13)|const|float32
bop_1376 = relay.mod(const_1374.astype('float32'), const_1375.astype('float32')) # shape=(4, 2, 13)
output = relay.Tuple([bop_1376,])
output2 = relay.Tuple([bop_1376,])
func_1383 = relay.Function([], output)
mod['func_1383'] = func_1383
mod = relay.transform.InferType()(mod)
output = func_1383()
func_1384 = relay.Function([], output)
mutated_mod['func_1384'] = func_1384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1383_call = mod.get_global_var('func_1383')
func_1384_call = mutated_mod.get_global_var('func_1384')
call_1418 = relay.TupleGetItem(func_1383_call(), 0)
call_1419 = relay.TupleGetItem(func_1384_call(), 0)
output = relay.Tuple([call_1418,])
output2 = relay.Tuple([call_1419,])
func_1426 = relay.Function([], output)
mod['func_1426'] = func_1426
mod = relay.transform.InferType()(mod)
output = func_1426()
func_1427 = relay.Function([], output)
mutated_mod['func_1427'] = func_1427
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1433 = relay.var("var_1433", dtype = "float64", shape = (11, 10, 7))#candidate|1433|(11, 10, 7)|var|float64
uop_1434 = relay.sinh(var_1433.astype('float64')) # shape=(11, 10, 7)
uop_1436 = relay.rsqrt(var_1433.astype('float32')) # shape=(11, 10, 7)
func_575_call = mod.get_global_var('func_575')
func_579_call = mutated_mod.get_global_var('func_579')
var_1440 = relay.var("var_1440", dtype = "int8", shape = (1, 450))#candidate|1440|(1, 450)|var|int8
const_1441 = relay.const([0.293761,-4.852844,-0.639623,3.071889,-5.325618,1.196243,2.691704,5.351837,-2.600399,-2.526327,-1.012631,-6.998688,-4.713250,-4.934157,3.016852,-6.571824,-6.402782,-4.721543,-6.435093,-4.272844,0.674206,5.485894,-2.861644,6.418867,-2.973174,4.590764,5.512840,0.830346,-8.631708,5.230717,9.413824,-8.643028,-9.635427,2.298012,3.123494,7.881548,1.201486,1.445207,-0.112481,-2.154208,3.970105,0.848049,-0.094079,-0.406446,-6.226349,-7.633863,-2.424855,8.710894,4.747834,3.147049,-3.046880,-8.807981,-9.229461,-6.372003,-0.782988,5.062993,-0.558594,-7.065268,3.747503,1.924544,-0.660311,-0.319371,1.364806,-4.690480,-0.069190,8.284105,-5.852737,-8.918522,7.558703,4.109858,-6.856186,4.274807,6.712511,4.371857,7.754089,-1.686525,-3.396550,-8.006301,-3.782101,7.910647,-0.527597,-8.106465,-8.183043,8.362515,3.605135,5.002117,1.270465,-4.767862,3.588517,-6.109372,7.433820,-0.809341,6.311725,3.331717,8.084695,-1.701846,6.694145,6.037320,8.804635,9.534084,2.786285,-2.512607,-1.539079,-6.495006,-0.718649,-6.601353,4.024128,-4.059335,2.406271,6.838756,-4.163644,-3.362637,-6.351941,8.989793,5.205755,-8.537533,1.316486,1.091035,1.641103,1.509587,-8.831520,4.207762,9.428237,-7.039974,2.142921,8.272361,7.930395,3.491043,5.603487,-6.554386,-9.338601,-2.426710,8.405422,8.450891,3.852584,9.795437,-9.369162,6.465614,-8.095929,-6.781424,9.592277,9.609623,4.112110,-8.430279,3.778756,9.840227,4.832692,5.507725,-9.308934,-0.114930,-7.822305,1.613369,-3.292765,-4.905656,6.229059,1.437579,-1.641634,9.505272,1.225877,1.589311,-6.829965,-7.259832,-8.544056,8.716676,-5.459668,-1.933882,3.810336,9.127328,-3.342578,-5.021876,-3.255097,3.182868,-0.607868,0.266239,-1.124610,-7.260035,3.685407,8.359329,-8.413238,-6.641747,-6.692316,6.502011,2.950584,6.479959,-3.197958,4.931232,3.090227,-7.101322,4.611230,-9.882643,-9.198544,3.834749,6.159408,3.865490,6.903557,0.021030,-2.467588,4.617505,5.121587,7.687249,-3.853724,9.605235,5.661985,2.464382,5.858628,0.239671,-0.867562,2.311028,2.457322,4.114685,7.630725,-2.495678,-1.214633,0.997794,-9.494817,8.989280,6.238121,2.108870,-2.309168,5.850519,-6.248169,0.680801,5.369300,-7.016087,2.468382,6.930598,-3.348938,-6.765685,3.243188,8.537297,5.113333,-0.191529,3.933634,2.399677,-1.440146,1.596009,1.487612,0.802994,5.967608,1.152849,-7.233600,6.125889,-9.844745,2.463810,3.338984,-0.763577,1.566049,1.650828,-2.724218,3.718265,-8.927493,0.638040,0.313826,-5.060484,-1.019708,-0.297553,7.148100,-2.399238,6.700991,0.846288,-5.548151,1.920288,8.154189,-1.075000,-5.899843,-1.545978,-7.773143,-0.737714,9.459937,-0.675678,5.519305,-1.789375,9.308351,-2.559287,-1.416631,5.731773,9.270404,-5.074707,-5.084362,-6.537698,-5.734675,2.110406,-7.680027,7.962193,-1.595257,-4.933320,-7.228679,-1.353128,6.155663,-8.604196,3.515588,-1.816010,2.304954,5.081219,2.402699,-3.795975,-8.697554,-6.843184,4.195548,-3.618191,8.715538,3.153569,3.323045,3.900110,9.934983,-7.060002,-5.358483,3.544388,-9.617444,0.056915,3.286720,3.914768,9.816645,-9.308586,1.236775,-9.063465,1.700483,-9.990608,-6.493075,8.575943,-5.390376,-6.291476,-2.105914,-5.887448,-3.131269,-2.130350,9.584643,8.836424,3.353806,9.021214,3.662767,-7.190774,-9.487154,0.475063,-1.522321,-6.123795,6.899405,0.551471,-7.805364,-0.754713,3.013160,-5.743723,-0.410465,2.080316,-3.266984,9.504680,4.176638,-4.784819,-3.438065,-9.880633,2.680558,8.303398,8.558857,-8.445578,-2.004835,-6.532317,-3.770416,-9.425532,-2.327930,-5.697037,6.827669,-0.240257,4.037154,-1.907203,0.819369,2.987117,3.435854,4.202755,6.861705,-0.487553,-2.727344,-3.006652,-8.480032,6.456666,-4.355588,2.399057,7.115204,-5.481409,-5.074778,4.985093,6.427184,-0.127967,4.883068,8.702929,-8.096347,6.432810,-5.547668,5.538008,-0.243558,-7.122915,-5.255647,-7.858703,4.015521,6.514988,9.659780,0.226962,4.309060,4.681875,6.001711,2.321752,8.397253,-1.854229,-5.589818,-0.970696,6.308097,-8.151563,-3.833179,4.076288,4.191643,4.466535,9.701321,-4.343244,9.386205,-2.283228,-5.301690,-6.635414,-1.774637,-6.634440,-5.790833,2.606873,0.946040,8.192054,8.090498,8.724799,3.255822,6.664817,-0.352048,6.543257,-1.786048,-0.651080,-7.416180,-0.423696,-7.978310,8.313050,2.522967,-6.277970,-2.109354,-0.943411,-9.084889,7.260541,-2.602453,3.485639,-4.705087,-2.457172,-2.143117,4.157371,7.250878,9.576524,-6.728846,-4.168147,4.556680,-1.988407,7.902445,0.910362,1.682758,1.132680,-0.770987,-7.582062,-7.635827,4.627668,7.570609,1.081193,-1.483772,-1.698856,0.639482,-7.522215,9.723642,9.989659,9.139601,3.792262,4.818543,-0.908467,2.529434,-7.221107,-6.777552,-9.674088,-9.660762,-2.500952,-2.092585,-1.238130,-5.614773,-8.839016,3.997116,-6.368937,0.498520,2.787110,-6.162219,-8.098909,-8.514512,9.215867,-7.803233,9.004030,1.038940,6.858756,-4.990488,-1.845666,-6.186017,9.999700,-8.141648,-1.168234,5.664021,-6.514875,9.782930,5.982942,9.810379,-3.048200,-3.112887,-6.886142,-9.542718,8.416165,5.047272,8.163178,-0.224675,-5.154447,-3.041018,-4.558219,-2.057161,2.141036,5.934163,-3.927258,-6.208304,-7.482833,-8.292204,-1.015775,-0.798167,0.787155,3.386485,2.263777,9.909537,-6.933614,-2.318682,9.432286,9.980768,1.786923,7.400507,2.097915,-9.145661,-5.290010,9.106168,5.198217,-3.585148,3.421895,8.238369,-1.438760,-0.785310,-9.754301,1.355282,-9.509352,0.829510,-3.244626,5.260000,-0.951618,8.237070,-7.635094,4.882897,0.360301,-6.250372,-9.539879,1.753291,2.984838,5.539789,5.349234,9.543667,-3.491686,9.556535,-7.411355,-9.414781,-3.836452,5.072146,-0.428377,6.615367,2.944126,0.555914,7.871724,-6.060797,-5.731053,0.243964,-3.421871,5.477652,1.449136,3.298354,6.776710,-6.715267,-8.351717,-2.425977,-5.407465,-6.757832,-1.161890,7.059501,-4.244247,-7.185719,-5.131052,-3.480001,-3.562282,1.606524,-7.947704,7.864951,-3.175651,-5.176613,-9.191562,-7.030925,-2.528747,-8.958780,-0.996267,-1.592093,5.794825,4.704484,-5.145454,-6.885950,-6.396149,-3.469835,4.781343,-9.690664,3.274488,-5.586359,-1.702452,7.460307,9.852925,7.343049,6.543954,-5.172740,-1.998540,-9.231079,-2.601125,5.141558,-9.382821,0.595575,-9.869055,-9.106923,-1.848317,7.587245,3.179616,3.114262,-3.698521,-9.463210,2.930235,-3.573805,-8.991887,-3.734798,5.521006,9.762042,-5.048673,0.981778,7.352471,-1.564551,-4.847554,-3.528034,-9.043935,-4.654692,-6.567432,6.338897,-0.183862,8.359401,-5.007295,4.099290,5.713943,-7.843359,4.837439,-5.221257,7.497668,0.398370,-6.304939,3.224263,3.044678,0.879598,-2.555067,3.795953,-5.933170,1.285379,0.076304,7.448854,-0.575254,-9.950475,4.271495,-6.755404,1.926835,5.626576,4.925355,6.319079,-9.299841,-6.479985,6.076643,7.812314,-9.661315,-8.800847,0.968798,-0.352667,1.686849,-5.219836,-7.429049,5.840994,-9.965091,3.090611,6.833445,-4.166921,-7.324854,-4.144857,4.863409,7.581938,5.493546,2.603502,5.508189,-9.126351,-7.142809,-6.164763,8.802795,-1.603795,-5.143532,3.157676,-0.762255,5.574615,-4.947266,-3.439928,-2.936692,1.627626,-5.234192,-7.663057,-5.027545,-5.816646,4.249698,6.028408,0.372904,-0.358823,-8.456919,0.844409,-3.168529,4.437619,5.061468,-1.768313,8.214382,8.418371,-3.605619,-8.093242,-0.281113,9.336233,4.524680,-4.185251,-3.062056,-6.108195,-2.769943,-0.945092,-0.007041,2.383131,0.504001,5.644047,9.061787,-8.365258,2.166728,-2.100956,-3.978046,0.456099,4.690145,-7.109328,5.402289,-9.412275,-6.888559,-3.438600,-3.660832,-7.003239,3.885299,-3.705590,-1.910168,-8.769404,9.564943,9.017134,-9.303100,7.512315,-2.570271,9.760903,-1.045552,3.957525,-1.777395,-3.101148,6.546100,7.895992,-3.585288,7.949724,-4.392218,-9.047121,0.112450,6.980478,5.218828,2.950520,-9.714782,7.779658,-7.256103,-3.774376,-8.181648,5.835539,5.578342,-0.779663,-1.180934,8.067970,1.945194,4.258019,9.726661,-5.033901,2.578327,9.910696,-3.366275,3.912661,8.107994,-2.808601,-7.508013,-6.520717,-9.574008,4.796104,-7.969589,0.039898,6.988460,-0.524016,-4.565074,1.021674,-5.595766,1.358583,4.501650,8.278306,-5.244230,-7.230193,5.913442,8.377135,5.596744,2.512672,6.033018,8.968492,6.823296,5.295938,-3.242258,8.968830,4.639211,2.298512,7.945081,-7.945345,-9.341130,-5.772608,9.893533,0.238739,9.198193,-7.056097,-4.380495,6.531765,-6.110905,4.515029,1.332452,4.387081,1.346292,8.969258,-0.400200,3.063275,-0.750887,-7.550851,6.213979,-0.864794,-0.558382,6.013537,-7.917353,-0.827301,1.586915,8.831521,0.556025,-6.723583,3.896686,8.827729,1.218623,4.329611,9.195906,5.299476,2.666985,3.882785,-6.471736,-4.903079,9.693650,6.954170,-0.154963,2.887277,-0.618305,5.841694,7.171337,3.247414,2.534050,-8.901490,-3.147245,7.340174,0.593647,-2.415835,4.399811,-2.503444,2.836916,6.729458,-3.760954,7.865788,-0.807394,-0.689789,-5.706678,-5.000366,-1.722553,-8.013660,-4.413961,4.086297,-3.106481,-6.877762,-1.778617,-0.977258,-4.142095,-7.066323,-8.836883,7.237432,-3.757475,-3.316558,0.687621,-8.985702,7.955034,9.635426,-7.401190,3.481603,-1.120194,-2.546498,-3.926383,-4.011860,-9.951629,5.436082,9.247787,-0.429761,-0.446181,-8.525441,8.263631,-5.105561,6.178362,1.144792,-7.154540,-3.678193,-4.983521,6.079833,4.431404,4.177492,-5.615976,-3.966508,-1.105401,1.497196,8.908940,-2.593066,-2.151485,6.672023,-8.888575,6.154221,4.513845,4.075477,-6.894039,-0.630103,4.559982,-8.926880,-3.517153,6.532641,0.127229,0.618378,-4.106787,3.522063,-9.944406,-9.382846,8.321522,3.750899,6.852360,-6.905895,-3.750855,6.999925,5.808743,5.504422,-9.257015,-8.300906,-8.976399,-3.019555,9.884418,5.708873,-4.045840,1.124220,-5.636971,-7.858346,0.370693,2.243960,3.408850,1.881572,-8.584361,-4.878407,0.270785,-5.656963,-9.948570,-6.816967,6.464243,-5.758729,3.077434,2.332990,-3.573725,4.640533,1.684614,9.727433,8.139443,9.072935,-2.501827,-9.429902,-2.257065,4.954914,6.254533,-5.137681,6.081198,-4.022940,-1.097653,-7.121295,2.588169,6.931394,0.366336,4.429231,6.886496,-4.448677,-5.385948,-5.298405,-0.453358,-1.114954,3.845897,-2.470375,9.823299,-7.807170,-9.607479,-5.006405,-5.963430,-7.178726,2.864093,5.277807,-9.583720,-8.415308,-1.173074,2.762458,-4.121501,4.994619,3.574493,-7.872073,-9.614475,-8.145274,-4.132453,3.828127,-6.280965,-9.916737,2.136522,4.982522,9.125813,1.736045,-2.216248,-3.742482,-3.494513,-7.179526,3.718155,-2.805236,0.422157,8.659624,8.044451,8.217106,-2.998914,5.805093,2.700920,-7.745311,-7.956826,-4.078033,-2.076327,0.592078,-7.739489,-6.111117,5.755368,-1.430476,-0.189395,-1.889573,-1.700852,1.390560,0.551898,-4.456186,1.272619,5.415902,-4.720379,-5.510736,7.269062,3.786923,-4.673224,5.048581,-4.118630,-8.269304,4.434845,9.524604,-1.431635,5.165782,4.097333,-4.669243,-8.949863,6.088300,-2.878484,5.237401,2.386033,0.506722,3.974709,0.970564,-4.035737,-8.372304,-4.805516,7.781326,-0.364470,-6.106787,1.254826,8.638113,6.670252,-2.492493,-1.791182,9.650871,7.021303,0.743087,9.798672,-6.243624,9.889071,-8.774491,-6.748650,-3.001663,-7.467558,9.314116,-4.366198], dtype = "float32")#candidate|1441|(1120,)|const|float32
call_1439 = relay.TupleGetItem(func_575_call(relay.reshape(var_1440.astype('int8'), [15, 2, 15]), relay.reshape(const_1441.astype('float32'), [1120, 1]), ), 1)
call_1442 = relay.TupleGetItem(func_579_call(relay.reshape(var_1440.astype('int8'), [15, 2, 15]), relay.reshape(const_1441.astype('float32'), [1120, 1]), ), 1)
uop_1450 = relay.erf(call_1439.astype('float64')) # shape=(5, 14, 16)
uop_1452 = relay.erf(call_1442.astype('float64')) # shape=(5, 14, 16)
func_948_call = mod.get_global_var('func_948')
func_953_call = mutated_mod.get_global_var('func_953')
const_1456 = relay.const([[6,2,10,-10,-10,2,-8,4,-2,4,5,2,2,-1,10,7,-5,-6,8,9,-8,-10,5,8,-3,3,2,-7,-7,-7,6,-3,-2,-7,-4,-2,9,-1,-8,-4,-1,8,2,6,-4,4,-6,2,-5,2,-5,-2,-6,1,-1,-4,-1,6,10,3],[-6,3,-6,-3,3,-10,10,3,4,2,8,-10,10,4,-1,-1,6,2,-10,2,-10,2,-4,-8,8,8,5,6,-5,3,-1,-6,2,-10,-10,-6,5,-2,2,9,-9,-5,-6,-10,-5,-8,9,3,1,6,8,-4,9,-3,-6,-10,-1,9,-7,-8],[-2,-9,2,6,7,-7,-3,7,-6,10,5,7,6,3,5,-6,-10,9,10,7,7,-2,4,-10,-10,-2,-2,-10,5,2,5,-6,-6,8,2,1,9,8,5,-6,2,-1,-9,5,-4,-3,-6,5,7,7,-1,9,-4,-5,-6,-5,9,5,8,-1],[8,3,-4,-5,4,-10,-10,4,5,4,-8,-2,-6,-4,-6,9,10,7,10,5,-5,6,-4,-1,8,10,6,-5,-8,9,6,7,7,10,-7,-1,1,-8,-8,4,6,-3,6,7,9,-10,-3,8,3,9,-4,2,8,10,3,-1,8,3,4,-9],[-7,5,-6,-4,-3,-8,-3,-4,-4,-6,-8,6,-3,-1,-1,7,7,-2,6,-1,8,6,4,6,-4,-3,-1,10,9,10,-10,-10,10,-2,-7,-5,-4,10,-1,-4,-9,9,7,4,1,-6,5,-9,-7,1,-4,8,-9,4,5,7,6,-3,-5,8],[5,6,1,4,6,9,4,-8,8,-3,3,-6,-5,-3,-8,-4,-7,2,8,4,-1,-6,4,8,-9,6,10,-10,-3,-5,5,5,-2,10,2,5,-8,-10,6,-8,-10,6,6,-5,10,3,9,-7,-4,-10,10,-10,8,-3,-10,9,5,10,-5,2],[6,9,3,6,-3,-4,6,1,5,-6,7,3,-5,5,7,-3,5,8,-10,-3,-5,-3,-2,2,-2,-10,-8,-1,3,2,3,5,-9,-4,-7,1,-6,2,-3,-5,5,-2,-6,5,-8,3,2,9,-9,10,4,10,8,-9,-6,-3,-8,3,9,7],[-5,-9,6,-6,-3,-5,-10,6,-6,-6,-9,-5,-6,-3,6,-2,-10,-8,9,5,2,8,4,-7,-10,5,4,8,-6,-4,-3,-5,-5,3,-7,-7,-8,-1,10,-5,3,-10,7,6,9,10,-6,6,8,-9,-8,5,1,10,-6,-2,4,7,-9,7]], dtype = "int8")#candidate|1456|(8, 60)|const|int8
call_1455 = relay.TupleGetItem(func_948_call(relay.reshape(const_1456.astype('int8'), [4, 12, 10]), relay.reshape(const_1456.astype('int8'), [4, 12, 10]), relay.reshape(call_1439.astype('float32'), [1120,]), ), 1)
call_1457 = relay.TupleGetItem(func_953_call(relay.reshape(const_1456.astype('int8'), [4, 12, 10]), relay.reshape(const_1456.astype('int8'), [4, 12, 10]), relay.reshape(call_1439.astype('float32'), [1120,]), ), 1)
output = relay.Tuple([uop_1434,uop_1436,var_1440,const_1441,uop_1450,call_1455,const_1456,])
output2 = relay.Tuple([uop_1434,uop_1436,var_1440,const_1441,uop_1452,call_1457,const_1456,])
func_1461 = relay.Function([var_1433,var_1440,], output)
mod['func_1461'] = func_1461
mod = relay.transform.InferType()(mod)
mutated_mod['func_1461'] = func_1461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1461_call = mutated_mod.get_global_var('func_1461')
var_1463 = relay.var("var_1463", dtype = "float64", shape = (11, 10, 7))#candidate|1463|(11, 10, 7)|var|float64
var_1464 = relay.var("var_1464", dtype = "int8", shape = (1, 450))#candidate|1464|(1, 450)|var|int8
call_1462 = func_1461_call(var_1463,var_1464,)
output = call_1462
func_1465 = relay.Function([var_1463,var_1464,], output)
mutated_mod['func_1465'] = func_1465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1426_call = mod.get_global_var('func_1426')
func_1427_call = mutated_mod.get_global_var('func_1427')
call_1526 = relay.TupleGetItem(func_1426_call(), 0)
call_1527 = relay.TupleGetItem(func_1427_call(), 0)
uop_1528 = relay.rsqrt(call_1526.astype('float32')) # shape=(4, 2, 13)
uop_1530 = relay.rsqrt(call_1527.astype('float32')) # shape=(4, 2, 13)
output = uop_1528
output2 = uop_1530
func_1534 = relay.Function([], output)
mod['func_1534'] = func_1534
mod = relay.transform.InferType()(mod)
output = func_1534()
func_1535 = relay.Function([], output)
mutated_mod['func_1535'] = func_1535
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1565 = relay.var("var_1565", dtype = "int16", shape = (8, 2, 7))#candidate|1565|(8, 2, 7)|var|int16
var_1566 = relay.var("var_1566", dtype = "int16", shape = (8, 2, 7))#candidate|1566|(8, 2, 7)|var|int16
bop_1567 = relay.subtract(var_1565.astype('int16'), relay.reshape(var_1566.astype('int16'), relay.shape_of(var_1565))) # shape=(8, 2, 7)
output = relay.Tuple([bop_1567,])
output2 = relay.Tuple([bop_1567,])
func_1574 = relay.Function([var_1565,var_1566,], output)
mod['func_1574'] = func_1574
mod = relay.transform.InferType()(mod)
mutated_mod['func_1574'] = func_1574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1574_call = mutated_mod.get_global_var('func_1574')
var_1576 = relay.var("var_1576", dtype = "int16", shape = (8, 2, 7))#candidate|1576|(8, 2, 7)|var|int16
var_1577 = relay.var("var_1577", dtype = "int16", shape = (8, 2, 7))#candidate|1577|(8, 2, 7)|var|int16
call_1575 = func_1574_call(var_1576,var_1577,)
output = call_1575
func_1578 = relay.Function([var_1576,var_1577,], output)
mutated_mod['func_1578'] = func_1578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1534_call = mod.get_global_var('func_1534')
func_1535_call = mutated_mod.get_global_var('func_1535')
call_1580 = func_1534_call()
call_1581 = func_1534_call()
func_1426_call = mod.get_global_var('func_1426')
func_1427_call = mutated_mod.get_global_var('func_1427')
call_1584 = relay.TupleGetItem(func_1426_call(), 0)
call_1585 = relay.TupleGetItem(func_1427_call(), 0)
output = relay.Tuple([call_1580,call_1584,])
output2 = relay.Tuple([call_1581,call_1585,])
func_1588 = relay.Function([], output)
mod['func_1588'] = func_1588
mod = relay.transform.InferType()(mod)
mutated_mod['func_1588'] = func_1588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1588_call = mutated_mod.get_global_var('func_1588')
call_1589 = func_1588_call()
output = call_1589
func_1590 = relay.Function([], output)
mutated_mod['func_1590'] = func_1590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1383_call = mod.get_global_var('func_1383')
func_1384_call = mutated_mod.get_global_var('func_1384')
call_1614 = relay.TupleGetItem(func_1383_call(), 0)
call_1615 = relay.TupleGetItem(func_1384_call(), 0)
uop_1620 = relay.sqrt(call_1614.astype('float64')) # shape=(4, 2, 13)
uop_1622 = relay.sqrt(call_1615.astype('float64')) # shape=(4, 2, 13)
output = uop_1620
output2 = uop_1622
func_1626 = relay.Function([], output)
mod['func_1626'] = func_1626
mod = relay.transform.InferType()(mod)
mutated_mod['func_1626'] = func_1626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mutated_mod.get_global_var('func_1626')
call_1627 = func_1626_call()
output = call_1627
func_1628 = relay.Function([], output)
mutated_mod['func_1628'] = func_1628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1588_call = mod.get_global_var('func_1588')
func_1590_call = mutated_mod.get_global_var('func_1590')
call_1653 = relay.TupleGetItem(func_1588_call(), 1)
call_1654 = relay.TupleGetItem(func_1590_call(), 1)
output = call_1653
output2 = call_1654
func_1664 = relay.Function([], output)
mod['func_1664'] = func_1664
mod = relay.transform.InferType()(mod)
mutated_mod['func_1664'] = func_1664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1664_call = mutated_mod.get_global_var('func_1664')
call_1665 = func_1664_call()
output = call_1665
func_1666 = relay.Function([], output)
mutated_mod['func_1666'] = func_1666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1383_call = mod.get_global_var('func_1383')
func_1384_call = mutated_mod.get_global_var('func_1384')
call_1678 = relay.TupleGetItem(func_1383_call(), 0)
call_1679 = relay.TupleGetItem(func_1384_call(), 0)
func_1664_call = mod.get_global_var('func_1664')
func_1666_call = mutated_mod.get_global_var('func_1666')
call_1683 = func_1664_call()
call_1684 = func_1664_call()
uop_1694 = relay.tan(call_1683.astype('float64')) # shape=(4, 2, 13)
uop_1696 = relay.tan(call_1684.astype('float64')) # shape=(4, 2, 13)
func_1263_call = mod.get_global_var('func_1263')
func_1266_call = mutated_mod.get_global_var('func_1266')
const_1702 = relay.const([-9.321202,-7.141609,4.610374,-2.933509,6.036367,5.222501,-7.593306,-3.226506,-7.505593,3.081511,2.332588,7.400825,-1.064820,0.612277,-0.739994,-7.694169,2.582306,-6.925841,-2.634022,5.824129,-7.624088,5.549351,-4.565358,4.809920,-5.026110,3.817237,2.259174,-9.885615,9.764273,3.423430,-2.430861,7.660674,-9.255489,2.094367,-1.920448,8.525009,8.714080,1.462427,-2.593065,2.019743,3.563219,-6.770659,3.981811,4.773970,8.740846,5.667196,-0.594935,0.510777,-5.838318,-4.957213,9.284037,9.979568,-5.181643,2.519749,2.623190,-2.521091,7.270404,2.173235,4.642218,9.220915,-1.105651,7.863653,2.980059,4.266914,2.632355,-2.423053,2.387013,4.462963,5.821542,1.222549,3.728808,6.770913,-2.711150,-1.911859,8.629706,-5.415143,-1.715605,0.054386,2.500393,0.679414,-8.946091,9.025367,8.606365,6.470491,0.563856,7.250859,-9.604207,7.456126,7.322113,2.176716,-8.806370,-6.424007,7.141516,-6.172209,9.088353,5.637859], dtype = "float32")#candidate|1702|(96,)|const|float32
call_1701 = func_1263_call(relay.reshape(const_1702.astype('float32'), [1, 16, 6]))
call_1703 = func_1263_call(relay.reshape(const_1702.astype('float32'), [1, 16, 6]))
bop_1707 = relay.floor_divide(uop_1694.astype('float32'), relay.reshape(call_1678.astype('float32'), relay.shape_of(uop_1694))) # shape=(4, 2, 13)
bop_1710 = relay.floor_divide(uop_1696.astype('float32'), relay.reshape(call_1679.astype('float32'), relay.shape_of(uop_1696))) # shape=(4, 2, 13)
bop_1718 = relay.logical_or(uop_1694.astype('bool'), relay.reshape(call_1683.astype('bool'), relay.shape_of(uop_1694))) # shape=(4, 2, 13)
bop_1721 = relay.logical_or(uop_1696.astype('bool'), relay.reshape(call_1684.astype('bool'), relay.shape_of(uop_1696))) # shape=(4, 2, 13)
bop_1730 = relay.subtract(uop_1694.astype('float32'), relay.reshape(bop_1718.astype('float32'), relay.shape_of(uop_1694))) # shape=(4, 2, 13)
bop_1733 = relay.subtract(uop_1696.astype('float32'), relay.reshape(bop_1721.astype('float32'), relay.shape_of(uop_1696))) # shape=(4, 2, 13)
bop_1734 = relay.minimum(bop_1718.astype('int32'), relay.reshape(bop_1730.astype('int32'), relay.shape_of(bop_1718))) # shape=(4, 2, 13)
bop_1737 = relay.minimum(bop_1721.astype('int32'), relay.reshape(bop_1733.astype('int32'), relay.shape_of(bop_1721))) # shape=(4, 2, 13)
output = relay.Tuple([call_1701,const_1702,bop_1707,bop_1734,])
output2 = relay.Tuple([call_1703,const_1702,bop_1710,bop_1737,])
func_1739 = relay.Function([], output)
mod['func_1739'] = func_1739
mod = relay.transform.InferType()(mod)
mutated_mod['func_1739'] = func_1739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1739_call = mutated_mod.get_global_var('func_1739')
call_1740 = func_1739_call()
output = call_1740
func_1741 = relay.Function([], output)
mutated_mod['func_1741'] = func_1741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1426_call = mod.get_global_var('func_1426')
func_1427_call = mutated_mod.get_global_var('func_1427')
call_1776 = relay.TupleGetItem(func_1426_call(), 0)
call_1777 = relay.TupleGetItem(func_1427_call(), 0)
func_1664_call = mod.get_global_var('func_1664')
func_1666_call = mutated_mod.get_global_var('func_1666')
call_1780 = func_1664_call()
call_1781 = func_1664_call()
func_1461_call = mod.get_global_var('func_1461')
func_1465_call = mutated_mod.get_global_var('func_1465')
const_1799 = relay.const([[-1.639652,4.363917,-6.095688,1.295366,-7.891225,-3.936548,4.521601,2.711706,5.774144,-4.457674,0.157804,-0.320587,-6.143163,-8.311744,-5.174370,-0.971376,-5.186784,1.343969,1.985413,-7.552414,-6.664783,-1.820612,-0.953704,7.195452,-4.220809,-0.850882,0.937378,6.504709,6.197694,-4.672528,-4.346198,-2.869763,-9.469703,7.959406,-3.539764,-4.195355,-3.398187,-9.369797,-8.669653,-5.070705,8.710936,1.496176,-6.112869,-9.879071,-6.706206,1.819468,9.433634,-6.730788,2.322372,3.719869,6.297419,-7.704207,1.421581,-3.643809,0.849582,-0.349553,3.306483,3.167334,2.630777,4.408837,-3.491419,-0.482308,-3.160711,-9.858839,-8.199268,2.251713,5.353830,7.292092,-0.088371,-2.096469,-1.433001,-3.998350,-2.414063,0.180931,7.635938,-3.499849,-2.069322,-4.931289,5.064494,-5.771423,-0.154021,0.149332,-7.343219,-7.010981,-4.742131,-9.793854,-6.159174,-2.584945,-2.972869,-1.245557,5.482791,8.647414,5.500118,-5.117463,-9.082455,-2.597733,4.755736,-9.705481,-8.159506,-2.396624,-7.919743,6.295699,-3.033796,8.086184,-6.161845,-0.166118,-3.566667,1.563996,3.904424,-3.016738,-1.866086,5.457419,-7.312106,1.445706,-4.396388,4.934263,-6.988478,6.363974,7.974829,7.555814,-6.031940,9.263964,-2.623848,-0.562772,-0.508946,2.759382,5.399399,-8.288294,7.202539,-2.297344,-7.578156,-6.063882,1.577266,4.562546,-6.031232,-9.851870,-3.405783,-7.561819,-1.818619,1.674968,5.962423,2.744631,6.638914,7.407231,-2.081713,-2.687764,7.727257,1.754067,1.197072,5.836290,-7.381010,-5.545784,8.548755,1.759529,-4.537605,1.152172,3.062231,-1.743582,-2.067326,4.873433,-5.469956,5.568502,-7.628209,-9.635815,6.434118,-7.031750,8.077752,8.630783,9.717009,-2.768339,7.130763,8.355432,-2.416713,7.896420,6.841882,1.223379,-2.930970,-0.083227,-4.939835,-8.917996,-9.213342,6.939405,-2.568937,0.021381,5.912177,2.108300,4.359489,7.404335,-1.298745,-3.468613,-7.745629,9.223804,5.677481,5.218806,-4.813239,2.152279,-7.091743,-9.237333,4.993756,-5.855406,4.297969,7.125721,2.398148,9.451025,0.417674,4.234253,7.839445,0.472561,-3.694694,-2.683429,-5.252818,-1.466257,-3.902537,1.301795,-9.899633,-4.841258,0.705878,-6.229531,3.418633,4.498926,0.017635,-1.138148,2.085462,2.894856,-3.389053,8.378613,-2.317495,-6.534769,-9.826649,-2.469208,9.489304,4.180836,0.938653,7.908270,3.938493,7.200378,-1.946388,9.289659,0.851007,2.602947,8.850701,7.704534,-2.110517,-8.033401,2.023511,6.490144,-7.652771,-3.013375,-0.964120,-1.279849,-7.021232,5.988527,8.743001,-1.833821,4.187825,-8.824850,-2.063778,-0.818140,1.093192,-2.643947,-6.146837,-6.169913,-5.913057,-3.235344,-7.074696,-7.280797,-5.068808,4.747931,-4.437432,4.861935,-3.387223,-9.449556,3.410034,0.918746,-2.701326,7.838384,-8.926739,4.115738,-3.524136,9.981073,-8.180488,0.782786,5.177401,-7.326697,8.830787,-7.834977,0.509212,-5.891962,4.685797,-8.362006,1.231119,-5.923619,4.123771,-4.198098,3.787952,-5.829061,4.806313,8.185270,0.816402,7.199844,1.715103,-0.359445,-9.014268,5.479068,-8.640880,4.973846,7.639245,8.582624,5.680408,8.586172,-8.001709,-4.217673,3.751302,-4.791266,6.596602,0.858886,2.452279,-3.831154,6.936442,-9.874213,8.346276,0.557643,7.459826,9.342800,4.865545,-4.001754,-0.629159,4.939269,-9.924423,-1.322395,9.260324,-4.755327,3.052477,1.104167,-0.302599,6.648134,8.604026,-6.792305,0.468570,-3.244758,-8.275361,-6.868470,7.232899,2.082862,-5.810598,-6.545432,2.705453,-0.357291,0.987750,4.719343,5.654917,2.833057,-0.774905,-0.879878,5.185418,-7.050051,2.621168,-9.714524,-6.645280,-7.605321,-8.065905,1.110184,2.205102,-9.362031,8.222520,-2.095413,-6.877890,0.961671,7.748215,6.158095,-4.350907,9.653021,-2.228823,7.289591,8.299611,1.561112,-2.171938,1.370649,9.182785,-0.858350,-5.221249,5.260237,-2.828546,7.632008,-9.603152,-6.323991,-7.604178,-4.641222,8.444628,9.081085,5.011045,-3.110408,1.691060,6.631990,-8.536620,8.749805,-7.403784,0.029714,-5.821323,8.826744,6.146188,0.396356,5.169561,3.830458,7.016021,8.869909,9.732484,-9.564665,6.705685,6.723513,1.556477,-5.227184,-6.933192,-4.658838,-9.637367,2.699587,3.259326,1.536397,4.308956,-3.547244,-6.660528,6.498545,6.752772,-4.517410,-8.017545,-3.967535,8.400428,3.231949,8.265905,-5.923227,1.548706,0.168826,-0.050665,4.400167,5.763311,7.773140,7.296085,-4.054286,-6.918752,-0.970864,-3.937340,1.581105,8.768893,3.101060,-3.776751,3.966714,-3.808813,9.112080,9.342064,-7.124346,-4.195252,-0.261595,-5.729363,-1.520036,-5.569323,3.034030,-8.640233,-6.161582,-5.893474,-5.505187,6.538470,-4.489159,-6.607907,-8.319599,2.316033,7.058857,-3.827404,1.680217,-6.296155,-0.563442,-0.980083,2.635066,-3.039654,2.882610,-9.074842,5.309889,8.082668,4.732629,1.556827,4.636193,-6.750277,-8.871856,4.630888,8.652377,-1.720386,-0.277198,-8.727206,6.159533,3.299430,1.800975,-5.382181,8.916432,-0.887895,0.487537,-0.102530,-9.834295,6.205949,-8.867870,0.244420,-1.918911,6.661674,-0.219178,5.847065,-3.760840,-7.153636,-0.183990,-2.271283,-0.051652,-2.853023,4.871607,7.393158,6.868924,-1.817551,2.582748,3.478138,7.247337,-4.343815,-2.550521,8.414926,-3.188919,-9.722789,-2.170909,-1.664448,-1.195651,8.066312,5.432978,8.581750,6.075107,-7.094428,5.557663,2.934661,-9.557056,7.774382,2.132874,4.214049,-6.051647,-9.582743,9.260210,-2.996548,6.695996,8.896600,-1.590510,8.259517,-6.751428,-4.957616,1.816448,2.786569,0.789936,0.066302,5.800446,-3.441441,-3.560792,5.458591,4.505867,8.366002,0.972802,5.370837,-7.247437,2.273180,9.220607,-7.510072,7.887003,-8.911887,-0.436301,7.481294,5.000630,-5.076053,-7.487909,8.964872,0.423269,-7.549829,1.978369,-7.698525,-4.656214,-3.329446,7.125293,8.109127,-9.687097,2.317613,2.061879,8.360640,-0.695220,-0.357155,9.989487,-7.572255,6.428189,2.847286,-2.617952,-3.182812,2.167658,-6.251953,0.428917,-1.256788,-4.664116,5.482786,-5.351743,-8.682935,-2.356536,-9.913741,-6.713692,-9.332615,2.122722,-3.608941,8.195888,2.224761,2.997596,2.345026,8.715171,6.470017,2.728265,5.013290,4.039924,-7.819598,-7.117044,6.719274,9.933823,-3.079665,9.990759,-8.574297,0.126730,8.440159,-8.003773,-3.357674,-1.712103,0.081327,-6.976635,-9.786646,-7.838772,0.726068,9.767218,1.515375,-4.214289,2.150671,-1.305531,-1.784277,4.366517,-2.749940,-6.028320,9.198461,-1.062279,-1.378436,7.418904,-3.342245,5.292720,3.245772,-3.512350,4.057738,-5.918186,-0.255314,-8.332064,8.765255,9.484980,8.263881,-5.753859,-4.885271,9.658527,8.754747,4.282837,-5.755532,6.447592,3.117192,-8.364486,-8.312085,-8.394164,2.152536,5.725085,-6.766095,5.816285,-6.883835,5.231803,-7.186962,7.493458,8.570696,-0.996552,3.535586,9.460427,5.712373,4.071116,4.808938,2.278242,-7.582392,0.868601,7.242177,6.544074,-2.982468,-8.449055,5.639231,-3.064268,5.684541,2.934826,-7.283155,0.982702,-6.730953,3.676892,-3.315851,0.766895,0.765583,-8.790464,7.675066,-0.430499,-0.047022,-2.263618,-9.674062,-4.538832,7.357928,-3.879333,9.334092,-9.173141,-0.685094,9.104554,-1.894980,9.817306,0.901592,-5.854974,1.263160,-0.446742,8.402468,-1.408057,8.797601,3.467018,-8.748542,-5.447277,-4.564092,0.472816,-5.745891,6.098363,5.030964,-0.683451,-9.899375,8.995679,4.490625,3.793354,5.164652,-1.546327,5.259713,3.918004,5.739883,6.036813,-2.673377,-2.866044,4.158807,8.131316,-1.816630,0.127818,-5.750063,8.792668,-0.851037,1.356964,-4.950371,-2.155783,2.603754,1.393276,7.224005,-9.279737,1.339055,-0.994049,5.489055,-8.652859,6.456944,-4.475026,-0.688653,1.821591,3.302261,-8.164451,-6.998986,2.564633,9.395621,-8.250913,4.229630,-7.270407]], dtype = "float64")#candidate|1799|(1, 770)|const|float64
const_1800 = relay.const([-7,-3,-6,4,1,3,-4,-6,-1,-10,-10,4,-4,-8,-7,2,-1,5,-5,3,-6,-5,-5,9,-3,-10,5,-6,2,9,-10,-5,7,10,3,-5,10,-9,-8,-4,5,-3,-6,1,-4,9,-3,-5,-8,-2,8,10,-9,4,9,-10,10,7,4,-3,-2,4,-1,-8,4,2,1,-10,2,10,2,6,-5,5,4,-10,4,-2,3,-4,1,-10,9,-3,-4,2,10,7,2,-5,-1,3,-10,-10,4,-9,1,7,1,-1,-10,-10,-1,-8,-10,1,1,-9,-8,2,-5,9,2,4,-6,8,-7,10,9,5,4,-1,10,4,8,-2,-8,-7,-8,6,7,4,6,2,-4,3,2,1,-5,-2,2,6,-8,4,5,2,6,5,-9,-7,3,1,5,9,-8,1,-8,9,1,2,3,-7,1,1,7,3,10,-7,-7,-3,7,2,-2,-1,-6,8,-6,-10,-4,-7,1,-3,5,3,6,4,3,-9,8,-7,-3,-6,9,8,-9,6,-8,-10,-9,-4,1,10,-7,-9,9,1,-3,2,3,5,6,1,-2,-6,3,8,1,8,-7,3,4,-7,-1,1,1,-3,9,1,-4,-2,9,1,-8,-8,-7,-10,-4,-2,-7,6,-8,3,4,9,-10,-5,1,-7,-6,-3,-5,-7,-9,4,9,4,-1,-7,10,3,4,-9,5,-5,2,-5,2,-5,-1,9,-9,9,7,-4,-9,8,-6,-2,4,1,7,2,8,-10,-8,-10,9,6,-5,-4,-9,10,9,6,9,-9,5,-6,1,-3,5,6,1,4,4,2,10,9,-4,-5,2,9,-9,10,3,1,-5,3,-10,-3,5,-8,-7,-8,-9,6,-9,9,-2,-8,-10,-4,-7,-2,4,-3,-1,5,7,-1,-8,-10,-5,-5,-7,1,-3,4,-2,6,2,-6,-10,2,-4,-6,3,-9,4,-3,-6,-10,-1,-8,-9,-10,4,5,-5,-1,-2,-3,-2,1,-6,-9,-3,3,3,7,-6,2,-3,5,-4,8,3,10,2,3,8,-10,3,4,-5,-8,10,-4,-9,-2,5,-10,1,-6,-3,-3,-3,3,8,-3,-10,7,-5,4,8,-8,6,-3,-9,-2,-8,-5,-7,8,-6,10,4,-10,6,4,2,9,1,6,1,-6,2,1,-10,7,-1,-3,-2,-3,-9,-4,-8,-8,7,3], dtype = "int8")#candidate|1800|(450,)|const|int8
call_1798 = relay.TupleGetItem(func_1461_call(relay.reshape(const_1799.astype('float64'), [11, 10, 7]), relay.reshape(const_1800.astype('int8'), [1, 450]), ), 3)
call_1801 = relay.TupleGetItem(func_1465_call(relay.reshape(const_1799.astype('float64'), [11, 10, 7]), relay.reshape(const_1800.astype('int8'), [1, 450]), ), 3)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_1802 = func_1626_call()
call_1803 = func_1626_call()
output = relay.Tuple([call_1776,call_1780,call_1798,const_1799,const_1800,call_1802,])
output2 = relay.Tuple([call_1777,call_1781,call_1801,const_1799,const_1800,call_1803,])
func_1814 = relay.Function([], output)
mod['func_1814'] = func_1814
mod = relay.transform.InferType()(mod)
mutated_mod['func_1814'] = func_1814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1814_call = mutated_mod.get_global_var('func_1814')
call_1815 = func_1814_call()
output = call_1815
func_1816 = relay.Function([], output)
mutated_mod['func_1816'] = func_1816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1383_call = mod.get_global_var('func_1383')
func_1384_call = mutated_mod.get_global_var('func_1384')
call_1947 = relay.TupleGetItem(func_1383_call(), 0)
call_1948 = relay.TupleGetItem(func_1384_call(), 0)
output = call_1947
output2 = call_1948
func_1972 = relay.Function([], output)
mod['func_1972'] = func_1972
mod = relay.transform.InferType()(mod)
mutated_mod['func_1972'] = func_1972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mutated_mod.get_global_var('func_1972')
call_1973 = func_1972_call()
output = call_1973
func_1974 = relay.Function([], output)
mutated_mod['func_1974'] = func_1974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1383_call = mod.get_global_var('func_1383')
func_1384_call = mutated_mod.get_global_var('func_1384')
call_1975 = relay.TupleGetItem(func_1383_call(), 0)
call_1976 = relay.TupleGetItem(func_1384_call(), 0)
uop_1982 = relay.acos(call_1975.astype('float32')) # shape=(4, 2, 13)
uop_1984 = relay.acos(call_1976.astype('float32')) # shape=(4, 2, 13)
var_1994 = relay.var("var_1994", dtype = "float32", shape = (4, 2, 13))#candidate|1994|(4, 2, 13)|var|float32
bop_1995 = relay.logical_and(uop_1982.astype('bool'), relay.reshape(var_1994.astype('bool'), relay.shape_of(uop_1982))) # shape=(4, 2, 13)
bop_1998 = relay.logical_and(uop_1984.astype('bool'), relay.reshape(var_1994.astype('bool'), relay.shape_of(uop_1984))) # shape=(4, 2, 13)
func_1972_call = mod.get_global_var('func_1972')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_1999 = func_1972_call()
call_2000 = func_1972_call()
func_1588_call = mod.get_global_var('func_1588')
func_1590_call = mutated_mod.get_global_var('func_1590')
call_2004 = relay.TupleGetItem(func_1588_call(), 0)
call_2005 = relay.TupleGetItem(func_1590_call(), 0)
func_948_call = mod.get_global_var('func_948')
func_953_call = mutated_mod.get_global_var('func_953')
const_2038 = relay.const([9,-9,-2,3,-7,-4,-4,6,6,8,5,2,-5,-6,-3,8,-9,-6,7,-2,4,7,-10,1,-8,7,-3,7,-8,-10,7,5,-7,6,10,8,-5,-3,-8,3,3,9,1,-1,-2,1,1,5,7,-1,1,-1,4,5,6,10,-10,-5,-7,-1,9,8,10,-9,-5,1,10,4,6,8,7,-1,-6,-9,3,4,6,2,-3,10,-1,-4,3,-9,-7,-10,4,3,-8,-7,-6,2,10,5,-7,1,-8,-3,5,9,-6,8,2,3,8,2,-10,-6,-2,-4,-8,7,2,-8,-1,-8,-5,8,-10,9,3,-3,-8,1,-2,9,2,7,-7,8,1,4,4,5,-4,-3,-6,8,-5,-5,6,6,-1,9,-7,5,-4,-2,-10,-4,1,-1,-6,-4,2,8,3,-5,9,4,2,2,6,-6,-2,3,2,4,-7,-10,8,-6,-4,-7,4,8,9,-3,5,3,4,3,-4,-3,-3,-9,-1,-2,-5,-9,-8,-6,-7,2,-10,9,5,-9,9,9,5,3,-4,-2,-3,9,-7,8,5,8,-7,1,-1,10,-2,-1,6,4,6,10,-8,1,-3,1,-9,5,-8,-9,-5,-6,-7,-6,9,-4,6,6,-10,-9,-6,-2,1,-2,-2,-5,-9,5,-8,-8,1,-5,5,-10,10,9,-4,-4,8,2,-8,-8,10,2,6,-8,-1,3,6,-2,-7,-6,-2,3,-8,-2,6,3,5,5,-5,-6,7,2,-7,2,7,-4,-8,-1,-4,3,2,5,9,-7,-2,-1,-4,-2,9,-6,4,5,5,-8,-6,-8,-5,4,-2,6,-5,4,-2,-2,-4,5,-6,-8,6,-1,-7,3,-3,-5,7,2,-10,3,7,-1,4,7,-8,-5,2,-9,7,10,8,-7,-9,-8,7,9,9,-5,7,6,-8,2,-9,1,-2,7,6,-6,3,2,-7,4,-2,-10,-10,6,7,9,8,1,-9,-9,-2,-10,9,7,-6,2,9,-6,-10,6,-10,-3,-3,8,3,-10,2,-2,-3,-9,-9,6,-4,-6,7,-2,-6,-7,9,4,-5,-9,-4,2,-9,8,-1,-3,-7,1,-10,4,6,-7,-9,1,5,4,2,-9,-6,-8,-1,4,-1,-3,8,8,-9,10,-8,-3,-2,2,-3,-4,10,-8,6,-9,8,7,9,9,10,5,2,-1,-7,10,-8,2,8,-6,-3,1,-9,9,-6,6,-10,6,-1,8,-1,-1,-5,-6,-3,9,-9,9,-1,-4,7,-4,10,-10,-6,10], dtype = "int8")#candidate|2038|(480,)|const|int8
var_2039 = relay.var("var_2039", dtype = "float32", shape = (1120,))#candidate|2039|(1120,)|var|float32
call_2037 = relay.TupleGetItem(func_948_call(relay.reshape(const_2038.astype('int8'), [4, 12, 10]), relay.reshape(const_2038.astype('int8'), [4, 12, 10]), relay.reshape(var_2039.astype('float32'), [1120,]), ), 2)
call_2040 = relay.TupleGetItem(func_953_call(relay.reshape(const_2038.astype('int8'), [4, 12, 10]), relay.reshape(const_2038.astype('int8'), [4, 12, 10]), relay.reshape(var_2039.astype('float32'), [1120,]), ), 2)
const_2048 = relay.const([[[8.926109,-2.796068,2.820077,-6.910794,-0.077050,-9.435628,0.971033,6.693043,-8.671122,5.831753,-5.640829,-8.949938,-9.648535],[-0.216013,-5.025410,-6.263560,-2.738324,4.655146,-2.652588,-7.593513,5.785954,4.854327,7.356388,6.306352,-2.670607,7.607129]],[[-2.564987,-8.466134,7.954114,-6.255767,-1.937261,1.589062,-6.547295,0.053439,-8.669115,1.366175,-4.353254,-0.021757,-1.053175],[-0.002579,-3.093765,5.099224,4.761200,-7.234920,4.527318,-8.126927,3.541468,-2.338102,-8.442554,-4.494464,9.341159,0.591995]],[[8.594985,9.967749,5.673058,-5.725011,-9.588061,8.962903,-8.958570,-8.483478,-0.687229,5.452667,0.731772,1.683932,5.085067],[-4.453952,-2.435767,3.061167,-4.472268,0.137125,-6.520992,5.527893,2.889491,-7.900832,-9.555843,2.471363,-1.029821,1.050434]],[[-0.774197,2.140203,-1.781446,9.320790,6.422578,-7.851659,5.608980,-4.435874,-8.397356,-2.107123,-6.530496,4.753932,-6.248938],[5.738097,3.337863,-5.752783,-5.485453,-9.122761,9.636274,8.335034,-2.827974,-1.338924,9.285369,6.718654,6.879776,7.166094]]], dtype = "float32")#candidate|2048|(4, 2, 13)|const|float32
bop_2049 = relay.equal(uop_1982.astype('bool'), relay.reshape(const_2048.astype('bool'), relay.shape_of(uop_1982))) # shape=(4, 2, 13)
bop_2052 = relay.equal(uop_1984.astype('bool'), relay.reshape(const_2048.astype('bool'), relay.shape_of(uop_1984))) # shape=(4, 2, 13)
output = relay.Tuple([bop_1995,call_1999,call_2004,call_2037,const_2038,var_2039,bop_2049,])
output2 = relay.Tuple([bop_1998,call_2000,call_2005,call_2040,const_2038,var_2039,bop_2052,])
func_2055 = relay.Function([var_1994,var_2039,], output)
mod['func_2055'] = func_2055
mod = relay.transform.InferType()(mod)
var_2056 = relay.var("var_2056", dtype = "float32", shape = (4, 2, 13))#candidate|2056|(4, 2, 13)|var|float32
var_2057 = relay.var("var_2057", dtype = "float32", shape = (1120,))#candidate|2057|(1120,)|var|float32
output = func_2055(var_2056,var_2057,)
func_2058 = relay.Function([var_2056,var_2057,], output)
mutated_mod['func_2058'] = func_2058
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2068 = relay.var("var_2068", dtype = "float64", shape = (15, 2, 7))#candidate|2068|(15, 2, 7)|var|float64
uop_2069 = relay.sinh(var_2068.astype('float64')) # shape=(15, 2, 7)
output = uop_2069
output2 = uop_2069
func_2074 = relay.Function([var_2068,], output)
mod['func_2074'] = func_2074
mod = relay.transform.InferType()(mod)
mutated_mod['func_2074'] = func_2074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2075 = relay.var("var_2075", dtype = "float64", shape = (15, 2, 7))#candidate|2075|(15, 2, 7)|var|float64
func_2074_call = mutated_mod.get_global_var('func_2074')
call_2076 = func_2074_call(var_2075)
output = call_2076
func_2077 = relay.Function([var_2075], output)
mutated_mod['func_2077'] = func_2077
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2138 = relay.const([[[-8,1,3,-6,-3,-7,9,3,-9,-10],[2,-2,2,7,-7,-7,1,8,3,2],[9,10,-9,8,7,-8,-9,5,-10,-5]],[[5,-3,-1,2,-5,1,6,-3,-4,5],[-10,10,5,-3,10,-3,1,1,7,7],[10,7,9,10,-1,-7,-2,-2,-4,4]],[[-2,-1,5,6,-7,-5,1,2,-1,5],[1,-5,-1,-10,4,1,10,-1,-5,-6],[-10,-9,4,10,6,-9,7,10,3,-3]],[[3,-4,-7,10,2,6,9,-2,9,-8],[5,-3,-3,10,-10,-2,-10,-8,1,-1],[-5,4,2,-7,-6,-7,-4,5,1,3]],[[2,-8,2,-9,5,-6,5,-4,-4,8],[-10,2,5,-3,-5,-2,2,9,-6,-6],[6,-1,10,8,8,5,-2,4,-6,-6]],[[1,-10,-7,-6,-5,4,-4,4,2,-9],[9,8,1,-1,-9,10,4,-3,-8,6],[3,7,-4,-1,-5,7,-4,-5,9,4]],[[2,7,5,-9,-3,8,-4,3,-10,-6],[-5,-6,2,-4,9,8,-3,9,9,2],[-2,7,-9,-4,5,1,5,-8,3,7]],[[-9,5,-1,1,4,-9,-6,-2,7,4],[-6,-9,-4,-7,9,9,8,-4,-10,-9],[10,1,-4,-3,-9,-10,-3,7,8,-6]],[[-9,-6,1,-7,5,-5,4,3,9,7],[-4,-2,-10,6,-4,-6,7,9,2,-1],[2,1,4,-1,1,-10,9,-6,2,8]],[[4,8,-3,-1,4,1,-8,1,-8,2],[2,-6,5,-1,-4,2,10,1,-10,10],[2,10,-4,9,-3,1,4,-8,3,-5]],[[-8,-7,8,6,8,-10,5,-10,10,1],[4,-9,-3,-7,-8,-3,9,7,-6,5],[-8,4,-6,-2,-8,10,-7,8,7,4]],[[10,-2,-7,-6,3,-7,-8,-4,-9,-1],[-9,7,-1,6,2,1,-7,-1,-5,7],[10,-9,-7,5,9,-1,6,-4,2,-2]],[[8,-6,-10,9,-4,3,10,-4,-3,1],[4,10,-9,-8,-2,5,6,7,8,1],[-2,-8,6,-9,3,-3,-1,9,-7,1]],[[7,-1,7,1,6,7,-8,-2,9,3],[1,-10,-9,4,-4,-5,-1,6,-4,3],[-10,-8,5,3,1,-7,4,-7,-4,8]],[[6,-3,-2,6,7,-6,10,-7,3,-1],[8,7,5,6,4,9,9,-8,-2,-7],[-4,8,-6,-8,-7,-3,7,8,5,1]]], dtype = "uint32")#candidate|2138|(15, 3, 10)|const|uint32
var_2139 = relay.var("var_2139", dtype = "uint32", shape = (15, 3, 10))#candidate|2139|(15, 3, 10)|var|uint32
bop_2140 = relay.equal(const_2138.astype('bool'), relay.reshape(var_2139.astype('bool'), relay.shape_of(const_2138))) # shape=(15, 3, 10)
output = relay.Tuple([bop_2140,])
output2 = relay.Tuple([bop_2140,])
func_2144 = relay.Function([var_2139,], output)
mod['func_2144'] = func_2144
mod = relay.transform.InferType()(mod)
mutated_mod['func_2144'] = func_2144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2145 = relay.var("var_2145", dtype = "uint32", shape = (15, 3, 10))#candidate|2145|(15, 3, 10)|var|uint32
func_2144_call = mutated_mod.get_global_var('func_2144')
call_2146 = func_2144_call(var_2145)
output = call_2146
func_2147 = relay.Function([var_2145], output)
mutated_mod['func_2147'] = func_2147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2179 = relay.var("var_2179", dtype = "uint16", shape = ())#candidate|2179|()|var|uint16
const_2180 = relay.const([[[-2,-10,-8,-2,8,-1,-1,10,-1,-3,-1,-2,-6],[-10,-3,-4,-5,-1,-1,-1,-8,-7,-5,-7,10,-7]],[[-8,-7,-9,-7,2,-7,-6,-8,-1,8,-3,-10,-2],[7,8,-10,-3,1,6,4,9,-2,10,-4,3,10]],[[-4,6,-9,7,-7,2,-8,3,2,1,-9,-8,5],[1,3,3,2,-5,-2,-8,1,-10,4,-10,-1,8]],[[4,-2,-6,-6,-2,6,8,-7,-4,-9,7,-4,3],[5,-7,-5,-9,-9,-7,5,5,7,3,-2,-1,3]],[[-10,-8,1,6,-8,-6,-7,-1,-3,8,-10,-9,-1],[1,4,9,-1,7,-2,-7,-6,-7,-1,7,-7,-9]],[[-10,-1,1,-4,-7,1,1,7,2,4,-8,-9,1],[2,3,-6,-4,-7,-10,2,-3,3,-2,5,-6,-10]],[[-2,-7,8,-3,-5,-7,8,3,-2,-5,-9,-9,1],[-5,-5,-5,-5,-1,2,-6,-5,-5,7,-10,3,4]]], dtype = "uint16")#candidate|2180|(7, 2, 13)|const|uint16
bop_2181 = relay.equal(var_2179.astype('bool'), const_2180.astype('bool')) # shape=(7, 2, 13)
func_1461_call = mod.get_global_var('func_1461')
func_1465_call = mutated_mod.get_global_var('func_1465')
var_2186 = relay.var("var_2186", dtype = "float64", shape = (770,))#candidate|2186|(770,)|var|float64
var_2187 = relay.var("var_2187", dtype = "int8", shape = (450,))#candidate|2187|(450,)|var|int8
call_2185 = relay.TupleGetItem(func_1461_call(relay.reshape(var_2186.astype('float64'), [11, 10, 7]), relay.reshape(var_2187.astype('int8'), [1, 450]), ), 0)
call_2188 = relay.TupleGetItem(func_1465_call(relay.reshape(var_2186.astype('float64'), [11, 10, 7]), relay.reshape(var_2187.astype('int8'), [1, 450]), ), 0)
bop_2189 = relay.logical_and(const_2180.astype('bool'), relay.reshape(bop_2181.astype('bool'), relay.shape_of(const_2180))) # shape=(7, 2, 13)
output = relay.Tuple([call_2185,var_2186,var_2187,bop_2189,])
output2 = relay.Tuple([call_2188,var_2186,var_2187,bop_2189,])
func_2197 = relay.Function([var_2179,var_2186,var_2187,], output)
mod['func_2197'] = func_2197
mod = relay.transform.InferType()(mod)
var_2198 = relay.var("var_2198", dtype = "uint16", shape = ())#candidate|2198|()|var|uint16
var_2199 = relay.var("var_2199", dtype = "float64", shape = (770,))#candidate|2199|(770,)|var|float64
var_2200 = relay.var("var_2200", dtype = "int8", shape = (450,))#candidate|2200|(450,)|var|int8
output = func_2197(var_2198,var_2199,var_2200,)
func_2201 = relay.Function([var_2198,var_2199,var_2200,], output)
mutated_mod['func_2201'] = func_2201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mod.get_global_var('func_1972')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2227 = func_1972_call()
call_2228 = func_1972_call()
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_2243 = func_1626_call()
call_2244 = func_1626_call()
uop_2245 = relay.cos(call_2227.astype('float64')) # shape=(4, 2, 13)
uop_2247 = relay.cos(call_2228.astype('float64')) # shape=(4, 2, 13)
func_1426_call = mod.get_global_var('func_1426')
func_1427_call = mutated_mod.get_global_var('func_1427')
call_2256 = relay.TupleGetItem(func_1426_call(), 0)
call_2257 = relay.TupleGetItem(func_1427_call(), 0)
func_1383_call = mod.get_global_var('func_1383')
func_1384_call = mutated_mod.get_global_var('func_1384')
call_2259 = relay.TupleGetItem(func_1383_call(), 0)
call_2260 = relay.TupleGetItem(func_1384_call(), 0)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_2262 = func_1626_call()
call_2263 = func_1626_call()
bop_2274 = relay.divide(call_2243.astype('float32'), relay.reshape(call_2227.astype('float32'), relay.shape_of(call_2243))) # shape=(4, 2, 13)
bop_2277 = relay.divide(call_2244.astype('float32'), relay.reshape(call_2228.astype('float32'), relay.shape_of(call_2244))) # shape=(4, 2, 13)
bop_2278 = relay.bitwise_or(uop_2245.astype('int32'), relay.reshape(bop_2274.astype('int32'), relay.shape_of(uop_2245))) # shape=(4, 2, 13)
bop_2281 = relay.bitwise_or(uop_2247.astype('int32'), relay.reshape(bop_2277.astype('int32'), relay.shape_of(uop_2247))) # shape=(4, 2, 13)
bop_2290 = relay.less(bop_2278.astype('bool'), relay.reshape(uop_2245.astype('bool'), relay.shape_of(bop_2278))) # shape=(4, 2, 13)
bop_2293 = relay.less(bop_2281.astype('bool'), relay.reshape(uop_2247.astype('bool'), relay.shape_of(bop_2281))) # shape=(4, 2, 13)
output = relay.Tuple([call_2256,call_2259,call_2262,bop_2290,])
output2 = relay.Tuple([call_2257,call_2260,call_2263,bop_2293,])
func_2294 = relay.Function([], output)
mod['func_2294'] = func_2294
mod = relay.transform.InferType()(mod)
output = func_2294()
func_2295 = relay.Function([], output)
mutated_mod['func_2295'] = func_2295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_2296 = func_1626_call()
call_2297 = func_1626_call()
func_1664_call = mod.get_global_var('func_1664')
func_1666_call = mutated_mod.get_global_var('func_1666')
call_2302 = func_1664_call()
call_2303 = func_1664_call()
func_1426_call = mod.get_global_var('func_1426')
func_1427_call = mutated_mod.get_global_var('func_1427')
call_2315 = relay.TupleGetItem(func_1426_call(), 0)
call_2316 = relay.TupleGetItem(func_1427_call(), 0)
output = relay.Tuple([call_2296,call_2302,call_2315,])
output2 = relay.Tuple([call_2297,call_2303,call_2316,])
func_2318 = relay.Function([], output)
mod['func_2318'] = func_2318
mod = relay.transform.InferType()(mod)
output = func_2318()
func_2319 = relay.Function([], output)
mutated_mod['func_2319'] = func_2319
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2335 = relay.var("var_2335", dtype = "float64", shape = (14, 5, 1))#candidate|2335|(14, 5, 1)|var|float64
uop_2336 = relay.asin(var_2335.astype('float64')) # shape=(14, 5, 1)
func_1461_call = mod.get_global_var('func_1461')
func_1465_call = mutated_mod.get_global_var('func_1465')
var_2341 = relay.var("var_2341", dtype = "float64", shape = (770,))#candidate|2341|(770,)|var|float64
var_2342 = relay.var("var_2342", dtype = "int8", shape = (150, 3))#candidate|2342|(150, 3)|var|int8
call_2340 = relay.TupleGetItem(func_1461_call(relay.reshape(var_2341.astype('float64'), [11, 10, 7]), relay.reshape(var_2342.astype('int8'), [1, 450]), ), 5)
call_2343 = relay.TupleGetItem(func_1465_call(relay.reshape(var_2341.astype('float64'), [11, 10, 7]), relay.reshape(var_2342.astype('int8'), [1, 450]), ), 5)
bop_2345 = relay.less_equal(uop_2336.astype('bool'), relay.reshape(var_2335.astype('bool'), relay.shape_of(uop_2336))) # shape=(14, 5, 1)
output = relay.Tuple([call_2340,var_2341,var_2342,bop_2345,])
output2 = relay.Tuple([call_2343,var_2341,var_2342,bop_2345,])
func_2356 = relay.Function([var_2335,var_2341,var_2342,], output)
mod['func_2356'] = func_2356
mod = relay.transform.InferType()(mod)
mutated_mod['func_2356'] = func_2356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mutated_mod.get_global_var('func_2356')
var_2358 = relay.var("var_2358", dtype = "float64", shape = (14, 5, 1))#candidate|2358|(14, 5, 1)|var|float64
var_2359 = relay.var("var_2359", dtype = "float64", shape = (770,))#candidate|2359|(770,)|var|float64
var_2360 = relay.var("var_2360", dtype = "int8", shape = (150, 3))#candidate|2360|(150, 3)|var|int8
call_2357 = func_2356_call(var_2358,var_2359,var_2360,)
output = call_2357
func_2361 = relay.Function([var_2358,var_2359,var_2360,], output)
mutated_mod['func_2361'] = func_2361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1426_call = mod.get_global_var('func_1426')
func_1427_call = mutated_mod.get_global_var('func_1427')
call_2385 = relay.TupleGetItem(func_1426_call(), 0)
call_2386 = relay.TupleGetItem(func_1427_call(), 0)
func_1534_call = mod.get_global_var('func_1534')
func_1535_call = mutated_mod.get_global_var('func_1535')
call_2398 = func_1534_call()
call_2399 = func_1534_call()
uop_2400 = relay.sigmoid(call_2385.astype('float32')) # shape=(4, 2, 13)
uop_2402 = relay.sigmoid(call_2386.astype('float32')) # shape=(4, 2, 13)
func_1972_call = mod.get_global_var('func_1972')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2403 = func_1972_call()
call_2404 = func_1972_call()
func_2055_call = mod.get_global_var('func_2055')
func_2058_call = mutated_mod.get_global_var('func_2058')
var_2422 = relay.var("var_2422", dtype = "float32", shape = (1120,))#candidate|2422|(1120,)|var|float32
call_2421 = relay.TupleGetItem(func_2055_call(relay.reshape(uop_2400.astype('float32'), [4, 2, 13]), relay.reshape(var_2422.astype('float32'), [1120,]), ), 3)
call_2423 = relay.TupleGetItem(func_2058_call(relay.reshape(uop_2400.astype('float32'), [4, 2, 13]), relay.reshape(var_2422.astype('float32'), [1120,]), ), 3)
output = relay.Tuple([call_2398,uop_2400,call_2403,call_2421,var_2422,])
output2 = relay.Tuple([call_2399,uop_2402,call_2404,call_2423,var_2422,])
func_2429 = relay.Function([var_2422,], output)
mod['func_2429'] = func_2429
mod = relay.transform.InferType()(mod)
var_2430 = relay.var("var_2430", dtype = "float32", shape = (1120,))#candidate|2430|(1120,)|var|float32
output = func_2429(var_2430)
func_2431 = relay.Function([var_2430], output)
mutated_mod['func_2431'] = func_2431
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2456 = relay.var("var_2456", dtype = "float64", shape = (10, 9, 6))#candidate|2456|(10, 9, 6)|var|float64
var_2457 = relay.var("var_2457", dtype = "float64", shape = (10, 9, 6))#candidate|2457|(10, 9, 6)|var|float64
bop_2458 = relay.less(var_2456.astype('bool'), relay.reshape(var_2457.astype('bool'), relay.shape_of(var_2456))) # shape=(10, 9, 6)
func_2294_call = mod.get_global_var('func_2294')
func_2295_call = mutated_mod.get_global_var('func_2295')
call_2470 = relay.TupleGetItem(func_2294_call(), 0)
call_2471 = relay.TupleGetItem(func_2295_call(), 0)
func_1461_call = mod.get_global_var('func_1461')
func_1465_call = mutated_mod.get_global_var('func_1465')
const_2474 = relay.const([[6.789216,-4.773207,-1.852026,7.973893,8.113565,1.788770,9.918671,5.157774,2.685554,-9.307351,-9.588846,0.877295,-9.772587,6.956601,2.707836,1.240265,4.383452,4.620652,-6.157222,-6.256695,0.868166,0.135164,2.183399,-2.829361,-2.291888,-0.486133,5.697931,-7.541353,-1.606351,7.373971,-9.508252,-7.921002,-6.702664,1.504022,-6.479268,-0.365903,-3.524096,-4.335110,-6.894816,-0.727488,6.676397,-7.347154,-0.510137,1.530617,-2.360924,-6.863636,4.090209,7.412709,-9.996232,8.753534,-1.866148,-0.969529,6.989472,-2.772171,4.833493,-7.147307,4.310459,-6.571893,7.416320,-6.047055,-1.241347,-5.821467,-4.934931,4.133635,3.538351,9.167274,-9.361766,-1.901212,2.140671,-8.014129,8.009506,6.339324,2.782940,-5.896528,0.910651,-6.478713,4.348681,-8.699602,-9.296151,-5.845149,-5.821036,7.126498,6.386622,-1.330732,2.773781,-3.509041,9.362675,7.649885,5.971029,-2.043733,9.674499,-2.859271,5.170995,-6.476920,-2.576951,0.362508,-5.425287,5.517146,-3.667024,-3.695136,-1.964540,-6.673189,5.669341,-5.386209,6.340205,9.298767,-3.734240,0.637318,-2.282807,9.106269,-5.673837,9.473479,-5.593771,4.135831,-4.759834,-5.596786,-5.175496,5.287572,-3.158192,-3.162789,-1.372962,-7.387193,1.520827,-2.005327,1.596172,-2.798396,0.063730,1.851624,-8.144240,-0.283876,-7.751932,-4.132160,-2.101227,-3.640270,4.555955,-1.242238,2.457906,-6.250595,6.942798,-8.342623,2.557717,-0.029623,0.197407,-9.658484,-5.443308,-8.348145,6.371109,4.772514,-9.032950,-6.558448,-9.753967,7.520045,-2.200210,-2.757822,4.691326,-5.295367,7.982846,9.938113,-0.742113,2.272725,-8.901209,-9.212874,-0.468343,7.343266,3.701779,-2.970065,2.842020,6.709572,-5.159197,7.137754,6.575498,-0.547440,-3.499389,0.178355,5.955533,-0.789002,-5.273206,4.673503,-7.935050,-5.858401,-1.217729,-4.590025,-2.986598,5.986505,2.926634,-2.882745,2.757467,-0.025236,-9.511963,-1.429337,-9.059686,-8.991157,1.749758,0.961322,-5.940334,-8.461956,-3.066414,-8.144264,-8.689419,8.417223,-5.768361,-4.303562,-6.250974,-9.703352,-6.837765,-9.976719,3.990740,-1.473065,-2.038609,-5.648262,8.153684,-9.060576,1.946734,-2.135835,-8.006308,-6.860766,-4.959994,-5.058281,3.270447,9.083974,-8.161520,-2.135370,-1.305325,-5.005100,-2.545144,-2.919232,0.499079,0.513584,8.618880,4.094192,-6.088207,9.934500,-0.596869,5.570454,-6.954783,-0.173010,9.259445,-5.627003,1.705164,-3.832011,1.625827,4.022678,8.574821,-3.193867,-5.822318,7.440908,9.050321,6.820866,-4.382465,2.141258,-7.701065,1.498963,-6.425752,3.673878,3.223406,9.916592,-9.922451,0.939176,7.337621,8.829694,1.844788,-0.550669,3.790010,9.207572,8.427047,-6.083238,-9.359170,7.277854,2.602891,-4.631453,-2.307363,3.284833,-3.471501,7.525832,-4.488623,7.198153,9.316643,-2.301733,-3.382599,-4.240762,-8.625691,0.615936,6.098818,4.401751,2.677399,0.613273,7.282326,4.293941,5.510195,-4.839383,9.248084,-5.837675,2.969103,8.687345,-4.141126,2.023658,-8.099548,0.062093,3.937370,-0.860163,-1.363575,4.861512,-7.690683,7.860432,5.433488,-7.018263,4.050978,2.842791,1.906572,-5.819131,-7.081510,1.435457,-4.174843,-0.922747,8.609288,5.918168,-2.713109,-0.423449,6.998961,8.178281,0.951995,9.921211,-3.488606,9.894403,3.869764,7.530029,-9.601451,-4.067106,1.013523,-4.618530,4.405116,-4.639605,-9.156570,-2.611007,-3.577095,-6.918443,0.107296,-7.753460,-7.779759,-9.803111,-3.685121,-3.856639,-5.844592,1.466787,3.916110,-8.673064,9.982149,6.392593,3.782697,5.000076,4.560499,7.308226,4.359495,-9.716549,-6.384146,4.324571,-6.039494,8.970887,-3.248402,-0.959531,-7.094060,-8.382040,9.527787,-7.603933,-9.883804,-7.076229,6.080360,-2.603354,1.154967,1.927019,0.201112,-4.774709,-4.981639,-8.842367,5.309175,-6.712505,-8.740378,6.268350,-4.576438,-5.402544,-4.720941,-0.447840,0.155531,-6.309203,2.737725,-4.186542,4.492558,-3.851570,-5.681740,-0.175189,3.743014,2.634827,-1.757697,2.611633,-8.306464,1.228723,-1.406019,4.886639,-1.618617,7.687189,8.441728,8.879591,-4.144053,-0.686239,-7.865796,-8.039710,3.933056,8.101694,9.300140,7.438529,5.135891,-8.413158,-5.479501,3.199709,1.188745,9.909359,-0.164484,0.180981,-1.743060,9.306792,7.672730,7.649924,7.158327,-8.959373,5.701355,1.033898,-5.387008,1.874178,1.355351,9.888929,1.227046,1.302335,5.304793,-6.662545,-7.145846,5.976383,-5.077795,-9.026255,0.345896,-2.195480,-5.702133,9.488025,7.057286,-2.791748,3.342359,3.224293,-2.212209,-6.643897,-4.475544,8.868521,-0.897704,-1.432267,7.437403,1.386588,2.132859,-7.470416,6.258049,-7.474830,-0.648556,2.193647,-1.424493,-1.528496,0.381455,5.192465,4.816711,-0.292496,5.762451,-4.828496,9.509385,0.761580,6.492361,2.673015,-5.933230,0.154661,-3.071208,-5.309897,-1.057796,8.698566,-7.330317,6.927447,6.811378,4.997884,-8.537768,-2.939927,4.467534,-0.732928,7.957760,4.294891,7.661718,-1.520671,4.362213,-5.420867,5.910633,0.143253,-8.280671,2.792812,-5.091215,-9.278008,3.380736,7.990950,5.638246,9.968176,5.623192,-5.082711,-0.263666,-0.142155,1.288303,7.868416,-7.327554,-9.624016,2.186152,-1.797337,9.703932,-0.411248,2.847850,1.225197,9.988754,5.370604,-8.709390,2.780658,-7.899529,-2.586543,-0.236603,-4.192393,3.544892,-2.398429,7.197061,-1.510275,9.076092,2.422699,-3.081040,9.567864,3.410621,-0.630863,-2.305610,-8.868519,8.429437,0.332684,-9.118496,-9.470506,-6.695487,-5.303792,-4.719543,-9.317740,5.313074,-7.894233,0.288861,7.388142,5.587591,-9.428936,1.498675,-4.192700,2.375072,9.456563,-7.942576,3.252668,-7.142576,-2.725681,1.354550,-3.029380,-4.367197,-7.150445,3.075750,-4.146641,-7.207306,-1.184699,-7.403193,-8.689989,-0.927577,6.164509,-6.681689,-5.747788,5.045284,9.962673,0.769113,9.567833,-9.953982,2.761057,-5.441166,-8.741895,-8.984064,-0.938609,-3.764059,7.902846,-0.040948,6.251213,8.665964,0.934169,-6.543581,0.262399,4.401098,9.148214,3.408359,4.379102,-7.220197,-5.805386,-8.293379,8.095124,6.689418,-4.135843,-2.348745,-9.033898,6.615041,-2.811927,-9.671586,6.961323,-0.469125,-4.078482,-3.824754,0.370694,7.229786,5.717536,6.578361,-5.103498,5.186565,-7.491735,-2.005907,-2.997560,5.458795,1.923266,-3.820248,9.621143,6.542360,-1.762302,9.295138,3.598602,0.614283,-6.754226,8.156235,-1.947647,8.641544,-7.019114,1.236374,5.732621,8.362240,3.050750,-0.327296,9.226096,-2.976397,8.581732,5.312490,-2.736855,9.830272,0.326241,-0.991681,-0.366601,7.726109,2.907008,8.959796,8.561481,-7.916025,-7.449453,7.530132,-9.127433,-6.968935,2.246405,-2.873571,-4.921838,-2.418787,0.995654,7.547839,7.180004,-7.111035,-4.078341,0.771339,8.125816,-6.532377,-6.203344,9.909004,0.818622,-6.851667,8.571084,-6.092646,4.472671,-4.564959,8.135593,-4.909832,-6.882352,-8.926852,-2.915991,-6.157759,9.406657,0.871108,-0.918425,-8.854638,-5.341969,-7.405200,-0.432547,-2.057212,9.938217,-6.920906,-9.900174,3.298033,2.550061,3.634544,-9.818947,9.224824,-7.290103,1.838277,5.951525,-8.536583,7.736204,-3.626672,-1.807126,6.082602,1.880189,-8.177837,-9.343868,-7.554995,5.469998,9.392723,2.658283,8.212702,6.599144,-6.624275,1.719008,4.516467,6.362515,-0.669793,-0.242097,9.408960,4.949583,7.246642,-6.507923,1.333844,-5.698384,8.114835,-7.774534,2.792337,1.215511,-8.069704,2.110340,1.635430,0.827718,-5.525275,6.436235,4.414539,8.882395,-7.392308,-2.840259,-7.341112,-5.500654,-8.933782,-8.119390,6.817629,7.726394,-7.085426,6.281908,1.935400,9.013573,-9.854774,-2.695346,8.854862,-3.133397,7.858108,-4.485240,9.846532,9.179314,2.239150,-4.276530,7.884448,-7.843657,-7.214912,-2.201514,2.178227,0.043820,-4.218868,6.137911,4.383972,-6.696621]], dtype = "float64")#candidate|2474|(1, 770)|const|float64
const_2475 = relay.const([[-4,3,9],[-1,-10,-4],[8,-6,7],[5,-6,-7],[3,-1,-1],[9,3,-7],[6,1,-5],[-6,-1,8],[-6,-1,3],[9,6,-5],[1,4,-5],[-8,-1,7],[-4,-8,7],[2,8,-8],[-9,-7,7],[4,5,3],[1,3,10],[7,-2,6],[-1,-5,-2],[-10,-9,8],[10,-5,-1],[6,-8,3],[8,-10,5],[2,-6,4],[1,9,-2],[6,-10,-6],[-7,-5,1],[5,-10,-10],[2,-2,10],[-6,-2,8],[3,-4,5],[8,-2,9],[2,3,-8],[8,6,10],[-6,4,5],[-1,-8,-3],[-7,-4,-3],[2,-6,9],[7,-6,7],[-8,6,2],[6,10,-10],[-6,6,-4],[3,-6,3],[3,-3,5],[-6,-5,-7],[-4,2,-6],[10,7,-9],[7,-9,1],[2,-5,2],[7,3,2],[10,-2,1],[3,9,9],[1,2,-3],[-5,6,10],[-10,-5,10],[4,3,-10],[-5,8,-3],[3,-7,7],[7,-2,1],[-10,10,5],[-3,8,6],[-2,3,4],[1,3,2],[5,-3,2],[-1,-7,8],[-9,-3,-8],[-6,-10,4],[-8,-1,10],[-2,-3,-6],[-1,7,-9],[9,7,6],[-1,-8,5],[4,5,-4],[-9,4,1],[8,8,-9],[-2,5,-2],[-7,-5,-5],[6,-4,5],[8,4,5],[-3,-9,-10],[-5,9,-4],[-3,6,-7],[-8,10,-6],[10,6,-7],[1,-6,10],[-1,10,7],[2,6,-7],[1,-8,5],[-4,7,1],[3,-3,-4],[-6,-9,4],[-2,-5,-6],[-3,-6,-6],[2,-8,-1],[2,-2,-4],[-7,-1,9],[-2,2,3],[-10,3,-7],[8,8,-10],[-8,-5,-7],[-7,1,3],[-3,-5,4],[3,2,1],[6,1,-9],[2,-3,-8],[-6,-9,2],[9,10,-2],[-9,10,10],[3,1,9],[6,7,-10],[2,-1,5],[4,1,-7],[8,-6,9],[8,-4,-5],[2,6,-1],[-6,4,-5],[-1,10,-10],[-2,3,7],[-8,4,-5],[-4,-2,-6],[-9,-7,10],[-10,8,-2],[9,9,6],[3,-10,-3],[-8,3,9],[3,4,1],[-2,4,10],[-10,-1,-10],[4,10,-2],[8,2,-8],[-1,-1,2],[6,2,6],[7,3,-7],[-7,-8,-3],[-10,8,2],[-6,-10,-5],[-8,8,4],[-4,-2,-1],[9,9,4],[6,5,-7],[2,8,-10],[-4,-8,8],[6,1,8],[10,9,-5],[-1,7,4],[3,-7,8],[5,-8,2],[-3,10,10],[-7,5,10],[-8,-8,-9]], dtype = "int8")#candidate|2475|(150, 3)|const|int8
call_2473 = relay.TupleGetItem(func_1461_call(relay.reshape(const_2474.astype('float64'), [11, 10, 7]), relay.reshape(const_2475.astype('int8'), [1, 450]), ), 5)
call_2476 = relay.TupleGetItem(func_1465_call(relay.reshape(const_2474.astype('float64'), [11, 10, 7]), relay.reshape(const_2475.astype('int8'), [1, 450]), ), 5)
func_1664_call = mod.get_global_var('func_1664')
func_1666_call = mutated_mod.get_global_var('func_1666')
call_2481 = func_1664_call()
call_2482 = func_1664_call()
bop_2483 = relay.floor_divide(var_2456.astype('float32'), relay.reshape(var_2457.astype('float32'), relay.shape_of(var_2456))) # shape=(10, 9, 6)
bop_2486 = relay.maximum(bop_2483.astype('int32'), relay.reshape(var_2456.astype('int32'), relay.shape_of(bop_2483))) # shape=(10, 9, 6)
uop_2495 = relay.exp(var_2457.astype('float32')) # shape=(10, 9, 6)
bop_2497 = relay.multiply(bop_2483.astype('int8'), relay.reshape(uop_2495.astype('int8'), relay.shape_of(bop_2483))) # shape=(10, 9, 6)
output = relay.Tuple([bop_2458,call_2470,call_2473,const_2474,const_2475,call_2481,bop_2486,bop_2497,])
output2 = relay.Tuple([bop_2458,call_2471,call_2476,const_2474,const_2475,call_2482,bop_2486,bop_2497,])
func_2505 = relay.Function([var_2456,var_2457,], output)
mod['func_2505'] = func_2505
mod = relay.transform.InferType()(mod)
var_2506 = relay.var("var_2506", dtype = "float64", shape = (10, 9, 6))#candidate|2506|(10, 9, 6)|var|float64
var_2507 = relay.var("var_2507", dtype = "float64", shape = (10, 9, 6))#candidate|2507|(10, 9, 6)|var|float64
output = func_2505(var_2506,var_2507,)
func_2508 = relay.Function([var_2506,var_2507,], output)
mutated_mod['func_2508'] = func_2508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1664_call = mod.get_global_var('func_1664')
func_1666_call = mutated_mod.get_global_var('func_1666')
call_2554 = func_1664_call()
call_2555 = func_1664_call()
uop_2560 = relay.cosh(call_2554.astype('float64')) # shape=(4, 2, 13)
uop_2562 = relay.cosh(call_2555.astype('float64')) # shape=(4, 2, 13)
output = uop_2560
output2 = uop_2562
func_2563 = relay.Function([], output)
mod['func_2563'] = func_2563
mod = relay.transform.InferType()(mod)
mutated_mod['func_2563'] = func_2563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2563_call = mutated_mod.get_global_var('func_2563')
call_2564 = func_2563_call()
output = call_2564
func_2565 = relay.Function([], output)
mutated_mod['func_2565'] = func_2565
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2583 = relay.const([[[1.208466,9.157348,-1.538112,9.537536,-3.937772,0.453935,3.144599,-3.618130],[9.463766,1.218270,7.382217,-4.598222,-8.101197,0.967145,5.746537,5.380537],[-9.234379,1.224401,-4.205509,-2.235606,-8.185471,-2.968265,-3.364498,0.372158],[6.328773,7.050228,-7.335632,-3.631930,5.879802,3.541267,-1.452788,5.876799],[-0.874770,0.158372,4.954104,1.242063,-3.742504,-8.859571,-9.707860,-0.192163],[-6.937188,0.290936,-2.986416,-5.791720,2.525602,-2.887839,-8.390260,-5.401521],[-5.505286,4.911372,6.651592,-2.223758,-6.743896,4.111450,-5.019914,-8.716788],[1.193858,3.133653,-0.638105,4.504591,-4.574356,7.576661,4.268778,1.722718],[-6.915269,-0.899406,9.755757,7.546913,7.005128,-5.180608,-9.977949,-7.829778],[-8.015747,5.670039,1.883272,-6.120439,-0.616548,-2.557003,5.605640,-1.762822],[-3.114102,-0.219406,7.026656,-3.486722,-1.996493,-8.807234,9.099280,-1.961071],[-1.862726,-3.858779,3.151094,0.158990,5.450575,8.079593,9.853734,-4.765567]],[[-9.307565,6.559065,-0.703205,-7.512926,8.880072,0.680826,-9.338818,-3.898652],[-0.965870,-2.935662,-4.139757,6.276070,-8.254463,-1.481887,-1.536035,0.491787],[4.219137,-3.674377,-0.600256,-2.814936,1.538485,5.383267,-5.009054,0.942243],[-1.622434,-5.847935,7.008765,-3.346647,-1.606773,-9.409281,6.620668,-5.885229],[-8.865436,-2.181632,7.228276,-1.036457,9.405599,-3.713806,-9.891590,-7.304929],[-0.845528,7.746335,-6.049857,5.712177,-1.994877,-8.898703,7.435341,6.004269],[6.115349,1.537926,-8.075630,-8.990621,8.581503,6.546918,-0.116610,-3.400069],[-5.005124,-9.673315,-3.548926,-2.822027,7.660398,-0.079773,5.378628,4.528831],[-0.841075,7.329794,-5.524742,-4.892470,4.586463,3.551424,4.545243,-1.934532],[5.476195,-4.386900,-9.244698,4.441652,2.409961,-3.482806,2.397319,-3.427816],[-8.626377,-2.938946,8.845559,-4.211925,9.589227,-8.767579,-6.341623,-5.563699],[1.748870,3.406712,8.036398,-9.858939,-4.720963,7.497066,-8.475621,9.097634]],[[-6.137671,0.300935,-9.989633,-8.816196,-9.591574,-6.952313,2.819086,-9.691106],[-5.956868,-1.495372,-2.509289,-3.868824,3.391493,-8.062668,9.255727,7.150088],[-2.829239,7.618709,-8.401563,-9.130609,-0.720874,5.730614,6.295430,8.992939],[6.246072,-1.616327,-5.495570,7.030486,-0.055904,5.840816,3.203632,8.252071],[4.949170,9.816036,-1.097902,-8.690041,-8.867266,-5.880288,-4.688702,4.106761],[1.158450,7.595324,1.813664,-5.004113,0.027367,0.438294,-7.793661,-9.989805],[-8.332105,2.122768,2.003257,3.537531,-4.687760,9.824565,6.995039,-9.835161],[-9.348616,-1.334917,-2.266073,-1.949003,-0.190734,8.261147,-2.621064,6.170275],[4.281270,-6.780450,-9.670447,-0.098724,2.212586,5.308493,6.247155,-8.411876],[-5.347433,5.985678,3.798864,-2.373610,0.523770,-8.299965,6.147608,-6.775925],[-7.744547,3.308062,0.081740,9.062734,1.540788,6.700068,4.689320,7.482070],[0.140506,-2.338776,-7.691361,-5.550271,-1.456325,5.003168,-9.940501,-7.622664]],[[-3.987393,-9.534418,-9.382535,4.238314,-3.910172,-9.787916,-8.097380,9.599722],[-9.192991,-2.230038,-0.715890,-1.713601,7.943100,-4.360177,-2.226841,-1.338988],[-6.877197,-3.604097,4.588447,8.349882,-1.895607,4.428266,3.528462,-0.411058],[-1.796192,-0.381133,-4.923565,-0.569195,-5.448499,5.442120,1.680514,-2.806859],[-7.518739,-5.339055,-3.048480,-5.175977,6.268438,2.638281,-8.409901,-0.587034],[-6.987847,-1.967458,-2.724290,-7.617321,9.142177,1.010500,0.372338,3.813750],[-5.129299,0.109774,4.390506,4.207733,8.205117,6.393331,2.870146,6.661285],[-8.151504,-2.872934,-3.285289,9.026886,-3.285289,-3.015468,-3.930207,-4.640087],[-5.575369,8.241277,3.972526,-4.528912,7.233183,-3.179528,-7.853118,-2.612893],[1.874543,5.469919,8.094773,-4.506042,3.728519,-7.145887,-9.464887,-8.641528],[-2.681443,-5.534293,-7.660422,3.869529,-3.002584,-9.698391,9.808643,8.561439],[9.733731,-0.762938,2.258937,3.726737,1.711078,9.958619,-1.480703,-7.656872]],[[9.658798,-6.018900,-2.746612,-3.386733,3.431993,6.130411,9.523427,-7.149077],[9.091800,-8.317936,9.514231,8.563564,5.082681,-3.388816,-3.096479,-5.446854],[2.619000,4.204011,-9.585348,-8.659958,8.094298,-3.670428,-9.196657,0.773021],[3.400949,-2.698666,2.554622,-0.763393,-5.536084,-0.952841,2.400349,0.016004],[0.604836,-1.675209,-3.580903,-9.761422,-0.851677,-6.334902,6.323364,-5.313534],[0.283614,8.570882,-2.320902,1.408510,-6.813304,7.013421,3.778581,-5.540049],[-3.206330,-1.574622,6.968117,-7.623316,-1.830147,-0.907565,-5.364788,-7.547906],[2.974838,3.220915,9.909939,9.907737,-8.585923,-2.741263,1.640077,3.713429],[3.697542,-0.979532,-8.863755,8.096498,8.170502,-5.155789,-5.080278,-8.911112],[-1.310457,-8.705247,-0.263277,4.414825,-0.722504,-1.988056,-0.812460,8.504729],[-5.397765,-9.683749,-5.327801,8.363765,2.723200,-2.960226,-4.253644,6.364468],[-5.450568,8.000409,5.744600,5.168298,-3.587243,9.512100,6.486929,-7.575764]],[[-1.869357,-6.049611,-9.713198,0.058469,1.777338,-6.134800,-8.878754,-5.181914],[4.685971,6.616681,-0.921642,-6.848367,3.006774,6.121151,9.685709,-6.792613],[-5.923446,-1.998300,-5.527805,-3.682670,3.837406,0.929191,0.448056,-4.893234],[4.177493,5.451784,6.657827,-0.305592,-1.467856,6.367549,-3.184175,1.865822],[7.692466,6.594929,2.993822,3.366205,-1.971793,-5.712946,2.637541,-2.347688],[7.408348,-3.185043,-0.586757,5.293571,7.700382,-0.077389,-0.437885,-6.202780],[6.100566,5.824206,-4.064856,-3.776180,2.237377,-8.269565,1.509333,-3.637139],[-3.044338,1.786558,7.926554,3.667931,-9.159396,-4.439129,-1.614177,-4.723675],[2.428679,-4.483432,-2.967434,-2.612536,-7.588572,-9.413706,-4.992941,-7.279421],[-8.540315,4.429287,-6.511280,-6.762697,-1.090905,5.146303,7.193763,-8.014715],[4.071952,-8.958595,5.102912,0.968873,6.694629,-8.109570,-5.764766,9.224048],[-6.697722,9.062345,4.280951,8.464827,-8.514458,-9.716786,-2.011233,-8.433929]],[[-1.989478,-7.216721,-5.165162,5.053414,2.566909,1.424529,-5.129235,-5.946343],[7.135729,0.798866,7.437923,-5.432251,8.985458,-1.332653,6.373820,1.590183],[8.214181,-2.649168,2.384236,-0.929251,2.479942,1.767454,-2.448358,-5.145124],[3.012724,-0.048507,0.756963,-9.177115,-0.712275,-0.842729,-0.258220,1.758055],[1.550661,2.111893,8.280951,-5.858113,6.914231,-3.749881,3.463245,7.624421],[-0.002717,-8.166690,-4.600739,-3.239551,1.838984,-2.545679,-3.732613,5.752472],[5.251452,-3.291526,-8.945683,3.042080,-3.042374,4.755184,1.062269,-5.622609],[0.173999,9.256725,-9.357353,-4.139291,-1.920754,2.340636,-7.043016,4.057711],[6.900638,-3.635533,-9.400994,2.740940,4.888247,-4.124128,6.947152,-8.563225],[4.950643,-9.354446,3.254341,5.407318,8.439013,-4.592066,-6.276701,-2.666525],[1.665158,8.403417,-3.932592,0.413120,-9.012350,-0.352997,-0.454197,-7.293269],[-4.284484,6.366126,4.255996,-8.118787,4.517911,-2.314033,-0.672136,9.182231]],[[9.086729,7.394332,1.867562,5.529071,-1.008758,2.069955,-5.121287,7.656941],[-2.819241,-1.706612,7.703813,1.619017,6.000890,-4.912042,-6.516770,0.675068],[2.294793,5.767890,8.361763,-1.777672,6.502321,4.598453,0.766726,-9.791548],[5.882752,6.402068,7.478193,-2.573254,-1.373035,-9.126471,-1.787123,-0.896824],[-9.491623,3.035605,-1.887730,-3.343515,0.009954,3.168787,-9.090032,7.753754],[-3.472556,-4.690191,0.066504,-9.080265,-5.125944,-4.476124,-6.826782,-1.621279],[-1.913850,1.569373,0.631514,-1.382092,5.369197,1.008025,-4.315398,9.033295],[6.536834,-5.199222,-9.547288,-9.990830,-6.002329,-1.848774,3.410299,0.193205],[-0.652502,-3.507423,-3.397936,-5.960761,-3.588373,3.825628,-6.078377,0.332796],[3.608173,-7.023050,-2.357684,-7.936515,7.504800,7.834340,2.910752,1.461852],[5.892805,2.032807,-2.141954,9.726093,3.266177,6.736728,-1.440222,7.847806],[7.373538,7.418908,-9.069295,-1.794585,-6.747867,-6.279216,-0.615978,7.174800]],[[4.116427,-0.521346,9.301136,-0.192509,-3.510407,-6.593928,-7.700415,-0.168216],[-2.140773,0.076442,3.920910,-7.897159,5.936911,4.881761,-3.637290,-7.042169],[0.242313,-7.425031,-0.510725,8.645131,-1.407427,3.958715,6.319531,-5.414130],[-3.458943,-2.524089,0.064293,9.227011,6.828457,7.046259,-8.047432,9.238281],[-3.136486,-9.736286,-2.434423,2.390466,6.741380,9.589792,6.236450,-8.745330],[2.085171,1.855375,-9.317915,-5.791790,-9.239952,9.974427,1.743200,-9.230577],[-1.564611,-0.487422,8.262660,-2.202304,3.222296,6.597549,9.203761,-7.437653],[8.414458,-5.685495,-5.389180,3.352812,-8.315794,3.971983,-2.505861,5.952173],[-3.097528,2.503296,0.876849,4.141950,-0.609178,5.629325,-5.974776,-1.205522],[-9.253467,2.186679,2.882242,8.057715,-7.465868,4.588122,-7.814070,0.970705],[9.357980,-7.698329,-7.785345,2.501925,6.203450,6.000014,-0.895979,7.982151],[-0.730074,1.735519,1.697887,5.470160,-4.069027,-4.581032,8.482529,6.406644]],[[2.596562,9.987426,6.392713,-4.380640,-0.781724,5.581239,7.434873,4.690533],[9.282368,-4.657845,9.386705,-0.008263,-4.127483,-0.021565,8.434074,-3.941416],[-6.969605,-4.368991,-8.569118,-1.514942,-0.376235,2.553071,-8.797443,9.734297],[-1.504309,-7.776844,1.759735,0.803235,-7.907986,3.637712,7.904232,-3.322283],[-4.568599,-7.473497,0.939835,8.876112,-6.787163,9.745949,9.830803,-9.480213],[-2.009547,9.043283,-4.349103,-1.796616,-8.302797,-9.225895,4.511255,8.728089],[1.616301,9.636848,-4.430468,9.658660,3.418626,1.001336,2.086073,-5.150839],[7.904782,-2.542748,-0.408352,-8.452490,-9.694934,4.247006,4.200456,0.491171],[-7.559231,2.403375,2.539287,7.410778,7.105787,6.646637,-4.231795,0.621271],[4.422540,5.935028,-4.924915,7.642211,-9.615338,-8.303685,0.563944,4.796219],[-1.310137,7.000629,3.116232,6.135518,0.258691,3.591165,-2.729960,5.470323],[-4.606976,-5.686646,-8.895878,-1.524311,-0.969019,-3.764987,-0.007564,9.041881]],[[-7.525594,9.346570,1.646356,2.351554,7.206336,-9.967139,5.023018,-2.815159],[4.765190,-6.209159,-5.610624,-2.350951,2.504646,-4.515490,-2.254690,0.937290],[-4.494033,-8.893855,8.758264,9.144197,5.032273,-9.224469,0.273375,-9.552467],[3.776132,6.502609,6.342440,-4.796245,-1.979759,3.866043,-6.341290,-5.689808],[8.969249,-6.872440,-1.135003,6.581365,-1.621213,-6.267191,-2.204010,-8.693665],[2.330291,5.970768,9.624009,1.606703,0.918083,5.347921,3.024956,-6.714340],[-5.530388,5.849550,-6.652459,-8.991417,2.650622,7.152049,-6.243691,9.974661],[0.445334,-6.192153,8.151115,-6.653933,-3.844371,-5.732813,1.640795,-5.918835],[-8.495020,-3.316303,4.415856,4.312245,0.407937,-3.221232,-8.999206,5.547533],[4.744757,-8.513141,-7.969250,8.666428,-6.072772,-6.088231,-2.906787,-3.308022],[3.251874,-1.363791,4.653525,3.054084,-9.274430,-4.641967,3.736626,-6.405749],[-8.024856,1.107714,8.730059,0.090450,1.184252,-7.992638,6.584075,-0.769955]],[[3.858868,6.315106,-2.254856,-4.963754,-5.373256,8.412670,-5.236696,-1.590015],[-1.018521,8.781186,-5.353053,-3.106164,9.445580,-2.282301,7.068199,0.196820],[2.417560,6.840637,5.640063,-3.744386,3.317970,8.778177,8.469997,-6.377636],[-2.539413,8.862800,-4.546765,-1.067723,-7.382380,-0.151859,7.342345,1.894146],[-1.327955,-6.039284,-0.061666,-3.941264,-9.490398,8.302826,7.816423,0.233165],[-3.090244,9.060857,-7.333440,-4.470710,-0.638750,-8.467605,-6.376641,-5.200744],[1.207258,-6.384389,0.545632,0.170692,-2.516406,7.884787,-9.091382,8.460381],[5.211871,4.742616,-4.184266,3.509045,4.494368,-5.448882,2.411329,-2.455611],[8.028367,-0.116955,7.507323,-3.841381,-9.979084,-8.216145,1.526794,4.151444],[-2.919771,-3.231134,-2.669132,1.490517,-3.819019,3.355220,-2.485078,-7.082063],[-8.898808,-6.588843,-3.226419,-3.853613,-1.491968,7.592031,-7.938353,-1.423264],[1.801137,-0.932502,-9.798514,1.759448,5.965863,-4.887629,4.898251,-8.073105]],[[7.593556,9.851296,8.943160,8.656499,-3.545848,0.671267,8.561310,8.235128],[3.797452,6.832776,9.887835,-7.029130,4.705054,-6.878397,5.108488,5.507382],[7.850070,-4.507133,-9.029359,-1.513715,-0.915851,8.294833,-3.681676,-5.383555],[-5.299023,5.512862,6.086674,7.575015,0.829384,2.208002,-1.890627,1.202479],[5.012254,-9.217867,4.756463,6.821825,6.225070,-6.296551,3.518930,5.806373],[-1.530935,-3.933984,-0.609563,-0.789289,5.695107,-7.098540,-5.410136,-3.868529],[9.289398,5.928883,1.680252,-6.560586,-4.192529,-2.424022,3.449101,6.858210],[3.419253,4.478172,0.573010,2.041243,4.323894,-0.384881,9.913849,-1.364802],[-2.619227,-2.934194,-2.296657,-1.487170,3.695612,-9.525308,-1.640397,-2.690253],[8.266685,1.502496,5.434316,-0.955268,-9.223304,3.907997,4.275711,-0.043329],[2.339758,3.298406,9.528762,-3.253918,3.281472,9.594042,3.585337,1.844661],[-5.034057,0.461415,6.255473,-3.688033,3.576593,4.607838,4.410381,-1.412201]],[[-5.532637,-0.933520,7.548275,-9.472319,-7.922888,-5.324021,8.530429,-3.324294],[-3.774020,-2.923964,5.457677,6.689864,-0.088320,7.048960,-6.788764,-5.493700],[-7.646055,-7.709385,-6.918069,-6.028910,-3.255414,-5.319529,-7.137542,8.899879],[-5.442000,-3.715345,5.339768,-7.533646,-0.917966,3.293304,0.195124,-1.497259],[8.067912,6.237151,3.568448,-9.887735,-0.315628,-9.679736,1.438639,6.089512],[3.498160,-4.409051,1.101755,-0.193963,-6.335049,-9.097162,4.006174,8.346838],[1.387870,-8.977915,-9.942087,5.516083,3.923274,2.804592,5.498953,7.928448],[-7.067106,2.948025,-3.181875,-1.812297,-5.142624,6.810453,4.015553,-7.267668],[9.261527,2.986862,3.853165,6.037845,-7.825007,2.647378,0.107655,-1.572236],[-7.646476,-4.693724,4.159724,-3.805808,5.659084,-1.424357,-3.481319,-0.150208],[1.254006,-4.420532,-4.121257,-7.110180,-3.409507,-9.560308,-7.234023,-5.838532],[6.319658,8.681457,4.890472,-4.002217,2.511855,3.538037,4.596181,-1.436540]]], dtype = "float32")#candidate|2583|(14, 12, 8)|const|float32
uop_2584 = relay.cosh(const_2583.astype('float32')) # shape=(14, 12, 8)
func_1534_call = mod.get_global_var('func_1534')
func_1535_call = mutated_mod.get_global_var('func_1535')
call_2589 = func_1534_call()
call_2590 = func_1534_call()
var_2591 = relay.var("var_2591", dtype = "float32", shape = (14, 12, 8))#candidate|2591|(14, 12, 8)|var|float32
bop_2592 = relay.minimum(uop_2584.astype('float32'), relay.reshape(var_2591.astype('float32'), relay.shape_of(uop_2584))) # shape=(14, 12, 8)
uop_2610 = relay.log(bop_2592.astype('float32')) # shape=(14, 12, 8)
uop_2612 = relay.atanh(uop_2610.astype('float32')) # shape=(14, 12, 8)
output = relay.Tuple([call_2589,uop_2612,])
output2 = relay.Tuple([call_2590,uop_2612,])
func_2642 = relay.Function([var_2591,], output)
mod['func_2642'] = func_2642
mod = relay.transform.InferType()(mod)
mutated_mod['func_2642'] = func_2642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2643 = relay.var("var_2643", dtype = "float32", shape = (14, 12, 8))#candidate|2643|(14, 12, 8)|var|float32
func_2642_call = mutated_mod.get_global_var('func_2642')
call_2644 = func_2642_call(var_2643)
output = call_2644
func_2645 = relay.Function([var_2643], output)
mutated_mod['func_2645'] = func_2645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1664_call = mod.get_global_var('func_1664')
func_1666_call = mutated_mod.get_global_var('func_1666')
call_2744 = func_1664_call()
call_2745 = func_1664_call()
output = call_2744
output2 = call_2745
func_2749 = relay.Function([], output)
mod['func_2749'] = func_2749
mod = relay.transform.InferType()(mod)
mutated_mod['func_2749'] = func_2749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2749_call = mutated_mod.get_global_var('func_2749')
call_2750 = func_2749_call()
output = call_2750
func_2751 = relay.Function([], output)
mutated_mod['func_2751'] = func_2751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2563_call = mod.get_global_var('func_2563')
func_2565_call = mutated_mod.get_global_var('func_2565')
call_2804 = func_2563_call()
call_2805 = func_2563_call()
output = call_2804
output2 = call_2805
func_2810 = relay.Function([], output)
mod['func_2810'] = func_2810
mod = relay.transform.InferType()(mod)
mutated_mod['func_2810'] = func_2810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2810_call = mutated_mod.get_global_var('func_2810')
call_2811 = func_2810_call()
output = call_2811
func_2812 = relay.Function([], output)
mutated_mod['func_2812'] = func_2812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2810_call = mod.get_global_var('func_2810')
func_2812_call = mutated_mod.get_global_var('func_2812')
call_2816 = func_2810_call()
call_2817 = func_2810_call()
func_1814_call = mod.get_global_var('func_1814')
func_1816_call = mutated_mod.get_global_var('func_1816')
call_2822 = relay.TupleGetItem(func_1814_call(), 0)
call_2823 = relay.TupleGetItem(func_1816_call(), 0)
func_2642_call = mod.get_global_var('func_2642')
func_2645_call = mutated_mod.get_global_var('func_2645')
var_2826 = relay.var("var_2826", dtype = "float32", shape = (1344,))#candidate|2826|(1344,)|var|float32
call_2825 = relay.TupleGetItem(func_2642_call(relay.reshape(var_2826.astype('float32'), [14, 12, 8])), 1)
call_2827 = relay.TupleGetItem(func_2645_call(relay.reshape(var_2826.astype('float32'), [14, 12, 8])), 1)
output = relay.Tuple([call_2816,call_2822,call_2825,var_2826,])
output2 = relay.Tuple([call_2817,call_2823,call_2827,var_2826,])
func_2848 = relay.Function([var_2826,], output)
mod['func_2848'] = func_2848
mod = relay.transform.InferType()(mod)
mutated_mod['func_2848'] = func_2848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2849 = relay.var("var_2849", dtype = "float32", shape = (1344,))#candidate|2849|(1344,)|var|float32
func_2848_call = mutated_mod.get_global_var('func_2848')
call_2850 = func_2848_call(var_2849)
output = call_2850
func_2851 = relay.Function([var_2849], output)
mutated_mod['func_2851'] = func_2851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mod.get_global_var('func_1972')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2859 = func_1972_call()
call_2860 = func_1972_call()
output = relay.Tuple([call_2859,])
output2 = relay.Tuple([call_2860,])
func_2863 = relay.Function([], output)
mod['func_2863'] = func_2863
mod = relay.transform.InferType()(mod)
mutated_mod['func_2863'] = func_2863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2863_call = mutated_mod.get_global_var('func_2863')
call_2864 = func_2863_call()
output = call_2864
func_2865 = relay.Function([], output)
mutated_mod['func_2865'] = func_2865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_2900 = relay.TupleGetItem(func_1739_call(), 0)
call_2901 = relay.TupleGetItem(func_1741_call(), 0)
output = call_2900
output2 = call_2901
func_2916 = relay.Function([], output)
mod['func_2916'] = func_2916
mod = relay.transform.InferType()(mod)
output = func_2916()
func_2917 = relay.Function([], output)
mutated_mod['func_2917'] = func_2917
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2957 = relay.var("var_2957", dtype = "float64", shape = (12, 12, 13))#candidate|2957|(12, 12, 13)|var|float64
uop_2958 = relay.asin(var_2957.astype('float64')) # shape=(12, 12, 13)
func_51_call = mod.get_global_var('func_51')
func_54_call = mutated_mod.get_global_var('func_54')
var_2963 = relay.var("var_2963", dtype = "float32", shape = (1120,))#candidate|2963|(1120,)|var|float32
call_2962 = relay.TupleGetItem(func_51_call(relay.reshape(var_2963.astype('float32'), [5, 14, 16])), 0)
call_2964 = relay.TupleGetItem(func_54_call(relay.reshape(var_2963.astype('float32'), [5, 14, 16])), 0)
func_2294_call = mod.get_global_var('func_2294')
func_2295_call = mutated_mod.get_global_var('func_2295')
call_2969 = relay.TupleGetItem(func_2294_call(), 2)
call_2970 = relay.TupleGetItem(func_2295_call(), 2)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_2984 = func_1626_call()
call_2985 = func_1626_call()
bop_2990 = relay.logical_xor(var_2957.astype('uint64'), relay.reshape(uop_2958.astype('uint64'), relay.shape_of(var_2957))) # shape=(12, 12, 13)
output = relay.Tuple([call_2962,var_2963,call_2969,call_2984,bop_2990,])
output2 = relay.Tuple([call_2964,var_2963,call_2970,call_2985,bop_2990,])
func_3016 = relay.Function([var_2957,var_2963,], output)
mod['func_3016'] = func_3016
mod = relay.transform.InferType()(mod)
mutated_mod['func_3016'] = func_3016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3016_call = mutated_mod.get_global_var('func_3016')
var_3018 = relay.var("var_3018", dtype = "float64", shape = (12, 12, 13))#candidate|3018|(12, 12, 13)|var|float64
var_3019 = relay.var("var_3019", dtype = "float32", shape = (1120,))#candidate|3019|(1120,)|var|float32
call_3017 = func_3016_call(var_3018,var_3019,)
output = call_3017
func_3020 = relay.Function([var_3018,var_3019,], output)
mutated_mod['func_3020'] = func_3020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1534_call = mod.get_global_var('func_1534')
func_1535_call = mutated_mod.get_global_var('func_1535')
call_3041 = func_1534_call()
call_3042 = func_1534_call()
output = relay.Tuple([call_3041,])
output2 = relay.Tuple([call_3042,])
func_3046 = relay.Function([], output)
mod['func_3046'] = func_3046
mod = relay.transform.InferType()(mod)
mutated_mod['func_3046'] = func_3046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mutated_mod.get_global_var('func_3046')
call_3047 = func_3046_call()
output = call_3047
func_3048 = relay.Function([], output)
mutated_mod['func_3048'] = func_3048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1534_call = mod.get_global_var('func_1534')
func_1535_call = mutated_mod.get_global_var('func_1535')
call_3125 = func_1534_call()
call_3126 = func_1534_call()
var_3139 = relay.var("var_3139", dtype = "float32", shape = (4, 2, 13))#candidate|3139|(4, 2, 13)|var|float32
bop_3140 = relay.not_equal(call_3125.astype('bool'), relay.reshape(var_3139.astype('bool'), relay.shape_of(call_3125))) # shape=(4, 2, 13)
bop_3143 = relay.not_equal(call_3126.astype('bool'), relay.reshape(var_3139.astype('bool'), relay.shape_of(call_3126))) # shape=(4, 2, 13)
output = bop_3140
output2 = bop_3143
func_3152 = relay.Function([var_3139,], output)
mod['func_3152'] = func_3152
mod = relay.transform.InferType()(mod)
mutated_mod['func_3152'] = func_3152
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3153 = relay.var("var_3153", dtype = "float32", shape = (4, 2, 13))#candidate|3153|(4, 2, 13)|var|float32
func_3152_call = mutated_mod.get_global_var('func_3152')
call_3154 = func_3152_call(var_3153)
output = call_3154
func_3155 = relay.Function([var_3153], output)
mutated_mod['func_3155'] = func_3155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1426_call = mod.get_global_var('func_1426')
func_1427_call = mutated_mod.get_global_var('func_1427')
call_3237 = relay.TupleGetItem(func_1426_call(), 0)
call_3238 = relay.TupleGetItem(func_1427_call(), 0)
output = call_3237
output2 = call_3238
func_3250 = relay.Function([], output)
mod['func_3250'] = func_3250
mod = relay.transform.InferType()(mod)
mutated_mod['func_3250'] = func_3250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3250_call = mutated_mod.get_global_var('func_3250')
call_3251 = func_3250_call()
output = call_3251
func_3252 = relay.Function([], output)
mutated_mod['func_3252'] = func_3252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_3312 = func_1626_call()
call_3313 = func_1626_call()
output = relay.Tuple([call_3312,])
output2 = relay.Tuple([call_3313,])
func_3321 = relay.Function([], output)
mod['func_3321'] = func_3321
mod = relay.transform.InferType()(mod)
output = func_3321()
func_3322 = relay.Function([], output)
mutated_mod['func_3322'] = func_3322
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3329 = relay.const(1, dtype = "int8")#candidate|3329|()|const|int8
var_3330 = relay.var("var_3330", dtype = "int8", shape = (4, 3, 7))#candidate|3330|(4, 3, 7)|var|int8
bop_3331 = relay.bitwise_and(const_3329.astype('int8'), var_3330.astype('int8')) # shape=(4, 3, 7)
output = relay.Tuple([bop_3331,])
output2 = relay.Tuple([bop_3331,])
func_3339 = relay.Function([var_3330,], output)
mod['func_3339'] = func_3339
mod = relay.transform.InferType()(mod)
var_3340 = relay.var("var_3340", dtype = "int8", shape = (4, 3, 7))#candidate|3340|(4, 3, 7)|var|int8
output = func_3339(var_3340)
func_3341 = relay.Function([var_3340], output)
mutated_mod['func_3341'] = func_3341
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3367 = relay.const([[[8,9,-2,8,4,-4,-1,-6]],[[-1,6,-1,2,-6,-2,9,-4]],[[6,6,-8,-3,-8,5,-2,-10]],[[5,-6,-7,-6,3,6,5,-8]],[[-5,9,9,-8,-9,-8,3,-3]],[[4,-3,-10,-3,-10,-5,-9,6]],[[-1,9,-6,-9,-9,-7,-5,-3]]], dtype = "int8")#candidate|3367|(7, 1, 8)|const|int8
var_3368 = relay.var("var_3368", dtype = "int8", shape = (7, 12, 8))#candidate|3368|(7, 12, 8)|var|int8
bop_3369 = relay.left_shift(const_3367.astype('int8'), var_3368.astype('int8')) # shape=(7, 12, 8)
output = bop_3369
output2 = bop_3369
func_3377 = relay.Function([var_3368,], output)
mod['func_3377'] = func_3377
mod = relay.transform.InferType()(mod)
mutated_mod['func_3377'] = func_3377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3378 = relay.var("var_3378", dtype = "int8", shape = (7, 12, 8))#candidate|3378|(7, 12, 8)|var|int8
func_3377_call = mutated_mod.get_global_var('func_3377')
call_3379 = func_3377_call(var_3378)
output = call_3379
func_3380 = relay.Function([var_3378], output)
mutated_mod['func_3380'] = func_3380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2810_call = mod.get_global_var('func_2810')
func_2812_call = mutated_mod.get_global_var('func_2812')
call_3398 = func_2810_call()
call_3399 = func_2810_call()
output = relay.Tuple([call_3398,])
output2 = relay.Tuple([call_3399,])
func_3405 = relay.Function([], output)
mod['func_3405'] = func_3405
mod = relay.transform.InferType()(mod)
mutated_mod['func_3405'] = func_3405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mutated_mod.get_global_var('func_3405')
call_3406 = func_3405_call()
output = call_3406
func_3407 = relay.Function([], output)
mutated_mod['func_3407'] = func_3407
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3410 = relay.const([[[-3,-1,8,10,-3,-4,-9,-2,8,7,-3,3,6,-7],[-3,3,9,-7,-5,9,-9,-4,-5,-5,2,-9,6,-3],[1,7,8,10,-6,-4,-5,-1,-7,3,3,-7,2,4],[-9,4,6,3,-3,-3,1,-10,-2,3,7,-1,5,-7],[-7,5,-7,-5,-2,7,1,-4,7,3,6,9,1,6],[-10,-3,4,-5,8,-2,-8,6,8,4,-4,5,2,-5],[-3,-10,-4,2,-2,-8,4,-3,-8,-4,8,4,-4,4]],[[-10,-10,10,8,3,-1,-6,7,9,-4,8,-5,-3,-8],[5,-4,3,-10,6,-8,-5,-5,-5,10,-10,-3,2,5],[-7,4,-9,9,-4,6,4,-8,2,-9,-4,3,5,4],[-3,3,-4,-2,-5,6,9,-9,7,-1,1,-7,10,10],[-7,-3,5,-2,4,1,-6,-1,8,-7,9,3,-7,4],[-2,7,1,2,7,-5,10,10,-5,-1,3,8,-6,-10],[5,4,-10,-9,-10,-7,8,8,7,4,-1,7,-4,5]],[[-7,-3,-9,-2,-8,10,-3,-5,-8,-9,-2,-9,9,-8],[10,-3,8,-1,-4,8,5,10,-4,1,9,-8,-4,-6],[2,5,5,1,7,2,9,3,-7,-4,-7,2,-2,7],[-7,8,-4,3,5,5,-10,-3,-7,2,1,-5,-8,4],[-9,-7,-3,8,-2,-9,7,-8,2,-5,-10,-1,3,-9],[4,3,4,10,7,-7,10,-3,-1,-5,4,10,-9,5],[8,2,-7,5,-7,1,2,-10,-5,9,-5,8,6,-1]],[[2,8,-10,-4,-7,10,-2,5,-10,-6,9,-2,-2,2],[-2,-5,-1,-6,3,-9,9,-4,10,-6,-6,9,10,8],[6,1,4,-4,-9,7,-2,-10,-6,3,6,10,4,7],[-1,-9,6,-4,-6,-9,-1,-6,-3,-4,-3,-6,-8,10],[6,-9,2,-3,-8,1,7,10,6,-9,-2,-7,1,3],[10,3,-1,-2,-10,3,3,-3,-6,8,-7,-1,3,-6],[-3,-4,-2,-8,9,6,-6,7,-3,-2,3,10,-9,1]],[[-1,6,5,9,-7,8,7,-5,-3,2,5,6,4,-10],[-9,4,-9,3,10,-9,9,3,1,10,-2,-9,-6,7],[-1,4,-1,9,1,-1,-6,-8,-8,-2,10,-3,6,-3],[7,4,-8,-9,1,8,1,-2,10,1,-10,-6,-7,-5],[1,7,10,9,2,-9,-5,4,4,3,4,3,9,6],[-8,-8,1,-10,-9,-8,-6,-3,-4,7,10,4,-3,10],[4,-9,1,3,5,2,4,-2,-7,-1,1,-8,9,-7]],[[-9,-6,4,-7,-5,6,8,3,-8,-10,1,7,-3,-2],[-9,7,-7,2,10,-4,-4,4,-8,1,1,2,-5,3],[4,-10,-6,2,10,5,-3,-5,-1,8,8,-5,1,1],[6,5,3,4,2,5,10,-4,-10,2,9,-1,9,6],[-5,7,-2,5,8,5,5,-4,9,-10,8,-10,-3,-6],[9,4,10,9,-6,7,4,-5,-3,6,8,3,-1,5],[-4,-6,-2,10,4,3,-4,3,6,6,9,-3,9,5]],[[7,-4,10,7,-2,3,6,5,8,-7,8,-6,-5,-5],[5,4,7,-6,-8,8,-9,6,-9,-5,-9,-3,-4,-3],[8,-3,8,-6,5,-2,2,-3,-3,6,1,8,4,8],[-2,8,9,-4,1,1,-1,-9,5,6,4,-9,-3,-7],[-10,-4,-6,-2,-4,-3,6,10,-9,2,4,3,2,-5],[10,-4,4,3,-10,6,-1,10,-5,7,-3,9,9,-7],[5,-7,-1,7,9,-7,7,5,-2,-7,7,-10,-7,8]],[[-10,-8,-5,2,-6,-1,-9,3,2,3,-3,1,-6,-10],[10,8,1,5,-1,-1,-5,1,3,-7,-4,-10,-3,-8],[-2,2,6,-1,8,-4,4,7,10,-3,-3,-7,-3,3],[8,6,2,1,2,5,-10,10,-4,3,-6,-6,-9,6],[-10,9,-2,7,3,-2,-1,-4,5,5,2,5,6,-6],[4,6,-1,-3,8,-9,-9,-7,-7,1,4,3,-4,3],[-10,5,-9,10,-8,4,-3,8,-3,4,5,-4,-1,-6]],[[-7,-7,7,1,-4,7,3,9,-4,10,3,9,-9,-6],[2,-5,10,6,-5,3,-9,3,-2,10,1,-5,-5,-10],[-7,-5,10,-8,6,-8,-2,-2,3,-4,8,-3,5,-3],[4,7,4,8,3,-6,9,-10,7,3,7,-7,1,-6],[-9,9,6,3,-7,4,9,1,-6,-1,2,4,-3,-6],[10,3,5,-3,5,9,-8,-3,2,5,4,-10,-1,-8],[5,1,10,-5,7,3,3,-5,4,-6,-2,6,-8,-6]]], dtype = "uint32")#candidate|3410|(9, 7, 14)|const|uint32
var_3411 = relay.var("var_3411", dtype = "uint32", shape = (9, 7, 14))#candidate|3411|(9, 7, 14)|var|uint32
bop_3412 = relay.subtract(const_3410.astype('uint32'), relay.reshape(var_3411.astype('uint32'), relay.shape_of(const_3410))) # shape=(9, 7, 14)
bop_3422 = relay.not_equal(bop_3412.astype('bool'), relay.reshape(const_3410.astype('bool'), relay.shape_of(bop_3412))) # shape=(9, 7, 14)
bop_3432 = relay.add(bop_3412.astype('uint64'), relay.reshape(bop_3422.astype('uint64'), relay.shape_of(bop_3412))) # shape=(9, 7, 14)
func_1588_call = mod.get_global_var('func_1588')
func_1590_call = mutated_mod.get_global_var('func_1590')
call_3435 = relay.TupleGetItem(func_1588_call(), 1)
call_3436 = relay.TupleGetItem(func_1590_call(), 1)
output = relay.Tuple([bop_3432,call_3435,])
output2 = relay.Tuple([bop_3432,call_3436,])
func_3439 = relay.Function([var_3411,], output)
mod['func_3439'] = func_3439
mod = relay.transform.InferType()(mod)
var_3440 = relay.var("var_3440", dtype = "uint32", shape = (9, 7, 14))#candidate|3440|(9, 7, 14)|var|uint32
output = func_3439(var_3440)
func_3441 = relay.Function([var_3440], output)
mutated_mod['func_3441'] = func_3441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3407_call = mutated_mod.get_global_var('func_3407')
call_3504 = relay.TupleGetItem(func_3405_call(), 0)
call_3505 = relay.TupleGetItem(func_3407_call(), 0)
uop_3549 = relay.sin(call_3504.astype('float64')) # shape=(4, 2, 13)
uop_3551 = relay.sin(call_3505.astype('float64')) # shape=(4, 2, 13)
output = relay.Tuple([uop_3549,])
output2 = relay.Tuple([uop_3551,])
func_3552 = relay.Function([], output)
mod['func_3552'] = func_3552
mod = relay.transform.InferType()(mod)
mutated_mod['func_3552'] = func_3552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3552_call = mutated_mod.get_global_var('func_3552')
call_3553 = func_3552_call()
output = call_3553
func_3554 = relay.Function([], output)
mutated_mod['func_3554'] = func_3554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_3581 = relay.TupleGetItem(func_1739_call(), 1)
call_3582 = relay.TupleGetItem(func_1741_call(), 1)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_3601 = relay.TupleGetItem(func_3046_call(), 0)
call_3602 = relay.TupleGetItem(func_3048_call(), 0)
var_3603 = relay.var("var_3603", dtype = "float32", shape = (4, 2, 13))#candidate|3603|(4, 2, 13)|var|float32
bop_3604 = relay.greater_equal(call_3601.astype('bool'), relay.reshape(var_3603.astype('bool'), relay.shape_of(call_3601))) # shape=(4, 2, 13)
bop_3607 = relay.greater_equal(call_3602.astype('bool'), relay.reshape(var_3603.astype('bool'), relay.shape_of(call_3602))) # shape=(4, 2, 13)
output = relay.Tuple([call_3581,bop_3604,])
output2 = relay.Tuple([call_3582,bop_3607,])
func_3610 = relay.Function([var_3603,], output)
mod['func_3610'] = func_3610
mod = relay.transform.InferType()(mod)
var_3611 = relay.var("var_3611", dtype = "float32", shape = (4, 2, 13))#candidate|3611|(4, 2, 13)|var|float32
output = func_3610(var_3611)
func_3612 = relay.Function([var_3611], output)
mutated_mod['func_3612'] = func_3612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2749_call = mod.get_global_var('func_2749')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_3623 = func_2749_call()
call_3624 = func_2749_call()
output = relay.Tuple([call_3623,])
output2 = relay.Tuple([call_3624,])
func_3635 = relay.Function([], output)
mod['func_3635'] = func_3635
mod = relay.transform.InferType()(mod)
output = func_3635()
func_3636 = relay.Function([], output)
mutated_mod['func_3636'] = func_3636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2863_call = mod.get_global_var('func_2863')
func_2865_call = mutated_mod.get_global_var('func_2865')
call_3637 = relay.TupleGetItem(func_2863_call(), 0)
call_3638 = relay.TupleGetItem(func_2865_call(), 0)
uop_3645 = relay.asin(call_3637.astype('float64')) # shape=(4, 2, 13)
uop_3647 = relay.asin(call_3638.astype('float64')) # shape=(4, 2, 13)
output = uop_3645
output2 = uop_3647
func_3649 = relay.Function([], output)
mod['func_3649'] = func_3649
mod = relay.transform.InferType()(mod)
output = func_3649()
func_3650 = relay.Function([], output)
mutated_mod['func_3650'] = func_3650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2863_call = mod.get_global_var('func_2863')
func_2865_call = mutated_mod.get_global_var('func_2865')
call_3651 = relay.TupleGetItem(func_2863_call(), 0)
call_3652 = relay.TupleGetItem(func_2865_call(), 0)
func_3610_call = mod.get_global_var('func_3610')
func_3612_call = mutated_mod.get_global_var('func_3612')
call_3653 = relay.TupleGetItem(func_3610_call(relay.reshape(call_3651.astype('float32'), [4, 2, 13])), 1)
call_3654 = relay.TupleGetItem(func_3612_call(relay.reshape(call_3651.astype('float32'), [4, 2, 13])), 1)
output = relay.Tuple([call_3651,call_3653,])
output2 = relay.Tuple([call_3652,call_3654,])
func_3658 = relay.Function([], output)
mod['func_3658'] = func_3658
mod = relay.transform.InferType()(mod)
output = func_3658()
func_3659 = relay.Function([], output)
mutated_mod['func_3659'] = func_3659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2863_call = mod.get_global_var('func_2863')
func_2865_call = mutated_mod.get_global_var('func_2865')
call_3753 = relay.TupleGetItem(func_2863_call(), 0)
call_3754 = relay.TupleGetItem(func_2865_call(), 0)
var_3755 = relay.var("var_3755", dtype = "float32", shape = (4, 2, 13))#candidate|3755|(4, 2, 13)|var|float32
bop_3756 = relay.logical_xor(call_3753.astype('uint32'), relay.reshape(var_3755.astype('uint32'), relay.shape_of(call_3753))) # shape=(4, 2, 13)
bop_3759 = relay.logical_xor(call_3754.astype('uint32'), relay.reshape(var_3755.astype('uint32'), relay.shape_of(call_3754))) # shape=(4, 2, 13)
func_3377_call = mod.get_global_var('func_3377')
func_3380_call = mutated_mod.get_global_var('func_3380')
var_3769 = relay.var("var_3769", dtype = "int8", shape = (1, 672))#candidate|3769|(1, 672)|var|int8
call_3768 = func_3377_call(relay.reshape(var_3769.astype('int8'), [7, 12, 8]))
call_3770 = func_3377_call(relay.reshape(var_3769.astype('int8'), [7, 12, 8]))
uop_3774 = relay.log2(var_3755.astype('float32')) # shape=(4, 2, 13)
bop_3781 = relay.divide(var_3769.astype('float32'), relay.reshape(call_3768.astype('float32'), relay.shape_of(var_3769))) # shape=(1, 672)
bop_3784 = relay.divide(var_3769.astype('float32'), relay.reshape(call_3770.astype('float32'), relay.shape_of(var_3769))) # shape=(1, 672)
func_3610_call = mod.get_global_var('func_3610')
func_3612_call = mutated_mod.get_global_var('func_3612')
call_3790 = relay.TupleGetItem(func_3610_call(relay.reshape(call_3753.astype('float32'), [4, 2, 13])), 1)
call_3791 = relay.TupleGetItem(func_3612_call(relay.reshape(call_3753.astype('float32'), [4, 2, 13])), 1)
output = relay.Tuple([bop_3756,uop_3774,bop_3781,call_3790,])
output2 = relay.Tuple([bop_3759,uop_3774,bop_3784,call_3791,])
func_3801 = relay.Function([var_3755,var_3769,], output)
mod['func_3801'] = func_3801
mod = relay.transform.InferType()(mod)
mutated_mod['func_3801'] = func_3801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3801_call = mutated_mod.get_global_var('func_3801')
var_3803 = relay.var("var_3803", dtype = "float32", shape = (4, 2, 13))#candidate|3803|(4, 2, 13)|var|float32
var_3804 = relay.var("var_3804", dtype = "int8", shape = (1, 672))#candidate|3804|(1, 672)|var|int8
call_3802 = func_3801_call(var_3803,var_3804,)
output = call_3802
func_3805 = relay.Function([var_3803,var_3804,], output)
mutated_mod['func_3805'] = func_3805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mod.get_global_var('func_1972')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_3875 = func_1972_call()
call_3876 = func_1972_call()
output = relay.Tuple([call_3875,])
output2 = relay.Tuple([call_3876,])
func_3884 = relay.Function([], output)
mod['func_3884'] = func_3884
mod = relay.transform.InferType()(mod)
mutated_mod['func_3884'] = func_3884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3884_call = mutated_mod.get_global_var('func_3884')
call_3885 = func_3884_call()
output = call_3885
func_3886 = relay.Function([], output)
mutated_mod['func_3886'] = func_3886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_3946 = relay.TupleGetItem(func_3658_call(), 0)
call_3947 = relay.TupleGetItem(func_3659_call(), 0)
output = call_3946
output2 = call_3947
func_3949 = relay.Function([], output)
mod['func_3949'] = func_3949
mod = relay.transform.InferType()(mod)
mutated_mod['func_3949'] = func_3949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3949_call = mutated_mod.get_global_var('func_3949')
call_3950 = func_3949_call()
output = call_3950
func_3951 = relay.Function([], output)
mutated_mod['func_3951'] = func_3951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3649_call = mod.get_global_var('func_3649')
func_3650_call = mutated_mod.get_global_var('func_3650')
call_3970 = func_3649_call()
call_3971 = func_3649_call()
func_2863_call = mod.get_global_var('func_2863')
func_2865_call = mutated_mod.get_global_var('func_2865')
call_3976 = relay.TupleGetItem(func_2863_call(), 0)
call_3977 = relay.TupleGetItem(func_2865_call(), 0)
func_3801_call = mod.get_global_var('func_3801')
func_3805_call = mutated_mod.get_global_var('func_3805')
const_3986 = relay.const([[7,8,3,-4,-4,10,5,-6,-9,-1,10,-5,-6,-10,5,5,9,-4,5,1,-8,7,-8,-4,-7,-9,10,5,-5,8,-4,9,-6,6,-4,-1,9,-6,10,-3,4,6,-6,-1,-6,10,-1,5,-4,1,9,2,9,-4,-7,-7,-1,-6,-4,9,-7,-1,-7,-8,-7,-1,-10,-4,-1,9,7,1,-1,-6,-6,-6,-3,-1,-3,-3,5,-9,-7,5],[5,-5,10,-2,-5,-7,-5,-3,-1,-1,1,-7,8,-3,-2,2,-2,10,3,4,-10,8,-5,-6,-5,-1,10,7,7,-10,8,-8,9,4,-10,1,-1,-7,-1,-3,9,7,5,5,3,2,-9,4,6,3,8,8,-4,8,-10,-4,-6,-8,4,-2,1,10,2,-10,-4,6,7,-3,-1,-8,1,-9,4,7,-1,9,-3,-5,-5,-5,8,-4,7,9],[10,8,1,10,7,7,6,-1,7,6,-1,-4,2,7,5,5,3,-7,-3,4,-4,-7,7,1,-3,7,-8,4,-8,9,-7,1,10,-6,6,-4,-3,3,10,-5,3,-9,-2,2,6,-5,6,4,-5,10,2,-2,-4,4,-2,-6,-2,7,10,6,-9,-10,9,2,6,-3,-5,-3,3,2,8,-10,5,-6,7,10,5,4,3,5,-7,8,-7,-2],[10,-6,3,1,-5,4,9,1,-3,-7,10,-6,2,2,6,-10,9,-5,3,-2,-2,-4,10,8,-10,-2,7,-9,3,-8,5,-5,3,-7,-7,7,-5,4,-4,-9,-5,7,2,-3,-7,-5,-9,7,2,8,-2,1,-4,3,7,-6,-4,6,-9,10,-8,-10,-7,8,-10,-9,1,-10,-4,7,-6,6,4,-7,-9,-10,-3,-5,-7,10,-9,-10,10,9],[6,7,-9,-3,5,7,-10,-2,-9,-5,-9,-4,5,-3,7,-1,8,-4,-1,1,10,9,-6,2,7,2,4,6,-3,4,-1,-2,3,5,6,9,5,-5,-8,-8,6,-10,-7,10,5,7,-9,6,-6,5,8,-7,1,-4,1,-3,-2,-7,-1,-9,9,4,-7,-9,1,7,7,2,6,-6,-8,3,-3,-8,-5,3,-3,3,7,-4,-5,8,5,-7],[-6,9,3,-3,-10,3,8,-3,-4,2,8,2,7,3,-1,-4,-5,-2,-2,-7,6,2,-7,-6,1,4,3,1,7,-1,-6,7,7,2,-4,4,10,-5,-10,9,8,9,1,-3,-3,9,9,-1,-7,6,3,-3,-5,-3,1,4,-5,-3,2,7,2,7,5,-10,2,-4,-5,1,7,-4,-5,-8,-5,9,8,-5,3,4,9,-10,9,9,1,5],[-1,6,1,-6,-6,-4,-2,-5,-10,-3,-2,-1,5,4,-7,5,9,-3,7,7,-6,-8,-9,-3,3,-7,7,5,-7,9,1,1,7,-2,-5,8,9,10,-8,-6,-9,7,10,-9,2,-8,-3,-2,-7,7,-3,-5,-8,10,-10,-10,-1,4,-8,6,-2,-10,7,7,6,6,-8,4,8,5,-2,6,9,-3,-4,6,7,-2,8,8,3,5,-5,-9],[-3,-10,7,-8,-7,-5,4,-8,7,-5,7,-3,9,4,-7,8,7,-6,-5,3,7,-4,9,-2,-2,-5,2,1,-6,-7,8,-2,7,-9,2,6,-2,-8,4,1,-9,-5,2,2,1,-10,9,5,-10,8,-8,1,7,-5,3,5,10,-3,-5,2,-6,-8,4,1,-8,8,-3,8,-2,9,8,-7,5,3,-5,-8,7,6,-9,-7,-5,-5,-8,6]], dtype = "int8")#candidate|3986|(8, 84)|const|int8
call_3985 = relay.TupleGetItem(func_3801_call(relay.reshape(call_3970.astype('float32'), [4, 2, 13]), relay.reshape(const_3986.astype('int8'), [1, 672]), ), 2)
call_3987 = relay.TupleGetItem(func_3805_call(relay.reshape(call_3970.astype('float32'), [4, 2, 13]), relay.reshape(const_3986.astype('int8'), [1, 672]), ), 2)
bop_3996 = relay.mod(call_3985.astype('float64'), relay.reshape(const_3986.astype('float64'), relay.shape_of(call_3985))) # shape=(1, 672)
bop_3999 = relay.mod(call_3987.astype('float64'), relay.reshape(const_3986.astype('float64'), relay.shape_of(call_3987))) # shape=(1, 672)
const_4005 = relay.const([[2.083275,-5.638011,2.260776,-8.222295,1.487220,8.454126,-8.386279,-6.195362,3.345669,-7.207423,-7.612406,-8.331164,-1.438978,-6.116154,9.339069,1.254440,0.002940,5.455465,6.043408,6.269285,-4.722848,3.399625,9.745961,-2.206352,7.671310,4.199722,0.298912,-3.996778,-0.157097,-3.112551,-1.663038,-2.640327,8.585846,-4.738657,-3.788996,-3.468079,4.812001,7.545888,5.427420,9.283290,7.762004,-8.114001,-1.933500,-3.803115,0.296977,5.569603,4.323249,-5.139518,0.662087,7.428148,-8.243004,-3.249434,-0.368242,-1.316552,8.730017,-3.648374,-5.912063,-0.712932,6.100400,6.548223,4.797241,-0.476254,6.239013,1.195898,-4.203972,-9.352550,-8.023573,-0.444259,-1.736276,9.178820,-2.628129,-7.995976,-7.609667,-3.039911,-8.000392,5.529741,-5.668701,-4.884991,-4.432542,-5.692219,-8.041184,5.081893,5.129064,4.851756,-9.146625,-5.278251,-8.300563,4.182936,9.009795,-0.366284,-6.668201,8.311731,-4.167778,-9.147959,5.425380,4.451731,2.506927,5.661703,-3.820378,-8.964526,0.914519,3.318309,-7.355456,-0.093664,-7.820366,7.781023,-5.934200,8.609526,-4.058187,5.810938,-1.902270,8.926184,8.276145,5.250857,-0.342296,-2.987463,-9.496375,3.283947,3.061656,-0.769971,6.984377,-7.841969,-5.765305,-2.085407,6.786446,-7.853368,-8.033945,0.237533,-8.245463,1.796229,-2.483930,-6.805955,9.711362,8.057897,-7.961458,0.376466,3.828540,6.072879,5.695310,-7.247108,-0.903145,7.728473,3.781858,-3.788239,6.450253,-1.943627,-8.592539,-9.258998,-7.918652,-3.741309,3.112708,-1.011430,0.476930,-7.739040,7.761807,1.806422,2.552894,-9.397736,6.731017,8.850857,-7.007803,-3.077362,-2.781192,5.289414,0.504849,8.240259,9.741223,3.770164,-3.376502,8.166070,1.497046,5.457348,6.465257,1.964400,-6.522714,3.933417,-9.001064,8.837463,-4.531224,3.028986,-3.128783,-5.664143,2.234658,-8.420372,1.913460,6.893354,-8.483692,-1.797399,4.848576,-5.668706,-5.879446,-5.068581,-8.117043,3.136025,-6.051332,-3.534063,-2.608948,-9.936749,-3.739754,3.881410,7.883025,-6.364501,1.407564,1.304687,-8.404921,-6.982960,-9.274198,9.319178,3.858029,2.512167,-9.345622,-5.448896,8.640172,-3.163186,-5.906684,4.378037,-4.038953,2.870155,-8.881562,-5.894622,6.464162,5.187638,-1.711917,-1.414596,-4.334494,5.732096,9.889741,8.980941,8.697880,-0.449785,2.507191,0.683065,-0.021311,2.841893,9.948417,4.758867,-4.152879,-7.962391,-2.396103,-0.460780,5.799081,5.743057,-8.862265,2.385820,-1.544529,5.166718,7.002384,1.079598,9.796639,2.065580,7.532443,4.437937,6.796921,-5.424073,-0.376733,-3.271786,-8.948949,-5.048477,-5.817461,-7.807768,-8.208451,-4.586358,-7.286309,8.375818,-7.748816,4.654368,0.343383,-9.122244,-2.202132,-4.446574,8.589937,-4.499730,-1.909339,-0.315205,-6.267015,9.202535,-8.187997,6.827430,-7.039655,8.391587,6.636823,-4.790385,9.066030,5.356323,9.773749,0.710642,2.923091,-2.023997,-4.935922,-9.130956,-3.255773,7.713279,-9.525515,3.175208,0.704286,4.583389,4.168153,-3.892261,-8.853488,8.945483,6.993663,5.997256,-8.198641,8.754204,-8.318034,-2.503376,0.778245,-8.540882,-9.882962,-6.966239,-2.012480,-2.942877,4.373533,-2.913646,-0.217997,5.724587,-0.930827,-5.053303,6.487533,-0.933710,-5.127838,-2.390344,-7.213460,3.403420,-5.765447,7.387658,1.144336,2.801821,-4.685799,5.382639,8.652608,-7.846823,9.171808,-7.131241,-8.647891,-3.622434,0.840403,8.808630,7.721334,-9.742757,-3.067138,-1.278295,2.745333,7.808029,-2.509836,2.345229,6.839153,9.418126,-2.380554,7.221291,-0.718264,4.885645,-0.781928,-2.039220,3.565141,-8.266177,-9.891743,-5.878131,-7.644944,5.839008,-8.742766,-3.328406,-2.466487,-8.514388,0.886834,-1.730293,5.371544,-0.795862,-6.379474,-9.494898,4.270813,5.969434,3.453405,-0.482572,0.778541,-7.929470,-0.580863,-2.368998,6.548021,5.829915,-5.625371,-4.314454,-0.941885,-0.502034,7.379749,-6.410388,7.107437,-3.971275,5.877918,-8.894377,-1.635513,-6.092987,9.672070,-8.670130,5.097904,8.857508,8.841947,-3.345640,-5.921595,-9.567499,8.339312,1.447451,-0.910967,5.678542,-5.553013,0.354279,0.712404,8.356782,-8.797069,5.429372,8.580814,5.367872,-4.324862,-0.398437,-9.716850,0.808359,-5.821570,-8.881415,-0.198401,-8.067934,1.396794,-7.971747,-7.374162,3.646406,8.475271,-9.414751,-9.254048,1.676843,0.450339,9.916606,-0.040671,2.493577,4.963313,5.319515,-9.252881,-9.491697,3.380118,-4.197891,-0.047084,-0.003666,-2.562934,4.586169,3.093109,6.514908,-0.705436,-2.788043,5.580349,9.228908,-7.059667,6.881869,0.638444,-3.405978,-6.516984,-7.498147,3.623889,-6.308311,1.717662,-0.282565,-7.279580,-3.225092,-4.559427,5.380019,-2.521168,1.210136,7.736056,8.052213,-4.014545,-0.129767,-1.164884,-0.340887,1.374983,2.656702,-7.487636,6.778636,-1.918165,6.619374,7.068915,-9.097722,-9.653862,-9.375217,-9.859052,-1.792459,4.806434,5.333504,1.763588,3.350299,-2.333640,0.456139,-7.453280,5.528731,-2.351548,-3.711091,1.083002,-3.958697,-1.903675,-9.477730,-3.459632,3.061842,0.134799,-3.227970,-8.650294,8.983666,-1.285273,7.211592,-2.565937,9.535001,-8.496098,-5.567594,6.420394,2.274038,5.964872,-3.203710,-0.416037,7.811327,7.252953,-1.930802,-9.638454,-4.784439,-1.572031,3.837993,3.721110,-3.770357,-0.800142,2.670071,5.435694,6.165341,-3.225126,-9.454574,-0.059642,-6.976473,5.016398,6.257703,2.715509,5.699613,-2.533749,-0.604076,3.745187,9.162288,0.116291,0.022784,6.227347,4.739607,0.824361,-8.913822,0.957273,3.415314,1.371757,-4.050683,-0.582113,-6.987848,7.602676,-8.738013,3.323222,-6.778994,6.407124,6.052976,6.323333,-7.788646,6.876928,-0.400192,-6.968477,7.526270,-8.884107,-3.476589,2.734220,1.882923,9.066275,-8.106207,1.734337,8.453983,-6.853391,1.246161,1.725485,-8.449944,-7.158462,0.369974,-3.189412,-1.427684,1.886609,-8.843920,-1.664050,8.646565,3.935943,-3.271454,-9.265516,6.685604,7.670487,-2.078596,4.408792,3.494686,9.170837,-3.658757,8.648093,2.794393,2.792043,-4.168418,8.560081,2.778623,4.048469,-1.315435,7.562054,-2.171090,-6.039450,0.761655,-6.144525,-5.383074,7.548723,3.395848,4.038933,1.341747,-1.420464,-0.899215,5.228104,1.823526,-3.314683,8.154794,9.982192,-1.668008,-0.443330,1.729067,-1.544671,3.828655,-3.372119,-1.374008,5.575248,-6.002564,3.537287,1.255721,-2.052339,8.215048,-7.885564,-9.090735,1.502586,-1.481378,-2.302289,-7.880974,2.043089,9.115528,-8.172204,9.434567,0.850372,-7.729687,2.971237,-4.012826,-0.753042,-6.976665,-7.701840,-0.057371,2.023181,9.564853,8.631451,-4.282636,0.163661,-9.419965,0.541091,9.327582,-7.860631,-5.257611,-2.875798,6.527523,-1.662662,5.274859,8.290541,-4.034464,-4.806763,-9.021019,3.438239,-8.883554,-5.440880,8.635138,0.182914,8.034227],[-0.555640,3.801357,-5.114665,5.393880,-8.439185,1.185558,-0.184339,-1.082316,7.864726,-7.699355,6.751468,-6.132440,-1.912969,6.346792,-7.873386,6.342417,-9.513895,9.738811,5.700843,-4.431732,-9.805373,1.236320,8.766342,7.370947,5.731172,-2.790109,7.040474,-0.969760,-2.807491,3.206112,-4.191105,7.576090,3.036915,2.620315,6.233388,-9.882944,6.810602,-3.276515,7.686971,-5.419539,-0.776594,4.247624,9.515468,1.488876,7.023919,-5.832332,9.080748,6.928194,0.336153,5.053579,-2.888284,-6.948242,-8.335183,-1.044861,-7.649629,-4.554699,5.019009,-3.491210,8.539505,-7.132966,-0.620256,0.076760,-2.468544,-5.312357,5.314047,-8.160237,7.813882,-8.770036,-3.827135,5.165898,3.604097,9.380229,1.216411,5.664027,7.941024,-0.014828,-6.159272,5.233925,-3.609691,-8.299704,7.349130,6.110244,5.110989,-0.231460,-5.297340,4.116202,0.110518,0.030457,-7.640637,-1.140314,-9.208782,-3.788944,-1.296447,-2.553254,2.448252,-8.522224,8.646124,-4.541627,2.477946,-8.198884,-3.626517,5.861436,-7.101364,6.260011,2.161220,-4.527038,-5.740252,1.976788,-8.753413,1.634026,-7.492196,2.771580,3.539777,7.974963,-0.941838,-1.510794,4.736713,2.519931,-1.675198,-0.168364,-7.998638,-9.769109,4.677884,8.735712,2.614709,-1.957242,-9.294024,1.713170,7.024851,7.114904,5.946528,-6.398478,6.818006,-5.585174,-0.999591,-0.337863,-3.242650,4.256379,-6.954879,8.101992,4.224846,6.310690,7.239788,4.755540,0.678945,2.584092,3.863505,0.012343,6.987256,-8.428245,6.466034,-2.541800,4.198765,9.041213,-5.770032,6.991709,-5.990011,6.537285,-6.829167,-9.092751,6.551509,-7.917347,-7.209204,-0.607739,1.449074,4.207588,4.682891,-8.507299,-7.863142,-4.604618,2.852029,-4.113952,-1.646659,8.003289,9.900063,2.486809,4.746724,8.252867,8.215045,0.084537,-3.939124,4.983713,-4.194031,0.648959,-9.945941,6.270351,4.705127,0.569271,-7.226883,-1.485947,5.018648,-7.843841,3.570578,-2.132351,6.036464,-2.006132,-9.661977,5.250430,9.086120,6.558044,-2.425241,8.051675,5.575403,-6.707112,-3.844965,1.883372,-3.759974,-0.348844,0.697517,-0.553339,2.463765,-1.816346,6.289754,-7.646156,-7.654134,-8.119189,2.525160,0.287299,-9.118442,-1.024541,-9.321077,-3.446408,4.671963,7.094614,7.781747,-4.533356,-2.755505,4.308466,-5.437944,-3.776209,4.442182,-3.767378,4.926030,3.383013,2.589672,-3.516358,7.127805,-7.136125,9.560709,5.483291,5.061663,2.087093,5.530275,1.085854,3.387192,-3.520442,-9.033571,1.145909,-8.277707,-4.107031,-9.061233,-3.373158,8.342135,-9.300650,-6.570904,-7.238661,3.727822,8.469750,-8.256554,6.524758,-2.575520,-9.796576,-7.091434,-7.051988,1.272452,-8.289002,3.002625,7.644201,5.921672,-6.662486,-8.770949,3.139190,-2.272047,-3.045649,-1.351298,-3.806494,5.660487,9.624392,-3.684731,7.542203,-2.395514,8.681660,-8.191178,6.085163,9.236471,6.287109,-3.685119,0.288113,7.668957,9.232469,8.852210,-3.704550,-2.781901,-5.661850,-6.168219,-5.285529,4.811696,-6.642313,8.885690,7.996625,3.066436,-9.949358,-7.735287,4.988974,6.544998,7.866614,-5.122501,2.758486,2.305563,-5.802049,1.758812,7.416146,-6.938851,-8.949089,3.027037,-9.599470,-6.306843,-1.239182,7.500753,-3.762458,-1.161676,1.592407,-7.672014,3.699974,4.729621,9.605004,9.289877,5.930108,-2.080537,0.897346,-3.533260,2.022609,-0.372979,2.328080,3.097566,-5.123581,8.063385,-6.764698,-8.391019,4.807536,8.261042,4.431957,6.598037,2.912323,-6.746187,4.836654,-4.825345,-5.798066,-2.034962,-7.286541,7.373615,3.929858,0.008727,-7.119401,-7.302393,0.009201,-2.615872,-0.541493,4.517472,-8.055440,-7.932266,-8.777049,-4.424369,9.792610,-1.861775,-0.126029,-3.819171,-9.531667,1.094360,6.561902,1.422316,-1.015285,9.307799,4.866598,-3.013469,9.951152,-3.116579,4.662008,-5.163434,9.673774,8.250170,-6.685868,-5.728987,7.583309,-2.323428,0.951482,6.240164,1.565610,-1.046172,7.393716,-3.739151,1.870907,3.587383,5.462875,0.009282,-2.158277,-9.274827,-2.413235,-3.088521,2.582502,-7.126298,-3.887327,-5.394372,8.580697,-0.556010,3.689025,1.105656,7.430461,4.984748,-9.237670,-0.312105,4.285157,9.040509,8.126141,4.681027,-4.110920,5.886957,8.278630,3.942972,-8.484901,-3.491181,-2.184411,-3.697121,-2.841196,1.645248,-7.807379,4.418587,-7.736398,1.954736,-9.444304,-9.412999,-9.309551,0.279141,4.250648,-8.847473,6.192756,9.562135,-9.725343,3.558999,-7.930960,5.984944,-6.034848,-1.487986,-9.194159,-7.477604,2.252850,4.338458,-3.548104,8.116416,7.448062,1.626698,-0.629058,3.796216,-0.711390,1.584118,7.824439,5.607960,-4.223866,-1.923583,7.546548,3.356691,-1.154963,8.544643,-4.118099,-2.137025,-1.848299,-2.850151,1.641966,-1.003508,-8.401328,-8.959269,-9.394557,-3.291172,5.223588,9.967890,9.252536,0.252939,-0.569766,4.721246,-9.923183,-9.104479,8.075073,9.211395,-9.332227,0.401069,-7.107473,-0.967530,0.651208,3.418577,-6.680478,-4.858588,8.030879,8.012886,-1.784757,-2.568811,-5.335556,3.109538,5.864854,-3.142583,-7.084080,7.047939,4.903527,-0.078006,-3.607551,-4.858301,-3.431033,-5.131688,-2.226540,3.190845,-2.939652,0.753813,6.571169,1.606523,-2.946385,-8.106779,4.702036,1.842218,-0.810241,4.911948,2.620240,0.753422,-0.165096,9.589360,3.474679,4.414003,1.323897,-5.696033,-8.354356,2.626332,-9.975337,5.671629,9.655997,-7.845539,-9.188008,-0.933884,9.797598,-8.647334,-4.553821,5.580056,-4.516123,6.931368,9.192008,-0.901997,8.166451,-3.506391,-3.843368,4.966185,-5.747934,1.436067,-1.533412,-4.231039,9.443250,7.867780,7.634956,1.337136,-1.010959,6.175098,-0.737289,0.178769,6.799300,8.499588,2.314222,-1.899376,6.559011,0.127942,3.000866,9.188939,-0.259231,-0.993875,0.307547,1.582603,5.077657,-4.080917,0.570821,3.913074,7.080382,-0.922806,-2.107677,0.204579,-4.247753,7.566573,-5.521943,-4.796307,9.913462,-8.278735,-8.447729,-2.584355,-8.191741,6.878265,-0.899159,9.111790,-8.766862,8.754800,-4.445670,-6.979741,9.082762,-7.325617,-7.518965,-8.109618,-2.852118,0.227340,-3.643009,-1.441390,-2.997251,-7.923773,-4.428194,-4.395221,7.005514,9.020581,-7.409732,-2.453381,6.947218,-0.821682,1.990470,-8.453797,5.285389,-8.528210,8.838778,2.135738,2.941124,9.786154,6.562277,-5.417123,4.346584,-5.676688,9.316248,6.292028,0.905943,-4.164222,-7.421069,-9.717026,-0.957706,1.833291,9.297395,5.109874,2.469612,4.758522,4.214290,4.556144,0.872877,-3.795209,1.687275,-0.939851,9.044198,4.963075,4.278804,-1.395614,5.965297,4.972629,-7.405570,6.566922,7.402595,-1.481927,-6.242444,2.252223,2.090533,-9.504906,9.369976,8.522550,5.699473,-4.859824,3.776971,6.331523,7.752908,3.410260,9.058603,6.612380,4.335062,3.056243,7.326499,-4.755064,2.530228],[7.522122,1.390932,7.919372,-5.506182,9.629278,-4.057309,-7.249826,5.850572,3.576768,-8.405179,-4.742008,-5.714526,4.285431,-1.671474,-8.542107,-7.226733,3.408022,7.895069,-7.622258,-6.307871,7.403532,-1.257978,-2.966722,3.290216,1.022289,-7.205613,-2.447130,4.733445,2.497410,2.464506,9.543596,7.291658,4.845716,-5.838693,-4.910304,2.205470,7.365207,0.008549,6.222602,-8.534167,-9.670822,-4.601542,4.273542,-9.448503,-0.253455,8.154891,4.655984,-5.587189,8.728643,6.672299,1.971016,6.222647,-9.857328,7.652855,6.561130,-9.256431,-9.699613,-9.723032,8.011741,-7.641740,-5.467360,0.548058,7.499550,-1.581075,-9.343924,-4.215895,-1.863006,2.488643,4.524555,1.134952,-0.150433,-2.308687,-0.492413,-0.713660,-5.324072,8.515676,-0.388768,-4.334556,-3.797853,-9.061545,-4.703304,5.321543,-0.427016,-8.415651,8.871149,1.921217,1.360903,-3.158081,-7.806706,5.241157,-0.220783,-3.084317,-5.534207,-3.211066,9.589497,0.022469,4.382520,9.185648,7.541071,5.990611,3.977356,-5.299070,0.572956,-6.262758,-0.894597,-6.418293,4.388302,1.514292,2.492492,-6.676449,0.307143,4.260256,-3.505832,-1.582307,-2.073054,-1.363856,-6.144897,-1.780637,-8.174425,-4.828748,0.705950,3.328089,1.924606,-8.966131,-8.749494,9.368511,-2.124818,-8.581203,7.860636,2.799936,3.568773,7.214299,-0.354316,0.874586,5.578187,3.959447,-5.708763,0.043291,-8.745035,-7.895280,-3.640925,-3.236212,-4.098782,-3.525734,2.948307,2.573428,4.823130,3.529597,7.634717,-4.535683,-6.528897,1.733665,-1.817459,-9.778632,-7.712280,8.303447,-5.891278,5.867469,8.225691,1.719515,5.261942,4.219568,6.265593,2.963307,9.779742,5.624381,2.891392,-8.453877,1.564195,-3.466990,3.989740,9.837350,6.012078,6.106376,-5.979095,-6.156579,9.013071,-6.124897,-3.274156,9.619980,-2.347472,6.393940,8.362853,3.561946,-6.100434,-8.374361,-4.004467,8.360053,7.198658,-2.937477,2.608091,9.596086,-3.144571,-7.595874,1.306662,-6.957229,-8.156194,-6.571642,3.567543,0.452592,8.554899,6.482893,0.167531,-3.547946,8.615137,-5.651076,5.720061,-3.872544,6.582912,-4.074436,-6.263384,-5.950130,-8.270047,2.808000,2.254729,7.779229,-2.595960,-4.540776,4.569905,-6.800482,4.745216,-3.365173,0.468315,-4.732120,6.977229,1.787765,0.096838,-2.591501,-2.410921,6.398733,-3.019934,5.565192,6.078304,-2.204925,-6.868491,-6.882597,8.821932,-6.714777,8.630567,-6.390742,4.958275,-1.060690,8.261887,-6.133153,-5.293789,1.816959,-6.845672,-6.583158,-9.843345,-2.975544,3.224355,-4.834292,8.327283,4.353866,4.804919,5.086705,-9.470696,7.396961,7.513754,5.081873,5.931095,-3.040375,0.320589,-6.604161,-2.961051,-7.104119,2.592845,-3.310855,8.071698,7.766326,3.073467,5.900854,-0.327590,-7.694709,-0.878241,-8.670982,-7.085200,5.598000,2.795048,-7.932581,4.805312,1.304693,3.257566,9.676990,-4.565050,-7.870008,-8.382562,5.807573,-8.039290,-6.255775,4.566732,4.177485,8.327503,-4.215736,-8.945990,-9.523335,3.593537,-1.291526,-2.810511,-2.920637,-1.735353,-6.804191,-1.422664,4.703756,6.477939,-7.919924,-0.060606,1.918986,-0.432679,-3.943270,-8.292612,-2.425021,7.808611,-3.707186,7.677946,-5.128642,6.879478,-1.838766,-1.434182,2.460073,4.164266,-3.107063,2.606971,6.434591,6.533698,-1.989760,3.818299,-7.000310,2.360028,-2.879528,0.486330,-9.162899,3.885642,-4.343230,-6.486420,-9.926949,0.995583,-2.259906,-9.423695,2.187801,8.579777,7.753929,-5.667246,2.927678,-6.829019,-3.309882,-4.873990,4.945055,0.958149,7.018392,5.401930,5.197866,3.563381,0.336102,-6.589635,5.176501,-2.778679,-3.110228,-7.976139,-6.669925,1.021958,-8.371280,8.360370,1.382432,-2.451264,-9.594967,-3.349188,-2.289732,1.718491,2.782504,-5.425942,-3.156310,8.468716,-1.852750,-8.820989,2.953432,4.017556,-9.169428,9.428459,-8.162523,-2.422609,6.984417,-0.765703,-9.379536,2.732143,2.443499,0.052059,-2.652026,-5.432689,-8.125016,1.768427,-1.843839,-6.728189,3.249618,0.959608,4.184908,-3.754702,-8.422619,-4.117724,6.014947,1.383942,-2.322800,-9.463789,6.707189,7.316802,9.200166,2.273579,6.755726,-1.115940,1.513593,-5.807437,-7.433699,7.822599,-7.252821,2.392116,9.100843,-6.446710,4.086641,-3.567201,-7.799778,9.955456,-2.381445,9.177941,-9.773988,-5.638714,6.021075,-5.439249,-3.679719,0.946519,0.106615,-2.994392,0.257310,-2.901382,2.520577,7.514451,-3.000150,1.416212,-8.683028,6.455203,1.450403,-4.474020,-2.292589,-6.117963,8.657994,2.945045,-7.007623,2.835211,3.051372,3.198138,5.755624,-6.177045,9.462463,-5.081357,-8.747279,-0.428830,-0.048516,4.574149,7.505625,9.250079,1.503378,9.564847,-3.817365,5.048429,2.388059,-3.508913,6.038817,-1.315164,-7.559321,-1.961604,-3.404305,-6.782445,-5.431240,-5.103927,2.883466,-8.611834,-9.905844,4.694624,-0.195762,-0.627810,9.870723,-3.620053,5.149254,5.909179,-9.679724,2.148707,-8.611002,7.264375,7.538286,-2.918377,5.299556,3.649794,-8.423516,-7.563978,6.296588,-8.202638,8.021853,6.158155,-0.451079,-8.836888,6.260899,5.518335,-1.188668,-0.949389,-2.928358,-4.082208,0.828176,-3.621545,-3.695878,-1.913821,8.816279,-0.901124,-8.924769,-0.980508,-1.905683,9.141259,-1.463014,5.971866,3.929167,-4.472454,-0.101168,8.065996,-4.416603,-0.303010,-1.147104,-2.487956,8.799587,-0.880273,-2.415775,-5.752757,5.428054,-2.219204,0.236076,-3.732368,0.841634,-1.895763,-9.364449,6.728680,0.336518,5.366694,2.872639,-6.418656,3.538990,-9.464464,4.858119,-8.174338,-7.533828,-0.690071,0.412564,-2.185319,5.806245,-2.555427,-6.717184,-2.236224,5.081427,1.097178,4.851849,-3.866201,-1.569140,-7.918531,8.938843,-7.438750,-9.385531,9.332118,-7.325376,-8.118947,5.427561,6.356595,2.862096,4.396870,4.669921,0.134542,-2.516748,4.939641,-3.570090,-9.503759,1.533623,2.525189,1.581258,1.358296,-7.895371,7.202139,-2.177268,0.904589,-7.953662,9.747326,4.503411,-6.899721,-8.742854,-8.282467,-4.618505,-1.684726,9.691978,1.401958,1.619367,-1.632453,-1.099184,9.149124,-2.682644,-4.998393,4.407804,2.683374,-0.755930,5.414880,1.081744,3.485706,-4.103323,0.680351,2.406190,0.901396,3.995097,-3.168727,9.998323,5.344013,-9.497796,2.585050,7.118159,-3.629762,-4.606836,-3.449017,0.676980,9.283835,1.678494,-3.047366,3.963603,0.288853,6.312682,4.270283,3.390487,2.694613,-9.764716,-5.266417,9.025550,-4.062773,-0.406819,1.276102,-5.090033,2.296139,-1.412956,0.332940,2.465232,-0.240289,-8.636196,-8.698528,-6.188267,-2.622169,-5.615644,-4.266333,9.144390,8.036122,3.544714,-8.386562,-2.851260,-8.289815,4.656774,-7.718888,-5.910356,9.301432,-4.251883,5.941786,3.085357,-3.417292,-5.137378,0.845846,8.407208,8.637467,-9.649307,-0.417090,5.022434,9.952775,-8.043583,-8.049753,-0.608788],[-8.806141,7.375724,-3.478518,2.685792,-0.395059,3.546106,0.809503,-9.534930,-2.316349,-3.463055,6.128430,0.915089,-1.568470,9.329599,-0.933756,7.845549,-4.732220,-4.863690,5.919937,4.400093,2.123361,-1.656921,5.100624,5.159414,4.166881,9.136514,-7.668484,7.404536,-7.316172,2.379024,-8.333395,9.192424,9.150954,4.994889,7.723604,-4.230900,-4.566759,-6.121699,9.299860,3.515999,0.401382,-7.459913,2.665170,2.197343,-8.603502,-2.653550,1.874934,1.118112,-2.678244,5.388844,-3.093405,-1.955049,-7.512001,-7.591315,1.746321,-4.764801,-8.995086,-1.666910,-5.133356,-7.080793,-4.164629,-8.091091,-5.825867,-2.775455,-1.870328,5.582530,9.208890,6.940298,-7.936830,7.706996,9.858771,-4.551126,-9.187747,4.569945,-4.445437,5.075766,2.560401,-3.648831,-5.553739,-8.332038,1.816541,8.987063,9.107425,-1.480746,-1.755694,9.226020,-7.474208,-9.327829,-0.884187,3.295199,0.222644,7.102704,-1.366501,-3.255112,-3.203327,-8.294502,-8.624742,-9.085574,-5.997462,1.690807,2.447633,6.575347,3.527323,-9.547119,9.242567,-7.753219,1.979070,0.388389,-2.819009,-3.284481,-3.654187,-0.415376,-9.824811,7.482801,8.211955,2.274453,0.018622,-8.198073,-5.936766,1.473691,8.911150,-5.791165,4.645303,-1.076928,-9.543075,3.251494,2.346494,3.860213,-9.889408,2.786544,-0.424771,-0.504576,9.229622,-3.045551,-0.712663,9.120021,2.306564,-7.289722,-9.309825,-1.677794,0.800306,1.183693,7.532053,-6.324922,4.586561,-7.902006,-4.222887,-8.791907,2.754319,-7.807233,-7.316900,4.751306,0.132505,-9.041414,0.252889,-1.888486,-1.183282,4.947983,1.483384,-3.108787,0.031203,-3.318193,5.411308,6.986355,3.338459,-7.780517,-7.726593,0.759640,7.170372,0.511325,9.825827,7.504764,8.375634,0.449989,-0.271158,-5.328034,-8.918718,-3.614470,2.683255,6.906612,1.563833,-9.602317,8.444988,5.477451,7.580668,8.001010,8.862289,6.686399,-0.107536,6.362986,-8.605543,-4.138969,-1.192541,-7.996581,5.728569,-5.526232,-4.275507,-1.687091,-1.697722,-5.842413,-6.131806,-3.592995,0.359184,-1.547247,9.396783,-3.971718,4.984247,-8.370006,7.328526,4.799599,-1.870970,7.147303,-2.976711,8.621477,-3.975442,1.118897,1.945749,-5.127790,2.643316,-1.877434,-6.217967,-8.023132,-0.503677,6.674228,1.248022,-5.564191,-6.669509,-2.928011,2.070025,6.354277,-4.087248,-5.766245,1.622859,-1.196182,2.354835,5.276327,5.907953,-9.073698,-1.889431,-0.381701,-7.776794,-8.486539,-7.161281,-9.650307,-9.681792,5.091436,-7.427099,-8.510777,-4.916214,-9.855105,-7.015471,4.731748,1.012901,8.767094,4.631980,2.965249,-7.795387,-8.976320,9.568628,-8.830938,8.923009,-9.106025,7.549720,4.713300,7.535807,3.792372,7.136915,4.068070,-8.339629,-4.863118,-3.800934,-2.720734,4.279711,-6.432611,3.860197,-4.924530,-2.747577,-1.507759,-7.116920,-2.901038,5.685255,5.580576,-4.474888,8.358366,2.063824,6.216214,4.245293,-8.353001,-2.194621,5.051540,0.692082,-8.081957,-5.524722,4.855609,-2.625625,-2.041510,9.117607,-6.341593,5.411179,8.958473,-4.155852,-7.972211,-0.906227,-3.333912,3.843981,-4.819386,-8.156448,9.993569,8.716670,6.229903,-0.957517,9.616032,6.329890,2.054151,1.956868,5.451490,7.564469,5.031398,-1.972128,3.748264,-9.054245,-4.867109,-2.939525,7.893070,-3.028982,-1.260544,2.182817,-3.211795,5.412121,0.938175,-7.551022,-4.734691,-8.872600,8.482625,-7.612131,5.494537,-3.916631,2.538916,7.346439,-9.316036,1.951085,-2.897984,-4.113564,0.859942,-0.529770,-0.011517,8.601524,4.950729,5.305079,-6.417408,1.100888,-0.246146,8.100982,-1.866362,-3.664709,-3.364341,2.458549,-5.431747,8.348921,-2.142297,-1.187492,2.797402,9.016335,-3.325789,1.368424,-4.457562,-9.580696,4.689614,-1.237693,-3.558211,-6.938007,-5.143192,4.605624,-1.843543,-3.240033,-6.217496,1.978919,-8.229910,-6.063417,5.642197,4.312150,-1.869331,-0.894794,7.137730,-3.563273,-5.158195,-6.505227,-9.644200,1.092369,5.227942,7.832374,9.852800,2.586287,-0.138249,-7.333849,3.073949,7.030566,7.811872,3.367158,2.508231,-3.788266,0.803618,-4.786195,-5.639040,-6.462894,-6.010149,6.652824,-7.404440,6.741431,5.955350,6.725254,-3.637669,-6.646175,-6.211811,-0.464306,4.664583,1.758959,-0.800208,2.552267,-4.634129,-5.192215,7.724826,-0.545725,-5.292948,-4.495950,8.255833,-6.612369,0.232528,2.179017,5.117868,9.547860,-4.956334,3.978912,-7.031027,8.086295,-5.321713,8.957769,4.582384,4.779336,-6.615797,0.876670,2.262786,4.156269,1.210680,6.850687,-9.499456,1.020437,0.967799,2.929894,0.915625,-9.711856,-1.702012,-0.766938,7.835649,8.043380,5.429163,7.708552,4.637787,1.108130,5.791222,7.299622,0.257398,-5.123200,8.381613,6.612341,-2.508642,-7.204620,3.365010,1.610098,-8.564459,-1.089519,2.653995,9.637840,-1.983890,8.867627,0.307573,-6.153021,-7.871339,0.469455,-8.223967,-0.793277,1.694406,-7.341431,3.896771,5.713611,-6.798729,-1.700696,-4.703734,-0.919319,-4.766557,-7.055077,-1.192910,1.896273,-4.614441,-3.291922,2.932253,4.970733,6.778587,1.483958,8.306420,7.330508,6.269271,-2.177247,9.326065,-0.476073,-7.637578,3.214071,8.308959,2.489893,7.124231,7.025744,3.227735,7.108026,-5.053656,5.362385,-3.819118,7.805643,-5.425038,5.317484,6.448771,-9.120061,-5.276473,-2.147746,-0.653029,2.905385,-0.335225,-9.840713,-6.138662,-9.086362,-5.603138,-3.317347,-2.642694,-9.650859,4.503143,-3.003790,-9.777612,3.378218,-1.899316,-2.028601,9.611992,0.267928,-1.932728,5.049072,5.465865,6.113854,-6.827015,-5.658733,-4.710783,5.398640,-6.254808,-3.666647,-7.100048,-0.938287,9.459169,0.501247,-1.578524,-1.429197,-1.990143,8.756682,-1.982539,-4.985237,3.740786,4.348850,8.701010,9.603302,5.217510,-5.640374,2.838641,-1.031018,-6.883324,-8.391149,-6.468232,0.722912,-7.391566,0.839528,-8.463708,2.746020,-2.746192,0.377130,-6.522253,-9.507839,-1.885881,9.611173,2.923737,-9.747200,-0.516634,-6.742427,-5.232874,8.690271,6.302121,5.293865,-4.468779,1.549195,9.272146,3.261073,0.702764,5.293314,-5.961323,-8.368087,9.838372,2.282427,4.381721,-8.061164,-8.601487,-1.561676,-0.064886,8.642667,3.989493,-2.328300,4.992387,-3.787349,6.227499,-2.931671,-9.981850,8.870238,3.878554,6.591270,-3.900053,-7.375334,-0.435741,-7.238495,-7.745603,2.678657,-1.990451,1.028536,7.209346,5.532679,0.172911,8.277360,-5.556953,9.480323,2.455313,-6.345213,6.407508,-8.511128,5.584032,-6.613369,-2.853115,8.230153,2.443396,-9.896783,-1.132348,0.831266,6.224798,-3.617170,3.539400,-4.060508,-7.780445,4.131875,8.549661,7.450701,-9.229515,0.257605,-7.683669,-9.117848,2.451317,-9.052253,-9.487382,6.060496,-8.774764,0.618952,-9.245233,8.662792,-1.581521,-3.583020,-5.209225,-5.481688,4.197035,-2.690870,4.283189,-4.797316,4.926593],[-7.498754,-4.598085,-6.350622,2.872440,9.412718,9.129636,6.912754,0.913705,0.469441,3.226463,-3.644557,7.690570,-4.421787,5.174791,3.681834,-5.769210,-7.190493,-4.525192,8.175229,-0.152065,6.435657,2.997083,1.332104,-2.268459,7.516359,1.134703,-7.801115,-6.900642,9.770905,0.173620,-1.954761,-0.184823,0.626075,8.898923,0.037475,6.536453,3.800520,3.110203,4.242404,-5.992876,1.856988,-3.446558,-4.537773,7.643251,0.579429,3.537292,-7.416524,-9.484002,-8.610035,-7.337830,-6.162678,-3.892181,5.848557,-6.680659,9.414727,1.481326,-1.051843,-2.250646,-5.605671,-6.345923,5.913399,1.738839,-3.869452,0.600190,-0.050757,-1.351859,1.479822,-8.467109,-6.489658,5.472553,7.838208,-5.878190,-1.847111,3.757756,-2.887700,-8.597388,2.787337,2.700354,-9.156404,-3.733472,7.985672,2.163082,8.859882,4.652316,-8.018238,5.281680,6.080606,-1.374543,-4.174153,-3.273847,4.684914,-5.166344,-5.571493,-0.472230,-0.470186,6.034596,8.184017,-0.193195,7.515741,-1.069303,-0.201891,1.416940,-8.287629,-0.597614,6.290315,8.987704,1.303300,7.824304,-5.760146,-1.762432,-9.835743,-7.897732,-0.008287,-5.697884,-2.679498,-3.891098,-8.167814,-4.957159,7.710547,-5.429636,8.906366,3.341024,5.899017,-2.661789,9.695918,1.730043,7.047123,6.858178,-3.019551,2.209276,8.433308,-6.245798,2.203627,-3.531497,5.664264,-3.676359,-0.221452,8.745111,-0.927547,4.207424,5.153333,-9.960166,-4.036368,-3.454946,1.444569,8.866362,6.715941,9.482570,-5.958759,4.062425,-3.628772,-2.714586,-0.346986,-9.106042,-0.132446,-0.079859,-9.164465,-4.489920,-9.160435,-7.828910,-5.797163,-7.768719,0.877451,-9.717696,8.809513,5.852491,7.930010,4.732622,6.032268,2.222966,2.774372,5.397996,-3.994677,2.774759,6.150357,-3.180445,8.877392,8.710622,-5.042666,9.353925,-6.029286,4.586906,-0.192831,8.242325,3.970788,4.944335,-3.930390,-9.975606,-2.422849,6.797965,8.942145,3.610656,9.384603,7.727865,1.932975,8.910338,3.591101,7.033405,4.865124,-7.107537,6.905577,-7.820902,-0.188628,-5.309458,-9.991481,-6.436063,-2.024756,-1.728520,0.859407,5.164461,-3.540670,-4.197417,-8.435404,-9.581533,-8.378222,-0.440319,-4.565437,6.970464,1.999090,-6.432172,5.488946,-4.593585,-3.366967,4.172662,-8.161917,-2.294100,-8.725997,4.783290,1.309809,-6.423876,-3.172283,1.484727,6.043523,9.390080,7.046568,-0.547607,3.761690,-2.767413,-0.565875,8.842101,-6.892890,3.422020,-3.354900,8.365904,-2.982380,4.785594,-3.203899,-7.155120,9.980611,9.906309,8.276809,2.140759,-8.903012,-5.231771,-5.780424,6.201024,-3.172945,2.249486,1.408023,-0.959079,-8.190436,-2.314050,-5.742728,2.105246,3.422945,-2.955993,-2.934835,6.508039,3.016176,6.546864,6.960189,5.328145,-0.738835,-5.402971,8.725089,7.265355,-8.285772,0.381682,-8.073004,-4.791845,8.559304,-3.216551,-2.905031,-6.441245,-3.541459,1.572432,-9.393553,8.706684,8.605072,4.171780,-3.702936,3.002685,-4.275610,3.915875,8.923230,-9.561997,8.037653,-1.208989,-2.026118,2.322589,7.170612,-0.999473,1.178174,-0.712542,4.234683,-7.795747,-7.911509,-0.094225,-7.642169,-0.986529,8.990047,-9.367965,3.249860,1.222304,3.021957,-1.859408,1.128177,-7.443277,-4.290871,-1.548958,-5.444716,1.861626,-5.497986,-9.234919,-7.702683,-3.530248,8.566993,-3.522585,6.804526,0.696030,-8.571887,7.132204,-8.621688,1.467894,-4.925493,2.325348,-5.068667,-2.113858,-6.312328,2.963630,3.548049,0.528262,-7.287543,1.073401,7.044201,-8.852656,3.497854,2.985997,2.721636,-9.117767,-4.180523,2.684084,7.955411,2.143430,-5.566948,-7.461511,-6.788303,-8.868358,2.606592,6.590543,-5.599959,-6.657873,5.505293,-1.314990,-6.517716,5.368076,-4.252331,4.953357,-1.530555,3.477121,8.369615,-2.189003,4.735625,-1.046354,-8.563282,1.421632,5.845075,-1.434915,-7.354545,-6.457428,-7.467531,5.068364,-9.553870,-9.215878,-3.160433,5.353506,4.402430,1.246558,-9.663828,7.495777,5.355304,-3.983592,-5.591860,-8.239758,1.550269,-6.754402,-0.191604,-9.536870,-4.490748,4.972649,-0.923178,4.104522,-9.821298,8.242143,-2.429937,7.967776,4.701821,5.877202,0.455793,-9.120907,-0.450034,-0.849471,9.905875,6.360079,5.262099,-5.762207,0.683366,5.690339,-6.830816,-1.461287,4.835511,5.290706,8.790281,-1.721251,-8.260431,1.742391,4.363625,1.477357,-8.884523,5.725371,5.806499,-6.807501,2.805672,-7.530073,-9.203146,-9.102765,-3.971460,-4.549255,-5.307536,-7.842036,-8.017316,6.150418,3.351537,-4.215176,6.027839,3.795396,4.278993,5.644046,7.796440,-8.417892,0.951119,3.268542,-5.099953,7.082257,8.210591,6.084852,-4.153835,1.685823,9.030078,1.318179,6.656189,7.685650,-2.664085,7.009579,-3.136315,3.447402,9.227352,-0.811468,3.081517,-4.283888,6.105488,-0.011303,6.105492,-9.369889,0.863185,9.471640,-2.773953,2.096946,-3.528102,9.551948,-3.511516,-1.133983,3.835380,-0.697708,-6.620844,6.275785,-6.109617,4.576434,-4.721532,1.230730,-9.985682,-4.571003,3.061102,3.619257,6.326801,6.093283,-3.376179,6.405287,-2.318906,-3.170775,-9.232576,-0.579890,8.397585,-2.877740,6.928771,3.171327,5.556434,8.690285,2.179766,-6.574884,8.681139,-7.590832,8.284242,3.484498,5.516851,-3.877977,-6.194632,3.977133,3.286291,4.316901,0.759950,-4.274622,-1.603529,9.384402,-3.574624,-1.022051,1.587850,1.831944,-4.678301,-6.908248,-2.978261,-4.086930,-1.749626,-9.422625,3.695849,-1.984410,-9.059439,1.270123,-3.676931,-4.803056,-0.210637,-8.725746,-9.595350,-9.143825,5.964800,-7.373890,-7.134359,-1.326221,-7.782349,-8.732499,-8.740636,-6.972508,2.484251,1.023684,6.280600,-6.724910,5.955039,1.378221,5.798562,-9.623692,2.469732,-8.111621,9.218700,-9.717777,-6.617315,-2.338857,1.546388,3.634225,-0.583171,7.756598,7.804979,-7.332657,-3.045668,-3.093865,0.600406,-6.147548,7.479529,-5.595904,8.126013,0.500791,9.569146,-2.302459,-8.557932,5.852165,3.188292,-3.565946,7.249271,5.614964,4.486992,1.929595,-5.163911,8.636988,-3.653297,8.174703,-5.866783,9.105490,-1.239680,-0.910138,-2.361961,9.630214,-5.496426,-4.635409,-9.772080,-6.602032,6.372913,2.093816,4.427631,4.508861,-8.000346,-3.752739,6.268498,7.703261,3.319299,9.877391,1.176552,5.201681,-9.518827,6.169355,0.331264,-2.372530,4.531480,8.177463,-3.472618,5.295891,3.807134,1.828419,4.477533,-2.271325,7.677694,-8.072557,-3.730547,-7.692316,3.432856,-8.664595,0.002179,0.465342,-2.199200,-7.736900,-7.943635,7.840758,6.317800,-4.512972,2.358603,1.264796,-9.217556,-5.683253,-2.983395,-3.175601,-2.866672,-0.651103,5.585559,4.688255,-1.889465,3.915042,0.641563,-5.450971,3.580640,3.255770,1.192511,7.641818,7.864139,0.996357,4.604456,5.245505,-2.635004,2.896440,-4.756988,9.463196,-0.354147,4.481940,2.138499,-2.158403],[-5.717005,-5.455104,5.703490,-3.521518,9.406390,-2.302551,8.192097,-9.338067,0.825454,6.323899,-9.827306,0.482555,2.900962,-1.167525,-5.594715,-6.326430,5.084029,9.695643,-5.626840,1.033945,5.273766,-3.288395,1.809472,-2.274884,3.854400,-0.862279,-9.743017,-9.527986,-7.466090,-6.380213,-9.851745,-8.507134,6.946772,-3.417241,5.708192,5.192971,3.738251,4.090802,4.577224,4.567759,7.215927,-3.641317,9.538840,-7.566829,-6.266179,6.062586,3.609780,-0.091448,2.707984,-1.966124,-3.218082,6.023935,-2.032113,-7.796271,-6.048413,-0.863779,-5.453211,8.555362,6.133412,5.513467,-8.215836,-0.626096,-1.020294,4.223812,3.082931,-4.657394,4.800767,6.614240,-5.064217,6.768871,-1.919045,5.257674,5.747218,-4.817958,-8.221390,-7.091901,-1.533829,-1.582137,1.403797,-7.179663,0.595979,-7.939239,-8.259645,-0.871263,0.179507,9.188419,0.223836,-5.888554,5.682472,-8.073214,7.287317,3.658272,9.675893,-0.296854,0.868316,-7.429844,-7.333033,0.699296,-9.765662,7.575948,-1.013384,9.547354,4.048544,-3.725803,3.210925,-8.174534,8.310170,-9.388709,7.671762,4.745714,-4.212433,-9.899818,-2.595096,0.013768,8.170448,-9.673243,-0.097027,-6.933853,-6.964285,-1.347459,8.752332,-5.337703,-1.878923,1.140753,0.247658,-7.831161,-1.902123,-4.686067,7.108493,-4.609665,9.750841,-3.638462,-4.003220,0.317491,8.690122,-1.655716,4.390723,5.523055,-4.650377,7.074675,5.866395,1.459169,-9.564434,-3.166740,0.931197,6.305577,9.951013,-1.330843,-3.013622,-2.378019,-4.154685,-7.181441,0.822272,0.863344,-5.656105,-1.228421,0.808285,-0.484260,9.514038,3.170132,3.419413,8.826437,-9.274286,-5.606435,-4.483405,-1.541237,-8.540545,-5.037915,-0.984949,8.894606,-4.702431,-3.829649,4.940162,-0.200407,8.088743,6.718819,-4.496645,2.332833,5.890170,5.502822,6.306951,-4.482532,-9.482999,6.670956,-6.024849,2.573719,-5.217747,-9.175864,-8.624924,4.696366,-6.355588,-6.392059,6.012270,6.360541,-1.817697,-9.605271,-5.823413,7.220715,4.419665,2.255502,3.904554,0.563074,-0.907212,1.522496,-2.724409,-8.564837,6.242761,5.941733,9.354152,1.730248,4.277343,2.103853,-4.206119,-8.407263,1.274116,-9.829924,-9.447978,7.631051,9.909252,-4.911508,6.404121,5.466987,9.237855,6.254333,5.852022,-9.203931,4.363131,5.671687,-8.676906,0.683854,5.072157,-8.638811,0.294157,5.894577,-6.866212,-4.126596,-1.736195,0.247159,-4.209755,-2.159569,6.727241,-2.864438,-4.793070,4.612774,6.324515,1.510831,-2.007139,8.682828,3.781268,-4.924805,-1.148640,5.799609,-7.753799,-7.154861,4.041401,6.534945,-9.491017,1.860232,1.406904,8.462659,-6.675360,4.721696,8.649368,-2.620627,3.466104,-6.871454,-1.577653,1.454178,-0.192330,3.999106,-4.515238,7.701589,4.138579,-9.357478,2.343828,0.552903,-5.337559,-2.394271,5.120851,-0.229597,5.738349,-3.113573,-6.132944,3.523043,-3.115277,-8.053391,1.062641,6.458192,6.709363,3.545438,7.624401,-0.342419,5.941082,6.454326,2.905395,-7.762857,7.958077,-8.682911,-9.178339,-9.327435,7.649489,7.961894,-2.398411,0.615088,-0.577042,-9.800025,9.843224,3.795858,8.375389,-6.369041,-1.956477,-7.829584,0.095687,9.301393,-1.694914,-1.287252,7.485782,-1.198158,-6.479299,4.896488,-3.990629,3.566276,-0.488059,-4.272612,3.213044,-4.138879,1.598126,9.940082,-6.708825,-3.279773,1.858803,-4.277746,2.716569,-8.421605,-1.495466,-8.506440,-3.790693,-3.124510,7.632205,-4.715320,7.910016,-0.872998,7.937250,-3.680577,5.236387,-9.253270,8.706894,0.436905,7.899980,1.281020,6.384857,-3.757787,6.290422,-2.719640,-0.247507,1.378347,0.042196,-3.559268,-8.520643,-2.514646,-6.382496,-7.743953,4.513111,-4.945304,0.337674,-5.965169,8.737909,-8.649213,-3.094525,3.263272,-3.168270,-9.083491,0.078455,-0.728640,8.874332,2.468770,-7.425524,-2.523779,3.830705,-8.214146,-0.694594,0.393340,-5.341638,-3.975514,-7.178120,1.858106,-0.107937,-7.863220,-2.218529,4.421978,-4.906730,6.709281,-4.832870,-4.077657,-3.574907,8.235818,-2.106763,0.685859,-5.604688,4.658225,2.915052,4.003081,-5.587612,5.451247,6.097148,8.899946,4.023120,-7.976543,-4.479411,3.371988,5.630364,4.271037,0.726170,-0.917405,-9.600163,-4.359123,-4.914807,8.623283,-4.033095,-8.475136,-4.362348,2.833744,-3.388613,2.257809,-7.587009,-7.142902,6.432769,8.272366,-2.982347,5.982212,6.634851,-0.926083,3.589419,5.279143,5.031915,9.785925,4.712635,1.489270,-0.837004,-7.947508,-8.967318,9.243128,-1.852227,-0.389476,-6.640927,9.199071,-2.018223,-4.734584,1.720426,7.403426,8.823393,-9.507910,6.241972,-1.855475,2.940298,-1.829682,0.509409,6.599561,2.501229,-6.680420,7.886009,2.195458,-0.587767,-4.176323,7.190788,-2.259486,-5.837585,3.701920,-9.149925,-4.100505,-9.058123,2.310559,-4.913280,3.877802,0.112261,8.025694,2.413540,-6.650321,-9.858107,-4.872596,-0.131237,-9.235351,6.459003,-6.126994,-3.073239,0.317514,4.339945,-5.153774,-4.370364,7.450998,-2.886447,-4.837658,-5.313124,1.891831,9.718739,-7.653376,-6.466395,6.774775,6.360146,9.815084,-3.894167,-9.252610,-0.579637,0.344578,2.505795,-1.353040,2.168600,1.389956,7.083082,7.770531,-6.185912,-8.303340,-4.388388,5.392758,8.316540,1.037712,4.834002,5.238342,5.202414,-4.874839,-3.391124,-7.642568,-3.551430,9.019883,-0.341871,-4.844256,-2.271841,7.075060,-7.166687,-3.912458,6.172748,6.634628,-1.042252,-6.337649,9.954408,-6.167901,5.112423,-7.713833,-8.196757,2.762205,-0.499332,-1.607385,-1.219382,9.185301,-4.381592,-5.863043,-0.016601,-6.269663,8.101950,-6.636193,-3.499920,-5.344251,7.629785,6.282774,-9.435132,-5.375536,-7.545200,2.892084,-6.338051,-0.491991,2.369634,-5.931710,-5.852431,-1.828219,-6.058560,1.571229,6.022612,-0.285237,-0.100239,-6.492853,2.022011,4.261360,3.943031,-9.805059,4.485706,-9.703260,-2.744318,-2.509098,-3.339363,-6.275488,2.479508,7.411902,4.661231,9.894700,4.714651,-4.857447,-1.885144,-5.251726,-4.288550,9.766898,8.745877,-7.758740,3.837090,6.797193,4.518343,-1.374681,0.901263,8.377012,3.038953,-7.256274,6.673962,2.088547,-4.841408,5.743534,6.162635,-4.538538,1.595385,-7.594278,-2.503998,-6.067839,7.154251,-8.259704,-0.903494,4.138114,6.918046,-6.778728,-4.793361,-6.859866,8.728994,7.000223,7.198726,-9.932137,9.143588,8.526494,-0.963982,6.176884,-3.936198,-0.693640,-0.043081,-0.950586,2.777314,-0.067485,8.936277,-4.547430,-5.988892,2.563455,1.889209,-7.692218,-8.196277,-3.361776,7.965169,-2.661196,-0.303305,-8.168103,-4.946916,-7.563425,4.759157,9.550091,6.316389,-4.059046,3.886107,0.498088,9.929331,9.524902,0.422299,-5.677034,-2.572533,-3.974135,1.518514,4.116638,-3.135608,6.072318,-4.966161,-7.436351,-8.435438,1.277277,-3.404094,-8.098534,8.990754,6.824354,-2.450235,3.344039],[-4.027621,1.247685,0.761815,1.007259,-9.573882,8.168985,9.490246,-5.175380,-2.666546,8.178035,6.851976,-7.131128,-0.530407,0.040151,1.044256,1.502016,8.497542,5.452326,8.055347,-4.114457,3.936577,-8.385260,8.640299,-3.259312,-2.405728,-0.860888,-2.146265,-9.346149,-3.016084,9.620472,9.178962,2.894720,0.163828,5.163056,0.607775,-6.394912,2.021145,7.377303,8.695910,6.466529,4.187155,7.451846,-9.236508,-3.009211,-4.420141,4.422942,-6.767307,-9.393259,0.151281,-9.812294,2.462798,-1.106293,0.536130,2.009859,0.710827,6.479337,-7.618299,-1.631159,-3.389921,0.285625,-5.949349,-8.684238,4.373739,-9.833255,-5.963244,4.986827,9.694753,0.485752,0.818733,-5.397227,4.324526,4.380412,-9.118146,-3.272290,0.868116,1.931954,-9.635879,-3.677064,-7.127965,2.151394,-5.389192,-6.365319,-9.698366,-0.041108,-2.999297,-2.175686,-5.867955,3.491205,-4.392987,-9.153460,0.051511,0.086405,1.237961,6.690257,2.022016,4.310438,4.392043,8.289805,6.612825,3.180860,-0.290597,7.511484,-5.259639,-7.490523,-5.464477,-9.628630,-2.540992,-7.887416,4.399450,-7.907439,-5.734877,-4.003998,8.474057,4.740249,-9.666389,4.854387,-9.006123,6.343608,0.859663,0.412627,-9.180104,-8.329951,-0.489455,0.179099,-8.206883,-3.510609,0.474497,5.994665,-8.461676,6.009894,9.614593,-8.810704,6.615636,-6.189254,4.611570,-9.363441,5.024244,-4.169594,6.824406,-8.671861,1.802884,-5.381519,5.442680,-9.452387,-9.990223,-0.321890,-0.315314,-3.128010,0.619866,-4.993944,-0.035716,-4.321747,5.239944,8.789835,-7.375247,6.869130,-3.576007,-2.290718,0.665423,-5.921146,-5.514344,3.665841,8.889432,-2.350307,6.863600,0.494990,-2.945969,1.885289,-6.438430,-3.777958,-5.141831,9.365279,-1.242964,7.408547,-6.436025,0.692922,-3.980632,1.203002,-3.708518,-3.016662,-7.100584,-2.013658,-8.992125,4.164845,-5.824938,1.607751,6.746837,-8.732136,0.905005,5.794034,1.608786,-1.261650,6.485225,2.269614,-7.840175,9.208652,5.516761,6.450600,-4.032081,-0.512965,-4.253715,0.472969,-6.594866,2.276783,4.777404,9.743112,-1.321960,6.853121,5.158614,5.243674,-7.279957,7.240376,-4.389000,8.640800,2.911199,-3.465818,-7.240997,1.011168,4.419269,-7.357816,7.044156,7.834689,7.648041,0.778478,0.357745,-1.020266,-1.930468,2.408165,-4.445221,5.475951,-2.806190,-7.097145,0.822039,-7.593635,-7.238164,-5.315515,-0.675729,0.266693,-1.967502,7.335243,-5.454671,5.277978,9.558667,9.899486,-6.197745,3.593579,-7.078931,7.921339,3.938095,-6.452818,-1.164332,0.965658,-5.669861,-0.549747,3.716436,-0.895525,-0.131670,-8.817082,-5.873315,9.734265,-3.826254,-8.029969,-5.704204,7.180344,3.612183,-0.461013,-9.489345,-3.738016,-5.062214,5.939511,-1.257092,0.982233,3.763414,-8.414129,-3.937357,-4.404303,-7.440936,3.609809,-4.742592,-5.803974,5.165063,4.758729,-2.258907,-4.169501,8.887002,6.687067,-0.214990,-5.844020,-7.608044,9.973538,-7.463811,-5.717294,-1.433204,-7.548360,-2.245053,-2.640425,3.413972,3.513594,-9.266782,-4.994070,4.758510,4.277351,8.514407,5.772905,9.809942,-1.958747,8.869224,-3.632433,-0.820590,-8.063364,-3.239180,-1.552553,8.270851,9.986532,-3.971004,2.683657,3.002608,5.217879,-3.506651,8.027026,6.274251,1.242308,-4.571851,1.942267,-2.855899,6.504110,-6.256288,-7.941445,7.505029,0.930731,-4.103648,5.438590,-9.918217,-2.804677,2.681961,-2.686526,3.180776,7.527161,7.046956,-1.334379,0.029164,-7.481967,-3.277148,5.514389,9.328888,6.680597,6.580585,2.348034,9.514268,-4.276851,2.329651,2.623139,-3.845229,-6.668447,7.336215,-1.480142,-8.008668,7.052557,5.795726,-7.240454,6.978108,-6.589615,-7.954732,-6.498897,8.301719,4.309607,2.579048,6.204283,6.138086,-2.466170,4.494902,7.101133,5.123891,-1.177514,1.084694,8.796500,-0.729808,1.922378,-4.250153,-0.386993,-3.125285,-9.993915,-7.335413,-8.582523,-8.893361,8.125440,0.232769,4.087837,6.184788,8.357423,7.281576,5.909131,4.954218,-7.820216,9.511653,9.063050,-0.063217,4.098884,-0.284571,8.354561,-4.917383,-6.591078,2.358453,5.057626,6.182748,-0.137543,3.601867,-4.558379,-6.678181,-5.743964,5.288907,-2.240833,-9.662780,-1.544449,2.650182,2.339702,-1.025212,4.170981,0.898060,-4.624916,9.260352,4.608094,2.017475,8.295109,8.602822,0.383597,-5.710407,-0.949983,3.980172,0.949755,-1.203792,6.665082,-1.208868,6.777827,5.130932,-0.721047,-6.639278,7.935645,8.459529,1.727357,1.896904,3.678027,-8.525026,-4.880427,-9.423584,-5.362979,-4.716579,-9.048380,-9.544841,-7.243350,6.290447,6.521140,1.770955,6.387027,4.963465,2.682718,2.983797,-2.985919,-6.030312,-9.735661,-8.737049,-9.938170,-7.118902,0.455696,-3.834925,-5.753600,-7.995052,1.417544,-6.471239,-1.242876,8.048384,-8.400652,-1.682866,3.217319,0.626061,-2.263069,-9.269304,-0.933348,4.709972,-6.722184,-1.789216,5.403683,-7.100592,-6.571099,-2.466749,-3.934838,-6.188620,-8.079356,-9.801235,3.119751,4.447556,4.033277,-0.174363,-9.263384,-6.771234,0.063955,8.665997,3.750832,3.376742,0.297091,3.715190,-6.361578,-5.745942,-7.149742,-0.877684,4.538358,7.442555,2.271684,-3.025404,8.814961,-7.121266,7.071920,-0.342427,3.467122,-1.691043,7.992538,6.680348,5.192356,-3.314465,-9.877029,-7.467171,2.669373,-4.073430,2.959580,-6.104634,1.136785,-2.812470,0.582699,-8.412858,-3.168423,5.371313,-4.407663,0.675666,-7.355360,6.034689,-3.216515,-4.187120,-2.435242,4.791869,-2.952781,-4.239263,-4.512847,-0.412055,3.957245,4.930724,-0.765759,1.070083,8.388387,-1.877836,1.741844,-7.699669,9.125093,4.676517,8.095245,-8.732706,-4.144216,-1.137583,6.744186,-9.987943,9.986806,-5.086816,-6.638110,-4.973032,9.821404,-9.170904,-6.539472,-9.015274,0.352951,1.036750,-8.205485,-4.685998,5.148678,-9.873454,-0.130459,1.318566,-3.277291,6.776469,-8.697601,-8.849840,-0.918207,-0.857948,1.293363,5.144500,-2.181861,3.679466,-3.310316,7.424472,-8.387778,-9.216085,3.685355,-5.817660,7.494511,-9.801189,0.820301,6.531278,4.172942,3.658845,3.705302,-3.415268,5.085014,-8.564054,2.071218,6.931011,5.137217,-5.148947,-7.276628,-9.770726,-9.488290,7.778157,6.998199,-9.489284,-1.652016,8.699013,-6.934423,8.268219,-0.623794,1.036766,2.573616,6.005662,-9.850642,9.754419,2.724752,-4.832476,7.265223,7.872069,5.400381,4.803055,4.124269,7.657366,-4.738697,-8.792379,-1.669793,3.164482,-1.810469,1.736637,-3.542124,2.594508,-5.353943,-2.345724,5.255593,6.682284,6.176104,-2.515268,7.921735,-9.503169,-9.379182,-0.553967,-6.053976,4.570352,0.554433,9.503668,9.611302,9.042361,-6.842679,4.642238,4.320094,-0.939317,-1.104251,-8.120069,-7.116575,0.289972,3.063991,-3.583967,9.515823,-4.851100,-9.777999,5.972257,6.952489,7.036775,-5.072367,4.895048,6.363243],[-4.959840,9.562848,-6.222771,8.152258,-6.152150,8.679446,-8.682291,-7.142871,8.830695,-0.731272,0.421739,0.710814,2.029596,5.277530,-3.206822,5.179653,-5.211673,1.375504,-4.166416,8.535319,5.680418,2.573104,0.550897,-3.026630,-0.188929,8.088013,-9.556834,0.988570,-6.584202,9.944690,2.630419,4.711260,7.223074,-0.308888,2.800171,-3.749255,9.739289,-5.381237,-9.480983,9.557269,8.542315,-5.928265,-0.774966,-8.480332,-8.296631,3.164177,-6.712605,-4.130351,0.155581,6.988175,-7.160555,3.249929,-8.982781,-1.380124,-7.754376,7.269506,7.900776,-5.549236,7.701248,-7.850182,-8.007809,-6.934078,8.642661,-0.411825,6.002201,0.496189,8.436694,9.093790,1.001093,-1.798475,-3.299397,9.383724,4.076205,7.782895,-6.632627,7.064441,0.373924,8.530398,-0.888917,6.207920,-7.824965,8.037292,5.791919,6.671572,-6.882535,-3.193717,2.593513,-7.287913,6.034780,-3.450857,-0.759377,-9.984673,2.721959,-4.078806,7.491852,9.297860,-4.902692,-4.775420,-0.098664,-3.106118,9.710649,8.023789,7.967620,-1.513892,9.967067,-4.985574,-3.751617,8.494933,5.450122,2.216827,7.041450,-2.108838,1.314667,6.035655,-2.163242,-0.419560,-2.440503,-5.426490,-3.103453,0.325931,0.273987,2.653016,-0.084502,7.286672,-0.113459,0.701289,-7.698460,2.063134,-2.668473,6.552173,4.287757,-3.572639,6.268028,2.008232,3.681265,3.917317,-6.784355,-6.161296,2.378129,-6.464566,-9.771275,2.813882,9.091034,-5.673418,7.239276,-2.883870,-6.741840,-8.962550,-4.526412,3.921552,-5.967282,-4.823819,6.761266,-0.616863,5.154668,-3.727144,-6.876786,-7.282499,-9.534594,5.631614,-1.702493,-0.608342,-3.955533,-8.998269,-4.605768,5.584920,-3.993658,-1.412983,-2.223738,-6.717850,2.832045,-5.891146,-1.376301,-7.535140,9.780720,-9.655914,3.642624,-9.754456,3.465874,-0.821573,-3.982395,0.141144,-6.559916,-7.939568,-5.187717,-2.495952,2.699093,0.389406,7.371485,0.379629,1.513881,-5.603080,-3.327101,-7.274511,4.074155,-4.860599,-1.739646,-1.189900,6.016781,-0.675820,3.651672,2.310012,3.742513,-0.842988,-4.869615,6.001949,4.144994,6.863142,8.614610,5.639548,-3.563144,-8.513487,7.581072,7.632226,-0.227627,-8.359031,-9.073211,-6.912572,-5.686779,-5.648240,-4.739072,-2.151598,1.407717,-0.535625,-8.883234,5.576792,7.421953,7.207917,-5.629241,5.128741,-5.577632,-9.018157,9.028629,-7.146562,3.579329,5.788536,9.994184,5.226540,4.026537,9.392138,-5.239082,-1.758125,-0.305319,-3.292626,5.154142,5.872703,-4.735191,-0.637237,2.930884,4.677278,-0.410094,-5.787076,7.985765,-1.826361,9.385720,-7.855243,7.246268,7.493255,-8.134582,-6.995701,6.667303,-3.046639,-1.012516,-5.202814,8.263946,-7.817916,-3.617253,1.623893,0.567732,-2.822982,2.340840,-9.322522,5.829220,0.045034,7.960365,1.842416,0.905362,-4.882075,1.143176,1.601187,1.886744,-6.724628,6.529726,5.727083,4.188923,0.209140,-9.269038,6.736790,-8.256215,0.902930,6.575848,-2.473291,-3.096915,-9.637519,4.238052,9.757481,0.792884,-1.774598,8.180173,9.233853,8.182666,-2.646768,-8.729988,-8.915365,-7.636412,6.337407,-1.285137,-6.509105,-7.516012,-1.102772,3.062330,-3.135749,0.979280,8.497810,-3.276709,-5.714837,7.132782,1.570389,-7.040515,-3.281325,-8.922087,-1.417740,-4.611031,6.035558,3.027237,-2.566090,0.841285,-7.962459,-4.225091,-1.689953,-8.500347,-5.307921,1.384138,-5.836824,2.831571,-0.628915,-4.489251,5.497882,5.186013,3.252880,-3.289666,9.304288,7.298364,9.908937,0.754698,-9.506709,-6.441346,-3.222573,4.091772,1.967869,0.321129,-0.491239,5.835941,-6.682885,-4.880338,8.600020,-0.670967,3.137959,-2.311788,3.691693,-4.135370,-4.867782,-2.875337,-0.134668,1.516473,9.509269,2.893325,-1.705063,1.347238,3.021422,-2.355919,-2.872383,-6.014327,-9.340218,-0.244043,-4.385076,-6.323322,4.926172,3.941651,-1.959019,-5.956131,-4.999185,5.934933,-0.754211,6.138236,-7.623588,-7.929859,-9.790229,-5.216724,-7.624904,-8.229561,3.017185,7.072550,-5.036603,-4.889415,7.159655,-8.138144,-9.055004,-0.761786,-4.642665,5.248271,7.259469,4.100935,-1.219646,1.432773,8.907572,1.255015,-8.546982,4.871545,-4.894792,9.147257,-8.548382,8.015341,6.384824,2.801600,5.307449,-3.824999,1.225342,6.491515,-8.382598,-3.903407,-5.974735,-1.897607,-1.670439,6.872224,-0.391103,-7.296570,-9.597966,2.946169,0.004417,8.541738,0.001859,8.817003,-2.605765,-9.840680,1.410188,-7.070481,9.700106,-3.277201,-0.784461,-6.181046,-1.212297,-4.065910,-7.529793,-1.138985,-5.423852,-1.967935,-3.662765,-8.255004,-6.686852,5.660551,2.838295,-5.747666,-5.499536,-5.700464,-6.723710,2.975084,4.431735,-0.904628,-1.125757,4.479114,-3.656148,-2.071258,-7.484110,1.234523,-1.620183,-3.653785,-5.627782,-4.597368,-3.093418,-9.219572,2.451712,9.536895,2.863363,-3.511639,3.933321,-9.523794,9.975902,-9.222506,-3.932012,6.631674,-3.144835,-4.617186,-4.248712,3.959819,-4.002228,9.812606,-4.973598,-8.152022,-6.880155,8.133206,0.451244,-2.245857,-2.650658,-0.233079,-0.241702,1.762699,8.165434,-3.809914,-6.238419,-2.515940,6.528177,-8.628990,7.181137,1.394891,5.594399,6.966026,-4.298139,-4.204551,-9.063322,3.563307,-3.931156,9.620844,7.596499,4.874398,2.793330,-5.564118,8.346236,-3.235524,8.463602,9.067964,-0.051073,2.009709,-4.447779,-5.070066,-0.094466,4.621094,-0.315422,4.306515,-7.494368,-7.061373,-3.518400,-4.978279,8.329661,-9.530798,-4.150655,-5.907889,-1.053243,-7.725566,7.313116,4.232109,-1.215727,-9.094733,8.193037,-7.646060,-2.396002,-0.471882,3.256678,-6.284427,9.337464,-5.576847,-7.483601,2.244072,-2.587826,8.049312,-6.603716,-5.657639,-9.173160,7.047322,-3.025568,1.638619,-4.570169,1.710641,3.100741,8.916725,3.421241,-1.821297,-2.606720,-1.299405,7.346432,-1.220299,3.659852,8.776667,8.081367,0.706933,-3.260692,-7.599932,-9.878970,2.517070,4.814051,3.184382,-9.255841,7.178509,1.275529,8.029323,0.599593,-4.148847,-0.552705,-8.882622,-1.940875,4.153295,2.619637,-2.058247,-9.341908,8.674125,-2.364629,-3.478056,-3.301633,4.314832,8.180384,1.531489,-3.527659,0.251647,1.614726,-1.541335,-7.260641,-0.121044,9.041958,9.438584,-6.252857,6.551248,9.031161,7.738363,1.449149,5.959716,-7.468984,-4.758003,-2.742655,0.773143,1.999110,-3.282344,-1.256586,0.596602,7.686927,4.966660,4.630968,-5.482644,-3.469403,0.647391,-4.794579,-3.052793,6.764768,3.797371,0.871084,9.424555,-7.904017,-5.103956,-0.793300,-1.372524,-6.007209,-5.584681,-2.983851,3.200195,-5.902431,1.394504,9.027938,6.197957,-9.322364,5.008048,-5.087391,-1.819148,-9.017217,7.897617,3.962805,-2.719637,9.124939,1.971411,8.536860,-1.089647,0.044745,-3.017232,7.168324,5.406567,-7.104788,3.838332,2.442455,1.814410,-0.308190,0.854935,-0.177980,-0.235906,-7.723249],[2.626493,-7.920765,5.015247,2.364702,-2.884161,-7.523157,-0.514398,-2.245456,3.236073,-1.436078,8.863993,9.659512,-6.612383,-4.229079,8.206991,-1.879972,-0.983511,-7.833999,1.411357,9.023257,-2.291756,6.347036,-9.660152,3.754915,-2.090407,-7.000824,-0.796548,-8.238388,1.101711,1.858031,5.323455,-8.084028,-4.624224,6.614915,-0.040288,-7.648601,-0.532346,-0.529085,0.280332,-0.683914,3.946173,-7.489674,-4.300216,-4.649469,5.954325,-6.064915,8.232400,0.089676,9.629567,5.859468,4.844208,3.482118,-2.159495,6.799124,9.365881,1.283051,-0.117442,-7.908881,-4.328516,1.862495,1.609952,-3.328487,-2.274010,-4.449190,-4.946622,7.198249,5.211521,-2.573974,-7.926746,-2.281183,7.880724,-6.605017,8.754734,3.282958,9.672721,6.418297,-4.082993,-7.368791,6.885762,6.279605,-5.195983,-7.841901,1.075350,7.461805,-2.258550,4.709249,3.884904,2.298269,-0.027224,-3.448920,3.229013,-6.647388,5.415490,-3.747040,-7.089280,1.171462,8.084304,-6.377815,-1.985473,-6.320383,8.830099,-6.001399,-0.883613,9.471820,-8.300837,-7.216788,-6.044226,-4.993455,1.026841,-5.518798,-6.575822,7.575889,1.976768,-6.365242,4.440450,-7.455010,-0.887133,-3.836997,7.866593,7.997654,4.131512,9.065857,7.711850,-7.373589,8.391774,-1.809948,-6.146290,9.549594,7.216389,7.691689,-7.997966,-7.126113,-3.622693,4.340965,-1.772412,-9.541732,1.813340,9.472024,1.377965,1.893803,5.021497,-7.861118,3.748471,6.763592,9.285690,-4.896474,6.357395,-9.998702,4.888047,5.413531,-3.372582,0.957538,8.467958,-4.875620,-1.357449,1.238243,3.222004,4.249006,4.011109,-2.041518,8.116505,6.126717,4.935146,2.353648,7.183091,-2.559312,-1.192681,0.976403,6.240319,-5.734796,-0.079985,0.798961,6.840534,-0.948123,7.515389,6.417225,6.486416,3.940174,-5.768307,5.857498,7.460482,0.880423,-4.358084,-4.092899,1.198610,8.492680,-0.977009,1.456814,-0.603630,4.022966,-6.419526,-3.625436,0.386923,-3.913578,-5.191046,8.027909,-7.903433,1.385007,-9.842890,-3.207619,-0.092773,8.336247,-9.056249,-8.071291,-1.302575,-3.611243,-8.117948,0.863515,7.003910,4.891739,8.366746,5.996594,-5.686006,-4.069796,-1.317609,-7.254280,4.165755,-4.967973,-5.085075,-6.928541,-6.071360,-1.024870,3.753450,-0.023895,2.645839,8.481922,-4.228566,-9.691658,4.933891,7.344534,2.489798,8.978482,4.897925,-2.760944,-9.493520,4.817826,-5.954332,-1.066779,8.765969,-5.664720,-2.382452,5.578250,-2.784729,9.968877,1.728935,-4.635479,-6.284187,9.763008,8.262053,-6.648187,-9.885976,-8.857682,9.408481,-0.966668,3.940362,1.121679,-0.473980,-5.796972,3.460589,0.946515,8.782285,5.557477,0.161461,1.466406,3.109966,-1.052125,2.639434,-6.171742,4.532134,0.723891,6.609450,8.919573,-8.518648,-9.229288,7.855737,-6.100232,1.231220,2.269273,-9.197095,0.161550,-8.114815,2.200897,-6.207367,-6.441511,-9.777284,-4.792972,-5.722202,-4.858948,-8.735389,-9.213692,-4.913590,-4.693744,0.617310,-2.715389,-1.092426,1.149861,7.454694,4.822951,-6.864000,-3.179386,3.342462,-3.760779,-0.001149,-0.718906,7.962144,-7.212230,7.277166,-4.457193,-9.265261,-3.111377,-1.829645,0.995208,-9.248693,-2.182309,-3.272524,-0.439225,6.643008,-5.731118,3.991921,-5.483532,8.873233,-2.479566,5.726873,4.625566,5.955289,1.861655,2.397785,5.086461,7.626970,-1.490544,-5.659419,4.199444,3.362170,9.391149,6.117596,-4.382063,9.216896,4.127916,4.027347,-9.397562,9.862040,-7.758279,1.698695,-7.441074,7.206283,-7.894601,9.614902,-7.970168,7.529483,3.105170,7.012566,-8.713832,-2.740435,-8.120431,-3.420621,-5.074420,-2.771428,2.219171,6.845236,-8.781881,-4.367965,-6.301714,-6.864946,6.120479,6.819824,-1.584855,-2.337265,7.607106,6.326461,-0.492860,-1.314412,5.220869,1.292737,-6.125974,-3.347469,-1.178386,-1.794627,6.094566,0.345801,-0.358247,3.093531,9.628915,9.651179,2.894588,-1.721693,2.895248,-7.420970,4.984467,7.126370,-0.942968,-8.898553,-9.119530,-0.171464,-4.342541,-9.837395,-1.136691,3.731704,5.995826,-6.809113,6.519723,-8.542533,4.827851,7.567458,2.150605,7.934326,3.291945,-3.663337,-2.536403,3.324133,-1.022267,1.486330,1.888270,-7.179808,-6.482248,9.760261,-6.552192,-5.172091,0.537170,-7.083812,-8.966313,-5.010988,-6.012089,4.713476,0.638897,0.348755,5.637795,-4.235963,4.077639,4.257286,9.925984,-7.294471,6.536034,-5.682650,-9.280318,3.558652,-0.694181,-1.012565,-9.171824,4.917101,-4.289437,9.873033,5.288411,1.627676,-5.489337,-6.773549,0.737928,6.688157,9.696392,2.193424,1.833652,-0.416829,5.172132,-4.260529,8.863031,2.466392,-6.978117,6.345345,2.538677,-9.223405,4.680485,8.075401,9.699772,8.289754,-0.652847,0.144638,8.061051,4.327372,-7.990479,-9.436351,2.895023,-9.723678,-8.956314,-6.656096,-3.802114,-5.024961,1.061194,-0.969868,-5.299991,-4.963364,6.760709,-3.766220,9.279406,3.450176,8.594412,7.456246,5.660714,-2.237138,2.040914,7.989845,-6.313788,-5.250301,-6.513900,-2.916592,-0.250570,0.243749,-2.230959,0.613993,-4.040363,-2.226127,-0.766376,-9.992510,4.589814,-3.315807,2.878883,-8.668532,1.938757,-6.015255,9.527768,-0.141368,6.041602,6.820560,-5.473733,5.569101,4.535967,-6.654030,-9.156993,-9.082010,-9.814658,-8.104798,-4.385777,8.395083,4.941570,3.264938,-5.854302,6.405555,-1.285630,-3.404781,4.675047,0.338446,4.790258,-5.268432,-7.813950,5.855706,1.422042,1.458885,-4.954875,6.395921,-1.953137,-7.799454,8.590450,-7.853433,6.665844,-6.039802,-7.726034,2.192152,7.961927,6.710577,-9.197599,-8.970912,6.948821,-9.953055,-7.412903,3.569457,-0.330223,-2.840003,1.354524,2.318287,3.281500,1.996791,0.220593,7.849417,2.483326,8.710760,3.245864,7.276059,2.720448,-3.386122,-9.640736,-9.137745,2.234830,-8.091288,6.921412,2.290697,3.045124,-7.500122,-3.862132,7.186920,4.704305,0.524749,5.154386,3.540313,-8.014929,-7.517654,4.206575,-8.150051,2.034243,-1.749453,-6.987998,5.007334,-1.167948,8.234383,2.647868,-4.434411,2.143557,8.350011,8.931826,9.481966,-8.867832,-6.008065,-0.675369,0.955974,5.521925,-3.309924,6.081031,9.715822,6.189778,-3.769974,9.757141,9.072916,1.476044,7.548637,4.775777,-2.296126,7.580809,-8.615956,6.274014,9.717570,2.885483,3.880808,-4.420492,-6.427972,5.933399,-0.363295,-0.861776,4.974224,0.981856,-4.417965,3.588881,-8.990650,5.859485,-5.611643,-7.027727,2.290984,2.905971,6.873133,0.571919,9.218299,-3.967913,7.618531,-7.236617,-9.240733,-6.162812,-7.118065,-0.510403,-0.514919,9.752336,-9.479904,-4.076299,5.331060,-9.063379,9.645487,4.487784,-7.860804,9.305272,-1.165035,-5.747519,0.082746,5.274382,-5.032530,-5.272590,8.996460,8.453406,-0.983791,3.562169,1.621534,-6.201532,6.432522,-4.746144,6.689403,0.946873,9.953269,2.628029],[-9.134291,-6.198105,-6.658183,3.338799,7.511317,3.581826,4.550134,1.857060,5.840159,4.630279,5.410106,-1.444662,0.249296,-9.698348,-3.668410,7.087929,-9.427049,1.480411,2.929249,-8.586025,-3.222972,-2.154837,-3.257624,-6.805902,0.056429,-9.474326,6.221951,5.742354,7.073938,9.314555,2.257610,-8.421082,0.171115,-7.105747,1.281963,5.682576,0.008983,8.739841,6.633394,6.540324,6.128708,-7.652326,-9.700173,-9.200251,6.963662,9.064723,-3.612234,2.639693,-1.213848,-2.921590,-5.179957,8.309399,6.809995,-8.227181,-7.582613,6.388927,3.495027,0.171092,-6.408874,6.419535,6.584593,-5.642265,1.983599,3.790122,-4.772663,6.366906,6.096486,-9.928592,3.565416,-8.544105,-1.598176,6.895985,3.880538,9.370471,-3.300011,0.319568,-5.927736,-9.931780,8.058069,9.298704,6.020147,6.290598,0.707642,-4.196424,-9.631525,-4.345912,-0.283867,-3.662996,-0.997243,7.599501,5.313557,8.328484,2.840608,8.098836,7.068929,-7.289006,5.412213,-1.293135,8.682197,8.980460,9.268678,-5.164338,8.110724,5.670021,-0.799306,6.474690,3.291568,6.968967,-6.266656,-9.836895,7.084818,-0.109388,-6.218728,1.002058,0.625928,3.675031,1.033949,1.716151,-8.742322,-7.056137,7.148043,-6.310544,-2.427086,8.762822,-9.873654,2.421888,-1.057878,-1.054372,-0.941452,-6.184057,-5.657540,-9.110506,1.404664,5.475992,-2.213594,5.145779,0.973233,-4.836380,9.168380,-6.763893,0.905272,-4.898352,8.986282,-7.898393,-7.716045,-1.273112,-2.600391,-2.104450,-7.515727,-6.258285,-1.532194,-6.154797,3.617205,0.637258,2.473129,4.684824,3.109206,-8.286054,-2.179475,-6.769099,-9.401951,-5.752839,1.960702,-7.506398,-9.666195,-5.545256,-8.023473,-4.306447,-9.669828,5.501024,4.774471,-2.133521,-5.727208,1.642704,-9.083602,0.289905,-3.205954,0.652428,5.383968,8.166186,-5.155853,-0.972783,6.874909,3.793922,-3.224465,9.384133,4.295771,9.036154,-0.528327,-5.579664,-9.697096,4.905098,5.364159,1.090284,9.733278,-8.749503,-0.045225,-7.565811,2.458897,3.261021,-4.018390,8.600346,9.608959,2.305424,-0.285139,-1.475150,-8.063948,6.639683,-5.431910,-6.114986,-7.045912,-0.995262,8.294267,-2.516646,-6.878786,-3.151780,-6.699974,-3.947032,-3.883220,7.066640,3.520606,-3.348432,-9.604970,-2.701093,-5.464831,-0.769914,5.995527,3.109989,9.574145,-2.105474,-8.377298,5.195124,-1.948407,-5.567573,7.004491,2.007268,4.164136,-8.909404,-9.789425,-3.840441,6.320277,3.883382,6.719718,9.772460,-1.395362,-6.303125,6.358456,7.591022,4.220328,-7.861676,0.612973,-8.935934,5.933070,-1.109436,7.958746,-9.500762,4.651882,9.308700,9.201200,-4.818003,-8.144774,-0.859222,-3.558029,-9.139824,7.108586,-5.804875,-5.413967,2.527277,-8.081780,7.211647,-2.059449,-1.845704,2.983017,3.139639,1.247343,-9.952778,-3.812883,3.673249,-8.981002,6.402412,-8.847398,0.320432,-9.565897,2.473700,-8.323186,-9.184448,-8.106935,5.453723,-8.822129,-3.898459,-8.084670,-8.262796,0.778559,5.530214,4.763313,3.939587,-1.855072,-2.988210,4.735640,5.979615,4.543830,9.955543,0.294075,8.294762,7.800175,1.385136,7.282514,-9.041709,4.525674,-8.304985,-4.370725,-1.467079,-3.771295,5.368158,-0.806255,-6.881411,-7.934820,-3.363620,-6.354525,-3.673689,2.940882,4.512414,9.492242,-3.802519,8.385955,8.675674,-9.444647,-7.403231,-0.517787,4.680367,0.462955,-8.092877,3.156146,5.887682,4.107867,3.500241,2.387222,3.287441,-2.239225,5.418568,-3.940321,-1.909811,-3.167004,-0.394683,-0.199868,-4.326160,3.435742,-8.537328,7.779671,-9.184152,2.397550,1.220728,-7.873484,5.582706,-7.609732,-7.268765,1.820111,-1.383314,2.179733,-0.116690,-1.113651,4.744318,-4.935910,-3.255241,0.132525,-4.317765,-0.254615,3.901840,-9.731859,6.101693,9.523743,1.831210,-3.780807,1.122895,-4.313142,-3.481000,-0.936052,-9.677793,9.921668,-3.226086,6.588811,3.281622,-1.278798,-0.350449,5.359603,-2.232739,7.184753,8.342080,8.063732,-3.874210,-3.409877,-9.086857,-4.245759,5.385027,6.774807,8.537154,-6.334532,-0.171857,3.121557,2.795972,-3.466295,-9.768661,-2.234906,-7.912164,-2.975672,6.888147,6.497378,8.727012,4.604382,8.521532,-6.395886,2.317354,2.160757,0.279051,6.536666,5.050210,-1.673008,7.822310,2.851877,-0.069397,-0.709117,-7.572687,1.555133,-7.365728,6.872274,5.621137,-6.609202,-2.397776,-7.865612,-5.373473,5.193224,-8.090785,6.586649,-0.102813,7.744014,-6.833337,-7.067917,8.844612,-3.294688,-8.243499,7.144923,6.820942,1.915635,4.332585,-6.112671,0.632627,2.906605,3.190331,1.790570,6.455647,4.761774,9.771845,-8.169695,2.522404,-7.773620,-7.955877,-1.906792,9.951333,-0.392861,6.453143,-6.592874,-9.689635,-1.299488,9.900925,4.314618,-9.706457,-3.454063,-3.397000,-7.772993,-8.513696,-8.331725,-7.929842,-8.007449,-4.775078,-5.511508,5.432237,-3.735728,-5.913140,-8.686186,-0.296584,-9.845581,-5.044253,-5.628754,-4.998357,-5.733957,2.749146,0.607059,7.319220,3.083591,-3.260676,-4.470391,7.422279,7.296705,0.377040,0.702742,9.324228,0.519105,-2.144535,2.338208,-0.320505,4.602716,-3.331893,-4.104133,3.774623,8.819903,1.941154,7.507001,-9.782402,0.715840,-6.411547,1.314080,-5.841659,1.739936,7.632292,4.194607,2.706200,8.029806,-9.112358,5.770728,-2.185280,4.171665,-4.405175,-8.241898,-3.673113,7.203301,-1.128605,-1.433642,8.043742,3.922603,-5.290677,-2.201853,-5.365539,2.666094,0.904452,-7.470638,4.042367,-4.154685,-1.847773,-3.610932,-5.162255,-0.449642,2.681818,4.911860,-6.804482,2.978646,-1.144390,-6.415884,5.601254,3.957400,1.428743,-5.022917,0.796844,-0.035331,5.415114,-1.655359,-4.863966,-3.875873,-7.286130,-4.440610,0.834592,8.961358,-0.384767,-0.265305,-8.780858,-1.423304,6.746438,-9.702002,1.664363,-0.084113,-4.302888,-7.149011,9.737024,-5.936220,7.735698,5.221226,-4.690848,-7.728794,-5.755005,-9.242880,-2.678390,-3.678622,-5.713101,-4.358290,-8.848253,-2.100267,-3.759679,2.545432,-6.041833,0.874737,0.972417,-5.991076,8.056278,-2.483861,3.910989,-1.885450,9.293495,6.686455,-6.049021,-4.218409,-7.554406,7.137657,5.946183,2.980029,-3.468812,2.311508,2.544417,5.557489,-6.946381,-6.502871,-7.170146,9.017066,-1.340495,4.291061,5.053706,1.847925,4.358522,-7.892224,0.486622,-8.466811,-9.145694,0.899599,2.455794,-0.054895,-7.543106,8.689979,-8.454146,3.693379,5.728826,2.658464,-6.699279,-3.096220,3.156252,-9.898787,-3.948763,-8.418977,5.158019,-3.986176,-5.232265,-9.638897,-4.470753,5.057094,1.539542,6.512143,-2.966851,3.074508,7.779661,-0.800382,-6.193285,3.462744,6.876666,2.753401,-3.704493,3.835579,-4.444208,6.515452,0.878384,8.451873,4.710556,2.432079,0.319288,-4.948828,-2.804946,9.052397,-7.411620,-8.730364,-6.537141,-1.170673,1.883581,2.054907,4.224635,-8.549148,-3.375344],[7.534354,-5.228403,8.240269,5.820089,-1.325378,-6.463229,-3.463075,6.717547,-9.036007,-9.364176,-5.706985,-9.978043,-7.566464,-9.014438,-2.806936,-1.638214,6.479883,-3.710817,6.050374,-6.071126,3.292059,9.245756,9.622092,-9.641815,6.163408,-7.189455,5.914987,0.958079,4.071805,-6.654476,-8.614317,1.993090,-1.115344,-5.819040,-3.562336,9.733530,3.896532,0.035187,8.761869,-7.690423,4.798955,-2.087638,3.978767,-2.130473,-4.678772,-6.008296,1.234421,-8.832825,5.133127,1.712510,8.972724,-7.588319,-8.698319,-9.772990,9.906504,-7.547092,6.520323,7.580607,-3.242742,5.110726,0.041199,-1.122377,-3.152680,-2.626337,3.191539,7.617015,-2.088563,-1.013371,6.411207,2.268639,9.506765,8.936830,-7.204744,-3.940514,-6.295420,9.406297,4.107455,6.398502,-6.468967,-0.796930,0.167597,5.252859,9.882065,-1.815892,-8.483424,4.200752,4.042627,-9.688797,-6.190104,5.961426,8.039397,-9.470771,-8.272258,-2.778208,5.315406,-5.195089,-7.680050,-1.722086,0.076490,-5.239055,-9.914955,-8.286770,4.100535,-9.193147,1.765817,-9.344548,-6.662187,0.627729,-9.959042,-4.735589,-8.127145,7.308012,-8.269261,-8.144775,-3.849577,5.348135,0.700807,7.386475,-6.234451,-0.756028,1.881985,-6.798222,8.219988,-6.850373,1.076431,3.919413,7.572038,-3.480459,-0.426651,-3.837634,-5.872028,-3.131934,1.348737,-2.690596,0.826932,3.001726,7.540416,-2.929178,8.505780,8.200500,9.829469,2.893505,3.055546,-7.391611,-5.160186,-3.121239,-9.710585,-4.200848,-8.321896,-4.639035,4.746654,-8.995696,8.311955,9.961855,8.048371,-8.483635,9.387669,-1.836328,5.149995,8.443155,5.522860,-0.383301,-8.333895,9.863156,9.633645,-1.086195,3.640072,-9.473482,4.121024,4.902325,-8.446899,-1.295134,3.786831,-3.842772,5.334494,6.882222,4.233359,3.707779,-2.509420,3.533518,-9.579693,8.623554,-8.675940,-4.974066,5.208007,1.730477,8.185163,-3.162821,-4.743905,-7.311607,-6.203207,-2.052563,4.941251,7.805245,-9.616683,-9.380648,-6.963909,-4.163463,8.568856,-7.040384,-1.760096,-2.099270,9.447405,7.490889,7.037033,-5.716328,6.206518,0.729231,-0.169522,-7.334008,5.291414,5.516173,-1.406437,1.695631,-8.130243,8.804333,8.939672,0.331272,-2.367030,-1.159799,-1.925083,5.034971,5.592556,-3.044175,1.121721,-8.353697,7.910048,-7.879761,9.613198,5.275375,8.374314,-6.246582,-7.806106,-5.493392,-2.503570,-0.440093,1.678591,-6.710767,8.171955,-3.473958,-9.639308,2.660250,-6.532897,2.458684,6.883989,5.629864,6.993747,5.429136,1.988677,-5.564300,-9.150079,-0.632634,-2.986646,-9.517113,-4.533135,-7.795620,3.263517,-1.802527,8.970044,3.671714,7.651965,-9.115372,1.141742,-7.696698,3.205730,-6.836057,-2.718688,9.987369,-1.268877,-9.743698,-7.214584,8.956938,-4.376301,6.630134,9.587148,5.064915,2.094740,-2.682694,1.160674,-9.584709,6.238799,8.234536,4.867269,6.201247,-0.351439,-0.916795,-1.212753,1.752781,-6.902093,5.412948,4.683644,-3.689422,-4.256496,2.946368,6.486591,-4.783626,2.099093,-4.724505,-8.191298,-2.490411,9.342912,4.184494,-5.419248,2.796458,6.365308,-6.527643,5.776332,7.191475,1.408430,0.733862,-4.420885,-1.411587,5.351541,0.206781,-4.196721,9.093159,-3.212236,0.866272,3.645204,9.620633,5.232595,8.519678,-2.262287,-3.828746,-0.312633,8.608740,4.330983,-4.728509,-3.487970,-8.996100,7.081197,7.430610,-4.081009,-9.373607,6.569868,-2.110346,7.317800,1.136762,2.305637,-0.307940,0.346662,-1.532849,1.701432,-5.038198,-7.093087,-4.352108,-1.607493,-5.102928,-4.324222,-0.166080,-0.435083,5.603719,-9.326016,-2.466746,-8.113592,7.575304,-9.818346,5.378636,-1.503450,7.804892,-8.769048,-6.499072,9.697432,-5.469670,0.767898,8.839397,6.036251,-0.588325,7.261237,7.495034,5.726215,-2.721093,2.711663,7.519616,9.279678,-0.463787,-9.535005,-7.530954,4.429576,5.194731,6.987359,5.284882,7.329756,-1.431517,-2.997063,5.216478,6.665706,8.274808,2.593594,-0.099066,4.480282,-7.464348,-2.368355,-1.082795,1.140928,-3.678002,-1.835061,-1.474349,6.625168,5.274267,-9.280850,6.021736,-4.866652,-6.652147,8.020865,-9.996959,-4.218119,-4.087516,2.082600,-4.136561,7.616194,8.965048,-8.809802,1.844663,-9.601305,6.166639,6.287285,-6.062845,9.504652,8.293368,-6.092853,-3.794986,1.410676,4.420891,7.354047,0.786337,-2.440638,-4.492662,-0.458497,2.682877,-9.301273,-8.072917,5.736198,7.027149,8.228477,-8.107172,-0.460575,-7.688810,7.412100,-4.413292,-2.965200,3.820720,-9.758382,1.752775,-8.027743,-7.816545,-2.711118,-2.285269,1.050966,-2.220962,1.255375,-8.991163,1.294563,9.284231,-1.398458,7.489603,3.281403,-3.432850,1.195391,5.447572,-1.964931,-8.467210,-9.142029,-7.435723,4.351609,-6.748263,4.299965,-4.413296,-7.529387,-1.397433,-7.660256,6.423056,-1.719103,2.002117,1.439830,1.327652,-4.906509,-5.702678,5.804197,9.615089,-0.684945,4.206160,-3.136703,-5.203956,1.598270,-3.638960,9.861989,4.697767,6.040433,6.408113,5.116983,-6.065784,-7.235451,-0.045279,7.611612,-4.491742,-2.731975,-1.298570,-8.693007,3.431884,0.848794,7.264917,0.782511,-0.386679,3.539797,8.124027,4.393108,2.270135,1.364510,2.417498,4.944624,-8.507516,5.704557,-7.958012,6.887767,8.985246,7.605772,9.962424,9.625043,5.702739,7.017504,-3.072511,-4.868216,0.991093,3.410630,7.761604,-1.715195,-0.630553,-9.593321,5.676817,-3.277773,-5.036194,0.481856,-2.966500,3.784615,-6.086454,4.007910,5.351714,-0.391356,7.738988,6.864603,-7.230663,-5.506760,4.135702,8.684745,-8.142950,3.099663,-2.683333,7.268169,-8.037551,-7.967978,3.945832,0.907916,-3.054252,3.284561,8.950483,-2.680033,5.819512,2.734141,0.644884,8.353295,-4.593037,-1.344682,-2.488098,-1.855923,-7.691183,3.254279,-2.453731,9.597402,-9.105187,-5.981375,4.627263,5.197202,4.366381,-1.209108,5.968778,-0.944463,-1.125304,-9.492694,-3.969849,6.144472,-9.980198,7.294600,4.378279,2.926491,7.295050,-8.503563,-5.468017,2.613819,-7.238034,-6.296355,-1.499663,8.153846,7.605554,7.337543,-5.104404,-8.266211,8.119210,0.130933,-2.810851,-9.619713,-3.073752,6.079892,-2.656335,-4.007149,-7.269940,-3.957506,-9.767012,7.545119,-6.320937,1.856037,-7.618097,4.326594,0.954799,-2.962374,9.171998,-2.039705,0.331540,-2.765048,-4.038468,-6.859600,2.614723,2.514203,9.242736,3.017393,1.821131,-6.558484,-3.015629,9.546889,4.960055,-4.256119,-2.607724,-5.482296,-9.107438,6.625639,-2.057296,7.037486,6.019688,8.670259,4.078026,-7.152641,2.174073,-2.710497,-5.013401,-8.937820,-7.074207,-2.391459,0.848161,-9.850217,4.461512,-6.827647,-5.483736,2.585089,1.480524,-2.242079,0.157385,6.807617,0.734424,-5.732997,-9.927189,3.862156,6.037667,4.947583,6.682634,-3.817352,-7.417901,-7.032734,-3.729775,-8.137654,-1.415098,2.153916,5.899756],[-0.888439,-0.261575,-1.422416,1.929369,4.439601,7.113030,2.037478,8.561395,9.340595,5.763820,-4.612711,5.530032,1.972898,7.647955,2.370033,0.328021,9.778894,-3.057064,-9.006026,-9.138770,2.967646,6.164483,-0.536153,-1.132605,-5.422570,4.227139,-4.969618,6.517775,-5.705112,-4.155430,7.751300,5.610342,5.170001,-7.496286,-4.206230,-1.891259,-3.428293,-9.372247,-6.777467,-3.381374,-1.847700,7.268025,-4.426303,-5.078032,9.846802,-8.587687,8.455104,3.861474,7.132764,-9.807536,-3.835245,3.141865,-7.433768,8.498328,3.878337,7.479809,7.109913,-9.526724,4.546581,-5.495832,5.945883,2.389405,1.826445,4.322107,-8.016753,-7.733263,-4.395301,1.240111,6.527672,1.558699,-1.211956,9.906944,3.916143,9.222343,-5.774370,0.613937,-6.292538,-7.465134,-7.587486,3.023423,-7.546022,5.842492,0.142355,4.478334,-8.010314,6.302478,-4.580066,-4.897135,-3.674669,-1.265225,-6.970164,-6.122981,1.059194,-9.635437,8.783153,-7.271661,8.553248,-8.000530,4.179725,3.842082,5.744719,-6.568056,9.277573,8.219425,7.670835,6.638046,-2.910686,-9.475398,-0.334445,2.648404,-4.141598,0.152190,0.057399,3.756889,-3.678212,-3.715579,1.666916,3.483690,-2.588997,8.551768,-2.146052,2.208774,-4.544462,-4.519874,-6.550305,-4.495533,-4.877410,-3.943783,-3.264337,-6.289252,-9.361721,-1.973829,5.536185,2.242577,-2.519197,4.827574,6.489544,3.615319,4.301712,-2.114570,3.723201,-5.782961,9.238839,-2.267902,-2.832928,-1.476192,3.745987,2.472179,-6.429189,-9.114635,9.421218,3.695514,-9.722301,-5.716956,8.105607,1.004319,-5.446668,-9.169685,-0.402849,7.390556,7.378639,-2.365358,-0.458188,1.422874,-4.245418,4.699443,-5.592645,-8.326117,-2.868921,-2.756809,8.084124,-2.140371,5.805379,2.796335,1.977066,9.542702,-1.718197,-5.425335,8.061511,9.795207,2.237804,2.272508,-6.688483,8.448573,-7.897890,-5.923434,8.360693,1.739991,9.291978,8.680962,9.067418,5.748899,-7.941182,-7.457158,0.175883,6.993974,8.894590,-4.680911,-5.262010,-9.179255,8.186689,-3.919505,9.841197,-0.346543,0.970539,-8.669662,-5.850300,-0.435914,8.051742,-2.722532,1.202504,9.538049,-1.008601,-1.548842,2.867347,4.882094,0.508116,-8.390801,-1.554459,5.302089,-6.917392,-8.274957,9.834979,4.905692,-2.302676,4.153791,6.772120,-5.966240,7.624706,-5.711958,4.636903,7.177633,4.498637,6.339800,-2.354512,6.264174,-1.669888,2.002799,5.507617,-1.985974,-1.910737,5.379371,4.403919,3.429438,-6.422147,1.400051,-5.317062,-6.235424,-9.718651,9.828448,-0.195329,3.905783,-3.576937,-8.303096,2.420431,7.298828,-4.913129,7.300047,-0.015284,-8.260840,-7.042857,-1.045170,9.353423,8.470898,9.729880,-3.010048,2.028702,-9.548943,7.091015,8.419171,-6.738493,-3.324042,3.792518,-9.451384,6.250120,-4.543456,-4.352278,-6.059912,6.704653,-2.799544,-1.012144,-9.294313,-8.975489,0.696334,2.540077,6.542331,-9.604242,4.864054,0.899181,9.605075,-6.089467,2.830610,1.408923,-7.623446,1.109437,4.531302,-7.845691,3.404399,-1.066268,-0.233932,-9.260926,8.028670,5.158217,-0.336807,-0.034194,4.046105,-8.293840,-5.826420,-3.235195,-2.198564,1.593018,9.946775,-1.930213,-6.906709,-2.651121,-3.525729,-6.812171,2.458758,-1.748150,5.865313,7.954713,-8.580060,2.309225,7.648591,7.378313,2.120220,8.300598,-0.758576,3.051952,8.438885,4.631333,-4.629547,0.755446,-5.296290,-2.782378,6.230376,-7.106519,3.858467,-0.049559,-8.697095,-6.618184,-3.119396,-7.223162,9.002055,8.195002,3.848260,7.005177,5.517673,9.357120,-5.489384,9.381189,-6.567877,0.171828,9.905388,-4.841022,-3.852856,3.335944,2.022392,6.277608,2.501243,4.362310,-1.498722,0.454674,2.065497,6.961660,-0.511888,4.218344,-1.277250,-5.157241,-7.035039,2.095593,4.177055,8.323330,6.728589,-9.785526,-2.455590,5.716028,-6.340187,-9.155572,-2.716019,3.858654,-9.023467,4.410680,-8.971303,-8.442487,-9.514739,9.101446,-0.610368,-2.533499,4.860104,-1.447581,-3.686857,-3.918864,-9.696749,5.129653,-4.632793,2.927892,5.117730,-9.842758,-1.533186,8.897873,-8.490609,0.382996,6.567051,-3.445142,-6.883865,-2.899866,9.679466,4.370304,4.006925,-2.027621,0.840127,-6.493415,-7.579783,-7.316146,6.400534,5.144770,-1.361357,-8.147573,8.712897,7.210599,-1.338102,-5.503253,-4.212262,3.080056,-7.960563,-5.971622,-5.820339,7.918393,9.386341,4.554727,1.909648,-6.850944,6.919693,9.508259,-6.354752,-2.651210,1.978220,-5.383932,-7.744283,0.950327,1.110417,1.691397,3.673271,-0.309064,-8.096657,3.130341,-6.864790,-6.015290,8.507888,-1.834191,-4.646668,-0.046769,-0.335176,3.572418,-9.958979,6.327441,-9.546352,0.874394,4.239037,-8.894525,-1.155698,9.487872,-9.005925,-3.256698,-4.554048,4.012111,-6.875556,-5.108371,-0.976751,7.698738,-7.222861,-9.629331,2.015885,-4.085285,6.977008,0.356681,1.847654,-2.899885,-9.246677,7.667501,-3.719776,9.707100,-7.280254,5.220565,5.426255,5.290000,2.966326,3.968808,-1.075378,-1.284696,-3.075008,1.670883,-7.062544,1.739272,-4.590779,5.965212,9.264685,9.549106,-5.146899,-3.184854,-8.744332,-0.108853,6.304738,-2.835345,6.559101,4.425586,-6.838280,9.035237,8.946449,6.071975,2.894341,-5.792790,5.858161,-7.215810,-1.549750,-4.997420,6.525361,-1.403517,-6.375469,-4.844434,4.506754,1.978912,-4.969099,2.718456,-5.426731,5.463047,1.952766,-3.331198,-4.176802,2.572344,-5.500816,6.062813,-3.180393,-9.312751,-5.256807,-2.973833,5.120699,-6.507658,0.426000,6.850200,-2.446825,6.168963,-2.974217,0.808808,5.997813,6.151631,-6.498038,2.985007,-5.426287,4.194010,-3.960802,7.072753,4.428219,7.695555,5.765095,-2.787127,0.449318,4.555558,-0.514953,-3.647782,4.967683,1.639727,-5.814722,-0.701054,-2.698000,-1.743772,-7.873284,-2.669912,4.165186,-3.512556,-9.020649,-3.426751,-5.292751,3.715334,-4.180341,-3.075837,6.281779,4.781491,-0.469933,6.495973,8.116796,0.680065,0.312114,-3.326106,4.677294,2.236062,2.748898,-8.818427,7.943059,-6.823981,8.907666,-2.039650,-8.559770,4.605573,7.405838,-8.495687,-8.606293,-0.881884,6.625311,-7.149730,8.353248,8.964436,9.409759,7.617713,2.306987,5.787999,-2.902670,-3.568270,6.129424,-3.078634,-9.327764,-5.795370,-4.410094,-7.982677,1.113075,8.331815,-5.326031,7.866037,-2.104044,-9.582540,7.754012,-5.504693,3.370138,-7.644302,-4.426051,-2.183092,4.929879,7.324363,4.948685,-4.878806,-2.095208,-9.633429,-3.502101,2.708268,-4.961684,-0.384815,1.240687,1.388274,6.706316,0.468709,-6.195503,-4.307704,-3.899608,-8.775918,6.653283,-4.451839,-9.325372,-6.565125,7.365932,2.646692,-5.514021,9.004986,-0.617269,-4.947030,-4.059022,-9.864136,3.200528,4.862063,-7.034861,-9.545988,-3.386440,-9.903904,7.940432,7.889868,-7.774758,-1.544913,-9.003951,-4.363125,-4.278421,4.607250,-4.926183],[-5.433862,-9.277302,-6.705602,9.538622,1.366490,2.741601,-8.276647,-3.943852,9.027823,-2.539482,0.816344,7.297179,5.538223,9.789651,2.919222,-1.916123,5.825218,3.235808,-2.604199,-6.042821,-1.606092,5.820485,-6.526160,-4.297075,-9.492236,0.179411,0.596616,1.893691,0.328008,6.092748,-2.782510,-7.840449,1.892506,1.717156,-8.051326,0.462298,-4.925965,6.408534,-3.491735,-3.697922,-1.916644,3.629601,5.536529,-4.865347,3.985948,7.699476,-9.574957,8.110405,4.699751,4.423942,9.132235,-2.005199,9.871066,-0.152400,0.004992,-3.296287,9.816168,7.667873,-0.406668,3.062980,-5.813402,3.435395,-8.401880,-3.551210,-8.783454,0.531110,-2.837826,1.838981,8.325936,3.641840,-8.433626,-1.994389,1.089603,-9.556675,2.829932,9.459010,-2.723845,-2.823499,-1.226656,-7.505426,-4.285699,-6.627586,3.259229,-5.738104,0.492687,7.778978,9.668838,7.686810,-7.823919,-5.911581,0.962933,2.928039,6.601881,-2.650852,-5.802848,-2.909210,-0.501594,5.896707,-8.825332,-2.043804,9.304808,8.774593,9.128127,-3.487139,3.609161,-7.427898,-6.407103,-2.473499,9.925246,1.114881,-7.784903,3.786283,-9.786425,-7.519725,-3.899346,6.163896,4.695859,5.961544,4.639040,-7.029314,-8.164457,-4.096727,-8.053555,-7.262426,7.190947,7.992920,3.514850,7.748839,6.658826,-7.143402,-3.558290,1.126358,4.290649,8.414692,-9.952679,8.901104,-2.045195,-7.946382,-2.834936,-6.317351,-3.303165,8.022497,-6.517939,-4.651986,6.097244,-5.801855,-9.324408,9.044741,-4.034295,-4.899830,-7.906386,2.116687,0.327814,6.887701,0.174185,-4.418553,2.023061,3.957982,-7.534116,4.451761,6.435931,8.971676,8.216129,7.076817,5.670187,6.629404,7.445663,-9.738985,-6.646393,-6.163609,-0.677516,3.028509,8.952102,1.560678,-7.958389,9.728169,-7.834464,5.673280,0.952273,2.084439,3.967852,-5.052320,-7.647142,8.250714,-0.981710,-4.816816,-7.919923,-1.816058,-8.398575,8.028857,-7.073955,-9.177259,-7.528898,-9.703604,-7.414552,-2.312469,-0.143090,-5.115014,-9.274246,5.042988,-4.015726,9.470422,-8.346543,-3.434259,8.377496,6.258987,-2.425290,8.707317,-1.637548,-2.816520,3.077636,-8.980831,1.385104,-1.169618,-0.614908,-7.961625,0.909140,-3.624143,5.613326,0.223996,-6.655062,-5.790853,-1.334519,6.332446,2.928280,-4.968112,0.158480,5.158293,5.600676,-3.429614,7.230705,-4.549352,-1.781380,-9.965700,1.624681,-9.843245,1.906967,-5.188045,-5.163584,-0.505152,3.169656,6.139497,6.476998,8.648344,-3.921514,-9.691417,-3.880420,4.894599,7.652824,-7.756420,5.968460,3.604334,8.610960,-6.990277,7.430022,-4.910952,8.449112,0.307485,-7.096395,-9.118947,-6.604948,-5.805340,4.686601,3.887417,-4.860336,-9.534286,3.641744,-8.080981,8.255729,-2.577902,8.427061,-9.923963,-2.904994,8.747396,-8.014159,-1.520527,-5.059089,-9.536386,-1.442567,9.565213,6.928478,-8.848113,4.842190,-5.442803,4.546003,1.900564,1.516273,-3.240049,-7.893108,-9.171480,7.114856,5.298223,6.397413,2.386582,-3.936195,-3.434227,-0.333602,-4.625091,0.790019,8.045030,5.255662,6.256412,-6.901303,2.790822,9.734790,5.916810,-2.963827,8.672040,-2.463257,1.615146,0.247943,9.140818,-8.469364,6.810001,-1.485232,-5.086353,8.187834,-8.222718,1.071658,-1.784184,9.396133,7.627284,1.076154,3.801198,-3.652505,-7.961011,7.712644,0.415260,2.472570,0.876253,5.675246,3.893269,-2.327721,-9.638053,0.829205,-2.981446,0.466474,-2.990889,-0.929278,-0.642992,-0.310305,-9.488029,-5.623333,0.980707,-9.998750,8.927137,5.028543,5.548786,-1.594501,3.761682,-8.181732,-2.561251,-1.938084,-3.431657,4.781075,3.091097,6.813878,2.179162,9.194695,7.105056,3.660661,-6.023115,-6.041062,-9.257157,8.952869,-0.265829,-9.719627,1.893353,-3.071120,5.403141,3.205566,1.723557,2.876929,-6.502437,-5.175405,-3.810665,2.782465,-3.029432,-9.102261,-9.155269,-0.725600,-1.491095,-1.733679,8.987061,1.226947,-1.937043,5.082065,-7.002572,-0.531815,-3.776563,-5.040960,-6.871279,1.641693,8.133089,-9.644399,6.193310,6.742021,2.719438,-0.267588,-8.516272,4.922677,-2.953358,-8.748382,6.682970,5.075630,2.147373,3.003346,4.317579,-7.209843,-8.036186,3.580283,-5.654903,4.486369,-3.115940,-9.778387,-2.527830,5.765864,4.084998,2.106021,-5.292314,-9.873890,-7.392870,9.815326,-6.161075,7.416347,-9.729962,-9.968508,5.821558,-8.791102,2.635042,-5.356503,1.525153,-6.325902,0.370875,4.826057,8.954758,-2.450984,1.639914,1.497384,5.260987,9.760385,4.813874,-2.360397,5.689015,-1.325240,-2.091797,-7.070241,-3.647447,-5.620438,-5.236124,4.287323,3.503163,-6.340771,-4.197621,-1.029978,-7.606260,0.201839,1.707545,-9.861675,9.207124,-2.043235,3.830017,8.750347,4.250149,0.872388,6.053208,7.168035,-8.325957,-6.495501,-1.478053,9.085829,-7.024436,-1.360009,-4.251641,-8.688001,-7.117125,5.797640,-3.140202,7.395502,-2.505948,8.744474,-9.549382,-1.777139,-0.355127,5.343097,2.947285,1.091306,6.158052,-7.707016,-2.871153,7.994656,5.537893,-1.674789,9.828244,7.626742,2.715880,-5.208543,-6.379373,-5.132856,4.266332,5.854849,-5.997397,-2.607226,-0.690177,-4.306470,5.456272,1.116485,-3.652197,-9.872038,-4.473936,-9.347709,7.537789,6.094420,2.361604,-2.739771,4.053496,-0.530784,9.352990,5.537636,9.929102,-6.137838,-1.071692,7.430021,-8.030994,-4.077749,7.567854,-7.952951,0.142006,-1.603768,0.307121,6.970428,-9.383431,8.292231,-1.196042,-4.873879,-5.360721,2.722723,-7.845576,1.600890,-0.318192,0.177148,-2.350107,-6.105014,6.507777,0.498104,-0.808510,3.807754,-3.922020,-9.568342,-7.801665,-1.039432,5.139662,1.418803,-4.508094,-9.224244,-4.740880,-4.345697,7.226256,3.734356,-1.796262,-5.733112,7.423723,8.266737,-6.395034,0.388738,-1.173552,4.560289,2.817265,-4.610859,5.005444,-6.008777,-3.357710,9.978519,-2.686362,5.351473,8.597038,0.924177,0.794647,-4.281760,-6.290563,-0.078530,7.736028,-9.818990,-8.891548,-1.651527,-4.968090,-7.754093,8.689537,-6.217171,-9.718261,-7.302833,2.142352,-3.329223,4.207295,-9.142703,-9.273851,-7.700990,-8.702442,-9.042783,9.995111,6.278468,-1.686768,4.995519,5.687694,9.464913,7.374807,9.909939,4.764502,0.024776,-6.825370,-4.049685,2.965212,-3.007690,3.735790,-8.924580,5.614288,-3.604289,8.689871,9.289423,-5.949101,-3.658212,8.483432,-5.726887,-6.873629,4.314607,-2.580516,4.583114,-3.474574,7.905752,4.799075,3.611093,9.806638,-6.603028,6.822846,2.339113,-9.722201,5.802534,5.174908,-5.065382,3.307177,-1.957600,5.712280,4.583886,7.023460,0.473083,8.636230,6.770420,8.211224,8.039433,-2.440737,-1.699809,1.096903,-0.328836,6.416720,-1.051277,-9.684775,-9.488457,-8.119203,4.760129,4.006641,-3.281502,1.861090,6.927603,3.660121,7.482016,-8.321226,-6.864294,0.603047,-9.785741,6.740921,-4.249927,-0.423032]], dtype = "float32")#candidate|4005|(13, 672)|const|float32
bop_4006 = relay.less(call_3985.astype('bool'), const_4005.astype('bool')) # shape=(13, 672)
bop_4009 = relay.less(call_3987.astype('bool'), const_4005.astype('bool')) # shape=(13, 672)
func_1574_call = mod.get_global_var('func_1574')
func_1578_call = mutated_mod.get_global_var('func_1578')
var_4017 = relay.var("var_4017", dtype = "int16", shape = (56, 2))#candidate|4017|(56, 2)|var|int16
call_4016 = relay.TupleGetItem(func_1574_call(relay.reshape(var_4017.astype('int16'), [8, 2, 7]), relay.reshape(var_4017.astype('int16'), [8, 2, 7]), ), 0)
call_4018 = relay.TupleGetItem(func_1578_call(relay.reshape(var_4017.astype('int16'), [8, 2, 7]), relay.reshape(var_4017.astype('int16'), [8, 2, 7]), ), 0)
output = relay.Tuple([call_3970,call_3976,bop_3996,bop_4006,call_4016,var_4017,])
output2 = relay.Tuple([call_3971,call_3977,bop_3999,bop_4009,call_4018,var_4017,])
func_4031 = relay.Function([var_4017,], output)
mod['func_4031'] = func_4031
mod = relay.transform.InferType()(mod)
mutated_mod['func_4031'] = func_4031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4032 = relay.var("var_4032", dtype = "int16", shape = (56, 2))#candidate|4032|(56, 2)|var|int16
func_4031_call = mutated_mod.get_global_var('func_4031')
call_4033 = func_4031_call(var_4032)
output = call_4033
func_4034 = relay.Function([var_4032], output)
mutated_mod['func_4034'] = func_4034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3250_call = mod.get_global_var('func_3250')
func_3252_call = mutated_mod.get_global_var('func_3252')
call_4064 = func_3250_call()
call_4065 = func_3250_call()
var_4079 = relay.var("var_4079", dtype = "float32", shape = (4, 2, 13))#candidate|4079|(4, 2, 13)|var|float32
bop_4080 = relay.right_shift(call_4064.astype('int64'), relay.reshape(var_4079.astype('int64'), relay.shape_of(call_4064))) # shape=(4, 2, 13)
bop_4083 = relay.right_shift(call_4065.astype('int64'), relay.reshape(var_4079.astype('int64'), relay.shape_of(call_4065))) # shape=(4, 2, 13)
func_3439_call = mod.get_global_var('func_3439')
func_3441_call = mutated_mod.get_global_var('func_3441')
var_4090 = relay.var("var_4090", dtype = "uint32", shape = (882,))#candidate|4090|(882,)|var|uint32
call_4089 = relay.TupleGetItem(func_3439_call(relay.reshape(var_4090.astype('uint32'), [9, 7, 14])), 0)
call_4091 = relay.TupleGetItem(func_3441_call(relay.reshape(var_4090.astype('uint32'), [9, 7, 14])), 0)
func_3610_call = mod.get_global_var('func_3610')
func_3612_call = mutated_mod.get_global_var('func_3612')
call_4100 = relay.TupleGetItem(func_3610_call(relay.reshape(call_4064.astype('float32'), [4, 2, 13])), 0)
call_4101 = relay.TupleGetItem(func_3612_call(relay.reshape(call_4064.astype('float32'), [4, 2, 13])), 0)
func_948_call = mod.get_global_var('func_948')
func_953_call = mutated_mod.get_global_var('func_953')
const_4106 = relay.const([-1,10,-2,-9,6,9,10,6,-2,-1,-4,6,6,-8,-8,-8,6,3,10,7,6,8,7,5,-4,8,-9,-9,-2,9,-3,-9,6,7,3,-2,9,4,5,-5,8,-10,-10,3,-5,2,-1,9,2,-5,-7,6,8,-9,-1,-5,-10,5,-3,3,-3,8,-5,-1,-10,-4,3,2,-1,-6,7,-1,-6,8,7,7,-8,5,-1,-2,3,7,-5,-9,2,-9,9,-8,8,-4,1,8,6,3,-10,-8,1,8,6,4,-5,9,-5,-10,-4,2,6,5,3,-9,2,-3,3,-9,-3,7,6,-3,-4,5,-7,-5,7,5,7,1,3,2,-9,7,2,9,1,-10,-5,2,2,-5,7,-8,-7,-4,7,8,-7,-6,-10,-8,9,5,2,7,7,2,-3,-8,1,1,-2,-4,4,9,-6,-5,6,8,7,2,7,-8,6,1,2,7,-10,2,-8,-8,-9,-9,2,2,3,5,-10,10,-3,-5,-2,-8,1,6,2,-6,-8,-5,-10,-2,-1,-3,-2,-6,4,1,-4,-8,-8,4,8,-10,-3,-7,-1,8,-7,-2,-3,-5,10,3,-4,8,-3,3,-4,-10,-7,-2,5,8,-2,-3,9,-4,-2,4,7,-10,-6,-6,6,-7,-2,-9,2,10,-10,-1,-1,-1,-3,10,8,-2,5,-7,3,-1,-5,-5,2,1,10,-2,-10,-5,7,-2,-7,3,4,2,4,-4,6,7,5,-1,-3,-6,-3,5,8,8,4,7,1,-5,5,-5,-9,10,-4,8,1,10,5,-7,-3,-8,6,4,7,2,1,2,4,5,-2,-5,7,10,-1,2,-1,10,6,-5,-5,4,6,7,7,-8,-5,3,-10,-1,-9,6,5,-9,2,-5,-3,-5,4,-9,-4,-1,1,10,-6,-2,-5,-7,4,3,-2,-5,9,3,3,-4,10,7,-1,1,-9,-4,-1,7,9,-3,10,5,7,-1,-2,9,-2,3,5,-1,-9,1,6,-7,-7,5,6,7,9,-6,-6,-5,3,-4,-4,-5,9,-6,1,3,2,7,9,-5,-5,9,8,-10,2,3,8,-2,3,6,-9,-4,-7,3,7,4,1,-3,-7,-1,-6,6,2,3,-4,-9,-7,6,-6,-10,6,-6,7,-7,-4,-3,5,-6,-7,-2,9,-6,6,2,2,8,-6,-7,8,7,-2,-2,-2,-4,1,-10,9,9,-9,-1,3,-10,-6,1,-1,-5,9,-8,8,-9,-9,-9,6,-6,-9,5,6,8,-2,-5,-7,4], dtype = "int8")#candidate|4106|(480,)|const|int8
const_4107 = relay.const([3.581313,7.514438,2.177337,-3.339898,4.637048,-2.628126,4.589266,-8.211872,-7.943432,7.202713,5.839480,9.217323,9.085463,8.240722,-3.786305,1.921000,-6.796839,-8.571184,-1.741187,4.742806,8.517614,-0.659055,6.138977,8.873660,-1.566529,-6.390636,-4.869542,6.137499,6.555605,-8.869628,-9.734703,4.270119,-3.830242,-7.752384,3.991020,-5.686055,-8.359477,5.328099,-4.071430,9.826607,4.592519,-7.172430,1.383131,-3.378377,-2.421157,-1.878404,-6.487823,-6.014467,7.106568,-0.707959,-8.618899,-6.931753,8.852091,-1.139576,-7.152431,-6.224643,-3.267511,9.040784,-6.059800,-4.004240,-5.811424,-1.071760,3.834136,0.998181,1.456396,0.116816,-7.621397,-2.238533,9.578949,6.746204,-9.820976,8.055078,8.840086,4.880461,-2.741953,-7.111150,-2.312093,-1.340216,7.909402,7.866798,7.270842,-8.805154,-5.017397,8.293566,-7.719593,7.638587,-4.450618,8.504086,5.877187,-0.769313,-0.782613,-9.874260,1.442053,-1.766695,-1.291129,8.325761,-5.859506,4.773923,3.506912,-6.593959,-8.603141,-8.167821,2.245501,-5.255675,-0.274163,-4.143081,3.702188,-0.638937,9.900681,-8.904424,-7.177436,2.597977,2.625810,3.665095,9.617630,-7.855453,2.852111,0.059608,-3.411525,3.315135,-2.846109,-0.064999,-1.077446,-1.689155,4.321954,3.452742,-6.648462,2.796687,1.920233,-3.173111,-5.914924,-3.736551,-7.002010,-0.136847,8.696751,5.619544,-5.978444,-1.468391,-9.248378,-5.971298,4.223050,4.562729,1.145689,3.880981,1.774876,0.442771,6.426661,6.043391,4.215217,-4.682036,7.712078,-7.435819,9.390168,-9.321627,5.960167,-2.638244,-1.556205,7.680440,-9.220274,5.808929,-7.368904,6.960174,-5.222130,5.529958,8.420696,0.038561,-5.719167,-6.645902,-2.493146,9.575693,4.681190,-5.725264,-4.147440,9.446702,-4.995315,-2.138936,-6.352965,-4.213604,3.245053,-2.967167,-4.502007,1.051430,-6.822087,-0.080861,9.554264,-4.939329,5.015340,-6.024788,-5.168219,-1.118773,-5.158418,-3.150651,7.141467,-9.169487,-1.221117,3.701800,-6.060139,4.218347,-2.987372,0.150900,-7.276407,-9.815103,-7.037528,2.911947,3.050738,9.818833,-6.164833,-4.649919,4.252722,-0.020818,7.524851,-0.466175,8.692237,-5.450694,3.769915,4.638211,-9.993716,-7.053940,-7.391688,0.252139,2.187510,-0.047323,-7.990939,9.398931,2.042049,-0.568999,8.297718,-6.915727,-7.301496,-4.654357,-4.521767,1.724438,-1.620215,6.925315,5.206449,-6.436009,9.227634,6.624093,4.356654,4.496007,-4.439439,3.531884,-8.172305,-6.984863,9.843453,3.573414,-2.511786,-7.993989,-7.687113,-4.913989,-4.289475,-0.454001,0.185012,-8.452803,2.409210,3.214525,2.080642,9.830130,-7.396382,-9.251430,4.772415,1.415814,1.200565,-2.709001,1.092533,6.091149,7.011678,2.131937,6.839189,7.807892,-2.584570,5.514244,4.539094,4.346624,-3.095409,6.836874,1.111064,-8.901258,-3.833241,-4.219825,4.321901,-3.362567,-7.296860,2.730758,5.221834,-3.682393,1.668107,0.819186,-6.984693,-4.501281,-1.222527,-7.380213,-9.593607,-5.694588,1.443335,-3.472733,8.585826,2.552217,-4.938854,1.100369,0.386842,4.914997,4.388394,-0.940589,-2.913163,9.043554,-8.267563,-6.158912,-5.009659,-4.657816,-2.106642,-9.757424,5.130730,6.125185,-0.415883,4.222784,-4.209045,-8.195774,9.495564,6.818322,1.336714,-9.013296,2.154095,-3.250320,-8.660129,5.223684,2.774940,-5.105026,-5.855745,-7.622277,-5.082422,-0.354762,2.585816,0.574328,0.207565,-8.603258,2.256025,6.720294,0.995269,-9.452418,-0.173885,-6.284485,8.834093,-5.136976,-0.676845,-1.563379,-3.572808,0.057924,8.092983,-3.920641,-2.224144,0.801309,5.893282,-8.068615,-7.037144,-8.091679,-1.287093,-9.695440,4.903745,7.426486,9.510489,7.116991,4.834315,6.220202,1.645337,7.361087,-9.249493,0.318029,4.509868,8.969182,-5.774598,-3.877010,-8.607737,-4.240589,5.544833,-4.960674,4.920887,-7.159035,-5.598744,8.001649,2.139326,2.177245,0.596173,-3.893630,-0.226834,-3.226007,5.794806,-1.397404,9.776639,-5.452452,-7.990598,4.901652,-2.945610,-9.656941,-0.297879,-9.260607,2.178440,3.144553,-7.843244,5.692521,0.342277,7.111381,5.871479,1.371673,-8.228159,4.247364,-6.201388,-1.308898,0.336153,6.135311,-2.034395,6.005240,-1.460405,-9.165906,-6.123943,9.924091,3.795352,9.780911,-6.855717,3.014830,-0.499542,-1.190663,2.963671,5.221965,6.518025,-5.691941,-7.319589,2.912647,5.714301,9.888438,-2.794527,0.021781,8.229852,-5.384877,2.440235,-0.638295,-7.236149,-3.915610,6.336635,-0.439404,1.614322,-1.948969,2.031297,-5.955240,3.000938,-2.309535,-0.618376,9.142368,-0.300979,-6.812634,8.131355,3.720822,9.940428,6.407417,2.027035,1.678412,2.123925,-3.379702,-7.109438,2.012437,-1.146963,2.914133,5.479673,-2.418364,-6.083331,-8.083601,7.081274,7.915827,5.009175,7.255450,9.418367,0.099357,-0.075480,0.520128,-4.068953,-9.613202,-9.521680,-8.468210,-4.274435,-9.264125,6.496332,-6.058240,-8.000704,4.572995,7.999919,5.927459,2.083703,4.490342,-7.535272,-6.784166,8.584387,-0.966970,-7.233250,5.956767,0.191033,0.697748,-5.204042,-8.647755,-1.917849,7.558532,-7.712445,-9.832105,5.826457,-5.131289,-8.119533,6.544060,0.090623,5.305448,-2.636217,8.088302,-5.358426,-2.543131,-9.706055,-8.129536,-9.860436,-6.202857,-6.814633,-8.807723,-1.477072,4.389292,-3.101042,-3.178084,-9.478015,9.262092,8.867837,0.074247,-9.538638,-7.148534,-3.531699,2.594579,-6.220270,5.980707,-0.674328,7.559005,-8.708892,4.180543,3.988950,3.743669,8.788773,-9.585515,1.771613,9.404554,4.915391,-5.542112,-2.052158,-3.690039,-9.237979,8.741709,4.700839,7.984140,7.831303,-0.258199,7.818202,5.305889,5.864760,8.874159,2.557351,-2.395557,-4.177298,-7.081767,-8.899789,-0.876738,-2.921632,2.713944,-6.660259,-8.081442,3.291732,-0.690736,-1.717515,1.067489,5.646761,-5.653666,0.164719,4.837577,5.261726,-9.817450,-6.744718,-4.299213,-9.926589,-2.081636,5.652422,4.148943,-1.778910,1.778655,2.406640,-3.559766,0.004792,2.432459,2.160155,-7.729457,-0.147012,-0.617358,2.358144,7.871391,-0.238350,-8.043129,-2.854493,-8.281825,3.900422,0.819977,-4.244420,6.254614,-6.953289,2.288366,3.884012,6.362617,-0.575325,-8.584722,-3.813706,-1.767253,-1.352748,-2.478775,-9.816867,9.751353,-1.488525,-4.452622,-7.598901,-3.760352,-5.001395,-6.888876,-6.749117,9.472356,3.633550,-9.151941,2.836990,-6.191705,-4.428575,6.118111,5.850631,-5.643096,1.451579,-7.411725,0.330898,5.228793,-9.595275,7.158050,9.244839,-1.736208,4.158315,-0.350351,3.740818,-5.195655,-8.647723,-5.581618,-5.256292,1.019612,8.833810,1.526847,7.741600,-3.147707,-5.774624,-0.876875,-5.756520,-4.641233,5.988932,-6.936394,1.768129,-9.901016,-1.349838,5.545338,-2.728279,5.701427,-0.800214,-2.684129,5.033771,-7.456663,-2.009984,8.295663,4.881406,-5.004180,-6.726985,3.351308,8.270284,2.785942,-1.131002,-7.270853,-2.115945,-6.262150,-8.591173,-8.832308,0.655760,0.646008,1.987197,-4.532561,-3.705245,4.109049,7.434658,-9.576840,2.210661,1.561092,-6.461126,-0.094526,8.599637,-3.741568,6.209797,7.884618,5.428226,-1.757507,9.173416,3.976705,-7.674848,-8.858098,8.442767,-8.005287,0.865930,-9.067050,-9.213522,-1.225119,1.326252,7.981739,1.323685,6.878104,-1.074312,8.786103,-3.274044,3.580973,7.715501,-8.627992,8.955240,2.305443,-4.530913,-3.599442,-0.110529,-1.174904,7.563061,-2.871567,-6.926114,7.732526,-2.118505,-5.915510,1.993409,3.026929,-7.842504,5.441658,-2.025782,-6.349207,-5.108202,8.451208,7.992267,-3.852831,-4.885086,0.748626,-6.254385,2.175689,3.027973,9.911860,9.882689,7.604998,6.238991,7.030776,-6.877622,-5.898217,7.032863,0.287487,-4.943529,7.359773,2.344198,8.801550,-4.203534,-1.793881,9.791792,-2.760997,-4.234344,-6.642869,0.662250,5.818426,1.968211,-9.162350,-7.107752,2.061072,-0.501940,7.491391,6.224275,5.479355,1.211975,6.114887,-3.130392,1.669408,6.688318,-3.333098,-4.855349,-6.654292,7.095878,-3.471582,1.925933,-8.730566,-8.782252,9.670258,8.283725,9.846140,-7.016725,3.449723,7.044957,8.540303,-6.585195,8.584664,0.926950,-3.258160,-9.955103,-1.124091,-3.059575,4.891810,-1.287197,-0.810115,-1.899337,-6.098367,-7.701595,1.789284,2.654799,-8.917246,-9.828075,-4.141999,-9.648760,-1.814265,3.638346,-7.048293,-2.750666,-2.297097,-4.869163,-6.141451,5.896053,1.327212,-2.896062,5.991172,9.491697,7.337454,1.906754,1.392393,-5.310366,-6.546843,4.221933,3.943474,4.889573,-4.496293,-5.072665,-1.633077,-5.935658,5.068615,-2.626072,-7.189101,-0.431286,1.816798,3.526887,0.422719,-4.048610,5.585113,-9.985079,8.325936,-9.278607,4.856018,-8.688620,-5.484315,7.187770,5.529320,-8.072396,9.473900,5.782900,-0.783576,-9.577347,-4.498194,-7.513010,-0.492135,-4.141347,-1.730113,0.230717,1.547778,3.089168,-3.661674,2.136294,-8.498377,1.330693,7.854843,-7.673822,8.767611,5.846799,4.439237,5.147080,4.866179,-9.102628,3.822675,2.141434,8.215038,-8.683016,-3.762139,-5.418870,-6.397216,-2.007838,-0.956696,9.893159,9.254462,-5.943752,-3.288745,-2.044818,7.779043,7.942775,9.976322,-6.757947,3.764788,-9.836775,-8.238066,-5.507005,3.602045,-4.175775,3.161868,5.834683,2.613445,-2.412355,-9.043857,3.656533,6.074410,-1.780538,6.546635,6.952768,1.446126,-9.649215,-4.673047,-7.642228,-0.206562,-1.765327,9.866139,-5.052956,5.453865,-3.316808,-1.457580,0.290646,7.805779,-7.672492,-9.390592,9.524495,9.927414,-4.826990,3.633649,6.203262,3.691598,4.798210,-7.879116,8.194079,-0.351050,1.432214,9.265330,-2.800679,-8.361928,-1.619832,6.960653,-2.595488,4.845516,-2.082120,-5.603444,-3.378751,1.593754,-2.327266,-1.652237,6.874965,3.702075,0.818331,-8.863923,3.527936,-1.656374,4.935211,-8.842542,-6.407056,-5.186414,-4.049066,2.136926,4.893651,-5.127688,-2.507661,8.382223,-2.381298,-6.597016,-2.820011,2.553965,1.810650,8.554253,3.637766,-0.707522,9.871224,9.647546,6.584865,9.898943,9.128193,-7.185194,-7.967264,-3.526118,5.569022,-0.912086,2.668825,4.595250,5.127158,5.045688,-5.082704,-3.689931,9.394531,8.424598,-9.343975,7.416354,3.830273,6.225100,8.631765,-0.130609,-1.358085,-5.508086,-2.966897,-3.213649,-8.054999,1.827849,-2.369969,0.074668,5.316173,-9.003636,9.253182,7.834563,-4.265204,-2.886106,-4.481230,-7.843290,9.189874,-8.004057,-6.588639,8.316257,7.537271,-8.135549,-3.994107,7.431912,-7.638541,-0.248890,7.844600,-4.306132,-3.231912,3.562106,0.977142,-7.991338,8.188003,5.923862,3.627646,-2.735102,1.164629,-4.832058,-5.612171,9.089161,-9.106496,-0.916398,3.055857,5.020189,8.161725,7.395094,-4.385968,5.837544,-8.970285,3.635479,9.854577,-3.735146,-8.690537,0.602238,-0.439530,-0.380429,-5.436662,-2.445418,2.430475,6.044600,2.277102,-1.834580,-5.223272,1.590026,-9.267796,0.575800,-6.442012,-9.540884,-5.186953,-8.841457,-0.415865,6.724583,7.351378,-9.192887,4.119701,-5.302124,-2.671722,-2.859107,-4.826670,-6.674203,5.438099,4.293604,1.045640,-0.104926,1.296685,2.338911,4.739162,-2.023971,-4.058985,-3.975834,-0.360588,-9.752109,8.332918,-1.700400,-1.500920,-5.748772,-5.179788,-9.576606,9.317990,5.466629,0.966943,-1.557305,-9.826566,8.633263,0.149237,-6.344513,-6.770936,4.773426,-5.026117,-6.135863,-3.137877,-6.796931,-4.847561,-7.312757,1.805841,-5.926244,-3.338714,-9.955410,6.791136,-9.575763], dtype = "float32")#candidate|4107|(1120,)|const|float32
call_4105 = relay.TupleGetItem(func_948_call(relay.reshape(const_4106.astype('int8'), [4, 12, 10]), relay.reshape(const_4106.astype('int8'), [4, 12, 10]), relay.reshape(const_4107.astype('float32'), [1120,]), ), 2)
call_4108 = relay.TupleGetItem(func_953_call(relay.reshape(const_4106.astype('int8'), [4, 12, 10]), relay.reshape(const_4106.astype('int8'), [4, 12, 10]), relay.reshape(const_4107.astype('float32'), [1120,]), ), 2)
func_2318_call = mod.get_global_var('func_2318')
func_2319_call = mutated_mod.get_global_var('func_2319')
call_4112 = relay.TupleGetItem(func_2318_call(), 2)
call_4113 = relay.TupleGetItem(func_2319_call(), 2)
func_2356_call = mod.get_global_var('func_2356')
func_2361_call = mutated_mod.get_global_var('func_2361')
const_4116 = relay.const([[-7.589531,3.673730,0.096612,7.429924,7.826000,-5.531220,0.741054,-7.675253,2.800575,2.528826],[6.996348,7.026200,-5.643456,-6.159398,-5.738325,4.963120,-7.235894,4.522004,9.398115,5.522386],[-5.935203,4.520118,-9.161097,0.642511,-8.499473,1.132741,7.624469,1.922190,-5.279943,-1.949629],[-8.180395,5.238926,-6.910505,6.970683,6.052140,-6.382743,-1.301951,7.583010,-7.973016,-7.148375],[1.509506,-5.275104,-3.648691,-8.492587,9.289072,6.101048,-6.186926,9.019722,4.457613,-9.718081],[5.898429,1.861516,-5.423189,-4.029284,7.203633,6.708705,8.022286,-3.574486,-9.778855,-3.830355],[6.649217,1.840892,-9.237048,4.369370,6.408414,-3.469433,-0.954519,5.145591,-5.016475,9.587440]], dtype = "float64")#candidate|4116|(7, 10)|const|float64
var_4117 = relay.var("var_4117", dtype = "float64", shape = (770,))#candidate|4117|(770,)|var|float64
var_4118 = relay.var("var_4118", dtype = "int8", shape = (450,))#candidate|4118|(450,)|var|int8
call_4115 = relay.TupleGetItem(func_2356_call(relay.reshape(const_4116.astype('float64'), [14, 5, 1]), relay.reshape(var_4117.astype('float64'), [770,]), relay.reshape(var_4118.astype('int8'), [150, 3]), ), 3)
call_4119 = relay.TupleGetItem(func_2361_call(relay.reshape(const_4116.astype('float64'), [14, 5, 1]), relay.reshape(var_4117.astype('float64'), [770,]), relay.reshape(var_4118.astype('int8'), [150, 3]), ), 3)
bop_4123 = relay.floor_divide(call_4115.astype('float32'), const_4107.astype('float32')) # shape=(14, 5, 1120)
bop_4126 = relay.floor_divide(call_4119.astype('float32'), const_4107.astype('float32')) # shape=(14, 5, 1120)
func_51_call = mod.get_global_var('func_51')
func_54_call = mutated_mod.get_global_var('func_54')
call_4129 = relay.TupleGetItem(func_51_call(relay.reshape(const_4107.astype('float32'), [5, 14, 16])), 1)
call_4130 = relay.TupleGetItem(func_54_call(relay.reshape(const_4107.astype('float32'), [5, 14, 16])), 1)
func_948_call = mod.get_global_var('func_948')
func_953_call = mutated_mod.get_global_var('func_953')
call_4137 = relay.TupleGetItem(func_948_call(relay.reshape(const_4106.astype('int8'), [4, 12, 10]), relay.reshape(const_4106.astype('int8'), [4, 12, 10]), relay.reshape(const_4107.astype('float32'), [1120,]), ), 1)
call_4138 = relay.TupleGetItem(func_953_call(relay.reshape(const_4106.astype('int8'), [4, 12, 10]), relay.reshape(const_4106.astype('int8'), [4, 12, 10]), relay.reshape(const_4107.astype('float32'), [1120,]), ), 1)
func_948_call = mod.get_global_var('func_948')
func_953_call = mutated_mod.get_global_var('func_953')
call_4140 = relay.TupleGetItem(func_948_call(relay.reshape(const_4106.astype('int8'), [4, 12, 10]), relay.reshape(const_4106.astype('int8'), [4, 12, 10]), relay.reshape(const_4107.astype('float32'), [1120,]), ), 1)
call_4141 = relay.TupleGetItem(func_953_call(relay.reshape(const_4106.astype('int8'), [4, 12, 10]), relay.reshape(const_4106.astype('int8'), [4, 12, 10]), relay.reshape(const_4107.astype('float32'), [1120,]), ), 1)
func_2318_call = mod.get_global_var('func_2318')
func_2319_call = mutated_mod.get_global_var('func_2319')
call_4142 = relay.TupleGetItem(func_2318_call(), 1)
call_4143 = relay.TupleGetItem(func_2319_call(), 1)
func_2505_call = mod.get_global_var('func_2505')
func_2508_call = mutated_mod.get_global_var('func_2508')
const_4150 = relay.const([-6.730419,-7.056842,2.222294,-2.679545,0.259002,-8.994952,9.101619,7.220374,-6.212295,-5.720527,2.367230,6.997693,0.020358,4.238652,-9.514379,7.849553,0.438581,-8.105620,-4.980186,6.932137,1.156475,6.528904,1.390440,-1.026819,8.627747,-4.159367,-6.034136,-3.509503,2.315556,-8.735913,2.369427,0.848705,-2.116660,4.958280,-5.453171,-1.001264,1.033770,-3.514670,-7.919655,-4.052739,-6.510564,-8.858729,3.871168,-0.707899,-9.515095,-7.517426,-3.941357,9.236729,9.119158,1.148854,8.912513,-5.686434,9.632031,4.625106,6.843166,-6.886852,2.354877,-0.025291,2.484638,8.923924,-2.328030,6.711270,7.482221,1.934567,9.605899,8.059696,-9.849624,3.598878,-4.726078,2.629915,5.293349,1.853202,5.896993,0.035099,-8.751463,-9.563412,-6.013284,7.648205,-8.698880,-4.413755,-4.652609,-6.638989,0.533529,-1.441075,7.776430,9.358840,8.950097,1.595321,8.845440,6.002089,7.531210,-8.539462,3.691580,-6.009675,-5.760924,-6.701403,-6.018419,1.735352,-3.003221,9.369026,2.732879,-0.002514,-4.765201,5.391623,-8.144770,6.582035,9.715436,2.344122,-8.562437,-9.889260,4.540154,5.223537,-2.271314,3.367288,-7.693670,-9.004417,-2.166954,6.697114,-8.742483,-7.921100,4.516456,-2.423162,3.445315,-0.391538,1.364085,-5.631712,3.492620,-7.448822,-5.096859,-0.636297,4.304580,-3.353981,-3.284769,-1.420540,7.989201,8.372826,-2.694624,9.923679,-9.118891,8.060789,-3.918136,-8.464175,3.246725,8.311507,-5.086397,5.107411,-0.031403,0.249317,8.768315,9.057082,-9.063862,1.810277,2.769169,-7.736368,-7.907071,2.238707,6.744860,-7.676676,7.784825,-4.453281,-1.397317,0.954188,-8.674913,1.364304,-4.933862,-6.682598,7.552368,6.018885,-4.622686,-7.448036,-0.759400,1.322749,2.539563,-3.514920,-5.020849,4.793695,-6.637232,8.273060,9.384174,-2.699455,-9.775016,5.080683,4.402435,-2.631757,-3.984717,-3.799123,-3.234744,1.089275,-2.596513,-5.042600,-9.976636,0.712067,-0.488177,9.495019,6.817190,0.760645,-9.748775,1.129444,-3.248779,9.663193,6.759740,6.587636,-2.451401,3.806384,-8.522520,2.415707,9.482542,-6.650338,3.645487,-2.443066,4.145034,-5.759433,-2.139581,7.657098,6.495077,2.393225,2.886795,6.631289,9.079882,-0.676914,-5.434206,2.463499,-1.648318,-9.049232,3.803829,-2.660586,-1.559060,8.927506,-5.984104,9.370089,2.217065,-5.665584,7.292306,-2.119956,3.182722,8.413679,-6.906392,3.406902,-4.915148,9.839860,-8.132361,-2.473532,-8.487106,0.625012,2.642675,3.047561,-4.994131,1.788832,9.246804,-0.209318,-4.442569,-4.788106,-8.622033,3.389772,2.448153,7.038775,-6.784130,3.250940,3.249651,9.785503,6.698661,3.655278,7.682067,-7.201889,3.946900,3.405230,-0.012052,-2.999082,3.018106,4.452063,-4.269219,7.038189,-0.027541,-7.041892,4.525671,-3.594049,-4.574405,-2.725002,-2.752421,-1.804792,-9.326105,0.186041,5.397625,7.162890,1.997914,-9.566087,5.640682,-5.303930,-3.944461,2.626201,4.501976,-2.639457,-7.754497,3.965117,4.125990,-2.397309,4.500335,-3.117381,0.096022,5.205077,-9.665837,5.341191,2.357970,-6.295293,-4.494066,-0.494248,6.396843,9.140334,6.605764,1.520794,-2.834320,-2.750613,6.270346,-5.691461,5.740687,-3.106711,3.305557,6.992814,2.809256,-3.515083,-0.549591,5.292048,-0.299536,8.443107,8.458352,-8.207624,-2.438832,2.926166,-8.518501,-0.708042,-3.441463,2.615054,-8.949553,-7.831801,-4.908576,6.504643,4.791191,1.572786,4.680819,-2.066338,0.578588,-9.832516,9.129014,9.438045,-4.162646,6.048670,-4.772682,-7.688109,-9.820845,9.512528,-8.340780,2.091048,5.754873,6.830350,9.674593,-8.521661,-4.410219,-9.933159,-0.855350,7.846877,7.814906,5.085868,-3.789650,7.011569,4.161458,1.352410,0.958730,5.563533,4.057768,-1.158297,-8.860668,9.391989,9.385101,9.247657,-9.856541,-0.694189,0.281724,4.635307,-4.733165,-3.384747,7.712356,8.246592,-2.310113,-3.055932,5.409664,-5.718696,8.259171,-7.078852,9.009871,-9.002887,8.038127,-9.263418,1.736769,-5.682630,-9.269606,0.295364,-3.080672,-2.987446,7.128567,2.913688,5.115113,4.415054,9.650957,-1.479424,8.587054,-4.583240,4.661176,3.318882,4.568427,-7.039092,5.697097,7.890538,-1.590716,-1.179371,-7.851482,-2.372728,-8.669532,-4.115453,-0.433138,-9.860991,-5.875405,-2.374636,0.389991,-0.663928,6.077427,-1.475066,-5.052331,-2.871175,-8.699911,-6.448699,-1.969990,-9.163370,-4.482511,6.308027,9.781462,-0.907659,-1.717130,-1.149981,0.042990,-3.353545,8.475869,1.255314,5.407956,9.371937,-2.098938,-7.240996,-9.973721,7.296279,-5.259071,6.138750,7.525897,3.636897,-7.937994,2.974026,-6.010115,-6.929277,5.781488,5.068133,-0.791090,-1.273191,-9.518017,2.603882,1.577651,-5.936418,8.189059,-4.052674,5.601319,7.634159,0.521959,5.578813,-7.044457,3.403727,0.555587,-0.987103,4.190295,9.774479,-6.940308,6.589556,6.866005,6.575102,8.001192,4.048650,2.171367,3.567516,-2.859730,-3.255221,-0.152691,-1.599147,-9.007630,1.270932,4.783443,2.462848,-2.023039,2.633895,-9.753874,-5.786253,-8.283702,6.294442,-3.706604,-0.897181,7.402000,-1.646177,5.078325,-2.760975,9.768381,7.471484,-7.072018,-0.168617,8.160518,-5.790252,-8.866343,-4.150594,2.873873,-1.885031,-0.684366,-7.013462,5.564642,4.983264,1.481790,-0.465914,-8.182402,9.743343,2.642456,9.093214,0.540308,-7.625101,-4.531461,5.921713,-1.609867,-8.505725,-1.570480,5.923504,7.046940,-0.751629,-3.754174,2.786604,6.303133,2.724914,9.357814,2.061158], dtype = "float64")#candidate|4150|(540,)|const|float64
call_4149 = relay.TupleGetItem(func_2505_call(relay.reshape(const_4150.astype('float64'), [10, 9, 6]), relay.reshape(const_4150.astype('float64'), [10, 9, 6]), ), 3)
call_4151 = relay.TupleGetItem(func_2508_call(relay.reshape(const_4150.astype('float64'), [10, 9, 6]), relay.reshape(const_4150.astype('float64'), [10, 9, 6]), ), 3)
output = relay.Tuple([bop_4080,call_4089,var_4090,call_4100,call_4105,const_4106,call_4112,const_4116,var_4117,var_4118,bop_4123,call_4129,call_4137,call_4140,call_4142,call_4149,const_4150,])
output2 = relay.Tuple([bop_4083,call_4091,var_4090,call_4101,call_4108,const_4106,call_4113,const_4116,var_4117,var_4118,bop_4126,call_4130,call_4138,call_4141,call_4143,call_4151,const_4150,])
func_4169 = relay.Function([var_4079,var_4090,var_4117,var_4118,], output)
mod['func_4169'] = func_4169
mod = relay.transform.InferType()(mod)
var_4170 = relay.var("var_4170", dtype = "float32", shape = (4, 2, 13))#candidate|4170|(4, 2, 13)|var|float32
var_4171 = relay.var("var_4171", dtype = "uint32", shape = (882,))#candidate|4171|(882,)|var|uint32
var_4172 = relay.var("var_4172", dtype = "float64", shape = (770,))#candidate|4172|(770,)|var|float64
var_4173 = relay.var("var_4173", dtype = "int8", shape = (450,))#candidate|4173|(450,)|var|int8
output = func_4169(var_4170,var_4171,var_4172,var_4173,)
func_4174 = relay.Function([var_4170,var_4171,var_4172,var_4173,], output)
mutated_mod['func_4174'] = func_4174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4179 = relay.var("var_4179", dtype = "float64", shape = (10, 14, 3))#candidate|4179|(10, 14, 3)|var|float64
uop_4180 = relay.cos(var_4179.astype('float64')) # shape=(10, 14, 3)
func_2144_call = mod.get_global_var('func_2144')
func_2147_call = mutated_mod.get_global_var('func_2147')
var_4189 = relay.var("var_4189", dtype = "uint32", shape = (150, 3))#candidate|4189|(150, 3)|var|uint32
call_4188 = relay.TupleGetItem(func_2144_call(relay.reshape(var_4189.astype('uint32'), [15, 3, 10])), 0)
call_4190 = relay.TupleGetItem(func_2147_call(relay.reshape(var_4189.astype('uint32'), [15, 3, 10])), 0)
output = relay.Tuple([uop_4180,call_4188,var_4189,])
output2 = relay.Tuple([uop_4180,call_4190,var_4189,])
func_4191 = relay.Function([var_4179,var_4189,], output)
mod['func_4191'] = func_4191
mod = relay.transform.InferType()(mod)
mutated_mod['func_4191'] = func_4191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4191_call = mutated_mod.get_global_var('func_4191')
var_4193 = relay.var("var_4193", dtype = "float64", shape = (10, 14, 3))#candidate|4193|(10, 14, 3)|var|float64
var_4194 = relay.var("var_4194", dtype = "uint32", shape = (150, 3))#candidate|4194|(150, 3)|var|uint32
call_4192 = func_4191_call(var_4193,var_4194,)
output = call_4192
func_4195 = relay.Function([var_4193,var_4194,], output)
mutated_mod['func_4195'] = func_4195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2749_call = mod.get_global_var('func_2749')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_4197 = func_2749_call()
call_4198 = func_2749_call()
var_4205 = relay.var("var_4205", dtype = "float32", shape = (4, 2, 13))#candidate|4205|(4, 2, 13)|var|float32
bop_4206 = relay.bitwise_and(call_4197.astype('uint8'), relay.reshape(var_4205.astype('uint8'), relay.shape_of(call_4197))) # shape=(4, 2, 13)
bop_4209 = relay.bitwise_and(call_4198.astype('uint8'), relay.reshape(var_4205.astype('uint8'), relay.shape_of(call_4198))) # shape=(4, 2, 13)
output = relay.Tuple([bop_4206,])
output2 = relay.Tuple([bop_4209,])
func_4215 = relay.Function([var_4205,], output)
mod['func_4215'] = func_4215
mod = relay.transform.InferType()(mod)
var_4216 = relay.var("var_4216", dtype = "float32", shape = (4, 2, 13))#candidate|4216|(4, 2, 13)|var|float32
output = func_4215(var_4216)
func_4217 = relay.Function([var_4216], output)
mutated_mod['func_4217'] = func_4217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_4236 = func_1626_call()
call_4237 = func_1626_call()
func_3610_call = mod.get_global_var('func_3610')
func_3612_call = mutated_mod.get_global_var('func_3612')
call_4249 = relay.TupleGetItem(func_3610_call(relay.reshape(call_4236.astype('float32'), [4, 2, 13])), 0)
call_4250 = relay.TupleGetItem(func_3612_call(relay.reshape(call_4236.astype('float32'), [4, 2, 13])), 0)
output = relay.Tuple([call_4236,call_4249,])
output2 = relay.Tuple([call_4237,call_4250,])
func_4269 = relay.Function([], output)
mod['func_4269'] = func_4269
mod = relay.transform.InferType()(mod)
output = func_4269()
func_4270 = relay.Function([], output)
mutated_mod['func_4270'] = func_4270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1426_call = mod.get_global_var('func_1426')
func_1427_call = mutated_mod.get_global_var('func_1427')
call_4275 = relay.TupleGetItem(func_1426_call(), 0)
call_4276 = relay.TupleGetItem(func_1427_call(), 0)
output = call_4275
output2 = call_4276
func_4290 = relay.Function([], output)
mod['func_4290'] = func_4290
mod = relay.transform.InferType()(mod)
mutated_mod['func_4290'] = func_4290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4290_call = mutated_mod.get_global_var('func_4290')
call_4291 = func_4290_call()
output = call_4291
func_4292 = relay.Function([], output)
mutated_mod['func_4292'] = func_4292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3649_call = mod.get_global_var('func_3649')
func_3650_call = mutated_mod.get_global_var('func_3650')
call_4352 = func_3649_call()
call_4353 = func_3649_call()
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_4368 = func_1626_call()
call_4369 = func_1626_call()
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_4382 = relay.TupleGetItem(func_1739_call(), 3)
call_4383 = relay.TupleGetItem(func_1741_call(), 3)
output = relay.Tuple([call_4352,call_4368,call_4382,])
output2 = relay.Tuple([call_4353,call_4369,call_4383,])
func_4387 = relay.Function([], output)
mod['func_4387'] = func_4387
mod = relay.transform.InferType()(mod)
output = func_4387()
func_4388 = relay.Function([], output)
mutated_mod['func_4388'] = func_4388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3884_call = mod.get_global_var('func_3884')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_4410 = relay.TupleGetItem(func_3884_call(), 0)
call_4411 = relay.TupleGetItem(func_3886_call(), 0)
func_2356_call = mod.get_global_var('func_2356')
func_2361_call = mutated_mod.get_global_var('func_2361')
var_4416 = relay.var("var_4416", dtype = "float64", shape = (70,))#candidate|4416|(70,)|var|float64
var_4417 = relay.var("var_4417", dtype = "float64", shape = (385, 2))#candidate|4417|(385, 2)|var|float64
const_4418 = relay.const([[-7,-3,9,8,-2,-6,-6,-1,3,4,-6,7,-3,8,2,3,9,2,-6,1,-3,-1,4,-10,6,9,10,3,-10,5,-10,-3,4,6,8,-8,-6,7,-10,7,8,-1,9,-4,-4],[-10,7,3,9,-3,-7,-7,9,3,1,-7,-3,9,-2,-2,2,-1,5,2,5,10,-8,7,1,9,1,2,6,-7,-4,5,8,7,-1,-9,6,-8,-6,-2,-6,-10,-6,-10,-4,1],[3,6,-1,9,5,8,-7,6,1,2,-10,4,-3,-10,-9,-6,6,-8,-8,1,-4,5,-5,-7,-10,6,1,5,4,2,-8,-8,2,-3,4,2,-3,9,1,-6,5,10,-2,10,2],[-9,-10,-5,4,1,-2,-8,-1,4,-5,2,2,5,-10,-2,-7,-5,10,9,7,-4,4,-5,8,-8,10,2,3,10,4,-8,-10,8,-4,-6,7,-2,-1,-6,8,4,4,-4,7,4],[3,-2,6,5,-7,1,-10,-6,3,3,-6,3,-5,8,-10,-3,4,-10,-5,10,-7,-7,5,-9,5,-10,-1,2,-10,7,-5,-5,-6,-9,1,3,2,4,-5,-6,8,-3,8,2,6],[-10,-2,9,-9,8,-2,7,-3,1,-5,-10,2,-10,9,-10,5,-7,4,-4,-6,10,-3,2,-7,6,8,7,-9,2,-2,2,-2,-4,-7,-7,9,1,-6,8,5,-9,9,-7,-4,-6],[-1,4,9,8,-6,-9,6,-7,-4,-8,-10,-6,-3,-7,9,-3,-4,-4,5,-9,10,-6,-9,-9,-1,-3,-3,9,-1,-3,2,1,-3,10,-8,10,6,-4,-10,-9,-1,-1,-3,-10,-9],[-5,9,8,2,3,-7,-9,1,-10,-8,4,-5,-2,7,3,5,8,5,-9,6,-8,-6,-7,-2,-10,8,-10,10,1,5,5,3,5,1,-6,7,9,-1,-10,5,-3,-5,6,-4,3],[3,1,-1,-6,2,9,-8,-3,-7,3,-7,5,-9,7,9,5,10,-2,2,-5,-1,-6,-5,7,-3,5,7,2,-10,1,3,-5,-2,5,-4,8,5,4,4,3,2,-7,-8,4,2],[-1,-1,-7,3,7,-10,-5,-1,-6,-2,2,7,-2,-10,2,2,-4,-10,-6,-3,-10,-9,10,6,5,-5,2,6,-6,10,8,-3,-5,-7,8,3,5,-5,-4,-2,-8,7,10,6,2]], dtype = "int8")#candidate|4418|(10, 45)|const|int8
call_4415 = relay.TupleGetItem(func_2356_call(relay.reshape(var_4416.astype('float64'), [14, 5, 1]), relay.reshape(var_4417.astype('float64'), [770,]), relay.reshape(const_4418.astype('int8'), [150, 3]), ), 3)
call_4419 = relay.TupleGetItem(func_2361_call(relay.reshape(var_4416.astype('float64'), [14, 5, 1]), relay.reshape(var_4417.astype('float64'), [770,]), relay.reshape(const_4418.astype('int8'), [150, 3]), ), 3)
output = relay.Tuple([call_4410,call_4415,var_4416,var_4417,const_4418,])
output2 = relay.Tuple([call_4411,call_4419,var_4416,var_4417,const_4418,])
func_4428 = relay.Function([var_4416,var_4417,], output)
mod['func_4428'] = func_4428
mod = relay.transform.InferType()(mod)
var_4429 = relay.var("var_4429", dtype = "float64", shape = (70,))#candidate|4429|(70,)|var|float64
var_4430 = relay.var("var_4430", dtype = "float64", shape = (385, 2))#candidate|4430|(385, 2)|var|float64
output = func_4428(var_4429,var_4430,)
func_4431 = relay.Function([var_4429,var_4430,], output)
mutated_mod['func_4431'] = func_4431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_4444 = relay.TupleGetItem(func_3658_call(), 0)
call_4445 = relay.TupleGetItem(func_3659_call(), 0)
output = call_4444
output2 = call_4445
func_4450 = relay.Function([], output)
mod['func_4450'] = func_4450
mod = relay.transform.InferType()(mod)
mutated_mod['func_4450'] = func_4450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4450_call = mutated_mod.get_global_var('func_4450')
call_4451 = func_4450_call()
output = call_4451
func_4452 = relay.Function([], output)
mutated_mod['func_4452'] = func_4452
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4619 = relay.const([[[4.527275,0.528956,-1.079508,-7.093196,0.032755,-6.027199,-5.600925,-1.733773,9.449162,3.574064,6.370427,1.260540],[8.871335,-2.612817,-6.190439,4.954230,-3.389373,-2.401906,-5.633537,7.805279,2.083283,-5.711686,3.838691,7.910646],[-7.829568,5.321971,-6.453330,-0.601652,6.462826,6.950719,-1.385324,4.831388,-3.807513,-2.737706,-9.268015,-1.046476]],[[7.074003,-9.462092,4.342218,0.431400,-4.794412,-5.941446,9.161833,-6.967879,8.845477,-9.225245,-9.770993,5.372734],[4.135454,-0.185276,7.131017,4.906917,4.098243,4.821655,9.055718,-0.024727,2.245317,-7.944027,9.880587,-7.173575],[1.411385,7.604626,-9.882910,-9.884511,-8.269366,-3.727918,9.769988,-6.643620,3.369745,-8.191975,-1.412286,-8.947644]],[[8.395888,-6.521491,7.334032,3.723525,7.144727,3.115869,5.257428,7.135873,-7.256271,1.143828,5.944755,-2.965177],[-1.223266,-3.300201,0.156412,-4.630276,9.375694,-9.852634,4.231900,8.451322,-5.419606,6.384618,-4.510849,1.505149],[-6.870428,6.494291,-0.894384,-2.726136,-7.822382,7.772811,2.081063,-4.780365,-7.230981,1.681924,-2.304120,-0.276384]],[[8.097995,5.781690,-6.692468,-5.836584,8.471143,-0.578870,2.781763,-4.485971,7.498608,-8.023244,-6.336202,-9.268634],[7.939255,-9.813126,-5.681580,-5.098784,-7.673927,-3.688190,-2.869671,6.210742,-1.407331,3.536385,-8.888377,1.697725],[8.778119,-7.840762,-4.197675,-0.691040,4.702555,1.077587,4.646616,6.614819,1.354648,-0.610388,4.043387,-2.091961]],[[4.352834,5.565824,6.139069,-3.901392,-9.180421,-3.945626,6.933192,-1.593604,-6.673555,-8.844275,8.286708,0.551570],[0.637190,-3.254183,-6.188248,-2.684357,-3.344774,3.823005,-5.635122,-5.428329,2.281551,8.331955,8.765787,4.695847],[-0.511268,9.619210,6.484586,-2.430122,-1.076453,4.763919,2.711674,7.194906,-6.685607,-3.061244,-6.199449,7.303536]],[[3.171853,-1.917007,5.042466,-0.693781,7.421233,6.261092,1.711018,-0.305544,0.583532,-1.487059,3.471920,-5.402780],[-2.431211,9.351005,-4.011617,-5.524101,9.507871,-5.352179,-6.118526,-2.103041,1.921651,1.311603,-6.182540,-8.515014],[4.880992,-2.395888,-8.657729,-5.124478,1.432307,8.669832,8.759874,-0.192622,-9.439730,3.309570,9.015362,0.564750]]], dtype = "float32")#candidate|4619|(6, 3, 12)|const|float32
uop_4620 = relay.erf(const_4619.astype('float32')) # shape=(6, 3, 12)
output = relay.Tuple([uop_4620,])
output2 = relay.Tuple([uop_4620,])
func_4625 = relay.Function([], output)
mod['func_4625'] = func_4625
mod = relay.transform.InferType()(mod)
mutated_mod['func_4625'] = func_4625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mutated_mod.get_global_var('func_4625')
call_4626 = func_4625_call()
output = call_4626
func_4627 = relay.Function([], output)
mutated_mod['func_4627'] = func_4627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2863_call = mod.get_global_var('func_2863')
func_2865_call = mutated_mod.get_global_var('func_2865')
call_4670 = relay.TupleGetItem(func_2863_call(), 0)
call_4671 = relay.TupleGetItem(func_2865_call(), 0)
uop_4674 = relay.atanh(call_4670.astype('float32')) # shape=(4, 2, 13)
uop_4676 = relay.atanh(call_4671.astype('float32')) # shape=(4, 2, 13)
output = uop_4674
output2 = uop_4676
func_4678 = relay.Function([], output)
mod['func_4678'] = func_4678
mod = relay.transform.InferType()(mod)
mutated_mod['func_4678'] = func_4678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4678_call = mutated_mod.get_global_var('func_4678')
call_4679 = func_4678_call()
output = call_4679
func_4680 = relay.Function([], output)
mutated_mod['func_4680'] = func_4680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1534_call = mod.get_global_var('func_1534')
func_1535_call = mutated_mod.get_global_var('func_1535')
call_4700 = func_1534_call()
call_4701 = func_1534_call()
output = relay.Tuple([call_4700,])
output2 = relay.Tuple([call_4701,])
func_4704 = relay.Function([], output)
mod['func_4704'] = func_4704
mod = relay.transform.InferType()(mod)
output = func_4704()
func_4705 = relay.Function([], output)
mutated_mod['func_4705'] = func_4705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2916_call = mod.get_global_var('func_2916')
func_2917_call = mutated_mod.get_global_var('func_2917')
call_4710 = func_2916_call()
call_4711 = func_2916_call()
output = call_4710
output2 = call_4711
func_4713 = relay.Function([], output)
mod['func_4713'] = func_4713
mod = relay.transform.InferType()(mod)
output = func_4713()
func_4714 = relay.Function([], output)
mutated_mod['func_4714'] = func_4714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4387_call = mod.get_global_var('func_4387')
func_4388_call = mutated_mod.get_global_var('func_4388')
call_4723 = relay.TupleGetItem(func_4387_call(), 1)
call_4724 = relay.TupleGetItem(func_4388_call(), 1)
output = relay.Tuple([call_4723,])
output2 = relay.Tuple([call_4724,])
func_4739 = relay.Function([], output)
mod['func_4739'] = func_4739
mod = relay.transform.InferType()(mod)
output = func_4739()
func_4740 = relay.Function([], output)
mutated_mod['func_4740'] = func_4740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2749_call = mod.get_global_var('func_2749')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_4744 = func_2749_call()
call_4745 = func_2749_call()
output = call_4744
output2 = call_4745
func_4750 = relay.Function([], output)
mod['func_4750'] = func_4750
mod = relay.transform.InferType()(mod)
mutated_mod['func_4750'] = func_4750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4750_call = mutated_mod.get_global_var('func_4750')
call_4751 = func_4750_call()
output = call_4751
func_4752 = relay.Function([], output)
mutated_mod['func_4752'] = func_4752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_4774 = relay.TupleGetItem(func_3658_call(), 1)
call_4775 = relay.TupleGetItem(func_3659_call(), 1)
output = call_4774
output2 = call_4775
func_4786 = relay.Function([], output)
mod['func_4786'] = func_4786
mod = relay.transform.InferType()(mod)
output = func_4786()
func_4787 = relay.Function([], output)
mutated_mod['func_4787'] = func_4787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3884_call = mod.get_global_var('func_3884')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_4795 = relay.TupleGetItem(func_3884_call(), 0)
call_4796 = relay.TupleGetItem(func_3886_call(), 0)
func_4191_call = mod.get_global_var('func_4191')
func_4195_call = mutated_mod.get_global_var('func_4195')
const_4809 = relay.const([1.557778,8.529098,4.426714,-8.471134,-8.694323,-2.375493,8.011631,-5.307482,6.198723,-8.050750,2.170395,-6.097838,1.314906,-7.296059,-8.779995,8.293760,2.079521,-9.435163,-9.356617,-7.801761,7.411190,1.680188,-7.778336,1.578022,-4.073769,-4.942716,9.486863,-2.280389,-6.079216,3.989678,-7.329843,1.601059,-3.454748,7.027952,-8.462740,4.614481,-5.588639,2.503339,0.762443,-7.273237,-2.619818,2.535636,-9.647448,-5.379112,1.079217,8.742940,-0.927723,1.449298,-4.850993,-9.867290,4.944799,-5.716126,-6.268287,-0.685754,-7.126663,7.639113,6.404341,8.781215,-1.267483,9.969435,7.598112,-0.968695,8.910894,-8.764401,-3.851318,-0.146834,1.558955,6.271824,-7.274959,4.139600,-9.233338,-1.700723,1.476712,7.476214,7.676092,5.347272,-9.621347,0.776883,-0.874134,6.778341,-5.923573,-2.599582,9.974230,0.161876,4.411335,-3.992217,0.049691,-1.848680,-6.734985,-7.654566,-4.348552,4.209195,9.436540,-2.033698,-6.986631,-5.051504,5.968711,-9.540433,-5.036192,3.512613,-3.890541,-6.394390,-9.675509,1.213876,-9.701811,-9.819897,0.333227,4.844547,-8.753201,-0.338162,-6.079073,9.175780,6.977865,-1.614060,0.496939,-4.423702,6.301482,2.804213,6.310986,7.545427,3.669599,-4.357616,2.499517,5.628834,9.280885,-8.026634,1.752062,2.162675,-1.113676,-3.968142,8.633375,0.468873,3.447665,-4.909628,2.009921,7.375102,-9.953955,-7.506358,6.793113,1.248318,3.232548,-4.249915,-4.293555,-3.757397,5.814586,-3.924907,4.106630,-2.979510,8.295881,4.099693,-8.475478,5.056217,-7.802768,-7.991741,2.237891,-2.582954,0.485279,1.155151,-7.307424,-2.178569,0.027932,4.123393,0.849842,1.532659,-3.979646,8.047395,8.608563,6.600276,-0.481739,-1.853565,-9.145839,2.155012,4.018317,2.737042,-4.453311,-2.582932,-6.668848,-3.124706,7.263091,-3.376745,-0.654412,-2.454663,-1.757624,7.463297,9.162568,7.320202,-7.312102,7.379766,4.245465,1.456609,0.121915,3.370354,5.053526,5.189222,-4.370931,9.733618,4.143646,-1.881154,4.289911,9.938157,7.609331,-9.058044,5.139292,-2.986943,-6.941080,-9.040017,4.546843,-5.603695,5.432784,9.273088,3.645241,-8.509867,-4.548000,9.050385,-5.874336,-3.797971,6.694994,8.520000,-4.977456,3.231575,5.294109,-3.147380,-5.743406,-7.067818,-7.730949,5.473163,-0.350523,7.610737,-0.454234,-3.353540,9.696295,5.853383,-2.625331,5.852491,-0.465328,1.061172,-8.903440,-8.257137,-6.543461,-3.932702,-1.332972,1.399926,6.213645,2.336151,8.499989,-2.644099,-4.351362,5.856409,-9.773101,5.269489,3.810522,-1.004080,9.716354,-4.472557,8.641878,-2.547632,-7.925867,-7.120731,-8.197462,-2.477560,-5.478187,-5.981076,-9.698949,7.123154,-5.771128,4.634600,1.440067,1.101926,-7.108922,6.277336,-9.656292,7.973023,3.511988,-0.436854,6.928804,7.411901,3.517459,-5.877908,4.501446,-4.348503,-6.708249,8.102480,-8.496442,-3.141100,5.920446,-6.679178,-0.232285,-2.860442,-1.742783,6.160529,4.989175,7.635942,4.346168,-0.685048,3.536361,-2.340181,-0.329309,2.267723,6.982910,0.480525,9.091114,-4.924562,8.669902,8.694284,-8.757218,1.085232,8.740229,-1.972688,-1.159096,2.939720,-0.270747,-6.616011,-3.991054,3.104473,8.303389,-0.374410,-5.991878,-2.596144,3.494485,3.489056,9.766505,-4.292823,5.847310,8.641579,9.652937,4.079217,-5.145997,9.617793,-3.002163,-5.848271,7.892536,-3.097722,-6.342218,-4.488147,1.770752,1.932346,-7.180478,2.121853,-8.553476,-6.767594,-8.032069,6.518979,1.578606,0.310378,4.201323,7.411087,-8.375435,4.232469,0.273992,-0.981346,6.899078,3.623883,4.142496,-6.555179,1.902790,-1.996451,-4.455649,-5.011995,-8.171540,1.612328,-1.592119,-6.227262,4.646635,2.963439,4.917521,3.319390,2.278397,5.485714,8.501066,-9.981404,-9.193551,-1.859499,3.495214,-9.460370,-0.989950,7.774862,-0.300737,3.893995,4.540159,-0.571240,0.493877,-0.392655,-3.459393,9.323252,2.675442,-1.617499,-2.525974,-3.012548,-4.113493,5.989772,6.258706,6.577274,8.012119,0.049820,3.841598,2.225456,0.123192,7.293254,9.747652,4.043066,-9.580310,-1.309870,2.530248,-2.178943,8.061020,-1.827019,6.309206,3.317101,5.773107,3.967111,-8.733127,7.302483,-3.660679,-1.259206,3.917885,-2.646760,1.509928,6.021052,-0.162961,-1.894923], dtype = "float64")#candidate|4809|(420,)|const|float64
const_4810 = relay.const([[-5],[-8],[-2],[-2],[-8],[10],[-4],[-3],[-4],[-2],[1],[10],[-9],[8],[9],[4],[-6],[2],[-9],[-4],[-1],[-1],[9],[-4],[2],[9],[-3],[5],[-4],[-7],[10],[10],[-6],[-1],[-5],[2],[-1],[10],[8],[-4],[-7],[2],[-4],[4],[-9],[-2],[4],[4],[-2],[-3],[-1],[-2],[-9],[-6],[-6],[7],[-3],[-7],[-5],[4],[4],[2],[10],[8],[-10],[1],[-9],[8],[7],[4],[4],[9],[10],[6],[-7],[-9],[10],[10],[9],[2],[-2],[-3],[-5],[-6],[-4],[-6],[-4],[8],[10],[-9],[-6],[-9],[2],[-6],[9],[10],[-10],[10],[-5],[6],[9],[-2],[6],[6],[5],[5],[4],[8],[3],[-8],[-2],[2],[5],[-5],[-10],[-2],[4],[1],[3],[6],[-1],[-9],[-4],[4],[3],[-10],[10],[4],[5],[6],[4],[-4],[3],[8],[1],[3],[-4],[-10],[1],[8],[5],[6],[-1],[3],[-4],[1],[8],[-4],[-1],[6],[-8],[-7],[-1],[-3],[-10],[-6],[-10],[-10],[-5],[-6],[1],[-6],[-5],[9],[-5],[-7],[4],[-7],[10],[9],[10],[4],[-8],[-10],[-9],[-3],[-6],[-1],[-1],[6],[-5],[-1],[8],[8],[-6],[9],[-2],[8],[1],[-6],[-8],[1],[10],[-6],[2],[9],[6],[8],[5],[-3],[3],[-9],[-7],[9],[-8],[-8],[-4],[10],[-1],[-4],[-8],[-2],[-10],[8],[8],[-8],[-5],[8],[-5],[10],[3],[-8],[7],[10],[-4],[-10],[-9],[7],[-3],[-5],[-6],[4],[10],[-5],[-10],[-8],[3],[10],[6],[7],[-6],[4],[-9],[5],[6],[7],[-4],[5],[-4],[1],[-5],[8],[7],[-7],[10],[4],[-1],[1],[9],[-6],[-7],[9],[3],[-7],[4],[2],[7],[5],[-8],[8],[6],[-3],[-10],[1],[-2],[2],[-9],[1],[5],[-10],[8],[-8],[3],[-10],[8],[8],[9],[3],[10],[7],[-10],[-1],[10],[-2],[2],[3],[5],[4],[5],[-9],[-1],[6],[-2],[7],[2],[4],[-3],[-10],[9],[-7],[3],[10],[1],[6],[-9],[8],[-3],[9],[-3],[7],[-2],[-7],[4],[-9],[7],[-3],[-8],[-8],[8],[-7],[-10],[6],[-9],[-9],[3],[10],[-5],[-2],[4],[3],[9],[-4],[8],[8],[-8],[2],[9],[-1],[4],[5],[-6],[-5],[-3],[1],[8],[1],[-7],[-4],[8],[10],[6],[6],[-1],[-6],[-7],[-2],[-5],[3],[4],[5],[5],[9],[10],[-8],[7],[4],[1],[3],[-7],[8],[-9],[6],[-9],[-3],[-4],[-5],[6],[-2],[1],[-5],[-9],[4],[-9],[3],[-5],[1],[-3],[-9],[7],[-5],[2],[-9],[-6],[-7],[10],[-5],[-2],[-8],[-5],[8],[-1],[-3],[3],[7],[6],[10],[-2],[6],[-9],[-2],[4],[-7],[-6],[7],[7],[-1],[-4],[5],[8],[9],[3],[-2],[8],[2],[-3],[-8],[4],[3],[-2],[3],[-8],[8],[-3],[-9],[-4],[-7],[-8],[2],[8],[-5]], dtype = "uint32")#candidate|4810|(450, 1)|const|uint32
call_4808 = relay.TupleGetItem(func_4191_call(relay.reshape(const_4809.astype('float64'), [10, 14, 3]), relay.reshape(const_4810.astype('uint32'), [150, 3]), ), 2)
call_4811 = relay.TupleGetItem(func_4195_call(relay.reshape(const_4809.astype('float64'), [10, 14, 3]), relay.reshape(const_4810.astype('uint32'), [150, 3]), ), 2)
func_2197_call = mod.get_global_var('func_2197')
func_2201_call = mutated_mod.get_global_var('func_2201')
const_4819 = relay.const(-6, dtype = "uint16")#candidate|4819|()|const|uint16
const_4820 = relay.const([-1.678678,-7.248590,-7.828121,-0.729041,2.147553,2.235866,-9.897783,-8.566199,7.222652,5.674774,2.538472,9.414314,-6.166549,4.620262,-3.577086,5.167952,-7.280167,-2.339546,-9.710828,1.705603,-9.201431,-0.531129,-7.183825,7.501914,7.419200,7.339014,9.334434,-7.061000,-3.557571,4.664639,4.848458,-6.343598,-6.334734,8.853825,3.218411,9.906663,4.869379,-5.837515,-1.295225,3.538355,4.637523,-2.893175,-1.386142,-9.540738,0.258619,2.235643,-5.081498,-7.567917,-3.311596,0.474640,-9.628913,8.278251,-1.199786,5.787849,9.831663,-2.550055,3.243365,4.721652,-4.977361,4.676609,-8.139471,-8.884045,-9.106067,0.958196,-8.496482,-4.388889,9.909813,4.200432,-9.128424,-0.461097,3.411245,-4.378197,-2.561317,-2.957393,1.955353,-7.278531,-9.819738,-3.223603,4.867666,9.075869,7.609089,-3.523514,2.682326,-7.886691,8.840027,9.709194,-0.520955,8.553164,-4.799213,6.869698,1.964163,3.486917,-2.930015,-7.490695,0.787616,-2.814941,-5.000834,-6.247802,-9.997973,3.707059,8.429358,-1.086525,-5.540727,-2.054813,-5.474299,-4.537170,5.278329,2.050933,5.188708,5.040946,-3.638714,6.641963,0.042537,-4.429217,1.866496,4.116868,6.913239,-8.624543,5.829685,-3.577297,-0.473910,-5.228301,-7.107038,9.650817,4.197216,-5.624032,-7.671024,-2.943663,8.364481,3.841882,-5.301977,-6.601819,9.927058,8.784589,6.566934,-5.459263,-6.842111,-2.523292,-7.454465,7.747260,-9.022199,7.492947,7.696562,-1.237079,0.441715,8.965695,-9.436812,4.048246,-9.511347,5.972098,-9.248800,8.061590,-4.169675,9.137769,-6.633286,-5.574111,-2.156870,4.673983,-3.541040,0.821896,-3.628652,0.563121,-4.993031,-2.800350,-5.181620,-5.770483,6.910916,5.845433,3.896450,-1.188229,7.880781,2.671974,8.116721,-8.375642,-8.604303,0.337712,-2.466710,-2.725944,2.784604,-4.082382,-7.509496,-6.415048,-2.576905,8.040577,-9.478700,1.494455,-2.794647,6.496630,-4.769146,0.547909,5.125611,8.381052,-2.350757,-5.648739,-1.810976,6.715197,-4.396985,-1.953843,5.413964,-6.848973,6.111277,-1.576954,-1.549468,9.415162,1.658596,-0.574248,3.747764,-3.981238,4.296484,8.058672,1.001823,-8.451633,-8.731451,8.721445,-6.021847,7.041415,3.668142,9.441637,-5.238466,-0.325637,-5.295012,-6.086935,-1.190860,5.726769,-6.944464,8.409911,4.301687,7.396545,-0.498509,3.747703,-5.320796,7.331829,-5.366696,-1.311618,2.666118,-2.017714,4.529180,-1.471879,-6.278279,0.474215,-6.217344,-1.586087,-4.381282,-2.493690,-7.580558,4.038476,-0.419740,6.152067,6.406656,2.144368,-4.993283,-1.795532,4.396835,-8.844528,-9.642523,-1.221920,-8.630819,-5.185297,-1.036243,-3.385502,7.261087,2.729317,-5.364971,-5.781623,-8.703763,-4.040990,-6.698761,-6.341345,0.953131,1.253071,-1.875758,6.291317,-2.002382,2.861463,-2.990266,-2.680584,5.323837,9.095052,-2.425932,-8.263091,-2.859371,8.185187,5.418462,-5.091727,-3.139510,3.575874,5.797991,-4.566941,-3.378418,-7.792486,6.584220,-9.534619,-5.078557,-5.847368,-7.168792,-8.329202,1.873331,0.571444,6.105867,-0.890404,3.405988,5.685703,-5.974160,-0.596129,9.038794,4.533014,8.412831,-3.526935,5.476203,-5.708995,4.014983,-8.886071,3.118812,4.977937,2.425847,-1.814777,7.035767,9.425200,9.194006,5.531220,-3.284984,2.055551,-7.042771,-6.398925,-7.551825,0.092814,3.888720,4.138471,0.948067,8.673519,-1.876875,6.462324,4.456670,7.493840,1.665535,-0.217739,0.539932,1.670235,3.412034,1.316916,2.555579,2.510737,0.696136,4.226281,4.758090,5.988272,-2.493288,-7.003269,-6.482531,6.634927,-3.471415,9.947386,6.530963,4.440655,-0.320391,7.669306,-7.758295,-3.179655,0.887634,-9.592835,9.711857,-4.884509,3.115692,3.978507,-6.970125,3.843041,-8.614949,-9.945638,3.746086,-4.295018,-0.118568,7.960586,-4.511637,-9.260101,1.720123,1.216567,9.561873,2.153378,-1.323062,-1.438626,2.114646,1.894382,-7.548455,3.514230,3.639720,-0.430028,3.466772,-2.729816,7.107624,5.404223,-2.617324,4.659072,-8.657608,-0.703788,-8.047007,5.162618,-9.005391,9.821765,-9.369404,-7.469132,1.613321,-8.475133,4.514313,-7.918182,0.151625,7.570138,-1.424871,3.473985,1.910936,0.563318,-9.607832,8.232556,6.713268,-3.648955,-1.385412,-3.873526,4.491073,-3.029874,2.115613,8.739382,0.817436,-8.876176,-6.659485,-6.452021,4.113266,0.333079,1.018098,-9.534007,6.280212,-0.890040,-8.348300,4.660467,9.958569,-1.322821,1.497174,-0.237849,-7.971750,-0.159621,-2.395909,4.110988,1.495355,-0.476402,1.286421,9.206804,8.687285,-7.346621,-3.546050,8.443084,-1.049333,1.378084,3.895025,-9.267396,-3.165378,-7.646550,6.311989,2.321299,-2.694275,7.009339,-9.028538,5.530834,7.867406,3.357259,1.289292,3.492437,-7.169954,5.839015,-5.901404,-7.724056,4.390850,-7.079365,-3.005420,4.946576,4.488327,-5.252826,8.794994,5.629055,-1.925990,9.188971,0.402280,0.766755,9.410750,0.209179,-0.104752,-9.771253,9.728908,-1.713990,-8.682731,-8.118585,6.978349,-5.103083,-2.208910,7.418258,-7.422604,9.517742,1.379149,-8.361501,5.207064,7.870455,2.676238,5.126650,-8.600436,-9.472547,6.044062,-6.916387,9.691565,-7.915129,-2.266374,-3.390100,-0.109095,-2.871621,-1.194692,-3.156300,-5.170158,4.395976,9.858081,-8.580843,8.132068,0.576845,-1.736347,6.484745,-2.441835,0.808222,6.509040,4.630989,7.458445,9.470493,-9.619339,-5.460925,4.143530,-5.570711,-7.410852,-8.679398,1.233287,2.221124,6.290742,-4.582767,-5.793589,-8.026285,4.761237,4.739400,8.379452,1.010399,-1.421809,3.456019,8.916702,-3.366346,-9.511059,4.748437,-5.517076,2.966118,0.495164,4.853277,-2.676548,1.437240,-2.114740,-1.511535,-2.554713,5.257984,2.421910,-5.786841,4.497367,0.252155,-6.477771,4.919909,9.594855,-5.284719,-3.278735,-0.754588,-5.169394,2.277591,-9.991382,-6.791332,7.541371,9.382304,-3.785376,9.393476,-9.771915,-7.401320,-7.299635,-6.537903,-9.409701,-4.480327,-7.262139,8.603753,2.176285,4.706890,8.183421,-5.149697,-3.454991,3.464211,5.510808,-3.857989,5.791491,-5.125969,-3.162243,9.577390,-1.869116,-7.602550,-0.093609,1.023810,-9.550860,6.221413,-3.278468,-7.653350,5.145815,-0.465876,-3.313084,4.810218,9.408544,0.491338,-2.964193,-6.105733,8.415789,9.444514,2.383242,1.079607,-8.066221,9.135923,-6.687804,7.579478,9.531962,-9.800148,-2.983990,-8.201699,-4.640229,7.885775,-5.092448,5.351776,-3.953869,-2.769933,7.693874,3.991522,-7.914156,-1.889771,-5.355502,9.738164,3.732574,-7.058540,1.624920,0.313465,-2.817973,-7.695054,4.012799,-1.848188,-0.800514,2.668139,-1.720956,4.236164,2.425065,8.238305,4.580232,8.825218,8.861564,-8.020768,-0.476819,-6.190662,5.943548,-9.337641,-3.285191,-7.918497,9.519317,-9.697111,3.854497,-8.645342,5.907338,-9.233627,-0.364393,-1.790291,6.922153,-7.940833,-8.088878,1.856315,2.693935,-2.084030,-2.449516,1.047619,-7.612506,-7.243994,7.823397,-8.482690,-8.135972,-2.065279,3.775840,-8.664365,1.944064,-1.778818,5.464273,3.712390,7.588048,-3.420124,1.044190,5.673687,9.892290,3.537372,8.299554,-6.616267,-1.543732,-3.607418,2.071701,6.132446,-8.055285,-9.812667,0.282854,-5.897127,-6.690236,-7.321867,-1.460707,3.018895,5.256816,9.425935,4.063597,7.369064,-5.523429,8.464431,-5.782361,-7.309340,-9.602619,9.184847,5.438442,6.297885,-8.099299,2.288575,7.817821,2.312766,6.330131,1.544055,-7.377829,-0.640251,5.705782,-9.527404,-1.719387,-6.842285,6.056295,-6.728629,4.965492,-6.911513,-0.604185,4.529179,2.946080,-9.204084,4.804147,2.203191,-4.053933,-5.785957,9.988860,-7.960646,3.811551,-2.523798,-7.871410,4.946054,-9.107775,9.124918,9.346324,8.254635,7.578317,8.126302,7.652394,-6.954436,3.969775,9.967061,1.707759,-0.326584,-3.943427,-7.506868,-5.246482,2.523662,1.991260,1.809364,4.425136,3.302595], dtype = "float64")#candidate|4820|(770,)|const|float64
call_4818 = relay.TupleGetItem(func_2197_call(relay.reshape(const_4819.astype('uint16'), []), relay.reshape(const_4820.astype('float64'), [770,]), relay.reshape(call_4808.astype('int8'), [450,]), ), 3)
call_4821 = relay.TupleGetItem(func_2201_call(relay.reshape(const_4819.astype('uint16'), []), relay.reshape(const_4820.astype('float64'), [770,]), relay.reshape(call_4808.astype('int8'), [450,]), ), 3)
func_1814_call = mod.get_global_var('func_1814')
func_1816_call = mutated_mod.get_global_var('func_1816')
call_4829 = relay.TupleGetItem(func_1814_call(), 4)
call_4830 = relay.TupleGetItem(func_1816_call(), 4)
uop_4840 = relay.acos(call_4818.astype('float32')) # shape=(7, 2, 13)
uop_4842 = relay.acos(call_4821.astype('float32')) # shape=(7, 2, 13)
bop_4847 = relay.bitwise_xor(uop_4840.astype('int32'), const_4819.astype('int32')) # shape=(7, 2, 13)
bop_4850 = relay.bitwise_xor(uop_4842.astype('int32'), const_4819.astype('int32')) # shape=(7, 2, 13)
output = relay.Tuple([call_4795,call_4808,const_4809,const_4810,const_4820,call_4829,bop_4847,])
output2 = relay.Tuple([call_4796,call_4811,const_4809,const_4810,const_4820,call_4830,bop_4850,])
func_4853 = relay.Function([], output)
mod['func_4853'] = func_4853
mod = relay.transform.InferType()(mod)
mutated_mod['func_4853'] = func_4853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4853_call = mutated_mod.get_global_var('func_4853')
call_4854 = func_4853_call()
output = call_4854
func_4855 = relay.Function([], output)
mutated_mod['func_4855'] = func_4855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_4884 = func_1626_call()
call_4885 = func_1626_call()
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
var_4889 = relay.var("var_4889", dtype = "int8", shape = (84,))#candidate|4889|(84,)|var|int8
call_4888 = relay.TupleGetItem(func_3339_call(relay.reshape(var_4889.astype('int8'), [4, 3, 7])), 0)
call_4890 = relay.TupleGetItem(func_3341_call(relay.reshape(var_4889.astype('int8'), [4, 3, 7])), 0)
uop_4897 = relay.exp(call_4884.astype('float64')) # shape=(4, 2, 13)
uop_4899 = relay.exp(call_4885.astype('float64')) # shape=(4, 2, 13)
func_1814_call = mod.get_global_var('func_1814')
func_1816_call = mutated_mod.get_global_var('func_1816')
call_4919 = relay.TupleGetItem(func_1814_call(), 0)
call_4920 = relay.TupleGetItem(func_1816_call(), 0)
output = relay.Tuple([call_4888,var_4889,uop_4897,call_4919,])
output2 = relay.Tuple([call_4890,var_4889,uop_4899,call_4920,])
func_4924 = relay.Function([var_4889,], output)
mod['func_4924'] = func_4924
mod = relay.transform.InferType()(mod)
mutated_mod['func_4924'] = func_4924
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4925 = relay.var("var_4925", dtype = "int8", shape = (84,))#candidate|4925|(84,)|var|int8
func_4924_call = mutated_mod.get_global_var('func_4924')
call_4926 = func_4924_call(var_4925)
output = call_4926
func_4927 = relay.Function([var_4925], output)
mutated_mod['func_4927'] = func_4927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4739_call = mod.get_global_var('func_4739')
func_4740_call = mutated_mod.get_global_var('func_4740')
call_4965 = relay.TupleGetItem(func_4739_call(), 0)
call_4966 = relay.TupleGetItem(func_4740_call(), 0)
func_2505_call = mod.get_global_var('func_2505')
func_2508_call = mutated_mod.get_global_var('func_2508')
var_4971 = relay.var("var_4971", dtype = "float64", shape = (540,))#candidate|4971|(540,)|var|float64
call_4970 = relay.TupleGetItem(func_2505_call(relay.reshape(var_4971.astype('float64'), [10, 9, 6]), relay.reshape(var_4971.astype('float64'), [10, 9, 6]), ), 0)
call_4972 = relay.TupleGetItem(func_2508_call(relay.reshape(var_4971.astype('float64'), [10, 9, 6]), relay.reshape(var_4971.astype('float64'), [10, 9, 6]), ), 0)
output = relay.Tuple([call_4965,call_4970,var_4971,])
output2 = relay.Tuple([call_4966,call_4972,var_4971,])
func_4984 = relay.Function([var_4971,], output)
mod['func_4984'] = func_4984
mod = relay.transform.InferType()(mod)
mutated_mod['func_4984'] = func_4984
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4985 = relay.var("var_4985", dtype = "float64", shape = (540,))#candidate|4985|(540,)|var|float64
func_4984_call = mutated_mod.get_global_var('func_4984')
call_4986 = func_4984_call(var_4985)
output = call_4986
func_4987 = relay.Function([var_4985], output)
mutated_mod['func_4987'] = func_4987
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5055 = relay.var("var_5055", dtype = "float64", shape = (16, 7, 9))#candidate|5055|(16, 7, 9)|var|float64
uop_5056 = relay.atan(var_5055.astype('float64')) # shape=(16, 7, 9)
output = uop_5056
output2 = uop_5056
func_5058 = relay.Function([var_5055,], output)
mod['func_5058'] = func_5058
mod = relay.transform.InferType()(mod)
var_5059 = relay.var("var_5059", dtype = "float64", shape = (16, 7, 9))#candidate|5059|(16, 7, 9)|var|float64
output = func_5058(var_5059)
func_5060 = relay.Function([var_5059], output)
mutated_mod['func_5060'] = func_5060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4290_call = mod.get_global_var('func_4290')
func_4292_call = mutated_mod.get_global_var('func_4292')
call_5095 = func_4290_call()
call_5096 = func_4290_call()
func_3016_call = mod.get_global_var('func_3016')
func_3020_call = mutated_mod.get_global_var('func_3020')
var_5107 = relay.var("var_5107", dtype = "float64", shape = (12, 156))#candidate|5107|(12, 156)|var|float64
const_5108 = relay.const([-9.879023,0.589467,3.539951,6.908374,2.317175,-0.518289,3.952957,-2.295537,-9.752254,0.091140,7.812657,0.328532,6.852723,6.766611,0.667847,5.980661,-8.011853,-8.662836,5.219320,9.074892,3.732665,4.057836,-9.888987,2.146843,8.422239,-9.196271,7.828196,5.007231,6.990736,9.858765,7.050317,7.562675,9.017994,6.347511,8.603437,1.262573,4.815182,1.609284,-8.034061,-4.114566,-5.151440,9.752660,-7.144961,-2.358597,9.612536,-6.539839,8.078758,6.175736,3.343071,8.492051,0.126468,-5.727646,4.559862,-7.953848,-8.583317,-8.284099,8.118070,-5.517185,-1.906020,-3.337149,-2.925285,-3.108057,-5.422642,7.386526,-9.181697,-4.745357,3.311820,-9.820349,-8.013776,6.385085,-0.607506,0.291098,7.160687,0.019413,0.776019,2.080190,9.853279,1.540703,7.203081,6.660886,0.148498,8.449345,-5.532892,-6.423680,5.051484,-3.680216,0.165720,9.944233,5.687019,-9.123977,-3.347528,4.859099,6.135026,4.547710,8.498015,-2.306228,-5.491081,8.422455,-2.230213,-1.615524,8.022613,8.723577,-5.004394,7.629509,9.664874,-5.717466,-4.923125,2.214430,-6.431617,-2.636168,-5.658686,2.179677,4.828698,0.776075,-9.303145,5.922270,-3.152344,-7.239903,2.347748,6.077115,1.752103,3.552674,0.938721,9.416012,1.896455,0.033292,-1.124629,0.167705,0.150478,0.734944,-3.710534,-4.569110,8.092383,3.748253,-1.599785,-3.665864,9.128216,9.623161,-8.985768,-6.962707,4.636995,7.779110,-0.313876,4.887283,-0.666772,2.072654,4.161026,7.655615,-0.204860,9.591764,4.420576,-6.948942,7.946530,9.431134,-9.922134,-7.428510,3.916938,-3.969800,-2.069271,-7.692703,-5.852937,7.124932,7.133071,4.786202,9.596140,-8.636372,-2.484579,2.468369,2.583126,6.176349,2.454459,1.276408,-7.055776,-0.798117,9.041632,1.294374,7.167541,4.016572,1.648344,-9.140822,3.518006,-8.072838,-6.339671,-4.025071,-7.259940,4.486836,6.976205,2.372051,-0.169528,-5.146631,-9.660447,-8.495356,-1.920477,-0.302866,-0.958913,-9.299735,9.552230,2.023715,1.836248,2.662028,7.512717,7.645194,5.559900,-1.297620,-8.038419,7.533645,-3.274536,-7.842446,2.614277,8.631901,-2.293410,-8.293794,-0.316471,0.160958,7.628356,9.883710,6.919789,7.083303,8.272932,4.242563,-9.281631,-7.141661,-4.820877,9.723972,3.331515,1.792762,-5.166764,-4.837615,0.574304,-8.132276,-4.776047,9.073140,-1.683551,7.640007,6.057884,-5.016778,9.567270,-1.064052,8.184387,-8.541640,-4.245565,-6.654731,1.703494,8.654929,-3.922894,1.518823,-4.882582,8.588400,9.233682,-8.788823,7.387337,-7.674783,-4.493172,-9.202224,-7.329595,-5.697275,-0.281446,4.639587,5.291110,-0.083766,2.071436,6.180813,-9.732400,-1.214572,4.231212,-1.463369,7.958239,0.744129,-0.976394,-5.797308,-0.613734,5.515552,1.188572,-6.087858,-8.840528,8.214501,-3.501181,0.087844,9.471115,-8.739068,-2.549824,7.903783,8.785927,9.701690,-3.416066,-2.842308,9.683409,0.572082,5.015876,7.193843,-6.096115,6.380446,3.962391,4.321586,-7.876635,2.109268,9.250857,7.998834,-1.199766,-8.460443,-1.285789,7.415865,-4.368112,-1.922727,9.355405,6.692248,-7.849885,-1.892588,6.868420,-6.343920,-2.521794,6.687858,-5.423770,-7.959280,7.904096,8.890127,-3.074645,6.061435,0.317833,-8.992318,-9.241978,-3.932783,-7.047620,-7.196985,4.801382,0.359381,8.988363,0.408928,3.311638,-9.431498,-1.505413,-8.309247,-6.789175,1.007538,-5.871940,-8.597743,-2.667179,3.039517,-4.671883,-6.326337,7.906535,8.940201,-9.853479,-9.574631,-5.448559,7.463902,5.536233,8.567952,7.847239,8.549204,-2.765014,-0.306155,5.761444,9.674154,-8.507631,4.057629,-0.265072,-5.619317,1.572889,-2.560220,8.177867,-0.841065,-2.516124,-2.735188,-8.795913,0.521957,-4.556172,2.033401,3.960378,7.521956,5.558344,4.276414,9.493235,-7.402548,8.328469,-5.806352,-6.784516,8.584341,6.779536,3.126547,6.523046,-7.290205,-1.597884,2.454408,7.223461,2.275182,6.562246,-3.860454,-6.131482,1.866926,0.057355,-2.532221,-5.750762,-5.496976,-6.444014,-5.050400,-1.703024,6.668223,-1.116885,5.820728,2.363020,-4.941278,1.146889,4.408834,-8.359590,0.591543,-4.762533,0.942163,8.995644,-8.156376,5.205470,-8.323606,-9.855290,3.601766,-6.619649,-5.789263,2.998005,1.787433,7.544404,8.850977,9.684155,4.330132,-1.673185,5.587045,8.893318,1.513643,-9.208520,-9.080894,2.192549,8.999848,-0.544398,5.203522,1.480733,8.211725,3.562040,-8.867905,3.194024,1.343562,-7.707297,-9.962494,-4.328139,8.191435,1.337388,9.541288,5.792327,-3.837814,-1.934766,8.273116,-7.142867,-8.528042,5.185537,8.500240,3.666598,8.467728,3.012983,8.863382,0.304754,-5.516180,-0.280327,-9.136690,-2.601918,-1.311121,-0.200251,-7.482577,-5.424799,8.372785,3.310417,-0.037646,2.795554,0.690731,6.810442,-0.586755,2.424371,5.057848,1.085263,7.076588,3.534440,-6.133752,5.939608,-8.265812,-4.775808,-8.448369,-4.041948,-0.644360,-9.057277,-1.466923,-6.902470,-2.141030,3.780651,1.632998,7.298045,0.258913,-2.626107,1.473346,-2.163435,6.154789,7.811169,2.773522,9.645062,3.706627,5.472453,0.667378,-8.245559,6.434176,-9.973823,-7.981381,8.407812,-7.555116,-4.183652,4.873731,9.443624,0.105012,-5.903961,7.649347,-5.100219,4.487303,-7.143576,7.311380,4.170955,7.947774,3.353359,9.797973,9.191301,3.343937,3.415366,-3.457749,3.242306,7.317807,-0.257632,6.634437,7.312367,-7.848051,-7.747102,0.811212,-2.933035,5.080671,-1.464155,-6.349469,-2.141402,4.963547,4.406334,-5.502423,8.538786,-2.303008,-2.285805,-5.676338,7.193112,-7.579186,-8.167647,2.997459,-4.378265,8.882495,9.193822,-9.203111,9.339376,-2.672578,2.574317,8.694196,-1.886425,7.863092,-4.373586,3.562179,-9.374427,0.117423,9.658275,-6.121568,8.783645,-0.049354,1.979234,-7.204006,9.896029,2.097186,4.569296,8.982241,4.156341,1.489312,7.268071,9.877885,-1.965339,-9.061120,2.906937,7.175891,-1.012880,8.709448,-5.056914,-9.047327,-2.415317,-2.384134,2.290373,-5.105242,-9.317275,-5.451873,-7.916196,-3.379039,-8.294835,-0.287241,3.153169,-1.096668,3.004036,7.763570,3.274064,9.640121,-8.263156,0.166033,-1.386101,-6.632370,6.771286,-9.032667,-4.712550,-0.740659,2.756446,-8.576261,-3.072875,6.792771,-9.366190,4.569407,-7.079180,-8.819540,2.418968,-5.863208,8.130173,-5.236683,4.964557,-5.174173,7.952022,-8.767402,1.972284,8.938289,1.521161,4.589247,-1.169612,8.713614,-6.669542,7.415819,-4.053467,4.830600,-8.068960,-5.062077,-9.670411,4.560800,-9.811961,-1.780326,-8.233628,2.207256,-1.072454,9.973659,-3.363921,-2.082193,-0.375465,-5.828755,4.386966,-5.042891,2.283678,-4.647807,4.448616,-6.099987,4.188872,3.447688,-6.782241,-6.912948,-8.529402,4.254164,-4.075044,1.314962,5.152225,9.174484,1.255224,-1.089954,9.121625,-5.391713,-8.199112,-6.478423,8.566332,6.338240,-2.014585,8.360408,-9.447240,4.185983,-4.342647,6.798838,-4.035078,-1.789577,8.518585,3.728684,8.784465,6.591582,-0.415578,-3.973523,-3.400039,2.429424,2.244410,4.827332,-4.864689,-3.082460,9.254496,-9.085888,1.042784,4.352311,-6.809864,9.100441,-0.601136,0.579489,-5.316043,-3.196097,-2.858458,0.044666,-9.163815,1.569274,-3.418210,9.629006,7.352423,2.518135,0.458700,8.063663,4.360148,7.747182,-7.759341,-9.771869,-5.210634,2.004405,8.452518,-2.849323,9.268883,-9.641532,-1.685544,6.636991,6.537191,-7.539049,5.772394,-3.775804,-8.842479,-6.437366,9.947176,0.099979,3.707517,-0.907231,9.880642,9.237325,-7.170625,-9.828223,6.977437,-4.978147,0.022587,7.926988,8.715486,3.274969,-5.758568,-0.395808,2.880268,4.574984,-7.836607,6.677512,9.225608,-4.113919,-0.518358,-9.579017,-9.545799,-5.302469,2.727456,-5.551521,-0.836769,-4.185018,7.867582,-5.418634,-4.725821,4.164538,5.544544,-0.616444,1.620292,-7.168365,-5.354725,-3.263279,7.078010,-0.528212,-0.356578,8.325851,-1.005706,0.720249,-9.187342,-7.093113,-3.725166,5.998458,-1.126944,-4.105385,-9.419214,3.029083,5.780564,9.411999,6.683443,4.522814,-5.477537,-6.632202,-5.259861,-1.887258,1.674709,2.359738,8.480046,9.437048,-6.303702,7.615965,-3.354580,0.217643,-9.635001,-8.982593,-4.204492,-8.836179,6.062276,-4.586199,-6.964577,-4.009163,2.418234,9.864636,8.624401,1.903000,-7.364517,-0.249705,2.783814,-6.073036,0.549789,7.388322,-9.345668,-6.805313,-6.752318,3.082415,-5.814541,-0.069839,1.201505,-4.027481,-7.960557,4.280934,-8.441289,9.506678,9.014465,-5.901942,4.671321,2.180372,4.644680,1.709630,-8.696641,-9.239552,-4.258853,-9.721374,2.853728,-7.115349,-4.328485,-8.145605,-7.062918,2.052601,-9.348343,-1.144420,1.179108,5.231629,8.381604,8.876738,-5.408855,-1.160124,-7.856964,-0.185353,6.546678,-6.062345,-8.858486,6.582487,-2.289320,1.180498,-8.851451,-7.318074,0.652093,-5.591870,-2.661975,-5.549943,2.892403,-6.441232,9.521792,2.906513,5.589345,1.356993,4.769472,-6.226286,0.946352,-4.655775,7.921271,7.433639,-9.135082,-4.553414,8.813493,8.355452,2.694745,9.015428,3.492032,-2.674811,-5.963739,-1.195439,-8.109256,4.596029,-7.064657,1.182049,3.237114,-9.985293,-0.700264,-3.022171,7.999401,-1.243627,4.334795,-2.735841,7.368975,-2.016241,-6.086468,3.115225,7.665025,-5.588495,-2.002403,-1.372146,-5.380250,2.988631,5.156412,3.946282,-3.835845,1.592519,7.171943,-4.657831,-7.547881,-2.860468,4.013132,8.014024,-5.059293,1.606551,4.909341,-0.410805,-2.625948,-4.628239,-7.466651,3.368837,-4.459812,-5.689789,-5.285421,-5.522746,2.914227,0.930444,-5.725353,-2.239022,-3.134138,3.153593,0.367040,0.080757,3.512067,9.818525,2.126894,-1.429047,9.195961,8.606220,0.881196,4.205789,-5.358873,-4.222810,4.138287,-2.204974,-1.936075,-9.215026,4.402641,4.209593,5.233137,-3.289758,9.551465,-3.527063,-5.588615,-7.264288,6.775670,-4.597494,-5.198232,-8.545056,3.551124,2.227776,-2.105065,0.703178,-4.019990,0.737196,5.995689,-4.235113,-1.644528,-1.578031,2.996144,4.956887,-3.167159,-0.273896,-6.704489,-2.410339,4.627149,5.135990,6.836942,-0.536869,7.827250,-3.981223,7.446905,-3.822285,6.400878,-4.585940,1.670471,-5.555472,-4.165493,3.442372,5.554786,-9.278833,7.425623,1.367090,1.523976,-0.852744,7.660263,3.375492,-5.281248,-0.307032,-4.836063,-1.012748,-2.616639,0.046672,0.454498,7.951059,1.521926,-9.268153,2.815287,1.288095,4.195621,-5.999660,-4.892208,4.718127,1.291825,8.873987,2.581251,8.392222,-4.270910,-9.311272,2.919641,-8.252370,6.139114,-3.658785,-2.163856,1.726926,2.527365,-2.992809,-8.840834,-0.657672,-6.220982,7.947931,3.883430,3.016217,-9.890192,-4.906858,-4.199170,-3.656135,4.466074,-0.865178,-5.505071,7.767508,3.729123,-6.566976,6.577629,9.518691,-2.818132,2.718353,-5.059222,2.476472,-5.271567,-6.108754,-0.624491,4.886661,7.715359,-3.521540,3.108442,-7.049057,1.109890,-4.864185,4.558316,-1.242359,7.729367,-0.853344,5.807541,-7.658522,7.164962,-5.408758,1.916337,9.008338,1.927506,-9.356293,8.397657,-0.328103,6.946162,3.712399,-8.106558,-5.056723,-8.118451,0.080739,-1.101258,2.287270,4.787543,-4.966446,0.019294,7.910237,9.687782,-4.371171,-6.369981,6.461177,0.505541,0.038913,4.292742,6.212176,-9.921673,4.061418,-4.759264,-8.690476,-0.718294,-8.210662,-4.033215,-0.767929,-2.646131,-9.788755,0.446566,-5.527891,-9.538249,1.098726,-9.951950,6.043178], dtype = "float32")#candidate|5108|(1120,)|const|float32
call_5106 = relay.TupleGetItem(func_3016_call(relay.reshape(var_5107.astype('float64'), [12, 12, 13]), relay.reshape(const_5108.astype('float32'), [1120,]), ), 3)
call_5109 = relay.TupleGetItem(func_3020_call(relay.reshape(var_5107.astype('float64'), [12, 12, 13]), relay.reshape(const_5108.astype('float32'), [1120,]), ), 3)
output = relay.Tuple([call_5095,call_5106,var_5107,const_5108,])
output2 = relay.Tuple([call_5096,call_5109,var_5107,const_5108,])
func_5112 = relay.Function([var_5107,], output)
mod['func_5112'] = func_5112
mod = relay.transform.InferType()(mod)
mutated_mod['func_5112'] = func_5112
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5113 = relay.var("var_5113", dtype = "float64", shape = (12, 156))#candidate|5113|(12, 156)|var|float64
func_5112_call = mutated_mod.get_global_var('func_5112')
call_5114 = func_5112_call(var_5113)
output = call_5114
func_5115 = relay.Function([var_5113], output)
mutated_mod['func_5115'] = func_5115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4678_call = mod.get_global_var('func_4678')
func_4680_call = mutated_mod.get_global_var('func_4680')
call_5141 = func_4678_call()
call_5142 = func_4678_call()
func_2563_call = mod.get_global_var('func_2563')
func_2565_call = mutated_mod.get_global_var('func_2565')
call_5169 = func_2563_call()
call_5170 = func_2563_call()
output = relay.Tuple([call_5141,call_5169,])
output2 = relay.Tuple([call_5142,call_5170,])
func_5182 = relay.Function([], output)
mod['func_5182'] = func_5182
mod = relay.transform.InferType()(mod)
output = func_5182()
func_5183 = relay.Function([], output)
mutated_mod['func_5183'] = func_5183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5208 = relay.var("var_5208", dtype = "float64", shape = (12, 13, 1))#candidate|5208|(12, 13, 1)|var|float64
uop_5209 = relay.exp(var_5208.astype('float64')) # shape=(12, 13, 1)
bop_5212 = relay.maximum(var_5208.astype('int32'), relay.reshape(uop_5209.astype('int32'), relay.shape_of(var_5208))) # shape=(12, 13, 1)
func_4031_call = mod.get_global_var('func_4031')
func_4034_call = mutated_mod.get_global_var('func_4034')
const_5225 = relay.const([[8,6,-3,-3],[9,9,4,-10],[2,9,5,6],[7,-2,8,7],[1,3,8,-6],[-7,5,-5,-8],[-4,8,2,9],[7,-6,-7,-2],[8,-2,-9,-5],[1,8,4,-4],[4,8,-5,-5],[-8,9,6,4],[7,10,2,4],[3,1,9,-6],[7,-9,2,-7],[7,-8,9,6],[-7,4,2,-5],[10,-2,1,-2],[-3,3,6,-8],[7,-7,9,4],[10,7,4,6],[-8,-2,8,7],[4,-7,-1,-5],[-2,-7,-8,6],[9,-9,-5,-8],[5,10,-2,5],[7,8,8,8],[-6,10,8,-1]], dtype = "int16")#candidate|5225|(28, 4)|const|int16
call_5224 = relay.TupleGetItem(func_4031_call(relay.reshape(const_5225.astype('int16'), [56, 2])), 0)
call_5226 = relay.TupleGetItem(func_4034_call(relay.reshape(const_5225.astype('int16'), [56, 2])), 0)
func_3949_call = mod.get_global_var('func_3949')
func_3951_call = mutated_mod.get_global_var('func_3951')
call_5231 = func_3949_call()
call_5232 = func_3949_call()
uop_5234 = relay.log2(uop_5209.astype('float32')) # shape=(12, 13, 1)
uop_5246 = relay.acos(uop_5234.astype('float32')) # shape=(12, 13, 1)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_5266 = relay.TupleGetItem(func_3658_call(), 0)
call_5267 = relay.TupleGetItem(func_3659_call(), 0)
uop_5269 = relay.cosh(uop_5246.astype('float32')) # shape=(12, 13, 1)
bop_5272 = relay.floor_divide(uop_5269.astype('float32'), relay.reshape(bop_5212.astype('float32'), relay.shape_of(uop_5269))) # shape=(12, 13, 1)
bop_5279 = relay.divide(uop_5246.astype('float64'), relay.reshape(bop_5212.astype('float64'), relay.shape_of(uop_5246))) # shape=(12, 13, 1)
func_3321_call = mod.get_global_var('func_3321')
func_3322_call = mutated_mod.get_global_var('func_3322')
call_5286 = relay.TupleGetItem(func_3321_call(), 0)
call_5287 = relay.TupleGetItem(func_3322_call(), 0)
func_3016_call = mod.get_global_var('func_3016')
func_3020_call = mutated_mod.get_global_var('func_3020')
const_5298 = relay.const([1.225241,-0.493263,-8.584821,8.618588,-2.939229,-2.331828,8.681398,-2.068148,0.359230,2.203876,-3.708085,-1.394861,-5.205230,5.758336,-8.278947,-0.944839,-3.605962,3.653467,-1.663121,-2.979770,8.572053,5.787079,-6.539785,7.132216,-9.792694,-5.039098,0.913288,-3.332818,-2.704948,0.241226,-0.783863,-8.112639,7.088458,1.936380,-7.789573,-7.837977,3.814219,5.547239,7.661905,0.978393,8.963934,-0.693057,-7.841317,-9.583910,3.153154,2.009446,7.709157,-8.687980,5.505988,5.708001,-1.844079,3.201034,7.416499,9.243423,-3.658874,-2.228327,8.090449,-1.443510,5.839350,-8.266144,9.762102,-0.337345,5.164183,0.448567,4.946870,-7.474995,-6.848159,8.815332,-5.973454,5.512774,1.363120,-0.385823,-1.749268,-5.507741,-8.664482,-3.414928,-9.388222,-9.309701,-9.405779,5.324937,-8.001930,3.900811,6.079893,-8.696717,6.344257,-3.128494,7.827433,0.778214,-2.976391,6.057409,-6.138222,-5.324696,3.572712,-4.709046,-3.199696,5.999895,-5.179971,2.623573,0.016197,2.714412,4.901613,2.781499,2.176691,9.863406,-5.055099,-2.113893,-0.033708,1.209748,9.716982,1.653730,3.335076,9.135761,8.161972,-6.326372,-3.613873,-2.329529,7.356591,6.178041,-7.461864,-4.391023,1.310907,-1.382696,0.854100,1.272766,5.306832,-9.246792,9.068021,-2.735744,4.126448,7.282507,2.945398,2.718118,9.741651,8.035739,6.884499,-8.202423,-6.484827,1.417241,6.188808,-7.553199,9.988488,1.498329,-7.699632,-9.771160,-3.225472,-9.814435,0.536593,5.376216,-5.201552,-2.153918,-2.834086,-9.523086,0.842269,8.989334,5.678138,-4.253455,-4.499705,6.481944,3.041321,-2.526214,-0.459076,6.427013,1.808163,-0.416918,8.460821,2.029859,-3.194003,-4.454031,2.383398,-7.763079,-0.468807,-0.829093,-3.081152,9.412200,5.469407,-6.059923,-8.891659,2.355295,-1.484961,6.113206,-7.101494,0.215431,1.123288,4.680317,7.960052,2.628026,-2.266780,0.174557,0.825265,-9.733926,-2.190915,-3.742935,9.423437,-3.942736,-8.978452,8.389096,4.017658,7.531822,1.966665,8.559323,-6.691923,-3.832268,-1.757050,2.150935,-8.508131,-8.058887,-5.938229,-1.578300,-7.437655,7.199603,-6.391188,-3.650891,-6.786262,-5.320352,-5.122863,-6.962421,-3.275224,3.600400,-2.204949,9.059699,-7.664845,-9.729805,-7.368521,-4.881851,8.347934,2.119649,2.878729,9.680732,4.785678,1.651004,-5.369381,-2.248696,-1.501528,3.530114,3.934816,2.598513,6.937405,-4.319164,-5.863497,-7.353374,5.243521,-3.805030,4.568425,-2.032912,7.705933,-0.502220,6.918450,6.753439,-9.903790,1.795563,3.233566,-2.218187,-6.534171,-4.240085,3.680189,-3.524957,5.712559,2.374200,8.669374,6.087817,3.853545,-2.112407,1.554163,-6.316752,-2.305213,2.187783,3.749597,-9.983806,-5.196105,-9.635960,-5.118000,-2.525307,2.517868,-7.966053,6.418110,-9.168899,-2.226520,-1.448390,-0.879032,1.402079,-5.511736,-9.644505,-7.837744,2.716581,9.087022,3.075595,-7.793696,9.846952,5.790548,-3.060740,-2.582294,-5.216177,9.959678,-1.179819,1.664907,0.409091,-1.476518,5.930527,-5.143971,3.352474,8.909042,1.277996,7.523480,9.955435,8.568597,9.576493,-8.158049,-3.827636,-3.164820,1.029591,-6.878877,7.212500,-7.426273,-1.827322,7.952576,0.970389,-5.058831,4.577934,2.311545,-1.217763,-4.099316,-2.333465,5.004895,7.465530,0.193721,-7.321844,9.331756,-3.536896,-5.587690,-1.393402,0.692671,-3.816486,1.512441,8.492256,2.827948,0.956255,5.416172,-1.658757,-7.028437,4.627804,2.469083,4.866513,2.952261,-8.290011,-7.667397,-5.920056,-1.643661,0.378894,-0.960530,7.269215,0.406216,9.517481,-6.374626,7.356764,4.869454,2.497542,-4.548115,6.018742,-2.325808,-1.966755,7.505130,-2.896024,9.633385,6.123152,-5.880969,3.419999,5.676221,6.752771,3.786342,-9.402897,2.444815,3.566378,-3.991804,5.490373,-1.733130,-4.094093,-1.234620,-2.929276,-1.269397,1.794558,-8.392677,-2.432484,-4.193457,1.480400,9.046683,-0.190955,2.271310,-7.141796,0.451424,5.950352,0.856537,1.613673,-5.286462,-1.325677,8.102524,-8.276713,-7.384443,3.004204,-7.944188,-3.807774,-7.514364,-5.964239,-0.045707,6.238009,-6.902731,-0.176681,-5.572635,-1.964932,2.417710,-7.856344,-2.627698,-1.372461,2.628942,1.222173,-3.907377,6.660395,4.757516,5.616764,5.236499,5.768187,7.314102,8.721148,0.201692,-7.009111,-6.480439,9.944824,2.984387,-9.879277,7.122640,-0.167121,3.588406,-1.698839,0.806482,0.113794,-9.542682,4.406200,-4.506328,-0.080603,-5.851021,-6.908287,4.143863,6.538124,8.893614,8.923095,-5.301382,-0.349918,-8.953189,-8.264829,-1.091614,-0.022903,-4.558022,-9.078382,-7.219499,-4.881710,-3.712360,-1.633299,-5.912911,-7.085962,3.310822,-1.052097,-0.164645,9.778162,0.091607,-3.468360,5.881394,-2.960433,-3.292580,-8.777551,1.001865,8.670782,1.177347,0.329002,-1.233947,9.012628,-8.732998,3.215560,0.155937,1.721801,-7.545915,-2.517367,-2.214105,1.951611,-9.084038,0.518776,-5.772065,3.419435,-8.255084,8.924725,-7.361068,-5.076675,-2.506106,9.998568,3.939252,-2.243588,7.811069,7.264482,2.133366,-9.122045,7.384073,-2.177001,8.724840,9.557500,-3.433379,-3.335999,-1.309748,4.606786,-7.464222,-6.575266,4.222196,0.681378,4.911654,-6.268332,4.674634,-5.930596,7.151190,-8.832063,-9.979872,-1.713050,-7.636770,-1.022854,-6.097767,7.655809,-2.680123,-6.083089,-6.930264,-9.249289,-2.040350,-3.201960,-3.815315,-2.419189,3.911986,-8.557066,8.031761,0.194576,4.609128,-5.519022,9.485903,-0.527133,2.106760,-3.471415,-3.944018,7.099845,7.953592,-3.055066,4.288728,9.649866,1.238393,-1.013889,7.050836,-4.684906,2.882024,-7.467488,-0.036358,2.609759,5.980711,1.790592,-1.920728,-1.655294,-8.526163,5.653116,-7.416978,9.007038,-0.558601,-1.721937,9.723819,-5.942285,0.611062,7.109201,3.332366,2.652811,-8.203453,-1.647507,0.443188,6.626405,5.203509,1.724025,4.219682,9.251331,2.908564,1.644051,-4.539580,8.873302,-1.018198,3.668484,9.048639,-1.753445,6.207696,7.452696,-6.200909,5.759606,5.481441,2.457195,7.900409,5.361229,-7.226631,6.436353,-0.424681,-5.971229,4.240470,6.266629,-0.095715,2.325381,-7.766765,-9.859304,3.737251,8.427378,0.736223,5.052792,3.505236,2.520652,-6.190091,8.809886,5.553937,3.532372,1.708971,-8.515386,4.119990,-4.647184,-4.562474,-4.873420,-7.085178,-8.716610,-2.004186,-8.117261,-6.071929,0.085324,-0.589337,-0.667837,-4.174960,-4.348184,-5.801918,5.577953,-5.364478,7.005792,-1.610101,-1.202683,4.864532,-7.760383,3.681603,-6.149082,-5.978895,-6.936781,-9.976248,2.637626,-2.558172,-6.668878,-8.744677,-7.058596,1.649402,3.833789,9.232348,-3.812387,-8.008572,-2.882201,7.625010,-7.931818,-6.841022,-3.359524,8.095494,2.075241,-2.040421,-9.556308,1.406214,4.902762,-5.245539,3.583760,8.990689,1.758717,-4.644475,2.602753,-9.797880,-5.530629,-0.979588,3.257702,-9.477157,2.801304,-2.632356,4.915407,5.697328,0.219647,1.147253,9.267325,-8.983857,-7.015781,5.933736,9.371636,3.563729,-0.603919,-2.846671,4.536199,0.029560,5.347254,-4.476587,0.639784,-7.305138,-7.149383,6.837817,-7.180123,-7.328276,4.128351,-1.410841,8.684675,-0.392528,0.370595,4.767253,7.834707,5.987840,-4.484951,0.331782,6.965558,-8.804819,8.789425,-3.672805,-5.877481,-8.675637,-2.881511,-5.089933,9.694225,8.094589,7.624009,3.079775,6.709626,-3.683866,6.805322,-0.664914,0.199439,-7.211977,-1.278646,-4.349959,1.287371,-5.279258,4.153444,9.963393,1.044723,4.135512,2.219264,7.211513,6.192569,-9.517012,6.291513,-3.084549,-6.014732,8.880614,4.332946,2.280032,0.728490,-6.425895,-8.532819,9.301634,-0.855995,-4.584623,8.514896,5.460683,3.282764,3.938946,-5.506855,2.305583,-5.191000,8.538100,-8.318132,-9.841899,7.087461,-9.569309,-9.661462,5.945337,-6.664192,-8.370865,-0.546468,8.177707,-9.705956,-3.721388,-4.874327,0.117938,5.825830,-5.262641,4.621284,4.054537,5.265951,-5.020584,1.654776,-5.086770,6.393677,0.408874,-5.823657,-6.709830,-8.842923,0.749213,-3.768684,4.863383,-6.853243,-4.177006,2.311081,-9.858112,4.616771,-3.669148,-2.535291,2.187864,-3.876555,3.844431,9.849848,6.007315,2.452141,-3.089609,0.159777,4.265711,1.825230,5.644006,8.819052,4.248946,-6.934384,0.740366,-3.764662,-2.503760,4.441244,-7.442846,2.876088,-5.536215,-3.169876,7.976842,8.197649,1.344359,-0.093873,3.221965,-0.955688,-2.035400,-7.600937,-6.053890,-4.398980,0.309764,-0.696223,-8.580190,9.227030,-3.398080,9.457477,1.984979,-7.868368,9.986598,1.871543,-9.990003,9.903250,-0.362599,-5.247299,3.753514,-6.721337,3.287644,-1.836835,-6.981326,-2.935391,3.895542,-1.171934,-4.187478,-2.041714,9.089824,-4.962309,1.090037,9.016463,-3.857511,-1.917674,-5.585202,-2.403875,-6.953907,-9.001808,8.172122,7.048785,-5.507582,0.269633,9.109908,8.826984,-7.264786,-0.739101,1.872491,1.370754,-7.686555,8.923192,-2.955319,-3.319962,-3.781423,-4.499029,0.592388,6.688340,4.795083,2.746907,-2.807073,-0.859527,-8.457087,-9.715177,-3.002707,1.919482,-2.730075,3.212778,4.392284,9.103586,-9.785478,2.608233,7.866917,-9.725465,4.313591,8.221768,-3.672021,-2.045422,5.590859,-2.157482,4.481415,-8.138148,2.891601,-3.469639,9.601860,-0.097100,3.692145,7.009023,-1.682453,-9.975643,7.785651,1.384151,3.085752,0.385942,1.303941,-7.447955,0.070134,-3.681085,-7.317267,3.568458,-8.855717,-9.901383,2.101482,-9.688011,4.049714,-9.726807,9.944276,-5.385606,6.811731,0.602675,5.717906,8.393354,-8.135363,7.431748,6.090320,-3.674057,8.239191,5.167551,-8.120204,-1.275257,-1.227288,1.017987,4.229310,-1.832459,5.996942,1.049069,2.376630,9.575961,-9.198757,3.331794,-1.794094,1.946302,-6.060539,-7.616130,-3.281371,-6.590941,6.457065,-5.014875,9.379918,-0.682963,-8.476608,0.535965,-8.410645,4.483995,-1.464272,-7.853517,-7.787726,-2.156673,7.005693,-4.831048,3.912713,-7.234355,-3.477123,0.356924,-4.004821,-7.194259,8.707896,-4.929767,-2.133809,-3.691403,-1.618842,8.843316,-5.274940,8.937339,8.906878,-6.840272,-8.719994,3.928742,4.209407,-7.292462,-1.973424,6.584776,0.230219,-0.745639,7.577914,-1.984008,3.013745,6.789328,3.338007,0.115884,-9.231495,9.718752,0.898886,1.593812,-5.837618,-9.258998,-2.602028,-1.002403,7.693275,3.344816,-9.732186,3.075360,-3.086766,2.365839,1.640010,-7.219911,-0.064529,0.822621,-0.841558,0.632660,-4.120194,-6.185815,0.597822,-2.726101,3.040843,9.135300,0.679983,0.571016,6.856423,8.744505,-7.743166,-3.214308,-6.794428,-9.132439,-3.878202,0.440907,1.638586,8.074075,-7.757931,3.284897,-6.382496,7.579499,8.906659,8.056130,-8.381903,-2.619005,-6.572492,9.055774,-7.481639,9.806433,6.621237,0.180100,-5.230769,8.372487,9.971879,-7.575175,-5.338161,9.049112,6.394601,-7.051383,-7.756361,-9.553271,-8.028022,6.427692,6.096513,8.264589,1.205882,4.580149,-1.354040,-0.431584,8.757074,2.357962,8.513060,-1.630091,7.424877,-2.022797,4.098644,-2.634086,-2.596057,-5.923655,-4.144206,4.439018,-5.435917,-4.640148,5.973086,-8.397346,4.660042,-3.027650,1.859315,9.352193,-8.452373,-3.655488,-3.875423,7.333594,-0.632612,-7.042082,2.086103,-9.825325,-3.529461,-8.071500,5.396415,0.450059,-1.980892,3.856373,-8.554288,-9.487977,-8.457841,-7.151778,1.129435,-0.212145,1.843458,7.224313,-4.545933,-1.938676,-1.476243,-4.509724,-6.811674,-7.127969,-6.125426,-4.751226,2.194857,3.022840,8.592927,-9.206558,2.278922,-4.361279,-9.545844,6.858312,8.600267,4.861452,5.478139,1.225687,4.201868,-4.857517,-5.835909,-6.186919,-1.664524,5.822296,0.194760,-0.979364,-9.630558,0.564443,-8.975807,8.455456,0.860734,0.985927,1.218918,-0.250146,0.828879,-7.509803,1.500274,6.185727,-9.234655,7.497469,-9.464933,-7.063075,-4.843041,4.153807,-3.228248,-9.098263,-0.291384,-1.909494,-9.642266,-0.507218,-1.670608,9.655885,-3.241694,5.449793,-5.070383,-1.109568,-5.324423,9.799495,3.014152,-8.275759,-2.714654,7.278785,-3.650688,-7.435675,-2.830514,-9.093436,8.088064,-7.173891,-6.892871,-6.750367,-6.444580,-0.605458,7.520143,0.966170,-4.711756,-3.130789,-5.424736,0.710906,-4.940991,2.176357,7.728047,6.255136,-3.836658,-3.745681,8.257541,3.962399,5.639555,-1.632091,4.130770,1.653731,9.642271,-7.341707,2.455553,9.447156,7.664044,-9.713858,-4.132171,2.583637,7.749897,-1.140149,-5.758937,-0.381707,8.349436,-1.206337,-7.031422,-6.762381,-8.455334,0.133768,5.312273,2.321551,-8.373092,2.447088,5.906200,1.259621,-2.357625,4.095530,0.614830,-9.030565,-0.514776,8.125034,4.753970,9.658841,3.448481,6.345505,6.411264,0.899114,5.395790,-4.275623,-1.664953,5.512013,7.382803,2.764289,8.888592,2.586361,9.697105,-4.003623,9.694336,-0.188871,1.897506,1.383017,-5.813369,-2.069834,7.663003,-0.246768,-0.294397,-6.515090,-7.831527,-2.649720,5.162390,9.545514,-3.721139,7.771654,8.675398,-4.887307,-8.760291,9.448075,2.492041,-4.842763,8.086255,-3.874136,-4.114269,1.864140,-3.372593,-5.145319,-6.696532,-4.214375,-5.425355,-6.709525,7.794666,-7.067646,-6.293552,-1.532431,4.856800,-9.012949,9.481239,-1.709564,9.871759,-6.039189,3.486789,9.185823,3.457161,-4.727563,-7.210306,1.735940,-2.683615,7.227629,-3.995471,-7.270621,-1.455292,-5.788712,7.234891,7.936985,-5.817807,-1.920485,6.529630,3.675744,-9.443220,-9.622162,-4.355571,-2.346976,6.692384,1.485867,-9.156421,1.594451,-1.137076,-6.316085,-4.649412,-4.304226,-7.103419,-3.181962,5.957648,-2.665328,3.319396,-0.736953,-1.530912,-7.227718,-6.634105,3.385356,1.057016,6.159930,-9.691350,2.200362,3.520970,-5.684716,9.480447,6.250438,-8.141686,-0.004928,-2.594739,-2.811382,2.399620,-9.938776,-4.838346,-8.507892,-0.072355,-0.330747,-4.389216,3.027572,6.042306,0.232330,-9.474079,7.982704,-1.186101,0.373793,-8.605744,7.609597,-0.118100,0.728584,-5.357841,8.501092,9.311520,1.695093,3.327645,-7.763384,-8.315609,4.941426,-0.875668,-6.406007,-0.294980,-7.780023,1.029600,2.357854,7.868831,-9.955896,-4.432034,9.266301,8.373755,2.436136,4.483697,-5.337685,6.357308,0.464128,-8.961952,-9.895213,8.559273,-4.836655,2.333469,-8.231892,-2.340656,-2.680014,-5.681014,6.529795,-1.171206,4.930629,-7.887867,-3.283409,7.094283,1.279167,4.478718,3.239747,-5.358085,7.827280,8.031554,4.424015,-7.026772,-9.973166,0.476907,2.337711,0.269669,1.223319,-9.201555,8.907582,9.842740,0.995885,0.594885,2.334930,-1.199315,1.390833,9.772046,-5.745452,-5.241337,-4.836474,-5.033528,9.045084,-0.247326,6.615149,-6.301941,5.891083,7.118624,-6.274424,7.976339,0.833870,-2.305112,3.614044,2.118991,-5.265709,-4.940091,1.296025,-3.939061,-0.664524,9.328774,5.330013,5.525281,-4.357044,5.150395,2.346106,-1.189365,2.903070,9.290987,-8.471394,-2.906658,-0.817252,-4.550495,4.539725,-7.881198,2.252965,3.047902,-0.651876,5.903801,8.026333,2.415117,4.016513,5.784998,3.407573,8.117028,4.625896,-3.127431,8.837014,8.713633,1.080855,-7.046195,-4.232663,3.731191,-5.780072,0.688069,4.249392,-9.016555,-6.581652,2.973289,-1.629430,-3.923138,-0.024368,1.651991,4.352349,-5.642386,8.366808,5.287393,-4.515281,-3.342569,-1.212412,9.222972,-2.161027,-1.347362,1.271752,-9.512756,2.575847,-3.617020,8.238942,2.119124,-6.929553,8.829656,-5.997972,9.067982,7.816558,-4.250902,5.078457,-2.813473,3.063274,6.542107,-4.802187,8.151520,-1.382955,-6.757675,9.689876,-8.577975,6.128836,9.769957,-5.147251,0.095706,-7.229334,5.109126,3.067880,-1.261694,8.795257,4.484218,3.545230,8.373340,-5.746995,-5.828385,2.021769,-9.746864,-3.230312,-8.126459,-2.221078,8.960388,4.321395,1.038265,-2.513511,-0.605070,6.089803,6.809202,-2.831926,-7.684902,-6.180623,-5.800041,9.386161,2.617312,6.211310,-6.809576,3.870726,-7.975455,0.062137,6.539811,5.101962,3.745426,4.751938,-0.446920,5.380502,9.529174,1.883111,7.469992,-9.964806,-1.062257,-1.167899,4.117629,-3.046816,4.538884,1.908378,0.946575,-8.459747,5.858519,-7.082880,2.723872,-7.182590,4.902712,-6.333490,-8.228353,7.925028,-2.314591,-3.891272,7.706761,-4.667615,-6.579096,0.542847,-9.975090,-4.747134,-1.542979,5.715281,-4.990659,-7.909601,3.788753,-4.181914,3.604339,4.804557,8.992989,3.470793,-0.953212,4.173742,-0.955243,5.318496,-6.264592,-2.145787,-2.495940,-8.339388,-1.118917,-7.557852,-0.984081,3.151548,4.257118,4.440748,-0.163723,0.734385,-6.158195,7.082429,-7.430534,-4.532865,-7.171035,3.145879,-7.219352,4.035018,-2.319134,6.367572,-5.704159,-0.647955,8.573924,1.841476,-3.622611,-1.500682,3.811235,9.223757,-2.061508,2.434631,7.025572,0.991751,-5.957682,-7.418935,8.376809,7.750995,-4.299260,5.136820,-4.429335,-0.727760,1.143859,5.538142,-2.131096,-5.034515,-0.198936,-8.421025,-4.569024,-2.395009,-1.367187,8.353231,-2.781558,-6.467136,-5.761015,-0.840992,-4.423978,-2.504552,3.683712,-4.530688,-4.612439,0.964672,-0.205878,-9.180372,1.712680,-6.421501,0.942812,9.172280,-8.731067,8.863724,7.210796,7.144785,-4.964320,-3.709036,-4.243863,2.150369,6.520998,3.011056,-8.124818,3.951649,-9.309250,-7.657929,7.801580,0.164040,4.894982,7.452193,-7.814082,-6.530547,-8.400613,6.319569,1.950329,6.318686,4.618009,9.665608,0.654170,5.751931,-0.234715,1.360655,-3.268496,2.478452,0.200953,-8.019883,-0.839421,-4.123078,6.092666,7.484125,3.637779,-0.994283,4.938134,-5.827763,-3.926931,6.451995,7.779419,-9.443442,4.394034,0.464371,-3.138407,7.290208,-9.226247,2.112047,5.405907,1.173557,-7.103188,6.756093,3.646220,-4.220823,1.118634,-5.373682,-0.148774,-6.968842,-6.205420,9.802555,-5.760243,7.504158,-0.699437,-4.091057,1.374807,-0.243114,5.800503,-2.776300,-6.827279,-7.516839,-7.782070,-1.551340,-4.721539,-8.097666,2.343283,6.373721,-2.281461,-3.337789,-1.272192,-7.229056,-1.644890,3.198070,-1.390166,-0.449382,-2.154712,8.094042,8.383935,3.342950,-4.489425,2.271676,6.196465,0.907444,3.065221,6.130237,6.529261,-4.357232,-6.996308,4.899762,3.593429,7.543627,1.202111,-5.903665,0.069634,-5.618798,9.408133,3.600825,-4.287089,0.098353,-6.968278,8.555362,-6.982304,-3.821386,4.981003,-0.243823,1.307630,-9.079561,-8.237245,-2.929955,9.927422,0.010135,-8.680993,4.995372,-6.565732,-1.759046,1.343398,-5.501083,1.148774,7.047597,-6.990548,0.945430,6.298177,-1.783792,-6.390341,6.682025,5.826861,1.921118,5.654875,8.031622,9.685563,8.946378,1.091250,-9.446495,-1.143050,-1.068918,7.488499,-0.932618,1.257293,-2.125556,8.431427,1.097934,1.884167,-3.342174,-6.790315,-3.794694,-7.758949,-0.368277,4.741539,-9.085679,-0.047527,-0.178503,1.084148,9.341327,-2.412687,-0.162383,1.292334,-4.974766,-3.994845,-6.988619,-6.808514,-9.475353,-2.113287,3.288155,-0.201326,1.051237,-4.816035,-0.577446,-6.416744,-9.615749,-9.945507,1.900473,9.066779,-2.332717,-8.681765,-1.275644,0.879203,9.368232,3.581536,7.723040,8.905617,4.744395,-4.601880,7.223204,9.217324,7.347467], dtype = "float64")#candidate|5298|(1872,)|const|float64
var_5299 = relay.var("var_5299", dtype = "float32", shape = (1120,))#candidate|5299|(1120,)|var|float32
call_5297 = relay.TupleGetItem(func_3016_call(relay.reshape(const_5298.astype('float64'), [12, 12, 13]), relay.reshape(var_5299.astype('float32'), [1120,]), ), 1)
call_5300 = relay.TupleGetItem(func_3020_call(relay.reshape(const_5298.astype('float64'), [12, 12, 13]), relay.reshape(var_5299.astype('float32'), [1120,]), ), 1)
func_3552_call = mod.get_global_var('func_3552')
func_3554_call = mutated_mod.get_global_var('func_3554')
call_5309 = relay.TupleGetItem(func_3552_call(), 0)
call_5310 = relay.TupleGetItem(func_3554_call(), 0)
func_1972_call = mod.get_global_var('func_1972')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_5321 = func_1972_call()
call_5322 = func_1972_call()
bop_5329 = relay.power(uop_5246.astype('float64'), relay.reshape(bop_5279.astype('float64'), relay.shape_of(uop_5246))) # shape=(12, 13, 1)
bop_5333 = relay.multiply(uop_5269.astype('int32'), relay.reshape(bop_5329.astype('int32'), relay.shape_of(uop_5269))) # shape=(12, 13, 1)
output = relay.Tuple([call_5224,const_5225,call_5231,call_5266,bop_5272,call_5286,call_5297,const_5298,var_5299,call_5309,call_5321,bop_5333,])
output2 = relay.Tuple([call_5226,const_5225,call_5232,call_5267,bop_5272,call_5287,call_5300,const_5298,var_5299,call_5310,call_5322,bop_5333,])
func_5337 = relay.Function([var_5208,var_5299,], output)
mod['func_5337'] = func_5337
mod = relay.transform.InferType()(mod)
mutated_mod['func_5337'] = func_5337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5337_call = mutated_mod.get_global_var('func_5337')
var_5339 = relay.var("var_5339", dtype = "float64", shape = (12, 13, 1))#candidate|5339|(12, 13, 1)|var|float64
var_5340 = relay.var("var_5340", dtype = "float32", shape = (1120,))#candidate|5340|(1120,)|var|float32
call_5338 = func_5337_call(var_5339,var_5340,)
output = call_5338
func_5341 = relay.Function([var_5339,var_5340,], output)
mutated_mod['func_5341'] = func_5341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4739_call = mod.get_global_var('func_4739')
func_4740_call = mutated_mod.get_global_var('func_4740')
call_5356 = relay.TupleGetItem(func_4739_call(), 0)
call_5357 = relay.TupleGetItem(func_4740_call(), 0)
func_4215_call = mod.get_global_var('func_4215')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_5371 = relay.TupleGetItem(func_4215_call(relay.reshape(call_5356.astype('float32'), [4, 2, 13])), 0)
call_5372 = relay.TupleGetItem(func_4217_call(relay.reshape(call_5356.astype('float32'), [4, 2, 13])), 0)
func_4984_call = mod.get_global_var('func_4984')
func_4987_call = mutated_mod.get_global_var('func_4987')
const_5377 = relay.const([[-2.455217,-5.670738,-0.208634,-3.216250,8.836922,-2.194797,7.681945,-2.161857,6.091939,-2.529278,-3.727343,8.647944,-2.382023,-2.757571,-6.311772,6.609746,-1.179275,-0.053947,9.649571,3.914066,-6.788082,0.046282,3.679918,4.467839,-9.512280,-0.097513,-1.161447,-4.388775,5.536170,-7.369467,5.722088,-4.690188,0.439473,9.988185,5.285402,1.265700,-3.961598,-0.550447,-9.791629,-4.499322,8.563748,5.543836,9.982267,-6.191449,0.267180,-3.810491,-3.068745,-2.141003,8.384558,8.934155,-9.990470,5.242944,9.754549,-9.800183,0.001690,8.739420,-8.605846,-9.849033,-8.284382,-5.340094,3.207108,2.456249,5.978205,2.781077,0.908304,3.608598,5.265583,-3.434865,-0.694684,-1.884141,9.173963,5.936523,3.407858,3.010752,-6.984212,4.484673,-5.598053,-1.539166,-0.637647,2.202712,-8.319638,-6.174219,1.659673,-9.980929,1.971945,3.387956,-1.047123,-4.135498,-3.676670,-6.205826,5.374923,3.345401,-4.689401,6.497453,0.059722,-8.841821,-5.502524,-2.645717,2.458687,5.695282,8.866792,5.032532,0.672191,7.973711,-5.181588,7.679137,0.208103,8.154359,-4.535662,9.379856,5.223625,2.949862,-0.704811,5.392794,-1.862456,-9.881095,7.310024,-3.974476,-5.630810,3.201270,3.620385,-4.706596,7.796803,-8.359047,8.999423,1.349303,8.393327,-3.168980,-9.036893,3.325505,-0.945023,3.910512,7.525306,2.420166,7.815516,-8.766092,8.210794,-4.150828,3.950745,-4.484968,-2.312210,3.145772,-9.282767,6.411418,-2.558607,6.312235,-7.793714,-8.473142,-2.252354,6.806714,-9.674079,-3.317336,8.205120,-2.200515,7.457426,3.998278,7.160052,1.371116,-1.322787,-0.653743,2.887168,8.500381,-7.955117,-9.957639,7.806370,6.187941,4.226958,7.374753,-9.720332,6.766172,-9.116836,4.196712,-8.225352,3.443502,7.399516,5.745179,-3.209480,-2.818441,-9.032162,6.158667],[5.573459,-2.501988,8.543213,7.377671,1.582912,8.430749,7.681463,5.423576,-2.220009,-0.567905,2.540809,-0.551502,-0.641849,-0.740991,0.039647,7.284856,-4.456766,-2.713453,7.204635,8.894884,-2.937907,6.659511,8.883795,4.807200,9.319809,9.735472,5.669519,-2.629672,1.696007,0.446599,8.639794,9.023890,-6.797199,4.173458,8.753474,-1.669694,1.850249,8.996956,1.290335,-8.234491,-8.174722,8.323573,-0.079778,9.038055,-7.533249,-3.964007,8.225559,-5.785211,4.790291,-7.640557,-0.018803,9.941270,-4.414121,4.335101,0.667100,-8.487953,6.027225,-3.272942,-9.153699,1.253334,-7.803683,-0.454812,4.525796,8.018084,-6.839166,3.041050,-4.461032,-7.116427,1.863781,-1.867660,-8.423967,-4.111450,-0.121612,9.260649,1.043433,-7.167934,-0.843432,7.868277,5.128401,3.788931,-3.300155,-7.030926,1.783201,3.341572,-3.575054,7.399801,4.989474,0.024824,-1.154357,-5.006055,2.959389,4.597753,1.340318,-1.963438,2.672662,-8.552186,-4.430846,2.567036,5.792612,0.410419,-5.424269,-3.281914,-9.746981,-4.555855,-7.992792,-6.885211,2.732643,-9.966610,6.550372,5.513289,-6.691488,-2.894598,-9.365960,-6.943200,8.193714,-2.386926,-6.976760,3.704539,-2.789589,-4.364833,-0.069781,-5.282042,-8.963085,-4.250285,5.151042,4.848013,9.877297,5.582201,6.484589,6.989926,9.351444,-9.639192,0.021479,-5.977752,8.452595,-3.542427,-6.388150,1.904189,3.998827,-0.529358,4.783765,-2.165811,6.778965,8.677939,7.476209,1.564178,-8.279935,3.043563,5.650115,9.335195,-5.904083,-1.542460,-3.981636,1.235417,9.278676,4.908520,8.079522,8.906188,8.434306,4.565017,-4.313074,7.970448,0.882158,-2.434356,-4.786966,6.150520,9.523324,2.285950,-8.154183,-7.600530,-2.327498,-7.066134,1.669482,3.988564,-8.379255,-0.607282,6.091223,1.538234,-5.762952,-1.996738],[6.312368,3.010082,7.935671,5.196655,9.553019,-7.382323,6.381983,-1.679186,-7.007266,2.329807,-5.018319,4.942486,6.878559,-2.406829,-6.802808,-1.179190,4.375728,0.477375,2.488690,-4.312201,-0.217297,-1.452317,8.946071,-8.477368,-5.115597,5.990678,0.241078,9.731008,3.363168,-3.716340,-0.733068,-6.972689,-8.852332,-4.984642,-9.063205,2.434644,9.195472,-7.744575,-5.320471,1.080585,-6.900427,0.782725,7.740007,-9.808379,2.925081,8.910437,0.549985,4.194758,4.498423,4.895530,-4.509280,-0.751075,9.886591,-7.219167,0.353183,-1.325600,-0.959266,-4.115071,-7.584084,2.868578,3.065989,9.824683,-3.109298,7.146286,0.055395,2.849108,4.148805,8.447516,-3.620343,-0.800913,8.001691,8.378773,-0.812168,-6.337873,-8.072845,-0.496228,-6.074963,-6.977647,-2.174510,-5.883061,0.443066,5.469918,9.401904,5.679048,3.869005,2.805739,-8.488566,-8.393455,-7.773683,-2.653931,-1.601240,8.209713,-0.005308,0.748579,0.873850,-8.727632,3.038204,2.343594,5.721494,-6.276580,-9.342213,4.274776,-1.200657,1.855974,-7.988927,5.705207,9.903430,1.559748,5.797865,-4.092703,-8.984990,7.520673,6.742339,-7.050383,3.992831,0.483022,0.525650,-2.609437,-3.409623,-0.565009,2.711389,-8.204275,-2.288438,1.424891,-5.686300,-3.272491,-9.663633,3.442967,-1.004409,-2.096203,-3.432902,3.913581,7.846727,-3.379779,-9.710961,-7.576081,-6.606761,-1.003929,2.552053,-1.319565,9.860152,-3.524649,-2.464565,7.095205,-3.592831,-9.669077,6.706150,-9.811232,-8.004352,2.087442,8.173263,-4.342339,-5.297222,0.532069,-6.080972,2.373952,-3.111533,-5.159209,2.495782,-8.651077,3.364986,2.646345,-3.279612,4.360002,-6.244402,1.263307,1.606447,8.341304,-7.983282,2.664715,0.767288,1.865803,-3.334411,-7.234314,5.378684,8.103002,-7.535871,-4.282458,-1.651522,4.877331]], dtype = "float64")#candidate|5377|(3, 180)|const|float64
call_5376 = relay.TupleGetItem(func_4984_call(relay.reshape(const_5377.astype('float64'), [540,])), 1)
call_5378 = relay.TupleGetItem(func_4987_call(relay.reshape(const_5377.astype('float64'), [540,])), 1)
func_2294_call = mod.get_global_var('func_2294')
func_2295_call = mutated_mod.get_global_var('func_2295')
call_5380 = relay.TupleGetItem(func_2294_call(), 3)
call_5381 = relay.TupleGetItem(func_2295_call(), 3)
bop_5382 = relay.not_equal(const_5377.astype('bool'), relay.reshape(call_5376.astype('bool'), relay.shape_of(const_5377))) # shape=(3, 180)
bop_5385 = relay.not_equal(const_5377.astype('bool'), relay.reshape(call_5378.astype('bool'), relay.shape_of(const_5377))) # shape=(3, 180)
bop_5393 = relay.logical_or(call_5376.astype('bool'), relay.reshape(bop_5382.astype('bool'), relay.shape_of(call_5376))) # shape=(10, 9, 6)
bop_5396 = relay.logical_or(call_5378.astype('bool'), relay.reshape(bop_5385.astype('bool'), relay.shape_of(call_5378))) # shape=(10, 9, 6)
output = relay.Tuple([call_5356,call_5371,call_5380,bop_5393,])
output2 = relay.Tuple([call_5357,call_5372,call_5381,bop_5396,])
func_5398 = relay.Function([], output)
mod['func_5398'] = func_5398
mod = relay.transform.InferType()(mod)
mutated_mod['func_5398'] = func_5398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mutated_mod.get_global_var('func_5398')
call_5399 = func_5398_call()
output = call_5399
func_5400 = relay.Function([], output)
mutated_mod['func_5400'] = func_5400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4269_call = mod.get_global_var('func_4269')
func_4270_call = mutated_mod.get_global_var('func_4270')
call_5404 = relay.TupleGetItem(func_4269_call(), 1)
call_5405 = relay.TupleGetItem(func_4270_call(), 1)
func_4269_call = mod.get_global_var('func_4269')
func_4270_call = mutated_mod.get_global_var('func_4270')
call_5412 = relay.TupleGetItem(func_4269_call(), 1)
call_5413 = relay.TupleGetItem(func_4270_call(), 1)
output = relay.Tuple([call_5404,call_5412,])
output2 = relay.Tuple([call_5405,call_5413,])
func_5414 = relay.Function([], output)
mod['func_5414'] = func_5414
mod = relay.transform.InferType()(mod)
mutated_mod['func_5414'] = func_5414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5414_call = mutated_mod.get_global_var('func_5414')
call_5415 = func_5414_call()
output = call_5415
func_5416 = relay.Function([], output)
mutated_mod['func_5416'] = func_5416
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5445 = relay.var("var_5445", dtype = "int64", shape = (8, 9, 6))#candidate|5445|(8, 9, 6)|var|int64
const_5446 = relay.const([[[-8,-8,-5,-2,-7,-4],[-5,2,-5,10,-7,8],[8,-4,-10,10,-5,-5],[-5,1,-3,-4,8,-10],[-6,-8,7,-10,-6,9],[9,4,-8,-6,9,-6],[10,3,-7,-3,-3,7],[-7,-4,3,10,3,-6],[4,3,-7,8,-8,-7]],[[1,-9,1,4,-4,2],[4,-9,-8,5,7,7],[-6,3,-5,-10,-8,-3],[-6,10,7,-9,-6,7],[5,5,-1,-6,-9,-2],[7,3,2,8,-4,10],[-10,4,9,-9,-7,-6],[9,7,3,4,-5,7],[2,-7,-4,8,8,-2]],[[-5,-3,7,1,3,6],[1,-6,-5,-4,-10,3],[-8,10,7,2,4,4],[-5,7,-5,4,3,2],[4,-4,7,-10,2,-10],[3,1,-9,7,2,-4],[9,4,-9,-9,-2,-5],[2,-3,-5,-3,5,6],[-9,-10,8,-7,-3,8]],[[-7,2,10,8,5,8],[2,-10,7,5,-10,-6],[-10,-7,6,-2,2,2],[-3,8,2,2,9,-3],[10,4,-4,10,5,-4],[3,-4,3,-1,-8,6],[4,4,-10,2,6,9],[8,3,-7,6,4,-8],[-8,3,7,6,7,-7]],[[-8,8,6,-3,7,10],[2,7,-8,2,4,-1],[-7,2,-6,3,-9,9],[6,-2,7,-10,-9,-6],[-2,2,4,-8,-2,-4],[-3,-4,6,10,5,-9],[-5,3,8,9,-8,7],[-6,-4,9,-7,-7,-3],[-4,8,-4,-2,-8,2]],[[-4,5,4,7,-8,8],[-1,8,-6,10,5,-7],[-5,-9,-6,6,-4,6],[-4,9,4,-9,-2,10],[1,6,-7,6,-4,6],[8,3,-4,1,10,10],[-7,8,10,-5,-7,7],[-6,8,8,3,6,9],[3,-8,9,-8,8,8]],[[-3,9,6,5,-6,3],[9,-1,9,6,1,-8],[3,9,-3,1,1,-7],[-3,8,-7,5,-6,4],[-8,1,6,10,-7,-3],[5,6,2,-3,-6,-4],[4,3,-8,9,-7,3],[-2,-3,1,7,7,-2],[-7,-6,5,-7,1,-1]],[[7,3,10,5,9,1],[3,-6,3,1,-4,-4],[7,10,-1,7,2,-10],[-7,6,-5,8,7,10],[3,-10,10,-7,-5,-7],[9,2,5,6,1,8],[9,5,9,5,-9,-10],[-1,8,-4,-2,-10,-6],[8,-4,4,-4,9,8]]], dtype = "int64")#candidate|5446|(8, 9, 6)|const|int64
bop_5447 = relay.not_equal(var_5445.astype('bool'), relay.reshape(const_5446.astype('bool'), relay.shape_of(var_5445))) # shape=(8, 9, 6)
uop_5453 = relay.atanh(bop_5447.astype('float32')) # shape=(8, 9, 6)
output = uop_5453
output2 = uop_5453
func_5456 = relay.Function([var_5445,], output)
mod['func_5456'] = func_5456
mod = relay.transform.InferType()(mod)
mutated_mod['func_5456'] = func_5456
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5457 = relay.var("var_5457", dtype = "int64", shape = (8, 9, 6))#candidate|5457|(8, 9, 6)|var|int64
func_5456_call = mutated_mod.get_global_var('func_5456')
call_5458 = func_5456_call(var_5457)
output = call_5458
func_5459 = relay.Function([var_5457], output)
mutated_mod['func_5459'] = func_5459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3884_call = mod.get_global_var('func_3884')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_5486 = relay.TupleGetItem(func_3884_call(), 0)
call_5487 = relay.TupleGetItem(func_3886_call(), 0)
output = relay.Tuple([call_5486,])
output2 = relay.Tuple([call_5487,])
func_5499 = relay.Function([], output)
mod['func_5499'] = func_5499
mod = relay.transform.InferType()(mod)
mutated_mod['func_5499'] = func_5499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5499_call = mutated_mod.get_global_var('func_5499')
call_5500 = func_5499_call()
output = call_5500
func_5501 = relay.Function([], output)
mutated_mod['func_5501'] = func_5501
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5519 = relay.var("var_5519", dtype = "uint32", shape = (16, 1, 14))#candidate|5519|(16, 1, 14)|var|uint32
var_5520 = relay.var("var_5520", dtype = "uint32", shape = (16, 7, 14))#candidate|5520|(16, 7, 14)|var|uint32
bop_5521 = relay.bitwise_or(var_5519.astype('uint32'), var_5520.astype('uint32')) # shape=(16, 7, 14)
var_5532 = relay.var("var_5532", dtype = "uint32", shape = (16, 7, 14))#candidate|5532|(16, 7, 14)|var|uint32
bop_5533 = relay.floor_divide(bop_5521.astype('float32'), relay.reshape(var_5532.astype('float32'), relay.shape_of(bop_5521))) # shape=(16, 7, 14)
output = relay.Tuple([bop_5533,])
output2 = relay.Tuple([bop_5533,])
func_5542 = relay.Function([var_5519,var_5520,var_5532,], output)
mod['func_5542'] = func_5542
mod = relay.transform.InferType()(mod)
mutated_mod['func_5542'] = func_5542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5542_call = mutated_mod.get_global_var('func_5542')
var_5544 = relay.var("var_5544", dtype = "uint32", shape = (16, 1, 14))#candidate|5544|(16, 1, 14)|var|uint32
var_5545 = relay.var("var_5545", dtype = "uint32", shape = (16, 7, 14))#candidate|5545|(16, 7, 14)|var|uint32
var_5546 = relay.var("var_5546", dtype = "uint32", shape = (16, 7, 14))#candidate|5546|(16, 7, 14)|var|uint32
call_5543 = func_5542_call(var_5544,var_5545,var_5546,)
output = call_5543
func_5547 = relay.Function([var_5544,var_5545,var_5546,], output)
mutated_mod['func_5547'] = func_5547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4853_call = mod.get_global_var('func_4853')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_5590 = relay.TupleGetItem(func_4853_call(), 2)
call_5591 = relay.TupleGetItem(func_4855_call(), 2)
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_5595 = relay.TupleGetItem(func_1739_call(), 0)
call_5596 = relay.TupleGetItem(func_1741_call(), 0)
uop_5597 = relay.log(call_5590.astype('float64')) # shape=(420,)
uop_5599 = relay.log(call_5591.astype('float64')) # shape=(420,)
uop_5601 = relay.sin(call_5595.astype('float64')) # shape=(1, 16, 6)
uop_5603 = relay.sin(call_5596.astype('float64')) # shape=(1, 16, 6)
func_1461_call = mod.get_global_var('func_1461')
func_1465_call = mutated_mod.get_global_var('func_1465')
const_5608 = relay.const([[-9.697148],[-8.505316],[-5.160135],[-6.846818],[-6.802225],[2.411397],[9.252482],[4.217451],[-4.688460],[0.496390],[-2.029539],[-6.403340],[-1.862101],[-5.991470],[-9.310278],[1.408966],[5.039453],[0.040368],[9.724938],[-9.770890],[4.313094],[-0.469204],[-6.630741],[1.543092],[4.471525],[-6.774076],[8.930664],[7.130033],[1.059802],[-7.455912],[-8.211233],[-3.232224],[-7.588675],[1.221914],[8.336684],[6.406478],[-5.480742],[8.776772],[-5.569287],[8.009642],[-3.700554],[1.207548],[-5.447876],[5.605613],[-0.865994],[5.044165],[9.524910],[-3.394465],[5.673921],[-4.951979],[3.444442],[5.434411],[8.035933],[-5.202882],[7.155737],[8.845036],[-4.273095],[2.912464],[-6.540729],[-7.354591],[-9.513746],[9.083018],[8.715090],[9.702012],[6.756071],[5.191118],[-9.218043],[-3.007493],[2.924442],[0.108229],[-0.704693],[-3.319583],[4.445023],[3.865936],[9.000969],[0.865340],[0.414133],[9.105598],[-8.821582],[1.034234],[-7.506333],[1.652133],[0.738928],[6.704161],[-9.497645],[2.603408],[1.321190],[8.995575],[0.817507],[-6.107054],[-3.089277],[8.692361],[-7.663751],[-9.807308],[2.820216],[9.509750],[-4.811573],[-9.145586],[-4.560573],[4.975666],[-3.948609],[-4.186782],[-4.807648],[5.005072],[-0.484551],[-0.643212],[9.084919],[4.031028],[3.327698],[-0.279364],[3.056170],[-1.918746],[-0.743817],[-9.322166],[-0.989121],[-1.028061],[-6.563614],[5.496319],[-7.810657],[6.177870],[-9.339287],[-6.811190],[7.006618],[-0.046711],[7.106555],[8.299935],[-6.209438],[1.589575],[3.469676],[8.670199],[1.064607],[-4.385282],[-8.019236],[-3.687936],[-8.110702],[-0.429613],[-3.018354],[-7.370189],[-4.020098],[-7.218027],[-7.027867],[-2.725629],[6.990584],[5.624784],[2.104654],[0.178409],[-3.227851],[0.063333],[8.843609],[-6.677222],[0.487306],[-1.086050],[3.222930],[8.074364],[9.626718],[2.690470],[2.143078],[-2.573730],[4.866975],[2.173157],[0.178333],[3.413814],[0.401779],[-7.244234],[1.552698],[-4.766104],[3.252624],[-5.811836],[-1.965473],[-3.691952],[3.749874],[3.807303],[-1.986211],[6.240165],[8.384045],[-5.788291],[5.537489],[2.012249],[-6.571855],[4.664795],[-1.392954],[-6.617622],[4.774905],[-4.796089],[-8.132473],[4.926531],[-4.867417],[0.322720],[7.075826],[7.738609],[6.240601],[3.675544],[5.809237],[2.261134],[-5.357038],[5.050478],[1.431736],[8.144038],[-5.439212],[-2.406234],[-4.423690],[-0.719325],[-3.857826],[5.318287],[3.266334],[-2.591238],[9.287811],[4.930019],[-6.853500],[-7.646514],[-2.405554],[3.801953],[-3.672707],[-6.124550],[-0.170617],[9.576329],[-1.175808],[-6.566700],[4.505236],[-0.910015],[-2.646958],[-6.968472],[-7.145355],[-3.650199],[-0.935989],[-0.217793],[2.393759],[-6.834463],[-0.915697],[-9.939547],[5.122116],[1.618455],[-5.826830],[-9.427000],[-3.783561],[-4.574384],[-4.232671],[-2.420102],[-4.553024],[3.067528],[8.734152],[8.237619],[-8.878990],[-8.107060],[-7.991536],[9.632379],[7.022402],[-0.913280],[-9.702188],[7.225374],[0.874826],[2.864292],[-4.573755],[6.616512],[4.559941],[-4.522780],[-7.042512],[1.364256],[3.492483],[5.429636],[-7.899001],[-5.465778],[2.168320],[8.621230],[5.066971],[-7.183753],[-5.539323],[-9.206892],[0.728234],[-8.745132],[4.267686],[-6.919735],[-7.173145],[-5.843040],[0.745887],[-5.820015],[-1.473697],[5.722412],[9.846465],[-7.418235],[-8.945835],[0.919723],[-8.767720],[6.201101],[0.667607],[-6.493055],[-4.996515],[-7.816769],[-3.464447],[5.844405],[-3.557370],[-6.820557],[-8.836951],[1.255544],[-9.861282],[-7.044321],[-5.007564],[-7.344962],[-6.794190],[0.328411],[7.395431],[-5.216745],[-0.425541],[-7.349365],[8.393260],[-0.123749],[8.898572],[-3.044925],[9.814254],[3.917853],[5.551912],[-5.568830],[-6.151508],[1.383209],[-2.341145],[-4.407767],[-5.353715],[-5.648014],[-1.845827],[-1.966482],[-2.953267],[0.725919],[4.287171],[0.137784],[1.869217],[-4.613457],[-5.483894],[4.713440],[0.343120],[1.567830],[4.238216],[9.615528],[-6.729682],[-8.376998],[5.730013],[-9.042815],[3.836846],[8.881125],[-6.371376],[7.326265],[-1.831973],[-2.036343],[-3.785295],[2.519123],[-9.418887],[-4.504433],[-4.046397],[-7.154283],[4.771902],[8.578138],[3.192621],[-0.772564],[-0.540924],[4.721651],[-7.184596],[-2.218801],[-7.449038],[3.486888],[-5.694267],[6.570889],[-8.061955],[-1.628498],[7.673436],[4.990967],[5.453853],[7.199050],[6.391411],[-8.259077],[-1.551785],[-5.730613],[-9.015304],[6.766191],[4.824200],[-9.802952],[8.143232],[4.080412],[6.761756],[-2.085035],[-1.949082],[2.751211],[1.139115],[-3.916776],[-3.251738],[-9.277542],[-2.421998],[8.530128],[2.186615],[3.149696],[1.901991],[1.397305],[9.961835],[-2.630600],[-7.265605],[-1.347444],[9.585661],[6.274505],[-6.605391],[1.017000],[-3.342503],[1.853608],[-8.527196],[6.790322],[4.952647],[-5.229137],[-1.094353],[4.345756],[-9.301506],[-2.177535],[1.644843],[0.578371],[-4.042022],[0.439874],[-8.607557],[4.811901],[-1.935036],[3.542419],[2.046316],[-0.095048],[-4.016165],[-8.156011],[-1.290465],[-4.817179],[9.591857],[-1.522485],[8.213482],[3.701747],[-5.646941],[9.686481],[0.911351],[1.028554],[7.574773],[-9.698775],[4.876017],[-7.939340],[-0.693954],[5.071760],[-5.099908],[2.842435],[-1.399624],[-0.373312],[-5.857659],[-6.856277],[-8.307339],[1.167098],[-1.905430],[7.824552],[-2.653430],[4.903516],[1.204405],[7.647757],[-0.122413],[-1.875167],[-5.516358],[-3.028444],[6.184044],[5.341198],[0.311167],[-7.604671],[0.851013],[6.803662],[-3.430689],[4.543001],[2.756710],[3.067876],[-0.151684],[-1.445334],[4.507821],[-5.499415],[-0.813338],[-2.270542],[6.520493],[3.000772],[0.937926],[3.170456],[-2.369500],[7.552553],[7.275910],[4.790988],[0.898865],[1.370735],[2.233450],[-8.750558],[5.615026],[-6.169518],[2.512666],[9.184732],[-9.605336],[7.704772],[5.687137],[-9.356424],[-0.188385],[-8.898235],[5.427590],[-3.872782],[-8.569696],[-7.031573],[5.885570],[-5.408007],[6.139372],[-5.569265],[-9.685332],[-2.873624],[4.596094],[-1.549993],[-6.279253],[-4.278118],[-0.915006],[-9.503406],[-8.142072],[-3.671754],[2.463997],[-7.959547],[1.310836],[0.135866],[9.370872],[-6.799925],[5.289533],[2.030640],[-4.084281],[2.050752],[-9.183651],[7.653384],[4.378067],[-7.992744],[-4.754061],[-7.962959],[-0.693586],[-9.414583],[-1.815402],[-4.528151],[-2.093553],[9.818320],[8.737498],[-2.197282],[-7.784555],[-2.349403],[0.703443],[-7.550963],[-5.259071],[-8.548966],[6.643174],[-9.719826],[9.381345],[-0.115176],[-9.439514],[1.709980],[0.460664],[-6.791630],[3.512359],[-6.131490],[6.893841],[3.376189],[7.674916],[1.401572],[-0.764091],[-6.503867],[-7.514476],[1.026655],[-0.539132],[0.004666],[5.648768],[6.437340],[1.601622],[3.946289],[-2.979257],[5.691684],[7.978922],[-6.178895],[-6.080369],[-4.356957],[5.708180],[-5.482376],[4.422117],[6.844639],[1.746622],[-6.865942],[2.554296],[8.516652],[6.990967],[-1.475741],[7.450086],[2.174131],[-6.990791],[6.456036],[8.415831],[0.074169],[-7.620694],[8.356295],[-1.718183],[8.088138],[5.583601],[-1.161404],[1.993507],[-0.839062],[-2.884041],[-1.926958],[-3.020594],[-6.554776],[4.175503],[2.344335],[1.282899],[1.786583],[-6.190528],[0.932070],[8.767508],[0.936415],[-5.667923],[-7.458003],[3.030393],[3.955804],[3.298967],[9.210579],[3.051961],[-1.299475],[8.941629],[-5.173262],[-5.216654],[1.650917],[-0.908357],[6.754393],[8.762573],[-6.551766],[-5.477381],[-3.358437],[2.483653],[-5.603945],[9.696383],[-3.387342],[7.702900],[-3.951974],[-7.550401],[-6.545538],[-8.656193],[-0.832981],[-0.782361],[0.614667],[-2.241782],[-7.148086],[-3.423520],[-4.769064],[-0.024709],[-7.063001],[7.744645],[-3.791984],[9.425644],[2.798989],[5.344027],[-0.251289],[7.661594],[-4.383551],[1.529095],[-7.763889],[-1.090129],[-5.737476],[0.586901],[-7.868192],[6.469045],[0.806266],[-4.789629],[-2.142620],[-9.228724],[3.366830],[7.390100],[-7.116735],[-4.441609],[-7.846364],[-5.561958],[5.123480],[2.422409],[6.724643],[9.109980],[-2.537328],[-1.840520],[0.254629],[-7.549566],[-0.899119],[4.455779],[-8.351800],[6.942522],[-4.592189],[-0.825834],[5.834277],[3.225054],[8.255007],[4.717136],[5.984911],[-8.405049],[2.045649],[7.540540],[6.162811],[-5.963369],[0.841636],[-4.218577],[-6.463247],[-8.545780],[0.343860],[-7.053182],[7.232645],[-6.712155],[-5.530462],[2.785791],[-3.866312],[-9.273217],[-0.065259],[-6.228857],[2.952789],[6.385044],[-8.452976],[-8.164858],[9.299230],[9.784024],[2.188355],[-8.082293],[8.628689],[3.027051],[-9.828698],[6.158166],[7.852644],[-5.017162],[-2.654695],[0.606601],[-9.809559],[-2.080850],[-4.658394],[9.489276],[2.468309],[2.697352],[-3.125714],[7.710861],[-2.870983],[-2.013275],[3.638854],[8.545097],[1.508844],[-1.480983],[-9.117140],[2.988427],[-5.143374],[7.970408],[-5.223755],[-1.695885],[-6.661906],[6.254883],[6.429869],[-4.253631],[9.228306],[-8.339363],[5.947691],[1.792894],[-3.845663],[-4.404857],[-2.758706],[4.591157],[1.085108],[7.768486],[3.863022],[0.268515],[8.351398],[0.169997],[5.256912],[-1.636171],[-6.379246],[3.263717],[-0.855184],[-0.308755],[-5.781427],[0.219199],[-8.755567],[7.697518],[-8.957865]], dtype = "float64")#candidate|5608|(770, 1)|const|float64
const_5609 = relay.const([[1,-4,-4,10,5,9,-10,-9,8,6,9,-4,4,6,-9,-3,-10,9,-10,-10,-5,-5,9,-9,-8,-6,1,-6,3,-8,-2,5,7,-10,2,-2,-10,1,-2,8,-7,9,-6,2,6],[-4,-8,2,2,2,3,1,2,-5,-2,6,-9,7,9,5,-9,4,7,-5,-10,-10,-3,-4,-1,-1,4,-2,4,6,-9,9,-9,7,8,4,-1,1,-5,10,6,1,-3,-10,-4,-10],[-7,-1,9,2,-2,-7,1,8,3,-2,-3,8,7,3,-6,4,-2,-10,5,-10,6,-1,-5,3,-8,8,1,7,6,9,3,-5,-10,-5,7,-3,3,2,-2,-10,1,2,-6,9,-9],[3,-4,6,-3,1,6,-3,-6,9,-1,8,6,3,9,3,-10,9,-7,10,-3,10,-2,10,-9,6,7,1,2,-5,-5,8,-7,1,-1,3,-1,5,7,1,-4,7,1,-5,1,-5],[-8,-2,-1,6,4,-7,-4,8,8,1,-8,-3,6,5,6,4,4,-9,-8,8,6,-7,-10,4,-8,-9,-3,7,-10,7,-2,-2,-6,3,7,6,-7,-6,9,4,-6,6,-7,9,5],[5,-6,6,-7,-5,-10,-8,5,-5,-3,-4,4,-8,-2,10,4,7,-2,1,-1,4,9,-10,7,1,-4,10,-4,1,-7,5,6,-1,-6,10,1,9,-7,6,-6,-3,-1,-10,-1,-5],[10,8,-4,4,3,7,7,6,5,-7,9,1,3,9,2,2,3,-10,1,7,8,-10,10,-1,9,7,-10,-10,-2,6,-2,-6,10,-4,-1,-7,-4,6,-4,-10,8,1,-6,8,-1],[-9,-3,-9,-2,4,-3,4,7,-1,8,-3,7,-4,-8,-10,-7,1,-6,2,3,-3,6,-4,-7,5,-8,-4,4,-9,-10,-1,-8,6,-3,3,-2,-4,4,-3,-5,-10,7,-10,-4,3],[-10,1,-7,3,5,7,2,8,-1,1,-3,1,-7,-3,3,-6,-10,-10,-6,-6,7,-10,7,9,3,6,-10,-6,-1,9,4,-7,-4,9,10,-1,-3,7,1,9,-5,7,-5,4,1],[2,-9,-10,-5,-1,6,-1,-4,-10,6,6,8,7,-6,9,-2,-3,-9,-4,-1,9,-8,8,-9,-7,-2,6,-6,-3,-4,2,-5,-9,-7,9,9,-7,8,-8,-8,2,8,7,-9,-8]], dtype = "int8")#candidate|5609|(10, 45)|const|int8
call_5607 = relay.TupleGetItem(func_1461_call(relay.reshape(const_5608.astype('float64'), [11, 10, 7]), relay.reshape(const_5609.astype('int8'), [1, 450]), ), 5)
call_5610 = relay.TupleGetItem(func_1465_call(relay.reshape(const_5608.astype('float64'), [11, 10, 7]), relay.reshape(const_5609.astype('int8'), [1, 450]), ), 5)
func_2916_call = mod.get_global_var('func_2916')
func_2917_call = mutated_mod.get_global_var('func_2917')
call_5617 = func_2916_call()
call_5618 = func_2916_call()
output = relay.Tuple([uop_5597,uop_5601,call_5607,const_5608,const_5609,call_5617,])
output2 = relay.Tuple([uop_5599,uop_5603,call_5610,const_5608,const_5609,call_5618,])
func_5621 = relay.Function([], output)
mod['func_5621'] = func_5621
mod = relay.transform.InferType()(mod)
mutated_mod['func_5621'] = func_5621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5621_call = mutated_mod.get_global_var('func_5621')
call_5622 = func_5621_call()
output = call_5622
func_5623 = relay.Function([], output)
mutated_mod['func_5623'] = func_5623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_5635 = relay.TupleGetItem(func_1739_call(), 0)
call_5636 = relay.TupleGetItem(func_1741_call(), 0)
var_5637 = relay.var("var_5637", dtype = "float32", shape = (16, 16, 6))#candidate|5637|(16, 16, 6)|var|float32
bop_5638 = relay.multiply(call_5635.astype('int16'), var_5637.astype('int16')) # shape=(16, 16, 6)
bop_5641 = relay.multiply(call_5636.astype('int16'), var_5637.astype('int16')) # shape=(16, 16, 6)
output = bop_5638
output2 = bop_5641
func_5649 = relay.Function([var_5637,], output)
mod['func_5649'] = func_5649
mod = relay.transform.InferType()(mod)
var_5650 = relay.var("var_5650", dtype = "float32", shape = (16, 16, 6))#candidate|5650|(16, 16, 6)|var|float32
output = func_5649(var_5650)
func_5651 = relay.Function([var_5650], output)
mutated_mod['func_5651'] = func_5651
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5669 = relay.const([[[-4,-10,-7,-8,7,9,-1,4,-9,-5,-9,-9,7]],[[-9,-7,-4,9,4,4,-10,-8,-3,-7,-4,-1,3]],[[-10,-8,6,-5,-10,-5,-5,-4,1,-4,-2,9,-1]],[[10,-1,-3,7,-9,9,-7,-5,7,-1,10,4,2]]], dtype = "int32")#candidate|5669|(4, 1, 13)|const|int32
var_5670 = relay.var("var_5670", dtype = "int32", shape = (4, 16, 13))#candidate|5670|(4, 16, 13)|var|int32
bop_5671 = relay.add(const_5669.astype('int32'), var_5670.astype('int32')) # shape=(4, 16, 13)
output = relay.Tuple([bop_5671,])
output2 = relay.Tuple([bop_5671,])
func_5677 = relay.Function([var_5670,], output)
mod['func_5677'] = func_5677
mod = relay.transform.InferType()(mod)
var_5678 = relay.var("var_5678", dtype = "int32", shape = (4, 16, 13))#candidate|5678|(4, 16, 13)|var|int32
output = func_5677(var_5678)
func_5679 = relay.Function([var_5678], output)
mutated_mod['func_5679'] = func_5679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3884_call = mod.get_global_var('func_3884')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_5748 = relay.TupleGetItem(func_3884_call(), 0)
call_5749 = relay.TupleGetItem(func_3886_call(), 0)
func_4625_call = mod.get_global_var('func_4625')
func_4627_call = mutated_mod.get_global_var('func_4627')
call_5778 = relay.TupleGetItem(func_4625_call(), 0)
call_5779 = relay.TupleGetItem(func_4627_call(), 0)
func_4625_call = mod.get_global_var('func_4625')
func_4627_call = mutated_mod.get_global_var('func_4627')
call_5784 = relay.TupleGetItem(func_4625_call(), 0)
call_5785 = relay.TupleGetItem(func_4627_call(), 0)
bop_5786 = relay.multiply(call_5784.astype('int32'), relay.reshape(call_5778.astype('int32'), relay.shape_of(call_5784))) # shape=(6, 3, 12)
bop_5789 = relay.multiply(call_5785.astype('int32'), relay.reshape(call_5779.astype('int32'), relay.shape_of(call_5785))) # shape=(6, 3, 12)
output = relay.Tuple([call_5748,bop_5786,])
output2 = relay.Tuple([call_5749,bop_5789,])
func_5791 = relay.Function([], output)
mod['func_5791'] = func_5791
mod = relay.transform.InferType()(mod)
output = func_5791()
func_5792 = relay.Function([], output)
mutated_mod['func_5792'] = func_5792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4853_call = mod.get_global_var('func_4853')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_5836 = relay.TupleGetItem(func_4853_call(), 6)
call_5837 = relay.TupleGetItem(func_4855_call(), 6)
func_2848_call = mod.get_global_var('func_2848')
func_2851_call = mutated_mod.get_global_var('func_2851')
const_5841 = relay.const([6.656153,4.893615,3.922557,-1.020236,3.523605,-3.149793,-7.440213,-3.753399,-5.298478,7.180323,0.053426,9.854967,-0.150280,2.186393,1.780868,4.890416,1.823938,6.355198,3.306484,9.893993,0.330221,9.595782,6.746391,-6.273341,7.120245,8.473158,1.829704,0.379973,3.225929,8.574356,4.249947,-9.049480,-2.335299,1.387820,7.375727,-8.299028,1.290495,-5.139204,4.219072,-2.655450,0.798450,1.615588,-0.509510,-9.565904,-7.220584,-0.394321,-4.230302,-9.926825,-3.454596,-7.299705,-4.839129,1.326050,8.393245,8.934446,-2.756432,1.477652,5.454979,-8.201159,8.106792,-0.884315,-4.323699,7.432085,6.353033,5.394111,0.225732,4.068677,-9.421627,1.575447,8.336553,9.839506,-7.612202,9.265963,5.260687,6.808824,-2.719895,-4.924636,-2.645944,1.847048,-4.262732,-2.032572,-5.558514,4.521842,-5.510316,-0.609784,8.259092,4.217938,-1.609293,-1.202293,-5.508727,-2.928023,9.248658,9.590187,-1.408490,9.922283,-9.229366,7.755776,4.525887,7.717236,9.517676,0.204387,6.657130,0.572320,6.100012,-8.316749,6.025494,-8.424208,9.356376,6.920858,-5.963716,-6.074471,-4.605929,-8.804560,9.327627,9.987814,1.383975,9.002110,9.152806,7.389420,-7.598326,-3.471094,-3.827113,-4.711181,-7.499204,-0.801215,-2.087986,6.779720,-3.905155,4.527026,-2.834073,-2.344808,4.109374,-8.944881,-5.133495,-4.381855,9.598780,4.106241,6.257596,-5.203847,1.514134,4.780197,2.894734,-8.729620,-7.888339,6.867954,-2.601486,-6.889488,-9.251636,-1.979898,-5.042624,8.106547,6.873880,-4.813307,6.611016,-4.932355,0.360729,-9.637530,7.782408,-1.435630,-0.922940,-0.634702,8.359001,7.493475,0.713393,4.051592,-3.575520,-4.545753,2.660932,-9.542057,3.918664,6.564372,-8.692392,1.647660,-3.691241,8.703800,-6.159400,8.149965,0.069645,6.418056,-2.166096,-6.889233,4.873848,-2.018120,0.190846,9.529101,3.140515,6.913331,1.330240,6.906593,-7.687921,-6.954369,-9.297101,1.411513,-4.923235,1.803640,1.384510,7.447793,-5.757428,6.303491,4.698240,-4.202690,5.763166,-1.386719,-1.701486,-5.518163,0.098102,4.558704,-2.070267,6.878163,4.525841,9.654089,-7.631520,-0.444783,-1.933824,8.009337,-2.102471,-2.326067,2.535960,-9.665734,8.956192,8.230154,-1.310368,-8.529204,0.477203,7.917187,-4.007226,2.883969,-1.447099,1.030277,8.606258,-7.285815,-6.427280,1.884409,6.674999,-7.757394,-8.281141,0.509529,-2.968800,7.954035,1.471706,1.345314,7.827086,5.908835,-7.662257,-8.469711,9.334459,2.072416,9.085180,5.168341,9.709180,7.366666,2.422255,-9.625782,1.016100,0.333973,-8.314940,-1.805508,9.112127,6.811600,6.176556,6.588069,-8.621912,-0.779299,5.380549,7.662157,0.973193,-8.368755,6.210210,1.113415,-0.133023,-0.699543,7.879247,-1.859469,-9.735138,-1.384659,8.416176,-0.130370,-7.047598,-4.164070,-3.478687,-1.887871,-3.466352,7.967401,3.001998,-0.879639,2.873852,8.896560,-6.227713,-3.178349,1.912573,-4.452708,-3.138116,6.941583,9.543255,5.474480,3.211288,-8.500196,-8.572736,5.777214,-9.021672,-2.243492,-5.776376,-8.748910,8.598093,5.176446,8.838416,-3.539089,-8.963127,-7.302888,2.699470,-4.606278,-6.125057,-1.415151,-5.460023,-7.194796,-7.124774,-0.522789,-3.910113,4.285010,4.425400,3.783941,-9.380367,6.144147,9.602645,-1.263903,5.117266,9.253237,3.080711,-9.966271,6.918199,-1.247043,0.130944,3.586026,6.374328,-7.382329,2.001130,2.070478,0.451110,5.941018,6.848874,1.219446,-9.036611,-5.920035,-6.656265,0.930765,3.741590,7.426304,-2.648113,7.582251,2.779377,1.325847,4.917926,-5.674283,1.134884,8.762057,-1.126290,8.747332,1.005988,-4.749713,-5.050820,1.120729,-1.225042,6.296988,3.020244,-4.023975,-2.342489,-4.510110,4.533606,-4.513618,-9.994311,6.581580,-5.983636,8.130619,-1.114382,5.689627,1.998921,-4.620771,-0.231603,-3.691286,-0.545711,-4.620805,-7.156464,-3.937389,-3.193774,-0.827035,-4.789847,2.173251,-1.646008,-5.200281,-2.051144,-6.222815,5.490220,1.938166,-3.900759,3.908707,0.352805,6.894405,-7.669084,6.355497,-3.498420,8.870967,3.836295,6.115761,6.699452,-3.761650,9.535856,9.666760,1.970835,-5.109404,9.796346,6.144459,-5.377677,-2.211548,-8.630197,0.120384,-2.022228,-9.604099,3.079637,4.279332,0.950744,-0.613004,-7.230401,8.583163,9.218605,4.848593,-6.976890,8.987017,5.580254,0.661115,4.478323,-8.086474,-3.711943,4.143287,-0.816249,-1.459510,-0.210222,9.971934,4.772062,-4.587736,-8.380629,4.521985,-4.761347,5.582220,-7.625562,-8.905943,6.983867,8.179842,8.631889,6.694832,-1.392512,9.098294,7.174358,7.823108,-0.354025,4.975465,-0.999588,7.337011,7.234354,-0.456871,3.094467,1.980597,-5.075322,-5.127965,0.189317,8.803971,-9.475838,-8.354724,1.241889,-1.834589,5.284833,1.617698,-2.356641,3.069697,6.758617,9.054063,-6.792727,-0.175829,-9.786668,-4.496484,-1.589048,4.139911,-9.909012,-5.080210,5.245449,7.689096,-9.521345,-4.631637,0.924338,-6.474890,-2.766836,-9.384869,-4.724602,6.598643,8.407848,-3.613300,2.905087,-2.134786,6.718248,-1.701245,0.122619,-2.788072,-2.758608,-6.081640,-8.730137,-7.379901,8.165299,4.324059,2.922791,-4.335137,-7.000217,1.126987,-6.003771,0.558861,-7.637408,-8.401087,-6.965140,-0.252659,-7.980019,-6.381394,8.029588,0.238017,1.930668,4.176147,1.068857,-5.348131,-8.440019,0.991906,6.913514,2.129022,-8.464164,-4.990672,-9.572600,2.108535,4.660188,8.189385,4.247075,6.868753,0.284822,4.484627,-1.072989,-1.613421,3.797581,0.645045,-2.377229,2.900085,9.524557,6.220603,-7.504324,-8.381896,8.625975,-0.811191,-9.652115,6.106978,-2.681307,-1.253770,-8.148669,-8.980377,-8.157248,6.716322,-6.774321,-3.120727,-9.321363,4.000052,-1.324606,-1.324560,2.519403,-2.781980,7.797630,8.888070,6.834474,-1.131222,-7.099713,9.586864,9.717828,6.393138,5.423026,3.676460,-3.599674,-4.713461,-7.451067,-6.773885,-2.800068,6.085558,-8.587414,2.138204,-7.168422,-9.159635,-2.336759,4.313118,-1.116113,5.458076,-5.222191,7.174336,0.291532,-6.501688,-0.036457,6.135082,4.134759,-0.012474,2.663505,1.770269,-1.171619,-3.868342,-9.431580,-0.398094,8.577715,-5.297558,-3.330954,-2.579213,-4.866733,9.273247,9.817476,6.058548,6.006963,-2.779939,5.832287,-6.089900,3.241747,6.285367,-6.176682,-8.682026,3.890734,-3.831002,-7.888176,-4.363524,6.942994,-2.817686,-4.640507,3.803663,5.388400,8.595347,-0.403619,-1.668537,-2.670602,3.645375,8.886088,-0.548801,-9.742105,-5.735396,6.797961,2.874581,-7.993186,5.236891,5.753111,-5.600441,7.364360,-2.618927,0.137954,9.869051,-1.903994,1.081021,4.226791,-3.114864,-9.889962,-8.567997,9.999966,-4.657286,7.139650,8.523832,-3.681729,-1.867823,3.178081,6.499962,1.592479,-8.706830,9.232826,-1.246963,-4.752747,7.450836,8.828737,-0.922927,9.061839,2.128421,9.913577,-2.379538,-8.574738,1.987474,2.755828,3.122417,7.560203,-6.823796,7.933421,8.577344,1.317906,-0.404504,8.964399,-4.435358,5.682239,0.043335,-7.277919,-2.428226,-2.973810,-5.845365,5.950694,8.857804,1.045085,7.043440,-5.818622,-4.959697,5.714361,-4.441742,-1.485161,-9.426706,-0.986390,-8.119291,8.199124,-9.594669,-8.193649,5.376660,-4.290927,-2.981709,-3.972772,-1.414103,9.766470,-5.322914,2.609452,8.248810,8.167224,3.176074,0.460345,-9.396565,-3.784277,6.890824,7.177822,-2.664556,4.022067,-8.721561,9.382184,-0.342879,3.576407,2.290989,0.669136,-5.862592,-3.786027,5.939175,9.448116,-9.042284,-6.367377,-5.532940,-1.723400,8.360164,-1.269701,3.263347,-8.439972,-6.345329,5.199829,-0.341448,-0.741302,7.859588,-9.300874,-5.191070,8.375702,7.371035,-5.416571,8.629558,3.221034,-4.537126,-6.018881,8.882949,1.254792,1.120849,7.985796,-9.097536,-6.441882,2.483624,-8.169816,9.221709,-0.823822,8.297763,-2.956736,-5.837219,0.218460,6.407926,-3.696527,-8.792226,-3.266705,-8.171400,5.770524,9.009491,1.495330,-1.939417,1.779861,0.168492,-1.234489,-5.668162,0.205084,-9.552021,-0.174965,1.710393,-4.730680,-3.957340,0.957099,3.777290,0.354595,-4.645668,1.932557,-5.050796,-8.310501,-7.215597,-2.148159,-8.168268,5.563335,-0.563954,-4.399450,6.223942,3.950349,-2.603380,-6.186195,7.297289,-2.527607,-1.543469,-9.481956,-7.769514,-0.013761,-1.933762,-2.099743,0.703879,8.076804,2.347919,0.008628,1.532968,-6.967013,9.203367,7.542782,8.824088,-4.092660,3.066137,-0.405910,-6.012069,-2.921210,-1.044179,3.435608,6.698985,0.075170,-1.351661,4.070996,-4.974267,8.527736,-6.676469,-8.149583,5.604014,-2.254358,-2.506467,-2.776788,7.100791,1.028127,9.620784,5.463952,7.745188,2.062806,7.332348,2.235345,6.030746,4.887596,7.387762,9.299283,0.964916,4.414521,-3.259171,-3.410877,4.414451,3.637366,-7.100637,2.846068,-9.194498,2.185800,6.599502,2.371424,-7.447979,-4.942516,-4.037744,-8.950837,8.588016,4.284498,7.602452,-8.859164,1.200246,-8.217657,-0.019478,-4.133514,-3.586496,2.356962,-1.324005,-8.447646,5.572251,6.842071,-3.072901,6.400396,1.578743,-4.269599,-8.390702,0.853603,-8.729606,1.264240,4.026742,7.295330,-0.757494,4.409478,6.889449,5.503232,5.994622,9.663325,-9.717879,6.654073,9.058995,-6.290882,-3.439842,-5.049136,4.397614,-8.312785,9.445129,0.314507,-9.167155,-0.510490,-0.432872,-9.067478,-0.569459,-0.217254,7.710987,2.121709,2.233745,-5.387564,1.236672,-1.402142,1.346780,-8.432384,7.070436,-5.152904,-2.294781,7.252422,-4.042598,-2.247831,7.624193,0.355458,1.437216,-6.990996,-3.238609,-3.997686,9.858095,7.314530,1.660069,4.487742,5.594651,-7.611746,-7.969420,-5.619740,-7.111706,-4.792245,6.767422,-3.407672,-1.621102,6.699697,0.926409,-0.865745,1.508511,9.179438,6.257364,9.683479,-8.910359,4.183017,2.901245,6.935929,-9.848917,-8.938741,0.686497,-8.484924,8.668180,1.191603,-7.239990,7.479352,8.085448,-0.704604,5.670719,7.112024,-4.324206,-0.181341,-1.061324,7.505672,2.584643,1.669131,-2.019901,-2.299079,8.639905,-2.772372,-4.249844,8.913205,9.181704,-3.149425,2.306372,-4.377829,-0.882773,-1.276740,8.430367,-7.617068,2.789565,6.606680,8.274212,3.004909,9.999788,-6.123211,5.221418,9.829389,-1.683516,4.671260,5.246385,0.254857,-5.934684,3.670965,9.976280,4.932312,2.264311,-7.334821,-8.118572,4.093718,9.764860,0.558683,-3.370985,3.751505,7.926127,-5.737185,8.792315,-8.372821,8.597938,8.994544,8.525237,6.463303,4.444852,-7.319619,5.911840,-7.881756,4.684603,6.796423,-2.532396,-2.086374,1.554246,9.123451,-7.635184,8.393990,4.636632,-0.553815,8.856315,9.934649,3.488635,-1.383072,3.852552,-6.832878,7.088835,-1.487576,-2.605935,5.149066,-2.647028,-2.687428,-8.270686,-8.770545,-4.387347,1.471904,1.602825,5.912954,-8.754815,3.922236,-5.576552,-9.449531,-4.280647,5.654429,-3.326527,-3.609591,4.602062,8.547420,-9.930137,7.540819,4.601843,-9.625792,0.217212,7.794620,-5.043019,-7.580024,-1.061445,-3.352384,9.905070,-1.982106,-8.429427,-4.562461,2.593279,0.995737,-2.414058,6.473759,2.022869,-3.251002,1.418150,-1.397665,-1.802183,-7.808406,-9.882381,4.842441,-4.137711,6.369478,4.085127,7.877713,0.795112,-2.423231,8.874127,8.285182,-9.331400,-9.582551,-5.486609,9.804632,7.951996,0.700642,-7.463481,0.149202,-7.533915,4.380090,1.433694,9.854896,4.722918,-9.803652,0.543786,-4.733167,1.573713,1.826835,2.522021,-0.482179,-3.787621,-7.016909,7.676823,2.691888,-3.238433,1.077189,7.298135,8.497933,-2.432652,-9.278485,1.777460,1.092422,7.795955,-8.433747,8.560797,3.337963,5.099768,-1.136788,4.006287,-5.882313,-0.658460,7.650169,-2.000792,4.383648,-0.291150,-1.294741,-6.788898,-0.735878,-0.975591,-3.806495,-7.593689,5.465472,-4.364452,-2.346614,-2.774945,6.872506,-2.904268,-3.916533,3.251398,7.513023,3.828592,-2.829213,-8.804511,5.587658,2.472634,-6.758386,5.869375,5.142997,-0.685979,-9.119389,5.271350,8.900599,-1.966656,-6.559870,3.310679,-5.411601,-3.712499,-1.723974,2.959045,6.853511,-2.513845,-8.113427,-3.679870,5.405706,7.735106,8.207155,6.745700,-8.656472,-1.375555,-2.454006,9.265053,1.943509,5.665370,-7.052601,8.961419,4.899526,4.308999,-0.222909,-8.634636,-9.262290,9.545247,-4.222861,9.463858,-2.553050,1.147023,2.187239,8.252217,-5.927389,8.001417,-8.283036,1.669713,-1.828648,9.280073,-6.151675,-5.653885,-5.861796,-0.763983,-2.587167,3.230527,5.030274,1.097289,8.807280,8.126850,6.815726,-3.129252,-7.474890,-5.531489,4.530214,5.641095,4.634823,-1.669930,7.571486,-0.546686,-2.192180,-6.750558,-1.942051,0.582454,8.477326,-1.471924,8.415547,-2.984605,-4.557011,-7.421844,-7.047455,8.609366,1.818891,3.411559,-9.438984,-2.841628,-1.488082,-1.662758,0.068769,-1.562656,2.128891,9.889869,-2.967314,-1.715187,-0.145563,-2.800904,-4.278673,-4.048637,5.803821,-5.697377,9.219896,2.339552,4.178546,6.963383,9.168231,5.593248,-6.400054,1.227669,-9.206995,0.721992,-9.800324,-3.553806,5.529303,-6.568778,-0.665920,-5.533143,6.947413,9.767738,0.891348,6.962317,7.839478,2.599463,-5.812826,-4.539141,-9.134368,1.869951,3.211011,8.278760,8.370038,5.474223,-6.995602,3.702386,8.282261,5.822693,3.683691,6.166491,6.694672,-8.028717,6.968737,6.522078,-7.539353,-1.667465,-1.916526,-0.008057,9.737080,6.083151,7.648798,-8.350406,-3.579506,-8.468325,-2.301940,-8.239331,-4.851525,0.935333,3.961933,-2.560142,-8.387821,5.992199,-9.703850,-7.376823,8.429812,-4.677607,-6.164349,-4.286442,-3.449894,2.842257,-6.561054,-6.132933,-9.087883,5.241985,-5.016285,-1.627550,-1.072689,9.434830,5.674855,3.248190,-5.329287,-8.819018,-5.309721,2.591317], dtype = "float32")#candidate|5841|(1344,)|const|float32
call_5840 = relay.TupleGetItem(func_2848_call(relay.reshape(const_5841.astype('float32'), [1344,])), 0)
call_5842 = relay.TupleGetItem(func_2851_call(relay.reshape(const_5841.astype('float32'), [1344,])), 0)
output = relay.Tuple([call_5836,call_5840,const_5841,])
output2 = relay.Tuple([call_5837,call_5842,const_5841,])
func_5846 = relay.Function([], output)
mod['func_5846'] = func_5846
mod = relay.transform.InferType()(mod)
output = func_5846()
func_5847 = relay.Function([], output)
mutated_mod['func_5847'] = func_5847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1534_call = mod.get_global_var('func_1534')
func_1535_call = mutated_mod.get_global_var('func_1535')
call_5848 = func_1534_call()
call_5849 = func_1534_call()
func_3250_call = mod.get_global_var('func_3250')
func_3252_call = mutated_mod.get_global_var('func_3252')
call_5856 = func_3250_call()
call_5857 = func_3250_call()
output = relay.Tuple([call_5848,call_5856,])
output2 = relay.Tuple([call_5849,call_5857,])
func_5858 = relay.Function([], output)
mod['func_5858'] = func_5858
mod = relay.transform.InferType()(mod)
output = func_5858()
func_5859 = relay.Function([], output)
mutated_mod['func_5859'] = func_5859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4450_call = mod.get_global_var('func_4450')
func_4452_call = mutated_mod.get_global_var('func_4452')
call_5865 = func_4450_call()
call_5866 = func_4450_call()
output = relay.Tuple([call_5865,])
output2 = relay.Tuple([call_5866,])
func_5877 = relay.Function([], output)
mod['func_5877'] = func_5877
mod = relay.transform.InferType()(mod)
mutated_mod['func_5877'] = func_5877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5877_call = mutated_mod.get_global_var('func_5877')
call_5878 = func_5877_call()
output = call_5878
func_5879 = relay.Function([], output)
mutated_mod['func_5879'] = func_5879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5791_call = mod.get_global_var('func_5791')
func_5792_call = mutated_mod.get_global_var('func_5792')
call_5880 = relay.TupleGetItem(func_5791_call(), 0)
call_5881 = relay.TupleGetItem(func_5792_call(), 0)
uop_5888 = relay.asinh(call_5880.astype('float64')) # shape=(4, 2, 13)
uop_5890 = relay.asinh(call_5881.astype('float64')) # shape=(4, 2, 13)
func_4450_call = mod.get_global_var('func_4450')
func_4452_call = mutated_mod.get_global_var('func_4452')
call_5903 = func_4450_call()
call_5904 = func_4450_call()
output = relay.Tuple([uop_5888,call_5903,])
output2 = relay.Tuple([uop_5890,call_5904,])
func_5905 = relay.Function([], output)
mod['func_5905'] = func_5905
mod = relay.transform.InferType()(mod)
output = func_5905()
func_5906 = relay.Function([], output)
mutated_mod['func_5906'] = func_5906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4387_call = mod.get_global_var('func_4387')
func_4388_call = mutated_mod.get_global_var('func_4388')
call_5914 = relay.TupleGetItem(func_4387_call(), 1)
call_5915 = relay.TupleGetItem(func_4388_call(), 1)
func_2144_call = mod.get_global_var('func_2144')
func_2147_call = mutated_mod.get_global_var('func_2147')
var_5926 = relay.var("var_5926", dtype = "uint32", shape = (450,))#candidate|5926|(450,)|var|uint32
call_5925 = relay.TupleGetItem(func_2144_call(relay.reshape(var_5926.astype('uint32'), [15, 3, 10])), 0)
call_5927 = relay.TupleGetItem(func_2147_call(relay.reshape(var_5926.astype('uint32'), [15, 3, 10])), 0)
func_3801_call = mod.get_global_var('func_3801')
func_3805_call = mutated_mod.get_global_var('func_3805')
var_5963 = relay.var("var_5963", dtype = "int8", shape = (8, 84))#candidate|5963|(8, 84)|var|int8
call_5962 = relay.TupleGetItem(func_3801_call(relay.reshape(call_5914.astype('float32'), [4, 2, 13]), relay.reshape(var_5963.astype('int8'), [1, 672]), ), 0)
call_5964 = relay.TupleGetItem(func_3805_call(relay.reshape(call_5914.astype('float32'), [4, 2, 13]), relay.reshape(var_5963.astype('int8'), [1, 672]), ), 0)
output = relay.Tuple([call_5914,call_5925,var_5926,call_5962,var_5963,])
output2 = relay.Tuple([call_5915,call_5927,var_5926,call_5964,var_5963,])
func_5978 = relay.Function([var_5926,var_5963,], output)
mod['func_5978'] = func_5978
mod = relay.transform.InferType()(mod)
var_5979 = relay.var("var_5979", dtype = "uint32", shape = (450,))#candidate|5979|(450,)|var|uint32
var_5980 = relay.var("var_5980", dtype = "int8", shape = (8, 84))#candidate|5980|(8, 84)|var|int8
output = func_5978(var_5979,var_5980,)
func_5981 = relay.Function([var_5979,var_5980,], output)
mutated_mod['func_5981'] = func_5981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1814_call = mod.get_global_var('func_1814')
func_1816_call = mutated_mod.get_global_var('func_1816')
call_5983 = relay.TupleGetItem(func_1814_call(), 3)
call_5984 = relay.TupleGetItem(func_1816_call(), 3)
uop_5994 = relay.acos(call_5983.astype('float32')) # shape=(1, 770)
uop_5996 = relay.acos(call_5984.astype('float32')) # shape=(1, 770)
output = uop_5994
output2 = uop_5996
func_6002 = relay.Function([], output)
mod['func_6002'] = func_6002
mod = relay.transform.InferType()(mod)
output = func_6002()
func_6003 = relay.Function([], output)
mutated_mod['func_6003'] = func_6003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5846_call = mod.get_global_var('func_5846')
func_5847_call = mutated_mod.get_global_var('func_5847')
call_6017 = relay.TupleGetItem(func_5846_call(), 2)
call_6018 = relay.TupleGetItem(func_5847_call(), 2)
func_3610_call = mod.get_global_var('func_3610')
func_3612_call = mutated_mod.get_global_var('func_3612')
var_6022 = relay.var("var_6022", dtype = "float32", shape = (104,))#candidate|6022|(104,)|var|float32
call_6021 = relay.TupleGetItem(func_3610_call(relay.reshape(var_6022.astype('float32'), [4, 2, 13])), 0)
call_6023 = relay.TupleGetItem(func_3612_call(relay.reshape(var_6022.astype('float32'), [4, 2, 13])), 0)
func_2505_call = mod.get_global_var('func_2505')
func_2508_call = mutated_mod.get_global_var('func_2508')
const_6036 = relay.const([0.861601,-5.061649,-1.028151,8.021626,-4.095078,-9.917697,1.476402,-9.095622,-3.011053,8.358584,-4.427230,8.335701,1.177210,-3.866148,-9.276719,3.534143,7.669427,-7.481207,8.798202,4.633593,7.259574,-5.975541,4.624013,-4.174381,3.524060,3.853754,6.356052,5.070601,-5.644952,-0.278392,-1.763161,-7.700576,5.759812,8.988209,-3.770717,-9.405060,-5.374611,-5.238687,9.913855,8.242696,-4.680429,-9.397424,-9.447216,4.361303,9.959390,4.647185,5.753344,1.811242,-3.558942,4.865438,-2.132049,-1.907326,-3.747418,-7.378764,-8.197018,-9.149170,-8.915259,-9.816757,1.167522,6.375112,3.163080,-2.012847,1.078209,1.500490,0.441649,-3.767762,-2.246473,-9.436177,-7.638043,-9.999694,4.627130,4.481854,3.882937,-5.186231,1.247272,-5.068831,-6.986922,9.852666,-8.285102,7.830743,5.907281,9.652285,-0.457096,-9.425643,2.149257,2.049490,-8.054240,-7.145523,4.215738,-5.935537,4.236581,4.519615,4.247849,6.677115,-1.949002,1.421935,-3.416016,0.314734,8.368671,7.726532,5.611941,0.597765,-3.990092,0.462449,-6.105013,-7.731712,-5.642570,8.013419,9.230332,-8.451764,1.875611,1.382663,-6.942988,-0.219061,6.818893,-2.739133,0.074418,-1.260578,-3.870589,3.690037,1.644376,-4.728676,1.011473,6.240183,-8.101297,-2.968350,-6.319287,4.605936,4.255863,-9.499468,-9.866599,1.109519,-7.108816,7.225641,5.802742,8.017877,-1.713836,1.167663,2.065891,-8.271971,-4.433804,4.883394,4.083226,4.564605,-6.907245,4.006439,9.252476,-6.038111,-7.199743,-8.459479,-1.651293,-6.248692,2.690949,5.609954,-4.767092,-6.381511,-3.286650,7.777886,-0.736757,-4.941809,-1.608280,5.596185,-9.607482,5.220648,0.397123,9.463624,7.736276,4.065737,0.546276,5.975059,-0.978196,-8.417062,8.309925,-5.507782,-6.541014,1.567037,-7.013327,-8.551456,-7.276117,5.186866,6.072096,-2.894055,-3.244069,3.803724,-2.679780,-3.402569,-7.665249,7.501370,-6.974408,-8.460142,9.798540,-1.515886,-9.051908,-2.127607,-6.931320,9.479512,-3.877591,9.903363,6.951881,-6.166538,4.498649,-9.736038,3.881198,-8.316306,-3.463336,8.323197,-8.138709,8.025156,-7.970246,5.050037,-4.112221,4.950820,-8.377681,8.462717,9.881718,5.687659,-7.340004,1.751520,-6.282031,-1.983417,-1.359117,-6.383457,3.436495,3.422776,0.362727,-7.624958,2.760928,7.725003,-3.667710,9.456084,-3.569022,6.787534,4.331757,2.256012,-3.808141,-1.304676,8.494454,3.764105,-4.145522,-0.311957,7.906312,3.945648,-7.272994,2.521257,-0.165242,3.066809,3.857000,1.903027,6.024713,-0.049852,-8.661210,-4.267251,6.579242,-8.429944,-8.137803,-0.586838,-4.831946,1.477791,-1.645800,0.900107,9.256724,0.209133,9.717276,5.969008,1.163067,-6.072739,-2.581726,2.575492,-2.748862,-5.148338,9.132662,9.062215,-2.579448,-1.537410,6.154501,5.171382,-0.102984,4.914388,-8.096070,-9.678132,6.607426,8.201171,0.789217,4.648810,0.474781,5.434299,-1.889439,-1.782369,1.686170,0.966329,-9.805885,0.079318,-4.412940,2.281523,-4.339835,-9.227014,-1.083894,6.273546,8.089162,-1.556016,-0.495318,4.487733,-4.283256,-8.746348,-9.075568,-3.585873,-7.875173,-3.313252,-9.270663,5.424652,2.031961,-7.741666,-0.811154,-8.061061,9.526078,-9.511290,-0.739770,-5.339543,7.042885,-9.517477,7.333423,-6.119172,-0.992105,-9.741014,-4.255994,9.537882,1.537975,-6.937605,-4.809844,0.411201,4.160376,9.863718,2.186929,-3.222427,-3.733099,6.373187,1.330322,-7.615013,-1.954925,-1.879686,-6.573167,-3.951535,-2.560924,6.216958,2.966107,-7.705494,-0.163157,-0.800699,3.256016,-7.182715,9.649622,5.598536,-8.615780,1.869696,-3.771470,4.586408,2.499182,7.001664,-6.195355,-2.349453,6.239340,-1.112987,7.219805,-5.512163,6.386644,-1.180336,-9.570152,9.518797,5.991067,1.431460,9.572446,6.840415,-2.751049,-7.488972,6.331896,9.835332,9.577221,9.344869,-1.436558,0.512058,-8.025874,3.761125,-8.896796,0.159669,3.026604,3.355292,-9.225235,2.150809,3.364721,2.241039,9.152510,-8.373217,0.147832,5.247232,7.076059,4.996460,-6.591299,-5.343246,-1.754076,5.721443,-7.066776,-8.779847,4.995925,1.218969,8.351110,2.345651,1.227002,0.380742,2.967552,1.700190,4.207529,7.322889,4.142437,-6.750094,9.415413,2.180886,4.328249,-8.387301,4.381067,4.511303,6.965531,5.765830,-0.726981,0.972554,5.921540,-3.966656,7.256104,0.061791,7.456314,-8.947230,2.191467,-1.111857,5.957237,9.987613,6.036700,4.091263,4.186325,4.043307,8.869436,-2.374320,4.932342,-5.087629,-1.713395,6.910914,4.915249,-8.688419,5.627015,3.111211,-2.924328,-8.359187,-7.602614,-2.439851,-9.410254,8.682928,-1.668050,8.250585,2.597038,-3.832150,0.257307,6.015697,-3.602186,5.803914,8.983778,-6.922616,3.620353,6.979858,5.223338,2.668104,7.944305,4.847982,-5.892911,-2.007337,-1.686766,1.300653,-0.217690,7.701995,5.821697,8.494880,2.692234,-7.066270,-7.980250,-0.596827,8.576316,8.944673,6.762812,-4.908765,7.246655,9.108655,3.904167,1.786456,9.281916,-1.094295,8.596221,6.464316,-2.806615,3.495987,7.644244,-7.806909,-5.574888,-1.234589,-2.524983,2.956760,9.279092,-2.366458,-1.802183,-9.826278,-5.568993,-0.689069,-6.786684,-3.525975,7.279345,3.056049,-9.226066,8.393106,-1.112703,-8.529049,-8.157111,-1.620649,-7.748215,-4.147734,6.603262,-1.911347,-2.452926,5.097426,7.879656,5.001736,-6.493131,1.377927,-8.215875,9.827245,-3.104675,0.898677,3.322582,-8.608651,-0.449621,-6.250162,-5.242809,4.798919,2.691411,7.424870], dtype = "float64")#candidate|6036|(540,)|const|float64
call_6035 = relay.TupleGetItem(func_2505_call(relay.reshape(const_6036.astype('float64'), [10, 9, 6]), relay.reshape(const_6036.astype('float64'), [10, 9, 6]), ), 5)
call_6037 = relay.TupleGetItem(func_2508_call(relay.reshape(const_6036.astype('float64'), [10, 9, 6]), relay.reshape(const_6036.astype('float64'), [10, 9, 6]), ), 5)
output = relay.Tuple([call_6017,call_6021,var_6022,call_6035,const_6036,])
output2 = relay.Tuple([call_6018,call_6023,var_6022,call_6037,const_6036,])
func_6042 = relay.Function([var_6022,], output)
mod['func_6042'] = func_6042
mod = relay.transform.InferType()(mod)
mutated_mod['func_6042'] = func_6042
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6043 = relay.var("var_6043", dtype = "float32", shape = (104,))#candidate|6043|(104,)|var|float32
func_6042_call = mutated_mod.get_global_var('func_6042')
call_6044 = func_6042_call(var_6043)
output = call_6044
func_6045 = relay.Function([var_6043], output)
mutated_mod['func_6045'] = func_6045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5846_call = mod.get_global_var('func_5846')
func_5847_call = mutated_mod.get_global_var('func_5847')
call_6052 = relay.TupleGetItem(func_5846_call(), 0)
call_6053 = relay.TupleGetItem(func_5847_call(), 0)
output = relay.Tuple([call_6052,])
output2 = relay.Tuple([call_6053,])
func_6054 = relay.Function([], output)
mod['func_6054'] = func_6054
mod = relay.transform.InferType()(mod)
mutated_mod['func_6054'] = func_6054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6054_call = mutated_mod.get_global_var('func_6054')
call_6055 = func_6054_call()
output = call_6055
func_6056 = relay.Function([], output)
mutated_mod['func_6056'] = func_6056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1426_call = mod.get_global_var('func_1426')
func_1427_call = mutated_mod.get_global_var('func_1427')
call_6062 = relay.TupleGetItem(func_1426_call(), 0)
call_6063 = relay.TupleGetItem(func_1427_call(), 0)
output = call_6062
output2 = call_6063
func_6067 = relay.Function([], output)
mod['func_6067'] = func_6067
mod = relay.transform.InferType()(mod)
mutated_mod['func_6067'] = func_6067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6067_call = mutated_mod.get_global_var('func_6067')
call_6068 = func_6067_call()
output = call_6068
func_6069 = relay.Function([], output)
mutated_mod['func_6069'] = func_6069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4713_call = mod.get_global_var('func_4713')
func_4714_call = mutated_mod.get_global_var('func_4714')
call_6145 = func_4713_call()
call_6146 = func_4713_call()
func_3152_call = mod.get_global_var('func_3152')
func_3155_call = mutated_mod.get_global_var('func_3155')
var_6172 = relay.var("var_6172", dtype = "float32", shape = (104,))#candidate|6172|(104,)|var|float32
call_6171 = func_3152_call(relay.reshape(var_6172.astype('float32'), [4, 2, 13]))
call_6173 = func_3152_call(relay.reshape(var_6172.astype('float32'), [4, 2, 13]))
func_5112_call = mod.get_global_var('func_5112')
func_5115_call = mutated_mod.get_global_var('func_5115')
var_6182 = relay.var("var_6182", dtype = "float64", shape = (12, 156))#candidate|6182|(12, 156)|var|float64
call_6181 = relay.TupleGetItem(func_5112_call(relay.reshape(var_6182.astype('float64'), [12, 156])), 2)
call_6183 = relay.TupleGetItem(func_5115_call(relay.reshape(var_6182.astype('float64'), [12, 156])), 2)
func_5621_call = mod.get_global_var('func_5621')
func_5623_call = mutated_mod.get_global_var('func_5623')
call_6191 = relay.TupleGetItem(func_5621_call(), 1)
call_6192 = relay.TupleGetItem(func_5623_call(), 1)
output = relay.Tuple([call_6145,call_6171,var_6172,call_6181,var_6182,call_6191,])
output2 = relay.Tuple([call_6146,call_6173,var_6172,call_6183,var_6182,call_6192,])
func_6194 = relay.Function([var_6172,var_6182,], output)
mod['func_6194'] = func_6194
mod = relay.transform.InferType()(mod)
var_6195 = relay.var("var_6195", dtype = "float32", shape = (104,))#candidate|6195|(104,)|var|float32
var_6196 = relay.var("var_6196", dtype = "float64", shape = (12, 156))#candidate|6196|(12, 156)|var|float64
output = func_6194(var_6195,var_6196,)
func_6197 = relay.Function([var_6195,var_6196,], output)
mutated_mod['func_6197'] = func_6197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2863_call = mod.get_global_var('func_2863')
func_2865_call = mutated_mod.get_global_var('func_2865')
call_6202 = relay.TupleGetItem(func_2863_call(), 0)
call_6203 = relay.TupleGetItem(func_2865_call(), 0)
func_5456_call = mod.get_global_var('func_5456')
func_5459_call = mutated_mod.get_global_var('func_5459')
const_6211 = relay.const([[8,4,3,-9,3,3,5,1,-3,4,2,-9,3,8,3,-7,-3,-8,-3,5,-9,3,8,-1,-3,-6,7,7,-9,-8,-10,1,8,-10,-6,-6,-5,-1,5,6,9,2,7,-5,-6,-7,10,10,9,8,6,10,-4,-4,5,6,-2,-9,10,5,9,-10,4,-8,1,8,-1,-1,-1,6,7,-7,10,9,-10,-6,8,9,-8,-5,-4,-8,-3,-3,-6,-8,1,-3,3,-1,-6,-1,2,8,-8,1,-6,-10,8,3,2,-6,-9,4,-10,-5,3,-3],[-10,7,2,2,4,6,7,5,-3,2,9,5,10,-8,-8,10,-9,-7,-4,2,-3,2,-10,-9,8,-4,-7,8,1,-2,6,8,-8,10,-4,-10,1,-6,8,3,-7,7,-7,3,3,-8,7,6,-1,-7,-9,1,-10,-2,-2,-6,-3,3,8,-10,1,-9,4,-6,-2,-9,2,10,6,-10,-6,-7,9,-10,6,-7,-10,9,-4,10,-10,8,10,5,1,-4,2,-7,-1,-10,-9,-8,-5,-4,4,8,4,9,5,1,1,-2,-9,6,4,-1,-2,3],[-7,-10,-2,6,-4,1,9,3,7,5,-4,8,-4,2,-9,5,1,-7,-4,8,-8,-7,-1,8,-8,6,3,-10,4,-5,9,6,-5,-3,-8,9,2,-6,8,2,7,8,3,-7,1,9,3,-10,-10,9,7,-5,-4,3,5,8,5,-1,5,5,-1,-6,10,3,10,-10,-8,8,-8,-3,-6,4,-8,-10,-5,9,-7,-8,-2,7,-3,-10,3,-4,-7,-1,-10,4,4,-1,9,4,-6,5,5,9,-10,-8,7,2,-9,-8,-2,6,-6,-4,6,3],[2,9,9,-3,7,1,-5,7,-8,4,-7,5,-5,10,-6,-5,-10,-6,-2,-9,-2,2,-5,-3,6,-2,-6,-8,-5,6,1,2,4,10,6,-5,-2,-10,-10,10,8,8,-9,9,-3,7,-4,3,4,-6,-5,-3,-9,-1,-5,4,-5,9,7,9,-3,-3,-3,7,-2,-2,-5,3,7,5,-7,7,-1,5,4,-7,-10,4,-9,-5,-5,9,1,7,5,1,-1,3,5,-10,-4,6,7,9,2,-8,-10,-10,-8,10,9,5,-10,-1,-8,3,-8,-6]], dtype = "int64")#candidate|6211|(4, 108)|const|int64
call_6210 = func_5456_call(relay.reshape(const_6211.astype('int64'), [8, 9, 6]))
call_6212 = func_5456_call(relay.reshape(const_6211.astype('int64'), [8, 9, 6]))
output = relay.Tuple([call_6202,call_6210,const_6211,])
output2 = relay.Tuple([call_6203,call_6212,const_6211,])
func_6223 = relay.Function([], output)
mod['func_6223'] = func_6223
mod = relay.transform.InferType()(mod)
mutated_mod['func_6223'] = func_6223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6223_call = mutated_mod.get_global_var('func_6223')
call_6224 = func_6223_call()
output = call_6224
func_6225 = relay.Function([], output)
mutated_mod['func_6225'] = func_6225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3552_call = mod.get_global_var('func_3552')
func_3554_call = mutated_mod.get_global_var('func_3554')
call_6272 = relay.TupleGetItem(func_3552_call(), 0)
call_6273 = relay.TupleGetItem(func_3554_call(), 0)
func_4984_call = mod.get_global_var('func_4984')
func_4987_call = mutated_mod.get_global_var('func_4987')
var_6298 = relay.var("var_6298", dtype = "float64", shape = (54, 10))#candidate|6298|(54, 10)|var|float64
call_6297 = relay.TupleGetItem(func_4984_call(relay.reshape(var_6298.astype('float64'), [540,])), 2)
call_6299 = relay.TupleGetItem(func_4987_call(relay.reshape(var_6298.astype('float64'), [540,])), 2)
uop_6322 = relay.log2(var_6298.astype('float64')) # shape=(54, 10)
bop_6324 = relay.divide(var_6298.astype('float32'), relay.reshape(call_6297.astype('float32'), relay.shape_of(var_6298))) # shape=(54, 10)
bop_6327 = relay.divide(var_6298.astype('float32'), relay.reshape(call_6299.astype('float32'), relay.shape_of(var_6298))) # shape=(54, 10)
output = relay.Tuple([call_6272,uop_6322,bop_6324,])
output2 = relay.Tuple([call_6273,uop_6322,bop_6327,])
F = relay.Function([var_6298,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6298,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

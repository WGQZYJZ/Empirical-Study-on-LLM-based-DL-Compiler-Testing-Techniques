import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_152 = relay.var("var_152", dtype = "uint64", shape = (13, 14, 14))#candidate|152|(13, 14, 14)|var|uint64
var_153 = relay.var("var_153", dtype = "uint64", shape = (13, 14, 14))#candidate|153|(13, 14, 14)|var|uint64
bop_154 = relay.maximum(var_152.astype('uint64'), relay.reshape(var_153.astype('uint64'), relay.shape_of(var_152))) # shape=(13, 14, 14)
var_158 = relay.var("var_158", dtype = "uint64", shape = (13, 14, 14))#candidate|158|(13, 14, 14)|var|uint64
bop_159 = relay.multiply(var_152.astype('uint64'), relay.reshape(var_158.astype('uint64'), relay.shape_of(var_152))) # shape=(13, 14, 14)
output = relay.Tuple([bop_154,bop_159,])
output2 = relay.Tuple([bop_154,bop_159,])
func_163 = relay.Function([var_152,var_153,var_158,], output)
mod['func_163'] = func_163
mod = relay.transform.InferType()(mod)
mutated_mod['func_163'] = func_163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_163_call = mutated_mod.get_global_var('func_163')
var_165 = relay.var("var_165", dtype = "uint64", shape = (13, 14, 14))#candidate|165|(13, 14, 14)|var|uint64
var_166 = relay.var("var_166", dtype = "uint64", shape = (13, 14, 14))#candidate|166|(13, 14, 14)|var|uint64
var_167 = relay.var("var_167", dtype = "uint64", shape = (13, 14, 14))#candidate|167|(13, 14, 14)|var|uint64
call_164 = func_163_call(var_165,var_166,var_167,)
output = call_164
func_168 = relay.Function([var_165,var_166,var_167,], output)
mutated_mod['func_168'] = func_168
mutated_mod = relay.transform.InferType()(mutated_mod)
var_187 = relay.var("var_187", dtype = "bool", shape = (13, 8, 3))#candidate|187|(13, 8, 3)|var|bool
var_188 = relay.var("var_188", dtype = "bool", shape = (13, 8, 3))#candidate|188|(13, 8, 3)|var|bool
bop_189 = relay.logical_and(var_187.astype('bool'), relay.reshape(var_188.astype('bool'), relay.shape_of(var_187))) # shape=(13, 8, 3)
func_163_call = mod.get_global_var('func_163')
func_168_call = mutated_mod.get_global_var('func_168')
var_197 = relay.var("var_197", dtype = "uint64", shape = (2548,))#candidate|197|(2548,)|var|uint64
call_196 = relay.TupleGetItem(func_163_call(relay.reshape(var_197.astype('uint64'), [13, 14, 14]), relay.reshape(var_197.astype('uint64'), [13, 14, 14]), relay.reshape(var_197.astype('uint64'), [13, 14, 14]), ), 0)
call_198 = relay.TupleGetItem(func_168_call(relay.reshape(var_197.astype('uint64'), [13, 14, 14]), relay.reshape(var_197.astype('uint64'), [13, 14, 14]), relay.reshape(var_197.astype('uint64'), [13, 14, 14]), ), 0)
uop_199 = relay.exp(call_196.astype('float32')) # shape=(13, 14, 14)
uop_201 = relay.exp(call_198.astype('float32')) # shape=(13, 14, 14)
bop_208 = relay.logical_or(uop_199.astype('bool'), relay.reshape(var_197.astype('bool'), relay.shape_of(uop_199))) # shape=(13, 14, 14)
bop_211 = relay.logical_or(uop_201.astype('bool'), relay.reshape(var_197.astype('bool'), relay.shape_of(uop_201))) # shape=(13, 14, 14)
bop_216 = relay.subtract(var_188.astype('float32'), relay.reshape(var_187.astype('float32'), relay.shape_of(var_188))) # shape=(13, 8, 3)
func_163_call = mod.get_global_var('func_163')
func_168_call = mutated_mod.get_global_var('func_168')
call_220 = relay.TupleGetItem(func_163_call(relay.reshape(uop_199.astype('uint64'), [13, 14, 14]), relay.reshape(call_196.astype('uint64'), [13, 14, 14]), relay.reshape(var_197.astype('uint64'), [13, 14, 14]), ), 1)
call_221 = relay.TupleGetItem(func_168_call(relay.reshape(uop_199.astype('uint64'), [13, 14, 14]), relay.reshape(call_196.astype('uint64'), [13, 14, 14]), relay.reshape(var_197.astype('uint64'), [13, 14, 14]), ), 1)
output = relay.Tuple([bop_189,bop_208,bop_216,call_220,])
output2 = relay.Tuple([bop_189,bop_211,bop_216,call_221,])
func_231 = relay.Function([var_187,var_188,var_197,], output)
mod['func_231'] = func_231
mod = relay.transform.InferType()(mod)
mutated_mod['func_231'] = func_231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_231_call = mutated_mod.get_global_var('func_231')
var_233 = relay.var("var_233", dtype = "bool", shape = (13, 8, 3))#candidate|233|(13, 8, 3)|var|bool
var_234 = relay.var("var_234", dtype = "bool", shape = (13, 8, 3))#candidate|234|(13, 8, 3)|var|bool
var_235 = relay.var("var_235", dtype = "uint64", shape = (2548,))#candidate|235|(2548,)|var|uint64
call_232 = func_231_call(var_233,var_234,var_235,)
output = call_232
func_236 = relay.Function([var_233,var_234,var_235,], output)
mutated_mod['func_236'] = func_236
mutated_mod = relay.transform.InferType()(mutated_mod)
var_279 = relay.var("var_279", dtype = "uint64", shape = (2, 11, 10))#candidate|279|(2, 11, 10)|var|uint64
var_280 = relay.var("var_280", dtype = "uint64", shape = (2, 11, 10))#candidate|280|(2, 11, 10)|var|uint64
bop_281 = relay.multiply(var_279.astype('uint64'), relay.reshape(var_280.astype('uint64'), relay.shape_of(var_279))) # shape=(2, 11, 10)
func_231_call = mod.get_global_var('func_231')
func_236_call = mutated_mod.get_global_var('func_236')
const_286 = relay.const([False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,False,False], dtype = "bool")#candidate|286|(312,)|const|bool
const_287 = relay.const([6,5,-2,4,-3,7,4,-7,10,-1,-4,-4,6,-3,8,6,6,1,8,9,-8,9,-4,1,10,3,-4,-1,2,1,5,-5,-9,-8,4,8,4,3,6,5,8,3,6,4,9,-7,-3,5,9,-8,-1,-4,-8,4,-1,-1,7,-2,-10,-1,10,-5,-8,-4,4,-9,-10,9,-8,-3,1,9,-10,1,7,-10,9,1,-6,4,9,-4,-4,9,5,2,-6,4,-4,-7,-8,-10,-4,4,-6,-9,-10,5,5,8,4,6,5,-5,6,1,-10,-2,-4,4,3,-6,-6,8,3,-1,-8,-6,-6,1,6,9,5,-10,-6,-8,8,1,-4,-5,-7,-3,-5,7,3,-5,-1,5,-4,6,1,-8,-9,5,9,8,8,10,-2,5,4,6,-4,1,8,-9,-1,-10,-9,-4,4,-4,-5,8,-9,7,-2,-9,4,8,7,-2,6,3,-6,-4,10,7,-2,5,5,-7,6,7,5,-3,3,-5,9,4,4,10,-8,9,1,5,7,4,7,-3,-7,9,4,-10,-3,-10,4,8,4,-4,-3,-2,-3,6,-8,-6,-7,-4,10,-4,8,-7,2,6,7,3,-1,2,1,-5,9,5,-4,-7,-5,-7,-4,7,4,-6,-5,10,-5,-1,-2,-7,-8,7,1,8,4,1,2,4,3,-6,10,-8,10,-1,-6,3,9,5,3,-8,-9,-3,-6,6,10,10,7,2,5,-2,-2,-6,5,2,5,3,8,-6,6,4,5,3,-1,-1,-2,9,8,-6,-7,2,-8,-9,-4,1,-8,-3,10,-4,5,-9,-10,1,-4,-2,-5,4,-1,2,-7,-5,-9,-7,-6,-1,-8,-10,-9,-6,-9,-3,-7,8,9,3,-2,-10,-7,-3,7,8,4,-4,10,-5,10,-3,-4,-5,10,8,6,-6,-4,10,3,-7,-5,-2,-10,-3,-5,-9,7,4,6,1,2,7,-6,-9,4,-6,6,-3,4,-9,2,10,6,7,5,-5,3,3,8,8,8,10,-3,2,-9,-6,1,-10,-9,-10,-3,1,9,-7,6,9,-9,-9,4,-2,2,-5,6,-1,-10,-7,-8,-1,4,3,1,-5,-5,-5,-6,3,6,3,1,5,9,-6,-2,-3,3,6,10,-8,-8,3,1,3,3,-7,2,-6,6,7,9,4,-5,-7,4,1,10,7,1,-7,6,7,-6,8,-6,-9,6,-6,6,8,-1,-3,7,2,-9,-10,-5,-6,3,10,-10,2,-2,9,-4,-9,7,9,1,-10,2,-9,1,7,-9,1,8,5,4,10,-10,6,-1,1,-6,-2,5,5,-5,7,-1,-3,-4,9,-4,-7,-7,2,-5,10,8,-10,-3,8,-9,-4,-3,-9,9,6,-8,8,3,-5,-4,10,9,4,6,2,7,8,-6,9,-7,-7,-6,-2,4,7,-4,-2,6,-7,-8,-8,6,6,-2,-7,10,4,10,6,7,6,8,-6,-5,-7,-3,-9,2,3,2,3,-8,9,6,4,9,-5,-7,1,4,-5,4,6,-1,2,-10,5,-3,-6,10,-10,-9,5,-6,9,6,-6,8,-6,10,-2,4,-8,2,6,5,2,-3,-1,-5,10,4,2,10,1,-8,2,-10,9,-4,5,-2,-3,-8,-5,-5,-4,3,-1,6,2,-4,-5,5,-6,8,-8,10,7,-8,-1,-7,1,1,-2,-3,2,-9,2,1,-2,-9,9,-4,5,9,4,-1,8,7,10,4,-7,-8,-4,-7,8,-7,-5,-5,2,8,-10,10,-2,7,9,5,4,-7,4,7,1,-1,4,9,-10,3,-8,9,2,-4,-9,8,-6,-4,-8,4,-4,8,-3,-5,3,-6,-10,1,-2,4,-5,7,-7,4,9,-7,-5,10,-1,2,2,5,2,8,2,-5,2,10,10,-7,2,-3,-8,-2,9,-2,-1,-5,-4,4,2,-5,-1,6,-9,-4,8,7,-2,6,4,-2,-7,-7,-9,9,2,8,10,-7,-10,1,8,-3,-6,10,8,-6,-9,6,-4,9,-8,1,2,9,9,-9,6,7,-2,-4,1,5,-3,-9,-5,-2,7,1,1,3,-9,-9,6,-9,-7,9,2,-9,5,1,6,3,7,5,5,10,-10,-9,6,-5,10,10,-9,7,7,-2,-1,8,-10,-8,1,-8,-8,7,4,5,-9,-6,-2,-10,2,3,10,3,-4,-4,-8,6,-1,8,-9,9,-7,-6,-1,9,-10,-5,4,10,-9,-3,-1,5,-3,7,-7,2,3,-5,6,-6,-6,9,-10,-8,-5,6,-1,6,-5,8,9,-5,7,7,-4,2,-5,-10,9,-2,8,-8,10,-2,9,6,-1,-2,-1,-4,3,4,4,-1,-1,-7,4,7,1,10,1,-10,6,-1,-3,1,8,2,-9,-4,9,-9,-9,8,8,-2,3,-1,5,8,-4,4,4,5,10,-4,-3,3,-9,-1,-8,-6,-6,3,-7,-9,-10,7,10,9,-3,2,-4,-7,-5,-10,3,5,-2,-1,9,-2,-5,-5,10,9,-7,-9,-4,-5,-7,2,-2,-7,5,-3,-10,-5,3,1,6,-7,1,-5,4,-3,-5,-9,4,-1,-6,7,-9,-2,-4,6,-3,2,-10,-10,-7,3,10,10,10,4,4,-3,-4,5,-7,8,5,5,-9,8,-8,9,-5,-1,-10,2,-8,7,9,10,5,6,-7,5,-6,3,8,-1,1,-9,-8,-5,7,8,3,9,-3,-10,-6,6,10,7,1,2,-1,-3,3,3,9,3,9,-2,7,-3,-8,8,-10,9,-2,-3,1,9,-3,1,6,-6,6,-7,3,-7,-1,-1,7,-2,1,1,3,-6,-6,10,3,-9,5,1,6,-9,2,-7,1,9,7,6,3,8,-10,-5,6,1,10,9,1,-4,-9,-3,2,-4,5,-9,-1,10,-5,2,9,-3,5,-4,10,-9,-8,-9,4,9,3,-10,7,4,4,-3,9,-1,-8,3,2,-6,4,-1,9,10,10,-6,1,-10,8,-8,-9,-5,2,6,-10,4,-8,-6,7,-10,-7,5,-10,3,-8,7,7,-8,-2,5,-5,-7,6,-1,-1,-3,1,6,-4,-9,9,-2,10,7,2,-3,5,-1,5,-5,5,7,-5,-5,-2,-1,-10,7,-3,-1,8,-6,-6,-3,1,9,5,1,-1,-9,5,-3,-5,7,7,-4,2,10,-7,10,3,3,7,8,-4,-2,6,-4,-8,-8,-8,1,-2,-7,6,-6,-9,4,5,-6,8,-8,3,-7,4,5,-8,2,-7,-9,-6,-1,4,-3,-9,9,-6,6,-2,10,8,6,4,-8,-6,-6,-3,-1,4,7,-2,-5,-5,10,3,3,-7,-9,-6,-4,3,-9,6,-3,-4,6,-7,4,1,1,-6,-7,-3,6,1,-4,-9,-1,2,7,-4,-10,5,7,10,2,-10,10,5,-3,-5,3,1,-1,7,7,-3,6,-2,8,1,-9,10,6,-7,-2,-9,6,-8,-1,3,10,-4,7,-9,2,-6,-5,-2,4,2,-10,10,1,1,4,-9,-3,1,10,5,-4,-3,-9,-1,-4,8,6,-10,-9,8,-8,-10,-9,-10,-4,3,10,-6,2,-2,2,2,2,-2,4,6,6,-10,-8,-8,-7,-10,-8,6,6,6,-1,-4,10,-4,8,6,-8,9,-9,6,-7,-5,-5,-4,-10,-8,1,-6,10,5,1,-1,10,-5,-8,-6,-9,1,5,-4,-8,-8,6,9,-3,5,-8,3,10,-6,10,7,-7,3,4,7,-2,10,-6,-8,-5,-4,-1,10,4,-4,-10,-4,-7,-8,-4,4,9,-8,5,5,8,3,-4,-3,-1,-3,-7,-9,-3,9,2,-7,-9,4,-8,-4,-8,-6,-1,1,7,2,-2,-10,8,4,3,8,6,-6,3,-9,-8,-3,5,1,-9,-7,4,8,7,1,-3,1,-3,4,-6,4,9,5,1,-9,8,3,-3,5,3,9,-7,7,-7,3,-5,9,6,1,9,10,-4,-3,-4,-7,6,-4,8,10,-4,1,4,5,-6,-9,-6,2,4,7,4,6,1,3,-5,5,10,1,7,-5,-4,-8,5,-10,-5,-8,4,1,8,-7,10,4,-9,3,-3,-9,-5,7,6,1,-8,-2,-5,-8,-8,-7,6,-8,8,-2,-2,-6,-7,6,-2,-7,-6,-1,-6,5,3,-2,-7,5,-4,4,8,-10,5,-10,-3,-5,10,9,6,-9,9,-9,4,2,3,-3,-8,-7,10,-1,-8,9,4,-1,-3,-1,-2,9,-6,-3,8,1,-10,2,10,3,10,4,-2,-4,5,-7,6,4,-10,-3,4,6,-6,6,-10,4,10,3,6,7,3,-10,-4,2,-1,2,-1,-1,-7,-5,-7,6,-10,1,6,-7,4,5,2,-1,2,-10,2,-2,-2,5,-7,-7,9,10,6,2,7,-5,7,-1,9,-4,5,-9,4,-6,-4,7,-1,-7,-6,-4,-10,-9,-6,8,4,-8,9,-5,3,3,4,-9,6,-9,-8,-5,-5,5,-7,-9,-6,-9,6,7,5,7,1,2,3,-10,-8,9,-1,7,7,8,-4,-8,1,10,-7,-5,2,-6,1,-5,-2,4,-9,1,6,-9,4,-1,-3,3,9,-10,5,7,3,7,-8,-9,10,3,9,6,-7,8,-9,2,9,10,-10,-2,-3,-10,-9,-8,-1,7,-10,3,10,-9,-2,-9,-5,-7,-10,-7,9,3,-6,-9,1,7,10,1,1,1,3,6,-2,2,-1,4,6,-10,-8,1,6,1,6,-6,-3,10,-10,5,-9,-4,8,2,7,8,2,5,7,-4,9,10,8,8,-6,7,-2,10,1,5,6,3,3,4,5,3,-7,-6,2,-2,-8,6,10,-9,-9,-8,8,-3,-9,-2,-6,-8,7,7,-7,8,7,-3,-9,9,9,-5,9,9,-4,2,-8,-2,-2,2,9,5,5,5,2,-4,-1,9,4,8,1,-9,-10,-3,9,4,-7,-3,6,-6,2,-1,-6,3,-10,-9,10,-9,-8,-3,-8,-6,5,-7,7,-9,-3,2,-1,-9,-5,-10,-8,-5,3,-3,6,-8,-9,10,-8,5,-1,1,3,1,-10,-2,3,-5,5,7,-7,10,2,2,-3,1,5,6,-4,5,-9,4,-4,6,7,1,-10,8,5,4,-6,-3,-9,-10,-3,8,-1,2,1,7,3,10,2,-7,-7,-6,8,-5,-8,1,-9,3,-1,-7,7,2,5,5,-9,6,-5,-10,-4,9,9,5,-9,8,-5,6,-3,2,-8,7,1,-5,10,9,-10,7,-8,-5,-3,1,-2,-2,3,4,2,1,7,-10,-1,2,-9,1,3,6,-1,-4,4,-5,-9,-10,-10,-4,9,5,-5,3,6,-1,8,-5,-4,1,4,-7,-6,-5,8,-5,-3,8,5,-2,-3,-2,-8,-1,5,-4,-7,3,8,10,-7,-4,3,-10,3,-1,-3,-7,-1,7,10,6,-2,1,-9,5,-7,-10,-1,1,4,-8,7,2,-6,6,10,-5,3,10,8,1,4,-6,-4,9,-10,-7,-6,7,-7,10,-2,-8,1,-8,5,2,3,-8,-6,-4,-6,3,9,-6,10,-2,10,-1,1,-10,1,10,2,10,5,-2,7,6,5,2,7,2,-7,-8,2,-7,-10,6,4,-7,2,-1,7,4,-9,-1,-2,6,4,8,-2,9,-3,-5,1,-6,-3,3,-6,4,-5,4,8,7,-5,-9,1,10,-5,10,7,10,-7,-4,9,-10,2,2,-3,-1,-5,7,10,-1,-2,-10,9,1,-2,8,-2,6,2,6,-6,-6,-9,8,-8,-4,-9,1,4,-3,8,8,8,8,1,-5,-2,7,-2,3,-1,2,1,8,-7,4,10,7,-5,8,-8,-10,-4,4,-1,9,3,-1,-9,2,8,3,-7,6,5,9,-8,6,7,1,-6,-7,4,-3,-7,-8,10,-4,2,-2,-5,2,9,7,-5,-1,9,-10,-8,-3,-8,1,-10,9,-7,9,-10,-7,-9,5,3,5,-6,4,-9,-2,-7,9,7,1,6,8,-1,5,7,5,7,-3,-6,10,1,-4,-4,6,-8,-7,-7,10,-8,-9,6,9,4,6,-7,5,8,-6,10,-6,-1,5,-8,7,2,4,-9,-1,3,3,6,9,9,6,9,10,-3,-7,9,-8,9,-9,3,1,9,-7,4,-9,-9,-4,5,8,8,10,9,-8,-7,7,1,7,4,7,8,-2,-10,-7,2,-6,3,8,3,-10,-5,2,5,-7,3,-10,1,10,-10,-8,-4,-3,-10,9,-6,-4,6,-10,5,-3,-1,-9,-6,-4,8,9,8,-1,2,2,8,3,-1,-6,-10,5,1,4,3,-4,-3,4,-6,10,4,-7,9,8,-5,-8,-3,-6,9,2,1,-4,8,6,3,-1,9,9,10,-9,2,-9,2,-9,-7,-10,6,5,-2,-7,8,-9,-8,6,-8,2,-2,-4,6,3,6,-4,-9,-10,1,-5,-5,-7,-5,-10,7,2,3,-4,-3,2,2,4,4,-2,1,-3,4,-1,2,3,-5,9,-2,7,-9,5,-5,-5,-4,6,-6,4,-1,-8,-10,2,-5,3,3,-3,9,6,-8,6,7,9,-3,3,10,8,-2,5,-3,-5,8,-3,-7,-2,-1,8,10,-3,-10,8,-8,2,-9,9,7,2,-3,4,-5,4,-5,-4,-8,8,3,-10,4,-5,10,9,-10,-5,-6,-1,-5,7,-5,-5,-9,-3,-2,-5], dtype = "uint64")#candidate|287|(2548,)|const|uint64
call_285 = relay.TupleGetItem(func_231_call(relay.reshape(const_286.astype('bool'), [13, 8, 3]), relay.reshape(const_286.astype('bool'), [13, 8, 3]), relay.reshape(const_287.astype('uint64'), [2548,]), ), 1)
call_288 = relay.TupleGetItem(func_236_call(relay.reshape(const_286.astype('bool'), [13, 8, 3]), relay.reshape(const_286.astype('bool'), [13, 8, 3]), relay.reshape(const_287.astype('uint64'), [2548,]), ), 1)
uop_302 = relay.exp(bop_281.astype('float32')) # shape=(2, 11, 10)
func_231_call = mod.get_global_var('func_231')
func_236_call = mutated_mod.get_global_var('func_236')
call_304 = relay.TupleGetItem(func_231_call(relay.reshape(const_286.astype('bool'), [13, 8, 3]), relay.reshape(const_286.astype('bool'), [13, 8, 3]), relay.reshape(call_285.astype('uint64'), [2548,]), ), 1)
call_305 = relay.TupleGetItem(func_236_call(relay.reshape(const_286.astype('bool'), [13, 8, 3]), relay.reshape(const_286.astype('bool'), [13, 8, 3]), relay.reshape(call_285.astype('uint64'), [2548,]), ), 1)
uop_309 = relay.erf(const_287.astype('float32')) # shape=(2548,)
const_312 = relay.const([0.664675,-9.205961,9.014126,-9.324082,4.502851,0.645251,4.620334,8.887487,-1.552702,7.358311,6.877121,8.232849,5.049143,4.952687,-9.974102,-4.751612,5.325920,6.912775,-5.811104,6.312703,-4.713152,7.966873,8.844686,-1.060054,-9.402440,5.822728,7.908482,3.754191,-3.146061,1.548592,5.909854,-5.446600,-8.958954,9.047122,0.497032,2.391003,9.949643,4.961092,1.703301,5.338427,6.567863,4.208362,5.236188,1.665047,-4.489516,7.932996,-8.384308,-7.234385,8.079497,0.406604,-0.135995,5.610209,-3.657671,8.589645,-8.126848,4.072433,1.547410,3.320425,3.410761,-3.165319,4.079186,1.634535,9.738507,-6.923443,-7.599880,8.752562,-5.058559,-8.594175,-2.874555,-7.717277,-1.543457,-5.409879,2.527768,3.228993,9.785894,-5.105943,1.312020,-7.560911,9.224603,9.332193,9.538090,-2.666791,9.278291,-1.777365,-0.444092,3.409654,-2.570077,-3.769360,7.781981,8.013836,9.010200,1.286199,0.322398,7.234000,-5.168971,-2.660322,-9.261242,-8.691906,-3.675790,0.769244,2.845617,9.887809,-5.816244,6.271096,7.474953,-8.428206,-2.920715,8.147210,-8.520418,-2.969146,-7.209356,-1.336773,-3.174934,-3.919238,2.724509,0.710919,-9.295527,-9.286394,1.939051,-9.365114,-5.683946,1.187045,-8.625107,4.737370,-5.394957,-6.593504,-7.683750,8.660207,7.931309,0.650839,2.606636,8.561081,-4.854292,-6.397158,-1.590919,-8.024515,-9.590537,7.777762,5.917637,7.113433,0.794015,-5.566361,-8.030400,-0.738235,9.328848,-7.985451,-4.416290,0.987135,1.310714,-6.696964,-4.017397,5.010874,1.190911,-1.693403,5.802619,-3.650275,3.503653,-0.508333,-8.276546,8.897516,4.724020,-5.846913,1.512561,-8.226022,5.471790,-1.463507,1.983259,-9.693847,2.883111,4.175479,-4.366038,0.444920,-7.816446,2.654328,-6.719355,3.848262,-5.037470,9.008787,9.474969,9.122014,3.581899,-3.915792,3.252489,4.428806,6.786091,0.726441,-7.476270,3.507827,-8.615005,7.050324,7.598953,-8.699171,-0.942844,-3.506457,2.280234,-2.883524,3.651567,-6.332629,-2.935542,6.994175,-6.407688,3.845059,9.265711,-4.851102,-5.058027,-6.935637,-4.969650,4.645813,7.364864,-1.114249,4.431539,0.399469,2.915852,5.452038,7.053330,-0.263944,4.386429,-9.796506,-7.697415,1.746469,-2.910951,0.646251,-3.846268,6.010903,-1.304491,4.046845,-6.102615,-3.454532,-0.211539,8.061200,1.830968,8.640372,-7.826516,1.068635,-7.673734,8.225173,9.855257,6.495856,3.223794,0.064007,-6.266957,-1.168785,8.721732,2.255673,-8.935325,5.682127,-9.159439,8.573450,-4.153747,6.343869,5.969944,4.626786,8.480581,-9.179594,9.913446,-7.720546,-7.293654,-7.571165,-1.088040,8.512525,1.791245,-6.138382,-4.017499,-4.426776,-4.197031,7.056445,-7.813103,-7.563533,-1.710170,-8.511869,-8.266481,9.867530,7.468669,-4.083509,1.631848,9.182316,-7.250743,-1.652337,1.308082,4.429013,7.345413,1.364683,8.430081,0.664309,-3.114309,8.508267,9.686438,-8.125672,4.701124,-8.009534,-2.441336,3.060011,7.306615,9.322097,-3.518748,-0.153043,-4.372700,2.969097,-5.228145,0.783634,-2.778671,4.997742,3.811484,2.915592,2.442117,-9.234804,6.287337,-6.941946,4.880787,9.988131,3.101582,9.945937,9.536167,5.938303,-9.156329,-4.372687,-9.701781,-8.060701,6.330201,-9.313503,0.395573,5.604685,-2.930873,0.805636,2.157246,2.681810,-2.793947,-4.003556,3.932671,8.890964,-4.579379,-2.478051,-0.234085,5.977346,-9.955945,-8.729065,-0.582121,-3.959119,5.099423,-8.813056,-0.478833,4.767964,1.062492,-3.975690,-5.326557,-8.148106,-0.183798,2.813026,3.816179,-6.596244,-2.706023,6.758985,-7.257548,0.056113,4.055881,9.158513,1.401333,-6.990683,-8.647902,5.731291,4.021148,-1.546761,-4.334384,-1.196812,-5.857804,-9.882202,5.780509,8.260975,4.298155,3.911513,-2.536526,2.392104,-4.765297,-2.232562,-1.387938,3.013448,6.974063,1.632038,6.161532,3.684224,8.945106,-6.504874,9.736511,-9.386901,-9.779960,7.358105,-3.052964,-4.589831,0.354498,-7.357581,-5.497487,4.274287,6.744572,9.916457,-6.848024,-4.877363,-2.527177,-5.262576,-5.073174,9.372003,-4.703748,7.953398,5.886659,8.505416,7.837326,-7.109299,9.388902,6.859911,3.502997,7.953299,-4.884567,1.668113,-4.152785,-9.735657,-0.945259,0.642834,2.370247,-5.620371,-2.705769,6.296114,1.101711,1.099484,8.825838,9.009449,-6.532671,-5.077476,-8.070283,8.904803,6.675384,5.381838,1.011784,-2.079697,4.437523,0.607632,2.938797,5.872474,3.297306,8.884701,-4.498969,2.599586,-6.081432,5.818397,3.032642,1.647852,-6.076455,-5.907927,-2.661191,-2.870677,6.012058,8.071475,-9.167288,6.474258,-3.872021,-2.502441,5.972508,8.597916,3.407820,-4.981282,2.204236,5.299424,-0.116233,-6.006665,9.695088,9.523596,-7.792334,6.302397,6.619886,-1.168014,8.000549,-9.540866,-5.934912,-4.383160,-3.573327,-4.495901,2.841769,-9.995880,-5.283914,-1.848131,8.025962,-3.576466,-8.642804,0.607852,7.659733,9.895200,-1.156538,6.929841,7.607999,2.628666,3.198836,-5.878755,0.406183,-2.843478,9.582969,6.107208,-7.041035,-4.649512,0.457530,8.632585,-3.688258,-9.946425,-6.480447,7.866172,2.093457,-6.077117,9.153360,2.685403,0.984313,-6.392777,-4.804007,8.161204,5.255226,-4.504893,2.582590,6.946331,-0.240553,2.775587,-5.227010,5.692456,3.059464,-9.483838,-8.788975,1.372246,4.718593,-6.561212,-3.885533,6.434363,8.546702,-3.325934,5.282928,-0.936847,6.075594,-1.572580,4.849023,-4.932411,2.875115,6.211015,-8.200141,6.665337,-7.628768,-3.203650,-8.246792,-3.418275,9.716623,-1.995392,3.826180,-9.122895,-6.610418,-6.805518,-5.797805,-4.530145,7.663718,0.170876,0.566955,4.839636,-5.937114,-2.195267,2.605881,7.519792,1.757902,1.904149,-2.006760,-1.021901,8.266809,-3.642724,3.015933,2.951922,-7.112565,-0.291322,-5.393369,5.147745,9.379148,8.308392,1.260770,1.215218,-8.126802,7.579923,5.353664,-4.515222,-0.203167,-5.990768,5.554931,-9.031358,7.871624,7.613878,-1.826668,-0.263305,-7.482675,8.307887,-3.717014,4.758161,7.862903,-7.280442,-5.949892,1.095626,2.680496,-2.510530,-9.980427,8.216915,4.291131,8.794579,4.903303,-4.692935,9.312149,8.201917,-3.792480,-4.128201,1.282504,-7.474409,0.078112,-1.234710,-9.348363,-1.978393,9.043717,-5.177679,-3.454208,3.219769,0.006477,-2.485189,7.777064,2.400744,-9.428373,3.090069,-7.606390,6.437511,-6.235244,-1.470842,-0.597380,8.100058,-6.238851,-8.636449,1.119324,8.050751,1.231710,5.553476,9.594390,4.914517,-7.956357,-8.452684,-3.342570,3.962889,1.557047,5.632500,-8.425227,-5.451862,-3.223917,0.130955,-2.895652,7.042803,-2.035547,-2.508824,8.351713,2.535925,-2.722884,-1.101049,3.357677,4.511355,6.731558,-0.707051,6.387355,9.691540,-7.842603,1.569948,5.969580,-9.720613,4.071176,5.211063,-4.959086,5.407382,-8.947464,-3.750090,4.120281,8.615426,-2.377377,-1.321653,-1.230393,-1.228485,-1.495616,1.411659,-0.782053,-6.062163,-9.922500,-6.010501,-7.600706,0.774250,1.446416,4.979035,-5.138913,8.823889,-3.361346,-3.402099,2.219612,3.754395,3.972840,2.058688,2.425503,6.158631,-0.505749,-6.072874,4.283415,0.693650,5.830138,2.261767,9.221327,9.268491,-0.707699,-9.925563,-5.320577,-2.983401,-6.380494,9.399412,8.379568,3.897217,-7.169756,-7.027570,-4.484572,-9.545902,-6.872578,0.167424,-6.657520,-2.875301,-6.294500,4.706861,-3.599086,-2.434226,4.070370,-1.064104,0.107285,-0.385315,-2.390697,1.910898,6.906524,-0.845533,-3.143233,1.137588,-1.692807,0.281963,0.127827,6.653961,-9.772749,-8.745283,6.966661,-6.749238,4.949972,-3.908937,-1.734928,-3.981487,9.551566,2.891530,-4.769284,8.350308,-6.554456,5.513163,3.739233,-5.214737,8.298217,8.180050,8.250644,1.276453,7.468349,-4.513354,3.844749,8.618386,-5.739434,-0.382355,7.547949,2.588506,1.553187,6.257229,-9.660573,-8.119278,6.720660,-4.440165,-4.093239,3.106817,-5.740024,7.458987,-1.019706,-8.256522,5.373007,1.567651,-8.825093,4.690961,5.908257,-2.205527,-4.775178,5.068225,9.628293,-7.414995,6.698315,6.201503,-7.875741,-6.256353,9.295662,2.293728,0.396076,7.064881,5.256509,0.952344,-5.581571,-1.656721,3.124500,-6.263172,-8.567839,-0.274074,-1.477092,8.485555,-4.412247,8.090965,-5.899400,-5.568594,0.042825,-2.957414,-3.499939,4.575866,4.723889,0.869797,-1.313150,8.257061,7.058443,-9.616348,0.975415,-3.058464,2.606276,2.154598,-0.485029,-6.464249,-6.456178,-4.241250,-6.727332,9.669953,-6.492811,-0.071131,-0.502558,9.620018,3.232318,7.567374,1.097390,-5.040897,3.976515,-5.864271,-4.025732,1.545298,7.035744,6.689580,7.468537,-4.869891,-8.841722,-9.147265,-3.088980,-8.990829,-1.503621,3.091230,4.496891,-6.734667,1.354794,-6.918373,3.639090,-1.804461,4.054320,8.566519,-4.437956,-8.197469,-8.505953,4.247686,-2.571684,4.322951,9.288977,-4.823627,-1.332822,5.748684,-6.921681,7.216375,3.915916,-5.774057,-8.035504,-9.428519,4.667782,9.307957,7.657582,1.759797,-3.732500,-5.311758,5.033307,-6.281151,-4.530756,2.518893,0.041599,-5.918586,6.586531,0.214068,-7.167839,-8.873044,8.877715,-8.116169,8.288100,-9.225272,-1.751961,0.258636,-6.427177,8.199345,-7.447630,8.831532,-3.581279,-2.603509,-7.210982,7.160011,7.042896,2.216061,2.262579,-1.339732,9.957259,-4.886427,5.168468,8.618951,9.809349,-1.613529,4.913940,1.508995,-1.384233,6.846049,1.001697,6.258748,5.818747,9.705932,-0.207225,4.749922,0.763581,0.329426,2.719234,-0.571041,-9.222993,-8.005837,-7.955149,3.167076,-6.220133,9.705020,5.292139,-1.023163,2.997799,0.045197,3.012038,0.816651,-7.504223,-7.699888,8.527409,-0.330614,8.983108,-5.500603,-7.663161,-2.190449,-3.436771,-4.798863,1.527638,-7.155342,5.949448,-7.692844,-8.353501,2.300434,0.946383,5.440386,-6.036930,-3.795329,-5.173912,4.512493,-6.269834,4.461327,4.997200,-2.816186,2.245749,-0.993776,-6.431442,6.918837,-3.396382,0.604213,-9.687583,1.606773,-6.150782,6.854297,-5.541650,5.598582,-7.828309,5.298174,-0.490204,-1.451121,7.174877,-7.872286,-1.308112,-2.761593,-4.412102,-0.605926,-6.662092,4.777308,7.114147,-5.767367,0.751550,-8.067141,-7.113465,-4.804088,9.433596,-5.944231,3.434721,-4.687058,4.654214,-9.270967,-1.156395,-8.050612,-2.324601,0.842734,-4.078656,5.598231,3.055773,-8.667263,-6.952512,-6.555002,8.445710,-4.882560,-8.721484,-7.533571,9.588792,8.687575,1.756050,7.890466,-7.415212,2.143643,-9.460100,-0.835227,-2.925850,9.727817,9.571585,-2.658748,9.973756,9.480373,2.047600,7.644140,7.865778,-9.787265,-3.221450,-8.623124,-3.667245,-5.755896,3.726151,-9.640298,8.256831,-5.773204,-2.718011,7.629268,6.329589,0.729027,2.792866,3.555913,1.029814,6.121212,2.804457,-6.978504,-7.800341,-6.049092,-3.458756,0.193520,4.005116,-5.104211,7.288340,4.400593,9.552399,1.708958,2.883033,2.969913,1.866492,-5.663699,-2.556207,-8.437829,5.913004,-7.163611,-3.275918,3.124410,6.179442,0.794443,-0.542386,1.332051,5.952205,-5.271628,-6.139474,0.461794,-5.272386,-8.296445,6.269760,7.018033,-4.772899,-9.537109,-6.072410,-7.962734,3.765460,-5.275006,-5.227817,1.589305,-3.134668,-2.996372,6.993219,-1.168271,6.544735,8.858797,-2.647500,-5.850597,-0.750746,1.743538,-8.361079,7.968696,6.169040,4.978792,0.015279,2.653719,-6.835448,-7.634400,4.805177,-3.758189,-9.858128,6.919338,-6.741209,9.634495,-4.289130,9.917139,-8.861908,1.470519,-7.163377,9.096790,8.048660,-2.629576,-1.660435,-5.909115,5.244899,-8.262639,-8.885993,-9.719307,5.928636,7.290604,-1.204644,3.957980,6.787454,-3.938854,3.756682,-8.042539,-4.634359,9.826638,1.566378,1.855311,-7.650500,-6.266239,7.546396,8.027135,-0.346703,4.288309,-6.321285,0.530915,4.787896,0.217441,6.571861,2.410908,-7.693598,-6.681678,-8.209115,7.275102,-1.515413,4.138625,-5.829826,-7.508084,-5.062964,-4.587816,-2.443357,-5.396117,9.297334,1.058283,9.324833,4.061469,8.426481,-1.470121,6.334218,-1.978353,0.021223,0.079346,-2.501060,3.029389,8.716705,0.135518,5.013636,9.176017,-3.296707,-5.654836,-1.737138,4.703962,2.139740,6.034048,8.986964,-0.065547,-3.220493,3.471256,-4.889201,8.835789,-2.216381,7.320295,-6.250322,-0.699645,0.067166,9.025798,-6.788724,0.902231,-4.217954,-1.395666,-3.086989,-0.501883,2.514923,-5.518507,-0.805719,1.846518,-2.596015,4.006675,-4.607136,6.124523,-6.306333,1.007163,-2.875717,-7.159375,5.519657,-0.802527,-0.898146,-0.682591,-2.962782,1.559776,-1.117553,5.340371,3.877375,-3.154303,5.571078,-6.501115,-5.546093,-5.984008,-6.167682,4.138710,-2.301420,-4.128833,-8.039131,-8.364920,8.776018,-1.504004,-7.969251,-4.211844,-5.440457,0.077002,8.525656,5.498802,9.221210,-4.500765,-6.150727,-8.758341,0.438819,2.902967,0.315694,6.749716,7.317661,2.744171,7.775459,-9.305417,-2.829139,3.575591,1.897605,2.761953,0.734970,-5.887886,3.828810,-2.202482,0.084181,-1.326000,4.479453,0.859696,9.695138,-9.647418,5.244028,-5.403659,8.845767,3.487281,-2.064483,0.970316,-3.003053,-5.206905,-6.476430,-2.397378,-9.910913,0.267369,-4.128857,6.705901,9.654154,3.506941,-4.304041,-6.599146,7.317866,-9.717253,-6.111822,9.654918,7.179419,-5.953445,-8.221570,-5.228889,0.354910,-8.911480,-6.462120,-8.987599,-4.032295,-8.419690,1.314417,-2.853043,-0.459235,4.538512,-9.299334,9.965634,-1.709613,-3.314036,0.018090,4.867476,-4.160521,-4.579747,6.465356,-3.184197,-4.212898,-9.656447,0.579927,4.090767,4.195461,-1.039045,1.117949,-2.574120,4.998561,6.978157,5.276779,5.640798,-3.125708,-4.441771,-1.352272,9.096816,-1.428542,5.069259,-8.338112,9.144025,5.433070,-8.843654,-3.419133,-9.852004,5.981254,-6.792145,-7.171944,-7.131358,4.678349,2.725653,6.124403,9.215812,-6.114041,7.915238,9.665588,8.632532,-6.398306,7.609248,-6.030485,-7.101073,7.092996,-8.031270,-1.558831,4.569868,5.250990,-5.408549,9.432997,-2.848463,-9.420348,1.250125,7.681266,-0.388585,-7.830774,-1.161039,0.479404,-7.932754,6.313775,-3.508255,0.451254,6.092168,-9.045343,2.277912,9.197741,-3.803189,3.580512,4.525018,-7.622011,-0.781122,-3.796899,5.883890,5.733422,-7.493388,-9.183384,-9.876436,-7.120595,-0.972116,8.633637,5.498323,-2.959518,-5.860628,5.351394,-8.822138,6.065110,-5.565436,0.076143,6.138411,9.413401,1.569602,8.553063,4.100172,8.529320,-9.552180,5.436920,-2.327379,4.525984,1.789859,-0.864761,-9.373724,-5.340065,1.276156,-6.176679,-2.902423,9.881182,4.746999,7.439134,-8.195810,2.511378,-0.231675,-8.710256,-4.746777,8.776128,-7.171362,8.195421,-6.331497,6.295592,4.279091,-5.227680,0.909988,0.540978,-2.652834,3.447015,5.151512,-9.108724,3.094786,-9.790424,-9.722294,2.349121,-2.137248,-4.657457,-2.344421,-0.383200,1.759732,9.198802,-4.048316,-8.656444,-5.824731,-2.203766,-7.674919,2.494544,1.015628,7.326890,2.729021,5.536340,5.381018,-2.085216,3.171360,9.691229,-6.774122,-7.640265,0.884560,4.692998,-4.478170,3.912176,-8.205854,3.196992,0.778171,-2.496569,1.552287,-2.609695,4.315266,3.442423,0.622508,3.057851,1.030504,3.618264,-4.564879,-3.531154,-9.700761,2.452186,-1.869938,-3.925614,0.718296,6.655147,-8.133958,6.270932,-2.941804,7.705128,0.362890,9.140133,-3.648030,3.864294,-6.077114,3.007374,-0.819549,1.966106,2.110446,-0.941281,-2.482455,-9.239654,9.923272,-8.542211,-1.344015,8.849955,1.138068,-0.522948,8.614717,-6.835059,-3.436687,-4.381522,7.824032,6.340118,-1.039721,7.964704,7.909608,4.688751,-6.262833,6.867326,6.959088,-6.308361,8.324446,-0.278385,6.899805,-4.312201,9.490100,-9.946961,3.116481,8.035631,9.222930,-8.170022,-1.108369,1.264526,-2.198321,6.026559,9.886892,-8.967728,0.438678,-8.207083,3.809038,-6.016948,3.195178,4.912104,-6.665330,-0.391291,-2.826642,8.243736,7.272046,1.029953,1.129073,5.388555,-7.049255,8.834963,8.674265,-1.429156,2.410751,4.453646,5.116346,0.030606,6.704565,3.671459,-0.110319,0.955825,1.956400,6.884436,3.830682,-3.321601,-6.173346,2.689925,8.632859,5.200639,-2.569793,9.023718,3.493177,-1.462981,5.388359,-5.255885,-9.446164,2.573403,-3.188769,-4.908369,7.240300,-4.468611,-3.980128,9.568441,8.865469,-3.727162,7.561881,-5.455846,-9.743746,-4.172702,-1.685140,-1.528842,-8.092170,4.247752,-1.055238,-2.070524,-9.833264,-5.540719,5.327475,-8.368792,-0.532665,-2.554376,-8.005869,-1.303867,1.200197,-4.301355,-1.275639,-9.157654,-8.312576,4.389169,0.444864,4.503389,-0.567579,2.406828,7.021267,0.622202,-1.297564,-2.100243,-3.926488,-5.866647,9.071903,0.455380,5.187877,-9.991458,4.266660,-3.362442,4.891362,-9.001284,5.989433,0.222531,7.721401,-2.537060,9.459391,5.893025,-6.168285,9.301606,-7.864142,3.205144,1.762844,-3.921861,5.849495,1.593745,-1.501965,6.554756,1.570265,-0.204799,8.921749,3.857782,6.626252,-2.825994,-1.445026,7.294733,-9.510892,-3.342831,-9.349577,2.202604,4.053621,9.432363,-9.657761,-4.389124,8.720378,3.942252,1.309413,4.934883,2.968423,-2.238426,-2.565068,-9.332593,-3.439126,-1.604193,5.326406,1.737786,-1.720911,-8.246615,1.108852,5.920458,-2.929981,7.618256,4.705866,-6.888737,-0.944839,-1.074798,7.626378,8.930217,7.772042,-2.461776,8.184638,3.073180,-1.943880,3.597207,-4.610928,4.398693,6.634128,5.204385,8.568084,4.426846,-2.036451,-9.307315,-9.331334,-9.435947,1.560808,4.782122,-1.986202,6.753176,-2.684155,-5.737078,0.876793,8.870108,-5.720238,1.371493,5.831249,3.847385,-5.740405,9.037276,3.621766,-1.889912,-8.261211,-4.698326,-6.103423,-8.567001,-9.632636,-5.460266,-7.932922,-3.388706,-3.536880,-7.153129,-6.502195,3.739238,-7.001892,4.844675,-9.560551,-5.770713,4.825077,2.913755,-5.334586,8.278685,-6.791919,-2.354881,4.462563,0.791615,-0.806502,6.966077,7.966775,8.314258,4.803566,-7.477125,-4.439711,7.945256,9.723120,-9.992788,-7.520616,-2.732850,1.065229,9.147091,6.990974,-1.641584,-8.556014,-8.611788,-7.848647,7.781478,-1.621035,-5.670300,0.680478,3.155717,-5.906700,-4.278177,4.171368,-5.725300,-7.141592,9.434702,-9.467311,1.921698,-6.075212,4.152686,-5.048279,-3.569773,-8.557153,3.215419,-7.878532,-6.750214,-3.859598,0.894260,4.457174,-4.798320,7.132538,0.012640,4.439459,9.557436,-2.950123,6.872376,3.097926,8.512261,-2.054454,1.159894,6.889017,8.150346,5.608832,9.284384,-7.061443,-6.648215,-3.808091,-7.846577,-1.499375,3.453961,-0.926017,9.430678,-4.014606,1.180462,-0.801574,-3.091851,-6.953291,3.234134,-9.972048,-2.201386,1.819530,0.532934,-0.263552,1.121269,3.253472,0.307813,8.541942,7.978842,0.316597,-8.108357,-6.942078,-3.058900,7.486172,-5.109003,-3.315663,-3.693055,9.725527,0.725483,6.604747,-1.868179,3.765343,-1.904126,4.130357,5.829392,-5.237092,-9.524157,-9.088338,6.731673,-6.676326,5.305622,-1.879997,-8.268994,7.165534,3.786547,4.357902,1.113405,6.177279,7.279094,-5.169833,-0.078102,5.467518,2.632333,9.554731,8.165283,-0.478789,-7.615950,-5.491493,-6.869014,3.679342,5.521956,1.833273,1.447825,-2.857200,1.013952,5.341191,-7.214731,-4.549601,-4.514329,-5.953668,-9.387803,6.175414,-7.970672,9.660855,3.379523,-4.993670,1.777718,-5.818765,3.246955,-6.807490,5.788733,-3.995294,-9.856486,2.157298,-2.155832,-5.508788,-4.016532,0.166494,0.511142,3.317708,9.474412,1.090503,4.937145,-8.888479,9.219233,-7.548165,-5.786736,-4.823562,7.033345,-2.606737,5.350518,-1.041493,-1.994760,-3.169334,0.845820,-4.583192,-5.863516,5.948437,0.805492,-0.501740,-4.933619,2.124395,8.419337,8.736071,4.142339,-7.814442,-3.410106,-6.907393,-8.263511,9.696582,-2.733903,6.124655,3.340177,7.759583,-8.740089,3.953842,-9.447270,0.484130,-4.417697,-9.723282,-6.751553,4.781914,-8.865610,5.206697,-8.543875,-8.361781,4.113676,9.621470,-9.498044,3.226352,-7.121204,-2.072140,-0.141072,-7.077691,-0.357383,-9.083698,6.739071,-2.180445,-3.514946,4.547159,-5.694474,4.184457,8.620363,-8.452436,5.866379,-6.228554,9.601601,-4.901648,-6.772489,-9.528459,-1.291074,-1.415041,-8.655971,2.587115,-4.046027,-5.662291,-2.784838,-8.960378,-7.640929,6.940229,2.618474,-8.884275,-2.123562,-1.281341,4.104191,-4.705604,6.686991,-9.827891,4.112140,-8.335275,-3.809819,-3.909737,4.965946,-9.957954,4.374123,0.459219,5.195419,7.859468,8.091581,-8.491759,2.992182,-5.195271,9.201465,-5.042443,-2.922230,5.918325,7.720746,7.079194,-7.358454,9.484929,3.241978,-3.712110,-0.604507,2.683861,3.747244,-2.896437,-9.889129,-2.163421,4.887706,-5.471874,7.049843,-7.389761,4.488041,9.855100,4.400583,0.918155,-1.107116,0.365367,-6.941927,-4.141150,5.202447,-0.032172,6.482214,2.494432,2.765124,-4.845529,4.631464,-3.271400,-1.966439,4.983316,-6.849670,-2.892126,-0.468807,4.108930,-4.204159,5.337195,-0.264512,4.794525,-0.763266,4.730400,-2.018102,-1.221891,-7.088672,-0.074544,7.241765,4.092235,5.645328,-7.341535,6.050106,-9.679083,9.420437,7.700711,4.325128,6.695358,-3.762584,7.808691,-9.953096,-1.608940,-1.488777,7.994719,-4.083997,7.160219,-8.300636,-1.066821,8.271133,-8.141428,-8.553099,4.858877,-8.804984,9.879502,9.673573,-9.289837,-5.983058,-2.860831,0.342139,-1.509166,-3.526929,4.492946,4.344330,6.184092,-0.542212,3.732764,5.140505,-7.672959,1.139543,-9.663703,7.151525,-5.962550,-3.015804,-1.624075,-8.040203,7.422854,4.536456,-4.864202,-9.438364,5.995111,9.956516,8.405631,6.023502,-8.366624,7.845367,1.324334,8.687414,0.045766,6.596274,-8.271336,-2.045652,-2.923147,-5.816178,2.562209,-6.492809,-3.096421,6.055479,4.764709,0.257091,-3.022568,-5.709647,2.321449,9.911976,7.319232,7.926760,5.779143,-5.076929,6.016146,-3.346525,5.965132,9.510256,-6.865941,-0.944899,-8.683031,3.486921,-2.604945,-7.004600,-8.055863,-1.268596,-2.106203,8.904851,-7.366382,-7.043839,-3.519894,-5.055872,0.772697,1.214767,-6.731626,4.623700,-2.986523,8.056418,6.171274,-3.457162,-2.564065,6.417442,-3.281808,-9.691523,-4.675876,-6.451165,0.749264,9.855345,4.607155,-6.161887,-1.336058,-0.534558,-0.385135,7.382646,2.802801,2.790650,8.181344,1.012297,6.010173,-1.310281,-5.159224,2.272231,7.499836,-2.967199,0.580863,-3.208963,0.275439,-8.736948,6.098843,8.809733,-3.272999,-7.426181,7.080483,1.138714,0.909193,1.063264,5.372694,2.090282,6.438243,5.076459,-3.691617,-1.513965,-1.567282,2.236653,-6.775784,-6.472516,-0.763724,-2.221318,-4.259109,-2.571011,0.911307,5.637115,-7.971410,5.811452,5.033502,1.168085,1.060280,2.806147,-9.337545,6.369417,9.864037,1.453869,-7.143647,9.600034,-8.319482,-4.152283,3.511292,-1.379555,-4.293426,7.241668,-1.582801,2.949906,-8.202776,8.123355,2.722931,-0.887681,-8.070645,-5.082078,3.714871,-3.670452,-7.508148,-6.634626,-7.178901,6.203764,-1.623508,-0.363777,2.783886,-5.715634,-1.316615,4.239612,-4.380103,-2.655012,3.113432,5.188452,8.095904,-3.043819,-0.166539,1.448637,3.624966,5.468763,-6.930943,-4.237016,8.493770,6.638073,-0.499656,-5.979181,-2.856298,-2.517824,2.336660,4.855650,3.138943,-8.995258,-0.114021,-7.965823,4.026967,6.130105,-2.870281,3.225172,4.287674,5.175643,7.865459,-7.895453,6.885875,-1.012715,6.496330,9.726564,6.820051,-3.732872,6.387600,-2.714248,9.823263,-6.350141,8.483149,2.437744,5.935574,8.158128,-4.234333,-2.596587,-6.842367,9.701145,-0.952760,-1.090555,-8.432784,1.585264,8.970676,-1.067661,-2.575452,-8.971899,8.124607,-8.936790,8.587633,5.509679,7.460732,2.740233,-1.769181,4.364585,2.424008,8.878914,5.890723,7.075511,-4.873939,4.726678,6.447248,-3.713413,1.905974,7.329282,-1.402302,6.926009,-5.486308,8.982761,0.414127,-6.142636,-9.809967,-5.318534,-1.350258,8.682328,-2.426339,5.950709,-5.724453,-6.284386,-3.105444,-6.841796,-5.718617,4.381154,-0.842456,-7.778330,4.559259,-9.680193,-5.080436,0.109890,2.803508,5.045000,4.548028,6.414199,-5.094266,-0.662248,5.244380,-2.349834,-0.725243,-1.421387,-2.552669,-5.911605,2.284967,-3.991426,2.837562,9.766268,-3.471462,-9.850777,4.184649,9.186926,7.702962,7.626943,8.092024,8.579464,4.468502,-8.550107,-6.250908,9.219749,-3.471454,5.981821,-9.752152,-2.590537,5.061800,-2.880453,-7.292304,-2.801230,1.012195,-2.361535,0.173805,-9.619907,2.644308,6.490173,4.785116,-3.164126,-4.429580,-8.219285,-2.862556,9.752747,3.023106,-1.983065,8.195223,-7.477716,-4.773058,1.798510,-0.061207,-3.452070,3.152556,5.702309,1.152828,-6.669200,5.916612,-2.576466,9.819169,8.689443,8.705486,-8.928572,-3.534606,-5.803525,2.990623,8.989899,6.221847,4.575792,8.505748,-6.438543,-1.206778,-8.466879,6.908463,4.982191,-2.084061,6.308741,5.684888,-0.220471,-1.402323,-8.333314,6.440105,4.498016,-4.008072,0.250912,4.436144,-0.064243,-3.200144,6.926821,0.112664,-8.193458,0.846131,4.465150,8.922314,6.266161,-1.826434,8.921524,6.216892,5.951517,5.801637,5.804789,-5.622855,4.461051,-1.553523,-4.099035,3.454817,1.100131,-0.023676,4.566915,-9.855683,-7.542944,0.716463,-8.448643,-0.692271,-5.047218,-6.652093,3.962619,3.509849,4.321189,5.013126,3.707454,-9.321904,-4.019007,7.371958,-1.325816,-4.700716,3.422137,-5.564451,-3.500751,7.474130,5.072142,-8.091097,-0.033954,9.231285,8.252919,3.387461,5.604410,0.893543,-8.785170,-6.641644,-7.676791,3.606211,-2.322855,-9.910783,3.409544,2.530529,4.215565,4.443557,5.610387,-9.652095,0.593337,2.326420,5.905679,-6.534937,4.015127,6.102367,8.450045,3.029275,-6.205483,-3.242074,5.561912,-2.974005,2.198579,-6.252770,-6.593601,0.991722,-0.379066,4.644420,8.374256,-4.065769,-2.049696,1.182729,-4.085508,8.089289,-6.751041,-8.729017,0.178216,-5.425518,-1.140997,9.481026,0.721016,0.243811,8.672821,-0.004734,-5.699545,3.896484,-7.490296,7.392051,-1.786314,9.729705,-0.648982,-5.614469,2.595264,9.223137], dtype = "float32")#candidate|312|(2548,)|const|float32
bop_313 = relay.logical_xor(uop_309.astype('uint64'), relay.reshape(const_312.astype('uint64'), relay.shape_of(uop_309))) # shape=(2548,)
output = relay.Tuple([call_285,const_286,uop_302,call_304,bop_313,])
output2 = relay.Tuple([call_288,const_286,uop_302,call_305,bop_313,])
func_335 = relay.Function([var_279,var_280,], output)
mod['func_335'] = func_335
mod = relay.transform.InferType()(mod)
var_336 = relay.var("var_336", dtype = "uint64", shape = (2, 11, 10))#candidate|336|(2, 11, 10)|var|uint64
var_337 = relay.var("var_337", dtype = "uint64", shape = (2, 11, 10))#candidate|337|(2, 11, 10)|var|uint64
output = func_335(var_336,var_337,)
func_338 = relay.Function([var_336,var_337,], output)
mutated_mod['func_338'] = func_338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_358 = relay.var("var_358", dtype = "uint16", shape = ())#candidate|358|()|var|uint16
var_359 = relay.var("var_359", dtype = "uint16", shape = (14, 10, 8))#candidate|359|(14, 10, 8)|var|uint16
bop_360 = relay.logical_xor(var_358.astype('uint16'), var_359.astype('uint16')) # shape=(14, 10, 8)
bop_374 = relay.bitwise_or(var_359.astype('uint16'), relay.reshape(bop_360.astype('uint16'), relay.shape_of(var_359))) # shape=(14, 10, 8)
output = bop_374
output2 = bop_374
func_381 = relay.Function([var_358,var_359,], output)
mod['func_381'] = func_381
mod = relay.transform.InferType()(mod)
mutated_mod['func_381'] = func_381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_381_call = mutated_mod.get_global_var('func_381')
var_383 = relay.var("var_383", dtype = "uint16", shape = ())#candidate|383|()|var|uint16
var_384 = relay.var("var_384", dtype = "uint16", shape = (14, 10, 8))#candidate|384|(14, 10, 8)|var|uint16
call_382 = func_381_call(var_383,var_384,)
output = call_382
func_385 = relay.Function([var_383,var_384,], output)
mutated_mod['func_385'] = func_385
mutated_mod = relay.transform.InferType()(mutated_mod)
var_793 = relay.var("var_793", dtype = "int8", shape = (6, 16, 6))#candidate|793|(6, 16, 6)|var|int8
const_794 = relay.const([[[-10,-8,-9,-2,3,3],[6,-7,4,-5,1,8],[7,-3,-4,-7,-1,5],[-2,-4,-5,-4,2,3],[-7,7,-6,-2,-2,9],[7,-2,3,-10,-4,-9],[-1,10,-2,9,3,-9],[-10,1,-5,-10,8,-5],[-9,5,1,-4,5,-8],[-7,10,5,-9,2,7],[-10,-2,-10,9,-3,-5],[-10,-9,-1,4,7,7],[3,7,6,3,-2,4],[3,1,10,4,-3,5],[-1,-3,4,10,-4,5],[10,7,6,-4,-7,-6]],[[-1,8,-5,-7,3,7],[-9,-7,4,4,9,-8],[3,3,-6,-8,1,-10],[-9,5,6,1,8,10],[-7,8,6,-2,-7,-8],[6,-2,1,5,9,-4],[-1,2,-1,1,-9,-6],[4,-5,-3,-6,10,-5],[-9,3,-8,5,-1,9],[1,2,1,-6,-3,8],[7,-2,3,2,-8,10],[-1,7,9,-6,8,-2],[-3,5,-1,-4,8,-9],[-5,-1,-3,1,5,10],[6,6,-3,4,-7,3],[-4,8,3,3,6,3]],[[8,-7,-3,-6,-4,-4],[9,4,1,-5,6,-8],[-3,-9,8,10,7,6],[-6,-9,-3,9,3,9],[3,-8,9,10,-7,-1],[-2,-1,-2,-8,-9,1],[10,-5,3,6,8,-5],[-9,9,5,-3,2,-7],[-10,3,2,9,-3,-6],[8,2,-5,7,3,2],[-7,-8,-8,5,8,5],[-3,-3,-1,-3,-10,-9],[6,-8,1,9,-4,8],[10,8,-1,-1,9,1],[10,9,2,4,1,7],[4,1,-4,10,2,3]],[[2,8,-7,-9,6,8],[5,6,-6,9,2,9],[-9,-10,-8,-2,9,4],[-2,3,-3,8,5,-6],[-8,2,-5,3,-10,2],[-8,-2,6,-2,-9,6],[8,-9,-7,-5,-10,-6],[7,-6,4,7,-2,-8],[-3,9,-5,-3,1,5],[7,-5,-4,9,-2,-8],[-4,-6,-4,-7,5,2],[-2,-1,8,-1,6,1],[8,-3,6,-5,-8,9],[7,10,1,-10,-8,-4],[-8,1,-2,6,-4,-8],[-10,-3,6,-10,-5,7]],[[-4,-8,9,-9,6,3],[-2,-6,7,9,9,-8],[1,1,10,-3,-4,-9],[1,-2,-7,5,-5,6],[-6,-1,-4,-3,-7,-4],[-2,-3,7,9,-9,-7],[7,4,4,4,-4,9],[4,-4,6,-9,-2,-5],[4,7,7,10,5,-6],[5,-10,-4,4,1,-10],[5,-7,2,5,10,-1],[-7,2,4,-2,-5,5],[-3,9,8,-3,9,-9],[-6,8,8,4,8,-9],[2,-1,-6,-10,9,5],[9,10,1,-10,4,2]],[[5,5,-2,10,-6,4],[-9,-2,-2,-6,4,10],[5,-2,-9,-9,2,10],[10,7,2,9,6,2],[6,-10,3,-8,3,5],[4,-6,10,10,7,6],[-1,-1,-6,-4,10,-7],[-7,1,-4,-1,10,7],[-3,-10,6,-8,-2,-3],[-1,-3,4,-3,-4,2],[1,-8,-9,3,-2,2],[10,7,2,-2,-1,-3],[-6,8,1,10,1,4],[-5,-4,9,-6,-10,5],[-5,3,4,10,2,-4],[6,-6,-3,9,-7,-4]]], dtype = "int8")#candidate|794|(6, 16, 6)|const|int8
bop_795 = relay.equal(var_793.astype('bool'), relay.reshape(const_794.astype('bool'), relay.shape_of(var_793))) # shape=(6, 16, 6)
func_381_call = mod.get_global_var('func_381')
func_385_call = mutated_mod.get_global_var('func_385')
var_804 = relay.var("var_804", dtype = "uint16", shape = ())#candidate|804|()|var|uint16
const_805 = relay.const([[10,6,-3,-8,8,8,-8,1,7,-8,-6,7,-3,-8,4,-1,-5,-2,3,3,-9,-7,4,-9,-2,9,-7,1,-1,4,-7,10,9,-2,-3,6,-6,2,-1,-2,-7,10,-9,-5,1,6,4,2,9,10,9,-7,-8,-6,10,-1,-2,3,5,-2,9,6,5,1,-2,-7,4,7,-2,3,4,9,7,7,-9,-10,-6,-4,-2,6,-3,-6,-6,-10,-9,-8,-9,9,8,9,7,-6,4,6,4,-2,3,-5,-3,9,10,-5,4,-4,-1,10,2,1,-7,-2,6,-9,1,2,-10,6,-8,-10,4,-7,-9,-5,2,-5,-2,1,8,-1,-3,-3,-3,5,-9,-6,-9,9,7,-8,-7,-9,7,-9,9,6,-2,-4,-7,6,6,-8,-2,-2,1,1,3,9,9,9,-9,-9,5,5,4,7,-3,4,5,8,8,-6,-9,-2,-4,-8,5,5,3,-1,3,-9,-4,6,1,-5,-3,-1,-7,-5,-2,-5,2,-7,2,-4,-6,3,-7,9,-1,6,-7,-8,-10,5,-6,10,-2,5,-3,-7,3,8,9,8,6,-5,3,-7,-6,6,5,-2,-1,1,7,4,9,9,-3,-9,-3,2,-10,8,1,10,9,5,10,-5,-5,8,-3,2,-6,-3,-5,-4,3,-1,-5,2,-6,4,-2,-4,8,-1,-2,6,-5,-8,3,-5,3,3,-8,2,2,9,-4,3,6,-2,-8,-8,-7,-3,-8,9],[4,-9,-6,6,4,-4,-10,-2,-2,9,-5,2,1,4,-2,1,4,-10,-9,-8,2,3,8,2,-2,-9,6,-8,-7,-8,-5,6,-9,8,1,-2,10,8,-3,-8,-1,-1,-8,-8,1,-5,5,4,8,-5,-1,-5,-4,-9,-3,-3,5,3,-3,10,7,10,9,-9,9,-5,10,-1,2,3,-6,4,-2,-7,-10,-1,-2,-10,-9,7,2,8,3,8,7,3,-10,7,5,-9,8,-1,-2,-1,-1,-9,-2,5,-4,1,4,7,2,-8,-5,-2,-6,5,-4,-1,7,-8,-6,-2,-7,2,-8,7,-2,-5,-1,-9,-9,-7,1,10,7,-6,-2,-3,-3,2,5,-9,4,3,-2,2,-9,4,8,-9,-1,-10,-7,-4,10,-2,-7,4,-9,-9,-1,2,-2,1,4,7,-7,10,9,-4,2,-6,9,2,-8,8,-4,9,-1,-5,10,-10,-6,9,-6,8,1,9,-5,7,-4,5,9,3,6,-7,-10,3,9,5,7,5,7,-7,9,-6,-10,2,-6,-1,4,9,5,2,-6,-3,-10,10,-4,-10,10,7,-8,9,-5,8,-8,-3,-9,-1,4,9,-2,-1,-5,-1,-10,6,9,-4,8,4,-9,3,6,4,-7,3,-1,8,-9,2,9,-7,-5,-5,-3,1,7,-1,-7,2,7,3,-2,-3,-10,-10,4,9,8,-4,-2,4,-10,-2,-9,3,2,1,7,-6,-10,-5,-4,4,8,-5],[-5,-10,4,-4,-8,7,10,-7,4,5,-10,8,7,-7,10,-3,-9,-9,-7,-5,7,5,2,6,5,-1,4,-10,1,-3,-9,5,-1,2,5,-1,1,-2,7,-2,1,-9,5,3,-9,9,5,10,8,2,-1,-8,8,-7,1,-9,-3,7,-10,-3,9,10,6,7,-2,-9,-1,-5,-8,6,-10,-4,-5,-10,-3,7,3,-7,-5,-2,3,-10,-8,-3,-7,-10,6,-1,-6,8,-4,-3,-10,5,-5,4,8,-2,1,7,-6,9,10,3,-1,-5,-5,9,9,3,-2,-3,3,1,3,-5,4,1,2,-9,-6,-5,7,6,-1,-1,8,-3,9,6,-1,-1,5,-10,7,-1,8,-1,1,10,-6,4,4,4,3,-5,3,1,7,6,-1,-6,2,-3,-5,-4,3,-7,-5,-10,3,3,1,-5,-5,2,-7,-6,-8,-1,-1,5,2,3,-3,8,-8,3,6,8,8,-7,8,3,2,10,10,9,7,1,-5,-5,1,2,3,-7,8,5,9,4,1,-5,9,-3,4,-6,5,1,9,-3,1,-5,-6,-9,-8,6,-6,10,-7,-2,9,9,9,-9,-5,-1,4,7,6,-7,-10,-2,6,-4,7,3,3,-7,3,-9,10,-5,7,4,-10,6,4,6,1,2,-7,-3,6,-3,8,9,3,2,-8,1,-7,-7,6,8,5,-7,-4,3,10,1,7,8,4,9,-6,9,1,2,-1,-7],[2,-9,4,-6,-7,4,7,-5,2,2,-8,1,6,7,6,4,-9,4,-6,-2,1,8,-10,10,6,-1,-4,-4,-4,10,6,-9,8,2,6,-8,2,5,-8,3,9,-8,4,3,-4,1,-6,7,-4,9,-3,-8,-2,4,-10,-4,2,-9,-8,8,7,10,-8,9,-5,1,-5,10,4,7,-4,-10,-7,-3,-3,-4,8,4,-2,9,1,-7,1,-6,-3,6,8,-4,-6,9,-9,10,9,-5,-6,2,6,-4,7,1,-4,7,-2,-6,-1,-8,8,-8,-1,-9,9,4,1,2,9,7,-10,-5,9,-1,-6,9,-8,-10,3,-7,3,8,1,-1,3,8,-6,6,-6,-4,-7,-4,-3,3,6,-8,1,-4,-8,-7,-6,-6,7,6,10,-6,4,-9,6,4,-2,-4,8,7,4,-1,-6,3,-9,-9,-10,6,-4,-2,9,-4,-8,-5,-8,-4,-6,-5,2,-8,-8,1,-1,-3,-2,-7,10,-3,2,7,-10,-4,-6,1,-6,10,-7,1,6,6,8,-10,-7,-7,10,-10,-4,9,1,7,-8,-1,-8,4,6,-3,-3,3,5,-10,-1,-7,5,5,5,-5,-1,-7,-1,-2,-1,1,7,4,1,10,6,-9,5,-7,9,3,-10,-10,3,8,-8,-8,3,10,-7,8,-10,-4,-4,-7,-5,-5,-3,6,9,-10,2,-4,9,9,-6,9,7,-5,4,-3,4,-2,3,5,-1,-10,2,-8]], dtype = "uint16")#candidate|805|(4, 280)|const|uint16
call_803 = func_381_call(relay.reshape(var_804.astype('uint16'), []), relay.reshape(const_805.astype('uint16'), [14, 10, 8]), )
call_806 = func_381_call(relay.reshape(var_804.astype('uint16'), []), relay.reshape(const_805.astype('uint16'), [14, 10, 8]), )
func_381_call = mod.get_global_var('func_381')
func_385_call = mutated_mod.get_global_var('func_385')
call_816 = func_381_call(relay.reshape(var_804.astype('uint16'), []), relay.reshape(const_805.astype('uint16'), [14, 10, 8]), )
call_817 = func_381_call(relay.reshape(var_804.astype('uint16'), []), relay.reshape(const_805.astype('uint16'), [14, 10, 8]), )
func_163_call = mod.get_global_var('func_163')
func_168_call = mutated_mod.get_global_var('func_168')
var_819 = relay.var("var_819", dtype = "uint64", shape = (2548,))#candidate|819|(2548,)|var|uint64
call_818 = relay.TupleGetItem(func_163_call(relay.reshape(var_819.astype('uint64'), [13, 14, 14]), relay.reshape(var_819.astype('uint64'), [13, 14, 14]), relay.reshape(var_819.astype('uint64'), [13, 14, 14]), ), 0)
call_820 = relay.TupleGetItem(func_168_call(relay.reshape(var_819.astype('uint64'), [13, 14, 14]), relay.reshape(var_819.astype('uint64'), [13, 14, 14]), relay.reshape(var_819.astype('uint64'), [13, 14, 14]), ), 0)
func_163_call = mod.get_global_var('func_163')
func_168_call = mutated_mod.get_global_var('func_168')
call_822 = relay.TupleGetItem(func_163_call(relay.reshape(call_818.astype('uint64'), [13, 14, 14]), relay.reshape(call_818.astype('uint64'), [13, 14, 14]), relay.reshape(var_819.astype('uint64'), [13, 14, 14]), ), 0)
call_823 = relay.TupleGetItem(func_168_call(relay.reshape(call_818.astype('uint64'), [13, 14, 14]), relay.reshape(call_818.astype('uint64'), [13, 14, 14]), relay.reshape(var_819.astype('uint64'), [13, 14, 14]), ), 0)
output = relay.Tuple([bop_795,call_803,var_804,const_805,call_816,call_818,var_819,call_822,])
output2 = relay.Tuple([bop_795,call_806,var_804,const_805,call_817,call_820,var_819,call_823,])
func_828 = relay.Function([var_793,var_804,var_819,], output)
mod['func_828'] = func_828
mod = relay.transform.InferType()(mod)
mutated_mod['func_828'] = func_828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_828_call = mutated_mod.get_global_var('func_828')
var_830 = relay.var("var_830", dtype = "int8", shape = (6, 16, 6))#candidate|830|(6, 16, 6)|var|int8
var_831 = relay.var("var_831", dtype = "uint16", shape = ())#candidate|831|()|var|uint16
var_832 = relay.var("var_832", dtype = "uint64", shape = (2548,))#candidate|832|(2548,)|var|uint64
call_829 = func_828_call(var_830,var_831,var_832,)
output = call_829
func_833 = relay.Function([var_830,var_831,var_832,], output)
mutated_mod['func_833'] = func_833
mutated_mod = relay.transform.InferType()(mutated_mod)
const_921 = relay.const([[[1.266803,-0.437687,5.120981],[-9.652604,2.739338,-5.543534],[-7.159088,-0.806851,-7.251693],[-5.450195,-7.971966,-6.651799],[-1.661224,-4.287318,0.723272],[-4.277457,0.836148,-9.598203]],[[-1.922169,-4.553860,0.985019],[1.564151,9.523650,-4.081561],[8.227164,-1.097580,-1.875032],[6.434659,1.994232,-4.625588],[-4.699789,4.033633,-3.999617],[-6.260589,0.538223,-3.009645]],[[7.333468,-1.860920,0.670572],[-8.204398,2.069673,9.659258],[2.871317,-0.339228,-3.707929],[6.168795,2.719077,-9.146491],[-4.574043,5.677052,-8.868925],[-1.607308,6.385397,-4.105453]],[[-4.423156,0.140856,6.497309],[6.654357,-9.456310,1.189339],[-5.336279,5.991563,-4.634103],[0.608390,-4.275684,-3.837671],[-4.986835,-3.612757,1.930300],[0.665887,0.762619,3.663934]],[[0.859254,0.998273,-3.147741],[-2.485106,9.522713,2.760363],[-7.379349,0.836131,6.782557],[9.795685,-8.197092,0.564975],[-9.232387,6.189977,1.051933],[8.869858,7.043051,-3.863801]],[[8.641578,3.971711,-0.994772],[-3.650190,0.735100,3.574998],[6.279612,0.633820,-4.790813],[5.473460,8.165139,-9.795226],[8.434943,2.551992,-2.349870],[5.373639,-4.595949,1.080559]],[[5.053805,0.716672,0.422976],[2.416667,6.877634,-9.403614],[0.221997,4.107192,5.289792],[3.196750,1.177607,4.407598],[1.338996,2.308433,1.575001],[-8.647614,9.045988,-9.241710]]], dtype = "float64")#candidate|921|(7, 6, 3)|const|float64
uop_922 = relay.atanh(const_921.astype('float64')) # shape=(7, 6, 3)
output = relay.Tuple([uop_922,])
output2 = relay.Tuple([uop_922,])
func_924 = relay.Function([], output)
mod['func_924'] = func_924
mod = relay.transform.InferType()(mod)
output = func_924()
func_925 = relay.Function([], output)
mutated_mod['func_925'] = func_925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mod.get_global_var('func_924')
func_925_call = mutated_mod.get_global_var('func_925')
call_980 = relay.TupleGetItem(func_924_call(), 0)
call_981 = relay.TupleGetItem(func_925_call(), 0)
output = relay.Tuple([call_980,])
output2 = relay.Tuple([call_981,])
func_997 = relay.Function([], output)
mod['func_997'] = func_997
mod = relay.transform.InferType()(mod)
mutated_mod['func_997'] = func_997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_997_call = mutated_mod.get_global_var('func_997')
call_998 = func_997_call()
output = call_998
func_999 = relay.Function([], output)
mutated_mod['func_999'] = func_999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mod.get_global_var('func_924')
func_925_call = mutated_mod.get_global_var('func_925')
call_1047 = relay.TupleGetItem(func_924_call(), 0)
call_1048 = relay.TupleGetItem(func_925_call(), 0)
var_1060 = relay.var("var_1060", dtype = "float64", shape = (7, 6, 3))#candidate|1060|(7, 6, 3)|var|float64
bop_1061 = relay.logical_or(call_1047.astype('bool'), relay.reshape(var_1060.astype('bool'), relay.shape_of(call_1047))) # shape=(7, 6, 3)
bop_1064 = relay.logical_or(call_1048.astype('bool'), relay.reshape(var_1060.astype('bool'), relay.shape_of(call_1048))) # shape=(7, 6, 3)
func_997_call = mod.get_global_var('func_997')
func_999_call = mutated_mod.get_global_var('func_999')
call_1069 = relay.TupleGetItem(func_997_call(), 0)
call_1070 = relay.TupleGetItem(func_999_call(), 0)
func_381_call = mod.get_global_var('func_381')
func_385_call = mutated_mod.get_global_var('func_385')
const_1074 = relay.const(3, dtype = "uint16")#candidate|1074|()|const|uint16
var_1075 = relay.var("var_1075", dtype = "uint16", shape = (1120,))#candidate|1075|(1120,)|var|uint16
call_1073 = func_381_call(relay.reshape(const_1074.astype('uint16'), []), relay.reshape(var_1075.astype('uint16'), [14, 10, 8]), )
call_1076 = func_381_call(relay.reshape(const_1074.astype('uint16'), []), relay.reshape(var_1075.astype('uint16'), [14, 10, 8]), )
uop_1082 = relay.sinh(bop_1061.astype('float64')) # shape=(7, 6, 3)
uop_1084 = relay.sinh(bop_1064.astype('float64')) # shape=(7, 6, 3)
func_163_call = mod.get_global_var('func_163')
func_168_call = mutated_mod.get_global_var('func_168')
const_1087 = relay.const([1,-7,-6,-1,-9,1,-8,3,-6,-7,-7,-3,3,-8,4,-6,-7,-9,9,7,10,-9,-6,10,9,3,8,-7,-3,9,-4,-6,9,3,5,7,-9,6,1,7,3,-5,6,-1,9,-10,-6,-4,-2,-4,9,4,10,-5,-4,-10,-4,10,-9,1,-1,-2,7,-4,3,8,1,-1,-10,3,-3,-4,10,-7,5,6,6,4,4,-4,6,-10,-4,8,-9,1,-6,7,9,2,1,-1,-5,-2,-1,-5,-10,3,-6,-1,2,5,9,1,-7,3,2,-6,-8,-6,-9,-5,-8,5,9,-8,-10,-6,-8,-8,-1,-4,-4,10,3,3,10,10,-8,1,3,-8,-4,-1,-3,-9,9,-7,-6,-6,-6,-8,7,-4,3,2,-7,-8,-3,5,-7,10,10,10,4,-2,5,7,-9,6,-8,-7,-7,8,-3,7,9,-7,-5,-4,5,9,7,-1,-7,-8,5,2,8,3,-6,3,-8,-4,-1,9,-4,7,4,-8,7,10,1,4,-3,-5,7,-2,-10,5,-7,-1,-5,-2,6,-4,8,-5,-5,10,-5,-4,-3,-7,-7,8,9,2,-6,2,6,5,9,5,-8,-9,10,-5,-4,-7,5,2,3,-7,-10,-2,-5,10,-6,8,-10,5,2,2,-4,-6,4,-4,-10,7,10,-6,-6,-10,3,-4,-7,-4,3,-7,-5,-8,1,-8,-1,-2,-4,-7,-7,3,-9,5,-8,-6,-5,7,-8,-10,7,9,-3,-10,-9,7,5,8,-7,-9,3,7,2,9,1,10,-7,5,-2,-7,1,9,-4,-2,-3,7,10,-6,-9,4,-6,9,3,-5,8,-6,-6,7,-3,10,-9,3,-2,-2,6,3,10,7,-8,10,6,7,2,-1,-2,-2,9,-2,2,4,-2,10,-10,7,1,4,-3,9,-4,10,-3,-8,-6,5,-4,8,5,10,-6,3,-2,7,9,-1,-8,8,-1,-4,-7,-7,-8,-9,-2,8,3,7,2,3,10,2,-4,9,-7,4,-4,4,-3,-4,-9,-7,6,2,-10,9,10,9,-4,-1,3,-4,4,6,-3,6,-5,-6,7,-10,4,6,-3,-2,-3,-9,-8,-3,2,-2,2,-7,-1,7,-5,-4,8,-5,-6,7,9,8,-8,-10,2,7,1,2,-9,1,-8,2,-8,-9,5,-6,4,2,6,-4,5,6,-5,10,-9,-9,8,5,10,8,9,-10,9,5,-3,8,10,3,-2,1,-4,8,-2,7,6,7,-1,-8,-8,-8,4,10,9,1,-8,3,-5,-5,-6,8,8,-7,4,-1,-10,5,6,8,-9,-7,5,9,2,6,-4,10,-2,1,4,-8,3,-8,9,2,-7,4,-2,-2,7,-2,2,5,1,-2,9,9,5,9,-3,9,4,4,6,-10,-3,6,-6,-9,-8,-2,-1,9,6,10,-2,3,-4,-4,2,5,-8,-1,3,-1,-1,8,-2,9,-8,1,-8,8,1,2,5,9,8,10,-9,2,4,3,-8,5,-1,-6,3,9,-7,1,10,-7,-1,-10,6,2,2,5,10,-6,10,-10,-7,9,1,5,-10,-10,9,-1,1,-6,-1,-5,-3,-3,-6,-8,-1,-8,-6,6,7,-7,7,3,3,3,10,-6,2,8,2,2,2,10,2,4,-1,8,-8,5,8,-5,7,-3,-3,-6,4,2,7,4,9,1,-6,7,-9,5,-2,8,-6,-10,-2,7,6,2,3,-3,3,-2,4,-4,4,2,4,9,3,-10,-8,10,6,5,9,4,3,-2,-7,-2,8,9,6,-1,-9,-1,-7,1,3,7,-8,-4,6,8,2,4,-5,-1,3,7,4,1,9,9,9,-5,-4,8,5,-3,7,9,2,-1,4,9,8,-1,9,2,-3,-5,-6,-9,8,-9,9,4,-8,6,-5,-7,-2,-1,-8,1,9,-10,-6,7,-1,8,4,3,7,1,-6,-4,-9,-1,9,10,-9,-5,1,8,10,-6,-8,-6,10,-6,10,-5,8,-7,2,-6,-10,-6,7,-5,-2,3,9,6,9,-6,-3,-9,10,9,-5,-3,-8,-8,-4,1,-5,5,-4,-3,-2,-3,1,9,1,-3,3,-1,-4,-5,3,4,2,2,-10,-10,-4,-1,-8,8,8,-4,-9,3,8,-4,6,9,-7,4,3,-4,-9,-4,5,4,5,-4,7,-8,5,-5,1,-1,-2,8,10,-4,6,6,4,-3,-2,-3,-2,3,4,10,-10,4,5,9,3,-4,5,-8,-2,6,-8,10,-10,9,10,9,-2,4,-6,-3,-8,8,7,-10,9,-2,7,-8,4,10,9,-6,4,-8,-4,-9,-8,-8,3,5,-6,-10,8,9,-5,7,-10,-7,-6,-7,6,5,-1,10,-10,7,-3,-8,-4,4,-6,7,6,2,-9,-4,-3,10,3,1,6,-3,6,9,-6,1,-3,-10,10,-3,-1,3,-10,-9,4,10,9,-8,-5,-4,7,-5,-4,9,6,-5,1,-10,-1,-5,10,-5,-9,5,8,-4,-7,-5,-3,6,-6,-6,-9,9,-7,6,-10,-8,4,2,5,8,5,4,8,7,3,3,8,-3,-6,2,-2,6,6,-9,-4,-4,10,8,9,4,-7,-3,10,-1,7,-4,-8,4,-10,6,1,4,-9,1,-8,-10,-5,1,9,2,9,-4,8,-10,4,-4,-5,8,1,-2,8,5,4,-7,-1,-2,6,-7,5,-3,-5,-6,5,6,5,6,-1,5,8,2,-2,10,-10,4,-8,6,4,-6,6,-9,-2,-4,-8,10,-4,5,-5,-6,6,2,-9,-9,-10,3,9,-9,-7,-5,6,8,8,-8,2,9,5,2,-8,6,8,-6,-1,9,9,-10,-1,-5,-4,1,-6,-4,10,5,-8,7,-10,6,-7,-7,1,9,8,9,6,9,-8,5,10,-7,-10,-6,-7,-4,-7,1,10,10,-6,1,-8,-6,-5,8,10,6,2,-2,4,5,9,-3,-8,7,1,7,-10,10,1,-9,-5,-3,-6,-8,-3,6,-1,-8,-2,-4,-5,-6,2,-8,-6,-6,-3,8,5,4,8,-7,8,7,-2,-5,-2,10,7,-10,7,5,-6,1,-8,-1,-4,-5,-6,2,-5,-5,-6,-4,-4,-7,2,-3,5,-2,-9,-1,-1,-5,1,7,4,5,-6,6,-3,3,5,4,9,4,8,1,4,-8,-3,2,-4,9,6,-4,-8,-2,2,-6,-1,7,8,9,-3,-6,2,6,-5,-10,2,-9,8,5,7,-10,-4,8,-6,3,-3,-8,8,-3,-10,-5,-4,5,6,-3,-1,-1,-10,6,-5,-7,-7,7,10,-8,2,3,8,9,7,-6,5,-5,8,2,8,4,-4,-1,-1,-5,2,1,5,3,4,-2,9,-5,-7,-10,4,-2,-7,3,6,10,-5,10,-3,-1,4,-5,1,10,6,-4,-6,-1,3,-10,1,7,-3,5,9,4,-9,6,10,7,8,6,-2,-8,10,-4,-9,6,-7,9,-7,9,1,-8,-3,-5,-8,8,10,7,-3,-1,-3,6,8,-7,-6,10,4,-8,-5,-2,8,5,4,-5,4,-1,3,-6,-3,-3,-1,-8,-5,4,3,-2,-3,-6,10,6,-9,10,4,-10,-1,6,10,-7,-2,2,6,-4,-3,-8,6,-7,-10,-7,-3,3,-2,3,5,-6,10,10,-3,5,-9,-9,6,9,2,-2,3,-8,4,-6,3,6,9,9,2,-8,-6,7,-2,6,10,-9,-3,7,-10,8,4,-7,10,7,-10,7,1,-6,8,-6,-1,-3,-2,6,7,3,8,6,-8,3,9,3,-4,2,-2,4,3,-2,10,-7,1,-8,-2,10,9,-7,5,-8,-9,-3,-3,6,4,3,3,-3,-1,-7,7,-4,-3,5,-1,9,5,10,-8,-4,-2,8,-6,-4,-2,-10,10,-3,5,3,3,7,-1,-8,3,1,10,5,-8,2,1,9,8,-4,-2,-10,-6,-4,3,-8,-3,-4,-10,-8,-7,10,-4,9,1,-8,10,-9,-4,5,-5,4,6,3,-6,-6,-3,10,3,1,3,-8,-7,9,-10,-9,-1,-4,-2,3,-8,-10,5,-8,9,4,-1,5,1,-1,2,7,4,10,-8,1,-4,-5,-1,7,4,-2,-6,-5,2,-10,-6,8,8,-6,-5,-2,-10,-5,-2,10,6,3,6,-10,3,-3,-9,-9,-10,-5,3,-1,-4,5,1,-4,-5,10,4,-2,-2,-6,-5,-9,-1,8,-2,1,7,2,9,-6,2,8,8,2,6,-4,-6,-7,-7,-3,6,-5,-9,-3,-2,3,-7,-9,-4,8,3,-10,-4,6,-4,10,-2,-2,-1,-9,6,-6,-4,1,-8,-7,-10,7,-6,7,1,-9,-4,6,-8,10,-7,-10,-1,-1,9,-1,-7,-4,3,-2,-9,-9,-3,-8,-10,-8,5,9,8,-7,8,-7,8,9,-1,8,-3,2,-4,7,-9,2,-3,-9,3,-8,-6,9,6,-7,-8,-6,-6,4,-9,5,-8,-3,9,1,-10,6,-8,1,-10,1,-5,-8,-5,10,-5,-5,1,-5,-8,6,-9,-5,5,9,4,3,8,2,-4,-1,-9,-4,-2,3,-7,-9,9,-1,10,2,-1,5,8,5,2,-3,-10,-1,5,-2,5,9,5,-10,2,-9,9,-4,-5,-9,5,-10,-8,-7,7,5,3,5,6,3,7,4,-9,-3,9,1,-3,-1,2,-5,-9,10,-4,2,-10,9,8,-5,2,-3,-1,7,5,-6,5,-7,-2,6,4,8,-2,3,-2,9,8,7,6,5,1,2,3,-8,-8,2,2,-4,-9,-6,-7,7,9,-5,9,8,-3,3,10,10,-8,8,4,-6,-10,6,-9,3,8,-5,-7,-6,-3,-6,-10,1,-1,-8,2,10,6,1,10,5,1,-6,3,1,-2,-1,7,2,10,3,-4,5,-10,7,-10,1,-4,-2,-10,5,3,-4,-5,-6,-6,8,-5,-2,-9,6,-3,1,-3,-4,-9,3,-4,-10,-5,3,-9,-3,-4,-9,8,-2,-10,10,-9,6,-5,10,8,-8,10,6,4,4,-8,1,-8,-7,-10,-2,3,-9,-7,-8,10,-9,7,10,9,-9,6,-3,5,-5,-8,5,6,-10,2,-9,-3,-3,-6,-2,-8,9,3,2,-3,4,-3,3,-3,-4,2,-7,2,7,-4,2,-2,-8,5,6,7,7,10,-1,4,8,-9,-1,5,-10,7,-1,-2,-5,-10,-5,2,9,2,5,-5,2,-5,6,10,-9,7,7,10,10,-4,7,7,-8,-7,-4,5,8,-10,-2,-2,7,-10,3,-6,-1,8,-4,5,-3,-6,-7,-5,-3,-1,5,-7,-5,7,-8,-10,3,9,2,-1,8,-2,-10,-8,-1,-9,2,-9,2,6,-8,1,4,-9,5,9,-9,8,9,-2,7,-9,7,6,5,-1,8,-6,-1,-9,7,2,1,5,6,-4,-1,1,-2,-7,-1,-2,10,3,3,2,2,-5,-3,-6,-10,-1,-3,8,3,4,6,5,4,-9,-2,6,-4,10,3,-6,4,1,4,-3,-7,-3,3,-8,7,-3,-10,-4,1,-4,10,7,-9,-3,10,-10,-5,7,-10,-6,-4,-8,9,9,-8,6,2,3,-2,6,6,-8,-8,10,1,7,-6,-10,-8,7,-3,-5,-4,10,-7,-9,-2,-6,1,-2,-2,10,3,3,10,-7,-2,-1,3,4,6,2,10,2,-4,4,3,-3,3,-10,-9,9,1,10,9,-3,7,5,-5,-9,-3,-4,8,-5,-7,-7,5,-8,3,-2,1,-7,3,6,-1,9,-9,-10,-2,9,1,-8,9,5,-3,2,2,-2,3,5,2,-8,6,-7,3,10,9,4,-3,10,6,7,3,-7,7,8,5,-10,4,-3,-1,-4,-10,-10,7,-10,2,-3,9,1,3,5,5,-10,3,7,6,-6,-8,-3,8,8,-1,7,2,-5,-7,-4,6,-3,-9,2,-10,4,-7,-4,10,-5,4,10,7,-4,8,9,4,-2,2,6,2,-1,9,-4,-9,10,8,-3,7,-1,5,-6,2,10,2,8,-8,-5,-6,5,-7,-9,5,1,-9,-5,-4,3,-1,-10,1,-8,-6,-7,3,8,-5,6,10,9,10,4,-7,10,2,-2,7,-3,5,7,-1,10,1,5,-3,-1,-2,-7,-3,-6,6,-7,10,-7,-9,-4,9,-8,2,-10,-2,8,-5,3,-1,-3,7,-1,2,-3,-2,3,3,-2,5,-7,-4,-10,-7,8,-2,-4,-3,-7,3,-5,-6,-8,10,-1,-5,-3,-3,-9,6,8,-2,-8,-7,9,-4,7,-5,-7,7,9,6,3,4,10,1,7,-2,8,9,-3,4,-3,7,1,9,7,1,-7,-4,-5,6,-8,-7,2,-6,1,5,8,-5,5,10,-1,4,7,4,-2,-4,-9,-9,-10,-5,4,6,-1,10,5,10,2,-4,9,-3,-8,-1,1,-9,-4,2,4,9,-7,1,-2,9,-4,-5,3,-2,-6,-8,-3,-7,-1,7,5,1,7,-7,5,-5,1,10,9,-2,6,-3,9,8,-9,5,10,-7,10,-8,-9,3,-4,-3,6,-9,5,3,-1,4,-5,3,7,-2,3,-3,4,4,9,-2,-1,9,-2,2,3,-3,-4,-2,10,9,6,8,6,-10,7,1,-3,-6,5,8,5,-4,2,2,-4,5,-1,-3,-5,3,5,10,6,-2,-5,9,-6,10,3,-9,-3,8,-9,2,-2,-4,10,-4], dtype = "uint64")#candidate|1087|(2548,)|const|uint64
call_1086 = relay.TupleGetItem(func_163_call(relay.reshape(const_1087.astype('uint64'), [13, 14, 14]), relay.reshape(const_1087.astype('uint64'), [13, 14, 14]), relay.reshape(const_1087.astype('uint64'), [13, 14, 14]), ), 1)
call_1088 = relay.TupleGetItem(func_168_call(relay.reshape(const_1087.astype('uint64'), [13, 14, 14]), relay.reshape(const_1087.astype('uint64'), [13, 14, 14]), relay.reshape(const_1087.astype('uint64'), [13, 14, 14]), ), 1)
func_231_call = mod.get_global_var('func_231')
func_236_call = mutated_mod.get_global_var('func_236')
var_1093 = relay.var("var_1093", dtype = "bool", shape = (312, 1))#candidate|1093|(312, 1)|var|bool
call_1092 = relay.TupleGetItem(func_231_call(relay.reshape(var_1093.astype('bool'), [13, 8, 3]), relay.reshape(var_1093.astype('bool'), [13, 8, 3]), relay.reshape(const_1087.astype('uint64'), [2548,]), ), 2)
call_1094 = relay.TupleGetItem(func_236_call(relay.reshape(var_1093.astype('bool'), [13, 8, 3]), relay.reshape(var_1093.astype('bool'), [13, 8, 3]), relay.reshape(const_1087.astype('uint64'), [2548,]), ), 2)
var_1095 = relay.var("var_1095", dtype = "uint64", shape = (13, 14, 14))#candidate|1095|(13, 14, 14)|var|uint64
bop_1096 = relay.minimum(call_1086.astype('uint16'), relay.reshape(var_1095.astype('uint16'), relay.shape_of(call_1086))) # shape=(13, 14, 14)
bop_1099 = relay.minimum(call_1088.astype('uint16'), relay.reshape(var_1095.astype('uint16'), relay.shape_of(call_1088))) # shape=(13, 14, 14)
output = relay.Tuple([call_1069,call_1073,const_1074,var_1075,uop_1082,const_1087,call_1092,var_1093,bop_1096,])
output2 = relay.Tuple([call_1070,call_1076,const_1074,var_1075,uop_1084,const_1087,call_1094,var_1093,bop_1099,])
func_1118 = relay.Function([var_1060,var_1075,var_1093,var_1095,], output)
mod['func_1118'] = func_1118
mod = relay.transform.InferType()(mod)
var_1119 = relay.var("var_1119", dtype = "float64", shape = (7, 6, 3))#candidate|1119|(7, 6, 3)|var|float64
var_1120 = relay.var("var_1120", dtype = "uint16", shape = (1120,))#candidate|1120|(1120,)|var|uint16
var_1121 = relay.var("var_1121", dtype = "bool", shape = (312, 1))#candidate|1121|(312, 1)|var|bool
var_1122 = relay.var("var_1122", dtype = "uint64", shape = (13, 14, 14))#candidate|1122|(13, 14, 14)|var|uint64
output = func_1118(var_1119,var_1120,var_1121,var_1122,)
func_1123 = relay.Function([var_1119,var_1120,var_1121,var_1122,], output)
mutated_mod['func_1123'] = func_1123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mod.get_global_var('func_924')
func_925_call = mutated_mod.get_global_var('func_925')
call_1201 = relay.TupleGetItem(func_924_call(), 0)
call_1202 = relay.TupleGetItem(func_925_call(), 0)
uop_1219 = relay.sqrt(call_1201.astype('float64')) # shape=(7, 6, 3)
uop_1221 = relay.sqrt(call_1202.astype('float64')) # shape=(7, 6, 3)
output = uop_1219
output2 = uop_1221
func_1229 = relay.Function([], output)
mod['func_1229'] = func_1229
mod = relay.transform.InferType()(mod)
output = func_1229()
func_1230 = relay.Function([], output)
mutated_mod['func_1230'] = func_1230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_997_call = mod.get_global_var('func_997')
func_999_call = mutated_mod.get_global_var('func_999')
call_1242 = relay.TupleGetItem(func_997_call(), 0)
call_1243 = relay.TupleGetItem(func_999_call(), 0)
output = call_1242
output2 = call_1243
func_1247 = relay.Function([], output)
mod['func_1247'] = func_1247
mod = relay.transform.InferType()(mod)
output = func_1247()
func_1248 = relay.Function([], output)
mutated_mod['func_1248'] = func_1248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1230_call = mutated_mod.get_global_var('func_1230')
call_1260 = func_1229_call()
call_1261 = func_1229_call()
var_1264 = relay.var("var_1264", dtype = "float64", shape = (7, 6, 3))#candidate|1264|(7, 6, 3)|var|float64
bop_1265 = relay.power(call_1260.astype('float32'), relay.reshape(var_1264.astype('float32'), relay.shape_of(call_1260))) # shape=(7, 6, 3)
bop_1268 = relay.power(call_1261.astype('float32'), relay.reshape(var_1264.astype('float32'), relay.shape_of(call_1261))) # shape=(7, 6, 3)
output = bop_1265
output2 = bop_1268
func_1280 = relay.Function([var_1264,], output)
mod['func_1280'] = func_1280
mod = relay.transform.InferType()(mod)
var_1281 = relay.var("var_1281", dtype = "float64", shape = (7, 6, 3))#candidate|1281|(7, 6, 3)|var|float64
output = func_1280(var_1281)
func_1282 = relay.Function([var_1281], output)
mutated_mod['func_1282'] = func_1282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_997_call = mod.get_global_var('func_997')
func_999_call = mutated_mod.get_global_var('func_999')
call_1295 = relay.TupleGetItem(func_997_call(), 0)
call_1296 = relay.TupleGetItem(func_999_call(), 0)
output = call_1295
output2 = call_1296
func_1302 = relay.Function([], output)
mod['func_1302'] = func_1302
mod = relay.transform.InferType()(mod)
output = func_1302()
func_1303 = relay.Function([], output)
mutated_mod['func_1303'] = func_1303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_997_call = mod.get_global_var('func_997')
func_999_call = mutated_mod.get_global_var('func_999')
call_1322 = relay.TupleGetItem(func_997_call(), 0)
call_1323 = relay.TupleGetItem(func_999_call(), 0)
func_381_call = mod.get_global_var('func_381')
func_385_call = mutated_mod.get_global_var('func_385')
var_1335 = relay.var("var_1335", dtype = "uint16", shape = ())#candidate|1335|()|var|uint16
var_1336 = relay.var("var_1336", dtype = "uint16", shape = (8, 140))#candidate|1336|(8, 140)|var|uint16
call_1334 = func_381_call(relay.reshape(var_1335.astype('uint16'), []), relay.reshape(var_1336.astype('uint16'), [14, 10, 8]), )
call_1337 = func_381_call(relay.reshape(var_1335.astype('uint16'), []), relay.reshape(var_1336.astype('uint16'), [14, 10, 8]), )
func_231_call = mod.get_global_var('func_231')
func_236_call = mutated_mod.get_global_var('func_236')
var_1343 = relay.var("var_1343", dtype = "bool", shape = (312,))#candidate|1343|(312,)|var|bool
var_1344 = relay.var("var_1344", dtype = "uint64", shape = (2548,))#candidate|1344|(2548,)|var|uint64
call_1342 = relay.TupleGetItem(func_231_call(relay.reshape(var_1343.astype('bool'), [13, 8, 3]), relay.reshape(var_1343.astype('bool'), [13, 8, 3]), relay.reshape(var_1344.astype('uint64'), [2548,]), ), 3)
call_1345 = relay.TupleGetItem(func_236_call(relay.reshape(var_1343.astype('bool'), [13, 8, 3]), relay.reshape(var_1343.astype('bool'), [13, 8, 3]), relay.reshape(var_1344.astype('uint64'), [2548,]), ), 3)
var_1362 = relay.var("var_1362", dtype = "float64", shape = (7, 6, 3))#candidate|1362|(7, 6, 3)|var|float64
bop_1363 = relay.less_equal(call_1322.astype('bool'), relay.reshape(var_1362.astype('bool'), relay.shape_of(call_1322))) # shape=(7, 6, 3)
bop_1366 = relay.less_equal(call_1323.astype('bool'), relay.reshape(var_1362.astype('bool'), relay.shape_of(call_1323))) # shape=(7, 6, 3)
func_1280_call = mod.get_global_var('func_1280')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_1367 = func_1280_call(relay.reshape(var_1362.astype('float64'), [7, 6, 3]))
call_1368 = func_1280_call(relay.reshape(var_1362.astype('float64'), [7, 6, 3]))
output = relay.Tuple([call_1334,var_1335,var_1336,call_1342,var_1343,var_1344,bop_1363,call_1367,])
output2 = relay.Tuple([call_1337,var_1335,var_1336,call_1345,var_1343,var_1344,bop_1366,call_1368,])
func_1372 = relay.Function([var_1335,var_1336,var_1343,var_1344,var_1362,], output)
mod['func_1372'] = func_1372
mod = relay.transform.InferType()(mod)
mutated_mod['func_1372'] = func_1372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1372_call = mutated_mod.get_global_var('func_1372')
var_1374 = relay.var("var_1374", dtype = "uint16", shape = ())#candidate|1374|()|var|uint16
var_1375 = relay.var("var_1375", dtype = "uint16", shape = (8, 140))#candidate|1375|(8, 140)|var|uint16
var_1376 = relay.var("var_1376", dtype = "bool", shape = (312,))#candidate|1376|(312,)|var|bool
var_1377 = relay.var("var_1377", dtype = "uint64", shape = (2548,))#candidate|1377|(2548,)|var|uint64
var_1378 = relay.var("var_1378", dtype = "float64", shape = (7, 6, 3))#candidate|1378|(7, 6, 3)|var|float64
call_1373 = func_1372_call(var_1374,var_1375,var_1376,var_1377,var_1378,)
output = call_1373
func_1379 = relay.Function([var_1374,var_1375,var_1376,var_1377,var_1378,], output)
mutated_mod['func_1379'] = func_1379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1387 = relay.var("var_1387", dtype = "uint8", shape = (5, 14, 9))#candidate|1387|(5, 14, 9)|var|uint8
var_1388 = relay.var("var_1388", dtype = "uint8", shape = (5, 14, 9))#candidate|1388|(5, 14, 9)|var|uint8
bop_1389 = relay.bitwise_and(var_1387.astype('uint8'), relay.reshape(var_1388.astype('uint8'), relay.shape_of(var_1387))) # shape=(5, 14, 9)
func_1118_call = mod.get_global_var('func_1118')
func_1123_call = mutated_mod.get_global_var('func_1123')
const_1393 = relay.const([-7.443375,-3.726909,7.401874,-7.549334,-7.089076,5.545375,-8.737792,6.249256,-8.104882,-0.355782,-0.197196,-5.388882,4.494837,6.140093,0.617857,0.927271,5.913048,-8.813948,-7.101930,7.804601,-1.660990,6.891540,9.485813,8.375487,3.753051,-3.934807,7.132259,-6.689736,1.328047,7.936607,-8.385946,-8.956260,-8.670905,7.034646,4.033841,-9.072769,8.613195,-6.389959,-7.906235,-8.593649,5.516010,9.599718,3.948286,2.555636,1.787101,-8.106788,4.427667,-5.908801,4.418702,-1.434287,-1.322489,8.137238,4.534860,-6.769847,1.133332,2.030011,9.335325,9.182751,-5.373235,2.656212,2.734526,-0.008263,-2.317637,7.988510,-6.960566,-3.864111,-7.882438,-0.388314,-0.667484,0.929879,6.112097,-8.082495,2.444718,7.604409,2.508798,9.513736,-2.339792,3.251268,-3.846408,0.026045,3.841940,9.453966,8.785204,1.762355,-4.195963,5.018782,4.968393,-1.594519,-9.357325,-7.676742,-3.696632,-4.080453,6.296711,4.659042,-7.196619,-6.343384,4.027579,6.915758,3.050608,-9.926789,4.009621,1.247972,8.903510,7.223348,-2.135952,9.743375,-4.391678,3.442082,-6.717134,3.649222,2.490752,-3.253694,-3.749741,8.820036,-3.968201,9.250722,-8.115595,-9.685293,8.655661,9.878029,0.646905,-9.704740,-7.474967,-2.183998,4.130244,-7.293723], dtype = "float64")#candidate|1393|(126,)|const|float64
const_1394 = relay.const([-4,10,-4,9,-3,-4,-3,-1,-9,-2,-9,2,10,-6,10,-10,4,6,-2,-2,10,-3,10,-7,-10,-9,-6,7,-5,-8,4,1,-7,-6,2,6,-3,-4,-3,-2,-9,-2,-6,-2,3,7,-7,5,-3,-3,-8,-6,7,4,2,3,-10,8,-5,6,10,7,-10,-1,3,10,4,2,10,3,3,3,10,-9,4,5,9,-1,-4,3,-8,-1,-3,-6,-1,6,5,-9,-3,-2,-4,-10,6,-3,4,8,-3,6,1,10,1,10,-5,10,9,-4,-6,-7,6,3,-8,-3,1,8,9,6,3,-5,6,6,-7,8,5,-8,-5,-8,-3,3,-10,7,-8,9,-10,-2,10,-10,8,-10,1,-1,-8,-1,-2,6,5,1,-6,-9,-7,-3,-6,-3,10,9,-1,10,-1,-4,-5,-7,4,8,-10,-8,-5,-3,-5,7,-2,-9,-7,6,-9,-3,1,-9,-7,8,-1,4,9,-8,6,10,-2,-2,-9,8,-7,4,-10,4,9,5,-10,7,8,6,1,-3,6,-5,-2,-4,-4,8,3,-9,5,2,5,-7,-5,7,10,10,-5,-2,7,-7,-6,3,8,2,8,-1,3,5,2,5,-4,-9,-9,-8,-8,-9,2,6,6,5,1,-8,-5,-4,5,-8,-4,9,-7,2,-4,2,5,-7,-5,6,8,2,-6,-10,-6,9,-5,-5,-5,-10,10,-4,9,7,-4,9,6,5,8,1,4,-3,-10,3,-7,-4,-4,-1,10,8,8,3,-1,-6,-4,4,-10,-6,7,-4,2,-1,-6,1,10,-9,-9,4,3,-10,10,-6,4,9,-1,8,-2,-2,-3,6,4,-2,8,-4,8,7,-9,8,-4,7,-3,1,-5,-6,5,2,5,-2,-9,-3,10,5,-4,-5,2,-8,-8,-10,9,3,-8,-3,10,6,-10,8,-3,-1,6,9,-9,-2,-3,2,-8,8,-4,7,-6,3,5,8,-4,7,3,7,1,9,-2,10,9,-4,-8,-5,7,10,9,2,-7,3,-4,-1,2,3,-2,5,-10,4,-1,2,-9,2,2,-3,-2,8,9,-3,9,8,-6,5,-2,-3,10,-3,-10,10,8,1,-2,-7,6,3,-5,-1,3,-8,6,10,-7,-8,-9,-8,-2,8,-8,6,-7,1,1,5,-9,1,-2,-5,5,7,2,2,4,9,-4,-6,-5,3,3,1,10,-9,-6,-3,-6,4,8,3,5,4,8,-10,-10,-10,-2,-5,5,-7,8,2,10,5,4,-10,1,-8,-7,-3,-3,10,-6,-8,-10,-1,-2,-6,1,-2,9,-1,9,1,-8,-1,-1,-6,7,-9,-6,-9,5,3,-7,10,1,8,3,-4,-6,-3,9,4,-1,4,5,-6,-9,6,-7,1,10,-8,9,-5,10,-3,-5,-4,2,-4,3,7,10,-9,-2,5,-10,-6,-6,5,6,4,7,-10,9,-7,-3,-8,8,1,8,1,-10,8,-7,-3,-2,-6,6,9,-9,10,1,-8,3,-10,-7,10,9,7,-4,-10,-9,5,-2,1,-3,5,8,4,3,4,-6,-1,-6,-10,9,7,6,-1,10,-2,-4,-6,10,-6,5,-7,8,-7,-4,-7,9,-9,5,5,-6,8,-4,4,6,9,4,6,1,8,-2,-8,-6,10,-9,-9,-10,8,-1,7,4,3,-9,-2,4,-6,5,-1,-1,4,-4,6,10,-9,8,-2,-2,-10,6,1,-4,-6,1,1,8,3,-10,7,4,-3,-2,5,-10,2,9,-5,10,-1,1,-2,-9,1,3,9,4,10,-9,-9,-9,4,-6,-10,-2,-7,5,2,-2,3,-4,5,-6,-5,9,3,-7,-4,8,7,-7,5,-4,5,-1,-3,1,-5,4,-4,-2,-9,-6,1,-8,-3,3,-8,6,-4,2,-4,-7,1,-6,4,-10,8,7,9,8,-2,-2,9,-2,5,-2,6,-7,-3,-2,3,-10,-9,10,2,-1,-10,-3,-1,4,8,6,-9,2,7,9,-5,1,-5,3,-9,-2,-7,10,1,-7,-1,-4,7,-4,-10,-2,-3,-1,4,-8,8,3,-4,-5,-8,3,-5,-2,2,7,-9,9,4,2,3,2,-9,-7,8,7,4,5,-8,-2,-3,2,-7,-3,10,10,3,-5,7,-5,-5,8,6,-1,-10,-3,-1,4,6,1,-3,9,3,10,7,-2,10,4,-5,8,-9,10,-8,9,2,-1,-3,10,-4,5,-6,6,10,1,6,-3,-4,4,-5,-7,-5,1,7,-3,2,2,4,5,9,-9,9,7,-3,7,-6,-7,3,6,-1,-2,-6,2,-4,5,-5,8,6,-7,-8,9,9,2,5,-3,-8,9,1,5,-6,-9,-7,-5,2,-4,-8,-2,-10,-8,-6,-1,-6,-10,10,2,-8,-9,10,7,-7,2,-5,-2,-1,-10,-3,-1,1,-6,1,-9,3,-5,3,4,-5,5,1,5,-10,-8,7,-10,3,9,7,2,-7,10,-8,-10,-1,3,2,1,-4,-5,-10,-9,-2,-8,8,9,-8,-5,-5,1,10,5,1,-6,-7,-6,-5,-2,3,7,2,7,7,6,5,-8,-1,-8,1,7,-4,-6,8,-9,-8,10,-4,-7,9,3,-1,10,5,6,4,3,6,9,7,-5,-4,-6,2,-1,9,6,6,1,3,-7,-3,-5,2,-5,1,8,4,6,-7,8,1,-3,-9,-8,6,-7,10,7,5,-2,1,6,4,-3,8,-5,7,-8,6,9,5,-8,10,-6,-9,-3,-2,8,-10,-5,4,9,-9,6,-5,7,10,5,-5,7,3,4,9,-9,3,-9,-5,-8,7,2,-10,-2,-8,-2,-9,-7,-9,8,-5,6,3,6,-6,-4,2,-5,-7,-5,-3,8,-8,-4,9,4,9,3,7,-9,6,6,-9,2,-7,1,-6,1,7,10,7,10,-5,-7,-2,7,-8,-10,3,3,9,-9,-6,-10,8,-8,5], dtype = "uint16")#candidate|1394|(1120,)|const|uint16
const_1395 = relay.const([False,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,False,True,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False], dtype = "bool")#candidate|1395|(312,)|const|bool
var_1396 = relay.var("var_1396", dtype = "uint64", shape = (2548,))#candidate|1396|(2548,)|var|uint64
call_1392 = relay.TupleGetItem(func_1118_call(relay.reshape(const_1393.astype('float64'), [7, 6, 3]), relay.reshape(const_1394.astype('uint16'), [1120,]), relay.reshape(const_1395.astype('bool'), [312, 1]), relay.reshape(var_1396.astype('uint64'), [13, 14, 14]), ), 7)
call_1397 = relay.TupleGetItem(func_1123_call(relay.reshape(const_1393.astype('float64'), [7, 6, 3]), relay.reshape(const_1394.astype('uint16'), [1120,]), relay.reshape(const_1395.astype('bool'), [312, 1]), relay.reshape(var_1396.astype('uint64'), [13, 14, 14]), ), 7)
func_828_call = mod.get_global_var('func_828')
func_833_call = mutated_mod.get_global_var('func_833')
const_1400 = relay.const([[8,9,4,-10],[3,10,7,-1],[8,9,-2,-7],[-3,-7,-10,2],[7,-9,-5,7],[7,7,-9,-10],[8,-6,-4,9],[-5,-8,3,4],[3,1,4,-7],[-5,5,-3,-4],[-6,-1,-5,-8],[9,5,7,-2],[-5,-10,2,10],[-10,-3,3,3],[-8,-8,7,5],[-1,7,-10,-8],[-3,3,-6,3],[9,-10,-3,-2],[7,6,-7,1],[-1,-5,7,-7],[-6,8,-3,-9],[-6,9,-3,-2],[10,-6,9,4],[-6,-3,4,5],[-8,3,3,8],[-2,1,-5,-8],[3,1,-3,-1],[5,4,-4,1],[-4,-5,-6,-10],[-9,6,6,-2],[-9,-10,-9,-3],[-5,-6,-10,10],[1,2,-10,8],[3,-7,7,5],[-2,8,6,-8],[8,1,-10,1],[8,-1,-6,-10],[-2,-6,-6,-2],[-8,2,2,6],[-1,-8,-7,4],[-4,4,7,-7],[-2,-7,7,-7],[-2,8,6,-3],[-8,9,4,1],[-2,6,-10,8],[9,10,-5,-1],[-5,-8,-3,-9],[-6,8,-6,7],[-5,-7,7,9],[-9,2,-8,-10],[9,6,-2,5],[-3,-7,-2,-7],[7,-4,-7,10],[3,-1,-2,4],[10,-5,2,10],[1,-6,-2,-1],[-7,1,9,-4],[-3,1,-8,9],[4,-2,-4,-6],[10,9,5,10],[5,9,-5,4],[8,3,2,-3],[6,5,-8,4],[-2,-1,-2,-2],[4,-3,-2,7],[4,-5,-2,5],[4,7,-2,9],[5,-3,-10,-8],[-4,-3,7,8],[10,2,-10,9],[8,5,10,-5],[3,-3,-1,-9],[-9,-3,10,2],[5,-1,10,10],[-7,-9,8,-1],[-10,-7,-5,-9],[-7,-5,-4,-9],[8,5,-2,-7],[9,-8,-9,-9],[5,-3,-2,-7],[5,-8,-6,7],[6,3,6,-7],[-5,1,3,-7],[5,9,10,-6],[7,-5,8,-8],[-5,-2,-2,-3],[3,-2,-3,-5],[7,-4,1,6],[-4,4,3,8],[-4,7,9,-2],[4,-9,3,5],[-9,10,1,-9],[-5,8,-6,5],[7,3,-4,8],[-8,-6,10,-2],[-2,-8,-6,-9],[1,-8,4,-4],[-7,-4,-3,8],[-9,4,-8,8],[-1,-3,3,-8],[7,-1,3,-1],[4,9,10,-1],[-6,8,-5,1],[1,3,-6,-10],[8,4,-9,-2],[-2,10,-2,1],[-10,-9,-3,1],[4,2,4,3],[-5,5,-5,5],[-10,9,10,8],[-9,6,-9,10],[10,3,3,-8],[-6,2,-2,9],[4,5,-8,-5],[-2,-2,8,4],[3,-2,5,7],[-6,1,6,1],[-7,-3,9,-5],[6,10,9,-2],[1,-1,5,-8],[-6,9,8,-1],[4,2,-9,4],[4,9,-10,-6],[-6,-9,-6,2],[-5,-4,-10,-8],[7,10,6,-3],[-10,4,5,2],[10,2,6,7],[-4,-4,8,-9],[-3,2,4,10],[10,-5,5,-8],[-1,-10,-4,-10],[-10,3,6,2],[2,1,-1,-2],[-6,-10,6,-5],[-10,-4,3,-5],[8,-2,1,-8],[-10,-10,9,-2],[9,-5,9,4],[4,-6,-3,2],[8,-8,8,1],[-4,-8,3,7],[1,-8,1,-2],[1,-5,-8,6]], dtype = "int8")#candidate|1400|(144, 4)|const|int8
const_1401 = relay.const(-5, dtype = "uint16")#candidate|1401|()|const|uint16
call_1399 = relay.TupleGetItem(func_828_call(relay.reshape(const_1400.astype('int8'), [6, 16, 6]), relay.reshape(const_1401.astype('uint16'), []), relay.reshape(var_1396.astype('uint64'), [2548,]), ), 2)
call_1402 = relay.TupleGetItem(func_833_call(relay.reshape(const_1400.astype('int8'), [6, 16, 6]), relay.reshape(const_1401.astype('uint16'), []), relay.reshape(var_1396.astype('uint64'), [2548,]), ), 2)
func_381_call = mod.get_global_var('func_381')
func_385_call = mutated_mod.get_global_var('func_385')
call_1403 = func_381_call(relay.reshape(call_1399.astype('uint16'), []), relay.reshape(const_1394.astype('uint16'), [14, 10, 8]), )
call_1404 = func_381_call(relay.reshape(call_1399.astype('uint16'), []), relay.reshape(const_1394.astype('uint16'), [14, 10, 8]), )
bop_1415 = relay.less(var_1396.astype('bool'), call_1392.astype('bool')) # shape=(312, 2548)
bop_1418 = relay.less(var_1396.astype('bool'), call_1397.astype('bool')) # shape=(312, 2548)
output = relay.Tuple([bop_1389,const_1393,const_1394,const_1395,call_1399,const_1400,const_1401,call_1403,bop_1415,])
output2 = relay.Tuple([bop_1389,const_1393,const_1394,const_1395,call_1402,const_1400,const_1401,call_1404,bop_1418,])
func_1419 = relay.Function([var_1387,var_1388,var_1396,], output)
mod['func_1419'] = func_1419
mod = relay.transform.InferType()(mod)
mutated_mod['func_1419'] = func_1419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1419_call = mutated_mod.get_global_var('func_1419')
var_1421 = relay.var("var_1421", dtype = "uint8", shape = (5, 14, 9))#candidate|1421|(5, 14, 9)|var|uint8
var_1422 = relay.var("var_1422", dtype = "uint8", shape = (5, 14, 9))#candidate|1422|(5, 14, 9)|var|uint8
var_1423 = relay.var("var_1423", dtype = "uint64", shape = (2548,))#candidate|1423|(2548,)|var|uint64
call_1420 = func_1419_call(var_1421,var_1422,var_1423,)
output = call_1420
func_1424 = relay.Function([var_1421,var_1422,var_1423,], output)
mutated_mod['func_1424'] = func_1424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1247_call = mod.get_global_var('func_1247')
func_1248_call = mutated_mod.get_global_var('func_1248')
call_1502 = func_1247_call()
call_1503 = func_1247_call()
func_1118_call = mod.get_global_var('func_1118')
func_1123_call = mutated_mod.get_global_var('func_1123')
const_1532 = relay.const([10,5,-5,3,4,4,-9,10,-8,3,10,6,7,6,6,6,5,-2,-6,10,-6,-7,5,-4,2,5,-9,-7,6,2,-1,6,10,8,-4,-7,-5,3,4,4,-7,7,9,4,-9,7,-5,-8,4,-4,-6,-9,7,-4,-1,8,-7,-6,1,4,-4,-10,6,7,-5,8,-4,-6,-9,4,7,10,7,4,5,5,-9,-10,4,4,-10,1,-9,5,-7,8,10,-10,3,4,2,-9,6,-7,-9,-10,-3,-3,9,-10,6,10,7,5,-6,10,-10,-8,-8,-7,-5,-8,-9,3,-10,4,-1,3,6,10,7,-9,-8,-3,1,-5,-8,-9,5,-7,-4,-10,7,3,-1,5,-2,5,1,-6,8,1,6,3,1,-6,-2,10,-2,-3,7,-1,2,8,-3,-8,-8,9,10,-5,3,-5,-10,4,-7,6,-7,-2,-4,4,7,-10,-4,8,10,-4,7,-6,4,8,9,5,1,-4,-8,-2,-2,-9,-1,10,-2,-2,6,3,-10,-1,-7,2,6,2,-4,-10,-9,1,-7,9,7,-6,3,-1,2,-1,-10,6,-1,-1,-7,1,9,-5,-5,4,10,-5,1,6,-9,4,-2,-7,-1,9,-9,-5,4,-5,-8,1,10,1,-1,7,-5,-1,-1,1,-7,1,1,-4,-8,4,-9,6,-2,-1,5,4,6,7,6,-1,-6,-8,-8,2,3,-4,4,2,-8,-8,10,10,-7,-5,-5,-5,7,-8,8,-5,-9,-1,-10,8,5,-10,7,-1,7,9,-2,-2,10,8,-3,8,1,-4,2,10,7,-2,-7,3,1,-5,10,4,9,-7,4,-4,-5,-7,-10,6,-4,-6,-3,9,2,-7,-3,-2,4,5,-7,2,-7,2,-5,-5,-7,1,9,-4,-4,-3,3,-1,9,2,5,9,-2,-9,9,7,6,-4,10,6,-8,-2,8,-7,-9,2,-2,6,-4,-2,-1,-7,-8,2,8,1,10,-8,-7,5,1,-10,10,10,4,-7,2,2,4,8,-1,-1,-2,-9,-1,5,-2,6,4,6,-9,-3,-6,2,8,-5,9,-1,-4,-2,-5,-6,3,-10,9,4,-10,10,9,-9,10,-7,-9,-1,-9,7,-9,2,6,-8,-8,2,7,-6,-2,5,-9,2,-1,1,6,-3,-1,-5,-4,2,3,-2,8,9,10,-5,-4,-9,9,-4,-9,10,-3,7,-9,-1,-6,5,8,-5,5,9,4,6,-7,-10,1,-6,-4,2,-3,6,-4,3,-4,-2,6,-10,-9,-8,1,3,-6,4,4,-3,-9,-8,1,-6,-10,4,2,-10,2,-7,6,5,-1,-3,-7,3,7,-8,3,-3,-2,2,-1,-5,10,8,-6,-7,-3,3,7,5,-7,4,7,-4,-2,-3,9,-8,1,-3,8,-3,10,-1,2,-3,-1,1,-4,-6,-1,1,-10,7,2,8,1,3,9,-10,-1,2,-2,7,9,-2,6,-10,-2,-6,8,6,-7,-3,-2,9,-6,5,-5,-3,10,7,-9,-10,6,7,2,-5,2,-9,-9,-2,-1,-4,-1,-3,2,-5,-6,4,-1,-6,-6,-5,-9,5,-3,6,3,-8,-4,-3,10,-9,-3,8,6,10,-7,10,-9,5,-1,-4,10,7,5,-10,8,-1,4,6,3,2,8,7,7,9,-2,2,-7,6,1,-6,9,1,-7,5,-2,10,-3,9,-9,-9,9,5,-2,-7,10,1,1,5,8,7,-1,10,-4,-3,7,-5,3,4,2,-8,5,4,-3,1,10,-3,-5,-4,-4,-1,9,7,6,9,3,2,9,1,6,-5,-9,7,3,-2,-10,-8,-1,-1,8,-6,-7,6,-6,-10,-10,9,5,-5,1,7,-2,-10,-4,1,3,1,-6,8,6,6,-2,5,-3,6,-10,3,2,5,6,-5,3,-9,-5,-3,-4,6,4,-1,-4,10,2,3,9,-9,6,-4,-2,-8,-1,-9,-9,-8,8,9,8,3,-5,5,8,8,8,3,-8,-8,-1,3,3,5,1,-1,-3,1,5,-1,2,5,5,1,-8,-2,5,10,-5,9,-9,6,-7,2,-7,-4,-4,8,-6,3,-7,4,-10,-1,-1,2,-1,4,9,1,-8,-2,4,6,-10,-6,5,8,6,10,-10,-7,-5,10,-4,-10,7,-9,-4,3,-3,1,-10,-3,8,4,-8,-10,10,6,2,10,-8,8,-1,5,9,2,-5,-6,10,3,-10,10,-3,-6,2,2,-5,3,-3,-2,6,-2,10,-6,-7,-10,-1,7,-9,-9,-10,-3,3,-1,-6,-9,-8,3,-10,-8,-9,-5,9,4,-6,-10,-2,-9,1,-1,2,9,-10,8,5,-8,6,-5,-7,4,-10,10,-7,8,1,-5,9,5,-10,1,2,-8,-3,5,1,-5,-4,-4,-6,-1,10,-1,1,8,2,-7,-9,1,9,3,-5,-1,-3,-2,-5,-7,-10,-6,8,-4,-3,3,7,7,-1,-6,-9,7,-1,-5,3,-3,-2,-6,3,9,1,10,-7,4,7,6,6,-10,-6,3,-6,-4,5,9,10,-4,1,10,10,7,3,-3,-1,-8,-9,6,-9,-4,-2,2,10,-4,-1,8,-10,7,10,-4,5,6,5,9,-4,-10,-5,-10,-10,3,-1,-1,8,4,-1,7,-2,-10,-6,-3,-10,-7,-5,10,-3,7,6,5,-9,1,9,6,10,-8,-2,7,4,-9,-2,8,-3,-9,4,-4,5,5,-3,5,4,10,-4,10,-2,1,-9,9,-4,5,-4,-5,4,3,8,3,-1,9,-1,-7,9,8,5,-2,-6,8,-7,9,2,9,1,-5,-6,-2,-5,-1,-5,4,6,2,4,2,-5,-3,6,-9,5,-1,-8,7,10,-10,4,-6,4,2,9,9,6,1,5,9,3,8,-1,-9,-2,-7,-4,9,-2,-8,-7,-3,1,5,5,6,5,3,1,-8,-2,-1,9,-6,1,10,-1,10], dtype = "uint16")#candidate|1532|(1120,)|const|uint16
var_1533 = relay.var("var_1533", dtype = "bool", shape = (312,))#candidate|1533|(312,)|var|bool
const_1534 = relay.const([[-4,7,5,1,-3,-9,-7,7,-1,-7,5,-6,-3,-9,-8,-10,-4,-2,-8,-6,-9,10,-1,-2,-1,-9,-3,9,-3,-4,9,-3,-10,-3,1,-1,-6,6,7,-10,-9,7,3,7,-2,6,7,-4,6,9,-9,-8,3,-10,2,-7,8,-2,-9,6,-1,3,-4,9,6,-7,-10,8,7,-2,-10,1,-6,-9,-1,6,-9,-2,-8,3,8,-9,-3,2,8,10,-6,6,-1,4,-1,-3,-1,-1,5,5,4,-4,2,8,1,-10,8,-8,2,-2,-4,3,-10,-6,-10,10,4,10,9,8,5,-8,5,-3,-10,9,-10,9,9,-6,-6,-3,-2,10,1,3,5,9,7,-6,7,-1,8,-8,7,7,2,-8,3,8,-4,-1,2,9,-2,-6,-2,5,-9,8,6,-1,-5,5,-5,-1,-1,9,4,5,-5,-6,-10,-7,-3,4,10,10,-4,-3,-5,9,-9,-3,8,-1,-9,-2,-8,-7,-5,4,4,-3,8,-7,-2,-3,7,-6,-4,-10,3,-3,4,-4,8,-6,-2,3,7,-5,8,-2,3,-10,4,-1,3,-8,1,5,7,-6,-10,-1,10,-6,3,3,-5,-5,2,-3,-10,-1,-2,2,8,10,-6,-7,-6,-5,10,-7,1,-1,7,-2,-7,-8,1,-2,-6,9,3,8,-10,10,-3,2,-8,8,10,-10,3,8,8,3,2,7,9,-7,-10,-8,4,6,-4,7,6,-3,-5,-5,8,-8,1,6,-1,-10,9,-2,7,-5,6,-8,-1,-3,9,1,7,8,3,1,-8,-2,8,-2,-6,9,10,4,6,10,-7,-5,-8,-4,8,6,-6,-6,4,3,-6,-2,10,10,3,-1,10,-5,-10,3,4,-5,8,9,1,2,2,6,9,-8,-7,-3,7,-9,-8,-7,10,7,5,-1,-5,6,8,1,-9,10,-10,-4,2,5,6,4,-6,-5],[4,9,-9,-9,6,-2,9,-2,-6,7,10,10,6,1,5,-4,9,2,-6,-5,-1,7,1,-8,-6,9,-8,1,4,-5,9,2,3,-8,-3,1,-1,3,-10,1,7,-3,8,9,7,3,-5,3,-6,-9,3,-4,-10,6,-7,7,8,1,5,10,-5,-7,-7,-10,-3,-4,1,-1,-5,3,8,6,-10,-4,6,-7,8,-5,6,9,-6,-8,-1,8,-7,-7,-10,1,-1,-5,10,10,-7,6,-2,-3,-8,-5,-9,2,-3,9,4,-5,6,2,1,-7,-6,-10,-7,-7,5,3,-5,9,6,1,-1,-2,6,2,-5,4,1,-2,-10,-1,-8,-10,-1,-1,1,6,-10,-9,-4,4,10,-3,-3,-9,-1,-9,-7,2,-1,5,-4,-4,-1,1,-3,-5,2,-6,-10,-9,5,1,-8,-2,-5,1,-9,-6,-7,8,-3,-5,-10,1,5,-2,-9,-4,8,-5,2,2,10,-4,6,-7,4,3,2,-5,-3,9,1,-10,9,2,3,5,-4,2,-2,1,2,1,8,-3,4,-5,-7,-4,2,10,-9,-1,-5,-5,4,4,-9,-2,-2,10,-10,10,9,4,1,-7,8,-5,10,1,-7,-10,1,-3,-10,8,7,-7,-4,-10,-4,5,-4,4,-4,8,9,8,-3,-2,4,-4,8,9,-4,-6,7,-10,-4,5,-3,-9,-2,-2,-6,7,-4,2,2,-3,2,5,-3,-10,-3,-6,9,-9,-10,7,9,7,7,-5,-5,-5,10,-8,-9,1,-5,-10,-2,-9,-4,-10,10,-4,9,6,-2,10,-5,6,-7,5,3,10,6,8,4,1,-7,3,-8,1,1,1,-2,-9,-5,-2,-2,6,2,6,-3,-1,1,8,4,9,-1,-1,-9,-1,-5,-7,-7,-4,10,-4,4,5,9,7,1,9,6,6,-10,-4,-1,-3,7,-7,5,9,-9,7,8,-3,9,2],[2,5,-6,-9,1,7,-7,-4,-8,-4,-9,-6,4,-7,-9,-10,-6,5,1,9,5,-9,-2,5,-6,-6,-9,-2,-10,-5,8,2,-8,6,-2,-3,-2,-9,3,-2,-4,-6,1,-5,-6,1,-6,8,1,-5,-10,2,-9,4,-7,-5,-7,4,-8,8,-9,-6,4,-9,7,-10,10,-8,-2,-5,3,10,8,7,-10,9,-5,-2,-8,-4,5,-1,3,-6,-4,-4,8,6,-5,-3,9,4,-5,-3,-9,8,-10,-9,-10,9,-5,-2,8,-10,-2,-10,2,-7,4,2,8,7,10,-10,-2,-8,-6,1,-10,-7,-1,5,2,-2,3,-10,-5,6,5,-10,9,-4,-10,-6,-6,-5,3,2,-4,-4,10,8,10,-3,-4,-4,2,-5,-4,3,8,-7,-7,-8,5,8,3,3,1,-10,10,5,3,4,-5,-5,4,5,3,2,3,-7,7,-2,9,-1,-8,-1,-10,-8,2,9,-7,9,6,-2,-3,-7,-1,9,3,-9,10,-1,6,5,-3,6,-1,-2,6,7,-2,-10,-3,1,10,-8,1,-1,1,5,-2,-5,-7,1,-10,-5,-3,5,5,-4,7,5,5,5,2,1,-4,-7,7,4,-6,-10,-5,5,-3,5,4,8,-4,5,-4,7,7,8,-2,1,-1,-7,8,-4,-4,10,9,-7,-2,6,-3,3,9,-3,-4,-8,-7,-3,8,5,8,-2,-5,7,-3,3,-6,-5,-10,5,-5,2,10,9,3,-2,1,-8,-2,4,-8,3,-5,-8,-9,10,-5,-9,8,-5,-4,-1,-10,3,-4,9,-6,-5,-1,6,3,7,8,5,4,6,4,4,8,7,-4,3,9,1,-10,-3,4,-3,3,-10,-5,-6,-8,4,-8,10,-7,4,-1,-7,3,-6,-9,-1,4,-1,10,9,-10,3,-3,-9,-4,-10,9,7,-9,-9,1,-3,9,-5,3,-4,8,10],[10,6,4,10,3,-3,2,3,2,-10,9,-10,3,7,3,5,-7,-9,6,4,9,-4,-1,-6,-2,-4,6,-5,-1,-2,-10,-10,-5,7,8,-3,-1,10,1,-5,-6,3,-4,-3,-3,-9,-10,-9,8,8,-1,5,-7,4,-2,-10,9,-10,-4,-7,-8,9,7,-6,-7,-1,7,-10,10,2,-2,-8,-8,3,-5,-10,-7,4,-10,-9,5,5,5,-6,-9,4,-1,-2,5,2,6,-5,-4,8,-7,2,8,-6,3,5,10,-5,6,-1,-5,-10,-8,5,-4,-7,2,7,-9,1,6,-5,-9,-9,-10,-5,5,5,2,5,-4,9,4,-6,-8,4,-4,10,1,-8,10,-3,9,-8,9,7,8,9,-9,-4,3,2,-8,3,-4,10,4,-8,-3,-4,-2,8,-6,-3,-4,-3,-8,6,-7,-7,8,6,-1,5,-3,-8,1,-6,-5,-1,7,-7,8,2,10,8,-7,2,-9,1,9,6,7,4,-2,-10,10,5,-1,-7,6,-3,-2,-10,3,2,3,1,-1,-10,3,-3,9,2,4,-1,5,-3,8,-7,-5,4,-8,-7,-1,3,1,6,1,-10,-7,5,-6,8,-4,-6,5,-8,-6,-3,4,-2,9,4,5,-7,4,4,-2,3,-9,-6,2,9,-9,-6,8,9,-3,-7,5,-1,-6,9,7,-4,3,-1,4,-3,-2,-9,7,8,-8,-10,-1,-4,-4,-6,6,-7,2,2,-8,10,-3,10,4,10,5,9,-1,-2,7,-5,-10,10,10,7,-8,-10,3,-3,-8,-2,-4,-10,5,9,-1,-5,-7,-2,-8,7,-5,10,-6,6,-7,10,1,-6,1,-8,-2,-3,7,-7,4,4,-2,-7,7,-6,-4,-6,4,1,9,-8,-4,9,-6,-8,-2,-10,-7,5,-8,10,7,7,10,-9,-9,2,-9,5,-9,8,7,8,-2,-2,7,-4,-8,8],[-1,10,5,5,5,1,-5,7,-4,-10,9,-9,-3,-1,-6,-10,-7,6,4,-7,-3,3,7,2,5,10,-3,10,-3,-7,-1,3,1,9,-3,4,-5,4,7,3,-9,5,3,-7,8,3,-3,5,-8,-9,1,8,2,-7,-9,10,3,-1,-3,-3,4,-10,2,3,2,-4,-7,8,-4,8,-5,-3,-4,-7,5,-9,5,6,-7,-1,2,3,-6,9,-5,-5,-3,-1,5,7,-9,6,6,-5,-2,-1,2,4,-4,-9,-7,-1,5,1,-1,7,-5,-6,-7,-1,9,-3,-7,-10,9,-9,-6,-1,2,10,-10,-5,-9,3,6,-7,9,6,9,4,7,-6,-4,3,-9,-3,-7,-6,-1,-6,-7,10,5,2,3,-1,1,-3,-6,-5,7,-6,4,5,-2,-2,4,-3,-1,-2,-10,5,2,-8,-4,3,-9,-8,-2,-10,-3,-3,6,7,-2,-2,-2,6,6,-2,7,4,6,-10,-6,-5,3,-10,-4,8,4,8,8,-9,10,-5,-9,-2,2,3,10,-8,6,6,3,-7,4,4,-1,-6,-6,-5,-1,-8,-7,-10,-1,-4,8,-8,-3,-9,-2,9,-8,2,8,-7,-6,-2,9,2,2,-8,5,1,-3,-5,3,-6,-10,3,10,7,-6,-7,-10,-7,-6,-1,5,2,-2,2,-2,-6,-9,-10,-8,4,-3,1,1,-6,-4,-1,10,-6,-10,-8,9,5,-3,-8,2,-9,3,8,9,-3,2,-4,7,5,-8,-10,-8,-4,1,-4,-4,-10,2,-10,-4,5,-7,8,-9,-3,-7,4,9,-6,10,3,-4,10,3,-6,5,2,-10,-7,-7,-6,3,-2,7,-3,10,2,1,10,4,-10,9,2,-6,8,9,-8,3,-5,7,-9,5,1,-5,-1,-6,7,-5,-5,-8,-2,9,1,9,-2,3,-3,3,8,6,-9,10,-10,-7,-4,9,3,-8,-10],[10,3,-3,6,2,-6,-1,1,-10,-6,5,3,-8,2,1,-4,3,-6,4,2,4,-6,-10,-6,-7,9,-2,8,1,7,3,2,-9,-10,-10,10,-8,-9,-5,-3,5,6,6,-9,-5,8,-10,-4,1,-1,-6,-5,9,-7,6,7,-1,3,9,4,-10,4,7,10,-1,8,-4,-4,-6,-9,10,-8,-1,10,-2,-7,-9,4,-8,5,-5,-9,-8,4,-5,-6,1,7,4,-5,2,-9,-3,-8,-9,-2,-5,-5,-7,7,-4,-8,7,-8,-3,-7,2,-7,-1,8,7,6,3,5,10,2,4,-10,5,2,-10,-4,-7,9,-5,9,7,6,-7,-1,-4,5,-5,9,-3,-10,1,5,-5,7,-1,4,4,-1,-2,9,5,3,9,10,6,4,3,7,-4,-10,1,-7,5,-5,10,4,-8,-5,-1,-8,6,2,9,-9,-4,-2,-4,-9,6,-9,-9,-10,-10,-3,-2,5,1,7,-9,-5,-5,9,7,-2,3,7,-2,9,4,2,1,3,-7,3,7,8,-6,-3,4,-4,-5,-8,-10,1,-9,1,10,-3,2,-2,4,1,6,1,-9,8,-7,-3,5,2,-6,-5,5,-3,4,8,-5,7,4,3,4,9,10,-8,-3,1,1,8,-6,5,-8,7,3,-7,2,2,1,-7,1,-6,-4,-6,2,1,6,-7,10,-8,-8,1,4,7,-5,8,8,4,10,-6,-5,2,6,4,5,-10,6,4,7,5,4,1,9,3,-7,-4,8,4,7,-2,1,-5,5,6,9,-5,-7,4,-2,-5,-7,-1,-7,1,-2,-6,2,9,3,9,-7,6,1,-9,-8,-1,-3,2,-5,6,3,-10,5,4,5,1,-8,-7,8,1,10,3,-2,3,-5,7,-3,4,-8,-8,-2,6,-8,10,-7,-4,-4,-10,3,6,-4,-7,-9,3,-9,-10,-9,-2,9,5],[-4,-3,-7,5,-8,-7,3,7,4,1,2,6,-10,-8,-10,-5,3,3,10,-9,8,-1,9,2,8,9,-5,-1,3,3,4,10,-5,7,-2,6,-2,10,2,9,5,10,-2,6,10,-1,-9,-2,-5,-4,5,6,6,1,7,-2,7,-6,-2,-6,-4,-9,-9,9,-7,-2,2,10,-3,-10,2,-5,-3,-7,3,-7,10,10,-6,3,4,6,3,-6,10,7,9,8,-2,6,6,-2,1,6,-3,-1,-6,2,6,8,-5,5,-8,5,7,5,7,2,9,5,8,-8,-6,6,10,7,10,1,-6,9,-10,-1,-10,-6,2,1,-1,6,1,9,-7,-9,10,-6,8,4,-10,6,-7,-8,-6,-10,-2,-6,8,4,-2,4,-5,-10,8,9,-8,-7,-9,-5,6,4,10,8,-5,-3,9,1,-10,5,5,-5,10,8,-4,4,8,5,8,-8,-10,-10,-10,1,1,7,1,-9,-1,10,-1,7,-4,9,-8,7,-2,6,-7,4,-4,-4,-3,6,9,3,-4,-1,-3,-2,-9,-10,3,3,-5,-8,9,6,4,-8,-9,2,1,2,4,-8,3,6,-6,-8,7,1,-9,-8,8,3,-8,3,-6,5,10,-5,-3,-1,-9,1,-6,-9,-1,7,2,-1,4,-10,-10,2,-10,5,7,2,6,9,-10,-8,-7,2,-2,2,6,8,-8,-6,-7,-2,6,10,9,-5,-10,-10,5,-8,5,-4,-1,5,-5,8,1,-6,-3,-10,-6,1,-5,4,-5,8,2,2,-4,-3,-9,1,-10,-6,5,-5,-10,-10,-9,4,7,-5,2,2,-4,7,5,-3,8,6,-7,6,-7,-2,-9,2,8,4,-5,-8,-1,-2,4,1,-7,5,2,-3,8,-7,2,4,7,10,6,10,-6,6,-10,-3,-8,2,2,8,1,-8,5,2,3,3,-1,-9,-5,-6,5,-1]], dtype = "uint64")#candidate|1534|(7, 364)|const|uint64
call_1531 = relay.TupleGetItem(func_1118_call(relay.reshape(call_1502.astype('float64'), [7, 6, 3]), relay.reshape(const_1532.astype('uint16'), [1120,]), relay.reshape(var_1533.astype('bool'), [312, 1]), relay.reshape(const_1534.astype('uint64'), [13, 14, 14]), ), 6)
call_1535 = relay.TupleGetItem(func_1123_call(relay.reshape(call_1502.astype('float64'), [7, 6, 3]), relay.reshape(const_1532.astype('uint16'), [1120,]), relay.reshape(var_1533.astype('bool'), [312, 1]), relay.reshape(const_1534.astype('uint64'), [13, 14, 14]), ), 6)
output = relay.Tuple([call_1502,call_1531,const_1532,var_1533,const_1534,])
output2 = relay.Tuple([call_1503,call_1535,const_1532,var_1533,const_1534,])
func_1540 = relay.Function([var_1533,], output)
mod['func_1540'] = func_1540
mod = relay.transform.InferType()(mod)
mutated_mod['func_1540'] = func_1540
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1541 = relay.var("var_1541", dtype = "bool", shape = (312,))#candidate|1541|(312,)|var|bool
func_1540_call = mutated_mod.get_global_var('func_1540')
call_1542 = func_1540_call(var_1541)
output = call_1542
func_1543 = relay.Function([var_1541], output)
mutated_mod['func_1543'] = func_1543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1302_call = mod.get_global_var('func_1302')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_1550 = func_1302_call()
call_1551 = func_1302_call()
var_1556 = relay.var("var_1556", dtype = "float64", shape = (7, 6, 3))#candidate|1556|(7, 6, 3)|var|float64
bop_1557 = relay.subtract(call_1550.astype('int32'), relay.reshape(var_1556.astype('int32'), relay.shape_of(call_1550))) # shape=(7, 6, 3)
bop_1560 = relay.subtract(call_1551.astype('int32'), relay.reshape(var_1556.astype('int32'), relay.shape_of(call_1551))) # shape=(7, 6, 3)
uop_1569 = relay.atan(call_1550.astype('float64')) # shape=(7, 6, 3)
uop_1571 = relay.atan(call_1551.astype('float64')) # shape=(7, 6, 3)
uop_1572 = relay.erf(uop_1569.astype('float64')) # shape=(7, 6, 3)
uop_1574 = relay.erf(uop_1571.astype('float64')) # shape=(7, 6, 3)
uop_1577 = relay.tan(uop_1572.astype('float32')) # shape=(7, 6, 3)
uop_1579 = relay.tan(uop_1574.astype('float32')) # shape=(7, 6, 3)
output = relay.Tuple([bop_1557,uop_1577,])
output2 = relay.Tuple([bop_1560,uop_1579,])
func_1581 = relay.Function([var_1556,], output)
mod['func_1581'] = func_1581
mod = relay.transform.InferType()(mod)
var_1582 = relay.var("var_1582", dtype = "float64", shape = (7, 6, 3))#candidate|1582|(7, 6, 3)|var|float64
output = func_1581(var_1582)
func_1583 = relay.Function([var_1582], output)
mutated_mod['func_1583'] = func_1583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1247_call = mod.get_global_var('func_1247')
func_1248_call = mutated_mod.get_global_var('func_1248')
call_1595 = func_1247_call()
call_1596 = func_1247_call()
func_1419_call = mod.get_global_var('func_1419')
func_1424_call = mutated_mod.get_global_var('func_1424')
var_1615 = relay.var("var_1615", dtype = "uint8", shape = (630, 1))#candidate|1615|(630, 1)|var|uint8
var_1616 = relay.var("var_1616", dtype = "uint64", shape = (2548, 1))#candidate|1616|(2548, 1)|var|uint64
call_1614 = relay.TupleGetItem(func_1419_call(relay.reshape(var_1615.astype('uint8'), [5, 14, 9]), relay.reshape(var_1615.astype('uint8'), [5, 14, 9]), relay.reshape(var_1616.astype('uint64'), [2548,]), ), 2)
call_1617 = relay.TupleGetItem(func_1424_call(relay.reshape(var_1615.astype('uint8'), [5, 14, 9]), relay.reshape(var_1615.astype('uint8'), [5, 14, 9]), relay.reshape(var_1616.astype('uint64'), [2548,]), ), 2)
uop_1620 = relay.log10(call_1595.astype('float64')) # shape=(7, 6, 3)
uop_1622 = relay.log10(call_1596.astype('float64')) # shape=(7, 6, 3)
output = relay.Tuple([call_1614,var_1615,var_1616,uop_1620,])
output2 = relay.Tuple([call_1617,var_1615,var_1616,uop_1622,])
func_1628 = relay.Function([var_1615,var_1616,], output)
mod['func_1628'] = func_1628
mod = relay.transform.InferType()(mod)
mutated_mod['func_1628'] = func_1628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1628_call = mutated_mod.get_global_var('func_1628')
var_1630 = relay.var("var_1630", dtype = "uint8", shape = (630, 1))#candidate|1630|(630, 1)|var|uint8
var_1631 = relay.var("var_1631", dtype = "uint64", shape = (2548, 1))#candidate|1631|(2548, 1)|var|uint64
call_1629 = func_1628_call(var_1630,var_1631,)
output = call_1629
func_1632 = relay.Function([var_1630,var_1631,], output)
mutated_mod['func_1632'] = func_1632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1230_call = mutated_mod.get_global_var('func_1230')
call_1637 = func_1229_call()
call_1638 = func_1229_call()
var_1671 = relay.var("var_1671", dtype = "float64", shape = (7, 6, 3))#candidate|1671|(7, 6, 3)|var|float64
bop_1672 = relay.greater_equal(call_1637.astype('bool'), relay.reshape(var_1671.astype('bool'), relay.shape_of(call_1637))) # shape=(7, 6, 3)
bop_1675 = relay.greater_equal(call_1638.astype('bool'), relay.reshape(var_1671.astype('bool'), relay.shape_of(call_1638))) # shape=(7, 6, 3)
func_1540_call = mod.get_global_var('func_1540')
func_1543_call = mutated_mod.get_global_var('func_1543')
var_1687 = relay.var("var_1687", dtype = "bool", shape = (312,))#candidate|1687|(312,)|var|bool
call_1686 = relay.TupleGetItem(func_1540_call(relay.reshape(var_1687.astype('bool'), [312,])), 1)
call_1688 = relay.TupleGetItem(func_1543_call(relay.reshape(var_1687.astype('bool'), [312,])), 1)
bop_1691 = relay.minimum(call_1686.astype('int16'), relay.reshape(var_1687.astype('int16'), relay.shape_of(call_1686))) # shape=(13, 8, 3)
bop_1694 = relay.minimum(call_1688.astype('int16'), relay.reshape(var_1687.astype('int16'), relay.shape_of(call_1688))) # shape=(13, 8, 3)
output = relay.Tuple([bop_1672,bop_1691,])
output2 = relay.Tuple([bop_1675,bop_1694,])
func_1709 = relay.Function([var_1671,var_1687,], output)
mod['func_1709'] = func_1709
mod = relay.transform.InferType()(mod)
mutated_mod['func_1709'] = func_1709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1709_call = mutated_mod.get_global_var('func_1709')
var_1711 = relay.var("var_1711", dtype = "float64", shape = (7, 6, 3))#candidate|1711|(7, 6, 3)|var|float64
var_1712 = relay.var("var_1712", dtype = "bool", shape = (312,))#candidate|1712|(312,)|var|bool
call_1710 = func_1709_call(var_1711,var_1712,)
output = call_1710
func_1713 = relay.Function([var_1711,var_1712,], output)
mutated_mod['func_1713'] = func_1713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mod.get_global_var('func_924')
func_925_call = mutated_mod.get_global_var('func_925')
call_1763 = relay.TupleGetItem(func_924_call(), 0)
call_1764 = relay.TupleGetItem(func_925_call(), 0)
func_335_call = mod.get_global_var('func_335')
func_338_call = mutated_mod.get_global_var('func_338')
const_1776 = relay.const([6,10,1,-8,7,-7,7,-4,8,7,-1,1,-6,-2,-8,6,4,-7,6,-7,-9,-1,6,9,-9,8,-9,-3,-3,-1,-1,-6,2,9,-7,2,3,-4,9,7,-8,-7,5,3,2,-1,-2,9,8,-4,4,-3,-9,8,-10,5,9,6,-1,-3,4,7,9,-10,4,4,-9,-7,-3,6,9,1,3,-1,8,-9,-6,-8,2,3,-9,-6,-3,-9,-7,10,-8,1,10,-8,-5,-1,-3,7,-7,1,-5,-6,-9,7,-10,1,9,1,-5,-8,-6,-3,-7,4,9,10,2,6,-9,-9,-9,-8,4,8,8,2,-4,-3,-3,3,-2,-10,8,-8,-9,7,7,6,7,-1,-1,-9,7,-8,-10,-6,3,-9,-2,-10,-3,-8,-4,-2,-10,6,-7,10,8,4,-8,-2,-6,4,5,-8,-10,-9,-3,-5,-3,8,-5,-1,4,-3,-8,5,-4,-4,2,-7,10,-7,6,-8,3,8,4,-3,9,-1,10,10,5,-5,6,9,10,9,-10,-7,-2,-2,-4,-5,2,-9,3,8,-5,-5,9,-7,10,6,-4,2,6,4,-1,-5,6,7], dtype = "uint64")#candidate|1776|(220,)|const|uint64
call_1775 = relay.TupleGetItem(func_335_call(relay.reshape(const_1776.astype('uint64'), [2, 11, 10]), relay.reshape(const_1776.astype('uint64'), [2, 11, 10]), ), 0)
call_1777 = relay.TupleGetItem(func_338_call(relay.reshape(const_1776.astype('uint64'), [2, 11, 10]), relay.reshape(const_1776.astype('uint64'), [2, 11, 10]), ), 0)
func_1247_call = mod.get_global_var('func_1247')
func_1248_call = mutated_mod.get_global_var('func_1248')
call_1803 = func_1247_call()
call_1804 = func_1247_call()
func_1229_call = mod.get_global_var('func_1229')
func_1230_call = mutated_mod.get_global_var('func_1230')
call_1807 = func_1229_call()
call_1808 = func_1229_call()
output = relay.Tuple([call_1763,call_1775,const_1776,call_1803,call_1807,])
output2 = relay.Tuple([call_1764,call_1777,const_1776,call_1804,call_1808,])
func_1809 = relay.Function([], output)
mod['func_1809'] = func_1809
mod = relay.transform.InferType()(mod)
output = func_1809()
func_1810 = relay.Function([], output)
mutated_mod['func_1810'] = func_1810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mod.get_global_var('func_924')
func_925_call = mutated_mod.get_global_var('func_925')
call_1836 = relay.TupleGetItem(func_924_call(), 0)
call_1837 = relay.TupleGetItem(func_925_call(), 0)
var_1855 = relay.var("var_1855", dtype = "float64", shape = (7, 6, 3))#candidate|1855|(7, 6, 3)|var|float64
bop_1856 = relay.greater(call_1836.astype('bool'), relay.reshape(var_1855.astype('bool'), relay.shape_of(call_1836))) # shape=(7, 6, 3)
bop_1859 = relay.greater(call_1837.astype('bool'), relay.reshape(var_1855.astype('bool'), relay.shape_of(call_1837))) # shape=(7, 6, 3)
uop_1862 = relay.sin(bop_1856.astype('float32')) # shape=(7, 6, 3)
uop_1864 = relay.sin(bop_1859.astype('float32')) # shape=(7, 6, 3)
func_1419_call = mod.get_global_var('func_1419')
func_1424_call = mutated_mod.get_global_var('func_1424')
const_1869 = relay.const([7,1,5,-9,-3,-3,-6,-2,2,1,4,9,7,-1,7,5,-1,8,-4,1,9,-2,-8,8,-10,7,-6,-2,-2,-8,-8,6,1,5,10,-3,-9,-6,7,-6,2,3,-2,1,-9,-6,5,-6,6,2,-7,-5,-7,-3,4,5,5,-3,4,-10,6,10,9,-6,7,-3,2,-3,10,5,-7,9,8,-6,8,7,-5,-5,-3,9,10,6,-9,-1,7,2,-6,-4,3,-9,10,-4,3,9,-10,-9,10,2,-6,-8,-1,-7,-1,5,2,4,-10,-7,10,8,-4,-2,-2,-4,9,1,10,1,8,-5,10,4,-10,2,9,-9,6,-7,-6,-9,3,-9,10,6,5,-10,-1,-4,7,10,-5,1,2,4,-1,5,4,6,-3,2,4,-3,-6,5,-3,1,5,1,-2,-5,9,4,3,7,-4,2,-3,-10,-1,2,9,-2,-7,-10,-8,-1,-5,2,7,-2,10,-7,-10,-2,4,-3,-9,-7,-7,-7,-2,-6,3,4,9,1,3,-2,6,4,-10,-3,3,9,-7,-7,-5,9,-10,8,-1,9,-8,9,-7,-6,-9,9,-8,-1,5,7,10,-5,-9,10,-5,-5,9,9,-6,-6,3,-4,4,-8,-5,8,-1,6,8,-1,2,-8,-10,1,-3,9,-2,8,2,4,1,1,-7,-1,2,9,-7,-6,-5,3,2,5,8,-10,1,6,-8,-5,3,-9,5,-10,5,9,3,-10,-5,10,10,2,6,3,-4,-8,-4,3,-2,-4,-10,-9,-7,9,3,5,-1,-3,4,10,6,-6,-2,-10,3,5,8,-6,10,7,5,5,1,-3,-7,5,-3,-2,2,-1,-7,-8,-10,-10,-2,-4,-2,-4,-10,-8,-2,-8,3,-1,-5,10,9,-7,-4,1,-7,-4,-5,-2,7,-2,2,-5,-4,-2,9,1,1,8,8,-3,4,3,-8,-4,4,6,-6,3,-5,8,-8,-3,8,6,9,-2,9,-2,-10,-3,-2,2,-10,-9,1,-1,8,-8,3,6,-3,7,-4,10,7,10,-2,1,-1,-9,2,1,-1,-8,-1,10,-3,-6,10,-2,-9,8,9,3,2,2,9,-3,10,-9,-8,-7,-8,7,-8,6,-1,9,6,10,2,-1,5,5,9,-8,-3,-7,7,2,5,3,2,8,3,-7,9,-8,-4,-2,7,10,-5,4,3,9,3,3,-5,-5,-8,5,-10,2,6,-7,-3,6,5,4,-5,5,-5,3,-7,8,1,-3,-6,5,10,-8,2,-3,-3,5,9,6,-6,6,7,1,9,9,8,9,9,-10,-1,-5,1,-2,10,6,7,1,8,-4,-5,-2,8,-2,-1,5,9,-6,-2,1,-4,-9,-1,-5,-4,7,1,-6,-3,5,3,5,1,-10,-8,6,2,-5,6,1,8,-1,7,7,6,-5,-1,8,-2,5,-1,-3,6,5,7,-4,-6,-3,10,5,1,4,-2,4,-1,5,-1,5,8,1,-8,10,10,8,-5,-8,5,-8,2,-1,2,7,6,-5,3,-8,1,-4,-3,-2,7,5,-2,9,5,-7,5,4,-7,4,5,9,-3,-8,7,-5,10,6,-2,-5,4,6,7,1,-9,4,-10,-9,-7,-1,6,9,-7,9,-10,8,8,5,6,-1,-2,8,-7,-7,5,-1], dtype = "uint8")#candidate|1869|(630,)|const|uint8
const_1870 = relay.const([-10,-7,-5,-8,-2,-4,7,-2,-4,1,-4,3,2,-9,6,-4,-5,7,-4,10,-8,-8,6,8,-6,-7,8,2,4,6,3,6,1,-8,8,4,2,3,-1,8,-1,-10,7,-1,-5,-8,-7,6,8,4,10,4,-9,10,9,9,-2,-9,3,9,6,-6,-2,10,6,7,-3,8,9,4,-5,-6,-6,-8,-4,6,-4,3,-9,-5,-9,1,-7,-6,8,-2,4,1,-2,8,-6,6,-1,4,-1,2,-5,-10,3,-9,-7,-3,-9,-1,-3,-9,-5,9,-3,5,5,-4,2,3,1,4,2,-8,-2,-4,-10,-6,-9,1,9,5,-5,2,-4,-5,-6,-10,-8,9,-7,-7,-7,2,-7,9,-10,9,5,7,8,-4,-2,-3,5,2,-7,9,-3,4,-5,-5,-9,-4,-8,6,4,-10,-4,-5,-7,1,6,-9,-2,-9,6,-5,10,1,-2,-4,7,-1,7,2,-4,7,4,1,9,-6,-5,1,-10,-5,-1,9,3,1,-7,-5,5,-1,7,8,1,4,4,-3,-10,-9,9,9,7,3,2,-4,-9,-7,-8,-6,-10,7,6,10,-2,8,-6,-5,-8,8,-6,8,-9,4,1,-8,-10,7,-7,-3,8,2,10,-9,-6,8,-9,-9,-1,-6,5,-5,9,1,9,-6,-7,10,-6,6,6,-3,-2,3,-5,8,-3,5,5,9,-1,-8,5,-8,5,-2,9,5,-10,-7,-7,5,7,1,7,5,-5,10,9,1,-3,-6,-10,6,-9,-7,9,4,3,8,-5,1,6,-10,-1,-8,5,7,-4,7,7,10,7,1,-1,-3,-4,4,6,-4,4,1,7,-7,2,-4,10,-4,10,-7,6,5,4,9,-3,7,4,-9,8,4,9,-1,-2,6,-2,-10,4,-8,7,10,-2,-9,7,-9,-5,-4,-1,-5,-10,4,5,10,-9,8,10,6,-7,8,5,8,10,-6,7,-3,-2,8,-1,5,-1,-8,4,-2,-10,-6,8,7,-8,-9,4,-1,-7,2,-9,9,-3,-10,-10,-8,1,-7,10,8,-9,-10,-7,9,-1,-3,9,10,-9,-7,-1,1,-10,2,4,-5,-7,6,-7,-9,6,-9,-5,7,7,3,10,3,-4,-10,-7,3,-2,-9,4,9,1,6,-7,10,-8,4,-10,-10,2,-3,6,2,-5,-9,8,-10,6,-6,1,-6,2,-9,-7,-7,10,9,-7,4,-1,-2,2,1,-10,-10,-5,-1,6,-9,10,3,5,-6,2,-4,-2,3,8,2,1,10,8,-2,1,9,-7,-1,-4,-5,-6,9,-7,4,6,-5,7,2,-9,2,-8,-1,-1,7,9,2,-3,3,-3,7,-4,6,-10,-9,-5,-8,9,-7,-4,-8,6,-8,10,1,10,-3,-2,6,-9,10,-5,6,10,6,8,8,-3,5,10,7,3,6,8,9,8,-1,2,5,-1,-7,-7,2,-1,-3,4,3,-1,5,3,-5,5,-2,-3,8,-9,4,-10,-6,-5,4,-1,9,7,9,7,-9,-2,-9,7,1,-4,2,3,-7,-6,-10,-9,9,10,-4,-4,1,-3,10,-2,7,-6,-2,-6,-9,-1,1,5,-5,-8,4,-1,7,-7,-7,-10,7,-5,4,9,6,-2,9,7,-2,3,8,-3,10,-3,-1,1,-8,-6,-10,8,4,-2,-7,4,-7,-5,3,-3,-10,-9,-9,8,9,-2,8,4,1,-2,9,8,-7,3,3,-2,-2,3,-5,1,-4,2,4,-1,-4,-3,-2,-8,-8,-6,7,-5,3,2,-8,10,7,-3,10,6,-10,4,4,9,-5,4,-7,2,-8,5,-7,-9,9,-5,-7,-2,4,8,-9,9,-6,-5,3,-2,-4,-8,-4,-5,-10,-3,-5,-3,-10,-6,-2,3,9,10,7,-4,10,2,-10,6,-9,-4,-3,-3,2,10,-4,1,-2,7,6,10,5,10,3,3,7,8,8,1,-9,-3,5,-8,8,8,-9,10,4,-9,-7,9,-4,2,-8,-2,-7,2,3,-10,-7,7,-1,-2,-8,-10,-7,-9,-7,3,-7,2,1,5,-4,-7,7,9,-2,1,-3,-6,-3,9,7,3,6,7,9,-1,1,6,-3,-6,-5,4,-1,8,5,-1,-1,8,10,-7,1,2,8,-10,2,-6,4,-4,-10,6,-2,-10,1,-10,-5,-10,5,-8,7,-3,-3,-5,-9,-9,-1,-6,2,-4,6,-4,1,7,5,10,-3,-2,-4,-3,-5,-3,7,-9,-9,-4,9,8,-3,7,-10,1,-1,-10,-9,7,-5,-10,2,-5,-4,-6,8,-4,-8,-8,-7,-4,1,1,-6,4,1,-8,-5,3,-2,2,-2,-9,-7,-1,-8,-3,8,7,-4,-7,-4,5,-6,1,-7,5,9,-2,-5,-3,5,-9,9,6,8,-8,6,4,-2,-9,-7,-10,2,-5,4,-9,-3,1,6,-7,1,-7,-7,-1,3,9,6,-6,-3,7,-8,-6,5,-5,7,3,5,6,-8,-4,7,-1,-5,3,-8,3,7,1,9,10,7,-3,-3,6,-6,-2,-6,-9,-10,8,5,7,3,1,-3,-7,6,3,-8,9,-9,-8,4,5,10,-5,5,6,-10,-9,9,1,5,-5,5,9,-6,9,4,5,7,8,4,9,2,6,5,9,3,5,7,-2,-10,-3,4,8,-10,3,-2,-7,-4,6,-10,1,8,-1,-9,7,3,4,10,1,10,-5,10,-5,-2,-4,-7,-8,-1,9,4,-1,-10,6,-9,-1,3,-1,7,-7,-8,-5,-4,-1,4,4,8,4,-2,-7,9,10,-5,5,9,-2,3,-2,-10,1,-3,-1,10,-10,-6,-3,-6,-5,6,-6,3,9,-7,2,-6,-1,-10,1,-8,4,7,-6,-2,7,-4,10,10,3,4,5,10,10,-10,10,1,1,1,4,-10,-9,3,2,-3,-9,2,-9,-1,10,10,-9,-4,-3,-10,6,10,-4,9,4,-3,-10,-8,7,8,1,1,-10,-2,10,2,10,3,2,-2,-5,1,1,-2,9,10,-7,1,6,4,3,-1,-7,1,-8,10,-9,7,-2,-10,1,2,3,-7,7,2,-9,-5,7,8,8,-9,10,-6,-6,-3,8,-5,9,9,-5,-5,4,-3,-5,-8,-8,9,2,-10,4,5,7,5,6,-1,7,-7,6,-3,10,4,-8,-8,10,9,1,8,-6,5,8,-4,2,5,-3,10,10,3,-9,-8,-9,3,-1,-10,-3,-10,1,-6,-7,-4,1,-4,-10,-1,-10,-5,6,-10,8,-7,-5,2,2,2,10,2,9,-4,-6,7,-6,4,-10,-10,-6,-9,-3,-8,10,-6,7,-4,5,7,-7,-7,7,-4,8,5,-8,-5,-5,7,5,8,1,-8,3,10,-8,-10,8,1,-7,-8,-1,7,-5,3,-8,-10,6,7,-3,-9,2,7,-5,-6,5,9,-6,-3,-3,-1,-1,9,-10,9,3,-6,9,-7,-4,-1,6,6,-8,-10,-7,-9,-1,6,-7,7,-2,5,8,8,-4,2,8,-1,-5,7,-4,-10,7,8,-8,-1,10,2,9,-2,8,6,-10,-2,8,8,-6,-8,-2,-4,-1,-1,-5,9,-4,1,-4,7,2,10,-1,-3,-7,-9,-7,-1,1,9,6,10,-10,-1,-5,-8,-10,-10,-9,9,6,-6,4,-1,-1,9,-10,-7,-1,5,-9,-7,-3,1,10,7,9,-8,1,5,2,1,-6,-10,-9,3,8,-8,-6,3,8,-3,3,7,3,-10,-10,6,-1,1,3,-9,-5,-4,-3,-9,8,7,3,9,-8,2,-10,-1,9,3,7,5,-7,5,7,-1,3,-8,2,6,-6,7,9,9,10,-7,3,3,2,-2,-9,4,10,2,-1,3,7,5,6,3,7,-6,-4,2,4,-5,-6,-9,-4,10,9,3,3,-3,4,-6,-6,1,1,7,5,2,-4,-10,4,-4,-5,-1,4,7,2,9,8,-9,1,-6,-8,8,9,-10,1,-6,-10,-5,4,2,-7,-1,1,6,6,6,10,5,5,-2,9,3,8,-6,1,-6,1,5,-9,-1,1,-8,3,-10,-1,5,4,-1,-5,3,-7,4,8,7,10,-2,-7,-4,6,-1,10,-10,1,7,10,-1,10,-4,-7,-6,1,2,8,10,-1,2,-4,-6,-6,10,4,3,-7,2,10,-10,6,10,-7,-10,1,2,4,10,-2,6,-2,-7,5,-2,7,-7,6,-7,-8,-3,-8,-4,-4,4,7,-1,-8,7,-10,-8,2,10,-5,-9,3,-3,9,-5,4,-9,7,9,10,9,-4,7,-4,-2,-5,3,-6,-8,4,8,-3,8,-6,-5,4,8,-3,-3,-3,6,-9,5,5,-10,9,6,4,-1,-4,9,-2,-5,-4,-2,7,-7,6,2,7,10,-10,9,-2,-4,-1,-2,2,8,10,-2,-7,-3,-3,4,-9,-8,-1,-4,-1,9,3,-5,-3,-10,-2,-7,-3,3,7,8,4,-6,-4,9,-9,7,2,-7,-2,5,1,-4,4,2,9,-9,5,7,6,-7,2,6,-4,8,-2,-2,7,-9,7,4,1,-6,-9,-8,-7,-7,-6,5,-6,8,6,-10,7,-3,1,10,-1,8,9,4,-10,-9,5,-8,6,8,-5,-6,8,-7,-9,10,-3,-1,-6,-2,-7,5,-4,-3,-9,4,-9,-6,-10,-7,10,-10,-8,9,5,2,-10,-5,10,-5,-1,10,-7,-9,9,-7,-3,-6,-7,5,-6,-5,-4,1,10,-10,2,3,8,8,9,-8,2,3,1,-1,-5,-1,9,-2,7,10,-5,9,-4,-1,-4,-5,-5,8,-8,-10,7,3,-5,-3,-10,2,-5,-7,9,3,-8,-2,9,-10,-8,2,-4,-9,2,1,-6,-7,3,-3,-3,8,7,6,-7,-2,9,-8,1,-1,-3,6,5,-4,7,-3,-4,-2,8,-8,6,-9,6,-7,-9,1,-3,1,8,8,-3,-6,1,-9,-9,3,-6,10,2,-8,-8,-10,6,2,-7,1,-3,-8,-6,1,-3,-1,-9,-9,-10,1,-6,10,-4,-5,-5,2,3,10,6,-5,8,-6,-6,-9,3,-6,-2,-2,9,1,6,-9,5,10,-3,-2,10,-9,4,5,-7,-8,-7,9,-10,1,-6,-4,-2,-2,-9,5,2,-8,-1,8,5,-8,8,10,6,3,2,2,-2,-8,-1,-10,6,-1,-2,4,5,-10,7,-1,1,-6,-1,-6,5,2,6,8,2,8,8,-1,-4,-6,-1,6,10,5,-2,-2,5,-2,-10,5,-10,5,-3,-1,-7,7,-3,-10,-9,-4,-7,10,4,5,4,5,-10,-2,-7,1,-1,4,5,6,-10,-5,-9,-1,6,-5,5,-4,10,-2,-2,-3,-3,-6,-10,4,-5,6,-3,6,-2,-2,3,-4,6,2,-8,1,-9,-4,3,8,7,3,3,-3,-2,-4,3,-8,5,-4,-2,-6,4,-9,-8,-5,2,-6,5,10,4,-2,3,3,9,-10,-4,3,8,3,10,-8,-3,-5,-4,8,10,-3,2,-10,-3,6,-9,-5,3,-1,-5,-5,-5,-1,-7,7,10,2,-5,-5,-7,8,-1,2,-1,7,4,-8,-2,10,-7,1,-8,-1,7,3,-8,9,6,-1,6,6,-10,1,-1,-3,9,-8,-9,9,-7,-10,-7,-4,2,-1,5,-8,-2,-9,1,3,-8,-8,2,-2,4,-5,3,-4,-9,3,4,1,10,1,3,-3,7,-9,1,-9,5,5,-7,5,6,10,-9,8,-2,-3,4,-8,-1,9,8,6,4,-1,10,7,-4,-6,9,-2,-4,7,-5,9,2,8,8,3,-5,4,-10,1,-9,5,-2,2,6,-6,-6,6,4,10,-8,-3,7,6,10,9,6,-1,5,-6,1,-9,-6,-5,-9,-10,7,-7,5,-2,-3,-6,7,7,9,2,-3,8,-5,10,7,-8,7,9,-1,7,-3,2,2,-3,-3,2,-3,-5,-3,-2,-7,9,8,-6,-8,-4,7,3,5,10,-9,4,-5,2,-6,-10,-7,-6,6,3,-6,7,2,5,-5,5,-1,8,8,4,8,-8,3,-9,8,7,8,-1,5,8,-5,6,4,10,5,7,-7,8,8,1,9,2,-1,8,1,5,-2,1,-6,7,4,7,-6,-3,2,2,3,9,-9,9,-4,7,7,2,-9,-5,1,-8,6,-3,5,-8,-9,2,5,-7,8,-6,10,-6,-7,5,4,-8,5,7,-7,8,-3,4,-4,8,3,-6,-2,-5,5,10,1,8,-7,6,3,10,6,5,-2,-1,6,9,10,-8,4,-4,4,-3,-8,-7,-4,-8,-2,2,5,1,3,-9,6,7,7,-6,-3,4,-9,2,-1,-6,1,-6,-3,8,-1,-10,8,6,9,6,3,3,4,-5,-6,-7,1,5,-2,-2,4,9,-9,5,9,10,-3,3,-10,2,9,5,5,-6,7,-10,-1,-10,4,-8,9,4,-3,-1,5,-1,5,6,7,4,1,-2,-5,-5,-8,-3,-3,8,3,-10,-3,3,-8,7,-1,9,7,6,-4,10,-6,-10,9,6,9,10,-9,-1,4,-2,9,8,-3,-7,-7,-2,1,1,-9,-1,5,2,8,10,-9,6,-2,-5,3,3,-10,-3,6,-10,1,5,5,-9,-1,5,-1,-2,-9,9,9,-2,-6,2,8,-9,3,8,-3,3,6,-6,10,10,-2,-1,-1,-2,7,3,5,-8,-5,-10,-1,-2,2,-6], dtype = "uint64")#candidate|1870|(2548,)|const|uint64
call_1868 = relay.TupleGetItem(func_1419_call(relay.reshape(const_1869.astype('uint8'), [5, 14, 9]), relay.reshape(const_1869.astype('uint8'), [5, 14, 9]), relay.reshape(const_1870.astype('uint64'), [2548,]), ), 5)
call_1871 = relay.TupleGetItem(func_1424_call(relay.reshape(const_1869.astype('uint8'), [5, 14, 9]), relay.reshape(const_1869.astype('uint8'), [5, 14, 9]), relay.reshape(const_1870.astype('uint64'), [2548,]), ), 5)
output = relay.Tuple([uop_1862,call_1868,const_1869,const_1870,])
output2 = relay.Tuple([uop_1864,call_1871,const_1869,const_1870,])
func_1875 = relay.Function([var_1855,], output)
mod['func_1875'] = func_1875
mod = relay.transform.InferType()(mod)
var_1876 = relay.var("var_1876", dtype = "float64", shape = (7, 6, 3))#candidate|1876|(7, 6, 3)|var|float64
output = func_1875(var_1876)
func_1877 = relay.Function([var_1876], output)
mutated_mod['func_1877'] = func_1877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1302_call = mod.get_global_var('func_1302')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_1895 = func_1302_call()
call_1896 = func_1302_call()
const_1910 = relay.const([[[-0.454676,-3.080630,-2.143800],[-3.179245,1.921487,-6.582667],[-1.106338,8.019824,-2.966161],[-9.773067,-7.121803,0.574267],[0.789112,-1.134591,0.804827],[-6.399222,3.467148,8.047586]],[[-7.087235,-9.131295,3.555216],[9.691924,-6.423230,7.424813],[-5.981751,-0.407524,-2.081164],[-9.660276,2.630334,-1.450273],[-1.409202,8.690407,-6.133208],[2.649566,-0.451570,-8.646786]],[[0.683261,1.430171,-4.693211],[-3.484212,-1.417846,6.681074],[-0.511226,-4.560478,-3.224297],[6.592389,-0.575131,7.086817],[8.585960,6.023170,-9.914627],[9.468575,2.387786,0.182590]],[[3.150203,-7.628257,-0.193847],[-7.830459,8.548008,4.600360],[-8.673960,-3.807840,3.404788],[3.391686,4.603571,-7.545495],[-0.519600,4.372382,-4.927498],[5.974967,-9.416871,7.348360]],[[5.736868,2.084467,-7.073449],[-0.559105,3.466481,1.896357],[-4.969738,8.427100,-3.267848],[1.151097,3.215449,-5.068206],[-1.283152,9.930543,-5.810736],[7.019682,2.942375,-0.719829]],[[3.849879,-8.722242,-7.383132],[3.423061,-6.567347,-3.411022],[-3.658694,7.235687,-6.158121],[6.288791,0.026890,8.932358],[1.923927,1.070803,9.554621],[6.169218,-3.205189,-9.160822]],[[7.809189,-2.061467,-6.588027],[-4.131616,-0.988862,4.643751],[-9.795640,7.102302,0.999636],[0.989909,-9.577631,4.484929],[-3.554342,-5.582392,-3.708621],[7.557444,3.377010,5.503415]]], dtype = "float64")#candidate|1910|(7, 6, 3)|const|float64
bop_1911 = relay.logical_and(call_1895.astype('bool'), relay.reshape(const_1910.astype('bool'), relay.shape_of(call_1895))) # shape=(7, 6, 3)
bop_1914 = relay.logical_and(call_1896.astype('bool'), relay.reshape(const_1910.astype('bool'), relay.shape_of(call_1896))) # shape=(7, 6, 3)
func_997_call = mod.get_global_var('func_997')
func_999_call = mutated_mod.get_global_var('func_999')
call_1916 = relay.TupleGetItem(func_997_call(), 0)
call_1917 = relay.TupleGetItem(func_999_call(), 0)
output = relay.Tuple([bop_1911,call_1916,])
output2 = relay.Tuple([bop_1914,call_1917,])
func_1929 = relay.Function([], output)
mod['func_1929'] = func_1929
mod = relay.transform.InferType()(mod)
output = func_1929()
func_1930 = relay.Function([], output)
mutated_mod['func_1930'] = func_1930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1302_call = mod.get_global_var('func_1302')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_1938 = func_1302_call()
call_1939 = func_1302_call()
output = call_1938
output2 = call_1939
func_1940 = relay.Function([], output)
mod['func_1940'] = func_1940
mod = relay.transform.InferType()(mod)
mutated_mod['func_1940'] = func_1940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1940_call = mutated_mod.get_global_var('func_1940')
call_1941 = func_1940_call()
output = call_1941
func_1942 = relay.Function([], output)
mutated_mod['func_1942'] = func_1942
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1943 = relay.const(-8.193293, dtype = "float32")#candidate|1943|()|const|float32
var_1944 = relay.var("var_1944", dtype = "float32", shape = (16, 1, 15))#candidate|1944|(16, 1, 15)|var|float32
bop_1945 = relay.divide(const_1943.astype('float32'), var_1944.astype('float32')) # shape=(16, 1, 15)
output = bop_1945
output2 = bop_1945
func_1953 = relay.Function([var_1944,], output)
mod['func_1953'] = func_1953
mod = relay.transform.InferType()(mod)
var_1954 = relay.var("var_1954", dtype = "float32", shape = (16, 1, 15))#candidate|1954|(16, 1, 15)|var|float32
output = func_1953(var_1954)
func_1955 = relay.Function([var_1954], output)
mutated_mod['func_1955'] = func_1955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mod.get_global_var('func_924')
func_925_call = mutated_mod.get_global_var('func_925')
call_2016 = relay.TupleGetItem(func_924_call(), 0)
call_2017 = relay.TupleGetItem(func_925_call(), 0)
func_1247_call = mod.get_global_var('func_1247')
func_1248_call = mutated_mod.get_global_var('func_1248')
call_2018 = func_1247_call()
call_2019 = func_1247_call()
uop_2020 = relay.acos(call_2016.astype('float32')) # shape=(7, 6, 3)
uop_2022 = relay.acos(call_2017.astype('float32')) # shape=(7, 6, 3)
func_1628_call = mod.get_global_var('func_1628')
func_1632_call = mutated_mod.get_global_var('func_1632')
var_2024 = relay.var("var_2024", dtype = "uint8", shape = (10, 63))#candidate|2024|(10, 63)|var|uint8
var_2025 = relay.var("var_2025", dtype = "uint64", shape = (2548,))#candidate|2025|(2548,)|var|uint64
call_2023 = relay.TupleGetItem(func_1628_call(relay.reshape(var_2024.astype('uint8'), [630, 1]), relay.reshape(var_2025.astype('uint64'), [2548, 1]), ), 0)
call_2026 = relay.TupleGetItem(func_1632_call(relay.reshape(var_2024.astype('uint8'), [630, 1]), relay.reshape(var_2025.astype('uint64'), [2548, 1]), ), 0)
func_828_call = mod.get_global_var('func_828')
func_833_call = mutated_mod.get_global_var('func_833')
var_2048 = relay.var("var_2048", dtype = "int8", shape = (576,))#candidate|2048|(576,)|var|int8
const_2049 = relay.const(9, dtype = "uint16")#candidate|2049|()|const|uint16
call_2047 = relay.TupleGetItem(func_828_call(relay.reshape(var_2048.astype('int8'), [6, 16, 6]), relay.reshape(const_2049.astype('uint16'), []), relay.reshape(var_2025.astype('uint64'), [2548,]), ), 4)
call_2050 = relay.TupleGetItem(func_833_call(relay.reshape(var_2048.astype('int8'), [6, 16, 6]), relay.reshape(const_2049.astype('uint16'), []), relay.reshape(var_2025.astype('uint64'), [2548,]), ), 4)
output = relay.Tuple([call_2018,uop_2020,call_2023,var_2024,var_2025,call_2047,var_2048,const_2049,])
output2 = relay.Tuple([call_2019,uop_2022,call_2026,var_2024,var_2025,call_2050,var_2048,const_2049,])
func_2065 = relay.Function([var_2024,var_2025,var_2048,], output)
mod['func_2065'] = func_2065
mod = relay.transform.InferType()(mod)
var_2066 = relay.var("var_2066", dtype = "uint8", shape = (10, 63))#candidate|2066|(10, 63)|var|uint8
var_2067 = relay.var("var_2067", dtype = "uint64", shape = (2548,))#candidate|2067|(2548,)|var|uint64
var_2068 = relay.var("var_2068", dtype = "int8", shape = (576,))#candidate|2068|(576,)|var|int8
output = func_2065(var_2066,var_2067,var_2068,)
func_2069 = relay.Function([var_2066,var_2067,var_2068,], output)
mutated_mod['func_2069'] = func_2069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1302_call = mod.get_global_var('func_1302')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_2152 = func_1302_call()
call_2153 = func_1302_call()
func_1875_call = mod.get_global_var('func_1875')
func_1877_call = mutated_mod.get_global_var('func_1877')
call_2156 = relay.TupleGetItem(func_1875_call(relay.reshape(call_2152.astype('float64'), [7, 6, 3])), 2)
call_2157 = relay.TupleGetItem(func_1877_call(relay.reshape(call_2152.astype('float64'), [7, 6, 3])), 2)
output = relay.Tuple([call_2152,call_2156,])
output2 = relay.Tuple([call_2153,call_2157,])
func_2162 = relay.Function([], output)
mod['func_2162'] = func_2162
mod = relay.transform.InferType()(mod)
output = func_2162()
func_2163 = relay.Function([], output)
mutated_mod['func_2163'] = func_2163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1940_call = mod.get_global_var('func_1940')
func_1942_call = mutated_mod.get_global_var('func_1942')
call_2172 = func_1940_call()
call_2173 = func_1940_call()
output = relay.Tuple([call_2172,])
output2 = relay.Tuple([call_2173,])
func_2180 = relay.Function([], output)
mod['func_2180'] = func_2180
mod = relay.transform.InferType()(mod)
output = func_2180()
func_2181 = relay.Function([], output)
mutated_mod['func_2181'] = func_2181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1809_call = mod.get_global_var('func_1809')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_2185 = relay.TupleGetItem(func_1809_call(), 1)
call_2186 = relay.TupleGetItem(func_1810_call(), 1)
output = relay.Tuple([call_2185,])
output2 = relay.Tuple([call_2186,])
func_2187 = relay.Function([], output)
mod['func_2187'] = func_2187
mod = relay.transform.InferType()(mod)
output = func_2187()
func_2188 = relay.Function([], output)
mutated_mod['func_2188'] = func_2188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_997_call = mod.get_global_var('func_997')
func_999_call = mutated_mod.get_global_var('func_999')
call_2193 = relay.TupleGetItem(func_997_call(), 0)
call_2194 = relay.TupleGetItem(func_999_call(), 0)
func_1628_call = mod.get_global_var('func_1628')
func_1632_call = mutated_mod.get_global_var('func_1632')
var_2196 = relay.var("var_2196", dtype = "uint8", shape = (630,))#candidate|2196|(630,)|var|uint8
const_2197 = relay.const([6,-4,1,-9,-7,-4,-9,2,-6,4,-4,8,-4,8,-5,2,4,-10,-8,-10,5,7,-4,7,4,1,-4,7,-6,-3,-7,-10,5,-6,8,7,9,-7,-5,-6,6,8,-8,7,9,5,-7,6,7,-4,-9,10,4,-2,-10,9,-6,5,1,10,-1,5,9,9,-3,-1,-5,10,-8,10,1,-3,10,2,1,-3,-6,2,8,-1,6,3,5,-1,-6,-1,2,-5,-4,-6,-1,-9,5,-4,3,-6,-9,8,-2,7,2,6,-1,-8,2,-2,-1,3,10,-9,-5,2,3,10,-1,-5,6,-6,-6,4,6,-2,4,-3,1,9,-8,-1,-3,8,7,-6,7,-10,8,-1,-9,-3,6,-9,-9,-4,9,10,6,7,-3,8,7,-5,1,1,-8,-3,2,5,10,10,7,-3,-10,-8,-3,5,6,7,5,-7,2,-9,-6,8,6,-7,-8,7,3,2,-4,8,-6,-7,-4,-4,-8,3,-9,-10,-6,9,-9,3,2,10,4,-3,-4,1,-5,-4,-10,-7,-5,6,-3,-7,-1,-6,8,8,3,-2,4,-5,-8,1,6,-9,-4,2,9,-4,2,3,6,-3,5,-8,-9,-7,1,-7,8,8,2,-3,-1,-1,-7,-6,8,-3,-5,3,7,-2,-9,-5,-6,3,5,7,3,1,-6,4,-6,-8,-10,-6,-10,5,-9,8,-5,1,9,6,-10,1,-3,10,1,-10,-9,-10,-7,8,-7,-1,-1,4,4,1,8,10,6,1,-7,2,9,5,-7,4,-3,-10,-9,4,6,-7,-9,6,-8,5,-9,-3,9,6,5,1,7,2,-6,9,-4,-4,5,8,-8,9,2,-8,2,-8,-8,-4,-10,10,5,-8,8,-1,6,6,-4,3,-9,-6,9,-7,-3,-9,-7,1,-10,10,4,9,-1,-4,-10,-1,-8,-1,3,3,8,10,-2,-9,1,8,-9,5,-2,4,-6,2,-4,-2,-10,2,6,5,-5,10,-4,-3,-5,-6,7,-10,7,-8,4,7,-2,4,-2,-6,5,-3,4,5,-4,6,-1,6,-8,-8,-4,-6,5,-6,9,4,-10,5,4,-3,9,2,8,7,-2,-10,-1,5,-6,-4,3,-9,8,-6,1,3,-1,-1,2,-6,-2,-3,3,-10,-8,-4,-4,-3,6,-7,1,1,2,10,8,2,-2,-5,-4,-2,1,5,-10,10,-10,-6,-4,2,7,-1,9,6,-10,-4,6,-9,3,-2,4,8,-8,6,9,7,-1,-2,-4,10,9,-10,-2,-2,3,-6,8,1,-8,6,-5,7,3,-8,10,-3,-4,6,2,-10,5,-9,2,7,-9,1,-7,-1,8,9,7,-8,7,-8,-3,-1,6,1,2,-10,-10,4,-7,-8,-6,4,-1,6,-8,4,-3,-10,-8,7,-9,-10,7,-4,3,-1,9,2,-8,7,-3,7,-7,-6,-10,-5,-9,-5,3,3,3,4,-9,-1,7,3,10,-7,-1,-2,-6,-7,5,3,3,-5,10,-8,10,-8,-9,8,-4,-4,9,-3,6,4,-4,-1,-3,-5,8,3,-3,4,5,9,8,-2,3,2,7,-1,2,-10,-10,1,-6,-7,-7,-3,4,2,9,-7,-9,-2,-6,7,-6,-5,10,6,10,9,4,-10,3,-8,-5,-5,-7,-1,9,-1,5,-3,9,4,-3,-7,-4,5,10,-2,-10,9,3,10,-10,-10,6,3,-3,7,2,2,2,5,-3,-6,5,10,-7,-3,3,3,7,5,3,-5,-5,-10,4,-10,4,10,1,-7,-2,5,-4,-5,4,-8,-3,3,9,6,1,-10,1,-4,2,3,4,1,8,-6,7,1,-8,-7,-10,-10,-8,7,2,4,-5,-10,-6,-6,9,7,7,-6,-2,1,6,4,6,5,-3,2,7,6,4,-8,-3,1,-2,-4,-9,-8,-8,3,4,-2,9,4,7,-1,-1,6,-1,5,-3,8,5,9,8,7,-1,8,2,-8,-3,2,8,-9,2,-4,4,8,-10,3,10,2,7,-3,-4,-10,2,1,7,-10,-6,5,-6,1,2,6,4,-1,-7,-1,-5,-6,-10,-6,-8,7,1,-6,-7,-3,-1,-8,4,-5,6,-4,5,-10,8,4,-4,-2,5,2,-4,-10,3,-9,9,-9,-10,-8,4,3,-5,8,8,-4,9,-4,10,-10,-1,-1,-5,-5,-3,3,10,9,-1,-5,-6,-1,-5,-10,6,-10,-8,-7,-1,-9,3,4,-6,-9,10,5,2,-3,-10,6,10,2,6,3,2,-4,2,10,-8,4,-2,-6,-6,5,-1,-3,-6,-10,-6,2,3,-5,-3,-2,6,9,-6,4,3,9,10,-4,8,-3,-9,4,-10,-6,4,3,5,-7,8,-6,-3,-4,6,1,6,-8,-10,4,1,-2,1,4,9,10,5,10,-10,10,4,1,7,4,2,-7,9,10,7,7,-7,7,2,9,2,7,-3,6,8,7,-10,-4,6,-1,10,-2,5,-3,5,-9,3,2,4,6,-10,3,7,-8,-3,-7,7,4,-9,10,-8,10,7,-5,-2,5,6,-1,-5,-8,-8,-3,-6,-8,1,8,9,9,2,8,-7,-9,9,5,-8,4,10,2,2,1,-2,-3,1,-8,7,10,-9,6,6,3,8,4,5,-4,-10,10,-7,2,4,10,9,7,6,7,-7,-10,10,-3,-9,-1,3,10,4,-8,5,-10,-10,2,2,-10,2,6,-3,6,-5,3,-8,-9,-5,1,-7,-2,-7,2,4,10,3,7,-2,-10,-9,8,5,8,-4,-10,9,7,8,7,5,-7,1,6,4,4,-10,1,-2,5,-7,9,9,-3,-7,-9,8,-1,-10,4,-5,-7,3,-10,6,-10,-2,-10,7,8,-6,6,-4,2,-6,-10,-7,5,5,-4,3,-4,5,6,9,-5,4,6,-10,4,7,8,10,-7,-1,8,6,-8,7,-2,9,-9,1,-3,-8,-7,-10,2,-8,-7,-9,-2,-6,-6,6,9,-7,8,-6,9,7,-10,10,-7,8,-7,8,1,-4,6,5,5,4,10,-6,5,-4,10,-6,2,10,10,-3,-1,8,-6,3,-6,7,-10,-4,6,-1,-10,3,2,3,3,-4,10,-4,-6,-8,-5,-8,-7,1,10,10,-10,2,-8,5,-1,-8,3,-9,-8,-1,3,-9,2,4,1,-2,6,-2,-10,-6,7,4,-7,-7,4,-9,7,-7,-7,1,-4,-8,8,3,-10,-1,-4,-5,1,-5,3,-10,-1,1,8,5,-6,10,-6,4,-3,-10,-1,5,10,7,-3,4,-3,-3,9,-5,-2,1,-10,-3,3,2,-2,-7,9,6,10,8,-6,-6,-9,-2,-6,1,9,10,1,5,9,6,6,9,-3,-9,8,-6,4,9,10,-7,6,-2,-1,10,10,7,-9,10,-5,-3,-2,-1,-4,10,10,6,7,5,-6,6,-3,10,3,-4,-10,-1,-3,-1,-3,-4,8,-3,7,-3,-2,-8,3,-7,-9,5,7,4,-8,-8,5,6,-3,10,-6,2,3,-5,10,-5,2,-8,5,10,6,6,1,9,-10,3,-2,-4,-6,3,10,5,-5,-2,7,-6,9,6,-4,1,4,10,10,2,4,2,-1,-7,-1,9,-8,-1,-8,6,-4,8,2,5,-3,-7,-10,10,-3,-10,-5,-2,-5,-9,-2,5,-3,-3,10,-4,-2,-7,-10,-8,5,7,8,-2,-2,5,5,7,2,2,5,4,-8,4,9,1,9,-1,-7,1,3,3,-8,7,-2,2,4,-7,-9,8,-2,-2,-7,9,8,-5,-7,-1,1,-5,-7,-10,-2,-3,7,-9,-10,-3,5,-3,3,-6,-8,-5,6,-10,6,-6,-9,9,10,-7,10,1,4,-10,4,7,-4,-9,-4,-5,-10,-1,8,7,2,10,5,-7,7,-4,-3,3,7,8,-2,4,-4,3,8,1,5,10,-5,7,-4,1,5,-7,-5,-6,7,-2,-6,2,4,-2,7,9,10,-1,6,-4,-7,3,-5,10,-8,5,-7,8,10,-2,-3,-6,4,7,-1,-3,1,10,-5,-10,-3,9,-1,1,8,-10,-4,-3,-6,-8,-3,-7,7,2,8,-6,-8,8,3,-3,-5,-9,-1,-7,3,6,-8,-10,-8,8,-6,-6,-1,-4,-6,-3,-1,-9,-7,7,-4,5,6,7,-10,10,9,-2,10,5,4,10,4,-6,-6,10,8,1,5,-5,-3,2,-1,-4,-10,-1,-9,-8,10,4,8,7,-1,7,-8,-10,-1,5,-7,-5,8,-9,-8,-1,-10,-6,9,4,4,6,8,-3,10,-3,6,2,-5,-2,8,1,8,-8,-1,-7,-8,6,-10,-6,-6,-7,-6,-6,-10,4,-4,9,2,-7,2,9,8,9,-2,-10,2,1,-6,1,-7,-5,-9,3,2,6,7,-5,1,-4,-8,3,4,10,-3,6,-5,3,5,-9,7,10,-3,8,10,-8,8,10,7,2,2,-2,-10,5,2,-2,-1,2,1,9,3,2,1,3,-4,8,4,-5,4,2,3,-4,8,10,5,9,-7,9,-2,5,-9,2,-4,10,8,-5,-5,5,4,-1,5,7,2,1,10,2,1,-5,-2,3,8,-10,7,-6,-3,10,-8,3,2,-6,9,2,-3,-5,3,-4,7,1,9,5,-6,-1,1,-4,7,-7,-9,8,-7,6,4,10,2,-5,1,-5,4,-1,10,-10,-7,-3,10,-8,-6,-9,-2,2,-10,-9,7,-6,-9,-6,2,6,-6,8,10,-3,10,-9,-8,-10,-5,9,-2,3,-4,10,6,7,-7,-8,-3,-5,4,5,4,2,4,-3,8,8,4,10,-6,-4,4,-9,-4,7,-8,-1,10,2,-7,-8,1,-7,-6,7,-3,-2,-4,3,-7,7,7,-8,1,8,-4,-3,2,8,-6,-9,-5,-8,-4,-6,-5,6,10,8,-3,1,3,-10,1,-5,4,-8,7,-9,-10,3,9,9,3,-3,4,-4,6,-3,4,8,2,-9,3,-1,3,10,3,-1,5,-5,-8,5,2,2,6,6,-5,8,-4,-1,-4,9,8,-8,-6,1,1,-7,-4,1,-9,1,-3,-4,-9,-4,-7,4,4,10,2,-3,9,-6,-1,6,-3,5,-5,2,5,-9,-10,-8,5,-4,1,-10,7,7,2,-9,-8,2,3,-7,2,1,-9,6,-8,10,10,-2,-5,-7,10,-5,-10,2,-3,-2,-5,4,-3,-7,-3,-10,7,9,3,-3,2,1,-5,5,-4,-10,9,4,-8,-3,-9,3,-7,10,-10,2,10,-6,-8,2,8,-10,10,1,6,9,8,-1,-6,-4,-5,2,10,2,-9,-2,8,7,8,8,-1,9,-8,-4,-1,-5,-5,-2,5,6,8,-2,-2,6,7,5,-10,-7,3,7,2,-10,6,-3,-6,4,7,-2,-3,8,-4,-7,-7,5,8,4,3,-6,-4,10,7,5,8,-2,10,10,-3,10,-1,-10,8,-10,5,-8,6,10,9,-5,5,-9,-9,8,-4,-4,3,6,7,2,4,3,-7,-3,-10,-5,-8,-1,3,-9,-8,-4,6,-4,-7,-4,-6,1,2,10,-2,1,1,-7,1,-3,-8,2,8,6,2,-6,-9,-10,1,-4,-8,5,7,4,-5,-7,-4,6,2,-9,1,3,-4,-10,-4,10,-9,1,-6,-2,-4,5,-7,-1,-4,-5,6,3,-10,5,-7,-6,-1,-2,4,9,4,-9,6,2,-10,4,-3,-6,-2,-7,-7,7,1,-6,-7,6,-2,4,3,-9,-1,9,-10,8,-5,2,7,-1,-1,7,5,-1,6,-6,-9,2,-5,-5,5,6,-6,3,8,-6,-4,-8,4,-7,-5,1,-5,4,-5,7,-2,-1,3,-4,9,-1,2,-3,1,9,2,-7,-3,7,10,8,-8,10,5,2,5,7,5,6,-10,9,4,-9,7,-5,-1,-10,-3,8,-8,2,-6,-3,-10,4,-3,-2,-8,-2,-10,-5,1,9,8,2,10,9,2,6,10,-2,2,8,6,7,8,-6,-7,-2,4,1,7,-1,-2,9,-4,5,-6,6,-4,7,-4,2,7,6,-10,-7,-9,-6,-3,4,-7,-3,-3,-4,-1,2,3,7,-10,3,-2,-6,9,3,-8,-9,-6,-7,-3,-8,9,10,-4,4,-7,-3,-7,9,3,-8,-9,-6,-1,-7,-4,-9,-7,-7,-3,6,-7,-1,9,8,4,-3,-3,1,3,-8,-5,2,-5,4,9,10,-6,-10,-4,7,4,-4,-10,-1,-3,10,4,-1,-10,-9,-2,6,-1,-4,-5,-3,-2,6,-2,-5,-5,-4,-6,10,-9,-8,5,10,2,-10,-7,-8,2,3,10,-10,2,4,8,-7,-10,-9,-8,-4,4,-9,-9,-2,-8,2,2,3,-5,-3,10,1,4,8,10,2,5,5,-6,-2,1,-4,-7,6,-3,-8,-8,4,10,1,1,-2,-7,-10,-5,9,8,6,2,9,10,10,-6,-7,6,6,5,6,6,-7,8,-4,1,4,-3,-9,-10,-8,-1,5,-7,7,-9,-4,-6,-8,6,3,-4,-1,9,8,6,10,-3,7,5,1,-6,1,-5,8,-10,1,7,-1,-9,-10,6,-6,-4,-10,8,5,8,6,6,7,5,2,-7,10,9,-2,-9,-6,1,2,-7,3,-4,1,5,5,-5,3,7,9,-5,-3,-9,-7,-4,10,-5,-7,2,-6,5,6,-10,1,4,7,10,4,-8,-10,10,-4,-4,4,10], dtype = "uint64")#candidate|2197|(2548,)|const|uint64
call_2195 = relay.TupleGetItem(func_1628_call(relay.reshape(var_2196.astype('uint8'), [630, 1]), relay.reshape(const_2197.astype('uint64'), [2548, 1]), ), 3)
call_2198 = relay.TupleGetItem(func_1632_call(relay.reshape(var_2196.astype('uint8'), [630, 1]), relay.reshape(const_2197.astype('uint64'), [2548, 1]), ), 3)
output = relay.Tuple([call_2193,call_2195,var_2196,const_2197,])
output2 = relay.Tuple([call_2194,call_2198,var_2196,const_2197,])
func_2204 = relay.Function([var_2196,], output)
mod['func_2204'] = func_2204
mod = relay.transform.InferType()(mod)
mutated_mod['func_2204'] = func_2204
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2205 = relay.var("var_2205", dtype = "uint8", shape = (630,))#candidate|2205|(630,)|var|uint8
func_2204_call = mutated_mod.get_global_var('func_2204')
call_2206 = func_2204_call(var_2205)
output = call_2206
func_2207 = relay.Function([var_2205], output)
mutated_mod['func_2207'] = func_2207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2211 = relay.TupleGetItem(func_2162_call(), 1)
call_2212 = relay.TupleGetItem(func_2163_call(), 1)
output = call_2211
output2 = call_2212
func_2218 = relay.Function([], output)
mod['func_2218'] = func_2218
mod = relay.transform.InferType()(mod)
mutated_mod['func_2218'] = func_2218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2218_call = mutated_mod.get_global_var('func_2218')
call_2219 = func_2218_call()
output = call_2219
func_2220 = relay.Function([], output)
mutated_mod['func_2220'] = func_2220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_2248 = relay.TupleGetItem(func_2180_call(), 0)
call_2249 = relay.TupleGetItem(func_2181_call(), 0)
output = call_2248
output2 = call_2249
func_2259 = relay.Function([], output)
mod['func_2259'] = func_2259
mod = relay.transform.InferType()(mod)
mutated_mod['func_2259'] = func_2259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2259_call = mutated_mod.get_global_var('func_2259')
call_2260 = func_2259_call()
output = call_2260
func_2261 = relay.Function([], output)
mutated_mod['func_2261'] = func_2261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_2304 = relay.TupleGetItem(func_2180_call(), 0)
call_2305 = relay.TupleGetItem(func_2181_call(), 0)
func_1875_call = mod.get_global_var('func_1875')
func_1877_call = mutated_mod.get_global_var('func_1877')
call_2309 = relay.TupleGetItem(func_1875_call(relay.reshape(call_2304.astype('float64'), [7, 6, 3])), 2)
call_2310 = relay.TupleGetItem(func_1877_call(relay.reshape(call_2304.astype('float64'), [7, 6, 3])), 2)
output = relay.Tuple([call_2304,call_2309,])
output2 = relay.Tuple([call_2305,call_2310,])
func_2311 = relay.Function([], output)
mod['func_2311'] = func_2311
mod = relay.transform.InferType()(mod)
output = func_2311()
func_2312 = relay.Function([], output)
mutated_mod['func_2312'] = func_2312
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2319 = relay.const([[[-9.226564,-2.404036,9.329302,-4.305085,6.775731,-0.771755,-1.558322,7.187099,-6.308977,-5.800894,-7.378965],[7.250581,1.763138,-8.875569,-1.791712,7.691209,8.377023,-6.579217,6.439411,6.981631,2.644680,0.519300],[3.413682,9.698826,-4.553045,-2.356688,-4.417550,-2.761550,7.694862,1.215860,-2.792102,-5.676456,-8.844076],[-6.506563,3.130578,0.646000,0.732148,2.270852,4.778530,0.560335,-0.256696,-3.173178,9.928536,2.516546],[-0.645702,3.712532,1.719720,-3.045705,-6.160767,-1.573380,-4.755101,-0.553675,-3.171340,-9.103993,-8.355564],[-8.818048,-1.309328,-9.969102,2.532710,-2.701149,-9.531872,-6.297538,2.998018,1.486877,-2.308282,-1.751376],[9.746210,-2.255807,-5.582704,-5.081552,-5.428927,6.468249,7.131367,8.046856,6.643295,-2.669634,0.720726],[-2.798666,0.902384,-1.673197,5.181050,-3.058661,5.924709,-4.390081,-6.071109,-3.329356,9.351542,6.073762],[5.156915,4.377868,-0.028700,-0.480979,6.569912,-1.674490,4.333807,-2.239490,3.703835,7.636343,5.855557],[-5.952370,-1.015467,9.719482,2.448165,7.821753,4.149372,4.734989,-0.459829,6.527123,-5.566610,0.263974],[-3.113434,-1.803274,-9.247398,-0.004376,-2.434983,5.382358,4.665769,-6.111023,4.598091,-5.223944,4.793227],[-3.504560,0.019306,2.563884,-2.636807,4.536944,-3.061995,-7.460886,-2.488833,-0.254713,-9.793060,0.517886],[-1.017383,-1.996353,1.136747,-9.325942,-2.987322,9.110238,-2.157592,-8.099012,2.543940,3.153781,0.662234],[-7.958126,-1.452860,-9.252863,3.360674,2.643984,-7.549251,6.155875,-3.263520,-5.314821,3.147877,-3.029975],[-1.107796,-7.563788,2.757327,4.012230,8.920931,-5.691560,-0.137228,-8.603030,-5.788876,-3.770911,3.495379]],[[2.854685,4.561243,0.489652,6.951677,3.091088,-3.345308,6.628461,3.569793,-1.914597,-6.921599,4.017513],[-0.047811,-9.207076,0.806821,5.417145,8.826625,-9.961191,-4.390876,5.891265,1.310831,2.627919,-5.311194],[7.694243,6.392469,-7.756018,-0.609675,-0.192807,-0.211022,-4.798880,0.080258,-7.099928,-8.518283,-7.549250],[-4.564769,-8.908964,-7.789836,0.327144,-1.309568,-0.834705,9.222326,7.392996,-5.269230,-8.483735,0.875222],[-5.288935,-7.928538,8.382654,8.472377,7.248262,8.463657,-8.111496,4.826748,-5.458659,-4.543205,7.580059],[6.257385,-0.680888,-2.825386,-8.225485,1.791285,1.394080,-2.661452,-3.738560,-4.202198,4.490545,0.762698],[2.554392,-0.112391,-3.388048,-2.346458,-9.367255,-2.652923,-1.764612,2.820881,-1.721809,9.052552,-0.940432],[-2.708748,-5.255432,-4.883850,-2.537813,3.631463,-0.928900,6.588805,-4.490121,-8.346191,-2.287807,4.128837],[2.338114,8.823125,9.838502,0.639513,-3.014801,-9.370715,-2.542025,6.800247,-1.003489,-6.708246,-5.428893],[2.177060,-4.678697,7.660748,3.238588,0.293667,1.962645,-3.301104,3.888580,-7.101640,-1.790781,-4.251522],[6.764440,6.319979,-3.695413,-0.986242,-5.286803,-8.443944,2.109182,5.788955,-5.678788,6.345179,6.843603],[7.511090,-9.300070,5.446970,-2.943516,3.067115,3.141546,-1.427676,0.375164,-8.869621,-1.177103,-3.603318],[-5.999821,-1.241081,-1.883996,-4.535615,-2.207874,-9.388974,3.135206,5.515776,-2.316251,8.890501,3.636657],[3.570334,-1.754442,-9.019140,-8.135734,-0.609068,-7.032285,-7.681018,-6.348569,4.368461,-2.211204,9.750772],[7.455271,4.693066,-3.845015,4.242813,-2.775589,-4.990624,-3.270503,-2.512583,7.641034,9.999869,6.911618]],[[-2.886500,-8.857517,-1.117671,6.565167,-0.049288,-7.883570,-5.577247,-4.843882,4.044210,5.800698,1.114734],[-0.702345,-4.638101,-7.127932,-1.408778,4.813983,0.307056,-1.207686,-5.241927,-5.147858,-7.856096,7.564916],[4.860167,-4.101770,-2.125735,-1.572207,2.021825,3.600710,-7.584066,6.058827,-0.548962,8.986984,-0.974253],[9.244378,3.747147,9.871572,9.584387,0.217855,-6.366012,5.978753,1.584765,-2.549281,-0.817460,-8.252096],[5.785670,2.395758,4.544271,9.402658,-0.489502,-2.966238,-9.099357,4.314673,-4.833617,-9.891543,-3.607178],[-5.217916,8.286379,-9.016661,-4.612605,-8.801973,-6.753040,4.531278,-1.921917,8.914637,-8.236192,6.550787],[0.060636,-1.650773,7.353626,-9.346847,-5.237758,8.975120,3.015732,2.809783,-9.009155,0.134507,-9.412046],[-1.732438,-7.475945,2.475726,-6.324792,4.137435,-8.149337,8.831785,3.736905,5.370690,-5.940717,0.217261],[9.998675,-7.137831,2.095455,-2.418013,-2.817170,-9.447864,6.617990,3.257396,-6.748969,3.913575,-2.620677],[-6.223945,2.741650,2.629586,-4.494158,9.368143,-3.764562,-7.760826,-6.922929,8.599676,5.658799,3.298773],[3.169371,-1.628571,0.408750,-7.224642,1.577925,1.157266,4.216328,-5.032028,-7.788412,2.207335,1.002654],[-0.572816,-1.839959,9.625626,3.017839,-7.756669,7.475985,1.809770,5.801964,6.012221,-0.977384,3.096028],[7.420357,-3.427902,9.201471,-1.867254,6.167064,-6.332783,-0.395978,5.490109,-2.452658,8.020639,9.916353],[8.197624,-1.743233,9.326093,6.089637,-6.848283,-6.623674,-3.526374,-5.712097,1.298451,5.823397,-2.808611],[6.450315,-8.172566,4.955000,4.836756,-4.822755,3.862672,4.835572,7.858863,9.476218,-1.716221,-3.248223]],[[-5.903210,5.864979,-1.105404,5.237131,4.774941,0.010809,2.361038,9.198037,3.828822,1.715998,-4.983956],[1.554554,3.169142,-3.908564,-3.229315,6.718688,3.119809,-5.776432,5.491396,-6.277900,-8.684923,-5.242153],[7.469428,3.908638,7.435773,7.711743,6.219082,-4.136370,-2.734115,-2.449160,6.950934,4.252866,0.615398],[7.348421,7.722856,2.742274,5.111482,9.263978,4.861631,3.888649,6.398365,-0.640322,8.943204,-3.584133],[0.575811,-1.652555,-0.066370,-4.218720,-1.011463,-9.897478,0.450729,4.006654,-6.210966,1.981620,3.518612],[-2.999291,-7.858231,-4.310736,5.118867,4.404893,6.507743,-8.083978,2.269191,3.577377,-4.096207,3.336562],[6.354702,-7.406314,-4.114703,0.840211,-6.919484,-7.899081,1.897766,-0.571013,1.158100,2.166575,9.824915],[-5.917651,-4.062337,-5.147202,-3.047518,0.349502,5.835333,8.758047,4.042009,6.860661,-6.852515,-2.795744],[-9.533354,1.100129,-8.824503,6.885638,-3.490185,-6.283223,6.070611,7.850721,3.512413,-9.537791,-3.547316],[-6.238973,-7.946754,9.007842,8.993677,-8.618733,-7.714867,-3.685485,1.301365,-3.738827,3.347318,-5.914284],[-6.598588,-6.690365,-2.267943,-9.768059,-3.690979,6.741641,-3.566328,-7.697449,-9.924073,-3.389061,-5.785154],[-6.393294,-3.418705,9.441733,1.782461,-3.210866,7.420479,5.940500,9.453557,-8.121244,-2.523591,8.163644],[-5.875996,8.397447,-0.846798,6.380507,-1.238589,-3.946636,-1.369387,-7.931280,-3.513492,4.817244,-9.021421],[1.832267,-4.149075,4.341665,2.302196,-3.866296,-0.744673,5.016970,7.638725,4.553707,-5.169112,-1.825143],[7.815449,-7.164497,8.815482,5.259416,6.470099,-3.183465,-0.172364,-5.372049,-1.396741,1.052779,-3.183757]],[[9.471681,4.697175,8.093871,9.785677,3.140036,1.264806,-4.696071,4.307997,-6.782202,-1.456181,8.669385],[-0.285320,3.068220,-3.986226,-0.483547,2.345475,-3.798972,-3.370967,-7.835778,0.133051,9.357032,5.362710],[3.050987,9.941252,7.204636,-1.262156,9.805725,6.160861,9.824581,3.880132,-4.057447,-8.381514,-0.614376],[5.956723,-7.049841,-0.465690,0.147200,6.832447,-6.039562,-3.691137,-7.077472,-0.039628,4.955818,-0.333916],[5.694827,-4.562668,-7.179982,-8.885967,-6.210605,5.324363,-7.532033,-2.075421,-6.732807,6.928921,-6.706594],[-2.447544,-0.859611,-3.960112,-3.300941,7.590362,0.475402,-3.961983,-6.768611,-2.109603,-5.922400,8.537061],[2.661799,-8.801550,0.899353,-7.721416,7.244206,-2.141038,-2.161541,1.268081,-2.939329,-3.947116,3.386055],[9.686963,-5.799305,-6.560837,-5.706335,6.834002,2.496655,6.666890,2.902302,-3.015807,-7.762472,0.318512],[-6.813231,-9.731318,9.698397,-8.561209,1.283726,-7.726423,2.661124,-1.089400,-4.814249,5.401055,9.373214],[-4.171102,-5.523688,5.699513,0.657280,0.588913,7.252062,-8.900167,9.013096,6.811802,4.047038,-6.123493],[-3.639847,-5.846097,-6.709376,-5.168070,-1.280564,3.988100,-6.210294,5.816590,4.865017,3.487231,-8.827006],[5.402470,-1.721895,-5.619697,-4.438909,-7.878583,5.597892,1.427974,-6.507763,4.939411,-6.404271,5.841128],[2.957658,-4.968408,-3.322635,-4.857656,-4.731930,-1.797627,-8.000972,-2.085643,9.608503,-8.847812,3.217770],[-4.128103,9.093328,-0.727768,-9.736126,-9.566785,-3.593844,-9.870351,-2.854834,-9.592431,-2.942767,9.656610],[2.672725,2.490085,-2.308688,-5.540145,6.416323,2.256948,-7.453721,-6.616463,-9.289590,1.438210,-4.589386]],[[4.331340,-7.660562,9.491657,-1.424277,3.848942,-1.454425,-4.085046,-4.887176,-0.833958,7.830335,2.132198],[9.532748,5.263422,-1.612623,-0.653245,-5.829672,-1.636206,7.835127,-1.273698,-8.098125,-5.870378,-7.788515],[-7.632240,8.470485,9.228703,-7.001483,-0.906263,-0.804349,5.212566,-9.275317,5.410439,7.549695,5.870215],[1.579423,-0.985159,-2.947429,-2.505882,1.147787,5.844754,6.373717,-1.245761,4.471820,9.153017,-1.057272],[5.634383,9.521745,8.945969,-7.268007,1.324383,-2.126043,1.711459,-8.914253,-8.065344,-1.385913,-2.112930],[-7.883147,-2.657607,-2.591728,8.104510,-6.677116,5.657796,-5.847601,7.128887,-1.612650,-0.351750,-1.490455],[9.764792,-4.104058,2.308651,8.299117,-1.328230,-3.877716,-8.353281,8.796065,0.169597,-9.597082,1.661022],[7.034301,8.963425,8.557794,5.677833,1.132313,6.342708,-7.100623,7.107417,-7.946108,8.610111,-6.149110],[3.457994,3.714774,8.907570,-6.468003,-4.736833,1.307966,8.512607,-9.950002,2.638310,7.290577,7.900123],[2.844123,6.617658,-1.760289,-8.829139,-3.452398,-3.767835,-3.215050,1.002022,-9.194526,-8.376828,2.216018],[9.123305,-4.242499,-0.136836,7.360591,1.955678,-3.115851,-8.528451,0.283284,0.436572,8.226369,-9.551980],[8.130594,-2.377671,4.499593,-4.582510,-0.066803,-6.255185,-8.303497,-4.467426,-3.458047,-1.484383,-9.481066],[-4.501193,2.293473,-7.017649,2.845245,-4.872800,-5.296012,4.347578,9.551764,3.545788,9.114890,3.052464],[-9.617436,6.365712,0.763248,2.664343,-0.693497,-5.559112,8.790857,-4.943622,1.851668,1.393959,6.012715],[7.386320,-4.019924,-8.110792,6.720070,3.430416,6.128080,-5.606971,-0.461713,5.316325,1.651716,-1.154461]],[[-7.721453,-8.682982,8.617547,4.856049,-8.171822,-0.209181,4.710738,-5.015491,-3.046709,-1.047964,-9.147774],[-0.408312,-8.865354,2.983323,9.314359,-9.640124,6.631738,8.047739,5.024005,9.057134,-6.197542,-0.836308],[8.140806,-4.598789,3.416846,1.390496,7.244079,-8.326994,5.049705,-6.788767,-2.234960,-9.801294,7.229145],[-8.092077,1.740180,-1.188707,7.642726,4.637910,2.528624,-6.260048,9.219563,-6.638367,-8.991755,-1.420388],[-4.643905,-9.295883,-0.394666,-5.857180,4.470895,-9.710975,1.069139,-2.058626,4.665261,9.211342,6.578684],[4.640181,2.437185,6.207342,6.794964,-9.242000,-8.379939,-3.720844,0.252387,-7.108952,5.275679,7.083138],[8.139756,-8.763274,-2.474171,7.357672,1.668390,-9.133851,-0.351462,-1.183416,9.281122,-2.595494,-4.278482],[-2.918198,3.857831,-2.260352,1.317828,7.570162,2.217596,-0.834595,6.062806,3.739729,-3.268259,-9.948842],[5.397935,-3.034910,0.058290,2.193354,6.295397,1.798722,-2.106787,-0.022516,-7.083511,4.518233,8.933923],[7.520712,6.719058,9.079533,-5.997961,2.449017,0.344120,-2.241025,-3.494954,-4.754855,-3.181084,-6.942405],[8.646281,-4.418292,7.034032,8.891738,0.179565,6.345612,4.587994,0.674288,-0.493052,1.997756,-4.064519],[-4.423138,5.358372,4.876228,4.318811,8.503883,-8.360387,-0.832502,0.422298,-4.326475,-1.088973,7.998883],[-0.063313,7.934081,8.593001,-3.445944,-9.258302,-2.708455,9.368915,7.946956,-2.165033,1.065849,8.355193],[-1.595220,2.042507,8.977240,-3.714923,2.204539,2.404294,-8.180388,-7.428361,3.209724,6.791798,-6.215462],[9.202980,2.450140,-5.226356,-0.988075,-0.622748,-3.729429,0.115940,8.845943,2.434458,-2.407885,4.878536]],[[2.036606,-0.398987,8.395219,4.739730,-8.901552,8.224640,-7.359239,0.508510,0.251546,1.236725,9.984638],[-4.540416,-6.457584,-8.983386,-1.828236,4.290966,4.134188,-1.794163,-3.841549,-6.688871,-4.883674,-6.251309],[-7.305167,2.346776,-1.870941,9.954171,9.399247,-9.843007,5.968023,6.570784,3.786634,-0.290847,-6.681461],[8.813672,-8.214932,8.264959,0.601701,8.358641,1.562649,-0.937776,4.444223,-6.146627,3.547024,-1.399743],[1.732368,-9.759119,5.837837,0.666037,-2.385273,-8.080519,-5.654634,2.217197,1.169909,5.142762,-5.513772],[-7.955465,-3.525436,-9.905661,-0.897443,-1.310807,-1.638371,-6.583225,2.697898,0.867504,-3.969993,-5.079023],[-3.105073,-2.366638,-1.400812,-8.959519,4.359273,-5.344031,8.263083,7.327183,-5.476313,7.775551,2.653002],[-8.366364,7.936537,-3.862054,8.952926,5.616863,-0.234157,6.228914,1.063244,9.558128,6.853228,-4.416285],[7.948123,-1.725936,-6.427908,-8.817039,7.686544,-6.347490,0.457826,-5.972347,-7.026483,-8.791844,1.112160],[9.128633,0.168379,-7.580081,2.397341,-6.406130,-1.029285,-8.112401,-2.472260,-8.070663,8.632005,8.390242],[1.484728,5.362744,2.962431,2.675225,4.190962,5.268321,7.815126,3.402321,0.813300,3.095349,-3.945635],[-5.895708,2.085606,-1.699715,3.954419,5.066353,1.243285,-5.824806,-6.532871,-2.953662,3.256822,-3.183689],[7.511396,9.294784,9.003104,-9.898301,-6.770656,9.701178,-7.352903,-1.493497,4.800897,-5.526850,-3.680913],[4.967162,-3.249099,-6.427632,9.589289,0.473589,0.394328,2.571776,9.034048,-1.579410,-8.161935,1.622846],[-3.683456,9.374155,1.661465,-2.285548,-3.268840,-8.447092,3.792147,-5.813453,-0.546070,7.141625,-4.312872]],[[-7.747822,9.829962,1.772531,-3.032351,-0.891027,-9.831162,-8.280902,4.636799,8.067230,-6.195621,3.702282],[5.678646,3.618631,8.873860,6.067991,8.483896,5.310446,-8.330687,9.220053,-3.453078,5.511682,7.860127],[-9.733649,1.443564,-4.672477,-1.086666,3.414619,-2.438674,4.819225,-5.528821,8.895970,-6.116116,-8.205717],[-7.568996,-2.236491,0.866382,6.722682,4.544386,6.973558,-2.974132,1.618960,0.692433,-6.688761,2.700606],[6.924457,-3.131006,5.662488,-3.726962,6.521872,1.614931,4.343216,-2.781101,8.355130,-4.310938,-3.597702],[4.988166,9.151862,-4.801767,-6.578494,8.571400,8.346822,-0.647795,1.592107,-7.110121,7.593967,-4.168815],[-7.222611,-5.721332,-7.444700,6.650626,0.368254,-0.601093,2.217678,-3.757027,-1.643968,-9.549138,9.603394],[7.306437,9.663303,9.293818,4.857549,2.939170,-5.329522,-9.458852,-7.114188,5.062635,-4.084563,6.432801],[9.228465,0.180332,0.317802,8.479681,-3.425307,0.445309,5.379290,7.624077,-5.587087,-8.395914,-9.268432],[-3.782169,-2.277119,-6.666492,1.755165,0.020090,9.423902,2.283646,-3.416207,4.556858,1.993477,-7.984868],[2.901799,3.620414,-7.866404,1.738657,-1.104831,7.446926,0.638253,5.633819,6.546968,2.189360,0.122614],[-6.724655,-9.278612,9.444351,-7.868070,-2.086123,7.131583,-9.711353,8.092016,-7.391811,8.985288,2.934799],[3.223844,8.394967,2.973740,0.965918,3.915619,-2.957748,7.501707,5.038245,7.925880,2.734853,-9.379393],[-7.667715,4.548142,7.543626,-3.500384,-2.079715,-2.913432,5.981460,-7.675133,-7.038607,-4.973334,9.837068],[-2.208081,1.341003,-2.219187,-5.792866,-0.592184,5.868925,5.967993,-0.707643,7.503692,9.060637,9.540204]],[[8.293062,6.589595,6.057241,-1.533755,8.977527,-3.662228,-5.758062,-3.753781,6.073152,5.062610,-1.437261],[7.064023,-2.692644,9.959596,-6.560060,-1.317268,2.011734,-6.977421,6.666398,2.233830,9.777684,-7.870244],[9.390461,9.804432,1.634568,8.733625,8.362597,1.456641,0.330197,-9.004625,8.916073,6.151794,-3.805703],[5.136502,-3.426263,2.756856,-5.688371,9.599824,-6.869821,-8.565182,5.549109,9.434613,4.412894,-7.901720],[-9.582282,-9.718056,-1.988158,-0.142630,8.794511,-4.475213,-2.318177,-7.213753,1.705550,-2.526135,-9.788861],[-9.076520,-9.966225,-1.290277,-0.603075,-7.892178,2.248922,-1.476165,-0.128314,6.817502,-5.856688,5.813545],[8.496882,-7.982309,1.399329,-3.835805,7.401317,7.112941,-0.676597,4.627532,7.985279,8.909163,6.800093],[-9.083498,-7.020906,2.085092,3.937730,-4.187608,-4.438454,-0.283281,1.285900,9.594026,0.206606,0.958827],[2.904597,-0.774427,-1.871500,3.306982,5.927671,-1.681915,9.753931,-5.695473,-5.829865,3.265031,0.930981],[3.211316,-3.000283,-0.605711,8.694339,-7.166714,-0.248263,8.175190,-3.641531,-8.612246,-7.288470,-4.393877],[9.547290,8.101057,4.488543,-3.570020,-7.044659,3.347596,3.046647,-5.048144,7.573542,1.392262,6.715513],[8.785319,8.599395,1.083885,-4.370525,-3.527852,-3.398199,4.658742,-5.734885,3.998670,1.673100,-9.263905],[-2.808187,-3.251761,2.981265,7.651809,-0.008450,-6.768223,6.918989,-2.456830,5.651630,9.456212,-7.029642],[2.018847,-8.216264,3.630816,-9.619147,-6.632118,-8.397211,-9.608014,-6.705383,-4.196135,-5.012878,0.508903],[-5.345570,3.775807,-4.573263,3.895149,-4.254722,3.153622,0.529990,-9.676361,-1.951676,-9.727862,7.795110]],[[-5.257137,7.314706,4.351662,-7.865264,7.013473,-9.187049,-5.123221,9.713209,9.408047,8.947814,-1.099639],[8.744261,-1.484166,-9.056020,-1.283486,1.666555,0.140132,2.728155,9.083178,3.842726,-6.638242,6.191202],[-9.476071,-9.923197,-9.912655,9.153983,5.123217,-8.677945,-4.277252,-8.740550,-6.491127,-5.804373,-1.666338],[-6.615247,7.324507,-2.273319,3.788310,-4.917904,-6.418998,5.774361,-7.912521,-6.768058,6.456091,9.122971],[4.504386,-4.701321,-1.853484,6.468910,-3.813298,-9.984111,-0.309756,5.749011,-4.178314,7.634561,9.602782],[-3.452428,7.566056,7.545737,6.452498,3.322975,-9.896603,-6.337268,-3.952587,-1.243393,-4.387111,-7.608463],[6.484681,-2.781742,2.638012,8.127590,3.414517,4.591029,-8.725729,4.560155,7.880544,-1.896820,9.257070],[-4.981937,-4.108007,-6.003310,0.157381,7.360924,5.316839,6.876460,-4.378608,4.476429,-7.796371,-5.227597],[8.851278,-2.886227,-8.990923,-0.290181,5.820536,9.518551,1.181173,-6.199251,-9.012146,-9.295031,-3.921334],[8.516350,-7.778312,-6.100653,5.523535,3.829839,-6.903558,8.969303,-4.861881,-5.361568,3.640918,8.472622],[-7.861778,3.426780,-9.342527,-9.415870,7.436078,0.150704,-2.070585,-5.573273,-0.647127,-7.015775,0.373326],[-5.086966,8.274169,-1.192064,-1.086721,-2.585283,6.853303,-1.265307,0.227870,-5.368759,-2.144859,-5.885309],[8.376818,-6.436729,-4.707280,3.782632,-1.209480,4.380303,-5.894802,-2.403565,2.398877,4.299311,5.793599],[-8.841730,-9.404702,4.558995,-2.839017,4.851706,7.364633,-7.433329,-2.340248,9.271715,6.653190,3.690608],[-7.741280,-3.254520,-5.763273,3.906543,9.197156,-0.240775,-2.171148,-8.553705,9.881837,7.266634,5.740819]],[[-4.025792,8.629177,6.074836,-1.754023,-0.399415,-0.722028,-4.278543,6.024149,-0.930166,-9.323077,-9.884857],[8.097848,7.106631,9.465199,2.756460,-5.930586,-3.023217,7.856968,-1.212092,-2.021195,8.458674,-6.599558],[2.515991,2.747692,-9.807365,-4.510678,-8.092455,-6.787125,-8.457077,-9.001324,-5.269006,6.483962,-2.271177],[-3.144210,-3.715989,-2.447271,-1.387772,-7.272966,-4.302810,5.096783,5.994046,1.540311,0.683695,3.521577],[5.301775,1.053671,0.435797,5.927183,-1.119698,-4.523225,-8.589931,-3.261189,1.567746,0.446154,-8.844893],[9.416936,-9.867797,3.529407,-6.261281,-4.834815,2.619451,8.756305,-7.135468,-8.919107,3.703620,-7.175618],[6.745324,-8.424269,6.844488,-1.693389,-1.167109,0.202398,4.545390,5.813651,5.796468,0.155318,1.874597],[2.992177,9.201732,-8.340396,4.384844,1.770353,4.981864,0.122045,1.377299,-3.226929,6.785604,-6.771174],[6.362184,-9.459553,1.778664,1.474735,9.709247,5.757452,-8.463190,5.914016,-8.529379,0.847044,-2.139482],[-9.456405,-0.512547,0.162440,-7.297270,-1.452661,6.330700,-1.521709,4.932820,-0.384493,7.109948,6.078557],[4.401489,3.667688,3.937248,-9.081667,1.954586,7.510120,6.986678,-5.549821,6.768586,3.545464,1.350978],[1.997933,9.916172,1.317403,3.733138,3.985533,1.258983,-9.601061,8.691261,-0.408920,6.828414,-1.053482],[7.163617,-1.308240,-2.785416,2.784232,-6.351141,-9.956061,-1.307008,-6.727804,-0.692891,0.738738,-3.430265],[1.593695,-6.790394,-6.198213,4.427992,-4.183085,4.014628,2.883948,6.569457,-8.188605,-6.588999,4.810507],[-0.790517,-8.393408,2.046268,5.673911,-1.330762,5.419749,-2.989493,-2.365164,5.309353,-8.690708,-6.393401]],[[-2.118128,6.928314,1.526628,0.119103,-2.727225,-1.434230,-3.351325,-7.464186,4.402354,-3.275570,2.109166],[-6.986436,8.255615,4.374122,8.796388,0.883557,9.149284,-6.074955,-3.213561,3.026230,5.695427,-6.085378],[-8.825018,1.282721,2.701098,-8.387044,8.885520,-4.906396,-8.459743,-2.403572,2.624244,6.367911,-3.917966],[6.769584,8.031313,-0.522185,-2.448844,4.451764,4.770022,-1.110013,-2.200138,-5.233482,-1.804130,-6.722435],[-2.352465,-6.461967,4.780724,-2.054267,9.131345,-3.274147,-9.680727,7.777393,9.755466,7.733899,-7.782220],[3.574226,1.104088,-8.036597,8.379769,-1.899588,6.870729,2.679610,2.800408,0.901081,-5.615062,1.195751],[-9.713844,4.987358,2.384491,-7.427124,8.643252,4.335375,2.372657,-6.410547,-0.752936,-5.784371,5.040617],[-0.381437,6.961318,5.450774,-6.869036,2.821946,6.304174,-3.007930,7.588020,-1.125534,9.670424,3.928533],[7.560312,3.067770,7.242191,-0.740144,1.100494,3.561581,-9.484464,-5.098718,8.276180,9.044866,7.646138],[-5.741407,-3.670542,5.294221,-1.520871,0.126536,-5.850161,3.262284,-5.864602,-0.647704,2.909399,9.866457],[-7.371346,-6.235928,7.174556,-0.753797,4.742135,8.900583,-8.239299,7.684350,-4.865787,-5.713265,2.665906],[-2.746422,9.768815,-7.494635,-2.191680,-2.850254,6.670337,-3.303354,-3.419015,1.633375,2.870783,-6.401189],[0.940868,-8.337295,-1.814074,-9.265991,5.365551,7.513402,4.383748,2.069290,1.174291,-3.108603,-7.819004],[7.902598,-0.336410,-2.468512,-6.246041,4.564216,5.621377,2.364163,-8.988231,1.291354,-7.831335,1.688825],[-1.126149,7.719270,-5.476316,0.362105,-0.637305,-3.328290,7.247828,6.101915,1.634798,-3.454613,-3.353609]],[[-6.601055,6.412219,-2.439154,-2.742915,-0.588686,-6.463640,6.344715,6.829226,5.254816,3.014894,-8.601090],[7.172187,-2.462974,-0.939824,9.695856,-2.986707,-4.428745,8.510912,4.568465,-0.938492,3.695572,8.968680],[9.016166,0.660103,9.597814,-7.636008,4.640146,3.580674,-1.532804,-1.813378,-2.876413,3.509642,5.212879],[-0.292518,4.000766,-1.148832,9.908754,7.365335,-1.927066,-8.286188,7.799204,-9.098949,-9.298893,9.585535],[4.771140,-9.014690,-1.544613,-3.931465,-9.234325,5.422966,7.471208,-5.111104,1.103158,-3.534747,-5.758253],[3.374034,6.753530,5.499302,5.375433,0.042958,-7.567059,9.346685,9.262116,-0.837566,-7.520202,2.473742],[7.582002,-6.932231,4.761997,1.731098,9.075694,-0.606098,-4.415739,-9.743580,-9.275244,-5.723961,9.272421],[7.170545,-9.542231,7.745472,6.486249,-1.177912,-2.851368,-8.221425,5.648400,-5.721817,-7.551809,-6.594804],[-0.620904,5.854594,-6.858585,1.420469,2.873920,-2.508976,0.952730,-1.281513,7.293153,6.322933,6.594939],[9.234817,2.436451,-0.552486,-3.675227,-1.410689,5.715506,0.563085,-0.394482,-8.719072,-9.320284,7.597412],[-0.838664,-2.665605,-0.427135,8.556599,8.580632,0.842357,-0.695683,3.858447,-2.195394,8.109081,7.608732],[6.753384,-0.372419,1.780085,-2.319313,-0.016235,-0.307305,-9.377402,-9.222698,-7.553152,1.557578,8.381284],[0.323969,-9.950966,-3.892469,-1.827485,3.055591,1.725870,7.589912,-7.144329,3.231304,-4.006274,7.289440],[2.558140,-6.117156,-2.008353,7.008617,-1.026701,-6.254595,-9.150689,-3.194146,-6.066132,-9.033665,2.551924],[-3.122998,7.212581,-0.128492,7.998819,8.132131,-2.964256,-9.141365,9.702578,-7.919132,2.401525,-0.801389]]], dtype = "float32")#candidate|2319|(14, 15, 11)|const|float32
uop_2320 = relay.tan(const_2319.astype('float32')) # shape=(14, 15, 11)
func_1118_call = mod.get_global_var('func_1118')
func_1123_call = mutated_mod.get_global_var('func_1123')
var_2352 = relay.var("var_2352", dtype = "float64", shape = (126,))#candidate|2352|(126,)|var|float64
const_2353 = relay.const([10,9,-3,5,-10,9,-2,10,1,-4,3,3,1,-7,5,-7,10,-5,7,-7,10,4,4,-2,8,-2,-3,-3,10,-9,-2,8,-4,-4,-4,-8,7,-6,6,6,4,-6,-2,3,-9,-4,9,-2,4,-4,9,3,-3,-8,9,-4,-9,-9,-1,2,-3,10,6,-6,2,-1,3,-8,2,-7,10,-3,-2,-2,3,3,-8,-1,-9,-7,9,1,-1,-8,6,4,-7,-5,-9,1,10,-9,9,5,9,8,-9,9,1,-2,3,3,3,8,-4,4,-5,2,-7,3,-10,-3,3,10,-9,10,-10,-1,-2,5,-8,-2,5,8,-1,-7,3,2,2,-1,-4,-3,6,7,3,-4,4,5,-9,9,-5,3,-6,5,4,-1,8,3,9,2,6,4,-1,7,-3,2,-5,-5,9,-3,9,1,9,3,-6,2,2,-1,-5,7,-7,6,-3,6,-5,4,2,-1,-9,-1,-1,6,8,-10,-6,-3,-5,6,1,9,3,-10,-9,8,-7,-1,-1,-4,2,6,-1,10,9,6,-10,-8,10,-9,-8,5,5,6,4,-7,-5,6,-3,4,4,3,-6,-8,8,-5,2,6,9,5,1,2,6,-2,6,-2,7,-6,-8,-1,-2,5,-8,3,-2,-3,-2,-8,4,-1,7,3,-1,-9,5,-7,6,-3,2,6,-6,-6,-5,-1,6,1,5,9,5,5,8,7,4,10,7,2,6,-2,-6,-2,-4,6,-1,5,3,-5,2,4,-1,-3,-2,-2,7,-1,-8,5,-10,-9,-6,-4,-6,9,-3,3,-7,4,5,10,-1,-5,8,9,3,-6,6,-9,2,-8,10,9,-2,-9,-1,9,1,-1,5,6,9,8,-3,8,2,-10,-9,-10,-4,-8,-9,6,-2,-9,-6,5,-9,3,-8,9,6,4,10,6,4,-8,-10,3,1,9,6,-3,6,9,6,6,7,5,6,1,5,3,4,-7,7,-10,-9,8,-10,1,-4,6,-9,-9,4,6,-9,-5,4,-8,10,-4,3,-6,10,7,-4,-7,5,1,6,-9,6,-6,7,-1,-1,8,8,7,9,6,-6,-10,9,-2,-7,-7,-6,5,-8,2,3,5,2,-3,-5,-6,-10,-4,6,-3,5,-9,-5,-6,-3,4,8,9,-9,-1,-9,-5,-5,-1,3,7,-6,-2,-3,5,7,-1,-7,5,3,2,4,5,6,-4,10,8,-8,-6,-9,4,-10,-10,-7,5,-10,-4,-4,-8,4,9,1,-9,-10,-9,-8,4,10,-7,7,-7,-10,-3,-1,-7,3,1,5,-5,7,-3,-9,-2,-9,5,2,-4,6,-7,10,-4,-9,-9,4,-1,-5,7,9,2,10,-5,3,5,9,-6,7,4,-4,-2,4,-9,-8,-5,-6,7,8,8,-3,3,-6,-1,-9,-1,-7,-1,-6,1,9,-3,7,-10,-1,-6,-3,6,-10,-2,-3,3,-6,2,7,8,-3,8,10,-3,-8,7,2,1,-2,10,-6,9,7,5,-7,7,-3,-8,-7,-6,-3,-8,-6,-6,4,8,-9,3,10,-10,-1,7,-6,-9,-9,9,5,9,-6,4,1,9,8,-5,-10,-5,4,8,-8,-4,-9,-1,10,-10,2,-6,5,-2,7,-1,-4,1,2,-9,-4,9,8,2,9,4,-3,6,-6,-10,6,2,-2,8,-2,-4,10,4,5,-5,5,6,10,7,-10,8,10,6,5,-6,10,5,-5,-7,-6,-5,-2,10,-4,-7,-4,10,5,8,9,8,5,-9,-4,-3,1,-1,8,6,-8,6,-9,8,2,3,9,9,7,-4,-6,-1,-4,9,-4,4,9,-6,6,-2,9,10,-9,1,6,-6,2,-9,-10,8,5,-7,-2,3,-6,-8,2,-2,6,-6,-7,-7,10,7,6,3,9,-8,-3,-1,-7,4,7,-2,-7,9,1,-7,4,10,-9,-3,-2,-9,3,-4,9,2,5,-2,2,-8,-7,-3,-9,3,5,6,9,2,5,2,5,-3,10,3,-7,7,8,-7,5,6,-5,7,8,-6,5,-1,6,1,9,7,6,2,-4,-2,-8,-8,1,-9,-3,3,4,8,-10,-3,-4,-5,-4,6,-5,-8,-9,7,4,-2,-8,-6,-1,-2,5,9,6,10,2,-2,8,-9,-8,10,10,-10,-7,3,-1,8,-10,5,-3,-10,3,-4,-3,10,9,5,2,-2,-10,-6,9,6,2,-7,-6,-2,6,2,8,1,3,-1,-1,-3,-9,3,6,-7,-1,-3,-1,10,10,-9,5,8,-7,-3,1,1,-7,-7,-4,-1,-1,5,-1,1,4,-10,1,-7,6,-7,7,6,-2,9,7,2,6,2,-2,-9,-3,7,6,2,-3,-10,9,-4,-8,7,-3,-5,-8,-6,-10,-7,3,-6,-8,-2,9,1,7,9,10,-1,8,-2,3,-7,3,7,-9,-7,-3,-8,-1,2,-8,-3,8,-1,-10,-3,3,9,5,1,8,9,-7,8,9,5,-1,-6,-2,5,2,-6,-7,10,-10,-4,-9,2,1,3,9,5,-6,-9,10,10,-2,-8,1,1,-10,-10,9,4,-3,9,-7,-4,-7,-1,8,8,10,-1,3,2,6,-10,-7,4,-3,6,7,-3,4,9,5,-2,-3,-6,4,8,4,-4,4,3,-8,9,8,10,-6,-3,-8,6,9,-6,3,-2,1,8,-3,5,9,-9,-6,8,-9,2,8,-7,-3,-2,6,-1,-2,-4,-9,10,-3,-6,9,-10,7,-6,-2,-3,-9,-9,-9,-3,1,-7,8,-10,-6,1,-10,-6,3,-1,-6,-7,-9,9,7,10,1,8,-5,-2,5,-8,4,-4,-5,-9,-1,-5,3,8,-10,-9,6,-10,-8,-5,8,9,-5,-7,8,-3,-4,-9,6,8,8,5,-7,-6,-1,-9,4,9,1,-2,-5,7,-5,8,-4,5,6,-5,-9,9,3,7,5,7,-5,6,5,-1], dtype = "uint16")#candidate|2353|(1120,)|const|uint16
var_2354 = relay.var("var_2354", dtype = "bool", shape = (312,))#candidate|2354|(312,)|var|bool
var_2355 = relay.var("var_2355", dtype = "uint64", shape = (2548,))#candidate|2355|(2548,)|var|uint64
call_2351 = relay.TupleGetItem(func_1118_call(relay.reshape(var_2352.astype('float64'), [7, 6, 3]), relay.reshape(const_2353.astype('uint16'), [1120,]), relay.reshape(var_2354.astype('bool'), [312, 1]), relay.reshape(var_2355.astype('uint64'), [13, 14, 14]), ), 4)
call_2356 = relay.TupleGetItem(func_1123_call(relay.reshape(var_2352.astype('float64'), [7, 6, 3]), relay.reshape(const_2353.astype('uint16'), [1120,]), relay.reshape(var_2354.astype('bool'), [312, 1]), relay.reshape(var_2355.astype('uint64'), [13, 14, 14]), ), 4)
output = relay.Tuple([uop_2320,call_2351,var_2352,const_2353,var_2354,var_2355,])
output2 = relay.Tuple([uop_2320,call_2356,var_2352,const_2353,var_2354,var_2355,])
func_2376 = relay.Function([var_2352,var_2354,var_2355,], output)
mod['func_2376'] = func_2376
mod = relay.transform.InferType()(mod)
var_2377 = relay.var("var_2377", dtype = "float64", shape = (126,))#candidate|2377|(126,)|var|float64
var_2378 = relay.var("var_2378", dtype = "bool", shape = (312,))#candidate|2378|(312,)|var|bool
var_2379 = relay.var("var_2379", dtype = "uint64", shape = (2548,))#candidate|2379|(2548,)|var|uint64
output = func_2376(var_2377,var_2378,var_2379,)
func_2380 = relay.Function([var_2377,var_2378,var_2379,], output)
mutated_mod['func_2380'] = func_2380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1247_call = mod.get_global_var('func_1247')
func_1248_call = mutated_mod.get_global_var('func_1248')
call_2407 = func_1247_call()
call_2408 = func_1247_call()
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2409 = relay.TupleGetItem(func_2162_call(), 0)
call_2410 = relay.TupleGetItem(func_2163_call(), 0)
output = relay.Tuple([call_2407,call_2409,])
output2 = relay.Tuple([call_2408,call_2410,])
func_2414 = relay.Function([], output)
mod['func_2414'] = func_2414
mod = relay.transform.InferType()(mod)
mutated_mod['func_2414'] = func_2414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mutated_mod.get_global_var('func_2414')
call_2415 = func_2414_call()
output = call_2415
func_2416 = relay.Function([], output)
mutated_mod['func_2416'] = func_2416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1302_call = mod.get_global_var('func_1302')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_2439 = func_1302_call()
call_2440 = func_1302_call()
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2450 = relay.TupleGetItem(func_2162_call(), 0)
call_2451 = relay.TupleGetItem(func_2163_call(), 0)
const_2466 = relay.const([[[2.816703,7.498564,-8.730015],[-1.295424,-2.996502,-2.971806],[-5.873786,-2.695726,6.813409],[-0.413200,-7.234211,-5.400454],[4.682046,5.999613,9.103541],[8.435751,9.783262,0.759269]],[[8.633447,-6.966617,-7.468664],[-7.807486,5.358977,3.407042],[-8.242919,-3.990716,5.604205],[-9.577331,5.729081,5.907840],[-9.098328,-9.113251,-4.831784],[7.463849,4.763703,2.722781]],[[5.577345,9.496167,-9.653174],[4.483248,-3.298552,4.816454],[-1.962044,-5.653879,-7.651006],[-3.850276,-0.704258,-2.490292],[-5.028796,-7.960107,2.243761],[3.277578,8.933786,-5.294524]],[[8.824958,-6.124044,2.697183],[7.375102,1.451469,7.163282],[-2.713486,3.444066,-7.370418],[5.628741,6.981198,0.024227],[1.269059,1.231348,8.638131],[-5.562871,4.632977,-5.150241]],[[7.863725,-3.504952,-3.454730],[-4.657226,8.620503,1.927035],[0.799424,-2.899156,5.371558],[2.663207,-3.395208,0.876659],[-2.354283,3.898243,3.250114],[-5.887723,9.268573,7.723510]],[[8.623170,-9.991358,6.216836],[-1.268462,-1.595532,-6.959683],[-6.351752,-1.148871,-6.365112],[-9.405234,-5.939980,4.627987],[-5.936427,-6.791187,-0.130110],[1.500211,8.505384,6.606367]],[[0.279393,9.790420,-2.608287],[4.945869,6.040951,-3.694468],[-0.714404,3.314187,-8.178731],[-0.294188,-7.331866,-1.078141],[-6.275332,-0.262093,-1.021612],[2.172535,-8.494922,5.217431]]], dtype = "float64")#candidate|2466|(7, 6, 3)|const|float64
bop_2467 = relay.multiply(call_2450.astype('uint64'), relay.reshape(const_2466.astype('uint64'), relay.shape_of(call_2450))) # shape=(7, 6, 3)
bop_2470 = relay.multiply(call_2451.astype('uint64'), relay.reshape(const_2466.astype('uint64'), relay.shape_of(call_2451))) # shape=(7, 6, 3)
output = relay.Tuple([call_2439,bop_2467,])
output2 = relay.Tuple([call_2440,bop_2470,])
func_2475 = relay.Function([], output)
mod['func_2475'] = func_2475
mod = relay.transform.InferType()(mod)
mutated_mod['func_2475'] = func_2475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2475_call = mutated_mod.get_global_var('func_2475')
call_2476 = func_2475_call()
output = call_2476
func_2477 = relay.Function([], output)
mutated_mod['func_2477'] = func_2477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1230_call = mutated_mod.get_global_var('func_1230')
call_2495 = func_1229_call()
call_2496 = func_1229_call()
func_1953_call = mod.get_global_var('func_1953')
func_1955_call = mutated_mod.get_global_var('func_1955')
var_2498 = relay.var("var_2498", dtype = "float32", shape = (240,))#candidate|2498|(240,)|var|float32
call_2497 = func_1953_call(relay.reshape(var_2498.astype('float32'), [16, 1, 15]))
call_2499 = func_1953_call(relay.reshape(var_2498.astype('float32'), [16, 1, 15]))
func_2204_call = mod.get_global_var('func_2204')
func_2207_call = mutated_mod.get_global_var('func_2207')
var_2502 = relay.var("var_2502", dtype = "uint8", shape = (630,))#candidate|2502|(630,)|var|uint8
call_2501 = relay.TupleGetItem(func_2204_call(relay.reshape(var_2502.astype('uint8'), [630,])), 2)
call_2503 = relay.TupleGetItem(func_2207_call(relay.reshape(var_2502.astype('uint8'), [630,])), 2)
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2530 = relay.TupleGetItem(func_2162_call(), 1)
call_2531 = relay.TupleGetItem(func_2163_call(), 1)
output = relay.Tuple([call_2495,call_2497,var_2498,call_2501,var_2502,call_2530,])
output2 = relay.Tuple([call_2496,call_2499,var_2498,call_2503,var_2502,call_2531,])
func_2534 = relay.Function([var_2498,var_2502,], output)
mod['func_2534'] = func_2534
mod = relay.transform.InferType()(mod)
var_2535 = relay.var("var_2535", dtype = "float32", shape = (240,))#candidate|2535|(240,)|var|float32
var_2536 = relay.var("var_2536", dtype = "uint8", shape = (630,))#candidate|2536|(630,)|var|uint8
output = func_2534(var_2535,var_2536,)
func_2537 = relay.Function([var_2535,var_2536,], output)
mutated_mod['func_2537'] = func_2537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mod.get_global_var('func_924')
func_925_call = mutated_mod.get_global_var('func_925')
call_2582 = relay.TupleGetItem(func_924_call(), 0)
call_2583 = relay.TupleGetItem(func_925_call(), 0)
output = relay.Tuple([call_2582,])
output2 = relay.Tuple([call_2583,])
func_2586 = relay.Function([], output)
mod['func_2586'] = func_2586
mod = relay.transform.InferType()(mod)
output = func_2586()
func_2587 = relay.Function([], output)
mutated_mod['func_2587'] = func_2587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1302_call = mod.get_global_var('func_1302')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_2599 = func_1302_call()
call_2600 = func_1302_call()
func_2187_call = mod.get_global_var('func_2187')
func_2188_call = mutated_mod.get_global_var('func_2188')
call_2605 = relay.TupleGetItem(func_2187_call(), 0)
call_2606 = relay.TupleGetItem(func_2188_call(), 0)
func_1229_call = mod.get_global_var('func_1229')
func_1230_call = mutated_mod.get_global_var('func_1230')
call_2626 = func_1229_call()
call_2627 = func_1229_call()
func_163_call = mod.get_global_var('func_163')
func_168_call = mutated_mod.get_global_var('func_168')
call_2652 = relay.TupleGetItem(func_163_call(relay.reshape(call_2605.astype('uint64'), [13, 14, 14]), relay.reshape(call_2605.astype('uint64'), [13, 14, 14]), relay.reshape(call_2605.astype('uint64'), [13, 14, 14]), ), 1)
call_2653 = relay.TupleGetItem(func_168_call(relay.reshape(call_2605.astype('uint64'), [13, 14, 14]), relay.reshape(call_2605.astype('uint64'), [13, 14, 14]), relay.reshape(call_2605.astype('uint64'), [13, 14, 14]), ), 1)
func_1581_call = mod.get_global_var('func_1581')
func_1583_call = mutated_mod.get_global_var('func_1583')
call_2659 = relay.TupleGetItem(func_1581_call(relay.reshape(call_2626.astype('float64'), [7, 6, 3])), 0)
call_2660 = relay.TupleGetItem(func_1583_call(relay.reshape(call_2626.astype('float64'), [7, 6, 3])), 0)
output = relay.Tuple([call_2599,call_2605,call_2626,call_2652,call_2659,])
output2 = relay.Tuple([call_2600,call_2606,call_2627,call_2653,call_2660,])
func_2663 = relay.Function([], output)
mod['func_2663'] = func_2663
mod = relay.transform.InferType()(mod)
mutated_mod['func_2663'] = func_2663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2663_call = mutated_mod.get_global_var('func_2663')
call_2664 = func_2663_call()
output = call_2664
func_2665 = relay.Function([], output)
mutated_mod['func_2665'] = func_2665
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2745 = relay.var("var_2745", dtype = "float32", shape = (4, 16, 12))#candidate|2745|(4, 16, 12)|var|float32
var_2746 = relay.var("var_2746", dtype = "float32", shape = (4, 16, 12))#candidate|2746|(4, 16, 12)|var|float32
bop_2747 = relay.greater_equal(var_2745.astype('bool'), relay.reshape(var_2746.astype('bool'), relay.shape_of(var_2745))) # shape=(4, 16, 12)
output = bop_2747
output2 = bop_2747
func_2760 = relay.Function([var_2745,var_2746,], output)
mod['func_2760'] = func_2760
mod = relay.transform.InferType()(mod)
var_2761 = relay.var("var_2761", dtype = "float32", shape = (4, 16, 12))#candidate|2761|(4, 16, 12)|var|float32
var_2762 = relay.var("var_2762", dtype = "float32", shape = (4, 16, 12))#candidate|2762|(4, 16, 12)|var|float32
output = func_2760(var_2761,var_2762,)
func_2763 = relay.Function([var_2761,var_2762,], output)
mutated_mod['func_2763'] = func_2763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2218_call = mod.get_global_var('func_2218')
func_2220_call = mutated_mod.get_global_var('func_2220')
call_2809 = func_2218_call()
call_2810 = func_2218_call()
func_2760_call = mod.get_global_var('func_2760')
func_2763_call = mutated_mod.get_global_var('func_2763')
var_2867 = relay.var("var_2867", dtype = "float32", shape = (768,))#candidate|2867|(768,)|var|float32
call_2866 = func_2760_call(relay.reshape(var_2867.astype('float32'), [4, 16, 12]), relay.reshape(var_2867.astype('float32'), [4, 16, 12]), )
call_2868 = func_2760_call(relay.reshape(var_2867.astype('float32'), [4, 16, 12]), relay.reshape(var_2867.astype('float32'), [4, 16, 12]), )
output = relay.Tuple([call_2809,call_2866,var_2867,])
output2 = relay.Tuple([call_2810,call_2868,var_2867,])
func_2873 = relay.Function([var_2867,], output)
mod['func_2873'] = func_2873
mod = relay.transform.InferType()(mod)
var_2874 = relay.var("var_2874", dtype = "float32", shape = (768,))#candidate|2874|(768,)|var|float32
output = func_2873(var_2874)
func_2875 = relay.Function([var_2874], output)
mutated_mod['func_2875'] = func_2875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2259_call = mod.get_global_var('func_2259')
func_2261_call = mutated_mod.get_global_var('func_2261')
call_2880 = func_2259_call()
call_2881 = func_2259_call()
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2887 = relay.TupleGetItem(func_2162_call(), 1)
call_2888 = relay.TupleGetItem(func_2163_call(), 1)
func_1372_call = mod.get_global_var('func_1372')
func_1379_call = mutated_mod.get_global_var('func_1379')
const_2894 = relay.const(3, dtype = "uint16")#candidate|2894|()|const|uint16
const_2895 = relay.const([-3,1,-9,10,8,-7,-8,-10,5,-9,4,2,6,-7,8,-8,-5,6,-1,-7,6,-6,2,-1,9,8,9,-1,-2,3,-2,-4,-1,-10,7,-3,-1,9,5,2,2,-1,-4,6,-3,-7,-10,-10,9,5,-7,-1,9,4,10,10,-10,4,3,9,9,-1,-6,1,-2,3,7,2,6,10,3,-9,-10,6,-5,1,10,-4,-4,-4,-1,10,3,-2,7,8,-3,-5,-1,8,6,9,-3,4,6,-6,5,5,-5,10,10,-1,4,-5,7,-1,5,10,-1,-5,-2,-5,8,-8,10,6,5,-2,5,4,-3,4,-4,-5,-1,-3,-5,2,10,-6,-8,-10,-2,-2,4,-9,-2,4,-9,3,1,-5,-6,-8,6,9,-8,7,-3,-7,4,3,-8,1,6,-9,2,3,-2,-6,-9,-4,-4,-9,9,-6,-3,-10,8,10,7,-2,5,7,-10,-8,8,6,-5,10,2,-9,-7,-5,8,10,9,4,-9,3,-4,6,3,5,-10,1,3,6,7,-6,1,2,-9,-3,-9,-6,7,6,-8,7,-8,-10,8,-4,9,4,7,9,-4,4,9,8,-4,6,-7,-7,-1,9,-5,6,2,-6,-6,7,-1,3,1,-6,6,-6,-4,10,-2,-7,-2,2,3,-5,7,6,2,-8,9,-7,-7,-9,-6,8,-8,4,8,-3,6,-7,-9,10,2,-4,1,7,-4,9,-7,-9,-4,4,1,-4,-5,-1,-5,6,7,10,3,6,-8,-9,-3,-10,1,8,1,-10,-4,1,-4,-7,-8,10,8,1,2,1,-10,2,-4,5,4,-10,-8,8,-9,-2,-3,10,-8,-7,5,-6,8,-6,10,-8,7,-3,-10,-7,-5,7,3,9,-2,-2,6,-10,7,9,-7,4,-6,9,9,6,-6,1,-2,-1,-7,-1,-4,-7,9,10,4,10,-2,-7,-8,4,10,3,6,-8,10,7,-2,-5,-2,-7,-1,-8,9,-6,10,2,5,-4,1,3,-1,5,7,-4,-7,5,1,4,9,-8,-10,-1,-8,-6,-6,2,1,9,-9,5,6,-5,5,9,-9,-5,7,-6,2,4,10,3,3,-9,7,-10,6,-9,7,7,5,7,-9,-5,-4,8,4,7,-5,10,10,4,5,9,1,10,-9,6,-9,-8,9,-8,7,-10,2,4,-10,-2,-10,-7,-6,-9,-3,2,7,6,7,-8,-1,-9,-10,7,-9,-5,9,-4,-8,-1,-7,2,4,-9,-3,-7,7,9,9,7,4,-9,-3,-1,5,1,-4,5,2,1,10,10,-2,-7,7,-8,-6,-6,-3,10,-9,-9,6,5,7,3,-1,-7,4,-5,7,-1,-4,4,6,-3,-4,1,8,8,-1,-3,4,5,-7,10,-6,9,-10,5,-4,4,-3,-8,3,6,-6,6,2,-9,-2,3,10,5,-4,9,-1,7,-9,4,-2,-6,3,10,3,-4,-10,4,10,3,2,-3,-6,6,7,9,-4,10,9,5,-1,1,-8,3,-4,2,-10,-8,5,-2,-4,2,10,-5,3,-2,-9,-8,-8,4,9,8,1,6,10,8,10,1,-3,-8,-4,-3,-5,-9,5,-5,-9,4,10,6,9,-1,-8,-9,-9,-9,1,-6,-6,7,8,6,6,-7,-1,4,9,-10,-10,-7,-8,-1,-10,-3,-2,6,4,-7,-3,5,-7,5,-6,2,4,2,8,10,10,4,6,4,-3,10,-5,-1,6,10,-3,-6,6,10,3,1,5,-7,-5,-3,-4,-6,2,1,5,9,-6,6,5,5,6,-3,-1,-4,-3,-5,-1,-6,-8,2,10,3,6,-9,7,-1,10,-4,4,7,6,-6,3,-2,9,-6,5,9,3,4,-2,1,-7,-2,6,10,-3,8,6,-1,-6,-8,-8,-2,-2,9,1,7,8,9,-1,3,-5,4,-5,-8,1,1,10,-10,-10,-8,10,9,7,1,6,5,-9,3,-1,-4,-7,-2,8,1,3,-9,7,3,7,-3,10,-6,-7,2,2,-10,8,-7,-6,-6,-10,-3,4,-2,-2,6,2,-10,1,-7,-7,-1,3,-3,6,9,6,-2,10,3,-10,-3,-9,3,6,-2,-9,9,-10,-10,-4,2,-2,2,10,-3,4,-5,10,4,8,-10,8,-8,4,5,-8,7,1,10,-5,-2,-1,-2,4,7,-2,8,6,8,-5,-7,-8,-3,-6,-2,7,1,-2,-7,1,-8,-2,-2,-6,8,5,-4,-10,4,1,-6,-10,6,-2,-8,-8,-3,-7,-9,-7,-4,-10,7,-7,-5,-7,-7,-10,10,-8,2,-9,8,-3,-6,-4,5,9,6,-5,4,-4,10,4,5,-10,-9,5,4,-6,8,-1,6,7,5,4,3,-8,3,4,-5,-8,-3,4,1,-8,-10,4,-10,-7,-10,-2,-3,7,-6,6,5,-8,7,8,9,-6,6,4,-10,10,-4,-4,-5,-2,10,-2,2,-5,-1,-8,10,9,6,1,4,6,4,-6,-3,-1,8,9,-5,-10,7,7,2,3,-9,3,-6,3,1,10,-8,8,-6,8,1,-10,-6,8,-2,5,5,-5,9,2,7,-5,-5,-3,-7,-6,8,9,-2,-3,7,-6,-8,-5,10,8,-1,4,-5,9,-9,2,-1,-3,-7,-7,-8,7,7,4,9,-5,-4,-8,-8,-1,-2,-6,6,-7,-10,7,9,-4,8,-4,-10,9,9,-5,4,6,10,10,5,-9,2,-5,-10,7,-6,6,9,-2,-5,-7,-2,5,-9,8,-2,1,2,7,2,3,7,8,7,6,6,10,-8,-1,-2,1,7,10,-5,-5,-10,-8,8,-5,-5,-6,6,-10,3,-1,4,8,3,3,4,-8,-4,3,2,6,9,-8,-8,-9,-10,5,-4,5,1,-7,6,1,-10,4,4,-9,2,10,-4,2,-1,9,-9,1,6,9,3,-4,4,-7,7,-1,-1,-10,10,-2,10], dtype = "uint16")#candidate|2895|(1120,)|const|uint16
var_2896 = relay.var("var_2896", dtype = "bool", shape = (312,))#candidate|2896|(312,)|var|bool
var_2897 = relay.var("var_2897", dtype = "uint64", shape = (2548,))#candidate|2897|(2548,)|var|uint64
call_2893 = relay.TupleGetItem(func_1372_call(relay.reshape(const_2894.astype('uint16'), []), relay.reshape(const_2895.astype('uint16'), [8, 140]), relay.reshape(var_2896.astype('bool'), [312,]), relay.reshape(var_2897.astype('uint64'), [2548,]), relay.reshape(call_2880.astype('float64'), [7, 6, 3]), ), 7)
call_2898 = relay.TupleGetItem(func_1379_call(relay.reshape(const_2894.astype('uint16'), []), relay.reshape(const_2895.astype('uint16'), [8, 140]), relay.reshape(var_2896.astype('bool'), [312,]), relay.reshape(var_2897.astype('uint64'), [2548,]), relay.reshape(call_2880.astype('float64'), [7, 6, 3]), ), 7)
output = relay.Tuple([call_2880,call_2887,call_2893,const_2894,const_2895,var_2896,var_2897,])
output2 = relay.Tuple([call_2881,call_2888,call_2898,const_2894,const_2895,var_2896,var_2897,])
func_2901 = relay.Function([var_2896,var_2897,], output)
mod['func_2901'] = func_2901
mod = relay.transform.InferType()(mod)
mutated_mod['func_2901'] = func_2901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2901_call = mutated_mod.get_global_var('func_2901')
var_2903 = relay.var("var_2903", dtype = "bool", shape = (312,))#candidate|2903|(312,)|var|bool
var_2904 = relay.var("var_2904", dtype = "uint64", shape = (2548,))#candidate|2904|(2548,)|var|uint64
call_2902 = func_2901_call(var_2903,var_2904,)
output = call_2902
func_2905 = relay.Function([var_2903,var_2904,], output)
mutated_mod['func_2905'] = func_2905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_2932 = relay.TupleGetItem(func_2180_call(), 0)
call_2933 = relay.TupleGetItem(func_2181_call(), 0)
output = relay.Tuple([call_2932,])
output2 = relay.Tuple([call_2933,])
func_2945 = relay.Function([], output)
mod['func_2945'] = func_2945
mod = relay.transform.InferType()(mod)
mutated_mod['func_2945'] = func_2945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2945_call = mutated_mod.get_global_var('func_2945')
call_2946 = func_2945_call()
output = call_2946
func_2947 = relay.Function([], output)
mutated_mod['func_2947'] = func_2947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2187_call = mod.get_global_var('func_2187')
func_2188_call = mutated_mod.get_global_var('func_2188')
call_2992 = relay.TupleGetItem(func_2187_call(), 0)
call_2993 = relay.TupleGetItem(func_2188_call(), 0)
var_3009 = relay.var("var_3009", dtype = "bool", shape = (13, 14, 14))#candidate|3009|(13, 14, 14)|var|bool
bop_3010 = relay.less(call_2992.astype('bool'), relay.reshape(var_3009.astype('bool'), relay.shape_of(call_2992))) # shape=(13, 14, 14)
bop_3013 = relay.less(call_2993.astype('bool'), relay.reshape(var_3009.astype('bool'), relay.shape_of(call_2993))) # shape=(13, 14, 14)
output = relay.Tuple([bop_3010,])
output2 = relay.Tuple([bop_3013,])
func_3016 = relay.Function([var_3009,], output)
mod['func_3016'] = func_3016
mod = relay.transform.InferType()(mod)
var_3017 = relay.var("var_3017", dtype = "bool", shape = (13, 14, 14))#candidate|3017|(13, 14, 14)|var|bool
output = func_3016(var_3017)
func_3018 = relay.Function([var_3017], output)
mutated_mod['func_3018'] = func_3018
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3031 = relay.var("var_3031", dtype = "uint8", shape = (2, 11, 11))#candidate|3031|(2, 11, 11)|var|uint8
var_3032 = relay.var("var_3032", dtype = "uint8", shape = (2, 11, 11))#candidate|3032|(2, 11, 11)|var|uint8
bop_3033 = relay.minimum(var_3031.astype('uint8'), relay.reshape(var_3032.astype('uint8'), relay.shape_of(var_3031))) # shape=(2, 11, 11)
output = relay.Tuple([bop_3033,])
output2 = relay.Tuple([bop_3033,])
func_3055 = relay.Function([var_3031,var_3032,], output)
mod['func_3055'] = func_3055
mod = relay.transform.InferType()(mod)
mutated_mod['func_3055'] = func_3055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3055_call = mutated_mod.get_global_var('func_3055')
var_3057 = relay.var("var_3057", dtype = "uint8", shape = (2, 11, 11))#candidate|3057|(2, 11, 11)|var|uint8
var_3058 = relay.var("var_3058", dtype = "uint8", shape = (2, 11, 11))#candidate|3058|(2, 11, 11)|var|uint8
call_3056 = func_3055_call(var_3057,var_3058,)
output = call_3056
func_3059 = relay.Function([var_3057,var_3058,], output)
mutated_mod['func_3059'] = func_3059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_3066 = relay.TupleGetItem(func_2162_call(), 1)
call_3067 = relay.TupleGetItem(func_2163_call(), 1)
output = relay.Tuple([call_3066,])
output2 = relay.Tuple([call_3067,])
func_3074 = relay.Function([], output)
mod['func_3074'] = func_3074
mod = relay.transform.InferType()(mod)
output = func_3074()
func_3075 = relay.Function([], output)
mutated_mod['func_3075'] = func_3075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1302_call = mod.get_global_var('func_1302')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_3137 = func_1302_call()
call_3138 = func_1302_call()
func_1709_call = mod.get_global_var('func_1709')
func_1713_call = mutated_mod.get_global_var('func_1713')
var_3158 = relay.var("var_3158", dtype = "bool", shape = (312, 1))#candidate|3158|(312, 1)|var|bool
call_3157 = relay.TupleGetItem(func_1709_call(relay.reshape(call_3137.astype('float64'), [7, 6, 3]), relay.reshape(var_3158.astype('bool'), [312,]), ), 1)
call_3159 = relay.TupleGetItem(func_1713_call(relay.reshape(call_3137.astype('float64'), [7, 6, 3]), relay.reshape(var_3158.astype('bool'), [312,]), ), 1)
bop_3160 = relay.right_shift(var_3158.astype('int16'), relay.reshape(call_3157.astype('int16'), relay.shape_of(var_3158))) # shape=(312, 1)
bop_3163 = relay.right_shift(var_3158.astype('int16'), relay.reshape(call_3159.astype('int16'), relay.shape_of(var_3158))) # shape=(312, 1)
func_2873_call = mod.get_global_var('func_2873')
func_2875_call = mutated_mod.get_global_var('func_2875')
var_3172 = relay.var("var_3172", dtype = "float32", shape = (768,))#candidate|3172|(768,)|var|float32
call_3171 = relay.TupleGetItem(func_2873_call(relay.reshape(var_3172.astype('float32'), [768,])), 1)
call_3173 = relay.TupleGetItem(func_2875_call(relay.reshape(var_3172.astype('float32'), [768,])), 1)
func_1709_call = mod.get_global_var('func_1709')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_3174 = relay.TupleGetItem(func_1709_call(relay.reshape(call_3137.astype('float64'), [7, 6, 3]), relay.reshape(call_3157.astype('bool'), [312,]), ), 0)
call_3175 = relay.TupleGetItem(func_1713_call(relay.reshape(call_3137.astype('float64'), [7, 6, 3]), relay.reshape(call_3157.astype('bool'), [312,]), ), 0)
output = relay.Tuple([call_3137,bop_3160,call_3171,var_3172,call_3174,])
output2 = relay.Tuple([call_3138,bop_3163,call_3173,var_3172,call_3175,])
func_3199 = relay.Function([var_3158,var_3172,], output)
mod['func_3199'] = func_3199
mod = relay.transform.InferType()(mod)
var_3200 = relay.var("var_3200", dtype = "bool", shape = (312, 1))#candidate|3200|(312, 1)|var|bool
var_3201 = relay.var("var_3201", dtype = "float32", shape = (768,))#candidate|3201|(768,)|var|float32
output = func_3199(var_3200,var_3201,)
func_3202 = relay.Function([var_3200,var_3201,], output)
mutated_mod['func_3202'] = func_3202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_3214 = relay.TupleGetItem(func_2162_call(), 0)
call_3215 = relay.TupleGetItem(func_2163_call(), 0)
func_2259_call = mod.get_global_var('func_2259')
func_2261_call = mutated_mod.get_global_var('func_2261')
call_3217 = func_2259_call()
call_3218 = func_2259_call()
bop_3223 = relay.bitwise_or(call_3214.astype('int8'), relay.reshape(call_3217.astype('int8'), relay.shape_of(call_3214))) # shape=(7, 6, 3)
bop_3226 = relay.bitwise_or(call_3215.astype('int8'), relay.reshape(call_3218.astype('int8'), relay.shape_of(call_3215))) # shape=(7, 6, 3)
func_2475_call = mod.get_global_var('func_2475')
func_2477_call = mutated_mod.get_global_var('func_2477')
call_3231 = relay.TupleGetItem(func_2475_call(), 0)
call_3232 = relay.TupleGetItem(func_2477_call(), 0)
func_1372_call = mod.get_global_var('func_1372')
func_1379_call = mutated_mod.get_global_var('func_1379')
var_3235 = relay.var("var_3235", dtype = "uint16", shape = ())#candidate|3235|()|var|uint16
var_3236 = relay.var("var_3236", dtype = "uint16", shape = (1120,))#candidate|3236|(1120,)|var|uint16
var_3237 = relay.var("var_3237", dtype = "bool", shape = (312,))#candidate|3237|(312,)|var|bool
var_3238 = relay.var("var_3238", dtype = "uint64", shape = (2548,))#candidate|3238|(2548,)|var|uint64
call_3234 = relay.TupleGetItem(func_1372_call(relay.reshape(var_3235.astype('uint16'), []), relay.reshape(var_3236.astype('uint16'), [8, 140]), relay.reshape(var_3237.astype('bool'), [312,]), relay.reshape(var_3238.astype('uint64'), [2548,]), relay.reshape(call_3231.astype('float64'), [7, 6, 3]), ), 4)
call_3239 = relay.TupleGetItem(func_1379_call(relay.reshape(var_3235.astype('uint16'), []), relay.reshape(var_3236.astype('uint16'), [8, 140]), relay.reshape(var_3237.astype('bool'), [312,]), relay.reshape(var_3238.astype('uint64'), [2548,]), relay.reshape(call_3231.astype('float64'), [7, 6, 3]), ), 4)
func_381_call = mod.get_global_var('func_381')
func_385_call = mutated_mod.get_global_var('func_385')
call_3248 = func_381_call(relay.reshape(var_3235.astype('uint16'), []), relay.reshape(var_3236.astype('uint16'), [14, 10, 8]), )
call_3249 = func_381_call(relay.reshape(var_3235.astype('uint16'), []), relay.reshape(var_3236.astype('uint16'), [14, 10, 8]), )
output = relay.Tuple([bop_3223,call_3231,call_3234,var_3235,var_3236,var_3237,var_3238,call_3248,])
output2 = relay.Tuple([bop_3226,call_3232,call_3239,var_3235,var_3236,var_3237,var_3238,call_3249,])
func_3277 = relay.Function([var_3235,var_3236,var_3237,var_3238,], output)
mod['func_3277'] = func_3277
mod = relay.transform.InferType()(mod)
var_3278 = relay.var("var_3278", dtype = "uint16", shape = ())#candidate|3278|()|var|uint16
var_3279 = relay.var("var_3279", dtype = "uint16", shape = (1120,))#candidate|3279|(1120,)|var|uint16
var_3280 = relay.var("var_3280", dtype = "bool", shape = (312,))#candidate|3280|(312,)|var|bool
var_3281 = relay.var("var_3281", dtype = "uint64", shape = (2548,))#candidate|3281|(2548,)|var|uint64
output = func_3277(var_3278,var_3279,var_3280,var_3281,)
func_3282 = relay.Function([var_3278,var_3279,var_3280,var_3281,], output)
mutated_mod['func_3282'] = func_3282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mod.get_global_var('func_924')
func_925_call = mutated_mod.get_global_var('func_925')
call_3296 = relay.TupleGetItem(func_924_call(), 0)
call_3297 = relay.TupleGetItem(func_925_call(), 0)
func_1118_call = mod.get_global_var('func_1118')
func_1123_call = mutated_mod.get_global_var('func_1123')
const_3308 = relay.const([[9,8,-3,-7,-7,3,7,9,-1,-1,10,-4,6,4,7,2,-9,10,-1,8,7,5,7,8,-4,6,3,-4,9,4,-9,-2,5,10,-10,-3,10,-10,3,-5,-9,10,-3,8,10,6,8,-8,9,-8,-6,5,-8,-5,5,5,2,-3,-10,5,-4,-1,-10,-3,9,-9,2,-3,10,-1,-7,-8,-2,4,-3,3,-1,-10,-5,1,6,-9,5,-9,1,2,8,6,3,3,-10,-3,-1,3,6,10,-5,10,-2,-7,-9,-10,10,-7,8,9,6,-9,3,-5,-6,-10,-5,-3,9,9,-8,7,6,3,5,10,-3,10,-2,4,-1,1,5,2,-1,-2,-1,10,-2,-1,-4,8,-1,3,3,-1,2,-2,-3,10,7,-6,-8,6,-9,7,-8,-9,1,-2,9,-3,-3,-9,1,-2,-1,7,-5,1,1,-7,3,8,10,-2,-3,-2,-10,-3,-2,7,5,7,10,4,-6,-10,9,-4,-10,-7,-9,-9,2,10,-9,9,3,-6,4,4,-2,-10,4,9,-10,7,5,-10,10,-3,7,4,10,2,-9,7,-3,-2,10,-3,8,-2,5,-2,-2,-3,6,8,5,-1,10,-6,4,-2,-9,-9,-6,-2,2,6,-8,2,6,2,-2,8,1,-5,-1,-3,3,-9,-2,-9,-4,8,-4,6,2,3,-10,-6,-6,10,-7,10,-5,-8,-10,1,2,4,2,9,-7,-8,5,10,4,-7,-2,-2,5,-4,-6,7,-4,7,-10,-10,7,3,-3,-3,2,-7,-6,3,-8,6,-10,4,-5,-10,5,3,-1,6,-9,8,-9,-10,-3,-8,-8,4,9,-1,-9,1,-4,-8,1,8,10,-3,-10,-4,6,3,6,1,5,2,-7,-8,9,6,9,-2,-2,8,10,7,3,9,7,-5,-3,8,3,-3,-3,4,4,9,-3,-8,-8,-8,-4,10,-6,-6,5,-3,2,-1,-6,5,1,6,2,8,10,2,-2,5,-9,-10,-7,-3,8,5,8,-6,5,-4,7,-8,-9,-10,5,2,-10,-10,-5,7,-6,-9,-2,5,6,-4,-5,-9,7,7,9,-7,2,-4,-2,-2,3,5,4,-1,-3,-3,-1,3,6,-9,-9,-1,-6,10,8,-6,-3,4,-3,2,-2,-6,-9,-3,1,7,-8,3,-5,-2,6,2,1,1,-1,-1,7,-7,6,-1,-2,7,7,6,2,5,-9,9,2,-3,-2,9,-2,6,-8,5,5,2,1,-8,-9,4,9,-6,-5,8,-7,-7,-5,9,1,-3,-7,10,4,-2,10,-9,-1,-2,7,-4,-8,5,5,5,7,2,-5,-1,-10,-10,-1,9,-5,6,2,-8,2,-2,-7,-1,-6,-8,5,10,4,-8,-10,-7,-10,8,-5,-2,10,-2,-4,-9,7,-1,-9,-10,10,8,-4,4,-9,6,9,-1,-4,3,-9,8,2,-8,2,-3,-5,4,-9,-5,-3,4,-1,-10,-1,2],[-7,-6,10,1,-4,-6,-7,-10,1,5,-8,-5,-6,-3,9,-5,-6,7,-6,9,5,1,-10,-10,-8,-4,-6,3,-7,6,-2,4,3,5,2,-9,1,-10,-1,-1,-7,-5,-5,2,-7,-10,1,-8,-7,-4,-6,7,3,10,8,-4,6,8,8,-5,-2,5,-9,8,7,-5,2,-2,-9,-10,-4,4,4,3,-5,8,-5,1,-7,2,-8,6,-10,7,-1,-8,3,-4,5,-10,8,-8,-10,-1,-7,-8,-1,-6,-3,10,-4,-6,2,6,9,-8,4,2,-6,-1,-7,9,-3,10,-10,9,-1,-10,7,10,10,3,-5,-9,9,7,9,5,-1,-10,-7,4,6,-1,-10,8,-1,5,7,9,2,-3,2,-4,5,5,-5,-2,-2,5,-5,3,8,-4,-10,3,10,4,6,-6,-6,-4,1,3,10,5,-4,3,-6,7,1,9,-5,-3,5,-1,2,1,1,7,3,-9,2,-7,1,4,3,1,-10,-7,6,5,3,-1,1,8,-2,1,10,-10,-1,1,2,1,10,7,6,-6,-2,-5,-7,-9,9,2,-9,10,-9,-3,7,-2,-2,5,-3,-8,9,9,6,6,-7,5,-1,5,8,-10,4,1,3,5,-6,2,-8,-3,1,8,-6,-4,-9,-8,1,-1,-1,2,-8,-9,-1,2,-4,-4,4,2,6,-8,7,2,-5,-4,5,8,4,-2,10,6,10,-6,-1,-6,-4,-2,4,10,6,6,9,-9,-3,2,6,5,8,-10,-2,6,5,-9,-3,-8,3,2,-6,-9,-9,-2,8,1,-3,-5,-1,10,-10,-5,-10,-9,5,-8,-2,1,7,8,-3,9,2,-10,4,9,1,-6,6,-5,-9,-3,-10,-2,-8,-10,9,-8,3,2,-7,3,4,10,-5,1,8,4,-6,4,-7,6,6,-5,-1,-8,9,-10,-1,4,-7,-1,-9,-4,-1,1,-5,-4,-3,1,7,4,-3,2,5,1,1,7,-6,2,-9,5,-2,-4,7,10,-7,1,-9,3,7,7,7,-5,-5,10,4,10,4,10,1,5,-4,-7,9,8,5,5,9,3,-9,-10,10,-8,3,-6,-7,4,9,-6,-1,-6,10,-8,-1,3,-6,4,2,-10,1,-1,9,2,7,6,-2,6,-6,-1,5,-1,-6,7,-9,4,3,10,3,9,10,9,2,6,-10,-6,-8,6,-2,-3,-1,10,-6,-7,-2,10,4,6,5,-3,-8,9,-6,1,9,-8,2,-4,8,-9,8,2,1,7,9,-10,-8,2,-6,-3,-8,-5,9,-3,1,-5,1,10,-5,-7,-8,3,8,2,-10,-8,6,-3,1,1,-7,-2,6,-10,8,7,-4,3,-6,5,10,6,-5,2,-4,9,-9,-10,2,8,-7,7,5,-3,-5,-7,-10,-2,4,2,-6,1,-1,-2,1,4,-5,9,-2,-1,1,-3,-2,7,-10,-6,-7,4,8,-2,8,-6]], dtype = "uint16")#candidate|3308|(2, 560)|const|uint16
var_3309 = relay.var("var_3309", dtype = "bool", shape = (312,))#candidate|3309|(312,)|var|bool
var_3310 = relay.var("var_3310", dtype = "uint64", shape = (2548,))#candidate|3310|(2548,)|var|uint64
call_3307 = relay.TupleGetItem(func_1118_call(relay.reshape(call_3296.astype('float64'), [7, 6, 3]), relay.reshape(const_3308.astype('uint16'), [1120,]), relay.reshape(var_3309.astype('bool'), [312, 1]), relay.reshape(var_3310.astype('uint64'), [13, 14, 14]), ), 0)
call_3311 = relay.TupleGetItem(func_1123_call(relay.reshape(call_3296.astype('float64'), [7, 6, 3]), relay.reshape(const_3308.astype('uint16'), [1120,]), relay.reshape(var_3309.astype('bool'), [312, 1]), relay.reshape(var_3310.astype('uint64'), [13, 14, 14]), ), 0)
output = relay.Tuple([call_3296,call_3307,const_3308,var_3309,var_3310,])
output2 = relay.Tuple([call_3297,call_3311,const_3308,var_3309,var_3310,])
func_3314 = relay.Function([var_3309,var_3310,], output)
mod['func_3314'] = func_3314
mod = relay.transform.InferType()(mod)
var_3315 = relay.var("var_3315", dtype = "bool", shape = (312,))#candidate|3315|(312,)|var|bool
var_3316 = relay.var("var_3316", dtype = "uint64", shape = (2548,))#candidate|3316|(2548,)|var|uint64
output = func_3314(var_3315,var_3316,)
func_3317 = relay.Function([var_3315,var_3316,], output)
mutated_mod['func_3317'] = func_3317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mod.get_global_var('func_924')
func_925_call = mutated_mod.get_global_var('func_925')
call_3321 = relay.TupleGetItem(func_924_call(), 0)
call_3322 = relay.TupleGetItem(func_925_call(), 0)
uop_3324 = relay.log(call_3321.astype('float64')) # shape=(7, 6, 3)
uop_3326 = relay.log(call_3322.astype('float64')) # shape=(7, 6, 3)
func_335_call = mod.get_global_var('func_335')
func_338_call = mutated_mod.get_global_var('func_338')
var_3329 = relay.var("var_3329", dtype = "uint64", shape = (220,))#candidate|3329|(220,)|var|uint64
call_3328 = relay.TupleGetItem(func_335_call(relay.reshape(var_3329.astype('uint64'), [2, 11, 10]), relay.reshape(var_3329.astype('uint64'), [2, 11, 10]), ), 0)
call_3330 = relay.TupleGetItem(func_338_call(relay.reshape(var_3329.astype('uint64'), [2, 11, 10]), relay.reshape(var_3329.astype('uint64'), [2, 11, 10]), ), 0)
output = relay.Tuple([uop_3324,call_3328,var_3329,])
output2 = relay.Tuple([uop_3326,call_3330,var_3329,])
func_3333 = relay.Function([var_3329,], output)
mod['func_3333'] = func_3333
mod = relay.transform.InferType()(mod)
var_3334 = relay.var("var_3334", dtype = "uint64", shape = (220,))#candidate|3334|(220,)|var|uint64
output = func_3333(var_3334)
func_3335 = relay.Function([var_3334], output)
mutated_mod['func_3335'] = func_3335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2311_call = mod.get_global_var('func_2311')
func_2312_call = mutated_mod.get_global_var('func_2312')
call_3350 = relay.TupleGetItem(func_2311_call(), 1)
call_3351 = relay.TupleGetItem(func_2312_call(), 1)
func_2534_call = mod.get_global_var('func_2534')
func_2537_call = mutated_mod.get_global_var('func_2537')
var_3355 = relay.var("var_3355", dtype = "float32", shape = (8, 30))#candidate|3355|(8, 30)|var|float32
call_3354 = relay.TupleGetItem(func_2534_call(relay.reshape(var_3355.astype('float32'), [240,]), relay.reshape(call_3350.astype('uint8'), [630,]), ), 5)
call_3356 = relay.TupleGetItem(func_2537_call(relay.reshape(var_3355.astype('float32'), [240,]), relay.reshape(call_3350.astype('uint8'), [630,]), ), 5)
output = relay.Tuple([call_3350,call_3354,var_3355,])
output2 = relay.Tuple([call_3351,call_3356,var_3355,])
func_3370 = relay.Function([var_3355,], output)
mod['func_3370'] = func_3370
mod = relay.transform.InferType()(mod)
mutated_mod['func_3370'] = func_3370
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3371 = relay.var("var_3371", dtype = "float32", shape = (8, 30))#candidate|3371|(8, 30)|var|float32
func_3370_call = mutated_mod.get_global_var('func_3370')
call_3372 = func_3370_call(var_3371)
output = call_3372
func_3373 = relay.Function([var_3371], output)
mutated_mod['func_3373'] = func_3373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2218_call = mod.get_global_var('func_2218')
func_2220_call = mutated_mod.get_global_var('func_2220')
call_3378 = func_2218_call()
call_3379 = func_2218_call()
output = relay.Tuple([call_3378,])
output2 = relay.Tuple([call_3379,])
func_3380 = relay.Function([], output)
mod['func_3380'] = func_3380
mod = relay.transform.InferType()(mod)
output = func_3380()
func_3381 = relay.Function([], output)
mutated_mod['func_3381'] = func_3381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_3411 = relay.TupleGetItem(func_2414_call(), 1)
call_3412 = relay.TupleGetItem(func_2416_call(), 1)
func_2065_call = mod.get_global_var('func_2065')
func_2069_call = mutated_mod.get_global_var('func_2069')
const_3420 = relay.const([-7,3,3,2,-3,10,7,-2,6,-5,10,4,-1,-6,1,-7,8,-6,7,1,-9,5,-3,-4,-4,9,-3,1,3,-6,-5,-5,-2,-2,-2,-10,5,4,4,-8,-9,2,2,-5,-1,1,3,-8,8,-5,-4,1,4,-9,7,7,-6,7,4,-3,2,-10,-2,1,8,-2,3,-4,-3,7,10,-6,-5,-6,-5,-4,5,-2,-2,-8,-1,5,-6,-2,1,10,3,10,9,5,-5,10,4,-6,7,9,4,3,-4,-2,-4,6,8,-3,2,-2,-8,-6,4,-1,5,10,-7,-3,8,5,8,7,-9,-5,-2,-9,-9,5,8,6,-9,7,7,-6,-5,-7,4,9,6,-4,10,9,10,-5,-1,4,-7,-5,-10,1,1,8,-2,9,-10,-6,-8,-4,-2,-7,-1,-4,-3,-5,9,-8,-4,6,-3,3,9,8,8,-4,-10,-3,5,1,6,10,-2,8,5,1,10,-3,-7,4,10,6,-2,-3,8,-4,-8,2,5,7,5,-9,-5,-3,1,8,9,3,4,-8,-8,9,-9,7,2,-5,5,3,6,2,5,-3,3,6,2,10,-8,-7,9,-2,-9,9,1,-3,9,-8,-5,-1,-7,-6,10,-10,-4,-5,2,-3,4,-4,-1,6,4,4,-7,8,1,4,9,-2,-10,5,6,-2,7,7,-4,-9,9,6,10,9,-7,5,-4,10,-5,5,-2,-2,-2,8,-4,-4,2,-8,-5,4,-9,-9,-5,6,-5,-9,-7,-5,-2,4,-4,8,8,10,2,-5,-2,-3,-5,-7,1,7,-9,-4,9,-6,6,-9,-9,-8,-3,-9,9,-4,-2,-7,6,-10,8,5,-3,10,-6,-4,10,-5,4,9,-7,-8,-3,1,-10,-4,6,6,10,-7,-7,-1,-2,3,2,9,-7,10,3,9,4,-2,3,-8,-5,9,-7,-2,-9,-4,7,4,-10,3,-8,7,-6,-4,6,-9,-8,-5,-1,5,2,-4,-5,-2,-5,-10,-7,-6,-5,-9,-2,-4,-1,9,-7,-3,-8,-5,-5,7,2,-2,-4,2,-1,-10,3,5,-6,5,3,-10,7,1,4,4,7,7,-6,-9,-1,-10,-7,-6,1,6,-9,2,-2,10,5,2,-9,1,9,10,3,4,-7,4,-2,-2,5,-9,-1,4,2,-7,-6,-6,-2,-3,-8,-6,-7,-5,-1,2,-2,-6,3,-8,6,5,6,7,10,5,-6,5,3,4,6,1,-10,-1,-7,-7,-6,4,-4,10,-10,-3,5,-4,7,-2,6,1,2,-1,2,-9,10,10,6,-9,-4,5,-10,10,8,2,-7,2,-6,-6,10,-7,-3,-6,5,-7,8,10,10,-9,4,-2,6,-10,-6,-1,6,-9,-4,-9,-8,10,8,-6,-10,7,-6,-4,-5,-5,5,-1,3,-1,3,-6,4,-9,-7,-1,1,10,-8,-10,-3,8,-10,-8,-7,9,-6,-2,-2,3,5,-8,-3,-4,5,8,8,5,-4,-10,-9,-2,-6,7,3,-9,5,7,-6,-1,-4,8,-4,9,-5,9,-9,-10,3,-5,9,-7,3,-2,-4,1,-3,-9,1,5,6,-1,6,10,-9,10,-10,2,-10,2,1,-1,2,1,7,-1,-3,7,-4,-3,-3,2,-9,-7,-1,4,-10,-6,4,-8,-7,-5,1,-2,-1,7], dtype = "uint8")#candidate|3420|(630,)|const|uint8
const_3421 = relay.const([7,6,-8,1,-8,-6,5,-6,-4,-2,-5,-10,-8,-3,5,6,9,-4,-8,-8,7,-5,-5,-5,-5,-7,2,9,-10,-6,-6,7,-6,-2,-7,3,6,6,10,-2,2,5,-9,-3,9,-4,-6,10,-3,8,-7,-3,10,6,-5,-3,10,-1,2,-7,-5,-6,3,5,-10,-7,-4,10,2,-2,-8,5,4,-6,10,-9,-8,8,-3,-9,-5,-2,7,-3,-9,7,1,-5,8,3,-7,-4,9,8,4,7,-4,-10,-10,-1,9,8,1,-7,7,6,-2,10,-2,-5,6,8,10,4,-1,3,-4,-10,-4,-4,6,-4,-2,-2,-3,-3,-1,-2,10,-3,10,3,-6,-8,1,-1,4,7,-10,-10,-8,-3,-3,9,10,6,-9,3,-1,6,-7,-9,2,6,-3,-8,-1,-9,7,-10,2,-6,-3,6,2,-4,-9,-9,-8,-7,-3,-1,6,-1,-8,10,4,-10,-7,-1,-8,-7,9,-2,-10,8,-3,-2,-9,-4,1,-8,1,2,-2,-6,-9,7,-6,-4,7,-4,1,1,-8,-8,8,5,-3,9,1,6,-6,-7,2,-3,-1,1,-4,3,-7,2,-6,7,4,-5,-1,7,1,-2,-5,-4,-5,-8,7,-10,2,-10,-8,10,-4,9,3,3,-9,-1,-3,1,-1,-4,2,-1,-5,-5,-1,-7,1,10,-1,9,9,4,-6,7,-4,4,-6,-2,-9,4,-3,4,-6,-7,-9,-6,-8,-10,5,-2,10,-7,-4,-7,-8,-4,3,-7,4,5,2,-2,4,-9,-9,10,-8,6,-9,-6,6,-10,-9,8,-10,-5,-4,5,8,7,-4,9,-7,5,-9,-3,-2,-4,7,-2,-4,-9,5,6,-5,-1,3,10,-4,-4,-7,-8,9,10,3,-10,3,5,3,-9,8,7,9,-1,-4,4,3,2,3,5,6,-2,7,6,1,-6,5,-10,3,-7,-6,8,-2,-9,-2,10,-2,-6,-10,-8,-10,-1,10,-9,-3,-7,7,8,4,4,-2,6,5,-4,6,7,6,1,7,8,6,9,-1,-3,-4,2,9,3,-10,10,-9,-2,-5,3,-2,-4,-6,-4,-9,3,5,-1,-3,-10,-9,1,-9,5,5,-6,10,-9,-2,-5,-3,-4,6,-3,-10,-4,-5,-9,7,8,3,-10,5,-1,-4,10,5,-6,-1,-9,-3,-10,-7,5,-2,-5,9,9,-7,-1,-5,8,6,2,-2,8,4,-4,-6,5,3,4,5,6,-2,-3,-7,-8,5,-10,-2,2,6,-7,6,2,-1,-1,-10,10,-3,10,4,-5,-9,-7,5,9,5,6,9,3,6,6,-9,7,-9,-4,-6,-3,-3,-6,-10,-10,2,-8,-5,10,-3,7,-3,5,-3,7,5,-4,2,9,-6,9,-6,-6,-6,-2,3,2,-6,-9,6,-8,-10,1,2,-6,-8,4,-9,-5,-7,5,-10,7,8,5,-6,6,3,9,-9,4,7,-3,10,-3,-7,-10,-9,-3,5,-10,-10,8,-6,-1,-2,-2,4,-5,-3,5,1,9,2,-7,-1,-7,-3,-6,-2,2,3,2,1,-6,-10,-6,-4,-8,-6,-3,-2,-8,7,-2,3,2,-1,-5,-4,5,-2,2,6,2,7,-1,-6,-1,-4,-2,8,5,10,2,-1,-7,-9,-8,-3,9,6,6,-8,2,10,9,8,9,-3,2,-7,-8,-10,-1,9,-2,9,-4,4,9,10,6,-1,3,-6,-8,4,9,-4,-8,2,5,-7,-8,-5,-7,-4,-10,-7,-7,-10,6,-2,-1,-5,9,-8,-9,-3,5,6,2,4,3,9,-2,8,4,-3,8,3,-7,4,-3,5,-7,-2,10,-3,7,6,2,7,4,10,-10,-9,-1,5,10,-5,-2,7,3,7,-3,-9,-5,-10,8,2,2,-9,6,8,7,-2,8,-10,-9,-1,10,-7,6,-5,-9,6,-8,-2,-10,-10,-4,5,4,-5,2,7,-5,8,-4,-10,10,2,-1,-2,-7,-8,-7,-6,-6,-3,-8,4,-7,-7,-5,-3,2,-3,-2,-4,7,3,-2,-4,2,1,-8,-3,7,-5,8,-7,3,-3,-5,5,10,-8,9,-5,9,-8,2,1,3,2,-4,-2,-1,4,-6,9,-9,2,-9,8,4,-5,9,-4,4,6,6,-8,4,2,3,8,8,-9,-7,-7,2,5,-9,-6,8,-4,-1,-1,4,-7,-5,-10,-4,-2,-7,2,-2,-3,-8,6,2,-10,2,-9,5,3,10,-6,2,3,-8,9,4,1,-2,7,6,-8,-1,5,1,-9,-1,5,-5,-3,5,-3,3,-10,2,10,7,8,-2,-5,1,6,-8,-5,9,-6,-9,3,4,6,1,5,3,5,8,-10,1,-3,7,2,6,-10,6,7,-5,5,1,3,7,1,5,8,-7,6,9,-10,5,-1,3,10,-3,3,9,9,-3,3,2,-5,10,-3,-3,-5,-2,1,4,-3,-8,-2,2,3,10,5,-5,10,-4,-8,5,7,-2,1,10,5,-2,-7,8,2,-5,-1,9,-8,4,2,-1,-7,5,-9,3,5,2,-2,1,8,10,6,1,-2,10,-4,-3,4,-8,7,6,7,-3,8,-2,9,8,-1,1,-3,9,2,8,-2,-8,8,-10,-3,5,-8,-10,6,4,6,-3,8,8,-4,5,-3,-4,8,9,6,3,-8,2,-2,3,4,10,-10,10,-5,1,-10,2,-8,7,2,9,-6,5,-7,-7,8,3,-4,-3,9,-8,10,5,10,5,4,3,5,8,-8,-5,2,6,2,-8,5,10,-5,-7,-8,6,-8,-4,7,-7,10,-3,1,-10,-9,3,-4,1,-9,4,-3,-1,-9,4,-10,-5,4,-3,-9,7,3,4,-3,7,-5,1,-1,-9,-9,8,-3,-10,-1,1,7,-10,9,8,-8,6,-5,-1,9,-9,-2,-8,10,-3,10,-2,3,-7,-5,4,9,-7,7,3,8,4,8,7,9,-2,-4,-6,-6,7,8,-5,3,3,1,-8,9,1,6,-7,5,-6,4,4,-6,1,6,3,9,-9,-6,-9,9,-4,7,-1,-1,-1,-10,-4,10,2,-3,-5,-5,-1,1,5,10,-8,1,9,-6,-4,5,-3,-5,-1,2,-1,10,7,3,-5,9,10,-3,-1,-9,-5,5,9,5,-10,-6,5,4,7,-3,-10,6,-2,9,7,-10,-2,2,-9,-5,-5,2,7,1,-3,8,7,-3,2,6,-10,2,3,7,-1,1,-1,8,-6,4,3,3,6,1,-8,7,-3,-3,-1,8,-3,9,-9,4,8,-7,7,-3,5,-1,2,2,7,2,6,-1,9,2,9,-5,3,-7,3,-5,5,1,6,-3,-1,-2,-6,-5,-6,-5,5,3,-4,-2,2,5,-5,-5,2,-5,-2,1,3,3,4,-6,7,-1,-4,8,-8,3,1,-6,5,-7,2,5,3,7,-5,10,-4,5,-2,6,-7,-5,7,1,-5,-1,6,2,-3,9,-4,1,8,8,10,1,-2,-6,-8,-3,3,1,9,1,4,9,6,6,8,5,-5,-5,-3,-6,-6,-5,10,-10,-9,10,-10,-1,-10,2,8,-4,-4,-10,10,7,2,6,-9,-2,7,4,-10,4,10,8,5,-1,-2,5,6,5,5,-1,-8,-3,-4,4,1,-3,-4,-1,4,-8,-2,8,9,5,5,-8,-8,1,9,-5,1,-1,3,-6,3,-3,10,-4,-5,1,-6,6,-2,-5,10,3,-2,-10,8,1,-1,8,-6,-10,-5,4,2,5,-6,-6,4,2,6,10,8,-5,6,2,-10,-4,3,-4,7,-2,-2,1,-10,2,3,-7,-3,-3,10,2,8,-2,-3,8,10,5,10,9,-7,3,-3,4,-7,-3,-10,4,1,1,-6,8,-10,-7,-8,-8,7,6,4,-4,-7,-7,-3,5,8,-2,6,10,10,6,-4,-5,-6,1,-3,2,-3,6,-9,-10,8,3,1,-2,1,-10,-2,7,8,-9,-10,-2,9,9,-1,-7,2,-5,-3,3,-2,-10,10,4,5,10,4,10,-9,1,9,-9,8,-3,8,7,-1,-8,-4,10,6,7,-1,5,-6,-8,-6,6,-10,5,7,9,8,-10,10,4,-9,7,-7,-9,-1,-8,3,-3,4,-2,9,-8,9,-1,-7,4,-7,-5,-3,9,-3,-3,4,-1,3,9,5,10,7,-2,10,10,6,4,-2,-5,4,1,-3,8,6,-9,7,4,5,-8,-1,-4,8,6,3,-4,1,-6,-10,2,2,-6,3,2,-5,2,-3,-2,-4,-10,2,-7,9,-7,10,6,1,10,3,3,-6,-3,1,9,-6,6,1,8,9,-1,-5,10,9,9,5,10,-6,10,8,7,-8,-1,6,-1,5,3,-8,-5,4,1,-7,-1,-3,2,-10,-7,-2,7,8,-5,9,4,-3,-8,-6,-8,-9,-5,10,8,-4,6,5,-4,-3,-7,-8,-4,3,-10,1,1,-5,-6,2,4,-1,4,6,-9,6,1,-1,7,-7,5,4,-7,10,5,7,2,10,4,-3,-4,10,-4,-2,-7,7,6,7,10,1,1,-5,-6,8,-2,4,9,5,5,4,8,-3,3,-2,-9,-10,-10,3,1,-7,-2,1,3,3,-3,1,8,-8,3,-6,10,5,1,6,-9,5,4,-3,9,-6,-4,-6,10,-5,-1,-7,7,2,10,-9,3,-2,-9,-3,-2,-3,-5,-9,2,-7,-5,5,-8,9,7,9,-2,-6,-8,9,9,6,-2,6,-9,6,-9,5,8,-5,1,-8,7,-4,-4,-6,-7,-4,7,3,-4,9,10,1,9,-6,4,-3,-7,-7,-4,-3,-3,-1,8,6,3,-5,1,-2,6,1,9,10,-5,-4,-9,-1,3,-3,-6,-2,6,1,-5,-8,-8,-10,4,-2,4,7,4,-8,-10,7,-1,4,-8,7,-7,-4,-5,-3,-4,-8,-2,4,3,-2,-2,-8,9,2,-8,-1,-3,1,1,9,-10,4,3,5,-7,-8,7,1,9,-5,2,1,3,5,5,-9,-10,6,-10,-9,9,7,-5,-4,-4,1,-7,1,-4,3,-10,-6,-5,4,-3,-4,10,10,2,8,-5,1,-1,1,1,-5,-8,3,-3,-9,-8,9,-6,1,-5,5,-10,-3,1,6,-9,4,2,-9,4,1,4,-10,-1,2,4,5,6,-4,-1,10,3,-5,3,2,-5,9,-3,2,2,9,1,-9,-3,5,-5,-3,-1,5,-6,3,-10,-3,-3,-8,-8,8,-2,-8,10,-10,-8,-3,-3,5,7,-3,10,1,-10,6,-5,-1,1,-3,-1,-6,-6,-8,-1,-10,-10,-5,-8,6,7,-10,-8,1,-8,-2,7,-10,9,4,2,8,5,-6,2,-3,-4,1,-3,3,9,2,3,1,-3,-2,8,-1,-3,-8,-9,-2,-3,6,7,7,7,2,-3,-2,7,-3,3,-8,9,1,-6,-2,8,-2,9,1,-9,4,3,10,1,4,5,2,7,-3,-8,1,3,3,3,6,4,-5,7,8,9,1,6,-10,-7,-6,-6,-1,2,-10,7,-8,5,9,-1,9,-2,5,-4,-1,-6,5,5,2,3,2,-6,-10,-6,-5,7,8,-6,7,6,2,6,5,-7,-9,-8,10,-3,-9,9,-5,-7,8,-4,5,3,-3,7,2,-6,4,-4,-10,-5,4,-2,-4,4,4,7,9,1,10,-3,-3,3,-2,4,-4,2,4,-8,5,-8,-1,10,-6,-5,10,9,4,-3,-9,-10,-3,-10,6,-3,2,-10,8,-5,3,-9,8,6,-9,10,-3,10,5,-5,10,2,3,4,-5,4,-1,-1,-2,-2,-8,-9,-5,1,1,-2,5,-10,7,-10,7,10,-10,8,10,2,-4,-10,-2,-10,-8,1,-6,4,8,-6,9,-4,7,-8,4,8,3,-9,-9,-7,1,2,10,1,-9,5,-2,-4,3,-9,-4,-6,-5,9,4,-2,-5,-2,-10,4,-1,5,10,-6,3,-1,-10,-3,2,8,-9,10,-5,-8,-5,-4,3,-4,1,9,3,1,9,-10,-6,-6,1,9,-8,2,-9,-2,8,-7,-5,-2,-8,-4,7,-9,-2,-9,1,-10,-5,2,1,-8,1,-5,-4,5,-2,-1,10,-5,3,9,2,-2,-4,-10,-10,3,6,6,-6,1,7,-8,-2,-3,-9,-10,4,7,-8,-2,-7,-8,4,2,2,-10,7,-7,-3,7,-3,-2,-1,-4,9,-5,-2,1,4,5,-9,6,5,9,6,-9,-3,5,-3,2,6,8,8,-5,3,2,-7,9,2,9,4,-8,-10,-10,3,-4,-9,8,-2,-4,4,-8,-2,2,-5,-5,-2,5,-5,4,-8,8,3,-5,-10,-3,-4,-5,7,4,2,-2,-10,6,-5,3,1,1,7,2,-6,2,-5,6,-8,-8,10,5,-9,5,-3,9,10,-1,-7,-6,7,3,-9,-4,1,-9,3,9,7,8,-4,6,-7,3,-10,-7,9,7,-8,6,4,-10,-1,9,-5,-8,3,3,10,4,-4,-5,8,10,-6,9,2,-6,-10,-1,-3,-4,-2,8,2,2,-10,9,-10,8,-7,-5,-6,-2,-10,-9,-1,-1,9,-4,9,7,4,9,-4,9,4,10,9,-6,2,-1,-10,5,10,-10,-7,10,10,-3,-8,6,10,-2,8,5,-5,5,9,-5,-9,-9,10,6,-1,-6,5,1,-10,2,2,7,4,-3,2,-3,2,9,-3,4,6,-3,4,6,-8], dtype = "uint64")#candidate|3421|(2548,)|const|uint64
const_3422 = relay.const([8,9,10,6,-9,4,10,5,-8,7,1,-7,-3,-8,-1,-3,6,2,4,-7,6,-6,5,-2,-10,-9,9,5,-8,3,1,10,-5,-5,-10,-4,6,-5,-9,3,5,10,7,6,-8,7,-2,-1,9,10,10,6,-3,-6,5,4,1,-4,9,4,-8,1,5,-10,7,4,3,-1,10,-9,-7,8,6,6,3,-5,10,2,-5,2,10,7,-7,-10,-6,-5,-3,-2,-5,6,-8,-9,-4,-4,1,1,3,7,-8,10,-9,8,-7,2,-9,-10,-9,7,-9,-2,-8,-4,-3,-4,9,5,-8,9,-5,7,-1,-3,5,-4,3,-5,-3,4,9,6,-4,5,8,-7,-6,7,1,-10,1,1,1,5,-6,-9,10,4,-8,4,-4,9,5,-9,-5,3,2,10,-3,-9,-7,-5,-6,9,-9,-2,-5,-4,6,-7,2,-8,5,10,-6,-8,-9,-8,-3,9,-1,4,3,-6,-1,1,-2,-10,9,-6,8,8,8,-2,-4,-2,3,10,-4,-4,-9,8,6,-8,-7,1,-2,-5,-4,3,10,-4,-1,-9,-3,10,2,3,8,-4,-10,2,-4,2,4,8,1,6,-10,-9,-2,7,8,1,-5,-1,-9,-5,-10,3,-4,-7,-6,-1,10,1,8,3,2,-4,-8,-10,-7,-2,-5,2,-5,-6,-4,7,-6,3,8,2,1,-7,-10,-7,-3,6,3,9,7,-9,4,-4,-6,-4,4,-4,-1,-5,9,10,3,2,-3,6,-8,-2,2,-3,-2,3,-3,10,-10,-9,-9,3,-2,-9,-7,7,-9,8,-7,-10,-7,7,-3,-6,-4,-4,-3,-6,-1,1,8,-3,-9,8,1,-6,-4,8,10,10,10,-8,2,-7,-6,1,10,-1,-5,6,-1,-4,-5,-2,-10,-8,8,-3,-9,3,1,-1,8,-10,3,10,-8,8,-9,-8,-5,-9,-4,3,-3,1,10,6,6,-2,-4,4,7,7,4,-4,4,4,-4,-3,5,4,8,5,8,4,10,-5,-9,2,8,4,9,-1,-5,1,-10,7,-5,-1,-2,6,-2,8,3,-7,-7,-4,9,9,-2,5,-5,10,-9,-2,8,2,9,1,3,7,-9,6,8,3,6,-2,2,-1,-4,9,-3,10,-2,-7,9,5,-5,-5,6,3,-5,3,8,8,10,-2,10,-6,2,-9,7,10,-5,-7,2,1,6,5,-1,-5,-10,-4,8,-5,5,-5,6,-4,-8,-1,10,8,-7,9,-5,9,-1,6,-4,2,-4,2,2,-2,7,-3,-5,-1,5,2,-4,5,-5,5,-3,1,-5,9,8,-10,-5,2,-5,4,-4,-9,-9,-2,-9,-6,-5,2,-9,-9,-2,-4,3,7,-8,9,-1,-8,5,5,-10,-8,9,7,1,-6,7,10,-3,-10,-1,-3,-7,3,5,-8,10,-10,-6,-6,2,-9,-2,-9,-7,-6,-7,-1,1,8,3,-1,-2,1,-7,-2,-10,10,-10,-7,-9,7,3,2,-1,2,-6,6,-3,3,-5,2,8,5], dtype = "int8")#candidate|3422|(576,)|const|int8
call_3419 = relay.TupleGetItem(func_2065_call(relay.reshape(const_3420.astype('uint8'), [10, 63]), relay.reshape(const_3421.astype('uint64'), [2548,]), relay.reshape(const_3422.astype('int8'), [576,]), ), 3)
call_3423 = relay.TupleGetItem(func_2069_call(relay.reshape(const_3420.astype('uint8'), [10, 63]), relay.reshape(const_3421.astype('uint64'), [2548,]), relay.reshape(const_3422.astype('int8'), [576,]), ), 3)
const_3444 = relay.const([5,8,7,-10,-8,7,-4,9,8,3,-2,1,-9,-8,7,6,-3,3,8,10,-10,1,5,-7,5,3,10,-3,-6,-7,-1,4,5,-8,3,-9,5,6,-10,-5,2,2,1,-2,-4,-10,9,-3,-3,9,6,-6,10,3,6,6,-5,1,-4,2,9,-7,8,-7,8,5,-6,7,5,-9,-5,1,3,-5,-5,9,1,-4,-5,-7,7,-8,-5,2,-4,-2,-3,-10,-5,7,2,-3,3,3,8,-2,-4,-9,-7,8,1,-10,-3,3,5,-7,6,-1,9,9,-6,2,1,-8,4,2,7,10,-2,7,2,6,8,-9,3,-2,-8,8,10,10,1,-7,-3,8,9,5,-1,-1,10,6,9,2,-6,9,-6,8,-10,-6,4,-10,-9,-6,6,1,-1,-9,7,-8,-2,7,-5,-5,-3,-1,5,10,6,6,7,-2,-6,-7,-2,6,-3,4,-1,4,-10,-1,-6,-8,-8,8,4,2,-1,-3,-7,9,-5,7,-3,-9,7,7,2,-8,10,6,4,-3,10,-9,8,-6,-2,8,5,10,9,5,-1,-2,9,-6,-7,-9,7,-5,-8,8,5,7,5,-3,-3,8,1,6,9,4,-10,-4,-1,-2,9,8,5,-5,1,9,-6,9,-6,-9,8,10,6,-5,-2,-5,6,-4,-9,5,8,-5,10,4,-10,8,8,-5,3,-3,-6,7,-2,-5,1,2,-4,4,10,10,4,-5,8,-9,10,8,-2,8,-8,-6,6,8,4,4,1,1,3,-8,-6,4,10,-1,-8,8,-3,5,-4,-1,-7,10,10,3,-7,-6,9,8,3,4,8,9,8,-3,7,1,-9,-1,-2,2,-7,-4,-6,6,10,3,3,9,6,-4,-6,-8,-5,1,5,-1,-10,9,-7,-7,6,-7,4,10,10,4,10,8,-2,7,2,2,-4,8,-7,-10,-9,-1,5,-4,9,8,3,-7,4,-4,1,-8,6,-6,-5,5,-3,8,2,-2,1,10,-7,8,-2,-10,10,-10,6,-9,-4,4,5,-5,5,7,7,-1,-6,-8,3,3,-3,-10,-9,-9,-5,10,6,-4,5,8,-1,-8,8,-9,-1,-6,5,5,-5,9,-9,8,8,-6,-5,7,-3,-5,1,6,6,10,6,-9,2,-8,9,-6,-10,-2,-9,1,3,7,-1,8,2,3,3,-10,-10,-4,6,9,-4,-1,7,-7,1,4,8,1,8,-10,6,4,8,-8,-9,2,-6,-8,-6,-3,10,1,7,-10,8,6,9,3,-9,6,7,-1,1,-8,-6,-6,-8,6,10,2,5,-3,7,6,4,6,-9,6,8,-9,-5,-5,-3,-10,-7,1,2,10,8,7,-7,-5,10,4,-5,6,-9,3,-2,-5,7,2,-9,-1,8,1,1,-10,7,-10,-1,2,-7,-4,-2,-7,6,-10,-2,4,-7,7,-2,10,3,4,6,5,-5,-2,7,-7,7,-10,6,-2,10,2,4,-3,-4,2,5,5,4,6,-5,8,8,-2,3,-9,1,7,5,-6,-9,9,6,1,-9,3,7,7,-1,-2,-3,9,6,1,8,-10,-6,10,-3,3,-9,8,-10,-3,-4,-5,-10,2,10,7,3,-6,8,-2,-8,-5,-1,-3,9,-2,-3,-1,1,6,7,1,3,-10,3,2,-6,6,-9,10,5,3,9,8,7,1,-9,5,-10,-3,-6,-4,-9,10,9,9,4,-3,-4,-4,7,5,8,10,-5,-10,-7,1,-5,7,5,-10,-6,3,-6,-2,-2,2,7,7,4,-2,2,-8,-8,-2,1,-1,7,-8,9,-7,-9,3,9,-9,-7,-8,6,-7,3,5,-3,2,10,-2,-1,2,-8,-9,4,3,-9,-4,7,9,-3,5,-3,-6,6,-4,9,-9,2,5,6,-9,7,1,-7,5,9,5,-4,6,3,8,-9,-10,-7,-7,10,-9,1,2,-4,-7,-6,6,-5,1,4,9,-8,-4,-1,7,9,10,-6,10,-9,3,-1,-9,-1,4,2,1,-2,7,6,-7,-10,6,9,-7,5,6,-1,2,-5,-9,2,9,5,-9,1,-5,-1,8,7,8,5,9,9,10,-10,5,9,7,-1,4,-2,-3,-9,3,-4,9,-9,7,-2,3,6,-3,3,8,6,-6,-10,-1,9,5,9,5,4,5,1,-5,8,-1,-2,7,-10,6,1,8,-3,5,9,-9,6,-7,4,3,4,4,-4,3,5,3,-7,8,-6,-2,-5,-7,7,-5,8,6,3,-9,3,2,-9,4,7,-8,4,-7,-2,-7,10,1,-1,1,7,2,2,-5,-10,9,-10,-10,6,1,-6,7,2,6,-3,9,9,-9,7,1,3,-5,-8,7,-4,4,-9,-6,10,-6,8,-2,-9,7,-5,3,2,-2,3,-6,2,-9,-2,-3,8,5,7,5,10,-3,-2,-6,-4,-5,-10,8,-1,-4,-3,-5,-8,-8,-10,10,5,-5,-10,1,1,-3,-9,2,7,4,3,-2,10,6,3,9,9,-6,7,5,5,9,-6,-5,9,2,9,-4,3,8,-8,-5,3,8,-1,7,10,2,-9,8,6,-1,-3,3,-5,-2,-10,-9,-10,-4,-1,-1,-9,4,1,5,3,2,10,-2,8,7,-10,-2,7,-3,9,7,6,5,5,-5,-7,-4,2,-4,-9,8,-9,-2,-6,-5,9,-10,-5,-2,-8,-9,-4,2,9,6,-6,7,-5,-4,-4,-4,10,7,1,-6,-8,4,9,10,1,-6,-10,-4,2,6,6,-8,-5,10,4,-7,-2,-4,8,-7,-10,7,5,-7,-1,4,4,-2,7,-7,9,-3,6,9,1,-2,-10,3,2,2,-6,9,-8,-10,-4,-6,-2,5,6,1,-2,8,-4,5,2,9,8,7,10,1,-6,-8,-5,6,7,-9,-4,8,10,4,-5,-10,-1,-8,-6,-5,-5,-1,-4,-4,-8,-7,-1,-8,10,-3,-5,7,3,6,-4,4,-4,2,3,8,-2,-4,3,4,-6,-8,1,8,1,-3,-7,-4,3,-8,5,-8,2,-10,3,-8,-10,-1,-6,-4,7,1,6,2,5,-6,5,-7,-5,3,8,9,2,8,-3,4,-2,1,-2,7,-2,-8,-8,-5,10,1,1,-8,3,8,8,5,7,-10,-10,6,2,8,-7,-3,3,6,7,5,-10,6,-7,10,1,-2,-8,3,-10,-2,-6,-3,8,-2,-3,-4,4,-1,-5,4,2,4,-4,-2,10,1,-8,4,6,-2,7,-2,-8,-9,-5,-6,8,-6,9,-7,3,-4,6,8,5,3,-8,2,-9,8,3,10,5,4,-8,-10,10,-4,3,-8,-4,10,-7,7,-3,-7,-8,-10,5,-5,-6,3,-1,2,-1,-2,-3,-8,-7,4,9,-6,2,-7,9,-7,-1,1,-9,5,7,-8,4,-1,-10,-10,-10,-5,-2,7,-8,-8,-9,2,6,-10,7,-3,4,1,-1,-5,9,1,-6,-5,-7,3,6,3,-3,4,1,-2,-1,2,-5,-3,7,-6,-4,-7,-5,-4,8,-4,-10,-2,6,-9,10,-9,8,-9,-5,10,-7,-8,-7,-5,2,7,-8,7,4,2,-7,9,4,10,5,9,-5,4,1,-9,9,-7,5,-10,9,-5,3,-10,3,6,-8,-10,4,-8,-3,10,-3,8,10,-8,-10,-5,-8,1,7,-1,-2,9,-5,3,-6,-10,9,-8,8,1,-3,-4,-3,4,10,-4,-6,-10,-2,9,-5,8,8,4,5,5,-4,-1,-4,7,-10,-8,-6,7,1,-7,-4,-10,-2,-8,2,7,4,2,-2,-4,2,1,10,7,4,10,10,2,-6,10,-6,5,2,-8,8,7,1,9,7,-5,-9,-1,-6,-10,-3,-2,7,9,-9,-4,-6,-9,10,-10,-4,-10,-1,2,5,-10,4,9,1,3,-2,9,9,-5,-5,-9,-2,-2,3,-2,9,9,4,-9,4,7,8,-4,-5,9,3,-9,-7,10,8,-8,-4,2,-5,-4,-2,4,10,-8,-6,5,5,6,6,3,8,10,-10,-1,-3,5,10,5,9,5,10,-5,-1,-8,9,-10,5,-10,-2,10,-7,-1,4,7,9,9,9,6,-6,-8,6,-3,-7,5,-5,-3,10,9,9,-7,5,8,9,5,-8,2,8,4,2,5,6,10,-3,10,-5,10,5,4,-2,1,10,6,3,-5,1,10,9,3,-1,4,2,-3,-2,10,6,5,-7,7,-1,2,-2,9,-4,-3,-5,-8,9,-1,10,6,-5,3,-2,-1,-3,-4,7,6,4,-6,-4,-6,-10,5,-10,-8,-4,6,-1,10,8,-9,-7,-6,-4,-10,1,-3,-2,-10,1,-7,9,2,8,4,-6,-3,-7,4,3,10,-9,-6,-1,-5,-6,-9,4,7,-5,-10,-5,4,1,-5,-1,2,-8,-2,7,-3,-10,10,-6,-7,-9,2,9,-9,-1,7,-9,-3,-7,8,-4,7,-5,-7,-5,2,9,-1,7,9,2,1,6,10,10,-9,9,8,4,-3,-8,-4,-8,-5,5,-4,-1,10,-2,3,6,-6,-8,9,8,1,-8,4,2,-10,5,-3,2,6,-4,5,10,5,6,10,-7,-1,-5,-8,6,3,-3,-2,10,6,-8,3,2,4,3,3,4,-4,3,-8,-1,4,9,-8,3,-2,7,-9,-7,-9,6,10,-10,-10,8,1,9,3,1,-9,-9,7,8,7,8,6,9,-3,2,-1,-1,8,-8,-10,-6,3,-9,1,6,-3,-3,-8,4,-3,-7,7,-5,-10,7,1,-10,-9,7,-6,-8,-9,9,7,-1,2,-3,7,-3,2,-10,7,1,7,-6,3,4,-8,1,8,6,-1,-8,-8,9,5,4,7,6,3,1,-9,-10,-9,4,5,7,10,6,6,-9,5,1,-9,10,-10,-10,7,7,2,-3,-9,5,-4,7,-8,-1,2,-7,-8,4,7,8,-5,9,-4,6,-1,-5,2,6,-2,5,6,2,-8,-3,-10,6,-6,5,-7,7,2,4,-8,5,5,2,9,-5,-2,-1,-1,-10,-4,-9,5,-1,-8,2,5,-5,-7,-2,-3,-5,-9,-7,-5,-7,1,-10,-10,5,3,-5,7,9,-9,2,9,-6,6,-9,10,8,10,8,-6,-9,2,-9,7,5,-8,9,6,8,-9,-1,-10,10,8,1,3,-4,5,-4,-1,10,5,9,-3,3,3,-10,-4,3,8,-5,6,-6,3,5,8,-5,5,4,10,-1,-3,8,-1,1,-6,10,8,-3,5,-6,5,6,5,7,9,-10,9,2,-10,-9,1,-6,-5,-1,9,3,-1,4,-9,5,9,2,5,5,-7,2,4,-7,9,9,-7,1,-1,6,-6,-2,8,10,-8,-9,-1,-2,-8,-8,-7,6,9,-2,4,4,10,-4,8,10,-1,10,9,-1,-1,6,5,-3,-9,7,-4,-3,5,-1,-3,10,1,8,-3,6,7,3,-4,-8,-3,8,8,-2,-3,7,-7,10,6,-7,-8,-5,7,-8,-4,7,3,-7,-9,3,5,5,-6,9,2,3,2,-4,-5,1,-1,1,4,-3,8,-6,-6,4,-8,8,-10,2,10,-3,10,-6,-4,3,6,2,1,-4,9,-3,-10,8,1,-6,-6,5,4,-5,10,-8,-3,8,-8,-5,2,-5,6,-6,3,-7,10,-3,5,3,-5,2,1,5,6,-8,7,-3,-9,1,9,-9,2,-3,9,2,5,3,6,5,6,-10,-9,8,-2,-7,9,-9,-7,5,8,-9,1,-9,8,9,-7,10,2,1,-7,4,-4,4,-7,7,-8,8,-8,8,-1,3,6,4,-9,1,-5,3,-9,-1,6,2,6,-3,9,2,8,9,-9,3,10,-6,-8,6,-6,2,7,-7,-5,9,4,5,-9,6,-9,-5,-3,-6,2,6,1,1,3,-2,8,2,5,4,4,-1,8,-4,9,-10,3,8,-6,-3,4,-7,1,6,9,-9,9,5,-7,10,8,6,8,7,-2,-2,10,-3,-1,6,-9,2,-4,-5,4,7,-5,-5,-1,-8,-7,-1,10,-7,-5,10,7,-9,-8,1,2,-6,-5,2,7,8,10,10,-5,2,9,3,-3,6,9,-5,-9,1,-4,-7,3,-5,-7,5,-2,-4,-9,7,-9,5,-2,2,3,-3,-6,-10,-8,-4,-1,-10,7,6,-1,10,-5,10,5,-7,5,5,-2,10,9,-6,-4,5,-10,-7,-3,-3,-2,-6,-4,5,-2,-1,-7,-6,-7,-7,1,-4,3,4,-10,4,9,-9,2,-2,-8,9,-6,-2,-9,5,10,-1,-3,-9,-9,5,3,-2,-9,1,7,-3,-7,7,-3,-4,-4,-6,-9,1,1,5,-1,-1,1,-10,-2,-3,-7,4,3,-2,2,-7,6,8,-4,-1,10,-7,-2,1,-9,4,7,5,4,8,-7,7,-2,1,8,3,2,10,7,1,-8,-4,-10,4,10,2,-6,1,3,-8,-3,-10,-10,-10,-2,7,-5,4,3,1,-9,-1,3,-4,5,9,2,-5,-2,3,6,-3,-2,8,4,-9,4,7,-3,6,-3,-7,8,9,-7,-3,10,-5,2,8,-5,-8,-8,-8,4,-10,-1,-3,-1,9,3,-2,-8,7,-10,-8,3,-4,9,-1,-6,-1,2,-7,4,-8,6,2,-6,-5,-4,-3,-9,8,-1,-10,-2,5,6,-6,6,9,-5,-7,8,9,-7,8,1,1,-7,-8,-5], dtype = "uint64")#candidate|3444|(2548,)|const|uint64
bop_3445 = relay.minimum(const_3421.astype('int64'), relay.reshape(const_3444.astype('int64'), relay.shape_of(const_3421))) # shape=(2548,)
output = relay.Tuple([call_3411,call_3419,const_3420,const_3422,bop_3445,])
output2 = relay.Tuple([call_3412,call_3423,const_3420,const_3422,bop_3445,])
func_3459 = relay.Function([], output)
mod['func_3459'] = func_3459
mod = relay.transform.InferType()(mod)
mutated_mod['func_3459'] = func_3459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3459_call = mutated_mod.get_global_var('func_3459')
call_3460 = func_3459_call()
output = call_3460
func_3461 = relay.Function([], output)
mutated_mod['func_3461'] = func_3461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3459_call = mod.get_global_var('func_3459')
func_3461_call = mutated_mod.get_global_var('func_3461')
call_3473 = relay.TupleGetItem(func_3459_call(), 3)
call_3474 = relay.TupleGetItem(func_3461_call(), 3)
var_3509 = relay.var("var_3509", dtype = "int8", shape = (576,))#candidate|3509|(576,)|var|int8
bop_3510 = relay.equal(call_3473.astype('bool'), relay.reshape(var_3509.astype('bool'), relay.shape_of(call_3473))) # shape=(576,)
bop_3513 = relay.equal(call_3474.astype('bool'), relay.reshape(var_3509.astype('bool'), relay.shape_of(call_3474))) # shape=(576,)
func_2187_call = mod.get_global_var('func_2187')
func_2188_call = mutated_mod.get_global_var('func_2188')
call_3517 = relay.TupleGetItem(func_2187_call(), 0)
call_3518 = relay.TupleGetItem(func_2188_call(), 0)
uop_3521 = relay.erf(call_3517.astype('float64')) # shape=(13, 14, 14)
uop_3523 = relay.erf(call_3518.astype('float64')) # shape=(13, 14, 14)
output = relay.Tuple([bop_3510,uop_3521,])
output2 = relay.Tuple([bop_3513,uop_3523,])
func_3527 = relay.Function([var_3509,], output)
mod['func_3527'] = func_3527
mod = relay.transform.InferType()(mod)
var_3528 = relay.var("var_3528", dtype = "int8", shape = (576,))#candidate|3528|(576,)|var|int8
output = func_3527(var_3528)
func_3529 = relay.Function([var_3528], output)
mutated_mod['func_3529'] = func_3529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2945_call = mod.get_global_var('func_2945')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_3546 = relay.TupleGetItem(func_2945_call(), 0)
call_3547 = relay.TupleGetItem(func_2947_call(), 0)
func_335_call = mod.get_global_var('func_335')
func_338_call = mutated_mod.get_global_var('func_338')
const_3551 = relay.const([3,-1,3,6,-7,6,-1,2,-3,-5,7,-5,-6,-2,3,10,-1,10,8,-9,2,-8,4,10,-1,10,2,6,-6,-10,-2,-6,3,8,-2,8,-10,-9,-8,-4,4,5,-9,6,7,-4,-8,1,-6,3,-8,2,-9,4,1,-6,-4,-3,-4,-8,-4,-10,-5,-4,-4,9,-1,-9,3,10,3,-3,7,-10,6,1,-2,-4,6,6,-8,3,7,10,7,-5,5,9,-7,-4,7,-5,-8,4,9,-5,8,-4,10,-4,-3,-9,-1,2,-7,9,2,3,-2,-8,-10,8,3,-2,6,-1,-6,-9,9,3,8,2,-7,-1,-5,-2,2,-2,1,-7,1,-8,-8,-2,-8,7,-8,-5,-5,7,-5,-4,8,3,1,6,10,8,1,-9,6,7,2,-2,10,6,6,-4,9,4,7,-3,-2,-7,1,-3,9,-3,-2,9,-2,-7,8,-5,-9,6,-8,5,7,4,5,5,9,-6,-2,-3,1,-7,3,3,-10,8,-7,8,2,-4,-1,-2,10,1,2,-8,-6,-1,6,1,-2,-4,1,-6,3,-1,-2,5,2,4,10,8,-5,-4], dtype = "uint64")#candidate|3551|(220,)|const|uint64
call_3550 = relay.TupleGetItem(func_335_call(relay.reshape(const_3551.astype('uint64'), [2, 11, 10]), relay.reshape(const_3551.astype('uint64'), [2, 11, 10]), ), 0)
call_3552 = relay.TupleGetItem(func_338_call(relay.reshape(const_3551.astype('uint64'), [2, 11, 10]), relay.reshape(const_3551.astype('uint64'), [2, 11, 10]), ), 0)
const_3558 = relay.const([7,-2,7,6,-7,-10,1,-5,-4,2,-2,5,-4,5,-2,-2,10,-2,6,-4,6,-8,-9,4,3,-1,8,3,7,-10,4,-10,5,-3,1,-6,3,-6,10,-6,-7,-7,2,-5,-8,8,8,-6,1,4,1,10,7,-8,7,9,8,-7,6,9,-8,5,4,-8,5,8,-1,9,6,6,-9,5,1,-8,-5,-10,-4,10,-8,-5,-8,8,3,9,3,3,10,-1,-2,-7,-6,2,4,7,10,-7,-9,10,-10,-3,6,-7,6,9,-7,-6,5,-2,-2,3,3,10,2,-3,-1,-7,2,5,-4,-5,3,3,-9,-1,3,3,-3,-9,-3,1,-1,-2,4,3,4,-8,-9,-6,-7,-1,10,-8,7,2,-10,-7,-3,5,8,5,6,-10,-8,5,-5,6,2,-10,1,-2,-7,1,-8,7,-4,8,8,5,4,1,-6,-5,-9,9,1,1,8,9,-10,-2,1,-2,-9,4,7,-5,2,-3,-6,-3,4,6,7,8,4,-2,1,1,-3,3,2,-4,7,5,10,4,-1,-5,-8,8,4,-4,-5,5,3,9,8,-8,-1,-2], dtype = "uint64")#candidate|3558|(220,)|const|uint64
bop_3559 = relay.mod(const_3551.astype('float64'), relay.reshape(const_3558.astype('float64'), relay.shape_of(const_3551))) # shape=(220,)
func_3074_call = mod.get_global_var('func_3074')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_3566 = relay.TupleGetItem(func_3074_call(), 0)
call_3567 = relay.TupleGetItem(func_3075_call(), 0)
var_3571 = relay.var("var_3571", dtype = "bool", shape = (13, 14, 14))#candidate|3571|(13, 14, 14)|var|bool
bop_3572 = relay.bitwise_and(call_3550.astype('int64'), relay.reshape(var_3571.astype('int64'), relay.shape_of(call_3550))) # shape=(13, 14, 14)
bop_3575 = relay.bitwise_and(call_3552.astype('int64'), relay.reshape(var_3571.astype('int64'), relay.shape_of(call_3552))) # shape=(13, 14, 14)
bop_3592 = relay.mod(call_3550.astype('float64'), relay.reshape(var_3571.astype('float64'), relay.shape_of(call_3550))) # shape=(13, 14, 14)
bop_3595 = relay.mod(call_3552.astype('float64'), relay.reshape(var_3571.astype('float64'), relay.shape_of(call_3552))) # shape=(13, 14, 14)
func_1540_call = mod.get_global_var('func_1540')
func_1543_call = mutated_mod.get_global_var('func_1543')
var_3601 = relay.var("var_3601", dtype = "bool", shape = (312,))#candidate|3601|(312,)|var|bool
call_3600 = relay.TupleGetItem(func_1540_call(relay.reshape(var_3601.astype('bool'), [312,])), 3)
call_3602 = relay.TupleGetItem(func_1543_call(relay.reshape(var_3601.astype('bool'), [312,])), 3)
output = relay.Tuple([call_3546,bop_3559,call_3566,bop_3572,bop_3592,call_3600,var_3601,])
output2 = relay.Tuple([call_3547,bop_3559,call_3567,bop_3575,bop_3595,call_3602,var_3601,])
func_3607 = relay.Function([var_3571,var_3601,], output)
mod['func_3607'] = func_3607
mod = relay.transform.InferType()(mod)
mutated_mod['func_3607'] = func_3607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3607_call = mutated_mod.get_global_var('func_3607')
var_3609 = relay.var("var_3609", dtype = "bool", shape = (13, 14, 14))#candidate|3609|(13, 14, 14)|var|bool
var_3610 = relay.var("var_3610", dtype = "bool", shape = (312,))#candidate|3610|(312,)|var|bool
call_3608 = func_3607_call(var_3609,var_3610,)
output = call_3608
func_3611 = relay.Function([var_3609,var_3610,], output)
mutated_mod['func_3611'] = func_3611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1302_call = mod.get_global_var('func_1302')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_3670 = func_1302_call()
call_3671 = func_1302_call()
func_1280_call = mod.get_global_var('func_1280')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_3675 = func_1280_call(relay.reshape(call_3670.astype('float64'), [7, 6, 3]))
call_3676 = func_1280_call(relay.reshape(call_3670.astype('float64'), [7, 6, 3]))
output = relay.Tuple([call_3670,call_3675,])
output2 = relay.Tuple([call_3671,call_3676,])
func_3677 = relay.Function([], output)
mod['func_3677'] = func_3677
mod = relay.transform.InferType()(mod)
output = func_3677()
func_3678 = relay.Function([], output)
mutated_mod['func_3678'] = func_3678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1230_call = mutated_mod.get_global_var('func_1230')
call_3741 = func_1229_call()
call_3742 = func_1229_call()
func_2901_call = mod.get_global_var('func_2901')
func_2905_call = mutated_mod.get_global_var('func_2905')
var_3748 = relay.var("var_3748", dtype = "bool", shape = (312,))#candidate|3748|(312,)|var|bool
var_3749 = relay.var("var_3749", dtype = "uint64", shape = (2548,))#candidate|3749|(2548,)|var|uint64
call_3747 = relay.TupleGetItem(func_2901_call(relay.reshape(var_3748.astype('bool'), [312,]), relay.reshape(var_3749.astype('uint64'), [2548,]), ), 0)
call_3750 = relay.TupleGetItem(func_2905_call(relay.reshape(var_3748.astype('bool'), [312,]), relay.reshape(var_3749.astype('uint64'), [2548,]), ), 0)
output = relay.Tuple([call_3741,call_3747,var_3748,var_3749,])
output2 = relay.Tuple([call_3742,call_3750,var_3748,var_3749,])
func_3760 = relay.Function([var_3748,var_3749,], output)
mod['func_3760'] = func_3760
mod = relay.transform.InferType()(mod)
var_3761 = relay.var("var_3761", dtype = "bool", shape = (312,))#candidate|3761|(312,)|var|bool
var_3762 = relay.var("var_3762", dtype = "uint64", shape = (2548,))#candidate|3762|(2548,)|var|uint64
output = func_3760(var_3761,var_3762,)
func_3763 = relay.Function([var_3761,var_3762,], output)
mutated_mod['func_3763'] = func_3763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2259_call = mod.get_global_var('func_2259')
func_2261_call = mutated_mod.get_global_var('func_2261')
call_3795 = func_2259_call()
call_3796 = func_2259_call()
uop_3821 = relay.cosh(call_3795.astype('float64')) # shape=(7, 6, 3)
uop_3823 = relay.cosh(call_3796.astype('float64')) # shape=(7, 6, 3)
output = uop_3821
output2 = uop_3823
func_3837 = relay.Function([], output)
mod['func_3837'] = func_3837
mod = relay.transform.InferType()(mod)
mutated_mod['func_3837'] = func_3837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3837_call = mutated_mod.get_global_var('func_3837')
call_3838 = func_3837_call()
output = call_3838
func_3839 = relay.Function([], output)
mutated_mod['func_3839'] = func_3839
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3840 = relay.var("var_3840", dtype = "float64", shape = (14, 14, 13))#candidate|3840|(14, 14, 13)|var|float64
uop_3841 = relay.sin(var_3840.astype('float64')) # shape=(14, 14, 13)
output = uop_3841
output2 = uop_3841
func_3843 = relay.Function([var_3840,], output)
mod['func_3843'] = func_3843
mod = relay.transform.InferType()(mod)
mutated_mod['func_3843'] = func_3843
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3844 = relay.var("var_3844", dtype = "float64", shape = (14, 14, 13))#candidate|3844|(14, 14, 13)|var|float64
func_3843_call = mutated_mod.get_global_var('func_3843')
call_3845 = func_3843_call(var_3844)
output = call_3845
func_3846 = relay.Function([var_3844], output)
mutated_mod['func_3846'] = func_3846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2945_call = mod.get_global_var('func_2945')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_3859 = relay.TupleGetItem(func_2945_call(), 0)
call_3860 = relay.TupleGetItem(func_2947_call(), 0)
func_1540_call = mod.get_global_var('func_1540')
func_1543_call = mutated_mod.get_global_var('func_1543')
const_3862 = relay.const([True,False,True,False,False,True,False,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,True], dtype = "bool")#candidate|3862|(312,)|const|bool
call_3861 = relay.TupleGetItem(func_1540_call(relay.reshape(const_3862.astype('bool'), [312,])), 1)
call_3863 = relay.TupleGetItem(func_1543_call(relay.reshape(const_3862.astype('bool'), [312,])), 1)
output = relay.Tuple([call_3859,call_3861,const_3862,])
output2 = relay.Tuple([call_3860,call_3863,const_3862,])
func_3866 = relay.Function([], output)
mod['func_3866'] = func_3866
mod = relay.transform.InferType()(mod)
mutated_mod['func_3866'] = func_3866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3866_call = mutated_mod.get_global_var('func_3866')
call_3867 = func_3866_call()
output = call_3867
func_3868 = relay.Function([], output)
mutated_mod['func_3868'] = func_3868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3459_call = mod.get_global_var('func_3459')
func_3461_call = mutated_mod.get_global_var('func_3461')
call_3958 = relay.TupleGetItem(func_3459_call(), 1)
call_3959 = relay.TupleGetItem(func_3461_call(), 1)
var_3986 = relay.var("var_3986", dtype = "uint8", shape = (10, 63))#candidate|3986|(10, 63)|var|uint8
bop_3987 = relay.not_equal(call_3958.astype('bool'), relay.reshape(var_3986.astype('bool'), relay.shape_of(call_3958))) # shape=(10, 63)
bop_3990 = relay.not_equal(call_3959.astype('bool'), relay.reshape(var_3986.astype('bool'), relay.shape_of(call_3959))) # shape=(10, 63)
func_3055_call = mod.get_global_var('func_3055')
func_3059_call = mutated_mod.get_global_var('func_3059')
var_3992 = relay.var("var_3992", dtype = "uint8", shape = (242,))#candidate|3992|(242,)|var|uint8
call_3991 = relay.TupleGetItem(func_3055_call(relay.reshape(var_3992.astype('uint8'), [2, 11, 11]), relay.reshape(var_3992.astype('uint8'), [2, 11, 11]), ), 0)
call_3993 = relay.TupleGetItem(func_3059_call(relay.reshape(var_3992.astype('uint8'), [2, 11, 11]), relay.reshape(var_3992.astype('uint8'), [2, 11, 11]), ), 0)
output = relay.Tuple([bop_3987,call_3991,var_3992,])
output2 = relay.Tuple([bop_3990,call_3993,var_3992,])
func_3999 = relay.Function([var_3986,var_3992,], output)
mod['func_3999'] = func_3999
mod = relay.transform.InferType()(mod)
mutated_mod['func_3999'] = func_3999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3999_call = mutated_mod.get_global_var('func_3999')
var_4001 = relay.var("var_4001", dtype = "uint8", shape = (10, 63))#candidate|4001|(10, 63)|var|uint8
var_4002 = relay.var("var_4002", dtype = "uint8", shape = (242,))#candidate|4002|(242,)|var|uint8
call_4000 = func_3999_call(var_4001,var_4002,)
output = call_4000
func_4003 = relay.Function([var_4001,var_4002,], output)
mutated_mod['func_4003'] = func_4003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2475_call = mod.get_global_var('func_2475')
func_2477_call = mutated_mod.get_global_var('func_2477')
call_4008 = relay.TupleGetItem(func_2475_call(), 0)
call_4009 = relay.TupleGetItem(func_2477_call(), 0)
func_3314_call = mod.get_global_var('func_3314')
func_3317_call = mutated_mod.get_global_var('func_3317')
var_4019 = relay.var("var_4019", dtype = "bool", shape = (312,))#candidate|4019|(312,)|var|bool
const_4020 = relay.const([-4,9,-5,-6,-1,-6,-9,6,9,10,9,3,-3,-10,-4,4,6,-1,6,-9,-4,-9,2,-4,7,-3,3,6,1,-9,-2,5,8,-1,5,-1,-7,-2,8,-9,4,-1,-10,-3,2,-7,6,-4,-10,-9,7,6,8,10,-7,-1,3,-8,-1,-3,2,9,4,2,-10,-2,9,-10,5,-5,9,3,-9,6,-9,-5,10,1,-1,1,4,-8,-9,-1,8,-9,3,-2,1,2,-6,-3,3,4,8,5,7,6,4,4,-7,-1,-3,3,-1,-5,2,-5,5,8,3,7,7,-9,5,2,-6,-10,-8,-2,8,5,-7,-6,2,-6,-7,6,-8,-4,-10,-3,-1,-3,8,7,-5,9,-7,-4,10,3,-5,-3,5,6,-6,-10,-3,-8,-2,-8,-1,1,-3,6,-7,1,7,-4,9,-10,8,4,4,-4,-8,3,1,-7,1,6,-2,9,-10,4,3,-6,3,-6,-1,3,-5,9,10,-10,9,8,-4,-1,-10,-6,10,-5,2,-9,-2,-4,-9,-4,-1,10,2,-1,5,-3,-8,9,10,10,7,-9,-10,-7,10,-9,-6,10,9,8,-5,10,-1,1,2,7,9,-8,1,-9,7,-1,-7,2,-2,9,-3,-1,7,-8,-3,10,-1,4,-6,-2,-1,5,-3,5,9,-5,6,-9,-9,-3,1,6,-4,5,-3,10,-9,-5,3,-8,-7,-7,8,-5,-2,-9,4,7,8,-7,-9,9,3,8,6,-10,-8,8,-10,5,3,-7,1,-4,-3,2,-7,10,4,8,4,5,-3,-2,-5,-9,10,5,7,2,10,4,2,-9,-1,-6,-5,9,-3,-4,-5,-7,6,-8,-1,5,-2,-1,2,-3,-7,8,-2,-1,-9,3,8,10,-2,-9,7,-6,-4,5,7,8,9,-7,4,-7,-6,6,-2,8,-5,9,-2,2,4,-1,-7,6,-7,-8,4,2,6,4,4,-4,-10,10,-9,-7,2,-3,-8,-7,-3,-4,2,7,-5,8,2,10,-6,-5,7,-8,-1,-9,2,-6,3,-4,-7,5,-1,-5,4,8,-8,-4,4,-3,3,-7,-10,-9,-2,-7,5,3,2,10,3,-5,10,5,1,10,10,10,10,-2,-4,1,1,-5,2,-1,3,8,-7,-7,3,-2,-5,-4,2,7,-6,-5,-2,2,-4,-3,-8,10,7,4,5,4,8,4,5,8,-10,8,1,-10,-2,-4,5,8,1,2,7,5,6,-7,-3,-4,-8,-6,4,-6,10,-9,-5,-7,-8,-10,6,2,7,5,-6,2,3,5,-6,6,-2,-1,3,-3,6,7,9,4,-1,-5,-9,-3,6,2,8,10,-4,-8,8,9,3,7,-7,9,9,-7,8,3,-7,-8,2,6,8,2,-3,1,8,1,9,5,1,-8,-3,5,-5,-4,10,10,4,-5,2,-5,7,8,-6,-6,7,6,-7,2,5,-7,-8,4,-1,-10,-8,-5,-3,-1,-6,-5,-2,-6,3,3,8,4,8,-9,-10,4,-6,-3,2,7,2,4,3,5,10,6,7,-3,10,4,10,8,-8,2,-4,1,-1,1,7,-1,-3,4,-9,-7,-10,10,10,4,10,10,-7,1,-6,-1,8,1,-1,3,3,-10,10,2,10,8,6,-6,-8,2,-9,8,-6,-9,5,8,10,2,-10,10,2,1,-5,-2,2,-7,-6,-8,-4,-9,9,-7,-5,-8,3,6,5,3,4,1,7,7,-2,6,-2,-5,2,7,-8,4,-3,7,10,6,-5,-8,-6,6,9,-6,-6,-9,2,6,3,1,2,3,-8,-4,9,-5,-8,-5,-2,-8,-1,-5,-7,4,2,-5,3,-6,1,4,-3,-5,10,10,2,-10,-8,-7,-7,2,-4,6,9,10,4,-9,3,-10,5,-6,-1,-9,1,-2,5,-8,3,8,-5,-3,2,-6,8,-9,9,8,-10,-6,5,9,-2,-10,-10,10,-7,-4,4,6,-7,3,-10,5,1,3,9,-3,9,-7,-4,-2,-9,1,-8,3,4,1,-8,6,-8,-3,-10,-8,-2,8,4,-6,-8,-6,4,2,-5,3,-1,-3,7,6,4,8,2,3,-6,1,-8,2,6,1,9,5,3,9,-5,7,2,7,-1,-2,-1,-5,-9,10,-1,7,3,7,9,5,-4,3,-10,-10,3,2,-6,-1,-1,10,-2,-9,-8,-2,-6,-3,1,-6,8,-6,9,-5,2,-8,6,5,5,-6,2,-2,-7,9,-2,-1,-1,1,4,5,-1,6,-2,-7,7,-2,1,7,8,6,-3,10,5,-3,7,-2,2,-6,-1,1,-6,6,6,5,-3,4,1,9,-5,-4,2,-9,-8,-1,7,8,7,-1,1,-9,-9,10,6,6,6,4,-8,4,-9,4,7,1,7,-6,-10,-3,-5,8,4,5,-4,10,5,7,-7,1,-6,-7,-4,1,6,-2,-9,-4,-6,7,-1,3,8,-9,-4,10,-1,-3,8,1,-10,-6,-5,5,1,-3,-6,-8,6,-1,6,-8,-8,3,5,-9,1,5,8,-7,-2,1,7,-2,7,-3,5,-1,4,-9,10,-5,3,-6,2,10,-6,-1,2,-5,-9,9,2,6,-6,7,5,6,4,1,-7,-1,3,5,-7,4,1,-9,3,-8,-4,-4,9,-7,4,-2,-10,-4,-4,8,-1,7,-6,-2,-6,10,7,9,8,10,5,-2,4,-9,5,2,-2,8,7,-8,2,5,6,7,9,5,-9,10,-3,4,8,5,-6,9,3,-8,-7,-4,4,-6,-1,10,8,-5,-1,-8,-6,-1,6,-8,7,-1,7,-7,9,8,4,9,-10,-2,5,1,3,-6,2,-7,7,3,-5,9,-6,5,-4,4,1,4,8,-1,-9,-9,8,10,-3,-3,5,-6,8,-5,-8,-8,-6,6,2,-4,-2,-2,8,10,-4,4,7,-2,-1,-9,7,7,4,7,9,-4,4,-5,-7,6,10,-1,-9,-1,-2,-9,-2,2,8,-9,-3,-1,-1,9,-3,-9,6,1,-5,-6,-5,-7,1,-2,-1,7,-5,10,7,2,-6,-5,1,10,10,-6,-2,1,-2,-2,3,-8,-2,-4,8,10,-7,10,3,-7,-7,8,-3,3,-4,-10,-6,5,7,-6,-5,2,-3,1,2,1,-10,7,9,-1,-4,-10,-1,10,-6,4,-5,3,-9,-8,-4,-8,-5,8,-6,-7,-9,-1,-3,8,-9,9,9,4,10,-8,-8,-9,-3,8,-3,10,-1,-2,-1,-2,-5,4,6,-1,-9,-1,7,-1,6,-10,6,4,-10,-4,9,3,10,7,7,-2,-6,7,-6,4,10,4,-3,-5,-5,5,-6,5,8,-2,9,-5,-1,-10,1,-9,-9,10,9,8,6,-5,4,8,3,8,6,-9,-8,-3,5,1,-5,8,8,-8,-1,-7,-5,6,-7,-10,-10,3,7,6,-8,-6,9,6,1,-2,-9,7,5,3,-10,8,-3,-7,-5,-2,3,7,-3,-1,-9,9,1,-5,9,-10,-3,8,-9,6,-9,8,-6,6,-8,-8,-10,-6,-2,9,8,-8,-10,-7,-1,-5,-1,2,10,1,-5,-6,5,-7,-2,6,-8,1,9,8,-2,10,-10,3,10,-7,-10,-9,-6,9,5,-7,10,-2,7,8,-5,-3,1,-2,-7,-6,-3,-3,3,6,-9,-2,3,7,2,-1,4,-9,-1,5,-1,6,-8,-4,3,1,-2,-1,5,-7,5,-5,4,-3,-6,-3,-1,-4,10,-2,-5,-6,-5,2,-7,8,-6,3,8,3,6,2,6,6,1,10,-10,5,-3,7,5,-4,-8,-9,2,-10,-9,-6,8,1,-10,7,5,-7,-8,-8,10,2,-8,-4,-4,-9,-9,-7,8,8,7,10,-7,10,-1,-6,2,-1,-2,1,1,8,6,7,-3,4,10,2,4,1,-2,-8,-9,-5,4,-9,-7,-5,4,8,8,-5,-9,6,-9,-9,-5,5,8,5,7,6,-10,-8,-6,-2,-10,3,-4,-3,5,5,-10,6,-2,9,4,5,10,-10,2,3,9,-1,4,-7,7,10,2,-7,-6,8,-6,8,8,2,-2,-10,-10,7,5,4,-5,1,-10,-6,5,-8,6,-6,-8,2,5,2,-5,1,2,-1,-10,8,1,6,-7,6,4,8,2,1,-4,-3,1,-10,-9,-4,3,9,-4,-1,-3,4,9,-9,-2,8,-3,-6,5,9,-6,5,3,-5,-2,9,3,3,5,-3,-2,6,2,-10,-5,2,-2,-3,2,-3,4,10,-7,-1,6,-3,5,-6,9,-5,-6,8,-6,4,-10,-2,1,4,-8,-4,9,5,-7,2,-8,2,5,-4,2,-1,-7,7,-7,-7,3,9,7,5,-6,1,5,-2,5,5,5,10,-1,9,-9,2,8,-4,-9,10,-10,-1,-4,7,-10,7,-8,-5,-5,8,-3,-5,-4,-9,-2,10,9,6,4,-3,8,10,-8,-7,-1,8,-5,-8,-4,4,3,-7,-5,8,-8,6,2,4,-10,4,5,-9,6,3,-2,7,3,10,7,-9,-8,3,-2,-1,-7,6,-8,4,10,-4,-4,-8,7,5,7,-10,-3,-6,-7,7,-9,-6,6,10,5,8,7,6,-7,7,-9,8,10,-4,8,-3,-4,5,8,6,1,5,-4,-3,4,-3,-9,-4,5,-7,1,10,-10,-7,-2,2,-9,-3,-7,-1,6,-3,-5,5,-7,2,4,-5,-1,-1,-5,6,1,8,6,9,5,9,3,1,8,-9,-7,7,7,1,-4,-8,6,10,-5,-6,-5,10,2,-7,5,5,10,-2,-3,-1,-9,9,-4,9,-2,-10,1,2,-3,6,-4,-2,4,-1,6,-3,10,-10,2,6,6,8,7,-3,-8,-10,9,-7,5,-1,10,6,5,-4,7,3,-7,-3,3,-5,-4,-5,7,9,10,3,-3,9,6,6,-5,-9,2,-7,7,-7,-6,-5,2,5,1,1,-8,3,-4,-7,10,3,7,6,-1,4,-3,2,-10,-9,-8,6,-1,-10,-8,5,-5,9,-8,4,7,-9,-5,-8,-2,8,7,6,3,-4,4,-10,-10,9,-3,7,10,-10,1,-2,7,2,5,4,5,10,9,-6,-8,-7,9,1,-2,-6,3,5,-1,-5,-5,6,-7,9,8,-7,2,9,9,-3,-5,3,1,7,5,10,-1,1,-5,-5,8,9,-7,-3,10,-9,-9,2,-10,-1,1,6,6,-9,10,3,-8,-9,-5,-3,-2,-10,5,-8,1,10,1,-3,5,-9,5,-4,6,-10,-10,6,3,3,-7,3,-2,-9,10,9,3,-2,-10,1,-2,9,-2,-5,2,-3,1,-7,8,8,-8,-5,5,-9,-6,2,-1,-1,7,-2,-4,-8,-2,9,-10,7,-4,-1,2,5,-10,5,10,-8,1,-8,6,1,-10,5,-9,-10,-9,-3,10,-6,-7,-4,4,-5,-2,2,-6,6,-5,-8,5,1,-10,4,2,-10,8,5,-6,9,-1,7,-3,-5,-6,-5,2,7,-10,-2,9,-3,-6,1,9,3,8,-1,-5,-9,9,1,10,3,-9,4,7,-4,-6,-6,-2,8,8,-1,6,-1,-4,8,2,-3,8,-6,-5,-7,-7,7,-1,9,6,2,10,7,-8,7,8,-1,-7,3,-9,-4,-3,-6,-10,6,7,-6,-1,-10,-1,1,8,8,-8,9,1,-4,8,1,-4,-2,2,7,-2,-4,-5,2,6,-9,1,2,5,6,-3,-9,-3,8,-8,1,-2,-5,-2,8,-7,2,9,9,9,5,-4,9,-5,5,1,-7,2,8,9,4,7,3,10,-9,-1,1,1,3,6,-1,-5,-10,8,-3,-5,2,-4,9,-1,3,5,7,5,-1,-9,9,-3,-1,8,8,2,7,-9,10,-7,1,-8,-7,10,5,2,-1,5,-6,7,-8,7,3,-6,-5,-5,-2,-7,-7,6,-4,7,3,-1,-7,-4,5,4,7,-2,-10,9,9,2,-2,-7,-9,4,-6,-1,-3,-10,6,8,-4,6,-7,-6,10,2,8,-8,4,9,7,5,-4,-8,-8,4,7,6,4,10,-1,5,2,6,-5,5,4,-2,6,-1,-6,-8,4,7,-7,-1,1,-10,1,-8,3,-8,5,9,10,8,4,1,8,-7,6,5,-6,-10,-3,3,4,-4,3,-2,3,3,6,9,-1,-10,4,6,-10,-5,7,-10,-1,-1,10,-9,5,-4,5,4,-8,5,-10,2,-7,3,-6,4,9,-4,-3,2,5,9,-7,-8,-7,-9,-3,-7,9,-4,-4,4,6,-10,3,6,-10,-7,-6,-4,-7,-10,-5,1,-6,8,-3,-3,2,-5,7,-10,6,4,4,7,-2,-4,-3,-10,7,-10,2,-7,-7,7,6,1,-9,-4,-4,6,7,4,4,2,3,2,-7,10,-3,-8,-8,-1,-5,-2,7,8,10,7,-5,5,-2,3,-6,-3,-4,10,-1,9,-7,8,2,9,7,8,-4,2,-10,5,-2,8,1,-5,10,-2,-6,-2,-6,2,8,9,-3,-10,-8,10,3,-3,6,7,-4,5,-9,8,-8,3,10,-10,3,-5,-4,8,-5,-2,-8,6,-9,-2,8,8,-2,-5,-10,-5,-2,-3,-7,4,1,2,-6,-3,-1,-5,-7,-8,1,3,-6,-6,1,7,-10,10,6,5,2,8,5,6,-6,2,10,3,-4,-6,-8,-2,3,-4,-6,2,-8,-5,6,6,-8,3,6,5,7,-6,6,5,-2], dtype = "uint64")#candidate|4020|(2548,)|const|uint64
call_4018 = relay.TupleGetItem(func_3314_call(relay.reshape(var_4019.astype('bool'), [312,]), relay.reshape(const_4020.astype('uint64'), [2548,]), ), 1)
call_4021 = relay.TupleGetItem(func_3317_call(relay.reshape(var_4019.astype('bool'), [312,]), relay.reshape(const_4020.astype('uint64'), [2548,]), ), 1)
output = relay.Tuple([call_4008,call_4018,var_4019,const_4020,])
output2 = relay.Tuple([call_4009,call_4021,var_4019,const_4020,])
func_4031 = relay.Function([var_4019,], output)
mod['func_4031'] = func_4031
mod = relay.transform.InferType()(mod)
mutated_mod['func_4031'] = func_4031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4032 = relay.var("var_4032", dtype = "bool", shape = (312,))#candidate|4032|(312,)|var|bool
func_4031_call = mutated_mod.get_global_var('func_4031')
call_4033 = func_4031_call(var_4032)
output = call_4033
func_4034 = relay.Function([var_4032], output)
mutated_mod['func_4034'] = func_4034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3380_call = mod.get_global_var('func_3380')
func_3381_call = mutated_mod.get_global_var('func_3381')
call_4044 = relay.TupleGetItem(func_3380_call(), 0)
call_4045 = relay.TupleGetItem(func_3381_call(), 0)
func_2475_call = mod.get_global_var('func_2475')
func_2477_call = mutated_mod.get_global_var('func_2477')
call_4065 = relay.TupleGetItem(func_2475_call(), 0)
call_4066 = relay.TupleGetItem(func_2477_call(), 0)
output = relay.Tuple([call_4044,call_4065,])
output2 = relay.Tuple([call_4045,call_4066,])
func_4086 = relay.Function([], output)
mod['func_4086'] = func_4086
mod = relay.transform.InferType()(mod)
mutated_mod['func_4086'] = func_4086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4086_call = mutated_mod.get_global_var('func_4086')
call_4087 = func_4086_call()
output = call_4087
func_4088 = relay.Function([], output)
mutated_mod['func_4088'] = func_4088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_4089 = relay.TupleGetItem(func_2162_call(), 1)
call_4090 = relay.TupleGetItem(func_2163_call(), 1)
func_1118_call = mod.get_global_var('func_1118')
func_1123_call = mutated_mod.get_global_var('func_1123')
const_4093 = relay.const([-1.332908,9.392005,-3.806177,1.937788,3.217898,8.927815,-8.818287,-5.582071,7.553100,1.138753,-8.221441,-6.671969,4.820643,2.397411,3.160063,-3.997486,0.341239,-9.066463,-4.943021,-1.596536,-8.403652,-8.532125,-5.003367,5.720935,-4.862919,-2.526017,4.903871,-0.191105,-8.241659,8.670682,6.633965,-1.429074,6.078767,-6.376199,-1.047521,8.606948,-8.309252,0.824436,-4.121854,3.596011,7.107584,0.676322,-4.670904,3.382198,2.174875,4.639086,5.245941,1.790121,-9.653832,-5.409779,2.586402,-5.966951,9.308683,-2.947555,-0.130170,-2.366874,9.188930,-1.774269,0.003934,3.150208,-0.219196,5.000435,-2.530678,-8.554982,-0.485434,1.946121,8.685306,-7.643634,-0.780588,-0.864514,-1.628015,-3.311731,6.803085,9.379451,1.516760,4.348057,9.245671,2.404149,-4.405054,2.770096,-1.274197,-6.951762,-7.107246,5.947267,0.619425,4.089340,-4.948353,-3.014993,-0.243456,1.915684,-9.655491,7.807961,7.421581,0.806779,-9.590873,5.307987,1.096134,-4.298682,-7.476410,-6.148890,-1.213163,5.193735,-5.563138,-7.317125,3.344198,-1.983786,-4.058207,-0.081331,-9.113030,0.448628,-4.126086,1.994010,-8.669237,2.326465,3.145052,1.573197,5.517101,3.314333,-1.914157,-5.883200,9.438264,3.871890,-7.688084,3.994150,4.062990,7.421033], dtype = "float64")#candidate|4093|(126,)|const|float64
const_4094 = relay.const([-1,-1,-6,3,-3,-8,3,-10,9,8,7,10,1,1,-3,8,-7,2,-9,1,-8,-2,8,-9,9,6,5,-1,-1,10,3,10,8,-3,7,-8,4,5,4,-10,1,-9,1,3,-4,-10,3,-7,3,8,4,4,-8,2,3,6,-8,-10,-7,-1,-8,-10,-10,-1,-8,3,-7,-2,6,-8,5,-2,-9,10,-5,-8,3,-3,-4,-7,5,6,7,-8,1,-3,-2,-7,-7,-8,9,7,-4,6,5,2,-3,2,4,4,-8,2,-4,-2,8,-5,-3,-9,-1,7,-8,7,-5,3,1,-7,-8,10,7,-3,9,2,-8,-1,7,6,4,9,2,-1,1,3,-8,-9,4,-10,10,9,2,-7,-7,-4,-8,-2,-7,5,-2,7,-3,5,-8,4,-6,6,-2,-6,-7,10,5,6,-7,-10,-1,-1,3,4,10,9,-1,-1,-9,-2,9,-10,5,6,8,1,3,6,7,-7,-9,2,-3,-5,-1,-7,-10,-5,-6,7,9,5,-1,9,-4,4,5,5,8,-10,-6,9,7,-1,7,9,5,1,7,-5,-8,-4,4,3,-9,2,2,-1,7,4,-1,3,8,-3,4,8,6,5,1,-3,10,8,-9,3,-3,10,-1,-10,-7,-6,1,-2,-7,-7,2,-1,-7,4,-7,10,5,4,4,-7,-8,-1,10,-6,-8,-5,4,3,-4,5,-8,-1,-6,-1,2,-9,-4,1,-4,10,1,2,-1,7,4,7,9,-4,-5,-5,-4,7,-7,-1,7,-2,-7,4,-1,-5,4,-6,-2,-10,-9,5,-3,3,-3,2,-6,-8,1,10,4,-7,-9,-3,-5,-9,-10,-10,-9,5,-5,-3,3,3,3,4,-9,6,-3,-9,4,5,-4,-8,-5,-8,2,-3,-3,9,-10,-3,-3,8,-8,6,-7,-5,-5,-6,8,5,3,4,-4,2,-5,4,-4,4,1,3,1,9,-10,10,-8,9,5,-9,-6,5,-6,9,-3,-3,3,2,-5,-3,5,5,10,-5,5,4,-5,-3,7,-2,-5,5,-2,-3,8,-1,1,6,-8,-4,3,8,-6,10,5,6,-8,9,9,-8,-7,-10,5,-10,7,9,2,7,-8,-5,-10,2,-3,-9,-2,9,-5,10,7,6,3,-3,3,-7,8,6,3,3,9,-8,8,-2,8,-5,-1,-8,-6,-1,2,4,10,-5,5,8,-1,-5,-6,4,-9,1,-9,6,2,8,5,-2,-9,-7,7,10,-2,7,-4,-1,9,4,-1,-5,8,-6,3,-8,-7,1,-10,1,10,9,-10,-8,2,-7,2,7,5,-3,-1,5,5,1,-8,9,-2,-1,-9,-1,3,-6,-2,-5,6,7,8,-5,-7,10,9,-1,-8,-3,-3,1,-2,9,10,1,1,-3,-8,-1,3,10,1,-2,6,-9,8,3,7,-6,-5,2,2,4,-6,-9,-8,-2,10,9,9,-3,6,-9,-9,9,-1,-9,-10,7,7,4,2,-4,10,-10,-3,-8,-10,-1,3,10,-5,-8,-1,-9,-10,-6,1,-7,-5,-9,-10,7,-5,9,-10,-3,10,-10,-6,-1,-1,9,7,2,4,10,2,4,-6,7,-3,-1,-2,4,-9,4,-4,-4,10,-4,-1,8,2,3,6,3,10,2,4,-10,3,-3,-9,-9,-4,3,7,-9,3,6,1,9,-5,3,-9,2,-9,10,-3,6,1,-3,9,9,5,3,7,7,-3,1,5,5,-8,3,1,9,9,4,7,1,-3,5,-6,-1,-3,2,-4,4,-9,5,6,-6,9,2,5,5,-8,7,-5,7,-1,-7,-6,-10,10,9,-1,-1,-6,4,6,1,-2,-10,-7,6,-5,-6,6,10,-9,-1,5,-1,-5,-2,6,7,-2,-6,3,10,7,-1,-9,-10,-9,1,3,4,-8,-8,-2,4,-1,4,4,-4,-7,5,-5,6,-6,-9,-8,-8,9,-1,-3,6,7,8,3,4,8,-8,6,8,-9,-4,9,-3,10,-9,9,6,5,-9,7,-8,7,-7,-10,-7,-9,-7,-3,-7,4,-5,-1,-3,5,7,-7,7,3,-7,7,3,2,-6,-2,-9,3,3,5,2,-8,-1,4,-7,2,-9,5,-8,-3,6,-1,4,-9,8,3,-1,9,-3,4,9,3,8,1,9,-4,1,-9,9,-4,-9,7,7,6,8,-2,-7,-6,-5,10,-2,8,-10,-10,5,6,-10,-6,10,7,-3,4,3,4,6,1,-10,1,8,-1,-3,8,1,-2,-7,8,9,-9,-1,-10,7,-4,4,9,5,6,-4,-3,10,7,-6,9,-6,-8,1,3,-3,5,2,-1,1,-7,4,3,7,1,-2,9,-9,6,-4,8,-7,5,6,-6,-3,-5,5,1,7,-3,4,-8,8,-1,-4,-2,-3,-10,-2,9,9,4,-3,6,-9,-10,3,-4,-3,-3,-5,7,3,6,-4,-3,-8,-9,-2,-2,5,3,-1,9,3,10,-9,5,-4,7,5,-5,7,-5,-8,-1,8,-3,1,2,5,2,-1,-8,-8,-5,5,8,-3,-4,-10,5,6,-7,-1,-1,-1,2,9,-6,-5,10,10,-3,-10,5,-1,-8,-2,6,-3,10,9,5,2,-5,-4,-6,-2,9,-5,4,9,-4,8,-2,6,-3,6,5,1,4,4,10,-10,-1,-5,10,8,5,-4,7,9,-7,9,-2,1,-6,7,-10,-6,1,-8,7,6,2,-9,2,-8,-2,10,-9,-1,5,-10,-4,-7,-10,-5,-9,-9,9,-1,-5,-9,-7,-2,-9,9,2,8,-8,8,-8,-6,-1,9,2,-2,-8,-3,-1,1,-9,-1,-2,6,4,9,-6,10,-2,9,10,1,4,4,1,5,-10,3,-7,-3,3,-4,8,8,6,4,-1,-5,10,-10,9,-5,4,-10,-8,-4,6,2,6,6,7,8,-6,5,-4,-1,2,9,-5,-9,-1,-6,2,3,-9,-10], dtype = "uint16")#candidate|4094|(1120,)|const|uint16
var_4095 = relay.var("var_4095", dtype = "bool", shape = (312,))#candidate|4095|(312,)|var|bool
var_4096 = relay.var("var_4096", dtype = "uint64", shape = (2548,))#candidate|4096|(2548,)|var|uint64
call_4092 = relay.TupleGetItem(func_1118_call(relay.reshape(const_4093.astype('float64'), [7, 6, 3]), relay.reshape(const_4094.astype('uint16'), [1120,]), relay.reshape(var_4095.astype('bool'), [312, 1]), relay.reshape(var_4096.astype('uint64'), [13, 14, 14]), ), 8)
call_4097 = relay.TupleGetItem(func_1123_call(relay.reshape(const_4093.astype('float64'), [7, 6, 3]), relay.reshape(const_4094.astype('uint16'), [1120,]), relay.reshape(var_4095.astype('bool'), [312, 1]), relay.reshape(var_4096.astype('uint64'), [13, 14, 14]), ), 8)
func_231_call = mod.get_global_var('func_231')
func_236_call = mutated_mod.get_global_var('func_236')
call_4109 = relay.TupleGetItem(func_231_call(relay.reshape(var_4095.astype('bool'), [13, 8, 3]), relay.reshape(var_4095.astype('bool'), [13, 8, 3]), relay.reshape(call_4092.astype('uint64'), [2548,]), ), 1)
call_4110 = relay.TupleGetItem(func_236_call(relay.reshape(var_4095.astype('bool'), [13, 8, 3]), relay.reshape(var_4095.astype('bool'), [13, 8, 3]), relay.reshape(call_4092.astype('uint64'), [2548,]), ), 1)
func_3277_call = mod.get_global_var('func_3277')
func_3282_call = mutated_mod.get_global_var('func_3282')
var_4128 = relay.var("var_4128", dtype = "uint16", shape = ())#candidate|4128|()|var|uint16
call_4127 = relay.TupleGetItem(func_3277_call(relay.reshape(var_4128.astype('uint16'), []), relay.reshape(const_4094.astype('uint16'), [1120,]), relay.reshape(var_4095.astype('bool'), [312,]), relay.reshape(call_4092.astype('uint64'), [2548,]), ), 5)
call_4129 = relay.TupleGetItem(func_3282_call(relay.reshape(var_4128.astype('uint16'), []), relay.reshape(const_4094.astype('uint16'), [1120,]), relay.reshape(var_4095.astype('bool'), [312,]), relay.reshape(call_4092.astype('uint64'), [2548,]), ), 5)
func_335_call = mod.get_global_var('func_335')
func_338_call = mutated_mod.get_global_var('func_338')
const_4135 = relay.const([-6,-2,1,4,3,3,4,5,-9,-6,7,-2,4,9,-2,9,-7,-1,-3,8,-9,-5,-4,8,-1,8,2,-4,9,10,-10,-9,2,-5,-7,10,-6,10,-5,-5,-5,-4,-3,5,-2,3,-6,8,4,-2,6,10,-6,2,-9,2,2,-4,6,4,6,9,10,9,-1,-7,-4,-9,-7,6,9,-3,3,5,7,-7,-7,-5,4,-4,-7,-1,8,-3,-2,3,6,2,1,1,7,1,6,4,9,6,9,-9,9,1,3,-5,-10,-10,-6,-9,9,-8,3,7,-10,-10,-2,5,10,-3,10,2,6,-10,-1,5,6,-6,-7,-3,-10,7,1,-3,10,4,5,9,-7,4,-8,1,4,5,2,10,8,-4,-1,-9,-5,10,-8,3,-10,5,-8,1,4,5,1,-10,7,7,-10,-9,-9,7,10,3,7,-7,4,8,4,-6,3,6,-9,-7,9,-4,-5,-6,-10,-4,-8,-3,6,2,9,7,-5,1,3,-1,-4,-1,-5,-3,-5,-4,-7,-7,10,-5,9,-10,-2,-6,-9,-9,3,1,6,-5,-2,-6,-5,1,4,4,-9,-8], dtype = "uint64")#candidate|4135|(220,)|const|uint64
call_4134 = relay.TupleGetItem(func_335_call(relay.reshape(const_4135.astype('uint64'), [2, 11, 10]), relay.reshape(const_4135.astype('uint64'), [2, 11, 10]), ), 1)
call_4136 = relay.TupleGetItem(func_338_call(relay.reshape(const_4135.astype('uint64'), [2, 11, 10]), relay.reshape(const_4135.astype('uint64'), [2, 11, 10]), ), 1)
func_1953_call = mod.get_global_var('func_1953')
func_1955_call = mutated_mod.get_global_var('func_1955')
const_4139 = relay.const([[-0.485415,-5.669219,-3.456376,-6.367508,8.537573,3.887080,5.181930,-0.821407,9.975058,-3.106144,7.781253,4.682839,-9.419652,3.364136,2.093624,-8.387992,-6.498328,-9.791044,6.410435,5.679461,-4.915973,9.402823,-7.720980,0.323897,1.019890,-8.128149,-9.458332,-4.342627,-0.643774,-0.927918,2.906638,9.006621,1.023991,-3.024799,-9.969602,-3.645844,-7.746031,-9.668678,4.486527,-1.465229,-4.988023,6.547487,0.966358,3.116678,-1.481303,3.140752,-1.124581,9.216970,-2.471928,-5.996017,8.044323,2.005285,-2.626794,0.506499,7.211037,1.397988,-3.670692,0.761766,-7.100144,0.534157,-3.282626,-1.656639,0.756943,-1.872505,3.363381,7.205268,0.541824,-6.986108,-3.388570,-0.215811,8.329319,4.559069,-4.820713,1.553605,5.879929,7.587947,7.046503,-1.280177,5.162934,-0.306441,3.977756,-9.079611,1.279911,5.796533,-5.958861,0.830021,9.203109,0.687112,3.952641,-9.376686,2.108697,-9.914720,6.447932,1.115292,-0.001945,7.432258,6.495773,-5.057271,-3.511345,7.882937,4.242721,-2.273279,9.910612,6.580733,6.895481,-8.520550,5.191227,3.693115,1.441375,-4.302089,0.517195,-6.177226,5.116799,2.061859,-8.211740,-4.364753,0.916142,-7.619946,-9.395000,-7.258455,4.085009,-4.393766,9.399399,5.673467,-6.685704,-7.618751,6.940163,6.304789,-8.732645,-4.976403,8.541246,-6.561150,0.627509,3.496357,-6.313925,7.637060,-5.176539,5.653619,-5.386204,6.281353,-0.738765,-6.189518,-0.723209,-7.159899,-2.234206,5.536303,8.314875,-0.181951,-0.952196,-3.748210,7.631702,-1.806306,4.075242,-7.611171,-1.294005,-6.318105,4.446543,-9.336851,-9.711688,-4.101247,4.637738,-2.969018,-2.467976,8.954705,3.224104,8.004610,-5.132135,-5.799624,8.521194,5.766334,-4.178972,-1.804722,-8.663070,3.010412,3.776754,6.078665,2.532635,0.726136,-2.107730,-9.734578,-9.119068,2.116285,0.982974,-0.995164,-2.133964,-7.445299,-7.349618,-8.560361,3.775277,5.017363,-5.778518,4.645835,0.497460,0.523968,-7.295923,3.729988,4.442086,7.031560,-3.014195,-6.115010,5.332246,-0.896904,9.101903,-8.013851,-2.976488,-9.108448,-8.375796,5.626433,-9.702843,6.328029,-8.642571,-4.150575,5.923807,1.480475,0.243088,-7.094203,-2.117753,-9.065596,-7.493134,7.493470,8.377870,7.719944,1.572536,2.980024,8.288069,-0.525837,5.730806,2.911051,-9.113946,-9.556741,-4.025973,-8.580453,0.466151,6.079865,0.072588,4.701105,-6.116760,-0.914542,9.340611,7.664818]], dtype = "float32")#candidate|4139|(1, 240)|const|float32
call_4138 = func_1953_call(relay.reshape(const_4139.astype('float32'), [16, 1, 15]))
call_4140 = func_1953_call(relay.reshape(const_4139.astype('float32'), [16, 1, 15]))
output = relay.Tuple([call_4089,call_4092,const_4093,const_4094,var_4095,var_4096,call_4109,call_4127,var_4128,call_4134,const_4135,call_4138,const_4139,])
output2 = relay.Tuple([call_4090,call_4097,const_4093,const_4094,var_4095,var_4096,call_4110,call_4129,var_4128,call_4136,const_4135,call_4140,const_4139,])
func_4142 = relay.Function([var_4095,var_4096,var_4128,], output)
mod['func_4142'] = func_4142
mod = relay.transform.InferType()(mod)
var_4143 = relay.var("var_4143", dtype = "bool", shape = (312,))#candidate|4143|(312,)|var|bool
var_4144 = relay.var("var_4144", dtype = "uint64", shape = (2548,))#candidate|4144|(2548,)|var|uint64
var_4145 = relay.var("var_4145", dtype = "uint16", shape = ())#candidate|4145|()|var|uint16
output = func_4142(var_4143,var_4144,var_4145,)
func_4146 = relay.Function([var_4143,var_4144,var_4145,], output)
mutated_mod['func_4146'] = func_4146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_4151 = func_3837_call()
call_4152 = func_3837_call()
output = call_4151
output2 = call_4152
func_4154 = relay.Function([], output)
mod['func_4154'] = func_4154
mod = relay.transform.InferType()(mod)
output = func_4154()
func_4155 = relay.Function([], output)
mutated_mod['func_4155'] = func_4155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3459_call = mod.get_global_var('func_3459')
func_3461_call = mutated_mod.get_global_var('func_3461')
call_4169 = relay.TupleGetItem(func_3459_call(), 1)
call_4170 = relay.TupleGetItem(func_3461_call(), 1)
func_3016_call = mod.get_global_var('func_3016')
func_3018_call = mutated_mod.get_global_var('func_3018')
var_4175 = relay.var("var_4175", dtype = "bool", shape = (7, 364))#candidate|4175|(7, 364)|var|bool
call_4174 = relay.TupleGetItem(func_3016_call(relay.reshape(var_4175.astype('bool'), [13, 14, 14])), 0)
call_4176 = relay.TupleGetItem(func_3018_call(relay.reshape(var_4175.astype('bool'), [13, 14, 14])), 0)
output = relay.Tuple([call_4169,call_4174,var_4175,])
output2 = relay.Tuple([call_4170,call_4176,var_4175,])
func_4183 = relay.Function([var_4175,], output)
mod['func_4183'] = func_4183
mod = relay.transform.InferType()(mod)
mutated_mod['func_4183'] = func_4183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4184 = relay.var("var_4184", dtype = "bool", shape = (7, 364))#candidate|4184|(7, 364)|var|bool
func_4183_call = mutated_mod.get_global_var('func_4183')
call_4185 = func_4183_call(var_4184)
output = call_4185
func_4186 = relay.Function([var_4184], output)
mutated_mod['func_4186'] = func_4186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4154_call = mod.get_global_var('func_4154')
func_4155_call = mutated_mod.get_global_var('func_4155')
call_4311 = func_4154_call()
call_4312 = func_4154_call()
output = relay.Tuple([call_4311,])
output2 = relay.Tuple([call_4312,])
func_4315 = relay.Function([], output)
mod['func_4315'] = func_4315
mod = relay.transform.InferType()(mod)
mutated_mod['func_4315'] = func_4315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4315_call = mutated_mod.get_global_var('func_4315')
call_4316 = func_4315_call()
output = call_4316
func_4317 = relay.Function([], output)
mutated_mod['func_4317'] = func_4317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1809_call = mod.get_global_var('func_1809')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_4323 = relay.TupleGetItem(func_1809_call(), 3)
call_4324 = relay.TupleGetItem(func_1810_call(), 3)
output = call_4323
output2 = call_4324
func_4337 = relay.Function([], output)
mod['func_4337'] = func_4337
mod = relay.transform.InferType()(mod)
output = func_4337()
func_4338 = relay.Function([], output)
mutated_mod['func_4338'] = func_4338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1809_call = mod.get_global_var('func_1809')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_4365 = relay.TupleGetItem(func_1809_call(), 4)
call_4366 = relay.TupleGetItem(func_1810_call(), 4)
func_4154_call = mod.get_global_var('func_4154')
func_4155_call = mutated_mod.get_global_var('func_4155')
call_4369 = func_4154_call()
call_4370 = func_4154_call()
func_1302_call = mod.get_global_var('func_1302')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_4376 = func_1302_call()
call_4377 = func_1302_call()
func_3016_call = mod.get_global_var('func_3016')
func_3018_call = mutated_mod.get_global_var('func_3018')
const_4385 = relay.const([True,True,False,False,False,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,True,True,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,True,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False], dtype = "bool")#candidate|4385|(2548,)|const|bool
call_4384 = relay.TupleGetItem(func_3016_call(relay.reshape(const_4385.astype('bool'), [13, 14, 14])), 0)
call_4386 = relay.TupleGetItem(func_3018_call(relay.reshape(const_4385.astype('bool'), [13, 14, 14])), 0)
var_4396 = relay.var("var_4396", dtype = "bool", shape = (2548,))#candidate|4396|(2548,)|var|bool
bop_4397 = relay.bitwise_and(const_4385.astype('uint32'), relay.reshape(var_4396.astype('uint32'), relay.shape_of(const_4385))) # shape=(2548,)
output = relay.Tuple([call_4365,call_4369,call_4376,call_4384,bop_4397,])
output2 = relay.Tuple([call_4366,call_4370,call_4377,call_4386,bop_4397,])
func_4400 = relay.Function([var_4396,], output)
mod['func_4400'] = func_4400
mod = relay.transform.InferType()(mod)
mutated_mod['func_4400'] = func_4400
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4401 = relay.var("var_4401", dtype = "bool", shape = (2548,))#candidate|4401|(2548,)|var|bool
func_4400_call = mutated_mod.get_global_var('func_4400')
call_4402 = func_4400_call(var_4401)
output = call_4402
func_4403 = relay.Function([var_4401], output)
mutated_mod['func_4403'] = func_4403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2187_call = mod.get_global_var('func_2187')
func_2188_call = mutated_mod.get_global_var('func_2188')
call_4444 = relay.TupleGetItem(func_2187_call(), 0)
call_4445 = relay.TupleGetItem(func_2188_call(), 0)
func_2218_call = mod.get_global_var('func_2218')
func_2220_call = mutated_mod.get_global_var('func_2220')
call_4446 = func_2218_call()
call_4447 = func_2218_call()
output = relay.Tuple([call_4444,call_4446,])
output2 = relay.Tuple([call_4445,call_4447,])
func_4454 = relay.Function([], output)
mod['func_4454'] = func_4454
mod = relay.transform.InferType()(mod)
mutated_mod['func_4454'] = func_4454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4454_call = mutated_mod.get_global_var('func_4454')
call_4455 = func_4454_call()
output = call_4455
func_4456 = relay.Function([], output)
mutated_mod['func_4456'] = func_4456
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4460 = relay.var("var_4460", dtype = "float32", shape = (8, 3, 11))#candidate|4460|(8, 3, 11)|var|float32
uop_4461 = relay.rsqrt(var_4460.astype('float32')) # shape=(8, 3, 11)
func_3760_call = mod.get_global_var('func_3760')
func_3763_call = mutated_mod.get_global_var('func_3763')
var_4472 = relay.var("var_4472", dtype = "bool", shape = (312,))#candidate|4472|(312,)|var|bool
const_4473 = relay.const([-10,2,-5,6,-7,5,-4,-8,1,-2,-1,5,9,-9,-9,-9,-3,-4,-8,-4,-9,-6,3,9,4,-5,10,-2,9,5,4,-6,3,-7,-8,9,-1,4,10,8,-5,-10,-4,-5,4,10,2,-6,3,9,4,3,-2,9,-10,-6,1,-1,8,7,-6,1,10,4,-1,-9,10,2,8,-5,-2,3,-7,-10,10,1,4,-3,-1,2,-9,-9,-4,10,6,-10,6,-2,10,10,-9,8,-4,10,8,-9,2,6,3,-5,9,7,-1,-8,3,4,10,-7,-3,-2,-8,7,-9,3,-9,10,8,-1,6,-1,-9,3,7,6,7,-10,-8,-5,2,-10,-8,8,6,6,-1,3,4,-9,-5,10,4,-7,10,1,9,2,-10,5,2,-9,10,10,7,-2,6,-4,-3,3,2,5,3,-9,10,8,7,2,1,-9,3,1,-7,-10,-8,2,-6,1,6,2,-8,-7,-10,-10,1,1,5,5,-9,-2,9,8,3,-3,-1,-5,7,-4,1,10,-7,7,-5,4,9,-2,10,-2,-9,-1,1,-1,-8,-9,-9,10,-10,-8,9,-8,9,-7,-9,-3,-5,3,10,8,9,4,6,5,-1,10,6,10,-7,-6,7,7,4,2,3,4,7,1,-4,-9,9,6,-7,-3,-5,-3,8,6,9,8,10,-6,-1,-10,3,-9,9,10,-4,-2,-3,3,4,-7,-9,-7,-8,6,9,-4,7,5,-1,-4,1,5,-1,-7,-10,-8,-9,8,7,7,-3,-10,-4,-8,1,1,-8,-6,-7,-1,-5,-5,-5,2,-10,2,9,2,7,2,2,2,2,-8,-10,5,10,-2,7,-9,-4,-8,10,-8,-2,7,-4,3,-6,4,-9,-1,-2,-4,-8,4,3,-5,-4,2,-5,-9,7,-4,2,-8,10,-2,2,-9,-8,-4,-9,-3,-4,-10,-3,10,2,2,-4,6,10,6,3,-4,-10,-1,-7,-1,-1,-2,1,-6,-5,-8,-1,-5,-4,6,-8,-8,1,9,-8,-1,-3,-7,4,-7,6,-8,-10,9,-3,9,7,2,-1,-6,-1,-9,-9,-7,10,9,-7,-2,-3,-1,7,-8,1,10,10,10,2,-4,-6,1,-6,3,-1,-2,-9,1,-5,10,-10,8,8,-9,-1,-9,-5,4,-3,5,-5,8,-2,-8,7,-4,10,-5,2,-9,1,2,10,-9,5,9,-3,-4,6,-1,-1,10,-7,-10,-2,-3,-8,-9,1,5,2,-7,-1,-9,2,1,-6,-5,-7,3,-5,-2,-3,3,-1,-1,-2,-9,7,1,-9,-5,3,-10,-6,-2,3,-5,-7,8,7,-2,-8,-2,-8,-4,-7,-3,-8,3,-8,-6,2,-7,10,-8,5,-5,-8,7,4,-4,10,-1,4,6,-2,-5,4,1,7,2,-9,4,8,5,5,-2,9,-7,9,5,4,4,-9,-5,-4,10,-7,-1,8,-6,-7,9,-2,-9,8,10,5,3,9,-2,-4,-8,-7,-6,7,7,10,10,-10,1,-4,-3,3,4,-1,-4,-7,6,3,8,-3,4,8,-3,4,10,5,6,9,-9,-6,-5,-7,-6,4,10,6,-1,9,-7,-8,-10,2,10,-6,2,-5,-5,-10,3,-5,-1,9,9,6,1,-5,-6,7,-6,8,-6,-7,-3,2,-10,1,9,-3,-9,4,-2,1,6,7,-2,10,-6,-1,-3,-9,1,4,1,8,-6,-10,-1,-6,8,1,-8,9,7,5,4,-4,-3,7,-6,3,-9,-8,-3,-9,10,2,10,-2,-5,10,-10,-6,-3,-6,-8,-8,-4,-9,-3,-10,8,-10,7,-9,8,2,2,-10,1,-3,-7,-7,-9,1,-7,-6,-5,5,-8,-2,4,4,-10,-10,-10,-1,3,-1,-4,-4,-3,6,-7,-8,7,-1,4,6,2,6,-8,1,2,-4,4,7,-10,-5,-6,-4,-5,-4,2,4,6,6,-6,7,-10,-6,1,-6,-8,8,6,-7,-6,-9,-10,2,2,2,-6,-7,2,-3,-7,-3,-9,-9,4,-5,6,9,-6,4,1,-7,-8,3,8,-2,6,9,8,-2,3,-3,9,7,-4,-5,-10,10,-7,-6,1,-9,5,4,-6,-6,-2,-8,-10,10,7,-7,-8,-2,1,9,6,-9,-5,-4,9,-10,6,4,2,-2,-9,-3,-7,1,3,-10,-9,-1,3,-5,-5,3,-2,1,-1,2,-1,7,10,-6,10,-3,8,-3,-1,-3,-5,2,-3,1,4,-4,-8,3,-6,10,-6,5,1,4,8,8,4,-3,3,-1,-5,1,3,-1,2,7,6,-3,9,9,-7,-5,9,9,9,-8,-4,-8,-3,-8,-2,-5,6,-5,9,6,-1,6,6,1,-5,2,7,8,8,-5,2,9,9,-5,-8,-4,-2,8,-8,-3,-9,4,-4,-4,-10,-5,8,-10,-7,-5,4,3,-2,3,-1,2,-1,4,1,-10,-8,3,8,-4,6,10,-1,-7,-4,-2,7,3,-2,-3,-6,4,-7,-1,-8,-10,6,-6,10,1,-4,-9,7,-8,2,2,6,3,2,-8,8,-5,-5,3,-6,1,7,10,-5,-5,-4,6,-10,3,2,-2,-9,-9,2,2,-8,8,7,1,8,1,-10,2,-8,4,8,2,-5,-4,3,-2,10,-6,8,1,3,10,10,5,-6,-8,3,2,1,4,1,-6,-6,10,-2,-3,-2,8,4,-10,10,-5,-5,2,4,-1,2,7,-10,5,7,-6,-9,-3,-8,3,8,-3,-8,9,1,-6,7,-4,-10,8,-6,-6,-9,-8,-1,-4,-3,-2,-2,-1,-2,9,-10,-8,-1,-8,1,2,5,6,2,-3,-5,-6,-7,-1,3,8,-4,-6,3,1,-9,3,-4,-10,-6,-3,-7,9,5,-2,-1,-6,9,9,-5,5,5,8,6,8,-10,-5,2,-2,8,-9,-6,-6,-8,-6,-7,-7,-10,2,2,10,-4,8,10,5,5,9,-1,-8,-9,-2,-7,9,-3,-3,-2,6,7,2,-7,7,2,-5,10,2,10,-8,-4,-6,7,-3,-2,4,6,-7,4,-4,10,3,-5,-1,-10,3,5,10,-7,-10,-3,-8,-2,-9,9,-7,5,10,7,-4,-2,1,-4,-9,4,-10,6,6,-5,6,-10,-4,5,4,7,8,-3,-7,10,8,5,-2,9,1,-5,-7,-2,-2,5,6,2,-1,3,-1,-4,-8,10,2,-8,-1,-7,-9,-9,5,-5,-6,-5,3,7,-10,5,-9,-7,-2,1,-9,-4,-9,-9,9,-5,2,-3,7,-7,10,4,6,-10,6,4,2,-4,-2,-5,-7,-7,-2,2,-2,-6,-2,10,2,6,1,-1,-1,6,-6,-6,3,1,-6,7,-1,-10,3,-9,-2,-3,7,6,9,-3,4,9,3,-7,3,8,-6,7,8,6,-2,-3,-3,9,4,10,-9,7,10,-4,-7,7,1,-7,-9,-1,2,-2,-4,10,10,7,-10,5,10,3,2,-3,1,3,2,10,9,-10,2,-2,9,-4,-4,1,8,3,3,4,5,5,-3,-1,9,-7,9,-3,-9,-9,8,8,1,6,7,-7,7,-10,-9,3,10,8,1,10,-8,4,-9,2,6,-4,-9,-5,-7,1,6,3,-5,-7,-2,-6,-6,-8,7,-6,9,-5,-3,9,7,-5,3,1,8,-4,-5,-1,-5,7,-1,2,-3,10,-9,-7,10,-1,1,-1,-10,-9,7,9,1,3,-8,-3,4,-8,-4,-9,-8,-7,4,8,-5,2,-1,4,-6,-3,2,7,1,8,4,-10,-10,1,-5,10,10,-1,-1,-2,-4,3,-10,1,-10,7,-8,6,3,2,8,9,-3,6,7,-3,2,-8,-10,6,-10,2,9,6,5,2,-1,1,3,-10,-7,3,10,-4,2,8,2,-2,10,-6,7,10,1,1,-1,6,3,7,-1,-2,8,7,-2,4,-6,-6,-8,-10,-8,-3,-4,-4,8,-2,2,-6,-6,2,-1,-9,-7,-1,-1,-4,-3,-5,7,6,3,-6,2,7,4,-5,8,-3,8,1,-6,6,3,-6,5,6,8,4,4,5,3,-5,3,-7,4,8,-3,9,10,-6,5,-2,6,4,-7,7,10,-2,-2,4,7,5,-8,5,10,-2,5,-10,10,-10,3,-9,-1,-6,10,-8,3,4,-10,9,2,4,5,-6,-10,-4,-4,-7,-1,-8,2,7,-1,-7,2,10,-9,-1,2,1,-6,6,7,-6,6,-1,-2,-6,-9,-6,2,7,2,-8,-7,-6,-4,-4,-6,9,-4,4,7,1,-6,-1,2,-10,5,-9,-6,7,9,-1,2,9,-8,-4,-5,-3,1,-1,-1,7,8,-2,3,4,-1,-7,3,-10,10,-8,-10,-8,-6,-4,-10,6,-1,4,-8,-5,3,3,-7,9,-1,-4,9,-2,1,-3,-10,-10,-5,-4,1,3,1,-2,-1,6,1,2,2,-4,-3,5,-5,-4,-7,3,-8,-4,2,-5,-10,-4,-3,-10,2,9,2,-9,-6,5,-1,-3,-5,-6,-4,10,4,-4,2,-1,9,-8,-3,-8,-9,-4,3,7,-6,-7,-6,6,-4,-10,-6,9,-2,-8,3,3,1,10,7,-4,-4,3,1,-1,-10,9,1,-3,4,-7,-7,9,-10,-2,10,-9,-8,-4,2,3,-8,9,-10,-4,2,-1,4,7,-3,-2,-6,5,5,-2,-7,-2,7,4,-2,2,-10,4,-5,9,-9,-8,3,-8,5,9,7,6,-1,-1,-9,-10,8,-4,-5,10,1,9,-3,4,1,1,3,1,-8,-10,7,-7,-1,5,-1,2,-5,9,9,8,-5,7,-6,5,-3,2,-4,-3,9,3,-5,5,-5,7,-8,-6,-4,2,-3,4,1,-6,-5,1,8,-4,-8,-2,3,-1,-6,3,-1,-2,3,10,9,10,4,-8,3,5,2,6,-9,-6,3,-9,-4,9,-4,-3,7,-9,-3,3,-8,1,8,-3,4,5,9,-4,-2,2,3,1,9,3,4,1,-6,1,-10,4,6,-3,-1,9,7,-1,9,2,-1,-3,1,-6,6,3,-4,2,-4,4,-10,-1,6,-9,4,-4,-6,-10,3,-4,-7,-7,-3,10,1,-5,7,-10,-1,-10,2,-10,3,5,-9,-2,-7,-7,7,-10,-3,1,-4,-5,-10,10,8,-10,3,4,-6,10,7,-8,7,3,6,10,-5,-4,9,-6,-7,10,2,2,2,5,-1,4,-10,8,2,-7,2,-3,7,-9,-6,2,1,-9,-10,-4,7,9,-8,-5,-4,9,-2,-6,-2,3,2,-5,1,-7,8,2,-1,3,9,-10,-8,10,1,-1,10,10,-1,-8,1,-3,-9,4,-7,9,-5,-10,8,-7,5,2,3,-1,9,7,5,6,-7,3,-7,2,1,-7,2,-10,3,4,5,10,-3,3,7,3,10,-7,-6,1,1,-8,5,9,1,-3,9,10,2,-1,3,-2,7,3,8,-3,-5,1,-9,5,-4,-8,-4,4,-4,-7,-8,-1,8,-10,-10,-7,-6,-3,9,-6,-8,3,-3,-2,-1,-5,7,3,1,-4,-8,6,-9,8,-8,-10,-9,2,9,10,-10,6,2,-3,-3,-4,9,-5,-8,8,-7,2,-1,-1,-8,-8,-7,-6,-6,-2,7,9,5,-6,-7,8,-3,4,-7,-2,-8,-3,-9,-6,7,3,3,10,8,-10,10,-10,8,-7,-1,-10,-1,7,-4,-4,-8,-7,-9,-6,2,-1,-4,3,9,9,-1,10,-5,-2,10,10,-3,9,-3,-8,-3,-7,-1,10,-2,-1,-1,-5,-10,5,-4,-5,3,10,9,3,8,8,2,-1,-9,7,3,-6,2,-2,8,5,1,9,3,3,-2,3,1,10,4,1,1,2,-9,-10,-2,-8,10,7,1,-5,3,9,-1,5,6,5,-3,9,-1,-9,-5,8,-8,1,4,-2,-5,2,-10,1,5,1,3,10,-2,7,-7,3,9,-5,-9,10,8,9,-1,3,-6,-1,-8,-3,1,-8,-6,-4,-6,-5,-3,-10,-9,10,7,5,10,2,-9,8,6,8,8,4,8,10,8,-6,-7,8,-10,9,9,5,8,-9,1,6,-7,3,4,1,-5,9,-3,-8,-10,-10,10,-8,-1,3,-4,9,-9,-9,10,-5,8,7,-10,2,-3,10,10,-2,-5,-2,3,-2,-8,7,2,-10,-5,10,3,-7,8,2,7,10,-10,-1,-4,7,-4,9,-6,6,10,-1,2,1,-7,-10,6,6,-10,9,10,7,10,-1,7,-8,-5,-9,-8,9,-3,8,6,-5,1,-2,10,6,-7,6,6,2,4,-2,-4,-8,7,6,9,2,7,-2,7,-7,-7,-10,-7,-6,-6,5,-9,-4,-8,10,4,-7,7,-8,-9,9,-7,1,-3,-9,7,-8,-5,-3,-5,-10,6,-1,-9,9,5,-4,-9,8,-3,-1,-1,7,3,8,-2,8,8,-2,8,4,9,8,4,10,-5,8,-1,-3,-2,4,-1,-1,-4,3,4,7,-5,9,-1,7,-3,-1,9,-1,-6,6,-9,-4,1,7,5,7,9,1,9,5,6,-6,-1,-7,-4,-4,-9,-8,-6,-6,-8,-4,10,-6,-7,9,-10,-8,2,8,8,10,10,10,4,-8,-8,1,10,-5,2,-10,-8,3,-4,7,3,-1,-7,1,-6,6,-3,-2,-6,-2,10,9,2,10,-3,10,-8,10,-2,9,-10,-2,1,6,10,6,-9,9,-8,-7,-10,8,-8,3,9,-7,-4,2,4,7], dtype = "uint64")#candidate|4473|(2548,)|const|uint64
call_4471 = relay.TupleGetItem(func_3760_call(relay.reshape(var_4472.astype('bool'), [312,]), relay.reshape(const_4473.astype('uint64'), [2548,]), ), 2)
call_4474 = relay.TupleGetItem(func_3763_call(relay.reshape(var_4472.astype('bool'), [312,]), relay.reshape(const_4473.astype('uint64'), [2548,]), ), 2)
output = relay.Tuple([uop_4461,call_4471,var_4472,const_4473,])
output2 = relay.Tuple([uop_4461,call_4474,var_4472,const_4473,])
func_4479 = relay.Function([var_4460,var_4472,], output)
mod['func_4479'] = func_4479
mod = relay.transform.InferType()(mod)
var_4480 = relay.var("var_4480", dtype = "float32", shape = (8, 3, 11))#candidate|4480|(8, 3, 11)|var|float32
var_4481 = relay.var("var_4481", dtype = "bool", shape = (312,))#candidate|4481|(312,)|var|bool
output = func_4479(var_4480,var_4481,)
func_4482 = relay.Function([var_4480,var_4481,], output)
mutated_mod['func_4482'] = func_4482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1940_call = mod.get_global_var('func_1940')
func_1942_call = mutated_mod.get_global_var('func_1942')
call_4489 = func_1940_call()
call_4490 = func_1940_call()
func_1809_call = mod.get_global_var('func_1809')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_4508 = relay.TupleGetItem(func_1809_call(), 4)
call_4509 = relay.TupleGetItem(func_1810_call(), 4)
bop_4522 = relay.floor_divide(call_4489.astype('float32'), relay.reshape(call_4508.astype('float32'), relay.shape_of(call_4489))) # shape=(7, 6, 3)
bop_4525 = relay.floor_divide(call_4490.astype('float32'), relay.reshape(call_4509.astype('float32'), relay.shape_of(call_4490))) # shape=(7, 6, 3)
func_4154_call = mod.get_global_var('func_4154')
func_4155_call = mutated_mod.get_global_var('func_4155')
call_4530 = func_4154_call()
call_4531 = func_4154_call()
func_1280_call = mod.get_global_var('func_1280')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_4540 = func_1280_call(relay.reshape(bop_4522.astype('float64'), [7, 6, 3]))
call_4541 = func_1280_call(relay.reshape(bop_4522.astype('float64'), [7, 6, 3]))
output = relay.Tuple([bop_4522,call_4530,call_4540,])
output2 = relay.Tuple([bop_4525,call_4531,call_4541,])
func_4542 = relay.Function([], output)
mod['func_4542'] = func_4542
mod = relay.transform.InferType()(mod)
output = func_4542()
func_4543 = relay.Function([], output)
mutated_mod['func_4543'] = func_4543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_4570 = relay.TupleGetItem(func_2180_call(), 0)
call_4571 = relay.TupleGetItem(func_2181_call(), 0)
func_2945_call = mod.get_global_var('func_2945')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_4585 = relay.TupleGetItem(func_2945_call(), 0)
call_4586 = relay.TupleGetItem(func_2947_call(), 0)
bop_4590 = relay.logical_xor(call_4585.astype('int64'), relay.reshape(call_4570.astype('int64'), relay.shape_of(call_4585))) # shape=(7, 6, 3)
bop_4593 = relay.logical_xor(call_4586.astype('int64'), relay.reshape(call_4571.astype('int64'), relay.shape_of(call_4586))) # shape=(7, 6, 3)
output = bop_4590
output2 = bop_4593
func_4595 = relay.Function([], output)
mod['func_4595'] = func_4595
mod = relay.transform.InferType()(mod)
output = func_4595()
func_4596 = relay.Function([], output)
mutated_mod['func_4596'] = func_4596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3677_call = mod.get_global_var('func_3677')
func_3678_call = mutated_mod.get_global_var('func_3678')
call_4597 = relay.TupleGetItem(func_3677_call(), 1)
call_4598 = relay.TupleGetItem(func_3678_call(), 1)
output = relay.Tuple([call_4597,])
output2 = relay.Tuple([call_4598,])
func_4599 = relay.Function([], output)
mod['func_4599'] = func_4599
mod = relay.transform.InferType()(mod)
output = func_4599()
func_4600 = relay.Function([], output)
mutated_mod['func_4600'] = func_4600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4649 = relay.var("var_4649", dtype = "uint64", shape = ())#candidate|4649|()|var|uint64
const_4650 = relay.const([[[-3,-10,2,8,7,-2,2,5,-4,-4,4,-3,-9,-1]],[[8,5,-4,10,4,-1,-9,-9,9,-4,-4,-5,10,5]],[[1,-2,-7,2,3,-9,-9,10,-3,8,-3,-6,-9,-5]],[[3,8,-6,-2,-7,-6,4,7,-4,-3,6,-3,-2,-7]]], dtype = "uint64")#candidate|4650|(4, 1, 14)|const|uint64
bop_4651 = relay.add(var_4649.astype('uint64'), const_4650.astype('uint64')) # shape=(4, 1, 14)
uop_4654 = relay.rsqrt(bop_4651.astype('float64')) # shape=(4, 1, 14)
bop_4669 = relay.divide(uop_4654.astype('float32'), relay.reshape(bop_4651.astype('float32'), relay.shape_of(uop_4654))) # shape=(4, 1, 14)
func_1953_call = mod.get_global_var('func_1953')
func_1955_call = mutated_mod.get_global_var('func_1955')
var_4673 = relay.var("var_4673", dtype = "float32", shape = (240,))#candidate|4673|(240,)|var|float32
call_4672 = func_1953_call(relay.reshape(var_4673.astype('float32'), [16, 1, 15]))
call_4674 = func_1953_call(relay.reshape(var_4673.astype('float32'), [16, 1, 15]))
func_1581_call = mod.get_global_var('func_1581')
func_1583_call = mutated_mod.get_global_var('func_1583')
var_4682 = relay.var("var_4682", dtype = "float64", shape = (3, 42))#candidate|4682|(3, 42)|var|float64
call_4681 = relay.TupleGetItem(func_1581_call(relay.reshape(var_4682.astype('float64'), [7, 6, 3])), 0)
call_4683 = relay.TupleGetItem(func_1583_call(relay.reshape(var_4682.astype('float64'), [7, 6, 3])), 0)
uop_4684 = relay.cos(bop_4669.astype('float64')) # shape=(4, 1, 14)
func_3677_call = mod.get_global_var('func_3677')
func_3678_call = mutated_mod.get_global_var('func_3678')
call_4689 = relay.TupleGetItem(func_3677_call(), 1)
call_4690 = relay.TupleGetItem(func_3678_call(), 1)
output = relay.Tuple([call_4672,var_4673,call_4681,var_4682,uop_4684,call_4689,])
output2 = relay.Tuple([call_4674,var_4673,call_4683,var_4682,uop_4684,call_4690,])
func_4691 = relay.Function([var_4649,var_4673,var_4682,], output)
mod['func_4691'] = func_4691
mod = relay.transform.InferType()(mod)
var_4692 = relay.var("var_4692", dtype = "uint64", shape = ())#candidate|4692|()|var|uint64
var_4693 = relay.var("var_4693", dtype = "float32", shape = (240,))#candidate|4693|(240,)|var|float32
var_4694 = relay.var("var_4694", dtype = "float64", shape = (3, 42))#candidate|4694|(3, 42)|var|float64
output = func_4691(var_4692,var_4693,var_4694,)
func_4695 = relay.Function([var_4692,var_4693,var_4694,], output)
mutated_mod['func_4695'] = func_4695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mod.get_global_var('func_924')
func_925_call = mutated_mod.get_global_var('func_925')
call_4697 = relay.TupleGetItem(func_924_call(), 0)
call_4698 = relay.TupleGetItem(func_925_call(), 0)
func_2311_call = mod.get_global_var('func_2311')
func_2312_call = mutated_mod.get_global_var('func_2312')
call_4728 = relay.TupleGetItem(func_2311_call(), 1)
call_4729 = relay.TupleGetItem(func_2312_call(), 1)
func_4542_call = mod.get_global_var('func_4542')
func_4543_call = mutated_mod.get_global_var('func_4543')
call_4736 = relay.TupleGetItem(func_4542_call(), 1)
call_4737 = relay.TupleGetItem(func_4543_call(), 1)
uop_4747 = relay.cos(call_4697.astype('float64')) # shape=(7, 6, 3)
uop_4749 = relay.cos(call_4698.astype('float64')) # shape=(7, 6, 3)
func_3370_call = mod.get_global_var('func_3370')
func_3373_call = mutated_mod.get_global_var('func_3373')
const_4751 = relay.const([2.065992,8.056673,-0.821730,8.490918,4.542424,0.235344,-5.244672,0.532302,-8.377214,1.861647,-0.733962,-0.771610,6.263954,-2.273049,-0.402028,8.089740,3.947737,5.240041,-8.014481,-5.581282,-7.578351,4.561997,5.485735,-7.181459,6.877772,-6.385050,-7.878418,9.636661,-1.548365,-9.592656,2.659832,-9.463194,8.139241,-0.361953,0.003103,1.477416,5.232760,-6.871059,3.731158,-7.122201,-6.042790,-9.607286,7.419635,-7.905788,2.151150,-4.381703,-4.749342,8.804198,-9.990845,2.317734,4.898494,1.621162,1.206187,0.282743,5.660951,4.157882,-2.961240,-8.658112,-1.486076,0.986596,-0.368730,-3.457743,3.299997,-7.952671,5.141963,9.566050,-4.743045,5.796122,-9.932793,-2.132315,-1.690089,5.565770,9.185393,-4.483244,1.137579,9.588449,-0.986345,-5.347936,-0.015813,6.336272,5.174670,-7.168588,-9.418341,4.005403,-9.626974,-6.526474,-1.374853,5.831130,0.729003,0.219582,3.162187,-2.721609,-8.930550,6.475792,3.271639,-8.986726,0.929445,-0.120136,6.968970,-6.541208,3.624576,-4.168123,6.936698,9.716705,-9.422480,8.156044,-6.266174,5.537526,-9.906357,7.925600,4.757751,-8.204252,-1.548383,-8.324253,4.044130,7.449995,2.577795,-4.048125,0.116841,-4.528334,-0.590317,9.296359,3.864500,0.764391,-9.204020,-3.420256,-7.285943,-5.868570,7.990572,-7.376389,-2.256858,-7.800544,-7.699146,-7.177575,-4.276908,2.891202,-3.477800,2.692178,6.189801,3.003738,1.339025,5.557049,6.547357,-5.451547,1.551468,8.883666,-2.317994,7.431379,-8.555550,-5.365161,-2.771226,3.024602,6.839631,1.396420,4.862453,-9.364152,-9.780297,-6.858334,4.441675,-3.838144,-4.811564,-6.284247,6.693212,4.805388,2.382678,9.619670,3.026408,-3.523829,7.103158,9.168220,2.781189,-0.150494,4.979694,7.637697,0.115529,1.092548,5.109636,6.374272,-2.405831,-0.741890,-1.688196,0.181568,-0.287093,-4.758906,0.859551,-1.451382,6.853633,-5.397413,4.416340,-2.031534,-3.001013,-5.535318,1.672116,-5.301167,-1.407668,-1.436985,-1.295397,-1.840676,7.713332,9.635527,-9.572285,0.489665,-3.998610,2.409452,7.958938,-3.101108,9.089607,5.006580,-7.319726,-2.260418,-9.959132,-1.486802,1.838238,0.384055,7.363133,3.366942,-2.575665,-9.162375,6.551542,0.453060,5.314135,-5.634065,-1.020096,2.726727,0.900702,-7.364124,-1.079194,1.593009,1.032316,4.818462,7.922291,0.563979,1.895504,-6.467991,7.661365,-8.759124,1.963638,4.328299,-2.447456,5.231955], dtype = "float32")#candidate|4751|(240,)|const|float32
call_4750 = relay.TupleGetItem(func_3370_call(relay.reshape(const_4751.astype('float32'), [8, 30])), 0)
call_4752 = relay.TupleGetItem(func_3373_call(relay.reshape(const_4751.astype('float32'), [8, 30])), 0)
output = relay.Tuple([call_4728,call_4736,uop_4747,call_4750,const_4751,])
output2 = relay.Tuple([call_4729,call_4737,uop_4749,call_4752,const_4751,])
func_4759 = relay.Function([], output)
mod['func_4759'] = func_4759
mod = relay.transform.InferType()(mod)
output = func_4759()
func_4760 = relay.Function([], output)
mutated_mod['func_4760'] = func_4760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_997_call = mod.get_global_var('func_997')
func_999_call = mutated_mod.get_global_var('func_999')
call_4774 = relay.TupleGetItem(func_997_call(), 0)
call_4775 = relay.TupleGetItem(func_999_call(), 0)
output = relay.Tuple([call_4774,])
output2 = relay.Tuple([call_4775,])
func_4785 = relay.Function([], output)
mod['func_4785'] = func_4785
mod = relay.transform.InferType()(mod)
mutated_mod['func_4785'] = func_4785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mutated_mod.get_global_var('func_4785')
call_4786 = func_4785_call()
output = call_4786
func_4787 = relay.Function([], output)
mutated_mod['func_4787'] = func_4787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_4828 = func_3837_call()
call_4829 = func_3837_call()
output = call_4828
output2 = call_4829
func_4831 = relay.Function([], output)
mod['func_4831'] = func_4831
mod = relay.transform.InferType()(mod)
output = func_4831()
func_4832 = relay.Function([], output)
mutated_mod['func_4832'] = func_4832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4337_call = mod.get_global_var('func_4337')
func_4338_call = mutated_mod.get_global_var('func_4338')
call_4862 = func_4337_call()
call_4863 = func_4337_call()
func_335_call = mod.get_global_var('func_335')
func_338_call = mutated_mod.get_global_var('func_338')
const_4877 = relay.const([9,-4,1,2,-10,-4,-3,8,8,-4,3,-8,-9,8,-1,-10,10,-1,1,6,-8,-8,7,-8,3,-6,5,3,-4,2,1,4,-5,-2,-10,-10,1,1,4,-3,-1,-5,2,10,8,1,-3,-1,-2,7,-3,2,4,10,-5,5,1,-2,-8,10,6,7,8,10,-5,4,5,-2,1,7,6,-2,1,-1,-10,-7,4,-8,4,-2,6,-4,2,-1,9,-9,-7,-1,8,-7,5,-5,-8,1,2,10,7,-10,-2,-2,-9,6,-5,-6,9,9,7,-2,8,8,5,7,-6,3,-8,-8,9,4,-9,4,4,-1,-9,10,6,-7,-8,5,1,-1,-6,-7,3,8,2,1,9,-8,6,-8,-6,3,9,-7,9,-1,-8,-9,-2,6,-9,1,-10,-6,9,-9,9,10,-2,-8,6,4,-10,7,-10,-7,10,8,-6,-8,-8,-1,-1,-5,-7,-1,-4,9,10,7,8,2,1,10,4,-4,7,1,6,10,-3,-8,-8,3,2,-1,-6,-8,2,-6,-10,-9,10,4,8,-1,6,7,8,-5,2,1,-8,-4,-1,-5,5,-7,-5,-10], dtype = "uint64")#candidate|4877|(220,)|const|uint64
call_4876 = relay.TupleGetItem(func_335_call(relay.reshape(const_4877.astype('uint64'), [2, 11, 10]), relay.reshape(const_4877.astype('uint64'), [2, 11, 10]), ), 1)
call_4878 = relay.TupleGetItem(func_338_call(relay.reshape(const_4877.astype('uint64'), [2, 11, 10]), relay.reshape(const_4877.astype('uint64'), [2, 11, 10]), ), 1)
func_1540_call = mod.get_global_var('func_1540')
func_1543_call = mutated_mod.get_global_var('func_1543')
call_4879 = relay.TupleGetItem(func_1540_call(relay.reshape(call_4876.astype('bool'), [312,])), 2)
call_4880 = relay.TupleGetItem(func_1543_call(relay.reshape(call_4876.astype('bool'), [312,])), 2)
output = relay.Tuple([call_4862,call_4876,const_4877,call_4879,])
output2 = relay.Tuple([call_4863,call_4878,const_4877,call_4880,])
func_4890 = relay.Function([], output)
mod['func_4890'] = func_4890
mod = relay.transform.InferType()(mod)
output = func_4890()
func_4891 = relay.Function([], output)
mutated_mod['func_4891'] = func_4891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2218_call = mod.get_global_var('func_2218')
func_2220_call = mutated_mod.get_global_var('func_2220')
call_4938 = func_2218_call()
call_4939 = func_2218_call()
func_1229_call = mod.get_global_var('func_1229')
func_1230_call = mutated_mod.get_global_var('func_1230')
call_4940 = func_1229_call()
call_4941 = func_1229_call()
func_1809_call = mod.get_global_var('func_1809')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_4968 = relay.TupleGetItem(func_1809_call(), 0)
call_4969 = relay.TupleGetItem(func_1810_call(), 0)
output = relay.Tuple([call_4938,call_4940,call_4968,])
output2 = relay.Tuple([call_4939,call_4941,call_4969,])
func_4987 = relay.Function([], output)
mod['func_4987'] = func_4987
mod = relay.transform.InferType()(mod)
mutated_mod['func_4987'] = func_4987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4987_call = mutated_mod.get_global_var('func_4987')
call_4988 = func_4987_call()
output = call_4988
func_4989 = relay.Function([], output)
mutated_mod['func_4989'] = func_4989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_5064 = relay.TupleGetItem(func_2180_call(), 0)
call_5065 = relay.TupleGetItem(func_2181_call(), 0)
output = call_5064
output2 = call_5065
func_5078 = relay.Function([], output)
mod['func_5078'] = func_5078
mod = relay.transform.InferType()(mod)
output = func_5078()
func_5079 = relay.Function([], output)
mutated_mod['func_5079'] = func_5079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1230_call = mutated_mod.get_global_var('func_1230')
call_5089 = func_1229_call()
call_5090 = func_1229_call()
output = relay.Tuple([call_5089,])
output2 = relay.Tuple([call_5090,])
func_5095 = relay.Function([], output)
mod['func_5095'] = func_5095
mod = relay.transform.InferType()(mod)
output = func_5095()
func_5096 = relay.Function([], output)
mutated_mod['func_5096'] = func_5096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2187_call = mod.get_global_var('func_2187')
func_2188_call = mutated_mod.get_global_var('func_2188')
call_5132 = relay.TupleGetItem(func_2187_call(), 0)
call_5133 = relay.TupleGetItem(func_2188_call(), 0)
output = relay.Tuple([call_5132,])
output2 = relay.Tuple([call_5133,])
func_5139 = relay.Function([], output)
mod['func_5139'] = func_5139
mod = relay.transform.InferType()(mod)
mutated_mod['func_5139'] = func_5139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5139_call = mutated_mod.get_global_var('func_5139')
call_5140 = func_5139_call()
output = call_5140
func_5141 = relay.Function([], output)
mutated_mod['func_5141'] = func_5141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_5164 = relay.TupleGetItem(func_2180_call(), 0)
call_5165 = relay.TupleGetItem(func_2181_call(), 0)
output = call_5164
output2 = call_5165
func_5180 = relay.Function([], output)
mod['func_5180'] = func_5180
mod = relay.transform.InferType()(mod)
mutated_mod['func_5180'] = func_5180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5180_call = mutated_mod.get_global_var('func_5180')
call_5181 = func_5180_call()
output = call_5181
func_5182 = relay.Function([], output)
mutated_mod['func_5182'] = func_5182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_5204 = relay.TupleGetItem(func_2162_call(), 0)
call_5205 = relay.TupleGetItem(func_2163_call(), 0)
func_3843_call = mod.get_global_var('func_3843')
func_3846_call = mutated_mod.get_global_var('func_3846')
const_5207 = relay.const([7.912647,-0.277591,4.095456,-2.260851,4.531549,9.626655,0.956735,3.031699,6.747088,-6.895773,-2.935520,3.973665,0.452952,-7.652447,9.300134,3.384968,7.523806,9.704644,-0.939800,-2.166053,1.340501,-6.395263,9.971915,6.859141,8.955873,8.405848,0.962581,-6.551659,9.758326,8.857071,-6.913298,5.285636,-2.625077,-5.458836,-3.074488,4.550733,-6.435574,4.005126,5.486439,-9.603505,-5.022683,0.886962,-6.341392,-4.678534,-0.162357,-5.041219,1.887097,-2.897938,-5.251270,-8.741064,9.782004,6.594268,4.890243,9.520132,0.451733,-3.928414,6.175311,9.214375,4.406452,9.628193,9.036458,-4.440090,4.742304,3.482110,-5.916728,4.444943,6.310427,6.425455,5.619435,2.028128,3.931993,-7.111552,7.126531,-1.840670,-3.659359,5.629075,-0.225647,-1.011615,-0.674599,6.591408,9.729657,5.185868,2.880064,-7.228822,0.484736,4.646878,8.208741,-1.037933,0.302415,8.710188,-6.107699,-8.415470,0.406516,9.107406,-4.433114,-5.354564,0.670124,-7.632571,-6.423531,0.559410,-2.243347,-0.834689,-7.207466,5.103760,-4.700993,6.660901,4.071622,1.021765,-7.719569,-7.231238,2.883378,0.607917,-1.671908,-0.900886,-8.480970,4.240258,-5.636691,-5.970044,-1.224955,8.182811,-9.150413,9.082071,-0.222017,-2.107182,8.736193,1.694857,7.753004,5.718386,-0.217377,2.638244,5.534553,7.735957,-4.654617,0.777313,2.513068,0.701756,4.919235,4.831550,1.950779,2.126919,9.202446,-1.607688,9.374854,-2.319412,7.234865,-0.328589,-7.152386,-6.126393,8.586499,2.920436,-9.367692,-2.694892,-7.784573,8.622928,-7.248659,-3.997707,3.685971,-3.715105,3.788405,-1.561078,-6.931233,9.849126,3.494625,-5.379871,7.465687,8.905458,-9.661667,-9.029030,-5.827301,6.050216,-7.867814,-4.547546,-6.933240,-8.236883,1.120205,-2.782661,6.145140,0.945606,4.274741,3.828620,7.792055,8.938279,-4.157018,-5.836674,3.310511,5.693245,-4.742201,-7.146694,6.783931,-3.367229,5.944711,-5.538410,-3.136055,9.234168,8.814224,2.598272,-1.593233,9.931253,-2.588724,2.859226,6.553355,6.454549,-9.755171,-0.777007,-0.177143,-0.234633,2.480279,-3.884094,-7.341435,7.640878,-6.736269,3.570556,0.892441,9.898854,-8.067558,-4.256526,-6.074938,3.897153,7.263609,-9.717363,-9.141890,4.265791,8.816998,-1.776718,-9.388629,-4.088144,-9.657047,7.233889,-8.013825,2.396638,3.940769,-1.076136,8.146234,-0.692771,3.839707,-1.080413,1.339858,8.028819,5.983484,7.140855,2.565208,-6.058467,7.390022,-8.982209,-7.363371,-5.828482,0.021948,1.177596,4.503724,1.760293,-4.228337,-4.932494,7.701670,1.521746,8.219392,-3.166752,-8.079121,-5.684201,-0.737484,2.887997,-3.103802,-2.550642,-5.211665,-5.169104,0.902002,-2.908638,0.045671,-2.814360,-6.962203,4.038554,-1.204316,-7.006300,-6.156382,-4.985149,1.818593,-5.343402,8.804929,1.789779,-0.609117,8.875108,3.645697,-3.096649,7.646109,-1.211487,-6.495472,5.468556,2.097857,0.139760,5.810039,3.640995,1.500599,-6.599629,-1.021960,-5.736762,-6.446963,9.143136,8.488521,-3.635510,-3.437611,-0.923903,5.309283,0.071664,0.569376,-2.682975,-7.677073,-9.050801,0.934364,-3.517647,-9.851836,4.590356,1.587952,4.917385,-0.955222,7.236669,-4.127586,7.196207,2.106652,-6.838620,1.690501,4.454082,-9.877512,8.070001,1.951254,-5.286032,-9.160773,-2.119392,-7.459979,-7.242826,0.145037,1.969051,3.626530,0.052817,6.241728,1.244822,7.361773,-5.628845,-6.712470,0.924113,8.852365,-8.723772,5.975548,6.449416,-1.058363,-1.877378,4.259925,5.636416,-2.107122,-5.195150,-8.304654,-3.640877,-8.518009,-9.160025,-7.754467,-6.757013,8.490955,5.046232,4.557538,-1.250942,-9.802911,-2.337996,-0.529936,-6.305170,-4.425758,-5.609879,3.697152,-1.881666,9.225195,-8.690138,4.848276,5.646571,9.798509,9.836933,-4.652855,-7.089948,7.889215,-3.731241,-2.731472,-5.809454,4.242878,-3.926701,-1.694862,1.274385,2.210580,5.290960,-5.125303,7.729679,-5.394310,1.717718,-5.564744,3.102178,-2.128773,5.114173,8.912146,3.667673,-0.898185,5.361824,2.792210,-0.643760,-6.714331,3.518238,-1.273939,1.187275,1.749304,6.886661,-2.951093,1.588924,0.743490,-4.214464,7.081379,0.410768,0.851679,-7.916917,6.087223,0.900531,-1.177078,9.538181,0.297014,9.939106,3.459774,-1.062081,-8.409096,-3.335322,-2.730576,-9.956709,-9.332760,9.882084,-0.766605,-1.716176,-9.975079,0.662583,-5.094329,3.860619,9.136500,5.617125,-2.402097,0.684261,8.731467,-4.637859,-6.676285,7.032675,-1.029860,-1.197498,-0.621288,2.058527,-9.083440,-0.018865,1.189004,-2.908642,-9.414526,1.241847,6.097008,9.160706,-1.841487,-6.711527,-7.251685,1.995360,-6.588387,4.951348,7.009684,7.605896,-0.870545,-4.714935,1.863353,-8.035918,-6.846906,-2.085414,-9.260791,7.646976,2.342127,5.683269,0.671334,2.184449,-0.962213,1.460687,1.783517,3.760906,-8.662813,4.639083,-0.807215,8.272903,4.662259,-4.210616,-0.232196,-2.400594,6.185352,5.360946,-3.415831,-9.932070,-3.216686,-5.602696,-6.719627,5.250974,-3.876365,4.525541,-5.420761,3.706588,-4.063655,-6.630988,8.207943,2.687297,-0.100649,-7.463956,1.388304,-0.802879,-6.221449,4.432450,-9.603696,9.296826,7.910204,-5.815374,9.646205,1.487621,6.317298,-9.104589,-9.889100,-6.544881,3.410784,5.513501,8.268081,-0.139473,2.139266,9.068746,-0.862819,-2.667429,3.730173,6.657108,-5.901968,-5.160035,-3.694812,8.442115,-7.066879,-5.725459,-4.577326,-1.024472,7.288034,9.245818,-9.343885,-3.258712,1.308936,-6.251708,6.388781,3.367246,-1.981486,-3.091535,0.040418,2.259551,6.619276,2.051279,-6.840446,0.721219,-9.311690,-1.223459,2.919202,9.731513,3.557184,9.104134,0.693237,-1.751104,1.910950,0.616939,-0.661274,-9.194810,-1.883962,6.270284,-3.612776,-2.426069,5.709196,2.319751,1.882865,9.569228,1.732307,-6.298824,-1.922839,-5.061797,0.436063,-9.012458,9.523120,7.205709,-6.554860,-9.238502,1.891980,8.272922,7.923001,-6.247269,3.925272,1.722850,-6.587894,6.171512,-8.147985,-6.822379,7.007271,-3.066932,-3.601308,-5.156992,-6.288924,4.017114,3.437529,4.617647,2.554158,-2.576056,8.657286,6.994591,9.647944,-2.108323,6.611064,7.682363,7.824057,3.633697,9.107273,-4.343304,-1.815045,6.682564,-9.990032,-6.274787,-6.997545,-7.389549,-6.630851,-8.242556,5.529466,1.866801,8.541240,3.436123,-0.830938,-3.738268,4.115675,-7.076294,-0.532369,9.633673,-5.892001,3.303072,-5.672407,-0.292624,4.598288,-0.682882,-5.859397,9.305370,-6.529217,-1.779816,3.884697,-1.827664,-5.791197,-6.478744,8.042029,4.398730,5.696579,-9.233464,8.991157,-0.282209,3.207972,4.398034,0.504372,-9.835026,4.888336,-9.569861,0.475175,6.571456,5.449353,2.698289,-2.005535,-4.264647,6.800758,3.803381,-6.907623,6.748706,4.455150,8.134218,-5.963972,-1.264727,-2.721589,-7.971595,-6.325452,0.265714,-3.466433,-3.135782,-4.449000,-4.023382,9.815886,-2.396985,-8.985159,-7.322429,-9.285901,-0.635530,5.403857,-7.957151,0.060254,4.207783,7.897901,-5.753622,7.168672,-8.998891,4.953273,7.259546,-5.123562,-0.755692,-9.132751,-6.489150,-2.925052,8.340166,-7.998394,-4.504852,-2.271298,7.934206,-6.012193,3.969487,-6.819764,3.497561,8.637929,-9.953287,-0.311320,-1.034233,1.013103,7.979094,1.708001,9.690647,9.050932,2.572911,-2.840284,6.914331,-4.251266,-4.090432,-7.473864,1.091558,7.469061,2.712948,-1.456153,-4.293958,7.286109,-7.818185,-4.602556,-8.158964,9.772868,3.568945,-2.382192,-3.758016,-9.087188,4.190308,8.096283,-8.790164,-6.196430,-8.326841,7.756858,1.976292,0.727027,8.127335,2.244271,1.173149,4.140577,-8.116338,3.408212,6.602847,-3.006291,-5.755017,4.273145,-7.601073,-6.204421,-1.951073,2.101393,-1.685316,2.324353,-3.195482,3.073863,9.325235,-2.277481,-7.937908,2.177421,4.479277,-0.608878,2.041914,-4.782557,-3.265305,-2.952628,-7.029797,-0.041207,-1.462074,-9.891476,-5.663382,-3.318781,5.267607,-5.542537,-4.606791,5.597229,6.870544,6.675920,8.485674,-4.321849,6.143552,-2.696351,-1.137037,-5.604032,3.505766,7.423659,0.455217,7.212137,-6.773691,-9.680946,3.662735,4.424083,-2.935831,7.252338,-9.805321,6.622090,2.213101,-2.299241,-1.738323,-8.850941,9.075820,2.237244,-5.743872,2.872551,-9.883960,0.304898,1.281603,-8.061061,-0.405900,4.476132,8.493549,-9.503988,2.494817,-1.893945,6.194934,8.669821,-9.072300,7.097584,5.297235,-3.088362,7.613896,-1.730520,-4.113878,-9.635982,-3.782907,0.019735,-0.676096,-2.334571,-2.899448,9.856740,-1.530036,2.982095,2.548765,3.857985,8.630977,2.603408,6.339291,-6.571880,-6.517023,-7.330077,-6.750825,8.834706,1.753635,-7.833192,-1.705981,-2.878502,-3.311506,-4.443933,-8.990527,4.199289,5.462475,-3.872015,-2.357653,-7.273567,0.260250,2.829811,-4.617822,-1.210095,4.136861,-0.766744,-8.396949,-1.566632,-6.578072,7.002959,-2.218524,-3.411268,1.805021,-6.362412,0.337411,-8.112164,-3.071653,7.971208,-8.955204,-6.929586,-7.042183,-5.969524,8.442604,-1.603439,4.517670,9.022203,-5.722636,9.543458,-5.601242,9.313205,-1.980872,7.859494,6.143083,5.360642,-2.716370,5.377724,-1.138736,-7.390891,-1.973480,0.273093,-4.641119,4.716144,5.541152,-8.195139,0.214458,1.058243,5.913863,-7.873334,6.729740,0.284733,0.008339,6.328687,-1.257183,-2.206600,-4.193332,-8.137479,-9.772253,7.807770,-9.866736,7.357741,5.849888,2.646733,9.240143,0.079133,6.886740,1.954638,-8.120279,6.176263,-7.432773,8.927506,3.099064,0.879705,-6.951233,8.080902,-7.311461,-9.791829,-2.614411,-6.264786,8.011493,-7.886516,-6.141963,7.347150,-0.947789,3.212379,-4.983746,5.505103,-0.334634,7.544099,4.441955,5.884689,-4.144251,5.231474,3.883934,-4.421553,-0.397922,-3.521878,-7.159012,5.143543,-5.349024,9.917378,8.214618,-8.521989,6.934043,-3.592366,2.171324,-0.657140,6.560489,-9.736389,-3.310828,9.769376,0.083021,4.091396,-6.451982,2.687242,-0.333026,6.931386,0.245451,9.636254,-7.333342,-1.464141,-0.248882,3.150122,-0.505277,-9.991211,-7.999932,7.187206,8.578693,-8.596473,3.201417,-4.071533,-1.783980,-0.278953,-1.759326,0.810158,4.128982,-9.322202,-5.163284,-1.678845,0.166363,5.000984,-5.029973,1.641414,-7.926527,3.008896,7.566312,9.681655,-0.885452,-0.210181,7.220794,7.012440,3.864448,-9.558620,4.274935,-1.652969,-0.734943,-6.736337,9.539887,-0.917174,8.953416,9.811302,-9.247719,1.054981,-0.586810,4.430589,5.067632,1.951577,-0.144875,-6.145371,-7.321578,-7.372042,3.013444,3.141574,-4.845957,-7.479946,-1.006374,5.203696,-7.184970,1.120447,-2.034372,-4.069957,6.494156,-7.232702,-7.055228,0.497160,1.279917,7.247877,-4.208530,1.149709,-0.371713,5.364353,-1.486185,5.722277,6.936738,1.563974,7.474452,7.081649,0.934725,-8.217454,-5.575143,-6.576914,1.995190,-9.937298,8.982941,8.919995,0.694572,-2.482785,8.540610,-0.830788,-3.308328,-8.175929,-0.628457,-4.135736,3.034975,3.853770,-5.942758,8.777478,4.628241,0.935498,-5.223817,-9.964405,1.879645,7.053087,6.627668,6.101766,3.179306,5.838027,6.130918,-1.403164,1.454434,6.637841,4.963303,8.154520,-3.051154,4.759084,8.465789,8.372689,-0.575066,2.146801,-4.348836,2.161257,-8.977341,5.451578,-9.043440,-5.580900,9.774952,4.355329,1.044025,8.358710,-3.741449,-5.842425,3.464116,-6.886332,-5.243771,4.783952,2.908262,-3.385927,8.771135,1.683820,5.365701,0.380174,3.804327,-3.712278,-6.014311,3.388864,-1.630707,-9.791987,4.210814,-0.723477,8.153553,-5.162086,-2.387312,-7.601317,2.356497,-3.618993,-1.715157,0.247572,-6.767632,-6.548462,-3.606996,0.764877,3.715950,-8.518327,3.403316,-7.832318,-7.069429,1.587141,2.877830,-1.580399,9.264392,-8.546658,9.947349,-8.861983,5.903298,-7.581860,-4.775786,-5.790226,7.655464,-7.030537,0.737690,7.257456,4.840591,7.514712,2.987593,1.549912,-8.128912,-4.347236,-7.990487,4.525489,5.496196,8.522186,-4.742166,0.861039,-6.429143,-3.941628,-2.831551,0.122213,-4.654742,-9.895538,-8.010304,-7.632407,0.332526,-5.159400,1.543090,9.163890,5.557328,-1.447044,1.530526,-5.590732,7.698192,2.556492,-4.274851,-6.381100,0.455210,-6.820568,-9.468551,-4.785015,4.577785,9.625634,7.598497,8.071411,8.829743,-5.880544,5.636256,-0.055681,6.531465,-9.360913,-9.456241,-6.980380,-3.729372,-8.746699,9.571572,-0.664002,0.390344,-6.149172,7.347457,-3.980957,1.791557,1.599682,7.442674,-4.091727,8.557767,-6.725163,2.586692,-7.154183,-6.315187,-2.181258,8.650671,-4.663129,6.618319,5.173274,4.172344,3.981912,-2.575317,3.539061,4.843200,-7.282499,5.891035,-4.359351,8.320463,-6.249559,7.645247,-4.829984,9.930437,-2.959006,6.614850,8.226207,1.209765,2.561929,0.580287,6.678302,-9.941644,-9.358969,-3.462927,-2.320158,6.808408,2.683266,-6.171277,9.770396,7.091552,-0.585832,-8.607324,4.840950,-6.950404,2.000843,6.810806,-1.715017,3.134763,5.270958,-2.113797,2.295617,-7.167626,-2.659705,-5.153285,3.251819,4.908051,-7.590125,5.281225,9.843209,4.627377,-4.572148,1.934068,-0.506234,5.638760,0.839853,-1.502266,9.820336,5.874880,4.674487,8.831780,2.315037,-6.650027,-8.131938,5.847225,6.631640,0.595669,-1.788670,1.191333,2.709054,-9.363210,-2.138312,4.424620,-2.385810,7.454267,2.415660,-1.178981,-6.386410,-6.671720,-4.880707,-1.783115,-6.286231,0.608749,3.729566,-1.681693,0.570986,8.117267,0.153924,7.648808,7.513299,3.087314,-5.771638,-5.581548,-9.166912,5.450652,-0.257232,-8.879814,6.295815,3.000054,-0.624892,6.039569,6.140515,9.111123,-1.677489,-6.797827,-5.717563,-9.652726,2.593247,1.957750,4.363998,-7.971900,-4.465451,9.074259,4.049308,-9.700302,-4.718087,8.265788,-4.414800,-5.612317,-5.105420,6.710603,-5.373155,6.275096,-6.989332,2.594502,2.622485,6.880823,-7.520040,-6.191791,-7.954693,-2.568661,-4.593092,-3.687392,-2.637697,6.547955,1.378448,4.838894,-6.567024,0.534678,0.071823,6.591107,-1.496793,9.997106,5.730114,-8.964274,-5.987471,-8.291746,4.024607,-7.069525,0.961115,-5.979192,-1.910908,-8.305913,-7.207433,3.108805,-2.648248,-9.791017,2.641145,2.277589,1.932765,-7.510879,-6.562085,5.189267,5.398253,-7.139289,7.150043,4.056944,-6.112539,8.153632,8.101304,0.142879,0.930302,6.108227,6.039046,0.601315,-0.076338,-6.228384,-2.357157,-0.253132,1.508248,-5.171479,3.802076,-0.863284,0.539818,-5.268635,-5.455907,-1.753024,-2.839220,4.571120,-9.685951,-6.534197,-2.045353,-8.891259,-3.448703,5.451283,6.256028,1.955102,7.182259,-5.548505,3.970482,-8.749713,-6.757174,7.126799,-7.655854,-8.931821,0.777772,7.825372,-5.184411,-0.764002,9.573838,-3.452266,7.504474,9.201459,-7.664025,1.881675,4.811629,4.551103,-8.041959,-4.381251,5.651330,4.193777,0.861681,7.580128,-6.675595,2.730363,7.557832,-7.888171,2.281366,3.959710,-7.381231,1.156767,-7.726520,3.476552,5.260819,9.421549,0.846206,2.769708,-3.187608,-4.791290,-5.386647,-3.567697,1.389934,-7.135316,-1.802213,-4.365983,-1.062966,-8.910206,7.632423,4.930018,8.204876,1.641865,4.917795,-1.116852,6.526623,0.999948,-6.217946,1.898314,-6.832505,-2.336181,-9.590972,7.996351,-4.612255,6.474628,-5.593559,-9.044176,-1.988703,-9.843882,-5.090459,1.606349,3.592335,9.042359,-4.888185,7.041630,-9.668370,5.926040,9.253205,4.144171,9.689148,3.554822,6.200836,6.523146,2.647748,2.017940,-5.740489,-7.359324,1.324696,0.589754,-3.292257,4.094740,-9.136376,1.730209,4.242449,8.315776,-0.768769,-4.283028,-7.163042,3.787049,7.598095,3.759772,8.524453,1.162104,9.900310,-9.702181,-7.936455,-8.453651,-8.636927,-5.004281,-2.761238,-7.476783,-7.063347,-4.834837,9.387603,-2.670800,6.805266,-0.110248,3.308868,5.837741,1.905212,0.421950,1.313106,-3.553102,6.217696,-7.586955,2.566319,-3.122419,1.110983,-5.270048,-6.800806,-3.764551,2.438093,-5.987100,-0.288068,2.131617,2.255736,8.252286,5.317264,2.377850,-7.849325,-2.533074,-3.197852,8.555549,-5.859701,-0.585556,9.717605,-4.263871,-8.935043,7.614475,-0.422330,-7.828126,1.891746,1.963492,2.447678,-7.527054,-2.498435,6.101647,2.551708,-6.112758,7.938364,2.439708,3.719349,8.295291,-7.920318,3.493261,3.840490,9.888333,9.819407,0.398267,9.427299,0.819382,4.353796,-9.446795,2.370609,-1.508813,-3.146559,4.898512,8.245456,4.850494,-1.537181,-6.657782,-1.090190,-9.863223,-0.412030,-3.085531,1.207468,9.061049,7.176403,-6.448696,8.504961,7.678517,-1.020177,5.500570,5.579189,6.550094,0.602673,9.706356,0.715271,-9.988587,-4.864233,9.706454,-0.152031,-1.520516,1.671349,-1.564256,0.750120,-4.339688,4.110700,7.474924,-0.305393,-2.419129,-6.739268,2.312660,8.742105,-7.993342,-3.425238,-9.284794,-5.224436,-4.463033,4.102720,-3.021582,-8.344683,-9.282511,5.713845,-7.383661,-0.840638,5.516812,7.089888,5.327037,-4.312736,-1.152346,8.185785,4.272264,4.602599,4.257042,9.652208,4.616754,-3.301965,5.968412,9.613167,4.642805,-4.067783,-1.376307,9.299536,-1.145518,0.997247,8.107954,4.989580,4.125020,-9.174510,3.582777,-7.600173,-4.165392,-4.626387,-1.841591,0.583667,-5.892674,0.178274,1.027298,-4.496473,-9.319698,-9.780203,-4.437412,2.778553,-8.057833,0.906257,4.548045,-2.039453,-1.186444,4.745903,-9.815818,8.167523,-3.867662,-0.615213,2.094646,1.348593,-9.272435,4.156381,-3.397277,-5.866147,6.723525,-3.680877,-0.294599,-1.641554,-5.887958,1.787712,-9.271612,0.817081,1.599279,3.058596,-9.413539,9.558694,-4.214403,7.638091,7.992208,-8.327755,0.536152,4.835798,3.697008,1.992079,5.737518,4.075922,3.823098,-1.001649,-3.700649,3.833702,-2.605869,2.203361,-3.012864,0.905274,9.028154,-7.364217,1.728886,-2.126223,1.405263,-9.202351,-5.160503,-6.957413,-0.252013,9.245431,-6.505280,3.198209,6.340261,-4.063428,4.639244,2.702558,5.389793,-0.513010,9.887328,5.845938,-1.590510,4.293542,8.345985,-9.556897,-8.864928,-0.592282,-7.656697,3.592226,0.982742,8.083789,-5.423929,7.262244,-9.577243,-2.380490,-0.617034,-8.252730,2.465155,1.533033,-2.104209,-3.072878,6.964110,4.492288,-7.283183,5.072081,-9.839369,-2.334752,8.038675,-2.346104,7.878670,1.514472,0.403656,-9.506495,0.745762,0.684140,7.072270,-9.950448,1.448866,3.295114,9.534260,8.277025,6.576930,-1.671341,1.800853,0.568325,8.633532,-0.513992,-8.636649,2.224115,-5.764795,9.921128,-5.051248,6.612118,-0.497376,6.003646,4.257967,3.752070,-6.538580,-0.469950,8.525096,3.561844,-1.945360,6.069226,-5.304918,7.907424,9.309503,0.175859,-3.956755,1.385701,1.393949,-6.766373,5.591864,9.112205,4.590709,8.502386,8.186716,0.705677,-7.820629,7.236045,3.780811,-2.044480,5.683118,-6.187685,-4.703646,-1.366980,-2.436618,-4.085530,6.835533,-7.377551,7.797124,2.048533,-7.466202,6.327303,7.092603,3.120480,2.158346,1.994230,2.860845,-6.028855,-6.778045,6.924344,-8.348539,-3.666736,-9.352717,-2.365000,0.265684,-5.828233,6.731474,-7.494459,-3.633436,3.000835,9.554738,7.833219,9.991657,-3.155904,-6.186677,-5.877481,-0.423891,-4.044541,7.427305,-5.158257,-7.183049,-3.309514,-7.630476,-4.387256,1.915241,-3.380734,8.372733,5.729979,-8.556474,-4.172703,-7.676208,3.154910,7.989348,9.018890,-0.077427,9.367529,-4.311771,-1.387173,5.348437,-2.464343,7.786668,0.556690,-2.398800,8.011287,2.275859,1.585338,-2.469137,-7.376600,1.956443,5.401663,0.734809,-1.421039,-8.797943,8.615813,-8.637402,-7.264520,-2.471456,-1.034807,7.472162,8.405051,4.058895,-4.746672,9.431746,0.625771,-8.115204,1.813368,-2.954622,6.006475,-7.542338,-2.850384,-1.677985,-8.854359,-7.626126,1.799273,-8.452622,-0.441552,-4.576137,-7.943518,6.574608,-5.921393,-4.062167,-2.658017,1.466693,5.443063,-3.963998,-8.899006,6.677795,6.831358,1.989006,0.245620,-2.801722,8.516442,-6.013645,-7.394572,-7.783505,4.198956,-2.587615,7.877743,0.923054,-1.798775,-6.789490,9.536898,3.967404,4.779450,7.941883,5.921142,0.272103,-6.143364,-0.162460,2.298644,2.713720,8.274796,-2.542144,-2.357009,0.354812,8.569672,5.641177,8.376445,-8.979288,-2.597932,4.472471,8.692527,-5.542254,-0.623886,-0.765652,7.026953,-9.617267,-6.152517,1.088413,6.085647,3.705478,-8.583920,8.777716,5.331244,7.401474,7.068473,4.397253,8.917484,0.880672,-4.384972,2.992075,1.832873,-5.655159,1.260384,-2.155524,4.206846,8.408124,0.702008,7.776870,-6.415468,-2.325711,-6.959071,-8.698715,8.728765,2.878932,-5.234076,-3.888431,6.101676,5.321259,-9.407339,3.294692,1.805715,-9.043937,2.456914,7.005057,-4.417868,5.852536,-6.980032,-0.868381,7.050105,9.836568,-8.365697,-3.810877,5.139989,-5.316999,5.431323,6.256491,1.910091,5.218569,5.305206,-8.249002,-5.282668,-9.463053,-8.218714,7.773142,8.266909,4.598461,-3.684599,6.335784,8.558993,4.061563,6.281378,5.887676,-5.509615,0.613699,7.799306,5.637537,3.454748,-2.484001,-7.691915,-4.268120,8.390632,-1.988750,5.480022,7.742478,2.836328,4.743801,1.162530,0.089285,-4.471602,3.619315,4.312505,7.137115,1.356109,-6.773873,4.231230,6.807177,-7.575296,-6.086907,6.660989,-8.185340,2.517226,8.176262,-0.149837,-5.746794,8.583080,-7.901065,3.697557,1.666721,-2.914030,-6.320273,-8.076949,-0.709202,0.347696,-4.438674,-7.342991,-4.648508,7.921166,-6.593862,-6.760921,-5.105648,-5.344200,-0.323991,-3.382505,-3.778042,5.222133,4.038438,-0.591666,-1.689954,-3.972858,-6.326644,9.748130,-1.127688,-2.799757,-9.143407,-4.616701,-9.662121,-2.903732,-6.173422,8.703383,0.105900,5.478096,-2.634160,-2.571062,-6.271178,-7.438473,7.066199,9.312239,-9.197659,-6.637795,-0.835141,9.854199,2.533647,-6.486144,-5.740459,4.572797,-2.331731,-4.792983,-5.669210,-1.675791,-5.230082,-2.896953,-2.234186,3.988039,5.311690,-4.384934,-3.372718,9.887903,1.502652,8.361790,1.471609,9.352794,-3.661098,-7.453814,-2.830948,5.297909,4.208125,-4.202429,3.357553,-3.812795,3.657644,-5.807178,-4.569535,4.601082,1.797264,-3.193846,9.364551,1.739913,0.807977,4.106784,-7.226873,-4.442473,-3.445444,8.918190,6.155451,-1.226045,-9.507541,-2.590586,-6.778648,-2.261197,5.200477,-5.626982,-7.838703,-4.148408,-6.196546,0.485586,-0.826819,-2.647762,-9.111690,-4.452217,-6.736220,-5.230111,1.685502,4.672042,5.809539,-2.132326,-5.569994,6.936774,-8.228748,3.348166,3.513060,9.378337,-1.937485,-5.864854,2.685143,-1.551562,-9.180621,7.560821,-7.800831,8.182800,-6.475368,-8.069311,7.037777,-0.472548,8.570781,-1.931283,-6.878801,-4.535469,9.793045,-9.491471,6.484324,-0.468962,9.814848,0.945910,0.481981,0.887817,-8.118472,-4.777511,-5.700726,2.379818,-8.457799,-6.365353,2.120259,-6.867998,-2.286395,-3.332866,7.190579,7.179578,-7.098724,-6.976458,0.410057,1.603579,8.245534,6.579982,-3.267250,1.635964,-0.527679,-2.959496,-9.044473,8.382201,6.216480,-6.714852,-0.401582,4.015049,8.851087,-8.158528,-3.669241,-9.027331,-5.947733,9.434516,2.936146,2.608375,-2.678774,7.187693,-1.654277,5.265891,-9.044425,6.421070,8.456641,3.720888,-5.579390,-2.971131,-3.490303,7.688630,-9.402567,0.119502,7.801625,-2.871770,-5.761241,9.239705,-2.351872,-2.588342,-0.053027,1.777972,7.866384,-1.269581,7.886727,-4.142951,-4.185802,-2.364853,-1.967061,-6.223850,-5.044961,2.858407,-6.428198,-3.744741,-3.075101,-8.416484,-6.756838,-7.729005,-5.128333,1.142214,6.037057,9.790969,5.414982,0.523386,-8.977169,-7.568188,-8.135187,3.887991,-7.406857,9.205600,6.796233,1.484406,6.406413,4.505616,7.747075,5.795769,-5.835113,-8.319306,-5.433120,3.511409,5.931886,-2.953783,3.370718,-1.861859,3.969761,-6.014714,2.706831,-3.040374,-3.044705,8.711016,-1.521012,-7.648820,9.439578,0.153910,-3.816909,-4.570934,-2.919366,1.295770,3.490239,7.115210,9.560099,0.166354,6.508212,-5.658540,8.499745,8.429307,-6.214089,-9.566699,-7.672517,-8.412802,-6.633695,-9.509822,1.430119,-5.884924,-0.081388,8.534966,-6.216089,-1.376282,-9.506030,1.880387,-1.458232,8.864806,-2.738679,4.517692,2.415695,-0.260840,-9.595936,-2.082894,-2.268190,-5.653628,-9.259949,0.049479,-3.721199,8.544354,-6.587601,-5.784758,0.274898,6.777852,1.248640,6.783425,-1.880122,-6.501666,-8.432488,-9.296784,-2.981444,5.165463,-7.489826,7.145058,7.272411,3.384181,3.769029,-6.198327,-3.110153,-2.504557,-1.067665,-3.866636,1.119143,-4.444261,-0.088583,2.406019,3.285719,7.068820,3.061251,7.606774,7.334778,-8.104973,-4.414221,-1.709248,-0.802225,7.677526,-4.447103,-6.682779,-0.974593,8.205933,0.481815,7.339732,-2.901861,5.946604,7.445981,-6.463324,8.795899,5.290898,9.109430,-7.261179,4.646315,3.236297,-8.087483,8.146341,-7.038022,7.958814,1.329041,-6.637560,3.647408,0.528907,-0.389911,-9.683024,-9.799899,-1.957927,9.615084,-0.370410,-5.520153,-7.958740,3.564615,8.986264,-5.934369,1.043325,-5.264739,7.297620,2.242011,-4.527545,-6.097762,-3.452746,7.618089,6.444384,8.914618,9.913358,0.045594,-6.246761,3.372140,-5.148743,-8.006105,-6.969750,8.689672,3.634407,-6.352584,5.676959,-7.349651,-7.099557,-6.418304,-7.582152,9.081038,6.499493,7.353156,9.562887,4.651265,-9.444519,4.042944,-2.626910,4.939542,-4.692524,-6.398930,-5.494621,5.256003,-7.509689,-4.956462,9.487645,-3.910010,-6.676488,6.150521,-6.241852,9.037423,-9.741698,5.173249,-5.829587,-0.536802,0.458048,-7.892264,9.581800,-0.143263,5.932954,-5.127321,-1.505967,0.778885,-0.060160,-7.691798,0.018055,-1.071401,-6.037593,8.466067,-3.291593,8.267946,-3.497623,0.282263,4.462800,9.531462,5.487790,-7.052311,-3.028597,-9.703747,-5.808271,1.538839,5.668278,7.424340,-2.966940,-9.343513,8.634250,-7.482209,6.784157,9.715464,1.709804,4.007952,9.290017,-5.252692,0.562574,-6.773641,9.389081,2.766030,0.957713,-2.706121,3.616016,-6.806406,8.197317,-9.731396,4.431223,2.307810,-7.411039,3.649471,-2.533663,7.688809,-1.302688,9.214848], dtype = "float64")#candidate|5207|(2548,)|const|float64
call_5206 = func_3843_call(relay.reshape(const_5207.astype('float64'), [14, 14, 13]))
call_5208 = func_3843_call(relay.reshape(const_5207.astype('float64'), [14, 14, 13]))
func_3277_call = mod.get_global_var('func_3277')
func_3282_call = mutated_mod.get_global_var('func_3282')
const_5215 = relay.const(-8, dtype = "uint16")#candidate|5215|()|const|uint16
var_5216 = relay.var("var_5216", dtype = "uint16", shape = (1120,))#candidate|5216|(1120,)|var|uint16
const_5217 = relay.const([False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,True], dtype = "bool")#candidate|5217|(312,)|const|bool
call_5214 = relay.TupleGetItem(func_3277_call(relay.reshape(const_5215.astype('uint16'), []), relay.reshape(var_5216.astype('uint16'), [1120,]), relay.reshape(const_5217.astype('bool'), [312,]), relay.reshape(call_5206.astype('uint64'), [2548,]), ), 6)
call_5218 = relay.TupleGetItem(func_3282_call(relay.reshape(const_5215.astype('uint16'), []), relay.reshape(var_5216.astype('uint16'), [1120,]), relay.reshape(const_5217.astype('bool'), [312,]), relay.reshape(call_5206.astype('uint64'), [2548,]), ), 6)
func_2218_call = mod.get_global_var('func_2218')
func_2220_call = mutated_mod.get_global_var('func_2220')
call_5233 = func_2218_call()
call_5234 = func_2218_call()
func_2376_call = mod.get_global_var('func_2376')
func_2380_call = mutated_mod.get_global_var('func_2380')
call_5239 = relay.TupleGetItem(func_2376_call(relay.reshape(call_5204.astype('float64'), [126,]), relay.reshape(const_5217.astype('bool'), [312,]), relay.reshape(const_5207.astype('uint64'), [2548,]), ), 4)
call_5240 = relay.TupleGetItem(func_2380_call(relay.reshape(call_5204.astype('float64'), [126,]), relay.reshape(const_5217.astype('bool'), [312,]), relay.reshape(const_5207.astype('uint64'), [2548,]), ), 4)
func_4337_call = mod.get_global_var('func_4337')
func_4338_call = mutated_mod.get_global_var('func_4338')
call_5242 = func_4337_call()
call_5243 = func_4337_call()
output = relay.Tuple([call_5204,call_5206,const_5207,call_5214,const_5215,var_5216,const_5217,call_5233,call_5239,call_5242,])
output2 = relay.Tuple([call_5205,call_5208,const_5207,call_5218,const_5215,var_5216,const_5217,call_5234,call_5240,call_5243,])
func_5245 = relay.Function([var_5216,], output)
mod['func_5245'] = func_5245
mod = relay.transform.InferType()(mod)
var_5246 = relay.var("var_5246", dtype = "uint16", shape = (1120,))#candidate|5246|(1120,)|var|uint16
output = func_5245(var_5246)
func_5247 = relay.Function([var_5246], output)
mutated_mod['func_5247'] = func_5247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mod.get_global_var('func_1929')
func_1930_call = mutated_mod.get_global_var('func_1930')
call_5265 = relay.TupleGetItem(func_1929_call(), 0)
call_5266 = relay.TupleGetItem(func_1930_call(), 0)
output = relay.Tuple([call_5265,])
output2 = relay.Tuple([call_5266,])
func_5267 = relay.Function([], output)
mod['func_5267'] = func_5267
mod = relay.transform.InferType()(mod)
mutated_mod['func_5267'] = func_5267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5267_call = mutated_mod.get_global_var('func_5267')
call_5268 = func_5267_call()
output = call_5268
func_5269 = relay.Function([], output)
mutated_mod['func_5269'] = func_5269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1230_call = mutated_mod.get_global_var('func_1230')
call_5293 = func_1229_call()
call_5294 = func_1229_call()
var_5386 = relay.var("var_5386", dtype = "float64", shape = (7, 6, 3))#candidate|5386|(7, 6, 3)|var|float64
bop_5387 = relay.right_shift(call_5293.astype('int8'), relay.reshape(var_5386.astype('int8'), relay.shape_of(call_5293))) # shape=(7, 6, 3)
bop_5390 = relay.right_shift(call_5294.astype('int8'), relay.reshape(var_5386.astype('int8'), relay.shape_of(call_5294))) # shape=(7, 6, 3)
func_4831_call = mod.get_global_var('func_4831')
func_4832_call = mutated_mod.get_global_var('func_4832')
call_5417 = func_4831_call()
call_5418 = func_4831_call()
func_4400_call = mod.get_global_var('func_4400')
func_4403_call = mutated_mod.get_global_var('func_4403')
var_5439 = relay.var("var_5439", dtype = "bool", shape = (2548,))#candidate|5439|(2548,)|var|bool
call_5438 = relay.TupleGetItem(func_4400_call(relay.reshape(var_5439.astype('bool'), [2548,])), 2)
call_5440 = relay.TupleGetItem(func_4403_call(relay.reshape(var_5439.astype('bool'), [2548,])), 2)
output = relay.Tuple([bop_5387,call_5417,call_5438,var_5439,])
output2 = relay.Tuple([bop_5390,call_5418,call_5440,var_5439,])
func_5441 = relay.Function([var_5386,var_5439,], output)
mod['func_5441'] = func_5441
mod = relay.transform.InferType()(mod)
var_5442 = relay.var("var_5442", dtype = "float64", shape = (7, 6, 3))#candidate|5442|(7, 6, 3)|var|float64
var_5443 = relay.var("var_5443", dtype = "bool", shape = (2548,))#candidate|5443|(2548,)|var|bool
output = func_5441(var_5442,var_5443,)
func_5444 = relay.Function([var_5442,var_5443,], output)
mutated_mod['func_5444'] = func_5444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2259_call = mod.get_global_var('func_2259')
func_2261_call = mutated_mod.get_global_var('func_2261')
call_5458 = func_2259_call()
call_5459 = func_2259_call()
output = relay.Tuple([call_5458,])
output2 = relay.Tuple([call_5459,])
func_5470 = relay.Function([], output)
mod['func_5470'] = func_5470
mod = relay.transform.InferType()(mod)
mutated_mod['func_5470'] = func_5470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5470_call = mutated_mod.get_global_var('func_5470')
call_5471 = func_5470_call()
output = call_5471
func_5472 = relay.Function([], output)
mutated_mod['func_5472'] = func_5472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mod.get_global_var('func_3074')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_5509 = relay.TupleGetItem(func_3074_call(), 0)
call_5510 = relay.TupleGetItem(func_3075_call(), 0)
func_3866_call = mod.get_global_var('func_3866')
func_3868_call = mutated_mod.get_global_var('func_3868')
call_5516 = relay.TupleGetItem(func_3866_call(), 2)
call_5517 = relay.TupleGetItem(func_3868_call(), 2)
func_5078_call = mod.get_global_var('func_5078')
func_5079_call = mutated_mod.get_global_var('func_5079')
call_5534 = func_5078_call()
call_5535 = func_5078_call()
uop_5543 = relay.erf(call_5516.astype('float64')) # shape=(312,)
uop_5545 = relay.erf(call_5517.astype('float64')) # shape=(312,)
output = relay.Tuple([call_5509,call_5534,uop_5543,])
output2 = relay.Tuple([call_5510,call_5535,uop_5545,])
func_5547 = relay.Function([], output)
mod['func_5547'] = func_5547
mod = relay.transform.InferType()(mod)
mutated_mod['func_5547'] = func_5547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5547_call = mutated_mod.get_global_var('func_5547')
call_5548 = func_5547_call()
output = call_5548
func_5549 = relay.Function([], output)
mutated_mod['func_5549'] = func_5549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4154_call = mod.get_global_var('func_4154')
func_4155_call = mutated_mod.get_global_var('func_4155')
call_5550 = func_4154_call()
call_5551 = func_4154_call()
output = relay.Tuple([call_5550,])
output2 = relay.Tuple([call_5551,])
func_5552 = relay.Function([], output)
mod['func_5552'] = func_5552
mod = relay.transform.InferType()(mod)
output = func_5552()
func_5553 = relay.Function([], output)
mutated_mod['func_5553'] = func_5553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5139_call = mod.get_global_var('func_5139')
func_5141_call = mutated_mod.get_global_var('func_5141')
call_5589 = relay.TupleGetItem(func_5139_call(), 0)
call_5590 = relay.TupleGetItem(func_5141_call(), 0)
uop_5596 = relay.log(call_5589.astype('float32')) # shape=(13, 14, 14)
uop_5598 = relay.log(call_5590.astype('float32')) # shape=(13, 14, 14)
output = uop_5596
output2 = uop_5598
func_5603 = relay.Function([], output)
mod['func_5603'] = func_5603
mod = relay.transform.InferType()(mod)
mutated_mod['func_5603'] = func_5603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5603_call = mutated_mod.get_global_var('func_5603')
call_5604 = func_5603_call()
output = call_5604
func_5605 = relay.Function([], output)
mutated_mod['func_5605'] = func_5605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mod.get_global_var('func_924')
func_925_call = mutated_mod.get_global_var('func_925')
call_5614 = relay.TupleGetItem(func_924_call(), 0)
call_5615 = relay.TupleGetItem(func_925_call(), 0)
func_2187_call = mod.get_global_var('func_2187')
func_2188_call = mutated_mod.get_global_var('func_2188')
call_5628 = relay.TupleGetItem(func_2187_call(), 0)
call_5629 = relay.TupleGetItem(func_2188_call(), 0)
func_4031_call = mod.get_global_var('func_4031')
func_4034_call = mutated_mod.get_global_var('func_4034')
var_5643 = relay.var("var_5643", dtype = "bool", shape = (312,))#candidate|5643|(312,)|var|bool
call_5642 = relay.TupleGetItem(func_4031_call(relay.reshape(var_5643.astype('bool'), [312,])), 3)
call_5644 = relay.TupleGetItem(func_4034_call(relay.reshape(var_5643.astype('bool'), [312,])), 3)
func_1229_call = mod.get_global_var('func_1229')
func_1230_call = mutated_mod.get_global_var('func_1230')
call_5649 = func_1229_call()
call_5650 = func_1229_call()
output = relay.Tuple([call_5614,call_5628,call_5642,var_5643,call_5649,])
output2 = relay.Tuple([call_5615,call_5629,call_5644,var_5643,call_5650,])
func_5651 = relay.Function([var_5643,], output)
mod['func_5651'] = func_5651
mod = relay.transform.InferType()(mod)
mutated_mod['func_5651'] = func_5651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5652 = relay.var("var_5652", dtype = "bool", shape = (312,))#candidate|5652|(312,)|var|bool
func_5651_call = mutated_mod.get_global_var('func_5651')
call_5653 = func_5651_call(var_5652)
output = call_5653
func_5654 = relay.Function([var_5652], output)
mutated_mod['func_5654'] = func_5654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4542_call = mod.get_global_var('func_4542')
func_4543_call = mutated_mod.get_global_var('func_4543')
call_5693 = relay.TupleGetItem(func_4542_call(), 2)
call_5694 = relay.TupleGetItem(func_4543_call(), 2)
output = relay.Tuple([call_5693,])
output2 = relay.Tuple([call_5694,])
func_5737 = relay.Function([], output)
mod['func_5737'] = func_5737
mod = relay.transform.InferType()(mod)
output = func_5737()
func_5738 = relay.Function([], output)
mutated_mod['func_5738'] = func_5738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mod.get_global_var('func_3074')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_5748 = relay.TupleGetItem(func_3074_call(), 0)
call_5749 = relay.TupleGetItem(func_3075_call(), 0)
func_1709_call = mod.get_global_var('func_1709')
func_1713_call = mutated_mod.get_global_var('func_1713')
const_5758 = relay.const([-6.847227,6.270507,7.279844,5.137295,4.868459,4.848610,-8.914787,-3.892652,-6.309511,-5.691091,-1.552209,9.192700,-6.900209,-0.151481,5.418284,-5.078548,-6.918401,-5.856637,-7.762291,-4.824354,4.768922,0.729373,4.393891,-7.232281,-8.985247,1.546214,0.812433,8.862215,8.789722,3.245446,-0.443011,-5.458316,3.286059,-3.813695,-4.753686,-3.291004,-7.698025,-9.919113,0.881807,8.331453,9.467987,-4.460930,9.417513,-9.394066,7.644316,3.821066,3.348194,4.933566,-6.342851,-2.762533,-8.244281,6.467525,4.112435,3.569113,-3.885092,-1.697264,0.099584,-8.147807,4.666655,9.162443,-9.054480,-8.013299,-8.657916,2.061245,2.017863,5.803616,-8.900078,-3.985331,-7.566244,-5.400564,-1.713929,-4.621630,-6.447251,-8.631032,0.593677,-5.902072,-8.606607,-0.317277,-5.994134,-6.583080,4.767806,-1.056771,-6.339140,8.830852,-8.134315,6.632676,8.509503,-1.379508,9.989840,9.669491,-0.358943,-8.536692,-4.741511,1.300739,-1.393762,-8.564863,3.688162,5.525260,7.822033,5.433012,9.074019,-5.944386,-6.559934,-8.582234,4.468331,5.658084,4.319426,-3.100058,-0.650245,3.520652,8.563986,-4.298056,-8.987674,-6.155479,0.138813,8.942584,8.186826,1.464470,-3.071416,6.586460,0.726166,3.461811,-6.024673,-5.487788,3.684329,-7.838139], dtype = "float64")#candidate|5758|(126,)|const|float64
const_5759 = relay.const([True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,True], dtype = "bool")#candidate|5759|(312,)|const|bool
call_5757 = relay.TupleGetItem(func_1709_call(relay.reshape(const_5758.astype('float64'), [7, 6, 3]), relay.reshape(const_5759.astype('bool'), [312,]), ), 0)
call_5760 = relay.TupleGetItem(func_1713_call(relay.reshape(const_5758.astype('float64'), [7, 6, 3]), relay.reshape(const_5759.astype('bool'), [312,]), ), 0)
output = relay.Tuple([call_5748,call_5757,const_5758,const_5759,])
output2 = relay.Tuple([call_5749,call_5760,const_5758,const_5759,])
func_5761 = relay.Function([], output)
mod['func_5761'] = func_5761
mod = relay.transform.InferType()(mod)
mutated_mod['func_5761'] = func_5761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5761_call = mutated_mod.get_global_var('func_5761')
call_5762 = func_5761_call()
output = call_5762
func_5763 = relay.Function([], output)
mutated_mod['func_5763'] = func_5763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4454_call = mod.get_global_var('func_4454')
func_4456_call = mutated_mod.get_global_var('func_4456')
call_5775 = relay.TupleGetItem(func_4454_call(), 1)
call_5776 = relay.TupleGetItem(func_4456_call(), 1)
func_4337_call = mod.get_global_var('func_4337')
func_4338_call = mutated_mod.get_global_var('func_4338')
call_5777 = func_4337_call()
call_5778 = func_4337_call()
func_4890_call = mod.get_global_var('func_4890')
func_4891_call = mutated_mod.get_global_var('func_4891')
call_5779 = relay.TupleGetItem(func_4890_call(), 3)
call_5780 = relay.TupleGetItem(func_4891_call(), 3)
func_2945_call = mod.get_global_var('func_2945')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_5787 = relay.TupleGetItem(func_2945_call(), 0)
call_5788 = relay.TupleGetItem(func_2947_call(), 0)
output = relay.Tuple([call_5775,call_5777,call_5779,call_5787,])
output2 = relay.Tuple([call_5776,call_5778,call_5780,call_5788,])
func_5816 = relay.Function([], output)
mod['func_5816'] = func_5816
mod = relay.transform.InferType()(mod)
output = func_5816()
func_5817 = relay.Function([], output)
mutated_mod['func_5817'] = func_5817
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5907 = relay.var("var_5907", dtype = "float64", shape = (3, 5, 7))#candidate|5907|(3, 5, 7)|var|float64
const_5908 = relay.const([[[-9.153864,-4.452007,-2.810210,-2.988970,-0.955928,-8.372960,-9.313761],[0.513395,-9.135581,-1.723776,-1.022738,8.616531,-9.032660,3.413055],[1.572637,-3.233903,-1.802129,5.598927,4.561524,0.356404,-6.610051],[7.140962,0.693948,5.814859,7.681719,-2.118104,-1.769230,3.257749],[-6.988069,2.995047,-9.407969,2.504340,6.110478,4.998204,-0.492180]],[[-8.517157,6.537212,-9.048473,-8.011044,-4.597258,7.729405,-1.691078],[-8.617569,-2.734196,-4.262927,-2.145070,7.302125,-8.727234,-4.397941],[1.882134,-5.267994,-8.148759,-1.478574,-2.090808,-3.156672,-2.834465],[4.090474,1.738226,0.906491,-5.642124,-8.215536,-5.329170,-0.206707],[-8.927065,-2.400755,-6.785508,3.706756,-8.703296,4.928047,-1.973616]],[[6.510913,3.353162,4.293288,8.189926,-5.333569,1.298887,-8.422744],[6.273422,-1.394793,-1.801377,5.710663,5.971363,2.201369,-1.699903],[-7.471970,-2.356246,-3.172495,-6.306431,7.054208,-4.687005,3.513272],[-1.885922,6.006797,-1.733621,2.196840,-1.975877,4.307391,9.467106],[-1.588595,4.983042,-2.735282,-4.602087,4.546958,4.874854,-6.123519]]], dtype = "float64")#candidate|5908|(3, 5, 7)|const|float64
bop_5909 = relay.not_equal(var_5907.astype('bool'), relay.reshape(const_5908.astype('bool'), relay.shape_of(var_5907))) # shape=(3, 5, 7)
func_5095_call = mod.get_global_var('func_5095')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_5918 = relay.TupleGetItem(func_5095_call(), 0)
call_5919 = relay.TupleGetItem(func_5096_call(), 0)
func_2204_call = mod.get_global_var('func_2204')
func_2207_call = mutated_mod.get_global_var('func_2207')
const_5923 = relay.const([5,7,1,-7,-10,-7,-3,1,6,-5,-6,-2,-5,-2,-5,4,-8,1,2,2,-2,-6,-1,5,6,-6,7,9,-4,-2,5,-10,-10,2,8,1,-6,6,-6,5,-3,4,-10,3,-3,6,3,-1,-8,3,9,-5,-3,-2,-2,-10,-9,-4,-5,-4,1,8,-5,-7,2,-8,-5,7,4,8,-6,10,1,4,-10,-8,-10,5,5,-10,-1,9,-1,-6,4,2,2,-5,3,-3,-10,4,-9,-5,8,-1,-4,-4,7,-2,6,2,4,-5,7,-10,10,4,2,4,-5,-10,7,3,-4,6,-7,-9,6,-9,-1,9,-4,1,-2,-9,-9,-7,-3,-10,-5,8,-7,-4,1,5,4,-5,6,-6,2,7,-2,-10,5,3,-8,-4,8,-7,3,2,5,6,7,10,-7,3,-1,8,4,-8,10,9,-1,-10,-8,2,2,-5,-1,-10,-1,-10,5,10,9,4,-9,-9,9,7,-4,3,6,-6,-2,-5,-7,-7,5,2,7,-5,-8,9,6,7,4,5,-9,-6,5,-5,-8,-7,-4,-9,6,7,10,3,1,-3,1,4,-9,2,2,6,-2,7,3,-4,1,3,9,-5,-8,-5,8,-1,-2,1,-10,7,2,-7,9,-4,-5,2,-6,4,7,5,3,-2,-8,-8,-2,2,9,8,1,8,2,-9,7,2,-5,9,6,-2,6,5,-4,-1,4,-1,-5,2,1,6,5,3,-9,-7,-6,9,8,10,-1,-5,2,2,6,-5,-3,6,8,-9,4,10,-6,1,-5,6,-4,10,10,3,6,-5,-6,-9,10,1,-6,3,-2,-6,9,-10,6,9,4,1,8,10,-5,-10,1,-1,4,8,10,10,9,-2,-4,8,3,-9,-3,6,-10,-5,10,7,-9,8,1,3,-2,5,-8,-3,2,3,-10,5,7,-2,-7,-9,-6,-10,-8,6,-7,-5,4,5,9,3,-7,3,2,1,4,6,8,6,-8,-4,-5,-8,-7,7,1,9,-2,-1,8,4,9,-10,5,-1,-10,7,-5,6,-8,-2,-7,-4,-3,-3,-7,3,-6,-3,10,-5,-2,-10,5,-9,-3,1,-1,-8,2,-7,8,-4,-4,-5,-2,7,-3,9,4,-3,10,-4,-1,-5,-4,9,-2,-6,10,1,4,-6,-6,4,-4,5,-3,4,3,-6,-4,1,-7,-2,-8,9,-2,8,-9,-8,-1,6,3,-7,-9,-5,7,-9,-3,-1,4,3,-4,-2,5,-5,-2,-2,1,3,-4,3,4,-8,-2,8,-1,-2,3,-8,-3,-9,-4,-1,-2,-4,-1,-2,10,-2,8,-10,10,-4,5,3,4,4,3,-2,-8,-5,-3,5,-4,-8,6,3,-2,-1,10,-7,-6,-2,-6,5,-9,6,5,9,-8,-6,-7,-2,-8,5,9,-4,-5,-5,1,7,-2,5,-4,-9,-1,9,-5,-4,8,-5,-3,1,5,9,7,5,-6,-7,5,5,2,-2,8,4,-7,-2,-5,-8,-8,6,10,-5,2,-1,9,-10,1,-9,-10,-5,-9,-7,2,5,-2,-7,2,1,3,2,-7,2,4,8,-4,1,2,8,-3,5,-5,10,-4,3,4,-9,8,10,5,-8,-3,-2,8,10,-4,9,-7,7,9,-1,5,-3,-3,5,-10,-5,-1,-1,-7,-10,-8,-2], dtype = "uint8")#candidate|5923|(630,)|const|uint8
call_5922 = relay.TupleGetItem(func_2204_call(relay.reshape(const_5923.astype('uint8'), [630,])), 3)
call_5924 = relay.TupleGetItem(func_2207_call(relay.reshape(const_5923.astype('uint8'), [630,])), 3)
func_4454_call = mod.get_global_var('func_4454')
func_4456_call = mutated_mod.get_global_var('func_4456')
call_5943 = relay.TupleGetItem(func_4454_call(), 0)
call_5944 = relay.TupleGetItem(func_4456_call(), 0)
func_3074_call = mod.get_global_var('func_3074')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_5961 = relay.TupleGetItem(func_3074_call(), 0)
call_5962 = relay.TupleGetItem(func_3075_call(), 0)
output = relay.Tuple([bop_5909,call_5918,call_5922,const_5923,call_5943,call_5961,])
output2 = relay.Tuple([bop_5909,call_5919,call_5924,const_5923,call_5944,call_5962,])
func_5970 = relay.Function([var_5907,], output)
mod['func_5970'] = func_5970
mod = relay.transform.InferType()(mod)
var_5971 = relay.var("var_5971", dtype = "float64", shape = (3, 5, 7))#candidate|5971|(3, 5, 7)|var|float64
output = func_5970(var_5971)
func_5972 = relay.Function([var_5971], output)
mutated_mod['func_5972'] = func_5972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2187_call = mod.get_global_var('func_2187')
func_2188_call = mutated_mod.get_global_var('func_2188')
call_6013 = relay.TupleGetItem(func_2187_call(), 0)
call_6014 = relay.TupleGetItem(func_2188_call(), 0)
func_3527_call = mod.get_global_var('func_3527')
func_3529_call = mutated_mod.get_global_var('func_3529')
const_6017 = relay.const([-6,-4,10,-9,7,9,-8,3,-5,3,1,5,-1,-9,6,-3,8,-5,3,5,1,-8,-2,-1,1,4,10,-8,-10,8,-3,-8,-6,9,1,1,-9,-3,1,-9,1,-2,5,-4,9,10,-2,-2,3,10,-9,-6,-2,-9,-6,-5,4,-8,1,3,-3,-1,3,-5,-9,10,8,6,6,2,6,9,-9,8,-10,-10,-5,-9,-6,-7,-1,-3,-5,-6,-6,3,10,-9,-10,8,9,-4,-1,-5,9,-4,-2,-7,5,8,-6,3,-4,2,1,-5,-8,-5,3,-7,-5,-3,7,-4,7,-6,-4,6,3,-5,10,5,10,-6,-3,7,4,-2,2,-3,-9,-10,8,-4,-6,5,8,3,-3,9,3,-3,8,6,-3,-8,10,7,6,8,8,-7,5,-2,-8,-2,9,-8,3,6,4,8,4,1,5,-1,3,9,5,-6,-6,-5,-6,-3,-8,-2,-3,-8,4,-6,-9,3,-2,-9,6,1,4,7,1,-8,9,5,10,8,5,4,2,5,10,2,-1,-5,2,-6,2,-2,-4,2,2,-8,5,-8,-9,-2,1,2,8,7,-1,-1,-7,-3,-3,2,6,-10,-4,-7,-3,2,2,4,-3,-10,-5,7,-5,10,-5,1,6,2,2,-3,-8,-9,-8,10,5,6,-10,-2,1,-5,6,-6,9,-2,-7,6,-9,8,9,9,-10,5,-5,-9,9,-3,-1,-7,6,3,-6,1,-3,3,6,7,-8,-6,-7,9,8,-3,2,-1,-1,2,-1,-1,9,-8,7,-3,-8,-7,-5,-3,10,-3,-7,-1,-7,4,-5,6,-2,-10,-10,5,3,4,-10,-10,2,3,8,-8,8,-4,-8,6,7,-10,-1,4,6,-10,5,-9,3,-6,7,-5,7,-5,-2,-6,10,-5,-10,-3,-8,-5,6,10,5,10,2,-4,-9,-4,3,-9,6,2,-2,4,-1,-3,-10,-6,-2,6,4,-3,-2,-3,6,8,5,-8,6,-8,-9,-5,5,6,8,9,2,4,-8,-9,-8,-4,6,9,-6,-2,-8,-5,-8,8,1,-7,-1,8,-9,-4,3,-9,2,4,5,-2,-3,-5,8,-5,3,3,-7,3,-8,-3,5,-2,2,-4,2,-1,4,3,9,10,-4,-8,-6,6,-8,-4,3,-1,-2,1,2,6,-7,-8,9,-10,3,-1,-9,-4,6,-1,4,3,6,7,-7,3,-3,10,-9,2,-10,-10,2,7,1,-6,-9,-10,-6,-4,1,-6,-6,-6,-9,-6,3,-8,-1,-4,3,9,10,1,-8,8,-2,-4,1,3,8,10,7,-8,-5,3,2,-1,1,8,-7,-9,-1,7,-4,-5,-10,-6,3,7,6,-5,10,-1,-10,-10,-9,5,-3,3,1,-10,3,9,-7,3,4,2,-5,-5,-5,-1,-6,-4,7,6,3,2,-9,-1,7,2,3,-7,8,-5,-9,-7,1,3,7,9,-5,-8,-9,-5,-5,10,-10,8,9,10,10,-10,-9,10,-2,7,-9,4,-4,-6,5,-8,-1,2], dtype = "int8")#candidate|6017|(576,)|const|int8
call_6016 = relay.TupleGetItem(func_3527_call(relay.reshape(const_6017.astype('int8'), [576,])), 0)
call_6018 = relay.TupleGetItem(func_3529_call(relay.reshape(const_6017.astype('int8'), [576,])), 0)
uop_6026 = relay.log2(call_6013.astype('float64')) # shape=(13, 14, 14)
uop_6028 = relay.log2(call_6014.astype('float64')) # shape=(13, 14, 14)
output = relay.Tuple([call_6016,const_6017,uop_6026,])
output2 = relay.Tuple([call_6018,const_6017,uop_6028,])
func_6039 = relay.Function([], output)
mod['func_6039'] = func_6039
mod = relay.transform.InferType()(mod)
output = func_6039()
func_6040 = relay.Function([], output)
mutated_mod['func_6040'] = func_6040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4154_call = mod.get_global_var('func_4154')
func_4155_call = mutated_mod.get_global_var('func_4155')
call_6044 = func_4154_call()
call_6045 = func_4154_call()
output = relay.Tuple([call_6044,])
output2 = relay.Tuple([call_6045,])
func_6046 = relay.Function([], output)
mod['func_6046'] = func_6046
mod = relay.transform.InferType()(mod)
output = func_6046()
func_6047 = relay.Function([], output)
mutated_mod['func_6047'] = func_6047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5078_call = mod.get_global_var('func_5078')
func_5079_call = mutated_mod.get_global_var('func_5079')
call_6197 = func_5078_call()
call_6198 = func_5078_call()
output = call_6197
output2 = call_6198
func_6210 = relay.Function([], output)
mod['func_6210'] = func_6210
mod = relay.transform.InferType()(mod)
mutated_mod['func_6210'] = func_6210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6210_call = mutated_mod.get_global_var('func_6210')
call_6211 = func_6210_call()
output = call_6211
func_6212 = relay.Function([], output)
mutated_mod['func_6212'] = func_6212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5078_call = mod.get_global_var('func_5078')
func_5079_call = mutated_mod.get_global_var('func_5079')
call_6256 = func_5078_call()
call_6257 = func_5078_call()
func_5180_call = mod.get_global_var('func_5180')
func_5182_call = mutated_mod.get_global_var('func_5182')
call_6258 = func_5180_call()
call_6259 = func_5180_call()
uop_6294 = relay.asin(call_6256.astype('float64')) # shape=(7, 6, 3)
uop_6296 = relay.asin(call_6257.astype('float64')) # shape=(7, 6, 3)
func_4759_call = mod.get_global_var('func_4759')
func_4760_call = mutated_mod.get_global_var('func_4760')
call_6309 = relay.TupleGetItem(func_4759_call(), 4)
call_6310 = relay.TupleGetItem(func_4760_call(), 4)
func_1229_call = mod.get_global_var('func_1229')
func_1230_call = mutated_mod.get_global_var('func_1230')
call_6312 = func_1229_call()
call_6313 = func_1229_call()
output = relay.Tuple([call_6258,uop_6294,call_6309,call_6312,])
output2 = relay.Tuple([call_6259,uop_6296,call_6310,call_6313,])
func_6322 = relay.Function([], output)
mod['func_6322'] = func_6322
mod = relay.transform.InferType()(mod)
output = func_6322()
func_6323 = relay.Function([], output)
mutated_mod['func_6323'] = func_6323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_997_call = mod.get_global_var('func_997')
func_999_call = mutated_mod.get_global_var('func_999')
call_6345 = relay.TupleGetItem(func_997_call(), 0)
call_6346 = relay.TupleGetItem(func_999_call(), 0)
output = relay.Tuple([call_6345,])
output2 = relay.Tuple([call_6346,])
func_6352 = relay.Function([], output)
mod['func_6352'] = func_6352
mod = relay.transform.InferType()(mod)
mutated_mod['func_6352'] = func_6352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6352_call = mutated_mod.get_global_var('func_6352')
call_6353 = func_6352_call()
output = call_6353
func_6354 = relay.Function([], output)
mutated_mod['func_6354'] = func_6354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4987_call = mod.get_global_var('func_4987')
func_4989_call = mutated_mod.get_global_var('func_4989')
call_6355 = relay.TupleGetItem(func_4987_call(), 2)
call_6356 = relay.TupleGetItem(func_4989_call(), 2)
func_3760_call = mod.get_global_var('func_3760')
func_3763_call = mutated_mod.get_global_var('func_3763')
var_6362 = relay.var("var_6362", dtype = "bool", shape = (312,))#candidate|6362|(312,)|var|bool
const_6363 = relay.const([1,5,1,2,5,-5,6,4,-1,8,8,-9,-1,-5,3,1,4,-8,1,-8,-5,5,-2,-9,9,-6,-7,9,10,-8,-2,7,-6,2,6,2,-3,-1,9,10,7,5,5,-3,-8,9,1,5,-2,-5,-6,-2,-5,8,4,3,7,5,-2,8,1,-1,3,2,-4,6,5,3,-10,5,10,-5,-4,7,-9,9,2,2,7,-3,-10,-2,-8,4,-3,-1,-7,-8,-7,8,-1,3,6,-9,7,3,-2,2,-8,-7,7,6,4,-4,10,-6,8,4,-5,6,-8,1,2,9,2,-2,6,1,-1,-3,-7,-4,6,-1,-5,-3,6,3,7,-9,-2,8,-9,9,3,5,-1,-7,8,-8,-4,6,-6,9,2,4,1,1,-10,1,2,-5,4,-10,9,3,-10,5,-7,1,2,-5,-9,2,7,-5,9,2,2,-6,-1,-6,10,-8,8,8,9,3,-10,-7,10,7,-4,5,-4,-8,-3,-7,8,2,7,5,5,-3,-5,-3,-6,4,-1,5,1,-10,10,9,-5,3,3,9,8,-3,6,-7,8,10,4,5,-1,-2,-6,-8,-10,-4,-2,10,-7,-4,1,-5,5,-8,-5,4,10,4,7,-7,-4,9,-6,-6,4,-7,-1,3,2,-5,-4,10,7,2,-7,-10,-1,-4,9,-1,-10,-7,-5,-7,2,3,-2,-2,8,-2,4,-5,-10,4,-9,-2,5,9,2,6,-1,9,-1,-2,-4,5,6,-3,-9,6,3,-8,-9,-10,-7,6,5,-1,8,-9,-10,10,-2,-2,1,-8,8,-3,-5,10,1,-7,-3,7,4,2,8,-7,7,3,9,-2,-9,4,10,-5,-1,-9,3,-4,2,8,-1,2,6,6,7,2,5,-2,-1,-7,-1,7,-4,10,10,-8,7,-9,-5,10,-4,-10,10,5,-10,4,-1,-7,3,-1,-7,3,8,7,-6,-7,-9,9,-2,-1,-7,4,-9,4,-8,4,-3,9,9,-7,3,5,-3,-3,9,7,-2,-5,-2,2,4,-5,-7,10,-10,-2,3,9,10,-2,10,4,-10,3,-7,-10,-5,10,9,7,-9,4,-6,7,-5,-6,10,-6,-10,2,8,-8,9,4,-10,-7,1,8,-4,-3,7,3,9,8,2,9,-2,-2,7,-8,8,5,-9,-5,9,2,-7,-3,-8,-8,-1,-8,-5,3,-6,-8,-8,-4,-5,10,6,2,-10,-2,6,-9,-8,-9,9,5,-6,-2,6,-3,-2,9,-6,-1,-5,-5,4,9,10,5,3,7,-4,4,-2,3,2,1,-10,-4,-9,10,-2,-5,9,4,-1,1,-7,-5,2,2,-9,-1,9,-6,4,-2,-6,-3,-9,7,7,3,-3,-2,6,6,-8,4,2,-6,7,5,4,-8,-4,-1,3,4,4,-10,1,-6,2,-10,2,-3,3,4,-7,-10,-9,1,-9,-7,-4,-3,-2,-5,1,-1,1,-3,1,4,10,-10,-7,1,7,-8,7,-5,2,-5,7,-7,-9,3,-10,9,-10,-8,-9,4,-9,6,-6,6,5,3,7,-10,-2,6,1,3,2,2,-2,-7,9,-8,-8,-2,-6,-5,-5,-9,2,-1,1,-8,-7,6,5,4,-9,-6,7,-10,-3,7,-1,-8,-4,-6,5,9,4,-3,9,2,10,-6,6,-1,10,8,6,4,7,4,6,5,-9,7,-6,5,-7,-4,-7,-3,-4,-8,-10,-8,-2,10,6,-6,-4,10,-3,7,-7,4,-7,-1,-9,9,9,6,-2,9,-2,2,9,-9,10,-2,-6,-1,3,-3,-2,4,4,5,8,3,-1,7,8,2,-1,-4,-3,1,-8,-2,9,-2,-6,8,-10,-4,-7,-1,-7,10,1,5,1,-2,10,-1,-10,1,-9,1,-9,2,-8,-10,10,-2,-6,-5,-3,-7,-2,4,-1,-9,-4,-2,7,-1,-7,-9,1,-7,8,-5,10,-4,8,4,2,10,6,-9,7,10,-10,-2,8,-7,1,7,-4,6,10,-1,-5,-8,-4,6,8,-7,4,-9,-7,1,10,1,-9,-6,-7,1,10,5,-8,-7,-10,3,2,-6,-10,-8,5,2,6,-4,7,-7,7,-2,6,1,4,7,8,6,2,-8,-3,2,-10,-10,-4,-3,10,5,-5,-9,-10,6,2,4,3,-3,-4,-6,3,-1,-5,-5,-10,-9,5,-5,-4,3,-10,-2,-10,-1,-1,-9,3,9,-6,2,-7,10,-9,-8,-5,-1,-7,10,-1,2,-8,-6,2,-8,2,-4,-1,4,1,-4,-3,3,-9,9,-4,2,3,2,5,-6,9,7,-6,9,3,6,-8,5,-2,9,-5,-7,-1,4,10,-3,9,9,1,5,-3,7,9,-3,6,8,-5,8,5,-1,3,4,-6,-7,2,10,-2,9,10,-4,-3,6,7,-5,-7,7,-10,1,-5,2,2,-5,10,-8,5,5,-2,8,-6,-2,-1,4,-10,-9,5,4,-5,4,2,-6,-1,7,-3,-5,-9,-1,-7,-2,-9,-4,2,2,5,-3,-7,6,-9,3,9,10,-6,8,5,10,1,-8,2,-10,-7,3,-1,4,-1,1,-5,-8,9,4,-6,-8,10,7,8,-8,10,1,-2,1,-1,3,-1,-9,-7,-6,9,7,4,1,3,8,-1,-7,5,-6,10,4,-10,-4,8,-1,8,6,4,-3,-7,4,-2,-8,-9,-3,4,10,10,5,6,5,-4,3,8,-6,-6,2,-1,5,7,-9,-5,8,-5,-3,7,-2,-1,-10,2,6,8,8,-8,-1,10,7,9,9,8,-4,2,-9,-2,1,-7,-9,-3,-6,9,8,-7,5,2,-1,-7,-7,-10,9,-5,3,-5,7,-1,-3,-10,2,-7,5,-10,-2,-1,6,-5,-5,-5,-4,-3,2,-4,6,5,-3,-4,2,7,1,-4,3,-3,-2,7,3,-7,-7,10,-6,3,7,-10,-3,4,-8,10,8,10,-4,-5,8,-1,-2,-2,4,-10,3,2,8,10,4,7,-5,-1,-3,-5,-8,-10,5,-9,-7,2,10,8,9,5,-9,-7,-9,-5,-5,-3,-9,3,5,7,-10,2,2,-1,-7,6,9,2,2,-10,2,-9,-8,-6,-4,-3,-3,-8,4,-8,6,-6,-9,-2,-8,7,-8,10,1,-9,1,9,8,9,-7,-4,4,7,-10,4,1,-7,-10,-5,7,3,-7,-3,2,-6,10,-3,1,8,8,9,-3,-10,-5,1,-10,-1,-1,-1,-6,-5,8,1,-5,-1,10,4,-6,4,1,5,-4,-10,1,-9,2,-3,9,2,-4,-8,-4,-6,9,4,-7,-5,7,5,9,-5,7,3,-6,3,9,4,6,-4,2,-8,8,10,-9,5,1,2,10,8,-2,5,2,5,-9,-6,-8,10,6,-5,-6,-6,10,7,-3,5,-5,9,10,-7,6,10,8,1,-1,-10,7,-6,-5,-9,7,6,-4,9,-10,3,-2,9,4,-3,-8,-1,-2,-4,-9,5,-6,-8,-7,-4,-5,-2,-1,-6,-5,-7,-3,-10,7,-2,-6,2,10,-4,-7,4,9,-9,-9,3,-4,-8,3,4,1,-6,-4,3,-10,-9,-7,-9,10,-5,10,4,-2,-3,-10,5,-4,10,-1,2,-2,-8,-5,-5,4,-4,10,10,-10,-7,1,-2,2,5,-7,-5,-7,7,-10,6,4,10,-8,8,-5,-6,4,5,4,-9,4,-1,5,-2,-10,-10,-6,10,1,2,10,6,8,10,-9,2,-3,4,-10,-4,5,-7,-4,-5,-7,-5,-4,3,-2,3,-3,7,-9,3,-9,2,-1,-5,7,2,-8,3,7,6,-8,-3,8,-7,10,6,5,3,6,10,9,-9,8,3,-7,-7,9,-8,-7,-4,2,-8,8,2,-1,-1,-6,-1,4,10,-10,8,6,-8,10,-1,4,9,5,7,-8,8,1,-8,1,8,-6,5,-2,-6,7,-5,9,2,-9,-1,1,3,-9,9,-1,-3,3,1,-1,8,-4,-8,10,10,10,8,-9,3,2,-7,-9,3,8,-7,-1,-4,9,10,3,3,-1,7,4,9,-2,-10,-7,-2,7,4,4,2,2,-5,4,-8,-10,5,7,-9,-10,-9,-4,-4,10,-10,5,-8,-6,2,2,6,-7,6,-7,-2,-6,6,3,2,7,6,5,-9,-8,2,-4,-1,-1,6,2,5,-10,1,-2,-7,-6,-10,-8,2,3,5,2,10,-1,-1,6,-4,-8,10,-7,-8,-9,-1,-9,-2,-7,-10,10,-4,8,-7,-3,1,-3,1,9,10,10,-4,6,-1,-2,4,3,-5,3,-5,1,10,-8,-6,2,4,9,1,3,-8,7,7,10,-10,1,1,-3,10,2,6,-1,-6,-8,8,2,-6,-10,6,-2,4,6,-9,-6,10,-2,2,9,-4,6,8,-7,-5,-7,6,-1,-5,8,6,1,-10,4,-6,1,-10,3,-6,-2,7,4,-1,8,4,9,7,-7,3,-10,-4,1,9,2,6,8,5,9,-9,-1,-10,-4,-10,-6,10,-4,-1,6,10,-7,4,-10,-7,5,7,-10,8,-5,-3,-3,-1,7,3,1,-5,-2,4,-8,-10,-1,-10,-5,5,7,3,2,7,5,7,7,-6,1,-10,5,1,-8,-6,-7,3,2,-4,-9,6,-4,1,4,-10,-9,3,10,-1,5,1,2,-8,9,7,-4,3,-7,-1,4,-6,-2,9,1,10,9,9,-5,-4,-8,4,5,2,-4,2,4,10,-5,8,1,3,9,-1,-9,-1,-7,9,-4,3,5,3,1,3,-4,-3,1,5,10,-6,-1,5,2,10,-6,4,-8,1,2,-5,-7,1,6,7,4,-2,10,4,3,10,7,-1,8,-2,7,7,8,9,-8,10,10,6,3,-4,4,-6,-5,-3,10,-5,7,-1,2,10,8,1,-6,-10,6,5,-7,10,9,-6,3,8,-5,-4,8,-8,-6,6,5,10,1,5,8,9,1,8,7,3,-4,-9,-10,1,-6,-9,7,4,7,-6,-5,2,-10,-9,8,-9,8,7,6,6,-8,-3,-8,-1,-8,-2,1,8,-6,-10,-8,9,10,-4,5,-6,-8,-8,-8,3,-7,9,-9,-1,6,1,4,-10,5,1,-7,-3,-8,1,-9,3,1,5,-9,-7,10,10,6,-10,-5,3,8,7,6,-3,4,2,-8,-5,3,-3,-8,9,-3,6,-10,8,-4,3,2,-4,1,-10,-3,5,7,-9,1,10,8,9,-7,-3,1,3,-3,-10,5,5,-6,-3,10,-7,-1,4,5,5,-2,4,-8,7,-4,-8,-8,6,-5,7,1,6,-3,9,-8,9,-5,-3,10,6,10,2,9,2,-6,-9,4,-9,10,4,-4,-7,-8,4,2,-1,-4,-10,2,6,4,-5,3,-7,3,8,-6,6,7,1,10,4,6,6,8,8,-5,2,6,-10,1,-6,-3,3,4,9,-8,7,-9,-2,5,8,-2,8,10,-8,-8,-7,7,-10,4,7,4,-5,-9,9,8,3,-10,9,1,-10,-2,-9,-9,-1,2,-4,-4,-1,-6,6,-10,4,-4,-1,-10,5,9,4,4,-10,5,-5,1,-3,-8,10,2,9,9,-10,-10,3,-8,7,2,10,-9,8,1,-8,-2,7,2,-9,-8,2,-3,-9,-3,5,-4,-5,-10,-5,-6,-7,1,4,2,6,4,7,-4,10,-3,-3,10,1,2,-10,-1,9,-3,-7,6,-2,-3,8,5,7,5,-4,9,-4,3,9,10,-4,-9,-5,-6,5,-8,-1,3,1,-7,2,2,6,9,-7,-3,2,-4,9,6,3,9,8,-9,1,-6,1,8,-1,-3,7,-1,-8,-8,9,2,-9,-4,-4,-6,1,7,-7,-9,3,-1,10,9,-9,4,2,-9,-9,-10,8,-2,-7,10,4,-4,-5,-7,-9,2,5,7,4,-2,1,-9,-7,9,-8,8,10,10,9,8,-8,-5,6,2,-7,4,6,8,-2,5,-6,5,7,9,5,-1,8,7,7,4,6,2,9,5,-7,-3,-5,8,6,-9,5,-5,5,6,3,-6,8,-1,1,10,8,10,-4,9,-6,-10,-8,3,-6,5,-1,-6,-2,7,5,-1,1,-10,2,4,8,8,-6,9,-1,1,9,2,6,-5,7,6,9,-2,7,-8,9,-1,8,8,6,3,7,-7,5,6,7,-9,-9,-9,8,-9,3,3,-10,3,2,-9,1,4,7,-5,9,3,4,4,7,-10,-5,-4,-6,1,10,9,-8,-7,-10,-1,8,-8,-6,-6,-8,-5,-9,-8,-3,7,10,7,6,5,8,-6,10,9,-6,10,1,-7,-4,9,3,-3,9,-5,3,2,7,-6,-4,4,-9,-4,-2,3,5,3,6,-4,-5,-2,8,10,4,2,-4,-7,-3,-5,3,8,8,5,1,-10,8,-7,-10,2,6,3,2,-2,3,9,5,-4,-1,8,-10,-8,-2,5,-3,-7,4,-6,-10,-3,-6,-8,10,-4,3,-4,-10,-1,9,-6,4,-9,3,-7,4,5,2,10,7,4,-6,1,5,2,-8,6,4,-2,-3,-10,-9,-10,10,5,-6,5,9,9,8,10,2,1,3,2,4,-4,9,-6,-4,8,1,-1,1,-6,3,-6,2,-10,-1,-3,-4,-10,3,-4,8,-8,-5,-9,10,7,1,-10,-1,8,-5,-8,7,4,5,-6,1,-10,-4,-3,4,10,3,8,10,-7,6,4,5,-3,7,3], dtype = "uint64")#candidate|6363|(2548,)|const|uint64
call_6361 = relay.TupleGetItem(func_3760_call(relay.reshape(var_6362.astype('bool'), [312,]), relay.reshape(const_6363.astype('uint64'), [2548,]), ), 3)
call_6364 = relay.TupleGetItem(func_3763_call(relay.reshape(var_6362.astype('bool'), [312,]), relay.reshape(const_6363.astype('uint64'), [2548,]), ), 3)
output = relay.Tuple([call_6355,call_6361,var_6362,const_6363,])
output2 = relay.Tuple([call_6356,call_6364,var_6362,const_6363,])
func_6368 = relay.Function([var_6362,], output)
mod['func_6368'] = func_6368
mod = relay.transform.InferType()(mod)
mutated_mod['func_6368'] = func_6368
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6369 = relay.var("var_6369", dtype = "bool", shape = (312,))#candidate|6369|(312,)|var|bool
func_6368_call = mutated_mod.get_global_var('func_6368')
call_6370 = func_6368_call(var_6369)
output = call_6370
func_6371 = relay.Function([var_6369], output)
mutated_mod['func_6371'] = func_6371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2187_call = mod.get_global_var('func_2187')
func_2188_call = mutated_mod.get_global_var('func_2188')
call_6385 = relay.TupleGetItem(func_2187_call(), 0)
call_6386 = relay.TupleGetItem(func_2188_call(), 0)
var_6387 = relay.var("var_6387", dtype = "bool", shape = (13, 14, 14))#candidate|6387|(13, 14, 14)|var|bool
bop_6388 = relay.divide(call_6385.astype('float32'), relay.reshape(var_6387.astype('float32'), relay.shape_of(call_6385))) # shape=(13, 14, 14)
bop_6391 = relay.divide(call_6386.astype('float32'), relay.reshape(var_6387.astype('float32'), relay.shape_of(call_6386))) # shape=(13, 14, 14)
output = relay.Tuple([bop_6388,])
output2 = relay.Tuple([bop_6391,])
func_6401 = relay.Function([var_6387,], output)
mod['func_6401'] = func_6401
mod = relay.transform.InferType()(mod)
mutated_mod['func_6401'] = func_6401
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6402 = relay.var("var_6402", dtype = "bool", shape = (13, 14, 14))#candidate|6402|(13, 14, 14)|var|bool
func_6401_call = mutated_mod.get_global_var('func_6401')
call_6403 = func_6401_call(var_6402)
output = call_6403
func_6404 = relay.Function([var_6402], output)
mutated_mod['func_6404'] = func_6404
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6413 = relay.const([[[-6,8,5,-9,2,-3,-1,10,-5,5],[-10,1,1,7,-10,3,-3,9,4,3],[1,-4,8,-6,-2,-4,-1,-4,-9,-4],[-9,7,7,-10,-4,-8,8,7,-4,6],[6,-10,-6,-9,-7,-6,-9,8,10,6],[2,9,6,3,-1,-7,2,-3,-2,-5],[-7,-7,3,2,-5,7,4,7,-4,-9],[-1,3,4,2,-10,6,8,-6,9,6]],[[8,-3,-1,-4,3,1,8,9,-2,9],[-10,1,-8,-10,-7,-3,2,-9,8,-10],[-7,-7,5,-8,-9,-10,1,6,8,-6],[-4,2,-7,-9,-6,-6,-9,9,-8,-10],[-5,-5,-4,6,7,-9,-1,7,1,10],[4,-2,8,-7,-10,3,-9,-4,9,5],[9,7,4,-7,9,-4,-5,5,10,10],[-9,9,-1,-1,10,4,-9,-1,-6,-9]],[[8,-9,-4,6,8,-5,-9,7,7,8],[-5,9,7,8,-10,10,4,3,-6,1],[-7,1,1,7,7,5,10,-5,-6,2],[-1,6,-2,3,-9,3,1,3,-3,1],[-6,9,2,6,-6,4,1,-3,8,-2],[-10,-3,9,4,6,2,-4,1,7,-4],[4,-2,-7,-9,-3,-3,5,6,4,8],[5,-6,-2,-5,-2,2,8,-2,-1,1]],[[1,-8,2,10,2,-7,-9,8,-8,8],[3,-10,6,-5,3,2,9,-10,-2,6],[10,4,6,1,-4,-6,9,-7,9,3],[-9,-8,2,1,10,-1,3,-2,-7,3],[-1,10,4,-8,-1,-7,-3,1,2,-1],[-1,5,-6,-3,1,4,-4,6,2,-2],[-3,5,1,1,-2,-8,-5,-7,3,3],[5,-7,-2,6,9,8,7,9,-1,-3]],[[-5,6,-5,10,-4,-1,-10,7,-5,7],[10,-7,-1,5,7,5,-7,1,-5,-10],[-1,7,1,-5,-6,8,10,-3,2,-10],[-3,2,-7,4,3,8,-4,7,-8,2],[7,-10,-7,-5,-8,-9,-2,-5,-5,1],[-4,4,-6,5,-3,8,7,4,-10,5],[6,10,-7,6,-5,-10,6,9,4,3],[-1,7,8,3,2,5,2,-3,2,2]],[[4,10,-5,1,-5,7,5,7,5,1],[-8,5,-6,2,8,7,4,-4,-6,-8],[-9,-8,-9,8,-5,-3,-9,-6,7,-3],[9,-8,9,6,7,8,-1,10,1,5],[-1,10,9,5,3,-2,7,-7,-4,-4],[7,8,-8,7,10,-5,2,-3,1,-8],[5,7,2,10,9,8,6,5,8,-1],[-5,1,10,-10,-3,5,10,2,8,-7]],[[-8,2,-5,-5,-8,-3,-3,-10,-10,5],[-1,-1,-2,3,7,-4,7,6,-2,4],[7,3,-4,2,5,7,-8,7,1,10],[9,10,2,9,9,6,-3,-6,1,-8],[5,-4,-4,-5,-10,3,-2,7,-1,8],[10,-5,-2,-7,-9,1,10,9,6,-9],[2,8,-4,-8,1,-6,1,-3,10,-5],[-7,-3,4,3,9,-6,3,-4,1,4]],[[7,3,9,10,8,-10,-6,3,6,-7],[7,3,1,9,-9,-4,-2,6,-2,5],[-4,6,8,9,5,-9,1,-6,-1,-4],[9,7,-4,-5,9,-8,-4,4,-4,-6],[-9,3,6,2,-4,8,-2,-5,7,-3],[-1,-1,5,-9,-10,-10,-9,-9,-2,-4],[7,10,-4,8,-8,-10,-3,-5,8,-1],[-8,-5,4,4,7,4,8,5,-10,5]],[[-5,-6,8,1,3,4,1,-8,5,2],[-10,8,-10,-1,-8,-10,-3,-5,6,-7],[-8,-2,-10,5,-4,9,-3,3,-10,6],[3,2,2,7,1,-9,-4,-9,5,2],[-1,5,-8,7,-3,5,-1,-1,4,1],[1,4,4,10,7,9,2,2,-10,-7],[4,-8,1,-7,5,-10,-1,10,10,-3],[1,-5,-5,3,5,-8,-4,-7,-4,-9]],[[4,7,-6,1,8,-2,-5,4,-3,-5],[6,1,-10,6,3,-6,5,-2,-10,-8],[6,-7,-9,3,7,4,3,-5,2,-10],[-7,3,8,4,8,-6,5,9,6,8],[2,-9,7,-2,3,5,-8,1,-4,6],[8,10,7,7,-1,-9,9,10,1,-9],[3,6,2,7,-4,-2,5,8,-1,-7],[4,-7,-3,-10,-8,1,-5,-3,6,-5]],[[-1,7,-8,9,-1,-2,-2,7,8,4],[-8,-1,3,10,-2,-10,-1,-10,-1,8],[5,7,3,-5,-3,10,3,4,3,-5],[-8,-9,-3,10,8,-6,-10,-10,-6,5],[-3,1,-6,4,-9,-6,6,-8,4,3],[-5,-5,-1,-9,2,-6,-1,-3,-4,-6],[-5,-9,-8,10,-4,6,-9,6,7,-8],[-1,4,-3,-1,-5,9,-7,-1,-5,9]],[[-3,9,-7,3,-10,5,-5,-5,7,7],[-3,1,5,7,4,-9,2,-8,-3,-6],[-2,-6,9,7,-7,7,-1,10,-2,-5],[-4,1,4,-6,10,10,1,9,7,-6],[-10,-4,1,6,10,8,-8,9,-2,-9],[-5,4,-4,7,-1,-8,6,-2,4,10],[9,-10,-1,-9,2,-5,8,4,-4,-5],[-4,8,3,-8,-5,-4,10,-9,1,-4]]], dtype = "int64")#candidate|6413|(12, 8, 10)|const|int64
const_6414 = relay.const([[[10,-4,4,6,3,8,-8,-9,-8,3],[-1,-10,-8,6,7,-3,9,-6,7,4],[-3,3,1,-10,-10,10,-1,6,3,7],[9,4,9,10,1,-6,-8,8,3,-10],[-3,6,3,5,5,3,-4,-1,-7,9],[-7,-4,5,4,-10,-3,-7,8,3,3],[5,-2,-4,-4,-6,-9,-9,5,5,-2],[-4,-9,-5,10,-2,4,2,8,8,7]],[[4,-4,10,-9,-9,-9,7,7,-5,-8],[1,-4,-7,-6,-4,-1,-10,-3,6,-3],[-2,-1,2,-1,-2,-4,2,-5,2,-5],[6,-5,1,-7,8,4,-4,-9,1,-1],[-8,8,-5,-8,-6,-3,9,1,6,8],[7,5,5,6,-3,-8,6,-10,9,-7],[-3,9,8,5,-5,-9,-3,4,6,3],[-8,10,-9,4,10,-4,4,8,-3,-8]],[[-4,-3,-9,6,-8,7,-1,10,9,7],[7,-4,-7,5,-5,-10,-7,-7,-1,-4],[-1,-7,-9,-2,2,8,3,2,-4,9],[9,-8,4,5,-6,6,-1,2,9,6],[5,3,-6,7,-2,-9,6,9,3,-7],[4,-6,6,7,-2,-9,9,-5,8,6],[8,3,3,6,-10,6,-6,-1,2,10],[-10,-3,4,3,9,4,-7,3,-10,7]],[[-2,4,-5,2,4,1,2,5,1,-8],[9,10,-10,5,10,10,3,9,2,5],[-5,9,10,3,-2,-4,2,5,4,2],[2,-5,-9,-4,8,-4,-8,10,9,-1],[-4,-1,8,-10,6,6,5,6,10,4],[1,-10,-3,9,6,2,-7,-8,-9,-5],[10,4,5,-1,9,-2,3,1,4,7],[-2,-10,10,-3,-6,-3,-2,-4,-6,-3]],[[-10,5,-8,-9,-8,4,5,-8,2,3],[2,6,4,4,-7,-7,3,-10,10,-5],[6,-8,-5,-8,-10,7,-9,-9,-7,5],[9,10,-5,2,10,6,1,6,2,3],[5,5,6,-10,-6,-6,-8,8,-7,-1],[-10,-4,2,-6,-4,-6,10,-6,9,9],[1,-2,-4,-4,-1,-9,-3,1,-2,10],[6,8,1,-2,8,-6,9,-9,8,-7]],[[8,9,10,9,-9,-10,6,2,-2,8],[8,-8,-3,3,10,-10,5,-4,-1,6],[3,-6,-6,8,3,-7,-1,-9,3,6],[1,4,7,-10,10,-8,-4,1,3,9],[7,-8,-4,-5,-10,-2,8,6,3,-4],[1,-5,-6,-6,-6,-6,2,3,2,5],[-8,-2,3,2,3,-9,7,1,10,2],[-4,-1,2,-6,-2,8,-8,-8,8,6]],[[-7,-6,-1,-8,6,-9,10,-1,-3,-9],[-6,7,-7,4,7,9,-5,8,3,6],[-8,2,-6,2,-7,-6,-10,-6,10,-4],[-10,-2,-9,-10,8,2,3,-6,6,-10],[-1,-6,1,-9,4,9,6,10,6,8],[7,2,3,-3,-5,1,-9,-6,3,-1],[-9,-2,6,2,1,5,-1,2,-4,2],[7,-3,4,-9,7,3,-2,4,-6,-9]],[[-8,9,-3,3,5,5,3,-10,-9,2],[-9,-3,10,1,4,3,6,1,-2,-7],[2,-2,-1,-9,-3,8,6,7,9,-1],[9,4,7,-7,10,9,5,6,-6,-8],[-6,3,8,-9,7,9,-6,-1,10,6],[-1,3,-6,4,6,3,6,5,5,2],[-3,-7,-6,6,10,8,-6,-9,-10,6],[-3,-7,4,-5,-5,2,8,1,-2,1]],[[-8,3,-10,6,-5,5,1,9,5,6],[-10,9,2,5,-6,5,-5,-6,1,4],[-4,4,-2,-3,-8,6,1,-10,-5,6],[9,-7,-10,-1,7,-8,6,-8,-6,5],[2,-4,9,6,6,7,-3,-2,-9,5],[8,-9,-7,5,10,7,-3,4,6,-6],[-4,-10,9,-2,-4,-4,-2,7,10,1],[1,-1,-3,-6,9,-9,-9,9,-10,-8]],[[-10,7,5,-9,7,6,-2,-4,-6,-1],[-4,-5,1,1,-7,-8,-1,-8,10,-5],[1,-6,-10,5,-1,-8,-1,8,-9,5],[-7,-4,9,-7,1,-7,3,3,-6,-9],[9,3,-2,-3,-9,-8,1,-5,4,-1],[-3,-7,-2,10,-3,6,-6,-3,8,-9],[2,3,9,-6,-1,-8,-5,-1,-5,6],[9,1,9,-6,-8,5,-4,5,-8,6]],[[8,-6,-9,2,7,4,-8,-5,-7,-5],[8,6,10,-5,4,10,3,7,-10,-8],[4,6,6,-10,-2,9,7,-2,-9,-5],[-6,7,10,3,-2,8,-4,-8,6,5],[-5,10,4,-8,6,-7,10,-6,-7,-10],[-2,5,-3,-8,2,-8,10,2,-9,6],[-6,10,9,6,-4,5,7,2,4,10],[3,-5,-8,-8,7,-2,9,1,-7,5]],[[5,7,-1,-1,-1,3,1,-9,-4,5],[3,8,-9,-1,6,-10,-6,-1,8,-2],[-3,2,-2,2,-10,-1,4,6,-8,10],[10,5,8,5,-7,4,-3,-3,-1,-4],[2,3,-5,-9,-3,7,10,-3,5,6],[-6,-4,-9,5,4,1,5,1,-1,2],[-3,1,-10,-2,2,-7,-10,-7,-7,-9],[4,-8,3,10,2,-10,-3,-8,3,8]]], dtype = "int64")#candidate|6414|(12, 8, 10)|const|int64
bop_6415 = relay.left_shift(const_6413.astype('int64'), relay.reshape(const_6414.astype('int64'), relay.shape_of(const_6413))) # shape=(12, 8, 10)
output = relay.Tuple([bop_6415,])
output2 = relay.Tuple([bop_6415,])
func_6420 = relay.Function([], output)
mod['func_6420'] = func_6420
mod = relay.transform.InferType()(mod)
mutated_mod['func_6420'] = func_6420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6420_call = mutated_mod.get_global_var('func_6420')
call_6421 = func_6420_call()
output = call_6421
func_6422 = relay.Function([], output)
mutated_mod['func_6422'] = func_6422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6427 = relay.var("var_6427", dtype = "float64", shape = (4, 3, 4))#candidate|6427|(4, 3, 4)|var|float64
uop_6428 = relay.exp(var_6427.astype('float64')) # shape=(4, 3, 4)
uop_6441 = relay.sinh(uop_6428.astype('float64')) # shape=(4, 3, 4)
func_3074_call = mod.get_global_var('func_3074')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_6451 = relay.TupleGetItem(func_3074_call(), 0)
call_6452 = relay.TupleGetItem(func_3075_call(), 0)
func_1118_call = mod.get_global_var('func_1118')
func_1123_call = mutated_mod.get_global_var('func_1123')
var_6463 = relay.var("var_6463", dtype = "float64", shape = (126,))#candidate|6463|(126,)|var|float64
var_6464 = relay.var("var_6464", dtype = "uint16", shape = (1120,))#candidate|6464|(1120,)|var|uint16
const_6465 = relay.const([[False,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True],[False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,False],[False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,False,True,True,False,False,False,True]], dtype = "bool")#candidate|6465|(3, 104)|const|bool
const_6466 = relay.const([-1,-10,10,-6,6,10,-5,9,-1,-8,9,9,2,-9,-2,-2,3,3,-10,2,6,7,9,1,2,8,-1,3,4,10,-2,8,-6,1,-10,3,-7,1,-8,-5,-10,-2,-8,6,-8,-10,9,-8,-9,-1,3,4,6,-5,8,7,-3,-10,-5,-4,3,5,-4,-6,-3,-1,-3,-8,2,7,3,7,2,-6,-6,-2,-8,10,2,-4,-5,3,10,8,5,2,-9,2,8,10,10,-2,3,-10,-8,-1,-9,-10,8,-3,-3,-10,1,4,10,3,10,-10,-5,-9,5,7,-8,5,9,8,-10,-4,10,2,6,2,1,10,-4,-1,10,-5,9,4,-5,-9,1,-7,3,-1,-7,6,6,-3,4,-9,6,-3,-3,10,-9,4,2,9,5,6,-2,9,8,-10,8,9,3,-8,10,6,-8,-7,6,-8,5,-2,-6,-9,-2,7,6,5,-1,-8,4,-8,6,5,-3,-10,4,-9,2,-5,5,-6,9,2,8,-10,-6,5,4,-2,10,5,-6,6,-2,-4,-2,-10,4,2,-4,2,-1,-1,-6,1,-9,-2,3,-2,-9,-2,7,-4,3,-2,-10,-8,3,5,-4,-5,-5,7,5,2,8,-4,5,-7,-8,5,3,-7,3,-6,-8,-10,-8,-10,-10,6,6,4,-2,10,-10,-7,10,-1,-8,2,10,1,-10,-2,5,8,-9,-5,-3,-2,1,6,-5,-6,6,1,9,3,-4,10,2,-5,2,4,6,-8,3,-8,-1,-1,2,10,-3,3,-7,-9,2,-9,-3,-10,7,5,2,-10,10,1,-3,-5,5,8,-10,-8,-10,-9,-10,-3,6,8,-3,-2,-2,-9,3,3,-2,9,-7,-4,-6,3,1,4,6,-5,2,4,-10,9,6,1,-5,10,9,-1,9,2,2,7,-10,6,10,8,-4,-3,-2,-8,5,9,4,-9,-5,-10,9,-4,-10,4,4,-9,-10,-9,-7,7,7,-7,7,-1,-9,1,10,10,8,1,-6,10,-5,8,8,-5,3,-5,10,-5,10,-10,1,-2,1,-1,-6,-3,-10,4,-8,4,-10,6,-6,2,6,8,-1,-10,-6,9,2,4,5,-1,-6,6,5,-8,2,-8,-4,-8,9,-5,-9,-8,8,-6,-9,-6,3,2,2,8,2,4,4,-8,10,-7,-10,3,-6,-1,-7,9,8,7,-3,-6,2,-10,-2,7,-4,2,-9,1,5,2,8,-9,5,6,2,3,-2,10,1,-7,-4,-8,5,8,-3,9,2,-8,5,-4,-8,10,-8,-5,10,4,10,-4,-3,-4,-5,-8,2,-5,-3,-3,-6,2,-5,-4,6,6,-10,-10,7,9,-6,8,-6,2,-3,-8,-10,-4,-7,8,6,9,6,-1,3,4,9,-7,6,4,-6,10,-3,1,-5,-3,-2,-9,2,-3,9,4,9,5,-1,-7,-1,3,3,6,-2,7,3,-4,5,10,3,6,-7,7,9,-5,3,8,1,-2,-5,6,-6,-3,-8,-6,8,2,2,5,7,6,7,4,8,-2,-6,10,-9,-2,5,7,-2,1,2,7,-6,-9,-9,-5,-10,9,-3,7,-2,-10,-1,-2,-10,6,1,-1,-8,-1,3,5,3,9,-5,-10,7,3,9,-10,-2,-10,10,9,-2,-7,8,-8,8,-9,-4,-7,8,-1,-9,5,5,-4,7,-7,6,5,7,-7,3,-7,2,9,6,-9,1,8,-1,3,6,8,5,7,7,9,7,-8,-8,3,7,2,-7,-3,3,-6,-7,2,-8,-6,-3,6,8,3,10,-1,7,4,4,-2,-5,-5,-5,-4,7,1,-4,-4,-10,8,2,-7,-5,-4,-10,7,7,8,10,-8,-4,1,-7,-8,-1,-6,-8,-3,-8,3,3,5,-1,-5,-7,-9,1,8,-4,-4,-5,-7,7,-5,5,5,7,10,-5,10,-8,-4,9,-9,-8,-8,-5,-5,5,9,9,9,-4,-5,-4,10,6,-10,-5,7,-2,-8,2,-1,-7,-8,-4,4,8,4,6,3,-7,-8,4,6,2,4,9,-10,6,3,-5,-10,8,-4,-10,-10,-1,-9,-6,10,-1,2,10,6,-10,-9,-8,9,-3,-4,-1,7,-3,-7,-1,4,1,-4,8,10,1,-4,-6,-6,-5,9,-3,7,5,2,1,10,4,5,-3,1,-4,-2,-9,9,-7,9,7,5,-10,-9,-4,4,-2,1,6,1,8,-2,2,-10,-2,-10,-5,-2,-3,-5,-10,5,8,9,-10,3,4,7,-7,-6,6,-1,-2,-5,5,-3,6,1,6,5,-8,5,6,-7,-9,-3,10,5,10,-8,7,-4,-9,-7,2,-10,2,4,7,10,-8,-8,-10,10,-2,-7,-10,-2,-5,-2,2,-1,9,-2,-9,-2,-9,5,5,1,6,6,8,-2,6,-10,-10,-3,-8,-5,1,-6,-8,-2,-8,8,-9,-9,2,-10,9,-9,2,-8,-10,7,-8,2,4,9,-6,-6,-3,2,8,8,-3,-6,10,7,-7,-1,-7,-3,8,-3,-2,9,-3,3,-4,-9,-9,-6,-9,8,5,-2,-6,-3,8,-1,4,8,-3,-9,3,6,4,-10,4,8,-1,4,-7,4,-1,-8,6,-4,-6,-6,2,-10,7,-9,9,-10,10,-10,9,4,10,6,-5,-5,-3,9,-6,-2,-10,3,10,2,7,7,-7,-9,3,4,-6,-1,3,-6,9,-3,-1,-10,10,-9,3,3,8,-10,-9,-1,5,-6,3,9,-2,-3,-9,-3,5,5,9,10,2,-10,-6,6,4,2,-5,-1,5,1,-7,2,8,9,-5,-7,-1,-6,10,8,3,1,-3,7,6,-10,2,-2,9,-8,-10,-1,-1,-8,10,-5,8,-3,10,-8,7,9,2,-10,5,-3,-4,-8,3,8,-1,-6,-10,-1,8,7,7,-7,-9,8,-6,1,-7,-4,4,-2,4,-6,-7,-5,6,2,-9,-2,5,-4,-5,10,-3,-2,6,-4,4,-7,8,-7,5,8,8,6,-2,-2,-7,-6,-7,-9,-4,5,4,-10,3,5,-9,-4,2,10,-10,10,-7,10,-7,-8,2,9,-7,-6,-8,-10,3,6,4,1,8,-3,-8,-10,-2,7,4,-9,7,-3,8,4,9,-1,5,9,3,-10,-7,-7,-9,-4,-10,-3,-2,-4,8,-4,-9,10,-8,9,2,-2,10,-9,-6,9,10,3,-6,2,6,-3,-2,-6,5,-2,5,-8,-5,-3,2,7,3,3,8,7,3,8,4,-6,1,8,3,-2,-4,1,6,7,-9,-3,6,-2,10,4,6,-5,-9,-3,-8,3,10,8,-4,-9,5,-4,10,10,8,3,6,-10,-10,9,10,10,8,7,-10,6,8,6,6,7,-10,7,-10,-10,2,8,3,-3,3,2,-6,-1,-8,2,5,-9,10,10,5,-10,-1,-8,-4,5,10,-3,8,3,-2,-2,-4,1,-7,4,3,8,2,-6,6,4,-1,-6,-10,4,6,9,7,4,1,5,-3,7,10,2,5,3,10,4,8,9,6,-4,10,-6,-9,6,-5,-7,-4,-10,-4,4,4,-1,-8,6,2,4,1,2,4,-2,-9,-3,-10,6,9,8,-10,6,3,9,-6,-7,4,7,-7,6,-9,-3,-5,5,-8,7,-5,-3,7,-4,-6,7,2,9,-2,7,7,4,-6,-6,-5,-2,6,-9,-9,5,5,7,-6,7,3,-3,4,2,8,6,-1,-4,-6,-9,7,2,5,-1,8,-3,2,1,3,5,1,7,-10,8,-3,10,-8,3,-2,6,-2,2,5,9,-7,1,6,2,6,-9,-5,-10,1,-8,-8,2,-1,6,-8,-4,-9,-6,3,-10,-6,-2,8,-5,5,-2,8,-5,-10,7,-5,-4,-9,1,6,5,-10,4,6,7,-7,-6,-2,-5,1,-10,-6,3,5,-9,7,5,-8,-5,2,-10,10,-3,-7,7,-2,-6,-3,6,-7,1,9,-9,-6,-3,-6,-5,-7,1,9,-3,4,1,-10,-5,2,-9,3,7,-2,-8,-3,7,1,7,-3,-1,10,4,1,-7,7,-5,5,10,4,8,-10,1,-2,-3,7,-1,8,-8,-9,3,2,6,1,7,-5,5,1,-9,4,-7,6,9,7,2,-4,-2,2,-4,-8,-10,-5,8,-1,-10,-9,-6,-6,10,4,-9,-6,3,-1,-2,-7,1,7,1,-6,-3,-7,-1,-5,6,2,8,-8,-7,9,9,-4,-1,10,9,10,-3,2,-9,5,-6,5,-5,6,-4,-3,-2,-5,-8,-4,3,10,2,9,8,-1,9,10,-8,5,-1,5,7,-6,-5,3,-6,-3,2,-2,-4,-7,-6,6,-1,-4,-3,-8,10,-7,-4,-2,-3,1,-7,-6,-3,-3,-9,-2,1,-5,-6,-5,6,-3,2,3,2,-1,-4,-9,1,5,-2,10,-5,-8,-7,9,-4,-4,-2,10,-10,3,7,2,-6,7,5,1,-2,3,1,1,-6,10,3,-2,-10,-8,8,4,-6,-2,-6,-1,10,-8,-7,4,7,3,-5,-4,1,1,-1,-3,-6,7,6,10,3,-6,-8,-6,-6,4,4,-6,9,4,2,8,10,10,5,-1,10,1,-2,5,-5,-1,7,6,5,-8,5,3,-1,-1,-2,7,4,2,-6,-5,-5,4,4,-10,9,-3,5,-2,-8,-7,7,-6,3,-8,4,3,-10,1,-6,10,-2,10,1,-6,-4,1,6,-4,-5,9,6,7,9,-9,-1,-2,1,2,3,1,10,1,-9,-6,-9,-2,-7,2,-8,-2,-9,-4,6,2,-4,9,5,10,6,10,1,4,-2,-5,-7,-3,-3,9,-5,-1,4,-2,1,-6,-8,-4,-10,-8,-5,5,3,-2,-7,10,-2,10,2,-6,6,9,10,-4,2,-3,6,-10,-7,7,-1,-5,-7,-10,9,-1,-10,10,4,8,-5,-2,10,1,-4,1,-5,-10,-3,1,-6,8,3,-6,1,2,7,-10,7,2,10,-9,-2,-7,-9,1,-3,3,-9,4,5,8,1,6,-9,-1,6,4,-9,4,-3,5,-6,-3,-9,4,2,-5,10,-3,4,8,4,-7,-4,4,8,3,-10,-6,3,3,2,2,-1,-8,1,-2,-7,9,-10,1,2,1,-2,1,6,3,-3,-9,2,-7,3,-9,10,2,-10,-7,6,-6,-6,-6,-2,10,5,-8,-7,1,6,-10,7,6,6,-2,3,3,-7,-2,9,4,3,3,9,-2,2,-1,6,8,3,6,-8,-7,-7,3,3,10,-9,10,6,3,5,-9,-3,5,-7,-4,-8,-1,10,-3,-9,-2,5,-8,-5,-1,7,3,8,-6,7,-1,10,1,6,-6,-6,-5,10,6,-4,-6,-8,1,-7,1,8,10,-4,10,7,-4,2,-8,3,-10,10,8,-6,-1,5,-6,6,10,9,9,-6,10,4,-2,9,-6,9,6,2,-8,-1,-9,-2,-6,-1,-6,-10,4,-4,3,-10,4,-4,3,-10,-4,-7,8,3,10,-1,-10,-7,-4,-1,-6,-7,-10,-3,-8,6,-5,-4,2,-7,3,3,8,6,-10,-9,9,9,9,-2,6,-7,-1,-4,-10,7,10,5,-9,9,1,8,-6,-7,8,9,7,4,9,-1,10,4,-2,-7,-3,2,6,2,-4,8,8,7,5,3,3,7,-6,3,-10,-8,-9,-7,-8,-1,-7,6,6,3,9,9,2,5,-5,-3,-3,9,1,8,-4,4,8,9,5,9,-9,-8,-2,-8,-3,3,-6,-7,8,-6,6,6,-10,-10,-8,-1,-7,10,1,-6,3,-10,4,3,3,-6,9,-3,-6,6,-3,-3,-7,10,2,-2,-7,-3,-10,-7,-8,-9,5,-8,6,5,2,-8,10,6,-5,-7,3,-5,6,3,5,3,-6,10,-4,1,-4,4,10,8,-8,-8,-6,-1,5,8,-8,9,-9,-9,-6,8,3,6,10,7,-8,1,7,6,-8,3,3,-3,5,-5,2,10,5,-7,7,-5,8,-9,-9,-9,9,-4,-8,-7,9,-3,-5,-6,-9,7,8,3,9,-3,8,5,7,-2,-6,-7,10,6,3,8,-7,-9,9,1,5,8,9,3,-3,-1,3,-4,8,-8,1,2,-3,3,3,1,9,1,3,3,10,-4,4,4,7,-10,10,-6,-2,-4,-2,-3,4,-10,10,2,-9,-3,-6,2,10,2,5,4,7,-10,-5,-2,9,-6,5,-10,-4,-7,9,4,3,-3,5,6,5,3,-1,7,-6,10,10,-8,-3,7,-6,3,-8,-8,4,-7,9,7,6,1,-8,5,-1,6,-10,7,-5,-5,-7,-8,-6,9,8,5,-3,-7,-7,1,-7,-3,-2,-3,1,2,9,-10,-6,10,7,9,4,-3,8,1,2,2,-2,-1,-3,2,4,8,-1,5,6,9,7,2,-5,3,-5,-1,2,-10,6,6,2,-1,2,4,-7,-9,5,2,-4,-7,-1,-6,2,-5,-7,-10,5,-5,-5,-7,2,-9,-9,6,5,2,6,7,5,-8,-3,3,-8,-6,-5,-5,1,3,4,-3,7,-3,7,-10,-3,5,5,-3,6,5,-2,-10,4,-5,5,7,5,-4,1,-5,2,-10,9,1,-5,-9,-9,-2,-4,-1,-4,2,10,4,-2,6,2,-3,1,8,-10,-3,-6,2,-1,-9,-3,4,9,-7,-10,2,-10,3,-9,-7,8,8,6,-3,4,10,5,3,6,4,4,8,-1,9,-1,-8,8,-4], dtype = "uint64")#candidate|6466|(2548,)|const|uint64
call_6462 = relay.TupleGetItem(func_1118_call(relay.reshape(var_6463.astype('float64'), [7, 6, 3]), relay.reshape(var_6464.astype('uint16'), [1120,]), relay.reshape(const_6465.astype('bool'), [312, 1]), relay.reshape(const_6466.astype('uint64'), [13, 14, 14]), ), 6)
call_6467 = relay.TupleGetItem(func_1123_call(relay.reshape(var_6463.astype('float64'), [7, 6, 3]), relay.reshape(var_6464.astype('uint16'), [1120,]), relay.reshape(const_6465.astype('bool'), [312, 1]), relay.reshape(const_6466.astype('uint64'), [13, 14, 14]), ), 6)
output = relay.Tuple([uop_6441,call_6451,call_6462,var_6463,var_6464,const_6465,const_6466,])
output2 = relay.Tuple([uop_6441,call_6452,call_6467,var_6463,var_6464,const_6465,const_6466,])
func_6489 = relay.Function([var_6427,var_6463,var_6464,], output)
mod['func_6489'] = func_6489
mod = relay.transform.InferType()(mod)
var_6490 = relay.var("var_6490", dtype = "float64", shape = (4, 3, 4))#candidate|6490|(4, 3, 4)|var|float64
var_6491 = relay.var("var_6491", dtype = "float64", shape = (126,))#candidate|6491|(126,)|var|float64
var_6492 = relay.var("var_6492", dtype = "uint16", shape = (1120,))#candidate|6492|(1120,)|var|uint16
output = func_6489(var_6490,var_6491,var_6492,)
func_6493 = relay.Function([var_6490,var_6491,var_6492,], output)
mutated_mod['func_6493'] = func_6493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6322_call = mod.get_global_var('func_6322')
func_6323_call = mutated_mod.get_global_var('func_6323')
call_6524 = relay.TupleGetItem(func_6322_call(), 2)
call_6525 = relay.TupleGetItem(func_6323_call(), 2)
output = call_6524
output2 = call_6525
func_6533 = relay.Function([], output)
mod['func_6533'] = func_6533
mod = relay.transform.InferType()(mod)
output = func_6533()
func_6534 = relay.Function([], output)
mutated_mod['func_6534'] = func_6534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_6556 = relay.TupleGetItem(func_2162_call(), 1)
call_6557 = relay.TupleGetItem(func_2163_call(), 1)
output = relay.Tuple([call_6556,])
output2 = relay.Tuple([call_6557,])
func_6561 = relay.Function([], output)
mod['func_6561'] = func_6561
mod = relay.transform.InferType()(mod)
output = func_6561()
func_6562 = relay.Function([], output)
mutated_mod['func_6562'] = func_6562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4086_call = mod.get_global_var('func_4086')
func_4088_call = mutated_mod.get_global_var('func_4088')
call_6573 = relay.TupleGetItem(func_4086_call(), 1)
call_6574 = relay.TupleGetItem(func_4088_call(), 1)
output = call_6573
output2 = call_6574
func_6585 = relay.Function([], output)
mod['func_6585'] = func_6585
mod = relay.transform.InferType()(mod)
mutated_mod['func_6585'] = func_6585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6585_call = mutated_mod.get_global_var('func_6585')
call_6586 = func_6585_call()
output = call_6586
func_6587 = relay.Function([], output)
mutated_mod['func_6587'] = func_6587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2945_call = mod.get_global_var('func_2945')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_6604 = relay.TupleGetItem(func_2945_call(), 0)
call_6605 = relay.TupleGetItem(func_2947_call(), 0)
uop_6606 = relay.log2(call_6604.astype('float64')) # shape=(7, 6, 3)
uop_6608 = relay.log2(call_6605.astype('float64')) # shape=(7, 6, 3)
func_5651_call = mod.get_global_var('func_5651')
func_5654_call = mutated_mod.get_global_var('func_5654')
var_6623 = relay.var("var_6623", dtype = "bool", shape = (312,))#candidate|6623|(312,)|var|bool
call_6622 = relay.TupleGetItem(func_5651_call(relay.reshape(var_6623.astype('bool'), [312,])), 1)
call_6624 = relay.TupleGetItem(func_5654_call(relay.reshape(var_6623.astype('bool'), [312,])), 1)
output = relay.Tuple([uop_6606,call_6622,var_6623,])
output2 = relay.Tuple([uop_6608,call_6624,var_6623,])
func_6643 = relay.Function([var_6623,], output)
mod['func_6643'] = func_6643
mod = relay.transform.InferType()(mod)
mutated_mod['func_6643'] = func_6643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6644 = relay.var("var_6644", dtype = "bool", shape = (312,))#candidate|6644|(312,)|var|bool
func_6643_call = mutated_mod.get_global_var('func_6643')
call_6645 = func_6643_call(var_6644)
output = call_6645
func_6646 = relay.Function([var_6644], output)
mutated_mod['func_6646'] = func_6646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5267_call = mod.get_global_var('func_5267')
func_5269_call = mutated_mod.get_global_var('func_5269')
call_6648 = relay.TupleGetItem(func_5267_call(), 0)
call_6649 = relay.TupleGetItem(func_5269_call(), 0)
func_163_call = mod.get_global_var('func_163')
func_168_call = mutated_mod.get_global_var('func_168')
const_6652 = relay.const([[1,-1,-2,-8,9,8,-4,-4,-4,-2,6,-7,-2,9,-6,-9,7,-5,3,4,1,-1,-2,-10,7,-7,1,-1,-1,-7,1,6,-6,-7,-4,-4,-2,8,9,2,-9,9,5,3,10,6,5,-7,3,-3,-4,2,9,2,7,6,-7,5,4,-9,-9,-6,-9,7,-9,-8,7,-1,-9,6,8,-3,-6,-8,-8,5,-4,-4,-7,4,1,-1,4,-5,-6,1,3,-1,-4,-7,6,2,6,2,6,9,9,-6,-1,-6,-1,1,2,-3,10,1,-6,7,-8,5,-6,9,-4,6,7,-6,-10,-4,-10,-9,7,-6,2,4,4,-1,-4,4,9,-7,2,5,-10,-4,-4,-9,-2,5,-2,-3,-8,7,-9,2,-2,2,-10,-6,6,1,3,-2,-6,-1,7,7,2,-7,-6,1,-8,2,2,10,-9,7,-10,-9,7,7,7,9,-7,-2,-7,-10,8,5,-1,-7,6,2],[-2,-2,-4,4,4,-3,-2,-5,10,8,-7,-7,9,-9,-5,-9,-4,7,-4,9,6,9,9,-9,-1,-6,-1,7,6,-3,6,1,6,8,-10,-6,-1,4,-2,10,1,2,-10,10,-4,6,-6,2,4,2,8,-10,-6,10,7,-9,-5,-8,9,-10,4,5,-2,4,4,2,5,-1,-6,6,1,10,6,1,-10,8,-7,-4,7,-7,-5,5,2,-8,8,-2,9,5,1,-3,-6,-5,-4,-4,-10,-6,-3,-2,8,3,-3,-5,8,10,-7,-2,-3,-8,7,-10,2,-9,-8,9,-10,1,9,8,9,7,-10,-9,-6,-4,6,10,-1,-4,-2,4,-7,-5,-3,6,-10,8,-1,-5,-1,-2,2,-6,2,1,-4,8,-9,2,6,6,8,-8,-8,-6,1,-5,-9,-7,2,7,-2,-1,-9,-5,-10,1,-2,9,-1,8,-2,-6,-7,-5,2,6,8,6,-2,-2,-9,-10],[-1,10,5,-3,-2,-9,-5,-7,8,-2,-5,-6,7,-9,1,9,10,2,-7,2,6,-8,8,10,1,4,10,2,6,-6,-1,-8,4,6,-7,-3,-10,5,-8,-5,5,-4,-7,-4,10,-1,5,-3,9,2,-8,8,8,7,6,-5,-1,-8,7,-3,-2,-9,-4,-9,2,7,-8,9,8,-2,-9,-7,-7,-1,9,-3,-10,1,5,-7,3,6,-10,-9,-4,-3,9,-3,9,3,2,10,-10,-6,-10,1,-8,7,5,-4,-7,2,-1,2,-1,-5,-3,-4,5,-8,-4,10,-10,-8,1,4,1,3,10,-1,2,-5,2,-8,1,3,6,7,-8,-3,-7,8,2,1,9,-5,7,-6,3,-7,9,-10,-1,1,10,-2,-10,8,-4,-3,10,-5,-2,-7,2,-9,-1,-6,-4,6,2,4,10,3,10,10,8,6,-4,-4,6,-9,-10,3,-5,-1,-9,-10,-4,3,-3,-3],[-8,-10,5,-3,7,10,-1,5,-2,-5,-9,9,10,-9,-7,-3,-5,-9,8,1,-6,-7,4,10,-6,8,-10,3,9,4,-4,2,1,-10,-3,-6,-2,3,5,-3,-10,10,-5,1,-5,-3,1,10,7,1,-9,-7,4,-6,-5,3,9,9,-6,-10,-5,-10,8,-10,-10,-3,2,1,-1,-4,-7,4,-10,-9,-3,-7,-2,9,-7,-5,10,7,9,7,-6,-8,7,6,-7,4,-4,2,-8,-7,10,3,9,3,9,-8,10,-7,-10,-6,7,-8,-1,-8,1,-3,7,-10,-7,4,2,10,-8,1,-9,6,7,7,-6,6,-10,6,-4,-2,9,6,8,3,10,-7,-1,4,-10,-3,-8,2,9,-5,-6,3,-5,-9,4,10,-6,-2,1,-2,-7,-7,-5,2,1,-6,-6,-4,-9,-3,-5,-6,1,7,-3,5,5,6,-3,5,-8,10,-1,5,9,2,5,6,-7,2],[-1,4,10,-9,10,6,-4,-4,-5,6,10,-8,9,3,-7,8,1,-8,-1,4,1,-3,-8,-2,7,5,-8,-2,-8,-5,-9,5,-4,-9,-9,8,2,-7,-10,1,8,7,-10,-5,6,-5,10,5,4,8,-8,5,10,10,10,-9,1,6,-7,-2,-10,7,7,-3,7,-6,2,5,-3,3,-10,2,10,-3,-9,-9,-9,9,8,9,-7,-10,-6,2,2,3,-2,1,4,-9,6,10,-4,-3,4,10,9,-10,-5,-6,-10,6,5,3,9,10,10,3,2,-8,10,-6,6,-5,10,7,-2,3,-8,5,-6,7,9,-10,7,-7,-6,7,-1,-2,-6,3,1,5,10,-1,7,4,7,8,2,1,8,-9,-10,2,-1,4,-10,-3,9,9,-9,3,-7,-8,-6,-6,-6,-5,-7,4,3,1,-9,8,-8,5,1,3,-8,-6,1,1,8,-6,7,4,10,-7,-10,6],[-1,-5,-8,10,-3,-4,-10,-6,5,3,3,-3,-3,-3,-3,-2,1,-9,-8,-9,-7,9,-8,-4,-6,4,-4,-4,7,-9,6,7,1,-8,-6,1,-8,9,-5,10,9,1,-2,10,2,-2,-3,8,6,2,-1,-5,3,-8,6,10,-3,-9,-5,6,8,-8,8,4,9,8,-9,2,7,-2,7,8,-4,5,-8,7,-9,-7,-10,-1,-7,3,-9,1,3,9,-7,10,-6,1,5,9,4,1,9,4,-8,-3,2,-5,7,-6,2,6,-2,9,-6,1,4,-5,-3,-10,-8,2,-7,6,2,10,10,2,-4,1,-9,3,6,8,-9,-2,1,8,10,6,7,-6,2,1,8,8,-6,-1,-1,4,9,-6,10,10,9,4,10,3,7,-1,-7,2,-2,-8,4,-10,5,-3,1,7,-9,-5,10,-4,3,-3,4,4,2,8,3,1,5,5,9,-7,-2,9,4,10],[-9,-8,10,-1,-5,8,-7,7,3,2,-3,-2,3,6,7,5,-9,-10,-8,-9,10,-2,-8,-10,3,5,-1,1,-8,-1,5,10,-2,10,1,-4,9,-9,7,10,-1,5,1,6,-7,4,-7,-3,-5,7,-4,-1,7,2,9,-5,6,-2,8,-6,-7,6,-5,2,-3,9,2,-2,10,-4,-5,-9,8,6,1,2,2,-3,6,8,6,7,-7,-8,3,6,-10,-9,-8,8,-8,-7,-8,-9,8,6,-7,2,3,1,-2,6,-3,4,-3,-9,3,-3,-8,7,-2,-10,9,-4,-1,-10,3,-9,-2,-8,-5,8,-4,-9,5,-10,1,9,3,-2,-8,9,10,-10,1,9,-4,2,-10,-2,-8,-6,-4,9,-8,-4,-5,10,1,2,-7,-5,-10,10,-9,8,9,-6,-9,-10,8,-3,-7,2,2,-9,7,-3,3,8,8,-9,10,-9,2,5,-5,7,-1,1,3,6],[4,-6,3,-8,1,-9,5,-9,-1,-9,5,10,4,-1,1,-8,7,1,9,-2,-7,1,-2,8,-7,2,2,-7,-5,-3,6,-1,-5,-2,4,-3,6,2,4,-3,-7,-4,9,5,-10,2,10,-8,10,7,3,-4,6,8,5,3,-8,-1,8,5,-4,3,-2,9,8,-3,-8,1,2,3,3,-1,3,-10,-10,7,9,8,-9,-3,-2,10,-5,3,-2,-5,2,-6,10,6,-8,-5,-2,-2,9,10,4,-3,-2,-6,-5,-7,-9,-2,8,10,-10,5,-8,-3,-2,10,6,5,-2,-10,4,-3,-2,-3,-2,8,-7,-4,-10,4,1,-10,-9,-4,-7,-7,-6,3,5,10,-6,1,-1,-10,1,3,-10,-10,-7,10,-1,-5,9,-4,-2,4,-3,5,8,-5,9,-5,-10,-8,9,2,-6,6,-5,-10,5,6,6,1,7,7,3,-5,-4,3,2,3,2,-5,-10,-3],[10,-4,-1,2,-1,3,8,-9,2,8,-7,4,-2,6,6,8,9,2,-7,5,5,1,8,8,2,-6,8,-6,-10,2,-2,-4,2,-8,-2,8,4,3,-9,-2,8,10,7,-4,-10,3,-7,-2,4,-2,4,-4,-9,-10,9,-1,-9,10,-7,-3,1,1,-4,10,3,-4,2,-5,6,-9,-9,-1,1,4,-6,-7,4,8,10,-6,10,10,-10,4,4,1,6,-2,1,-5,3,-7,-1,-7,-5,-4,4,8,10,-10,-5,-8,10,8,-5,2,6,-7,4,-9,-10,3,-6,-8,3,3,-8,1,-8,-1,1,-3,3,-5,5,-6,-5,-10,2,-9,7,-4,-10,3,1,3,9,8,-5,7,-5,8,3,-4,8,-9,5,10,-8,7,8,1,5,7,2,-3,-8,10,-7,-6,8,-9,-1,-2,1,8,1,-7,9,-8,10,10,10,-1,6,3,-7,9,-9,-6,-2,2],[-4,-2,2,5,-1,2,-7,-10,2,-7,6,-4,-8,-7,-5,-6,5,1,7,-9,-5,10,4,4,-5,-5,-8,-6,-1,1,-2,-4,-6,-6,3,1,-8,9,-3,8,-6,9,-3,-4,-7,-10,-3,-10,1,2,-3,1,6,-3,-5,-8,-5,-8,-1,-3,-7,-1,-9,-9,-7,2,6,1,-5,2,5,-2,-9,9,3,2,6,2,4,-6,4,1,3,-3,-6,10,-7,2,-5,9,4,1,5,-7,-7,-2,-3,3,6,-6,-1,6,1,5,2,5,7,7,-1,1,-9,3,7,-8,1,5,-10,-9,2,8,-2,-9,-9,9,3,10,-4,-4,8,-3,-5,1,3,8,-6,7,-7,6,-3,10,8,9,-2,4,4,8,-8,-7,-1,-6,1,-6,10,-8,7,-10,-7,-7,-2,8,-8,7,7,9,-1,4,8,2,-10,-10,6,1,9,-2,-1,-8,1,7,1,4,10,-6],[10,6,-8,-8,-6,-10,9,7,4,-8,-1,3,-10,-4,6,9,-7,5,-1,2,2,-4,5,10,5,4,-3,-7,-3,3,10,7,-7,5,-5,-7,8,-9,-3,2,-9,3,3,-6,1,-8,-3,10,-7,-10,-1,-1,-8,-2,1,6,-2,3,1,2,9,4,-4,2,9,-6,-6,-9,-9,-5,7,-10,2,-4,1,4,-7,1,-5,5,-2,-4,7,-5,6,-7,-1,4,10,-8,-6,-2,3,4,-6,-9,1,-1,7,-5,5,-8,10,-2,9,-3,4,-8,9,-4,3,5,9,2,-1,-10,10,-5,-1,-3,6,-7,-3,7,9,9,7,5,8,-1,-8,-5,9,1,6,-2,9,-5,4,-4,-3,4,7,-5,9,-5,-7,7,2,-7,1,-3,9,-3,-9,-6,2,-2,9,5,5,7,2,-9,-4,-5,6,-7,3,7,-1,-6,-3,3,8,-2,-7,3,4,6,-8,7],[8,-10,6,-2,-2,-9,7,-9,-9,7,9,-9,-4,3,5,-8,3,-3,9,7,6,-8,-9,9,7,6,-6,1,10,-1,-5,8,-1,9,10,3,2,-8,-10,9,-3,-3,9,-8,-9,4,10,-4,-4,-10,8,10,-5,-3,5,2,8,-8,9,-6,5,-4,3,-5,-10,-1,8,-2,-10,-10,8,5,-7,-5,-7,7,-10,-8,-1,-9,-1,1,2,4,10,-8,-6,-6,-6,-9,9,-6,7,1,-10,-8,1,-10,-5,-6,10,3,7,-7,8,7,-4,-6,10,10,8,-10,-9,3,-7,-9,2,-3,9,3,7,-5,-4,1,-8,3,9,6,-6,-2,-7,1,10,10,3,-7,5,9,-4,-5,-1,10,-2,8,5,-2,-10,4,7,1,1,-10,1,8,-2,-10,1,-3,-6,2,4,6,9,5,-5,-7,8,3,-7,-5,-3,-1,4,-7,8,4,5,7,-9,9,-1,-2],[-4,-8,-7,-1,7,5,10,2,3,-10,-5,2,9,9,10,9,-6,6,-10,-4,-8,8,4,6,5,6,2,3,-1,-3,4,4,1,-3,-4,-7,7,10,7,-9,-3,2,4,1,10,6,-8,-3,-10,-9,1,-9,-1,-2,-9,3,-7,-9,2,6,-4,5,-5,-8,-3,1,2,4,3,4,-6,-3,-1,4,10,5,-4,-5,-9,6,-9,7,1,7,-7,5,7,8,10,-3,-2,6,9,7,-4,1,3,7,1,-7,6,-4,2,10,4,4,-2,-3,4,10,-6,3,10,5,-7,-10,6,5,7,-2,9,-6,10,3,-3,2,-5,-1,9,6,8,-7,1,-4,7,9,4,8,-9,6,5,1,4,-5,-8,9,9,10,-9,-8,10,6,-5,8,7,-3,-3,-2,-8,2,-10,-2,8,-10,-8,-7,6,-2,10,-2,-1,7,1,1,-10,7,-5,-10,-3,-1,-7,-9],[4,1,-9,-8,9,-6,-7,-2,-1,7,-8,-10,7,3,-10,6,-4,-7,-1,-5,2,-3,-2,6,-1,-1,1,-1,-3,-2,-7,-8,-7,-3,-9,1,2,10,8,-9,-10,10,-2,-2,7,7,-2,4,7,10,-8,7,6,3,-3,2,3,-9,-7,9,4,-10,8,-10,3,-2,2,10,9,1,-6,-7,9,5,6,-1,-7,-9,-9,1,-8,3,-4,-9,6,7,4,-4,-2,10,10,-10,-4,-3,9,-5,9,-10,-10,-8,-8,-2,-8,7,3,10,1,-2,1,8,-1,1,-2,5,-10,10,-7,-10,9,9,-7,9,8,-10,7,3,2,8,-2,8,5,10,4,-10,-9,7,7,1,7,6,-3,2,10,-1,-2,-6,1,-10,8,-6,-1,3,8,5,7,-9,-10,-8,-8,5,-10,-6,7,-3,-10,-1,3,8,8,-9,5,-7,-9,-5,6,7,-5,6,-3,-8,-10,-3]], dtype = "uint64")#candidate|6652|(14, 182)|const|uint64
call_6651 = relay.TupleGetItem(func_163_call(relay.reshape(const_6652.astype('uint64'), [13, 14, 14]), relay.reshape(const_6652.astype('uint64'), [13, 14, 14]), relay.reshape(const_6652.astype('uint64'), [13, 14, 14]), ), 1)
call_6653 = relay.TupleGetItem(func_168_call(relay.reshape(const_6652.astype('uint64'), [13, 14, 14]), relay.reshape(const_6652.astype('uint64'), [13, 14, 14]), relay.reshape(const_6652.astype('uint64'), [13, 14, 14]), ), 1)
output = relay.Tuple([call_6648,call_6651,const_6652,])
output2 = relay.Tuple([call_6649,call_6653,const_6652,])
func_6655 = relay.Function([], output)
mod['func_6655'] = func_6655
mod = relay.transform.InferType()(mod)
output = func_6655()
func_6656 = relay.Function([], output)
mutated_mod['func_6656'] = func_6656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5267_call = mod.get_global_var('func_5267')
func_5269_call = mutated_mod.get_global_var('func_5269')
call_6657 = relay.TupleGetItem(func_5267_call(), 0)
call_6658 = relay.TupleGetItem(func_5269_call(), 0)
const_6670 = relay.const([[[True,True,True],[True,True,False],[False,True,False],[False,True,False],[True,True,False],[True,False,False]],[[True,True,True],[True,False,False],[True,True,False],[False,False,True],[False,False,False],[True,True,False]],[[False,False,True],[False,False,False],[True,True,True],[True,False,False],[False,False,True],[True,True,True]],[[True,True,False],[True,True,True],[True,True,True],[True,False,False],[True,False,False],[True,True,False]],[[True,False,True],[True,True,False],[True,True,False],[False,False,True],[False,False,False],[False,True,True]],[[True,False,False],[False,False,True],[True,True,True],[True,False,False],[False,False,False],[True,True,False]],[[True,False,True],[True,False,False],[True,False,False],[True,True,True],[True,False,False],[True,True,False]]], dtype = "bool")#candidate|6670|(7, 6, 3)|const|bool
bop_6671 = relay.less(call_6657.astype('bool'), relay.reshape(const_6670.astype('bool'), relay.shape_of(call_6657))) # shape=(7, 6, 3)
bop_6674 = relay.less(call_6658.astype('bool'), relay.reshape(const_6670.astype('bool'), relay.shape_of(call_6658))) # shape=(7, 6, 3)
uop_6678 = relay.exp(call_6657.astype('float32')) # shape=(7, 6, 3)
uop_6680 = relay.exp(call_6658.astype('float32')) # shape=(7, 6, 3)
func_3333_call = mod.get_global_var('func_3333')
func_3335_call = mutated_mod.get_global_var('func_3335')
var_6692 = relay.var("var_6692", dtype = "uint64", shape = (220,))#candidate|6692|(220,)|var|uint64
call_6691 = relay.TupleGetItem(func_3333_call(relay.reshape(var_6692.astype('uint64'), [220,])), 0)
call_6693 = relay.TupleGetItem(func_3335_call(relay.reshape(var_6692.astype('uint64'), [220,])), 0)
output = relay.Tuple([bop_6671,uop_6678,call_6691,var_6692,])
output2 = relay.Tuple([bop_6674,uop_6680,call_6693,var_6692,])
func_6694 = relay.Function([var_6692,], output)
mod['func_6694'] = func_6694
mod = relay.transform.InferType()(mod)
var_6695 = relay.var("var_6695", dtype = "uint64", shape = (220,))#candidate|6695|(220,)|var|uint64
output = func_6694(var_6695)
func_6696 = relay.Function([var_6695], output)
mutated_mod['func_6696'] = func_6696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6585_call = mod.get_global_var('func_6585')
func_6587_call = mutated_mod.get_global_var('func_6587')
call_6738 = func_6585_call()
call_6739 = func_6585_call()
output = call_6738
output2 = call_6739
func_6742 = relay.Function([], output)
mod['func_6742'] = func_6742
mod = relay.transform.InferType()(mod)
mutated_mod['func_6742'] = func_6742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6742_call = mutated_mod.get_global_var('func_6742')
call_6743 = func_6742_call()
output = call_6743
func_6744 = relay.Function([], output)
mutated_mod['func_6744'] = func_6744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4831_call = mod.get_global_var('func_4831')
func_4832_call = mutated_mod.get_global_var('func_4832')
call_6824 = func_4831_call()
call_6825 = func_4831_call()
func_1302_call = mod.get_global_var('func_1302')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_6826 = func_1302_call()
call_6827 = func_1302_call()
func_1581_call = mod.get_global_var('func_1581')
func_1583_call = mutated_mod.get_global_var('func_1583')
call_6832 = relay.TupleGetItem(func_1581_call(relay.reshape(call_6826.astype('float64'), [7, 6, 3])), 1)
call_6833 = relay.TupleGetItem(func_1583_call(relay.reshape(call_6826.astype('float64'), [7, 6, 3])), 1)
uop_6849 = relay.sigmoid(call_6832.astype('float32')) # shape=(7, 6, 3)
uop_6851 = relay.sigmoid(call_6833.astype('float32')) # shape=(7, 6, 3)
output = relay.Tuple([call_6824,call_6826,uop_6849,])
output2 = relay.Tuple([call_6825,call_6827,uop_6851,])
func_6857 = relay.Function([], output)
mod['func_6857'] = func_6857
mod = relay.transform.InferType()(mod)
mutated_mod['func_6857'] = func_6857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6857_call = mutated_mod.get_global_var('func_6857')
call_6858 = func_6857_call()
output = call_6858
func_6859 = relay.Function([], output)
mutated_mod['func_6859'] = func_6859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6561_call = mod.get_global_var('func_6561')
func_6562_call = mutated_mod.get_global_var('func_6562')
call_6939 = relay.TupleGetItem(func_6561_call(), 0)
call_6940 = relay.TupleGetItem(func_6562_call(), 0)
func_5245_call = mod.get_global_var('func_5245')
func_5247_call = mutated_mod.get_global_var('func_5247')
const_6949 = relay.const([3,-2,4,9,-1,-2,7,-5,-4,-8,-10,4,-4,-6,3,5,-1,4,-10,3,-8,-2,9,-9,-6,7,-10,7,5,4,-9,5,6,5,-2,7,5,2,7,-8,-10,9,7,7,3,9,-8,2,-6,10,-7,-8,4,-8,-5,4,-5,-7,-10,4,6,5,-10,10,6,-3,-4,-5,3,1,-4,-5,-9,1,9,-3,9,-8,7,-4,-7,5,-10,-2,-8,2,10,-8,10,-8,-5,1,-1,2,9,10,-4,9,-7,-8,-6,4,-6,2,-4,-4,-1,2,5,9,-1,-10,-4,-1,-10,4,1,-1,-2,4,3,-4,10,6,9,9,-4,7,8,1,-10,3,4,-8,-6,4,-10,-2,2,8,-5,3,8,9,9,3,6,-1,-9,-9,-3,2,1,4,4,-5,10,8,8,-3,9,8,-1,8,-10,-5,-1,-4,5,-6,-1,9,10,9,-7,7,-6,3,-4,7,1,-4,-1,5,-10,6,-3,-3,2,-3,4,-7,4,8,-3,1,1,6,-6,9,-1,9,9,7,4,2,-9,-8,1,3,5,7,9,-7,4,3,10,-9,4,2,-7,7,5,1,3,9,-7,-3,10,3,7,-9,-8,8,8,3,4,3,7,-5,-9,-8,1,-3,3,-2,10,7,-2,3,3,-5,-7,-8,4,5,-8,-10,-6,9,-6,10,-4,7,10,-6,-7,-1,9,9,1,-9,-10,-7,1,-6,6,-5,2,6,4,-4,1,5,5,7,9,6,-6,-6,6,6,-9,-2,-6,1,-10,-1,2,-5,10,-2,10,8,10,5,-7,10,3,-7,4,-9,4,-7,5,-1,4,6,3,9,2,-1,-6,-5,7,-10,-9,-5,-10,-9,-2,4,6,-9,-5,-2,4,-6,-6,-9,-4,-4,-9,-5,-9,4,5,-9,-9,9,9,-1,-7,-1,-9,-8,1,-5,10,9,-4,-5,2,-1,-2,-5,2,-2,-2,-3,-7,-3,4,-9,7,8,-3,-2,6,-4,-4,9,-4,8,-8,-8,-4,3,6,-4,2,-4,-4,-9,-2,9,3,-3,-1,-4,1,-1,-10,5,-8,9,-3,-4,1,-9,8,8,-6,-8,-1,-3,4,-1,10,-10,-7,6,-4,-10,4,6,7,-5,7,1,8,2,10,6,-1,8,-7,-1,7,-4,1,4,5,5,3,-2,10,4,-9,-1,9,10,4,-9,-3,3,-4,-5,6,-3,-4,1,8,7,8,-10,7,-4,-1,3,5,-1,-3,-2,-4,10,-9,-5,8,6,10,-4,-6,-2,-1,-5,3,7,-10,-8,3,4,1,-1,-3,-5,-5,-2,7,-9,2,-7,10,4,-3,6,-10,-10,-2,-10,-1,8,3,-6,5,-9,9,-4,9,9,-10,-10,5,-1,-4,-10,5,-9,-9,7,2,2,9,10,-6,2,4,-8,3,-6,10,1,3,2,-7,-5,-4,-10,-5,-2,1,-8,-7,4,6,8,7,9,-9,3,9,-5,-6,-9,7,-3,7,-5,-10,4,-10,-1,-2,-6,-3,-9,6,-7,-10,5,-8,-10,-2,7,4,7,6,1,-8,10,-8,6,-2,-6,9,-4,10,2,-8,1,4,6,-5,9,5,-7,-6,-7,-7,-5,-4,5,-2,5,10,2,5,-4,-6,-6,-2,-4,-7,9,3,10,4,3,-4,7,-6,8,8,4,6,-7,-6,-7,1,6,-1,-3,-2,4,-7,-10,10,6,1,-4,-1,-5,1,9,9,5,-2,8,7,3,-1,-6,-2,-2,2,2,-6,-10,1,8,5,-4,4,-4,-2,-4,2,7,-2,-7,-5,-10,7,6,9,10,7,-4,3,-3,-7,-1,9,-10,-7,9,-7,-2,7,4,2,-2,5,-2,-6,-7,-6,-9,-6,-7,-8,-6,-5,1,6,10,9,-9,-9,-7,7,-7,2,-7,-5,-3,3,1,-6,10,10,-10,-3,5,1,7,6,1,10,-6,4,-1,1,-5,-4,10,4,-3,10,-10,-8,9,3,-1,9,9,1,10,-9,8,1,-7,8,3,8,9,2,-9,7,7,9,9,5,-1,-8,10,-7,-4,9,-4,-1,-10,-10,-8,-10,5,3,1,-5,6,1,3,-3,4,-2,-6,3,8,8,2,-4,-1,-1,7,-7,1,9,8,1,-5,-4,8,8,1,-3,-7,-10,-4,-1,10,5,7,-5,7,1,-1,-2,2,-6,-7,-6,5,-3,8,3,-3,9,-2,7,2,-9,2,-1,-1,-5,-5,-5,8,3,-3,2,-3,-5,5,4,9,10,5,6,-8,6,-4,6,-8,-6,5,6,10,3,-5,-3,-2,-8,2,-5,-6,6,4,10,2,3,-7,-5,2,2,-5,-4,6,4,-5,-10,9,-1,-9,5,10,-9,8,-1,10,-8,8,3,-3,4,7,-10,-2,-1,1,-2,-5,7,-3,-6,2,1,5,6,5,7,-3,-10,6,-6,9,-10,-9,10,7,-8,-9,1,-4,-3,4,-1,-4,4,2,1,-7,6,9,-9,-3,5,5,5,2,8,-7,-5,-10,5,8,-3,-8,-3,8,-1,-9,10,-2,-5,4,-10,-4,2,-5,-6,-10,10,-2,4,4,-9,-2,1,8,10,-9,1,-9,-7,-7,-7,-4,6,9,7,5,-8,-7,-5,-5,6,-7,-9,-7,1,1,-4,5,2,10,-7,5,2,-6,-8,-1,-7,1,-5,4,4,-3,2,-8,10,-6,-1,-6,-7,-1,3,9,-4,-8,9,-4,9,1,5,-10,5,6,8,-2,-2,2,-7,-7,-1,10,1,5,3,-3,-5,-5,-8,-10,-3,-3,-3,2,6,-1,-6,-7,6,7,7,-8,-3,-5,-6,-7,-7,-3,5,-2,-7,-8,-3,10,-4,-9,-6,-3,1,-10,-5,7,-9,-2,-8,-7,-7,-7,-7,-2,-3,2,-9,8,7,9,7,3,8,2,10,-10,2,9,-4,2,3,9,-1,2,-7,9,8,-9,9,-4], dtype = "uint16")#candidate|6949|(1120,)|const|uint16
call_6948 = relay.TupleGetItem(func_5245_call(relay.reshape(const_6949.astype('uint16'), [1120,])), 9)
call_6950 = relay.TupleGetItem(func_5247_call(relay.reshape(const_6949.astype('uint16'), [1120,])), 9)
output = relay.Tuple([call_6939,call_6948,const_6949,])
output2 = relay.Tuple([call_6940,call_6950,const_6949,])
func_6952 = relay.Function([], output)
mod['func_6952'] = func_6952
mod = relay.transform.InferType()(mod)
output = func_6952()
func_6953 = relay.Function([], output)
mutated_mod['func_6953'] = func_6953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5737_call = mod.get_global_var('func_5737')
func_5738_call = mutated_mod.get_global_var('func_5738')
call_6957 = relay.TupleGetItem(func_5737_call(), 0)
call_6958 = relay.TupleGetItem(func_5738_call(), 0)
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_6967 = func_3837_call()
call_6968 = func_3837_call()
output = relay.Tuple([call_6957,call_6967,])
output2 = relay.Tuple([call_6958,call_6968,])
func_6971 = relay.Function([], output)
mod['func_6971'] = func_6971
mod = relay.transform.InferType()(mod)
output = func_6971()
func_6972 = relay.Function([], output)
mutated_mod['func_6972'] = func_6972
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6993 = relay.const([[[1.634903,4.420766,3.754429,-0.748855,-9.603904,-1.883851,-8.870440,5.432721],[5.016782,7.622809,-0.395527,6.967279,-4.476729,1.175881,-3.251252,4.417487],[9.149493,5.933207,-9.234166,8.797056,8.393160,7.380063,1.739645,2.136024],[5.635297,2.873788,2.007325,-8.698847,-8.242657,-6.604800,-9.339608,3.621646]],[[-1.556626,-0.365517,-9.390864,-7.271950,-1.653740,0.331206,-7.514505,-9.505859],[6.555114,9.648987,-3.987118,-6.123675,-2.253042,4.893135,-3.464686,-6.964277],[6.616792,7.550065,-7.209696,5.445568,9.193170,-1.190247,7.934381,1.238461],[-7.363130,9.890468,-5.559146,-5.442235,-9.819028,-6.736851,-8.149193,-2.071799]],[[9.212231,4.852724,6.292784,-9.381638,2.608892,-6.751730,0.941060,4.316893],[6.858640,-9.059558,-3.146741,-3.594516,-9.618863,0.373828,3.787396,-5.987585],[-8.855342,-2.702825,-3.271170,-1.774947,-3.550855,2.428387,1.719942,0.025448],[6.597150,-3.649075,-2.479906,8.544027,5.633737,4.361333,-2.271162,-1.146341]],[[8.166877,-9.044396,1.004516,9.630042,3.481657,-7.492066,3.504671,3.308762],[8.197420,-9.341997,-7.718637,5.153304,9.060114,-2.544785,-3.979121,-8.178975],[-4.347286,-9.164095,2.701754,1.299974,-4.034013,9.874807,5.675669,-2.352054],[9.916161,6.278732,-7.195895,7.069968,4.955257,5.884112,-3.627088,-2.627547]],[[-3.776353,7.859022,-7.396990,9.481251,-8.215965,8.604803,5.904744,-4.210790],[-4.211872,0.618421,-2.714663,-0.887621,-8.686877,-5.298841,5.001888,1.895651],[4.477982,-5.325599,2.602800,-6.690036,-4.194203,-9.347909,5.303441,-6.822138],[-7.712386,7.793774,7.252164,-3.749378,7.689339,-2.814055,0.447488,6.787113]],[[-7.718862,2.395018,4.937895,8.243462,7.053509,0.816654,4.735602,-3.669584],[0.170825,-8.612120,-5.097529,3.891606,4.112094,-9.181479,8.382925,6.924700],[5.044511,-3.780296,-2.105418,0.959618,9.678193,9.005344,-3.235632,-3.661711],[3.642645,-7.195021,7.698574,0.927547,-1.893151,-0.264606,4.104128,4.823390]]], dtype = "float64")#candidate|6993|(6, 4, 8)|const|float64
uop_6994 = relay.exp(const_6993.astype('float64')) # shape=(6, 4, 8)
output = relay.Tuple([uop_6994,])
output2 = relay.Tuple([uop_6994,])
func_6997 = relay.Function([], output)
mod['func_6997'] = func_6997
mod = relay.transform.InferType()(mod)
output = func_6997()
func_6998 = relay.Function([], output)
mutated_mod['func_6998'] = func_6998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5816_call = mod.get_global_var('func_5816')
func_5817_call = mutated_mod.get_global_var('func_5817')
call_7005 = relay.TupleGetItem(func_5816_call(), 3)
call_7006 = relay.TupleGetItem(func_5817_call(), 3)
func_3370_call = mod.get_global_var('func_3370')
func_3373_call = mutated_mod.get_global_var('func_3373')
var_7011 = relay.var("var_7011", dtype = "float32", shape = (240,))#candidate|7011|(240,)|var|float32
call_7010 = relay.TupleGetItem(func_3370_call(relay.reshape(var_7011.astype('float32'), [8, 30])), 2)
call_7012 = relay.TupleGetItem(func_3373_call(relay.reshape(var_7011.astype('float32'), [8, 30])), 2)
func_2475_call = mod.get_global_var('func_2475')
func_2477_call = mutated_mod.get_global_var('func_2477')
call_7022 = relay.TupleGetItem(func_2475_call(), 0)
call_7023 = relay.TupleGetItem(func_2477_call(), 0)
func_3016_call = mod.get_global_var('func_3016')
func_3018_call = mutated_mod.get_global_var('func_3018')
var_7037 = relay.var("var_7037", dtype = "bool", shape = (1, 2548))#candidate|7037|(1, 2548)|var|bool
call_7036 = relay.TupleGetItem(func_3016_call(relay.reshape(var_7037.astype('bool'), [13, 14, 14])), 0)
call_7038 = relay.TupleGetItem(func_3018_call(relay.reshape(var_7037.astype('bool'), [13, 14, 14])), 0)
bop_7040 = relay.multiply(call_7010.astype('int16'), relay.reshape(var_7011.astype('int16'), relay.shape_of(call_7010))) # shape=(8, 30)
bop_7043 = relay.multiply(call_7012.astype('int16'), relay.reshape(var_7011.astype('int16'), relay.shape_of(call_7012))) # shape=(8, 30)
func_6489_call = mod.get_global_var('func_6489')
func_6493_call = mutated_mod.get_global_var('func_6493')
var_7047 = relay.var("var_7047", dtype = "float64", shape = (24, 2))#candidate|7047|(24, 2)|var|float64
var_7048 = relay.var("var_7048", dtype = "uint16", shape = (1120,))#candidate|7048|(1120,)|var|uint16
call_7046 = relay.TupleGetItem(func_6489_call(relay.reshape(var_7047.astype('float64'), [4, 3, 4]), relay.reshape(call_7005.astype('float64'), [126,]), relay.reshape(var_7048.astype('uint16'), [1120,]), ), 5)
call_7049 = relay.TupleGetItem(func_6493_call(relay.reshape(var_7047.astype('float64'), [4, 3, 4]), relay.reshape(call_7005.astype('float64'), [126,]), relay.reshape(var_7048.astype('uint16'), [1120,]), ), 5)
const_7053 = relay.const([[-9.855108,1.882029],[-9.443668,-1.172472],[1.790532,1.624811],[-0.038931,-1.118532],[-7.175460,-4.600142],[-4.248674,9.828887],[-7.427396,7.258262],[3.225019,-2.745671],[-3.712223,-3.199182],[1.827661,6.132623],[-1.336665,-9.405329],[-9.502436,7.807355],[-4.817052,-6.353988],[-4.014847,4.118887],[4.885067,3.235558],[-7.070639,-6.736132],[6.440227,4.811176],[7.053886,6.597544],[1.002872,4.973490],[-0.968929,6.531710],[-2.386774,2.680520],[1.391077,-7.647182],[-4.646976,8.412321],[8.509109,1.942142]], dtype = "float64")#candidate|7053|(24, 2)|const|float64
bop_7054 = relay.less(var_7047.astype('bool'), relay.reshape(const_7053.astype('bool'), relay.shape_of(var_7047))) # shape=(24, 2)
var_7057 = relay.var("var_7057", dtype = "float64", shape = (24, 2))#candidate|7057|(24, 2)|var|float64
bop_7058 = relay.maximum(var_7047.astype('int16'), relay.reshape(var_7057.astype('int16'), relay.shape_of(var_7047))) # shape=(24, 2)
output = relay.Tuple([call_7005,call_7022,call_7036,var_7037,bop_7040,call_7046,var_7048,bop_7054,bop_7058,])
output2 = relay.Tuple([call_7006,call_7023,call_7038,var_7037,bop_7043,call_7049,var_7048,bop_7054,bop_7058,])
func_7081 = relay.Function([var_7011,var_7037,var_7047,var_7048,var_7057,], output)
mod['func_7081'] = func_7081
mod = relay.transform.InferType()(mod)
var_7082 = relay.var("var_7082", dtype = "float32", shape = (240,))#candidate|7082|(240,)|var|float32
var_7083 = relay.var("var_7083", dtype = "bool", shape = (1, 2548))#candidate|7083|(1, 2548)|var|bool
var_7084 = relay.var("var_7084", dtype = "float64", shape = (24, 2))#candidate|7084|(24, 2)|var|float64
var_7085 = relay.var("var_7085", dtype = "uint16", shape = (1120,))#candidate|7085|(1120,)|var|uint16
var_7086 = relay.var("var_7086", dtype = "float64", shape = (24, 2))#candidate|7086|(24, 2)|var|float64
output = func_7081(var_7082,var_7083,var_7084,var_7085,var_7086,)
func_7087 = relay.Function([var_7082,var_7083,var_7084,var_7085,var_7086,], output)
mutated_mod['func_7087'] = func_7087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_7103 = relay.TupleGetItem(func_2586_call(), 0)
call_7104 = relay.TupleGetItem(func_2587_call(), 0)
uop_7109 = relay.rsqrt(call_7103.astype('float64')) # shape=(7, 6, 3)
uop_7111 = relay.rsqrt(call_7104.astype('float64')) # shape=(7, 6, 3)
output = relay.Tuple([uop_7109,])
output2 = relay.Tuple([uop_7111,])
func_7126 = relay.Function([], output)
mod['func_7126'] = func_7126
mod = relay.transform.InferType()(mod)
output = func_7126()
func_7127 = relay.Function([], output)
mutated_mod['func_7127'] = func_7127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7185 = relay.var("var_7185", dtype = "float32", shape = (13, 1, 4))#candidate|7185|(13, 1, 4)|var|float32
uop_7186 = relay.sin(var_7185.astype('float32')) # shape=(13, 1, 4)
bop_7188 = relay.bitwise_and(uop_7186.astype('uint8'), relay.reshape(var_7185.astype('uint8'), relay.shape_of(uop_7186))) # shape=(13, 1, 4)
bop_7199 = relay.logical_or(bop_7188.astype('bool'), relay.reshape(uop_7186.astype('bool'), relay.shape_of(bop_7188))) # shape=(13, 1, 4)
func_1280_call = mod.get_global_var('func_1280')
func_1282_call = mutated_mod.get_global_var('func_1282')
var_7204 = relay.var("var_7204", dtype = "float64", shape = (126,))#candidate|7204|(126,)|var|float64
call_7203 = func_1280_call(relay.reshape(var_7204.astype('float64'), [7, 6, 3]))
call_7205 = func_1280_call(relay.reshape(var_7204.astype('float64'), [7, 6, 3]))
uop_7218 = relay.exp(bop_7188.astype('float32')) # shape=(13, 1, 4)
func_6643_call = mod.get_global_var('func_6643')
func_6646_call = mutated_mod.get_global_var('func_6646')
const_7229 = relay.const([True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False], dtype = "bool")#candidate|7229|(312,)|const|bool
call_7228 = relay.TupleGetItem(func_6643_call(relay.reshape(const_7229.astype('bool'), [312,])), 2)
call_7230 = relay.TupleGetItem(func_6646_call(relay.reshape(const_7229.astype('bool'), [312,])), 2)
func_5970_call = mod.get_global_var('func_5970')
func_5972_call = mutated_mod.get_global_var('func_5972')
var_7233 = relay.var("var_7233", dtype = "float64", shape = (105, 1))#candidate|7233|(105, 1)|var|float64
call_7232 = relay.TupleGetItem(func_5970_call(relay.reshape(var_7233.astype('float64'), [3, 5, 7])), 2)
call_7234 = relay.TupleGetItem(func_5972_call(relay.reshape(var_7233.astype('float64'), [3, 5, 7])), 2)
func_6857_call = mod.get_global_var('func_6857')
func_6859_call = mutated_mod.get_global_var('func_6859')
call_7236 = relay.TupleGetItem(func_6857_call(), 0)
call_7237 = relay.TupleGetItem(func_6859_call(), 0)
output = relay.Tuple([bop_7199,call_7203,var_7204,uop_7218,call_7228,const_7229,call_7232,var_7233,call_7236,])
output2 = relay.Tuple([bop_7199,call_7205,var_7204,uop_7218,call_7230,const_7229,call_7234,var_7233,call_7237,])
func_7253 = relay.Function([var_7185,var_7204,var_7233,], output)
mod['func_7253'] = func_7253
mod = relay.transform.InferType()(mod)
mutated_mod['func_7253'] = func_7253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7253_call = mutated_mod.get_global_var('func_7253')
var_7255 = relay.var("var_7255", dtype = "float32", shape = (13, 1, 4))#candidate|7255|(13, 1, 4)|var|float32
var_7256 = relay.var("var_7256", dtype = "float64", shape = (126,))#candidate|7256|(126,)|var|float64
var_7257 = relay.var("var_7257", dtype = "float64", shape = (105, 1))#candidate|7257|(105, 1)|var|float64
call_7254 = func_7253_call(var_7255,var_7256,var_7257,)
output = call_7254
func_7258 = relay.Function([var_7255,var_7256,var_7257,], output)
mutated_mod['func_7258'] = func_7258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2218_call = mod.get_global_var('func_2218')
func_2220_call = mutated_mod.get_global_var('func_2220')
call_7267 = func_2218_call()
call_7268 = func_2218_call()
func_1953_call = mod.get_global_var('func_1953')
func_1955_call = mutated_mod.get_global_var('func_1955')
var_7272 = relay.var("var_7272", dtype = "float32", shape = (240,))#candidate|7272|(240,)|var|float32
call_7271 = func_1953_call(relay.reshape(var_7272.astype('float32'), [16, 1, 15]))
call_7273 = func_1953_call(relay.reshape(var_7272.astype('float32'), [16, 1, 15]))
func_6210_call = mod.get_global_var('func_6210')
func_6212_call = mutated_mod.get_global_var('func_6212')
call_7282 = func_6210_call()
call_7283 = func_6210_call()
output = relay.Tuple([call_7267,call_7271,var_7272,call_7282,])
output2 = relay.Tuple([call_7268,call_7273,var_7272,call_7283,])
func_7289 = relay.Function([var_7272,], output)
mod['func_7289'] = func_7289
mod = relay.transform.InferType()(mod)
mutated_mod['func_7289'] = func_7289
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7290 = relay.var("var_7290", dtype = "float32", shape = (240,))#candidate|7290|(240,)|var|float32
func_7289_call = mutated_mod.get_global_var('func_7289')
call_7291 = func_7289_call(var_7290)
output = call_7291
func_7292 = relay.Function([var_7290], output)
mutated_mod['func_7292'] = func_7292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4599_call = mod.get_global_var('func_4599')
func_4600_call = mutated_mod.get_global_var('func_4600')
call_7302 = relay.TupleGetItem(func_4599_call(), 0)
call_7303 = relay.TupleGetItem(func_4600_call(), 0)
func_5470_call = mod.get_global_var('func_5470')
func_5472_call = mutated_mod.get_global_var('func_5472')
call_7308 = relay.TupleGetItem(func_5470_call(), 0)
call_7309 = relay.TupleGetItem(func_5472_call(), 0)
func_5547_call = mod.get_global_var('func_5547')
func_5549_call = mutated_mod.get_global_var('func_5549')
call_7312 = relay.TupleGetItem(func_5547_call(), 1)
call_7313 = relay.TupleGetItem(func_5549_call(), 1)
func_2259_call = mod.get_global_var('func_2259')
func_2261_call = mutated_mod.get_global_var('func_2261')
call_7323 = func_2259_call()
call_7324 = func_2259_call()
output = relay.Tuple([call_7302,call_7308,call_7312,call_7323,])
output2 = relay.Tuple([call_7303,call_7309,call_7313,call_7324,])
func_7326 = relay.Function([], output)
mod['func_7326'] = func_7326
mod = relay.transform.InferType()(mod)
output = func_7326()
func_7327 = relay.Function([], output)
mutated_mod['func_7327'] = func_7327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5737_call = mod.get_global_var('func_5737')
func_5738_call = mutated_mod.get_global_var('func_5738')
call_7340 = relay.TupleGetItem(func_5737_call(), 0)
call_7341 = relay.TupleGetItem(func_5738_call(), 0)
output = relay.Tuple([call_7340,])
output2 = relay.Tuple([call_7341,])
func_7345 = relay.Function([], output)
mod['func_7345'] = func_7345
mod = relay.transform.InferType()(mod)
mutated_mod['func_7345'] = func_7345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7345_call = mutated_mod.get_global_var('func_7345')
call_7346 = func_7345_call()
output = call_7346
func_7347 = relay.Function([], output)
mutated_mod['func_7347'] = func_7347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7432 = relay.var("var_7432", dtype = "float32", shape = (9, 16, 15))#candidate|7432|(9, 16, 15)|var|float32
uop_7433 = relay.atanh(var_7432.astype('float32')) # shape=(9, 16, 15)
output = relay.Tuple([uop_7433,])
output2 = relay.Tuple([uop_7433,])
func_7436 = relay.Function([var_7432,], output)
mod['func_7436'] = func_7436
mod = relay.transform.InferType()(mod)
mutated_mod['func_7436'] = func_7436
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7437 = relay.var("var_7437", dtype = "float32", shape = (9, 16, 15))#candidate|7437|(9, 16, 15)|var|float32
func_7436_call = mutated_mod.get_global_var('func_7436')
call_7438 = func_7436_call(var_7437)
output = call_7438
func_7439 = relay.Function([var_7437], output)
mutated_mod['func_7439'] = func_7439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4454_call = mod.get_global_var('func_4454')
func_4456_call = mutated_mod.get_global_var('func_4456')
call_7463 = relay.TupleGetItem(func_4454_call(), 0)
call_7464 = relay.TupleGetItem(func_4456_call(), 0)
output = call_7463
output2 = call_7464
func_7486 = relay.Function([], output)
mod['func_7486'] = func_7486
mod = relay.transform.InferType()(mod)
output = func_7486()
func_7487 = relay.Function([], output)
mutated_mod['func_7487'] = func_7487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2945_call = mod.get_global_var('func_2945')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_7491 = relay.TupleGetItem(func_2945_call(), 0)
call_7492 = relay.TupleGetItem(func_2947_call(), 0)
output = call_7491
output2 = call_7492
func_7503 = relay.Function([], output)
mod['func_7503'] = func_7503
mod = relay.transform.InferType()(mod)
mutated_mod['func_7503'] = func_7503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7503_call = mutated_mod.get_global_var('func_7503')
call_7504 = func_7503_call()
output = call_7504
func_7505 = relay.Function([], output)
mutated_mod['func_7505'] = func_7505
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7509 = relay.const(-4, dtype = "uint8")#candidate|7509|()|const|uint8
var_7510 = relay.var("var_7510", dtype = "uint8", shape = (13, 13, 1))#candidate|7510|(13, 13, 1)|var|uint8
bop_7511 = relay.minimum(const_7509.astype('uint8'), var_7510.astype('uint8')) # shape=(13, 13, 1)
func_3333_call = mod.get_global_var('func_3333')
func_3335_call = mutated_mod.get_global_var('func_3335')
var_7518 = relay.var("var_7518", dtype = "uint64", shape = (220,))#candidate|7518|(220,)|var|uint64
call_7517 = relay.TupleGetItem(func_3333_call(relay.reshape(var_7518.astype('uint64'), [220,])), 0)
call_7519 = relay.TupleGetItem(func_3335_call(relay.reshape(var_7518.astype('uint64'), [220,])), 0)
func_4987_call = mod.get_global_var('func_4987')
func_4989_call = mutated_mod.get_global_var('func_4989')
call_7527 = relay.TupleGetItem(func_4987_call(), 0)
call_7528 = relay.TupleGetItem(func_4989_call(), 0)
output = relay.Tuple([bop_7511,call_7517,var_7518,call_7527,])
output2 = relay.Tuple([bop_7511,call_7519,var_7518,call_7528,])
func_7532 = relay.Function([var_7510,var_7518,], output)
mod['func_7532'] = func_7532
mod = relay.transform.InferType()(mod)
mutated_mod['func_7532'] = func_7532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7532_call = mutated_mod.get_global_var('func_7532')
var_7534 = relay.var("var_7534", dtype = "uint8", shape = (13, 13, 1))#candidate|7534|(13, 13, 1)|var|uint8
var_7535 = relay.var("var_7535", dtype = "uint64", shape = (220,))#candidate|7535|(220,)|var|uint64
call_7533 = func_7532_call(var_7534,var_7535,)
output = call_7533
func_7536 = relay.Function([var_7534,var_7535,], output)
mutated_mod['func_7536'] = func_7536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6533_call = mod.get_global_var('func_6533')
func_6534_call = mutated_mod.get_global_var('func_6534')
call_7567 = func_6533_call()
call_7568 = func_6533_call()
output = relay.Tuple([call_7567,])
output2 = relay.Tuple([call_7568,])
func_7574 = relay.Function([], output)
mod['func_7574'] = func_7574
mod = relay.transform.InferType()(mod)
mutated_mod['func_7574'] = func_7574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7574_call = mutated_mod.get_global_var('func_7574')
call_7575 = func_7574_call()
output = call_7575
func_7576 = relay.Function([], output)
mutated_mod['func_7576'] = func_7576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1809_call = mod.get_global_var('func_1809')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_7612 = relay.TupleGetItem(func_1809_call(), 1)
call_7613 = relay.TupleGetItem(func_1810_call(), 1)
func_924_call = mod.get_global_var('func_924')
func_925_call = mutated_mod.get_global_var('func_925')
call_7618 = relay.TupleGetItem(func_924_call(), 0)
call_7619 = relay.TupleGetItem(func_925_call(), 0)
func_4031_call = mod.get_global_var('func_4031')
func_4034_call = mutated_mod.get_global_var('func_4034')
const_7644 = relay.const([True,True,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,False,False,False,False], dtype = "bool")#candidate|7644|(312,)|const|bool
call_7643 = relay.TupleGetItem(func_4031_call(relay.reshape(const_7644.astype('bool'), [312,])), 1)
call_7645 = relay.TupleGetItem(func_4034_call(relay.reshape(const_7644.astype('bool'), [312,])), 1)
var_7659 = relay.var("var_7659", dtype = "bool", shape = (312,))#candidate|7659|(312,)|var|bool
bop_7660 = relay.logical_and(const_7644.astype('bool'), relay.reshape(var_7659.astype('bool'), relay.shape_of(const_7644))) # shape=(312,)
func_4183_call = mod.get_global_var('func_4183')
func_4186_call = mutated_mod.get_global_var('func_4186')
call_7670 = relay.TupleGetItem(func_4183_call(relay.reshape(call_7612.astype('bool'), [7, 364])), 0)
call_7671 = relay.TupleGetItem(func_4186_call(relay.reshape(call_7612.astype('bool'), [7, 364])), 0)
output = relay.Tuple([call_7612,call_7618,call_7643,bop_7660,call_7670,])
output2 = relay.Tuple([call_7613,call_7619,call_7645,bop_7660,call_7671,])
func_7697 = relay.Function([var_7659,], output)
mod['func_7697'] = func_7697
mod = relay.transform.InferType()(mod)
mutated_mod['func_7697'] = func_7697
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7698 = relay.var("var_7698", dtype = "bool", shape = (312,))#candidate|7698|(312,)|var|bool
func_7697_call = mutated_mod.get_global_var('func_7697')
call_7699 = func_7697_call(var_7698)
output = call_7699
func_7700 = relay.Function([var_7698], output)
mutated_mod['func_7700'] = func_7700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4454_call = mod.get_global_var('func_4454')
func_4456_call = mutated_mod.get_global_var('func_4456')
call_7720 = relay.TupleGetItem(func_4454_call(), 0)
call_7721 = relay.TupleGetItem(func_4456_call(), 0)
func_2534_call = mod.get_global_var('func_2534')
func_2537_call = mutated_mod.get_global_var('func_2537')
var_7725 = relay.var("var_7725", dtype = "float32", shape = (240,))#candidate|7725|(240,)|var|float32
const_7726 = relay.const([8,-9,-5,-4,-2,-4,-3,8,-7,-9,2,8,-5,-8,7,10,1,2,8,5,-10,-4,9,-6,-7,-3,-9,1,-2,-10,-8,-4,8,3,3,-7,-8,-7,3,5,8,-8,-9,-10,-8,7,1,-5,9,-6,-5,-7,-5,9,-8,7,2,-3,-6,9,-3,2,-2,-2,4,-3,-2,3,7,-5,-6,-8,-10,1,-4,-2,9,-3,-8,1,-5,-10,-7,6,4,-8,6,3,7,-1,-4,-1,4,3,-9,3,-1,4,-7,3,-4,4,-8,-5,8,-7,-9,-5,-2,-7,3,6,-5,3,3,-3,-8,6,-1,1,6,-2,-8,-8,-5,3,4,-3,2,-1,3,-3,-1,7,1,-1,-7,4,2,-6,-8,5,8,1,4,-6,-7,8,-7,10,-2,-7,-6,6,4,4,-3,-1,5,-3,-7,-5,-6,-2,5,-3,3,-10,10,8,8,-5,1,3,10,-6,-3,-1,2,-5,5,8,7,-8,3,-2,-10,-3,-3,-8,10,-1,-2,3,-6,-5,-6,9,-10,-2,-7,-4,-1,7,-1,8,8,4,2,8,-6,10,-5,-5,8,-7,-2,-3,8,-7,-6,2,-4,5,-6,7,5,5,-6,6,10,10,-6,2,-2,5,-4,3,-3,-6,-1,-4,8,-10,-2,2,-10,1,-5,10,-4,7,-1,-5,-1,5,4,10,-9,-8,-7,-10,-5,6,5,-9,-10,6,9,6,-4,1,8,-10,4,-7,-10,-1,-9,-5,3,-3,2,-4,3,-2,3,-7,-7,-10,-6,-5,4,-3,2,-7,-6,8,2,-1,-6,-5,8,-9,-8,-7,4,5,7,10,8,4,8,1,6,8,-7,-10,-3,-2,-6,7,3,9,-10,9,6,3,5,-5,-8,-4,4,-1,-3,-7,-4,-10,-6,8,7,5,1,7,-2,1,-5,-6,-9,5,-4,2,9,-6,2,-3,9,2,6,8,-4,-7,-3,8,-1,-5,-7,2,8,5,2,-9,-5,-3,-2,8,-9,5,-9,-8,-5,-7,10,2,-9,-8,-2,2,-1,8,-5,1,1,-9,-8,1,10,10,9,-7,-7,-7,-5,-6,-5,10,-1,5,-9,-2,-1,-2,1,10,2,-8,2,9,6,4,2,-3,-6,-4,-5,4,9,9,-8,2,6,-2,-7,8,6,9,5,-8,-10,-8,9,5,7,-2,2,-6,5,-9,-9,-8,-10,-1,-8,-7,-3,7,4,2,5,6,-7,8,-2,-4,5,-6,-10,-9,5,-9,9,-10,6,-4,-3,8,7,-2,4,-10,10,3,2,-10,-8,-3,5,-3,5,-3,10,-10,9,5,-10,4,10,1,1,-9,10,-9,-7,-7,-10,3,-4,-4,-7,-8,-6,8,-2,-10,-10,-2,-10,5,-3,-10,-3,-10,7,9,5,-2,10,6,9,-4,4,-9,-7,4,5,1,-8,-4,-7,1,-10,2,5,1,6,4,1,6,6,-8,-3,-10,1,8,-6,-1,-1,8,3,-1,5,2,-9,-4,8,9,-4,-4,2,5,10,6,-9,1,-4,-2,10,-4,2,-5,1,-4,4,10,-2,5,10,-5,-6,10,9,-8,6,7,10,-10,7,-6,6,6,-2,9,-4,1,-3,9,-5,-2,-9,-8,-2,-9,-4,1,-4,7,-9,8,-3,5,-1,9,-3,6,-9,-10,5,-1,6,-9], dtype = "uint8")#candidate|7726|(630,)|const|uint8
call_7724 = relay.TupleGetItem(func_2534_call(relay.reshape(var_7725.astype('float32'), [240,]), relay.reshape(const_7726.astype('uint8'), [630,]), ), 5)
call_7727 = relay.TupleGetItem(func_2537_call(relay.reshape(var_7725.astype('float32'), [240,]), relay.reshape(const_7726.astype('uint8'), [630,]), ), 5)
output = relay.Tuple([call_7720,call_7724,var_7725,const_7726,])
output2 = relay.Tuple([call_7721,call_7727,var_7725,const_7726,])
func_7728 = relay.Function([var_7725,], output)
mod['func_7728'] = func_7728
mod = relay.transform.InferType()(mod)
mutated_mod['func_7728'] = func_7728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7729 = relay.var("var_7729", dtype = "float32", shape = (240,))#candidate|7729|(240,)|var|float32
func_7728_call = mutated_mod.get_global_var('func_7728')
call_7730 = func_7728_call(var_7729)
output = call_7730
func_7731 = relay.Function([var_7729], output)
mutated_mod['func_7731'] = func_7731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5761_call = mod.get_global_var('func_5761')
func_5763_call = mutated_mod.get_global_var('func_5763')
call_7733 = relay.TupleGetItem(func_5761_call(), 1)
call_7734 = relay.TupleGetItem(func_5763_call(), 1)
output = call_7733
output2 = call_7734
func_7737 = relay.Function([], output)
mod['func_7737'] = func_7737
mod = relay.transform.InferType()(mod)
output = func_7737()
func_7738 = relay.Function([], output)
mutated_mod['func_7738'] = func_7738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4599_call = mod.get_global_var('func_4599')
func_4600_call = mutated_mod.get_global_var('func_4600')
call_7747 = relay.TupleGetItem(func_4599_call(), 0)
call_7748 = relay.TupleGetItem(func_4600_call(), 0)
output = call_7747
output2 = call_7748
func_7769 = relay.Function([], output)
mod['func_7769'] = func_7769
mod = relay.transform.InferType()(mod)
mutated_mod['func_7769'] = func_7769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7769_call = mutated_mod.get_global_var('func_7769')
call_7770 = func_7769_call()
output = call_7770
func_7771 = relay.Function([], output)
mutated_mod['func_7771'] = func_7771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7486_call = mod.get_global_var('func_7486')
func_7487_call = mutated_mod.get_global_var('func_7487')
call_7772 = func_7486_call()
call_7773 = func_7486_call()
const_7774 = relay.const([[[False,False,True,True,True,False,True,False,False,True,False,True,True,False],[False,True,False,False,True,True,False,True,False,True,False,False,False,True],[True,True,True,True,True,True,False,False,True,True,True,True,True,True],[False,False,True,False,True,False,True,False,True,True,False,True,False,False],[False,False,False,True,True,True,True,False,False,True,False,True,True,True],[True,False,True,True,False,False,False,False,False,True,False,False,False,False],[True,False,True,True,False,True,True,True,False,False,True,True,True,True],[False,False,True,True,False,False,True,True,False,True,True,True,False,True],[True,False,False,False,False,True,False,False,False,True,True,False,True,False],[True,False,True,False,True,False,True,True,False,False,False,True,True,True],[False,True,True,True,True,True,True,True,False,True,True,False,False,False],[False,True,False,False,False,False,False,True,False,True,False,True,False,True],[False,True,False,False,True,True,True,False,False,False,False,False,False,True],[False,False,False,True,False,False,True,False,False,True,True,True,False,True]],[[False,False,False,False,False,True,False,True,False,True,True,True,True,True],[True,True,True,False,False,True,True,False,True,False,False,False,True,True],[True,True,False,True,False,True,True,False,False,True,True,False,False,False],[True,True,False,True,True,True,True,True,False,False,True,True,False,True],[True,True,False,False,False,False,True,False,True,False,False,True,True,True],[False,True,False,True,True,False,False,False,True,True,True,True,True,False],[False,True,True,False,False,True,False,True,True,False,True,True,False,False],[False,False,True,False,True,True,False,False,True,False,False,False,False,True],[True,True,True,False,True,False,False,True,True,False,False,True,False,False],[False,True,False,False,True,True,True,False,True,True,True,False,True,True],[True,True,True,False,True,False,False,False,True,False,True,False,True,False],[True,True,False,True,False,False,False,True,True,True,False,False,False,True],[True,True,False,False,True,True,False,False,False,True,False,True,True,True],[True,False,True,True,False,True,False,False,True,False,False,True,True,False]],[[True,True,True,False,True,True,False,False,True,True,False,True,False,False],[False,True,True,True,False,True,False,False,False,True,False,False,True,False],[True,True,False,False,False,True,True,True,True,True,True,False,False,True],[True,False,True,True,False,True,False,False,False,True,False,False,False,False],[False,True,True,True,False,True,False,True,True,True,False,False,False,False],[False,True,True,True,True,True,False,True,False,False,True,False,True,True],[False,True,False,True,True,True,False,True,False,False,False,True,True,True],[True,False,True,True,True,False,False,False,True,False,False,True,True,True],[True,False,True,False,False,True,True,True,False,True,False,False,False,True],[False,True,False,True,True,True,True,False,True,True,True,True,False,True],[False,True,False,False,True,True,False,True,False,True,False,False,False,True],[True,False,False,True,False,False,False,True,True,True,False,False,True,True],[True,True,False,False,False,False,False,True,False,False,True,False,True,True],[True,True,False,False,False,False,True,False,False,True,True,True,True,True]],[[False,False,False,True,True,False,True,True,True,True,False,True,True,True],[True,False,True,False,False,True,False,False,False,True,False,False,True,True],[False,False,True,False,False,True,True,True,False,True,False,True,False,False],[False,False,False,True,False,True,False,False,False,False,False,False,False,False],[True,True,False,True,True,True,True,True,False,False,False,False,True,False],[True,False,False,True,False,False,True,False,True,True,True,False,True,True],[False,True,False,True,False,False,False,True,True,True,False,True,False,False],[False,True,False,True,True,True,True,True,True,False,False,True,True,True],[True,False,False,True,False,False,True,False,False,True,False,True,True,False],[True,True,True,True,False,True,False,False,False,True,True,False,True,True],[True,False,False,False,True,True,True,True,True,False,True,False,False,True],[True,True,False,False,False,True,True,False,False,False,False,True,True,False],[True,True,True,False,True,False,False,False,True,True,True,False,False,True],[False,False,False,False,True,False,False,True,True,False,True,False,False,False]],[[True,True,False,False,False,True,False,False,True,False,False,False,True,False],[True,True,True,True,True,True,True,False,False,False,True,True,False,True],[True,False,True,False,True,True,False,False,False,False,False,False,False,False],[False,False,False,True,True,True,True,True,True,False,True,True,False,True],[False,False,False,False,False,True,False,False,False,True,False,False,True,False],[False,False,False,True,False,True,False,True,False,True,False,True,False,False],[False,False,True,True,True,True,True,True,False,True,True,False,False,True],[False,False,True,True,False,False,False,False,True,False,True,True,False,False],[True,False,False,True,False,True,False,True,False,True,True,False,True,False],[False,True,False,False,True,True,True,True,True,True,True,False,False,True],[False,False,True,True,False,True,False,False,False,True,False,False,False,True],[False,True,True,False,True,True,False,False,True,False,False,False,True,True],[True,True,False,True,True,True,False,True,False,False,False,False,True,False],[False,False,True,False,True,False,False,False,False,True,True,True,True,True]],[[True,False,False,False,False,True,True,True,False,True,True,True,False,True],[True,True,True,False,True,False,False,True,False,True,True,False,False,False],[True,True,True,True,True,False,True,True,True,True,True,True,False,False],[False,False,True,False,False,False,False,True,False,False,False,False,True,False],[True,True,False,False,False,False,True,False,False,True,True,True,False,False],[False,False,False,True,True,True,True,True,True,True,False,True,True,True],[False,True,True,True,False,True,True,True,True,True,True,True,False,False],[False,False,True,True,False,True,False,True,True,True,False,False,False,True],[False,True,False,False,False,True,True,True,False,False,False,False,True,True],[True,True,True,False,True,False,True,False,False,True,True,True,False,False],[True,False,True,True,True,True,True,False,False,False,True,False,True,True],[False,False,False,False,False,True,False,True,False,True,True,False,False,True],[True,False,True,False,False,False,False,True,True,True,True,True,False,False],[True,True,True,False,True,True,False,True,True,False,True,True,True,False]],[[True,True,True,False,True,False,False,True,False,False,False,True,False,False],[False,False,False,False,True,False,False,False,True,False,False,False,False,True],[True,True,True,False,False,True,False,True,True,True,False,False,True,False],[True,True,False,False,True,True,False,False,True,False,True,False,False,True],[True,False,False,False,True,True,True,True,False,True,False,False,False,False],[False,False,False,True,True,True,True,True,False,True,True,True,True,False],[True,True,True,False,True,True,True,False,True,False,True,True,True,True],[True,False,True,True,False,False,True,True,True,False,False,True,False,False],[False,True,False,True,True,False,False,False,True,True,True,False,True,False],[False,False,False,True,False,True,True,False,True,False,False,False,False,False],[True,False,False,True,False,True,True,True,True,True,True,False,False,False],[True,True,True,True,True,True,False,False,False,True,False,False,True,False],[False,False,True,False,False,True,True,False,False,False,True,True,True,True],[False,True,True,True,False,False,False,False,True,False,False,False,False,False]],[[False,True,True,False,True,False,False,False,True,False,False,False,False,False],[True,False,True,True,True,False,False,False,True,False,False,False,True,False],[False,True,False,False,False,True,True,False,True,True,False,True,True,False],[True,False,False,False,False,True,False,True,False,False,True,True,True,True],[True,False,True,False,True,False,False,True,True,True,True,True,True,True],[False,False,False,True,False,False,True,False,False,True,False,False,False,True],[True,True,True,False,True,False,False,False,False,True,True,False,False,True],[True,True,False,True,False,False,False,False,True,True,True,True,True,True],[True,True,False,False,False,True,False,True,False,True,True,False,False,False],[False,False,True,True,False,False,False,False,False,False,False,True,False,True],[False,True,False,True,False,True,True,False,False,False,True,False,True,False],[True,True,False,True,True,False,True,True,False,True,True,False,False,False],[False,False,True,False,True,False,False,True,True,True,True,True,True,False],[False,False,False,True,True,False,False,True,False,True,False,False,True,False]],[[True,True,False,True,True,True,True,False,True,True,True,False,True,False],[False,False,False,False,True,False,True,False,False,True,True,True,True,False],[True,False,False,False,True,False,True,False,True,True,False,True,False,True],[True,True,True,True,False,True,True,True,True,False,True,True,False,True],[False,True,True,False,True,True,False,False,True,False,False,False,True,False],[True,True,True,True,True,False,False,True,True,False,False,False,False,True],[True,False,False,False,True,True,False,False,False,False,False,True,False,False],[False,True,False,True,True,True,False,False,True,True,True,False,True,True],[False,True,False,False,False,True,False,True,False,False,False,True,False,False],[False,True,True,False,False,True,False,True,True,False,True,False,True,False],[True,False,True,True,False,False,True,False,True,True,True,True,True,True],[False,False,False,True,True,True,True,True,False,True,True,True,False,False],[False,True,True,True,False,False,False,False,False,False,False,True,True,True],[True,True,True,True,True,True,False,False,False,False,True,False,True,False]],[[False,True,True,False,True,False,True,True,False,True,True,True,True,True],[False,True,False,True,False,True,True,True,False,True,True,False,True,False],[True,True,True,True,False,False,True,True,False,False,False,False,True,True],[True,True,False,False,False,True,True,False,False,False,True,True,False,False],[True,True,False,False,False,True,True,True,True,False,False,True,False,True],[False,False,False,True,True,True,True,True,False,True,True,False,True,False],[True,True,False,True,True,False,True,True,False,True,False,True,True,True],[True,False,False,True,False,False,False,True,True,False,False,True,True,True],[False,False,True,True,False,True,False,True,True,False,False,True,True,True],[True,False,False,False,False,False,True,False,False,True,True,False,True,True],[True,False,False,True,True,True,True,True,False,True,False,False,True,False],[True,False,True,False,True,True,False,True,True,True,False,False,True,True],[False,False,True,True,True,True,True,False,True,False,True,True,True,True],[True,True,True,True,True,True,True,False,False,False,False,False,True,False]],[[False,False,True,False,True,False,True,False,False,False,False,True,False,True],[False,False,False,False,True,True,True,False,False,False,True,True,False,True],[True,False,True,True,False,False,True,True,True,False,True,True,True,True],[False,True,False,False,True,False,False,False,False,True,True,False,False,False],[True,False,True,False,False,False,True,True,False,False,False,True,True,False],[False,False,True,False,True,False,True,True,False,True,True,False,True,False],[True,True,False,False,True,True,True,False,True,False,True,False,True,True],[True,False,True,False,False,True,False,True,True,True,False,True,True,False],[False,False,False,True,True,True,True,False,False,False,False,False,True,True],[False,False,True,True,False,False,True,False,True,False,True,False,True,False],[False,False,False,False,False,False,True,True,True,False,False,False,True,False],[False,False,False,False,False,True,True,False,True,True,False,True,True,True],[True,False,True,True,True,True,True,True,False,False,True,True,True,True],[True,False,True,True,False,True,True,False,False,True,False,False,False,False]],[[True,True,True,False,True,True,False,False,False,True,False,False,False,True],[False,True,False,True,True,True,True,True,True,False,True,True,True,True],[True,True,True,False,False,False,True,False,True,True,False,False,False,False],[False,False,True,False,True,True,False,False,True,True,True,False,True,False],[True,True,True,True,False,False,True,True,True,False,True,False,True,True],[False,False,False,True,False,True,True,False,True,True,False,False,False,False],[False,False,False,True,True,False,False,True,False,False,False,True,False,True],[False,False,True,False,False,True,True,False,False,True,False,True,False,True],[True,True,True,True,True,True,True,False,True,True,True,False,True,False],[True,False,True,True,False,False,False,False,True,True,False,False,False,True],[True,True,False,True,False,True,False,True,False,True,True,False,True,False],[False,False,False,True,False,False,True,False,False,True,False,False,False,True],[False,True,False,True,False,False,False,False,True,True,True,True,False,False],[True,True,False,True,False,True,True,False,True,False,True,True,True,True]],[[True,True,False,True,False,False,True,False,False,True,False,True,False,True],[True,True,True,False,False,False,False,False,True,True,True,False,True,False],[True,False,True,True,True,False,False,False,False,True,False,True,True,True],[False,True,False,True,False,False,False,True,False,False,True,True,True,False],[True,False,False,False,False,False,True,True,False,False,True,False,True,False],[True,False,True,False,False,True,True,False,True,True,True,True,True,True],[False,False,True,True,False,False,False,False,False,True,False,False,True,True],[False,True,True,False,True,False,False,True,False,True,False,True,True,True],[True,False,False,True,True,False,True,True,False,True,False,False,False,False],[False,False,True,False,True,True,False,False,True,False,False,True,False,False],[True,True,True,False,True,False,True,False,False,False,False,False,True,False],[False,False,False,False,False,True,False,True,False,True,True,False,True,True],[True,True,True,False,False,True,False,False,True,False,False,True,False,False],[True,False,False,True,False,False,True,False,False,True,True,False,False,False]]], dtype = "bool")#candidate|7774|(13, 14, 14)|const|bool
bop_7775 = relay.floor_mod(call_7772.astype('float32'), relay.reshape(const_7774.astype('float32'), relay.shape_of(call_7772))) # shape=(13, 14, 14)
bop_7778 = relay.floor_mod(call_7773.astype('float32'), relay.reshape(const_7774.astype('float32'), relay.shape_of(call_7773))) # shape=(13, 14, 14)
uop_7779 = relay.acosh(const_7774.astype('float64')) # shape=(13, 14, 14)
output = relay.Tuple([bop_7775,uop_7779,])
output2 = relay.Tuple([bop_7778,uop_7779,])
func_7802 = relay.Function([], output)
mod['func_7802'] = func_7802
mod = relay.transform.InferType()(mod)
mutated_mod['func_7802'] = func_7802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7802_call = mutated_mod.get_global_var('func_7802')
call_7803 = func_7802_call()
output = call_7803
func_7804 = relay.Function([], output)
mutated_mod['func_7804'] = func_7804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5547_call = mod.get_global_var('func_5547')
func_5549_call = mutated_mod.get_global_var('func_5549')
call_7812 = relay.TupleGetItem(func_5547_call(), 2)
call_7813 = relay.TupleGetItem(func_5549_call(), 2)
uop_7820 = relay.sin(call_7812.astype('float32')) # shape=(312,)
uop_7822 = relay.sin(call_7813.astype('float32')) # shape=(312,)
output = relay.Tuple([uop_7820,])
output2 = relay.Tuple([uop_7822,])
func_7835 = relay.Function([], output)
mod['func_7835'] = func_7835
mod = relay.transform.InferType()(mod)
output = func_7835()
func_7836 = relay.Function([], output)
mutated_mod['func_7836'] = func_7836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4759_call = mod.get_global_var('func_4759')
func_4760_call = mutated_mod.get_global_var('func_4760')
call_7851 = relay.TupleGetItem(func_4759_call(), 3)
call_7852 = relay.TupleGetItem(func_4760_call(), 3)
func_5095_call = mod.get_global_var('func_5095')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_7853 = relay.TupleGetItem(func_5095_call(), 0)
call_7854 = relay.TupleGetItem(func_5096_call(), 0)
output = relay.Tuple([call_7851,call_7853,])
output2 = relay.Tuple([call_7852,call_7854,])
func_7872 = relay.Function([], output)
mod['func_7872'] = func_7872
mod = relay.transform.InferType()(mod)
output = func_7872()
func_7873 = relay.Function([], output)
mutated_mod['func_7873'] = func_7873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7737_call = mod.get_global_var('func_7737')
func_7738_call = mutated_mod.get_global_var('func_7738')
call_7902 = func_7737_call()
call_7903 = func_7737_call()
func_1419_call = mod.get_global_var('func_1419')
func_1424_call = mutated_mod.get_global_var('func_1424')
var_7909 = relay.var("var_7909", dtype = "uint8", shape = (630,))#candidate|7909|(630,)|var|uint8
var_7910 = relay.var("var_7910", dtype = "uint64", shape = (1, 2548))#candidate|7910|(1, 2548)|var|uint64
call_7908 = relay.TupleGetItem(func_1419_call(relay.reshape(var_7909.astype('uint8'), [5, 14, 9]), relay.reshape(var_7909.astype('uint8'), [5, 14, 9]), relay.reshape(var_7910.astype('uint64'), [2548,]), ), 6)
call_7911 = relay.TupleGetItem(func_1424_call(relay.reshape(var_7909.astype('uint8'), [5, 14, 9]), relay.reshape(var_7909.astype('uint8'), [5, 14, 9]), relay.reshape(var_7910.astype('uint64'), [2548,]), ), 6)
uop_7912 = relay.exp(var_7910.astype('float64')) # shape=(1, 2548)
func_7436_call = mod.get_global_var('func_7436')
func_7439_call = mutated_mod.get_global_var('func_7439')
const_7923 = relay.const([-4.677867,4.862521,-5.560511,1.108377,-3.827350,1.226110,3.396619,5.323116,-3.755390,-8.984975,-9.544098,8.987721,5.221137,-8.577778,2.322105,1.200078,-4.956077,0.821473,-7.907264,7.112280,2.721114,-7.716399,5.967179,4.268575,3.603582,6.635411,-1.080658,6.725058,-8.879650,-0.785147,-4.438574,4.541950,-6.954883,6.421950,1.277363,-7.245771,-8.165991,5.402572,-0.232616,9.519525,-6.932774,-2.275651,0.435467,-5.304476,3.071256,-3.826231,1.175143,-7.607080,-7.033955,-4.904420,4.011374,-2.261987,0.184563,5.501226,-3.848934,4.301593,8.947716,2.663013,-3.872041,-7.257654,5.225935,2.845174,-6.157694,-4.592843,-3.595965,4.745679,6.954275,1.999611,8.675254,4.104959,0.913169,1.552948,-0.488367,-7.937322,-8.761978,-4.054931,8.596102,-0.387486,-3.945739,-4.518374,6.014597,-2.016382,-9.152170,3.671716,-0.807675,6.457885,-8.148969,5.451667,-2.611620,9.095500,-2.203108,-3.763699,7.054026,-3.229116,5.797978,-2.500933,-3.634686,-0.012211,-7.665062,-0.002137,-2.219027,1.250337,-7.362908,1.498750,-6.638088,-1.022011,-3.138444,-9.784197,5.215816,1.326213,3.620522,-5.916302,-4.084680,-1.514950,-2.181737,-0.210857,6.850595,6.998236,-7.015746,-3.725902,4.880963,2.991168,7.862314,-0.769116,-0.098664,3.871523,8.908629,6.177310,-0.261384,6.505475,0.514618,1.913406,0.153140,-5.814790,4.695706,-5.211483,6.115542,0.838338,8.274264,-1.682265,1.383006,2.985191,0.776956,8.705908,3.528428,-4.370306,-2.074317,0.534313,2.103172,8.735792,-1.666930,4.368777,5.202334,-9.066648,-8.541238,4.618763,-6.274006,2.951506,1.298100,-2.116655,8.885274,9.225926,-5.719589,9.191025,8.178881,3.404045,-1.652279,4.865641,9.485645,-0.255965,-9.782738,7.100978,-3.717549,-7.058696,7.634828,-5.104443,-9.511234,-4.677272,-0.226656,-4.331110,-2.575142,6.255473,-6.495673,3.506042,-5.335407,-5.488197,8.336634,-1.247744,-8.342605,8.764990,0.002737,-1.836893,-1.756275,-2.432625,-7.210874,-8.818414,-5.052866,3.224905,-5.987668,-2.925233,-3.503666,-4.228317,5.785393,4.203059,3.699212,7.110846,5.075975,-3.985796,7.939554,-1.521802,9.737065,-0.070676,5.568393,0.444236,-7.744812,-9.685554,-4.607117,-4.326290,8.423542,2.401833,4.114598,9.052824,-4.945666,-7.423705,5.274077,9.273662,9.668711,-1.851542,0.818442,-5.497513,-7.742389,-7.800057,2.337757,-3.357551,-2.470168,-2.461660,-6.996294,-9.072525,1.816857,-7.704084,-5.332259,-1.223472,-4.607656,-7.008117,-9.484054,0.487142,9.004926,9.911645,9.411950,-7.046164,6.890412,2.149601,-5.328971,-0.667632,-4.497758,-5.430558,-7.663306,-5.752828,-7.364155,-2.976844,2.800386,6.488116,5.010834,-8.312423,-3.551016,-9.930401,7.795780,8.940278,-7.822669,4.031731,8.752205,2.777851,-3.984117,-5.018455,-9.671548,2.202863,-1.216111,-5.256141,4.873963,-8.360214,8.024598,1.344842,-7.646048,5.210853,-7.076717,6.457313,-3.669476,7.095837,-7.519796,0.297655,-6.288941,7.792818,2.125937,-3.544490,-7.822713,-7.438157,-5.769582,-3.636508,1.073739,0.947639,-9.356045,9.655745,7.313565,-2.714707,-5.445859,-8.083947,-1.177758,6.198056,3.938185,7.768842,4.937502,-8.709604,3.029985,-3.382503,-4.070355,4.724544,2.427465,4.141875,4.890778,-1.999461,-0.459919,6.246372,-3.737252,-7.654294,-7.674999,7.740048,-3.455182,0.690502,-1.666346,-1.320434,8.525902,-1.051657,-4.203753,5.113324,9.714829,9.457149,-2.011893,-9.114196,8.642269,6.549411,-1.319349,2.274930,-1.954809,0.906070,4.197996,5.933179,2.727853,6.768829,0.231935,3.175397,-0.675360,-1.591014,8.490633,-3.096934,-2.733669,1.271025,-0.631242,3.079553,5.977142,-3.391415,-6.182572,-7.612423,8.930218,1.457059,-7.385772,1.838251,3.763657,-7.568427,-1.584883,0.484013,-0.166528,-6.711325,-5.064908,6.873611,-4.016837,-8.838397,6.809988,-5.007675,-1.231967,4.119544,-4.931320,0.102156,1.086698,9.104046,-2.007022,-3.376632,5.620046,-8.398294,-7.995117,1.986694,0.150980,1.315234,-1.202676,4.957332,4.097846,-1.826545,4.190010,9.468063,6.366927,-8.996963,5.433756,-3.935978,4.144419,-3.168400,-0.224924,-7.573885,6.740680,-0.056219,4.148048,-7.374577,-1.913941,2.444185,1.679444,-9.136882,4.590721,-0.583058,2.776941,1.547503,5.504153,-6.421292,8.994442,9.428217,-1.701422,1.032841,2.502553,-4.667737,-9.300119,9.060190,-7.649527,-7.677833,4.536663,3.246046,8.336039,0.517572,-7.305864,-7.393852,2.002782,1.754280,4.066806,5.983430,-5.868216,-6.697351,9.050788,-4.118001,-5.953534,4.039591,-5.356226,-3.878877,3.204560,-9.863933,-8.543623,-7.912661,2.053457,2.142980,-5.114428,2.088982,7.353087,7.112569,-7.441659,-0.305932,-4.249584,-2.739275,-3.755486,-7.373190,-0.266912,-6.502716,5.179072,-7.217816,-3.545943,0.190095,2.856426,8.971019,-1.626074,0.896561,0.377852,7.779700,-2.705067,-1.378706,7.695218,-6.924962,6.694636,-4.657662,2.357707,7.828967,-5.514836,-0.051181,-5.398186,-4.003564,-5.867140,5.990461,-0.260940,2.177136,-4.351246,3.266985,-5.631385,6.317734,-9.742641,-8.659281,0.440277,8.737013,-8.416951,7.252599,-8.406527,-6.116719,7.789663,-0.713009,-9.707001,-4.853577,7.339594,-2.913210,-3.999919,7.068173,4.850041,-2.738760,-7.943407,0.396118,-1.419538,7.155551,-7.754139,6.190046,5.048884,2.070767,-7.896283,-2.690101,-9.274500,3.789944,-3.326001,2.458582,9.883637,-3.399326,-7.487955,-2.489817,-8.737006,3.723268,9.399948,6.148783,-6.799374,1.651046,-8.483057,-2.494450,-3.132073,0.067853,-7.799097,0.915740,7.577390,9.606184,7.393849,-5.071604,2.132396,-1.751132,-5.189777,0.961207,0.493298,9.933877,-5.206936,-4.783987,-1.583745,-0.360861,-1.121243,-7.913783,0.408561,4.762575,1.360357,7.718565,6.850670,-5.347945,2.679183,-8.994957,-4.852253,-5.559132,9.217683,2.196455,6.837478,5.075830,6.094617,2.731857,0.757653,4.545386,-3.861621,-6.344990,6.433954,9.278767,-6.674553,1.927466,-9.748237,-9.035577,-3.253437,5.076649,9.237765,5.356937,-5.341136,2.782191,-6.984676,-1.969399,3.880163,-6.553299,0.252891,4.658343,-6.438358,-0.340753,4.753438,-2.403600,8.588144,9.029428,-5.112184,9.361108,4.117388,1.015271,-3.719995,-1.350042,-9.225925,-4.918664,-6.764500,4.688485,-7.712449,4.824310,-5.045613,8.033044,1.506730,-4.197006,9.737062,-2.575412,0.744086,-5.978683,-7.103203,8.448979,-1.107771,-4.662141,-0.502670,6.159382,-3.923740,-6.645236,-2.954035,-7.338329,-9.451347,-1.066682,-1.585742,-3.013746,-8.887057,0.160766,6.510980,6.607312,-3.551474,-9.409250,7.775336,7.130229,8.206483,8.206928,7.725422,3.747813,-0.324802,-7.660513,8.191444,-5.036308,5.329807,-2.126376,0.207801,-0.634509,9.942129,-6.825816,-3.184768,-9.516846,3.976961,-2.770956,6.791908,-3.610336,8.874403,9.477355,5.777726,-7.007730,4.614407,8.424283,-5.005817,9.089303,-2.727770,-5.850702,2.932849,-6.972283,-2.505640,-9.520181,0.620570,-8.404593,3.171149,4.318273,7.680828,7.773673,-7.389587,4.170095,9.500150,-2.714387,-5.434645,-2.274465,-5.906096,-8.076341,0.514942,-7.657969,8.166923,4.314939,-6.076889,9.758291,-2.103876,9.824735,8.118086,3.248734,8.334601,3.989343,4.485417,7.963338,-1.390020,-0.995165,-8.945007,-1.536040,0.032472,-8.524827,-0.183441,-0.951533,5.647974,6.541228,-1.532732,8.002302,1.880339,-6.419078,-5.095552,-7.071895,9.709907,4.039416,6.645790,-7.153452,5.972108,1.889635,-7.682703,6.283835,9.591481,3.880417,5.268193,7.634110,0.223168,6.642155,3.218240,-7.574599,4.984481,4.464525,-0.471329,7.225400,-6.733323,8.616341,-8.713448,-2.999206,-2.125628,-9.504898,-0.916198,-2.211211,2.215250,-6.708284,2.629289,2.011231,-4.384498,2.197406,-5.144152,-3.442210,9.559016,-7.211625,-4.691026,8.299630,-0.859530,9.652094,4.453689,-1.590602,5.984894,-9.134720,8.299719,5.602840,-4.354622,-6.484725,-3.189338,9.101895,1.095749,3.431410,0.633408,-5.629190,-2.787763,-6.105648,6.293632,-4.408850,1.028417,2.581778,5.187803,-3.576810,1.819103,-2.964558,-9.897884,-1.372001,5.323027,9.290273,-5.823455,-2.824227,8.111518,0.991303,0.399501,-5.468651,-3.106185,-0.341940,-7.137723,9.622373,3.604359,9.597580,3.145555,8.922036,-0.941118,8.545023,-8.376872,6.110492,7.732804,-1.999643,8.407465,4.957180,-6.703538,7.490476,6.031483,0.364962,-9.636421,-4.279853,-2.612367,9.356564,-4.485472,9.467090,-6.389654,0.197031,4.766113,3.344505,-8.454379,-6.115223,-3.716851,1.156155,-4.877474,-1.433646,-7.243543,1.095287,5.027796,8.316009,9.622410,-5.553211,6.931541,9.185365,-5.609259,3.166414,-0.901125,1.776083,0.258709,-3.507654,6.508729,8.578419,5.667442,-4.846974,6.130194,-7.928114,9.996227,-4.328640,-3.647886,6.169135,-6.740226,2.661666,6.852776,2.555592,-6.977793,-7.181233,7.762263,8.167379,-0.143341,2.212371,5.048197,0.092829,-8.418356,3.925434,7.050438,4.745276,-6.849525,-0.751805,-5.210309,-1.594882,1.574578,-5.361529,-6.215246,8.543784,-6.870633,-3.397799,1.950164,-4.172467,-6.174728,-6.126483,-7.561205,1.646440,6.624030,-3.878136,-2.762839,-2.404948,-1.677446,-3.032546,-6.853410,5.347183,-1.132911,-4.295483,3.320343,7.462417,-1.373450,-1.577966,-0.528365,1.439428,2.488475,6.348337,2.374338,-3.126296,-2.747032,-2.937207,-8.872998,0.313779,-7.582030,-9.299474,-9.083488,9.379126,-0.714174,-5.396437,0.994703,-2.669168,3.579356,-6.949083,4.184150,-4.858135,9.529043,-7.584510,1.471472,-5.789871,4.695724,1.250611,1.118554,-3.440057,-4.837618,-6.240781,7.171336,1.669375,-5.624160,6.665113,-2.614688,0.526000,-2.090064,4.986549,-4.393978,7.140243,1.720867,2.668453,5.080546,-1.805362,-9.764242,-8.872053,9.745525,8.384204,1.186877,8.283062,-0.631455,-5.919688,-8.343607,-5.107932,9.732452,-6.235985,1.691978,8.308091,5.720693,-8.190649,-3.296019,6.071982,-0.332197,8.240446,6.050625,7.807282,-4.626182,2.450711,-8.912958,8.335295,5.986885,-4.291868,9.245659,-8.507991,4.148240,4.387571,2.675969,1.551491,7.903094,4.741673,1.236162,-6.087474,-1.298958,-4.446005,-2.651882,9.801956,9.510220,-6.781518,3.162007,6.870766,1.551164,2.929643,-6.313212,3.265657,8.386042,-6.725788,4.600276,-3.035241,-9.241495,-3.549907,-8.699435,1.435880,4.812589,7.151126,-3.174421,8.058365,5.337809,-0.879172,0.170769,2.729954,-8.897531,0.135630,-7.578884,-0.902389,-4.805386,7.221144,-8.722831,-0.083741,-6.159557,-7.099844,2.888321,1.902927,-9.094871,-1.178616,2.204342,1.565773,4.803158,8.219806,-0.528859,7.669941,3.749603,-0.247434,9.405833,1.586109,-1.165515,-9.670794,-3.182203,-3.505579,7.372176,-3.021767,-4.305866,-2.976474,8.255361,3.692171,8.470325,-0.265115,-1.926806,-3.090742,-5.710173,6.743176,-7.453866,-7.032557,3.262356,2.091157,9.610899,3.297325,5.145524,3.982751,-7.072550,5.818571,2.194505,-6.425248,-0.964400,3.285456,-8.363863,0.176822,-5.569460,9.176149,-2.997215,-3.885501,6.115940,2.485247,-2.147690,1.802722,9.518089,-1.446479,-6.206142,-3.221846,-8.140042,2.347911,9.296439,6.042984,-9.839262,5.092066,7.361018,-6.366337,-5.629743,-9.972677,2.739323,5.236795,-7.667884,1.656661,-6.807853,9.229996,-4.029781,5.368165,5.173865,6.949284,-4.322171,-7.612729,1.074820,-1.383044,-7.672744,-8.693527,-1.562375,-2.096937,6.091749,5.370011,-2.519025,-1.704097,-3.729455,-4.797875,-8.757476,6.028347,-7.749614,1.594382,2.285659,5.768598,-6.217228,9.814910,2.172915,8.484153,5.926892,-9.806848,4.087084,-7.333235,7.182553,3.286590,3.526362,-1.786135,-4.550233,8.530567,2.396757,7.199425,-1.604422,-5.469643,-0.913478,-3.827530,-4.394159,9.063231,-5.227431,7.268854,-3.591824,9.701312,-6.582279,-8.144725,8.783726,-2.570338,-4.048715,-1.070648,-6.108173,6.908628,-5.308480,-8.841844,-6.035523,-1.005994,-1.660560,-1.111929,-0.740938,-6.092968,1.723541,3.427222,-1.891828,0.511239,1.164258,9.944611,-7.376046,8.717788,-5.543504,-8.186884,4.491207,6.220251,-9.454519,4.015936,-8.658057,5.405660,-2.013201,-4.461132,-5.543653,8.522646,-8.255817,5.867934,5.337991,5.287277,6.887208,7.867210,2.138513,-6.031107,-0.981555,-0.188338,8.384986,2.796762,0.996039,-6.938451,9.338163,9.714401,-0.831793,1.888168,3.779030,8.136003,-4.334777,-6.982679,-9.488797,5.345861,-4.046745,9.973413,-0.485107,7.905216,-4.766012,4.996434,7.804473,5.803924,-9.229636,-9.116995,-6.355021,-7.497562,-5.895789,-2.525212,7.440462,3.182261,7.682455,7.230580,2.798740,3.956807,-6.161247,-7.496123,-4.032742,3.736517,-2.544217,-8.931854,0.719533,3.886964,4.100357,-6.828525,2.993381,-7.366093,-0.156044,-9.600987,-5.600440,-4.928938,9.473479,7.179983,-3.336492,-2.682147,-7.913963,7.336923,9.680379,9.384226,-2.379655,8.166553,2.517780,1.010420,2.178490,-2.477181,1.203578,-6.241712,9.577277,-3.418378,-0.450910,-2.501226,-2.989736,-6.495044,-8.048256,-7.724487,-4.305226,-7.870994,-6.449231,5.185727,-2.108944,0.149322,-1.296078,-3.345286,7.523690,-5.964040,3.280602,-8.209553,-7.810718,8.599967,-8.588198,-9.523919,7.825716,1.003749,-5.882309,7.491260,-6.539374,-9.524151,-6.220057,-7.456748,-8.410132,2.448244,7.407759,2.514948,-6.510962,-0.716371,-0.045322,8.460610,4.439432,9.032260,-2.085030,-0.538899,-1.485051,2.352054,7.300636,-2.626795,-7.259878,2.377408,-3.511395,-6.486144,5.349745,4.970960,0.600670,4.713565,2.254926,-6.379111,5.792210,-1.829152,5.193511,-0.191009,8.445504,-3.547555,-7.703210,2.744605,-0.079984,-3.713370,-0.531867,-8.816173,-9.805898,8.516938,-8.402975,4.193406,-6.943069,2.788121,-2.688649,6.475828,6.579815,0.363861,0.164890,-3.240995,-0.956931,-1.020263,-4.936129,-4.455763,-3.419255,6.243683,8.834179,8.647130,-2.896211,-5.552073,-0.394531,6.634424,3.919151,-7.606761,7.860137,2.566943,8.828388,1.287511,-5.880828,-2.413370,7.549348,2.632381,4.240803,-0.801304,-6.794582,-1.087775,-5.233884,-0.162652,-3.034974,6.432587,6.525039,-6.285419,-1.294581,-9.034833,2.747512,1.042076,-0.716810,-2.166017,4.902267,-3.137781,8.454370,6.736637,-3.398052,9.571516,-8.860486,-2.883182,4.878980,-6.732313,-0.061918,-2.368002,4.796554,-1.075371,0.541524,2.835728,-9.358364,-4.029179,-5.613051,0.615064,5.198738,-9.143984,8.276726,1.125158,3.368847,-5.133796,-7.619403,5.286499,9.651419,-2.848535,-2.697681,3.689739,3.772083,-3.321507,6.622934,-2.579181,9.336362,-2.937535,3.875082,9.668538,8.251363,2.341450,4.226265,-5.490952,-6.627558,0.070961,-1.687173,3.779522,-4.950881,-8.788336,-0.335226,-4.725848,3.002289,-4.060324,-1.102834,1.383733,-3.256604,3.708261,9.138109,-8.522539,-4.449568,1.493541,-2.333821,-0.384724,-5.916174,5.862502,2.939775,-5.319094,-4.340974,-4.494738,3.374221,0.157292,-1.214071,2.977497,-3.907086,1.645844,4.980131,6.453231,-5.182198,-5.669765,-0.975404,5.720561,6.253692,-8.171349,-3.051569,-7.813136,-4.965626,1.077873,-0.033017,0.306912,-7.332255,-3.299489,6.085385,-1.375224,7.605946,-0.096310,-2.240985,-5.420807,-5.730804,8.393650,9.593593,-2.717367,3.056953,-8.890269,-2.662756,-3.520359,-5.077300,-2.107612,1.340864,2.634582,5.826631,-6.181162,8.393814,1.069074,-9.261432,7.514192,-2.792988,9.792367,6.809418,2.682550,1.029996,5.434218,-0.744035,8.058453,-4.671824,8.250223,3.554825,1.360523,-0.905620,-2.703245,6.673607,-7.977593,6.071810,-3.970443,0.081003,-4.236359,0.052865,-7.330123,1.659910,3.623778,5.950519,2.144336,0.531544,4.112460,2.624888,-2.983075,7.943095,-4.829536,-7.889564,-0.084403,-6.988586,0.190093,-7.078648,-7.179149,7.769765,2.115854,-0.061114,8.106987,8.929698,9.253625,-8.649962,4.222362,-5.247664,-5.414202,-3.470151,-8.255315,5.944383,4.733542,5.566423,4.676022,3.027728,4.597283,4.223432,8.973940,-2.363661,8.199349,-4.035094,-7.246857,-4.245444,-7.135373,5.065457,-0.557095,-9.008325,-1.016653,4.716864,-5.537531,-6.598199,-5.418819,4.557945,-7.343762,-9.758181,-6.307794,8.075999,1.792296,-3.257937,-0.321468,-6.151666,-4.964123,-4.144503,-4.261975,5.378035,9.350425,4.009871,8.250763,2.927115,-3.417324,-2.625446,5.085635,5.512805,9.990088,-4.904617,-3.360447,-7.051505,2.215134,7.153750,-9.056544,-1.316022,9.883952,3.836445,-3.514750,-5.524764,-3.282033,-0.009730,-8.179082,-2.579275,1.247319,-9.274880,1.320554,-5.642278,1.243298,4.706864,-6.695749,9.062888,6.854629,5.449587,-0.598520,-7.137039,-2.102568,-9.301293,-9.092864,-3.981998,1.763628,7.607629,-3.007517,9.647332,-8.913816,8.309940,-8.248874,-4.253086,-0.287866,-3.686691,1.082455,4.696914,2.937985,0.189898,3.954091,8.412972,-3.187361,6.179644,-4.136946,-8.832576,1.813797,-4.645546,6.720816,0.764863,-4.454975,-6.046674,-6.727317,2.375113,5.640272,-5.483722,-4.266226,4.961423,-6.171979,0.145242,7.196077,4.257760,-5.791996,-9.374060,-7.706245,9.378205,7.654505,8.418649,1.622343,8.544506,5.854902,6.386338,8.746462,-5.543252,-0.957675,3.603257,7.838541,-3.258404,-5.054236,4.356336,4.094206,6.141117,-1.816317,-7.294412,1.384342,-5.326854,4.254672,-7.727024,-2.932326,7.960405,8.337656,-6.228480,5.018598,-7.982397,-3.395771,3.195630,-7.056503,-1.219935,9.855532,-2.122739,2.056655,6.718428,9.181491,4.392005,-1.337696,-8.641498,1.822596,-1.147601,9.391994,-0.081554,0.477834,1.842787,-9.511992,-4.039710,0.927076,-9.986244,-5.900250,1.309480,-8.309565,5.677726,1.710410,-1.273953,9.550417,-9.366017,1.237356,-0.137147,-9.428485,-3.870115,3.378665,-7.863113,2.456815,7.424120,-5.553737,3.130360,-3.749284,6.258722,-6.324547,-5.288957,-5.344237,9.911309,-6.196472,-1.660275,6.472150,9.879629,-1.881507,5.367511,0.876134,9.165427,-3.344928,-6.580910,3.649520,-7.229921,8.771622,4.867577,7.747189,8.219256,-2.292208,-4.080969,-3.628875,1.835526,4.410864,-0.098241,1.045025,-4.855663,6.016607,-6.890159,-0.557758,-7.969682,-7.077297,-9.753927,-4.156167,2.106797,9.136904,7.936501,0.933291,-5.490685,3.754675,9.456786,-2.405225,-3.467207,-3.740715,7.533452,-1.850890,-3.895847,9.386478,-5.437250,-2.393603,0.703387,-7.980263,7.062848,3.236897,-8.893803,7.471431,8.565882,-2.404087,9.236357,2.244308,6.620872,-1.121791,-7.185315,-6.180167,-1.162601,-0.564491,7.384299,-9.359976,-5.900542,-7.496422,-7.327082,1.781796,-2.193698,-1.960992,-4.935247,-9.584523,6.760113,-0.572787,-8.616297,-1.348479,6.286251,-5.927334,4.794977,-7.613469,-1.882743,4.762473,-1.649717,3.827052,-8.471698,-2.385502,1.000827,-5.145460,2.159795,-7.954391,-5.050160,-8.504464,7.768808,-0.026042,4.797848,-3.385148,5.494273,5.434780,-6.222800,-0.506291,-7.989851,-4.414995,7.878936,-6.243858,7.467548,7.101196,8.814302,4.171595,-7.183251,-1.368694,-9.456093,-4.597192,-0.577443,6.365894,-0.742202,1.328106,-5.527302,-6.623051,-7.334608,4.561573,2.006243,1.645780,-8.550017,5.156115,-1.231581,1.863511,-4.948934,3.330700,7.595407,-3.825925,-8.865917,-5.115425,2.391777,8.719299,2.074477,1.014874,1.545507,9.703447,3.116311,-2.258869,-8.357906,9.635020,5.945877,3.886761,8.374326,-6.585283,0.508733,9.445594,5.038874,9.843188,9.133594,0.885299,3.666323,-7.514858,6.523463,3.892975,-1.218205,6.780207,6.186055,-6.511118,-2.823049,-9.211385,1.797171,-5.633459,-1.832625,1.264008,-2.666645,-9.742420,-1.127638,-7.970372,-0.135643,8.474628,-2.068668,-6.500006,-6.508377,6.941918,-2.178572,-4.108398,9.515277,-1.376305,-3.376117,7.064456,4.325116,9.990240,-4.094239,3.970716,0.677102,-4.763392,0.702166,4.416497,3.403683,-8.468779,-8.705059,-0.245889,1.904451,-0.472883,-8.672720,-9.897790,1.357041,6.565712,-4.813006,-7.715039,-6.781439,8.274725,-7.880314,7.650835,7.426424,4.210231,-8.873216,4.900343,-5.263185,-4.326727,1.075887,-9.467969,-3.884188,6.712604,2.728491,-5.756806,-6.867993,6.634995,-6.042507,-2.249993,3.978510,1.039939,9.499985,2.692920,-7.020768,6.882880,3.431781,6.860101,4.861057,-7.167185,-5.456921,-2.217721,-5.795257,5.532045,-3.009252,4.425235,4.061622,-2.320580,8.003041,0.336356,1.585195,-5.794259,-3.704589,-8.247062,-0.626633,-6.740829,8.930267,6.939877,1.204948,-2.833885,-1.937222,3.314422,-8.864365,8.026564,5.505627,-0.265442,2.183137,4.488982,-5.866138,7.288811,-6.449381,0.324920,4.806347,-0.029475,-9.665608,-2.671840,-4.401693,-1.841645,1.066551,-7.067432,-6.140246,4.997554,7.266185,-9.912372,-2.181566,-4.856240,2.607926,-8.279821,-4.823009,3.232202,8.772242,-7.616578,0.212994,9.869334,-9.894975,-0.891943,-9.463808,-4.128846,-9.575316,9.358665,-2.592647,-9.516569,4.818522,-6.124028,7.263380,-9.165917,-0.919027,-2.207354,-1.079236,-0.375379,2.288249,0.586425,4.969455,-1.099763,-0.388987,-8.523099,7.984529,0.285917,-2.630122,0.624836,4.889659,-6.993252,-6.408853,-2.075229,-8.994492,8.733414,6.429138,2.781093,-7.200877,-4.963571,7.434091,2.500668,1.411610,-7.454082,0.826596,3.924251,7.118637,-6.619568,-1.414078,-7.688517,4.049492,8.052573,1.725563,0.617128,-3.700499,-2.602917,7.562194,-5.080206,-5.364705,-6.720098,-4.602456,2.933209,9.038469,3.661712,-3.640463,2.724453,6.699897,-3.325534,3.662081,-2.065096,5.624852,-0.134505,2.263476,-1.792539,1.242501,2.067723,-9.162289,9.898218,-5.375192,-3.604303,4.905555,-9.781171,-7.362189,1.651896,9.354368,4.803257,-8.661790,9.296549,-8.609107,-3.785735,-2.364943,-8.313482,-2.518840,-2.921114,-4.647453,3.143228,-8.552314,5.964413,-7.332966,1.648057,-2.012098,-8.640338,-5.884397,-6.191220,6.918500,-3.375811,-5.467574,9.814273,-6.605754,5.223403,-3.872510,-4.368295,3.433060,9.711501,-1.164520,7.048885,5.450190,-8.496828,7.961373,-0.096728,0.253576,-3.793357,8.871213,-1.827746,9.019064,2.968046,-2.525927,1.934890,1.563924,8.489119,5.977613,-7.988290,-9.610361,-0.225638,-5.016461,5.352668,3.913226,7.148619], dtype = "float32")#candidate|7923|(2160,)|const|float32
call_7922 = relay.TupleGetItem(func_7436_call(relay.reshape(const_7923.astype('float32'), [9, 16, 15])), 0)
call_7924 = relay.TupleGetItem(func_7439_call(relay.reshape(const_7923.astype('float32'), [9, 16, 15])), 0)
bop_7927 = relay.bitwise_and(var_7910.astype('int16'), call_7908.astype('int16')) # shape=(1, 2548)
bop_7930 = relay.bitwise_and(var_7910.astype('int16'), call_7911.astype('int16')) # shape=(1, 2548)
bop_7933 = relay.logical_or(var_7910.astype('bool'), relay.reshape(uop_7912.astype('bool'), relay.shape_of(var_7910))) # shape=(1, 2548)
func_4479_call = mod.get_global_var('func_4479')
func_4482_call = mutated_mod.get_global_var('func_4482')
const_7937 = relay.const([[2.410101,2.756336],[3.690377,-5.262828],[6.769439,-4.454515],[4.132681,4.288004],[9.818562,-9.441506],[-4.692609,-3.874821],[-9.544853,-0.429013],[1.849183,1.938952],[-6.293975,-6.561116],[-7.427516,3.584923],[-3.116435,9.424925],[-3.535506,4.845541],[0.611177,-2.208665],[4.403529,-5.533339],[6.049435,-7.632436],[-1.394661,7.571938],[-7.880072,-1.457287],[-7.156590,-1.998453],[-3.714666,-4.686865],[1.103513,-6.284256],[-9.419111,-4.003797],[-5.462441,7.217354],[8.392805,-6.951786],[7.234846,-1.769646],[4.460372,-4.616138],[1.970932,0.657272],[-0.402436,-1.948571],[6.745131,-2.619934],[-5.562032,-4.025789],[9.574327,-1.366741],[2.376688,-4.198208],[-8.244687,4.441028],[2.790652,2.511150],[-7.545901,-6.889291],[0.308298,-6.428202],[-6.495136,-6.425685],[1.341986,5.729107],[-8.380664,-1.319325],[-9.510408,-3.476915],[5.563805,-8.637826],[3.385132,7.721623],[-6.766229,-7.434414],[9.367941,3.028884],[8.942300,-3.184497],[-4.787174,7.289711],[1.565801,-3.405880],[-4.538426,-5.697512],[-1.321375,-6.452667],[-5.729859,-5.018856],[-9.864644,-1.679861],[3.868064,6.865331],[6.703681,-1.046907],[7.446894,-4.291624],[5.648672,-5.298868],[8.293580,7.837141],[6.131020,1.017002],[-1.280333,9.701785],[-5.310929,-6.310797],[2.392082,-4.735685],[4.164568,-4.388016],[-4.606211,5.744359],[6.339321,7.431798],[-8.716888,9.131947],[2.845163,4.924675],[-1.101265,-7.440348],[0.391447,-2.433973],[-8.867754,2.479865],[5.007916,-9.768958],[4.015582,2.553339],[9.898138,0.172096],[-3.822587,1.801243],[-2.826759,5.960283],[2.729207,8.320658],[-2.411985,3.809946],[9.119801,-3.403670],[-1.100658,-9.562274],[-4.098203,5.427402],[5.876647,4.948718],[4.118136,3.256858],[9.962541,-8.511867],[-1.485654,5.148557],[3.216620,1.357518],[-1.024443,-7.736280],[-7.103876,-1.496275],[-2.527231,-8.566317],[-2.242213,9.709089],[-1.732817,1.681093],[9.134443,5.651130],[-8.567675,-1.058590],[7.529481,-2.292299],[9.795217,0.535123],[4.329543,-8.599130],[4.216507,9.230367],[-3.098162,6.343173],[6.857533,7.824836],[-6.764182,-6.100874],[2.392717,-0.818851],[-1.710546,-4.325389],[3.235356,2.456739],[5.163317,0.989488],[-6.370096,2.571652],[9.862060,-1.585079],[3.367934,-7.255144],[-6.941675,-0.433748],[2.575984,-6.873488],[5.971385,-0.951291],[-6.107986,-3.999499],[6.476745,-0.520656],[-0.503875,0.875538],[-9.358826,0.260344],[0.437878,2.358478],[-3.408497,9.031292],[7.148357,-1.283690],[0.761953,3.031529],[-9.690804,5.242752],[1.585270,-4.275924],[4.898510,-8.406701],[7.735722,-0.437819],[7.970719,-1.029775],[8.600735,8.945380],[6.134385,-1.679234],[-2.846419,3.962768],[8.272264,4.351870],[-1.971774,-2.733489],[2.950878,-5.652122],[-5.511535,4.984133],[-9.972398,-5.022972],[0.232771,-9.730453],[2.707731,3.507655],[4.821350,-6.891685],[-5.272014,3.836321],[7.036995,-7.955871]], dtype = "float32")#candidate|7937|(132, 2)|const|float32
var_7938 = relay.var("var_7938", dtype = "bool", shape = (312,))#candidate|7938|(312,)|var|bool
call_7936 = relay.TupleGetItem(func_4479_call(relay.reshape(const_7937.astype('float32'), [8, 3, 11]), relay.reshape(var_7938.astype('bool'), [312,]), ), 1)
call_7939 = relay.TupleGetItem(func_4482_call(relay.reshape(const_7937.astype('float32'), [8, 3, 11]), relay.reshape(var_7938.astype('bool'), [312,]), ), 1)
func_7436_call = mod.get_global_var('func_7436')
func_7439_call = mutated_mod.get_global_var('func_7439')
call_7943 = relay.TupleGetItem(func_7436_call(relay.reshape(const_7923.astype('float32'), [9, 16, 15])), 0)
call_7944 = relay.TupleGetItem(func_7439_call(relay.reshape(const_7923.astype('float32'), [9, 16, 15])), 0)
func_1118_call = mod.get_global_var('func_1118')
func_1123_call = mutated_mod.get_global_var('func_1123')
var_7952 = relay.var("var_7952", dtype = "uint16", shape = (4, 280))#candidate|7952|(4, 280)|var|uint16
call_7951 = relay.TupleGetItem(func_1118_call(relay.reshape(call_7902.astype('float64'), [7, 6, 3]), relay.reshape(var_7952.astype('uint16'), [1120,]), relay.reshape(call_7936.astype('bool'), [312, 1]), relay.reshape(bop_7933.astype('uint64'), [13, 14, 14]), ), 0)
call_7953 = relay.TupleGetItem(func_1123_call(relay.reshape(call_7902.astype('float64'), [7, 6, 3]), relay.reshape(var_7952.astype('uint16'), [1120,]), relay.reshape(call_7936.astype('bool'), [312, 1]), relay.reshape(bop_7933.astype('uint64'), [13, 14, 14]), ), 0)
output = relay.Tuple([call_7902,var_7909,call_7922,const_7923,bop_7927,bop_7933,call_7936,const_7937,var_7938,call_7943,call_7951,var_7952,])
output2 = relay.Tuple([call_7903,var_7909,call_7924,const_7923,bop_7930,bop_7933,call_7939,const_7937,var_7938,call_7944,call_7953,var_7952,])
func_7958 = relay.Function([var_7909,var_7910,var_7938,var_7952,], output)
mod['func_7958'] = func_7958
mod = relay.transform.InferType()(mod)
mutated_mod['func_7958'] = func_7958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7958_call = mutated_mod.get_global_var('func_7958')
var_7960 = relay.var("var_7960", dtype = "uint8", shape = (630,))#candidate|7960|(630,)|var|uint8
var_7961 = relay.var("var_7961", dtype = "uint64", shape = (1, 2548))#candidate|7961|(1, 2548)|var|uint64
var_7962 = relay.var("var_7962", dtype = "bool", shape = (312,))#candidate|7962|(312,)|var|bool
var_7963 = relay.var("var_7963", dtype = "uint16", shape = (4, 280))#candidate|7963|(4, 280)|var|uint16
call_7959 = func_7958_call(var_7960,var_7961,var_7962,var_7963,)
output = call_7959
func_7964 = relay.Function([var_7960,var_7961,var_7962,var_7963,], output)
mutated_mod['func_7964'] = func_7964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5267_call = mod.get_global_var('func_5267')
func_5269_call = mutated_mod.get_global_var('func_5269')
call_7978 = relay.TupleGetItem(func_5267_call(), 0)
call_7979 = relay.TupleGetItem(func_5269_call(), 0)
func_5761_call = mod.get_global_var('func_5761')
func_5763_call = mutated_mod.get_global_var('func_5763')
call_8007 = relay.TupleGetItem(func_5761_call(), 2)
call_8008 = relay.TupleGetItem(func_5763_call(), 2)
func_3333_call = mod.get_global_var('func_3333')
func_3335_call = mutated_mod.get_global_var('func_3335')
const_8012 = relay.const([8,10,-6,-4,-7,-10,9,9,8,-6,-6,-2,-2,-10,-10,3,-8,7,3,9,-2,-8,-8,2,3,-8,6,-9,-2,9,7,-7,-6,-10,-6,8,-9,-8,3,4,-8,4,-2,-4,3,6,7,6,-8,2,-7,-3,-9,5,10,8,2,6,7,10,-5,-4,8,6,8,1,10,-4,-4,9,-8,4,8,-4,1,-7,-10,9,-10,-5,4,-6,9,-1,6,-9,-6,-4,4,-1,4,1,8,-2,-6,-9,-3,7,2,7,10,4,-2,2,8,10,3,6,3,2,-4,-4,-5,-1,8,8,-7,-6,3,-4,3,-5,-7,-8,10,2,10,-1,6,3,-1,2,3,6,7,-7,3,-7,-4,1,-4,7,10,8,-1,9,-9,-1,-10,8,-4,8,-6,6,-9,-3,-1,-6,8,8,-4,-3,-10,5,1,7,-8,-3,-9,6,7,10,10,10,9,-9,-4,6,-9,4,-6,-5,8,-3,-8,-7,-10,4,3,8,-1,5,-1,9,-3,2,-6,8,-7,-2,-1,10,6,-1,-8,-10,-8,-4,7,-3,-8,2,3,9,4,-5,-2,6,10,8], dtype = "uint64")#candidate|8012|(220,)|const|uint64
call_8011 = relay.TupleGetItem(func_3333_call(relay.reshape(const_8012.astype('uint64'), [220,])), 1)
call_8013 = relay.TupleGetItem(func_3335_call(relay.reshape(const_8012.astype('uint64'), [220,])), 1)
output = relay.Tuple([call_7978,call_8007,call_8011,const_8012,])
output2 = relay.Tuple([call_7979,call_8008,call_8013,const_8012,])
func_8020 = relay.Function([], output)
mod['func_8020'] = func_8020
mod = relay.transform.InferType()(mod)
output = func_8020()
func_8021 = relay.Function([], output)
mutated_mod['func_8021'] = func_8021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4890_call = mod.get_global_var('func_4890')
func_4891_call = mutated_mod.get_global_var('func_4891')
call_8028 = relay.TupleGetItem(func_4890_call(), 0)
call_8029 = relay.TupleGetItem(func_4891_call(), 0)
output = relay.Tuple([call_8028,])
output2 = relay.Tuple([call_8029,])
func_8036 = relay.Function([], output)
mod['func_8036'] = func_8036
mod = relay.transform.InferType()(mod)
mutated_mod['func_8036'] = func_8036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8036_call = mutated_mod.get_global_var('func_8036')
call_8037 = func_8036_call()
output = call_8037
func_8038 = relay.Function([], output)
mutated_mod['func_8038'] = func_8038
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8074 = relay.var("var_8074", dtype = "float64", shape = (12, 14, 16))#candidate|8074|(12, 14, 16)|var|float64
var_8075 = relay.var("var_8075", dtype = "float64", shape = (12, 14, 16))#candidate|8075|(12, 14, 16)|var|float64
bop_8076 = relay.maximum(var_8074.astype('float64'), relay.reshape(var_8075.astype('float64'), relay.shape_of(var_8074))) # shape=(12, 14, 16)
func_7436_call = mod.get_global_var('func_7436')
func_7439_call = mutated_mod.get_global_var('func_7439')
const_8084 = relay.const([7.660328,-5.584941,-6.927345,2.922424,9.201407,-5.686292,-8.402321,7.394376,-5.877229,2.847093,4.839107,-9.949086,9.960848,5.572669,1.748824,0.792725,-6.659307,6.812987,7.952129,-0.987161,7.069100,-2.850126,-1.887856,2.670706,-3.662100,-0.498251,-0.140478,-7.227030,-2.958306,-3.826102,-2.213115,-4.740736,9.902701,8.130556,-8.252860,-3.158669,-4.485344,9.705109,-0.034781,-7.187898,6.033701,3.275738,8.666797,-3.236495,4.941279,0.450197,-9.316064,3.255926,5.200119,-2.492797,-7.339300,-5.252304,6.248880,-9.040012,-8.948879,-8.320345,7.941385,1.217062,3.062099,-1.568973,-4.488935,-1.265150,0.641640,3.022054,5.274444,1.538711,-3.157941,-0.980730,5.034550,5.860353,4.111421,-0.693815,5.050096,7.616120,6.468379,-8.990814,-7.713062,-7.207870,-6.513667,-1.472959,6.267410,6.889840,6.577351,-8.482773,-1.447068,-6.872335,1.769903,-0.069932,-3.189348,-5.979367,7.117737,-2.996237,9.165928,-3.203914,-5.762062,9.095325,-5.045303,0.696273,6.756144,-8.059307,4.610137,0.972528,0.779776,-9.009346,-4.995161,5.573730,5.774308,1.482160,-5.543340,-7.977366,-8.401445,5.819241,-4.366397,4.461194,-7.470621,-8.018643,-4.205860,-8.181588,9.113698,-6.592771,9.265787,-6.230393,3.214590,-2.215673,3.692241,-4.630476,-6.642988,-0.522477,-6.968112,-2.497421,8.052928,-9.440478,1.433005,-0.306200,0.264953,-5.159407,-6.699738,2.570973,-0.333450,-9.610559,-4.790403,1.739896,-5.193102,-8.105409,8.103786,2.311589,1.901817,7.388405,-0.023653,5.291912,-7.445563,5.256409,-0.889201,-9.937950,-4.613770,-1.870721,0.845098,1.039806,5.482425,-2.547632,5.113951,-2.491762,6.696219,8.875041,0.688310,-3.581750,-1.514887,-8.222338,-0.082913,8.267461,4.463006,-1.572911,2.235961,-9.374808,4.361315,-7.155669,-9.958591,4.640941,-1.209644,-9.457850,6.425940,6.602784,-2.761467,9.359875,-8.878141,7.785772,-4.885303,-9.039196,1.260736,7.625416,9.159196,2.172284,-6.199531,0.517962,5.229727,-8.446858,-7.784885,-7.968864,5.885990,-4.696684,-1.479700,-7.001125,8.149610,9.080400,4.394195,8.328631,-3.571167,8.518067,3.222491,3.569651,-1.335045,9.215940,1.905799,1.001098,1.695350,-1.309173,9.207453,9.295472,7.817973,4.803231,7.826067,3.526826,-4.851348,-3.365264,2.923095,-6.213347,1.374755,8.331889,-0.931587,1.912166,-2.763727,0.651515,-2.609498,-4.152281,0.098273,3.004653,-6.380760,-6.127506,4.016582,-5.021374,-0.012817,-8.473913,-3.040285,-5.210149,-8.359470,7.491582,1.673354,-0.744020,1.474194,4.512390,-5.374336,5.516533,1.703873,0.096923,-5.369661,-4.693011,3.776913,-5.814711,-2.133947,-0.189629,-6.821109,1.449684,-0.730732,-5.965584,-6.223667,4.813350,-8.505793,9.239659,-0.363840,-7.995997,-7.193988,-3.009939,4.278555,8.741509,1.576562,-4.391596,8.662818,-3.689550,0.283876,7.971009,-1.194057,-4.542609,7.759491,7.413119,7.634520,-2.465552,-3.512219,2.495064,2.465334,8.225014,-0.274914,4.246206,7.098219,0.514654,-5.064408,-6.520581,2.979074,0.625480,-2.983465,6.393389,-1.654342,3.404563,-8.014142,-6.852142,4.395369,-1.987478,0.218389,-7.969380,5.678838,3.845080,-8.280962,8.363706,-5.232033,4.982317,2.720105,-1.011533,-2.326440,-5.902865,-5.249899,2.104870,-7.858658,8.156861,3.137631,-5.086921,-5.574894,-0.750498,1.478185,-0.269402,-9.707474,-3.008178,-1.966154,5.569203,-1.122596,1.637284,-6.252470,-6.893742,0.164189,-1.132575,3.180623,0.791579,-0.154521,6.674777,5.359223,8.008674,6.406119,2.382657,3.921786,-7.858432,-4.803291,-8.110659,-9.923858,6.203852,5.679538,-5.094854,-1.918759,-2.131238,6.242219,-2.219257,9.950795,-2.561638,8.868816,1.351281,-6.923116,-2.202492,4.835611,9.284471,-2.174002,2.353119,-7.879247,-3.944715,-1.250078,3.297369,-9.321018,-3.168675,-2.289957,-2.481017,1.769974,-3.181335,-1.963320,-0.095715,0.443183,6.226906,8.777485,5.970667,3.781890,-1.644667,-3.670474,5.401744,-8.076581,5.033972,3.966123,-5.542128,8.334611,-2.313663,-5.258391,3.141751,7.556429,1.927053,-4.502506,-6.343445,-9.071477,0.870163,4.052546,-6.447751,-2.043066,-1.807545,3.572053,-0.209111,3.773827,-0.560386,-2.796581,3.247554,8.744976,-6.755550,-6.837169,3.904961,8.404753,0.248609,0.352545,-0.752768,0.389187,1.955700,-0.179316,1.806256,9.874575,9.227685,-9.165594,1.331944,4.183661,3.055280,-6.397454,-3.563503,8.018698,-8.429206,0.725608,-8.230177,7.071163,-0.593062,-6.599509,0.867318,9.543643,4.985937,-3.186108,2.804004,-9.357881,6.187926,1.505675,-8.745279,6.122550,-9.572930,-6.261174,-3.727153,-3.112017,5.274157,-1.146747,-7.865218,9.428762,3.345824,-2.016545,7.925023,2.384535,-3.773634,-7.808196,4.891477,3.930843,0.730628,7.381386,-3.510078,-0.287905,-9.175847,-3.658640,-7.001384,-0.209174,6.001944,3.997069,7.504715,0.984183,9.295369,-3.237016,-2.526543,-7.934998,1.705220,5.111535,-0.308468,2.342072,-9.408292,5.605085,5.502925,4.103689,4.047627,9.412381,2.579325,-9.351339,6.250681,-1.326569,-1.982708,0.237318,-1.747758,8.295855,-0.545351,3.127895,4.294633,6.385969,-2.476885,2.648530,6.516082,-1.452424,-8.826961,-7.163358,3.756298,5.906598,0.873424,-7.135903,7.269776,-8.096753,-6.142754,-8.338150,5.779076,8.282590,-4.800646,7.132760,9.761831,9.059924,-9.846879,8.567455,-5.363692,3.929599,1.670307,5.456823,-6.173736,-9.599537,2.262464,-6.150450,9.603024,-4.298849,-2.784991,8.170307,4.799655,1.848608,-4.127104,0.459837,3.311939,0.838937,-6.557865,6.480432,-9.206081,-7.177615,6.981702,-1.949369,-7.837059,-5.499470,-6.061191,-8.055721,-2.328779,9.116324,9.871193,8.992382,-3.121891,7.054138,2.077839,3.687069,7.844942,2.678332,-0.033096,7.688058,-1.278795,3.002244,7.208220,-1.876352,-7.001863,8.538371,2.306327,-0.770658,3.335906,-9.275937,4.529703,-4.483352,2.989222,0.142426,-1.908023,-0.788058,-4.950757,8.561742,-8.991308,-1.408460,-1.795472,-9.682101,-8.496105,0.282475,-5.761827,4.261125,9.521082,-6.385485,7.106074,-7.794277,-8.166160,4.472550,-4.346162,4.528216,-6.320937,4.658301,2.393252,-4.012540,4.861032,0.213491,-5.903938,1.978771,-3.120064,-3.536949,0.035768,7.193727,-8.870156,-3.804621,-0.827392,4.023362,4.326975,2.432041,-1.022269,0.987882,9.446290,2.156751,4.755804,0.102366,0.039382,0.949893,-9.053752,-5.987872,9.532908,3.273311,-4.598377,2.487280,-6.037121,-3.705149,-7.433883,-7.303852,-2.101207,1.035712,-2.761139,-4.932448,5.942304,-3.704396,-4.524258,-8.142048,3.519179,6.435372,-0.313962,-8.288716,2.706808,9.213725,-8.082902,3.077922,7.437497,-6.603377,2.601857,6.429588,-7.830310,-8.716832,0.906545,7.446926,7.665191,-6.338701,0.140057,-2.652459,-0.296632,-1.214929,5.830163,8.437564,7.748224,-2.189842,-0.960354,7.159609,2.675269,-1.387353,-8.257695,5.990781,-6.030893,9.372549,-4.358287,1.947750,2.251084,9.772116,6.490460,0.242708,-8.465023,-5.342328,-4.242494,-4.735479,6.580963,-5.743114,-3.738119,2.726547,5.090444,-9.136334,-9.423973,-8.192848,7.690740,-7.227487,3.925399,5.031910,2.621866,-6.862827,9.482521,6.087137,3.743289,-5.724330,-0.932431,7.861370,-0.144107,5.730364,6.951598,-6.830714,-2.684379,4.400101,5.286523,1.315430,-7.572014,-6.790552,-9.799571,0.804198,1.932225,9.913616,0.222366,5.365385,-1.376762,7.716498,6.287050,8.537154,-6.567939,7.011749,6.470233,4.740403,-4.006228,-1.032956,1.403976,1.577022,9.399984,-3.284559,5.579884,1.005526,0.776937,8.054214,-1.905510,-0.605876,6.484627,-4.935157,-8.422245,9.179435,4.700199,-4.665167,6.253320,0.401988,-1.382796,1.014031,-0.810726,-3.898853,7.917717,-0.689441,-9.692898,8.609640,-1.929406,-0.811463,7.600235,7.395114,1.930462,5.550222,4.458028,-1.641204,5.546600,0.651662,-1.352136,3.347563,2.924590,6.328128,-0.500810,-3.638754,2.867217,7.979364,-0.580412,8.819650,-7.283607,-2.768633,-4.212986,-0.988423,-4.700786,3.357211,8.421451,1.522603,-3.560006,-7.110363,0.530270,1.599846,9.031688,6.819263,6.608459,-1.444143,0.537668,-8.527623,2.139468,6.478317,-5.200260,-5.374643,3.202264,8.138539,-8.465219,-5.627544,-7.339260,-7.198499,1.046610,1.602914,6.191841,-2.266742,-7.071601,-0.429936,6.937843,7.797450,-4.885750,0.356266,3.043914,7.702736,-0.294630,7.375004,2.320517,3.321392,8.096424,7.015358,-0.625630,-7.132227,-5.244610,-1.396559,-7.465932,-7.452970,0.481142,4.221839,-0.289562,-7.763813,-8.181546,0.174280,-0.659573,-7.295549,5.405078,-2.490298,-3.998325,-3.237446,7.537179,-2.960198,-5.026822,-3.805801,0.501694,1.329222,-3.728269,-5.177804,7.760561,-3.647775,-4.611858,-0.671102,-6.877141,5.436855,7.924868,-0.406882,-5.047804,-9.884021,3.527138,-0.237039,-9.329446,-6.801299,-4.656865,-9.381234,-5.839956,4.977625,8.360914,-0.578582,-6.139900,-6.006944,6.265598,-3.433942,-9.245657,-4.507029,3.828032,-5.824303,-1.757460,-1.137475,7.172371,6.239085,6.956516,4.972450,-0.622063,-3.565247,3.504359,-9.752907,9.621887,5.255462,8.665820,3.255211,-5.995827,0.068163,-7.718669,4.052634,-7.447967,8.690330,2.847363,-8.881118,-3.456135,-7.634559,-9.382103,-1.311426,5.633983,7.839816,-7.170038,0.892625,-0.679379,1.555125,-5.014637,-7.443990,1.631299,-4.357944,-6.906223,-0.879587,-3.566986,5.998687,1.739704,-0.669264,0.999324,-0.084731,1.743757,-4.983909,-9.048977,-1.180778,8.125899,9.497167,7.283010,8.471157,-0.713781,-5.133115,4.693840,9.797671,-5.000341,6.383192,3.933825,7.860381,-4.758241,-8.307555,2.733434,3.578387,-0.499275,-2.742862,8.342187,8.974656,4.499283,-7.066661,9.824518,-9.685763,9.998230,9.573522,2.232247,6.397725,9.153364,-3.751886,3.537861,4.776392,-1.884901,9.028855,6.983663,6.157780,-6.852159,3.486293,-7.342466,8.192757,-0.203139,-2.209956,1.398261,3.956597,-3.647185,-4.976329,4.818640,1.883703,9.733120,1.256857,8.128552,5.298469,-7.391017,-9.664658,-2.967021,6.963606,-5.970399,-3.265237,1.196915,-8.230984,1.569482,3.715977,-2.587473,-6.750675,8.712293,9.183982,3.665157,2.028833,6.130557,-7.077415,2.564202,-1.065898,8.424001,-4.373253,-8.083471,-2.190057,4.841937,1.615823,-0.483051,1.226489,2.480251,7.048539,8.694277,0.054668,-6.041012,4.446922,8.537063,1.760873,-0.863768,9.022475,5.883493,6.769432,-7.476365,-9.663644,-7.853941,-5.056712,-0.349150,-0.115994,-1.228823,7.041903,8.713376,7.556903,-1.968076,-2.618281,-4.590016,-3.503700,7.183085,-3.320860,-6.928328,5.759587,-0.472929,-1.846247,0.588545,-8.509189,-8.395107,-3.119247,-8.125410,-2.182542,-5.390017,-9.008937,0.974086,-8.020704,-8.657285,-7.296171,-9.918526,2.854065,2.199310,7.702865,3.423374,5.780983,0.441665,2.342490,4.511295,2.036006,-6.947565,-2.989993,-8.836122,3.006092,6.804521,4.637657,5.933682,-4.866056,-4.718259,9.758038,1.708861,-1.891830,-7.789618,4.743405,0.582731,0.728494,-0.170148,3.012767,5.564690,7.800331,-3.003398,-0.635473,2.306979,6.675277,-9.754625,3.284365,9.931601,2.034966,-8.046792,2.700781,2.806685,4.355233,-4.777244,-1.654949,2.221503,-2.284288,-7.743449,2.232439,7.875883,8.984616,2.028342,5.937147,-8.606027,-8.895875,3.330535,4.928124,8.850400,-9.246502,7.893032,3.137428,-6.342053,5.761044,-1.435030,6.008076,9.467761,4.136152,1.700800,9.177061,7.697909,-0.518498,1.525800,0.730382,0.897362,-2.525143,-5.054896,9.534579,0.718065,3.271409,-1.397835,5.050129,-6.647920,-6.394058,3.797439,8.188323,-9.823828,-4.753158,6.366559,-1.606308,6.187479,-3.271381,-4.895306,9.315048,-6.198978,0.403509,3.725941,-1.896662,1.223302,8.526534,-9.631986,-1.878982,3.437096,-2.433918,-6.376682,6.918380,3.316200,-4.624517,5.679095,7.108752,-0.661624,-2.887827,1.859882,6.769984,-9.470184,9.388147,-3.632051,3.609737,-6.813260,-6.934899,-5.017976,9.060710,7.032962,0.701249,9.322010,-2.896853,7.648256,1.285457,6.228869,0.423384,4.696346,-6.340950,-8.039758,9.588817,4.763335,-9.717183,3.572041,8.869378,8.937965,-0.628155,8.485503,-7.421964,5.387069,3.310654,0.337548,-9.269834,-7.485672,-2.627075,-0.880531,0.547774,5.314347,1.445784,7.790307,-6.475761,3.914925,3.736326,2.086907,5.440295,6.803526,-1.156212,-5.312856,-7.437073,5.795696,3.166807,-1.228614,-7.378326,-9.836906,3.609587,-6.398803,-9.466678,-5.740949,1.162265,-3.391446,-6.072485,5.717529,-1.033204,-5.744083,-6.621633,1.920229,3.423096,0.484359,3.268833,-0.972437,4.834674,-7.702383,-5.134525,-4.257529,1.897529,6.728442,-0.666936,-9.531768,-7.471482,5.323683,-5.448119,-8.971239,4.697248,9.423102,-5.147138,6.110195,2.987121,3.207363,-5.564477,3.423233,-1.664607,2.042342,7.585720,9.170063,-7.516022,8.738070,6.608450,0.251717,9.206352,-6.794197,-1.780027,7.875679,1.921656,2.765603,-2.086599,7.871749,0.401935,-8.161622,-6.740060,-8.968953,-1.164438,-6.230294,-4.487976,-7.307131,-3.321587,6.947211,-8.029506,-7.460202,4.519996,7.664906,-6.335582,1.692552,-5.988716,5.686615,8.534843,6.337370,6.297465,-0.969709,7.199074,1.382514,3.364781,-6.515256,7.044635,9.889966,2.811133,0.175751,-7.801812,2.331571,-5.305507,0.288030,5.862147,5.028888,-0.244023,-1.593100,3.654402,-3.258413,-4.481288,-7.571638,2.005507,-9.303568,0.235543,0.442230,-2.618477,-4.752149,9.492493,9.315987,-6.679629,4.446840,-2.390981,8.861468,6.775927,-4.872651,-9.126926,9.661415,-4.702352,-2.426518,6.119438,5.653852,8.161501,-7.558459,-2.883053,3.436951,4.929458,1.689800,-3.163788,9.258678,-4.927727,0.009942,-6.190206,1.994290,-2.318728,-8.007217,1.926217,-6.687304,1.477002,7.679046,-1.076467,5.503539,3.033106,3.734586,6.059928,3.219205,-0.273601,-8.991439,8.820499,7.757048,-2.871318,-8.957897,-0.853646,-3.815008,4.877888,1.491004,-7.874849,5.096276,2.686254,7.763834,1.945825,5.821530,1.104278,9.269557,8.382079,-4.056578,-4.737792,6.970358,9.161830,2.292317,1.871469,-0.098056,3.263978,6.366053,-6.240149,4.190671,4.245207,8.902762,-4.072773,6.643816,-9.612363,4.763584,-7.920448,4.382946,-6.440378,0.579340,1.038339,1.031214,2.854742,9.545450,8.197859,-5.175785,3.361200,3.500954,-3.368798,5.723905,9.116300,4.274313,5.493680,4.058271,0.549140,6.217053,2.004611,4.227161,6.470661,-7.010905,4.598656,2.123592,5.914846,4.384560,-2.186727,-4.618540,0.041916,6.522268,-8.994829,7.265507,2.849658,-9.492725,2.335627,-4.624146,-1.962439,-8.522152,4.801084,4.924898,-8.667863,-7.478330,8.960678,-6.647884,-8.612921,-1.939708,8.229216,6.120454,-8.183844,8.647846,2.779663,6.983045,-0.091697,-3.362410,6.480470,-1.076315,-0.772121,-7.964997,6.476120,-6.702168,3.246398,-7.961967,-6.107569,8.824093,0.594099,9.208830,-2.091550,7.279248,-4.485554,-2.288537,8.991276,1.983896,7.469361,3.739664,5.010362,4.559659,-1.684911,5.637484,0.420243,-0.864784,7.744323,7.380691,-2.258241,-4.716338,-7.179290,-4.585554,-2.228186,9.651445,-3.798717,-1.978166,6.778448,-2.259223,-3.569631,-0.692709,-6.896778,-4.444070,-7.397020,-9.854882,-1.637482,5.161567,6.114950,-9.982844,-5.111894,-6.923346,5.829750,-6.421150,-2.276971,-8.167527,-7.871314,-3.956680,0.659970,-6.552672,-2.491044,-3.525095,1.846832,-2.590306,-7.754669,-5.705825,-1.411600,6.649145,-0.270859,-7.508978,-4.861870,7.677646,-2.330103,6.518756,-0.007610,8.174574,-1.529212,-0.199818,-8.321992,9.569488,3.454802,7.738397,-5.227132,7.385519,-2.460480,3.901341,8.388265,8.991923,-8.109388,0.410185,-6.377820,9.218990,2.105041,-5.241985,-4.302549,-9.342704,-7.512642,-0.808315,-1.872177,6.020217,2.629567,4.956060,2.806279,-4.368859,1.465540,-5.543434,3.126792,5.796041,9.840629,-4.384794,8.104375,-3.067171,-6.405464,-6.137699,-5.873437,1.479929,-2.792354,-1.637050,3.839191,2.399798,5.369890,-9.699431,9.128621,4.166472,2.159094,8.909840,-8.847704,-3.454458,-4.364185,1.548299,-4.740098,-2.798659,7.969904,-0.140179,-0.667467,3.952246,-1.890802,-8.922731,4.884251,-9.282679,7.481605,9.954910,6.912667,-9.369486,-0.889863,9.827016,-0.066337,5.415483,-1.733186,-3.141090,9.600963,-6.501955,4.011992,-3.749766,-0.927201,7.155822,-5.336396,3.839582,5.669616,2.097839,9.174313,-1.099334,-4.109657,3.600734,-0.181925,4.426701,-8.742822,4.306388,-1.346081,-2.238674,-5.647279,-2.185287,5.319088,3.512240,6.693394,-7.331078,7.395061,-8.450963,1.364410,-3.798764,3.061833,8.200979,-4.951421,4.199814,-7.425652,5.425806,-3.377239,0.730031,-5.654003,-4.356442,8.340115,-5.059288,7.434961,6.472846,4.161147,-0.645975,7.289025,-1.323726,-5.702246,3.211540,1.356812,-8.278221,-6.126979,7.192496,-1.599263,8.466469,9.301386,-8.810346,-2.019461,5.258079,8.995562,9.620607,7.513946,-6.412979,4.584916,2.451345,4.142049,-5.199024,8.431326,-3.301917,9.590650,-5.673781,1.113542,-5.663500,-1.410140,4.820438,2.217799,-8.121366,-4.736104,0.005821,-3.918831,5.667040,-4.735059,-5.363373,6.015579,0.321173,-9.256740,5.005908,-8.082048,9.709154,2.364934,-7.767563,4.444912,-3.488430,-2.711194,-4.492975,-9.396152,-0.307814,9.765384,-0.729825,3.821811,-9.178834,8.554977,1.390209,7.637336,-1.951228,-8.966130,9.829152,-5.928245,9.142491,7.911794,3.327861,9.776741,-2.419411,-6.290651,-5.340517,-5.425609,2.241232,-4.442104,3.801514,-5.615215,9.467256,6.098427,-6.158254,-8.978139,-9.547602,2.311405,9.524478,2.472633,-8.700753,-8.822486,9.887865,2.606900,5.895278,6.580596,0.884115,-8.315651,-7.536306,4.193417,0.665935,2.580442,-1.895387,-8.875528,7.368599,7.529936,0.600960,-9.324156,8.521502,-9.631947,-1.009520,6.003346,5.943014,-2.028062,7.350875,-3.367312,4.263694,-7.519735,8.887611,1.008864,-7.104666,-3.126192,-2.955153,-4.772923,-5.107586,-5.220874,9.467495,-0.552529,-0.115022,-5.706273,-4.107690,-3.344309,-9.368578,3.485152,0.474379,4.011790,-0.345912,-9.081773,-9.730122,-8.786919,6.157762,6.609170,-9.991175,0.224683,-5.030843,4.389332,-3.865437,-7.808225,-7.398112,-4.492609,-6.172401,-0.857177,4.404448,-3.617110,9.945766,-0.311533,8.416181,2.364826,3.269720,-6.989685,8.205835,6.113087,-2.064497,-0.681785,6.440155,-6.841761,-3.049434,-5.500141,0.126443,-3.874368,2.225193,9.543344,-9.477459,3.861103,7.549168,-7.525111,5.594093,2.826254,9.597267,-3.325369,-3.991360,0.087312,4.379448,9.165118,-4.498309,-2.294522,-4.323940,-6.444412,-4.551937,8.602917,-0.650742,-9.346613,9.901645,7.727718,-1.583182,6.825421,-5.012200,7.253494,9.519128,1.201384,-5.729477,8.552556,0.555040,-9.533090,1.688215,-6.657219,3.367786,5.652333,-3.259583,5.430958,8.341896,2.471198,6.627408,6.336932,0.420561,-5.367493,-3.731864,6.641332,-6.642010,-8.268907,7.368672,0.570241,7.081253,3.890348,3.044631,-8.069660,6.975345,-2.008359,9.188574,6.066988,-6.417316,-4.307198,-8.585435,0.396353,3.838821,-2.443477,-0.600664,7.752421,0.406530,3.507796,-9.798601,0.633936,1.139916,-3.210894,2.020522,-5.026414,-7.595572,6.160843,-8.198814,5.658032,-3.175840,-4.925571,7.157295,-1.901290,-5.895703,3.453821,-5.944642,-7.833810,-7.115264,-1.171415,5.418472,-9.552148,0.694774,-5.352076,-8.839501,-7.156802,8.724060,0.212531,-9.991763,2.720855,6.341387,2.477478,4.495145,0.499285,4.052341,-6.991108,-0.759406,-2.694579,-3.848937,7.578568,-8.822792,1.467391,-2.621860,-7.936358,-4.072088,8.303896,-0.187981,5.043454,8.246399,4.607342,-3.766176,7.879123,-5.013506,8.786207,-3.565397,8.925860,-8.971945,-1.833313,9.792095,7.251186,2.028720,5.636574,-3.428352,7.878645,-5.136569,-8.019385,-3.905273,9.793938,6.845562,2.854814,-5.509774,-8.360877,7.302182,5.251143,5.097953,1.413945,-1.167093,-4.861960,8.614554,-1.586828,-2.788336,1.711801,-8.019196,-3.558084,7.031356,2.760257,-3.847154,-3.063995,-2.704376,7.957055,-6.350439,-9.860126,7.413974,8.293141,6.300852,-7.801019,-4.314264,-3.603234,0.303483,-3.294786,0.869723,-3.027063,9.057769,2.159658,-2.244087,2.950158,2.694994,8.847372,-1.406174,-6.871727,-1.986164,-9.528382,-4.669713,2.170859,0.358004,-4.399442,3.484495,-2.891874,6.293673,9.796875,-2.401448,-1.727631,-4.422395,0.516657,9.551570,-9.804435,-7.900771,-3.908481,-3.488809,-5.546077,-3.776390,-9.482418,3.049210,-5.957603,-5.041423,5.961978,0.203709,7.282102,7.434663,-0.694412,-9.540310,5.529770,3.980168,6.549225,9.025385,3.651055,-6.361897,-1.585259,3.864530,-4.934441,-6.442675,-4.534495,8.127667,2.191731,-9.370358,6.270396,6.706294,-2.511762,0.281423,-6.385800,2.448946,-5.158414,0.531432,-5.494843,2.898011,-0.122612,-3.395758,8.603399,-1.068179,-8.076653,0.791006,6.324185,-4.537261,6.287306,9.142514,0.877092,-4.138423,-3.059591,-7.045829,-3.972950,7.098077,2.331512,8.821650,-4.830562,6.256998,4.277515,-7.270008,0.297783,-7.327580,-8.720570,-9.680243,-9.869652,7.617296,-9.056402,2.198348,-1.127195,-2.500779,-8.764649,-2.870394,0.426793,-4.570000,-6.631919,-7.740481,0.208124,5.967840,-7.422481,3.779697,-0.342874,-1.610302,-3.957960,6.752528,-8.648313,-8.013827,8.824708,9.738522,1.145503,3.036299,1.275488,3.916165,-6.172727,-2.459309,0.521817,-5.011109,3.804661,-5.179525,-7.785840,-0.072652,0.232522,-5.095516,9.639923,-6.604264,6.913322,3.747357,6.852103,2.780340,6.732771,-2.625884,-0.494714,-3.913055,9.122465,2.274902,-7.306340,6.057716,0.155122,-7.816638,1.010120,6.799096,1.999631,7.646652,6.810966,-6.191435,8.685884,5.628081,3.196125,7.452572,1.914624,8.513597,-4.420433,2.788896,-0.479471,-3.372540,-5.624914,-5.715518,-7.253936,-5.388390,-3.806252,-7.235228,-4.092469,3.070263,0.126248,-7.329849,-8.863099,-0.208993,-5.610202,-0.662655,-3.499348,6.554174,-8.872349,-5.373500,9.775516,-4.749968,8.935804,2.061736,1.930274,-5.215428,6.433895,2.707938], dtype = "float32")#candidate|8084|(2160,)|const|float32
call_8083 = relay.TupleGetItem(func_7436_call(relay.reshape(const_8084.astype('float32'), [9, 16, 15])), 0)
call_8085 = relay.TupleGetItem(func_7439_call(relay.reshape(const_8084.astype('float32'), [9, 16, 15])), 0)
output = relay.Tuple([bop_8076,call_8083,const_8084,])
output2 = relay.Tuple([bop_8076,call_8085,const_8084,])
func_8090 = relay.Function([var_8074,var_8075,], output)
mod['func_8090'] = func_8090
mod = relay.transform.InferType()(mod)
mutated_mod['func_8090'] = func_8090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8090_call = mutated_mod.get_global_var('func_8090')
var_8092 = relay.var("var_8092", dtype = "float64", shape = (12, 14, 16))#candidate|8092|(12, 14, 16)|var|float64
var_8093 = relay.var("var_8093", dtype = "float64", shape = (12, 14, 16))#candidate|8093|(12, 14, 16)|var|float64
call_8091 = func_8090_call(var_8092,var_8093,)
output = call_8091
func_8094 = relay.Function([var_8092,var_8093,], output)
mutated_mod['func_8094'] = func_8094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_8104 = relay.TupleGetItem(func_2414_call(), 0)
call_8105 = relay.TupleGetItem(func_2416_call(), 0)
output = call_8104
output2 = call_8105
func_8106 = relay.Function([], output)
mod['func_8106'] = func_8106
mod = relay.transform.InferType()(mod)
mutated_mod['func_8106'] = func_8106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8106_call = mutated_mod.get_global_var('func_8106')
call_8107 = func_8106_call()
output = call_8107
func_8108 = relay.Function([], output)
mutated_mod['func_8108'] = func_8108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6655_call = mod.get_global_var('func_6655')
func_6656_call = mutated_mod.get_global_var('func_6656')
call_8138 = relay.TupleGetItem(func_6655_call(), 1)
call_8139 = relay.TupleGetItem(func_6656_call(), 1)
func_4831_call = mod.get_global_var('func_4831')
func_4832_call = mutated_mod.get_global_var('func_4832')
call_8142 = func_4831_call()
call_8143 = func_4831_call()
output = relay.Tuple([call_8138,call_8142,])
output2 = relay.Tuple([call_8139,call_8143,])
func_8144 = relay.Function([], output)
mod['func_8144'] = func_8144
mod = relay.transform.InferType()(mod)
mutated_mod['func_8144'] = func_8144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8144_call = mutated_mod.get_global_var('func_8144')
call_8145 = func_8144_call()
output = call_8145
func_8146 = relay.Function([], output)
mutated_mod['func_8146'] = func_8146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_8176 = relay.TupleGetItem(func_2586_call(), 0)
call_8177 = relay.TupleGetItem(func_2587_call(), 0)
func_1709_call = mod.get_global_var('func_1709')
func_1713_call = mutated_mod.get_global_var('func_1713')
var_8192 = relay.var("var_8192", dtype = "bool", shape = (312,))#candidate|8192|(312,)|var|bool
call_8191 = relay.TupleGetItem(func_1709_call(relay.reshape(call_8176.astype('float64'), [7, 6, 3]), relay.reshape(var_8192.astype('bool'), [312,]), ), 1)
call_8193 = relay.TupleGetItem(func_1713_call(relay.reshape(call_8176.astype('float64'), [7, 6, 3]), relay.reshape(var_8192.astype('bool'), [312,]), ), 1)
func_3333_call = mod.get_global_var('func_3333')
func_3335_call = mutated_mod.get_global_var('func_3335')
var_8198 = relay.var("var_8198", dtype = "uint64", shape = (220,))#candidate|8198|(220,)|var|uint64
call_8197 = relay.TupleGetItem(func_3333_call(relay.reshape(var_8198.astype('uint64'), [220,])), 0)
call_8199 = relay.TupleGetItem(func_3335_call(relay.reshape(var_8198.astype('uint64'), [220,])), 0)
output = relay.Tuple([call_8176,call_8191,var_8192,call_8197,var_8198,])
output2 = relay.Tuple([call_8177,call_8193,var_8192,call_8199,var_8198,])
func_8200 = relay.Function([var_8192,var_8198,], output)
mod['func_8200'] = func_8200
mod = relay.transform.InferType()(mod)
var_8201 = relay.var("var_8201", dtype = "bool", shape = (312,))#candidate|8201|(312,)|var|bool
var_8202 = relay.var("var_8202", dtype = "uint64", shape = (220,))#candidate|8202|(220,)|var|uint64
output = func_8200(var_8201,var_8202,)
func_8203 = relay.Function([var_8201,var_8202,], output)
mutated_mod['func_8203'] = func_8203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4890_call = mod.get_global_var('func_4890')
func_4891_call = mutated_mod.get_global_var('func_4891')
call_8207 = relay.TupleGetItem(func_4890_call(), 2)
call_8208 = relay.TupleGetItem(func_4891_call(), 2)
uop_8215 = relay.sigmoid(call_8207.astype('float32')) # shape=(220,)
uop_8217 = relay.sigmoid(call_8208.astype('float32')) # shape=(220,)
output = uop_8215
output2 = uop_8217
func_8231 = relay.Function([], output)
mod['func_8231'] = func_8231
mod = relay.transform.InferType()(mod)
mutated_mod['func_8231'] = func_8231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8231_call = mutated_mod.get_global_var('func_8231')
call_8232 = func_8231_call()
output = call_8232
func_8233 = relay.Function([], output)
mutated_mod['func_8233'] = func_8233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1809_call = mod.get_global_var('func_1809')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_8247 = relay.TupleGetItem(func_1809_call(), 2)
call_8248 = relay.TupleGetItem(func_1810_call(), 2)
func_4831_call = mod.get_global_var('func_4831')
func_4832_call = mutated_mod.get_global_var('func_4832')
call_8252 = func_4831_call()
call_8253 = func_4831_call()
output = relay.Tuple([call_8247,call_8252,])
output2 = relay.Tuple([call_8248,call_8253,])
func_8264 = relay.Function([], output)
mod['func_8264'] = func_8264
mod = relay.transform.InferType()(mod)
mutated_mod['func_8264'] = func_8264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8264_call = mutated_mod.get_global_var('func_8264')
call_8265 = func_8264_call()
output = call_8265
func_8266 = relay.Function([], output)
mutated_mod['func_8266'] = func_8266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1809_call = mod.get_global_var('func_1809')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_8294 = relay.TupleGetItem(func_1809_call(), 2)
call_8295 = relay.TupleGetItem(func_1810_call(), 2)
func_2259_call = mod.get_global_var('func_2259')
func_2261_call = mutated_mod.get_global_var('func_2261')
call_8296 = func_2259_call()
call_8297 = func_2259_call()
uop_8305 = relay.cos(call_8294.astype('float64')) # shape=(220,)
uop_8307 = relay.cos(call_8295.astype('float64')) # shape=(220,)
uop_8310 = relay.erf(uop_8305.astype('float64')) # shape=(220,)
uop_8312 = relay.erf(uop_8307.astype('float64')) # shape=(220,)
output = relay.Tuple([call_8296,uop_8310,])
output2 = relay.Tuple([call_8297,uop_8312,])
func_8316 = relay.Function([], output)
mod['func_8316'] = func_8316
mod = relay.transform.InferType()(mod)
mutated_mod['func_8316'] = func_8316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8316_call = mutated_mod.get_global_var('func_8316')
call_8317 = func_8316_call()
output = call_8317
func_8318 = relay.Function([], output)
mutated_mod['func_8318'] = func_8318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4890_call = mod.get_global_var('func_4890')
func_4891_call = mutated_mod.get_global_var('func_4891')
call_8319 = relay.TupleGetItem(func_4890_call(), 2)
call_8320 = relay.TupleGetItem(func_4891_call(), 2)
func_7737_call = mod.get_global_var('func_7737')
func_7738_call = mutated_mod.get_global_var('func_7738')
call_8321 = func_7737_call()
call_8322 = func_7737_call()
output = relay.Tuple([call_8319,call_8321,])
output2 = relay.Tuple([call_8320,call_8322,])
func_8340 = relay.Function([], output)
mod['func_8340'] = func_8340
mod = relay.transform.InferType()(mod)
output = func_8340()
func_8341 = relay.Function([], output)
mutated_mod['func_8341'] = func_8341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5180_call = mod.get_global_var('func_5180')
func_5182_call = mutated_mod.get_global_var('func_5182')
call_8385 = func_5180_call()
call_8386 = func_5180_call()
uop_8394 = relay.acosh(call_8385.astype('float64')) # shape=(7, 6, 3)
uop_8396 = relay.acosh(call_8386.astype('float64')) # shape=(7, 6, 3)
func_5552_call = mod.get_global_var('func_5552')
func_5553_call = mutated_mod.get_global_var('func_5553')
call_8399 = relay.TupleGetItem(func_5552_call(), 0)
call_8400 = relay.TupleGetItem(func_5553_call(), 0)
output = relay.Tuple([uop_8394,call_8399,])
output2 = relay.Tuple([uop_8396,call_8400,])
func_8419 = relay.Function([], output)
mod['func_8419'] = func_8419
mod = relay.transform.InferType()(mod)
output = func_8419()
func_8420 = relay.Function([], output)
mutated_mod['func_8420'] = func_8420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6997_call = mod.get_global_var('func_6997')
func_6998_call = mutated_mod.get_global_var('func_6998')
call_8423 = relay.TupleGetItem(func_6997_call(), 0)
call_8424 = relay.TupleGetItem(func_6998_call(), 0)
var_8446 = relay.var("var_8446", dtype = "float64", shape = (6, 4, 8))#candidate|8446|(6, 4, 8)|var|float64
bop_8447 = relay.not_equal(call_8423.astype('bool'), relay.reshape(var_8446.astype('bool'), relay.shape_of(call_8423))) # shape=(6, 4, 8)
bop_8450 = relay.not_equal(call_8424.astype('bool'), relay.reshape(var_8446.astype('bool'), relay.shape_of(call_8424))) # shape=(6, 4, 8)
output = bop_8447
output2 = bop_8450
func_8453 = relay.Function([var_8446,], output)
mod['func_8453'] = func_8453
mod = relay.transform.InferType()(mod)
mutated_mod['func_8453'] = func_8453
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8454 = relay.var("var_8454", dtype = "float64", shape = (6, 4, 8))#candidate|8454|(6, 4, 8)|var|float64
func_8453_call = mutated_mod.get_global_var('func_8453')
call_8455 = func_8453_call(var_8454)
output = call_8455
func_8456 = relay.Function([var_8454], output)
mutated_mod['func_8456'] = func_8456
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8503 = relay.const([[[7.185526,0.371662,8.655869,4.158889,-5.945639,-7.642060,-3.011152,-0.741778],[9.159234,-6.973500,-4.294309,-8.715469,-6.228485,4.857334,-8.961230,7.001076],[-5.081881,5.511824,0.434286,8.700610,4.883679,-0.546468,-6.511783,-3.675855],[-8.234129,-4.636918,5.412639,4.822820,9.067618,-5.278208,3.982227,1.134411],[-4.452547,0.108846,8.887289,6.965697,-8.722292,4.919493,-5.572043,4.408065],[-3.631093,-6.650996,-2.281472,4.070166,-5.178359,0.990246,5.240652,-3.447628],[8.447906,7.082697,-9.741977,-7.946217,-1.955859,7.904798,2.202327,8.261705],[-1.954710,3.950883,3.396309,-9.999723,-2.561687,0.427841,-5.853260,9.905885],[-1.437006,-0.349253,5.956772,1.442531,-4.494308,2.864482,6.659128,0.610736],[-1.560991,3.797394,4.514297,7.963365,7.650217,2.344520,-5.568182,-3.597914],[9.957549,0.547509,5.367495,-1.891419,5.876205,7.902068,9.575997,-5.893698],[3.219564,7.628286,4.637370,-8.553237,-6.990611,-9.049343,-1.549813,2.236552],[-4.531265,-1.708347,4.687380,5.071010,-1.268777,-3.751221,-4.261661,6.875860],[-1.054668,-1.202302,-9.337934,-9.539979,9.672295,5.170437,5.546781,3.942598],[-8.501643,8.178973,5.392159,-4.596843,1.090946,7.855989,-7.281649,8.102240],[5.200133,-5.036292,-0.079145,-4.590933,-6.486784,6.643091,-2.995420,9.351158]],[[0.911449,8.121661,8.938939,-8.345373,-4.962905,-4.822059,0.278816,6.315935],[-2.652411,-0.706911,-0.936401,-0.166987,-2.282677,3.283919,-9.354766,9.847171],[7.504390,-2.850589,2.751758,-3.963424,-4.633656,-2.498753,-6.866950,4.066101],[2.346186,-8.077702,-0.376642,-2.809418,-5.506917,-4.048349,-8.712756,-6.035920],[-2.785955,3.140299,-3.393864,1.146523,-6.421995,-8.580337,9.842012,6.502901],[4.147390,-6.931181,-9.766864,-0.225146,-2.941945,-9.553008,6.261000,7.043125],[9.745891,3.564105,-7.343179,2.724825,-7.315761,2.184870,0.107987,-3.313052],[-5.570917,-8.225865,-9.847666,-3.165819,6.990967,7.517980,2.305584,-5.212620],[8.995016,-3.144467,-9.585211,7.884363,5.044703,-9.328010,9.131988,6.619404],[-2.072744,7.625773,8.737554,9.642654,-6.128808,1.488725,4.653364,-6.447197],[7.101663,-1.618463,-3.918906,-9.491930,6.297251,-0.605732,1.155455,-2.862616],[-1.306642,-3.297385,1.947495,-5.228856,8.378969,-6.767133,-3.372091,6.919844],[1.705966,8.092537,9.983018,-1.718145,6.598585,-2.594557,-3.319015,-2.651441],[-9.497925,-5.209147,-8.498015,4.251688,-2.508217,0.709526,-7.129589,-1.810607],[-0.296734,-2.104582,3.204326,-6.646024,1.493747,-8.620686,-4.685729,-7.213061],[3.857366,-8.523739,-7.391652,8.628692,4.672295,5.874295,-0.926234,-3.464557]],[[7.176825,-8.382048,4.077066,0.802777,6.975692,-3.606558,-1.223213,-4.331494],[-8.921357,-2.590845,-4.226575,4.794122,-0.571492,-3.166168,0.207083,7.749698],[2.665253,1.879578,5.446773,6.518775,-5.421371,-3.882434,7.902920,1.281975],[3.495037,-3.946678,2.079762,-1.601569,-9.320639,-7.190332,5.603550,-3.782942],[-8.194381,0.187021,1.136086,-9.160814,-1.394824,-3.511645,-1.457683,5.452829],[8.302615,8.509956,-5.009341,-8.175138,-3.846189,-8.129261,8.567703,-6.201196],[-8.845633,3.876914,0.761391,-7.475375,-6.254355,5.236022,-6.494686,-5.408495],[-7.955284,-1.859201,9.605806,4.332291,-8.855251,5.650543,-1.362900,6.256292],[0.520059,-8.341946,-9.596222,5.924464,-0.669101,3.253116,9.783978,-7.680734],[-7.628488,-0.994692,-6.053328,7.009338,8.069457,-6.006698,2.245839,3.377781],[-8.163977,4.600949,-2.955086,3.359455,8.681891,7.117449,-0.599748,-2.473537],[-6.850545,1.950927,-5.844020,0.334692,3.599984,5.379808,5.715304,-1.879291],[2.489602,9.141379,-8.882100,-0.979534,4.618626,-7.842195,2.723333,-3.720524],[-4.662004,-2.392557,8.293962,-5.901032,9.545709,9.275161,-3.896060,-3.477585],[0.729413,1.033644,-0.306310,5.372960,0.146778,-2.073399,-9.722127,3.876370],[-1.013750,0.702532,7.872732,-4.953260,0.395104,-6.832915,7.554912,7.769187]],[[-9.200297,-5.779224,-3.299277,-8.434359,-2.541166,7.351302,-5.950007,3.125404],[-3.823549,-6.030621,-7.754408,0.915815,-7.824776,-0.869613,-5.512859,-2.675950],[-1.032319,-1.634659,-4.187471,8.620938,9.506173,8.271561,0.065075,-7.874829],[8.413508,2.278239,6.270699,7.712207,-7.001036,-1.216014,-2.818968,7.472736],[5.334101,4.271569,2.178254,-6.324667,5.468630,-6.069638,-6.736737,6.199478],[8.625901,-6.262495,2.320284,-1.454963,6.555753,-1.322776,6.841106,-4.793811],[4.234761,-9.013013,-6.596861,9.497087,-7.451657,-9.510683,-2.840101,-4.910436],[7.829971,4.386875,-8.039462,-5.623419,-1.159058,6.326993,2.076829,-0.230555],[-9.173984,0.800209,-9.561374,-0.250259,-3.417425,3.869492,-4.037406,-1.844322],[-8.309538,-5.273051,0.748044,-3.998045,-2.999266,7.303012,-7.062408,-2.863592],[-4.894426,7.269803,6.675528,3.383532,6.165304,-6.318331,-8.163694,1.393277],[-2.787278,4.423406,-8.346989,1.957774,-4.196497,-0.198724,0.304278,3.749476],[-4.270670,-0.302453,-8.007833,5.932591,-1.019844,-3.596337,-8.437181,-5.706820],[3.682138,-6.396478,7.583336,-8.739311,-9.147730,-1.007030,-5.213834,2.440530],[1.584850,-9.999980,3.255866,6.099347,8.797264,-6.419755,8.823310,8.332741],[3.258339,-9.268509,9.922858,-6.075645,-5.336174,4.219753,-6.455444,1.153301]],[[-5.249422,9.379627,-0.420886,-8.347772,-7.757048,2.483310,5.860510,2.168525],[2.197772,6.096185,-6.855146,-7.275131,9.342152,8.121068,3.623294,9.752796],[-0.481808,4.615341,2.264539,4.580289,7.497659,8.633167,1.687373,5.238337],[-4.830437,6.068021,-9.614342,2.029423,-7.721511,3.346010,-3.195299,6.702477],[1.909037,6.623644,-8.663524,1.161048,4.272218,-3.749639,7.429480,5.088518],[9.797458,-1.277458,8.558299,5.848617,1.215049,0.261299,2.585552,-6.193573],[5.495436,4.934984,-0.970028,8.874818,7.512841,-9.811798,6.414349,-9.927794],[5.925651,-1.774719,6.142897,-2.298024,-2.867515,-8.538153,-2.442750,3.288017],[-9.483758,-3.679923,7.931281,-9.390136,4.613714,7.805202,7.899951,9.433653],[-0.598305,5.818630,1.728932,-6.192076,0.394878,8.311694,-5.410577,2.341580],[4.385827,4.906371,-7.530511,0.631351,4.957251,-0.799287,6.906344,4.565943],[-7.957494,8.468655,-8.881054,1.316437,-1.656974,7.680758,6.932133,4.426518],[-2.906786,4.124334,-7.993255,5.657385,6.399699,-1.197832,4.984236,7.674053],[-9.631319,-3.631586,-8.192069,-8.563689,-5.734911,3.798075,8.320524,3.228144],[-1.779688,-0.008750,1.308433,-1.266465,3.242042,3.714488,-2.319968,-5.952122],[0.286026,2.016867,5.133422,-5.610420,4.434325,8.176734,-9.769938,7.888623]],[[-2.517936,-3.199906,8.179697,-8.863457,1.184916,7.638354,-5.010991,6.751238],[-0.677834,-2.014857,-7.209097,-8.218622,-5.855498,-5.108518,-8.645708,4.874289],[2.246208,-5.482465,-8.119617,-6.719259,4.303503,1.243642,0.319967,5.484116],[7.152628,9.343362,5.548291,-6.634044,-9.782718,-7.316034,-5.098505,7.470742],[8.908583,-5.759328,-1.818395,-0.669593,-2.413767,-6.590591,-9.730432,-1.802457],[3.850957,1.155034,5.371366,-6.812715,1.691178,-9.712550,5.170270,3.379194],[6.566541,-8.906472,-2.486344,0.387830,7.179568,4.260488,-8.821418,6.407829],[4.841234,-3.258851,-3.683458,-0.385994,3.497997,1.732350,-0.136290,-6.802243],[-3.909951,-5.475434,0.134453,-6.827618,0.629413,-1.039457,2.451964,6.607893],[-3.963785,2.353493,-9.180415,-7.733338,-0.325683,-4.169357,8.167467,-5.212444],[-3.357219,-3.538293,4.851392,-8.278383,-8.921670,-2.964616,-0.603460,4.410286],[5.226683,-2.583673,-8.852238,9.480166,-7.839980,-6.944302,-0.086115,-5.270192],[6.691211,-3.843370,5.589957,6.139359,4.437540,4.690478,2.803540,8.175309],[6.029740,-9.078663,-7.592229,-7.953232,-0.991118,-9.985038,4.657156,1.418992],[-5.535928,9.000113,-9.291233,8.429763,-2.482408,1.487565,3.654191,-7.717204],[-5.123866,9.125313,4.258315,-6.804211,-9.841040,-7.011895,5.764763,-8.708243]],[[-7.425183,1.725151,-2.941053,-8.780324,3.942873,-0.570056,-0.044756,6.619636],[9.191638,-8.051953,-1.157717,-6.840546,0.732074,-4.984528,-5.183899,-3.470975],[0.421625,6.544065,7.057257,-7.131268,-4.742363,2.851888,-2.110096,3.413170],[0.725455,-8.933522,-1.597597,-3.263931,4.048389,-1.166051,0.579487,-7.651110],[-3.486591,-8.208036,-6.519926,-2.698859,5.967611,0.857502,-7.319419,-6.653842],[-0.880261,8.133185,8.058134,2.573905,5.272608,2.976416,-4.494522,9.981736],[7.386617,-7.810927,-2.858000,-8.534318,8.065982,3.581139,8.992198,9.689333],[-1.273891,-7.973519,8.910088,4.222176,-6.480011,4.780621,-6.677415,2.672880],[6.041257,8.955684,0.426852,7.861501,-3.703718,-7.222614,-4.323141,5.920260],[9.218806,6.548703,9.164276,9.968677,3.153539,7.073033,9.878539,0.914331],[-5.588910,-3.816227,1.549366,-4.293126,5.686649,9.387178,5.486321,-6.103831],[-4.955864,9.487620,-6.992224,6.584165,8.780688,-1.514764,-5.615470,1.459899],[-3.972944,-4.679785,-9.986299,8.487091,9.896587,0.229784,-9.935910,8.643847],[6.188820,-0.157335,8.938415,3.103187,-4.457577,0.204510,-5.895815,-7.041240],[9.473346,-1.312409,1.800996,7.036188,-6.719341,0.886775,-9.852653,6.671034],[3.171285,-5.370622,-7.063742,-6.720699,0.583205,0.869955,-4.338753,-7.667394]],[[-2.252461,1.574959,6.079110,-2.749539,-0.051885,-5.263127,7.778574,-2.603923],[9.444503,3.022570,4.118724,7.336540,-4.428481,-5.098359,-6.618573,-3.712757],[7.018438,-5.138498,-9.513210,-8.734479,2.357055,1.001135,-6.165935,6.463371],[-9.974482,0.963113,-3.313211,-9.764539,2.005842,-6.822543,-0.514031,-3.982678],[-2.226321,-4.819777,-1.363495,8.046858,9.209975,-2.386316,0.272088,3.891657],[-9.577525,7.598326,8.374130,6.095244,-5.897890,-3.608708,-2.928648,-4.221117],[-1.385836,3.216513,1.577901,-3.472319,-8.956931,-2.741567,-1.903044,9.040950],[2.765317,-5.904929,4.055638,6.346314,8.858589,-9.147812,6.163294,-7.418575],[8.086609,-6.476862,5.444092,1.020668,1.055308,3.394207,7.038875,-9.517945],[8.747468,-8.368659,5.864277,-0.804533,8.722383,-0.756075,1.686484,-1.749364],[9.224594,8.458007,7.019463,-4.299816,-0.354560,6.820946,-0.409786,-8.589271],[-4.354602,-5.144843,2.244404,-8.843417,2.573919,1.185116,4.418863,9.480164],[-1.093340,0.559480,8.449776,-4.983378,5.889753,-8.263423,6.425243,7.345276],[8.828452,7.396956,-4.101937,0.116051,2.784833,-0.880920,9.539507,3.319853],[-7.238334,5.454155,-5.441234,-2.704626,1.518395,1.741640,5.474786,-0.548630],[8.657275,0.520344,2.639982,3.150277,5.233460,-5.636885,-0.583614,-5.784858]],[[-7.937946,-9.669531,5.342889,4.441071,4.503339,-5.310870,1.889903,7.031638],[-6.998664,3.451231,-5.515193,-0.065607,-8.103770,-4.347491,-2.232451,-9.404675],[-9.462339,3.559455,3.806787,8.323797,-1.488562,4.182138,-2.947993,-8.090657],[-4.147892,8.213342,-2.189720,-4.764940,-2.836941,1.269856,-1.340490,8.674457],[9.398687,-1.795774,5.084654,2.001327,4.555842,-9.176515,-4.077303,0.862820],[-0.406691,8.527130,-3.399892,9.797459,-0.642453,-6.251385,-2.284859,7.055545],[-1.327401,-5.290453,9.853216,1.334861,6.959852,8.728618,-1.932388,-1.089862],[2.978630,-6.223419,5.095504,-5.183395,-2.319301,-3.738759,-7.180601,-6.653520],[-1.041388,7.218610,6.824716,-8.561794,-5.215475,-5.005130,-9.149987,6.329136],[-2.905913,-5.233808,2.496556,5.970539,8.072447,6.527564,6.395234,-3.308013],[-6.237024,-4.010812,0.233011,-6.599163,-9.523456,-3.064434,7.571212,-3.509217],[9.634841,-6.056735,2.966526,7.166548,7.020145,-9.792023,-0.916999,-4.092962],[-4.713073,-4.406723,-0.190988,7.910259,8.871537,5.354210,4.726000,-2.895903],[-7.517949,-3.118247,-0.442554,-4.776121,-2.341203,5.591501,-8.320851,8.284018],[-3.965329,-6.346857,3.865712,2.898721,8.570345,8.923897,-9.961911,-1.100988],[-9.130050,-6.096457,-4.148432,4.816967,3.699986,2.810838,-8.577554,4.942697]],[[7.334360,3.305810,9.246472,2.504032,-5.285517,-2.493529,6.713393,7.735178],[9.159987,-2.610813,7.743797,-9.195506,-0.359201,-4.377865,-1.064672,7.612383],[9.774148,-4.164892,4.502402,3.021623,7.341724,-6.514416,-8.946850,-4.939577],[7.155838,4.565159,-3.826802,-4.746143,-8.049601,-0.642557,-7.151007,-4.652087],[-7.119575,-3.596926,-6.639458,8.290184,2.610231,-3.477679,-5.060722,5.802343],[-8.870903,-3.544732,-4.815554,3.122644,1.323710,-7.366946,-0.762324,9.146084],[5.082548,-0.726919,8.120029,2.402489,-8.698961,7.463290,2.954784,-5.863572],[2.665507,-7.208776,1.528649,-2.426850,2.818080,-7.488360,7.962404,6.605323],[-6.582950,2.205013,4.909338,-6.260685,-6.997641,-5.555057,8.912734,3.663504],[9.321734,-2.008346,-5.149930,7.280719,0.870377,0.353267,3.787073,-9.181892],[-3.724417,-6.740932,-4.309262,1.441277,-7.330062,-2.307093,0.133262,-3.375520],[-4.261831,8.818263,-4.958124,-0.244425,9.445556,-3.714040,-9.121285,-1.163613],[-8.496286,4.713548,2.577730,-2.845269,-6.966856,9.151567,-9.055131,0.196975],[5.518808,0.750323,3.992598,3.978822,9.211819,-6.149272,-9.484636,0.104243],[1.752613,-5.027563,6.360159,-0.010316,3.766055,8.017702,0.243897,-8.364091],[-5.911049,-4.556948,-5.313843,-5.178965,-1.837509,6.196851,8.893836,4.154251]],[[1.208492,0.415774,-2.135458,5.267506,-6.981887,-9.033311,1.133793,-8.065366],[-0.453561,7.667631,-7.105266,2.053785,-2.997231,-0.941599,5.828419,-0.343300],[0.424885,0.209170,6.095885,5.720561,-1.508603,-1.918422,7.317912,9.740164],[2.179992,-9.498399,-1.961025,-1.131219,-9.689396,-8.530478,9.015798,0.873725],[-9.417382,-3.862989,4.504803,4.835305,4.241425,5.627441,-4.204004,8.744203],[4.679578,-3.240870,7.750122,5.505181,4.068928,2.670321,-3.828198,7.285956],[2.107540,8.004337,3.842773,-0.709409,-1.850933,1.713042,-7.359056,-4.236650],[-2.835398,8.951097,-9.641202,-3.500087,-4.635325,-2.394148,-5.528067,-8.377591],[8.306013,-0.181622,-1.777306,-0.848952,-1.705661,-6.593653,-9.818479,-5.157997],[9.461399,-8.548166,-1.356302,6.654691,-3.141484,-9.636623,9.861084,-6.331762],[-1.595052,6.163764,-1.932164,1.607442,-4.326858,4.744534,-0.645161,8.751532],[-8.234449,5.181404,-2.895206,3.115494,-0.187697,2.121486,-4.384830,8.901459],[-1.408790,-1.242403,-5.708756,4.584771,8.049325,7.346236,3.920948,7.237225],[-5.799635,-3.023625,2.020438,4.143354,1.751270,9.390812,-8.401018,-5.088150],[1.901429,5.721641,-1.792653,-9.929593,-5.194319,-8.932722,1.922937,6.122460],[-3.965178,-6.556296,8.066708,-6.629141,8.948164,6.153780,-4.779318,-4.974637]]], dtype = "float64")#candidate|8503|(11, 16, 8)|const|float64
uop_8504 = relay.exp(const_8503.astype('float64')) # shape=(11, 16, 8)
func_3277_call = mod.get_global_var('func_3277')
func_3282_call = mutated_mod.get_global_var('func_3282')
const_8507 = relay.const(-1, dtype = "uint16")#candidate|8507|()|const|uint16
var_8508 = relay.var("var_8508", dtype = "uint16", shape = (1120, 1))#candidate|8508|(1120, 1)|var|uint16
var_8509 = relay.var("var_8509", dtype = "bool", shape = (312,))#candidate|8509|(312,)|var|bool
var_8510 = relay.var("var_8510", dtype = "uint64", shape = (2548,))#candidate|8510|(2548,)|var|uint64
call_8506 = relay.TupleGetItem(func_3277_call(relay.reshape(const_8507.astype('uint16'), []), relay.reshape(var_8508.astype('uint16'), [1120,]), relay.reshape(var_8509.astype('bool'), [312,]), relay.reshape(var_8510.astype('uint64'), [2548,]), ), 1)
call_8511 = relay.TupleGetItem(func_3282_call(relay.reshape(const_8507.astype('uint16'), []), relay.reshape(var_8508.astype('uint16'), [1120,]), relay.reshape(var_8509.astype('bool'), [312,]), relay.reshape(var_8510.astype('uint64'), [2548,]), ), 1)
func_5970_call = mod.get_global_var('func_5970')
func_5972_call = mutated_mod.get_global_var('func_5972')
const_8515 = relay.const([0.317353,-3.416512,-4.236852,8.570473,2.899844,-4.892785,5.094083,-1.997033,4.056803,-0.085434,5.411850,-8.667112,-2.605449,-3.575140,3.273973,-7.083191,-7.728653,-0.207281,1.919611,9.357858,-9.567612,1.993747,-4.886518,-5.760650,-7.616572,-8.885070,-6.322342,8.246932,4.431555,4.037182,-4.362817,0.368307,-3.248835,-0.038679,4.948805,2.108213,1.676206,6.062314,-1.550049,-9.741084,-6.474628,8.658707,6.462826,-3.199171,-2.529875,1.882306,9.944181,2.864193,-1.713128,6.235458,2.914707,5.615253,6.610930,-0.049971,-9.255943,-2.419792,-4.117877,-6.412448,-7.705335,-3.901951,-5.314372,-0.634418,-4.645429,0.156679,7.816148,-9.710004,0.299812,8.800766,-6.933059,0.754615,-9.185534,2.954571,6.706893,5.138027,-9.907317,-6.858014,7.359351,-0.301215,2.823475,2.114595,-9.135681,2.194761,6.781837,-1.478115,5.719867,0.149794,-5.343375,-0.569327,-5.007842,7.106517,6.390892,8.547552,-9.646245,-0.749313,2.574525,-2.237753,8.589522,-5.043431,3.629118,-9.899317,-4.359547,-3.368485,-4.615168,-6.450357,-0.570815], dtype = "float64")#candidate|8515|(105,)|const|float64
call_8514 = relay.TupleGetItem(func_5970_call(relay.reshape(const_8515.astype('float64'), [3, 5, 7])), 0)
call_8516 = relay.TupleGetItem(func_5972_call(relay.reshape(const_8515.astype('float64'), [3, 5, 7])), 0)
func_7769_call = mod.get_global_var('func_7769')
func_7771_call = mutated_mod.get_global_var('func_7771')
call_8526 = func_7769_call()
call_8527 = func_7769_call()
output = relay.Tuple([uop_8504,call_8506,const_8507,var_8508,var_8509,var_8510,call_8514,const_8515,call_8526,])
output2 = relay.Tuple([uop_8504,call_8511,const_8507,var_8508,var_8509,var_8510,call_8516,const_8515,call_8527,])
func_8553 = relay.Function([var_8508,var_8509,var_8510,], output)
mod['func_8553'] = func_8553
mod = relay.transform.InferType()(mod)
var_8554 = relay.var("var_8554", dtype = "uint16", shape = (1120, 1))#candidate|8554|(1120, 1)|var|uint16
var_8555 = relay.var("var_8555", dtype = "bool", shape = (312,))#candidate|8555|(312,)|var|bool
var_8556 = relay.var("var_8556", dtype = "uint64", shape = (2548,))#candidate|8556|(2548,)|var|uint64
output = func_8553(var_8554,var_8555,var_8556,)
func_8557 = relay.Function([var_8554,var_8555,var_8556,], output)
mutated_mod['func_8557'] = func_8557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7737_call = mod.get_global_var('func_7737')
func_7738_call = mutated_mod.get_global_var('func_7738')
call_8577 = func_7737_call()
call_8578 = func_7737_call()
func_3314_call = mod.get_global_var('func_3314')
func_3317_call = mutated_mod.get_global_var('func_3317')
var_8582 = relay.var("var_8582", dtype = "bool", shape = (312,))#candidate|8582|(312,)|var|bool
var_8583 = relay.var("var_8583", dtype = "uint64", shape = (2548,))#candidate|8583|(2548,)|var|uint64
call_8581 = relay.TupleGetItem(func_3314_call(relay.reshape(var_8582.astype('bool'), [312,]), relay.reshape(var_8583.astype('uint64'), [2548,]), ), 0)
call_8584 = relay.TupleGetItem(func_3317_call(relay.reshape(var_8582.astype('bool'), [312,]), relay.reshape(var_8583.astype('uint64'), [2548,]), ), 0)
var_8589 = relay.var("var_8589", dtype = "uint64", shape = (2548,))#candidate|8589|(2548,)|var|uint64
bop_8590 = relay.greater_equal(var_8583.astype('bool'), relay.reshape(var_8589.astype('bool'), relay.shape_of(var_8583))) # shape=(2548,)
output = relay.Tuple([call_8577,call_8581,var_8582,bop_8590,])
output2 = relay.Tuple([call_8578,call_8584,var_8582,bop_8590,])
F = relay.Function([var_8582,var_8583,var_8589,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8582,var_8583,var_8589,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

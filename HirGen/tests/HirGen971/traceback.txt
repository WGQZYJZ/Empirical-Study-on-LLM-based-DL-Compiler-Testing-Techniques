==========mod==========
#[version = "0.0.5"]
def @func_17088() -> Tensor[(2, 14, 3), float64] {
  %0 = @func_14555() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %0.0
}

def @func_1794(%var_1789: Tensor[(250), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) {
  %1 = cast(%var_1789, dtype="float64") /* ty=Tensor[(250), float64] */;
  %2 = cast(%var_1789, dtype="float64") /* ty=Tensor[(250), float64] */;
  %3 = reshape(%1, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %4 = reshape(%2, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %5 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
  %6 = @func_360(%3, %4) /* ty=Tensor[(10, 5, 5), float64] */;
  (%5, %6, %var_1789)
}

def @func_8727() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %7 = @func_6002() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %8 = @func_3612() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */;
  %9 = %7.0;
  %10 = @func_4279() /* ty=Tensor[(2, 14, 3), float64] */;
  %11 = %8.4;
  %12 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
  %13 = @func_7975() /* ty=Tensor[(2, 14, 3), float64] */;
  (%9, %10, %11, %12, %13)
}

def @func_11607(%var_11602: Tensor[(1, 13, 8), bool], %var_11603: Tensor[(8, 13, 8), bool]) -> Tensor[(8, 13, 8), bool] {
  %14 = cast(%var_11602, dtype="bool") /* ty=Tensor[(1, 13, 8), bool] */;
  %15 = cast(%var_11603, dtype="bool") /* ty=Tensor[(8, 13, 8), bool] */;
  logical_and(%14, %15) /* ty=Tensor[(8, 13, 8), bool] */
}

def @func_20346() -> (Tensor[(2, 14, 3), float64],) {
  %16 = @func_17715() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %17 = %16.1;
  (%17,)
}

def @func_3439() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %18 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %19 = @func_1511() /* ty=Tensor[(2, 14, 3), float64] */;
  (%18, %19)
}

def @func_14202() -> Tensor[(2, 14, 3), float64] {
  %20 = @func_8891() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %20.0
}

def @func_2003() -> (Tensor[(2, 14, 3), float64],) {
  %21 = @func_1511() /* ty=Tensor[(2, 14, 3), float64] */;
  (%21,)
}

def @func_18975(%var_18961: Tensor[(8, 28), float32], %var_18965: Tensor[(4, 14, 4), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(8, 28), float32], Tensor[(4, 14, 4), bool], Tensor[(14, 8, 12), float64], Tensor[(1344), float64]) {
  %22 = @func_16795() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %23 = cast(%var_18961, dtype="float32") /* ty=Tensor[(8, 28), float32] */;
  %24 = reshape(%23, newshape=[4, 14, 4]) /* ty=Tensor[(4, 14, 4), float32] */;
  %25 = @func_186(%24) /* ty=Tensor[(4, 14, 4), float32] */;
  %26 = cast(%var_18965, dtype="bool") /* ty=Tensor[(4, 14, 4), bool] */;
  %27 = shape_of(%25, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%25, dtype="bool") /* ty=Tensor[(4, 14, 4), bool] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %30 = cast(meta[relay.Constant][0] /* ty=Tensor[(1344), float64] */, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %31 = reshape(%30, newshape=[14, 8, 12]) /* ty=Tensor[(14, 8, 12), float64] */;
  %32 = %22.0;
  %33 = logical_and(%28, %29) /* ty=Tensor[(4, 14, 4), bool] */;
  %34 = @func_7256(%31) /* ty=Tensor[(14, 8, 12), float64] */;
  (%32, %var_18961, %33, %34, meta[relay.Constant][0] /* ty=Tensor[(1344), float64] */)
}

def @func_5936(%var_5929: Tensor[(3, 2, 14), float32]) -> Tensor[(3, 2, 14), float64] {
  %35 = @func_3854() /* ty=Tensor[(3, 2, 14), float32] */;
  %36 = cast(%var_5929, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%35, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%38, %39) /* ty=Tensor[(3, 2, 14), float64] */
}

def @func_21575() -> (Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64]) {
  %40 = @func_8353() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(65, 15), float64]) */;
  %41 = @func_19249() /* ty=Tensor[(2, 14, 3), float64] */;
  %42 = %40.2;
  (%41, %42)
}

def @func_7453() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %43 = @func_5432() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %44 = @func_5960() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %45 = %43.1;
  %46 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %47 = %44.1;
  (%45, %46, %47)
}

def @func_8353() -> (Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(65, 15), float64]) {
  %48 = @func_7453() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %49 = cast(meta[relay.Constant][1] /* ty=Tensor[(65, 15), float64] */, dtype="float64") /* ty=Tensor[(65, 15), float64] */;
  %50 = cast(meta[relay.Constant][1] /* ty=Tensor[(65, 15), float64] */, dtype="float64") /* ty=Tensor[(65, 15), float64] */;
  %51 = reshape(%49, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float64] */;
  %52 = reshape(%50, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float64] */;
  %53 = @func_3888(%51, %52) /* ty=(Tensor[(15, 5, 13), bool],) */;
  %54 = %48.2;
  %55 = %53.0;
  (%54, %55, meta[relay.Constant][1] /* ty=Tensor[(65, 15), float64] */)
}

def @func_22727(%var_22701: Tensor[(120, 4), float32], %var_22704: Tensor[(12), float64], %var_22715: Tensor[(120, 4), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(975), float64], Tensor[(2, 6, ?), int16], Tensor[(12), float64], Tensor[(3, 2, 14), float64], Tensor[(120, 4), bool], Tensor[(2, 14, 3), float64]) {
  %56 = cast(%var_22701, dtype="float32") /* ty=Tensor[(120, 4), float32] */;
  %57 = reshape(%56, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %58 = @func_16240(%57) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], float64, Tensor[(975), float64], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64]) */;
  %59 = cast(%var_22704, dtype="float64") /* ty=Tensor[(12), float64] */;
  %60 = reshape(%59, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), float64] */;
  %61 = @func_12386(%60) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 6, ?), int16], Tensor[(2, 6, 1), float64]) */;
  %62 = cast(%var_22701, dtype="float64") /* ty=Tensor[(120, 4), float64] */;
  %63 = asin(%62) /* ty=Tensor[(120, 4), float64] */;
  %64 = cast(%var_22715, dtype="bool") /* ty=Tensor[(120, 4), bool] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(2), int32] */;
  %66 = cast(%63, dtype="bool") /* ty=Tensor[(120, 4), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %68 = cast(%var_22704, dtype="float64") /* ty=Tensor[(12), float64] */;
  %69 = reshape(%68, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), float64] */;
  %70 = @func_12386(%69) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 6, ?), int16], Tensor[(2, 6, 1), float64]) */;
  %71 = @func_11253() /* ty=Tensor[(2, 14, 3), float64] */;
  %72 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %73 = %58.3;
  %74 = %61.1;
  %75 = @func_6265() /* ty=Tensor[(3, 2, 14), float64] */;
  %76 = logical_and(%66, %67) /* ty=Tensor[(120, 4), bool] */;
  %77 = %70.0;
  (%71, %72, %73, %74, %var_22704, %75, %76, %77)
}

def @func_16905() -> Tensor[(250), float64] {
  %78 = @func_5659() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %78.2
}

def @func_4279() -> Tensor[(2, 14, 3), float64] {
  %79 = @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %79.0
}

def @func_22584() -> Tensor[(2, 14, 3), float64] {
  %80 = @func_7453() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %80.1
}

def @func_16492() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %81 = @func_8233() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %82 = @func_14985() /* ty=(Tensor[(250), float64], Tensor[(2, 14, 3), float64]) */;
  %83 = %81.0;
  %84 = %82.1;
  (%83, %84)
}

def @func_18152(%var_18141: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) {
  %85 = cast(%var_18141, dtype="float32") /* ty=Tensor[(480), float32] */;
  %86 = reshape(%85, newshape=[4, 120]) /* ty=Tensor[(4, 120), float32] */;
  %87 = @func_6953(%86) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(4, 120), float32]) */;
  %88 = @func_17302() /* ty=Tensor[(2, 14, 3), float64] */;
  %89 = %87.1;
  (%88, %89, %var_18141)
}

def @func_12090(%var_12083: Tensor[(9, 11, 1), float64]) -> (Tensor[(9, 11, ?), int64],) {
  %90 = cast(%var_12083, dtype="float64") /* ty=Tensor[(9, 11, 1), float64] */;
  %91 = rsqrt(%90) /* ty=Tensor[(9, 11, 1), float64] */;
  %92 = cast(%var_12083, dtype="int64") /* ty=Tensor[(9, 11, 1), int64] */;
  %93 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%91, dtype="int64") /* ty=Tensor[(9, 11, 1), int64] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %96 = logical_xor(%94, %95) /* ty=Tensor[(9, 11, ?), int64] */;
  (%96,)
}

def @func_5398(%var_5396: Tensor[(250, 1), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250, 1), float64]) {
  %97 = cast(%var_5396, dtype="float64") /* ty=Tensor[(250, 1), float64] */;
  %98 = reshape(%97, newshape=[250]) /* ty=Tensor[(250), float64] */;
  %99 = @func_2419(%98) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64]) */;
  %100 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
  %101 = %99.3;
  (%100, %101, %var_5396)
}

def @func_17069() -> (Tensor[(2, 14, 3), float64],) {
  %102 = @func_12167() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %103 = %102.0;
  (%103,)
}

def @func_13826() -> Tensor[(3, 2, 14), bool] {
  %104 = @func_2885() /* ty=(Tensor[(3, 2, 14), bool],) */;
  %104.0
}

def @func_20158() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %105 = @func_13548() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %106 = @func_8546() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %107 = @func_12588() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %108 = @func_2162() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %109 = @func_13774() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %110 = %105.0;
  %111 = %106.0;
  %112 = %107.1;
  %113 = %108.0;
  %114 = %109.0;
  (%110, %111, %112, %113, %114)
}

def @func_15441() -> (Tensor[(2, 14, 3), float64],) {
  %115 = @func_13096() /* ty=Tensor[(2, 14, 3), float64] */;
  (%115,)
}

def @func_3854() -> Tensor[(3, 2, 14), float32] {
  %116 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %116.0
}

def @func_1511() -> Tensor[(2, 14, 3), float64] {
  %117 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(2, 14, 3), float64] */;
  sigmoid(%117) /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_12167() -> (Tensor[(2, 14, 3), float64],) {
  %118 = @func_7453() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %119 = %118.1;
  (%119,)
}

def @func_16405(%var_16374: Tensor[(99), float64]) -> (Tensor[(224), float32], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(10, 5, 5), float64], Tensor[(432), float32], Tensor[(42, 2), float32]) {
  %120 = @func_15183() /* ty=(Tensor[(224), float32], Tensor[(2, 14, 3), float64]) */;
  %121 = cast(%var_16374, dtype="float64") /* ty=Tensor[(99), float64] */;
  %122 = reshape(%121, newshape=[9, 11, 1]) /* ty=Tensor[(9, 11, 1), float64] */;
  %123 = @func_12090(%122) /* ty=(Tensor[(9, 11, ?), int64],) */;
  %124 = cast(meta[relay.Constant][3] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %125 = cast(meta[relay.Constant][4] /* ty=Tensor[(42, 2), float32] */, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %126 = reshape(%124, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %127 = reshape(%125, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %128 = @func_4046(%126, %127) /* ty=(Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(432), float32], Tensor[(64), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(9, ?, 2), float64]) */;
  %129 = %120.0;
  %130 = %123.0;
  %131 = %128.0;
  (%129, %130, %var_16374, %131, meta[relay.Constant][3] /* ty=Tensor[(432), float32] */, meta[relay.Constant][4] /* ty=Tensor[(42, 2), float32] */)
}

def @func_6160() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %132 = @func_5036() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %133 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %134 = %132.0;
  (%133, %134)
}

def @func_22027() -> Tensor[(2, 14, 3), float64] {
  @func_8121() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_20626() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %135 = @func_7660() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %136 = @func_7768() /* ty=Tensor[(2, 14, 3), float64] */;
  %137 = %135.0;
  (%136, %137)
}

def @func_21417() -> (Tensor[(3, 2, 14), float32], Tensor[(112, 1), uint32], Tensor[(480), float32], Tensor[(4, 16), float64], Tensor[(56, 2), uint32]) {
  %138 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %139 = cast(meta[relay.Constant][5] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %140 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 16), float64] */, dtype="float64") /* ty=Tensor[(4, 16), float64] */;
  %141 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 16), float64] */, dtype="float64") /* ty=Tensor[(4, 16), float64] */;
  %142 = cast(meta[relay.Constant][7] /* ty=Tensor[(56, 2), uint32] */, dtype="uint32") /* ty=Tensor[(56, 2), uint32] */;
  %143 = reshape(%139, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %144 = reshape(%140, newshape=[32, 2]) /* ty=Tensor[(32, 2), float64] */;
  %145 = reshape(%141, newshape=[32, 2]) /* ty=Tensor[(32, 2), float64] */;
  %146 = reshape(%142, newshape=[112, 1]) /* ty=Tensor[(112, 1), uint32] */;
  %147 = @func_6840(%143, %144, %145, %146) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(32, 2), bool], Tensor[(9, ?, 2), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(112, 1), uint32]) */;
  %148 = %138.0;
  %149 = %147.7;
  (%148, %149, meta[relay.Constant][5] /* ty=Tensor[(480), float32] */, meta[relay.Constant][6] /* ty=Tensor[(4, 16), float64] */, meta[relay.Constant][7] /* ty=Tensor[(56, 2), uint32] */)
}

def @func_14108() -> (Tensor[(4, 14, 4), float32], Tensor[(2, 14, 3), float64], Tensor[(9, ?, 2), bool], Tensor[(3, 2, 14), bool]) {
  %150 = @func_6528() /* ty=(Tensor[(3, 2, 14), int16], Tensor[(4, 14, 4), float32], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %151 = @func_10555() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %152 = @func_3800() /* ty=Tensor[(9, 1, 2), float64] */;
  %153 = cast(%152, dtype="float32") /* ty=Tensor[(9, 1, 2), float32] */;
  %154 = sigmoid(%153) /* ty=Tensor[(9, 1, 2), float32] */;
  %155 = cast(%152, dtype="bool") /* ty=Tensor[(9, 1, 2), bool] */;
  %156 = shape_of(%154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(%154, dtype="bool") /* ty=Tensor[(9, 1, 2), bool] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %159 = @func_9928() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %160 = %150.1;
  %161 = %151.0;
  %162 = greater(%157, %158) /* ty=Tensor[(9, ?, 2), bool] */;
  %163 = %159.0;
  (%160, %161, %162, %163)
}

def @func_6964() -> Tensor[(2, 14, 3), float64] {
  %164 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %164.0
}

def @func_11549() -> (Tensor[(16, 5, 16), float64],) {
  %165 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 16), float64] */;
  %166 = log(%165) /* ty=Tensor[(16, 5, 16), float64] */;
  (%166,)
}

def @func_22472(%var_22461: Tensor[(8, 13, 5), float64], %var_22462: Tensor[(8, 13, 5), float64]) -> (Tensor[(8, 13, 5), bool], Tensor[(8, 13, 5), float32]) {
  %167 = cast(%var_22462, dtype="bool") /* ty=Tensor[(8, 13, 5), bool] */;
  %168 = shape_of(%var_22461, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%var_22461, dtype="bool") /* ty=Tensor[(8, 13, 5), bool] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %171 = cast(%var_22462, dtype="float32") /* ty=Tensor[(8, 13, 5), float32] */;
  %172 = greater(%169, %170) /* ty=Tensor[(8, 13, 5), bool] */;
  %173 = asinh(%171) /* ty=Tensor[(8, 13, 5), float32] */;
  (%172, %173)
}

def @func_15110() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %174 = @func_5107() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %175 = @func_11833() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %176 = %174.2;
  %177 = %175.0;
  (%176, %177)
}

def @func_10519() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %178 = @func_6160() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %179 = @func_2233() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %180 = %178.1;
  %181 = %179.2;
  (%180, %181)
}

def @func_11119() -> (Tensor[(2, 14, 3), float64],) {
  %182 = @func_4354() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %183 = %182.0;
  (%183,)
}

def @func_18607() -> (Tensor[(2, 14, 3), float64],) {
  %184 = @func_5036() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %185 = %184.0;
  (%185,)
}

def @func_21606() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %186 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %187 = @func_5036() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %188 = @func_16795() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %189 = %186.1;
  %190 = %187.0;
  %191 = %188.0;
  (%189, %190, %191)
}

def @func_16983() -> (Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) {
  %192 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %193 = @func_13826() /* ty=Tensor[(3, 2, 14), bool] */;
  %194 = %192.0;
  (%193, %194)
}

def @func_6230() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %195 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %196 = @func_2617() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %197 = %195.0;
  %198 = %196.2;
  (%197, %198)
}

def @func_21871() -> (Tensor[(2, 14, 3), float64],) {
  %199 = @func_14555() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %200 = %199.0;
  (%200,)
}

def @func_19625() -> (Tensor[(2, 14, 3), float64],) {
  %201 = @func_13845() /* ty=Tensor[(2, 14, 3), float64] */;
  (%201,)
}

def @func_13257() -> (Tensor[(2, 14, 3), float64],) {
  %202 = @func_10821() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */;
  %203 = %202.1;
  (%203,)
}

def @func_20434() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %204 = @func_11974() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %205 = @func_10555() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %206 = @func_15110() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %207 = %204.1;
  %208 = @func_13496() /* ty=Tensor[(2, 14, 3), float64] */;
  %209 = %205.0;
  %210 = %206.1;
  (%207, %208, %209, %210)
}

def @func_2885() -> (Tensor[(3, 2, 14), bool],) {
  %211 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %212 = %211.0;
  %213 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 2, 14), float32] */, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
  %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%212, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %217 = equal(%215, %216) /* ty=Tensor[(3, 2, 14), bool] */;
  (%217,)
}

def @func_13461() -> (Tensor[(14, 8, 12), float64],) {
  %218 = @func_13347() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(14, 96), float64]) */;
  %219 = %218.1;
  (%219,)
}

def @func_1882() -> (Tensor[(2, 14, 3), float64],) {
  %220 = @func_1511() /* ty=Tensor[(2, 14, 3), float64] */;
  (%220,)
}

def @func_2252(%var_2245: Tensor[(64), float64], %var_2250: Tensor[(432), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) {
  %221 = cast(%var_2245, dtype="float64") /* ty=Tensor[(64), float64] */;
  %222 = reshape(%221, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %223 = @func_1447(%222) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %224 = cast(%var_2250, dtype="float32") /* ty=Tensor[(432), float32] */;
  %225 = reshape(%224, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
  %226 = @func_793(%225) /* ty=(Tensor[(9, 12, 4), float32],) */;
  %227 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %228 = %223.1;
  %229 = %226.0;
  (%227, %228, %var_2245, %229, %var_2250)
}

def @func_11317() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %230 = @func_9833() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %231 = @func_11119() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %232 = %230.0;
  %233 = %231.0;
  (%232, %233)
}

def @func_8190() -> Tensor[(2, 14, 3), float64] {
  %234 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %234.0
}

def @func_17302() -> Tensor[(2, 14, 3), float64] {
  %235 = @func_10864() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %235.0
}

def @func_19587() -> Tensor[(2, 14, 3), float64] {
  %236 = @func_8546() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %236.0
}

def @func_793(%var_779: Tensor[(9, 12, 4), float32]) -> (Tensor[(9, 12, 4), float32],) {
  %237 = cast(%var_779, dtype="float32") /* ty=Tensor[(9, 12, 4), float32] */;
  %238 = cos(%237) /* ty=Tensor[(9, 12, 4), float32] */;
  (%238,)
}

def @func_21880() -> (Tensor[(2, 14, 3), float64],) {
  %239 = @func_6964() /* ty=Tensor[(2, 14, 3), float64] */;
  (%239,)
}

def @func_8121() -> Tensor[(2, 14, 3), float64] {
  %240 = @func_5107() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %240.0
}

def @func_11974() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %241 = @func_3439() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %242 = @func_8482() /* ty=Tensor[(2, 14, 3), float64] */;
  %243 = %241.1;
  (%242, %243)
}

def @func_20535() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %244 = @func_18865() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %245 = %244.0;
  %246 = @func_9039() /* ty=Tensor[(2, 14, 3), float64] */;
  (%245, %246)
}

def @func_9735(%var_9728: Tensor[(224), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(224), float32]) {
  %247 = cast(%var_9728, dtype="float32") /* ty=Tensor[(224), float32] */;
  %248 = reshape(%247, newshape=[4, 14, 4]) /* ty=Tensor[(4, 14, 4), float32] */;
  %249 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
  %250 = @func_186(%248) /* ty=Tensor[(4, 14, 4), float32] */;
  (%249, %250, %var_9728)
}

def @func_10981(%var_10952: Tensor[(10, 2, 3), int64], %var_10953: Tensor[(10, 2, 3), int64]) -> (Tensor[(10, 2, 3), float64], Tensor[(2, 14, 3), float64]) {
  %251 = cast(%var_10953, dtype="bool") /* ty=Tensor[(10, 2, 3), bool] */;
  %252 = shape_of(%var_10952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%var_10952, dtype="bool") /* ty=Tensor[(10, 2, 3), bool] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %255 = greater_equal(%253, %254) /* ty=Tensor[(10, 2, 3), bool] */;
  %256 = cast(%var_10953, dtype="float64") /* ty=Tensor[(10, 2, 3), float64] */;
  %257 = shape_of(%255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%255, dtype="float64") /* ty=Tensor[(10, 2, 3), float64] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %260 = divide(%258, %259) /* ty=Tensor[(10, 2, 3), float64] */;
  %261 = @func_9018() /* ty=Tensor[(2, 14, 3), float64] */;
  (%260, %261)
}

def @func_14641() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %262 = @func_14555() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %263 = @func_2456() /* ty=Tensor[(2, 14, 3), float64] */;
  %264 = %262.0;
  (%263, %264)
}

def @func_12488() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) {
  %265 = @func_5036() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %266 = %265.0;
  %267 = @func_11388() /* ty=Tensor[(9, 1, 2), float64] */;
  (%266, %267)
}

def @func_1632() -> Tensor[(2, 14, 3), float64] {
  @func_1511() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_6715() -> Tensor[(2, 14, 3), float64] {
  @func_6548() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_15915() -> (Tensor[(2, 14, 3), float64],) {
  %268 = @func_12708() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32]) */;
  %269 = %268.1;
  (%269,)
}

def @func_20997() -> (Tensor[(2, 14, 3), float64],) {
  %270 = @func_11583() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %271 = %270.0;
  (%271,)
}

def @func_9194() -> Tensor[(2, 14, 3), float64] {
  %272 = @func_2617() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %272.2
}

def @func_10463(%var_10459: Tensor[(432), float32], %var_10460: Tensor[(224), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(7, 15, 1), uint32], uint32, Tensor[(432), float32], Tensor[(224), float32]) {
  %273 = cast(meta[relay.Constant][10] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %274 = cast(%var_10459, dtype="float32") /* ty=Tensor[(432), float32] */;
  %275 = cast(%var_10460, dtype="float32") /* ty=Tensor[(224), float32] */;
  %276 = reshape(%273, newshape=[]) /* ty=uint32 */;
  %277 = reshape(%274, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %278 = reshape(%275, newshape=[1, 224]) /* ty=Tensor[(1, 224), float32] */;
  %279 = @func_1313(%276, %277, %278) /* ty=(Tensor[(7, 15, 1), uint32], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(4, 14, 4), float32], Tensor[(1, 224), float32], Tensor[(9, 12, 4), float32], Tensor[(9, 12, 4), float32], Tensor[(7, 15, 1), float32]) */;
  %280 = @func_6715() /* ty=Tensor[(2, 14, 3), float64] */;
  %281 = %279.0;
  (%280, %281, meta[relay.Constant][10] /* ty=uint32 */, %var_10459, %var_10460)
}

def @func_2419(%var_2401: Tensor[(250), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64]) {
  %282 = @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %283 = cast(%var_2401, dtype="float64") /* ty=Tensor[(250), float64] */;
  %284 = reshape(%283, newshape=[250]) /* ty=Tensor[(250), float64] */;
  %285 = @func_1794(%284) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %286 = %282.0;
  %287 = %285.0;
  %288 = @func_1511() /* ty=Tensor[(2, 14, 3), float64] */;
  (%286, %287, %var_2401, %288)
}

def @func_2456() -> Tensor[(2, 14, 3), float64] {
  @func_1511() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_14766(%var_14719: Tensor[(12, 7, 9), float32]) -> (Tensor[(12, 7, 9), int64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(1, 7, 9), float64], Tensor[(2, 14, 3), float64]) {
  %289 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(1, 7, 9), float64] */;
  %290 = log(%289) /* ty=Tensor[(1, 7, 9), float64] */;
  %291 = cast(%290, dtype="float32") /* ty=Tensor[(1, 7, 9), float32] */;
  %292 = log2(%291) /* ty=Tensor[(1, 7, 9), float32] */;
  %293 = cast(%292, dtype="int64") /* ty=Tensor[(1, 7, 9), int64] */;
  %294 = cast(%var_14719, dtype="int64") /* ty=Tensor[(12, 7, 9), int64] */;
  %295 = cast(%292, dtype="float64") /* ty=Tensor[(1, 7, 9), float64] */;
  %296 = @func_12216() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) */;
  %297 = multiply(%293, %294) /* ty=Tensor[(12, 7, 9), int64] */;
  %298 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
  %299 = @func_8482() /* ty=Tensor[(2, 14, 3), float64] */;
  %300 = sigmoid(%295) /* ty=Tensor[(1, 7, 9), float64] */;
  %301 = %296.0;
  (%297, %298, %299, %300, %301)
}

def @func_7975() -> Tensor[(2, 14, 3), float64] {
  @func_7768() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_8494(%var_8487: Tensor[(10, 5, 9), float32]) -> (Tensor[(10, 5, 9), float32],) {
  %302 = cast(%var_8487, dtype="float32") /* ty=Tensor[(10, 5, 9), float32] */;
  %303 = atan(%302) /* ty=Tensor[(10, 5, 9), float32] */;
  (%303,)
}

def @func_12914(%var_12887: Tensor[(60), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 9), float32], Tensor[(450), float32]) {
  %304 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
  %305 = cast(5.71117f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %306 = cast(%var_12887, dtype="float64") /* ty=Tensor[(60), float64] */;
  %307 = reshape(%305, newshape=[]) /* ty=float64 */;
  %308 = reshape(%306, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %309 = @func_7319(%307, %308) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64]) */;
  %310 = cast(meta[relay.Constant][12] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %311 = reshape(%310, newshape=[10, 5, 9]) /* ty=Tensor[(10, 5, 9), float32] */;
  %312 = @func_8494(%311) /* ty=(Tensor[(10, 5, 9), float32],) */;
  %313 = %304.0;
  %314 = @func_10250() /* ty=Tensor[(2, 14, 3), float64] */;
  %315 = %309.2;
  %316 = @func_6715() /* ty=Tensor[(2, 14, 3), float64] */;
  %317 = %312.0;
  (%313, %314, %315, 5.71117f64 /* ty=float64 */, %var_12887, %316, %317, meta[relay.Constant][12] /* ty=Tensor[(450), float32] */)
}

def @func_19191() -> Tensor[(2, 14, 3), float64] {
  %318 = @func_10177() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %318.1
}

def @func_9670() -> (Tensor[(65, 15), float64],) {
  %319 = @func_8353() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(65, 15), float64]) */;
  %320 = %319.2;
  (%320,)
}

def @func_21654() -> (Tensor[(2, 14, 3), float64],) {
  %321 = @func_8233() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %322 = %321.0;
  (%322,)
}

def @func_19364() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64]) {
  %323 = @func_10821() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */;
  %324 = @func_9928() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %325 = @func_16869() /* ty=(Tensor[(6, 12, 8), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %326 = %323.0;
  %327 = %324.1;
  %328 = %325.2;
  %329 = @func_8093() /* ty=Tensor[(2, 14, 3), float64] */;
  (%326, %327, %328, %329)
}

def @func_2491() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) {
  %330 = @func_2084() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %331 = cast(meta[relay.Constant][13] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %332 = reshape(%331, newshape=[250]) /* ty=Tensor[(250), float64] */;
  %333 = @func_2419(%332) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64]) */;
  %334 = %330.1;
  %335 = %333.3;
  (%334, %335, meta[relay.Constant][13] /* ty=Tensor[(250), float64] */)
}

def @func_6556() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %336 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %337 = @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %338 = %336.0;
  %339 = %337.0;
  (%338, %339)
}

def @func_2150() -> Tensor[(2, 14, 3), float64] {
  @func_1632() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_7862() -> (Tensor[(2, 14, 3), float64],) {
  %340 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %341 = %340.0;
  (%341,)
}

def @func_17645(%var_17637: Tensor[(4, 2, 3), float64]) -> Tensor[(4, 2, 3), float64] {
  %342 = cast(%var_17637, dtype="float64") /* ty=Tensor[(4, 2, 3), float64] */;
  erf(%342) /* ty=Tensor[(4, 2, 3), float64] */
}

def @func_6905(%var_6885: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), bool], Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) {
  %343 = @func_6528() /* ty=(Tensor[(3, 2, 14), int16], Tensor[(4, 14, 4), float32], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %344 = %343.4;
  %345 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 14, 3), float64] */, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %347 = cast(%344, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %349 = @func_4913() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
  %350 = cast(%var_6885, dtype="float32") /* ty=Tensor[(480), float32] */;
  %351 = reshape(%350, newshape=[12, 8, 5]) /* ty=Tensor[(12, 8, 5), float32] */;
  %352 = @func_2709(%351) /* ty=(Tensor[(12, 8, 5), float32],) */;
  %353 = less(%347, %348) /* ty=Tensor[(2, 14, 3), bool] */;
  %354 = %349.6;
  %355 = %352.0;
  (%353, %354, %355, %var_6885)
}

def @func_9981() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %356 = @func_8727() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %357 = @func_3331() /* ty=Tensor[(2, 14, 3), float64] */;
  %358 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
  %359 = @func_9153() /* ty=Tensor[(2, 14, 3), float64] */;
  %360 = %356.3;
  (%357, %358, %359, %360)
}

def @func_6953(%var_6950: Tensor[(4, 120), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(4, 120), float32]) {
  %361 = cast(%var_6950, dtype="float32") /* ty=Tensor[(4, 120), float32] */;
  %362 = reshape(%361, newshape=[12, 8, 5]) /* ty=Tensor[(12, 8, 5), float32] */;
  %363 = @func_2709(%362) /* ty=(Tensor[(12, 8, 5), float32],) */;
  %364 = @func_2556() /* ty=Tensor[(2, 14, 3), float64] */;
  %365 = %363.0;
  (%364, %365, %var_6950)
}

def @func_12500() -> Tensor[(2, 14, 3), float64] {
  %366 = @func_10821() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */;
  %366.1
}

def @func_20365() -> Tensor[(2, 14, 3), float64] {
  %367 = @func_10936() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %367.0
}

def @func_16075() -> (Tensor[(2, 14, 3), float64],) {
  %368 = @func_11974() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %369 = %368.1;
  (%369,)
}

def @func_3484() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %370 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %371 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %372 = %370.0;
  (%371, %372)
}

def @func_16795() -> (Tensor[(2, 14, 3), float64],) {
  %373 = @func_2556() /* ty=Tensor[(2, 14, 3), float64] */;
  (%373,)
}

def @func_3331() -> Tensor[(2, 14, 3), float64] {
  @func_2150() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_21912() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(432), float32], Tensor[(432), float32]) {
  %374 = @func_21047() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %375 = @func_16869() /* ty=(Tensor[(6, 12, 8), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %376 = cast(meta[relay.Constant][15] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %377 = %374.0;
  %378 = cast(%377, dtype="float32") /* ty=Tensor[(2, 14, 3), float32] */;
  %379 = reshape(%376, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %380 = reshape(%378, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %381 = @func_4046(%379, %380) /* ty=(Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(432), float32], Tensor[(64), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(9, ?, 2), float64]) */;
  %382 = %375.3;
  %383 = %381.4;
  (%377, %382, %383, meta[relay.Constant][15] /* ty=Tensor[(432), float32] */)
}

def @func_10177() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %384 = @func_3331() /* ty=Tensor[(2, 14, 3), float64] */;
  %385 = @func_7539() /* ty=Tensor[(2, 14, 3), float64] */;
  (%384, %385)
}

def @func_16758() -> (Tensor[(3, 2, 14), float32],) {
  %386 = @func_3854() /* ty=Tensor[(3, 2, 14), float32] */;
  (%386,)
}

def @func_3900() -> Tensor[(9, 1, 2), float64] {
  @func_3800() /* ty=Tensor[(9, 1, 2), float64] */
}

def @func_14985() -> (Tensor[(250), float64], Tensor[(2, 14, 3), float64]) {
  %387 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
  %388 = @func_6160() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %389 = %387.2;
  %390 = %388.0;
  (%389, %390)
}

def @func_12708() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32]) {
  %391 = @func_6002() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %392 = cast(meta[relay.Constant][16] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %393 = reshape(%392, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %394 = @func_9735(%393) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(224), float32]) */;
  %395 = %391.0;
  %396 = %394.0;
  (%395, %396, meta[relay.Constant][16] /* ty=Tensor[(224), float32] */)
}

def @func_5444(%var_5437: Tensor[(15, 5, 14), float64]) -> Tensor[(15, 5, 14), float64] {
  %397 = cast(%var_5437, dtype="float64") /* ty=Tensor[(15, 5, 14), float64] */;
  exp(%397) /* ty=Tensor[(15, 5, 14), float64] */
}

def @func_19029() -> (Tensor[(14, 8, 12), float64],) {
  %398 = @func_13461() /* ty=(Tensor[(14, 8, 12), float64],) */;
  %399 = %398.0;
  (%399,)
}

def @func_19178() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64]) {
  %400 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
  %401 = @func_19029() /* ty=(Tensor[(14, 8, 12), float64],) */;
  %402 = @func_9670() /* ty=(Tensor[(65, 15), float64],) */;
  %403 = %402.0;
  %404 = cast(%403, dtype="float64") /* ty=Tensor[(65, 15), float64] */;
  %405 = log(%404) /* ty=Tensor[(65, 15), float64] */;
  %406 = cast(%405, dtype="float64") /* ty=Tensor[(65, 15), float64] */;
  %407 = @func_17088() /* ty=Tensor[(2, 14, 3), float64] */;
  %408 = %400.1;
  %409 = %401.0;
  %410 = @func_12500() /* ty=Tensor[(2, 14, 3), float64] */;
  %411 = tan(%406) /* ty=Tensor[(65, 15), float64] */;
  (%407, %408, %409, %410, %411)
}

def @func_11646() -> Tensor[(2, 14, 3), float64] {
  @func_4279() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_5250(%var_5196: Tensor[(224), float32], %var_5227: Tensor[(216, 2), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 14, 4), float64], Tensor[(224), float32], Tensor[(216, 2), float32]) {
  %412 = cast(%var_5196, dtype="float32") /* ty=Tensor[(224), float32] */;
  %413 = reshape(%412, newshape=[4, 14, 4]) /* ty=Tensor[(4, 14, 4), float32] */;
  %414 = @func_186(%413) /* ty=Tensor[(4, 14, 4), float32] */;
  %415 = cast(%414, dtype="float64") /* ty=Tensor[(4, 14, 4), float64] */;
  %416 = @func_2719() /* ty=Tensor[(2, 14, 3), float64] */;
  %417 = cast(%416, dtype="int32") /* ty=Tensor[(2, 14, 3), int32] */;
  %418 = cast(%var_5227, dtype="float32") /* ty=Tensor[(216, 2), float32] */;
  %419 = cast(%414, dtype="float32") /* ty=Tensor[(4, 14, 4), float32] */;
  %420 = reshape(%417, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), int32] */;
  %421 = reshape(%418, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %422 = reshape(%419, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %423 = @func_1587(%420, %421, %422) /* ty=(Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(7, 3, 4), int16], Tensor[(9, 12, 4), float32]) */;
  %424 = exp(%415) /* ty=Tensor[(4, 14, 4), float64] */;
  %425 = %423.2;
  (%416, %var_5196, %424, %425, %var_5227)
}

def @func_19717() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %426 = @func_6002() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %427 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %428 = %426.0;
  %429 = @func_10250() /* ty=Tensor[(2, 14, 3), float64] */;
  (%427, %428, %429)
}

def @func_3800() -> Tensor[(9, 1, 2), float64] {
  %430 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 1, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 1, 2), float64] */;
  atan(%430) /* ty=Tensor[(9, 1, 2), float64] */
}

def @func_23028() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %431 = @func_19625() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %432 = @func_17069() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %433 = @func_14555() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %434 = @func_8121() /* ty=Tensor[(2, 14, 3), float64] */;
  %435 = %431.0;
  %436 = %432.0;
  %437 = %433.1;
  (%434, %435, %436, %437)
}

def @func_21198(%var_21168: Tensor[(224), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %438 = cast(%var_21168, dtype="float32") /* ty=Tensor[(224), float32] */;
  %439 = reshape(%438, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %440 = @func_9735(%439) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(224), float32]) */;
  %441 = @func_16795() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %442 = @func_7768() /* ty=Tensor[(2, 14, 3), float64] */;
  %443 = %440.0;
  %444 = %441.0;
  %445 = @func_21065() /* ty=Tensor[(2, 14, 3), float64] */;
  (%442, %443, %var_21168, %444, %445)
}

def @func_14781() -> (Tensor[(2, 14, 3), float64],) {
  %446 = @func_11119() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %447 = %446.0;
  (%447,)
}

def @func_7072() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) {
  %448 = @func_6556() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %449 = @func_5854() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %450 = @func_2885() /* ty=(Tensor[(3, 2, 14), bool],) */;
  %451 = %448.0;
  %452 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
  %453 = %449.0;
  %454 = %450.0;
  (%451, %452, %453, %454)
}

def @func_10659() -> (Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) {
  %455 = @func_5854() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %456 = @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %457 = %455.1;
  %458 = %456.1;
  (%457, %458)
}

def @func_13993() -> (Tensor[(2, 14, 3), float64],) {
  %459 = @func_9039() /* ty=Tensor[(2, 14, 3), float64] */;
  (%459,)
}

def @func_21771(%var_21762: uint64, %var_21763: Tensor[(1, 4, 9), uint64]) -> (Tensor[(1, 4, 9), bool], Tensor[(14, 8, 12), float64], Tensor[(1344), float64]) {
  %460 = cast(%var_21762, dtype="bool") /* ty=bool */;
  %461 = cast(%var_21763, dtype="bool") /* ty=Tensor[(1, 4, 9), bool] */;
  %462 = cast(meta[relay.Constant][18] /* ty=Tensor[(1344), float64] */, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %463 = reshape(%462, newshape=[14, 8, 12]) /* ty=Tensor[(14, 8, 12), float64] */;
  %464 = greater(%460, %461) /* ty=Tensor[(1, 4, 9), bool] */;
  %465 = @func_7256(%463) /* ty=Tensor[(14, 8, 12), float64] */;
  (%464, %465, meta[relay.Constant][18] /* ty=Tensor[(1344), float64] */)
}

def @func_7955() -> Tensor[(2, 14, 3), float64] {
  %466 = @func_4567() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %466.0
}

def @func_21065() -> Tensor[(2, 14, 3), float64] {
  @func_2556() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_3340(%var_3335: float64, %var_3336: Tensor[(12, 5, 1), float64]) -> (Tensor[(12, 5, 1), float64],) {
  %467 = cast(%var_3335, dtype="float64") /* ty=float64 */;
  %468 = cast(%var_3336, dtype="float64") /* ty=Tensor[(12, 5, 1), float64] */;
  %469 = floor_divide(%467, %468) /* ty=Tensor[(12, 5, 1), float64] */;
  (%469,)
}

def @func_4722(%var_4643: Tensor[(14, 4, 2), uint32], %var_4644: Tensor[(14, 4, 2), uint32], %var_4708: Tensor[(14, 4, 2), float64], %var_4713: Tensor[(14, 4, 2), uint32]) -> (Tensor[(14, 4, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(14, 4, 2), float64], Tensor[(14, 4, 2), bool]) {
  %470 = cast(%var_4643, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %471 = sqrt(%470) /* ty=Tensor[(14, 4, 2), float64] */;
  %472 = cast(%var_4644, dtype="uint32") /* ty=Tensor[(14, 4, 2), uint32] */;
  %473 = shape_of(%var_4643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%var_4643, dtype="uint32") /* ty=Tensor[(14, 4, 2), uint32] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %476 = bitwise_and(%474, %475) /* ty=Tensor[(14, 4, 2), uint32] */;
  %477 = cast(%476, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %478 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%471, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %481 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %482 = cast(%var_4708, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %483 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%471, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %486 = cast(%var_4713, dtype="bool") /* ty=Tensor[(14, 4, 2), bool] */;
  %487 = shape_of(%var_4643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%var_4643, dtype="bool") /* ty=Tensor[(14, 4, 2), bool] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %490 = floor_mod(%479, %480) /* ty=Tensor[(14, 4, 2), float64] */;
  %491 = %481.0;
  %492 = mod(%484, %485) /* ty=Tensor[(14, 4, 2), float64] */;
  %493 = logical_and(%488, %489) /* ty=Tensor[(14, 4, 2), bool] */;
  (%490, %491, %492, %493)
}

def @func_18085() -> (Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) {
  %494 = @func_8593() /* ty=(Tensor[(3, 2, 14), bool],) */;
  %495 = @func_6175() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %496 = %494.0;
  %497 = %495.1;
  (%496, %497)
}

def @func_10864() -> (Tensor[(2, 14, 3), float64],) {
  %498 = @func_7741() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %499 = %498.1;
  (%499,)
}

def @func_13774() -> (Tensor[(2, 14, 3), float64],) {
  %500 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %501 = %500.0;
  (%501,)
}

def @func_12244() -> (Tensor[(2, 14, 3), float64],) {
  %502 = @func_4279() /* ty=Tensor[(2, 14, 3), float64] */;
  (%502,)
}

def @func_3292() -> (Tensor[(3, 2, 14), float32],) {
  %503 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %504 = %503.0;
  (%504,)
}

def @func_2654() -> (Tensor[(3, 2, 14), float32],) {
  %505 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 2, 14), float32] */, dtype="float32") /* ty=Tensor[(3, 2, 14), float32] */;
  %506 = sin(%505) /* ty=Tensor[(3, 2, 14), float32] */;
  (%506,)
}

def @func_11833() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  %507 = @func_1511() /* ty=Tensor[(2, 14, 3), float64] */;
  %508 = @func_3854() /* ty=Tensor[(3, 2, 14), float32] */;
  (%507, %508)
}

def @func_12317() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %509 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
  %510 = @func_2456() /* ty=Tensor[(2, 14, 3), float64] */;
  %511 = %509.1;
  (%510, %511)
}

def @func_7768() -> Tensor[(2, 14, 3), float64] {
  @func_2456() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_15535() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(480, 1), float32]) {
  %512 = @func_11708() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %513 = @func_13257() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %514 = cast(meta[relay.Constant][20] /* ty=Tensor[(480, 1), float32] */, dtype="float32") /* ty=Tensor[(480, 1), float32] */;
  %515 = reshape(%514, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %516 = @func_6905(%515) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) */;
  %517 = %512.0;
  %518 = %513.0;
  %519 = %516.1;
  (%517, %518, %519, meta[relay.Constant][20] /* ty=Tensor[(480, 1), float32] */)
}

def @func_8546() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %520 = @func_8286() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %521 = %520.0;
  %522 = @func_6548() /* ty=Tensor[(2, 14, 3), float64] */;
  (%521, %522)
}

def @func_5107() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %523 = @func_2162() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %524 = @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %525 = %523.0;
  %526 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  %527 = %524.0;
  (%525, %526, %527)
}

def @func_7199(%var_7125: Tensor[(5, 195), float64], %var_7193: Tensor[(480), float32]) -> (Tensor[(3, 2, 14), float32], Tensor[(15, 5, 13), bool], Tensor[(5, 195), float64], Tensor[(3, 2, 14), float32], Tensor[(12, 5, 1), float64], float64, Tensor[(2, 14, 3), float64], Tensor[(60, 1), float32], Tensor[(480), float32], Tensor[(480), float32]) {
  %528 = cast(%var_7125, dtype="float64") /* ty=Tensor[(5, 195), float64] */;
  %529 = cast(%var_7125, dtype="float64") /* ty=Tensor[(5, 195), float64] */;
  %530 = reshape(%528, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float64] */;
  %531 = reshape(%529, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float64] */;
  %532 = @func_3888(%530, %531) /* ty=(Tensor[(15, 5, 13), bool],) */;
  %533 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %534 = cast(2.57977f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %535 = cast(meta[relay.Constant][21] /* ty=Tensor[(60, 1), float64] */, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %536 = reshape(%534, newshape=[]) /* ty=float64 */;
  %537 = reshape(%535, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float64] */;
  %538 = @func_3340(%536, %537) /* ty=(Tensor[(12, 5, 1), float64],) */;
  %539 = @func_6230() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %540 = cast(meta[relay.Constant][21] /* ty=Tensor[(60, 1), float64] */, dtype="float32") /* ty=Tensor[(60, 1), float32] */;
  %541 = cast(%var_7193, dtype="float32") /* ty=Tensor[(480), float32] */;
  %542 = reshape(%541, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %543 = @func_6905(%542) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) */;
  %544 = @func_5908() /* ty=Tensor[(3, 2, 14), float32] */;
  %545 = %532.0;
  %546 = %533.0;
  %547 = %538.0;
  %548 = %539.0;
  %549 = sinh(%540) /* ty=Tensor[(60, 1), float32] */;
  %550 = %543.3;
  (%544, %545, %var_7125, %546, %547, 2.57977f64 /* ty=float64 */, %548, %549, %550, %var_7193)
}

def @func_16577() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %551 = @func_4567() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %552 = @func_14781() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %553 = @func_7768() /* ty=Tensor[(2, 14, 3), float64] */;
  %554 = %551.0;
  %555 = %552.0;
  (%553, %554, %555)
}

def @func_20483() -> Tensor[(2, 14, 3), float64] {
  %556 = @func_8727() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %556.1
}

def @func_8593() -> (Tensor[(3, 2, 14), bool],) {
  %557 = @func_7072() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %558 = %557.3;
  (%558,)
}

def @func_10295() -> (Tensor[(9, 8, 1), uint64],) {
  %559 = @func_4995() /* ty=(Tensor[(9, 8, 1), uint64], Tensor[(64), float64], Tensor[(2, 14, 3), float64], Tensor[(9, 1, 1), float32]) */;
  %560 = %559.0;
  (%560,)
}

def @func_9470(%var_9440: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), bool], Tensor[(480), float32], Tensor[(3, 2, 14), float32]) {
  %561 = @func_8286() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %562 = cast(%var_9440, dtype="float32") /* ty=Tensor[(480), float32] */;
  %563 = reshape(%562, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %564 = @func_6905(%563) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) */;
  %565 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %566 = @func_6715() /* ty=Tensor[(2, 14, 3), float64] */;
  %567 = @func_3800() /* ty=Tensor[(9, 1, 2), float64] */;
  %568 = %561.0;
  %569 = %564.0;
  %570 = %565.0;
  (%566, %567, %568, %569, %var_9440, %570)
}

def @func_186(%var_144: Tensor[(4, 14, 4), float32]) -> Tensor[(4, 14, 4), float32] {
  %571 = cast(%var_144, dtype="float32") /* ty=Tensor[(4, 14, 4), float32] */;
  log10(%571) /* ty=Tensor[(4, 14, 4), float32] */
}

def @func_11583() -> (Tensor[(2, 14, 3), float64],) {
  %572 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %573 = %572.0;
  (%573,)
}

def @func_19831() -> (Tensor[(2, 14, 3), float64],) {
  %574 = @func_15283() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(2, 112), float32]) */;
  %575 = %574.1;
  (%575,)
}

def @func_5732(%var_5693: Tensor[(14, 7, 6), int64]) -> (Tensor[(14, 7, 6), int64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(64), float64], Tensor[(250), float64]) {
  %576 = cast(%var_5693, dtype="int64") /* ty=Tensor[(14, 7, 6), int64] */;
  %577 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(14, 7, 6), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 7, 6), int64] */, dtype="int64") /* ty=Tensor[(14, 7, 6), int64] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %580 = cast(meta[relay.Constant][23] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %581 = cast(meta[relay.Constant][24] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %582 = reshape(%580, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %583 = reshape(%581, newshape=[4, 16]) /* ty=Tensor[(4, 16), float64] */;
  %584 = @func_3179(%582, %583) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float32], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(4, 16), float64]) */;
  %585 = cast(meta[relay.Constant][24] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %586 = reshape(%585, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %587 = @func_1447(%586) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %588 = minimum(%578, %579) /* ty=Tensor[(14, 7, 6), int64] */;
  %589 = %584.3;
  %590 = %587.2;
  (%588, %589, meta[relay.Constant][23] /* ty=Tensor[(480), float32] */, meta[relay.Constant][24] /* ty=Tensor[(64), float64] */, %590)
}

def @func_5908() -> Tensor[(3, 2, 14), float32] {
  %591 = @func_4234() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %591.0
}

def @func_13885() -> Tensor[(2, 14, 3), float64] {
  %592 = @func_13608() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %592.1
}

def @func_3179(%var_3139: Tensor[(480), float32], %var_3171: Tensor[(4, 16), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float32], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(4, 16), float64]) {
  %593 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %594 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  %595 = cast(%594, dtype="float32") /* ty=Tensor[(2, 14, 3), float32] */;
  %596 = cast(%var_3139, dtype="float32") /* ty=Tensor[(480), float32] */;
  %597 = reshape(%596, newshape=[12, 8, 5]) /* ty=Tensor[(12, 8, 5), float32] */;
  %598 = @func_2709(%597) /* ty=(Tensor[(12, 8, 5), float32],) */;
  %599 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
  %600 = cast(%var_3171, dtype="float64") /* ty=Tensor[(4, 16), float64] */;
  %601 = reshape(%600, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %602 = @func_1447(%601) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %603 = %593.0;
  %604 = asin(%595) /* ty=Tensor[(2, 14, 3), float32] */;
  %605 = %598.0;
  %606 = %599.0;
  %607 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
  %608 = %602.1;
  (%603, %604, %605, %var_3139, %606, %607, %608, %var_3171)
}

def @func_11774() -> (Tensor[(2, 14, 3), float64],) {
  %609 = @func_9184() /* ty=Tensor[(2, 14, 3), float64] */;
  (%609,)
}

def @func_2709(%var_2705: Tensor[(12, 8, 5), float32]) -> (Tensor[(12, 8, 5), float32],) {
  %610 = cast(%var_2705, dtype="float32") /* ty=Tensor[(12, 8, 5), float32] */;
  %611 = atanh(%610) /* ty=Tensor[(12, 8, 5), float32] */;
  (%611,)
}

def @func_5432() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %612 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %613 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
  (%612, %613)
}

def @func_11253() -> Tensor[(2, 14, 3), float64] {
  %614 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %614.0
}

def @func_17475(%var_17465: Tensor[(10, 2, 5), float32]) -> (Tensor[(10, 2, 5), float32], Tensor[(2, 14, 3), float64]) {
  %615 = cast(%var_17465, dtype="float32") /* ty=Tensor[(10, 2, 5), float32] */;
  %616 = erf(%615) /* ty=Tensor[(10, 2, 5), float32] */;
  %617 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
  (%616, %617)
}

def @func_21246() -> (Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) {
  %618 = @func_20434() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %619 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
  %620 = %618.0;
  (%619, %620)
}

def @func_9833() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %621 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  %622 = @func_6964() /* ty=Tensor[(2, 14, 3), float64] */;
  (%621, %622)
}

def @func_13347() -> (Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(14, 96), float64]) {
  %623 = @func_10555() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %624 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 96), float64] */, dtype="float64") /* ty=Tensor[(14, 96), float64] */;
  %625 = reshape(%624, newshape=[14, 8, 12]) /* ty=Tensor[(14, 8, 12), float64] */;
  %626 = %623.0;
  %627 = @func_7256(%625) /* ty=Tensor[(14, 8, 12), float64] */;
  (%626, %627, meta[relay.Constant][25] /* ty=Tensor[(14, 96), float64] */)
}

def @func_7319(%var_7316: float64, %var_7317: Tensor[(60), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64]) {
  %628 = @func_5659() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %629 = @func_6230() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %630 = cast(%var_7316, dtype="float64") /* ty=float64 */;
  %631 = cast(%var_7317, dtype="float64") /* ty=Tensor[(60), float64] */;
  %632 = reshape(%630, newshape=[]) /* ty=float64 */;
  %633 = reshape(%631, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float64] */;
  %634 = @func_3340(%632, %633) /* ty=(Tensor[(12, 5, 1), float64],) */;
  %635 = %628.0;
  %636 = %629.0;
  %637 = %634.0;
  (%635, %636, %637, %var_7316, %var_7317)
}

def @func_15293() -> Tensor[(2, 14, 3), float64] {
  @func_12806() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_17825() -> (Tensor[(480), float32],) {
  %638 = @func_14329() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(3, 2, 14), float32], Tensor[(480), float32]) */;
  %639 = %638.4;
  (%639,)
}

def @func_2275() -> (Tensor[(2, 14, 3), float64],) {
  %640 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  (%640,)
}

def @func_19279() -> Tensor[(99), float64] {
  %641 = @func_14329() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(3, 2, 14), float32], Tensor[(480), float32]) */;
  %641.2
}

def @func_7539() -> Tensor[(2, 14, 3), float64] {
  %642 = @func_3439() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %642.0
}

def @func_5036() -> (Tensor[(2, 14, 3), float64],) {
  %643 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %644 = %643.0;
  (%644,)
}

def @func_20464() -> Tensor[(2, 14, 3), float64] {
  %645 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %645.0
}

def @func_16018() -> (Tensor[(2, 14, 3), float64],) {
  %646 = @func_11646() /* ty=Tensor[(2, 14, 3), float64] */;
  (%646,)
}

def @func_18458(%var_18401: Tensor[(3, 4, 16), int16], %var_18402: Tensor[(3, 4, 16), int16]) -> (Tensor[(3, 4, 16), int16], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %647 = cast(%var_18402, dtype="int16") /* ty=Tensor[(3, 4, 16), int16] */;
  %648 = shape_of(%var_18401, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%var_18401, dtype="int16") /* ty=Tensor[(3, 4, 16), int16] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %651 = @func_17069() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %652 = bitwise_and(%649, %650) /* ty=Tensor[(3, 4, 16), int16] */;
  %653 = @func_6548() /* ty=Tensor[(2, 14, 3), float64] */;
  %654 = %651.0;
  (%652, %653, %654)
}

def @func_19487() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %655 = @func_18810() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %656 = @func_6548() /* ty=Tensor[(2, 14, 3), float64] */;
  %657 = %655.0;
  (%656, %657)
}

def @func_19420() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  %658 = @func_16018() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %659 = @func_14781() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %660 = %658.0;
  %661 = %659.0;
  %662 = @func_3319() /* ty=Tensor[(3, 2, 14), float32] */;
  (%660, %661, %662)
}

def @func_22093(%var_22083: Tensor[(4, 5, 1), int32], %var_22084: Tensor[(4, 5, 4), int32]) -> (Tensor[(4, 5, 4), int32],) {
  %663 = cast(%var_22083, dtype="int32") /* ty=Tensor[(4, 5, 1), int32] */;
  %664 = cast(%var_22084, dtype="int32") /* ty=Tensor[(4, 5, 4), int32] */;
  %665 = logical_xor(%663, %664) /* ty=Tensor[(4, 5, 4), int32] */;
  (%665,)
}

def @func_11055(%var_11003: Tensor[(84), float32], %var_11026: Tensor[(480), float32], %var_11027: Tensor[(64), float64], %var_11028: Tensor[(112), uint32]) -> (Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(216, 2), int32], Tensor[(480), float32], Tensor[(64), float64], Tensor[(112), uint32], Tensor[(9, 216, 2), float64]) {
  %666 = @func_10103() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(216, 2), float32], Tensor[(224), float32], Tensor[(36, 12), float32], Tensor[(3, 2, 14), float64]) */;
  %667 = %666.1;
  %668 = cast(%667, dtype="float32") /* ty=Tensor[(216, 2), float32] */;
  %669 = cast(%var_11003, dtype="float32") /* ty=Tensor[(84), float32] */;
  %670 = reshape(%668, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %671 = reshape(%669, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %672 = @func_4046(%670, %671) /* ty=(Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(432), float32], Tensor[(64), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(9, ?, 2), float64]) */;
  %673 = cast(meta[relay.Constant][26] /* ty=Tensor[(216, 2), float32] */, dtype="int32") /* ty=Tensor[(216, 2), int32] */;
  %674 = shape_of(%667, dtype="int32") /* ty=Tensor[(2), int32] */;
  %675 = cast(%667, dtype="int32") /* ty=Tensor[(216, 2), int32] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %677 = cast(%var_11026, dtype="float32") /* ty=Tensor[(480), float32] */;
  %678 = cast(%var_11027, dtype="float64") /* ty=Tensor[(64), float64] */;
  %679 = cast(%var_11027, dtype="float64") /* ty=Tensor[(64), float64] */;
  %680 = cast(%var_11028, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %681 = reshape(%677, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %682 = reshape(%678, newshape=[32, 2]) /* ty=Tensor[(32, 2), float64] */;
  %683 = reshape(%679, newshape=[32, 2]) /* ty=Tensor[(32, 2), float64] */;
  %684 = reshape(%680, newshape=[112, 1]) /* ty=Tensor[(112, 1), uint32] */;
  %685 = @func_6840(%681, %682, %683, %684) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(32, 2), bool], Tensor[(9, ?, 2), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(112, 1), uint32]) */;
  %686 = %685.4;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(9, ?, 2), float64] */;
  %688 = cast(meta[relay.Constant][26] /* ty=Tensor[(216, 2), float32] */, dtype="float64") /* ty=Tensor[(216, 2), float64] */;
  %689 = %672.5;
  %690 = minimum(%675, %676) /* ty=Tensor[(216, 2), int32] */;
  %691 = mod(%687, %688) /* ty=Tensor[(9, 216, 2), float64] */;
  (%689, %var_11003, %690, %var_11026, %var_11027, %var_11028, %691)
}

def @func_22268() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %692 = @func_15769() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), uint32]) */;
  %693 = @func_9018() /* ty=Tensor[(2, 14, 3), float64] */;
  %694 = %692.0;
  (%693, %694)
}

def @func_16869() -> (Tensor[(6, 12, 8), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %695 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(6, 12, 8), float32] */;
  %696 = @func_14329() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(3, 2, 14), float32], Tensor[(480), float32]) */;
  %697 = @func_14249() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %698 = sqrt(%695) /* ty=Tensor[(6, 12, 8), float32] */;
  %699 = @func_11646() /* ty=Tensor[(2, 14, 3), float64] */;
  %700 = %696.1;
  %701 = @func_14202() /* ty=Tensor[(2, 14, 3), float64] */;
  %702 = %697.0;
  (%698, %699, %700, %701, %702)
}

def @func_6108() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %703 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %704 = @func_2719() /* ty=Tensor[(2, 14, 3), float64] */;
  %705 = %703.0;
  (%704, %705)
}

def @func_22386() -> (Tensor[(3, 2, 14), float32],) {
  %706 = @func_4234() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %707 = %706.0;
  (%707,)
}

def @func_12647() -> Tensor[(2, 14, 3), float64] {
  %708 = @func_8233() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %708.0
}

def @func_20712() -> (Tensor[(3, 2, 14), float32],) {
  %709 = @func_19507() /* ty=Tensor[(3, 2, 14), float32] */;
  (%709,)
}

def @func_5854() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) {
  %710 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %711 = @func_2885() /* ty=(Tensor[(3, 2, 14), bool],) */;
  %712 = %710.0;
  %713 = %711.0;
  (%712, %713)
}

def @func_17397(%var_17336: Tensor[(6, 3, 11), float64]) -> (Tensor[(6, 3, 11), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 56), float32], Tensor[(432), float32]) {
  %714 = cast(%var_17336, dtype="float64") /* ty=Tensor[(6, 3, 11), float64] */;
  %715 = @func_11974() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %716 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 56), float32] */, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %717 = cast(meta[relay.Constant][29] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %718 = reshape(%716, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %719 = reshape(%717, newshape=[216, 2]) /* ty=Tensor[(216, 2), float32] */;
  %720 = @func_5250(%718, %719) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 14, 4), float64], Tensor[(224), float32], Tensor[(216, 2), float32]) */;
  %721 = cosh(%714) /* ty=Tensor[(6, 3, 11), float64] */;
  %722 = %715.1;
  %723 = %720.3;
  (%721, %722, %723, meta[relay.Constant][28] /* ty=Tensor[(4, 56), float32] */, meta[relay.Constant][29] /* ty=Tensor[(432), float32] */)
}

def @func_20454() -> Tensor[(2, 14, 3), float64] {
  %724 = @func_8018() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %724.0
}

def @func_4431() -> Tensor[(2, 14, 3), float64] {
  %725 = @func_2233() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %725.1
}

def @func_5604() -> (Tensor[(9, 1, 2), float32], Tensor[(3, 2, 14), float32]) {
  %726 = @func_3800() /* ty=Tensor[(9, 1, 2), float64] */;
  %727 = cast(%726, dtype="float32") /* ty=Tensor[(9, 1, 2), float32] */;
  %728 = tan(%727) /* ty=Tensor[(9, 1, 2), float32] */;
  %729 = @func_3319() /* ty=Tensor[(3, 2, 14), float32] */;
  (%728, %729)
}

def @func_18865() -> (Tensor[(2, 14, 3), float64],) {
  %730 = @func_9981() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %731 = %730.3;
  (%731,)
}

def @func_6548() -> Tensor[(2, 14, 3), float64] {
  @func_1511() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_22811() -> (Tensor[(2, 14, 3), float64],) {
  %732 = @func_20626() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %733 = %732.0;
  (%733,)
}

def @func_12216() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) {
  %734 = @func_8018() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %735 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %736 = %734.0;
  %737 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
  %738 = %735.0;
  (%736, %737, %738)
}

def @func_4234() -> (Tensor[(3, 2, 14), float32],) {
  %739 = @func_3319() /* ty=Tensor[(3, 2, 14), float32] */;
  (%739,)
}

def @func_13171(%var_13153: Tensor[(64), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(64), float64]) {
  %740 = @func_12771() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %741 = cast(%var_13153, dtype="float64") /* ty=Tensor[(64), float64] */;
  %742 = reshape(%741, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %743 = @func_8858(%742) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64]) */;
  %744 = %740.2;
  %745 = %743.0;
  (%744, %745, %var_13153)
}

def @func_13041() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %746 = @func_11583() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %747 = %746.0;
  %748 = @func_8190() /* ty=Tensor[(2, 14, 3), float64] */;
  (%747, %748)
}

def @func_17792() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) {
  %749 = @func_12244() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %750 = cast(meta[relay.Constant][30] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %751 = reshape(%750, newshape=[250]) /* ty=Tensor[(250), float64] */;
  %752 = @func_2419(%751) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64]) */;
  %753 = %749.0;
  %754 = %752.3;
  (%753, %754, meta[relay.Constant][30] /* ty=Tensor[(250), float64] */)
}

def @func_8108() -> (Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(975), float64]) {
  %755 = @func_6002() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %756 = cast(meta[relay.Constant][31] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %757 = cast(meta[relay.Constant][31] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %758 = reshape(%756, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float64] */;
  %759 = reshape(%757, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float64] */;
  %760 = @func_3888(%758, %759) /* ty=(Tensor[(15, 5, 13), bool],) */;
  %761 = %755.0;
  %762 = %760.0;
  (%761, %762, meta[relay.Constant][31] /* ty=Tensor[(975), float64] */)
}

def @func_6002() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %763 = @func_2556() /* ty=Tensor[(2, 14, 3), float64] */;
  %764 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
  (%763, %764)
}

def @func_10936() -> (Tensor[(2, 14, 3), float64],) {
  %765 = @func_10864() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %766 = %765.0;
  (%766,)
}

def @func_2084() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %767 = @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %768 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
  %769 = %767.0;
  (%768, %769)
}

def @func_17715() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %770 = @func_9153() /* ty=Tensor[(2, 14, 3), float64] */;
  %771 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  (%770, %771)
}

def @func_8470() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %772 = @func_4354() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %773 = @func_5036() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %774 = @func_7789() /* ty=Tensor[(2, 14, 3), float64] */;
  %775 = %772.0;
  %776 = @func_8121() /* ty=Tensor[(2, 14, 3), float64] */;
  %777 = %773.0;
  (%774, %775, %776, %777)
}

def @func_11915(%var_11901: Tensor[(25, 10), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(25, 10), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %778 = @func_7072() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %779 = cast(%var_11901, dtype="float64") /* ty=Tensor[(25, 10), float64] */;
  %780 = reshape(%779, newshape=[250]) /* ty=Tensor[(250), float64] */;
  %781 = @func_2419(%780) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64]) */;
  %782 = @func_6528() /* ty=(Tensor[(3, 2, 14), int16], Tensor[(4, 14, 4), float32], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %783 = @func_11774() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %784 = %778.2;
  %785 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  %786 = %781.3;
  %787 = %782.4;
  %788 = %783.0;
  (%784, %785, %786, %var_11901, %787, %788)
}

def @func_17911(%var_17883: Tensor[(14, 16, 10), uint32]) -> Tensor[(14, 16, 10), bool] {
  %789 = cast(%var_17883, dtype="uint32") /* ty=Tensor[(14, 16, 10), uint32] */;
  %790 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(14, 16, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 16, 10), uint32] */, dtype="uint32") /* ty=Tensor[(14, 16, 10), uint32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %793 = right_shift(%791, %792) /* ty=Tensor[(14, 16, 10), uint32] */;
  %794 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 16, 10), uint32] */, dtype="bool") /* ty=Tensor[(14, 16, 10), bool] */;
  %795 = shape_of(%793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %796 = cast(%793, dtype="bool") /* ty=Tensor[(14, 16, 10), bool] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%796, %797) /* ty=Tensor[(14, 16, 10), bool] */
}

def @func_13820() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) {
  %798 = @func_12049() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %799 = %798.0;
  %800 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
  (%799, %800)
}

def @func_20114(%var_20075: Tensor[(2, 216), float32]) -> (Tensor[(9, 8, 1), float32], Tensor[(224), float32], Tensor[(224), float32], Tensor[(2, 216), float32], Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(112), uint32]) {
  %801 = @func_10295() /* ty=(Tensor[(9, 8, 1), uint64],) */;
  %802 = %801.0;
  %803 = cast(%802, dtype="float32") /* ty=Tensor[(9, 8, 1), float32] */;
  %804 = cast(meta[relay.Constant][33] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %805 = cast(%var_20075, dtype="float32") /* ty=Tensor[(2, 216), float32] */;
  %806 = reshape(%804, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %807 = reshape(%805, newshape=[216, 2]) /* ty=Tensor[(216, 2), float32] */;
  %808 = @func_5250(%806, %807) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 14, 4), float64], Tensor[(224), float32], Tensor[(216, 2), float32]) */;
  %809 = cast(meta[relay.Constant][34] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %810 = cast(meta[relay.Constant][34] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %811 = reshape(%809, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %812 = reshape(%810, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %813 = @func_12615() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %814 = cast(meta[relay.Constant][35] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %815 = cast(meta[relay.Constant][35] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %816 = cast(meta[relay.Constant][35] /* ty=Tensor[(112), uint32] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %817 = cast(meta[relay.Constant][35] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %818 = reshape(%814, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), uint32] */;
  %819 = reshape(%815, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), uint32] */;
  %820 = reshape(%816, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), float64] */;
  %821 = reshape(%817, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), uint32] */;
  %822 = @func_4722(%818, %819, %820, %821) /* ty=(Tensor[(14, 4, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(14, 4, 2), float64], Tensor[(14, 4, 2), bool]) */;
  %823 = cos(%803) /* ty=Tensor[(9, 8, 1), float32] */;
  %824 = %808.3;
  %825 = @func_360(%811, %812) /* ty=Tensor[(10, 5, 5), float64] */;
  %826 = %813.2;
  %827 = %822.1;
  (%823, %824, meta[relay.Constant][33] /* ty=Tensor[(224), float32] */, %var_20075, %825, meta[relay.Constant][34] /* ty=Tensor[(250), float64] */, %826, %827, meta[relay.Constant][35] /* ty=Tensor[(112), uint32] */)
}

def @func_15769() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), uint32]) {
  %828 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %829 = %828.0;
  %830 = cast(%829, dtype="float64") /* ty=Tensor[(2, 14, 3), float64] */;
  %831 = reshape(%830, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), float64] */;
  %832 = @func_2855(%831) /* ty=(Tensor[(2, 14, 3), uint32],) */;
  %833 = %832.0;
  (%829, %833)
}

def @func_10736() -> (Tensor[(2, 14, 3), float64],) {
  %834 = @func_2162() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %835 = %834.0;
  (%835,)
}

def @func_12550() -> (Tensor[(2, 14, 3), float64],) {
  %836 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %837 = %836.0;
  (%837,)
}

def @func_2855(%var_2841: Tensor[(2, 14, 3), float64]) -> (Tensor[(2, 14, 3), uint32],) {
  %838 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
  %839 = cast(%var_2841, dtype="uint32") /* ty=Tensor[(2, 14, 3), uint32] */;
  %840 = shape_of(%838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(%838, dtype="uint32") /* ty=Tensor[(2, 14, 3), uint32] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %843 = subtract(%841, %842) /* ty=Tensor[(2, 14, 3), uint32] */;
  (%843,)
}

def @func_12399() -> Tensor[(2, 14, 3), float64] {
  @func_9194() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_9928() -> (Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %844 = @func_8593() /* ty=(Tensor[(3, 2, 14), bool],) */;
  %845 = @func_8396() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %846 = %844.0;
  %847 = %845.1;
  %848 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
  (%846, %847, %848)
}

def @func_7983() -> Tensor[(3, 2, 14), float32] {
  %849 = @func_5604() /* ty=(Tensor[(9, 1, 2), float32], Tensor[(3, 2, 14), float32]) */;
  %849.1
}

def @func_12771() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %850 = @func_11974() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %851 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
  %852 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %853 = @func_11253() /* ty=Tensor[(2, 14, 3), float64] */;
  %854 = %850.0;
  %855 = %851.1;
  %856 = %852.0;
  (%853, %854, %855, %856)
}

def @func_13105() -> (Tensor[(2, 14, 3), float64],) {
  %857 = @func_4431() /* ty=Tensor[(2, 14, 3), float64] */;
  (%857,)
}

def @func_9039() -> Tensor[(2, 14, 3), float64] {
  @func_6964() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_15718() -> Tensor[(2, 14, 3), float64] {
  %858 = @func_5551() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64]) */;
  %858.1
}

def @func_13573() -> Tensor[(2, 14, 3), float64] {
  %859 = @func_4567() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %859.0
}

def @func_9184() -> Tensor[(2, 14, 3), float64] {
  %860 = @func_8727() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %860.4
}

def @func_2262() -> (Tensor[(2, 14, 3), float64],) {
  %861 = @func_2162() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %862 = %861.0;
  (%862,)
}

def @func_12588() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %863 = @func_4279() /* ty=Tensor[(2, 14, 3), float64] */;
  %864 = @func_7955() /* ty=Tensor[(2, 14, 3), float64] */;
  (%863, %864)
}

def @func_13496() -> Tensor[(2, 14, 3), float64] {
  @func_7539() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_18516() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) {
  %865 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %866 = @func_7072() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %867 = %865.0;
  %868 = %866.1;
  (%867, %868)
}

def @func_3612() -> (Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) {
  %869 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %870 = cast(meta[relay.Constant][36] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %871 = reshape(%870, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %872 = @func_1447(%871) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %873 = @func_2885() /* ty=(Tensor[(3, 2, 14), bool],) */;
  %874 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %875 = %874.0;
  %876 = cast(%875, dtype="float32") /* ty=Tensor[(3, 2, 14), float32] */;
  %877 = %869.0;
  %878 = %872.0;
  %879 = %873.0;
  %880 = log2(%876) /* ty=Tensor[(3, 2, 14), float32] */;
  (%877, %878, meta[relay.Constant][36] /* ty=Tensor[(64), float64] */, %879, %880)
}

def @func_8802() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %881 = @func_8286() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %882 = @func_7768() /* ty=Tensor[(2, 14, 3), float64] */;
  %883 = %881.0;
  (%882, %883)
}

def @func_20663() -> Tensor[(3, 3, 8), float32] {
  %884 = @func_18331() /* ty=(Tensor[(3, 3, 8), float32],) */;
  %884.0
}

def @func_19908() -> (Tensor[(65, 15), float64], Tensor[(2, 14, 3), float64]) {
  %885 = @func_9670() /* ty=(Tensor[(65, 15), float64],) */;
  %886 = @func_5432() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %887 = %885.0;
  %888 = %886.1;
  (%887, %888)
}

def @func_15018() -> (Tensor[(2, 14, 3), float64],) {
  %889 = @func_13608() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %890 = %889.0;
  (%890,)
}

def @func_15247() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(36, 12), float32]) {
  %891 = @func_10103() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(216, 2), float32], Tensor[(224), float32], Tensor[(36, 12), float32], Tensor[(3, 2, 14), float64]) */;
  %892 = @func_6548() /* ty=Tensor[(2, 14, 3), float64] */;
  %893 = @func_2556() /* ty=Tensor[(2, 14, 3), float64] */;
  %894 = %891.3;
  (%892, %893, %894)
}

def @func_22456() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %895 = @func_14411() /* ty=(Tensor[(3, 2, 14), float64], Tensor[(3, 2, 14), float32]) */;
  %896 = @func_20346() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %897 = @func_15992() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %898 = @func_19249() /* ty=Tensor[(2, 14, 3), float64] */;
  %899 = %895.0;
  %900 = %896.0;
  %901 = %897.1;
  (%898, %899, %900, %901)
}

def @func_11388() -> Tensor[(9, 1, 2), float64] {
  @func_9236() /* ty=Tensor[(9, 1, 2), float64] */
}

def @func_22080() -> Tensor[(3, 2, 14), bool] {
  @func_13826() /* ty=Tensor[(3, 2, 14), bool] */
}

def @func_14329() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(3, 2, 14), float32], Tensor[(480), float32]) {
  %902 = @func_10864() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %903 = cast(meta[relay.Constant][37] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %904 = reshape(%903, newshape=[9, 11, 1]) /* ty=Tensor[(9, 11, 1), float64] */;
  %905 = @func_12090(%904) /* ty=(Tensor[(9, 11, ?), int64],) */;
  %906 = cast(meta[relay.Constant][38] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %907 = reshape(%906, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %908 = @func_9470(%907) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), bool], Tensor[(480), float32], Tensor[(3, 2, 14), float32]) */;
  %909 = %902.0;
  %910 = %905.0;
  %911 = %908.5;
  (%909, %910, meta[relay.Constant][37] /* ty=Tensor[(99), float64] */, %911, meta[relay.Constant][38] /* ty=Tensor[(480), float32] */)
}

def @func_14452() -> (Tensor[(2, 14, 3), float64],) {
  %912 = @func_8891() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %913 = %912.0;
  (%913,)
}

def @func_13722() -> (Tensor[(2, 14, 3), float64],) {
  %914 = @func_10519() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %915 = %914.1;
  (%915,)
}

def @func_1845() -> Tensor[(2, 14, 3), float64] {
  @func_1732() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_21454() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %916 = @func_6230() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %917 = %916.1;
  %918 = @func_13885() /* ty=Tensor[(2, 14, 3), float64] */;
  %919 = @func_9184() /* ty=Tensor[(2, 14, 3), float64] */;
  (%917, %918, %919)
}

def @func_13096() -> Tensor[(2, 14, 3), float64] {
  %920 = @func_6556() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %920.0
}

def @func_18368() -> (Tensor[(3, 2, 14), float32], Tensor[(6, 3, 11), float64], Tensor[(198), float64], Tensor[(2, 14, 3), float64]) {
  %921 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %922 = cast(meta[relay.Constant][39] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %923 = reshape(%922, newshape=[6, 3, 11]) /* ty=Tensor[(6, 3, 11), float64] */;
  %924 = @func_17397(%923) /* ty=(Tensor[(6, 3, 11), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 56), float32], Tensor[(432), float32]) */;
  %925 = %921.0;
  %926 = %924.0;
  %927 = @func_2719() /* ty=Tensor[(2, 14, 3), float64] */;
  (%925, %926, meta[relay.Constant][39] /* ty=Tensor[(198), float64] */, %927)
}

def @func_10404() -> (Tensor[(2, 14, 3), float64],) {
  %928 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
  (%928,)
}

def @func_14249() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %929 = @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %930 = %929.1;
  %931 = @func_6715() /* ty=Tensor[(2, 14, 3), float64] */;
  %932 = @func_12399() /* ty=Tensor[(2, 14, 3), float64] */;
  (%930, %931, %932)
}

def @func_5551() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64]) {
  %933 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %934 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %935 = %934.0;
  %936 = cast(%935, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  %937 = @func_3854() /* ty=Tensor[(3, 2, 14), float32] */;
  %938 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  %939 = %933.0;
  %940 = cosh(%936) /* ty=Tensor[(3, 2, 14), float64] */;
  (%937, %938, %939, %940)
}

def @func_6265() -> Tensor[(3, 2, 14), float64] {
  %941 = @func_2885() /* ty=(Tensor[(3, 2, 14), bool],) */;
  %942 = %941.0;
  %943 = cast(%942, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  acos(%943) /* ty=Tensor[(3, 2, 14), float64] */
}

def @func_19545() -> (Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(3, 2, 14), float32]) {
  %944 = @func_10936() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %945 = @func_19029() /* ty=(Tensor[(14, 8, 12), float64],) */;
  %946 = @func_16758() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %947 = %944.0;
  %948 = %945.0;
  %949 = %946.0;
  (%947, %948, %949)
}

def @func_21047() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %950 = @func_10519() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %951 = @func_16795() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %952 = @func_18085() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
  %953 = %950.0;
  %954 = %951.0;
  %955 = %952.1;
  (%953, %954, %955)
}

def @func_7623() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %956 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %957 = @func_2233() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %958 = %956.0;
  %959 = %957.2;
  (%958, %959)
}

def @func_14876() -> (Tensor[(2, 14, 3), float64],) {
  %960 = @func_7741() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %961 = %960.1;
  (%961,)
}

def @func_9236() -> Tensor[(9, 1, 2), float64] {
  @func_3800() /* ty=Tensor[(9, 1, 2), float64] */
}

def @func_15371() -> (Tensor[(2, 14, 3), float64],) {
  %962 = @func_13885() /* ty=Tensor[(2, 14, 3), float64] */;
  (%962,)
}

def @func_4046(%var_4005: Tensor[(432), float32], %var_4015: Tensor[(84), float32]) -> (Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(432), float32], Tensor[(64), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(9, ?, 2), float64]) {
  %963 = cast(meta[relay.Constant][40] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %964 = cast(meta[relay.Constant][40] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %965 = reshape(%963, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %966 = reshape(%964, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %967 = cast(meta[relay.Constant][41] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %968 = cast(%var_4005, dtype="float32") /* ty=Tensor[(432), float32] */;
  %969 = reshape(%967, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %970 = reshape(%968, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %971 = @func_2252(%969, %970) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) */;
  %972 = cast(%var_4015, dtype="float32") /* ty=Tensor[(84), float32] */;
  %973 = reshape(%972, newshape=[3, 2, 14]) /* ty=Tensor[(3, 2, 14), float32] */;
  %974 = @func_3075(%973) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
  %975 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
  %976 = cast(%975, dtype="float32") /* ty=Tensor[(9, 1, 2), float32] */;
  %977 = erf(%976) /* ty=Tensor[(9, 1, 2), float32] */;
  %978 = cast(%975, dtype="float64") /* ty=Tensor[(9, 1, 2), float64] */;
  %979 = shape_of(%977, dtype="int32") /* ty=Tensor[(3), int32] */;
  %980 = cast(%977, dtype="float64") /* ty=Tensor[(9, 1, 2), float64] */;
  %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %982 = @func_360(%965, %966) /* ty=Tensor[(10, 5, 5), float64] */;
  %983 = %971.4;
  %984 = %974.0;
  %985 = floor_divide(%980, %981) /* ty=Tensor[(9, ?, 2), float64] */;
  (%982, meta[relay.Constant][40] /* ty=Tensor[(250), float64] */, %983, meta[relay.Constant][41] /* ty=Tensor[(64), float64] */, %var_4005, %984, %var_4015, %985)
}

def @func_16654() -> (Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(3, 2, 14), float32]) {
  %986 = @func_14249() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %987 = @func_3612() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */;
  %988 = @func_12462() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) */;
  %989 = %986.2;
  %990 = %987.1;
  %991 = %988.0;
  (%989, %990, %991)
}

def @func_7789() -> Tensor[(2, 14, 3), float64] {
  %992 = @func_3394() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %992.0
}

def @func_9153() -> Tensor[(2, 14, 3), float64] {
  @func_9018() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_10326() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  %993 = @func_10177() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %994 = @func_8727() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %995 = %993.0;
  %996 = %994.2;
  (%995, %996)
}

def @func_19507() -> Tensor[(3, 2, 14), float32] {
  @func_7983() /* ty=Tensor[(3, 2, 14), float32] */
}

def @func_18690() -> Tensor[(2, 14, 3), float64] {
  @func_12500() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_11521(%var_11495: Tensor[(7, 5, 16), float64], %var_11496: Tensor[(7, 5, 16), float64]) -> (Tensor[(7, 5, 16), float64], Tensor[(3, 2, 14), float32]) {
  %997 = cast(%var_11496, dtype="float64") /* ty=Tensor[(7, 5, 16), float64] */;
  %998 = shape_of(%var_11495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%var_11495, dtype="float64") /* ty=Tensor[(7, 5, 16), float64] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1001 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1002 = floor_divide(%999, %1000) /* ty=Tensor[(7, 5, 16), float64] */;
  %1003 = %1001.0;
  (%1002, %1003)
}

def @func_2617() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1004 = @func_2162() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1005 = %1004.0;
  %1006 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %1007 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1005, %1006, %1007)
}

def @func_1313(%var_1254: uint32, %var_1264: Tensor[(432), float32], %var_1271: Tensor[(1, 224), float32]) -> (Tensor[(7, 15, 1), uint32], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(4, 14, 4), float32], Tensor[(1, 224), float32], Tensor[(9, 12, 4), float32], Tensor[(9, 12, 4), float32], Tensor[(7, 15, 1), float32]) {
  %1008 = cast(%var_1254, dtype="uint32") /* ty=uint32 */;
  %1009 = cast(meta[relay.Constant][42] /* ty=Tensor[(7, 15, 1), uint32] */, dtype="uint32") /* ty=Tensor[(7, 15, 1), uint32] */;
  %1010 = cast(%var_1264, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1011 = reshape(%1010, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
  %1012 = @func_793(%1011) /* ty=(Tensor[(9, 12, 4), float32],) */;
  %1013 = cast(%var_1271, dtype="float32") /* ty=Tensor[(1, 224), float32] */;
  %1014 = reshape(%1013, newshape=[4, 14, 4]) /* ty=Tensor[(4, 14, 4), float32] */;
  %1015 = %1012.0;
  %1016 = cast(%1015, dtype="float32") /* ty=Tensor[(9, 12, 4), float32] */;
  %1017 = reshape(%1016, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
  %1018 = @func_793(%1017) /* ty=(Tensor[(9, 12, 4), float32],) */;
  %1019 = cast(%var_1264, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1020 = reshape(%1019, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
  %1021 = @func_793(%1020) /* ty=(Tensor[(9, 12, 4), float32],) */;
  %1022 = cast(%var_1254, dtype="float32") /* ty=float32 */;
  %1023 = cast(meta[relay.Constant][42] /* ty=Tensor[(7, 15, 1), uint32] */, dtype="float32") /* ty=Tensor[(7, 15, 1), float32] */;
  %1024 = bitwise_xor(%1008, %1009) /* ty=Tensor[(7, 15, 1), uint32] */;
  %1025 = @func_186(%1014) /* ty=Tensor[(4, 14, 4), float32] */;
  %1026 = %1018.0;
  %1027 = %1021.0;
  %1028 = floor_divide(%1022, %1023) /* ty=Tensor[(7, 15, 1), float32] */;
  (%1024, %1015, %var_1264, %1025, %var_1271, %1026, %1027, %1028)
}

def @func_3888(%var_3883: Tensor[(15, 5, 13), float64], %var_3884: Tensor[(15, 5, 13), float64]) -> (Tensor[(15, 5, 13), bool],) {
  %1029 = cast(%var_3884, dtype="bool") /* ty=Tensor[(15, 5, 13), bool] */;
  %1030 = shape_of(%var_3883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1031 = cast(%var_3883, dtype="bool") /* ty=Tensor[(15, 5, 13), bool] */;
  %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1033 = equal(%1031, %1032) /* ty=Tensor[(15, 5, 13), bool] */;
  (%1033,)
}

def @func_20308() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1034 = @func_11296() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %1035 = %1034.2;
  %1036 = @func_2719() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1035, %1036)
}

def @func_21997(%var_21958: Tensor[(480), float32], %var_21971: Tensor[(224), float32]) -> (Tensor[(9, 1, 2), float64], Tensor[(3, 2, 14), bool], Tensor[(975), float64], Tensor[(480), float32], Tensor[(432), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) {
  %1037 = @func_12488() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) */;
  %1038 = @func_8593() /* ty=(Tensor[(3, 2, 14), bool],) */;
  %1039 = cast(%var_21958, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1040 = reshape(%1039, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1041 = @func_16240(%1040) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], float64, Tensor[(975), float64], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64]) */;
  %1042 = cast(meta[relay.Constant][43] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1043 = cast(%var_21971, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1044 = reshape(%1042, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1045 = reshape(%1043, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %1046 = @func_10463(%1044, %1045) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(7, 15, 1), uint32], uint32, Tensor[(432), float32], Tensor[(224), float32]) */;
  %1047 = @func_11708() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1048 = @func_17792() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
  %1049 = %1037.1;
  %1050 = %1038.0;
  %1051 = %1041.3;
  %1052 = %1046.3;
  %1053 = %1047.0;
  %1054 = %1048.1;
  (%1049, %1050, %1051, %var_21958, %1052, meta[relay.Constant][43] /* ty=Tensor[(432), float32] */, %var_21971, %1053, %1054)
}

def @func_18810() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1055 = @func_15585() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1056 = @func_15441() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1057 = %1055.0;
  %1058 = %1056.0;
  (%1057, %1058)
}

def @func_8233() -> (Tensor[(2, 14, 3), float64],) {
  %1059 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1059,)
}

def @func_19779() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64]) {
  %1060 = @func_10177() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1061 = @func_6108() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1062 = cast(meta[relay.Constant][44] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %1063 = reshape(%1062, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %1064 = @func_1447(%1063) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %1065 = %1060.0;
  %1066 = %1061.0;
  %1067 = %1064.0;
  (%1065, %1066, %1067, meta[relay.Constant][44] /* ty=Tensor[(64), float64] */)
}

def @func_20990() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1068 = @func_3394() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1069 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %1070 = %1068.0;
  %1071 = %1069.0;
  (%1070, %1071)
}

def @func_18488() -> (Tensor[(15, 7, 11), float64], Tensor[(2, 14, 3), float64]) {
  %1072 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 7, 11), float64] */, dtype="float64") /* ty=Tensor[(15, 7, 11), float64] */;
  %1073 = @func_7660() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1074 = atan(%1072) /* ty=Tensor[(15, 7, 11), float64] */;
  %1075 = %1073.0;
  (%1074, %1075)
}

def @func_12049() -> (Tensor[(2, 14, 3), float64],) {
  %1076 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %1077 = %1076.0;
  (%1077,)
}

def @func_12127() -> (Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64]) {
  %1078 = @func_10659() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
  %1079 = %1078.0;
  %1080 = cast(%1079, dtype="float32") /* ty=Tensor[(3, 2, 14), float32] */;
  %1081 = exp(%1080) /* ty=Tensor[(3, 2, 14), float32] */;
  %1082 = cast(%1081, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  %1083 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1084 = asinh(%1082) /* ty=Tensor[(3, 2, 14), float64] */;
  %1085 = %1083.0;
  (%1084, %1085)
}

def @func_12573() -> (Tensor[(2, 14, 3), float64],) {
  %1086 = @func_3331() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1086,)
}

def @func_20916() -> (Tensor[(4, 4, 4), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) {
  %1087 = @func_3612() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */;
  %1088 = @func_16654() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(3, 2, 14), float32]) */;
  %1089 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1090 = @func_11974() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1091 = %1087.1;
  %1092 = %1088.2;
  %1093 = @func_7539() /* ty=Tensor[(2, 14, 3), float64] */;
  %1094 = %1089.0;
  %1095 = %1090.0;
  (%1091, %1092, %1093, %1094, %1095)
}

def @func_4567() -> (Tensor[(2, 14, 3), float64],) {
  %1096 = @func_2456() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1096,)
}

def @func_2719() -> Tensor[(2, 14, 3), float64] {
  @func_2556() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_12806() -> Tensor[(2, 14, 3), float64] {
  %1097 = @func_5551() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64]) */;
  %1097.2
}

def @func_17858() -> (Tensor[(2, 14, 3), float64], Tensor[(16, 5, 16), float64]) {
  %1098 = @func_12771() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1099 = @func_11549() /* ty=(Tensor[(16, 5, 16), float64],) */;
  %1100 = %1098.3;
  %1101 = %1099.0;
  (%1100, %1101)
}

def @func_7741() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1102 = @func_7660() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1103 = @func_5046() /* ty=Tensor[(2, 14, 3), float64] */;
  %1104 = %1102.0;
  (%1103, %1104)
}

def @func_11699() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) {
  %1105 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1106 = %1105.0;
  %1107 = @func_9184() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1106, %1107)
}

def @func_22604(%var_22589: Tensor[(11, 4, 2), float32]) -> (Tensor[(11, 4, 2), float32],) {
  %1108 = cast(%var_22589, dtype="float32") /* ty=Tensor[(11, 4, 2), float32] */;
  %1109 = cosh(%1108) /* ty=Tensor[(11, 4, 2), float32] */;
  (%1109,)
}

def @func_5046() -> Tensor[(2, 14, 3), float64] {
  %1110 = @func_4354() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1110.0
}

def @func_4081(%var_4057: Tensor[(3, 9, 1), float64], %var_4063: Tensor[(84), int32], %var_4065: Tensor[(224, 1), float32]) -> (Tensor[(3, 9, 1), float64], Tensor[(7, 3, 4), int16], Tensor[(84), int32], Tensor[(1, 432), float32], Tensor[(224, 1), float32]) {
  %1111 = cast(%var_4057, dtype="float64") /* ty=Tensor[(3, 9, 1), float64] */;
  %1112 = cast(%var_4063, dtype="int32") /* ty=Tensor[(84), int32] */;
  %1113 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 432), float32] */, dtype="float32") /* ty=Tensor[(1, 432), float32] */;
  %1114 = cast(%var_4065, dtype="float32") /* ty=Tensor[(224, 1), float32] */;
  %1115 = reshape(%1112, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), int32] */;
  %1116 = reshape(%1113, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1117 = reshape(%1114, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %1118 = @func_1587(%1115, %1116, %1117) /* ty=(Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(7, 3, 4), int16], Tensor[(9, 12, 4), float32]) */;
  %1119 = cos(%1111) /* ty=Tensor[(3, 9, 1), float64] */;
  %1120 = %1118.3;
  (%1119, %1120, %var_4063, meta[relay.Constant][46] /* ty=Tensor[(1, 432), float32] */, %var_4065)
}

def @func_14555() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1121 = @func_12216() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) */;
  %1122 = @func_6556() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1123 = %1121.2;
  %1124 = %1122.1;
  (%1123, %1124)
}

def @func_14438() -> Tensor[(3, 2, 14), float32] {
  %1125 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1125.0
}

def @func_8093() -> Tensor[(2, 14, 3), float64] {
  @func_4279() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_3075(%var_3042: Tensor[(3, 2, 14), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) {
  %1126 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1127 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1128 = %1127.0;
  %1129 = cast(%var_3042, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
  %1130 = shape_of(%1128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1131 = cast(%1128, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1133 = @func_2233() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1134 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
  %1135 = %1126.0;
  %1136 = logical_or(%1131, %1132) /* ty=Tensor[(3, 2, 14), bool] */;
  %1137 = %1133.2;
  (%1134, %1135, %1136, %1137)
}

def @func_7256(%var_7243: Tensor[(14, 8, 12), float64]) -> Tensor[(14, 8, 12), float64] {
  %1138 = cast(%var_7243, dtype="float64") /* ty=Tensor[(14, 8, 12), float64] */;
  sin(%1138) /* ty=Tensor[(14, 8, 12), float64] */
}

def @func_22497() -> (Tensor[(2, 14, 3), float64],) {
  %1139 = @func_6108() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1140 = %1139.1;
  (%1140,)
}

def @func_13204() -> Tensor[(2, 14, 3), float64] {
  %1141 = @func_11699() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */;
  %1141.1
}

def @func_6175() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1142 = @func_2233() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1143 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
  %1144 = %1142.1;
  %1145 = %1143.1;
  (%1144, %1145)
}

def @func_13548() -> (Tensor[(2, 14, 3), float64],) {
  %1146 = @func_9833() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1147 = %1146.1;
  (%1147,)
}

def @func_9208() -> (Tensor[(2, 14, 3), float64],) {
  %1148 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1149 = %1148.0;
  (%1149,)
}

def @func_2556() -> Tensor[(2, 14, 3), float64] {
  %1150 = @func_2084() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1150.0
}

def @func_17690() -> (Tensor[(2, 14, 3), float64],) {
  %1151 = @func_16492() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1152 = %1151.1;
  (%1152,)
}

def @func_21052() -> Tensor[(9, 1, 2), float64] {
  %1153 = @func_12216() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) */;
  %1153.1
}

def @func_22991(%var_22974: Tensor[(432), float32]) -> (Tensor[(480), float32], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(2, 14, 3), float64]) {
  %1154 = @func_14329() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(3, 2, 14), float32], Tensor[(480), float32]) */;
  %1155 = cast(%var_22974, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1156 = reshape(%1155, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
  %1157 = @func_793(%1156) /* ty=(Tensor[(9, 12, 4), float32],) */;
  %1158 = @func_9833() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1159 = %1154.4;
  %1160 = %1157.0;
  %1161 = %1158.0;
  (%1159, %1160, %var_22974, %1161)
}

def @func_16240(%var_16177: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], float64, Tensor[(975), float64], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64]) {
  %1162 = cast(meta[relay.Constant][47] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %1163 = cast(%var_16177, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1164 = reshape(%1162, newshape=[5, 195]) /* ty=Tensor[(5, 195), float64] */;
  %1165 = reshape(%1163, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1166 = @func_7199(%1164, %1165) /* ty=(Tensor[(3, 2, 14), float32], Tensor[(15, 5, 13), bool], Tensor[(5, 195), float64], Tensor[(3, 2, 14), float32], Tensor[(12, 5, 1), float64], float64, Tensor[(2, 14, 3), float64], Tensor[(60, 1), float32], Tensor[(480), float32], Tensor[(480), float32]) */;
  %1167 = @func_15018() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1168 = @func_5432() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1169 = @func_9530() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %1170 = @func_15293() /* ty=Tensor[(2, 14, 3), float64] */;
  %1171 = cast(%1170, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %1172 = reshape(%1171, newshape=[3, 2, 14]) /* ty=Tensor[(3, 2, 14), bool] */;
  %1173 = @func_9612(%1172) /* ty=(Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64]) */;
  %1174 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %1175 = %1166.5;
  %1176 = %1167.0;
  %1177 = %1168.0;
  %1178 = %1169.1;
  %1179 = %1173.1;
  (%1170, %1174, %1175, meta[relay.Constant][47] /* ty=Tensor[(975), float64] */, %var_16177, %1176, %1177, %1178, %1179)
}

def @func_13845() -> Tensor[(2, 14, 3), float64] {
  %1180 = @func_2617() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1180.1
}

def @func_9612(%var_9571: Tensor[(3, 2, 14), bool]) -> (Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64]) {
  %1181 = @func_8593() /* ty=(Tensor[(3, 2, 14), bool],) */;
  %1182 = %1181.0;
  %1183 = cast(%var_9571, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
  %1184 = shape_of(%1182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1185 = cast(%1182, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
  %1186 = dyn.reshape(%1183, %1184, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1187 = not_equal(%1185, %1186) /* ty=Tensor[(3, 2, 14), bool] */;
  %1188 = @func_2556() /* ty=Tensor[(2, 14, 3), float64] */;
  %1189 = cast(%1188, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %1190 = shape_of(%1187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1191 = cast(%1187, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
  %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1193 = cast(%1187, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  %1194 = @func_5432() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1195 = less_equal(%1191, %1192) /* ty=Tensor[(3, 2, 14), bool] */;
  %1196 = atanh(%1193) /* ty=Tensor[(3, 2, 14), float64] */;
  %1197 = %1194.1;
  (%1195, %1196, %1197)
}

def @func_360(%var_336: Tensor[(10, 5, 5), float64], %var_337: Tensor[(10, 5, 5), float64]) -> Tensor[(10, 5, 5), float64] {
  %1198 = cast(%var_337, dtype="float64") /* ty=Tensor[(10, 5, 5), float64] */;
  %1199 = shape_of(%var_336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1200 = cast(%var_336, dtype="float64") /* ty=Tensor[(10, 5, 5), float64] */;
  %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  minimum(%1200, %1201) /* ty=Tensor[(10, 5, 5), float64] */
}

def @func_4556(%var_4520: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(64), float64], Tensor[(432), float32]) {
  %1202 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1203 = @func_3612() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */;
  %1204 = cast(%var_4520, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1205 = %1203.1;
  %1206 = cast(%1205, dtype="float64") /* ty=Tensor[(4, 4, 4), float64] */;
  %1207 = reshape(%1204, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1208 = reshape(%1206, newshape=[4, 16]) /* ty=Tensor[(4, 16), float64] */;
  %1209 = @func_3179(%1207, %1208) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float32], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(4, 16), float64]) */;
  %1210 = cast(%1205, dtype="float64") /* ty=Tensor[(4, 4, 4), float64] */;
  %1211 = cast(meta[relay.Constant][48] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1212 = reshape(%1210, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %1213 = reshape(%1211, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1214 = @func_2252(%1212, %1213) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) */;
  %1215 = @func_2719() /* ty=Tensor[(2, 14, 3), float64] */;
  %1216 = %1202.0;
  %1217 = %1209.2;
  %1218 = %1214.2;
  (%1215, %1216, %1205, %1217, %var_4520, %1218, meta[relay.Constant][48] /* ty=Tensor[(432), float32] */)
}

def @func_15575() -> (Tensor[(65, 15), float64],) {
  %1219 = @func_9670() /* ty=(Tensor[(65, 15), float64],) */;
  %1220 = %1219.0;
  (%1220,)
}

def @func_10637() -> (Tensor[(2, 14, 3), float64],) {
  %1221 = @func_8286() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1222 = %1221.0;
  (%1222,)
}

def @func_15183() -> (Tensor[(224), float32], Tensor[(2, 14, 3), float64]) {
  %1223 = @func_12708() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32]) */;
  %1224 = %1223.2;
  %1225 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1224, %1225)
}

def @func_19249() -> Tensor[(2, 14, 3), float64] {
  @func_11253() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_17452(%var_17411: Tensor[(250), float64], %var_17436: Tensor[(975), float64], %var_17437: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(5, 195), float64], Tensor[(975), float64], Tensor[(480), float32], Tensor[(2, 14, 3), float64]) {
  %1226 = @func_12216() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) */;
  %1227 = cast(%var_17411, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1228 = reshape(%1227, newshape=[25, 10]) /* ty=Tensor[(25, 10), float64] */;
  %1229 = @func_11915(%1228) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(25, 10), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1230 = cast(%var_17436, dtype="float64") /* ty=Tensor[(975), float64] */;
  %1231 = cast(%var_17437, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1232 = reshape(%1230, newshape=[5, 195]) /* ty=Tensor[(5, 195), float64] */;
  %1233 = reshape(%1231, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1234 = @func_7199(%1232, %1233) /* ty=(Tensor[(3, 2, 14), float32], Tensor[(15, 5, 13), bool], Tensor[(5, 195), float64], Tensor[(3, 2, 14), float32], Tensor[(12, 5, 1), float64], float64, Tensor[(2, 14, 3), float64], Tensor[(60, 1), float32], Tensor[(480), float32], Tensor[(480), float32]) */;
  %1235 = %1226.2;
  %1236 = %1229.5;
  %1237 = %1234.2;
  %1238 = @func_9194() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1235, %1236, %var_17411, %1237, %var_17436, %var_17437, %1238)
}

def @func_4354() -> (Tensor[(2, 14, 3), float64],) {
  %1239 = @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1240 = %1239.0;
  (%1240,)
}

def @func_10103() -> (Tensor[(2, 14, 3), float64], Tensor[(216, 2), float32], Tensor[(224), float32], Tensor[(36, 12), float32], Tensor[(3, 2, 14), float64]) {
  %1241 = @func_8353() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(65, 15), float64]) */;
  %1242 = cast(meta[relay.Constant][49] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1243 = cast(meta[relay.Constant][50] /* ty=Tensor[(36, 12), float32] */, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
  %1244 = reshape(%1242, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %1245 = reshape(%1243, newshape=[216, 2]) /* ty=Tensor[(216, 2), float32] */;
  %1246 = @func_5250(%1244, %1245) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 14, 4), float64], Tensor[(224), float32], Tensor[(216, 2), float32]) */;
  %1247 = %1241.0;
  %1248 = %1246.4;
  %1249 = @func_6265() /* ty=Tensor[(3, 2, 14), float64] */;
  (%1247, %1248, meta[relay.Constant][49] /* ty=Tensor[(224), float32] */, meta[relay.Constant][50] /* ty=Tensor[(36, 12), float32] */, %1249)
}

def @func_15486() -> Tensor[(2, 14, 3), float64] {
  %1250 = @func_12956() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1250.0
}

def @func_20232() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32]) {
  %1251 = @func_12550() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1252 = %1251.0;
  %1253 = cast(%1252, dtype="int32") /* ty=Tensor[(2, 14, 3), int32] */;
  %1254 = cast(meta[relay.Constant][51] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1255 = cast(meta[relay.Constant][52] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1256 = reshape(%1253, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), int32] */;
  %1257 = reshape(%1254, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1258 = reshape(%1255, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %1259 = @func_1587(%1256, %1257, %1258) /* ty=(Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(7, 3, 4), int16], Tensor[(9, 12, 4), float32]) */;
  %1260 = %1259.4;
  (%1252, %1260, meta[relay.Constant][51] /* ty=Tensor[(432), float32] */, meta[relay.Constant][52] /* ty=Tensor[(224), float32] */)
}

def @func_9018() -> Tensor[(2, 14, 3), float64] {
  %1261 = @func_5551() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64]) */;
  %1261.1
}

def @func_2233() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1262 = @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1263 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1264 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %1265 = %1262.0;
  %1266 = %1263.0;
  (%1264, %1265, %1266)
}

def @func_6840(%var_6786: Tensor[(480), float32], %var_6787: Tensor[(32, 2), float64], %var_6797: Tensor[(32, 2), float64], %var_6836: Tensor[(112, 1), uint32]) -> (Tensor[(2, 14, 3), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(32, 2), bool], Tensor[(9, ?, 2), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(112, 1), uint32]) {
  %1267 = cast(%var_6786, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1268 = cast(%var_6787, dtype="float64") /* ty=Tensor[(32, 2), float64] */;
  %1269 = reshape(%1267, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1270 = reshape(%1268, newshape=[4, 16]) /* ty=Tensor[(4, 16), float64] */;
  %1271 = @func_3179(%1269, %1270) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float32], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(4, 16), float64]) */;
  %1272 = cast(%var_6797, dtype="uint16") /* ty=Tensor[(32, 2), uint16] */;
  %1273 = shape_of(%var_6787, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1274 = cast(%var_6787, dtype="uint16") /* ty=Tensor[(32, 2), uint16] */;
  %1275 = dyn.reshape(%1272, %1273, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1276 = right_shift(%1274, %1275) /* ty=Tensor[(32, 2), uint16] */;
  %1277 = cast(%var_6787, dtype="bool") /* ty=Tensor[(32, 2), bool] */;
  %1278 = shape_of(%1276, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1279 = cast(%1276, dtype="bool") /* ty=Tensor[(32, 2), bool] */;
  %1280 = dyn.reshape(%1277, %1278, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1281 = cast(meta[relay.Constant][53] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1282 = @func_3331() /* ty=Tensor[(2, 14, 3), float64] */;
  %1283 = cast(%1282, dtype="float32") /* ty=Tensor[(2, 14, 3), float32] */;
  %1284 = reshape(%1281, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1285 = reshape(%1283, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %1286 = @func_4046(%1284, %1285) /* ty=(Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(432), float32], Tensor[(64), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(9, ?, 2), float64]) */;
  %1287 = cast(%var_6836, dtype="uint32") /* ty=Tensor[(112, 1), uint32] */;
  %1288 = cast(%var_6836, dtype="uint32") /* ty=Tensor[(112, 1), uint32] */;
  %1289 = cast(%var_6836, dtype="float64") /* ty=Tensor[(112, 1), float64] */;
  %1290 = cast(%var_6836, dtype="uint32") /* ty=Tensor[(112, 1), uint32] */;
  %1291 = reshape(%1287, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), uint32] */;
  %1292 = reshape(%1288, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), uint32] */;
  %1293 = reshape(%1289, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), float64] */;
  %1294 = reshape(%1290, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), uint32] */;
  %1295 = @func_4722(%1291, %1292, %1293, %1294) /* ty=(Tensor[(14, 4, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(14, 4, 2), float64], Tensor[(14, 4, 2), bool]) */;
  %1296 = %1271.3;
  %1297 = less_equal(%1279, %1280) /* ty=Tensor[(32, 2), bool] */;
  %1298 = %1286.7;
  %1299 = %1295.1;
  (%1282, %1296, %var_6786, %1297, %1298, meta[relay.Constant][53] /* ty=Tensor[(432), float32] */, %1299, %var_6836)
}

def @func_12956() -> (Tensor[(2, 14, 3), float64],) {
  %1300 = @func_8312() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1301 = %1300.0;
  (%1301,)
}

def @func_5960() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1302 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1303 = @func_4279() /* ty=Tensor[(2, 14, 3), float64] */;
  %1304 = %1302.0;
  (%1303, %1304)
}

def @func_1732() -> Tensor[(2, 14, 3), float64] {
  @func_1511() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_9530() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) {
  %1305 = @func_4913() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
  %1306 = @func_8593() /* ty=(Tensor[(3, 2, 14), bool],) */;
  %1307 = %1305.0;
  %1308 = %1306.0;
  (%1307, %1308)
}

def @func_6652() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1309 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1310 = @func_6160() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1311 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1312 = %1309.0;
  %1313 = %1310.0;
  %1314 = %1311.0;
  (%1312, %1313, %1314)
}

def @func_10907() -> (Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1315 = @func_5854() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %1316 = @func_8312() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1317 = @func_8727() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1318 = %1315.1;
  %1319 = %1316.0;
  %1320 = %1317.3;
  (%1318, %1319, %1320)
}

def @func_3319() -> Tensor[(3, 2, 14), float32] {
  %1321 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1321.0
}

def @func_12462() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) {
  %1322 = @func_10821() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */;
  %1323 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1324 = cast(meta[relay.Constant][54] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1325 = reshape(%1324, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
  %1326 = @func_793(%1325) /* ty=(Tensor[(9, 12, 4), float32],) */;
  %1327 = %1322.0;
  %1328 = %1323.0;
  %1329 = %1326.0;
  (%1327, %1328, %1329, meta[relay.Constant][54] /* ty=Tensor[(432), float32] */)
}

def @func_15477() -> Tensor[(2, 14, 3), float64] {
  %1330 = @func_10936() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1330.0
}

def @func_8312() -> (Tensor[(2, 14, 3), float64],) {
  %1331 = @func_4913() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
  %1332 = %1331.6;
  (%1332,)
}

def @func_8891() -> (Tensor[(2, 14, 3), float64],) {
  %1333 = @func_7955() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1333,)
}

def @func_12668() -> Tensor[(2, 14, 3), float64] {
  %1334 = @func_7623() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1334.0
}

def @func_15828() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  %1335 = @func_6230() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1336 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %1337 = %1335.1;
  %1338 = %1336.1;
  (%1337, %1338)
}

def @func_14411() -> (Tensor[(3, 2, 14), float64], Tensor[(3, 2, 14), float32]) {
  %1339 = @func_11833() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %1340 = %1339.1;
  %1341 = cast(%1340, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  %1342 = erf(%1341) /* ty=Tensor[(3, 2, 14), float64] */;
  %1343 = @func_3854() /* ty=Tensor[(3, 2, 14), float32] */;
  (%1342, %1343)
}

def @func_6528() -> (Tensor[(3, 2, 14), int16], Tensor[(4, 14, 4), float32], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1344 = @func_3854() /* ty=Tensor[(3, 2, 14), float32] */;
  %1345 = cast(meta[relay.Constant][55] /* ty=Tensor[(3, 2, 14), float32] */, dtype="int16") /* ty=Tensor[(3, 2, 14), int16] */;
  %1346 = shape_of(%1344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1347 = cast(%1344, dtype="int16") /* ty=Tensor[(3, 2, 14), int16] */;
  %1348 = dyn.reshape(%1345, %1346, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1349 = cast(meta[relay.Constant][56] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1350 = reshape(%1349, newshape=[4, 14, 4]) /* ty=Tensor[(4, 14, 4), float32] */;
  %1351 = @func_4354() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1352 = @func_6175() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1353 = maximum(%1347, %1348) /* ty=Tensor[(3, 2, 14), int16] */;
  %1354 = @func_186(%1350) /* ty=Tensor[(4, 14, 4), float32] */;
  %1355 = %1351.0;
  %1356 = %1352.0;
  (%1353, %1354, meta[relay.Constant][56] /* ty=Tensor[(224), float32] */, %1355, %1356)
}

def @func_1447(%var_1432: Tensor[(4, 4, 4), float64]) -> (Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) {
  %1357 = cast(%var_1432, dtype="float64") /* ty=Tensor[(4, 4, 4), float64] */;
  %1358 = cast(meta[relay.Constant][57] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1359 = cast(meta[relay.Constant][57] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1360 = reshape(%1358, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %1361 = reshape(%1359, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %1362 = exp(%1357) /* ty=Tensor[(4, 4, 4), float64] */;
  %1363 = @func_360(%1360, %1361) /* ty=Tensor[(10, 5, 5), float64] */;
  (%1362, %1363, meta[relay.Constant][57] /* ty=Tensor[(250), float64] */)
}

def @func_18331() -> (Tensor[(3, 3, 8), float32],) {
  %1364 = cast(meta[relay.Constant][58] /* ty=Tensor[(3, 3, 8), float32] */, dtype="float32") /* ty=Tensor[(3, 3, 8), float32] */;
  %1365 = rsqrt(%1364) /* ty=Tensor[(3, 3, 8), float32] */;
  %1366 = cast(%1365, dtype="float32") /* ty=Tensor[(3, 3, 8), float32] */;
  %1367 = sqrt(%1366) /* ty=Tensor[(3, 3, 8), float32] */;
  (%1367,)
}

def @func_18539() -> (Tensor[(2, 14, 3), float64],) {
  %1368 = @func_9208() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1369 = %1368.0;
  (%1369,)
}

def @func_18712() -> Tensor[(2, 14, 3), float64] {
  %1370 = @func_12049() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1370.0
}

def @func_10250() -> Tensor[(2, 14, 3), float64] {
  %1371 = @func_3394() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1371.0
}

def @func_3394() -> (Tensor[(2, 14, 3), float64],) {
  %1372 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1372,)
}

def @func_10555() -> (Tensor[(2, 14, 3), float64],) {
  %1373 = @func_7955() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1373,)
}

def @func_19198() -> (Tensor[(2, 14, 3), float64],) {
  %1374 = @func_6160() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1375 = %1374.1;
  (%1375,)
}

def @func_20266() -> (Tensor[(2, 14, 3), float64],) {
  %1376 = @func_12244() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1377 = %1376.0;
  (%1377,)
}

def @func_21106() -> (Tensor[(2, 14, 3), float64], Tensor[(198), float64], Tensor[(198, 1), float64]) {
  %1378 = @func_18516() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) */;
  %1379 = cast(meta[relay.Constant][59] /* ty=Tensor[(198, 1), float64] */, dtype="float64") /* ty=Tensor[(198, 1), float64] */;
  %1380 = reshape(%1379, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %1381 = @func_19882(%1380) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(224), float32], Tensor[(198), float64], Tensor[(14, 8, 12), float64]) */;
  %1382 = %1378.0;
  %1383 = %1381.4;
  (%1382, %1383, meta[relay.Constant][59] /* ty=Tensor[(198, 1), float64] */)
}

def @func_15320(%var_15306: Tensor[(70, 15), float64]) -> (Tensor[(15, 5, 14), float64], Tensor[(70, 15), float64], Tensor[(3, 2, 14), float64]) {
  %1384 = cast(%var_15306, dtype="float64") /* ty=Tensor[(70, 15), float64] */;
  %1385 = reshape(%1384, newshape=[15, 5, 14]) /* ty=Tensor[(15, 5, 14), float64] */;
  %1386 = @func_5908() /* ty=Tensor[(3, 2, 14), float32] */;
  %1387 = cast(%1386, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  %1388 = @func_5444(%1385) /* ty=Tensor[(15, 5, 14), float64] */;
  %1389 = log(%1387) /* ty=Tensor[(3, 2, 14), float64] */;
  (%1388, %var_15306, %1389)
}

def @func_1587(%var_1532: Tensor[(7, 3, 4), int32], %var_1559: Tensor[(432), float32], %var_1560: Tensor[(224), float32]) -> (Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(7, 3, 4), int16], Tensor[(9, 12, 4), float32]) {
  %1390 = cast(meta[relay.Constant][60] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1391 = cast(%var_1559, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1392 = cast(%var_1560, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1393 = reshape(%1390, newshape=[]) /* ty=uint32 */;
  %1394 = reshape(%1391, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1395 = reshape(%1392, newshape=[1, 224]) /* ty=Tensor[(1, 224), float32] */;
  %1396 = @func_1313(%1393, %1394, %1395) /* ty=(Tensor[(7, 15, 1), uint32], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(4, 14, 4), float32], Tensor[(1, 224), float32], Tensor[(9, 12, 4), float32], Tensor[(9, 12, 4), float32], Tensor[(7, 15, 1), float32]) */;
  %1397 = cast(meta[relay.Constant][61] /* ty=Tensor[(7, 3, 4), int32] */, dtype="bool") /* ty=Tensor[(7, 3, 4), bool] */;
  %1398 = shape_of(%var_1532, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1399 = cast(%var_1532, dtype="bool") /* ty=Tensor[(7, 3, 4), bool] */;
  %1400 = dyn.reshape(%1397, %1398, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1401 = less(%1399, %1400) /* ty=Tensor[(7, 3, 4), bool] */;
  %1402 = cast(%1401, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
  %1403 = log2(%1402) /* ty=Tensor[(7, 3, 4), float32] */;
  %1404 = cast(%1403, dtype="int16") /* ty=Tensor[(7, 3, 4), int16] */;
  %1405 = cast(meta[relay.Constant][60] /* ty=uint32 */, dtype="int16") /* ty=int16 */;
  %1406 = cast(%var_1559, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1407 = reshape(%1406, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
  %1408 = @func_793(%1407) /* ty=(Tensor[(9, 12, 4), float32],) */;
  %1409 = %1396.1;
  %1410 = bitwise_xor(%1404, %1405) /* ty=Tensor[(7, 3, 4), int16] */;
  %1411 = %1408.0;
  (%1409, %var_1559, %var_1560, %1410, %1411)
}

def @func_20594(%var_20549: Tensor[(12), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 6, 1), float64], Tensor[(12), float64], Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float32], Tensor[(3, 2, 14), float32]) {
  %1412 = @func_13105() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1413 = cast(%var_20549, dtype="float64") /* ty=Tensor[(12), float64] */;
  %1414 = reshape(%1413, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), float64] */;
  %1415 = @func_12386(%1414) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 6, ?), int16], Tensor[(2, 6, 1), float64]) */;
  %1416 = @func_5604() /* ty=(Tensor[(9, 1, 2), float32], Tensor[(3, 2, 14), float32]) */;
  %1417 = %1416.0;
  %1418 = cast(%1417, dtype="float32") /* ty=Tensor[(9, 1, 2), float32] */;
  %1419 = @func_19364() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64]) */;
  %1420 = %1412.0;
  %1421 = %1415.2;
  %1422 = @func_15477() /* ty=Tensor[(2, 14, 3), float64] */;
  %1423 = acos(%1418) /* ty=Tensor[(9, 1, 2), float32] */;
  %1424 = %1419.0;
  (%1420, %1421, %var_20549, %1422, %1423, %1424)
}

def @main(%var_23048: Tensor[(65, 15), float64], %var_23053: Tensor[(65, 15), float64]) -> (Tensor[(65, 15), int16], Tensor[(65, 15), bool], Tensor[(2, 14, 3), float64], Tensor[(65, 15), bool]) {
  %1425 = @func_19908() /* ty=(Tensor[(65, 15), float64], Tensor[(2, 14, 3), float64]) */;
  %1426 = %1425.0;
  %1427 = cast(%var_23048, dtype="int32") /* ty=Tensor[(65, 15), int32] */;
  %1428 = shape_of(%1426, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1429 = cast(%1426, dtype="int32") /* ty=Tensor[(65, 15), int32] */;
  %1430 = dyn.reshape(%1427, %1428, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1431 = logical_xor(%1429, %1430) /* ty=Tensor[(65, 15), int32] */;
  %1432 = cast(%var_23053, dtype="bool") /* ty=Tensor[(65, 15), bool] */;
  %1433 = shape_of(%var_23048, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1434 = cast(%var_23048, dtype="bool") /* ty=Tensor[(65, 15), bool] */;
  %1435 = dyn.reshape(%1432, %1433, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1436 = not_equal(%1434, %1435) /* ty=Tensor[(65, 15), bool] */;
  %1437 = cast(%1436, dtype="int16") /* ty=Tensor[(65, 15), int16] */;
  %1438 = shape_of(%1431, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1439 = cast(%1431, dtype="int16") /* ty=Tensor[(65, 15), int16] */;
  %1440 = dyn.reshape(%1437, %1438, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1441 = cast(meta[relay.Constant][62] /* ty=Tensor[(65, 15), int32] */, dtype="bool") /* ty=Tensor[(65, 15), bool] */;
  %1442 = shape_of(%1431, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1443 = cast(%1431, dtype="bool") /* ty=Tensor[(65, 15), bool] */;
  %1444 = dyn.reshape(%1441, %1442, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1445 = @func_5960() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1446 = cast(%1436, dtype="bool") /* ty=Tensor[(65, 15), bool] */;
  %1447 = shape_of(%var_23048, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1448 = cast(%var_23048, dtype="bool") /* ty=Tensor[(65, 15), bool] */;
  %1449 = dyn.reshape(%1446, %1447, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1450 = bitwise_or(%1439, %1440) /* ty=Tensor[(65, 15), int16] */;
  %1451 = logical_or(%1443, %1444) /* ty=Tensor[(65, 15), bool] */;
  %1452 = %1445.1;
  %1453 = logical_and(%1448, %1449) /* ty=Tensor[(65, 15), bool] */;
  (%1450, %1451, %1452, %1453)
}

def @func_21832() -> Tensor[(2, 14, 3), float64] {
  %1454 = @func_19198() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1454.0
}

def @func_13976(%var_13959: Tensor[(250), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1455 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %1456 = cast(%var_13959, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1457 = reshape(%1456, newshape=[250]) /* ty=Tensor[(250), float64] */;
  %1458 = @func_1794(%1457) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %1459 = @func_11974() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1460 = @func_5854() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %1461 = %1455.0;
  %1462 = %1458.0;
  %1463 = %1459.1;
  %1464 = %1460.0;
  (%1461, %1462, %var_13959, %1463, %1464)
}

def @func_7514(%var_7500: Tensor[(60), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64]) {
  %1465 = @func_6160() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1466 = cast(-7.79807f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1467 = cast(%var_7500, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1468 = reshape(%1466, newshape=[]) /* ty=float64 */;
  %1469 = reshape(%1467, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float64] */;
  %1470 = @func_3340(%1468, %1469) /* ty=(Tensor[(12, 5, 1), float64],) */;
  %1471 = @func_6548() /* ty=Tensor[(2, 14, 3), float64] */;
  %1472 = %1465.1;
  %1473 = %1470.0;
  (%1471, %1472, %1473, -7.79807f64 /* ty=float64 */, %var_7500)
}

def @func_15585() -> (Tensor[(2, 14, 3), float64],) {
  %1474 = @func_8121() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1474,)
}

def @func_8018() -> (Tensor[(2, 14, 3), float64],) {
  %1475 = @func_7975() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1475,)
}

def @func_19882(%var_19853: Tensor[(198), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(224), float32], Tensor[(198), float64], Tensor[(14, 8, 12), float64]) {
  %1476 = @func_16795() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1477 = cast(meta[relay.Constant][63] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1478 = reshape(%1477, newshape=[250, 1]) /* ty=Tensor[(250, 1), float64] */;
  %1479 = @func_5398(%1478) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250, 1), float64]) */;
  %1480 = cast(%var_19853, dtype="float64") /* ty=Tensor[(198), float64] */;
  %1481 = reshape(%1480, newshape=[6, 3, 11]) /* ty=Tensor[(6, 3, 11), float64] */;
  %1482 = @func_17397(%1481) /* ty=(Tensor[(6, 3, 11), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 56), float32], Tensor[(432), float32]) */;
  %1483 = @func_19029() /* ty=(Tensor[(14, 8, 12), float64],) */;
  %1484 = %1476.0;
  %1485 = %1479.0;
  %1486 = %1482.2;
  %1487 = %1483.0;
  (%1484, %1485, meta[relay.Constant][63] /* ty=Tensor[(250), float64] */, %1486, %var_19853, %1487)
}

def @func_8482() -> Tensor[(2, 14, 3), float64] {
  @func_4279() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_8082(%var_8037: Tensor[(1, 6, 2), float64]) -> (Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(1, 6, 2), float32]) {
  %1488 = @func_6175() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1489 = cast(%var_8037, dtype="float64") /* ty=Tensor[(1, 6, 2), float64] */;
  %1490 = sqrt(%1489) /* ty=Tensor[(1, 6, 2), float64] */;
  %1491 = cast(%1490, dtype="float32") /* ty=Tensor[(1, 6, 2), float32] */;
  %1492 = sin(%1491) /* ty=Tensor[(1, 6, 2), float32] */;
  %1493 = cast(%1492, dtype="float32") /* ty=Tensor[(1, 6, 2), float32] */;
  %1494 = @func_3800() /* ty=Tensor[(9, 1, 2), float64] */;
  %1495 = %1488.0;
  %1496 = cos(%1493) /* ty=Tensor[(1, 6, 2), float32] */;
  (%1494, %1495, %1496)
}

def @func_11296() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  %1497 = @func_9039() /* ty=Tensor[(2, 14, 3), float64] */;
  %1498 = @func_7789() /* ty=Tensor[(2, 14, 3), float64] */;
  %1499 = @func_4431() /* ty=Tensor[(2, 14, 3), float64] */;
  %1500 = @func_7983() /* ty=Tensor[(3, 2, 14), float32] */;
  (%1497, %1498, %1499, %1500)
}

def @func_13517() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(2, 14, 3), float64]) {
  %1501 = @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1502 = cast(meta[relay.Constant][64] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1503 = reshape(%1502, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
  %1504 = @func_793(%1503) /* ty=(Tensor[(9, 12, 4), float32],) */;
  %1505 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1506 = %1501.1;
  %1507 = %1504.0;
  %1508 = %1505.0;
  (%1506, %1507, meta[relay.Constant][64] /* ty=Tensor[(432), float32] */, %1508)
}

def @func_15992() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1509 = @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1510 = %1509.0;
  %1511 = @func_12668() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1510, %1511)
}

def @func_10821() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) {
  %1512 = @func_4234() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1513 = @func_2617() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1514 = %1512.0;
  %1515 = %1513.2;
  (%1514, %1515)
}

def @func_19969(%var_19962: Tensor[(12), float64]) -> (Tensor[(10, 5, 5), float64], Tensor[(2, 6, 1), float64], Tensor[(12), float64]) {
  %1516 = @func_5659() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %1517 = cast(%var_19962, dtype="float64") /* ty=Tensor[(12), float64] */;
  %1518 = reshape(%1517, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), float64] */;
  %1519 = @func_12386(%1518) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 6, ?), int16], Tensor[(2, 6, 1), float64]) */;
  %1520 = %1516.1;
  %1521 = %1519.2;
  (%1520, %1521, %var_19962)
}

def @func_13608() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1522 = @func_10736() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1523 = %1522.0;
  %1524 = @func_13204() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1523, %1524)
}

def @func_8858(%var_8848: Tensor[(64), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64]) {
  %1525 = @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1526 = cast(%var_8848, dtype="float64") /* ty=Tensor[(64), float64] */;
  %1527 = reshape(%1526, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %1528 = @func_1447(%1527) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %1529 = %1525.0;
  %1530 = %1528.1;
  (%1529, %1530, %var_8848)
}

def @func_5659() -> (Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) {
  %1531 = @func_4995() /* ty=(Tensor[(9, 8, 1), uint64], Tensor[(64), float64], Tensor[(2, 14, 3), float64], Tensor[(9, 1, 1), float32]) */;
  %1532 = cast(meta[relay.Constant][65] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1533 = cast(meta[relay.Constant][65] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1534 = reshape(%1532, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %1535 = reshape(%1533, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %1536 = %1531.2;
  %1537 = @func_360(%1534, %1535) /* ty=Tensor[(10, 5, 5), float64] */;
  (%1536, %1537, meta[relay.Constant][65] /* ty=Tensor[(250), float64] */)
}

def @func_16678(%var_16668: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(480), float32], Tensor[(64), float64], Tensor[(2, 14, 3), float64], Tensor[(30, 2), int64]) {
  %1538 = @func_15441() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1539 = cast(%var_16668, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1540 = cast(meta[relay.Constant][66] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %1541 = reshape(%1539, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1542 = reshape(%1540, newshape=[4, 16]) /* ty=Tensor[(4, 16), float64] */;
  %1543 = @func_3179(%1541, %1542) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float32], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(4, 16), float64]) */;
  %1544 = cast(meta[relay.Constant][67] /* ty=Tensor[(30, 2), int64] */, dtype="int64") /* ty=Tensor[(30, 2), int64] */;
  %1545 = cast(meta[relay.Constant][67] /* ty=Tensor[(30, 2), int64] */, dtype="int64") /* ty=Tensor[(30, 2), int64] */;
  %1546 = reshape(%1544, newshape=[10, 2, 3]) /* ty=Tensor[(10, 2, 3), int64] */;
  %1547 = reshape(%1545, newshape=[10, 2, 3]) /* ty=Tensor[(10, 2, 3), int64] */;
  %1548 = @func_10981(%1546, %1547) /* ty=(Tensor[(10, 2, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1549 = %1538.0;
  %1550 = %1543.4;
  %1551 = %1548.1;
  (%1549, %1550, %var_16668, meta[relay.Constant][66] /* ty=Tensor[(64), float64] */, %1551, meta[relay.Constant][67] /* ty=Tensor[(30, 2), int64] */)
}

def @func_4995() -> (Tensor[(9, 8, 1), uint64], Tensor[(64), float64], Tensor[(2, 14, 3), float64], Tensor[(9, 1, 1), float32]) {
  %1552 = cast(meta[relay.Constant][68] /* ty=Tensor[(9, 1, 1), uint64] */, dtype="uint64") /* ty=Tensor[(9, 1, 1), uint64] */;
  %1553 = cast(meta[relay.Constant][69] /* ty=Tensor[(9, 8, 1), uint64] */, dtype="uint64") /* ty=Tensor[(9, 8, 1), uint64] */;
  %1554 = @func_3612() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */;
  %1555 = cast(meta[relay.Constant][68] /* ty=Tensor[(9, 1, 1), uint64] */, dtype="float32") /* ty=Tensor[(9, 1, 1), float32] */;
  %1556 = bitwise_or(%1552, %1553) /* ty=Tensor[(9, 8, 1), uint64] */;
  %1557 = %1554.2;
  %1558 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  %1559 = log(%1555) /* ty=Tensor[(9, 1, 1), float32] */;
  (%1556, %1557, %1558, %1559)
}

def @func_7660() -> (Tensor[(2, 14, 3), float64],) {
  %1560 = @func_4279() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1560,)
}

def @func_4630() -> (Tensor[(2, 14, 3), float64],) {
  %1561 = @func_3439() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1562 = %1561.0;
  (%1562,)
}

def @func_8286() -> (Tensor[(2, 14, 3), float64],) {
  %1563 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1563,)
}

def @func_21382() -> Tensor[(3, 2, 14), float32] {
  %1564 = @func_20712() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1564.0
}

def @func_19379() -> (Tensor[(2, 14, 3), float64],) {
  %1565 = @func_5960() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1566 = %1565.1;
  (%1566,)
}

def @func_16444() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(3, 2, 14), float32]) {
  %1567 = cast(meta[relay.Constant][70] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1568 = reshape(%1567, newshape=[25, 10]) /* ty=Tensor[(25, 10), float64] */;
  %1569 = @func_11915(%1568) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(25, 10), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1570 = @func_11708() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1571 = @func_3331() /* ty=Tensor[(2, 14, 3), float64] */;
  %1572 = %1569.5;
  %1573 = %1570.0;
  (%1571, %1572, meta[relay.Constant][70] /* ty=Tensor[(250), float64] */, %1573)
}

def @func_12615() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1574 = @func_10519() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1575 = @func_8546() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1576 = %1574.1;
  %1577 = %1575.0;
  %1578 = @func_4431() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1576, %1577, %1578)
}

def @func_21753(%var_21666: Tensor[(12, 2, 13), float32]) -> (Tensor[(12, 2, 13), float32], Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64], Tensor[(2, 14, 3), float64]) {
  %1579 = cast(%var_21666, dtype="float32") /* ty=Tensor[(12, 2, 13), float32] */;
  %1580 = @func_21654() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1581 = @func_13347() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(14, 96), float64]) */;
  %1582 = @func_10736() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1583 = @func_14641() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1584 = @func_19487() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1585 = @func_21575() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64]) */;
  %1586 = rsqrt(%1579) /* ty=Tensor[(12, 2, 13), float32] */;
  %1587 = %1580.0;
  %1588 = %1581.1;
  %1589 = %1582.0;
  %1590 = %1583.0;
  %1591 = %1584.1;
  %1592 = %1585.1;
  %1593 = @func_8093() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1586, %1587, %1588, %1589, %1590, %1591, %1592, %1593)
}

def @func_15283() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(2, 112), float32]) {
  %1594 = @func_10821() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */;
  %1595 = cast(meta[relay.Constant][71] /* ty=Tensor[(2, 112), float32] */, dtype="float32") /* ty=Tensor[(2, 112), float32] */;
  %1596 = reshape(%1595, newshape=[4, 14, 4]) /* ty=Tensor[(4, 14, 4), float32] */;
  %1597 = %1594.1;
  %1598 = @func_8482() /* ty=Tensor[(2, 14, 3), float64] */;
  %1599 = @func_186(%1596) /* ty=Tensor[(4, 14, 4), float32] */;
  (%1597, %1598, %1599, meta[relay.Constant][71] /* ty=Tensor[(2, 112), float32] */)
}

def @func_8396() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1600 = @func_7072() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %1601 = %1600.2;
  %1602 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1601, %1602)
}

def @func_14495() -> (Tensor[(2, 14, 3), float64],) {
  %1603 = @func_13820() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) */;
  %1604 = %1603.0;
  (%1604,)
}

def @func_2162() -> (Tensor[(2, 14, 3), float64],) {
  %1605 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1605,)
}

def @func_22345() -> (Tensor[(15, 5, 13), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1606 = @func_8108() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(975), float64]) */;
  %1607 = @func_15992() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1608 = %1606.1;
  %1609 = @func_9184() /* ty=Tensor[(2, 14, 3), float64] */;
  %1610 = %1607.0;
  (%1608, %1609, %1610)
}

def @func_12386(%var_12347: Tensor[(2, 6, 1), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 6, ?), int16], Tensor[(2, 6, 1), float64]) {
  %1611 = @func_2084() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1612 = cast(%var_12347, dtype="float64") /* ty=Tensor[(2, 6, 1), float64] */;
  %1613 = acos(%1612) /* ty=Tensor[(2, 6, 1), float64] */;
  %1614 = cast(%1613, dtype="int16") /* ty=Tensor[(2, 6, 1), int16] */;
  %1615 = shape_of(%var_12347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1616 = cast(%var_12347, dtype="int16") /* ty=Tensor[(2, 6, 1), int16] */;
  %1617 = dyn.reshape(%1614, %1615, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1618 = cast(%1613, dtype="float64") /* ty=Tensor[(2, 6, 1), float64] */;
  %1619 = %1611.1;
  %1620 = right_shift(%1616, %1617) /* ty=Tensor[(2, 6, ?), int16] */;
  %1621 = log(%1618) /* ty=Tensor[(2, 6, 1), float64] */;
  (%1619, %1620, %1621)
}

def @func_4913() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) {
  %1622 = @func_4567() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1623 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1624 = @func_2719() /* ty=Tensor[(2, 14, 3), float64] */;
  %1625 = cast(%1624, dtype="float32") /* ty=Tensor[(2, 14, 3), float32] */;
  %1626 = reshape(%1625, newshape=[3, 2, 14]) /* ty=Tensor[(3, 2, 14), float32] */;
  %1627 = @func_3075(%1626) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
  %1628 = @func_3612() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */;
  %1629 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1630 = @func_4279() /* ty=Tensor[(2, 14, 3), float64] */;
  %1631 = %1622.0;
  %1632 = %1623.0;
  %1633 = %1627.0;
  %1634 = %1628.3;
  %1635 = %1629.0;
  (%1624, %1630, %1631, %1632, %1633, %1634, %1635)
}

def @func_11708() -> (Tensor[(3, 2, 14), float32],) {
  %1636 = @func_4234() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1637 = %1636.0;
  (%1637,)
}

def @func_16970() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1638 = @func_13722() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1639 = @func_6556() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1640 = %1638.0;
  %1641 = @func_8121() /* ty=Tensor[(2, 14, 3), float64] */;
  %1642 = %1639.0;
  (%1640, %1641, %1642)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7743() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_7741() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_11918(%var_11916: Tensor[(25, 10), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(25, 10), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_11915(%var_11916) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(25, 10), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_14251() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_14249() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_9020() -> Tensor[(2, 14, 3), float64] {
  @func_9018() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_16493() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %4 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %0 = @func_8233() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1 = @func_14985() /* ty=(Tensor[(250), float64], Tensor[(2, 14, 3), float64]) */;
    %2 = %0.0;
    %3 = %1.1;
    (%2, %3)
  };
  %4() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_2711(%var_2710: Tensor[(12, 8, 5), float32]) -> (Tensor[(12, 8, 5), float32],) {
  %7 = fn (%var_2705: Tensor[(12, 8, 5), float32]) -> (Tensor[(12, 8, 5), float32],) {
    %5 = cast(%var_2705, dtype="float32") /* ty=Tensor[(12, 8, 5), float32] */;
    %6 = atanh(%5) /* ty=Tensor[(12, 8, 5), float32] */;
    (%6,)
  };
  %7(%var_2710) /* ty=(Tensor[(12, 8, 5), float32],) */
}

def @func_3293() -> (Tensor[(3, 2, 14), float32],) {
  %10 = fn () -> (Tensor[(3, 2, 14), float32],) {
    %8 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %9 = %8.0;
    (%9,)
  };
  %10() /* ty=(Tensor[(3, 2, 14), float32],) */
}

def @func_9531() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) {
  %15 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) {
    %11 = @func_4913() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
    %12 = @func_8593() /* ty=(Tensor[(3, 2, 14), bool],) */;
    %13 = %11.0;
    %14 = %12.0;
    (%13, %14)
  };
  %15() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */
}

def @func_12615() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %16 = @func_10519() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %17 = @func_8546() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %18 = %16.1;
  %19 = %17.0;
  %20 = @func_4431() /* ty=Tensor[(2, 14, 3), float64] */;
  (%18, %19, %20)
}

def @func_21775(%var_21773: uint64, %var_21774: Tensor[(1, 4, 9), uint64]) -> (Tensor[(1, 4, 9), bool], Tensor[(14, 8, 12), float64], Tensor[(1344), float64]) {
  @func_21771(%var_21773, %var_21774) /* ty=(Tensor[(1, 4, 9), bool], Tensor[(14, 8, 12), float64], Tensor[(1344), float64]) */
}

def @func_19545() -> (Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(3, 2, 14), float32]) {
  %21 = @func_10936() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %22 = @func_19029() /* ty=(Tensor[(14, 8, 12), float64],) */;
  %23 = @func_16758() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %24 = %21.0;
  %25 = %22.0;
  %26 = %23.0;
  (%24, %25, %26)
}

def @func_20117(%var_20115: Tensor[(2, 216), float32]) -> (Tensor[(9, 8, 1), float32], Tensor[(224), float32], Tensor[(224), float32], Tensor[(2, 216), float32], Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(112), uint32]) {
  @func_20114(%var_20115) /* ty=(Tensor[(9, 8, 1), float32], Tensor[(224), float32], Tensor[(224), float32], Tensor[(2, 216), float32], Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(112), uint32]) */
}

def @func_18489() -> (Tensor[(15, 7, 11), float64], Tensor[(2, 14, 3), float64]) {
  %31 = fn () -> (Tensor[(15, 7, 11), float64], Tensor[(2, 14, 3), float64]) {
    %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 7, 11), float64] */, dtype="float64") /* ty=Tensor[(15, 7, 11), float64] */;
    %28 = @func_7660() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %29 = atan(%27) /* ty=Tensor[(15, 7, 11), float64] */;
    %30 = %28.0;
    (%29, %30)
  };
  %31() /* ty=(Tensor[(15, 7, 11), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_23028() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %32 = @func_19625() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %33 = @func_17069() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %34 = @func_14555() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %35 = @func_8121() /* ty=Tensor[(2, 14, 3), float64] */;
  %36 = %32.0;
  %37 = %33.0;
  %38 = %34.1;
  (%35, %36, %37, %38)
}

def @func_12218() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) {
  @func_12216() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_20916() -> (Tensor[(4, 4, 4), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) {
  %39 = @func_3612() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */;
  %40 = @func_16654() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(3, 2, 14), float32]) */;
  %41 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %42 = @func_11974() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %43 = %39.1;
  %44 = %40.2;
  %45 = @func_7539() /* ty=Tensor[(2, 14, 3), float64] */;
  %46 = %41.0;
  %47 = %42.0;
  (%43, %44, %45, %46, %47)
}

def @func_19625() -> (Tensor[(2, 14, 3), float64],) {
  %48 = @func_13845() /* ty=Tensor[(2, 14, 3), float64] */;
  (%48,)
}

def @func_12401() -> Tensor[(2, 14, 3), float64] {
  @func_12399() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_9018() -> Tensor[(2, 14, 3), float64] {
  %49 = @func_5551() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64]) */;
  %49.1
}

def @func_14329() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(3, 2, 14), float32], Tensor[(480), float32]) {
  %50 = @func_10864() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %51 = cast(meta[relay.Constant][1] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %52 = reshape(%51, newshape=[9, 11, 1]) /* ty=Tensor[(9, 11, 1), float64] */;
  %53 = @func_12090(%52) /* ty=(Tensor[(9, 11, ?), int64],) */;
  %54 = cast(meta[relay.Constant][2] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %55 = reshape(%54, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %56 = @func_9470(%55) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), bool], Tensor[(480), float32], Tensor[(3, 2, 14), float32]) */;
  %57 = %50.0;
  %58 = %53.0;
  %59 = %56.5;
  (%57, %58, meta[relay.Constant][1] /* ty=Tensor[(99), float64] */, %59, meta[relay.Constant][2] /* ty=Tensor[(480), float32] */)
}

def @func_16243(%var_16241: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], float64, Tensor[(975), float64], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64]) {
  @func_16240(%var_16241) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], float64, Tensor[(975), float64], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64]) */
}

def @func_8396() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %60 = @func_7072() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %61 = %60.2;
  %62 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  (%61, %62)
}

def @func_12319() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_12317() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_4556(%var_4520: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(64), float64], Tensor[(432), float32]) {
  %63 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %64 = @func_3612() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */;
  %65 = cast(%var_4520, dtype="float32") /* ty=Tensor[(480), float32] */;
  %66 = %64.1;
  %67 = cast(%66, dtype="float64") /* ty=Tensor[(4, 4, 4), float64] */;
  %68 = reshape(%65, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %69 = reshape(%67, newshape=[4, 16]) /* ty=Tensor[(4, 16), float64] */;
  %70 = @func_3179(%68, %69) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float32], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(4, 16), float64]) */;
  %71 = cast(%66, dtype="float64") /* ty=Tensor[(4, 4, 4), float64] */;
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %73 = reshape(%71, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %74 = reshape(%72, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %75 = @func_2252(%73, %74) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) */;
  %76 = @func_2719() /* ty=Tensor[(2, 14, 3), float64] */;
  %77 = %63.0;
  %78 = %70.2;
  %79 = %75.2;
  (%76, %77, %66, %78, %var_4520, %79, meta[relay.Constant][3] /* ty=Tensor[(432), float32] */)
}

def @func_13462() -> (Tensor[(14, 8, 12), float64],) {
  %82 = fn () -> (Tensor[(14, 8, 12), float64],) {
    %80 = @func_13347() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(14, 96), float64]) */;
    %81 = %80.1;
    (%81,)
  };
  %82() /* ty=(Tensor[(14, 8, 12), float64],) */
}

def @func_21881() -> (Tensor[(2, 14, 3), float64],) {
  %84 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %83 = @func_6964() /* ty=Tensor[(2, 14, 3), float64] */;
    (%83,)
  };
  %84() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_3484() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %85 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %86 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %87 = %85.0;
  (%86, %87)
}

def @func_19366() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64]) {
  @func_19364() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64]) */
}

def @func_20268() -> (Tensor[(2, 14, 3), float64],) {
  @func_20266() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_3344(%var_3342: float64, %var_3343: Tensor[(12, 5, 1), float64]) -> (Tensor[(12, 5, 1), float64],) {
  @func_3340(%var_3342, %var_3343) /* ty=(Tensor[(12, 5, 1), float64],) */
}

def @func_13573() -> Tensor[(2, 14, 3), float64] {
  %88 = @func_4567() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %88.0
}

def @func_20456() -> Tensor[(2, 14, 3), float64] {
  @func_20454() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_7258(%var_7257: Tensor[(14, 8, 12), float64]) -> Tensor[(14, 8, 12), float64] {
  %90 = fn (%var_7243: Tensor[(14, 8, 12), float64]) -> Tensor[(14, 8, 12), float64] {
    %89 = cast(%var_7243, dtype="float64") /* ty=Tensor[(14, 8, 12), float64] */;
    sin(%89) /* ty=Tensor[(14, 8, 12), float64] */
  };
  %90(%var_7257) /* ty=Tensor[(14, 8, 12), float64] */
}

def @func_14411() -> (Tensor[(3, 2, 14), float64], Tensor[(3, 2, 14), float32]) {
  %91 = @func_11833() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %92 = %91.1;
  %93 = cast(%92, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  %94 = erf(%93) /* ty=Tensor[(3, 2, 14), float64] */;
  %95 = @func_3854() /* ty=Tensor[(3, 2, 14), float32] */;
  (%94, %95)
}

def @func_13827() -> Tensor[(3, 2, 14), bool] {
  %97 = fn () -> Tensor[(3, 2, 14), bool] {
    %96 = @func_2885() /* ty=(Tensor[(3, 2, 14), bool],) */;
    %96.0
  };
  %97() /* ty=Tensor[(3, 2, 14), bool] */
}

def @func_9982() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %103 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %98 = @func_8727() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %99 = @func_3331() /* ty=Tensor[(2, 14, 3), float64] */;
    %100 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
    %101 = @func_9153() /* ty=Tensor[(2, 14, 3), float64] */;
    %102 = %98.3;
    (%99, %100, %101, %102)
  };
  %103() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_4281() -> Tensor[(2, 14, 3), float64] {
  @func_4279() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_21607() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %110 = fn () -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %104 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
    %105 = @func_5036() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %106 = @func_16795() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %107 = %104.1;
    %108 = %105.0;
    %109 = %106.0;
    (%107, %108, %109)
  };
  %110() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_8803() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %114 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %111 = @func_8286() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %112 = @func_7768() /* ty=Tensor[(2, 14, 3), float64] */;
    %113 = %111.0;
    (%112, %113)
  };
  %114() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_17794() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) {
  @func_17792() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */
}

def @func_12647() -> Tensor[(2, 14, 3), float64] {
  %115 = @func_8233() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %115.0
}

def @func_19831() -> (Tensor[(2, 14, 3), float64],) {
  %116 = @func_15283() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(2, 112), float32]) */;
  %117 = %116.1;
  (%117,)
}

def @func_6845(%var_6841: Tensor[(480), float32], %var_6842: Tensor[(32, 2), float64], %var_6843: Tensor[(32, 2), float64], %var_6844: Tensor[(112, 1), uint32]) -> (Tensor[(2, 14, 3), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(32, 2), bool], Tensor[(9, ?, 2), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(112, 1), uint32]) {
  %151 = fn (%var_6786: Tensor[(480), float32], %var_6787: Tensor[(32, 2), float64], %var_6797: Tensor[(32, 2), float64], %var_6836: Tensor[(112, 1), uint32]) -> (Tensor[(2, 14, 3), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(32, 2), bool], Tensor[(9, ?, 2), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(112, 1), uint32]) {
    %118 = cast(%var_6786, dtype="float32") /* ty=Tensor[(480), float32] */;
    %119 = cast(%var_6787, dtype="float64") /* ty=Tensor[(32, 2), float64] */;
    %120 = reshape(%118, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %121 = reshape(%119, newshape=[4, 16]) /* ty=Tensor[(4, 16), float64] */;
    %122 = @func_3179(%120, %121) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float32], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(4, 16), float64]) */;
    %123 = cast(%var_6797, dtype="uint16") /* ty=Tensor[(32, 2), uint16] */;
    %124 = shape_of(%var_6787, dtype="int32") /* ty=Tensor[(2), int32] */;
    %125 = cast(%var_6787, dtype="uint16") /* ty=Tensor[(32, 2), uint16] */;
    %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %127 = right_shift(%125, %126) /* ty=Tensor[(32, 2), uint16] */;
    %128 = cast(%var_6787, dtype="bool") /* ty=Tensor[(32, 2), bool] */;
    %129 = shape_of(%127, dtype="int32") /* ty=Tensor[(2), int32] */;
    %130 = cast(%127, dtype="bool") /* ty=Tensor[(32, 2), bool] */;
    %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %132 = cast(meta[relay.Constant][4] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %133 = @func_3331() /* ty=Tensor[(2, 14, 3), float64] */;
    %134 = cast(%133, dtype="float32") /* ty=Tensor[(2, 14, 3), float32] */;
    %135 = reshape(%132, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %136 = reshape(%134, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %137 = @func_4046(%135, %136) /* ty=(Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(432), float32], Tensor[(64), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(9, ?, 2), float64]) */;
    %138 = cast(%var_6836, dtype="uint32") /* ty=Tensor[(112, 1), uint32] */;
    %139 = cast(%var_6836, dtype="uint32") /* ty=Tensor[(112, 1), uint32] */;
    %140 = cast(%var_6836, dtype="float64") /* ty=Tensor[(112, 1), float64] */;
    %141 = cast(%var_6836, dtype="uint32") /* ty=Tensor[(112, 1), uint32] */;
    %142 = reshape(%138, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), uint32] */;
    %143 = reshape(%139, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), uint32] */;
    %144 = reshape(%140, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), float64] */;
    %145 = reshape(%141, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), uint32] */;
    %146 = @func_4722(%142, %143, %144, %145) /* ty=(Tensor[(14, 4, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(14, 4, 2), float64], Tensor[(14, 4, 2), bool]) */;
    %147 = %122.3;
    %148 = less_equal(%130, %131) /* ty=Tensor[(32, 2), bool] */;
    %149 = %137.7;
    %150 = %146.1;
    (%133, %147, %var_6786, %148, %149, meta[relay.Constant][4] /* ty=Tensor[(432), float32] */, %150, %var_6836)
  };
  %151(%var_6841, %var_6842, %var_6843, %var_6844) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(32, 2), bool], Tensor[(9, ?, 2), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(112, 1), uint32]) */
}

def @func_18690() -> Tensor[(2, 14, 3), float64] {
  @func_12500() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_14556() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %156 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %152 = @func_12216() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) */;
    %153 = @func_6556() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %154 = %152.2;
    %155 = %153.1;
    (%154, %155)
  };
  %156() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_13497() -> Tensor[(2, 14, 3), float64] {
  %157 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_7539() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %157() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_18539() -> (Tensor[(2, 14, 3), float64],) {
  %158 = @func_9208() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %159 = %158.0;
  (%159,)
}

def @func_2557() -> Tensor[(2, 14, 3), float64] {
  %161 = fn () -> Tensor[(2, 14, 3), float64] {
    %160 = @func_2084() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %160.0
  };
  %161() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_12388(%var_12387: Tensor[(2, 6, 1), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 6, ?), int16], Tensor[(2, 6, 1), float64]) {
  %173 = fn (%var_12347: Tensor[(2, 6, 1), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 6, ?), int16], Tensor[(2, 6, 1), float64]) {
    %162 = @func_2084() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %163 = cast(%var_12347, dtype="float64") /* ty=Tensor[(2, 6, 1), float64] */;
    %164 = acos(%163) /* ty=Tensor[(2, 6, 1), float64] */;
    %165 = cast(%164, dtype="int16") /* ty=Tensor[(2, 6, 1), int16] */;
    %166 = shape_of(%var_12347, dtype="int32") /* ty=Tensor[(3), int32] */;
    %167 = cast(%var_12347, dtype="int16") /* ty=Tensor[(2, 6, 1), int16] */;
    %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %169 = cast(%164, dtype="float64") /* ty=Tensor[(2, 6, 1), float64] */;
    %170 = %162.1;
    %171 = right_shift(%167, %168) /* ty=Tensor[(2, 6, ?), int16] */;
    %172 = log(%169) /* ty=Tensor[(2, 6, 1), float64] */;
    (%170, %171, %172)
  };
  %173(%var_12387) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 6, ?), int16], Tensor[(2, 6, 1), float64]) */
}

def @func_14641() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %174 = @func_14555() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %175 = @func_2456() /* ty=Tensor[(2, 14, 3), float64] */;
  %176 = %174.0;
  (%175, %176)
}

def @func_6908(%var_6906: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), bool], Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) {
  @func_6905(%var_6906) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) */
}

def @func_8110() -> (Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(975), float64]) {
  @func_8108() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(975), float64]) */
}

def @func_6557() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %181 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %177 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %178 = @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %179 = %177.0;
    %180 = %178.0;
    (%179, %180)
  };
  %181() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_7623() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %182 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %183 = @func_2233() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %184 = %182.0;
  %185 = %183.2;
  (%184, %185)
}

def @func_10661() -> (Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) {
  @func_10659() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */
}

def @func_16983() -> (Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) {
  %186 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %187 = @func_13826() /* ty=Tensor[(3, 2, 14), bool] */;
  %188 = %186.0;
  (%187, %188)
}

def @func_18812() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_18810() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_8190() -> Tensor[(2, 14, 3), float64] {
  %189 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %189.0
}

def @func_11120() -> (Tensor[(2, 14, 3), float64],) {
  %192 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %190 = @func_4354() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %191 = %190.0;
    (%191,)
  };
  %192() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_13041() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %193 = @func_11583() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %194 = %193.0;
  %195 = @func_8190() /* ty=Tensor[(2, 14, 3), float64] */;
  (%194, %195)
}

def @func_21576() -> (Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64]) {
  %199 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64]) {
    %196 = @func_8353() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(65, 15), float64]) */;
    %197 = @func_19249() /* ty=Tensor[(2, 14, 3), float64] */;
    %198 = %196.2;
    (%197, %198)
  };
  %199() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64]) */
}

def @func_15719() -> Tensor[(2, 14, 3), float64] {
  %201 = fn () -> Tensor[(2, 14, 3), float64] {
    %200 = @func_5551() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64]) */;
    %200.1
  };
  %201() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_1884() -> (Tensor[(2, 14, 3), float64],) {
  @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_2458() -> Tensor[(2, 14, 3), float64] {
  @func_2456() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_15487() -> Tensor[(2, 14, 3), float64] {
  %203 = fn () -> Tensor[(2, 14, 3), float64] {
    %202 = @func_12956() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %202.0
  };
  %203() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_1882() -> (Tensor[(2, 14, 3), float64],) {
  %204 = @func_1511() /* ty=Tensor[(2, 14, 3), float64] */;
  (%204,)
}

def @func_8860(%var_8859: Tensor[(64), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64]) {
  %211 = fn (%var_8848: Tensor[(64), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64]) {
    %205 = @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %206 = cast(%var_8848, dtype="float64") /* ty=Tensor[(64), float64] */;
    %207 = reshape(%206, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
    %208 = @func_1447(%207) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
    %209 = %205.0;
    %210 = %208.1;
    (%209, %210, %var_8848)
  };
  %211(%var_8859) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64]) */
}

def @func_12574() -> (Tensor[(2, 14, 3), float64],) {
  %213 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %212 = @func_3331() /* ty=Tensor[(2, 14, 3), float64] */;
    (%212,)
  };
  %213() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_21771(%var_21762: uint64, %var_21763: Tensor[(1, 4, 9), uint64]) -> (Tensor[(1, 4, 9), bool], Tensor[(14, 8, 12), float64], Tensor[(1344), float64]) {
  %214 = cast(%var_21762, dtype="bool") /* ty=bool */;
  %215 = cast(%var_21763, dtype="bool") /* ty=Tensor[(1, 4, 9), bool] */;
  %216 = cast(meta[relay.Constant][5] /* ty=Tensor[(1344), float64] */, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %217 = reshape(%216, newshape=[14, 8, 12]) /* ty=Tensor[(14, 8, 12), float64] */;
  %218 = greater(%214, %215) /* ty=Tensor[(1, 4, 9), bool] */;
  %219 = @func_7256(%217) /* ty=Tensor[(14, 8, 12), float64] */;
  (%218, %219, meta[relay.Constant][5] /* ty=Tensor[(1344), float64] */)
}

def @func_16907() -> Tensor[(250), float64] {
  @func_16905() /* ty=Tensor[(250), float64] */
}

def @func_8287() -> (Tensor[(2, 14, 3), float64],) {
  %221 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %220 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
    (%220,)
  };
  %221() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_22497() -> (Tensor[(2, 14, 3), float64],) {
  %222 = @func_6108() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %223 = %222.1;
  (%223,)
}

def @func_10178() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %226 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %224 = @func_3331() /* ty=Tensor[(2, 14, 3), float64] */;
    %225 = @func_7539() /* ty=Tensor[(2, 14, 3), float64] */;
    (%224, %225)
  };
  %226() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_2252(%var_2245: Tensor[(64), float64], %var_2250: Tensor[(432), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) {
  %227 = cast(%var_2245, dtype="float64") /* ty=Tensor[(64), float64] */;
  %228 = reshape(%227, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %229 = @func_1447(%228) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %230 = cast(%var_2250, dtype="float32") /* ty=Tensor[(432), float32] */;
  %231 = reshape(%230, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
  %232 = @func_793(%231) /* ty=(Tensor[(9, 12, 4), float32],) */;
  %233 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %234 = %229.1;
  %235 = %232.0;
  (%233, %234, %var_2245, %235, %var_2250)
}

def @func_1633() -> Tensor[(2, 14, 3), float64] {
  %236 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_1511() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %236() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_2256(%var_2254: Tensor[(64), float64], %var_2255: Tensor[(432), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) {
  @func_2252(%var_2254, %var_2255) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) */
}

def @func_13821() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) {
  %240 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) {
    %237 = @func_12049() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %238 = %237.0;
    %239 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
    (%238, %239)
  };
  %240() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) */
}

def @func_4235() -> (Tensor[(3, 2, 14), float32],) {
  %242 = fn () -> (Tensor[(3, 2, 14), float32],) {
    %241 = @func_3319() /* ty=Tensor[(3, 2, 14), float32] */;
    (%241,)
  };
  %242() /* ty=(Tensor[(3, 2, 14), float32],) */
}

def @func_10295() -> (Tensor[(9, 8, 1), uint64],) {
  %243 = @func_4995() /* ty=(Tensor[(9, 8, 1), uint64], Tensor[(64), float64], Tensor[(2, 14, 3), float64], Tensor[(9, 1, 1), float32]) */;
  %244 = %243.0;
  (%244,)
}

def @func_14985() -> (Tensor[(250), float64], Tensor[(2, 14, 3), float64]) {
  %245 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
  %246 = @func_6160() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %247 = %245.2;
  %248 = %246.0;
  (%247, %248)
}

def @func_8891() -> (Tensor[(2, 14, 3), float64],) {
  %249 = @func_7955() /* ty=Tensor[(2, 14, 3), float64] */;
  (%249,)
}

def @func_21872() -> (Tensor[(2, 14, 3), float64],) {
  %252 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %250 = @func_14555() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %251 = %250.0;
    (%251,)
  };
  %252() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_22607(%var_22605: Tensor[(11, 4, 2), float32]) -> (Tensor[(11, 4, 2), float32],) {
  @func_22604(%var_22605) /* ty=(Tensor[(11, 4, 2), float32],) */
}

def @func_11646() -> Tensor[(2, 14, 3), float64] {
  @func_4279() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_6956(%var_6954: Tensor[(4, 120), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(4, 120), float32]) {
  @func_6953(%var_6954) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(4, 120), float32]) */
}

def @func_5552() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64]) {
  %261 = fn () -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64]) {
    %253 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %254 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %255 = %254.0;
    %256 = cast(%255, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
    %257 = @func_3854() /* ty=Tensor[(3, 2, 14), float32] */;
    %258 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
    %259 = %253.0;
    %260 = cosh(%256) /* ty=Tensor[(3, 2, 14), float64] */;
    (%257, %258, %259, %260)
  };
  %261() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64]) */
}

def @func_7975() -> Tensor[(2, 14, 3), float64] {
  @func_7768() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_10908() -> (Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %268 = fn () -> (Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %262 = @func_5854() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
    %263 = @func_8312() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %264 = @func_8727() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %265 = %262.1;
    %266 = %263.0;
    %267 = %264.3;
    (%265, %266, %267)
  };
  %268() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_12244() -> (Tensor[(2, 14, 3), float64],) {
  %269 = @func_4279() /* ty=Tensor[(2, 14, 3), float64] */;
  (%269,)
}

def @func_18458(%var_18401: Tensor[(3, 4, 16), int16], %var_18402: Tensor[(3, 4, 16), int16]) -> (Tensor[(3, 4, 16), int16], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %270 = cast(%var_18402, dtype="int16") /* ty=Tensor[(3, 4, 16), int16] */;
  %271 = shape_of(%var_18401, dtype="int32") /* ty=Tensor[(3), int32] */;
  %272 = cast(%var_18401, dtype="int16") /* ty=Tensor[(3, 4, 16), int16] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %274 = @func_17069() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %275 = bitwise_and(%272, %273) /* ty=Tensor[(3, 4, 16), int16] */;
  %276 = @func_6548() /* ty=Tensor[(2, 14, 3), float64] */;
  %277 = %274.0;
  (%275, %276, %277)
}

def @func_13608() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %278 = @func_10736() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %279 = %278.0;
  %280 = @func_13204() /* ty=Tensor[(2, 14, 3), float64] */;
  (%279, %280)
}

def @main(%var_23048: Tensor[(65, 15), float64], %var_23053: Tensor[(65, 15), float64]) -> (Tensor[(65, 15), int16], Tensor[(65, 15), bool], Tensor[(2, 14, 3), float64], Tensor[(65, 15), bool]) {
  %281 = @func_19909() /* ty=(Tensor[(65, 15), float64], Tensor[(2, 14, 3), float64]) */;
  %282 = %281.0;
  %283 = cast(%var_23048, dtype="int32") /* ty=Tensor[(65, 15), int32] */;
  %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(2), int32] */;
  %285 = cast(%282, dtype="int32") /* ty=Tensor[(65, 15), int32] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %287 = logical_xor(%285, %286) /* ty=Tensor[(65, 15), int32] */;
  %288 = cast(%var_23053, dtype="bool") /* ty=Tensor[(65, 15), bool] */;
  %289 = shape_of(%var_23048, dtype="int32") /* ty=Tensor[(2), int32] */;
  %290 = cast(%var_23048, dtype="bool") /* ty=Tensor[(65, 15), bool] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %292 = not_equal(%290, %291) /* ty=Tensor[(65, 15), bool] */;
  %293 = cast(%292, dtype="int16") /* ty=Tensor[(65, 15), int16] */;
  %294 = shape_of(%287, dtype="int32") /* ty=Tensor[(2), int32] */;
  %295 = cast(%287, dtype="int16") /* ty=Tensor[(65, 15), int16] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %297 = cast(meta[relay.Constant][6] /* ty=Tensor[(65, 15), int32] */, dtype="bool") /* ty=Tensor[(65, 15), bool] */;
  %298 = shape_of(%287, dtype="int32") /* ty=Tensor[(2), int32] */;
  %299 = cast(%287, dtype="bool") /* ty=Tensor[(65, 15), bool] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %301 = @func_5961() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %302 = cast(%292, dtype="bool") /* ty=Tensor[(65, 15), bool] */;
  %303 = shape_of(%var_23048, dtype="int32") /* ty=Tensor[(2), int32] */;
  %304 = cast(%var_23048, dtype="bool") /* ty=Tensor[(65, 15), bool] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %306 = bitwise_or(%295, %296) /* ty=Tensor[(65, 15), int16] */;
  %307 = logical_or(%299, %300) /* ty=Tensor[(65, 15), bool] */;
  %308 = %301.1;
  %309 = logical_and(%304, %305) /* ty=Tensor[(65, 15), bool] */;
  (%306, %307, %308, %309)
}

def @func_13171(%var_13153: Tensor[(64), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(64), float64]) {
  %310 = @func_12771() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %311 = cast(%var_13153, dtype="float64") /* ty=Tensor[(64), float64] */;
  %312 = reshape(%311, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %313 = @func_8858(%312) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64]) */;
  %314 = %310.2;
  %315 = %313.0;
  (%314, %315, %var_13153)
}

def @func_20627() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %319 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %316 = @func_7660() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %317 = @func_7768() /* ty=Tensor[(2, 14, 3), float64] */;
    %318 = %316.0;
    (%317, %318)
  };
  %319() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_15295() -> Tensor[(2, 14, 3), float64] {
  @func_15293() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_11549() -> (Tensor[(16, 5, 16), float64],) {
  %320 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 16), float64] */;
  %321 = log(%320) /* ty=Tensor[(16, 5, 16), float64] */;
  (%321,)
}

def @func_11611(%var_11609: Tensor[(1, 13, 8), bool], %var_11610: Tensor[(8, 13, 8), bool]) -> Tensor[(8, 13, 8), bool] {
  @func_11607(%var_11609, %var_11610) /* ty=Tensor[(8, 13, 8), bool] */
}

def @func_14413() -> (Tensor[(3, 2, 14), float64], Tensor[(3, 2, 14), float32]) {
  @func_14411() /* ty=(Tensor[(3, 2, 14), float64], Tensor[(3, 2, 14), float32]) */
}

def @func_2720() -> Tensor[(2, 14, 3), float64] {
  %322 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_2556() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %322() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_16076() -> (Tensor[(2, 14, 3), float64],) {
  %325 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %323 = @func_11974() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %324 = %323.1;
    (%324,)
  };
  %325() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_16240(%var_16177: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], float64, Tensor[(975), float64], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64]) {
  %326 = cast(meta[relay.Constant][8] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %327 = cast(%var_16177, dtype="float32") /* ty=Tensor[(480), float32] */;
  %328 = reshape(%326, newshape=[5, 195]) /* ty=Tensor[(5, 195), float64] */;
  %329 = reshape(%327, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %330 = @func_7199(%328, %329) /* ty=(Tensor[(3, 2, 14), float32], Tensor[(15, 5, 13), bool], Tensor[(5, 195), float64], Tensor[(3, 2, 14), float32], Tensor[(12, 5, 1), float64], float64, Tensor[(2, 14, 3), float64], Tensor[(60, 1), float32], Tensor[(480), float32], Tensor[(480), float32]) */;
  %331 = @func_15018() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %332 = @func_5432() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %333 = @func_9530() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %334 = @func_15293() /* ty=Tensor[(2, 14, 3), float64] */;
  %335 = cast(%334, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %336 = reshape(%335, newshape=[3, 2, 14]) /* ty=Tensor[(3, 2, 14), bool] */;
  %337 = @func_9612(%336) /* ty=(Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64]) */;
  %338 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %339 = %330.5;
  %340 = %331.0;
  %341 = %332.0;
  %342 = %333.1;
  %343 = %337.1;
  (%334, %338, %339, meta[relay.Constant][8] /* ty=Tensor[(975), float64] */, %var_16177, %340, %341, %342, %343)
}

def @func_15249() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(36, 12), float32]) {
  @func_15247() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(36, 12), float32]) */
}

def @func_3856() -> Tensor[(3, 2, 14), float32] {
  @func_3854() /* ty=Tensor[(3, 2, 14), float32] */
}

def @func_2655() -> (Tensor[(3, 2, 14), float32],) {
  %346 = fn () -> (Tensor[(3, 2, 14), float32],) {
    %344 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 2, 14), float32] */, dtype="float32") /* ty=Tensor[(3, 2, 14), float32] */;
    %345 = sin(%344) /* ty=Tensor[(3, 2, 14), float32] */;
    (%345,)
  };
  %346() /* ty=(Tensor[(3, 2, 14), float32],) */
}

def @func_11551() -> (Tensor[(16, 5, 16), float64],) {
  @func_11549() /* ty=(Tensor[(16, 5, 16), float64],) */
}

def @func_5939(%var_5937: Tensor[(3, 2, 14), float32]) -> Tensor[(3, 2, 14), float64] {
  @func_5936(%var_5937) /* ty=Tensor[(3, 2, 14), float64] */
}

def @func_22604(%var_22589: Tensor[(11, 4, 2), float32]) -> (Tensor[(11, 4, 2), float32],) {
  %347 = cast(%var_22589, dtype="float32") /* ty=Tensor[(11, 4, 2), float32] */;
  %348 = cosh(%347) /* ty=Tensor[(11, 4, 2), float32] */;
  (%348,)
}

def @func_12670() -> Tensor[(2, 14, 3), float64] {
  @func_12668() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_20310() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_20308() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_19779() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64]) {
  %349 = @func_10177() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %350 = @func_6108() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %351 = cast(meta[relay.Constant][10] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %352 = reshape(%351, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %353 = @func_1447(%352) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %354 = %349.0;
  %355 = %350.0;
  %356 = %353.0;
  (%354, %355, %356, meta[relay.Constant][10] /* ty=Tensor[(64), float64] */)
}

def @func_16408(%var_16406: Tensor[(99), float64]) -> (Tensor[(224), float32], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(10, 5, 5), float64], Tensor[(432), float32], Tensor[(42, 2), float32]) {
  @func_16405(%var_16406) /* ty=(Tensor[(224), float32], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(10, 5, 5), float64], Tensor[(432), float32], Tensor[(42, 2), float32]) */
}

def @func_19379() -> (Tensor[(2, 14, 3), float64],) {
  %357 = @func_5960() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %358 = %357.1;
  (%358,)
}

def @func_8018() -> (Tensor[(2, 14, 3), float64],) {
  %359 = @func_7975() /* ty=Tensor[(2, 14, 3), float64] */;
  (%359,)
}

def @func_12551() -> (Tensor[(2, 14, 3), float64],) {
  %362 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %360 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %361 = %360.0;
    (%361,)
  };
  %362() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_9185() -> Tensor[(2, 14, 3), float64] {
  %364 = fn () -> Tensor[(2, 14, 3), float64] {
    %363 = @func_8727() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %363.4
  };
  %364() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_1591(%var_1588: Tensor[(7, 3, 4), int32], %var_1589: Tensor[(432), float32], %var_1590: Tensor[(224), float32]) -> (Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(7, 3, 4), int16], Tensor[(9, 12, 4), float32]) {
  %387 = fn (%var_1532: Tensor[(7, 3, 4), int32], %var_1559: Tensor[(432), float32], %var_1560: Tensor[(224), float32]) -> (Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(7, 3, 4), int16], Tensor[(9, 12, 4), float32]) {
    %365 = cast(meta[relay.Constant][11] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %366 = cast(%var_1559, dtype="float32") /* ty=Tensor[(432), float32] */;
    %367 = cast(%var_1560, dtype="float32") /* ty=Tensor[(224), float32] */;
    %368 = reshape(%365, newshape=[]) /* ty=uint32 */;
    %369 = reshape(%366, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %370 = reshape(%367, newshape=[1, 224]) /* ty=Tensor[(1, 224), float32] */;
    %371 = @func_1313(%368, %369, %370) /* ty=(Tensor[(7, 15, 1), uint32], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(4, 14, 4), float32], Tensor[(1, 224), float32], Tensor[(9, 12, 4), float32], Tensor[(9, 12, 4), float32], Tensor[(7, 15, 1), float32]) */;
    %372 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 3, 4), int32] */, dtype="bool") /* ty=Tensor[(7, 3, 4), bool] */;
    %373 = shape_of(%var_1532, dtype="int32") /* ty=Tensor[(3), int32] */;
    %374 = cast(%var_1532, dtype="bool") /* ty=Tensor[(7, 3, 4), bool] */;
    %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %376 = less(%374, %375) /* ty=Tensor[(7, 3, 4), bool] */;
    %377 = cast(%376, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
    %378 = log2(%377) /* ty=Tensor[(7, 3, 4), float32] */;
    %379 = cast(%378, dtype="int16") /* ty=Tensor[(7, 3, 4), int16] */;
    %380 = cast(meta[relay.Constant][11] /* ty=uint32 */, dtype="int16") /* ty=int16 */;
    %381 = cast(%var_1559, dtype="float32") /* ty=Tensor[(432), float32] */;
    %382 = reshape(%381, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
    %383 = @func_793(%382) /* ty=(Tensor[(9, 12, 4), float32],) */;
    %384 = %371.1;
    %385 = bitwise_xor(%379, %380) /* ty=Tensor[(7, 3, 4), int16] */;
    %386 = %383.0;
    (%384, %var_1559, %var_1560, %385, %386)
  };
  %387(%var_1588, %var_1589, %var_1590) /* ty=(Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(7, 3, 4), int16], Tensor[(9, 12, 4), float32]) */
}

def @func_10866() -> (Tensor[(2, 14, 3), float64],) {
  @func_10864() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_5109() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_5107() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_10250() -> Tensor[(2, 14, 3), float64] {
  %388 = @func_3394() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %388.0
}

def @func_9929() -> (Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %394 = fn () -> (Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %389 = @func_8593() /* ty=(Tensor[(3, 2, 14), bool],) */;
    %390 = @func_8396() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %391 = %389.0;
    %392 = %390.1;
    %393 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
    (%391, %392, %393)
  };
  %394() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_9472(%var_9471: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), bool], Tensor[(480), float32], Tensor[(3, 2, 14), float32]) {
  %405 = fn (%var_9440: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), bool], Tensor[(480), float32], Tensor[(3, 2, 14), float32]) {
    %395 = @func_8286() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %396 = cast(%var_9440, dtype="float32") /* ty=Tensor[(480), float32] */;
    %397 = reshape(%396, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %398 = @func_6905(%397) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) */;
    %399 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %400 = @func_6715() /* ty=Tensor[(2, 14, 3), float64] */;
    %401 = @func_3800() /* ty=Tensor[(9, 1, 2), float64] */;
    %402 = %395.0;
    %403 = %398.0;
    %404 = %399.0;
    (%400, %401, %402, %403, %var_9440, %404)
  };
  %405(%var_9471) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), bool], Tensor[(480), float32], Tensor[(3, 2, 14), float32]) */
}

def @func_20485() -> Tensor[(2, 14, 3), float64] {
  @func_20483() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_5047() -> Tensor[(2, 14, 3), float64] {
  %407 = fn () -> Tensor[(2, 14, 3), float64] {
    %406 = @func_4354() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %406.0
  };
  %407() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_6716() -> Tensor[(2, 14, 3), float64] {
  %408 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_6548() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %408() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_2456() -> Tensor[(2, 14, 3), float64] {
  @func_1511() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_18369() -> (Tensor[(3, 2, 14), float32], Tensor[(6, 3, 11), float64], Tensor[(198), float64], Tensor[(2, 14, 3), float64]) {
  %416 = fn () -> (Tensor[(3, 2, 14), float32], Tensor[(6, 3, 11), float64], Tensor[(198), float64], Tensor[(2, 14, 3), float64]) {
    %409 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %410 = cast(meta[relay.Constant][13] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
    %411 = reshape(%410, newshape=[6, 3, 11]) /* ty=Tensor[(6, 3, 11), float64] */;
    %412 = @func_17397(%411) /* ty=(Tensor[(6, 3, 11), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 56), float32], Tensor[(432), float32]) */;
    %413 = %409.0;
    %414 = %412.0;
    %415 = @func_2719() /* ty=Tensor[(2, 14, 3), float64] */;
    (%413, %414, meta[relay.Constant][13] /* ty=Tensor[(198), float64] */, %415)
  };
  %416() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(6, 3, 11), float64], Tensor[(198), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_19030() -> (Tensor[(14, 8, 12), float64],) {
  %419 = fn () -> (Tensor[(14, 8, 12), float64],) {
    %417 = @func_13461() /* ty=(Tensor[(14, 8, 12), float64],) */;
    %418 = %417.0;
    (%418,)
  };
  %419() /* ty=(Tensor[(14, 8, 12), float64],) */
}

def @func_7662() -> (Tensor[(2, 14, 3), float64],) {
  @func_7660() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_22586() -> Tensor[(2, 14, 3), float64] {
  @func_22584() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_7073() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) {
  %427 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) {
    %420 = @func_6556() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %421 = @func_5854() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
    %422 = @func_2885() /* ty=(Tensor[(3, 2, 14), bool],) */;
    %423 = %420.0;
    %424 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
    %425 = %421.0;
    %426 = %422.0;
    (%423, %424, %425, %426)
  };
  %427() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */
}

def @func_1734() -> Tensor[(2, 14, 3), float64] {
  @func_1732() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_20266() -> (Tensor[(2, 14, 3), float64],) {
  %428 = @func_12244() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %429 = %428.0;
  (%429,)
}

def @func_12399() -> Tensor[(2, 14, 3), float64] {
  @func_9194() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_14768(%var_14767: Tensor[(12, 7, 9), float32]) -> (Tensor[(12, 7, 9), int64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(1, 7, 9), float64], Tensor[(2, 14, 3), float64]) {
  %443 = fn (%var_14719: Tensor[(12, 7, 9), float32]) -> (Tensor[(12, 7, 9), int64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(1, 7, 9), float64], Tensor[(2, 14, 3), float64]) {
    %430 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(1, 7, 9), float64] */;
    %431 = log(%430) /* ty=Tensor[(1, 7, 9), float64] */;
    %432 = cast(%431, dtype="float32") /* ty=Tensor[(1, 7, 9), float32] */;
    %433 = log2(%432) /* ty=Tensor[(1, 7, 9), float32] */;
    %434 = cast(%433, dtype="int64") /* ty=Tensor[(1, 7, 9), int64] */;
    %435 = cast(%var_14719, dtype="int64") /* ty=Tensor[(12, 7, 9), int64] */;
    %436 = cast(%433, dtype="float64") /* ty=Tensor[(1, 7, 9), float64] */;
    %437 = @func_12216() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) */;
    %438 = multiply(%434, %435) /* ty=Tensor[(12, 7, 9), int64] */;
    %439 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
    %440 = @func_8482() /* ty=Tensor[(2, 14, 3), float64] */;
    %441 = sigmoid(%436) /* ty=Tensor[(1, 7, 9), float64] */;
    %442 = %437.0;
    (%438, %439, %440, %441, %442)
  };
  %443(%var_14767) /* ty=(Tensor[(12, 7, 9), int64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(1, 7, 9), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_20665() -> Tensor[(3, 3, 8), float32] {
  @func_20663() /* ty=Tensor[(3, 3, 8), float32] */
}

def @func_13518() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(2, 14, 3), float64]) {
  %452 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(2, 14, 3), float64]) {
    %444 = @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %445 = cast(meta[relay.Constant][15] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %446 = reshape(%445, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
    %447 = @func_793(%446) /* ty=(Tensor[(9, 12, 4), float32],) */;
    %448 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %449 = %444.1;
    %450 = %447.0;
    %451 = %448.0;
    (%449, %450, meta[relay.Constant][15] /* ty=Tensor[(432), float32] */, %451)
  };
  %452() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(2, 14, 3), float64]) */
}

def @func_18541() -> (Tensor[(2, 14, 3), float64],) {
  @func_18539() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_21106() -> (Tensor[(2, 14, 3), float64], Tensor[(198), float64], Tensor[(198, 1), float64]) {
  %453 = @func_18516() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) */;
  %454 = cast(meta[relay.Constant][16] /* ty=Tensor[(198, 1), float64] */, dtype="float64") /* ty=Tensor[(198, 1), float64] */;
  %455 = reshape(%454, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %456 = @func_19882(%455) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(224), float32], Tensor[(198), float64], Tensor[(14, 8, 12), float64]) */;
  %457 = %453.0;
  %458 = %456.4;
  (%457, %458, meta[relay.Constant][16] /* ty=Tensor[(198, 1), float64] */)
}

def @func_15247() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(36, 12), float32]) {
  %459 = @func_10103() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(216, 2), float32], Tensor[(224), float32], Tensor[(36, 12), float32], Tensor[(3, 2, 14), float64]) */;
  %460 = @func_6548() /* ty=Tensor[(2, 14, 3), float64] */;
  %461 = @func_2556() /* ty=Tensor[(2, 14, 3), float64] */;
  %462 = %459.3;
  (%460, %461, %462)
}

def @func_16970() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %463 = @func_13722() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %464 = @func_6556() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %465 = %463.0;
  %466 = @func_8121() /* ty=Tensor[(2, 14, 3), float64] */;
  %467 = %464.0;
  (%465, %466, %467)
}

def @func_5660() -> (Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) {
  %475 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) {
    %468 = @func_4995() /* ty=(Tensor[(9, 8, 1), uint64], Tensor[(64), float64], Tensor[(2, 14, 3), float64], Tensor[(9, 1, 1), float32]) */;
    %469 = cast(meta[relay.Constant][17] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
    %470 = cast(meta[relay.Constant][17] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
    %471 = reshape(%469, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
    %472 = reshape(%470, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
    %473 = %468.2;
    %474 = @func_360(%471, %472) /* ty=Tensor[(10, 5, 5), float64] */;
    (%473, %474, meta[relay.Constant][17] /* ty=Tensor[(250), float64] */)
  };
  %475() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */
}

def @func_22993(%var_22992: Tensor[(432), float32]) -> (Tensor[(480), float32], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(2, 14, 3), float64]) {
  %484 = fn (%var_22974: Tensor[(432), float32]) -> (Tensor[(480), float32], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(2, 14, 3), float64]) {
    %476 = @func_14329() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(3, 2, 14), float32], Tensor[(480), float32]) */;
    %477 = cast(%var_22974, dtype="float32") /* ty=Tensor[(432), float32] */;
    %478 = reshape(%477, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
    %479 = @func_793(%478) /* ty=(Tensor[(9, 12, 4), float32],) */;
    %480 = @func_9833() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %481 = %476.4;
    %482 = %479.0;
    %483 = %480.0;
    (%481, %482, %var_22974, %483)
  };
  %484(%var_22992) /* ty=(Tensor[(480), float32], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(2, 14, 3), float64]) */
}

def @func_11585() -> (Tensor[(2, 14, 3), float64],) {
  @func_11583() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_9196() -> Tensor[(2, 14, 3), float64] {
  @func_9194() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_8893() -> (Tensor[(2, 14, 3), float64],) {
  @func_8891() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_9238() -> Tensor[(9, 1, 2), float64] {
  @func_9236() /* ty=Tensor[(9, 1, 2), float64] */
}

def @func_12807() -> Tensor[(2, 14, 3), float64] {
  %486 = fn () -> Tensor[(2, 14, 3), float64] {
    %485 = @func_5551() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64]) */;
    %485.2
  };
  %486() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_12050() -> (Tensor[(2, 14, 3), float64],) {
  %489 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %487 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
    %488 = %487.0;
    (%488,)
  };
  %489() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_7625() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_7623() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_5400(%var_5399: Tensor[(250, 1), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250, 1), float64]) {
  %495 = fn (%var_5396: Tensor[(250, 1), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250, 1), float64]) {
    %490 = cast(%var_5396, dtype="float64") /* ty=Tensor[(250, 1), float64] */;
    %491 = reshape(%490, newshape=[250]) /* ty=Tensor[(250), float64] */;
    %492 = @func_2419(%491) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64]) */;
    %493 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
    %494 = %492.3;
    (%493, %494, %var_5396)
  };
  %495(%var_5399) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250, 1), float64]) */
}

def @func_12216() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) {
  %496 = @func_8018() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %497 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %498 = %496.0;
  %499 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
  %500 = %497.0;
  (%498, %499, %500)
}

def @func_12708() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32]) {
  %501 = @func_6002() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %502 = cast(meta[relay.Constant][18] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %503 = reshape(%502, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %504 = @func_9735(%503) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(224), float32]) */;
  %505 = %501.0;
  %506 = %504.0;
  (%505, %506, meta[relay.Constant][18] /* ty=Tensor[(224), float32] */)
}

def @func_7977() -> Tensor[(2, 14, 3), float64] {
  @func_7975() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_15111() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %511 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %507 = @func_5107() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %508 = @func_11833() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
    %509 = %507.2;
    %510 = %508.0;
    (%509, %510)
  };
  %511() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_19381() -> (Tensor[(2, 14, 3), float64],) {
  @func_19379() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_12246() -> (Tensor[(2, 14, 3), float64],) {
  @func_12244() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_14331() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(3, 2, 14), float32], Tensor[(480), float32]) {
  @func_14329() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(3, 2, 14), float32], Tensor[(480), float32]) */
}

def @func_7454() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %517 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %512 = @func_5432() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %513 = @func_5960() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %514 = %512.1;
    %515 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
    %516 = %513.1;
    (%514, %515, %516)
  };
  %517() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_4913() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) {
  %518 = @func_4567() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %519 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %520 = @func_2719() /* ty=Tensor[(2, 14, 3), float64] */;
  %521 = cast(%520, dtype="float32") /* ty=Tensor[(2, 14, 3), float32] */;
  %522 = reshape(%521, newshape=[3, 2, 14]) /* ty=Tensor[(3, 2, 14), float32] */;
  %523 = @func_3075(%522) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
  %524 = @func_3612() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */;
  %525 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %526 = @func_4279() /* ty=Tensor[(2, 14, 3), float64] */;
  %527 = %518.0;
  %528 = %519.0;
  %529 = %523.0;
  %530 = %524.3;
  %531 = %525.0;
  (%520, %526, %527, %528, %529, %530, %531)
}

def @func_14109() -> (Tensor[(4, 14, 4), float32], Tensor[(2, 14, 3), float64], Tensor[(9, ?, 2), bool], Tensor[(3, 2, 14), bool]) {
  %546 = fn () -> (Tensor[(4, 14, 4), float32], Tensor[(2, 14, 3), float64], Tensor[(9, ?, 2), bool], Tensor[(3, 2, 14), bool]) {
    %532 = @func_6528() /* ty=(Tensor[(3, 2, 14), int16], Tensor[(4, 14, 4), float32], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %533 = @func_10555() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %534 = @func_3800() /* ty=Tensor[(9, 1, 2), float64] */;
    %535 = cast(%534, dtype="float32") /* ty=Tensor[(9, 1, 2), float32] */;
    %536 = sigmoid(%535) /* ty=Tensor[(9, 1, 2), float32] */;
    %537 = cast(%534, dtype="bool") /* ty=Tensor[(9, 1, 2), bool] */;
    %538 = shape_of(%536, dtype="int32") /* ty=Tensor[(3), int32] */;
    %539 = cast(%536, dtype="bool") /* ty=Tensor[(9, 1, 2), bool] */;
    %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %541 = @func_9928() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %542 = %532.1;
    %543 = %533.0;
    %544 = greater(%539, %540) /* ty=Tensor[(9, ?, 2), bool] */;
    %545 = %541.0;
    (%542, %543, %544, %545)
  };
  %546() /* ty=(Tensor[(4, 14, 4), float32], Tensor[(2, 14, 3), float64], Tensor[(9, ?, 2), bool], Tensor[(3, 2, 14), bool]) */
}

def @func_16444() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(3, 2, 14), float32]) {
  %547 = cast(meta[relay.Constant][19] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %548 = reshape(%547, newshape=[25, 10]) /* ty=Tensor[(25, 10), float64] */;
  %549 = @func_11915(%548) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(25, 10), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %550 = @func_11708() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %551 = @func_3331() /* ty=Tensor[(2, 14, 3), float64] */;
  %552 = %549.5;
  %553 = %550.0;
  (%551, %552, meta[relay.Constant][19] /* ty=Tensor[(250), float64] */, %553)
}

def @func_18085() -> (Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) {
  %554 = @func_8593() /* ty=(Tensor[(3, 2, 14), bool],) */;
  %555 = @func_6175() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %556 = %554.0;
  %557 = %555.1;
  (%556, %557)
}

def @func_20366() -> Tensor[(2, 14, 3), float64] {
  %559 = fn () -> Tensor[(2, 14, 3), float64] {
    %558 = @func_10936() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %558.0
  };
  %559() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_20435() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %567 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %560 = @func_11974() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %561 = @func_10555() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %562 = @func_15110() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %563 = %560.1;
    %564 = @func_13496() /* ty=Tensor[(2, 14, 3), float64] */;
    %565 = %561.0;
    %566 = %562.1;
    (%563, %564, %565, %566)
  };
  %567() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_15283() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(2, 112), float32]) {
  %568 = @func_10821() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */;
  %569 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 112), float32] */, dtype="float32") /* ty=Tensor[(2, 112), float32] */;
  %570 = reshape(%569, newshape=[4, 14, 4]) /* ty=Tensor[(4, 14, 4), float32] */;
  %571 = %568.1;
  %572 = @func_8482() /* ty=Tensor[(2, 14, 3), float64] */;
  %573 = @func_186(%570) /* ty=Tensor[(4, 14, 4), float32] */;
  (%571, %572, %573, meta[relay.Constant][20] /* ty=Tensor[(2, 112), float32] */)
}

def @func_22097(%var_22095: Tensor[(4, 5, 1), int32], %var_22096: Tensor[(4, 5, 4), int32]) -> (Tensor[(4, 5, 4), int32],) {
  @func_22093(%var_22095, %var_22096) /* ty=(Tensor[(4, 5, 4), int32],) */
}

def @func_11060(%var_11056: Tensor[(84), float32], %var_11057: Tensor[(480), float32], %var_11058: Tensor[(64), float64], %var_11059: Tensor[(112), uint32]) -> (Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(216, 2), int32], Tensor[(480), float32], Tensor[(64), float64], Tensor[(112), uint32], Tensor[(9, 216, 2), float64]) {
  %600 = fn (%var_11003: Tensor[(84), float32], %var_11026: Tensor[(480), float32], %var_11027: Tensor[(64), float64], %var_11028: Tensor[(112), uint32]) -> (Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(216, 2), int32], Tensor[(480), float32], Tensor[(64), float64], Tensor[(112), uint32], Tensor[(9, 216, 2), float64]) {
    %574 = @func_10103() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(216, 2), float32], Tensor[(224), float32], Tensor[(36, 12), float32], Tensor[(3, 2, 14), float64]) */;
    %575 = %574.1;
    %576 = cast(%575, dtype="float32") /* ty=Tensor[(216, 2), float32] */;
    %577 = cast(%var_11003, dtype="float32") /* ty=Tensor[(84), float32] */;
    %578 = reshape(%576, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %579 = reshape(%577, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %580 = @func_4046(%578, %579) /* ty=(Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(432), float32], Tensor[(64), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(9, ?, 2), float64]) */;
    %581 = cast(meta[relay.Constant][21] /* ty=Tensor[(216, 2), float32] */, dtype="int32") /* ty=Tensor[(216, 2), int32] */;
    %582 = shape_of(%575, dtype="int32") /* ty=Tensor[(2), int32] */;
    %583 = cast(%575, dtype="int32") /* ty=Tensor[(216, 2), int32] */;
    %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %585 = cast(%var_11026, dtype="float32") /* ty=Tensor[(480), float32] */;
    %586 = cast(%var_11027, dtype="float64") /* ty=Tensor[(64), float64] */;
    %587 = cast(%var_11027, dtype="float64") /* ty=Tensor[(64), float64] */;
    %588 = cast(%var_11028, dtype="uint32") /* ty=Tensor[(112), uint32] */;
    %589 = reshape(%585, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %590 = reshape(%586, newshape=[32, 2]) /* ty=Tensor[(32, 2), float64] */;
    %591 = reshape(%587, newshape=[32, 2]) /* ty=Tensor[(32, 2), float64] */;
    %592 = reshape(%588, newshape=[112, 1]) /* ty=Tensor[(112, 1), uint32] */;
    %593 = @func_6840(%589, %590, %591, %592) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(32, 2), bool], Tensor[(9, ?, 2), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(112, 1), uint32]) */;
    %594 = %593.4;
    %595 = cast(%594, dtype="float64") /* ty=Tensor[(9, ?, 2), float64] */;
    %596 = cast(meta[relay.Constant][21] /* ty=Tensor[(216, 2), float32] */, dtype="float64") /* ty=Tensor[(216, 2), float64] */;
    %597 = %580.5;
    %598 = minimum(%583, %584) /* ty=Tensor[(216, 2), int32] */;
    %599 = mod(%595, %596) /* ty=Tensor[(9, 216, 2), float64] */;
    (%597, %var_11003, %598, %var_11026, %var_11027, %var_11028, %599)
  };
  %600(%var_11056, %var_11057, %var_11058, %var_11059) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(216, 2), int32], Tensor[(480), float32], Tensor[(64), float64], Tensor[(112), uint32], Tensor[(9, 216, 2), float64]) */
}

def @func_795(%var_794: Tensor[(9, 12, 4), float32]) -> (Tensor[(9, 12, 4), float32],) {
  %603 = fn (%var_779: Tensor[(9, 12, 4), float32]) -> (Tensor[(9, 12, 4), float32],) {
    %601 = cast(%var_779, dtype="float32") /* ty=Tensor[(9, 12, 4), float32] */;
    %602 = cos(%601) /* ty=Tensor[(9, 12, 4), float32] */;
    (%602,)
  };
  %603(%var_794) /* ty=(Tensor[(9, 12, 4), float32],) */
}

def @func_8472() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_8470() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_6002() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %604 = @func_2556() /* ty=Tensor[(2, 14, 3), float64] */;
  %605 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
  (%604, %605)
}

def @func_19833() -> (Tensor[(2, 14, 3), float64],) {
  @func_19831() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_6548() -> Tensor[(2, 14, 3), float64] {
  @func_1511() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_11975() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %609 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %606 = @func_3439() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %607 = @func_8482() /* ty=Tensor[(2, 14, 3), float64] */;
    %608 = %606.1;
    (%607, %608)
  };
  %609() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_17859() -> (Tensor[(2, 14, 3), float64], Tensor[(16, 5, 16), float64]) {
  %614 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(16, 5, 16), float64]) {
    %610 = @func_12771() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %611 = @func_11549() /* ty=(Tensor[(16, 5, 16), float64],) */;
    %612 = %610.3;
    %613 = %611.0;
    (%612, %613)
  };
  %614() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(16, 5, 16), float64]) */
}

def @func_20114(%var_20075: Tensor[(2, 216), float32]) -> (Tensor[(9, 8, 1), float32], Tensor[(224), float32], Tensor[(224), float32], Tensor[(2, 216), float32], Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(112), uint32]) {
  %615 = @func_10295() /* ty=(Tensor[(9, 8, 1), uint64],) */;
  %616 = %615.0;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(9, 8, 1), float32] */;
  %618 = cast(meta[relay.Constant][22] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %619 = cast(%var_20075, dtype="float32") /* ty=Tensor[(2, 216), float32] */;
  %620 = reshape(%618, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %621 = reshape(%619, newshape=[216, 2]) /* ty=Tensor[(216, 2), float32] */;
  %622 = @func_5250(%620, %621) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 14, 4), float64], Tensor[(224), float32], Tensor[(216, 2), float32]) */;
  %623 = cast(meta[relay.Constant][23] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %624 = cast(meta[relay.Constant][23] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %625 = reshape(%623, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %626 = reshape(%624, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %627 = @func_12615() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %628 = cast(meta[relay.Constant][24] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %629 = cast(meta[relay.Constant][24] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %630 = cast(meta[relay.Constant][24] /* ty=Tensor[(112), uint32] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %631 = cast(meta[relay.Constant][24] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %632 = reshape(%628, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), uint32] */;
  %633 = reshape(%629, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), uint32] */;
  %634 = reshape(%630, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), float64] */;
  %635 = reshape(%631, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), uint32] */;
  %636 = @func_4722(%632, %633, %634, %635) /* ty=(Tensor[(14, 4, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(14, 4, 2), float64], Tensor[(14, 4, 2), bool]) */;
  %637 = cos(%617) /* ty=Tensor[(9, 8, 1), float32] */;
  %638 = %622.3;
  %639 = @func_360(%625, %626) /* ty=Tensor[(10, 5, 5), float64] */;
  %640 = %627.2;
  %641 = %636.1;
  (%637, %638, meta[relay.Constant][22] /* ty=Tensor[(224), float32] */, %var_20075, %639, meta[relay.Constant][23] /* ty=Tensor[(250), float64] */, %640, %641, meta[relay.Constant][24] /* ty=Tensor[(112), uint32] */)
}

def @func_15536() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(480, 1), float32]) {
  %650 = fn () -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(480, 1), float32]) {
    %642 = @func_11708() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %643 = @func_13257() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %644 = cast(meta[relay.Constant][25] /* ty=Tensor[(480, 1), float32] */, dtype="float32") /* ty=Tensor[(480, 1), float32] */;
    %645 = reshape(%644, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %646 = @func_6905(%645) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) */;
    %647 = %642.0;
    %648 = %643.0;
    %649 = %646.1;
    (%647, %648, %649, meta[relay.Constant][25] /* ty=Tensor[(480, 1), float32] */)
  };
  %650() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(480, 1), float32]) */
}

def @func_15576() -> (Tensor[(65, 15), float64],) {
  %653 = fn () -> (Tensor[(65, 15), float64],) {
    %651 = @func_9670() /* ty=(Tensor[(65, 15), float64],) */;
    %652 = %651.0;
    (%652,)
  };
  %653() /* ty=(Tensor[(65, 15), float64],) */
}

def @func_16796() -> (Tensor[(2, 14, 3), float64],) {
  %655 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %654 = @func_2556() /* ty=Tensor[(2, 14, 3), float64] */;
    (%654,)
  };
  %655() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_2858(%var_2856: Tensor[(2, 14, 3), float64]) -> (Tensor[(2, 14, 3), uint32],) {
  @func_2855(%var_2856) /* ty=(Tensor[(2, 14, 3), uint32],) */
}

def @func_14876() -> (Tensor[(2, 14, 3), float64],) {
  %656 = @func_7741() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %657 = %656.1;
  (%657,)
}

def @func_3800() -> Tensor[(9, 1, 2), float64] {
  %658 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 1, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 1, 2), float64] */;
  atan(%658) /* ty=Tensor[(9, 1, 2), float64] */
}

def @func_4995() -> (Tensor[(9, 8, 1), uint64], Tensor[(64), float64], Tensor[(2, 14, 3), float64], Tensor[(9, 1, 1), float32]) {
  %659 = cast(meta[relay.Constant][27] /* ty=Tensor[(9, 1, 1), uint64] */, dtype="uint64") /* ty=Tensor[(9, 1, 1), uint64] */;
  %660 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 8, 1), uint64] */, dtype="uint64") /* ty=Tensor[(9, 8, 1), uint64] */;
  %661 = @func_3612() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */;
  %662 = cast(meta[relay.Constant][27] /* ty=Tensor[(9, 1, 1), uint64] */, dtype="float32") /* ty=Tensor[(9, 1, 1), float32] */;
  %663 = bitwise_or(%659, %660) /* ty=Tensor[(9, 8, 1), uint64] */;
  %664 = %661.2;
  %665 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  %666 = log(%662) /* ty=Tensor[(9, 1, 1), float32] */;
  (%663, %664, %665, %666)
}

def @func_8729() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_8727() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_22388() -> (Tensor[(3, 2, 14), float32],) {
  @func_22386() /* ty=(Tensor[(3, 2, 14), float32],) */
}

def @func_11318() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %671 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %667 = @func_9833() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %668 = @func_11119() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %669 = %667.0;
    %670 = %668.0;
    (%669, %670)
  };
  %671() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_16446() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(3, 2, 14), float32]) {
  @func_16444() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(3, 2, 14), float32]) */
}

def @func_4915() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) {
  @func_4913() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */
}

def @func_16985() -> (Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) {
  @func_16983() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */
}

def @func_14440() -> Tensor[(3, 2, 14), float32] {
  @func_14438() /* ty=Tensor[(3, 2, 14), float32] */
}

def @func_4722(%var_4643: Tensor[(14, 4, 2), uint32], %var_4644: Tensor[(14, 4, 2), uint32], %var_4708: Tensor[(14, 4, 2), float64], %var_4713: Tensor[(14, 4, 2), uint32]) -> (Tensor[(14, 4, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(14, 4, 2), float64], Tensor[(14, 4, 2), bool]) {
  %672 = cast(%var_4643, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %673 = sqrt(%672) /* ty=Tensor[(14, 4, 2), float64] */;
  %674 = cast(%var_4644, dtype="uint32") /* ty=Tensor[(14, 4, 2), uint32] */;
  %675 = shape_of(%var_4643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%var_4643, dtype="uint32") /* ty=Tensor[(14, 4, 2), uint32] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %678 = bitwise_and(%676, %677) /* ty=Tensor[(14, 4, 2), uint32] */;
  %679 = cast(%678, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %680 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%673, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %683 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %684 = cast(%var_4708, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %685 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(%673, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %688 = cast(%var_4713, dtype="bool") /* ty=Tensor[(14, 4, 2), bool] */;
  %689 = shape_of(%var_4643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%var_4643, dtype="bool") /* ty=Tensor[(14, 4, 2), bool] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %692 = floor_mod(%681, %682) /* ty=Tensor[(14, 4, 2), float64] */;
  %693 = %683.0;
  %694 = mod(%686, %687) /* ty=Tensor[(14, 4, 2), float64] */;
  %695 = logical_and(%690, %691) /* ty=Tensor[(14, 4, 2), bool] */;
  (%692, %693, %694, %695)
}

def @func_10738() -> (Tensor[(2, 14, 3), float64],) {
  @func_10736() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_17304() -> Tensor[(2, 14, 3), float64] {
  @func_17302() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_11524(%var_11522: Tensor[(7, 5, 16), float64], %var_11523: Tensor[(7, 5, 16), float64]) -> (Tensor[(7, 5, 16), float64], Tensor[(3, 2, 14), float32]) {
  %703 = fn (%var_11495: Tensor[(7, 5, 16), float64], %var_11496: Tensor[(7, 5, 16), float64]) -> (Tensor[(7, 5, 16), float64], Tensor[(3, 2, 14), float32]) {
    %696 = cast(%var_11496, dtype="float64") /* ty=Tensor[(7, 5, 16), float64] */;
    %697 = shape_of(%var_11495, dtype="int32") /* ty=Tensor[(3), int32] */;
    %698 = cast(%var_11495, dtype="float64") /* ty=Tensor[(7, 5, 16), float64] */;
    %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %700 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %701 = floor_divide(%698, %699) /* ty=Tensor[(7, 5, 16), float64] */;
    %702 = %700.0;
    (%701, %702)
  };
  %703(%var_11522, %var_11523) /* ty=(Tensor[(7, 5, 16), float64], Tensor[(3, 2, 14), float32]) */
}

def @func_21753(%var_21666: Tensor[(12, 2, 13), float32]) -> (Tensor[(12, 2, 13), float32], Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64], Tensor[(2, 14, 3), float64]) {
  %704 = cast(%var_21666, dtype="float32") /* ty=Tensor[(12, 2, 13), float32] */;
  %705 = @func_21654() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %706 = @func_13347() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(14, 96), float64]) */;
  %707 = @func_10736() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %708 = @func_14641() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %709 = @func_19487() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %710 = @func_21575() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64]) */;
  %711 = rsqrt(%704) /* ty=Tensor[(12, 2, 13), float32] */;
  %712 = %705.0;
  %713 = %706.1;
  %714 = %707.0;
  %715 = %708.0;
  %716 = %709.1;
  %717 = %710.1;
  %718 = @func_8093() /* ty=Tensor[(2, 14, 3), float64] */;
  (%711, %712, %713, %714, %715, %716, %717, %718)
}

def @func_12502() -> Tensor[(2, 14, 3), float64] {
  @func_12500() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_21833() -> Tensor[(2, 14, 3), float64] {
  %720 = fn () -> Tensor[(2, 14, 3), float64] {
    %719 = @func_19198() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %719.0
  };
  %720() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_4086(%var_4083: Tensor[(3, 9, 1), float64], %var_4084: Tensor[(84), int32], %var_4085: Tensor[(224, 1), float32]) -> (Tensor[(3, 9, 1), float64], Tensor[(7, 3, 4), int16], Tensor[(84), int32], Tensor[(1, 432), float32], Tensor[(224, 1), float32]) {
  @func_4081(%var_4083, %var_4084, %var_4085) /* ty=(Tensor[(3, 9, 1), float64], Tensor[(7, 3, 4), int16], Tensor[(84), int32], Tensor[(1, 432), float32], Tensor[(224, 1), float32]) */
}

def @func_4631() -> (Tensor[(2, 14, 3), float64],) {
  %723 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %721 = @func_3439() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %722 = %721.0;
    (%722,)
  };
  %723() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_13107() -> (Tensor[(2, 14, 3), float64],) {
  @func_13105() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_13774() -> (Tensor[(2, 14, 3), float64],) {
  %724 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %725 = %724.0;
  (%725,)
}

def @func_11583() -> (Tensor[(2, 14, 3), float64],) {
  %726 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %727 = %726.0;
  (%727,)
}

def @func_22475(%var_22473: Tensor[(8, 13, 5), float64], %var_22474: Tensor[(8, 13, 5), float64]) -> (Tensor[(8, 13, 5), bool], Tensor[(8, 13, 5), float32]) {
  %735 = fn (%var_22461: Tensor[(8, 13, 5), float64], %var_22462: Tensor[(8, 13, 5), float64]) -> (Tensor[(8, 13, 5), bool], Tensor[(8, 13, 5), float32]) {
    %728 = cast(%var_22462, dtype="bool") /* ty=Tensor[(8, 13, 5), bool] */;
    %729 = shape_of(%var_22461, dtype="int32") /* ty=Tensor[(3), int32] */;
    %730 = cast(%var_22461, dtype="bool") /* ty=Tensor[(8, 13, 5), bool] */;
    %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %732 = cast(%var_22462, dtype="float32") /* ty=Tensor[(8, 13, 5), float32] */;
    %733 = greater(%730, %731) /* ty=Tensor[(8, 13, 5), bool] */;
    %734 = asinh(%732) /* ty=Tensor[(8, 13, 5), float32] */;
    (%733, %734)
  };
  %735(%var_22473, %var_22474) /* ty=(Tensor[(8, 13, 5), bool], Tensor[(8, 13, 5), float32]) */
}

def @func_3340(%var_3335: float64, %var_3336: Tensor[(12, 5, 1), float64]) -> (Tensor[(12, 5, 1), float64],) {
  %736 = cast(%var_3335, dtype="float64") /* ty=float64 */;
  %737 = cast(%var_3336, dtype="float64") /* ty=Tensor[(12, 5, 1), float64] */;
  %738 = floor_divide(%736, %737) /* ty=Tensor[(12, 5, 1), float64] */;
  (%738,)
}

def @func_18087() -> (Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) {
  @func_18085() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */
}

def @func_4728(%var_4724: Tensor[(14, 4, 2), uint32], %var_4725: Tensor[(14, 4, 2), uint32], %var_4726: Tensor[(14, 4, 2), float64], %var_4727: Tensor[(14, 4, 2), uint32]) -> (Tensor[(14, 4, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(14, 4, 2), float64], Tensor[(14, 4, 2), bool]) {
  @func_4722(%var_4724, %var_4725, %var_4726, %var_4727) /* ty=(Tensor[(14, 4, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(14, 4, 2), float64], Tensor[(14, 4, 2), bool]) */
}

def @func_22584() -> Tensor[(2, 14, 3), float64] {
  %739 = @func_7453() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %739.1
}

def @func_10406() -> (Tensor[(2, 14, 3), float64],) {
  @func_10404() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_6109() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %743 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %740 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %741 = @func_2719() /* ty=Tensor[(2, 14, 3), float64] */;
    %742 = %740.0;
    (%741, %742)
  };
  %743() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_4050(%var_4048: Tensor[(432), float32], %var_4049: Tensor[(84), float32]) -> (Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(432), float32], Tensor[(64), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(9, ?, 2), float64]) {
  @func_4046(%var_4048, %var_4049) /* ty=(Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(432), float32], Tensor[(64), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(9, ?, 2), float64]) */
}

def @func_7985() -> Tensor[(3, 2, 14), float32] {
  @func_7983() /* ty=Tensor[(3, 2, 14), float32] */
}

def @func_20997() -> (Tensor[(2, 14, 3), float64],) {
  %744 = @func_11583() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %745 = %744.0;
  (%745,)
}

def @func_10736() -> (Tensor[(2, 14, 3), float64],) {
  %746 = @func_2162() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %747 = %746.0;
  (%747,)
}

def @func_15917() -> (Tensor[(2, 14, 3), float64],) {
  @func_15915() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_2151() -> Tensor[(2, 14, 3), float64] {
  %748 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_1632() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %748() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_6550() -> Tensor[(2, 14, 3), float64] {
  @func_6548() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_22345() -> (Tensor[(15, 5, 13), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %749 = @func_8108() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(975), float64]) */;
  %750 = @func_15992() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %751 = %749.1;
  %752 = @func_9184() /* ty=Tensor[(2, 14, 3), float64] */;
  %753 = %750.0;
  (%751, %752, %753)
}

def @func_12092(%var_12091: Tensor[(9, 11, 1), float64]) -> (Tensor[(9, 11, ?), int64],) {
  %761 = fn (%var_12083: Tensor[(9, 11, 1), float64]) -> (Tensor[(9, 11, ?), int64],) {
    %754 = cast(%var_12083, dtype="float64") /* ty=Tensor[(9, 11, 1), float64] */;
    %755 = rsqrt(%754) /* ty=Tensor[(9, 11, 1), float64] */;
    %756 = cast(%var_12083, dtype="int64") /* ty=Tensor[(9, 11, 1), int64] */;
    %757 = shape_of(%755, dtype="int32") /* ty=Tensor[(3), int32] */;
    %758 = cast(%755, dtype="int64") /* ty=Tensor[(9, 11, 1), int64] */;
    %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %760 = logical_xor(%758, %759) /* ty=Tensor[(9, 11, ?), int64] */;
    (%760,)
  };
  %761(%var_12091) /* ty=(Tensor[(9, 11, ?), int64],) */
}

def @func_12916(%var_12915: Tensor[(60), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 9), float32], Tensor[(450), float32]) {
  %776 = fn (%var_12887: Tensor[(60), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 9), float32], Tensor[(450), float32]) {
    %762 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
    %763 = cast(5.71117f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %764 = cast(%var_12887, dtype="float64") /* ty=Tensor[(60), float64] */;
    %765 = reshape(%763, newshape=[]) /* ty=float64 */;
    %766 = reshape(%764, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %767 = @func_7319(%765, %766) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64]) */;
    %768 = cast(meta[relay.Constant][29] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
    %769 = reshape(%768, newshape=[10, 5, 9]) /* ty=Tensor[(10, 5, 9), float32] */;
    %770 = @func_8494(%769) /* ty=(Tensor[(10, 5, 9), float32],) */;
    %771 = %762.0;
    %772 = @func_10250() /* ty=Tensor[(2, 14, 3), float64] */;
    %773 = %767.2;
    %774 = @func_6715() /* ty=Tensor[(2, 14, 3), float64] */;
    %775 = %770.0;
    (%771, %772, %773, 5.71117f64 /* ty=float64 */, %var_12887, %774, %775, meta[relay.Constant][29] /* ty=Tensor[(450), float32] */)
  };
  %776(%var_12915) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 9), float32], Tensor[(450), float32]) */
}

def @func_22457() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %784 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %777 = @func_14411() /* ty=(Tensor[(3, 2, 14), float64], Tensor[(3, 2, 14), float32]) */;
    %778 = @func_20346() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %779 = @func_15992() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %780 = @func_19249() /* ty=Tensor[(2, 14, 3), float64] */;
    %781 = %777.0;
    %782 = %778.0;
    %783 = %779.1;
    (%780, %781, %782, %783)
  };
  %784() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_6652() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %785 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %786 = @func_6160() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %787 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %788 = %785.0;
  %789 = %786.0;
  %790 = %787.0;
  (%788, %789, %790)
}

def @func_6654() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_6652() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_20232() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32]) {
  %791 = @func_12550() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %792 = %791.0;
  %793 = cast(%792, dtype="int32") /* ty=Tensor[(2, 14, 3), int32] */;
  %794 = cast(meta[relay.Constant][30] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %795 = cast(meta[relay.Constant][31] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %796 = reshape(%793, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), int32] */;
  %797 = reshape(%794, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %798 = reshape(%795, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %799 = @func_1587(%796, %797, %798) /* ty=(Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(7, 3, 4), int16], Tensor[(9, 12, 4), float32]) */;
  %800 = %799.4;
  (%792, %800, meta[relay.Constant][30] /* ty=Tensor[(432), float32] */, meta[relay.Constant][31] /* ty=Tensor[(224), float32] */)
}

def @func_5936(%var_5929: Tensor[(3, 2, 14), float32]) -> Tensor[(3, 2, 14), float64] {
  %801 = @func_3854() /* ty=Tensor[(3, 2, 14), float32] */;
  %802 = cast(%var_5929, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%801, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%804, %805) /* ty=Tensor[(3, 2, 14), float64] */
}

def @func_10637() -> (Tensor[(2, 14, 3), float64],) {
  %806 = @func_8286() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %807 = %806.0;
  (%807,)
}

def @func_5447(%var_5445: Tensor[(15, 5, 14), float64]) -> Tensor[(15, 5, 14), float64] {
  @func_5444(%var_5445) /* ty=Tensor[(15, 5, 14), float64] */
}

def @func_9154() -> Tensor[(2, 14, 3), float64] {
  %808 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_9018() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %808() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_11708() -> (Tensor[(3, 2, 14), float32],) {
  %809 = @func_4234() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %810 = %809.0;
  (%810,)
}

def @func_8727() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %811 = @func_6002() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %812 = @func_3612() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */;
  %813 = %811.0;
  %814 = @func_4279() /* ty=Tensor[(2, 14, 3), float64] */;
  %815 = %812.4;
  %816 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
  %817 = @func_7975() /* ty=Tensor[(2, 14, 3), float64] */;
  (%813, %814, %815, %816, %817)
}

def @func_18517() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) {
  %822 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) {
    %818 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %819 = @func_7072() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
    %820 = %818.0;
    %821 = %819.1;
    (%820, %821)
  };
  %822() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) */
}

def @func_6965() -> Tensor[(2, 14, 3), float64] {
  %824 = fn () -> Tensor[(2, 14, 3), float64] {
    %823 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %823.0
  };
  %824() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_3802() -> Tensor[(9, 1, 2), float64] {
  @func_3800() /* ty=Tensor[(9, 1, 2), float64] */
}

def @func_15587() -> (Tensor[(2, 14, 3), float64],) {
  @func_15585() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_19251() -> Tensor[(2, 14, 3), float64] {
  @func_19249() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_3182(%var_3180: Tensor[(480), float32], %var_3181: Tensor[(4, 16), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float32], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(4, 16), float64]) {
  %841 = fn (%var_3139: Tensor[(480), float32], %var_3171: Tensor[(4, 16), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float32], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(4, 16), float64]) {
    %825 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %826 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
    %827 = cast(%826, dtype="float32") /* ty=Tensor[(2, 14, 3), float32] */;
    %828 = cast(%var_3139, dtype="float32") /* ty=Tensor[(480), float32] */;
    %829 = reshape(%828, newshape=[12, 8, 5]) /* ty=Tensor[(12, 8, 5), float32] */;
    %830 = @func_2709(%829) /* ty=(Tensor[(12, 8, 5), float32],) */;
    %831 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
    %832 = cast(%var_3171, dtype="float64") /* ty=Tensor[(4, 16), float64] */;
    %833 = reshape(%832, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
    %834 = @func_1447(%833) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
    %835 = %825.0;
    %836 = asin(%827) /* ty=Tensor[(2, 14, 3), float32] */;
    %837 = %830.0;
    %838 = %831.0;
    %839 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
    %840 = %834.1;
    (%835, %836, %837, %var_3139, %838, %839, %840, %var_3171)
  };
  %841(%var_3180, %var_3181) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float32], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(4, 16), float64]) */
}

def @func_14438() -> Tensor[(3, 2, 14), float32] {
  %842 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %842.0
}

def @func_20234() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32]) {
  @func_20232() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32]) */
}

def @func_20537() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_20535() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_20535() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %843 = @func_18865() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %844 = %843.0;
  %845 = @func_9039() /* ty=Tensor[(2, 14, 3), float64] */;
  (%844, %845)
}

def @func_12617() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_12615() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_21417() -> (Tensor[(3, 2, 14), float32], Tensor[(112, 1), uint32], Tensor[(480), float32], Tensor[(4, 16), float64], Tensor[(56, 2), uint32]) {
  %846 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %847 = cast(meta[relay.Constant][32] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %848 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 16), float64] */, dtype="float64") /* ty=Tensor[(4, 16), float64] */;
  %849 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 16), float64] */, dtype="float64") /* ty=Tensor[(4, 16), float64] */;
  %850 = cast(meta[relay.Constant][34] /* ty=Tensor[(56, 2), uint32] */, dtype="uint32") /* ty=Tensor[(56, 2), uint32] */;
  %851 = reshape(%847, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %852 = reshape(%848, newshape=[32, 2]) /* ty=Tensor[(32, 2), float64] */;
  %853 = reshape(%849, newshape=[32, 2]) /* ty=Tensor[(32, 2), float64] */;
  %854 = reshape(%850, newshape=[112, 1]) /* ty=Tensor[(112, 1), uint32] */;
  %855 = @func_6840(%851, %852, %853, %854) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(32, 2), bool], Tensor[(9, ?, 2), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(112, 1), uint32]) */;
  %856 = %846.0;
  %857 = %855.7;
  (%856, %857, meta[relay.Constant][32] /* ty=Tensor[(480), float32] */, meta[relay.Constant][33] /* ty=Tensor[(4, 16), float64] */, meta[relay.Constant][34] /* ty=Tensor[(56, 2), uint32] */)
}

def @func_20346() -> (Tensor[(2, 14, 3), float64],) {
  %858 = @func_17715() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %859 = %858.1;
  (%859,)
}

def @func_3854() -> Tensor[(3, 2, 14), float32] {
  %860 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %860.0
}

def @func_8483() -> Tensor[(2, 14, 3), float64] {
  %861 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_4279() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %861() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_17070() -> (Tensor[(2, 14, 3), float64],) {
  %864 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %862 = @func_12167() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %863 = %862.0;
    (%863,)
  };
  %864() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_15585() -> (Tensor[(2, 14, 3), float64],) {
  %865 = @func_8121() /* ty=Tensor[(2, 14, 3), float64] */;
  (%865,)
}

def @func_9834() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %868 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %866 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
    %867 = @func_6964() /* ty=Tensor[(2, 14, 3), float64] */;
    (%866, %867)
  };
  %868() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_17397(%var_17336: Tensor[(6, 3, 11), float64]) -> (Tensor[(6, 3, 11), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 56), float32], Tensor[(432), float32]) {
  %869 = cast(%var_17336, dtype="float64") /* ty=Tensor[(6, 3, 11), float64] */;
  %870 = @func_11974() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %871 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 56), float32] */, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %872 = cast(meta[relay.Constant][36] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %873 = reshape(%871, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %874 = reshape(%872, newshape=[216, 2]) /* ty=Tensor[(216, 2), float32] */;
  %875 = @func_5250(%873, %874) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 14, 4), float64], Tensor[(224), float32], Tensor[(216, 2), float32]) */;
  %876 = cosh(%869) /* ty=Tensor[(6, 3, 11), float64] */;
  %877 = %870.1;
  %878 = %875.3;
  (%876, %877, %878, meta[relay.Constant][35] /* ty=Tensor[(4, 56), float32] */, meta[relay.Constant][36] /* ty=Tensor[(432), float32] */)
}

def @func_16019() -> (Tensor[(2, 14, 3), float64],) {
  %880 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %879 = @func_11646() /* ty=Tensor[(2, 14, 3), float64] */;
    (%879,)
  };
  %880() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_14878() -> (Tensor[(2, 14, 3), float64],) {
  @func_14876() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_18462(%var_18460: Tensor[(3, 4, 16), int16], %var_18461: Tensor[(3, 4, 16), int16]) -> (Tensor[(3, 4, 16), int16], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_18458(%var_18460, %var_18461) /* ty=(Tensor[(3, 4, 16), int16], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_3077(%var_3076: Tensor[(3, 2, 14), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) {
  %893 = fn (%var_3042: Tensor[(3, 2, 14), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) {
    %881 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %882 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %883 = %882.0;
    %884 = cast(%var_3042, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
    %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
    %886 = cast(%883, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
    %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %888 = @func_2233() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %889 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
    %890 = %881.0;
    %891 = logical_or(%886, %887) /* ty=Tensor[(3, 2, 14), bool] */;
    %892 = %888.2;
    (%889, %890, %891, %892)
  };
  %893(%var_3076) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */
}

def @func_16405(%var_16374: Tensor[(99), float64]) -> (Tensor[(224), float32], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(10, 5, 5), float64], Tensor[(432), float32], Tensor[(42, 2), float32]) {
  %894 = @func_15183() /* ty=(Tensor[(224), float32], Tensor[(2, 14, 3), float64]) */;
  %895 = cast(%var_16374, dtype="float64") /* ty=Tensor[(99), float64] */;
  %896 = reshape(%895, newshape=[9, 11, 1]) /* ty=Tensor[(9, 11, 1), float64] */;
  %897 = @func_12090(%896) /* ty=(Tensor[(9, 11, ?), int64],) */;
  %898 = cast(meta[relay.Constant][37] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %899 = cast(meta[relay.Constant][38] /* ty=Tensor[(42, 2), float32] */, dtype="float32") /* ty=Tensor[(42, 2), float32] */;
  %900 = reshape(%898, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %901 = reshape(%899, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %902 = @func_4046(%900, %901) /* ty=(Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(432), float32], Tensor[(64), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(9, ?, 2), float64]) */;
  %903 = %894.0;
  %904 = %897.0;
  %905 = %902.0;
  (%903, %904, %var_16374, %905, meta[relay.Constant][37] /* ty=Tensor[(432), float32] */, meta[relay.Constant][38] /* ty=Tensor[(42, 2), float32] */)
}

def @func_16972() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_16970() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_11648() -> Tensor[(2, 14, 3), float64] {
  @func_11646() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_15018() -> (Tensor[(2, 14, 3), float64],) {
  %906 = @func_13608() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %907 = %906.0;
  (%907,)
}

def @func_9208() -> (Tensor[(2, 14, 3), float64],) {
  %908 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %909 = %908.0;
  (%909,)
}

def @func_19280() -> Tensor[(99), float64] {
  %911 = fn () -> Tensor[(99), float64] {
    %910 = @func_14329() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(3, 2, 14), float32], Tensor[(480), float32]) */;
    %910.2
  };
  %911() /* ty=Tensor[(99), float64] */
}

def @func_3440() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %914 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %912 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
    %913 = @func_1511() /* ty=Tensor[(2, 14, 3), float64] */;
    (%912, %913)
  };
  %914() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_4559(%var_4557: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(64), float64], Tensor[(432), float32]) {
  @func_4556(%var_4557) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(64), float64], Tensor[(432), float32]) */
}

def @func_2004() -> (Tensor[(2, 14, 3), float64],) {
  %916 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %915 = @func_1511() /* ty=Tensor[(2, 14, 3), float64] */;
    (%915,)
  };
  %916() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_2886() -> (Tensor[(3, 2, 14), bool],) {
  %924 = fn () -> (Tensor[(3, 2, 14), bool],) {
    %917 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %918 = %917.0;
    %919 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 2, 14), float32] */, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
    %920 = shape_of(%918, dtype="int32") /* ty=Tensor[(3), int32] */;
    %921 = cast(%918, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
    %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %923 = equal(%921, %922) /* ty=Tensor[(3, 2, 14), bool] */;
    (%923,)
  };
  %924() /* ty=(Tensor[(3, 2, 14), bool],) */
}

def @func_12500() -> Tensor[(2, 14, 3), float64] {
  %925 = @func_10821() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */;
  %925.1
}

def @func_18865() -> (Tensor[(2, 14, 3), float64],) {
  %926 = @func_9981() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %927 = %926.3;
  (%927,)
}

def @func_6266() -> Tensor[(3, 2, 14), float64] {
  %931 = fn () -> Tensor[(3, 2, 14), float64] {
    %928 = @func_2885() /* ty=(Tensor[(3, 2, 14), bool],) */;
    %929 = %928.0;
    %930 = cast(%929, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
    acos(%930) /* ty=Tensor[(3, 2, 14), float64] */
  };
  %931() /* ty=Tensor[(3, 2, 14), float64] */
}

def @func_14782() -> (Tensor[(2, 14, 3), float64],) {
  %934 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %932 = @func_11119() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %933 = %932.0;
    (%933,)
  };
  %934() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_2263() -> (Tensor[(2, 14, 3), float64],) {
  %937 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %935 = @func_2162() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %936 = %935.0;
    (%936,)
  };
  %937() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_11710() -> (Tensor[(3, 2, 14), float32],) {
  @func_11708() /* ty=(Tensor[(3, 2, 14), float32],) */
}

def @func_17400(%var_17398: Tensor[(6, 3, 11), float64]) -> (Tensor[(6, 3, 11), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 56), float32], Tensor[(432), float32]) {
  @func_17397(%var_17398) /* ty=(Tensor[(6, 3, 11), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 56), float32], Tensor[(432), float32]) */
}

def @func_10104() -> (Tensor[(2, 14, 3), float64], Tensor[(216, 2), float32], Tensor[(224), float32], Tensor[(36, 12), float32], Tensor[(3, 2, 14), float64]) {
  %947 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(216, 2), float32], Tensor[(224), float32], Tensor[(36, 12), float32], Tensor[(3, 2, 14), float64]) {
    %938 = @func_8353() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(65, 15), float64]) */;
    %939 = cast(meta[relay.Constant][40] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
    %940 = cast(meta[relay.Constant][41] /* ty=Tensor[(36, 12), float32] */, dtype="float32") /* ty=Tensor[(36, 12), float32] */;
    %941 = reshape(%939, newshape=[224]) /* ty=Tensor[(224), float32] */;
    %942 = reshape(%940, newshape=[216, 2]) /* ty=Tensor[(216, 2), float32] */;
    %943 = @func_5250(%941, %942) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 14, 4), float64], Tensor[(224), float32], Tensor[(216, 2), float32]) */;
    %944 = %938.0;
    %945 = %943.4;
    %946 = @func_6265() /* ty=Tensor[(3, 2, 14), float64] */;
    (%944, %945, meta[relay.Constant][40] /* ty=Tensor[(224), float32] */, meta[relay.Constant][41] /* ty=Tensor[(36, 12), float32] */, %946)
  };
  %947() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(216, 2), float32], Tensor[(224), float32], Tensor[(36, 12), float32], Tensor[(3, 2, 14), float64]) */
}

def @func_1796(%var_1795: Tensor[(250), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) {
  %954 = fn (%var_1789: Tensor[(250), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) {
    %948 = cast(%var_1789, dtype="float64") /* ty=Tensor[(250), float64] */;
    %949 = cast(%var_1789, dtype="float64") /* ty=Tensor[(250), float64] */;
    %950 = reshape(%948, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
    %951 = reshape(%949, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
    %952 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
    %953 = @func_360(%950, %951) /* ty=Tensor[(10, 5, 5), float64] */;
    (%952, %953, %var_1789)
  };
  %954(%var_1795) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */
}

def @func_11700() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) {
  %958 = fn () -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) {
    %955 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %956 = %955.0;
    %957 = @func_9184() /* ty=Tensor[(2, 14, 3), float64] */;
    (%956, %957)
  };
  %958() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */
}

def @func_22386() -> (Tensor[(3, 2, 14), float32],) {
  %959 = @func_4234() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %960 = %959.0;
  (%960,)
}

def @func_21455() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %965 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %961 = @func_6230() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %962 = %961.1;
    %963 = @func_13885() /* ty=Tensor[(2, 14, 3), float64] */;
    %964 = @func_9184() /* ty=Tensor[(2, 14, 3), float64] */;
    (%962, %963, %964)
  };
  %965() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_8496(%var_8495: Tensor[(10, 5, 9), float32]) -> (Tensor[(10, 5, 9), float32],) {
  %968 = fn (%var_8487: Tensor[(10, 5, 9), float32]) -> (Tensor[(10, 5, 9), float32],) {
    %966 = cast(%var_8487, dtype="float32") /* ty=Tensor[(10, 5, 9), float32] */;
    %967 = atan(%966) /* ty=Tensor[(10, 5, 9), float32] */;
    (%967,)
  };
  %968(%var_8495) /* ty=(Tensor[(10, 5, 9), float32],) */
}

def @func_9210() -> (Tensor[(2, 14, 3), float64],) {
  @func_9208() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_12771() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %969 = @func_11974() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %970 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
  %971 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %972 = @func_11253() /* ty=Tensor[(2, 14, 3), float64] */;
  %973 = %969.0;
  %974 = %970.1;
  %975 = %971.0;
  (%972, %973, %974, %975)
}

def @func_15829() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  %980 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
    %976 = @func_6230() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %977 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
    %978 = %976.1;
    %979 = %977.1;
    (%978, %979)
  };
  %980() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */
}

def @func_6160() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %981 = @func_5036() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %982 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %983 = %981.0;
  (%982, %983)
}

def @func_14987() -> (Tensor[(250), float64], Tensor[(2, 14, 3), float64]) {
  @func_14985() /* ty=(Tensor[(250), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_12649() -> Tensor[(2, 14, 3), float64] {
  @func_12647() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_17717() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_17715() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_7540() -> Tensor[(2, 14, 3), float64] {
  %985 = fn () -> Tensor[(2, 14, 3), float64] {
    %984 = @func_3439() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %984.0
  };
  %985() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_18978(%var_18976: Tensor[(8, 28), float32], %var_18977: Tensor[(4, 14, 4), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(8, 28), float32], Tensor[(4, 14, 4), bool], Tensor[(14, 8, 12), float64], Tensor[(1344), float64]) {
  %999 = fn (%var_18961: Tensor[(8, 28), float32], %var_18965: Tensor[(4, 14, 4), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(8, 28), float32], Tensor[(4, 14, 4), bool], Tensor[(14, 8, 12), float64], Tensor[(1344), float64]) {
    %986 = @func_16795() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %987 = cast(%var_18961, dtype="float32") /* ty=Tensor[(8, 28), float32] */;
    %988 = reshape(%987, newshape=[4, 14, 4]) /* ty=Tensor[(4, 14, 4), float32] */;
    %989 = @func_186(%988) /* ty=Tensor[(4, 14, 4), float32] */;
    %990 = cast(%var_18965, dtype="bool") /* ty=Tensor[(4, 14, 4), bool] */;
    %991 = shape_of(%989, dtype="int32") /* ty=Tensor[(3), int32] */;
    %992 = cast(%989, dtype="bool") /* ty=Tensor[(4, 14, 4), bool] */;
    %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %994 = cast(meta[relay.Constant][42] /* ty=Tensor[(1344), float64] */, dtype="float64") /* ty=Tensor[(1344), float64] */;
    %995 = reshape(%994, newshape=[14, 8, 12]) /* ty=Tensor[(14, 8, 12), float64] */;
    %996 = %986.0;
    %997 = logical_and(%992, %993) /* ty=Tensor[(4, 14, 4), bool] */;
    %998 = @func_7256(%995) /* ty=Tensor[(14, 8, 12), float64] */;
    (%996, %var_18961, %997, %998, meta[relay.Constant][42] /* ty=Tensor[(1344), float64] */)
  };
  %999(%var_18976, %var_18977) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(8, 28), float32], Tensor[(4, 14, 4), bool], Tensor[(14, 8, 12), float64], Tensor[(1344), float64]) */
}

def @func_2421(%var_2420: Tensor[(250), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64]) {
  %1007 = fn (%var_2401: Tensor[(250), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64]) {
    %1000 = @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1001 = cast(%var_2401, dtype="float64") /* ty=Tensor[(250), float64] */;
    %1002 = reshape(%1001, newshape=[250]) /* ty=Tensor[(250), float64] */;
    %1003 = @func_1794(%1002) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
    %1004 = %1000.0;
    %1005 = %1003.0;
    %1006 = @func_1511() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1004, %1005, %var_2401, %1006)
  };
  %1007(%var_2420) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_8594() -> (Tensor[(3, 2, 14), bool],) {
  %1010 = fn () -> (Tensor[(3, 2, 14), bool],) {
    %1008 = @func_7072() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
    %1009 = %1008.3;
    (%1009,)
  };
  %1010() /* ty=(Tensor[(3, 2, 14), bool],) */
}

def @func_3332() -> Tensor[(2, 14, 3), float64] {
  %1011 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_2150() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %1011() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_4568() -> (Tensor[(2, 14, 3), float64],) {
  %1013 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1012 = @func_2456() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1012,)
  };
  %1013() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_21756(%var_21754: Tensor[(12, 2, 13), float32]) -> (Tensor[(12, 2, 13), float32], Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64], Tensor[(2, 14, 3), float64]) {
  @func_21753(%var_21754) /* ty=(Tensor[(12, 2, 13), float32], Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_21053() -> Tensor[(9, 1, 2), float64] {
  %1015 = fn () -> Tensor[(9, 1, 2), float64] {
    %1014 = @func_12216() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) */;
    %1014.1
  };
  %1015() /* ty=Tensor[(9, 1, 2), float64] */
}

def @func_20596(%var_20595: Tensor[(12), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 6, 1), float64], Tensor[(12), float64], Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float32], Tensor[(3, 2, 14), float32]) {
  %1029 = fn (%var_20549: Tensor[(12), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 6, 1), float64], Tensor[(12), float64], Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float32], Tensor[(3, 2, 14), float32]) {
    %1016 = @func_13105() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1017 = cast(%var_20549, dtype="float64") /* ty=Tensor[(12), float64] */;
    %1018 = reshape(%1017, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), float64] */;
    %1019 = @func_12386(%1018) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 6, ?), int16], Tensor[(2, 6, 1), float64]) */;
    %1020 = @func_5604() /* ty=(Tensor[(9, 1, 2), float32], Tensor[(3, 2, 14), float32]) */;
    %1021 = %1020.0;
    %1022 = cast(%1021, dtype="float32") /* ty=Tensor[(9, 1, 2), float32] */;
    %1023 = @func_19364() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64]) */;
    %1024 = %1016.0;
    %1025 = %1019.2;
    %1026 = @func_15477() /* ty=Tensor[(2, 14, 3), float64] */;
    %1027 = acos(%1022) /* ty=Tensor[(9, 1, 2), float32] */;
    %1028 = %1023.0;
    (%1024, %1025, %var_20549, %1026, %1027, %1028)
  };
  %1029(%var_20595) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 6, 1), float64], Tensor[(12), float64], Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float32], Tensor[(3, 2, 14), float32]) */
}

def @func_22027() -> Tensor[(2, 14, 3), float64] {
  @func_8121() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_8020() -> (Tensor[(2, 14, 3), float64],) {
  @func_8018() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_15372() -> (Tensor[(2, 14, 3), float64],) {
  %1031 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1030 = @func_13885() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1030,)
  };
  %1031() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_11255() -> Tensor[(2, 14, 3), float64] {
  @func_11253() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_17913(%var_17912: Tensor[(14, 16, 10), uint32]) -> Tensor[(14, 16, 10), bool] {
  %1041 = fn (%var_17883: Tensor[(14, 16, 10), uint32]) -> Tensor[(14, 16, 10), bool] {
    %1032 = cast(%var_17883, dtype="uint32") /* ty=Tensor[(14, 16, 10), uint32] */;
    %1033 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(14, 16, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1034 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 16, 10), uint32] */, dtype="uint32") /* ty=Tensor[(14, 16, 10), uint32] */;
    %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1036 = right_shift(%1034, %1035) /* ty=Tensor[(14, 16, 10), uint32] */;
    %1037 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 16, 10), uint32] */, dtype="bool") /* ty=Tensor[(14, 16, 10), bool] */;
    %1038 = shape_of(%1036, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1039 = cast(%1036, dtype="bool") /* ty=Tensor[(14, 16, 10), bool] */;
    %1040 = dyn.reshape(%1037, %1038, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%1039, %1040) /* ty=Tensor[(14, 16, 10), bool] */
  };
  %1041(%var_17912) /* ty=Tensor[(14, 16, 10), bool] */
}

def @func_8082(%var_8037: Tensor[(1, 6, 2), float64]) -> (Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(1, 6, 2), float32]) {
  %1042 = @func_6175() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1043 = cast(%var_8037, dtype="float64") /* ty=Tensor[(1, 6, 2), float64] */;
  %1044 = sqrt(%1043) /* ty=Tensor[(1, 6, 2), float64] */;
  %1045 = cast(%1044, dtype="float32") /* ty=Tensor[(1, 6, 2), float32] */;
  %1046 = sin(%1045) /* ty=Tensor[(1, 6, 2), float32] */;
  %1047 = cast(%1046, dtype="float32") /* ty=Tensor[(1, 6, 2), float32] */;
  %1048 = @func_3800() /* ty=Tensor[(9, 1, 2), float64] */;
  %1049 = %1042.0;
  %1050 = cos(%1047) /* ty=Tensor[(1, 6, 2), float32] */;
  (%1048, %1049, %1050)
}

def @func_2492() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) {
  %1057 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) {
    %1051 = @func_2084() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1052 = cast(meta[relay.Constant][44] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
    %1053 = reshape(%1052, newshape=[250]) /* ty=Tensor[(250), float64] */;
    %1054 = @func_2419(%1053) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64]) */;
    %1055 = %1051.1;
    %1056 = %1054.3;
    (%1055, %1056, meta[relay.Constant][44] /* ty=Tensor[(250), float64] */)
  };
  %1057() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */
}

def @func_18609() -> (Tensor[(2, 14, 3), float64],) {
  @func_18607() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_4355() -> (Tensor[(2, 14, 3), float64],) {
  %1060 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1058 = @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1059 = %1058.0;
    (%1059,)
  };
  %1060() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_8121() -> Tensor[(2, 14, 3), float64] {
  %1061 = @func_5107() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1061.0
}

def @func_22269() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1065 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1062 = @func_15769() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), uint32]) */;
    %1063 = @func_9018() /* ty=Tensor[(2, 14, 3), float64] */;
    %1064 = %1062.0;
    (%1063, %1064)
  };
  %1065() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_5036() -> (Tensor[(2, 14, 3), float64],) {
  %1066 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1067 = %1066.0;
  (%1067,)
}

def @func_19718() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1072 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1068 = @func_6002() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1069 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
    %1070 = %1068.0;
    %1071 = @func_10250() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1069, %1070, %1071)
  };
  %1072() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_4279() -> Tensor[(2, 14, 3), float64] {
  %1073 = @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1073.0
}

def @func_3486() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_7323(%var_7321: float64, %var_7322: Tensor[(60), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64]) {
  @func_7319(%var_7321, %var_7322) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64]) */
}

def @func_19488() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1077 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1074 = @func_18810() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1075 = @func_6548() /* ty=Tensor[(2, 14, 3), float64] */;
    %1076 = %1074.0;
    (%1075, %1076)
  };
  %1077() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_10556() -> (Tensor[(2, 14, 3), float64],) {
  %1079 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1078 = @func_7955() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1078,)
  };
  %1079() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_12169() -> (Tensor[(2, 14, 3), float64],) {
  @func_12167() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_19249() -> Tensor[(2, 14, 3), float64] {
  @func_11253() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_14203() -> Tensor[(2, 14, 3), float64] {
  %1081 = fn () -> Tensor[(2, 14, 3), float64] {
    %1080 = @func_8891() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1080.0
  };
  %1081() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_20483() -> Tensor[(2, 14, 3), float64] {
  %1082 = @func_8727() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1082.1
}

def @func_5433() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1085 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1083 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
    %1084 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1083, %1084)
  };
  %1085() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_14249() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1086 = @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1087 = %1086.1;
  %1088 = @func_6715() /* ty=Tensor[(2, 14, 3), float64] */;
  %1089 = @func_12399() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1087, %1088, %1089)
}

def @func_6004() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_6002() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_8398() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_8396() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_13096() -> Tensor[(2, 14, 3), float64] {
  %1090 = @func_6556() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1090.0
}

def @func_10467(%var_10465: Tensor[(432), float32], %var_10466: Tensor[(224), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(7, 15, 1), uint32], uint32, Tensor[(432), float32], Tensor[(224), float32]) {
  @func_10463(%var_10465, %var_10466) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(7, 15, 1), uint32], uint32, Tensor[(432), float32], Tensor[(224), float32]) */
}

def @func_11774() -> (Tensor[(2, 14, 3), float64],) {
  %1091 = @func_9184() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1091,)
}

def @func_20991() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1096 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1092 = @func_3394() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1093 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
    %1094 = %1092.0;
    %1095 = %1093.0;
    (%1094, %1095)
  };
  %1096() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_15285() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(2, 112), float32]) {
  @func_15283() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(2, 112), float32]) */
}

def @func_3891(%var_3889: Tensor[(15, 5, 13), float64], %var_3890: Tensor[(15, 5, 13), float64]) -> (Tensor[(15, 5, 13), bool],) {
  %1102 = fn (%var_3883: Tensor[(15, 5, 13), float64], %var_3884: Tensor[(15, 5, 13), float64]) -> (Tensor[(15, 5, 13), bool],) {
    %1097 = cast(%var_3884, dtype="bool") /* ty=Tensor[(15, 5, 13), bool] */;
    %1098 = shape_of(%var_3883, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1099 = cast(%var_3883, dtype="bool") /* ty=Tensor[(15, 5, 13), bool] */;
    %1100 = dyn.reshape(%1097, %1098, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1101 = equal(%1099, %1100) /* ty=Tensor[(15, 5, 13), bool] */;
    (%1101,)
  };
  %1102(%var_3889, %var_3890) /* ty=(Tensor[(15, 5, 13), bool],) */
}

def @func_13994() -> (Tensor[(2, 14, 3), float64],) {
  %1104 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1103 = @func_9039() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1103,)
  };
  %1104() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_4433() -> Tensor[(2, 14, 3), float64] {
  @func_4431() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_13723() -> (Tensor[(2, 14, 3), float64],) {
  %1107 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1105 = @func_10519() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1106 = %1105.1;
    (%1106,)
  };
  %1107() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_10984(%var_10982: Tensor[(10, 2, 3), int64], %var_10983: Tensor[(10, 2, 3), int64]) -> (Tensor[(10, 2, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1119 = fn (%var_10952: Tensor[(10, 2, 3), int64], %var_10953: Tensor[(10, 2, 3), int64]) -> (Tensor[(10, 2, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1108 = cast(%var_10953, dtype="bool") /* ty=Tensor[(10, 2, 3), bool] */;
    %1109 = shape_of(%var_10952, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1110 = cast(%var_10952, dtype="bool") /* ty=Tensor[(10, 2, 3), bool] */;
    %1111 = dyn.reshape(%1108, %1109, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1112 = greater_equal(%1110, %1111) /* ty=Tensor[(10, 2, 3), bool] */;
    %1113 = cast(%var_10953, dtype="float64") /* ty=Tensor[(10, 2, 3), float64] */;
    %1114 = shape_of(%1112, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1115 = cast(%1112, dtype="float64") /* ty=Tensor[(10, 2, 3), float64] */;
    %1116 = dyn.reshape(%1113, %1114, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1117 = divide(%1115, %1116) /* ty=Tensor[(10, 2, 3), float64] */;
    %1118 = @func_9018() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1117, %1118)
  };
  %1119(%var_10982, %var_10983) /* ty=(Tensor[(10, 2, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_5604() -> (Tensor[(9, 1, 2), float32], Tensor[(3, 2, 14), float32]) {
  %1120 = @func_3800() /* ty=Tensor[(9, 1, 2), float64] */;
  %1121 = cast(%1120, dtype="float32") /* ty=Tensor[(9, 1, 2), float32] */;
  %1122 = tan(%1121) /* ty=Tensor[(9, 1, 2), float32] */;
  %1123 = @func_3319() /* ty=Tensor[(3, 2, 14), float32] */;
  (%1122, %1123)
}

def @func_8546() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1124 = @func_8286() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1125 = %1124.0;
  %1126 = @func_6548() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1125, %1126)
}

def @func_2618() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1131 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1127 = @func_2162() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1128 = %1127.0;
    %1129 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
    %1130 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1128, %1129, %1130)
  };
  %1131() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_2855(%var_2841: Tensor[(2, 14, 3), float64]) -> (Tensor[(2, 14, 3), uint32],) {
  %1132 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
  %1133 = cast(%var_2841, dtype="uint32") /* ty=Tensor[(2, 14, 3), uint32] */;
  %1134 = shape_of(%1132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1135 = cast(%1132, dtype="uint32") /* ty=Tensor[(2, 14, 3), uint32] */;
  %1136 = dyn.reshape(%1133, %1134, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1137 = subtract(%1135, %1136) /* ty=Tensor[(2, 14, 3), uint32] */;
  (%1137,)
}

def @func_12489() -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) {
  %1141 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) {
    %1138 = @func_5036() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1139 = %1138.0;
    %1140 = @func_11388() /* ty=Tensor[(9, 1, 2), float64] */;
    (%1139, %1140)
  };
  %1141() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) */
}

def @func_7863() -> (Tensor[(2, 14, 3), float64],) {
  %1144 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1142 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1143 = %1142.0;
    (%1143,)
  };
  %1144() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_16870() -> (Tensor[(6, 12, 8), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1153 = fn () -> (Tensor[(6, 12, 8), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1145 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(6, 12, 8), float32] */;
    %1146 = @func_14329() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(3, 2, 14), float32], Tensor[(480), float32]) */;
    %1147 = @func_14249() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1148 = sqrt(%1145) /* ty=Tensor[(6, 12, 8), float32] */;
    %1149 = @func_11646() /* ty=Tensor[(2, 14, 3), float64] */;
    %1150 = %1146.1;
    %1151 = @func_14202() /* ty=Tensor[(2, 14, 3), float64] */;
    %1152 = %1147.0;
    (%1148, %1149, %1150, %1151, %1152)
  };
  %1153() /* ty=(Tensor[(6, 12, 8), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_10639() -> (Tensor[(2, 14, 3), float64],) {
  @func_10637() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_19508() -> Tensor[(3, 2, 14), float32] {
  %1154 = fn () -> Tensor[(3, 2, 14), float32] {
    @func_7983() /* ty=Tensor[(3, 2, 14), float32] */
  };
  %1154() /* ty=Tensor[(3, 2, 14), float32] */
}

def @func_1450(%var_1448: Tensor[(4, 4, 4), float64]) -> (Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) {
  @func_1447(%var_1448) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */
}

def @func_6162() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_6160() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_19884(%var_19883: Tensor[(198), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(224), float32], Tensor[(198), float64], Tensor[(14, 8, 12), float64]) {
  %1167 = fn (%var_19853: Tensor[(198), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(224), float32], Tensor[(198), float64], Tensor[(14, 8, 12), float64]) {
    %1155 = @func_16795() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1156 = cast(meta[relay.Constant][46] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
    %1157 = reshape(%1156, newshape=[250, 1]) /* ty=Tensor[(250, 1), float64] */;
    %1158 = @func_5398(%1157) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250, 1), float64]) */;
    %1159 = cast(%var_19853, dtype="float64") /* ty=Tensor[(198), float64] */;
    %1160 = reshape(%1159, newshape=[6, 3, 11]) /* ty=Tensor[(6, 3, 11), float64] */;
    %1161 = @func_17397(%1160) /* ty=(Tensor[(6, 3, 11), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 56), float32], Tensor[(432), float32]) */;
    %1162 = @func_19029() /* ty=(Tensor[(14, 8, 12), float64],) */;
    %1163 = %1155.0;
    %1164 = %1158.0;
    %1165 = %1161.2;
    %1166 = %1162.0;
    (%1163, %1164, meta[relay.Constant][46] /* ty=Tensor[(250), float64] */, %1165, %var_19853, %1166)
  };
  %1167(%var_19883) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(224), float32], Tensor[(198), float64], Tensor[(14, 8, 12), float64]) */
}

def @func_17302() -> Tensor[(2, 14, 3), float64] {
  %1168 = @func_10864() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1168.0
}

def @func_2276() -> (Tensor[(2, 14, 3), float64],) {
  %1170 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1169 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1169,)
  };
  %1170() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_9614(%var_9613: Tensor[(3, 2, 14), bool]) -> (Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64]) {
  %1188 = fn (%var_9571: Tensor[(3, 2, 14), bool]) -> (Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64]) {
    %1171 = @func_8593() /* ty=(Tensor[(3, 2, 14), bool],) */;
    %1172 = %1171.0;
    %1173 = cast(%var_9571, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
    %1174 = shape_of(%1172, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1175 = cast(%1172, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
    %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1177 = not_equal(%1175, %1176) /* ty=Tensor[(3, 2, 14), bool] */;
    %1178 = @func_2556() /* ty=Tensor[(2, 14, 3), float64] */;
    %1179 = cast(%1178, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
    %1180 = shape_of(%1177, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1181 = cast(%1177, dtype="bool") /* ty=Tensor[(3, 2, 14), bool] */;
    %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1183 = cast(%1177, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
    %1184 = @func_5432() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1185 = less_equal(%1181, %1182) /* ty=Tensor[(3, 2, 14), bool] */;
    %1186 = atanh(%1183) /* ty=Tensor[(3, 2, 14), float64] */;
    %1187 = %1184.1;
    (%1185, %1186, %1187)
  };
  %1188(%var_9613) /* ty=(Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_15442() -> (Tensor[(2, 14, 3), float64],) {
  %1190 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1189 = @func_13096() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1189,)
  };
  %1190() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_7199(%var_7125: Tensor[(5, 195), float64], %var_7193: Tensor[(480), float32]) -> (Tensor[(3, 2, 14), float32], Tensor[(15, 5, 13), bool], Tensor[(5, 195), float64], Tensor[(3, 2, 14), float32], Tensor[(12, 5, 1), float64], float64, Tensor[(2, 14, 3), float64], Tensor[(60, 1), float32], Tensor[(480), float32], Tensor[(480), float32]) {
  %1191 = cast(%var_7125, dtype="float64") /* ty=Tensor[(5, 195), float64] */;
  %1192 = cast(%var_7125, dtype="float64") /* ty=Tensor[(5, 195), float64] */;
  %1193 = reshape(%1191, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float64] */;
  %1194 = reshape(%1192, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float64] */;
  %1195 = @func_3888(%1193, %1194) /* ty=(Tensor[(15, 5, 13), bool],) */;
  %1196 = @func_2654() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1197 = cast(2.57977f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1198 = cast(meta[relay.Constant][47] /* ty=Tensor[(60, 1), float64] */, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %1199 = reshape(%1197, newshape=[]) /* ty=float64 */;
  %1200 = reshape(%1198, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float64] */;
  %1201 = @func_3340(%1199, %1200) /* ty=(Tensor[(12, 5, 1), float64],) */;
  %1202 = @func_6230() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1203 = cast(meta[relay.Constant][47] /* ty=Tensor[(60, 1), float64] */, dtype="float32") /* ty=Tensor[(60, 1), float32] */;
  %1204 = cast(%var_7193, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1205 = reshape(%1204, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1206 = @func_6905(%1205) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) */;
  %1207 = @func_5908() /* ty=Tensor[(3, 2, 14), float32] */;
  %1208 = %1195.0;
  %1209 = %1196.0;
  %1210 = %1201.0;
  %1211 = %1202.0;
  %1212 = sinh(%1203) /* ty=Tensor[(60, 1), float32] */;
  %1213 = %1206.3;
  (%1207, %1208, %var_7125, %1209, %1210, 2.57977f64 /* ty=float64 */, %1211, %1212, %1213, %var_7193)
}

def @func_10297() -> (Tensor[(9, 8, 1), uint64],) {
  @func_10295() /* ty=(Tensor[(9, 8, 1), uint64],) */
}

def @func_15994() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_15992() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_11915(%var_11901: Tensor[(25, 10), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(25, 10), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1214 = @func_7072() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %1215 = cast(%var_11901, dtype="float64") /* ty=Tensor[(25, 10), float64] */;
  %1216 = reshape(%1215, newshape=[250]) /* ty=Tensor[(250), float64] */;
  %1217 = @func_2419(%1216) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64]) */;
  %1218 = @func_6528() /* ty=(Tensor[(3, 2, 14), int16], Tensor[(4, 14, 4), float32], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1219 = @func_11774() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1220 = %1214.2;
  %1221 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  %1222 = %1217.3;
  %1223 = %1218.4;
  %1224 = %1219.0;
  (%1220, %1221, %1222, %var_11901, %1223, %1224)
}

def @func_19422() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  @func_19420() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */
}

def @func_22093(%var_22083: Tensor[(4, 5, 1), int32], %var_22084: Tensor[(4, 5, 4), int32]) -> (Tensor[(4, 5, 4), int32],) {
  %1225 = cast(%var_22083, dtype="int32") /* ty=Tensor[(4, 5, 1), int32] */;
  %1226 = cast(%var_22084, dtype="int32") /* ty=Tensor[(4, 5, 4), int32] */;
  %1227 = logical_xor(%1225, %1226) /* ty=Tensor[(4, 5, 4), int32] */;
  (%1227,)
}

def @func_14453() -> (Tensor[(2, 14, 3), float64],) {
  %1230 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1228 = @func_8891() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1229 = %1228.0;
    (%1229,)
  };
  %1230() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_8314() -> (Tensor[(2, 14, 3), float64],) {
  @func_8312() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_10404() -> (Tensor[(2, 14, 3), float64],) {
  %1231 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1231,)
}

def @func_18155(%var_18153: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) {
  @func_18152(%var_18153) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) */
}

def @func_17690() -> (Tensor[(2, 14, 3), float64],) {
  %1232 = @func_16492() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1233 = %1232.1;
  (%1233,)
}

def @func_19364() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64]) {
  %1234 = @func_10821() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */;
  %1235 = @func_9928() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1236 = @func_16869() /* ty=(Tensor[(6, 12, 8), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1237 = %1234.0;
  %1238 = %1235.1;
  %1239 = %1236.2;
  %1240 = @func_8093() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1237, %1238, %1239, %1240)
}

def @func_13846() -> Tensor[(2, 14, 3), float64] {
  %1242 = fn () -> Tensor[(2, 14, 3), float64] {
    %1241 = @func_2617() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1241.1
  };
  %1242() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_5855() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) {
  %1247 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) {
    %1243 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1244 = @func_2885() /* ty=(Tensor[(3, 2, 14), bool],) */;
    %1245 = %1243.0;
    %1246 = %1244.0;
    (%1245, %1246)
  };
  %1247() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */
}

def @func_19909() -> (Tensor[(65, 15), float64], Tensor[(2, 14, 3), float64]) {
  %1252 = fn () -> (Tensor[(65, 15), float64], Tensor[(2, 14, 3), float64]) {
    %1248 = @func_9670() /* ty=(Tensor[(65, 15), float64],) */;
    %1249 = @func_5432() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1250 = %1248.0;
    %1251 = %1249.1;
    (%1250, %1251)
  };
  %1252() /* ty=(Tensor[(65, 15), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_22082() -> Tensor[(3, 2, 14), bool] {
  @func_22080() /* ty=Tensor[(3, 2, 14), bool] */
}

def @func_17478(%var_17476: Tensor[(10, 2, 5), float32]) -> (Tensor[(10, 2, 5), float32], Tensor[(2, 14, 3), float64]) {
  @func_17475(%var_17476) /* ty=(Tensor[(10, 2, 5), float32], Tensor[(2, 14, 3), float64]) */
}

def @func_18714() -> Tensor[(2, 14, 3), float64] {
  @func_18712() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_20308() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1253 = @func_11296() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
  %1254 = %1253.2;
  %1255 = @func_2719() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1254, %1255)
}

def @func_6528() -> (Tensor[(3, 2, 14), int16], Tensor[(4, 14, 4), float32], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1256 = @func_3854() /* ty=Tensor[(3, 2, 14), float32] */;
  %1257 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 2, 14), float32] */, dtype="int16") /* ty=Tensor[(3, 2, 14), int16] */;
  %1258 = shape_of(%1256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1259 = cast(%1256, dtype="int16") /* ty=Tensor[(3, 2, 14), int16] */;
  %1260 = dyn.reshape(%1257, %1258, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1261 = cast(meta[relay.Constant][49] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1262 = reshape(%1261, newshape=[4, 14, 4]) /* ty=Tensor[(4, 14, 4), float32] */;
  %1263 = @func_4354() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1264 = @func_6175() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1265 = maximum(%1259, %1260) /* ty=Tensor[(3, 2, 14), int16] */;
  %1266 = @func_186(%1262) /* ty=Tensor[(4, 14, 4), float32] */;
  %1267 = %1263.0;
  %1268 = %1264.0;
  (%1265, %1266, meta[relay.Constant][49] /* ty=Tensor[(224), float32] */, %1267, %1268)
}

def @func_8235() -> (Tensor[(2, 14, 3), float64],) {
  @func_8233() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_11776() -> (Tensor[(2, 14, 3), float64],) {
  @func_11774() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_10821() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) {
  %1269 = @func_4234() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1270 = @func_2617() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1271 = %1269.0;
  %1272 = %1270.2;
  (%1271, %1272)
}

def @func_19180() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64]) {
  @func_19178() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64]) */
}

def @func_8470() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1273 = @func_4354() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1274 = @func_5036() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1275 = @func_7789() /* ty=Tensor[(2, 14, 3), float64] */;
  %1276 = %1273.0;
  %1277 = @func_8121() /* ty=Tensor[(2, 14, 3), float64] */;
  %1278 = %1274.0;
  (%1275, %1276, %1277, %1278)
}

def @func_15770() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), uint32]) {
  %1285 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), uint32]) {
    %1279 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1280 = %1279.0;
    %1281 = cast(%1280, dtype="float64") /* ty=Tensor[(2, 14, 3), float64] */;
    %1282 = reshape(%1281, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), float64] */;
    %1283 = @func_2855(%1282) /* ty=(Tensor[(2, 14, 3), uint32],) */;
    %1284 = %1283.0;
    (%1280, %1284)
  };
  %1285() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), uint32]) */
}

def @func_20454() -> Tensor[(2, 14, 3), float64] {
  %1286 = @func_8018() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1286.0
}

def @func_20918() -> (Tensor[(4, 4, 4), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) {
  @func_20916() /* ty=(Tensor[(4, 4, 4), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */
}

def @func_10327() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  %1291 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
    %1287 = @func_10177() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1288 = @func_8727() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1289 = %1287.0;
    %1290 = %1288.2;
    (%1289, %1290)
  };
  %1291() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */
}

def @func_17692() -> (Tensor[(2, 14, 3), float64],) {
  @func_17690() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_6530() -> (Tensor[(3, 2, 14), int16], Tensor[(4, 14, 4), float32], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_6528() /* ty=(Tensor[(3, 2, 14), int16], Tensor[(4, 14, 4), float32], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_2163() -> (Tensor[(2, 14, 3), float64],) {
  %1293 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1292 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1292,)
  };
  %1293() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_17792() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) {
  %1294 = @func_12244() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1295 = cast(meta[relay.Constant][50] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1296 = reshape(%1295, newshape=[250]) /* ty=Tensor[(250), float64] */;
  %1297 = @func_2419(%1296) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64]) */;
  %1298 = %1294.0;
  %1299 = %1297.3;
  (%1298, %1299, meta[relay.Constant][50] /* ty=Tensor[(250), float64] */)
}

def @func_21049() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_21047() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_5444(%var_5437: Tensor[(15, 5, 14), float64]) -> Tensor[(15, 5, 14), float64] {
  %1300 = cast(%var_5437, dtype="float64") /* ty=Tensor[(15, 5, 14), float64] */;
  exp(%1300) /* ty=Tensor[(15, 5, 14), float64] */
}

def @func_18712() -> Tensor[(2, 14, 3), float64] {
  %1301 = @func_12049() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1301.0
}

def @func_8108() -> (Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(975), float64]) {
  %1302 = @func_6002() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1303 = cast(meta[relay.Constant][51] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %1304 = cast(meta[relay.Constant][51] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %1305 = reshape(%1303, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float64] */;
  %1306 = reshape(%1304, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float64] */;
  %1307 = @func_3888(%1305, %1306) /* ty=(Tensor[(15, 5, 13), bool],) */;
  %1308 = %1302.0;
  %1309 = %1307.0;
  (%1308, %1309, meta[relay.Constant][51] /* ty=Tensor[(975), float64] */)
}

def @func_5253(%var_5251: Tensor[(224), float32], %var_5252: Tensor[(216, 2), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 14, 4), float64], Tensor[(224), float32], Tensor[(216, 2), float32]) {
  %1324 = fn (%var_5196: Tensor[(224), float32], %var_5227: Tensor[(216, 2), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 14, 4), float64], Tensor[(224), float32], Tensor[(216, 2), float32]) {
    %1310 = cast(%var_5196, dtype="float32") /* ty=Tensor[(224), float32] */;
    %1311 = reshape(%1310, newshape=[4, 14, 4]) /* ty=Tensor[(4, 14, 4), float32] */;
    %1312 = @func_186(%1311) /* ty=Tensor[(4, 14, 4), float32] */;
    %1313 = cast(%1312, dtype="float64") /* ty=Tensor[(4, 14, 4), float64] */;
    %1314 = @func_2719() /* ty=Tensor[(2, 14, 3), float64] */;
    %1315 = cast(%1314, dtype="int32") /* ty=Tensor[(2, 14, 3), int32] */;
    %1316 = cast(%var_5227, dtype="float32") /* ty=Tensor[(216, 2), float32] */;
    %1317 = cast(%1312, dtype="float32") /* ty=Tensor[(4, 14, 4), float32] */;
    %1318 = reshape(%1315, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), int32] */;
    %1319 = reshape(%1316, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %1320 = reshape(%1317, newshape=[224]) /* ty=Tensor[(224), float32] */;
    %1321 = @func_1587(%1318, %1319, %1320) /* ty=(Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(7, 3, 4), int16], Tensor[(9, 12, 4), float32]) */;
    %1322 = exp(%1313) /* ty=Tensor[(4, 14, 4), float64] */;
    %1323 = %1321.2;
    (%1314, %var_5196, %1322, %1323, %var_5227)
  };
  %1324(%var_5251, %var_5252) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(4, 14, 4), float64], Tensor[(224), float32], Tensor[(216, 2), float32]) */
}

def @func_14643() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_14641() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_18810() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1325 = @func_15585() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1326 = @func_15441() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1327 = %1325.0;
  %1328 = %1326.0;
  (%1327, %1328)
}

def @func_20714() -> (Tensor[(3, 2, 14), float32],) {
  @func_20712() /* ty=(Tensor[(3, 2, 14), float32],) */
}

def @func_5606() -> (Tensor[(9, 1, 2), float32], Tensor[(3, 2, 14), float32]) {
  @func_5604() /* ty=(Tensor[(9, 1, 2), float32], Tensor[(3, 2, 14), float32]) */
}

def @func_1447(%var_1432: Tensor[(4, 4, 4), float64]) -> (Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) {
  %1329 = cast(%var_1432, dtype="float64") /* ty=Tensor[(4, 4, 4), float64] */;
  %1330 = cast(meta[relay.Constant][52] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1331 = cast(meta[relay.Constant][52] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1332 = reshape(%1330, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %1333 = reshape(%1331, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %1334 = exp(%1329) /* ty=Tensor[(4, 4, 4), float64] */;
  %1335 = @func_360(%1332, %1333) /* ty=Tensor[(10, 5, 5), float64] */;
  (%1334, %1335, meta[relay.Constant][52] /* ty=Tensor[(250), float64] */)
}

def @func_10864() -> (Tensor[(2, 14, 3), float64],) {
  %1336 = @func_7741() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1337 = %1336.1;
  (%1337,)
}

def @func_1732() -> Tensor[(2, 14, 3), float64] {
  @func_1511() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_4431() -> Tensor[(2, 14, 3), float64] {
  %1338 = @func_2233() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1338.1
}

def @func_11253() -> Tensor[(2, 14, 3), float64] {
  %1339 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1339.0
}

def @func_13776() -> (Tensor[(2, 14, 3), float64],) {
  @func_13774() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_18692() -> Tensor[(2, 14, 3), float64] {
  @func_18690() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_8312() -> (Tensor[(2, 14, 3), float64],) {
  %1340 = @func_4913() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
  %1341 = %1340.6;
  (%1341,)
}

def @func_13098() -> Tensor[(2, 14, 3), float64] {
  @func_13096() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_16579() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_16577() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_7956() -> Tensor[(2, 14, 3), float64] {
  %1343 = fn () -> Tensor[(2, 14, 3), float64] {
    %1342 = @func_4567() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1342.0
  };
  %1343() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_11833() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  %1344 = @func_1511() /* ty=Tensor[(2, 14, 3), float64] */;
  %1345 = @func_3854() /* ty=Tensor[(3, 2, 14), float32] */;
  (%1344, %1345)
}

def @func_12128() -> (Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64]) {
  %1354 = fn () -> (Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64]) {
    %1346 = @func_10659() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
    %1347 = %1346.0;
    %1348 = cast(%1347, dtype="float32") /* ty=Tensor[(3, 2, 14), float32] */;
    %1349 = exp(%1348) /* ty=Tensor[(3, 2, 14), float32] */;
    %1350 = cast(%1349, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
    %1351 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1352 = asinh(%1350) /* ty=Tensor[(3, 2, 14), float64] */;
    %1353 = %1351.0;
    (%1352, %1353)
  };
  %1354() /* ty=(Tensor[(3, 2, 14), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_15183() -> (Tensor[(224), float32], Tensor[(2, 14, 3), float64]) {
  %1355 = @func_12708() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32]) */;
  %1356 = %1355.2;
  %1357 = @func_2150() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1356, %1357)
}

def @func_8192() -> Tensor[(2, 14, 3), float64] {
  @func_8190() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_12773() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_12771() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_20464() -> Tensor[(2, 14, 3), float64] {
  %1358 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1358.0
}

def @func_5734(%var_5733: Tensor[(14, 7, 6), int64]) -> (Tensor[(14, 7, 6), int64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(64), float64], Tensor[(250), float64]) {
  %1374 = fn (%var_5693: Tensor[(14, 7, 6), int64]) -> (Tensor[(14, 7, 6), int64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(64), float64], Tensor[(250), float64]) {
    %1359 = cast(%var_5693, dtype="int64") /* ty=Tensor[(14, 7, 6), int64] */;
    %1360 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(14, 7, 6), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1361 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 7, 6), int64] */, dtype="int64") /* ty=Tensor[(14, 7, 6), int64] */;
    %1362 = dyn.reshape(%1359, %1360, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1363 = cast(meta[relay.Constant][54] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %1364 = cast(meta[relay.Constant][55] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
    %1365 = reshape(%1363, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %1366 = reshape(%1364, newshape=[4, 16]) /* ty=Tensor[(4, 16), float64] */;
    %1367 = @func_3179(%1365, %1366) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float32], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(4, 16), float64]) */;
    %1368 = cast(meta[relay.Constant][55] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
    %1369 = reshape(%1368, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
    %1370 = @func_1447(%1369) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
    %1371 = minimum(%1361, %1362) /* ty=Tensor[(14, 7, 6), int64] */;
    %1372 = %1367.3;
    %1373 = %1370.2;
    (%1371, %1372, meta[relay.Constant][54] /* ty=Tensor[(480), float32] */, meta[relay.Constant][55] /* ty=Tensor[(64), float64] */, %1373)
  };
  %1374(%var_5733) /* ty=(Tensor[(14, 7, 6), int64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(64), float64], Tensor[(250), float64]) */
}

def @func_15020() -> (Tensor[(2, 14, 3), float64],) {
  @func_15018() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_19178() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(2, 14, 3), float64], Tensor[(65, 15), float64]) {
  %1375 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
  %1376 = @func_19029() /* ty=(Tensor[(14, 8, 12), float64],) */;
  %1377 = @func_9670() /* ty=(Tensor[(65, 15), float64],) */;
  %1378 = %1377.0;
  %1379 = cast(%1378, dtype="float64") /* ty=Tensor[(65, 15), float64] */;
  %1380 = log(%1379) /* ty=Tensor[(65, 15), float64] */;
  %1381 = cast(%1380, dtype="float64") /* ty=Tensor[(65, 15), float64] */;
  %1382 = @func_17088() /* ty=Tensor[(2, 14, 3), float64] */;
  %1383 = %1375.1;
  %1384 = %1376.0;
  %1385 = @func_12500() /* ty=Tensor[(2, 14, 3), float64] */;
  %1386 = tan(%1381) /* ty=Tensor[(65, 15), float64] */;
  (%1382, %1383, %1384, %1385, %1386)
}

def @func_15992() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1387 = @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1388 = %1387.0;
  %1389 = @func_12668() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1388, %1389)
}

def @func_21108() -> (Tensor[(2, 14, 3), float64], Tensor[(198), float64], Tensor[(198, 1), float64]) {
  @func_21106() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(198), float64], Tensor[(198, 1), float64]) */
}

def @func_17826() -> (Tensor[(480), float32],) {
  %1392 = fn () -> (Tensor[(480), float32],) {
    %1390 = @func_14329() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(99), float64], Tensor[(3, 2, 14), float32], Tensor[(480), float32]) */;
    %1391 = %1390.4;
    (%1391,)
  };
  %1392() /* ty=(Tensor[(480), float32],) */
}

def @func_13258() -> (Tensor[(2, 14, 3), float64],) {
  %1395 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1393 = @func_10821() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */;
    %1394 = %1393.1;
    (%1394,)
  };
  %1395() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_19547() -> (Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(3, 2, 14), float32]) {
  @func_19545() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(3, 2, 14), float32]) */
}

def @func_13978(%var_13977: Tensor[(250), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1406 = fn (%var_13959: Tensor[(250), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1396 = @func_10326() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */;
    %1397 = cast(%var_13959, dtype="float64") /* ty=Tensor[(250), float64] */;
    %1398 = reshape(%1397, newshape=[250]) /* ty=Tensor[(250), float64] */;
    %1399 = @func_1794(%1398) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
    %1400 = @func_11974() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1401 = @func_5854() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
    %1402 = %1396.0;
    %1403 = %1399.0;
    %1404 = %1400.1;
    %1405 = %1401.0;
    (%1402, %1403, %var_13959, %1404, %1405)
  };
  %1406(%var_13977) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_6953(%var_6950: Tensor[(4, 120), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(4, 120), float32]) {
  %1407 = cast(%var_6950, dtype="float32") /* ty=Tensor[(4, 120), float32] */;
  %1408 = reshape(%1407, newshape=[12, 8, 5]) /* ty=Tensor[(12, 8, 5), float32] */;
  %1409 = @func_2709(%1408) /* ty=(Tensor[(12, 8, 5), float32],) */;
  %1410 = @func_2556() /* ty=Tensor[(2, 14, 3), float64] */;
  %1411 = %1409.0;
  (%1410, %1411, %var_6950)
}

def @func_10463(%var_10459: Tensor[(432), float32], %var_10460: Tensor[(224), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(7, 15, 1), uint32], uint32, Tensor[(432), float32], Tensor[(224), float32]) {
  %1412 = cast(meta[relay.Constant][56] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1413 = cast(%var_10459, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1414 = cast(%var_10460, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1415 = reshape(%1412, newshape=[]) /* ty=uint32 */;
  %1416 = reshape(%1413, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1417 = reshape(%1414, newshape=[1, 224]) /* ty=Tensor[(1, 224), float32] */;
  %1418 = @func_1313(%1415, %1416, %1417) /* ty=(Tensor[(7, 15, 1), uint32], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(4, 14, 4), float32], Tensor[(1, 224), float32], Tensor[(9, 12, 4), float32], Tensor[(9, 12, 4), float32], Tensor[(7, 15, 1), float32]) */;
  %1419 = @func_6715() /* ty=Tensor[(2, 14, 3), float64] */;
  %1420 = %1418.0;
  (%1419, %1420, meta[relay.Constant][56] /* ty=uint32 */, %var_10459, %var_10460)
}

def @func_10659() -> (Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) {
  %1421 = @func_5854() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool]) */;
  %1422 = @func_3484() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1423 = %1421.1;
  %1424 = %1422.1;
  (%1423, %1424)
}

def @func_6230() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1425 = @func_4630() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1426 = @func_2617() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1427 = %1425.0;
  %1428 = %1426.2;
  (%1427, %1428)
}

def @func_15479() -> Tensor[(2, 14, 3), float64] {
  @func_15477() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_12317() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1429 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
  %1430 = @func_2456() /* ty=Tensor[(2, 14, 3), float64] */;
  %1431 = %1429.1;
  (%1430, %1431)
}

def @func_16655() -> (Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(3, 2, 14), float32]) {
  %1438 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(3, 2, 14), float32]) {
    %1432 = @func_14249() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1433 = @func_3612() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */;
    %1434 = @func_12462() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) */;
    %1435 = %1432.2;
    %1436 = %1433.1;
    %1437 = %1434.0;
    (%1435, %1436, %1437)
  };
  %1438() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(3, 2, 14), float32]) */
}

def @func_21246() -> (Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) {
  %1439 = @func_20434() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1440 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
  %1441 = %1439.0;
  (%1440, %1441)
}

def @func_21419() -> (Tensor[(3, 2, 14), float32], Tensor[(112, 1), uint32], Tensor[(480), float32], Tensor[(4, 16), float64], Tensor[(56, 2), uint32]) {
  @func_21417() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(112, 1), uint32], Tensor[(480), float32], Tensor[(4, 16), float64], Tensor[(56, 2), uint32]) */
}

def @func_9236() -> Tensor[(9, 1, 2), float64] {
  @func_3800() /* ty=Tensor[(9, 1, 2), float64] */
}

def @func_18152(%var_18141: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) {
  %1442 = cast(%var_18141, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1443 = reshape(%1442, newshape=[4, 120]) /* ty=Tensor[(4, 120), float32] */;
  %1444 = @func_6953(%1443) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(4, 120), float32]) */;
  %1445 = @func_17302() /* ty=Tensor[(2, 14, 3), float64] */;
  %1446 = %1444.1;
  (%1445, %1446, %var_18141)
}

def @func_21248() -> (Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) {
  @func_21246() /* ty=(Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_21066() -> Tensor[(2, 14, 3), float64] {
  %1447 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_2556() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %1447() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_13575() -> Tensor[(2, 14, 3), float64] {
  @func_13573() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_12710() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32]) {
  @func_12708() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32]) */
}

def @func_15477() -> Tensor[(2, 14, 3), float64] {
  %1448 = @func_10936() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1448.0
}

def @func_7660() -> (Tensor[(2, 14, 3), float64],) {
  %1449 = @func_4279() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1449,)
}

def @func_10252() -> Tensor[(2, 14, 3), float64] {
  @func_10250() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_7514(%var_7500: Tensor[(60), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64]) {
  %1450 = @func_6160() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1451 = cast(-7.79807f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1452 = cast(%var_7500, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1453 = reshape(%1451, newshape=[]) /* ty=float64 */;
  %1454 = reshape(%1452, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float64] */;
  %1455 = @func_3340(%1453, %1454) /* ty=(Tensor[(12, 5, 1), float64],) */;
  %1456 = @func_6548() /* ty=Tensor[(2, 14, 3), float64] */;
  %1457 = %1450.1;
  %1458 = %1455.0;
  (%1456, %1457, %1458, -7.79807f64 /* ty=float64 */, %var_7500)
}

def @func_7741() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1459 = @func_7660() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1460 = @func_5046() /* ty=Tensor[(2, 14, 3), float64] */;
  %1461 = %1459.0;
  (%1460, %1461)
}

def @func_16905() -> Tensor[(250), float64] {
  %1462 = @func_5659() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %1462.2
}

def @func_22499() -> (Tensor[(2, 14, 3), float64],) {
  @func_22497() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_23030() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_23028() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_1512() -> Tensor[(2, 14, 3), float64] {
  %1464 = fn () -> Tensor[(2, 14, 3), float64] {
    %1463 = cast(meta[relay.Constant][57] /* ty=Tensor[(2, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(2, 14, 3), float64] */;
    sigmoid(%1463) /* ty=Tensor[(2, 14, 3), float64] */
  };
  %1464() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_15293() -> Tensor[(2, 14, 3), float64] {
  @func_12806() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_11835() -> (Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  @func_11833() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */
}

def @func_12463() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) {
  %1473 = fn () -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) {
    %1465 = @func_10821() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */;
    %1466 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1467 = cast(meta[relay.Constant][58] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %1468 = reshape(%1467, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
    %1469 = @func_793(%1468) /* ty=(Tensor[(9, 12, 4), float32],) */;
    %1470 = %1465.0;
    %1471 = %1466.0;
    %1472 = %1469.0;
    (%1470, %1471, %1472, meta[relay.Constant][58] /* ty=Tensor[(432), float32] */)
  };
  %1473() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) */
}

def @func_6176() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1478 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1474 = @func_2233() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1475 = @func_2491() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
    %1476 = %1474.1;
    %1477 = %1475.1;
    (%1476, %1477)
  };
  %1478() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_20663() -> Tensor[(3, 3, 8), float32] {
  %1479 = @func_18331() /* ty=(Tensor[(3, 3, 8), float32],) */;
  %1479.0
}

def @func_5038() -> (Tensor[(2, 14, 3), float64],) {
  @func_5036() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_8123() -> Tensor[(2, 14, 3), float64] {
  @func_8121() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_8355() -> (Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(65, 15), float64]) {
  @func_8353() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(65, 15), float64]) */
}

def @func_17715() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1480 = @func_9153() /* ty=Tensor[(2, 14, 3), float64] */;
  %1481 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1480, %1481)
}

def @func_13174(%var_13172: Tensor[(64), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(64), float64]) {
  @func_13171(%var_13172) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(64), float64]) */
}

def @func_3901() -> Tensor[(9, 1, 2), float64] {
  %1482 = fn () -> Tensor[(9, 1, 2), float64] {
    @func_3800() /* ty=Tensor[(9, 1, 2), float64] */
  };
  %1482() /* ty=Tensor[(9, 1, 2), float64] */
}

def @func_363(%var_361: Tensor[(10, 5, 5), float64], %var_362: Tensor[(10, 5, 5), float64]) -> Tensor[(10, 5, 5), float64] {
  %1487 = fn (%var_336: Tensor[(10, 5, 5), float64], %var_337: Tensor[(10, 5, 5), float64]) -> Tensor[(10, 5, 5), float64] {
    %1483 = cast(%var_337, dtype="float64") /* ty=Tensor[(10, 5, 5), float64] */;
    %1484 = shape_of(%var_336, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1485 = cast(%var_336, dtype="float64") /* ty=Tensor[(10, 5, 5), float64] */;
    %1486 = dyn.reshape(%1483, %1484, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    minimum(%1485, %1486) /* ty=Tensor[(10, 5, 5), float64] */
  };
  %1487(%var_361, %var_362) /* ty=Tensor[(10, 5, 5), float64] */
}

def @func_13348() -> (Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(14, 96), float64]) {
  %1493 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(14, 96), float64]) {
    %1488 = @func_10555() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1489 = cast(meta[relay.Constant][59] /* ty=Tensor[(14, 96), float64] */, dtype="float64") /* ty=Tensor[(14, 96), float64] */;
    %1490 = reshape(%1489, newshape=[14, 8, 12]) /* ty=Tensor[(14, 8, 12), float64] */;
    %1491 = %1488.0;
    %1492 = @func_7256(%1490) /* ty=Tensor[(14, 8, 12), float64] */;
    (%1491, %1492, meta[relay.Constant][59] /* ty=Tensor[(14, 96), float64] */)
  };
  %1493() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(14, 8, 12), float64], Tensor[(14, 96), float64]) */
}

def @func_5910() -> Tensor[(3, 2, 14), float32] {
  @func_5908() /* ty=Tensor[(3, 2, 14), float32] */
}

def @func_16577() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1494 = @func_4567() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1495 = @func_14781() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1496 = @func_7768() /* ty=Tensor[(2, 14, 3), float64] */;
  %1497 = %1494.0;
  %1498 = %1495.0;
  (%1496, %1497, %1498)
}

def @func_2085() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1502 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1499 = @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1500 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
    %1501 = %1499.0;
    (%1500, %1501)
  };
  %1502() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_8094() -> Tensor[(2, 14, 3), float64] {
  %1503 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_4279() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %1503() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_21655() -> (Tensor[(2, 14, 3), float64],) {
  %1506 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1504 = @func_8233() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1505 = %1504.0;
    (%1505,)
  };
  %1506() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_13205() -> Tensor[(2, 14, 3), float64] {
  %1508 = fn () -> Tensor[(2, 14, 3), float64] {
    %1507 = @func_11699() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */;
    %1507.1
  };
  %1508() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_188(%var_187: Tensor[(4, 14, 4), float32]) -> Tensor[(4, 14, 4), float32] {
  %1510 = fn (%var_144: Tensor[(4, 14, 4), float32]) -> Tensor[(4, 14, 4), float32] {
    %1509 = cast(%var_144, dtype="float32") /* ty=Tensor[(4, 14, 4), float32] */;
    log10(%1509) /* ty=Tensor[(4, 14, 4), float32] */
  };
  %1510(%var_187) /* ty=Tensor[(4, 14, 4), float32] */
}

def @func_22029() -> Tensor[(2, 14, 3), float64] {
  @func_22027() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_19781() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64]) {
  @func_19779() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64]) */
}

def @func_13549() -> (Tensor[(2, 14, 3), float64],) {
  %1513 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1511 = @func_9833() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1512 = %1511.1;
    (%1512,)
  };
  %1513() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_5908() -> Tensor[(3, 2, 14), float32] {
  %1514 = @func_4234() /* ty=(Tensor[(3, 2, 14), float32],) */;
  %1514.0
}

def @func_20466() -> Tensor[(2, 14, 3), float64] {
  @func_20464() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_18607() -> (Tensor[(2, 14, 3), float64],) {
  %1515 = @func_5036() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1516 = %1515.0;
  (%1516,)
}

def @func_12167() -> (Tensor[(2, 14, 3), float64],) {
  %1517 = @func_7453() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1518 = %1517.1;
  (%1518,)
}

def @func_6905(%var_6885: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), bool], Tensor[(2, 14, 3), float64], Tensor[(12, 8, 5), float32], Tensor[(480), float32]) {
  %1519 = @func_6528() /* ty=(Tensor[(3, 2, 14), int16], Tensor[(4, 14, 4), float32], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1520 = %1519.4;
  %1521 = cast(meta[relay.Constant][60] /* ty=Tensor[(2, 14, 3), float64] */, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %1522 = shape_of(%1520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1523 = cast(%1520, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %1524 = dyn.reshape(%1521, %1522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1525 = @func_4913() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
  %1526 = cast(%var_6885, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1527 = reshape(%1526, newshape=[12, 8, 5]) /* ty=Tensor[(12, 8, 5), float32] */;
  %1528 = @func_2709(%1527) /* ty=(Tensor[(12, 8, 5), float32],) */;
  %1529 = less(%1523, %1524) /* ty=Tensor[(2, 14, 3), bool] */;
  %1530 = %1525.6;
  %1531 = %1528.0;
  (%1529, %1530, %1531, %var_6885)
}

def @func_1846() -> Tensor[(2, 14, 3), float64] {
  %1532 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_1732() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %1532() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_22000(%var_21998: Tensor[(480), float32], %var_21999: Tensor[(224), float32]) -> (Tensor[(9, 1, 2), float64], Tensor[(3, 2, 14), bool], Tensor[(975), float64], Tensor[(480), float32], Tensor[(432), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) {
  %1551 = fn (%var_21958: Tensor[(480), float32], %var_21971: Tensor[(224), float32]) -> (Tensor[(9, 1, 2), float64], Tensor[(3, 2, 14), bool], Tensor[(975), float64], Tensor[(480), float32], Tensor[(432), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) {
    %1533 = @func_12488() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) */;
    %1534 = @func_8593() /* ty=(Tensor[(3, 2, 14), bool],) */;
    %1535 = cast(%var_21958, dtype="float32") /* ty=Tensor[(480), float32] */;
    %1536 = reshape(%1535, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %1537 = @func_16240(%1536) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], float64, Tensor[(975), float64], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64]) */;
    %1538 = cast(meta[relay.Constant][61] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %1539 = cast(%var_21971, dtype="float32") /* ty=Tensor[(224), float32] */;
    %1540 = reshape(%1538, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %1541 = reshape(%1539, newshape=[224]) /* ty=Tensor[(224), float32] */;
    %1542 = @func_10463(%1540, %1541) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(7, 15, 1), uint32], uint32, Tensor[(432), float32], Tensor[(224), float32]) */;
    %1543 = @func_11708() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %1544 = @func_17792() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64]) */;
    %1545 = %1533.1;
    %1546 = %1534.0;
    %1547 = %1537.3;
    %1548 = %1542.3;
    %1549 = %1543.0;
    %1550 = %1544.1;
    (%1545, %1546, %1547, %var_21958, %1548, meta[relay.Constant][61] /* ty=Tensor[(432), float32] */, %var_21971, %1549, %1550)
  };
  %1551(%var_21998, %var_21999) /* ty=(Tensor[(9, 1, 2), float64], Tensor[(3, 2, 14), bool], Tensor[(975), float64], Tensor[(480), float32], Tensor[(432), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */
}

def @func_11607(%var_11602: Tensor[(1, 13, 8), bool], %var_11603: Tensor[(8, 13, 8), bool]) -> Tensor[(8, 13, 8), bool] {
  %1552 = cast(%var_11602, dtype="bool") /* ty=Tensor[(1, 13, 8), bool] */;
  %1553 = cast(%var_11603, dtype="bool") /* ty=Tensor[(8, 13, 8), bool] */;
  logical_and(%1552, %1553) /* ty=Tensor[(8, 13, 8), bool] */
}

def @func_12589() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1556 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1554 = @func_4279() /* ty=Tensor[(2, 14, 3), float64] */;
    %1555 = @func_7955() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1554, %1555)
  };
  %1556() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_1317(%var_1314: uint32, %var_1315: Tensor[(432), float32], %var_1316: Tensor[(1, 224), float32]) -> (Tensor[(7, 15, 1), uint32], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(4, 14, 4), float32], Tensor[(1, 224), float32], Tensor[(9, 12, 4), float32], Tensor[(9, 12, 4), float32], Tensor[(7, 15, 1), float32]) {
  %1578 = fn (%var_1254: uint32, %var_1264: Tensor[(432), float32], %var_1271: Tensor[(1, 224), float32]) -> (Tensor[(7, 15, 1), uint32], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(4, 14, 4), float32], Tensor[(1, 224), float32], Tensor[(9, 12, 4), float32], Tensor[(9, 12, 4), float32], Tensor[(7, 15, 1), float32]) {
    %1557 = cast(%var_1254, dtype="uint32") /* ty=uint32 */;
    %1558 = cast(meta[relay.Constant][62] /* ty=Tensor[(7, 15, 1), uint32] */, dtype="uint32") /* ty=Tensor[(7, 15, 1), uint32] */;
    %1559 = cast(%var_1264, dtype="float32") /* ty=Tensor[(432), float32] */;
    %1560 = reshape(%1559, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
    %1561 = @func_793(%1560) /* ty=(Tensor[(9, 12, 4), float32],) */;
    %1562 = cast(%var_1271, dtype="float32") /* ty=Tensor[(1, 224), float32] */;
    %1563 = reshape(%1562, newshape=[4, 14, 4]) /* ty=Tensor[(4, 14, 4), float32] */;
    %1564 = %1561.0;
    %1565 = cast(%1564, dtype="float32") /* ty=Tensor[(9, 12, 4), float32] */;
    %1566 = reshape(%1565, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
    %1567 = @func_793(%1566) /* ty=(Tensor[(9, 12, 4), float32],) */;
    %1568 = cast(%var_1264, dtype="float32") /* ty=Tensor[(432), float32] */;
    %1569 = reshape(%1568, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), float32] */;
    %1570 = @func_793(%1569) /* ty=(Tensor[(9, 12, 4), float32],) */;
    %1571 = cast(%var_1254, dtype="float32") /* ty=float32 */;
    %1572 = cast(meta[relay.Constant][62] /* ty=Tensor[(7, 15, 1), uint32] */, dtype="float32") /* ty=Tensor[(7, 15, 1), float32] */;
    %1573 = bitwise_xor(%1557, %1558) /* ty=Tensor[(7, 15, 1), uint32] */;
    %1574 = @func_186(%1563) /* ty=Tensor[(4, 14, 4), float32] */;
    %1575 = %1567.0;
    %1576 = %1570.0;
    %1577 = floor_divide(%1571, %1572) /* ty=Tensor[(7, 15, 1), float32] */;
    (%1573, %1564, %var_1264, %1574, %var_1271, %1575, %1576, %1577)
  };
  %1578(%var_1314, %var_1315, %var_1316) /* ty=(Tensor[(7, 15, 1), uint32], Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(4, 14, 4), float32], Tensor[(1, 224), float32], Tensor[(9, 12, 4), float32], Tensor[(9, 12, 4), float32], Tensor[(7, 15, 1), float32]) */
}

def @func_6232() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_6230() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_9194() -> Tensor[(2, 14, 3), float64] {
  %1579 = @func_2617() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1579.2
}

def @func_12957() -> (Tensor[(2, 14, 3), float64],) {
  %1582 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1580 = @func_8312() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1581 = %1580.0;
    (%1581,)
  };
  %1582() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_13610() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_13608() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_22347() -> (Tensor[(15, 5, 13), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_22345() /* ty=(Tensor[(15, 5, 13), bool], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_19193() -> Tensor[(2, 14, 3), float64] {
  @func_19191() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_20712() -> (Tensor[(3, 2, 14), float32],) {
  %1583 = @func_19507() /* ty=Tensor[(3, 2, 14), float32] */;
  (%1583,)
}

def @func_19972(%var_19970: Tensor[(12), float64]) -> (Tensor[(10, 5, 5), float64], Tensor[(2, 6, 1), float64], Tensor[(12), float64]) {
  @func_19969(%var_19970) /* ty=(Tensor[(10, 5, 5), float64], Tensor[(2, 6, 1), float64], Tensor[(12), float64]) */
}

def @func_12668() -> Tensor[(2, 14, 3), float64] {
  %1584 = @func_7623() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1584.0
}

def @func_4046(%var_4005: Tensor[(432), float32], %var_4015: Tensor[(84), float32]) -> (Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(432), float32], Tensor[(64), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(9, ?, 2), float64]) {
  %1585 = cast(meta[relay.Constant][63] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1586 = cast(meta[relay.Constant][63] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1587 = reshape(%1585, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %1588 = reshape(%1586, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), float64] */;
  %1589 = cast(meta[relay.Constant][64] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %1590 = cast(%var_4005, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1591 = reshape(%1589, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %1592 = reshape(%1590, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1593 = @func_2252(%1591, %1592) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(64), float64], Tensor[(9, 12, 4), float32], Tensor[(432), float32]) */;
  %1594 = cast(%var_4015, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1595 = reshape(%1594, newshape=[3, 2, 14]) /* ty=Tensor[(3, 2, 14), float32] */;
  %1596 = @func_3075(%1595) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32], Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
  %1597 = @func_3900() /* ty=Tensor[(9, 1, 2), float64] */;
  %1598 = cast(%1597, dtype="float32") /* ty=Tensor[(9, 1, 2), float32] */;
  %1599 = erf(%1598) /* ty=Tensor[(9, 1, 2), float32] */;
  %1600 = cast(%1597, dtype="float64") /* ty=Tensor[(9, 1, 2), float64] */;
  %1601 = shape_of(%1599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1602 = cast(%1599, dtype="float64") /* ty=Tensor[(9, 1, 2), float64] */;
  %1603 = dyn.reshape(%1600, %1601, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1604 = @func_360(%1587, %1588) /* ty=Tensor[(10, 5, 5), float64] */;
  %1605 = %1593.4;
  %1606 = %1596.0;
  %1607 = floor_divide(%1602, %1603) /* ty=Tensor[(9, ?, 2), float64] */;
  (%1604, meta[relay.Constant][63] /* ty=Tensor[(250), float64] */, %1605, meta[relay.Constant][64] /* ty=Tensor[(64), float64] */, %var_4005, %1606, %var_4015, %1607)
}

def @func_8085(%var_8083: Tensor[(1, 6, 2), float64]) -> (Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(1, 6, 2), float32]) {
  @func_8082(%var_8083) /* ty=(Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64], Tensor[(1, 6, 2), float32]) */
}

def @func_20159() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1618 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1608 = @func_13548() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1609 = @func_8546() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1610 = @func_12588() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1611 = @func_2162() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1612 = @func_13774() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1613 = %1608.0;
    %1614 = %1609.0;
    %1615 = %1610.1;
    %1616 = %1611.0;
    %1617 = %1612.0;
    (%1613, %1614, %1615, %1616, %1617)
  };
  %1618() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_15185() -> (Tensor[(224), float32], Tensor[(2, 14, 3), float64]) {
  @func_15183() /* ty=(Tensor[(224), float32], Tensor[(2, 14, 3), float64]) */
}

def @func_7790() -> Tensor[(2, 14, 3), float64] {
  %1620 = fn () -> Tensor[(2, 14, 3), float64] {
    %1619 = @func_3394() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1619.0
  };
  %1620() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_21383() -> Tensor[(3, 2, 14), float32] {
  %1622 = fn () -> Tensor[(3, 2, 14), float32] {
    %1621 = @func_20712() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %1621.0
  };
  %1622() /* ty=Tensor[(3, 2, 14), float32] */
}

def @func_15322(%var_15321: Tensor[(70, 15), float64]) -> (Tensor[(15, 5, 14), float64], Tensor[(70, 15), float64], Tensor[(3, 2, 14), float64]) {
  %1629 = fn (%var_15306: Tensor[(70, 15), float64]) -> (Tensor[(15, 5, 14), float64], Tensor[(70, 15), float64], Tensor[(3, 2, 14), float64]) {
    %1623 = cast(%var_15306, dtype="float64") /* ty=Tensor[(70, 15), float64] */;
    %1624 = reshape(%1623, newshape=[15, 5, 14]) /* ty=Tensor[(15, 5, 14), float64] */;
    %1625 = @func_5908() /* ty=Tensor[(3, 2, 14), float32] */;
    %1626 = cast(%1625, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
    %1627 = @func_5444(%1624) /* ty=Tensor[(15, 5, 14), float64] */;
    %1628 = log(%1626) /* ty=Tensor[(3, 2, 14), float64] */;
    (%1627, %var_15306, %1628)
  };
  %1629(%var_15321) /* ty=(Tensor[(15, 5, 14), float64], Tensor[(70, 15), float64], Tensor[(3, 2, 14), float64]) */
}

def @func_22727(%var_22701: Tensor[(120, 4), float32], %var_22704: Tensor[(12), float64], %var_22715: Tensor[(120, 4), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(975), float64], Tensor[(2, 6, ?), int16], Tensor[(12), float64], Tensor[(3, 2, 14), float64], Tensor[(120, 4), bool], Tensor[(2, 14, 3), float64]) {
  %1630 = cast(%var_22701, dtype="float32") /* ty=Tensor[(120, 4), float32] */;
  %1631 = reshape(%1630, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1632 = @func_16240(%1631) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], float64, Tensor[(975), float64], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float64]) */;
  %1633 = cast(%var_22704, dtype="float64") /* ty=Tensor[(12), float64] */;
  %1634 = reshape(%1633, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), float64] */;
  %1635 = @func_12386(%1634) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 6, ?), int16], Tensor[(2, 6, 1), float64]) */;
  %1636 = cast(%var_22701, dtype="float64") /* ty=Tensor[(120, 4), float64] */;
  %1637 = asin(%1636) /* ty=Tensor[(120, 4), float64] */;
  %1638 = cast(%var_22715, dtype="bool") /* ty=Tensor[(120, 4), bool] */;
  %1639 = shape_of(%1637, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1640 = cast(%1637, dtype="bool") /* ty=Tensor[(120, 4), bool] */;
  %1641 = dyn.reshape(%1638, %1639, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1642 = cast(%var_22704, dtype="float64") /* ty=Tensor[(12), float64] */;
  %1643 = reshape(%1642, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), float64] */;
  %1644 = @func_12386(%1643) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 6, ?), int16], Tensor[(2, 6, 1), float64]) */;
  %1645 = @func_11253() /* ty=Tensor[(2, 14, 3), float64] */;
  %1646 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
  %1647 = %1632.3;
  %1648 = %1635.1;
  %1649 = @func_6265() /* ty=Tensor[(3, 2, 14), float64] */;
  %1650 = logical_and(%1640, %1641) /* ty=Tensor[(120, 4), bool] */;
  %1651 = %1644.0;
  (%1645, %1646, %1647, %1648, %var_22704, %1649, %1650, %1651)
}

def @func_9737(%var_9736: Tensor[(224), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(224), float32]) {
  %1656 = fn (%var_9728: Tensor[(224), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(224), float32]) {
    %1652 = cast(%var_9728, dtype="float32") /* ty=Tensor[(224), float32] */;
    %1653 = reshape(%1652, newshape=[4, 14, 4]) /* ty=Tensor[(4, 14, 4), float32] */;
    %1654 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
    %1655 = @func_186(%1653) /* ty=Tensor[(4, 14, 4), float32] */;
    (%1654, %1655, %var_9728)
  };
  %1656(%var_9736) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(224), float32]) */
}

def @func_3395() -> (Tensor[(2, 14, 3), float64],) {
  %1658 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1657 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1657,)
  };
  %1658() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_19627() -> (Tensor[(2, 14, 3), float64],) {
  @func_19625() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_19191() -> Tensor[(2, 14, 3), float64] {
  %1659 = @func_10177() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1659.1
}

def @func_13105() -> (Tensor[(2, 14, 3), float64],) {
  %1660 = @func_4431() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1660,)
}

def @func_19199() -> (Tensor[(2, 14, 3), float64],) {
  %1663 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1661 = @func_6160() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1662 = %1661.1;
    (%1662,)
  };
  %1663() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_4997() -> (Tensor[(9, 8, 1), uint64], Tensor[(64), float64], Tensor[(2, 14, 3), float64], Tensor[(9, 1, 1), float32]) {
  @func_4995() /* ty=(Tensor[(9, 8, 1), uint64], Tensor[(64), float64], Tensor[(2, 14, 3), float64], Tensor[(9, 1, 1), float32]) */
}

def @func_5961() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1667 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1664 = @func_2262() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1665 = @func_4279() /* ty=Tensor[(2, 14, 3), float64] */;
    %1666 = %1664.0;
    (%1665, %1666)
  };
  %1667() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_8548() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_8546() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_10520() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1672 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1668 = @func_6160() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1669 = @func_2233() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1670 = %1668.1;
    %1671 = %1669.2;
    (%1670, %1671)
  };
  %1672() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_19588() -> Tensor[(2, 14, 3), float64] {
  %1674 = fn () -> Tensor[(2, 14, 3), float64] {
    %1673 = @func_8546() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1673.0
  };
  %1674() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_17475(%var_17465: Tensor[(10, 2, 5), float32]) -> (Tensor[(10, 2, 5), float32], Tensor[(2, 14, 3), float64]) {
  %1675 = cast(%var_17465, dtype="float32") /* ty=Tensor[(10, 2, 5), float32] */;
  %1676 = erf(%1675) /* ty=Tensor[(10, 2, 5), float32] */;
  %1677 = @func_1632() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1676, %1677)
}

def @func_13043() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  @func_13041() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_11298() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  @func_11296() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) */
}

def @func_9671() -> (Tensor[(65, 15), float64],) {
  %1680 = fn () -> (Tensor[(65, 15), float64],) {
    %1678 = @func_8353() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(65, 15), float64]) */;
    %1679 = %1678.2;
    (%1679,)
  };
  %1680() /* ty=(Tensor[(65, 15), float64],) */
}

def @func_7769() -> Tensor[(2, 14, 3), float64] {
  %1681 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_2456() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %1681() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_3320() -> Tensor[(3, 2, 14), float32] {
  %1683 = fn () -> Tensor[(3, 2, 14), float32] {
    %1682 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %1682.0
  };
  %1683() /* ty=Tensor[(3, 2, 14), float32] */
}

def @func_17089() -> Tensor[(2, 14, 3), float64] {
  %1685 = fn () -> Tensor[(2, 14, 3), float64] {
    %1684 = @func_14555() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1684.0
  };
  %1685() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_9040() -> Tensor[(2, 14, 3), float64] {
  %1686 = fn () -> Tensor[(2, 14, 3), float64] {
    @func_6964() /* ty=Tensor[(2, 14, 3), float64] */
  };
  %1686() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_21047() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1687 = @func_10519() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1688 = @func_16795() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1689 = @func_18085() /* ty=(Tensor[(3, 2, 14), bool], Tensor[(2, 14, 3), float64]) */;
  %1690 = %1687.0;
  %1691 = %1688.0;
  %1692 = %1689.1;
  (%1690, %1691, %1692)
}

def @func_7319(%var_7316: float64, %var_7317: Tensor[(60), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64]) {
  %1693 = @func_5659() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %1694 = @func_6230() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1695 = cast(%var_7316, dtype="float64") /* ty=float64 */;
  %1696 = cast(%var_7317, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1697 = reshape(%1695, newshape=[]) /* ty=float64 */;
  %1698 = reshape(%1696, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float64] */;
  %1699 = @func_3340(%1697, %1698) /* ty=(Tensor[(12, 5, 1), float64],) */;
  %1700 = %1693.0;
  %1701 = %1694.0;
  %1702 = %1699.0;
  (%1700, %1701, %1702, %var_7316, %var_7317)
}

def @func_18332() -> (Tensor[(3, 3, 8), float32],) {
  %1707 = fn () -> (Tensor[(3, 3, 8), float32],) {
    %1703 = cast(meta[relay.Constant][65] /* ty=Tensor[(3, 3, 8), float32] */, dtype="float32") /* ty=Tensor[(3, 3, 8), float32] */;
    %1704 = rsqrt(%1703) /* ty=Tensor[(3, 3, 8), float32] */;
    %1705 = cast(%1704, dtype="float32") /* ty=Tensor[(3, 3, 8), float32] */;
    %1706 = sqrt(%1705) /* ty=Tensor[(3, 3, 8), float32] */;
    (%1706,)
  };
  %1707() /* ty=(Tensor[(3, 3, 8), float32],) */
}

def @func_22080() -> Tensor[(3, 2, 14), bool] {
  @func_13826() /* ty=Tensor[(3, 2, 14), bool] */
}

def @func_16680(%var_16679: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(480), float32], Tensor[(64), float64], Tensor[(2, 14, 3), float64], Tensor[(30, 2), int64]) {
  %1722 = fn (%var_16668: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(480), float32], Tensor[(64), float64], Tensor[(2, 14, 3), float64], Tensor[(30, 2), int64]) {
    %1708 = @func_15441() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1709 = cast(%var_16668, dtype="float32") /* ty=Tensor[(480), float32] */;
    %1710 = cast(meta[relay.Constant][66] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
    %1711 = reshape(%1709, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %1712 = reshape(%1710, newshape=[4, 16]) /* ty=Tensor[(4, 16), float64] */;
    %1713 = @func_3179(%1711, %1712) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float32], Tensor[(12, 8, 5), float32], Tensor[(480), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(4, 16), float64]) */;
    %1714 = cast(meta[relay.Constant][67] /* ty=Tensor[(30, 2), int64] */, dtype="int64") /* ty=Tensor[(30, 2), int64] */;
    %1715 = cast(meta[relay.Constant][67] /* ty=Tensor[(30, 2), int64] */, dtype="int64") /* ty=Tensor[(30, 2), int64] */;
    %1716 = reshape(%1714, newshape=[10, 2, 3]) /* ty=Tensor[(10, 2, 3), int64] */;
    %1717 = reshape(%1715, newshape=[10, 2, 3]) /* ty=Tensor[(10, 2, 3), int64] */;
    %1718 = @func_10981(%1716, %1717) /* ty=(Tensor[(10, 2, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1719 = %1708.0;
    %1720 = %1713.4;
    %1721 = %1718.1;
    (%1719, %1720, %var_16668, meta[relay.Constant][66] /* ty=Tensor[(64), float64] */, %1721, meta[relay.Constant][67] /* ty=Tensor[(30, 2), int64] */)
  };
  %1722(%var_16679) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(480), float32], Tensor[(64), float64], Tensor[(2, 14, 3), float64], Tensor[(30, 2), int64]) */
}

def @func_5107() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1723 = @func_2162() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1724 = @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1725 = %1723.0;
  %1726 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  %1727 = %1724.0;
  (%1725, %1726, %1727)
}

def @func_8353() -> (Tensor[(2, 14, 3), float64], Tensor[(15, 5, 13), bool], Tensor[(65, 15), float64]) {
  %1728 = @func_7453() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
  %1729 = cast(meta[relay.Constant][68] /* ty=Tensor[(65, 15), float64] */, dtype="float64") /* ty=Tensor[(65, 15), float64] */;
  %1730 = cast(meta[relay.Constant][68] /* ty=Tensor[(65, 15), float64] */, dtype="float64") /* ty=Tensor[(65, 15), float64] */;
  %1731 = reshape(%1729, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float64] */;
  %1732 = reshape(%1730, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float64] */;
  %1733 = @func_3888(%1731, %1732) /* ty=(Tensor[(15, 5, 13), bool],) */;
  %1734 = %1728.2;
  %1735 = %1733.0;
  (%1734, %1735, meta[relay.Constant][68] /* ty=Tensor[(65, 15), float64] */)
}

def @func_22812() -> (Tensor[(2, 14, 3), float64],) {
  %1738 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1736 = @func_20626() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1737 = %1736.0;
    (%1737,)
  };
  %1738() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_11296() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  %1739 = @func_9039() /* ty=Tensor[(2, 14, 3), float64] */;
  %1740 = @func_7789() /* ty=Tensor[(2, 14, 3), float64] */;
  %1741 = @func_4431() /* ty=Tensor[(2, 14, 3), float64] */;
  %1742 = @func_7983() /* ty=Tensor[(3, 2, 14), float32] */;
  (%1739, %1740, %1741, %1742)
}

def @func_7203(%var_7201: Tensor[(5, 195), float64], %var_7202: Tensor[(480), float32]) -> (Tensor[(3, 2, 14), float32], Tensor[(15, 5, 13), bool], Tensor[(5, 195), float64], Tensor[(3, 2, 14), float32], Tensor[(12, 5, 1), float64], float64, Tensor[(2, 14, 3), float64], Tensor[(60, 1), float32], Tensor[(480), float32], Tensor[(480), float32]) {
  @func_7199(%var_7201, %var_7202) /* ty=(Tensor[(3, 2, 14), float32], Tensor[(15, 5, 13), bool], Tensor[(5, 195), float64], Tensor[(3, 2, 14), float32], Tensor[(12, 5, 1), float64], float64, Tensor[(2, 14, 3), float64], Tensor[(60, 1), float32], Tensor[(480), float32], Tensor[(480), float32]) */
}

def @func_7983() -> Tensor[(3, 2, 14), float32] {
  %1743 = @func_5604() /* ty=(Tensor[(9, 1, 2), float32], Tensor[(3, 2, 14), float32]) */;
  %1743.1
}

def @func_21913() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(432), float32], Tensor[(432), float32]) {
  %1754 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(432), float32], Tensor[(432), float32]) {
    %1744 = @func_21047() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1745 = @func_16869() /* ty=(Tensor[(6, 12, 8), float32], Tensor[(2, 14, 3), float64], Tensor[(9, 11, ?), int64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1746 = cast(meta[relay.Constant][69] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %1747 = %1744.0;
    %1748 = cast(%1747, dtype="float32") /* ty=Tensor[(2, 14, 3), float32] */;
    %1749 = reshape(%1746, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %1750 = reshape(%1748, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %1751 = @func_4046(%1749, %1750) /* ty=(Tensor[(10, 5, 5), float64], Tensor[(250), float64], Tensor[(432), float32], Tensor[(64), float64], Tensor[(432), float32], Tensor[(2, 14, 3), float64], Tensor[(84), float32], Tensor[(9, ?, 2), float64]) */;
    %1752 = %1745.3;
    %1753 = %1751.4;
    (%1747, %1752, %1753, meta[relay.Constant][69] /* ty=Tensor[(432), float32] */)
  };
  %1754() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(432), float32], Tensor[(432), float32]) */
}

def @func_19420() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(3, 2, 14), float32]) {
  %1755 = @func_16018() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1756 = @func_14781() /* ty=(Tensor[(2, 14, 3), float64],) */;
  %1757 = %1755.0;
  %1758 = %1756.0;
  %1759 = @func_3319() /* ty=Tensor[(3, 2, 14), float32] */;
  (%1757, %1758, %1759)
}

def @func_13886() -> Tensor[(2, 14, 3), float64] {
  %1761 = fn () -> Tensor[(2, 14, 3), float64] {
    %1760 = @func_13608() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1760.1
  };
  %1761() /* ty=Tensor[(2, 14, 3), float64] */
}

def @func_17456(%var_17453: Tensor[(250), float64], %var_17454: Tensor[(975), float64], %var_17455: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(5, 195), float64], Tensor[(975), float64], Tensor[(480), float32], Tensor[(2, 14, 3), float64]) {
  %1775 = fn (%var_17411: Tensor[(250), float64], %var_17436: Tensor[(975), float64], %var_17437: Tensor[(480), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(5, 195), float64], Tensor[(975), float64], Tensor[(480), float32], Tensor[(2, 14, 3), float64]) {
    %1762 = @func_12216() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64], Tensor[(2, 14, 3), float64]) */;
    %1763 = cast(%var_17411, dtype="float64") /* ty=Tensor[(250), float64] */;
    %1764 = reshape(%1763, newshape=[25, 10]) /* ty=Tensor[(25, 10), float64] */;
    %1765 = @func_11915(%1764) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(25, 10), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */;
    %1766 = cast(%var_17436, dtype="float64") /* ty=Tensor[(975), float64] */;
    %1767 = cast(%var_17437, dtype="float32") /* ty=Tensor[(480), float32] */;
    %1768 = reshape(%1766, newshape=[5, 195]) /* ty=Tensor[(5, 195), float64] */;
    %1769 = reshape(%1767, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %1770 = @func_7199(%1768, %1769) /* ty=(Tensor[(3, 2, 14), float32], Tensor[(15, 5, 13), bool], Tensor[(5, 195), float64], Tensor[(3, 2, 14), float32], Tensor[(12, 5, 1), float64], float64, Tensor[(2, 14, 3), float64], Tensor[(60, 1), float32], Tensor[(480), float32], Tensor[(480), float32]) */;
    %1771 = %1762.2;
    %1772 = %1765.5;
    %1773 = %1770.2;
    %1774 = @func_9194() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1771, %1772, %var_17411, %1773, %var_17436, %var_17437, %1774)
  };
  %1775(%var_17453, %var_17454, %var_17455) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(250), float64], Tensor[(5, 195), float64], Tensor[(975), float64], Tensor[(480), float32], Tensor[(2, 14, 3), float64]) */
}

def @func_18867() -> (Tensor[(2, 14, 3), float64],) {
  @func_18865() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_11389() -> Tensor[(9, 1, 2), float64] {
  %1776 = fn () -> Tensor[(9, 1, 2), float64] {
    @func_9236() /* ty=Tensor[(9, 1, 2), float64] */
  };
  %1776() /* ty=Tensor[(9, 1, 2), float64] */
}

def @func_17647(%var_17646: Tensor[(4, 2, 3), float64]) -> Tensor[(4, 2, 3), float64] {
  %1778 = fn (%var_17637: Tensor[(4, 2, 3), float64]) -> Tensor[(4, 2, 3), float64] {
    %1777 = cast(%var_17637, dtype="float64") /* ty=Tensor[(4, 2, 3), float64] */;
    erf(%1777) /* ty=Tensor[(4, 2, 3), float64] */
  };
  %1778(%var_17646) /* ty=Tensor[(4, 2, 3), float64] */
}

def @func_21200(%var_21199: Tensor[(224), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1787 = fn (%var_21168: Tensor[(224), float32]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1779 = cast(%var_21168, dtype="float32") /* ty=Tensor[(224), float32] */;
    %1780 = reshape(%1779, newshape=[224]) /* ty=Tensor[(224), float32] */;
    %1781 = @func_9735(%1780) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 14, 4), float32], Tensor[(224), float32]) */;
    %1782 = @func_16795() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1783 = @func_7768() /* ty=Tensor[(2, 14, 3), float64] */;
    %1784 = %1781.0;
    %1785 = %1782.0;
    %1786 = @func_21065() /* ty=Tensor[(2, 14, 3), float64] */;
    (%1783, %1784, %var_21168, %1785, %1786)
  };
  %1787(%var_21199) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_20999() -> (Tensor[(2, 14, 3), float64],) {
  @func_20997() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_22732(%var_22729: Tensor[(120, 4), float32], %var_22730: Tensor[(12), float64], %var_22731: Tensor[(120, 4), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(975), float64], Tensor[(2, 6, ?), int16], Tensor[(12), float64], Tensor[(3, 2, 14), float64], Tensor[(120, 4), bool], Tensor[(2, 14, 3), float64]) {
  @func_22727(%var_22729, %var_22730, %var_22731) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(975), float64], Tensor[(2, 6, ?), int16], Tensor[(12), float64], Tensor[(3, 2, 14), float64], Tensor[(120, 4), bool], Tensor[(2, 14, 3), float64]) */
}

def @func_20348() -> (Tensor[(2, 14, 3), float64],) {
  @func_20346() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_15915() -> (Tensor[(2, 14, 3), float64],) {
  %1788 = @func_12708() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(224), float32]) */;
  %1789 = %1788.1;
  (%1789,)
}

def @func_4081(%var_4057: Tensor[(3, 9, 1), float64], %var_4063: Tensor[(84), int32], %var_4065: Tensor[(224, 1), float32]) -> (Tensor[(3, 9, 1), float64], Tensor[(7, 3, 4), int16], Tensor[(84), int32], Tensor[(1, 432), float32], Tensor[(224, 1), float32]) {
  %1790 = cast(%var_4057, dtype="float64") /* ty=Tensor[(3, 9, 1), float64] */;
  %1791 = cast(%var_4063, dtype="int32") /* ty=Tensor[(84), int32] */;
  %1792 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 432), float32] */, dtype="float32") /* ty=Tensor[(1, 432), float32] */;
  %1793 = cast(%var_4065, dtype="float32") /* ty=Tensor[(224, 1), float32] */;
  %1794 = reshape(%1791, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), int32] */;
  %1795 = reshape(%1792, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1796 = reshape(%1793, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %1797 = @func_1587(%1794, %1795, %1796) /* ty=(Tensor[(9, 12, 4), float32], Tensor[(432), float32], Tensor[(224), float32], Tensor[(7, 3, 4), int16], Tensor[(9, 12, 4), float32]) */;
  %1798 = cos(%1790) /* ty=Tensor[(3, 9, 1), float64] */;
  %1799 = %1797.3;
  (%1798, %1799, %var_4063, meta[relay.Constant][70] /* ty=Tensor[(1, 432), float32] */, %var_4065)
}

def @func_10937() -> (Tensor[(2, 14, 3), float64],) {
  %1802 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1800 = @func_10864() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1801 = %1800.0;
    (%1801,)
  };
  %1802() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_2234() -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
  %1808 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) {
    %1803 = @func_1882() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1804 = @func_2003() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1805 = @func_1732() /* ty=Tensor[(2, 14, 3), float64] */;
    %1806 = %1803.0;
    %1807 = %1804.0;
    (%1805, %1806, %1807)
  };
  %1808() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_7517(%var_7515: Tensor[(60), float64]) -> (Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64]) {
  @func_7514(%var_7515) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 14, 3), float64], Tensor[(12, 5, 1), float64], float64, Tensor[(60), float64]) */
}

def @func_3613() -> (Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) {
  %1821 = fn () -> (Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) {
    %1809 = @func_2275() /* ty=(Tensor[(2, 14, 3), float64],) */;
    %1810 = cast(meta[relay.Constant][71] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
    %1811 = reshape(%1810, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
    %1812 = @func_1447(%1811) /* ty=(Tensor[(4, 4, 4), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
    %1813 = @func_2885() /* ty=(Tensor[(3, 2, 14), bool],) */;
    %1814 = @func_3292() /* ty=(Tensor[(3, 2, 14), float32],) */;
    %1815 = %1814.0;
    %1816 = cast(%1815, dtype="float32") /* ty=Tensor[(3, 2, 14), float32] */;
    %1817 = %1809.0;
    %1818 = %1812.0;
    %1819 = %1813.0;
    %1820 = log2(%1816) /* ty=Tensor[(3, 2, 14), float32] */;
    (%1817, %1818, meta[relay.Constant][71] /* ty=Tensor[(64), float64] */, %1819, %1820)
  };
  %1821() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(4, 4, 4), float64], Tensor[(64), float64], Tensor[(3, 2, 14), bool], Tensor[(3, 2, 14), float32]) */
}

def @func_16759() -> (Tensor[(3, 2, 14), float32],) {
  %1823 = fn () -> (Tensor[(3, 2, 14), float32],) {
    %1822 = @func_3854() /* ty=Tensor[(3, 2, 14), float32] */;
    (%1822,)
  };
  %1823() /* ty=(Tensor[(3, 2, 14), float32],) */
}

def @func_14496() -> (Tensor[(2, 14, 3), float64],) {
  %1826 = fn () -> (Tensor[(2, 14, 3), float64],) {
    %1824 = @func_13820() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(9, 1, 2), float64]) */;
    %1825 = %1824.0;
    (%1825,)
  };
  %1826() /* ty=(Tensor[(2, 14, 3), float64],) */
}

def @func_8233() -> (Tensor[(2, 14, 3), float64],) {
  %1827 = @func_1845() /* ty=Tensor[(2, 14, 3), float64] */;
  (%1827,)
}

def @func_10823() -> (Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) {
  @func_10821() /* ty=(Tensor[(3, 2, 14), float32], Tensor[(2, 14, 3), float64]) */
}

def @func_19969(%var_19962: Tensor[(12), float64]) -> (Tensor[(10, 5, 5), float64], Tensor[(2, 6, 1), float64], Tensor[(12), float64]) {
  %1828 = @func_5659() /* ty=(Tensor[(2, 14, 3), float64], Tensor[(10, 5, 5), float64], Tensor[(250), float64]) */;
  %1829 = cast(%var_19962, dtype="float64") /* ty=Tensor[(12), float64] */;
  %1830 = reshape(%1829, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), float64] */;
  %1831 = @func_12386(%1830) /* ty=(Tensor[(2, 14, 3), float64], Tensor[(2, 6, ?), int16], Tensor[(2, 6, 1), float64]) */;
  %1832 = %1828.1;
  %1833 = %1831.2;
  (%1832, %1833, %var_19962)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen971/build/output.py", line 7063, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [15:06:48] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


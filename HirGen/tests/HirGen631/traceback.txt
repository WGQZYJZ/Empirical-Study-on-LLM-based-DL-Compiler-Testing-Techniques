==========mod==========
#[version = "0.0.5"]
def @func_11479(%var_11423: Tensor[(1056), float64], %var_11426: Tensor[(84), float32], %var_11428: Tensor[(288), float64], %var_11451: Tensor[(1536), float64], %var_11454: Tensor[(45), float64]) -> (Tensor[(5, 10, 13), float64], Tensor[(576), uint16], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(1350), int64], Tensor[(288), float64], Tensor[(15, 10, 9), int64], Tensor[(5, 10, 13), float64], Tensor[(45), float64], Tensor[(1536), float64], Tensor[(140), float32], Tensor[(1200), bool], Tensor[(45), float64], Tensor[(1056), float64]) {
  %0 = cast(%var_11426, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1 = cast(meta[relay.Constant][1] /* ty=Tensor[(1350), int64] */, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %2 = cast(%var_11428, dtype="float64") /* ty=Tensor[(288), float64] */;
  %3 = reshape(%0, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %4 = reshape(%1, newshape=[3, 450]) /* ty=Tensor[(3, 450), int64] */;
  %5 = reshape(%2, newshape=[72, 4]) /* ty=Tensor[(72, 4), float64] */;
  %6 = @func_9107(%3, %4, %5) /* ty=(Tensor[(5, 10, 13), bool], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(3, 450), int64], Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(72, 4), float64]) */;
  %7 = cast(meta[relay.Constant][1] /* ty=Tensor[(1350), int64] */, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(1350), int64] */, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %9 = reshape(%7, newshape=[15, 10, 9]) /* ty=Tensor[(15, 10, 9), int64] */;
  %10 = reshape(%8, newshape=[15, 10, 9]) /* ty=Tensor[(15, 10, 9), int64] */;
  %11 = cast(%var_11451, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %12 = cast(meta[relay.Constant][2] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %13 = cast(meta[relay.Constant][3] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %14 = cast(%var_11454, dtype="float64") /* ty=Tensor[(45), float64] */;
  %15 = reshape(%11, newshape=[12, 8, 16]) /* ty=Tensor[(12, 8, 16), float64] */;
  %16 = reshape(%12, newshape=[5, 28]) /* ty=Tensor[(5, 28), float32] */;
  %17 = reshape(%13, newshape=[1200]) /* ty=Tensor[(1200), bool] */;
  %18 = reshape(%14, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %19 = @func_4464(%15, %16, %17, %18) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(10, 12, 10), int64], Tensor[(120), int32], Tensor[(5, 28), float32], Tensor[(1200), bool], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */;
  %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %21 = cast(%var_11423, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %22 = reshape(%20, newshape=[576]) /* ty=Tensor[(576), uint16] */;
  %23 = reshape(%21, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %24 = @func_9466(%22, %23) /* ty=(Tensor[(135), bool], Tensor[(1056), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(468), int16]) */;
  %25 = %24.1;
  %26 = cast(%var_11423, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %27 = shape_of(%25, dtype="int32") /* ty=Tensor[(1), int32] */;
  %28 = cast(%25, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?), float64] */;
  %30 = @func_9663() /* ty=Tensor[(5, 10, 13), float64] */;
  %31 = %6.1;
  %32 = @func_3571(%9, %10) /* ty=Tensor[(15, 10, 9), int64] */;
  %33 = @func_10688() /* ty=Tensor[(5, 10, 13), float64] */;
  %34 = %19.10;
  %35 = floor_mod(%28, %29) /* ty=Tensor[(1056), float64] */;
  (%30, meta[relay.Constant][0] /* ty=Tensor[(576), uint16] */, %31, %var_11426, meta[relay.Constant][1] /* ty=Tensor[(1350), int64] */, %var_11428, %32, %33, %34, %var_11451, meta[relay.Constant][2] /* ty=Tensor[(140), float32] */, meta[relay.Constant][3] /* ty=Tensor[(1200), bool] */, %var_11454, %35)
}

def @func_5418(%var_5406: Tensor[(15, 2, 5), float32], %var_5410: Tensor[(468), int16]) -> (Tensor[(15, 2, 5), float32], Tensor[(135), bool], Tensor[(468), int16]) {
  %36 = cast(%var_5406, dtype="float32") /* ty=Tensor[(15, 2, 5), float32] */;
  %37 = cast(%var_5410, dtype="int16") /* ty=Tensor[(468), int16] */;
  %38 = reshape(%37, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %39 = @func_3226(%38) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) */;
  %40 = sinh(%36) /* ty=Tensor[(15, 2, 5), float32] */;
  %41 = %39.1;
  (%40, %41, %var_5410)
}

def @func_14072() -> Tensor[(5, 10, 13), float32] {
  %42 = @func_12730() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %42.0
}

def @func_11001(%var_10902: Tensor[(56), float32], %var_10935: Tensor[(675, 2), float32], %var_10987: Tensor[(132), uint16], %var_10995: Tensor[(288), float64], %var_10997: Tensor[(45), float64]) -> (Tensor[(468), int16], Tensor[(7, 2, 4), float32], Tensor[(56), float32], Tensor[(11, 12, 8), float64], Tensor[(5, 10, 13), float32], Tensor[(675, 2), float32], Tensor[(132), uint16], Tensor[(675), float32], Tensor[(132), uint16], Tensor[(10, 6, 11), float32], Tensor[(84), float32], Tensor[(288), float64], float64, Tensor[(45), float64]) {
  %43 = @func_8415() /* ty=(Tensor[(468), int16],) */;
  %44 = cast(%var_10902, dtype="float32") /* ty=Tensor[(56), float32] */;
  %45 = cast(%var_10902, dtype="float32") /* ty=Tensor[(56), float32] */;
  %46 = reshape(%44, newshape=[7, 2, 4]) /* ty=Tensor[(7, 2, 4), float32] */;
  %47 = reshape(%45, newshape=[7, 2, 4]) /* ty=Tensor[(7, 2, 4), float32] */;
  %48 = @func_1175(%46, %47) /* ty=(Tensor[(7, 2, 4), float32],) */;
  %49 = cast(%var_10935, dtype="float32") /* ty=Tensor[(675, 2), float32] */;
  %50 = reshape(%49, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), float32] */;
  %51 = @func_9637(%50) /* ty=(Tensor[(15, 15, 6), float32], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %52 = @func_10640() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) */;
  %53 = cast(meta[relay.Constant][4] /* ty=Tensor[(675, 2), float32] */, dtype="float32") /* ty=Tensor[(675, 2), float32] */;
  %54 = shape_of(%var_10935, dtype="int32") /* ty=Tensor[(2), int32] */;
  %55 = cast(%var_10935, dtype="float32") /* ty=Tensor[(675, 2), float32] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %57 = cast(meta[relay.Constant][5] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %58 = cast(%var_10987, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %59 = reshape(%57, newshape=[675, 1]) /* ty=Tensor[(675, 1), float32] */;
  %60 = reshape(%58, newshape=[132]) /* ty=Tensor[(132), uint16] */;
  %61 = @func_9956(%59, %60) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(5, 135), float32], Tensor[(539, 2), float32], Tensor[(675, 1), float64], Tensor[(132), uint16], Tensor[(192), float64], Tensor[(1056), float64], Tensor[(132), uint16], Tensor[(576), uint16]) */;
  %62 = cast(meta[relay.Constant][6] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %63 = cast(%var_10995, dtype="float64") /* ty=Tensor[(288), float64] */;
  %64 = cast(0.479729f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %65 = cast(%var_10997, dtype="float64") /* ty=Tensor[(45), float64] */;
  %66 = reshape(%62, newshape=[84, 1]) /* ty=Tensor[(84, 1), float32] */;
  %67 = reshape(%63, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %68 = reshape(%64, newshape=[]) /* ty=float64 */;
  %69 = reshape(%65, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %70 = @func_10156(%66, %67, %68, %69) /* ty=(Tensor[(135), bool], Tensor[(10, 6, 11), float32], Tensor[(660, 1), float32], Tensor[(5, 10, 13), float32], Tensor[(27, 50), int64], Tensor[(84, 288), bool], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */;
  %71 = %43.0;
  %72 = %48.0;
  %73 = %51.1;
  %74 = %52.0;
  %75 = floor_mod(%55, %56) /* ty=Tensor[(675, 2), float32] */;
  %76 = %61.7;
  %77 = %70.1;
  (%71, %72, %var_10902, %73, %74, %75, %76, meta[relay.Constant][5] /* ty=Tensor[(675), float32] */, %var_10987, %77, meta[relay.Constant][6] /* ty=Tensor[(84), float32] */, %var_10995, 0.479729f64 /* ty=float64 */, %var_10997)
}

def @func_6030(%var_5982: Tensor[(7, 2, 6), float32], %var_5983: Tensor[(7, 2, 6), float32], %var_6006: Tensor[(1350), int64]) -> (Tensor[(7, 2, 6), bool], Tensor[(7, 2, 6), float32], Tensor[(15, 10, 9), int64], Tensor[(1350), int64]) {
  %78 = cast(%var_5983, dtype="bool") /* ty=Tensor[(7, 2, 6), bool] */;
  %79 = shape_of(%var_5982, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%var_5982, dtype="bool") /* ty=Tensor[(7, 2, 6), bool] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %82 = cast(%var_5983, dtype="float32") /* ty=Tensor[(7, 2, 6), float32] */;
  %83 = exp(%82) /* ty=Tensor[(7, 2, 6), float32] */;
  %84 = cast(%var_5982, dtype="float32") /* ty=Tensor[(7, 2, 6), float32] */;
  %85 = shape_of(%83, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%83, dtype="float32") /* ty=Tensor[(7, 2, 6), float32] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %88 = cast(%var_6006, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %89 = cast(%var_6006, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %90 = reshape(%88, newshape=[15, 10, 9]) /* ty=Tensor[(15, 10, 9), int64] */;
  %91 = reshape(%89, newshape=[15, 10, 9]) /* ty=Tensor[(15, 10, 9), int64] */;
  %92 = equal(%80, %81) /* ty=Tensor[(7, 2, 6), bool] */;
  %93 = mod(%86, %87) /* ty=Tensor[(7, 2, 6), float32] */;
  %94 = @func_3571(%90, %91) /* ty=Tensor[(15, 10, 9), int64] */;
  (%92, %93, %94, %var_6006)
}

def @func_9562() -> (Tensor[(5, 10, 13), float32], Tensor[(468), int16]) {
  %95 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %96 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  %97 = %95.2;
  (%96, %97)
}

def @func_3226(%var_3177: Tensor[(12, 3, 13), int16]) -> (Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) {
  %98 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 3, 13), int16] */, dtype="bool") /* ty=Tensor[(12, 3, 13), bool] */;
  %99 = shape_of(%var_3177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%var_3177, dtype="bool") /* ty=Tensor[(12, 3, 13), bool] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %102 = cast(meta[relay.Constant][8] /* ty=Tensor[(135), float32] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %103 = log10(%102) /* ty=Tensor[(135), float64] */;
  %104 = cast(meta[relay.Constant][8] /* ty=Tensor[(135), float32] */, dtype="float32") /* ty=Tensor[(135), float32] */;
  %105 = reshape(%104, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float32] */;
  %106 = @func_327(%105) /* ty=(Tensor[(9, 15, 1), float32],) */;
  %107 = %106.0;
  %108 = cast(%107, dtype="bool") /* ty=Tensor[(9, 15, 1), bool] */;
  %109 = shape_of(%103, dtype="int32") /* ty=Tensor[(1), int32] */;
  %110 = cast(%103, dtype="bool") /* ty=Tensor[(135), bool] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?), bool] */;
  %112 = cast(meta[relay.Constant][9] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %113 = shape_of(%103, dtype="int32") /* ty=Tensor[(1), int32] */;
  %114 = cast(%103, dtype="float64") /* ty=Tensor[(135), float64] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?), float64] */;
  %116 = not_equal(%100, %101) /* ty=Tensor[(12, 3, 13), bool] */;
  %117 = equal(%110, %111) /* ty=Tensor[(135), bool] */;
  %118 = subtract(%114, %115) /* ty=Tensor[(135), float64] */;
  (%116, %117, %118)
}

def @func_4182(%var_4175: float64, %var_4176: Tensor[(9, 5, 1), float64]) -> (Tensor[(9, 5, 1), bool],) {
  %119 = cast(%var_4175, dtype="bool") /* ty=bool */;
  %120 = cast(%var_4176, dtype="bool") /* ty=Tensor[(9, 5, 1), bool] */;
  %121 = less_equal(%119, %120) /* ty=Tensor[(9, 5, 1), bool] */;
  (%121,)
}

def @func_11723(%var_11625: Tensor[(100), uint32], %var_11681: Tensor[(6, 78), int16]) -> (Tensor[(150), float32], Tensor[(10, 2, 5), bool], Tensor[(100), uint32], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(1056), float64], Tensor[(1350), float32], Tensor[(135), bool], Tensor[(6, 78), int16], Tensor[(8, 10, 2), float64], Tensor[(1, 1, 3), bool], float32, Tensor[(1078), float32]) {
  %122 = @func_10605() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(15, 2, 5), float32], Tensor[(150), float32], Tensor[(468), int16]) */;
  %123 = cast(%var_11625, dtype="uint32") /* ty=Tensor[(100), uint32] */;
  %124 = reshape(%123, newshape=[10, 2, 5]) /* ty=Tensor[(10, 2, 5), uint32] */;
  %125 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %126 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %127 = cast(meta[relay.Constant][10] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %128 = reshape(%127, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %129 = cast(meta[relay.Constant][11] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %130 = reshape(%129, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), float32] */;
  %131 = @func_9637(%130) /* ty=(Tensor[(15, 15, 6), float32], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %132 = cast(%var_11681, dtype="int16") /* ty=Tensor[(6, 78), int16] */;
  %133 = reshape(%132, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %134 = @func_3226(%133) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) */;
  %135 = @func_10298() /* ty=(Tensor[(8, 10, 2), float64],) */;
  %136 = cast(-6.7656f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %137 = cast(meta[relay.Constant][12] /* ty=Tensor[(1078), float32] */, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %138 = reshape(%136, newshape=[]) /* ty=float32 */;
  %139 = reshape(%137, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), float32] */;
  %140 = @func_3525(%138, %139) /* ty=(Tensor[(14, 7, 11), float32], Tensor[(1, 1, 3), bool]) */;
  %141 = %122.2;
  %142 = @func_6223(%124) /* ty=Tensor[(10, 2, 5), bool] */;
  %143 = %125.0;
  %144 = %126.0;
  %145 = @func_1489(%128) /* ty=Tensor[(11, 12, 8), float64] */;
  %146 = %131.2;
  %147 = %134.1;
  %148 = %135.0;
  %149 = %140.1;
  (%141, %142, %var_11625, %143, %144, %145, meta[relay.Constant][10] /* ty=Tensor[(1056), float64] */, %146, meta[relay.Constant][11] /* ty=Tensor[(1350), float32] */, %147, %var_11681, %148, %149, -6.7656f /* ty=float32 */, meta[relay.Constant][12] /* ty=Tensor[(1078), float32] */)
}

def @func_10555() -> Tensor[(135), bool] {
  %150 = @func_9016() /* ty=(Tensor[(135), bool],) */;
  %150.0
}

def @func_5964(%var_5959: Tensor[(13, 14, 3), uint16], %var_5960: Tensor[(13, 14, 3), uint16]) -> Tensor[(13, 14, 3), uint16] {
  %151 = cast(%var_5960, dtype="uint16") /* ty=Tensor[(13, 14, 3), uint16] */;
  %152 = shape_of(%var_5959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%var_5959, dtype="uint16") /* ty=Tensor[(13, 14, 3), uint16] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%153, %154) /* ty=Tensor[(13, 14, 3), uint16] */
}

def @func_12839() -> (Tensor[(5, 10, 13), float32],) {
  %155 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  (%155,)
}

def @func_9896(%var_9885: Tensor[(12, 4, 4), float64], %var_9891: Tensor[(1056), float64], %var_9892: Tensor[(132), uint16], %var_9894: Tensor[(576), uint16]) -> (Tensor[(12, 4, 4), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(132), uint16], int64, Tensor[(576), uint16]) {
  %156 = cast(%var_9885, dtype="float64") /* ty=Tensor[(12, 4, 4), float64] */;
  %157 = cast(%var_9891, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %158 = cast(%var_9892, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %159 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %160 = cast(%var_9894, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %161 = reshape(%157, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %162 = reshape(%158, newshape=[3, 44]) /* ty=Tensor[(3, 44), uint16] */;
  %163 = reshape(%159, newshape=[]) /* ty=int64 */;
  %164 = reshape(%160, newshape=[576]) /* ty=Tensor[(576), uint16] */;
  %165 = @func_5500(%161, %162, %163, %164) /* ty=(Tensor[(15, 13, 6), bool], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(8448), uint64], Tensor[(8, 1, 16), bool], int64, Tensor[(128), int64], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(1056), float64], Tensor[(576), uint16]) */;
  %166 = log10(%156) /* ty=Tensor[(12, 4, 4), float64] */;
  %167 = %165.11;
  (%166, %167, %var_9891, %var_9892, 1 /* ty=int64 */, %var_9894)
}

def @func_3571(%var_3557: Tensor[(15, 10, 9), int64], %var_3558: Tensor[(15, 10, 9), int64]) -> Tensor[(15, 10, 9), int64] {
  %168 = cast(%var_3558, dtype="int64") /* ty=Tensor[(15, 10, 9), int64] */;
  %169 = shape_of(%var_3557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%var_3557, dtype="int64") /* ty=Tensor[(15, 10, 9), int64] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_or(%170, %171) /* ty=Tensor[(15, 10, 9), int64] */
}

def @func_13448() -> (Tensor[(135), bool], Tensor[(5, 10, 13), float32]) {
  %172 = @func_9016() /* ty=(Tensor[(135), bool],) */;
  %173 = %172.0;
  %174 = @func_11305() /* ty=Tensor[(5, 10, 13), float32] */;
  (%173, %174)
}

def @func_10605() -> (Tensor[(5, 10, 13), float32], Tensor[(15, 2, 5), float32], Tensor[(150), float32], Tensor[(468), int16]) {
  %175 = @func_8612() /* ty=Tensor[(5, 10, 13), float32] */;
  %176 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%175, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %180 = cast(meta[relay.Constant][14] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %181 = cast(meta[relay.Constant][15] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %182 = reshape(%180, newshape=[15, 2, 5]) /* ty=Tensor[(15, 2, 5), float32] */;
  %183 = reshape(%181, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %184 = @func_5418(%182, %183) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %185 = add(%178, %179) /* ty=Tensor[(5, 10, 13), float32] */;
  %186 = %184.0;
  (%185, %186, meta[relay.Constant][14] /* ty=Tensor[(150), float32] */, meta[relay.Constant][15] /* ty=Tensor[(468), int16] */)
}

def @func_2572(%var_2562: Tensor[(2, 10, 7), float32]) -> Tensor[(2, 10, 7), float32] {
  %187 = cast(%var_2562, dtype="float32") /* ty=Tensor[(2, 10, 7), float32] */;
  exp(%187) /* ty=Tensor[(2, 10, 7), float32] */
}

def @func_13307(%var_13256: Tensor[(5, 10, 13), float32], %var_13295: float64, %var_13296: Tensor[(468), int16]) -> (Tensor[(5, 10, 13), uint16], Tensor[(8, 10, 2), float64], Tensor[(8, 10, 2), float64], Tensor[(5, 10, 13), float32], float64, Tensor[(468), int16]) {
  %188 = @func_8371() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %189 = %188.0;
  %190 = cast(%var_13256, dtype="uint16") /* ty=Tensor[(5, 10, 13), uint16] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%189, dtype="uint16") /* ty=Tensor[(5, 10, 13), uint16] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %194 = cast(%var_13295, dtype="float64") /* ty=float64 */;
  %195 = cast(%var_13296, dtype="int16") /* ty=Tensor[(468), int16] */;
  %196 = reshape(%194, newshape=[]) /* ty=float64 */;
  %197 = reshape(%195, newshape=[468, 1]) /* ty=Tensor[(468, 1), int16] */;
  %198 = @func_12423(%196, %197) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(288), float64], Tensor[(288), float64], Tensor[(576), uint16], Tensor[(1936), int32], Tensor[(5, 10, 13), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(135), float64], Tensor[(468, 1), int16], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32]) */;
  %199 = bitwise_and(%192, %193) /* ty=Tensor[(5, 10, 13), uint16] */;
  %200 = @func_10495() /* ty=Tensor[(8, 10, 2), float64] */;
  %201 = @func_12545() /* ty=Tensor[(8, 10, 2), float64] */;
  %202 = %198.13;
  (%199, %200, %201, %202, %var_13295, %var_13296)
}

def @func_13501(%var_13498: Tensor[(10, 7, 3), float64]) -> (Tensor[(10, 7, 3), float64],) {
  %203 = cast(%var_13498, dtype="float64") /* ty=Tensor[(10, 7, 3), float64] */;
  %204 = sqrt(%203) /* ty=Tensor[(10, 7, 3), float64] */;
  (%204,)
}

def @func_7135(%var_7125: Tensor[(16, 3, 6), float64], %var_7126: Tensor[(16, 3, 6), float64]) -> (Tensor[(16, 3, 6), float64],) {
  %205 = cast(%var_7126, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
  %206 = shape_of(%var_7125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%var_7125, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %209 = mod(%207, %208) /* ty=Tensor[(16, 3, 6), float64] */;
  (%209,)
}

def @func_8415() -> (Tensor[(468), int16],) {
  %210 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %211 = %210.2;
  (%211,)
}

def @func_8473() -> (Tensor[(5, 10, 13), float32],) {
  %212 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  (%212,)
}

def @func_9177(%var_9171: Tensor[(176), int32], %var_9172: Tensor[(1936), int32]) -> (Tensor[(5, 10, 13), float64], Tensor[(15, 11, 3), float32], Tensor[(495), float32], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) {
  %213 = cast(meta[relay.Constant][16] /* ty=Tensor[(495), float32] */, dtype="float32") /* ty=Tensor[(495), float32] */;
  %214 = reshape(%213, newshape=[15, 11, 3]) /* ty=Tensor[(15, 11, 3), float32] */;
  %215 = cast(%var_9171, dtype="int32") /* ty=Tensor[(176), int32] */;
  %216 = cast(%var_9172, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %217 = reshape(%215, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), int32] */;
  %218 = reshape(%216, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), int32] */;
  %219 = @func_7527(%217, %218) /* ty=(Tensor[(11, 16, 11), float64],) */;
  %220 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
  %221 = @func_5725(%214) /* ty=Tensor[(15, 11, 3), float32] */;
  %222 = %219.0;
  (%220, %221, meta[relay.Constant][16] /* ty=Tensor[(495), float32] */, %222, %var_9171, %var_9172)
}

def @func_8371() -> (Tensor[(5, 10, 13), float32],) {
  %223 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  %224 = cast(%223, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %225 = sinh(%224) /* ty=Tensor[(5, 10, 13), float32] */;
  (%225,)
}

def @func_673(%var_658: Tensor[(10, 6, 11), float32]) -> Tensor[(10, 6, 11), float32] {
  %226 = cast(%var_658, dtype="float32") /* ty=Tensor[(10, 6, 11), float32] */;
  %227 = cos(%226) /* ty=Tensor[(10, 6, 11), float32] */;
  %228 = cast(%227, dtype="float32") /* ty=Tensor[(10, 6, 11), float32] */;
  log2(%228) /* ty=Tensor[(10, 6, 11), float32] */
}

def @func_10156(%var_10111: Tensor[(84, 1), float32], %var_10113: Tensor[(288), float64], %var_10143: float64, %var_10144: Tensor[(45), float64]) -> (Tensor[(135), bool], Tensor[(10, 6, 11), float32], Tensor[(660, 1), float32], Tensor[(5, 10, 13), float32], Tensor[(27, 50), int64], Tensor[(84, 288), bool], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) {
  %229 = @func_9016() /* ty=(Tensor[(135), bool],) */;
  %230 = cast(meta[relay.Constant][17] /* ty=Tensor[(660, 1), float32] */, dtype="float32") /* ty=Tensor[(660, 1), float32] */;
  %231 = reshape(%230, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), float32] */;
  %232 = cast(%var_10111, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %233 = cast(meta[relay.Constant][18] /* ty=Tensor[(27, 50), int64] */, dtype="int64") /* ty=Tensor[(27, 50), int64] */;
  %234 = cast(%var_10113, dtype="float64") /* ty=Tensor[(288), float64] */;
  %235 = reshape(%232, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %236 = reshape(%233, newshape=[3, 450]) /* ty=Tensor[(3, 450), int64] */;
  %237 = reshape(%234, newshape=[72, 4]) /* ty=Tensor[(72, 4), float64] */;
  %238 = @func_9107(%235, %236, %237) /* ty=(Tensor[(5, 10, 13), bool], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(3, 450), int64], Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(72, 4), float64]) */;
  %239 = cast(%var_10113, dtype="bool") /* ty=Tensor[(288), bool] */;
  %240 = cast(%var_10111, dtype="bool") /* ty=Tensor[(84, 1), bool] */;
  %241 = cast(%var_10143, dtype="float64") /* ty=float64 */;
  %242 = cast(%var_10144, dtype="float64") /* ty=Tensor[(45), float64] */;
  %243 = reshape(%241, newshape=[]) /* ty=float64 */;
  %244 = reshape(%242, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), float64] */;
  %245 = @func_4182(%243, %244) /* ty=(Tensor[(9, 5, 1), bool],) */;
  %246 = %229.0;
  %247 = @func_673(%231) /* ty=Tensor[(10, 6, 11), float32] */;
  %248 = %238.4;
  %249 = equal(%239, %240) /* ty=Tensor[(84, 288), bool] */;
  %250 = %245.0;
  (%246, %247, meta[relay.Constant][17] /* ty=Tensor[(660, 1), float32] */, %248, meta[relay.Constant][18] /* ty=Tensor[(27, 50), int64] */, %249, %250, %var_10143, %var_10144)
}

def @func_9375() -> (Tensor[(5, 10, 13), float64],) {
  %251 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
  (%251,)
}

def @func_11781(%var_11770: Tensor[(128), int64]) -> (Tensor[(5, 10, 13), float64], Tensor[(135), float32], int64, Tensor[(128), int64]) {
  %252 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %253 = cast(%var_11770, dtype="int64") /* ty=Tensor[(128), int64] */;
  %254 = reshape(%252, newshape=[]) /* ty=int64 */;
  %255 = reshape(%253, newshape=[8, 1, 16]) /* ty=Tensor[(8, 1, 16), int64] */;
  %256 = @func_4035(%254, %255) /* ty=(Tensor[(8, 1, 16), bool], Tensor[(9, 15, 1), float32], Tensor[(135), float32]) */;
  %257 = @func_10811() /* ty=Tensor[(5, 10, 13), float64] */;
  %258 = %256.2;
  (%257, %258, 5 /* ty=int64 */, %var_11770)
}

def @func_8173(%var_8138: Tensor[(1078), float32], %var_8163: Tensor[(1, 99), float32], %var_8168: Tensor[(1350, 1), int64]) -> (Tensor[(5, 10, 13), float32], Tensor[(10, 2, 5), bool], Tensor[(100), uint32], Tensor[(1, 1, 3), bool], float32, Tensor[(1078), float32], Tensor[(5, 10, 13), float64], Tensor[(9, 15, 1), float32], Tensor[(16, 8), int64], Tensor[(11, 1, 9), float32], Tensor[(1, 99), float32], Tensor[(15, 10, 9), int64], Tensor[(1350, 1), int64]) {
  %259 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  %260 = cast(%259, dtype="float64") /* ty=Tensor[(5, 10, 13), float64] */;
  %261 = log10(%260) /* ty=Tensor[(5, 10, 13), float64] */;
  %262 = cast(%261, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %263 = cast(meta[relay.Constant][19] /* ty=Tensor[(100), uint32] */, dtype="uint32") /* ty=Tensor[(100), uint32] */;
  %264 = reshape(%263, newshape=[10, 2, 5]) /* ty=Tensor[(10, 2, 5), uint32] */;
  %265 = cast(7.04914f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %266 = cast(%var_8138, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %267 = reshape(%265, newshape=[]) /* ty=float32 */;
  %268 = reshape(%266, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), float32] */;
  %269 = @func_3525(%267, %268) /* ty=(Tensor[(14, 7, 11), float32], Tensor[(1, 1, 3), bool]) */;
  %270 = cast(%261, dtype="float64") /* ty=Tensor[(5, 10, 13), float64] */;
  %271 = cast(7.04914f /* ty=float32 */, dtype="int64") /* ty=int64 */;
  %272 = cast(meta[relay.Constant][20] /* ty=Tensor[(16, 8), int64] */, dtype="int64") /* ty=Tensor[(16, 8), int64] */;
  %273 = reshape(%271, newshape=[]) /* ty=int64 */;
  %274 = reshape(%272, newshape=[8, 1, 16]) /* ty=Tensor[(8, 1, 16), int64] */;
  %275 = @func_4035(%273, %274) /* ty=(Tensor[(8, 1, 16), bool], Tensor[(9, 15, 1), float32], Tensor[(135), float32]) */;
  %276 = cast(%var_8163, dtype="float32") /* ty=Tensor[(1, 99), float32] */;
  %277 = reshape(%276, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float32] */;
  %278 = @func_5760(%277) /* ty=(Tensor[(11, 1, 9), float32], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) */;
  %279 = cast(%var_8168, dtype="int64") /* ty=Tensor[(1350, 1), int64] */;
  %280 = cast(%var_8168, dtype="int64") /* ty=Tensor[(1350, 1), int64] */;
  %281 = reshape(%279, newshape=[15, 10, 9]) /* ty=Tensor[(15, 10, 9), int64] */;
  %282 = reshape(%280, newshape=[15, 10, 9]) /* ty=Tensor[(15, 10, 9), int64] */;
  %283 = exp(%262) /* ty=Tensor[(5, 10, 13), float32] */;
  %284 = @func_6223(%264) /* ty=Tensor[(10, 2, 5), bool] */;
  %285 = %269.1;
  %286 = rsqrt(%270) /* ty=Tensor[(5, 10, 13), float64] */;
  %287 = %275.1;
  %288 = %278.0;
  %289 = @func_3571(%281, %282) /* ty=Tensor[(15, 10, 9), int64] */;
  (%283, %284, meta[relay.Constant][19] /* ty=Tensor[(100), uint32] */, %285, 7.04914f /* ty=float32 */, %var_8138, %286, %287, meta[relay.Constant][20] /* ty=Tensor[(16, 8), int64] */, %288, %var_8163, %289, %var_8168)
}

def @func_832(%var_826: Tensor[(10, 6, 7), float64]) -> Tensor[(10, 6, 7), float64] {
  %290 = cast(%var_826, dtype="float64") /* ty=Tensor[(10, 6, 7), float64] */;
  sigmoid(%290) /* ty=Tensor[(10, 6, 7), float64] */
}

def @func_327(%var_320: Tensor[(9, 15, 1), float32]) -> (Tensor[(9, 15, 1), float32],) {
  %291 = cast(%var_320, dtype="float32") /* ty=Tensor[(9, 15, 1), float32] */;
  %292 = sin(%291) /* ty=Tensor[(9, 15, 1), float32] */;
  (%292,)
}

def @func_9107(%var_9093: Tensor[(84), float32], %var_9094: Tensor[(3, 450), int64], %var_9099: Tensor[(72, 4), float64]) -> (Tensor[(5, 10, 13), bool], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(3, 450), int64], Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(72, 4), float64]) {
  %293 = @func_8311() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %294 = %293.0;
  %295 = cast(meta[relay.Constant][21] /* ty=Tensor[(5, 10, 13), float32] */, dtype="bool") /* ty=Tensor[(5, 10, 13), bool] */;
  %296 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%294, dtype="bool") /* ty=Tensor[(5, 10, 13), bool] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %299 = cast(%var_9093, dtype="float32") /* ty=Tensor[(84), float32] */;
  %300 = cast(%var_9093, dtype="float32") /* ty=Tensor[(84), float32] */;
  %301 = cast(%var_9094, dtype="int64") /* ty=Tensor[(3, 450), int64] */;
  %302 = reshape(%299, newshape=[7, 2, 6]) /* ty=Tensor[(7, 2, 6), float32] */;
  %303 = reshape(%300, newshape=[7, 2, 6]) /* ty=Tensor[(7, 2, 6), float32] */;
  %304 = reshape(%301, newshape=[1350]) /* ty=Tensor[(1350), int64] */;
  %305 = @func_6030(%302, %303, %304) /* ty=(Tensor[(7, 2, 6), bool], Tensor[(7, 2, 6), float32], Tensor[(15, 10, 9), int64], Tensor[(1350), int64]) */;
  %306 = cast(%var_9099, dtype="float64") /* ty=Tensor[(72, 4), float64] */;
  %307 = cast(%var_9099, dtype="float64") /* ty=Tensor[(72, 4), float64] */;
  %308 = reshape(%306, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float64] */;
  %309 = reshape(%307, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float64] */;
  %310 = @func_7135(%308, %309) /* ty=(Tensor[(16, 3, 6), float64],) */;
  %311 = logical_and(%297, %298) /* ty=Tensor[(5, 10, 13), bool] */;
  %312 = %305.1;
  %313 = @func_8612() /* ty=Tensor[(5, 10, 13), float32] */;
  %314 = %310.0;
  (%311, %312, %var_9093, %var_9094, %313, %314, %var_9099)
}

def @func_11305() -> Tensor[(5, 10, 13), float32] {
  %315 = @func_8311() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %315.0
}

def @func_12996() -> (Tensor[(5, 10, 13), float32],) {
  %316 = @func_8371() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %317 = %316.0;
  (%317,)
}

def @func_12856() -> (Tensor[(5, 10, 13), float32],) {
  %318 = @func_8612() /* ty=Tensor[(5, 10, 13), float32] */;
  (%318,)
}

def @func_10495() -> Tensor[(8, 10, 2), float64] {
  %319 = @func_10298() /* ty=(Tensor[(8, 10, 2), float64],) */;
  %319.0
}

def @func_6223(%var_6216: Tensor[(10, 2, 5), uint32]) -> Tensor[(10, 2, 5), bool] {
  %320 = cast(meta[relay.Constant][22] /* ty=Tensor[(10, 2, 5), uint32] */, dtype="bool") /* ty=Tensor[(10, 2, 5), bool] */;
  %321 = shape_of(%var_6216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%var_6216, dtype="bool") /* ty=Tensor[(10, 2, 5), bool] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%322, %323) /* ty=Tensor[(10, 2, 5), bool] */
}

def @func_13493() -> (Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) {
  %324 = @func_11305() /* ty=Tensor[(5, 10, 13), float32] */;
  %325 = @func_12545() /* ty=Tensor[(8, 10, 2), float64] */;
  (%324, %325)
}

def @func_13635() -> (Tensor[(5, 10, 13), float32], Tensor[(15, 11, 3), float32], Tensor[(495), float32]) {
  %326 = cast(meta[relay.Constant][23] /* ty=Tensor[(495), float32] */, dtype="float32") /* ty=Tensor[(495), float32] */;
  %327 = reshape(%326, newshape=[15, 11, 3]) /* ty=Tensor[(15, 11, 3), float32] */;
  %328 = @func_12131() /* ty=Tensor[(5, 10, 13), float32] */;
  %329 = @func_5725(%327) /* ty=Tensor[(15, 11, 3), float32] */;
  (%328, %329, meta[relay.Constant][23] /* ty=Tensor[(495), float32] */)
}

def @func_8452(%var_8438: Tensor[(99), float32]) -> (Tensor[(99), float32], Tensor[(11, 1, 9), float64], Tensor[(5, 10, 13), float64]) {
  %330 = cast(%var_8438, dtype="float32") /* ty=Tensor[(99), float32] */;
  %331 = reshape(%330, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float32] */;
  %332 = @func_5760(%331) /* ty=(Tensor[(11, 1, 9), float32], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) */;
  %333 = %332.0;
  %334 = cast(%333, dtype="float64") /* ty=Tensor[(11, 1, 9), float64] */;
  %335 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  %336 = cast(%335, dtype="float64") /* ty=Tensor[(5, 10, 13), float64] */;
  %337 = asinh(%334) /* ty=Tensor[(11, 1, 9), float64] */;
  %338 = atan(%336) /* ty=Tensor[(5, 10, 13), float64] */;
  (%var_8438, %337, %338)
}

def @func_1489(%var_1478: Tensor[(11, 12, 8), float64]) -> Tensor[(11, 12, 8), float64] {
  %339 = cast(%var_1478, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  rsqrt(%339) /* ty=Tensor[(11, 12, 8), float64] */
}

def @func_9466(%var_9426: Tensor[(576), uint16], %var_9427: Tensor[(1056), float64]) -> (Tensor[(135), bool], Tensor[(1056), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(468), int16]) {
  %340 = @func_9016() /* ty=(Tensor[(135), bool],) */;
  %341 = cast(%var_9426, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %342 = cast(%var_9426, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %343 = cast(%var_9427, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %344 = reshape(%341, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %345 = reshape(%342, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %346 = reshape(%343, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %347 = @func_2252(%344, %345, %346) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %348 = @func_8415() /* ty=(Tensor[(468), int16],) */;
  %349 = %340.0;
  %350 = %347.2;
  %351 = %348.0;
  (%349, %350, %var_9426, %var_9427, %351)
}

def @func_9206(%var_9191: Tensor[(140), float32], %var_9196: Tensor[(140), float32]) -> (Tensor[(5, 10, 13), float32], Tensor[(2, 10, 7), float32], Tensor[(140), uint16]) {
  %352 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %353 = cast(%var_9191, dtype="float32") /* ty=Tensor[(140), float32] */;
  %354 = reshape(%353, newshape=[2, 10, 7]) /* ty=Tensor[(2, 10, 7), float32] */;
  %355 = cast(%var_9196, dtype="uint16") /* ty=Tensor[(140), uint16] */;
  %356 = shape_of(%var_9191, dtype="int32") /* ty=Tensor[(1), int32] */;
  %357 = cast(%var_9191, dtype="uint16") /* ty=Tensor[(140), uint16] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %359 = %352.0;
  %360 = @func_2572(%354) /* ty=Tensor[(2, 10, 7), float32] */;
  %361 = maximum(%357, %358) /* ty=Tensor[(140), uint16] */;
  (%359, %360, %361)
}

def @func_9871(%var_9867: Tensor[(468), int16], %var_9868: Tensor[(176), int32]) -> (Tensor[(5, 10, 13), float64], Tensor[(468), int16], Tensor[(468), int16], Tensor[(176), int32], Tensor[(1936), int32]) {
  %362 = cast(%var_9867, dtype="int16") /* ty=Tensor[(468), int16] */;
  %363 = cast(%var_9868, dtype="int32") /* ty=Tensor[(176), int32] */;
  %364 = cast(meta[relay.Constant][24] /* ty=Tensor[(1936), int32] */, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %365 = reshape(%362, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %366 = reshape(%363, newshape=[176]) /* ty=Tensor[(176), int32] */;
  %367 = reshape(%364, newshape=[1936]) /* ty=Tensor[(1936), int32] */;
  %368 = @func_7837(%365, %366, %367) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(468), int16], Tensor[(150, 1), float32], Tensor[(468), int16], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) */;
  %369 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
  %370 = %368.1;
  (%369, %370, %var_9867, %var_9868, meta[relay.Constant][24] /* ty=Tensor[(1936), int32] */)
}

def @func_10640() -> (Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) {
  %371 = @func_8371() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %372 = %371.0;
  %373 = @func_10495() /* ty=Tensor[(8, 10, 2), float64] */;
  (%372, %373)
}

def @func_11921() -> (Tensor[(468), int16],) {
  %374 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %375 = %374.2;
  (%375,)
}

def @func_8250(%var_8191: Tensor[(120), int32]) -> (Tensor[(5, 10, 13), float32], Tensor[(120), int32], Tensor[(1200), bool], Tensor[(5, 28), bool]) {
  %376 = cast(%var_8191, dtype="int32") /* ty=Tensor[(120), int32] */;
  %377 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 28), float32] */, dtype="float32") /* ty=Tensor[(5, 28), float32] */;
  %378 = cast(meta[relay.Constant][25] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %379 = reshape(%376, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int32] */;
  %380 = reshape(%377, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %381 = reshape(%378, newshape=[10, 12, 10]) /* ty=Tensor[(10, 12, 10), bool] */;
  %382 = @func_3000(%379, %380, %381) /* ty=(Tensor[(2, 10, 7), float32], Tensor[(140), float32], Tensor[(9, 15, 1), float32], Tensor[(132), uint16], Tensor[(10, 12, 10), int64]) */;
  %383 = %382.1;
  %384 = cast(%383, dtype="bool") /* ty=Tensor[(140), bool] */;
  %385 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(5, 28), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %386 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 28), float32] */, dtype="bool") /* ty=Tensor[(5, 28), bool] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %388 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  %389 = logical_and(%386, %387) /* ty=Tensor[(5, 28), bool] */;
  (%388, %var_8191, meta[relay.Constant][25] /* ty=Tensor[(1200), bool] */, %389)
}

def @func_7527(%var_7505: Tensor[(1, 16, 11), int32], %var_7506: Tensor[(11, 16, 11), int32]) -> (Tensor[(11, 16, 11), float64],) {
  %390 = cast(%var_7505, dtype="int32") /* ty=Tensor[(1, 16, 11), int32] */;
  %391 = cast(%var_7506, dtype="int32") /* ty=Tensor[(11, 16, 11), int32] */;
  %392 = maximum(%390, %391) /* ty=Tensor[(11, 16, 11), int32] */;
  %393 = cast(%392, dtype="float64") /* ty=Tensor[(11, 16, 11), float64] */;
  %394 = erf(%393) /* ty=Tensor[(11, 16, 11), float64] */;
  (%394,)
}

def @func_9780(%var_9685: int64, %var_9686: Tensor[(6, 96), uint16], %var_9738: Tensor[(1, 84), float32], %var_9739: Tensor[(1350), int64], %var_9740: Tensor[(288), float64]) -> (Tensor[(135), bool], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(135), bool], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(6, 96), float64], Tensor[(3, 450), int64], Tensor[(1, 84), float32], Tensor[(1350), int64], Tensor[(288), float64], Tensor[(6, 96), bool]) {
  %395 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %396 = cast(meta[relay.Constant][27] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %397 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 44), uint16] */, dtype="uint16") /* ty=Tensor[(3, 44), uint16] */;
  %398 = cast(%var_9685, dtype="int64") /* ty=int64 */;
  %399 = cast(%var_9686, dtype="uint16") /* ty=Tensor[(6, 96), uint16] */;
  %400 = reshape(%396, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %401 = reshape(%397, newshape=[3, 44]) /* ty=Tensor[(3, 44), uint16] */;
  %402 = reshape(%398, newshape=[]) /* ty=int64 */;
  %403 = reshape(%399, newshape=[576]) /* ty=Tensor[(576), uint16] */;
  %404 = @func_5500(%400, %401, %402, %403) /* ty=(Tensor[(15, 13, 6), bool], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(8448), uint64], Tensor[(8, 1, 16), bool], int64, Tensor[(128), int64], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(1056), float64], Tensor[(576), uint16]) */;
  %405 = @func_9016() /* ty=(Tensor[(135), bool],) */;
  %406 = cast(meta[relay.Constant][29] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %407 = reshape(%406, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), float32] */;
  %408 = cast(%var_9686, dtype="float64") /* ty=Tensor[(6, 96), float64] */;
  %409 = cast(%var_9738, dtype="float32") /* ty=Tensor[(1, 84), float32] */;
  %410 = cast(%var_9739, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %411 = cast(%var_9740, dtype="float64") /* ty=Tensor[(288), float64] */;
  %412 = reshape(%409, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %413 = reshape(%410, newshape=[3, 450]) /* ty=Tensor[(3, 450), int64] */;
  %414 = reshape(%411, newshape=[72, 4]) /* ty=Tensor[(72, 4), float64] */;
  %415 = @func_9107(%412, %413, %414) /* ty=(Tensor[(5, 10, 13), bool], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(3, 450), int64], Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(72, 4), float64]) */;
  %416 = cast(%var_9686, dtype="uint8") /* ty=Tensor[(6, 96), uint8] */;
  %417 = cast(%var_9685, dtype="uint8") /* ty=uint8 */;
  %418 = multiply(%416, %417) /* ty=Tensor[(6, 96), uint8] */;
  %419 = cast(%418, dtype="float64") /* ty=Tensor[(6, 96), float64] */;
  %420 = log2(%419) /* ty=Tensor[(6, 96), float64] */;
  %421 = cast(%418, dtype="bool") /* ty=Tensor[(6, 96), bool] */;
  %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(2), int32] */;
  %423 = cast(%420, dtype="bool") /* ty=Tensor[(6, 96), bool] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %425 = %395.1;
  %426 = %404.11;
  %427 = %405.0;
  %428 = @func_673(%407) /* ty=Tensor[(10, 6, 11), float32] */;
  %429 = sqrt(%408) /* ty=Tensor[(6, 96), float64] */;
  %430 = %415.3;
  %431 = less(%423, %424) /* ty=Tensor[(6, 96), bool] */;
  (%425, %426, meta[relay.Constant][27] /* ty=Tensor[(1056), float64] */, meta[relay.Constant][28] /* ty=Tensor[(3, 44), uint16] */, %427, %428, meta[relay.Constant][29] /* ty=Tensor[(660), float32] */, %429, %430, %var_9738, %var_9739, %var_9740, %431)
}

def @func_14019(%var_13993: Tensor[(1078), float32], %var_14006: Tensor[(140, 1), float32], %var_14007: Tensor[(1200), bool], %var_14013: Tensor[(4, 264), float64], %var_14014: Tensor[(1936), int32]) -> (Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(5, 10, 13), float32], Tensor[(5, 3, 8), float32], Tensor[(15, 10, 9), int64], Tensor[(1078), float32], Tensor[(99), float32], Tensor[(1350), int64], float64, Tensor[(1536), float64], Tensor[(140, 1), float32], Tensor[(1200), bool], Tensor[(45), float64], Tensor[(468, 1), int16], Tensor[(576), uint16], Tensor[(4, 264), float64], Tensor[(1936), int32]) {
  %432 = @func_13635() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(15, 11, 3), float32], Tensor[(495), float32]) */;
  %433 = @func_8311() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %434 = @func_12819() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(10, 6, 11), float32], Tensor[(660), float32]) */;
  %435 = cast(%var_13993, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %436 = cast(meta[relay.Constant][30] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %437 = cast(meta[relay.Constant][31] /* ty=Tensor[(1350), int64] */, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %438 = reshape(%435, newshape=[1078]) /* ty=Tensor[(1078), float32] */;
  %439 = reshape(%436, newshape=[1, 99]) /* ty=Tensor[(1, 99), float32] */;
  %440 = reshape(%437, newshape=[1350, 1]) /* ty=Tensor[(1350, 1), int64] */;
  %441 = @func_8173(%438, %439, %440) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(10, 2, 5), bool], Tensor[(100), uint32], Tensor[(1, 1, 3), bool], float32, Tensor[(1078), float32], Tensor[(5, 10, 13), float64], Tensor[(9, 15, 1), float32], Tensor[(16, 8), int64], Tensor[(11, 1, 9), float32], Tensor[(1, 99), float32], Tensor[(15, 10, 9), int64], Tensor[(1350, 1), int64]) */;
  %442 = cast(meta[relay.Constant][32] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %443 = cast(%var_14006, dtype="float32") /* ty=Tensor[(140, 1), float32] */;
  %444 = cast(%var_14007, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %445 = cast(meta[relay.Constant][33] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %446 = reshape(%442, newshape=[12, 8, 16]) /* ty=Tensor[(12, 8, 16), float64] */;
  %447 = reshape(%443, newshape=[5, 28]) /* ty=Tensor[(5, 28), float32] */;
  %448 = reshape(%444, newshape=[1200]) /* ty=Tensor[(1200), bool] */;
  %449 = reshape(%445, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %450 = @func_4464(%446, %447, %448, %449) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(10, 12, 10), int64], Tensor[(120), int32], Tensor[(5, 28), float32], Tensor[(1200), bool], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */;
  %451 = cast(meta[relay.Constant][34] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %452 = cast(%var_14013, dtype="float64") /* ty=Tensor[(4, 264), float64] */;
  %453 = cast(%var_14014, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %454 = reshape(%451, newshape=[576]) /* ty=Tensor[(576), uint16] */;
  %455 = reshape(%452, newshape=[1, 1056]) /* ty=Tensor[(1, 1056), float64] */;
  %456 = reshape(%453, newshape=[1936]) /* ty=Tensor[(1936), int32] */;
  %457 = @func_8724(%454, %455, %456) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(576), uint16], Tensor[(1, 1056), float64], Tensor[(150, 1), float32], Tensor[(468, 1), int16], Tensor[(176), int32], Tensor[(1936), int32], Tensor[(150, 1), float32]) */;
  %458 = %432.0;
  %459 = @func_10555() /* ty=Tensor[(135), bool] */;
  %460 = %433.0;
  %461 = %434.0;
  %462 = %441.11;
  %463 = %450.9;
  %464 = %457.5;
  (%458, %459, %460, %461, %462, %var_13993, meta[relay.Constant][30] /* ty=Tensor[(99), float32] */, meta[relay.Constant][31] /* ty=Tensor[(1350), int64] */, %463, meta[relay.Constant][32] /* ty=Tensor[(1536), float64] */, %var_14006, %var_14007, meta[relay.Constant][33] /* ty=Tensor[(45), float64] */, %464, meta[relay.Constant][34] /* ty=Tensor[(576), uint16] */, %var_14013, %var_14014)
}

def @func_14348(%var_14337: Tensor[(936, 1), float32]) -> (Tensor[(5, 10, 13), float32], Tensor[(12, 6, 13), float32], Tensor[(936, 1), float32], Tensor[(12, 3, 13), bool], Tensor[(468), int16]) {
  %465 = @func_13635() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(15, 11, 3), float32], Tensor[(495), float32]) */;
  %466 = cast(%var_14337, dtype="float32") /* ty=Tensor[(936, 1), float32] */;
  %467 = reshape(%466, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), float32] */;
  %468 = @func_12978(%467) /* ty=(Tensor[(12, 6, 13), float32],) */;
  %469 = cast(meta[relay.Constant][35] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %470 = reshape(%469, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %471 = @func_3226(%470) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) */;
  %472 = %465.0;
  %473 = %468.0;
  %474 = %471.0;
  (%472, %473, %var_14337, %474, meta[relay.Constant][35] /* ty=Tensor[(468), int16] */)
}

def @func_3084(%var_3055: Tensor[(7, 5, 10), uint64], %var_3056: Tensor[(7, 5, 10), uint64]) -> (Tensor[(7, 5, 10), bool], Tensor[(7, 5, 10), float64]) {
  %475 = cast(%var_3056, dtype="bool") /* ty=Tensor[(7, 5, 10), bool] */;
  %476 = shape_of(%var_3055, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%var_3055, dtype="bool") /* ty=Tensor[(7, 5, 10), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %479 = cast(%var_3056, dtype="float64") /* ty=Tensor[(7, 5, 10), float64] */;
  %480 = equal(%477, %478) /* ty=Tensor[(7, 5, 10), bool] */;
  %481 = log(%479) /* ty=Tensor[(7, 5, 10), float64] */;
  (%480, %481)
}

def @func_9151(%var_9145: Tensor[(2, 288), uint16], %var_9146: Tensor[(1056), float64]) -> (Tensor[(468), int16], Tensor[(16, 9, 4), uint16], Tensor[(2, 288), uint16], Tensor[(1056), float64], Tensor[(1936), int32], Tensor[(5, 10, 13), float64]) {
  %482 = @func_8415() /* ty=(Tensor[(468), int16],) */;
  %483 = cast(%var_9145, dtype="uint16") /* ty=Tensor[(2, 288), uint16] */;
  %484 = cast(%var_9146, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %485 = cast(meta[relay.Constant][36] /* ty=Tensor[(1936), int32] */, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %486 = reshape(%483, newshape=[576]) /* ty=Tensor[(576), uint16] */;
  %487 = reshape(%484, newshape=[1, 1056]) /* ty=Tensor[(1, 1056), float64] */;
  %488 = reshape(%485, newshape=[1936]) /* ty=Tensor[(1936), int32] */;
  %489 = @func_8724(%486, %487, %488) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(576), uint16], Tensor[(1, 1056), float64], Tensor[(150, 1), float32], Tensor[(468, 1), int16], Tensor[(176), int32], Tensor[(1936), int32], Tensor[(150, 1), float32]) */;
  %490 = %482.0;
  %491 = %489.1;
  %492 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
  (%490, %491, %var_9145, %var_9146, meta[relay.Constant][36] /* ty=Tensor[(1936), int32] */, %492)
}

def @func_9510() -> Tensor[(5, 10, 13), float32] {
  %493 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %493.0
}

def @func_10407() -> (Tensor[(5, 10, 13), float64],) {
  %494 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
  (%494,)
}

def @func_10318(%var_10309: Tensor[(1, 6, 7), uint16]) -> (Tensor[(10, 6, 7), uint16],) {
  %495 = cast(%var_10309, dtype="uint16") /* ty=Tensor[(1, 6, 7), uint16] */;
  %496 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 6, 7), uint16] */, dtype="uint16") /* ty=Tensor[(10, 6, 7), uint16] */;
  %497 = left_shift(%495, %496) /* ty=Tensor[(10, 6, 7), uint16] */;
  (%497,)
}

def @func_7754() -> (Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) {
  %498 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %499 = cast(meta[relay.Constant][39] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %500 = reshape(%499, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %501 = @func_3226(%500) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) */;
  %502 = sigmoid(%498) /* ty=Tensor[(5, 10, 13), float32] */;
  %503 = %501.1;
  (%502, %503, meta[relay.Constant][39] /* ty=Tensor[(468), int16] */)
}

def @func_9637(%var_9605: Tensor[(15, 15, 6), float32]) -> (Tensor[(15, 15, 6), float32], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) {
  %504 = cast(%var_9605, dtype="float32") /* ty=Tensor[(15, 15, 6), float32] */;
  %505 = log(%504) /* ty=Tensor[(15, 15, 6), float32] */;
  %506 = cast(%505, dtype="float32") /* ty=Tensor[(15, 15, 6), float32] */;
  %507 = cast(meta[relay.Constant][40] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %508 = reshape(%507, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %509 = sinh(%506) /* ty=Tensor[(15, 15, 6), float32] */;
  %510 = @func_1489(%508) /* ty=Tensor[(11, 12, 8), float64] */;
  (%509, %510, meta[relay.Constant][40] /* ty=Tensor[(1056), float64] */)
}

def @func_12545() -> Tensor[(8, 10, 2), float64] {
  %511 = @func_10640() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) */;
  %511.1
}

def @func_11599() -> Tensor[(5, 10, 13), float64] {
  %512 = @func_9375() /* ty=(Tensor[(5, 10, 13), float64],) */;
  %512.0
}

def @func_10811() -> Tensor[(5, 10, 13), float64] {
  @func_9663() /* ty=Tensor[(5, 10, 13), float64] */
}

def @func_9016() -> (Tensor[(135), bool],) {
  %513 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %514 = %513.1;
  (%514,)
}

def @func_12594() -> Tensor[(5, 10, 13), float32] {
  @func_7873() /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_13741(%var_13726: Tensor[(135), float32]) -> (Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(9, 15, ?), float32]) {
  %515 = @func_13448() /* ty=(Tensor[(135), bool], Tensor[(5, 10, 13), float32]) */;
  %516 = @func_12856() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %517 = cast(%var_13726, dtype="float32") /* ty=Tensor[(135), float32] */;
  %518 = reshape(%517, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float32] */;
  %519 = @func_327(%518) /* ty=(Tensor[(9, 15, 1), float32],) */;
  %520 = %519.0;
  %521 = cast(%var_13726, dtype="float32") /* ty=Tensor[(135), float32] */;
  %522 = shape_of(%520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%520, dtype="float32") /* ty=Tensor[(9, 15, 1), float32] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %525 = %515.1;
  %526 = %516.0;
  %527 = mod(%523, %524) /* ty=Tensor[(9, 15, ?), float32] */;
  (%525, %526, %527)
}

def @func_14146() -> (Tensor[(8, 10, 2), float32], Tensor[(5, 10, 13), float64], Tensor[(5, 10, 13), float64]) {
  %528 = @func_10495() /* ty=Tensor[(8, 10, 2), float64] */;
  %529 = cast(%528, dtype="float32") /* ty=Tensor[(8, 10, 2), float32] */;
  %530 = asin(%529) /* ty=Tensor[(8, 10, 2), float32] */;
  %531 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
  %532 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
  (%530, %531, %532)
}

def @func_8585(%var_8564: Tensor[(4, 6, 8), float64], %var_8565: Tensor[(4, 6, 8), float64]) -> (Tensor[(4, 6, 8), float64], Tensor[(4, 6, 8), float32], Tensor[(4, 6, 8), float32]) {
  %533 = cast(%var_8565, dtype="float64") /* ty=Tensor[(4, 6, 8), float64] */;
  %534 = shape_of(%var_8564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %535 = cast(%var_8564, dtype="float64") /* ty=Tensor[(4, 6, 8), float64] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %537 = cast(%var_8564, dtype="float32") /* ty=Tensor[(4, 6, 8), float32] */;
  %538 = cast(%var_8565, dtype="float32") /* ty=Tensor[(4, 6, 8), float32] */;
  %539 = power(%535, %536) /* ty=Tensor[(4, 6, 8), float64] */;
  %540 = log10(%537) /* ty=Tensor[(4, 6, 8), float32] */;
  %541 = asin(%538) /* ty=Tensor[(4, 6, 8), float32] */;
  (%539, %540, %541)
}

def @main(%var_14409: Tensor[(4, 15, 11), uint8], %var_14410: Tensor[(4, 15, 11), uint8]) -> Tensor[(4, 15, 11), bool] {
  %542 = cast(%var_14410, dtype="bool") /* ty=Tensor[(4, 15, 11), bool] */;
  %543 = shape_of(%var_14409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%var_14409, dtype="bool") /* ty=Tensor[(4, 15, 11), bool] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%544, %545) /* ty=Tensor[(4, 15, 11), bool] */
}

def @func_4464(%var_4403: Tensor[(12, 8, 16), float64], %var_4410: Tensor[(5, 28), float32], %var_4411: Tensor[(1200), bool], %var_4451: Tensor[(45), float64]) -> (Tensor[(12, 8, 16), float64], Tensor[(10, 12, 10), int64], Tensor[(120), int32], Tensor[(5, 28), float32], Tensor[(1200), bool], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) {
  %546 = cast(%var_4403, dtype="float64") /* ty=Tensor[(12, 8, 16), float64] */;
  %547 = cast(meta[relay.Constant][41] /* ty=Tensor[(120), int32] */, dtype="int32") /* ty=Tensor[(120), int32] */;
  %548 = cast(%var_4410, dtype="float32") /* ty=Tensor[(5, 28), float32] */;
  %549 = cast(%var_4411, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %550 = reshape(%547, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int32] */;
  %551 = reshape(%548, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %552 = reshape(%549, newshape=[10, 12, 10]) /* ty=Tensor[(10, 12, 10), bool] */;
  %553 = @func_3000(%550, %551, %552) /* ty=(Tensor[(2, 10, 7), float32], Tensor[(140), float32], Tensor[(9, 15, 1), float32], Tensor[(132), uint16], Tensor[(10, 12, 10), int64]) */;
  %554 = cast(meta[relay.Constant][42] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %555 = cast(meta[relay.Constant][42] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %556 = cast(meta[relay.Constant][43] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %557 = reshape(%554, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %558 = reshape(%555, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %559 = reshape(%556, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %560 = @func_2252(%557, %558, %559) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %561 = cast(1.60195f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %562 = cast(%var_4451, dtype="float64") /* ty=Tensor[(45), float64] */;
  %563 = reshape(%561, newshape=[]) /* ty=float64 */;
  %564 = reshape(%562, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), float64] */;
  %565 = @func_4182(%563, %564) /* ty=(Tensor[(9, 5, 1), bool],) */;
  %566 = cos(%546) /* ty=Tensor[(12, 8, 16), float64] */;
  %567 = %553.4;
  %568 = %560.1;
  %569 = %565.0;
  (%566, %567, meta[relay.Constant][41] /* ty=Tensor[(120), int32] */, %var_4410, %var_4411, %568, meta[relay.Constant][42] /* ty=Tensor[(576), uint16] */, meta[relay.Constant][43] /* ty=Tensor[(1056), float64] */, %569, 1.60195f64 /* ty=float64 */, %var_4451)
}

def @func_9066() -> Tensor[(5, 10, 13), float64] {
  %570 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  %571 = cast(%570, dtype="float64") /* ty=Tensor[(5, 10, 13), float64] */;
  acosh(%571) /* ty=Tensor[(5, 10, 13), float64] */
}

def @func_7873() -> Tensor[(5, 10, 13), float32] {
  %572 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %572.0
}

def @func_12492(%var_12468: Tensor[(675), float32]) -> (Tensor[(8, 10, 2), float64], Tensor[(132), uint16], Tensor[(675), float32], Tensor[(132), uint16], Tensor[(5, 10, 13), float32]) {
  %573 = @func_10298() /* ty=(Tensor[(8, 10, 2), float64],) */;
  %574 = cast(%var_12468, dtype="float32") /* ty=Tensor[(675), float32] */;
  %575 = cast(meta[relay.Constant][44] /* ty=Tensor[(132), uint16] */, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %576 = reshape(%574, newshape=[675, 1]) /* ty=Tensor[(675, 1), float32] */;
  %577 = reshape(%575, newshape=[132]) /* ty=Tensor[(132), uint16] */;
  %578 = @func_9956(%576, %577) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(5, 135), float32], Tensor[(539, 2), float32], Tensor[(675, 1), float64], Tensor[(132), uint16], Tensor[(192), float64], Tensor[(1056), float64], Tensor[(132), uint16], Tensor[(576), uint16]) */;
  %579 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %580 = %573.0;
  %581 = %578.4;
  %582 = %579.0;
  (%580, %581, %var_12468, meta[relay.Constant][44] /* ty=Tensor[(132), uint16] */, %582)
}

def @func_13623(%var_13587: Tensor[(3, 2, 14), float64]) -> (Tensor[(3, 2, 14), uint8],) {
  %583 = cast(%var_13587, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  %584 = asin(%583) /* ty=Tensor[(3, 2, 14), float64] */;
  %585 = cast(%584, dtype="uint8") /* ty=Tensor[(3, 2, 14), uint8] */;
  %586 = shape_of(%var_13587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%var_13587, dtype="uint8") /* ty=Tensor[(3, 2, 14), uint8] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %589 = multiply(%587, %588) /* ty=Tensor[(3, 2, 14), uint8] */;
  (%589,)
}

def @func_6987(%var_6981: Tensor[(1, 10, 11), float32]) -> Tensor[(1, 10, 11), float32] {
  %590 = cast(%var_6981, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  atanh(%590) /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_11265(%var_11214: Tensor[(12, 11, 14), uint32], %var_11215: Tensor[(12, 11, 14), uint32], %var_11248: float32, %var_11249: Tensor[(1078), float32]) -> (Tensor[(12, 11, 14), uint8], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056, 1), float64], Tensor[(1078), float32], Tensor[(1, 1, 3), float32]) {
  %591 = cast(%var_11215, dtype="bool") /* ty=Tensor[(12, 11, 14), bool] */;
  %592 = shape_of(%var_11214, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(%var_11214, dtype="bool") /* ty=Tensor[(12, 11, 14), bool] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %595 = greater(%593, %594) /* ty=Tensor[(12, 11, 14), bool] */;
  %596 = cast(%var_11215, dtype="uint8") /* ty=Tensor[(12, 11, 14), uint8] */;
  %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%595, dtype="uint8") /* ty=Tensor[(12, 11, 14), uint8] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %600 = cast(meta[relay.Constant][45] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %601 = cast(meta[relay.Constant][45] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %602 = cast(meta[relay.Constant][46] /* ty=Tensor[(1056, 1), float64] */, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
  %603 = reshape(%600, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %604 = reshape(%601, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %605 = reshape(%602, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %606 = @func_2252(%603, %604, %605) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %607 = cast(%var_11248, dtype="float32") /* ty=float32 */;
  %608 = cast(%var_11249, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %609 = reshape(%607, newshape=[]) /* ty=float32 */;
  %610 = reshape(%608, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), float32] */;
  %611 = @func_3525(%609, %610) /* ty=(Tensor[(14, 7, 11), float32], Tensor[(1, 1, 3), bool]) */;
  %612 = %611.1;
  %613 = cast(%612, dtype="float32") /* ty=Tensor[(1, 1, 3), float32] */;
  %614 = cast(%var_11248, dtype="float32") /* ty=float32 */;
  %615 = left_shift(%598, %599) /* ty=Tensor[(12, 11, 14), uint8] */;
  %616 = %606.1;
  %617 = floor_divide(%613, %614) /* ty=Tensor[(1, 1, 3), float32] */;
  (%615, %616, meta[relay.Constant][45] /* ty=Tensor[(576), uint16] */, meta[relay.Constant][46] /* ty=Tensor[(1056, 1), float64] */, %var_11249, %617)
}

def @func_8311() -> (Tensor[(5, 10, 13), float32],) {
  %618 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %619 = %618.0;
  (%619,)
}

def @func_11864(%var_11861: Tensor[(715, 3), float32]) -> (Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(11, 15, 13), float32], Tensor[(715, 3), float32]) {
  %620 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %621 = @func_9016() /* ty=(Tensor[(135), bool],) */;
  %622 = cast(%var_11861, dtype="float32") /* ty=Tensor[(715, 3), float32] */;
  %623 = reshape(%622, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %624 = @func_11081(%623) /* ty=(Tensor[(11, 15, 13), float32],) */;
  %625 = %620.0;
  %626 = %621.0;
  %627 = %624.0;
  (%625, %626, %627, %var_11861)
}

def @func_13948(%var_13934: Tensor[(8, 10, 2), float64]) -> (Tensor[(8, 10, 2), bool],) {
  %628 = @func_12545() /* ty=Tensor[(8, 10, 2), float64] */;
  %629 = cast(%var_13934, dtype="bool") /* ty=Tensor[(8, 10, 2), bool] */;
  %630 = shape_of(%628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %631 = cast(%628, dtype="bool") /* ty=Tensor[(8, 10, 2), bool] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %633 = not_equal(%631, %632) /* ty=Tensor[(8, 10, 2), bool] */;
  (%633,)
}

def @func_9663() -> Tensor[(5, 10, 13), float64] {
  %634 = @func_9375() /* ty=(Tensor[(5, 10, 13), float64],) */;
  %634.0
}

def @func_10298() -> (Tensor[(8, 10, 2), float64],) {
  %635 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(8, 10, 2), float64] */;
  %636 = asinh(%635) /* ty=Tensor[(8, 10, 2), float64] */;
  (%636,)
}

def @func_5725(%var_5708: Tensor[(15, 11, 3), float32]) -> Tensor[(15, 11, 3), float32] {
  %637 = cast(%var_5708, dtype="float32") /* ty=Tensor[(15, 11, 3), float32] */;
  atanh(%637) /* ty=Tensor[(15, 11, 3), float32] */
}

def @func_12819() -> (Tensor[(5, 3, 8), float32], Tensor[(10, 6, 11), float32], Tensor[(660), float32]) {
  %638 = cast(meta[relay.Constant][48] /* ty=Tensor[(5, 3, 8), float32] */, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %639 = cast(meta[relay.Constant][49] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %640 = reshape(%639, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), float32] */;
  %641 = sinh(%638) /* ty=Tensor[(5, 3, 8), float32] */;
  %642 = @func_673(%640) /* ty=Tensor[(10, 6, 11), float32] */;
  (%641, %642, meta[relay.Constant][49] /* ty=Tensor[(660), float32] */)
}

def @func_14213(%var_14175: Tensor[(100), uint32], %var_14209: Tensor[(1, 84), float32], %var_14211: Tensor[(8, 36), float64]) -> (Tensor[(5, 10, 13), float32], Tensor[(100), uint32], Tensor[(10, 2, 5), uint64], Tensor[(7, 2, 6), float32], Tensor[(1, 84), float32], Tensor[(1350), int64], Tensor[(8, 36), float64]) {
  %643 = cast(%var_14175, dtype="uint32") /* ty=Tensor[(100), uint32] */;
  %644 = reshape(%643, newshape=[10, 2, 5]) /* ty=Tensor[(10, 2, 5), uint32] */;
  %645 = @func_6223(%644) /* ty=Tensor[(10, 2, 5), bool] */;
  %646 = cast(meta[relay.Constant][50] /* ty=Tensor[(10, 2, 5), bool] */, dtype="uint64") /* ty=Tensor[(10, 2, 5), uint64] */;
  %647 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%645, dtype="uint64") /* ty=Tensor[(10, 2, 5), uint64] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %650 = cast(%var_14209, dtype="float32") /* ty=Tensor[(1, 84), float32] */;
  %651 = cast(meta[relay.Constant][51] /* ty=Tensor[(1350), int64] */, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %652 = cast(%var_14211, dtype="float64") /* ty=Tensor[(8, 36), float64] */;
  %653 = reshape(%650, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %654 = reshape(%651, newshape=[3, 450]) /* ty=Tensor[(3, 450), int64] */;
  %655 = reshape(%652, newshape=[72, 4]) /* ty=Tensor[(72, 4), float64] */;
  %656 = @func_9107(%653, %654, %655) /* ty=(Tensor[(5, 10, 13), bool], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(3, 450), int64], Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(72, 4), float64]) */;
  %657 = @func_11305() /* ty=Tensor[(5, 10, 13), float32] */;
  %658 = bitwise_and(%648, %649) /* ty=Tensor[(10, 2, 5), uint64] */;
  %659 = %656.1;
  (%657, %var_14175, %658, %659, %var_14209, meta[relay.Constant][51] /* ty=Tensor[(1350), int64] */, %var_14211)
}

def @func_14318() -> Tensor[(5, 10, 13), float64] {
  %660 = @func_12268() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float64]) */;
  %660.1
}

def @func_12131() -> Tensor[(5, 10, 13), float32] {
  @func_9510() /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_3000(%var_2960: Tensor[(10, 12, 1), int32], %var_2970: Tensor[(140), float32], %var_2992: Tensor[(10, 12, 10), bool]) -> (Tensor[(2, 10, 7), float32], Tensor[(140), float32], Tensor[(9, 15, 1), float32], Tensor[(132), uint16], Tensor[(10, 12, 10), int64]) {
  %661 = cast(%var_2970, dtype="float32") /* ty=Tensor[(140), float32] */;
  %662 = reshape(%661, newshape=[2, 10, 7]) /* ty=Tensor[(2, 10, 7), float32] */;
  %663 = cast(meta[relay.Constant][52] /* ty=Tensor[(132), uint16] */, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %664 = cast(meta[relay.Constant][52] /* ty=Tensor[(132), uint16] */, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %665 = reshape(%663, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), uint16] */;
  %666 = reshape(%664, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), uint16] */;
  %667 = @func_2557(%665, %666) /* ty=(Tensor[(6, 11, 2), uint16], Tensor[(9, 15, 1), float32], Tensor[(1, 135), float32]) */;
  %668 = cast(%var_2960, dtype="bool") /* ty=Tensor[(10, 12, 1), bool] */;
  %669 = cast(meta[relay.Constant][53] /* ty=Tensor[(10, 12, 10), int32] */, dtype="bool") /* ty=Tensor[(10, 12, 10), bool] */;
  %670 = equal(%668, %669) /* ty=Tensor[(10, 12, 10), bool] */;
  %671 = cast(%var_2992, dtype="int64") /* ty=Tensor[(10, 12, 10), int64] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%670, dtype="int64") /* ty=Tensor[(10, 12, 10), int64] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %675 = @func_2572(%662) /* ty=Tensor[(2, 10, 7), float32] */;
  %676 = %667.1;
  %677 = logical_xor(%673, %674) /* ty=Tensor[(10, 12, 10), int64] */;
  (%675, %var_2970, %676, meta[relay.Constant][52] /* ty=Tensor[(132), uint16] */, %677)
}

def @func_13229(%var_13167: int64, %var_13168: Tensor[(576), uint16], %var_13169: Tensor[(84), float32], %var_13171: Tensor[(288), float64]) -> (Tensor[(8, 10, 2), float64], Tensor[(288), float64], int64, Tensor[(576), uint16], Tensor[(84), float32], Tensor[(1350), int64], Tensor[(288), float64]) {
  %678 = cast(%var_13167, dtype="int64") /* ty=int64 */;
  %679 = cast(%var_13168, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %680 = cast(%var_13169, dtype="float32") /* ty=Tensor[(84), float32] */;
  %681 = cast(meta[relay.Constant][54] /* ty=Tensor[(1350), int64] */, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %682 = cast(%var_13171, dtype="float64") /* ty=Tensor[(288), float64] */;
  %683 = reshape(%678, newshape=[]) /* ty=int64 */;
  %684 = reshape(%679, newshape=[6, 96]) /* ty=Tensor[(6, 96), uint16] */;
  %685 = reshape(%680, newshape=[1, 84]) /* ty=Tensor[(1, 84), float32] */;
  %686 = reshape(%681, newshape=[1350]) /* ty=Tensor[(1350), int64] */;
  %687 = reshape(%682, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %688 = @func_9780(%683, %684, %685, %686, %687) /* ty=(Tensor[(135), bool], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(135), bool], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(6, 96), float64], Tensor[(3, 450), int64], Tensor[(1, 84), float32], Tensor[(1350), int64], Tensor[(288), float64], Tensor[(6, 96), bool]) */;
  %689 = @func_12545() /* ty=Tensor[(8, 10, 2), float64] */;
  %690 = %688.11;
  (%689, %690, %var_13167, %var_13168, %var_13169, meta[relay.Constant][54] /* ty=Tensor[(1350), int64] */, %var_13171)
}

def @func_3525(%var_3508: float32, %var_3509: Tensor[(14, 7, 11), float32]) -> (Tensor[(14, 7, 11), float32], Tensor[(1, 1, 3), bool]) {
  %691 = cast(%var_3508, dtype="float32") /* ty=float32 */;
  %692 = cast(%var_3509, dtype="float32") /* ty=Tensor[(14, 7, 11), float32] */;
  %693 = cast(%var_3508, dtype="bool") /* ty=bool */;
  %694 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 1, 3), float32] */, dtype="bool") /* ty=Tensor[(1, 1, 3), bool] */;
  %695 = power(%691, %692) /* ty=Tensor[(14, 7, 11), float32] */;
  %696 = equal(%693, %694) /* ty=Tensor[(1, 1, 3), bool] */;
  (%695, %696)
}

def @func_3837(%var_3823: Tensor[(9, 7, 11), float32], %var_3833: Tensor[(1, 56), float32]) -> (Tensor[(9, 7, 11), float32], Tensor[(7, 2, 4), float32], Tensor[(1, 56), float32]) {
  %697 = cast(%var_3823, dtype="float32") /* ty=Tensor[(9, 7, 11), float32] */;
  %698 = cast(%var_3833, dtype="float32") /* ty=Tensor[(1, 56), float32] */;
  %699 = cast(%var_3833, dtype="float32") /* ty=Tensor[(1, 56), float32] */;
  %700 = reshape(%698, newshape=[7, 2, 4]) /* ty=Tensor[(7, 2, 4), float32] */;
  %701 = reshape(%699, newshape=[7, 2, 4]) /* ty=Tensor[(7, 2, 4), float32] */;
  %702 = @func_1175(%700, %701) /* ty=(Tensor[(7, 2, 4), float32],) */;
  %703 = log(%697) /* ty=Tensor[(9, 7, 11), float32] */;
  %704 = %702.0;
  (%703, %704, %var_3833)
}

def @func_5500(%var_5473: Tensor[(1056), float64], %var_5475: Tensor[(3, 44), uint16], %var_5484: int64, %var_5498: Tensor[(576), uint16]) -> (Tensor[(15, 13, 6), bool], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(8448), uint64], Tensor[(8, 1, 16), bool], int64, Tensor[(128), int64], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(1056), float64], Tensor[(576), uint16]) {
  %705 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 13, 6), uint32] */, dtype="uint32") /* ty=Tensor[(1, 13, 6), uint32] */;
  %706 = cast(meta[relay.Constant][57] /* ty=Tensor[(15, 13, 6), uint32] */, dtype="uint32") /* ty=Tensor[(15, 13, 6), uint32] */;
  %707 = add(%705, %706) /* ty=Tensor[(15, 13, 6), uint32] */;
  %708 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 13, 6), uint32] */, dtype="bool") /* ty=Tensor[(1, 13, 6), bool] */;
  %709 = cast(%707, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %710 = cast(%var_5473, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %711 = cast(meta[relay.Constant][58] /* ty=Tensor[(8448), float64] */, dtype="float64") /* ty=Tensor[(8448), float64] */;
  %712 = cast(%var_5475, dtype="uint16") /* ty=Tensor[(3, 44), uint16] */;
  %713 = reshape(%710, newshape=[1, 1056]) /* ty=Tensor[(1, 1056), float64] */;
  %714 = reshape(%711, newshape=[8, 1056]) /* ty=Tensor[(8, 1056), float64] */;
  %715 = reshape(%712, newshape=[132]) /* ty=Tensor[(132), uint16] */;
  %716 = @func_2751(%713, %714, %715) /* ty=(Tensor[(4, 1, 12), bool], Tensor[(11, 12, 8), float64], Tensor[(8, 1056), int8], Tensor[(1, 135), float32], Tensor[(132), uint16], Tensor[(10, 6, 11), float32], Tensor[(660, 1), float32], Tensor[(3, 1056), uint64]) */;
  %717 = cast(meta[relay.Constant][59] /* ty=Tensor[(8448), float64] */, dtype="uint64") /* ty=Tensor[(8448), uint64] */;
  %718 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(8448), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %719 = cast(meta[relay.Constant][58] /* ty=Tensor[(8448), float64] */, dtype="uint64") /* ty=Tensor[(8448), uint64] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %721 = cast(%var_5484, dtype="int64") /* ty=int64 */;
  %722 = cast(meta[relay.Constant][60] /* ty=Tensor[(128), int64] */, dtype="int64") /* ty=Tensor[(128), int64] */;
  %723 = reshape(%721, newshape=[]) /* ty=int64 */;
  %724 = reshape(%722, newshape=[8, 1, 16]) /* ty=Tensor[(8, 1, 16), int64] */;
  %725 = @func_4035(%723, %724) /* ty=(Tensor[(8, 1, 16), bool], Tensor[(9, 15, 1), float32], Tensor[(135), float32]) */;
  %726 = cast(meta[relay.Constant][61] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %727 = reshape(%726, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), float32] */;
  %728 = cast(%var_5498, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %729 = cast(%var_5498, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %730 = %716.1;
  %731 = cast(%730, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %732 = reshape(%728, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %733 = reshape(%729, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %734 = reshape(%731, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %735 = @func_2252(%732, %733, %734) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %736 = logical_and(%708, %709) /* ty=Tensor[(15, 13, 6), bool] */;
  %737 = subtract(%719, %720) /* ty=Tensor[(8448), uint64] */;
  %738 = %725.0;
  %739 = @func_673(%727) /* ty=Tensor[(10, 6, 11), float32] */;
  %740 = %735.2;
  (%736, %730, %var_5473, %var_5475, %737, %738, %var_5484, meta[relay.Constant][60] /* ty=Tensor[(128), int64] */, %739, meta[relay.Constant][61] /* ty=Tensor[(660), float32] */, %740, %var_5498)
}

def @func_13374(%var_13346: Tensor[(5, 10, 13), float32], %var_13366: Tensor[(1, 56), float32], %var_13367: Tensor[(1350), float32], %var_13368: Tensor[(132), uint16]) -> (Tensor[(5, 10, 13), bool], Tensor[(288), float64], Tensor[(1, 56), float32], Tensor[(1350), float32], Tensor[(132), uint16], Tensor[(288), float64], Tensor[(45, 1), float64]) {
  %741 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  %742 = cast(%var_13346, dtype="bool") /* ty=Tensor[(5, 10, 13), bool] */;
  %743 = shape_of(%741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%741, dtype="bool") /* ty=Tensor[(5, 10, 13), bool] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %746 = cast(%var_13366, dtype="float32") /* ty=Tensor[(1, 56), float32] */;
  %747 = cast(%var_13367, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %748 = cast(%var_13368, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %749 = cast(meta[relay.Constant][62] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %750 = cast(meta[relay.Constant][63] /* ty=Tensor[(45, 1), float64] */, dtype="float64") /* ty=Tensor[(45, 1), float64] */;
  %751 = reshape(%746, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %752 = reshape(%747, newshape=[675, 2]) /* ty=Tensor[(675, 2), float32] */;
  %753 = reshape(%748, newshape=[132]) /* ty=Tensor[(132), uint16] */;
  %754 = reshape(%749, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %755 = reshape(%750, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %756 = @func_11001(%751, %752, %753, %754, %755) /* ty=(Tensor[(468), int16], Tensor[(7, 2, 4), float32], Tensor[(56), float32], Tensor[(11, 12, 8), float64], Tensor[(5, 10, 13), float32], Tensor[(675, 2), float32], Tensor[(132), uint16], Tensor[(675), float32], Tensor[(132), uint16], Tensor[(10, 6, 11), float32], Tensor[(84), float32], Tensor[(288), float64], float64, Tensor[(45), float64]) */;
  %757 = greater(%744, %745) /* ty=Tensor[(5, 10, 13), bool] */;
  %758 = %756.11;
  (%757, %758, %var_13366, %var_13367, %var_13368, meta[relay.Constant][62] /* ty=Tensor[(288), float64] */, meta[relay.Constant][63] /* ty=Tensor[(45, 1), float64] */)
}

def @func_13870(%var_13849: Tensor[(1, 15, 10), float32]) -> (Tensor[(1, 15, 10), float32], Tensor[(8, 10, 2), float64]) {
  %759 = cast(%var_13849, dtype="float32") /* ty=Tensor[(1, 15, 10), float32] */;
  %760 = @func_10298() /* ty=(Tensor[(8, 10, 2), float64],) */;
  %761 = sinh(%759) /* ty=Tensor[(1, 15, 10), float32] */;
  %762 = %760.0;
  (%761, %762)
}

def @func_8724(%var_8699: Tensor[(576), uint16], %var_8700: Tensor[(1, 1056), float64], %var_8716: Tensor[(1936), int32]) -> (Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(576), uint16], Tensor[(1, 1056), float64], Tensor[(150, 1), float32], Tensor[(468, 1), int16], Tensor[(176), int32], Tensor[(1936), int32], Tensor[(150, 1), float32]) {
  %763 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %764 = cast(%var_8699, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %765 = cast(%var_8699, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %766 = cast(%var_8700, dtype="float64") /* ty=Tensor[(1, 1056), float64] */;
  %767 = reshape(%764, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %768 = reshape(%765, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %769 = reshape(%766, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %770 = @func_2252(%767, %768, %769) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %771 = cast(meta[relay.Constant][64] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %772 = cast(meta[relay.Constant][65] /* ty=Tensor[(176), int32] */, dtype="int32") /* ty=Tensor[(176), int32] */;
  %773 = cast(%var_8716, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %774 = reshape(%771, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %775 = reshape(%772, newshape=[176]) /* ty=Tensor[(176), int32] */;
  %776 = reshape(%773, newshape=[1936]) /* ty=Tensor[(1936), int32] */;
  %777 = @func_7837(%774, %775, %776) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(468), int16], Tensor[(150, 1), float32], Tensor[(468), int16], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) */;
  %778 = cast(meta[relay.Constant][64] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %779 = cast(meta[relay.Constant][65] /* ty=Tensor[(176), int32] */, dtype="int32") /* ty=Tensor[(176), int32] */;
  %780 = cast(%var_8716, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %781 = reshape(%778, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %782 = reshape(%779, newshape=[176]) /* ty=Tensor[(176), int32] */;
  %783 = reshape(%780, newshape=[1936]) /* ty=Tensor[(1936), int32] */;
  %784 = @func_7837(%781, %782, %783) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(468), int16], Tensor[(150, 1), float32], Tensor[(468), int16], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) */;
  %785 = %763.0;
  %786 = %770.0;
  %787 = %777.2;
  %788 = %784.2;
  (%785, %786, %var_8699, %var_8700, %787, meta[relay.Constant][64] /* ty=Tensor[(468, 1), int16] */, meta[relay.Constant][65] /* ty=Tensor[(176), int32] */, %var_8716, %788)
}

def @func_12978(%var_12951: Tensor[(12, 6, 13), float32]) -> (Tensor[(12, 6, 13), float32],) {
  %789 = cast(%var_12951, dtype="float32") /* ty=Tensor[(12, 6, 13), float32] */;
  %790 = asinh(%789) /* ty=Tensor[(12, 6, 13), float32] */;
  (%790,)
}

def @func_13121(%var_13107: Tensor[(1350), int64]) -> (Tensor[(468), int16], Tensor[(16, 8), int64], Tensor[(99), float32], Tensor[(1078, 1350), bool]) {
  %791 = @func_8415() /* ty=(Tensor[(468), int16],) */;
  %792 = cast(meta[relay.Constant][66] /* ty=Tensor[(1078, 1), float32] */, dtype="float32") /* ty=Tensor[(1078, 1), float32] */;
  %793 = cast(meta[relay.Constant][67] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %794 = cast(%var_13107, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %795 = reshape(%792, newshape=[1078]) /* ty=Tensor[(1078), float32] */;
  %796 = reshape(%793, newshape=[1, 99]) /* ty=Tensor[(1, 99), float32] */;
  %797 = reshape(%794, newshape=[1350, 1]) /* ty=Tensor[(1350, 1), int64] */;
  %798 = @func_8173(%795, %796, %797) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(10, 2, 5), bool], Tensor[(100), uint32], Tensor[(1, 1, 3), bool], float32, Tensor[(1078), float32], Tensor[(5, 10, 13), float64], Tensor[(9, 15, 1), float32], Tensor[(16, 8), int64], Tensor[(11, 1, 9), float32], Tensor[(1, 99), float32], Tensor[(15, 10, 9), int64], Tensor[(1350, 1), int64]) */;
  %799 = cast(meta[relay.Constant][66] /* ty=Tensor[(1078, 1), float32] */, dtype="bool") /* ty=Tensor[(1078, 1), bool] */;
  %800 = cast(%var_13107, dtype="bool") /* ty=Tensor[(1350), bool] */;
  %801 = %791.0;
  %802 = %798.8;
  %803 = greater(%799, %800) /* ty=Tensor[(1078, 1350), bool] */;
  (%801, %802, meta[relay.Constant][67] /* ty=Tensor[(99), float32] */, %803)
}

def @func_12643() -> (Tensor[(135), bool], Tensor[(5, 10, 13), float64]) {
  %804 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %805 = @func_11577() /* ty=(Tensor[(5, 10, 13), float64],) */;
  %806 = %804.1;
  %807 = %805.0;
  (%806, %807)
}

def @func_10453(%var_10448: Tensor[(6, 6, 4), uint16]) -> Tensor[(6, 6, 4), uint16] {
  %808 = cast(meta[relay.Constant][68] /* ty=Tensor[(6, 6, 4), uint16] */, dtype="uint16") /* ty=Tensor[(6, 6, 4), uint16] */;
  %809 = shape_of(%var_10448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(%var_10448, dtype="uint16") /* ty=Tensor[(6, 6, 4), uint16] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  maximum(%810, %811) /* ty=Tensor[(6, 6, 4), uint16] */
}

def @func_8612() -> Tensor[(5, 10, 13), float32] {
  %812 = @func_8371() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %812.0
}

def @func_8789(%var_8751: Tensor[(5, 135), float32], %var_8756: Tensor[(1078), float32], %var_8777: Tensor[(14, 7, 11), float32], %var_8782: Tensor[(5, 10, 13), float32]) -> (float64, Tensor[(5, 135), float32], float64, Tensor[(1078), float32], Tensor[(9, 15, 1), float32], Tensor[(15, 9), float32], Tensor[(14, 7, 11), bool], Tensor[(5, 10, 13), int16]) {
  %813 = cast(%var_8751, dtype="float32") /* ty=Tensor[(5, 135), float32] */;
  %814 = cast(-0.207108f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %815 = reshape(%813, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), float32] */;
  %816 = reshape(%814, newshape=[]) /* ty=float64 */;
  %817 = @func_5029(%815, %816) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(16, 9, 4), uint16], Tensor[(12, 48), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */;
  %818 = cast(meta[relay.Constant][69] /* ty=Tensor[(15, 9), float32] */, dtype="float32") /* ty=Tensor[(15, 9), float32] */;
  %819 = reshape(%818, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float32] */;
  %820 = @func_327(%819) /* ty=(Tensor[(9, 15, 1), float32],) */;
  %821 = cast(-0.207108f64 /* ty=float64 */, dtype="float32") /* ty=float32 */;
  %822 = cast(%var_8756, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %823 = reshape(%821, newshape=[]) /* ty=float32 */;
  %824 = reshape(%822, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), float32] */;
  %825 = @func_3525(%823, %824) /* ty=(Tensor[(14, 7, 11), float32], Tensor[(1, 1, 3), bool]) */;
  %826 = %825.0;
  %827 = cast(%var_8777, dtype="bool") /* ty=Tensor[(14, 7, 11), bool] */;
  %828 = shape_of(%826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %829 = cast(%826, dtype="bool") /* ty=Tensor[(14, 7, 11), bool] */;
  %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %831 = @func_8311() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %832 = %831.0;
  %833 = cast(%832, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %834 = log(%833) /* ty=Tensor[(5, 10, 13), float32] */;
  %835 = cast(%834, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %836 = sin(%835) /* ty=Tensor[(5, 10, 13), float32] */;
  %837 = cast(%var_8782, dtype="int16") /* ty=Tensor[(5, 10, 13), int16] */;
  %838 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%836, dtype="int16") /* ty=Tensor[(5, 10, 13), int16] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %841 = %817.5;
  %842 = %820.0;
  %843 = logical_or(%829, %830) /* ty=Tensor[(14, 7, 11), bool] */;
  %844 = right_shift(%839, %840) /* ty=Tensor[(5, 10, 13), int16] */;
  (%841, %var_8751, -0.207108f64 /* ty=float64 */, %var_8756, %842, meta[relay.Constant][69] /* ty=Tensor[(15, 9), float32] */, %843, %844)
}

def @func_5760(%var_5733: Tensor[(11, 1, 9), float32]) -> (Tensor[(11, 1, 9), float32], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) {
  %845 = cast(%var_5733, dtype="float32") /* ty=Tensor[(11, 1, 9), float32] */;
  %846 = cast(meta[relay.Constant][70] /* ty=Tensor[(528, 2), float64] */, dtype="float64") /* ty=Tensor[(528, 2), float64] */;
  %847 = reshape(%846, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %848 = log2(%845) /* ty=Tensor[(11, 1, 9), float32] */;
  %849 = @func_1489(%847) /* ty=Tensor[(11, 12, 8), float64] */;
  (%848, %849, meta[relay.Constant][70] /* ty=Tensor[(528, 2), float64] */)
}

def @func_1175(%var_1170: Tensor[(7, 2, 4), float32], %var_1171: Tensor[(7, 2, 4), float32]) -> (Tensor[(7, 2, 4), float32],) {
  %850 = cast(%var_1171, dtype="float32") /* ty=Tensor[(7, 2, 4), float32] */;
  %851 = shape_of(%var_1170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %852 = cast(%var_1170, dtype="float32") /* ty=Tensor[(7, 2, 4), float32] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %854 = mod(%852, %853) /* ty=Tensor[(7, 2, 4), float32] */;
  (%854,)
}

def @func_2252(%var_2221: Tensor[(16, 9, 4), uint16], %var_2222: Tensor[(16, 9, 4), uint16], %var_2244: Tensor[(1056), float64]) -> (Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) {
  %855 = cast(%var_2222, dtype="uint16") /* ty=Tensor[(16, 9, 4), uint16] */;
  %856 = shape_of(%var_2221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(%var_2221, dtype="uint16") /* ty=Tensor[(16, 9, 4), uint16] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %859 = cast(%var_2244, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %860 = reshape(%859, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %861 = multiply(%857, %858) /* ty=Tensor[(16, 9, 4), uint16] */;
  %862 = @func_1489(%860) /* ty=Tensor[(11, 12, 8), float64] */;
  (%861, %862, %var_2244)
}

def @func_2557(%var_2520: Tensor[(6, 11, 2), uint16], %var_2521: Tensor[(6, 11, 2), uint16]) -> (Tensor[(6, 11, 2), uint16], Tensor[(9, 15, 1), float32], Tensor[(1, 135), float32]) {
  %863 = cast(%var_2521, dtype="uint16") /* ty=Tensor[(6, 11, 2), uint16] */;
  %864 = shape_of(%var_2520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %865 = cast(%var_2520, dtype="uint16") /* ty=Tensor[(6, 11, 2), uint16] */;
  %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %867 = cast(meta[relay.Constant][71] /* ty=Tensor[(1, 135), float32] */, dtype="float32") /* ty=Tensor[(1, 135), float32] */;
  %868 = reshape(%867, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float32] */;
  %869 = @func_327(%868) /* ty=(Tensor[(9, 15, 1), float32],) */;
  %870 = right_shift(%865, %866) /* ty=Tensor[(6, 11, 2), uint16] */;
  %871 = %869.0;
  (%870, %871, meta[relay.Constant][71] /* ty=Tensor[(1, 135), float32] */)
}

def @func_9978(%var_9969: Tensor[(1, 468), int16]) -> (Tensor[(5, 10, 13), float32], Tensor[(1936), int32], Tensor[(1, 468), int16], Tensor[(176), int32]) {
  %872 = cast(%var_9969, dtype="int16") /* ty=Tensor[(1, 468), int16] */;
  %873 = cast(meta[relay.Constant][72] /* ty=Tensor[(176), int32] */, dtype="int32") /* ty=Tensor[(176), int32] */;
  %874 = reshape(%872, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %875 = reshape(%873, newshape=[176]) /* ty=Tensor[(176), int32] */;
  %876 = @func_9871(%874, %875) /* ty=(Tensor[(5, 10, 13), float64], Tensor[(468), int16], Tensor[(468), int16], Tensor[(176), int32], Tensor[(1936), int32]) */;
  %877 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  %878 = %876.4;
  (%877, %878, %var_9969, meta[relay.Constant][72] /* ty=Tensor[(176), int32] */)
}

def @func_11577() -> (Tensor[(5, 10, 13), float64],) {
  %879 = @func_10688() /* ty=Tensor[(5, 10, 13), float64] */;
  (%879,)
}

def @func_13826(%var_13817: Tensor[(1350), int64]) -> (Tensor[(135), bool], Tensor[(99), float32], Tensor[(1350), float64]) {
  %880 = @func_9016() /* ty=(Tensor[(135), bool],) */;
  %881 = cast(%var_13817, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %882 = reshape(%881, newshape=[1350]) /* ty=Tensor[(1350), int64] */;
  %883 = @func_13121(%882) /* ty=(Tensor[(468), int16], Tensor[(16, 8), int64], Tensor[(99), float32], Tensor[(1078, 1350), bool]) */;
  %884 = cast(%var_13817, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %885 = %880.0;
  %886 = %883.2;
  %887 = exp(%884) /* ty=Tensor[(1350), float64] */;
  (%885, %886, %887)
}

def @func_4035(%var_4019: int64, %var_4020: Tensor[(8, 1, 16), int64]) -> (Tensor[(8, 1, 16), bool], Tensor[(9, 15, 1), float32], Tensor[(135), float32]) {
  %888 = cast(%var_4019, dtype="bool") /* ty=bool */;
  %889 = cast(%var_4020, dtype="bool") /* ty=Tensor[(8, 1, 16), bool] */;
  %890 = cast(meta[relay.Constant][73] /* ty=Tensor[(135), float32] */, dtype="float32") /* ty=Tensor[(135), float32] */;
  %891 = reshape(%890, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float32] */;
  %892 = @func_327(%891) /* ty=(Tensor[(9, 15, 1), float32],) */;
  %893 = less_equal(%888, %889) /* ty=Tensor[(8, 1, 16), bool] */;
  %894 = %892.0;
  (%893, %894, meta[relay.Constant][73] /* ty=Tensor[(135), float32] */)
}

def @func_10749() -> Tensor[(5, 10, 13), float32] {
  %895 = @func_10640() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) */;
  %895.0
}

def @func_12730() -> (Tensor[(5, 10, 13), float32],) {
  %896 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %897 = %896.0;
  (%897,)
}

def @func_7837(%var_7813: Tensor[(468), int16], %var_7819: Tensor[(176), int32], %var_7820: Tensor[(1936), int32]) -> (Tensor[(5, 10, 13), float32], Tensor[(468), int16], Tensor[(150, 1), float32], Tensor[(468), int16], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) {
  %898 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %899 = cast(meta[relay.Constant][74] /* ty=Tensor[(150, 1), float32] */, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
  %900 = cast(%var_7813, dtype="int16") /* ty=Tensor[(468), int16] */;
  %901 = reshape(%899, newshape=[15, 2, 5]) /* ty=Tensor[(15, 2, 5), float32] */;
  %902 = reshape(%900, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %903 = @func_5418(%901, %902) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %904 = cast(%var_7819, dtype="int32") /* ty=Tensor[(176), int32] */;
  %905 = cast(%var_7820, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %906 = reshape(%904, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), int32] */;
  %907 = reshape(%905, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), int32] */;
  %908 = @func_7527(%906, %907) /* ty=(Tensor[(11, 16, 11), float64],) */;
  %909 = %898.0;
  %910 = %903.2;
  %911 = %908.0;
  (%909, %910, meta[relay.Constant][74] /* ty=Tensor[(150, 1), float32] */, %var_7813, %911, %var_7819, %var_7820)
}

def @func_12303(%var_12290: Tensor[(2145), float32]) -> (Tensor[(15, 2, 5), float32], Tensor[(11, 15, 13), float32], Tensor[(2145), float32], Tensor[(11, 15, 13), float32]) {
  %912 = @func_10605() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(15, 2, 5), float32], Tensor[(150), float32], Tensor[(468), int16]) */;
  %913 = cast(%var_12290, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %914 = reshape(%913, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %915 = @func_11081(%914) /* ty=(Tensor[(11, 15, 13), float32],) */;
  %916 = cast(%var_12290, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %917 = reshape(%916, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %918 = @func_11081(%917) /* ty=(Tensor[(11, 15, 13), float32],) */;
  %919 = %912.1;
  %920 = %915.0;
  %921 = %918.0;
  (%919, %920, %var_12290, %921)
}

def @func_12423(%var_12364: float64, %var_12398: Tensor[(468, 1), int16]) -> (Tensor[(5, 10, 13), float32], Tensor[(288), float64], Tensor[(288), float64], Tensor[(576), uint16], Tensor[(1936), int32], Tensor[(5, 10, 13), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(135), float64], Tensor[(468, 1), int16], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32]) {
  %922 = cast(meta[relay.Constant][75] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %923 = cast(meta[relay.Constant][76] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %924 = cast(meta[relay.Constant][77] /* ty=Tensor[(1936), int32] */, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %925 = cast(meta[relay.Constant][76] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %926 = reshape(%922, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %927 = reshape(%923, newshape=[576]) /* ty=Tensor[(576), uint16] */;
  %928 = reshape(%924, newshape=[4, 484]) /* ty=Tensor[(4, 484), int32] */;
  %929 = reshape(%925, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %930 = @func_10270(%926, %927, %928, %929) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(288), float64], Tensor[(5, 10, 13), float64], Tensor[(5, 10, 13), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(4, 484), int32], Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(132), uint16], Tensor[(120), int32], Tensor[(1, 140), float32], Tensor[(1200), bool], Tensor[(16, 9, 4), int16], Tensor[(120), int32], Tensor[(8, 192), float64], Tensor[(1, 45), float64], Tensor[(1056), float64]) */;
  %931 = cast(%var_12364, dtype="float64") /* ty=float64 */;
  %932 = cast(meta[relay.Constant][78] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %933 = reshape(%931, newshape=[]) /* ty=float64 */;
  %934 = reshape(%932, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), float64] */;
  %935 = @func_4182(%933, %934) /* ty=(Tensor[(9, 5, 1), bool],) */;
  %936 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %937 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %938 = cast(%var_12398, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %939 = reshape(%938, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %940 = @func_3226(%939) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) */;
  %941 = @func_8371() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %942 = @func_12131() /* ty=Tensor[(5, 10, 13), float32] */;
  %943 = %930.2;
  %944 = @func_10688() /* ty=Tensor[(5, 10, 13), float64] */;
  %945 = %935.0;
  %946 = %936.0;
  %947 = %937.0;
  %948 = %940.2;
  %949 = %941.0;
  %950 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  (%942, %943, meta[relay.Constant][75] /* ty=Tensor[(288), float64] */, meta[relay.Constant][76] /* ty=Tensor[(576), uint16] */, meta[relay.Constant][77] /* ty=Tensor[(1936), int32] */, %944, %945, %var_12364, meta[relay.Constant][78] /* ty=Tensor[(45), float64] */, %946, %947, %948, %var_12398, %949, %950)
}

def @func_5029(%var_5006: Tensor[(9, 5, 15), float32], %var_5026: float64) -> (Tensor[(9, 5, 15), float32], Tensor[(16, 9, 4), uint16], Tensor[(12, 48), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) {
  %951 = cast(%var_5006, dtype="float32") /* ty=Tensor[(9, 5, 15), float32] */;
  %952 = cast(meta[relay.Constant][79] /* ty=Tensor[(12, 48), uint16] */, dtype="uint16") /* ty=Tensor[(12, 48), uint16] */;
  %953 = cast(meta[relay.Constant][79] /* ty=Tensor[(12, 48), uint16] */, dtype="uint16") /* ty=Tensor[(12, 48), uint16] */;
  %954 = cast(meta[relay.Constant][80] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %955 = reshape(%952, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %956 = reshape(%953, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %957 = reshape(%954, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %958 = @func_2252(%955, %956, %957) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %959 = cast(%var_5026, dtype="float64") /* ty=float64 */;
  %960 = cast(meta[relay.Constant][81] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %961 = reshape(%959, newshape=[]) /* ty=float64 */;
  %962 = reshape(%960, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), float64] */;
  %963 = @func_4182(%961, %962) /* ty=(Tensor[(9, 5, 1), bool],) */;
  %964 = log10(%951) /* ty=Tensor[(9, 5, 15), float32] */;
  %965 = %958.0;
  %966 = %963.0;
  (%964, %965, meta[relay.Constant][79] /* ty=Tensor[(12, 48), uint16] */, meta[relay.Constant][80] /* ty=Tensor[(1056), float64] */, %966, %var_5026, meta[relay.Constant][81] /* ty=Tensor[(45), float64] */)
}

def @func_10688() -> Tensor[(5, 10, 13), float64] {
  %967 = @func_9375() /* ty=(Tensor[(5, 10, 13), float64],) */;
  %967.0
}

def @func_8988(%var_8978: Tensor[(120), int32], %var_8980: Tensor[(4, 300), bool]) -> (Tensor[(2, 3, 10), float32], Tensor[(9, 15, 1), float32], Tensor[(120), int32], Tensor[(140), float32], Tensor[(4, 300), bool]) {
  %968 = cast(meta[relay.Constant][82] /* ty=Tensor[(2, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 10), float32] */;
  %969 = cast(%var_8978, dtype="int32") /* ty=Tensor[(120), int32] */;
  %970 = cast(meta[relay.Constant][83] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %971 = cast(%var_8980, dtype="bool") /* ty=Tensor[(4, 300), bool] */;
  %972 = reshape(%969, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int32] */;
  %973 = reshape(%970, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %974 = reshape(%971, newshape=[10, 12, 10]) /* ty=Tensor[(10, 12, 10), bool] */;
  %975 = @func_3000(%972, %973, %974) /* ty=(Tensor[(2, 10, 7), float32], Tensor[(140), float32], Tensor[(9, 15, 1), float32], Tensor[(132), uint16], Tensor[(10, 12, 10), int64]) */;
  %976 = sigmoid(%968) /* ty=Tensor[(2, 3, 10), float32] */;
  %977 = %975.2;
  (%976, %977, %var_8978, meta[relay.Constant][83] /* ty=Tensor[(140), float32] */, %var_8980)
}

def @func_12268() -> (Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float64]) {
  %978 = @func_8371() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %979 = @func_11577() /* ty=(Tensor[(5, 10, 13), float64],) */;
  %980 = %978.0;
  %981 = %979.0;
  (%980, %981)
}

def @func_12695(%var_12683: float64, %var_12690: Tensor[(135), bool]) -> (Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64], Tensor[(135), int16]) {
  %982 = cast(%var_12683, dtype="float64") /* ty=float64 */;
  %983 = cast(meta[relay.Constant][84] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %984 = reshape(%982, newshape=[]) /* ty=float64 */;
  %985 = reshape(%983, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), float64] */;
  %986 = @func_4182(%984, %985) /* ty=(Tensor[(9, 5, 1), bool],) */;
  %987 = @func_9016() /* ty=(Tensor[(135), bool],) */;
  %988 = %987.0;
  %989 = cast(%var_12690, dtype="int16") /* ty=Tensor[(135), int16] */;
  %990 = shape_of(%988, dtype="int32") /* ty=Tensor[(1), int32] */;
  %991 = cast(%988, dtype="int16") /* ty=Tensor[(135), int16] */;
  %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?), int16] */;
  %993 = %986.0;
  %994 = right_shift(%991, %992) /* ty=Tensor[(135), int16] */;
  (%993, %var_12683, meta[relay.Constant][84] /* ty=Tensor[(45), float64] */, %994)
}

def @func_11081(%var_11077: Tensor[(11, 15, 13), float32]) -> (Tensor[(11, 15, 13), float32],) {
  %995 = cast(%var_11077, dtype="float32") /* ty=Tensor[(11, 15, 13), float32] */;
  %996 = tan(%995) /* ty=Tensor[(11, 15, 13), float32] */;
  (%996,)
}

def @func_10270(%var_10173: Tensor[(288), float64], %var_10188: Tensor[(576), uint16], %var_10190: Tensor[(4, 484), int32], %var_10241: Tensor[(16, 9, 4), uint16]) -> (Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(288), float64], Tensor[(5, 10, 13), float64], Tensor[(5, 10, 13), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(4, 484), int32], Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(132), uint16], Tensor[(120), int32], Tensor[(1, 140), float32], Tensor[(1200), bool], Tensor[(16, 9, 4), int16], Tensor[(120), int32], Tensor[(8, 192), float64], Tensor[(1, 45), float64], Tensor[(1056), float64]) {
  %997 = cast(%var_10173, dtype="float64") /* ty=Tensor[(288), float64] */;
  %998 = cast(%var_10173, dtype="float64") /* ty=Tensor[(288), float64] */;
  %999 = reshape(%997, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float64] */;
  %1000 = reshape(%998, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float64] */;
  %1001 = @func_7135(%999, %1000) /* ty=(Tensor[(16, 3, 6), float64],) */;
  %1002 = cast(%var_10188, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %1003 = cast(meta[relay.Constant][85] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %1004 = cast(%var_10190, dtype="int32") /* ty=Tensor[(4, 484), int32] */;
  %1005 = reshape(%1002, newshape=[576]) /* ty=Tensor[(576), uint16] */;
  %1006 = reshape(%1003, newshape=[1, 1056]) /* ty=Tensor[(1, 1056), float64] */;
  %1007 = reshape(%1004, newshape=[1936]) /* ty=Tensor[(1936), int32] */;
  %1008 = @func_8724(%1005, %1006, %1007) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(576), uint16], Tensor[(1, 1056), float64], Tensor[(150, 1), float32], Tensor[(468, 1), int16], Tensor[(176), int32], Tensor[(1936), int32], Tensor[(150, 1), float32]) */;
  %1009 = %1008.1;
  %1010 = cast(%1009, dtype="uint16") /* ty=Tensor[(16, 9, 4), uint16] */;
  %1011 = cast(%var_10188, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %1012 = cast(meta[relay.Constant][85] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %1013 = reshape(%1010, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %1014 = reshape(%1011, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %1015 = reshape(%1012, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %1016 = @func_2252(%1013, %1014, %1015) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %1017 = cast(meta[relay.Constant][86] /* ty=Tensor[(120), int32] */, dtype="int32") /* ty=Tensor[(120), int32] */;
  %1018 = cast(meta[relay.Constant][87] /* ty=Tensor[(1, 140), float32] */, dtype="float32") /* ty=Tensor[(1, 140), float32] */;
  %1019 = cast(meta[relay.Constant][88] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1020 = reshape(%1017, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int32] */;
  %1021 = reshape(%1018, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %1022 = reshape(%1019, newshape=[10, 12, 10]) /* ty=Tensor[(10, 12, 10), bool] */;
  %1023 = @func_3000(%1020, %1021, %1022) /* ty=(Tensor[(2, 10, 7), float32], Tensor[(140), float32], Tensor[(9, 15, 1), float32], Tensor[(132), uint16], Tensor[(10, 12, 10), int64]) */;
  %1024 = cast(%var_10241, dtype="int16") /* ty=Tensor[(16, 9, 4), int16] */;
  %1025 = shape_of(%1009, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1026 = cast(%1009, dtype="int16") /* ty=Tensor[(16, 9, 4), int16] */;
  %1027 = dyn.reshape(%1024, %1025, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1028 = cast(meta[relay.Constant][89] /* ty=Tensor[(8, 192), float64] */, dtype="float64") /* ty=Tensor[(8, 192), float64] */;
  %1029 = cast(meta[relay.Constant][87] /* ty=Tensor[(1, 140), float32] */, dtype="float32") /* ty=Tensor[(1, 140), float32] */;
  %1030 = cast(meta[relay.Constant][88] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1031 = cast(meta[relay.Constant][90] /* ty=Tensor[(1, 45), float64] */, dtype="float64") /* ty=Tensor[(1, 45), float64] */;
  %1032 = reshape(%1028, newshape=[12, 8, 16]) /* ty=Tensor[(12, 8, 16), float64] */;
  %1033 = reshape(%1029, newshape=[5, 28]) /* ty=Tensor[(5, 28), float32] */;
  %1034 = reshape(%1030, newshape=[1200]) /* ty=Tensor[(1200), bool] */;
  %1035 = reshape(%1031, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %1036 = @func_4464(%1032, %1033, %1034, %1035) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(10, 12, 10), int64], Tensor[(120), int32], Tensor[(5, 28), float32], Tensor[(1200), bool], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */;
  %1037 = cast(%var_10241, dtype="uint16") /* ty=Tensor[(16, 9, 4), uint16] */;
  %1038 = cast(meta[relay.Constant][85] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %1039 = reshape(%1037, newshape=[2, 288]) /* ty=Tensor[(2, 288), uint16] */;
  %1040 = reshape(%1038, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %1041 = @func_9151(%1039, %1040) /* ty=(Tensor[(468), int16], Tensor[(16, 9, 4), uint16], Tensor[(2, 288), uint16], Tensor[(1056), float64], Tensor[(1936), int32], Tensor[(5, 10, 13), float64]) */;
  %1042 = @func_9510() /* ty=Tensor[(5, 10, 13), float32] */;
  %1043 = %1001.0;
  %1044 = @func_9663() /* ty=Tensor[(5, 10, 13), float64] */;
  %1045 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
  %1046 = @func_8612() /* ty=Tensor[(5, 10, 13), float32] */;
  %1047 = %1016.0;
  %1048 = %1023.3;
  %1049 = bitwise_xor(%1026, %1027) /* ty=Tensor[(16, 9, 4), int16] */;
  %1050 = %1036.2;
  %1051 = %1041.3;
  (%1042, %1043, %var_10173, %1044, %1045, %var_10188, meta[relay.Constant][85] /* ty=Tensor[(1056), float64] */, %var_10190, %1046, %1047, %1048, meta[relay.Constant][86] /* ty=Tensor[(120), int32] */, meta[relay.Constant][87] /* ty=Tensor[(1, 140), float32] */, meta[relay.Constant][88] /* ty=Tensor[(1200), bool] */, %1049, %1050, meta[relay.Constant][89] /* ty=Tensor[(8, 192), float64] */, meta[relay.Constant][90] /* ty=Tensor[(1, 45), float64] */, %1051)
}

def @func_12168() -> (Tensor[(5, 10, 13), float32],) {
  %1052 = @func_8612() /* ty=Tensor[(5, 10, 13), float32] */;
  (%1052,)
}

def @func_9956(%var_9931: Tensor[(675, 1), float32], %var_9948: Tensor[(132), uint16]) -> (Tensor[(5, 10, 13), float32], Tensor[(5, 135), float32], Tensor[(539, 2), float32], Tensor[(675, 1), float64], Tensor[(132), uint16], Tensor[(192), float64], Tensor[(1056), float64], Tensor[(132), uint16], Tensor[(576), uint16]) {
  %1053 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %1054 = cast(%var_9931, dtype="float32") /* ty=Tensor[(675, 1), float32] */;
  %1055 = cast(meta[relay.Constant][91] /* ty=Tensor[(539, 2), float32] */, dtype="float32") /* ty=Tensor[(539, 2), float32] */;
  %1056 = cast(meta[relay.Constant][91] /* ty=Tensor[(539, 2), float32] */, dtype="float32") /* ty=Tensor[(539, 2), float32] */;
  %1057 = %1053.0;
  %1058 = cast(%1057, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %1059 = reshape(%1054, newshape=[5, 135]) /* ty=Tensor[(5, 135), float32] */;
  %1060 = reshape(%1055, newshape=[1078]) /* ty=Tensor[(1078), float32] */;
  %1061 = reshape(%1056, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), float32] */;
  %1062 = reshape(%1058, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), float32] */;
  %1063 = @func_8789(%1059, %1060, %1061, %1062) /* ty=(float64, Tensor[(5, 135), float32], float64, Tensor[(1078), float32], Tensor[(9, 15, 1), float32], Tensor[(15, 9), float32], Tensor[(14, 7, 11), bool], Tensor[(5, 10, 13), int16]) */;
  %1064 = cast(%var_9931, dtype="float64") /* ty=Tensor[(675, 1), float64] */;
  %1065 = cast(meta[relay.Constant][92] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1066 = cast(meta[relay.Constant][93] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %1067 = cast(%var_9948, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %1068 = cast(meta[relay.Constant][94] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %1069 = reshape(%1065, newshape=[12, 4, 4]) /* ty=Tensor[(12, 4, 4), float64] */;
  %1070 = reshape(%1066, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %1071 = reshape(%1067, newshape=[132]) /* ty=Tensor[(132), uint16] */;
  %1072 = reshape(%1068, newshape=[576]) /* ty=Tensor[(576), uint16] */;
  %1073 = @func_9896(%1069, %1070, %1071, %1072) /* ty=(Tensor[(12, 4, 4), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(132), uint16], int64, Tensor[(576), uint16]) */;
  %1074 = %1063.1;
  %1075 = cosh(%1064) /* ty=Tensor[(675, 1), float64] */;
  %1076 = %1073.3;
  (%1057, %1074, meta[relay.Constant][91] /* ty=Tensor[(539, 2), float32] */, %1075, %1076, meta[relay.Constant][92] /* ty=Tensor[(192), float64] */, meta[relay.Constant][93] /* ty=Tensor[(1056), float64] */, %var_9948, meta[relay.Constant][94] /* ty=Tensor[(576), uint16] */)
}

def @func_2751(%var_2692: Tensor[(1, 1056), float64], %var_2694: Tensor[(8, 1056), float64], %var_2713: Tensor[(132), uint16]) -> (Tensor[(4, 1, 12), bool], Tensor[(11, 12, 8), float64], Tensor[(8, 1056), int8], Tensor[(1, 135), float32], Tensor[(132), uint16], Tensor[(10, 6, 11), float32], Tensor[(660, 1), float32], Tensor[(3, 1056), uint64]) {
  %1077 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1078 = cast(meta[relay.Constant][95] /* ty=Tensor[(4, 1, 12), bool] */, dtype="bool") /* ty=Tensor[(4, 1, 12), bool] */;
  %1079 = cast(%var_2692, dtype="float64") /* ty=Tensor[(1, 1056), float64] */;
  %1080 = reshape(%1079, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %1081 = cast(%var_2692, dtype="int8") /* ty=Tensor[(1, 1056), int8] */;
  %1082 = cast(%var_2694, dtype="int8") /* ty=Tensor[(8, 1056), int8] */;
  %1083 = cast(%var_2713, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %1084 = cast(%var_2713, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %1085 = reshape(%1083, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), uint16] */;
  %1086 = reshape(%1084, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), uint16] */;
  %1087 = @func_2557(%1085, %1086) /* ty=(Tensor[(6, 11, 2), uint16], Tensor[(9, 15, 1), float32], Tensor[(1, 135), float32]) */;
  %1088 = cast(meta[relay.Constant][96] /* ty=Tensor[(660, 1), float32] */, dtype="float32") /* ty=Tensor[(660, 1), float32] */;
  %1089 = reshape(%1088, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), float32] */;
  %1090 = cast(%var_2692, dtype="float64") /* ty=Tensor[(1, 1056), float64] */;
  %1091 = atan(%1090) /* ty=Tensor[(1, 1056), float64] */;
  %1092 = cast(%var_2692, dtype="int64") /* ty=Tensor[(1, 1056), int64] */;
  %1093 = shape_of(%1091, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1094 = cast(%1091, dtype="int64") /* ty=Tensor[(1, 1056), int64] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1096 = logical_xor(%1094, %1095) /* ty=Tensor[(?, 1056), int64] */;
  %1097 = cast(%1096, dtype="uint64") /* ty=Tensor[(?, 1056), uint64] */;
  %1098 = cast(meta[relay.Constant][97] /* ty=Tensor[(3, 1056), int64] */, dtype="uint64") /* ty=Tensor[(3, 1056), uint64] */;
  %1099 = logical_or(%1077, %1078) /* ty=Tensor[(4, 1, 12), bool] */;
  %1100 = @func_1489(%1080) /* ty=Tensor[(11, 12, 8), float64] */;
  %1101 = right_shift(%1081, %1082) /* ty=Tensor[(8, 1056), int8] */;
  %1102 = %1087.2;
  %1103 = @func_673(%1089) /* ty=Tensor[(10, 6, 11), float32] */;
  %1104 = add(%1097, %1098) /* ty=Tensor[(3, 1056), uint64] */;
  (%1099, %1100, %1101, %1102, %var_2713, %1103, meta[relay.Constant][96] /* ty=Tensor[(660, 1), float32] */, %1104)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10811() -> Tensor[(5, 10, 13), float64] {
  @func_9663() /* ty=Tensor[(5, 10, 13), float64] */
}

def @func_9639(%var_9638: Tensor[(15, 15, 6), float32]) -> (Tensor[(15, 15, 6), float32], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) {
  %7 = fn (%var_9605: Tensor[(15, 15, 6), float32]) -> (Tensor[(15, 15, 6), float32], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) {
    %0 = cast(%var_9605, dtype="float32") /* ty=Tensor[(15, 15, 6), float32] */;
    %1 = log(%0) /* ty=Tensor[(15, 15, 6), float32] */;
    %2 = cast(%1, dtype="float32") /* ty=Tensor[(15, 15, 6), float32] */;
    %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %4 = reshape(%3, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
    %5 = sinh(%2) /* ty=Tensor[(15, 15, 6), float32] */;
    %6 = @func_1489(%4) /* ty=Tensor[(11, 12, 8), float64] */;
    (%5, %6, meta[relay.Constant][0] /* ty=Tensor[(1056), float64] */)
  };
  %7(%var_9638) /* ty=(Tensor[(15, 15, 6), float32], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */
}

def @func_13312(%var_13309: Tensor[(5, 10, 13), float32], %var_13310: float64, %var_13311: Tensor[(468), int16]) -> (Tensor[(5, 10, 13), uint16], Tensor[(8, 10, 2), float64], Tensor[(8, 10, 2), float64], Tensor[(5, 10, 13), float32], float64, Tensor[(468), int16]) {
  @func_13307(%var_13309, %var_13310, %var_13311) /* ty=(Tensor[(5, 10, 13), uint16], Tensor[(8, 10, 2), float64], Tensor[(8, 10, 2), float64], Tensor[(5, 10, 13), float32], float64, Tensor[(468), int16]) */
}

def @func_13948(%var_13934: Tensor[(8, 10, 2), float64]) -> (Tensor[(8, 10, 2), bool],) {
  %8 = @func_12545() /* ty=Tensor[(8, 10, 2), float64] */;
  %9 = cast(%var_13934, dtype="bool") /* ty=Tensor[(8, 10, 2), bool] */;
  %10 = shape_of(%8, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%8, dtype="bool") /* ty=Tensor[(8, 10, 2), bool] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %13 = not_equal(%11, %12) /* ty=Tensor[(8, 10, 2), bool] */;
  (%13,)
}

def @func_5418(%var_5406: Tensor[(15, 2, 5), float32], %var_5410: Tensor[(468), int16]) -> (Tensor[(15, 2, 5), float32], Tensor[(135), bool], Tensor[(468), int16]) {
  %14 = cast(%var_5406, dtype="float32") /* ty=Tensor[(15, 2, 5), float32] */;
  %15 = cast(%var_5410, dtype="int16") /* ty=Tensor[(468), int16] */;
  %16 = reshape(%15, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %17 = @func_3226(%16) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) */;
  %18 = sinh(%14) /* ty=Tensor[(15, 2, 5), float32] */;
  %19 = %17.1;
  (%18, %19, %var_5410)
}

def @func_7755() -> (Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) {
  %26 = fn () -> (Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) {
    %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
    %21 = cast(meta[relay.Constant][2] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
    %22 = reshape(%21, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
    %23 = @func_3226(%22) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) */;
    %24 = sigmoid(%20) /* ty=Tensor[(5, 10, 13), float32] */;
    %25 = %23.1;
    (%24, %25, meta[relay.Constant][2] /* ty=Tensor[(468), int16] */)
  };
  %26() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */
}

def @func_8311() -> (Tensor[(5, 10, 13), float32],) {
  %27 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %28 = %27.0;
  (%28,)
}

def @func_3841(%var_3839: Tensor[(9, 7, 11), float32], %var_3840: Tensor[(1, 56), float32]) -> (Tensor[(9, 7, 11), float32], Tensor[(7, 2, 4), float32], Tensor[(1, 56), float32]) {
  @func_3837(%var_3839, %var_3840) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(7, 2, 4), float32], Tensor[(1, 56), float32]) */
}

def @func_9376() -> (Tensor[(5, 10, 13), float64],) {
  %30 = fn () -> (Tensor[(5, 10, 13), float64],) {
    %29 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
    (%29,)
  };
  %30() /* ty=(Tensor[(5, 10, 13), float64],) */
}

def @func_12547() -> Tensor[(8, 10, 2), float64] {
  @func_12545() /* ty=Tensor[(8, 10, 2), float64] */
}

def @func_11723(%var_11625: Tensor[(100), uint32], %var_11681: Tensor[(6, 78), int16]) -> (Tensor[(150), float32], Tensor[(10, 2, 5), bool], Tensor[(100), uint32], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(1056), float64], Tensor[(1350), float32], Tensor[(135), bool], Tensor[(6, 78), int16], Tensor[(8, 10, 2), float64], Tensor[(1, 1, 3), bool], float32, Tensor[(1078), float32]) {
  %31 = @func_10605() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(15, 2, 5), float32], Tensor[(150), float32], Tensor[(468), int16]) */;
  %32 = cast(%var_11625, dtype="uint32") /* ty=Tensor[(100), uint32] */;
  %33 = reshape(%32, newshape=[10, 2, 5]) /* ty=Tensor[(10, 2, 5), uint32] */;
  %34 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %35 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %36 = cast(meta[relay.Constant][3] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %37 = reshape(%36, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %38 = cast(meta[relay.Constant][4] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %39 = reshape(%38, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), float32] */;
  %40 = @func_9637(%39) /* ty=(Tensor[(15, 15, 6), float32], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %41 = cast(%var_11681, dtype="int16") /* ty=Tensor[(6, 78), int16] */;
  %42 = reshape(%41, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %43 = @func_3226(%42) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) */;
  %44 = @func_10298() /* ty=(Tensor[(8, 10, 2), float64],) */;
  %45 = cast(-6.7656f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %46 = cast(meta[relay.Constant][5] /* ty=Tensor[(1078), float32] */, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %47 = reshape(%45, newshape=[]) /* ty=float32 */;
  %48 = reshape(%46, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), float32] */;
  %49 = @func_3525(%47, %48) /* ty=(Tensor[(14, 7, 11), float32], Tensor[(1, 1, 3), bool]) */;
  %50 = %31.2;
  %51 = @func_6223(%33) /* ty=Tensor[(10, 2, 5), bool] */;
  %52 = %34.0;
  %53 = %35.0;
  %54 = @func_1489(%37) /* ty=Tensor[(11, 12, 8), float64] */;
  %55 = %40.2;
  %56 = %43.1;
  %57 = %44.0;
  %58 = %49.1;
  (%50, %51, %var_11625, %52, %53, %54, meta[relay.Constant][3] /* ty=Tensor[(1056), float64] */, %55, meta[relay.Constant][4] /* ty=Tensor[(1350), float32] */, %56, %var_11681, %57, %58, -6.7656f /* ty=float32 */, meta[relay.Constant][5] /* ty=Tensor[(1078), float32] */)
}

def @func_13828(%var_13827: Tensor[(1350), int64]) -> (Tensor[(135), bool], Tensor[(99), float32], Tensor[(1350), float64]) {
  %67 = fn (%var_13817: Tensor[(1350), int64]) -> (Tensor[(135), bool], Tensor[(99), float32], Tensor[(1350), float64]) {
    %59 = @func_9016() /* ty=(Tensor[(135), bool],) */;
    %60 = cast(%var_13817, dtype="int64") /* ty=Tensor[(1350), int64] */;
    %61 = reshape(%60, newshape=[1350]) /* ty=Tensor[(1350), int64] */;
    %62 = @func_13121(%61) /* ty=(Tensor[(468), int16], Tensor[(16, 8), int64], Tensor[(99), float32], Tensor[(1078, 1350), bool]) */;
    %63 = cast(%var_13817, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %64 = %59.0;
    %65 = %62.2;
    %66 = exp(%63) /* ty=Tensor[(1350), float64] */;
    (%64, %65, %66)
  };
  %67(%var_13827) /* ty=(Tensor[(135), bool], Tensor[(99), float32], Tensor[(1350), float64]) */
}

def @func_10270(%var_10173: Tensor[(288), float64], %var_10188: Tensor[(576), uint16], %var_10190: Tensor[(4, 484), int32], %var_10241: Tensor[(16, 9, 4), uint16]) -> (Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(288), float64], Tensor[(5, 10, 13), float64], Tensor[(5, 10, 13), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(4, 484), int32], Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(132), uint16], Tensor[(120), int32], Tensor[(1, 140), float32], Tensor[(1200), bool], Tensor[(16, 9, 4), int16], Tensor[(120), int32], Tensor[(8, 192), float64], Tensor[(1, 45), float64], Tensor[(1056), float64]) {
  %68 = cast(%var_10173, dtype="float64") /* ty=Tensor[(288), float64] */;
  %69 = cast(%var_10173, dtype="float64") /* ty=Tensor[(288), float64] */;
  %70 = reshape(%68, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float64] */;
  %71 = reshape(%69, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float64] */;
  %72 = @func_7135(%70, %71) /* ty=(Tensor[(16, 3, 6), float64],) */;
  %73 = cast(%var_10188, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %74 = cast(meta[relay.Constant][6] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %75 = cast(%var_10190, dtype="int32") /* ty=Tensor[(4, 484), int32] */;
  %76 = reshape(%73, newshape=[576]) /* ty=Tensor[(576), uint16] */;
  %77 = reshape(%74, newshape=[1, 1056]) /* ty=Tensor[(1, 1056), float64] */;
  %78 = reshape(%75, newshape=[1936]) /* ty=Tensor[(1936), int32] */;
  %79 = @func_8724(%76, %77, %78) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(576), uint16], Tensor[(1, 1056), float64], Tensor[(150, 1), float32], Tensor[(468, 1), int16], Tensor[(176), int32], Tensor[(1936), int32], Tensor[(150, 1), float32]) */;
  %80 = %79.1;
  %81 = cast(%80, dtype="uint16") /* ty=Tensor[(16, 9, 4), uint16] */;
  %82 = cast(%var_10188, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %83 = cast(meta[relay.Constant][6] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %84 = reshape(%81, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %85 = reshape(%82, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %86 = reshape(%83, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %87 = @func_2252(%84, %85, %86) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %88 = cast(meta[relay.Constant][7] /* ty=Tensor[(120), int32] */, dtype="int32") /* ty=Tensor[(120), int32] */;
  %89 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 140), float32] */, dtype="float32") /* ty=Tensor[(1, 140), float32] */;
  %90 = cast(meta[relay.Constant][9] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %91 = reshape(%88, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int32] */;
  %92 = reshape(%89, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %93 = reshape(%90, newshape=[10, 12, 10]) /* ty=Tensor[(10, 12, 10), bool] */;
  %94 = @func_3000(%91, %92, %93) /* ty=(Tensor[(2, 10, 7), float32], Tensor[(140), float32], Tensor[(9, 15, 1), float32], Tensor[(132), uint16], Tensor[(10, 12, 10), int64]) */;
  %95 = cast(%var_10241, dtype="int16") /* ty=Tensor[(16, 9, 4), int16] */;
  %96 = shape_of(%80, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%80, dtype="int16") /* ty=Tensor[(16, 9, 4), int16] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %99 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 192), float64] */, dtype="float64") /* ty=Tensor[(8, 192), float64] */;
  %100 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 140), float32] */, dtype="float32") /* ty=Tensor[(1, 140), float32] */;
  %101 = cast(meta[relay.Constant][9] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %102 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 45), float64] */, dtype="float64") /* ty=Tensor[(1, 45), float64] */;
  %103 = reshape(%99, newshape=[12, 8, 16]) /* ty=Tensor[(12, 8, 16), float64] */;
  %104 = reshape(%100, newshape=[5, 28]) /* ty=Tensor[(5, 28), float32] */;
  %105 = reshape(%101, newshape=[1200]) /* ty=Tensor[(1200), bool] */;
  %106 = reshape(%102, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %107 = @func_4464(%103, %104, %105, %106) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(10, 12, 10), int64], Tensor[(120), int32], Tensor[(5, 28), float32], Tensor[(1200), bool], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */;
  %108 = cast(%var_10241, dtype="uint16") /* ty=Tensor[(16, 9, 4), uint16] */;
  %109 = cast(meta[relay.Constant][6] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %110 = reshape(%108, newshape=[2, 288]) /* ty=Tensor[(2, 288), uint16] */;
  %111 = reshape(%109, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %112 = @func_9151(%110, %111) /* ty=(Tensor[(468), int16], Tensor[(16, 9, 4), uint16], Tensor[(2, 288), uint16], Tensor[(1056), float64], Tensor[(1936), int32], Tensor[(5, 10, 13), float64]) */;
  %113 = @func_9510() /* ty=Tensor[(5, 10, 13), float32] */;
  %114 = %72.0;
  %115 = @func_9663() /* ty=Tensor[(5, 10, 13), float64] */;
  %116 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
  %117 = @func_8612() /* ty=Tensor[(5, 10, 13), float32] */;
  %118 = %87.0;
  %119 = %94.3;
  %120 = bitwise_xor(%97, %98) /* ty=Tensor[(16, 9, 4), int16] */;
  %121 = %107.2;
  %122 = %112.3;
  (%113, %114, %var_10173, %115, %116, %var_10188, meta[relay.Constant][6] /* ty=Tensor[(1056), float64] */, %var_10190, %117, %118, %119, meta[relay.Constant][7] /* ty=Tensor[(120), int32] */, meta[relay.Constant][8] /* ty=Tensor[(1, 140), float32] */, meta[relay.Constant][9] /* ty=Tensor[(1200), bool] */, %120, %121, meta[relay.Constant][10] /* ty=Tensor[(8, 192), float64] */, meta[relay.Constant][11] /* ty=Tensor[(1, 45), float64] */, %122)
}

def @func_3837(%var_3823: Tensor[(9, 7, 11), float32], %var_3833: Tensor[(1, 56), float32]) -> (Tensor[(9, 7, 11), float32], Tensor[(7, 2, 4), float32], Tensor[(1, 56), float32]) {
  %123 = cast(%var_3823, dtype="float32") /* ty=Tensor[(9, 7, 11), float32] */;
  %124 = cast(%var_3833, dtype="float32") /* ty=Tensor[(1, 56), float32] */;
  %125 = cast(%var_3833, dtype="float32") /* ty=Tensor[(1, 56), float32] */;
  %126 = reshape(%124, newshape=[7, 2, 4]) /* ty=Tensor[(7, 2, 4), float32] */;
  %127 = reshape(%125, newshape=[7, 2, 4]) /* ty=Tensor[(7, 2, 4), float32] */;
  %128 = @func_1175(%126, %127) /* ty=(Tensor[(7, 2, 4), float32],) */;
  %129 = log(%123) /* ty=Tensor[(9, 7, 11), float32] */;
  %130 = %128.0;
  (%129, %130, %var_3833)
}

def @func_14319() -> Tensor[(5, 10, 13), float64] {
  %132 = fn () -> Tensor[(5, 10, 13), float64] {
    %131 = @func_12268() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float64]) */;
    %131.1
  };
  %132() /* ty=Tensor[(5, 10, 13), float64] */
}

def @func_8589(%var_8587: Tensor[(4, 6, 8), float64], %var_8588: Tensor[(4, 6, 8), float64]) -> (Tensor[(4, 6, 8), float64], Tensor[(4, 6, 8), float32], Tensor[(4, 6, 8), float32]) {
  @func_8585(%var_8587, %var_8588) /* ty=(Tensor[(4, 6, 8), float64], Tensor[(4, 6, 8), float32], Tensor[(4, 6, 8), float32]) */
}

def @func_12821() -> (Tensor[(5, 3, 8), float32], Tensor[(10, 6, 11), float32], Tensor[(660), float32]) {
  @func_12819() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(10, 6, 11), float32], Tensor[(660), float32]) */
}

def @func_12997() -> (Tensor[(5, 10, 13), float32],) {
  %135 = fn () -> (Tensor[(5, 10, 13), float32],) {
    %133 = @func_8371() /* ty=(Tensor[(5, 10, 13), float32],) */;
    %134 = %133.0;
    (%134,)
  };
  %135() /* ty=(Tensor[(5, 10, 13), float32],) */
}

def @func_8177(%var_8174: Tensor[(1078), float32], %var_8175: Tensor[(1, 99), float32], %var_8176: Tensor[(1350, 1), int64]) -> (Tensor[(5, 10, 13), float32], Tensor[(10, 2, 5), bool], Tensor[(100), uint32], Tensor[(1, 1, 3), bool], float32, Tensor[(1078), float32], Tensor[(5, 10, 13), float64], Tensor[(9, 15, 1), float32], Tensor[(16, 8), int64], Tensor[(11, 1, 9), float32], Tensor[(1, 99), float32], Tensor[(15, 10, 9), int64], Tensor[(1350, 1), int64]) {
  %167 = fn (%var_8138: Tensor[(1078), float32], %var_8163: Tensor[(1, 99), float32], %var_8168: Tensor[(1350, 1), int64]) -> (Tensor[(5, 10, 13), float32], Tensor[(10, 2, 5), bool], Tensor[(100), uint32], Tensor[(1, 1, 3), bool], float32, Tensor[(1078), float32], Tensor[(5, 10, 13), float64], Tensor[(9, 15, 1), float32], Tensor[(16, 8), int64], Tensor[(11, 1, 9), float32], Tensor[(1, 99), float32], Tensor[(15, 10, 9), int64], Tensor[(1350, 1), int64]) {
    %136 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
    %137 = cast(%136, dtype="float64") /* ty=Tensor[(5, 10, 13), float64] */;
    %138 = log10(%137) /* ty=Tensor[(5, 10, 13), float64] */;
    %139 = cast(%138, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
    %140 = cast(meta[relay.Constant][12] /* ty=Tensor[(100), uint32] */, dtype="uint32") /* ty=Tensor[(100), uint32] */;
    %141 = reshape(%140, newshape=[10, 2, 5]) /* ty=Tensor[(10, 2, 5), uint32] */;
    %142 = cast(7.04914f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %143 = cast(%var_8138, dtype="float32") /* ty=Tensor[(1078), float32] */;
    %144 = reshape(%142, newshape=[]) /* ty=float32 */;
    %145 = reshape(%143, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), float32] */;
    %146 = @func_3525(%144, %145) /* ty=(Tensor[(14, 7, 11), float32], Tensor[(1, 1, 3), bool]) */;
    %147 = cast(%138, dtype="float64") /* ty=Tensor[(5, 10, 13), float64] */;
    %148 = cast(7.04914f /* ty=float32 */, dtype="int64") /* ty=int64 */;
    %149 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 8), int64] */, dtype="int64") /* ty=Tensor[(16, 8), int64] */;
    %150 = reshape(%148, newshape=[]) /* ty=int64 */;
    %151 = reshape(%149, newshape=[8, 1, 16]) /* ty=Tensor[(8, 1, 16), int64] */;
    %152 = @func_4035(%150, %151) /* ty=(Tensor[(8, 1, 16), bool], Tensor[(9, 15, 1), float32], Tensor[(135), float32]) */;
    %153 = cast(%var_8163, dtype="float32") /* ty=Tensor[(1, 99), float32] */;
    %154 = reshape(%153, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float32] */;
    %155 = @func_5760(%154) /* ty=(Tensor[(11, 1, 9), float32], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) */;
    %156 = cast(%var_8168, dtype="int64") /* ty=Tensor[(1350, 1), int64] */;
    %157 = cast(%var_8168, dtype="int64") /* ty=Tensor[(1350, 1), int64] */;
    %158 = reshape(%156, newshape=[15, 10, 9]) /* ty=Tensor[(15, 10, 9), int64] */;
    %159 = reshape(%157, newshape=[15, 10, 9]) /* ty=Tensor[(15, 10, 9), int64] */;
    %160 = exp(%139) /* ty=Tensor[(5, 10, 13), float32] */;
    %161 = @func_6223(%141) /* ty=Tensor[(10, 2, 5), bool] */;
    %162 = %146.1;
    %163 = rsqrt(%147) /* ty=Tensor[(5, 10, 13), float64] */;
    %164 = %152.1;
    %165 = %155.0;
    %166 = @func_3571(%158, %159) /* ty=Tensor[(15, 10, 9), int64] */;
    (%160, %161, meta[relay.Constant][12] /* ty=Tensor[(100), uint32] */, %162, 7.04914f /* ty=float32 */, %var_8138, %163, %164, meta[relay.Constant][13] /* ty=Tensor[(16, 8), int64] */, %165, %var_8163, %166, %var_8168)
  };
  %167(%var_8174, %var_8175, %var_8176) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(10, 2, 5), bool], Tensor[(100), uint32], Tensor[(1, 1, 3), bool], float32, Tensor[(1078), float32], Tensor[(5, 10, 13), float64], Tensor[(9, 15, 1), float32], Tensor[(16, 8), int64], Tensor[(11, 1, 9), float32], Tensor[(1, 99), float32], Tensor[(15, 10, 9), int64], Tensor[(1350, 1), int64]) */
}

def @func_11781(%var_11770: Tensor[(128), int64]) -> (Tensor[(5, 10, 13), float64], Tensor[(135), float32], int64, Tensor[(128), int64]) {
  %168 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %169 = cast(%var_11770, dtype="int64") /* ty=Tensor[(128), int64] */;
  %170 = reshape(%168, newshape=[]) /* ty=int64 */;
  %171 = reshape(%169, newshape=[8, 1, 16]) /* ty=Tensor[(8, 1, 16), int64] */;
  %172 = @func_4035(%170, %171) /* ty=(Tensor[(8, 1, 16), bool], Tensor[(9, 15, 1), float32], Tensor[(135), float32]) */;
  %173 = @func_10811() /* ty=Tensor[(5, 10, 13), float64] */;
  %174 = %172.2;
  (%173, %174, 5 /* ty=int64 */, %var_11770)
}

def @func_9960(%var_9958: Tensor[(675, 1), float32], %var_9959: Tensor[(132), uint16]) -> (Tensor[(5, 10, 13), float32], Tensor[(5, 135), float32], Tensor[(539, 2), float32], Tensor[(675, 1), float64], Tensor[(132), uint16], Tensor[(192), float64], Tensor[(1056), float64], Tensor[(132), uint16], Tensor[(576), uint16]) {
  @func_9956(%var_9958, %var_9959) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(5, 135), float32], Tensor[(539, 2), float32], Tensor[(675, 1), float64], Tensor[(132), uint16], Tensor[(192), float64], Tensor[(1056), float64], Tensor[(132), uint16], Tensor[(576), uint16]) */
}

def @func_4038(%var_4036: int64, %var_4037: Tensor[(8, 1, 16), int64]) -> (Tensor[(8, 1, 16), bool], Tensor[(9, 15, 1), float32], Tensor[(135), float32]) {
  %182 = fn (%var_4019: int64, %var_4020: Tensor[(8, 1, 16), int64]) -> (Tensor[(8, 1, 16), bool], Tensor[(9, 15, 1), float32], Tensor[(135), float32]) {
    %175 = cast(%var_4019, dtype="bool") /* ty=bool */;
    %176 = cast(%var_4020, dtype="bool") /* ty=Tensor[(8, 1, 16), bool] */;
    %177 = cast(meta[relay.Constant][14] /* ty=Tensor[(135), float32] */, dtype="float32") /* ty=Tensor[(135), float32] */;
    %178 = reshape(%177, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float32] */;
    %179 = @func_327(%178) /* ty=(Tensor[(9, 15, 1), float32],) */;
    %180 = less_equal(%175, %176) /* ty=Tensor[(8, 1, 16), bool] */;
    %181 = %179.0;
    (%180, %181, meta[relay.Constant][14] /* ty=Tensor[(135), float32] */)
  };
  %182(%var_4036, %var_4037) /* ty=(Tensor[(8, 1, 16), bool], Tensor[(9, 15, 1), float32], Tensor[(135), float32]) */
}

def @func_12492(%var_12468: Tensor[(675), float32]) -> (Tensor[(8, 10, 2), float64], Tensor[(132), uint16], Tensor[(675), float32], Tensor[(132), uint16], Tensor[(5, 10, 13), float32]) {
  %183 = @func_10298() /* ty=(Tensor[(8, 10, 2), float64],) */;
  %184 = cast(%var_12468, dtype="float32") /* ty=Tensor[(675), float32] */;
  %185 = cast(meta[relay.Constant][15] /* ty=Tensor[(132), uint16] */, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %186 = reshape(%184, newshape=[675, 1]) /* ty=Tensor[(675, 1), float32] */;
  %187 = reshape(%185, newshape=[132]) /* ty=Tensor[(132), uint16] */;
  %188 = @func_9956(%186, %187) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(5, 135), float32], Tensor[(539, 2), float32], Tensor[(675, 1), float64], Tensor[(132), uint16], Tensor[(192), float64], Tensor[(1056), float64], Tensor[(132), uint16], Tensor[(576), uint16]) */;
  %189 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %190 = %183.0;
  %191 = %188.4;
  %192 = %189.0;
  (%190, %191, %var_12468, meta[relay.Constant][15] /* ty=Tensor[(132), uint16] */, %192)
}

def @main(%var_14409: Tensor[(4, 15, 11), uint8], %var_14410: Tensor[(4, 15, 11), uint8]) -> Tensor[(4, 15, 11), bool] {
  %193 = cast(%var_14410, dtype="bool") /* ty=Tensor[(4, 15, 11), bool] */;
  %194 = shape_of(%var_14409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%var_14409, dtype="bool") /* ty=Tensor[(4, 15, 11), bool] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%195, %196) /* ty=Tensor[(4, 15, 11), bool] */
}

def @func_8252(%var_8251: Tensor[(120), int32]) -> (Tensor[(5, 10, 13), float32], Tensor[(120), int32], Tensor[(1200), bool], Tensor[(5, 28), bool]) {
  %211 = fn (%var_8191: Tensor[(120), int32]) -> (Tensor[(5, 10, 13), float32], Tensor[(120), int32], Tensor[(1200), bool], Tensor[(5, 28), bool]) {
    %197 = cast(%var_8191, dtype="int32") /* ty=Tensor[(120), int32] */;
    %198 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 28), float32] */, dtype="float32") /* ty=Tensor[(5, 28), float32] */;
    %199 = cast(meta[relay.Constant][16] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %200 = reshape(%197, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int32] */;
    %201 = reshape(%198, newshape=[140]) /* ty=Tensor[(140), float32] */;
    %202 = reshape(%199, newshape=[10, 12, 10]) /* ty=Tensor[(10, 12, 10), bool] */;
    %203 = @func_3000(%200, %201, %202) /* ty=(Tensor[(2, 10, 7), float32], Tensor[(140), float32], Tensor[(9, 15, 1), float32], Tensor[(132), uint16], Tensor[(10, 12, 10), int64]) */;
    %204 = %203.1;
    %205 = cast(%204, dtype="bool") /* ty=Tensor[(140), bool] */;
    %206 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(5, 28), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %207 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 28), float32] */, dtype="bool") /* ty=Tensor[(5, 28), bool] */;
    %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %209 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
    %210 = logical_and(%207, %208) /* ty=Tensor[(5, 28), bool] */;
    (%209, %var_8191, meta[relay.Constant][16] /* ty=Tensor[(1200), bool] */, %210)
  };
  %211(%var_8251) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(120), int32], Tensor[(1200), bool], Tensor[(5, 28), bool]) */
}

def @func_8474() -> (Tensor[(5, 10, 13), float32],) {
  %213 = fn () -> (Tensor[(5, 10, 13), float32],) {
    %212 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
    (%212,)
  };
  %213() /* ty=(Tensor[(5, 10, 13), float32],) */
}

def @func_11867(%var_11865: Tensor[(715, 3), float32]) -> (Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(11, 15, 13), float32], Tensor[(715, 3), float32]) {
  @func_11864(%var_11865) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(11, 15, 13), float32], Tensor[(715, 3), float32]) */
}

def @func_9180(%var_9178: Tensor[(176), int32], %var_9179: Tensor[(1936), int32]) -> (Tensor[(5, 10, 13), float64], Tensor[(15, 11, 3), float32], Tensor[(495), float32], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) {
  %224 = fn (%var_9171: Tensor[(176), int32], %var_9172: Tensor[(1936), int32]) -> (Tensor[(5, 10, 13), float64], Tensor[(15, 11, 3), float32], Tensor[(495), float32], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) {
    %214 = cast(meta[relay.Constant][18] /* ty=Tensor[(495), float32] */, dtype="float32") /* ty=Tensor[(495), float32] */;
    %215 = reshape(%214, newshape=[15, 11, 3]) /* ty=Tensor[(15, 11, 3), float32] */;
    %216 = cast(%var_9171, dtype="int32") /* ty=Tensor[(176), int32] */;
    %217 = cast(%var_9172, dtype="int32") /* ty=Tensor[(1936), int32] */;
    %218 = reshape(%216, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), int32] */;
    %219 = reshape(%217, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), int32] */;
    %220 = @func_7527(%218, %219) /* ty=(Tensor[(11, 16, 11), float64],) */;
    %221 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
    %222 = @func_5725(%215) /* ty=Tensor[(15, 11, 3), float32] */;
    %223 = %220.0;
    (%221, %222, meta[relay.Constant][18] /* ty=Tensor[(495), float32] */, %223, %var_9171, %var_9172)
  };
  %224(%var_9178, %var_9179) /* ty=(Tensor[(5, 10, 13), float64], Tensor[(15, 11, 3), float32], Tensor[(495), float32], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) */
}

def @func_8415() -> (Tensor[(468), int16],) {
  %225 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %226 = %225.2;
  (%226,)
}

def @func_9470(%var_9468: Tensor[(576), uint16], %var_9469: Tensor[(1056), float64]) -> (Tensor[(135), bool], Tensor[(1056), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(468), int16]) {
  @func_9466(%var_9468, %var_9469) /* ty=(Tensor[(135), bool], Tensor[(1056), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(468), int16]) */
}

def @func_13307(%var_13256: Tensor[(5, 10, 13), float32], %var_13295: float64, %var_13296: Tensor[(468), int16]) -> (Tensor[(5, 10, 13), uint16], Tensor[(8, 10, 2), float64], Tensor[(8, 10, 2), float64], Tensor[(5, 10, 13), float32], float64, Tensor[(468), int16]) {
  %227 = @func_8371() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %228 = %227.0;
  %229 = cast(%var_13256, dtype="uint16") /* ty=Tensor[(5, 10, 13), uint16] */;
  %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%228, dtype="uint16") /* ty=Tensor[(5, 10, 13), uint16] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %233 = cast(%var_13295, dtype="float64") /* ty=float64 */;
  %234 = cast(%var_13296, dtype="int16") /* ty=Tensor[(468), int16] */;
  %235 = reshape(%233, newshape=[]) /* ty=float64 */;
  %236 = reshape(%234, newshape=[468, 1]) /* ty=Tensor[(468, 1), int16] */;
  %237 = @func_12423(%235, %236) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(288), float64], Tensor[(288), float64], Tensor[(576), uint16], Tensor[(1936), int32], Tensor[(5, 10, 13), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(135), float64], Tensor[(468, 1), int16], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32]) */;
  %238 = bitwise_and(%231, %232) /* ty=Tensor[(5, 10, 13), uint16] */;
  %239 = @func_10495() /* ty=Tensor[(8, 10, 2), float64] */;
  %240 = @func_12545() /* ty=Tensor[(8, 10, 2), float64] */;
  %241 = %237.13;
  (%238, %239, %240, %241, %var_13295, %var_13296)
}

def @func_7841(%var_7838: Tensor[(468), int16], %var_7839: Tensor[(176), int32], %var_7840: Tensor[(1936), int32]) -> (Tensor[(5, 10, 13), float32], Tensor[(468), int16], Tensor[(150, 1), float32], Tensor[(468), int16], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) {
  %256 = fn (%var_7813: Tensor[(468), int16], %var_7819: Tensor[(176), int32], %var_7820: Tensor[(1936), int32]) -> (Tensor[(5, 10, 13), float32], Tensor[(468), int16], Tensor[(150, 1), float32], Tensor[(468), int16], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) {
    %242 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
    %243 = cast(meta[relay.Constant][19] /* ty=Tensor[(150, 1), float32] */, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
    %244 = cast(%var_7813, dtype="int16") /* ty=Tensor[(468), int16] */;
    %245 = reshape(%243, newshape=[15, 2, 5]) /* ty=Tensor[(15, 2, 5), float32] */;
    %246 = reshape(%244, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %247 = @func_5418(%245, %246) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
    %248 = cast(%var_7819, dtype="int32") /* ty=Tensor[(176), int32] */;
    %249 = cast(%var_7820, dtype="int32") /* ty=Tensor[(1936), int32] */;
    %250 = reshape(%248, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), int32] */;
    %251 = reshape(%249, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), int32] */;
    %252 = @func_7527(%250, %251) /* ty=(Tensor[(11, 16, 11), float64],) */;
    %253 = %242.0;
    %254 = %247.2;
    %255 = %252.0;
    (%253, %254, meta[relay.Constant][19] /* ty=Tensor[(150, 1), float32] */, %var_7813, %255, %var_7819, %var_7820)
  };
  %256(%var_7838, %var_7839, %var_7840) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(468), int16], Tensor[(150, 1), float32], Tensor[(468), int16], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) */
}

def @func_13635() -> (Tensor[(5, 10, 13), float32], Tensor[(15, 11, 3), float32], Tensor[(495), float32]) {
  %257 = cast(meta[relay.Constant][20] /* ty=Tensor[(495), float32] */, dtype="float32") /* ty=Tensor[(495), float32] */;
  %258 = reshape(%257, newshape=[15, 11, 3]) /* ty=Tensor[(15, 11, 3), float32] */;
  %259 = @func_12131() /* ty=Tensor[(5, 10, 13), float32] */;
  %260 = @func_5725(%258) /* ty=Tensor[(15, 11, 3), float32] */;
  (%259, %260, meta[relay.Constant][20] /* ty=Tensor[(495), float32] */)
}

def @func_11307() -> Tensor[(5, 10, 13), float32] {
  @func_11305() /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_12427(%var_12425: float64, %var_12426: Tensor[(468, 1), int16]) -> (Tensor[(5, 10, 13), float32], Tensor[(288), float64], Tensor[(288), float64], Tensor[(576), uint16], Tensor[(1936), int32], Tensor[(5, 10, 13), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(135), float64], Tensor[(468, 1), int16], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32]) {
  @func_12423(%var_12425, %var_12426) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(288), float64], Tensor[(288), float64], Tensor[(576), uint16], Tensor[(1936), int32], Tensor[(5, 10, 13), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(135), float64], Tensor[(468, 1), int16], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32]) */
}

def @func_6223(%var_6216: Tensor[(10, 2, 5), uint32]) -> Tensor[(10, 2, 5), bool] {
  %261 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 2, 5), uint32] */, dtype="bool") /* ty=Tensor[(10, 2, 5), bool] */;
  %262 = shape_of(%var_6216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%var_6216, dtype="bool") /* ty=Tensor[(10, 2, 5), bool] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%263, %264) /* ty=Tensor[(10, 2, 5), bool] */
}

def @func_10407() -> (Tensor[(5, 10, 13), float64],) {
  %265 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
  (%265,)
}

def @func_4185(%var_4183: float64, %var_4184: Tensor[(9, 5, 1), float64]) -> (Tensor[(9, 5, 1), bool],) {
  %269 = fn (%var_4175: float64, %var_4176: Tensor[(9, 5, 1), float64]) -> (Tensor[(9, 5, 1), bool],) {
    %266 = cast(%var_4175, dtype="bool") /* ty=bool */;
    %267 = cast(%var_4176, dtype="bool") /* ty=Tensor[(9, 5, 1), bool] */;
    %268 = less_equal(%266, %267) /* ty=Tensor[(9, 5, 1), bool] */;
    (%268,)
  };
  %269(%var_4183, %var_4184) /* ty=(Tensor[(9, 5, 1), bool],) */
}

def @func_12643() -> (Tensor[(135), bool], Tensor[(5, 10, 13), float64]) {
  %270 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %271 = @func_11577() /* ty=(Tensor[(5, 10, 13), float64],) */;
  %272 = %270.1;
  %273 = %271.0;
  (%272, %273)
}

def @func_7527(%var_7505: Tensor[(1, 16, 11), int32], %var_7506: Tensor[(11, 16, 11), int32]) -> (Tensor[(11, 16, 11), float64],) {
  %274 = cast(%var_7505, dtype="int32") /* ty=Tensor[(1, 16, 11), int32] */;
  %275 = cast(%var_7506, dtype="int32") /* ty=Tensor[(11, 16, 11), int32] */;
  %276 = maximum(%274, %275) /* ty=Tensor[(11, 16, 11), int32] */;
  %277 = cast(%276, dtype="float64") /* ty=Tensor[(11, 16, 11), float64] */;
  %278 = erf(%277) /* ty=Tensor[(11, 16, 11), float64] */;
  (%278,)
}

def @func_3228(%var_3227: Tensor[(12, 3, 13), int16]) -> (Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) {
  %300 = fn (%var_3177: Tensor[(12, 3, 13), int16]) -> (Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) {
    %279 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 3, 13), int16] */, dtype="bool") /* ty=Tensor[(12, 3, 13), bool] */;
    %280 = shape_of(%var_3177, dtype="int32") /* ty=Tensor[(3), int32] */;
    %281 = cast(%var_3177, dtype="bool") /* ty=Tensor[(12, 3, 13), bool] */;
    %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %283 = cast(meta[relay.Constant][23] /* ty=Tensor[(135), float32] */, dtype="float64") /* ty=Tensor[(135), float64] */;
    %284 = log10(%283) /* ty=Tensor[(135), float64] */;
    %285 = cast(meta[relay.Constant][23] /* ty=Tensor[(135), float32] */, dtype="float32") /* ty=Tensor[(135), float32] */;
    %286 = reshape(%285, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float32] */;
    %287 = @func_327(%286) /* ty=(Tensor[(9, 15, 1), float32],) */;
    %288 = %287.0;
    %289 = cast(%288, dtype="bool") /* ty=Tensor[(9, 15, 1), bool] */;
    %290 = shape_of(%284, dtype="int32") /* ty=Tensor[(1), int32] */;
    %291 = cast(%284, dtype="bool") /* ty=Tensor[(135), bool] */;
    %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?), bool] */;
    %293 = cast(meta[relay.Constant][24] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
    %294 = shape_of(%284, dtype="int32") /* ty=Tensor[(1), int32] */;
    %295 = cast(%284, dtype="float64") /* ty=Tensor[(135), float64] */;
    %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?), float64] */;
    %297 = not_equal(%281, %282) /* ty=Tensor[(12, 3, 13), bool] */;
    %298 = equal(%291, %292) /* ty=Tensor[(135), bool] */;
    %299 = subtract(%295, %296) /* ty=Tensor[(135), float64] */;
    (%297, %298, %299)
  };
  %300(%var_3227) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) */
}

def @func_9206(%var_9191: Tensor[(140), float32], %var_9196: Tensor[(140), float32]) -> (Tensor[(5, 10, 13), float32], Tensor[(2, 10, 7), float32], Tensor[(140), uint16]) {
  %301 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %302 = cast(%var_9191, dtype="float32") /* ty=Tensor[(140), float32] */;
  %303 = reshape(%302, newshape=[2, 10, 7]) /* ty=Tensor[(2, 10, 7), float32] */;
  %304 = cast(%var_9196, dtype="uint16") /* ty=Tensor[(140), uint16] */;
  %305 = shape_of(%var_9191, dtype="int32") /* ty=Tensor[(1), int32] */;
  %306 = cast(%var_9191, dtype="uint16") /* ty=Tensor[(140), uint16] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %308 = %301.0;
  %309 = @func_2572(%303) /* ty=Tensor[(2, 10, 7), float32] */;
  %310 = maximum(%306, %307) /* ty=Tensor[(140), uint16] */;
  (%308, %309, %310)
}

def @func_10298() -> (Tensor[(8, 10, 2), float64],) {
  %311 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(8, 10, 2), float64] */;
  %312 = asinh(%311) /* ty=Tensor[(8, 10, 2), float64] */;
  (%312,)
}

def @func_12595() -> Tensor[(5, 10, 13), float32] {
  %313 = fn () -> Tensor[(5, 10, 13), float32] {
    @func_7873() /* ty=Tensor[(5, 10, 13), float32] */
  };
  %313() /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_2560(%var_2558: Tensor[(6, 11, 2), uint16], %var_2559: Tensor[(6, 11, 2), uint16]) -> (Tensor[(6, 11, 2), uint16], Tensor[(9, 15, 1), float32], Tensor[(1, 135), float32]) {
  %323 = fn (%var_2520: Tensor[(6, 11, 2), uint16], %var_2521: Tensor[(6, 11, 2), uint16]) -> (Tensor[(6, 11, 2), uint16], Tensor[(9, 15, 1), float32], Tensor[(1, 135), float32]) {
    %314 = cast(%var_2521, dtype="uint16") /* ty=Tensor[(6, 11, 2), uint16] */;
    %315 = shape_of(%var_2520, dtype="int32") /* ty=Tensor[(3), int32] */;
    %316 = cast(%var_2520, dtype="uint16") /* ty=Tensor[(6, 11, 2), uint16] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %318 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 135), float32] */, dtype="float32") /* ty=Tensor[(1, 135), float32] */;
    %319 = reshape(%318, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float32] */;
    %320 = @func_327(%319) /* ty=(Tensor[(9, 15, 1), float32],) */;
    %321 = right_shift(%316, %317) /* ty=Tensor[(6, 11, 2), uint16] */;
    %322 = %320.0;
    (%321, %322, meta[relay.Constant][26] /* ty=Tensor[(1, 135), float32] */)
  };
  %323(%var_2558, %var_2559) /* ty=(Tensor[(6, 11, 2), uint16], Tensor[(9, 15, 1), float32], Tensor[(1, 135), float32]) */
}

def @func_13449() -> (Tensor[(135), bool], Tensor[(5, 10, 13), float32]) {
  %327 = fn () -> (Tensor[(135), bool], Tensor[(5, 10, 13), float32]) {
    %324 = @func_9016() /* ty=(Tensor[(135), bool],) */;
    %325 = %324.0;
    %326 = @func_11305() /* ty=Tensor[(5, 10, 13), float32] */;
    (%325, %326)
  };
  %327() /* ty=(Tensor[(135), bool], Tensor[(5, 10, 13), float32]) */
}

def @func_8313() -> (Tensor[(5, 10, 13), float32],) {
  @func_8311() /* ty=(Tensor[(5, 10, 13), float32],) */
}

def @func_1492(%var_1490: Tensor[(11, 12, 8), float64]) -> Tensor[(11, 12, 8), float64] {
  @func_1489(%var_1490) /* ty=Tensor[(11, 12, 8), float64] */
}

def @func_329(%var_328: Tensor[(9, 15, 1), float32]) -> (Tensor[(9, 15, 1), float32],) {
  %330 = fn (%var_320: Tensor[(9, 15, 1), float32]) -> (Tensor[(9, 15, 1), float32],) {
    %328 = cast(%var_320, dtype="float32") /* ty=Tensor[(9, 15, 1), float32] */;
    %329 = sin(%328) /* ty=Tensor[(9, 15, 1), float32] */;
    (%329,)
  };
  %330(%var_328) /* ty=(Tensor[(9, 15, 1), float32],) */
}

def @func_8794(%var_8790: Tensor[(5, 135), float32], %var_8791: Tensor[(1078), float32], %var_8792: Tensor[(14, 7, 11), float32], %var_8793: Tensor[(5, 10, 13), float32]) -> (float64, Tensor[(5, 135), float32], float64, Tensor[(1078), float32], Tensor[(9, 15, 1), float32], Tensor[(15, 9), float32], Tensor[(14, 7, 11), bool], Tensor[(5, 10, 13), int16]) {
  %363 = fn (%var_8751: Tensor[(5, 135), float32], %var_8756: Tensor[(1078), float32], %var_8777: Tensor[(14, 7, 11), float32], %var_8782: Tensor[(5, 10, 13), float32]) -> (float64, Tensor[(5, 135), float32], float64, Tensor[(1078), float32], Tensor[(9, 15, 1), float32], Tensor[(15, 9), float32], Tensor[(14, 7, 11), bool], Tensor[(5, 10, 13), int16]) {
    %331 = cast(%var_8751, dtype="float32") /* ty=Tensor[(5, 135), float32] */;
    %332 = cast(-0.207108f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %333 = reshape(%331, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), float32] */;
    %334 = reshape(%332, newshape=[]) /* ty=float64 */;
    %335 = @func_5029(%333, %334) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(16, 9, 4), uint16], Tensor[(12, 48), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */;
    %336 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 9), float32] */, dtype="float32") /* ty=Tensor[(15, 9), float32] */;
    %337 = reshape(%336, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float32] */;
    %338 = @func_327(%337) /* ty=(Tensor[(9, 15, 1), float32],) */;
    %339 = cast(-0.207108f64 /* ty=float64 */, dtype="float32") /* ty=float32 */;
    %340 = cast(%var_8756, dtype="float32") /* ty=Tensor[(1078), float32] */;
    %341 = reshape(%339, newshape=[]) /* ty=float32 */;
    %342 = reshape(%340, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), float32] */;
    %343 = @func_3525(%341, %342) /* ty=(Tensor[(14, 7, 11), float32], Tensor[(1, 1, 3), bool]) */;
    %344 = %343.0;
    %345 = cast(%var_8777, dtype="bool") /* ty=Tensor[(14, 7, 11), bool] */;
    %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(3), int32] */;
    %347 = cast(%344, dtype="bool") /* ty=Tensor[(14, 7, 11), bool] */;
    %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %349 = @func_8311() /* ty=(Tensor[(5, 10, 13), float32],) */;
    %350 = %349.0;
    %351 = cast(%350, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
    %352 = log(%351) /* ty=Tensor[(5, 10, 13), float32] */;
    %353 = cast(%352, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
    %354 = sin(%353) /* ty=Tensor[(5, 10, 13), float32] */;
    %355 = cast(%var_8782, dtype="int16") /* ty=Tensor[(5, 10, 13), int16] */;
    %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
    %357 = cast(%354, dtype="int16") /* ty=Tensor[(5, 10, 13), int16] */;
    %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %359 = %335.5;
    %360 = %338.0;
    %361 = logical_or(%347, %348) /* ty=Tensor[(14, 7, 11), bool] */;
    %362 = right_shift(%357, %358) /* ty=Tensor[(5, 10, 13), int16] */;
    (%359, %var_8751, -0.207108f64 /* ty=float64 */, %var_8756, %360, meta[relay.Constant][27] /* ty=Tensor[(15, 9), float32] */, %361, %362)
  };
  %363(%var_8790, %var_8791, %var_8792, %var_8793) /* ty=(float64, Tensor[(5, 135), float32], float64, Tensor[(1078), float32], Tensor[(9, 15, 1), float32], Tensor[(15, 9), float32], Tensor[(14, 7, 11), bool], Tensor[(5, 10, 13), int16]) */
}

def @func_6226(%var_6224: Tensor[(10, 2, 5), uint32]) -> Tensor[(10, 2, 5), bool] {
  @func_6223(%var_6224) /* ty=Tensor[(10, 2, 5), bool] */
}

def @func_13637() -> (Tensor[(5, 10, 13), float32], Tensor[(15, 11, 3), float32], Tensor[(495), float32]) {
  @func_13635() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(15, 11, 3), float32], Tensor[(495), float32]) */
}

def @func_3525(%var_3508: float32, %var_3509: Tensor[(14, 7, 11), float32]) -> (Tensor[(14, 7, 11), float32], Tensor[(1, 1, 3), bool]) {
  %364 = cast(%var_3508, dtype="float32") /* ty=float32 */;
  %365 = cast(%var_3509, dtype="float32") /* ty=Tensor[(14, 7, 11), float32] */;
  %366 = cast(%var_3508, dtype="bool") /* ty=bool */;
  %367 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 1, 3), float32] */, dtype="bool") /* ty=Tensor[(1, 1, 3), bool] */;
  %368 = power(%364, %365) /* ty=Tensor[(14, 7, 11), float32] */;
  %369 = equal(%366, %367) /* ty=Tensor[(1, 1, 3), bool] */;
  (%368, %369)
}

def @func_12168() -> (Tensor[(5, 10, 13), float32],) {
  %370 = @func_8612() /* ty=Tensor[(5, 10, 13), float32] */;
  (%370,)
}

def @func_5029(%var_5006: Tensor[(9, 5, 15), float32], %var_5026: float64) -> (Tensor[(9, 5, 15), float32], Tensor[(16, 9, 4), uint16], Tensor[(12, 48), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) {
  %371 = cast(%var_5006, dtype="float32") /* ty=Tensor[(9, 5, 15), float32] */;
  %372 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 48), uint16] */, dtype="uint16") /* ty=Tensor[(12, 48), uint16] */;
  %373 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 48), uint16] */, dtype="uint16") /* ty=Tensor[(12, 48), uint16] */;
  %374 = cast(meta[relay.Constant][30] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %375 = reshape(%372, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %376 = reshape(%373, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %377 = reshape(%374, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %378 = @func_2252(%375, %376, %377) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %379 = cast(%var_5026, dtype="float64") /* ty=float64 */;
  %380 = cast(meta[relay.Constant][31] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %381 = reshape(%379, newshape=[]) /* ty=float64 */;
  %382 = reshape(%380, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), float64] */;
  %383 = @func_4182(%381, %382) /* ty=(Tensor[(9, 5, 1), bool],) */;
  %384 = log10(%371) /* ty=Tensor[(9, 5, 15), float32] */;
  %385 = %378.0;
  %386 = %383.0;
  (%384, %385, meta[relay.Constant][29] /* ty=Tensor[(12, 48), uint16] */, meta[relay.Constant][30] /* ty=Tensor[(1056), float64] */, %386, %var_5026, meta[relay.Constant][31] /* ty=Tensor[(45), float64] */)
}

def @func_2755(%var_2752: Tensor[(1, 1056), float64], %var_2753: Tensor[(8, 1056), float64], %var_2754: Tensor[(132), uint16]) -> (Tensor[(4, 1, 12), bool], Tensor[(11, 12, 8), float64], Tensor[(8, 1056), int8], Tensor[(1, 135), float32], Tensor[(132), uint16], Tensor[(10, 6, 11), float32], Tensor[(660, 1), float32], Tensor[(3, 1056), uint64]) {
  %415 = fn (%var_2692: Tensor[(1, 1056), float64], %var_2694: Tensor[(8, 1056), float64], %var_2713: Tensor[(132), uint16]) -> (Tensor[(4, 1, 12), bool], Tensor[(11, 12, 8), float64], Tensor[(8, 1056), int8], Tensor[(1, 135), float32], Tensor[(132), uint16], Tensor[(10, 6, 11), float32], Tensor[(660, 1), float32], Tensor[(3, 1056), uint64]) {
    %387 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %388 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 1, 12), bool] */, dtype="bool") /* ty=Tensor[(4, 1, 12), bool] */;
    %389 = cast(%var_2692, dtype="float64") /* ty=Tensor[(1, 1056), float64] */;
    %390 = reshape(%389, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
    %391 = cast(%var_2692, dtype="int8") /* ty=Tensor[(1, 1056), int8] */;
    %392 = cast(%var_2694, dtype="int8") /* ty=Tensor[(8, 1056), int8] */;
    %393 = cast(%var_2713, dtype="uint16") /* ty=Tensor[(132), uint16] */;
    %394 = cast(%var_2713, dtype="uint16") /* ty=Tensor[(132), uint16] */;
    %395 = reshape(%393, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), uint16] */;
    %396 = reshape(%394, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), uint16] */;
    %397 = @func_2557(%395, %396) /* ty=(Tensor[(6, 11, 2), uint16], Tensor[(9, 15, 1), float32], Tensor[(1, 135), float32]) */;
    %398 = cast(meta[relay.Constant][33] /* ty=Tensor[(660, 1), float32] */, dtype="float32") /* ty=Tensor[(660, 1), float32] */;
    %399 = reshape(%398, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), float32] */;
    %400 = cast(%var_2692, dtype="float64") /* ty=Tensor[(1, 1056), float64] */;
    %401 = atan(%400) /* ty=Tensor[(1, 1056), float64] */;
    %402 = cast(%var_2692, dtype="int64") /* ty=Tensor[(1, 1056), int64] */;
    %403 = shape_of(%401, dtype="int32") /* ty=Tensor[(2), int32] */;
    %404 = cast(%401, dtype="int64") /* ty=Tensor[(1, 1056), int64] */;
    %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %406 = logical_xor(%404, %405) /* ty=Tensor[(?, 1056), int64] */;
    %407 = cast(%406, dtype="uint64") /* ty=Tensor[(?, 1056), uint64] */;
    %408 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 1056), int64] */, dtype="uint64") /* ty=Tensor[(3, 1056), uint64] */;
    %409 = logical_or(%387, %388) /* ty=Tensor[(4, 1, 12), bool] */;
    %410 = @func_1489(%390) /* ty=Tensor[(11, 12, 8), float64] */;
    %411 = right_shift(%391, %392) /* ty=Tensor[(8, 1056), int8] */;
    %412 = %397.2;
    %413 = @func_673(%399) /* ty=Tensor[(10, 6, 11), float32] */;
    %414 = add(%407, %408) /* ty=Tensor[(3, 1056), uint64] */;
    (%409, %410, %411, %412, %var_2713, %413, meta[relay.Constant][33] /* ty=Tensor[(660, 1), float32] */, %414)
  };
  %415(%var_2752, %var_2753, %var_2754) /* ty=(Tensor[(4, 1, 12), bool], Tensor[(11, 12, 8), float64], Tensor[(8, 1056), int8], Tensor[(1, 135), float32], Tensor[(132), uint16], Tensor[(10, 6, 11), float32], Tensor[(660, 1), float32], Tensor[(3, 1056), uint64]) */
}

def @func_10276(%var_10272: Tensor[(288), float64], %var_10273: Tensor[(576), uint16], %var_10274: Tensor[(4, 484), int32], %var_10275: Tensor[(16, 9, 4), uint16]) -> (Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(288), float64], Tensor[(5, 10, 13), float64], Tensor[(5, 10, 13), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(4, 484), int32], Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(132), uint16], Tensor[(120), int32], Tensor[(1, 140), float32], Tensor[(1200), bool], Tensor[(16, 9, 4), int16], Tensor[(120), int32], Tensor[(8, 192), float64], Tensor[(1, 45), float64], Tensor[(1056), float64]) {
  @func_10270(%var_10272, %var_10273, %var_10274, %var_10275) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(288), float64], Tensor[(5, 10, 13), float64], Tensor[(5, 10, 13), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(4, 484), int32], Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(132), uint16], Tensor[(120), int32], Tensor[(1, 140), float32], Tensor[(1200), bool], Tensor[(16, 9, 4), int16], Tensor[(120), int32], Tensor[(8, 192), float64], Tensor[(1, 45), float64], Tensor[(1056), float64]) */
}

def @func_9664() -> Tensor[(5, 10, 13), float64] {
  %417 = fn () -> Tensor[(5, 10, 13), float64] {
    %416 = @func_9375() /* ty=(Tensor[(5, 10, 13), float64],) */;
    %416.0
  };
  %417() /* ty=Tensor[(5, 10, 13), float64] */
}

def @func_11305() -> Tensor[(5, 10, 13), float32] {
  %418 = @func_8311() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %418.0
}

def @func_10496() -> Tensor[(8, 10, 2), float64] {
  %420 = fn () -> Tensor[(8, 10, 2), float64] {
    %419 = @func_10298() /* ty=(Tensor[(8, 10, 2), float64],) */;
    %419.0
  };
  %420() /* ty=Tensor[(8, 10, 2), float64] */
}

def @func_11600() -> Tensor[(5, 10, 13), float64] {
  %422 = fn () -> Tensor[(5, 10, 13), float64] {
    %421 = @func_9375() /* ty=(Tensor[(5, 10, 13), float64],) */;
    %421.0
  };
  %422() /* ty=Tensor[(5, 10, 13), float64] */
}

def @func_8614() -> Tensor[(5, 10, 13), float32] {
  @func_8612() /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_11008(%var_11003: Tensor[(56), float32], %var_11004: Tensor[(675, 2), float32], %var_11005: Tensor[(132), uint16], %var_11006: Tensor[(288), float64], %var_11007: Tensor[(45), float64]) -> (Tensor[(468), int16], Tensor[(7, 2, 4), float32], Tensor[(56), float32], Tensor[(11, 12, 8), float64], Tensor[(5, 10, 13), float32], Tensor[(675, 2), float32], Tensor[(132), uint16], Tensor[(675), float32], Tensor[(132), uint16], Tensor[(10, 6, 11), float32], Tensor[(84), float32], Tensor[(288), float64], float64, Tensor[(45), float64]) {
  @func_11001(%var_11003, %var_11004, %var_11005, %var_11006, %var_11007) /* ty=(Tensor[(468), int16], Tensor[(7, 2, 4), float32], Tensor[(56), float32], Tensor[(11, 12, 8), float64], Tensor[(5, 10, 13), float32], Tensor[(675, 2), float32], Tensor[(132), uint16], Tensor[(675), float32], Tensor[(132), uint16], Tensor[(10, 6, 11), float32], Tensor[(84), float32], Tensor[(288), float64], float64, Tensor[(45), float64]) */
}

def @func_12819() -> (Tensor[(5, 3, 8), float32], Tensor[(10, 6, 11), float32], Tensor[(660), float32]) {
  %423 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 3, 8), float32] */, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %424 = cast(meta[relay.Constant][36] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %425 = reshape(%424, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), float32] */;
  %426 = sinh(%423) /* ty=Tensor[(5, 3, 8), float32] */;
  %427 = @func_673(%425) /* ty=Tensor[(10, 6, 11), float32] */;
  (%426, %427, meta[relay.Constant][36] /* ty=Tensor[(660), float32] */)
}

def @func_12305(%var_12304: Tensor[(2145), float32]) -> (Tensor[(15, 2, 5), float32], Tensor[(11, 15, 13), float32], Tensor[(2145), float32], Tensor[(11, 15, 13), float32]) {
  %438 = fn (%var_12290: Tensor[(2145), float32]) -> (Tensor[(15, 2, 5), float32], Tensor[(11, 15, 13), float32], Tensor[(2145), float32], Tensor[(11, 15, 13), float32]) {
    %428 = @func_10605() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(15, 2, 5), float32], Tensor[(150), float32], Tensor[(468), int16]) */;
    %429 = cast(%var_12290, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %430 = reshape(%429, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
    %431 = @func_11081(%430) /* ty=(Tensor[(11, 15, 13), float32],) */;
    %432 = cast(%var_12290, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %433 = reshape(%432, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
    %434 = @func_11081(%433) /* ty=(Tensor[(11, 15, 13), float32],) */;
    %435 = %428.1;
    %436 = %431.0;
    %437 = %434.0;
    (%435, %436, %var_12290, %437)
  };
  %438(%var_12304) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(11, 15, 13), float32], Tensor[(2145), float32], Tensor[(11, 15, 13), float32]) */
}

def @func_10318(%var_10309: Tensor[(1, 6, 7), uint16]) -> (Tensor[(10, 6, 7), uint16],) {
  %439 = cast(%var_10309, dtype="uint16") /* ty=Tensor[(1, 6, 7), uint16] */;
  %440 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 6, 7), uint16] */, dtype="uint16") /* ty=Tensor[(10, 6, 7), uint16] */;
  %441 = left_shift(%439, %440) /* ty=Tensor[(10, 6, 7), uint16] */;
  (%441,)
}

def @func_13744(%var_13742: Tensor[(135), float32]) -> (Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(9, 15, ?), float32]) {
  @func_13741(%var_13742) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(9, 15, ?), float32]) */
}

def @func_14147() -> (Tensor[(8, 10, 2), float32], Tensor[(5, 10, 13), float64], Tensor[(5, 10, 13), float64]) {
  %447 = fn () -> (Tensor[(8, 10, 2), float32], Tensor[(5, 10, 13), float64], Tensor[(5, 10, 13), float64]) {
    %442 = @func_10495() /* ty=Tensor[(8, 10, 2), float64] */;
    %443 = cast(%442, dtype="float32") /* ty=Tensor[(8, 10, 2), float32] */;
    %444 = asin(%443) /* ty=Tensor[(8, 10, 2), float32] */;
    %445 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
    %446 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
    (%444, %445, %446)
  };
  %447() /* ty=(Tensor[(8, 10, 2), float32], Tensor[(5, 10, 13), float64], Tensor[(5, 10, 13), float64]) */
}

def @func_13124(%var_13122: Tensor[(1350), int64]) -> (Tensor[(468), int16], Tensor[(16, 8), int64], Tensor[(99), float32], Tensor[(1078, 1350), bool]) {
  @func_13121(%var_13122) /* ty=(Tensor[(468), int16], Tensor[(16, 8), int64], Tensor[(99), float32], Tensor[(1078, 1350), bool]) */
}

def @func_9067() -> Tensor[(5, 10, 13), float64] {
  %450 = fn () -> Tensor[(5, 10, 13), float64] {
    %448 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
    %449 = cast(%448, dtype="float64") /* ty=Tensor[(5, 10, 13), float64] */;
    acosh(%449) /* ty=Tensor[(5, 10, 13), float64] */
  };
  %450() /* ty=Tensor[(5, 10, 13), float64] */
}

def @func_14218(%var_14215: Tensor[(100), uint32], %var_14216: Tensor[(1, 84), float32], %var_14217: Tensor[(8, 36), float64]) -> (Tensor[(5, 10, 13), float32], Tensor[(100), uint32], Tensor[(10, 2, 5), uint64], Tensor[(7, 2, 6), float32], Tensor[(1, 84), float32], Tensor[(1350), int64], Tensor[(8, 36), float64]) {
  @func_14213(%var_14215, %var_14216, %var_14217) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(100), uint32], Tensor[(10, 2, 5), uint64], Tensor[(7, 2, 6), float32], Tensor[(1, 84), float32], Tensor[(1350), int64], Tensor[(8, 36), float64]) */
}

def @func_5505(%var_5501: Tensor[(1056), float64], %var_5502: Tensor[(3, 44), uint16], %var_5503: int64, %var_5504: Tensor[(576), uint16]) -> (Tensor[(15, 13, 6), bool], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(8448), uint64], Tensor[(8, 1, 16), bool], int64, Tensor[(128), int64], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(1056), float64], Tensor[(576), uint16]) {
  %487 = fn (%var_5473: Tensor[(1056), float64], %var_5475: Tensor[(3, 44), uint16], %var_5484: int64, %var_5498: Tensor[(576), uint16]) -> (Tensor[(15, 13, 6), bool], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(8448), uint64], Tensor[(8, 1, 16), bool], int64, Tensor[(128), int64], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(1056), float64], Tensor[(576), uint16]) {
    %451 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 13, 6), uint32] */, dtype="uint32") /* ty=Tensor[(1, 13, 6), uint32] */;
    %452 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 13, 6), uint32] */, dtype="uint32") /* ty=Tensor[(15, 13, 6), uint32] */;
    %453 = add(%451, %452) /* ty=Tensor[(15, 13, 6), uint32] */;
    %454 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 13, 6), uint32] */, dtype="bool") /* ty=Tensor[(1, 13, 6), bool] */;
    %455 = cast(%453, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
    %456 = cast(%var_5473, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %457 = cast(meta[relay.Constant][40] /* ty=Tensor[(8448), float64] */, dtype="float64") /* ty=Tensor[(8448), float64] */;
    %458 = cast(%var_5475, dtype="uint16") /* ty=Tensor[(3, 44), uint16] */;
    %459 = reshape(%456, newshape=[1, 1056]) /* ty=Tensor[(1, 1056), float64] */;
    %460 = reshape(%457, newshape=[8, 1056]) /* ty=Tensor[(8, 1056), float64] */;
    %461 = reshape(%458, newshape=[132]) /* ty=Tensor[(132), uint16] */;
    %462 = @func_2751(%459, %460, %461) /* ty=(Tensor[(4, 1, 12), bool], Tensor[(11, 12, 8), float64], Tensor[(8, 1056), int8], Tensor[(1, 135), float32], Tensor[(132), uint16], Tensor[(10, 6, 11), float32], Tensor[(660, 1), float32], Tensor[(3, 1056), uint64]) */;
    %463 = cast(meta[relay.Constant][41] /* ty=Tensor[(8448), float64] */, dtype="uint64") /* ty=Tensor[(8448), uint64] */;
    %464 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(8448), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %465 = cast(meta[relay.Constant][40] /* ty=Tensor[(8448), float64] */, dtype="uint64") /* ty=Tensor[(8448), uint64] */;
    %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %467 = cast(%var_5484, dtype="int64") /* ty=int64 */;
    %468 = cast(meta[relay.Constant][42] /* ty=Tensor[(128), int64] */, dtype="int64") /* ty=Tensor[(128), int64] */;
    %469 = reshape(%467, newshape=[]) /* ty=int64 */;
    %470 = reshape(%468, newshape=[8, 1, 16]) /* ty=Tensor[(8, 1, 16), int64] */;
    %471 = @func_4035(%469, %470) /* ty=(Tensor[(8, 1, 16), bool], Tensor[(9, 15, 1), float32], Tensor[(135), float32]) */;
    %472 = cast(meta[relay.Constant][43] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %473 = reshape(%472, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), float32] */;
    %474 = cast(%var_5498, dtype="uint16") /* ty=Tensor[(576), uint16] */;
    %475 = cast(%var_5498, dtype="uint16") /* ty=Tensor[(576), uint16] */;
    %476 = %462.1;
    %477 = cast(%476, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
    %478 = reshape(%474, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
    %479 = reshape(%475, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
    %480 = reshape(%477, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
    %481 = @func_2252(%478, %479, %480) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
    %482 = logical_and(%454, %455) /* ty=Tensor[(15, 13, 6), bool] */;
    %483 = subtract(%465, %466) /* ty=Tensor[(8448), uint64] */;
    %484 = %471.0;
    %485 = @func_673(%473) /* ty=Tensor[(10, 6, 11), float32] */;
    %486 = %481.2;
    (%482, %476, %var_5473, %var_5475, %483, %484, %var_5484, meta[relay.Constant][42] /* ty=Tensor[(128), int64] */, %485, meta[relay.Constant][43] /* ty=Tensor[(660), float32] */, %486, %var_5498)
  };
  %487(%var_5501, %var_5502, %var_5503, %var_5504) /* ty=(Tensor[(15, 13, 6), bool], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(8448), uint64], Tensor[(8, 1, 16), bool], int64, Tensor[(128), int64], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(1056), float64], Tensor[(576), uint16]) */
}

def @func_13229(%var_13167: int64, %var_13168: Tensor[(576), uint16], %var_13169: Tensor[(84), float32], %var_13171: Tensor[(288), float64]) -> (Tensor[(8, 10, 2), float64], Tensor[(288), float64], int64, Tensor[(576), uint16], Tensor[(84), float32], Tensor[(1350), int64], Tensor[(288), float64]) {
  %488 = cast(%var_13167, dtype="int64") /* ty=int64 */;
  %489 = cast(%var_13168, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %490 = cast(%var_13169, dtype="float32") /* ty=Tensor[(84), float32] */;
  %491 = cast(meta[relay.Constant][44] /* ty=Tensor[(1350), int64] */, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %492 = cast(%var_13171, dtype="float64") /* ty=Tensor[(288), float64] */;
  %493 = reshape(%488, newshape=[]) /* ty=int64 */;
  %494 = reshape(%489, newshape=[6, 96]) /* ty=Tensor[(6, 96), uint16] */;
  %495 = reshape(%490, newshape=[1, 84]) /* ty=Tensor[(1, 84), float32] */;
  %496 = reshape(%491, newshape=[1350]) /* ty=Tensor[(1350), int64] */;
  %497 = reshape(%492, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %498 = @func_9780(%493, %494, %495, %496, %497) /* ty=(Tensor[(135), bool], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(135), bool], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(6, 96), float64], Tensor[(3, 450), int64], Tensor[(1, 84), float32], Tensor[(1350), int64], Tensor[(288), float64], Tensor[(6, 96), bool]) */;
  %499 = @func_12545() /* ty=Tensor[(8, 10, 2), float64] */;
  %500 = %498.11;
  (%499, %500, %var_13167, %var_13168, %var_13169, meta[relay.Constant][44] /* ty=Tensor[(1350), int64] */, %var_13171)
}

def @func_11577() -> (Tensor[(5, 10, 13), float64],) {
  %501 = @func_10688() /* ty=Tensor[(5, 10, 13), float64] */;
  (%501,)
}

def @func_1489(%var_1478: Tensor[(11, 12, 8), float64]) -> Tensor[(11, 12, 8), float64] {
  %502 = cast(%var_1478, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  rsqrt(%502) /* ty=Tensor[(11, 12, 8), float64] */
}

def @func_2572(%var_2562: Tensor[(2, 10, 7), float32]) -> Tensor[(2, 10, 7), float32] {
  %503 = cast(%var_2562, dtype="float32") /* ty=Tensor[(2, 10, 7), float32] */;
  exp(%503) /* ty=Tensor[(2, 10, 7), float32] */
}

def @func_9563() -> (Tensor[(5, 10, 13), float32], Tensor[(468), int16]) {
  %507 = fn () -> (Tensor[(5, 10, 13), float32], Tensor[(468), int16]) {
    %504 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
    %505 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
    %506 = %504.2;
    (%505, %506)
  };
  %507() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(468), int16]) */
}

def @func_3087(%var_3085: Tensor[(7, 5, 10), uint64], %var_3086: Tensor[(7, 5, 10), uint64]) -> (Tensor[(7, 5, 10), bool], Tensor[(7, 5, 10), float64]) {
  %515 = fn (%var_3055: Tensor[(7, 5, 10), uint64], %var_3056: Tensor[(7, 5, 10), uint64]) -> (Tensor[(7, 5, 10), bool], Tensor[(7, 5, 10), float64]) {
    %508 = cast(%var_3056, dtype="bool") /* ty=Tensor[(7, 5, 10), bool] */;
    %509 = shape_of(%var_3055, dtype="int32") /* ty=Tensor[(3), int32] */;
    %510 = cast(%var_3055, dtype="bool") /* ty=Tensor[(7, 5, 10), bool] */;
    %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %512 = cast(%var_3056, dtype="float64") /* ty=Tensor[(7, 5, 10), float64] */;
    %513 = equal(%510, %511) /* ty=Tensor[(7, 5, 10), bool] */;
    %514 = log(%512) /* ty=Tensor[(7, 5, 10), float64] */;
    (%513, %514)
  };
  %515(%var_3085, %var_3086) /* ty=(Tensor[(7, 5, 10), bool], Tensor[(7, 5, 10), float64]) */
}

def @func_9902(%var_9898: Tensor[(12, 4, 4), float64], %var_9899: Tensor[(1056), float64], %var_9900: Tensor[(132), uint16], %var_9901: Tensor[(576), uint16]) -> (Tensor[(12, 4, 4), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(132), uint16], int64, Tensor[(576), uint16]) {
  @func_9896(%var_9898, %var_9899, %var_9900, %var_9901) /* ty=(Tensor[(12, 4, 4), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(132), uint16], int64, Tensor[(576), uint16]) */
}

def @func_12423(%var_12364: float64, %var_12398: Tensor[(468, 1), int16]) -> (Tensor[(5, 10, 13), float32], Tensor[(288), float64], Tensor[(288), float64], Tensor[(576), uint16], Tensor[(1936), int32], Tensor[(5, 10, 13), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(135), float64], Tensor[(468, 1), int16], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32]) {
  %516 = cast(meta[relay.Constant][45] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %517 = cast(meta[relay.Constant][46] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %518 = cast(meta[relay.Constant][47] /* ty=Tensor[(1936), int32] */, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %519 = cast(meta[relay.Constant][46] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %520 = reshape(%516, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %521 = reshape(%517, newshape=[576]) /* ty=Tensor[(576), uint16] */;
  %522 = reshape(%518, newshape=[4, 484]) /* ty=Tensor[(4, 484), int32] */;
  %523 = reshape(%519, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %524 = @func_10270(%520, %521, %522, %523) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(288), float64], Tensor[(5, 10, 13), float64], Tensor[(5, 10, 13), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(4, 484), int32], Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(132), uint16], Tensor[(120), int32], Tensor[(1, 140), float32], Tensor[(1200), bool], Tensor[(16, 9, 4), int16], Tensor[(120), int32], Tensor[(8, 192), float64], Tensor[(1, 45), float64], Tensor[(1056), float64]) */;
  %525 = cast(%var_12364, dtype="float64") /* ty=float64 */;
  %526 = cast(meta[relay.Constant][48] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %527 = reshape(%525, newshape=[]) /* ty=float64 */;
  %528 = reshape(%526, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), float64] */;
  %529 = @func_4182(%527, %528) /* ty=(Tensor[(9, 5, 1), bool],) */;
  %530 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %531 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %532 = cast(%var_12398, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %533 = reshape(%532, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %534 = @func_3226(%533) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) */;
  %535 = @func_8371() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %536 = @func_12131() /* ty=Tensor[(5, 10, 13), float32] */;
  %537 = %524.2;
  %538 = @func_10688() /* ty=Tensor[(5, 10, 13), float64] */;
  %539 = %529.0;
  %540 = %530.0;
  %541 = %531.0;
  %542 = %534.2;
  %543 = %535.0;
  %544 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  (%536, %537, meta[relay.Constant][45] /* ty=Tensor[(288), float64] */, meta[relay.Constant][46] /* ty=Tensor[(576), uint16] */, meta[relay.Constant][47] /* ty=Tensor[(1936), int32] */, %538, %539, %var_12364, meta[relay.Constant][48] /* ty=Tensor[(45), float64] */, %540, %541, %542, %var_12398, %543, %544)
}

def @func_8729(%var_8726: Tensor[(576), uint16], %var_8727: Tensor[(1, 1056), float64], %var_8728: Tensor[(1936), int32]) -> (Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(576), uint16], Tensor[(1, 1056), float64], Tensor[(150, 1), float32], Tensor[(468, 1), int16], Tensor[(176), int32], Tensor[(1936), int32], Tensor[(150, 1), float32]) {
  @func_8724(%var_8726, %var_8727, %var_8728) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(576), uint16], Tensor[(1, 1056), float64], Tensor[(150, 1), float32], Tensor[(468, 1), int16], Tensor[(176), int32], Tensor[(1936), int32], Tensor[(150, 1), float32]) */
}

def @func_12645() -> (Tensor[(135), bool], Tensor[(5, 10, 13), float64]) {
  @func_12643() /* ty=(Tensor[(135), bool], Tensor[(5, 10, 13), float64]) */
}

def @func_9875(%var_9873: Tensor[(468), int16], %var_9874: Tensor[(176), int32]) -> (Tensor[(5, 10, 13), float64], Tensor[(468), int16], Tensor[(468), int16], Tensor[(176), int32], Tensor[(1936), int32]) {
  @func_9871(%var_9873, %var_9874) /* ty=(Tensor[(5, 10, 13), float64], Tensor[(468), int16], Tensor[(468), int16], Tensor[(176), int32], Tensor[(1936), int32]) */
}

def @func_12495(%var_12493: Tensor[(675), float32]) -> (Tensor[(8, 10, 2), float64], Tensor[(132), uint16], Tensor[(675), float32], Tensor[(132), uint16], Tensor[(5, 10, 13), float32]) {
  @func_12492(%var_12493) /* ty=(Tensor[(8, 10, 2), float64], Tensor[(132), uint16], Tensor[(675), float32], Tensor[(132), uint16], Tensor[(5, 10, 13), float32]) */
}

def @func_3529(%var_3527: float32, %var_3528: Tensor[(14, 7, 11), float32]) -> (Tensor[(14, 7, 11), float32], Tensor[(1, 1, 3), bool]) {
  @func_3525(%var_3527, %var_3528) /* ty=(Tensor[(14, 7, 11), float32], Tensor[(1, 1, 3), bool]) */
}

def @func_2575(%var_2573: Tensor[(2, 10, 7), float32]) -> Tensor[(2, 10, 7), float32] {
  @func_2572(%var_2573) /* ty=Tensor[(2, 10, 7), float32] */
}

def @func_9980(%var_9979: Tensor[(1, 468), int16]) -> (Tensor[(5, 10, 13), float32], Tensor[(1936), int32], Tensor[(1, 468), int16], Tensor[(176), int32]) {
  %552 = fn (%var_9969: Tensor[(1, 468), int16]) -> (Tensor[(5, 10, 13), float32], Tensor[(1936), int32], Tensor[(1, 468), int16], Tensor[(176), int32]) {
    %545 = cast(%var_9969, dtype="int16") /* ty=Tensor[(1, 468), int16] */;
    %546 = cast(meta[relay.Constant][49] /* ty=Tensor[(176), int32] */, dtype="int32") /* ty=Tensor[(176), int32] */;
    %547 = reshape(%545, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %548 = reshape(%546, newshape=[176]) /* ty=Tensor[(176), int32] */;
    %549 = @func_9871(%547, %548) /* ty=(Tensor[(5, 10, 13), float64], Tensor[(468), int16], Tensor[(468), int16], Tensor[(176), int32], Tensor[(1936), int32]) */;
    %550 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
    %551 = %549.4;
    (%550, %551, %var_9969, meta[relay.Constant][49] /* ty=Tensor[(176), int32] */)
  };
  %552(%var_9979) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(1936), int32], Tensor[(1, 468), int16], Tensor[(176), int32]) */
}

def @func_7531(%var_7529: Tensor[(1, 16, 11), int32], %var_7530: Tensor[(11, 16, 11), int32]) -> (Tensor[(11, 16, 11), float64],) {
  @func_7527(%var_7529, %var_7530) /* ty=(Tensor[(11, 16, 11), float64],) */
}

def @func_6035(%var_6032: Tensor[(7, 2, 6), float32], %var_6033: Tensor[(7, 2, 6), float32], %var_6034: Tensor[(1350), int64]) -> (Tensor[(7, 2, 6), bool], Tensor[(7, 2, 6), float32], Tensor[(15, 10, 9), int64], Tensor[(1350), int64]) {
  @func_6030(%var_6032, %var_6033, %var_6034) /* ty=(Tensor[(7, 2, 6), bool], Tensor[(7, 2, 6), float32], Tensor[(15, 10, 9), int64], Tensor[(1350), int64]) */
}

def @func_10300() -> (Tensor[(8, 10, 2), float64],) {
  @func_10298() /* ty=(Tensor[(8, 10, 2), float64],) */
}

def @func_11001(%var_10902: Tensor[(56), float32], %var_10935: Tensor[(675, 2), float32], %var_10987: Tensor[(132), uint16], %var_10995: Tensor[(288), float64], %var_10997: Tensor[(45), float64]) -> (Tensor[(468), int16], Tensor[(7, 2, 4), float32], Tensor[(56), float32], Tensor[(11, 12, 8), float64], Tensor[(5, 10, 13), float32], Tensor[(675, 2), float32], Tensor[(132), uint16], Tensor[(675), float32], Tensor[(132), uint16], Tensor[(10, 6, 11), float32], Tensor[(84), float32], Tensor[(288), float64], float64, Tensor[(45), float64]) {
  %553 = @func_8415() /* ty=(Tensor[(468), int16],) */;
  %554 = cast(%var_10902, dtype="float32") /* ty=Tensor[(56), float32] */;
  %555 = cast(%var_10902, dtype="float32") /* ty=Tensor[(56), float32] */;
  %556 = reshape(%554, newshape=[7, 2, 4]) /* ty=Tensor[(7, 2, 4), float32] */;
  %557 = reshape(%555, newshape=[7, 2, 4]) /* ty=Tensor[(7, 2, 4), float32] */;
  %558 = @func_1175(%556, %557) /* ty=(Tensor[(7, 2, 4), float32],) */;
  %559 = cast(%var_10935, dtype="float32") /* ty=Tensor[(675, 2), float32] */;
  %560 = reshape(%559, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), float32] */;
  %561 = @func_9637(%560) /* ty=(Tensor[(15, 15, 6), float32], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %562 = @func_10640() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) */;
  %563 = cast(meta[relay.Constant][50] /* ty=Tensor[(675, 2), float32] */, dtype="float32") /* ty=Tensor[(675, 2), float32] */;
  %564 = shape_of(%var_10935, dtype="int32") /* ty=Tensor[(2), int32] */;
  %565 = cast(%var_10935, dtype="float32") /* ty=Tensor[(675, 2), float32] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %567 = cast(meta[relay.Constant][51] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %568 = cast(%var_10987, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %569 = reshape(%567, newshape=[675, 1]) /* ty=Tensor[(675, 1), float32] */;
  %570 = reshape(%568, newshape=[132]) /* ty=Tensor[(132), uint16] */;
  %571 = @func_9956(%569, %570) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(5, 135), float32], Tensor[(539, 2), float32], Tensor[(675, 1), float64], Tensor[(132), uint16], Tensor[(192), float64], Tensor[(1056), float64], Tensor[(132), uint16], Tensor[(576), uint16]) */;
  %572 = cast(meta[relay.Constant][52] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %573 = cast(%var_10995, dtype="float64") /* ty=Tensor[(288), float64] */;
  %574 = cast(0.479729f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %575 = cast(%var_10997, dtype="float64") /* ty=Tensor[(45), float64] */;
  %576 = reshape(%572, newshape=[84, 1]) /* ty=Tensor[(84, 1), float32] */;
  %577 = reshape(%573, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %578 = reshape(%574, newshape=[]) /* ty=float64 */;
  %579 = reshape(%575, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %580 = @func_10156(%576, %577, %578, %579) /* ty=(Tensor[(135), bool], Tensor[(10, 6, 11), float32], Tensor[(660, 1), float32], Tensor[(5, 10, 13), float32], Tensor[(27, 50), int64], Tensor[(84, 288), bool], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */;
  %581 = %553.0;
  %582 = %558.0;
  %583 = %561.1;
  %584 = %562.0;
  %585 = floor_mod(%565, %566) /* ty=Tensor[(675, 2), float32] */;
  %586 = %571.7;
  %587 = %580.1;
  (%581, %582, %var_10902, %583, %584, %585, %586, meta[relay.Constant][51] /* ty=Tensor[(675), float32] */, %var_10987, %587, meta[relay.Constant][52] /* ty=Tensor[(84), float32] */, %var_10995, 0.479729f64 /* ty=float64 */, %var_10997)
}

def @func_13503(%var_13502: Tensor[(10, 7, 3), float64]) -> (Tensor[(10, 7, 3), float64],) {
  %590 = fn (%var_13498: Tensor[(10, 7, 3), float64]) -> (Tensor[(10, 7, 3), float64],) {
    %588 = cast(%var_13498, dtype="float64") /* ty=Tensor[(10, 7, 3), float64] */;
    %589 = sqrt(%588) /* ty=Tensor[(10, 7, 3), float64] */;
    (%589,)
  };
  %590(%var_13502) /* ty=(Tensor[(10, 7, 3), float64],) */
}

def @func_10156(%var_10111: Tensor[(84, 1), float32], %var_10113: Tensor[(288), float64], %var_10143: float64, %var_10144: Tensor[(45), float64]) -> (Tensor[(135), bool], Tensor[(10, 6, 11), float32], Tensor[(660, 1), float32], Tensor[(5, 10, 13), float32], Tensor[(27, 50), int64], Tensor[(84, 288), bool], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) {
  %591 = @func_9016() /* ty=(Tensor[(135), bool],) */;
  %592 = cast(meta[relay.Constant][53] /* ty=Tensor[(660, 1), float32] */, dtype="float32") /* ty=Tensor[(660, 1), float32] */;
  %593 = reshape(%592, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), float32] */;
  %594 = cast(%var_10111, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %595 = cast(meta[relay.Constant][54] /* ty=Tensor[(27, 50), int64] */, dtype="int64") /* ty=Tensor[(27, 50), int64] */;
  %596 = cast(%var_10113, dtype="float64") /* ty=Tensor[(288), float64] */;
  %597 = reshape(%594, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %598 = reshape(%595, newshape=[3, 450]) /* ty=Tensor[(3, 450), int64] */;
  %599 = reshape(%596, newshape=[72, 4]) /* ty=Tensor[(72, 4), float64] */;
  %600 = @func_9107(%597, %598, %599) /* ty=(Tensor[(5, 10, 13), bool], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(3, 450), int64], Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(72, 4), float64]) */;
  %601 = cast(%var_10113, dtype="bool") /* ty=Tensor[(288), bool] */;
  %602 = cast(%var_10111, dtype="bool") /* ty=Tensor[(84, 1), bool] */;
  %603 = cast(%var_10143, dtype="float64") /* ty=float64 */;
  %604 = cast(%var_10144, dtype="float64") /* ty=Tensor[(45), float64] */;
  %605 = reshape(%603, newshape=[]) /* ty=float64 */;
  %606 = reshape(%604, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), float64] */;
  %607 = @func_4182(%605, %606) /* ty=(Tensor[(9, 5, 1), bool],) */;
  %608 = %591.0;
  %609 = @func_673(%593) /* ty=Tensor[(10, 6, 11), float32] */;
  %610 = %600.4;
  %611 = equal(%601, %602) /* ty=Tensor[(84, 288), bool] */;
  %612 = %607.0;
  (%608, %609, meta[relay.Constant][53] /* ty=Tensor[(660, 1), float32] */, %610, meta[relay.Constant][54] /* ty=Tensor[(27, 50), int64] */, %611, %612, %var_10143, %var_10144)
}

def @func_4469(%var_4465: Tensor[(12, 8, 16), float64], %var_4466: Tensor[(5, 28), float32], %var_4467: Tensor[(1200), bool], %var_4468: Tensor[(45), float64]) -> (Tensor[(12, 8, 16), float64], Tensor[(10, 12, 10), int64], Tensor[(120), int32], Tensor[(5, 28), float32], Tensor[(1200), bool], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) {
  %637 = fn (%var_4403: Tensor[(12, 8, 16), float64], %var_4410: Tensor[(5, 28), float32], %var_4411: Tensor[(1200), bool], %var_4451: Tensor[(45), float64]) -> (Tensor[(12, 8, 16), float64], Tensor[(10, 12, 10), int64], Tensor[(120), int32], Tensor[(5, 28), float32], Tensor[(1200), bool], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) {
    %613 = cast(%var_4403, dtype="float64") /* ty=Tensor[(12, 8, 16), float64] */;
    %614 = cast(meta[relay.Constant][55] /* ty=Tensor[(120), int32] */, dtype="int32") /* ty=Tensor[(120), int32] */;
    %615 = cast(%var_4410, dtype="float32") /* ty=Tensor[(5, 28), float32] */;
    %616 = cast(%var_4411, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %617 = reshape(%614, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int32] */;
    %618 = reshape(%615, newshape=[140]) /* ty=Tensor[(140), float32] */;
    %619 = reshape(%616, newshape=[10, 12, 10]) /* ty=Tensor[(10, 12, 10), bool] */;
    %620 = @func_3000(%617, %618, %619) /* ty=(Tensor[(2, 10, 7), float32], Tensor[(140), float32], Tensor[(9, 15, 1), float32], Tensor[(132), uint16], Tensor[(10, 12, 10), int64]) */;
    %621 = cast(meta[relay.Constant][56] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
    %622 = cast(meta[relay.Constant][56] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
    %623 = cast(meta[relay.Constant][57] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %624 = reshape(%621, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
    %625 = reshape(%622, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
    %626 = reshape(%623, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
    %627 = @func_2252(%624, %625, %626) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
    %628 = cast(1.60195f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %629 = cast(%var_4451, dtype="float64") /* ty=Tensor[(45), float64] */;
    %630 = reshape(%628, newshape=[]) /* ty=float64 */;
    %631 = reshape(%629, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), float64] */;
    %632 = @func_4182(%630, %631) /* ty=(Tensor[(9, 5, 1), bool],) */;
    %633 = cos(%613) /* ty=Tensor[(12, 8, 16), float64] */;
    %634 = %620.4;
    %635 = %627.1;
    %636 = %632.0;
    (%633, %634, meta[relay.Constant][55] /* ty=Tensor[(120), int32] */, %var_4410, %var_4411, %635, meta[relay.Constant][56] /* ty=Tensor[(576), uint16] */, meta[relay.Constant][57] /* ty=Tensor[(1056), float64] */, %636, 1.60195f64 /* ty=float64 */, %var_4451)
  };
  %637(%var_4465, %var_4466, %var_4467, %var_4468) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(10, 12, 10), int64], Tensor[(120), int32], Tensor[(5, 28), float32], Tensor[(1200), bool], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */
}

def @func_12170() -> (Tensor[(5, 10, 13), float32],) {
  @func_12168() /* ty=(Tensor[(5, 10, 13), float32],) */
}

def @func_9466(%var_9426: Tensor[(576), uint16], %var_9427: Tensor[(1056), float64]) -> (Tensor[(135), bool], Tensor[(1056), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(468), int16]) {
  %638 = @func_9016() /* ty=(Tensor[(135), bool],) */;
  %639 = cast(%var_9426, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %640 = cast(%var_9426, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %641 = cast(%var_9427, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %642 = reshape(%639, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %643 = reshape(%640, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %644 = reshape(%641, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %645 = @func_2252(%642, %643, %644) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %646 = @func_8415() /* ty=(Tensor[(468), int16],) */;
  %647 = %638.0;
  %648 = %645.2;
  %649 = %646.0;
  (%647, %648, %var_9426, %var_9427, %649)
}

def @func_5762(%var_5761: Tensor[(11, 1, 9), float32]) -> (Tensor[(11, 1, 9), float32], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) {
  %655 = fn (%var_5733: Tensor[(11, 1, 9), float32]) -> (Tensor[(11, 1, 9), float32], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) {
    %650 = cast(%var_5733, dtype="float32") /* ty=Tensor[(11, 1, 9), float32] */;
    %651 = cast(meta[relay.Constant][58] /* ty=Tensor[(528, 2), float64] */, dtype="float64") /* ty=Tensor[(528, 2), float64] */;
    %652 = reshape(%651, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
    %653 = log2(%650) /* ty=Tensor[(11, 1, 9), float32] */;
    %654 = @func_1489(%652) /* ty=Tensor[(11, 12, 8), float64] */;
    (%653, %654, meta[relay.Constant][58] /* ty=Tensor[(528, 2), float64] */)
  };
  %655(%var_5761) /* ty=(Tensor[(11, 1, 9), float32], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) */
}

def @func_10605() -> (Tensor[(5, 10, 13), float32], Tensor[(15, 2, 5), float32], Tensor[(150), float32], Tensor[(468), int16]) {
  %656 = @func_8612() /* ty=Tensor[(5, 10, 13), float32] */;
  %657 = cast(meta[relay.Constant][59] /* ty=Tensor[(5, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %658 = shape_of(%656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%656, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %661 = cast(meta[relay.Constant][60] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %662 = cast(meta[relay.Constant][61] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %663 = reshape(%661, newshape=[15, 2, 5]) /* ty=Tensor[(15, 2, 5), float32] */;
  %664 = reshape(%662, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %665 = @func_5418(%663, %664) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %666 = add(%659, %660) /* ty=Tensor[(5, 10, 13), float32] */;
  %667 = %665.0;
  (%666, %667, meta[relay.Constant][60] /* ty=Tensor[(150), float32] */, meta[relay.Constant][61] /* ty=Tensor[(468), int16] */)
}

def @func_1178(%var_1176: Tensor[(7, 2, 4), float32], %var_1177: Tensor[(7, 2, 4), float32]) -> (Tensor[(7, 2, 4), float32],) {
  %673 = fn (%var_1170: Tensor[(7, 2, 4), float32], %var_1171: Tensor[(7, 2, 4), float32]) -> (Tensor[(7, 2, 4), float32],) {
    %668 = cast(%var_1171, dtype="float32") /* ty=Tensor[(7, 2, 4), float32] */;
    %669 = shape_of(%var_1170, dtype="int32") /* ty=Tensor[(3), int32] */;
    %670 = cast(%var_1170, dtype="float32") /* ty=Tensor[(7, 2, 4), float32] */;
    %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %672 = mod(%670, %671) /* ty=Tensor[(7, 2, 4), float32] */;
    (%672,)
  };
  %673(%var_1176, %var_1177) /* ty=(Tensor[(7, 2, 4), float32],) */
}

def @func_10556() -> Tensor[(135), bool] {
  %675 = fn () -> Tensor[(135), bool] {
    %674 = @func_9016() /* ty=(Tensor[(135), bool],) */;
    %674.0
  };
  %675() /* ty=Tensor[(135), bool] */
}

def @func_11922() -> (Tensor[(468), int16],) {
  %678 = fn () -> (Tensor[(468), int16],) {
    %676 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
    %677 = %676.2;
    (%677,)
  };
  %678() /* ty=(Tensor[(468), int16],) */
}

def @func_2256(%var_2253: Tensor[(16, 9, 4), uint16], %var_2254: Tensor[(16, 9, 4), uint16], %var_2255: Tensor[(1056), float64]) -> (Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) {
  %687 = fn (%var_2221: Tensor[(16, 9, 4), uint16], %var_2222: Tensor[(16, 9, 4), uint16], %var_2244: Tensor[(1056), float64]) -> (Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) {
    %679 = cast(%var_2222, dtype="uint16") /* ty=Tensor[(16, 9, 4), uint16] */;
    %680 = shape_of(%var_2221, dtype="int32") /* ty=Tensor[(3), int32] */;
    %681 = cast(%var_2221, dtype="uint16") /* ty=Tensor[(16, 9, 4), uint16] */;
    %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %683 = cast(%var_2244, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %684 = reshape(%683, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
    %685 = multiply(%681, %682) /* ty=Tensor[(16, 9, 4), uint16] */;
    %686 = @func_1489(%684) /* ty=Tensor[(11, 12, 8), float64] */;
    (%685, %686, %var_2244)
  };
  %687(%var_2253, %var_2254, %var_2255) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */
}

def @func_10162(%var_10158: Tensor[(84, 1), float32], %var_10159: Tensor[(288), float64], %var_10160: float64, %var_10161: Tensor[(45), float64]) -> (Tensor[(135), bool], Tensor[(10, 6, 11), float32], Tensor[(660, 1), float32], Tensor[(5, 10, 13), float32], Tensor[(27, 50), int64], Tensor[(84, 288), bool], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) {
  @func_10156(%var_10158, %var_10159, %var_10160, %var_10161) /* ty=(Tensor[(135), bool], Tensor[(10, 6, 11), float32], Tensor[(660, 1), float32], Tensor[(5, 10, 13), float32], Tensor[(27, 50), int64], Tensor[(84, 288), bool], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */
}

def @func_9154(%var_9152: Tensor[(2, 288), uint16], %var_9153: Tensor[(1056), float64]) -> (Tensor[(468), int16], Tensor[(16, 9, 4), uint16], Tensor[(2, 288), uint16], Tensor[(1056), float64], Tensor[(1936), int32], Tensor[(5, 10, 13), float64]) {
  %699 = fn (%var_9145: Tensor[(2, 288), uint16], %var_9146: Tensor[(1056), float64]) -> (Tensor[(468), int16], Tensor[(16, 9, 4), uint16], Tensor[(2, 288), uint16], Tensor[(1056), float64], Tensor[(1936), int32], Tensor[(5, 10, 13), float64]) {
    %688 = @func_8415() /* ty=(Tensor[(468), int16],) */;
    %689 = cast(%var_9145, dtype="uint16") /* ty=Tensor[(2, 288), uint16] */;
    %690 = cast(%var_9146, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %691 = cast(meta[relay.Constant][62] /* ty=Tensor[(1936), int32] */, dtype="int32") /* ty=Tensor[(1936), int32] */;
    %692 = reshape(%689, newshape=[576]) /* ty=Tensor[(576), uint16] */;
    %693 = reshape(%690, newshape=[1, 1056]) /* ty=Tensor[(1, 1056), float64] */;
    %694 = reshape(%691, newshape=[1936]) /* ty=Tensor[(1936), int32] */;
    %695 = @func_8724(%692, %693, %694) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(576), uint16], Tensor[(1, 1056), float64], Tensor[(150, 1), float32], Tensor[(468, 1), int16], Tensor[(176), int32], Tensor[(1936), int32], Tensor[(150, 1), float32]) */;
    %696 = %688.0;
    %697 = %695.1;
    %698 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
    (%696, %697, %var_9145, %var_9146, meta[relay.Constant][62] /* ty=Tensor[(1936), int32] */, %698)
  };
  %699(%var_9152, %var_9153) /* ty=(Tensor[(468), int16], Tensor[(16, 9, 4), uint16], Tensor[(2, 288), uint16], Tensor[(1056), float64], Tensor[(1936), int32], Tensor[(5, 10, 13), float64]) */
}

def @func_676(%var_674: Tensor[(10, 6, 11), float32]) -> Tensor[(10, 6, 11), float32] {
  @func_673(%var_674) /* ty=Tensor[(10, 6, 11), float32] */
}

def @func_12980(%var_12979: Tensor[(12, 6, 13), float32]) -> (Tensor[(12, 6, 13), float32],) {
  %702 = fn (%var_12951: Tensor[(12, 6, 13), float32]) -> (Tensor[(12, 6, 13), float32],) {
    %700 = cast(%var_12951, dtype="float32") /* ty=Tensor[(12, 6, 13), float32] */;
    %701 = asinh(%700) /* ty=Tensor[(12, 6, 13), float32] */;
    (%701,)
  };
  %702(%var_12979) /* ty=(Tensor[(12, 6, 13), float32],) */
}

def @func_13121(%var_13107: Tensor[(1350), int64]) -> (Tensor[(468), int16], Tensor[(16, 8), int64], Tensor[(99), float32], Tensor[(1078, 1350), bool]) {
  %703 = @func_8415() /* ty=(Tensor[(468), int16],) */;
  %704 = cast(meta[relay.Constant][63] /* ty=Tensor[(1078, 1), float32] */, dtype="float32") /* ty=Tensor[(1078, 1), float32] */;
  %705 = cast(meta[relay.Constant][64] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %706 = cast(%var_13107, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %707 = reshape(%704, newshape=[1078]) /* ty=Tensor[(1078), float32] */;
  %708 = reshape(%705, newshape=[1, 99]) /* ty=Tensor[(1, 99), float32] */;
  %709 = reshape(%706, newshape=[1350, 1]) /* ty=Tensor[(1350, 1), int64] */;
  %710 = @func_8173(%707, %708, %709) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(10, 2, 5), bool], Tensor[(100), uint32], Tensor[(1, 1, 3), bool], float32, Tensor[(1078), float32], Tensor[(5, 10, 13), float64], Tensor[(9, 15, 1), float32], Tensor[(16, 8), int64], Tensor[(11, 1, 9), float32], Tensor[(1, 99), float32], Tensor[(15, 10, 9), int64], Tensor[(1350, 1), int64]) */;
  %711 = cast(meta[relay.Constant][63] /* ty=Tensor[(1078, 1), float32] */, dtype="bool") /* ty=Tensor[(1078, 1), bool] */;
  %712 = cast(%var_13107, dtype="bool") /* ty=Tensor[(1350), bool] */;
  %713 = %703.0;
  %714 = %710.8;
  %715 = greater(%711, %712) /* ty=Tensor[(1078, 1350), bool] */;
  (%713, %714, meta[relay.Constant][64] /* ty=Tensor[(99), float32] */, %715)
}

def @func_9016() -> (Tensor[(135), bool],) {
  %716 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %717 = %716.1;
  (%717,)
}

def @func_13625(%var_13624: Tensor[(3, 2, 14), float64]) -> (Tensor[(3, 2, 14), uint8],) {
  %725 = fn (%var_13587: Tensor[(3, 2, 14), float64]) -> (Tensor[(3, 2, 14), uint8],) {
    %718 = cast(%var_13587, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
    %719 = asin(%718) /* ty=Tensor[(3, 2, 14), float64] */;
    %720 = cast(%719, dtype="uint8") /* ty=Tensor[(3, 2, 14), uint8] */;
    %721 = shape_of(%var_13587, dtype="int32") /* ty=Tensor[(3), int32] */;
    %722 = cast(%var_13587, dtype="uint8") /* ty=Tensor[(3, 2, 14), uint8] */;
    %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %724 = multiply(%722, %723) /* ty=Tensor[(3, 2, 14), uint8] */;
    (%724,)
  };
  %725(%var_13624) /* ty=(Tensor[(3, 2, 14), uint8],) */
}

def @func_834(%var_833: Tensor[(10, 6, 7), float64]) -> Tensor[(10, 6, 7), float64] {
  %727 = fn (%var_826: Tensor[(10, 6, 7), float64]) -> Tensor[(10, 6, 7), float64] {
    %726 = cast(%var_826, dtype="float64") /* ty=Tensor[(10, 6, 7), float64] */;
    sigmoid(%726) /* ty=Tensor[(10, 6, 7), float64] */
  };
  %727(%var_833) /* ty=Tensor[(10, 6, 7), float64] */
}

def @func_8991(%var_8989: Tensor[(120), int32], %var_8990: Tensor[(4, 300), bool]) -> (Tensor[(2, 3, 10), float32], Tensor[(9, 15, 1), float32], Tensor[(120), int32], Tensor[(140), float32], Tensor[(4, 300), bool]) {
  %738 = fn (%var_8978: Tensor[(120), int32], %var_8980: Tensor[(4, 300), bool]) -> (Tensor[(2, 3, 10), float32], Tensor[(9, 15, 1), float32], Tensor[(120), int32], Tensor[(140), float32], Tensor[(4, 300), bool]) {
    %728 = cast(meta[relay.Constant][65] /* ty=Tensor[(2, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 10), float32] */;
    %729 = cast(%var_8978, dtype="int32") /* ty=Tensor[(120), int32] */;
    %730 = cast(meta[relay.Constant][66] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
    %731 = cast(%var_8980, dtype="bool") /* ty=Tensor[(4, 300), bool] */;
    %732 = reshape(%729, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int32] */;
    %733 = reshape(%730, newshape=[140]) /* ty=Tensor[(140), float32] */;
    %734 = reshape(%731, newshape=[10, 12, 10]) /* ty=Tensor[(10, 12, 10), bool] */;
    %735 = @func_3000(%732, %733, %734) /* ty=(Tensor[(2, 10, 7), float32], Tensor[(140), float32], Tensor[(9, 15, 1), float32], Tensor[(132), uint16], Tensor[(10, 12, 10), int64]) */;
    %736 = sigmoid(%728) /* ty=Tensor[(2, 3, 10), float32] */;
    %737 = %735.2;
    (%736, %737, %var_8978, meta[relay.Constant][66] /* ty=Tensor[(140), float32] */, %var_8980)
  };
  %738(%var_8989, %var_8990) /* ty=(Tensor[(2, 3, 10), float32], Tensor[(9, 15, 1), float32], Tensor[(120), int32], Tensor[(140), float32], Tensor[(4, 300), bool]) */
}

def @func_10321(%var_10319: Tensor[(1, 6, 7), uint16]) -> (Tensor[(10, 6, 7), uint16],) {
  @func_10318(%var_10319) /* ty=(Tensor[(10, 6, 7), uint16],) */
}

def @func_8417() -> (Tensor[(468), int16],) {
  @func_8415() /* ty=(Tensor[(468), int16],) */
}

def @func_13951(%var_13949: Tensor[(8, 10, 2), float64]) -> (Tensor[(8, 10, 2), bool],) {
  @func_13948(%var_13949) /* ty=(Tensor[(8, 10, 2), bool],) */
}

def @func_14350(%var_14349: Tensor[(936, 1), float32]) -> (Tensor[(5, 10, 13), float32], Tensor[(12, 6, 13), float32], Tensor[(936, 1), float32], Tensor[(12, 3, 13), bool], Tensor[(468), int16]) {
  %749 = fn (%var_14337: Tensor[(936, 1), float32]) -> (Tensor[(5, 10, 13), float32], Tensor[(12, 6, 13), float32], Tensor[(936, 1), float32], Tensor[(12, 3, 13), bool], Tensor[(468), int16]) {
    %739 = @func_13635() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(15, 11, 3), float32], Tensor[(495), float32]) */;
    %740 = cast(%var_14337, dtype="float32") /* ty=Tensor[(936, 1), float32] */;
    %741 = reshape(%740, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), float32] */;
    %742 = @func_12978(%741) /* ty=(Tensor[(12, 6, 13), float32],) */;
    %743 = cast(meta[relay.Constant][67] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
    %744 = reshape(%743, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
    %745 = @func_3226(%744) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(135), bool], Tensor[(135), float64]) */;
    %746 = %739.0;
    %747 = %742.0;
    %748 = %745.0;
    (%746, %747, %var_14337, %748, meta[relay.Constant][67] /* ty=Tensor[(468), int16] */)
  };
  %749(%var_14349) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(12, 6, 13), float32], Tensor[(936, 1), float32], Tensor[(12, 3, 13), bool], Tensor[(468), int16]) */
}

def @func_5727(%var_5726: Tensor[(15, 11, 3), float32]) -> Tensor[(15, 11, 3), float32] {
  %751 = fn (%var_5708: Tensor[(15, 11, 3), float32]) -> Tensor[(15, 11, 3), float32] {
    %750 = cast(%var_5708, dtype="float32") /* ty=Tensor[(15, 11, 3), float32] */;
    atanh(%750) /* ty=Tensor[(15, 11, 3), float32] */
  };
  %751(%var_5726) /* ty=Tensor[(15, 11, 3), float32] */
}

def @func_10409() -> (Tensor[(5, 10, 13), float64],) {
  @func_10407() /* ty=(Tensor[(5, 10, 13), float64],) */
}

def @func_11727(%var_11725: Tensor[(100), uint32], %var_11726: Tensor[(6, 78), int16]) -> (Tensor[(150), float32], Tensor[(10, 2, 5), bool], Tensor[(100), uint32], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(1056), float64], Tensor[(1350), float32], Tensor[(135), bool], Tensor[(6, 78), int16], Tensor[(8, 10, 2), float64], Tensor[(1, 1, 3), bool], float32, Tensor[(1078), float32]) {
  @func_11723(%var_11725, %var_11726) /* ty=(Tensor[(150), float32], Tensor[(10, 2, 5), bool], Tensor[(100), uint32], Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(1056), float64], Tensor[(1350), float32], Tensor[(135), bool], Tensor[(6, 78), int16], Tensor[(8, 10, 2), float64], Tensor[(1, 1, 3), bool], float32, Tensor[(1078), float32]) */
}

def @func_9210(%var_9208: Tensor[(140), float32], %var_9209: Tensor[(140), float32]) -> (Tensor[(5, 10, 13), float32], Tensor[(2, 10, 7), float32], Tensor[(140), uint16]) {
  @func_9206(%var_9208, %var_9209) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(2, 10, 7), float32], Tensor[(140), uint16]) */
}

def @func_13380(%var_13376: Tensor[(5, 10, 13), float32], %var_13377: Tensor[(1, 56), float32], %var_13378: Tensor[(1350), float32], %var_13379: Tensor[(132), uint16]) -> (Tensor[(5, 10, 13), bool], Tensor[(288), float64], Tensor[(1, 56), float32], Tensor[(1350), float32], Tensor[(132), uint16], Tensor[(288), float64], Tensor[(45, 1), float64]) {
  @func_13374(%var_13376, %var_13377, %var_13378, %var_13379) /* ty=(Tensor[(5, 10, 13), bool], Tensor[(288), float64], Tensor[(1, 56), float32], Tensor[(1350), float32], Tensor[(132), uint16], Tensor[(288), float64], Tensor[(45, 1), float64]) */
}

def @func_9956(%var_9931: Tensor[(675, 1), float32], %var_9948: Tensor[(132), uint16]) -> (Tensor[(5, 10, 13), float32], Tensor[(5, 135), float32], Tensor[(539, 2), float32], Tensor[(675, 1), float64], Tensor[(132), uint16], Tensor[(192), float64], Tensor[(1056), float64], Tensor[(132), uint16], Tensor[(576), uint16]) {
  %752 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %753 = cast(%var_9931, dtype="float32") /* ty=Tensor[(675, 1), float32] */;
  %754 = cast(meta[relay.Constant][68] /* ty=Tensor[(539, 2), float32] */, dtype="float32") /* ty=Tensor[(539, 2), float32] */;
  %755 = cast(meta[relay.Constant][68] /* ty=Tensor[(539, 2), float32] */, dtype="float32") /* ty=Tensor[(539, 2), float32] */;
  %756 = %752.0;
  %757 = cast(%756, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
  %758 = reshape(%753, newshape=[5, 135]) /* ty=Tensor[(5, 135), float32] */;
  %759 = reshape(%754, newshape=[1078]) /* ty=Tensor[(1078), float32] */;
  %760 = reshape(%755, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), float32] */;
  %761 = reshape(%757, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), float32] */;
  %762 = @func_8789(%758, %759, %760, %761) /* ty=(float64, Tensor[(5, 135), float32], float64, Tensor[(1078), float32], Tensor[(9, 15, 1), float32], Tensor[(15, 9), float32], Tensor[(14, 7, 11), bool], Tensor[(5, 10, 13), int16]) */;
  %763 = cast(%var_9931, dtype="float64") /* ty=Tensor[(675, 1), float64] */;
  %764 = cast(meta[relay.Constant][69] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %765 = cast(meta[relay.Constant][70] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %766 = cast(%var_9948, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %767 = cast(meta[relay.Constant][71] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %768 = reshape(%764, newshape=[12, 4, 4]) /* ty=Tensor[(12, 4, 4), float64] */;
  %769 = reshape(%765, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %770 = reshape(%766, newshape=[132]) /* ty=Tensor[(132), uint16] */;
  %771 = reshape(%767, newshape=[576]) /* ty=Tensor[(576), uint16] */;
  %772 = @func_9896(%768, %769, %770, %771) /* ty=(Tensor[(12, 4, 4), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(132), uint16], int64, Tensor[(576), uint16]) */;
  %773 = %762.1;
  %774 = cosh(%763) /* ty=Tensor[(675, 1), float64] */;
  %775 = %772.3;
  (%756, %773, meta[relay.Constant][68] /* ty=Tensor[(539, 2), float32] */, %774, %775, meta[relay.Constant][69] /* ty=Tensor[(192), float64] */, meta[relay.Constant][70] /* ty=Tensor[(1056), float64] */, %var_9948, meta[relay.Constant][71] /* ty=Tensor[(576), uint16] */)
}

def @func_13235(%var_13231: int64, %var_13232: Tensor[(576), uint16], %var_13233: Tensor[(84), float32], %var_13234: Tensor[(288), float64]) -> (Tensor[(8, 10, 2), float64], Tensor[(288), float64], int64, Tensor[(576), uint16], Tensor[(84), float32], Tensor[(1350), int64], Tensor[(288), float64]) {
  @func_13229(%var_13231, %var_13232, %var_13233, %var_13234) /* ty=(Tensor[(8, 10, 2), float64], Tensor[(288), float64], int64, Tensor[(576), uint16], Tensor[(84), float32], Tensor[(1350), int64], Tensor[(288), float64]) */
}

def @func_13494() -> (Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) {
  %778 = fn () -> (Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) {
    %776 = @func_11305() /* ty=Tensor[(5, 10, 13), float32] */;
    %777 = @func_12545() /* ty=Tensor[(8, 10, 2), float64] */;
    (%776, %777)
  };
  %778() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) */
}

def @func_5968(%var_5966: Tensor[(13, 14, 3), uint16], %var_5967: Tensor[(13, 14, 3), uint16]) -> Tensor[(13, 14, 3), uint16] {
  @func_5964(%var_5966, %var_5967) /* ty=Tensor[(13, 14, 3), uint16] */
}

def @func_7874() -> Tensor[(5, 10, 13), float32] {
  %780 = fn () -> Tensor[(5, 10, 13), float32] {
    %779 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
    %779.0
  };
  %780() /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_9511() -> Tensor[(5, 10, 13), float32] {
  %782 = fn () -> Tensor[(5, 10, 13), float32] {
    %781 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
    %781.0
  };
  %782() /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_11083(%var_11082: Tensor[(11, 15, 13), float32]) -> (Tensor[(11, 15, 13), float32],) {
  %785 = fn (%var_11077: Tensor[(11, 15, 13), float32]) -> (Tensor[(11, 15, 13), float32],) {
    %783 = cast(%var_11077, dtype="float32") /* ty=Tensor[(11, 15, 13), float32] */;
    %784 = tan(%783) /* ty=Tensor[(11, 15, 13), float32] */;
    (%784,)
  };
  %785(%var_11082) /* ty=(Tensor[(11, 15, 13), float32],) */
}

def @func_10750() -> Tensor[(5, 10, 13), float32] {
  %787 = fn () -> Tensor[(5, 10, 13), float32] {
    %786 = @func_10640() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) */;
    %786.0
  };
  %787() /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_12840() -> (Tensor[(5, 10, 13), float32],) {
  %789 = fn () -> (Tensor[(5, 10, 13), float32],) {
    %788 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
    (%788,)
  };
  %789() /* ty=(Tensor[(5, 10, 13), float32],) */
}

def @func_6030(%var_5982: Tensor[(7, 2, 6), float32], %var_5983: Tensor[(7, 2, 6), float32], %var_6006: Tensor[(1350), int64]) -> (Tensor[(7, 2, 6), bool], Tensor[(7, 2, 6), float32], Tensor[(15, 10, 9), int64], Tensor[(1350), int64]) {
  %790 = cast(%var_5983, dtype="bool") /* ty=Tensor[(7, 2, 6), bool] */;
  %791 = shape_of(%var_5982, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%var_5982, dtype="bool") /* ty=Tensor[(7, 2, 6), bool] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %794 = cast(%var_5983, dtype="float32") /* ty=Tensor[(7, 2, 6), float32] */;
  %795 = exp(%794) /* ty=Tensor[(7, 2, 6), float32] */;
  %796 = cast(%var_5982, dtype="float32") /* ty=Tensor[(7, 2, 6), float32] */;
  %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%795, dtype="float32") /* ty=Tensor[(7, 2, 6), float32] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %800 = cast(%var_6006, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %801 = cast(%var_6006, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %802 = reshape(%800, newshape=[15, 10, 9]) /* ty=Tensor[(15, 10, 9), int64] */;
  %803 = reshape(%801, newshape=[15, 10, 9]) /* ty=Tensor[(15, 10, 9), int64] */;
  %804 = equal(%792, %793) /* ty=Tensor[(7, 2, 6), bool] */;
  %805 = mod(%798, %799) /* ty=Tensor[(7, 2, 6), float32] */;
  %806 = @func_3571(%802, %803) /* ty=Tensor[(15, 10, 9), int64] */;
  (%804, %805, %806, %var_6006)
}

def @func_13872(%var_13871: Tensor[(1, 15, 10), float32]) -> (Tensor[(1, 15, 10), float32], Tensor[(8, 10, 2), float64]) {
  %811 = fn (%var_13849: Tensor[(1, 15, 10), float32]) -> (Tensor[(1, 15, 10), float32], Tensor[(8, 10, 2), float64]) {
    %807 = cast(%var_13849, dtype="float32") /* ty=Tensor[(1, 15, 10), float32] */;
    %808 = @func_10298() /* ty=(Tensor[(8, 10, 2), float64],) */;
    %809 = sinh(%807) /* ty=Tensor[(1, 15, 10), float32] */;
    %810 = %808.0;
    (%809, %810)
  };
  %811(%var_13871) /* ty=(Tensor[(1, 15, 10), float32], Tensor[(8, 10, 2), float64]) */
}

def @func_10813() -> Tensor[(5, 10, 13), float64] {
  @func_10811() /* ty=Tensor[(5, 10, 13), float64] */
}

def @func_12545() -> Tensor[(8, 10, 2), float64] {
  %812 = @func_10640() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) */;
  %812.1
}

def @func_11485(%var_11480: Tensor[(1056), float64], %var_11481: Tensor[(84), float32], %var_11482: Tensor[(288), float64], %var_11483: Tensor[(1536), float64], %var_11484: Tensor[(45), float64]) -> (Tensor[(5, 10, 13), float64], Tensor[(576), uint16], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(1350), int64], Tensor[(288), float64], Tensor[(15, 10, 9), int64], Tensor[(5, 10, 13), float64], Tensor[(45), float64], Tensor[(1536), float64], Tensor[(140), float32], Tensor[(1200), bool], Tensor[(45), float64], Tensor[(1056), float64]) {
  %849 = fn (%var_11423: Tensor[(1056), float64], %var_11426: Tensor[(84), float32], %var_11428: Tensor[(288), float64], %var_11451: Tensor[(1536), float64], %var_11454: Tensor[(45), float64]) -> (Tensor[(5, 10, 13), float64], Tensor[(576), uint16], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(1350), int64], Tensor[(288), float64], Tensor[(15, 10, 9), int64], Tensor[(5, 10, 13), float64], Tensor[(45), float64], Tensor[(1536), float64], Tensor[(140), float32], Tensor[(1200), bool], Tensor[(45), float64], Tensor[(1056), float64]) {
    %813 = cast(%var_11426, dtype="float32") /* ty=Tensor[(84), float32] */;
    %814 = cast(meta[relay.Constant][73] /* ty=Tensor[(1350), int64] */, dtype="int64") /* ty=Tensor[(1350), int64] */;
    %815 = cast(%var_11428, dtype="float64") /* ty=Tensor[(288), float64] */;
    %816 = reshape(%813, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %817 = reshape(%814, newshape=[3, 450]) /* ty=Tensor[(3, 450), int64] */;
    %818 = reshape(%815, newshape=[72, 4]) /* ty=Tensor[(72, 4), float64] */;
    %819 = @func_9107(%816, %817, %818) /* ty=(Tensor[(5, 10, 13), bool], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(3, 450), int64], Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(72, 4), float64]) */;
    %820 = cast(meta[relay.Constant][73] /* ty=Tensor[(1350), int64] */, dtype="int64") /* ty=Tensor[(1350), int64] */;
    %821 = cast(meta[relay.Constant][73] /* ty=Tensor[(1350), int64] */, dtype="int64") /* ty=Tensor[(1350), int64] */;
    %822 = reshape(%820, newshape=[15, 10, 9]) /* ty=Tensor[(15, 10, 9), int64] */;
    %823 = reshape(%821, newshape=[15, 10, 9]) /* ty=Tensor[(15, 10, 9), int64] */;
    %824 = cast(%var_11451, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %825 = cast(meta[relay.Constant][74] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
    %826 = cast(meta[relay.Constant][75] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %827 = cast(%var_11454, dtype="float64") /* ty=Tensor[(45), float64] */;
    %828 = reshape(%824, newshape=[12, 8, 16]) /* ty=Tensor[(12, 8, 16), float64] */;
    %829 = reshape(%825, newshape=[5, 28]) /* ty=Tensor[(5, 28), float32] */;
    %830 = reshape(%826, newshape=[1200]) /* ty=Tensor[(1200), bool] */;
    %831 = reshape(%827, newshape=[45]) /* ty=Tensor[(45), float64] */;
    %832 = @func_4464(%828, %829, %830, %831) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(10, 12, 10), int64], Tensor[(120), int32], Tensor[(5, 28), float32], Tensor[(1200), bool], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */;
    %833 = cast(meta[relay.Constant][72] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
    %834 = cast(%var_11423, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %835 = reshape(%833, newshape=[576]) /* ty=Tensor[(576), uint16] */;
    %836 = reshape(%834, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
    %837 = @func_9466(%835, %836) /* ty=(Tensor[(135), bool], Tensor[(1056), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(468), int16]) */;
    %838 = %837.1;
    %839 = cast(%var_11423, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %840 = shape_of(%838, dtype="int32") /* ty=Tensor[(1), int32] */;
    %841 = cast(%838, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?), float64] */;
    %843 = @func_9663() /* ty=Tensor[(5, 10, 13), float64] */;
    %844 = %819.1;
    %845 = @func_3571(%822, %823) /* ty=Tensor[(15, 10, 9), int64] */;
    %846 = @func_10688() /* ty=Tensor[(5, 10, 13), float64] */;
    %847 = %832.10;
    %848 = floor_mod(%841, %842) /* ty=Tensor[(1056), float64] */;
    (%843, meta[relay.Constant][72] /* ty=Tensor[(576), uint16] */, %844, %var_11426, meta[relay.Constant][73] /* ty=Tensor[(1350), int64] */, %var_11428, %845, %846, %847, %var_11451, meta[relay.Constant][74] /* ty=Tensor[(140), float32] */, meta[relay.Constant][75] /* ty=Tensor[(1200), bool] */, %var_11454, %848)
  };
  %849(%var_11480, %var_11481, %var_11482, %var_11483, %var_11484) /* ty=(Tensor[(5, 10, 13), float64], Tensor[(576), uint16], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(1350), int64], Tensor[(288), float64], Tensor[(15, 10, 9), int64], Tensor[(5, 10, 13), float64], Tensor[(45), float64], Tensor[(1536), float64], Tensor[(140), float32], Tensor[(1200), bool], Tensor[(45), float64], Tensor[(1056), float64]) */
}

def @func_7138(%var_7136: Tensor[(16, 3, 6), float64], %var_7137: Tensor[(16, 3, 6), float64]) -> (Tensor[(16, 3, 6), float64],) {
  %855 = fn (%var_7125: Tensor[(16, 3, 6), float64], %var_7126: Tensor[(16, 3, 6), float64]) -> (Tensor[(16, 3, 6), float64],) {
    %850 = cast(%var_7126, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
    %851 = shape_of(%var_7125, dtype="int32") /* ty=Tensor[(3), int32] */;
    %852 = cast(%var_7125, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
    %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %854 = mod(%852, %853) /* ty=Tensor[(16, 3, 6), float64] */;
    (%854,)
  };
  %855(%var_7136, %var_7137) /* ty=(Tensor[(16, 3, 6), float64],) */
}

def @func_6989(%var_6988: Tensor[(1, 10, 11), float32]) -> Tensor[(1, 10, 11), float32] {
  %857 = fn (%var_6981: Tensor[(1, 10, 11), float32]) -> Tensor[(1, 10, 11), float32] {
    %856 = cast(%var_6981, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
    atanh(%856) /* ty=Tensor[(1, 10, 11), float32] */
  };
  %857(%var_6988) /* ty=Tensor[(1, 10, 11), float32] */
}

def @func_8372() -> (Tensor[(5, 10, 13), float32],) {
  %861 = fn () -> (Tensor[(5, 10, 13), float32],) {
    %858 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
    %859 = cast(%858, dtype="float32") /* ty=Tensor[(5, 10, 13), float32] */;
    %860 = sinh(%859) /* ty=Tensor[(5, 10, 13), float32] */;
    (%860,)
  };
  %861() /* ty=(Tensor[(5, 10, 13), float32],) */
}

def @func_9112(%var_9109: Tensor[(84), float32], %var_9110: Tensor[(3, 450), int64], %var_9111: Tensor[(72, 4), float64]) -> (Tensor[(5, 10, 13), bool], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(3, 450), int64], Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(72, 4), float64]) {
  @func_9107(%var_9109, %var_9110, %var_9111) /* ty=(Tensor[(5, 10, 13), bool], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(3, 450), int64], Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(72, 4), float64]) */
}

def @func_8612() -> Tensor[(5, 10, 13), float32] {
  %862 = @func_8371() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %862.0
}

def @func_8724(%var_8699: Tensor[(576), uint16], %var_8700: Tensor[(1, 1056), float64], %var_8716: Tensor[(1936), int32]) -> (Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(576), uint16], Tensor[(1, 1056), float64], Tensor[(150, 1), float32], Tensor[(468, 1), int16], Tensor[(176), int32], Tensor[(1936), int32], Tensor[(150, 1), float32]) {
  %863 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
  %864 = cast(%var_8699, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %865 = cast(%var_8699, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %866 = cast(%var_8700, dtype="float64") /* ty=Tensor[(1, 1056), float64] */;
  %867 = reshape(%864, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %868 = reshape(%865, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
  %869 = reshape(%866, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %870 = @func_2252(%867, %868, %869) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
  %871 = cast(meta[relay.Constant][76] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %872 = cast(meta[relay.Constant][77] /* ty=Tensor[(176), int32] */, dtype="int32") /* ty=Tensor[(176), int32] */;
  %873 = cast(%var_8716, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %874 = reshape(%871, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %875 = reshape(%872, newshape=[176]) /* ty=Tensor[(176), int32] */;
  %876 = reshape(%873, newshape=[1936]) /* ty=Tensor[(1936), int32] */;
  %877 = @func_7837(%874, %875, %876) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(468), int16], Tensor[(150, 1), float32], Tensor[(468), int16], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) */;
  %878 = cast(meta[relay.Constant][76] /* ty=Tensor[(468, 1), int16] */, dtype="int16") /* ty=Tensor[(468, 1), int16] */;
  %879 = cast(meta[relay.Constant][77] /* ty=Tensor[(176), int32] */, dtype="int32") /* ty=Tensor[(176), int32] */;
  %880 = cast(%var_8716, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %881 = reshape(%878, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %882 = reshape(%879, newshape=[176]) /* ty=Tensor[(176), int32] */;
  %883 = reshape(%880, newshape=[1936]) /* ty=Tensor[(1936), int32] */;
  %884 = @func_7837(%881, %882, %883) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(468), int16], Tensor[(150, 1), float32], Tensor[(468), int16], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) */;
  %885 = %863.0;
  %886 = %870.0;
  %887 = %877.2;
  %888 = %884.2;
  (%885, %886, %var_8699, %var_8700, %887, meta[relay.Constant][76] /* ty=Tensor[(468, 1), int16] */, meta[relay.Constant][77] /* ty=Tensor[(176), int32] */, %var_8716, %888)
}

def @func_3004(%var_3001: Tensor[(10, 12, 1), int32], %var_3002: Tensor[(140), float32], %var_3003: Tensor[(10, 12, 10), bool]) -> (Tensor[(2, 10, 7), float32], Tensor[(140), float32], Tensor[(9, 15, 1), float32], Tensor[(132), uint16], Tensor[(10, 12, 10), int64]) {
  %906 = fn (%var_2960: Tensor[(10, 12, 1), int32], %var_2970: Tensor[(140), float32], %var_2992: Tensor[(10, 12, 10), bool]) -> (Tensor[(2, 10, 7), float32], Tensor[(140), float32], Tensor[(9, 15, 1), float32], Tensor[(132), uint16], Tensor[(10, 12, 10), int64]) {
    %889 = cast(%var_2970, dtype="float32") /* ty=Tensor[(140), float32] */;
    %890 = reshape(%889, newshape=[2, 10, 7]) /* ty=Tensor[(2, 10, 7), float32] */;
    %891 = cast(meta[relay.Constant][78] /* ty=Tensor[(132), uint16] */, dtype="uint16") /* ty=Tensor[(132), uint16] */;
    %892 = cast(meta[relay.Constant][78] /* ty=Tensor[(132), uint16] */, dtype="uint16") /* ty=Tensor[(132), uint16] */;
    %893 = reshape(%891, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), uint16] */;
    %894 = reshape(%892, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), uint16] */;
    %895 = @func_2557(%893, %894) /* ty=(Tensor[(6, 11, 2), uint16], Tensor[(9, 15, 1), float32], Tensor[(1, 135), float32]) */;
    %896 = cast(%var_2960, dtype="bool") /* ty=Tensor[(10, 12, 1), bool] */;
    %897 = cast(meta[relay.Constant][79] /* ty=Tensor[(10, 12, 10), int32] */, dtype="bool") /* ty=Tensor[(10, 12, 10), bool] */;
    %898 = equal(%896, %897) /* ty=Tensor[(10, 12, 10), bool] */;
    %899 = cast(%var_2992, dtype="int64") /* ty=Tensor[(10, 12, 10), int64] */;
    %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(3), int32] */;
    %901 = cast(%898, dtype="int64") /* ty=Tensor[(10, 12, 10), int64] */;
    %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %903 = @func_2572(%890) /* ty=Tensor[(2, 10, 7), float32] */;
    %904 = %895.1;
    %905 = logical_xor(%901, %902) /* ty=Tensor[(10, 12, 10), int64] */;
    (%903, %var_2970, %904, meta[relay.Constant][78] /* ty=Tensor[(132), uint16] */, %905)
  };
  %906(%var_3001, %var_3002, %var_3003) /* ty=(Tensor[(2, 10, 7), float32], Tensor[(140), float32], Tensor[(9, 15, 1), float32], Tensor[(132), uint16], Tensor[(10, 12, 10), int64]) */
}

def @func_13741(%var_13726: Tensor[(135), float32]) -> (Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float32], Tensor[(9, 15, ?), float32]) {
  %907 = @func_13448() /* ty=(Tensor[(135), bool], Tensor[(5, 10, 13), float32]) */;
  %908 = @func_12856() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %909 = cast(%var_13726, dtype="float32") /* ty=Tensor[(135), float32] */;
  %910 = reshape(%909, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float32] */;
  %911 = @func_327(%910) /* ty=(Tensor[(9, 15, 1), float32],) */;
  %912 = %911.0;
  %913 = cast(%var_13726, dtype="float32") /* ty=Tensor[(135), float32] */;
  %914 = shape_of(%912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %915 = cast(%912, dtype="float32") /* ty=Tensor[(9, 15, 1), float32] */;
  %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %917 = %907.1;
  %918 = %908.0;
  %919 = mod(%915, %916) /* ty=Tensor[(9, 15, ?), float32] */;
  (%917, %918, %919)
}

def @func_14073() -> Tensor[(5, 10, 13), float32] {
  %921 = fn () -> Tensor[(5, 10, 13), float32] {
    %920 = @func_12730() /* ty=(Tensor[(5, 10, 13), float32],) */;
    %920.0
  };
  %921() /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_12269() -> (Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float64]) {
  %926 = fn () -> (Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float64]) {
    %922 = @func_8371() /* ty=(Tensor[(5, 10, 13), float32],) */;
    %923 = @func_11577() /* ty=(Tensor[(5, 10, 13), float64],) */;
    %924 = %922.0;
    %925 = %923.0;
    (%924, %925)
  };
  %926() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(5, 10, 13), float64]) */
}

def @func_8585(%var_8564: Tensor[(4, 6, 8), float64], %var_8565: Tensor[(4, 6, 8), float64]) -> (Tensor[(4, 6, 8), float64], Tensor[(4, 6, 8), float32], Tensor[(4, 6, 8), float32]) {
  %927 = cast(%var_8565, dtype="float64") /* ty=Tensor[(4, 6, 8), float64] */;
  %928 = shape_of(%var_8564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%var_8564, dtype="float64") /* ty=Tensor[(4, 6, 8), float64] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %931 = cast(%var_8564, dtype="float32") /* ty=Tensor[(4, 6, 8), float32] */;
  %932 = cast(%var_8565, dtype="float32") /* ty=Tensor[(4, 6, 8), float32] */;
  %933 = power(%929, %930) /* ty=Tensor[(4, 6, 8), float64] */;
  %934 = log10(%931) /* ty=Tensor[(4, 6, 8), float32] */;
  %935 = asin(%932) /* ty=Tensor[(4, 6, 8), float32] */;
  (%933, %934, %935)
}

def @func_8452(%var_8438: Tensor[(99), float32]) -> (Tensor[(99), float32], Tensor[(11, 1, 9), float64], Tensor[(5, 10, 13), float64]) {
  %936 = cast(%var_8438, dtype="float32") /* ty=Tensor[(99), float32] */;
  %937 = reshape(%936, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float32] */;
  %938 = @func_5760(%937) /* ty=(Tensor[(11, 1, 9), float32], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) */;
  %939 = %938.0;
  %940 = cast(%939, dtype="float64") /* ty=Tensor[(11, 1, 9), float64] */;
  %941 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  %942 = cast(%941, dtype="float64") /* ty=Tensor[(5, 10, 13), float64] */;
  %943 = asinh(%940) /* ty=Tensor[(11, 1, 9), float64] */;
  %944 = atan(%942) /* ty=Tensor[(5, 10, 13), float64] */;
  (%var_8438, %943, %944)
}

def @func_9896(%var_9885: Tensor[(12, 4, 4), float64], %var_9891: Tensor[(1056), float64], %var_9892: Tensor[(132), uint16], %var_9894: Tensor[(576), uint16]) -> (Tensor[(12, 4, 4), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(132), uint16], int64, Tensor[(576), uint16]) {
  %945 = cast(%var_9885, dtype="float64") /* ty=Tensor[(12, 4, 4), float64] */;
  %946 = cast(%var_9891, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %947 = cast(%var_9892, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %948 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %949 = cast(%var_9894, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %950 = reshape(%946, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %951 = reshape(%947, newshape=[3, 44]) /* ty=Tensor[(3, 44), uint16] */;
  %952 = reshape(%948, newshape=[]) /* ty=int64 */;
  %953 = reshape(%949, newshape=[576]) /* ty=Tensor[(576), uint16] */;
  %954 = @func_5500(%950, %951, %952, %953) /* ty=(Tensor[(15, 13, 6), bool], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(8448), uint64], Tensor[(8, 1, 16), bool], int64, Tensor[(128), int64], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(1056), float64], Tensor[(576), uint16]) */;
  %955 = log10(%945) /* ty=Tensor[(12, 4, 4), float64] */;
  %956 = %954.11;
  (%955, %956, %var_9891, %var_9892, 1 /* ty=int64 */, %var_9894)
}

def @func_10688() -> Tensor[(5, 10, 13), float64] {
  %957 = @func_9375() /* ty=(Tensor[(5, 10, 13), float64],) */;
  %957.0
}

def @func_11579() -> (Tensor[(5, 10, 13), float64],) {
  @func_11577() /* ty=(Tensor[(5, 10, 13), float64],) */
}

def @func_9786(%var_9781: int64, %var_9782: Tensor[(6, 96), uint16], %var_9783: Tensor[(1, 84), float32], %var_9784: Tensor[(1350), int64], %var_9785: Tensor[(288), float64]) -> (Tensor[(135), bool], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(135), bool], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(6, 96), float64], Tensor[(3, 450), int64], Tensor[(1, 84), float32], Tensor[(1350), int64], Tensor[(288), float64], Tensor[(6, 96), bool]) {
  %995 = fn (%var_9685: int64, %var_9686: Tensor[(6, 96), uint16], %var_9738: Tensor[(1, 84), float32], %var_9739: Tensor[(1350), int64], %var_9740: Tensor[(288), float64]) -> (Tensor[(135), bool], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(135), bool], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(6, 96), float64], Tensor[(3, 450), int64], Tensor[(1, 84), float32], Tensor[(1350), int64], Tensor[(288), float64], Tensor[(6, 96), bool]) {
    %958 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
    %959 = cast(meta[relay.Constant][80] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %960 = cast(meta[relay.Constant][81] /* ty=Tensor[(3, 44), uint16] */, dtype="uint16") /* ty=Tensor[(3, 44), uint16] */;
    %961 = cast(%var_9685, dtype="int64") /* ty=int64 */;
    %962 = cast(%var_9686, dtype="uint16") /* ty=Tensor[(6, 96), uint16] */;
    %963 = reshape(%959, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
    %964 = reshape(%960, newshape=[3, 44]) /* ty=Tensor[(3, 44), uint16] */;
    %965 = reshape(%961, newshape=[]) /* ty=int64 */;
    %966 = reshape(%962, newshape=[576]) /* ty=Tensor[(576), uint16] */;
    %967 = @func_5500(%963, %964, %965, %966) /* ty=(Tensor[(15, 13, 6), bool], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(8448), uint64], Tensor[(8, 1, 16), bool], int64, Tensor[(128), int64], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(1056), float64], Tensor[(576), uint16]) */;
    %968 = @func_9016() /* ty=(Tensor[(135), bool],) */;
    %969 = cast(meta[relay.Constant][82] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %970 = reshape(%969, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), float32] */;
    %971 = cast(%var_9686, dtype="float64") /* ty=Tensor[(6, 96), float64] */;
    %972 = cast(%var_9738, dtype="float32") /* ty=Tensor[(1, 84), float32] */;
    %973 = cast(%var_9739, dtype="int64") /* ty=Tensor[(1350), int64] */;
    %974 = cast(%var_9740, dtype="float64") /* ty=Tensor[(288), float64] */;
    %975 = reshape(%972, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %976 = reshape(%973, newshape=[3, 450]) /* ty=Tensor[(3, 450), int64] */;
    %977 = reshape(%974, newshape=[72, 4]) /* ty=Tensor[(72, 4), float64] */;
    %978 = @func_9107(%975, %976, %977) /* ty=(Tensor[(5, 10, 13), bool], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(3, 450), int64], Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(72, 4), float64]) */;
    %979 = cast(%var_9686, dtype="uint8") /* ty=Tensor[(6, 96), uint8] */;
    %980 = cast(%var_9685, dtype="uint8") /* ty=uint8 */;
    %981 = multiply(%979, %980) /* ty=Tensor[(6, 96), uint8] */;
    %982 = cast(%981, dtype="float64") /* ty=Tensor[(6, 96), float64] */;
    %983 = log2(%982) /* ty=Tensor[(6, 96), float64] */;
    %984 = cast(%981, dtype="bool") /* ty=Tensor[(6, 96), bool] */;
    %985 = shape_of(%983, dtype="int32") /* ty=Tensor[(2), int32] */;
    %986 = cast(%983, dtype="bool") /* ty=Tensor[(6, 96), bool] */;
    %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %988 = %958.1;
    %989 = %967.11;
    %990 = %968.0;
    %991 = @func_673(%970) /* ty=Tensor[(10, 6, 11), float32] */;
    %992 = sqrt(%971) /* ty=Tensor[(6, 96), float64] */;
    %993 = %978.3;
    %994 = less(%986, %987) /* ty=Tensor[(6, 96), bool] */;
    (%988, %989, meta[relay.Constant][80] /* ty=Tensor[(1056), float64] */, meta[relay.Constant][81] /* ty=Tensor[(3, 44), uint16] */, %990, %991, meta[relay.Constant][82] /* ty=Tensor[(660), float32] */, %992, %993, %var_9738, %var_9739, %var_9740, %994)
  };
  %995(%var_9781, %var_9782, %var_9783, %var_9784, %var_9785) /* ty=(Tensor[(135), bool], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(3, 44), uint16], Tensor[(135), bool], Tensor[(10, 6, 11), float32], Tensor[(660), float32], Tensor[(6, 96), float64], Tensor[(3, 450), int64], Tensor[(1, 84), float32], Tensor[(1350), int64], Tensor[(288), float64], Tensor[(6, 96), bool]) */
}

def @func_11864(%var_11861: Tensor[(715, 3), float32]) -> (Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(11, 15, 13), float32], Tensor[(715, 3), float32]) {
  %996 = @func_8473() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %997 = @func_9016() /* ty=(Tensor[(135), bool],) */;
  %998 = cast(%var_11861, dtype="float32") /* ty=Tensor[(715, 3), float32] */;
  %999 = reshape(%998, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %1000 = @func_11081(%999) /* ty=(Tensor[(11, 15, 13), float32],) */;
  %1001 = %996.0;
  %1002 = %997.0;
  %1003 = %1000.0;
  (%1001, %1002, %1003, %var_11861)
}

def @func_12857() -> (Tensor[(5, 10, 13), float32],) {
  %1005 = fn () -> (Tensor[(5, 10, 13), float32],) {
    %1004 = @func_8612() /* ty=Tensor[(5, 10, 13), float32] */;
    (%1004,)
  };
  %1005() /* ty=(Tensor[(5, 10, 13), float32],) */
}

def @func_5033(%var_5031: Tensor[(9, 5, 15), float32], %var_5032: float64) -> (Tensor[(9, 5, 15), float32], Tensor[(16, 9, 4), uint16], Tensor[(12, 48), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) {
  @func_5029(%var_5031, %var_5032) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(16, 9, 4), uint16], Tensor[(12, 48), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */
}

def @func_14025(%var_14020: Tensor[(1078), float32], %var_14021: Tensor[(140, 1), float32], %var_14022: Tensor[(1200), bool], %var_14023: Tensor[(4, 264), float64], %var_14024: Tensor[(1936), int32]) -> (Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(5, 10, 13), float32], Tensor[(5, 3, 8), float32], Tensor[(15, 10, 9), int64], Tensor[(1078), float32], Tensor[(99), float32], Tensor[(1350), int64], float64, Tensor[(1536), float64], Tensor[(140, 1), float32], Tensor[(1200), bool], Tensor[(45), float64], Tensor[(468, 1), int16], Tensor[(576), uint16], Tensor[(4, 264), float64], Tensor[(1936), int32]) {
  %1039 = fn (%var_13993: Tensor[(1078), float32], %var_14006: Tensor[(140, 1), float32], %var_14007: Tensor[(1200), bool], %var_14013: Tensor[(4, 264), float64], %var_14014: Tensor[(1936), int32]) -> (Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(5, 10, 13), float32], Tensor[(5, 3, 8), float32], Tensor[(15, 10, 9), int64], Tensor[(1078), float32], Tensor[(99), float32], Tensor[(1350), int64], float64, Tensor[(1536), float64], Tensor[(140, 1), float32], Tensor[(1200), bool], Tensor[(45), float64], Tensor[(468, 1), int16], Tensor[(576), uint16], Tensor[(4, 264), float64], Tensor[(1936), int32]) {
    %1006 = @func_13635() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(15, 11, 3), float32], Tensor[(495), float32]) */;
    %1007 = @func_8311() /* ty=(Tensor[(5, 10, 13), float32],) */;
    %1008 = @func_12819() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(10, 6, 11), float32], Tensor[(660), float32]) */;
    %1009 = cast(%var_13993, dtype="float32") /* ty=Tensor[(1078), float32] */;
    %1010 = cast(meta[relay.Constant][83] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
    %1011 = cast(meta[relay.Constant][84] /* ty=Tensor[(1350), int64] */, dtype="int64") /* ty=Tensor[(1350), int64] */;
    %1012 = reshape(%1009, newshape=[1078]) /* ty=Tensor[(1078), float32] */;
    %1013 = reshape(%1010, newshape=[1, 99]) /* ty=Tensor[(1, 99), float32] */;
    %1014 = reshape(%1011, newshape=[1350, 1]) /* ty=Tensor[(1350, 1), int64] */;
    %1015 = @func_8173(%1012, %1013, %1014) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(10, 2, 5), bool], Tensor[(100), uint32], Tensor[(1, 1, 3), bool], float32, Tensor[(1078), float32], Tensor[(5, 10, 13), float64], Tensor[(9, 15, 1), float32], Tensor[(16, 8), int64], Tensor[(11, 1, 9), float32], Tensor[(1, 99), float32], Tensor[(15, 10, 9), int64], Tensor[(1350, 1), int64]) */;
    %1016 = cast(meta[relay.Constant][85] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %1017 = cast(%var_14006, dtype="float32") /* ty=Tensor[(140, 1), float32] */;
    %1018 = cast(%var_14007, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %1019 = cast(meta[relay.Constant][86] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
    %1020 = reshape(%1016, newshape=[12, 8, 16]) /* ty=Tensor[(12, 8, 16), float64] */;
    %1021 = reshape(%1017, newshape=[5, 28]) /* ty=Tensor[(5, 28), float32] */;
    %1022 = reshape(%1018, newshape=[1200]) /* ty=Tensor[(1200), bool] */;
    %1023 = reshape(%1019, newshape=[45]) /* ty=Tensor[(45), float64] */;
    %1024 = @func_4464(%1020, %1021, %1022, %1023) /* ty=(Tensor[(12, 8, 16), float64], Tensor[(10, 12, 10), int64], Tensor[(120), int32], Tensor[(5, 28), float32], Tensor[(1200), bool], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056), float64], Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64]) */;
    %1025 = cast(meta[relay.Constant][87] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
    %1026 = cast(%var_14013, dtype="float64") /* ty=Tensor[(4, 264), float64] */;
    %1027 = cast(%var_14014, dtype="int32") /* ty=Tensor[(1936), int32] */;
    %1028 = reshape(%1025, newshape=[576]) /* ty=Tensor[(576), uint16] */;
    %1029 = reshape(%1026, newshape=[1, 1056]) /* ty=Tensor[(1, 1056), float64] */;
    %1030 = reshape(%1027, newshape=[1936]) /* ty=Tensor[(1936), int32] */;
    %1031 = @func_8724(%1028, %1029, %1030) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(16, 9, 4), uint16], Tensor[(576), uint16], Tensor[(1, 1056), float64], Tensor[(150, 1), float32], Tensor[(468, 1), int16], Tensor[(176), int32], Tensor[(1936), int32], Tensor[(150, 1), float32]) */;
    %1032 = %1006.0;
    %1033 = @func_10555() /* ty=Tensor[(135), bool] */;
    %1034 = %1007.0;
    %1035 = %1008.0;
    %1036 = %1015.11;
    %1037 = %1024.9;
    %1038 = %1031.5;
    (%1032, %1033, %1034, %1035, %1036, %var_13993, meta[relay.Constant][83] /* ty=Tensor[(99), float32] */, meta[relay.Constant][84] /* ty=Tensor[(1350), int64] */, %1037, meta[relay.Constant][85] /* ty=Tensor[(1536), float64] */, %var_14006, %var_14007, meta[relay.Constant][86] /* ty=Tensor[(45), float64] */, %1038, meta[relay.Constant][87] /* ty=Tensor[(576), uint16] */, %var_14013, %var_14014)
  };
  %1039(%var_14020, %var_14021, %var_14022, %var_14023, %var_14024) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(5, 10, 13), float32], Tensor[(5, 3, 8), float32], Tensor[(15, 10, 9), int64], Tensor[(1078), float32], Tensor[(99), float32], Tensor[(1350), int64], float64, Tensor[(1536), float64], Tensor[(140, 1), float32], Tensor[(1200), bool], Tensor[(45), float64], Tensor[(468, 1), int16], Tensor[(576), uint16], Tensor[(4, 264), float64], Tensor[(1936), int32]) */
}

def @func_10640() -> (Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) {
  %1040 = @func_8371() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %1041 = %1040.0;
  %1042 = @func_10495() /* ty=Tensor[(8, 10, 2), float64] */;
  (%1041, %1042)
}

def @func_11270(%var_11266: Tensor[(12, 11, 14), uint32], %var_11267: Tensor[(12, 11, 14), uint32], %var_11268: float32, %var_11269: Tensor[(1078), float32]) -> (Tensor[(12, 11, 14), uint8], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056, 1), float64], Tensor[(1078), float32], Tensor[(1, 1, 3), float32]) {
  %1070 = fn (%var_11214: Tensor[(12, 11, 14), uint32], %var_11215: Tensor[(12, 11, 14), uint32], %var_11248: float32, %var_11249: Tensor[(1078), float32]) -> (Tensor[(12, 11, 14), uint8], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056, 1), float64], Tensor[(1078), float32], Tensor[(1, 1, 3), float32]) {
    %1043 = cast(%var_11215, dtype="bool") /* ty=Tensor[(12, 11, 14), bool] */;
    %1044 = shape_of(%var_11214, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1045 = cast(%var_11214, dtype="bool") /* ty=Tensor[(12, 11, 14), bool] */;
    %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1047 = greater(%1045, %1046) /* ty=Tensor[(12, 11, 14), bool] */;
    %1048 = cast(%var_11215, dtype="uint8") /* ty=Tensor[(12, 11, 14), uint8] */;
    %1049 = shape_of(%1047, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1050 = cast(%1047, dtype="uint8") /* ty=Tensor[(12, 11, 14), uint8] */;
    %1051 = dyn.reshape(%1048, %1049, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1052 = cast(meta[relay.Constant][88] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
    %1053 = cast(meta[relay.Constant][88] /* ty=Tensor[(576), uint16] */, dtype="uint16") /* ty=Tensor[(576), uint16] */;
    %1054 = cast(meta[relay.Constant][89] /* ty=Tensor[(1056, 1), float64] */, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
    %1055 = reshape(%1052, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
    %1056 = reshape(%1053, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), uint16] */;
    %1057 = reshape(%1054, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
    %1058 = @func_2252(%1055, %1056, %1057) /* ty=(Tensor[(16, 9, 4), uint16], Tensor[(11, 12, 8), float64], Tensor[(1056), float64]) */;
    %1059 = cast(%var_11248, dtype="float32") /* ty=float32 */;
    %1060 = cast(%var_11249, dtype="float32") /* ty=Tensor[(1078), float32] */;
    %1061 = reshape(%1059, newshape=[]) /* ty=float32 */;
    %1062 = reshape(%1060, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), float32] */;
    %1063 = @func_3525(%1061, %1062) /* ty=(Tensor[(14, 7, 11), float32], Tensor[(1, 1, 3), bool]) */;
    %1064 = %1063.1;
    %1065 = cast(%1064, dtype="float32") /* ty=Tensor[(1, 1, 3), float32] */;
    %1066 = cast(%var_11248, dtype="float32") /* ty=float32 */;
    %1067 = left_shift(%1050, %1051) /* ty=Tensor[(12, 11, 14), uint8] */;
    %1068 = %1058.1;
    %1069 = floor_divide(%1065, %1066) /* ty=Tensor[(1, 1, 3), float32] */;
    (%1067, %1068, meta[relay.Constant][88] /* ty=Tensor[(576), uint16] */, meta[relay.Constant][89] /* ty=Tensor[(1056, 1), float64] */, %var_11249, %1069)
  };
  %1070(%var_11266, %var_11267, %var_11268, %var_11269) /* ty=(Tensor[(12, 11, 14), uint8], Tensor[(11, 12, 8), float64], Tensor[(576), uint16], Tensor[(1056, 1), float64], Tensor[(1078), float32], Tensor[(1, 1, 3), float32]) */
}

def @func_10642() -> (Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) {
  @func_10640() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(8, 10, 2), float64]) */
}

def @func_9018() -> (Tensor[(135), bool],) {
  @func_9016() /* ty=(Tensor[(135), bool],) */
}

def @func_3574(%var_3572: Tensor[(15, 10, 9), int64], %var_3573: Tensor[(15, 10, 9), int64]) -> Tensor[(15, 10, 9), int64] {
  %1075 = fn (%var_3557: Tensor[(15, 10, 9), int64], %var_3558: Tensor[(15, 10, 9), int64]) -> Tensor[(15, 10, 9), int64] {
    %1071 = cast(%var_3558, dtype="int64") /* ty=Tensor[(15, 10, 9), int64] */;
    %1072 = shape_of(%var_3557, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1073 = cast(%var_3557, dtype="int64") /* ty=Tensor[(15, 10, 9), int64] */;
    %1074 = dyn.reshape(%1071, %1072, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    bitwise_or(%1073, %1074) /* ty=Tensor[(15, 10, 9), int64] */
  };
  %1075(%var_3572, %var_3573) /* ty=Tensor[(15, 10, 9), int64] */
}

def @func_11784(%var_11782: Tensor[(128), int64]) -> (Tensor[(5, 10, 13), float64], Tensor[(135), float32], int64, Tensor[(128), int64]) {
  @func_11781(%var_11782) /* ty=(Tensor[(5, 10, 13), float64], Tensor[(135), float32], int64, Tensor[(128), int64]) */
}

def @func_673(%var_658: Tensor[(10, 6, 11), float32]) -> Tensor[(10, 6, 11), float32] {
  %1076 = cast(%var_658, dtype="float32") /* ty=Tensor[(10, 6, 11), float32] */;
  %1077 = cos(%1076) /* ty=Tensor[(10, 6, 11), float32] */;
  %1078 = cast(%1077, dtype="float32") /* ty=Tensor[(10, 6, 11), float32] */;
  log2(%1078) /* ty=Tensor[(10, 6, 11), float32] */
}

def @func_8455(%var_8453: Tensor[(99), float32]) -> (Tensor[(99), float32], Tensor[(11, 1, 9), float64], Tensor[(5, 10, 13), float64]) {
  @func_8452(%var_8453) /* ty=(Tensor[(99), float32], Tensor[(11, 1, 9), float64], Tensor[(5, 10, 13), float64]) */
}

def @func_10690() -> Tensor[(5, 10, 13), float64] {
  @func_10688() /* ty=Tensor[(5, 10, 13), float64] */
}

def @func_12698(%var_12696: float64, %var_12697: Tensor[(135), bool]) -> (Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64], Tensor[(135), int16]) {
  %1092 = fn (%var_12683: float64, %var_12690: Tensor[(135), bool]) -> (Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64], Tensor[(135), int16]) {
    %1079 = cast(%var_12683, dtype="float64") /* ty=float64 */;
    %1080 = cast(meta[relay.Constant][90] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
    %1081 = reshape(%1079, newshape=[]) /* ty=float64 */;
    %1082 = reshape(%1080, newshape=[9, 5, 1]) /* ty=Tensor[(9, 5, 1), float64] */;
    %1083 = @func_4182(%1081, %1082) /* ty=(Tensor[(9, 5, 1), bool],) */;
    %1084 = @func_9016() /* ty=(Tensor[(135), bool],) */;
    %1085 = %1084.0;
    %1086 = cast(%var_12690, dtype="int16") /* ty=Tensor[(135), int16] */;
    %1087 = shape_of(%1085, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1088 = cast(%1085, dtype="int16") /* ty=Tensor[(135), int16] */;
    %1089 = dyn.reshape(%1086, %1087, newshape=[]) /* ty=Tensor[(?), int16] */;
    %1090 = %1083.0;
    %1091 = right_shift(%1088, %1089) /* ty=Tensor[(135), int16] */;
    (%1090, %var_12683, meta[relay.Constant][90] /* ty=Tensor[(45), float64] */, %1091)
  };
  %1092(%var_12696, %var_12697) /* ty=(Tensor[(9, 5, 1), bool], float64, Tensor[(45), float64], Tensor[(135), int16]) */
}

def @func_12731() -> (Tensor[(5, 10, 13), float32],) {
  %1095 = fn () -> (Tensor[(5, 10, 13), float32],) {
    %1093 = @func_7754() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(135), bool], Tensor[(468), int16]) */;
    %1094 = %1093.0;
    (%1094,)
  };
  %1095() /* ty=(Tensor[(5, 10, 13), float32],) */
}

def @func_14213(%var_14175: Tensor[(100), uint32], %var_14209: Tensor[(1, 84), float32], %var_14211: Tensor[(8, 36), float64]) -> (Tensor[(5, 10, 13), float32], Tensor[(100), uint32], Tensor[(10, 2, 5), uint64], Tensor[(7, 2, 6), float32], Tensor[(1, 84), float32], Tensor[(1350), int64], Tensor[(8, 36), float64]) {
  %1096 = cast(%var_14175, dtype="uint32") /* ty=Tensor[(100), uint32] */;
  %1097 = reshape(%1096, newshape=[10, 2, 5]) /* ty=Tensor[(10, 2, 5), uint32] */;
  %1098 = @func_6223(%1097) /* ty=Tensor[(10, 2, 5), bool] */;
  %1099 = cast(meta[relay.Constant][91] /* ty=Tensor[(10, 2, 5), bool] */, dtype="uint64") /* ty=Tensor[(10, 2, 5), uint64] */;
  %1100 = shape_of(%1098, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1101 = cast(%1098, dtype="uint64") /* ty=Tensor[(10, 2, 5), uint64] */;
  %1102 = dyn.reshape(%1099, %1100, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1103 = cast(%var_14209, dtype="float32") /* ty=Tensor[(1, 84), float32] */;
  %1104 = cast(meta[relay.Constant][92] /* ty=Tensor[(1350), int64] */, dtype="int64") /* ty=Tensor[(1350), int64] */;
  %1105 = cast(%var_14211, dtype="float64") /* ty=Tensor[(8, 36), float64] */;
  %1106 = reshape(%1103, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %1107 = reshape(%1104, newshape=[3, 450]) /* ty=Tensor[(3, 450), int64] */;
  %1108 = reshape(%1105, newshape=[72, 4]) /* ty=Tensor[(72, 4), float64] */;
  %1109 = @func_9107(%1106, %1107, %1108) /* ty=(Tensor[(5, 10, 13), bool], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(3, 450), int64], Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(72, 4), float64]) */;
  %1110 = @func_11305() /* ty=Tensor[(5, 10, 13), float32] */;
  %1111 = bitwise_and(%1101, %1102) /* ty=Tensor[(10, 2, 5), uint64] */;
  %1112 = %1109.1;
  (%1110, %var_14175, %1111, %1112, %var_14209, meta[relay.Constant][92] /* ty=Tensor[(1350), int64] */, %var_14211)
}

def @func_5964(%var_5959: Tensor[(13, 14, 3), uint16], %var_5960: Tensor[(13, 14, 3), uint16]) -> Tensor[(13, 14, 3), uint16] {
  %1113 = cast(%var_5960, dtype="uint16") /* ty=Tensor[(13, 14, 3), uint16] */;
  %1114 = shape_of(%var_5959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1115 = cast(%var_5959, dtype="uint16") /* ty=Tensor[(13, 14, 3), uint16] */;
  %1116 = dyn.reshape(%1113, %1114, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%1115, %1116) /* ty=Tensor[(13, 14, 3), uint16] */
}

def @func_10607() -> (Tensor[(5, 10, 13), float32], Tensor[(15, 2, 5), float32], Tensor[(150), float32], Tensor[(468), int16]) {
  @func_10605() /* ty=(Tensor[(5, 10, 13), float32], Tensor[(15, 2, 5), float32], Tensor[(150), float32], Tensor[(468), int16]) */
}

def @func_12132() -> Tensor[(5, 10, 13), float32] {
  %1117 = fn () -> Tensor[(5, 10, 13), float32] {
    @func_9510() /* ty=Tensor[(5, 10, 13), float32] */
  };
  %1117() /* ty=Tensor[(5, 10, 13), float32] */
}

def @func_10455(%var_10454: Tensor[(6, 6, 4), uint16]) -> Tensor[(6, 6, 4), uint16] {
  %1122 = fn (%var_10448: Tensor[(6, 6, 4), uint16]) -> Tensor[(6, 6, 4), uint16] {
    %1118 = cast(meta[relay.Constant][93] /* ty=Tensor[(6, 6, 4), uint16] */, dtype="uint16") /* ty=Tensor[(6, 6, 4), uint16] */;
    %1119 = shape_of(%var_10448, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1120 = cast(%var_10448, dtype="uint16") /* ty=Tensor[(6, 6, 4), uint16] */;
    %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    maximum(%1120, %1121) /* ty=Tensor[(6, 6, 4), uint16] */
  };
  %1122(%var_10454) /* ty=Tensor[(6, 6, 4), uint16] */
}

def @func_9871(%var_9867: Tensor[(468), int16], %var_9868: Tensor[(176), int32]) -> (Tensor[(5, 10, 13), float64], Tensor[(468), int16], Tensor[(468), int16], Tensor[(176), int32], Tensor[(1936), int32]) {
  %1123 = cast(%var_9867, dtype="int16") /* ty=Tensor[(468), int16] */;
  %1124 = cast(%var_9868, dtype="int32") /* ty=Tensor[(176), int32] */;
  %1125 = cast(meta[relay.Constant][94] /* ty=Tensor[(1936), int32] */, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %1126 = reshape(%1123, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %1127 = reshape(%1124, newshape=[176]) /* ty=Tensor[(176), int32] */;
  %1128 = reshape(%1125, newshape=[1936]) /* ty=Tensor[(1936), int32] */;
  %1129 = @func_7837(%1126, %1127, %1128) /* ty=(Tensor[(5, 10, 13), float32], Tensor[(468), int16], Tensor[(150, 1), float32], Tensor[(468), int16], Tensor[(11, 16, 11), float64], Tensor[(176), int32], Tensor[(1936), int32]) */;
  %1130 = @func_9066() /* ty=Tensor[(5, 10, 13), float64] */;
  %1131 = %1129.1;
  (%1130, %1131, %var_9867, %var_9868, meta[relay.Constant][94] /* ty=Tensor[(1936), int32] */)
}

def @func_13374(%var_13346: Tensor[(5, 10, 13), float32], %var_13366: Tensor[(1, 56), float32], %var_13367: Tensor[(1350), float32], %var_13368: Tensor[(132), uint16]) -> (Tensor[(5, 10, 13), bool], Tensor[(288), float64], Tensor[(1, 56), float32], Tensor[(1350), float32], Tensor[(132), uint16], Tensor[(288), float64], Tensor[(45, 1), float64]) {
  %1132 = @func_7873() /* ty=Tensor[(5, 10, 13), float32] */;
  %1133 = cast(%var_13346, dtype="bool") /* ty=Tensor[(5, 10, 13), bool] */;
  %1134 = shape_of(%1132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1135 = cast(%1132, dtype="bool") /* ty=Tensor[(5, 10, 13), bool] */;
  %1136 = dyn.reshape(%1133, %1134, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1137 = cast(%var_13366, dtype="float32") /* ty=Tensor[(1, 56), float32] */;
  %1138 = cast(%var_13367, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %1139 = cast(%var_13368, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %1140 = cast(meta[relay.Constant][95] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1141 = cast(meta[relay.Constant][96] /* ty=Tensor[(45, 1), float64] */, dtype="float64") /* ty=Tensor[(45, 1), float64] */;
  %1142 = reshape(%1137, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %1143 = reshape(%1138, newshape=[675, 2]) /* ty=Tensor[(675, 2), float32] */;
  %1144 = reshape(%1139, newshape=[132]) /* ty=Tensor[(132), uint16] */;
  %1145 = reshape(%1140, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %1146 = reshape(%1141, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %1147 = @func_11001(%1142, %1143, %1144, %1145, %1146) /* ty=(Tensor[(468), int16], Tensor[(7, 2, 4), float32], Tensor[(56), float32], Tensor[(11, 12, 8), float64], Tensor[(5, 10, 13), float32], Tensor[(675, 2), float32], Tensor[(132), uint16], Tensor[(675), float32], Tensor[(132), uint16], Tensor[(10, 6, 11), float32], Tensor[(84), float32], Tensor[(288), float64], float64, Tensor[(45), float64]) */;
  %1148 = greater(%1135, %1136) /* ty=Tensor[(5, 10, 13), bool] */;
  %1149 = %1147.11;
  (%1148, %1149, %var_13366, %var_13367, %var_13368, meta[relay.Constant][95] /* ty=Tensor[(288), float64] */, meta[relay.Constant][96] /* ty=Tensor[(45, 1), float64] */)
}

def @func_5422(%var_5420: Tensor[(15, 2, 5), float32], %var_5421: Tensor[(468), int16]) -> (Tensor[(15, 2, 5), float32], Tensor[(135), bool], Tensor[(468), int16]) {
  @func_5418(%var_5420, %var_5421) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(135), bool], Tensor[(468), int16]) */
}

def @func_9107(%var_9093: Tensor[(84), float32], %var_9094: Tensor[(3, 450), int64], %var_9099: Tensor[(72, 4), float64]) -> (Tensor[(5, 10, 13), bool], Tensor[(7, 2, 6), float32], Tensor[(84), float32], Tensor[(3, 450), int64], Tensor[(5, 10, 13), float32], Tensor[(16, 3, 6), float64], Tensor[(72, 4), float64]) {
  %1150 = @func_8311() /* ty=(Tensor[(5, 10, 13), float32],) */;
  %1151 = %1150.0;
  %1152 = cast(meta[relay.Constant][97] /* ty=Tensor[(5, 10, 13), float32] */, dtype="bool") /* ty=Tensor[(5, 10, 13), bool] */;
  %1153 = shape_of(%1151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1154 = cast(%1151, dtype="bool") /* ty=Tensor[(5, 10, 13), bool] */;
  %1155 = dyn.reshape(%1152, %1153, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1156 = cast(%var_9093, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1157 = cast(%var_9093, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1158 = cast(%var_9094, dtype="int64") /* ty=Tensor[(3, 450), int64] */;
  %1159 = reshape(%1156, newshape=[7, 2, 6]) /* ty=Tensor[(7, 2, 6), float32] */;
  %1160 = reshape(%1157, newshape=[7, 2, 6]) /* ty=Tensor[(7, 2, 6), float32] */;
  %1161 = reshape(%1158, newshape=[1350]) /* ty=Tensor[(1350), int64] */;
  %1162 = @func_6030(%1159, %1160, %1161) /* ty=(Tensor[(7, 2, 6), bool], Tensor[(7, 2, 6), float32], Tensor[(15, 10, 9), int64], Tensor[(1350), int64]) */;
  %1163 = cast(%var_9099, dtype="float64") /* ty=Tensor[(72, 4), float64] */;
  %1164 = cast(%var_9099, dtype="float64") /* ty=Tensor[(72, 4), float64] */;
  %1165 = reshape(%1163, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float64] */;
  %1166 = reshape(%1164, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float64] */;
  %1167 = @func_7135(%1165, %1166) /* ty=(Tensor[(16, 3, 6), float64],) */;
  %1168 = logical_and(%1154, %1155) /* ty=Tensor[(5, 10, 13), bool] */;
  %1169 = %1162.1;
  %1170 = @func_8612() /* ty=Tensor[(5, 10, 13), float32] */;
  %1171 = %1167.0;
  (%1168, %1169, %var_9093, %var_9094, %1170, %1171, %var_9099)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen631/build/output.py:2731: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen631/build/output.py", line 2736, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(660) tvmgen_default_fused_cast_cast_reshape_not_equal_kernel0(signed char* __restrict__ T_not_equal, uchar* __restrict__ placeholder, uchar* __restrict__ placeholder1) {
  T_not_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) != ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


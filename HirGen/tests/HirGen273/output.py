import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_188 = relay.var("var_188", dtype = "float32", shape = (13, 15, 5))#candidate|188|(13, 15, 5)|var|float32
uop_189 = relay.atanh(var_188.astype('float32')) # shape=(13, 15, 5)
output = uop_189
output2 = uop_189
func_220 = relay.Function([var_188,], output)
mod['func_220'] = func_220
mod = relay.transform.InferType()(mod)
var_221 = relay.var("var_221", dtype = "float32", shape = (13, 15, 5))#candidate|221|(13, 15, 5)|var|float32
output = func_220(var_221)
func_222 = relay.Function([var_221], output)
mutated_mod['func_222'] = func_222
mutated_mod = relay.transform.InferType()(mutated_mod)
var_397 = relay.var("var_397", dtype = "float32", shape = (8, 3, 5))#candidate|397|(8, 3, 5)|var|float32
uop_398 = relay.asinh(var_397.astype('float32')) # shape=(8, 3, 5)
uop_400 = relay.sqrt(var_397.astype('float32')) # shape=(8, 3, 5)
func_220_call = mod.get_global_var('func_220')
func_222_call = mutated_mod.get_global_var('func_222')
var_403 = relay.var("var_403", dtype = "float32", shape = (975,))#candidate|403|(975,)|var|float32
call_402 = func_220_call(relay.reshape(var_403.astype('float32'), [13, 15, 5]))
call_404 = func_220_call(relay.reshape(var_403.astype('float32'), [13, 15, 5]))
bop_407 = relay.divide(uop_398.astype('float64'), relay.reshape(uop_400.astype('float64'), relay.shape_of(uop_398))) # shape=(8, 3, 5)
uop_417 = relay.sin(uop_400.astype('float64')) # shape=(8, 3, 5)
func_220_call = mod.get_global_var('func_220')
func_222_call = mutated_mod.get_global_var('func_222')
call_422 = func_220_call(relay.reshape(call_402.astype('float32'), [13, 15, 5]))
call_423 = func_220_call(relay.reshape(call_402.astype('float32'), [13, 15, 5]))
output = relay.Tuple([call_402,var_403,bop_407,uop_417,call_422,])
output2 = relay.Tuple([call_404,var_403,bop_407,uop_417,call_423,])
func_424 = relay.Function([var_397,var_403,], output)
mod['func_424'] = func_424
mod = relay.transform.InferType()(mod)
var_425 = relay.var("var_425", dtype = "float32", shape = (8, 3, 5))#candidate|425|(8, 3, 5)|var|float32
var_426 = relay.var("var_426", dtype = "float32", shape = (975,))#candidate|426|(975,)|var|float32
output = func_424(var_425,var_426,)
func_427 = relay.Function([var_425,var_426,], output)
mutated_mod['func_427'] = func_427
mutated_mod = relay.transform.InferType()(mutated_mod)
var_444 = relay.var("var_444", dtype = "uint8", shape = (14, 6, 15))#candidate|444|(14, 6, 15)|var|uint8
const_445 = relay.const([[[-7,2,-7,-7,10,4,-6,-3,-6,-8,9,6,8,6,-2],[-6,7,6,-8,-10,-2,4,5,-8,6,-9,3,4,1,-5],[-4,-4,9,-4,-1,-9,1,3,-9,-8,-7,9,-2,3,-2],[-8,1,9,2,-9,10,-7,1,10,1,4,-4,-9,-7,2],[3,6,-4,4,-8,10,-2,2,9,1,9,1,10,2,4],[-5,-3,-1,-5,2,9,-3,3,4,7,-5,3,-2,5,10]],[[-5,6,-7,-5,-3,8,-3,5,-4,7,4,-8,7,10,3],[3,7,5,8,6,9,5,5,-5,9,-2,5,10,1,3],[-9,9,-6,10,6,-7,-2,-4,-2,-7,4,-2,1,-8,1],[4,10,8,2,1,-7,-1,-9,-7,-6,2,4,-7,-7,7],[10,9,-9,-5,-6,6,-5,4,2,6,6,9,3,4,3],[-9,-3,5,7,10,8,-9,-5,-8,-4,6,-2,9,1,7]],[[-5,8,-3,1,-5,-5,8,-6,7,-9,-8,-3,10,-10,-5],[6,1,1,9,6,-4,-4,5,5,-6,2,-1,-8,7,3],[-3,6,-5,10,9,-5,-6,-7,-3,-2,-9,2,-1,5,8],[-4,9,7,-8,-5,4,2,-2,-3,-1,3,3,-4,-8,4],[6,-7,9,8,-2,4,6,-5,5,3,-5,8,4,4,-10],[7,6,1,-9,-3,-6,6,5,10,1,3,-2,6,2,9]],[[8,-8,-2,-2,-9,-4,3,7,-3,-7,-2,4,3,1,2],[7,-8,4,5,-4,4,9,10,-5,-5,-1,3,3,7,-1],[-6,7,-3,-3,-1,-3,5,-2,2,-7,-10,-5,4,-10,2],[8,-2,-9,9,5,10,-5,-4,9,-4,2,-7,-10,-5,-1],[-6,4,-7,-4,6,6,-9,-3,10,6,10,-10,5,7,-2],[6,1,-5,2,5,-9,5,6,9,-10,9,-5,7,9,-9]],[[-6,9,2,6,-3,3,5,-10,-6,6,5,5,4,-9,6],[4,-2,9,-6,9,9,-1,-10,5,9,-1,5,-2,8,2],[9,7,-10,7,-3,-7,-10,5,7,-7,9,1,-4,5,-6],[5,4,9,8,1,-2,-4,-5,2,8,10,-7,-5,6,4],[-4,9,1,-1,-2,2,9,6,-4,-7,8,-2,-10,8,7],[-10,-1,9,5,-2,-2,-2,-8,-6,9,-7,-5,-3,-7,3]],[[-5,5,1,7,-5,4,-3,10,-7,4,-2,-2,-1,3,8],[-2,-10,8,-10,-9,3,-2,-2,-8,9,-6,4,-1,2,2],[10,2,10,3,-4,5,-8,4,9,10,5,-2,-3,-3,-5],[-7,-9,-6,9,-9,2,2,2,9,-1,1,4,-6,-4,-3],[6,-7,9,5,5,-4,-9,6,-4,3,5,-1,7,5,8],[2,8,-10,5,8,1,-6,8,-2,-8,-10,-10,3,10,-1]],[[-7,-2,-6,-3,-6,-10,3,-7,-9,-5,-5,1,6,5,3],[-4,-2,-7,-7,-7,1,1,-3,-7,7,-9,-5,-10,-4,8],[-2,10,-9,2,7,-8,-9,4,-7,-4,1,9,-4,10,5],[-7,-10,-2,-2,-2,6,-9,1,6,-2,-4,-4,2,3,5],[-10,6,-9,-7,-5,-10,-3,3,-2,-3,7,-1,2,8,5],[-5,8,-3,4,-10,10,-7,10,-6,8,9,7,-8,-3,-6]],[[2,1,5,-8,3,7,9,8,-5,-2,-4,-10,-8,1,9],[-8,-7,2,3,2,-10,-1,2,-6,4,9,8,-10,-2,-8],[6,-1,-6,-8,6,5,8,5,-5,-8,9,-8,9,-3,-9],[-1,8,-10,6,3,10,8,-6,-10,5,2,5,3,10,-4],[-9,-5,-6,3,-5,-4,6,4,6,-5,-4,-5,6,5,-3],[4,6,1,6,-4,10,-5,3,-8,-5,-9,7,10,-3,-1]],[[5,-10,-7,-3,-5,-6,-6,-9,2,7,10,8,2,-3,4],[1,3,10,-4,-5,-1,-4,-1,5,2,-1,-10,10,-7,-6],[8,10,-1,-1,5,-4,4,1,-10,-1,2,5,-10,-3,7],[-10,1,6,10,8,3,10,-9,5,1,4,-7,-3,-3,8],[10,-4,-7,2,8,-3,-4,-8,-5,-4,10,-8,-8,-6,1],[-8,-1,1,-5,-5,5,-3,10,3,6,-4,7,5,-4,6]],[[-6,-8,9,5,2,-4,-8,7,-8,-5,-10,-3,10,-4,-9],[-2,5,2,-7,7,-8,10,9,4,-8,4,-8,6,-4,-2],[1,10,4,-1,10,2,-10,-6,10,8,8,7,-10,-4,5],[9,-2,3,2,6,-3,-4,1,-4,9,-10,-6,5,-1,-2],[6,4,4,-3,5,-10,6,-3,-3,7,-1,-9,3,4,-2],[2,-10,6,-8,-10,-8,1,-6,2,-1,1,5,8,-3,-4]],[[9,-5,-4,2,-1,5,7,-5,10,4,6,3,7,-9,-4],[-7,1,-1,-4,7,9,7,7,1,-7,9,2,5,3,-10],[-9,9,9,-4,-5,10,-2,8,-9,7,3,1,7,-5,-2],[-9,-9,10,8,-3,-7,-7,-10,-8,-5,6,10,5,3,-2],[-2,5,-9,1,1,2,-7,-8,-3,7,-1,6,-10,3,-1],[-8,3,-6,8,-2,1,8,-1,6,-3,2,6,9,8,-9]],[[6,4,9,-4,7,-10,9,10,-6,-6,9,-5,7,-1,6],[6,5,1,-9,-5,-8,7,-4,-9,-3,-9,2,-7,8,6],[6,-3,-1,7,7,6,-8,7,2,-2,9,-7,-5,-2,2],[4,1,1,2,-1,3,-8,-2,2,-9,9,6,-2,10,-6],[3,2,-9,-5,-4,-2,4,5,5,10,-4,5,-4,-2,3],[9,-8,-10,-6,8,1,-5,1,1,-9,-1,9,-2,-5,7]],[[4,5,-7,-9,-2,-2,-6,-10,-9,3,3,1,-4,-4,9],[8,-5,5,8,4,-10,2,3,5,4,-10,-5,-8,-3,-7],[-4,-8,-6,3,-9,-5,-3,-9,1,-8,3,2,8,5,2],[8,7,-5,10,-8,-6,10,-9,6,2,-5,-6,10,-6,-7],[-7,4,-2,-8,8,-1,-8,-2,9,-9,5,-5,8,5,2],[-2,-1,-4,5,5,-9,-6,9,-6,-9,1,-8,5,4,1]],[[5,5,-2,-9,3,10,10,9,-5,10,-1,-8,-9,-8,-4],[-9,4,5,4,-3,-7,7,1,9,-2,-2,1,-3,-4,3],[1,8,-5,3,6,6,-3,3,10,9,-2,-4,-2,7,-9],[-5,2,8,-8,-9,-1,10,-8,7,6,2,9,-4,5,9],[2,6,9,3,9,6,7,-3,10,4,5,5,-4,-7,10],[4,-9,-6,-8,-10,1,8,-1,-4,10,10,-6,1,5,10]]], dtype = "uint8")#candidate|445|(14, 6, 15)|const|uint8
bop_446 = relay.greater_equal(var_444.astype('bool'), relay.reshape(const_445.astype('bool'), relay.shape_of(var_444))) # shape=(14, 6, 15)
func_424_call = mod.get_global_var('func_424')
func_427_call = mutated_mod.get_global_var('func_427')
const_454 = relay.const([3.228521,8.578137,-4.019594,-9.277643,-7.166550,2.013051,6.813006,-2.893461,-7.020368,-7.761292,0.479348,0.373429,5.161564,-6.448963,8.077267,-7.849262,3.263147,-4.304915,-6.443389,2.212092,7.811201,5.297024,-7.254227,-6.893221,-2.193995,-7.261593,-1.493727,-2.881985,2.790985,-0.637575,-6.251137,5.430145,-3.681398,8.280788,-6.485344,-3.354892,-5.141326,8.993380,3.493868,8.851432,-1.944196,-3.275747,2.621025,7.239538,8.420016,9.911976,-5.858647,-5.756749,8.418562,-9.768441,-4.225582,6.973733,-4.681904,-8.350977,5.859746,0.491463,8.502287,-1.771167,-5.060148,3.882737,0.088718,-7.873076,-4.909899,-3.558618,-6.660384,0.791590,2.475054,1.394220,6.534837,-4.993573,-9.331129,5.523400,2.580340,-7.910681,4.090820,0.132369,2.147292,-0.757427,-6.467853,6.722935,1.491329,-8.135237,4.759885,-4.662576,2.927344,7.985583,2.106939,4.882161,-4.970598,-5.159750,-7.661810,-9.617145,7.689099,7.764719,-9.519114,4.100561,7.675026,-7.963077,3.799647,-6.954236,3.079812,-0.967549,-8.822143,1.239042,-0.639769,-2.437584,-0.269326,-9.423901,0.192620,6.276335,-1.870212,-1.008799,-2.829878,-7.360281,9.227079,-9.172173,2.095785,9.421025,4.198145,-8.416797], dtype = "float32")#candidate|454|(120,)|const|float32
const_455 = relay.const([-5.957743,5.635750,-4.203142,1.332768,7.716426,-0.845460,-6.819239,-1.631823,7.216149,9.174399,8.998973,-2.746238,9.168918,-8.736552,4.714423,-6.327946,2.832585,-6.315930,3.105897,-8.947223,0.927599,-7.598168,-0.910912,2.693541,-9.606993,-6.066935,-4.231498,-3.841657,8.854638,-7.889431,8.898826,-8.340944,-7.803899,-5.205124,-4.300427,5.181632,3.190762,-5.510803,-8.074740,-8.771300,-3.053053,-6.795033,2.350601,-2.424664,-8.247990,-7.792316,-6.056940,-8.444887,3.498814,-3.159641,-4.484115,7.507861,9.375649,9.977072,4.353779,-5.856833,-3.315711,-7.198936,7.893910,-4.291261,4.320651,7.961888,-7.767406,9.793808,-8.920810,3.212391,1.811274,0.943856,-8.991790,-2.750968,-0.604717,7.931655,9.695568,-1.253902,9.804371,-1.171843,2.134592,-9.105090,-2.901763,9.350218,1.074653,7.106227,4.007819,9.012309,3.160739,-4.772563,8.666305,-0.360272,4.476935,1.181601,1.942640,-1.225373,-7.632958,-4.323623,-9.309492,9.616311,0.174426,-8.598622,7.268024,-6.106875,9.254643,-7.055637,4.044047,3.266925,-1.706564,1.507288,0.825549,-8.118674,-6.075153,-2.020122,6.021135,-9.482595,-2.319239,8.742514,-6.167930,-5.605545,-8.258479,-8.740109,5.660422,6.578795,1.030583,0.218694,-5.702534,-0.495878,1.147892,4.275540,-9.363418,8.388487,-3.630100,3.514652,-5.954096,-0.245119,-4.574514,-2.020193,-4.734864,8.835887,-5.995292,-7.608042,7.122802,1.708374,4.626948,4.567372,-9.823272,-9.748248,5.693325,-9.266286,2.026317,3.268162,1.237291,1.700205,1.477002,6.671149,-2.225873,-8.994634,-1.973606,-5.107823,-2.608067,-9.661629,-8.759169,0.548240,-0.615685,8.848916,-2.478627,8.749186,8.160480,7.796942,-2.483132,-5.069845,1.566647,-8.792565,5.443711,1.280944,-6.058327,-1.873824,1.761708,-1.126038,6.713045,4.167637,-1.186543,-3.060976,-5.542358,-1.590993,-0.495257,2.626727,1.575426,-7.543044,-5.639090,-0.729205,5.092963,6.276613,-7.608839,-9.420998,1.116115,6.341900,-9.097915,1.200642,-2.325367,1.670399,3.374330,-2.591206,-7.243199,5.711426,-1.143259,2.460049,-5.449536,-4.784643,0.963213,5.208563,1.462652,-3.177156,-5.819584,-8.402134,-7.743321,9.762674,-8.403443,-0.645237,-4.702727,0.525395,-3.524802,-6.564073,2.143357,7.275536,3.655991,1.230207,-9.602209,7.637635,-8.058734,1.849711,5.130103,-8.237243,-7.985521,9.778709,-2.239927,6.929445,6.702531,9.873905,4.164448,9.401540,1.589721,0.515541,4.831957,-8.274759,-5.099155,-8.048761,1.122541,3.844651,5.656955,-6.184996,2.258258,-3.732265,-5.661606,1.407307,9.275651,-9.620501,9.684564,-5.807342,-6.663219,-7.135665,-6.907745,0.073281,2.394886,1.236926,8.528012,-3.412193,1.244581,3.582176,8.863041,4.159225,-9.093229,7.262299,2.395744,-3.334649,8.970172,-7.706716,3.286527,3.814767,-3.207790,4.558619,-5.526237,-7.500276,6.305436,3.645459,-6.676114,0.158226,5.089815,4.594795,-3.748534,-2.040208,-1.620610,9.360643,-4.906953,8.826859,3.396272,-5.696360,-3.537235,3.699304,5.216540,-3.737775,-8.438012,-8.324517,9.404265,-9.599985,2.812686,6.174872,-2.466476,3.238163,1.616630,4.998374,0.298956,-4.557786,7.807353,8.975239,6.891901,-2.057821,8.381275,9.411370,-9.000584,-1.692994,-6.037772,-8.978838,-3.110654,-6.349404,-8.689215,-5.374052,6.235219,0.227596,0.596979,8.775247,7.717712,-9.629062,-4.380817,9.114416,9.196686,-6.944829,6.772988,-3.295774,-4.940547,3.060275,2.409630,9.331144,-3.801943,4.170359,3.334711,-1.650966,-0.388605,-9.282590,-2.010309,-6.671057,9.053202,-7.427389,4.238446,1.585606,0.793161,-8.613505,-8.811003,4.385458,-7.501799,-7.992589,-0.550458,-8.598707,8.218782,3.157840,-1.173961,-8.168462,9.914681,-8.476238,0.262171,-2.718744,-9.192545,2.304177,-8.968609,-2.681999,4.658803,5.893548,9.334638,3.256053,-7.088727,1.757789,-0.509884,-0.302637,-6.473970,-9.528827,-1.469992,-8.652619,0.462119,-5.764021,-3.727946,-2.609033,6.625527,7.217382,-6.024887,-2.048180,-8.830453,9.545265,6.472656,-5.746501,2.182313,8.140481,9.423238,-6.589757,-0.695920,3.829238,3.141510,-6.624587,5.385538,-1.829029,-7.159857,-8.549645,-3.382272,7.081336,5.992302,8.940687,-5.826478,0.086429,-1.556286,-1.572231,-6.683490,6.104798,-8.500642,-5.343967,-9.120372,1.640404,8.507310,1.195964,6.407428,0.001436,-7.092174,0.108955,-9.056374,-2.563345,2.272093,8.128991,-8.984252,5.159469,-8.226762,-2.120768,-4.055461,-5.002567,6.008493,5.495289,-0.202268,-8.576912,2.405023,-6.652041,-8.513310,-2.602421,2.675243,2.868225,4.510179,-6.614005,-6.252668,-7.438840,-3.925525,6.597609,-4.467016,4.688714,2.078367,7.307958,5.777468,-5.455962,-0.773268,0.295412,-0.430517,-8.238155,-3.975237,-2.535969,9.526750,2.551238,7.809840,-7.440207,-9.576888,-3.349148,3.350319,-4.671262,0.432484,-9.902286,-9.986306,-3.477892,-3.626525,-7.120486,6.862528,8.764536,4.881444,8.221064,3.524352,-1.643039,5.307248,-8.602593,-3.092843,2.816879,5.244240,6.946912,-7.463107,4.907507,-6.330520,1.499916,-5.179003,5.151506,5.779633,-1.533766,-0.051537,-7.302085,4.588329,-0.501249,-0.698557,-8.067107,7.883322,8.533116,4.631693,-5.859454,-2.876350,5.463092,-0.950439,-9.712749,4.278857,1.282695,5.646719,1.632164,-4.350927,-6.789924,-6.269527,-7.680030,-6.210871,1.057943,-6.466173,-3.525028,6.218253,2.976560,-0.537292,2.284242,-7.462510,9.131822,7.583104,9.376214,-5.375788,-9.365244,-7.584398,-1.014063,-9.318620,-2.476558,9.922623,3.861443,-9.635622,-8.944845,-9.010699,8.659718,-7.197431,-8.671551,5.545972,0.426573,0.236464,-0.213645,4.870750,-8.711522,-3.411839,-6.068695,9.731529,-4.760054,8.502923,-0.349876,2.539603,-7.879644,-0.356543,8.137482,-2.372409,0.601077,-4.438211,6.341430,-5.368518,5.722912,-7.454691,-0.495083,2.900956,-5.239581,-3.322412,-5.905760,-1.376422,1.304108,3.553785,-0.986007,-6.601868,4.819801,-4.708957,-2.300004,-4.935694,5.010976,0.120648,6.265815,2.350209,3.102845,-0.243716,8.799858,3.275204,-0.646898,2.235560,-6.081174,-7.300397,-6.591959,5.712660,-7.087839,-3.779189,-7.661671,3.180884,-0.510663,3.209524,-4.878589,9.007980,-8.711963,0.454054,9.992484,-6.247532,-3.179010,5.180671,3.369002,7.647998,-4.655284,6.106390,8.511702,-1.667369,3.781623,-2.855184,-9.552047,7.884099,-7.719062,7.263482,6.970306,8.958981,-9.380100,-5.787216,8.192622,5.815822,6.930257,5.063287,-5.535803,-9.633231,0.853187,1.100315,-5.302656,5.779716,5.162874,-1.388699,-2.808488,-2.512056,-6.363960,-0.148911,-1.793176,-3.844672,-2.996667,0.591295,3.429432,7.132852,-5.172212,-5.244752,3.730745,8.689643,-2.444687,-8.476383,5.523198,-5.785062,4.870782,-8.649826,-0.995899,-9.522676,-8.114194,5.383846,8.396910,-9.270389,-2.402558,9.196731,-3.998258,-9.929016,-3.466858,5.093837,-6.264533,-5.255859,-1.455431,4.109382,1.772976,-5.065567,4.279635,8.109647,-0.977749,-3.934198,3.580575,-9.879855,-8.884740,-6.749520,1.160003,3.925088,6.910179,-5.131593,-3.866462,5.073083,6.525135,2.153513,2.584713,9.360797,-0.628394,-0.719057,1.114173,-9.673849,-7.292649,5.053062,-4.355556,4.046155,-4.547110,-3.812270,5.850661,-3.893417,4.775627,-3.182551,-8.729501,-4.591595,0.324740,-5.125339,2.669199,6.346760,-6.511957,-3.941941,3.750921,-5.349428,7.652617,-2.455542,-0.832559,7.165858,-3.359768,5.651788,3.095247,3.871729,-1.757652,-6.985064,-5.736892,1.512622,-6.465825,-9.899718,8.536714,3.187660,7.116302,-5.477442,-3.757368,5.524483,0.678732,8.725794,-8.077916,4.687260,3.936716,-5.536102,2.213073,-2.475815,7.391813,6.645585,4.010944,0.022885,-3.140950,8.365106,4.017315,5.645874,5.017723,-5.067022,-1.210284,-9.788165,2.986361,2.646943,0.184964,-4.926394,-5.961075,8.459026,-5.039055,-8.153112,-0.565908,4.023954,-7.698129,-1.836357,6.205656,2.251858,6.844262,5.475577,0.489148,8.861065,-0.447776,8.567035,-2.935628,0.056551,-5.240402,7.338248,4.111830,-3.236426,-1.136388,3.366141,7.952947,0.124314,-8.449119,4.395115,3.436701,-5.562477,-7.353588,9.170364,2.034924,3.772107,-2.660002,-2.137134,4.121388,-9.215421,-5.749592,-1.166452,-9.019891,-2.106513,-6.552666,-1.712239,-8.527378,-4.428887,5.855002,2.755907,-9.886369,-9.129002,-9.871452,-7.761546,5.481696,3.128809,-4.290644,-0.026452,8.244512,3.307308,-2.912147,0.256656,7.247778,-0.292418,9.165075,6.950634,-9.868043,2.456995,-8.585207,1.147831,-7.793533,0.981863,-4.308737,0.461386,-7.297954,3.212070,9.293168,-2.418845,-8.016914,3.648272,-1.518062,8.054140,-5.253372,3.839531,-4.280793,-8.162339,0.961346,6.987896,1.139612,3.771916,-1.852000,9.543180,-5.112046,-5.414275,-0.838145,-0.447990,-4.413573,7.925569,-5.141814,3.286399,3.913598,4.705879,-5.203859,-7.264752,-0.435768,0.176929,8.919400,-1.814735,-4.818346,-7.179351,-5.800757,-9.620966,7.333314,8.195057,-9.972379,-6.879741,-3.038228,1.850247,2.673647,9.047955,3.017687,-3.813221,5.306131,-4.340826,4.406505,-0.429886,-3.460639,-2.669623,-0.568216,7.575515,-5.035000,2.566479,-9.175317,5.224626,-2.699732,2.239526,-1.340913,-4.642132,-1.188342,0.262104,-6.025255,9.980687,-2.823520,-6.789536,6.203898,-9.972001,2.817448,-4.528903,-0.588307,3.921635,-9.028807,-6.896663,-6.339813,-4.907285,-3.005123,-3.345995,0.957085,6.255603,5.371716,1.240251,0.136636,0.524913,0.974183,-4.802859,2.109222,-4.481313,-5.295225,-2.667994,-0.591815,8.439905,7.405554,2.272830,6.072967,-4.067002,-4.552166,3.541276,1.295719,-8.682058,5.703962,-4.647372,6.379215,-8.791421,-5.106840,-8.628453,-5.638783,3.105490,-9.169740,-7.925492,9.526013,-3.484927,-4.584519,5.693129,-7.045699,-8.919311,8.111041,8.229983,-6.050343,-5.108585,-2.575508,2.722669,7.643775,-6.304589,2.030300,5.264573,-0.414245,-4.787590,-2.897072,-7.724367,7.240401,-0.382957,-6.871522,6.909378], dtype = "float32")#candidate|455|(975,)|const|float32
call_453 = relay.TupleGetItem(func_424_call(relay.reshape(const_454.astype('float32'), [8, 3, 5]), relay.reshape(const_455.astype('float32'), [975,]), ), 0)
call_456 = relay.TupleGetItem(func_427_call(relay.reshape(const_454.astype('float32'), [8, 3, 5]), relay.reshape(const_455.astype('float32'), [975,]), ), 0)
uop_459 = relay.sin(var_444.astype('float64')) # shape=(14, 6, 15)
output = relay.Tuple([bop_446,call_453,const_454,const_455,uop_459,])
output2 = relay.Tuple([bop_446,call_456,const_454,const_455,uop_459,])
func_461 = relay.Function([var_444,], output)
mod['func_461'] = func_461
mod = relay.transform.InferType()(mod)
var_462 = relay.var("var_462", dtype = "uint8", shape = (14, 6, 15))#candidate|462|(14, 6, 15)|var|uint8
output = func_461(var_462)
func_463 = relay.Function([var_462], output)
mutated_mod['func_463'] = func_463
mutated_mod = relay.transform.InferType()(mutated_mod)
var_476 = relay.var("var_476", dtype = "uint16", shape = (6, 3, 14))#candidate|476|(6, 3, 14)|var|uint16
var_477 = relay.var("var_477", dtype = "uint16", shape = (6, 3, 14))#candidate|477|(6, 3, 14)|var|uint16
bop_478 = relay.logical_xor(var_476.astype('uint16'), relay.reshape(var_477.astype('uint16'), relay.shape_of(var_476))) # shape=(6, 3, 14)
bop_494 = relay.bitwise_and(var_476.astype('uint64'), relay.reshape(bop_478.astype('uint64'), relay.shape_of(var_476))) # shape=(6, 3, 14)
uop_498 = relay.log10(bop_478.astype('float64')) # shape=(6, 3, 14)
func_424_call = mod.get_global_var('func_424')
func_427_call = mutated_mod.get_global_var('func_427')
var_502 = relay.var("var_502", dtype = "float32", shape = (120,))#candidate|502|(120,)|var|float32
const_503 = relay.const([[-4.784842,8.867227,8.062205],[9.273063,2.110537,-5.720723],[0.911918,-7.257123,-8.111226],[-9.061494,8.390640,5.184722],[2.500311,2.288143,-9.233481],[-4.217727,1.922796,8.017985],[7.226259,-6.538241,4.098721],[0.168449,7.091088,3.976598],[-7.950416,-4.619187,-8.926126],[-0.679440,-8.588798,2.920252],[-4.347438,7.417704,2.466480],[-8.130346,9.558508,-9.885277],[2.709576,5.188326,0.152121],[-5.607686,4.189840,8.493230],[-6.627335,9.749099,3.077873],[2.662443,-7.658025,-0.582793],[5.321846,5.335685,5.861292],[-6.610880,6.823196,3.137951],[-8.586048,6.640755,-9.881025],[-3.471997,-1.742950,-8.148278],[-4.559438,-4.908714,-1.772560],[1.238970,5.907522,1.933948],[-0.103431,-5.723754,0.304209],[-1.353223,0.368804,0.924138],[7.343924,6.745183,-1.067612],[6.286060,0.463290,1.486977],[-3.067082,-3.805563,1.430769],[-6.910818,6.402411,-0.190936],[-7.346646,-7.294048,-4.434540],[-1.714497,5.003902,0.322533],[5.112752,5.692598,-7.578452],[-0.239615,0.323879,7.730465],[-9.941269,-7.694136,-0.523384],[0.358577,9.999814,-7.204528],[4.584960,8.295906,-6.616699],[-9.957764,-3.588680,1.115250],[9.137423,1.669508,-6.931068],[1.048390,1.429844,-6.541452],[-6.076234,-7.207837,1.428644],[9.744551,0.103771,-1.314786],[-8.451978,6.594921,-2.122061],[3.991813,9.381227,-0.404998],[5.161656,-3.008836,1.276800],[-4.433717,-4.888896,5.678585],[-0.054920,7.345347,-5.957092],[3.893332,-0.212063,2.098355],[9.298854,-4.448037,7.602573],[-4.949003,8.975981,8.148017],[0.123546,-8.320165,3.580309],[-9.164596,8.159640,5.420039],[2.171107,-6.543383,-1.726656],[-3.997440,-1.318734,-4.883995],[6.424628,3.490166,8.722841],[8.459669,-8.135041,9.380674],[5.907073,1.372484,4.002202],[-3.555161,-3.315682,-2.254507],[-0.599105,-5.893335,-6.969240],[3.648095,-7.274808,-1.472029],[5.472217,-7.475641,9.528012],[8.328104,8.308902,2.473190],[-2.094666,7.637191,-3.568530],[6.307801,-6.107293,-5.876293],[-6.553427,-1.125275,-4.126588],[-2.144068,-8.576736,4.530010],[-0.787035,5.179128,-3.091660],[-4.339924,-6.612431,3.046949],[-9.969376,-9.424474,-4.819945],[9.456152,-2.772315,7.406497],[-3.639865,-2.071650,3.166146],[-3.344598,1.352183,1.389852],[3.499592,-1.510955,-1.130885],[-5.137426,-0.775860,1.869949],[0.744611,3.462563,3.537594],[-9.710924,-1.525189,-4.688722],[8.898717,-6.948725,-8.367530],[-3.685472,4.958478,-8.647796],[-3.561047,-0.045548,0.679326],[0.373622,-8.427455,-7.542304],[-2.222383,2.365864,7.635303],[-9.176942,5.292755,7.956646],[-3.676796,2.573902,-2.779137],[4.410692,-1.461916,9.931863],[-8.472521,5.737535,4.259459],[-2.053262,-1.889702,8.330059],[1.752458,-3.577148,-1.275992],[6.791165,5.012258,-6.291482],[-4.914900,-4.683017,-9.726972],[-5.019515,1.842283,5.631456],[8.826043,-8.018397,-7.919749],[0.874966,6.136356,-2.240216],[-2.032202,-1.547321,-7.403161],[9.819327,3.479259,3.754096],[-9.830679,-8.289500,5.301876],[-5.428336,0.939570,9.424432],[-0.631524,9.290529,-4.717900],[2.405625,1.381782,9.601062],[6.609122,-5.478019,-5.254963],[-3.441565,7.841683,-4.991588],[-3.360579,4.834933,1.194115],[6.790153,-7.872219,0.635579],[-7.648980,3.353610,2.894474],[6.140735,4.178504,5.069022],[-8.565017,-6.257252,-2.806198],[-5.530037,-4.884758,-8.285448],[-1.852305,4.777799,-8.695927],[-9.932267,-9.626983,0.997745],[-6.526099,-5.057743,-0.673227],[8.361591,7.556942,4.588102],[2.175224,-3.484509,8.496092],[3.047906,5.363548,-7.763665],[-0.657329,-9.426755,-9.259894],[-2.655289,5.198667,5.578687],[-7.840536,-8.967768,-2.866541],[7.894364,5.957482,1.536821],[-8.467964,7.696670,-8.240300],[2.543651,-8.426247,2.369014],[1.254729,8.774959,-5.283395],[3.729946,8.666619,-3.643689],[7.108404,4.122077,8.385366],[4.198198,-6.610654,1.001500],[9.589371,8.722132,1.201193],[-9.713215,-7.636197,9.479145],[-7.446554,0.974504,-3.519011],[-0.174153,3.761625,-6.798172],[-9.302981,-8.930714,-5.736846],[5.412787,-4.761156,2.380457],[5.729737,3.307365,3.073689],[-9.737179,6.890520,-0.198859],[1.592648,2.092634,-9.709283],[-2.950469,6.753742,0.159686],[-4.881426,6.401894,0.863985],[-2.985750,4.963650,-7.129164],[-3.020457,-4.159228,-0.342217],[4.236562,0.525390,-1.295655],[6.791889,4.109781,1.701272],[-3.193698,3.463855,5.989027],[7.915447,-8.691387,8.663098],[5.760803,9.815161,7.121447],[-8.022633,-0.866277,3.068853],[-5.272731,7.948776,8.508327],[-2.143339,-3.680719,-1.194735],[7.419642,-2.899782,-3.853998],[-8.350282,4.778730,9.911087],[-0.416237,-9.837151,-1.654867],[5.049148,-2.322333,-4.534099],[-2.139634,8.049056,-1.896223],[-8.483817,8.550879,7.642923],[-7.428909,-6.901940,-3.174249],[-2.341243,1.492450,1.557947],[-3.571556,-9.756374,3.735830],[-3.199676,-7.452172,-0.908539],[8.554400,-8.035097,2.928832],[-4.582984,1.579192,-8.907844],[0.245605,-9.621168,9.799155],[-6.928651,3.427061,-7.457109],[7.159459,-0.947831,-6.228310],[-7.468358,0.197865,1.485390],[8.387930,-6.454739,-3.196508],[-5.134935,9.738921,-1.981016],[-1.867770,-5.352959,-4.291111],[-6.788376,8.951775,8.945162],[3.424466,-9.579282,-6.965405],[-1.478704,1.643616,-8.418078],[1.956106,1.861814,-8.280309],[9.760031,-9.495615,-0.446477],[-5.374975,-0.157822,0.609752],[1.857769,-1.048527,6.792051],[9.494892,-8.601711,-5.260018],[-7.287294,2.375911,-7.792111],[-8.312837,-2.833655,1.420909],[4.412387,0.012566,6.753101],[0.801858,9.156017,-2.961430],[-1.169935,-3.334523,9.383669],[2.593912,-7.250394,5.589668],[-2.780964,-3.149482,9.522982],[6.454673,6.089162,-2.838572],[2.165925,-5.176427,9.350339],[7.722587,-9.096871,-3.306562],[-2.391796,-0.435206,-9.312270],[5.942861,1.223856,7.411193],[4.926734,0.376755,8.885499],[-4.084912,8.849592,-9.737916],[5.037449,-6.784931,1.658326],[1.369453,-6.601729,3.777279],[-1.734415,-0.710980,-5.430263],[-1.191007,-1.556220,2.826587],[4.910955,5.652528,-9.040342],[-4.420588,0.657180,2.950223],[0.492475,8.896921,-8.162936],[4.741930,6.973913,-8.809348],[2.494191,-8.388820,-9.856457],[-5.449244,5.566788,-3.696815],[3.242358,7.357213,0.310920],[8.688373,-6.077624,2.242843],[5.952150,0.593807,-8.293788],[9.172426,-7.691598,5.442531],[9.043396,-5.239060,2.203991],[-8.069452,1.999897,-9.559600],[-2.914735,-7.800880,-7.417501],[-9.926137,-4.142922,-8.350529],[4.915729,-4.096738,5.611367],[9.284623,7.390497,0.271949],[-5.393431,2.242875,-2.925656],[8.149947,-2.579607,2.175075],[1.510204,-2.918403,2.275403],[-4.718659,-9.871862,-7.472470],[-2.796197,-8.415321,6.800249],[9.725604,2.981727,-9.090358],[-5.144521,7.948512,5.152683],[5.606189,-8.688034,-8.722665],[-8.059166,-1.465546,9.023239],[5.972736,-2.748769,-2.475774],[9.965938,-5.978131,-4.121373],[-3.023973,-4.076196,1.727430],[-3.033872,-7.611857,9.696259],[-1.195264,7.591161,-0.093590],[2.722921,-7.223781,-9.168785],[-0.314881,-6.094937,-9.831603],[7.044419,5.175393,-7.584979],[3.127145,8.139855,7.546458],[-0.972281,3.680529,7.751412],[-4.240015,7.385404,-2.876035],[7.484654,7.802641,7.631541],[8.631910,8.728792,-9.099552],[6.565031,-6.988921,3.384145],[8.505109,-4.009359,7.261730],[1.835393,-5.263235,8.330811],[-6.447671,0.580777,-2.416493],[7.724430,2.555070,2.562494],[1.863575,0.970825,1.298458],[1.925401,-9.179796,8.630754],[3.232754,-4.347909,1.626873],[6.716897,-2.139871,-3.725163],[3.678355,-1.151406,-0.083068],[2.843133,2.274439,5.089319],[5.487889,5.563568,-5.663439],[-2.219251,8.475530,-7.009078],[-1.399513,-7.405637,-6.075755],[5.174633,7.099835,0.589048],[9.782687,7.764595,8.427357],[-7.622371,8.452812,2.762945],[-0.954752,-7.820613,-1.082407],[5.668576,-5.003716,1.314306],[-4.160060,-7.756620,5.396511],[2.967920,-1.121445,3.872138],[1.972244,7.741725,0.235644],[5.813392,-4.658986,-5.646002],[-2.517831,9.485822,4.711610],[5.103919,4.516929,0.796618],[2.015380,-7.303810,2.542455],[-8.621928,7.576458,-9.658754],[-4.203726,-1.843583,5.011057],[4.612897,-2.348567,-6.554759],[8.764028,8.804649,7.975002],[7.584650,4.333965,9.354598],[3.435811,-8.263664,5.141730],[-0.859489,-2.149210,-4.288727],[5.271436,2.198432,-8.406575],[7.136925,2.887783,-2.729670],[-6.374036,-9.255576,7.054685],[-5.428011,0.939974,1.689512],[0.833698,-0.643112,1.504038],[5.720060,-5.676499,-3.150142],[-3.883413,-2.858027,0.112934],[2.074021,3.196505,0.848279],[8.626208,9.112543,-1.742179],[6.701214,-2.258621,2.201141],[-4.211458,-7.103636,7.599811],[3.989635,1.545204,-9.588358],[-6.135558,-9.824925,2.656227],[5.674561,5.894702,0.681008],[4.349945,-3.626235,-1.409745],[0.465688,-2.388129,5.665638],[7.881857,-4.842604,-1.901098],[4.624579,-3.376012,-1.099845],[8.428022,-0.766229,9.027949],[0.094242,-2.563992,-4.411182],[9.294725,2.081163,-0.958572],[-5.073629,3.145139,-0.338702],[5.359240,-4.740769,2.518445],[3.418291,-2.580545,5.178926],[4.678164,1.652653,-5.904787],[-5.365945,7.214336,-2.978747],[-7.707826,1.095546,6.984518],[5.230549,7.867719,-2.667055],[6.757635,-9.651760,1.357119],[7.614484,-2.130420,-8.046368],[-5.350934,-7.020496,-7.655474],[3.973105,7.165038,-9.744589],[-8.208937,8.822133,8.244425],[-1.788007,8.092744,4.953815],[7.903101,3.016933,3.892063],[-0.665448,-8.032181,4.521307],[3.517297,0.156762,-0.344677],[3.271747,-8.100427,-7.510543],[-2.496432,-2.286327,8.850269],[-7.531142,-8.289434,-1.014966],[0.435065,8.356942,-3.876528],[-6.555367,-8.415447,-3.545501],[5.113782,1.917622,8.300707],[-6.693633,4.449935,9.313544],[-8.151376,6.322956,-9.148478],[-5.604262,-9.529640,1.548863],[-6.684616,8.049651,-1.308717],[0.070187,6.715996,0.530575],[5.631782,9.836830,-9.076365],[1.968459,-6.000470,7.630198],[3.984447,2.056861,3.863455],[-1.603500,-9.221707,-5.903308],[9.859878,5.035327,7.849769],[7.845352,-5.735333,0.929384],[-8.225464,3.551593,6.876429],[0.591054,-8.394537,-6.801560],[9.909843,5.820182,-9.930708],[-2.207782,-2.403976,2.455531],[-9.632344,-9.041228,5.182917],[6.736774,-5.322298,-7.064483],[7.662877,-1.677520,-5.238673],[-7.229040,3.554349,-1.178236],[6.828407,-1.352439,-0.818617],[2.916547,-7.137659,1.719055],[3.511868,5.682480,8.366489],[1.596416,9.726890,-8.729002],[0.753445,-6.432058,-2.326523],[-8.006377,1.448240,1.201990]], dtype = "float32")#candidate|503|(325, 3)|const|float32
call_501 = relay.TupleGetItem(func_424_call(relay.reshape(var_502.astype('float32'), [8, 3, 5]), relay.reshape(const_503.astype('float32'), [975,]), ), 3)
call_504 = relay.TupleGetItem(func_427_call(relay.reshape(var_502.astype('float32'), [8, 3, 5]), relay.reshape(const_503.astype('float32'), [975,]), ), 3)
uop_510 = relay.atanh(uop_498.astype('float64')) # shape=(6, 3, 14)
func_461_call = mod.get_global_var('func_461')
func_463_call = mutated_mod.get_global_var('func_463')
const_522 = relay.const([8,-7,-7,-4,-7,7,10,-2,7,-2,10,10,4,8,-6,10,-8,-10,-3,-8,-3,-10,-6,-5,-2,3,1,-1,-3,-10,4,10,-8,1,-7,2,3,-10,-6,1,5,9,-9,10,-3,-10,-2,-9,3,4,8,-9,-9,9,5,3,-7,-8,7,10,-8,-7,1,3,-5,-3,6,-3,10,-2,3,6,10,-8,-2,6,-9,2,-8,-3,3,-5,9,-6,1,7,-3,-6,7,-1,2,-10,-10,-10,-7,-1,-10,-9,-6,9,1,3,-9,9,3,-8,5,6,8,4,-9,-6,-3,10,-8,-9,5,4,-3,3,-1,2,6,-3,-4,-10,2,-3,-10,6,-2,-8,-7,2,-5,5,-5,-4,-7,-7,-6,5,4,-4,-1,-2,-3,9,-5,9,7,8,1,4,8,8,-10,-3,10,-9,-6,-3,3,1,4,-10,2,-4,-9,-2,10,3,2,2,-1,-3,2,-10,-8,5,-8,5,-10,-6,7,-7,7,-7,-4,-1,10,6,1,-6,-6,5,5,-6,10,5,-10,-4,-2,8,-10,3,-4,-1,-6,6,-8,-5,-10,8,-5,-7,7,3,-2,3,9,-1,6,8,9,-3,-4,9,-1,1,-2,-4,10,8,8,6,-9,2,1,9,-5,-6,-1,10,4,2,2,6,-3,5,-6,-1,-2,-2,5,2,4,-9,-2,10,2,5,8,-5,-6,4,-3,-10,-10,-5,-6,4,-4,-6,2,4,8,6,-3,-8,-3,-2,7,-9,-6,1,3,9,-6,6,3,-2,3,6,10,4,6,8,-10,2,5,-6,-9,-8,4,-5,-7,-7,-6,4,-6,-9,-8,6,6,-4,1,1,-8,7,6,8,-8,4,7,9,-8,-6,7,-4,9,-6,-1,10,-10,1,8,9,-4,1,-1,-5,-1,7,2,-1,-3,-1,5,-4,-10,-9,6,-6,1,4,-10,-4,9,-8,-5,1,-7,-10,6,5,9,-6,-4,-5,-2,8,7,4,3,4,3,6,8,2,10,-1,3,-3,-2,5,-7,-7,-5,8,-4,-8,10,9,-9,-3,8,7,-3,-10,7,10,-10,-8,-1,5,-1,-4,-6,-10,-2,4,-8,3,9,8,-1,-2,9,-6,-6,-8,5,-9,-5,-7,-1,8,2,-3,-5,9,-1,-6,10,-3,-4,-3,-10,-1,-1,-3,9,-2,-1,2,-7,-3,-9,-1,3,-5,-4,8,-3,1,7,-4,3,7,-2,3,9,10,-7,9,4,8,4,-1,7,9,-6,-2,3,-5,8,6,4,-7,6,2,10,7,-8,-1,10,10,-6,-5,10,6,7,-5,-6,3,-8,2,-5,-2,-7,9,-4,5,9,-9,-1,-9,4,9,-8,-4,7,6,4,6,-10,9,2,-4,-4,-4,-5,-3,-10,-1,-7,7,-8,6,1,-3,5,-7,-8,1,-1,8,9,6,-6,-10,-9,-6,1,1,2,-5,8,3,2,-1,-9,10,4,7,-1,4,-3,-7,10,6,-1,-8,-2,8,-7,8,2,5,-2,-6,9,-2,-8,-9,-8,2,-8,2,-1,4,1,-5,-10,9,-1,6,4,-6,-9,-5,-10,8,-5,-7,-1,4,3,-7,8,-4,2,2,-9,10,-1,-5,-10,-8,5,3,6,-10,-7,-3,-4,7,-8,1,7,-5,6,1,5,5,5,-6,5,2,-4,8,-2,1,4,-7,-5,1,-4,-9,2,-7,-10,-9,-10,7,-6,1,2,9,-5,-8,1,-10,-4,4,-3,-4,-3,-9,4,6,-3,-7,8,-2,4,-1,-1,-10,2,-10,4,-1,7,-1,-6,-10,-3,-3,-2,-3,-4,1,-7,-10,-6,7,6,-8,-6,5,-7,2,-3,2,1,-2,-2,-2,-8,10,-5,-4,5,-6,-3,4,8,-8,2,-6,5,-9,3,-8,4,-4,6,-1,-2,-3,-10,2,2,10,-2,-6,6,-6,7,-1,3,-9,3,-2,-7,-9,10,8,3,-8,6,-4,9,1,-3,6,-8,-6,7,8,-1,-2,8,4,7,8,6,-6,-1,3,-1,-1,6,-2,7,6,6,-10,-7,8,8,7,-8,-1,2,-3,4,2,3,-2,5,-8,-5,7,-5,-8,-1,-9,10,7,5,-4,4,-1,-1,9,3,7,8,-2,9,5,6,10,-5,7,5,-3,7,-9,-8,-4,-6,9,-7,6,-10,7,-9,2,-3,6,-8,10,4,6,8,1,3,7,-10,5,7,5,-10,-10,4,1,-6,9,-10,9,5,1,9,-9,2,10,7,-5,-2,9,4,10,-3,-1,-6,-9,2,10,-10,2,-4,-3,-8,7,5,8,10,-1,-8,5,5,-6,6,10,-4,7,-5,-8,-9,2,5,-7,-7,7,3,1,6,4,-3,7,7,7,4,-2,4,-9,4,-5,6,-10,2,6,-9,9,7,3,-9,3,-10,6,-10,5,3,-7,-10,10,10,-1,8,-3,5,6,-8,7,5,2,-10,-3,6,4,9,-1,7,8,-1,8,-8,-2,-5,-4,2,-10,-4,-5,-3,10,10,10,3,-5,-8,-2,1,-3,-1,-9,-5,-7,-1,3,1,7,5,3,5,2,-2,10,-6,-10,-1,2,-9,7,1,-6,-3,6,-10,6,8,9,-2,-3,-3,5,-1,10,-8,-10,6,5,-6,-1,-1,-2,-5,-7,1,5,-3,7,-9,-4,3,10,-7,-3,6,-1,-1,4,-3,2,2,-7,-8,-1,-1,-8,8,-8,-2,9,-4,-5,-3,-2,-3,-10,2,2,-10,-8,7,-7,-5,9,5,3,8,4,-8,-8,1,-6,5,-4,10,-6,-10,-1,8,-10,7,2,-3,9,-3,2,6,8,5,-8,3,-3,7,-8,3,-7,5,-8,-8,-10,7,-6,10,-6,-3,4,-8,-1,-1,3,-10,4,10,4,10,-8,7,-2,7,4,4,-7,6,-9,-10,-9,-3,-6,7,-2,5,6,3,9,-5,9,2,2,-6,3,5,8,8,-10,5,2,1,2,-5,3,5,-1,-10,4,-8,-3,2,-9,-7,-3,-3,4,4,-8,-6,-3,5,-7,1,-2,-10,-9,8,1,9,10,3,-5,-10,10,-8,-7,8,-7,-3,5,-5,6,-2,-9,-2,-4,2,2,6,8,-4,6,-6,9,3,-5,-8,-2,-7,-5,1,-4,1,-5,-9,-1,-7,-6,-2,-4,-1,-3,-9,1,-7,7,-8,-1,10,-5,6,-3,-3,-5,4,-9,-10,3,-9,-9,3,-2,-8,9,8,4,-10,-8,6,7,5,-2,-10,6,1,6,9,4,-1,-5,5,-5,-8,9,6,-1,-3,8,10,-3,-7,-5,-6,-4,-10,-10,-10,-1,7,10,7,6,8,5,6,-9], dtype = "uint8")#candidate|522|(1260,)|const|uint8
call_521 = relay.TupleGetItem(func_461_call(relay.reshape(const_522.astype('uint8'), [14, 6, 15])), 2)
call_523 = relay.TupleGetItem(func_463_call(relay.reshape(const_522.astype('uint8'), [14, 6, 15])), 2)
func_461_call = mod.get_global_var('func_461')
func_463_call = mutated_mod.get_global_var('func_463')
call_527 = relay.TupleGetItem(func_461_call(relay.reshape(const_522.astype('uint8'), [14, 6, 15])), 0)
call_528 = relay.TupleGetItem(func_463_call(relay.reshape(const_522.astype('uint8'), [14, 6, 15])), 0)
func_461_call = mod.get_global_var('func_461')
func_463_call = mutated_mod.get_global_var('func_463')
call_529 = relay.TupleGetItem(func_461_call(relay.reshape(const_522.astype('uint8'), [14, 6, 15])), 1)
call_530 = relay.TupleGetItem(func_463_call(relay.reshape(const_522.astype('uint8'), [14, 6, 15])), 1)
output = relay.Tuple([bop_494,call_501,var_502,const_503,uop_510,call_521,const_522,call_527,call_529,])
output2 = relay.Tuple([bop_494,call_504,var_502,const_503,uop_510,call_523,const_522,call_528,call_530,])
func_532 = relay.Function([var_476,var_477,var_502,], output)
mod['func_532'] = func_532
mod = relay.transform.InferType()(mod)
var_533 = relay.var("var_533", dtype = "uint16", shape = (6, 3, 14))#candidate|533|(6, 3, 14)|var|uint16
var_534 = relay.var("var_534", dtype = "uint16", shape = (6, 3, 14))#candidate|534|(6, 3, 14)|var|uint16
var_535 = relay.var("var_535", dtype = "float32", shape = (120,))#candidate|535|(120,)|var|float32
output = func_532(var_533,var_534,var_535,)
func_536 = relay.Function([var_533,var_534,var_535,], output)
mutated_mod['func_536'] = func_536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_649 = relay.var("var_649", dtype = "float64", shape = (7, 4, 4))#candidate|649|(7, 4, 4)|var|float64
uop_650 = relay.cosh(var_649.astype('float64')) # shape=(7, 4, 4)
output = uop_650
output2 = uop_650
func_659 = relay.Function([var_649,], output)
mod['func_659'] = func_659
mod = relay.transform.InferType()(mod)
mutated_mod['func_659'] = func_659
mutated_mod = relay.transform.InferType()(mutated_mod)
var_660 = relay.var("var_660", dtype = "float64", shape = (7, 4, 4))#candidate|660|(7, 4, 4)|var|float64
func_659_call = mutated_mod.get_global_var('func_659')
call_661 = func_659_call(var_660)
output = call_661
func_662 = relay.Function([var_660], output)
mutated_mod['func_662'] = func_662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_730 = relay.var("var_730", dtype = "uint32", shape = (5, 16, 9))#candidate|730|(5, 16, 9)|var|uint32
var_731 = relay.var("var_731", dtype = "uint32", shape = (5, 16, 9))#candidate|731|(5, 16, 9)|var|uint32
bop_732 = relay.right_shift(var_730.astype('uint32'), relay.reshape(var_731.astype('uint32'), relay.shape_of(var_730))) # shape=(5, 16, 9)
func_461_call = mod.get_global_var('func_461')
func_463_call = mutated_mod.get_global_var('func_463')
const_736 = relay.const([5,-10,9,8,-6,10,3,10,9,-5,-8,3,10,7,8,-2,1,-2,10,6,2,7,-1,3,1,-7,8,-2,-9,-4,-4,2,8,8,5,-3,1,-2,7,10,-5,8,6,-10,10,4,2,-1,-1,8,4,2,-3,6,2,-9,-5,-10,8,8,8,4,-9,2,-2,5,-6,-1,-1,-9,5,10,5,-2,4,1,-3,3,9,-5,8,7,9,2,-7,3,-7,3,-6,6,-7,3,-1,-6,-4,1,1,7,-10,-9,10,-10,-8,-10,1,4,3,10,6,6,6,-3,9,-6,10,5,-9,8,9,-2,6,-8,7,-4,-5,4,-8,-8,-8,-6,-2,-8,-6,-10,6,7,10,-8,-5,-10,3,-4,1,-9,-10,7,6,5,-2,8,7,-8,3,5,-10,-10,9,7,-8,8,1,-10,-1,-8,-9,2,4,-4,8,4,-4,-5,8,2,-6,4,8,-4,-6,-3,-1,-3,-5,-1,-8,-4,-9,7,9,-5,-2,4,-2,8,-5,5,5,2,-8,-4,-7,-1,7,8,-9,-3,-2,8,9,2,-8,9,-6,5,3,-2,-10,-9,-3,3,9,-3,-4,5,-9,-7,-5,-10,9,-6,-7,-5,3,5,2,-10,-5,4,-5,5,7,1,-10,4,6,-4,-10,3,-4,1,-6,8,5,-3,10,-2,-3,10,4,5,-4,7,9,-7,-8,-2,9,-8,-2,5,-2,-1,-2,8,-5,-7,1,10,6,6,8,-8,6,3,8,3,5,-5,-7,4,-6,-10,7,-9,-9,-4,-3,-4,-10,-8,-5,10,-7,8,10,7,-2,-2,-6,9,10,-4,8,1,-7,8,-1,3,-5,-5,4,10,-6,-5,7,-10,1,-7,2,-9,-8,10,-7,-9,-5,-9,4,-6,-4,-5,-7,8,-8,9,5,-8,4,2,10,-8,-8,5,8,4,-2,-5,-5,9,9,3,5,-7,-7,2,2,4,9,-2,9,-1,7,2,-10,-3,-10,-3,8,-3,10,-4,-7,2,10,-7,2,-1,-3,-8,5,-1,10,9,-5,4,-10,-8,9,-7,4,9,9,2,3,6,-3,-3,5,2,-4,5,-5,3,3,-4,-3,10,2,-5,-1,-5,1,9,1,6,-8,-1,4,-8,5,3,-6,7,4,-3,4,1,-7,1,-4,3,-10,4,10,2,-5,-1,-7,-8,-2,-7,-10,-4,-1,-5,4,6,2,-9,-5,8,-5,10,9,2,-1,-10,9,6,-8,6,8,-5,5,5,-4,-9,-3,-2,1,4,5,10,7,-6,8,-7,6,-9,8,1,6,-3,-3,1,-9,3,-6,-9,-1,-8,-9,-5,8,7,7,-10,-10,-2,-7,6,-8,1,-3,7,-5,3,9,-8,4,-5,-3,-4,9,5,-10,4,-1,-2,-5,-8,-3,2,-1,-10,-6,-5,-3,2,-6,-8,2,-2,6,5,2,-2,6,-8,-6,3,-5,-1,-7,10,3,-8,1,6,-6,9,-4,-3,-6,-9,-9,-4,-1,5,-9,-1,-5,7,-1,-3,4,4,-4,-2,8,-3,-4,-3,2,-2,3,1,-4,-3,-1,-1,2,-7,-4,7,8,1,6,6,-2,-7,4,2,-8,1,3,4,-9,2,-10,5,10,2,2,4,-8,10,10,-8,-8,8,2,9,-5,-5,1,-2,8,8,2,3,-4,-2,4,5,-2,5,4,-5,6,-5,2,1,3,-9,3,7,-4,2,-10,1,-9,-5,-2,-4,-4,7,-8,5,8,-6,-7,-8,3,-10,8,-4,8,2,2,10,4,-2,-8,4,3,8,-3,1,-6,-9,-2,1,-2,2,8,-2,3,-7,-2,-8,-10,-5,1,-9,8,-3,-10,-2,7,10,8,-2,-5,2,7,-4,-4,-10,-6,-2,-6,5,-1,-2,-1,-6,4,9,-6,-9,-1,-1,-2,10,9,-4,-8,5,-8,-8,7,9,3,-1,1,3,2,4,3,4,7,1,9,-5,-10,7,10,-1,3,1,1,-5,7,9,-3,-4,-2,-8,-10,9,7,-1,1,-9,3,10,3,9,5,10,2,10,10,5,10,-1,-10,-3,4,7,1,1,3,6,9,-7,1,-5,7,2,-5,-4,5,8,-7,-7,4,-4,8,-6,7,8,-3,10,4,-7,5,8,9,9,2,-6,-4,3,2,10,3,7,4,3,-7,9,-2,-2,-2,8,-7,-10,7,-4,3,8,6,1,1,8,-4,10,3,-8,-4,-10,-3,5,-4,-10,-5,-4,-2,-8,8,-2,2,-10,-5,3,9,4,4,3,-8,-6,1,-5,2,5,9,4,-9,-10,7,8,5,-9,1,6,4,6,3,-8,5,6,-1,7,7,8,9,9,8,-2,9,-10,-3,10,-8,-10,2,-6,6,-6,-9,6,-10,3,-4,-9,-4,-6,5,-2,4,3,7,2,-3,8,-3,-1,1,3,8,8,10,10,10,8,3,2,1,5,2,-7,10,-10,-9,-6,-2,10,8,7,1,4,7,5,-7,3,6,6,5,6,-8,2,7,-2,-9,5,-4,-5,2,-2,-10,10,-6,-1,2,-6,10,-10,9,3,3,-9,4,2,4,7,-9,-2,-3,6,8,4,10,-6,8,-7,5,7,-10,7,3,9,-3,6,2,1,-6,2,1,-4,-5,-9,9,-4,-5,4,-7,9,-4,5,-9,-7,-3,10,7,4,-7,6,9,8,1,1,4,5,6,-3,-8,7,-1,7,3,2,4,-7,-6,-6,-6,4,-8,-10,-10,-7,-7,-2,-3,8,2,-7,8,9,10,2,4,-8,6,5,2,6,8,8,1,-1,-8,1,-6,-3,-8,4,2,4,-3,5,3,-3,-3,6,8,9,6,1,10,10,-8,2,10,9,-7,7,8,-2,-2,5,6,6,-3,5,1,-5,-2,1,3,3,4,1,-1,-3,1,-5,-3,8,7,3,-9,-9,5,10,9,9,3,-5,3,9,9,9,-2,10,-10,-9,1,-1,7,-6,5,8,-7,4,3,4,-7,4,1,1,6,4,8,-6,5,9,-9,-1,2,-8,1,8,6,7,5,1,-10,3,-8,-2,2,4,10,10,1,8,-2,9,-8,7,8,9,3,-5,10,8,1,-3,-9,3,-1,-1,-9,10,9,-3,7,5,1,-5,-9,2,4,1,6,-3,-6,1,9,3,1,4,-7,8,-1,8,5,-10,-3,2,4,8,4,-5,1,10,3,9,-5,9,-9,5,-7,5,-5,-3,4,9,1,2,4,-5,8,-9,1,10,-5,6,-10,-5,-7,4,-2,-3,8,6,-9,-1,4,-9,-7,7,-4,7,-5,8,3,-7], dtype = "uint8")#candidate|736|(1260,)|const|uint8
call_735 = relay.TupleGetItem(func_461_call(relay.reshape(const_736.astype('uint8'), [14, 6, 15])), 4)
call_737 = relay.TupleGetItem(func_463_call(relay.reshape(const_736.astype('uint8'), [14, 6, 15])), 4)
output = relay.Tuple([bop_732,call_735,const_736,])
output2 = relay.Tuple([bop_732,call_737,const_736,])
func_744 = relay.Function([var_730,var_731,], output)
mod['func_744'] = func_744
mod = relay.transform.InferType()(mod)
mutated_mod['func_744'] = func_744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_744_call = mutated_mod.get_global_var('func_744')
var_746 = relay.var("var_746", dtype = "uint32", shape = (5, 16, 9))#candidate|746|(5, 16, 9)|var|uint32
var_747 = relay.var("var_747", dtype = "uint32", shape = (5, 16, 9))#candidate|747|(5, 16, 9)|var|uint32
call_745 = func_744_call(var_746,var_747,)
output = call_745
func_748 = relay.Function([var_746,var_747,], output)
mutated_mod['func_748'] = func_748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_798 = relay.var("var_798", dtype = "float32", shape = (4, 12, 2))#candidate|798|(4, 12, 2)|var|float32
var_799 = relay.var("var_799", dtype = "float32", shape = (4, 12, 2))#candidate|799|(4, 12, 2)|var|float32
bop_800 = relay.floor_mod(var_798.astype('float32'), relay.reshape(var_799.astype('float32'), relay.shape_of(var_798))) # shape=(4, 12, 2)
bop_818 = relay.add(bop_800.astype('float64'), relay.reshape(var_798.astype('float64'), relay.shape_of(bop_800))) # shape=(4, 12, 2)
output = relay.Tuple([bop_818,])
output2 = relay.Tuple([bop_818,])
func_826 = relay.Function([var_798,var_799,], output)
mod['func_826'] = func_826
mod = relay.transform.InferType()(mod)
mutated_mod['func_826'] = func_826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_826_call = mutated_mod.get_global_var('func_826')
var_828 = relay.var("var_828", dtype = "float32", shape = (4, 12, 2))#candidate|828|(4, 12, 2)|var|float32
var_829 = relay.var("var_829", dtype = "float32", shape = (4, 12, 2))#candidate|829|(4, 12, 2)|var|float32
call_827 = func_826_call(var_828,var_829,)
output = call_827
func_830 = relay.Function([var_828,var_829,], output)
mutated_mod['func_830'] = func_830
mutated_mod = relay.transform.InferType()(mutated_mod)
var_894 = relay.var("var_894", dtype = "int8", shape = (7, 5, 1))#candidate|894|(7, 5, 1)|var|int8
var_895 = relay.var("var_895", dtype = "int8", shape = (7, 5, 1))#candidate|895|(7, 5, 1)|var|int8
bop_896 = relay.logical_xor(var_894.astype('int8'), relay.reshape(var_895.astype('int8'), relay.shape_of(var_894))) # shape=(7, 5, 1)
bop_899 = relay.logical_and(var_895.astype('bool'), relay.reshape(var_894.astype('bool'), relay.shape_of(var_895))) # shape=(7, 5, 1)
uop_903 = relay.atanh(bop_896.astype('float32')) # shape=(7, 5, 1)
output = relay.Tuple([bop_899,uop_903,])
output2 = relay.Tuple([bop_899,uop_903,])
func_906 = relay.Function([var_894,var_895,], output)
mod['func_906'] = func_906
mod = relay.transform.InferType()(mod)
var_907 = relay.var("var_907", dtype = "int8", shape = (7, 5, 1))#candidate|907|(7, 5, 1)|var|int8
var_908 = relay.var("var_908", dtype = "int8", shape = (7, 5, 1))#candidate|908|(7, 5, 1)|var|int8
output = func_906(var_907,var_908,)
func_909 = relay.Function([var_907,var_908,], output)
mutated_mod['func_909'] = func_909
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1257 = relay.var("var_1257", dtype = "float32", shape = (1, 3, 9))#candidate|1257|(1, 3, 9)|var|float32
uop_1258 = relay.rsqrt(var_1257.astype('float32')) # shape=(1, 3, 9)
uop_1260 = relay.sigmoid(var_1257.astype('float64')) # shape=(1, 3, 9)
func_826_call = mod.get_global_var('func_826')
func_830_call = mutated_mod.get_global_var('func_830')
const_1263 = relay.const([1.441970,8.365336,-7.155677,0.086794,1.841308,-6.350119,-3.255624,-2.105274,-1.458065,-9.276938,-2.355150,5.166672,-0.706350,-6.247528,-7.774388,-0.770067,7.238504,-0.653195,-2.839720,3.488773,9.387100,-2.977828,9.437484,3.307644,3.272500,6.095544,-1.552404,5.807685,7.345088,-5.588302,-6.648617,4.235475,-9.493446,5.836426,8.709927,6.889353,7.778143,-9.658113,-9.034742,-3.143393,0.684902,-7.488769,7.296200,-3.016119,4.484361,-1.726135,8.628946,8.749643,-4.942194,8.840187,8.586741,-6.314507,-3.078703,4.759662,-6.954772,-2.483375,8.150429,8.919567,-9.210787,8.645572,-9.934305,2.843555,3.970117,-4.766601,9.203363,1.775468,-6.353519,6.961703,-9.203627,3.422931,3.345002,-3.624085,-6.678272,7.882819,-2.254585,3.663014,-2.046803,-5.923066,8.300916,9.381038,-8.550090,-5.643612,6.372974,6.431361,-8.208842,-3.373520,-8.892795,2.579438,3.829301,0.271926,6.282964,-1.192635,9.470695,-6.663709,2.372819,-4.423471], dtype = "float32")#candidate|1263|(96,)|const|float32
call_1262 = relay.TupleGetItem(func_826_call(relay.reshape(const_1263.astype('float32'), [4, 12, 2]), relay.reshape(const_1263.astype('float32'), [4, 12, 2]), ), 0)
call_1264 = relay.TupleGetItem(func_830_call(relay.reshape(const_1263.astype('float32'), [4, 12, 2]), relay.reshape(const_1263.astype('float32'), [4, 12, 2]), ), 0)
func_424_call = mod.get_global_var('func_424')
func_427_call = mutated_mod.get_global_var('func_427')
const_1266 = relay.const([[-8.999046,-3.741682,-2.094657,-4.250193,-3.591312,-1.325906,1.827552,-6.246592,3.655124,-7.415378,-6.385910,-4.263757,2.345502,-9.607452,7.992879,4.403265,-3.825397,-9.946047,-4.385769,3.549363],[-9.490958,9.545165,-7.921431,0.292296,-6.871117,9.051060,0.544727,8.834126,8.390013,-4.000094,-7.896298,7.695412,-2.209922,3.244493,-1.044652,7.383258,-1.565523,-7.374893,-8.299914,4.887932],[3.325888,-5.614620,-3.361869,-2.234354,3.113870,-7.816308,-1.209864,-7.012952,9.606482,5.603790,-0.297434,3.947573,3.642062,3.248130,0.997365,9.387917,-9.638664,2.185664,7.577643,-6.559006],[3.637536,-9.928948,-3.165119,-6.000925,4.709805,-9.735986,-6.599464,-2.453034,0.091698,1.608056,-9.012046,-0.343302,-7.616896,8.611526,5.058957,-0.833110,8.755601,-3.921347,2.317259,6.292675],[8.691887,9.800011,6.312604,7.417939,2.193577,-0.492602,6.216618,-7.448542,-4.424345,-0.399718,-2.817349,-0.279232,2.600715,6.465810,6.683602,1.775908,-9.365347,-9.726527,2.744846,3.808998],[9.356038,-8.278304,-8.226810,-9.508666,5.086766,-9.902821,-7.379314,1.180052,3.641077,-1.069749,8.798788,9.926763,-5.358984,-4.969215,-0.583021,1.728503,4.661656,-2.592318,-7.371517,-2.537485]], dtype = "float32")#candidate|1266|(6, 20)|const|float32
const_1267 = relay.const([-8.571046,-7.075576,-4.830005,-8.905929,-4.359110,5.440940,-6.879778,-9.880174,3.796137,-5.585781,-6.903780,-2.296327,5.542445,-3.683817,6.833756,-1.937163,-2.518688,-7.631633,-8.012912,-1.594047,-1.688052,2.714916,1.003625,2.905700,1.315605,6.964791,8.679202,2.015330,2.290794,5.508124,9.736178,-2.649136,-5.414100,-1.741608,0.117597,-3.574752,2.548541,-4.537130,2.041340,1.176342,0.635151,-6.717479,0.176134,-7.289879,0.766974,9.585390,9.830619,-6.733462,-5.333589,-7.531876,-9.302398,-4.638091,4.024365,-6.173750,-5.604996,3.245242,6.127789,-7.078777,3.737455,6.244960,4.067048,-0.295531,-1.291498,-5.909437,5.949291,-1.487097,3.790208,2.185443,-5.611113,-1.385217,-5.512399,-1.661058,6.211724,-1.130555,4.159921,-2.220601,-4.826139,-6.620561,1.335852,-6.183780,9.311028,-2.797609,6.153628,8.175828,-1.848740,-1.598967,-7.690874,-0.515413,-3.292147,-8.008886,-0.932422,-2.560309,8.890157,1.192530,9.512757,-2.349537,-4.083211,-6.264347,-1.443517,9.975401,0.298625,2.361414,0.648111,9.781366,-6.074236,5.957942,-7.969978,-0.903835,-9.673820,3.078498,2.576286,8.081513,-2.296063,4.601907,0.573682,2.476018,-3.066111,-0.039121,-0.504804,7.364288,-6.807544,3.956741,-9.245185,-2.868608,1.197595,5.111799,5.574172,1.233110,-4.921667,4.117323,5.920617,-9.031024,9.889425,4.663757,-5.951127,6.212756,-0.831776,-8.887888,-1.427450,4.724147,-8.085033,-0.732340,3.057004,7.399681,-0.625839,-0.131329,-1.468522,9.096731,6.602197,4.715594,-7.692054,-5.317700,-7.258912,3.304019,-5.160765,-2.060310,0.090939,-4.885589,-4.082649,-6.803782,-9.079288,8.760934,5.162184,5.876995,1.183044,6.606755,1.839406,-1.254804,-2.486249,-8.669961,1.948590,2.656716,7.382689,0.143637,9.679322,-9.815382,-1.364947,-9.916041,-3.832218,6.281518,5.027141,1.956754,-9.194346,-6.278522,-7.284006,5.410575,9.092263,-3.391607,3.109635,6.683365,-4.434169,-8.994975,9.752149,-5.737716,-2.253688,6.894627,-8.812873,-0.516773,0.076099,6.439412,4.671482,3.485516,7.132084,5.339850,5.516400,-8.135319,-3.220675,5.254016,2.941053,-9.847254,1.206414,1.144026,-8.722627,-6.402781,-3.008608,8.177776,7.052030,8.076981,8.072991,3.697177,7.683047,-3.883950,-6.666107,0.512299,5.599851,-4.619816,5.859280,8.686905,3.761846,2.340151,6.131178,-4.355362,2.611359,-3.843885,-8.410273,-0.278087,1.950420,-4.577411,-7.577606,5.275388,6.812161,-0.168935,-3.128610,-8.709446,2.142320,0.932444,4.942724,0.216950,7.678737,4.722449,7.921286,1.045638,-3.079833,4.141740,9.388261,-6.143334,-9.050833,-2.098925,-9.280271,-8.312015,-6.800532,3.086808,2.237208,3.872909,-7.056131,0.688986,-2.547157,-4.787321,-7.719769,2.720349,-5.183491,-8.809008,-1.673633,1.361647,9.655572,-9.468079,-3.102668,4.747003,9.545605,-0.125232,0.678424,5.704442,7.089935,-3.882463,0.355996,4.876327,-8.193226,-2.014215,-4.030075,8.858823,-9.890920,-4.353735,0.386333,-9.040751,-6.423216,-1.429126,-4.468836,7.499071,3.910660,0.460055,5.938754,1.966446,-8.610924,-6.231518,7.475889,1.034594,0.430274,-0.271112,8.015168,1.950317,-0.350301,-6.403933,-6.869408,-5.192299,5.086689,-3.810957,-9.511679,-2.837793,-5.414118,-9.943371,8.816750,8.263478,5.810058,6.482013,-0.576429,-1.702787,9.535948,-4.340701,-6.463475,3.676884,-0.501181,-4.971067,1.676400,-2.740009,1.915530,-9.735105,-1.191078,6.230363,5.955143,-7.945591,-6.444602,-9.304255,6.833777,3.611139,7.331130,-4.803498,-7.876756,1.677194,7.151677,1.896401,-7.443852,1.156167,5.176029,-2.707369,-7.090275,2.040333,8.346240,-6.915977,-0.608310,-0.194878,-8.527001,5.960035,9.560919,6.515242,-7.566455,3.569865,-4.771721,3.983242,8.566546,-5.231190,1.133848,-2.838053,-4.528691,5.552273,-1.402359,-9.075183,-8.803025,-6.146230,-2.204471,0.040985,-1.299241,2.333829,3.480616,0.632513,-8.951945,-2.345619,7.812126,-1.697038,5.785411,-6.698252,7.680012,7.506287,-5.131072,1.234624,9.613089,-1.755472,4.931198,-2.372915,-8.463512,-9.296370,7.672871,-9.646574,5.461151,-8.257240,3.032720,4.972510,-9.314710,-4.387532,-1.839764,1.227196,-9.941391,3.811003,-2.679180,9.674556,2.969134,3.105255,-5.307049,5.391074,5.276404,2.427291,-8.704771,2.850653,0.349671,-7.713380,-2.565394,0.255760,4.438874,-7.538563,-7.148103,-5.841979,5.992774,-9.665529,-1.363160,-0.249942,-8.406953,-6.188694,-4.456919,3.810627,2.098439,1.612603,2.912804,1.629755,1.870485,-2.474507,2.618192,-3.970793,4.751119,-3.051001,-7.862245,5.854104,-0.772842,-2.653992,7.271174,-1.812256,7.484726,-5.538812,-9.823384,7.143183,-5.742186,6.479587,-5.291448,-6.020593,7.052412,2.899871,6.507929,-6.028877,-6.062461,-7.970968,-9.027785,8.272485,-5.117730,-1.402859,5.617466,9.764278,-3.303672,9.846508,-2.781741,-8.515286,-6.225886,3.922410,-7.167141,-1.408784,-6.193205,-9.602152,0.518083,-4.316729,-7.737708,5.131866,-4.397114,2.050444,7.646457,-0.536277,-9.939596,5.279463,-1.543199,7.513572,-1.681615,-7.067895,-4.917989,7.510918,-0.768419,-6.351054,5.519245,-5.275399,-3.524619,-2.080915,-8.184874,0.598390,6.586597,7.417278,0.710093,-4.061558,-1.663792,6.121198,6.450135,9.590486,-2.500147,-2.433580,9.711992,-4.711365,-4.674489,3.843785,1.633007,-9.135404,-5.003956,-1.570041,-6.915875,3.990921,3.494063,6.591466,-3.487893,-2.273347,-9.503544,-9.393909,5.945427,9.855331,7.234259,-9.015813,1.006939,6.579289,2.416361,-9.483697,-3.909549,-1.951694,-2.054811,-1.411122,-7.250255,0.018456,-5.116508,-0.982715,-6.578071,5.990204,2.221337,-0.499806,-7.762559,-2.862595,-1.296188,8.825781,-4.110035,-7.725515,-0.696641,9.234390,-6.554446,5.970240,-5.830527,-2.515197,-2.931519,-1.390763,-5.065933,-9.184400,-8.488862,-1.196389,4.087100,2.450644,2.336140,-7.499665,2.172079,4.462330,2.508992,-0.903500,-4.091817,-7.962500,-5.027189,-8.623160,-6.471362,-9.072205,9.819265,0.064532,-0.920781,5.476261,-5.449275,9.680921,1.451687,8.595438,-4.065548,5.321376,8.665170,2.715835,-9.929122,-3.879256,-6.680680,-7.446499,7.279104,6.164332,-6.588229,6.362250,-8.606674,-3.765263,8.588429,-2.270828,4.431544,9.657029,-2.707991,1.461688,-6.038548,6.022117,-2.572701,3.813764,8.843287,7.629915,2.731076,-9.930364,-3.470082,4.224717,8.017946,7.070334,1.357442,0.326469,3.085140,9.618057,-6.847987,-9.894684,-2.429781,-6.520491,-5.714622,9.754996,-7.517048,-4.494960,2.212432,6.228365,7.279573,4.032666,4.673674,-1.626364,8.238231,-3.553295,-7.811086,-9.213802,-1.418374,-2.123867,5.757052,-6.308349,-5.359897,-1.256970,7.313530,-9.703239,-6.829774,3.765804,-7.011444,-9.080726,6.508923,9.451111,9.729941,-2.155434,-6.904670,5.393198,2.441672,1.608499,-2.394981,9.108159,2.813409,-5.673771,3.183218,1.168161,-6.286100,-1.249066,6.935730,5.238319,4.805091,-3.192106,7.596292,5.384160,-3.270447,-9.445602,-6.454995,-8.613871,2.923285,0.136225,-8.114519,-8.531442,-1.693180,1.005750,-4.802104,4.964040,-2.947208,3.482772,3.391383,-0.633643,6.391022,-5.977158,-9.386882,-8.241610,9.574377,0.991332,-4.700883,-5.217044,-2.482845,-1.459873,6.784013,-1.146521,-5.641945,6.655562,0.796455,3.121278,-8.679346,-1.075694,-4.207748,-2.978645,7.030312,1.959425,3.915928,-1.142979,6.823128,-6.000427,-9.648590,2.719443,-8.628576,-6.743120,-3.862305,-3.547422,7.811908,-3.013327,0.406841,-3.425290,-8.525393,8.468862,9.725642,5.539384,-7.957203,4.478800,-8.096733,2.617697,4.776784,-5.644729,0.279674,-1.906185,-3.086778,-4.122184,3.345379,-4.644748,3.294872,5.636489,2.958243,7.616192,-9.475918,5.749898,1.419410,7.049678,-2.212412,6.488410,4.154582,9.887008,-7.110770,4.912458,-3.902343,7.477627,6.012656,-1.784536,5.037416,5.474958,2.535584,-7.619395,9.475120,2.534086,-9.159288,-0.370433,9.306577,8.711648,9.207402,8.961743,-4.969989,6.992217,-8.813895,-2.348580,-7.842371,7.845782,-5.860618,-2.255815,-1.432493,-6.895619,-9.258143,-3.300206,-8.731335,5.906040,-6.113740,5.093768,5.697684,8.485673,-7.796817,1.687770,0.605131,-0.420258,6.341595,6.118416,5.654775,-6.491912,-7.008513,5.502579,-6.113400,2.866482,8.700947,1.251426,5.057852,-5.315586,-1.980316,-9.669751,2.630826,-5.955693,-1.139498,-6.376465,2.774223,9.055085,4.953765,-4.294091,-9.627049,-2.243188,-5.780485,-9.372485,-0.488803,3.236999,8.932806,-8.882533,5.688531,9.155071,5.041535,6.188507,-5.624779,-9.012802,9.164649,9.824176,-7.160228,9.857804,4.983418,2.065006,3.173440,-8.910094,-8.934990,1.531515,2.709607,8.537840,-0.847167,7.723434,-5.700320,-1.318694,-3.415094,7.759910,8.470518,9.379827,-0.652595,5.973270,-0.856203,-6.036172,-5.207057,-3.881271,-5.710605,-7.340473,-7.787759,8.242764,-0.345953,-0.139480,2.803232,8.553457,-1.464552,1.489956,6.995545,-2.756973,0.649540,2.414145,-1.880779,2.067407,2.494126,4.177600,-3.484065,-3.681758,-8.640884,1.102616,-5.888919,6.227685,-8.765691,-9.833917,4.791533,6.567820,6.294876,-5.441659,-8.715328,9.757937,-2.240289,9.525042,3.562020,2.399111,-5.570280,-1.119010,7.488779,8.363457,-2.089241,-1.316579,9.321943,-0.688157,-5.362897,-4.594487,9.771065,-7.185593,3.595666,-5.888741,-0.621738,-1.611943,-8.089345,7.507234,-9.056924,7.244021,-4.874801,-2.587663,8.222814,1.512617,-8.426227,-7.147787,7.624594,3.384077,-3.478893,4.347914,3.639989,0.565806,-4.600850,1.899419,-6.048391,-5.135429,-9.381932,-6.059627,6.476413,3.123000,0.172835,0.276747,4.248229,8.702078,-2.388819,-7.257507,1.881012,-8.119079,-7.750334,-8.560379,-7.574190,-0.155921,-3.457593,2.223073,-5.565919,0.524234,-6.309138,-8.646192,4.010372,-7.008052,-8.079556,7.448695,-4.103123,-2.182531,3.005286,7.984854,5.395323,4.351783,-3.014621,5.346302,3.512452,8.422009,-4.905495,2.051594,2.047632], dtype = "float32")#candidate|1267|(975,)|const|float32
call_1265 = relay.TupleGetItem(func_424_call(relay.reshape(const_1266.astype('float32'), [8, 3, 5]), relay.reshape(const_1267.astype('float32'), [975,]), ), 0)
call_1268 = relay.TupleGetItem(func_427_call(relay.reshape(const_1266.astype('float32'), [8, 3, 5]), relay.reshape(const_1267.astype('float32'), [975,]), ), 0)
bop_1273 = relay.logical_xor(uop_1260.astype('uint16'), relay.reshape(uop_1258.astype('uint16'), relay.shape_of(uop_1260))) # shape=(1, 3, 9)
bop_1284 = relay.greater_equal(bop_1273.astype('bool'), relay.reshape(uop_1260.astype('bool'), relay.shape_of(bop_1273))) # shape=(1, 3, 9)
uop_1294 = relay.atanh(uop_1258.astype('float32')) # shape=(1, 3, 9)
bop_1296 = relay.bitwise_and(uop_1260.astype('int64'), relay.reshape(uop_1258.astype('int64'), relay.shape_of(uop_1260))) # shape=(1, 3, 9)
uop_1303 = relay.asinh(bop_1284.astype('float64')) # shape=(1, 3, 9)
bop_1309 = relay.floor_mod(uop_1294.astype('float64'), relay.reshape(uop_1260.astype('float64'), relay.shape_of(uop_1294))) # shape=(1, 3, 9)
output = relay.Tuple([call_1262,const_1263,call_1265,const_1266,const_1267,bop_1296,uop_1303,bop_1309,])
output2 = relay.Tuple([call_1264,const_1263,call_1268,const_1266,const_1267,bop_1296,uop_1303,bop_1309,])
func_1330 = relay.Function([var_1257,], output)
mod['func_1330'] = func_1330
mod = relay.transform.InferType()(mod)
mutated_mod['func_1330'] = func_1330
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1331 = relay.var("var_1331", dtype = "float32", shape = (1, 3, 9))#candidate|1331|(1, 3, 9)|var|float32
func_1330_call = mutated_mod.get_global_var('func_1330')
call_1332 = func_1330_call(var_1331)
output = call_1332
func_1333 = relay.Function([var_1331], output)
mutated_mod['func_1333'] = func_1333
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1381 = relay.const([[[-8.735211,-2.592616,8.847111,-0.629279,1.316443,-8.777186],[-8.240502,8.040621,-8.777720,1.556696,-7.022513,-3.269526],[-0.474542,-4.548196,-4.819503,6.342060,-3.530920,-4.966513],[-9.794020,9.165478,-8.179770,-8.317259,5.819482,1.823505],[-3.839934,4.930607,-3.922332,5.156278,-5.884169,1.934177],[-6.587545,4.536438,-9.244571,-4.661766,-9.561470,-6.616090]],[[5.547501,1.570797,-8.540314,-9.859766,4.105052,9.642255],[7.189462,1.233064,1.328014,2.829543,4.483750,-6.118968],[-9.774363,-2.024792,9.963387,-7.961284,3.055016,9.451129],[-0.165306,-3.463898,5.558277,-7.247624,2.703841,-1.716428],[-8.241912,-7.643208,-2.872907,-4.091491,0.442990,5.482884],[3.092759,-4.000390,-3.537064,0.829224,9.753644,-6.174669]],[[3.754118,-1.111973,-7.023225,2.739941,-4.731624,-8.145272],[5.525008,1.385877,4.654889,7.458530,-5.267305,6.480534],[1.696986,-4.659883,8.873219,-6.469019,4.489175,4.690551],[6.501912,-2.963315,-1.296619,5.345304,4.289801,-8.124307],[1.866709,-1.992769,1.138336,-0.531888,-0.492519,-2.275176],[-4.948258,-7.371484,1.968167,4.595063,7.023596,-7.193542]],[[7.412431,7.310126,-2.697363,1.683165,9.471439,-2.252639],[-0.750727,7.240360,5.402743,-5.545725,-8.307250,0.977102],[-8.243305,2.197303,-3.229907,0.110143,1.714575,5.008758],[-6.238041,4.427064,-1.151171,3.336030,7.432935,0.987747],[-4.961481,-5.363405,-4.132036,-4.596783,-0.086740,-7.647359],[2.212865,-3.786294,-1.283800,-8.724989,0.925853,-4.970280]],[[3.114173,-4.880104,3.879000,4.025865,9.960854,-0.143384],[2.418123,-1.035350,-6.661909,3.183961,-4.788959,-0.930646],[4.193076,5.534888,4.035086,-1.905474,7.456255,4.574228],[-0.226689,-5.298863,-1.920158,9.511704,8.038594,3.170097],[5.748549,1.214118,0.327254,-8.709939,1.414356,5.815529],[-2.394880,0.141242,-9.661243,-2.129351,-6.844680,-2.535649]],[[2.737852,-3.854128,0.981616,1.262918,-1.881013,-2.108284],[-8.619116,-8.541553,-9.728717,-7.843539,0.865084,7.869020],[-4.864221,-6.315388,-1.573809,5.204964,9.053139,7.982866],[-9.216385,5.381403,3.005395,-6.335056,-0.769747,8.273434],[-8.781026,4.252554,-3.088646,0.719250,-3.533734,1.149891],[-4.372226,0.282140,-9.920440,-4.297831,1.477784,-6.473904]],[[9.345882,-8.124185,1.055397,-3.579921,-4.588010,-2.690509],[-4.003125,5.993490,9.622606,-5.146882,-4.049387,5.163904],[-8.742170,4.703363,0.197478,-0.529100,-7.889759,5.815516],[9.998537,3.604502,4.373352,-9.245661,3.148356,8.118888],[-2.353669,-2.860487,1.142163,4.122852,6.480933,0.165986],[-9.296067,7.044329,-0.341835,5.566007,-4.422609,6.217038]],[[-6.597194,-8.165942,-9.729002,-6.396495,9.951781,2.750393],[1.928274,-4.819596,9.294712,6.111850,0.956815,-2.063394],[9.581276,9.008918,-5.724762,-5.912543,-1.886013,-3.798454],[-9.925322,5.632909,6.561821,-6.978266,-6.506880,2.451335],[-8.959767,4.572154,9.177598,5.323431,4.894273,-1.662707],[-2.435513,-8.279210,4.088902,4.622124,-4.567411,9.885981]],[[2.115081,-4.994851,-1.730710,3.270682,-1.394221,3.998292],[-6.629695,9.682998,2.897750,7.363730,-6.315179,1.417888],[-9.748230,2.342592,0.353503,-6.218075,-2.046085,-0.247108],[-2.238287,9.551838,0.028718,-2.116386,6.531569,5.222654],[4.051115,-2.473978,0.542150,-1.623097,-9.725382,-6.639299],[-2.937616,-8.041443,1.111865,-2.058775,-7.235760,-8.845371]],[[-3.481796,7.709504,-5.204812,-2.171634,9.278271,6.967398],[-2.127590,-8.900133,4.868525,5.567133,3.391635,-5.438098],[-8.476295,-5.236874,-9.146786,-5.052030,8.042054,7.085912],[8.789157,-3.038280,-0.819747,5.359672,1.444017,-4.561798],[-6.746991,-5.787395,7.385837,-2.119065,9.592217,3.597470],[7.554088,-5.602659,7.949733,8.438399,-5.189958,-5.946100]],[[7.194946,3.175365,4.085114,-4.622272,0.035300,-4.690581],[1.817266,9.558929,5.566923,5.331386,-5.469928,-1.193309],[8.686463,-2.862414,4.584294,-4.657535,-6.946799,0.006885],[1.829558,6.921718,-2.424015,-4.963514,-4.388364,7.728111],[-8.425960,2.208816,-5.565756,-6.114418,0.774601,9.923912],[6.462528,9.541076,-8.587287,-3.553539,-9.801971,-1.915823]],[[6.690803,0.628691,-6.633324,6.605794,5.437160,-5.194149],[-1.114295,6.960401,5.393296,-0.322725,-6.967665,1.755322],[-9.135920,3.856851,9.887552,-9.753628,-2.332784,2.465492],[-5.937021,4.657130,5.720968,2.150473,-8.998644,3.863018],[-1.740538,0.092327,0.462973,0.289896,-0.926437,5.442907],[-1.564143,-8.493304,4.427931,-5.965933,-7.125522,3.275930]]], dtype = "float32")#candidate|1381|(12, 6, 6)|const|float32
const_1382 = relay.const([[[-8.921191,2.185522,1.017990,2.600502,-0.518871,5.469349],[2.941220,-9.742499,-2.859039,-2.724078,6.226566,-4.451152],[5.278620,9.565475,-7.631769,5.882805,0.300423,-1.917291],[-2.810314,4.779683,-8.185384,-0.711213,-4.995976,-1.587267],[-2.391351,0.816798,-4.751013,8.184865,-7.042014,-8.049319],[7.751706,3.267926,-5.079281,7.523524,-2.138089,-3.150819]],[[-3.771084,-8.973016,2.709863,5.025201,1.944094,-7.742542],[-7.630458,0.553788,-7.773975,1.729419,6.212171,-6.871428],[-2.862766,8.858996,-2.557292,7.671246,-7.736738,0.269194],[4.057252,3.426173,3.114311,-8.961754,1.858575,1.708393],[-7.213402,1.558576,8.441873,7.131664,-8.303940,-5.293500],[-3.043123,6.939482,2.781970,9.788916,2.479281,9.281607]],[[-1.006711,-2.196678,7.107339,4.989974,-9.040091,-6.991987],[9.134294,8.833462,-6.661759,-3.298122,6.319435,5.254637],[9.507287,2.484324,-1.027073,8.816990,6.602567,-1.806028],[0.350275,-3.269590,2.129321,-3.915906,-3.976152,-6.654795],[6.836069,-2.279511,-0.504999,-9.863809,-4.947330,-6.020702],[-0.598329,5.482943,3.057250,4.655797,0.170081,-9.624853]],[[-6.233336,6.182600,-9.847913,5.649461,0.501775,-6.963874],[9.494326,9.477284,8.627698,-3.387537,9.427764,4.430668],[-9.356028,-5.971198,-6.453126,-3.994508,8.854985,4.835218],[7.331474,8.094829,-7.193338,-5.464704,-4.637355,6.394275],[9.628840,-0.210485,2.012041,6.512922,-9.745896,-2.231199],[-9.509636,8.431701,-0.879073,0.565834,0.506172,-5.340320]],[[-1.973939,7.776356,-9.176154,-6.830244,5.656947,8.052968],[-2.892566,-0.815126,-1.126600,7.090658,4.116656,-7.434925],[-4.290091,2.587676,-0.469828,1.745864,-9.279281,-2.020503],[-0.206976,-7.791466,8.076456,-7.438322,-3.837640,-7.725209],[6.419075,2.841001,-9.735972,5.262715,9.193739,-5.698417],[-2.414974,-2.884952,-6.059594,-2.472894,-7.653885,-8.299354]],[[-2.820666,8.582115,6.632010,6.458797,-6.192497,4.645830],[-1.727535,3.978970,7.371839,3.603013,6.184629,-4.648418],[-6.374147,-7.854843,7.746627,-9.672094,-7.977175,-4.452442],[9.578204,-5.910735,-6.084915,-9.490011,-5.981367,-9.323788],[5.157842,-2.352974,-8.887603,7.358753,2.672425,8.520419],[-6.572480,-8.757661,1.082024,3.036516,-4.725683,-9.536952]],[[9.995188,2.580195,-6.760710,-8.869846,7.915058,6.313126],[2.021897,2.568074,-2.494971,-0.591219,-2.005820,5.487510],[1.313487,7.853078,1.509066,3.052510,-4.303666,-6.101904],[-7.740125,6.501119,2.083169,4.323579,1.075826,7.692245],[9.377822,-9.889147,-1.337928,-2.674875,-9.140435,8.423354],[9.996027,5.346756,0.899171,6.603651,-9.376125,-2.866981]],[[7.771091,-4.711400,-3.321008,-8.565887,2.622110,2.285600],[1.024613,-8.585768,6.819942,4.013393,-7.608503,6.536298],[-7.247584,9.050491,5.420448,4.640506,-8.720764,5.489450],[5.109144,-7.574971,-6.427704,1.641984,0.333548,-8.096551],[0.776901,-4.798203,-3.285823,-4.611870,-8.525422,8.296736],[8.919138,-1.427933,-8.355736,-6.499645,5.501716,4.241033]],[[-0.972170,3.242076,-7.604389,3.722235,5.065487,5.132032],[7.520814,1.046007,1.084831,3.723180,4.494999,-9.528770],[1.033767,3.587598,-4.927604,-2.722006,3.021286,-3.789456],[4.136894,-9.713686,1.600864,-2.618262,4.389509,-9.861844],[-3.428902,1.977097,8.089211,-1.010369,-3.841904,-9.777306],[-1.156591,4.471712,-7.185713,4.389579,8.593366,4.903677]],[[5.339285,0.204514,9.901099,6.571213,5.873792,2.659998],[8.961457,6.959264,5.690763,-9.433948,1.573179,-8.661800],[3.001430,9.919187,9.582487,-3.833323,0.929060,5.878242],[0.618712,-8.529765,1.701589,-3.257398,4.014427,-2.696424],[5.764838,-8.253437,-4.677052,-2.561772,-1.906909,6.005229],[-5.707598,-8.909989,3.046005,-4.629153,4.913131,-9.642101]],[[-4.744903,2.883137,-1.720546,7.029740,-7.037158,-7.850041],[-2.838902,-4.472993,2.618080,-4.429595,6.661015,1.322039],[-0.786869,-0.762346,-8.112716,-0.106742,3.326070,4.053062],[8.706977,9.230499,-8.965958,-3.381585,-1.794008,-8.831167],[-7.887925,-1.671476,3.985389,6.694858,7.479676,9.116181],[-5.869262,3.874700,7.592793,1.348237,7.266789,-9.895194]],[[7.447308,-4.921351,-4.201916,3.330546,9.100232,-0.189690],[3.722856,-2.226490,2.492168,-0.614424,6.886873,5.610521],[-6.332440,8.803274,6.642649,-4.937106,-8.721011,2.223180],[0.268230,-1.676506,-9.393956,6.651468,-9.751098,-4.260871],[-5.336713,3.809354,-6.367042,-1.101308,1.535485,-4.830386],[-5.075978,5.053984,1.095676,8.347959,8.334851,5.636397]]], dtype = "float32")#candidate|1382|(12, 6, 6)|const|float32
bop_1383 = relay.divide(const_1381.astype('float32'), relay.reshape(const_1382.astype('float32'), relay.shape_of(const_1381))) # shape=(12, 6, 6)
output = relay.Tuple([bop_1383,])
output2 = relay.Tuple([bop_1383,])
func_1386 = relay.Function([], output)
mod['func_1386'] = func_1386
mod = relay.transform.InferType()(mod)
mutated_mod['func_1386'] = func_1386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mutated_mod.get_global_var('func_1386')
call_1387 = func_1386_call()
output = call_1387
func_1388 = relay.Function([], output)
mutated_mod['func_1388'] = func_1388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_1398 = relay.TupleGetItem(func_1386_call(), 0)
call_1399 = relay.TupleGetItem(func_1388_call(), 0)
output = call_1398
output2 = call_1399
func_1400 = relay.Function([], output)
mod['func_1400'] = func_1400
mod = relay.transform.InferType()(mod)
output = func_1400()
func_1401 = relay.Function([], output)
mutated_mod['func_1401'] = func_1401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_1460 = relay.TupleGetItem(func_1386_call(), 0)
call_1461 = relay.TupleGetItem(func_1388_call(), 0)
output = relay.Tuple([call_1460,])
output2 = relay.Tuple([call_1461,])
func_1465 = relay.Function([], output)
mod['func_1465'] = func_1465
mod = relay.transform.InferType()(mod)
output = func_1465()
func_1466 = relay.Function([], output)
mutated_mod['func_1466'] = func_1466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1400_call = mod.get_global_var('func_1400')
func_1401_call = mutated_mod.get_global_var('func_1401')
call_1476 = func_1400_call()
call_1477 = func_1400_call()
output = call_1476
output2 = call_1477
func_1482 = relay.Function([], output)
mod['func_1482'] = func_1482
mod = relay.transform.InferType()(mod)
mutated_mod['func_1482'] = func_1482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mutated_mod.get_global_var('func_1482')
call_1483 = func_1482_call()
output = call_1483
func_1484 = relay.Function([], output)
mutated_mod['func_1484'] = func_1484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1465_call = mod.get_global_var('func_1465')
func_1466_call = mutated_mod.get_global_var('func_1466')
call_1488 = relay.TupleGetItem(func_1465_call(), 0)
call_1489 = relay.TupleGetItem(func_1466_call(), 0)
output = call_1488
output2 = call_1489
func_1492 = relay.Function([], output)
mod['func_1492'] = func_1492
mod = relay.transform.InferType()(mod)
output = func_1492()
func_1493 = relay.Function([], output)
mutated_mod['func_1493'] = func_1493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1465_call = mod.get_global_var('func_1465')
func_1466_call = mutated_mod.get_global_var('func_1466')
call_1532 = relay.TupleGetItem(func_1465_call(), 0)
call_1533 = relay.TupleGetItem(func_1466_call(), 0)
output = call_1532
output2 = call_1533
func_1541 = relay.Function([], output)
mod['func_1541'] = func_1541
mod = relay.transform.InferType()(mod)
output = func_1541()
func_1542 = relay.Function([], output)
mutated_mod['func_1542'] = func_1542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_1565 = func_1482_call()
call_1566 = func_1482_call()
func_659_call = mod.get_global_var('func_659')
func_662_call = mutated_mod.get_global_var('func_662')
const_1572 = relay.const([3.870358,7.952922,9.602542,-3.534889,-6.141780,-3.754535,8.202135,-2.364839,-5.308348,5.782408,1.161428,-6.284603,3.594000,8.950897,3.925455,-4.201665,2.768440,-2.996161,-8.029490,0.384838,5.545699,1.312278,-9.683803,-9.583858,-5.039065,0.926404,-7.159129,-7.071634,3.342213,-7.566424,-6.276460,-0.738391,-9.718638,-3.269438,3.559573,2.616228,-7.845571,-7.979279,7.878046,8.296504,-5.381531,5.109992,-4.640136,-5.898433,2.500999,-6.750676,-0.017861,6.251107,-2.193027,6.921230,4.695677,-0.148784,6.703673,-5.538521,0.019859,-7.088179,-5.019710,-1.412231,-1.898122,8.416064,4.153571,1.405240,-9.211346,-2.858072,-4.745812,-9.907765,2.790895,3.626798,8.232043,0.614908,-4.758504,-7.296308,1.553463,5.830855,-2.138957,3.157533,6.605386,5.044035,2.451160,-2.719136,2.677895,2.753510,6.121024,6.101762,-8.231148,5.665979,8.646711,-8.134871,7.260071,-4.237550,-3.676501,7.347220,-5.189112,1.771931,0.663547,8.634577,-4.414870,7.372344,-0.589751,0.436883,1.964667,5.370053,-7.841828,1.768101,3.830760,5.090918,8.876221,0.744881,5.573391,1.173081,-8.473136,7.597231], dtype = "float64")#candidate|1572|(112,)|const|float64
call_1571 = func_659_call(relay.reshape(const_1572.astype('float64'), [7, 4, 4]))
call_1573 = func_659_call(relay.reshape(const_1572.astype('float64'), [7, 4, 4]))
func_532_call = mod.get_global_var('func_532')
func_536_call = mutated_mod.get_global_var('func_536')
var_1575 = relay.var("var_1575", dtype = "uint16", shape = (252,))#candidate|1575|(252,)|var|uint16
const_1576 = relay.const([2.782565,-4.898715,1.072571,-4.006049,-6.072388,3.867289,-3.326129,-5.603946,3.341208,2.922372,-1.940859,8.169414,3.632166,5.703342,4.590240,-8.897621,-3.801861,6.532583,-3.395556,-8.904113,9.638828,-2.620734,4.565824,1.609734,2.346005,-7.280414,2.075351,2.917508,8.235265,6.740353,4.106780,9.896580,5.736323,-0.743367,-9.958871,-8.096280,-2.012146,1.611010,0.645388,9.237155,-5.645627,-9.660381,9.680192,-0.550421,8.831226,-8.733483,4.250126,-7.269095,-5.857336,1.267929,0.988222,5.667196,-6.704500,4.678911,9.957070,-5.056008,-5.448817,5.356557,5.893976,-6.131420,-8.848624,2.218847,-3.773083,-8.806187,-8.690648,7.191872,0.122724,-7.853151,-6.591748,-0.212209,-3.327261,7.943373,7.716923,-1.183112,-1.046695,0.542547,5.373859,8.458723,-0.025166,7.034506,4.531208,1.391979,0.071306,-1.725691,7.849101,7.703745,8.311946,8.614711,-1.310736,0.103368,-8.137060,6.406171,-5.461659,-4.616727,-8.624930,1.789569,-3.535748,-7.775101,-8.447477,4.194540,6.714609,5.024545,6.353456,-1.519356,2.512455,2.978575,-6.611131,0.134928,1.874550,-0.831464,5.511838,9.155542,-1.523892,9.903155,-3.781027,-1.148964,-2.558923,-6.856282,-6.959983,7.420049], dtype = "float32")#candidate|1576|(120,)|const|float32
call_1574 = relay.TupleGetItem(func_532_call(relay.reshape(var_1575.astype('uint16'), [6, 3, 14]), relay.reshape(var_1575.astype('uint16'), [6, 3, 14]), relay.reshape(const_1576.astype('float32'), [120,]), ), 7)
call_1577 = relay.TupleGetItem(func_536_call(relay.reshape(var_1575.astype('uint16'), [6, 3, 14]), relay.reshape(var_1575.astype('uint16'), [6, 3, 14]), relay.reshape(const_1576.astype('float32'), [120,]), ), 7)
var_1579 = relay.var("var_1579", dtype = "bool", shape = (14, 6, 15))#candidate|1579|(14, 6, 15)|var|bool
bop_1580 = relay.divide(call_1574.astype('float32'), relay.reshape(var_1579.astype('float32'), relay.shape_of(call_1574))) # shape=(14, 6, 15)
bop_1583 = relay.divide(call_1577.astype('float32'), relay.reshape(var_1579.astype('float32'), relay.shape_of(call_1577))) # shape=(14, 6, 15)
func_1400_call = mod.get_global_var('func_1400')
func_1401_call = mutated_mod.get_global_var('func_1401')
call_1591 = func_1400_call()
call_1592 = func_1400_call()
uop_1593 = relay.cosh(call_1591.astype('float32')) # shape=(12, 6, 6)
uop_1595 = relay.cosh(call_1592.astype('float32')) # shape=(12, 6, 6)
var_1601 = relay.var("var_1601", dtype = "float32", shape = (12, 6, 6))#candidate|1601|(12, 6, 6)|var|float32
bop_1602 = relay.left_shift(uop_1593.astype('uint32'), relay.reshape(var_1601.astype('uint32'), relay.shape_of(uop_1593))) # shape=(12, 6, 6)
bop_1605 = relay.left_shift(uop_1595.astype('uint32'), relay.reshape(var_1601.astype('uint32'), relay.shape_of(uop_1595))) # shape=(12, 6, 6)
output = relay.Tuple([call_1565,call_1571,const_1572,var_1575,const_1576,bop_1580,bop_1602,])
output2 = relay.Tuple([call_1566,call_1573,const_1572,var_1575,const_1576,bop_1583,bop_1605,])
func_1607 = relay.Function([var_1575,var_1579,var_1601,], output)
mod['func_1607'] = func_1607
mod = relay.transform.InferType()(mod)
var_1608 = relay.var("var_1608", dtype = "uint16", shape = (252,))#candidate|1608|(252,)|var|uint16
var_1609 = relay.var("var_1609", dtype = "bool", shape = (14, 6, 15))#candidate|1609|(14, 6, 15)|var|bool
var_1610 = relay.var("var_1610", dtype = "float32", shape = (12, 6, 6))#candidate|1610|(12, 6, 6)|var|float32
output = func_1607(var_1608,var_1609,var_1610,)
func_1611 = relay.Function([var_1608,var_1609,var_1610,], output)
mutated_mod['func_1611'] = func_1611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1465_call = mod.get_global_var('func_1465')
func_1466_call = mutated_mod.get_global_var('func_1466')
call_1617 = relay.TupleGetItem(func_1465_call(), 0)
call_1618 = relay.TupleGetItem(func_1466_call(), 0)
output = relay.Tuple([call_1617,])
output2 = relay.Tuple([call_1618,])
func_1619 = relay.Function([], output)
mod['func_1619'] = func_1619
mod = relay.transform.InferType()(mod)
mutated_mod['func_1619'] = func_1619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mutated_mod.get_global_var('func_1619')
call_1620 = func_1619_call()
output = call_1620
func_1621 = relay.Function([], output)
mutated_mod['func_1621'] = func_1621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_1633 = func_1482_call()
call_1634 = func_1482_call()
func_1465_call = mod.get_global_var('func_1465')
func_1466_call = mutated_mod.get_global_var('func_1466')
call_1643 = relay.TupleGetItem(func_1465_call(), 0)
call_1644 = relay.TupleGetItem(func_1466_call(), 0)
output = relay.Tuple([call_1633,call_1643,])
output2 = relay.Tuple([call_1634,call_1644,])
func_1647 = relay.Function([], output)
mod['func_1647'] = func_1647
mod = relay.transform.InferType()(mod)
mutated_mod['func_1647'] = func_1647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1647_call = mutated_mod.get_global_var('func_1647')
call_1648 = func_1647_call()
output = call_1648
func_1649 = relay.Function([], output)
mutated_mod['func_1649'] = func_1649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1647_call = mod.get_global_var('func_1647')
func_1649_call = mutated_mod.get_global_var('func_1649')
call_1679 = relay.TupleGetItem(func_1647_call(), 0)
call_1680 = relay.TupleGetItem(func_1649_call(), 0)
output = call_1679
output2 = call_1680
func_1688 = relay.Function([], output)
mod['func_1688'] = func_1688
mod = relay.transform.InferType()(mod)
mutated_mod['func_1688'] = func_1688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mutated_mod.get_global_var('func_1688')
call_1689 = func_1688_call()
output = call_1689
func_1690 = relay.Function([], output)
mutated_mod['func_1690'] = func_1690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1492_call = mod.get_global_var('func_1492')
func_1493_call = mutated_mod.get_global_var('func_1493')
call_1703 = func_1492_call()
call_1704 = func_1492_call()
var_1728 = relay.var("var_1728", dtype = "float32", shape = (12, 6, 6))#candidate|1728|(12, 6, 6)|var|float32
bop_1729 = relay.minimum(call_1703.astype('uint8'), relay.reshape(var_1728.astype('uint8'), relay.shape_of(call_1703))) # shape=(12, 6, 6)
bop_1732 = relay.minimum(call_1704.astype('uint8'), relay.reshape(var_1728.astype('uint8'), relay.shape_of(call_1704))) # shape=(12, 6, 6)
uop_1737 = relay.log(bop_1729.astype('float32')) # shape=(12, 6, 6)
uop_1739 = relay.log(bop_1732.astype('float32')) # shape=(12, 6, 6)
output = relay.Tuple([uop_1737,])
output2 = relay.Tuple([uop_1739,])
func_1740 = relay.Function([var_1728,], output)
mod['func_1740'] = func_1740
mod = relay.transform.InferType()(mod)
mutated_mod['func_1740'] = func_1740
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1741 = relay.var("var_1741", dtype = "float32", shape = (12, 6, 6))#candidate|1741|(12, 6, 6)|var|float32
func_1740_call = mutated_mod.get_global_var('func_1740')
call_1742 = func_1740_call(var_1741)
output = call_1742
func_1743 = relay.Function([var_1741], output)
mutated_mod['func_1743'] = func_1743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1400_call = mod.get_global_var('func_1400')
func_1401_call = mutated_mod.get_global_var('func_1401')
call_1784 = func_1400_call()
call_1785 = func_1400_call()
func_1647_call = mod.get_global_var('func_1647')
func_1649_call = mutated_mod.get_global_var('func_1649')
call_1787 = relay.TupleGetItem(func_1647_call(), 0)
call_1788 = relay.TupleGetItem(func_1649_call(), 0)
func_1647_call = mod.get_global_var('func_1647')
func_1649_call = mutated_mod.get_global_var('func_1649')
call_1789 = relay.TupleGetItem(func_1647_call(), 1)
call_1790 = relay.TupleGetItem(func_1649_call(), 1)
output = relay.Tuple([call_1784,call_1787,call_1789,])
output2 = relay.Tuple([call_1785,call_1788,call_1790,])
func_1801 = relay.Function([], output)
mod['func_1801'] = func_1801
mod = relay.transform.InferType()(mod)
output = func_1801()
func_1802 = relay.Function([], output)
mutated_mod['func_1802'] = func_1802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_1813 = relay.TupleGetItem(func_1619_call(), 0)
call_1814 = relay.TupleGetItem(func_1621_call(), 0)
output = relay.Tuple([call_1813,])
output2 = relay.Tuple([call_1814,])
func_1826 = relay.Function([], output)
mod['func_1826'] = func_1826
mod = relay.transform.InferType()(mod)
output = func_1826()
func_1827 = relay.Function([], output)
mutated_mod['func_1827'] = func_1827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_1834 = relay.TupleGetItem(func_1619_call(), 0)
call_1835 = relay.TupleGetItem(func_1621_call(), 0)
func_220_call = mod.get_global_var('func_220')
func_222_call = mutated_mod.get_global_var('func_222')
var_1838 = relay.var("var_1838", dtype = "float32", shape = (5, 195))#candidate|1838|(5, 195)|var|float32
call_1837 = func_220_call(relay.reshape(var_1838.astype('float32'), [13, 15, 5]))
call_1839 = func_220_call(relay.reshape(var_1838.astype('float32'), [13, 15, 5]))
bop_1845 = relay.floor_divide(var_1838.astype('float64'), relay.reshape(call_1837.astype('float64'), relay.shape_of(var_1838))) # shape=(5, 195)
bop_1848 = relay.floor_divide(var_1838.astype('float64'), relay.reshape(call_1839.astype('float64'), relay.shape_of(var_1838))) # shape=(5, 195)
var_1852 = relay.var("var_1852", dtype = "float32", shape = (5, 195))#candidate|1852|(5, 195)|var|float32
bop_1853 = relay.greater(var_1838.astype('bool'), relay.reshape(var_1852.astype('bool'), relay.shape_of(var_1838))) # shape=(5, 195)
output = relay.Tuple([call_1834,bop_1845,bop_1853,])
output2 = relay.Tuple([call_1835,bop_1848,bop_1853,])
func_1869 = relay.Function([var_1838,var_1852,], output)
mod['func_1869'] = func_1869
mod = relay.transform.InferType()(mod)
mutated_mod['func_1869'] = func_1869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1869_call = mutated_mod.get_global_var('func_1869')
var_1871 = relay.var("var_1871", dtype = "float32", shape = (5, 195))#candidate|1871|(5, 195)|var|float32
var_1872 = relay.var("var_1872", dtype = "float32", shape = (5, 195))#candidate|1872|(5, 195)|var|float32
call_1870 = func_1869_call(var_1871,var_1872,)
output = call_1870
func_1873 = relay.Function([var_1871,var_1872,], output)
mutated_mod['func_1873'] = func_1873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1801_call = mod.get_global_var('func_1801')
func_1802_call = mutated_mod.get_global_var('func_1802')
call_1895 = relay.TupleGetItem(func_1801_call(), 1)
call_1896 = relay.TupleGetItem(func_1802_call(), 1)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_1909 = func_1482_call()
call_1910 = func_1482_call()
uop_1918 = relay.asinh(call_1895.astype('float64')) # shape=(12, 6, 6)
uop_1920 = relay.asinh(call_1896.astype('float64')) # shape=(12, 6, 6)
uop_1921 = relay.atanh(uop_1918.astype('float32')) # shape=(12, 6, 6)
uop_1923 = relay.atanh(uop_1920.astype('float32')) # shape=(12, 6, 6)
output = relay.Tuple([call_1909,uop_1921,])
output2 = relay.Tuple([call_1910,uop_1923,])
func_1933 = relay.Function([], output)
mod['func_1933'] = func_1933
mod = relay.transform.InferType()(mod)
output = func_1933()
func_1934 = relay.Function([], output)
mutated_mod['func_1934'] = func_1934
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1957 = relay.const([[[8.999602,-7.536968,4.845068,4.495233],[6.291360,7.902455,-4.790846,9.056587],[9.978792,-3.054190,5.760499,-5.757550],[-5.218990,3.949267,-7.432801,4.542015],[-8.439320,-2.060920,-1.195840,-9.337164],[-6.600575,-1.479122,7.725571,9.981797],[-4.636165,-4.295848,-8.402807,7.478863],[-7.712506,7.012666,1.016905,6.903625],[3.956806,1.062123,3.972343,2.329526],[-0.933452,-8.950863,-8.396135,-6.820195],[5.314112,-0.347346,7.644491,-3.369635],[-8.020756,5.185192,-6.717228,-6.398015],[-5.596082,5.712072,3.608278,-7.262105],[-6.723741,5.474914,-2.218639,4.836663],[-1.100146,2.791533,-1.213201,-6.427857]],[[8.092766,-6.849777,-8.770714,3.788156],[4.046760,-1.141975,-7.493687,-3.062608],[5.352780,9.492841,4.257270,9.796053],[-5.388658,-0.428839,-8.856580,5.430878],[-4.574261,9.722630,-1.314354,3.193350],[9.910118,-5.799840,-2.613130,-1.705692],[0.412043,2.653606,9.438202,-0.930557],[7.480245,-1.541047,8.014610,-1.434236],[8.360292,-8.621206,-9.181089,0.060264],[1.737454,8.183112,-0.603252,3.515623],[8.109755,8.487450,6.270201,-8.908900],[-8.488993,-8.957088,8.721388,6.883274],[-1.168815,-3.628381,9.920449,-0.484229],[-6.071676,0.907934,-1.645012,-1.523961],[4.176416,-3.065626,4.304957,-3.076358]],[[4.489304,-0.854666,1.119672,4.614086],[6.182796,-6.576810,-3.666482,-4.965643],[3.598690,0.490876,-3.498609,6.925374],[4.381327,6.431284,7.360054,-7.405702],[-2.035956,8.174282,-9.168554,-6.998796],[-8.637416,1.215286,8.410472,2.882719],[8.744959,-8.138432,-9.773682,2.544066],[2.425384,3.986159,-7.503471,9.010132],[-1.941841,-5.488236,-8.614258,-5.632914],[-3.584426,2.393794,6.016791,-7.812766],[2.548485,4.086554,-0.166681,-2.774657],[2.255753,-2.164019,5.184119,-2.918554],[-2.811496,9.996611,4.330789,-5.253933],[7.263365,-9.123083,-1.883762,4.667834],[0.122844,-5.296378,1.326967,-2.207001]],[[-6.033619,9.993066,-3.644924,6.763962],[-0.819722,9.308656,-1.995461,4.219879],[3.041692,4.857690,-8.932507,-8.259477],[4.347384,-1.383093,4.015147,6.947240],[6.721433,1.479170,-3.694514,3.790625],[6.300990,7.016407,-7.524245,0.676346],[-9.362056,4.348426,4.752410,-3.693891],[-8.124479,-4.435805,3.459409,8.007815],[-6.239254,6.502311,7.069588,3.441204],[3.395876,8.543257,-9.629206,-1.995123],[9.937853,5.233605,1.626228,7.270196],[-0.940240,1.218428,7.269978,8.119009],[3.791171,-8.113313,6.110039,-8.569065],[-4.873208,-4.215662,-1.513342,4.450861],[-1.546177,5.766777,6.171755,-0.431878]]], dtype = "float64")#candidate|1957|(4, 15, 4)|const|float64
var_1958 = relay.var("var_1958", dtype = "float64", shape = (4, 15, 4))#candidate|1958|(4, 15, 4)|var|float64
bop_1959 = relay.floor_mod(const_1957.astype('float64'), relay.reshape(var_1958.astype('float64'), relay.shape_of(const_1957))) # shape=(4, 15, 4)
output = relay.Tuple([bop_1959,])
output2 = relay.Tuple([bop_1959,])
func_1967 = relay.Function([var_1958,], output)
mod['func_1967'] = func_1967
mod = relay.transform.InferType()(mod)
var_1968 = relay.var("var_1968", dtype = "float64", shape = (4, 15, 4))#candidate|1968|(4, 15, 4)|var|float64
output = func_1967(var_1968)
func_1969 = relay.Function([var_1968], output)
mutated_mod['func_1969'] = func_1969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1541_call = mod.get_global_var('func_1541')
func_1542_call = mutated_mod.get_global_var('func_1542')
call_2053 = func_1541_call()
call_2054 = func_1541_call()
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_2058 = relay.TupleGetItem(func_1619_call(), 0)
call_2059 = relay.TupleGetItem(func_1621_call(), 0)
output = relay.Tuple([call_2053,call_2058,])
output2 = relay.Tuple([call_2054,call_2059,])
func_2065 = relay.Function([], output)
mod['func_2065'] = func_2065
mod = relay.transform.InferType()(mod)
output = func_2065()
func_2066 = relay.Function([], output)
mutated_mod['func_2066'] = func_2066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_2071 = relay.TupleGetItem(func_1386_call(), 0)
call_2072 = relay.TupleGetItem(func_1388_call(), 0)
const_2085 = relay.const([[[6.162941,-4.109963,2.304425,6.121074,6.827093,-0.128086],[8.094657,0.464824,-1.726441,2.286219,-1.181232,3.924192],[-6.772245,9.061834,5.383689,-6.451253,-2.742647,2.110690],[-7.395462,6.049861,3.466695,-8.694838,7.671544,7.225160],[4.352037,2.521272,8.388783,4.998034,-4.701613,6.008629],[9.421147,-8.893023,4.589268,2.680007,6.374391,7.046804]],[[-6.820114,2.889011,-9.535682,0.357101,1.548230,9.898648],[3.028981,-4.092362,-0.417132,-0.775677,2.539710,3.333757],[-6.541238,4.073914,6.951381,5.765976,-5.917573,-1.240751],[3.225755,-7.060554,-2.584739,0.762503,-4.091270,-9.842602],[5.481322,-7.501155,5.830874,4.269754,-3.391644,6.481737],[-1.256115,-6.997771,0.735072,3.671905,-5.490678,-7.083830]],[[6.701924,7.191899,7.818029,-4.827982,-6.951799,-6.744059],[6.934852,6.491901,-5.670407,3.621864,2.014222,5.543997],[-1.662516,3.229874,8.406474,-0.006739,1.619529,-3.492236],[7.014144,-2.805163,-5.928871,3.837323,-2.797514,8.874127],[-7.434983,3.371797,-2.768549,-9.025592,7.481306,-1.017330],[1.495136,-7.253940,-7.433935,-1.074147,3.569711,3.988624]],[[5.184574,4.952258,8.116911,-2.501827,-9.967115,-9.648925],[-6.987860,2.231543,-4.333483,-9.962962,-5.620154,9.917248],[-1.530333,-6.977837,-4.808253,8.899947,5.597956,6.418374],[0.927466,-2.003140,-6.225559,4.342373,2.735114,-1.118686],[-7.339019,-5.821763,1.380904,5.899511,8.300570,-6.006631],[7.606404,0.760876,-0.882256,4.469036,-9.057386,0.605773]],[[-6.682512,0.292738,-1.939257,-2.833209,7.408612,6.644260],[-9.833043,-4.174841,1.528746,8.785194,-0.485857,7.366010],[5.199096,-2.318791,-7.148905,-6.577955,-8.543517,-0.546746],[-2.169021,2.216604,4.643995,-3.921793,7.386248,9.387421],[9.095530,7.069204,0.589460,4.758669,-3.399103,-8.813680],[1.172231,5.117323,5.290383,-5.759079,-4.539296,6.604659]],[[5.854332,8.350958,-2.267545,7.201782,8.730682,0.454914],[9.693758,-6.297546,-4.506216,-1.600913,4.140968,-9.811266],[1.746907,-2.781134,-6.212278,-9.400804,-9.019984,6.936112],[-8.490943,-9.577260,6.237791,0.394137,-5.435602,-5.838124],[-4.581239,6.047576,7.478895,-2.785751,-7.855001,-9.740539],[-3.525652,-8.766966,8.742971,8.057906,-1.162626,8.035616]],[[2.114393,-8.586410,-4.991971,2.062377,6.942772,6.868305],[-3.115941,-3.484502,-0.439351,0.429478,1.154519,6.523713],[9.380334,-6.116963,2.006482,-0.248326,-5.074940,-2.140763],[3.577153,-5.099391,-2.797699,4.485267,3.245307,-5.883241],[6.515629,7.727021,8.434835,8.635498,7.524175,1.418566],[0.480196,-2.131191,-8.201288,3.443381,-5.799707,3.350336]],[[2.487432,4.146663,-6.862808,-9.857897,4.567875,-4.979752],[0.469221,-0.056135,6.083661,8.196678,3.396257,9.766823],[-5.593485,4.076802,-7.474488,-8.409247,-1.989773,-1.079723],[4.891091,-9.460957,-2.386321,0.032146,-9.603548,8.595666],[4.820984,-7.044989,-2.163729,5.474265,-1.056527,9.977914],[7.839709,-2.406212,7.748420,-6.569330,-5.544508,7.222809]],[[5.254440,-6.722195,-9.399263,2.726431,-7.294848,-5.929047],[7.209539,8.896055,9.461415,-7.172789,-2.506772,-8.252104],[-8.039517,-2.665695,4.474549,5.876315,0.132360,-6.975920],[5.795216,1.164263,9.243847,-0.185171,7.616727,7.911038],[-4.314507,3.335152,-1.866036,-6.310090,-4.936344,0.661645],[6.921863,-1.145081,-6.368617,-1.662610,8.283719,5.952864]],[[-9.701242,4.172447,-7.161905,-3.329273,6.093540,4.060771],[5.308885,-4.546700,3.227770,3.396111,-2.065694,4.785521],[-8.531429,1.477649,7.685597,-2.464437,-3.859896,-6.150903],[-7.779954,-5.184124,-0.036571,-6.944557,1.939460,-8.835026],[-4.021863,0.856663,6.472673,-8.359319,9.998298,2.006406],[-9.452624,-9.660730,-6.277525,6.258679,4.713610,-7.956068]],[[-5.488781,5.001449,9.336337,-8.841223,6.752750,-8.532025],[-0.116960,-8.126855,-3.648516,-0.794113,6.039198,-5.409518],[2.923531,8.607457,5.388415,1.588855,-0.001343,1.653036],[-1.762227,3.265724,-8.694585,-8.384167,-3.580160,-9.447443],[3.053325,-9.002929,9.408826,-3.451089,-1.155013,8.079044],[3.056769,5.675765,4.478386,1.570507,-5.164499,8.157660]],[[-0.348104,3.267762,-8.655219,-8.283606,0.510100,-5.575320],[6.799223,3.351989,-3.198475,0.198201,7.226373,3.789162],[5.479981,-6.499135,-3.240053,-0.525163,-6.357834,1.894117],[4.986378,-0.715204,-4.740385,0.293062,2.940719,-1.218861],[9.492917,2.536471,-7.872188,3.917065,1.108924,-1.735349],[6.792572,-2.269005,-1.182496,-4.142726,9.639712,-7.603714]]], dtype = "float32")#candidate|2085|(12, 6, 6)|const|float32
bop_2086 = relay.not_equal(call_2071.astype('bool'), relay.reshape(const_2085.astype('bool'), relay.shape_of(call_2071))) # shape=(12, 6, 6)
bop_2089 = relay.not_equal(call_2072.astype('bool'), relay.reshape(const_2085.astype('bool'), relay.shape_of(call_2072))) # shape=(12, 6, 6)
func_1967_call = mod.get_global_var('func_1967')
func_1969_call = mutated_mod.get_global_var('func_1969')
var_2106 = relay.var("var_2106", dtype = "float64", shape = (240,))#candidate|2106|(240,)|var|float64
call_2105 = relay.TupleGetItem(func_1967_call(relay.reshape(var_2106.astype('float64'), [4, 15, 4])), 0)
call_2107 = relay.TupleGetItem(func_1969_call(relay.reshape(var_2106.astype('float64'), [4, 15, 4])), 0)
output = relay.Tuple([bop_2086,call_2105,var_2106,])
output2 = relay.Tuple([bop_2089,call_2107,var_2106,])
func_2110 = relay.Function([var_2106,], output)
mod['func_2110'] = func_2110
mod = relay.transform.InferType()(mod)
mutated_mod['func_2110'] = func_2110
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2111 = relay.var("var_2111", dtype = "float64", shape = (240,))#candidate|2111|(240,)|var|float64
func_2110_call = mutated_mod.get_global_var('func_2110')
call_2112 = func_2110_call(var_2111)
output = call_2112
func_2113 = relay.Function([var_2111], output)
mutated_mod['func_2113'] = func_2113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1400_call = mod.get_global_var('func_1400')
func_1401_call = mutated_mod.get_global_var('func_1401')
call_2127 = func_1400_call()
call_2128 = func_1400_call()
output = relay.Tuple([call_2127,])
output2 = relay.Tuple([call_2128,])
func_2129 = relay.Function([], output)
mod['func_2129'] = func_2129
mod = relay.transform.InferType()(mod)
mutated_mod['func_2129'] = func_2129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2129_call = mutated_mod.get_global_var('func_2129')
call_2130 = func_2129_call()
output = call_2130
func_2131 = relay.Function([], output)
mutated_mod['func_2131'] = func_2131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_2149 = relay.TupleGetItem(func_1386_call(), 0)
call_2150 = relay.TupleGetItem(func_1388_call(), 0)
output = call_2149
output2 = call_2150
func_2164 = relay.Function([], output)
mod['func_2164'] = func_2164
mod = relay.transform.InferType()(mod)
output = func_2164()
func_2165 = relay.Function([], output)
mutated_mod['func_2165'] = func_2165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mod.get_global_var('func_1688')
func_1690_call = mutated_mod.get_global_var('func_1690')
call_2174 = func_1688_call()
call_2175 = func_1688_call()
output = relay.Tuple([call_2174,])
output2 = relay.Tuple([call_2175,])
func_2178 = relay.Function([], output)
mod['func_2178'] = func_2178
mod = relay.transform.InferType()(mod)
mutated_mod['func_2178'] = func_2178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2178_call = mutated_mod.get_global_var('func_2178')
call_2179 = func_2178_call()
output = call_2179
func_2180 = relay.Function([], output)
mutated_mod['func_2180'] = func_2180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_2205 = relay.TupleGetItem(func_1619_call(), 0)
call_2206 = relay.TupleGetItem(func_1621_call(), 0)
output = call_2205
output2 = call_2206
func_2209 = relay.Function([], output)
mod['func_2209'] = func_2209
mod = relay.transform.InferType()(mod)
output = func_2209()
func_2210 = relay.Function([], output)
mutated_mod['func_2210'] = func_2210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_2231 = func_1482_call()
call_2232 = func_1482_call()
output = call_2231
output2 = call_2232
func_2233 = relay.Function([], output)
mod['func_2233'] = func_2233
mod = relay.transform.InferType()(mod)
output = func_2233()
func_2234 = relay.Function([], output)
mutated_mod['func_2234'] = func_2234
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2240 = relay.var("var_2240", dtype = "float64", shape = (16, 8, 6))#candidate|2240|(16, 8, 6)|var|float64
uop_2241 = relay.exp(var_2240.astype('float64')) # shape=(16, 8, 6)
var_2243 = relay.var("var_2243", dtype = "float64", shape = (16, 8, 6))#candidate|2243|(16, 8, 6)|var|float64
bop_2244 = relay.left_shift(uop_2241.astype('uint8'), relay.reshape(var_2243.astype('uint8'), relay.shape_of(uop_2241))) # shape=(16, 8, 6)
output = bop_2244
output2 = bop_2244
func_2249 = relay.Function([var_2240,var_2243,], output)
mod['func_2249'] = func_2249
mod = relay.transform.InferType()(mod)
var_2250 = relay.var("var_2250", dtype = "float64", shape = (16, 8, 6))#candidate|2250|(16, 8, 6)|var|float64
var_2251 = relay.var("var_2251", dtype = "float64", shape = (16, 8, 6))#candidate|2251|(16, 8, 6)|var|float64
output = func_2249(var_2250,var_2251,)
func_2252 = relay.Function([var_2250,var_2251,], output)
mutated_mod['func_2252'] = func_2252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1541_call = mod.get_global_var('func_1541')
func_1542_call = mutated_mod.get_global_var('func_1542')
call_2311 = func_1541_call()
call_2312 = func_1541_call()
output = relay.Tuple([call_2311,])
output2 = relay.Tuple([call_2312,])
func_2318 = relay.Function([], output)
mod['func_2318'] = func_2318
mod = relay.transform.InferType()(mod)
mutated_mod['func_2318'] = func_2318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2318_call = mutated_mod.get_global_var('func_2318')
call_2319 = func_2318_call()
output = call_2319
func_2320 = relay.Function([], output)
mutated_mod['func_2320'] = func_2320
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2392 = relay.var("var_2392", dtype = "float32", shape = ())#candidate|2392|()|var|float32
const_2393 = relay.const([[[7.333219,2.102053,-1.702857,-6.288938,-2.502969,-1.217848,8.951031,1.415019,-9.669377,8.805337,-5.204488,-0.143918],[0.551733,-9.674478,3.515144,8.710517,-0.475076,4.769406,-3.265628,-4.137868,-4.770317,1.831724,2.262054,6.758615],[-9.672026,-0.723334,-7.768602,5.994772,-7.950062,-1.578769,6.836284,-8.809683,-8.156612,2.463257,-5.405625,9.858043],[-7.721571,-5.450263,4.665444,-9.115178,-9.539521,-5.250767,3.359371,4.788772,1.443009,3.918636,9.483809,-8.905970],[-4.614938,-4.628728,4.110466,7.190010,-7.936429,7.411542,0.632424,1.342010,7.325177,2.046461,-6.063567,-4.138143],[-1.965812,-4.453090,6.686724,9.152498,-3.544241,-4.142548,3.319364,-1.374672,6.674732,4.891510,6.751066,0.222003],[-2.981881,6.194568,9.376244,0.262167,-4.256718,3.777364,-6.846260,1.221053,-7.249210,5.573760,7.156427,5.377204],[1.553748,4.546605,-0.007009,0.794364,4.661814,4.665241,-2.797593,-5.852962,-3.531234,8.415795,-9.648945,-0.184470],[-0.657037,-1.306802,4.621481,3.034681,-2.984312,9.072241,4.559587,-1.234422,1.600215,8.302882,-6.764223,-9.787655],[9.626667,4.461329,-9.880256,-8.510347,1.782787,-7.966364,-9.727112,-7.792299,9.381807,0.755380,-5.191405,6.757417]],[[7.359122,-3.631666,2.563870,6.944832,-4.594837,-6.316578,-4.647488,8.170326,-3.940706,-0.673610,8.997325,9.065273],[-2.739181,6.479079,-2.087937,-0.334886,9.927679,8.833879,-6.504612,6.674723,-7.806429,3.673832,-1.598036,-2.637745],[2.828913,-9.246225,2.767887,8.936993,-9.076483,1.795345,2.795680,0.087368,-7.569891,2.582682,5.826335,0.376026],[8.653315,-7.643928,7.808105,-4.532211,9.189562,-3.140568,-1.886893,-5.175518,-6.962555,-0.997795,5.999060,1.700457],[-2.435810,-8.799901,8.224256,3.546792,1.670578,4.589949,0.510964,5.152244,-2.767149,0.689472,8.120451,6.029061],[9.856170,6.541944,6.319431,-9.156759,-4.762050,6.335227,-5.045099,-2.776436,-5.639710,7.847788,1.848354,-3.918829],[-6.861156,-8.715728,5.505290,3.378726,1.282896,-0.577769,3.477663,6.789072,6.957564,-0.889150,6.485773,9.770619],[-7.076569,7.678121,1.708508,0.270209,-8.990882,4.148090,5.338936,-2.334362,-3.446902,-9.281834,-0.408391,7.671262],[-2.510621,2.897392,-4.581160,-3.594056,9.249366,-4.825384,0.432763,-6.403000,6.036436,-6.280428,8.305094,-5.700895],[4.650510,2.364267,-8.636163,5.331692,-4.795057,-6.308423,-1.375248,6.422120,5.118670,-7.137198,7.578114,-9.441571]],[[5.380160,-5.018963,1.784732,-9.101280,4.104346,-2.871116,-6.525609,-7.854363,4.845366,8.380993,5.420880,7.837646],[-2.719547,-5.209616,2.589718,-9.894024,7.376355,8.048207,3.352796,3.302995,6.617143,-0.193149,2.965159,6.836542],[-6.361414,-5.791833,6.059102,-7.622365,-6.414816,-8.222198,7.396859,-7.879601,8.329320,0.592830,0.801106,9.474786],[6.377088,-3.700558,-4.769858,5.244362,-2.224648,7.100365,7.453416,7.433021,-0.073401,4.704181,-2.554552,-8.027450],[1.559639,9.229222,-7.822272,-2.757691,-0.822066,-9.919844,-3.939849,7.651724,-4.278272,-6.319049,-2.609738,3.830287],[2.677021,-8.423822,-0.420315,7.412257,8.884421,-8.009721,1.158773,3.668674,7.314805,0.290498,4.429783,-9.729551],[2.515484,1.924237,-1.651620,-6.224527,-3.656855,5.030496,2.327206,-9.757275,2.244412,-8.719012,1.199288,4.165042],[6.627317,-3.118610,4.990223,-6.679847,-0.465655,3.123259,-4.714440,-8.446955,-7.090497,6.946953,1.084754,-6.541879],[-5.692977,5.216492,-3.514765,-2.061346,3.206347,-4.643194,3.433473,6.971897,3.918094,-0.064685,-5.238918,-0.766874],[9.031323,-0.986558,5.425028,3.840193,4.790993,-9.272287,8.333193,-1.757915,7.664950,-1.092045,0.365485,-1.357331]],[[-6.606630,0.360175,-1.265173,5.769443,3.373018,-3.587652,8.279746,7.382182,-9.476262,-9.870917,-4.771780,7.008142],[-2.282216,3.951653,0.077489,-2.839939,-4.928073,2.794352,0.357144,-2.339958,-2.280865,2.228930,3.380562,6.344424],[-9.732300,5.205962,-3.600014,2.577458,-9.246422,-6.530641,-3.136417,4.406649,-4.906979,7.278149,-6.645403,3.211323],[-7.945492,-4.320311,6.905276,-7.908106,6.955150,-1.487806,-9.485486,-9.654492,-1.853157,-5.146557,4.483358,-7.585299],[-2.110375,5.021411,7.965252,-0.794719,-5.724148,8.551029,-2.870450,3.566855,-9.735813,5.292355,7.649924,6.142272],[-2.430611,8.865335,-7.466498,-6.308133,6.926910,8.733042,-0.890256,9.429809,-8.024104,-0.492014,-7.677153,-1.762207],[6.772411,9.149416,-6.583112,6.409963,-2.983612,-4.123018,-1.785482,-5.232476,9.978122,-2.798326,4.194524,-4.703440],[2.999274,-4.949032,-4.202353,-0.767566,-1.439779,7.261027,-8.667148,3.360602,1.806747,7.250094,-0.364836,5.963843],[1.568673,7.916899,0.769998,-0.574529,-7.038484,-5.786318,-0.057270,1.828229,-8.360981,2.732370,4.163427,-5.449210],[-8.683237,-5.021113,9.557319,-8.865808,6.798557,5.102420,2.220649,9.055875,-4.453806,9.564534,-5.606822,4.063762]],[[8.898303,-6.474837,4.286988,2.223493,-3.958117,3.026660,9.104716,3.297976,0.934804,-7.227617,-6.310049,3.722952],[7.995716,5.768458,3.924844,9.845230,9.557469,3.728954,-2.927493,8.619789,-3.472813,-9.407850,-8.606128,-1.445285],[-3.718808,7.624995,1.942548,8.768954,9.393051,-0.466887,4.642919,2.177233,7.270175,1.364487,0.478858,6.846426],[0.308150,3.528290,8.007725,-4.994700,-2.751414,-0.295304,-0.212661,8.371157,4.392062,-4.769450,0.192593,2.801180],[-2.357797,-9.435100,0.878634,5.601370,7.192725,9.267229,-4.981203,-1.530282,2.323966,-0.028763,-6.053122,0.039696],[-7.305621,-0.507027,0.223943,-5.767778,-8.644586,5.941938,-5.956859,8.943623,2.864200,-6.689749,-6.219407,3.388985],[-4.090277,3.182862,8.620323,-3.676661,-8.680287,8.286793,-9.866113,2.830943,-7.766533,6.721640,1.501115,-7.099408],[1.467892,-9.545357,2.171944,2.569128,-6.115977,-9.976575,7.586098,9.982742,8.640555,0.133667,-1.451271,-3.205331],[0.204034,-3.983633,-3.364779,2.605744,4.006702,3.040170,0.780034,-0.939857,1.242264,9.831920,3.528521,-7.433200],[1.405763,5.564168,-7.895362,-2.862874,1.138985,-6.100968,5.199738,3.648787,-2.101289,3.582097,0.247078,1.457148]],[[-9.274565,1.124503,8.601307,-7.029304,7.502422,-3.473679,-3.207672,6.535141,4.006048,7.726793,3.406526,-4.884241],[-9.310680,-0.525219,5.339061,-4.728426,-3.344056,-3.359980,-2.805559,1.828883,-0.032043,3.209930,-3.317086,-6.860074],[6.690478,0.956945,-9.460336,-5.472056,2.838144,-6.956357,-2.702157,5.912740,-6.178893,-4.318205,-7.972915,-5.904564],[4.588790,4.078898,-0.265355,-0.785569,-1.893556,-0.184521,1.958524,4.703248,2.453766,9.928471,-8.802385,4.446779],[-3.412844,8.144802,1.748441,9.348342,-3.060237,-7.682399,-4.633814,-0.959850,-0.442844,7.498838,8.848368,5.311274],[-5.363041,-8.667274,8.269262,3.161743,8.487119,-7.820336,-6.239239,9.247449,5.327172,1.518336,-7.176363,-2.152393],[5.511367,-9.537150,-7.336165,3.274031,1.842854,6.197777,1.327922,-8.327144,-9.652047,5.728922,2.029901,7.328982],[6.833687,-2.972942,-5.205496,-8.498057,1.180948,-6.770630,-3.668633,-4.609115,4.782687,-9.983999,2.929638,9.553054],[-5.205480,-6.307506,2.872252,-5.298070,3.034814,1.027436,9.871535,6.737549,-8.965657,-3.704658,2.056415,-1.394879],[-5.054144,-9.710481,-0.299870,9.456652,-0.500430,-9.862164,1.136594,-3.289469,3.143637,-0.344245,-6.589185,1.570138]],[[6.373288,5.850099,1.176158,1.691405,4.212197,2.365297,9.741682,-4.596666,-3.121617,-4.944051,9.776647,-3.980795],[-2.019083,5.682026,-6.714478,4.747759,-3.505133,2.472903,1.209194,7.374878,-0.329756,-8.132213,-5.109437,6.144787],[3.359576,-0.466419,2.476614,0.115692,-9.220878,-6.924409,-2.702624,-6.651977,-2.012381,-8.298923,8.285457,-9.069685],[-6.066357,9.388627,9.142969,7.459588,-6.583659,2.926906,9.620209,0.115644,0.874657,-1.732212,-6.374131,-0.865532],[-0.140855,-0.143250,9.490122,1.885281,9.359031,-7.642231,-8.679541,9.967695,3.904893,-7.235344,4.320002,-0.340087],[0.327691,-9.177324,-1.877541,-4.492987,5.310343,-4.125402,-7.043356,-1.457354,-1.164683,-5.761831,7.023738,-1.907884],[0.742136,7.661074,-1.537201,3.902967,-1.358931,2.899205,0.920725,-7.539762,-8.789767,4.672817,-5.278096,-1.641933],[-3.877631,8.188337,-7.026694,-2.493648,-9.053179,6.206746,-2.381904,-2.919221,-8.798007,1.275380,-0.124007,5.185847],[-2.703493,0.744558,-4.161244,1.656080,-9.865111,-5.840818,-3.137649,-8.121137,-3.248322,-4.174574,9.224912,-8.459427],[-9.898674,8.133239,3.031013,-1.340386,4.039944,-2.037547,0.820335,-0.136367,5.937294,5.092129,8.746089,-7.109977]],[[0.305877,-6.420933,-7.732764,-6.759184,-6.324747,7.580400,-2.340489,6.281825,0.229486,-6.647054,-0.026606,-5.834641],[4.432282,5.179226,-9.710140,9.584921,-7.893760,-2.804434,-7.231754,-3.366886,-1.583935,-7.633743,3.849122,-6.511057],[5.822638,3.710083,6.917357,1.992313,6.354256,4.442284,0.190781,9.160330,1.803483,-9.094194,3.500047,-0.505964],[-4.581107,-9.209647,3.742367,-5.770679,7.392871,-6.590276,2.002083,-0.351495,-8.178021,-2.156875,-0.903423,-0.740371],[6.326490,6.421362,6.503232,-7.020156,-3.114789,2.720124,3.670831,-2.424315,3.082333,6.199162,9.324288,-8.848906],[-4.051897,9.948940,-6.701938,-5.648010,-2.434840,-5.801351,1.469068,4.963573,-0.062661,5.539972,-8.959196,-2.701056],[-9.316315,-1.495524,9.012882,-5.763989,-9.943912,-0.524739,7.745650,-4.950796,-7.242602,1.469530,-2.915367,4.435357],[1.485118,-8.104569,0.364652,5.983822,5.453854,8.572972,-7.126452,-5.792222,3.968824,-4.893317,5.841230,-8.204534],[9.047734,9.693147,-3.243273,-6.984510,-7.273974,1.772213,-8.430247,5.911389,-7.499648,-9.924228,-0.105245,7.541450],[-9.167208,-9.505074,7.998401,0.042668,-6.295239,-2.009196,-1.467264,-8.795076,1.978270,-9.707869,6.846395,6.683056]],[[-5.567292,-8.670773,-3.370338,-6.903867,3.008075,-7.848332,3.734057,-5.195263,0.018347,-3.345399,9.582316,-6.619819],[-8.865314,-9.546165,-8.031457,5.927015,-6.517178,-6.861735,-3.078247,5.976673,4.186666,-7.872122,3.647439,7.262802],[5.754147,-6.577583,-8.052511,1.747499,9.513366,-4.482895,-9.746198,-9.003104,-4.489665,3.456442,7.918851,-8.590888],[9.662769,7.290420,1.065263,4.080948,-8.088258,-7.637645,-0.327387,9.047191,5.196164,6.666345,-1.417601,-9.492672],[-8.388699,8.897601,-3.013894,0.165008,-8.460112,4.028229,5.244766,-6.604300,-1.632768,-8.421231,-6.300955,4.745640],[-6.983955,7.101425,-8.004240,7.778709,-9.416547,5.112391,-9.389782,-2.426215,7.929905,5.318021,-5.606311,4.181099],[-2.506326,9.310088,9.598558,-7.902165,9.811467,-9.779811,-2.657529,2.197437,-2.336479,8.921139,5.332859,7.224628],[2.843150,3.133062,-0.915567,2.064022,-9.454765,-8.556950,3.798296,1.952915,-8.935498,-4.508977,9.099911,2.560432],[-1.780201,7.801213,-7.843319,8.875753,0.261890,6.565521,3.695218,-1.461945,3.278344,1.485824,9.957326,-8.496917],[1.360114,-0.692593,-8.998637,-8.834871,4.467042,-0.942822,9.353248,1.247846,-1.371282,-4.005184,3.326492,1.221803]],[[6.460137,2.228670,-6.445016,5.304388,7.664105,-3.796161,2.011299,-0.045470,-4.795139,7.222137,-9.604928,-0.455043],[5.213185,-1.518069,3.332017,-1.340349,1.850789,-3.189053,0.633341,9.393205,5.276290,-6.680649,-3.547739,8.291865],[8.572368,-3.793784,-3.779461,-8.553179,-3.915214,-9.783253,-3.023289,-7.112693,6.067749,7.672068,-6.447757,7.735248],[4.410650,0.938588,-2.600545,-4.812450,6.830968,-0.362635,-1.986587,2.119591,2.260279,-9.195834,-2.627790,2.759910],[8.219798,-9.574481,5.181350,-0.738942,8.579286,7.627954,-2.951830,4.914779,-7.505452,5.009043,-0.060401,1.176793],[3.003567,-3.883014,4.742353,1.875462,-3.730379,-4.633028,1.793215,-7.539317,-3.344134,-7.434607,-1.195447,-6.157852],[0.737954,7.631322,4.288488,-3.177740,-9.826776,-9.618517,-8.196219,7.784732,-7.132258,1.542924,-4.948917,-3.664150],[9.015410,0.426941,1.448526,-4.462373,-2.803000,-3.873550,9.885029,-6.815008,0.519896,1.032506,-5.794732,1.607639],[-7.199878,-3.259220,-0.502008,-0.339416,4.626624,8.358230,0.038720,-2.605315,3.607261,2.571439,2.649638,3.518356],[2.447244,-7.868558,0.887459,-4.075680,-6.454161,-4.637483,5.690323,-6.184906,-5.711712,8.204591,-8.879951,0.222248]],[[0.359102,-4.849926,-5.238987,4.957757,-6.616282,8.913675,0.424066,5.298454,-5.023290,4.408081,-9.157709,0.181085],[3.335079,5.617315,-5.261389,-3.981742,7.989107,-1.653446,-0.518624,1.336314,6.709239,-0.129439,-9.829918,1.205279],[8.820084,9.158427,-1.473145,-2.889666,1.440966,1.085926,8.625665,9.612508,-2.306028,-9.999922,-8.382047,2.952496],[4.848152,-1.877527,-0.947354,-0.448456,-5.972805,5.436292,-7.072097,1.798608,5.006474,5.233801,-0.143911,-9.726356],[-0.736718,3.568650,-9.304706,2.015423,-9.120881,-8.997207,0.311257,-2.708155,-2.540349,-3.914864,9.790849,-3.522034],[1.115628,8.890458,6.020226,-0.901548,6.207025,-9.819128,2.884740,6.308315,3.547356,-8.548158,-8.783204,8.875241],[-3.587909,-6.239117,6.787616,5.644375,-7.195041,-2.027403,-3.557294,-5.502377,-9.146954,5.867072,-5.729174,5.943369],[-6.469001,-8.792948,-7.686242,1.807466,5.123503,-7.939825,7.864399,5.032008,6.216201,5.633765,7.387450,0.900976],[-8.308265,0.576155,7.184361,-9.638428,-4.337535,-8.166477,-1.644634,5.790518,7.006381,-8.394833,6.493838,8.400735],[3.740979,-2.077228,-1.993436,-6.789688,3.600717,2.070372,-2.363761,-4.869855,-3.835916,7.315055,8.345821,-7.426098]],[[1.611575,7.699268,8.493282,1.330365,8.258528,1.609997,0.400018,-8.821230,7.075724,6.242336,3.079949,-9.318374],[-0.764501,3.445075,-0.426423,6.230636,-5.119703,6.590110,9.275713,8.940223,-6.212954,-5.642472,-2.784383,-5.352110],[-2.310327,-4.710792,-4.963248,1.992642,-3.171631,-1.338414,-5.977431,-2.406571,-0.732594,-5.222788,-6.945158,-3.770204],[-2.972248,-4.460782,3.752802,-3.345777,-8.126550,1.570217,9.930605,-4.040217,4.090418,1.724559,-2.494037,2.480832],[6.162964,-5.336414,2.871121,-3.657463,6.209432,-0.035045,-1.860688,-8.535856,9.177517,1.411106,-5.127560,9.580417],[-8.331394,2.782683,-4.775991,4.049203,5.618694,-2.661222,-8.324234,-1.700325,0.800322,-0.704926,-8.356317,9.832018],[-5.439390,-8.388214,-2.830727,3.171861,-2.381442,8.334696,7.295985,-1.646588,-2.182924,1.776217,-9.564700,-3.889747],[-7.077474,3.032199,1.892548,7.077840,5.984467,-5.737203,7.181216,-0.416144,-5.488034,-4.378719,-6.362582,-4.625812],[2.966767,9.374428,-1.693621,-4.818143,-2.601067,3.980493,-7.967023,1.892884,-3.126709,0.838431,2.312383,-9.096901],[8.084596,8.361080,3.797811,-2.324344,9.913450,-7.496852,6.063639,3.959457,-0.784545,0.339937,0.149628,-3.696910]]], dtype = "float32")#candidate|2393|(12, 10, 12)|const|float32
bop_2394 = relay.power(var_2392.astype('float32'), const_2393.astype('float32')) # shape=(12, 10, 12)
output = relay.Tuple([bop_2394,])
output2 = relay.Tuple([bop_2394,])
func_2408 = relay.Function([var_2392,], output)
mod['func_2408'] = func_2408
mod = relay.transform.InferType()(mod)
mutated_mod['func_2408'] = func_2408
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2409 = relay.var("var_2409", dtype = "float32", shape = ())#candidate|2409|()|var|float32
func_2408_call = mutated_mod.get_global_var('func_2408')
call_2410 = func_2408_call(var_2409)
output = call_2410
func_2411 = relay.Function([var_2409], output)
mutated_mod['func_2411'] = func_2411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_2434 = func_1482_call()
call_2435 = func_1482_call()
func_1801_call = mod.get_global_var('func_1801')
func_1802_call = mutated_mod.get_global_var('func_1802')
call_2460 = relay.TupleGetItem(func_1801_call(), 0)
call_2461 = relay.TupleGetItem(func_1802_call(), 0)
func_1541_call = mod.get_global_var('func_1541')
func_1542_call = mutated_mod.get_global_var('func_1542')
call_2463 = func_1541_call()
call_2464 = func_1541_call()
func_2178_call = mod.get_global_var('func_2178')
func_2180_call = mutated_mod.get_global_var('func_2180')
call_2467 = relay.TupleGetItem(func_2178_call(), 0)
call_2468 = relay.TupleGetItem(func_2180_call(), 0)
func_2110_call = mod.get_global_var('func_2110')
func_2113_call = mutated_mod.get_global_var('func_2113')
const_2475 = relay.const([-7.878239,0.114420,5.830449,5.399929,2.196814,-2.225151,2.554669,-7.634311,-1.298225,9.729405,5.307067,-0.912876,-3.090677,6.313996,5.329801,3.923145,6.555339,-1.321187,7.090503,2.252642,-3.042498,-3.685244,-2.805324,7.823930,-6.833067,-2.957385,7.488613,-9.999205,3.822563,0.868923,-8.835403,-0.845063,0.142288,-1.356778,-0.090817,1.426089,8.614682,-6.607871,2.928331,4.038767,6.563604,4.497511,-7.502569,-9.494787,1.776463,-0.822546,-8.593637,2.048488,-6.079222,1.532224,-6.077324,8.303956,-4.477545,5.363842,-2.303022,3.912895,-9.355082,-8.022621,-9.835509,-0.764000,5.963321,5.543950,0.696909,3.784952,5.548188,-3.143632,-2.765910,0.109387,-5.104820,-3.659608,7.048611,-4.416113,-8.169105,-7.424412,0.052674,-5.537148,-5.245045,-0.824867,9.271764,7.254563,-1.848779,-9.025367,5.223764,2.604672,-2.210660,-9.788335,2.572658,4.655025,-7.718664,-0.402822,-8.565709,-8.244677,1.849122,-2.507728,-0.070891,7.942238,4.835143,9.006366,7.704209,-1.608313,-8.997766,-4.714983,6.375447,4.911274,6.601183,1.474050,9.156025,-2.465371,8.722181,7.798708,-5.008708,-3.608734,-5.083976,3.307655,3.180075,7.778709,-0.205616,4.327234,2.189113,5.566573,3.549121,-5.740882,-9.961745,2.991168,5.370242,-2.512808,1.588951,4.073024,-7.308438,4.379473,5.956476,-9.043076,-3.745827,8.251264,-9.537495,2.056019,-0.437528,-5.795660,-8.410434,-9.413951,-0.904211,-9.056897,5.431137,7.186069,-5.089767,5.919444,0.332015,7.663782,-1.915710,8.934679,-8.610857,-5.909650,-1.858410,1.592550,-2.327890,-2.900947,-6.347038,-9.693862,0.998911,-5.975437,-1.724262,6.659347,8.850443,-4.408372,0.583522,-8.310795,-7.378850,-5.882423,-5.226943,8.078428,8.896473,0.211609,-3.098458,-2.384444,-2.056045,3.043362,-1.100537,-8.126859,-0.014533,2.510832,9.104798,8.201499,-9.666744,-2.149652,4.758323,6.455363,-9.588498,3.676380,-9.053724,-2.660201,-0.555829,-4.380634,-0.630287,-3.042223,1.179765,-4.697729,4.558417,-5.006257,-3.144900,-4.661965,-0.897383,-8.114593,8.833694,-6.884743,5.388148,-8.350777,-1.272454,2.221224,0.360585,5.349887,7.900133,1.849294,2.308044,6.327823,9.844308,-0.277236,1.686028,-2.639880,-7.058151,8.420584,3.986940,7.912694,-3.377328,-3.137174,-2.890060,-5.542578,1.540145,-7.968817,0.776953,-7.206468,-6.954170,-7.685326,-9.776779,-2.885599,5.083314,-6.656692,9.540116,6.008296,-6.829588,8.631864], dtype = "float64")#candidate|2475|(240,)|const|float64
call_2474 = relay.TupleGetItem(func_2110_call(relay.reshape(const_2475.astype('float64'), [240,])), 1)
call_2476 = relay.TupleGetItem(func_2113_call(relay.reshape(const_2475.astype('float64'), [240,])), 1)
output = relay.Tuple([call_2434,call_2460,call_2463,call_2467,call_2474,const_2475,])
output2 = relay.Tuple([call_2435,call_2461,call_2464,call_2468,call_2476,const_2475,])
func_2480 = relay.Function([], output)
mod['func_2480'] = func_2480
mod = relay.transform.InferType()(mod)
mutated_mod['func_2480'] = func_2480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mutated_mod.get_global_var('func_2480')
call_2481 = func_2480_call()
output = call_2481
func_2482 = relay.Function([], output)
mutated_mod['func_2482'] = func_2482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1400_call = mod.get_global_var('func_1400')
func_1401_call = mutated_mod.get_global_var('func_1401')
call_2495 = func_1400_call()
call_2496 = func_1400_call()
func_826_call = mod.get_global_var('func_826')
func_830_call = mutated_mod.get_global_var('func_830')
const_2500 = relay.const([[3.784017,-5.289789,8.953369,6.696197,3.479225,7.913514,8.010879,-7.774010,-5.481365,7.546882,-0.474930,1.834191,-2.857670,7.780472,-9.345200,-3.753599,-8.353002,-7.990401,4.864232,9.119429,-8.874292,8.893355,-7.276901,6.602431,7.292718,8.219465,7.320341,-8.278692,-7.519975,-5.289679,8.825682,-6.077270,-1.382914,3.165135,4.026304,-1.080825,7.254334,7.219150,6.196990,5.236828,-6.214111,-5.000508,4.403505,6.499092,9.898115,1.232064,-1.997815,-6.090436,-5.939122,-6.755028,9.706152,7.641968,4.454882,-6.282979,6.636108,3.860134,-7.279660,3.758969,-3.145637,8.134735,5.112041,-2.447502,5.757117,-2.903368,2.862864,3.790816,4.807134,7.443308,0.658231,2.844560,9.971244,-5.006551,8.181041,-1.590653,8.051561,0.576575,-9.136933,-4.424637,-3.465341,6.815406,-7.458355,-6.489305,9.570895,-4.093385,8.531593,6.890646,-0.303936,6.372959,1.125242,5.251883,2.037176,6.256561,5.444719,2.908313,-2.104754,7.547223]], dtype = "float32")#candidate|2500|(1, 96)|const|float32
call_2499 = relay.TupleGetItem(func_826_call(relay.reshape(const_2500.astype('float32'), [4, 12, 2]), relay.reshape(const_2500.astype('float32'), [4, 12, 2]), ), 0)
call_2501 = relay.TupleGetItem(func_830_call(relay.reshape(const_2500.astype('float32'), [4, 12, 2]), relay.reshape(const_2500.astype('float32'), [4, 12, 2]), ), 0)
uop_2504 = relay.sinh(call_2499.astype('float64')) # shape=(4, 12, 2)
uop_2506 = relay.sinh(call_2501.astype('float64')) # shape=(4, 12, 2)
output = relay.Tuple([call_2495,const_2500,uop_2504,])
output2 = relay.Tuple([call_2496,const_2500,uop_2506,])
func_2510 = relay.Function([], output)
mod['func_2510'] = func_2510
mod = relay.transform.InferType()(mod)
mutated_mod['func_2510'] = func_2510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mutated_mod.get_global_var('func_2510')
call_2511 = func_2510_call()
output = call_2511
func_2512 = relay.Function([], output)
mutated_mod['func_2512'] = func_2512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1647_call = mod.get_global_var('func_1647')
func_1649_call = mutated_mod.get_global_var('func_1649')
call_2598 = relay.TupleGetItem(func_1647_call(), 1)
call_2599 = relay.TupleGetItem(func_1649_call(), 1)
func_1826_call = mod.get_global_var('func_1826')
func_1827_call = mutated_mod.get_global_var('func_1827')
call_2600 = relay.TupleGetItem(func_1826_call(), 0)
call_2601 = relay.TupleGetItem(func_1827_call(), 0)
func_1330_call = mod.get_global_var('func_1330')
func_1333_call = mutated_mod.get_global_var('func_1333')
var_2603 = relay.var("var_2603", dtype = "float32", shape = (27,))#candidate|2603|(27,)|var|float32
call_2602 = relay.TupleGetItem(func_1330_call(relay.reshape(var_2603.astype('float32'), [1, 3, 9])), 7)
call_2604 = relay.TupleGetItem(func_1333_call(relay.reshape(var_2603.astype('float32'), [1, 3, 9])), 7)
output = relay.Tuple([call_2598,call_2600,call_2602,var_2603,])
output2 = relay.Tuple([call_2599,call_2601,call_2604,var_2603,])
func_2614 = relay.Function([var_2603,], output)
mod['func_2614'] = func_2614
mod = relay.transform.InferType()(mod)
var_2615 = relay.var("var_2615", dtype = "float32", shape = (27,))#candidate|2615|(27,)|var|float32
output = func_2614(var_2615)
func_2616 = relay.Function([var_2615], output)
mutated_mod['func_2616'] = func_2616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mod.get_global_var('func_2480')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_2668 = relay.TupleGetItem(func_2480_call(), 5)
call_2669 = relay.TupleGetItem(func_2482_call(), 5)
func_2129_call = mod.get_global_var('func_2129')
func_2131_call = mutated_mod.get_global_var('func_2131')
call_2692 = relay.TupleGetItem(func_2129_call(), 0)
call_2693 = relay.TupleGetItem(func_2131_call(), 0)
func_659_call = mod.get_global_var('func_659')
func_662_call = mutated_mod.get_global_var('func_662')
const_2719 = relay.const([6.768119,-5.514024,6.254176,8.762929,-3.069484,4.957526,-5.079225,1.442524,1.991215,1.594862,5.925910,4.793211,-5.853326,-5.430236,-3.620450,2.158664,6.486878,-0.918606,-6.570177,-7.618829,5.884822,-3.656601,-3.870994,9.061154,-1.069710,-8.883061,9.927050,6.221694,-8.789746,9.449490,-0.327630,8.824032,5.617491,2.051019,2.154018,-2.787562,7.647555,2.722684,-1.336325,3.738469,2.697373,-4.868986,3.104008,7.935824,3.163950,-7.195781,4.849892,-3.264361,-0.766552,-2.969799,0.455770,-4.356837,8.376483,-2.983827,-3.282166,-9.158107,5.163900,2.216401,-7.698230,5.612278,7.565950,-1.590938,3.749119,0.707567,-6.794700,9.192177,-9.825071,-7.476976,4.113594,3.427569,9.694735,-1.476947,4.107319,0.658298,-3.138506,5.638517,4.475759,-8.267971,-6.202671,-2.138974,3.683769,7.638786,5.835530,7.686717,-6.670375,9.684717,-2.042928,9.283551,0.687121,3.944849,6.172606,7.109406,-2.606555,0.614235,-5.913264,0.135717,1.059032,7.274288,4.132290,-9.094778,-4.558396,0.746778,6.343759,-2.489115,0.024716,-9.835709,-5.835896,7.512109,8.229065,-8.670109,-4.309797,7.468546], dtype = "float64")#candidate|2719|(112,)|const|float64
call_2718 = func_659_call(relay.reshape(const_2719.astype('float64'), [7, 4, 4]))
call_2720 = func_659_call(relay.reshape(const_2719.astype('float64'), [7, 4, 4]))
func_2129_call = mod.get_global_var('func_2129')
func_2131_call = mutated_mod.get_global_var('func_2131')
call_2730 = relay.TupleGetItem(func_2129_call(), 0)
call_2731 = relay.TupleGetItem(func_2131_call(), 0)
output = relay.Tuple([call_2668,call_2692,call_2718,const_2719,call_2730,])
output2 = relay.Tuple([call_2669,call_2693,call_2720,const_2719,call_2731,])
func_2733 = relay.Function([], output)
mod['func_2733'] = func_2733
mod = relay.transform.InferType()(mod)
mutated_mod['func_2733'] = func_2733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2733_call = mutated_mod.get_global_var('func_2733')
call_2734 = func_2733_call()
output = call_2734
func_2735 = relay.Function([], output)
mutated_mod['func_2735'] = func_2735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2768 = relay.var("var_2768", dtype = "uint32", shape = (7, 9, 15))#candidate|2768|(7, 9, 15)|var|uint32
const_2769 = relay.const([[[-5,-4,-8,-4,-9,-6,2,6,7,-5,5,-6,-1,7,-10],[-1,-9,-5,-7,-7,-1,9,-6,1,-4,-2,2,-8,-4,8],[1,8,-4,10,-1,-8,-9,6,-2,7,-3,-7,-8,-7,9],[8,-3,-3,-1,-8,7,7,-3,-9,9,-2,-6,-7,-3,9],[-8,-3,5,-9,8,-1,5,1,10,-4,-8,1,-5,-10,-3],[-10,8,-3,9,3,3,-4,-1,-6,-5,-2,-9,10,-3,10],[-1,-8,-4,-4,-5,4,-1,6,-3,5,-5,2,-9,-5,3],[8,-8,5,-7,8,-5,2,9,10,-10,-2,3,8,8,-6],[-3,-7,3,2,10,-4,2,-1,-3,5,-7,10,-2,-3,6]],[[-3,4,-7,-9,-6,10,-4,-5,-5,7,4,8,-5,6,1],[7,-8,-4,-7,5,2,5,-10,-2,-1,-5,-6,-10,-3,10],[8,-10,8,1,-6,1,4,5,-6,-8,-7,-3,6,-3,10],[3,-1,-4,6,8,-4,2,-5,-3,-4,-10,-6,2,-6,8],[-10,-4,5,-2,3,-3,-9,8,-9,-6,4,4,7,-9,-2],[-1,-10,-5,-4,4,-9,6,-1,1,-5,-3,-3,8,-2,4],[-6,10,9,10,4,-1,-10,-10,-3,-1,8,-9,2,2,4],[9,1,5,5,-5,9,10,5,2,-3,-8,10,1,-7,-5],[-8,-3,6,-1,3,-9,-2,-2,1,6,-1,-4,-6,-1,9]],[[-5,2,6,-4,-6,2,9,-6,-10,-7,10,5,-8,-10,-3],[5,-6,4,5,-8,6,8,-4,8,-1,4,-4,-5,9,1],[2,2,3,1,-5,-10,-1,-8,-3,10,-1,5,-3,-6,-6],[6,3,10,-3,5,-10,-1,-5,5,-3,-4,-7,-8,1,-5],[-2,-9,-9,2,-7,-2,-4,-9,1,-7,-9,1,-9,-10,-4],[9,4,-1,-4,4,10,10,8,2,-5,8,-7,-4,9,-9],[7,-8,-4,5,-4,1,5,-7,-3,4,6,-6,10,-1,3],[3,8,2,-2,3,-6,-9,8,-5,5,-10,3,7,-7,-4],[10,2,-9,-3,-3,-7,9,-9,-4,-7,-6,-3,7,2,-10]],[[-4,-4,-10,3,3,8,-5,10,5,10,4,-10,-5,-8,-1],[-5,-9,-1,3,-10,2,-8,6,-2,-1,-2,-10,-5,9,6],[-10,-5,2,-7,2,1,5,8,7,-10,-4,-5,-5,1,-2],[4,-10,2,-4,6,6,7,-5,3,-7,-2,5,7,-8,2],[7,-3,-4,8,-3,2,-10,-1,6,-8,-6,3,-8,9,-1],[5,8,7,-4,-10,7,-8,-2,5,4,-8,4,10,-6,-7],[4,6,-9,-4,8,-1,7,-4,-8,-7,-2,3,-8,7,3],[-2,-7,9,-1,-10,8,-4,1,-5,6,-1,7,-4,8,1],[-7,-8,-1,-2,-1,-1,-2,-5,-4,-1,-2,-9,-8,-4,-6]],[[8,7,-10,3,1,2,5,9,-6,10,-3,2,1,-5,-6],[1,-4,10,-5,6,8,-7,2,3,-9,7,-5,-2,-9,-1],[-9,7,-1,9,-1,-1,3,-2,-4,-4,5,-2,10,-7,2],[4,-2,-5,9,8,-9,10,7,-6,6,1,-3,4,-9,-2],[2,-2,-6,-7,1,6,-6,-1,-8,-3,8,8,9,5,-4],[8,-1,-10,9,4,7,-1,6,-8,-8,-1,-7,8,-2,5],[-9,9,5,-9,-9,6,2,-8,9,5,7,6,4,3,8],[-1,2,7,1,4,8,5,7,-8,-9,6,8,3,7,-9],[3,1,10,-5,-1,-1,8,9,-1,-2,10,6,9,4,-5]],[[-10,-3,-6,-7,3,7,-7,2,-10,2,3,9,4,1,3],[-10,-8,4,-5,-4,-8,-4,8,2,-9,2,-10,3,1,3],[2,7,-6,4,1,-2,9,-6,4,-2,6,-6,5,10,5],[-9,7,-7,-8,-8,6,-10,8,1,7,6,9,10,1,-9],[-3,3,8,-7,-10,-9,-5,-3,-8,2,8,-9,-9,-1,6],[9,10,-1,4,9,1,2,7,-8,10,8,-9,2,-5,10],[-5,-3,3,-5,2,-2,-2,-2,2,1,9,9,-8,7,6],[-5,8,-7,-3,-9,6,1,-8,6,10,-1,7,-10,10,8],[-5,-6,10,6,-6,10,8,2,2,-7,5,5,7,7,-3]],[[5,8,2,7,-3,7,-8,5,-3,8,-1,-10,-5,2,-8],[8,4,7,6,-6,-8,2,-7,6,4,-4,6,-1,-4,-6],[-9,-8,-2,7,-10,7,-7,3,-6,6,2,-4,5,-3,10],[1,-6,10,-3,-6,-3,2,3,-2,4,-10,-9,7,2,2],[1,-1,4,5,-2,2,-7,3,-8,1,-4,-10,-7,-6,-7],[1,4,5,7,5,2,-3,2,8,-3,-3,2,-2,10,-6],[-8,5,10,10,-1,-7,4,9,-5,7,-8,5,-6,8,6],[-3,2,-6,9,10,-5,-2,-6,-7,1,-9,6,10,-2,8],[-2,-2,-10,-5,-6,-10,3,-2,-4,-7,4,-6,3,-2,2]]], dtype = "uint32")#candidate|2769|(7, 9, 15)|const|uint32
bop_2770 = relay.not_equal(var_2768.astype('bool'), relay.reshape(const_2769.astype('bool'), relay.shape_of(var_2768))) # shape=(7, 9, 15)
output = bop_2770
output2 = bop_2770
func_2777 = relay.Function([var_2768,], output)
mod['func_2777'] = func_2777
mod = relay.transform.InferType()(mod)
mutated_mod['func_2777'] = func_2777
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2778 = relay.var("var_2778", dtype = "uint32", shape = (7, 9, 15))#candidate|2778|(7, 9, 15)|var|uint32
func_2777_call = mutated_mod.get_global_var('func_2777')
call_2779 = func_2777_call(var_2778)
output = call_2779
func_2780 = relay.Function([var_2778], output)
mutated_mod['func_2780'] = func_2780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2065_call = mod.get_global_var('func_2065')
func_2066_call = mutated_mod.get_global_var('func_2066')
call_2831 = relay.TupleGetItem(func_2065_call(), 1)
call_2832 = relay.TupleGetItem(func_2066_call(), 1)
func_1967_call = mod.get_global_var('func_1967')
func_1969_call = mutated_mod.get_global_var('func_1969')
var_2836 = relay.var("var_2836", dtype = "float64", shape = (4, 60))#candidate|2836|(4, 60)|var|float64
call_2835 = relay.TupleGetItem(func_1967_call(relay.reshape(var_2836.astype('float64'), [4, 15, 4])), 0)
call_2837 = relay.TupleGetItem(func_1969_call(relay.reshape(var_2836.astype('float64'), [4, 15, 4])), 0)
var_2841 = relay.var("var_2841", dtype = "float32", shape = (12, 6, 6))#candidate|2841|(12, 6, 6)|var|float32
bop_2842 = relay.power(call_2831.astype('float64'), relay.reshape(var_2841.astype('float64'), relay.shape_of(call_2831))) # shape=(12, 6, 6)
bop_2845 = relay.power(call_2832.astype('float64'), relay.reshape(var_2841.astype('float64'), relay.shape_of(call_2832))) # shape=(12, 6, 6)
output = relay.Tuple([call_2835,var_2836,bop_2842,])
output2 = relay.Tuple([call_2837,var_2836,bop_2845,])
func_2853 = relay.Function([var_2836,var_2841,], output)
mod['func_2853'] = func_2853
mod = relay.transform.InferType()(mod)
var_2854 = relay.var("var_2854", dtype = "float64", shape = (4, 60))#candidate|2854|(4, 60)|var|float64
var_2855 = relay.var("var_2855", dtype = "float32", shape = (12, 6, 6))#candidate|2855|(12, 6, 6)|var|float32
output = func_2853(var_2854,var_2855,)
func_2856 = relay.Function([var_2854,var_2855,], output)
mutated_mod['func_2856'] = func_2856
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2916 = relay.var("var_2916", dtype = "float32", shape = (8, 16, 6))#candidate|2916|(8, 16, 6)|var|float32
uop_2917 = relay.asin(var_2916.astype('float32')) # shape=(8, 16, 6)
bop_2922 = relay.right_shift(uop_2917.astype('uint32'), relay.reshape(var_2916.astype('uint32'), relay.shape_of(uop_2917))) # shape=(8, 16, 6)
const_2933 = relay.const([[[-3,3,-7,2,3,-9],[9,2,-8,-6,5,-1],[-2,-3,-2,-3,9,-3],[-3,2,-6,-8,-6,-6],[9,-9,6,5,5,-10],[-1,9,3,6,-8,3],[-9,8,3,-2,-6,7],[2,-9,-2,-3,-4,-10],[-6,-4,-7,8,-9,-3],[-10,5,5,7,5,-4],[7,-7,10,9,-8,-10],[-1,10,7,-10,-8,5],[8,1,-10,-10,2,7],[7,-8,8,-9,-8,-8],[-4,-2,-3,8,-8,5],[-3,4,-2,-9,-6,5]],[[7,-4,-3,-10,1,1],[-8,5,7,-4,5,-8],[-9,-8,-4,-1,-7,5],[-5,8,6,2,-8,10],[9,8,3,2,4,9],[5,8,4,3,-10,-7],[-2,-10,6,-6,3,-10],[1,-8,-4,-3,-6,-10],[-8,-10,-5,5,-6,8],[5,6,9,4,-7,-6],[-1,9,-2,8,3,-8],[-4,6,8,-1,-7,10],[-2,7,-9,10,2,9],[-10,5,4,-2,6,8],[1,8,-6,-5,5,8],[4,5,-9,3,-1,3]],[[-2,2,4,-4,1,4],[-2,-6,10,2,1,-2],[-2,-10,-3,-8,1,-1],[-2,-1,-6,-8,3,-5],[7,-6,5,-9,-5,1],[1,1,1,-6,-8,6],[3,4,10,-8,9,5],[6,-2,-10,-8,-4,2],[2,8,6,-6,10,4],[1,6,10,3,-5,6],[2,8,-1,-1,10,-3],[-5,-7,8,6,-7,-9],[-6,-2,7,-6,-10,-5],[7,-5,9,-5,-8,-1],[8,-8,-2,2,7,-8],[-10,5,9,2,-10,-2]],[[7,-3,-2,1,-4,6],[6,-1,-2,1,-3,3],[-8,9,1,7,1,-3],[4,4,5,-3,8,5],[-3,1,3,-2,-8,-1],[4,-9,7,9,-9,1],[-3,-6,8,-10,-8,-1],[-4,3,5,2,-3,-4],[4,4,-8,-7,7,3],[-5,-8,-3,-3,1,-10],[-2,-4,3,5,-3,1],[2,-4,1,6,-10,8],[-1,-10,-9,-9,-1,3],[-2,1,5,-9,-10,-8],[10,-7,-8,2,6,-4],[-2,-5,5,-9,4,4]],[[-2,8,6,2,-4,6],[4,5,-2,6,-1,9],[6,-5,-7,-4,10,10],[-2,1,3,-7,-5,-8],[1,-1,4,-10,-5,5],[-2,3,-2,7,7,-7],[-7,-7,7,9,1,10],[-9,10,-3,-8,-5,-8],[-3,-9,5,9,10,-6],[3,-5,-7,-2,5,-10],[8,-5,10,9,8,-2],[-4,7,-8,3,8,8],[2,2,5,-8,-2,7],[4,-5,-4,7,9,5],[7,-3,-5,10,2,-7],[-6,1,7,1,-3,-6]],[[-3,-6,9,4,-9,-10],[-9,-4,-4,9,5,7],[-7,3,-5,9,-4,-2],[8,6,2,-6,8,-3],[10,-2,1,6,8,-10],[-10,10,-7,4,8,-5],[-8,3,-10,8,-8,6],[10,9,-3,2,9,-5],[4,-4,-1,-7,1,-5],[-6,-2,3,-6,-9,-4],[4,-4,-8,1,-10,6],[-5,8,-5,-6,8,-7],[-5,-8,6,7,-8,6],[1,7,4,3,-10,-7],[6,6,-3,-6,6,5],[6,5,-4,-9,8,-8]],[[-1,4,-4,6,6,3],[-7,-8,-5,-6,-4,4],[-1,6,-8,4,5,-3],[-10,-8,-5,6,4,-6],[6,9,-4,-1,-5,-6],[1,-6,-9,9,10,-8],[10,6,9,-4,-5,-8],[-7,5,7,-9,-1,-9],[4,2,5,8,7,1],[9,4,10,4,-2,-3],[8,7,5,-10,2,-4],[5,4,7,7,-3,-9],[-4,2,1,2,7,9],[-7,-2,4,-8,7,10],[-7,1,9,-3,-4,6],[2,5,9,-3,6,7]],[[-3,-8,7,6,4,-4],[-7,3,-3,7,8,5],[7,-6,-3,-10,10,-7],[-5,-2,10,1,4,1],[2,5,9,9,-7,-6],[10,9,5,8,10,-10],[-6,2,-6,9,8,-9],[-3,-10,3,-1,3,4],[7,-9,-2,1,-1,-7],[-3,-4,-10,7,-1,-2],[-6,-9,6,-8,-5,-1],[-7,4,3,-2,8,9],[-7,1,-7,2,9,-2],[-5,7,-9,-7,-9,2],[-2,2,10,-8,-10,-5],[-4,-10,-8,-8,-5,3]]], dtype = "uint32")#candidate|2933|(8, 16, 6)|const|uint32
bop_2934 = relay.minimum(bop_2922.astype('float64'), relay.reshape(const_2933.astype('float64'), relay.shape_of(bop_2922))) # shape=(8, 16, 6)
func_2110_call = mod.get_global_var('func_2110')
func_2113_call = mutated_mod.get_global_var('func_2113')
const_2946 = relay.const([-3.587568,5.400219,8.148188,0.350743,-3.789335,5.893696,-3.748758,-1.201266,7.455024,8.227040,-3.412448,5.693027,7.933405,4.971248,-9.524200,3.470480,-1.713278,-4.531425,-8.416447,-2.949783,5.507887,5.230745,9.864869,9.659279,0.309782,0.367902,-4.732762,4.345728,1.101208,-9.777940,-1.350670,-0.649514,-4.950715,-5.469537,0.193563,3.816355,1.953014,-5.153378,8.669670,1.309756,-3.847131,-6.216077,2.967341,-5.473323,-8.642335,0.396308,-6.576570,1.199829,-5.093026,-8.606059,4.492390,-5.867964,-5.986182,9.155153,-0.901250,-1.119236,6.363719,2.207879,2.402107,7.320387,7.548756,-9.024040,7.403724,-6.309667,-7.831125,1.675048,8.850367,-0.193762,-0.233203,1.707682,-9.942006,9.862180,-2.368270,5.560540,0.878394,4.997174,4.241395,-3.800908,2.512763,-5.563402,9.092209,6.720517,9.011955,-7.272404,-3.230047,-4.026972,-4.811031,-9.405396,-2.993110,-8.906010,2.068724,-6.724411,9.370188,6.034890,-2.663245,-3.495645,2.726266,-2.700372,0.197005,-5.451650,-4.174318,9.793250,-3.024668,0.183404,1.609861,-2.487586,2.092344,1.239635,-2.907307,2.750614,-6.337627,-9.571747,-3.878327,-5.766625,-0.871603,1.221334,8.114430,0.403875,-2.219220,-2.094642,-8.997426,-1.248925,-4.586399,-3.251048,-2.532270,2.752847,-9.732783,-2.013199,-7.158210,-1.414107,3.953888,3.808367,-7.642945,0.394974,2.740882,-4.763037,-1.725992,2.888877,-0.786326,4.547737,1.273838,3.355015,5.842880,-2.719136,-6.533061,-0.124756,-7.808917,-2.834576,-7.267171,-3.630125,-5.965817,0.111572,3.287570,4.986363,-4.392381,1.470499,6.826216,7.510245,-7.701761,-6.899867,0.031295,0.700763,-6.131245,-2.404177,0.693705,-5.396948,-1.445258,-9.380760,-6.842595,8.054999,2.867098,-5.650859,-7.806213,9.897426,-7.779939,5.240279,-7.178556,3.862463,6.543315,6.897099,-7.590427,-2.183309,2.891658,1.821911,-4.402352,-5.417751,3.574787,-8.265247,7.857907,-0.244427,4.709541,4.394460,-3.656404,-1.152176,-3.198870,-5.957561,3.275223,3.539703,-2.217203,-7.955713,-9.663342,-0.025682,6.367886,9.603421,-2.635004,-2.807731,9.306379,0.801691,9.634447,5.730824,2.735515,-9.942319,-7.551251,5.649191,-3.960339,2.408982,-0.442283,-0.295575,-9.155750,-7.081471,-2.187568,-7.568961,-4.801775,7.415752,5.708960,-2.440608,6.531262,9.885128,-5.493002,-7.485285,-4.638934,9.138329,1.538500,6.841693,1.956726,-5.220991,-9.828260,-0.586887,-0.865206,-4.723475], dtype = "float64")#candidate|2946|(240,)|const|float64
call_2945 = relay.TupleGetItem(func_2110_call(relay.reshape(const_2946.astype('float64'), [240,])), 1)
call_2947 = relay.TupleGetItem(func_2113_call(relay.reshape(const_2946.astype('float64'), [240,])), 1)
func_1967_call = mod.get_global_var('func_1967')
func_1969_call = mutated_mod.get_global_var('func_1969')
call_2956 = relay.TupleGetItem(func_1967_call(relay.reshape(const_2946.astype('float64'), [4, 15, 4])), 0)
call_2957 = relay.TupleGetItem(func_1969_call(relay.reshape(const_2946.astype('float64'), [4, 15, 4])), 0)
func_1933_call = mod.get_global_var('func_1933')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_2969 = relay.TupleGetItem(func_1933_call(), 0)
call_2970 = relay.TupleGetItem(func_1934_call(), 0)
func_1607_call = mod.get_global_var('func_1607')
func_1611_call = mutated_mod.get_global_var('func_1611')
var_2986 = relay.var("var_2986", dtype = "uint16", shape = (252,))#candidate|2986|(252,)|var|uint16
var_2987 = relay.var("var_2987", dtype = "bool", shape = (1260,))#candidate|2987|(1260,)|var|bool
call_2985 = relay.TupleGetItem(func_1607_call(relay.reshape(var_2986.astype('uint16'), [252,]), relay.reshape(var_2987.astype('bool'), [14, 6, 15]), relay.reshape(call_2969.astype('float32'), [12, 6, 6]), ), 2)
call_2988 = relay.TupleGetItem(func_1611_call(relay.reshape(var_2986.astype('uint16'), [252,]), relay.reshape(var_2987.astype('bool'), [14, 6, 15]), relay.reshape(call_2969.astype('float32'), [12, 6, 6]), ), 2)
uop_2989 = relay.acosh(bop_2922.astype('float64')) # shape=(8, 16, 6)
output = relay.Tuple([bop_2934,call_2945,const_2946,call_2956,call_2969,call_2985,var_2986,var_2987,uop_2989,])
output2 = relay.Tuple([bop_2934,call_2947,const_2946,call_2957,call_2970,call_2988,var_2986,var_2987,uop_2989,])
func_2991 = relay.Function([var_2916,var_2986,var_2987,], output)
mod['func_2991'] = func_2991
mod = relay.transform.InferType()(mod)
mutated_mod['func_2991'] = func_2991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2991_call = mutated_mod.get_global_var('func_2991')
var_2993 = relay.var("var_2993", dtype = "float32", shape = (8, 16, 6))#candidate|2993|(8, 16, 6)|var|float32
var_2994 = relay.var("var_2994", dtype = "uint16", shape = (252,))#candidate|2994|(252,)|var|uint16
var_2995 = relay.var("var_2995", dtype = "bool", shape = (1260,))#candidate|2995|(1260,)|var|bool
call_2992 = func_2991_call(var_2993,var_2994,var_2995,)
output = call_2992
func_2996 = relay.Function([var_2993,var_2994,var_2995,], output)
mutated_mod['func_2996'] = func_2996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_3023 = relay.TupleGetItem(func_2510_call(), 0)
call_3024 = relay.TupleGetItem(func_2512_call(), 0)
output = call_3023
output2 = call_3024
func_3034 = relay.Function([], output)
mod['func_3034'] = func_3034
mod = relay.transform.InferType()(mod)
output = func_3034()
func_3035 = relay.Function([], output)
mutated_mod['func_3035'] = func_3035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2209_call = mod.get_global_var('func_2209')
func_2210_call = mutated_mod.get_global_var('func_2210')
call_3203 = func_2209_call()
call_3204 = func_2209_call()
output = relay.Tuple([call_3203,])
output2 = relay.Tuple([call_3204,])
func_3213 = relay.Function([], output)
mod['func_3213'] = func_3213
mod = relay.transform.InferType()(mod)
output = func_3213()
func_3214 = relay.Function([], output)
mutated_mod['func_3214'] = func_3214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mod.get_global_var('func_1688')
func_1690_call = mutated_mod.get_global_var('func_1690')
call_3219 = func_1688_call()
call_3220 = func_1688_call()
output = relay.Tuple([call_3219,])
output2 = relay.Tuple([call_3220,])
func_3227 = relay.Function([], output)
mod['func_3227'] = func_3227
mod = relay.transform.InferType()(mod)
mutated_mod['func_3227'] = func_3227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3227_call = mutated_mod.get_global_var('func_3227')
call_3228 = func_3227_call()
output = call_3228
func_3229 = relay.Function([], output)
mutated_mod['func_3229'] = func_3229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1647_call = mod.get_global_var('func_1647')
func_1649_call = mutated_mod.get_global_var('func_1649')
call_3241 = relay.TupleGetItem(func_1647_call(), 0)
call_3242 = relay.TupleGetItem(func_1649_call(), 0)
output = call_3241
output2 = call_3242
func_3243 = relay.Function([], output)
mod['func_3243'] = func_3243
mod = relay.transform.InferType()(mod)
output = func_3243()
func_3244 = relay.Function([], output)
mutated_mod['func_3244'] = func_3244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1541_call = mod.get_global_var('func_1541')
func_1542_call = mutated_mod.get_global_var('func_1542')
call_3247 = func_1541_call()
call_3248 = func_1541_call()
var_3249 = relay.var("var_3249", dtype = "float32", shape = (12, 6, 6))#candidate|3249|(12, 6, 6)|var|float32
bop_3250 = relay.add(call_3247.astype('int8'), relay.reshape(var_3249.astype('int8'), relay.shape_of(call_3247))) # shape=(12, 6, 6)
bop_3253 = relay.add(call_3248.astype('int8'), relay.reshape(var_3249.astype('int8'), relay.shape_of(call_3248))) # shape=(12, 6, 6)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_3255 = relay.TupleGetItem(func_2510_call(), 2)
call_3256 = relay.TupleGetItem(func_2512_call(), 2)
func_826_call = mod.get_global_var('func_826')
func_830_call = mutated_mod.get_global_var('func_830')
call_3260 = relay.TupleGetItem(func_826_call(relay.reshape(call_3255.astype('float32'), [4, 12, 2]), relay.reshape(call_3255.astype('float32'), [4, 12, 2]), ), 0)
call_3261 = relay.TupleGetItem(func_830_call(relay.reshape(call_3255.astype('float32'), [4, 12, 2]), relay.reshape(call_3255.astype('float32'), [4, 12, 2]), ), 0)
bop_3264 = relay.less_equal(call_3255.astype('bool'), relay.reshape(call_3260.astype('bool'), relay.shape_of(call_3255))) # shape=(4, 12, 2)
bop_3267 = relay.less_equal(call_3256.astype('bool'), relay.reshape(call_3261.astype('bool'), relay.shape_of(call_3256))) # shape=(4, 12, 2)
bop_3272 = relay.right_shift(call_3255.astype('uint8'), relay.reshape(bop_3264.astype('uint8'), relay.shape_of(call_3255))) # shape=(4, 12, 2)
bop_3275 = relay.right_shift(call_3256.astype('uint8'), relay.reshape(bop_3267.astype('uint8'), relay.shape_of(call_3256))) # shape=(4, 12, 2)
uop_3281 = relay.cosh(call_3260.astype('float64')) # shape=(4, 12, 2)
uop_3283 = relay.cosh(call_3261.astype('float64')) # shape=(4, 12, 2)
output = relay.Tuple([bop_3250,bop_3272,uop_3281,])
output2 = relay.Tuple([bop_3253,bop_3275,uop_3283,])
func_3288 = relay.Function([var_3249,], output)
mod['func_3288'] = func_3288
mod = relay.transform.InferType()(mod)
mutated_mod['func_3288'] = func_3288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3289 = relay.var("var_3289", dtype = "float32", shape = (12, 6, 6))#candidate|3289|(12, 6, 6)|var|float32
func_3288_call = mutated_mod.get_global_var('func_3288')
call_3290 = func_3288_call(var_3289)
output = call_3290
func_3291 = relay.Function([var_3289], output)
mutated_mod['func_3291'] = func_3291
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3298 = relay.const([[[-4,-2,2,-3,-7,1,-7],[-8,10,-9,5,-5,-9,9],[8,5,6,4,7,5,8],[-1,-2,1,-5,10,2,-1],[8,-6,-2,8,-10,-4,-2],[2,-4,5,2,-9,8,8],[-5,-10,1,-9,9,-10,2],[6,4,3,3,-5,-8,1],[-2,-6,8,-9,-2,-1,-8],[9,-7,-5,5,9,10,2],[-8,3,-1,-8,5,-9,8]],[[7,3,7,3,10,-1,-5],[-7,-8,1,5,-10,-3,10],[3,6,-3,8,-10,3,-10],[-3,7,3,4,-9,-5,2],[6,-4,10,-1,-10,7,9],[-1,6,5,3,3,3,6],[2,8,10,7,3,-6,-6],[-2,-3,-5,9,4,-9,1],[6,-9,-5,-6,-10,-6,-2],[5,-3,4,-4,-5,-10,-6],[6,10,5,2,-8,-5,-3]],[[5,-3,-3,9,-4,-6,-5],[8,3,1,5,5,-5,8],[-5,-1,6,1,10,-7,-5],[3,-7,-3,6,8,-9,-1],[-7,-2,-9,3,7,-5,5],[3,-4,2,-9,6,9,9],[6,-10,-10,-5,9,4,-1],[-5,4,-6,6,2,3,3],[1,-7,5,-9,-4,-3,2],[9,10,-2,3,3,-6,-5],[2,-8,-1,1,6,10,-4]],[[-3,2,-2,7,5,1,-7],[2,3,-1,8,-10,9,-8],[-8,-2,1,-2,-4,-8,-8],[8,6,-9,-5,-4,6,1],[1,-2,4,-9,-6,1,-1],[3,-9,-5,1,6,8,-9],[3,8,1,-5,4,3,7],[3,4,7,5,8,8,3],[3,10,4,-2,-8,4,-10],[-3,1,-7,10,-8,-8,2],[-10,3,9,-9,-9,-9,-9]],[[8,-10,-8,-7,-7,9,-3],[-2,4,-3,5,-8,4,7],[-4,-6,8,5,10,3,10],[-5,-10,1,-10,8,-6,-2],[-6,4,7,-4,8,3,5],[7,7,-10,10,-10,8,6],[6,4,8,2,10,10,-9],[-7,-8,-2,6,-1,-5,-5],[-1,-9,-10,9,-1,-3,8],[10,-6,-4,1,7,-7,-2],[-1,7,9,-7,1,6,6]],[[4,1,-3,-2,1,-2,9],[-9,4,-9,10,-9,6,2],[1,-1,3,-10,9,3,3],[8,-7,-6,-5,-1,4,1],[-9,2,-2,-4,7,1,-4],[-5,2,-1,-10,-7,2,1],[10,-6,6,9,-2,-3,7],[-4,8,1,5,-6,-9,-2],[-3,-8,7,-1,3,1,3],[6,-7,2,-2,-7,5,1],[-8,-8,6,-5,-2,-5,4]],[[-4,-1,-6,1,-6,-3,9],[8,-5,-3,-1,-10,3,1],[-9,-4,-2,3,5,-10,-6],[-6,2,-5,2,9,-8,-10],[-1,8,7,-2,9,9,-9],[7,-3,-10,-6,-1,2,4],[10,-2,-4,-2,-6,-10,-10],[-1,9,4,-8,6,-7,4],[8,1,1,-9,-6,6,5],[-7,6,-4,3,-8,2,6],[-4,1,10,1,5,-8,3]],[[3,3,-5,-5,5,-6,-2],[10,8,-10,-5,-10,6,8],[-6,-10,-9,8,-2,-2,4],[4,8,4,8,-4,-6,1],[10,6,10,-7,-10,4,10],[1,-6,8,10,2,5,3],[10,3,-5,10,-6,-6,-3],[-8,-8,7,-5,10,8,-3],[7,4,10,-9,-8,-2,-7],[-1,-1,-3,10,-5,-6,10],[6,-7,-7,-10,10,-4,10]],[[5,4,-8,-6,4,-3,-1],[-3,-1,2,1,10,-10,3],[-1,10,2,3,-1,-1,3],[5,2,-4,-8,-2,-8,2],[-3,4,2,1,7,4,-2],[-4,-8,8,-6,3,-9,-3],[-5,6,4,3,1,-9,-7],[8,-7,-4,-9,5,5,1],[4,10,1,-9,-4,-10,-8],[7,4,-7,-8,-6,-5,4],[2,1,-9,5,-7,-6,9]],[[-9,-7,-4,-2,1,-4,-8],[-1,-7,8,-7,1,1,-8],[-10,-3,4,5,-2,-9,-6],[-2,-1,9,-6,-8,-5,6],[-10,3,1,-10,9,-3,2],[-3,-6,-5,8,7,-2,-6],[7,-3,8,6,3,4,-1],[2,-2,4,-10,7,2,1],[-2,-10,-2,-5,-2,-10,8],[6,3,-3,-5,-3,5,-4],[-5,-10,5,-5,7,-7,-4]],[[4,3,1,10,-2,-10,-1],[-6,-3,-9,9,7,10,7],[-10,4,-1,6,6,-6,10],[-5,5,5,6,5,7,-1],[-5,-4,-9,1,-7,2,2],[2,-7,2,-10,-10,-2,-4],[-6,-5,3,-5,8,-4,10],[8,5,-3,-7,-2,3,-5],[-8,3,-4,-2,6,1,1],[8,-1,-3,-6,-9,-1,-4],[-7,-9,-8,7,-1,-10,6]]], dtype = "int32")#candidate|3298|(11, 11, 7)|const|int32
var_3299 = relay.var("var_3299", dtype = "int32", shape = (11, 11, 7))#candidate|3299|(11, 11, 7)|var|int32
bop_3300 = relay.minimum(const_3298.astype('int32'), relay.reshape(var_3299.astype('int32'), relay.shape_of(const_3298))) # shape=(11, 11, 7)
uop_3303 = relay.log(const_3298.astype('float64')) # shape=(11, 11, 7)
output = relay.Tuple([bop_3300,uop_3303,])
output2 = relay.Tuple([bop_3300,uop_3303,])
func_3313 = relay.Function([var_3299,], output)
mod['func_3313'] = func_3313
mod = relay.transform.InferType()(mod)
mutated_mod['func_3313'] = func_3313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3314 = relay.var("var_3314", dtype = "int32", shape = (11, 11, 7))#candidate|3314|(11, 11, 7)|var|int32
func_3313_call = mutated_mod.get_global_var('func_3313')
call_3315 = func_3313_call(var_3314)
output = call_3315
func_3316 = relay.Function([var_3314], output)
mutated_mod['func_3316'] = func_3316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3227_call = mod.get_global_var('func_3227')
func_3229_call = mutated_mod.get_global_var('func_3229')
call_3321 = relay.TupleGetItem(func_3227_call(), 0)
call_3322 = relay.TupleGetItem(func_3229_call(), 0)
output = relay.Tuple([call_3321,])
output2 = relay.Tuple([call_3322,])
func_3326 = relay.Function([], output)
mod['func_3326'] = func_3326
mod = relay.transform.InferType()(mod)
output = func_3326()
func_3327 = relay.Function([], output)
mutated_mod['func_3327'] = func_3327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_3443 = func_1482_call()
call_3444 = func_1482_call()
func_1933_call = mod.get_global_var('func_1933')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_3449 = relay.TupleGetItem(func_1933_call(), 0)
call_3450 = relay.TupleGetItem(func_1934_call(), 0)
output = relay.Tuple([call_3443,call_3449,])
output2 = relay.Tuple([call_3444,call_3450,])
func_3452 = relay.Function([], output)
mod['func_3452'] = func_3452
mod = relay.transform.InferType()(mod)
mutated_mod['func_3452'] = func_3452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3452_call = mutated_mod.get_global_var('func_3452')
call_3453 = func_3452_call()
output = call_3453
func_3454 = relay.Function([], output)
mutated_mod['func_3454'] = func_3454
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3538 = relay.var("var_3538", dtype = "int64", shape = (2, 3, 1))#candidate|3538|(2, 3, 1)|var|int64
const_3539 = relay.const([[[8,-6,-3,-9,-8],[2,-6,3,3,-1],[-4,-3,4,-5,8]],[[6,-3,9,7,7],[-2,3,1,5,6],[9,1,-2,-3,-9]]], dtype = "int64")#candidate|3539|(2, 3, 5)|const|int64
bop_3540 = relay.less(var_3538.astype('bool'), const_3539.astype('bool')) # shape=(2, 3, 5)
output = bop_3540
output2 = bop_3540
func_3546 = relay.Function([var_3538,], output)
mod['func_3546'] = func_3546
mod = relay.transform.InferType()(mod)
mutated_mod['func_3546'] = func_3546
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3547 = relay.var("var_3547", dtype = "int64", shape = (2, 3, 1))#candidate|3547|(2, 3, 1)|var|int64
func_3546_call = mutated_mod.get_global_var('func_3546')
call_3548 = func_3546_call(var_3547)
output = call_3548
func_3549 = relay.Function([var_3547], output)
mutated_mod['func_3549'] = func_3549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_3640 = func_3034_call()
call_3641 = func_3034_call()
output = call_3640
output2 = call_3641
func_3658 = relay.Function([], output)
mod['func_3658'] = func_3658
mod = relay.transform.InferType()(mod)
output = func_3658()
func_3659 = relay.Function([], output)
mutated_mod['func_3659'] = func_3659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1465_call = mod.get_global_var('func_1465')
func_1466_call = mutated_mod.get_global_var('func_1466')
call_3686 = relay.TupleGetItem(func_1465_call(), 0)
call_3687 = relay.TupleGetItem(func_1466_call(), 0)
output = call_3686
output2 = call_3687
func_3703 = relay.Function([], output)
mod['func_3703'] = func_3703
mod = relay.transform.InferType()(mod)
mutated_mod['func_3703'] = func_3703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3703_call = mutated_mod.get_global_var('func_3703')
call_3704 = func_3703_call()
output = call_3704
func_3705 = relay.Function([], output)
mutated_mod['func_3705'] = func_3705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_3708 = relay.TupleGetItem(func_2510_call(), 0)
call_3709 = relay.TupleGetItem(func_2512_call(), 0)
func_2853_call = mod.get_global_var('func_2853')
func_2856_call = mutated_mod.get_global_var('func_2856')
const_3721 = relay.const([5.568889,8.280765,8.517799,0.775167,3.126165,-0.729291,-9.928518,-9.298889,-5.284038,0.258891,0.025644,-8.139850,4.778657,3.899160,0.436446,3.649936,9.981342,7.843968,-8.777729,-0.713596,-1.578621,-3.299896,4.325639,8.798047,2.924809,-5.451196,-9.529239,-6.105149,-2.692989,-8.004272,-6.612836,8.472956,3.556905,2.379453,5.797310,1.796297,-0.642060,-1.699557,-2.645880,-3.814476,0.278600,-8.705926,2.257269,6.471405,-4.048177,-0.582543,-7.123724,-0.350705,-9.346898,7.691789,2.057745,3.725309,-5.331931,-3.411995,3.723725,-4.032093,7.472821,-6.050716,-3.710020,8.162244,-5.569774,2.040004,4.683396,-1.965967,4.808139,0.592471,-7.208236,3.521827,-4.140847,5.840145,-1.027917,-2.357290,-2.988287,-2.886449,2.437611,5.882747,6.810987,-8.475968,-8.387556,-5.063671,-0.124296,-9.082453,-1.339273,7.551526,2.569847,-5.721037,-8.047904,-9.225365,-3.625337,8.010041,-4.382487,0.341020,-2.363840,-6.136514,-2.185469,-8.876018,-8.476698,2.641456,-9.683295,2.219373,8.549862,6.677353,2.432282,-0.544571,9.393143,9.123778,-9.470335,5.544978,-0.637001,8.449679,0.057967,7.637295,-7.780985,-3.056091,6.625818,7.381692,-1.134671,-1.971717,-0.221773,3.137489,0.838655,0.044786,8.303496,-9.577866,-4.777306,-5.564355,0.252907,8.484905,-1.293532,9.421623,4.483757,-2.334139,5.274239,5.133787,9.671669,2.111739,8.562185,-4.701116,-4.047068,-7.501265,-5.434595,-6.795195,-5.180887,2.858467,2.723059,-0.483539,6.897991,-5.358550,-8.388309,-8.592993,-4.871365,-6.349202,-8.396874,-6.413012,1.191599,6.832814,6.972365,6.834641,5.024807,-3.052739,1.450933,-1.000481,3.603932,-1.938216,-9.897502,4.507690,-7.043292,9.467270,-9.273615,5.181697,-2.053345,0.638262,-9.777628,-0.409153,-5.201310,0.055341,9.208502,-1.122187,-3.768180,-2.118664,-3.956137,-9.176011,4.369637,2.706912,3.062768,7.562217,-4.456434,-2.011854,-0.179870,-4.822017,3.604605,-3.879629,0.084690,-5.192324,2.380889,3.727267,-3.478018,5.858646,1.735747,-3.349725,8.237041,-7.528727,-5.946480,1.571296,7.776800,5.261350,5.790968,-5.378713,1.032204,-4.388467,6.560201,-7.660309,9.885291,-3.715961,-4.888282,-9.195664,-8.632821,2.493863,0.818226,6.682214,7.257317,3.781588,0.677266,9.368061,-9.774010,1.464273,7.773418,-1.184132,8.145870,1.667322,2.827638,-4.422236,8.111187,-1.801881,-6.256578,0.625653,3.125114,-9.519242,-6.362867,4.929463], dtype = "float64")#candidate|3721|(240,)|const|float64
call_3720 = relay.TupleGetItem(func_2853_call(relay.reshape(const_3721.astype('float64'), [4, 60]), relay.reshape(call_3708.astype('float32'), [12, 6, 6]), ), 1)
call_3722 = relay.TupleGetItem(func_2856_call(relay.reshape(const_3721.astype('float64'), [4, 60]), relay.reshape(call_3708.astype('float32'), [12, 6, 6]), ), 1)
func_1967_call = mod.get_global_var('func_1967')
func_1969_call = mutated_mod.get_global_var('func_1969')
call_3730 = relay.TupleGetItem(func_1967_call(relay.reshape(const_3721.astype('float64'), [4, 15, 4])), 0)
call_3731 = relay.TupleGetItem(func_1969_call(relay.reshape(const_3721.astype('float64'), [4, 15, 4])), 0)
output = relay.Tuple([call_3708,call_3720,const_3721,call_3730,])
output2 = relay.Tuple([call_3709,call_3722,const_3721,call_3731,])
func_3736 = relay.Function([], output)
mod['func_3736'] = func_3736
mod = relay.transform.InferType()(mod)
mutated_mod['func_3736'] = func_3736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3736_call = mutated_mod.get_global_var('func_3736')
call_3737 = func_3736_call()
output = call_3737
func_3738 = relay.Function([], output)
mutated_mod['func_3738'] = func_3738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_3745 = relay.TupleGetItem(func_1386_call(), 0)
call_3746 = relay.TupleGetItem(func_1388_call(), 0)
func_2991_call = mod.get_global_var('func_2991')
func_2996_call = mutated_mod.get_global_var('func_2996')
var_3764 = relay.var("var_3764", dtype = "float32", shape = (768,))#candidate|3764|(768,)|var|float32
var_3765 = relay.var("var_3765", dtype = "uint16", shape = (252,))#candidate|3765|(252,)|var|uint16
const_3766 = relay.const([[False,True],[False,False],[True,False],[False,True],[False,False],[True,False],[True,False],[False,True],[False,True],[False,False],[False,True],[True,False],[False,True],[True,False],[False,False],[False,False],[True,False],[False,False],[False,True],[True,True],[True,True],[True,False],[True,True],[False,True],[True,False],[True,True],[False,False],[False,False],[False,True],[True,False],[False,True],[False,True],[True,False],[False,True],[True,True],[False,False],[False,True],[True,True],[True,True],[False,False],[True,True],[True,True],[False,True],[False,False],[True,True],[False,True],[False,False],[False,True],[False,False],[False,False],[False,True],[False,False],[False,True],[False,True],[False,False],[True,False],[False,True],[True,False],[False,True],[False,True],[False,False],[False,False],[False,True],[True,False],[True,False],[False,True],[True,True],[False,True],[False,False],[True,True],[False,False],[True,False],[True,False],[False,False],[False,False],[True,False],[False,False],[True,False],[True,False],[True,False],[False,True],[False,True],[False,False],[True,True],[False,False],[False,False],[False,True],[True,False],[True,True],[False,True],[False,True],[False,False],[True,True],[True,False],[True,False],[True,False],[True,True],[True,False],[True,False],[True,True],[False,True],[True,True],[False,False],[True,True],[False,True],[True,False],[False,True],[False,False],[False,True],[False,True],[True,True],[True,True],[False,True],[True,True],[True,False],[False,False],[True,False],[True,True],[False,False],[False,False],[True,True],[False,True],[False,True],[True,False],[False,False],[False,False],[True,True],[True,False],[False,False],[True,False],[False,False],[False,True],[False,True],[False,False],[True,False],[True,False],[False,True],[True,False],[False,True],[True,True],[True,True],[True,False],[False,False],[False,True],[False,False],[True,False],[False,True],[True,False],[False,True],[False,True],[True,True],[True,True],[True,False],[False,True],[True,True],[False,False],[False,True],[True,False],[True,True],[True,True],[True,False],[True,True],[True,False],[True,True],[True,False],[False,True],[True,True],[False,False],[False,False],[False,True],[True,False],[False,True],[False,True],[False,True],[False,True],[True,False],[False,False],[True,True],[True,True],[True,False],[True,True],[True,False],[True,False],[True,True],[False,True],[False,False],[True,False],[True,True],[True,True],[True,False],[True,False],[False,True],[False,True],[False,True],[False,True],[False,True],[True,True],[False,False],[True,True],[True,False],[False,True],[False,True],[False,True],[True,True],[True,False],[True,False],[False,True],[True,False],[True,True],[False,True],[True,False],[True,False],[True,True],[False,True],[False,True],[True,False],[False,True],[True,False],[False,False],[False,True],[False,True],[True,False],[True,False],[True,False],[False,True],[True,True],[True,False],[True,False],[True,True],[True,True],[False,False],[True,False],[True,True],[True,False],[True,True],[True,False],[False,True],[False,True],[True,True],[True,True],[False,True],[False,True],[True,True],[False,True],[False,True],[False,False],[False,False],[True,True],[True,False],[True,False],[True,True],[False,True],[False,True],[True,True],[False,False],[True,True],[True,True],[False,True],[True,False],[False,True],[False,False],[False,False],[False,True],[True,True],[True,True],[False,False],[False,False],[True,False],[True,False],[True,False],[True,False],[True,False],[False,True],[True,True],[False,True],[False,False],[False,False],[False,False],[True,True],[False,False],[False,False],[False,False],[False,False],[False,False],[False,False],[False,True],[False,True],[False,False],[False,True],[True,False],[True,False],[False,True],[False,False],[True,False],[False,True],[False,False],[True,True],[True,False],[True,True],[False,True],[True,False],[True,False],[True,True],[False,True],[False,False],[False,True],[False,False],[False,False],[True,False],[False,True],[True,True],[True,True],[False,False],[True,True],[False,True],[False,True],[True,True],[True,False],[False,False],[True,True],[False,True],[False,False],[False,True],[False,True],[True,True],[False,False],[False,True],[True,False],[False,False],[True,False],[True,True],[True,False],[True,True],[False,True],[True,False],[False,True],[True,True],[True,True],[False,True],[False,True],[False,False],[True,False],[False,True],[False,False],[True,True],[False,True],[True,True],[True,False],[False,False],[True,True],[False,False],[False,True],[True,True],[True,True],[True,True],[False,True],[False,True],[False,False],[False,False],[False,False],[False,False],[True,True],[True,False],[True,False],[False,False],[True,False],[False,False],[False,True],[True,True],[False,False],[False,False],[False,False],[False,False],[False,False],[False,False],[False,False],[False,True],[True,False],[False,False],[False,False],[True,True],[True,True],[True,True],[True,True],[False,True],[True,False],[False,True],[True,False],[True,True],[False,False],[False,True],[False,False],[False,False],[False,False],[False,False],[True,True],[False,False],[True,True],[True,False],[False,True],[True,False],[True,True],[True,False],[True,True],[False,False],[True,False],[True,True],[False,True],[True,True],[False,False],[True,True],[True,True],[True,False],[True,False],[False,True],[True,False],[True,False],[True,True],[True,True],[False,True],[True,True],[True,False],[False,True],[True,False],[False,True],[False,False],[False,True],[True,True],[False,False],[True,False],[False,False],[False,True],[True,False],[False,False],[True,False],[True,False],[True,False],[False,False],[True,True],[False,False],[True,False],[False,True],[True,True],[True,True],[False,False],[False,False],[True,False],[True,False],[False,False],[False,True],[False,True],[True,False],[True,True],[False,False],[True,False],[False,False],[False,False],[True,True],[False,False],[True,False],[True,True],[False,False],[True,True],[False,False],[True,False],[True,False],[True,True],[False,False],[False,False],[False,True],[False,True],[True,False],[True,True],[True,True],[True,False],[True,False],[True,True],[False,True],[True,False],[True,False],[False,False],[False,True],[True,False],[True,False],[False,False],[True,False],[True,True],[False,False],[False,False],[False,True],[False,True],[False,False],[True,False],[True,False],[True,False],[False,True],[False,True],[True,False],[True,False],[False,False],[False,True],[False,True],[False,True],[False,False],[True,False],[False,True],[True,False],[True,False],[False,False],[False,True],[False,True],[True,True],[False,False],[True,True],[False,True],[True,True],[False,False],[False,True],[True,False],[True,False],[False,True],[True,False],[True,True],[False,False],[True,True],[True,False],[False,False],[True,False],[False,False],[True,True],[True,True],[False,True],[True,False],[False,False],[True,False],[False,True],[True,True],[True,True],[False,False],[True,False],[True,False],[False,True],[True,True],[True,True],[True,False],[False,False],[True,False],[True,False],[True,False],[False,False],[False,False],[True,True],[False,True],[False,False],[True,True],[False,False],[False,False],[True,True],[True,False],[False,False],[False,True],[False,False],[True,False],[False,False],[False,True],[False,False],[True,False],[True,True],[True,False],[False,False],[True,False],[False,True],[True,True],[False,False],[True,True],[True,True],[False,True],[True,True],[True,False],[False,True],[True,False],[True,False],[False,True],[False,True],[True,False],[True,False],[False,True],[False,True],[False,False],[False,True],[True,True],[True,True],[False,False],[True,False],[False,True],[True,True],[True,True],[False,False],[False,False],[True,True],[False,True],[True,False],[False,True],[False,True],[False,False],[False,True],[True,True],[True,True],[False,False],[True,False],[True,True],[False,False],[False,False],[False,False],[False,False],[True,False],[True,False],[False,True],[False,False],[False,False],[False,True],[True,True],[False,False],[True,False],[False,False],[True,True],[True,True],[False,True],[True,False],[True,True]], dtype = "bool")#candidate|3766|(630, 2)|const|bool
call_3763 = relay.TupleGetItem(func_2991_call(relay.reshape(var_3764.astype('float32'), [8, 16, 6]), relay.reshape(var_3765.astype('uint16'), [252,]), relay.reshape(const_3766.astype('bool'), [1260,]), ), 1)
call_3767 = relay.TupleGetItem(func_2996_call(relay.reshape(var_3764.astype('float32'), [8, 16, 6]), relay.reshape(var_3765.astype('uint16'), [252,]), relay.reshape(const_3766.astype('bool'), [1260,]), ), 1)
var_3781 = relay.var("var_3781", dtype = "uint16", shape = (252,))#candidate|3781|(252,)|var|uint16
bop_3782 = relay.bitwise_xor(var_3765.astype('int32'), relay.reshape(var_3781.astype('int32'), relay.shape_of(var_3765))) # shape=(252,)
bop_3786 = relay.left_shift(var_3781.astype('int8'), relay.reshape(bop_3782.astype('int8'), relay.shape_of(var_3781))) # shape=(252,)
func_3703_call = mod.get_global_var('func_3703')
func_3705_call = mutated_mod.get_global_var('func_3705')
call_3811 = func_3703_call()
call_3812 = func_3703_call()
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_3814 = relay.TupleGetItem(func_2318_call(), 0)
call_3815 = relay.TupleGetItem(func_2320_call(), 0)
uop_3821 = relay.tan(call_3763.astype('float32')) # shape=(4, 15, 4)
uop_3823 = relay.tan(call_3767.astype('float32')) # shape=(4, 15, 4)
func_2733_call = mod.get_global_var('func_2733')
func_2735_call = mutated_mod.get_global_var('func_2735')
call_3847 = relay.TupleGetItem(func_2733_call(), 3)
call_3848 = relay.TupleGetItem(func_2735_call(), 3)
output = relay.Tuple([call_3745,var_3764,const_3766,bop_3786,call_3811,call_3814,uop_3821,call_3847,])
output2 = relay.Tuple([call_3746,var_3764,const_3766,bop_3786,call_3812,call_3815,uop_3823,call_3848,])
func_3849 = relay.Function([var_3764,var_3765,var_3781,], output)
mod['func_3849'] = func_3849
mod = relay.transform.InferType()(mod)
var_3850 = relay.var("var_3850", dtype = "float32", shape = (768,))#candidate|3850|(768,)|var|float32
var_3851 = relay.var("var_3851", dtype = "uint16", shape = (252,))#candidate|3851|(252,)|var|uint16
var_3852 = relay.var("var_3852", dtype = "uint16", shape = (252,))#candidate|3852|(252,)|var|uint16
output = func_3849(var_3850,var_3851,var_3852,)
func_3853 = relay.Function([var_3850,var_3851,var_3852,], output)
mutated_mod['func_3853'] = func_3853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_3876 = relay.TupleGetItem(func_2510_call(), 1)
call_3877 = relay.TupleGetItem(func_2512_call(), 1)
func_2129_call = mod.get_global_var('func_2129')
func_2131_call = mutated_mod.get_global_var('func_2131')
call_3880 = relay.TupleGetItem(func_2129_call(), 0)
call_3881 = relay.TupleGetItem(func_2131_call(), 0)
var_3888 = relay.var("var_3888", dtype = "float32", shape = (5, 96))#candidate|3888|(5, 96)|var|float32
bop_3889 = relay.mod(call_3876.astype('float32'), var_3888.astype('float32')) # shape=(5, 96)
bop_3892 = relay.mod(call_3877.astype('float32'), var_3888.astype('float32')) # shape=(5, 96)
bop_3893 = relay.equal(call_3876.astype('bool'), var_3888.astype('bool')) # shape=(5, 96)
bop_3896 = relay.equal(call_3877.astype('bool'), var_3888.astype('bool')) # shape=(5, 96)
output = relay.Tuple([call_3880,bop_3889,bop_3893,])
output2 = relay.Tuple([call_3881,bop_3892,bop_3896,])
func_3897 = relay.Function([var_3888,], output)
mod['func_3897'] = func_3897
mod = relay.transform.InferType()(mod)
var_3898 = relay.var("var_3898", dtype = "float32", shape = (5, 96))#candidate|3898|(5, 96)|var|float32
output = func_3897(var_3898)
func_3899 = relay.Function([var_3898], output)
mutated_mod['func_3899'] = func_3899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_3901 = func_3034_call()
call_3902 = func_3034_call()
output = relay.Tuple([call_3901,])
output2 = relay.Tuple([call_3902,])
func_3937 = relay.Function([], output)
mod['func_3937'] = func_3937
mod = relay.transform.InferType()(mod)
mutated_mod['func_3937'] = func_3937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3937_call = mutated_mod.get_global_var('func_3937')
call_3938 = func_3937_call()
output = call_3938
func_3939 = relay.Function([], output)
mutated_mod['func_3939'] = func_3939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mod.get_global_var('func_1688')
func_1690_call = mutated_mod.get_global_var('func_1690')
call_3969 = func_1688_call()
call_3970 = func_1688_call()
output = call_3969
output2 = call_3970
func_3998 = relay.Function([], output)
mod['func_3998'] = func_3998
mod = relay.transform.InferType()(mod)
output = func_3998()
func_3999 = relay.Function([], output)
mutated_mod['func_3999'] = func_3999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_4016 = func_3034_call()
call_4017 = func_3034_call()
output = call_4016
output2 = call_4017
func_4021 = relay.Function([], output)
mod['func_4021'] = func_4021
mod = relay.transform.InferType()(mod)
output = func_4021()
func_4022 = relay.Function([], output)
mutated_mod['func_4022'] = func_4022
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4073 = relay.var("var_4073", dtype = "float64", shape = (4, 2, 7))#candidate|4073|(4, 2, 7)|var|float64
var_4074 = relay.var("var_4074", dtype = "float64", shape = (4, 2, 7))#candidate|4074|(4, 2, 7)|var|float64
bop_4075 = relay.floor_divide(var_4073.astype('float64'), relay.reshape(var_4074.astype('float64'), relay.shape_of(var_4073))) # shape=(4, 2, 7)
output = bop_4075
output2 = bop_4075
func_4082 = relay.Function([var_4073,var_4074,], output)
mod['func_4082'] = func_4082
mod = relay.transform.InferType()(mod)
mutated_mod['func_4082'] = func_4082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4082_call = mutated_mod.get_global_var('func_4082')
var_4084 = relay.var("var_4084", dtype = "float64", shape = (4, 2, 7))#candidate|4084|(4, 2, 7)|var|float64
var_4085 = relay.var("var_4085", dtype = "float64", shape = (4, 2, 7))#candidate|4085|(4, 2, 7)|var|float64
call_4083 = func_4082_call(var_4084,var_4085,)
output = call_4083
func_4086 = relay.Function([var_4084,var_4085,], output)
mutated_mod['func_4086'] = func_4086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2065_call = mod.get_global_var('func_2065')
func_2066_call = mutated_mod.get_global_var('func_2066')
call_4186 = relay.TupleGetItem(func_2065_call(), 0)
call_4187 = relay.TupleGetItem(func_2066_call(), 0)
func_1801_call = mod.get_global_var('func_1801')
func_1802_call = mutated_mod.get_global_var('func_1802')
call_4192 = relay.TupleGetItem(func_1801_call(), 2)
call_4193 = relay.TupleGetItem(func_1802_call(), 2)
uop_4224 = relay.acos(call_4186.astype('float64')) # shape=(12, 6, 6)
uop_4226 = relay.acos(call_4187.astype('float64')) # shape=(12, 6, 6)
func_906_call = mod.get_global_var('func_906')
func_909_call = mutated_mod.get_global_var('func_909')
var_4231 = relay.var("var_4231", dtype = "int8", shape = (35,))#candidate|4231|(35,)|var|int8
call_4230 = relay.TupleGetItem(func_906_call(relay.reshape(var_4231.astype('int8'), [7, 5, 1]), relay.reshape(var_4231.astype('int8'), [7, 5, 1]), ), 0)
call_4232 = relay.TupleGetItem(func_909_call(relay.reshape(var_4231.astype('int8'), [7, 5, 1]), relay.reshape(var_4231.astype('int8'), [7, 5, 1]), ), 0)
func_2129_call = mod.get_global_var('func_2129')
func_2131_call = mutated_mod.get_global_var('func_2131')
call_4239 = relay.TupleGetItem(func_2129_call(), 0)
call_4240 = relay.TupleGetItem(func_2131_call(), 0)
func_1400_call = mod.get_global_var('func_1400')
func_1401_call = mutated_mod.get_global_var('func_1401')
call_4242 = func_1400_call()
call_4243 = func_1400_call()
func_3849_call = mod.get_global_var('func_3849')
func_3853_call = mutated_mod.get_global_var('func_3853')
var_4256 = relay.var("var_4256", dtype = "float32", shape = (768,))#candidate|4256|(768,)|var|float32
const_4257 = relay.const([-10,10,8,-2,-9,3,-7,8,5,4,10,-6,-6,-3,8,2,8,5,-1,-6,-4,-6,1,-4,5,4,7,8,-10,4,2,-8,-9,8,-2,10,5,-8,-10,-5,-2,2,8,5,-2,-7,-4,-7,-2,2,-1,-1,-8,5,3,5,-8,7,9,-5,10,7,1,-6,1,6,-8,-10,-5,-8,-6,6,-2,-1,4,3,-10,-5,-6,-1,-8,-3,-3,5,-10,8,8,10,-6,2,-9,-3,7,7,10,-2,-6,-5,8,8,-4,1,-2,-3,-4,-8,2,-9,1,2,-5,-8,-9,-9,-2,4,5,8,-8,6,6,4,-7,-6,-2,-8,5,9,8,3,-7,7,-4,-7,-8,6,-7,3,-7,2,9,6,5,-8,-3,6,5,2,-10,4,2,-5,4,2,-7,1,-4,10,2,6,-6,-7,-6,2,8,6,-8,8,9,3,6,-3,-9,-4,8,8,2,5,-4,6,5,-1,-4,-6,3,-10,1,1,-4,-3,-5,-6,-10,-9,-10,-8,10,1,-10,-7,-4,4,-10,-5,2,-7,-3,-7,6,7,10,4,-7,-4,-9,2,7,9,2,2,-6,-2,3,-1,-3,6,4,-5,-4,7,-1,-9,6,-6,1,-2,-8,-5,-2,-2,7,-2,10,1,8,9,9,-8,3,-3,3,-3], dtype = "uint16")#candidate|4257|(252,)|const|uint16
call_4255 = relay.TupleGetItem(func_3849_call(relay.reshape(var_4256.astype('float32'), [768,]), relay.reshape(const_4257.astype('uint16'), [252,]), relay.reshape(const_4257.astype('uint16'), [252,]), ), 5)
call_4258 = relay.TupleGetItem(func_3853_call(relay.reshape(var_4256.astype('float32'), [768,]), relay.reshape(const_4257.astype('uint16'), [252,]), relay.reshape(const_4257.astype('uint16'), [252,]), ), 5)
output = relay.Tuple([call_4192,uop_4224,call_4230,var_4231,call_4239,call_4242,call_4255,var_4256,const_4257,])
output2 = relay.Tuple([call_4193,uop_4226,call_4232,var_4231,call_4240,call_4243,call_4258,var_4256,const_4257,])
func_4265 = relay.Function([var_4231,var_4256,], output)
mod['func_4265'] = func_4265
mod = relay.transform.InferType()(mod)
mutated_mod['func_4265'] = func_4265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4265_call = mutated_mod.get_global_var('func_4265')
var_4267 = relay.var("var_4267", dtype = "int8", shape = (35,))#candidate|4267|(35,)|var|int8
var_4268 = relay.var("var_4268", dtype = "float32", shape = (768,))#candidate|4268|(768,)|var|float32
call_4266 = func_4265_call(var_4267,var_4268,)
output = call_4266
func_4269 = relay.Function([var_4267,var_4268,], output)
mutated_mod['func_4269'] = func_4269
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4293 = relay.var("var_4293", dtype = "float64", shape = (1, 5, 11))#candidate|4293|(1, 5, 11)|var|float64
var_4294 = relay.var("var_4294", dtype = "float64", shape = (15, 5, 11))#candidate|4294|(15, 5, 11)|var|float64
bop_4295 = relay.not_equal(var_4293.astype('bool'), var_4294.astype('bool')) # shape=(15, 5, 11)
func_1647_call = mod.get_global_var('func_1647')
func_1649_call = mutated_mod.get_global_var('func_1649')
call_4301 = relay.TupleGetItem(func_1647_call(), 1)
call_4302 = relay.TupleGetItem(func_1649_call(), 1)
output = relay.Tuple([bop_4295,call_4301,])
output2 = relay.Tuple([bop_4295,call_4302,])
func_4314 = relay.Function([var_4293,var_4294,], output)
mod['func_4314'] = func_4314
mod = relay.transform.InferType()(mod)
var_4315 = relay.var("var_4315", dtype = "float64", shape = (1, 5, 11))#candidate|4315|(1, 5, 11)|var|float64
var_4316 = relay.var("var_4316", dtype = "float64", shape = (15, 5, 11))#candidate|4316|(15, 5, 11)|var|float64
output = func_4314(var_4315,var_4316,)
func_4317 = relay.Function([var_4315,var_4316,], output)
mutated_mod['func_4317'] = func_4317
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4399 = relay.var("var_4399", dtype = "float32", shape = (1, 5, 15))#candidate|4399|(1, 5, 15)|var|float32
uop_4400 = relay.acosh(var_4399.astype('float32')) # shape=(1, 5, 15)
output = uop_4400
output2 = uop_4400
func_4407 = relay.Function([var_4399,], output)
mod['func_4407'] = func_4407
mod = relay.transform.InferType()(mod)
var_4408 = relay.var("var_4408", dtype = "float32", shape = (1, 5, 15))#candidate|4408|(1, 5, 15)|var|float32
output = func_4407(var_4408)
func_4409 = relay.Function([var_4408], output)
mutated_mod['func_4409'] = func_4409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_4411 = relay.TupleGetItem(func_2318_call(), 0)
call_4412 = relay.TupleGetItem(func_2320_call(), 0)
func_1933_call = mod.get_global_var('func_1933')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_4430 = relay.TupleGetItem(func_1933_call(), 0)
call_4431 = relay.TupleGetItem(func_1934_call(), 0)
output = relay.Tuple([call_4411,call_4430,])
output2 = relay.Tuple([call_4412,call_4431,])
func_4437 = relay.Function([], output)
mod['func_4437'] = func_4437
mod = relay.transform.InferType()(mod)
output = func_4437()
func_4438 = relay.Function([], output)
mutated_mod['func_4438'] = func_4438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3998_call = mod.get_global_var('func_3998')
func_3999_call = mutated_mod.get_global_var('func_3999')
call_4457 = func_3998_call()
call_4458 = func_3998_call()
func_220_call = mod.get_global_var('func_220')
func_222_call = mutated_mod.get_global_var('func_222')
var_4482 = relay.var("var_4482", dtype = "float32", shape = (975,))#candidate|4482|(975,)|var|float32
call_4481 = func_220_call(relay.reshape(var_4482.astype('float32'), [13, 15, 5]))
call_4483 = func_220_call(relay.reshape(var_4482.astype('float32'), [13, 15, 5]))
output = relay.Tuple([call_4457,call_4481,var_4482,])
output2 = relay.Tuple([call_4458,call_4483,var_4482,])
func_4495 = relay.Function([var_4482,], output)
mod['func_4495'] = func_4495
mod = relay.transform.InferType()(mod)
mutated_mod['func_4495'] = func_4495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4496 = relay.var("var_4496", dtype = "float32", shape = (975,))#candidate|4496|(975,)|var|float32
func_4495_call = mutated_mod.get_global_var('func_4495')
call_4497 = func_4495_call(var_4496)
output = call_4497
func_4498 = relay.Function([var_4496], output)
mutated_mod['func_4498'] = func_4498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_4516 = relay.TupleGetItem(func_2318_call(), 0)
call_4517 = relay.TupleGetItem(func_2320_call(), 0)
output = call_4516
output2 = call_4517
func_4528 = relay.Function([], output)
mod['func_4528'] = func_4528
mod = relay.transform.InferType()(mod)
mutated_mod['func_4528'] = func_4528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mutated_mod.get_global_var('func_4528')
call_4529 = func_4528_call()
output = call_4529
func_4530 = relay.Function([], output)
mutated_mod['func_4530'] = func_4530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_4531 = relay.TupleGetItem(func_2510_call(), 2)
call_4532 = relay.TupleGetItem(func_2512_call(), 2)
uop_4533 = relay.acos(call_4531.astype('float32')) # shape=(4, 12, 2)
uop_4535 = relay.acos(call_4532.astype('float32')) # shape=(4, 12, 2)
bop_4539 = relay.multiply(uop_4533.astype('int32'), relay.reshape(call_4531.astype('int32'), relay.shape_of(uop_4533))) # shape=(4, 12, 2)
bop_4542 = relay.multiply(uop_4535.astype('int32'), relay.reshape(call_4532.astype('int32'), relay.shape_of(uop_4535))) # shape=(4, 12, 2)
func_2164_call = mod.get_global_var('func_2164')
func_2165_call = mutated_mod.get_global_var('func_2165')
call_4547 = func_2164_call()
call_4548 = func_2164_call()
output = relay.Tuple([bop_4539,call_4547,])
output2 = relay.Tuple([bop_4542,call_4548,])
func_4550 = relay.Function([], output)
mod['func_4550'] = func_4550
mod = relay.transform.InferType()(mod)
output = func_4550()
func_4551 = relay.Function([], output)
mutated_mod['func_4551'] = func_4551
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4621 = relay.const([[[6.195079,-2.236788,-7.195030,2.959822,-0.397724,2.422017,-3.035977],[-1.764762,-6.437108,-3.585029,-0.718943,1.914030,9.281178,-9.960744],[-8.026646,2.208187,-6.249688,3.150953,-5.653216,-0.786818,2.660521],[-3.435096,-1.540484,-4.936903,-8.270306,-8.681072,-5.584207,-1.705400],[8.167237,-8.666406,6.815070,-9.244672,1.635076,-1.036882,-0.317783],[-3.847164,0.948263,4.165609,4.465230,-5.075966,5.922069,-1.154724],[7.200027,6.158472,-3.243902,-3.471945,3.248331,0.524884,-0.707593],[-2.013057,-8.907655,0.594008,-8.437038,3.034847,-0.630963,7.639674],[-2.926538,0.141301,-4.883432,-2.707406,-2.695076,-4.293669,7.227590],[-6.078471,-1.948766,-3.332934,9.762734,-2.691795,7.868145,1.933953],[1.880476,3.358757,1.650767,1.075223,6.399476,-3.038421,0.610604],[0.858552,-7.527102,-7.842239,-3.845184,9.191938,-6.100349,3.404703],[3.639484,-8.706337,0.246349,-0.835103,-8.219781,8.588928,8.446534],[-7.306411,-1.399861,-0.817765,1.113778,3.453313,0.972572,-8.258370],[-4.154528,1.186111,-0.214599,7.001898,4.256156,-6.185369,6.331298],[2.918821,7.869498,3.848298,1.073122,-3.654309,5.433858,5.050825]],[[-5.505627,-2.150936,7.032616,-2.342539,6.382909,-3.688053,3.201294],[8.160586,-7.902649,-2.603517,-2.063178,8.522544,5.605020,-9.786022],[-3.873579,7.419386,4.153581,8.131526,-9.378301,7.479981,8.295945],[-7.940428,-0.271187,-9.269282,1.549208,3.606519,-8.800422,5.593319],[-3.140035,-5.459236,3.331237,-7.470699,-6.707510,-3.197337,2.742440],[-8.345723,7.648806,-4.760865,-0.487871,-1.486442,9.565683,8.420934],[-2.470572,3.856440,4.777762,1.931621,5.108123,7.756391,-6.222977],[-4.429921,7.254742,-8.809849,-3.943538,0.033704,6.217608,-5.069953],[6.931056,4.095369,-1.146065,-1.104367,-1.268576,2.095526,0.113590],[6.927108,-7.415625,-0.337393,9.894430,-9.368969,7.505823,-9.626745],[0.436857,8.224795,7.205255,-2.280397,7.675324,3.818998,6.123523],[8.991626,7.897363,-2.600682,0.823172,-9.323287,5.388256,-2.370430],[-7.030721,-7.323529,5.691790,-7.128567,-0.932725,-9.558119,5.516470],[1.963909,-2.665166,-8.078125,-4.331890,3.694325,2.345077,-4.997748],[-6.064953,0.957859,4.344187,-8.733832,1.907917,5.670934,-3.137308],[4.457874,2.033330,-1.306456,5.792118,-9.084078,6.986670,4.574314]],[[0.145761,4.319934,-5.698882,-5.795236,-3.998953,-5.908102,1.036543],[0.133998,-1.679750,0.806220,-9.599418,0.949724,-4.426461,6.252587],[-9.963902,-6.965001,-6.019986,1.954171,-9.298485,-9.055482,8.245714],[-5.144113,1.709554,-4.665337,-6.103984,9.055183,4.449033,7.886034],[-1.722692,7.829586,4.235599,-0.991945,5.500815,4.462497,8.345113],[3.338464,-9.131265,5.430660,8.643471,0.847753,-0.777644,-5.048245],[-0.348855,5.453193,-5.380185,5.122952,9.304619,8.542490,8.503600],[-8.697876,4.778069,7.772312,-7.369012,0.772163,-5.968004,4.920115],[3.759831,-8.509156,3.802490,0.510528,-7.304280,-3.239425,-8.882436],[9.742460,-0.696399,3.306571,8.216441,4.874019,8.305438,3.906197],[-1.204358,-0.995705,2.505168,6.868488,7.493823,-4.239426,9.393256],[2.800633,5.856114,6.918589,-0.857133,0.199714,-1.634791,9.549632],[4.864870,0.193874,-6.854416,5.390563,0.123487,-8.032357,0.618795],[-0.534051,1.780389,6.234642,-2.243560,-9.763119,4.491880,-8.543116],[2.352223,0.003186,4.462430,-3.163476,8.575903,9.032317,-9.136642],[6.943288,-1.778172,-9.159005,9.152495,-7.686548,-7.397163,-3.640020]]], dtype = "float64")#candidate|4621|(3, 16, 7)|const|float64
var_4622 = relay.var("var_4622", dtype = "float64", shape = (3, 16, 7))#candidate|4622|(3, 16, 7)|var|float64
bop_4623 = relay.equal(const_4621.astype('bool'), relay.reshape(var_4622.astype('bool'), relay.shape_of(const_4621))) # shape=(3, 16, 7)
output = relay.Tuple([bop_4623,])
output2 = relay.Tuple([bop_4623,])
func_4626 = relay.Function([var_4622,], output)
mod['func_4626'] = func_4626
mod = relay.transform.InferType()(mod)
var_4627 = relay.var("var_4627", dtype = "float64", shape = (3, 16, 7))#candidate|4627|(3, 16, 7)|var|float64
output = func_4626(var_4627)
func_4628 = relay.Function([var_4627], output)
mutated_mod['func_4628'] = func_4628
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4649 = relay.var("var_4649", dtype = "float32", shape = (16, 2, 14))#candidate|4649|(16, 2, 14)|var|float32
const_4650 = relay.const([[[1.553336,7.437338,4.864919,3.634269,-3.575260,-7.979211,-6.019258,2.617199,3.106381,1.410445,-6.421719,-1.696510,-5.271145,-3.421911],[3.782444,2.457018,-7.173494,3.541472,8.753917,-0.262495,0.302304,-7.316287,4.577696,9.659044,5.173884,-1.640445,1.617240,-8.326212]],[[2.911564,-5.058798,2.885925,5.955908,0.825136,0.659979,-0.322436,-0.680558,9.276072,6.913794,-4.853906,7.421560,7.108795,9.163600],[-2.510830,-3.755444,-6.903751,-5.975364,-0.238471,-6.258270,3.174770,4.672510,8.024880,1.821325,-3.254790,1.622924,-7.150816,-5.261479]],[[-1.425031,-9.514183,-4.797498,-8.936119,9.720676,-9.586934,2.108044,0.411766,-2.051959,-7.625505,9.901066,-6.561707,-0.589987,-3.978176],[-7.597832,-8.188122,2.616767,3.750329,-5.375261,-6.276456,5.043857,7.946042,8.712828,7.791955,8.429206,1.215138,1.447472,-1.057557]],[[8.350524,-4.252476,-9.525845,-8.742710,9.304912,7.257068,-6.997751,-6.638943,-4.330313,-9.369446,-4.852088,7.627849,2.205403,-5.410901],[5.430166,-9.927962,-4.010518,-3.689249,4.021508,-0.718789,0.504371,-3.992284,4.229520,2.940390,6.776301,-7.050682,3.775274,0.070638]],[[-9.257787,5.312463,2.715420,2.019951,0.169318,-3.790918,-5.296564,6.721403,-2.490466,9.343280,-0.503832,3.178424,-7.215149,-3.743458],[1.035782,-7.096318,5.479458,8.910682,8.072151,-9.757358,5.383669,-9.387441,3.124784,3.755195,1.258494,-5.034353,7.729246,0.464353]],[[6.804743,6.882876,-6.228896,-5.330149,7.473113,-4.601714,-3.885726,3.996063,5.155881,-4.138714,-3.517705,-9.802331,-3.549242,2.852776],[-1.692895,-3.875019,-6.243166,-4.287007,4.799679,8.903621,7.862081,-2.805686,-3.355882,4.282684,4.733825,4.669873,6.408542,2.993603]],[[-8.211512,5.675448,-9.063347,-2.157334,1.287150,0.851177,3.473081,1.203073,-9.190456,4.338809,-4.747472,-8.558259,-4.033699,0.502193],[2.539840,0.447851,1.177856,-7.237566,-7.163903,3.085670,4.005204,6.661271,2.988610,8.238469,-7.703309,-9.363712,4.215528,-0.735423]],[[-9.085515,1.437688,-2.965512,8.832234,3.202999,8.372947,-6.178069,8.215437,9.801235,7.096358,-3.491430,-1.869815,7.725243,6.046949],[1.128399,-2.011007,5.359305,9.315839,-2.873623,6.249806,-0.833503,-7.630745,5.869713,9.132861,-2.105641,7.176445,3.778159,4.185000]],[[9.743366,-3.411365,-5.242987,-4.754637,-9.396340,4.846708,3.703310,1.649596,-3.125114,-6.638911,1.149473,-4.054870,-4.451942,-0.311906],[-0.002687,-9.624521,-3.502786,-0.707278,1.641752,-3.165594,8.075464,1.794420,7.615833,-9.469167,-1.199212,0.211155,-7.551854,8.250943]],[[-4.193831,1.427798,5.115891,-9.715431,-9.602819,-4.210832,3.742879,3.782706,-7.887029,8.648620,3.606027,3.392877,5.836979,-2.122139],[8.384681,-6.796270,1.072158,-2.302184,-1.143650,3.648379,2.836678,-4.653929,-1.675911,8.731561,-3.793773,-1.934342,9.868220,8.549937]],[[4.105877,-6.824845,9.837230,-9.913496,-1.646558,9.435338,6.754685,9.611351,-6.743074,2.385583,-6.692178,-7.395358,-2.536106,-0.275807],[-1.167249,-4.012430,5.423054,-3.052321,5.273770,-0.713610,4.965354,-4.968064,-1.064605,-2.161603,-4.692414,9.351824,-8.913277,8.133676]],[[7.175012,-9.669441,-3.253404,2.395664,-0.720717,-7.445393,-9.061791,0.990801,0.826365,-2.207952,-3.239270,-9.572890,-4.485530,1.534481],[3.661948,2.934273,-9.960336,2.912227,-7.490579,8.675459,-6.943504,6.126709,-0.902367,0.807871,-5.174624,6.309553,-9.968713,7.059113]],[[5.645946,5.310366,-7.371369,4.659077,6.701906,0.732495,8.293411,-4.727713,-0.533370,-1.090521,-4.941036,-8.289827,1.493704,5.646941],[-2.097575,7.936698,4.795660,-4.657071,6.490699,0.412950,-6.680481,1.434351,0.789653,-0.998269,9.955742,-3.181066,-4.517544,-3.949443]],[[-5.679370,6.292692,0.359499,-9.158957,2.732650,-5.391725,5.315599,5.654231,-0.353301,9.967265,-4.187056,1.498758,9.984117,-5.890048],[3.273261,5.175449,-4.269042,-8.626360,6.990436,5.501126,1.894057,-8.169610,7.223627,7.860360,-6.643921,9.400872,-7.022834,-2.590611]],[[-1.245786,6.934464,2.507378,8.609196,3.344422,9.559061,-1.820068,6.100665,-6.291668,-8.575057,-8.203162,6.269167,0.384897,3.217286],[-0.998905,4.070421,-6.657503,-1.369939,8.163166,-9.600170,8.475302,-8.380066,-8.597421,9.123216,1.325976,-4.820304,1.733673,-8.602512]],[[-7.896167,-5.118506,8.050644,8.106744,-6.161769,0.927160,1.781705,-0.781619,-7.832546,-5.868992,7.907876,9.244165,-7.603330,-6.245548],[-0.872749,-5.232402,-3.855320,7.934558,-5.274897,-3.762771,-0.743645,-5.546278,1.834745,-1.412069,9.146915,-5.866255,-5.903385,4.829631]]], dtype = "float32")#candidate|4650|(16, 2, 14)|const|float32
bop_4651 = relay.floor_divide(var_4649.astype('float32'), relay.reshape(const_4650.astype('float32'), relay.shape_of(var_4649))) # shape=(16, 2, 14)
output = relay.Tuple([bop_4651,])
output2 = relay.Tuple([bop_4651,])
func_4663 = relay.Function([var_4649,], output)
mod['func_4663'] = func_4663
mod = relay.transform.InferType()(mod)
var_4664 = relay.var("var_4664", dtype = "float32", shape = (16, 2, 14))#candidate|4664|(16, 2, 14)|var|float32
output = func_4663(var_4664)
func_4665 = relay.Function([var_4664], output)
mutated_mod['func_4665'] = func_4665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4550_call = mod.get_global_var('func_4550')
func_4551_call = mutated_mod.get_global_var('func_4551')
call_4677 = relay.TupleGetItem(func_4550_call(), 0)
call_4678 = relay.TupleGetItem(func_4551_call(), 0)
output = call_4677
output2 = call_4678
func_4697 = relay.Function([], output)
mod['func_4697'] = func_4697
mod = relay.transform.InferType()(mod)
mutated_mod['func_4697'] = func_4697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4697_call = mutated_mod.get_global_var('func_4697')
call_4698 = func_4697_call()
output = call_4698
func_4699 = relay.Function([], output)
mutated_mod['func_4699'] = func_4699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_4750 = relay.TupleGetItem(func_2318_call(), 0)
call_4751 = relay.TupleGetItem(func_2320_call(), 0)
output = call_4750
output2 = call_4751
func_4752 = relay.Function([], output)
mod['func_4752'] = func_4752
mod = relay.transform.InferType()(mod)
output = func_4752()
func_4753 = relay.Function([], output)
mutated_mod['func_4753'] = func_4753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3326_call = mod.get_global_var('func_3326')
func_3327_call = mutated_mod.get_global_var('func_3327')
call_4815 = relay.TupleGetItem(func_3326_call(), 0)
call_4816 = relay.TupleGetItem(func_3327_call(), 0)
output = call_4815
output2 = call_4816
func_4821 = relay.Function([], output)
mod['func_4821'] = func_4821
mod = relay.transform.InferType()(mod)
output = func_4821()
func_4822 = relay.Function([], output)
mutated_mod['func_4822'] = func_4822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1826_call = mod.get_global_var('func_1826')
func_1827_call = mutated_mod.get_global_var('func_1827')
call_4862 = relay.TupleGetItem(func_1826_call(), 0)
call_4863 = relay.TupleGetItem(func_1827_call(), 0)
output = relay.Tuple([call_4862,])
output2 = relay.Tuple([call_4863,])
func_4864 = relay.Function([], output)
mod['func_4864'] = func_4864
mod = relay.transform.InferType()(mod)
mutated_mod['func_4864'] = func_4864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4864_call = mutated_mod.get_global_var('func_4864')
call_4865 = func_4864_call()
output = call_4865
func_4866 = relay.Function([], output)
mutated_mod['func_4866'] = func_4866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3227_call = mod.get_global_var('func_3227')
func_3229_call = mutated_mod.get_global_var('func_3229')
call_4959 = relay.TupleGetItem(func_3227_call(), 0)
call_4960 = relay.TupleGetItem(func_3229_call(), 0)
func_3937_call = mod.get_global_var('func_3937')
func_3939_call = mutated_mod.get_global_var('func_3939')
call_4985 = relay.TupleGetItem(func_3937_call(), 0)
call_4986 = relay.TupleGetItem(func_3939_call(), 0)
func_3736_call = mod.get_global_var('func_3736')
func_3738_call = mutated_mod.get_global_var('func_3738')
call_4990 = relay.TupleGetItem(func_3736_call(), 1)
call_4991 = relay.TupleGetItem(func_3738_call(), 1)
output = relay.Tuple([call_4959,call_4985,call_4990,])
output2 = relay.Tuple([call_4960,call_4986,call_4991,])
func_5000 = relay.Function([], output)
mod['func_5000'] = func_5000
mod = relay.transform.InferType()(mod)
output = func_5000()
func_5001 = relay.Function([], output)
mutated_mod['func_5001'] = func_5001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_5015 = relay.TupleGetItem(func_1386_call(), 0)
call_5016 = relay.TupleGetItem(func_1388_call(), 0)
func_3452_call = mod.get_global_var('func_3452')
func_3454_call = mutated_mod.get_global_var('func_3454')
call_5039 = relay.TupleGetItem(func_3452_call(), 1)
call_5040 = relay.TupleGetItem(func_3454_call(), 1)
bop_5045 = relay.mod(call_5015.astype('float32'), relay.reshape(call_5039.astype('float32'), relay.shape_of(call_5015))) # shape=(12, 6, 6)
bop_5048 = relay.mod(call_5016.astype('float32'), relay.reshape(call_5040.astype('float32'), relay.shape_of(call_5016))) # shape=(12, 6, 6)
func_1801_call = mod.get_global_var('func_1801')
func_1802_call = mutated_mod.get_global_var('func_1802')
call_5051 = relay.TupleGetItem(func_1801_call(), 2)
call_5052 = relay.TupleGetItem(func_1802_call(), 2)
func_2408_call = mod.get_global_var('func_2408')
func_2411_call = mutated_mod.get_global_var('func_2411')
const_5066 = relay.const(-4.450935, dtype = "float32")#candidate|5066|()|const|float32
call_5065 = relay.TupleGetItem(func_2408_call(relay.reshape(const_5066.astype('float32'), [])), 0)
call_5067 = relay.TupleGetItem(func_2411_call(relay.reshape(const_5066.astype('float32'), [])), 0)
func_3703_call = mod.get_global_var('func_3703')
func_3705_call = mutated_mod.get_global_var('func_3705')
call_5068 = func_3703_call()
call_5069 = func_3703_call()
output = relay.Tuple([bop_5045,call_5051,call_5065,const_5066,call_5068,])
output2 = relay.Tuple([bop_5048,call_5052,call_5067,const_5066,call_5069,])
func_5071 = relay.Function([], output)
mod['func_5071'] = func_5071
mod = relay.transform.InferType()(mod)
output = func_5071()
func_5072 = relay.Function([], output)
mutated_mod['func_5072'] = func_5072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5071_call = mod.get_global_var('func_5071')
func_5072_call = mutated_mod.get_global_var('func_5072')
call_5081 = relay.TupleGetItem(func_5071_call(), 3)
call_5082 = relay.TupleGetItem(func_5072_call(), 3)
output = call_5081
output2 = call_5082
func_5091 = relay.Function([], output)
mod['func_5091'] = func_5091
mod = relay.transform.InferType()(mod)
mutated_mod['func_5091'] = func_5091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5091_call = mutated_mod.get_global_var('func_5091')
call_5092 = func_5091_call()
output = call_5092
func_5093 = relay.Function([], output)
mutated_mod['func_5093'] = func_5093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1826_call = mod.get_global_var('func_1826')
func_1827_call = mutated_mod.get_global_var('func_1827')
call_5155 = relay.TupleGetItem(func_1826_call(), 0)
call_5156 = relay.TupleGetItem(func_1827_call(), 0)
output = call_5155
output2 = call_5156
func_5186 = relay.Function([], output)
mod['func_5186'] = func_5186
mod = relay.transform.InferType()(mod)
mutated_mod['func_5186'] = func_5186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5186_call = mutated_mod.get_global_var('func_5186')
call_5187 = func_5186_call()
output = call_5187
func_5188 = relay.Function([], output)
mutated_mod['func_5188'] = func_5188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4697_call = mod.get_global_var('func_4697')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_5248 = func_4697_call()
call_5249 = func_4697_call()
output = call_5248
output2 = call_5249
func_5264 = relay.Function([], output)
mod['func_5264'] = func_5264
mod = relay.transform.InferType()(mod)
mutated_mod['func_5264'] = func_5264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5264_call = mutated_mod.get_global_var('func_5264')
call_5265 = func_5264_call()
output = call_5265
func_5266 = relay.Function([], output)
mutated_mod['func_5266'] = func_5266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mod.get_global_var('func_1688')
func_1690_call = mutated_mod.get_global_var('func_1690')
call_5284 = func_1688_call()
call_5285 = func_1688_call()
output = call_5284
output2 = call_5285
func_5293 = relay.Function([], output)
mod['func_5293'] = func_5293
mod = relay.transform.InferType()(mod)
mutated_mod['func_5293'] = func_5293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5293_call = mutated_mod.get_global_var('func_5293')
call_5294 = func_5293_call()
output = call_5294
func_5295 = relay.Function([], output)
mutated_mod['func_5295'] = func_5295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2065_call = mod.get_global_var('func_2065')
func_2066_call = mutated_mod.get_global_var('func_2066')
call_5319 = relay.TupleGetItem(func_2065_call(), 1)
call_5320 = relay.TupleGetItem(func_2066_call(), 1)
var_5347 = relay.var("var_5347", dtype = "float32", shape = (12, 6, 6))#candidate|5347|(12, 6, 6)|var|float32
bop_5348 = relay.less(call_5319.astype('bool'), relay.reshape(var_5347.astype('bool'), relay.shape_of(call_5319))) # shape=(12, 6, 6)
bop_5351 = relay.less(call_5320.astype('bool'), relay.reshape(var_5347.astype('bool'), relay.shape_of(call_5320))) # shape=(12, 6, 6)
output = relay.Tuple([bop_5348,])
output2 = relay.Tuple([bop_5351,])
func_5366 = relay.Function([var_5347,], output)
mod['func_5366'] = func_5366
mod = relay.transform.InferType()(mod)
var_5367 = relay.var("var_5367", dtype = "float32", shape = (12, 6, 6))#candidate|5367|(12, 6, 6)|var|float32
output = func_5366(var_5367)
func_5368 = relay.Function([var_5367], output)
mutated_mod['func_5368'] = func_5368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4864_call = mod.get_global_var('func_4864')
func_4866_call = mutated_mod.get_global_var('func_4866')
call_5374 = relay.TupleGetItem(func_4864_call(), 0)
call_5375 = relay.TupleGetItem(func_4866_call(), 0)
output = call_5374
output2 = call_5375
func_5398 = relay.Function([], output)
mod['func_5398'] = func_5398
mod = relay.transform.InferType()(mod)
output = func_5398()
func_5399 = relay.Function([], output)
mutated_mod['func_5399'] = func_5399
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5429 = relay.var("var_5429", dtype = "float64", shape = (6, 6, 12))#candidate|5429|(6, 6, 12)|var|float64
uop_5430 = relay.log10(var_5429.astype('float64')) # shape=(6, 6, 12)
func_3897_call = mod.get_global_var('func_3897')
func_3899_call = mutated_mod.get_global_var('func_3899')
const_5434 = relay.const([4.735449,7.091253,5.695489,1.262901,2.615927,-1.406691,9.497606,7.154246,-2.767127,8.904382,8.088061,-6.979489,-0.845578,-9.322897,-9.583540,-1.279939,-5.366839,7.381264,5.051501,-8.395666,0.180560,-7.354722,-4.723862,-6.828792,-2.159159,-0.884970,-9.066647,-7.072068,-0.711951,-3.717509,-0.948103,-5.208597,-3.300580,8.555634,-6.437404,-0.740142,-7.119359,-9.334146,8.491634,2.460168,7.538227,6.336651,-9.167444,-8.131211,9.888605,1.703629,2.190758,-3.795730,8.910825,-3.976914,3.742088,6.185584,5.250810,-2.333633,-4.418438,-1.827817,-2.954607,6.977138,2.588456,5.936279,-5.447293,0.675335,-1.118614,-6.719728,9.348662,2.630340,5.545648,-1.080822,-3.282570,0.487968,-9.313576,-1.361589,-1.043981,4.568649,-4.961860,-4.125317,9.857471,-0.378287,4.282857,2.871636,6.563154,5.822696,8.130241,-3.919890,1.111921,-6.886971,9.299573,-6.022925,-1.900371,-9.023968,-7.751615,4.271062,-9.686895,7.389951,-0.151703,-3.389840,2.211693,0.060723,4.142020,-5.564512,0.786693,-4.061902,-8.760436,-3.194548,-9.980307,7.423526,8.665333,-6.464416,-0.042072,8.064954,-7.203637,5.769505,-1.475649,-3.179812,-4.249816,-9.355626,5.458645,-8.634132,8.741254,-3.732244,5.127966,-5.640769,-2.838192,-8.232868,-7.593742,-4.488191,7.254300,-7.169267,-7.104556,6.718291,3.038782,-8.251661,-7.841900,-0.901718,-6.608251,8.302393,-4.722088,-3.465484,-7.732047,-5.748103,3.974115,8.334255,-8.418980,-6.516624,-4.724303,7.444681,0.731337,-7.393240,-3.573633,7.641604,5.446205,1.810855,-0.243349,9.670871,-5.206334,0.742263,-6.404374,7.488954,-0.369735,3.001729,9.747072,-7.714160,-4.127189,0.169457,-0.514743,2.708433,2.812925,9.444713,0.128145,4.579383,-5.091875,4.464618,1.576179,1.847952,-9.341986,6.265091,7.179701,-0.111994,-0.941971,7.166883,-7.608151,9.475822,1.943376,9.011384,3.472017,-5.129895,5.082263,-5.644972,-8.949608,-2.804709,-0.872681,0.699667,4.538493,5.119753,9.886980,-7.735017,-9.429065,0.586175,6.112347,-6.487397,9.226960,-2.495254,-0.984511,-4.324563,6.275517,1.628057,-7.318243,4.826206,-9.514245,0.084497,5.458915,6.067710,0.319810,3.084144,1.903660,0.973213,2.294780,3.710809,-7.071695,-6.390412,-8.181213,0.138787,-0.483936,-1.869578,-3.067617,-8.980071,-8.650397,1.341615,7.745006,-0.434754,-6.821576,8.141117,3.675043,0.577512,-8.758255,7.711735,0.779331,4.464999,-5.500722,-4.509235,-7.255581,-8.620686,-2.553263,-8.055494,7.718650,-8.717834,5.266527,5.385220,-7.049552,-7.700165,-7.861152,2.625729,9.049302,-9.465265,-6.958922,-4.744882,4.498842,4.532135,-5.425265,9.225645,-4.815177,4.792737,-1.185737,7.741026,5.551947,7.696582,0.956144,6.465420,-3.939291,-5.907924,-9.404147,7.477390,-0.084614,8.733470,-1.837757,-9.559033,-3.277185,-8.017923,-6.391050,2.658068,-0.564642,9.668904,6.096152,-5.188233,-2.446019,-3.856613,5.232784,4.159167,3.847129,-9.031681,5.982287,-3.147040,-5.934964,-7.254167,-4.509210,-8.619659,0.835018,5.861299,-5.721735,-3.502963,-7.803673,6.376411,-9.062537,1.077652,5.280003,3.002763,-7.901916,-8.767631,9.087737,2.200656,-3.846460,-1.494509,-8.921314,-6.606569,8.059909,4.206600,0.521262,9.620421,7.172109,5.658241,-3.561025,-0.708137,9.626098,0.099854,5.024144,-9.934462,-6.339301,7.694944,-0.341324,2.846001,-6.301534,-0.583547,6.852710,1.801722,-6.615357,5.307347,-4.953496,-1.837781,-9.825602,-0.707686,-6.577239,3.813798,4.652155,8.062290,-5.005504,6.339259,-6.784383,-8.346728,3.035331,-2.087089,3.277888,-0.722838,6.984384,2.632923,-7.473798,-1.775435,-0.568366,8.925722,-7.416503,-6.631782,0.435419,-3.296512,6.630614,5.009830,-9.907811,-6.865470,9.404915,8.722930,6.199742,-7.587200,-0.439549,3.697925,-8.263965,-6.471755,4.186752,0.566959,-3.664884,-7.028722,-7.940502,-0.769744,-3.106550,-4.437212,4.997837,-7.338714,-4.758999,-6.134738,3.735691,-1.960274,-3.433032,8.519705,7.432876,-8.233292,-7.863279,2.765460,-2.983023,8.068951,-8.587883,-2.749192,-8.662973,3.338458,5.316501,6.671548,3.183593,-3.668006,2.524617,8.196399,-8.855443,-9.430792,6.410526,-7.630196,-6.524926,-2.645138,7.550552,-9.726573,7.654280,6.857677,-5.326915,-0.852151,-1.151324,9.188698,-4.375632,-1.462180,9.605121,9.863994,-8.166105,-9.023784,5.774683,9.372660,-6.628735,-4.230868,9.528159,-5.969540,1.375358,2.244125,-7.438283,5.611971,-9.488942,0.843487,-3.663791,-7.034804,-5.871692,1.397260,4.106433,0.952994,5.941607,1.521725,5.506284,-7.728771,-0.937702,-6.065773,-3.924492,5.888616,2.065425,-8.352881,2.335796,-0.905110,-4.734136,-8.863809,-2.096885,7.072285,7.139421,4.177543,-2.634081,4.805753,7.868591,9.253920,7.870137,-4.436278,-4.742741,1.194776,4.824887,8.212930,6.181130,3.451127,1.305679,3.151087,-0.860171,1.599395,-6.048523,3.463304], dtype = "float32")#candidate|5434|(480,)|const|float32
call_5433 = relay.TupleGetItem(func_3897_call(relay.reshape(const_5434.astype('float32'), [5, 96])), 1)
call_5435 = relay.TupleGetItem(func_3899_call(relay.reshape(const_5434.astype('float32'), [5, 96])), 1)
uop_5437 = relay.cosh(uop_5430.astype('float64')) # shape=(6, 6, 12)
bop_5440 = relay.mod(var_5429.astype('float64'), relay.reshape(uop_5430.astype('float64'), relay.shape_of(var_5429))) # shape=(6, 6, 12)
func_3998_call = mod.get_global_var('func_3998')
func_3999_call = mutated_mod.get_global_var('func_3999')
call_5449 = func_3998_call()
call_5450 = func_3998_call()
func_2164_call = mod.get_global_var('func_2164')
func_2165_call = mutated_mod.get_global_var('func_2165')
call_5463 = func_2164_call()
call_5464 = func_2164_call()
bop_5468 = relay.equal(uop_5437.astype('bool'), relay.reshape(uop_5430.astype('bool'), relay.shape_of(uop_5437))) # shape=(6, 6, 12)
output = relay.Tuple([call_5433,const_5434,bop_5440,call_5449,call_5463,bop_5468,])
output2 = relay.Tuple([call_5435,const_5434,bop_5440,call_5450,call_5464,bop_5468,])
func_5471 = relay.Function([var_5429,], output)
mod['func_5471'] = func_5471
mod = relay.transform.InferType()(mod)
var_5472 = relay.var("var_5472", dtype = "float64", shape = (6, 6, 12))#candidate|5472|(6, 6, 12)|var|float64
output = func_5471(var_5472)
func_5473 = relay.Function([var_5472], output)
mutated_mod['func_5473'] = func_5473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1801_call = mod.get_global_var('func_1801')
func_1802_call = mutated_mod.get_global_var('func_1802')
call_5475 = relay.TupleGetItem(func_1801_call(), 2)
call_5476 = relay.TupleGetItem(func_1802_call(), 2)
const_5485 = relay.const([[[2.535335,-7.405041,-4.880385,0.113552,3.745799,-1.643137],[-1.046011,4.246904,7.951292,-0.185924,2.798331,-1.840363],[-5.035096,6.503169,-6.450236,7.870885,-1.508031,-4.694365],[-2.512660,5.237529,-3.571662,6.646577,5.089911,-1.000152],[3.371170,2.578934,0.584206,6.651460,-9.880502,-8.309920],[1.914835,-8.639180,0.283700,-6.639132,-6.429453,4.793841]],[[9.208287,-7.838146,4.150413,-1.249296,6.067450,7.467857],[1.745181,-2.900528,-2.781291,-7.351835,-7.391178,0.868814],[0.554234,9.039511,-4.243400,6.935197,-6.759421,-6.885867],[-9.283925,-3.307561,-4.084217,0.445825,-0.047622,3.275111],[-4.766163,-5.073308,-9.538590,-1.071304,0.699608,-1.732234],[0.185444,-4.782243,1.730146,1.802216,3.623616,1.154128]],[[-9.849108,6.485271,-5.003736,4.107064,6.723406,8.957161],[7.309082,5.812115,8.064738,-2.496928,0.387458,-0.916240],[-1.632676,6.157913,8.580143,7.347909,9.226185,-9.613382],[-4.925310,-2.028422,8.854381,8.657980,1.723447,-5.409996],[-2.794659,0.039353,0.038204,-3.328466,-3.127847,9.465454],[-9.546666,0.299450,4.609091,1.493438,9.025306,6.642296]],[[0.007043,6.768280,-1.164833,-1.643370,4.669400,-6.283923],[7.426952,-3.013609,-0.027522,-1.746603,-3.221687,-2.704284],[1.601848,7.105208,1.629449,-5.651691,-8.706194,-6.804735],[7.786362,3.494613,-5.956421,1.645601,8.635450,6.736715],[5.820293,-5.498409,8.158804,4.419694,9.937856,4.345498],[-6.232083,8.183744,-6.044587,7.556632,-8.982673,-3.611359]],[[-8.299393,7.920886,8.255244,-4.505713,-0.472196,-6.112779],[3.742417,-7.773981,9.193447,-9.386931,6.321836,-0.398699],[7.982628,6.982238,-6.521333,-3.077130,9.707835,-5.235754],[2.167318,4.967375,-8.648659,3.735966,-4.826217,-1.748735],[-1.599924,4.296711,-2.740876,9.825293,3.158056,-0.720321],[-7.409310,-4.978211,-0.124112,-0.761414,3.291428,3.170227]],[[4.353178,-2.037314,-7.839707,3.490078,0.223097,7.946411],[-8.408356,7.013459,4.950236,-4.279732,-5.939649,-7.409621],[2.582649,-6.243037,-0.860081,-9.537747,1.194011,0.836562],[2.421457,-0.655287,0.712216,9.835862,-3.678896,1.655951],[-7.091893,0.295277,9.710702,3.066141,-3.243656,4.825662],[4.385082,-2.717066,-9.878136,-8.175885,2.170191,-5.422661]],[[-3.993606,-7.609252,-5.378048,3.809821,8.096901,-8.937299],[-4.243184,-4.874489,6.816386,2.049928,1.623176,4.315147],[-8.744186,-8.881390,-5.741842,-3.019269,-0.952521,7.962597],[5.701314,8.679243,3.357145,0.880079,3.927349,-6.352343],[1.557203,1.974657,-4.915806,1.068927,-6.864198,-7.436749],[-5.382824,-0.776480,8.775956,-7.711440,-6.388710,-9.980948]],[[4.082854,0.364222,8.421930,0.099031,7.211924,2.699882],[-7.576021,-1.080358,-1.699576,3.121311,-5.738012,4.872681],[-5.125707,-9.333104,0.585105,-3.637782,-7.147082,4.557231],[-0.640644,-6.900591,8.849363,1.519283,-4.691822,7.936149],[-9.661657,-9.936560,-4.300493,-1.083690,0.732208,6.712130],[4.450053,5.370008,2.349805,3.162163,9.237381,9.140789]],[[-2.713344,-5.608483,0.161146,4.881045,2.284864,-5.935255],[-0.632292,-5.520208,9.260753,-9.303124,4.224820,-3.717691],[0.506159,-1.834492,0.766463,3.114767,-0.418973,3.041302],[7.714425,7.597725,-9.220924,-8.946043,9.411723,-0.642822],[-4.859096,4.904797,-2.438068,-5.463387,-1.797841,-2.214167],[3.133618,1.978722,-8.018532,9.441607,7.006062,-5.035742]],[[-3.813491,-3.244810,6.736250,-9.215231,-7.237219,8.750933],[2.106163,-4.014440,3.832743,5.358880,-7.928192,-9.385722],[0.246607,6.187156,1.053906,-3.841681,-5.408706,0.487234],[4.957468,-7.789061,2.353840,-9.483172,0.590028,-9.969286],[-1.093167,1.920193,-2.566994,1.273445,5.486271,1.208201],[-3.743864,-4.970581,-8.162783,-4.643593,5.063941,9.694394]],[[-2.715914,6.518978,-9.598447,-4.172051,-9.160926,-4.351644],[-3.624431,-0.001311,-9.740743,-0.252146,-6.999666,4.034787],[-4.381582,-8.528326,-2.030216,-7.791776,-6.649705,0.949266],[-4.580151,6.654181,1.243072,3.019616,5.335267,-0.136823],[9.929699,-1.055274,4.403655,1.760319,0.065412,-2.573778],[7.083254,-2.762170,-2.568913,2.561776,-3.243133,1.025544]],[[-3.392387,6.714117,3.932864,0.146690,-8.579982,-9.777505],[6.113313,9.970821,0.613612,4.190003,-6.372470,-9.432610],[2.680655,8.290469,-4.721836,4.864458,-3.125765,-2.365030],[-1.821790,-7.223317,4.296278,9.280235,-3.524291,4.838139],[-8.773777,9.852326,0.014619,0.235218,5.201670,-9.581964],[-0.247672,-4.781651,-4.446002,-8.111406,-2.410116,2.875937]]], dtype = "float32")#candidate|5485|(12, 6, 6)|const|float32
bop_5486 = relay.greater(call_5475.astype('bool'), relay.reshape(const_5485.astype('bool'), relay.shape_of(call_5475))) # shape=(12, 6, 6)
bop_5489 = relay.greater(call_5476.astype('bool'), relay.reshape(const_5485.astype('bool'), relay.shape_of(call_5476))) # shape=(12, 6, 6)
output = bop_5486
output2 = bop_5489
func_5494 = relay.Function([], output)
mod['func_5494'] = func_5494
mod = relay.transform.InferType()(mod)
mutated_mod['func_5494'] = func_5494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5494_call = mutated_mod.get_global_var('func_5494')
call_5495 = func_5494_call()
output = call_5495
func_5496 = relay.Function([], output)
mutated_mod['func_5496'] = func_5496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2733_call = mod.get_global_var('func_2733')
func_2735_call = mutated_mod.get_global_var('func_2735')
call_5509 = relay.TupleGetItem(func_2733_call(), 4)
call_5510 = relay.TupleGetItem(func_2735_call(), 4)
var_5515 = relay.var("var_5515", dtype = "float32", shape = (12, 6, 6))#candidate|5515|(12, 6, 6)|var|float32
bop_5516 = relay.less_equal(call_5509.astype('bool'), relay.reshape(var_5515.astype('bool'), relay.shape_of(call_5509))) # shape=(12, 6, 6)
bop_5519 = relay.less_equal(call_5510.astype('bool'), relay.reshape(var_5515.astype('bool'), relay.shape_of(call_5510))) # shape=(12, 6, 6)
func_2777_call = mod.get_global_var('func_2777')
func_2780_call = mutated_mod.get_global_var('func_2780')
var_5529 = relay.var("var_5529", dtype = "uint32", shape = (945,))#candidate|5529|(945,)|var|uint32
call_5528 = func_2777_call(relay.reshape(var_5529.astype('uint32'), [7, 9, 15]))
call_5530 = func_2777_call(relay.reshape(var_5529.astype('uint32'), [7, 9, 15]))
func_4407_call = mod.get_global_var('func_4407')
func_4409_call = mutated_mod.get_global_var('func_4409')
const_5534 = relay.const([-3.015511,0.775591,6.034479,-1.047169,6.986632,-4.884608,-0.143057,1.338113,-5.943934,3.142802,-7.086073,1.390034,-6.322901,-2.861938,-4.857274,1.338902,-7.239681,4.507412,1.234225,-1.415584,9.266557,8.008870,-1.956975,2.858835,5.425179,-3.522903,-8.667626,-9.803415,-7.878680,-5.338374,-4.035544,7.575194,3.888869,9.085445,5.705149,1.737359,-8.354659,-9.863192,8.106534,6.172241,-0.990598,-7.392502,8.107147,-7.966927,-3.696462,-3.614814,-5.489858,1.719885,-9.203406,5.104645,-3.677816,-5.219882,4.770055,5.630868,-2.595427,7.484163,-2.474428,-0.729267,-9.105578,6.681359,3.073280,-3.185875,-5.697745,1.294388,-3.370156,-8.586415,2.954501,2.988286,4.966480,-6.909720,3.015479,6.776451,5.636768,0.976108,-2.497441], dtype = "float32")#candidate|5534|(75,)|const|float32
call_5533 = func_4407_call(relay.reshape(const_5534.astype('float32'), [1, 5, 15]))
call_5535 = func_4407_call(relay.reshape(const_5534.astype('float32'), [1, 5, 15]))
func_4864_call = mod.get_global_var('func_4864')
func_4866_call = mutated_mod.get_global_var('func_4866')
call_5538 = relay.TupleGetItem(func_4864_call(), 0)
call_5539 = relay.TupleGetItem(func_4866_call(), 0)
uop_5546 = relay.log10(call_5538.astype('float64')) # shape=(12, 6, 6)
uop_5548 = relay.log10(call_5539.astype('float64')) # shape=(12, 6, 6)
uop_5551 = relay.sin(uop_5546.astype('float32')) # shape=(12, 6, 6)
uop_5553 = relay.sin(uop_5548.astype('float32')) # shape=(12, 6, 6)
func_2065_call = mod.get_global_var('func_2065')
func_2066_call = mutated_mod.get_global_var('func_2066')
call_5555 = relay.TupleGetItem(func_2065_call(), 1)
call_5556 = relay.TupleGetItem(func_2066_call(), 1)
output = relay.Tuple([bop_5516,call_5528,var_5529,call_5533,const_5534,uop_5551,call_5555,])
output2 = relay.Tuple([bop_5519,call_5530,var_5529,call_5535,const_5534,uop_5553,call_5556,])
func_5560 = relay.Function([var_5515,var_5529,], output)
mod['func_5560'] = func_5560
mod = relay.transform.InferType()(mod)
mutated_mod['func_5560'] = func_5560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5560_call = mutated_mod.get_global_var('func_5560')
var_5562 = relay.var("var_5562", dtype = "float32", shape = (12, 6, 6))#candidate|5562|(12, 6, 6)|var|float32
var_5563 = relay.var("var_5563", dtype = "uint32", shape = (945,))#candidate|5563|(945,)|var|uint32
call_5561 = func_5560_call(var_5562,var_5563,)
output = call_5561
func_5564 = relay.Function([var_5562,var_5563,], output)
mutated_mod['func_5564'] = func_5564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mod.get_global_var('func_1688')
func_1690_call = mutated_mod.get_global_var('func_1690')
call_5571 = func_1688_call()
call_5572 = func_1688_call()
func_2777_call = mod.get_global_var('func_2777')
func_2780_call = mutated_mod.get_global_var('func_2780')
const_5580 = relay.const([[-3,6,-5,-3,2,3,-3,5,7,5,-10,8,1,-4,-9,-5,-5,-4,-5,-5,2,-10,-2,1,4,-3,-7,6,-2,1,1,6,8,8,-8,-10,-9,-7,5,2,-8,-4,4,2,-2,-7,-10,-1,-4,-2,2,-3,4,3,2,7,-10,4,2,-10,-9,-9,2,9,-1,-8,-5,-3,5,-6,-1,4,7,5,-3,4,-6,3,5,3,5,6,-4,-8,-4,5,-1,-7,6,8,9,-1,6,-4,-6,-4,10,-2,8,-5,-8,8,-7,6,6,-3,7,-1,-6,2,2,4,8,8,7,8,2,-5,-8,-4,-6,-3,-9,-3,-1,-8,3,-5,-1,6,-6,3,10,-7,-10,5,6,-6,4,1,-6,-8,-4,-9,8,2,10,10,-5,8,-7,-1,1,-9,9,-10,-10,4,-1,-10,-8,3,-10,-6,9,10,7,1,7,4,-2,10,3,10,9,-5,10,5,-10,-5,-4,-6,-4,-2,-1,-8,-3,6,4,-1,4,10,-3,-6,-5,-3,5,4,8,-2,-4,-1,1,-4,1,-8,3,-1,-4,-1,-9,1,-4,3,3,-1,8,-4,9,-5,-7,-5,2,9,4,-6,6,7,2,-4,-9,-10,6,7,-5,-6,-5,3,9,-5,5,8,-9,-1,-6,4,9,2,1,3,-2,-8,-1,6,6,5,-5,3,7,-2,1,8,-9,7,10,6,8,10,-5,-1,10,-2,-10,-6,9,10,4,-9,-8,5,-8,-1,4,-6,-10,10,5,-4,7,2,9,-5,1,8,-2,-9,-3,-7,-4,6,1,3,-7,1,-6,-9,6,-8,10,8,8,-10,-10,5,-1,-5,8,10,-4,1,-5,-6,4,10,9,-4,5,-7,-5,6,-7,8,-10,1,1,-5,2,-7,-7,-10,3,5,-2,-3,-7,10,-2,9,9,6,-2,6,2,10,-10,-6,-4,3,5,2,-4,6,-3,8,5,-1,2,-10,-1,-4,1,-6,-2,3,-6,9,-7,6,2,-1,-5,-5,-10,-3,-7,3,-8,-5,9,-10,-2,5,-6,7,-4,-4,-1,-7,-3,-3,7,8,-9,8,10,-5,6,10,-2,9,-7,6,-3,-10,-3,-9,-3,10,10,9,5,-4,3,-3,3,10,7,10,1,8,-7,8,4,1,3,5,6,-9,5,6,5,8,4,-2,9,10,-7,-5,4,6,-6,7,2,2,9,-3,-6,6,10,6,8,-5,-4,-5,-6,8,-3,5,5,1,5,-8,-9,-2,4,10,4,6,-6,6,3,-6,-3,2,-8,3,8,-4,-8,6,4,4,1,-6,3,1,-10,-2,7,10,-6,-9,-4,1,-1,4,5,3,-9,5,5,-10,2,-5,-8,4,-7,10,6,-3,-10,-2,6,1,8,-9,-1,-5,3,-1,6,4,-8,7,8,1,-9,-5,10,-2,1,9,-10,-4,-6,-3,4,-8,-2,8,-6,-9,4,2,9,2,5,3,-10,6,4,10,7,-10,-4,-2,-9,-7,-5,7,-3,4,-4,3,4,10,1,7,10,8,8,-6,10,-10,-4,-7,-7,5,9,-5,-7,2,5,-7,-9,-10,-4,-5,-2,9,3,-5,8,4,-9,-10,-2,-6,4,-3,-8,-3,1,-9,5,1,4,10,7,1,1,-4,-6,1,6,4,-6,6,-4,-10,-3,-7,-8,-10,9,3,-3,-4,-1,-10,8,9,-2,1,10,-5,4,-9,-6,-7,10,-8,1,3,-8,9,10,2,-4,6,-6,-8,-2,1,6,5,-2,-1,5,-6,-9,-1,-2,-9,-5,2,-7,-2,-9,-6,-4,3,4,-8,-7,1,9,5,4,10,10,-3,-4,5,-9,-10,-4,9,-6,6,-5,-1,1,-8,9,-6,-1,7,5,1,-5,-9,6,6,8,7,-10,-6,6,4,3,4,9,1,3,10,-3,-6,6,2,3,5,-10,2,6,-1,8,-3,9,2,6,-10,8,9,-6,-8,-10,2,-8,6,-2,5,2,-8,-1,-3,-2,-5,10,8,5,-5,-1,-7,-3,2,-9,5,4,4,-8,4,1,4,-5,7,8,-7,1,7,6,-9,-8,-8,-2,10,9,-9,3,-4,-6,8,-7,3,8,1,-1,9,-9,-4,7,-10,-5,-1,-2,7,-5,2,-10,9,-6,2,-5,9,-5,-2,6,-1,10,-1,6,-2,5,-5,10,-4,6,-8,-6,4,1,-4,-7,9,-8,2,10,-6,-2,1,5,-10,3,2,4,-9,-2,-3,-1,-8,5,-4,6,2,-9,9,10,2,7,3,2,8,6,-2,-4,-7,-10,5,-8,-3,-10,10,-4,-5,8,4,-9,-3,6,5,6,10,-2,-2,-10,9,9,-3,-4,4,6,4,-10,2,2,7,-9,4,10,4,-2,3,4,2,4,-2,4,6,2,-4,-7,-2,6,10,1,9,8,-3,-5,4,5,-10,3,4,3,-10,9,-7,-6,-2,-2,10,-2,-4,-10,-8,6,5,-3,-5,-9,9,6,2,4]], dtype = "uint32")#candidate|5580|(1, 945)|const|uint32
call_5579 = func_2777_call(relay.reshape(const_5580.astype('uint32'), [7, 9, 15]))
call_5581 = func_2777_call(relay.reshape(const_5580.astype('uint32'), [7, 9, 15]))
output = relay.Tuple([call_5571,call_5579,const_5580,])
output2 = relay.Tuple([call_5572,call_5581,const_5580,])
func_5599 = relay.Function([], output)
mod['func_5599'] = func_5599
mod = relay.transform.InferType()(mod)
mutated_mod['func_5599'] = func_5599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5599_call = mutated_mod.get_global_var('func_5599')
call_5600 = func_5599_call()
output = call_5600
func_5601 = relay.Function([], output)
mutated_mod['func_5601'] = func_5601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_5667 = relay.TupleGetItem(func_1386_call(), 0)
call_5668 = relay.TupleGetItem(func_1388_call(), 0)
func_826_call = mod.get_global_var('func_826')
func_830_call = mutated_mod.get_global_var('func_830')
const_5681 = relay.const([3.342307,2.353803,-3.021521,-8.762618,-7.367001,-0.860999,-1.994257,5.647969,3.557439,-7.269344,4.729435,-2.602275,-0.548568,-7.119247,-6.410180,-4.196064,5.966513,0.391336,-9.762547,2.940660,-2.200084,-3.973103,0.765091,-8.816244,6.674909,-8.776808,4.720393,4.480670,4.371860,4.255216,7.525548,-7.770670,8.427214,-3.266429,3.764495,0.380312,7.460857,-6.343228,6.549934,5.721088,8.085861,0.505458,8.058873,-3.670382,-3.585585,-2.911584,2.599986,5.952169,-5.294630,1.945700,4.312387,9.695660,-7.097374,-2.161932,-2.674843,-7.828021,3.342389,-6.239349,-1.748289,-4.127777,9.171696,-3.883451,7.092187,3.821861,2.498154,6.261407,5.189290,4.762242,-2.816896,-7.149551,-2.597520,-3.906046,-8.693669,-4.216699,4.293358,-6.158976,2.066097,9.505795,-3.325046,-0.764826,9.244766,-4.534985,-9.168398,-4.367019,0.293625,3.100101,0.256047,-4.711586,2.914918,-3.911575,2.282122,0.554320,1.008154,5.975945,6.023262,7.562502], dtype = "float32")#candidate|5681|(96,)|const|float32
call_5680 = relay.TupleGetItem(func_826_call(relay.reshape(const_5681.astype('float32'), [4, 12, 2]), relay.reshape(const_5681.astype('float32'), [4, 12, 2]), ), 0)
call_5682 = relay.TupleGetItem(func_830_call(relay.reshape(const_5681.astype('float32'), [4, 12, 2]), relay.reshape(const_5681.astype('float32'), [4, 12, 2]), ), 0)
func_4821_call = mod.get_global_var('func_4821')
func_4822_call = mutated_mod.get_global_var('func_4822')
call_5687 = func_4821_call()
call_5688 = func_4821_call()
func_3326_call = mod.get_global_var('func_3326')
func_3327_call = mutated_mod.get_global_var('func_3327')
call_5701 = relay.TupleGetItem(func_3326_call(), 0)
call_5702 = relay.TupleGetItem(func_3327_call(), 0)
var_5704 = relay.var("var_5704", dtype = "float64", shape = (4, 12, 2))#candidate|5704|(4, 12, 2)|var|float64
bop_5705 = relay.equal(call_5680.astype('bool'), relay.reshape(var_5704.astype('bool'), relay.shape_of(call_5680))) # shape=(4, 12, 2)
bop_5708 = relay.equal(call_5682.astype('bool'), relay.reshape(var_5704.astype('bool'), relay.shape_of(call_5682))) # shape=(4, 12, 2)
output = relay.Tuple([call_5667,const_5681,call_5687,call_5701,bop_5705,])
output2 = relay.Tuple([call_5668,const_5681,call_5688,call_5702,bop_5708,])
func_5709 = relay.Function([var_5704,], output)
mod['func_5709'] = func_5709
mod = relay.transform.InferType()(mod)
mutated_mod['func_5709'] = func_5709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5710 = relay.var("var_5710", dtype = "float64", shape = (4, 12, 2))#candidate|5710|(4, 12, 2)|var|float64
func_5709_call = mutated_mod.get_global_var('func_5709')
call_5711 = func_5709_call(var_5710)
output = call_5711
func_5712 = relay.Function([var_5710], output)
mutated_mod['func_5712'] = func_5712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1647_call = mod.get_global_var('func_1647')
func_1649_call = mutated_mod.get_global_var('func_1649')
call_5749 = relay.TupleGetItem(func_1647_call(), 0)
call_5750 = relay.TupleGetItem(func_1649_call(), 0)
func_2777_call = mod.get_global_var('func_2777')
func_2780_call = mutated_mod.get_global_var('func_2780')
var_5756 = relay.var("var_5756", dtype = "uint32", shape = (5, 189))#candidate|5756|(5, 189)|var|uint32
call_5755 = func_2777_call(relay.reshape(var_5756.astype('uint32'), [7, 9, 15]))
call_5757 = func_2777_call(relay.reshape(var_5756.astype('uint32'), [7, 9, 15]))
func_3243_call = mod.get_global_var('func_3243')
func_3244_call = mutated_mod.get_global_var('func_3244')
call_5758 = func_3243_call()
call_5759 = func_3243_call()
output = relay.Tuple([call_5749,call_5755,var_5756,call_5758,])
output2 = relay.Tuple([call_5750,call_5757,var_5756,call_5759,])
func_5765 = relay.Function([var_5756,], output)
mod['func_5765'] = func_5765
mod = relay.transform.InferType()(mod)
var_5766 = relay.var("var_5766", dtype = "uint32", shape = (5, 189))#candidate|5766|(5, 189)|var|uint32
output = func_5765(var_5766)
func_5767 = relay.Function([var_5766], output)
mutated_mod['func_5767'] = func_5767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mod.get_global_var('func_2480')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_5775 = relay.TupleGetItem(func_2480_call(), 3)
call_5776 = relay.TupleGetItem(func_2482_call(), 3)
var_5777 = relay.var("var_5777", dtype = "float32", shape = (12, 6, 6))#candidate|5777|(12, 6, 6)|var|float32
bop_5778 = relay.equal(call_5775.astype('bool'), relay.reshape(var_5777.astype('bool'), relay.shape_of(call_5775))) # shape=(12, 6, 6)
bop_5781 = relay.equal(call_5776.astype('bool'), relay.reshape(var_5777.astype('bool'), relay.shape_of(call_5776))) # shape=(12, 6, 6)
bop_5799 = relay.greater_equal(var_5777.astype('bool'), relay.reshape(call_5775.astype('bool'), relay.shape_of(var_5777))) # shape=(12, 6, 6)
bop_5802 = relay.greater_equal(var_5777.astype('bool'), relay.reshape(call_5776.astype('bool'), relay.shape_of(var_5777))) # shape=(12, 6, 6)
output = relay.Tuple([bop_5778,bop_5799,])
output2 = relay.Tuple([bop_5781,bop_5802,])
func_5806 = relay.Function([var_5777,], output)
mod['func_5806'] = func_5806
mod = relay.transform.InferType()(mod)
mutated_mod['func_5806'] = func_5806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5807 = relay.var("var_5807", dtype = "float32", shape = (12, 6, 6))#candidate|5807|(12, 6, 6)|var|float32
func_5806_call = mutated_mod.get_global_var('func_5806')
call_5808 = func_5806_call(var_5807)
output = call_5808
func_5809 = relay.Function([var_5807], output)
mutated_mod['func_5809'] = func_5809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5819 = relay.var("var_5819", dtype = "int8", shape = ())#candidate|5819|()|var|int8
const_5820 = relay.const([[[-10,-1,-5,-8],[-3,-6,6,-1],[7,-9,5,3],[-7,-1,-7,-6],[-5,9,9,-4],[10,-7,9,1],[1,8,-1,4],[-3,-1,-9,9],[-6,-3,-6,9],[8,-4,-5,2],[5,6,1,4],[-6,-4,5,-8],[-2,8,-1,-5],[5,7,-4,-8],[8,-9,-5,-3],[-9,5,-2,3]],[[-5,3,-7,4],[-8,2,9,-5],[5,6,-6,-10],[-7,6,-5,3],[-3,-5,-5,-2],[1,8,-7,8],[8,3,-4,8],[-5,1,7,-1],[10,-1,-6,-1],[1,10,-4,-10],[-2,-8,-6,-8],[-3,1,2,-10],[-8,9,-6,-5],[-2,4,3,10],[-7,-2,5,3],[10,7,6,6]],[[8,9,8,8],[-9,5,6,-7],[-4,-7,-10,4],[-4,2,8,-3],[-3,-10,-8,-10],[3,-9,3,-6],[-5,-5,-5,5],[-9,9,-2,4],[7,-6,-4,-4],[-2,-8,8,-1],[6,10,-4,-1],[1,-2,4,-10],[-2,8,5,-5],[-4,3,4,7],[-1,-1,3,9],[10,8,-1,-5]],[[-7,1,4,10],[-8,1,6,-1],[-6,-1,4,4],[-3,-8,-3,9],[9,-3,-7,-2],[-3,-8,1,-7],[2,8,9,-10],[6,-9,4,-10],[-2,-5,-3,6],[9,8,-3,-9],[-2,1,-10,-4],[-2,7,4,8],[-10,5,-1,3],[2,2,-4,-10],[-9,-8,5,-7],[-8,2,4,6]],[[-2,-9,-1,-3],[-2,10,-5,4],[3,-4,7,-5],[10,7,-5,9],[-3,2,-1,-8],[-1,2,-1,1],[2,2,1,-4],[-3,6,-1,9],[3,9,8,10],[-8,-7,-1,-2],[-8,-10,-2,-9],[-5,-6,1,-4],[7,-10,-3,-6],[3,7,-2,6],[-5,-8,-3,5],[3,6,-9,8]],[[-4,-2,-1,7],[10,9,-4,3],[-1,8,9,4],[5,7,2,9],[-8,-4,-9,-2],[-6,-4,-5,-2],[7,2,3,1],[-8,3,6,8],[3,2,5,-3],[-6,-3,-4,-1],[5,9,1,-6],[-8,1,-3,9],[-2,-9,8,8],[-9,-9,4,-3],[3,-6,2,3],[3,8,-4,-1]],[[10,1,-2,-6],[-10,3,2,4],[8,10,-4,-3],[-9,-2,-8,7],[-4,9,-9,-8],[-9,4,9,-9],[-8,8,-3,10],[2,3,6,9],[10,8,3,10],[-7,3,4,2],[10,5,-10,3],[8,1,8,6],[8,-9,7,10],[6,9,-5,2],[-2,-7,2,6],[8,4,9,-5]],[[-3,7,4,6],[-3,9,-8,3],[8,4,-2,1],[-10,-7,6,-6],[-4,9,-4,-9],[-1,-7,9,-3],[-2,10,9,-5],[6,-8,1,1],[8,-7,-4,1],[5,8,-10,3],[-8,-7,2,-6],[3,3,7,-3],[-4,9,-7,7],[10,5,6,3],[9,-1,-3,3],[10,-2,-2,3]],[[-5,5,-5,-3],[-8,7,6,-8],[-2,-10,-7,-3],[-9,-3,1,-6],[-6,-10,5,-6],[-4,7,-2,7],[-7,9,9,8],[-6,-10,4,-5],[9,3,-9,-7],[1,2,-2,-9],[7,-10,9,-6],[-8,4,-4,-4],[4,-9,8,5],[1,-5,8,1],[-2,-2,10,8],[6,-1,2,-5]],[[5,-9,-9,4],[-2,4,-3,-3],[-7,-7,-5,-4],[6,-1,-3,5],[10,2,-6,1],[7,8,-2,6],[10,-4,-8,-5],[-8,-3,3,-10],[1,6,10,7],[-5,-9,10,6],[-1,-2,-1,-3],[3,1,-5,-3],[-4,-4,-10,-4],[-8,2,10,-7],[-10,-10,-7,-1],[3,8,-2,-4]],[[2,1,-1,-9],[-9,6,-10,-10],[1,1,-7,8],[-4,-7,9,-3],[9,5,10,-8],[4,6,-4,-4],[10,-3,-8,4],[7,-8,-3,9],[6,2,7,-3],[-4,5,-7,5],[4,4,-10,4],[2,-6,-3,-4],[1,5,6,1],[8,7,4,-5],[-9,10,9,-7],[-6,-3,9,9]],[[5,-8,-3,10],[4,7,9,-8],[-2,10,-2,2],[1,10,5,10],[5,-1,-8,10],[-10,1,10,10],[8,3,6,-10],[1,8,1,-5],[9,-7,-9,-8],[5,-8,1,-6],[7,-8,5,3],[2,-1,1,-9],[4,-7,2,-3],[7,1,1,-4],[7,3,-4,7],[8,-8,5,-9]],[[-3,3,-2,-4],[10,-6,3,1],[-5,-3,1,-6],[-9,9,-2,-3],[7,-4,-6,9],[-4,-9,6,-10],[-4,-10,4,-3],[-10,6,-3,9],[-7,-10,-1,-1],[3,-5,-7,9],[-7,-6,7,-3],[4,-1,8,-8],[2,10,-6,-10],[10,-7,10,10],[-7,10,6,2],[-3,-10,2,-10]],[[5,-8,2,9],[5,10,-5,3],[-7,-7,6,-4],[2,-4,1,9],[-3,-8,-6,6],[4,-7,6,-3],[4,-5,-9,1],[-4,-8,-8,-2],[5,-5,-6,4],[-9,-9,2,-8],[-1,-7,4,6],[3,-5,-10,-2],[-5,-9,10,-1],[4,-3,-3,1],[6,6,7,9],[3,-3,-1,1]]], dtype = "int8")#candidate|5820|(14, 16, 4)|const|int8
bop_5821 = relay.left_shift(var_5819.astype('int8'), const_5820.astype('int8')) # shape=(14, 16, 4)
func_4752_call = mod.get_global_var('func_4752')
func_4753_call = mutated_mod.get_global_var('func_4753')
call_5835 = func_4752_call()
call_5836 = func_4752_call()
output = relay.Tuple([bop_5821,call_5835,])
output2 = relay.Tuple([bop_5821,call_5836,])
func_5842 = relay.Function([var_5819,], output)
mod['func_5842'] = func_5842
mod = relay.transform.InferType()(mod)
var_5843 = relay.var("var_5843", dtype = "int8", shape = ())#candidate|5843|()|var|int8
output = func_5842(var_5843)
func_5844 = relay.Function([var_5843], output)
mutated_mod['func_5844'] = func_5844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4821_call = mod.get_global_var('func_4821')
func_4822_call = mutated_mod.get_global_var('func_4822')
call_5870 = func_4821_call()
call_5871 = func_4821_call()
func_2178_call = mod.get_global_var('func_2178')
func_2180_call = mutated_mod.get_global_var('func_2180')
call_5872 = relay.TupleGetItem(func_2178_call(), 0)
call_5873 = relay.TupleGetItem(func_2180_call(), 0)
func_2614_call = mod.get_global_var('func_2614')
func_2616_call = mutated_mod.get_global_var('func_2616')
var_5875 = relay.var("var_5875", dtype = "float32", shape = (27,))#candidate|5875|(27,)|var|float32
call_5874 = relay.TupleGetItem(func_2614_call(relay.reshape(var_5875.astype('float32'), [27,])), 1)
call_5876 = relay.TupleGetItem(func_2616_call(relay.reshape(var_5875.astype('float32'), [27,])), 1)
output = relay.Tuple([call_5870,call_5872,call_5874,var_5875,])
output2 = relay.Tuple([call_5871,call_5873,call_5876,var_5875,])
func_5878 = relay.Function([var_5875,], output)
mod['func_5878'] = func_5878
mod = relay.transform.InferType()(mod)
mutated_mod['func_5878'] = func_5878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5879 = relay.var("var_5879", dtype = "float32", shape = (27,))#candidate|5879|(27,)|var|float32
func_5878_call = mutated_mod.get_global_var('func_5878')
call_5880 = func_5878_call(var_5879)
output = call_5880
func_5881 = relay.Function([var_5879], output)
mutated_mod['func_5881'] = func_5881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mod.get_global_var('func_1386')
func_1388_call = mutated_mod.get_global_var('func_1388')
call_5885 = relay.TupleGetItem(func_1386_call(), 0)
call_5886 = relay.TupleGetItem(func_1388_call(), 0)
func_5878_call = mod.get_global_var('func_5878')
func_5881_call = mutated_mod.get_global_var('func_5881')
var_5892 = relay.var("var_5892", dtype = "float32", shape = (27,))#candidate|5892|(27,)|var|float32
call_5891 = relay.TupleGetItem(func_5878_call(relay.reshape(var_5892.astype('float32'), [27,])), 0)
call_5893 = relay.TupleGetItem(func_5881_call(relay.reshape(var_5892.astype('float32'), [27,])), 0)
func_4697_call = mod.get_global_var('func_4697')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_5894 = func_4697_call()
call_5895 = func_4697_call()
const_5911 = relay.const([-6.330846,-9.006081,0.004500,-1.459382,5.460940,-9.167059,-1.028305,1.869140,-8.592947,-5.051038,-1.672095,-7.030223,-1.588157,0.277318,1.265129,-9.345741,2.865540,-8.142114,-0.820019,-6.968176,-2.587003,-6.689765,-5.671895,1.241054,-0.961896,5.225614,0.351614], dtype = "float32")#candidate|5911|(27,)|const|float32
bop_5912 = relay.equal(var_5892.astype('bool'), relay.reshape(const_5911.astype('bool'), relay.shape_of(var_5892))) # shape=(27,)
func_2733_call = mod.get_global_var('func_2733')
func_2735_call = mutated_mod.get_global_var('func_2735')
call_5922 = relay.TupleGetItem(func_2733_call(), 1)
call_5923 = relay.TupleGetItem(func_2735_call(), 1)
uop_5924 = relay.tan(bop_5912.astype('float64')) # shape=(27,)
bop_5926 = relay.logical_or(uop_5924.astype('bool'), relay.reshape(bop_5912.astype('bool'), relay.shape_of(uop_5924))) # shape=(27,)
bop_5932 = relay.bitwise_and(call_5885.astype('int8'), relay.reshape(call_5922.astype('int8'), relay.shape_of(call_5885))) # shape=(12, 6, 6)
bop_5935 = relay.bitwise_and(call_5886.astype('int8'), relay.reshape(call_5923.astype('int8'), relay.shape_of(call_5886))) # shape=(12, 6, 6)
output = relay.Tuple([call_5891,call_5894,bop_5926,bop_5932,])
output2 = relay.Tuple([call_5893,call_5895,bop_5926,bop_5935,])
func_5938 = relay.Function([var_5892,], output)
mod['func_5938'] = func_5938
mod = relay.transform.InferType()(mod)
mutated_mod['func_5938'] = func_5938
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5939 = relay.var("var_5939", dtype = "float32", shape = (27,))#candidate|5939|(27,)|var|float32
func_5938_call = mutated_mod.get_global_var('func_5938')
call_5940 = func_5938_call(var_5939)
output = call_5940
func_5941 = relay.Function([var_5939], output)
mutated_mod['func_5941'] = func_5941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5599_call = mod.get_global_var('func_5599')
func_5601_call = mutated_mod.get_global_var('func_5601')
call_5959 = relay.TupleGetItem(func_5599_call(), 2)
call_5960 = relay.TupleGetItem(func_5601_call(), 2)
output = call_5959
output2 = call_5960
func_5966 = relay.Function([], output)
mod['func_5966'] = func_5966
mod = relay.transform.InferType()(mod)
output = func_5966()
func_5967 = relay.Function([], output)
mutated_mod['func_5967'] = func_5967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mod.get_global_var('func_1688')
func_1690_call = mutated_mod.get_global_var('func_1690')
call_5990 = func_1688_call()
call_5991 = func_1688_call()
output = call_5990
output2 = call_5991
func_5994 = relay.Function([], output)
mod['func_5994'] = func_5994
mod = relay.transform.InferType()(mod)
mutated_mod['func_5994'] = func_5994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5994_call = mutated_mod.get_global_var('func_5994')
call_5995 = func_5994_call()
output = call_5995
func_5996 = relay.Function([], output)
mutated_mod['func_5996'] = func_5996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1801_call = mod.get_global_var('func_1801')
func_1802_call = mutated_mod.get_global_var('func_1802')
call_6040 = relay.TupleGetItem(func_1801_call(), 0)
call_6041 = relay.TupleGetItem(func_1802_call(), 0)
func_2991_call = mod.get_global_var('func_2991')
func_2996_call = mutated_mod.get_global_var('func_2996')
const_6043 = relay.const([-4.960366,-2.264946,5.225541,6.337656,-1.465166,-2.451877,4.819193,8.920620,-8.193339,-8.256865,7.762609,-0.096665,-4.967420,8.111938,0.755471,7.877514,1.987382,7.906989,-4.499266,-5.338469,-7.026240,7.707961,1.476008,8.917173,5.490496,-0.965289,8.913628,8.724297,-4.265083,-8.904396,8.952405,7.126150,8.612440,-9.526427,3.896631,-3.064641,9.395666,8.660460,-6.278417,-6.555647,-3.226418,-1.457406,1.415255,2.668158,-9.437561,4.293716,-2.099957,-9.528905,-0.776143,3.149581,4.355688,5.890771,7.099358,4.142223,7.900713,1.000885,7.860834,8.018236,-3.230636,-1.749927,-3.942579,-1.915382,-8.421254,-4.807785,3.489456,-3.254683,0.779590,6.479018,-4.045901,-7.127944,4.543836,9.201177,9.047554,7.284254,8.865643,5.265788,-7.002846,-3.967809,-4.871055,7.291642,-9.849488,4.259798,0.666432,9.801029,7.643244,8.181607,0.441402,7.243594,6.708043,-8.169120,-9.997498,5.514801,-6.354602,5.464172,-9.103520,-5.297080,-4.753194,9.486720,1.574830,5.770344,-6.158034,9.812199,0.893505,7.202368,6.150891,-3.694545,0.555468,-6.467081,1.099518,-3.823047,-1.006665,3.995021,-2.984620,-7.204605,0.620097,3.259746,-0.583233,0.038168,9.298453,6.911903,1.942584,2.642882,0.711992,-9.153239,4.805544,-5.359558,9.878266,8.708382,-7.759577,2.859191,6.997677,-0.144750,5.560891,-1.251535,-6.495149,-1.877534,4.147754,-0.722334,8.749019,7.056080,3.010194,5.106752,2.731598,4.769790,-3.794151,4.732849,7.639994,-6.455515,-2.359423,3.014279,-3.081389,-3.978844,7.831485,-2.035495,2.868032,-6.384570,7.662375,0.003207,-8.671324,5.627574,-9.712202,-6.164208,-5.964916,-3.182511,7.669472,9.790591,9.794271,4.383824,-5.037519,-4.246976,-6.263166,-5.097677,-8.337341,-6.936401,-3.744851,2.482051,6.578859,-4.494628,-8.899483,-1.459874,5.745255,9.358140,0.258902,5.974029,-3.751559,0.943977,-1.620311,2.481883,9.324379,5.887538,3.314104,-4.977543,3.899397,-5.532772,-0.893891,8.266078,-6.300477,-1.422635,-4.400741,9.768522,5.327565,7.648930,-3.956522,-4.972676,-4.610507,-4.148576,5.213937,-1.827609,2.631265,-6.162208,2.369907,3.365918,0.285382,2.862990,-9.732038,-5.268037,7.595480,8.107522,-1.924350,-9.480355,-5.412402,-5.289773,9.993642,-3.667353,2.727320,-1.063299,-5.293155,-8.445262,-7.838389,6.129335,-4.669998,-9.752962,2.626912,-7.486649,-6.740558,6.867545,6.077719,-6.993030,-5.183219,5.832264,7.602365,4.766817,-4.976272,2.003494,8.634923,1.912418,6.153596,-2.125152,9.952533,-8.597527,4.556867,-8.788837,-9.596350,5.547424,3.938807,-8.554445,2.938683,9.543759,-1.198405,-0.227242,6.209435,1.097125,3.926592,-2.845301,-9.143764,-6.026031,-6.974020,-9.541502,1.919125,1.374011,2.014526,-9.411939,5.231395,-4.153849,-9.104217,-7.184298,-5.018107,-9.551147,5.344021,-3.835364,-7.099846,6.829186,-7.185185,5.954410,5.612023,-7.409280,-2.825647,6.651407,-7.379355,8.164775,-1.677797,7.313759,-4.961647,8.093179,-5.064737,5.784432,-5.783841,4.247620,3.765564,3.965626,1.543825,1.622632,-0.594590,-1.253197,-9.294881,2.692964,1.584257,6.369648,1.435212,1.239673,-4.043993,-7.772322,5.279371,9.094456,-4.431549,6.706196,3.084220,2.728651,-1.727560,-1.932339,-7.381545,7.044243,-8.833642,5.042217,9.412868,4.657721,5.022789,3.337886,1.168298,6.315810,2.704245,-5.797355,9.021820,-9.580070,0.390583,-9.449383,-9.296040,4.194592,-2.726839,-7.367002,5.735903,-8.026537,5.725830,0.952171,-7.220877,-3.402328,3.972865,-7.639930,0.234202,-8.590843,-9.111496,-9.361435,6.319000,0.335938,-8.533789,1.326397,-4.620731,-0.691584,0.346431,-8.484417,3.427805,0.445659,8.939781,9.352377,-6.301602,9.110167,5.039395,-0.340912,3.476910,-5.312254,1.347781,8.475061,4.093029,-1.233488,3.103765,8.203603,8.291678,-3.378594,-9.991738,1.611111,7.500437,5.357249,-9.074960,4.896680,-2.398455,1.936481,-0.938775,6.060808,5.433917,-2.518778,-8.893255,3.898542,6.089422,7.827408,6.146558,-8.580282,9.053708,9.827180,4.905881,-2.510126,4.428799,-4.044964,-8.595962,9.994243,7.523122,9.135766,4.880134,8.790377,-6.740684,1.922443,-9.366249,-2.576021,2.482549,3.181761,2.287473,-2.239005,-7.088501,-8.353850,-3.544067,-0.151986,7.058298,-2.017864,-6.454683,9.362824,-5.249779,-7.238658,1.783232,-9.011500,6.967130,8.195894,6.873713,2.679424,-3.184365,0.757356,7.945414,-9.020927,1.937931,-8.806031,5.732462,-0.476473,-2.872811,-0.949550,9.437986,-2.597036,-1.504453,3.485858,-3.558180,7.032686,-7.338839,3.086284,-3.782357,3.771328,-7.246421,3.931443,8.296807,3.565559,1.153602,4.172824,0.400685,8.209705,-4.782158,9.253242,8.897992,7.256247,1.695475,0.667714,2.353719,4.742672,-9.379508,9.448101,-8.495518,0.410980,-0.370992,7.660535,9.915445,7.393678,1.321685,-0.395283,-7.131635,8.438907,-1.029352,2.128299,0.427466,-8.363740,-3.284106,2.410426,-6.833194,-0.822341,-4.514251,-8.370144,-9.868443,1.967190,3.032567,-3.988183,7.224564,2.822425,-9.649955,5.986690,-6.973424,-0.600261,2.955260,4.812918,-0.960065,-1.116171,2.407781,-8.942823,2.365989,-3.890755,4.627841,-0.533092,-0.710106,2.393919,-9.192945,-5.513401,-0.255816,6.961863,-1.146848,8.314335,-0.689772,7.038673,9.674362,7.320207,0.226646,2.777949,-1.255497,-1.400258,7.096605,-7.227813,-8.357328,-4.891718,8.026105,0.830736,1.306184,-3.462239,-7.560837,3.486838,-0.971632,-5.184956,-2.868323,-3.337722,9.739575,9.607467,-8.938440,9.594818,-7.652703,1.910948,3.414133,-4.347639,-8.037328,5.740126,-0.555152,-3.489998,1.472639,0.135216,-3.877310,2.808010,-5.210205,-0.205680,-7.973235,8.580455,-5.086773,-7.951968,3.533307,-7.286977,9.300752,2.981865,-5.094595,-9.489660,-4.240309,-3.837721,-5.893015,0.824909,-9.499662,2.059304,0.512026,-8.439278,-4.686829,8.651340,4.354815,8.937560,6.532629,-2.118599,-4.522142,-1.271663,-2.511714,9.382638,-8.301581,5.574976,-1.268992,6.557572,-4.392689,7.443784,-9.311396,-0.111101,-8.910849,-1.936730,-1.504890,-9.537334,-9.664766,-5.137569,4.052785,1.846851,-4.877027,-6.289128,2.514293,-1.104808,3.505939,-5.211184,-9.214293,9.919997,-2.261815,7.506710,0.363463,1.202109,-8.864926,-3.631394,7.136876,9.049149,2.035257,0.053472,8.788129,-2.997948,8.187574,-1.977651,2.829098,1.778890,5.199480,4.097559,-4.478135,-1.967894,-0.860858,-3.410038,-4.059253,3.573276,9.007269,8.740424,-5.736656,-5.817622,-9.556516,0.214502,-2.523385,-1.980774,5.098423,-6.164501,-1.110793,-0.470552,-9.530287,8.147699,-2.930223,-1.122342,3.978867,-4.699886,5.351950,1.821906,8.323686,4.342433,8.413084,-7.447256,8.350740,-7.211043,9.722253,-2.545689,8.833421,3.793927,-9.192935,-8.818839,5.174619,3.624513,2.725409,-1.890909,-4.397351,-4.961637,3.831977,-9.578666,-9.458492,7.824574,-1.463178,6.707604,4.768497,9.659760,-2.111883,5.495445,0.913543,-6.994486,0.047443,7.490564,-3.533621,-6.149850,-0.559094,7.785235,8.118318,8.083150,-8.538001,-3.777000,7.236650,-3.791911,9.506618,2.406726,-3.975038,6.554850,-2.919103,2.527476,-8.123235,6.538992,2.542458,0.973407,9.236346,-6.013641,6.823603,3.707621,-5.920388,-3.981806,8.782075,-2.532648,5.450792,6.509711,8.517427,6.104958,-5.977439,-8.374535,2.977854,7.810057,-4.048967,-4.613278,-2.960747,-2.921567,2.256050,-3.703995,-7.966897,7.958200,-1.945376,-6.876468,3.307424,2.400873,-7.306524,9.109350,-8.161293,-5.824459,-7.556572,-0.277110,-0.637216,-4.137477,-1.131067,-0.563752,8.575363,-6.819553,-6.640732,4.578806,-5.963880,-1.123946,3.742560,-0.100099,-1.913155,-3.691770,-3.221579,5.662418,-8.828172,-3.464532,-8.508717,1.775881,-9.712575,3.019975,-5.924487,1.274009,5.891433,7.982291,7.351435,-4.884149], dtype = "float32")#candidate|6043|(768,)|const|float32
var_6044 = relay.var("var_6044", dtype = "uint16", shape = (252,))#candidate|6044|(252,)|var|uint16
var_6045 = relay.var("var_6045", dtype = "bool", shape = (1260,))#candidate|6045|(1260,)|var|bool
call_6042 = relay.TupleGetItem(func_2991_call(relay.reshape(const_6043.astype('float32'), [8, 16, 6]), relay.reshape(var_6044.astype('uint16'), [252,]), relay.reshape(var_6045.astype('bool'), [1260,]), ), 2)
call_6046 = relay.TupleGetItem(func_2996_call(relay.reshape(const_6043.astype('float32'), [8, 16, 6]), relay.reshape(var_6044.astype('uint16'), [252,]), relay.reshape(var_6045.astype('bool'), [1260,]), ), 2)
func_3452_call = mod.get_global_var('func_3452')
func_3454_call = mutated_mod.get_global_var('func_3454')
call_6048 = relay.TupleGetItem(func_3452_call(), 0)
call_6049 = relay.TupleGetItem(func_3454_call(), 0)
func_2164_call = mod.get_global_var('func_2164')
func_2165_call = mutated_mod.get_global_var('func_2165')
call_6050 = func_2164_call()
call_6051 = func_2164_call()
output = relay.Tuple([call_6040,call_6042,const_6043,var_6044,var_6045,call_6048,call_6050,])
output2 = relay.Tuple([call_6041,call_6046,const_6043,var_6044,var_6045,call_6049,call_6051,])
func_6053 = relay.Function([var_6044,var_6045,], output)
mod['func_6053'] = func_6053
mod = relay.transform.InferType()(mod)
var_6054 = relay.var("var_6054", dtype = "uint16", shape = (252,))#candidate|6054|(252,)|var|uint16
var_6055 = relay.var("var_6055", dtype = "bool", shape = (1260,))#candidate|6055|(1260,)|var|bool
output = func_6053(var_6054,var_6055,)
func_6056 = relay.Function([var_6054,var_6055,], output)
mutated_mod['func_6056'] = func_6056
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6092 = relay.var("var_6092", dtype = "float64", shape = (6, 8, 11))#candidate|6092|(6, 8, 11)|var|float64
var_6093 = relay.var("var_6093", dtype = "float64", shape = (6, 8, 11))#candidate|6093|(6, 8, 11)|var|float64
bop_6094 = relay.floor_divide(var_6092.astype('float64'), relay.reshape(var_6093.astype('float64'), relay.shape_of(var_6092))) # shape=(6, 8, 11)
func_220_call = mod.get_global_var('func_220')
func_222_call = mutated_mod.get_global_var('func_222')
const_6109 = relay.const([-5.312191,0.367471,-0.314554,6.948129,-4.828247,-4.481482,-4.785094,3.761214,1.667091,-5.625428,-7.888388,-2.325946,-1.893377,1.022865,3.400150,-0.949366,3.040881,0.874623,0.797593,-9.049455,-3.021853,7.289986,0.716873,-1.356851,1.144778,-4.204520,8.251101,-8.680035,-7.103574,3.457094,9.523289,7.815417,2.902563,6.944269,6.541879,8.240333,-5.255920,-1.260003,5.374297,2.556204,0.768966,-0.242594,-1.457932,-6.597443,-9.850878,-7.976599,4.556810,-3.197618,-6.435546,5.168290,3.890379,6.101871,-5.547057,-7.787591,9.421090,-1.319618,5.399195,6.219594,-0.295759,-7.375688,-7.958797,-7.387029,-9.274070,-4.485126,-0.862986,-3.661287,-5.317384,-1.824111,-9.276516,-2.792535,-2.900703,-9.766672,3.154518,8.112708,-4.755703,9.066011,-1.401215,-7.925903,-2.859857,8.285675,8.649136,5.382374,-4.351122,-8.561308,-1.144566,-0.120269,2.832045,-6.148788,-0.214010,-2.331569,0.159534,1.975431,-7.364083,-2.169197,4.349231,5.177767,3.221964,-6.719339,-8.039502,-2.241395,-8.544688,5.378132,-3.672711,-7.169576,2.458463,8.656794,-8.255784,-0.485107,-5.837324,-7.811180,8.700720,-5.768769,-6.969787,-6.651291,0.484608,7.516172,2.759801,-4.743528,-4.370366,-0.936362,9.350704,-9.019406,4.428303,-8.136101,5.920075,1.609525,5.557252,3.578727,-3.168872,-8.700208,6.249128,6.094661,3.986358,-9.985696,7.182353,2.390924,-7.294869,-7.476661,8.900913,3.167055,6.693968,0.488961,5.715211,-2.774221,-3.416444,4.631329,-9.675330,-5.593202,-9.850009,1.117833,4.906905,5.888465,-2.792112,1.329682,-5.257864,-8.681142,2.477331,-9.291015,9.639014,0.202306,-5.668078,4.393993,5.148278,-3.234557,-5.393010,4.153511,-6.847648,8.740916,0.656761,-0.908576,9.456980,6.676538,-4.949711,6.714844,1.804580,1.807343,-8.463099,-2.618763,-1.476297,4.774812,9.484612,3.078685,0.695358,-6.573427,7.927501,4.849568,-9.825489,-1.988244,-7.961239,-3.868913,-9.919925,6.856522,-9.545027,-8.593737,-1.747739,2.127222,9.864805,-4.810684,0.740354,6.185241,0.959704,4.322839,9.993524,9.271679,-1.742700,8.201110,1.792100,6.835745,8.502612,3.003873,2.688746,5.510812,7.253412,-7.877179,-1.436556,3.095615,-6.721955,6.592140,-7.449308,0.145156,-6.393024,5.057436,-5.071949,1.924738,8.849060,7.632037,2.168604,7.716131,-5.164745,2.095291,3.208774,3.239741,-7.749262,6.006640,8.298874,9.105398,-5.366373,7.130129,2.876838,-4.745327,2.922951,6.992672,-1.004444,2.720319,-6.279946,1.559855,-3.914126,4.090868,-6.366930,5.388116,-7.369067,6.445066,-5.596118,4.365269,-0.788855,-2.618884,1.303628,-3.365439,-2.563470,0.848834,0.279860,-6.950535,0.235746,-3.662583,-8.784952,7.488804,-4.854262,0.853688,7.279867,-9.142800,-2.127752,-2.472660,-2.964256,4.175959,-8.804040,-6.655272,-4.916189,0.110893,-0.551155,1.901251,-8.916624,2.047260,6.432579,6.855527,7.621346,-0.416484,-2.883282,-4.703003,-9.517215,7.095196,-9.095049,-5.927852,-6.695555,-4.958005,2.818617,0.246083,-7.260326,-6.940046,-5.931525,-5.495001,0.492113,0.234572,9.611140,-1.553019,-2.599694,7.062048,6.577056,1.897895,6.114275,2.850128,7.541427,-3.429342,5.480997,5.523070,-4.300276,-0.792245,9.241906,9.792723,7.176137,-5.457417,2.434897,-5.222329,6.788430,-0.252270,2.030307,7.637684,6.375761,-1.860923,-9.416798,-5.762319,8.854237,-1.496716,-9.306245,-3.979874,4.686664,8.373616,-2.562083,-0.883903,2.419491,-6.807637,-9.178415,3.614534,-6.508655,-9.351022,-5.108201,8.753925,6.953296,-8.682827,-2.364363,3.140022,5.971773,-0.989783,-2.858893,4.650158,-3.391382,-3.295871,8.237170,-7.596409,4.458228,-4.359524,5.939256,-9.449695,5.519693,-8.662546,7.242723,5.458012,2.583073,-3.051489,-9.869097,4.993926,2.137395,3.467875,-8.411028,-4.143748,1.700875,6.966796,8.487594,7.622921,-9.252694,-5.716751,-2.163336,-0.413706,8.295385,8.905382,-3.922751,-1.076331,4.236517,-1.013029,6.722345,1.796182,6.081702,4.513908,-7.917848,6.993106,7.303796,-7.958143,5.443571,5.900975,5.316358,9.672348,4.999204,-8.682175,6.599517,-7.166789,0.679353,9.766090,-1.685902,0.662700,-3.424605,0.770530,-3.665263,1.398533,-0.054613,8.635178,2.505036,7.639132,-1.376511,7.265623,-1.911059,4.633817,-3.594568,-2.248429,0.014348,2.546613,-3.911830,1.108809,3.782455,4.944539,1.440276,6.567401,0.771074,-1.196967,-3.614521,9.134720,6.395155,1.097266,-7.428964,1.520480,2.737116,5.760631,4.504809,6.827278,3.451748,2.955885,5.890880,4.352999,3.300573,-2.664229,-0.314781,3.826741,-6.863290,0.271506,-7.352842,3.794014,8.014671,-1.833634,4.569294,9.436006,-6.851426,-9.064792,-2.644550,-3.656679,1.423727,6.767729,-5.975579,2.815735,8.188806,0.585622,2.119164,-1.584360,0.305307,-2.323843,-7.847706,1.849370,-7.675563,-9.271480,-2.577953,-0.910541,8.399655,0.989829,-1.145952,5.507077,5.749902,-3.017346,6.518798,9.625709,0.114320,6.409808,-2.369491,-8.874117,-0.271740,0.201463,8.639923,-8.691560,8.978367,-4.690488,5.875195,-0.603956,3.500549,6.033691,2.849566,1.787921,-6.982274,-0.659708,-1.080622,5.099976,2.072124,7.973937,0.734654,2.935653,0.558834,-5.050192,0.011619,7.900911,9.950433,8.444775,3.935600,1.018783,-6.650152,-6.560274,-7.591892,0.483145,-4.166894,-3.199128,4.900805,0.680759,-3.798401,3.708580,-4.152905,-4.914728,3.270918,-5.425320,-4.680870,3.396677,5.252390,0.903637,3.725171,6.499187,2.035959,1.263100,3.655586,5.107877,1.416941,-4.909212,9.351079,7.343668,-0.418580,-3.001962,-6.474135,5.581713,9.886270,9.162570,-5.075382,7.380915,5.521534,-6.066494,8.857959,-6.684648,-2.867552,-5.259961,2.808877,-8.952945,9.950486,-3.938014,-5.255839,4.499514,2.131413,7.382055,4.865049,8.774750,9.911796,5.568634,-6.147127,2.452744,-0.569771,-1.094632,-1.167888,-9.343259,6.067352,7.471496,-7.463074,-2.476458,2.695641,8.549558,-8.755976,0.233446,-6.875372,-8.014023,-5.201359,2.301833,0.067449,-3.843167,0.680429,0.613464,-9.942801,-6.798752,8.003516,-2.172627,-0.751902,6.440078,-9.468845,1.699527,1.075449,5.770939,8.975894,6.555181,1.891476,-2.144082,-9.905918,9.533601,-4.059596,7.545158,-6.964800,0.702046,-0.393722,3.217758,8.262466,9.975040,-9.304409,7.519973,-5.609221,-7.653910,-8.044953,-0.530622,-3.231310,6.333334,5.088179,-0.412352,-5.490078,0.527692,-1.228405,-0.671769,9.054876,4.856315,-3.242042,6.492793,9.934207,-1.296882,3.886379,-0.367166,4.519143,-4.427396,-5.741129,-3.081921,-4.490608,1.516388,0.118042,9.224373,-0.495626,-2.877135,4.462416,0.808346,-5.412486,-6.671990,-5.406243,9.848416,5.654718,-4.322269,5.560796,-7.078870,-5.824554,-3.190186,2.467256,-0.217129,-1.748897,7.800200,3.351791,-9.302624,-6.627527,1.757669,1.114151,-9.317606,-5.220384,6.286656,-3.719878,-8.521106,3.049886,-6.013317,-9.958462,-5.621693,8.795695,-1.105264,-0.843864,-3.291502,1.441534,3.146425,3.352560,9.788073,8.967469,1.735927,9.966416,-1.794116,-7.390508,1.015553,-2.790878,-2.793881,4.916196,-5.437145,2.748157,7.169200,-9.347607,-1.026845,-7.641676,0.702456,-1.246476,9.751788,-1.110934,-6.907384,-8.485804,8.315056,-2.502346,0.253327,-3.462130,3.386784,-1.771755,4.482651,-1.331351,-2.676425,1.655396,-1.864086,-8.405951,9.713836,5.218742,-8.810531,-8.179202,-6.640310,6.168243,-3.571903,6.079486,8.337411,-2.066734,-8.737833,-7.015028,-1.669843,4.546010,3.893615,-7.875186,-5.308881,9.262555,-0.530017,1.515493,-8.995646,-3.171843,-8.856112,-3.499004,4.706357,-2.238539,8.886598,4.371678,7.715123,-1.805368,-4.368755,0.191146,1.693809,3.073269,-0.281547,-0.929199,7.188013,-8.753581,1.997019,-0.160949,5.447759,-0.379209,9.911337,-3.475335,-8.135041,-4.687764,-7.450272,-6.317834,-0.154116,1.258520,-4.922091,0.434739,-7.999996,2.232653,-9.628516,-7.099072,1.078170,6.678436,-7.278395,2.851885,-6.649660,-4.591294,9.134872,-8.242203,-5.825884,6.603351,-3.103749,2.852539,-7.609462,-3.882064,-5.751730,-1.239546,2.734050,-4.978944,-2.332627,7.354677,4.628767,5.121152,-8.365409,-8.271137,8.705469,3.317039,-0.797763,-0.270672,6.019162,-3.049920,7.757566,6.365842,-6.701360,6.916684,5.297418,3.140454,-0.786840,-8.691491,4.954073,7.670630,-2.930325,-1.349751,7.650543,9.888600,1.765276,-2.065899,-1.941130,5.023628,-4.999606,7.055665,6.266186,-1.490413,2.120343,-4.770181,-0.701326,3.693599,-9.493111,1.959182,-5.726680,5.001650,-9.488528,3.054171,9.320081,4.819587,6.402313,-4.644034,-1.195987,-4.033245,5.395763,-3.116170,-9.903940,-4.400954,8.968564,2.011099,-1.256992,8.117387,-0.567913,3.712993,5.101775,8.226153,-7.872151,-1.723929,0.727938,-2.191815,5.133336,-3.923050,9.879680,4.438948,-4.282384,-9.681725,3.997893,-7.424311,-9.719847,4.527937,-5.411908,-9.660670,-7.200691,9.867291,0.438821,-2.199268,-9.303045,7.755135,5.494446,-7.578480,4.127256,-6.558924,-3.158026,-8.216977,1.827308,3.354739,4.519174,-6.668085,-0.347677,1.250518,4.407158,-4.585746,-5.859216,8.453343,-3.053189,8.790198,9.186984,-6.034185,-4.370807,-3.531292,6.099729,-4.324781,-7.962613,-9.714453,-4.011044,-7.696091,-8.355265,-4.404321,-4.987368,-6.109197,3.330377,-2.976974,-9.493274,8.891063,-9.647892,-9.396747,1.950453,-9.385531,1.702251,-5.570151,-0.314532,8.618733,3.000097,3.260660,-5.848808,9.675506,8.335666,-2.340551,-0.532638,5.494756,2.899854,-9.835964,-2.866660,-3.956019,-2.389916,7.422645,-3.545894,3.313452,-5.440336,4.337203,-1.204751,5.846281,2.967653,2.578092,1.194172,-9.041946,-1.551188,2.751074,8.072103,-0.673649,-2.290554,-0.087374,3.804051,-4.218269,-1.262473,-3.060138,-9.285311,-5.946996,5.303955,-9.631727,-1.716706,7.181369,6.157726,0.063208,6.291956,-0.117635,-1.898293,-1.179139,-5.714268,1.808934,-8.062106,-9.462433,5.553823,-2.203688], dtype = "float32")#candidate|6109|(975,)|const|float32
call_6108 = func_220_call(relay.reshape(const_6109.astype('float32'), [13, 15, 5]))
call_6110 = func_220_call(relay.reshape(const_6109.astype('float32'), [13, 15, 5]))
func_5000_call = mod.get_global_var('func_5000')
func_5001_call = mutated_mod.get_global_var('func_5001')
call_6115 = relay.TupleGetItem(func_5000_call(), 2)
call_6116 = relay.TupleGetItem(func_5001_call(), 2)
uop_6123 = relay.asinh(call_6108.astype('float32')) # shape=(13, 15, 5)
uop_6125 = relay.asinh(call_6110.astype('float32')) # shape=(13, 15, 5)
uop_6126 = relay.acos(var_6093.astype('float32')) # shape=(6, 8, 11)
func_5264_call = mod.get_global_var('func_5264')
func_5266_call = mutated_mod.get_global_var('func_5266')
call_6130 = func_5264_call()
call_6131 = func_5264_call()
output = relay.Tuple([bop_6094,const_6109,call_6115,uop_6123,uop_6126,call_6130,])
output2 = relay.Tuple([bop_6094,const_6109,call_6116,uop_6125,uop_6126,call_6131,])
func_6140 = relay.Function([var_6092,var_6093,], output)
mod['func_6140'] = func_6140
mod = relay.transform.InferType()(mod)
mutated_mod['func_6140'] = func_6140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6140_call = mutated_mod.get_global_var('func_6140')
var_6142 = relay.var("var_6142", dtype = "float64", shape = (6, 8, 11))#candidate|6142|(6, 8, 11)|var|float64
var_6143 = relay.var("var_6143", dtype = "float64", shape = (6, 8, 11))#candidate|6143|(6, 8, 11)|var|float64
call_6141 = func_6140_call(var_6142,var_6143,)
output = call_6141
func_6144 = relay.Function([var_6142,var_6143,], output)
mutated_mod['func_6144'] = func_6144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mod.get_global_var('func_5398')
func_5399_call = mutated_mod.get_global_var('func_5399')
call_6233 = func_5398_call()
call_6234 = func_5398_call()
func_4021_call = mod.get_global_var('func_4021')
func_4022_call = mutated_mod.get_global_var('func_4022')
call_6236 = func_4021_call()
call_6237 = func_4021_call()
output = relay.Tuple([call_6233,call_6236,])
output2 = relay.Tuple([call_6234,call_6237,])
func_6246 = relay.Function([], output)
mod['func_6246'] = func_6246
mod = relay.transform.InferType()(mod)
output = func_6246()
func_6247 = relay.Function([], output)
mutated_mod['func_6247'] = func_6247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1400_call = mod.get_global_var('func_1400')
func_1401_call = mutated_mod.get_global_var('func_1401')
call_6426 = func_1400_call()
call_6427 = func_1400_call()
output = call_6426
output2 = call_6427
func_6431 = relay.Function([], output)
mod['func_6431'] = func_6431
mod = relay.transform.InferType()(mod)
mutated_mod['func_6431'] = func_6431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6431_call = mutated_mod.get_global_var('func_6431')
call_6432 = func_6431_call()
output = call_6432
func_6433 = relay.Function([], output)
mutated_mod['func_6433'] = func_6433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4864_call = mod.get_global_var('func_4864')
func_4866_call = mutated_mod.get_global_var('func_4866')
call_6479 = relay.TupleGetItem(func_4864_call(), 0)
call_6480 = relay.TupleGetItem(func_4866_call(), 0)
output = call_6479
output2 = call_6480
func_6483 = relay.Function([], output)
mod['func_6483'] = func_6483
mod = relay.transform.InferType()(mod)
mutated_mod['func_6483'] = func_6483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6483_call = mutated_mod.get_global_var('func_6483')
call_6484 = func_6483_call()
output = call_6484
func_6485 = relay.Function([], output)
mutated_mod['func_6485'] = func_6485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6493 = relay.var("var_6493", dtype = "float32", shape = (14, 16, 1))#candidate|6493|(14, 16, 1)|var|float32
uop_6494 = relay.sigmoid(var_6493.astype('float32')) # shape=(14, 16, 1)
func_4697_call = mod.get_global_var('func_4697')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_6498 = func_4697_call()
call_6499 = func_4697_call()
var_6508 = relay.var("var_6508", dtype = "int32", shape = (4, 12, 2))#candidate|6508|(4, 12, 2)|var|int32
bop_6509 = relay.mod(call_6498.astype('float32'), relay.reshape(var_6508.astype('float32'), relay.shape_of(call_6498))) # shape=(4, 12, 2)
bop_6512 = relay.mod(call_6499.astype('float32'), relay.reshape(var_6508.astype('float32'), relay.shape_of(call_6499))) # shape=(4, 12, 2)
output = relay.Tuple([uop_6494,bop_6509,])
output2 = relay.Tuple([uop_6494,bop_6512,])
func_6514 = relay.Function([var_6493,var_6508,], output)
mod['func_6514'] = func_6514
mod = relay.transform.InferType()(mod)
mutated_mod['func_6514'] = func_6514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6514_call = mutated_mod.get_global_var('func_6514')
var_6516 = relay.var("var_6516", dtype = "float32", shape = (14, 16, 1))#candidate|6516|(14, 16, 1)|var|float32
var_6517 = relay.var("var_6517", dtype = "int32", shape = (4, 12, 2))#candidate|6517|(4, 12, 2)|var|int32
call_6515 = func_6514_call(var_6516,var_6517,)
output = call_6515
func_6518 = relay.Function([var_6516,var_6517,], output)
mutated_mod['func_6518'] = func_6518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1492_call = mod.get_global_var('func_1492')
func_1493_call = mutated_mod.get_global_var('func_1493')
call_6538 = func_1492_call()
call_6539 = func_1492_call()
func_5186_call = mod.get_global_var('func_5186')
func_5188_call = mutated_mod.get_global_var('func_5188')
call_6547 = func_5186_call()
call_6548 = func_5186_call()
func_5471_call = mod.get_global_var('func_5471')
func_5473_call = mutated_mod.get_global_var('func_5473')
call_6550 = relay.TupleGetItem(func_5471_call(relay.reshape(call_6547.astype('float64'), [6, 6, 12])), 3)
call_6551 = relay.TupleGetItem(func_5473_call(relay.reshape(call_6547.astype('float64'), [6, 6, 12])), 3)
bop_6559 = relay.floor_divide(call_6550.astype('float64'), relay.reshape(call_6538.astype('float64'), relay.shape_of(call_6550))) # shape=(12, 6, 6)
bop_6562 = relay.floor_divide(call_6551.astype('float64'), relay.reshape(call_6539.astype('float64'), relay.shape_of(call_6551))) # shape=(12, 6, 6)
output = relay.Tuple([call_6547,bop_6559,])
output2 = relay.Tuple([call_6548,bop_6562,])
func_6578 = relay.Function([], output)
mod['func_6578'] = func_6578
mod = relay.transform.InferType()(mod)
mutated_mod['func_6578'] = func_6578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6578_call = mutated_mod.get_global_var('func_6578')
call_6579 = func_6578_call()
output = call_6579
func_6580 = relay.Function([], output)
mutated_mod['func_6580'] = func_6580
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6628 = relay.const([[[3,8,-8,7,1,8,8,7,-4,-4,-9,-4,5,5,-3,-3],[-3,-10,-8,-5,-8,5,8,-8,10,-1,-10,-1,-1,2,-1,2],[8,5,8,4,-2,2,1,-2,-5,-2,-10,-1,1,-6,-6,8],[-10,-1,4,4,4,-8,9,10,5,-8,6,7,-1,-2,3,3],[3,-2,7,3,-6,-10,10,-7,-1,1,2,-5,-1,2,-4,-7]],[[-6,2,-9,-9,-5,-7,9,10,-1,-5,9,8,6,-1,-4,7],[-9,7,5,10,5,5,-5,1,-7,9,-8,-5,-6,7,7,1],[-5,4,4,-2,-3,-2,5,4,-2,6,-1,-4,-7,8,7,10],[10,3,-7,-5,-5,1,-2,10,8,-4,8,6,1,1,-5,-1],[4,9,1,4,-10,-6,9,-6,3,-6,2,-10,7,-2,-4,-7]],[[6,-2,9,5,-10,-2,6,-6,2,1,5,8,3,-4,10,5],[-7,-5,4,6,10,5,-9,-6,-4,-4,10,-10,-9,-10,-4,-7],[4,7,-3,-2,-2,10,9,-10,-4,-1,-4,7,-5,-4,-4,2],[-6,-3,-2,3,-3,5,10,-2,-10,9,4,-9,5,-10,4,-4],[-8,9,-4,-4,-5,7,-4,2,-4,10,-8,-8,10,-1,-9,7]],[[4,9,-10,2,-4,3,-10,2,7,-3,-10,-8,-1,7,6,7],[-3,7,-1,-1,10,3,-10,-3,8,1,-8,-8,-8,9,10,3],[4,7,8,10,-3,-7,9,-9,9,5,-7,-8,-10,10,-5,-5],[2,4,-9,10,-9,-4,-9,7,3,5,5,-8,10,-6,2,6],[3,-5,-6,6,-2,-6,-5,6,3,9,-5,-6,4,2,5,-9]],[[-7,3,-9,-1,-1,-9,7,6,9,1,-2,-8,9,2,5,-4],[-8,-8,-6,-8,-5,7,4,-4,-9,-6,-10,-9,4,4,-5,-6],[5,-1,-2,-10,-8,8,10,-5,-5,-2,-7,7,-4,-5,-9,-3],[-4,7,-3,-2,6,3,10,-7,-2,3,9,3,10,4,8,4],[-2,-7,-10,6,-6,9,8,4,-4,9,6,-9,-9,-6,8,8]],[[-2,5,-1,5,-9,-7,2,-8,10,-2,-1,-1,-1,9,10,1],[2,4,-6,-5,7,5,5,8,1,10,-10,-4,1,-4,1,-2],[1,8,-7,6,7,5,-3,7,-2,5,9,5,-3,10,-4,8],[-8,-5,-1,1,10,-10,-9,-8,6,-5,3,5,-10,-1,-7,2],[-7,-10,-7,6,7,10,-5,-6,-2,-5,4,-2,-7,1,-3,-1]],[[9,7,-4,-3,1,6,-4,4,-7,2,3,6,-10,-5,-7,1],[8,1,-3,3,-8,9,-3,-7,-3,10,6,5,-2,-6,7,-6],[-9,8,-1,-5,2,-2,-6,5,-9,-5,-2,10,-1,4,6,-4],[9,9,5,-1,-8,1,-4,-7,-3,8,5,1,4,5,-9,7],[10,-8,-9,-9,-1,-3,9,8,2,-9,-5,2,-8,-1,3,5]],[[-3,-8,3,9,10,-1,-2,2,6,-1,-2,2,10,-6,-3,-10],[-5,7,6,4,-8,6,3,-5,9,-9,1,-10,-7,7,1,-6],[-4,4,9,-9,-2,-8,-4,3,-9,4,-6,-4,-5,4,-6,2],[-3,3,6,-8,8,-3,-9,6,9,-1,-8,-9,-3,9,-3,-1],[-9,10,-8,-6,-6,-9,-3,4,-6,-6,-9,-7,8,-2,-9,9]],[[1,7,-10,4,-10,-3,-9,-3,-4,-1,-4,5,-6,-4,4,-7],[5,-2,5,-4,-10,-7,8,4,-1,-4,3,8,8,6,-7,7],[-7,8,-7,-6,-1,-8,3,2,-8,8,8,3,-7,-10,-2,-6],[-5,10,1,3,-8,-3,-2,4,1,-1,7,-5,-3,-7,-9,3],[-1,10,-8,4,-1,-5,-9,-2,1,9,7,10,-6,-2,-4,-1]],[[-7,-5,-3,1,5,8,6,-6,3,-5,-7,8,-6,10,-7,-4],[-3,1,9,1,-9,2,1,2,-3,-6,-4,4,7,9,-5,10],[4,-6,-3,-9,-8,-8,8,4,-7,-2,5,10,-9,7,3,-4],[1,2,-6,6,3,-2,-4,-2,5,1,-9,-3,1,4,7,3],[-5,2,7,5,2,10,-2,-6,-6,8,-7,4,8,3,6,-3]],[[-2,-4,5,-10,-7,-4,5,-7,-8,-6,3,-4,-10,8,5,-8],[-8,-10,4,-3,-2,-1,8,8,10,-2,4,5,7,1,-5,-10],[3,-6,-2,9,8,1,-5,-4,2,9,-4,-1,8,-4,1,3],[-6,3,10,1,10,-5,-10,-4,-5,-8,9,-1,-1,7,-10,8],[-3,-3,-2,2,8,-7,-4,-3,-3,-9,2,9,-4,-7,-9,10]],[[5,7,-10,9,4,-8,-8,9,-4,4,-10,-1,-1,9,-3,-2],[-4,8,-7,4,5,-2,-7,-4,1,6,3,8,-6,-4,5,9],[-4,-5,-4,-2,3,9,7,10,1,3,-3,-8,5,-8,-7,-2],[-6,1,6,-8,-9,8,10,8,-5,-7,-10,-7,-6,-7,-6,3],[-6,9,-8,-10,3,3,-7,7,9,-10,1,-4,-4,10,-10,9]],[[7,-7,-6,10,-4,-5,3,2,-9,1,-2,7,-7,-6,-1,-4],[-5,-3,-7,-2,-5,3,10,10,-10,9,7,7,-6,3,-10,-6],[-10,-9,2,-10,-8,-5,-10,10,-5,3,-9,-7,5,-2,9,-1],[-9,-5,-2,7,8,2,6,-2,-3,2,7,-6,-9,7,-6,-8],[1,-5,-8,4,-4,-8,8,-9,4,10,-3,2,-5,-2,9,8]],[[-3,2,-5,9,-3,-8,-6,-10,10,-10,8,-5,-2,6,8,3],[4,5,4,-9,-1,-5,-7,7,-7,-10,-10,-8,3,6,-7,-3],[8,2,-1,10,1,-9,10,-4,3,-4,1,5,-7,5,4,6],[-5,-6,1,-8,-1,1,-3,10,10,-6,5,5,4,7,8,-10],[2,-9,9,-7,4,-2,2,-2,-6,-3,10,7,8,10,7,-10]]], dtype = "uint64")#candidate|6628|(14, 5, 16)|const|uint64
const_6629 = relay.const([[[-1,3,-2,4,-5,-2,3,-5,-8,-1,-4,5,5,5,3,9],[10,1,-7,1,5,-2,-9,-9,-6,4,-5,9,-3,3,10,9],[3,9,-6,2,6,-2,-1,-2,1,8,6,-3,2,4,-9,-1],[4,-2,10,2,8,-1,-4,7,-10,1,-4,5,-2,7,2,6],[8,6,2,6,-3,2,-9,-5,5,4,-2,-3,-10,8,8,9]],[[9,-4,5,-4,6,-8,-4,3,-8,-7,8,5,-2,-1,6,-8],[7,-8,3,-3,-8,3,3,-1,5,-1,10,4,-8,6,-6,9],[-6,8,-10,8,3,10,-7,8,9,-8,5,4,-6,-7,5,-6],[6,-2,-6,-4,2,-4,5,5,-1,-6,3,-2,-10,-1,-9,-10],[10,1,2,4,1,7,2,-3,-4,-1,-9,-8,-4,-6,4,7]],[[-7,10,6,-7,4,5,5,6,9,8,10,8,5,-6,9,-4],[2,10,-10,4,-1,7,-9,7,2,-5,-3,8,-7,6,-6,4],[6,5,-1,9,8,-7,-9,-6,-2,-5,1,3,-6,6,1,1],[6,-3,-4,6,-8,-10,7,-10,-6,4,-8,7,-5,-7,5,-6],[-3,5,-1,9,1,-6,7,7,-1,-1,5,-5,1,1,-2,-6]],[[-3,-2,1,4,3,2,6,-3,10,7,4,-8,-6,2,5,4],[-8,-2,10,-2,-8,4,4,2,-3,-9,-3,-1,-7,6,10,2],[8,8,-2,2,-5,-3,-6,-2,3,6,-2,4,10,3,-10,10],[9,-6,8,-10,-6,1,7,3,-7,-6,7,-10,10,9,-6,-9],[-8,-7,-5,-9,-9,5,6,-8,6,-3,5,-10,-7,-8,9,-10]],[[-4,-3,-4,-10,-3,-1,-2,3,2,-10,9,4,2,-1,-9,8],[-7,-2,3,6,-6,6,-5,-7,7,5,-1,2,-1,4,3,3],[3,3,-7,4,5,5,-1,6,-2,-5,-10,-8,-1,2,4,-6],[-1,7,-9,5,-2,-3,-3,-2,9,-9,6,1,10,1,-1,5],[7,1,-2,9,7,9,-10,6,-10,-2,4,4,-7,10,-6,-9]],[[4,1,8,-1,4,4,3,-5,5,-1,-1,3,-4,7,7,-2],[-7,8,-3,-8,-9,2,2,-6,5,6,-6,7,3,7,1,2],[2,-3,6,-3,6,8,-3,7,-4,5,3,10,-5,7,-6,-5],[-6,3,-4,9,-10,-9,1,-10,-8,-7,-8,-10,-3,10,-5,-6],[-5,-5,5,-8,10,9,-3,6,-5,-6,-9,-7,-3,-10,4,-9]],[[8,10,7,10,7,-7,-10,4,10,-10,6,1,-6,8,-10,-3],[-1,2,10,3,3,8,7,-1,-1,5,-10,-7,-9,8,-9,8],[3,8,-1,-1,-5,10,-10,-8,-3,8,-1,-2,7,-2,3,8],[9,1,1,6,10,7,-8,9,-1,-7,-10,-3,-10,-7,4,-1],[3,2,-2,1,6,-2,-4,6,-7,-8,-1,-8,-7,-6,-10,3]],[[-8,9,-5,2,8,-4,6,-10,10,-2,8,-1,-2,-5,3,8],[-4,1,-7,9,-8,10,4,7,-7,-4,-6,1,2,-2,5,-6],[9,8,-10,-3,-1,-10,-4,-8,5,-7,9,-3,-7,7,7,1],[-9,-9,-4,-7,7,10,6,2,2,-4,-9,-5,2,-8,-5,2],[-6,3,5,-6,9,4,6,7,-5,-2,-6,3,-8,4,10,7]],[[8,5,-2,-6,1,-6,-3,-6,2,5,4,5,-8,5,-6,3],[6,5,-1,1,-8,8,10,2,-3,-1,6,10,6,4,-10,3],[-5,6,-1,9,-5,-3,-4,-8,-3,-5,-6,4,2,3,-5,10],[9,9,4,-9,6,2,6,-6,-9,-9,5,7,1,1,-8,-7],[6,7,3,-7,-8,6,10,-7,2,6,-9,-7,4,-8,7,-1]],[[1,-3,6,3,2,9,3,5,-2,-7,3,-3,1,3,-7,3],[2,4,9,-1,-7,4,-8,7,9,3,7,-1,7,6,-8,-6],[6,-8,7,5,2,6,-8,2,-7,1,10,2,-6,3,-9,4],[-7,10,6,8,7,-9,-8,-4,5,1,-5,-3,1,-7,-3,6],[5,-5,-1,10,8,-5,-10,3,2,1,5,10,-9,8,8,-5]],[[-10,-6,5,1,5,10,-4,-3,5,6,9,9,5,-2,-3,-7],[-7,-6,-9,6,4,9,10,-6,7,6,2,-6,5,9,6,1],[-7,8,5,-9,-1,-10,-10,6,10,5,-1,8,-8,-6,-1,8],[5,3,9,10,10,-10,8,-2,-10,-10,-6,7,-5,10,9,3],[3,5,-10,3,6,-2,1,-3,-9,-4,-3,-2,-5,4,8,9]],[[5,-5,-10,5,-4,-10,-1,10,10,-6,6,-3,10,-4,-7,2],[-6,7,7,-3,10,-10,8,10,1,-3,6,7,-5,4,3,-4],[-5,6,-4,5,-4,-3,-2,-2,-1,-1,3,2,-6,-10,4,-9],[-6,1,5,1,8,2,9,4,-1,10,10,3,-10,-8,-6,1],[3,1,-5,-5,-10,-4,3,10,2,9,2,1,-3,-6,5,5]],[[9,-6,-10,-9,10,-1,1,8,-3,-9,-6,-9,-7,-10,-10,10],[2,-4,-7,-3,8,1,-7,-5,3,-7,2,10,9,-4,6,8],[2,-10,-7,-7,9,4,-6,-8,3,-9,-9,8,10,7,-8,6],[9,8,-1,10,-4,7,5,10,-9,7,-10,6,-9,-8,7,6],[9,3,2,9,-2,-5,-10,-9,3,-8,2,-5,-6,7,-8,-3]],[[-10,7,2,5,2,10,-4,2,-4,-2,-4,-7,-3,-8,-9,10],[-7,-1,-4,-10,-6,-2,-1,10,7,-2,-1,3,-3,-5,-2,-2],[-3,-8,1,7,10,10,4,-9,-1,1,-9,-4,-7,-7,-5,10],[1,-6,5,10,1,-9,9,5,8,-2,4,1,6,-2,6,8],[9,-10,7,4,-3,4,-2,1,-7,-8,8,4,-5,4,10,9]]], dtype = "uint64")#candidate|6629|(14, 5, 16)|const|uint64
bop_6630 = relay.multiply(const_6628.astype('uint64'), relay.reshape(const_6629.astype('uint64'), relay.shape_of(const_6628))) # shape=(14, 5, 16)
output = relay.Tuple([bop_6630,])
output2 = relay.Tuple([bop_6630,])
func_6633 = relay.Function([], output)
mod['func_6633'] = func_6633
mod = relay.transform.InferType()(mod)
output = func_6633()
func_6634 = relay.Function([], output)
mutated_mod['func_6634'] = func_6634
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6637 = relay.var("var_6637", dtype = "float64", shape = (2, 9, 14))#candidate|6637|(2, 9, 14)|var|float64
uop_6638 = relay.sqrt(var_6637.astype('float64')) # shape=(2, 9, 14)
func_3897_call = mod.get_global_var('func_3897')
func_3899_call = mutated_mod.get_global_var('func_3899')
const_6645 = relay.const([1.644208,2.680370,8.848529,-5.530312,2.121290,-0.820953,2.533491,7.165446,-5.545000,-6.037067,-1.827583,-7.944662,5.227307,-7.358630,8.382187,5.798641,-3.279962,-9.872589,-8.749741,-7.351161,-6.493849,-4.805753,6.868123,-9.188434,-5.830887,8.312703,3.224886,6.207497,-3.654319,-9.576857,-9.460625,-7.937883,-2.817820,-4.263175,-8.127192,7.029877,9.835318,-0.875154,9.833294,7.661339,3.687443,-7.134703,-2.033924,9.856273,-2.898530,0.738797,-2.751576,8.337327,-8.742702,3.778190,0.785795,5.358050,3.977807,0.801802,-8.072032,-1.632665,-9.494718,3.713547,-4.003861,7.321769,-5.181634,-1.545932,9.024530,2.552285,6.580875,-7.459165,6.328431,-4.940762,1.113182,7.101366,-4.266820,-2.978085,0.482739,2.867340,-3.418741,-5.926674,8.332876,0.234725,-4.573154,-0.784888,-0.107989,-8.527557,6.644344,-5.902032,3.007376,-8.166521,8.328970,-8.002642,-9.329626,-8.096200,-8.680024,4.978056,4.365782,-2.417205,-6.808622,-3.300718,3.719378,-9.149130,1.313294,-9.303534,3.031216,-2.646533,6.754579,2.418782,-1.019473,-9.671982,-3.723166,9.964718,9.110691,3.511903,-7.733298,-9.575444,0.867542,-8.263124,9.874756,9.987919,-8.642671,6.505197,-9.517806,7.385849,-2.179283,8.984746,-7.530814,6.125730,6.842037,6.701902,-2.886005,3.036760,-1.944090,-3.982540,-4.365806,-0.299327,7.249855,-2.519952,-3.929493,-3.594396,-5.079593,1.517885,-4.917088,-0.923289,-4.452416,-6.713548,5.018480,-6.639834,5.658425,2.935942,-8.190610,-9.982915,0.123519,1.620591,7.082892,-5.090333,1.825404,-8.146638,-0.929724,3.171306,-4.445805,9.327058,-6.674677,4.602614,-3.628187,5.719431,5.334697,-3.074196,9.027132,-1.153498,-8.452528,-0.954042,1.646245,1.206018,5.734921,-3.637690,-3.479069,5.183909,0.231347,4.667749,4.933533,-8.810092,-4.828072,4.415201,-3.738943,-3.475870,-0.424956,-5.889355,2.460699,-5.058305,4.350613,-7.201491,-5.183328,-0.583566,4.207474,-6.056038,-5.845056,3.044964,9.468425,-6.199178,-4.505900,-5.781429,5.034639,-2.474677,7.409424,0.055095,3.414376,-0.034404,1.945654,9.130505,-8.515574,4.504348,-1.659025,-5.977808,2.302574,4.064144,0.968371,6.735098,2.241612,-2.248845,-0.601705,6.329070,5.993336,2.770938,-7.440728,7.603207,-3.792299,3.352367,6.102696,7.300143,3.618394,3.024538,-0.464483,7.634521,-0.364962,-0.416632,-3.044561,9.746942,-6.840090,-9.748201,9.582118,8.142809,4.055405,8.282286,-5.891906,2.833993,6.984801,2.381194,2.392657,7.037859,-2.342955,-4.912915,5.762656,-6.057157,9.270998,-0.625081,2.031001,-4.699267,8.635080,9.024261,-1.692806,7.490085,6.486049,-5.338867,6.949647,2.435966,7.756859,-3.360138,0.553835,-6.756831,-3.162534,9.491978,7.837932,-9.500887,5.874461,-9.904009,-7.276404,-9.433014,-6.061864,6.490907,-9.851093,7.654902,-6.323289,2.813195,8.537033,-3.809914,-9.130210,1.984681,-0.806274,-0.912417,2.568962,5.963605,-6.014669,-1.344719,-9.711030,2.961677,-7.791585,6.725343,-7.577006,-6.435561,-0.087774,7.229551,-9.026477,-0.184010,-7.233425,7.371693,-8.921819,-0.517289,-8.835446,0.185161,-7.475442,4.345974,-4.109153,2.230960,8.966893,-9.368493,2.900610,6.483358,-5.454443,-4.398860,-2.627621,-0.037176,-1.372287,-3.015557,8.480011,-7.374158,-1.427114,-6.331777,-1.236495,8.175783,9.200297,6.976573,-4.439384,7.610818,4.711190,5.215335,9.371619,-7.523965,-7.109328,-1.688595,-6.075211,3.472052,-7.730901,7.461422,-6.337567,2.692168,-7.261562,-9.864583,9.474832,2.964032,4.690174,-7.432352,4.859590,-8.335234,2.567224,3.640548,0.053000,-6.744137,9.890854,-7.556458,4.101699,6.565247,7.472533,-2.964575,5.061589,0.426838,-8.245209,1.459541,-2.934162,-0.294581,-9.317986,0.371592,-4.415069,-1.083069,-2.967008,7.710605,-7.029750,9.844606,-6.178941,-3.182032,-6.706856,-2.857085,7.871825,-6.818716,-5.374246,-9.590885,-3.658574,-4.592164,9.516417,-0.318834,-1.100315,6.977867,6.645648,-4.913600,-1.977367,3.177113,-2.837892,-6.450004,-9.407930,8.354416,5.685684,6.706982,9.488972,-7.666996,-0.072229,-9.067355,5.244100,3.992526,5.612807,-9.370077,-7.529711,-3.852436,-8.642450,6.703011,3.845236,4.462202,-5.008472,-5.210269,-9.250649,-2.290134,-6.618977,8.668379,3.111716,-1.223902,-8.690886,-8.986426,-4.527878,2.227659,8.521816,9.264613,2.834300,6.767157,-0.620044,-8.491475,3.770686,4.402981,8.612736,4.046929,-8.219412,1.128172,-5.841449,0.920816,-6.022352,1.302510,5.154202,-1.127711,5.078967,-2.091560,-0.360184,8.702710,-8.169193,2.083896,7.031028,-3.303697,-3.321916,8.451732,4.917614,2.516218,7.534433,-6.423306,-9.065865,-2.319204,-8.673275,4.036646,2.935169,-2.536486,3.012601,1.138640,-7.009353,-5.575677,-9.196208,-7.370649,6.951418,2.869765,-4.194643,9.979040,6.220264,1.209962,5.920476,-8.481775,2.032328,-9.399542,-5.772502,4.235877], dtype = "float32")#candidate|6645|(480,)|const|float32
call_6644 = relay.TupleGetItem(func_3897_call(relay.reshape(const_6645.astype('float32'), [5, 96])), 2)
call_6646 = relay.TupleGetItem(func_3899_call(relay.reshape(const_6645.astype('float32'), [5, 96])), 2)
output = relay.Tuple([uop_6638,call_6644,const_6645,])
output2 = relay.Tuple([uop_6638,call_6646,const_6645,])
func_6650 = relay.Function([var_6637,], output)
mod['func_6650'] = func_6650
mod = relay.transform.InferType()(mod)
mutated_mod['func_6650'] = func_6650
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6651 = relay.var("var_6651", dtype = "float64", shape = (2, 9, 14))#candidate|6651|(2, 9, 14)|var|float64
func_6650_call = mutated_mod.get_global_var('func_6650')
call_6652 = func_6650_call(var_6651)
output = call_6652
func_6653 = relay.Function([var_6651], output)
mutated_mod['func_6653'] = func_6653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4697_call = mod.get_global_var('func_4697')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_6669 = func_4697_call()
call_6670 = func_4697_call()
output = call_6669
output2 = call_6670
func_6686 = relay.Function([], output)
mod['func_6686'] = func_6686
mod = relay.transform.InferType()(mod)
output = func_6686()
func_6687 = relay.Function([], output)
mutated_mod['func_6687'] = func_6687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6246_call = mod.get_global_var('func_6246')
func_6247_call = mutated_mod.get_global_var('func_6247')
call_6703 = relay.TupleGetItem(func_6246_call(), 1)
call_6704 = relay.TupleGetItem(func_6247_call(), 1)
func_4663_call = mod.get_global_var('func_4663')
func_4665_call = mutated_mod.get_global_var('func_4665')
const_6710 = relay.const([-8.668546,1.987146,-7.500578,7.268053,0.749200,3.900169,6.965587,5.391343,8.749243,2.966647,-8.504083,5.999162,-2.175825,9.884859,-3.948992,3.343864,4.573717,-3.436486,4.168988,-4.186792,-5.556725,1.643691,4.305354,-8.987379,-6.753562,1.458143,-5.229405,3.943341,9.982308,-9.908598,8.957162,-3.454178,8.970027,-0.696016,-0.620904,5.161078,-7.408220,-1.768335,8.771148,0.307667,-3.561703,9.601539,9.085918,-2.117676,0.046117,3.555565,-5.163470,3.435663,-4.759857,-6.314385,-8.852769,-4.416505,7.068798,-5.510218,9.431506,-6.074574,5.849805,9.159713,6.896797,0.118347,-6.323470,8.762922,7.655945,-9.296150,-7.158723,-6.311582,1.544498,-4.132195,-6.303684,0.113380,-2.776966,2.353941,7.953707,-6.092749,-4.747493,4.818924,-5.555009,-0.282832,5.985127,-5.361779,4.361756,-2.221454,7.253013,4.547670,-7.760883,0.745449,9.772751,-2.236211,0.565776,6.110411,-8.697222,4.228062,5.414705,-4.179412,-2.164609,-3.771018,-5.712471,-3.309989,3.594790,8.258313,6.788537,-5.093569,6.080214,0.759181,-7.257310,6.445491,-1.635068,6.894649,-1.198802,-3.841686,-3.373724,-4.703549,-1.561835,-4.500184,7.064935,7.808313,0.471705,6.661007,-9.690952,3.290010,4.787616,8.801295,6.071482,6.867341,6.532681,5.720802,-9.038133,-5.472502,-4.930658,7.712406,-3.702307,-6.897658,-7.686456,-4.159491,6.783765,1.207598,-5.857322,-5.272046,-1.719735,0.915877,1.822469,6.413553,9.196749,-8.594458,4.303747,3.842733,-1.059826,3.536210,7.678197,2.151878,1.902942,6.807419,-3.854401,-2.568553,7.689416,-9.939241,-4.065143,-2.910508,6.470454,7.345757,-4.204901,-5.348307,7.077830,-7.309771,7.953535,6.411899,-3.775902,3.121718,-3.315963,1.373542,4.101364,-9.881768,-3.093808,6.873313,-0.273478,-8.305932,4.717970,5.569311,-5.270493,2.064177,-4.940446,-9.030217,0.179167,5.546653,8.024979,0.096886,-9.455482,-4.973775,7.810508,-5.559068,0.327777,-0.023363,0.876139,3.095194,5.423924,5.844970,0.616668,9.233014,3.551844,-0.622553,9.254646,-2.278202,1.291648,-8.313686,-1.542065,-0.916598,3.095804,2.260898,2.875009,-0.870892,6.542063,-3.234177,-2.563625,-7.801074,-1.205122,-9.871139,-3.979369,8.610222,-9.140574,-0.059850,-3.541724,-9.862483,-4.796131,-5.038347,-4.649562,-8.060342,-9.123551,-1.370314,-8.334267,7.465576,1.837937,6.110430,-1.071846,0.121785,-3.265565,5.016680,2.438697,1.276741,2.862171,7.400527,-5.818810,-8.702202,-5.093919,3.599364,1.575482,0.452429,6.747083,-5.938711,8.880359,-8.454876,-4.171134,-5.359830,6.726386,1.080096,8.575973,-6.638641,-6.629582,-3.135661,0.635397,-8.052119,-7.717665,7.538269,-8.282089,8.246860,6.690930,8.714125,-0.525922,0.904994,8.801673,-1.421064,0.396153,5.078343,5.653056,-2.909198,4.985235,9.783342,-8.669088,7.666415,3.484765,-6.040001,-9.542415,-6.786593,1.223685,-2.547986,-2.873855,1.087630,1.710116,8.272245,7.426153,5.039187,-9.127724,-0.565614,6.663900,5.457938,1.710972,-1.258755,-5.837522,-9.572145,-9.179342,-7.036540,1.538080,5.403682,-6.562448,-8.843269,-7.754376,6.504844,-5.523357,-7.792678,9.676108,-7.306419,0.654929,3.036787,8.389436,-3.354241,-7.154919,-0.033743,-9.695005,2.732619,1.219820,-3.652064,9.710953,-5.661659,-0.852320,-3.315315,1.004907,-9.897559,1.252661,-9.838142,9.383425,-6.405080,3.654769,9.082335,-0.890798,2.751723,-0.660817,-6.641945,9.275040,-8.649809,7.420402,4.887290,6.832801,3.105768,3.828561,-2.209761,-9.230287,1.719965,5.888669,-4.738361,9.643182,8.249188,4.548362,6.782870,5.347728,-6.741938,-6.016556,5.788069,4.785806,-1.123051,-5.945273,6.699209,-3.541478,-3.025248,-7.375302,0.722951,-5.935127,9.026289,-1.871031,-4.255593,-9.257792,-7.097507,3.024505,3.250537,9.914864,9.139908,-3.895652,-0.364704,6.878886,-6.718633,3.435119,2.492741,0.075481,-7.333184,-6.336799,2.964833,6.576297,0.538620,7.706409,-9.294185,0.193804,-3.748473,-8.471064,-5.397957,6.572051,5.169172,-1.108283,8.653057,-0.083055,-1.149173,-2.623173,3.434365,1.691618,-6.267236,7.094777,5.873241,7.368180,-3.067013,6.233193,7.799597,-5.372660,5.705783,-1.579063,-4.607570,-2.659873,6.326265,-9.886400,7.985723,9.344956,-9.427644,-4.375153,0.548490,7.185152,5.399848,-9.164108,2.537458,-1.420664,-3.213469,9.605016,0.010783,8.925149,9.702240,9.946900,3.414962,-9.081222,-3.320474,-2.852777,-2.886746,5.418422,-8.242978,8.505216,-7.730959,-1.177483,-8.986707,4.344727,-8.057838,-7.569741,-8.305481,-8.164292,-3.826761], dtype = "float32")#candidate|6710|(448,)|const|float32
call_6709 = relay.TupleGetItem(func_4663_call(relay.reshape(const_6710.astype('float32'), [16, 2, 14])), 0)
call_6711 = relay.TupleGetItem(func_4665_call(relay.reshape(const_6710.astype('float32'), [16, 2, 14])), 0)
func_2614_call = mod.get_global_var('func_2614')
func_2616_call = mutated_mod.get_global_var('func_2616')
var_6733 = relay.var("var_6733", dtype = "float32", shape = (27,))#candidate|6733|(27,)|var|float32
call_6732 = relay.TupleGetItem(func_2614_call(relay.reshape(var_6733.astype('float32'), [27,])), 2)
call_6734 = relay.TupleGetItem(func_2616_call(relay.reshape(var_6733.astype('float32'), [27,])), 2)
func_4663_call = mod.get_global_var('func_4663')
func_4665_call = mutated_mod.get_global_var('func_4665')
call_6738 = relay.TupleGetItem(func_4663_call(relay.reshape(const_6710.astype('float32'), [16, 2, 14])), 0)
call_6739 = relay.TupleGetItem(func_4665_call(relay.reshape(const_6710.astype('float32'), [16, 2, 14])), 0)
func_4021_call = mod.get_global_var('func_4021')
func_4022_call = mutated_mod.get_global_var('func_4022')
call_6754 = func_4021_call()
call_6755 = func_4021_call()
bop_6759 = relay.minimum(const_6710.astype('uint64'), relay.reshape(call_6709.astype('uint64'), relay.shape_of(const_6710))) # shape=(448,)
bop_6762 = relay.minimum(const_6710.astype('uint64'), relay.reshape(call_6711.astype('uint64'), relay.shape_of(const_6710))) # shape=(448,)
uop_6765 = relay.rsqrt(bop_6759.astype('float64')) # shape=(448,)
uop_6767 = relay.rsqrt(bop_6762.astype('float64')) # shape=(448,)
output = relay.Tuple([call_6703,call_6732,var_6733,call_6738,call_6754,uop_6765,])
output2 = relay.Tuple([call_6704,call_6734,var_6733,call_6739,call_6755,uop_6767,])
func_6777 = relay.Function([var_6733,], output)
mod['func_6777'] = func_6777
mod = relay.transform.InferType()(mod)
var_6778 = relay.var("var_6778", dtype = "float32", shape = (27,))#candidate|6778|(27,)|var|float32
output = func_6777(var_6778)
func_6779 = relay.Function([var_6778], output)
mutated_mod['func_6779'] = func_6779
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6783 = relay.var("var_6783", dtype = "uint32", shape = (9, 14, 12))#candidate|6783|(9, 14, 12)|var|uint32
const_6784 = relay.const([[[-4,-4,-10,5,-5,1,7,-5,6,2,5,7],[-5,-7,-9,4,-7,-6,-7,-5,5,4,-9,-2],[8,-2,-6,-9,7,-4,1,8,6,7,8,-6],[9,-6,-7,-3,2,8,-6,1,-10,-8,2,-9],[3,-10,7,5,-5,4,9,9,-3,-1,1,-4],[4,-4,-9,3,-10,-4,-10,-2,-10,-1,4,-2],[8,-7,3,1,-5,-6,-7,-8,-5,-3,9,-3],[2,8,5,-2,-3,-1,-2,8,7,-2,4,-3],[-2,3,2,2,10,-9,-2,-6,-3,1,-1,-3],[-2,5,6,-4,-2,2,3,-7,6,5,-8,2],[10,-7,4,-9,6,2,-10,2,3,8,-10,6],[3,-5,-6,2,-10,-7,2,1,-2,2,9,-5],[-2,6,-10,-9,6,3,10,-8,-8,-7,4,8],[10,9,-6,2,9,-9,10,1,-3,-10,4,3]],[[6,10,-7,6,-10,7,-1,-3,4,-9,-1,4],[7,-5,3,-2,-8,-7,-3,-2,-9,-9,7,3],[4,-10,2,-7,8,-1,1,-8,-8,-4,1,3],[7,2,-6,7,-5,-4,-9,-10,-4,7,-2,6],[9,10,8,-10,7,-10,7,2,-4,-10,9,1],[-9,-1,-3,-3,-7,-2,8,1,-6,-8,-8,-4],[7,7,-4,-1,7,5,9,2,-3,-4,-8,8],[-7,8,7,10,-6,1,-7,2,-6,-2,7,4],[10,-2,-4,4,-5,1,-2,7,9,-7,-2,-8],[8,-5,6,4,7,4,-6,-5,9,-4,-6,-3],[9,-9,1,-9,-9,-5,-4,-1,-6,-2,-3,3],[2,7,10,-1,1,10,-1,-2,-5,-7,5,10],[5,6,-1,-4,-8,-1,10,-7,-5,-3,-8,-9],[2,-4,6,-10,9,10,7,-5,4,1,-1,7]],[[5,-2,-6,8,9,-7,-7,5,-5,6,-1,-4],[8,-3,4,-4,-1,-2,9,7,1,2,-10,-3],[-6,-6,-9,-3,6,5,7,10,8,-9,1,5],[-7,-1,-6,4,1,-8,-2,7,-1,9,2,10],[-1,-6,-2,-6,10,7,-2,-7,-5,-5,-7,5],[7,-8,3,-10,4,7,-9,-4,-10,4,-6,-5],[5,5,4,-2,4,-1,-5,-1,7,4,1,-4],[2,3,8,-8,1,6,5,-6,5,8,-10,-10],[7,4,5,8,-7,-5,10,7,9,7,-9,-3],[-4,-8,-7,1,4,1,5,-7,10,-5,-5,4],[-6,-8,-5,3,1,4,-10,4,-2,3,4,-10],[-2,-7,-9,-3,-1,4,-1,7,-8,9,-8,4],[-6,9,-7,-4,-6,-9,3,2,10,-2,-2,-2],[4,10,4,3,-3,2,1,-10,-9,2,9,-6]],[[9,-2,8,3,7,3,-9,1,-9,1,-1,7],[-10,-1,-10,-1,-4,-1,-9,6,8,-7,-8,-9],[1,6,-1,-1,-9,-3,7,9,-7,8,7,-3],[-5,-3,9,7,2,-2,-4,5,3,-4,1,4],[8,-7,-5,-9,1,1,-4,9,-4,10,-4,-3],[4,-9,-3,-5,6,5,2,-2,-5,-2,3,-6],[2,5,2,5,7,3,9,-2,-9,6,10,4],[-3,6,-8,3,10,-8,-7,-10,-8,-8,-10,4],[7,1,-8,-5,-3,-6,-3,1,-8,6,5,-4],[9,-2,10,10,-5,-5,10,-1,10,2,-6,-7],[-5,2,2,-2,5,2,9,-5,5,-5,-1,-7],[-6,6,-3,10,9,5,7,-2,3,-2,-6,-5],[8,-7,10,9,5,10,10,6,-2,-9,-10,3],[-3,-4,-1,-3,2,-7,-5,8,2,8,10,9]],[[4,-2,9,8,2,4,-4,2,8,-6,-8,5],[-6,1,-6,9,10,-8,1,-2,9,-8,-2,7],[-2,3,1,9,2,3,-2,-1,6,-3,5,-1],[1,7,10,1,1,1,5,-9,-1,6,7,-6],[-7,9,4,6,9,-7,9,4,-6,-2,-6,8],[5,1,-9,4,-5,8,5,5,7,-7,-1,-6],[6,8,1,7,9,-8,4,4,7,1,6,-7],[9,1,5,-9,-7,10,2,-4,7,9,3,3],[7,-5,-1,8,-8,-3,6,1,8,9,-1,3],[6,1,9,-1,-1,9,-9,-3,-4,8,-8,-3],[-2,-8,-7,3,7,3,10,-2,10,-3,8,8],[4,-2,-6,-9,-9,-3,2,-10,-2,4,-8,-2],[-8,9,-5,-8,4,-1,6,1,9,-2,10,9],[-6,3,-9,-2,2,-1,-10,-5,-10,7,4,-1]],[[-3,-5,4,6,-9,4,6,5,9,4,-6,8],[-3,1,-4,-4,7,10,5,3,-7,-2,-3,10],[6,5,-2,9,7,-7,-4,6,10,3,1,9],[-3,10,1,-1,-3,10,-7,-5,1,-5,-2,-8],[-6,8,-9,7,10,-9,7,-8,6,10,-9,10],[-8,6,-6,4,7,1,-1,-9,6,-1,-10,5],[-9,3,-1,-7,-8,1,-9,-7,-7,6,7,-10],[-5,-7,-2,-3,9,-6,-9,-1,7,-2,-5,7],[-7,1,-8,6,1,-8,-6,-1,-7,7,-3,-6],[8,-9,6,8,-8,-5,9,-10,5,-3,-9,5],[-5,-5,-1,-9,8,4,5,-7,-1,9,-6,-10],[5,1,8,-3,10,-1,8,10,9,7,-7,7],[9,-10,3,5,3,-3,3,4,-3,-4,7,4],[-1,-10,-7,8,2,-10,-8,-2,-2,2,2,-9]],[[-2,-5,-7,3,-4,-6,-1,-9,-2,6,6,9],[-5,-1,6,2,-3,7,10,7,4,-4,-10,5],[-4,4,-1,5,-3,-4,8,-8,-5,-10,4,8],[3,-2,7,-6,10,-8,-2,-8,-3,5,8,-2],[-8,-9,-10,-10,-9,5,-10,6,9,-1,-8,6],[-3,3,-6,-6,7,-7,-10,-9,9,-6,5,9],[5,6,10,7,5,-7,-4,3,8,-8,7,9],[1,5,7,-3,3,-8,-1,6,-6,5,6,1],[10,-4,7,2,-1,8,-10,-10,8,6,4,5],[7,-8,-10,8,-10,-8,6,-7,-9,-4,-5,2],[2,-3,1,4,10,10,-5,-1,-1,-2,-2,-5],[-5,10,3,5,9,4,8,8,4,-7,6,-1],[-8,3,5,1,-7,2,-4,-7,-5,-4,9,-8],[-10,1,4,3,7,3,6,-4,8,2,2,-6]],[[-10,-7,-4,1,1,-2,-4,-8,10,6,7,8],[-5,5,10,2,4,9,6,4,4,2,-10,10],[2,-6,6,-2,6,6,-3,-6,-8,6,6,1],[3,-7,-6,3,-3,-8,-6,-9,2,-8,4,1],[-10,-7,-7,4,6,3,10,-9,-8,1,-9,-6],[-6,3,8,-5,3,5,-2,9,2,-9,9,-5],[-7,1,-7,-5,1,4,-6,-10,-10,-6,-3,10],[9,8,-7,7,7,8,-8,8,4,1,-10,-8],[5,3,-1,5,-10,1,4,-1,-7,7,-5,5],[9,-9,6,-9,3,10,3,-5,-6,10,4,3],[2,9,6,-5,1,-4,-3,-9,-5,2,2,-10],[-4,10,-4,3,4,-3,7,7,-4,-8,-4,-5],[6,6,5,-8,-10,10,1,2,-5,-8,-5,-4],[-6,7,-9,-10,2,-5,-3,7,-3,-7,-10,2]],[[6,-10,4,9,8,3,-10,2,-8,8,-2,-3],[2,9,-1,-7,-10,-5,3,-6,1,8,-2,-5],[9,-10,-10,8,-4,-4,-10,1,10,-4,-1,-3],[2,6,-4,-2,4,-8,6,-6,4,7,-1,-6],[6,3,2,2,9,-6,8,-8,4,7,-3,-2],[3,1,-10,4,-6,-5,-4,2,4,-8,10,5],[1,3,4,-1,7,-2,10,2,4,-6,-4,-6],[10,9,2,-3,-7,-9,4,-10,3,-9,-10,10],[-8,-6,9,-9,8,9,3,2,-2,10,8,-8],[-4,5,8,9,4,-8,-9,-1,6,-4,-4,8],[-7,2,10,8,7,-9,-9,-10,-6,-5,7,2],[6,4,-4,5,-3,-7,-7,9,10,-8,8,3],[8,9,-6,3,-8,-3,9,4,-5,7,7,5],[-5,6,2,-9,9,-10,-10,-8,-9,-3,-7,2]]], dtype = "uint32")#candidate|6784|(9, 14, 12)|const|uint32
bop_6785 = relay.greater_equal(var_6783.astype('bool'), relay.reshape(const_6784.astype('bool'), relay.shape_of(var_6783))) # shape=(9, 14, 12)
func_2249_call = mod.get_global_var('func_2249')
func_2252_call = mutated_mod.get_global_var('func_2252')
const_6791 = relay.const([3.959764,-1.272411,3.542811,6.569741,6.023011,-8.086174,-5.980444,-4.715427,2.787379,-1.813536,-9.469220,-3.091050,-4.575530,8.552709,8.154514,-4.079779,6.182989,2.192288,-6.097935,-9.311420,-0.834892,-6.942974,-2.484943,-8.497369,4.169885,-3.305381,-6.291845,5.088751,-0.393443,4.039096,3.887054,9.354749,-7.784612,5.292598,1.550177,-3.653460,8.086295,-4.886038,-6.341999,2.210820,2.546618,7.982454,-8.153360,-0.212886,-3.255327,-5.610829,8.490797,-8.179016,-7.228707,-2.474358,6.848807,-4.074932,9.201439,9.575784,3.460882,7.614448,-2.237947,2.480472,-5.524829,-6.821325,5.344993,-3.655269,-3.485031,-2.439394,-4.313103,-7.820496,6.671617,-4.851687,0.627747,-5.239263,-6.928133,-0.145344,2.177864,7.407518,1.748216,-0.421885,0.638960,-6.463461,9.750559,-2.694079,7.624574,-2.558562,3.011325,-7.728664,-1.962578,-1.021527,-1.882106,1.504061,-7.588091,4.058899,-0.843382,-1.601321,-5.747210,1.122404,2.742093,-6.708360,-4.090686,7.600591,5.264180,5.045181,0.464837,1.751775,-0.188236,7.857963,1.151918,-9.099730,-7.076203,4.862692,7.363651,-8.684879,9.161399,-6.049327,9.863322,0.287275,8.492203,-4.985424,-6.839683,-9.675256,2.952197,8.402991,7.745471,-9.121599,-3.799206,-9.421700,8.692678,-0.665812,9.911434,-1.205240,9.637931,-7.844655,-1.705359,6.429478,-2.277880,2.313062,7.550288,-8.033400,4.362272,-5.582725,8.018960,9.409162,5.892549,7.831678,-2.070797,-9.239523,4.201018,-1.081543,3.842267,8.367303,-8.536405,9.799965,2.400539,-0.896427,2.412053,8.675760,1.438387,4.110879,-1.423409,-9.382095,-3.279816,-0.579898,8.855174,-6.315031,-2.420080,-5.012341,-0.273402,-9.200410,7.674641,-8.799325,9.999359,7.193966,2.038186,-9.272488,0.058872,-0.374610,8.865820,-2.517068,-1.873122,6.276806,-0.252590,3.435948,-8.333602,-5.475757,-8.410133,-9.334503,-0.903687,-6.354665,-9.726839,-7.667339,2.745135,4.317534,0.035334,7.700053,-3.666747,5.200706,-8.153112,-0.682955,-0.497670,6.311418,0.325165,0.663646,3.176168,8.717252,-8.429241,-9.843654,5.140485,-4.868259,7.397000,-6.793600,-2.132165,-0.606363,-7.543355,8.062796,4.463644,1.343655,-6.528815,5.868080,-2.002077,6.847583,-4.760320,5.242712,-9.625632,-5.405479,4.189892,3.076066,-2.056378,0.516016,-3.249922,-0.767369,7.381970,3.280308,-5.387535,3.766743,6.887095,8.024863,-5.252331,7.517454,-8.280730,-4.887037,-1.023264,0.240386,5.277602,7.084837,-7.223286,-2.933111,8.211730,6.119347,-5.178506,2.336684,-4.725383,2.178323,3.532250,0.177437,-4.874314,6.763566,6.429527,-7.739512,5.180893,2.760211,9.345897,3.326329,3.240556,-2.729998,-4.443265,3.390207,-7.997365,3.990972,-6.747378,8.850647,3.478953,6.380386,2.537342,3.391007,-2.027729,-8.298052,-8.175399,-7.969663,4.475716,7.145580,-2.154408,-0.045488,5.602874,-3.689204,-6.851582,2.759478,6.487078,-9.656247,-5.471961,2.578660,-9.801093,-7.273761,-4.470471,-7.439646,0.759629,5.155621,6.509281,-3.848392,3.844319,-7.933807,-8.182382,3.777040,-7.843148,-9.116271,-9.857674,6.693751,-3.247459,4.543919,2.587852,-5.095228,-7.473376,-4.396824,8.774115,-1.287247,-7.613765,-8.596474,-9.608436,-4.174820,7.351175,3.498639,-4.415237,0.643161,-1.811405,1.745871,-5.098068,-5.635303,4.294050,-8.316877,7.465981,-6.922290,4.581413,-3.523776,-9.529458,3.856900,-4.851761,7.948018,9.395428,3.775153,-8.453221,8.164419,-1.729484,8.095980,7.158455,-3.179160,-6.019192,-8.188697,4.982435,-4.673096,9.141991,5.440644,-0.800824,-8.951067,3.330409,-8.010002,8.888633,3.115761,5.416526,9.423764,-8.093632,-3.566176,-2.556508,6.206348,6.805042,-9.005141,8.788381,-7.983215,-7.806293,6.745757,-7.332055,9.064203,-3.713796,6.038798,2.557823,-9.714925,-2.918388,3.414064,2.884800,-7.593933,-3.310927,5.641127,7.428786,1.915967,-3.783430,8.802319,-2.523410,-1.051920,8.693286,6.487634,8.525772,5.073213,-1.832840,-0.984704,0.056551,-4.451742,4.117425,8.889772,-5.183711,2.242669,8.024217,6.740642,9.572074,-6.505048,-0.658078,-4.075514,2.135212,4.452490,-1.570873,8.418821,7.858650,8.992384,4.733831,6.996865,9.321144,1.693709,1.357677,2.793172,-1.674269,-1.678573,0.621499,-1.448931,-2.654613,-0.445916,-8.782133,-9.270307,8.025708,-9.312206,-3.782361,-9.556164,-9.066398,-6.703777,4.102843,6.350042,-2.917976,-8.890985,-6.812021,-0.325465,-7.979835,9.969985,8.259339,-0.309353,5.514786,3.056653,-4.971416,6.882877,8.939215,2.876104,6.668920,9.635485,-8.847214,0.390156,-5.464210,6.049985,-4.056669,5.959312,-5.881011,5.559522,5.358716,2.303286,-7.039229,-5.608820,-4.457720,-0.099522,-9.563343,4.257715,8.046817,6.564709,9.904629,2.020286,3.988187,8.824867,-5.411468,8.209067,2.224345,-7.955723,-4.264785,-4.966082,-8.252950,-6.290184,-2.948461,3.832106,1.396328,4.860478,4.309998,-0.199322,-9.891710,-7.239604,-8.742142,-8.926242,-6.047932,-4.950203,9.801382,7.381214,0.517624,2.376746,-6.201366,-7.825728,7.359427,-9.836848,-9.007231,-8.897429,-0.320052,8.155269,-3.068243,-9.332727,-6.241289,6.726055,3.140923,0.477821,1.121515,-1.349952,2.667847,3.779518,1.925955,3.091167,-7.097687,-7.632432,-4.912053,-4.429346,3.362793,6.243406,1.239729,9.861617,-3.240063,6.095405,6.806473,6.165288,-9.969360,-0.018456,-6.889263,0.801552,3.611885,1.829634,-4.971778,-0.415997,-8.818928,7.048117,2.998425,9.464927,-1.566965,6.733103,-9.467215,-4.662931,1.980925,-6.614369,4.232089,-5.235752,9.591865,-2.411808,4.137889,6.998483,7.095408,1.688626,-6.490237,-0.478583,-6.362152,-0.139144,-3.102219,4.295119,4.384501,7.283163,-6.308860,7.803272,4.188534,9.392624,2.509022,-4.172537,9.156931,5.762973,-2.271609,-2.224171,2.660037,-7.818966,-5.431024,3.365088,7.967430,-0.278968,-6.762864,-1.476812,1.291010,7.739430,-3.505236,2.105644,4.305913,0.942595,-7.197268,-0.962073,6.335948,2.031724,1.161358,7.391716,4.489550,-5.621180,-2.814445,1.288900,-4.180377,-2.684972,5.526968,-3.778127,-1.466847,-2.192150,-7.372467,-7.737958,9.442483,3.398492,-0.170064,-2.760640,-1.097152,5.148094,0.174704,-1.219630,9.523342,-5.083220,3.075715,-3.398595,1.380644,-8.239606,9.979099,1.189076,6.626519,5.500624,2.479802,7.314617,-9.149895,-6.165588,-8.557511,8.056542,4.544650,-9.417013,2.634997,-4.957663,6.977562,-0.633138,4.456593,-6.017399,-4.962006,-1.647127,8.729774,5.835544,8.053921,0.268655,-2.551231,6.362586,-3.715146,-8.024107,-5.828576,-7.599143,-2.061146,5.890360,-0.501706,-7.459530,2.619656,3.510320,-9.181559,0.356000,-7.704978,7.119052,4.346578,0.396856,-9.633308,5.789803,-2.342520,2.469358,-4.354848,2.455479,-4.288843,3.748278,-0.556309,-2.215598,6.636714,-7.503515,-3.426096,4.932398,8.384673,1.422486,-0.155936,-3.962465,6.622370,1.928020,-7.395050,-9.194878,-3.107141,2.679812,-3.450499,-4.077942,2.926269,-4.746502,-6.381316,4.249851,-8.452430,-3.078856,-6.373542,9.713876,-2.522751,4.673374,0.058394,3.989559,-3.376095,8.349818,-7.399880,-0.671821,-5.817769,5.265290,-6.787471,-9.184370,0.489187,-0.095102,-9.370037,8.106233,-4.875966,7.241980,8.818666,-5.187281,5.579021,-4.607675,8.159634,8.666983,8.412645,-2.982142,-8.258538,-8.887498,7.354193,8.874046,2.450195,-1.542076,4.683060,6.037953,-8.193793,-2.308902,0.515365,3.855698,-8.860128,1.048664,7.987233,1.558710,-9.918032,-4.680665,-8.831805,6.273035,-4.626894,-4.340157,-5.797689,-3.084098,3.873868,-6.902549,-3.483646,8.217942,9.931495,-6.513242,-5.362803,-8.988819,-3.266331,2.632597,-1.929133,-3.696743,-5.134915,-1.230437,-6.380183,-6.256038,-6.163621,5.428838,-4.551835,8.762882,2.705668,2.617938,8.078417,-7.104492,-4.353422,6.444555,0.231018,3.412799], dtype = "float64")#candidate|6791|(768,)|const|float64
call_6790 = func_2249_call(relay.reshape(const_6791.astype('float64'), [16, 8, 6]), relay.reshape(const_6791.astype('float64'), [16, 8, 6]), )
call_6792 = func_2249_call(relay.reshape(const_6791.astype('float64'), [16, 8, 6]), relay.reshape(const_6791.astype('float64'), [16, 8, 6]), )
output = relay.Tuple([bop_6785,call_6790,const_6791,])
output2 = relay.Tuple([bop_6785,call_6792,const_6791,])
func_6793 = relay.Function([var_6783,], output)
mod['func_6793'] = func_6793
mod = relay.transform.InferType()(mod)
mutated_mod['func_6793'] = func_6793
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6794 = relay.var("var_6794", dtype = "uint32", shape = (9, 14, 12))#candidate|6794|(9, 14, 12)|var|uint32
func_6793_call = mutated_mod.get_global_var('func_6793')
call_6795 = func_6793_call(var_6794)
output = call_6795
func_6796 = relay.Function([var_6794], output)
mutated_mod['func_6796'] = func_6796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4864_call = mod.get_global_var('func_4864')
func_4866_call = mutated_mod.get_global_var('func_4866')
call_6801 = relay.TupleGetItem(func_4864_call(), 0)
call_6802 = relay.TupleGetItem(func_4866_call(), 0)
output = relay.Tuple([call_6801,])
output2 = relay.Tuple([call_6802,])
func_6834 = relay.Function([], output)
mod['func_6834'] = func_6834
mod = relay.transform.InferType()(mod)
mutated_mod['func_6834'] = func_6834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6834_call = mutated_mod.get_global_var('func_6834')
call_6835 = func_6834_call()
output = call_6835
func_6836 = relay.Function([], output)
mutated_mod['func_6836'] = func_6836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2164_call = mod.get_global_var('func_2164')
func_2165_call = mutated_mod.get_global_var('func_2165')
call_6847 = func_2164_call()
call_6848 = func_2164_call()
uop_6851 = relay.sigmoid(call_6847.astype('float64')) # shape=(12, 6, 6)
uop_6853 = relay.sigmoid(call_6848.astype('float64')) # shape=(12, 6, 6)
func_1330_call = mod.get_global_var('func_1330')
func_1333_call = mutated_mod.get_global_var('func_1333')
const_6855 = relay.const([3.826437,4.021597,-6.770042,4.679499,6.153205,5.450267,-0.549285,-6.993622,-0.590333,2.071614,0.332716,9.674073,1.157240,-2.097428,-3.123991,-8.314766,5.711560,-2.713122,-4.580257,7.388218,1.049774,0.845053,5.248208,0.613263,-5.050091,0.655424,1.293637], dtype = "float32")#candidate|6855|(27,)|const|float32
call_6854 = relay.TupleGetItem(func_1330_call(relay.reshape(const_6855.astype('float32'), [1, 3, 9])), 5)
call_6856 = relay.TupleGetItem(func_1333_call(relay.reshape(const_6855.astype('float32'), [1, 3, 9])), 5)
output = relay.Tuple([uop_6851,call_6854,const_6855,])
output2 = relay.Tuple([uop_6853,call_6856,const_6855,])
func_6862 = relay.Function([], output)
mod['func_6862'] = func_6862
mod = relay.transform.InferType()(mod)
output = func_6862()
func_6863 = relay.Function([], output)
mutated_mod['func_6863'] = func_6863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_6883 = func_3658_call()
call_6884 = func_3658_call()
func_4495_call = mod.get_global_var('func_4495')
func_4498_call = mutated_mod.get_global_var('func_4498')
const_6916 = relay.const([9.109284,9.921656,-5.901797,2.704388,-9.228880,2.797963,-8.120927,9.989588,1.599954,5.639195,3.380202,9.754235,3.398056,-2.047798,-8.205358,-3.898293,-6.051523,-3.488179,2.057207,-1.751742,-7.396517,-0.249964,4.498668,-0.824708,-0.306526,-9.880179,2.695996,-4.172537,-7.949131,9.642773,9.817270,-9.472139,-6.770804,9.266971,4.133119,0.196532,9.299564,-6.223771,-5.736399,4.823134,-0.027032,-7.797090,3.698228,-6.638851,-8.039262,-1.341962,-9.093307,0.309854,-4.555087,-2.446958,-5.569473,8.627188,7.208889,-4.649009,-5.280490,-0.598230,-8.296508,-7.516207,9.456788,5.785591,-3.145075,5.232325,-1.049800,0.291048,7.792770,-8.741024,-5.831360,8.205850,-5.193397,6.565512,6.580825,4.370268,-4.775744,-0.010333,4.905626,6.772661,1.091664,-1.127930,-3.003019,-0.972848,2.087653,8.287847,-2.355556,3.963054,6.517342,6.450433,-6.886376,-7.754109,-2.054453,-5.936400,-6.249621,-2.016197,-9.365734,3.926150,-5.878624,1.421008,9.598424,3.177495,6.480820,-4.311833,1.284045,-5.318093,-7.449086,5.867236,4.942045,-5.809426,1.656627,9.748820,3.653613,-0.968542,9.180403,2.335909,7.309830,-6.506331,4.918191,4.904073,7.105695,-2.991272,-0.610148,-3.374395,5.303886,4.171772,7.472997,3.565016,1.579767,8.839730,6.766310,6.668981,9.865003,5.561186,-9.295827,-1.060660,-5.786152,-5.076223,-7.557320,-4.371220,4.741752,-4.479123,2.124384,-2.582188,-3.390434,4.041891,-3.002986,-8.864775,-3.820404,8.331402,-9.994605,-7.533914,-4.973673,0.256978,-9.000981,1.070837,6.354871,-4.026650,4.532043,0.554483,-4.005254,5.308808,-8.431418,0.970729,0.787506,0.577842,-2.036329,4.374923,-4.002469,9.879945,-4.766060,7.719193,-9.865789,-8.417216,-5.725743,8.542229,-4.649740,1.250151,-2.412020,-9.914470,7.584625,5.587254,8.481316,1.370965,9.761199,-6.724161,6.305589,9.514259,-2.954766,4.018462,-5.923059,6.108776,8.954763,3.402669,6.376855,2.117346,9.858177,-0.228964,4.566115,7.560168,-2.090631,0.389964,3.129545,-0.731767,-7.353482,-3.101411,-1.970427,-8.328788,-7.137598,-3.149232,1.415392,2.738444,-6.166623,5.320549,1.994464,0.040934,2.776113,8.335162,1.364056,-4.033640,5.613929,-2.244266,-9.544001,7.813470,-2.627296,2.973320,4.970329,1.884603,-3.564806,-1.051520,4.121255,-2.257252,-4.755295,5.262076,2.269613,2.630631,-8.021896,-0.069346,-1.878977,8.150350,9.607518,-6.915098,6.649804,8.928886,4.239567,0.771401,6.124399,9.546720,3.325752,7.052767,-1.862678,7.859285,2.958369,5.052424,1.775782,-1.794305,6.639297,-3.786150,-9.150599,5.114700,1.540218,-3.206929,-2.180106,-7.055867,-1.291206,-0.631063,-6.149593,8.797992,3.906310,-4.360006,-0.523756,-9.969867,2.635182,-1.925388,-6.485754,8.145236,3.620310,-8.373831,0.541734,4.374142,-2.266592,-8.513125,-5.472089,-0.022077,4.162778,-9.992770,-8.330474,1.762261,5.955520,7.495132,8.478051,1.572210,5.984923,-0.937304,-2.703948,-3.883991,2.572167,-4.019738,1.535140,-5.324797,5.928680,-8.877671,5.046436,3.090437,1.082251,-6.510324,-1.942347,0.181722,8.457093,-9.890615,-0.831222,-1.280623,-0.308133,5.159464,-6.549048,-3.796536,-9.984847,6.474411,-2.085442,1.296881,7.106402,6.213919,5.975576,6.207268,-7.398264,7.259348,1.713355,7.528385,-8.701225,3.666939,-5.891153,-3.833779,-2.119542,-4.920235,-4.612555,-8.483432,6.611661,4.070594,3.186793,8.186213,8.026992,-4.105139,-2.718608,-2.805094,-0.396045,0.762346,9.117865,1.124081,5.232341,-2.781097,6.985285,-0.235665,-1.169485,-5.343225,-3.634757,-8.217297,-2.467060,-4.152867,-8.631775,9.918179,-2.767671,1.399360,-7.874490,8.377104,-2.733639,4.783332,7.930520,-5.621832,-1.852459,9.492166,-8.761772,-5.257199,-0.473960,0.736771,8.532252,5.182864,-9.778745,4.391635,6.357921,-6.278388,-2.773834,-2.156060,3.639751,-6.372560,4.296343,4.557773,7.723482,-7.758736,-6.140245,-3.964092,-2.540610,-2.672857,-0.114689,0.319189,-5.943606,5.878946,4.284398,-6.773801,-5.710596,-8.502767,-2.339096,0.490175,1.201087,2.938078,6.798167,8.892339,7.772689,-9.563269,0.715828,-6.397279,-4.629232,6.412247,1.952480,-9.287278,-8.823048,4.203234,-2.335905,-6.490663,-8.395695,-9.930732,4.621903,7.403951,3.223879,-3.050804,6.091255,-3.335416,-2.688604,3.327246,-1.650382,8.392057,1.182561,6.205165,2.280428,7.331500,-2.343542,0.980932,-8.613526,-4.685700,9.916148,-2.972171,4.421406,-6.169762,-2.094325,7.363450,7.502858,4.866996,7.746554,1.468558,-6.689222,-0.258268,-2.232579,-1.740662,-7.410904,-8.076299,8.278945,-8.328851,7.116601,-8.199514,0.575557,-5.794683,-3.991576,1.464177,3.322114,-2.784992,7.413977,-4.496367,6.332723,-0.332025,5.620373,2.437693,-6.476920,-7.413624,-1.348737,7.167389,-8.913922,-0.479676,-0.311289,7.092221,-6.819761,1.130931,-5.097798,8.552248,1.950583,-8.710624,-9.221165,6.480963,2.417043,9.668598,6.631803,9.626582,-2.509162,-3.269857,2.965215,-9.799776,-7.258032,-0.399954,2.799979,-9.263400,7.385825,-4.543027,-2.347863,-4.115805,0.166217,9.185379,3.015413,-3.559774,-5.718853,-9.670701,-6.881790,-8.311787,-4.620571,-3.414231,-4.156526,-4.999947,5.683787,-4.197912,9.740425,1.576854,-2.896419,2.189461,-2.950409,6.938387,-1.462877,-3.382224,1.448129,1.967674,0.911096,6.358851,-7.171330,-7.835899,-1.951665,4.992907,5.480596,-4.109233,6.904585,9.107237,-4.698247,3.305568,-8.949836,5.350435,-6.382404,-0.287716,-5.693921,6.860178,4.570140,-5.207975,-5.570246,8.066007,7.695773,7.459006,2.057498,-5.010471,-1.192848,5.912972,9.834845,-3.063139,1.204310,-2.865908,-4.405954,7.211743,4.439692,-1.811677,7.227557,7.044901,2.384201,-7.276274,-3.672411,-4.958932,-8.223424,4.156677,4.845828,5.078403,-5.321615,-0.402417,2.568466,1.180181,-8.407771,1.639978,8.981848,-0.903828,8.528080,-1.615831,1.631165,-3.872027,-6.054617,8.458465,3.274822,-3.768134,-3.057335,0.672566,-8.174041,-5.268558,-5.703580,2.322335,9.805832,-6.187678,-0.426228,-1.527970,-2.650880,2.995069,-3.570759,-1.917427,1.551298,-4.136827,0.185581,7.778813,-0.178414,-8.331500,8.952247,-2.341094,4.815941,-2.193329,8.919247,6.923609,8.252634,-9.843643,-3.986177,-3.539016,-8.210874,3.664484,-3.057833,8.127232,7.073301,3.062856,0.166409,4.191828,-6.936378,-6.751571,-3.554268,9.951804,-4.469041,4.623043,-1.492834,-9.257303,-4.584958,6.047231,3.264932,7.993956,-3.883439,1.493000,8.125693,9.303840,-6.838923,8.289086,9.160613,6.020751,1.819336,-7.035626,-6.459581,-7.047949,4.366556,5.917542,-1.901324,7.250546,3.347468,4.747679,9.556094,-3.763388,-9.136719,-6.630702,6.049651,-2.395140,-1.665215,-8.156215,6.406122,-0.530583,-0.126590,2.746941,-9.153820,-7.517102,-6.132853,-5.089413,-4.519212,4.845834,1.956923,-6.270509,4.026124,9.836540,-5.519799,-1.128260,-9.089767,-8.724943,-2.917626,9.348576,-6.643788,-2.989234,1.958190,-8.289176,-0.801511,8.463514,3.478382,-3.750002,-4.798324,-1.560676,8.843782,-0.384663,4.328909,2.470548,3.595985,1.168692,-2.074308,-4.658180,-6.226778,1.256644,-1.338631,-5.544434,-4.428606,9.726282,-4.105732,7.646336,-4.629574,5.049625,-3.897531,-5.334833,-8.621370,3.860515,8.867495,-0.215611,-5.398767,-7.138746,-0.885390,-7.012521,8.826302,7.877395,-0.146659,-2.010865,1.715723,-5.945197,-8.471384,2.292549,-2.615229,4.520682,-5.382154,-1.853273,7.431811,9.931885,3.359790,-7.122600,2.865175,6.504518,8.761835,2.161148,1.255140,-1.152335,-5.706638,-0.938493,7.905572,-4.126771,-8.422039,-5.809802,-2.831303,2.740049,-8.159961,-1.759208,-8.711975,0.351459,0.537676,-1.375946,-8.314031,-8.351330,-1.676140,-2.394155,-5.777371,4.606257,8.509662,-5.773217,7.133613,7.596651,-5.679502,-1.977135,2.669659,-7.324516,-1.304792,-6.594816,7.149614,5.460453,9.326454,9.891273,-8.224378,-8.516657,9.937696,6.241469,2.881390,-1.356375,5.599037,-7.395797,-0.851389,1.816091,2.152741,1.051486,7.139567,-5.485053,-6.660880,-0.092743,-2.202256,-8.405135,-3.281131,-9.895366,3.729435,8.728360,9.355130,3.045953,-7.528031,-3.534705,-9.449514,-4.185379,-3.912427,0.270011,1.347069,-5.144090,-2.696089,4.670965,-4.689672,-5.823079,-9.228767,-4.049059,5.317140,9.050270,6.861601,5.886220,0.408494,8.498858,-9.985329,6.891405,-7.229687,2.287218,-8.185069,6.437476,2.566173,-8.259035,3.095435,1.238274,2.979118,-2.523208,2.489982,-8.163191,-2.449804,-1.473090,-0.979277,-2.671009,9.280305,-8.756788,-2.947799,0.664240,9.972049,4.894964,-5.629120,-9.832004,5.417403,-8.162100,-8.606941,9.770253,-1.418994,-7.271061,6.240395,-9.049724,-9.176615,8.555641,-3.704874,-3.147067,-3.647291,0.845090,6.587284,-6.958700,-5.260398,2.231872,-0.490032,8.816109,-0.813115,6.960523,-4.734249,1.844653,-7.470372,1.275683,3.033419,0.060453,2.145182,-3.152950,-2.036274,3.028848,-3.119332,2.314924,-7.044434,5.740646,-9.652828,-4.726229,-7.689388,-9.999781,-6.898708,-5.767336,0.946732,-5.962775,-9.632645,4.002653,9.925338,7.932572,9.835491,-3.156760,-3.910374,0.055584,5.257833,7.555672,8.423371,-5.466235,-5.936477,0.194846,-5.762984,-2.643620,-2.076701,8.694714,1.077282,6.386895,-0.873487,-6.006163,-0.288988,4.036821,4.944441,4.205069,-1.372373,7.627018,-5.879613,8.553339,-2.234492,7.503553,8.369923,-7.856644,-2.134885,-6.418265,-7.767838,2.411962,-3.223547,-8.223779,6.815925,-2.911593,0.505993,-7.370438,-9.890547,0.965449,-5.553263,0.448704,4.430358,-3.768408,-8.922715,-2.473129,6.322919,4.312573,3.737204,6.120660,4.481277,-2.332002,0.781814,3.314164,-4.714249,-5.694769,7.971494,4.688530,-5.118416,-6.501651,-3.122975,7.792046,-1.178623,3.726925,-0.324969,6.360822,-4.524916,-1.852309,-7.413654,9.251572,-3.453361,9.115846,8.074681,9.534209,-9.381887,-3.619088,-9.722322,-7.820244,-3.216921,-2.907794,9.752263], dtype = "float32")#candidate|6916|(975,)|const|float32
call_6915 = relay.TupleGetItem(func_4495_call(relay.reshape(const_6916.astype('float32'), [975,])), 0)
call_6917 = relay.TupleGetItem(func_4498_call(relay.reshape(const_6916.astype('float32'), [975,])), 0)
output = relay.Tuple([call_6883,call_6915,const_6916,])
output2 = relay.Tuple([call_6884,call_6917,const_6916,])
func_6919 = relay.Function([], output)
mod['func_6919'] = func_6919
mod = relay.transform.InferType()(mod)
mutated_mod['func_6919'] = func_6919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6919_call = mutated_mod.get_global_var('func_6919')
call_6920 = func_6919_call()
output = call_6920
func_6921 = relay.Function([], output)
mutated_mod['func_6921'] = func_6921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6483_call = mod.get_global_var('func_6483')
func_6485_call = mutated_mod.get_global_var('func_6485')
call_6949 = func_6483_call()
call_6950 = func_6483_call()
func_4752_call = mod.get_global_var('func_4752')
func_4753_call = mutated_mod.get_global_var('func_4753')
call_6956 = func_4752_call()
call_6957 = func_4752_call()
output = relay.Tuple([call_6949,call_6956,])
output2 = relay.Tuple([call_6950,call_6957,])
func_6969 = relay.Function([], output)
mod['func_6969'] = func_6969
mod = relay.transform.InferType()(mod)
mutated_mod['func_6969'] = func_6969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6969_call = mutated_mod.get_global_var('func_6969')
call_6970 = func_6969_call()
output = call_6970
func_6971 = relay.Function([], output)
mutated_mod['func_6971'] = func_6971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mod.get_global_var('func_2480')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_7015 = relay.TupleGetItem(func_2480_call(), 5)
call_7016 = relay.TupleGetItem(func_2482_call(), 5)
func_4407_call = mod.get_global_var('func_4407')
func_4409_call = mutated_mod.get_global_var('func_4409')
var_7037 = relay.var("var_7037", dtype = "float32", shape = (75,))#candidate|7037|(75,)|var|float32
call_7036 = func_4407_call(relay.reshape(var_7037.astype('float32'), [1, 5, 15]))
call_7038 = func_4407_call(relay.reshape(var_7037.astype('float32'), [1, 5, 15]))
func_5560_call = mod.get_global_var('func_5560')
func_5564_call = mutated_mod.get_global_var('func_5564')
var_7043 = relay.var("var_7043", dtype = "float32", shape = (432,))#candidate|7043|(432,)|var|float32
var_7044 = relay.var("var_7044", dtype = "uint32", shape = (945,))#candidate|7044|(945,)|var|uint32
call_7042 = relay.TupleGetItem(func_5560_call(relay.reshape(var_7043.astype('float32'), [12, 6, 6]), relay.reshape(var_7044.astype('uint32'), [945,]), ), 1)
call_7045 = relay.TupleGetItem(func_5564_call(relay.reshape(var_7043.astype('float32'), [12, 6, 6]), relay.reshape(var_7044.astype('uint32'), [945,]), ), 1)
func_6919_call = mod.get_global_var('func_6919')
func_6921_call = mutated_mod.get_global_var('func_6921')
call_7052 = relay.TupleGetItem(func_6919_call(), 0)
call_7053 = relay.TupleGetItem(func_6921_call(), 0)
output = relay.Tuple([call_7015,call_7036,var_7037,call_7042,var_7043,var_7044,call_7052,])
output2 = relay.Tuple([call_7016,call_7038,var_7037,call_7045,var_7043,var_7044,call_7053,])
func_7057 = relay.Function([var_7037,var_7043,var_7044,], output)
mod['func_7057'] = func_7057
mod = relay.transform.InferType()(mod)
var_7058 = relay.var("var_7058", dtype = "float32", shape = (75,))#candidate|7058|(75,)|var|float32
var_7059 = relay.var("var_7059", dtype = "float32", shape = (432,))#candidate|7059|(432,)|var|float32
var_7060 = relay.var("var_7060", dtype = "uint32", shape = (945,))#candidate|7060|(945,)|var|uint32
output = func_7057(var_7058,var_7059,var_7060,)
func_7061 = relay.Function([var_7058,var_7059,var_7060,], output)
mutated_mod['func_7061'] = func_7061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2209_call = mod.get_global_var('func_2209')
func_2210_call = mutated_mod.get_global_var('func_2210')
call_7073 = func_2209_call()
call_7074 = func_2209_call()
func_2129_call = mod.get_global_var('func_2129')
func_2131_call = mutated_mod.get_global_var('func_2131')
call_7089 = relay.TupleGetItem(func_2129_call(), 0)
call_7090 = relay.TupleGetItem(func_2131_call(), 0)
output = relay.Tuple([call_7073,call_7089,])
output2 = relay.Tuple([call_7074,call_7090,])
func_7100 = relay.Function([], output)
mod['func_7100'] = func_7100
mod = relay.transform.InferType()(mod)
output = func_7100()
func_7101 = relay.Function([], output)
mutated_mod['func_7101'] = func_7101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_7102 = func_3658_call()
call_7103 = func_3658_call()
func_826_call = mod.get_global_var('func_826')
func_830_call = mutated_mod.get_global_var('func_830')
const_7107 = relay.const([2.231369,9.570226,4.180067,-6.534998,2.679735,-0.138631,5.684387,6.851922,-6.043755,8.093417,-4.153740,7.237368,-6.599911,7.883947,7.102879,-3.765272,-7.057693,-0.079715,-2.754744,2.074739,-2.682298,-3.286426,-8.596037,7.161933,8.832252,9.139104,1.562819,-8.471459,3.124455,4.539201,3.529635,3.201703,0.655913,7.587827,-3.151415,-1.122168,-1.610880,2.927425,-2.446169,0.682518,1.751624,-6.333818,-7.449983,-5.631339,-6.670727,-6.547609,-1.147768,9.383786,2.335120,1.097580,-4.025537,1.199290,-5.461355,4.423784,0.509515,-9.757342,5.866012,3.262203,-8.800695,7.737713,-9.521047,-1.495115,5.316148,-6.784014,-5.998345,6.495015,6.656687,3.156622,3.634625,3.465552,-0.646638,7.877701,-6.826263,5.597260,7.620783,2.764558,-0.748811,-0.322018,-3.654057,1.854434,-7.616843,7.623847,5.140543,-1.508547,2.697583,8.014865,7.187973,-0.384854,2.775166,-4.158604,-6.846711,-9.427400,0.898881,2.040434,-7.257506,-5.251131], dtype = "float32")#candidate|7107|(96,)|const|float32
call_7106 = relay.TupleGetItem(func_826_call(relay.reshape(const_7107.astype('float32'), [4, 12, 2]), relay.reshape(const_7107.astype('float32'), [4, 12, 2]), ), 0)
call_7108 = relay.TupleGetItem(func_830_call(relay.reshape(const_7107.astype('float32'), [4, 12, 2]), relay.reshape(const_7107.astype('float32'), [4, 12, 2]), ), 0)
output = relay.Tuple([call_7102,call_7106,const_7107,])
output2 = relay.Tuple([call_7103,call_7108,const_7107,])
func_7128 = relay.Function([], output)
mod['func_7128'] = func_7128
mod = relay.transform.InferType()(mod)
mutated_mod['func_7128'] = func_7128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7128_call = mutated_mod.get_global_var('func_7128')
call_7129 = func_7128_call()
output = call_7129
func_7130 = relay.Function([], output)
mutated_mod['func_7130'] = func_7130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2164_call = mod.get_global_var('func_2164')
func_2165_call = mutated_mod.get_global_var('func_2165')
call_7172 = func_2164_call()
call_7173 = func_2164_call()
uop_7177 = relay.rsqrt(call_7172.astype('float64')) # shape=(12, 6, 6)
uop_7179 = relay.rsqrt(call_7173.astype('float64')) # shape=(12, 6, 6)
output = relay.Tuple([uop_7177,])
output2 = relay.Tuple([uop_7179,])
func_7180 = relay.Function([], output)
mod['func_7180'] = func_7180
mod = relay.transform.InferType()(mod)
mutated_mod['func_7180'] = func_7180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7180_call = mutated_mod.get_global_var('func_7180')
call_7181 = func_7180_call()
output = call_7181
func_7182 = relay.Function([], output)
mutated_mod['func_7182'] = func_7182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1492_call = mod.get_global_var('func_1492')
func_1493_call = mutated_mod.get_global_var('func_1493')
call_7278 = func_1492_call()
call_7279 = func_1492_call()
func_6862_call = mod.get_global_var('func_6862')
func_6863_call = mutated_mod.get_global_var('func_6863')
call_7282 = relay.TupleGetItem(func_6862_call(), 0)
call_7283 = relay.TupleGetItem(func_6863_call(), 0)
uop_7287 = relay.erf(call_7282.astype('float64')) # shape=(12, 6, 6)
uop_7289 = relay.erf(call_7283.astype('float64')) # shape=(12, 6, 6)
output = relay.Tuple([call_7278,uop_7287,])
output2 = relay.Tuple([call_7279,uop_7289,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

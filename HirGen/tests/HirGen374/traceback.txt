==========mod==========
#[version = "0.0.5"]
def @func_3728(%var_3703: Tensor[(16, 3, 4), float32]) -> (Tensor[(16, 3, 4), float32], Tensor[(12, 9, 4), int8], Tensor[(54, 2), int8], Tensor[(432), int8]) {
  %0 = cast(%var_3703, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(54, 2), int8] */, dtype="int8") /* ty=Tensor[(54, 2), int8] */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(432), int8] */, dtype="int8") /* ty=Tensor[(432), int8] */;
  %3 = reshape(%1, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int8] */;
  %4 = reshape(%2, newshape=[12, 9, 4]) /* ty=Tensor[(12, 9, 4), int8] */;
  %5 = sqrt(%0) /* ty=Tensor[(16, 3, 4), float32] */;
  %6 = @func_3265(%3, %4) /* ty=Tensor[(12, 9, 4), int8] */;
  (%5, %6, meta[relay.Constant][0] /* ty=Tensor[(54, 2), int8] */, meta[relay.Constant][1] /* ty=Tensor[(432), int8] */)
}

def @func_8641(%var_8604: Tensor[(3, 12, 9), float32], %var_8610: Tensor[(150), uint16], %var_8631: Tensor[(3, 12, 9), float32]) -> (Tensor[(5, 10, 3), uint16], Tensor[(150), uint16], Tensor[(16, 3, 4), float32], Tensor[(3, 12, 9), bool]) {
  %7 = cast(%var_8610, dtype="uint16") /* ty=Tensor[(150), uint16] */;
  %8 = cast(%var_8610, dtype="uint16") /* ty=Tensor[(150), uint16] */;
  %9 = reshape(%7, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
  %10 = reshape(%8, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
  %11 = @func_2487(%9, %10) /* ty=(Tensor[(5, 10, 3), uint16],) */;
  %12 = cast(meta[relay.Constant][2] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %13 = reshape(%12, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float32] */;
  %14 = @func_3728(%13) /* ty=(Tensor[(16, 3, 4), float32], Tensor[(12, 9, 4), int8], Tensor[(54, 2), int8], Tensor[(432), int8]) */;
  %15 = %14.0;
  %16 = cast(meta[relay.Constant][2] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %17 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(%15, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %20 = cast(%var_8604, dtype="float32") /* ty=Tensor[(3, 12, 9), float32] */;
  %21 = erf(%20) /* ty=Tensor[(3, 12, 9), float32] */;
  %22 = cast(%var_8631, dtype="bool") /* ty=Tensor[(3, 12, 9), bool] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%21, dtype="bool") /* ty=Tensor[(3, 12, 9), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %26 = %11.0;
  %27 = maximum(%18, %19) /* ty=Tensor[(16, 3, 4), float32] */;
  %28 = less(%24, %25) /* ty=Tensor[(3, 12, 9), bool] */;
  (%26, %var_8610, %27, %28)
}

def @func_4974(%var_4963: Tensor[(5, 15, 7), float32], %var_4968: Tensor[(192), float32]) -> (Tensor[(5, 15, 7), float32], Tensor[(54, 2), int8], Tensor[(192), float32]) {
  %29 = cast(%var_4963, dtype="float32") /* ty=Tensor[(5, 15, 7), float32] */;
  %30 = cast(%var_4968, dtype="float32") /* ty=Tensor[(192), float32] */;
  %31 = reshape(%30, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float32] */;
  %32 = @func_3728(%31) /* ty=(Tensor[(16, 3, 4), float32], Tensor[(12, 9, 4), int8], Tensor[(54, 2), int8], Tensor[(432), int8]) */;
  %33 = sqrt(%29) /* ty=Tensor[(5, 15, 7), float32] */;
  %34 = %32.2;
  (%33, %34, %var_4968)
}

def @func_3866(%var_3860: Tensor[(14, 6, 8), float32]) -> (Tensor[(14, 6, 8), float32],) {
  %35 = cast(%var_3860, dtype="float32") /* ty=Tensor[(14, 6, 8), float32] */;
  %36 = acosh(%35) /* ty=Tensor[(14, 6, 8), float32] */;
  (%36,)
}

def @func_601(%var_558: Tensor[(16, 1, 9), int32], %var_559: Tensor[(16, 16, 9), int32]) -> (Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(16, 16, 9), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32]) {
  %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %38 = reshape(%37, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %39 = cast(%var_558, dtype="int32") /* ty=Tensor[(16, 1, 9), int32] */;
  %40 = cast(%var_559, dtype="int32") /* ty=Tensor[(16, 16, 9), int32] */;
  %41 = logical_xor(%39, %40) /* ty=Tensor[(16, 16, 9), int32] */;
  %42 = cast(%41, dtype="int64") /* ty=Tensor[(16, 16, 9), int64] */;
  %43 = cast(%var_558, dtype="int64") /* ty=Tensor[(16, 1, 9), int64] */;
  %44 = cast(meta[relay.Constant][3] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %45 = reshape(%44, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %46 = cast(meta[relay.Constant][3] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %47 = reshape(%46, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %48 = @func_43(%38) /* ty=Tensor[(7, 10), float32] */;
  %49 = left_shift(%42, %43) /* ty=Tensor[(16, 16, 9), int64] */;
  %50 = @func_43(%45) /* ty=Tensor[(7, 10), float32] */;
  %51 = @func_43(%47) /* ty=Tensor[(7, 10), float32] */;
  (%48, meta[relay.Constant][3] /* ty=Tensor[(70), float32] */, %49, %50, %51)
}

def @func_5544(%var_5535: Tensor[(13, 11, 7), float64]) -> (Tensor[(13, 11, 7), float64],) {
  %52 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 11, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 1), float64] */;
  %53 = cast(%var_5535, dtype="float64") /* ty=Tensor[(13, 11, 7), float64] */;
  %54 = power(%52, %53) /* ty=Tensor[(13, 11, 7), float64] */;
  (%54,)
}

def @func_2980(%var_2972: Tensor[(6, 4, 14), uint8]) -> Tensor[(6, 4, 14), uint8] {
  %55 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 4, 14), uint8] */, dtype="uint8") /* ty=Tensor[(6, 4, 14), uint8] */;
  %56 = shape_of(%var_2972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%var_2972, dtype="uint8") /* ty=Tensor[(6, 4, 14), uint8] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%57, %58) /* ty=Tensor[(6, 4, 14), uint8] */
}

def @func_8750() -> Tensor[(15, 8, 11), float32] {
  %59 = @func_6912() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %59.0
}

def @func_8576() -> (Tensor[(15, 8, 11), float32],) {
  %60 = @func_7326() /* ty=Tensor[(15, 8, 11), float32] */;
  (%60,)
}

def @func_8413(%var_8274: Tensor[(360), float32], %var_8306: Tensor[(7, 10), float32], %var_8331: Tensor[(1, 56), float64], %var_8335: Tensor[(11, 56), float64], %var_8379: Tensor[(11, 56), float64], %var_8401: Tensor[(336, 1), uint8]) -> (Tensor[(15, 8, 11), float32], Tensor[(10, 12, 3), float32], Tensor[(360), float32], Tensor[(7, 10, 3), float64], Tensor[(15, 8, 11), bool], Tensor[(7, 10), float32], Tensor[(7, 10, 3), float64], Tensor[(11, 56), uint64], Tensor[(15, 8, 11), float64], Tensor[(2, 4, 7), bool], Tensor[(15, 8, 11), float32], Tensor[(11, 56), float32], Tensor[(6, 4, 14), uint8], Tensor[(336, 1), uint8]) {
  %61 = @func_6912() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %62 = cast(%var_8274, dtype="float32") /* ty=Tensor[(360), float32] */;
  %63 = reshape(%62, newshape=[10, 12, 3]) /* ty=Tensor[(10, 12, 3), float32] */;
  %64 = @func_3821(%63) /* ty=(Tensor[(10, 12, 3), float32],) */;
  %65 = %61.0;
  %66 = cast(%65, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %67 = cast(%var_8306, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
  %68 = reshape(%66, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), uint32] */;
  %69 = reshape(%67, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %70 = @func_6853(%68, %69) /* ty=(Tensor[(15, 8, 11), bool], Tensor[(15, 8, 11), bool], Tensor[(70), float32], Tensor[(150), uint16]) */;
  %71 = cast(%var_8331, dtype="uint64") /* ty=Tensor[(1, 56), uint64] */;
  %72 = cast(%var_8335, dtype="uint64") /* ty=Tensor[(11, 56), uint64] */;
  %73 = @func_6889() /* ty=(Tensor[(15, 8, 11), float64],) */;
  %74 = cast(%var_8331, dtype="float64") /* ty=Tensor[(1, 56), float64] */;
  %75 = reshape(%74, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), float64] */;
  %76 = @func_4652(%75) /* ty=Tensor[(2, 4, 7), float32] */;
  %77 = cast(%var_8331, dtype="bool") /* ty=Tensor[(1, 56), bool] */;
  %78 = shape_of(%76, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%76, dtype="bool") /* ty=Tensor[(2, 4, 7), bool] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %81 = @func_6798() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %82 = cast(%var_8331, dtype="uint64") /* ty=Tensor[(1, 56), uint64] */;
  %83 = cast(%var_8379, dtype="uint64") /* ty=Tensor[(11, 56), uint64] */;
  %84 = left_shift(%82, %83) /* ty=Tensor[(11, 56), uint64] */;
  %85 = cast(%84, dtype="float32") /* ty=Tensor[(11, 56), float32] */;
  %86 = cast(%var_8401, dtype="uint8") /* ty=Tensor[(336, 1), uint8] */;
  %87 = reshape(%86, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint8] */;
  %88 = %64.0;
  %89 = @func_8021() /* ty=Tensor[(7, 10, 3), float64] */;
  %90 = %70.0;
  %91 = @func_7784() /* ty=Tensor[(7, 10, 3), float64] */;
  %92 = add(%71, %72) /* ty=Tensor[(11, 56), uint64] */;
  %93 = %73.0;
  %94 = logical_and(%79, %80) /* ty=Tensor[(2, 4, 7), bool] */;
  %95 = %81.0;
  %96 = asinh(%85) /* ty=Tensor[(11, 56), float32] */;
  %97 = @func_2980(%87) /* ty=Tensor[(6, 4, 14), uint8] */;
  (%65, %88, %var_8274, %89, %90, %var_8306, %91, %92, %93, %94, %95, %96, %97, %var_8401)
}

def @func_6002(%var_5963: Tensor[(15, 8, 11), float64]) -> (Tensor[(15, 8, 11), float64], Tensor[(15, 8, 11), int16], Tensor[(9, 15, 3), bool], Tensor[(405), int32]) {
  %98 = @func_5925() /* ty=Tensor[(15, 8, 11), float64] */;
  %99 = cast(%var_5963, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%98, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %103 = cast(%98, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %104 = sqrt(%103) /* ty=Tensor[(15, 8, 11), float64] */;
  %105 = cast(%98, dtype="int16") /* ty=Tensor[(15, 8, 11), int16] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="int16") /* ty=Tensor[(15, 8, 11), int16] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %109 = cast(meta[relay.Constant][6] /* ty=Tensor[(405), int32] */, dtype="int32") /* ty=Tensor[(405), int32] */;
  %110 = reshape(%109, newshape=[9, 15, 3]) /* ty=Tensor[(9, 15, 3), int32] */;
  %111 = @func_5721(%110) /* ty=(Tensor[(9, 15, 3), bool],) */;
  %112 = mod(%101, %102) /* ty=Tensor[(15, 8, 11), float64] */;
  %113 = bitwise_xor(%107, %108) /* ty=Tensor[(15, 8, 11), int16] */;
  %114 = %111.0;
  (%112, %113, %114, meta[relay.Constant][6] /* ty=Tensor[(405), int32] */)
}

def @func_5760() -> (Tensor[(15, 8, 11), float32],) {
  %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(15, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
  %116 = sigmoid(%115) /* ty=Tensor[(15, 8, 11), float32] */;
  (%116,)
}

def @func_6631() -> (Tensor[(15, 8, 11), float32],) {
  %117 = @func_6405() /* ty=Tensor[(15, 8, 11), float32] */;
  (%117,)
}

def @func_8796() -> (Tensor[(7, 10, 3), float32],) {
  %118 = @func_7784() /* ty=Tensor[(7, 10, 3), float64] */;
  %119 = cast(%118, dtype="float32") /* ty=Tensor[(7, 10, 3), float32] */;
  %120 = tan(%119) /* ty=Tensor[(7, 10, 3), float32] */;
  (%120,)
}

def @func_2180(%var_2147: Tensor[(13, 6, 12), bool]) -> (Tensor[(13, 6, 12), bool], Tensor[(7, 10), float32], Tensor[(70), float32]) {
  %121 = cast(%var_2147, dtype="bool") /* ty=Tensor[(13, 6, 12), bool] */;
  %122 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(13, 6, 12), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 6, 12), bool] */, dtype="bool") /* ty=Tensor[(13, 6, 12), bool] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %125 = cast(meta[relay.Constant][9] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %126 = reshape(%125, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %127 = logical_and(%123, %124) /* ty=Tensor[(13, 6, 12), bool] */;
  %128 = @func_43(%126) /* ty=Tensor[(7, 10), float32] */;
  (%127, %128, meta[relay.Constant][9] /* ty=Tensor[(70), float32] */)
}

def @func_6889() -> (Tensor[(15, 8, 11), float64],) {
  %129 = @func_6357() /* ty=Tensor[(15, 8, 11), float64] */;
  (%129,)
}

def @func_4786(%var_4760: Tensor[(12, 9, 8), uint32], %var_4761: Tensor[(12, 9, 8), uint32]) -> (Tensor[(12, 9, 8), bool], Tensor[(8, 6, 6), float64], Tensor[(72, 4), int16]) {
  %130 = cast(%var_4761, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  %131 = shape_of(%var_4760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%var_4760, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %134 = cast(meta[relay.Constant][10] /* ty=Tensor[(72, 4), int16] */, dtype="int16") /* ty=Tensor[(72, 4), int16] */;
  %135 = cast(meta[relay.Constant][10] /* ty=Tensor[(72, 4), int16] */, dtype="int16") /* ty=Tensor[(72, 4), int16] */;
  %136 = reshape(%134, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), int16] */;
  %137 = reshape(%135, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), int16] */;
  %138 = @func_3328(%136, %137) /* ty=(Tensor[(8, 6, 6), int16], Tensor[(8, 6, 6), float64]) */;
  %139 = equal(%132, %133) /* ty=Tensor[(12, 9, 8), bool] */;
  %140 = %138.1;
  (%139, %140, meta[relay.Constant][10] /* ty=Tensor[(72, 4), int16] */)
}

def @func_4546(%var_4485: Tensor[(9, 4, 12), float32], %var_4493: Tensor[(144), int32]) -> (Tensor[(4, 5, 4), bool], Tensor[(80), bool], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(9, 4, 12), float32]) {
  %141 = cast(meta[relay.Constant][11] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %142 = cast(%var_4493, dtype="int32") /* ty=Tensor[(144), int32] */;
  %143 = cast(meta[relay.Constant][12] /* ty=Tensor[(2304), int32] */, dtype="int32") /* ty=Tensor[(2304), int32] */;
  %144 = reshape(%141, newshape=[4, 5, 4]) /* ty=Tensor[(4, 5, 4), bool] */;
  %145 = reshape(%142, newshape=[144]) /* ty=Tensor[(144), int32] */;
  %146 = reshape(%143, newshape=[2304]) /* ty=Tensor[(2304), int32] */;
  %147 = @func_1190(%144, %145, %146) /* ty=(Tensor[(4, 5, 4), bool], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(4, 5, 4), float32]) */;
  %148 = cast(%var_4485, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %149 = cosh(%148) /* ty=Tensor[(9, 4, 12), float32] */;
  %150 = cast(%149, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %151 = cos(%150) /* ty=Tensor[(9, 4, 12), float32] */;
  %152 = cast(%151, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %153 = acos(%152) /* ty=Tensor[(9, 4, 12), float32] */;
  %154 = cast(%153, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %155 = log10(%154) /* ty=Tensor[(9, 4, 12), float32] */;
  %156 = cast(%151, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %157 = shape_of(%155, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(%155, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %160 = %147.0;
  %161 = mod(%158, %159) /* ty=Tensor[(9, 4, 12), float32] */;
  (%160, meta[relay.Constant][11] /* ty=Tensor[(80), bool] */, %var_4493, meta[relay.Constant][12] /* ty=Tensor[(2304), int32] */, %161)
}

def @func_7559() -> (Tensor[(15, 8, 11), float32],) {
  %162 = @func_7496() /* ty=(Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32]) */;
  %163 = %162.2;
  (%163,)
}

def @func_7784() -> Tensor[(7, 10, 3), float64] {
  @func_6672() /* ty=Tensor[(7, 10, 3), float64] */
}

def @func_6798() -> (Tensor[(15, 8, 11), float32],) {
  %164 = @func_6241() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %165 = %164.0;
  (%165,)
}

def @func_5045(%var_5042: Tensor[(1, 5, 1), float64]) -> (Tensor[(1, 5, 1), float64],) {
  %166 = cast(%var_5042, dtype="float64") /* ty=Tensor[(1, 5, 1), float64] */;
  %167 = sinh(%166) /* ty=Tensor[(1, 5, 1), float64] */;
  (%167,)
}

def @func_3328(%var_3304: Tensor[(8, 6, 6), int16], %var_3320: Tensor[(8, 6, 6), int16]) -> (Tensor[(8, 6, 6), int16], Tensor[(8, 6, 6), float64]) {
  %168 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 6, 6), int16] */, dtype="int16") /* ty=Tensor[(8, 6, 6), int16] */;
  %169 = shape_of(%var_3304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%var_3304, dtype="int16") /* ty=Tensor[(8, 6, 6), int16] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %172 = cast(%var_3320, dtype="float64") /* ty=Tensor[(8, 6, 6), float64] */;
  %173 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(8, 6, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 6, 6), int16] */, dtype="float64") /* ty=Tensor[(8, 6, 6), float64] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %176 = subtract(%170, %171) /* ty=Tensor[(8, 6, 6), int16] */;
  %177 = mod(%174, %175) /* ty=Tensor[(8, 6, 6), float64] */;
  (%176, %177)
}

def @func_43(%var_38: Tensor[(7, 10), float32]) -> Tensor[(7, 10), float32] {
  %178 = cast(%var_38, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
  log2(%178) /* ty=Tensor[(7, 10), float32] */
}

def @func_4567(%var_4552: Tensor[(9, 9, 16), float64], %var_4553: Tensor[(9, 9, 16), float64]) -> Tensor[(9, 9, 16), uint32] {
  %179 = cast(%var_4553, dtype="float64") /* ty=Tensor[(9, 9, 16), float64] */;
  %180 = shape_of(%var_4552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %181 = cast(%var_4552, dtype="float64") /* ty=Tensor[(9, 9, 16), float64] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %183 = divide(%181, %182) /* ty=Tensor[(9, 9, 16), float64] */;
  %184 = cast(%var_4553, dtype="uint32") /* ty=Tensor[(9, 9, 16), uint32] */;
  %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%183, dtype="uint32") /* ty=Tensor[(9, 9, 16), uint32] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%186, %187) /* ty=Tensor[(9, 9, 16), uint32] */
}

def @func_8676() -> Tensor[(15, 8, 11), float64] {
  %188 = @func_7247() /* ty=(Tensor[(2304), int32], Tensor[(432), float32], Tensor[(4, 36), int32], Tensor[(15, 8, 11), float64], Tensor[(2, 7, 12), float64]) */;
  %188.3
}

def @func_6765(%var_6757: Tensor[(15, 8, 11), uint32]) -> (Tensor[(15, 8, 11), uint8],) {
  %189 = @func_6313() /* ty=Tensor[(15, 8, 11), uint32] */;
  %190 = cast(%var_6757, dtype="uint8") /* ty=Tensor[(15, 8, 11), uint8] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%189, dtype="uint8") /* ty=Tensor[(15, 8, 11), uint8] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %194 = left_shift(%192, %193) /* ty=Tensor[(15, 8, 11), uint8] */;
  (%194,)
}

def @func_2223(%var_2185: Tensor[(12, 8, 12), float64], %var_2194: Tensor[(80), bool]) -> (Tensor[(4, 5, 4), bool], Tensor[(80), bool], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(16, 5, 3), int16], Tensor[(240), int16], Tensor[(12, 8, 12), float32], Tensor[(1760), float64], Tensor[(1, 48), int16], Tensor[(1760), float64]) {
  %195 = cast(%var_2194, dtype="bool") /* ty=Tensor[(80), bool] */;
  %196 = cast(meta[relay.Constant][14] /* ty=Tensor[(144), int32] */, dtype="int32") /* ty=Tensor[(144), int32] */;
  %197 = cast(meta[relay.Constant][15] /* ty=Tensor[(2304), int32] */, dtype="int32") /* ty=Tensor[(2304), int32] */;
  %198 = reshape(%195, newshape=[4, 5, 4]) /* ty=Tensor[(4, 5, 4), bool] */;
  %199 = reshape(%196, newshape=[144]) /* ty=Tensor[(144), int32] */;
  %200 = reshape(%197, newshape=[2304]) /* ty=Tensor[(2304), int32] */;
  %201 = @func_1190(%198, %199, %200) /* ty=(Tensor[(4, 5, 4), bool], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(4, 5, 4), float32]) */;
  %202 = cast(meta[relay.Constant][16] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %203 = cast(meta[relay.Constant][16] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %204 = reshape(%202, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), int16] */;
  %205 = reshape(%203, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), int16] */;
  %206 = @func_1254(%204, %205) /* ty=(Tensor[(16, 5, 3), int16], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */;
  %207 = cast(%var_2185, dtype="float64") /* ty=Tensor[(12, 8, 12), float64] */;
  %208 = log10(%207) /* ty=Tensor[(12, 8, 12), float64] */;
  %209 = cast(%208, dtype="float32") /* ty=Tensor[(12, 8, 12), float32] */;
  %210 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 48), int16] */, dtype="int16") /* ty=Tensor[(1, 48), int16] */;
  %211 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 48), int16] */, dtype="int16") /* ty=Tensor[(1, 48), int16] */;
  %212 = cast(meta[relay.Constant][18] /* ty=Tensor[(1760), float64] */, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %213 = reshape(%210, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %214 = reshape(%211, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %215 = reshape(%212, newshape=[1760]) /* ty=Tensor[(1760), float64] */;
  %216 = @func_903(%213, %214, %215) /* ty=(Tensor[(2, 12, 2), float32], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */;
  %217 = %201.0;
  %218 = %206.0;
  %219 = cosh(%209) /* ty=Tensor[(12, 8, 12), float32] */;
  %220 = %216.2;
  (%217, %var_2194, meta[relay.Constant][14] /* ty=Tensor[(144), int32] */, meta[relay.Constant][15] /* ty=Tensor[(2304), int32] */, %218, meta[relay.Constant][16] /* ty=Tensor[(240), int16] */, %219, %220, meta[relay.Constant][17] /* ty=Tensor[(1, 48), int16] */, meta[relay.Constant][18] /* ty=Tensor[(1760), float64] */)
}

def @func_6085(%var_6048: int8, %var_6049: Tensor[(15, 1, 7), int8], %var_6074: Tensor[(112), float64]) -> (Tensor[(15, 1, 7), int8], Tensor[(15, 1, 7), float64], Tensor[(7, 9), float64], Tensor[(112), float64]) {
  %221 = cast(%var_6048, dtype="int8") /* ty=int8 */;
  %222 = cast(%var_6049, dtype="int8") /* ty=Tensor[(15, 1, 7), int8] */;
  %223 = cast(%var_6049, dtype="float64") /* ty=Tensor[(15, 1, 7), float64] */;
  %224 = cast(%var_6074, dtype="float64") /* ty=Tensor[(112), float64] */;
  %225 = reshape(%224, newshape=[8, 1, 14]) /* ty=Tensor[(8, 1, 14), float64] */;
  %226 = @func_4825(%225) /* ty=(Tensor[(8, 1, 14), float64], Tensor[(150, 1), uint16], Tensor[(7, 9), float64], Tensor[(150), uint16], Tensor[(2304, 1), int32], Tensor[(8, 6, 6), float64], Tensor[(288), int16], Tensor[(11, 10, 16), float64], Tensor[(48), int16], Tensor[(1760), float64]) */;
  %227 = left_shift(%221, %222) /* ty=Tensor[(15, 1, 7), int8] */;
  %228 = atan(%223) /* ty=Tensor[(15, 1, 7), float64] */;
  %229 = %226.2;
  (%227, %228, %229, %var_6074)
}

def @func_2487(%var_2474: Tensor[(5, 10, 3), uint16], %var_2475: Tensor[(5, 10, 3), uint16]) -> (Tensor[(5, 10, 3), uint16],) {
  %230 = cast(%var_2475, dtype="uint16") /* ty=Tensor[(5, 10, 3), uint16] */;
  %231 = shape_of(%var_2474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%var_2474, dtype="uint16") /* ty=Tensor[(5, 10, 3), uint16] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %234 = right_shift(%232, %233) /* ty=Tensor[(5, 10, 3), uint16] */;
  (%234,)
}

def @func_4825(%var_4794: Tensor[(8, 1, 14), float64]) -> (Tensor[(8, 1, 14), float64], Tensor[(150, 1), uint16], Tensor[(7, 9), float64], Tensor[(150), uint16], Tensor[(2304, 1), int32], Tensor[(8, 6, 6), float64], Tensor[(288), int16], Tensor[(11, 10, 16), float64], Tensor[(48), int16], Tensor[(1760), float64]) {
  %235 = cast(%var_4794, dtype="float64") /* ty=Tensor[(8, 1, 14), float64] */;
  %236 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 9), float64] */, dtype="float64") /* ty=Tensor[(7, 9), float64] */;
  %237 = cast(meta[relay.Constant][20] /* ty=Tensor[(150), uint16] */, dtype="uint16") /* ty=Tensor[(150), uint16] */;
  %238 = cast(meta[relay.Constant][21] /* ty=Tensor[(2304, 1), int32] */, dtype="int32") /* ty=Tensor[(2304, 1), int32] */;
  %239 = reshape(%236, newshape=[9, 7]) /* ty=Tensor[(9, 7), float64] */;
  %240 = reshape(%237, newshape=[150, 1]) /* ty=Tensor[(150, 1), uint16] */;
  %241 = reshape(%238, newshape=[2304]) /* ty=Tensor[(2304), int32] */;
  %242 = @func_3670(%239, %240, %241) /* ty=(Tensor[(9, 7), float64], Tensor[(5, 10, 3), uint16], Tensor[(150, 1), uint16], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32]) */;
  %243 = cast(meta[relay.Constant][22] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %244 = cast(meta[relay.Constant][22] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %245 = reshape(%243, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), int16] */;
  %246 = reshape(%244, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), int16] */;
  %247 = @func_3328(%245, %246) /* ty=(Tensor[(8, 6, 6), int16], Tensor[(8, 6, 6), float64]) */;
  %248 = cast(meta[relay.Constant][23] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %249 = cast(meta[relay.Constant][23] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %250 = cast(meta[relay.Constant][24] /* ty=Tensor[(1760), float64] */, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %251 = reshape(%248, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %252 = reshape(%249, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %253 = reshape(%250, newshape=[1760]) /* ty=Tensor[(1760), float64] */;
  %254 = @func_903(%251, %252, %253) /* ty=(Tensor[(2, 12, 2), float32], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */;
  %255 = acos(%235) /* ty=Tensor[(8, 1, 14), float64] */;
  %256 = %242.2;
  %257 = %247.1;
  %258 = %254.1;
  (%255, %256, meta[relay.Constant][19] /* ty=Tensor[(7, 9), float64] */, meta[relay.Constant][20] /* ty=Tensor[(150), uint16] */, meta[relay.Constant][21] /* ty=Tensor[(2304, 1), int32] */, %257, meta[relay.Constant][22] /* ty=Tensor[(288), int16] */, %258, meta[relay.Constant][23] /* ty=Tensor[(48), int16] */, meta[relay.Constant][24] /* ty=Tensor[(1760), float64] */)
}

def @func_6104() -> Tensor[(15, 8, 11), float64] {
  @func_5925() /* ty=Tensor[(15, 8, 11), float64] */
}

def @func_7046() -> Tensor[(15, 8, 11), float64] {
  %259 = @func_6563() /* ty=(Tensor[(15, 8, 11), float64],) */;
  %259.0
}

def @func_6154(%var_6142: Tensor[(15, 8, 11), float64]) -> (Tensor[(15, 8, 11), int16], Tensor[(150), uint16], Tensor[(4, 28), float64]) {
  %260 = @func_5925() /* ty=Tensor[(15, 8, 11), float64] */;
  %261 = cast(%var_6142, dtype="int16") /* ty=Tensor[(15, 8, 11), int16] */;
  %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%260, dtype="int16") /* ty=Tensor[(15, 8, 11), int16] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %265 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 28), float64] */, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %266 = reshape(%265, newshape=[8, 1, 14]) /* ty=Tensor[(8, 1, 14), float64] */;
  %267 = @func_4825(%266) /* ty=(Tensor[(8, 1, 14), float64], Tensor[(150, 1), uint16], Tensor[(7, 9), float64], Tensor[(150), uint16], Tensor[(2304, 1), int32], Tensor[(8, 6, 6), float64], Tensor[(288), int16], Tensor[(11, 10, 16), float64], Tensor[(48), int16], Tensor[(1760), float64]) */;
  %268 = maximum(%263, %264) /* ty=Tensor[(15, 8, 11), int16] */;
  %269 = %267.3;
  (%268, %269, meta[relay.Constant][25] /* ty=Tensor[(4, 28), float64] */)
}

def @func_7861(%var_7835: Tensor[(7, 10, 3), float64], %var_7851: Tensor[(2, 660), float32]) -> (Tensor[(7, 10, 3), uint32], Tensor[(1760), float64], Tensor[(240), int16], Tensor[(15, 8, 11), int64], Tensor[(2, 660), float32]) {
  %270 = @func_7540() /* ty=Tensor[(7, 10, 3), float64] */;
  %271 = cast(%var_7835, dtype="uint32") /* ty=Tensor[(7, 10, 3), uint32] */;
  %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%270, dtype="uint32") /* ty=Tensor[(7, 10, 3), uint32] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %275 = cast(meta[relay.Constant][26] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %276 = cast(meta[relay.Constant][26] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %277 = reshape(%275, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), int16] */;
  %278 = reshape(%276, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), int16] */;
  %279 = @func_1254(%277, %278) /* ty=(Tensor[(16, 5, 3), int16], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */;
  %280 = cast(%var_7851, dtype="float32") /* ty=Tensor[(2, 660), float32] */;
  %281 = reshape(%280, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), float32] */;
  %282 = @func_6480(%281) /* ty=(Tensor[(15, 8, 11), int64],) */;
  %283 = bitwise_xor(%273, %274) /* ty=Tensor[(7, 10, 3), uint32] */;
  %284 = %279.2;
  %285 = %282.0;
  (%283, %284, meta[relay.Constant][26] /* ty=Tensor[(240), int16] */, %285, %var_7851)
}

def @func_3821(%var_3814: Tensor[(10, 12, 3), float32]) -> (Tensor[(10, 12, 3), float32],) {
  %286 = cast(meta[relay.Constant][27] /* ty=Tensor[(10, 12, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 12, 3), float32] */;
  %287 = shape_of(%var_3814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%var_3814, dtype="float32") /* ty=Tensor[(10, 12, 3), float32] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %290 = power(%288, %289) /* ty=Tensor[(10, 12, 3), float32] */;
  (%290,)
}

def @func_8490(%var_8480: Tensor[(5, 11, 14), uint64], %var_8481: Tensor[(5, 11, 14), uint64]) -> Tensor[(5, 11, 14), bool] {
  %291 = cast(%var_8481, dtype="bool") /* ty=Tensor[(5, 11, 14), bool] */;
  %292 = shape_of(%var_8480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%var_8480, dtype="bool") /* ty=Tensor[(5, 11, 14), bool] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%293, %294) /* ty=Tensor[(5, 11, 14), bool] */
}

def @func_5800(%var_5765: Tensor[(15, 8, 11), float32], %var_5772: Tensor[(70), float32], %var_5796: Tensor[(5, 30), uint16]) -> (Tensor[(15, 8, 11), bool], Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(8, 6, 6), int16], uint8, Tensor[(16), uint8], Tensor[(5, 30), uint16], Tensor[(360), float32], Tensor[(2, 144), int16]) {
  %295 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %296 = %295.0;
  %297 = cast(%var_5765, dtype="bool") /* ty=Tensor[(15, 8, 11), bool] */;
  %298 = shape_of(%296, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%296, dtype="bool") /* ty=Tensor[(15, 8, 11), bool] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %301 = cast(%var_5772, dtype="float32") /* ty=Tensor[(70), float32] */;
  %302 = reshape(%301, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %303 = cast(meta[relay.Constant][28] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %304 = cast(meta[relay.Constant][29] /* ty=Tensor[(16), uint8] */, dtype="uint8") /* ty=Tensor[(16), uint8] */;
  %305 = cast(%var_5796, dtype="uint16") /* ty=Tensor[(5, 30), uint16] */;
  %306 = cast(meta[relay.Constant][30] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %307 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 144), int16] */, dtype="int16") /* ty=Tensor[(2, 144), int16] */;
  %308 = reshape(%303, newshape=[]) /* ty=uint8 */;
  %309 = reshape(%304, newshape=[1, 1, 16]) /* ty=Tensor[(1, 1, 16), uint8] */;
  %310 = reshape(%305, newshape=[150]) /* ty=Tensor[(150), uint16] */;
  %311 = reshape(%306, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %312 = reshape(%307, newshape=[288]) /* ty=Tensor[(288), int16] */;
  %313 = @func_4955(%308, %309, %310, %311, %312) /* ty=(Tensor[(1, 1, 16), uint8], Tensor[(5, 10, 3), uint16], Tensor[(150), uint16], Tensor[(10, 12, 3), float32], Tensor[(360), float32], Tensor[(8, 6, 6), int16], Tensor[(288), int16]) */;
  %314 = greater(%299, %300) /* ty=Tensor[(15, 8, 11), bool] */;
  %315 = @func_43(%302) /* ty=Tensor[(7, 10), float32] */;
  %316 = %313.5;
  (%314, %315, %var_5772, %316, meta[relay.Constant][28] /* ty=uint8 */, meta[relay.Constant][29] /* ty=Tensor[(16), uint8] */, %var_5796, meta[relay.Constant][30] /* ty=Tensor[(360), float32] */, meta[relay.Constant][31] /* ty=Tensor[(2, 144), int16] */)
}

def @func_5925() -> Tensor[(15, 8, 11), float64] {
  %317 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %318 = %317.0;
  %319 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 8, 11), float32] */, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%318, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%321, %322) /* ty=Tensor[(15, 8, 11), float64] */
}

def @func_903(%var_874: Tensor[(2, 12, 2), int16], %var_875: Tensor[(2, 12, 2), int16], %var_892: Tensor[(1760), float64]) -> (Tensor[(2, 12, 2), float32], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) {
  %323 = cast(%var_875, dtype="float32") /* ty=Tensor[(2, 12, 2), float32] */;
  %324 = asinh(%323) /* ty=Tensor[(2, 12, 2), float32] */;
  %325 = cast(%var_875, dtype="int16") /* ty=Tensor[(2, 12, 2), int16] */;
  %326 = shape_of(%var_874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%var_874, dtype="int16") /* ty=Tensor[(2, 12, 2), int16] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %329 = bitwise_and(%327, %328) /* ty=Tensor[(2, 12, 2), int16] */;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(2, 12, 2), float32] */;
  %331 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%324, dtype="float32") /* ty=Tensor[(2, 12, 2), float32] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %334 = cast(%var_892, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %335 = reshape(%334, newshape=[11, 10, 16]) /* ty=Tensor[(11, 10, 16), float64] */;
  %336 = mod(%332, %333) /* ty=Tensor[(2, 12, 2), float32] */;
  %337 = @func_497(%335) /* ty=Tensor[(11, 10, 16), float64] */;
  (%336, %337, %var_892)
}

def @func_7750(%var_7716: Tensor[(7, 6, 14), uint8], %var_7733: Tensor[(1760), float64], %var_7734: Tensor[(360), float32]) -> (Tensor[(7, 6, 14), bool], Tensor[(15, 8, 11), uint8], Tensor[(1320), uint32], Tensor[(7, 10), float32], Tensor[(1040), float32], Tensor[(48), int16], Tensor[(1760), float64], Tensor[(360), float32], Tensor[(7, 6, 14), float32], Tensor[(7, 6, 14), float64]) {
  %338 = cast(%var_7716, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %339 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(7, 6, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %340 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 6, 14), uint8] */, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %342 = cast(meta[relay.Constant][34] /* ty=Tensor[(1320), uint32] */, dtype="uint32") /* ty=Tensor[(1320), uint32] */;
  %343 = reshape(%342, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), uint32] */;
  %344 = @func_6765(%343) /* ty=(Tensor[(15, 8, 11), uint8],) */;
  %345 = cast(meta[relay.Constant][35] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %346 = cast(meta[relay.Constant][36] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %347 = cast(%var_7733, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %348 = cast(%var_7734, dtype="float32") /* ty=Tensor[(360), float32] */;
  %349 = reshape(%345, newshape=[1040]) /* ty=Tensor[(1040), float32] */;
  %350 = reshape(%346, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %351 = reshape(%347, newshape=[1760]) /* ty=Tensor[(1760), float64] */;
  %352 = reshape(%348, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %353 = @func_7004(%349, %350, %351, %352) /* ty=(Tensor[(15, 8, 11), float32], Tensor[(7, 10), float32], Tensor[(112), int64], Tensor[(1040), float32], Tensor[(7, 10), float32], Tensor[(1760), float64], Tensor[(48), int16], Tensor[(1760), float64], Tensor[(10, 12, 3), float32], Tensor[(360), float32]) */;
  %354 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 6, 14), uint8] */, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %355 = shape_of(%var_7716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%var_7716, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %358 = less(%356, %357) /* ty=Tensor[(7, 6, 14), bool] */;
  %359 = cast(%358, dtype="float32") /* ty=Tensor[(7, 6, 14), float32] */;
  %360 = cast(%var_7716, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
  %361 = less_equal(%340, %341) /* ty=Tensor[(7, 6, 14), bool] */;
  %362 = %344.0;
  %363 = %353.1;
  %364 = atanh(%359) /* ty=Tensor[(7, 6, 14), float32] */;
  %365 = asin(%360) /* ty=Tensor[(7, 6, 14), float64] */;
  (%361, %362, meta[relay.Constant][34] /* ty=Tensor[(1320), uint32] */, %363, meta[relay.Constant][35] /* ty=Tensor[(1040), float32] */, meta[relay.Constant][36] /* ty=Tensor[(48), int16] */, %var_7733, %var_7734, %364, %365)
}

def @func_8021() -> Tensor[(7, 10, 3), float64] {
  @func_6672() /* ty=Tensor[(7, 10, 3), float64] */
}

def @func_6672() -> Tensor[(7, 10, 3), float64] {
  %366 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 3), float64] */;
  %367 = log2(%366) /* ty=Tensor[(7, 10, 3), float64] */;
  %368 = cast(%367, dtype="float64") /* ty=Tensor[(7, 10, 3), float64] */;
  acos(%368) /* ty=Tensor[(7, 10, 3), float64] */
}

def @func_2567(%var_2537: int16, %var_2538: Tensor[(10, 14, 16), int16]) -> (Tensor[(10, 14, 16), bool], Tensor[(10, 14, 16), float64]) {
  %369 = cast(%var_2537, dtype="bool") /* ty=bool */;
  %370 = cast(%var_2538, dtype="bool") /* ty=Tensor[(10, 14, 16), bool] */;
  %371 = cast(%var_2537, dtype="float64") /* ty=float64 */;
  %372 = cast(%var_2538, dtype="float64") /* ty=Tensor[(10, 14, 16), float64] */;
  %373 = greater(%369, %370) /* ty=Tensor[(10, 14, 16), bool] */;
  %374 = divide(%371, %372) /* ty=Tensor[(10, 14, 16), float64] */;
  (%373, %374)
}

def @func_8695() -> (Tensor[(15, 8, 11), float64],) {
  %375 = @func_5925() /* ty=Tensor[(15, 8, 11), float64] */;
  (%375,)
}

def @func_1026(%var_978: Tensor[(14, 4, 2), int64], %var_979: Tensor[(14, 4, 2), int64], %var_1017: Tensor[(1040), float32]) -> (Tensor[(14, 4, 2), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(13, 8, 10), float32], Tensor[(1040), float32], Tensor[(7, 10), float32]) {
  %376 = cast(%var_979, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %377 = cosh(%376) /* ty=Tensor[(14, 4, 2), float64] */;
  %378 = cast(%var_979, dtype="int64") /* ty=Tensor[(14, 4, 2), int64] */;
  %379 = shape_of(%var_978, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%var_978, dtype="int64") /* ty=Tensor[(14, 4, 2), int64] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %382 = left_shift(%380, %381) /* ty=Tensor[(14, 4, 2), int64] */;
  %383 = cast(%382, dtype="int64") /* ty=Tensor[(14, 4, 2), int64] */;
  %384 = shape_of(%377, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%377, dtype="int64") /* ty=Tensor[(14, 4, 2), int64] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %387 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
  %388 = reshape(%387, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %389 = @func_43(%388) /* ty=Tensor[(7, 10), float32] */;
  %390 = cast(%389, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
  %391 = reshape(%390, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %392 = cast(%var_1017, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %393 = reshape(%392, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float32] */;
  %394 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
  %395 = reshape(%394, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %396 = subtract(%385, %386) /* ty=Tensor[(14, 4, 2), int64] */;
  %397 = @func_43(%391) /* ty=Tensor[(7, 10), float32] */;
  %398 = @func_68(%393) /* ty=Tensor[(13, 8, 10), float32] */;
  %399 = @func_43(%395) /* ty=Tensor[(7, 10), float32] */;
  (%396, %389, meta[relay.Constant][38] /* ty=Tensor[(7, 10), float32] */, %397, %398, %var_1017, %399)
}

def @func_6124(%var_6106: Tensor[(13, 14, 3), float64], %var_6116: Tensor[(1001), float64]) -> (Tensor[(13, 14, 3), float64], Tensor[(13, 11, 7), float64], Tensor[(1001), float64]) {
  %400 = cast(%var_6106, dtype="float64") /* ty=Tensor[(13, 14, 3), float64] */;
  %401 = cast(%var_6116, dtype="float64") /* ty=Tensor[(1001), float64] */;
  %402 = reshape(%401, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), float64] */;
  %403 = @func_5544(%402) /* ty=(Tensor[(13, 11, 7), float64],) */;
  %404 = rsqrt(%400) /* ty=Tensor[(13, 14, 3), float64] */;
  %405 = %403.0;
  (%404, %405, %var_6116)
}

def @func_6357() -> Tensor[(15, 8, 11), float64] {
  %406 = @func_5925() /* ty=Tensor[(15, 8, 11), float64] */;
  %407 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %408 = shape_of(%406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%406, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%409, %410) /* ty=Tensor[(15, 8, 11), float64] */
}

def @func_5202(%var_5196: Tensor[(6, 1, 7), float64]) -> (Tensor[(6, 1, 7), float64],) {
  %411 = cast(%var_5196, dtype="float64") /* ty=Tensor[(6, 1, 7), float64] */;
  %412 = atan(%411) /* ty=Tensor[(6, 1, 7), float64] */;
  (%412,)
}

def @func_3265(%var_3236: Tensor[(12, 9, 1), int8], %var_3237: Tensor[(12, 9, 4), int8]) -> Tensor[(12, 9, 4), int8] {
  %413 = cast(%var_3236, dtype="int8") /* ty=Tensor[(12, 9, 1), int8] */;
  %414 = cast(%var_3237, dtype="int8") /* ty=Tensor[(12, 9, 4), int8] */;
  bitwise_or(%413, %414) /* ty=Tensor[(12, 9, 4), int8] */
}

def @func_7247() -> (Tensor[(2304), int32], Tensor[(432), float32], Tensor[(4, 36), int32], Tensor[(15, 8, 11), float64], Tensor[(2, 7, 12), float64]) {
  %415 = cast(meta[relay.Constant][40] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %416 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 36), int32] */, dtype="int32") /* ty=Tensor[(4, 36), int32] */;
  %417 = reshape(%415, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), float32] */;
  %418 = reshape(%416, newshape=[144]) /* ty=Tensor[(144), int32] */;
  %419 = @func_4546(%417, %418) /* ty=(Tensor[(4, 5, 4), bool], Tensor[(80), bool], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(9, 4, 12), float32]) */;
  %420 = @func_6563() /* ty=(Tensor[(15, 8, 11), float64],) */;
  %421 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 7, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 7, 12), float64] */;
  %422 = atan(%421) /* ty=Tensor[(2, 7, 12), float64] */;
  %423 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 7, 12), float64] */, dtype="int16") /* ty=Tensor[(2, 7, 12), int16] */;
  %424 = shape_of(%422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %425 = cast(%422, dtype="int16") /* ty=Tensor[(2, 7, 12), int16] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %427 = minimum(%425, %426) /* ty=Tensor[(2, 7, 12), int16] */;
  %428 = cast(%427, dtype="float64") /* ty=Tensor[(2, 7, 12), float64] */;
  %429 = %419.3;
  %430 = %420.0;
  %431 = sin(%428) /* ty=Tensor[(2, 7, 12), float64] */;
  (%429, meta[relay.Constant][40] /* ty=Tensor[(432), float32] */, meta[relay.Constant][41] /* ty=Tensor[(4, 36), int32] */, %430, %431)
}

def @func_6563() -> (Tensor[(15, 8, 11), float64],) {
  %432 = @func_6104() /* ty=Tensor[(15, 8, 11), float64] */;
  (%432,)
}

def @func_497(%var_484: Tensor[(11, 10, 16), float64]) -> Tensor[(11, 10, 16), float64] {
  %433 = cast(3.97611f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %434 = cast(%var_484, dtype="float64") /* ty=Tensor[(11, 10, 16), float64] */;
  mod(%433, %434) /* ty=Tensor[(11, 10, 16), float64] */
}

def @func_6480(%var_6469: Tensor[(15, 8, 11), float32]) -> (Tensor[(15, 8, 11), int64],) {
  %435 = @func_6241() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %436 = %435.0;
  %437 = cast(%var_6469, dtype="int64") /* ty=Tensor[(15, 8, 11), int64] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%436, dtype="int64") /* ty=Tensor[(15, 8, 11), int64] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %441 = bitwise_and(%439, %440) /* ty=Tensor[(15, 8, 11), int64] */;
  (%441,)
}

def @func_7443(%var_7431: Tensor[(10, 7, 1), float32], %var_7435: Tensor[(12, 4), int16], %var_7436: Tensor[(1760), float64]) -> (Tensor[(10, 7, 1), float32], Tensor[(1760), float64], Tensor[(12, 4), int16], Tensor[(1760), float64]) {
  %442 = cast(%var_7431, dtype="float32") /* ty=Tensor[(10, 7, 1), float32] */;
  %443 = cast(%var_7435, dtype="int16") /* ty=Tensor[(12, 4), int16] */;
  %444 = cast(%var_7435, dtype="int16") /* ty=Tensor[(12, 4), int16] */;
  %445 = cast(%var_7436, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %446 = reshape(%443, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %447 = reshape(%444, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %448 = reshape(%445, newshape=[1760]) /* ty=Tensor[(1760), float64] */;
  %449 = @func_903(%446, %447, %448) /* ty=(Tensor[(2, 12, 2), float32], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */;
  %450 = acosh(%442) /* ty=Tensor[(10, 7, 1), float32] */;
  %451 = %449.2;
  (%450, %451, %var_7435, %var_7436)
}

def @func_5822(%var_5806: Tensor[(2, 8, 2), float32], %var_5813: Tensor[(1320), float32], %var_5814: Tensor[(70), float32], %var_5815: Tensor[(25, 6), uint16]) -> (Tensor[(2, 8, 2), float32], Tensor[(70), float32], Tensor[(1320), float32], Tensor[(70), float32], Tensor[(25, 6), uint16]) {
  %452 = cast(%var_5806, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %453 = cast(%var_5813, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %454 = cast(%var_5814, dtype="float32") /* ty=Tensor[(70), float32] */;
  %455 = cast(%var_5815, dtype="uint16") /* ty=Tensor[(25, 6), uint16] */;
  %456 = reshape(%453, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), float32] */;
  %457 = reshape(%454, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %458 = reshape(%455, newshape=[5, 30]) /* ty=Tensor[(5, 30), uint16] */;
  %459 = @func_5800(%456, %457, %458) /* ty=(Tensor[(15, 8, 11), bool], Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(8, 6, 6), int16], uint8, Tensor[(16), uint8], Tensor[(5, 30), uint16], Tensor[(360), float32], Tensor[(2, 144), int16]) */;
  %460 = log(%452) /* ty=Tensor[(2, 8, 2), float32] */;
  %461 = %459.2;
  (%460, %461, %var_5813, %var_5814, %var_5815)
}

def @func_6853(%var_6839: Tensor[(15, 8, 11), uint32], %var_6849: Tensor[(70), float32]) -> (Tensor[(15, 8, 11), bool], Tensor[(15, 8, 11), bool], Tensor[(70), float32], Tensor[(150), uint16]) {
  %462 = @func_6313() /* ty=Tensor[(15, 8, 11), uint32] */;
  %463 = cast(%var_6839, dtype="bool") /* ty=Tensor[(15, 8, 11), bool] */;
  %464 = shape_of(%462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%462, dtype="bool") /* ty=Tensor[(15, 8, 11), bool] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %467 = not_equal(%465, %466) /* ty=Tensor[(15, 8, 11), bool] */;
  %468 = cast(%467, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
  %469 = cast(%var_6849, dtype="float32") /* ty=Tensor[(70), float32] */;
  %470 = cast(meta[relay.Constant][43] /* ty=Tensor[(150), uint16] */, dtype="uint16") /* ty=Tensor[(150), uint16] */;
  %471 = reshape(%468, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), float32] */;
  %472 = reshape(%469, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %473 = reshape(%470, newshape=[5, 30]) /* ty=Tensor[(5, 30), uint16] */;
  %474 = @func_5800(%471, %472, %473) /* ty=(Tensor[(15, 8, 11), bool], Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(8, 6, 6), int16], uint8, Tensor[(16), uint8], Tensor[(5, 30), uint16], Tensor[(360), float32], Tensor[(2, 144), int16]) */;
  %475 = %474.0;
  (%467, %475, %var_6849, meta[relay.Constant][43] /* ty=Tensor[(150), uint16] */)
}

def @func_7458(%var_7454: Tensor[(10, 2, 11), uint8]) -> Tensor[(10, 2, 11), bool] {
  %476 = cast(meta[relay.Constant][44] /* ty=Tensor[(10, 2, 1), uint8] */, dtype="bool") /* ty=Tensor[(10, 2, 1), bool] */;
  %477 = cast(%var_7454, dtype="bool") /* ty=Tensor[(10, 2, 11), bool] */;
  greater_equal(%476, %477) /* ty=Tensor[(10, 2, 11), bool] */
}

def @func_6313() -> Tensor[(15, 8, 11), uint32] {
  %478 = @func_5925() /* ty=Tensor[(15, 8, 11), float64] */;
  %479 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 8, 11), float64] */, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%478, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%481, %482) /* ty=Tensor[(15, 8, 11), uint32] */
}

def @func_7653(%var_7643: Tensor[(56), float64]) -> (Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(72, 4), int16], Tensor[(36, 24), uint32], Tensor[(15, 8, 11), float64], Tensor[(2, 4, 7), float32], Tensor[(56), float64]) {
  %483 = @func_6241() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %484 = @func_6912() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %485 = cast(meta[relay.Constant][46] /* ty=Tensor[(36, 24), uint32] */, dtype="uint32") /* ty=Tensor[(36, 24), uint32] */;
  %486 = cast(meta[relay.Constant][46] /* ty=Tensor[(36, 24), uint32] */, dtype="uint32") /* ty=Tensor[(36, 24), uint32] */;
  %487 = reshape(%485, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), uint32] */;
  %488 = reshape(%486, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), uint32] */;
  %489 = @func_4786(%487, %488) /* ty=(Tensor[(12, 9, 8), bool], Tensor[(8, 6, 6), float64], Tensor[(72, 4), int16]) */;
  %490 = cast(%var_7643, dtype="float64") /* ty=Tensor[(56), float64] */;
  %491 = reshape(%490, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), float64] */;
  %492 = %483.0;
  %493 = %484.0;
  %494 = %489.2;
  %495 = @func_6104() /* ty=Tensor[(15, 8, 11), float64] */;
  %496 = @func_4652(%491) /* ty=Tensor[(2, 4, 7), float32] */;
  (%492, %493, %494, meta[relay.Constant][46] /* ty=Tensor[(36, 24), uint32] */, %495, %496, %var_7643)
}

def @func_1190(%var_1137: Tensor[(4, 5, 4), bool], %var_1156: Tensor[(144), int32], %var_1157: Tensor[(2304), int32]) -> (Tensor[(4, 5, 4), bool], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(4, 5, 4), float32]) {
  %497 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 5, 4), bool] */, dtype="bool") /* ty=Tensor[(4, 5, 4), bool] */;
  %498 = shape_of(%var_1137, dtype="int32") /* ty=Tensor[(3), int32] */;
  %499 = cast(%var_1137, dtype="bool") /* ty=Tensor[(4, 5, 4), bool] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %501 = cast(%var_1156, dtype="int32") /* ty=Tensor[(144), int32] */;
  %502 = cast(%var_1157, dtype="int32") /* ty=Tensor[(2304), int32] */;
  %503 = reshape(%501, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), int32] */;
  %504 = reshape(%502, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), int32] */;
  %505 = @func_601(%503, %504) /* ty=(Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(16, 16, 9), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32]) */;
  %506 = cast(%var_1137, dtype="float32") /* ty=Tensor[(4, 5, 4), float32] */;
  %507 = logical_or(%499, %500) /* ty=Tensor[(4, 5, 4), bool] */;
  %508 = %505.2;
  %509 = asinh(%506) /* ty=Tensor[(4, 5, 4), float32] */;
  (%507, %508, %var_1156, %var_1157, %509)
}

def @func_3670(%var_3626: Tensor[(9, 7), float64], %var_3637: Tensor[(150, 1), uint16], %var_3645: Tensor[(2304), int32]) -> (Tensor[(9, 7), float64], Tensor[(5, 10, 3), uint16], Tensor[(150, 1), uint16], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32]) {
  %510 = cast(%var_3626, dtype="float64") /* ty=Tensor[(9, 7), float64] */;
  %511 = cast(%var_3637, dtype="uint16") /* ty=Tensor[(150, 1), uint16] */;
  %512 = cast(%var_3637, dtype="uint16") /* ty=Tensor[(150, 1), uint16] */;
  %513 = reshape(%511, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
  %514 = reshape(%512, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
  %515 = @func_2487(%513, %514) /* ty=(Tensor[(5, 10, 3), uint16],) */;
  %516 = cast(meta[relay.Constant][48] /* ty=Tensor[(144), int32] */, dtype="int32") /* ty=Tensor[(144), int32] */;
  %517 = cast(%var_3645, dtype="int32") /* ty=Tensor[(2304), int32] */;
  %518 = reshape(%516, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), int32] */;
  %519 = reshape(%517, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), int32] */;
  %520 = @func_601(%518, %519) /* ty=(Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(16, 16, 9), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32]) */;
  %521 = sin(%510) /* ty=Tensor[(9, 7), float64] */;
  %522 = %515.0;
  %523 = %520.2;
  (%521, %522, %var_3637, %523, meta[relay.Constant][48] /* ty=Tensor[(144), int32] */, %var_3645)
}

def @main(%var_8818: Tensor[(13, 6, 13), float64]) -> (Tensor[(13, 6, 13), float64],) {
  %524 = cast(%var_8818, dtype="float64") /* ty=Tensor[(13, 6, 13), float64] */;
  %525 = asin(%524) /* ty=Tensor[(13, 6, 13), float64] */;
  (%525,)
}

def @func_7540() -> Tensor[(7, 10, 3), float64] {
  %526 = @func_6672() /* ty=Tensor[(7, 10, 3), float64] */;
  %527 = cast(%526, dtype="float64") /* ty=Tensor[(7, 10, 3), float64] */;
  sinh(%527) /* ty=Tensor[(7, 10, 3), float64] */
}

def @func_4652(%var_4636: Tensor[(2, 4, 7), float64]) -> Tensor[(2, 4, 7), float32] {
  %528 = cast(%var_4636, dtype="float64") /* ty=Tensor[(2, 4, 7), float64] */;
  %529 = acosh(%528) /* ty=Tensor[(2, 4, 7), float64] */;
  %530 = cast(%529, dtype="float32") /* ty=Tensor[(2, 4, 7), float32] */;
  sigmoid(%530) /* ty=Tensor[(2, 4, 7), float32] */
}

def @func_6241() -> (Tensor[(15, 8, 11), float32],) {
  %531 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %532 = %531.0;
  (%532,)
}

def @func_5721(%var_5695: Tensor[(9, 15, 3), int32]) -> (Tensor[(9, 15, 3), bool],) {
  %533 = cast(meta[relay.Constant][49] /* ty=Tensor[(9, 1, 3), int32] */, dtype="bool") /* ty=Tensor[(9, 1, 3), bool] */;
  %534 = cast(%var_5695, dtype="bool") /* ty=Tensor[(9, 15, 3), bool] */;
  %535 = not_equal(%533, %534) /* ty=Tensor[(9, 15, 3), bool] */;
  (%535,)
}

def @func_6912() -> (Tensor[(15, 8, 11), float32],) {
  %536 = @func_6405() /* ty=Tensor[(15, 8, 11), float32] */;
  (%536,)
}

def @func_2464(%var_2453: Tensor[(3, 8, 7), float32], %var_2456: Tensor[(3, 8, 7), float32]) -> Tensor[(3, 8, 7), float64] {
  %537 = cast(%var_2453, dtype="float32") /* ty=Tensor[(3, 8, 7), float32] */;
  %538 = rsqrt(%537) /* ty=Tensor[(3, 8, 7), float32] */;
  %539 = cast(%var_2456, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
  %540 = shape_of(%538, dtype="int32") /* ty=Tensor[(3), int32] */;
  %541 = cast(%538, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%541, %542) /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_6832() -> (Tensor[(15, 8, 11), float64],) {
  %543 = @func_6563() /* ty=(Tensor[(15, 8, 11), float64],) */;
  %544 = %543.0;
  (%544,)
}

def @func_1254(%var_1232: Tensor[(16, 5, 3), int16], %var_1233: Tensor[(16, 5, 3), int16]) -> (Tensor[(16, 5, 3), int16], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) {
  %545 = cast(%var_1233, dtype="int16") /* ty=Tensor[(16, 5, 3), int16] */;
  %546 = shape_of(%var_1232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%var_1232, dtype="int16") /* ty=Tensor[(16, 5, 3), int16] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %549 = cast(meta[relay.Constant][50] /* ty=Tensor[(1760), float64] */, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %550 = reshape(%549, newshape=[11, 10, 16]) /* ty=Tensor[(11, 10, 16), float64] */;
  %551 = bitwise_or(%547, %548) /* ty=Tensor[(16, 5, 3), int16] */;
  %552 = @func_497(%550) /* ty=Tensor[(11, 10, 16), float64] */;
  (%551, %552, meta[relay.Constant][50] /* ty=Tensor[(1760), float64] */)
}

def @func_6018(%var_6007: Tensor[(12, 13, 5), uint32], %var_6008: Tensor[(12, 13, 5), uint32]) -> Tensor[(12, 13, 5), uint32] {
  %553 = cast(%var_6008, dtype="uint32") /* ty=Tensor[(12, 13, 5), uint32] */;
  %554 = shape_of(%var_6007, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%var_6007, dtype="uint32") /* ty=Tensor[(12, 13, 5), uint32] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_xor(%555, %556) /* ty=Tensor[(12, 13, 5), uint32] */
}

def @func_6405() -> Tensor[(15, 8, 11), float32] {
  %557 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %557.0
}

def @func_7377(%var_7363: Tensor[(2, 56), int64]) -> (Tensor[(15, 8, 11), uint32], Tensor[(15, 8, 11), uint8], Tensor[(7, 10), float32], Tensor[(2, 56), int64], Tensor[(1040), float32]) {
  %558 = @func_7247() /* ty=(Tensor[(2304), int32], Tensor[(432), float32], Tensor[(4, 36), int32], Tensor[(15, 8, 11), float64], Tensor[(2, 7, 12), float64]) */;
  %559 = %558.3;
  %560 = @func_6889() /* ty=(Tensor[(15, 8, 11), float64],) */;
  %561 = %560.0;
  %562 = cast(%561, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %563 = shape_of(%559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%559, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %566 = cast(%559, dtype="uint8") /* ty=Tensor[(15, 8, 11), uint8] */;
  %567 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %568 = cast(%561, dtype="uint8") /* ty=Tensor[(15, 8, 11), uint8] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %570 = cast(%var_7363, dtype="int64") /* ty=Tensor[(2, 56), int64] */;
  %571 = cast(%var_7363, dtype="int64") /* ty=Tensor[(2, 56), int64] */;
  %572 = cast(meta[relay.Constant][51] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %573 = reshape(%570, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), int64] */;
  %574 = reshape(%571, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), int64] */;
  %575 = reshape(%572, newshape=[1040]) /* ty=Tensor[(1040), float32] */;
  %576 = @func_1026(%573, %574, %575) /* ty=(Tensor[(14, 4, 2), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(13, 8, 10), float32], Tensor[(1040), float32], Tensor[(7, 10), float32]) */;
  %577 = bitwise_or(%564, %565) /* ty=Tensor[(15, 8, 11), uint32] */;
  %578 = subtract(%568, %569) /* ty=Tensor[(15, 8, 11), uint8] */;
  %579 = %576.1;
  (%577, %578, %579, %var_7363, meta[relay.Constant][51] /* ty=Tensor[(1040), float32] */)
}

def @func_7133(%var_7110: Tensor[(63), float64], %var_7111: Tensor[(5, 30), uint16], %var_7112: Tensor[(2304), int32]) -> (Tensor[(15, 8, 11), uint32], Tensor[(2304), int32], Tensor[(63), float64], Tensor[(5, 30), uint16], Tensor[(2304), int32]) {
  %580 = cast(%var_7110, dtype="float64") /* ty=Tensor[(63), float64] */;
  %581 = cast(%var_7111, dtype="uint16") /* ty=Tensor[(5, 30), uint16] */;
  %582 = cast(%var_7112, dtype="int32") /* ty=Tensor[(2304), int32] */;
  %583 = reshape(%580, newshape=[9, 7]) /* ty=Tensor[(9, 7), float64] */;
  %584 = reshape(%581, newshape=[150, 1]) /* ty=Tensor[(150, 1), uint16] */;
  %585 = reshape(%582, newshape=[2304]) /* ty=Tensor[(2304), int32] */;
  %586 = @func_3670(%583, %584, %585) /* ty=(Tensor[(9, 7), float64], Tensor[(5, 10, 3), uint16], Tensor[(150, 1), uint16], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32]) */;
  %587 = @func_6313() /* ty=Tensor[(15, 8, 11), uint32] */;
  %588 = %586.5;
  (%587, %588, %var_7110, %var_7111, %var_7112)
}

def @func_7004(%var_6967: Tensor[(1040), float32], %var_6990: Tensor[(48), int16], %var_6991: Tensor[(1760), float64], %var_7002: Tensor[(360), float32]) -> (Tensor[(15, 8, 11), float32], Tensor[(7, 10), float32], Tensor[(112), int64], Tensor[(1040), float32], Tensor[(7, 10), float32], Tensor[(1760), float64], Tensor[(48), int16], Tensor[(1760), float64], Tensor[(10, 12, 3), float32], Tensor[(360), float32]) {
  %589 = @func_6631() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %590 = cast(meta[relay.Constant][52] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %591 = cast(meta[relay.Constant][52] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %592 = cast(%var_6967, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %593 = reshape(%590, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), int64] */;
  %594 = reshape(%591, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), int64] */;
  %595 = reshape(%592, newshape=[1040]) /* ty=Tensor[(1040), float32] */;
  %596 = @func_1026(%593, %594, %595) /* ty=(Tensor[(14, 4, 2), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(13, 8, 10), float32], Tensor[(1040), float32], Tensor[(7, 10), float32]) */;
  %597 = %596.2;
  %598 = cast(%597, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
  %599 = reshape(%598, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %600 = cast(%var_6990, dtype="int16") /* ty=Tensor[(48), int16] */;
  %601 = cast(%var_6990, dtype="int16") /* ty=Tensor[(48), int16] */;
  %602 = cast(%var_6991, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %603 = reshape(%600, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %604 = reshape(%601, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %605 = reshape(%602, newshape=[1760]) /* ty=Tensor[(1760), float64] */;
  %606 = @func_903(%603, %604, %605) /* ty=(Tensor[(2, 12, 2), float32], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */;
  %607 = cast(%var_7002, dtype="float32") /* ty=Tensor[(360), float32] */;
  %608 = reshape(%607, newshape=[10, 12, 3]) /* ty=Tensor[(10, 12, 3), float32] */;
  %609 = @func_3821(%608) /* ty=(Tensor[(10, 12, 3), float32],) */;
  %610 = %589.0;
  %611 = @func_43(%599) /* ty=Tensor[(7, 10), float32] */;
  %612 = %606.2;
  %613 = %609.0;
  (%610, %597, meta[relay.Constant][52] /* ty=Tensor[(112), int64] */, %var_6967, %611, %612, %var_6990, %var_6991, %613, %var_7002)
}

def @func_1913(%var_1897: Tensor[(14, 13, 13), int64]) -> (Tensor[(14, 13, 13), bool], Tensor[(14, 13, 13), float32]) {
  %614 = cast(%var_1897, dtype="bool") /* ty=Tensor[(14, 13, 13), bool] */;
  %615 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(14, 13, 13), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 13, 13), int64] */, dtype="bool") /* ty=Tensor[(14, 13, 13), bool] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %618 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 13, 13), int64] */, dtype="float32") /* ty=Tensor[(14, 13, 13), float32] */;
  %619 = not_equal(%616, %617) /* ty=Tensor[(14, 13, 13), bool] */;
  %620 = atanh(%618) /* ty=Tensor[(14, 13, 13), float32] */;
  (%619, %620)
}

def @func_7326() -> Tensor[(15, 8, 11), float32] {
  %621 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %622 = %621.0;
  %623 = cast(%622, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %624 = sinh(%623) /* ty=Tensor[(15, 8, 11), float64] */;
  %625 = cast(%624, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
  asinh(%625) /* ty=Tensor[(15, 8, 11), float32] */
}

def @func_8190(%var_8136: Tensor[(70), float32]) -> (Tensor[(15, 8, 11), float32], Tensor[(16, 16, 9), int64], Tensor[(8, 288), int32], Tensor[(150), uint16], Tensor[(70), float32], Tensor[(24, 6), float32], Tensor[(24, 6), bool]) {
  %626 = @func_6798() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %627 = cast(meta[relay.Constant][54] /* ty=Tensor[(24, 6), int32] */, dtype="int32") /* ty=Tensor[(24, 6), int32] */;
  %628 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 288), int32] */, dtype="int32") /* ty=Tensor[(8, 288), int32] */;
  %629 = reshape(%627, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), int32] */;
  %630 = reshape(%628, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), int32] */;
  %631 = @func_601(%629, %630) /* ty=(Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(16, 16, 9), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32]) */;
  %632 = %626.0;
  %633 = cast(%632, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %634 = cast(%var_8136, dtype="float32") /* ty=Tensor[(70), float32] */;
  %635 = reshape(%633, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), uint32] */;
  %636 = reshape(%634, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %637 = @func_6853(%635, %636) /* ty=(Tensor[(15, 8, 11), bool], Tensor[(15, 8, 11), bool], Tensor[(70), float32], Tensor[(150), uint16]) */;
  %638 = cast(meta[relay.Constant][54] /* ty=Tensor[(24, 6), int32] */, dtype="float64") /* ty=Tensor[(24, 6), float64] */;
  %639 = cosh(%638) /* ty=Tensor[(24, 6), float64] */;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %641 = cast(%639, dtype="float64") /* ty=Tensor[(24, 6), float64] */;
  %642 = atan(%641) /* ty=Tensor[(24, 6), float64] */;
  %643 = cast(%642, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %644 = cos(%643) /* ty=Tensor[(24, 6), float32] */;
  %645 = cast(meta[relay.Constant][54] /* ty=Tensor[(24, 6), int32] */, dtype="bool") /* ty=Tensor[(24, 6), bool] */;
  %646 = shape_of(%644, dtype="int32") /* ty=Tensor[(2), int32] */;
  %647 = cast(%644, dtype="bool") /* ty=Tensor[(24, 6), bool] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %649 = %631.2;
  %650 = %637.3;
  %651 = sigmoid(%640) /* ty=Tensor[(24, 6), float32] */;
  %652 = logical_and(%647, %648) /* ty=Tensor[(24, 6), bool] */;
  (%632, %649, meta[relay.Constant][55] /* ty=Tensor[(8, 288), int32] */, %650, %var_8136, %651, %652)
}

def @func_7496() -> (Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32]) {
  %653 = @func_6631() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %654 = %653.0;
  %655 = cast(%654, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
  %656 = reshape(%655, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), float32] */;
  %657 = @func_6480(%656) /* ty=(Tensor[(15, 8, 11), int64],) */;
  %658 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %659 = %657.0;
  %660 = %658.0;
  (%654, %659, %660)
}

def @func_6425(%var_6416: Tensor[(75, 2), uint16]) -> (Tensor[(15, 8, 11), uint32], Tensor[(9, 15, 3), bool], Tensor[(1, 405), int32], Tensor[(5, 10, 3), uint16], Tensor[(75, 2), uint16]) {
  %661 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 405), int32] */, dtype="int32") /* ty=Tensor[(1, 405), int32] */;
  %662 = reshape(%661, newshape=[9, 15, 3]) /* ty=Tensor[(9, 15, 3), int32] */;
  %663 = @func_5721(%662) /* ty=(Tensor[(9, 15, 3), bool],) */;
  %664 = cast(%var_6416, dtype="uint16") /* ty=Tensor[(75, 2), uint16] */;
  %665 = cast(%var_6416, dtype="uint16") /* ty=Tensor[(75, 2), uint16] */;
  %666 = reshape(%664, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
  %667 = reshape(%665, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
  %668 = @func_2487(%666, %667) /* ty=(Tensor[(5, 10, 3), uint16],) */;
  %669 = @func_6313() /* ty=Tensor[(15, 8, 11), uint32] */;
  %670 = %663.0;
  %671 = %668.0;
  (%669, %670, meta[relay.Constant][56] /* ty=Tensor[(1, 405), int32] */, %671, %var_6416)
}

def @func_68(%var_63: Tensor[(13, 8, 10), float32]) -> Tensor[(13, 8, 10), float32] {
  %672 = cast(%var_63, dtype="float32") /* ty=Tensor[(13, 8, 10), float32] */;
  acos(%672) /* ty=Tensor[(13, 8, 10), float32] */
}

def @func_4955(%var_4912: uint8, %var_4913: Tensor[(1, 1, 16), uint8], %var_4936: Tensor[(150), uint16], %var_4943: Tensor[(360), float32], %var_4946: Tensor[(288), int16]) -> (Tensor[(1, 1, 16), uint8], Tensor[(5, 10, 3), uint16], Tensor[(150), uint16], Tensor[(10, 12, 3), float32], Tensor[(360), float32], Tensor[(8, 6, 6), int16], Tensor[(288), int16]) {
  %673 = cast(%var_4912, dtype="uint8") /* ty=uint8 */;
  %674 = cast(%var_4913, dtype="uint8") /* ty=Tensor[(1, 1, 16), uint8] */;
  %675 = cast(%var_4936, dtype="uint16") /* ty=Tensor[(150), uint16] */;
  %676 = cast(%var_4936, dtype="uint16") /* ty=Tensor[(150), uint16] */;
  %677 = reshape(%675, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
  %678 = reshape(%676, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
  %679 = @func_2487(%677, %678) /* ty=(Tensor[(5, 10, 3), uint16],) */;
  %680 = cast(%var_4943, dtype="float32") /* ty=Tensor[(360), float32] */;
  %681 = reshape(%680, newshape=[10, 12, 3]) /* ty=Tensor[(10, 12, 3), float32] */;
  %682 = @func_3821(%681) /* ty=(Tensor[(10, 12, 3), float32],) */;
  %683 = cast(%var_4946, dtype="int16") /* ty=Tensor[(288), int16] */;
  %684 = cast(%var_4946, dtype="int16") /* ty=Tensor[(288), int16] */;
  %685 = reshape(%683, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), int16] */;
  %686 = reshape(%684, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), int16] */;
  %687 = @func_3328(%685, %686) /* ty=(Tensor[(8, 6, 6), int16], Tensor[(8, 6, 6), float64]) */;
  %688 = left_shift(%673, %674) /* ty=Tensor[(1, 1, 16), uint8] */;
  %689 = %679.0;
  %690 = %682.0;
  %691 = %687.0;
  (%688, %689, %var_4936, %690, %var_4943, %691, %var_4946)
}

def @func_6528(%var_6520: Tensor[(15, 8, 11), float32]) -> Tensor[(15, 8, 11), uint32] {
  %692 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %693 = %692.0;
  %694 = cast(%var_6520, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %695 = shape_of(%693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(%693, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  minimum(%696, %697) /* ty=Tensor[(15, 8, 11), uint32] */
}

def @func_7964(%var_7919: Tensor[(546), float64]) -> (Tensor[(15, 8, 11), float32], Tensor[(1001), float64], Tensor[(7, 10, 3), float64], Tensor[(9, 15, 3), bool], Tensor[(546), int32]) {
  %698 = @func_7559() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %699 = %698.0;
  %700 = cast(%699, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %701 = reshape(%700, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), float64] */;
  %702 = @func_6002(%701) /* ty=(Tensor[(15, 8, 11), float64], Tensor[(15, 8, 11), int16], Tensor[(9, 15, 3), bool], Tensor[(405), int32]) */;
  %703 = cast(%var_7919, dtype="float64") /* ty=Tensor[(546), float64] */;
  %704 = cast(meta[relay.Constant][57] /* ty=Tensor[(1001), float64] */, dtype="float64") /* ty=Tensor[(1001), float64] */;
  %705 = reshape(%703, newshape=[13, 14, 3]) /* ty=Tensor[(13, 14, 3), float64] */;
  %706 = reshape(%704, newshape=[1001]) /* ty=Tensor[(1001), float64] */;
  %707 = @func_6124(%705, %706) /* ty=(Tensor[(13, 14, 3), float64], Tensor[(13, 11, 7), float64], Tensor[(1001), float64]) */;
  %708 = %707.0;
  %709 = cast(%708, dtype="int32") /* ty=Tensor[(13, 14, 3), int32] */;
  %710 = shape_of(%var_7919, dtype="int32") /* ty=Tensor[(1), int32] */;
  %711 = cast(%var_7919, dtype="int32") /* ty=Tensor[(546), int32] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?), int32] */;
  %713 = @func_7784() /* ty=Tensor[(7, 10, 3), float64] */;
  %714 = %702.2;
  %715 = multiply(%711, %712) /* ty=Tensor[(546), int32] */;
  (%699, meta[relay.Constant][57] /* ty=Tensor[(1001), float64] */, %713, %714, %715)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8750() -> Tensor[(15, 8, 11), float32] {
  %0 = @func_6912() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %0.0
}

def @func_8193(%var_8191: Tensor[(70), float32]) -> (Tensor[(15, 8, 11), float32], Tensor[(16, 16, 9), int64], Tensor[(8, 288), int32], Tensor[(150), uint16], Tensor[(70), float32], Tensor[(24, 6), float32], Tensor[(24, 6), bool]) {
  @func_8190(%var_8191) /* ty=(Tensor[(15, 8, 11), float32], Tensor[(16, 16, 9), int64], Tensor[(8, 288), int32], Tensor[(150), uint16], Tensor[(70), float32], Tensor[(24, 6), float32], Tensor[(24, 6), bool]) */
}

def @func_3328(%var_3304: Tensor[(8, 6, 6), int16], %var_3320: Tensor[(8, 6, 6), int16]) -> (Tensor[(8, 6, 6), int16], Tensor[(8, 6, 6), float64]) {
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 6, 6), int16] */, dtype="int16") /* ty=Tensor[(8, 6, 6), int16] */;
  %2 = shape_of(%var_3304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%var_3304, dtype="int16") /* ty=Tensor[(8, 6, 6), int16] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %5 = cast(%var_3320, dtype="float64") /* ty=Tensor[(8, 6, 6), float64] */;
  %6 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(8, 6, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 6, 6), int16] */, dtype="float64") /* ty=Tensor[(8, 6, 6), float64] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %9 = subtract(%3, %4) /* ty=Tensor[(8, 6, 6), int16] */;
  %10 = mod(%7, %8) /* ty=Tensor[(8, 6, 6), float64] */;
  (%9, %10)
}

def @func_7784() -> Tensor[(7, 10, 3), float64] {
  @func_6672() /* ty=Tensor[(7, 10, 3), float64] */
}

def @func_1257(%var_1255: Tensor[(16, 5, 3), int16], %var_1256: Tensor[(16, 5, 3), int16]) -> (Tensor[(16, 5, 3), int16], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) {
  %19 = fn (%var_1232: Tensor[(16, 5, 3), int16], %var_1233: Tensor[(16, 5, 3), int16]) -> (Tensor[(16, 5, 3), int16], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) {
    %11 = cast(%var_1233, dtype="int16") /* ty=Tensor[(16, 5, 3), int16] */;
    %12 = shape_of(%var_1232, dtype="int32") /* ty=Tensor[(3), int32] */;
    %13 = cast(%var_1232, dtype="int16") /* ty=Tensor[(16, 5, 3), int16] */;
    %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(1760), float64] */, dtype="float64") /* ty=Tensor[(1760), float64] */;
    %16 = reshape(%15, newshape=[11, 10, 16]) /* ty=Tensor[(11, 10, 16), float64] */;
    %17 = bitwise_or(%13, %14) /* ty=Tensor[(16, 5, 3), int16] */;
    %18 = @func_497(%16) /* ty=Tensor[(11, 10, 16), float64] */;
    (%17, %18, meta[relay.Constant][1] /* ty=Tensor[(1760), float64] */)
  };
  %19(%var_1255, %var_1256) /* ty=(Tensor[(16, 5, 3), int16], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */
}

def @func_2982(%var_2981: Tensor[(6, 4, 14), uint8]) -> Tensor[(6, 4, 14), uint8] {
  %24 = fn (%var_2972: Tensor[(6, 4, 14), uint8]) -> Tensor[(6, 4, 14), uint8] {
    %20 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 4, 14), uint8] */, dtype="uint8") /* ty=Tensor[(6, 4, 14), uint8] */;
    %21 = shape_of(%var_2972, dtype="int32") /* ty=Tensor[(3), int32] */;
    %22 = cast(%var_2972, dtype="uint8") /* ty=Tensor[(6, 4, 14), uint8] */;
    %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    multiply(%22, %23) /* ty=Tensor[(6, 4, 14), uint8] */
  };
  %24(%var_2981) /* ty=Tensor[(6, 4, 14), uint8] */
}

def @func_8695() -> (Tensor[(15, 8, 11), float64],) {
  %25 = @func_5925() /* ty=Tensor[(15, 8, 11), float64] */;
  (%25,)
}

def @func_7377(%var_7363: Tensor[(2, 56), int64]) -> (Tensor[(15, 8, 11), uint32], Tensor[(15, 8, 11), uint8], Tensor[(7, 10), float32], Tensor[(2, 56), int64], Tensor[(1040), float32]) {
  %26 = @func_7247() /* ty=(Tensor[(2304), int32], Tensor[(432), float32], Tensor[(4, 36), int32], Tensor[(15, 8, 11), float64], Tensor[(2, 7, 12), float64]) */;
  %27 = %26.3;
  %28 = @func_6889() /* ty=(Tensor[(15, 8, 11), float64],) */;
  %29 = %28.0;
  %30 = cast(%29, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %31 = shape_of(%27, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%27, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %34 = cast(%27, dtype="uint8") /* ty=Tensor[(15, 8, 11), uint8] */;
  %35 = shape_of(%29, dtype="int32") /* ty=Tensor[(3), int32] */;
  %36 = cast(%29, dtype="uint8") /* ty=Tensor[(15, 8, 11), uint8] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %38 = cast(%var_7363, dtype="int64") /* ty=Tensor[(2, 56), int64] */;
  %39 = cast(%var_7363, dtype="int64") /* ty=Tensor[(2, 56), int64] */;
  %40 = cast(meta[relay.Constant][3] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %41 = reshape(%38, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), int64] */;
  %42 = reshape(%39, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), int64] */;
  %43 = reshape(%40, newshape=[1040]) /* ty=Tensor[(1040), float32] */;
  %44 = @func_1026(%41, %42, %43) /* ty=(Tensor[(14, 4, 2), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(13, 8, 10), float32], Tensor[(1040), float32], Tensor[(7, 10), float32]) */;
  %45 = bitwise_or(%32, %33) /* ty=Tensor[(15, 8, 11), uint32] */;
  %46 = subtract(%36, %37) /* ty=Tensor[(15, 8, 11), uint8] */;
  %47 = %44.1;
  (%45, %46, %47, %var_7363, meta[relay.Constant][3] /* ty=Tensor[(1040), float32] */)
}

def @func_7046() -> Tensor[(15, 8, 11), float64] {
  %48 = @func_6563() /* ty=(Tensor[(15, 8, 11), float64],) */;
  %48.0
}

def @func_70(%var_69: Tensor[(13, 8, 10), float32]) -> Tensor[(13, 8, 10), float32] {
  %50 = fn (%var_63: Tensor[(13, 8, 10), float32]) -> Tensor[(13, 8, 10), float32] {
    %49 = cast(%var_63, dtype="float32") /* ty=Tensor[(13, 8, 10), float32] */;
    acos(%49) /* ty=Tensor[(13, 8, 10), float32] */
  };
  %50(%var_69) /* ty=Tensor[(13, 8, 10), float32] */
}

def @func_7443(%var_7431: Tensor[(10, 7, 1), float32], %var_7435: Tensor[(12, 4), int16], %var_7436: Tensor[(1760), float64]) -> (Tensor[(10, 7, 1), float32], Tensor[(1760), float64], Tensor[(12, 4), int16], Tensor[(1760), float64]) {
  %51 = cast(%var_7431, dtype="float32") /* ty=Tensor[(10, 7, 1), float32] */;
  %52 = cast(%var_7435, dtype="int16") /* ty=Tensor[(12, 4), int16] */;
  %53 = cast(%var_7435, dtype="int16") /* ty=Tensor[(12, 4), int16] */;
  %54 = cast(%var_7436, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %55 = reshape(%52, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %56 = reshape(%53, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %57 = reshape(%54, newshape=[1760]) /* ty=Tensor[(1760), float64] */;
  %58 = @func_903(%55, %56, %57) /* ty=(Tensor[(2, 12, 2), float32], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */;
  %59 = acosh(%51) /* ty=Tensor[(10, 7, 1), float32] */;
  %60 = %58.2;
  (%59, %60, %var_7435, %var_7436)
}

def @func_8413(%var_8274: Tensor[(360), float32], %var_8306: Tensor[(7, 10), float32], %var_8331: Tensor[(1, 56), float64], %var_8335: Tensor[(11, 56), float64], %var_8379: Tensor[(11, 56), float64], %var_8401: Tensor[(336, 1), uint8]) -> (Tensor[(15, 8, 11), float32], Tensor[(10, 12, 3), float32], Tensor[(360), float32], Tensor[(7, 10, 3), float64], Tensor[(15, 8, 11), bool], Tensor[(7, 10), float32], Tensor[(7, 10, 3), float64], Tensor[(11, 56), uint64], Tensor[(15, 8, 11), float64], Tensor[(2, 4, 7), bool], Tensor[(15, 8, 11), float32], Tensor[(11, 56), float32], Tensor[(6, 4, 14), uint8], Tensor[(336, 1), uint8]) {
  %61 = @func_6912() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %62 = cast(%var_8274, dtype="float32") /* ty=Tensor[(360), float32] */;
  %63 = reshape(%62, newshape=[10, 12, 3]) /* ty=Tensor[(10, 12, 3), float32] */;
  %64 = @func_3821(%63) /* ty=(Tensor[(10, 12, 3), float32],) */;
  %65 = %61.0;
  %66 = cast(%65, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %67 = cast(%var_8306, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
  %68 = reshape(%66, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), uint32] */;
  %69 = reshape(%67, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %70 = @func_6853(%68, %69) /* ty=(Tensor[(15, 8, 11), bool], Tensor[(15, 8, 11), bool], Tensor[(70), float32], Tensor[(150), uint16]) */;
  %71 = cast(%var_8331, dtype="uint64") /* ty=Tensor[(1, 56), uint64] */;
  %72 = cast(%var_8335, dtype="uint64") /* ty=Tensor[(11, 56), uint64] */;
  %73 = @func_6889() /* ty=(Tensor[(15, 8, 11), float64],) */;
  %74 = cast(%var_8331, dtype="float64") /* ty=Tensor[(1, 56), float64] */;
  %75 = reshape(%74, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), float64] */;
  %76 = @func_4652(%75) /* ty=Tensor[(2, 4, 7), float32] */;
  %77 = cast(%var_8331, dtype="bool") /* ty=Tensor[(1, 56), bool] */;
  %78 = shape_of(%76, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%76, dtype="bool") /* ty=Tensor[(2, 4, 7), bool] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %81 = @func_6798() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %82 = cast(%var_8331, dtype="uint64") /* ty=Tensor[(1, 56), uint64] */;
  %83 = cast(%var_8379, dtype="uint64") /* ty=Tensor[(11, 56), uint64] */;
  %84 = left_shift(%82, %83) /* ty=Tensor[(11, 56), uint64] */;
  %85 = cast(%84, dtype="float32") /* ty=Tensor[(11, 56), float32] */;
  %86 = cast(%var_8401, dtype="uint8") /* ty=Tensor[(336, 1), uint8] */;
  %87 = reshape(%86, newshape=[6, 4, 14]) /* ty=Tensor[(6, 4, 14), uint8] */;
  %88 = %64.0;
  %89 = @func_8021() /* ty=Tensor[(7, 10, 3), float64] */;
  %90 = %70.0;
  %91 = @func_7784() /* ty=Tensor[(7, 10, 3), float64] */;
  %92 = add(%71, %72) /* ty=Tensor[(11, 56), uint64] */;
  %93 = %73.0;
  %94 = logical_and(%79, %80) /* ty=Tensor[(2, 4, 7), bool] */;
  %95 = %81.0;
  %96 = asinh(%85) /* ty=Tensor[(11, 56), float32] */;
  %97 = @func_2980(%87) /* ty=Tensor[(6, 4, 14), uint8] */;
  (%65, %88, %var_8274, %89, %90, %var_8306, %91, %92, %93, %94, %95, %96, %97, %var_8401)
}

def @func_5204(%var_5203: Tensor[(6, 1, 7), float64]) -> (Tensor[(6, 1, 7), float64],) {
  %100 = fn (%var_5196: Tensor[(6, 1, 7), float64]) -> (Tensor[(6, 1, 7), float64],) {
    %98 = cast(%var_5196, dtype="float64") /* ty=Tensor[(6, 1, 7), float64] */;
    %99 = atan(%98) /* ty=Tensor[(6, 1, 7), float64] */;
    (%99,)
  };
  %100(%var_5203) /* ty=(Tensor[(6, 1, 7), float64],) */
}

def @func_6105() -> Tensor[(15, 8, 11), float64] {
  %101 = fn () -> Tensor[(15, 8, 11), float64] {
    @func_5925() /* ty=Tensor[(15, 8, 11), float64] */
  };
  %101() /* ty=Tensor[(15, 8, 11), float64] */
}

def @func_1030(%var_1027: Tensor[(14, 4, 2), int64], %var_1028: Tensor[(14, 4, 2), int64], %var_1029: Tensor[(1040), float32]) -> (Tensor[(14, 4, 2), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(13, 8, 10), float32], Tensor[(1040), float32], Tensor[(7, 10), float32]) {
  %126 = fn (%var_978: Tensor[(14, 4, 2), int64], %var_979: Tensor[(14, 4, 2), int64], %var_1017: Tensor[(1040), float32]) -> (Tensor[(14, 4, 2), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(13, 8, 10), float32], Tensor[(1040), float32], Tensor[(7, 10), float32]) {
    %102 = cast(%var_979, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
    %103 = cosh(%102) /* ty=Tensor[(14, 4, 2), float64] */;
    %104 = cast(%var_979, dtype="int64") /* ty=Tensor[(14, 4, 2), int64] */;
    %105 = shape_of(%var_978, dtype="int32") /* ty=Tensor[(3), int32] */;
    %106 = cast(%var_978, dtype="int64") /* ty=Tensor[(14, 4, 2), int64] */;
    %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %108 = left_shift(%106, %107) /* ty=Tensor[(14, 4, 2), int64] */;
    %109 = cast(%108, dtype="int64") /* ty=Tensor[(14, 4, 2), int64] */;
    %110 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
    %111 = cast(%103, dtype="int64") /* ty=Tensor[(14, 4, 2), int64] */;
    %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %113 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
    %114 = reshape(%113, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
    %115 = @func_43(%114) /* ty=Tensor[(7, 10), float32] */;
    %116 = cast(%115, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
    %117 = reshape(%116, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
    %118 = cast(%var_1017, dtype="float32") /* ty=Tensor[(1040), float32] */;
    %119 = reshape(%118, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float32] */;
    %120 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
    %121 = reshape(%120, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
    %122 = subtract(%111, %112) /* ty=Tensor[(14, 4, 2), int64] */;
    %123 = @func_43(%117) /* ty=Tensor[(7, 10), float32] */;
    %124 = @func_68(%119) /* ty=Tensor[(13, 8, 10), float32] */;
    %125 = @func_43(%121) /* ty=Tensor[(7, 10), float32] */;
    (%122, %115, meta[relay.Constant][4] /* ty=Tensor[(7, 10), float32] */, %123, %124, %var_1017, %125)
  };
  %126(%var_1027, %var_1028, %var_1029) /* ty=(Tensor[(14, 4, 2), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(13, 8, 10), float32], Tensor[(1040), float32], Tensor[(7, 10), float32]) */
}

def @func_605(%var_603: Tensor[(16, 1, 9), int32], %var_604: Tensor[(16, 16, 9), int32]) -> (Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(16, 16, 9), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32]) {
  @func_601(%var_603, %var_604) /* ty=(Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(16, 16, 9), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32]) */
}

def @func_2227(%var_2225: Tensor[(12, 8, 12), float64], %var_2226: Tensor[(80), bool]) -> (Tensor[(4, 5, 4), bool], Tensor[(80), bool], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(16, 5, 3), int16], Tensor[(240), int16], Tensor[(12, 8, 12), float32], Tensor[(1760), float64], Tensor[(1, 48), int16], Tensor[(1760), float64]) {
  @func_2223(%var_2225, %var_2226) /* ty=(Tensor[(4, 5, 4), bool], Tensor[(80), bool], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(16, 5, 3), int16], Tensor[(240), int16], Tensor[(12, 8, 12), float32], Tensor[(1760), float64], Tensor[(1, 48), int16], Tensor[(1760), float64]) */
}

def @func_7248() -> (Tensor[(2304), int32], Tensor[(432), float32], Tensor[(4, 36), int32], Tensor[(15, 8, 11), float64], Tensor[(2, 7, 12), float64]) {
  %144 = fn () -> (Tensor[(2304), int32], Tensor[(432), float32], Tensor[(4, 36), int32], Tensor[(15, 8, 11), float64], Tensor[(2, 7, 12), float64]) {
    %127 = cast(meta[relay.Constant][5] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 36), int32] */, dtype="int32") /* ty=Tensor[(4, 36), int32] */;
    %129 = reshape(%127, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), float32] */;
    %130 = reshape(%128, newshape=[144]) /* ty=Tensor[(144), int32] */;
    %131 = @func_4546(%129, %130) /* ty=(Tensor[(4, 5, 4), bool], Tensor[(80), bool], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(9, 4, 12), float32]) */;
    %132 = @func_6563() /* ty=(Tensor[(15, 8, 11), float64],) */;
    %133 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 7, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 7, 12), float64] */;
    %134 = atan(%133) /* ty=Tensor[(2, 7, 12), float64] */;
    %135 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 7, 12), float64] */, dtype="int16") /* ty=Tensor[(2, 7, 12), int16] */;
    %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
    %137 = cast(%134, dtype="int16") /* ty=Tensor[(2, 7, 12), int16] */;
    %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %139 = minimum(%137, %138) /* ty=Tensor[(2, 7, 12), int16] */;
    %140 = cast(%139, dtype="float64") /* ty=Tensor[(2, 7, 12), float64] */;
    %141 = %131.3;
    %142 = %132.0;
    %143 = sin(%140) /* ty=Tensor[(2, 7, 12), float64] */;
    (%141, meta[relay.Constant][5] /* ty=Tensor[(432), float32] */, meta[relay.Constant][6] /* ty=Tensor[(4, 36), int32] */, %142, %143)
  };
  %144() /* ty=(Tensor[(2304), int32], Tensor[(432), float32], Tensor[(4, 36), int32], Tensor[(15, 8, 11), float64], Tensor[(2, 7, 12), float64]) */
}

def @func_8645(%var_8642: Tensor[(3, 12, 9), float32], %var_8643: Tensor[(150), uint16], %var_8644: Tensor[(3, 12, 9), float32]) -> (Tensor[(5, 10, 3), uint16], Tensor[(150), uint16], Tensor[(16, 3, 4), float32], Tensor[(3, 12, 9), bool]) {
  %167 = fn (%var_8604: Tensor[(3, 12, 9), float32], %var_8610: Tensor[(150), uint16], %var_8631: Tensor[(3, 12, 9), float32]) -> (Tensor[(5, 10, 3), uint16], Tensor[(150), uint16], Tensor[(16, 3, 4), float32], Tensor[(3, 12, 9), bool]) {
    %145 = cast(%var_8610, dtype="uint16") /* ty=Tensor[(150), uint16] */;
    %146 = cast(%var_8610, dtype="uint16") /* ty=Tensor[(150), uint16] */;
    %147 = reshape(%145, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
    %148 = reshape(%146, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
    %149 = @func_2487(%147, %148) /* ty=(Tensor[(5, 10, 3), uint16],) */;
    %150 = cast(meta[relay.Constant][8] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %151 = reshape(%150, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float32] */;
    %152 = @func_3728(%151) /* ty=(Tensor[(16, 3, 4), float32], Tensor[(12, 9, 4), int8], Tensor[(54, 2), int8], Tensor[(432), int8]) */;
    %153 = %152.0;
    %154 = cast(meta[relay.Constant][8] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %155 = shape_of(%153, dtype="int32") /* ty=Tensor[(3), int32] */;
    %156 = cast(%153, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
    %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %158 = cast(%var_8604, dtype="float32") /* ty=Tensor[(3, 12, 9), float32] */;
    %159 = erf(%158) /* ty=Tensor[(3, 12, 9), float32] */;
    %160 = cast(%var_8631, dtype="bool") /* ty=Tensor[(3, 12, 9), bool] */;
    %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
    %162 = cast(%159, dtype="bool") /* ty=Tensor[(3, 12, 9), bool] */;
    %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %164 = %149.0;
    %165 = maximum(%156, %157) /* ty=Tensor[(16, 3, 4), float32] */;
    %166 = less(%162, %163) /* ty=Tensor[(3, 12, 9), bool] */;
    (%164, %var_8610, %165, %166)
  };
  %167(%var_8642, %var_8643, %var_8644) /* ty=(Tensor[(5, 10, 3), uint16], Tensor[(150), uint16], Tensor[(16, 3, 4), float32], Tensor[(3, 12, 9), bool]) */
}

def @func_5721(%var_5695: Tensor[(9, 15, 3), int32]) -> (Tensor[(9, 15, 3), bool],) {
  %168 = cast(meta[relay.Constant][9] /* ty=Tensor[(9, 1, 3), int32] */, dtype="bool") /* ty=Tensor[(9, 1, 3), bool] */;
  %169 = cast(%var_5695, dtype="bool") /* ty=Tensor[(9, 15, 3), bool] */;
  %170 = not_equal(%168, %169) /* ty=Tensor[(9, 15, 3), bool] */;
  (%170,)
}

def @func_7541() -> Tensor[(7, 10, 3), float64] {
  %173 = fn () -> Tensor[(7, 10, 3), float64] {
    %171 = @func_6672() /* ty=Tensor[(7, 10, 3), float64] */;
    %172 = cast(%171, dtype="float64") /* ty=Tensor[(7, 10, 3), float64] */;
    sinh(%172) /* ty=Tensor[(7, 10, 3), float64] */
  };
  %173() /* ty=Tensor[(7, 10, 3), float64] */
}

def @func_46(%var_44: Tensor[(7, 10), float32]) -> Tensor[(7, 10), float32] {
  @func_43(%var_44) /* ty=Tensor[(7, 10), float32] */
}

def @func_7380(%var_7378: Tensor[(2, 56), int64]) -> (Tensor[(15, 8, 11), uint32], Tensor[(15, 8, 11), uint8], Tensor[(7, 10), float32], Tensor[(2, 56), int64], Tensor[(1040), float32]) {
  @func_7377(%var_7378) /* ty=(Tensor[(15, 8, 11), uint32], Tensor[(15, 8, 11), uint8], Tensor[(7, 10), float32], Tensor[(2, 56), int64], Tensor[(1040), float32]) */
}

def @func_8023() -> Tensor[(7, 10, 3), float64] {
  @func_8021() /* ty=Tensor[(7, 10, 3), float64] */
}

def @func_5724(%var_5722: Tensor[(9, 15, 3), int32]) -> (Tensor[(9, 15, 3), bool],) {
  @func_5721(%var_5722) /* ty=(Tensor[(9, 15, 3), bool],) */
}

def @func_3268(%var_3266: Tensor[(12, 9, 1), int8], %var_3267: Tensor[(12, 9, 4), int8]) -> Tensor[(12, 9, 4), int8] {
  %176 = fn (%var_3236: Tensor[(12, 9, 1), int8], %var_3237: Tensor[(12, 9, 4), int8]) -> Tensor[(12, 9, 4), int8] {
    %174 = cast(%var_3236, dtype="int8") /* ty=Tensor[(12, 9, 1), int8] */;
    %175 = cast(%var_3237, dtype="int8") /* ty=Tensor[(12, 9, 4), int8] */;
    bitwise_or(%174, %175) /* ty=Tensor[(12, 9, 4), int8] */
  };
  %176(%var_3266, %var_3267) /* ty=Tensor[(12, 9, 4), int8] */
}

def @func_7004(%var_6967: Tensor[(1040), float32], %var_6990: Tensor[(48), int16], %var_6991: Tensor[(1760), float64], %var_7002: Tensor[(360), float32]) -> (Tensor[(15, 8, 11), float32], Tensor[(7, 10), float32], Tensor[(112), int64], Tensor[(1040), float32], Tensor[(7, 10), float32], Tensor[(1760), float64], Tensor[(48), int16], Tensor[(1760), float64], Tensor[(10, 12, 3), float32], Tensor[(360), float32]) {
  %177 = @func_6631() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %178 = cast(meta[relay.Constant][10] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %179 = cast(meta[relay.Constant][10] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %180 = cast(%var_6967, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %181 = reshape(%178, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), int64] */;
  %182 = reshape(%179, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), int64] */;
  %183 = reshape(%180, newshape=[1040]) /* ty=Tensor[(1040), float32] */;
  %184 = @func_1026(%181, %182, %183) /* ty=(Tensor[(14, 4, 2), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(7, 10), float32], Tensor[(13, 8, 10), float32], Tensor[(1040), float32], Tensor[(7, 10), float32]) */;
  %185 = %184.2;
  %186 = cast(%185, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
  %187 = reshape(%186, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %188 = cast(%var_6990, dtype="int16") /* ty=Tensor[(48), int16] */;
  %189 = cast(%var_6990, dtype="int16") /* ty=Tensor[(48), int16] */;
  %190 = cast(%var_6991, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %191 = reshape(%188, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %192 = reshape(%189, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %193 = reshape(%190, newshape=[1760]) /* ty=Tensor[(1760), float64] */;
  %194 = @func_903(%191, %192, %193) /* ty=(Tensor[(2, 12, 2), float32], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */;
  %195 = cast(%var_7002, dtype="float32") /* ty=Tensor[(360), float32] */;
  %196 = reshape(%195, newshape=[10, 12, 3]) /* ty=Tensor[(10, 12, 3), float32] */;
  %197 = @func_3821(%196) /* ty=(Tensor[(10, 12, 3), float32],) */;
  %198 = %177.0;
  %199 = @func_43(%187) /* ty=Tensor[(7, 10), float32] */;
  %200 = %194.2;
  %201 = %197.0;
  (%198, %185, meta[relay.Constant][10] /* ty=Tensor[(112), int64] */, %var_6967, %199, %200, %var_6990, %var_6991, %201, %var_7002)
}

def @func_7137(%var_7134: Tensor[(63), float64], %var_7135: Tensor[(5, 30), uint16], %var_7136: Tensor[(2304), int32]) -> (Tensor[(15, 8, 11), uint32], Tensor[(2304), int32], Tensor[(63), float64], Tensor[(5, 30), uint16], Tensor[(2304), int32]) {
  %211 = fn (%var_7110: Tensor[(63), float64], %var_7111: Tensor[(5, 30), uint16], %var_7112: Tensor[(2304), int32]) -> (Tensor[(15, 8, 11), uint32], Tensor[(2304), int32], Tensor[(63), float64], Tensor[(5, 30), uint16], Tensor[(2304), int32]) {
    %202 = cast(%var_7110, dtype="float64") /* ty=Tensor[(63), float64] */;
    %203 = cast(%var_7111, dtype="uint16") /* ty=Tensor[(5, 30), uint16] */;
    %204 = cast(%var_7112, dtype="int32") /* ty=Tensor[(2304), int32] */;
    %205 = reshape(%202, newshape=[9, 7]) /* ty=Tensor[(9, 7), float64] */;
    %206 = reshape(%203, newshape=[150, 1]) /* ty=Tensor[(150, 1), uint16] */;
    %207 = reshape(%204, newshape=[2304]) /* ty=Tensor[(2304), int32] */;
    %208 = @func_3670(%205, %206, %207) /* ty=(Tensor[(9, 7), float64], Tensor[(5, 10, 3), uint16], Tensor[(150, 1), uint16], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32]) */;
    %209 = @func_6313() /* ty=Tensor[(15, 8, 11), uint32] */;
    %210 = %208.5;
    (%209, %210, %var_7110, %var_7111, %var_7112)
  };
  %211(%var_7134, %var_7135, %var_7136) /* ty=(Tensor[(15, 8, 11), uint32], Tensor[(2304), int32], Tensor[(63), float64], Tensor[(5, 30), uint16], Tensor[(2304), int32]) */
}

def @func_1195(%var_1192: Tensor[(4, 5, 4), bool], %var_1193: Tensor[(144), int32], %var_1194: Tensor[(2304), int32]) -> (Tensor[(4, 5, 4), bool], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(4, 5, 4), float32]) {
  @func_1190(%var_1192, %var_1193, %var_1194) /* ty=(Tensor[(4, 5, 4), bool], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(4, 5, 4), float32]) */
}

def @func_7458(%var_7454: Tensor[(10, 2, 11), uint8]) -> Tensor[(10, 2, 11), bool] {
  %212 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 2, 1), uint8] */, dtype="bool") /* ty=Tensor[(10, 2, 1), bool] */;
  %213 = cast(%var_7454, dtype="bool") /* ty=Tensor[(10, 2, 11), bool] */;
  greater_equal(%212, %213) /* ty=Tensor[(10, 2, 11), bool] */
}

def @func_3868(%var_3867: Tensor[(14, 6, 8), float32]) -> (Tensor[(14, 6, 8), float32],) {
  %216 = fn (%var_3860: Tensor[(14, 6, 8), float32]) -> (Tensor[(14, 6, 8), float32],) {
    %214 = cast(%var_3860, dtype="float32") /* ty=Tensor[(14, 6, 8), float32] */;
    %215 = acosh(%214) /* ty=Tensor[(14, 6, 8), float32] */;
    (%215,)
  };
  %216(%var_3867) /* ty=(Tensor[(14, 6, 8), float32],) */
}

def @func_5546(%var_5545: Tensor[(13, 11, 7), float64]) -> (Tensor[(13, 11, 7), float64],) {
  %220 = fn (%var_5535: Tensor[(13, 11, 7), float64]) -> (Tensor[(13, 11, 7), float64],) {
    %217 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 11, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 1), float64] */;
    %218 = cast(%var_5535, dtype="float64") /* ty=Tensor[(13, 11, 7), float64] */;
    %219 = power(%217, %218) /* ty=Tensor[(13, 11, 7), float64] */;
    (%219,)
  };
  %220(%var_5545) /* ty=(Tensor[(13, 11, 7), float64],) */
}

def @func_7461(%var_7459: Tensor[(10, 2, 11), uint8]) -> Tensor[(10, 2, 11), bool] {
  @func_7458(%var_7459) /* ty=Tensor[(10, 2, 11), bool] */
}

def @main(%var_8818: Tensor[(13, 6, 13), float64]) -> (Tensor[(13, 6, 13), float64],) {
  %221 = cast(%var_8818, dtype="float64") /* ty=Tensor[(13, 6, 13), float64] */;
  %222 = asin(%221) /* ty=Tensor[(13, 6, 13), float64] */;
  (%222,)
}

def @func_6673() -> Tensor[(7, 10, 3), float64] {
  %226 = fn () -> Tensor[(7, 10, 3), float64] {
    %223 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 3), float64] */;
    %224 = log2(%223) /* ty=Tensor[(7, 10, 3), float64] */;
    %225 = cast(%224, dtype="float64") /* ty=Tensor[(7, 10, 3), float64] */;
    acos(%225) /* ty=Tensor[(7, 10, 3), float64] */
  };
  %226() /* ty=Tensor[(7, 10, 3), float64] */
}

def @func_1913(%var_1897: Tensor[(14, 13, 13), int64]) -> (Tensor[(14, 13, 13), bool], Tensor[(14, 13, 13), float32]) {
  %227 = cast(%var_1897, dtype="bool") /* ty=Tensor[(14, 13, 13), bool] */;
  %228 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(14, 13, 13), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 13, 13), int64] */, dtype="bool") /* ty=Tensor[(14, 13, 13), bool] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %231 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 13, 13), int64] */, dtype="float32") /* ty=Tensor[(14, 13, 13), float32] */;
  %232 = not_equal(%229, %230) /* ty=Tensor[(14, 13, 13), bool] */;
  %233 = atanh(%231) /* ty=Tensor[(14, 13, 13), float32] */;
  (%232, %233)
}

def @func_6633() -> (Tensor[(15, 8, 11), float32],) {
  @func_6631() /* ty=(Tensor[(15, 8, 11), float32],) */
}

def @func_6358() -> Tensor[(15, 8, 11), float64] {
  %239 = fn () -> Tensor[(15, 8, 11), float64] {
    %234 = @func_5925() /* ty=Tensor[(15, 8, 11), float64] */;
    %235 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
    %236 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
    %237 = cast(%234, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
    %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%237, %238) /* ty=Tensor[(15, 8, 11), float64] */
  };
  %239() /* ty=Tensor[(15, 8, 11), float64] */
}

def @func_6315() -> Tensor[(15, 8, 11), uint32] {
  @func_6313() /* ty=Tensor[(15, 8, 11), uint32] */
}

def @func_6127(%var_6125: Tensor[(13, 14, 3), float64], %var_6126: Tensor[(1001), float64]) -> (Tensor[(13, 14, 3), float64], Tensor[(13, 11, 7), float64], Tensor[(1001), float64]) {
  %246 = fn (%var_6106: Tensor[(13, 14, 3), float64], %var_6116: Tensor[(1001), float64]) -> (Tensor[(13, 14, 3), float64], Tensor[(13, 11, 7), float64], Tensor[(1001), float64]) {
    %240 = cast(%var_6106, dtype="float64") /* ty=Tensor[(13, 14, 3), float64] */;
    %241 = cast(%var_6116, dtype="float64") /* ty=Tensor[(1001), float64] */;
    %242 = reshape(%241, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), float64] */;
    %243 = @func_5544(%242) /* ty=(Tensor[(13, 11, 7), float64],) */;
    %244 = rsqrt(%240) /* ty=Tensor[(13, 14, 3), float64] */;
    %245 = %243.0;
    (%244, %245, %var_6116)
  };
  %246(%var_6125, %var_6126) /* ty=(Tensor[(13, 14, 3), float64], Tensor[(13, 11, 7), float64], Tensor[(1001), float64]) */
}

def @func_6563() -> (Tensor[(15, 8, 11), float64],) {
  %247 = @func_6104() /* ty=Tensor[(15, 8, 11), float64] */;
  (%247,)
}

def @func_3823(%var_3822: Tensor[(10, 12, 3), float32]) -> (Tensor[(10, 12, 3), float32],) {
  %253 = fn (%var_3814: Tensor[(10, 12, 3), float32]) -> (Tensor[(10, 12, 3), float32],) {
    %248 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 12, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 12, 3), float32] */;
    %249 = shape_of(%var_3814, dtype="int32") /* ty=Tensor[(3), int32] */;
    %250 = cast(%var_3814, dtype="float32") /* ty=Tensor[(10, 12, 3), float32] */;
    %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %252 = power(%250, %251) /* ty=Tensor[(10, 12, 3), float32] */;
    (%252,)
  };
  %253(%var_3822) /* ty=(Tensor[(10, 12, 3), float32],) */
}

def @func_2180(%var_2147: Tensor[(13, 6, 12), bool]) -> (Tensor[(13, 6, 12), bool], Tensor[(7, 10), float32], Tensor[(70), float32]) {
  %254 = cast(%var_2147, dtype="bool") /* ty=Tensor[(13, 6, 12), bool] */;
  %255 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(13, 6, 12), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 6, 12), bool] */, dtype="bool") /* ty=Tensor[(13, 6, 12), bool] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %258 = cast(meta[relay.Constant][18] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %259 = reshape(%258, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %260 = logical_and(%256, %257) /* ty=Tensor[(13, 6, 12), bool] */;
  %261 = @func_43(%259) /* ty=Tensor[(7, 10), float32] */;
  (%260, %261, meta[relay.Constant][18] /* ty=Tensor[(70), float32] */)
}

def @func_6005(%var_6003: Tensor[(15, 8, 11), float64]) -> (Tensor[(15, 8, 11), float64], Tensor[(15, 8, 11), int16], Tensor[(9, 15, 3), bool], Tensor[(405), int32]) {
  @func_6002(%var_6003) /* ty=(Tensor[(15, 8, 11), float64], Tensor[(15, 8, 11), int16], Tensor[(9, 15, 3), bool], Tensor[(405), int32]) */
}

def @func_6241() -> (Tensor[(15, 8, 11), float32],) {
  %262 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %263 = %262.0;
  (%263,)
}

def @func_6243() -> (Tensor[(15, 8, 11), float32],) {
  @func_6241() /* ty=(Tensor[(15, 8, 11), float32],) */
}

def @func_2487(%var_2474: Tensor[(5, 10, 3), uint16], %var_2475: Tensor[(5, 10, 3), uint16]) -> (Tensor[(5, 10, 3), uint16],) {
  %264 = cast(%var_2475, dtype="uint16") /* ty=Tensor[(5, 10, 3), uint16] */;
  %265 = shape_of(%var_2474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%var_2474, dtype="uint16") /* ty=Tensor[(5, 10, 3), uint16] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %268 = right_shift(%266, %267) /* ty=Tensor[(5, 10, 3), uint16] */;
  (%268,)
}

def @func_7964(%var_7919: Tensor[(546), float64]) -> (Tensor[(15, 8, 11), float32], Tensor[(1001), float64], Tensor[(7, 10, 3), float64], Tensor[(9, 15, 3), bool], Tensor[(546), int32]) {
  %269 = @func_7559() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %270 = %269.0;
  %271 = cast(%270, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %272 = reshape(%271, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), float64] */;
  %273 = @func_6002(%272) /* ty=(Tensor[(15, 8, 11), float64], Tensor[(15, 8, 11), int16], Tensor[(9, 15, 3), bool], Tensor[(405), int32]) */;
  %274 = cast(%var_7919, dtype="float64") /* ty=Tensor[(546), float64] */;
  %275 = cast(meta[relay.Constant][19] /* ty=Tensor[(1001), float64] */, dtype="float64") /* ty=Tensor[(1001), float64] */;
  %276 = reshape(%274, newshape=[13, 14, 3]) /* ty=Tensor[(13, 14, 3), float64] */;
  %277 = reshape(%275, newshape=[1001]) /* ty=Tensor[(1001), float64] */;
  %278 = @func_6124(%276, %277) /* ty=(Tensor[(13, 14, 3), float64], Tensor[(13, 11, 7), float64], Tensor[(1001), float64]) */;
  %279 = %278.0;
  %280 = cast(%279, dtype="int32") /* ty=Tensor[(13, 14, 3), int32] */;
  %281 = shape_of(%var_7919, dtype="int32") /* ty=Tensor[(1), int32] */;
  %282 = cast(%var_7919, dtype="int32") /* ty=Tensor[(546), int32] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?), int32] */;
  %284 = @func_7784() /* ty=Tensor[(7, 10, 3), float64] */;
  %285 = %273.2;
  %286 = multiply(%282, %283) /* ty=Tensor[(546), int32] */;
  (%270, meta[relay.Constant][19] /* ty=Tensor[(1001), float64] */, %284, %285, %286)
}

def @func_6089(%var_6086: int8, %var_6087: Tensor[(15, 1, 7), int8], %var_6088: Tensor[(112), float64]) -> (Tensor[(15, 1, 7), int8], Tensor[(15, 1, 7), float64], Tensor[(7, 9), float64], Tensor[(112), float64]) {
  %296 = fn (%var_6048: int8, %var_6049: Tensor[(15, 1, 7), int8], %var_6074: Tensor[(112), float64]) -> (Tensor[(15, 1, 7), int8], Tensor[(15, 1, 7), float64], Tensor[(7, 9), float64], Tensor[(112), float64]) {
    %287 = cast(%var_6048, dtype="int8") /* ty=int8 */;
    %288 = cast(%var_6049, dtype="int8") /* ty=Tensor[(15, 1, 7), int8] */;
    %289 = cast(%var_6049, dtype="float64") /* ty=Tensor[(15, 1, 7), float64] */;
    %290 = cast(%var_6074, dtype="float64") /* ty=Tensor[(112), float64] */;
    %291 = reshape(%290, newshape=[8, 1, 14]) /* ty=Tensor[(8, 1, 14), float64] */;
    %292 = @func_4825(%291) /* ty=(Tensor[(8, 1, 14), float64], Tensor[(150, 1), uint16], Tensor[(7, 9), float64], Tensor[(150), uint16], Tensor[(2304, 1), int32], Tensor[(8, 6, 6), float64], Tensor[(288), int16], Tensor[(11, 10, 16), float64], Tensor[(48), int16], Tensor[(1760), float64]) */;
    %293 = left_shift(%287, %288) /* ty=Tensor[(15, 1, 7), int8] */;
    %294 = atan(%289) /* ty=Tensor[(15, 1, 7), float64] */;
    %295 = %292.2;
    (%293, %294, %295, %var_6074)
  };
  %296(%var_6086, %var_6087, %var_6088) /* ty=(Tensor[(15, 1, 7), int8], Tensor[(15, 1, 7), float64], Tensor[(7, 9), float64], Tensor[(112), float64]) */
}

def @func_7010(%var_7006: Tensor[(1040), float32], %var_7007: Tensor[(48), int16], %var_7008: Tensor[(1760), float64], %var_7009: Tensor[(360), float32]) -> (Tensor[(15, 8, 11), float32], Tensor[(7, 10), float32], Tensor[(112), int64], Tensor[(1040), float32], Tensor[(7, 10), float32], Tensor[(1760), float64], Tensor[(48), int16], Tensor[(1760), float64], Tensor[(10, 12, 3), float32], Tensor[(360), float32]) {
  @func_7004(%var_7006, %var_7007, %var_7008, %var_7009) /* ty=(Tensor[(15, 8, 11), float32], Tensor[(7, 10), float32], Tensor[(112), int64], Tensor[(1040), float32], Tensor[(7, 10), float32], Tensor[(1760), float64], Tensor[(48), int16], Tensor[(1760), float64], Tensor[(10, 12, 3), float32], Tensor[(360), float32]) */
}

def @func_6406() -> Tensor[(15, 8, 11), float32] {
  %298 = fn () -> Tensor[(15, 8, 11), float32] {
    %297 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
    %297.0
  };
  %298() /* ty=Tensor[(15, 8, 11), float32] */
}

def @func_3332(%var_3330: Tensor[(8, 6, 6), int16], %var_3331: Tensor[(8, 6, 6), int16]) -> (Tensor[(8, 6, 6), int16], Tensor[(8, 6, 6), float64]) {
  @func_3328(%var_3330, %var_3331) /* ty=(Tensor[(8, 6, 6), int16], Tensor[(8, 6, 6), float64]) */
}

def @func_6798() -> (Tensor[(15, 8, 11), float32],) {
  %299 = @func_6241() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %300 = %299.0;
  (%300,)
}

def @func_6483(%var_6481: Tensor[(15, 8, 11), float32]) -> (Tensor[(15, 8, 11), int64],) {
  @func_6480(%var_6481) /* ty=(Tensor[(15, 8, 11), int64],) */
}

def @func_8676() -> Tensor[(15, 8, 11), float64] {
  %301 = @func_7247() /* ty=(Tensor[(2304), int32], Tensor[(432), float32], Tensor[(4, 36), int32], Tensor[(15, 8, 11), float64], Tensor[(2, 7, 12), float64]) */;
  %301.3
}

def @func_7448(%var_7445: Tensor[(10, 7, 1), float32], %var_7446: Tensor[(12, 4), int16], %var_7447: Tensor[(1760), float64]) -> (Tensor[(10, 7, 1), float32], Tensor[(1760), float64], Tensor[(12, 4), int16], Tensor[(1760), float64]) {
  @func_7443(%var_7445, %var_7446, %var_7447) /* ty=(Tensor[(10, 7, 1), float32], Tensor[(1760), float64], Tensor[(12, 4), int16], Tensor[(1760), float64]) */
}

def @func_8190(%var_8136: Tensor[(70), float32]) -> (Tensor[(15, 8, 11), float32], Tensor[(16, 16, 9), int64], Tensor[(8, 288), int32], Tensor[(150), uint16], Tensor[(70), float32], Tensor[(24, 6), float32], Tensor[(24, 6), bool]) {
  %302 = @func_6798() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %303 = cast(meta[relay.Constant][20] /* ty=Tensor[(24, 6), int32] */, dtype="int32") /* ty=Tensor[(24, 6), int32] */;
  %304 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 288), int32] */, dtype="int32") /* ty=Tensor[(8, 288), int32] */;
  %305 = reshape(%303, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), int32] */;
  %306 = reshape(%304, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), int32] */;
  %307 = @func_601(%305, %306) /* ty=(Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(16, 16, 9), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32]) */;
  %308 = %302.0;
  %309 = cast(%308, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %310 = cast(%var_8136, dtype="float32") /* ty=Tensor[(70), float32] */;
  %311 = reshape(%309, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), uint32] */;
  %312 = reshape(%310, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %313 = @func_6853(%311, %312) /* ty=(Tensor[(15, 8, 11), bool], Tensor[(15, 8, 11), bool], Tensor[(70), float32], Tensor[(150), uint16]) */;
  %314 = cast(meta[relay.Constant][20] /* ty=Tensor[(24, 6), int32] */, dtype="float64") /* ty=Tensor[(24, 6), float64] */;
  %315 = cosh(%314) /* ty=Tensor[(24, 6), float64] */;
  %316 = cast(%315, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %317 = cast(%315, dtype="float64") /* ty=Tensor[(24, 6), float64] */;
  %318 = atan(%317) /* ty=Tensor[(24, 6), float64] */;
  %319 = cast(%318, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %320 = cos(%319) /* ty=Tensor[(24, 6), float32] */;
  %321 = cast(meta[relay.Constant][20] /* ty=Tensor[(24, 6), int32] */, dtype="bool") /* ty=Tensor[(24, 6), bool] */;
  %322 = shape_of(%320, dtype="int32") /* ty=Tensor[(2), int32] */;
  %323 = cast(%320, dtype="bool") /* ty=Tensor[(24, 6), bool] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %325 = %307.2;
  %326 = %313.3;
  %327 = sigmoid(%316) /* ty=Tensor[(24, 6), float32] */;
  %328 = logical_and(%323, %324) /* ty=Tensor[(24, 6), bool] */;
  (%308, %325, meta[relay.Constant][21] /* ty=Tensor[(8, 288), int32] */, %326, %var_8136, %327, %328)
}

def @func_7498() -> (Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32]) {
  @func_7496() /* ty=(Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32]) */
}

def @func_5760() -> (Tensor[(15, 8, 11), float32],) {
  %329 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
  %330 = sigmoid(%329) /* ty=Tensor[(15, 8, 11), float32] */;
  (%330,)
}

def @func_2223(%var_2185: Tensor[(12, 8, 12), float64], %var_2194: Tensor[(80), bool]) -> (Tensor[(4, 5, 4), bool], Tensor[(80), bool], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(16, 5, 3), int16], Tensor[(240), int16], Tensor[(12, 8, 12), float32], Tensor[(1760), float64], Tensor[(1, 48), int16], Tensor[(1760), float64]) {
  %331 = cast(%var_2194, dtype="bool") /* ty=Tensor[(80), bool] */;
  %332 = cast(meta[relay.Constant][23] /* ty=Tensor[(144), int32] */, dtype="int32") /* ty=Tensor[(144), int32] */;
  %333 = cast(meta[relay.Constant][24] /* ty=Tensor[(2304), int32] */, dtype="int32") /* ty=Tensor[(2304), int32] */;
  %334 = reshape(%331, newshape=[4, 5, 4]) /* ty=Tensor[(4, 5, 4), bool] */;
  %335 = reshape(%332, newshape=[144]) /* ty=Tensor[(144), int32] */;
  %336 = reshape(%333, newshape=[2304]) /* ty=Tensor[(2304), int32] */;
  %337 = @func_1190(%334, %335, %336) /* ty=(Tensor[(4, 5, 4), bool], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(4, 5, 4), float32]) */;
  %338 = cast(meta[relay.Constant][25] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %339 = cast(meta[relay.Constant][25] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
  %340 = reshape(%338, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), int16] */;
  %341 = reshape(%339, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), int16] */;
  %342 = @func_1254(%340, %341) /* ty=(Tensor[(16, 5, 3), int16], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */;
  %343 = cast(%var_2185, dtype="float64") /* ty=Tensor[(12, 8, 12), float64] */;
  %344 = log10(%343) /* ty=Tensor[(12, 8, 12), float64] */;
  %345 = cast(%344, dtype="float32") /* ty=Tensor[(12, 8, 12), float32] */;
  %346 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 48), int16] */, dtype="int16") /* ty=Tensor[(1, 48), int16] */;
  %347 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 48), int16] */, dtype="int16") /* ty=Tensor[(1, 48), int16] */;
  %348 = cast(meta[relay.Constant][27] /* ty=Tensor[(1760), float64] */, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %349 = reshape(%346, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %350 = reshape(%347, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
  %351 = reshape(%348, newshape=[1760]) /* ty=Tensor[(1760), float64] */;
  %352 = @func_903(%349, %350, %351) /* ty=(Tensor[(2, 12, 2), float32], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */;
  %353 = %337.0;
  %354 = %342.0;
  %355 = cosh(%345) /* ty=Tensor[(12, 8, 12), float32] */;
  %356 = %352.2;
  (%353, %var_2194, meta[relay.Constant][23] /* ty=Tensor[(144), int32] */, meta[relay.Constant][24] /* ty=Tensor[(2304), int32] */, %354, meta[relay.Constant][25] /* ty=Tensor[(240), int16] */, %355, %356, meta[relay.Constant][26] /* ty=Tensor[(1, 48), int16] */, meta[relay.Constant][27] /* ty=Tensor[(1760), float64] */)
}

def @func_7561() -> (Tensor[(15, 8, 11), float32],) {
  @func_7559() /* ty=(Tensor[(15, 8, 11), float32],) */
}

def @func_6021(%var_6019: Tensor[(12, 13, 5), uint32], %var_6020: Tensor[(12, 13, 5), uint32]) -> Tensor[(12, 13, 5), uint32] {
  %361 = fn (%var_6007: Tensor[(12, 13, 5), uint32], %var_6008: Tensor[(12, 13, 5), uint32]) -> Tensor[(12, 13, 5), uint32] {
    %357 = cast(%var_6008, dtype="uint32") /* ty=Tensor[(12, 13, 5), uint32] */;
    %358 = shape_of(%var_6007, dtype="int32") /* ty=Tensor[(3), int32] */;
    %359 = cast(%var_6007, dtype="uint32") /* ty=Tensor[(12, 13, 5), uint32] */;
    %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    bitwise_xor(%359, %360) /* ty=Tensor[(12, 13, 5), uint32] */
  };
  %361(%var_6019, %var_6020) /* ty=Tensor[(12, 13, 5), uint32] */
}

def @func_4961(%var_4956: uint8, %var_4957: Tensor[(1, 1, 16), uint8], %var_4958: Tensor[(150), uint16], %var_4959: Tensor[(360), float32], %var_4960: Tensor[(288), int16]) -> (Tensor[(1, 1, 16), uint8], Tensor[(5, 10, 3), uint16], Tensor[(150), uint16], Tensor[(10, 12, 3), float32], Tensor[(360), float32], Tensor[(8, 6, 6), int16], Tensor[(288), int16]) {
  %381 = fn (%var_4912: uint8, %var_4913: Tensor[(1, 1, 16), uint8], %var_4936: Tensor[(150), uint16], %var_4943: Tensor[(360), float32], %var_4946: Tensor[(288), int16]) -> (Tensor[(1, 1, 16), uint8], Tensor[(5, 10, 3), uint16], Tensor[(150), uint16], Tensor[(10, 12, 3), float32], Tensor[(360), float32], Tensor[(8, 6, 6), int16], Tensor[(288), int16]) {
    %362 = cast(%var_4912, dtype="uint8") /* ty=uint8 */;
    %363 = cast(%var_4913, dtype="uint8") /* ty=Tensor[(1, 1, 16), uint8] */;
    %364 = cast(%var_4936, dtype="uint16") /* ty=Tensor[(150), uint16] */;
    %365 = cast(%var_4936, dtype="uint16") /* ty=Tensor[(150), uint16] */;
    %366 = reshape(%364, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
    %367 = reshape(%365, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
    %368 = @func_2487(%366, %367) /* ty=(Tensor[(5, 10, 3), uint16],) */;
    %369 = cast(%var_4943, dtype="float32") /* ty=Tensor[(360), float32] */;
    %370 = reshape(%369, newshape=[10, 12, 3]) /* ty=Tensor[(10, 12, 3), float32] */;
    %371 = @func_3821(%370) /* ty=(Tensor[(10, 12, 3), float32],) */;
    %372 = cast(%var_4946, dtype="int16") /* ty=Tensor[(288), int16] */;
    %373 = cast(%var_4946, dtype="int16") /* ty=Tensor[(288), int16] */;
    %374 = reshape(%372, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), int16] */;
    %375 = reshape(%373, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), int16] */;
    %376 = @func_3328(%374, %375) /* ty=(Tensor[(8, 6, 6), int16], Tensor[(8, 6, 6), float64]) */;
    %377 = left_shift(%362, %363) /* ty=Tensor[(1, 1, 16), uint8] */;
    %378 = %368.0;
    %379 = %371.0;
    %380 = %376.0;
    (%377, %378, %var_4936, %379, %var_4943, %380, %var_4946)
  };
  %381(%var_4956, %var_4957, %var_4958, %var_4959, %var_4960) /* ty=(Tensor[(1, 1, 16), uint8], Tensor[(5, 10, 3), uint16], Tensor[(150), uint16], Tensor[(10, 12, 3), float32], Tensor[(360), float32], Tensor[(8, 6, 6), int16], Tensor[(288), int16]) */
}

def @func_4550(%var_4548: Tensor[(9, 4, 12), float32], %var_4549: Tensor[(144), int32]) -> (Tensor[(4, 5, 4), bool], Tensor[(80), bool], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(9, 4, 12), float32]) {
  @func_4546(%var_4548, %var_4549) /* ty=(Tensor[(4, 5, 4), bool], Tensor[(80), bool], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(9, 4, 12), float32]) */
}

def @func_8798() -> (Tensor[(7, 10, 3), float32],) {
  @func_8796() /* ty=(Tensor[(7, 10, 3), float32],) */
}

def @func_7864(%var_7862: Tensor[(7, 10, 3), float64], %var_7863: Tensor[(2, 660), float32]) -> (Tensor[(7, 10, 3), uint32], Tensor[(1760), float64], Tensor[(240), int16], Tensor[(15, 8, 11), int64], Tensor[(2, 660), float32]) {
  %398 = fn (%var_7835: Tensor[(7, 10, 3), float64], %var_7851: Tensor[(2, 660), float32]) -> (Tensor[(7, 10, 3), uint32], Tensor[(1760), float64], Tensor[(240), int16], Tensor[(15, 8, 11), int64], Tensor[(2, 660), float32]) {
    %382 = @func_7540() /* ty=Tensor[(7, 10, 3), float64] */;
    %383 = cast(%var_7835, dtype="uint32") /* ty=Tensor[(7, 10, 3), uint32] */;
    %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
    %385 = cast(%382, dtype="uint32") /* ty=Tensor[(7, 10, 3), uint32] */;
    %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %387 = cast(meta[relay.Constant][28] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
    %388 = cast(meta[relay.Constant][28] /* ty=Tensor[(240), int16] */, dtype="int16") /* ty=Tensor[(240), int16] */;
    %389 = reshape(%387, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), int16] */;
    %390 = reshape(%388, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), int16] */;
    %391 = @func_1254(%389, %390) /* ty=(Tensor[(16, 5, 3), int16], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */;
    %392 = cast(%var_7851, dtype="float32") /* ty=Tensor[(2, 660), float32] */;
    %393 = reshape(%392, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), float32] */;
    %394 = @func_6480(%393) /* ty=(Tensor[(15, 8, 11), int64],) */;
    %395 = bitwise_xor(%385, %386) /* ty=Tensor[(7, 10, 3), uint32] */;
    %396 = %391.2;
    %397 = %394.0;
    (%395, %396, meta[relay.Constant][28] /* ty=Tensor[(240), int16] */, %397, %var_7851)
  };
  %398(%var_7862, %var_7863) /* ty=(Tensor[(7, 10, 3), uint32], Tensor[(1760), float64], Tensor[(240), int16], Tensor[(15, 8, 11), int64], Tensor[(2, 660), float32]) */
}

def @func_6530(%var_6529: Tensor[(15, 8, 11), float32]) -> Tensor[(15, 8, 11), uint32] {
  %405 = fn (%var_6520: Tensor[(15, 8, 11), float32]) -> Tensor[(15, 8, 11), uint32] {
    %399 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
    %400 = %399.0;
    %401 = cast(%var_6520, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
    %402 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
    %403 = cast(%400, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
    %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    minimum(%403, %404) /* ty=Tensor[(15, 8, 11), uint32] */
  };
  %405(%var_6529) /* ty=Tensor[(15, 8, 11), uint32] */
}

def @func_6156(%var_6155: Tensor[(15, 8, 11), float64]) -> (Tensor[(15, 8, 11), int16], Tensor[(150), uint16], Tensor[(4, 28), float64]) {
  %416 = fn (%var_6142: Tensor[(15, 8, 11), float64]) -> (Tensor[(15, 8, 11), int16], Tensor[(150), uint16], Tensor[(4, 28), float64]) {
    %406 = @func_5925() /* ty=Tensor[(15, 8, 11), float64] */;
    %407 = cast(%var_6142, dtype="int16") /* ty=Tensor[(15, 8, 11), int16] */;
    %408 = shape_of(%406, dtype="int32") /* ty=Tensor[(3), int32] */;
    %409 = cast(%406, dtype="int16") /* ty=Tensor[(15, 8, 11), int16] */;
    %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %411 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 28), float64] */, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
    %412 = reshape(%411, newshape=[8, 1, 14]) /* ty=Tensor[(8, 1, 14), float64] */;
    %413 = @func_4825(%412) /* ty=(Tensor[(8, 1, 14), float64], Tensor[(150, 1), uint16], Tensor[(7, 9), float64], Tensor[(150), uint16], Tensor[(2304, 1), int32], Tensor[(8, 6, 6), float64], Tensor[(288), int16], Tensor[(11, 10, 16), float64], Tensor[(48), int16], Tensor[(1760), float64]) */;
    %414 = maximum(%409, %410) /* ty=Tensor[(15, 8, 11), int16] */;
    %415 = %413.3;
    (%414, %415, meta[relay.Constant][29] /* ty=Tensor[(4, 28), float64] */)
  };
  %416(%var_6155) /* ty=(Tensor[(15, 8, 11), int16], Tensor[(150), uint16], Tensor[(4, 28), float64]) */
}

def @func_4571(%var_4569: Tensor[(9, 9, 16), float64], %var_4570: Tensor[(9, 9, 16), float64]) -> Tensor[(9, 9, 16), uint32] {
  @func_4567(%var_4569, %var_4570) /* ty=Tensor[(9, 9, 16), uint32] */
}

def @func_8796() -> (Tensor[(7, 10, 3), float32],) {
  %417 = @func_7784() /* ty=Tensor[(7, 10, 3), float64] */;
  %418 = cast(%417, dtype="float32") /* ty=Tensor[(7, 10, 3), float32] */;
  %419 = tan(%418) /* ty=Tensor[(7, 10, 3), float32] */;
  (%419,)
}

def @func_8577() -> (Tensor[(15, 8, 11), float32],) {
  %421 = fn () -> (Tensor[(15, 8, 11), float32],) {
    %420 = @func_7326() /* ty=Tensor[(15, 8, 11), float32] */;
    (%420,)
  };
  %421() /* ty=(Tensor[(15, 8, 11), float32],) */
}

def @func_7786() -> Tensor[(7, 10, 3), float64] {
  @func_7784() /* ty=Tensor[(7, 10, 3), float64] */
}

def @func_5926() -> Tensor[(15, 8, 11), float64] {
  %428 = fn () -> Tensor[(15, 8, 11), float64] {
    %422 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
    %423 = %422.0;
    %424 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 8, 11), float32] */, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
    %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
    %426 = cast(%423, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
    %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%426, %427) /* ty=Tensor[(15, 8, 11), float64] */
  };
  %428() /* ty=Tensor[(15, 8, 11), float64] */
}

def @func_907(%var_904: Tensor[(2, 12, 2), int16], %var_905: Tensor[(2, 12, 2), int16], %var_906: Tensor[(1760), float64]) -> (Tensor[(2, 12, 2), float32], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) {
  %444 = fn (%var_874: Tensor[(2, 12, 2), int16], %var_875: Tensor[(2, 12, 2), int16], %var_892: Tensor[(1760), float64]) -> (Tensor[(2, 12, 2), float32], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) {
    %429 = cast(%var_875, dtype="float32") /* ty=Tensor[(2, 12, 2), float32] */;
    %430 = asinh(%429) /* ty=Tensor[(2, 12, 2), float32] */;
    %431 = cast(%var_875, dtype="int16") /* ty=Tensor[(2, 12, 2), int16] */;
    %432 = shape_of(%var_874, dtype="int32") /* ty=Tensor[(3), int32] */;
    %433 = cast(%var_874, dtype="int16") /* ty=Tensor[(2, 12, 2), int16] */;
    %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %435 = bitwise_and(%433, %434) /* ty=Tensor[(2, 12, 2), int16] */;
    %436 = cast(%435, dtype="float32") /* ty=Tensor[(2, 12, 2), float32] */;
    %437 = shape_of(%430, dtype="int32") /* ty=Tensor[(3), int32] */;
    %438 = cast(%430, dtype="float32") /* ty=Tensor[(2, 12, 2), float32] */;
    %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %440 = cast(%var_892, dtype="float64") /* ty=Tensor[(1760), float64] */;
    %441 = reshape(%440, newshape=[11, 10, 16]) /* ty=Tensor[(11, 10, 16), float64] */;
    %442 = mod(%438, %439) /* ty=Tensor[(2, 12, 2), float32] */;
    %443 = @func_497(%441) /* ty=Tensor[(11, 10, 16), float64] */;
    (%442, %443, %var_892)
  };
  %444(%var_904, %var_905, %var_906) /* ty=(Tensor[(2, 12, 2), float32], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */
}

def @func_497(%var_484: Tensor[(11, 10, 16), float64]) -> Tensor[(11, 10, 16), float64] {
  %445 = cast(3.97611f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %446 = cast(%var_484, dtype="float64") /* ty=Tensor[(11, 10, 16), float64] */;
  mod(%445, %446) /* ty=Tensor[(11, 10, 16), float64] */
}

def @func_7755(%var_7752: Tensor[(7, 6, 14), uint8], %var_7753: Tensor[(1760), float64], %var_7754: Tensor[(360), float32]) -> (Tensor[(7, 6, 14), bool], Tensor[(15, 8, 11), uint8], Tensor[(1320), uint32], Tensor[(7, 10), float32], Tensor[(1040), float32], Tensor[(48), int16], Tensor[(1760), float64], Tensor[(360), float32], Tensor[(7, 6, 14), float32], Tensor[(7, 6, 14), float64]) {
  @func_7750(%var_7752, %var_7753, %var_7754) /* ty=(Tensor[(7, 6, 14), bool], Tensor[(15, 8, 11), uint8], Tensor[(1320), uint32], Tensor[(7, 10), float32], Tensor[(1040), float32], Tensor[(48), int16], Tensor[(1760), float64], Tensor[(360), float32], Tensor[(7, 6, 14), float32], Tensor[(7, 6, 14), float64]) */
}

def @func_4827(%var_4826: Tensor[(8, 1, 14), float64]) -> (Tensor[(8, 1, 14), float64], Tensor[(150, 1), uint16], Tensor[(7, 9), float64], Tensor[(150), uint16], Tensor[(2304, 1), int32], Tensor[(8, 6, 6), float64], Tensor[(288), int16], Tensor[(11, 10, 16), float64], Tensor[(48), int16], Tensor[(1760), float64]) {
  %471 = fn (%var_4794: Tensor[(8, 1, 14), float64]) -> (Tensor[(8, 1, 14), float64], Tensor[(150, 1), uint16], Tensor[(7, 9), float64], Tensor[(150), uint16], Tensor[(2304, 1), int32], Tensor[(8, 6, 6), float64], Tensor[(288), int16], Tensor[(11, 10, 16), float64], Tensor[(48), int16], Tensor[(1760), float64]) {
    %447 = cast(%var_4794, dtype="float64") /* ty=Tensor[(8, 1, 14), float64] */;
    %448 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 9), float64] */, dtype="float64") /* ty=Tensor[(7, 9), float64] */;
    %449 = cast(meta[relay.Constant][32] /* ty=Tensor[(150), uint16] */, dtype="uint16") /* ty=Tensor[(150), uint16] */;
    %450 = cast(meta[relay.Constant][33] /* ty=Tensor[(2304, 1), int32] */, dtype="int32") /* ty=Tensor[(2304, 1), int32] */;
    %451 = reshape(%448, newshape=[9, 7]) /* ty=Tensor[(9, 7), float64] */;
    %452 = reshape(%449, newshape=[150, 1]) /* ty=Tensor[(150, 1), uint16] */;
    %453 = reshape(%450, newshape=[2304]) /* ty=Tensor[(2304), int32] */;
    %454 = @func_3670(%451, %452, %453) /* ty=(Tensor[(9, 7), float64], Tensor[(5, 10, 3), uint16], Tensor[(150, 1), uint16], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32]) */;
    %455 = cast(meta[relay.Constant][34] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
    %456 = cast(meta[relay.Constant][34] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
    %457 = reshape(%455, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), int16] */;
    %458 = reshape(%456, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), int16] */;
    %459 = @func_3328(%457, %458) /* ty=(Tensor[(8, 6, 6), int16], Tensor[(8, 6, 6), float64]) */;
    %460 = cast(meta[relay.Constant][35] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
    %461 = cast(meta[relay.Constant][35] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
    %462 = cast(meta[relay.Constant][36] /* ty=Tensor[(1760), float64] */, dtype="float64") /* ty=Tensor[(1760), float64] */;
    %463 = reshape(%460, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
    %464 = reshape(%461, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), int16] */;
    %465 = reshape(%462, newshape=[1760]) /* ty=Tensor[(1760), float64] */;
    %466 = @func_903(%463, %464, %465) /* ty=(Tensor[(2, 12, 2), float32], Tensor[(11, 10, 16), float64], Tensor[(1760), float64]) */;
    %467 = acos(%447) /* ty=Tensor[(8, 1, 14), float64] */;
    %468 = %454.2;
    %469 = %459.1;
    %470 = %466.1;
    (%467, %468, meta[relay.Constant][31] /* ty=Tensor[(7, 9), float64] */, meta[relay.Constant][32] /* ty=Tensor[(150), uint16] */, meta[relay.Constant][33] /* ty=Tensor[(2304, 1), int32] */, %469, meta[relay.Constant][34] /* ty=Tensor[(288), int16] */, %470, meta[relay.Constant][35] /* ty=Tensor[(48), int16] */, meta[relay.Constant][36] /* ty=Tensor[(1760), float64] */)
  };
  %471(%var_4826) /* ty=(Tensor[(8, 1, 14), float64], Tensor[(150, 1), uint16], Tensor[(7, 9), float64], Tensor[(150), uint16], Tensor[(2304, 1), int32], Tensor[(8, 6, 6), float64], Tensor[(288), int16], Tensor[(11, 10, 16), float64], Tensor[(48), int16], Tensor[(1760), float64]) */
}

def @func_5827(%var_5823: Tensor[(2, 8, 2), float32], %var_5824: Tensor[(1320), float32], %var_5825: Tensor[(70), float32], %var_5826: Tensor[(25, 6), uint16]) -> (Tensor[(2, 8, 2), float32], Tensor[(70), float32], Tensor[(1320), float32], Tensor[(70), float32], Tensor[(25, 6), uint16]) {
  %482 = fn (%var_5806: Tensor[(2, 8, 2), float32], %var_5813: Tensor[(1320), float32], %var_5814: Tensor[(70), float32], %var_5815: Tensor[(25, 6), uint16]) -> (Tensor[(2, 8, 2), float32], Tensor[(70), float32], Tensor[(1320), float32], Tensor[(70), float32], Tensor[(25, 6), uint16]) {
    %472 = cast(%var_5806, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
    %473 = cast(%var_5813, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %474 = cast(%var_5814, dtype="float32") /* ty=Tensor[(70), float32] */;
    %475 = cast(%var_5815, dtype="uint16") /* ty=Tensor[(25, 6), uint16] */;
    %476 = reshape(%473, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), float32] */;
    %477 = reshape(%474, newshape=[70]) /* ty=Tensor[(70), float32] */;
    %478 = reshape(%475, newshape=[5, 30]) /* ty=Tensor[(5, 30), uint16] */;
    %479 = @func_5800(%476, %477, %478) /* ty=(Tensor[(15, 8, 11), bool], Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(8, 6, 6), int16], uint8, Tensor[(16), uint8], Tensor[(5, 30), uint16], Tensor[(360), float32], Tensor[(2, 144), int16]) */;
    %480 = log(%472) /* ty=Tensor[(2, 8, 2), float32] */;
    %481 = %479.2;
    (%480, %481, %var_5813, %var_5814, %var_5815)
  };
  %482(%var_5823, %var_5824, %var_5825, %var_5826) /* ty=(Tensor[(2, 8, 2), float32], Tensor[(70), float32], Tensor[(1320), float32], Tensor[(70), float32], Tensor[(25, 6), uint16]) */
}

def @func_2183(%var_2181: Tensor[(13, 6, 12), bool]) -> (Tensor[(13, 6, 12), bool], Tensor[(7, 10), float32], Tensor[(70), float32]) {
  @func_2180(%var_2181) /* ty=(Tensor[(13, 6, 12), bool], Tensor[(7, 10), float32], Tensor[(70), float32]) */
}

def @func_43(%var_38: Tensor[(7, 10), float32]) -> Tensor[(7, 10), float32] {
  %483 = cast(%var_38, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
  log2(%483) /* ty=Tensor[(7, 10), float32] */
}

def @func_6427(%var_6426: Tensor[(75, 2), uint16]) -> (Tensor[(15, 8, 11), uint32], Tensor[(9, 15, 3), bool], Tensor[(1, 405), int32], Tensor[(5, 10, 3), uint16], Tensor[(75, 2), uint16]) {
  %495 = fn (%var_6416: Tensor[(75, 2), uint16]) -> (Tensor[(15, 8, 11), uint32], Tensor[(9, 15, 3), bool], Tensor[(1, 405), int32], Tensor[(5, 10, 3), uint16], Tensor[(75, 2), uint16]) {
    %484 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 405), int32] */, dtype="int32") /* ty=Tensor[(1, 405), int32] */;
    %485 = reshape(%484, newshape=[9, 15, 3]) /* ty=Tensor[(9, 15, 3), int32] */;
    %486 = @func_5721(%485) /* ty=(Tensor[(9, 15, 3), bool],) */;
    %487 = cast(%var_6416, dtype="uint16") /* ty=Tensor[(75, 2), uint16] */;
    %488 = cast(%var_6416, dtype="uint16") /* ty=Tensor[(75, 2), uint16] */;
    %489 = reshape(%487, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
    %490 = reshape(%488, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
    %491 = @func_2487(%489, %490) /* ty=(Tensor[(5, 10, 3), uint16],) */;
    %492 = @func_6313() /* ty=Tensor[(15, 8, 11), uint32] */;
    %493 = %486.0;
    %494 = %491.0;
    (%492, %493, meta[relay.Constant][37] /* ty=Tensor[(1, 405), int32] */, %494, %var_6416)
  };
  %495(%var_6426) /* ty=(Tensor[(15, 8, 11), uint32], Tensor[(9, 15, 3), bool], Tensor[(1, 405), int32], Tensor[(5, 10, 3), uint16], Tensor[(75, 2), uint16]) */
}

def @func_6565() -> (Tensor[(15, 8, 11), float64],) {
  @func_6563() /* ty=(Tensor[(15, 8, 11), float64],) */
}

def @func_4567(%var_4552: Tensor[(9, 9, 16), float64], %var_4553: Tensor[(9, 9, 16), float64]) -> Tensor[(9, 9, 16), uint32] {
  %496 = cast(%var_4553, dtype="float64") /* ty=Tensor[(9, 9, 16), float64] */;
  %497 = shape_of(%var_4552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %498 = cast(%var_4552, dtype="float64") /* ty=Tensor[(9, 9, 16), float64] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %500 = divide(%498, %499) /* ty=Tensor[(9, 9, 16), float64] */;
  %501 = cast(%var_4553, dtype="uint32") /* ty=Tensor[(9, 9, 16), uint32] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="uint32") /* ty=Tensor[(9, 9, 16), uint32] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%503, %504) /* ty=Tensor[(9, 9, 16), uint32] */
}

def @func_4977(%var_4975: Tensor[(5, 15, 7), float32], %var_4976: Tensor[(192), float32]) -> (Tensor[(5, 15, 7), float32], Tensor[(54, 2), int8], Tensor[(192), float32]) {
  %511 = fn (%var_4963: Tensor[(5, 15, 7), float32], %var_4968: Tensor[(192), float32]) -> (Tensor[(5, 15, 7), float32], Tensor[(54, 2), int8], Tensor[(192), float32]) {
    %505 = cast(%var_4963, dtype="float32") /* ty=Tensor[(5, 15, 7), float32] */;
    %506 = cast(%var_4968, dtype="float32") /* ty=Tensor[(192), float32] */;
    %507 = reshape(%506, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float32] */;
    %508 = @func_3728(%507) /* ty=(Tensor[(16, 3, 4), float32], Tensor[(12, 9, 4), int8], Tensor[(54, 2), int8], Tensor[(432), int8]) */;
    %509 = sqrt(%505) /* ty=Tensor[(5, 15, 7), float32] */;
    %510 = %508.2;
    (%509, %510, %var_4968)
  };
  %511(%var_4975, %var_4976) /* ty=(Tensor[(5, 15, 7), float32], Tensor[(54, 2), int8], Tensor[(192), float32]) */
}

def @func_5762() -> (Tensor[(15, 8, 11), float32],) {
  @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */
}

def @func_6913() -> (Tensor[(15, 8, 11), float32],) {
  %513 = fn () -> (Tensor[(15, 8, 11), float32],) {
    %512 = @func_6405() /* ty=Tensor[(15, 8, 11), float32] */;
    (%512,)
  };
  %513() /* ty=(Tensor[(15, 8, 11), float32],) */
}

def @func_6833() -> (Tensor[(15, 8, 11), float64],) {
  %516 = fn () -> (Tensor[(15, 8, 11), float64],) {
    %514 = @func_6563() /* ty=(Tensor[(15, 8, 11), float64],) */;
    %515 = %514.0;
    (%515,)
  };
  %516() /* ty=(Tensor[(15, 8, 11), float64],) */
}

def @func_6767(%var_6766: Tensor[(15, 8, 11), uint32]) -> (Tensor[(15, 8, 11), uint8],) {
  %523 = fn (%var_6757: Tensor[(15, 8, 11), uint32]) -> (Tensor[(15, 8, 11), uint8],) {
    %517 = @func_6313() /* ty=Tensor[(15, 8, 11), uint32] */;
    %518 = cast(%var_6757, dtype="uint8") /* ty=Tensor[(15, 8, 11), uint8] */;
    %519 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
    %520 = cast(%517, dtype="uint8") /* ty=Tensor[(15, 8, 11), uint8] */;
    %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %522 = left_shift(%520, %521) /* ty=Tensor[(15, 8, 11), uint8] */;
    (%522,)
  };
  %523(%var_6766) /* ty=(Tensor[(15, 8, 11), uint8],) */
}

def @func_1190(%var_1137: Tensor[(4, 5, 4), bool], %var_1156: Tensor[(144), int32], %var_1157: Tensor[(2304), int32]) -> (Tensor[(4, 5, 4), bool], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(4, 5, 4), float32]) {
  %524 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 5, 4), bool] */, dtype="bool") /* ty=Tensor[(4, 5, 4), bool] */;
  %525 = shape_of(%var_1137, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%var_1137, dtype="bool") /* ty=Tensor[(4, 5, 4), bool] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %528 = cast(%var_1156, dtype="int32") /* ty=Tensor[(144), int32] */;
  %529 = cast(%var_1157, dtype="int32") /* ty=Tensor[(2304), int32] */;
  %530 = reshape(%528, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), int32] */;
  %531 = reshape(%529, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), int32] */;
  %532 = @func_601(%530, %531) /* ty=(Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(16, 16, 9), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32]) */;
  %533 = cast(%var_1137, dtype="float32") /* ty=Tensor[(4, 5, 4), float32] */;
  %534 = logical_or(%526, %527) /* ty=Tensor[(4, 5, 4), bool] */;
  %535 = %532.2;
  %536 = asinh(%533) /* ty=Tensor[(4, 5, 4), float32] */;
  (%534, %535, %var_1156, %var_1157, %536)
}

def @func_2491(%var_2489: Tensor[(5, 10, 3), uint16], %var_2490: Tensor[(5, 10, 3), uint16]) -> (Tensor[(5, 10, 3), uint16],) {
  @func_2487(%var_2489, %var_2490) /* ty=(Tensor[(5, 10, 3), uint16],) */
}

def @func_8697() -> (Tensor[(15, 8, 11), float64],) {
  @func_8695() /* ty=(Tensor[(15, 8, 11), float64],) */
}

def @func_2570(%var_2568: int16, %var_2569: Tensor[(10, 14, 16), int16]) -> (Tensor[(10, 14, 16), bool], Tensor[(10, 14, 16), float64]) {
  %543 = fn (%var_2537: int16, %var_2538: Tensor[(10, 14, 16), int16]) -> (Tensor[(10, 14, 16), bool], Tensor[(10, 14, 16), float64]) {
    %537 = cast(%var_2537, dtype="bool") /* ty=bool */;
    %538 = cast(%var_2538, dtype="bool") /* ty=Tensor[(10, 14, 16), bool] */;
    %539 = cast(%var_2537, dtype="float64") /* ty=float64 */;
    %540 = cast(%var_2538, dtype="float64") /* ty=Tensor[(10, 14, 16), float64] */;
    %541 = greater(%537, %538) /* ty=Tensor[(10, 14, 16), bool] */;
    %542 = divide(%539, %540) /* ty=Tensor[(10, 14, 16), float64] */;
    (%541, %542)
  };
  %543(%var_2568, %var_2569) /* ty=(Tensor[(10, 14, 16), bool], Tensor[(10, 14, 16), float64]) */
}

def @func_4790(%var_4788: Tensor[(12, 9, 8), uint32], %var_4789: Tensor[(12, 9, 8), uint32]) -> (Tensor[(12, 9, 8), bool], Tensor[(8, 6, 6), float64], Tensor[(72, 4), int16]) {
  @func_4786(%var_4788, %var_4789) /* ty=(Tensor[(12, 9, 8), bool], Tensor[(8, 6, 6), float64], Tensor[(72, 4), int16]) */
}

def @func_4786(%var_4760: Tensor[(12, 9, 8), uint32], %var_4761: Tensor[(12, 9, 8), uint32]) -> (Tensor[(12, 9, 8), bool], Tensor[(8, 6, 6), float64], Tensor[(72, 4), int16]) {
  %544 = cast(%var_4761, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  %545 = shape_of(%var_4760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%var_4760, dtype="bool") /* ty=Tensor[(12, 9, 8), bool] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %548 = cast(meta[relay.Constant][39] /* ty=Tensor[(72, 4), int16] */, dtype="int16") /* ty=Tensor[(72, 4), int16] */;
  %549 = cast(meta[relay.Constant][39] /* ty=Tensor[(72, 4), int16] */, dtype="int16") /* ty=Tensor[(72, 4), int16] */;
  %550 = reshape(%548, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), int16] */;
  %551 = reshape(%549, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), int16] */;
  %552 = @func_3328(%550, %551) /* ty=(Tensor[(8, 6, 6), int16], Tensor[(8, 6, 6), float64]) */;
  %553 = equal(%546, %547) /* ty=Tensor[(12, 9, 8), bool] */;
  %554 = %552.1;
  (%553, %554, meta[relay.Constant][39] /* ty=Tensor[(72, 4), int16] */)
}

def @func_7750(%var_7716: Tensor[(7, 6, 14), uint8], %var_7733: Tensor[(1760), float64], %var_7734: Tensor[(360), float32]) -> (Tensor[(7, 6, 14), bool], Tensor[(15, 8, 11), uint8], Tensor[(1320), uint32], Tensor[(7, 10), float32], Tensor[(1040), float32], Tensor[(48), int16], Tensor[(1760), float64], Tensor[(360), float32], Tensor[(7, 6, 14), float32], Tensor[(7, 6, 14), float64]) {
  %555 = cast(%var_7716, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %556 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(7, 6, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 6, 14), uint8] */, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %559 = cast(meta[relay.Constant][41] /* ty=Tensor[(1320), uint32] */, dtype="uint32") /* ty=Tensor[(1320), uint32] */;
  %560 = reshape(%559, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), uint32] */;
  %561 = @func_6765(%560) /* ty=(Tensor[(15, 8, 11), uint8],) */;
  %562 = cast(meta[relay.Constant][42] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %563 = cast(meta[relay.Constant][43] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %564 = cast(%var_7733, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %565 = cast(%var_7734, dtype="float32") /* ty=Tensor[(360), float32] */;
  %566 = reshape(%562, newshape=[1040]) /* ty=Tensor[(1040), float32] */;
  %567 = reshape(%563, newshape=[48]) /* ty=Tensor[(48), int16] */;
  %568 = reshape(%564, newshape=[1760]) /* ty=Tensor[(1760), float64] */;
  %569 = reshape(%565, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %570 = @func_7004(%566, %567, %568, %569) /* ty=(Tensor[(15, 8, 11), float32], Tensor[(7, 10), float32], Tensor[(112), int64], Tensor[(1040), float32], Tensor[(7, 10), float32], Tensor[(1760), float64], Tensor[(48), int16], Tensor[(1760), float64], Tensor[(10, 12, 3), float32], Tensor[(360), float32]) */;
  %571 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 6, 14), uint8] */, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %572 = shape_of(%var_7716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%var_7716, dtype="bool") /* ty=Tensor[(7, 6, 14), bool] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %575 = less(%573, %574) /* ty=Tensor[(7, 6, 14), bool] */;
  %576 = cast(%575, dtype="float32") /* ty=Tensor[(7, 6, 14), float32] */;
  %577 = cast(%var_7716, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
  %578 = less_equal(%557, %558) /* ty=Tensor[(7, 6, 14), bool] */;
  %579 = %561.0;
  %580 = %570.1;
  %581 = atanh(%576) /* ty=Tensor[(7, 6, 14), float32] */;
  %582 = asin(%577) /* ty=Tensor[(7, 6, 14), float64] */;
  (%578, %579, meta[relay.Constant][41] /* ty=Tensor[(1320), uint32] */, %580, meta[relay.Constant][42] /* ty=Tensor[(1040), float32] */, meta[relay.Constant][43] /* ty=Tensor[(48), int16] */, %var_7733, %var_7734, %581, %582)
}

def @func_3674(%var_3671: Tensor[(9, 7), float64], %var_3672: Tensor[(150, 1), uint16], %var_3673: Tensor[(2304), int32]) -> (Tensor[(9, 7), float64], Tensor[(5, 10, 3), uint16], Tensor[(150, 1), uint16], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32]) {
  %597 = fn (%var_3626: Tensor[(9, 7), float64], %var_3637: Tensor[(150, 1), uint16], %var_3645: Tensor[(2304), int32]) -> (Tensor[(9, 7), float64], Tensor[(5, 10, 3), uint16], Tensor[(150, 1), uint16], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32]) {
    %583 = cast(%var_3626, dtype="float64") /* ty=Tensor[(9, 7), float64] */;
    %584 = cast(%var_3637, dtype="uint16") /* ty=Tensor[(150, 1), uint16] */;
    %585 = cast(%var_3637, dtype="uint16") /* ty=Tensor[(150, 1), uint16] */;
    %586 = reshape(%584, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
    %587 = reshape(%585, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), uint16] */;
    %588 = @func_2487(%586, %587) /* ty=(Tensor[(5, 10, 3), uint16],) */;
    %589 = cast(meta[relay.Constant][44] /* ty=Tensor[(144), int32] */, dtype="int32") /* ty=Tensor[(144), int32] */;
    %590 = cast(%var_3645, dtype="int32") /* ty=Tensor[(2304), int32] */;
    %591 = reshape(%589, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), int32] */;
    %592 = reshape(%590, newshape=[16, 16, 9]) /* ty=Tensor[(16, 16, 9), int32] */;
    %593 = @func_601(%591, %592) /* ty=(Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(16, 16, 9), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32]) */;
    %594 = sin(%583) /* ty=Tensor[(9, 7), float64] */;
    %595 = %588.0;
    %596 = %593.2;
    (%594, %595, %var_3637, %596, meta[relay.Constant][44] /* ty=Tensor[(144), int32] */, %var_3645)
  };
  %597(%var_3671, %var_3672, %var_3673) /* ty=(Tensor[(9, 7), float64], Tensor[(5, 10, 3), uint16], Tensor[(150, 1), uint16], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32]) */
}

def @func_6002(%var_5963: Tensor[(15, 8, 11), float64]) -> (Tensor[(15, 8, 11), float64], Tensor[(15, 8, 11), int16], Tensor[(9, 15, 3), bool], Tensor[(405), int32]) {
  %598 = @func_5925() /* ty=Tensor[(15, 8, 11), float64] */;
  %599 = cast(%var_5963, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%598, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %603 = cast(%598, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %604 = sqrt(%603) /* ty=Tensor[(15, 8, 11), float64] */;
  %605 = cast(%598, dtype="int16") /* ty=Tensor[(15, 8, 11), int16] */;
  %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%604, dtype="int16") /* ty=Tensor[(15, 8, 11), int16] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %609 = cast(meta[relay.Constant][45] /* ty=Tensor[(405), int32] */, dtype="int32") /* ty=Tensor[(405), int32] */;
  %610 = reshape(%609, newshape=[9, 15, 3]) /* ty=Tensor[(9, 15, 3), int32] */;
  %611 = @func_5721(%610) /* ty=(Tensor[(9, 15, 3), bool],) */;
  %612 = mod(%601, %602) /* ty=Tensor[(15, 8, 11), float64] */;
  %613 = bitwise_xor(%607, %608) /* ty=Tensor[(15, 8, 11), int16] */;
  %614 = %611.0;
  (%612, %613, %614, meta[relay.Constant][45] /* ty=Tensor[(405), int32] */)
}

def @func_8021() -> Tensor[(7, 10, 3), float64] {
  @func_6672() /* ty=Tensor[(7, 10, 3), float64] */
}

def @func_7326() -> Tensor[(15, 8, 11), float32] {
  %615 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %616 = %615.0;
  %617 = cast(%616, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %618 = sinh(%617) /* ty=Tensor[(15, 8, 11), float64] */;
  %619 = cast(%618, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
  asinh(%619) /* ty=Tensor[(15, 8, 11), float32] */
}

def @func_8752() -> Tensor[(15, 8, 11), float32] {
  @func_8750() /* ty=Tensor[(15, 8, 11), float32] */
}

def @func_3730(%var_3729: Tensor[(16, 3, 4), float32]) -> (Tensor[(16, 3, 4), float32], Tensor[(12, 9, 4), int8], Tensor[(54, 2), int8], Tensor[(432), int8]) {
  %627 = fn (%var_3703: Tensor[(16, 3, 4), float32]) -> (Tensor[(16, 3, 4), float32], Tensor[(12, 9, 4), int8], Tensor[(54, 2), int8], Tensor[(432), int8]) {
    %620 = cast(%var_3703, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
    %621 = cast(meta[relay.Constant][46] /* ty=Tensor[(54, 2), int8] */, dtype="int8") /* ty=Tensor[(54, 2), int8] */;
    %622 = cast(meta[relay.Constant][47] /* ty=Tensor[(432), int8] */, dtype="int8") /* ty=Tensor[(432), int8] */;
    %623 = reshape(%621, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int8] */;
    %624 = reshape(%622, newshape=[12, 9, 4]) /* ty=Tensor[(12, 9, 4), int8] */;
    %625 = sqrt(%620) /* ty=Tensor[(16, 3, 4), float32] */;
    %626 = @func_3265(%623, %624) /* ty=Tensor[(12, 9, 4), int8] */;
    (%625, %626, meta[relay.Constant][46] /* ty=Tensor[(54, 2), int8] */, meta[relay.Constant][47] /* ty=Tensor[(432), int8] */)
  };
  %627(%var_3729) /* ty=(Tensor[(16, 3, 4), float32], Tensor[(12, 9, 4), int8], Tensor[(54, 2), int8], Tensor[(432), int8]) */
}

def @func_8493(%var_8491: Tensor[(5, 11, 14), uint64], %var_8492: Tensor[(5, 11, 14), uint64]) -> Tensor[(5, 11, 14), bool] {
  %632 = fn (%var_8480: Tensor[(5, 11, 14), uint64], %var_8481: Tensor[(5, 11, 14), uint64]) -> Tensor[(5, 11, 14), bool] {
    %628 = cast(%var_8481, dtype="bool") /* ty=Tensor[(5, 11, 14), bool] */;
    %629 = shape_of(%var_8480, dtype="int32") /* ty=Tensor[(3), int32] */;
    %630 = cast(%var_8480, dtype="bool") /* ty=Tensor[(5, 11, 14), bool] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%630, %631) /* ty=Tensor[(5, 11, 14), bool] */
  };
  %632(%var_8491, %var_8492) /* ty=Tensor[(5, 11, 14), bool] */
}

def @func_5047(%var_5046: Tensor[(1, 5, 1), float64]) -> (Tensor[(1, 5, 1), float64],) {
  %635 = fn (%var_5042: Tensor[(1, 5, 1), float64]) -> (Tensor[(1, 5, 1), float64],) {
    %633 = cast(%var_5042, dtype="float64") /* ty=Tensor[(1, 5, 1), float64] */;
    %634 = sinh(%633) /* ty=Tensor[(1, 5, 1), float64] */;
    (%634,)
  };
  %635(%var_5046) /* ty=(Tensor[(1, 5, 1), float64],) */
}

def @func_500(%var_498: Tensor[(11, 10, 16), float64]) -> Tensor[(11, 10, 16), float64] {
  @func_497(%var_498) /* ty=Tensor[(11, 10, 16), float64] */
}

def @func_6480(%var_6469: Tensor[(15, 8, 11), float32]) -> (Tensor[(15, 8, 11), int64],) {
  %636 = @func_6241() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %637 = %636.0;
  %638 = cast(%var_6469, dtype="int64") /* ty=Tensor[(15, 8, 11), int64] */;
  %639 = shape_of(%637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%637, dtype="int64") /* ty=Tensor[(15, 8, 11), int64] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %642 = bitwise_and(%640, %641) /* ty=Tensor[(15, 8, 11), int64] */;
  (%642,)
}

def @func_6800() -> (Tensor[(15, 8, 11), float32],) {
  @func_6798() /* ty=(Tensor[(15, 8, 11), float32],) */
}

def @func_7559() -> (Tensor[(15, 8, 11), float32],) {
  %643 = @func_7496() /* ty=(Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32]) */;
  %644 = %643.2;
  (%644,)
}

def @func_5804(%var_5801: Tensor[(15, 8, 11), float32], %var_5802: Tensor[(70), float32], %var_5803: Tensor[(5, 30), uint16]) -> (Tensor[(15, 8, 11), bool], Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(8, 6, 6), int16], uint8, Tensor[(16), uint8], Tensor[(5, 30), uint16], Tensor[(360), float32], Tensor[(2, 144), int16]) {
  %667 = fn (%var_5765: Tensor[(15, 8, 11), float32], %var_5772: Tensor[(70), float32], %var_5796: Tensor[(5, 30), uint16]) -> (Tensor[(15, 8, 11), bool], Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(8, 6, 6), int16], uint8, Tensor[(16), uint8], Tensor[(5, 30), uint16], Tensor[(360), float32], Tensor[(2, 144), int16]) {
    %645 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
    %646 = %645.0;
    %647 = cast(%var_5765, dtype="bool") /* ty=Tensor[(15, 8, 11), bool] */;
    %648 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
    %649 = cast(%646, dtype="bool") /* ty=Tensor[(15, 8, 11), bool] */;
    %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %651 = cast(%var_5772, dtype="float32") /* ty=Tensor[(70), float32] */;
    %652 = reshape(%651, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
    %653 = cast(meta[relay.Constant][48] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %654 = cast(meta[relay.Constant][49] /* ty=Tensor[(16), uint8] */, dtype="uint8") /* ty=Tensor[(16), uint8] */;
    %655 = cast(%var_5796, dtype="uint16") /* ty=Tensor[(5, 30), uint16] */;
    %656 = cast(meta[relay.Constant][50] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %657 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 144), int16] */, dtype="int16") /* ty=Tensor[(2, 144), int16] */;
    %658 = reshape(%653, newshape=[]) /* ty=uint8 */;
    %659 = reshape(%654, newshape=[1, 1, 16]) /* ty=Tensor[(1, 1, 16), uint8] */;
    %660 = reshape(%655, newshape=[150]) /* ty=Tensor[(150), uint16] */;
    %661 = reshape(%656, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %662 = reshape(%657, newshape=[288]) /* ty=Tensor[(288), int16] */;
    %663 = @func_4955(%658, %659, %660, %661, %662) /* ty=(Tensor[(1, 1, 16), uint8], Tensor[(5, 10, 3), uint16], Tensor[(150), uint16], Tensor[(10, 12, 3), float32], Tensor[(360), float32], Tensor[(8, 6, 6), int16], Tensor[(288), int16]) */;
    %664 = greater(%649, %650) /* ty=Tensor[(15, 8, 11), bool] */;
    %665 = @func_43(%652) /* ty=Tensor[(7, 10), float32] */;
    %666 = %663.5;
    (%664, %665, %var_5772, %666, meta[relay.Constant][48] /* ty=uint8 */, meta[relay.Constant][49] /* ty=Tensor[(16), uint8] */, %var_5796, meta[relay.Constant][50] /* ty=Tensor[(360), float32] */, meta[relay.Constant][51] /* ty=Tensor[(2, 144), int16] */)
  };
  %667(%var_5801, %var_5802, %var_5803) /* ty=(Tensor[(15, 8, 11), bool], Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(8, 6, 6), int16], uint8, Tensor[(16), uint8], Tensor[(5, 30), uint16], Tensor[(360), float32], Tensor[(2, 144), int16]) */
}

def @func_601(%var_558: Tensor[(16, 1, 9), int32], %var_559: Tensor[(16, 16, 9), int32]) -> (Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(16, 16, 9), int64], Tensor[(7, 10), float32], Tensor[(7, 10), float32]) {
  %668 = cast(meta[relay.Constant][52] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %669 = reshape(%668, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %670 = cast(%var_558, dtype="int32") /* ty=Tensor[(16, 1, 9), int32] */;
  %671 = cast(%var_559, dtype="int32") /* ty=Tensor[(16, 16, 9), int32] */;
  %672 = logical_xor(%670, %671) /* ty=Tensor[(16, 16, 9), int32] */;
  %673 = cast(%672, dtype="int64") /* ty=Tensor[(16, 16, 9), int64] */;
  %674 = cast(%var_558, dtype="int64") /* ty=Tensor[(16, 1, 9), int64] */;
  %675 = cast(meta[relay.Constant][52] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %676 = reshape(%675, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %677 = cast(meta[relay.Constant][52] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %678 = reshape(%677, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %679 = @func_43(%669) /* ty=Tensor[(7, 10), float32] */;
  %680 = left_shift(%673, %674) /* ty=Tensor[(16, 16, 9), int64] */;
  %681 = @func_43(%676) /* ty=Tensor[(7, 10), float32] */;
  %682 = @func_43(%678) /* ty=Tensor[(7, 10), float32] */;
  (%679, meta[relay.Constant][52] /* ty=Tensor[(70), float32] */, %680, %681, %682)
}

def @func_7496() -> (Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32]) {
  %683 = @func_6631() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %684 = %683.0;
  %685 = cast(%684, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
  %686 = reshape(%685, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), float32] */;
  %687 = @func_6480(%686) /* ty=(Tensor[(15, 8, 11), int64],) */;
  %688 = @func_5760() /* ty=(Tensor[(15, 8, 11), float32],) */;
  %689 = %687.0;
  %690 = %688.0;
  (%684, %689, %690)
}

def @func_6890() -> (Tensor[(15, 8, 11), float64],) {
  %692 = fn () -> (Tensor[(15, 8, 11), float64],) {
    %691 = @func_6357() /* ty=Tensor[(15, 8, 11), float64] */;
    (%691,)
  };
  %692() /* ty=(Tensor[(15, 8, 11), float64],) */
}

def @func_7655(%var_7654: Tensor[(56), float64]) -> (Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(72, 4), int16], Tensor[(36, 24), uint32], Tensor[(15, 8, 11), float64], Tensor[(2, 4, 7), float32], Tensor[(56), float64]) {
  %707 = fn (%var_7643: Tensor[(56), float64]) -> (Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(72, 4), int16], Tensor[(36, 24), uint32], Tensor[(15, 8, 11), float64], Tensor[(2, 4, 7), float32], Tensor[(56), float64]) {
    %693 = @func_6241() /* ty=(Tensor[(15, 8, 11), float32],) */;
    %694 = @func_6912() /* ty=(Tensor[(15, 8, 11), float32],) */;
    %695 = cast(meta[relay.Constant][53] /* ty=Tensor[(36, 24), uint32] */, dtype="uint32") /* ty=Tensor[(36, 24), uint32] */;
    %696 = cast(meta[relay.Constant][53] /* ty=Tensor[(36, 24), uint32] */, dtype="uint32") /* ty=Tensor[(36, 24), uint32] */;
    %697 = reshape(%695, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), uint32] */;
    %698 = reshape(%696, newshape=[12, 9, 8]) /* ty=Tensor[(12, 9, 8), uint32] */;
    %699 = @func_4786(%697, %698) /* ty=(Tensor[(12, 9, 8), bool], Tensor[(8, 6, 6), float64], Tensor[(72, 4), int16]) */;
    %700 = cast(%var_7643, dtype="float64") /* ty=Tensor[(56), float64] */;
    %701 = reshape(%700, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), float64] */;
    %702 = %693.0;
    %703 = %694.0;
    %704 = %699.2;
    %705 = @func_6104() /* ty=Tensor[(15, 8, 11), float64] */;
    %706 = @func_4652(%701) /* ty=Tensor[(2, 4, 7), float32] */;
    (%702, %703, %704, meta[relay.Constant][53] /* ty=Tensor[(36, 24), uint32] */, %705, %706, %var_7643)
  };
  %707(%var_7654) /* ty=(Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(72, 4), int16], Tensor[(36, 24), uint32], Tensor[(15, 8, 11), float64], Tensor[(2, 4, 7), float32], Tensor[(56), float64]) */
}

def @func_7328() -> Tensor[(15, 8, 11), float32] {
  @func_7326() /* ty=Tensor[(15, 8, 11), float32] */
}

def @func_7048() -> Tensor[(15, 8, 11), float64] {
  @func_7046() /* ty=Tensor[(15, 8, 11), float64] */
}

def @func_6313() -> Tensor[(15, 8, 11), uint32] {
  %708 = @func_5925() /* ty=Tensor[(15, 8, 11), float64] */;
  %709 = cast(meta[relay.Constant][54] /* ty=Tensor[(15, 8, 11), float64] */, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%708, dtype="uint32") /* ty=Tensor[(15, 8, 11), uint32] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%711, %712) /* ty=Tensor[(15, 8, 11), uint32] */
}

def @func_6631() -> (Tensor[(15, 8, 11), float32],) {
  %713 = @func_6405() /* ty=Tensor[(15, 8, 11), float32] */;
  (%713,)
}

def @func_6856(%var_6854: Tensor[(15, 8, 11), uint32], %var_6855: Tensor[(70), float32]) -> (Tensor[(15, 8, 11), bool], Tensor[(15, 8, 11), bool], Tensor[(70), float32], Tensor[(150), uint16]) {
  %728 = fn (%var_6839: Tensor[(15, 8, 11), uint32], %var_6849: Tensor[(70), float32]) -> (Tensor[(15, 8, 11), bool], Tensor[(15, 8, 11), bool], Tensor[(70), float32], Tensor[(150), uint16]) {
    %714 = @func_6313() /* ty=Tensor[(15, 8, 11), uint32] */;
    %715 = cast(%var_6839, dtype="bool") /* ty=Tensor[(15, 8, 11), bool] */;
    %716 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
    %717 = cast(%714, dtype="bool") /* ty=Tensor[(15, 8, 11), bool] */;
    %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %719 = not_equal(%717, %718) /* ty=Tensor[(15, 8, 11), bool] */;
    %720 = cast(%719, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
    %721 = cast(%var_6849, dtype="float32") /* ty=Tensor[(70), float32] */;
    %722 = cast(meta[relay.Constant][55] /* ty=Tensor[(150), uint16] */, dtype="uint16") /* ty=Tensor[(150), uint16] */;
    %723 = reshape(%720, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), float32] */;
    %724 = reshape(%721, newshape=[70]) /* ty=Tensor[(70), float32] */;
    %725 = reshape(%722, newshape=[5, 30]) /* ty=Tensor[(5, 30), uint16] */;
    %726 = @func_5800(%723, %724, %725) /* ty=(Tensor[(15, 8, 11), bool], Tensor[(7, 10), float32], Tensor[(70), float32], Tensor[(8, 6, 6), int16], uint8, Tensor[(16), uint8], Tensor[(5, 30), uint16], Tensor[(360), float32], Tensor[(2, 144), int16]) */;
    %727 = %726.0;
    (%719, %727, %var_6849, meta[relay.Constant][55] /* ty=Tensor[(150), uint16] */)
  };
  %728(%var_6854, %var_6855) /* ty=(Tensor[(15, 8, 11), bool], Tensor[(15, 8, 11), bool], Tensor[(70), float32], Tensor[(150), uint16]) */
}

def @func_7967(%var_7965: Tensor[(546), float64]) -> (Tensor[(15, 8, 11), float32], Tensor[(1001), float64], Tensor[(7, 10, 3), float64], Tensor[(9, 15, 3), bool], Tensor[(546), int32]) {
  @func_7964(%var_7965) /* ty=(Tensor[(15, 8, 11), float32], Tensor[(1001), float64], Tensor[(7, 10, 3), float64], Tensor[(9, 15, 3), bool], Tensor[(546), int32]) */
}

def @func_8421(%var_8415: Tensor[(360), float32], %var_8416: Tensor[(7, 10), float32], %var_8417: Tensor[(1, 56), float64], %var_8418: Tensor[(11, 56), float64], %var_8419: Tensor[(11, 56), float64], %var_8420: Tensor[(336, 1), uint8]) -> (Tensor[(15, 8, 11), float32], Tensor[(10, 12, 3), float32], Tensor[(360), float32], Tensor[(7, 10, 3), float64], Tensor[(15, 8, 11), bool], Tensor[(7, 10), float32], Tensor[(7, 10, 3), float64], Tensor[(11, 56), uint64], Tensor[(15, 8, 11), float64], Tensor[(2, 4, 7), bool], Tensor[(15, 8, 11), float32], Tensor[(11, 56), float32], Tensor[(6, 4, 14), uint8], Tensor[(336, 1), uint8]) {
  @func_8413(%var_8415, %var_8416, %var_8417, %var_8418, %var_8419, %var_8420) /* ty=(Tensor[(15, 8, 11), float32], Tensor[(10, 12, 3), float32], Tensor[(360), float32], Tensor[(7, 10, 3), float64], Tensor[(15, 8, 11), bool], Tensor[(7, 10), float32], Tensor[(7, 10, 3), float64], Tensor[(11, 56), uint64], Tensor[(15, 8, 11), float64], Tensor[(2, 4, 7), bool], Tensor[(15, 8, 11), float32], Tensor[(11, 56), float32], Tensor[(6, 4, 14), uint8], Tensor[(336, 1), uint8]) */
}

def @func_8678() -> Tensor[(15, 8, 11), float64] {
  @func_8676() /* ty=Tensor[(15, 8, 11), float64] */
}

def @func_4654(%var_4653: Tensor[(2, 4, 7), float64]) -> Tensor[(2, 4, 7), float32] {
  %732 = fn (%var_4636: Tensor[(2, 4, 7), float64]) -> Tensor[(2, 4, 7), float32] {
    %729 = cast(%var_4636, dtype="float64") /* ty=Tensor[(2, 4, 7), float64] */;
    %730 = acosh(%729) /* ty=Tensor[(2, 4, 7), float64] */;
    %731 = cast(%730, dtype="float32") /* ty=Tensor[(2, 4, 7), float32] */;
    sigmoid(%731) /* ty=Tensor[(2, 4, 7), float32] */
  };
  %732(%var_4653) /* ty=Tensor[(2, 4, 7), float32] */
}

def @func_4546(%var_4485: Tensor[(9, 4, 12), float32], %var_4493: Tensor[(144), int32]) -> (Tensor[(4, 5, 4), bool], Tensor[(80), bool], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(9, 4, 12), float32]) {
  %733 = cast(meta[relay.Constant][56] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %734 = cast(%var_4493, dtype="int32") /* ty=Tensor[(144), int32] */;
  %735 = cast(meta[relay.Constant][57] /* ty=Tensor[(2304), int32] */, dtype="int32") /* ty=Tensor[(2304), int32] */;
  %736 = reshape(%733, newshape=[4, 5, 4]) /* ty=Tensor[(4, 5, 4), bool] */;
  %737 = reshape(%734, newshape=[144]) /* ty=Tensor[(144), int32] */;
  %738 = reshape(%735, newshape=[2304]) /* ty=Tensor[(2304), int32] */;
  %739 = @func_1190(%736, %737, %738) /* ty=(Tensor[(4, 5, 4), bool], Tensor[(16, 16, 9), int64], Tensor[(144), int32], Tensor[(2304), int32], Tensor[(4, 5, 4), float32]) */;
  %740 = cast(%var_4485, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %741 = cosh(%740) /* ty=Tensor[(9, 4, 12), float32] */;
  %742 = cast(%741, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %743 = cos(%742) /* ty=Tensor[(9, 4, 12), float32] */;
  %744 = cast(%743, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %745 = acos(%744) /* ty=Tensor[(9, 4, 12), float32] */;
  %746 = cast(%745, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %747 = log10(%746) /* ty=Tensor[(9, 4, 12), float32] */;
  %748 = cast(%743, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %749 = shape_of(%747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%747, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %752 = %739.0;
  %753 = mod(%750, %751) /* ty=Tensor[(9, 4, 12), float32] */;
  (%752, meta[relay.Constant][56] /* ty=Tensor[(80), bool] */, %var_4493, meta[relay.Constant][57] /* ty=Tensor[(2304), int32] */, %753)
}

def @func_2467(%var_2465: Tensor[(3, 8, 7), float32], %var_2466: Tensor[(3, 8, 7), float32]) -> Tensor[(3, 8, 7), float64] {
  %760 = fn (%var_2453: Tensor[(3, 8, 7), float32], %var_2456: Tensor[(3, 8, 7), float32]) -> Tensor[(3, 8, 7), float64] {
    %754 = cast(%var_2453, dtype="float32") /* ty=Tensor[(3, 8, 7), float32] */;
    %755 = rsqrt(%754) /* ty=Tensor[(3, 8, 7), float32] */;
    %756 = cast(%var_2456, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
    %757 = shape_of(%755, dtype="int32") /* ty=Tensor[(3), int32] */;
    %758 = cast(%755, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
    %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%758, %759) /* ty=Tensor[(3, 8, 7), float64] */
  };
  %760(%var_2465, %var_2466) /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_1916(%var_1914: Tensor[(14, 13, 13), int64]) -> (Tensor[(14, 13, 13), bool], Tensor[(14, 13, 13), float32]) {
  @func_1913(%var_1914) /* ty=(Tensor[(14, 13, 13), bool], Tensor[(14, 13, 13), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen374/build/output.py:1778: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen374/build/output.py", line 1783, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1014) tvmgen_default_fused_asin_kernel0(double* __restrict__ T_asin, double* __restrict__ placeholder) {
  T_asin[(((int)threadIdx.x))] = asin(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_38 = relay.var("var_38", dtype = "float32", shape = (7, 10))#candidate|38|(7, 10)|var|float32
uop_39 = relay.log2(var_38.astype('float32')) # shape=(7, 10)
output = uop_39
output2 = uop_39
func_43 = relay.Function([var_38,], output)
mod['func_43'] = func_43
mod = relay.transform.InferType()(mod)
mutated_mod['func_43'] = func_43
mutated_mod = relay.transform.InferType()(mutated_mod)
var_44 = relay.var("var_44", dtype = "float32", shape = (7, 10))#candidate|44|(7, 10)|var|float32
func_43_call = mutated_mod.get_global_var('func_43')
call_45 = func_43_call(var_44)
output = call_45
func_46 = relay.Function([var_44], output)
mutated_mod['func_46'] = func_46
mutated_mod = relay.transform.InferType()(mutated_mod)
var_63 = relay.var("var_63", dtype = "float32", shape = (13, 8, 10))#candidate|63|(13, 8, 10)|var|float32
uop_64 = relay.acos(var_63.astype('float32')) # shape=(13, 8, 10)
output = uop_64
output2 = uop_64
func_68 = relay.Function([var_63,], output)
mod['func_68'] = func_68
mod = relay.transform.InferType()(mod)
var_69 = relay.var("var_69", dtype = "float32", shape = (13, 8, 10))#candidate|69|(13, 8, 10)|var|float32
output = func_68(var_69)
func_70 = relay.Function([var_69], output)
mutated_mod['func_70'] = func_70
mutated_mod = relay.transform.InferType()(mutated_mod)
const_483 = relay.const(3.976113, dtype = "float64")#candidate|483|()|const|float64
var_484 = relay.var("var_484", dtype = "float64", shape = (11, 10, 16))#candidate|484|(11, 10, 16)|var|float64
bop_485 = relay.mod(const_483.astype('float64'), var_484.astype('float64')) # shape=(11, 10, 16)
output = bop_485
output2 = bop_485
func_497 = relay.Function([var_484,], output)
mod['func_497'] = func_497
mod = relay.transform.InferType()(mod)
mutated_mod['func_497'] = func_497
mutated_mod = relay.transform.InferType()(mutated_mod)
var_498 = relay.var("var_498", dtype = "float64", shape = (11, 10, 16))#candidate|498|(11, 10, 16)|var|float64
func_497_call = mutated_mod.get_global_var('func_497')
call_499 = func_497_call(var_498)
output = call_499
func_500 = relay.Function([var_498], output)
mutated_mod['func_500'] = func_500
mutated_mod = relay.transform.InferType()(mutated_mod)
var_558 = relay.var("var_558", dtype = "int32", shape = (16, 1, 9))#candidate|558|(16, 1, 9)|var|int32
var_559 = relay.var("var_559", dtype = "int32", shape = (16, 16, 9))#candidate|559|(16, 16, 9)|var|int32
bop_560 = relay.logical_xor(var_558.astype('int32'), var_559.astype('int32')) # shape=(16, 16, 9)
func_43_call = mod.get_global_var('func_43')
func_46_call = mutated_mod.get_global_var('func_46')
const_572 = relay.const([4.232041,1.962574,5.692228,4.500936,-4.792431,7.003070,-7.835186,3.598195,0.950934,-2.842471,-2.259065,8.650291,9.143591,1.779637,4.943291,9.618961,-7.310943,2.211814,2.245019,-4.064098,2.025644,-8.952322,8.973117,-0.251672,3.934421,9.015632,-1.521533,-1.674945,-8.504054,0.095439,8.113581,-1.920579,1.860310,8.503316,-3.007675,-6.800356,1.643108,-9.530373,-1.579875,-6.130192,2.432161,4.791070,-8.919078,0.564532,8.604394,0.855429,-3.551367,8.150234,1.741208,-8.513435,-4.603813,8.511931,-4.681623,-1.449985,4.176107,-4.903237,-4.644936,-2.459315,-3.103591,5.065298,-5.416058,-8.071215,3.175464,-4.938578,-7.948524,-2.255188,6.164040,-5.833039,7.046883,-8.265522], dtype = "float32")#candidate|572|(70,)|const|float32
call_571 = func_43_call(relay.reshape(const_572.astype('float32'), [7, 10]))
call_573 = func_43_call(relay.reshape(const_572.astype('float32'), [7, 10]))
bop_574 = relay.left_shift(bop_560.astype('int64'), var_558.astype('int64')) # shape=(16, 16, 9)
func_43_call = mod.get_global_var('func_43')
func_46_call = mutated_mod.get_global_var('func_46')
call_578 = func_43_call(relay.reshape(const_572.astype('float32'), [7, 10]))
call_579 = func_43_call(relay.reshape(const_572.astype('float32'), [7, 10]))
func_43_call = mod.get_global_var('func_43')
func_46_call = mutated_mod.get_global_var('func_46')
call_593 = func_43_call(relay.reshape(const_572.astype('float32'), [7, 10]))
call_594 = func_43_call(relay.reshape(const_572.astype('float32'), [7, 10]))
output = relay.Tuple([call_571,const_572,bop_574,call_578,call_593,])
output2 = relay.Tuple([call_573,const_572,bop_574,call_579,call_594,])
func_601 = relay.Function([var_558,var_559,], output)
mod['func_601'] = func_601
mod = relay.transform.InferType()(mod)
mutated_mod['func_601'] = func_601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_601_call = mutated_mod.get_global_var('func_601')
var_603 = relay.var("var_603", dtype = "int32", shape = (16, 1, 9))#candidate|603|(16, 1, 9)|var|int32
var_604 = relay.var("var_604", dtype = "int32", shape = (16, 16, 9))#candidate|604|(16, 16, 9)|var|int32
call_602 = func_601_call(var_603,var_604,)
output = call_602
func_605 = relay.Function([var_603,var_604,], output)
mutated_mod['func_605'] = func_605
mutated_mod = relay.transform.InferType()(mutated_mod)
var_874 = relay.var("var_874", dtype = "int16", shape = (2, 12, 2))#candidate|874|(2, 12, 2)|var|int16
var_875 = relay.var("var_875", dtype = "int16", shape = (2, 12, 2))#candidate|875|(2, 12, 2)|var|int16
bop_876 = relay.bitwise_and(var_874.astype('int16'), relay.reshape(var_875.astype('int16'), relay.shape_of(var_874))) # shape=(2, 12, 2)
uop_882 = relay.asinh(var_875.astype('float32')) # shape=(2, 12, 2)
bop_884 = relay.mod(uop_882.astype('float32'), relay.reshape(bop_876.astype('float32'), relay.shape_of(uop_882))) # shape=(2, 12, 2)
func_497_call = mod.get_global_var('func_497')
func_500_call = mutated_mod.get_global_var('func_500')
var_892 = relay.var("var_892", dtype = "float64", shape = (1760,))#candidate|892|(1760,)|var|float64
call_891 = func_497_call(relay.reshape(var_892.astype('float64'), [11, 10, 16]))
call_893 = func_497_call(relay.reshape(var_892.astype('float64'), [11, 10, 16]))
output = relay.Tuple([bop_884,call_891,var_892,])
output2 = relay.Tuple([bop_884,call_893,var_892,])
func_903 = relay.Function([var_874,var_875,var_892,], output)
mod['func_903'] = func_903
mod = relay.transform.InferType()(mod)
var_904 = relay.var("var_904", dtype = "int16", shape = (2, 12, 2))#candidate|904|(2, 12, 2)|var|int16
var_905 = relay.var("var_905", dtype = "int16", shape = (2, 12, 2))#candidate|905|(2, 12, 2)|var|int16
var_906 = relay.var("var_906", dtype = "float64", shape = (1760,))#candidate|906|(1760,)|var|float64
output = func_903(var_904,var_905,var_906,)
func_907 = relay.Function([var_904,var_905,var_906,], output)
mutated_mod['func_907'] = func_907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_978 = relay.var("var_978", dtype = "int64", shape = (14, 4, 2))#candidate|978|(14, 4, 2)|var|int64
var_979 = relay.var("var_979", dtype = "int64", shape = (14, 4, 2))#candidate|979|(14, 4, 2)|var|int64
bop_980 = relay.left_shift(var_978.astype('int64'), relay.reshape(var_979.astype('int64'), relay.shape_of(var_978))) # shape=(14, 4, 2)
uop_990 = relay.cosh(var_979.astype('float64')) # shape=(14, 4, 2)
bop_993 = relay.subtract(uop_990.astype('int64'), relay.reshape(bop_980.astype('int64'), relay.shape_of(uop_990))) # shape=(14, 4, 2)
func_43_call = mod.get_global_var('func_43')
func_46_call = mutated_mod.get_global_var('func_46')
const_1003 = relay.const([[4.082064,6.317200,-1.958603,-7.679227,1.148423,3.617536,7.655150,3.322383,3.544994,-4.635180],[-8.243013,-6.830993,2.378831,-1.965422,3.504547,-1.228209,1.075676,-1.531857,8.752820,0.891005],[-9.736023,9.736629,7.389360,-1.007794,-1.003275,8.072814,4.212560,2.912567,3.351201,6.182757],[-2.137501,6.129947,4.452237,9.915121,-4.871304,-3.149048,7.577487,-6.789708,-8.265686,8.567663],[7.734817,7.388616,-0.176080,7.734014,3.558706,-0.433117,-2.728735,1.755230,2.795212,6.818850],[-6.122991,4.358141,3.285812,-8.665826,-8.556165,-7.985932,-0.332000,8.164085,-6.931871,-5.276152],[2.020078,0.312371,-9.642754,7.475719,-0.076354,4.522644,-5.031467,-6.113039,-7.811509,-2.309578]], dtype = "float32")#candidate|1003|(7, 10)|const|float32
call_1002 = func_43_call(relay.reshape(const_1003.astype('float32'), [7, 10]))
call_1004 = func_43_call(relay.reshape(const_1003.astype('float32'), [7, 10]))
func_43_call = mod.get_global_var('func_43')
func_46_call = mutated_mod.get_global_var('func_46')
call_1009 = func_43_call(relay.reshape(call_1002.astype('float32'), [7, 10]))
call_1010 = func_43_call(relay.reshape(call_1002.astype('float32'), [7, 10]))
func_68_call = mod.get_global_var('func_68')
func_70_call = mutated_mod.get_global_var('func_70')
var_1017 = relay.var("var_1017", dtype = "float32", shape = (1040,))#candidate|1017|(1040,)|var|float32
call_1016 = func_68_call(relay.reshape(var_1017.astype('float32'), [13, 8, 10]))
call_1018 = func_68_call(relay.reshape(var_1017.astype('float32'), [13, 8, 10]))
func_43_call = mod.get_global_var('func_43')
func_46_call = mutated_mod.get_global_var('func_46')
call_1020 = func_43_call(relay.reshape(const_1003.astype('float32'), [7, 10]))
call_1021 = func_43_call(relay.reshape(const_1003.astype('float32'), [7, 10]))
output = relay.Tuple([bop_993,call_1002,const_1003,call_1009,call_1016,var_1017,call_1020,])
output2 = relay.Tuple([bop_993,call_1004,const_1003,call_1010,call_1018,var_1017,call_1021,])
func_1026 = relay.Function([var_978,var_979,var_1017,], output)
mod['func_1026'] = func_1026
mod = relay.transform.InferType()(mod)
var_1027 = relay.var("var_1027", dtype = "int64", shape = (14, 4, 2))#candidate|1027|(14, 4, 2)|var|int64
var_1028 = relay.var("var_1028", dtype = "int64", shape = (14, 4, 2))#candidate|1028|(14, 4, 2)|var|int64
var_1029 = relay.var("var_1029", dtype = "float32", shape = (1040,))#candidate|1029|(1040,)|var|float32
output = func_1026(var_1027,var_1028,var_1029,)
func_1030 = relay.Function([var_1027,var_1028,var_1029,], output)
mutated_mod['func_1030'] = func_1030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1137 = relay.var("var_1137", dtype = "bool", shape = (4, 5, 4))#candidate|1137|(4, 5, 4)|var|bool
const_1138 = relay.const([[[True,False,True,False],[False,False,False,False],[True,False,True,True],[False,True,True,False],[True,False,True,False]],[[True,False,True,False],[True,False,True,True],[False,False,False,True],[False,True,True,False],[True,True,False,False]],[[True,True,True,True],[False,True,False,False],[True,True,False,False],[True,False,False,True],[False,False,False,False]],[[False,False,True,False],[True,False,False,False],[True,False,False,False],[True,False,False,False],[True,False,False,False]]], dtype = "bool")#candidate|1138|(4, 5, 4)|const|bool
bop_1139 = relay.logical_or(var_1137.astype('bool'), relay.reshape(const_1138.astype('bool'), relay.shape_of(var_1137))) # shape=(4, 5, 4)
func_601_call = mod.get_global_var('func_601')
func_605_call = mutated_mod.get_global_var('func_605')
var_1156 = relay.var("var_1156", dtype = "int32", shape = (144,))#candidate|1156|(144,)|var|int32
var_1157 = relay.var("var_1157", dtype = "int32", shape = (2304,))#candidate|1157|(2304,)|var|int32
call_1155 = relay.TupleGetItem(func_601_call(relay.reshape(var_1156.astype('int32'), [16, 1, 9]), relay.reshape(var_1157.astype('int32'), [16, 16, 9]), ), 2)
call_1158 = relay.TupleGetItem(func_605_call(relay.reshape(var_1156.astype('int32'), [16, 1, 9]), relay.reshape(var_1157.astype('int32'), [16, 16, 9]), ), 2)
uop_1163 = relay.asinh(var_1137.astype('float32')) # shape=(4, 5, 4)
output = relay.Tuple([bop_1139,call_1155,var_1156,var_1157,uop_1163,])
output2 = relay.Tuple([bop_1139,call_1158,var_1156,var_1157,uop_1163,])
func_1190 = relay.Function([var_1137,var_1156,var_1157,], output)
mod['func_1190'] = func_1190
mod = relay.transform.InferType()(mod)
mutated_mod['func_1190'] = func_1190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1190_call = mutated_mod.get_global_var('func_1190')
var_1192 = relay.var("var_1192", dtype = "bool", shape = (4, 5, 4))#candidate|1192|(4, 5, 4)|var|bool
var_1193 = relay.var("var_1193", dtype = "int32", shape = (144,))#candidate|1193|(144,)|var|int32
var_1194 = relay.var("var_1194", dtype = "int32", shape = (2304,))#candidate|1194|(2304,)|var|int32
call_1191 = func_1190_call(var_1192,var_1193,var_1194,)
output = call_1191
func_1195 = relay.Function([var_1192,var_1193,var_1194,], output)
mutated_mod['func_1195'] = func_1195
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1232 = relay.var("var_1232", dtype = "int16", shape = (16, 5, 3))#candidate|1232|(16, 5, 3)|var|int16
var_1233 = relay.var("var_1233", dtype = "int16", shape = (16, 5, 3))#candidate|1233|(16, 5, 3)|var|int16
bop_1234 = relay.bitwise_or(var_1232.astype('int16'), relay.reshape(var_1233.astype('int16'), relay.shape_of(var_1232))) # shape=(16, 5, 3)
func_497_call = mod.get_global_var('func_497')
func_500_call = mutated_mod.get_global_var('func_500')
const_1248 = relay.const([2.203672,6.801003,-1.112797,-3.009540,-0.274109,0.819063,-4.017398,-0.921597,-5.979486,0.529867,-6.568693,7.895638,-8.954871,-7.654988,-7.173857,-5.303089,-4.113476,9.829684,-2.587337,7.251135,-5.197146,2.321301,9.005024,-5.289124,0.387265,4.071039,8.483707,1.998918,-2.990500,9.915655,-1.904286,-6.365680,1.056915,7.109945,-7.510148,4.905381,4.803195,9.271080,-1.233811,-6.504444,8.153122,7.835241,-2.680430,-7.626200,-3.952458,-7.468885,6.393699,7.798365,-3.301607,6.890692,2.997694,9.371954,3.023938,-4.057161,4.187149,8.388978,-7.256185,9.998458,-0.313672,8.398574,7.776672,7.507364,-2.658266,8.780985,-0.489614,4.807755,2.051521,-2.341506,4.816917,-4.819708,-3.561783,-0.277674,0.427395,9.043475,5.626790,-3.110037,-2.933311,-7.608945,2.106621,-1.844182,-4.098668,7.423710,-9.879118,-7.650385,-5.065954,-3.854165,-0.086252,9.063461,-2.174477,6.348715,9.235550,-0.739040,-2.192845,5.977665,8.366964,5.619554,3.739182,8.650621,-1.256102,-7.663630,0.278005,1.569884,3.965185,7.049400,-5.344541,1.693406,-4.484846,7.904587,-0.701488,-7.253694,-2.384574,9.531473,9.266742,-4.628953,-7.178631,-8.593775,3.611348,-2.087413,8.037196,4.475748,-1.642735,9.224591,-4.048955,5.544642,0.920839,-9.338203,8.517096,-0.391188,9.244860,5.841913,9.457612,7.427833,6.888716,1.000574,9.680347,-8.722984,8.472006,-0.826324,0.223496,2.573229,-0.936446,-3.038695,6.582333,-6.149811,6.958493,9.641219,9.141857,-3.937069,-7.486130,4.862224,-0.621860,5.266614,-7.726211,2.809301,-4.531304,-7.505355,5.621323,-8.479364,8.676587,5.827157,-5.855639,1.296368,0.138889,0.833568,5.756742,1.477381,-5.515299,-1.880572,-1.135583,-9.464242,-5.852127,6.701053,-1.789207,-3.576815,-1.144149,-6.065020,-4.558044,4.306343,3.625483,4.927204,9.672177,-0.048113,-7.648089,-3.955737,4.958254,7.928729,-8.305828,8.987160,-5.601283,-1.504055,3.557303,-9.860395,0.341520,5.109079,-5.408860,4.365849,2.716039,6.280895,-2.190707,-4.576460,9.463091,5.374763,3.828344,-8.349013,9.926160,-2.502091,2.778918,-3.144974,-9.709474,-0.009684,8.309359,1.059623,8.591687,-3.464808,-9.498420,3.756638,-5.645093,2.163462,6.517370,5.096293,0.776572,8.045818,-1.107986,7.392701,8.147127,1.917177,2.237350,5.478982,-3.843714,1.799734,4.734807,-3.956323,9.216517,9.805398,7.518632,3.727704,-9.921416,3.150001,8.486173,-2.194690,-6.817225,8.290427,-3.624138,1.518261,-2.211024,3.527848,4.257253,0.598362,-5.876580,-8.789518,3.980325,-5.715630,-1.960184,6.096258,-6.144480,2.018353,8.977696,-6.833963,8.183378,-2.531708,-0.716185,0.107043,5.868176,0.376039,8.855925,5.016206,4.581125,9.952296,-1.986186,6.886080,-0.819206,6.117096,4.399863,0.403735,8.541183,-2.257314,7.433182,-7.164647,-1.698789,-1.111354,5.800688,2.794086,8.732826,-9.036767,2.272926,-8.977738,-9.282010,9.169425,-4.540367,9.782399,4.392266,7.107525,6.304782,8.603942,1.608713,-5.139350,-0.232209,-2.587636,-4.042772,0.866085,-6.456946,9.034956,1.308879,0.713598,9.506823,-9.880771,-0.825645,0.189669,5.874799,-7.362385,3.347171,8.563889,-2.425887,3.063144,-4.842630,-3.638014,0.334280,-9.482985,-9.940784,-1.968433,-4.313426,-4.130422,-5.856173,-8.778734,1.020942,3.210788,0.305552,-4.760737,-0.663491,-9.236382,-1.357246,8.745540,-0.502132,-9.531675,1.100003,-8.049627,9.391854,3.001646,7.856950,9.893759,-8.862834,5.360796,4.915139,3.558256,6.195527,8.369165,-8.787548,9.199032,-6.014942,3.310792,-3.495263,6.815325,9.705645,-9.044404,-5.564587,4.042215,-8.964371,9.787583,-8.724221,8.752110,-9.505774,8.712797,0.024433,-5.569017,-6.547425,-1.804042,2.046716,5.972771,-5.383520,9.348889,3.293767,6.997616,5.518488,-1.975423,1.902740,-7.890665,-9.120609,-8.717557,-1.802341,8.642619,-2.994850,-6.598953,2.777108,-3.511944,0.165218,-8.494541,-6.088294,-7.774171,-6.258297,3.934484,-0.459705,-4.412269,6.394184,-5.302463,1.859496,8.239015,4.028156,9.559579,2.454000,-2.682696,-8.845228,3.852578,-8.736961,-2.604721,-2.463361,-7.646073,9.247183,2.056082,2.461799,9.294282,0.187518,1.259368,-6.117091,5.935876,-8.257972,-4.828830,9.367872,-7.044450,0.303321,-9.239088,-2.862761,-8.621130,7.290859,9.510837,8.866602,0.703230,0.907087,-5.189057,-7.134968,8.494071,7.313240,1.582818,3.263922,2.091721,-6.734791,6.284147,-1.403307,9.696801,1.833233,2.694080,1.785319,-6.660557,3.399315,-6.749968,-6.757951,-1.017787,9.391864,-1.990807,0.380527,6.889942,-5.478393,3.460902,-3.246927,-7.255862,5.170541,-3.189684,2.615194,5.736802,3.348594,-5.274748,7.327602,-4.434829,-1.164801,4.062826,-4.098521,1.313115,9.341934,3.353056,8.464088,-9.251152,5.039259,0.080705,3.544829,9.594893,-3.792613,-4.737212,5.276457,-1.731114,-2.993116,4.676979,-9.562719,0.432397,4.088622,1.631457,-4.679420,0.438114,7.191482,-5.691841,7.914851,4.230739,5.025819,8.100614,-0.065531,-5.793502,-1.292834,2.852770,9.799741,-5.404890,-3.191616,1.430389,5.412879,-8.624663,-2.768152,0.133839,5.691315,3.753338,2.523016,7.893163,4.564267,-8.942362,7.951116,-7.351454,-3.180455,-0.216001,0.129692,0.005795,-4.958704,4.073877,3.596781,4.485010,3.525983,7.737314,2.812804,3.493847,3.852356,-8.214731,9.276137,2.605648,-3.259311,-2.017000,5.988503,-3.764487,-1.414681,-7.235584,5.668787,-0.252246,8.531452,0.122115,-4.330466,2.012159,-3.437074,-7.453450,-2.763750,1.939101,2.235739,-4.166741,7.926019,1.339725,-5.791657,7.880026,5.101949,9.090259,-6.290070,9.755143,3.620934,-4.836219,8.263705,6.930137,-0.116683,-5.702702,7.248986,-1.225921,8.756710,-5.356200,-5.528477,6.710025,1.590010,-1.456295,7.434330,-7.997731,-9.895944,-5.002299,4.690366,2.002918,-4.156208,-1.936409,9.199822,9.997900,-1.691291,-9.256845,5.698847,-0.386294,-9.594658,-2.484686,-9.601781,-8.068800,6.575675,-9.539501,1.871738,-9.568857,1.902717,4.863605,-4.451406,-8.619988,-3.220509,1.367346,-4.700865,-4.515474,-9.322115,0.390625,1.502494,1.412450,-2.899778,5.671050,8.122030,-7.540190,-3.554916,2.676425,-5.694007,5.922260,8.154447,-7.739213,-0.465532,-3.667188,-1.075345,-5.738640,-1.863204,-4.368487,3.441706,-8.377028,-3.602582,-6.609641,-6.086685,4.107397,2.447428,1.485397,1.759374,-5.590912,-9.932902,-3.090091,-3.635902,-4.250913,-9.064231,-0.639062,-9.171973,-2.220645,9.535858,-5.641897,5.291410,-9.624152,-4.944362,6.664503,0.681891,-9.557473,-3.818109,-8.340583,2.613310,3.787435,-1.487329,6.142277,-1.988102,5.584999,-8.282788,0.676233,0.439023,-3.084481,0.593161,6.283439,-2.116608,-2.806767,-6.215727,3.791069,3.362219,6.851578,-6.972786,5.174875,-1.852446,-0.289678,-7.674391,-3.470651,8.430910,3.378580,-9.087904,-1.759935,-1.761063,-8.573166,5.278536,-6.192296,-5.773100,-5.980974,6.007172,-3.360714,-1.103327,-9.468384,-4.764209,-3.206193,-0.338330,9.160432,-7.137922,8.091538,-7.573828,8.760979,3.063257,5.694599,5.555150,2.671686,8.883518,0.040091,-3.118461,-1.231717,-2.796028,6.977214,-6.008132,-7.342825,-9.363728,-2.343050,1.813255,-9.694049,9.851322,-8.501448,-1.896817,8.986638,9.662340,8.271684,3.546503,2.400123,0.240458,-7.884968,1.703521,-4.796372,-1.231956,-2.639385,1.817712,-4.788541,-9.520407,8.268756,-6.961791,-2.673465,7.838966,-7.766783,6.882982,5.493018,-8.285896,9.748252,-8.632764,7.503056,-1.411171,-4.588740,-5.710840,-3.076973,7.983311,5.121739,8.622895,-1.772024,-3.559751,4.184770,-0.077349,-6.716706,-5.747105,-9.659640,8.305471,8.434105,8.494474,3.450801,-9.248643,0.422742,-0.585561,-5.412578,-0.859174,-9.545690,1.565799,1.041691,-4.412650,-6.419743,2.861768,6.487831,-4.745954,-7.036973,-9.282674,7.767786,5.810813,4.314375,-1.224399,6.983855,-6.365725,5.128284,2.264413,3.838592,-7.989129,-0.672762,-1.206391,-4.312174,-1.725345,-2.095831,2.254935,-1.509766,-1.222748,-1.990079,5.216100,-4.263113,9.418843,2.390412,-7.377253,1.027691,-5.078584,-2.027987,9.022822,4.911444,0.768298,5.786704,0.431518,4.763862,1.424972,-9.005072,-9.030046,-6.807324,-0.888738,-6.346181,-1.464875,4.702744,-9.261057,0.248223,5.251428,4.495611,-2.943818,6.597369,-5.152559,-0.843352,-1.474639,-0.667443,3.343970,-4.129440,-1.301264,-8.693450,-2.382672,3.778890,7.987988,5.261582,8.054966,1.614919,2.251503,-7.963622,4.280739,5.338511,9.091475,-1.556714,-5.953013,6.264476,-8.123503,2.055355,7.024908,3.783275,2.403906,2.209036,7.806735,-1.305374,4.787644,5.949879,8.140939,-6.703350,-4.707980,1.616043,-7.254704,-2.059013,-8.951634,6.078726,-2.165332,-8.664052,5.465368,3.438835,-9.606502,8.675249,-8.464173,6.951385,3.401721,-4.214813,-8.626746,-4.191505,-1.072317,5.493743,-6.536131,5.813014,4.491513,-1.204513,1.856943,-4.960947,-9.414679,-3.038384,-7.451656,-3.360867,8.290853,5.133788,8.751396,-5.692026,-0.746725,-1.289253,7.494825,-5.686385,-3.185516,0.480739,-5.136746,8.767982,-0.068540,2.266917,7.868062,-6.501368,-7.588586,3.254227,-2.178938,-9.563776,4.053913,2.909699,-6.308199,-6.354916,1.507412,-6.088285,2.276885,-4.431158,0.923162,-1.428335,6.230582,-2.577086,-1.336896,2.992627,0.803992,-0.555505,0.213908,7.978286,5.735338,-9.849579,-8.602828,-0.620610,-8.106033,1.964413,-9.139735,8.359009,-2.582662,1.865696,8.442933,3.532191,-9.216350,4.043795,-3.189715,3.726422,-4.061728,-2.262877,5.551944,-3.080277,5.267480,8.406476,2.440400,2.123560,-4.775236,3.128672,-6.904130,4.923134,-5.723018,-3.624516,2.633227,-5.709983,6.802891,-1.439727,4.518550,-7.907194,-0.466653,-0.875162,-4.267851,-7.844803,-6.480164,-4.350695,-9.461532,-3.671946,8.652446,5.909700,-8.816747,-5.056441,-7.895085,-6.091532,-3.313674,-5.401432,5.315194,-1.629187,4.751879,-7.828208,-8.004288,-5.406760,-4.457630,1.504388,4.971537,9.468975,-5.012804,2.856559,-0.146041,-6.899186,-6.650836,-6.601327,3.972798,-9.095340,1.361528,1.716991,9.054238,-5.036547,-3.850014,4.437700,5.812567,7.024328,5.263730,-3.893408,9.133946,-7.523731,-8.189694,5.791599,2.107862,-3.881024,-5.538794,2.503919,0.529823,-3.140208,0.890025,2.037923,-8.031701,0.980233,1.079603,6.905419,-1.689078,-0.738153,-3.247863,6.789692,8.958786,-4.734995,2.898984,-8.920459,-2.073115,-8.867067,-8.686194,-3.150551,-9.465968,-8.753842,4.108131,-5.650119,2.221195,-8.486071,-9.406765,-2.467821,2.062424,-7.122076,-0.682902,3.363428,2.228046,-3.925860,1.856574,-8.802935,-5.251344,5.083537,-0.870885,-4.769349,1.429557,-7.888727,-4.609449,5.057989,3.476545,-1.338784,-8.183516,-6.062040,1.909782,-5.416059,9.938604,-7.045381,9.699375,-9.748139,-7.892446,-1.116376,6.882373,0.249376,2.996580,-9.988170,-8.632179,-3.537918,-4.889843,-2.589413,7.246527,7.655653,2.039568,7.507620,5.361250,7.683794,-3.647888,2.161570,-1.171515,2.694075,-8.461358,-3.432661,-2.240021,3.690939,-2.712339,-0.819538,-9.075296,-2.467496,0.321382,2.871052,0.961279,-4.575567,-3.986739,-8.911818,8.974608,-1.093624,6.374743,-4.571316,9.266938,-5.739303,-7.257102,2.648685,-4.067709,-0.980518,4.441320,4.943190,-9.981300,-2.371960,1.607507,1.341993,-1.673692,-5.664073,9.670837,7.972277,2.180081,-8.025507,-6.624671,-2.017421,1.931541,9.242310,-6.364995,-4.703266,-1.643725,2.773247,5.817922,-0.510140,-2.121994,7.884285,-7.287677,-1.477265,-8.753634,5.181261,9.361053,-0.027008,-1.520209,3.125308,-2.859117,-2.704610,5.964715,-2.491650,-2.415881,-4.486005,-9.105256,-6.654799,8.316736,-7.994011,5.067901,-8.109376,8.544243,-2.695523,-2.495793,9.679695,7.075622,-9.647910,1.587486,2.421602,8.095217,7.547425,6.413332,-7.085998,-0.054271,-1.034991,-4.767415,-8.760379,6.036242,-4.769584,9.187544,-7.003484,9.501284,9.023184,-3.756794,-8.218692,-4.587013,7.777636,-5.759333,-6.280016,-3.723420,-4.825459,-0.750891,-1.640828,9.619101,7.646474,-0.676977,2.528074,-7.525962,9.967186,9.241073,5.751082,0.308993,4.852954,-6.642954,-4.093794,0.054053,-2.418237,-9.974733,9.038239,0.790568,-8.679473,0.119694,2.168099,-3.370122,-1.138002,-5.668349,4.030477,-8.453206,2.233738,3.477655,4.465032,4.115968,-2.220384,-5.807431,8.549409,-0.668234,-9.072855,-8.546894,-1.095600,-1.641838,-0.776201,-3.146104,-3.216831,9.380284,0.054487,6.312573,6.195743,-0.992089,-7.061945,4.336719,-4.799806,5.383229,6.738941,-6.717152,-7.566581,-1.717709,-6.269916,8.489549,3.315974,-2.902248,6.348735,8.537377,-5.200638,-4.011544,7.721893,8.253642,3.794451,-9.823534,-6.292822,-5.815021,0.435547,6.444730,0.047772,-7.875401,7.258956,-1.469606,-9.097833,2.580575,3.763338,-0.235521,-8.788757,8.663056,-5.863049,-0.614072,-3.541803,-8.000764,-2.773582,3.776573,-9.583295,-4.675981,5.561488,-9.497584,9.048003,-3.133252,0.847963,6.304547,-6.348656,1.792733,-1.632176,6.193970,9.369240,-8.619409,-5.122480,3.701388,9.095957,-8.428257,-6.257019,-8.720918,5.449631,5.531175,8.643705,-3.395796,4.187048,2.216085,8.143263,-0.581397,-2.485949,-2.995184,8.108441,0.687350,-4.388995,9.571403,-3.197477,-2.551784,-3.945418,-1.251547,-4.536574,-3.537374,-4.550544,8.904545,-3.537918,-5.396553,-8.470588,9.434048,1.026066,-3.065814,7.815244,-3.970120,7.401827,0.200789,-2.175009,-4.252278,-9.069060,-6.285490,-9.300374,-8.406400,-5.769980,7.015408,-3.751463,-0.133315,5.167476,5.674062,-7.509727,-3.142205,-2.189316,9.902571,7.017022,2.744458,-4.573106,-5.799171,0.025083,-5.502506,-8.773354,-7.288622,-6.420008,-2.821347,2.589749,-9.476546,0.414564,1.363107,-7.384737,9.774019,-5.771017,7.749129,-4.856449,6.362842,6.692531,5.198948,8.192032,-1.414782,-1.161832,2.944497,-7.572287,6.010049,-9.391854,2.833419,-7.923745,-1.646353,6.019778,8.822007,-8.932464,3.670930,-6.060254,6.574635,-8.385453,-7.883840,-9.632336,-3.616372,7.207013,-2.516770,-5.740346,3.704396,-7.922857,-9.658356,1.158590,-0.362253,-2.616607,7.815512,-0.470341,5.313825,-6.813045,-1.345271,8.182020,8.590714,-1.842255,8.286691,8.996265,3.813831,-9.407928,8.914339,-1.433764,8.885564,4.716903,3.343432,4.530243,-6.083032,-3.463232,-1.031834,8.121788,2.416662,-4.106687,9.457286,4.054652,5.050977,-1.482398,6.556334,-5.896888,4.491848,-2.351670,-5.884143,6.332047,0.381179,6.356825,-0.224888,-7.935104,-6.601216,-7.230180,-0.600252,7.088033,9.618492,6.936032,-0.659719,-8.920232,8.313714,-5.407937,-7.855079,1.985976,-2.482904,-6.046470,6.910656,-6.506228,3.861252,1.111936,-5.225431,3.494234,-0.033104,-3.814428,7.584342,7.565082,7.357083,-3.999440,7.750223,-8.506811,-6.807143,-4.312735,7.220495,9.861834,4.198992,-3.835831,3.433652,-9.486847,-2.948674,-4.982299,5.423457,3.685240,-0.567001,-1.435940,7.314872,3.262228,8.778425,0.123998,-4.888826,7.748325,-9.196025,6.351953,-6.775372,0.877206,-1.890533,-6.058625,8.883975,3.833610,4.904932,-9.357871,-8.128771,-7.233241,1.898837,-0.581209,-9.979364,-0.124729,0.429361,9.454536,5.100553,1.485618,-7.351952,4.396778,1.246627,6.915680,-9.656994,5.941922,4.657317,0.663187,0.173110,-2.378653,8.921920,-4.669366,-2.844952,-1.097003,8.389532,-5.751359,4.468585,5.577387,-5.427440,8.738615,-2.290523,5.271449,-0.676937,0.426847,-4.079426,-9.994034,-2.745972,-2.861798,-5.628181,-8.824795,-0.405770,2.700405,-8.475363,-2.809807,-2.176034,3.889041,-2.653613,-1.217162,7.983825,9.755974,-6.057451,-9.321636,-7.206428,4.745665,0.992889,-1.369694,-9.851760,-1.939165,0.943837,9.725506,-2.783885,-2.723555,1.541246,-2.330830,-0.816320,-8.437528,5.703050,9.831487,-0.048760,-8.748047,-1.061302,9.777691,-5.054480,3.619128,3.668296,4.501260,-2.541351,-7.984135,7.734588,-0.887428,-2.530312,-9.551892,2.024462,-7.223748,-3.900508,-6.606056,3.588689,-5.451153,3.498434,0.423574,-9.787252,-9.013649,2.548114,6.554356,9.539998,-9.115665,-7.250620,0.093094,2.505651,2.412185,-0.328824,-3.978616,-1.679620,-5.271633,2.297531,-7.254213,-1.209745,-8.689449,6.982362,-6.035683,0.989822,1.741656,9.657083,-5.719494,-2.118775,1.384559,9.491288,-6.541118,-2.134419,6.029703,3.777474,3.730775,-2.101445,7.866455,4.319783,3.248173,-2.089608,4.264142,7.578843,-0.959362,7.110196,3.691923,-8.616468,-2.618160,-7.253514,-7.783063,3.600584,6.207334,8.733514,-1.727233,8.270143,0.273832,-8.429051,7.950294,-2.997965,6.866008,1.632679,-1.261261,-9.199911,-0.088393,-8.009503,-0.411852,3.392905,-5.194612,-2.614414,9.573690,-1.207130,-4.379405,6.427246,-8.391950,4.953742,-3.674820,-7.228756,-6.271741,1.540205,5.078750,4.529171,-7.960294,-5.419664,8.712506,7.879416,-9.112357,-1.589541,-7.203751,-5.768242,5.234199,-7.624273,4.659291,5.942254,6.783609,-7.931237,-3.935808,7.947803,-0.096966,3.050967,-4.200248,6.187091,-4.519358,1.253828,2.897689,-8.440934,-6.761206,-5.758578,3.854046,4.240838,4.633561,-6.956162,-0.751269,-3.069545,1.434571,-3.477762,-8.613581,-2.170160,4.581324,3.808737,9.256079,-3.096610,-9.942354,4.578111,-7.179638,-9.990033,7.418082,6.561818,-0.878632,-9.372001,-5.824917,-8.638714,-2.678785,3.475041,-8.053414,4.763828,-1.653475,7.794041,-8.899907,6.382036,-4.917210,-0.195991,-4.423709,1.336719,8.690837,-4.319932,-1.406330,-2.513572,5.446162,4.317291,-9.880247,1.803140,-5.134512,7.749623,-6.722598,6.053295,8.651457,-5.073656,8.348511,-5.221002,5.697682,-7.754203,7.714533,2.522021,3.798114,0.410183,7.085408,-6.490175,2.272936,-1.321928,-0.781287,-0.384627,-2.315489,0.839193,-1.869763,-7.604236,-8.574196,-0.428144,-1.674416,-6.720589,-0.414279,1.107750,9.619140,0.898146,-8.279671,-7.862694,1.142177,-3.246362,4.721924,5.217698,1.370813,9.690066,1.512809,-5.799627,7.481647], dtype = "float64")#candidate|1248|(1760,)|const|float64
call_1247 = func_497_call(relay.reshape(const_1248.astype('float64'), [11, 10, 16]))
call_1249 = func_497_call(relay.reshape(const_1248.astype('float64'), [11, 10, 16]))
output = relay.Tuple([bop_1234,call_1247,const_1248,])
output2 = relay.Tuple([bop_1234,call_1249,const_1248,])
func_1254 = relay.Function([var_1232,var_1233,], output)
mod['func_1254'] = func_1254
mod = relay.transform.InferType()(mod)
var_1255 = relay.var("var_1255", dtype = "int16", shape = (16, 5, 3))#candidate|1255|(16, 5, 3)|var|int16
var_1256 = relay.var("var_1256", dtype = "int16", shape = (16, 5, 3))#candidate|1256|(16, 5, 3)|var|int16
output = func_1254(var_1255,var_1256,)
func_1257 = relay.Function([var_1255,var_1256,], output)
mutated_mod['func_1257'] = func_1257
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1896 = relay.const([[[4,4,8,-10,3,5,-7,-8,-8,-10,-1,-1,3],[-5,1,-4,-7,4,-10,8,6,-9,-10,3,-2,-9],[2,-2,-6,-9,9,2,2,9,10,-5,-1,-9,-9],[-1,7,-6,3,-3,-8,-6,8,3,3,9,-9,10],[-9,3,3,-3,-5,9,-8,9,-7,-3,2,-2,-7],[-10,7,8,-9,6,-6,-2,7,-3,4,-2,-6,5],[-2,2,-9,-8,4,-2,9,-5,-6,-8,-8,9,2],[4,-6,-3,-7,-8,9,3,-1,6,-5,-5,-10,6],[-5,-4,4,-2,-7,9,-1,-10,-2,-6,2,-3,7],[-7,-2,-6,8,3,-8,-4,-9,10,-9,-4,5,-4],[-6,-3,-8,9,-5,-6,-5,-7,-3,7,-4,-5,9],[-4,9,-3,-8,7,9,5,-1,9,1,8,-6,7],[3,-1,-1,-7,6,7,-6,-9,10,-1,6,-6,7]],[[-10,-10,1,10,4,-10,2,-2,-9,3,5,1,-4],[-7,3,-8,-5,1,-10,9,-4,8,2,-5,10,8],[-3,1,-5,2,2,-10,-6,4,-5,3,-1,-5,1],[-5,-10,-4,3,2,6,7,-2,5,-9,-6,-2,-2],[-10,-6,-9,-1,4,-1,5,-7,7,-8,-3,1,-2],[6,7,-4,7,9,-1,-4,-8,-3,10,3,-6,-10],[-2,10,-7,-7,-6,-1,-1,10,1,-8,-1,-1,3],[-2,-2,7,-1,-9,5,3,7,6,-4,-9,-10,-1],[7,4,5,8,-8,3,-4,-10,-8,-10,-8,-10,-1],[-5,-5,-2,10,2,-1,5,9,-9,-10,-4,3,-3],[10,-1,-2,4,5,-2,3,2,-6,3,7,-10,2],[-5,-8,4,-2,1,-1,5,-10,-3,-1,-8,4,-4],[-5,7,-8,10,1,-4,-1,10,9,-10,-10,-3,-9]],[[-10,2,1,-10,-3,-1,6,9,8,4,-1,-3,1],[3,-6,5,-5,-2,2,-5,4,-2,-1,-10,-2,-6],[9,-6,-3,-4,-1,-5,-6,3,2,-5,-7,9,-9],[-6,5,-3,-9,5,-8,-1,8,5,4,3,9,4],[-6,-3,-2,-5,-9,1,7,-2,-5,-4,-10,10,-1],[1,3,-4,-8,6,-6,-7,9,-4,4,-1,-10,5],[-6,-3,-7,6,10,1,-9,-8,-7,-9,-2,3,1],[-8,-1,-1,7,-1,-8,8,-9,6,5,-10,-8,1],[1,8,9,3,9,6,-5,4,-6,-3,-1,-10,2],[1,8,-2,9,1,7,10,5,4,3,-5,-10,3],[-9,10,-2,3,-4,-10,-6,2,4,-9,-6,-1,3],[-9,6,6,4,7,6,5,-5,-4,-6,4,8,9],[8,-4,-7,6,4,9,6,3,5,4,3,-3,-6]],[[-8,-4,-10,-8,5,-9,1,3,-1,-7,4,2,-4],[-8,5,7,8,-2,-4,-5,8,-2,-5,-10,-7,-1],[-10,1,-10,-4,2,-8,-3,-1,3,-7,-9,-1,-5],[3,1,-3,8,5,-2,1,-10,-8,-1,9,-6,6],[-7,-2,-9,4,-10,1,2,4,-6,-10,5,-1,-9],[-10,-9,10,3,-8,-8,4,-1,6,2,-9,-4,-9],[9,5,2,-2,-2,-7,-6,-9,9,-2,10,-4,-7],[-5,2,-4,-3,8,6,6,-2,-5,10,-3,-9,9],[-5,6,-6,7,-4,-10,9,2,-7,3,5,-10,-2],[-6,-9,2,10,8,-8,7,-5,1,-6,-1,-5,-6],[2,7,-8,5,-10,3,-7,-7,7,9,2,8,-2],[2,-3,8,-2,-9,10,10,-5,1,6,-6,-1,-9],[-4,-10,7,-6,8,-6,-10,3,-1,1,7,-7,-9]],[[10,-10,4,5,2,6,2,3,6,-5,3,-3,-1],[6,7,-2,5,3,6,1,-2,8,-3,-2,-4,10],[-2,-2,5,-10,1,-9,-4,6,-2,1,-6,-8,10],[9,-6,1,-2,-2,1,1,-5,-8,5,-10,3,-1],[-10,9,10,6,-5,-5,-10,-7,-8,-2,-1,2,6],[-2,-5,9,3,-9,-6,-2,-2,1,3,-4,6,-6],[10,-2,-1,-7,-9,-4,-6,7,8,6,-6,3,-5],[-2,4,-10,5,-1,6,5,-4,-8,-1,-4,-4,-8],[-7,2,7,5,-2,-6,-6,-7,4,-8,10,1,-10],[-10,-7,-5,-9,-8,-10,10,9,3,4,8,2,8],[-1,-3,8,-3,2,-9,6,-7,-2,10,-2,7,-3],[-6,2,-8,5,-1,-7,-7,-4,-1,-6,9,-5,9],[4,-5,-10,3,-5,4,2,-4,-2,7,-1,-8,-9]],[[5,6,3,-10,8,-1,2,9,9,-1,-10,6,-9],[-8,-4,-6,2,4,3,-6,-4,9,7,3,-1,1],[-7,3,-3,-7,-9,-5,4,-6,3,-5,3,4,5],[-7,4,-2,-4,9,5,4,6,4,-1,6,-4,-1],[-6,-6,4,7,-9,9,3,1,-3,-3,4,-10,8],[9,6,9,-6,-10,6,8,-6,1,4,-7,-4,-9],[-8,5,4,7,3,1,9,-10,1,-2,-7,-8,4],[-10,-6,9,8,9,8,-4,-10,-10,6,-3,10,-6],[10,-9,-9,-5,10,8,-9,-1,-1,-8,10,9,10],[5,-9,8,-4,8,-6,8,-8,-5,1,4,1,-2],[-1,-8,-3,4,3,5,-1,-1,-5,-4,-3,-2,4],[-8,-9,5,1,5,-6,10,-1,7,10,-10,6,8],[2,6,7,9,4,7,9,3,-9,7,10,5,-3]],[[-2,8,8,1,3,8,3,-10,-7,-2,-4,-3,-4],[-4,-10,-1,-4,6,6,8,7,-5,-5,-3,-2,5],[6,7,-1,-7,8,7,9,-5,-3,6,8,10,-6],[8,-8,4,-10,-3,3,-6,-2,-4,6,-5,2,-9],[-5,-4,4,9,-4,5,7,7,-2,1,-5,6,-4],[-10,-4,-9,-8,2,-4,3,5,3,9,-1,2,6],[7,-9,-5,-9,6,10,2,5,4,-5,-7,10,-10],[-9,-3,2,-7,10,9,-10,7,10,-3,-5,-4,-5],[-1,-9,6,-3,-2,-8,5,-10,-7,-9,4,4,-4],[-4,1,1,6,3,5,2,9,6,-8,-8,1,-7],[-7,-2,-2,-9,-10,7,8,10,3,1,-2,8,7],[2,3,5,-4,1,5,-1,10,-3,-7,4,-4,6],[5,-5,1,-10,-1,-4,-2,-1,5,-6,-9,5,-1]],[[-7,-7,-3,6,5,-7,10,2,1,9,4,5,10],[6,-1,8,4,-9,-8,-6,2,9,-1,8,-6,-7],[2,10,-5,9,5,-2,-1,-7,7,1,9,1,-1],[-4,-7,-9,1,1,8,-2,5,4,-6,-4,-6,-2],[5,5,-6,4,9,10,-3,-8,1,3,-5,-4,10],[3,5,1,3,-7,-4,-2,-2,-3,-3,5,-2,-2],[7,-5,3,5,7,9,1,-1,-5,-7,5,-2,-2],[4,5,-8,-1,-9,5,2,9,4,-7,2,7,-9],[-9,3,-7,-5,1,7,10,-6,-10,-9,-2,-9,-9],[9,10,10,-10,-3,8,-1,3,10,-6,8,-9,-6],[-9,9,6,4,7,-7,5,-6,-10,-3,-7,-6,-1],[8,1,-10,9,-8,9,-10,6,-3,-7,-5,8,-10],[2,7,-10,5,10,-2,7,3,10,2,1,8,-6]],[[5,-2,8,-10,-7,-1,4,8,-2,5,-8,-9,2],[8,5,4,8,4,-8,-1,7,-7,-5,6,-9,3],[6,10,9,10,1,-4,8,5,4,-10,1,-1,-2],[6,-8,9,-8,-3,-8,-2,5,-10,-6,8,2,-1],[5,1,-9,-7,3,-2,-8,1,8,-4,1,-5,-8],[7,2,3,9,3,1,6,9,-9,5,-10,3,-5],[8,1,4,6,-5,-3,2,-6,-7,9,2,-2,7],[-1,8,7,7,-1,-6,-9,5,7,8,-2,-6,3],[-10,7,1,-10,-6,-4,-2,6,-2,-1,6,6,-3],[-1,9,1,2,-9,-7,-1,-3,-4,2,5,6,10],[-7,-6,-5,1,4,5,9,-7,2,-7,-5,-10,-4],[10,4,-10,6,-9,-6,7,2,3,8,10,-10,-5],[-2,1,-1,-4,10,-5,-1,-1,7,-6,-2,2,9]],[[-9,1,-5,10,-6,6,5,-7,6,7,6,7,-2],[-9,10,8,-10,-5,1,10,6,9,-5,4,-4,-9],[2,10,-5,-10,-10,6,9,-2,7,-8,-9,-4,3],[4,-6,8,10,-4,1,-2,6,9,-9,4,5,7],[-8,6,9,-9,-4,-7,-8,-1,-6,-8,-1,8,9],[6,-3,-6,5,2,-2,3,9,2,10,4,6,-10],[10,7,-1,3,-7,5,-1,-8,-8,-10,-10,4,-6],[5,2,-9,5,-2,-8,-8,-4,-8,10,9,-8,6],[-3,-7,-9,-1,10,-3,-5,-1,2,9,-4,2,-7],[-3,3,-5,10,-5,6,9,-7,3,9,-4,-5,8],[4,-3,-2,7,6,2,-6,4,-7,10,-5,-4,8],[7,3,-1,5,7,2,5,-6,5,-5,3,-2,-4],[7,5,-7,7,6,-8,-5,10,-9,-9,-1,-6,-5]],[[-8,4,-6,-1,-6,-3,-2,-4,10,3,9,5,6],[4,4,-1,-6,6,7,5,8,8,-5,-10,2,-6],[-7,10,-1,-5,4,7,2,4,-1,-3,-4,-10,-1],[-7,4,-5,8,-6,2,2,-9,5,-2,-1,5,3],[4,10,4,10,3,-10,-3,-8,8,-10,-8,-8,-2],[-3,-4,-8,-2,6,8,-3,-1,1,-1,-8,10,-6],[3,-1,7,-3,2,1,-2,9,1,4,-7,6,6],[7,-4,-6,-8,-1,3,-6,-7,-9,2,-10,10,-6],[9,-4,-8,2,-5,8,-5,8,4,3,1,-2,-9],[-7,-6,-7,7,-1,4,10,10,-3,-8,3,5,5],[7,2,-8,7,3,1,7,6,5,-3,3,-2,-8],[-5,10,-2,5,-2,-2,1,5,7,5,-7,1,-9],[-7,7,5,-10,-2,-1,4,-2,-6,-2,-6,-5,4]],[[3,-2,-10,-1,-6,-9,-3,-9,-7,-2,1,-3,-9],[4,10,-5,-3,-3,-8,8,-5,10,-7,4,4,-5],[6,-2,7,-8,-5,-1,-10,9,-1,1,3,5,10],[6,-7,-3,-10,-7,-2,-5,-8,5,-1,5,1,-1],[7,6,5,-3,4,-5,-2,3,-5,-1,7,10,-10],[1,1,8,7,-7,-10,5,8,-8,2,6,-2,-2],[-3,-6,-9,6,10,-10,-2,9,7,3,4,8,5],[-3,1,7,-10,-8,-1,-9,-10,7,-5,-1,-8,2],[10,-10,-3,3,8,9,2,-7,4,3,6,-6,-4],[-5,-3,-6,6,7,9,-5,-9,-7,6,3,1,-5],[-4,7,-10,-2,-9,6,-6,-7,5,6,-8,5,6],[-3,-2,3,7,-5,4,10,8,1,10,-1,-9,1],[9,-9,-1,-3,9,2,7,5,-5,-5,2,6,-1]],[[9,5,5,-5,10,-7,3,-2,3,10,-9,4,7],[9,10,-2,9,-8,-3,1,10,-8,-5,6,10,-8],[1,4,-8,5,2,-6,7,7,8,3,7,1,-4],[2,4,-2,1,-7,8,6,9,10,7,-4,-7,-5],[8,6,6,5,-7,-7,4,7,3,-1,5,-6,9],[9,7,-10,-1,-7,6,7,1,-2,-5,7,4,10],[-9,4,-6,-6,9,10,-4,-9,10,-4,9,6,-6],[-3,10,10,10,1,-6,-1,-5,-7,7,-9,-1,8],[8,-5,6,5,-1,-7,-8,9,7,1,2,-3,3],[5,-5,-3,6,9,5,-10,-8,1,5,-10,-1,-6],[-8,-1,-3,4,-3,2,4,-3,-5,7,-10,-7,-10],[9,9,-4,4,-7,-6,-4,-7,-8,10,-2,-4,8],[9,1,4,1,-5,2,2,6,-2,7,-9,-2,6]],[[-5,5,6,-9,-1,5,10,-7,-9,6,7,8,-9],[8,-7,7,9,-5,4,-2,-1,-9,8,5,-6,-3],[-9,8,-9,1,-3,9,-10,6,2,-1,6,-6,-7],[-2,-2,-6,9,10,10,-7,2,6,-2,-6,-2,-9],[-6,-5,-4,5,-5,8,7,-3,3,-2,5,7,-2],[-4,-1,-5,8,9,8,-9,-9,6,-6,2,8,-4],[-2,2,5,10,-9,-2,-6,8,-9,6,3,-1,-2],[10,-7,-3,-7,-4,-1,10,-9,8,5,9,4,-9],[9,7,3,3,4,-10,3,5,6,5,-8,-1,2],[5,5,-4,-4,-8,-10,6,7,5,9,5,5,-1],[4,4,-9,-1,-4,1,-7,6,9,1,7,-7,6],[-2,-1,-4,4,-2,-8,9,7,-10,10,2,-8,-7],[-1,-3,-6,7,-9,-4,-8,10,-9,-8,1,-1,-5]]], dtype = "int64")#candidate|1896|(14, 13, 13)|const|int64
var_1897 = relay.var("var_1897", dtype = "int64", shape = (14, 13, 13))#candidate|1897|(14, 13, 13)|var|int64
bop_1898 = relay.not_equal(const_1896.astype('bool'), relay.reshape(var_1897.astype('bool'), relay.shape_of(const_1896))) # shape=(14, 13, 13)
uop_1905 = relay.atanh(const_1896.astype('float32')) # shape=(14, 13, 13)
output = relay.Tuple([bop_1898,uop_1905,])
output2 = relay.Tuple([bop_1898,uop_1905,])
func_1913 = relay.Function([var_1897,], output)
mod['func_1913'] = func_1913
mod = relay.transform.InferType()(mod)
mutated_mod['func_1913'] = func_1913
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1914 = relay.var("var_1914", dtype = "int64", shape = (14, 13, 13))#candidate|1914|(14, 13, 13)|var|int64
func_1913_call = mutated_mod.get_global_var('func_1913')
call_1915 = func_1913_call(var_1914)
output = call_1915
func_1916 = relay.Function([var_1914], output)
mutated_mod['func_1916'] = func_1916
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2146 = relay.const([[[False,True,True,True,False,True,True,False,False,False,True,False],[False,True,False,True,False,True,False,True,True,False,True,True],[False,True,False,False,True,False,True,True,True,False,False,True],[True,True,True,True,False,False,True,False,True,False,False,False],[True,False,True,False,False,False,False,False,True,False,True,False],[False,False,False,False,False,False,True,True,False,True,False,False]],[[True,True,False,True,True,False,True,False,False,False,True,True],[False,True,True,True,True,False,False,False,False,False,False,False],[False,True,True,False,False,True,False,False,True,True,True,False],[True,False,True,False,False,False,True,False,True,False,True,False],[True,True,False,True,True,False,False,False,False,True,False,False],[True,True,False,False,False,True,False,True,True,True,True,True]],[[True,False,True,False,True,True,True,False,False,True,True,False],[False,True,False,False,True,False,False,False,True,True,False,True],[False,False,True,False,False,False,True,True,True,True,False,False],[False,True,False,False,False,True,False,False,True,False,False,False],[True,True,False,False,False,False,False,False,False,True,False,False],[True,False,False,False,True,False,False,True,True,False,True,True]],[[False,False,False,True,False,False,True,True,True,True,False,True],[True,False,False,True,True,False,False,False,False,False,True,True],[False,True,False,True,False,False,False,False,False,False,True,False],[True,False,False,False,True,False,False,False,False,False,True,True],[False,True,True,True,True,False,False,True,False,True,False,False],[True,True,False,True,True,True,True,False,True,True,True,False]],[[True,True,False,True,True,True,False,True,True,False,False,False],[False,True,False,False,False,False,False,True,True,False,False,True],[True,True,True,False,True,False,False,False,True,False,False,False],[False,False,False,True,False,False,True,True,True,True,True,True],[False,False,False,True,False,False,False,False,False,False,False,True],[False,True,True,False,True,True,False,True,False,False,False,False]],[[True,False,True,False,True,True,False,True,True,False,True,True],[True,True,True,True,True,False,False,False,True,True,False,False],[True,False,False,True,True,False,True,False,False,True,False,False],[False,False,True,True,True,False,False,False,False,False,True,True],[False,True,True,True,False,True,True,True,False,True,False,True],[False,False,True,False,True,True,False,True,False,False,False,True]],[[False,False,True,False,False,False,False,False,True,True,True,True],[True,True,True,True,False,True,False,False,True,True,True,False],[False,True,True,False,True,True,True,False,False,False,False,False],[False,False,True,True,False,False,True,True,True,False,False,False],[True,False,False,True,True,True,True,True,True,True,False,False],[False,True,False,False,False,True,True,False,True,False,False,True]],[[False,True,False,False,True,False,False,False,False,False,True,True],[False,True,True,True,False,True,True,False,False,False,True,False],[True,False,True,False,False,True,False,False,False,False,False,True],[True,False,True,True,True,True,True,True,False,False,False,False],[True,True,False,True,True,True,False,False,True,True,True,True],[False,True,False,False,True,False,True,False,True,False,False,False]],[[True,True,True,True,True,True,True,False,False,False,True,False],[True,True,False,True,False,True,False,False,False,False,False,False],[True,True,False,False,False,False,False,True,True,True,True,False],[False,False,False,False,False,False,False,False,True,True,True,False],[False,True,False,True,False,True,True,True,False,True,True,False],[False,True,False,True,False,True,False,False,True,False,False,False]],[[False,True,False,False,False,True,False,False,False,False,True,False],[True,False,True,False,False,False,False,False,True,False,True,True],[True,True,True,True,False,False,True,False,True,True,False,True],[False,False,True,False,True,True,True,False,True,False,False,True],[True,True,True,False,True,True,False,True,False,True,False,False],[True,True,True,False,False,True,True,False,False,True,False,True]],[[False,True,True,True,False,False,True,True,True,False,True,False],[True,True,True,False,True,True,False,False,False,True,True,False],[True,False,False,True,True,True,False,True,False,True,True,False],[True,False,True,False,False,True,True,False,False,False,False,True],[False,False,False,False,False,True,True,True,True,True,False,True],[False,False,False,True,True,True,True,True,True,True,True,False]],[[False,False,False,False,True,False,False,True,False,False,True,False],[True,False,True,False,False,True,True,False,True,False,True,True],[True,True,False,True,False,True,True,False,False,True,False,True],[True,False,False,True,False,True,False,True,False,True,False,False],[True,True,False,False,True,False,True,True,True,True,False,True],[True,True,True,True,False,True,False,True,False,False,False,False]],[[True,False,False,True,False,False,True,True,True,False,True,True],[False,True,False,True,False,False,False,True,True,True,False,True],[False,False,False,False,False,False,True,False,True,True,True,True],[True,True,False,False,True,True,True,True,False,True,False,True],[True,False,False,False,True,True,True,True,True,True,False,False],[False,True,False,True,False,True,False,True,False,False,True,True]]], dtype = "bool")#candidate|2146|(13, 6, 12)|const|bool
var_2147 = relay.var("var_2147", dtype = "bool", shape = (13, 6, 12))#candidate|2147|(13, 6, 12)|var|bool
bop_2148 = relay.logical_and(const_2146.astype('bool'), relay.reshape(var_2147.astype('bool'), relay.shape_of(const_2146))) # shape=(13, 6, 12)
func_43_call = mod.get_global_var('func_43')
func_46_call = mutated_mod.get_global_var('func_46')
const_2156 = relay.const([4.849668,-3.736566,8.872355,-7.677551,8.549984,7.121261,1.662484,-0.551162,4.297345,-5.033560,8.215116,6.669502,8.732432,4.300540,-7.635737,8.416214,-6.744843,7.513561,6.907660,5.254353,-4.126189,7.217167,-9.690905,-8.912243,6.549269,0.750357,-6.136704,-5.197173,9.103899,-2.184456,9.576235,4.673553,6.089434,1.575316,-2.448218,2.803920,-4.360767,8.805476,2.518480,-3.237847,-0.835921,9.699544,-4.099925,-9.878401,3.410139,6.839872,-4.725281,-2.843424,7.154383,9.694488,8.819531,-2.486034,6.160158,-0.848393,6.563453,6.450544,4.023548,-2.595016,8.329554,5.446310,9.921034,6.063612,-8.563520,-8.135836,2.510796,9.437200,-2.832054,-5.384811,0.480733,-7.498513], dtype = "float32")#candidate|2156|(70,)|const|float32
call_2155 = func_43_call(relay.reshape(const_2156.astype('float32'), [7, 10]))
call_2157 = func_43_call(relay.reshape(const_2156.astype('float32'), [7, 10]))
output = relay.Tuple([bop_2148,call_2155,const_2156,])
output2 = relay.Tuple([bop_2148,call_2157,const_2156,])
func_2180 = relay.Function([var_2147,], output)
mod['func_2180'] = func_2180
mod = relay.transform.InferType()(mod)
mutated_mod['func_2180'] = func_2180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2181 = relay.var("var_2181", dtype = "bool", shape = (13, 6, 12))#candidate|2181|(13, 6, 12)|var|bool
func_2180_call = mutated_mod.get_global_var('func_2180')
call_2182 = func_2180_call(var_2181)
output = call_2182
func_2183 = relay.Function([var_2181], output)
mutated_mod['func_2183'] = func_2183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2185 = relay.var("var_2185", dtype = "float64", shape = (12, 8, 12))#candidate|2185|(12, 8, 12)|var|float64
uop_2186 = relay.log10(var_2185.astype('float64')) # shape=(12, 8, 12)
func_1190_call = mod.get_global_var('func_1190')
func_1195_call = mutated_mod.get_global_var('func_1195')
var_2194 = relay.var("var_2194", dtype = "bool", shape = (80,))#candidate|2194|(80,)|var|bool
const_2195 = relay.const([10,-6,3,1,2,-7,-9,4,-7,10,-1,-6,-4,4,-10,-6,2,-7,6,6,-10,-1,-9,2,-4,-7,-7,-1,-5,-8,-3,-7,-8,1,-4,2,-1,1,-7,-5,7,-7,-4,-9,7,-4,-2,7,-7,6,7,-3,10,-8,9,10,-7,2,9,-10,9,-7,7,2,4,5,-3,-10,4,-2,3,-3,-2,4,6,-6,-8,-5,6,-8,5,-4,4,3,-3,-5,10,-9,-2,-4,8,5,-2,2,-10,-2,6,3,-7,-9,5,9,1,8,2,4,-1,-6,9,-4,-8,4,-10,3,-7,-2,-6,8,8,1,-9,9,-3,-6,3,-3,-6,-5,8,-8,10,-7,-8,6,-4,-7,1,2,1,8,8,2,-2,2], dtype = "int32")#candidate|2195|(144,)|const|int32
const_2196 = relay.const([-5,7,-3,-1,-2,-7,6,3,4,8,7,-5,9,6,-7,9,-9,-8,-1,3,-1,-2,-8,7,-10,-4,-8,-6,8,8,6,-9,-4,-7,-5,-10,-9,-3,7,9,-2,4,1,9,-3,-7,6,4,-5,7,-1,4,9,-9,5,4,8,-9,10,-10,-5,-4,5,1,6,7,6,7,9,2,3,-3,-5,-2,10,-10,1,8,-9,-5,8,2,3,9,-7,-8,-8,1,-3,10,7,10,3,5,8,9,-3,-2,-2,8,2,8,-7,3,2,-3,3,-8,-3,8,-4,-9,-8,3,2,9,-9,3,-8,4,-8,-10,2,7,2,9,2,10,1,-2,-7,8,-10,10,9,-7,-4,-8,-6,4,-10,-1,-4,-4,6,-1,-1,-9,-2,-8,-4,8,1,-6,10,-4,-4,-7,-7,5,-9,10,-5,-10,7,-6,2,-1,-9,-1,-9,-3,1,1,-3,5,3,1,-2,3,-10,4,-4,-8,-4,-5,-5,5,-8,-3,-5,2,-4,5,5,-7,8,8,6,6,4,-2,10,2,8,-9,-6,2,-6,-7,-7,-8,6,9,-10,4,8,3,-5,-6,-2,7,-7,-9,-8,-6,1,-1,9,-10,9,-5,10,-5,-2,-2,-7,4,10,9,-2,-2,-8,-1,-5,8,-5,-8,-10,1,-5,6,-2,8,-6,7,-1,-2,-3,7,-1,9,7,-10,2,9,-4,9,-7,-7,1,2,4,2,4,3,-4,3,2,8,-7,-9,-4,-9,5,-6,2,8,-2,3,-10,3,-1,-7,10,-4,4,7,4,-1,-2,5,2,7,-4,10,-9,9,-9,-10,4,3,-1,-8,-4,4,-5,-9,-2,3,-7,1,-5,-5,-9,-3,-10,2,7,-8,10,-7,1,-2,-2,-9,7,6,-2,-8,7,5,8,-1,-9,5,1,4,10,2,-8,-5,-5,-9,-2,-8,-8,8,-2,10,8,-1,-9,-10,9,-3,7,4,-8,8,9,1,-9,-3,10,2,-1,8,8,-3,1,5,-3,-7,1,-5,1,10,-6,3,-8,-3,-8,1,8,4,-9,5,-8,-4,-10,-1,-6,-1,6,6,8,5,2,-1,-9,10,-4,3,-1,-4,8,2,-8,4,-6,8,-4,2,-10,-6,10,8,-5,7,-9,-5,-6,-9,-9,-8,7,-2,10,7,-9,-8,1,4,-6,9,1,2,-2,-4,6,-7,10,2,-3,10,3,10,4,7,-4,7,2,-5,-10,5,-2,9,-4,-4,1,9,-1,-8,-3,-7,3,2,-5,2,-7,1,3,-1,-2,-4,-8,9,-3,6,-3,-3,-9,6,4,-9,-6,8,2,-6,6,-1,4,6,8,1,7,10,1,-1,-3,-3,5,-10,-3,-3,-8,-7,-6,-10,-7,6,7,3,1,2,-6,-4,-8,-8,-3,-2,-9,5,-4,-10,6,-6,-1,10,4,-5,-6,-1,-5,5,-4,-3,6,10,1,-2,5,9,-6,9,10,2,7,10,6,2,-2,5,-10,-9,-3,9,8,8,-8,6,3,4,1,1,-7,7,7,9,-5,10,9,9,-7,3,-6,-1,-5,8,-1,5,-2,-9,-4,-8,-7,10,6,-5,-6,8,7,10,6,-10,-7,-5,9,9,2,-4,-6,9,4,4,-2,2,4,3,-10,-7,10,-7,7,2,-5,-2,-1,-2,-7,-4,1,-10,8,6,-6,8,-6,5,-2,5,-3,8,-8,-8,-9,3,8,6,7,-5,-5,-9,7,4,-10,9,-6,7,9,6,-6,7,-2,-2,-3,2,-2,-8,-4,2,-1,-7,-10,-8,8,7,5,-1,-7,6,2,9,-8,6,-9,-3,-9,-5,5,-8,-9,10,-8,-1,-6,6,-4,3,-4,-1,7,-3,-6,-5,-2,-7,-7,5,10,2,-4,3,5,-7,4,2,-5,10,-3,-4,10,-8,-10,4,-2,3,7,1,1,3,-9,9,-9,-5,5,-1,-1,-2,3,-1,2,-10,-10,-1,2,-6,-8,-3,3,-1,-7,3,-1,-1,3,-3,3,-6,-6,-4,2,9,7,8,10,-8,4,-7,8,-3,-9,8,10,7,-4,4,10,-5,-5,-7,-6,6,-8,-7,10,-9,-6,2,-4,2,7,1,9,-6,-3,-3,-10,7,1,-6,3,1,6,-5,-2,6,3,9,-7,8,8,7,10,5,9,4,9,-5,-9,-5,7,10,-1,4,6,8,-7,3,10,-1,-1,4,2,-5,10,-2,1,9,-5,-2,8,6,-6,3,8,8,10,-9,1,-3,-6,-10,-1,1,-3,-8,6,6,-2,9,-4,-9,-8,9,4,2,9,7,10,-7,-2,6,6,9,3,-7,-6,3,5,-5,6,-9,9,6,-5,-4,7,-4,-2,-4,-2,1,-7,1,-8,3,6,-10,9,4,-10,-10,8,1,-8,4,6,-9,4,9,8,6,5,9,-4,5,-5,1,10,3,9,-9,5,-9,1,10,9,5,4,5,1,1,4,7,-4,-1,10,-7,1,-3,-2,-4,-9,-5,3,10,-10,9,-1,-8,-9,-9,3,5,1,-8,8,-6,-1,9,-10,9,8,-6,4,-5,4,-3,3,3,-3,9,-3,10,7,-7,8,9,-3,6,-8,2,8,-1,3,-5,6,-2,10,-2,-1,5,4,7,8,5,-6,-6,-2,3,2,4,1,-7,-7,-9,-8,10,-10,-1,2,-2,3,-3,6,2,4,-4,-3,-8,-9,-1,-1,1,9,8,8,-10,-10,7,8,4,9,-7,-10,-5,1,-6,-8,-6,8,2,5,-8,6,-1,-7,6,-2,10,-9,-10,2,5,-2,-9,-4,-8,-5,-2,-2,-3,7,-8,-4,10,3,6,-6,5,9,-8,-7,9,-3,-10,5,7,-5,-10,3,-6,8,2,-10,-1,1,9,-8,-9,-3,-9,4,-8,-2,2,8,2,8,9,-8,-7,10,8,-6,10,-6,8,4,9,-6,-1,-6,10,6,-2,-10,5,6,-7,-8,4,7,-2,-9,6,1,-10,10,-3,-9,-1,5,-6,-9,3,-3,1,-8,10,-5,3,-6,5,2,4,-4,-8,-1,9,-1,-7,-9,4,-5,-7,3,-8,-4,6,-10,5,7,2,10,-8,-4,-5,7,-2,-6,-3,-10,9,-4,10,-7,-8,8,2,1,-1,9,8,7,-8,-1,-1,2,7,-5,9,-9,6,-9,9,8,-5,-8,-3,-2,-8,-10,6,-1,7,9,9,7,7,-2,5,6,7,10,-9,-8,9,-7,1,9,5,-8,-6,-8,8,-9,1,3,-3,7,7,-10,5,-1,-7,-6,8,5,-6,7,4,-9,5,-3,4,10,-5,-8,-8,-9,-1,7,9,-3,8,1,8,-7,1,-9,9,-6,10,7,7,4,10,-9,-7,6,-4,7,8,-3,5,-3,1,-1,7,10,-1,-4,-8,-2,9,10,6,5,3,-2,-2,-3,4,6,9,5,-10,2,6,-5,-1,-6,4,8,9,-6,-5,-4,2,-2,5,4,8,5,10,-7,-5,-8,6,6,8,-6,10,3,9,-6,3,-2,-6,7,7,8,8,-10,-4,10,10,-4,-6,-4,-2,-1,-10,10,-10,-1,10,8,7,-4,8,-2,10,9,-5,-2,7,6,8,3,-2,6,6,-1,4,4,9,-10,-4,-6,-6,-9,-4,8,10,2,8,5,-2,6,4,-7,6,2,6,2,-8,3,-6,6,4,10,-5,-3,3,-2,1,-10,7,-8,1,5,9,-1,-10,-10,4,4,7,8,-9,7,-2,-7,-8,-3,5,8,5,10,6,-8,2,-4,1,8,-4,10,-1,-8,1,8,9,-1,-5,2,1,-4,3,-1,-7,2,4,-1,8,4,1,7,-9,-4,9,6,7,-4,-5,3,-4,5,-9,-2,6,-8,9,-6,-6,-1,-6,5,-4,-4,-6,2,3,7,-6,9,-7,8,4,2,-4,-5,9,-6,10,3,4,-5,3,-9,3,10,8,-5,1,4,-10,6,10,-4,1,-8,3,3,7,4,1,1,-1,2,2,7,-5,-3,6,-9,5,3,-3,3,-8,4,-8,-7,-1,-10,6,-7,2,-10,-7,5,-8,-9,3,-5,-6,8,-3,-4,-7,7,4,6,6,-4,7,-5,6,-8,-8,9,1,2,6,8,2,9,-1,-2,3,10,-5,-6,2,1,-6,-6,2,1,-3,3,6,1,-9,4,1,3,-10,-9,1,-10,2,4,-3,-2,-3,2,-5,9,-10,-7,9,-8,-6,-9,9,-6,7,-5,-4,-9,-9,10,-5,-9,4,-7,5,1,-2,-2,4,-4,-9,-3,3,4,2,10,-3,-2,5,1,5,-5,6,10,5,-3,10,-7,-10,8,5,9,7,8,-3,3,-2,-4,6,-10,-7,-5,-1,-3,5,4,7,9,-7,5,-7,5,-7,-10,5,3,-5,3,1,8,5,-8,-3,6,6,-7,2,-2,3,3,2,-1,4,-2,10,-3,-9,-9,7,-4,9,-6,5,1,10,7,-1,8,4,2,-1,1,7,-4,-5,9,-10,-6,-3,-5,2,4,4,-1,-3,4,-2,-3,3,5,-6,4,9,10,-7,-4,1,-4,-1,3,10,9,-10,-10,10,3,-10,-1,-6,-1,-8,-4,1,1,-5,-8,-2,8,9,-9,5,-4,-10,4,-6,1,-9,2,-6,-4,9,-7,-8,5,3,8,-5,-3,-7,-10,-3,6,9,2,1,8,7,-1,10,-4,-7,1,5,6,2,-5,-1,6,1,7,3,3,9,-9,-1,2,-5,1,-8,4,-5,4,1,5,-10,-5,-6,-7,4,3,-6,3,-7,-3,-1,4,5,-9,-10,10,5,-4,-6,5,4,-7,-3,6,-5,5,-6,-2,-7,-7,5,8,7,-2,-3,-4,7,1,-2,-1,6,4,5,2,7,10,9,4,1,10,5,5,5,-1,5,-5,8,-2,5,4,5,6,1,9,-5,8,-3,1,10,-7,4,5,-5,-2,1,4,9,10,-9,-5,-8,-4,7,10,-7,-2,1,2,4,-6,-1,1,-10,1,-9,-4,1,-7,5,-6,4,-5,5,1,-3,-2,-7,6,3,-7,-6,-9,-10,5,-4,8,-9,5,10,3,2,10,8,7,5,-4,-6,8,-9,-3,-4,-1,4,8,1,-9,-7,-2,-5,8,6,1,-5,10,-3,-7,4,1,5,1,-1,8,-9,2,-3,4,-4,-3,-5,3,6,7,9,7,9,1,-10,7,1,-5,-10,4,-5,3,2,10,-7,7,6,1,3,5,-10,5,2,8,9,7,10,6,5,9,4,9,1,-7,-1,2,-5,-5,-4,-10,-4,9,-5,6,-10,4,-3,5,-5,10,5,7,8,-6,4,7,10,-6,10,9,-6,-5,-7,3,-1,8,-7,-5,-9,-7,-6,5,-10,-5,2,10,8,-9,6,-9,-6,-2,-3,8,-9,-9,9,2,-4,10,2,3,5,-7,5,7,-4,-6,7,9,9,2,-1,-5,-3,10,-5,7,7,1,1,-5,7,10,-3,4,8,-10,-2,3,-2,-3,9,6,-6,-10,-3,10,6,7,-10,1,-7,-8,-8,6,-5,6,3,-10,9,3,-4,-5,4,10,-3,3,-4,10,-1,3,-7,10,2,-8,7,-4,-6,-1,-3,6,2,5,-8,9,3,-5,-2,10,-4,-5,-10,4,-10,-6,-6,8,-2,5,9,-1,-9,-3,-1,2,-3,-8,8,1,-7,-2,1,-10,-6,-3,2,-7,2,9,-5,1,-10,3,9,7,-10,6,2,2,-4,2,3,-6,-1,8,-7,-6,-6,-4,-10,10,3,-1,3,-10,-10,-2,2,-8,2,-9,-5,-4,3,-7,-3,4,4,-1,-9,-3,-3,-2,2,8,-5,2,3,2,-6,-10,7,-6,-9,7,10,-7,-6,10,10,-3,6,-7,-1,-8,10,-7,3,-8,-2,10,-7,-5,-7,-3,2,2,-1,-8,9,-9,-3,8,2,8,-4,-4,-5,-6,-3,-7,-6,2,9,-10,-7,9,-5,-5,4,-1,-10,-9,-3,7,-5,10,3,-9,-5,1,7,-1,9,-1,9,-3,-6,-6,-9,-4,7,-6,-9,3,5,3,5,8,10,-9,1,2,6,6,-10,2,8,6,-6], dtype = "int32")#candidate|2196|(2304,)|const|int32
call_2193 = relay.TupleGetItem(func_1190_call(relay.reshape(var_2194.astype('bool'), [4, 5, 4]), relay.reshape(const_2195.astype('int32'), [144,]), relay.reshape(const_2196.astype('int32'), [2304,]), ), 0)
call_2197 = relay.TupleGetItem(func_1195_call(relay.reshape(var_2194.astype('bool'), [4, 5, 4]), relay.reshape(const_2195.astype('int32'), [144,]), relay.reshape(const_2196.astype('int32'), [2304,]), ), 0)
func_1254_call = mod.get_global_var('func_1254')
func_1257_call = mutated_mod.get_global_var('func_1257')
const_2200 = relay.const([10,-9,-5,8,-8,9,-7,-5,-10,10,1,-6,4,4,-10,10,-10,-1,-1,-6,-5,8,7,-9,-6,2,10,2,8,6,4,8,-4,-1,-1,-5,-4,-10,-4,-10,8,8,10,2,10,7,-3,-2,-5,-3,9,-3,-10,-6,2,7,-7,-7,-6,6,6,-4,8,7,6,-2,-7,10,7,-2,-9,6,3,-5,-4,-9,-4,-9,-6,8,8,6,4,-3,-9,10,5,6,-1,8,-3,6,-9,-2,5,4,-1,-9,6,7,-10,-7,-5,4,5,-3,-1,8,8,-3,-3,6,-1,2,-8,5,8,-2,5,2,8,-10,6,6,-9,7,-10,-7,-8,8,-8,4,5,10,2,1,7,8,1,-9,5,-6,1,-5,2,4,6,-9,-6,10,1,7,-7,3,-10,-10,-8,-1,-10,7,10,6,-1,-7,-4,-6,-2,-2,7,7,-8,2,5,-7,10,9,-7,-9,9,-7,5,-9,4,6,-9,-9,-1,-4,-4,1,7,7,-6,2,4,-2,3,-8,3,10,-6,-8,2,1,-7,2,-4,-7,7,10,9,10,1,10,-3,-5,-1,-6,-7,9,-1,7,3,-8,3,2,7,-5,2,-2,8,-2,10,-2,-6,2,-3,3,-5,6], dtype = "int16")#candidate|2200|(240,)|const|int16
call_2199 = relay.TupleGetItem(func_1254_call(relay.reshape(const_2200.astype('int16'), [16, 5, 3]), relay.reshape(const_2200.astype('int16'), [16, 5, 3]), ), 0)
call_2201 = relay.TupleGetItem(func_1257_call(relay.reshape(const_2200.astype('int16'), [16, 5, 3]), relay.reshape(const_2200.astype('int16'), [16, 5, 3]), ), 0)
uop_2202 = relay.cosh(uop_2186.astype('float32')) # shape=(12, 8, 12)
func_903_call = mod.get_global_var('func_903')
func_907_call = mutated_mod.get_global_var('func_907')
const_2206 = relay.const([[-4,1,9,9,1,-5,1,1,-4,-6,-1,7,-4,-5,-4,7,7,-5,7,6,-9,2,-2,-8,9,1,3,-9,10,7,5,3,3,8,3,-9,-4,-2,3,-3,6,-10,1,5,5,7,-8,-4]], dtype = "int16")#candidate|2206|(1, 48)|const|int16
const_2207 = relay.const([3.356332,-9.470340,3.839729,-3.767346,1.516867,9.073615,6.858704,-8.119481,0.898447,-6.613316,-6.913590,-3.324613,8.571981,-5.120971,-0.445963,-1.337078,5.343101,-2.677906,-7.452744,9.505480,-3.640085,-9.535087,6.416644,1.829943,0.331362,-7.216278,-8.876799,4.721159,-7.300213,-6.835619,1.240301,-1.949365,7.484130,4.513620,0.312540,-0.307032,8.386915,4.911655,5.105733,-3.589318,-7.472990,3.658840,7.110098,-9.405153,-3.310560,-1.047432,3.311665,-4.350961,8.666152,-4.722284,-0.963140,0.194236,-2.318765,2.073387,0.130976,-1.422278,-6.469650,-6.879338,-7.684539,6.786264,1.057924,-4.034727,-2.836912,-3.296175,0.783520,-4.188762,2.125956,7.796852,1.885566,0.824633,-9.446763,-9.845029,1.739640,9.334937,-1.417830,3.509270,-0.438284,-5.553993,-3.572691,4.880016,-5.061339,-5.081071,9.960137,1.563091,-9.689737,1.933339,-9.196089,2.675822,-2.080205,-9.751914,-3.946643,-4.355352,3.219910,9.852865,0.671717,4.936652,8.037552,1.576727,-8.606761,1.094318,-4.726198,0.724458,-5.332486,-0.432849,2.249739,2.580948,-6.255232,3.034021,7.923077,-1.740681,4.053733,-6.187144,3.874915,6.350082,-9.824773,-6.163773,9.414350,6.248764,-2.198567,-8.982532,-9.856274,1.547213,9.330124,9.559250,-7.298963,-1.579121,9.578429,-2.281407,-1.299261,-5.156210,-1.689219,9.626906,0.039560,3.060462,1.204652,1.011934,-1.166137,-5.803940,9.218768,-9.995089,2.377332,3.213181,9.459542,0.280344,1.125359,-4.688759,-7.319614,9.561935,-6.295048,-1.174357,-8.537193,-4.614109,-8.365129,9.313010,-0.223789,5.254242,-7.125394,-1.444001,-2.964081,0.574498,-7.612959,5.255751,-6.635253,-4.568907,-9.068937,-8.404024,-2.247222,0.457192,6.068633,5.589139,-3.534983,-6.902952,6.814484,-8.905486,-8.856404,-8.775877,0.126235,-0.457680,-9.653145,-6.774502,6.694478,-0.429323,8.299789,-9.761048,-8.537235,-7.005323,4.885013,3.489941,-3.748497,-3.997908,6.937407,3.158429,0.088344,-7.332341,-8.769387,-6.902788,7.694873,7.093210,-8.182152,-2.579001,8.434577,3.065506,5.579995,-9.559364,-2.099367,-1.304599,4.685662,-9.016103,6.158599,-2.970359,4.469277,1.851536,3.380762,-2.593176,8.879769,-5.089314,3.052210,6.676860,-2.260427,-3.380054,-8.479973,2.771735,-1.649395,-4.275578,-0.570269,7.354465,0.679875,5.832528,-4.486126,-5.839906,-0.232953,-0.532949,-9.721620,-3.721096,8.200004,3.129627,1.421549,5.073974,-2.152825,-1.526055,7.421164,1.230264,-0.858030,9.308935,-6.915283,-6.482038,8.746276,-0.867582,-4.406439,-4.675172,-0.577263,-3.124595,-3.180150,3.264181,7.821742,-2.216308,-2.980386,-7.425567,-9.576225,2.741498,7.144959,9.779253,-3.299745,8.306081,-2.177658,7.179905,3.658738,-0.529815,4.202879,5.223999,9.126988,4.504959,1.962339,2.050839,-3.951055,-3.937878,-8.833424,-8.186167,2.170775,-5.182508,7.358844,-3.256408,5.284758,8.527876,9.828313,6.940822,-4.122703,-0.734836,-1.058253,5.538377,-5.616891,5.426268,3.455597,9.657657,9.890430,-4.712326,8.047268,6.124504,2.046613,-2.944105,2.662214,-6.581919,-8.544654,2.463476,-7.125054,7.711822,-6.784924,4.522760,-6.768780,7.949340,-6.164140,9.805138,-0.124452,-2.067915,8.183551,-7.444984,2.885657,-8.058796,9.578350,-9.063705,-7.014795,-7.599905,-7.389557,-9.866111,8.810159,-9.527871,2.928990,7.449184,6.940414,5.362763,-4.249973,1.725357,-5.091730,-8.373807,-7.178146,1.286702,-6.598940,8.061746,-4.510393,-3.177210,5.919014,2.430908,-2.945718,3.816838,7.334253,-4.369675,-1.394840,0.736596,9.801288,1.996383,-7.702360,-8.494373,-2.298172,-8.762967,7.908078,-4.214937,6.428784,7.378106,4.998049,5.380217,8.757889,-7.248012,-4.036180,1.192804,6.470173,3.317552,5.124692,2.436176,2.470254,-2.025773,-3.715348,-6.535990,1.543245,2.755795,-9.639692,1.576036,-5.550832,0.082444,2.215917,-1.277175,3.170525,-3.672388,7.358262,8.082068,0.744340,4.140222,-1.467931,-9.566359,5.685029,-4.031944,-3.477083,9.982667,-0.377941,1.371228,5.187706,-9.398213,7.141455,-6.528167,-0.656399,-8.842881,4.836862,3.719657,3.155370,7.764171,4.306437,-2.940902,9.799061,-1.154158,-7.154841,6.540182,9.487841,6.237382,0.015377,7.388709,9.268966,1.084290,9.011268,-6.696504,-2.337931,1.791681,-9.661195,-9.702791,-8.185383,7.894540,-8.081351,-9.649628,-3.987340,0.102190,7.680672,-6.088502,-5.346767,-0.398280,-0.309860,-1.279195,-8.766892,8.421925,8.899255,2.550411,-2.323274,-0.417785,9.903226,5.934639,-6.934924,7.938560,5.312863,-1.811543,-8.766735,-5.170831,-5.241075,1.333859,-9.682046,7.686885,-3.932753,0.416610,7.362422,-3.135620,0.705909,-8.342071,-8.403741,2.023456,7.846716,9.042917,-0.474862,0.389087,-6.308446,-2.203231,4.961348,-7.905868,-9.542790,-1.172031,7.235404,-0.695108,-0.992572,2.267115,5.071398,7.015840,-5.806648,-1.092809,-1.981233,6.348433,-2.279743,2.653148,7.137815,-8.359424,-3.524329,1.685124,7.524874,-5.397049,3.650536,-0.167771,-0.387052,7.150049,-2.303851,-4.741322,0.929826,6.028545,0.391332,8.818588,-4.265839,-6.316040,5.053318,-6.987086,2.802018,-8.204597,-5.435511,1.166703,-6.279446,-3.186544,-8.170812,6.920209,-9.571486,-0.411661,-2.250126,3.245475,6.166305,3.589863,7.753279,5.042315,-7.809294,3.582745,-5.426122,9.138839,-7.930809,0.385790,-5.412314,-0.215433,3.714836,-4.443882,6.972475,-2.449085,7.907021,1.533021,6.415111,-8.626246,-7.254941,8.562892,-0.521670,-6.495335,-4.058695,-5.417305,-5.525266,8.994329,5.244419,5.260087,7.098884,8.974240,9.998571,-9.858327,2.045680,-3.769194,-7.060354,-4.283628,4.707448,4.531861,-6.793685,-4.616570,6.329452,-2.646084,-7.167638,8.066213,3.418511,-1.657115,5.783139,1.192945,2.013251,-3.615411,0.999750,2.707876,3.298538,-4.873396,-4.930971,0.638373,8.634367,-5.791758,8.353594,7.247451,-3.407257,-4.857486,-7.351719,-5.023440,6.708735,-9.538116,0.905142,2.471295,-9.789262,-8.574456,1.088903,-7.048478,6.485972,-4.746009,-9.931746,7.649040,6.018004,-9.207612,3.446950,-2.245692,-1.001548,-3.835552,-5.361453,-5.551230,3.811339,5.699375,-9.222536,6.420938,-3.816233,8.267456,-1.252442,8.760510,-2.724115,4.132227,-9.715906,-2.410577,-5.971761,-2.777187,3.660933,-6.164114,1.888268,4.109857,3.499082,8.679178,-8.939558,4.187641,1.992083,-9.512187,-6.809059,0.094127,0.082143,3.024861,-9.227776,-7.485389,9.823450,9.971606,-4.771687,-0.438537,6.620743,2.485400,-5.834388,-8.774732,0.970590,4.038042,2.747040,-8.394710,2.518354,-4.843822,8.019431,2.399174,2.516315,7.798599,0.370273,-4.992063,2.283041,-3.838690,-2.370015,1.351812,2.344652,9.100306,-6.540981,-7.265926,-2.093964,1.297158,4.783429,-5.252582,0.072385,1.656982,4.431493,-0.587625,7.605002,0.204431,8.047799,-8.583521,3.349080,7.512578,6.726706,3.017916,2.994537,-9.844543,8.464108,2.041073,-0.290359,1.079778,-1.895995,2.629621,-8.809048,3.430269,4.711971,9.961862,-0.919948,-0.096373,-1.696458,1.992674,7.798284,-0.563330,-6.397143,2.329306,-6.256573,-8.327022,-3.515535,3.462836,-9.578104,7.716358,-5.584746,6.755269,3.792285,-1.227461,4.138634,9.769954,5.834392,-2.720393,-8.354690,5.249843,-2.950902,8.623369,1.138352,-9.168241,-5.603059,8.440812,-6.238670,6.432873,2.651270,3.592126,6.761421,4.171616,-1.493918,-5.595032,9.015511,-8.900362,6.864462,3.326613,-7.378124,8.055265,0.445918,6.441494,0.912033,3.521591,-8.653588,4.303034,-1.104449,5.233254,-9.882905,6.031287,3.938623,-5.766044,2.869133,4.385052,0.243089,-4.753867,4.284949,-5.884683,-7.450407,2.844286,-6.895880,-5.663159,2.911915,0.545677,1.067196,-2.143720,-0.852271,-7.024934,-7.983908,2.624065,-4.979944,-8.143283,1.496291,-7.976197,-9.465765,2.431433,-2.983945,9.181710,6.051115,-7.258067,5.684298,4.230567,3.136781,-8.044973,0.188562,0.970710,9.744554,6.119702,-3.818378,3.286947,-6.448150,6.685250,-7.351446,-8.304143,0.381216,1.365073,6.490964,7.702316,-8.064447,-4.177677,5.208225,2.527162,5.742086,-2.151527,-7.437877,7.009741,-6.077142,9.346445,7.222707,-7.432145,-5.734621,-3.717564,-1.493872,-1.806419,0.509965,-4.706030,-6.299364,7.825155,-7.743016,5.770753,0.266691,0.810968,5.774596,8.434053,1.725691,-3.364737,9.010863,5.438628,-2.460533,-5.886627,2.543853,-0.350258,-7.606916,4.653487,6.779787,8.673338,9.070679,-2.230023,2.674971,-9.657449,0.147219,1.285285,1.323481,-7.774314,-5.986568,7.041109,6.352238,-5.537064,6.666253,6.318736,-9.040691,-4.028064,6.746227,2.522027,-9.340875,8.809427,-2.793291,-7.716198,-1.393683,4.046885,8.031668,-1.917869,-1.460352,-5.051315,-3.821471,8.557929,-5.698866,2.055546,-7.873328,-1.535084,-2.977010,1.607454,-0.625288,-5.320937,-7.227317,-2.808359,-4.140073,2.525714,0.531802,-2.106620,0.074013,-8.553018,6.368369,7.854464,-4.776921,-0.646763,-0.164283,6.121032,3.549548,5.140435,0.584327,0.947538,-3.291652,1.228705,-2.555281,4.810532,5.038463,8.866843,7.548989,-4.363824,6.831753,-4.009382,-7.063274,-3.380825,3.285997,-8.942073,2.786999,-8.182257,-0.149782,7.130411,-9.242766,-4.146995,2.134398,-2.669566,-4.753032,-1.477274,-1.456822,4.899935,3.984554,-9.549390,5.317854,6.111524,0.946344,-3.888575,2.128977,-5.966169,2.833992,8.854119,9.047798,1.278215,0.567823,0.280861,2.154648,-2.179675,-3.124163,0.830051,4.027836,4.396750,3.995051,-2.455522,7.741681,-6.047644,5.548465,3.464611,5.711827,2.440166,9.017658,-7.332250,2.899419,0.326832,-9.992008,-3.109208,8.900441,-2.922012,2.015772,-4.347261,6.881068,1.453612,-3.504479,0.375101,-4.333173,-7.902871,1.775635,-4.637835,-7.724813,6.616055,-8.974441,-3.887224,3.391648,-4.872828,-9.771418,9.915349,8.715275,-0.713729,-8.238731,-7.771151,-9.444689,-5.068279,1.265087,9.961474,-0.078230,-3.112404,-7.755298,-2.786237,8.185148,-8.055275,2.984006,-8.186373,8.637084,4.507850,-4.352169,-0.461103,-1.652270,2.802631,3.311535,3.789054,0.849219,-1.217305,3.273337,8.438711,-2.126063,-7.728413,1.134703,-3.884399,2.249539,-5.962800,7.664809,4.666104,0.887310,-5.389709,7.203822,-3.797477,4.011830,-4.097016,-5.926191,-1.491260,3.111084,-2.324224,0.357987,0.479910,-2.157150,-2.384256,-6.510742,-4.111046,-4.861070,-6.158393,-5.684416,-8.759260,-1.823651,-2.754390,-6.696117,7.985707,8.739611,2.404057,-2.571481,-3.463147,-8.974764,5.910813,-2.855187,7.393473,-0.543675,-3.274179,-4.604267,-7.665210,6.978276,3.369171,6.938460,9.715395,7.228477,4.305737,-3.435420,-2.137839,0.071194,2.963988,6.082937,-7.208250,0.245426,8.096745,-7.943529,-0.121234,-0.478870,7.366859,-9.785192,6.494074,1.582822,2.784672,-2.777559,5.880380,2.316159,2.758454,5.666323,-3.281633,-5.273014,-6.005430,-7.113859,-9.456907,9.166929,-4.033169,-6.959467,6.496750,7.414196,8.585868,-6.360770,7.299111,-1.669546,1.496319,-5.764734,-6.516725,6.350447,2.952062,2.235023,-9.336982,-6.524639,-0.733692,-0.022984,-2.215579,-3.014825,3.215577,-0.363252,8.114041,2.425480,-5.317465,-6.929399,-7.092474,-0.059885,2.816527,8.795489,-4.458887,4.143941,1.325237,-5.081674,3.918914,7.501284,3.761208,8.452845,-7.652519,7.288088,-8.795722,7.934506,7.025581,5.490727,9.089445,0.908027,-8.248365,-5.985278,-4.851073,0.407745,-8.173694,8.030960,3.030169,-4.080131,3.983213,-9.854358,9.353465,3.551293,0.966262,-3.438525,6.033765,-2.326983,-4.472149,7.474652,5.582133,-7.517200,-0.362136,-4.386267,-4.121423,9.909697,-4.663138,2.985048,-3.001559,6.302466,8.560975,-7.043523,0.753817,-7.331520,-6.708931,-4.928427,9.761849,3.736162,-5.291041,2.533216,-9.588123,7.478723,-2.089668,-6.900668,1.281723,1.600270,7.102915,8.512827,-4.678286,-6.734325,-1.724516,6.859554,8.837281,4.168578,-3.140377,-9.143414,1.239086,7.895741,2.542560,-1.251752,8.546464,9.012796,-8.699330,1.965105,7.749779,7.246315,0.058628,4.069910,2.959750,-3.011281,0.331416,-0.394225,-6.384508,-1.344320,2.523065,-8.925500,-6.511726,-7.085128,9.885469,-7.920224,2.254798,-8.124691,-2.626893,-8.925013,-9.413976,3.454574,6.834883,-8.622373,4.415066,9.437255,-5.566456,-2.245286,-2.612242,0.495542,-7.874292,-5.524034,4.761198,-1.792427,-5.984588,2.193099,-5.218052,-3.486768,-0.509864,3.736610,3.978343,-8.848658,2.213347,0.975729,8.703711,4.649765,-3.672620,-9.461408,-1.035962,9.487454,0.622398,7.124500,7.722738,5.957795,-9.556331,4.119729,-2.408039,4.273700,-3.111040,6.107833,8.828290,-8.952853,-2.237724,2.175139,3.603204,4.239639,7.448213,-4.907818,-6.964206,-0.238048,5.885029,-6.739239,-3.246659,7.408271,-9.302762,-9.610741,5.838109,2.147692,0.501430,-9.097748,0.358314,3.159048,-6.714839,5.904324,-3.885743,8.932909,-9.065451,2.507794,-4.638349,9.440557,8.576713,-1.150012,-6.787504,-4.351062,2.221136,4.425493,-8.698015,5.858954,-0.035549,4.375450,2.723966,-7.844490,-7.395609,-8.318173,-7.540157,-1.363968,5.795662,-2.773047,-0.097338,-3.179922,1.924808,9.484425,-8.997674,-9.235672,1.012694,8.144581,5.428998,-6.721025,3.881559,-8.765588,6.353153,0.340332,4.756770,-0.420620,-9.440638,4.378404,-2.533130,0.324851,-8.460873,-8.523937,5.349388,-3.339956,5.043470,6.670412,3.377300,6.344061,-3.322606,8.106084,-8.721455,2.173913,-5.686156,8.939465,8.371037,-4.701494,-9.859253,-6.644391,-2.376827,-1.887350,7.519107,0.726455,5.186902,5.383089,7.616724,-9.234967,0.765074,6.217280,-0.599267,-6.483140,6.554256,5.764603,6.442835,-5.373357,-4.677183,-8.977506,-1.170911,-4.122883,-9.313189,2.783607,9.269401,6.219179,2.033745,-9.796923,4.220473,-2.820408,8.776231,4.670717,0.178621,6.407341,-5.101617,5.754790,5.908642,5.164403,-3.362621,8.381418,-9.945594,-8.335275,5.289105,7.246183,4.509094,-9.626866,-7.365734,-6.933218,5.512972,2.488261,6.060706,-1.370207,8.394497,-4.273781,-5.719896,1.460755,-3.180958,-1.223384,-2.230579,4.862577,6.906029,5.696923,0.605686,4.502999,8.380217,-4.763642,-2.235114,7.252437,-7.134108,4.189435,3.933609,5.405549,-2.020771,-9.003109,-5.317537,-4.884510,4.521102,3.964478,3.458529,9.990488,5.389064,8.750868,-3.427148,9.866409,-3.335535,8.379020,2.160758,-5.617712,-4.916408,1.860013,-6.765362,5.200702,7.428938,-4.357833,1.036737,3.151858,9.861510,-3.277284,3.696498,5.818953,-2.567438,6.387135,6.056950,3.674406,-1.189851,-4.697761,7.219695,-6.441187,-1.072501,8.361123,-1.436988,8.997122,-2.638736,6.627176,3.846258,9.652137,8.538191,-1.813815,-9.171576,1.781142,-6.572437,2.125681,6.805587,-3.491812,-3.587821,5.528248,-0.956555,6.554229,7.837388,-2.913670,9.106625,-6.885148,-3.368374,2.306452,2.282499,-3.254374,7.496040,1.893608,7.402380,-0.229248,1.822367,0.488384,-5.114335,-1.302429,1.087413,1.919971,3.441078,-8.329422,-3.938984,-9.724333,-4.918270,0.248215,8.538653,-9.712161,-2.666333,-4.310058,-2.591383,1.745470,-1.220260,-1.023851,-3.220909,-4.976311,-0.937139,4.196414,1.765373,-8.737615,-4.616094,5.371898,-0.698025,7.428556,-8.367908,-6.627963,0.132659,-5.418227,-0.282409,3.844556,-3.169174,-8.396738,-7.814678,4.478760,2.200490,7.883906,0.571218,2.266669,-8.562219,-9.749963,5.541814,-9.963492,-1.373592,-0.384881,6.175151,1.599315,-6.985035,-5.087408,4.849736,-2.873541,9.555271,8.267375,-9.948124,-7.207418,4.814077,3.256273,-2.047332,4.977513,-2.929027,8.290480,7.867790,8.902022,-4.405618,1.348666,5.158469,-9.326797,1.724258,3.657756,4.690489,0.547504,-0.004887,4.039074,-9.702267,1.794519,-1.043613,-9.548338,9.271695,4.641014,-4.553891,-3.198716,-7.509569,-0.923116,-0.908720,6.922855,-9.739377,-4.324271,-0.531357,2.391281,-5.300907,3.186305,2.476111,-8.567135,-6.818614,-5.302082,-2.783126,-6.195014,4.512042,4.976879,0.607919,4.051991,7.648483,-4.275605,4.447376,-7.729368,4.439725,8.823234,1.166554,2.010772,0.896670,-1.607308,-2.257719,4.279439,-1.011161,2.410950,8.334917,0.911138,-5.275240,-1.699045,7.152807,3.260239,7.091500,2.930192,2.868679,-2.588953,-6.446992,-0.112375,6.817375,-3.379609,-1.641956,4.365439,8.974936,-7.125950,9.737292,9.468691,3.573424,9.906359,0.675472,-5.325079,2.612769,-0.574500,2.217663,1.809809,-5.153775,-0.315752,3.062252,-6.838723,-7.438416,5.657506,-2.740143,-0.321136,4.482251,-4.491201,-9.320097,3.473223,1.514182,1.202863,0.228305,6.556150,1.418590,-8.307549,-4.369391,9.550518,-7.339779,-1.379265,9.627614,-4.957472,-4.267736,-6.692780,4.986131,-7.470496,6.605480,-0.106291,-8.138372,-1.935934,7.393961,7.229149,6.612580,9.904267,6.246438,-8.622972,-8.843590,6.348415,1.747336,-6.727361,-4.054191,9.639152,-2.409120,-6.102945,-8.675491,-8.270209,7.177519,3.220922,-2.001100,-1.379906,-8.510222,7.776097,-9.430318,4.297362,-6.477044,-5.743457,-8.932046,-0.691968,8.302576,-5.557698,7.217514,-9.329187,-2.980389,8.344582,-1.601856,-2.883526,6.647796,0.686933,-9.502885,3.735033,-9.936839,3.027057,-8.630094,-5.078994,-3.281673,9.916986,8.632808,5.510189,1.000966,4.137030,-4.848115,-8.834193,3.206142,6.754027,-0.297482,-6.252716,1.256331,5.244161,1.213476,7.863258,-9.311487,1.878603,-0.494927,6.322478,4.956558,0.282522,-5.007334,0.338091,-7.736281,-2.453290,-9.277762,9.378640,-3.690454,4.602957,-3.325320,-6.128416,1.690328,1.992799,-8.094786,1.912806,9.387855,5.028976,-9.708857,6.698613,-8.496239,3.382232,-0.945123,-7.542761,7.230171,-5.830354,-3.830153,0.073006,-0.467072,-0.502531,5.862966,-7.481106,-3.566585,3.214399,6.261824,8.840261,-9.619412,-7.600251,-6.253156,9.632096,-6.749517,1.214323,-8.810729,-6.423514,7.630870,0.881560,-1.806065,7.401745,-5.211044,8.277695,9.293292,8.430039,0.291454,-0.662223,-2.977895,4.562191,6.999902], dtype = "float64")#candidate|2207|(1760,)|const|float64
call_2205 = relay.TupleGetItem(func_903_call(relay.reshape(const_2206.astype('int16'), [2, 12, 2]), relay.reshape(const_2206.astype('int16'), [2, 12, 2]), relay.reshape(const_2207.astype('float64'), [1760,]), ), 2)
call_2208 = relay.TupleGetItem(func_907_call(relay.reshape(const_2206.astype('int16'), [2, 12, 2]), relay.reshape(const_2206.astype('int16'), [2, 12, 2]), relay.reshape(const_2207.astype('float64'), [1760,]), ), 2)
output = relay.Tuple([call_2193,var_2194,const_2195,const_2196,call_2199,const_2200,uop_2202,call_2205,const_2206,const_2207,])
output2 = relay.Tuple([call_2197,var_2194,const_2195,const_2196,call_2201,const_2200,uop_2202,call_2208,const_2206,const_2207,])
func_2223 = relay.Function([var_2185,var_2194,], output)
mod['func_2223'] = func_2223
mod = relay.transform.InferType()(mod)
mutated_mod['func_2223'] = func_2223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2223_call = mutated_mod.get_global_var('func_2223')
var_2225 = relay.var("var_2225", dtype = "float64", shape = (12, 8, 12))#candidate|2225|(12, 8, 12)|var|float64
var_2226 = relay.var("var_2226", dtype = "bool", shape = (80,))#candidate|2226|(80,)|var|bool
call_2224 = func_2223_call(var_2225,var_2226,)
output = call_2224
func_2227 = relay.Function([var_2225,var_2226,], output)
mutated_mod['func_2227'] = func_2227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2453 = relay.var("var_2453", dtype = "float32", shape = (3, 8, 7))#candidate|2453|(3, 8, 7)|var|float32
uop_2454 = relay.rsqrt(var_2453.astype('float32')) # shape=(3, 8, 7)
var_2456 = relay.var("var_2456", dtype = "float32", shape = (3, 8, 7))#candidate|2456|(3, 8, 7)|var|float32
bop_2457 = relay.mod(uop_2454.astype('float64'), relay.reshape(var_2456.astype('float64'), relay.shape_of(uop_2454))) # shape=(3, 8, 7)
output = bop_2457
output2 = bop_2457
func_2464 = relay.Function([var_2453,var_2456,], output)
mod['func_2464'] = func_2464
mod = relay.transform.InferType()(mod)
var_2465 = relay.var("var_2465", dtype = "float32", shape = (3, 8, 7))#candidate|2465|(3, 8, 7)|var|float32
var_2466 = relay.var("var_2466", dtype = "float32", shape = (3, 8, 7))#candidate|2466|(3, 8, 7)|var|float32
output = func_2464(var_2465,var_2466,)
func_2467 = relay.Function([var_2465,var_2466,], output)
mutated_mod['func_2467'] = func_2467
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2474 = relay.var("var_2474", dtype = "uint16", shape = (5, 10, 3))#candidate|2474|(5, 10, 3)|var|uint16
var_2475 = relay.var("var_2475", dtype = "uint16", shape = (5, 10, 3))#candidate|2475|(5, 10, 3)|var|uint16
bop_2476 = relay.right_shift(var_2474.astype('uint16'), relay.reshape(var_2475.astype('uint16'), relay.shape_of(var_2474))) # shape=(5, 10, 3)
output = relay.Tuple([bop_2476,])
output2 = relay.Tuple([bop_2476,])
func_2487 = relay.Function([var_2474,var_2475,], output)
mod['func_2487'] = func_2487
mod = relay.transform.InferType()(mod)
mutated_mod['func_2487'] = func_2487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2487_call = mutated_mod.get_global_var('func_2487')
var_2489 = relay.var("var_2489", dtype = "uint16", shape = (5, 10, 3))#candidate|2489|(5, 10, 3)|var|uint16
var_2490 = relay.var("var_2490", dtype = "uint16", shape = (5, 10, 3))#candidate|2490|(5, 10, 3)|var|uint16
call_2488 = func_2487_call(var_2489,var_2490,)
output = call_2488
func_2491 = relay.Function([var_2489,var_2490,], output)
mutated_mod['func_2491'] = func_2491
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2537 = relay.var("var_2537", dtype = "int16", shape = ())#candidate|2537|()|var|int16
var_2538 = relay.var("var_2538", dtype = "int16", shape = (10, 14, 16))#candidate|2538|(10, 14, 16)|var|int16
bop_2539 = relay.greater(var_2537.astype('bool'), var_2538.astype('bool')) # shape=(10, 14, 16)
bop_2557 = relay.divide(var_2537.astype('float64'), var_2538.astype('float64')) # shape=(10, 14, 16)
output = relay.Tuple([bop_2539,bop_2557,])
output2 = relay.Tuple([bop_2539,bop_2557,])
func_2567 = relay.Function([var_2537,var_2538,], output)
mod['func_2567'] = func_2567
mod = relay.transform.InferType()(mod)
var_2568 = relay.var("var_2568", dtype = "int16", shape = ())#candidate|2568|()|var|int16
var_2569 = relay.var("var_2569", dtype = "int16", shape = (10, 14, 16))#candidate|2569|(10, 14, 16)|var|int16
output = func_2567(var_2568,var_2569,)
func_2570 = relay.Function([var_2568,var_2569,], output)
mutated_mod['func_2570'] = func_2570
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2972 = relay.var("var_2972", dtype = "uint8", shape = (6, 4, 14))#candidate|2972|(6, 4, 14)|var|uint8
const_2973 = relay.const([[[1,3,-9,-6,-4,7,9,5,-3,-2,8,1,-8,-6],[2,-10,-2,-6,5,-1,5,4,-2,-3,8,7,3,5],[-10,10,8,6,2,-10,-4,-4,9,-2,-9,-5,2,4],[-1,-7,-1,-5,-8,7,-3,-6,8,-5,-2,-5,3,9]],[[-3,1,1,4,-6,10,-10,-5,-6,9,3,-10,-10,-5],[6,-10,-6,-2,10,10,3,-3,1,-5,9,2,7,-8],[-10,3,10,6,6,-4,1,6,7,6,-7,6,6,-9],[-1,-1,-3,-6,8,8,7,-10,-7,-2,-6,-2,-1,7]],[[6,2,7,8,-8,1,-8,9,1,6,8,2,-8,4],[-3,-9,-9,6,-4,3,3,-9,-3,8,10,1,2,9],[-6,-1,6,-9,3,-10,-2,-3,1,7,10,7,9,-9],[1,-3,3,-7,-6,-3,-4,7,9,2,-10,3,2,4]],[[-2,-4,-1,2,-1,-2,-7,-5,1,6,10,10,-7,-3],[-7,-2,-10,-1,-3,6,6,-10,-4,-4,7,-4,10,-8],[-9,7,10,4,-8,-10,2,3,-1,-8,8,-9,-4,1],[-7,10,-1,-1,-8,10,3,-7,3,2,-4,10,-4,6]],[[-2,-1,-9,-4,-10,3,3,6,-1,-1,-2,2,-3,8],[5,-5,-5,7,-9,-4,7,1,-9,4,-7,-8,-7,-6],[5,6,-2,-7,9,-8,-5,1,8,-2,6,-8,-2,-3],[9,7,-5,-3,6,-1,6,-5,-2,4,8,-8,3,-7]],[[-4,-2,-10,-6,4,10,-3,-6,10,1,10,3,-3,-2],[7,-1,-10,4,4,2,3,-7,-5,-7,-6,9,6,-6],[1,7,-5,-10,3,-4,-6,-4,-10,-7,-6,2,-3,-10],[10,-9,-3,-10,-9,3,6,9,-6,3,6,3,-2,-5]]], dtype = "uint8")#candidate|2973|(6, 4, 14)|const|uint8
bop_2974 = relay.multiply(var_2972.astype('uint8'), relay.reshape(const_2973.astype('uint8'), relay.shape_of(var_2972))) # shape=(6, 4, 14)
output = bop_2974
output2 = bop_2974
func_2980 = relay.Function([var_2972,], output)
mod['func_2980'] = func_2980
mod = relay.transform.InferType()(mod)
var_2981 = relay.var("var_2981", dtype = "uint8", shape = (6, 4, 14))#candidate|2981|(6, 4, 14)|var|uint8
output = func_2980(var_2981)
func_2982 = relay.Function([var_2981], output)
mutated_mod['func_2982'] = func_2982
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3236 = relay.var("var_3236", dtype = "int8", shape = (12, 9, 1))#candidate|3236|(12, 9, 1)|var|int8
var_3237 = relay.var("var_3237", dtype = "int8", shape = (12, 9, 4))#candidate|3237|(12, 9, 4)|var|int8
bop_3238 = relay.bitwise_or(var_3236.astype('int8'), var_3237.astype('int8')) # shape=(12, 9, 4)
output = bop_3238
output2 = bop_3238
func_3265 = relay.Function([var_3236,var_3237,], output)
mod['func_3265'] = func_3265
mod = relay.transform.InferType()(mod)
var_3266 = relay.var("var_3266", dtype = "int8", shape = (12, 9, 1))#candidate|3266|(12, 9, 1)|var|int8
var_3267 = relay.var("var_3267", dtype = "int8", shape = (12, 9, 4))#candidate|3267|(12, 9, 4)|var|int8
output = func_3265(var_3266,var_3267,)
func_3268 = relay.Function([var_3266,var_3267,], output)
mutated_mod['func_3268'] = func_3268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3304 = relay.var("var_3304", dtype = "int16", shape = (8, 6, 6))#candidate|3304|(8, 6, 6)|var|int16
const_3305 = relay.const([[[-6,9,-9,-6,-6,8],[9,-1,-7,-3,8,9],[4,6,-8,7,7,8],[10,-2,-6,-10,-2,-2],[-7,3,10,9,7,6],[-10,-9,-7,-5,-3,-5]],[[-9,-6,7,-1,2,2],[-8,-6,10,10,2,-9],[6,-8,-2,10,10,-2],[3,-3,-9,-6,8,2],[3,8,-1,8,2,8],[9,-3,3,5,-3,8]],[[-3,-1,-8,9,-4,9],[-5,-3,-3,8,9,10],[-9,6,1,-3,10,-5],[6,-10,-10,-6,-5,9],[9,9,-9,8,2,-1],[9,7,-8,8,6,-6]],[[6,-9,-8,9,6,-5],[-5,-4,-8,9,-8,9],[-1,-2,6,1,-8,4],[-9,-5,-1,9,-3,4],[-7,-3,3,3,-10,1],[4,9,-4,-10,-8,-7]],[[5,-6,10,-4,-4,2],[-8,3,1,-7,8,9],[-10,7,3,-6,2,1],[-3,9,-9,-9,5,8],[-6,2,-10,5,7,-6],[6,3,6,-9,8,-10]],[[-8,-5,-9,-2,-7,-8],[-3,-4,5,-5,4,8],[-1,-10,-5,-5,9,10],[4,-2,4,5,-3,8],[-1,-8,10,-4,2,-9],[4,2,5,-1,1,9]],[[3,1,-4,-5,-3,-7],[-8,-3,5,-9,-7,2],[10,2,-7,7,6,8],[-10,-3,8,3,3,10],[7,8,-10,-5,-2,-4],[-7,-10,2,2,-3,-4]],[[-7,10,-2,-9,-8,4],[-7,-8,7,9,4,8],[7,5,-5,2,-5,-5],[1,-9,-2,8,-5,8],[8,-7,-7,8,5,6],[4,3,10,-10,3,-3]]], dtype = "int16")#candidate|3305|(8, 6, 6)|const|int16
bop_3306 = relay.subtract(var_3304.astype('int16'), relay.reshape(const_3305.astype('int16'), relay.shape_of(var_3304))) # shape=(8, 6, 6)
var_3320 = relay.var("var_3320", dtype = "int16", shape = (8, 6, 6))#candidate|3320|(8, 6, 6)|var|int16
bop_3321 = relay.mod(const_3305.astype('float64'), relay.reshape(var_3320.astype('float64'), relay.shape_of(const_3305))) # shape=(8, 6, 6)
output = relay.Tuple([bop_3306,bop_3321,])
output2 = relay.Tuple([bop_3306,bop_3321,])
func_3328 = relay.Function([var_3304,var_3320,], output)
mod['func_3328'] = func_3328
mod = relay.transform.InferType()(mod)
mutated_mod['func_3328'] = func_3328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3328_call = mutated_mod.get_global_var('func_3328')
var_3330 = relay.var("var_3330", dtype = "int16", shape = (8, 6, 6))#candidate|3330|(8, 6, 6)|var|int16
var_3331 = relay.var("var_3331", dtype = "int16", shape = (8, 6, 6))#candidate|3331|(8, 6, 6)|var|int16
call_3329 = func_3328_call(var_3330,var_3331,)
output = call_3329
func_3332 = relay.Function([var_3330,var_3331,], output)
mutated_mod['func_3332'] = func_3332
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3626 = relay.var("var_3626", dtype = "float64", shape = (9, 7))#candidate|3626|(9, 7)|var|float64
uop_3627 = relay.sin(var_3626.astype('float64')) # shape=(9, 7)
func_2487_call = mod.get_global_var('func_2487')
func_2491_call = mutated_mod.get_global_var('func_2491')
var_3637 = relay.var("var_3637", dtype = "uint16", shape = (150, 1))#candidate|3637|(150, 1)|var|uint16
call_3636 = relay.TupleGetItem(func_2487_call(relay.reshape(var_3637.astype('uint16'), [5, 10, 3]), relay.reshape(var_3637.astype('uint16'), [5, 10, 3]), ), 0)
call_3638 = relay.TupleGetItem(func_2491_call(relay.reshape(var_3637.astype('uint16'), [5, 10, 3]), relay.reshape(var_3637.astype('uint16'), [5, 10, 3]), ), 0)
func_601_call = mod.get_global_var('func_601')
func_605_call = mutated_mod.get_global_var('func_605')
const_3644 = relay.const([9,7,-1,8,10,5,3,4,-5,-9,-7,-1,-9,6,-7,-8,6,10,6,5,10,-1,9,-7,2,-5,8,-9,-4,6,3,6,3,-9,4,4,5,-10,-1,-1,2,1,1,-6,6,-4,10,-2,-8,2,4,7,-3,4,-2,8,-10,-4,10,5,4,7,-1,-8,10,2,-8,-3,-6,7,-3,-3,-4,5,-9,-2,-10,-8,9,-10,8,3,1,-6,-5,8,-10,3,2,-7,-6,5,-9,-9,-10,5,10,-1,4,-9,-4,6,-10,7,-7,-2,-5,-1,1,-1,8,7,6,1,9,8,9,-7,-5,2,1,6,-2,-10,-6,3,9,-4,-2,-6,4,-6,9,5,-10,-5,10,6,-8,-6,9,10,1,-4], dtype = "int32")#candidate|3644|(144,)|const|int32
var_3645 = relay.var("var_3645", dtype = "int32", shape = (2304,))#candidate|3645|(2304,)|var|int32
call_3643 = relay.TupleGetItem(func_601_call(relay.reshape(const_3644.astype('int32'), [16, 1, 9]), relay.reshape(var_3645.astype('int32'), [16, 16, 9]), ), 2)
call_3646 = relay.TupleGetItem(func_605_call(relay.reshape(const_3644.astype('int32'), [16, 1, 9]), relay.reshape(var_3645.astype('int32'), [16, 16, 9]), ), 2)
output = relay.Tuple([uop_3627,call_3636,var_3637,call_3643,const_3644,var_3645,])
output2 = relay.Tuple([uop_3627,call_3638,var_3637,call_3646,const_3644,var_3645,])
func_3670 = relay.Function([var_3626,var_3637,var_3645,], output)
mod['func_3670'] = func_3670
mod = relay.transform.InferType()(mod)
var_3671 = relay.var("var_3671", dtype = "float64", shape = (9, 7))#candidate|3671|(9, 7)|var|float64
var_3672 = relay.var("var_3672", dtype = "uint16", shape = (150, 1))#candidate|3672|(150, 1)|var|uint16
var_3673 = relay.var("var_3673", dtype = "int32", shape = (2304,))#candidate|3673|(2304,)|var|int32
output = func_3670(var_3671,var_3672,var_3673,)
func_3674 = relay.Function([var_3671,var_3672,var_3673,], output)
mutated_mod['func_3674'] = func_3674
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3703 = relay.var("var_3703", dtype = "float32", shape = (16, 3, 4))#candidate|3703|(16, 3, 4)|var|float32
uop_3704 = relay.sqrt(var_3703.astype('float32')) # shape=(16, 3, 4)
func_3265_call = mod.get_global_var('func_3265')
func_3268_call = mutated_mod.get_global_var('func_3268')
const_3713 = relay.const([[4,5],[10,-8],[-9,-5],[4,-9],[-7,-1],[-3,-10],[-10,4],[6,-7],[7,10],[5,-2],[-1,-1],[7,1],[-1,10],[-1,-9],[-9,8],[3,6],[7,-7],[6,-9],[8,-3],[-9,9],[-9,4],[-9,-2],[7,4],[5,-10],[-7,-7],[8,-1],[-5,3],[1,6],[3,1],[-4,-2],[2,3],[-7,-2],[-1,9],[-4,-10],[-7,4],[9,9],[9,-5],[4,6],[-7,-5],[-3,1],[5,-5],[-10,-9],[10,-4],[-3,-2],[-2,7],[-6,2],[-3,8],[-4,-10],[-10,-8],[-4,7],[10,4],[4,-10],[-2,-4],[10,-4]], dtype = "int8")#candidate|3713|(54, 2)|const|int8
const_3714 = relay.const([-9,-2,5,-7,-10,10,4,9,-7,-3,1,4,6,1,8,-1,-10,7,-2,-6,5,10,-10,-7,-5,-2,6,2,-9,-9,7,-6,-10,2,-7,-4,6,2,-6,1,-7,-8,10,-4,-4,-7,-2,8,6,-4,8,-7,-6,10,-8,-3,-5,-8,10,-3,-7,-5,-3,-1,-3,-4,-6,5,10,4,-6,2,6,4,4,-2,10,-9,10,-4,8,-4,-8,6,2,-7,5,-10,9,-8,-1,-5,-6,4,4,-9,-7,-7,-1,5,1,2,1,-6,5,-5,-4,9,-5,-8,-2,-3,9,4,-3,5,-10,1,-8,4,-10,-10,-1,6,4,7,2,-3,-10,-3,3,-8,-5,-4,5,-6,9,3,7,-4,-3,4,-10,6,-3,4,7,1,-10,-2,-5,4,-6,-1,-6,3,5,7,-4,7,4,-3,3,2,9,2,4,-5,5,-3,-3,2,-6,5,-2,7,-4,-8,6,-4,-3,8,-2,-8,-1,8,1,-1,-9,-7,9,-8,6,-1,5,9,2,5,-2,-3,-6,-6,10,-4,-6,-3,-6,-9,8,-7,7,-9,3,3,9,-8,-6,1,-2,7,5,2,-1,-4,-2,2,-6,8,-6,-3,-6,9,-5,-10,-7,-4,6,-4,10,-8,10,2,2,5,3,-3,1,1,-2,5,-7,-2,7,-2,7,-9,-9,-2,3,8,-9,4,-3,-8,-5,6,1,7,-7,5,8,-10,-9,9,-2,-9,-10,-3,-8,-1,3,7,7,-2,-10,8,-4,-6,-1,-6,-3,-3,6,7,-8,-8,-6,-3,-6,7,5,-5,-2,-4,7,-5,3,-3,-6,6,9,-5,7,-7,-4,-1,2,7,-9,6,-1,6,2,6,2,-4,-3,7,6,7,10,8,-5,3,-8,-2,3,4,1,-3,-9,5,3,-6,-6,8,10,-6,-5,-3,-2,-3,-4,10,4,-8,10,8,5,-4,-4,7,-2,-3,3,-1,10,10,8,9,3,8,-3,1,-10,-1,9,10,-2,-10,8,10,5,10,-7,-7,6,-6,-4,9,3,-8,-9,-6,3,3,-9,-9,-2,8,-8,2,2,7,6,-10,7,1,-8,6,-5,3,2,8,1,-5,-3,-6,-6,1,-8,-1,8,-10,1,10,-5,-1,4,-4,5,5], dtype = "int8")#candidate|3714|(432,)|const|int8
call_3712 = func_3265_call(relay.reshape(const_3713.astype('int8'), [12, 9, 1]), relay.reshape(const_3714.astype('int8'), [12, 9, 4]), )
call_3715 = func_3265_call(relay.reshape(const_3713.astype('int8'), [12, 9, 1]), relay.reshape(const_3714.astype('int8'), [12, 9, 4]), )
output = relay.Tuple([uop_3704,call_3712,const_3713,const_3714,])
output2 = relay.Tuple([uop_3704,call_3715,const_3713,const_3714,])
func_3728 = relay.Function([var_3703,], output)
mod['func_3728'] = func_3728
mod = relay.transform.InferType()(mod)
var_3729 = relay.var("var_3729", dtype = "float32", shape = (16, 3, 4))#candidate|3729|(16, 3, 4)|var|float32
output = func_3728(var_3729)
func_3730 = relay.Function([var_3729], output)
mutated_mod['func_3730'] = func_3730
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3814 = relay.var("var_3814", dtype = "float32", shape = (10, 12, 3))#candidate|3814|(10, 12, 3)|var|float32
const_3815 = relay.const([[[-0.064973,7.552038,-1.466074],[0.975571,-9.761489,-3.341688],[3.759661,6.789041,-2.321308],[6.499276,-1.703580,6.134683],[8.768873,9.604820,-1.048353],[7.439812,9.017662,4.734409],[3.117764,-8.661360,9.772667],[-1.181278,2.737297,-4.814559],[7.986073,-7.278198,-3.948501],[-4.496799,-6.472935,-9.050488],[-2.653884,7.947801,-3.465380],[1.124709,3.327658,9.947875]],[[-3.589594,-3.565232,-9.778672],[9.069863,-0.218377,0.183315],[6.443514,-8.801211,4.809232],[6.033025,-2.966636,-4.146628],[5.079058,-8.353504,2.253718],[0.693393,6.878082,7.894769],[6.266412,5.503881,-1.196117],[-4.889900,-1.156132,2.801651],[9.110776,7.884333,-6.733237],[-2.657077,6.567023,-9.642067],[6.073900,-3.865135,8.831292],[-9.810548,2.295622,-0.704133]],[[-2.633555,2.483664,1.889534],[3.434367,1.979239,-5.889617],[-2.619821,-0.019072,-1.792550],[-2.896039,-6.193842,-1.651075],[4.428880,-8.580441,0.931386],[-2.393452,2.644423,-0.134456],[9.182516,9.274486,1.020015],[-4.091429,6.412718,4.013087],[5.835820,8.060474,5.128906],[-6.893676,-8.520099,9.349258],[5.661622,3.207487,3.374881],[-4.217803,8.368094,-8.540871]],[[9.771659,-8.984159,7.444748],[-7.726224,-1.887715,-1.353734],[-2.732765,-0.863524,-6.874525],[-5.327162,2.266406,-1.511485],[5.761579,9.428839,3.395041],[4.129123,-7.628815,4.775551],[-1.986985,5.365444,4.900992],[-4.764265,-0.120658,-0.401434],[-3.272809,-8.130828,-6.692300],[-4.798985,2.818683,6.546952],[8.902961,-4.210002,-7.408649],[3.147908,3.951397,4.484037]],[[0.003775,-1.395636,-3.833750],[-6.418410,0.807551,4.749994],[9.574683,-6.544923,2.496976],[2.626405,-4.696236,2.539504],[0.053207,7.172698,2.906924],[0.005804,-7.048389,-5.932235],[-2.281219,9.346348,2.321880],[-8.819901,8.049705,-6.267607],[-9.553605,1.003744,1.171412],[3.290648,-3.861349,2.935922],[-3.788690,-1.125569,1.037510],[4.352486,6.839497,5.746829]],[[5.070732,0.089695,-5.850304],[-1.636950,-8.942740,-2.440921],[-2.865023,-3.307553,-2.068474],[-2.608577,0.959168,-0.958041],[3.509395,-3.223695,-1.255212],[5.818304,2.021897,-8.127504],[-1.831291,-3.646427,5.909792],[-1.060712,0.784092,-2.030380],[0.325967,-5.929925,2.296597],[7.503078,-9.798771,2.252606],[0.182032,7.092367,2.378652],[3.622252,-1.611872,-4.676854]],[[-3.970870,0.293160,-6.344884],[1.747970,-8.516213,-1.076520],[-5.664741,-1.388124,7.438901],[-5.259617,-1.831190,-9.375987],[8.424976,-0.670911,4.791747],[3.202630,2.612380,8.279194],[-7.633874,1.747199,-2.501551],[-1.217707,8.997258,-4.763771],[-3.013783,-7.550690,-5.609357],[6.743431,-5.661943,9.988067],[-0.893020,8.391151,0.210555],[0.496278,3.172530,-0.915685]],[[-0.988911,7.327458,4.572237],[6.170563,-8.683322,-5.491735],[-5.952930,-2.472538,5.873949],[-5.697034,4.698718,-1.376365],[7.554893,-2.568462,-7.933667],[-5.666985,-2.632827,5.776547],[6.133264,6.633321,-4.671794],[-8.572136,7.825564,4.763921],[-7.593691,0.675664,8.413019],[-9.496459,1.737984,2.425844],[7.093795,5.438438,9.101096],[9.839453,6.582905,-1.510059]],[[7.400491,-8.001215,-6.336506],[4.915405,3.802940,-5.280405],[-9.136489,1.487480,9.097511],[-1.754938,8.879661,-5.819593],[-3.338960,9.592923,2.667834],[5.734143,6.898516,0.181076],[1.487116,-1.963736,5.319392],[8.631611,-4.353600,-6.818574],[5.810374,-5.637699,-7.982822],[-4.719075,1.831841,-2.937742],[6.771832,9.454018,1.849516],[-7.475329,7.069711,5.998943]],[[2.056921,5.519714,-6.810035],[-1.147040,-4.939182,-8.382418],[9.455465,9.784090,-0.299910],[0.194793,8.259037,-4.349350],[-9.080739,9.822627,-9.852309],[-5.439416,9.954685,0.169159],[1.809510,2.813584,-4.293690],[-3.067592,-6.460867,-1.383122],[4.552709,1.445161,-0.093821],[9.942768,-6.006486,4.203399],[-2.738756,4.869467,7.891687],[5.936460,-1.257573,-5.622008]]], dtype = "float32")#candidate|3815|(10, 12, 3)|const|float32
bop_3816 = relay.power(var_3814.astype('float32'), relay.reshape(const_3815.astype('float32'), relay.shape_of(var_3814))) # shape=(10, 12, 3)
output = relay.Tuple([bop_3816,])
output2 = relay.Tuple([bop_3816,])
func_3821 = relay.Function([var_3814,], output)
mod['func_3821'] = func_3821
mod = relay.transform.InferType()(mod)
var_3822 = relay.var("var_3822", dtype = "float32", shape = (10, 12, 3))#candidate|3822|(10, 12, 3)|var|float32
output = func_3821(var_3822)
func_3823 = relay.Function([var_3822], output)
mutated_mod['func_3823'] = func_3823
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3860 = relay.var("var_3860", dtype = "float32", shape = (14, 6, 8))#candidate|3860|(14, 6, 8)|var|float32
uop_3861 = relay.acosh(var_3860.astype('float32')) # shape=(14, 6, 8)
output = relay.Tuple([uop_3861,])
output2 = relay.Tuple([uop_3861,])
func_3866 = relay.Function([var_3860,], output)
mod['func_3866'] = func_3866
mod = relay.transform.InferType()(mod)
var_3867 = relay.var("var_3867", dtype = "float32", shape = (14, 6, 8))#candidate|3867|(14, 6, 8)|var|float32
output = func_3866(var_3867)
func_3868 = relay.Function([var_3867], output)
mutated_mod['func_3868'] = func_3868
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4485 = relay.var("var_4485", dtype = "float32", shape = (9, 4, 12))#candidate|4485|(9, 4, 12)|var|float32
uop_4486 = relay.cosh(var_4485.astype('float32')) # shape=(9, 4, 12)
uop_4488 = relay.cos(uop_4486.astype('float32')) # shape=(9, 4, 12)
func_1190_call = mod.get_global_var('func_1190')
func_1195_call = mutated_mod.get_global_var('func_1195')
const_4492 = relay.const([False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,True,True,False,False,False,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,False], dtype = "bool")#candidate|4492|(80,)|const|bool
var_4493 = relay.var("var_4493", dtype = "int32", shape = (144,))#candidate|4493|(144,)|var|int32
const_4494 = relay.const([-8,3,4,8,1,-10,1,3,-2,-7,3,1,8,-5,4,9,9,-9,3,-1,-3,1,6,1,9,7,8,9,5,-6,1,10,1,-3,5,7,4,4,-1,9,3,-1,4,-8,-5,-8,4,-4,-7,7,10,2,1,-3,-2,-2,8,7,5,-1,-2,7,-6,10,10,7,-1,-4,-6,-7,-9,5,-6,9,10,4,-8,-7,-1,-10,-4,1,-8,2,-3,-4,9,2,-2,7,-1,-3,1,7,-6,-3,6,8,10,-9,8,-7,-3,-4,-10,-8,-3,3,-10,6,-9,-10,4,10,7,-6,5,4,2,2,1,4,2,8,10,-9,2,2,7,-7,-3,1,-6,-5,-5,2,-8,9,-6,1,-10,2,10,-7,10,-1,-9,-1,9,5,3,-1,-4,1,7,7,-2,9,-5,-1,10,-7,6,6,-4,-1,-6,9,1,1,2,7,-7,8,-3,-8,-2,-4,5,-6,-10,-7,7,6,6,8,-7,1,-3,9,-9,1,-4,-2,6,9,4,2,-1,-1,-8,-2,6,-1,6,5,7,-9,-2,3,8,5,7,3,-6,3,-3,-10,-2,-8,-3,4,-10,2,-3,-1,6,-4,3,-10,-4,-4,-2,8,7,2,10,9,-8,-9,5,-5,7,-5,9,-9,2,3,-8,-8,8,5,6,5,7,5,7,-5,9,3,7,4,5,-3,-10,-8,-9,-8,8,-8,-9,-7,3,1,3,-4,7,-10,-5,5,-4,-6,7,9,-7,-10,-10,-5,8,8,3,4,8,-2,8,10,2,6,-10,-5,-10,5,10,4,9,1,-2,2,10,-4,-1,10,-10,1,9,-9,10,10,6,-10,-8,7,-8,1,-2,6,-1,5,3,3,1,-3,-6,1,-1,-10,-3,-8,-5,9,-7,-1,9,2,-1,4,-9,-4,-1,8,7,-10,5,1,8,9,5,4,5,8,4,-9,10,-7,-2,5,-5,2,-3,-3,-5,6,4,5,-9,7,-6,4,2,9,10,-3,-10,-4,8,-6,2,2,-6,-5,-10,8,-9,-2,-8,6,8,1,-6,3,-4,8,4,2,-7,-7,-7,4,9,-10,-8,3,8,6,-10,-8,1,-10,6,-7,7,3,-8,4,3,-4,-10,1,-10,-2,9,7,-7,-4,-9,7,4,-3,-9,10,1,-4,-1,-1,-3,1,2,-1,5,2,-6,-1,1,3,-1,1,-6,-4,-4,-6,-7,-9,7,10,5,7,4,-4,-1,6,-9,-7,6,10,8,6,-6,-8,5,4,-1,5,-8,2,-3,5,-5,-7,-4,10,-4,9,1,3,-5,-8,-10,2,2,-1,-2,9,9,-10,-2,6,5,9,3,2,1,-4,4,10,10,1,8,-3,3,-1,-2,-4,-4,-4,5,3,-7,8,3,-5,1,-8,3,7,3,-4,5,-5,-1,6,-5,3,-5,1,-10,4,-2,10,4,-5,3,3,7,9,-6,-5,5,3,10,-10,2,-10,6,4,-5,-6,-8,10,-8,-5,-5,7,2,-10,6,3,-3,6,2,7,9,-10,4,-4,3,7,2,10,6,6,-1,9,1,3,-5,3,-6,3,-4,-2,-4,5,-5,-10,4,-2,-5,8,8,9,4,9,4,-1,7,-5,4,-1,-4,1,-8,-2,-4,7,2,7,-8,7,10,-10,3,10,-5,8,1,-7,2,10,-10,2,-4,9,7,6,5,-4,3,-6,4,-8,-5,4,6,7,-2,7,8,-10,3,-10,-3,-7,-8,-5,-10,5,-9,7,2,1,-3,-4,6,3,1,10,-10,8,-1,-8,7,-8,-4,-2,-9,4,3,10,-1,9,-10,4,7,6,7,10,-9,2,5,2,9,5,-4,-1,10,7,-10,-10,4,-4,-1,-7,-5,6,3,4,-5,-5,-4,2,-8,-5,-9,-7,2,6,-8,-6,3,10,1,7,-3,-5,-1,-4,-5,9,-4,8,10,1,-10,8,8,-7,-4,-7,1,7,-8,-10,9,-6,6,1,2,3,-7,-3,-10,8,-9,4,-4,9,-1,-4,8,3,7,-1,6,-9,6,-1,-6,-4,-1,-2,-9,-8,2,1,3,-6,-10,9,3,-10,-2,5,10,-3,-8,-10,8,7,2,-9,-2,7,-2,-9,-4,3,-9,-6,-8,2,5,-2,1,-2,7,-8,-6,2,-1,2,9,-3,-4,9,-9,-9,-4,7,2,8,1,-2,-1,7,-5,-7,-6,5,1,-3,9,-3,3,-10,-9,6,-4,-7,3,5,4,-4,-2,2,7,4,-7,10,-6,9,-7,-5,3,4,-7,6,2,-6,3,10,3,-3,-10,4,-3,1,-8,-1,-10,9,-5,-3,-6,-5,-6,8,-6,2,6,-4,-7,-7,1,5,4,-1,10,-7,-2,7,7,9,-6,1,-7,9,8,-8,-5,-4,-7,-7,10,5,-6,2,-8,9,2,-6,-3,-2,2,-3,2,-5,2,-8,-7,6,5,-9,9,-7,-5,9,-7,-10,8,5,1,-1,-3,7,3,-3,1,1,7,-10,-10,-2,-9,-7,8,-1,3,1,-2,-6,-2,-5,-1,3,-6,-4,-4,-5,-9,-2,-4,7,4,3,-8,2,10,-3,6,2,-8,10,1,7,-8,10,-9,-9,-4,-10,3,-2,-9,-3,8,-7,-2,-10,-2,4,5,2,-10,8,3,-6,-8,-7,-3,2,-8,10,5,2,9,9,-1,-10,2,-4,-4,1,-1,8,3,-5,-6,8,9,1,7,3,-1,-8,9,-7,-2,-4,9,7,2,10,1,1,1,9,2,-5,-5,5,2,-6,10,-9,3,-8,2,-5,9,2,-10,7,2,-4,-2,-10,10,-1,7,-7,10,7,7,-6,8,6,8,9,-3,7,-3,-10,-3,1,-4,2,6,-5,-3,-9,10,8,-7,10,-1,7,-3,5,9,6,8,7,-9,-9,5,3,3,3,-2,2,-9,-7,6,-6,10,8,4,-2,-10,-7,-6,10,4,1,-6,9,-2,8,8,2,-10,4,8,6,6,2,-4,3,-8,3,-7,-1,-9,-4,-7,-3,-9,-8,4,6,7,-3,-2,10,1,6,-8,-5,-10,-3,9,1,-6,6,4,9,-10,6,-9,2,2,7,8,8,-5,2,-1,-2,3,7,8,3,-10,-9,-5,-10,10,-8,3,6,-9,10,3,-6,-9,-8,-1,-6,7,-2,8,-9,1,-9,-3,2,5,-1,3,-7,-10,-3,5,10,7,-6,5,-7,3,3,-1,8,-7,4,-6,-6,7,5,-1,6,10,4,7,2,-7,8,9,4,6,-10,1,9,5,10,3,-3,7,-8,9,4,6,6,7,3,-9,6,-7,10,2,-8,-7,10,6,-8,-8,3,-2,1,-10,-3,-7,1,-7,-8,4,-6,4,-4,-3,-9,5,-7,2,8,-2,1,1,5,-4,7,-8,-8,10,-5,4,-6,-8,8,2,-2,-7,8,-6,6,-8,9,-9,-8,-10,-1,-9,-5,-3,4,9,4,10,5,-4,7,5,6,4,-2,1,9,4,6,7,3,-8,1,8,4,-7,2,9,-6,5,5,3,5,-8,-5,1,-10,-6,6,4,-5,-3,3,-8,4,10,9,-5,-1,3,7,-5,-4,-5,4,-10,-10,-6,6,-5,7,-2,-9,9,10,-7,10,6,-4,2,-2,-6,9,9,-6,-6,8,-9,4,6,-4,3,-6,5,1,7,-4,-8,-5,-8,9,-5,-3,3,-2,3,3,-9,-6,8,-4,1,-8,-10,-5,-3,4,3,-2,-5,7,-2,6,9,8,1,2,9,-2,2,-9,4,-5,-3,5,-5,5,-5,1,-5,3,10,-8,7,1,-7,-8,-6,-10,-2,-6,-1,4,-4,-2,-1,-2,2,1,-10,-1,-3,-2,2,7,-8,2,-3,-7,-1,-3,6,5,-9,-9,9,8,1,-2,-1,-8,9,10,6,9,6,2,-9,-2,-5,7,-3,7,-6,-6,7,6,5,10,-3,1,-10,1,-1,-10,-4,-10,4,8,6,7,-1,9,-8,9,7,1,2,1,-5,-10,7,-5,-9,3,8,-9,2,4,9,3,3,7,8,-1,-8,3,10,10,-2,5,10,8,3,4,-7,-10,-1,-6,-7,-1,7,-2,-3,-6,-5,4,4,7,-7,-1,-8,-3,-10,-7,7,1,3,10,-8,-8,9,8,5,3,6,6,-5,-2,-9,1,6,-9,9,-4,6,-10,7,8,-3,6,3,5,1,4,-6,-6,-8,3,4,6,1,-7,-4,-2,6,-10,8,-8,3,-10,6,3,-3,-3,6,-9,5,-7,8,8,7,-2,3,5,9,-7,3,9,6,3,1,-9,5,-5,-5,-7,-1,9,-9,10,-2,-5,6,-1,7,-4,-3,5,1,2,-3,10,8,-7,-6,8,-3,4,-8,2,8,-6,-3,10,-2,-9,1,-8,1,-7,2,6,8,-5,-5,-4,6,-4,2,10,8,9,-3,8,10,-2,1,-8,-7,7,-3,-5,-2,6,4,-10,-9,2,3,5,-5,8,4,5,2,-3,3,-1,-8,-9,-7,5,-7,8,-6,7,-10,5,2,5,-2,-6,6,-7,6,-5,6,-9,-8,5,7,-5,-7,-1,2,3,-2,-6,8,-3,3,9,9,-2,-2,2,7,8,-10,2,-5,-4,6,7,5,-8,7,8,5,4,-7,9,-6,9,-8,-5,-6,3,-9,5,10,2,3,5,10,-7,10,2,-5,-9,1,-7,5,8,10,-9,1,10,-1,-1,-8,9,-6,-1,1,-3,6,-9,10,6,-5,10,6,7,5,-10,8,-1,2,5,-4,6,-8,2,4,-8,2,-2,-8,-8,1,-5,9,3,-8,5,-7,-1,-5,5,-10,8,-10,10,1,10,8,-1,3,-8,-4,-2,-3,-8,-5,-10,5,-9,-10,5,-9,-3,2,3,10,6,-4,5,-3,-8,5,5,5,6,-5,7,6,8,-6,5,2,-9,2,-6,6,-5,-1,2,-6,-1,1,-2,10,7,3,-1,3,-1,-2,2,-10,-9,-7,9,9,-2,-10,7,6,-5,6,-4,-3,-6,4,3,4,9,2,5,-9,-4,-3,8,-5,-10,8,3,-3,-6,-6,-2,-2,-2,-8,10,3,-6,-4,-8,9,3,-4,-9,-5,3,-6,2,6,6,2,-1,9,1,-4,-4,7,-10,-2,-5,4,8,2,1,7,-2,-3,-4,-2,8,6,-9,-9,-3,8,8,7,-3,8,-7,-1,-4,3,7,-4,1,6,2,-1,-6,2,-10,-2,10,-8,6,7,4,-9,5,-7,-3,8,-8,-10,-7,-10,3,-1,3,9,9,-1,-8,-5,6,-1,6,-4,-8,1,-7,2,5,3,3,9,-10,4,-3,-10,4,5,3,-4,-4,-6,-8,-10,-2,-10,5,-6,10,-2,10,9,5,3,5,-9,-4,9,1,-2,-2,-7,-2,1,-4,2,-7,9,-8,10,-10,4,1,-6,3,-7,-10,2,-7,3,-8,-5,-9,6,7,-3,-2,2,10,-10,-6,8,1,-10,-4,2,-10,-6,-3,4,-8,-8,-4,6,8,7,-2,2,8,6,6,6,4,5,-4,-9,8,3,-6,5,8,8,10,5,-5,-2,8,-9,9,2,-2,8,-6,1,-1,-8,10,-8,7,8,6,-4,-7,-7,-4,-2,7,6,2,-7,-4,1,-10,-4,-6,-10,-4,5,5,10,10,-8,3,-10,1,-7,2,-1,-10,-9,9,7,2,-7,-5,-8,10,-1,10,-7,1,-8,-3,-5,-5,-7,4,10,-9,2,-3,-8,6,7,3,9,-7,8,7,10,8,8,5,-7,-4,-8,-1,3,6,-7,1,6,4,-7,7,-5,-7,8,-3,-4,-6,-8,-9,-8,9,5,-3,10,-4,10,-2,-8,-2,-1,-3,-3,-7,10,10,-10,-3,-10,5,6,5,-1,-5,-8,-7,-1,5,-1,-5,-8,-7,3,-5,-8,3,2,-2,-8,3,-3,6,1,7,4,1,6,-2,1,4,-8,5,-8,2,-5,2,5,3,-9,-8,-4,-5,-8,-1,-4,10,3,-1,-2,5,-10,-5,-6,1,-9,-8,-9,-3,-10,7,7,-6,-3,-1,2,2,4,-4,-6,-6,5,7,-7,-10,5,10], dtype = "int32")#candidate|4494|(2304,)|const|int32
call_4491 = relay.TupleGetItem(func_1190_call(relay.reshape(const_4492.astype('bool'), [4, 5, 4]), relay.reshape(var_4493.astype('int32'), [144,]), relay.reshape(const_4494.astype('int32'), [2304,]), ), 0)
call_4495 = relay.TupleGetItem(func_1195_call(relay.reshape(const_4492.astype('bool'), [4, 5, 4]), relay.reshape(var_4493.astype('int32'), [144,]), relay.reshape(const_4494.astype('int32'), [2304,]), ), 0)
uop_4498 = relay.acos(uop_4488.astype('float32')) # shape=(9, 4, 12)
uop_4500 = relay.log10(uop_4498.astype('float32')) # shape=(9, 4, 12)
bop_4512 = relay.mod(uop_4500.astype('float32'), relay.reshape(uop_4488.astype('float32'), relay.shape_of(uop_4500))) # shape=(9, 4, 12)
output = relay.Tuple([call_4491,const_4492,var_4493,const_4494,bop_4512,])
output2 = relay.Tuple([call_4495,const_4492,var_4493,const_4494,bop_4512,])
func_4546 = relay.Function([var_4485,var_4493,], output)
mod['func_4546'] = func_4546
mod = relay.transform.InferType()(mod)
mutated_mod['func_4546'] = func_4546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4546_call = mutated_mod.get_global_var('func_4546')
var_4548 = relay.var("var_4548", dtype = "float32", shape = (9, 4, 12))#candidate|4548|(9, 4, 12)|var|float32
var_4549 = relay.var("var_4549", dtype = "int32", shape = (144,))#candidate|4549|(144,)|var|int32
call_4547 = func_4546_call(var_4548,var_4549,)
output = call_4547
func_4550 = relay.Function([var_4548,var_4549,], output)
mutated_mod['func_4550'] = func_4550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4552 = relay.var("var_4552", dtype = "float64", shape = (9, 9, 16))#candidate|4552|(9, 9, 16)|var|float64
var_4553 = relay.var("var_4553", dtype = "float64", shape = (9, 9, 16))#candidate|4553|(9, 9, 16)|var|float64
bop_4554 = relay.divide(var_4552.astype('float64'), relay.reshape(var_4553.astype('float64'), relay.shape_of(var_4552))) # shape=(9, 9, 16)
bop_4557 = relay.right_shift(bop_4554.astype('uint32'), relay.reshape(var_4553.astype('uint32'), relay.shape_of(bop_4554))) # shape=(9, 9, 16)
output = bop_4557
output2 = bop_4557
func_4567 = relay.Function([var_4552,var_4553,], output)
mod['func_4567'] = func_4567
mod = relay.transform.InferType()(mod)
mutated_mod['func_4567'] = func_4567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4567_call = mutated_mod.get_global_var('func_4567')
var_4569 = relay.var("var_4569", dtype = "float64", shape = (9, 9, 16))#candidate|4569|(9, 9, 16)|var|float64
var_4570 = relay.var("var_4570", dtype = "float64", shape = (9, 9, 16))#candidate|4570|(9, 9, 16)|var|float64
call_4568 = func_4567_call(var_4569,var_4570,)
output = call_4568
func_4571 = relay.Function([var_4569,var_4570,], output)
mutated_mod['func_4571'] = func_4571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4636 = relay.var("var_4636", dtype = "float64", shape = (2, 4, 7))#candidate|4636|(2, 4, 7)|var|float64
uop_4637 = relay.acosh(var_4636.astype('float64')) # shape=(2, 4, 7)
uop_4643 = relay.sigmoid(uop_4637.astype('float32')) # shape=(2, 4, 7)
output = uop_4643
output2 = uop_4643
func_4652 = relay.Function([var_4636,], output)
mod['func_4652'] = func_4652
mod = relay.transform.InferType()(mod)
var_4653 = relay.var("var_4653", dtype = "float64", shape = (2, 4, 7))#candidate|4653|(2, 4, 7)|var|float64
output = func_4652(var_4653)
func_4654 = relay.Function([var_4653], output)
mutated_mod['func_4654'] = func_4654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4760 = relay.var("var_4760", dtype = "uint32", shape = (12, 9, 8))#candidate|4760|(12, 9, 8)|var|uint32
var_4761 = relay.var("var_4761", dtype = "uint32", shape = (12, 9, 8))#candidate|4761|(12, 9, 8)|var|uint32
bop_4762 = relay.equal(var_4760.astype('bool'), relay.reshape(var_4761.astype('bool'), relay.shape_of(var_4760))) # shape=(12, 9, 8)
func_3328_call = mod.get_global_var('func_3328')
func_3332_call = mutated_mod.get_global_var('func_3332')
const_4777 = relay.const([[8,-5,-3,1],[10,8,4,-1],[-9,-6,-1,3],[-5,-9,-6,1],[10,-4,-4,7],[-6,-7,-5,9],[-1,8,4,-7],[6,-2,-9,-6],[-7,-2,-5,3],[5,2,-8,-6],[5,-2,-5,6],[5,4,10,-4],[8,10,-8,5],[-4,-5,-7,3],[5,1,-2,-9],[-6,4,-3,-5],[-6,-6,-9,-8],[-7,5,-4,-6],[-2,6,5,-5],[-2,-6,-9,6],[7,10,5,7],[10,8,10,2],[-2,-8,-8,7],[-3,-3,-8,-6],[2,-9,5,-9],[-9,1,-2,1],[-3,-10,-3,-1],[1,-9,-4,4],[-2,-5,8,-3],[10,6,1,5],[-10,7,1,2],[-3,-1,-5,-4],[-7,-5,2,1],[6,-3,9,-10],[-2,-2,4,-5],[4,-3,10,-7],[4,-1,2,8],[1,2,9,9],[-7,-4,-5,-8],[-4,8,-6,-2],[-7,-9,-7,4],[10,10,-7,3],[-9,7,-6,3],[-5,6,7,6],[-1,2,1,5],[-3,-3,3,-6],[-10,6,-9,-8],[1,-8,1,2],[-8,-9,-2,2],[-9,-8,10,-5],[-9,8,10,-2],[9,-9,5,-2],[10,4,6,-9],[-3,-9,3,3],[3,-7,7,-3],[-1,-9,-6,1],[-2,7,-3,5],[5,10,8,-7],[-7,3,8,-2],[-10,5,-2,1],[-3,4,-7,3],[4,8,-9,2],[-1,-1,3,-8],[-4,7,1,-10],[8,-10,4,5],[-9,2,9,-5],[1,1,-9,6],[-4,-9,-3,-1],[2,6,-7,6],[5,7,3,8],[7,-9,10,10],[-8,-1,8,4]], dtype = "int16")#candidate|4777|(72, 4)|const|int16
call_4776 = relay.TupleGetItem(func_3328_call(relay.reshape(const_4777.astype('int16'), [8, 6, 6]), relay.reshape(const_4777.astype('int16'), [8, 6, 6]), ), 1)
call_4778 = relay.TupleGetItem(func_3332_call(relay.reshape(const_4777.astype('int16'), [8, 6, 6]), relay.reshape(const_4777.astype('int16'), [8, 6, 6]), ), 1)
output = relay.Tuple([bop_4762,call_4776,const_4777,])
output2 = relay.Tuple([bop_4762,call_4778,const_4777,])
func_4786 = relay.Function([var_4760,var_4761,], output)
mod['func_4786'] = func_4786
mod = relay.transform.InferType()(mod)
mutated_mod['func_4786'] = func_4786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4786_call = mutated_mod.get_global_var('func_4786')
var_4788 = relay.var("var_4788", dtype = "uint32", shape = (12, 9, 8))#candidate|4788|(12, 9, 8)|var|uint32
var_4789 = relay.var("var_4789", dtype = "uint32", shape = (12, 9, 8))#candidate|4789|(12, 9, 8)|var|uint32
call_4787 = func_4786_call(var_4788,var_4789,)
output = call_4787
func_4790 = relay.Function([var_4788,var_4789,], output)
mutated_mod['func_4790'] = func_4790
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4794 = relay.var("var_4794", dtype = "float64", shape = (8, 1, 14))#candidate|4794|(8, 1, 14)|var|float64
uop_4795 = relay.acos(var_4794.astype('float64')) # shape=(8, 1, 14)
func_3670_call = mod.get_global_var('func_3670')
func_3674_call = mutated_mod.get_global_var('func_3674')
const_4798 = relay.const([[2.696458,-0.382624,2.798410,3.566247,-8.295557,8.627895,-7.292222,-6.522513,9.876971],[0.080611,8.786497,2.765154,-9.626906,2.444873,-0.856844,1.172863,0.647812,-5.573490],[-4.847308,-9.189110,9.601707,-4.380949,1.861083,-4.534793,4.199782,0.242630,7.464700],[-5.270510,0.878465,-2.071701,2.794043,4.151471,5.566988,2.982223,3.140812,-0.515045],[1.726020,-8.336181,-3.714853,-7.127840,-5.318761,-6.574834,-8.587231,5.062138,-2.511656],[1.313886,-6.608507,-1.609006,-7.233015,2.756519,3.599965,-1.104406,-3.147432,0.504515],[6.018308,-2.427243,1.901422,0.778894,7.724471,-3.822787,0.252872,7.341691,-5.153811]], dtype = "float64")#candidate|4798|(7, 9)|const|float64
const_4799 = relay.const([3,-2,6,6,-2,-7,-3,5,-9,6,-5,10,8,5,-8,-2,4,6,10,1,8,9,9,9,1,3,-8,1,-8,-3,-7,-5,-9,-10,-4,-2,-9,4,-5,5,10,3,9,-6,-8,-3,-6,-7,-1,3,-10,-8,8,-6,-6,-8,-6,-4,4,-4,-1,-9,-9,-9,5,-8,10,3,-9,-10,9,1,10,-2,5,9,5,2,-8,6,6,-8,9,2,-2,3,4,-5,-9,-1,5,2,-9,5,7,1,-3,-10,2,-2,-6,-4,-1,5,7,8,-5,1,-7,1,8,-7,-3,-5,1,-9,-6,-9,5,-7,-9,6,5,10,-6,8,-5,4,4,-4,1,-3,-10,4,-6,8,5,-1,-3,-4,4,-10,-7,-6,8,-5,5,5,-2,-9], dtype = "uint16")#candidate|4799|(150,)|const|uint16
const_4800 = relay.const([[-6],[8],[-5],[-4],[3],[-4],[3],[-9],[10],[8],[-6],[-5],[10],[10],[5],[-4],[10],[-2],[-2],[-10],[10],[-9],[5],[-7],[-8],[2],[-3],[-2],[2],[2],[1],[-10],[-10],[8],[9],[-9],[1],[3],[6],[10],[4],[-5],[-8],[-10],[10],[-10],[10],[3],[-4],[-3],[8],[-1],[10],[4],[1],[-9],[5],[2],[4],[6],[5],[-6],[-7],[6],[10],[4],[3],[-5],[-1],[-10],[-3],[9],[-4],[1],[-6],[1],[-2],[8],[-6],[3],[-8],[-1],[6],[6],[7],[10],[-5],[-7],[-4],[7],[7],[1],[5],[-1],[6],[6],[-2],[-4],[5],[6],[4],[-3],[6],[7],[10],[10],[-2],[-9],[10],[7],[-5],[-7],[1],[5],[-9],[-9],[6],[-3],[-6],[2],[6],[5],[3],[-6],[-3],[7],[7],[-5],[7],[-4],[9],[-1],[-9],[-7],[9],[-1],[3],[5],[-10],[-7],[6],[-1],[9],[-3],[5],[3],[3],[9],[10],[-7],[7],[-4],[-5],[-6],[-1],[-10],[-8],[2],[-8],[-4],[-2],[-7],[2],[-7],[5],[-1],[-3],[3],[-5],[-5],[-4],[3],[-7],[-9],[-10],[9],[1],[7],[5],[-6],[-9],[1],[2],[-1],[6],[3],[-2],[-4],[-3],[-7],[-6],[-7],[4],[10],[9],[8],[-3],[-1],[6],[3],[-8],[2],[5],[3],[8],[1],[6],[-3],[-1],[8],[9],[9],[4],[6],[-1],[-1],[-7],[1],[8],[-8],[-3],[10],[-8],[-8],[6],[-10],[-1],[-6],[8],[-6],[-2],[8],[-10],[1],[-2],[-4],[-1],[-4],[9],[-7],[-7],[1],[-7],[-4],[10],[-4],[9],[-2],[-2],[8],[-4],[-10],[-9],[4],[-4],[7],[10],[-9],[3],[-4],[5],[5],[-9],[-4],[-2],[6],[7],[10],[10],[-7],[7],[-8],[-10],[-5],[-2],[7],[-4],[-3],[1],[-7],[-2],[-10],[-9],[-6],[-6],[-5],[-5],[-9],[-10],[9],[1],[1],[-10],[10],[4],[4],[-10],[-6],[7],[-2],[-4],[-4],[-10],[5],[7],[-3],[-2],[6],[1],[-5],[5],[4],[6],[-6],[1],[-3],[-5],[-6],[-4],[-4],[-7],[-1],[-1],[4],[5],[10],[9],[-5],[3],[7],[9],[1],[-1],[-6],[7],[5],[-7],[6],[-3],[4],[10],[-6],[-8],[-3],[2],[7],[1],[5],[2],[-6],[1],[5],[-8],[-8],[1],[-9],[-5],[-9],[7],[4],[-3],[-3],[6],[6],[-9],[-8],[-6],[10],[8],[-4],[-7],[-2],[-1],[-5],[-5],[8],[-9],[-2],[-8],[4],[-5],[-6],[7],[-2],[4],[-6],[3],[5],[-8],[-10],[9],[-1],[-10],[-5],[5],[4],[2],[-8],[7],[-6],[8],[-4],[-9],[-4],[-9],[-8],[-4],[-9],[3],[-1],[-3],[-6],[-6],[-8],[6],[4],[7],[4],[-4],[10],[3],[-4],[-8],[1],[6],[10],[8],[6],[2],[-7],[-9],[2],[-6],[9],[7],[3],[-9],[8],[1],[7],[-3],[9],[-4],[-5],[1],[3],[-10],[8],[-3],[6],[-8],[9],[8],[-5],[9],[8],[-10],[1],[-4],[-8],[-8],[-8],[8],[-4],[3],[-3],[1],[-10],[-1],[9],[6],[10],[-4],[8],[9],[6],[-9],[-6],[8],[-9],[10],[-4],[6],[-1],[9],[-7],[-7],[9],[-9],[-1],[4],[-6],[10],[1],[-3],[-1],[-4],[5],[10],[-7],[6],[-2],[-10],[-4],[9],[-7],[-5],[-8],[-4],[4],[-3],[10],[1],[7],[1],[-8],[7],[-10],[2],[-6],[-1],[8],[6],[10],[-6],[9],[1],[-7],[7],[6],[10],[-7],[-6],[6],[10],[1],[-6],[7],[4],[4],[-4],[-9],[4],[-9],[-2],[1],[9],[-10],[2],[2],[-9],[5],[-1],[-9],[-10],[5],[6],[10],[4],[3],[4],[-9],[-1],[-7],[9],[6],[2],[5],[-2],[8],[-7],[-9],[-1],[-5],[8],[-2],[-1],[3],[-1],[4],[10],[8],[-1],[-7],[7],[-6],[-10],[-7],[4],[5],[-9],[2],[7],[-3],[-6],[10],[9],[9],[-3],[3],[-2],[4],[6],[3],[3],[-9],[5],[6],[7],[-2],[-8],[-10],[-2],[-7],[5],[-7],[-10],[1],[2],[3],[-3],[2],[6],[-2],[7],[7],[-8],[-4],[-7],[-7],[2],[-1],[5],[-8],[5],[-2],[6],[6],[2],[-6],[-4],[6],[-1],[4],[1],[4],[7],[6],[7],[-9],[-7],[-3],[-7],[-4],[9],[-7],[2],[-6],[-4],[-3],[-6],[-10],[2],[5],[10],[-4],[-6],[-2],[7],[1],[-6],[10],[-2],[3],[9],[-2],[-4],[-9],[8],[8],[7],[7],[-10],[-6],[4],[5],[-6],[10],[-3],[5],[-2],[8],[9],[4],[1],[-7],[7],[-4],[2],[-6],[-9],[-8],[5],[-4],[-2],[2],[-10],[-10],[6],[-8],[8],[-7],[-1],[2],[3],[2],[10],[-9],[-10],[5],[6],[6],[6],[4],[-1],[-10],[8],[-4],[10],[-4],[3],[-5],[8],[9],[-8],[9],[-10],[9],[10],[9],[-6],[2],[8],[-4],[-1],[1],[6],[8],[3],[9],[-2],[5],[-3],[9],[8],[7],[-8],[-9],[-5],[7],[3],[10],[8],[-1],[-5],[-2],[1],[8],[-4],[9],[4],[-5],[7],[1],[6],[7],[-7],[-7],[5],[4],[10],[-5],[-5],[-7],[10],[10],[-4],[-8],[-8],[-4],[-8],[4],[-8],[-10],[2],[-2],[-4],[-5],[2],[8],[8],[7],[1],[-4],[6],[-5],[-8],[2],[1],[8],[-10],[8],[-9],[-10],[3],[-4],[4],[-4],[7],[-5],[-7],[-9],[-1],[-3],[-5],[-8],[3],[-6],[6],[-3],[4],[1],[-1],[6],[-6],[-2],[3],[-8],[-4],[-7],[-1],[-1],[-10],[7],[5],[-7],[9],[10],[5],[-9],[6],[4],[3],[-6],[-4],[-6],[-7],[-9],[4],[-4],[-8],[-7],[-9],[9],[2],[6],[9],[9],[-3],[-1],[-7],[2],[-1],[-2],[-9],[-5],[5],[5],[10],[1],[2],[-2],[-7],[-5],[6],[-9],[-10],[-9],[-4],[-10],[-7],[-1],[7],[-10],[10],[9],[-9],[2],[-1],[-8],[2],[4],[-8],[5],[-5],[-4],[-7],[9],[-1],[-3],[10],[-10],[2],[-7],[-9],[-2],[10],[-3],[8],[-10],[-2],[-7],[9],[5],[5],[-8],[9],[-4],[-2],[-5],[-5],[3],[2],[4],[5],[-5],[10],[8],[-8],[-1],[2],[-9],[-9],[-1],[3],[-3],[-3],[-6],[2],[7],[5],[6],[5],[-7],[8],[5],[-7],[-10],[-7],[-7],[-9],[3],[-9],[-6],[-8],[-10],[-6],[8],[-2],[-4],[1],[2],[-6],[-6],[5],[7],[6],[-5],[6],[5],[4],[-7],[-4],[2],[10],[-6],[-7],[-10],[-1],[8],[-10],[10],[-3],[-2],[-6],[-5],[4],[3],[-6],[2],[4],[8],[-6],[-6],[7],[-5],[-7],[4],[1],[10],[-4],[-10],[-6],[-6],[1],[-10],[-8],[6],[-9],[3],[6],[-4],[6],[-4],[-7],[-6],[1],[9],[10],[-10],[5],[-6],[10],[-9],[6],[-6],[1],[-5],[1],[3],[6],[-9],[5],[2],[3],[-8],[4],[1],[10],[5],[-1],[8],[3],[8],[3],[-2],[-1],[5],[8],[3],[1],[-2],[-9],[-1],[3],[3],[-6],[-6],[4],[-3],[-5],[7],[-5],[-4],[-2],[-6],[2],[10],[-1],[8],[-6],[7],[-2],[1],[9],[5],[8],[-2],[6],[7],[4],[-3],[-3],[8],[5],[-9],[-7],[-2],[-1],[6],[-4],[4],[7],[-6],[3],[-3],[9],[5],[-10],[-8],[-9],[5],[-3],[-6],[8],[4],[5],[6],[5],[4],[-7],[7],[4],[10],[9],[8],[-4],[5],[-10],[2],[4],[-1],[-4],[-10],[-1],[7],[3],[8],[9],[1],[7],[-5],[4],[8],[2],[-3],[-4],[5],[3],[6],[-2],[-6],[10],[2],[1],[9],[-7],[-8],[-6],[-7],[6],[5],[6],[9],[7],[-5],[-10],[-4],[2],[-4],[-3],[10],[-7],[1],[5],[-6],[-9],[1],[2],[3],[5],[8],[9],[-10],[10],[-6],[4],[3],[6],[-9],[-3],[2],[-5],[-7],[2],[8],[-10],[-7],[-8],[3],[-10],[1],[7],[-7],[9],[6],[10],[-7],[-2],[4],[4],[3],[8],[-6],[6],[4],[-8],[-10],[-2],[-10],[5],[-6],[3],[-4],[6],[8],[9],[8],[3],[4],[3],[7],[-7],[-6],[6],[-2],[1],[9],[-9],[-6],[-10],[7],[-8],[-7],[-8],[2],[2],[-3],[-6],[8],[5],[4],[5],[-8],[6],[-1],[10],[6],[-2],[-9],[-5],[-2],[-10],[-6],[3],[10],[-5],[4],[10],[6],[7],[10],[3],[5],[8],[-8],[5],[-10],[6],[-3],[1],[9],[-10],[5],[6],[-3],[7],[10],[1],[7],[-9],[2],[6],[3],[9],[3],[9],[-3],[-4],[8],[8],[-2],[-7],[6],[10],[-5],[8],[-5],[1],[-6],[-3],[-10],[10],[1],[2],[5],[3],[6],[2],[5],[-5],[10],[-2],[-8],[4],[3],[3],[-10],[-7],[-9],[4],[-8],[3],[-4],[7],[-4],[-2],[4],[1],[6],[7],[3],[-3],[5],[5],[8],[9],[-4],[-1],[5],[10],[8],[6],[-5],[-5],[-2],[-8],[-2],[-7],[-10],[2],[4],[3],[4],[-8],[2],[10],[9],[6],[-5],[-5],[-3],[2],[-6],[4],[-3],[-2],[-8],[5],[-1],[-10],[-1],[4],[8],[-6],[-3],[2],[3],[-3],[4],[3],[-8],[6],[-3],[7],[-6],[-8],[-9],[8],[2],[-4],[4],[3],[1],[4],[-5],[-5],[-3],[-8],[-2],[10],[-6],[-6],[1],[-6],[-8],[10],[-6],[7],[8],[5],[10],[8],[-10],[10],[5],[-9],[-8],[-8],[9],[-4],[4],[-10],[6],[8],[-1],[-9],[2],[2],[8],[-6],[-2],[4],[2],[-9],[-5],[9],[-6],[10],[8],[-7],[-2],[10],[6],[7],[-6],[6],[8],[7],[3],[-10],[-10],[8],[1],[9],[-5],[-8],[5],[-2],[-2],[6],[10],[5],[4],[-7],[-2],[3],[-9],[8],[-8],[-9],[5],[1],[-7],[-2],[10],[6],[-10],[9],[5],[-8],[4],[-6],[4],[-4],[5],[5],[-3],[10],[7],[-1],[-10],[8],[-8],[-3],[-2],[7],[-4],[-10],[-1],[3],[8],[-5],[-4],[2],[-7],[-10],[-10],[6],[-5],[8],[-9],[3],[9],[4],[-6],[5],[-4],[-6],[5],[2],[1],[-10],[2],[6],[2],[5],[10],[-7],[-1],[-9],[7],[-10],[4],[9],[-4],[-3],[3],[-3],[-9],[2],[-4],[3],[5],[10],[-10],[-3],[-3],[-9],[-1],[-8],[9],[7],[5],[9],[-10],[5],[10],[-5],[-9],[-10],[-6],[-7],[-6],[-7],[5],[1],[7],[8],[-9],[-5],[-9],[-2],[-8],[3],[3],[-6],[4],[9],[-8],[-8],[-2],[-8],[8],[-10],[-4],[5],[-3],[2],[5],[-7],[-7],[-9],[-6],[5],[-7],[-8],[-2],[7],[-2],[-7],[1],[-10],[1],[6],[-7],[6],[5],[9],[6],[-5],[4],[1],[2],[6],[-6],[-2],[4],[-9],[-6],[-3],[-7],[-9],[6],[4],[-9],[-4],[-6],[1],[-4],[2],[9],[-7],[8],[10],[-3],[6],[-3],[2],[2],[-1],[9],[-4],[-4],[-3],[-1],[10],[-8],[4],[5],[9],[8],[7],[10],[-3],[7],[1],[-1],[1],[1],[6],[8],[3],[5],[4],[-3],[5],[8],[-5],[1],[-1],[1],[-6],[-9],[2],[10],[4],[-5],[6],[6],[9],[2],[-3],[6],[-9],[5],[9],[3],[2],[2],[-4],[1],[-10],[6],[-8],[7],[2],[-1],[-2],[-2],[-6],[-2],[-4],[-10],[-7],[-2],[5],[-8],[2],[3],[6],[5],[-1],[-4],[5],[-3],[-4],[-8],[10],[-9],[-10],[-9],[-4],[2],[-10],[-6],[-6],[8],[-9],[-8],[10],[-5],[-8],[5],[3],[-6],[-2],[-8],[9],[4],[6],[10],[3],[7],[10],[-6],[9],[-5],[6],[-5],[-3],[-2],[4],[-3],[3],[-6],[9],[10],[4],[4],[5],[4],[-5],[10],[-10],[-10],[6],[10],[-5],[6],[-2],[4],[-8],[3],[-4],[-8],[9],[2],[3],[-5],[9],[-8],[1],[-6],[2],[-2],[-4],[-8],[-3],[-8],[10],[-5],[-10],[-4],[8],[-7],[-7],[1],[-2],[-4],[-1],[-1],[-5],[1],[9],[-6],[-5],[-7],[9],[-9],[-1],[6],[-1],[5],[6],[-2],[-6],[-1],[-1],[10],[2],[-7],[8],[-4],[-5],[3],[-9],[-3],[-6],[6],[8],[8],[-10],[-6],[3],[-8],[-3],[-4],[1],[5],[10],[2],[-7],[-2],[1],[-4],[7],[-4],[10],[7],[-5],[10],[2],[-8],[-1],[8],[3],[3],[-5],[2],[2],[-7],[-5],[-5],[1],[10],[-8],[6],[4],[4],[-9],[7],[4],[-1],[-4],[7],[8],[-6],[-4],[-9],[4],[5],[-2],[4],[6],[-3],[2],[-8],[-1],[-5],[3],[-2],[5],[3],[-10],[6],[-6],[6],[1],[7],[-7],[4],[-10],[8],[-1],[-8],[-7],[5],[-8],[-3],[5],[-2],[10],[10],[-9],[-1],[-7],[8],[7],[-1],[-8],[-5],[9],[7],[10],[-6],[9],[7],[-6],[-3],[6],[-1],[-10],[2],[-2],[-6],[-4],[-5],[10],[-2],[10],[-7],[-6],[10],[-3],[-8],[10],[-2],[8],[-8],[1],[-3],[6],[9],[8],[6],[9],[-8],[-10],[-8],[-5],[2],[6],[4],[9],[6],[-7],[-4],[5],[-6],[-3],[4],[10],[7],[-4],[10],[1],[-3],[-5],[-1],[-10],[-4],[-6],[-7],[-2],[-5],[-9],[-8],[-2],[-6],[-2],[-6],[-8],[10],[-5],[-10],[7],[-1],[4],[3],[2],[2],[-10],[-10],[-7],[-9],[-3],[-4],[3],[6],[6],[-2],[-2],[6],[-10],[4],[1],[-3],[10],[3],[10],[-8],[8],[-5],[5],[-10],[9],[-4],[4],[9],[-10],[-8],[-10],[-2],[-4],[8],[1],[-6],[8],[-2],[3],[2],[4],[3],[5],[-2],[6],[8],[10],[-6],[8],[-8],[-2],[8],[6],[-2],[9],[-10],[-1],[1],[-4],[3],[-4],[6],[2],[10],[-10],[9],[-1],[-1],[-4],[-5],[-9],[8],[-8],[8],[-3],[-2],[3],[-2],[-1],[-6],[-9],[2],[-9],[-8],[-8],[-10],[7],[-8],[6],[-9],[-8],[-9],[-8],[-7],[3],[2],[6],[5],[-9],[-2],[5],[-7],[-9],[-9],[3],[-7],[8],[4],[-7],[9],[-4],[-4],[-4],[-10],[10],[-1],[2],[-1],[-5],[8],[-8],[-10],[9],[4],[-3],[-5],[-3],[9],[-6],[2],[9],[-4],[3],[3],[-8],[5],[6],[-4],[-7],[2],[-1],[-9],[6],[4],[7],[1],[-9],[-10],[-2],[10],[6],[6],[9],[8],[10],[8],[-6],[8],[6],[-5],[9],[-10],[1],[-3],[-5],[-1],[-6],[-4],[10],[-3],[-9],[-4],[9],[-9],[5],[10],[8],[-2],[-2],[-1],[6],[9],[-10],[-1],[2],[-1],[-6],[-9],[6],[-3],[-10],[2],[-5],[-6],[-9],[-5],[1],[-9],[6],[1],[5],[-2],[-6],[7],[9],[-2],[-3],[6],[1],[6],[-10],[-7],[6],[4],[-5],[3],[-9],[-2],[-5],[9],[-10],[-2],[9],[2],[3],[2],[-8],[6],[6],[-7],[5],[2],[4],[8],[-2],[3],[2],[-5],[-5],[-3],[-3],[-2],[3],[-7],[8],[-9],[-4],[4],[4],[7],[-3],[-5],[8],[-3],[5],[1],[-10],[-2],[-3],[-3],[3],[-1],[-4],[4],[10],[-1],[-4],[5],[-6],[-4],[6],[-10],[-10],[-1],[-1],[5],[8],[-4],[-2],[-8],[2],[5],[-6],[5],[-1],[-5],[-4],[-5],[-9],[-9],[-5],[-6]], dtype = "int32")#candidate|4800|(2304, 1)|const|int32
call_4797 = relay.TupleGetItem(func_3670_call(relay.reshape(const_4798.astype('float64'), [9, 7]), relay.reshape(const_4799.astype('uint16'), [150, 1]), relay.reshape(const_4800.astype('int32'), [2304,]), ), 2)
call_4801 = relay.TupleGetItem(func_3674_call(relay.reshape(const_4798.astype('float64'), [9, 7]), relay.reshape(const_4799.astype('uint16'), [150, 1]), relay.reshape(const_4800.astype('int32'), [2304,]), ), 2)
func_3328_call = mod.get_global_var('func_3328')
func_3332_call = mutated_mod.get_global_var('func_3332')
const_4804 = relay.const([-6,-4,-10,-9,6,-2,-10,-9,1,5,7,10,-10,-5,1,-10,-6,-7,1,-1,-1,-8,-4,-2,-3,2,4,1,-2,-4,-4,-7,9,9,2,-7,-5,-4,3,3,4,-7,-9,4,-7,-4,3,3,7,-3,4,-2,6,9,1,-7,-7,-3,5,10,6,-4,7,-10,-1,-3,-3,-7,10,-10,6,-8,-4,-3,-10,2,7,4,5,-6,7,3,-4,-10,-6,5,-10,7,6,2,1,4,9,-1,2,-3,7,-8,8,-5,-8,4,-7,-1,-9,1,-6,9,2,2,-7,10,2,-5,6,3,-4,2,-8,-6,-6,10,-1,1,-6,5,7,7,7,-10,-6,7,-9,-1,1,-5,-4,1,3,9,5,3,1,-1,-4,1,3,-9,-8,1,-10,6,-3,-9,9,6,-2,-7,-10,1,-1,-3,-2,-9,3,-10,6,6,7,6,3,-1,4,8,-6,8,-3,2,-3,8,10,-10,-5,8,4,-7,7,-10,4,4,8,9,-5,7,-1,6,2,-8,4,9,9,5,-4,8,2,9,-8,-1,9,-2,4,4,6,5,9,8,-1,-5,-7,-4,8,10,2,-8,-3,5,-8,3,10,-4,3,-8,-6,-9,9,3,-9,-3,6,3,-2,5,7,4,8,-10,-3,-5,-3,-9,8,-8,-6,-9,2,2,-2,6,6,1,-9,5,7,-10,-4,1,-2,10,-1,10,3,-9,-8,-4,-4,-8,-6,-4,5,-3,2,5,-6,2,6,-3,4,3], dtype = "int16")#candidate|4804|(288,)|const|int16
call_4803 = relay.TupleGetItem(func_3328_call(relay.reshape(const_4804.astype('int16'), [8, 6, 6]), relay.reshape(const_4804.astype('int16'), [8, 6, 6]), ), 1)
call_4805 = relay.TupleGetItem(func_3332_call(relay.reshape(const_4804.astype('int16'), [8, 6, 6]), relay.reshape(const_4804.astype('int16'), [8, 6, 6]), ), 1)
func_903_call = mod.get_global_var('func_903')
func_907_call = mutated_mod.get_global_var('func_907')
const_4810 = relay.const([1,-5,-8,3,2,6,4,4,4,-5,4,-6,-10,9,4,-9,-8,6,-3,-7,10,8,-7,-7,6,10,2,10,5,-7,-1,-5,-5,5,1,-4,7,-5,4,5,-6,9,3,9,-9,6,-5,1], dtype = "int16")#candidate|4810|(48,)|const|int16
const_4811 = relay.const([-2.201701,1.651608,-5.204938,-1.535469,-6.005616,-4.934376,-5.202338,2.368963,-4.901718,-3.533795,7.523675,-5.896028,1.755666,4.398447,8.050902,1.191281,7.340771,0.699351,-1.550982,0.754545,0.470740,0.070994,-3.820853,6.630786,8.657538,5.769608,0.354515,5.170903,-9.714638,4.667106,6.794173,-0.680116,-6.503340,-1.194339,7.209622,5.075924,5.018997,-5.806574,3.982836,-6.067656,5.315007,3.388543,-1.638905,-7.273563,8.076660,-3.543176,-8.642013,1.061989,-5.068869,5.933610,9.186665,-0.174538,5.713661,-9.298877,-7.835945,0.882190,6.556787,5.983249,3.463708,-4.803111,9.090934,8.007547,0.770639,-5.091696,-4.752745,8.396103,-6.463755,2.452289,-7.643488,-6.935546,-7.646872,5.734961,5.684159,1.499225,-0.836495,9.779460,-7.826991,0.637577,-2.523976,9.758242,-7.613983,-1.535280,-1.696068,-5.514147,-5.905496,-8.673178,4.178221,-9.328640,-9.766206,3.278193,9.301601,-4.247024,-8.458784,-9.685518,-2.736452,5.562575,-3.694265,6.701109,9.459256,-3.340114,8.681415,6.807687,-5.814911,7.684848,4.641386,2.638611,1.131624,4.077015,3.223345,-2.517658,6.781671,-4.410843,-0.038416,2.000266,-0.993832,1.723538,-3.970542,-4.390970,-9.895370,7.305252,-5.918090,-6.111601,-5.809914,7.240846,1.329317,3.516425,-3.046841,9.908267,-4.144765,-1.298226,-2.320736,-9.388822,-0.312586,9.780194,-5.067184,2.939627,9.532710,-1.403575,4.842076,5.098028,-6.705000,5.302671,3.798309,9.077652,5.894343,-1.621762,0.320058,-9.702005,9.433304,-4.003703,-1.364797,-2.575082,7.649752,-0.044476,1.169106,-2.778990,-8.250727,-7.375930,-0.814925,1.389278,2.830444,7.945934,-6.953976,6.720723,6.222579,8.977711,9.533749,1.869293,2.085056,0.419859,9.637097,-8.431027,0.716826,3.060517,-5.690334,-0.929861,-3.444052,-6.725423,8.378672,-6.631297,5.574639,1.165501,-8.662300,0.672984,-9.842333,-6.076996,-6.544957,9.260245,5.654910,1.157699,-6.787136,1.406237,8.994771,5.673914,0.926418,2.787115,-3.338103,8.127887,0.047908,-4.102649,9.540502,-5.366851,6.082056,-1.686362,-7.531532,-7.268842,9.142877,-5.298136,5.144846,0.717787,6.828599,4.759104,5.626518,-0.165582,1.645804,-2.462912,3.303792,8.816979,9.953643,2.141426,9.453170,-3.270294,-2.330455,-0.659044,-8.103477,-5.942823,-5.323809,6.169291,1.362286,9.039716,-6.571355,2.470798,-4.281670,-8.865438,-4.930977,7.633453,7.428281,-2.264335,-6.693916,4.755067,3.029589,4.742688,1.418513,0.495385,-7.413444,-7.432161,6.849059,2.609228,-0.650258,3.214366,6.117578,-6.972267,-3.565041,-3.403283,7.073620,9.716402,-1.181008,0.192781,-5.420483,-3.470047,3.153784,1.581020,-0.258979,-9.395777,4.730673,-4.479129,-1.465166,4.868507,0.389131,-3.884598,-3.954834,7.385647,-1.137430,-3.801909,-0.865708,9.268020,0.025092,-3.362728,1.096641,-1.088515,-6.084006,-5.724941,-1.637433,7.465192,6.777053,-1.479366,8.691704,-8.414406,-4.660935,-2.680486,3.969391,-2.441416,2.087710,5.211961,3.974668,5.527583,-4.860110,0.049218,6.259555,-1.780699,-5.085207,-7.824235,0.037573,4.103874,-3.328374,-4.900623,9.271895,-0.958948,7.553458,-6.444050,-3.199763,-3.947727,1.263085,4.126295,-5.427782,6.791290,-2.307714,-5.754396,5.226665,-8.946383,-5.153531,2.495561,2.556553,-5.253179,1.349846,-1.259582,-5.268451,-4.898639,-6.111064,-1.557252,-3.185128,4.722916,-1.001325,-0.656350,3.151818,8.650471,0.572485,3.580206,-4.634900,0.218855,-3.478538,5.553368,-9.909007,-0.163740,4.603220,1.944305,8.706608,4.083408,-4.063417,2.314008,-9.577717,7.176424,5.534337,-5.347391,-2.759945,-6.684263,5.937424,3.731692,6.036261,-3.512222,9.441237,-6.047763,-0.465379,-1.987527,1.028670,-1.227779,-7.455768,1.708001,6.053356,3.439870,0.846600,-8.566004,-1.368884,-2.682867,-3.546162,-7.523658,-4.069987,-5.748696,-4.425814,-5.467330,-3.564552,2.415020,-5.927465,-6.112128,2.466293,-6.758727,7.083800,8.524039,-4.016863,-0.274932,0.114978,-8.533189,7.417001,-4.537788,4.316049,-4.836547,-5.555689,-5.536793,-7.127899,-1.588075,4.996349,2.488607,6.975167,-9.388369,-7.025371,-5.898646,6.629681,-5.128557,7.339689,9.538256,1.518774,-3.785105,1.611240,-9.797749,-0.014944,9.596258,9.541595,-9.637835,-7.714967,6.697415,0.916019,-7.154155,-5.209114,-1.306068,0.574909,6.263501,1.119005,-1.895642,-6.585674,-3.819929,2.238001,-0.926104,-9.084077,-9.311163,5.733547,-9.285545,7.880319,-0.588330,4.172677,-6.601668,-5.431608,3.544233,7.430591,-5.780247,-3.483478,-8.863976,1.081167,8.277422,-7.599790,-7.220797,8.122156,-8.693251,0.657772,-5.147375,2.610509,3.582024,-4.995538,9.718211,8.988468,-4.277217,2.621335,4.426321,6.115654,-5.290527,-6.972176,-4.350369,0.198864,4.245152,8.474292,0.267540,-6.131625,-4.517655,1.441229,-5.532396,1.983556,0.623206,-4.287708,1.265042,1.805439,2.246425,-2.470667,2.515270,-2.536868,-5.189349,-4.786152,1.196649,1.748361,-6.722758,3.001288,8.636774,4.451894,9.030317,1.549538,2.530966,2.284439,0.361209,-0.813374,4.628466,7.439940,-9.217599,-8.913499,-5.915869,8.635697,-5.749189,7.237146,-1.789009,-4.920368,-1.751789,-9.899239,-1.754638,-6.530782,-8.120913,-6.150016,-9.541104,5.708762,-9.890224,-5.821971,9.198853,8.016343,-8.653619,7.875662,9.709575,8.840405,-9.276284,8.491038,9.754304,-3.092339,9.092936,2.122741,-0.588733,-5.101692,-2.939758,5.900379,0.919875,-0.320505,0.564412,-1.947654,9.209335,7.897216,9.597435,1.297930,-6.307074,-4.298807,-4.411045,1.283841,1.193723,0.982816,-2.042283,2.234474,1.523089,-6.923944,-2.793405,7.568126,-5.852913,3.568498,-5.795584,-8.367844,-5.161311,-1.644244,-7.709574,3.008325,3.265775,-9.693384,4.944939,0.601312,7.729804,2.446264,-8.095082,9.354680,1.167112,9.754500,8.971126,7.454216,-9.964924,9.956150,3.730403,-2.085021,7.152869,1.104273,7.807853,-5.756404,-0.644144,-9.418932,-5.625787,1.851482,-2.170433,4.286003,-8.111400,3.241993,-6.774625,3.729464,6.551825,3.571224,-7.602133,0.700673,1.524592,-8.621811,7.399087,7.966387,4.091147,-6.715212,2.275746,8.071613,-5.409696,-1.007317,5.209571,-7.650803,-1.995104,-4.605206,-3.794257,-7.635708,2.126983,0.259482,7.071818,-1.061442,0.239275,-6.155259,7.959426,-7.795038,-1.955961,-7.204362,7.973391,-7.552720,-1.711671,-6.597916,-7.163074,0.936610,-9.950204,-6.245152,5.547734,-5.978066,2.532762,3.528430,-8.613212,-8.018869,-9.108130,9.970832,-7.144815,7.680390,-5.903966,0.785904,-4.242912,-0.038548,-4.470718,-1.946328,2.185210,-2.682003,4.006887,9.187756,-2.840977,-4.688838,3.875659,-7.064034,9.172183,-1.855110,1.881439,-3.178783,-7.061949,-4.908005,-9.200514,-8.100525,4.257230,-9.674029,-9.449081,7.943090,-6.043114,-8.460524,0.560898,8.043609,-8.636053,-0.328585,5.796554,-7.832015,7.708872,-3.380223,4.425470,4.319754,-6.343193,-1.317020,-8.754897,3.531117,8.861540,-7.343185,-8.234654,-6.156204,5.303027,-1.411826,1.459930,8.459701,-6.612924,-6.864795,-4.191938,-8.208625,-1.330856,-1.311141,-8.330805,7.761313,6.923433,-8.151177,1.031924,-3.249705,3.366407,2.261349,3.898887,7.956796,5.431609,-0.400319,-8.785790,-9.114767,4.397302,3.250378,-1.788708,7.333504,-0.335985,4.229386,-1.806258,-4.282144,-4.842008,1.286658,-6.168844,2.168180,-0.128483,-5.940663,5.847819,3.167366,6.601370,-0.723213,2.031543,2.076177,-7.802664,0.917200,-7.013468,-1.658245,-2.499010,8.096899,7.317472,-0.379040,-1.285111,-0.177432,0.280979,-0.134710,-5.066193,-6.860677,-8.432690,9.449265,-0.391311,-8.327931,-7.323735,1.433070,-7.937906,-6.163580,-1.579853,3.167973,2.714744,-9.449133,-3.246796,6.061087,2.116955,-2.356393,9.413986,-4.850797,2.319754,-5.497107,-6.887538,-0.261614,-1.798597,-7.214722,5.296436,6.292803,0.269467,9.170544,-8.435339,-2.587736,-7.774860,-2.202481,-5.182427,7.021328,8.323665,8.954983,5.526522,-0.249142,-3.944981,-7.003276,-7.073478,-2.418321,5.575662,9.068242,-2.332465,-4.429686,5.004218,-0.848748,8.302921,6.303992,-3.128994,-5.979281,-5.618198,9.047496,0.642335,-8.453368,-2.728816,0.531705,-4.843443,5.576786,-5.276261,2.414863,-3.816174,1.149156,2.628926,-3.932208,-0.293918,0.079537,4.683795,0.413877,1.503036,6.624548,1.051577,9.701231,7.970879,-7.543839,-9.826356,3.617042,-7.230198,1.706612,4.996462,6.185291,-4.174631,-5.216049,0.566399,2.281244,1.321677,-7.524006,0.748313,-5.944601,9.466398,0.800411,-3.281592,-0.695610,2.908197,-9.131915,-5.728519,-4.904309,3.692943,-4.055014,1.341832,6.385935,-6.390404,2.740058,7.091450,6.004892,-3.449284,5.208123,1.111182,6.473850,2.940536,-9.190902,8.686879,-6.190609,9.493686,-0.253771,-9.349450,-9.333539,5.803396,6.425399,0.379054,3.373340,5.826280,4.857013,0.838092,0.914817,-1.765779,-4.104917,4.410686,-3.992343,0.944776,8.055763,-6.698652,4.518143,8.497457,5.756365,2.729606,-2.786042,3.956421,7.417893,4.513153,2.450824,-7.761226,9.858833,-1.979565,2.517310,-1.934937,-4.103587,-6.909425,7.442623,-3.600649,-7.308850,6.200580,-1.998551,-1.379347,5.187895,-9.094012,-6.586867,-4.705728,-4.080099,3.866109,5.796625,-8.943880,9.857997,2.687473,-5.851228,4.809643,1.334998,-2.205510,1.817399,8.485854,-2.997683,7.313622,7.730417,-2.069066,-0.773242,6.797773,-7.733320,2.195521,-2.061902,-4.545782,-5.830075,5.215071,-8.710823,4.660843,4.721247,6.936279,1.839474,-6.728955,-8.121154,-9.870386,-2.507302,-6.733081,-6.793144,-1.561763,-5.021589,9.584229,-3.749510,-2.742773,-7.867810,-4.723970,1.852599,7.699810,-8.130738,3.414272,8.966207,-1.974209,2.095839,-6.012040,-8.714785,-4.626861,0.724713,-3.705206,-9.624826,-3.662485,-4.448599,-6.890078,-5.201747,-7.701684,4.208118,-1.723355,-8.272570,2.510560,4.907488,4.808161,-8.114705,6.643584,9.799042,-7.343178,-2.552807,1.680145,1.047905,-9.277143,9.177270,2.220009,-1.097595,7.999198,-3.263227,-0.929089,-3.661305,8.939834,4.086196,-6.020939,-7.387573,6.971511,-2.983644,-9.534706,-2.497196,5.090298,0.108475,8.263635,-1.101898,-6.199279,2.891706,6.917610,-7.298426,-4.537253,7.458724,7.204293,5.141103,-7.505234,1.748814,-4.814824,-7.765458,6.406216,-6.219726,3.523904,-9.486912,5.589059,9.794994,9.217948,6.171305,4.419376,0.682042,9.338674,5.731583,-8.539335,-0.725145,3.795587,-8.869189,-2.214275,6.756308,-6.614896,-4.170906,2.007225,-7.166361,8.581812,-2.807823,-7.007008,2.251291,8.882675,1.957213,4.102792,-4.073055,-3.769492,-5.245392,9.820701,7.991739,8.649919,7.880959,9.782963,7.671102,5.932074,5.998484,7.206264,8.786575,-7.243806,-1.877370,-9.225929,-6.132666,-9.749218,-7.950561,-3.771469,8.183079,5.514254,-6.643616,-1.522867,1.664573,8.312459,2.614116,-8.895389,0.548265,2.890911,-5.121233,-4.554125,9.606989,5.571129,-6.100468,8.772088,4.985551,-3.366916,2.982846,-5.065757,8.178254,4.764415,-0.176737,2.743771,-3.827176,-6.832419,4.889576,4.492605,9.235264,-8.499698,-2.431089,6.908656,-7.005106,3.061160,-3.995864,-2.878012,-6.096858,-3.638979,4.788767,-5.532198,-9.721932,0.869192,-5.432984,-4.496233,3.497910,4.480330,-1.803047,-2.253506,1.564576,-4.965115,4.051060,7.831653,7.821932,-5.336243,4.475594,-4.026614,8.449636,5.935987,8.293217,4.225313,-1.926641,-1.643913,1.344484,1.511550,5.062025,-9.283007,3.538310,-2.636481,6.467267,2.760886,6.145692,9.387014,2.615909,-6.884710,-3.993877,-1.328477,4.645493,-7.576141,1.088486,1.459971,7.703202,1.846348,0.199024,5.799334,-4.619889,3.093409,1.694384,9.800828,-2.503399,4.876221,8.357144,7.307641,-5.229301,-4.682224,-7.271489,-3.938087,7.842857,-6.912709,5.592224,-5.322662,-8.771894,-6.289362,-5.207264,7.190398,5.260543,2.696534,-5.983748,0.765043,-2.131584,-6.584827,6.278247,5.457154,-5.253931,1.171587,5.531422,9.096824,-0.267303,7.148960,9.989701,3.147295,1.575076,-7.457263,4.652823,5.018244,0.259035,-4.512274,-1.594989,4.134047,6.259341,5.100861,-7.146783,4.809873,-6.582017,6.874650,5.094050,-5.471066,-9.383271,-7.277454,0.977415,7.670780,1.150042,1.195328,7.790118,-5.887326,-8.059742,-3.027106,-4.108362,6.349795,-3.905107,2.840614,8.933978,7.987066,-0.853584,5.010788,1.026973,-5.235025,4.241235,-0.688238,-6.297016,1.253605,-4.594544,-0.019117,6.212378,7.611664,-0.034442,1.395412,2.306392,1.994541,-3.873679,4.924074,-6.619749,-5.033016,8.950893,-0.504352,0.118439,-5.867348,6.863884,6.535235,-4.133377,6.151611,0.768982,-3.887978,1.189975,-4.858344,5.254226,8.104805,7.271417,9.889252,-7.615586,-7.698709,8.261789,-2.944340,3.785161,-4.746600,-2.357349,7.618213,-0.645163,-5.955272,7.173631,-6.372694,-4.036022,-7.630516,2.373020,2.767104,-4.029920,-8.646402,-3.943148,-3.499757,-9.747391,-0.591925,-4.202336,-7.152998,0.874676,-0.341936,7.924942,9.055618,-6.867786,9.936061,1.345888,-8.706997,-7.500384,-5.675998,0.481858,6.415762,9.575251,-1.626847,5.002478,-8.083457,-1.717604,6.028341,2.752410,6.833488,0.694105,-3.268217,0.785965,-0.660077,1.556934,4.588847,2.818143,-7.506768,-9.235229,0.643602,4.322482,-8.614612,-6.075605,9.575767,6.387132,-6.629905,1.978857,3.198533,5.785497,-5.833346,-3.887975,5.127343,-7.787662,-2.802089,-5.799790,-7.600914,-7.499510,3.519225,4.237084,-7.864416,-5.192782,9.427967,6.320597,-1.014429,-2.967403,2.332910,-5.925955,-1.724755,-0.300701,8.187177,-6.004043,-5.944225,0.988597,-3.716759,-9.881169,9.439402,9.130953,-4.797260,3.549426,6.956241,-7.267702,3.781335,2.195014,8.958502,-5.038406,-4.893091,7.962918,6.078696,5.595236,7.813598,7.730246,-2.641484,8.486380,5.763869,8.803718,-0.859582,-9.871840,6.758326,6.731777,9.738254,1.627964,5.920528,8.206463,0.829059,-5.647122,-8.478980,0.145192,-5.685955,-5.662047,-0.933954,-9.999089,6.974979,-1.394187,-8.664218,4.016958,5.399218,3.565273,7.494371,-2.886866,7.588259,8.881187,-4.685699,-6.736794,4.001093,-8.752088,4.592611,-1.922077,9.195208,9.689638,3.151483,-1.270654,8.476885,9.520568,-7.303262,-9.272338,-1.946688,8.648604,-5.100242,2.752427,-9.760798,0.199123,-3.342096,-1.068425,-5.144862,0.436469,7.520638,8.419028,6.790735,5.030757,-5.826263,-3.738692,-8.616170,3.756617,6.930315,-9.388607,-2.964330,9.599454,-3.484743,6.099891,0.994314,-6.417606,-2.287439,-1.573559,-9.638065,3.700701,9.864501,2.652330,3.773971,-9.070064,9.288362,3.891042,8.318772,-4.462672,-3.210817,-7.108167,-5.008459,-6.751791,-2.274037,-6.619445,4.319150,9.565726,4.232939,-0.322311,4.052547,-4.101226,2.833794,6.068696,-0.019547,-3.036341,5.067480,1.516693,5.122710,-7.554516,-5.135319,-3.345156,-4.003585,-3.161875,-2.740929,-6.166786,1.613689,-6.704404,-0.124619,5.625660,8.021126,-4.094420,3.049126,-7.470398,8.255593,-8.070855,-7.539719,3.647947,2.538945,-4.348332,-5.395575,8.077521,3.934374,0.769307,5.460415,4.103127,-9.922257,7.847684,9.146738,6.868570,-6.721951,-4.247722,-4.378428,6.167797,0.941500,-2.105339,1.843596,3.698051,9.015207,-2.231471,-7.679520,-0.086604,5.230535,-8.810198,7.410162,-1.876607,2.836118,-8.847957,-8.974843,1.471830,-2.709285,-4.498098,-1.260374,-5.920821,-8.035442,-5.999535,-7.693069,1.798010,0.968390,-1.310925,6.963568,-2.954412,0.572882,8.222708,9.947805,5.324993,-2.040329,8.557325,-6.242332,-7.600783,-3.286421,6.239870,2.027981,4.700486,-5.478528,-5.462624,-8.895548,-3.728877,4.768549,2.524264,5.422892,-4.979239,-8.015609,-7.788550,-3.222527,5.385247,7.419150,1.108780,-3.484026,2.074331,0.455210,-4.853693,9.114830,5.464639,-0.365281,8.125619,-7.630726,7.730069,1.747662,5.533831,6.104185,-3.332038,8.836086,1.522424,-0.829991,-5.608975,-7.264840,5.290621,1.335390,8.293805,-5.185785,1.980418,-5.793861,4.871154,-6.848930,9.474445,-1.544446,7.519805,-3.607800,1.518971,0.912359,-8.375953,-8.256832,8.484825,-3.117198,-5.136005,0.545681,5.157877,-6.586705,7.850788,4.357763,-1.251867,8.501949,9.296372,2.906868,-1.724658,-4.871594,-4.388401,9.760126,2.153746,-2.113603,-2.004229,1.447770,-5.260104,-7.197416,2.689758,-5.983208,1.015623,8.417638,6.129670,5.557658,1.498557,-4.870035,0.172145,-0.013723,-2.656665,-4.887748,-8.547070,-9.947392,3.950393,7.007471,9.423156,8.797329,5.197527,2.906224,5.425576,-4.397842,9.983746,-2.098621,-9.592672,4.284397,-1.402494,2.762640,4.073687,6.423609,1.363955,7.488174,-3.593269,2.033798,8.509733,1.290524,-6.756221,-2.274146,-4.542435,-0.263576,1.769477,4.544285,4.567704,-0.356144,2.669700,4.454741,-0.712041,5.212102,9.679758,-9.939896,6.599792,6.913331,-9.028101,5.545351,2.736424,9.960315,0.092738,-4.554389,-4.233088,-5.691392,-6.187339,-6.968065,-3.433951,5.715687,-4.989241,3.413812,4.220827,7.130959,-7.484413,2.473951,-3.277113,-0.954580,7.472420,-3.615601,7.115141,6.996271,6.946116,4.402090,1.610599,7.779083,-7.940993,-0.937849,-8.757500,3.555165,-3.437725,-8.761697,-4.335626,3.460766,6.729105,0.640298,-9.687928,-8.939937,-9.564332,2.679418,-8.770443,8.405291,7.800665,6.290816,-5.816063,-5.554509,2.350310,1.627717,2.198233,8.644225,9.999470,-1.964732,-7.738866,9.413256,-4.685348,-9.445444,2.074055,6.336767,5.331258,-7.388425,-3.002077,8.204825,8.754147,1.562802,5.349942,7.073345,8.898901,-2.742226,-7.655253,-5.031695,-5.942746,-1.739194,-5.556776,1.977521,-4.876338,2.940072,-3.772761,-8.074377,-0.829573,0.863152,-5.274628,-4.714512,-8.873840,6.665733,-3.095831,5.223283,7.643566,-4.401955,1.412639,2.597361,-3.760576,-8.270685,1.017062,-4.819541,-2.003614,8.604939,9.718733,-5.269698,-4.238513,-8.296325,0.180771,-7.013398,9.318233,3.868367,-8.592026,-8.188507,1.009287,8.817713,3.480111,-3.963178], dtype = "float64")#candidate|4811|(1760,)|const|float64
call_4809 = relay.TupleGetItem(func_903_call(relay.reshape(const_4810.astype('int16'), [2, 12, 2]), relay.reshape(const_4810.astype('int16'), [2, 12, 2]), relay.reshape(const_4811.astype('float64'), [1760,]), ), 1)
call_4812 = relay.TupleGetItem(func_907_call(relay.reshape(const_4810.astype('int16'), [2, 12, 2]), relay.reshape(const_4810.astype('int16'), [2, 12, 2]), relay.reshape(const_4811.astype('float64'), [1760,]), ), 1)
output = relay.Tuple([uop_4795,call_4797,const_4798,const_4799,const_4800,call_4803,const_4804,call_4809,const_4810,const_4811,])
output2 = relay.Tuple([uop_4795,call_4801,const_4798,const_4799,const_4800,call_4805,const_4804,call_4812,const_4810,const_4811,])
func_4825 = relay.Function([var_4794,], output)
mod['func_4825'] = func_4825
mod = relay.transform.InferType()(mod)
var_4826 = relay.var("var_4826", dtype = "float64", shape = (8, 1, 14))#candidate|4826|(8, 1, 14)|var|float64
output = func_4825(var_4826)
func_4827 = relay.Function([var_4826], output)
mutated_mod['func_4827'] = func_4827
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4912 = relay.var("var_4912", dtype = "uint8", shape = ())#candidate|4912|()|var|uint8
var_4913 = relay.var("var_4913", dtype = "uint8", shape = (1, 1, 16))#candidate|4913|(1, 1, 16)|var|uint8
bop_4914 = relay.left_shift(var_4912.astype('uint8'), var_4913.astype('uint8')) # shape=(1, 1, 16)
func_2487_call = mod.get_global_var('func_2487')
func_2491_call = mutated_mod.get_global_var('func_2491')
var_4936 = relay.var("var_4936", dtype = "uint16", shape = (150,))#candidate|4936|(150,)|var|uint16
call_4935 = relay.TupleGetItem(func_2487_call(relay.reshape(var_4936.astype('uint16'), [5, 10, 3]), relay.reshape(var_4936.astype('uint16'), [5, 10, 3]), ), 0)
call_4937 = relay.TupleGetItem(func_2491_call(relay.reshape(var_4936.astype('uint16'), [5, 10, 3]), relay.reshape(var_4936.astype('uint16'), [5, 10, 3]), ), 0)
func_3821_call = mod.get_global_var('func_3821')
func_3823_call = mutated_mod.get_global_var('func_3823')
var_4943 = relay.var("var_4943", dtype = "float32", shape = (360,))#candidate|4943|(360,)|var|float32
call_4942 = relay.TupleGetItem(func_3821_call(relay.reshape(var_4943.astype('float32'), [10, 12, 3])), 0)
call_4944 = relay.TupleGetItem(func_3823_call(relay.reshape(var_4943.astype('float32'), [10, 12, 3])), 0)
func_3328_call = mod.get_global_var('func_3328')
func_3332_call = mutated_mod.get_global_var('func_3332')
var_4946 = relay.var("var_4946", dtype = "int16", shape = (288,))#candidate|4946|(288,)|var|int16
call_4945 = relay.TupleGetItem(func_3328_call(relay.reshape(var_4946.astype('int16'), [8, 6, 6]), relay.reshape(var_4946.astype('int16'), [8, 6, 6]), ), 0)
call_4947 = relay.TupleGetItem(func_3332_call(relay.reshape(var_4946.astype('int16'), [8, 6, 6]), relay.reshape(var_4946.astype('int16'), [8, 6, 6]), ), 0)
output = relay.Tuple([bop_4914,call_4935,var_4936,call_4942,var_4943,call_4945,var_4946,])
output2 = relay.Tuple([bop_4914,call_4937,var_4936,call_4944,var_4943,call_4947,var_4946,])
func_4955 = relay.Function([var_4912,var_4913,var_4936,var_4943,var_4946,], output)
mod['func_4955'] = func_4955
mod = relay.transform.InferType()(mod)
var_4956 = relay.var("var_4956", dtype = "uint8", shape = ())#candidate|4956|()|var|uint8
var_4957 = relay.var("var_4957", dtype = "uint8", shape = (1, 1, 16))#candidate|4957|(1, 1, 16)|var|uint8
var_4958 = relay.var("var_4958", dtype = "uint16", shape = (150,))#candidate|4958|(150,)|var|uint16
var_4959 = relay.var("var_4959", dtype = "float32", shape = (360,))#candidate|4959|(360,)|var|float32
var_4960 = relay.var("var_4960", dtype = "int16", shape = (288,))#candidate|4960|(288,)|var|int16
output = func_4955(var_4956,var_4957,var_4958,var_4959,var_4960,)
func_4961 = relay.Function([var_4956,var_4957,var_4958,var_4959,var_4960,], output)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4963 = relay.var("var_4963", dtype = "float32", shape = (5, 15, 7))#candidate|4963|(5, 15, 7)|var|float32
uop_4964 = relay.sqrt(var_4963.astype('float32')) # shape=(5, 15, 7)
func_3728_call = mod.get_global_var('func_3728')
func_3730_call = mutated_mod.get_global_var('func_3730')
var_4968 = relay.var("var_4968", dtype = "float32", shape = (192,))#candidate|4968|(192,)|var|float32
call_4967 = relay.TupleGetItem(func_3728_call(relay.reshape(var_4968.astype('float32'), [16, 3, 4])), 2)
call_4969 = relay.TupleGetItem(func_3730_call(relay.reshape(var_4968.astype('float32'), [16, 3, 4])), 2)
output = relay.Tuple([uop_4964,call_4967,var_4968,])
output2 = relay.Tuple([uop_4964,call_4969,var_4968,])
func_4974 = relay.Function([var_4963,var_4968,], output)
mod['func_4974'] = func_4974
mod = relay.transform.InferType()(mod)
var_4975 = relay.var("var_4975", dtype = "float32", shape = (5, 15, 7))#candidate|4975|(5, 15, 7)|var|float32
var_4976 = relay.var("var_4976", dtype = "float32", shape = (192,))#candidate|4976|(192,)|var|float32
output = func_4974(var_4975,var_4976,)
func_4977 = relay.Function([var_4975,var_4976,], output)
mutated_mod['func_4977'] = func_4977
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5042 = relay.var("var_5042", dtype = "float64", shape = (1, 5, 1))#candidate|5042|(1, 5, 1)|var|float64
uop_5043 = relay.sinh(var_5042.astype('float64')) # shape=(1, 5, 1)
output = relay.Tuple([uop_5043,])
output2 = relay.Tuple([uop_5043,])
func_5045 = relay.Function([var_5042,], output)
mod['func_5045'] = func_5045
mod = relay.transform.InferType()(mod)
var_5046 = relay.var("var_5046", dtype = "float64", shape = (1, 5, 1))#candidate|5046|(1, 5, 1)|var|float64
output = func_5045(var_5046)
func_5047 = relay.Function([var_5046], output)
mutated_mod['func_5047'] = func_5047
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5196 = relay.var("var_5196", dtype = "float64", shape = (6, 1, 7))#candidate|5196|(6, 1, 7)|var|float64
uop_5197 = relay.atan(var_5196.astype('float64')) # shape=(6, 1, 7)
output = relay.Tuple([uop_5197,])
output2 = relay.Tuple([uop_5197,])
func_5202 = relay.Function([var_5196,], output)
mod['func_5202'] = func_5202
mod = relay.transform.InferType()(mod)
var_5203 = relay.var("var_5203", dtype = "float64", shape = (6, 1, 7))#candidate|5203|(6, 1, 7)|var|float64
output = func_5202(var_5203)
func_5204 = relay.Function([var_5203], output)
mutated_mod['func_5204'] = func_5204
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5534 = relay.const([[[4.232844],[-4.642291],[-7.242168],[-7.560454],[-7.103988],[-8.182627],[1.846179],[-8.399252],[1.101102],[5.733909],[4.399915]],[[-4.352342],[8.268878],[-9.599214],[1.134601],[-0.139492],[2.876018],[-3.806727],[-5.960409],[-6.069580],[1.718961],[5.853397]],[[6.919749],[7.301760],[7.890465],[5.865639],[2.786883],[5.712361],[3.249898],[2.539553],[9.591738],[-8.337470],[-4.364205]],[[7.401970],[5.928964],[-3.464934],[-2.514174],[2.451309],[2.432538],[1.431386],[3.502769],[-1.967852],[-4.992185],[0.194769]],[[9.868556],[-2.968660],[-4.730231],[-3.080117],[0.113656],[4.827270],[4.300602],[7.985631],[-0.842367],[6.124503],[-3.595217]],[[-3.879776],[-2.049257],[-1.959043],[-3.202184],[-3.899400],[-9.324582],[0.889798],[1.531220],[-2.604407],[9.846162],[2.200245]],[[4.799014],[-7.466255],[9.498276],[7.315455],[-3.879873],[5.456593],[-2.597598],[3.201621],[8.227633],[8.125218],[-2.308009]],[[2.677174],[-3.641365],[-8.044100],[3.378087],[-0.673339],[3.896622],[-0.774770],[7.623258],[-4.860442],[8.305499],[-2.646781]],[[4.287502],[3.048769],[7.197371],[-9.170382],[1.241793],[-3.320808],[5.615145],[6.667891],[-7.479563],[5.151129],[-6.498708]],[[0.925515],[-5.232690],[-4.878235],[1.606159],[2.145615],[-9.437442],[-8.424459],[9.278061],[-1.802803],[-1.904335],[-1.983544]],[[9.102979],[-1.467871],[-3.299607],[4.988487],[-5.052137],[-4.925418],[-8.986124],[-4.751697],[7.765930],[-3.879434],[-0.868617]],[[5.003809],[-2.276369],[-9.898004],[-3.921850],[-6.243722],[-3.034394],[-8.421562],[7.808443],[-5.746595],[-4.213383],[-6.039969]],[[0.215292],[-7.068976],[-0.377209],[-2.227299],[8.117726],[4.597685],[1.196830],[-2.189720],[-6.412546],[-5.176286],[-4.176657]]], dtype = "float64")#candidate|5534|(13, 11, 1)|const|float64
var_5535 = relay.var("var_5535", dtype = "float64", shape = (13, 11, 7))#candidate|5535|(13, 11, 7)|var|float64
bop_5536 = relay.power(const_5534.astype('float64'), var_5535.astype('float64')) # shape=(13, 11, 7)
output = relay.Tuple([bop_5536,])
output2 = relay.Tuple([bop_5536,])
func_5544 = relay.Function([var_5535,], output)
mod['func_5544'] = func_5544
mod = relay.transform.InferType()(mod)
var_5545 = relay.var("var_5545", dtype = "float64", shape = (13, 11, 7))#candidate|5545|(13, 11, 7)|var|float64
output = func_5544(var_5545)
func_5546 = relay.Function([var_5545], output)
mutated_mod['func_5546'] = func_5546
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5694 = relay.const([[[-7,-8,-5]],[[3,1,-6]],[[-10,4,-8]],[[6,7,-5]],[[4,-3,9]],[[6,2,8]],[[6,7,-3]],[[-4,10,7]],[[-9,5,-6]]], dtype = "int32")#candidate|5694|(9, 1, 3)|const|int32
var_5695 = relay.var("var_5695", dtype = "int32", shape = (9, 15, 3))#candidate|5695|(9, 15, 3)|var|int32
bop_5696 = relay.not_equal(const_5694.astype('bool'), var_5695.astype('bool')) # shape=(9, 15, 3)
output = relay.Tuple([bop_5696,])
output2 = relay.Tuple([bop_5696,])
func_5721 = relay.Function([var_5695,], output)
mod['func_5721'] = func_5721
mod = relay.transform.InferType()(mod)
mutated_mod['func_5721'] = func_5721
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5722 = relay.var("var_5722", dtype = "int32", shape = (9, 15, 3))#candidate|5722|(9, 15, 3)|var|int32
func_5721_call = mutated_mod.get_global_var('func_5721')
call_5723 = func_5721_call(var_5722)
output = call_5723
func_5724 = relay.Function([var_5722], output)
mutated_mod['func_5724'] = func_5724
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5746 = relay.const([[[1.333984,9.953100,-9.650428,-6.975358,5.152998,0.020877,7.903633,8.692129,6.886301,8.042452,-7.546826],[-1.530242,7.205274,-3.384217,0.204839,-3.321318,-5.780701,9.185840,0.897994,2.034518,-6.360700,7.102285],[4.256086,9.724799,1.310056,-1.230861,-7.511929,-4.207397,8.995540,-8.232947,-9.552696,-2.288946,-1.394435],[2.222196,2.455870,6.601483,-1.910690,3.364627,7.035575,-1.173777,9.804756,9.529360,7.885470,-0.990960],[-6.254299,7.340245,7.135090,2.575613,6.231940,9.676904,-0.889743,-2.463069,6.177572,-2.927504,-2.794168],[-6.720035,-6.466809,-8.178424,7.776239,-7.921666,4.182319,-5.790399,0.695269,9.588020,-7.299073,2.554963],[4.223450,4.424732,7.465780,6.237160,-0.584184,-3.047457,7.242533,-7.712425,1.001120,-3.147069,4.419475],[1.591717,6.842065,1.104509,8.725111,-4.756336,2.322344,-0.499726,8.945735,-6.838495,9.261251,-8.658086]],[[4.438991,7.410431,-5.951571,-1.481460,-7.412462,-5.792011,-6.219643,0.477520,7.005642,-5.776130,-4.002059],[5.111348,-6.243682,4.332802,-3.352577,9.704105,3.817065,-3.078360,-2.190592,5.346488,-8.367033,-9.503124],[1.583249,7.872375,4.851445,2.448476,-2.321777,-3.129875,5.877241,-4.751901,9.264975,8.210823,-1.061162],[-1.833727,-9.037602,4.461679,-2.496484,5.410807,8.135140,-4.835027,-6.741300,-0.711482,-2.395210,-5.289206],[8.885449,-0.984887,-7.811977,1.641577,2.013655,1.863437,9.501636,8.666743,1.921632,3.661366,2.047236],[8.968101,-3.767342,-1.453231,-0.065899,-3.930977,2.875123,3.929841,-2.492346,-5.792818,-4.579832,-9.284311],[-5.762941,2.987895,-9.785814,-0.121164,-1.407127,-0.954176,-6.108122,-5.555170,8.039567,-8.369479,8.970981],[-1.287363,-5.499985,2.113104,-0.727688,-2.412821,6.941125,-1.098103,-5.531517,6.752343,3.525845,6.343174]],[[-3.976068,-0.145624,-2.883182,-7.544493,-0.646888,-8.312093,1.232926,-4.326261,1.287034,-4.943052,-7.050219],[-0.326815,-9.003330,-9.889122,7.619850,5.710404,0.223250,1.427088,-8.263351,5.157283,-6.897936,8.850321],[3.568639,-5.408094,-4.355311,-9.113004,9.501195,3.296979,-4.673764,9.283596,-1.104056,-7.306443,1.966990],[7.563565,5.177832,-2.657153,-7.620874,-8.133055,8.254584,-1.536301,2.559846,9.323565,-9.945704,-6.617890],[-1.708590,-0.801546,-8.860511,-5.349925,7.502203,9.614565,-9.363685,-1.128990,0.544252,-0.931851,1.220558],[-8.905926,2.005082,-5.159274,4.460501,1.132671,-8.953939,-6.275270,-1.610235,-8.207882,-7.288415,-6.519773],[-4.274612,-4.037577,6.612487,-8.638192,9.571822,-0.993010,-3.826213,-1.848820,9.432912,0.652747,-7.066682],[6.583487,-6.443031,-7.393044,5.532537,3.850859,8.645443,-2.770593,9.729769,-8.829397,8.950454,5.095464]],[[2.808838,8.051797,0.384661,-1.278459,-4.893884,-6.050061,-3.785708,-5.688124,-1.864060,8.669624,7.837800],[-6.573253,-6.751861,4.863785,8.602099,-5.323361,2.819009,-7.217114,-6.688365,-5.370076,-3.687491,-7.581089],[8.869632,-6.712228,-2.428237,9.852492,7.176709,-1.880133,-7.843904,-0.419288,7.725590,-3.595146,-3.606024],[5.065255,-4.809886,-0.546708,8.635299,8.574746,4.191459,-2.152154,0.524024,4.902122,7.809652,-4.542569],[3.401143,-4.393167,4.026856,7.837886,0.445335,0.361303,-9.327130,-5.499782,-4.624709,-1.380299,8.181255],[9.292433,2.134101,-8.289975,0.246562,-0.994299,9.284221,9.506356,-0.907283,-8.595556,5.297180,9.967575],[7.178840,8.880636,5.145991,9.325816,-1.453386,3.890802,1.184881,9.222090,-0.312018,-2.833517,-9.261513],[2.594930,-5.023987,-4.510644,8.324404,-9.121146,9.360964,-3.986195,5.790624,6.876424,-5.870151,5.750703]],[[-9.415912,-4.755097,0.534008,-9.364678,-8.127165,-1.636285,-7.138918,7.394297,-8.127967,-0.326616,7.960200],[-5.418784,6.527496,5.773776,-1.932028,0.768128,5.729778,7.078702,-3.147309,-4.463119,4.335234,-2.987243],[3.336597,3.053212,1.318557,9.613331,-2.585110,8.707760,7.278301,-1.102724,-6.507871,6.294782,4.064149],[-0.683561,-9.810288,0.833474,2.062162,7.878248,3.104670,-7.428123,4.416847,7.721539,7.546859,9.640540],[6.699028,-5.193855,1.881146,2.710805,-3.569461,7.303251,-8.669252,7.060880,-0.727149,-2.857048,4.591954],[-7.959610,-2.823310,5.588742,-1.436388,3.727807,-2.414434,9.111882,2.763617,-6.133808,-0.638144,-3.449960],[-6.439263,-9.266441,3.544833,-3.267664,2.741256,9.720039,7.417775,6.118450,2.285913,9.416894,-2.635838],[8.397388,-3.950222,-5.324733,9.617421,6.004193,-3.473906,-4.118700,9.620544,-6.923504,3.389712,-5.156258]],[[-1.884026,3.591994,-6.442948,5.197843,6.587189,-0.095544,0.201052,6.168376,-3.645369,-1.166852,-4.516316],[-9.973503,-4.739388,7.978016,-1.247210,-5.516513,8.813813,-2.922572,-4.239761,2.927087,-9.204482,3.556676],[-2.357078,8.932544,-2.203640,9.372440,-2.080802,-6.638922,-8.299148,2.104428,7.397092,-4.002672,6.590937],[5.587036,-2.341417,3.498446,-3.893417,-2.386385,5.628700,1.563496,-4.536772,4.660877,-4.438177,2.551021],[3.785250,6.662281,-2.777253,5.889328,-0.757946,7.163490,0.477747,-4.627753,-2.742168,-1.915548,-2.627455],[2.225080,-1.230493,0.908535,-5.852666,-5.756682,3.325899,-5.183350,2.687229,8.391683,-9.134907,-4.023342],[-2.613175,-5.508232,-7.360407,-4.212598,-1.509067,7.021545,-4.379097,-4.399585,7.451515,-8.914288,-3.984031],[-9.864312,3.328225,-1.493294,-7.928749,6.141623,2.485838,8.222901,5.666061,-2.607748,8.486016,-6.736868]],[[-0.612039,-1.903250,2.522445,3.739666,-6.770666,0.515713,5.631184,0.612091,9.993759,-4.218417,-5.041449],[-2.208808,-5.761822,-8.909667,-8.472070,8.762179,6.095534,-3.275181,3.815684,-9.073368,9.298217,9.455399],[0.964148,-6.986349,6.445645,3.207982,8.113875,0.880171,-4.219669,7.042265,3.026260,-1.392929,3.345067],[2.001063,-2.039062,-0.351733,-9.658735,-5.701735,-2.814238,-6.987005,-8.223012,-1.427138,3.035376,0.378351],[9.751364,-4.920611,0.110566,2.781625,6.866704,7.398561,-8.241803,5.318650,3.728066,9.332572,-8.130922],[-0.501990,4.185028,-2.377134,-6.018722,1.989391,2.459064,-6.871181,-4.396567,5.205827,1.235614,7.282440],[-7.915332,-6.039194,-0.756306,6.568882,7.515814,7.391086,-7.335170,8.615991,6.852484,-0.847631,-9.899418],[-5.912651,-1.753809,-8.439403,-6.477962,-7.533002,-3.390133,4.830305,-1.196966,7.068342,-5.648508,-1.456902]],[[4.947683,1.128100,-3.222969,8.061149,4.380260,4.957870,3.778501,2.045845,1.679295,-5.585529,-7.309145],[1.610492,-7.950109,-6.572676,8.513051,-0.893846,-2.584023,-5.965081,8.305803,4.526456,5.951917,2.144429],[-1.860813,-5.054112,-0.050296,6.333896,-9.465109,1.714630,4.347365,4.698714,-7.165604,4.832272,-5.798899],[-4.558320,3.786720,-2.217251,-2.362266,2.885824,-1.166228,9.189355,-0.033092,8.159457,8.531271,-4.647202],[-1.499782,5.220604,5.279908,4.920342,-9.856888,3.598053,8.770349,-6.759885,7.750102,-9.836625,-0.633994],[-7.305885,-8.016610,5.820982,-6.209119,-0.174891,-2.102597,-0.176802,6.706022,6.045493,3.497417,4.961800],[-7.475578,-6.880042,-3.830302,4.422004,-2.631366,8.028913,7.954199,-6.041192,-7.539139,-5.454230,5.274378],[-6.117631,-0.078235,-5.517696,4.270148,-3.813883,-3.571826,6.524510,0.296577,2.051971,6.274284,-2.378784]],[[8.742665,-6.276308,9.756401,-9.972436,3.259414,6.176595,-1.231256,7.273728,-1.523148,4.417054,5.285598],[4.557833,7.249326,-2.498046,5.317714,8.285059,-5.149903,3.677966,-6.953499,-1.358796,-4.775299,3.286908],[7.524594,-9.978174,-1.465362,-3.990097,4.782891,-5.597738,-4.405140,8.314869,1.135320,5.798977,-3.993377],[-5.322509,-3.255202,6.549929,-3.315585,-4.479690,0.654407,1.544609,-6.308630,3.945314,1.553447,7.332185],[3.368149,-8.138021,1.409258,-0.538109,-7.749964,8.737032,9.250781,8.898613,2.057250,5.227983,0.953505],[6.715410,1.085035,3.876032,-1.826740,-1.486461,1.760048,0.856327,-1.238781,-1.819354,-7.791997,-4.616692],[-8.890938,4.255839,5.289784,9.107234,-3.730482,-1.561382,4.685611,-7.997946,-6.292932,7.927104,2.065747],[0.469999,-1.360131,-9.874352,4.002562,-5.640212,7.552662,4.862518,6.609013,3.171871,1.216552,4.409837]],[[7.518430,6.622912,-6.668284,3.053089,2.963130,-4.555644,-6.015580,-7.929190,1.519998,-5.905632,-8.961117],[7.048166,-5.721165,0.636945,-6.574152,-2.802181,8.296480,-4.266845,2.538888,2.947839,-2.655305,-3.665582],[5.607235,-3.284695,-0.702471,5.292404,-9.862036,-4.880943,8.341227,2.488609,-9.528259,2.851737,8.230494],[3.663330,8.273734,6.608396,-8.816979,-2.040599,-2.071218,-5.833880,4.263828,7.365540,-6.730022,-0.635279],[-3.045501,-7.409306,-3.989531,-0.758753,8.593829,-1.865286,-2.469633,-9.012582,6.456557,-2.912339,4.843011],[-8.316861,-2.970103,-1.556656,1.201421,-7.982789,-5.875099,-4.970764,-0.709888,-3.826332,7.897676,-8.469315],[-2.710074,-7.804821,-3.340912,4.873592,-1.660199,-2.598656,-7.970956,4.350024,-3.690502,1.649121,-0.300166],[4.579507,-7.045384,-6.886286,-2.776557,1.385491,5.386366,-1.270169,2.642146,7.495739,-8.509699,-4.497662]],[[0.928944,-6.375178,-2.408349,-1.321047,-3.131745,3.019618,-9.614133,-4.109813,7.771505,6.010871,0.510593],[-8.761910,-9.094418,-8.163028,2.303616,9.544730,7.725209,-1.098427,7.034415,-6.673412,-2.879002,-6.713787],[-3.103103,5.132784,-3.305488,-5.446594,9.568094,-8.782207,7.847357,-5.833964,-1.040478,5.834737,3.368078],[2.820331,-4.981093,-9.728410,5.920376,5.494810,8.962296,2.603269,-2.184315,-2.714282,-8.349059,6.272016],[7.238584,0.623460,2.117281,7.159570,-3.451973,3.568757,0.008079,-3.562234,-8.329789,-8.846118,-3.846985],[1.965525,8.155511,-8.430970,9.584342,3.530035,0.422054,-8.118974,2.883987,-6.059592,-8.558934,3.599685],[2.888501,-1.934644,5.951097,-4.093616,2.693527,-9.415907,4.556641,-7.108229,-7.686517,6.132440,-0.040586],[-8.370849,-1.760753,-9.356878,-5.440365,-1.252235,1.958405,6.119368,9.584833,-5.508844,-9.171666,2.061780]],[[-3.258287,-3.398376,-9.835521,-6.894227,3.510414,-8.106977,8.308296,-3.668167,-3.433712,-2.433289,9.821267],[7.670842,1.344279,9.138164,-4.573928,2.561464,6.288988,-1.960170,4.856656,-2.260008,6.616776,-8.902803],[4.497947,3.469678,2.865796,5.247373,1.468523,7.519897,9.851228,-2.008449,-3.780366,-7.368966,5.833074],[0.979881,2.152427,5.388701,-4.058367,-3.350466,-8.479101,-4.195812,4.109883,7.798596,-5.907743,0.868154],[9.499787,6.221300,5.539083,0.030801,-9.609338,3.181481,7.791919,4.441719,4.150196,0.389050,4.813356],[7.156416,-6.939856,4.223453,-5.747744,-2.745978,1.955385,4.044883,7.179966,0.050179,6.555375,3.331887],[-9.470970,-1.534456,-8.567622,0.940722,6.971882,-9.842310,9.730868,-1.835894,-3.877432,-8.007524,7.812530],[-9.156856,-2.365299,-0.419544,9.097491,-9.407091,-2.513185,8.738940,8.246883,-1.851910,2.588098,-3.206005]],[[2.944425,-3.643657,2.292140,2.881854,-5.118397,3.922330,3.748037,-6.015173,4.027278,-8.523265,-9.453688],[7.915717,2.815185,-0.408770,-4.027947,2.195062,-8.812158,-2.744853,-4.232383,-7.448920,6.893279,-2.018600],[6.432590,1.235573,5.710060,9.310418,3.434415,8.813299,-1.655034,-0.103284,-2.066187,-0.030782,3.570036],[-3.450931,-6.747294,4.252325,-1.014019,2.488213,-3.843524,2.600850,-1.535522,1.546650,9.725437,-2.610687],[2.792796,-9.351894,1.454280,-5.940651,3.830762,-2.378664,4.522674,-5.497257,9.286731,6.909931,-8.193550],[-2.960166,1.403022,0.357691,-4.671582,5.895997,-9.099307,-6.409780,-0.005688,-2.255055,7.171068,-8.849302],[-1.817867,3.290485,-5.781075,-9.203046,2.985738,5.268040,-3.407900,9.045409,0.692024,-6.646803,-8.883000],[2.896275,0.308492,3.973025,-9.842578,2.779143,-8.049933,7.065109,-0.294397,9.286933,-2.347155,-2.554091]],[[1.671764,6.590193,-5.530934,-9.045275,-2.177047,-6.966011,-3.970879,7.495955,1.613150,7.213506,9.977330],[-2.759016,-7.633654,7.234553,-2.477061,-2.993321,1.815909,-3.087174,7.584460,-0.982975,-8.650608,-7.487916],[-0.540588,-5.854745,-0.584002,5.113330,-0.672197,5.251740,-2.228962,4.818997,4.710727,-0.493004,0.629707],[-2.045343,-6.929793,9.176015,2.651822,3.503969,2.440158,8.144060,7.386055,0.374341,-2.894093,5.385669],[8.490089,-5.961366,-1.675566,8.277448,8.404051,-3.205257,-9.336071,3.821681,3.072724,-0.229394,-4.928261],[6.770619,-4.139341,4.919590,7.479368,1.046621,6.648013,9.963589,3.016088,6.948570,5.717043,-6.217067],[7.003339,4.710361,-8.825847,4.905118,-5.056403,-6.905351,9.387346,5.828836,-9.261122,5.516547,-6.643517],[8.312469,4.027949,6.677021,4.398736,5.006361,4.569077,2.985609,-9.285507,-5.483801,3.896003,1.310955]],[[-9.207191,-9.480088,-7.803307,-4.628634,-8.393296,-4.303051,-4.937192,-4.546085,5.605957,3.210125,4.496013],[-2.401207,9.252087,-1.156063,2.611825,-9.803671,-8.440704,3.148015,-7.234327,-0.634714,2.967945,7.824119],[-6.295177,1.445664,9.122699,-0.494226,-7.533419,-2.769602,1.401801,-7.167436,-3.683590,-6.263291,7.604623],[8.743100,0.617249,6.926809,-3.084163,-7.768751,-0.798332,-1.595864,-6.335441,-1.138828,2.315395,8.560720],[3.851299,-5.836290,-6.270538,0.687935,-1.988817,8.813316,-2.266587,-0.616106,8.985684,5.008798,1.816184],[3.378741,-5.839822,-6.509542,-0.990751,-3.579295,4.331880,-6.148921,6.204481,-2.689624,-2.894359,9.058602],[-4.172786,-2.750735,-7.522851,6.026945,9.832518,-2.044240,2.168323,-7.046436,-6.737533,7.977821,0.070214],[2.864648,7.412414,-8.825728,7.637908,-3.426041,0.677979,-6.040868,-6.393550,8.945695,-1.858571,5.708964]]], dtype = "float32")#candidate|5746|(15, 8, 11)|const|float32
uop_5747 = relay.sigmoid(const_5746.astype('float32')) # shape=(15, 8, 11)
output = relay.Tuple([uop_5747,])
output2 = relay.Tuple([uop_5747,])
func_5760 = relay.Function([], output)
mod['func_5760'] = func_5760
mod = relay.transform.InferType()(mod)
mutated_mod['func_5760'] = func_5760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5760_call = mutated_mod.get_global_var('func_5760')
call_5761 = func_5760_call()
output = call_5761
func_5762 = relay.Function([], output)
mutated_mod['func_5762'] = func_5762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5760_call = mod.get_global_var('func_5760')
func_5762_call = mutated_mod.get_global_var('func_5762')
call_5763 = relay.TupleGetItem(func_5760_call(), 0)
call_5764 = relay.TupleGetItem(func_5762_call(), 0)
var_5765 = relay.var("var_5765", dtype = "float32", shape = (15, 8, 11))#candidate|5765|(15, 8, 11)|var|float32
bop_5766 = relay.greater(call_5763.astype('bool'), relay.reshape(var_5765.astype('bool'), relay.shape_of(call_5763))) # shape=(15, 8, 11)
bop_5769 = relay.greater(call_5764.astype('bool'), relay.reshape(var_5765.astype('bool'), relay.shape_of(call_5764))) # shape=(15, 8, 11)
func_43_call = mod.get_global_var('func_43')
func_46_call = mutated_mod.get_global_var('func_46')
var_5772 = relay.var("var_5772", dtype = "float32", shape = (70,))#candidate|5772|(70,)|var|float32
call_5771 = func_43_call(relay.reshape(var_5772.astype('float32'), [7, 10]))
call_5773 = func_43_call(relay.reshape(var_5772.astype('float32'), [7, 10]))
func_4955_call = mod.get_global_var('func_4955')
func_4961_call = mutated_mod.get_global_var('func_4961')
const_5794 = relay.const(5, dtype = "uint8")#candidate|5794|()|const|uint8
const_5795 = relay.const([3,6,-7,4,9,-5,-6,2,6,-7,6,8,-7,8,-7,7], dtype = "uint8")#candidate|5795|(16,)|const|uint8
var_5796 = relay.var("var_5796", dtype = "uint16", shape = (5, 30))#candidate|5796|(5, 30)|var|uint16
const_5797 = relay.const([9.241598,6.707523,7.671469,-7.962845,-8.716152,-3.743392,3.117625,4.209104,2.257711,9.585301,5.971092,6.092488,3.752404,-9.619552,-5.557031,4.344901,3.957388,5.213635,-3.401169,3.664125,-8.482459,-5.165111,5.208278,1.275572,-1.717496,6.743098,-2.343080,9.991437,-4.721935,-8.280035,4.307394,4.637858,8.149554,6.771564,-0.409851,-4.202296,-5.591082,-9.277742,-7.034666,-4.380400,-5.755564,-4.804613,7.203962,-8.129439,1.581361,-6.114561,-1.967027,-8.425928,-0.968108,5.984140,-3.728321,5.897061,9.383142,-7.166517,3.821569,-6.535697,-3.724581,2.514487,8.321119,-6.089677,-8.886410,0.696781,-2.422360,-3.540391,-2.209396,9.127275,7.580510,7.389919,-6.953665,3.363296,7.354591,0.149885,-4.173887,6.795710,-6.191994,8.997193,-4.779775,0.632002,-9.651443,-7.421400,-0.793996,4.454443,-0.729402,-0.681959,-6.116248,5.405366,3.230401,8.294731,9.148517,2.152557,-1.255359,-2.446072,-6.519037,5.158649,-8.185864,9.078430,6.369032,-9.561042,6.768140,-0.530548,-9.116435,7.602510,-4.357469,-9.835616,8.204655,7.090464,-4.352480,1.531096,-8.560006,4.197446,-3.562706,4.511675,1.769564,2.521751,-8.046222,-4.283759,1.307032,-4.301948,-6.205774,3.087704,4.983310,-4.608117,2.659232,-3.497545,-9.259663,-4.618248,-1.729952,6.533161,0.180386,-7.318045,-7.561010,3.019352,6.936815,-1.600741,-5.480396,9.645266,-4.405509,7.565204,6.983546,2.244204,4.253844,-5.015689,0.438540,7.519071,9.210485,-5.129239,-5.852110,5.388534,-6.256395,3.338683,-3.027915,-1.399941,-1.336518,-9.138768,0.334164,-1.705395,4.825781,-1.907583,-2.485427,1.165093,9.813584,2.629529,3.906713,5.292469,-6.710716,-7.337313,-1.002697,-4.056300,-7.153941,-2.468668,-0.793352,-1.420985,-0.080475,6.074450,-4.248785,-8.229591,-4.678861,0.061798,-8.795882,3.846867,-3.767881,0.177075,-6.956709,3.672436,-6.339529,-4.403361,-2.248152,-4.681197,0.616012,0.765843,0.027729,-6.341346,-8.403359,1.048246,-4.675905,4.508565,7.424046,1.427172,-2.635192,-7.946038,8.449329,-1.814544,-8.700507,-7.809116,-1.986706,5.250877,5.607947,9.842650,-7.528365,-6.942009,-4.555185,5.529304,2.861999,4.621911,1.756381,-8.283102,3.652282,9.788589,-3.840599,4.419120,6.930750,-1.858324,-7.698985,-2.780086,-0.891490,-6.800834,8.095058,-4.970829,-6.205130,-6.325890,-1.123666,-3.562052,8.869987,7.808983,2.116823,-7.811576,8.057037,7.148218,0.579330,-0.683812,1.604088,-8.987521,-6.594645,7.011489,-9.939337,1.136817,-8.340855,-9.705617,6.167215,2.496234,5.605687,9.868230,-5.291079,-6.212767,1.737708,-6.029922,2.372108,9.839903,9.909832,0.873194,-6.132146,-6.440368,-9.531719,3.086080,-8.191389,1.023967,-8.063544,7.472330,1.399897,-7.603747,-9.008285,2.961050,4.064470,-0.046543,1.448800,8.715909,-0.940486,8.339489,-0.999412,-7.650048,7.330894,-2.031406,-2.929699,1.545306,-2.173116,-5.619131,-2.337978,-3.899982,-4.963904,-4.963837,-8.084012,-4.545101,-0.164319,-1.756104,-3.876315,3.477475,-6.777333,2.085779,3.862890,-9.208473,3.789322,8.919361,5.268905,4.208808,-2.625131,8.131445,8.394985,8.517861,0.712301,1.712847,-5.284141,-7.029880,-4.064105,0.357416,-1.239881,7.381909,1.405182,0.364005,4.271251,-7.466304,-7.677723,-3.772937,3.151539,5.335204,2.253763,-3.010568,-8.768396,-4.204676,8.840324,-8.470354,-1.787509,5.154454,-9.406630,-6.429263,2.469354,5.161364,-8.240067,-4.457494,7.066125,5.790414,-6.246651,-7.590371,-8.853512,8.327965,8.559125,5.328447,-9.460676,6.963884,7.331928,-2.883380,-5.302513,-0.277903,0.536298,1.739074,7.397668,-1.351044,-7.040719,-3.796022,8.757947,-5.684165], dtype = "float32")#candidate|5797|(360,)|const|float32
const_5798 = relay.const([[5,5,-9,2,9,10,-7,2,10,3,8,1,-2,-1,9,7,5,1,-2,-1,-3,3,-1,-8,-9,-3,6,10,-5,2,2,9,3,3,-1,8,-7,-7,-6,-1,3,-3,-10,-9,-3,10,-2,5,8,-3,-4,6,10,2,-6,10,-9,-10,-5,3,-2,3,3,-1,10,4,5,-7,-3,10,6,-3,-4,-1,4,6,8,-1,-1,-5,-6,-5,9,7,-5,-5,8,3,1,-10,-9,-10,-8,-9,3,10,-3,2,8,-5,-6,-3,8,-8,-9,3,-7,-6,-6,-3,-7,10,-9,1,10,10,8,-10,-7,-7,-7,6,-7,-10,-5,4,8,-3,6,2,-4,2,6,-8,2,-3,10,-4,2,-10,7,-3,5,9],[2,7,-6,5,3,-8,3,-6,9,-7,-4,-9,8,5,8,7,7,-3,3,6,-5,2,4,-10,10,5,6,-4,-6,10,-4,3,10,-4,-7,-2,-5,-2,-4,3,2,9,-3,-4,3,4,-2,-7,-2,7,3,4,4,6,-8,4,-10,8,6,-4,-4,6,-5,8,8,-9,-5,-9,-6,-8,6,2,5,-9,10,1,10,-1,2,2,-9,1,3,4,4,2,4,-6,-6,1,6,3,1,3,-7,3,6,-9,-3,6,5,-7,-6,9,6,9,3,-10,-7,-8,-7,-10,5,2,2,-5,-10,7,5,-9,7,-7,-1,5,-9,4,-5,1,-4,10,-2,3,9,-9,6,-7,7,5,10,-10,4,9,8,1]], dtype = "int16")#candidate|5798|(2, 144)|const|int16
call_5793 = relay.TupleGetItem(func_4955_call(relay.reshape(const_5794.astype('uint8'), []), relay.reshape(const_5795.astype('uint8'), [1, 1, 16]), relay.reshape(var_5796.astype('uint16'), [150,]), relay.reshape(const_5797.astype('float32'), [360,]), relay.reshape(const_5798.astype('int16'), [288,]), ), 5)
call_5799 = relay.TupleGetItem(func_4961_call(relay.reshape(const_5794.astype('uint8'), []), relay.reshape(const_5795.astype('uint8'), [1, 1, 16]), relay.reshape(var_5796.astype('uint16'), [150,]), relay.reshape(const_5797.astype('float32'), [360,]), relay.reshape(const_5798.astype('int16'), [288,]), ), 5)
output = relay.Tuple([bop_5766,call_5771,var_5772,call_5793,const_5794,const_5795,var_5796,const_5797,const_5798,])
output2 = relay.Tuple([bop_5769,call_5773,var_5772,call_5799,const_5794,const_5795,var_5796,const_5797,const_5798,])
func_5800 = relay.Function([var_5765,var_5772,var_5796,], output)
mod['func_5800'] = func_5800
mod = relay.transform.InferType()(mod)
var_5801 = relay.var("var_5801", dtype = "float32", shape = (15, 8, 11))#candidate|5801|(15, 8, 11)|var|float32
var_5802 = relay.var("var_5802", dtype = "float32", shape = (70,))#candidate|5802|(70,)|var|float32
var_5803 = relay.var("var_5803", dtype = "uint16", shape = (5, 30))#candidate|5803|(5, 30)|var|uint16
output = func_5800(var_5801,var_5802,var_5803,)
func_5804 = relay.Function([var_5801,var_5802,var_5803,], output)
mutated_mod['func_5804'] = func_5804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5806 = relay.var("var_5806", dtype = "float32", shape = (2, 8, 2))#candidate|5806|(2, 8, 2)|var|float32
uop_5807 = relay.log(var_5806.astype('float32')) # shape=(2, 8, 2)
func_5800_call = mod.get_global_var('func_5800')
func_5804_call = mutated_mod.get_global_var('func_5804')
var_5813 = relay.var("var_5813", dtype = "float32", shape = (1320,))#candidate|5813|(1320,)|var|float32
var_5814 = relay.var("var_5814", dtype = "float32", shape = (70,))#candidate|5814|(70,)|var|float32
var_5815 = relay.var("var_5815", dtype = "uint16", shape = (25, 6))#candidate|5815|(25, 6)|var|uint16
call_5812 = relay.TupleGetItem(func_5800_call(relay.reshape(var_5813.astype('float32'), [15, 8, 11]), relay.reshape(var_5814.astype('float32'), [70,]), relay.reshape(var_5815.astype('uint16'), [5, 30]), ), 2)
call_5816 = relay.TupleGetItem(func_5804_call(relay.reshape(var_5813.astype('float32'), [15, 8, 11]), relay.reshape(var_5814.astype('float32'), [70,]), relay.reshape(var_5815.astype('uint16'), [5, 30]), ), 2)
output = relay.Tuple([uop_5807,call_5812,var_5813,var_5814,var_5815,])
output2 = relay.Tuple([uop_5807,call_5816,var_5813,var_5814,var_5815,])
func_5822 = relay.Function([var_5806,var_5813,var_5814,var_5815,], output)
mod['func_5822'] = func_5822
mod = relay.transform.InferType()(mod)
var_5823 = relay.var("var_5823", dtype = "float32", shape = (2, 8, 2))#candidate|5823|(2, 8, 2)|var|float32
var_5824 = relay.var("var_5824", dtype = "float32", shape = (1320,))#candidate|5824|(1320,)|var|float32
var_5825 = relay.var("var_5825", dtype = "float32", shape = (70,))#candidate|5825|(70,)|var|float32
var_5826 = relay.var("var_5826", dtype = "uint16", shape = (25, 6))#candidate|5826|(25, 6)|var|uint16
output = func_5822(var_5823,var_5824,var_5825,var_5826,)
func_5827 = relay.Function([var_5823,var_5824,var_5825,var_5826,], output)
mutated_mod['func_5827'] = func_5827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5760_call = mod.get_global_var('func_5760')
func_5762_call = mutated_mod.get_global_var('func_5762')
call_5917 = relay.TupleGetItem(func_5760_call(), 0)
call_5918 = relay.TupleGetItem(func_5762_call(), 0)
const_5919 = relay.const([[[2.888451,-7.468913,7.739803,-4.444137,7.275813,0.030812,9.620308,-7.405707,5.373455,-4.516447,3.836363],[3.363995,2.235948,-8.869670,3.046212,-6.624178,-0.052030,2.780786,-3.464339,-1.742510,6.640977,8.385635],[4.991644,5.831924,-1.018803,-5.361166,-7.250264,1.902604,-6.332734,-7.161361,-8.025091,0.224605,5.941964],[-7.801059,-2.343193,5.339621,-3.624244,-4.364586,-3.403453,9.077474,-8.428832,-8.793561,2.444418,-6.848514],[-3.463383,1.567976,3.346779,8.619119,3.048024,6.393391,-8.884768,-7.279785,5.447798,-0.560697,-8.836894],[1.925371,2.246418,5.411322,4.766288,-2.461111,-8.077999,-2.551322,-3.208569,3.983124,-2.510465,-4.593903],[9.562110,8.951502,5.688541,4.861984,2.045209,-0.158120,-9.989852,-1.134131,-1.047486,9.979421,-9.515464],[-2.379859,1.421187,2.730931,-0.754771,-8.887853,-2.579877,1.644273,0.241514,1.352789,8.177640,7.098379]],[[-4.869252,6.148855,2.266349,2.855293,4.855177,-7.555839,9.876782,-1.900017,3.156717,-6.760825,-8.742149],[-3.878099,-8.750857,7.618383,1.386156,8.127106,-5.302314,-1.463812,-6.559077,7.476254,-2.987389,-9.877172],[7.548364,7.352808,-5.184048,-6.803859,6.564702,-7.274088,2.350101,2.136072,2.261150,-9.192301,-3.367722],[6.938943,-8.818423,-7.661891,-5.724568,9.507436,2.798792,1.525294,-4.511185,-9.911916,-8.899988,7.408062],[-5.014304,-6.139248,8.482374,4.049387,-6.615122,-3.252500,-2.686711,2.763837,-6.032633,-6.656538,2.242495],[2.914007,-5.490940,-2.095288,-8.635748,-9.912829,-5.108682,-6.076560,2.236813,8.025374,-9.394747,-5.320783],[-7.900590,-5.051949,-2.156659,-1.186905,-6.064894,8.576644,-3.713132,4.671999,7.277707,6.309344,-1.731721],[-8.673217,-7.755928,0.167484,8.695021,2.761019,3.178007,-3.431952,-5.188721,-1.008671,-0.930701,8.226289]],[[0.839687,-6.279281,-4.702486,-8.760667,9.275987,-9.284094,3.299556,1.729661,-1.142406,-5.615244,-4.746385],[7.766790,-7.638981,3.155720,-6.206221,8.264280,3.294872,-0.721352,2.741208,-7.872132,6.191679,-7.084123],[7.391065,-8.542699,-3.163164,6.531945,1.678319,-9.095160,-1.178365,3.091339,-0.599759,-8.724528,-2.157325],[-5.593195,-3.461666,-3.050714,9.500488,-9.295520,-3.814634,-4.318192,6.345306,4.723697,2.077961,-2.531244],[8.705456,-2.596233,-8.298438,4.913424,3.202395,8.092322,1.971221,-1.073022,-6.661088,8.861192,7.055242],[-3.386108,7.587561,3.015334,8.299187,9.248293,8.421805,-3.156248,-4.277346,-9.174756,1.433710,2.668684],[-4.737974,-6.279727,-8.891453,4.948165,3.379863,9.318901,-4.882322,7.248154,-5.820346,-3.134785,-0.106658],[-9.747952,3.256024,7.498292,-9.277527,9.235472,-8.123303,0.705183,6.675990,-4.753952,-2.515104,5.056487]],[[-8.568402,-9.928476,6.690541,0.312002,-4.750050,0.784791,-6.315880,-5.045046,7.549752,6.288054,9.155274],[4.015413,-2.267866,-3.871281,0.170346,7.341879,-0.606178,-8.103026,-5.051131,-4.792645,2.897954,-3.999014],[-8.795900,-4.302746,-0.553626,5.630352,4.069555,-8.293075,-7.084371,-0.242510,4.769586,6.399535,-8.295846],[8.191466,3.286391,2.321019,9.307769,9.034723,-0.454660,-7.880674,0.955790,2.447097,-6.049749,-3.587872],[-2.926103,-3.023757,-0.025544,3.494648,4.019273,-2.027142,-5.495242,-3.452942,3.390315,3.388672,0.115287],[7.660474,2.848840,7.368956,-1.995831,-8.525541,2.129649,-0.636900,9.067400,-3.818667,8.660320,6.451701],[-6.246408,4.126946,2.940658,8.516242,-7.486324,-6.145393,4.792968,6.434537,0.762645,-0.116889,-8.949241],[5.914299,8.676158,8.953554,-8.893605,-0.990530,-4.940080,-2.513843,6.458354,-1.000245,-3.539465,8.335624]],[[9.250504,-2.622389,3.565750,9.903848,2.062816,2.819463,-5.179185,8.593704,1.178701,3.792996,-5.600598],[-0.864273,9.467118,1.808687,6.091675,-8.586724,-0.433925,9.339489,1.317581,4.395724,3.652403,3.401878],[4.972499,-4.980558,7.149331,-4.392907,-6.987472,2.291455,-9.119059,7.242253,7.433238,-2.032200,-4.314468],[0.249279,-1.325703,8.313544,4.105560,0.601189,9.925269,-3.603934,7.237678,-4.477571,5.660825,9.328059],[8.117243,6.045615,-6.407546,-0.446369,5.697640,8.710164,-7.720408,-6.106018,4.127930,9.161538,9.463917],[9.100204,-6.666368,-3.364004,2.585085,8.458185,6.818695,-1.258299,-0.114178,-7.275403,-4.184851,9.056518],[-6.827571,4.389146,6.461373,8.217136,-0.297489,7.661415,-7.320867,-6.072128,-6.066658,-9.086480,-1.760212],[4.994217,1.437178,-6.978048,2.757204,2.462881,1.205743,-6.456307,9.490138,-1.338351,-7.870012,-8.201513]],[[5.849530,7.925890,2.787546,2.191069,-0.567612,-4.803205,9.431554,9.910661,3.766517,-9.900476,5.122000],[3.816741,-6.659254,-6.114739,-5.128055,-4.807304,0.027394,6.878046,6.418898,-2.751100,2.476763,-5.398224],[-2.893560,-1.940239,-8.773828,-2.935231,9.064745,-6.695291,4.825951,-1.530536,3.462848,-9.632070,-5.666771],[3.155888,-2.812250,6.990376,0.035913,-6.205048,-2.968867,1.346893,-7.483397,-3.653979,5.635710,9.948838],[-8.264960,-0.150626,-1.279053,-9.354160,-9.788134,9.615926,-3.287467,9.701668,-9.950308,3.095983,-1.558449],[4.234204,-9.310954,-5.256090,-3.736337,7.611591,7.181109,-6.661052,-3.385564,8.031904,5.912242,3.586955],[9.771845,1.096346,1.470715,-6.958693,6.032992,-4.385335,-5.324721,6.324352,-0.455704,0.818432,1.431913],[-0.736814,-4.519391,-1.173027,-4.662100,3.167899,-9.798218,4.099793,1.973272,8.528291,9.119993,9.519498]],[[-5.490313,-4.891996,8.125880,5.395424,5.790946,-7.143842,1.331198,1.492148,-0.157024,7.588352,0.840756],[-4.789955,3.706585,7.598307,0.698859,-6.074341,-2.736871,3.857917,-8.681824,-1.157731,-3.316412,3.369954],[8.343636,7.146462,-5.595109,2.618696,8.637012,-9.743784,9.412154,2.477448,-6.126848,9.283933,-0.905985],[-4.622083,3.536973,-2.770510,6.923414,3.140762,4.120249,5.132975,8.568798,7.048526,-9.847956,2.115917],[-7.345330,0.285307,-4.214898,7.172179,4.299822,5.107779,-6.933025,-9.245898,-0.682464,-3.186201,-2.067140],[8.563402,-9.599267,-6.760564,-4.362132,8.439863,-0.525280,-6.067973,5.302634,5.925857,7.070943,3.265691],[-8.120390,-6.514511,9.177839,-6.453746,-1.247076,0.145873,4.703732,2.136779,-1.195730,-6.888169,7.151887],[1.167116,-1.719247,8.747684,-8.265178,2.172238,-2.731684,1.574534,-1.758356,6.988200,9.080471,-7.848193]],[[-5.793446,-7.446517,-1.770645,1.627691,3.001862,-2.174475,3.677806,-2.452795,-9.107711,7.452588,3.211603],[-9.532206,-2.261427,-2.247264,-8.443896,-4.677823,-1.785614,0.776745,3.235833,3.198490,-5.481038,-5.711394],[2.187429,6.655724,-6.705327,0.602687,1.558543,-9.570520,2.817040,3.438827,8.020403,4.910616,-2.018319],[-9.674665,9.569661,4.146518,1.361824,-9.084832,-2.608995,-3.722047,-5.026612,-7.323119,9.668458,1.571915],[7.759447,-0.535588,8.454820,-9.860464,6.301228,6.492579,-3.454122,-3.071343,9.577814,8.571912,-7.682277],[-9.181047,0.183434,-1.947830,3.110693,7.908323,-3.246580,1.982953,2.027172,3.420733,-3.081669,-6.575622],[0.322296,-0.605289,9.858004,-9.256049,4.609545,-2.362155,2.768762,5.105986,-5.485515,2.186984,4.946584],[-5.220395,4.327178,1.617775,2.676733,-6.233215,-8.378230,5.555328,-3.705535,2.506955,-9.049278,-4.945765]],[[-2.943964,4.737021,9.976202,3.809990,0.602100,7.781731,0.508816,3.940160,-4.959885,-5.797839,-9.649674],[-8.481435,1.163275,2.404009,3.272250,-5.715733,7.259756,2.319576,-9.907891,3.619367,-2.376777,-8.355817],[7.019827,-4.618817,-2.521149,-2.985736,-7.337400,7.348802,-4.736731,-0.060900,0.794627,0.514682,-6.842972],[8.214966,1.535322,-3.901463,4.519409,-7.420866,-1.907220,1.606870,4.276283,-0.413003,-4.207919,2.330209],[-5.304960,4.933754,-9.081535,-5.929014,7.557205,-4.309612,6.731125,-7.487473,5.485225,1.555708,-4.676755],[-4.128227,4.785775,4.247629,6.341541,-5.160051,-2.565986,7.398864,1.694722,4.679874,9.597215,7.148232],[2.884535,1.057958,-8.251141,-5.881419,5.786966,-1.651780,0.036250,4.826174,9.375901,-7.421874,1.690167],[-2.306251,-9.008960,5.826553,9.315503,-1.287697,-0.201881,-1.474116,-1.518031,5.601263,1.811815,-4.098504]],[[-9.935075,0.475847,-8.776168,6.278285,4.476532,-7.225460,-4.251361,1.627897,-8.193766,-0.123334,-1.225756],[-2.088816,8.604693,-3.372217,7.528344,-9.622342,-8.217284,5.183302,8.179063,-8.021783,5.379932,-4.627784],[-8.848469,5.795363,0.714229,-1.007128,-5.628666,7.165086,-1.554051,6.380085,-3.497350,4.186957,6.856273],[2.294100,-1.023847,-7.687382,-5.457154,9.309835,-3.986430,-5.510532,-3.053656,2.837223,5.839125,-9.917740],[0.304652,9.492902,2.242755,-9.885489,-7.654977,-9.744225,-1.646811,-1.093134,5.293922,0.318448,-4.892033],[-2.490313,-5.687544,-0.408417,-7.978188,-7.653103,-1.824631,1.045338,-6.762006,-4.169650,-2.298868,2.249414],[8.296178,1.680607,2.023329,1.314983,-9.749215,-3.890004,5.635050,-3.161040,-5.325816,2.585251,5.816448],[-2.071540,3.666576,-6.846193,4.992154,-9.359801,9.060262,-8.809471,-5.493686,-8.894804,4.480243,-3.083679]],[[9.976057,-6.712208,7.305958,-6.036500,-8.104689,-9.381685,-8.152103,5.756299,2.616431,-4.258734,-6.391171],[3.940604,-7.912380,6.292905,2.149518,9.253438,6.416515,-2.006425,9.796220,8.370168,6.509657,1.686923],[-8.797888,-5.404392,-2.251474,-5.491693,8.662504,-2.136333,7.292494,5.846560,2.736892,-4.395909,-6.179354],[3.553158,2.548764,4.770615,-4.964499,-5.733770,-4.308017,-6.637112,-6.521491,6.474786,0.885619,2.596586],[3.960052,7.674249,8.987702,8.870861,-2.147414,-2.310551,1.860002,-6.498867,-5.245887,-4.552462,5.783781],[-1.912355,0.850309,7.818140,5.738912,-7.631449,8.120502,5.423623,4.980063,-7.343155,1.285584,8.970535],[7.206476,-1.341826,6.707195,-8.120048,-9.051508,-5.519746,-0.600910,-9.180695,-6.349816,-0.728069,-2.203127],[9.015484,2.214829,1.372778,-7.557595,6.693966,-3.603445,5.770718,5.137326,3.599230,-7.581498,2.620160]],[[6.325779,-0.778607,-7.475761,-9.851377,-3.702451,-2.542521,2.065077,-3.967402,5.781474,1.629971,-2.384753],[1.985634,-9.429340,3.285504,-3.791329,7.725269,-1.610640,6.777286,7.747944,9.534882,2.134116,2.266452],[7.245904,-4.499024,9.492531,-9.665792,0.804935,1.389384,-7.316862,-6.263416,-7.356660,6.768304,-7.163957],[1.524169,-4.603632,5.755008,3.665850,-9.252475,6.464528,3.786556,4.257371,-6.438376,2.960134,-7.627389],[-4.805444,-1.673270,4.058934,4.929471,-2.809472,1.958792,2.336494,6.511225,8.562270,3.767808,-1.057885],[7.649135,-3.151729,-0.169659,-6.616202,-0.486545,-3.338030,7.944256,-5.802617,6.393093,8.995451,8.168359],[1.152652,7.733586,-4.223912,0.438000,2.223268,-4.027018,-8.843033,5.644285,-8.620783,9.549324,-6.599913],[-4.417556,7.336057,-0.318481,-5.020839,4.229284,-4.792167,-5.362492,4.876443,2.555843,-0.151376,2.166864]],[[2.194900,6.214919,-5.282451,-6.479584,4.467697,0.753466,-4.644448,-2.235058,6.326562,-7.667406,-5.304138],[-7.217811,3.359769,7.197110,-9.307306,-0.050970,6.627789,9.882267,8.669918,3.750111,-3.402142,9.264045],[-3.346484,5.953010,-9.485967,5.721584,-6.042631,-2.132747,4.342422,7.400703,-1.803048,4.009733,-8.250208],[9.114424,-1.212773,-0.520184,1.849608,2.958318,5.124718,7.142111,4.261554,7.093329,4.494979,9.964934],[7.080526,-7.077565,-0.856863,4.102411,-2.169140,-3.811594,3.876832,5.000234,1.733241,-3.293646,9.665557],[-2.986112,-4.374898,-6.448290,0.040056,9.081454,-8.662478,3.450445,8.284223,4.122913,4.072129,8.822806],[2.249020,-7.457446,0.730205,2.515420,-4.018407,6.002226,0.920623,-7.215730,8.692656,9.020059,1.519805],[2.646374,-9.410700,-5.604372,-2.230606,-3.066160,-2.265016,-0.377608,-9.335897,-8.466234,2.164549,4.973285]],[[0.261518,-2.921536,8.426679,5.929293,-6.015813,-7.376750,8.045061,-8.087704,-8.290599,0.501922,0.753143],[-3.629349,-7.325417,8.339238,1.140431,-5.872398,-3.848428,4.726957,1.469498,5.524560,4.732677,-7.254683],[-1.651822,6.982341,3.284735,-1.441151,-4.136294,-1.652899,5.312623,5.541136,9.575934,-9.365315,-9.154860],[4.510445,-7.049154,3.116138,-4.074762,-0.329698,-9.107028,5.634107,3.594504,2.948882,1.662869,-6.032305],[4.437904,2.527117,9.941695,-4.089112,6.017450,0.951692,-4.352507,-1.516255,-3.747748,-4.086852,-1.451339],[0.677259,0.293777,7.889069,-1.245274,7.895389,6.263162,-8.990994,-8.292924,-0.660849,1.109270,6.500548],[-2.477722,-6.119842,5.074713,-5.729233,0.366057,5.269909,-3.439395,7.668807,-5.424688,-4.646267,6.527098],[-7.818715,7.146386,8.551718,5.835501,1.594454,-0.432631,-6.425825,-4.354834,8.633428,-2.289221,-5.690642]],[[-1.476571,-7.436351,-4.348189,-4.325081,8.408457,-7.245454,-9.613876,5.667047,-8.686815,3.208145,7.830215],[-5.071567,-1.921582,2.222626,-4.238251,2.862197,2.253797,8.204693,-5.120243,2.641929,9.926578,2.015709],[7.419167,8.537770,8.336289,5.991468,-1.520080,-7.703223,9.788939,-5.237561,7.931504,-9.199733,9.986674],[-4.385959,-8.430139,9.672265,4.855709,7.023037,-0.020959,9.723224,4.791372,-7.689627,-0.552023,9.408564],[-8.925921,-5.293098,8.639657,-8.480732,-5.605852,3.796334,-3.455974,-4.851540,8.260973,-1.921059,-8.810577],[8.117269,-6.752229,-4.198568,-8.824896,9.489343,4.900596,-2.686985,-3.758741,6.242166,1.844609,7.206379],[0.475153,-5.816142,3.901834,-5.312012,-6.729950,-9.811538,3.521552,0.974098,-7.550394,-4.060058,-6.014259],[-6.953324,1.822742,-5.157249,-8.143330,-2.075639,9.964445,-7.429745,-1.171742,1.922246,-2.878536,7.807429]]], dtype = "float32")#candidate|5919|(15, 8, 11)|const|float32
bop_5920 = relay.power(call_5917.astype('float64'), relay.reshape(const_5919.astype('float64'), relay.shape_of(call_5917))) # shape=(15, 8, 11)
bop_5923 = relay.power(call_5918.astype('float64'), relay.reshape(const_5919.astype('float64'), relay.shape_of(call_5918))) # shape=(15, 8, 11)
output = bop_5920
output2 = bop_5923
func_5925 = relay.Function([], output)
mod['func_5925'] = func_5925
mod = relay.transform.InferType()(mod)
output = func_5925()
func_5926 = relay.Function([], output)
mutated_mod['func_5926'] = func_5926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mod.get_global_var('func_5925')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_5954 = func_5925_call()
call_5955 = func_5925_call()
var_5963 = relay.var("var_5963", dtype = "float64", shape = (15, 8, 11))#candidate|5963|(15, 8, 11)|var|float64
bop_5964 = relay.mod(call_5954.astype('float64'), relay.reshape(var_5963.astype('float64'), relay.shape_of(call_5954))) # shape=(15, 8, 11)
bop_5967 = relay.mod(call_5955.astype('float64'), relay.reshape(var_5963.astype('float64'), relay.shape_of(call_5955))) # shape=(15, 8, 11)
uop_5975 = relay.sqrt(call_5954.astype('float64')) # shape=(15, 8, 11)
uop_5977 = relay.sqrt(call_5955.astype('float64')) # shape=(15, 8, 11)
bop_5979 = relay.bitwise_xor(uop_5975.astype('int16'), relay.reshape(call_5954.astype('int16'), relay.shape_of(uop_5975))) # shape=(15, 8, 11)
bop_5982 = relay.bitwise_xor(uop_5977.astype('int16'), relay.reshape(call_5955.astype('int16'), relay.shape_of(uop_5977))) # shape=(15, 8, 11)
func_5721_call = mod.get_global_var('func_5721')
func_5724_call = mutated_mod.get_global_var('func_5724')
const_5985 = relay.const([-2,-6,9,-10,2,-6,5,7,-8,2,-8,-1,4,4,-7,9,-1,-6,-8,-3,6,7,-5,-3,9,-6,-6,6,9,1,5,9,5,-4,4,5,-7,1,-9,7,-10,7,-10,-3,2,-8,3,3,-5,-3,6,-6,4,-5,2,3,2,7,4,4,-5,5,2,-8,-6,-3,-2,-3,6,1,9,1,5,-5,7,7,4,10,9,-10,-10,7,-3,10,8,9,-5,-9,8,1,5,-7,-9,2,8,5,6,2,10,-1,3,-8,-2,-3,10,6,-4,-4,-4,5,2,-2,9,10,-7,-10,4,-3,4,7,-1,-9,9,-10,-4,7,-4,-4,4,-2,6,-3,1,-7,1,-9,6,-9,-5,-10,-3,-3,-5,-10,1,-1,-6,-7,10,2,-5,-6,-2,8,6,-4,-4,-8,4,-9,9,-3,-4,-4,2,8,10,2,10,7,7,-7,-8,3,10,-8,2,8,2,2,9,-3,7,10,5,-5,9,-7,-4,3,-2,7,-2,2,6,-8,-6,-3,-6,10,10,-4,-7,10,-1,7,3,7,-8,1,-3,-8,-10,9,6,7,-7,7,-4,-5,-1,8,8,-1,-2,-10,-1,-3,-1,-7,6,-3,7,-6,8,-5,6,10,9,-4,-4,-6,-5,6,-5,-1,6,-1,3,-5,-9,-9,-6,-2,-10,5,-1,9,-2,-1,7,-8,-7,10,-6,-2,-7,-1,10,9,-10,-6,-7,-8,-1,8,3,2,4,-2,9,5,-5,-1,10,4,4,10,8,-10,6,-6,-3,7,-2,-8,-2,-9,9,-1,9,8,7,5,-5,4,-5,10,-3,-7,-7,8,-8,-8,8,-6,5,10,-2,-9,4,-2,-8,-8,3,-7,-10,2,3,-7,-7,8,6,6,-5,-9,-10,7,-5,-8,2,-9,-4,2,-10,10,3,9,-8,-1,2,3,1,10,6,-4,-7,3,-3,1,-6,-1,9,-10,7,-3,1,10,5,-10,8,-1,7,6,-1,-3,8,-7,6,-5,9,1,-1,2,1,-10,7,3,5,6,-6,2,5,-10,-7,3,2,-7,-4,-2,-2,3,-4,-3,-10], dtype = "int32")#candidate|5985|(405,)|const|int32
call_5984 = relay.TupleGetItem(func_5721_call(relay.reshape(const_5985.astype('int32'), [9, 15, 3])), 0)
call_5986 = relay.TupleGetItem(func_5724_call(relay.reshape(const_5985.astype('int32'), [9, 15, 3])), 0)
output = relay.Tuple([bop_5964,bop_5979,call_5984,const_5985,])
output2 = relay.Tuple([bop_5967,bop_5982,call_5986,const_5985,])
func_6002 = relay.Function([var_5963,], output)
mod['func_6002'] = func_6002
mod = relay.transform.InferType()(mod)
mutated_mod['func_6002'] = func_6002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6003 = relay.var("var_6003", dtype = "float64", shape = (15, 8, 11))#candidate|6003|(15, 8, 11)|var|float64
func_6002_call = mutated_mod.get_global_var('func_6002')
call_6004 = func_6002_call(var_6003)
output = call_6004
func_6005 = relay.Function([var_6003], output)
mutated_mod['func_6005'] = func_6005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6007 = relay.var("var_6007", dtype = "uint32", shape = (12, 13, 5))#candidate|6007|(12, 13, 5)|var|uint32
var_6008 = relay.var("var_6008", dtype = "uint32", shape = (12, 13, 5))#candidate|6008|(12, 13, 5)|var|uint32
bop_6009 = relay.bitwise_xor(var_6007.astype('uint32'), relay.reshape(var_6008.astype('uint32'), relay.shape_of(var_6007))) # shape=(12, 13, 5)
output = bop_6009
output2 = bop_6009
func_6018 = relay.Function([var_6007,var_6008,], output)
mod['func_6018'] = func_6018
mod = relay.transform.InferType()(mod)
var_6019 = relay.var("var_6019", dtype = "uint32", shape = (12, 13, 5))#candidate|6019|(12, 13, 5)|var|uint32
var_6020 = relay.var("var_6020", dtype = "uint32", shape = (12, 13, 5))#candidate|6020|(12, 13, 5)|var|uint32
output = func_6018(var_6019,var_6020,)
func_6021 = relay.Function([var_6019,var_6020,], output)
mutated_mod['func_6021'] = func_6021
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6048 = relay.var("var_6048", dtype = "int8", shape = ())#candidate|6048|()|var|int8
var_6049 = relay.var("var_6049", dtype = "int8", shape = (15, 1, 7))#candidate|6049|(15, 1, 7)|var|int8
bop_6050 = relay.left_shift(var_6048.astype('int8'), var_6049.astype('int8')) # shape=(15, 1, 7)
uop_6055 = relay.atan(var_6049.astype('float64')) # shape=(15, 1, 7)
func_4825_call = mod.get_global_var('func_4825')
func_4827_call = mutated_mod.get_global_var('func_4827')
var_6074 = relay.var("var_6074", dtype = "float64", shape = (112,))#candidate|6074|(112,)|var|float64
call_6073 = relay.TupleGetItem(func_4825_call(relay.reshape(var_6074.astype('float64'), [8, 1, 14])), 2)
call_6075 = relay.TupleGetItem(func_4827_call(relay.reshape(var_6074.astype('float64'), [8, 1, 14])), 2)
output = relay.Tuple([bop_6050,uop_6055,call_6073,var_6074,])
output2 = relay.Tuple([bop_6050,uop_6055,call_6075,var_6074,])
func_6085 = relay.Function([var_6048,var_6049,var_6074,], output)
mod['func_6085'] = func_6085
mod = relay.transform.InferType()(mod)
var_6086 = relay.var("var_6086", dtype = "int8", shape = ())#candidate|6086|()|var|int8
var_6087 = relay.var("var_6087", dtype = "int8", shape = (15, 1, 7))#candidate|6087|(15, 1, 7)|var|int8
var_6088 = relay.var("var_6088", dtype = "float64", shape = (112,))#candidate|6088|(112,)|var|float64
output = func_6085(var_6086,var_6087,var_6088,)
func_6089 = relay.Function([var_6086,var_6087,var_6088,], output)
mutated_mod['func_6089'] = func_6089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mod.get_global_var('func_5925')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_6096 = func_5925_call()
call_6097 = func_5925_call()
output = call_6096
output2 = call_6097
func_6104 = relay.Function([], output)
mod['func_6104'] = func_6104
mod = relay.transform.InferType()(mod)
output = func_6104()
func_6105 = relay.Function([], output)
mutated_mod['func_6105'] = func_6105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6106 = relay.var("var_6106", dtype = "float64", shape = (13, 14, 3))#candidate|6106|(13, 14, 3)|var|float64
uop_6107 = relay.rsqrt(var_6106.astype('float64')) # shape=(13, 14, 3)
func_5544_call = mod.get_global_var('func_5544')
func_5546_call = mutated_mod.get_global_var('func_5546')
var_6116 = relay.var("var_6116", dtype = "float64", shape = (1001,))#candidate|6116|(1001,)|var|float64
call_6115 = relay.TupleGetItem(func_5544_call(relay.reshape(var_6116.astype('float64'), [13, 11, 7])), 0)
call_6117 = relay.TupleGetItem(func_5546_call(relay.reshape(var_6116.astype('float64'), [13, 11, 7])), 0)
output = relay.Tuple([uop_6107,call_6115,var_6116,])
output2 = relay.Tuple([uop_6107,call_6117,var_6116,])
func_6124 = relay.Function([var_6106,var_6116,], output)
mod['func_6124'] = func_6124
mod = relay.transform.InferType()(mod)
var_6125 = relay.var("var_6125", dtype = "float64", shape = (13, 14, 3))#candidate|6125|(13, 14, 3)|var|float64
var_6126 = relay.var("var_6126", dtype = "float64", shape = (1001,))#candidate|6126|(1001,)|var|float64
output = func_6124(var_6125,var_6126,)
func_6127 = relay.Function([var_6125,var_6126,], output)
mutated_mod['func_6127'] = func_6127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mod.get_global_var('func_5925')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_6138 = func_5925_call()
call_6139 = func_5925_call()
var_6142 = relay.var("var_6142", dtype = "float64", shape = (15, 8, 11))#candidate|6142|(15, 8, 11)|var|float64
bop_6143 = relay.maximum(call_6138.astype('int16'), relay.reshape(var_6142.astype('int16'), relay.shape_of(call_6138))) # shape=(15, 8, 11)
bop_6146 = relay.maximum(call_6139.astype('int16'), relay.reshape(var_6142.astype('int16'), relay.shape_of(call_6139))) # shape=(15, 8, 11)
func_4825_call = mod.get_global_var('func_4825')
func_4827_call = mutated_mod.get_global_var('func_4827')
const_6152 = relay.const([[9.235579,-2.265787,8.351980,-3.136353,-5.271685,6.849373,6.080205,-3.370891,-0.365205,0.105816,-6.034549,7.069624,0.681352,3.216548,-4.521692,-4.041240,-4.615844,1.821842,-4.347531,-4.783776,-3.722603,-9.346382,-8.461428,3.717663,-8.812651,9.099215,8.854126,0.644453],[8.308040,-5.090091,7.804113,7.582337,3.733442,-2.860376,-3.342508,6.073714,-7.850925,-6.489203,-5.022695,-9.969966,0.415475,4.971497,-7.050070,5.875142,5.305466,-0.220945,3.798322,-6.884182,-3.009246,-8.310460,6.393333,2.700092,0.639797,-8.132627,-3.467756,1.395918],[-9.870971,-0.937372,2.056508,-8.665799,6.053261,-7.895273,-3.074429,9.494354,5.605672,5.407969,6.944993,-8.798432,4.881185,2.330083,4.691773,3.577606,7.442202,7.108460,1.568480,-2.941886,-2.279568,3.903252,1.131577,9.048111,2.515718,-5.833009,8.078641,3.657973],[1.076740,-7.365158,6.729234,5.171175,5.405768,-6.293315,-5.704358,7.079226,2.316298,-8.275129,-4.887897,7.460554,-2.344152,-1.805226,-8.132344,-5.359624,-7.079048,0.283466,-5.936679,2.739432,4.750339,0.835165,-0.215178,-7.477292,7.930020,-1.150697,-8.840370,6.103185]], dtype = "float64")#candidate|6152|(4, 28)|const|float64
call_6151 = relay.TupleGetItem(func_4825_call(relay.reshape(const_6152.astype('float64'), [8, 1, 14])), 3)
call_6153 = relay.TupleGetItem(func_4827_call(relay.reshape(const_6152.astype('float64'), [8, 1, 14])), 3)
output = relay.Tuple([bop_6143,call_6151,const_6152,])
output2 = relay.Tuple([bop_6146,call_6153,const_6152,])
func_6154 = relay.Function([var_6142,], output)
mod['func_6154'] = func_6154
mod = relay.transform.InferType()(mod)
var_6155 = relay.var("var_6155", dtype = "float64", shape = (15, 8, 11))#candidate|6155|(15, 8, 11)|var|float64
output = func_6154(var_6155)
func_6156 = relay.Function([var_6155], output)
mutated_mod['func_6156'] = func_6156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5760_call = mod.get_global_var('func_5760')
func_5762_call = mutated_mod.get_global_var('func_5762')
call_6239 = relay.TupleGetItem(func_5760_call(), 0)
call_6240 = relay.TupleGetItem(func_5762_call(), 0)
output = relay.Tuple([call_6239,])
output2 = relay.Tuple([call_6240,])
func_6241 = relay.Function([], output)
mod['func_6241'] = func_6241
mod = relay.transform.InferType()(mod)
mutated_mod['func_6241'] = func_6241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6241_call = mutated_mod.get_global_var('func_6241')
call_6242 = func_6241_call()
output = call_6242
func_6243 = relay.Function([], output)
mutated_mod['func_6243'] = func_6243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mod.get_global_var('func_5925')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_6291 = func_5925_call()
call_6292 = func_5925_call()
const_6298 = relay.const([[[-7.671472,2.069428,0.484653,6.464477,4.947806,3.371708,0.471350,-3.502532,8.108972,4.180921,9.866972],[-6.349460,-0.716433,4.671047,-9.197374,-9.842713,-2.913082,-7.248903,-1.961359,-0.718715,-1.695284,-0.256144],[6.929269,-6.789530,-6.061897,-1.314200,1.410400,2.746673,-0.467609,3.059456,-8.131434,4.087765,7.726532],[-3.913386,4.991974,-3.283228,-1.704383,7.585972,3.444124,8.974178,-5.064355,1.860318,-2.201010,8.022167],[7.370853,4.122020,1.374167,-7.854768,-7.403626,-2.865782,5.821502,7.514843,8.155453,1.779104,0.600440],[-4.666563,-6.945749,7.061223,-8.173885,5.944219,-8.806480,4.772693,-8.191851,-7.132813,-2.811098,-8.710288],[4.712811,-3.955160,2.627728,6.131190,-5.908143,-1.329358,2.268558,2.593912,-8.457842,6.601943,0.112098],[-7.794635,-6.849691,-3.091979,5.831318,4.728982,-1.425181,9.469536,7.321184,-7.656637,-8.039124,7.307465]],[[8.999572,-0.654677,1.841021,-6.027911,-5.126550,-2.208061,8.562667,-7.871058,-4.153371,-1.324140,2.814205],[-3.200019,-2.318831,-5.697112,1.508613,6.615840,-7.699167,-9.135703,6.622518,-7.655306,-3.060400,4.339349],[7.437930,-4.816932,0.754198,-8.014495,4.825813,0.580707,-7.924927,-8.810694,6.600718,-3.291484,3.075088],[-0.755102,0.903128,8.110390,0.395337,8.203023,-9.437081,-1.229825,-1.010655,-2.089918,1.383982,-4.467655],[0.195469,5.118127,-4.689376,-9.945831,3.361653,-2.268801,5.917602,-7.699165,-4.216336,5.407546,0.254903],[-3.295992,-4.423694,4.788800,3.894485,5.581161,4.401388,2.628952,-0.894353,4.811541,-5.553440,-3.609438],[9.930584,8.073352,3.259398,-7.073812,-2.723133,-6.755017,2.214112,0.938386,9.342668,2.926977,6.355716],[-4.923302,-3.064892,3.142606,-1.335751,-5.526706,-6.485737,6.807206,-5.457545,1.142337,1.211578,-4.878874]],[[9.554083,7.517118,-8.554526,6.149437,8.539771,-9.450608,-7.062703,9.383250,9.022827,-2.693112,6.215729],[3.844270,-5.742139,-8.024053,9.310516,-7.882482,-0.373450,7.267760,3.171993,6.409600,7.936960,-7.006057],[0.548320,-9.851966,-5.228382,3.472255,-3.776374,3.572781,3.984436,-9.439199,-7.083691,7.642184,-8.457723],[-2.465722,-1.581717,9.480335,5.159463,8.518352,1.433078,4.223151,-6.854733,5.217232,-6.734346,8.347278],[-7.360022,-3.003277,4.544329,-9.663768,-9.926180,8.413953,-8.284977,-7.537027,-6.275552,-3.355461,7.343334],[8.389954,-8.628655,0.260169,-5.084969,-4.543058,-7.206878,1.843140,3.304405,-7.395558,-5.117173,-9.403020],[-7.656365,-8.856596,-1.228093,-3.239631,1.532722,8.418886,-9.848203,-1.223926,-0.478842,8.907602,8.564766],[-3.783190,-2.829239,-9.776408,-4.381939,6.075349,-6.439119,7.277074,0.179526,-3.361297,-3.285826,-8.130776]],[[-6.278126,1.147337,-2.116840,-6.199734,3.146536,-5.680068,0.484896,1.626620,5.581371,-1.713850,-5.434993],[-0.205723,4.218195,-1.481250,-1.761996,-4.365746,1.825189,8.994285,-1.684748,0.620960,-2.207880,-7.374106],[1.145296,2.155233,-0.176452,-8.134337,-9.327114,-9.277924,1.023316,8.211665,-1.546081,5.886091,1.975579],[7.231094,-9.720003,4.562023,-6.689624,-7.226189,7.350085,-9.418276,1.126521,0.610597,7.113628,4.869514],[-7.003065,-7.370156,-5.151303,1.692484,5.047526,8.144360,7.692700,-6.783814,-8.579065,4.732674,0.732095],[-8.396271,-9.308204,-0.634186,0.508935,7.818732,-6.044895,-0.253157,9.302123,-4.049126,-8.758589,-4.783127],[-0.149114,9.461770,2.141286,3.929874,-3.736988,9.918668,6.621904,-2.429014,7.348530,-1.717287,-8.804882],[-0.066453,-2.919741,-1.572871,-1.301800,8.797619,2.245168,-4.603068,3.929585,4.853707,9.401038,3.159742]],[[-2.336153,4.310486,6.685843,6.569474,4.261226,2.498518,-5.044725,-4.119235,-5.299038,-5.154011,4.256467],[-2.227410,-7.388617,-9.006414,-8.635248,-3.562776,-6.297763,-0.710436,8.095457,6.654351,9.846533,6.830225],[-7.658243,-2.575070,5.520711,-2.070138,8.028127,8.553657,6.528369,9.831849,7.801072,-3.262764,-0.699231],[8.860280,8.294773,-4.960430,3.401578,-6.985367,5.044709,-7.721369,4.593402,4.780703,8.316702,-7.433713],[7.184187,-4.889896,7.849375,-1.219406,5.575483,-8.649979,-6.854996,7.920104,-7.308935,7.484948,3.053549],[-4.849546,-7.247184,1.060124,-0.889189,-7.735192,-2.338749,2.483335,-6.040082,6.353510,8.771640,-0.315660],[-8.302269,-0.434061,6.110822,-2.201608,7.849477,-6.715843,3.158020,-0.644148,2.644807,7.807070,9.905094],[-2.716932,-7.004545,-7.475690,7.572178,2.026226,-5.850511,-7.302999,2.627771,-1.395472,4.534663,-4.812278]],[[1.253845,-5.330426,-9.381920,-8.262463,-1.949487,3.320829,-2.181637,6.510803,-5.394981,7.849716,-3.116477],[-5.325736,-3.969109,-2.327303,8.201306,-9.708708,5.324842,-2.630713,-4.971431,-9.468846,7.334241,1.041225],[1.335399,6.983978,4.097641,-0.468021,-8.613978,5.680800,-9.345471,-1.619561,4.429149,-6.928911,6.432550],[-0.756918,6.422788,6.304384,-4.894992,-9.478858,2.997020,9.228602,-8.775557,-5.941362,-0.695440,4.033689],[7.404787,6.188298,7.949936,-8.597446,-7.072266,-8.764049,6.361431,-8.118297,6.301004,2.432168,-9.476872],[2.422059,-9.531075,4.748269,-5.599512,2.903510,-8.996000,-7.581771,-2.188978,-6.061010,4.602712,-8.360057],[-8.440672,-0.034837,3.959147,-1.776538,-1.914660,-5.494471,5.821150,3.521574,0.403890,-2.433227,7.285581],[1.143614,3.637868,-1.754524,-3.047210,5.408560,2.529391,-3.664159,1.056629,-1.732079,4.570705,-8.442652]],[[-0.801153,-8.243183,5.198714,5.773882,7.269471,-4.631044,0.947303,8.174898,-9.400754,-0.190356,-4.594431],[-6.660712,-7.551798,6.288803,-1.868992,-4.784359,3.102126,-0.891331,9.011552,-4.165288,-9.325972,1.764739],[8.812744,4.790054,1.834786,-9.927932,9.711938,0.873729,8.934452,4.141037,0.825996,7.276496,-5.633443],[5.813543,3.090926,-2.404375,-9.139498,2.831053,-7.832042,8.886840,2.658038,6.650767,9.646068,-3.708226],[4.674768,-1.089440,3.215439,5.661110,5.583048,-4.619967,-5.559143,-9.959347,-8.831350,3.354888,-3.258482],[8.177825,-0.071900,-2.642098,0.109713,-0.460411,-2.009767,6.980862,-0.123741,6.848552,4.376478,8.460898],[-6.700463,1.699674,6.336379,9.753189,3.692253,8.208168,9.255796,1.513677,-5.526266,7.763031,-0.360577],[0.066047,-8.799906,-5.530878,-5.174471,1.375489,0.039292,8.113134,7.047747,3.148120,2.221556,-9.506955]],[[-8.463972,-4.971233,-5.920857,-9.320054,-9.053040,7.738003,-1.560319,8.653262,6.552885,-8.209152,9.241209],[-0.954733,-2.557460,5.316839,-1.457480,5.445073,-1.271516,-4.067823,9.642182,0.265463,-1.482630,-2.136481],[5.167278,3.613824,3.040932,5.658426,8.996565,2.130178,8.742236,-5.425793,6.711033,6.615789,9.937750],[-3.152504,-9.988141,-9.978548,-9.822008,0.001847,-2.503964,0.693006,-3.920848,-7.611100,-6.590408,-1.121309],[2.566261,9.804847,-1.269574,-1.017778,-2.166665,-8.858956,-0.040742,3.740627,-0.680748,-2.291467,7.185828],[-3.285407,0.135273,-6.279581,-6.839659,9.858809,2.756963,-5.782865,9.801204,7.495179,5.934968,-7.329999],[-6.942624,7.098429,8.912332,-6.640807,8.569809,-0.319514,1.996454,-4.256015,8.847626,5.724985,-8.842003],[-5.816129,-8.800330,-6.920783,-8.037276,-7.908052,-7.754717,6.250006,4.647021,7.487509,-2.810275,3.013707]],[[-2.373588,6.164834,-2.188150,-0.594798,7.685123,-5.715362,-2.988506,8.411289,-4.681949,4.326530,1.308015],[-8.141844,-9.992446,2.609275,4.609623,0.099005,-3.116000,-1.904358,4.813577,-1.751986,9.065406,2.876349],[9.096597,-0.581581,-3.648446,-2.839981,-0.716829,-2.743796,-6.656812,0.615524,6.905262,9.012589,-8.931058],[-7.493112,-1.638603,-9.135259,5.115171,1.371724,-2.192962,-6.262247,-5.477795,7.450977,4.828998,2.766577],[3.271803,-8.230081,2.000140,0.022030,3.558857,-9.981715,-3.217171,7.794405,-8.517234,-7.696152,2.414142],[2.325117,0.020764,-5.652738,-5.598813,9.520272,8.293574,-5.205372,4.737039,-6.991236,1.965100,6.332352],[3.741300,-8.318550,3.709551,-5.783600,8.595249,-8.573980,-5.541402,-0.289803,5.055414,8.959216,9.712368],[3.857484,7.736663,4.454473,-9.953152,-2.538364,7.375083,4.731901,9.330046,4.397519,3.614592,5.903903]],[[1.067113,6.723353,8.265976,0.121948,-6.080676,-9.527428,-2.440648,3.685668,-5.148515,-2.392313,-2.119973],[-1.982558,4.346132,-5.669924,-7.233331,2.062580,0.614011,-5.224370,5.591217,7.994328,-2.290262,1.740906],[7.533947,-4.397814,-7.517858,-0.910973,-5.542409,-6.101028,-7.659285,1.557365,-5.543069,-5.710278,6.215726],[3.863925,-7.106938,-7.010023,-3.610791,8.039204,-4.629225,0.762108,-7.003550,4.660168,-5.667954,5.362951],[3.117821,5.187152,3.031878,8.047442,-0.395247,5.256258,-5.619591,-2.280134,8.220533,-1.168992,8.662239],[-2.489734,3.776690,-1.938396,8.824360,7.416445,-9.942469,-5.879870,-8.366525,-7.205915,-8.439766,-7.143937],[-2.055377,7.076700,-7.858986,2.130682,0.888347,-7.330957,-2.111022,8.038141,-2.202266,-9.336070,6.350809],[-8.199987,-6.797156,1.985703,-3.132838,6.835474,-7.995969,-0.851644,1.220349,-5.756028,6.946487,8.260904]],[[4.013439,3.073967,5.031661,2.848853,-5.315305,6.864161,-4.477567,-6.351099,-1.522303,3.821559,-3.700135],[8.849884,-8.640326,3.130399,-2.817667,4.228554,4.583824,0.573983,-6.321566,0.167621,-1.515117,4.737964],[3.228504,7.442691,-0.696626,-5.886764,-4.786076,-4.476837,4.115172,-4.955703,-5.018309,-8.152384,-6.254950],[6.962438,-2.736299,-6.206809,1.276367,3.102076,6.026241,-3.344599,-7.428818,-4.341438,-7.229008,4.012753],[-6.766896,-2.271879,6.984999,-0.191839,-8.059448,-6.385562,4.977227,-2.049658,-5.867698,3.291283,-6.148077],[8.167977,5.044486,-7.378638,-8.250866,3.103421,1.117130,-4.568558,-8.570943,8.485888,-0.307303,5.002480],[-3.998957,-9.670669,-5.102846,-5.863420,6.852738,3.165552,2.281114,-9.689467,4.380133,4.942516,0.054205],[1.470092,-7.559278,5.457310,-6.463868,-3.402100,-8.452413,0.590113,3.621216,5.717172,-4.475425,8.250444]],[[-5.997810,7.379191,1.261459,0.773631,-1.127185,2.789646,0.833139,7.662801,3.833305,-5.449698,-7.974521],[-2.848871,2.531366,-9.422680,-5.107667,7.321123,-6.877993,-0.993621,0.724562,-8.665709,-3.830792,9.485025],[-9.165145,3.152197,-8.415845,4.791126,-9.438492,-0.332431,-4.312971,2.567854,-4.476434,4.410773,7.696158],[3.056013,4.903918,1.281883,6.502793,3.541517,2.893956,8.891707,-6.984990,4.084114,4.219214,-1.133789],[-1.580097,-7.642997,9.160364,7.963882,-3.377232,2.781513,0.991550,3.412800,1.759758,-7.494998,-9.700666],[9.064643,1.892340,4.641543,-3.205232,-6.778374,6.093797,-4.460261,-0.423029,6.438265,-8.898615,7.295003],[0.890651,-6.450106,8.595081,-0.785299,-9.537674,1.414744,-6.932991,-4.066511,-6.376029,2.045453,-9.347793],[-3.148530,-4.191475,2.013153,9.410462,-1.542680,2.287672,2.845912,9.798640,-3.909323,9.329458,3.551575]],[[-6.981484,1.727673,-0.770653,-1.237851,-8.218773,-8.020545,3.479990,8.134058,-2.392483,9.264014,-4.361825],[-9.131046,-5.774547,1.768659,-6.139770,7.884321,3.315702,-3.641207,-8.921087,-3.451252,7.802794,3.077386],[-1.924199,0.142777,-6.561533,-9.366332,-3.234700,-4.859312,-0.492375,-0.924463,7.354664,4.806770,-9.917234],[-1.582592,2.578594,6.939057,5.389801,8.934841,5.384934,-3.695154,8.742732,-3.884462,-5.101200,4.906024],[6.654302,6.265648,9.559492,2.516254,-8.611883,-3.256126,-6.199839,2.018322,-9.969241,2.085204,4.384706],[3.583286,-0.623703,-0.825410,1.745336,8.856257,-0.027798,7.933326,-0.746635,4.190670,-3.345742,-6.631201],[-6.616746,2.156701,-5.828265,-3.627439,-7.995719,-0.096850,-7.091118,2.211392,-6.081141,-2.776611,-1.446879],[2.377489,-9.211071,1.494096,-9.381116,2.309976,9.981342,-3.284827,3.345173,-3.357085,-5.477437,-2.772888]],[[7.828989,-6.764993,4.972535,-4.933695,-5.195955,-1.644112,3.134413,-3.177422,6.063623,-4.256460,-0.115857],[-8.709117,8.147475,0.665074,5.774206,-4.539540,-9.519657,8.530032,0.414061,5.298709,0.937128,-2.109965],[6.894951,-8.488004,-6.226945,-5.863950,7.597891,-5.127483,9.969062,3.162715,-9.314143,3.277257,-5.696448],[-6.868723,5.323013,-0.739050,9.584454,2.366735,4.742978,3.694242,-0.136312,-0.611627,-6.052373,-7.421808],[-1.890903,-3.147429,-2.191475,9.474821,-4.704859,-4.808475,5.436105,-1.361025,-8.063660,-5.847041,-9.731208],[4.523602,3.525529,-5.734003,4.544932,4.067326,-9.346097,-9.437688,5.067640,-4.896802,9.003193,4.623980],[3.171788,7.824116,2.355894,7.732018,4.423546,-7.301551,-3.954420,-2.483910,-6.505666,3.894531,6.208398],[4.245140,-7.776296,1.210688,-5.857357,-2.922650,-8.605302,7.280551,6.562667,6.984897,-7.301497,0.590811]],[[6.787387,-2.349469,5.916193,-8.769220,9.327950,-6.049378,2.863836,9.096664,-0.817911,3.181486,7.173983],[9.547397,9.133432,8.758192,-3.791927,-1.469059,-7.997005,1.931994,4.805831,-4.578322,8.495047,-7.270793],[-5.709683,8.275499,7.401444,-6.268262,2.495601,-2.692750,-6.876720,-2.947063,-3.144249,-4.838970,1.406017],[6.450605,-5.821420,0.875264,-8.472341,-1.304414,0.956688,9.583704,0.958215,8.179829,0.634479,9.121960],[3.110557,4.854968,1.803812,-9.204900,1.329918,4.741238,-9.628215,-9.861283,-5.548629,0.575082,-3.901720],[-9.965403,-9.460814,-6.249100,9.564691,-3.616573,-6.780734,4.623513,6.000308,-7.221461,9.834768,-0.874033],[5.578804,-5.212921,-6.439313,5.688469,-6.133511,-3.717315,-0.146311,9.543933,-3.098697,-2.763900,1.756535],[-6.273804,-3.572792,3.652504,-9.028733,0.375435,-8.692846,9.103218,0.750006,2.025349,3.570923,0.427153]]], dtype = "float64")#candidate|6298|(15, 8, 11)|const|float64
bop_6299 = relay.logical_xor(call_6291.astype('uint32'), relay.reshape(const_6298.astype('uint32'), relay.shape_of(call_6291))) # shape=(15, 8, 11)
bop_6302 = relay.logical_xor(call_6292.astype('uint32'), relay.reshape(const_6298.astype('uint32'), relay.shape_of(call_6292))) # shape=(15, 8, 11)
output = bop_6299
output2 = bop_6302
func_6313 = relay.Function([], output)
mod['func_6313'] = func_6313
mod = relay.transform.InferType()(mod)
mutated_mod['func_6313'] = func_6313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6313_call = mutated_mod.get_global_var('func_6313')
call_6314 = func_6313_call()
output = call_6314
func_6315 = relay.Function([], output)
mutated_mod['func_6315'] = func_6315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mod.get_global_var('func_5925')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_6323 = func_5925_call()
call_6324 = func_5925_call()
const_6346 = relay.const([[[-4.660506,2.185179,5.170523,1.624791,0.750675,-8.285195,5.514146,7.753786,-6.086764,5.361781,-3.760650],[7.076407,-1.405587,6.215341,6.324620,4.472630,1.395474,-3.962365,-3.377462,8.988091,3.884335,5.536355],[8.319029,-1.852547,-3.141642,-6.214100,-6.991605,4.446765,-6.801747,-3.321798,1.046037,5.901514,2.152196],[-9.452512,1.635755,2.247240,6.692974,4.205263,6.976458,3.854142,3.655550,-0.807404,1.781884,-6.183737],[9.893252,6.625874,-0.027946,1.041825,-4.754053,-4.239972,2.624028,-5.120500,-4.790394,8.111934,6.663275],[1.253995,-9.045502,-4.315200,9.625355,8.090048,-4.780968,-2.384075,3.576493,-2.444402,3.379223,7.759269],[-8.635303,3.735246,5.791732,4.044501,7.440102,6.973162,-7.498563,3.456477,4.960496,-2.843417,4.540466],[-1.234945,-6.840133,-2.152021,6.206737,-7.916171,-3.199307,-6.004429,-8.196220,-9.342082,8.077729,-8.235430]],[[-3.172047,2.104696,-7.348838,5.707054,-6.952943,2.583877,-8.432670,-2.244872,1.361156,7.261050,6.605086],[-0.476774,1.432129,3.450077,-6.684400,8.052890,-3.963668,-9.954782,-8.872995,-3.398792,-3.725815,-9.945341],[-2.215989,-4.446538,6.871284,9.563297,-4.839444,9.172560,-1.724840,-8.498114,-6.949428,1.068790,-0.160366],[5.946945,9.300694,-1.654475,6.512084,-1.746777,8.455877,-2.935106,1.776801,8.481556,1.561928,3.381500],[-0.359506,-7.181094,2.857971,7.496124,-8.618081,3.936740,-5.855451,0.568658,-2.716297,6.281728,-1.305034],[-6.627972,0.203493,1.232308,-7.612530,3.838135,-5.929688,7.337684,2.729700,-9.947731,-4.914347,-4.571481],[2.597081,-8.602542,2.909343,5.616194,5.451073,1.543846,-3.062322,7.203153,-3.286311,2.176390,5.670364],[-6.407884,8.443024,-7.101891,-7.206794,-2.612085,-6.678953,2.010728,5.175762,9.159879,7.080421,7.053562]],[[-8.349838,-4.892115,0.673041,0.444973,8.382732,-0.086617,-8.907993,-3.533001,2.124303,-1.058823,1.185717],[3.989691,2.948578,-4.854215,-7.375510,-4.290019,-0.165728,6.824299,-9.404217,-4.450180,-6.283558,-2.961633],[9.323902,-8.535868,0.301686,-8.362812,-2.036116,4.365304,1.931231,-2.924066,-7.098260,-2.794705,-4.828097],[-0.909675,-5.844312,-9.046129,7.573661,-4.768908,2.647900,1.375687,1.819167,5.939336,-4.755235,3.432836],[-8.087273,3.498102,-7.102378,-1.514323,8.736269,6.812951,9.728237,-9.454338,-3.545638,-1.103803,2.100677],[3.689342,6.511322,5.996165,6.998447,3.442219,-8.664486,-2.164764,-6.569987,9.995435,-1.725188,-2.697323],[-9.657561,-8.894670,5.608256,-5.440035,9.473635,6.877769,5.047147,-1.337674,-6.816128,-9.259263,-1.110388],[4.503096,1.357527,-0.544869,-4.518174,-9.387119,4.938392,3.849408,3.694405,-7.747301,0.210107,9.713109]],[[-3.160521,-5.625569,-6.723568,0.290182,7.352764,5.177003,-2.335889,-4.557496,-4.024896,5.662939,-2.834835],[-9.558229,4.977219,-0.529600,6.067858,1.314021,2.277978,-5.113404,-1.016081,-2.604038,-7.090367,9.099846],[4.700093,9.386683,-9.534879,8.337956,-5.361333,-1.146432,-8.353127,-4.612525,-2.563149,3.214509,5.186615],[1.828231,-1.603598,-3.271455,-8.965644,8.089366,5.234619,4.627857,0.477197,-2.789164,2.594542,6.024718],[2.114373,4.277695,4.802835,0.778203,-3.073500,7.498924,-8.266449,5.044600,8.225409,-7.479354,-0.153663],[-9.196070,2.425671,8.479359,1.928771,-1.822277,-8.275827,-6.903934,7.198925,4.796199,3.494459,-8.293275],[-8.612193,-7.354107,-5.602265,-0.873824,-7.730168,-2.389427,-9.349667,-9.695219,4.362157,-5.862917,-4.216016],[8.638468,2.440278,4.060489,7.133980,-3.532318,-1.181319,5.325795,-1.894506,7.115120,-6.974166,-0.481027]],[[0.993736,-1.345766,5.647986,-4.280181,-4.288870,6.175964,-7.763120,-9.821740,-6.988039,3.568418,5.297307],[1.923828,2.846203,-8.144485,9.660235,-1.268796,-7.072738,4.086005,3.404934,1.469108,6.677190,3.974947],[-9.549465,-2.591062,8.967760,1.872535,-7.534760,-2.347885,3.600971,-1.331691,1.583486,6.501339,9.320463],[8.590193,-5.066237,-8.318575,-3.039121,-4.853574,3.198277,0.110765,-9.325107,1.235287,-5.499483,-8.158803],[9.470028,-8.011828,6.276003,-0.853364,-3.802334,-2.885020,-9.237156,-3.884623,-3.018974,5.125334,1.085383],[-5.724711,4.645473,2.678281,1.013876,9.782121,-0.020946,6.078410,6.823319,-4.753776,-1.481894,3.872656],[-0.752944,3.091958,-5.153065,-6.723374,2.775538,3.860706,7.055909,-1.683134,6.573681,8.029801,3.360559],[7.653123,-2.427625,-3.188321,-4.406773,4.329847,-3.531116,-7.727406,-1.909311,-8.541175,5.403235,-3.933119]],[[-2.951305,-0.334974,1.670038,9.581560,-1.063689,7.801360,7.661475,3.486005,6.590640,-7.521259,6.477268],[-9.774214,6.858482,-7.596298,2.014313,0.481139,6.942824,4.734593,5.758238,-4.763351,4.788752,-5.945406],[9.487024,9.987960,0.892927,-0.854204,-7.705745,-2.556105,-9.275143,-3.398865,6.800804,5.381284,1.742898],[4.332722,-3.182292,1.680157,-0.315053,-8.692834,8.219434,-1.217754,3.875743,-4.069947,-6.561031,0.346546],[4.763650,-6.890917,-7.736690,3.410453,-6.660698,-1.177250,-9.444961,-2.669148,-8.470371,0.914293,-6.284952],[-6.124376,-3.206626,5.193537,4.169812,6.602550,2.952744,3.897353,-4.908754,6.874125,-6.988530,0.813407],[3.679599,6.141740,-8.174690,-1.016767,-6.422460,-4.039799,8.425907,1.283378,-5.708129,1.073140,-9.678005],[4.030578,2.711953,4.760973,0.474262,4.905729,6.468603,-3.166663,2.587673,-3.393606,8.512056,-6.782774]],[[2.110916,5.499617,4.043300,0.609097,4.311257,-2.849663,4.907889,-9.790392,-6.228064,-1.356590,-0.909612],[3.271021,5.458175,-5.082501,-4.530992,5.307831,-0.631422,8.472825,8.680406,-0.509567,-7.200503,1.397009],[-6.203777,-2.145414,5.628513,-4.641000,7.754048,2.680502,-6.926035,1.112187,1.313088,-5.624877,5.914935],[2.283008,-2.329172,2.891159,-8.792087,-6.815752,7.616573,8.249348,5.322563,-9.013317,2.712342,5.486228],[4.478844,-9.292556,2.701912,8.752036,-0.813838,5.600751,-0.634724,4.174039,-5.675669,7.995343,-1.638581],[-9.501117,3.534890,-0.412051,9.953030,-8.652558,-3.719946,1.294579,1.532999,-7.033739,7.582292,-7.266987],[7.852864,-4.542219,5.636163,0.941344,-3.989525,-0.872522,-5.603933,-1.618784,-2.634625,6.024333,3.815606],[7.618292,8.340938,-4.849417,4.770019,-8.275427,3.285084,-4.205467,-9.351272,-0.410430,-3.173379,-7.674827]],[[-8.945205,-4.260619,7.434687,0.874455,-1.559057,9.267679,1.925779,-0.995760,-1.817766,1.254638,7.929553],[0.115236,3.387485,-8.302890,-6.511127,-7.769828,6.061704,0.300626,-6.917442,2.438380,1.312325,-4.895298],[-9.472789,-6.185039,0.998430,-1.776044,0.853197,2.965139,-9.529348,-6.781161,-2.918638,4.126605,2.137158],[7.537927,2.807688,-6.825137,1.120778,6.331316,3.672135,3.796129,6.409057,3.755179,9.881522,7.504385],[-3.562167,-5.246722,9.324019,-4.670392,-1.653093,-7.276004,-5.452350,8.329962,-8.421444,-9.381285,-8.478414],[-0.795584,1.834477,-7.961331,-9.098085,-7.425077,-5.805999,-2.548003,-4.073343,-8.721166,-0.404003,3.142180],[-3.997266,-9.236089,8.450469,-3.504146,-6.408757,-2.737089,4.598412,-6.804605,-4.453792,-9.919588,5.949244],[-9.030433,-3.268159,3.402072,-8.471352,7.747290,9.223205,8.747666,-4.086405,-2.230217,-5.806600,2.811674]],[[1.535497,-1.360304,-6.821088,-5.721140,9.319690,-9.242580,-9.434568,-1.182997,-4.906038,7.842705,9.531988],[-0.500990,-2.712171,5.548681,4.321285,-1.407599,-2.276920,4.047288,-1.166770,8.362236,-2.534495,4.857219],[3.143421,9.907337,2.972810,2.464627,5.214449,2.288084,-4.652032,1.665326,7.796985,-9.415576,-5.832488],[-3.741910,-2.320183,-2.182554,7.088630,9.562198,7.440773,-1.582455,7.435986,6.385742,-8.900175,-8.772648],[4.382536,-6.910079,-2.771226,5.651134,-3.320214,9.860727,6.103854,-7.360877,1.514681,1.988455,-2.229920],[6.031162,9.138038,4.324643,8.338703,-6.668783,9.660775,1.756207,2.513905,-0.020507,8.167692,-8.344170],[9.088662,9.390264,-5.531060,8.563074,5.049064,-4.017529,0.718049,-7.674626,-6.840633,-1.994598,5.366275],[4.623695,-2.005272,8.697073,3.469231,-9.562358,-3.831530,5.570297,-8.294721,7.236370,2.063123,-9.471264]],[[3.316806,-8.590488,4.986187,3.472452,-8.499092,1.460331,-7.114759,-6.529573,9.721742,-7.909434,7.286047],[-8.289815,-5.942614,3.819530,-3.856867,3.633998,-5.909210,3.252819,-9.842851,-3.476052,2.606367,3.928047],[-1.948675,2.804804,-6.983487,6.239986,9.230790,4.814503,-1.032349,5.376095,-9.803417,-7.452362,-4.727067],[-3.498278,1.871989,-7.433212,-5.051731,-1.750014,8.667514,-2.328695,-8.390706,1.523886,-7.832323,8.474311],[3.372843,0.474603,4.462068,-1.377015,0.048042,-4.532955,-8.176150,7.841060,-3.358463,2.310752,1.844935],[1.092339,-8.531725,1.711435,5.569072,3.973335,2.259709,-7.274510,-2.449470,9.563303,5.866440,-9.171526],[-6.960991,4.548322,-2.732398,-0.305554,-2.618751,7.690236,9.110339,5.593420,4.081865,5.632407,7.392493],[-7.833079,4.666015,3.975169,3.099949,-7.947868,4.104228,1.861024,-2.632761,8.405383,9.632486,4.163127]],[[0.161133,-7.524385,3.493671,-1.166943,5.634298,5.551221,-2.833942,-6.525886,-3.277826,8.924765,-2.910181],[8.134167,-5.606653,0.555503,3.187321,-8.650454,-0.513780,-9.137219,0.580007,-7.799755,1.307793,2.027186],[2.011078,3.157518,-7.457853,0.314600,0.531594,5.672872,-5.452044,-3.262959,-6.758582,-4.426378,5.552236],[-9.415205,8.820870,9.536827,-6.022995,-9.161181,-2.946314,-3.195541,-9.334152,3.445201,-3.094209,-7.540300],[-9.001989,2.359644,5.051707,2.165663,-4.440809,3.054906,-0.629883,-9.628582,9.794107,-3.012186,-7.700088],[-4.768683,0.330283,4.527551,1.506811,-1.272787,-7.413060,-4.693179,7.926551,-1.137182,4.570790,-6.046251],[-0.615617,8.163422,0.738513,-7.524233,-4.805977,3.260806,-8.427127,6.663151,-9.348002,9.541484,6.652450],[-9.917510,1.715160,-2.459302,2.961387,0.701343,7.973317,3.330733,-8.516008,0.076814,7.592487,-0.733578]],[[4.513972,9.552523,8.260717,-3.555453,-5.085271,-1.371990,7.006289,-0.523522,0.286960,-9.572053,-2.545407],[0.091591,3.943023,3.411858,4.628786,8.388492,-2.383454,-9.009742,4.198175,-2.205610,-1.345658,-7.320737],[-8.521261,-9.487078,-7.353168,-1.945634,-0.478572,4.989663,-8.083477,-4.680634,9.937532,-9.423532,-7.336128],[9.593706,9.851226,8.787986,-9.500849,4.871700,6.854338,-2.098752,6.787936,-6.790008,8.458567,2.062234],[3.081616,4.973120,3.200975,-9.816825,9.772036,-9.573566,0.216638,-4.152793,0.920195,-0.349510,5.077071],[-3.898097,-5.257204,-5.309163,-2.561099,0.537231,-9.422021,-6.585926,3.909201,5.495593,3.094159,2.415997],[-3.909969,-2.876280,-8.435319,-9.764342,-1.095799,-0.859317,3.515287,-0.873230,-4.856809,6.238117,-8.730112],[8.330826,-6.644441,-1.842852,-3.552000,3.712243,9.327080,-6.679230,-2.094448,9.224178,5.237454,6.002698]],[[4.667296,-0.442512,-8.532345,-1.204787,-1.637707,-4.534641,-0.459728,-6.759633,-1.149183,9.583177,0.693128],[7.218568,-3.520504,-4.819926,-5.452255,0.001572,9.897639,-4.341441,3.078536,4.910892,-4.449890,5.778966],[-5.176677,8.454015,0.809644,3.044096,-1.777353,-1.952260,2.308705,-6.883243,5.753992,9.630094,1.165921],[-8.621894,-9.302867,-8.007369,5.218518,-6.253297,6.690434,-8.714898,-3.438680,-8.080145,8.235374,-6.919242],[2.924733,-8.019196,-6.315496,-1.954285,4.964133,-3.797767,-0.124808,-6.418676,-0.174503,3.855962,-6.424777],[-3.390594,3.692717,9.140242,-7.002267,-4.598921,-1.384942,-6.295513,-3.348916,7.916081,6.692016,-7.100257],[-5.026443,8.412136,5.441171,6.655244,-5.866434,-7.166937,-1.692182,-9.760903,0.749122,-0.998209,-8.789769],[-7.257284,5.034863,-2.676438,-1.629095,-9.215855,-9.142054,9.870502,2.514324,0.889052,5.343912,0.579022]],[[-7.079752,-0.540830,-2.940079,0.516123,5.921450,-5.930002,5.190181,1.455382,9.598398,9.239666,0.984462],[8.483934,3.859200,-9.861251,-7.913649,-6.095241,-7.789922,3.726916,1.602489,2.956867,-3.103235,-5.722587],[-2.519910,1.158657,7.945571,8.583868,-3.717112,1.565923,-6.844416,-8.097055,-3.434016,5.736227,6.167357],[2.748633,3.504279,7.395826,-0.783219,-6.281222,2.863939,-1.838734,-9.220775,1.496607,-5.924856,-8.863013],[-8.226145,-7.396535,4.110777,2.932758,-4.884210,3.899891,7.207531,9.596755,-8.613611,6.825742,-7.763226],[7.046181,1.142893,5.325124,8.598517,-1.175921,-2.891374,-8.745429,-0.908095,-0.282051,0.238231,5.430142],[-5.346284,-7.475918,-1.252826,-6.521556,-4.154378,1.354439,-5.595501,5.310386,-9.983502,3.567737,-4.222857],[-2.198167,-5.410915,0.169643,-6.027992,-0.244867,-0.552256,-4.120246,-5.171141,9.528690,-5.275603,6.013308]],[[8.866608,-1.261022,-0.276495,-4.750473,-0.757113,-1.870647,9.918227,-8.843863,-1.938446,-1.342258,8.897386],[5.877189,0.979210,-3.745816,9.516856,-2.462671,4.991883,-4.824778,-2.490914,-5.838171,0.451126,0.191616],[4.974256,-5.775112,6.032991,-8.713731,9.686865,-2.189775,-4.297515,-7.672311,-1.098866,-7.065003,-1.011181],[-7.856439,0.637832,8.982578,9.955522,9.134128,-9.467864,-5.313299,-9.861490,-9.481252,-9.731760,-5.783946],[-4.817007,-6.288144,1.486300,-7.246699,8.482776,-2.404798,1.090163,7.528924,7.980172,6.576796,-4.260332],[5.014062,-5.531506,8.290927,-8.567919,3.820191,-6.422783,-9.439472,-4.728650,6.546603,9.085794,-5.235352],[9.357645,4.894609,-7.500535,-3.609081,-7.309970,9.845458,-0.522042,9.258579,-4.291990,4.393807,-6.907868],[-2.032291,-0.580640,-0.739140,-7.225443,-6.227509,-7.857436,-4.390605,0.988832,6.955522,-6.836912,-5.895538]]], dtype = "float64")#candidate|6346|(15, 8, 11)|const|float64
bop_6347 = relay.divide(call_6323.astype('float64'), relay.reshape(const_6346.astype('float64'), relay.shape_of(call_6323))) # shape=(15, 8, 11)
bop_6350 = relay.divide(call_6324.astype('float64'), relay.reshape(const_6346.astype('float64'), relay.shape_of(call_6324))) # shape=(15, 8, 11)
output = bop_6347
output2 = bop_6350
func_6357 = relay.Function([], output)
mod['func_6357'] = func_6357
mod = relay.transform.InferType()(mod)
output = func_6357()
func_6358 = relay.Function([], output)
mutated_mod['func_6358'] = func_6358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5760_call = mod.get_global_var('func_5760')
func_5762_call = mutated_mod.get_global_var('func_5762')
call_6384 = relay.TupleGetItem(func_5760_call(), 0)
call_6385 = relay.TupleGetItem(func_5762_call(), 0)
output = call_6384
output2 = call_6385
func_6405 = relay.Function([], output)
mod['func_6405'] = func_6405
mod = relay.transform.InferType()(mod)
output = func_6405()
func_6406 = relay.Function([], output)
mutated_mod['func_6406'] = func_6406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6313_call = mod.get_global_var('func_6313')
func_6315_call = mutated_mod.get_global_var('func_6315')
call_6407 = func_6313_call()
call_6408 = func_6313_call()
func_5721_call = mod.get_global_var('func_5721')
func_5724_call = mutated_mod.get_global_var('func_5724')
const_6413 = relay.const([[-5,-2,-8,-3,8,-6,4,-8,-8,7,-9,-4,3,7,1,7,10,-3,4,5,-3,-7,-7,-5,-7,4,3,-4,5,10,7,-4,-9,-5,2,4,-3,2,7,4,10,-10,7,1,3,9,-1,5,9,10,2,-7,-7,2,6,6,5,9,7,-3,3,10,-5,3,-5,-5,9,1,-1,-7,-10,-5,8,6,-7,-8,2,-4,3,1,2,-6,-8,-6,9,-9,6,-3,-9,-4,1,-7,-9,8,-10,-3,-4,1,5,10,1,-2,-3,-5,-5,1,10,7,-8,-5,-5,-1,7,-3,-1,4,-2,1,1,-2,-5,-2,-10,8,7,8,-2,-3,1,9,8,-4,-2,-10,10,-1,4,10,2,3,1,-3,10,-2,-9,3,-8,10,1,-3,1,-6,7,8,-3,-1,10,-9,-10,-3,6,8,4,-4,-7,6,10,2,7,9,1,-6,5,-3,-10,4,2,-10,10,-1,-10,9,-8,-7,3,7,-7,-6,10,-7,-8,8,3,-8,1,-3,6,-1,3,9,6,-1,-9,-7,-10,3,5,10,9,-4,7,1,7,8,-10,7,5,2,7,-4,6,-3,-9,1,-10,8,2,1,-9,-1,-5,6,-8,-3,10,10,-7,8,-7,-3,4,4,-9,7,-3,-9,-9,-8,5,-2,1,10,-6,-3,7,-1,7,9,10,6,-6,-2,1,-4,3,1,7,-1,10,-7,10,-10,-1,3,-4,-5,-7,5,-6,6,4,-3,-1,-3,8,7,-6,-5,5,2,-10,-10,-3,4,-4,1,8,-9,10,-1,2,8,-7,8,-4,1,-5,-10,-8,10,-7,-9,6,-3,10,5,-3,9,-8,2,-5,-6,6,1,-2,-5,3,-3,10,5,1,-1,5,-4,6,4,9,-6,-10,6,-9,3,4,2,4,-5,7,1,7,6,-3,7,-4,6,9,6,-2,-1,-6,2,8,7,5,-1,7,-6,-8,2,-7,6,10,-5,10,1,-6,-6,-10,4,-4,8,10,2,6,-2,10,-10,-7,-5,8,4,8,-10,4,-4,9,-2,5,-9,-9,5,-6,-2,-7,-3,-10]], dtype = "int32")#candidate|6413|(1, 405)|const|int32
call_6412 = relay.TupleGetItem(func_5721_call(relay.reshape(const_6413.astype('int32'), [9, 15, 3])), 0)
call_6414 = relay.TupleGetItem(func_5724_call(relay.reshape(const_6413.astype('int32'), [9, 15, 3])), 0)
func_2487_call = mod.get_global_var('func_2487')
func_2491_call = mutated_mod.get_global_var('func_2491')
var_6416 = relay.var("var_6416", dtype = "uint16", shape = (75, 2))#candidate|6416|(75, 2)|var|uint16
call_6415 = relay.TupleGetItem(func_2487_call(relay.reshape(var_6416.astype('uint16'), [5, 10, 3]), relay.reshape(var_6416.astype('uint16'), [5, 10, 3]), ), 0)
call_6417 = relay.TupleGetItem(func_2491_call(relay.reshape(var_6416.astype('uint16'), [5, 10, 3]), relay.reshape(var_6416.astype('uint16'), [5, 10, 3]), ), 0)
output = relay.Tuple([call_6407,call_6412,const_6413,call_6415,var_6416,])
output2 = relay.Tuple([call_6408,call_6414,const_6413,call_6417,var_6416,])
func_6425 = relay.Function([var_6416,], output)
mod['func_6425'] = func_6425
mod = relay.transform.InferType()(mod)
var_6426 = relay.var("var_6426", dtype = "uint16", shape = (75, 2))#candidate|6426|(75, 2)|var|uint16
output = func_6425(var_6426)
func_6427 = relay.Function([var_6426], output)
mutated_mod['func_6427'] = func_6427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6241_call = mod.get_global_var('func_6241')
func_6243_call = mutated_mod.get_global_var('func_6243')
call_6450 = relay.TupleGetItem(func_6241_call(), 0)
call_6451 = relay.TupleGetItem(func_6243_call(), 0)
var_6469 = relay.var("var_6469", dtype = "float32", shape = (15, 8, 11))#candidate|6469|(15, 8, 11)|var|float32
bop_6470 = relay.bitwise_and(call_6450.astype('int64'), relay.reshape(var_6469.astype('int64'), relay.shape_of(call_6450))) # shape=(15, 8, 11)
bop_6473 = relay.bitwise_and(call_6451.astype('int64'), relay.reshape(var_6469.astype('int64'), relay.shape_of(call_6451))) # shape=(15, 8, 11)
output = relay.Tuple([bop_6470,])
output2 = relay.Tuple([bop_6473,])
func_6480 = relay.Function([var_6469,], output)
mod['func_6480'] = func_6480
mod = relay.transform.InferType()(mod)
mutated_mod['func_6480'] = func_6480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6481 = relay.var("var_6481", dtype = "float32", shape = (15, 8, 11))#candidate|6481|(15, 8, 11)|var|float32
func_6480_call = mutated_mod.get_global_var('func_6480')
call_6482 = func_6480_call(var_6481)
output = call_6482
func_6483 = relay.Function([var_6481], output)
mutated_mod['func_6483'] = func_6483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5760_call = mod.get_global_var('func_5760')
func_5762_call = mutated_mod.get_global_var('func_5762')
call_6512 = relay.TupleGetItem(func_5760_call(), 0)
call_6513 = relay.TupleGetItem(func_5762_call(), 0)
var_6520 = relay.var("var_6520", dtype = "float32", shape = (15, 8, 11))#candidate|6520|(15, 8, 11)|var|float32
bop_6521 = relay.minimum(call_6512.astype('uint32'), relay.reshape(var_6520.astype('uint32'), relay.shape_of(call_6512))) # shape=(15, 8, 11)
bop_6524 = relay.minimum(call_6513.astype('uint32'), relay.reshape(var_6520.astype('uint32'), relay.shape_of(call_6513))) # shape=(15, 8, 11)
output = bop_6521
output2 = bop_6524
func_6528 = relay.Function([var_6520,], output)
mod['func_6528'] = func_6528
mod = relay.transform.InferType()(mod)
var_6529 = relay.var("var_6529", dtype = "float32", shape = (15, 8, 11))#candidate|6529|(15, 8, 11)|var|float32
output = func_6528(var_6529)
func_6530 = relay.Function([var_6529], output)
mutated_mod['func_6530'] = func_6530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6104_call = mod.get_global_var('func_6104')
func_6105_call = mutated_mod.get_global_var('func_6105')
call_6535 = func_6104_call()
call_6536 = func_6104_call()
output = relay.Tuple([call_6535,])
output2 = relay.Tuple([call_6536,])
func_6563 = relay.Function([], output)
mod['func_6563'] = func_6563
mod = relay.transform.InferType()(mod)
mutated_mod['func_6563'] = func_6563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6563_call = mutated_mod.get_global_var('func_6563')
call_6564 = func_6563_call()
output = call_6564
func_6565 = relay.Function([], output)
mutated_mod['func_6565'] = func_6565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6405_call = mod.get_global_var('func_6405')
func_6406_call = mutated_mod.get_global_var('func_6406')
call_6629 = func_6405_call()
call_6630 = func_6405_call()
output = relay.Tuple([call_6629,])
output2 = relay.Tuple([call_6630,])
func_6631 = relay.Function([], output)
mod['func_6631'] = func_6631
mod = relay.transform.InferType()(mod)
mutated_mod['func_6631'] = func_6631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6631_call = mutated_mod.get_global_var('func_6631')
call_6632 = func_6631_call()
output = call_6632
func_6633 = relay.Function([], output)
mutated_mod['func_6633'] = func_6633
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6637 = relay.const([[[8.053878,-8.364743,-1.137016],[6.764819,-5.975186,6.743891],[0.552259,0.983104,6.494367],[-2.985960,9.740803,7.496058],[-1.099073,-7.930790,-0.185278],[-9.216305,6.299698,-8.299133],[4.995027,9.511039,6.699004],[3.477083,8.964387,-1.660425],[-2.510456,8.355312,-0.889807],[8.340846,-5.358863,-9.990766]],[[3.423991,-7.915973,2.120739],[-2.087120,-4.214232,-8.925207],[9.881953,-5.227101,-0.821993],[9.861804,6.747672,-0.683899],[-6.692943,6.281450,-7.562721],[0.127243,-7.590276,-7.353353],[-1.224923,-9.918146,-0.652858],[-0.498547,-7.185234,-3.900775],[-7.931357,-8.784924,-4.256141],[8.680930,-7.719996,3.162045]],[[-4.611758,-0.324990,-8.821510],[-6.220446,-6.253715,-3.554194],[-3.654201,-0.807272,4.645926],[3.269505,-6.591971,-7.636969],[6.380006,5.065895,-8.405048],[-4.638979,0.666387,3.970777],[2.476242,4.252502,4.329314],[3.360669,-6.134008,-3.724380],[-9.763687,1.495390,4.711011],[-3.202342,4.457228,-6.333490]],[[-6.072963,-3.654790,-0.140975],[-2.318826,-2.423972,5.672307],[4.380136,9.602451,-2.454564],[1.683504,9.057621,8.145426],[-6.071830,1.679123,-7.834938],[0.829480,-2.864268,-2.120561],[-5.742416,1.521186,-8.853485],[-7.919842,9.364462,-7.156134],[9.335198,-2.446697,-8.517437],[-3.743777,6.259963,7.873659]],[[0.068770,3.958158,-8.800631],[-4.308590,-8.546698,5.840799],[-5.242214,-6.774666,4.974190],[7.734603,-0.285663,-1.988478],[-5.379863,-6.284507,-2.514041],[0.674359,-3.261375,-5.786280],[-7.669265,0.734068,-8.735886],[-0.008445,-9.913520,-8.497694],[7.072075,9.113782,6.161307],[-9.606525,-2.896843,-5.957746]],[[-3.396278,-8.869002,-0.067952],[-2.742308,-0.757134,9.835142],[-3.644744,1.596608,-2.051563],[5.757439,-0.472175,9.021071],[-9.381454,3.149350,-6.685971],[2.478103,9.584299,-9.516295],[-1.484488,-9.329497,-2.726820],[0.546501,1.152457,-1.347172],[-6.160934,4.290754,-8.133156],[4.772629,2.593387,8.932863]],[[-9.010676,-1.468338,-9.745283],[1.640795,2.872677,3.727776],[1.459764,5.500477,-9.704165],[-8.325361,3.746014,2.600506],[-3.107992,-1.163192,9.012153],[-8.950322,-4.846855,6.428066],[8.871761,-3.154500,-2.090180],[-4.717345,-7.111720,1.035076],[5.040108,-2.567498,8.030735],[-9.468059,-1.039412,4.444773]]], dtype = "float64")#candidate|6637|(7, 10, 3)|const|float64
uop_6638 = relay.log2(const_6637.astype('float64')) # shape=(7, 10, 3)
uop_6648 = relay.acos(uop_6638.astype('float64')) # shape=(7, 10, 3)
output = uop_6648
output2 = uop_6648
func_6672 = relay.Function([], output)
mod['func_6672'] = func_6672
mod = relay.transform.InferType()(mod)
output = func_6672()
func_6673 = relay.Function([], output)
mutated_mod['func_6673'] = func_6673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6313_call = mod.get_global_var('func_6313')
func_6315_call = mutated_mod.get_global_var('func_6315')
call_6740 = func_6313_call()
call_6741 = func_6313_call()
var_6757 = relay.var("var_6757", dtype = "uint32", shape = (15, 8, 11))#candidate|6757|(15, 8, 11)|var|uint32
bop_6758 = relay.left_shift(call_6740.astype('uint8'), relay.reshape(var_6757.astype('uint8'), relay.shape_of(call_6740))) # shape=(15, 8, 11)
bop_6761 = relay.left_shift(call_6741.astype('uint8'), relay.reshape(var_6757.astype('uint8'), relay.shape_of(call_6741))) # shape=(15, 8, 11)
output = relay.Tuple([bop_6758,])
output2 = relay.Tuple([bop_6761,])
func_6765 = relay.Function([var_6757,], output)
mod['func_6765'] = func_6765
mod = relay.transform.InferType()(mod)
var_6766 = relay.var("var_6766", dtype = "uint32", shape = (15, 8, 11))#candidate|6766|(15, 8, 11)|var|uint32
output = func_6765(var_6766)
func_6767 = relay.Function([var_6766], output)
mutated_mod['func_6767'] = func_6767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6241_call = mod.get_global_var('func_6241')
func_6243_call = mutated_mod.get_global_var('func_6243')
call_6789 = relay.TupleGetItem(func_6241_call(), 0)
call_6790 = relay.TupleGetItem(func_6243_call(), 0)
output = relay.Tuple([call_6789,])
output2 = relay.Tuple([call_6790,])
func_6798 = relay.Function([], output)
mod['func_6798'] = func_6798
mod = relay.transform.InferType()(mod)
mutated_mod['func_6798'] = func_6798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6798_call = mutated_mod.get_global_var('func_6798')
call_6799 = func_6798_call()
output = call_6799
func_6800 = relay.Function([], output)
mutated_mod['func_6800'] = func_6800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6563_call = mod.get_global_var('func_6563')
func_6565_call = mutated_mod.get_global_var('func_6565')
call_6820 = relay.TupleGetItem(func_6563_call(), 0)
call_6821 = relay.TupleGetItem(func_6565_call(), 0)
output = relay.Tuple([call_6820,])
output2 = relay.Tuple([call_6821,])
func_6832 = relay.Function([], output)
mod['func_6832'] = func_6832
mod = relay.transform.InferType()(mod)
output = func_6832()
func_6833 = relay.Function([], output)
mutated_mod['func_6833'] = func_6833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6313_call = mod.get_global_var('func_6313')
func_6315_call = mutated_mod.get_global_var('func_6315')
call_6834 = func_6313_call()
call_6835 = func_6313_call()
var_6839 = relay.var("var_6839", dtype = "uint32", shape = (15, 8, 11))#candidate|6839|(15, 8, 11)|var|uint32
bop_6840 = relay.not_equal(call_6834.astype('bool'), relay.reshape(var_6839.astype('bool'), relay.shape_of(call_6834))) # shape=(15, 8, 11)
bop_6843 = relay.not_equal(call_6835.astype('bool'), relay.reshape(var_6839.astype('bool'), relay.shape_of(call_6835))) # shape=(15, 8, 11)
func_5800_call = mod.get_global_var('func_5800')
func_5804_call = mutated_mod.get_global_var('func_5804')
var_6849 = relay.var("var_6849", dtype = "float32", shape = (70,))#candidate|6849|(70,)|var|float32
const_6850 = relay.const([-10,8,-1,7,-6,-8,2,4,1,6,-5,-10,10,2,-1,-10,9,-4,2,-4,2,-3,5,-4,-9,10,1,-4,9,1,-2,10,-8,-4,8,9,1,4,-1,6,9,3,-7,-10,-4,-6,-1,8,3,-2,-9,10,-4,7,3,5,-9,-1,-7,3,-10,-8,7,2,7,10,-6,-7,5,4,-9,-7,9,-7,8,8,10,1,-1,7,9,-5,8,-3,-5,-10,-8,-3,6,5,-9,-2,-10,-6,5,8,-1,-7,4,3,-9,-6,-9,-5,-8,-8,3,7,4,4,-7,3,7,8,-4,-5,-1,1,9,-8,6,5,8,5,-3,1,-3,-7,-8,6,-3,4,-9,7,-1,-4,-1,-6,-10,8,10,-5,-6,7,-7,-6,3,6,5,9], dtype = "uint16")#candidate|6850|(150,)|const|uint16
call_6848 = relay.TupleGetItem(func_5800_call(relay.reshape(bop_6840.astype('float32'), [15, 8, 11]), relay.reshape(var_6849.astype('float32'), [70,]), relay.reshape(const_6850.astype('uint16'), [5, 30]), ), 0)
call_6851 = relay.TupleGetItem(func_5804_call(relay.reshape(bop_6840.astype('float32'), [15, 8, 11]), relay.reshape(var_6849.astype('float32'), [70,]), relay.reshape(const_6850.astype('uint16'), [5, 30]), ), 0)
output = relay.Tuple([bop_6840,call_6848,var_6849,const_6850,])
output2 = relay.Tuple([bop_6843,call_6851,var_6849,const_6850,])
func_6853 = relay.Function([var_6839,var_6849,], output)
mod['func_6853'] = func_6853
mod = relay.transform.InferType()(mod)
var_6854 = relay.var("var_6854", dtype = "uint32", shape = (15, 8, 11))#candidate|6854|(15, 8, 11)|var|uint32
var_6855 = relay.var("var_6855", dtype = "float32", shape = (70,))#candidate|6855|(70,)|var|float32
output = func_6853(var_6854,var_6855,)
func_6856 = relay.Function([var_6854,var_6855,], output)
mutated_mod['func_6856'] = func_6856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6357_call = mod.get_global_var('func_6357')
func_6358_call = mutated_mod.get_global_var('func_6358')
call_6884 = func_6357_call()
call_6885 = func_6357_call()
output = relay.Tuple([call_6884,])
output2 = relay.Tuple([call_6885,])
func_6889 = relay.Function([], output)
mod['func_6889'] = func_6889
mod = relay.transform.InferType()(mod)
output = func_6889()
func_6890 = relay.Function([], output)
mutated_mod['func_6890'] = func_6890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6405_call = mod.get_global_var('func_6405')
func_6406_call = mutated_mod.get_global_var('func_6406')
call_6910 = func_6405_call()
call_6911 = func_6405_call()
output = relay.Tuple([call_6910,])
output2 = relay.Tuple([call_6911,])
func_6912 = relay.Function([], output)
mod['func_6912'] = func_6912
mod = relay.transform.InferType()(mod)
output = func_6912()
func_6913 = relay.Function([], output)
mutated_mod['func_6913'] = func_6913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6631_call = mod.get_global_var('func_6631')
func_6633_call = mutated_mod.get_global_var('func_6633')
call_6942 = relay.TupleGetItem(func_6631_call(), 0)
call_6943 = relay.TupleGetItem(func_6633_call(), 0)
func_1026_call = mod.get_global_var('func_1026')
func_1030_call = mutated_mod.get_global_var('func_1030')
const_6966 = relay.const([-6,-7,8,-8,-5,-6,-4,9,1,-6,1,2,-4,1,9,-3,7,-8,4,-4,6,9,-8,-3,2,-1,-9,-2,6,-6,9,2,9,-3,-7,5,-4,3,-5,-1,6,-10,5,-8,7,-5,-3,-10,-8,9,-9,-9,9,5,8,2,9,1,-6,-4,4,7,8,-2,-2,2,-5,4,-4,-9,6,8,-5,-1,7,2,-5,-9,-10,-9,-9,-6,3,8,1,-2,1,4,9,5,-1,7,9,8,6,4,10,2,9,1,-1,9,-2,-6,-8,-7,1,4,-2,1,-2,5], dtype = "int64")#candidate|6966|(112,)|const|int64
var_6967 = relay.var("var_6967", dtype = "float32", shape = (1040,))#candidate|6967|(1040,)|var|float32
call_6965 = relay.TupleGetItem(func_1026_call(relay.reshape(const_6966.astype('int64'), [14, 4, 2]), relay.reshape(const_6966.astype('int64'), [14, 4, 2]), relay.reshape(var_6967.astype('float32'), [1040,]), ), 2)
call_6968 = relay.TupleGetItem(func_1030_call(relay.reshape(const_6966.astype('int64'), [14, 4, 2]), relay.reshape(const_6966.astype('int64'), [14, 4, 2]), relay.reshape(var_6967.astype('float32'), [1040,]), ), 2)
func_43_call = mod.get_global_var('func_43')
func_46_call = mutated_mod.get_global_var('func_46')
call_6980 = func_43_call(relay.reshape(call_6965.astype('float32'), [7, 10]))
call_6981 = func_43_call(relay.reshape(call_6965.astype('float32'), [7, 10]))
func_903_call = mod.get_global_var('func_903')
func_907_call = mutated_mod.get_global_var('func_907')
var_6990 = relay.var("var_6990", dtype = "int16", shape = (48,))#candidate|6990|(48,)|var|int16
var_6991 = relay.var("var_6991", dtype = "float64", shape = (1760,))#candidate|6991|(1760,)|var|float64
call_6989 = relay.TupleGetItem(func_903_call(relay.reshape(var_6990.astype('int16'), [2, 12, 2]), relay.reshape(var_6990.astype('int16'), [2, 12, 2]), relay.reshape(var_6991.astype('float64'), [1760,]), ), 2)
call_6992 = relay.TupleGetItem(func_907_call(relay.reshape(var_6990.astype('int16'), [2, 12, 2]), relay.reshape(var_6990.astype('int16'), [2, 12, 2]), relay.reshape(var_6991.astype('float64'), [1760,]), ), 2)
func_3821_call = mod.get_global_var('func_3821')
func_3823_call = mutated_mod.get_global_var('func_3823')
var_7002 = relay.var("var_7002", dtype = "float32", shape = (360,))#candidate|7002|(360,)|var|float32
call_7001 = relay.TupleGetItem(func_3821_call(relay.reshape(var_7002.astype('float32'), [10, 12, 3])), 0)
call_7003 = relay.TupleGetItem(func_3823_call(relay.reshape(var_7002.astype('float32'), [10, 12, 3])), 0)
output = relay.Tuple([call_6942,call_6965,const_6966,var_6967,call_6980,call_6989,var_6990,var_6991,call_7001,var_7002,])
output2 = relay.Tuple([call_6943,call_6968,const_6966,var_6967,call_6981,call_6992,var_6990,var_6991,call_7003,var_7002,])
func_7004 = relay.Function([var_6967,var_6990,var_6991,var_7002,], output)
mod['func_7004'] = func_7004
mod = relay.transform.InferType()(mod)
mutated_mod['func_7004'] = func_7004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7004_call = mutated_mod.get_global_var('func_7004')
var_7006 = relay.var("var_7006", dtype = "float32", shape = (1040,))#candidate|7006|(1040,)|var|float32
var_7007 = relay.var("var_7007", dtype = "int16", shape = (48,))#candidate|7007|(48,)|var|int16
var_7008 = relay.var("var_7008", dtype = "float64", shape = (1760,))#candidate|7008|(1760,)|var|float64
var_7009 = relay.var("var_7009", dtype = "float32", shape = (360,))#candidate|7009|(360,)|var|float32
call_7005 = func_7004_call(var_7006,var_7007,var_7008,var_7009,)
output = call_7005
func_7010 = relay.Function([var_7006,var_7007,var_7008,var_7009,], output)
mutated_mod['func_7010'] = func_7010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6563_call = mod.get_global_var('func_6563')
func_6565_call = mutated_mod.get_global_var('func_6565')
call_7041 = relay.TupleGetItem(func_6563_call(), 0)
call_7042 = relay.TupleGetItem(func_6565_call(), 0)
output = call_7041
output2 = call_7042
func_7046 = relay.Function([], output)
mod['func_7046'] = func_7046
mod = relay.transform.InferType()(mod)
mutated_mod['func_7046'] = func_7046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7046_call = mutated_mod.get_global_var('func_7046')
call_7047 = func_7046_call()
output = call_7047
func_7048 = relay.Function([], output)
mutated_mod['func_7048'] = func_7048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6313_call = mod.get_global_var('func_6313')
func_6315_call = mutated_mod.get_global_var('func_6315')
call_7086 = func_6313_call()
call_7087 = func_6313_call()
func_3670_call = mod.get_global_var('func_3670')
func_3674_call = mutated_mod.get_global_var('func_3674')
var_7110 = relay.var("var_7110", dtype = "float64", shape = (63,))#candidate|7110|(63,)|var|float64
var_7111 = relay.var("var_7111", dtype = "uint16", shape = (5, 30))#candidate|7111|(5, 30)|var|uint16
var_7112 = relay.var("var_7112", dtype = "int32", shape = (2304,))#candidate|7112|(2304,)|var|int32
call_7109 = relay.TupleGetItem(func_3670_call(relay.reshape(var_7110.astype('float64'), [9, 7]), relay.reshape(var_7111.astype('uint16'), [150, 1]), relay.reshape(var_7112.astype('int32'), [2304,]), ), 5)
call_7113 = relay.TupleGetItem(func_3674_call(relay.reshape(var_7110.astype('float64'), [9, 7]), relay.reshape(var_7111.astype('uint16'), [150, 1]), relay.reshape(var_7112.astype('int32'), [2304,]), ), 5)
output = relay.Tuple([call_7086,call_7109,var_7110,var_7111,var_7112,])
output2 = relay.Tuple([call_7087,call_7113,var_7110,var_7111,var_7112,])
func_7133 = relay.Function([var_7110,var_7111,var_7112,], output)
mod['func_7133'] = func_7133
mod = relay.transform.InferType()(mod)
var_7134 = relay.var("var_7134", dtype = "float64", shape = (63,))#candidate|7134|(63,)|var|float64
var_7135 = relay.var("var_7135", dtype = "uint16", shape = (5, 30))#candidate|7135|(5, 30)|var|uint16
var_7136 = relay.var("var_7136", dtype = "int32", shape = (2304,))#candidate|7136|(2304,)|var|int32
output = func_7133(var_7134,var_7135,var_7136,)
func_7137 = relay.Function([var_7134,var_7135,var_7136,], output)
mutated_mod['func_7137'] = func_7137
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7181 = relay.const([[[5.686295,-5.636717,4.497486,-6.883920,-9.291735,-0.160437,7.432746,1.792731,-9.669156,-2.862905,-1.912571,9.844201],[8.888207,-1.417710,5.672416,-9.758211,5.065104,-5.378145,3.735082,3.602195,-5.319747,0.226061,6.161914,-0.637995],[0.341775,7.197097,2.417032,-8.513038,-7.368464,1.685059,-5.937142,-6.988652,-0.434273,-4.534619,-8.058852,-6.564894],[0.774571,-0.125570,-7.466478,-2.797472,4.912005,1.601473,7.933784,5.650812,-1.960404,5.365750,-3.591465,-7.414948],[-6.881448,-5.015411,-3.943954,4.207101,2.854615,3.009481,-9.646432,4.864599,7.676715,5.800938,-9.484547,-1.180555],[8.234575,3.976939,-5.980579,-3.506271,-8.663221,6.712305,4.423652,-7.546928,-8.434937,-3.181745,2.608972,9.066223],[9.377776,7.772081,6.974940,-1.947105,0.630439,0.071121,-6.901162,-6.946375,-8.828581,2.433551,1.647277,-7.667375]],[[7.028820,-7.761846,-0.329686,-5.886193,-3.184093,7.742071,3.272255,-0.760586,8.052417,-5.599233,-4.784652,-7.989212],[-3.628930,-7.930842,4.267581,-4.196803,-2.896501,-4.518631,-8.778004,-7.603314,-3.876625,-7.087982,0.505895,3.979773],[-3.770256,-1.633739,-4.025601,-0.241889,4.443292,-2.576324,4.426678,5.499260,-7.871011,4.961486,-6.537344,6.757563],[3.227367,1.724605,1.132313,-4.426712,-9.812810,-0.407623,5.780658,-1.736619,6.352205,-1.915212,1.469356,-9.634892],[2.150781,-2.444525,4.864936,-4.564403,3.417883,-3.613007,-5.579499,4.941497,4.302014,-0.956401,-5.710230,8.360502],[6.635471,-3.407323,-3.754950,-0.230718,-5.358174,7.084760,9.932498,7.744353,3.557170,8.127470,-7.327233,9.645491],[-9.848702,-4.911820,-7.550653,-1.780327,7.633213,-0.369353,-1.684358,2.221714,6.213932,-4.019947,6.583314,3.111605]]], dtype = "float64")#candidate|7181|(2, 7, 12)|const|float64
uop_7182 = relay.atan(const_7181.astype('float64')) # shape=(2, 7, 12)
bop_7184 = relay.minimum(uop_7182.astype('int16'), relay.reshape(const_7181.astype('int16'), relay.shape_of(uop_7182))) # shape=(2, 7, 12)
func_4546_call = mod.get_global_var('func_4546')
func_4550_call = mutated_mod.get_global_var('func_4550')
const_7203 = relay.const([-5.915854,-9.031601,-7.563081,-8.702205,-2.095174,8.478918,-8.187038,-6.412953,0.429900,-4.487089,7.569897,1.713865,0.691756,6.802785,-9.039601,6.419362,9.104555,-4.268451,-7.399524,7.297975,-1.637691,5.415871,9.224373,8.486393,-6.528864,-2.296551,-5.353864,5.358708,-3.005371,7.965641,2.900846,-9.174829,-0.530998,2.169640,4.686826,6.534639,7.810504,6.899638,-5.727782,9.763175,-4.855827,8.413748,6.690763,-7.801983,2.618635,3.587129,-6.449516,9.480651,-9.003534,2.379479,2.997624,-1.981030,3.027266,9.371725,-7.957819,1.315439,0.182848,0.282215,1.225333,-3.678528,3.657538,2.498767,5.451323,4.906690,9.859965,-5.565339,5.515845,2.641642,-9.427568,9.441633,3.759402,6.320128,9.869645,-1.845435,-4.534784,6.935487,-1.104035,-9.179919,-7.992161,9.036270,-0.187360,-4.590480,-0.883861,3.260522,2.414117,4.743759,8.913301,3.405072,-5.222831,7.261669,-4.081664,-2.561460,9.056196,2.546619,-1.687467,-0.453552,-0.798719,9.023825,-9.612109,6.010817,6.328262,1.784702,1.900446,1.200551,-3.721122,-0.822975,5.300695,4.632223,0.094360,-3.932154,8.825447,9.776121,-2.029151,1.095561,8.949443,-5.677390,5.132346,0.674528,-6.972982,-5.129309,0.297002,2.815487,-9.660984,3.898671,8.075737,3.537487,-0.365543,-0.980588,9.160700,-6.068753,-0.326516,5.837645,-5.656509,-9.016898,8.894065,7.544332,-1.041436,-7.234420,9.394694,-1.266820,9.462654,3.968148,-8.506088,-0.804064,5.740651,-6.336314,0.729431,-0.247606,-2.772800,-6.965431,8.735382,-3.122564,3.929401,-1.137338,1.361326,1.334587,6.266660,-6.339759,5.431717,0.635519,6.018232,-4.059526,-7.298697,-6.589332,-6.176487,-2.324690,-9.242824,2.087516,4.671669,-9.482785,-5.804225,-9.082838,2.387004,-4.071528,3.661698,2.350159,8.507023,-4.631853,-2.848451,4.367567,1.901043,6.388258,-8.286896,9.133714,-4.636529,-0.103781,-8.398744,-5.006777,-2.730484,-1.841415,1.174831,-8.655649,2.731536,-4.799071,-2.792667,-3.107454,3.382303,0.748153,-1.792661,-5.713231,3.401443,-3.699699,3.537782,9.166383,3.369160,2.525983,3.850510,5.952147,-5.988010,5.517054,7.732864,7.613725,7.815201,4.924370,1.921056,-1.706679,-4.154493,-7.860007,-5.996753,5.365596,1.231864,-4.447658,9.687353,-6.153464,3.581942,-5.037128,6.676101,2.185351,-1.653499,1.498596,-9.106064,-5.600619,-8.124420,-8.955956,-0.873487,-9.670778,3.842172,4.634105,-7.588736,-0.842990,3.891274,2.507309,-9.092888,0.786992,1.056318,1.784711,-9.908939,-6.733880,-6.249555,5.952112,9.671642,4.840765,-5.415072,9.385030,-2.777919,-9.142496,-1.115130,-4.400584,8.609512,5.555341,-3.653302,-7.949615,3.986871,3.490253,-4.924337,-7.129410,-4.247788,-2.554653,-2.638259,-3.041019,3.402525,-3.534721,-5.363027,3.263446,-6.246420,-4.064732,1.014577,-9.228065,5.995313,-2.560589,-8.581383,7.523536,-9.110229,-3.289104,6.136085,4.243136,2.106045,-2.524075,1.582047,9.831513,4.941051,-1.305626,3.980320,6.312077,3.394272,-5.552046,-7.886445,-0.773003,1.998561,-6.483868,1.489070,1.772963,5.342020,-5.401276,7.922227,8.623820,3.409040,0.627245,-6.600192,-7.652351,3.973112,1.320418,-4.060888,-3.135091,-2.573270,7.009717,8.162416,6.576598,-0.226729,4.624935,4.199477,-2.651713,-6.040125,7.661430,-9.571924,-8.402330,-1.615283,-3.697347,-5.295574,-6.722882,3.834385,-9.537079,3.147502,7.132646,-2.806387,7.348384,2.250623,-1.861792,-0.235873,-9.417075,0.316814,-0.817944,9.943072,2.606578,5.352033,-1.844947,8.182710,2.393579,-1.597380,-3.804859,6.139060,3.469795,-8.526835,7.896275,6.494214,8.280692,-1.140315,0.462261,-7.315632,5.165916,-7.510186,-6.427743,3.017449,-1.774226,5.252315,-3.167439,0.130690,0.047223,1.668595,-2.173525,5.039199,-1.498267,9.020314,5.745906,-3.031036,0.375334,-4.182364,-3.081980,-5.468035,-9.897682,7.128371,-7.374499,-7.746640,-0.182496,-4.653516,-8.873433,0.943322,-4.070456,-5.612645,-8.139062,-3.343874,-5.869810,-7.832696,-9.083652,7.704151,-7.978129,2.237988,9.513610,-2.685260,-8.727077,-3.481210,-9.295125,6.906197,-9.499720,-5.896023,-9.959002,4.483929,-9.894025,7.443837,-0.664240,2.122284,3.377383,0.131741,-6.600274,5.190982,1.075342,4.562673,5.436063,-5.877362,3.484976,-4.718340,6.638598,-5.514173,9.036918,8.654502,-0.955291,-5.879647,5.651055,8.678919,-5.556114,-5.835417,-2.634684], dtype = "float32")#candidate|7203|(432,)|const|float32
const_7204 = relay.const([[7,-2,9,-4,3,4,-1,10,7,-10,-9,5,-6,5,-5,6,3,8,1,-6,3,8,-4,8,2,-2,-4,2,-2,-8,4,-8,10,-10,-5,5],[8,-1,-4,4,7,-6,2,5,-5,-10,4,7,-1,7,5,7,-7,-4,7,8,3,-7,4,-1,-2,7,9,2,-2,10,-2,9,-3,-2,-2,-4],[-6,3,2,8,-5,2,10,-5,-4,10,-2,-7,3,-5,2,3,2,-10,10,-10,5,-10,-7,-7,-2,9,5,8,9,-6,-5,-9,-5,-3,6,-1],[-5,-6,-7,-5,2,-2,-4,-9,-4,-2,-4,-7,-1,-3,2,-10,4,-1,-10,10,10,1,2,7,-4,6,1,6,-4,2,2,2,7,7,-10,3]], dtype = "int32")#candidate|7204|(4, 36)|const|int32
call_7202 = relay.TupleGetItem(func_4546_call(relay.reshape(const_7203.astype('float32'), [9, 4, 12]), relay.reshape(const_7204.astype('int32'), [144,]), ), 3)
call_7205 = relay.TupleGetItem(func_4550_call(relay.reshape(const_7203.astype('float32'), [9, 4, 12]), relay.reshape(const_7204.astype('int32'), [144,]), ), 3)
func_6563_call = mod.get_global_var('func_6563')
func_6565_call = mutated_mod.get_global_var('func_6565')
call_7216 = relay.TupleGetItem(func_6563_call(), 0)
call_7217 = relay.TupleGetItem(func_6565_call(), 0)
uop_7218 = relay.sin(bop_7184.astype('float64')) # shape=(2, 7, 12)
output = relay.Tuple([call_7202,const_7203,const_7204,call_7216,uop_7218,])
output2 = relay.Tuple([call_7205,const_7203,const_7204,call_7217,uop_7218,])
func_7247 = relay.Function([], output)
mod['func_7247'] = func_7247
mod = relay.transform.InferType()(mod)
output = func_7247()
func_7248 = relay.Function([], output)
mutated_mod['func_7248'] = func_7248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5760_call = mod.get_global_var('func_5760')
func_5762_call = mutated_mod.get_global_var('func_5762')
call_7285 = relay.TupleGetItem(func_5760_call(), 0)
call_7286 = relay.TupleGetItem(func_5762_call(), 0)
uop_7316 = relay.sinh(call_7285.astype('float64')) # shape=(15, 8, 11)
uop_7318 = relay.sinh(call_7286.astype('float64')) # shape=(15, 8, 11)
uop_7321 = relay.asinh(uop_7316.astype('float32')) # shape=(15, 8, 11)
uop_7323 = relay.asinh(uop_7318.astype('float32')) # shape=(15, 8, 11)
output = uop_7321
output2 = uop_7323
func_7326 = relay.Function([], output)
mod['func_7326'] = func_7326
mod = relay.transform.InferType()(mod)
mutated_mod['func_7326'] = func_7326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7326_call = mutated_mod.get_global_var('func_7326')
call_7327 = func_7326_call()
output = call_7327
func_7328 = relay.Function([], output)
mutated_mod['func_7328'] = func_7328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6889_call = mod.get_global_var('func_6889')
func_6890_call = mutated_mod.get_global_var('func_6890')
call_7332 = relay.TupleGetItem(func_6889_call(), 0)
call_7333 = relay.TupleGetItem(func_6890_call(), 0)
func_7247_call = mod.get_global_var('func_7247')
func_7248_call = mutated_mod.get_global_var('func_7248')
call_7345 = relay.TupleGetItem(func_7247_call(), 3)
call_7346 = relay.TupleGetItem(func_7248_call(), 3)
bop_7349 = relay.bitwise_or(call_7345.astype('uint32'), relay.reshape(call_7332.astype('uint32'), relay.shape_of(call_7345))) # shape=(15, 8, 11)
bop_7352 = relay.bitwise_or(call_7346.astype('uint32'), relay.reshape(call_7333.astype('uint32'), relay.shape_of(call_7346))) # shape=(15, 8, 11)
bop_7357 = relay.subtract(call_7332.astype('uint8'), relay.reshape(call_7345.astype('uint8'), relay.shape_of(call_7332))) # shape=(15, 8, 11)
bop_7360 = relay.subtract(call_7333.astype('uint8'), relay.reshape(call_7346.astype('uint8'), relay.shape_of(call_7333))) # shape=(15, 8, 11)
func_1026_call = mod.get_global_var('func_1026')
func_1030_call = mutated_mod.get_global_var('func_1030')
var_7363 = relay.var("var_7363", dtype = "int64", shape = (2, 56))#candidate|7363|(2, 56)|var|int64
const_7364 = relay.const([-1.447983,-9.992367,-8.833578,-4.516007,-6.283134,-9.345310,2.913569,-4.533809,8.357650,7.389205,-3.095977,-6.304395,-7.763043,-9.002104,0.278571,4.093489,-8.121697,6.208794,-7.089380,8.571701,4.575485,9.634477,-5.582074,7.413425,-8.651836,9.834057,-7.807027,2.300330,0.432909,0.845481,9.189366,-2.075133,-4.025087,-8.035616,6.847196,-3.425851,2.418548,4.905882,1.397340,-8.258869,7.338501,-2.563247,3.811853,3.661538,6.718035,8.919736,9.465882,-3.807945,-8.660307,-0.549684,1.474027,-2.314066,2.492339,-7.160149,-0.192586,-3.154846,8.446728,5.396491,-3.653593,2.199287,0.014596,-7.371591,-1.163585,2.244032,5.041923,-6.031656,-1.238022,-9.245897,8.632022,-0.598390,3.781565,9.826621,-9.927682,7.584427,7.433999,-8.265119,-6.195434,-4.432053,-2.145526,4.180987,5.899716,-5.802166,-5.122838,6.336084,3.191323,6.025697,-8.508246,5.416470,0.872023,-0.323942,2.843044,-1.854116,6.888711,-0.258944,-5.917511,-7.948104,-6.313578,8.415531,0.430716,-7.924544,-2.720419,0.509132,-3.445175,8.365982,1.593341,5.925404,6.448992,-5.549524,-7.231955,-9.219388,-1.343323,-7.181247,2.436035,9.180075,4.183454,1.329015,2.570087,-0.672331,-4.312961,-1.238088,0.262542,-3.302593,4.562700,-3.007647,-9.047148,-7.094877,6.545851,3.383787,-9.458313,4.917320,-1.564766,9.603685,2.112861,3.745049,-4.137726,5.106323,1.539082,-3.652152,0.016875,-2.014697,6.024356,-7.373528,-1.642791,7.634952,8.430363,-1.637175,3.977618,1.140343,2.089176,-5.641161,-8.318480,-2.790346,-4.827582,-2.894375,8.553988,7.850859,6.409641,6.817220,2.377606,-7.862611,7.264999,-4.526346,8.903257,9.808503,-8.967510,-2.145109,1.654620,6.375080,3.477971,5.432983,-4.236748,9.180877,3.348451,3.084712,4.604201,3.176376,-2.261944,7.077331,8.115827,2.411584,2.728588,8.047992,-2.195112,-5.722341,-7.516165,-4.806438,-4.205383,3.939628,-2.836899,-5.239620,-8.309807,-6.443203,5.297703,-7.174827,-9.017005,-4.527621,4.131283,-0.440713,-1.065565,4.172793,9.883731,-4.721652,0.926086,0.369833,-8.805956,3.306537,2.968737,-9.267236,-7.017777,9.754384,-8.755309,-5.752788,9.747397,0.720920,0.953286,0.624712,-2.604778,-7.022689,7.954206,7.717481,8.928744,-0.704299,-9.392623,8.873767,-7.146149,1.255289,-3.597626,-3.437450,-5.861741,-5.282140,3.299240,-1.838983,2.209338,8.708290,-8.749170,-3.596806,-5.614504,-6.609714,4.576683,0.982853,6.000662,-8.818927,-2.532942,0.739437,-8.969598,-1.820935,3.270179,8.766623,4.131621,7.035874,7.093825,0.304453,9.834341,-3.538221,5.056377,-0.537998,-9.479884,-5.579017,5.592550,-2.426062,8.965498,2.680366,0.947229,9.917777,-5.310420,3.448657,1.949885,8.326705,-6.164095,7.284393,1.757473,-8.685606,0.144490,-8.814355,5.602259,-1.768676,5.121100,1.051729,2.046026,6.419340,-0.656078,0.514007,1.257726,-1.812016,0.539785,7.566042,1.028980,-6.800211,-2.734808,2.099413,2.384408,6.677088,-8.064124,-7.783970,1.918713,6.545210,-9.128808,9.693509,1.980303,5.120546,-9.462230,7.556330,7.361545,-2.252061,-1.367063,7.934195,2.084086,-0.159653,6.026361,3.596712,-8.986723,-3.575120,-8.104624,-9.314392,1.037880,-1.896757,-2.094684,8.279885,6.272284,4.612795,-8.141943,-4.529785,7.995400,4.530263,6.239562,-2.815950,1.130844,-5.638325,-8.706435,3.843957,-3.164574,4.986052,8.060782,-3.461000,-2.055353,-5.473725,-4.294424,8.300878,7.741640,0.626407,0.595476,-5.307258,-8.703388,-3.550676,5.636771,5.210049,7.755163,-9.905585,8.204435,-2.231263,-1.881341,-2.243773,7.217712,3.456056,-3.914228,4.470563,-3.876069,-0.691220,-9.997928,6.459785,-7.474335,4.878693,-4.813306,-6.057455,8.361378,3.858561,2.398631,-5.092996,2.515363,4.941676,-1.119590,-8.123954,-7.419479,-9.034868,4.164913,-6.802524,-2.072910,-0.971330,5.205408,-0.228609,7.338930,9.583625,-3.988963,7.023824,8.290253,8.764007,4.358820,-3.675586,4.029056,-3.007038,-4.909202,-0.352386,-5.917778,4.855062,-7.341217,-2.450788,-8.455801,-5.085618,-1.960899,-1.091800,2.114208,9.230139,9.889346,-7.573541,-7.376496,-4.723476,-4.241348,2.337661,6.901864,-2.105246,4.763255,1.146849,-6.181129,-3.952803,2.764594,-8.971307,-9.136964,3.091221,2.648186,-9.482716,-2.510284,0.176521,-6.251796,0.678793,5.412840,4.077561,4.471908,-1.761250,-2.093761,-3.695062,-3.857499,-4.115580,-6.169012,-4.270912,-1.463181,-8.696498,0.481010,5.654416,-8.259823,7.989110,-1.054837,-4.896407,9.348604,-9.246045,1.375719,1.516998,6.046619,1.838637,5.570096,-6.390069,-0.949158,-1.702494,-5.607924,6.351014,6.423044,-9.995959,4.112494,6.719977,-1.512802,4.797924,-5.079869,7.465880,-1.454421,5.395230,-9.549984,7.666323,-8.013029,8.659668,6.058191,-1.265921,9.965305,0.828113,7.798888,-4.929377,-6.207845,-3.542567,-9.476870,-0.246954,-5.610918,0.915434,6.228149,3.380450,-2.730380,-5.616862,-8.575863,-9.994543,-0.989730,-1.288787,-3.649430,0.283376,-6.074259,1.067221,9.096356,-2.831263,-0.892964,-2.932841,-3.116629,3.822209,-1.689810,8.499178,-0.243666,9.333028,8.195676,9.332664,-9.432051,-6.790548,-0.679888,1.265190,4.636089,1.047124,0.794689,-9.293736,8.256142,7.755740,1.965335,-6.888759,-1.332998,-9.359702,-0.124648,-3.867663,-8.013039,8.608180,-5.534245,-0.080621,-5.930822,0.405224,-7.078496,-2.781899,-5.154066,5.060720,-4.955611,0.803137,6.126995,-2.251989,1.061409,-3.910720,6.383668,-9.645214,7.395681,1.616982,-7.683846,2.452838,-1.083641,4.611243,8.267486,7.944753,-6.677744,9.429011,-6.512638,4.774166,-4.468283,-5.745092,-9.847330,9.759119,9.657331,6.495729,-7.216770,-5.005363,-4.071151,4.474666,8.442292,1.227412,4.127731,4.987003,-6.203641,-8.467276,1.691342,-7.127453,7.308312,0.396796,5.298307,9.719877,8.408166,-4.958600,4.606493,-3.096719,-5.410528,-1.308365,-7.853147,-0.033730,8.343500,6.453465,8.364640,-5.331710,0.390898,4.518492,-1.139416,-8.036254,4.408880,-3.690734,-6.030999,4.420266,-9.486910,5.686861,5.358665,-1.596555,-7.100158,3.208616,3.815657,-8.166395,2.350561,9.475169,-4.437461,-2.179267,4.708156,-9.908841,1.281992,-5.729546,-4.930974,-7.383238,4.817453,-6.462369,-6.876127,6.645524,4.732116,-5.502548,-4.634635,-7.353998,-0.031015,-2.751589,6.105763,2.969448,-5.182245,6.256528,6.971325,-4.600114,-3.348053,-2.904788,6.002926,-5.746695,-6.009506,2.425882,5.399040,8.496378,-9.834363,1.355789,9.121738,-9.491791,-8.792997,-5.161815,4.033358,4.979239,5.278331,-8.787079,4.702076,0.961434,-4.446874,-9.900187,-6.249469,2.322052,1.218679,2.569281,9.677426,-9.279084,6.548255,-6.896083,-0.130527,-1.815512,1.266786,-5.802438,2.258790,-1.728496,-6.073574,0.773228,7.996398,-6.818726,0.058501,5.932234,1.289836,4.561183,-2.396330,-6.393793,7.171427,-3.134013,6.771080,9.794334,-1.073662,-7.436759,6.001239,6.936180,-1.437233,1.365742,9.966506,8.356382,7.657166,5.754144,-0.559629,-2.870684,-9.166108,-7.092996,7.457551,8.734589,-4.068240,-7.771520,3.455934,-7.161827,8.275889,-3.913974,-4.098489,-2.712562,-1.624227,9.773833,9.298372,-5.968137,-7.300867,1.405441,-8.126158,9.453317,9.220052,-2.017089,5.001117,-2.092779,1.199155,-2.610941,-5.795931,4.645091,-0.592905,7.357775,-7.586980,-8.569591,7.710401,-1.772711,-1.517236,-0.005712,7.530636,-8.964320,1.020483,-3.550419,6.081014,-8.235213,4.688956,-9.168938,-6.848205,8.476590,7.700817,7.270586,7.071882,2.796104,2.917976,5.627093,-1.356450,1.085136,3.551610,-7.862889,-2.253865,-9.622745,-9.718943,-6.316332,5.520000,4.869011,9.768312,2.690693,-9.079628,-0.431114,-8.003807,1.428607,3.438934,-6.347732,-7.048928,-9.670708,7.589346,-4.879978,4.314448,-5.988462,-9.188831,-9.091116,-0.037602,-4.088554,-6.361991,-2.147309,9.528093,1.703771,-9.369701,2.095412,4.356876,-1.836066,-7.095221,-8.412565,3.984883,-7.068982,8.013012,2.245261,-3.718674,-4.384102,-9.233276,7.356201,-8.326215,-6.605662,-1.963788,9.312167,0.912684,-6.180106,-8.419000,-1.958543,1.405520,9.710917,4.162202,-6.226753,4.899920,-7.931658,9.168377,9.791814,-7.209916,0.654310,9.130874,-7.038970,-3.008921,-4.323749,-9.884845,-0.938852,-9.334602,-6.771000,-2.450207,6.188857,9.270503,9.339879,-2.860890,2.542745,-4.367141,9.979871,8.029824,6.197169,0.969179,5.300403,-2.403258,5.322107,5.239183,-2.461309,7.058042,5.049954,7.747968,5.215572,0.198241,-9.394327,2.559010,8.957213,-2.131801,-9.471733,5.362572,9.804079,4.886617,-7.677736,-6.548196,-4.037470,-4.350547,-1.951535,-3.586163,3.728677,-5.131692,-4.302380,-8.714336,4.165292,-6.132888,-1.072397,4.246953,6.563762,-8.912804,6.502796,-7.063768,-0.651997,-4.774373,-3.117306,2.587434,-0.730407,8.526457,1.362605,5.030052,-5.924627,8.646600,6.155747,-3.364415,8.142661,-3.724091,2.674124,4.015464,8.705980,7.565245,-8.940089,-4.391694,-9.273644,2.180352,0.577082,-5.608593,-3.781649,-3.906070,-8.889316,-4.596169,7.160696,2.480668,3.275770,0.782054,-9.522388,-4.073308,5.914331,7.261558,4.279850,3.842349,3.542376,-5.708046,2.309712,0.820724,-2.954673,-0.044618,-8.397488,-6.883121,-3.733294,0.026493,-7.925320,6.129932,-4.151384,-3.911600,-4.449706,-8.147449,6.947785,5.671423,9.095520,1.930648,2.132645,0.106977,4.736472,4.738875,1.983898,-8.132050,2.597515,4.506446,-1.545974,5.642672,-7.292555,7.225087,-0.228690,-6.178717,9.826767,9.047014,1.520025,0.409465,9.540539,-2.259363,1.425205,-8.968420,1.139567,-7.669485,0.742381,-0.632372,3.150075,-8.368710,-2.205965,9.633970,-6.192151,-0.282671,6.459229,-0.884814,7.833882,-4.185322,2.943264,5.773216,-4.482841,-9.882595,4.561138,4.632194,-3.847899,-6.030859,0.804678,7.733887,2.847246,4.762531,5.286287,9.120210,4.511859,1.664991,-0.172496,0.677984,-6.001537,1.145732,-2.728888,-9.097101,-1.706701,2.645282,-0.954065,3.399253,3.156739,-5.868784,-1.575459,3.054976,3.337167,-0.744688,3.228889,1.302071,7.446909,7.861506,9.158359,2.993602,-8.102780,5.159076,6.874242,-0.867331,-8.702892,6.495840,-9.631391,-0.322979,9.037757,-4.734333,-1.690448,-1.083260,-8.969042,5.951539,4.996440,4.832852,4.860655,-5.645212,9.068352,1.956968,6.604243,-0.605701,5.630814,-8.993604,4.046065,5.167704,-7.120046,3.631266,6.429619,-3.683066,3.811544,1.117947,3.813485,1.332322,-3.411870,-0.951972,5.995984,-1.888882,1.392331,2.767658,6.957683,-5.867409,-2.829052,-6.336136,-1.131447,-4.026463,-1.997015,-5.092868,8.771173], dtype = "float32")#candidate|7364|(1040,)|const|float32
call_7362 = relay.TupleGetItem(func_1026_call(relay.reshape(var_7363.astype('int64'), [14, 4, 2]), relay.reshape(var_7363.astype('int64'), [14, 4, 2]), relay.reshape(const_7364.astype('float32'), [1040,]), ), 1)
call_7365 = relay.TupleGetItem(func_1030_call(relay.reshape(var_7363.astype('int64'), [14, 4, 2]), relay.reshape(var_7363.astype('int64'), [14, 4, 2]), relay.reshape(const_7364.astype('float32'), [1040,]), ), 1)
output = relay.Tuple([bop_7349,bop_7357,call_7362,var_7363,const_7364,])
output2 = relay.Tuple([bop_7352,bop_7360,call_7365,var_7363,const_7364,])
func_7377 = relay.Function([var_7363,], output)
mod['func_7377'] = func_7377
mod = relay.transform.InferType()(mod)
mutated_mod['func_7377'] = func_7377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7378 = relay.var("var_7378", dtype = "int64", shape = (2, 56))#candidate|7378|(2, 56)|var|int64
func_7377_call = mutated_mod.get_global_var('func_7377')
call_7379 = func_7377_call(var_7378)
output = call_7379
func_7380 = relay.Function([var_7378], output)
mutated_mod['func_7380'] = func_7380
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7431 = relay.var("var_7431", dtype = "float32", shape = (10, 7, 1))#candidate|7431|(10, 7, 1)|var|float32
uop_7432 = relay.acosh(var_7431.astype('float32')) # shape=(10, 7, 1)
func_903_call = mod.get_global_var('func_903')
func_907_call = mutated_mod.get_global_var('func_907')
var_7435 = relay.var("var_7435", dtype = "int16", shape = (12, 4))#candidate|7435|(12, 4)|var|int16
var_7436 = relay.var("var_7436", dtype = "float64", shape = (1760,))#candidate|7436|(1760,)|var|float64
call_7434 = relay.TupleGetItem(func_903_call(relay.reshape(var_7435.astype('int16'), [2, 12, 2]), relay.reshape(var_7435.astype('int16'), [2, 12, 2]), relay.reshape(var_7436.astype('float64'), [1760,]), ), 2)
call_7437 = relay.TupleGetItem(func_907_call(relay.reshape(var_7435.astype('int16'), [2, 12, 2]), relay.reshape(var_7435.astype('int16'), [2, 12, 2]), relay.reshape(var_7436.astype('float64'), [1760,]), ), 2)
output = relay.Tuple([uop_7432,call_7434,var_7435,var_7436,])
output2 = relay.Tuple([uop_7432,call_7437,var_7435,var_7436,])
func_7443 = relay.Function([var_7431,var_7435,var_7436,], output)
mod['func_7443'] = func_7443
mod = relay.transform.InferType()(mod)
mutated_mod['func_7443'] = func_7443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7443_call = mutated_mod.get_global_var('func_7443')
var_7445 = relay.var("var_7445", dtype = "float32", shape = (10, 7, 1))#candidate|7445|(10, 7, 1)|var|float32
var_7446 = relay.var("var_7446", dtype = "int16", shape = (12, 4))#candidate|7446|(12, 4)|var|int16
var_7447 = relay.var("var_7447", dtype = "float64", shape = (1760,))#candidate|7447|(1760,)|var|float64
call_7444 = func_7443_call(var_7445,var_7446,var_7447,)
output = call_7444
func_7448 = relay.Function([var_7445,var_7446,var_7447,], output)
mutated_mod['func_7448'] = func_7448
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7453 = relay.const([[[10],[7]],[[-8],[-2]],[[9],[9]],[[5],[10]],[[9],[3]],[[-8],[-8]],[[7],[-5]],[[6],[-8]],[[-9],[6]],[[3],[8]]], dtype = "uint8")#candidate|7453|(10, 2, 1)|const|uint8
var_7454 = relay.var("var_7454", dtype = "uint8", shape = (10, 2, 11))#candidate|7454|(10, 2, 11)|var|uint8
bop_7455 = relay.greater_equal(const_7453.astype('bool'), var_7454.astype('bool')) # shape=(10, 2, 11)
output = bop_7455
output2 = bop_7455
func_7458 = relay.Function([var_7454,], output)
mod['func_7458'] = func_7458
mod = relay.transform.InferType()(mod)
mutated_mod['func_7458'] = func_7458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7459 = relay.var("var_7459", dtype = "uint8", shape = (10, 2, 11))#candidate|7459|(10, 2, 11)|var|uint8
func_7458_call = mutated_mod.get_global_var('func_7458')
call_7460 = func_7458_call(var_7459)
output = call_7460
func_7461 = relay.Function([var_7459], output)
mutated_mod['func_7461'] = func_7461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6631_call = mod.get_global_var('func_6631')
func_6633_call = mutated_mod.get_global_var('func_6633')
call_7479 = relay.TupleGetItem(func_6631_call(), 0)
call_7480 = relay.TupleGetItem(func_6633_call(), 0)
func_6480_call = mod.get_global_var('func_6480')
func_6483_call = mutated_mod.get_global_var('func_6483')
call_7492 = relay.TupleGetItem(func_6480_call(relay.reshape(call_7479.astype('float32'), [15, 8, 11])), 0)
call_7493 = relay.TupleGetItem(func_6483_call(relay.reshape(call_7479.astype('float32'), [15, 8, 11])), 0)
func_5760_call = mod.get_global_var('func_5760')
func_5762_call = mutated_mod.get_global_var('func_5762')
call_7494 = relay.TupleGetItem(func_5760_call(), 0)
call_7495 = relay.TupleGetItem(func_5762_call(), 0)
output = relay.Tuple([call_7479,call_7492,call_7494,])
output2 = relay.Tuple([call_7480,call_7493,call_7495,])
func_7496 = relay.Function([], output)
mod['func_7496'] = func_7496
mod = relay.transform.InferType()(mod)
mutated_mod['func_7496'] = func_7496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7496_call = mutated_mod.get_global_var('func_7496')
call_7497 = func_7496_call()
output = call_7497
func_7498 = relay.Function([], output)
mutated_mod['func_7498'] = func_7498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6672_call = mod.get_global_var('func_6672')
func_6673_call = mutated_mod.get_global_var('func_6673')
call_7499 = func_6672_call()
call_7500 = func_6672_call()
uop_7535 = relay.sinh(call_7499.astype('float64')) # shape=(7, 10, 3)
uop_7537 = relay.sinh(call_7500.astype('float64')) # shape=(7, 10, 3)
output = uop_7535
output2 = uop_7537
func_7540 = relay.Function([], output)
mod['func_7540'] = func_7540
mod = relay.transform.InferType()(mod)
output = func_7540()
func_7541 = relay.Function([], output)
mutated_mod['func_7541'] = func_7541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7496_call = mod.get_global_var('func_7496')
func_7498_call = mutated_mod.get_global_var('func_7498')
call_7547 = relay.TupleGetItem(func_7496_call(), 2)
call_7548 = relay.TupleGetItem(func_7498_call(), 2)
output = relay.Tuple([call_7547,])
output2 = relay.Tuple([call_7548,])
func_7559 = relay.Function([], output)
mod['func_7559'] = func_7559
mod = relay.transform.InferType()(mod)
mutated_mod['func_7559'] = func_7559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7559_call = mutated_mod.get_global_var('func_7559')
call_7560 = func_7559_call()
output = call_7560
func_7561 = relay.Function([], output)
mutated_mod['func_7561'] = func_7561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6241_call = mod.get_global_var('func_6241')
func_6243_call = mutated_mod.get_global_var('func_6243')
call_7597 = relay.TupleGetItem(func_6241_call(), 0)
call_7598 = relay.TupleGetItem(func_6243_call(), 0)
func_6912_call = mod.get_global_var('func_6912')
func_6913_call = mutated_mod.get_global_var('func_6913')
call_7613 = relay.TupleGetItem(func_6912_call(), 0)
call_7614 = relay.TupleGetItem(func_6913_call(), 0)
func_4786_call = mod.get_global_var('func_4786')
func_4790_call = mutated_mod.get_global_var('func_4790')
const_7618 = relay.const([[3,7,-6,5,8,-4,1,6,5,4,2,-5,4,-3,6,-8,-7,-9,10,9,-6,-4,10,-8],[-7,2,-8,6,-2,1,-8,-5,4,10,-9,-3,-5,-3,9,1,-8,7,-9,-10,-4,9,1,-9],[-9,10,-9,5,10,-8,-3,-6,3,7,-6,4,-9,2,-6,-5,-1,3,8,5,-9,-8,3,1],[7,1,-4,-5,-8,3,9,1,4,1,3,1,-8,-4,3,8,-3,7,-4,10,-1,-7,2,-2],[1,8,7,8,6,-6,-7,-3,3,-8,2,6,3,-6,1,-1,1,-8,7,-6,6,-4,-6,3],[-8,-6,-3,6,8,-10,9,-1,1,9,-5,-10,6,-6,-2,-4,2,-3,-4,10,2,-1,1,1],[3,-9,6,-9,-5,7,-4,2,-2,-2,5,-2,-3,-7,-7,8,10,-6,9,9,10,5,-8,3],[-1,10,-8,2,5,8,10,2,3,6,-3,8,-2,9,-8,-2,7,7,-4,7,-10,1,-8,10],[1,3,-1,-7,-2,3,-7,2,-8,-9,10,2,-8,-10,8,-10,-5,2,4,1,8,-9,-10,10],[2,10,5,3,-7,-4,4,1,-6,7,4,9,1,-8,-1,-9,-8,-4,-1,8,10,10,-5,5],[-7,3,-10,5,10,-2,-2,3,-10,-4,-6,8,6,9,-10,-5,7,-10,10,-8,-9,-3,-3,-4],[5,-5,-4,-6,10,2,-2,-9,-6,-5,6,-9,8,-7,-8,6,-1,-4,-2,5,-8,6,-5,8],[-5,8,-6,6,8,-5,-8,-2,1,-4,-8,7,-8,-5,-9,4,6,5,6,-8,-9,-3,-3,6],[2,-9,8,8,10,-9,-8,2,3,-6,1,7,6,-6,6,-4,-9,1,-10,5,4,-6,-7,6],[8,-10,5,-10,7,1,6,-4,-10,-6,5,8,-5,4,7,-3,2,-5,-3,10,-10,5,-10,-5],[-5,-1,-2,2,7,1,-5,-8,-8,-8,7,2,2,-5,6,3,1,-2,4,2,1,3,8,7],[-6,8,2,3,7,6,-8,-7,-4,-3,6,-8,-9,-4,-4,-4,5,-4,-3,-3,-4,8,-8,10],[5,-8,9,7,-9,-4,2,-3,-1,6,-3,8,5,-9,10,-7,-3,7,3,9,-7,-6,2,-7],[-10,10,-1,-3,2,-1,3,9,-5,7,2,-1,-10,1,-8,-8,-3,-2,-5,-1,6,1,-2,-5],[-9,-2,-10,-4,-1,4,-3,-8,1,1,4,4,5,-9,-8,-1,-9,-1,-7,-1,10,-8,8,-9],[5,-4,1,-10,3,-1,-6,-9,-7,-3,-5,-3,-10,8,-6,-8,5,3,-1,-10,4,7,-6,-4],[1,9,10,1,-2,9,-5,2,-10,-6,8,7,-9,-2,3,10,-3,-9,1,-4,-8,3,-9,-3],[-2,10,-7,3,-1,3,-3,7,-1,1,-8,-5,8,-10,-6,6,4,-7,-10,6,-5,5,-3,-4],[-1,-4,-9,-5,-8,-4,8,2,5,-2,8,-6,9,3,-4,-6,-1,3,-9,9,-3,-4,4,-4],[3,-5,6,-6,-3,-6,-5,3,3,5,4,3,-6,10,-3,10,2,9,-7,4,-5,6,-3,5],[2,-9,-6,6,9,4,4,-8,-9,6,-1,3,-3,5,7,3,1,-8,6,9,-1,7,-6,2],[1,1,-10,-9,5,-8,-3,-2,3,-1,5,2,2,-1,-4,6,-3,-9,-1,-6,2,9,-3,2],[-2,-4,-3,-4,8,7,-10,-9,-10,-8,7,-7,7,8,8,5,5,8,-6,6,8,5,-6,3],[-3,7,4,-2,-2,1,2,-10,5,-6,-10,6,6,8,-6,-8,-5,-10,10,1,2,-4,10,-1],[1,8,10,3,-7,-7,-3,3,-1,8,5,-5,-1,-1,-2,6,10,9,9,-7,3,9,-9,6],[5,1,-1,-9,5,3,-2,5,4,1,3,2,-2,-2,3,-2,1,-10,-2,-7,7,-8,-3,-1],[4,2,2,5,-5,6,6,8,-5,-2,-5,6,10,-3,7,-10,7,-2,6,-4,4,-8,-2,-8],[5,4,8,6,-5,9,-4,-7,-10,2,4,-6,-8,9,-1,6,6,7,-1,-9,9,-10,-6,-4],[4,2,-3,-8,-3,10,-5,-9,6,4,9,4,3,3,-1,-6,4,-4,-6,-6,3,-2,-2,-9],[9,8,9,5,5,1,-4,2,-7,-3,-1,4,6,-2,9,1,-9,7,10,-9,-2,3,-9,6],[-1,1,-9,-8,10,-7,3,10,-6,9,-9,-3,9,8,10,6,-2,-7,-1,-8,-5,2,3,-2]], dtype = "uint32")#candidate|7618|(36, 24)|const|uint32
call_7617 = relay.TupleGetItem(func_4786_call(relay.reshape(const_7618.astype('uint32'), [12, 9, 8]), relay.reshape(const_7618.astype('uint32'), [12, 9, 8]), ), 2)
call_7619 = relay.TupleGetItem(func_4790_call(relay.reshape(const_7618.astype('uint32'), [12, 9, 8]), relay.reshape(const_7618.astype('uint32'), [12, 9, 8]), ), 2)
func_6104_call = mod.get_global_var('func_6104')
func_6105_call = mutated_mod.get_global_var('func_6105')
call_7624 = func_6104_call()
call_7625 = func_6104_call()
func_4652_call = mod.get_global_var('func_4652')
func_4654_call = mutated_mod.get_global_var('func_4654')
var_7643 = relay.var("var_7643", dtype = "float64", shape = (56,))#candidate|7643|(56,)|var|float64
call_7642 = func_4652_call(relay.reshape(var_7643.astype('float64'), [2, 4, 7]))
call_7644 = func_4652_call(relay.reshape(var_7643.astype('float64'), [2, 4, 7]))
output = relay.Tuple([call_7597,call_7613,call_7617,const_7618,call_7624,call_7642,var_7643,])
output2 = relay.Tuple([call_7598,call_7614,call_7619,const_7618,call_7625,call_7644,var_7643,])
func_7653 = relay.Function([var_7643,], output)
mod['func_7653'] = func_7653
mod = relay.transform.InferType()(mod)
var_7654 = relay.var("var_7654", dtype = "float64", shape = (56,))#candidate|7654|(56,)|var|float64
output = func_7653(var_7654)
func_7655 = relay.Function([var_7654], output)
mutated_mod['func_7655'] = func_7655
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7715 = relay.const([[[-4,2,-2,-2,2,6,-9,-6,-10,4,-2,6,8,-10],[-8,8,7,-6,4,7,-6,-8,6,4,8,-7,-6,2],[-10,-10,-7,2,10,-2,6,2,4,6,7,9,-10,4],[9,8,2,-8,6,-2,-8,5,-6,5,-9,2,-3,-1],[-7,-6,3,-6,2,4,3,-6,-2,4,-10,-2,2,-6],[6,5,-2,-10,5,-2,9,4,-3,3,-5,-5,-6,5]],[[2,-2,-7,-2,5,6,7,6,-3,7,5,1,-9,-5],[5,4,9,6,10,-7,-9,7,-10,-3,5,8,2,-10],[-8,-5,-4,2,4,3,5,10,-4,1,10,-6,-4,7],[-6,6,-3,-8,-9,-4,10,6,9,1,-3,-7,6,7],[2,7,-2,-1,-3,4,1,6,7,-7,10,-8,-10,-5],[2,8,10,3,6,7,-5,5,10,9,7,-2,6,9]],[[8,-4,-10,6,6,1,3,5,-8,-6,-4,-6,3,-6],[-9,-6,-3,-9,3,-2,-5,2,1,-10,10,9,-2,-2],[4,-5,5,10,-4,-2,6,-5,-8,-1,-8,2,-6,9],[8,5,1,3,-3,-5,-3,3,4,-10,-7,-3,-3,-3],[8,9,3,-5,5,-10,2,5,-6,-5,-6,-3,6,-10],[-3,-8,-4,4,-10,-2,9,-3,-9,6,-7,-6,-4,8]],[[6,-10,10,9,-6,1,-4,-1,5,3,4,-9,-8,6],[3,5,3,-8,5,8,2,7,2,-8,4,1,1,-9],[-7,5,8,-1,5,-5,-7,-10,-2,-5,-5,-9,4,-6],[-4,-6,-7,-4,10,5,5,4,3,-10,-2,-7,-10,7],[10,1,-6,6,-7,-8,6,-10,5,2,1,3,1,-2],[8,-4,-1,-4,-1,10,-3,-5,-4,-1,-1,5,8,-7]],[[7,9,9,6,10,8,-2,-9,9,-5,9,1,8,-3],[-5,-5,-8,-10,8,8,5,9,-6,-2,2,-7,-1,10],[6,8,-2,4,7,-10,9,3,3,1,10,-6,1,3],[4,5,-7,-1,-8,-10,8,-10,-7,3,4,-1,1,7],[1,-8,-3,4,6,8,10,-8,9,7,10,-6,-6,-3],[4,-9,-9,-7,9,-2,-7,-10,-10,5,-4,-5,-2,3]],[[10,5,5,7,2,-8,-7,8,5,-1,4,-4,6,-7],[10,6,-5,4,-6,3,6,1,-6,-9,6,-5,6,1],[9,-2,-7,9,-1,9,3,-7,5,-6,6,-1,-9,-3],[4,-9,-1,1,9,-7,4,-10,-9,-10,7,-9,-3,-7],[5,-7,5,3,7,3,8,8,7,-1,-7,5,6,6],[4,-2,-5,-1,7,8,10,1,1,-9,7,9,10,-7]],[[7,6,9,2,8,-6,-7,-10,6,-6,3,9,5,4],[-3,-2,6,-4,5,-1,-7,-10,3,-3,5,8,-5,8],[5,7,-2,-10,6,-5,10,-6,5,3,-9,-7,-6,-10],[3,2,9,8,8,-2,-2,5,-3,8,6,5,8,10],[8,4,6,-9,-3,8,5,-6,-7,8,2,7,7,-5],[-4,6,3,-3,-6,-5,1,10,5,2,7,-1,6,-6]]], dtype = "uint8")#candidate|7715|(7, 6, 14)|const|uint8
var_7716 = relay.var("var_7716", dtype = "uint8", shape = (7, 6, 14))#candidate|7716|(7, 6, 14)|var|uint8
bop_7717 = relay.less_equal(const_7715.astype('bool'), relay.reshape(var_7716.astype('bool'), relay.shape_of(const_7715))) # shape=(7, 6, 14)
func_6765_call = mod.get_global_var('func_6765')
func_6767_call = mutated_mod.get_global_var('func_6767')
const_7721 = relay.const([-8,8,1,-4,-1,-2,-2,1,-6,7,-9,-1,5,1,-6,-3,-1,2,4,2,4,-6,-3,-2,-9,3,3,3,5,-7,-10,-7,3,4,-7,5,-2,-8,7,-4,-8,6,-8,-9,-3,-7,-9,6,4,-9,8,-2,6,5,-9,10,5,-1,7,7,-8,-2,9,-7,8,5,2,6,7,-1,-10,4,-1,10,4,-7,-4,-7,9,-7,2,2,-7,-3,-2,1,-7,9,9,-5,9,-7,-3,5,10,10,1,-7,-2,5,7,8,-2,-2,-6,-5,-1,5,7,-7,-1,-9,8,-3,10,-4,5,-1,-9,-7,1,10,-4,-7,7,6,-8,-2,-4,-7,-4,-1,7,5,8,2,4,3,-1,7,-2,-7,1,-9,4,-1,-8,-7,-6,-2,-4,6,-8,-4,-7,6,5,4,-3,-10,8,7,-4,3,-7,-4,9,9,-9,6,-3,7,-8,-3,-3,-9,-4,9,1,10,6,10,-4,-5,-1,10,3,-3,10,3,-1,-4,-7,5,-6,-7,-8,10,-4,-6,-5,-1,6,3,-2,-9,7,7,8,-3,6,-7,-4,6,-3,7,9,-10,3,-10,10,-9,-3,-2,-8,-3,4,9,-10,-10,-7,3,-4,-10,-6,6,-8,-2,1,1,-8,6,-6,-2,7,-9,8,2,-5,-10,1,-7,-1,1,3,-3,-4,-3,-1,-7,6,7,-8,-7,-9,3,5,10,-9,7,-3,-2,-9,-9,1,-3,4,2,-6,4,-6,-9,7,6,-10,-7,-5,-2,-6,-7,7,-4,9,-2,5,-4,2,-1,-3,-6,-1,-8,4,1,10,-6,9,9,-8,-4,-8,-5,2,-1,2,-7,-4,1,6,-9,1,3,-9,-7,3,9,10,2,-9,-6,-4,-6,-10,6,1,2,3,2,-10,-7,2,6,2,-3,-5,-6,4,5,10,-1,9,1,-1,-1,1,5,6,5,-1,2,9,-3,9,8,1,8,-5,1,-1,-8,-10,8,-6,7,3,-3,7,-7,6,-6,7,9,5,1,-10,-10,3,8,1,9,5,6,10,8,9,4,-8,-1,3,-8,-10,-5,6,-6,-1,1,-9,-7,10,-4,9,-6,-3,1,8,2,8,5,-3,1,8,-1,8,-5,-5,-7,8,-3,-2,-8,-6,10,-10,-9,6,8,-1,10,-8,8,-3,-8,-8,-2,7,-3,-2,8,8,6,5,-9,-6,-6,3,6,8,-8,8,9,2,8,-4,10,4,-5,2,7,-2,-2,8,-2,-5,5,10,7,-7,-10,3,-1,5,-8,-10,7,-10,9,-9,6,-1,5,6,-5,-1,4,-2,3,-2,6,-5,-8,-2,-3,-9,-4,10,2,-3,1,-2,10,-1,-3,3,7,-10,5,3,4,-6,2,8,-4,-3,-7,-9,10,1,2,-1,-3,5,5,-5,10,7,-1,-8,-8,-7,7,-3,3,10,-7,6,4,-10,-9,-7,-10,3,-9,-4,5,1,9,-10,-5,10,3,-6,7,-5,-2,-7,7,2,4,-1,9,-10,-6,-3,-1,5,-6,1,8,2,-8,-2,1,-9,4,-4,1,-3,6,-10,-8,-1,7,-10,5,4,-10,-6,-2,8,6,1,7,4,10,8,-8,-2,10,1,3,9,-4,4,2,4,-3,-5,8,2,5,4,1,-10,8,-6,-9,-2,-2,8,10,3,-6,-4,10,-2,9,10,-2,3,-4,-10,-6,5,-1,-3,5,-6,4,5,7,-1,-3,-8,-5,-4,-10,3,7,3,1,10,-9,8,6,9,3,10,1,1,-9,-7,1,2,-8,-5,10,-4,2,2,5,1,-1,6,-1,10,-3,-8,6,2,6,10,5,-4,-6,-4,8,-3,-8,-3,-5,10,9,-2,-9,-9,-2,-8,-5,-3,-1,-5,4,-9,4,-5,4,-7,-5,-2,-1,-9,1,1,2,-6,5,-1,7,3,-10,10,-6,-1,-6,-3,-3,2,-10,10,1,4,-7,-4,2,10,8,10,-7,-2,3,9,-10,7,-6,-1,-3,10,9,-8,5,-5,-8,-6,-3,7,6,1,7,-5,5,9,-2,-1,6,1,7,-2,-8,-9,9,-6,-2,-2,-5,3,4,1,2,8,-1,-7,5,-3,-2,-6,8,7,-1,8,-7,-9,2,10,1,-2,-6,-1,10,6,6,-2,-5,4,-1,3,1,10,9,-7,-9,3,10,8,9,2,5,-10,5,6,6,4,9,-3,6,-1,1,-10,-9,8,2,5,-4,-10,1,-4,3,-4,-4,3,9,6,-7,8,7,-5,-8,8,5,10,4,-3,-4,1,6,-7,-7,4,9,1,-9,-7,-7,8,3,-10,-6,5,-1,-7,8,3,-8,9,-10,5,7,8,-9,5,-8,10,-9,-1,9,1,-3,3,3,9,2,-5,-6,-4,1,6,6,1,-8,8,-2,5,3,-5,1,2,-7,-4,-1,-9,-8,4,-10,-9,-9,8,-6,-7,2,-7,-7,8,-7,-9,1,-3,-3,-6,1,-1,-4,2,-1,-9,10,-8,7,10,-8,-2,-7,1,3,-10,3,-5,-10,7,5,-6,3,1,-10,4,10,-9,3,6,7,8,-9,9,9,3,-3,6,-7,-6,8,6,-5,6,7,2,7,-8,-5,8,-2,-8,3,10,3,-6,-7,-10,9,10,7,2,6,-2,4,4,2,2,8,-5,10,-3,-4,-9,8,-9,-5,-8,-10,1,10,-1,-9,-8,-4,9,4,1,6,1,3,-8,-10,7,-9,-5,4,-1,-8,2,-2,8,-5,-4,-10,3,-4,2,-9,3,5,-7,5,-4,9,-8,6,-6,4,-10,-4,10,7,-1,10,4,-5,6,1,4,-5,8,6,-2,6,9,-6,8,-2,10,7,7,7,10,5,-5,-6,-4,8,7,10,6,6,9,-4,-9,-5,1,-4,-7,6,-1,-6,7,1,-10,9,-6,9,-2,-8,-4,-9,-4,-9,-2,-4,9,8,-8,9,9,-5,4,10,-8,9,1,8,-1,-8,-2,-7,-6,7,1,3,4,5,-1,4,-5,-1,10,-4,6,5,-8,-7,7,-8,9,-8,-7,-1,-10,-8,-9,-3,-8,-4,-1,-2,-3,-5,2,9,-5,4,-2,2,1,8,1,-3,-10,-3,5,-4,-4,-9,2,-8,6,3,-9,1,7,2,-5,-8,1,8,7,-6,-10,-9,-2,-9,9,6,7,9,-9,3,-5,10,2,-4,9,2,-3,-2,-8,-3,3,6,-9,5,6,-3,-8,-9,-1,9,-2,-1,-10,2,-2,-6,6,-6,-4,6,-10,3,2,-8,8,4,6,7,-6,5,-7,6,10,-10,-4,8,-5,-2,6,1,7,4,-1,-1,-1,9,-7,1,7,-6,8,-7,-5,-10,-10,5,-6,-1,9,6,-8,7,-9,3,-10,7,2,-10,4,10,-3,-3,3,8,8,3,8,-1,6,3,4,-3,5,-5,-5,6,9,7,-3,-5,10,7,6,4,-4,10,-8,-4,8,3,4,1,9,5,-4,3,8,3], dtype = "uint32")#candidate|7721|(1320,)|const|uint32
call_7720 = relay.TupleGetItem(func_6765_call(relay.reshape(const_7721.astype('uint32'), [15, 8, 11])), 0)
call_7722 = relay.TupleGetItem(func_6767_call(relay.reshape(const_7721.astype('uint32'), [15, 8, 11])), 0)
bop_7723 = relay.less(var_7716.astype('bool'), relay.reshape(const_7715.astype('bool'), relay.shape_of(var_7716))) # shape=(7, 6, 14)
func_7004_call = mod.get_global_var('func_7004')
func_7010_call = mutated_mod.get_global_var('func_7010')
const_7731 = relay.const([-3.944547,-6.024828,7.969406,-9.397386,2.759406,-6.249964,9.618845,-9.154736,5.224728,-3.800579,7.780396,-0.865164,-6.959797,0.186760,4.377753,-6.956374,0.832537,-3.117314,-4.666345,-2.852733,-9.965590,-0.799784,4.660467,-0.797736,4.930521,-7.784910,3.393389,8.087841,6.830305,5.453164,-7.999553,5.123255,6.561595,-5.965995,-0.087443,0.482995,5.173518,-6.767062,-2.648863,-2.962014,7.294432,-7.076232,7.903818,-9.132194,-9.717536,6.094562,2.953516,3.752474,7.667506,-6.076316,-0.541256,-9.886993,3.336731,-1.773567,7.759259,6.475400,-1.543563,6.205986,9.321267,-3.228102,5.106167,7.283749,-8.367521,3.656798,-7.196131,-0.497735,-1.766623,9.032525,5.582291,2.709500,-5.253574,-0.658232,6.765183,-0.365257,4.308279,-4.615583,3.129693,-8.143040,-8.936911,8.483533,6.417574,-7.345078,-8.592781,-1.059741,4.469652,-4.948023,-2.964513,-0.661410,-2.434726,9.451328,-1.604102,-4.592627,6.053567,9.939993,9.580366,-3.956591,-6.611889,-2.244437,-9.240139,3.938396,-2.957576,9.378583,-5.829123,-7.494339,2.925406,-2.403031,-3.437604,0.246766,7.673362,2.017218,1.750323,-0.912732,-7.510177,-5.170370,1.332979,6.157136,3.750937,-7.810428,-6.195380,-7.009549,-2.868104,0.535633,2.795214,-9.728635,-9.212239,5.544449,-1.330741,5.520202,-0.685900,4.188075,0.413452,-7.729361,-3.247850,-5.365515,1.479224,-6.376078,-1.832065,-4.529696,-2.810701,-6.779009,7.369257,-0.815122,0.069305,-9.488171,5.326741,1.789033,-3.792926,5.868802,2.528287,-2.771602,-8.912794,-1.896905,-4.752405,-7.239345,-4.589763,7.397355,1.377947,6.491266,-7.864658,-2.275760,1.145948,-7.302093,4.094378,-7.053744,-9.715490,-0.033007,9.877885,0.634816,3.733059,-5.123965,-8.221401,9.964826,4.101939,3.471431,0.648246,5.644226,3.409317,-7.054740,3.517568,4.405068,7.334357,-8.498674,6.755086,4.132899,-9.775870,-6.318682,9.745327,-7.743631,-9.053672,-2.703519,8.207228,-2.818790,-3.505763,-4.184481,-0.087805,3.478500,8.363483,-9.893508,0.390581,8.093197,-3.619228,-7.832642,-7.060814,-8.314458,-5.639428,-7.347764,8.479837,3.869611,6.779433,2.180787,2.322221,-0.160140,4.952432,5.471346,-1.657221,-9.416488,-3.570922,-0.736279,0.666455,2.945760,-8.895907,0.943578,2.359893,9.183967,-0.429583,-1.746706,9.056128,-9.142882,5.114013,7.826227,3.847839,-3.570004,-5.335751,-2.478828,-1.160328,-1.570374,7.861642,-5.831008,-1.686174,3.485272,-7.081160,-2.595801,-8.713142,-8.574298,5.738188,2.507541,2.350423,-7.581653,2.842386,4.720527,4.067252,-3.703645,-2.710441,2.906244,-8.498583,7.078546,-1.045964,-8.360478,1.250873,-3.027169,-4.854785,3.527326,-4.416668,4.667988,-2.294017,0.904532,-7.278481,-5.350808,-2.117008,4.770619,-2.053837,6.131369,0.766179,-2.135607,3.707819,4.746180,-2.917146,4.722408,-3.453862,-4.181637,-4.772330,-9.399649,4.031432,5.241392,-6.955707,-1.666266,9.115525,7.457318,8.077262,2.343221,2.446720,-3.603933,1.895754,-5.464606,2.035509,-8.698562,-3.725179,-8.640378,4.057223,2.550014,9.481021,8.408112,8.614220,6.536513,-9.673113,5.865542,8.911452,3.891974,-2.240765,-1.548302,1.173539,1.606955,-8.679922,7.477250,1.073048,0.675431,3.884461,6.003155,-3.500257,2.546136,-3.145613,-4.799163,8.448148,-3.627270,4.343259,9.541901,-6.790421,-7.400156,-6.455645,-1.449484,-5.339087,-7.145380,-8.542453,-5.322746,-1.362522,7.915571,2.268825,-8.972162,-5.132607,-5.371344,-4.939975,-8.813558,-2.281607,2.702282,-7.561070,-1.626409,0.692659,-9.822497,-1.929016,-1.703991,8.417174,3.915286,7.213910,8.867662,5.894407,8.417739,2.557911,-1.275389,-8.013420,-9.060098,2.612768,4.840873,-1.462212,6.379093,5.186862,0.961228,5.554125,3.403788,8.665357,-5.951035,-6.456265,-9.582353,9.852378,9.400690,-3.655822,4.727710,-9.835892,-0.368822,-3.837387,1.336060,-4.793711,-6.064311,-3.776096,-9.538321,-4.478100,-6.274510,7.461983,-7.424005,0.449953,-1.905978,-4.659279,2.048162,4.696750,7.900385,3.494477,4.561464,1.453837,-2.035996,7.537391,3.122238,0.128350,-6.424713,-6.934490,-1.269351,-5.857568,3.122342,-4.363567,0.528127,3.884934,3.496812,8.313817,-5.396180,0.189584,-1.912305,1.391608,-9.832935,5.107079,4.086428,-3.831724,9.993061,8.965349,7.179331,-4.878399,7.482320,1.554792,-1.440454,5.653158,2.550638,2.874457,0.014528,-5.772732,-3.484623,-8.471329,2.704251,2.972544,6.508678,-7.927368,-6.756946,5.877223,-5.938898,-1.698069,1.365698,5.833139,-1.712155,4.670794,2.261602,-6.265501,0.411824,-9.016758,7.759760,-6.727184,-2.191153,3.485997,1.784049,-3.348085,2.862335,-2.688681,-9.269470,9.085106,5.939177,-6.955776,-7.669862,-2.435505,4.750582,3.537553,-2.260449,8.373341,-8.024285,5.954711,7.957569,6.626997,-2.796424,5.950948,5.894315,-9.161773,2.620075,9.496063,4.932624,-6.352966,-7.981348,7.992134,7.233271,7.056107,4.531541,1.375044,-2.746099,9.507933,-7.657877,3.234769,8.836351,-8.864098,-6.105724,2.971435,6.843018,-2.958847,9.183192,-1.692901,-0.449546,-1.731529,-0.613785,-0.082231,-2.655163,-3.244288,6.066305,-4.709346,3.226225,2.304971,-6.971153,8.042449,-5.600938,-4.417763,5.642766,-0.374692,-0.528923,8.723389,-5.309785,-8.208849,1.161818,-4.145404,-1.055300,7.049322,6.003777,-0.757259,6.453751,-5.138162,0.673914,0.353226,5.488241,9.132710,-7.481371,3.267868,-0.304094,8.772435,-7.127132,-6.026499,-7.751920,-3.729219,6.036125,-8.737248,-7.866144,-9.788986,6.018041,-5.987178,-8.629654,-1.848425,-1.980477,9.163259,7.544706,-3.592138,-3.037369,5.270426,-3.460180,5.830351,-9.670302,9.152748,-5.394544,-5.545698,9.611186,-0.952676,-2.489269,1.885213,-6.083544,-5.914273,2.899080,4.518176,5.770395,1.440886,-6.417508,0.557020,-5.458254,6.897502,1.341799,-6.866677,-8.501434,-0.325468,2.681809,3.240061,-6.129139,-2.379982,-3.582266,-2.718695,-5.468512,-3.522085,-6.962138,7.529801,-4.862610,9.579382,-9.378487,-7.037595,-7.716074,-1.393064,-7.206361,-3.203201,5.068765,0.470531,-3.013255,8.674569,4.585200,-4.937984,-9.366242,-3.654920,-7.030189,-1.329632,0.651786,-8.698633,9.486916,2.823445,-7.282105,-8.652142,-0.577921,-2.264455,8.844810,7.277919,8.286076,-2.950233,5.832246,-7.028884,-9.860783,1.782825,5.334457,-0.566468,-5.421418,8.837901,2.745676,-4.277607,6.762240,-2.049033,-1.143305,0.622548,3.922084,5.154247,-5.176320,5.515640,-9.153908,-0.594975,-1.043687,-7.692660,-8.022296,3.842889,-5.238444,-1.928162,-3.558935,-0.548488,-8.506195,-1.203612,-9.415842,8.977188,2.353000,7.549244,3.652939,-1.725235,-2.112775,-6.330844,-0.504286,-5.920812,0.204773,-5.246028,-1.280112,-6.065223,-3.851248,-6.498365,8.206341,2.352460,-6.732762,-4.616663,-5.590947,2.663105,-5.288843,6.552795,-7.670673,8.032298,-7.062614,6.918565,-3.332023,-9.421821,3.314000,7.167609,-7.686817,5.795219,-0.477749,-7.478775,-3.019657,2.366536,2.656360,7.781891,1.828147,8.362436,-4.141051,-4.810970,-4.661009,2.630626,4.260835,-8.377224,9.293020,3.538392,-2.906906,-5.425566,2.381067,8.310203,4.589295,-9.453538,6.536081,-9.908802,0.393971,-7.891327,8.978811,5.725331,7.624946,-3.542290,1.755030,-8.644452,6.511383,3.262550,-5.928867,9.304019,6.414619,-1.913676,2.091426,1.155426,2.244120,8.721012,9.708214,-0.046395,-0.932361,-8.993555,-6.232754,9.753107,8.692358,-5.563088,0.531432,8.335757,-2.353336,1.101025,7.960540,-8.258567,7.145058,4.678946,-4.722278,0.223166,9.177051,-7.693752,-5.186561,4.815998,-1.118128,8.372634,-6.292523,1.496370,2.792159,-0.258803,7.671977,0.054357,-2.489869,6.345853,-3.098098,-3.822741,-5.764601,6.780978,-4.979248,0.738395,6.920395,5.940488,9.544926,-9.241672,0.031082,5.485168,4.877197,0.299146,-5.503564,-2.482783,8.711856,-3.402797,7.540624,-3.227027,-3.058076,4.107917,5.463585,1.355402,7.443402,7.446827,2.597090,0.180241,8.615148,-5.698924,4.623336,7.404589,2.910759,4.124717,5.964348,1.995958,6.089284,8.615942,9.017651,5.952903,-8.517726,9.029363,-4.298646,-9.909445,-7.436502,5.375704,6.547693,-5.204256,-3.981704,-8.810517,-0.975417,0.790623,-6.132171,-4.368548,-2.676649,-8.647891,-1.468574,-4.420145,-4.868696,-4.099021,5.925361,-2.212420,-7.044394,-9.046130,-9.031441,8.700623,-2.071627,-7.232664,8.056028,-4.014416,3.808654,9.203225,-3.107907,-1.045087,-9.269577,1.244805,-5.506752,6.581690,9.771217,2.104133,-4.321819,-6.915547,1.618039,4.769152,1.575844,-1.006222,-7.551617,-9.390378,8.796221,5.204677,3.092701,-6.898929,-7.997664,9.989410,7.967551,-0.883488,8.675389,-8.857008,8.623267,0.293776,6.789785,1.578471,1.563993,-0.583898,-8.943090,8.382310,9.964119,1.583188,5.945208,9.721698,4.975857,-1.150019,-5.706077,-6.178688,-7.885788,-5.952666,6.867473,2.093609,0.246735,-1.222600,5.924197,0.586347,7.329173,-9.867398,0.010285,6.788918,9.449369,1.335077,-7.757735,-2.959592,-2.542153,-2.784548,-1.128550,-5.880003,8.571156,-2.819539,-4.728185,7.913607,-3.322712,-0.384711,7.371910,4.797984,7.055752,-2.319669,-5.778237,-0.425813,1.556587,-0.310055,-4.347271,2.661439,8.393512,-5.978688,-0.324318,1.620639,-0.641120,-8.901249,6.796304,-6.882920,4.349382,-1.189027,3.268247,-8.280222,1.228840,9.125429,1.297544,-4.426628,-2.848546,0.449876,-3.009901,6.444088,-8.027514,7.467874,3.365219,8.527835,-0.800758,-4.953278,-1.559778,5.971257,-2.759401,-8.865235,2.404704,-9.947177,7.721542,-0.961914,9.286681,-4.222570,-6.308232,3.903706,-3.089530,-4.758334,2.225245,-1.256147,2.210093,2.891335,-1.929657,6.739566,-6.787999,3.098238,6.517947,-6.311130,-3.361397,5.895791,-4.288425,-7.731832,6.972604,4.537445,-7.042570,-2.089629,4.288409,9.380543,6.253691,-9.246287,-8.399057,-8.585883,4.550773,-8.724890,6.937426,-1.852756,5.248883,-0.874369,3.411358,6.793966,-3.276397,8.344354,2.382911,1.915830,-2.526578,9.355929,-4.012810,-0.578062,-4.633127,1.235115,-3.385197,4.538369,-2.250437,-6.322724,0.124013,3.939641,-2.706551,-9.472090,6.733286,-0.729178,2.224752,5.454787,3.116256,5.760051,-1.746004,-0.249242,5.753634,-0.862881,1.359668,1.753756,-3.579856,-6.337488,-2.778885,3.278498,5.968652,7.913107,3.473631,-4.729788,-5.933002,-3.695023,-2.992196,-8.155847,-6.193940,0.600768,5.150578,-2.173659,-4.934565,-1.005256,6.349768,-0.740506,-3.029065,2.813431,-0.306416,-0.535799,-8.074594,-2.915310,8.250838,-0.347271,0.795595,-3.809194,-7.450097,2.874116,4.279160,0.136673,5.811642], dtype = "float32")#candidate|7731|(1040,)|const|float32
const_7732 = relay.const([-9,-1,-5,-9,-6,-9,-9,3,-8,8,5,-7,7,6,5,2,-8,10,-5,-2,-4,-3,3,-8,-5,4,4,-6,9,-3,-9,10,-7,1,-9,-10,3,5,3,5,-10,9,-10,7,9,6,4,-3], dtype = "int16")#candidate|7732|(48,)|const|int16
var_7733 = relay.var("var_7733", dtype = "float64", shape = (1760,))#candidate|7733|(1760,)|var|float64
var_7734 = relay.var("var_7734", dtype = "float32", shape = (360,))#candidate|7734|(360,)|var|float32
call_7730 = relay.TupleGetItem(func_7004_call(relay.reshape(const_7731.astype('float32'), [1040,]), relay.reshape(const_7732.astype('int16'), [48,]), relay.reshape(var_7733.astype('float64'), [1760,]), relay.reshape(var_7734.astype('float32'), [360,]), ), 1)
call_7735 = relay.TupleGetItem(func_7010_call(relay.reshape(const_7731.astype('float32'), [1040,]), relay.reshape(const_7732.astype('int16'), [48,]), relay.reshape(var_7733.astype('float64'), [1760,]), relay.reshape(var_7734.astype('float32'), [360,]), ), 1)
uop_7739 = relay.atanh(bop_7723.astype('float32')) # shape=(7, 6, 14)
uop_7742 = relay.asin(var_7716.astype('float64')) # shape=(7, 6, 14)
output = relay.Tuple([bop_7717,call_7720,const_7721,call_7730,const_7731,const_7732,var_7733,var_7734,uop_7739,uop_7742,])
output2 = relay.Tuple([bop_7717,call_7722,const_7721,call_7735,const_7731,const_7732,var_7733,var_7734,uop_7739,uop_7742,])
func_7750 = relay.Function([var_7716,var_7733,var_7734,], output)
mod['func_7750'] = func_7750
mod = relay.transform.InferType()(mod)
mutated_mod['func_7750'] = func_7750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7750_call = mutated_mod.get_global_var('func_7750')
var_7752 = relay.var("var_7752", dtype = "uint8", shape = (7, 6, 14))#candidate|7752|(7, 6, 14)|var|uint8
var_7753 = relay.var("var_7753", dtype = "float64", shape = (1760,))#candidate|7753|(1760,)|var|float64
var_7754 = relay.var("var_7754", dtype = "float32", shape = (360,))#candidate|7754|(360,)|var|float32
call_7751 = func_7750_call(var_7752,var_7753,var_7754,)
output = call_7751
func_7755 = relay.Function([var_7752,var_7753,var_7754,], output)
mutated_mod['func_7755'] = func_7755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6672_call = mod.get_global_var('func_6672')
func_6673_call = mutated_mod.get_global_var('func_6673')
call_7780 = func_6672_call()
call_7781 = func_6672_call()
output = call_7780
output2 = call_7781
func_7784 = relay.Function([], output)
mod['func_7784'] = func_7784
mod = relay.transform.InferType()(mod)
mutated_mod['func_7784'] = func_7784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7784_call = mutated_mod.get_global_var('func_7784')
call_7785 = func_7784_call()
output = call_7785
func_7786 = relay.Function([], output)
mutated_mod['func_7786'] = func_7786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7540_call = mod.get_global_var('func_7540')
func_7541_call = mutated_mod.get_global_var('func_7541')
call_7829 = func_7540_call()
call_7830 = func_7540_call()
var_7835 = relay.var("var_7835", dtype = "float64", shape = (7, 10, 3))#candidate|7835|(7, 10, 3)|var|float64
bop_7836 = relay.bitwise_xor(call_7829.astype('uint32'), relay.reshape(var_7835.astype('uint32'), relay.shape_of(call_7829))) # shape=(7, 10, 3)
bop_7839 = relay.bitwise_xor(call_7830.astype('uint32'), relay.reshape(var_7835.astype('uint32'), relay.shape_of(call_7830))) # shape=(7, 10, 3)
func_1254_call = mod.get_global_var('func_1254')
func_1257_call = mutated_mod.get_global_var('func_1257')
const_7845 = relay.const([10,7,2,8,-8,1,-9,-2,2,5,-9,6,1,-8,9,4,-7,-3,-2,8,-9,3,7,1,1,-7,-4,-2,-7,9,-8,-3,7,-3,-8,10,-10,-7,10,8,-3,-10,10,-9,4,2,4,-6,-3,1,-10,1,6,6,-6,-7,-1,-4,-1,-7,5,-7,-7,10,-2,3,2,1,-4,3,-5,-8,7,7,-9,5,4,-2,6,2,3,-1,3,-4,-1,6,-7,-2,10,-6,-4,10,-4,-10,4,-10,7,-3,-3,7,6,-10,2,9,9,-9,-8,-2,1,3,-4,-2,6,1,-4,5,-6,3,7,7,9,1,-5,10,-5,-1,9,9,-1,-7,3,-7,9,4,-3,-5,9,2,1,9,-6,-4,-6,-10,-7,3,1,8,9,-9,5,7,-10,-5,2,6,4,2,-4,6,1,3,9,-3,3,1,6,9,10,4,10,1,-1,-4,7,-8,9,-2,1,7,7,-2,-9,-8,7,-2,-3,10,5,-9,-6,-1,-6,-5,10,3,-1,10,-5,8,2,8,-2,7,4,2,-3,-5,7,10,-2,-5,-7,3,-5,6,3,-3,2,-4,8,-6,-8,3,-1,-3,3,3,2,4,9,3,1,6,-7,-2,6,-5,-1,10], dtype = "int16")#candidate|7845|(240,)|const|int16
call_7844 = relay.TupleGetItem(func_1254_call(relay.reshape(const_7845.astype('int16'), [16, 5, 3]), relay.reshape(const_7845.astype('int16'), [16, 5, 3]), ), 2)
call_7846 = relay.TupleGetItem(func_1257_call(relay.reshape(const_7845.astype('int16'), [16, 5, 3]), relay.reshape(const_7845.astype('int16'), [16, 5, 3]), ), 2)
func_6480_call = mod.get_global_var('func_6480')
func_6483_call = mutated_mod.get_global_var('func_6483')
var_7851 = relay.var("var_7851", dtype = "float32", shape = (2, 660))#candidate|7851|(2, 660)|var|float32
call_7850 = relay.TupleGetItem(func_6480_call(relay.reshape(var_7851.astype('float32'), [15, 8, 11])), 0)
call_7852 = relay.TupleGetItem(func_6483_call(relay.reshape(var_7851.astype('float32'), [15, 8, 11])), 0)
output = relay.Tuple([bop_7836,call_7844,const_7845,call_7850,var_7851,])
output2 = relay.Tuple([bop_7839,call_7846,const_7845,call_7852,var_7851,])
func_7861 = relay.Function([var_7835,var_7851,], output)
mod['func_7861'] = func_7861
mod = relay.transform.InferType()(mod)
var_7862 = relay.var("var_7862", dtype = "float64", shape = (7, 10, 3))#candidate|7862|(7, 10, 3)|var|float64
var_7863 = relay.var("var_7863", dtype = "float32", shape = (2, 660))#candidate|7863|(2, 660)|var|float32
output = func_7861(var_7862,var_7863,)
func_7864 = relay.Function([var_7862,var_7863,], output)
mutated_mod['func_7864'] = func_7864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7559_call = mod.get_global_var('func_7559')
func_7561_call = mutated_mod.get_global_var('func_7561')
call_7914 = relay.TupleGetItem(func_7559_call(), 0)
call_7915 = relay.TupleGetItem(func_7561_call(), 0)
func_6124_call = mod.get_global_var('func_6124')
func_6127_call = mutated_mod.get_global_var('func_6127')
var_7919 = relay.var("var_7919", dtype = "float64", shape = (546,))#candidate|7919|(546,)|var|float64
const_7920 = relay.const([-9.108163,6.287390,4.203850,3.413354,6.808015,0.672468,-2.103670,7.604010,-6.130482,-0.162153,-7.668107,7.458036,-5.769447,8.577365,1.955621,-2.475460,-3.872500,9.009036,-8.937616,0.405085,-0.905414,-5.719539,4.249169,-6.438607,9.510963,-8.080265,-3.825358,5.060069,7.720956,-1.942451,9.013344,-8.782582,-8.700900,4.870985,-1.967898,-3.698859,3.365250,-4.659257,5.125518,-0.417784,8.048814,-7.662225,-8.525313,-2.073977,-0.304961,6.939656,2.191757,1.638256,9.128900,-0.048724,-4.960374,-1.262915,1.909479,-5.518721,0.109062,-6.236168,8.279790,-2.065290,-8.842664,2.483898,3.016837,-3.140330,-2.098434,1.880206,-1.184748,-1.909110,-4.388322,-2.035010,4.486632,-1.639441,6.799230,9.827239,9.284482,3.822922,-7.212672,-4.130813,8.489078,-6.735152,0.621383,3.827713,-2.511712,-2.548642,-2.388024,-6.820998,6.790468,-0.183411,6.552309,2.297099,3.576157,-1.233980,-3.929919,3.386472,5.294115,7.175856,2.693804,-1.195525,-8.577953,7.955007,0.830141,-9.470649,-9.392333,-1.785361,-8.990937,6.698721,-1.248894,0.159227,-5.234242,-1.221966,8.220893,-6.126723,-0.041269,-4.862108,0.603117,5.727253,5.576727,6.674003,-5.262705,-0.626501,-6.190814,-2.448615,1.404421,7.396017,-4.390503,-7.098718,1.163717,6.398626,3.672285,3.282440,3.539796,-2.508803,-6.793699,-3.880736,8.635264,-0.763075,-1.660697,-3.693310,-7.422677,-8.248235,6.136646,-7.031723,9.590206,-2.387726,6.912652,-0.908539,-1.789888,-7.682509,-8.445124,4.005834,6.539304,3.875353,-2.717029,3.675878,0.584504,5.426308,-5.457487,-0.976118,0.811997,2.898828,-1.194960,6.523266,-8.713641,9.637132,2.472342,-1.190198,-2.233036,-1.738152,6.514593,-1.967239,3.279134,1.221175,5.060667,-4.595439,-6.032576,-3.525879,7.906029,6.841282,1.182331,-4.800634,0.568584,6.169551,0.590123,-3.480438,0.452351,8.446963,-6.654106,3.589949,-5.598818,9.129828,6.708382,3.985087,8.268788,-1.166188,-0.758597,6.636433,0.197455,8.408762,0.782819,6.400581,-3.924970,9.238775,9.600824,9.988823,-4.644946,-0.616872,-4.652510,-0.678779,-4.548695,-6.085527,-2.401485,-7.931173,-4.561987,-4.255629,5.790154,-9.904981,-8.299303,-2.415361,-8.350405,-0.037403,-7.488867,-1.067748,-1.111667,2.683292,2.946094,2.115767,9.647562,9.008933,-7.854852,1.178993,7.824885,0.778315,-5.155976,8.659800,9.370217,3.431943,-6.921612,-8.363246,8.783704,3.143006,2.870669,-5.795481,-3.495894,-5.831298,0.809442,-8.937982,-8.804777,-7.197436,-8.855669,2.385780,8.671095,5.408195,6.725521,1.760958,4.696142,5.671179,1.499704,-4.895959,-9.030437,-2.960941,-9.951425,-7.890886,4.001280,3.814314,6.752182,5.219139,-7.144520,-6.267056,2.601184,-6.280434,2.885193,2.348835,2.638786,-2.507329,7.951086,8.870875,-6.850722,-5.116345,-1.657608,9.131717,-2.561066,7.656594,1.528950,-1.945206,3.053111,-8.117697,5.320074,9.492919,1.873727,-2.096871,6.562867,-2.908223,0.565817,2.627325,2.938615,9.216828,3.783189,-7.363607,5.439248,7.634120,6.456979,0.925808,-8.833791,9.821732,-8.123518,-2.706611,4.974657,6.766332,4.749123,-6.624246,5.650587,-8.670149,-7.009890,-7.421133,-7.697659,-7.355471,2.002187,-1.700123,0.569076,9.695377,5.298394,7.581728,-0.016598,5.482647,0.010458,-5.360940,-6.419421,2.325694,7.893697,-3.301063,-9.080183,0.543443,-9.093806,9.511085,5.410119,3.084018,-2.968867,5.310966,-8.621685,-0.572554,7.041915,-5.160540,0.298175,-6.365085,1.902368,-0.408823,-9.647449,1.251189,4.012026,-0.726544,3.724579,3.714325,-1.970916,8.772158,-0.204468,-1.170484,-0.953824,0.181180,-4.084928,1.825520,-8.057107,5.732298,8.182292,3.717153,9.582375,-8.203361,7.810855,-3.900085,-7.675407,-3.483970,7.792986,-5.273818,-2.882428,-6.765640,-1.320437,-4.973975,4.075442,7.131827,8.920155,-8.577367,-9.993417,4.253309,-3.630117,8.765721,1.885940,7.265517,-0.317956,7.136626,2.099374,0.516501,2.227029,-8.242511,-8.486900,7.548380,-6.335164,-0.987527,-2.260336,2.561954,-1.786326,-1.882037,-9.153279,-0.127145,6.772045,1.308681,2.426167,-3.091924,3.865810,-9.075322,-8.072897,2.136622,2.294532,3.696082,8.626021,-1.811020,1.849998,-1.703471,4.140223,-2.707172,-6.446083,5.199805,5.118839,-2.954000,8.399063,-2.914622,-8.000620,-5.599397,0.637934,-1.640380,-8.092023,-3.855944,8.759593,-2.025651,-7.560345,3.107952,-6.922987,-4.002847,0.073533,-3.185952,7.237762,-5.489523,-4.483998,8.903165,9.253792,6.972804,6.472728,8.554690,-7.795103,7.995520,8.431330,5.142099,6.657403,0.010328,-3.879971,7.041435,-3.623764,5.486418,3.415047,-6.527595,-3.117876,-1.251455,-3.856611,-9.779614,4.800311,0.111770,4.507881,8.200343,-5.425355,9.527090,-7.550098,7.682003,-1.680378,-4.411379,6.461299,-7.202374,-3.199895,2.393340,1.543015,6.052834,3.984709,2.643296,0.730418,-7.351933,0.670095,-5.359446,-5.903430,-4.038903,-9.358688,-7.813461,6.965541,-0.345356,-2.022591,-1.865380,1.926245,-9.818466,-2.126610,2.601202,-7.507688,-1.611003,2.261244,-5.169194,-0.689837,5.373516,2.269536,-0.211287,-9.330246,-5.950381,6.302965,-3.244184,-0.200434,8.304414,-1.612217,-1.040192,-5.048920,-0.658952,6.685111,-3.396975,3.444597,-1.507441,1.887096,-2.183414,2.192104,-6.413198,6.447961,-2.059207,-9.078876,2.947752,-8.561582,4.890423,-3.114749,4.855953,-9.484277,9.592499,9.660570,-6.602732,-3.052205,-0.183531,5.894521,-4.542936,-5.905795,-1.388401,0.792437,7.901078,5.424456,-6.419247,6.391604,6.902594,8.780277,8.315913,7.736212,-6.929169,-6.082685,8.355820,0.391169,4.746113,-7.703531,-8.525758,9.925605,-3.518894,5.520840,-5.077788,-1.576649,-4.975618,-8.067830,-7.517376,-3.232461,0.805446,9.824522,-4.525285,4.173662,-0.731878,-8.150920,8.230444,2.762701,-7.153718,-2.668523,1.858993,8.064562,8.243056,4.538273,2.656326,-7.529463,6.277459,5.111706,-9.365961,3.674623,8.767294,-4.452011,6.666690,-9.358427,-3.100313,-6.733872,9.746187,7.223968,8.712091,-1.513226,-8.889431,3.904490,-7.943076,-8.445950,6.791755,-3.563229,8.579137,4.695016,-4.687064,-6.236029,8.337959,-3.964262,-7.450167,1.945077,-5.845874,-4.786528,-6.352473,-1.020934,4.517677,2.650667,-6.091773,1.725922,-1.815535,-0.720366,-3.083091,3.142632,2.843191,-4.584792,-5.170171,3.238993,1.128853,6.571069,-0.429617,-5.189731,-6.604475,-1.271361,0.499003,-1.119796,6.551433,-9.860125,-1.150158,1.767715,2.022147,7.865785,9.848983,5.154270,1.872544,-5.636161,-1.554133,8.826820,-4.984754,-1.847623,1.001588,-5.198041,1.362768,-8.022242,-8.569872,-9.174079,5.436979,5.813232,-9.551706,6.207945,-2.783742,8.066004,-9.600516,0.206311,1.987889,1.852454,5.767718,8.921967,-4.111540,-0.836057,1.515929,3.154075,-3.072081,3.861955,5.654757,-1.029734,-1.833646,-0.537779,-5.088923,5.814487,4.070238,-4.475988,-5.752762,-2.081440,9.872906,-4.045165,4.625365,7.489815,-3.256651,-1.348008,7.135373,7.738198,6.258027,3.808606,-0.190273,0.292113,4.892353,-0.011765,8.040031,-9.353877,8.605789,4.178493,-2.839004,-9.981637,7.649161,-2.204741,-8.241017,-6.830613,-0.088786,9.969887,-5.519191,-0.404076,8.114632,-0.820028,2.835876,3.114477,0.659218,8.890980,-3.604610,-3.358502,2.158099,-4.521386,8.823439,3.153433,-6.088874,-8.416804,5.311301,-9.617674,6.602033,9.745891,-6.649041,0.373216,9.346213,4.041849,-3.524943,5.480444,8.338612,3.849232,-9.093171,-0.653541,-5.058516,8.099739,1.565738,-9.210193,-2.325803,-3.217502,-3.771462,-0.095693,-1.941925,1.023130,-9.303512,-0.896350,0.673144,-5.881754,-5.015703,-3.339757,0.607160,-3.009018,-8.287270,7.645376,-4.773059,7.782564,2.145715,-7.528768,8.522951,-9.718330,-8.813282,1.433755,9.630175,3.138383,-1.162231,-6.272839,-1.814756,6.282566,1.718653,6.664153,-0.026235,-9.059995,3.012813,6.491310,5.236175,-5.725370,5.736434,6.784911,4.590896,-5.035642,-6.009650,6.049699,-7.336096,7.381673,4.303832,8.468466,4.114669,0.767662,6.812431,-0.671606,-2.259414,-8.142311,-9.867356,-6.032064,5.401243,-8.516062,5.712573,-1.886406,-5.591917,3.862349,-5.565573,7.726981,3.149396,-1.237048,0.904541,9.935000,5.822268,8.106516,5.577249,5.363266,9.466373,-8.409380,3.891291,-9.367259,3.500078,9.049458,-6.429316,6.879203,1.840854,-9.991494,-8.618272,5.529545,-8.494406,-6.652916,-1.530082,-7.151880,0.472573,5.114039,5.490233,-2.207025,9.125109,-3.513419,-6.481898,2.540660,-3.860393,-9.943511,1.051652,-0.117291,5.486615,4.490664,8.474721,7.580731,1.757702,3.033291,-3.479662,9.010164,-8.412488,0.395439,1.828483,-2.486117,9.852249,5.047430,-7.422699,-6.323635,-7.487057,-7.361612,6.553051,-9.549424,-8.026061,2.005772,4.682797,-4.338606,-7.467092,-7.678127,3.731741,7.120451,5.481934,4.035106,3.848362,9.612510,-4.274355,2.429193,8.302521,-8.929224,8.594549,-3.261445,-5.217266,-9.244846,7.495179,-5.015841,-0.868820,4.218501,-6.074003,7.588879,-1.020132,8.193396,-7.812183,-0.516630,-2.065057,1.572727,-1.481674,-2.245561,0.989443,5.471838,0.051298,1.673196,-4.072863,-8.401414,9.997308,-9.327500,-9.270882,-3.126128,-4.222423,5.138852,5.856288,-4.864876,-0.304145,-3.003593,-0.985029,-5.101588,-1.821888,2.840026,-7.501685,2.833756,2.920611,1.353191,-7.595844,0.853478,-4.017648,7.464452,0.646895,8.037870,9.944669,7.226894,-1.954826,7.602689,3.364232,0.462221,-2.339742,-3.471684,-1.242908,-5.722134,9.832209,4.047054,-5.472352,-5.074925,-7.875183,9.519957,2.756590,1.867673,5.298820,-7.623730,1.686779,-2.569790,1.050358,-4.287494,2.077559,-2.962607,-5.500661,-9.128399,-3.634143,-6.790949,0.880850,-9.267242,4.119215,-4.344639,2.006433,8.164513,-4.462675,-5.765073,-2.213753,1.375043,4.155807,1.285240,2.836209,-7.952742,-2.124209,-6.553823,5.523822,-0.237080,6.561236,4.786307,-0.511216,5.560699,-6.204130,-4.928465,-3.319911,-5.409947,4.896677,7.882749,-7.036711,-3.505309,3.394529,-3.680224,-3.608067,0.767181,1.550740,-1.479635,8.015660,-0.532032,1.651408,7.749185,-0.456599,-7.387854,2.835685,-7.249203,1.373292,-2.988199,4.754831,3.072880], dtype = "float64")#candidate|7920|(1001,)|const|float64
call_7918 = relay.TupleGetItem(func_6124_call(relay.reshape(var_7919.astype('float64'), [13, 14, 3]), relay.reshape(const_7920.astype('float64'), [1001,]), ), 0)
call_7921 = relay.TupleGetItem(func_6127_call(relay.reshape(var_7919.astype('float64'), [13, 14, 3]), relay.reshape(const_7920.astype('float64'), [1001,]), ), 0)
func_7784_call = mod.get_global_var('func_7784')
func_7786_call = mutated_mod.get_global_var('func_7786')
call_7938 = func_7784_call()
call_7939 = func_7784_call()
func_6002_call = mod.get_global_var('func_6002')
func_6005_call = mutated_mod.get_global_var('func_6005')
call_7942 = relay.TupleGetItem(func_6002_call(relay.reshape(call_7914.astype('float64'), [15, 8, 11])), 2)
call_7943 = relay.TupleGetItem(func_6005_call(relay.reshape(call_7914.astype('float64'), [15, 8, 11])), 2)
bop_7950 = relay.multiply(var_7919.astype('int32'), relay.reshape(call_7918.astype('int32'), relay.shape_of(var_7919))) # shape=(546,)
bop_7953 = relay.multiply(var_7919.astype('int32'), relay.reshape(call_7921.astype('int32'), relay.shape_of(var_7919))) # shape=(546,)
output = relay.Tuple([call_7914,const_7920,call_7938,call_7942,bop_7950,])
output2 = relay.Tuple([call_7915,const_7920,call_7939,call_7943,bop_7953,])
func_7964 = relay.Function([var_7919,], output)
mod['func_7964'] = func_7964
mod = relay.transform.InferType()(mod)
mutated_mod['func_7964'] = func_7964
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7965 = relay.var("var_7965", dtype = "float64", shape = (546,))#candidate|7965|(546,)|var|float64
func_7964_call = mutated_mod.get_global_var('func_7964')
call_7966 = func_7964_call(var_7965)
output = call_7966
func_7967 = relay.Function([var_7965], output)
mutated_mod['func_7967'] = func_7967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6672_call = mod.get_global_var('func_6672')
func_6673_call = mutated_mod.get_global_var('func_6673')
call_7998 = func_6672_call()
call_7999 = func_6672_call()
output = call_7998
output2 = call_7999
func_8021 = relay.Function([], output)
mod['func_8021'] = func_8021
mod = relay.transform.InferType()(mod)
mutated_mod['func_8021'] = func_8021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8021_call = mutated_mod.get_global_var('func_8021')
call_8022 = func_8021_call()
output = call_8022
func_8023 = relay.Function([], output)
mutated_mod['func_8023'] = func_8023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6798_call = mod.get_global_var('func_6798')
func_6800_call = mutated_mod.get_global_var('func_6800')
call_8099 = relay.TupleGetItem(func_6798_call(), 0)
call_8100 = relay.TupleGetItem(func_6800_call(), 0)
func_601_call = mod.get_global_var('func_601')
func_605_call = mutated_mod.get_global_var('func_605')
const_8107 = relay.const([[-1,-4,-2,5,-4,9],[1,10,-6,4,-7,-7],[-6,-6,2,-8,8,1],[-6,-4,-9,4,10,4],[5,5,1,-5,-7,-6],[10,-2,-5,8,3,-4],[5,-10,1,3,6,-10],[-10,-3,-5,-5,-2,3],[2,-9,-3,5,10,-5],[3,-7,-5,-3,-1,1],[-5,10,5,-5,7,2],[-6,2,-2,6,-6,-4],[1,6,-6,-9,7,-8],[-7,9,-6,5,-8,5],[5,-7,6,10,1,-1],[-6,7,2,-6,-8,-4],[-8,4,6,-5,-3,-2],[4,-6,1,-1,10,10],[3,2,5,-6,6,8],[-1,5,-7,-3,-8,-7],[8,5,8,-3,-3,2],[2,-10,8,-2,-1,3],[1,-1,4,-9,-8,2],[10,-6,-10,-1,-8,1]], dtype = "int32")#candidate|8107|(24, 6)|const|int32
const_8108 = relay.const([[-1,9,2,-1,-8,10,9,3,4,-8,10,10,5,3,1,7,8,4,-9,10,-5,9,6,-7,3,9,-3,5,-2,2,-6,7,-7,3,6,-5,-6,7,10,4,-9,-5,3,2,8,1,5,9,-9,-1,-8,9,3,-7,8,-6,-4,9,1,-3,9,5,1,9,-8,6,7,9,-1,-4,-8,6,-1,1,10,1,7,-5,-1,8,-3,3,-2,-9,-1,-2,3,-2,2,-8,-7,-2,-6,3,-9,5,7,-1,2,-2,5,3,9,-4,-9,3,-3,10,-2,-7,2,-3,1,8,6,-6,3,8,-5,2,7,1,2,9,2,7,7,-5,-5,-2,4,-9,9,8,2,-9,-7,8,10,7,3,-8,-3,-9,-7,-9,-10,7,-8,5,-4,8,5,-5,3,-8,6,-7,8,-7,-8,7,7,-9,-8,-6,9,8,-9,-10,4,7,4,7,1,-9,4,-10,10,7,-6,-2,6,10,2,-6,-9,-4,-8,-7,7,-9,-3,-2,-10,3,-2,10,5,-5,-1,-1,5,-3,6,-3,5,-6,5,-3,8,9,-1,10,-1,2,8,-2,1,-8,-5,-2,7,1,5,-4,-2,-3,-6,-2,9,-10,-9,2,8,-9,-2,-5,10,-10,-4,7,1,-10,6,3,7,-2,6,8,-3,8,9,-6,-1,-3,-3,10,4,-1,3,-6,9,-9,-4,-10,-6,-2,-2,-4,-7,8,1,5,10,-8,4,-5,3,-8,1,-4,6,1,-6,-9,-4,-4],[4,2,9,-7,3,-6,6,-3,-3,1,5,-5,7,-8,2,-5,3,-2,-7,-5,-3,-9,6,3,1,9,7,10,2,6,10,-2,-1,7,-3,8,-5,2,-9,3,2,5,-5,-3,3,-1,-1,9,-7,-9,3,6,-4,-1,7,2,-3,-7,4,-5,9,3,1,3,-10,-8,-10,1,7,9,-4,-3,10,5,-10,-4,-10,-1,10,-9,-6,1,5,2,-4,6,-3,-4,7,-8,4,9,10,-3,6,9,10,10,4,5,-2,-5,-10,-8,10,7,2,8,-6,2,-2,3,-5,-7,-4,6,-5,-1,-1,3,8,7,-6,2,5,-3,7,1,9,-10,4,9,8,-6,10,4,9,-10,6,6,-7,10,-5,5,-3,-4,-10,6,-4,1,-2,-4,6,-4,5,6,9,4,-9,5,-4,6,-4,6,-5,-4,3,7,-9,4,3,5,-3,5,10,3,2,1,-4,-6,5,-7,7,8,9,1,9,5,7,-6,-3,-4,-10,3,-4,-2,-8,-7,-5,2,-6,-7,8,-9,-3,5,-5,8,-4,9,9,-6,2,-3,-8,-10,-7,9,8,-4,4,6,-6,7,7,-7,9,5,-7,-10,-5,-7,-9,10,6,-10,-3,2,-1,1,-6,6,2,-9,-2,-3,-1,-9,-7,-10,3,5,-6,-7,-7,7,-9,-1,4,1,10,3,4,-2,1,6,-9,1,-6,-2,-9,8,-2,10,-10,-4,-4,-4,8,-1,-7,6,6,3,8,-6,-6,6],[5,4,6,6,4,10,5,3,-8,7,-6,9,6,10,2,-10,1,-2,3,-1,-7,10,-4,-3,-2,8,3,-4,5,-10,10,-1,5,2,-1,-4,-5,2,7,-4,10,-7,-1,9,-4,10,1,9,-7,2,5,8,-10,9,-10,6,-7,10,-5,2,1,5,7,6,4,-4,7,9,6,5,-1,3,-6,-5,-5,-10,1,6,9,2,3,-2,-9,8,-9,1,-7,-9,9,-4,1,1,-9,-1,-3,2,10,8,5,7,2,7,2,10,9,8,-8,-5,-9,5,-9,10,1,1,6,1,3,7,5,9,-3,-6,-7,10,-7,-10,4,-6,-9,-2,-4,-5,2,-2,-3,-10,7,9,-7,2,6,10,1,6,2,7,10,3,-7,-8,6,-5,4,-9,-5,-6,-2,-2,4,-4,-3,-2,-4,6,10,10,-9,-10,-10,-7,7,-7,-2,3,4,-2,-10,-1,-1,-6,8,6,-4,4,3,-1,5,-3,-9,-2,-4,2,-1,8,10,3,-1,-7,5,-1,3,3,1,6,10,3,-6,-8,7,-9,10,-5,10,6,-5,6,-8,-7,-4,-9,5,-8,6,-8,-2,10,-8,10,6,5,-4,1,-9,3,3,8,5,-9,-4,5,-3,-5,-9,8,3,-9,4,9,10,9,-5,1,4,2,-6,-1,2,-1,1,8,-5,-10,-9,-4,-2,-2,9,4,5,9,-5,-4,8,-9,5,4,-6,-8,-5,8,7,-2,-5,-10,-6,-6,1,7],[-3,10,-4,7,1,9,-10,-3,6,3,-6,4,4,-3,7,-6,-6,8,1,10,-3,-9,-3,-9,-2,10,7,-1,1,-8,4,9,-10,-10,4,-4,8,-9,-8,1,3,7,5,-3,-2,5,6,-7,-2,-7,6,3,-7,-6,1,2,-9,3,8,10,-8,-7,-2,-1,1,1,1,1,6,-10,5,8,2,-7,1,2,4,-4,-6,-1,2,6,7,1,7,8,-5,5,10,-10,9,10,3,-10,-8,-8,4,-4,-3,4,-6,1,9,-9,-8,-1,2,2,7,4,4,4,6,-9,-2,-9,5,10,-6,4,9,-4,-1,6,-8,-1,-2,10,-4,-7,2,-5,-5,-1,-5,6,-2,-6,-7,-1,1,-7,1,-1,8,3,3,9,4,-9,-8,-4,-5,5,1,7,8,-6,-5,5,-4,-5,8,-5,7,3,10,8,-8,-9,9,-4,2,-7,9,-10,10,-2,-3,-1,2,8,1,-9,-8,-1,-6,3,5,5,-2,6,4,2,-6,10,7,2,-1,-1,1,6,-7,7,1,-5,-9,-6,-1,-2,1,5,-7,10,-9,-9,-2,-8,-3,10,-9,8,-8,-2,-3,5,6,6,8,3,8,10,6,1,-4,-5,8,2,-6,-4,-1,-6,3,-2,9,-10,7,7,9,5,8,6,-3,-1,-3,9,8,-10,-7,-3,10,-3,5,-2,-7,10,9,1,-6,-1,9,-4,-5,-7,-9,-1,6,-5,4,-7,-6,-6,5,-7,2,-10,9,-6],[-8,-1,5,-5,-3,-4,-10,10,10,-3,5,-5,-9,6,9,-6,-8,6,-6,4,1,-8,3,-7,4,-9,9,6,1,7,7,-8,10,-6,-5,8,2,-7,4,7,3,6,2,-1,5,4,1,5,-6,-8,5,8,-1,-10,8,-4,-5,-2,-4,9,-1,3,5,-5,-1,3,-10,3,4,8,-5,3,-5,-7,8,-10,1,2,1,8,-4,-10,-9,-6,8,-7,6,-3,4,10,9,2,-3,-7,-4,6,5,-2,9,-7,4,10,-3,1,-4,-9,2,3,6,10,5,9,2,-4,1,-7,-7,-5,1,-10,-8,8,-2,7,-2,-1,-5,-9,-4,-7,4,10,-3,4,10,1,-6,-1,-1,-8,7,10,-10,8,-1,8,1,9,-2,9,10,3,-8,-4,-3,2,2,10,2,-7,-5,8,-5,-1,3,-1,2,9,-8,-1,-7,-9,-4,2,-6,-8,-6,-6,-7,-9,9,-3,6,4,-7,3,5,-3,-2,6,-6,9,-3,4,-4,-10,5,-7,-7,6,-4,-10,-2,10,9,-2,-10,-8,7,-3,-7,5,6,4,1,-9,-9,-3,-3,-5,-1,-7,7,6,-7,5,3,5,-2,-5,1,7,5,2,-7,10,3,8,1,4,-4,2,-8,7,8,-2,-7,10,1,10,9,5,-7,2,9,-6,4,8,-4,4,8,2,5,7,-6,-5,9,6,4,-2,1,-4,5,-9,-1,-3,-8,-4,1,-10,-10,-1,-6,-5,-3,1,-6,-3],[1,1,4,8,-3,7,-4,10,-4,5,5,8,8,4,-6,-6,-8,6,-3,5,9,-9,-9,-8,-7,2,-2,10,10,3,-10,3,-8,-1,5,8,-10,-6,-5,1,-5,5,-3,-7,-10,7,1,-9,8,1,-6,9,5,4,-10,-1,-9,-4,1,3,4,-1,-1,4,-10,5,4,-1,-9,-9,1,-6,6,3,1,-1,10,-10,4,-2,-8,2,1,1,10,1,-9,4,-8,5,4,4,9,7,-9,10,6,-9,5,8,-7,-7,-7,2,-9,-5,-4,-9,5,10,2,1,-2,-4,-10,4,-3,-4,3,6,-6,5,9,6,-9,-6,-6,9,-7,7,-9,-5,-2,-3,-6,5,9,3,-5,2,5,4,-6,9,10,-9,7,-9,4,3,2,-3,1,1,-4,9,2,1,8,1,8,-5,5,-5,8,8,-10,-3,8,-7,8,2,-9,9,-2,3,2,6,-4,8,-1,-3,9,1,3,-10,4,-2,4,10,4,6,3,-7,3,10,2,-6,-3,-8,7,-7,9,-5,5,-1,-9,6,10,-9,-9,-8,4,1,3,2,-9,-10,-2,-3,10,-5,2,-1,7,5,10,-6,-7,2,8,9,-4,-6,-4,1,-5,-3,2,-7,-7,-6,6,-3,-10,-5,8,-8,5,-9,4,-2,-8,4,-10,-10,5,-6,-9,8,-2,10,6,-2,-1,-9,3,-4,8,-3,-10,7,-9,8,10,7,-8,-1,2,-5,-6,-8,8,10,-9,-6,5,6],[-6,4,-10,-9,-8,5,6,5,-8,1,-4,-4,5,3,3,6,4,7,-10,6,-7,-10,-3,-6,-9,-5,-9,7,8,4,1,-3,9,-1,-6,-9,-8,-7,5,9,4,8,-4,-7,-6,6,-2,-2,-10,-4,-2,9,-3,10,-4,3,-7,-1,-7,-5,-1,2,-3,8,9,-10,-4,-10,7,-6,-1,9,1,8,10,5,-8,9,-1,-3,-9,-1,3,-4,3,3,9,1,4,2,-5,-7,1,-2,-5,5,9,-10,7,-3,2,-4,10,4,5,9,-2,2,-6,-8,-3,-4,-8,5,8,6,7,-2,-7,2,2,-3,10,8,2,-7,-8,7,7,1,-1,-5,1,5,4,10,-9,-2,10,6,-7,-7,6,-3,6,-8,3,7,-1,-1,-10,-2,-6,9,-8,8,-8,2,-8,6,-9,3,6,-5,2,1,-7,-10,-1,8,4,7,-10,-5,-6,-4,-3,-8,-9,-5,8,-3,-3,7,2,5,1,7,1,-2,10,3,-3,4,3,-4,-7,8,-10,6,-2,9,3,7,-7,-2,-2,-2,-5,8,-8,-8,9,-7,-1,-2,-5,8,-8,-3,-1,4,9,2,-6,1,3,1,5,3,-2,-1,-10,9,4,-5,-9,10,-8,-2,-3,8,-4,1,6,7,1,-7,9,-8,-7,7,3,4,10,-6,10,-2,-1,-6,-7,7,3,8,1,4,-1,4,8,5,-5,-2,5,1,-7,4,-2,-1,-6,-8,8,-5,-2,-5,6,-8,-3,7],[-4,-5,-7,-4,-2,7,-5,5,6,-2,-8,9,-7,4,-9,7,1,-6,-2,9,-7,-2,-1,6,8,8,-7,1,-7,-3,7,-10,3,-7,6,9,-2,6,1,-3,-3,6,-1,3,3,4,9,8,-2,7,3,-3,-8,-10,-2,9,-5,5,-1,6,6,1,8,5,6,-9,-9,-2,1,7,7,1,10,-10,4,-4,7,-4,-7,-6,3,10,8,-1,5,4,-4,4,1,-5,-1,5,-4,-5,-10,-4,6,6,-5,5,-7,-2,6,-6,-1,3,-10,9,9,-7,-5,-1,4,-3,6,-10,8,3,7,10,10,7,-2,-6,-10,-10,-3,-6,-8,-5,-8,7,-7,8,8,2,-3,-8,7,8,8,-4,8,-9,8,3,8,-10,8,1,-7,-6,1,-7,-9,-8,2,-9,10,9,1,-4,1,8,-3,7,-1,2,8,-2,4,-5,2,7,1,1,-7,5,-8,-9,-1,1,-1,3,10,-6,5,-1,7,-10,5,4,-4,-1,-1,3,9,3,-7,-7,4,-3,7,6,3,2,-5,1,-5,-4,-5,10,3,1,-2,8,4,-4,9,-4,-6,-2,5,4,6,-10,-7,4,-8,9,-7,-5,-10,1,1,-2,6,-1,7,-2,-3,5,-5,-9,8,-2,-7,-6,-7,6,4,6,4,-2,-5,6,-9,10,-2,6,7,4,4,-10,-7,-1,-6,3,-6,-1,-1,1,-7,-3,-9,8,-6,9,2,-1,10,10,-10,-8,-9,-9,5,2]], dtype = "int32")#candidate|8108|(8, 288)|const|int32
call_8106 = relay.TupleGetItem(func_601_call(relay.reshape(const_8107.astype('int32'), [16, 1, 9]), relay.reshape(const_8108.astype('int32'), [16, 16, 9]), ), 2)
call_8109 = relay.TupleGetItem(func_605_call(relay.reshape(const_8107.astype('int32'), [16, 1, 9]), relay.reshape(const_8108.astype('int32'), [16, 16, 9]), ), 2)
func_6853_call = mod.get_global_var('func_6853')
func_6856_call = mutated_mod.get_global_var('func_6856')
var_8136 = relay.var("var_8136", dtype = "float32", shape = (70,))#candidate|8136|(70,)|var|float32
call_8135 = relay.TupleGetItem(func_6853_call(relay.reshape(call_8099.astype('uint32'), [15, 8, 11]), relay.reshape(var_8136.astype('float32'), [70,]), ), 3)
call_8137 = relay.TupleGetItem(func_6856_call(relay.reshape(call_8099.astype('uint32'), [15, 8, 11]), relay.reshape(var_8136.astype('float32'), [70,]), ), 3)
uop_8144 = relay.cosh(const_8107.astype('float64')) # shape=(24, 6)
uop_8159 = relay.atan(uop_8144.astype('float64')) # shape=(24, 6)
uop_8175 = relay.sigmoid(uop_8144.astype('float32')) # shape=(24, 6)
uop_8177 = relay.cos(uop_8159.astype('float32')) # shape=(24, 6)
bop_8186 = relay.logical_and(uop_8177.astype('bool'), relay.reshape(const_8107.astype('bool'), relay.shape_of(uop_8177))) # shape=(24, 6)
output = relay.Tuple([call_8099,call_8106,const_8108,call_8135,var_8136,uop_8175,bop_8186,])
output2 = relay.Tuple([call_8100,call_8109,const_8108,call_8137,var_8136,uop_8175,bop_8186,])
func_8190 = relay.Function([var_8136,], output)
mod['func_8190'] = func_8190
mod = relay.transform.InferType()(mod)
mutated_mod['func_8190'] = func_8190
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8191 = relay.var("var_8191", dtype = "float32", shape = (70,))#candidate|8191|(70,)|var|float32
func_8190_call = mutated_mod.get_global_var('func_8190')
call_8192 = func_8190_call(var_8191)
output = call_8192
func_8193 = relay.Function([var_8191], output)
mutated_mod['func_8193'] = func_8193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6912_call = mod.get_global_var('func_6912')
func_6913_call = mutated_mod.get_global_var('func_6913')
call_8261 = relay.TupleGetItem(func_6912_call(), 0)
call_8262 = relay.TupleGetItem(func_6913_call(), 0)
func_3821_call = mod.get_global_var('func_3821')
func_3823_call = mutated_mod.get_global_var('func_3823')
var_8274 = relay.var("var_8274", dtype = "float32", shape = (360,))#candidate|8274|(360,)|var|float32
call_8273 = relay.TupleGetItem(func_3821_call(relay.reshape(var_8274.astype('float32'), [10, 12, 3])), 0)
call_8275 = relay.TupleGetItem(func_3823_call(relay.reshape(var_8274.astype('float32'), [10, 12, 3])), 0)
func_8021_call = mod.get_global_var('func_8021')
func_8023_call = mutated_mod.get_global_var('func_8023')
call_8295 = func_8021_call()
call_8296 = func_8021_call()
func_6853_call = mod.get_global_var('func_6853')
func_6856_call = mutated_mod.get_global_var('func_6856')
var_8306 = relay.var("var_8306", dtype = "float32", shape = (7, 10))#candidate|8306|(7, 10)|var|float32
call_8305 = relay.TupleGetItem(func_6853_call(relay.reshape(call_8261.astype('uint32'), [15, 8, 11]), relay.reshape(var_8306.astype('float32'), [70,]), ), 0)
call_8307 = relay.TupleGetItem(func_6856_call(relay.reshape(call_8261.astype('uint32'), [15, 8, 11]), relay.reshape(var_8306.astype('float32'), [70,]), ), 0)
func_7784_call = mod.get_global_var('func_7784')
func_7786_call = mutated_mod.get_global_var('func_7786')
call_8327 = func_7784_call()
call_8328 = func_7784_call()
func_4652_call = mod.get_global_var('func_4652')
func_4654_call = mutated_mod.get_global_var('func_4654')
var_8331 = relay.var("var_8331", dtype = "float64", shape = (1, 56))#candidate|8331|(1, 56)|var|float64
call_8330 = func_4652_call(relay.reshape(var_8331.astype('float64'), [2, 4, 7]))
call_8332 = func_4652_call(relay.reshape(var_8331.astype('float64'), [2, 4, 7]))
var_8335 = relay.var("var_8335", dtype = "float64", shape = (11, 56))#candidate|8335|(11, 56)|var|float64
bop_8336 = relay.add(var_8331.astype('uint64'), var_8335.astype('uint64')) # shape=(11, 56)
func_6889_call = mod.get_global_var('func_6889')
func_6890_call = mutated_mod.get_global_var('func_6890')
call_8367 = relay.TupleGetItem(func_6889_call(), 0)
call_8368 = relay.TupleGetItem(func_6890_call(), 0)
bop_8374 = relay.logical_and(call_8330.astype('bool'), relay.reshape(var_8331.astype('bool'), relay.shape_of(call_8330))) # shape=(2, 4, 7)
bop_8377 = relay.logical_and(call_8332.astype('bool'), relay.reshape(var_8331.astype('bool'), relay.shape_of(call_8332))) # shape=(2, 4, 7)
var_8379 = relay.var("var_8379", dtype = "float64", shape = (11, 56))#candidate|8379|(11, 56)|var|float64
bop_8380 = relay.left_shift(var_8331.astype('uint64'), var_8379.astype('uint64')) # shape=(11, 56)
func_6798_call = mod.get_global_var('func_6798')
func_6800_call = mutated_mod.get_global_var('func_6800')
call_8385 = relay.TupleGetItem(func_6798_call(), 0)
call_8386 = relay.TupleGetItem(func_6800_call(), 0)
uop_8392 = relay.asinh(bop_8380.astype('float32')) # shape=(11, 56)
func_2980_call = mod.get_global_var('func_2980')
func_2982_call = mutated_mod.get_global_var('func_2982')
var_8401 = relay.var("var_8401", dtype = "uint8", shape = (336, 1))#candidate|8401|(336, 1)|var|uint8
call_8400 = func_2980_call(relay.reshape(var_8401.astype('uint8'), [6, 4, 14]))
call_8402 = func_2980_call(relay.reshape(var_8401.astype('uint8'), [6, 4, 14]))
output = relay.Tuple([call_8261,call_8273,var_8274,call_8295,call_8305,var_8306,call_8327,bop_8336,call_8367,bop_8374,call_8385,uop_8392,call_8400,var_8401,])
output2 = relay.Tuple([call_8262,call_8275,var_8274,call_8296,call_8307,var_8306,call_8328,bop_8336,call_8368,bop_8377,call_8386,uop_8392,call_8402,var_8401,])
func_8413 = relay.Function([var_8274,var_8306,var_8331,var_8335,var_8379,var_8401,], output)
mod['func_8413'] = func_8413
mod = relay.transform.InferType()(mod)
mutated_mod['func_8413'] = func_8413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8413_call = mutated_mod.get_global_var('func_8413')
var_8415 = relay.var("var_8415", dtype = "float32", shape = (360,))#candidate|8415|(360,)|var|float32
var_8416 = relay.var("var_8416", dtype = "float32", shape = (7, 10))#candidate|8416|(7, 10)|var|float32
var_8417 = relay.var("var_8417", dtype = "float64", shape = (1, 56))#candidate|8417|(1, 56)|var|float64
var_8418 = relay.var("var_8418", dtype = "float64", shape = (11, 56))#candidate|8418|(11, 56)|var|float64
var_8419 = relay.var("var_8419", dtype = "float64", shape = (11, 56))#candidate|8419|(11, 56)|var|float64
var_8420 = relay.var("var_8420", dtype = "uint8", shape = (336, 1))#candidate|8420|(336, 1)|var|uint8
call_8414 = func_8413_call(var_8415,var_8416,var_8417,var_8418,var_8419,var_8420,)
output = call_8414
func_8421 = relay.Function([var_8415,var_8416,var_8417,var_8418,var_8419,var_8420,], output)
mutated_mod['func_8421'] = func_8421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8480 = relay.var("var_8480", dtype = "uint64", shape = (5, 11, 14))#candidate|8480|(5, 11, 14)|var|uint64
var_8481 = relay.var("var_8481", dtype = "uint64", shape = (5, 11, 14))#candidate|8481|(5, 11, 14)|var|uint64
bop_8482 = relay.equal(var_8480.astype('bool'), relay.reshape(var_8481.astype('bool'), relay.shape_of(var_8480))) # shape=(5, 11, 14)
output = bop_8482
output2 = bop_8482
func_8490 = relay.Function([var_8480,var_8481,], output)
mod['func_8490'] = func_8490
mod = relay.transform.InferType()(mod)
var_8491 = relay.var("var_8491", dtype = "uint64", shape = (5, 11, 14))#candidate|8491|(5, 11, 14)|var|uint64
var_8492 = relay.var("var_8492", dtype = "uint64", shape = (5, 11, 14))#candidate|8492|(5, 11, 14)|var|uint64
output = func_8490(var_8491,var_8492,)
func_8493 = relay.Function([var_8491,var_8492,], output)
mutated_mod['func_8493'] = func_8493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7326_call = mod.get_global_var('func_7326')
func_7328_call = mutated_mod.get_global_var('func_7328')
call_8574 = func_7326_call()
call_8575 = func_7326_call()
output = relay.Tuple([call_8574,])
output2 = relay.Tuple([call_8575,])
func_8576 = relay.Function([], output)
mod['func_8576'] = func_8576
mod = relay.transform.InferType()(mod)
output = func_8576()
func_8577 = relay.Function([], output)
mutated_mod['func_8577'] = func_8577
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8604 = relay.var("var_8604", dtype = "float32", shape = (3, 12, 9))#candidate|8604|(3, 12, 9)|var|float32
uop_8605 = relay.erf(var_8604.astype('float32')) # shape=(3, 12, 9)
func_2487_call = mod.get_global_var('func_2487')
func_2491_call = mutated_mod.get_global_var('func_2491')
var_8610 = relay.var("var_8610", dtype = "uint16", shape = (150,))#candidate|8610|(150,)|var|uint16
call_8609 = relay.TupleGetItem(func_2487_call(relay.reshape(var_8610.astype('uint16'), [5, 10, 3]), relay.reshape(var_8610.astype('uint16'), [5, 10, 3]), ), 0)
call_8611 = relay.TupleGetItem(func_2491_call(relay.reshape(var_8610.astype('uint16'), [5, 10, 3]), relay.reshape(var_8610.astype('uint16'), [5, 10, 3]), ), 0)
func_3728_call = mod.get_global_var('func_3728')
func_3730_call = mutated_mod.get_global_var('func_3730')
const_8613 = relay.const([4.184525,-5.126495,8.122710,5.802218,-9.949211,-5.867106,-1.732760,1.734830,9.309248,-5.989140,-2.497729,2.906323,-5.752318,3.533258,-5.283823,-3.398674,2.672945,-5.615875,8.949149,-6.964611,-4.112338,-9.712182,-3.323424,7.254240,4.975834,7.741967,5.840594,-2.448923,7.602867,-3.581375,-4.703744,-2.185516,9.129173,-2.533327,-2.499176,-1.290185,-4.377399,8.654850,-1.129663,-7.505484,7.259411,-6.449815,8.242713,-3.095872,-7.109962,-5.942514,1.111314,1.851950,-4.940920,-4.548532,-0.414412,5.744927,4.418532,0.406471,-6.984545,-5.887629,2.944918,-3.846173,7.191478,-8.766387,1.172637,8.977405,1.362909,-7.823132,-5.978174,-3.311426,2.776083,4.272253,9.500311,7.050485,8.891690,5.347840,-0.933627,3.822302,-6.590332,1.816325,-1.143888,0.417823,7.184293,0.174191,-4.616384,5.925304,-2.111359,-5.989281,1.391911,1.337476,3.373619,-5.810846,-4.074582,-8.479079,5.218631,5.997160,-2.938648,0.960594,-6.383590,9.639939,-3.305952,-9.744954,-3.030989,-6.203134,-7.428124,-8.994198,-7.423456,6.845651,-8.712856,-8.593323,-6.822368,1.720271,-2.775325,-6.714663,-4.802789,5.646919,-8.935758,9.902824,-1.462681,3.656998,3.312025,5.096719,-6.972137,-2.830104,-3.370707,-8.145298,-9.312719,1.857800,-5.126047,4.683533,2.776173,7.634326,1.179194,-3.610935,1.084488,-9.589732,2.759476,-7.537576,7.382023,-5.358611,9.545860,-2.299720,5.166588,-4.957246,7.579751,-8.835813,-8.851172,7.463697,-5.969439,-2.764041,3.682624,-5.985981,-0.365556,-3.919460,8.878482,3.272696,9.777212,8.433206,8.880007,-4.786692,5.460446,9.245249,-8.393183,5.845947,0.632094,-4.683260,4.260177,7.941970,-1.568503,1.784542,3.777324,-5.271694,-0.165545,2.920633,-0.920524,-9.941453,-6.374237,4.535743,-4.429748,9.894964,-5.078422,-9.532660,-8.325130,4.232626,5.710331,-6.532906,9.341449,0.037474,-6.932614,7.427408,-3.226785,6.389792,-9.890659,-8.038965,5.456792,-2.479477], dtype = "float32")#candidate|8613|(192,)|const|float32
call_8612 = relay.TupleGetItem(func_3728_call(relay.reshape(const_8613.astype('float32'), [16, 3, 4])), 0)
call_8614 = relay.TupleGetItem(func_3730_call(relay.reshape(const_8613.astype('float32'), [16, 3, 4])), 0)
bop_8621 = relay.maximum(call_8612.astype('float32'), relay.reshape(const_8613.astype('float32'), relay.shape_of(call_8612))) # shape=(16, 3, 4)
bop_8624 = relay.maximum(call_8614.astype('float32'), relay.reshape(const_8613.astype('float32'), relay.shape_of(call_8614))) # shape=(16, 3, 4)
var_8631 = relay.var("var_8631", dtype = "float32", shape = (3, 12, 9))#candidate|8631|(3, 12, 9)|var|float32
bop_8632 = relay.less(uop_8605.astype('bool'), relay.reshape(var_8631.astype('bool'), relay.shape_of(uop_8605))) # shape=(3, 12, 9)
output = relay.Tuple([call_8609,var_8610,bop_8621,bop_8632,])
output2 = relay.Tuple([call_8611,var_8610,bop_8624,bop_8632,])
func_8641 = relay.Function([var_8604,var_8610,var_8631,], output)
mod['func_8641'] = func_8641
mod = relay.transform.InferType()(mod)
var_8642 = relay.var("var_8642", dtype = "float32", shape = (3, 12, 9))#candidate|8642|(3, 12, 9)|var|float32
var_8643 = relay.var("var_8643", dtype = "uint16", shape = (150,))#candidate|8643|(150,)|var|uint16
var_8644 = relay.var("var_8644", dtype = "float32", shape = (3, 12, 9))#candidate|8644|(3, 12, 9)|var|float32
output = func_8641(var_8642,var_8643,var_8644,)
func_8645 = relay.Function([var_8642,var_8643,var_8644,], output)
mutated_mod['func_8645'] = func_8645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7247_call = mod.get_global_var('func_7247')
func_7248_call = mutated_mod.get_global_var('func_7248')
call_8659 = relay.TupleGetItem(func_7247_call(), 3)
call_8660 = relay.TupleGetItem(func_7248_call(), 3)
output = call_8659
output2 = call_8660
func_8676 = relay.Function([], output)
mod['func_8676'] = func_8676
mod = relay.transform.InferType()(mod)
mutated_mod['func_8676'] = func_8676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8676_call = mutated_mod.get_global_var('func_8676')
call_8677 = func_8676_call()
output = call_8677
func_8678 = relay.Function([], output)
mutated_mod['func_8678'] = func_8678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mod.get_global_var('func_5925')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_8691 = func_5925_call()
call_8692 = func_5925_call()
output = relay.Tuple([call_8691,])
output2 = relay.Tuple([call_8692,])
func_8695 = relay.Function([], output)
mod['func_8695'] = func_8695
mod = relay.transform.InferType()(mod)
mutated_mod['func_8695'] = func_8695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8695_call = mutated_mod.get_global_var('func_8695')
call_8696 = func_8695_call()
output = call_8696
func_8697 = relay.Function([], output)
mutated_mod['func_8697'] = func_8697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6912_call = mod.get_global_var('func_6912')
func_6913_call = mutated_mod.get_global_var('func_6913')
call_8742 = relay.TupleGetItem(func_6912_call(), 0)
call_8743 = relay.TupleGetItem(func_6913_call(), 0)
output = call_8742
output2 = call_8743
func_8750 = relay.Function([], output)
mod['func_8750'] = func_8750
mod = relay.transform.InferType()(mod)
mutated_mod['func_8750'] = func_8750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8750_call = mutated_mod.get_global_var('func_8750')
call_8751 = func_8750_call()
output = call_8751
func_8752 = relay.Function([], output)
mutated_mod['func_8752'] = func_8752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7784_call = mod.get_global_var('func_7784')
func_7786_call = mutated_mod.get_global_var('func_7786')
call_8786 = func_7784_call()
call_8787 = func_7784_call()
uop_8788 = relay.tan(call_8786.astype('float32')) # shape=(7, 10, 3)
uop_8790 = relay.tan(call_8787.astype('float32')) # shape=(7, 10, 3)
output = relay.Tuple([uop_8788,])
output2 = relay.Tuple([uop_8790,])
func_8796 = relay.Function([], output)
mod['func_8796'] = func_8796
mod = relay.transform.InferType()(mod)
mutated_mod['func_8796'] = func_8796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8796_call = mutated_mod.get_global_var('func_8796')
call_8797 = func_8796_call()
output = call_8797
func_8798 = relay.Function([], output)
mutated_mod['func_8798'] = func_8798
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8818 = relay.var("var_8818", dtype = "float64", shape = (13, 6, 13))#candidate|8818|(13, 6, 13)|var|float64
uop_8819 = relay.asin(var_8818.astype('float64')) # shape=(13, 6, 13)
output = relay.Tuple([uop_8819,])
output2 = relay.Tuple([uop_8819,])
F = relay.Function([var_8818,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8818,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

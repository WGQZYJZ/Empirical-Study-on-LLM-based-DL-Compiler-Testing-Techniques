import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_500 = relay.var("var_500", dtype = "uint32", shape = ())#candidate|500|()|var|uint32
var_501 = relay.var("var_501", dtype = "uint32", shape = (1, 13, 10))#candidate|501|(1, 13, 10)|var|uint32
bop_502 = relay.greater_equal(var_500.astype('bool'), var_501.astype('bool')) # shape=(1, 13, 10)
output = relay.Tuple([bop_502,])
output2 = relay.Tuple([bop_502,])
func_520 = relay.Function([var_500,var_501,], output)
mod['func_520'] = func_520
mod = relay.transform.InferType()(mod)
mutated_mod['func_520'] = func_520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_520_call = mutated_mod.get_global_var('func_520')
var_522 = relay.var("var_522", dtype = "uint32", shape = ())#candidate|522|()|var|uint32
var_523 = relay.var("var_523", dtype = "uint32", shape = (1, 13, 10))#candidate|523|(1, 13, 10)|var|uint32
call_521 = func_520_call(var_522,var_523,)
output = call_521
func_524 = relay.Function([var_522,var_523,], output)
mutated_mod['func_524'] = func_524
mutated_mod = relay.transform.InferType()(mutated_mod)
var_538 = relay.var("var_538", dtype = "int32", shape = (8, 7, 2))#candidate|538|(8, 7, 2)|var|int32
var_539 = relay.var("var_539", dtype = "int32", shape = (8, 7, 2))#candidate|539|(8, 7, 2)|var|int32
bop_540 = relay.bitwise_xor(var_538.astype('int32'), relay.reshape(var_539.astype('int32'), relay.shape_of(var_538))) # shape=(8, 7, 2)
output = bop_540
output2 = bop_540
func_543 = relay.Function([var_538,var_539,], output)
mod['func_543'] = func_543
mod = relay.transform.InferType()(mod)
mutated_mod['func_543'] = func_543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_543_call = mutated_mod.get_global_var('func_543')
var_545 = relay.var("var_545", dtype = "int32", shape = (8, 7, 2))#candidate|545|(8, 7, 2)|var|int32
var_546 = relay.var("var_546", dtype = "int32", shape = (8, 7, 2))#candidate|546|(8, 7, 2)|var|int32
call_544 = func_543_call(var_545,var_546,)
output = call_544
func_547 = relay.Function([var_545,var_546,], output)
mutated_mod['func_547'] = func_547
mutated_mod = relay.transform.InferType()(mutated_mod)
const_625 = relay.const([[[-0.606030,-1.008943,-0.253034,8.693818,2.488154,-0.025622,-2.343112,-1.094859,8.851796,-0.299810,4.191221,3.947999],[8.886365,4.057012,9.554137,-3.620723,9.769098,-8.171676,-8.002354,-9.557556,9.286402,-0.238463,3.124520,8.443365],[-4.610252,-8.060685,-1.893353,8.561021,-3.669841,-2.045454,-5.688151,6.447413,1.246725,1.691000,6.619033,-5.192257],[2.997667,1.767731,9.808941,3.865043,-3.088623,3.843714,-4.790970,0.424780,6.000107,-3.806633,-1.400754,7.966432],[4.045506,5.632205,-1.056905,-8.588274,8.384648,-6.375157,-2.461673,-2.715119,1.525396,-1.626336,7.628852,-5.087117],[0.490368,-1.500004,-7.687102,3.944454,-2.179174,6.221437,-6.349768,-8.743743,7.797843,2.356926,8.126503,-2.585881],[8.389901,-0.446225,-9.111805,-0.059346,2.559359,-6.847996,-3.496239,1.010593,-5.708996,-0.926862,-3.784486,-9.971397]],[[3.195219,-1.753436,-2.422018,-9.117851,5.437015,-6.277743,5.989945,9.726715,3.236995,3.405698,3.356120,-3.931086],[5.436634,5.422988,-2.064591,4.711249,3.347915,-4.184049,-9.800721,1.690196,2.984087,-9.998249,-2.203171,7.648310],[2.248833,-9.336631,0.004516,-3.136142,8.206551,2.293720,-6.638470,1.907349,-9.525204,2.978794,-9.945405,-8.486790],[-6.083096,1.152341,-5.363745,-1.339078,5.571869,-0.566054,1.651028,0.850740,-0.445450,-2.359279,1.343511,-0.596972],[3.294982,-6.250705,7.192821,6.393925,1.512316,-6.589007,9.559162,8.403702,3.176350,-2.723262,0.044683,4.314554],[-4.382415,-9.072098,-8.964916,2.687215,-8.898738,0.885676,-3.086860,6.302800,7.859992,7.677887,-3.294502,5.384553],[-9.706777,-5.955981,0.566608,-9.245304,-4.647671,6.867233,2.052107,-0.948584,2.906022,2.553797,7.753219,6.765143]],[[8.394478,9.248807,-6.529433,6.523724,-4.494345,-0.356196,-8.135304,6.708853,8.764736,6.366526,7.063506,-4.493128],[5.517973,-8.483426,-8.987953,-7.931414,-8.557263,3.289518,-2.874107,-2.584860,-7.855491,3.659398,6.915429,6.888743],[3.446049,6.134411,0.361878,2.110782,-5.538083,0.044432,-9.063257,-1.666069,6.092657,6.365775,-1.533005,6.876339],[-1.749677,5.148545,2.045500,-8.308448,7.808453,-7.428941,5.217828,-2.416295,4.806616,-8.499175,6.209034,7.242216],[-7.833144,-5.305903,-3.837719,4.351644,-8.867790,-5.182607,-8.041181,1.343444,-3.344435,-2.174998,2.413551,7.762734],[-3.257860,-7.645195,-9.230776,-9.256993,-5.896863,-8.191282,-2.608098,5.414235,-9.324457,4.679926,-2.822785,2.615630],[-2.130159,-4.285844,-7.884172,-9.912511,5.189784,-4.014205,-2.519939,-1.550332,3.572436,7.207409,4.337944,6.893814]],[[-3.486845,-3.320630,4.895169,-6.081798,0.946515,0.741004,-9.455374,-1.096789,6.240218,-3.992252,2.371765,-4.473317],[0.374372,7.366169,7.663933,-0.889881,1.568490,-8.057538,-3.435457,-4.561178,-4.607788,9.835017,2.041889,-8.876984],[-3.416722,8.091150,-9.709809,5.297286,8.957854,-9.411715,0.216731,9.304170,2.274061,8.874998,-5.751732,0.493785],[0.986468,3.644512,-9.754080,9.017971,-3.062547,-6.411528,0.529972,-5.476381,-2.875604,3.875321,-1.720039,-8.952044],[-2.723171,7.535749,4.050150,7.068399,-6.619126,-1.415025,1.116815,5.313798,-9.143220,-5.173481,6.896600,-3.546111],[2.814961,0.667093,-6.389116,5.403789,2.333686,1.747175,4.239690,-4.552924,-2.029979,-1.432118,-5.992311,3.533916],[9.653024,-1.413611,1.409472,6.402754,-6.467786,-5.323444,-9.102361,-4.068013,-2.969910,9.470996,-4.623389,3.909843]],[[-1.195902,-6.266863,-6.835919,0.504633,9.630147,-8.154828,-6.372919,0.800577,2.748444,-7.423323,5.429823,1.408499],[-0.207873,2.499506,-5.180184,0.201824,-4.988124,-6.371054,-7.533865,8.732774,9.899237,-9.865721,4.991632,0.353271],[7.507837,-1.712387,-1.192313,-1.039104,-3.258138,0.566413,0.340586,8.966998,9.457793,-1.140183,5.282856,3.174115],[4.330750,7.829428,-8.487808,3.130878,-5.166728,-1.968590,-7.178543,0.184155,5.742619,4.317187,-0.352675,-0.245045],[-8.938632,5.314878,-0.394933,9.872265,-6.773652,-5.812992,5.076584,-1.335308,-0.158352,-6.321180,6.217745,4.252253],[-6.209616,7.668723,-2.363556,-8.561979,-0.323397,-5.120084,0.940729,7.295333,-4.196738,-1.959825,8.036373,8.774822],[7.093235,-2.739797,-1.162179,9.864787,1.313318,5.715782,0.464974,-5.366180,3.316822,-5.886696,-1.279541,-7.890149]],[[-2.486848,-0.543017,2.715396,0.653723,4.290674,8.652832,9.907896,5.785661,-8.099281,-9.365513,-1.637370,2.041154],[-8.379434,-7.108817,0.516717,0.734431,1.603867,-5.404237,-6.082370,-8.479191,0.166246,0.961087,-2.891111,8.335246],[1.726125,-8.431412,8.216820,3.050059,-2.689895,-1.780973,-8.167855,1.486212,-5.123174,-4.234814,8.378680,-4.764871],[-1.424488,0.104675,-8.267595,8.790724,8.248803,-0.012746,-0.273767,-0.301255,7.932497,-8.227688,-3.185511,-4.925525],[8.768410,1.215303,5.260760,-8.073275,7.767154,-9.089384,-9.288681,1.869049,-4.490089,-0.875824,6.461396,2.532103],[-4.132170,-8.920344,3.449702,4.486020,2.401447,1.773917,-2.056553,1.016553,4.832586,-4.044182,8.139159,7.670499],[3.478686,-1.511498,-3.874369,5.537022,-8.984076,-8.645528,-7.264136,-8.994467,-0.643348,-1.143167,3.608416,7.588435]],[[-1.875895,3.732721,2.569019,8.179260,-2.301611,-2.519198,0.611196,3.660141,7.236585,2.220772,7.046054,-1.990479],[5.254865,3.765436,-5.113727,9.019307,-5.392146,-2.001542,-0.201400,-1.847208,-5.219854,2.483056,-8.141162,4.629826],[-3.449123,-1.274155,-3.109378,-8.477464,3.510275,3.745366,-0.666675,-1.080091,7.567781,-5.081187,-4.027973,-8.380536],[2.200209,-8.258849,7.479138,-0.123407,-4.295932,2.127204,5.946520,-7.047678,2.091847,-5.437375,9.861451,-6.525871],[4.854389,-9.774533,3.817675,-7.823109,-9.622774,1.721207,-6.068443,-9.006625,-9.460732,-1.004586,0.783199,-0.311510],[-0.733888,-1.447786,-0.428293,-4.116634,1.007765,7.910186,8.353712,-2.412218,9.337975,8.088362,7.948204,-0.122923],[-3.741809,1.452910,-3.798024,-0.525651,-5.391536,-4.576925,-2.844660,-5.828814,1.380113,-6.427336,-9.035751,-4.244863]],[[-2.071928,5.795353,3.045423,2.236196,-4.178044,3.824610,8.038060,7.480398,-7.349360,-5.311682,-4.387337,6.143169],[-3.518142,2.561191,-1.535231,-7.689328,0.712153,-2.294201,-8.230004,-8.179653,-4.263834,3.191676,-2.423345,1.332590],[-7.345005,3.900905,-6.866675,-6.933004,-6.306765,4.387256,9.777409,-0.287937,-1.354311,-5.244699,-2.475389,1.062852],[-7.470248,-6.391359,-8.473951,-8.969124,1.332712,6.064060,-1.847240,3.779607,3.476729,0.388816,-0.989633,-6.627945],[-2.010265,4.284747,5.283993,8.611366,0.002671,-8.043241,6.668409,-2.355239,-1.366950,-7.148276,5.491061,-2.085967],[1.608842,-8.606567,2.868744,-8.616856,9.986878,-1.330025,-1.386211,-8.768636,-1.625621,4.177048,1.332487,-2.396230],[-3.571032,-0.717814,-0.007688,-4.265246,-4.419724,-3.316976,0.886559,0.026824,-1.173006,-6.825062,7.344872,3.508796]],[[0.400292,8.647673,-6.069064,9.433601,4.844048,9.925093,-2.489280,9.656526,-6.960902,-4.833531,-0.068752,-4.208874],[2.088845,6.147543,5.019949,-8.315022,-5.270883,-6.362386,-7.237740,8.622565,8.863777,7.403255,-2.198670,9.613142],[-4.365342,8.403846,6.098179,-3.881466,-3.754985,-2.932160,-3.768142,-4.290897,-1.080664,5.381214,-4.588865,-0.655055],[4.947599,9.157298,-9.276730,-0.233380,-9.419187,4.534664,7.789599,3.107731,-1.187843,-0.334408,-3.473637,0.272340],[7.147850,4.146407,3.935051,7.367935,-8.062329,-1.867799,9.114175,1.627450,-4.888363,-7.417002,-8.051346,4.595933],[0.341717,5.079658,5.576736,-1.652535,-1.249496,-1.467090,-8.433594,-9.828773,7.652794,2.095215,-9.400832,-0.816249],[-1.940315,-0.590306,-4.467100,3.983284,5.215604,-1.784170,7.147637,0.557154,-9.507469,7.866511,-4.389896,7.386976]],[[-0.564255,-0.305327,-1.982101,-5.844950,4.559830,0.308279,-0.595711,3.333435,-3.599872,-6.709574,3.697662,2.551759],[-2.745162,-5.599372,-5.904958,-7.099800,-8.653858,8.108122,5.449659,9.845522,2.885302,2.507522,4.652658,1.009651],[-0.054482,5.687801,-0.699021,1.827876,4.293549,5.485553,-7.145756,2.326769,-1.372946,5.588801,-2.242101,6.954238],[7.064532,6.080652,7.962407,-1.763401,0.527042,6.473203,-9.820645,-5.529265,-7.082033,-4.700325,0.032102,-9.453292],[-5.524461,5.044637,-9.048927,-3.278122,7.674809,0.900030,3.872924,-9.951355,7.933595,-9.939215,6.759674,-0.339820],[-9.079550,-8.513482,-5.133781,9.531886,-7.986103,3.950988,0.287992,-7.820512,7.216935,-9.785072,-4.996226,8.419069],[-7.946482,2.324972,-6.210512,-9.436232,-2.938692,-0.834114,7.857997,-4.087081,6.680566,-7.315118,1.098461,8.956923]]], dtype = "float32")#candidate|625|(10, 7, 12)|const|float32
var_626 = relay.var("var_626", dtype = "float32", shape = (10, 7, 12))#candidate|626|(10, 7, 12)|var|float32
bop_627 = relay.floor_divide(const_625.astype('float32'), relay.reshape(var_626.astype('float32'), relay.shape_of(const_625))) # shape=(10, 7, 12)
bop_631 = relay.divide(bop_627.astype('float32'), relay.reshape(var_626.astype('float32'), relay.shape_of(bop_627))) # shape=(10, 7, 12)
output = bop_631
output2 = bop_631
func_639 = relay.Function([var_626,], output)
mod['func_639'] = func_639
mod = relay.transform.InferType()(mod)
mutated_mod['func_639'] = func_639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_640 = relay.var("var_640", dtype = "float32", shape = (10, 7, 12))#candidate|640|(10, 7, 12)|var|float32
func_639_call = mutated_mod.get_global_var('func_639')
call_641 = func_639_call(var_640)
output = call_641
func_642 = relay.Function([var_640], output)
mutated_mod['func_642'] = func_642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1420 = relay.var("var_1420", dtype = "float64", shape = (16, 1, 5))#candidate|1420|(16, 1, 5)|var|float64
const_1421 = relay.const([[[-9.634999,2.407478,0.021264,-8.144365,2.410247],[-5.863398,-2.442851,-3.392714,1.877582,-1.484431],[-4.564753,-1.798120,-6.028178,-1.428240,-1.261080],[4.472715,7.654155,-1.331554,9.739994,7.239233],[1.728924,-8.665057,-7.809285,-6.982813,3.651570],[4.559618,-5.722620,-3.408066,7.519590,8.019886],[-0.839202,-0.935941,2.444057,-6.294103,-5.581766],[2.032393,-1.842805,0.523999,3.445735,-9.457352]],[[-4.691102,-8.492807,4.023176,1.149637,0.375653],[-1.654227,1.901111,-0.174507,8.301709,-3.032350],[-9.975643,-9.308990,0.738972,1.663257,5.541606],[-1.803881,-8.057378,-7.131152,8.619844,-8.682003],[-4.352835,-5.543140,6.367595,1.602291,1.157807],[-1.437268,3.783487,-0.718817,1.123081,3.151624],[5.568155,-3.653612,-3.699263,6.735997,0.173943],[9.058037,-3.357097,0.936970,-0.376097,5.207523]],[[-1.548670,8.465674,-4.743650,0.229075,0.667950],[-0.085653,-0.920351,-9.281885,7.785264,-4.595351],[0.458092,-6.003254,7.095431,-0.592385,-9.782536],[6.100657,4.963795,9.980484,3.389665,2.956336],[9.429176,3.082193,8.463316,9.808212,-3.151926],[7.271655,9.667970,8.155488,5.942774,-8.685434],[0.988986,3.804938,-7.858390,-4.387008,5.234987],[-7.231168,6.220696,-9.399105,-1.518297,3.340247]],[[4.570563,-0.789360,1.125382,3.087103,3.700155],[-7.491425,1.097166,-7.618211,-6.027904,8.190956],[-8.812400,8.719192,-2.526532,-8.207247,0.689736],[6.417694,-9.315632,7.960564,0.380064,1.829914],[-9.518162,-3.514582,0.309761,5.561075,6.330637],[2.824287,-8.025023,-3.329533,-1.997365,7.843455],[-0.111500,-7.964298,1.598765,-5.496480,-3.332795],[4.053455,-6.055436,-8.417388,-3.020345,1.643052]],[[5.816384,-8.231379,9.010661,-5.999339,6.996951],[7.262764,-3.501558,0.055230,3.216680,-4.009539],[2.668448,-6.243234,4.910509,6.528118,-1.817966],[-2.472559,2.681055,-6.443547,0.250223,-5.382673],[-9.890772,-8.439431,2.040307,-8.240659,-4.178328],[-7.534203,1.514241,3.855910,7.239425,-5.557927],[6.253984,6.257699,7.503668,-7.111441,-7.565985],[-9.889656,-6.593129,0.412136,-6.630700,7.288079]],[[8.442044,-1.366763,-7.292715,1.956973,-7.562108],[-2.799217,-2.616627,-0.337535,3.692307,-2.222162],[0.020065,-0.995519,-6.211446,7.512074,-6.920225],[4.173074,-4.532170,-0.738185,6.553277,-8.444892],[9.457102,5.284791,1.410737,-2.214135,-1.426478],[-5.236496,9.091426,-1.675238,1.387105,-8.513934],[-7.704858,5.002089,7.464332,8.511582,6.598408],[-9.977515,-0.685663,3.104582,9.309041,-7.890613]],[[-6.273273,6.404744,-4.919781,9.843926,3.059116],[6.855616,5.783727,-9.462792,-1.190995,5.814558],[9.540510,-6.389526,-3.345934,1.746194,4.904393],[9.793678,3.207126,7.502720,-5.439413,6.834808],[-5.796121,3.339706,0.041312,-7.248637,-1.697058],[7.787649,1.959926,0.623989,5.723373,5.436246],[0.515723,2.516605,5.346858,-9.483385,5.522372],[1.341357,-6.357246,-3.105094,-4.636510,8.803554]],[[-9.640572,8.512312,-0.068383,6.262722,9.997878],[1.811123,-8.338940,0.538087,0.566647,2.621806],[9.258567,1.034416,-3.387427,0.104676,-9.563427],[1.839244,-0.024378,4.608034,4.572627,-2.012333],[3.785823,7.680762,-5.391055,-4.740798,-1.694105],[1.268709,-8.624752,9.617328,-8.473080,-5.310136],[7.493583,8.511144,-5.655356,8.589718,-3.082539],[-0.847328,6.730321,5.239037,5.683649,7.631377]],[[2.655233,9.134428,2.474307,-0.685169,-0.752335],[9.837037,-5.223999,6.922393,8.164996,0.976312],[-0.503951,6.470885,3.830234,-2.148175,-5.973283],[4.310590,-0.276164,-5.799831,1.566289,1.834225],[0.290141,-6.998143,2.839067,-4.892369,-3.994465],[-6.663716,9.569598,-6.295852,-8.301087,9.925589],[-0.575043,3.633096,-6.771216,6.302435,-7.426392],[2.655619,8.767063,-0.855018,8.601798,4.898698]],[[-7.854780,-3.378564,0.249198,-6.685714,0.724424],[8.996455,-9.677406,-6.384723,-1.456430,5.500724],[-3.813329,-5.532290,-0.614045,0.007309,8.708424],[9.646962,-5.727900,2.102776,-5.647023,-6.662674],[-9.224211,4.873864,-8.898618,9.506419,5.612531],[9.820916,7.180242,8.969840,-6.085951,4.579264],[6.560846,5.520354,-5.642892,-9.449378,6.665956],[0.695725,-9.824317,-1.919342,-9.452634,2.606678]],[[-9.501353,-5.187667,-8.582732,9.537505,-7.844410],[-7.311679,7.089478,9.969548,-7.144965,-4.632639],[-6.343919,3.383615,1.832620,0.921854,5.186078],[7.561158,-9.240653,1.661218,-0.812432,4.208913],[4.304710,-4.720242,-9.564176,5.209678,1.183411],[-0.925087,6.494993,-9.457652,0.502451,-7.379855],[-4.821540,1.413359,0.416636,6.289621,0.857963],[-4.557092,-8.460476,-4.369759,4.662032,-8.751568]],[[4.181972,-0.501806,-1.297838,6.157743,5.016437],[8.084843,-2.074252,-5.230120,8.095706,4.327270],[-9.633588,-9.912924,-4.907306,4.411414,-6.474757],[4.834784,-0.834065,-1.616690,-7.764758,7.410896],[5.310616,-0.423236,3.006641,-9.327432,-0.470206],[8.310875,5.760758,-6.526762,-3.523060,1.900540],[9.349767,1.942206,7.042428,-0.798824,0.867173],[1.832073,-0.881110,-0.017925,-8.417263,8.610785]],[[-9.390866,4.992236,-9.343365,-1.609008,-3.132510],[8.979231,-9.063078,6.792372,-3.462770,2.093934],[6.409820,-8.819427,-0.315609,7.183091,4.438555],[-7.771640,-5.532389,-9.612697,7.766349,4.792410],[-8.550971,8.970108,6.948564,-0.327569,-8.872231],[-3.216294,-2.246260,-1.422542,2.862416,6.266516],[-5.623072,9.908183,-4.457864,5.472435,-5.781052],[3.395975,4.840725,8.179211,7.567704,-9.902445]],[[3.893572,-4.600326,2.612800,7.126545,-0.147048],[-6.318082,-8.918167,6.538963,1.520843,-7.958246],[-8.036443,-1.465829,-8.689214,-6.578890,-9.230570],[3.488357,6.925188,0.842893,-7.447978,-2.903414],[-8.829329,9.943259,-2.339648,6.832805,6.304674],[4.311099,5.541371,2.665766,7.041850,1.948752],[-2.400590,2.996213,-8.146724,5.299231,1.307339],[-0.257689,-4.013987,-0.624126,-9.159047,-6.286003]],[[7.008613,4.199113,1.806649,-5.443023,4.879088],[-4.434458,5.526146,4.906572,5.170704,-2.372334],[-3.906703,-3.379113,0.446802,0.422937,-3.075707],[5.503049,5.408989,-8.255137,-0.761344,7.517276],[-8.565142,6.912875,-2.147424,-0.392847,8.662771],[-7.935419,8.332012,-5.945088,-2.243670,-2.373288],[9.030719,-1.740326,3.055171,-4.859296,-3.913832],[9.907116,8.252328,-0.921568,8.619595,6.365675]],[[1.162650,7.160926,-6.071099,7.857025,1.109193],[5.914827,-1.193653,-7.401156,-2.722175,4.450253],[-6.640276,-7.515689,9.671360,2.493638,2.928913],[-7.530610,7.352746,1.859069,3.056607,-6.654275],[-1.979794,-1.046589,2.896326,-0.433928,2.000028],[-4.136124,-6.877644,5.057363,1.138178,5.426262],[-6.154744,-5.908806,3.021935,7.094989,-3.253813],[4.303848,-9.199532,7.155629,-7.987500,8.967935]]], dtype = "float64")#candidate|1421|(16, 8, 5)|const|float64
bop_1422 = relay.divide(var_1420.astype('float64'), const_1421.astype('float64')) # shape=(16, 8, 5)
output = relay.Tuple([bop_1422,])
output2 = relay.Tuple([bop_1422,])
func_1427 = relay.Function([var_1420,], output)
mod['func_1427'] = func_1427
mod = relay.transform.InferType()(mod)
var_1428 = relay.var("var_1428", dtype = "float64", shape = (16, 1, 5))#candidate|1428|(16, 1, 5)|var|float64
output = func_1427(var_1428)
func_1429 = relay.Function([var_1428], output)
mutated_mod['func_1429'] = func_1429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1454 = relay.var("var_1454", dtype = "float32", shape = (4, 8, 16))#candidate|1454|(4, 8, 16)|var|float32
uop_1455 = relay.acosh(var_1454.astype('float32')) # shape=(4, 8, 16)
func_1427_call = mod.get_global_var('func_1427')
func_1429_call = mutated_mod.get_global_var('func_1429')
var_1463 = relay.var("var_1463", dtype = "float64", shape = (80,))#candidate|1463|(80,)|var|float64
call_1462 = relay.TupleGetItem(func_1427_call(relay.reshape(var_1463.astype('float64'), [16, 1, 5])), 0)
call_1464 = relay.TupleGetItem(func_1429_call(relay.reshape(var_1463.astype('float64'), [16, 1, 5])), 0)
var_1471 = relay.var("var_1471", dtype = "float64", shape = (16, 8, 5))#candidate|1471|(16, 8, 5)|var|float64
bop_1472 = relay.less_equal(call_1462.astype('bool'), relay.reshape(var_1471.astype('bool'), relay.shape_of(call_1462))) # shape=(16, 8, 5)
bop_1475 = relay.less_equal(call_1464.astype('bool'), relay.reshape(var_1471.astype('bool'), relay.shape_of(call_1464))) # shape=(16, 8, 5)
func_520_call = mod.get_global_var('func_520')
func_524_call = mutated_mod.get_global_var('func_524')
const_1477 = relay.const(9, dtype = "uint32")#candidate|1477|()|const|uint32
const_1478 = relay.const([9,5,-7,-1,-4,-1,1,-4,5,-3,7,-2,-10,-8,-5,6,-1,9,7,-4,-3,4,10,4,-9,-8,8,7,2,-6,-4,-2,5,-4,-3,5,-5,9,-9,1,-9,4,10,3,7,-1,-4,-8,4,1,-2,3,-7,3,7,-4,4,2,-1,7,6,1,-1,-1,10,-10,10,8,-8,-3,-6,1,-7,5,10,6,-10,-8,-5,-5,2,-7,-1,-2,-7,-5,-2,-10,-9,-6,7,-5,-8,-7,5,-8,-9,1,-10,-10,8,8,2,-8,5,10,-6,10,-1,9,-10,2,9,-9,8,6,5,-7,-3,7,-9,-1,-3,10,-7,1,5,-7,9,-5], dtype = "uint32")#candidate|1478|(130,)|const|uint32
call_1476 = relay.TupleGetItem(func_520_call(relay.reshape(const_1477.astype('uint32'), []), relay.reshape(const_1478.astype('uint32'), [1, 13, 10]), ), 0)
call_1479 = relay.TupleGetItem(func_524_call(relay.reshape(const_1477.astype('uint32'), []), relay.reshape(const_1478.astype('uint32'), [1, 13, 10]), ), 0)
output = relay.Tuple([uop_1455,var_1463,bop_1472,call_1476,const_1477,const_1478,])
output2 = relay.Tuple([uop_1455,var_1463,bop_1475,call_1479,const_1477,const_1478,])
func_1480 = relay.Function([var_1454,var_1463,var_1471,], output)
mod['func_1480'] = func_1480
mod = relay.transform.InferType()(mod)
var_1481 = relay.var("var_1481", dtype = "float32", shape = (4, 8, 16))#candidate|1481|(4, 8, 16)|var|float32
var_1482 = relay.var("var_1482", dtype = "float64", shape = (80,))#candidate|1482|(80,)|var|float64
var_1483 = relay.var("var_1483", dtype = "float64", shape = (16, 8, 5))#candidate|1483|(16, 8, 5)|var|float64
output = func_1480(var_1481,var_1482,var_1483,)
func_1484 = relay.Function([var_1481,var_1482,var_1483,], output)
mutated_mod['func_1484'] = func_1484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1545 = relay.var("var_1545", dtype = "uint16", shape = (16, 5, 13))#candidate|1545|(16, 5, 13)|var|uint16
var_1546 = relay.var("var_1546", dtype = "uint16", shape = (16, 5, 13))#candidate|1546|(16, 5, 13)|var|uint16
bop_1547 = relay.not_equal(var_1545.astype('bool'), relay.reshape(var_1546.astype('bool'), relay.shape_of(var_1545))) # shape=(16, 5, 13)
output = bop_1547
output2 = bop_1547
func_1554 = relay.Function([var_1545,var_1546,], output)
mod['func_1554'] = func_1554
mod = relay.transform.InferType()(mod)
mutated_mod['func_1554'] = func_1554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1554_call = mutated_mod.get_global_var('func_1554')
var_1556 = relay.var("var_1556", dtype = "uint16", shape = (16, 5, 13))#candidate|1556|(16, 5, 13)|var|uint16
var_1557 = relay.var("var_1557", dtype = "uint16", shape = (16, 5, 13))#candidate|1557|(16, 5, 13)|var|uint16
call_1555 = func_1554_call(var_1556,var_1557,)
output = call_1555
func_1558 = relay.Function([var_1556,var_1557,], output)
mutated_mod['func_1558'] = func_1558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1895 = relay.var("var_1895", dtype = "float64", shape = (11, 3, 15))#candidate|1895|(11, 3, 15)|var|float64
uop_1896 = relay.log(var_1895.astype('float64')) # shape=(11, 3, 15)
output = relay.Tuple([uop_1896,])
output2 = relay.Tuple([uop_1896,])
func_1898 = relay.Function([var_1895,], output)
mod['func_1898'] = func_1898
mod = relay.transform.InferType()(mod)
mutated_mod['func_1898'] = func_1898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1899 = relay.var("var_1899", dtype = "float64", shape = (11, 3, 15))#candidate|1899|(11, 3, 15)|var|float64
func_1898_call = mutated_mod.get_global_var('func_1898')
call_1900 = func_1898_call(var_1899)
output = call_1900
func_1901 = relay.Function([var_1899], output)
mutated_mod['func_1901'] = func_1901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2495 = relay.var("var_2495", dtype = "uint32", shape = (4, 12, 4))#candidate|2495|(4, 12, 4)|var|uint32
var_2496 = relay.var("var_2496", dtype = "uint32", shape = (4, 12, 4))#candidate|2496|(4, 12, 4)|var|uint32
bop_2497 = relay.greater(var_2495.astype('bool'), relay.reshape(var_2496.astype('bool'), relay.shape_of(var_2495))) # shape=(4, 12, 4)
func_520_call = mod.get_global_var('func_520')
func_524_call = mutated_mod.get_global_var('func_524')
const_2508 = relay.const(2, dtype = "uint32")#candidate|2508|()|const|uint32
const_2509 = relay.const([[-4,-6,3,7,-7],[4,-10,-5,2,2],[-7,-7,7,7,-1],[10,9,8,-7,-9],[9,-2,-4,10,8],[-3,9,8,-4,-6],[10,-2,-1,5,7],[-2,7,-5,-1,-8],[9,2,1,-3,-6],[10,6,-9,6,5],[-9,-10,-1,7,10],[-8,9,6,-1,5],[-2,7,8,-5,1],[-8,8,-7,2,8],[-1,10,10,10,-7],[-3,9,-6,-8,-3],[-2,-9,8,-9,2],[-4,-8,5,-10,-9],[1,7,2,8,6],[-8,2,-9,5,-3],[-7,-2,-3,1,3],[2,2,3,-5,-1],[-2,-9,8,7,8],[-10,8,2,-10,-5],[-2,8,-6,-7,4],[2,-9,-10,-1,-8]], dtype = "uint32")#candidate|2509|(26, 5)|const|uint32
call_2507 = relay.TupleGetItem(func_520_call(relay.reshape(const_2508.astype('uint32'), []), relay.reshape(const_2509.astype('uint32'), [1, 13, 10]), ), 0)
call_2510 = relay.TupleGetItem(func_524_call(relay.reshape(const_2508.astype('uint32'), []), relay.reshape(const_2509.astype('uint32'), [1, 13, 10]), ), 0)
uop_2518 = relay.acosh(var_2495.astype('float64')) # shape=(4, 12, 4)
func_543_call = mod.get_global_var('func_543')
func_547_call = mutated_mod.get_global_var('func_547')
var_2523 = relay.var("var_2523", dtype = "int32", shape = (112,))#candidate|2523|(112,)|var|int32
call_2522 = func_543_call(relay.reshape(var_2523.astype('int32'), [8, 7, 2]), relay.reshape(var_2523.astype('int32'), [8, 7, 2]), )
call_2524 = func_543_call(relay.reshape(var_2523.astype('int32'), [8, 7, 2]), relay.reshape(var_2523.astype('int32'), [8, 7, 2]), )
output = relay.Tuple([bop_2497,call_2507,const_2508,const_2509,uop_2518,call_2522,var_2523,])
output2 = relay.Tuple([bop_2497,call_2510,const_2508,const_2509,uop_2518,call_2524,var_2523,])
func_2540 = relay.Function([var_2495,var_2496,var_2523,], output)
mod['func_2540'] = func_2540
mod = relay.transform.InferType()(mod)
var_2541 = relay.var("var_2541", dtype = "uint32", shape = (4, 12, 4))#candidate|2541|(4, 12, 4)|var|uint32
var_2542 = relay.var("var_2542", dtype = "uint32", shape = (4, 12, 4))#candidate|2542|(4, 12, 4)|var|uint32
var_2543 = relay.var("var_2543", dtype = "int32", shape = (112,))#candidate|2543|(112,)|var|int32
output = func_2540(var_2541,var_2542,var_2543,)
func_2544 = relay.Function([var_2541,var_2542,var_2543,], output)
mutated_mod['func_2544'] = func_2544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2732 = relay.var("var_2732", dtype = "float32", shape = (16, 12, 15))#candidate|2732|(16, 12, 15)|var|float32
const_2733 = relay.const([[[1.833913,4.117813,-4.967881,-1.140482,5.565583,0.502352,-4.135352,-0.846797,-2.456074,-8.036809,6.374738,5.954562,7.909628,-2.973758,-0.813526],[-5.436955,-6.924309,1.259044,2.869878,2.438415,-0.379808,2.176572,-3.356864,-0.690294,-9.245511,4.794673,-3.988673,7.987882,2.227241,2.253433],[-1.631525,-4.384068,-7.912027,6.602763,5.459156,-7.733964,6.410691,3.717340,5.449367,-1.298071,-1.454368,-1.748498,-3.532742,-8.125852,6.680467],[6.033659,-8.419079,-0.374807,1.908251,-1.575104,-2.948272,-7.826001,-1.268596,-4.666904,-1.846663,7.129524,-9.130862,0.512038,2.518200,1.224108],[5.544679,-3.583045,-9.937283,-2.765746,-8.665530,-0.619843,-3.005476,-2.204578,-4.400763,-3.338403,-3.237248,1.528419,0.703365,6.244325,1.590275],[-1.249856,-8.983977,-3.732235,0.021049,-7.588976,9.887648,8.509260,-7.124110,-6.954938,-9.614387,8.058204,-7.319106,7.872203,7.532726,-1.320194],[4.182538,3.180118,-6.062662,-3.086771,0.002282,4.378045,-3.939259,-7.884296,0.436365,0.856995,0.081415,-6.804142,-8.741395,-1.321285,-5.998821],[-1.650801,4.064530,4.834961,1.339283,9.570012,5.312702,2.443341,2.457081,-9.117997,-5.309848,-3.962958,-4.565054,6.212842,7.440430,-7.423373],[-8.323695,6.712572,-8.379708,9.173670,4.730239,-2.649474,-2.471649,-7.547958,2.091775,-2.072440,-8.786952,-0.740517,3.929307,3.584752,2.315410],[-0.538039,-2.359348,7.956429,4.622012,-0.422337,2.142025,6.004413,-4.946060,-0.442732,-0.908550,5.182582,3.877284,2.935843,0.266440,1.823241],[-7.147629,1.718549,-9.019685,8.507932,2.543017,-7.285488,9.842940,-6.603262,9.774951,5.811492,8.792232,-4.807716,-5.158945,0.081611,9.130584],[-5.080971,6.648625,-8.882162,-7.036582,1.645132,-7.127233,5.162383,7.612282,6.830341,-5.374169,-9.127385,-5.873859,-9.959249,-6.500291,-1.876124]],[[9.502699,6.190453,-9.237562,-5.864776,4.467688,0.345334,6.935282,4.405488,-1.715952,5.385987,-7.081417,6.748533,-5.766902,3.817099,7.594953],[-7.133495,5.589042,0.821035,-1.954354,-8.743762,1.331603,2.532852,-0.602212,5.211857,0.853572,3.530689,-4.838287,-3.559593,2.417251,6.769028],[-2.408508,4.030289,7.278099,4.495744,-7.224799,-7.481360,5.343976,-6.572790,-0.045768,9.806440,-5.210365,0.892377,6.511392,3.832631,-1.940043],[4.228888,0.921076,-3.712367,-3.834800,-7.330882,5.657385,-9.600975,-3.307238,8.425608,4.743668,-7.944256,2.964516,-9.742402,-1.568573,4.144063],[6.266657,6.594550,8.955701,0.577020,4.408902,-2.124925,-3.168243,-8.009905,0.960044,-5.347847,-2.016512,-8.361462,-5.305201,-3.308347,4.529059],[8.286422,-2.150569,6.748560,-9.569184,4.632211,-5.748092,9.278728,8.229609,5.493115,1.687676,1.082338,-5.055923,0.669696,-9.964756,6.214728],[-5.467596,-0.849407,6.491568,-5.940089,5.633520,-6.050370,-4.976248,-7.677564,2.499504,-6.962017,7.134925,-0.787622,-3.158680,3.645692,4.795613],[-6.319717,8.078765,-2.598154,-9.156946,2.785486,1.098819,5.402415,2.614271,9.592382,2.609878,0.574860,7.796706,-8.663505,1.254733,-4.906568],[4.519824,-6.643753,-1.592219,6.999367,-5.286173,-7.154950,-7.314850,6.688176,6.528334,-8.376978,-7.339749,-7.271175,6.317577,4.824354,-0.871429],[0.677094,-1.506851,-5.469152,6.644395,3.950520,-9.107849,4.237296,2.406825,-9.068298,8.440737,6.466092,-9.451400,1.973025,1.331730,3.694363],[-7.569816,1.944854,-2.436921,0.550457,8.413513,8.348448,-9.604743,2.287814,8.850032,1.979079,-4.045838,2.022749,-9.892959,0.032220,8.417639],[7.332140,0.625029,2.376973,-8.472090,0.610287,8.147650,-2.996118,8.581771,-8.033439,5.973491,1.522105,-1.992089,1.306718,8.104174,-8.278751]],[[0.650938,1.850101,-0.707263,-7.946049,7.741247,5.120602,4.619959,0.517108,2.127376,5.875980,3.414881,-0.217406,5.620122,-4.859701,-3.126877],[-6.110843,-4.861838,7.908738,-2.497842,0.587103,0.565509,-5.437386,-6.441381,-3.878553,5.942936,8.696876,-4.406325,5.381369,8.054597,2.256497],[-9.557102,1.049811,7.821869,-1.921750,-7.878994,3.253236,-9.289959,-6.589329,9.379312,-1.529860,9.194133,5.709594,4.275920,7.153543,-5.366624],[6.039182,-0.582459,0.964833,5.659133,2.421115,-0.687402,6.278452,5.867576,3.313536,-9.445574,1.526554,3.243089,-3.297865,3.302436,2.285610],[-0.066966,7.124888,9.968205,-3.418670,-2.451913,0.971036,-1.274199,9.549060,-3.657795,9.093028,-4.037360,-0.054149,1.287458,-9.350562,5.449631],[8.827080,-2.982012,-6.406348,4.458148,-9.643614,9.189178,-5.605042,9.006432,6.125200,9.584586,-7.940917,2.464361,9.096133,1.550103,-2.618570],[-9.644950,-7.663512,-0.266301,-4.599796,3.153231,2.659963,-8.152824,6.552616,6.610576,-7.073703,1.480503,-2.729045,6.733232,0.685988,2.874678],[2.201444,2.931257,0.998796,0.316814,-8.290952,-4.544211,7.680977,3.348159,-0.262330,7.798080,6.173147,-5.483179,3.808594,-5.576593,-4.650690],[-5.591977,9.158782,-7.200687,5.831174,-2.821160,-7.644480,2.935268,-0.918578,-6.506465,7.985478,2.552535,-5.729343,-4.521402,1.108038,5.893654],[4.321033,-6.868067,9.511702,8.907984,-9.398937,-3.819638,-3.913782,-2.559498,4.347150,-8.653260,-4.585400,7.043703,7.331560,-2.821739,-9.270648],[-9.289030,-0.610360,-9.610714,4.989995,-8.606464,-9.107109,0.718857,5.751149,2.132460,-3.646742,5.641542,8.749516,-4.801126,2.477552,8.624550],[-5.593788,0.165608,-6.698314,-1.982476,9.125993,7.555921,-1.070109,-6.572655,-7.725234,-4.562430,8.548087,2.446073,-9.222667,0.330482,2.220033]],[[-8.416284,9.762640,-9.474740,8.804417,5.038386,8.007353,-2.671561,0.559307,3.394461,-9.650133,2.197230,-0.723952,-9.238602,-5.113672,-2.375005],[1.560809,7.945071,-7.993244,-3.989450,-2.783300,-7.284318,2.371867,0.465510,8.041312,-0.217864,-5.413089,-2.898994,8.878616,-8.765653,-9.635104],[7.140389,0.002280,-6.830844,-1.171622,1.158917,8.321882,-8.287186,4.456588,9.531696,9.504857,-1.512030,7.741815,-1.551373,-6.574695,-1.560387],[0.249897,-7.498585,-5.030405,-7.911751,3.537456,-9.932318,5.133738,2.586570,-2.049219,5.248088,7.469486,-9.359526,-3.394862,7.368112,4.592833],[-2.040167,4.319455,5.355703,0.097605,-9.086093,2.333951,7.368634,0.478467,6.475721,-5.367870,1.294727,6.749318,-3.322016,-1.452678,-1.828437],[-6.230275,-9.061117,9.500846,5.417201,1.657373,3.730354,-5.010503,9.181154,-7.822525,-2.836443,-6.310959,-0.592784,3.865300,7.562044,-6.533687],[2.779069,-2.855089,-8.709461,1.036386,5.071926,9.767368,0.892538,7.752473,3.229156,-2.092891,-7.945469,-1.733787,-7.434624,-7.284473,1.466821],[5.139196,2.864037,0.660685,9.982001,6.935463,4.560499,1.204855,1.996369,-8.385769,-6.603504,-4.703734,3.751624,3.970461,-0.792486,0.875887],[-0.134754,-3.579940,9.069937,4.793225,-5.801843,0.550043,8.654844,-1.223536,6.893231,-4.419409,4.996055,5.385983,9.054011,-0.425522,-9.948156],[4.509168,-8.366701,-9.903049,8.452662,-1.110186,-1.576255,-4.126275,4.097479,-9.228337,7.013746,-6.332546,8.010969,9.168903,9.059155,-3.985843],[7.687473,-0.423413,9.552669,8.921415,4.598733,-8.138113,8.151011,7.585416,-5.428175,-7.992244,-0.896559,-0.785383,-3.384977,-3.101860,-9.946080],[6.491958,3.207631,8.015951,-5.869110,4.060389,7.329925,9.672620,-9.637169,2.977932,2.705012,-3.910274,-9.525581,3.498810,-6.538630,-8.299280]],[[9.610149,4.626786,-2.515777,9.668048,0.983148,-4.661336,3.369676,-4.674089,-6.298258,-7.065531,4.660788,-9.070831,8.269233,-8.632474,3.158815],[-6.664751,-5.862076,0.569434,8.109042,3.743859,-1.602903,3.795357,2.012569,0.024875,9.913836,6.691899,1.651648,-4.404694,-3.343656,-9.663244],[-2.480684,-3.536331,-4.022903,7.934135,-6.637684,2.707462,-1.039254,-7.471710,-0.271510,4.134845,6.493645,-4.967318,-7.268151,-9.136273,5.535339],[0.032373,3.289167,-6.954177,2.162564,4.987266,-8.466633,-3.311209,1.854203,-3.453029,0.870707,0.829497,3.440464,8.814974,0.801647,-2.956161],[-7.736890,-9.719204,2.346769,-2.499681,-2.719591,-4.919088,-8.635915,3.342174,-9.185157,8.485937,6.819559,-2.275872,-9.777197,8.770398,2.559302],[-4.979176,2.921750,-5.890288,1.250809,5.900984,-7.476256,-4.051780,9.374217,4.060448,1.261916,8.599776,0.031668,0.495463,5.538212,3.255352],[-9.504843,-3.943586,-8.977212,-0.045395,5.430066,7.828615,-2.911917,-9.614540,7.138855,7.176346,-4.136108,-0.667974,-7.477946,6.215578,-8.488812],[3.133152,-6.856663,-1.716993,-0.553348,-7.935978,-7.046386,5.601365,1.944085,-1.595914,2.128604,-0.845701,-2.700848,-0.637673,-8.396782,-6.123947],[-1.082732,-3.733626,-1.154710,-9.243765,1.976569,-6.108077,-5.405077,-1.702789,-5.719955,0.663198,-3.304145,0.979323,-5.705438,-2.560244,-8.656233],[7.902293,-3.932299,0.992948,-3.599497,8.934661,2.208015,1.009014,1.558651,3.722701,4.974311,-8.550919,-4.845437,-7.447173,4.492862,-2.073009],[-2.128979,-7.114293,4.622728,0.840928,5.617360,3.773616,-3.846478,3.618325,6.033657,8.666201,5.793247,-6.766440,-6.546170,-5.202649,1.034211],[2.368525,-2.272156,-5.064928,3.326780,1.284585,-0.378194,4.302146,9.523450,6.484341,-4.412809,4.796967,-8.713966,0.944746,5.427002,-7.600696]],[[-3.596126,-0.935037,0.922425,-6.985919,-8.541251,-6.403176,5.161107,6.385112,-4.054847,3.560359,-9.145745,-8.054968,-1.909743,4.665034,7.834988],[4.599062,3.166999,-6.729002,-7.488554,4.312127,-8.252672,-6.024545,-5.070128,-9.096840,-7.988721,7.463861,8.449882,6.013708,9.478909,8.565399],[-1.957599,0.929572,-6.852755,-9.154833,-3.327866,9.221713,9.480553,-2.349552,2.805402,-5.729510,-4.474246,-1.493467,1.857086,-0.612242,-4.574682],[7.711126,-1.341883,-2.546512,-1.735762,0.809342,0.646380,3.971469,-5.645220,-6.838834,9.224237,1.521190,-9.600003,7.911236,3.465232,-7.589253],[1.154356,-8.930115,-0.665700,-3.385009,-3.194459,-2.874094,-8.528401,-0.721065,5.228330,-9.502473,-4.060874,1.053576,-3.270221,-8.947123,-4.723304],[3.749762,2.305097,8.588191,4.662208,-2.370051,7.744430,1.533275,2.419879,2.591825,-2.228233,4.873642,0.110030,5.988695,8.415971,-8.100966],[-8.238357,2.749816,9.193389,-8.953764,-0.981978,-5.930929,0.561565,2.759488,-2.768395,0.525203,-2.490912,9.036179,2.025701,1.754718,-4.075229],[-7.096838,-7.375137,-2.740477,-8.329503,-3.013901,-5.775653,7.070723,-3.441402,-6.190559,4.737191,9.772357,-6.515584,9.924453,9.288723,-4.793011],[-9.466717,-0.348111,-1.479508,6.176610,7.223807,4.324555,-4.254315,6.160035,0.184034,0.881374,-3.995182,-6.167477,9.846404,-3.922594,5.680288],[0.910609,-2.325948,-3.406868,-3.288720,7.384025,2.785947,5.470155,7.064818,-9.034618,-3.954626,5.610135,-4.142054,5.498159,-0.603523,-2.850054],[-9.209700,2.529298,5.883635,5.604788,5.006272,-1.202876,5.135572,5.025170,-9.759065,6.242910,1.937016,5.912301,0.504654,-4.256303,6.331200],[1.989955,-4.048813,-8.874862,-7.253973,8.373042,-9.118757,-1.448940,-5.753558,4.906751,8.543694,5.793215,6.646617,-0.212300,-3.343710,-6.623431]],[[5.786887,7.728057,4.959165,5.091872,-1.149762,4.502340,-3.705905,-3.290845,1.036443,-8.044692,6.115457,-4.770699,-1.560270,5.672375,8.778806],[-0.986864,1.327380,-7.728317,4.238121,-5.074513,-5.110205,3.367089,1.313047,1.959040,6.252139,8.740981,-6.145507,9.150359,-5.571602,0.697886],[0.491051,-5.751910,5.552862,4.628766,-9.350487,-7.884149,0.166371,-3.489814,-3.518669,-4.687553,7.470590,-4.658464,4.140268,-8.864093,-2.588732],[7.311966,-8.002503,-5.382703,-8.655511,-2.973111,9.373759,6.237946,-6.376068,1.882930,-4.080489,-8.416051,2.870090,4.949888,3.021575,-3.332715],[1.863273,6.268655,4.553760,9.200536,9.630385,-5.496179,7.858193,3.655824,6.528882,-3.191767,-7.994110,6.657331,5.010710,-1.598471,2.425254],[-2.208115,-6.208266,-8.211545,3.147849,3.035933,6.733713,2.353043,-0.024766,2.167072,3.728619,8.306445,-5.983779,6.141936,2.405436,-5.200964],[-4.342830,5.690219,-6.207585,-2.738896,4.732890,-5.679231,0.296432,3.366021,3.974116,-1.774542,-7.239715,-8.182171,-4.427971,-0.844090,-9.012588],[-4.888793,3.495634,8.411412,3.294865,9.574237,-1.511968,-1.427052,9.274301,0.754022,-3.541752,8.691703,5.125219,5.107646,6.180804,8.350509],[4.515438,-2.100799,1.580597,-3.194352,4.636952,2.630062,-3.137240,-0.813526,-6.615881,-5.922594,3.577066,3.155883,4.063423,-3.111285,0.127195],[-3.242716,-9.317866,6.480538,9.647624,-8.242225,-0.270734,-7.966214,9.793708,-3.111932,-8.896609,-7.407670,0.587453,-1.402874,7.502865,6.922207],[-4.870303,8.230401,1.707486,-4.772436,-5.984853,9.044722,-6.322390,3.008764,-8.958276,3.377944,-5.234969,-0.840095,-5.520862,6.645053,-2.538915],[-8.663597,-2.250263,4.113617,-5.424338,-1.152388,-7.845604,6.930266,9.336840,2.475885,9.130656,-1.919624,-8.415420,1.040149,2.952242,-7.670810]],[[1.450368,-0.405220,-4.803637,6.875570,1.032615,-0.611833,-1.623995,4.789243,-3.685116,9.854208,9.969025,-1.733123,3.914653,-0.138369,-2.260876],[-7.400685,6.310966,0.062044,-7.174548,5.379128,3.904548,1.566594,5.969252,0.846264,1.048527,4.639539,2.991639,2.953237,8.392687,9.145386],[-1.697711,-4.153374,0.399318,-8.270163,-7.967425,4.564673,0.600500,2.946625,1.374622,-9.986059,-2.094593,-0.574483,4.112552,-4.672203,6.366974],[-8.709568,1.149438,-1.158054,2.341332,-5.856530,-8.081139,6.424673,-6.889982,-3.683719,0.957839,4.895156,0.846095,9.191093,1.123374,8.939778],[-5.248608,-6.028386,-4.512326,-4.651256,2.678594,-0.250268,-3.302539,9.272278,-5.482120,5.995156,2.855964,8.992588,-5.099289,8.578745,-9.324363],[-6.316693,3.343141,-4.869272,7.015072,2.945715,2.249345,-5.381755,1.981368,9.197081,-9.552512,1.470934,3.161156,-9.260766,-3.362913,4.820953],[-2.328113,2.084146,-1.137803,-3.444751,-3.951040,0.707069,3.270232,5.205322,7.030267,-2.847330,2.978136,1.335205,5.968583,-4.383294,-5.563384],[-3.040875,-1.519184,-6.548279,-3.242230,-7.107907,-6.318075,-3.910304,-7.760736,-4.371394,-9.382787,6.297997,-5.658941,-9.905847,-8.801531,6.554513],[-5.105554,5.046345,6.284206,-4.013628,-5.895999,-7.139530,-7.410119,-7.218216,5.648376,-3.081243,-9.867245,8.732204,7.206496,-3.284544,7.896340],[-1.077572,6.612612,-2.956953,1.312040,-8.654920,0.815939,-4.653445,-1.744618,-0.207750,5.592045,5.217419,-0.169657,-3.401268,3.594824,1.437811],[3.596832,-2.192133,-9.008276,1.324829,1.797065,7.972544,6.977508,-3.894141,9.122296,5.388618,-4.752373,-2.878372,4.740408,-7.007242,8.420594],[0.341706,4.280919,0.456917,-6.792861,2.997511,0.864074,1.666178,-1.699296,-1.082656,-0.850404,-1.321183,-9.671597,-5.190161,6.530429,-4.454212]],[[-0.618323,0.504168,-9.899840,7.206477,-0.081209,-7.044776,-2.685652,-5.346377,-3.819003,-3.475152,-5.195956,3.820985,5.273475,-9.317834,-7.188773],[3.797652,1.478018,-3.612731,2.842388,-6.171099,-9.679994,4.133675,-5.381196,2.795793,-8.221236,-3.990900,-8.854443,-5.086081,6.007542,-8.439992],[3.715547,-2.945450,2.259344,-1.114148,4.775436,-3.229752,-7.042620,-9.428779,4.296758,7.277096,0.434994,-8.520536,0.079418,4.953862,8.025870],[-3.755924,8.563158,1.425676,4.941361,3.769764,6.623410,-3.459805,-3.620968,-2.382846,-6.648158,2.683342,5.831698,1.050484,-5.478931,3.225646],[-1.639535,9.315020,4.289504,-1.511204,-7.389051,4.998697,4.936456,0.722074,-0.244546,8.764572,2.205603,-6.457063,-0.489627,6.374124,-4.404983],[5.752119,-0.604294,-6.386937,2.598264,-4.274257,-7.253673,6.083060,8.101254,0.454011,3.322287,-7.581035,-9.018493,0.643678,-9.956075,9.496126],[-3.822715,-9.368395,6.067435,-5.477496,8.626629,0.086930,-0.512388,-8.048360,4.425732,1.685014,-6.250122,-9.103783,-0.457819,-1.179577,-8.855335],[3.026503,-9.597202,-6.868223,-9.471355,-8.832516,0.920939,6.547435,9.085287,-4.186559,-0.763747,9.939299,7.140589,6.404898,4.816627,4.874202],[6.043672,-6.347998,-7.118807,-1.329771,5.418999,-3.922979,-4.147242,-9.731434,5.772721,-6.188885,-6.031048,0.303585,1.463943,2.580556,-6.427988],[9.851925,7.790136,1.573829,-3.298240,-8.046904,-0.130642,-3.788133,0.030075,-7.623101,3.449467,-9.917449,-6.764576,-7.298304,-4.389409,2.227545],[-1.260546,-0.343444,-7.523776,3.294055,6.044050,2.564729,-3.082385,-8.587851,-7.393772,9.025257,-7.258838,-2.978020,5.233039,-7.836774,-2.666589],[-3.383750,-5.914851,2.637172,-6.060192,9.038890,-9.718310,1.613476,5.825113,-0.009110,5.232934,0.207487,3.058970,-7.573898,-0.514720,-4.457045]],[[-2.194915,3.333506,-7.678165,-7.183100,0.437475,-1.454074,-9.637233,6.660464,-9.613584,2.096458,8.068157,0.441287,-0.212084,9.359194,-7.310829],[-3.666970,-6.877307,-2.827647,-9.554278,1.307024,-1.601026,6.365232,5.403077,-4.929926,8.746089,8.724032,8.573666,3.916506,6.184735,-2.676652],[0.242081,-8.386005,9.900438,-5.095374,4.467591,4.757485,4.760217,-4.851846,6.235642,-1.624413,2.031062,5.392252,-0.184577,-7.438836,0.258169],[-0.291310,1.238296,-1.746103,2.568219,-0.845795,-5.931932,-9.210057,8.738221,4.449329,-1.235280,2.319991,9.635311,-6.622259,9.986546,1.575453],[1.226931,0.157163,1.446292,0.876440,-1.086510,0.293612,-4.330278,7.849584,9.721110,-6.814332,-1.387966,4.162626,1.875826,-2.001982,-1.910514],[9.421674,9.107956,3.922943,9.502992,3.887458,-1.757450,-9.093620,-0.672492,-2.206531,-9.083252,3.252131,-9.066556,8.252983,-6.360351,2.736914],[8.249322,0.402207,3.880522,9.614007,1.779258,6.516806,-8.276865,-8.111928,3.815898,-4.083967,-1.008224,-7.376012,-0.834380,-9.577226,4.064832],[0.734614,-3.881451,7.570374,7.003388,-8.022277,1.414944,8.188262,-1.841674,3.483550,-4.835374,1.476522,7.106884,-3.738924,3.253620,0.982645],[-5.612481,-0.428153,3.710248,-0.245405,-7.863674,9.713156,-5.467167,6.980911,6.924695,-2.201677,-8.690482,-4.881152,-3.527894,3.611636,0.343882],[-8.827537,-0.165874,-2.782265,4.531765,-6.189363,-9.809176,0.323429,-6.277801,1.726462,2.107912,-3.108828,8.862251,-3.323965,6.935867,-2.304462],[-1.998442,-9.466420,3.564107,-0.188651,6.379063,-5.510215,-0.328889,1.728735,2.264986,-8.368447,-5.734128,-9.483926,2.360141,3.274611,6.495562],[5.913998,2.586063,-8.199767,7.995244,5.320711,5.292848,-2.239211,6.715059,2.377661,-1.477701,-4.692734,-9.495055,-2.550239,0.591333,-6.494094]],[[0.062375,-7.904736,0.088012,5.590204,2.901713,3.554796,6.347563,-6.944166,6.382365,7.476428,-5.068636,0.002527,-7.466062,-9.164829,6.465508],[-6.023362,9.320286,9.130778,6.111436,8.939072,5.435915,-3.197966,-1.187124,-6.538451,-7.708027,8.026120,8.546740,6.951564,-9.183629,8.000151],[-7.816713,2.621232,-6.596771,-2.203423,4.221531,-5.140649,-9.253309,7.630017,0.001390,4.739168,2.739190,-1.755351,2.812450,0.262925,-1.553420],[8.436470,-7.881774,-3.250101,-4.620420,2.403019,-1.674181,-4.308801,-6.445081,4.479471,5.477279,0.179769,9.070078,9.271205,0.026703,-5.725666],[5.475703,-0.949351,-1.662885,-3.114703,2.412224,6.370698,3.290995,-3.466370,9.533389,-9.934976,-0.801645,-8.140536,9.251250,-2.128540,-6.644007],[-3.091033,7.742329,9.303387,1.173097,-5.277759,8.347097,-8.229232,9.906580,-5.769022,-6.764726,-6.156200,-9.736052,-6.554072,-6.284653,-7.556313],[-4.579376,3.549896,1.199946,4.262686,-8.638754,8.590611,4.157676,3.736034,4.895750,-4.210666,-8.604258,-1.188910,8.403180,-9.691550,-5.520355],[-1.697973,-0.625958,-5.501042,-6.719694,-9.524308,6.537144,3.575080,-6.806711,7.669724,-8.130416,3.737000,-6.960217,-4.136435,7.812112,-6.514296],[9.357562,-6.140536,-2.651560,-7.077019,-1.402299,8.995896,-3.782645,5.997285,1.545247,-6.520782,-7.661210,-2.924424,-2.585864,-3.051543,-8.690789],[7.502899,8.430052,0.950353,-6.809685,-2.082517,-0.167669,-3.055524,-0.617725,4.309918,-3.125159,-0.308374,-3.863038,-6.367747,7.264483,-3.988163],[1.226378,4.449441,8.614033,-9.961479,-3.066481,-9.624083,-6.664725,-3.422022,-5.050721,8.864381,2.011984,4.673549,-3.300125,-1.942194,-3.000937],[2.211210,-3.438054,-3.393024,0.243003,2.245976,-8.832644,8.502165,-2.970844,2.012658,9.745312,-0.555513,-8.349795,-5.403430,9.683284,-0.881951]],[[2.332180,3.044453,1.766537,4.739987,-7.755196,-2.982234,1.368093,0.477273,3.819971,-0.499207,2.695769,-5.090032,7.795551,9.214901,8.107728],[-3.015168,8.532928,1.345324,-4.299802,-2.684519,8.462935,4.765574,-0.358278,4.192600,5.630060,-3.829175,-5.613640,4.471707,-0.377560,-1.565613],[-2.032765,-6.795753,-4.023896,-7.928824,2.207166,7.796980,-8.537357,3.049011,9.246121,-8.182985,-5.626654,-9.797120,3.029755,-9.785597,-2.732592],[-8.996287,-7.728499,-4.557757,-0.328786,4.030747,7.635549,-5.583571,4.996053,-3.208425,-2.915256,1.544468,-5.173831,2.403256,0.943919,5.836553],[-4.536399,7.933515,-9.501088,9.696936,-9.737811,-7.844590,6.198734,0.310085,-9.754068,-4.485703,6.243768,-1.606766,3.386129,7.852533,1.288992],[-6.242133,-8.211887,-0.417161,5.515793,8.854214,-8.661091,-4.172475,9.475527,-6.168892,8.128602,-9.177041,9.755239,-9.248454,2.473122,6.789746],[-8.372984,-0.618840,0.654210,-5.708671,8.543020,2.857492,8.254764,5.809908,7.257301,1.536946,-1.319721,6.142000,-3.274607,-5.551241,-6.063857],[-0.924197,9.726605,8.192982,-6.642183,-7.472935,-9.183848,0.016743,1.795365,-6.075453,6.639929,5.414999,6.837347,8.462307,7.194403,2.708996],[9.606988,-7.060379,0.754472,-7.020358,7.899037,9.639948,-2.890147,-1.227230,2.121281,-8.871248,-5.392003,0.037597,9.153149,1.408818,-0.259666],[-0.057080,-4.862781,3.008801,-2.153104,2.689730,-6.451257,0.472912,-7.189411,-0.016581,-4.866163,-0.035264,-1.401781,2.007036,-5.291806,-5.766091],[5.459624,-2.458822,-1.536874,8.027256,0.615849,-2.502958,4.052656,-5.840850,6.419860,-6.597716,-9.871996,-1.106297,-9.811459,-9.795364,-7.004715],[3.001754,9.558375,-0.865999,2.901189,-5.377058,-9.318646,-6.143912,8.067320,2.374767,9.707819,-4.759846,-8.992760,6.543080,-0.462353,3.045492]],[[-4.367731,8.240733,1.675886,5.102003,9.608796,3.816508,4.017492,-8.308888,0.913144,4.240465,9.694457,-2.072188,2.200509,-3.297823,8.198053],[-3.815830,-9.105399,8.761771,9.078017,2.658043,-9.767356,4.974290,-9.679108,-2.393382,2.704825,9.911259,-0.938274,0.443863,9.947087,3.488169],[5.189663,-5.376143,6.152453,1.023184,0.631109,-0.074526,-0.591945,8.227661,5.600491,-2.000969,3.093178,9.248055,6.960674,4.542003,-3.508849],[7.487652,4.041200,2.116968,6.675775,0.061091,0.990732,-1.241707,1.642396,8.384867,-9.892001,-8.705664,8.040252,7.976747,-4.812640,1.560800],[0.481526,-0.501999,-4.872584,-7.700971,1.925008,-4.416911,8.734732,-1.432750,-9.025425,6.147987,0.646089,5.867370,8.647391,0.267867,6.505813],[-8.283717,6.482988,1.603977,-9.458296,7.800107,-7.891966,9.232081,-7.725950,-5.709296,4.044305,6.719461,2.908956,0.746091,2.011212,-5.349796],[4.973528,-5.708557,-3.154455,-2.301743,8.804355,-1.541496,-9.248074,2.547448,6.704737,1.095629,4.182165,7.116425,1.355868,2.602153,5.180356],[-2.186285,-9.921523,0.227801,-1.545600,7.997264,8.346668,3.242067,1.336083,-3.178975,0.925958,3.900971,6.651780,5.901249,3.124088,3.404089],[2.552141,9.589187,-3.126530,-4.824948,1.230222,-9.456119,8.443888,-6.238854,-4.696013,7.851670,-9.573326,-6.426364,0.731841,6.792795,-9.014189],[1.424903,-8.196731,8.634343,2.636931,5.492323,-3.540973,9.338809,-4.063168,-6.561043,-2.348659,-0.702012,0.032902,-7.838697,-3.117054,0.423222],[2.089881,-5.415451,-7.089753,-6.351232,1.711651,-4.972058,-0.378494,6.368658,5.863162,5.374198,5.552404,-2.180660,3.912993,1.423376,-9.237896],[-7.026215,0.953447,5.737395,8.627462,3.912436,-3.388419,-7.892306,5.593187,7.215255,4.672691,7.445159,-5.964070,3.847295,-9.450394,2.900484]],[[-9.372657,-7.430472,3.334759,7.926608,-3.530493,2.649558,-8.376371,5.800158,-4.323736,-5.071548,9.770457,-5.027004,1.985286,2.260512,0.966815],[0.802539,4.145380,0.955334,2.836584,3.925824,-5.600336,-4.823591,-0.434541,-3.849232,-4.357984,-1.827706,-6.977031,1.461580,9.951757,-0.754731],[-8.460783,-5.434707,5.532403,-1.029880,-8.362958,-2.816781,-1.285482,7.110584,-0.683665,5.242687,-8.103741,4.500711,5.730892,-4.770856,0.630738],[9.176537,-8.326845,8.070643,7.348513,2.564965,5.947147,-4.365111,-5.758912,-2.087099,-8.247411,-6.491137,-3.249696,2.473412,-2.243322,-6.406204],[-6.952532,6.894326,9.429516,8.567156,-7.246502,-8.457063,-3.438978,-2.135891,-3.363126,-1.795402,-2.831369,1.190728,-3.129360,-0.654249,-7.712001],[-1.255440,-5.641479,-0.237936,9.622857,7.990402,-1.141514,4.211567,-0.961954,6.615295,7.192489,9.572211,-7.663385,-7.045434,-8.955136,-6.978052],[9.387630,7.485600,-3.165690,4.076580,2.957663,-7.205687,-3.979388,9.952412,0.236618,6.330611,-2.646650,-5.043635,0.751173,0.192433,-5.351472],[-1.069408,-8.104120,8.473830,7.270858,-8.672257,7.953704,-5.013087,7.678320,8.512496,8.171221,9.819280,5.898463,-6.418286,-8.669834,-3.510556],[5.853761,-2.754514,6.795431,6.172145,-9.688786,8.697540,-1.351098,9.490637,2.666939,-6.609554,4.066841,-7.653941,4.623859,3.678376,-5.498131],[-1.451706,-1.413309,-7.131191,2.321888,8.198747,6.008524,0.614041,-3.529444,7.487760,4.977333,-8.872976,1.331448,-9.267327,-5.807291,-2.134321],[7.054103,-7.455510,9.448383,7.723639,-8.878524,-2.633706,-5.568531,1.409208,-2.272235,-2.801001,-3.820490,-2.013230,-1.350119,5.925876,-9.947983],[8.947421,-8.956266,-3.208852,-6.705541,-0.174710,-0.483206,8.818133,6.439731,6.117954,0.517289,6.636457,7.062035,-2.107824,-0.470337,-2.315200]],[[0.550198,1.711891,4.251394,-3.740999,1.236034,1.721605,4.508773,-4.786420,0.983870,4.022811,-6.246562,6.979582,-1.643472,7.361346,7.897211],[-3.793745,7.993980,-8.833229,5.196883,6.842840,-5.758614,-9.023094,3.794291,-1.287712,-6.203653,9.211887,-4.108285,-6.472995,-2.609497,-8.053572],[3.611859,3.612712,-2.781425,-2.183272,-8.271346,-0.783585,-9.075850,-9.667132,-4.920459,-1.716726,-2.909916,2.959670,-0.349119,-9.125513,6.107808],[-4.524415,3.807654,2.216087,-6.762605,5.761257,7.125840,8.925780,-7.115027,8.574906,-2.882047,6.041961,-1.061696,5.468851,3.664426,8.743793],[-8.942137,4.730320,1.484827,9.390667,-7.116543,-8.956179,0.275559,4.671227,-5.820086,-6.551281,9.770588,0.685719,-4.069082,-6.125867,-6.577007],[-6.846994,-2.825067,-4.223643,-4.050670,0.738528,-1.852128,8.945888,9.271563,2.962648,4.370040,-9.869864,-9.824118,-3.806782,-5.388683,-0.799315],[0.495632,-4.251310,-3.434491,5.162565,-2.404952,-6.346429,6.852259,-9.218878,-0.117813,-3.259865,0.262753,-4.662853,-3.422302,-9.598436,-0.723439],[-7.522471,3.191811,0.430041,4.707486,1.647403,0.129417,7.016784,5.358478,2.419075,8.624145,0.379051,-1.517686,-6.681361,7.454489,1.800448],[0.821541,9.051175,-0.412560,0.022800,9.911021,-1.250655,-5.326329,0.902687,3.659001,0.340497,-8.232939,-6.899902,2.397340,-3.953278,1.322910],[-1.557657,9.165268,-7.567751,-9.561319,8.103618,-4.042591,-7.461573,5.453741,-7.828800,-6.850002,-1.120878,-4.678881,0.149726,1.714670,-9.305293],[4.979862,-5.324072,-7.215689,2.190474,-0.015209,8.266489,-8.775320,4.303142,7.938822,-3.916719,1.893885,7.614423,5.648856,8.319913,-9.048258],[-6.815000,-7.717248,-8.515023,2.603163,1.557163,-8.229824,-6.605889,-0.659488,0.708868,8.169140,0.173032,-4.288688,-0.186587,3.681797,-8.943517]],[[-4.809219,-2.774095,8.570714,6.002148,-6.947844,-0.589363,7.244593,5.253416,-4.040255,-2.679681,-8.104143,0.772735,-5.699013,2.533609,8.177574],[8.844862,-7.192278,1.980828,-0.910790,-2.806060,2.038427,2.175510,4.342514,5.526941,4.842891,3.102235,7.993913,-6.353608,-0.706227,-1.674979],[-3.463720,3.592396,1.791038,-6.328892,-2.635624,-7.815325,-4.311098,-8.823857,-3.327960,4.442959,2.352178,2.134709,0.244892,-1.813735,5.805676],[-6.827141,-7.347214,-3.604490,-4.957613,1.613053,6.613308,-8.580261,-0.016353,3.524001,-2.355415,-9.188761,4.284603,1.915751,-5.304064,8.691970],[-2.220568,5.622935,8.183439,-6.827887,-0.955594,-7.288628,7.306742,2.728271,-6.961655,-9.496755,-3.703749,-6.238186,-7.097650,-6.217297,-4.213654],[1.647910,2.963109,4.509137,-9.037365,-2.203353,-6.607938,7.573217,-2.308539,3.675189,7.471696,5.846112,-9.145816,-6.525796,1.837180,0.315353],[-8.347861,-7.795792,3.173893,-9.846441,2.925680,8.671907,-3.020227,3.362354,4.832274,3.312085,-0.227810,-7.137655,-8.952698,-7.911693,-0.945677],[7.264767,-3.752713,-7.334286,-6.481502,2.711233,-9.313236,7.215588,1.829127,4.791111,1.731840,-9.055130,8.126846,-5.219265,0.324855,-6.087833],[2.633359,-4.327292,1.363246,4.160804,8.417505,-8.446175,9.075249,-5.629621,-7.936644,-9.044442,-8.064574,-6.795176,4.327836,-4.786381,4.911404],[-3.554617,-3.339431,-9.192409,-6.737214,8.313256,-0.419380,9.064562,4.159487,8.598661,5.371603,1.134930,-1.092209,2.260132,8.389893,-9.126836],[-0.191791,1.431671,4.039352,7.397881,5.158763,1.941357,-3.383412,-2.618038,8.054087,0.567169,5.583185,-2.115180,-9.461203,2.891342,3.839078],[-4.304631,1.656903,7.344882,0.516028,-2.328657,6.907353,8.914414,-9.263756,-9.738635,6.242407,-6.232114,-2.234968,-8.566144,-1.029070,-9.310502]]], dtype = "float32")#candidate|2733|(16, 12, 15)|const|float32
bop_2734 = relay.divide(var_2732.astype('float32'), relay.reshape(const_2733.astype('float32'), relay.shape_of(var_2732))) # shape=(16, 12, 15)
uop_2737 = relay.sin(var_2732.astype('float32')) # shape=(16, 12, 15)
output = relay.Tuple([bop_2734,uop_2737,])
output2 = relay.Tuple([bop_2734,uop_2737,])
func_2740 = relay.Function([var_2732,], output)
mod['func_2740'] = func_2740
mod = relay.transform.InferType()(mod)
mutated_mod['func_2740'] = func_2740
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2741 = relay.var("var_2741", dtype = "float32", shape = (16, 12, 15))#candidate|2741|(16, 12, 15)|var|float32
func_2740_call = mutated_mod.get_global_var('func_2740')
call_2742 = func_2740_call(var_2741)
output = call_2742
func_2743 = relay.Function([var_2741], output)
mutated_mod['func_2743'] = func_2743
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2866 = relay.const([[[5.981926,-8.705540],[-3.871039,2.274662],[4.752074,-0.638161],[-1.690694,1.863615],[7.576791,-8.824462],[3.776717,4.644702]],[[1.563455,4.566958],[-3.797162,7.083208],[4.015269,-4.618191],[-8.992019,-3.517551],[8.305456,4.347331],[-7.137251,8.873238]],[[3.454332,-8.601761],[3.726371,-4.446744],[9.993867,-4.697893],[-7.366645,8.313736],[0.239414,0.396041],[7.311870,5.072290]],[[-0.536269,6.036670],[-4.401357,5.124097],[-1.080121,-0.135574],[9.694586,-5.356656],[-4.843228,5.010448],[1.734711,-1.883469]],[[-5.974677,-3.658073],[-4.158242,-8.258716],[-6.137019,5.373716],[-7.500884,-0.821283],[-2.386644,-0.562368],[8.941234,-1.834501]]], dtype = "float64")#candidate|2866|(5, 6, 2)|const|float64
uop_2867 = relay.atanh(const_2866.astype('float64')) # shape=(5, 6, 2)
func_543_call = mod.get_global_var('func_543')
func_547_call = mutated_mod.get_global_var('func_547')
var_2874 = relay.var("var_2874", dtype = "int32", shape = (28, 4))#candidate|2874|(28, 4)|var|int32
call_2873 = func_543_call(relay.reshape(var_2874.astype('int32'), [8, 7, 2]), relay.reshape(var_2874.astype('int32'), [8, 7, 2]), )
call_2875 = func_543_call(relay.reshape(var_2874.astype('int32'), [8, 7, 2]), relay.reshape(var_2874.astype('int32'), [8, 7, 2]), )
output = relay.Tuple([uop_2867,call_2873,var_2874,])
output2 = relay.Tuple([uop_2867,call_2875,var_2874,])
func_2890 = relay.Function([var_2874,], output)
mod['func_2890'] = func_2890
mod = relay.transform.InferType()(mod)
var_2891 = relay.var("var_2891", dtype = "int32", shape = (28, 4))#candidate|2891|(28, 4)|var|int32
output = func_2890(var_2891)
func_2892 = relay.Function([var_2891], output)
mutated_mod['func_2892'] = func_2892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3155 = relay.var("var_3155", dtype = "float64", shape = (12, 1, 10))#candidate|3155|(12, 1, 10)|var|float64
var_3156 = relay.var("var_3156", dtype = "float64", shape = (12, 10, 10))#candidate|3156|(12, 10, 10)|var|float64
bop_3157 = relay.equal(var_3155.astype('bool'), var_3156.astype('bool')) # shape=(12, 10, 10)
func_543_call = mod.get_global_var('func_543')
func_547_call = mutated_mod.get_global_var('func_547')
const_3183 = relay.const([[-8,2,3,-8,-4,-8,4,-8,4,5,3,-3,6,9,-3,-8,9,-4,3,-1,-9,-2,3,-3,-5,-10,-8,7,3,1,-2,-9,-1,5,7,1,-7,6,4,8,10,10,-10,-2,-6,3,6,-10,6,-2,-3,6,-7,9,-4,1],[-4,-1,-9,-9,8,2,3,10,9,-2,-7,4,3,-5,10,-10,-6,-1,4,9,-2,-3,-3,6,-6,-6,-7,9,4,6,10,10,-4,3,3,-7,3,9,6,-9,4,-7,6,2,2,5,1,-1,10,-3,6,-5,-2,8,-2,2]], dtype = "int32")#candidate|3183|(2, 56)|const|int32
call_3182 = func_543_call(relay.reshape(const_3183.astype('int32'), [8, 7, 2]), relay.reshape(const_3183.astype('int32'), [8, 7, 2]), )
call_3184 = func_543_call(relay.reshape(const_3183.astype('int32'), [8, 7, 2]), relay.reshape(const_3183.astype('int32'), [8, 7, 2]), )
func_1480_call = mod.get_global_var('func_1480')
func_1484_call = mutated_mod.get_global_var('func_1484')
var_3200 = relay.var("var_3200", dtype = "float32", shape = (512,))#candidate|3200|(512,)|var|float32
var_3201 = relay.var("var_3201", dtype = "float64", shape = (80, 1))#candidate|3201|(80, 1)|var|float64
var_3202 = relay.var("var_3202", dtype = "float64", shape = (640,))#candidate|3202|(640,)|var|float64
call_3199 = relay.TupleGetItem(func_1480_call(relay.reshape(var_3200.astype('float32'), [4, 8, 16]), relay.reshape(var_3201.astype('float64'), [80,]), relay.reshape(var_3202.astype('float64'), [16, 8, 5]), ), 4)
call_3203 = relay.TupleGetItem(func_1484_call(relay.reshape(var_3200.astype('float32'), [4, 8, 16]), relay.reshape(var_3201.astype('float64'), [80,]), relay.reshape(var_3202.astype('float64'), [16, 8, 5]), ), 4)
func_1898_call = mod.get_global_var('func_1898')
func_1901_call = mutated_mod.get_global_var('func_1901')
const_3221 = relay.const([-8.092676,5.640151,-8.880727,-0.244189,2.130297,0.944189,0.818434,3.528715,-8.134521,9.060921,-9.874064,-8.298030,4.434192,-6.195875,-6.488011,-9.924526,5.421762,-0.396696,-4.266363,3.215507,-4.306041,-0.231417,4.300879,-2.457850,-1.531189,-5.108062,-5.101283,8.552277,-3.808669,9.625865,6.213604,5.336910,3.158032,-1.957607,8.576307,6.637963,7.955320,6.247292,2.006726,-3.499120,5.657564,-7.777374,-2.388785,5.007147,3.880749,0.809276,-5.740636,-1.870123,2.108107,6.591277,-4.695234,-6.084306,-4.085410,-6.309346,-4.870249,-9.127472,1.773583,3.512765,-4.149725,-7.975995,2.606705,-2.856599,6.843388,-0.394278,-8.415656,5.847999,-6.262056,-0.911438,4.231747,6.931113,5.800952,3.186687,-4.420465,-9.168397,8.149020,7.923778,8.057181,5.647820,-0.342956,1.048968,7.527864,6.732203,-3.002183,9.249949,-7.907404,1.993129,-3.494816,-1.334473,-5.451587,9.860789,0.603364,-2.145547,-9.147509,2.443149,3.630275,8.576357,3.629353,7.450139,-1.854195,7.471200,6.834799,0.924731,4.946788,-5.261071,-3.671559,-8.382102,-6.994750,-1.927379,-3.891407,2.429377,-1.474459,-0.072883,7.772569,-2.871543,-5.358473,-0.117036,-9.013740,4.803274,4.115512,4.099173,4.036268,-5.327677,3.957249,6.100830,-5.860654,1.798000,2.383243,3.421839,5.530376,1.931291,8.451415,2.554619,4.168569,-8.343623,4.500849,-4.052075,0.105637,-8.861013,-9.746259,-9.231622,3.468803,0.212531,5.154532,7.318548,-1.804577,2.813485,1.966713,-2.774290,7.811477,4.597863,-6.530641,-9.510523,-5.421230,-4.153069,-6.285009,-2.575717,1.854476,-4.322133,-6.360202,9.586855,-4.110474,-8.086778,-9.633543,-2.729806,8.879266,-2.216288,-0.543923,2.994862,8.163538,2.098490,-8.591196,7.177900,2.355530,6.485986,-2.862930,6.348507,4.380425,-6.634419,-2.325086,4.680402,-0.789191,7.684222,-7.881911,-5.126660,1.936806,4.928222,1.559068,8.978630,4.066949,-6.762661,7.407997,-4.476217,7.359233,-7.857767,-5.503770,-7.918433,1.346545,7.114274,-5.720127,-0.112486,1.760022,-6.962909,-6.970003,3.423425,-6.206461,2.430808,3.135468,-4.630084,-6.888122,-8.251317,-1.051905,-5.336766,3.317900,-4.137096,2.374118,6.739542,-3.805240,1.663172,2.171648,-4.799693,-2.926931,4.387898,-4.553536,-6.959129,4.946036,2.244469,2.796125,8.041611,0.279293,8.591564,-2.689557,8.644694,-0.058276,-2.453010,3.251954,6.075811,-2.555856,-3.340471,-4.979899,-7.024678,1.162109,3.794399,5.683684,7.128317,-9.479994,0.053683,0.260963,-8.850615,6.424220,3.578551,4.854083,-9.545955,-7.838430,-9.756429,8.756604,-3.749413,-8.094155,-4.238291,-2.041469,-0.311191,-8.655867,-6.586645,-2.032910,0.851405,8.994055,0.056055,3.182360,-9.556012,-4.839668,-9.363630,6.305777,-1.749484,-8.154827,6.789387,6.327113,-8.256472,7.396837,6.073445,4.921766,2.448934,-8.784684,1.126931,-3.251417,5.624267,0.162712,3.446891,-1.281923,-4.529662,-7.255361,1.174015,-9.257879,4.023244,-6.931027,3.698698,2.918378,-6.971913,9.089689,7.952351,-6.449414,-8.904584,-2.350626,-7.082907,-4.617051,9.225530,5.988443,-6.813046,-6.347849,8.347342,-7.959932,-2.304464,-4.532472,1.763918,1.440565,9.862704,6.124014,2.618541,1.311910,-2.252616,-2.619574,-7.629728,2.377437,3.268393,-8.610315,-1.979249,-1.158248,-4.218384,-6.111176,-0.934071,-6.303699,3.742042,-3.254767,7.690448,-7.373154,5.670328,-8.270539,-4.936929,-0.824681,3.607645,2.537850,9.411660,7.060239,-0.348962,-4.228999,7.590585,-9.295810,-4.326734,1.010300,1.696906,-9.999852,-6.999656,-1.545348,-6.480534,3.569937,-3.644750,6.434677,-4.524757,3.229660,-2.312405,1.292197,8.858749,-8.194501,-8.220524,0.449510,-2.050719,-1.719057,-2.613087,4.362377,8.050272,6.090331,6.689334,-4.048817,5.631271,-8.372760,6.091628,1.774102,-8.191429,-4.181569,0.845470,-7.337329,6.946705,-6.785633,4.950654,-2.852076,-5.672338,-5.249500,5.781641,8.172857,5.223134,-8.445590,-7.479362,8.347179,-7.837945,5.474565,7.595351,9.892479,2.611584,8.601523,2.985894,7.571205,9.922040,-5.728129,-3.424679,1.559886,8.058736,-7.944960,5.085755,-8.279417,-1.520137,8.928710,4.644732,-0.575505,-1.872228,-9.236807,-1.621284,-8.823259,6.721187,-7.432092,-8.038994,3.632085,2.388939,3.676956,8.750466,-5.515218,-8.579139,-3.954820,-2.330232,-3.637572,-2.977880,5.932261,-7.705245,-3.803404,-2.927666,-3.110683,-2.623721,-8.396790,2.168397,-4.755113,-7.449587,-2.873823,-6.982998,-1.892820,-2.488635,4.329658,4.913708,5.633997,-6.114499,-3.577639,-2.084817,-5.577387,-5.828816,-8.257959,-2.098888,6.906146,-7.364423,2.515070,-0.436048,5.047349,-0.457797,2.701896,9.476749,-1.600276,-7.530221,-0.591142,8.865621,0.011699,-5.509549,0.189201,-5.237496,3.956604,3.043156,8.970756,-5.513195,-7.870172,9.248032,0.207347,-9.643818,3.293064,-6.668012,5.715033,-1.629180,8.407053,-4.035721,4.434054,9.609216,8.765015,-3.213784,-2.430370,-6.062196,9.278617,-3.174447,-5.874439,-6.788718,6.018446,-5.379497,-8.876680], dtype = "float64")#candidate|3221|(495,)|const|float64
call_3220 = relay.TupleGetItem(func_1898_call(relay.reshape(const_3221.astype('float64'), [11, 3, 15])), 0)
call_3222 = relay.TupleGetItem(func_1901_call(relay.reshape(const_3221.astype('float64'), [11, 3, 15])), 0)
const_3223 = relay.const([[-6,10,8,1,-5,-2,-4,9,-6,4,3,-2,-5,8,-6,3,-8,7,2,-10,4,-7,2,2,4,4,6,-4,-8,8,-3,-6,-3,-7,-3,-1,8,5,4,8,5,-3,7,-1,-2,-9,-9,6,-9,6,-9,-9,7,-6,3,-8],[5,9,-9,-7,1,-5,-2,-4,-3,3,9,10,-7,-6,-2,1,6,-1,2,7,3,-6,3,4,-10,10,10,-3,8,-9,6,10,-2,8,-7,9,-8,-5,-5,-9,-9,-4,10,-7,-9,-1,-8,6,9,6,-8,8,-2,-7,5,1]], dtype = "int32")#candidate|3223|(2, 56)|const|int32
bop_3224 = relay.greater(const_3183.astype('bool'), relay.reshape(const_3223.astype('bool'), relay.shape_of(const_3183))) # shape=(2, 56)
func_1898_call = mod.get_global_var('func_1898')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_3232 = relay.TupleGetItem(func_1898_call(relay.reshape(const_3221.astype('float64'), [11, 3, 15])), 0)
call_3233 = relay.TupleGetItem(func_1901_call(relay.reshape(const_3221.astype('float64'), [11, 3, 15])), 0)
output = relay.Tuple([bop_3157,call_3182,call_3199,var_3200,var_3201,var_3202,call_3220,const_3221,bop_3224,call_3232,])
output2 = relay.Tuple([bop_3157,call_3184,call_3203,var_3200,var_3201,var_3202,call_3222,const_3221,bop_3224,call_3233,])
func_3236 = relay.Function([var_3155,var_3156,var_3200,var_3201,var_3202,], output)
mod['func_3236'] = func_3236
mod = relay.transform.InferType()(mod)
var_3237 = relay.var("var_3237", dtype = "float64", shape = (12, 1, 10))#candidate|3237|(12, 1, 10)|var|float64
var_3238 = relay.var("var_3238", dtype = "float64", shape = (12, 10, 10))#candidate|3238|(12, 10, 10)|var|float64
var_3239 = relay.var("var_3239", dtype = "float32", shape = (512,))#candidate|3239|(512,)|var|float32
var_3240 = relay.var("var_3240", dtype = "float64", shape = (80, 1))#candidate|3240|(80, 1)|var|float64
var_3241 = relay.var("var_3241", dtype = "float64", shape = (640,))#candidate|3241|(640,)|var|float64
output = func_3236(var_3237,var_3238,var_3239,var_3240,var_3241,)
func_3242 = relay.Function([var_3237,var_3238,var_3239,var_3240,var_3241,], output)
mutated_mod['func_3242'] = func_3242
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3484 = relay.const([[[9.000894,-2.719511,0.344310,-3.822375,-3.149044,5.313036,1.011942,7.433965,8.754945,-9.114815,1.151714],[3.115054,5.479823,-8.476526,-0.962471,-5.296285,-4.523911,-6.073540,9.136005,-2.013430,0.455617,-1.205446],[-3.696909,2.014997,4.537832,3.851673,-9.325072,7.453478,-0.118091,3.092935,8.433804,-9.071254,-3.761125],[9.427966,3.602296,-2.720126,4.498308,8.043232,-2.998553,-6.540278,3.528795,-3.087772,-4.806447,7.818155],[7.398117,4.842004,9.463651,-5.889890,9.279276,1.421071,1.437603,1.171910,-0.498096,9.667892,9.841385],[8.275373,6.034981,-1.196845,0.044686,-4.620342,-1.658935,6.302490,7.647452,-2.576764,-9.351639,-4.991418],[0.779174,-3.104563,-2.519612,-7.295445,8.636326,-6.753827,-4.457250,1.722761,6.753829,-2.014897,5.131475],[9.753073,-8.775857,2.008684,5.308945,-0.928804,4.182730,-4.533330,-1.955652,8.857695,-4.597464,0.243912],[6.903987,-1.104427,-3.139318,-1.273416,0.775975,5.850420,7.038110,-2.193562,-0.826712,2.001238,7.108855]],[[8.025280,7.462177,-0.165274,9.579651,-3.341233,-9.556331,4.623765,6.334987,-2.260608,8.074091,-5.053594],[0.442368,2.176418,-7.514406,4.838128,-2.851538,0.028500,-9.052308,-7.305298,9.249509,-3.769554,3.269876],[4.892382,4.462648,9.846892,4.661081,-9.193052,-3.411766,-9.240577,-9.268936,3.156350,-9.794041,-2.569570],[-3.540467,-5.557192,5.331406,9.091649,-7.440524,-7.702982,-9.271484,-5.082557,9.941643,-1.477468,-3.657917],[-7.889287,4.451081,-0.990542,1.491643,-7.883521,8.343651,5.010807,5.914015,3.022591,5.482216,5.060819],[-3.252203,5.667989,-5.201764,8.204287,-7.949575,-2.206240,3.177389,-8.709308,7.355024,-3.019596,4.671667],[-9.614358,-8.523739,4.720019,2.671787,-9.798736,-2.281679,5.950467,5.784756,-9.965405,1.621120,3.092359],[6.943846,9.419938,-8.008113,8.614378,0.671056,-3.510026,2.006885,-3.782909,9.455787,-4.958506,-1.617934],[-1.035714,9.819983,-2.059054,7.718845,4.695776,3.936239,-5.664841,6.379664,1.439232,6.942621,-1.784936]],[[8.832958,4.823528,0.483795,9.757268,1.907652,-2.734215,-7.014880,0.611733,-5.072534,-0.838345,5.326973],[-3.473198,-1.306311,-8.528835,6.308109,-5.850585,1.527398,1.572497,-9.257850,-2.198019,1.635873,-0.116802],[8.195104,7.758035,-9.864447,7.628982,-6.319640,-3.575411,-2.101420,-0.212296,-7.257773,-5.724405,-9.560703],[-8.134534,-3.966107,2.696335,0.033504,6.722310,5.287986,0.720551,-8.528816,-4.418468,-7.891001,9.561566],[5.335315,-8.004805,6.749382,9.786812,2.208614,-8.354928,-0.133006,1.280374,3.237200,6.430454,6.042769],[-7.481698,3.607378,7.001726,-0.738020,-3.037514,-8.252785,9.179916,-5.462009,-6.488867,-6.187525,7.020474],[-4.855611,1.454833,-4.873947,-9.872815,9.090189,1.179861,0.241844,-6.019503,-1.159179,5.572665,8.342672],[-1.259287,9.813613,4.313346,8.971690,4.945501,8.965894,6.476072,6.822307,-0.393785,-7.355789,6.520299],[-6.616439,9.906146,4.234906,3.736201,7.210859,-7.012437,-8.536424,0.828494,-2.083655,3.828284,8.336052]],[[1.266396,5.159833,4.683470,-8.105029,5.664804,-8.928461,1.834753,-8.113923,-0.671130,-3.084631,-8.699726],[4.631348,-2.499489,-9.474776,8.615386,-3.305197,-7.073617,-1.011826,9.948188,5.006205,0.104883,-8.691416],[7.758811,-3.306737,-2.238315,-8.778908,3.525996,-4.277617,4.534177,-0.742833,-5.993518,-6.322390,-6.459116],[-2.504689,5.878145,-6.856760,5.052727,7.073191,2.762337,5.001442,-6.738557,4.452286,2.284164,7.444211],[-8.142622,4.389770,-8.157068,-6.900294,2.525520,-9.955460,-4.312521,9.534322,2.925178,-1.991890,-1.920080],[4.889184,7.833072,3.456339,-6.795501,7.634336,-0.075312,-9.062362,-5.938126,5.343764,9.596835,-6.571209],[-5.888031,-7.579816,-8.917722,4.323243,-8.071311,0.577735,1.266722,-6.310840,7.415747,-0.537946,-4.422097],[-9.043166,6.923511,-1.213153,-6.234484,-9.809520,3.197186,-3.678197,4.331871,-7.447616,-9.790907,2.847382],[-0.101715,-5.471000,-6.408331,5.524387,2.725830,4.162822,0.075456,0.854668,6.846923,1.534573,-9.716467]],[[-3.162245,9.667075,5.133972,3.979110,9.556136,-0.262278,3.867745,-9.416327,-4.486228,9.377395,4.756337],[3.947768,-3.358077,-7.459494,3.621089,2.510776,9.142964,2.369029,3.779855,0.157590,-5.997411,-6.955571],[-0.443821,2.603842,-4.707396,2.279018,4.248768,-1.480203,7.510865,5.487075,-5.489442,-7.671716,1.688793],[-5.210272,-6.348622,5.290502,-6.779132,3.818973,9.541012,8.211745,3.571463,0.613629,9.092539,-3.814364],[-0.769241,-3.471939,-0.657318,-7.836688,-3.883493,-7.847675,4.926504,9.052207,7.014630,-2.728706,4.260285],[-9.321917,-5.948570,-6.364611,-4.428248,-2.341494,-0.065137,7.403607,-8.770108,9.323990,-0.311645,4.003830],[7.047754,0.172399,3.856882,4.871508,4.811927,6.991940,7.566195,-3.838194,-3.491548,3.386189,1.960283],[-0.803269,-3.531420,-7.288145,1.611579,-4.985080,-4.769361,-0.975988,-3.738117,2.531057,5.830719,7.970786],[-8.352018,-6.446042,5.486477,7.933490,-7.454484,-1.414634,0.308066,-1.731580,-1.861096,-0.570159,-6.631082]],[[3.886489,-5.502906,3.522186,9.911223,1.364250,-9.931270,5.636318,2.870280,-0.130224,-1.723745,-6.854106],[0.314903,-0.333432,-6.662129,-2.615971,2.846828,7.703009,-9.926845,-8.372020,6.431601,6.064612,9.873369],[7.099823,-9.640129,2.746939,-0.268098,-6.096265,-8.583505,-7.120833,6.360534,8.094566,-7.554744,0.128738],[6.448320,-1.865758,4.049300,-4.747045,-1.997672,7.704722,5.748106,4.566776,-8.557485,0.531578,8.251428],[7.161784,7.796088,7.726852,0.441134,-6.708234,-0.621323,-1.677038,2.533455,3.268150,-5.463925,-2.982221],[1.526183,-7.658533,4.851554,-4.110832,7.281447,-4.651347,-5.673476,-0.385607,-3.064521,9.179599,1.257036],[-5.094027,-8.670877,2.746028,-1.383918,2.956162,3.556071,0.682661,7.113047,4.147675,-2.650869,2.696625],[-3.340015,-7.009070,7.432670,1.439356,4.161884,2.936143,8.276192,0.862432,-0.394075,1.197181,-5.173207],[-7.707926,-5.863089,-9.651945,6.578119,-1.934307,2.716693,-2.112755,-4.401397,9.247463,7.602962,1.902101]]], dtype = "float32")#candidate|3484|(6, 9, 11)|const|float32
uop_3485 = relay.atan(const_3484.astype('float32')) # shape=(6, 9, 11)
output = uop_3485
output2 = uop_3485
func_3523 = relay.Function([], output)
mod['func_3523'] = func_3523
mod = relay.transform.InferType()(mod)
mutated_mod['func_3523'] = func_3523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3523_call = mutated_mod.get_global_var('func_3523')
call_3524 = func_3523_call()
output = call_3524
func_3525 = relay.Function([], output)
mutated_mod['func_3525'] = func_3525
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3556 = relay.var("var_3556", dtype = "int32", shape = (12, 8, 15))#candidate|3556|(12, 8, 15)|var|int32
var_3557 = relay.var("var_3557", dtype = "int32", shape = (12, 8, 15))#candidate|3557|(12, 8, 15)|var|int32
bop_3558 = relay.minimum(var_3556.astype('int32'), relay.reshape(var_3557.astype('int32'), relay.shape_of(var_3556))) # shape=(12, 8, 15)
uop_3573 = relay.sin(var_3557.astype('float64')) # shape=(12, 8, 15)
func_543_call = mod.get_global_var('func_543')
func_547_call = mutated_mod.get_global_var('func_547')
const_3576 = relay.const([-2,-1,2,-1,8,-10,10,1,-5,-10,-5,2,10,2,-8,9,-9,-4,2,6,5,-8,-1,1,-1,-4,7,4,-7,1,9,-7,8,-9,-9,2,-2,-9,9,-1,-10,9,-3,7,9,-7,-5,7,8,-6,1,-10,-10,8,-10,-10,-5,10,-1,-8,-4,-9,3,-4,1,9,2,5,-10,-9,-3,3,-9,-6,9,-1,10,1,7,4,9,-10,-3,-1,9,3,3,7,-8,-10,-8,-9,-2,-2,8,-7,-9,6,-3,5,10,-3,6,3,-5,-1,6,1,-10,9,9,3], dtype = "int32")#candidate|3576|(112,)|const|int32
call_3575 = func_543_call(relay.reshape(const_3576.astype('int32'), [8, 7, 2]), relay.reshape(const_3576.astype('int32'), [8, 7, 2]), )
call_3577 = func_543_call(relay.reshape(const_3576.astype('int32'), [8, 7, 2]), relay.reshape(const_3576.astype('int32'), [8, 7, 2]), )
output = relay.Tuple([bop_3558,uop_3573,call_3575,const_3576,])
output2 = relay.Tuple([bop_3558,uop_3573,call_3577,const_3576,])
func_3578 = relay.Function([var_3556,var_3557,], output)
mod['func_3578'] = func_3578
mod = relay.transform.InferType()(mod)
var_3579 = relay.var("var_3579", dtype = "int32", shape = (12, 8, 15))#candidate|3579|(12, 8, 15)|var|int32
var_3580 = relay.var("var_3580", dtype = "int32", shape = (12, 8, 15))#candidate|3580|(12, 8, 15)|var|int32
output = func_3578(var_3579,var_3580,)
func_3581 = relay.Function([var_3579,var_3580,], output)
mutated_mod['func_3581'] = func_3581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3523_call = mod.get_global_var('func_3523')
func_3525_call = mutated_mod.get_global_var('func_3525')
call_3627 = func_3523_call()
call_3628 = func_3523_call()
const_3642 = relay.const([[[-8.921682,-4.614203,-5.047510,6.360327,-6.817558,3.071574,-9.236355,-7.007374,9.614874,-4.071458,-6.260332],[4.951179,-0.243437,-3.700881,-7.906563,7.197947,-1.611060,2.527094,-5.044715,-8.058300,6.824853,-8.664494],[-7.914395,8.704163,-2.371594,6.363800,-7.717421,-4.385479,3.488894,6.123976,-9.678151,-2.178899,-3.720706],[-1.704766,0.479871,-0.501312,-9.151639,-5.744162,2.840079,-0.431819,-9.533139,-5.597489,0.546279,8.170403],[0.323642,-3.370077,0.551157,-0.603437,3.123494,9.168519,4.329427,5.543212,-6.300365,-4.974347,8.128368],[8.849653,0.168360,6.012122,-8.509105,1.141842,8.846662,-1.103417,4.012370,-7.609543,3.962776,1.067370],[7.364888,-5.810046,-1.446253,4.158355,-1.575731,8.078106,-8.649045,-2.628802,5.304918,-3.348147,2.465435],[-2.378503,-3.275844,1.583523,-1.627561,-2.361516,-6.765270,2.849705,-9.918462,-1.393010,6.391203,-6.013877],[-9.721356,6.497315,-9.425038,-1.505890,-0.606927,-6.975018,-1.327452,-7.226767,-7.227328,-8.225861,0.351667]],[[-1.642826,4.503221,-8.303064,-2.785193,-1.195345,3.192763,3.189440,-1.583249,-7.212273,-5.164106,7.329275],[-7.508560,5.845175,-0.838899,8.881178,1.133363,4.479318,4.259225,5.815950,-5.481077,-6.887891,7.165551],[-5.997090,-8.909627,-9.821963,6.240307,0.709205,1.856035,6.334625,-0.590707,-1.703454,-6.997101,-5.316530],[3.360854,1.263436,-1.872450,-5.988181,6.833920,0.531697,2.204577,-1.257559,8.929951,-7.921690,-1.920943],[-3.353441,4.612773,-0.146801,7.491223,1.939725,2.217348,-9.871171,-6.756881,3.536555,8.269759,3.394302],[4.209580,-8.780344,3.510199,4.299624,-7.377700,0.920560,-5.806629,2.790857,-3.177130,1.146918,6.875613],[4.614020,-3.801368,-3.810959,5.771422,-3.039057,5.974825,3.229498,5.788935,9.396544,2.934715,3.820823],[-4.295775,8.046640,9.927083,-6.410336,-8.454868,8.970188,6.656368,0.731601,9.055463,9.865297,-9.678193],[-6.811186,2.489960,1.628303,-5.006061,7.818454,8.478162,8.121879,0.884038,7.088882,-8.016071,-6.140422]],[[-5.719032,-4.016029,8.213698,1.699577,1.531518,7.481059,0.673535,0.813953,-3.633277,-3.490044,6.996484],[-1.510452,-5.755728,-6.022564,-8.593774,-2.927555,-0.946434,2.377551,-7.535578,7.225832,-4.469169,-2.194203],[2.168560,0.709824,-4.567870,6.637152,1.019141,-0.318132,-1.671531,-0.051481,0.347147,8.409626,-2.930372],[5.173567,7.999465,-0.630021,-8.541367,6.895802,-9.291744,3.785991,8.117242,-5.801242,-1.152082,-2.156613],[0.033260,-7.523454,6.702830,4.169408,-2.170001,-0.196821,5.635649,8.701479,6.261835,-8.252023,7.691263],[6.532407,-9.987378,7.589887,-1.018596,4.396589,1.306579,3.674481,-3.893146,-6.498948,0.521346,-9.135603],[8.251987,-6.228919,2.965468,-9.168258,-9.085237,2.284342,9.646480,-9.685457,-6.227912,2.237298,7.827978],[-6.999094,6.243753,-6.259993,9.076666,-8.974788,-3.244325,8.592839,5.129092,-8.718523,0.608752,-0.265155],[-2.116129,4.671935,1.760471,-4.830571,0.446071,-5.901708,5.384405,4.905529,0.368123,6.752665,5.356559]],[[5.112394,-2.539796,-7.062410,4.527393,-2.506803,9.387903,-0.282520,9.142940,6.184845,8.682411,1.343180],[-8.673138,0.526064,-6.672019,5.076234,-6.061225,-2.028645,-7.185853,-2.421298,-7.315072,-4.000439,-0.735037],[-5.787124,6.815362,-5.012765,4.810176,-5.448195,2.647823,1.346091,-9.418344,9.733493,-9.883318,-6.357295],[-8.986082,-1.367388,8.929906,8.005474,-9.791313,2.529560,4.161576,-6.141194,-6.606671,3.857794,7.711977],[6.077603,1.512752,-9.951287,9.073252,3.160524,0.363145,-8.551917,-9.588137,9.417607,5.064446,-8.662788],[-5.992307,0.425993,6.337664,-5.922665,9.322843,3.960728,-6.449122,-8.609924,-4.485352,-6.232756,-0.561918],[-0.476642,-5.158862,4.973831,4.930428,-3.355314,-1.676829,-4.361400,-5.791256,-8.435455,-5.292446,7.537458],[7.055030,-2.585094,9.147822,-4.640792,7.878454,-1.076980,-8.978282,0.126375,8.430777,3.397386,5.863581],[-0.767413,1.988290,-9.420365,-6.356118,-7.042980,3.180740,8.875853,8.394760,-9.658406,-6.565758,-3.920263]],[[-5.388877,-2.858688,-6.514334,-7.769581,8.383530,4.400678,1.955988,3.479147,3.456421,-7.698729,-9.914066],[3.753763,9.115375,5.833678,-5.940806,-4.014115,3.430143,8.217259,-0.694380,-7.812367,-1.931681,-7.869029],[5.879727,4.009178,-4.632218,2.715322,2.395294,-4.889274,3.479760,-4.703226,-5.480428,-4.182371,-3.350862],[6.520322,6.295221,-5.500264,3.851271,-2.458276,-3.583800,-7.713986,5.857674,-3.599057,-0.823057,9.101823],[-1.947055,-8.364041,-6.119629,-5.522684,-3.467041,1.104833,8.175519,7.810684,9.154070,6.854670,1.335390],[-2.054413,-7.769439,6.124213,0.538207,-1.877321,-1.519587,-2.546831,5.773523,5.300627,-7.582500,-2.964382],[6.187252,0.256619,2.506001,-7.431886,-0.878501,1.399170,9.855173,7.932036,3.353175,-7.795655,-5.515948],[-8.516835,-7.105867,1.591266,-3.982860,-6.713090,3.114670,-8.586640,6.975483,3.216112,8.027842,-3.156080],[5.338196,-0.896283,0.466633,8.052171,3.750675,5.711333,8.434204,9.015087,-7.204216,1.255528,0.646491]],[[-9.540486,5.859427,-8.200483,-6.027670,5.766832,-3.354383,-2.974367,5.965447,-3.868720,4.241642,-5.690427],[-1.101582,0.680867,7.574662,2.509286,-9.173301,4.167713,1.712431,6.935555,-0.319939,-2.412133,-9.491767],[-1.074737,-1.821477,-5.001450,1.406972,-3.843975,-5.858860,-8.118467,9.119645,-7.506844,-7.795644,8.842183],[8.533738,9.807860,2.119679,4.037001,0.100653,9.985434,-1.329393,8.869514,-0.936864,6.683059,5.787394],[8.187967,1.218793,3.205676,5.161745,-7.859961,9.561322,8.950551,2.663137,-5.360067,-7.079555,-5.514407],[3.385639,-3.819301,8.358232,1.199814,-2.953794,9.924937,-8.845759,4.190321,6.356314,7.741106,1.273894],[-9.049879,9.801214,6.118761,-1.336736,-3.521130,-1.814448,-0.576407,-9.297081,-5.913832,-8.063840,4.059877],[-1.557153,-4.231393,-2.509616,-8.687040,-4.993896,-0.825495,2.378929,-5.389946,8.921044,-5.118107,4.561010],[7.090540,-4.080433,-1.084055,-4.120071,1.086399,-4.691386,-8.171261,4.530699,3.919172,6.243677,9.381355]]], dtype = "float32")#candidate|3642|(6, 9, 11)|const|float32
bop_3643 = relay.logical_or(call_3627.astype('bool'), relay.reshape(const_3642.astype('bool'), relay.shape_of(call_3627))) # shape=(6, 9, 11)
bop_3646 = relay.logical_or(call_3628.astype('bool'), relay.reshape(const_3642.astype('bool'), relay.shape_of(call_3628))) # shape=(6, 9, 11)
uop_3652 = relay.log2(call_3627.astype('float64')) # shape=(6, 9, 11)
uop_3654 = relay.log2(call_3628.astype('float64')) # shape=(6, 9, 11)
func_3523_call = mod.get_global_var('func_3523')
func_3525_call = mutated_mod.get_global_var('func_3525')
call_3664 = func_3523_call()
call_3665 = func_3523_call()
output = relay.Tuple([bop_3643,uop_3652,call_3664,])
output2 = relay.Tuple([bop_3646,uop_3654,call_3665,])
func_3666 = relay.Function([], output)
mod['func_3666'] = func_3666
mod = relay.transform.InferType()(mod)
output = func_3666()
func_3667 = relay.Function([], output)
mutated_mod['func_3667'] = func_3667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3666_call = mod.get_global_var('func_3666')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_3700 = relay.TupleGetItem(func_3666_call(), 2)
call_3701 = relay.TupleGetItem(func_3667_call(), 2)
func_3523_call = mod.get_global_var('func_3523')
func_3525_call = mutated_mod.get_global_var('func_3525')
call_3708 = func_3523_call()
call_3709 = func_3523_call()
uop_3715 = relay.cos(call_3700.astype('float64')) # shape=(6, 9, 11)
uop_3717 = relay.cos(call_3701.astype('float64')) # shape=(6, 9, 11)
func_3578_call = mod.get_global_var('func_3578')
func_3581_call = mutated_mod.get_global_var('func_3581')
const_3721 = relay.const([[3,-3,-8,-3,-8,8,8,5],[3,-6,6,-8,3,6,-5,-3],[6,3,-9,-7,-9,8,-3,1],[5,-4,9,3,1,-6,-4,7],[4,-3,6,9,-5,5,10,-7],[-5,5,-4,-6,8,3,10,3],[10,9,8,-3,9,-2,-6,-5],[9,-5,-6,7,-4,7,2,1],[6,8,-10,-8,9,-7,8,-7],[1,1,4,3,-10,-5,-8,4],[6,9,-3,6,-6,8,-6,2],[-7,-7,1,-3,10,-5,4,-4],[1,8,-10,-9,-1,10,-4,-7],[3,3,1,9,4,10,3,-8],[-9,2,5,6,10,3,6,6],[3,-5,7,-8,10,-9,-3,-1],[7,2,5,-8,-3,1,-1,1],[6,10,2,4,-7,-6,4,-3],[-1,3,-4,-2,-1,6,-10,10],[5,-9,8,-8,10,5,1,5],[4,9,8,-5,-6,5,-10,-2],[-2,1,-6,-5,4,2,-10,9],[-4,2,-10,5,1,-2,2,7],[6,-6,-8,-1,-4,10,-10,6],[7,-8,-8,-5,-2,10,-2,9],[-5,-10,-9,7,-6,5,-6,-1],[-10,2,-3,-7,-3,-8,5,2],[-4,5,7,-5,7,-8,3,-5],[-10,3,3,8,-8,-2,-6,5],[7,5,9,7,-2,-10,6,-9],[2,10,5,-3,6,8,-10,-4],[-2,-10,-9,-9,-4,7,6,-6],[10,-6,-4,8,6,4,8,2],[-8,-10,-1,-9,10,5,-2,6],[5,-6,3,-10,1,-3,-3,8],[-7,-8,9,-5,3,-5,-1,8],[-5,6,10,6,-10,-2,-4,-4],[-1,3,-2,-1,6,-10,8,-4],[4,-2,-6,10,7,-10,-4,-6],[-9,-7,7,7,-5,-10,-7,-6],[4,5,-6,7,9,-6,4,-10],[-3,5,4,-3,9,1,-10,4],[7,-4,-8,-8,-8,8,10,-4],[-4,1,9,8,-7,-3,-8,-1],[-10,-9,5,3,-4,5,8,7],[8,-1,-1,-4,-8,7,4,2],[-2,10,10,3,4,-10,-9,4],[6,-4,-4,7,-5,-7,-4,-3],[-2,6,-6,-8,8,3,-6,3],[-4,-8,5,-10,2,7,6,2],[3,-10,6,-9,7,-10,-3,-2],[1,-7,7,-7,7,-5,-4,-1],[-5,-7,-10,-5,-2,-9,-9,-4],[-2,7,10,-8,-7,-2,-10,-1],[-5,-3,-7,-1,5,-6,10,7],[2,-1,7,1,-2,7,5,4],[8,-4,-8,-4,4,9,9,-6],[-9,5,-8,-10,-7,-4,-6,-2],[-10,9,-3,10,2,-3,-5,-4],[-10,8,5,-10,-6,-7,-5,-7],[7,-10,9,-10,-1,-4,6,9],[-8,3,7,-6,-8,-5,1,-5],[-8,-1,-6,7,-5,-4,-8,-6],[9,10,1,-9,10,-1,8,1],[10,10,-2,3,-10,10,-9,-6],[6,-4,-3,-7,9,-4,-3,-2],[7,-8,10,10,-8,8,9,-8],[10,-3,7,6,9,2,4,-4],[5,-2,3,5,-4,-1,-6,7],[2,-9,-1,6,4,3,-3,1],[-7,5,6,-5,4,3,-6,-6],[-2,1,9,-5,-7,-10,-5,10],[-5,4,-4,4,-5,-8,9,3],[-10,-5,2,-1,-10,9,6,-7],[-4,-4,10,-8,5,9,-1,-3],[5,-9,2,7,-3,-7,-8,9],[5,-2,-9,3,-6,8,-5,8],[1,-8,-7,6,3,-8,6,-3],[-1,8,-7,6,3,3,-4,-9],[-8,1,2,-5,9,-6,-1,7],[-5,-3,-8,-8,-10,-1,3,3],[-9,-7,10,-5,-7,3,1,-9],[-7,-1,-1,5,1,8,-8,-3],[7,-7,4,-5,5,7,10,-4],[-10,1,3,5,-4,8,-5,-8],[-1,-9,-6,-3,6,7,-10,4],[-4,-3,3,-3,-2,8,1,10],[-10,6,5,7,3,-7,2,7],[6,-5,8,5,-8,-7,-8,3],[-8,-4,-2,4,4,10,-3,-4],[-7,-10,-8,4,8,6,-8,6],[8,9,-10,5,4,-9,-2,-10],[3,-3,4,8,-9,-10,3,-3],[5,-1,2,-8,-1,5,-2,-4],[4,-6,7,10,8,2,-5,10],[-4,-4,7,5,1,-3,5,-7],[-5,7,5,-7,-7,-4,-2,2],[-5,4,-8,-10,-1,3,-10,-6],[3,8,-9,3,-2,8,-9,-3],[7,-6,8,-6,-9,-6,-9,-6],[4,-2,-7,-2,-10,-4,-1,5],[6,-4,9,5,1,7,-2,4],[-6,-2,1,-3,-4,-2,-6,2],[-8,6,8,-5,3,-1,-8,-4],[1,-7,-9,3,-9,-8,-2,7],[-9,-9,-4,-6,-10,-3,-9,-1],[2,3,10,5,-1,-2,-5,2],[2,1,-8,5,1,4,-7,-2],[-5,-2,-3,2,-2,-8,5,-1],[1,-5,6,-7,-1,8,-8,-9],[-9,9,8,7,-8,-6,-5,10],[-8,7,6,-2,-6,5,5,6],[2,6,-9,-3,8,-9,-8,-10],[-3,-2,-10,-4,-9,10,-2,7],[-4,-6,-8,9,8,-8,5,5],[-5,-7,-3,1,9,-5,-10,6],[7,-8,-3,-2,2,-9,8,-5],[1,9,-4,-6,-4,5,-3,-1],[-3,7,3,-6,9,-2,-9,1],[-10,4,3,-6,-10,4,-9,4],[-3,7,10,2,9,6,2,8],[8,-5,-1,-9,-9,-4,9,2],[9,-9,-5,8,-5,-3,-2,9],[4,-2,-5,6,7,6,-8,-7],[10,-7,6,-8,-10,2,-4,3],[-6,-5,-9,5,-10,1,1,-8],[5,-3,-3,-4,6,6,-8,9],[7,3,4,-9,10,6,-7,2],[2,-2,8,9,-3,-5,-7,5],[8,-7,7,-1,-7,10,-3,-7],[-8,9,9,2,-6,-5,3,6],[-7,8,-2,-4,-5,-6,-5,-3],[-4,-8,2,-6,-9,3,2,-5],[-4,-4,-9,-7,3,3,6,10],[8,-4,-2,-1,3,2,5,6],[-8,8,-1,4,-8,-1,-2,-6],[-2,3,5,4,-1,-3,4,8],[10,-3,-10,-4,-5,5,-7,-10],[-5,1,-10,-8,-1,-7,-2,1],[8,-4,1,9,2,-5,-4,6],[-7,-9,-3,-8,-8,1,10,2],[6,-6,-4,4,8,-5,-4,4],[-9,10,10,8,3,-9,-1,-10],[-9,-5,3,8,-1,-6,5,6],[-4,8,4,-3,-3,-9,5,3],[-8,-6,-2,-4,9,-5,1,8],[6,9,-2,-7,7,3,-5,-6],[7,-6,8,9,10,-10,7,-6],[6,5,8,-4,7,-6,4,-7],[-6,1,3,-1,-5,-5,1,-5],[5,-8,1,-9,-9,-1,9,-7],[3,10,7,-10,-4,-3,6,-3],[-8,-3,3,7,7,9,8,-2],[2,-8,5,1,4,-4,4,1],[-10,-2,8,-9,9,-2,1,-9],[-6,-2,-6,-10,-7,-3,4,4],[10,-9,5,-3,3,1,-9,-9],[-9,6,5,10,-10,4,6,-6],[-4,-3,2,-5,-1,-8,-9,5],[-9,-5,-7,-8,-7,1,-2,8],[-3,-7,10,7,-10,-4,-6,-9],[10,-1,9,5,4,9,-2,-2],[-1,7,2,-3,-3,-1,5,-5],[-6,-3,-8,2,4,-7,-10,1],[-9,3,6,-6,-2,-7,-9,-4],[-9,-1,-7,6,-6,-10,-4,-8],[-1,8,8,4,3,8,4,-8],[-9,7,-3,9,-7,-6,10,-6],[8,8,-6,-5,-6,2,5,2],[-10,-1,-1,10,9,-9,-1,-10],[8,4,-2,4,4,-9,-5,-4],[-7,8,3,-8,-6,-1,-3,-8],[3,-5,-3,-5,7,5,-3,7],[-3,-10,2,1,8,-7,-5,1],[6,-2,-7,3,1,5,8,3],[-6,-10,-4,6,-2,-2,7,6],[-1,10,7,1,-5,1,-10,-5],[-9,7,-3,-5,6,-6,3,6],[-4,2,-2,-9,-1,8,-7,10],[-7,1,-9,-9,-6,-10,8,-2]], dtype = "int32")#candidate|3721|(180, 8)|const|int32
call_3720 = relay.TupleGetItem(func_3578_call(relay.reshape(const_3721.astype('int32'), [12, 8, 15]), relay.reshape(const_3721.astype('int32'), [12, 8, 15]), ), 2)
call_3722 = relay.TupleGetItem(func_3581_call(relay.reshape(const_3721.astype('int32'), [12, 8, 15]), relay.reshape(const_3721.astype('int32'), [12, 8, 15]), ), 2)
bop_3725 = relay.multiply(uop_3715.astype('float64'), relay.reshape(call_3708.astype('float64'), relay.shape_of(uop_3715))) # shape=(6, 9, 11)
bop_3728 = relay.multiply(uop_3717.astype('float64'), relay.reshape(call_3709.astype('float64'), relay.shape_of(uop_3717))) # shape=(6, 9, 11)
func_1898_call = mod.get_global_var('func_1898')
func_1901_call = mutated_mod.get_global_var('func_1901')
const_3735 = relay.const([[-9.237654,5.437602,-6.520120],[6.434153,4.284030,-2.350640],[-6.455995,2.475646,1.374153],[5.172137,4.703075,-9.142857],[-1.077495,-4.658130,3.906827],[3.747777,-2.850403,1.101360],[4.616225,-0.872587,2.454365],[1.097217,-7.413254,6.560669],[-5.395562,-9.888308,1.134329],[7.098752,7.934510,-9.761742],[-7.886320,-0.232950,0.962558],[8.959210,-3.237317,3.323683],[5.756860,1.705476,1.652072],[2.140162,9.925241,6.907446],[-4.200296,1.511831,-8.527030],[5.066321,2.396783,4.962164],[0.189869,0.569686,-4.953667],[2.176979,4.131128,-0.316662],[6.378663,-6.020584,9.956345],[2.907609,-9.322985,3.434813],[7.032780,-0.971641,-4.075956],[4.087848,-8.343636,6.418884],[2.842417,-9.728395,-4.664423],[5.660364,6.172612,-3.665714],[2.117371,-4.165089,-2.335318],[-2.078757,-3.999021,-8.452430],[-3.906609,8.906502,-7.479859],[-4.849563,7.233052,8.540917],[8.971165,-1.628849,-0.316821],[8.333337,-4.131522,-5.703742],[-0.334749,-7.597249,9.321719],[5.534869,-5.521124,-1.157457],[-2.728776,-5.563142,-7.919810],[9.441443,-2.961328,-9.529172],[-1.023607,-6.432210,9.934411],[-5.087662,4.295613,2.463237],[4.527795,0.982881,3.294175],[9.026364,-1.367855,8.792715],[8.777003,-0.078355,-9.322449],[-7.889417,-4.396525,-9.035256],[6.496774,0.717834,4.000982],[7.914765,-4.340057,7.138600],[6.866413,4.766384,-4.215769],[-4.265901,2.955210,-3.357407],[6.020570,-1.441316,7.672143],[6.949274,2.938852,-3.149310],[7.756229,-8.153705,-6.622536],[6.252201,-4.588877,9.381399],[-7.770831,-0.729749,-5.996852],[1.480854,0.398217,5.995893],[-7.586135,-2.275110,-8.676551],[2.376895,-1.976834,2.724620],[8.388743,-0.775606,9.719585],[-9.310197,4.135653,7.844164],[4.606493,1.304050,-4.477854],[-9.250542,-7.359047,9.398343],[1.344063,-8.917933,-9.433881],[-7.184125,5.492053,4.533005],[-9.086522,-6.243017,-4.590572],[5.954747,-8.816686,-2.337547],[1.805003,-3.279115,7.617828],[-0.221350,-7.736649,7.122489],[-5.967184,-8.713673,-7.898386],[-3.865266,2.564197,4.992050],[-5.764012,-5.797900,0.682682],[-1.361275,6.921366,-4.395200],[-6.391002,5.278951,-7.566149],[8.199734,-5.322187,-0.326380],[9.656108,0.327109,1.354490],[-4.330674,4.081848,-6.206534],[8.333531,2.519224,0.314971],[-4.828866,6.274191,-5.747388],[-5.698327,-8.763941,1.101465],[8.216798,-1.968712,-6.006620],[2.443597,6.423486,7.457386],[-2.046100,-3.788417,0.310783],[8.385178,3.451074,6.710377],[-2.425777,9.594981,-4.323158],[2.406915,9.115778,-0.979435],[3.585266,-9.058425,-4.154832],[1.638886,1.802730,-0.349263],[1.105391,-7.764132,-3.253933],[1.899665,6.037297,-6.835440],[7.431134,4.447227,5.785154],[-9.034675,-2.741140,3.020748],[-2.397070,4.556113,5.195071],[-4.367172,6.092560,5.512724],[-9.923845,9.385003,-1.734730],[6.822201,0.540591,-1.899378],[-3.842798,-3.261892,-7.458090],[5.486956,-0.513265,-4.031633],[1.356440,-9.332369,5.648213],[-1.538120,-3.578309,3.400126],[5.743595,2.667919,1.048117],[9.011424,-1.341123,-6.758916],[-6.781561,-1.314152,-8.646453],[-4.237605,7.180247,2.804568],[-2.065169,8.928322,5.152575],[6.301574,8.154359,9.668433],[1.433454,1.435583,-5.257299],[-7.636989,2.212979,7.950319],[9.064919,4.456001,9.474098],[2.617919,8.906074,-8.403975],[4.737166,9.722303,-6.407482],[0.665395,-5.452463,-5.189141],[0.908975,5.724311,8.517387],[-0.627015,-9.295581,1.744122],[-7.433315,5.937689,8.091070],[-9.815322,-4.598029,-2.486645],[9.159237,-9.295420,-4.429182],[-1.868753,0.085444,-0.693018],[7.149185,6.973713,8.861933],[3.556752,8.320063,3.135441],[-7.286937,5.296854,0.035633],[-2.025854,7.210540,-9.352424],[2.683328,3.804929,-3.279391],[9.082900,9.504354,6.553605],[2.238924,-2.847287,-5.799839],[-7.145589,-1.651206,8.872593],[7.902562,-6.810692,-8.909706],[-2.407914,4.437987,-9.191164],[9.258453,9.271905,-7.977321],[6.603025,6.376350,-3.177590],[4.625913,3.618899,-8.586634],[-8.571321,-2.812850,-9.819869],[1.826601,-5.477648,0.490491],[2.738256,-1.946347,1.283323],[0.246211,-3.290291,-0.042570],[-4.938562,3.704472,6.835575],[-8.063284,3.654368,-5.879073],[5.667695,-6.280017,2.449423],[-7.699787,1.076901,1.334417],[6.700945,1.460559,-0.449100],[-5.697447,-8.169623,-0.603498],[2.172318,7.746746,1.021006],[6.379147,8.501091,-3.281295],[0.522921,8.374834,3.507400],[8.473761,-3.150118,-4.006821],[-8.516711,8.358167,6.909640],[8.871981,0.841794,7.602199],[-1.806945,2.760203,4.231698],[-6.110239,5.265422,4.423301],[7.306440,9.221785,5.979898],[-7.794319,8.530958,-4.387570],[0.290257,8.584817,-0.949841],[4.270652,6.584346,5.293167],[-6.023548,1.003587,9.431140],[-5.323400,5.637499,-6.305997],[5.061294,4.255380,9.898603],[4.068016,7.520418,3.705603],[-3.374898,-5.903600,5.903725],[-7.970234,-8.569586,3.718221],[-4.151551,-6.106680,-3.873193],[-0.653013,3.332049,-7.114804],[-0.563074,0.634176,-3.172596],[6.320739,9.598613,9.664186],[6.892092,-3.756890,0.425048],[-1.449032,7.087252,-2.099286],[5.271826,6.109194,-3.196928],[0.094466,-1.586140,-0.872339],[3.262666,3.891886,2.047055],[-3.625940,-7.568733,-9.633996],[-7.950643,9.536534,2.623585],[1.090716,-0.615597,9.807209],[-5.124922,0.714417,9.404483]], dtype = "float64")#candidate|3735|(165, 3)|const|float64
call_3734 = relay.TupleGetItem(func_1898_call(relay.reshape(const_3735.astype('float64'), [11, 3, 15])), 0)
call_3736 = relay.TupleGetItem(func_1901_call(relay.reshape(const_3735.astype('float64'), [11, 3, 15])), 0)
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
call_3737 = relay.TupleGetItem(func_2890_call(relay.reshape(call_3720.astype('int32'), [28, 4])), 0)
call_3738 = relay.TupleGetItem(func_2892_call(relay.reshape(call_3720.astype('int32'), [28, 4])), 0)
func_1427_call = mod.get_global_var('func_1427')
func_1429_call = mutated_mod.get_global_var('func_1429')
const_3740 = relay.const([9.349300,-1.561198,7.366887,-1.944977,-4.724859,-6.967929,8.572642,2.731106,-8.783977,-2.660432,-7.622829,4.837318,3.288338,3.115234,2.973553,-0.390576,-5.513421,-8.202282,-4.293890,3.397035,0.908768,6.885890,-5.816968,-6.575931,3.774685,3.252711,0.251805,4.333595,9.581946,-2.416382,-4.280091,2.346181,7.911868,-0.157418,5.478264,-5.083283,6.148474,7.986488,-1.500474,-4.833043,-4.175361,7.700699,-6.123591,5.959962,-9.824915,-7.096601,-4.187297,0.160498,-6.141134,8.813169,8.976099,-1.633355,2.187547,1.799876,2.262077,-5.870575,4.645723,7.515157,-3.399357,7.247158,-4.044667,3.700973,-7.207042,-0.040306,0.779787,-9.536581,-0.372018,3.307398,-0.652049,6.387604,4.880247,-8.756126,-1.487966,-1.924484,-2.473053,9.131451,-7.860905,0.795697,0.852889,7.702797], dtype = "float64")#candidate|3740|(80,)|const|float64
call_3739 = relay.TupleGetItem(func_1427_call(relay.reshape(const_3740.astype('float64'), [16, 1, 5])), 0)
call_3741 = relay.TupleGetItem(func_1429_call(relay.reshape(const_3740.astype('float64'), [16, 1, 5])), 0)
var_3742 = relay.var("var_3742", dtype = "float64", shape = (6, 9, 11))#candidate|3742|(6, 9, 11)|var|float64
bop_3743 = relay.mod(bop_3725.astype('float64'), relay.reshape(var_3742.astype('float64'), relay.shape_of(bop_3725))) # shape=(6, 9, 11)
bop_3746 = relay.mod(bop_3728.astype('float64'), relay.reshape(var_3742.astype('float64'), relay.shape_of(bop_3728))) # shape=(6, 9, 11)
func_1554_call = mod.get_global_var('func_1554')
func_1558_call = mutated_mod.get_global_var('func_1558')
const_3749 = relay.const([-2,8,8,5,-8,-6,-9,6,-10,8,7,-5,-9,-1,-2,2,-1,-7,2,4,9,4,4,-10,10,-10,8,-9,-8,1,-5,8,-7,-7,-5,8,3,-1,-3,1,1,-2,7,-7,2,-7,-2,2,-7,8,-10,-5,-10,1,-9,7,-4,-8,-10,5,2,-6,-6,4,7,-7,-10,-3,-1,4,-7,-8,9,3,1,-9,2,7,-6,-3,-5,-2,-3,7,-9,3,-1,-10,-7,10,-1,-10,6,2,10,-5,-6,-10,-5,-4,-8,-2,-8,-9,-5,4,8,10,-3,4,-10,8,9,6,7,-8,-6,3,-3,2,9,-4,10,-9,-8,6,-5,3,-4,-7,10,-7,-8,-2,-1,8,10,9,8,5,-2,-2,-7,2,-4,4,8,2,-2,-6,-9,-4,-8,1,10,2,8,10,10,1,-5,-10,8,9,-6,-2,-1,6,-1,7,-10,5,4,-5,1,2,1,-7,4,7,-10,9,-7,-1,9,-10,-7,-8,2,7,9,7,1,-9,1,9,8,5,10,-6,3,9,-10,-3,2,6,-1,-3,9,9,9,5,7,-3,-5,-7,4,10,-5,-8,5,10,9,8,5,-1,-7,-2,-4,1,-5,-8,6,-4,-1,8,8,-1,1,-6,9,1,-2,10,9,7,-2,4,5,1,-2,-3,8,1,3,6,-5,-10,1,6,3,-5,-8,-5,8,-8,-4,3,5,1,-1,2,5,6,-1,-7,6,9,4,-7,-9,-3,8,-5,1,-2,5,2,-5,-6,-1,-1,9,-10,-6,-5,6,8,-5,-6,10,-1,-4,-3,-3,5,5,2,-8,7,1,-8,10,-10,10,-3,6,3,9,8,8,8,1,-7,2,4,-6,10,-10,-10,6,1,9,9,4,10,3,5,-7,5,-6,3,-1,7,3,2,-3,9,-6,2,10,-2,-1,6,-7,5,8,-7,-1,10,4,-3,-4,-2,3,-10,5,5,-9,4,-2,1,-9,10,-3,-3,-2,-7,-9,7,-3,6,-1,6,1,-5,-10,-4,-5,8,5,-8,-8,-3,5,8,9,8,4,-7,5,-6,8,-4,4,-2,3,-8,-4,7,-5,7,-8,3,10,-7,-3,2,4,-6,-7,-9,-8,-1,-10,-4,-5,6,-8,7,10,-3,-6,-6,-10,-9,3,-9,-5,-5,-1,9,-2,1,-5,-9,10,-9,8,9,8,-7,7,1,-10,-8,-7,-9,3,2,6,-2,3,7,7,-1,5,5,4,8,6,7,3,4,-3,4,8,-8,-9,4,10,-10,-1,-10,5,-1,4,-4,-1,2,7,-5,-4,-5,9,-9,-3,5,6,-1,5,-1,9,5,4,-7,-7,-5,7,-4,-9,5,-3,-6,-8,-3,-10,-2,-10,10,-8,6,-1,-6,10,3,4,1,-10,10,5,-3,-8,3,-5,1,-2,-9,-7,-1,7,-8,4,2,-6,2,-6,6,1,1,4,9,10,-1,3,5,6,2,-3,-3,-9,-2,-1,10,-10,8,-2,2,-5,10,-4,7,-10,-1,-5,6,1,-8,8,6,8,2,1,3,-8,3,2,4,-10,7,-1,-9,2,-5,-7,8,7,7,-5,-3,5,-5,-5,-1,5,-2,2,9,1,4,-6,-3,-2,10,-1,10,-8,-3,5,-10,1,-7,5,6,-9,-6,-3,-8,9,2,-9,-6,-9,-2,2,-5,5,-9,-7,8,5,2,3,3,-8,-10,7,-5,-6,1,10,2,-9,8,5,-5,-10,-10,-7,-2,10,-3,9,-5,5,-2,5,2,6,1,6,4,3,10,1,-8,-6,-9,-8,-2,4,8,10,3,-10,9,-2,-3,-1,8,4,2,-4,-7,-7,5,-4,1,5,-2,-8,-10,-6,-7,3,-8,9,9,2,8,-6,1,8,-4,5,5,-8,6,-7,4,6,8,-1,1,-2,5,1,-8,7,9,9,-7,-8,-5,-4,6,-1,5,1,7,4,3,-7,2,4,-6,-7,2,-4,2,-5,9,-3,10,-2,-9,-9,10,3,10,5,-2,8,8,2,1,-8,-7,-5,-7,6,-1,-8,2,5,1,-9,10,9,-9,-8,2,1,9,6,2,1,6,-4,-3,10,9,-8,-7,7,-10,8,-10,-3,4,-4,1,8,5,8,3,1,-9,10,-6,2,9,1,-9,-8,-4,-7,-6,-4,1,8,-10,-5,-7,-5,-10,-2,8,-10,-8,10,-1,-6,-6,-9,-2,10,-5,1,1,-7,-2,2,2,7,-10,-1,5,-9,10,5,-4,-4,-1,-1,10,3,-6,-3,9,-8,8,2,-9,-4,1,-10,6,4,-8,10,-4,3,-8,-10,-8,-5,-10,-10,10,-7,-3,7,-1,-7,-7,-9,7,-3,-8,-1,-3,-3,-5,-1,6,7,-7,9,5,-6,-10,-5,5,-4,-3,9,3,-9,6,-7,-2,-4,-7,4,10,6,3,8,1,2,9,10,-5,4,10,6,4,-8,4,4,-2,-5,-4,-6,7,9,-7,-9,7,-4,5,-7,-1,-3,-9,-10,-9,-9,-9,8,-10,3,-3,2,8,-6,-7,3,2,-2,2,5,8,-6,8,3,8,-7,-8,2,-4,-10,-5,-6,8,-9,1,-4,7,-6,-4,3,2,-5,-9,-8,-9,-6,3,3,-2,-4,8,2,9,-10,-6,5,5,10,-8,8,1,4,-8,5,-3,2,8,7,-3,-10,-2,-7,-6,-2,7,4,6,2,-8,1,-6,1,9,3,6,9,10,-4,4,5,-8,9,-8,5,10,7,10], dtype = "uint16")#candidate|3749|(1040,)|const|uint16
call_3748 = func_1554_call(relay.reshape(const_3749.astype('uint16'), [16, 5, 13]), relay.reshape(const_3749.astype('uint16'), [16, 5, 13]), )
call_3750 = func_1554_call(relay.reshape(const_3749.astype('uint16'), [16, 5, 13]), relay.reshape(const_3749.astype('uint16'), [16, 5, 13]), )
output = relay.Tuple([call_3720,const_3721,call_3734,const_3735,call_3737,call_3739,const_3740,bop_3743,call_3748,const_3749,])
output2 = relay.Tuple([call_3722,const_3721,call_3736,const_3735,call_3738,call_3741,const_3740,bop_3746,call_3750,const_3749,])
func_3771 = relay.Function([var_3742,], output)
mod['func_3771'] = func_3771
mod = relay.transform.InferType()(mod)
var_3772 = relay.var("var_3772", dtype = "float64", shape = (6, 9, 11))#candidate|3772|(6, 9, 11)|var|float64
output = func_3771(var_3772)
func_3773 = relay.Function([var_3772], output)
mutated_mod['func_3773'] = func_3773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3666_call = mod.get_global_var('func_3666')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_3840 = relay.TupleGetItem(func_3666_call(), 1)
call_3841 = relay.TupleGetItem(func_3667_call(), 1)
output = relay.Tuple([call_3840,])
output2 = relay.Tuple([call_3841,])
func_3842 = relay.Function([], output)
mod['func_3842'] = func_3842
mod = relay.transform.InferType()(mod)
output = func_3842()
func_3843 = relay.Function([], output)
mutated_mod['func_3843'] = func_3843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3523_call = mod.get_global_var('func_3523')
func_3525_call = mutated_mod.get_global_var('func_3525')
call_3973 = func_3523_call()
call_3974 = func_3523_call()
var_3980 = relay.var("var_3980", dtype = "float32", shape = (6, 9, 11))#candidate|3980|(6, 9, 11)|var|float32
bop_3981 = relay.floor_mod(call_3973.astype('float64'), relay.reshape(var_3980.astype('float64'), relay.shape_of(call_3973))) # shape=(6, 9, 11)
bop_3984 = relay.floor_mod(call_3974.astype('float64'), relay.reshape(var_3980.astype('float64'), relay.shape_of(call_3974))) # shape=(6, 9, 11)
func_2540_call = mod.get_global_var('func_2540')
func_2544_call = mutated_mod.get_global_var('func_2544')
const_3995 = relay.const([[2,-7,-6,10],[4,-2,2,9],[-6,2,10,3],[-9,-9,-2,8],[-4,6,1,-4],[6,5,-1,-7],[1,-5,9,-9],[8,-7,-6,6],[-9,1,-10,3],[2,2,-4,-10],[-10,8,-3,-8],[-4,1,10,-9],[10,7,5,-6],[9,10,-8,-10],[5,8,4,1],[10,7,1,-9],[6,-3,-7,1],[4,1,2,-2],[1,7,7,5],[-1,-9,8,3],[3,8,2,8],[-1,-10,10,1],[4,-1,5,-10],[6,-9,7,-10],[-10,2,8,-2],[7,-1,5,-2],[-10,-10,7,-3],[9,-9,8,7],[-2,3,-9,8],[-8,4,-2,2],[9,9,4,-3],[6,7,3,-3],[5,4,1,-9],[-4,-2,-3,-8],[-8,10,-1,-3],[5,2,-8,-3],[-2,-4,-3,-2],[9,-1,8,-5],[-6,-6,-8,-3],[-1,-10,-1,1],[-4,-6,9,1],[-2,10,-2,4],[-8,7,1,8],[7,2,-5,-3],[7,3,9,-6],[8,1,-9,-10],[-7,-2,8,-2],[-9,3,5,-10]], dtype = "uint32")#candidate|3995|(48, 4)|const|uint32
var_3996 = relay.var("var_3996", dtype = "int32", shape = (2, 56))#candidate|3996|(2, 56)|var|int32
call_3994 = relay.TupleGetItem(func_2540_call(relay.reshape(const_3995.astype('uint32'), [4, 12, 4]), relay.reshape(const_3995.astype('uint32'), [4, 12, 4]), relay.reshape(var_3996.astype('int32'), [112,]), ), 4)
call_3997 = relay.TupleGetItem(func_2544_call(relay.reshape(const_3995.astype('uint32'), [4, 12, 4]), relay.reshape(const_3995.astype('uint32'), [4, 12, 4]), relay.reshape(var_3996.astype('int32'), [112,]), ), 4)
func_1427_call = mod.get_global_var('func_1427')
func_1429_call = mutated_mod.get_global_var('func_1429')
var_4003 = relay.var("var_4003", dtype = "float64", shape = (80, 1))#candidate|4003|(80, 1)|var|float64
call_4002 = relay.TupleGetItem(func_1427_call(relay.reshape(var_4003.astype('float64'), [16, 1, 5])), 0)
call_4004 = relay.TupleGetItem(func_1429_call(relay.reshape(var_4003.astype('float64'), [16, 1, 5])), 0)
output = relay.Tuple([bop_3981,call_3994,const_3995,var_3996,call_4002,var_4003,])
output2 = relay.Tuple([bop_3984,call_3997,const_3995,var_3996,call_4004,var_4003,])
func_4005 = relay.Function([var_3980,var_3996,var_4003,], output)
mod['func_4005'] = func_4005
mod = relay.transform.InferType()(mod)
var_4006 = relay.var("var_4006", dtype = "float32", shape = (6, 9, 11))#candidate|4006|(6, 9, 11)|var|float32
var_4007 = relay.var("var_4007", dtype = "int32", shape = (2, 56))#candidate|4007|(2, 56)|var|int32
var_4008 = relay.var("var_4008", dtype = "float64", shape = (80, 1))#candidate|4008|(80, 1)|var|float64
output = func_4005(var_4006,var_4007,var_4008,)
func_4009 = relay.Function([var_4006,var_4007,var_4008,], output)
mutated_mod['func_4009'] = func_4009
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4013 = relay.const([[[-9.708809,-5.413764,-9.902060,9.951080,-8.641725,-7.161933,-4.139891,-8.836311,-7.160140],[1.919301,3.380603,-3.514886,0.470859,-4.153544,8.034756,-6.656725,6.069321,-8.642094]],[[-5.578707,-4.773357,0.579418,-2.672642,-7.311793,-7.303393,-1.432270,-7.319423,-6.786946],[-6.646342,5.988359,-8.641933,-9.218591,-2.451945,-1.933886,0.921214,-8.889977,4.637489]],[[-0.329619,1.980153,-6.614225,-8.010123,-2.581810,-6.892599,6.895172,-6.238072,-4.008200],[5.103812,-5.046736,-1.363637,-6.919343,1.094713,3.208111,-5.394929,-7.513377,9.762260]]], dtype = "float32")#candidate|4013|(3, 2, 9)|const|float32
uop_4014 = relay.asinh(const_4013.astype('float32')) # shape=(3, 2, 9)
output = relay.Tuple([uop_4014,])
output2 = relay.Tuple([uop_4014,])
func_4016 = relay.Function([], output)
mod['func_4016'] = func_4016
mod = relay.transform.InferType()(mod)
mutated_mod['func_4016'] = func_4016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mutated_mod.get_global_var('func_4016')
call_4017 = func_4016_call()
output = call_4017
func_4018 = relay.Function([], output)
mutated_mod['func_4018'] = func_4018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4104 = relay.TupleGetItem(func_4016_call(), 0)
call_4105 = relay.TupleGetItem(func_4018_call(), 0)
uop_4109 = relay.sigmoid(call_4104.astype('float64')) # shape=(3, 2, 9)
uop_4111 = relay.sigmoid(call_4105.astype('float64')) # shape=(3, 2, 9)
output = uop_4109
output2 = uop_4111
func_4118 = relay.Function([], output)
mod['func_4118'] = func_4118
mod = relay.transform.InferType()(mod)
output = func_4118()
func_4119 = relay.Function([], output)
mutated_mod['func_4119'] = func_4119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3842_call = mod.get_global_var('func_3842')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_4122 = relay.TupleGetItem(func_3842_call(), 0)
call_4123 = relay.TupleGetItem(func_3843_call(), 0)
func_2540_call = mod.get_global_var('func_2540')
func_2544_call = mutated_mod.get_global_var('func_2544')
const_4131 = relay.const([10,8,3,-6,-1,-1,2,8,-9,2,2,-1,2,6,-9,-6,10,-6,5,-5,4,-5,10,-2,-10,1,2,8,9,2,8,-9,-5,-3,-7,-5,6,9,7,-7,8,1,-7,3,-5,-3,4,3,-7,8,-5,-2,4,7,3,-8,-9,10,-10,-1,10,9,-8,-1,-1,6,3,8,-1,1,-8,-6,10,4,-1,-6,-1,-4,9,1,-6,7,6,9,10,-3,10,5,7,1,-4,-8,-2,-3,10,1,2,-5,3,8,-5,2,-2,5,-4,-7,1,-5,-10,4,-4,-5,-4,7,-4,1,-9,5,7,1,6,4,-5,-2,9,4,10,-2,-8,2,-7,3,5,7,8,7,-8,-3,10,-8,1,2,1,-8,4,-5,4,-7,4,10,4,5,-8,8,4,-7,-10,-6,5,-2,-3,-10,-2,5,10,9,-5,-9,3,-1,3,-1,6,-4,1,-10,10,3,-6,10,-4,-2,-5,1,10,6,7,8,5,4,7,-2], dtype = "uint32")#candidate|4131|(192,)|const|uint32
const_4132 = relay.const([-8,2,7,-8,6,-6,1,10,-3,4,2,-3,5,10,-2,7,-9,5,-10,10,5,1,-3,-1,-7,-6,-2,5,-9,-1,1,10,6,5,-10,-10,-3,10,-1,4,-6,6,-1,5,8,-8,-3,-1,8,3,-1,3,-5,1,6,3,-8,-1,-1,-7,-4,10,-5,-4,-6,-1,1,10,10,1,9,-1,-2,3,1,-4,7,2,-6,-7,5,-1,3,-4,5,1,9,8,-6,-7,-3,2,9,-3,10,9,-7,4,2,-5,1,-10,9,4,-2,-4,3,6,10,9,9,-7], dtype = "int32")#candidate|4132|(112,)|const|int32
call_4130 = relay.TupleGetItem(func_2540_call(relay.reshape(const_4131.astype('uint32'), [4, 12, 4]), relay.reshape(const_4131.astype('uint32'), [4, 12, 4]), relay.reshape(const_4132.astype('int32'), [112,]), ), 3)
call_4133 = relay.TupleGetItem(func_2544_call(relay.reshape(const_4131.astype('uint32'), [4, 12, 4]), relay.reshape(const_4131.astype('uint32'), [4, 12, 4]), relay.reshape(const_4132.astype('int32'), [112,]), ), 3)
output = relay.Tuple([call_4122,call_4130,const_4131,const_4132,])
output2 = relay.Tuple([call_4123,call_4133,const_4131,const_4132,])
func_4137 = relay.Function([], output)
mod['func_4137'] = func_4137
mod = relay.transform.InferType()(mod)
output = func_4137()
func_4138 = relay.Function([], output)
mutated_mod['func_4138'] = func_4138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4141 = relay.TupleGetItem(func_4016_call(), 0)
call_4142 = relay.TupleGetItem(func_4018_call(), 0)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4146 = relay.TupleGetItem(func_4016_call(), 0)
call_4147 = relay.TupleGetItem(func_4018_call(), 0)
output = relay.Tuple([call_4141,call_4146,])
output2 = relay.Tuple([call_4142,call_4147,])
func_4160 = relay.Function([], output)
mod['func_4160'] = func_4160
mod = relay.transform.InferType()(mod)
output = func_4160()
func_4161 = relay.Function([], output)
mutated_mod['func_4161'] = func_4161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4118_call = mod.get_global_var('func_4118')
func_4119_call = mutated_mod.get_global_var('func_4119')
call_4202 = func_4118_call()
call_4203 = func_4118_call()
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
var_4208 = relay.var("var_4208", dtype = "int32", shape = (112,))#candidate|4208|(112,)|var|int32
call_4207 = relay.TupleGetItem(func_2890_call(relay.reshape(var_4208.astype('int32'), [28, 4])), 0)
call_4209 = relay.TupleGetItem(func_2892_call(relay.reshape(var_4208.astype('int32'), [28, 4])), 0)
func_2540_call = mod.get_global_var('func_2540')
func_2544_call = mutated_mod.get_global_var('func_2544')
var_4222 = relay.var("var_4222", dtype = "uint32", shape = (192,))#candidate|4222|(192,)|var|uint32
call_4221 = relay.TupleGetItem(func_2540_call(relay.reshape(var_4222.astype('uint32'), [4, 12, 4]), relay.reshape(var_4222.astype('uint32'), [4, 12, 4]), relay.reshape(var_4208.astype('int32'), [112,]), ), 5)
call_4223 = relay.TupleGetItem(func_2544_call(relay.reshape(var_4222.astype('uint32'), [4, 12, 4]), relay.reshape(var_4222.astype('uint32'), [4, 12, 4]), relay.reshape(var_4208.astype('int32'), [112,]), ), 5)
uop_4226 = relay.asinh(call_4207.astype('float32')) # shape=(5, 6, 2)
uop_4228 = relay.asinh(call_4209.astype('float32')) # shape=(5, 6, 2)
func_543_call = mod.get_global_var('func_543')
func_547_call = mutated_mod.get_global_var('func_547')
call_4229 = func_543_call(relay.reshape(call_4221.astype('int32'), [8, 7, 2]), relay.reshape(var_4208.astype('int32'), [8, 7, 2]), )
call_4230 = func_543_call(relay.reshape(call_4221.astype('int32'), [8, 7, 2]), relay.reshape(var_4208.astype('int32'), [8, 7, 2]), )
func_4118_call = mod.get_global_var('func_4118')
func_4119_call = mutated_mod.get_global_var('func_4119')
call_4232 = func_4118_call()
call_4233 = func_4118_call()
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4245 = relay.TupleGetItem(func_4016_call(), 0)
call_4246 = relay.TupleGetItem(func_4018_call(), 0)
output = relay.Tuple([call_4202,var_4208,call_4221,var_4222,uop_4226,call_4229,call_4232,call_4245,])
output2 = relay.Tuple([call_4203,var_4208,call_4223,var_4222,uop_4228,call_4230,call_4233,call_4246,])
func_4249 = relay.Function([var_4208,var_4222,], output)
mod['func_4249'] = func_4249
mod = relay.transform.InferType()(mod)
var_4250 = relay.var("var_4250", dtype = "int32", shape = (112,))#candidate|4250|(112,)|var|int32
var_4251 = relay.var("var_4251", dtype = "uint32", shape = (192,))#candidate|4251|(192,)|var|uint32
output = func_4249(var_4250,var_4251,)
func_4252 = relay.Function([var_4250,var_4251,], output)
mutated_mod['func_4252'] = func_4252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3523_call = mod.get_global_var('func_3523')
func_3525_call = mutated_mod.get_global_var('func_3525')
call_4254 = func_3523_call()
call_4255 = func_3523_call()
output = call_4254
output2 = call_4255
func_4256 = relay.Function([], output)
mod['func_4256'] = func_4256
mod = relay.transform.InferType()(mod)
output = func_4256()
func_4257 = relay.Function([], output)
mutated_mod['func_4257'] = func_4257
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4265 = relay.var("var_4265", dtype = "uint32", shape = (15, 14, 13))#candidate|4265|(15, 14, 13)|var|uint32
var_4266 = relay.var("var_4266", dtype = "uint32", shape = (15, 14, 13))#candidate|4266|(15, 14, 13)|var|uint32
bop_4267 = relay.bitwise_xor(var_4265.astype('uint32'), relay.reshape(var_4266.astype('uint32'), relay.shape_of(var_4265))) # shape=(15, 14, 13)
output = bop_4267
output2 = bop_4267
func_4275 = relay.Function([var_4265,var_4266,], output)
mod['func_4275'] = func_4275
mod = relay.transform.InferType()(mod)
var_4276 = relay.var("var_4276", dtype = "uint32", shape = (15, 14, 13))#candidate|4276|(15, 14, 13)|var|uint32
var_4277 = relay.var("var_4277", dtype = "uint32", shape = (15, 14, 13))#candidate|4277|(15, 14, 13)|var|uint32
output = func_4275(var_4276,var_4277,)
func_4278 = relay.Function([var_4276,var_4277,], output)
mutated_mod['func_4278'] = func_4278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4369 = relay.var("var_4369", dtype = "uint32", shape = (9, 1, 1))#candidate|4369|(9, 1, 1)|var|uint32
var_4370 = relay.var("var_4370", dtype = "uint32", shape = (9, 12, 6))#candidate|4370|(9, 12, 6)|var|uint32
bop_4371 = relay.greater_equal(var_4369.astype('bool'), var_4370.astype('bool')) # shape=(9, 12, 6)
output = relay.Tuple([bop_4371,])
output2 = relay.Tuple([bop_4371,])
func_4374 = relay.Function([var_4369,var_4370,], output)
mod['func_4374'] = func_4374
mod = relay.transform.InferType()(mod)
var_4375 = relay.var("var_4375", dtype = "uint32", shape = (9, 1, 1))#candidate|4375|(9, 1, 1)|var|uint32
var_4376 = relay.var("var_4376", dtype = "uint32", shape = (9, 12, 6))#candidate|4376|(9, 12, 6)|var|uint32
output = func_4374(var_4375,var_4376,)
func_4377 = relay.Function([var_4375,var_4376,], output)
mutated_mod['func_4377'] = func_4377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4256_call = mod.get_global_var('func_4256')
func_4257_call = mutated_mod.get_global_var('func_4257')
call_4443 = func_4256_call()
call_4444 = func_4256_call()
uop_4447 = relay.acos(call_4443.astype('float32')) # shape=(6, 9, 11)
uop_4449 = relay.acos(call_4444.astype('float32')) # shape=(6, 9, 11)
bop_4450 = relay.equal(uop_4447.astype('bool'), relay.reshape(call_4443.astype('bool'), relay.shape_of(uop_4447))) # shape=(6, 9, 11)
bop_4453 = relay.equal(uop_4449.astype('bool'), relay.reshape(call_4444.astype('bool'), relay.shape_of(uop_4449))) # shape=(6, 9, 11)
bop_4465 = relay.add(call_4443.astype('int16'), relay.reshape(bop_4450.astype('int16'), relay.shape_of(call_4443))) # shape=(6, 9, 11)
bop_4468 = relay.add(call_4444.astype('int16'), relay.reshape(bop_4453.astype('int16'), relay.shape_of(call_4444))) # shape=(6, 9, 11)
output = bop_4465
output2 = bop_4468
func_4481 = relay.Function([], output)
mod['func_4481'] = func_4481
mod = relay.transform.InferType()(mod)
mutated_mod['func_4481'] = func_4481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4481_call = mutated_mod.get_global_var('func_4481')
call_4482 = func_4481_call()
output = call_4482
func_4483 = relay.Function([], output)
mutated_mod['func_4483'] = func_4483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4497 = relay.TupleGetItem(func_4016_call(), 0)
call_4498 = relay.TupleGetItem(func_4018_call(), 0)
var_4517 = relay.var("var_4517", dtype = "float32", shape = (3, 2, 9))#candidate|4517|(3, 2, 9)|var|float32
bop_4518 = relay.logical_xor(call_4497.astype('int8'), relay.reshape(var_4517.astype('int8'), relay.shape_of(call_4497))) # shape=(3, 2, 9)
bop_4521 = relay.logical_xor(call_4498.astype('int8'), relay.reshape(var_4517.astype('int8'), relay.shape_of(call_4498))) # shape=(3, 2, 9)
func_4137_call = mod.get_global_var('func_4137')
func_4138_call = mutated_mod.get_global_var('func_4138')
call_4527 = relay.TupleGetItem(func_4137_call(), 1)
call_4528 = relay.TupleGetItem(func_4138_call(), 1)
func_3578_call = mod.get_global_var('func_3578')
func_3581_call = mutated_mod.get_global_var('func_3581')
const_4531 = relay.const([-1,-3,9,5,9,7,1,-5,9,-7,-7,-9,-1,-7,-1,-9,-1,3,2,-9,9,3,7,6,5,-2,4,7,8,2,-8,-4,-3,-9,7,8,-4,-6,10,7,-5,10,-2,-7,-8,-2,9,-7,4,-1,-6,7,-1,2,-6,5,-10,3,1,-6,8,-9,-5,1,-4,10,-1,-1,1,2,-4,1,3,10,1,-6,4,-7,-2,8,-1,6,-7,-4,2,-6,-2,-4,10,-2,-10,9,4,2,-4,-1,-9,7,-8,4,7,-8,-8,6,6,8,-8,1,5,-9,-4,-4,-9,-10,-1,7,-4,-7,-9,10,-4,-3,-7,4,10,1,-4,-8,7,10,-2,-8,-3,-1,-9,-8,-1,-5,7,-2,-5,-2,9,1,-8,6,9,-8,-10,-3,-4,-3,-1,-5,10,-7,2,3,9,-7,-7,9,-10,6,-8,10,1,-8,6,3,1,-10,-9,-4,8,-5,8,-9,-1,-8,-8,-2,6,1,3,7,-4,-7,-1,-1,-4,-4,-10,-1,-9,-3,-1,-4,-5,8,-1,-10,-5,9,-7,5,-9,-4,-1,4,-5,-9,-2,-3,9,2,8,6,10,1,6,-1,-6,-5,-9,9,4,10,2,-2,5,-3,-6,8,4,3,7,6,8,-10,-10,3,-8,1,-4,-3,7,-4,6,-8,3,-4,-7,4,4,4,-5,-10,-10,7,6,-5,-7,-7,-10,5,6,4,10,9,-1,7,-2,1,2,9,7,2,-2,-8,1,8,5,-3,9,10,-6,8,-6,3,-8,-5,-6,-10,3,5,-3,3,6,-4,9,4,1,-5,-2,6,-1,-4,7,7,4,-5,-6,9,-6,4,-7,3,4,-6,8,-6,-2,-8,-6,8,-9,-9,3,7,-10,-7,1,4,9,2,1,-8,10,-9,-3,8,-2,-8,-4,-6,-6,-3,4,4,7,-5,-6,1,-1,2,-9,-9,-9,8,10,10,-9,-4,-10,8,-4,8,-8,-8,1,-4,-2,5,-7,-5,-9,4,-5,2,-7,-5,-5,-3,-3,-9,-2,-7,5,-4,-5,1,3,1,-6,-5,3,-5,2,9,-10,-10,-5,-7,-10,-3,9,8,-3,-1,-4,-1,-6,-5,-6,-4,7,9,2,2,-6,-7,-1,6,-8,3,3,8,10,-8,10,-3,9,-8,-7,-2,-5,7,-8,10,-1,-5,-6,-2,6,3,5,4,-9,4,3,10,-7,-6,1,10,-10,6,7,2,-9,1,10,-7,-6,-4,7,6,10,-10,9,-5,-6,-3,-9,6,10,4,-3,-9,-10,-9,-9,-4,7,2,-5,-5,7,3,2,6,9,4,-10,2,-7,8,5,5,-7,10,-5,2,2,8,9,8,5,-1,-6,-7,-3,1,9,10,4,-8,4,10,9,9,-3,7,10,3,2,-1,4,-3,-9,-7,-4,1,-6,3,1,3,-1,-2,-8,-7,4,5,1,3,10,2,-6,3,5,7,-10,-10,1,-1,8,1,-9,3,4,-9,-5,-10,5,-3,9,-8,10,-9,-1,-2,-10,4,7,9,-1,-8,9,-5,3,-7,-8,1,-7,9,-1,-9,-1,-10,10,4,6,-6,-1,-1,1,-5,7,4,-6,-1,3,-8,5,-7,-7,-6,2,-10,-5,5,1,4,8,1,3,1,-6,-2,-10,7,9,-2,7,6,-5,9,-3,-3,1,4,-7,-9,7,3,-2,5,-4,-4,1,3,1,1,5,4,9,1,5,1,3,9,6,7,-1,1,1,5,7,5,-3,9,6,-9,10,-3,6,6,-6,-2,-6,-6,-8,-10,-10,-9,5,-4,-6,2,-3,-6,-8,2,9,-8,8,3,-8,3,9,8,7,-7,-3,8,-5,-6,1,7,-2,7,1,-8,-5,5,-2,-10,-5,4,7,5,-10,-6,-10,3,8,-4,9,7,2,2,7,4,10,-9,10,8,6,3,7,-8,3,3,5,-10,4,-2,3,-2,-4,9,-2,5,10,-3,-1,1,4,-10,6,9,-1,10,7,-8,-10,4,-3,-1,7,2,-7,-4,7,-2,-3,4,2,-9,-5,-1,-1,10,-5,10,4,-10,5,4,9,6,6,7,3,10,-2,-4,5,-8,6,2,10,-3,-7,6,10,9,1,8,1,-3,-9,5,-2,6,-3,-7,4,5,-4,7,-2,-4,4,6,-9,8,5,-4,10,-4,-10,-5,1,-6,-10,3,-3,6,8,-3,-10,-7,-6,-3,-2,-1,-8,-9,-6,-7,1,-10,-6,10,-6,-1,3,3,-10,10,-3,-6,-5,1,-9,-8,8,-5,-4,-8,-7,9,8,3,-8,10,2,-2,1,10,4,2,-8,8,-1,4,-9,8,-7,-5,-4,6,-5,6,-4,7,6,3,8,8,10,-7,-7,6,8,8,-10,-9,-3,-10,1,6,-1,-3,-2,6,3,3,-10,3,-2,-7,3,7,1,4,9,1,-9,-6,-5,5,8,7,6,-4,-1,3,9,2,9,3,-6,-7,7,9,10,10,-1,5,-9,6,-4,-5,-8,4,-3,-5,-1,7,8,10,10,-5,10,-6,1,-10,10,-9,-2,-8,-9,-7,7,-8,2,2,-1,10,-7,10,-2,-4,-6,3,-7,7,5,-6,-2,7,4,3,-6,-7,-3,2,7,-8,-10,-5,3,3,-9,-10,5,2,-9,-5,2,-2,6,8,2,10,-8,-9,8,9,-2,8,-10,-7,9,-6,1,-4,1,-4,-2,5,1,3,9,-9,-2,-8,-1,-1,-8,-9,-6,8,7,-10,-8,8,-2,-1,2,-2,10,9,7,-10,-9,-4,2,-10,-7,7,-7,5,6,10,7,-4,-6,-6,3,7,-7,-6,-6,9,9,9,2,7,1,10,3,-4,-7,1,-10,-3,-3,7,7,3,5,6,-5,7,-4,3,-1,6,9,9,6,-6,4,8,-1,-9,-4,-4,-10,6,-8,-1,8,-8,-5,-6,-10,1,8,-7,-2,-5,-3,-7,2,1,2,10,1,7,-4,6,7,-9,-9,-6,-5,9,-2,5,10,3,-7,-10,-10,4,-9,-9,10,-5,-4,-1,-2,9,9,-9,7,8,6,2,-4,9,9,-4,-5,7,8,8,-10,-7,10,-5,7,-5,-1,8,-5,1,-4,-10,-1,-8,-7,-10,-7,6,-2,-6,-4,3,-8,-3,9,-7,-8,-4,6,-8,10,1,-7,-5,-10,8,-4,1,4,-6,-7,-8,10,4,1,10,-1,1,10,7,-8,5,-7,-5,10,4,2,4,1,9,-1,-7,4,2,-3,3,3,-7,-4,-1,-2,6,4,-10,-10,-9,2,5,4,-7,6,2,7,10,-10,8,6,9,-5,-7,10,6,-3,-5,8,-4,3,4,5,-3,-4,8,6,2,-8,6,6,-9,3,-4,5,3,-5,-10,-10,-7,8,6,3,-7,8,9,5,1,-2,-7,6,-7,-9,-3,-1,-7,6,-3,3,1,3,-5,10,4,-4,10,-5,3,5,-4,8,3,7,6,8,-1,-1,-7,4,-4,-4,-8,-1,-2,-1,-1,10,-5,-4,8,10,10,8,2,-9,-10,-1,4,1,8,-4,1,7,-4,-8,-10,2,2,9,3,10,-3,-2,-3,-4,-5,2,-6,-1,-9,-1,-9,-10,6,-3,-9,10,6,-10,-5,1,-3,-5,1,7,4,8,-4,2,-10,-7,-2,1,-1,6,-3,5,10,-7,5,-1,-4,2,-9,-8,-3,-8,-3,10,9,-1,3,-2,-5,3,3,-1,-5,4,9,-5,-8,7,3,7,-3,8,-6,10,7,3,5,6,-9,6,-4,-2,3,8,-7,9,5,8,8,-3,9,-3,-10,-6,9,8,-2], dtype = "int32")#candidate|4531|(1440,)|const|int32
call_4530 = relay.TupleGetItem(func_3578_call(relay.reshape(const_4531.astype('int32'), [12, 8, 15]), relay.reshape(const_4531.astype('int32'), [12, 8, 15]), ), 1)
call_4532 = relay.TupleGetItem(func_3581_call(relay.reshape(const_4531.astype('int32'), [12, 8, 15]), relay.reshape(const_4531.astype('int32'), [12, 8, 15]), ), 1)
var_4536 = relay.var("var_4536", dtype = "float64", shape = (12, 8, 15))#candidate|4536|(12, 8, 15)|var|float64
bop_4537 = relay.bitwise_xor(call_4530.astype('int64'), relay.reshape(var_4536.astype('int64'), relay.shape_of(call_4530))) # shape=(12, 8, 15)
bop_4540 = relay.bitwise_xor(call_4532.astype('int64'), relay.reshape(var_4536.astype('int64'), relay.shape_of(call_4532))) # shape=(12, 8, 15)
output = relay.Tuple([bop_4518,call_4527,const_4531,bop_4537,])
output2 = relay.Tuple([bop_4521,call_4528,const_4531,bop_4540,])
func_4545 = relay.Function([var_4517,var_4536,], output)
mod['func_4545'] = func_4545
mod = relay.transform.InferType()(mod)
mutated_mod['func_4545'] = func_4545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4545_call = mutated_mod.get_global_var('func_4545')
var_4547 = relay.var("var_4547", dtype = "float32", shape = (3, 2, 9))#candidate|4547|(3, 2, 9)|var|float32
var_4548 = relay.var("var_4548", dtype = "float64", shape = (12, 8, 15))#candidate|4548|(12, 8, 15)|var|float64
call_4546 = func_4545_call(var_4547,var_4548,)
output = call_4546
func_4549 = relay.Function([var_4547,var_4548,], output)
mutated_mod['func_4549'] = func_4549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4256_call = mod.get_global_var('func_4256')
func_4257_call = mutated_mod.get_global_var('func_4257')
call_4558 = func_4256_call()
call_4559 = func_4256_call()
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
const_4570 = relay.const([[1,-8,-9,1,-9,9,-5,-6,-7,3,-7,-1,-7,-4,-7,2,10,-7,5,5,8,5,4,-10,-10,-6,-3,-5],[10,-7,10,4,-9,3,8,-7,-1,-10,4,5,-4,-8,10,7,-1,-6,4,-4,-3,-7,4,-7,-6,9,8,3],[7,-9,5,8,10,8,5,9,1,-9,1,10,-3,-9,-3,3,4,-6,9,4,7,5,7,8,-1,-3,-2,-2],[-1,8,-5,-3,-4,-7,-2,-2,6,1,-5,-1,7,-1,-6,6,5,-3,-4,9,-5,10,-9,8,-4,-7,9,5]], dtype = "int32")#candidate|4570|(4, 28)|const|int32
call_4569 = relay.TupleGetItem(func_2890_call(relay.reshape(const_4570.astype('int32'), [28, 4])), 0)
call_4571 = relay.TupleGetItem(func_2892_call(relay.reshape(const_4570.astype('int32'), [28, 4])), 0)
func_3842_call = mod.get_global_var('func_3842')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_4604 = relay.TupleGetItem(func_3842_call(), 0)
call_4605 = relay.TupleGetItem(func_3843_call(), 0)
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_4627 = relay.TupleGetItem(func_4160_call(), 1)
call_4628 = relay.TupleGetItem(func_4161_call(), 1)
func_1427_call = mod.get_global_var('func_1427')
func_1429_call = mutated_mod.get_global_var('func_1429')
var_4636 = relay.var("var_4636", dtype = "float64", shape = (80, 1))#candidate|4636|(80, 1)|var|float64
call_4635 = relay.TupleGetItem(func_1427_call(relay.reshape(var_4636.astype('float64'), [16, 1, 5])), 0)
call_4637 = relay.TupleGetItem(func_1429_call(relay.reshape(var_4636.astype('float64'), [16, 1, 5])), 0)
bop_4647 = relay.bitwise_and(call_4604.astype('int32'), relay.reshape(call_4558.astype('int32'), relay.shape_of(call_4604))) # shape=(6, 9, 11)
bop_4650 = relay.bitwise_and(call_4605.astype('int32'), relay.reshape(call_4559.astype('int32'), relay.shape_of(call_4605))) # shape=(6, 9, 11)
func_4118_call = mod.get_global_var('func_4118')
func_4119_call = mutated_mod.get_global_var('func_4119')
call_4662 = func_4118_call()
call_4663 = func_4118_call()
output = relay.Tuple([call_4569,const_4570,call_4627,call_4635,var_4636,bop_4647,call_4662,])
output2 = relay.Tuple([call_4571,const_4570,call_4628,call_4637,var_4636,bop_4650,call_4663,])
func_4675 = relay.Function([var_4636,], output)
mod['func_4675'] = func_4675
mod = relay.transform.InferType()(mod)
mutated_mod['func_4675'] = func_4675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4676 = relay.var("var_4676", dtype = "float64", shape = (80, 1))#candidate|4676|(80, 1)|var|float64
func_4675_call = mutated_mod.get_global_var('func_4675')
call_4677 = func_4675_call(var_4676)
output = call_4677
func_4678 = relay.Function([var_4676], output)
mutated_mod['func_4678'] = func_4678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4137_call = mod.get_global_var('func_4137')
func_4138_call = mutated_mod.get_global_var('func_4138')
call_4680 = relay.TupleGetItem(func_4137_call(), 0)
call_4681 = relay.TupleGetItem(func_4138_call(), 0)
output = relay.Tuple([call_4680,])
output2 = relay.Tuple([call_4681,])
func_4684 = relay.Function([], output)
mod['func_4684'] = func_4684
mod = relay.transform.InferType()(mod)
mutated_mod['func_4684'] = func_4684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4684_call = mutated_mod.get_global_var('func_4684')
call_4685 = func_4684_call()
output = call_4685
func_4686 = relay.Function([], output)
mutated_mod['func_4686'] = func_4686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4137_call = mod.get_global_var('func_4137')
func_4138_call = mutated_mod.get_global_var('func_4138')
call_4738 = relay.TupleGetItem(func_4137_call(), 1)
call_4739 = relay.TupleGetItem(func_4138_call(), 1)
output = call_4738
output2 = call_4739
func_4762 = relay.Function([], output)
mod['func_4762'] = func_4762
mod = relay.transform.InferType()(mod)
output = func_4762()
func_4763 = relay.Function([], output)
mutated_mod['func_4763'] = func_4763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4481_call = mod.get_global_var('func_4481')
func_4483_call = mutated_mod.get_global_var('func_4483')
call_4825 = func_4481_call()
call_4826 = func_4481_call()
output = call_4825
output2 = call_4826
func_4829 = relay.Function([], output)
mod['func_4829'] = func_4829
mod = relay.transform.InferType()(mod)
mutated_mod['func_4829'] = func_4829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4829_call = mutated_mod.get_global_var('func_4829')
call_4830 = func_4829_call()
output = call_4830
func_4831 = relay.Function([], output)
mutated_mod['func_4831'] = func_4831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_4835 = relay.TupleGetItem(func_4160_call(), 1)
call_4836 = relay.TupleGetItem(func_4161_call(), 1)
func_4005_call = mod.get_global_var('func_4005')
func_4009_call = mutated_mod.get_global_var('func_4009')
var_4860 = relay.var("var_4860", dtype = "float32", shape = (594,))#candidate|4860|(594,)|var|float32
const_4861 = relay.const([-10,5,-8,1,-1,1,5,-1,-10,8,-8,10,-9,-3,8,-6,5,-6,2,-10,-10,8,-4,2,-8,8,3,-3,8,-1,8,-3,-1,-5,-6,-7,8,2,4,8,4,9,-3,10,-6,6,-8,-8,-9,3,-10,2,6,3,-9,4,-8,9,-5,3,-9,9,9,6,2,3,-2,1,-10,1,-5,1,10,-5,10,-8,6,-6,-5,-4,4,9,4,-5,6,2,-1,-5,6,5,7,-4,-3,9,-3,-4,-2,-4,-7,-1,-4,-4,-7,-5,-10,-8,4,-1,2,-4,7,-1], dtype = "int32")#candidate|4861|(112,)|const|int32
const_4862 = relay.const([[0.135844,8.451403],[3.964286,-8.227438],[9.157803,-5.625193],[-0.359600,-5.141536],[-1.611525,1.812081],[6.399149,7.345417],[7.122651,-8.059171],[-9.419429,-9.412369],[2.554928,8.865995],[5.182435,-2.588447],[-8.420600,4.544104],[3.971324,-0.621776],[6.094851,6.837405],[-8.137783,2.931094],[2.899080,-0.066775],[9.808544,2.866406],[-2.077510,-9.581960],[5.988841,-4.666315],[0.732397,-2.451887],[-6.136483,1.807178],[-9.165759,-8.069041],[3.668480,-3.974657],[8.940459,1.740965],[-0.817410,3.951386],[0.367351,-9.261815],[-0.989732,-2.278132],[-8.379955,-9.541536],[3.552031,0.438539],[-7.737287,9.097986],[7.805605,5.473254],[-4.586285,7.999286],[6.303144,7.224139],[-4.903969,1.401650],[2.808364,6.621656],[-5.362526,-5.595863],[8.822889,-0.384596],[9.464247,9.177194],[4.725920,7.663007],[9.011763,-7.363766],[6.560221,6.766152]], dtype = "float64")#candidate|4862|(40, 2)|const|float64
call_4859 = relay.TupleGetItem(func_4005_call(relay.reshape(var_4860.astype('float32'), [6, 9, 11]), relay.reshape(const_4861.astype('int32'), [2, 56]), relay.reshape(const_4862.astype('float64'), [80, 1]), ), 1)
call_4863 = relay.TupleGetItem(func_4009_call(relay.reshape(var_4860.astype('float32'), [6, 9, 11]), relay.reshape(const_4861.astype('int32'), [2, 56]), relay.reshape(const_4862.astype('float64'), [80, 1]), ), 1)
func_3578_call = mod.get_global_var('func_3578')
func_3581_call = mutated_mod.get_global_var('func_3581')
const_4879 = relay.const([-10,10,6,1,7,-5,-2,4,-6,-2,-8,-10,3,-6,-5,-2,4,6,-1,3,-4,5,-5,-2,9,-5,-8,1,-2,-8,1,-1,-1,4,5,-2,-6,-4,9,1,2,2,-2,5,-1,10,-2,-7,-9,7,-10,4,9,8,-6,5,-8,9,-1,5,-7,3,9,4,-5,-3,-1,3,-5,-7,4,8,-8,-4,-1,-2,8,-10,7,5,7,7,7,10,-2,2,9,-8,6,8,2,8,5,-7,1,2,-1,8,8,-7,-4,-6,10,-10,5,4,7,-7,9,3,-5,-8,6,2,3,-6,-10,-10,6,7,-9,9,4,-6,-10,-4,6,9,9,9,5,-1,-8,7,4,-7,6,8,-4,4,-7,-8,2,6,3,5,3,-2,8,6,3,6,-3,-9,3,2,-4,3,-10,-7,-6,-10,10,-9,1,-2,-1,4,-5,1,-8,5,3,-8,-9,-5,-7,6,-7,8,2,-2,8,-9,9,-8,2,1,-3,10,3,-9,-2,-10,9,9,-7,4,-9,8,-2,-6,-4,-4,3,-9,1,7,-2,-6,-4,-2,-8,-6,-9,4,5,-8,7,3,5,-6,-1,-4,1,-4,5,-4,4,9,-6,-5,-2,-9,-6,-9,-6,1,-10,-2,5,6,4,4,-1,1,5,-8,10,6,-2,1,9,-7,7,2,7,-3,-7,9,9,5,8,10,1,-6,-10,10,8,-2,9,6,-1,7,7,6,-7,-1,4,-5,-9,9,7,-3,-7,10,1,1,7,10,3,-10,-6,-5,2,5,-10,-3,4,-4,2,-8,-1,5,-7,10,10,2,10,-6,9,6,-8,10,8,6,9,-3,4,-6,2,3,-5,7,6,10,5,-7,-6,4,1,3,3,-10,-3,-8,-2,6,9,5,-5,1,10,2,6,-1,7,9,-10,-8,5,10,8,7,9,3,6,3,-3,-3,4,-6,-7,-2,-3,-4,8,-6,-9,-4,-4,2,10,-5,4,-1,-1,9,3,-7,-4,5,-4,-8,5,-1,10,6,-1,-2,8,-3,-10,8,-6,10,-7,-3,7,6,-5,10,2,-5,6,10,-1,-4,9,-4,9,6,8,-9,-3,8,3,3,-3,-2,8,-4,7,1,2,-3,-9,8,-8,-4,-3,-9,8,4,4,2,-6,-2,6,10,-9,8,-2,5,3,-3,10,3,-7,3,10,3,2,10,-7,6,5,-3,-10,9,6,10,-5,7,-7,-1,-4,3,-10,-5,-7,-4,-7,-7,5,-10,9,8,2,-6,-6,6,-1,-7,5,-7,-5,3,8,-6,-8,-4,8,-1,-9,-9,-3,-4,-7,-5,-3,5,7,-9,-9,-8,3,6,-5,-2,-5,7,8,-4,2,-7,4,-4,-1,-6,10,-9,-7,4,3,8,7,-6,9,-1,-9,-8,2,6,7,-6,-5,7,10,-7,7,1,-1,2,6,2,4,10,4,-3,-7,7,4,5,-7,-8,-8,-2,-7,10,8,1,-2,1,-7,8,-1,-6,-10,8,-5,-6,5,-3,-2,8,-5,-3,-9,4,7,10,8,3,-8,7,-7,-6,1,-5,-4,-3,1,7,-10,-8,4,5,3,-10,-8,4,-4,-6,-2,9,5,5,10,9,-5,-7,4,-1,-9,-10,1,-10,8,9,-10,-6,-2,4,4,-2,-10,-8,-10,-3,-1,5,9,-5,3,7,-4,-10,-7,-8,8,2,10,2,10,-8,8,-10,-1,4,-1,-9,5,1,4,2,1,9,3,-1,5,-3,5,2,2,-1,-8,-10,-10,4,2,5,2,-5,3,10,-7,5,-8,-9,-2,3,-1,-10,4,4,-1,-9,2,8,10,-7,10,-9,6,7,6,-5,-1,-7,-10,10,9,4,3,-7,9,10,-4,6,-6,-8,-2,-9,-10,5,7,-3,5,8,-1,-1,-8,8,9,-2,8,7,-2,1,5,4,-3,10,6,8,-10,-8,9,10,1,-2,1,8,-8,-9,-7,8,-10,10,4,-3,-8,-5,-6,-6,9,7,9,-5,-4,-3,7,-3,-8,5,2,10,-1,-6,10,-6,-1,-10,8,-1,-10,-3,6,8,-8,7,2,-9,-2,2,8,2,-4,-2,-8,5,5,-6,4,4,6,-4,-9,-5,-10,5,-8,-5,-9,-3,10,-6,-7,-6,6,-7,-3,5,3,-3,7,-1,6,5,3,-2,-9,-7,-1,-9,5,1,6,10,-6,-4,-4,7,-1,3,4,6,-4,-10,-8,-3,-7,-10,2,4,-4,10,5,8,-4,9,-8,1,-10,8,4,-2,6,5,2,6,10,-6,7,-1,4,-9,9,-6,-5,-8,6,9,1,-1,-5,-1,-5,2,-10,3,6,-8,-5,5,-9,-8,-2,8,-3,8,-8,-5,-7,-6,-9,-3,-2,10,-5,7,8,10,2,-5,7,-3,2,9,-4,-8,-4,7,-2,-5,-10,1,-10,7,-9,9,6,2,-9,-9,5,-5,8,9,9,-7,8,8,-8,-10,-9,-2,10,-7,6,1,5,2,-7,3,3,-6,7,9,-3,2,-5,-9,10,-3,1,-8,9,10,-9,4,5,2,-6,-9,9,10,-8,10,-4,4,6,-4,10,-3,-8,-10,6,5,5,2,-7,-10,3,3,-3,-5,-7,-8,-4,5,-7,-3,8,-5,-5,-7,-1,-7,6,-2,-7,2,9,-2,-8,-2,-1,-7,6,4,-1,4,-9,-6,3,8,6,-3,-9,-5,1,3,4,-4,4,-2,10,-6,-8,-6,10,-8,-3,1,-7,8,-6,1,10,2,3,8,-9,2,7,-8,-1,1,-7,-5,-1,-2,5,8,-1,9,4,5,4,-3,-5,-5,-7,-10,1,1,-8,8,10,-9,6,-3,7,-8,-7,-9,-1,-1,-3,5,4,-5,-2,-8,-10,-1,6,1,-6,-4,9,7,10,-10,-7,-6,-4,-7,-5,-9,1,3,6,3,-10,-2,2,1,-7,4,10,7,10,-10,-9,8,-9,-9,5,-4,7,-6,-7,-1,-9,-10,-5,-3,-3,8,4,-1,-8,-7,-10,-8,8,8,-2,-2,3,10,-1,3,-7,-5,8,5,6,-1,-4,-5,-4,10,3,-4,5,6,-8,1,9,-8,2,5,7,4,4,4,6,1,-7,8,1,-10,-5,4,-7,-3,8,-8,-1,-6,4,2,-3,9,-9,10,3,9,-10,-3,7,-7,3,10,8,10,6,-3,-4,7,-1,3,8,3,-5,7,10,7,-9,-7,2,2,9,7,8,-9,10,3,2,-7,10,-8,-10,-6,-3,8,2,5,5,-7,3,-2,-5,-2,10,-5,5,-3,-10,4,5,1,3,-9,6,-1,-1,6,9,7,7,-2,-7,7,-5,3,4,7,9,-6,-3,8,2,-4,-1,-10,4,3,6,-1,1,-1,9,4,4,-5,-1,-3,-8,-3,7,-9,5,2,-4,-4,-10,-1,3,-9,7,5,8,10,6,-4,9,4,7,-5,3,-7,-4,-2,-6,-5,-6,1,-10,-9,-6,-1,-10,1,3,8,7,8,6,10,2,4,-8,1,8,6,5,-1,2,-4,-9,-2,-10,8,2,-5,-1,-2,6,9,-5,9,2,-7,-1,-1,3,-5,-4,6,-8,2,-2,10,-10,-1,4,7,10,-10,2,1,5,-8,-8,-8,-7,-8,7,-6,-7,-3,7,-6,-3,7,-8,-1,-4,-1,-5,-9,-1,3,6,-6,8,-3,9,-1,-4,10,-7,-4,-1,-1,5,-9,8,-4,-1,7,-10,-6,10,3,-6,-5,-5,-3,-5,3,8,-4,-5,-1,9,-8,10,9,-1,-5,5,-1,-8,-9,9,-3,-7,3,7,10,6,4,4,-8], dtype = "int32")#candidate|4879|(1440,)|const|int32
call_4878 = relay.TupleGetItem(func_3578_call(relay.reshape(const_4879.astype('int32'), [12, 8, 15]), relay.reshape(const_4879.astype('int32'), [12, 8, 15]), ), 0)
call_4880 = relay.TupleGetItem(func_3581_call(relay.reshape(const_4879.astype('int32'), [12, 8, 15]), relay.reshape(const_4879.astype('int32'), [12, 8, 15]), ), 0)
func_4137_call = mod.get_global_var('func_4137')
func_4138_call = mutated_mod.get_global_var('func_4138')
call_4884 = relay.TupleGetItem(func_4137_call(), 1)
call_4885 = relay.TupleGetItem(func_4138_call(), 1)
var_4886 = relay.var("var_4886", dtype = "float32", shape = (594,))#candidate|4886|(594,)|var|float32
bop_4887 = relay.logical_xor(var_4860.astype('uint8'), relay.reshape(var_4886.astype('uint8'), relay.shape_of(var_4860))) # shape=(594,)
output = relay.Tuple([call_4835,call_4859,const_4861,const_4862,call_4878,const_4879,call_4884,bop_4887,])
output2 = relay.Tuple([call_4836,call_4863,const_4861,const_4862,call_4880,const_4879,call_4885,bop_4887,])
func_4894 = relay.Function([var_4860,var_4886,], output)
mod['func_4894'] = func_4894
mod = relay.transform.InferType()(mod)
mutated_mod['func_4894'] = func_4894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4894_call = mutated_mod.get_global_var('func_4894')
var_4896 = relay.var("var_4896", dtype = "float32", shape = (594,))#candidate|4896|(594,)|var|float32
var_4897 = relay.var("var_4897", dtype = "float32", shape = (594,))#candidate|4897|(594,)|var|float32
call_4895 = func_4894_call(var_4896,var_4897,)
output = call_4895
func_4898 = relay.Function([var_4896,var_4897,], output)
mutated_mod['func_4898'] = func_4898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4481_call = mod.get_global_var('func_4481')
func_4483_call = mutated_mod.get_global_var('func_4483')
call_4903 = func_4481_call()
call_4904 = func_4481_call()
output = relay.Tuple([call_4903,])
output2 = relay.Tuple([call_4904,])
func_4928 = relay.Function([], output)
mod['func_4928'] = func_4928
mod = relay.transform.InferType()(mod)
mutated_mod['func_4928'] = func_4928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4928_call = mutated_mod.get_global_var('func_4928')
call_4929 = func_4928_call()
output = call_4929
func_4930 = relay.Function([], output)
mutated_mod['func_4930'] = func_4930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4256_call = mod.get_global_var('func_4256')
func_4257_call = mutated_mod.get_global_var('func_4257')
call_4940 = func_4256_call()
call_4941 = func_4256_call()
output = call_4940
output2 = call_4941
func_4944 = relay.Function([], output)
mod['func_4944'] = func_4944
mod = relay.transform.InferType()(mod)
mutated_mod['func_4944'] = func_4944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4944_call = mutated_mod.get_global_var('func_4944')
call_4945 = func_4944_call()
output = call_4945
func_4946 = relay.Function([], output)
mutated_mod['func_4946'] = func_4946
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4954 = relay.var("var_4954", dtype = "uint16", shape = (1, 8, 2))#candidate|4954|(1, 8, 2)|var|uint16
var_4955 = relay.var("var_4955", dtype = "uint16", shape = (14, 8, 2))#candidate|4955|(14, 8, 2)|var|uint16
bop_4956 = relay.less_equal(var_4954.astype('bool'), var_4955.astype('bool')) # shape=(14, 8, 2)
output = bop_4956
output2 = bop_4956
func_4974 = relay.Function([var_4954,var_4955,], output)
mod['func_4974'] = func_4974
mod = relay.transform.InferType()(mod)
var_4975 = relay.var("var_4975", dtype = "uint16", shape = (1, 8, 2))#candidate|4975|(1, 8, 2)|var|uint16
var_4976 = relay.var("var_4976", dtype = "uint16", shape = (14, 8, 2))#candidate|4976|(14, 8, 2)|var|uint16
output = func_4974(var_4975,var_4976,)
func_4977 = relay.Function([var_4975,var_4976,], output)
mutated_mod['func_4977'] = func_4977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4928_call = mod.get_global_var('func_4928')
func_4930_call = mutated_mod.get_global_var('func_4930')
call_4996 = relay.TupleGetItem(func_4928_call(), 0)
call_4997 = relay.TupleGetItem(func_4930_call(), 0)
const_4998 = relay.const([[[-8,3,-10,-2,6,8,7,4,-6,9,3],[5,3,6,-3,-8,-9,6,1,-10,9,-7],[-3,8,-5,9,10,8,5,1,-6,10,9],[5,-1,-9,4,9,-6,-5,4,10,7,1],[-6,9,-9,-7,4,-10,-8,-7,6,10,-3],[-2,-10,-4,10,10,-8,-8,-9,-5,9,-9],[-6,-3,-4,-2,-9,-5,7,-5,-7,-3,-3],[1,-7,4,4,5,2,2,-1,5,1,7],[1,4,-7,2,7,-2,2,10,-1,-7,5]],[[1,4,-5,5,-2,6,-6,-5,4,4,8],[-4,-3,5,10,-9,-7,-6,-9,-6,9,1],[6,-8,9,6,1,8,-5,-5,-3,5,-9],[-4,-3,-3,2,-2,1,-9,-3,8,7,7],[8,-8,-6,3,-5,6,-7,10,3,10,-1],[4,7,7,9,5,-6,10,-7,7,-4,-8],[2,-2,2,-8,-4,9,6,3,-10,5,-3],[-7,-2,10,9,-6,-10,5,2,-4,-8,6],[-9,-1,7,-4,-1,-1,-7,-8,1,-7,-2]],[[-2,8,9,-1,1,-3,-8,8,-3,2,3],[-6,-4,-5,-9,-3,-9,9,8,4,9,-2],[10,-8,3,8,9,-9,1,4,-10,1,10],[9,9,7,-1,-6,1,5,-5,-9,6,-9],[-1,7,2,3,7,9,-5,7,-7,6,-8],[-1,-3,7,-10,6,-1,-3,10,-6,7,-6],[-4,-8,-3,-1,5,-4,-6,-10,1,-8,-1],[-7,6,-2,1,-3,9,7,6,-5,-2,3],[-3,-4,1,7,2,6,7,1,6,-2,7]],[[-8,-9,-6,-3,-9,-4,-1,3,-8,1,-3],[2,6,-7,-2,10,-7,-5,10,-4,6,-1],[2,6,1,5,-8,7,4,2,8,10,-1],[-2,4,-9,5,-9,6,-8,5,-10,-10,-6],[-10,-4,2,-8,8,-3,8,-3,2,10,7],[2,1,4,-6,10,9,-6,8,4,-4,8],[-9,-4,3,6,4,-2,9,-10,4,-2,-4],[6,2,7,8,-9,8,-5,-9,-3,-10,-10],[8,-3,8,9,-6,3,8,-6,-9,3,-10]],[[10,-1,4,7,10,4,2,-1,-3,8,4],[9,-2,9,-6,4,-10,-1,4,-10,7,-10],[-5,2,7,-5,-7,5,3,-5,-4,-6,-1],[1,-9,4,3,7,-2,-6,-8,-1,7,4],[-7,10,-7,-8,-5,8,9,10,-3,-2,5],[-5,10,9,10,-9,4,10,6,-10,6,7],[-9,9,-3,8,-8,-2,-6,8,-4,-3,-4],[10,1,-1,9,2,4,-1,-2,-6,1,-9],[-8,-3,1,3,-8,-5,4,-6,5,-2,-9]],[[7,-1,2,-2,-6,-7,7,6,-5,-2,3],[-8,8,9,10,2,-1,-2,-2,3,7,1],[-10,-3,-1,-5,10,5,5,-7,-4,-6,-1],[-8,-5,4,-3,-5,2,-9,-2,7,-10,-1],[6,3,8,-5,-8,-5,-3,4,-4,10,6],[8,6,3,8,10,-3,-4,-2,3,9,2],[6,10,4,7,9,-9,1,-10,7,2,5],[-2,-6,-7,-4,-9,-3,-2,6,7,7,10],[-2,-6,2,-9,-6,4,-10,7,7,4,-2]]], dtype = "int16")#candidate|4998|(6, 9, 11)|const|int16
bop_4999 = relay.power(call_4996.astype('float32'), relay.reshape(const_4998.astype('float32'), relay.shape_of(call_4996))) # shape=(6, 9, 11)
bop_5002 = relay.power(call_4997.astype('float32'), relay.reshape(const_4998.astype('float32'), relay.shape_of(call_4997))) # shape=(6, 9, 11)
output = relay.Tuple([bop_4999,])
output2 = relay.Tuple([bop_5002,])
func_5010 = relay.Function([], output)
mod['func_5010'] = func_5010
mod = relay.transform.InferType()(mod)
output = func_5010()
func_5011 = relay.Function([], output)
mutated_mod['func_5011'] = func_5011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4928_call = mod.get_global_var('func_4928')
func_4930_call = mutated_mod.get_global_var('func_4930')
call_5063 = relay.TupleGetItem(func_4928_call(), 0)
call_5064 = relay.TupleGetItem(func_4930_call(), 0)
output = relay.Tuple([call_5063,])
output2 = relay.Tuple([call_5064,])
func_5065 = relay.Function([], output)
mod['func_5065'] = func_5065
mod = relay.transform.InferType()(mod)
output = func_5065()
func_5066 = relay.Function([], output)
mutated_mod['func_5066'] = func_5066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_5086 = relay.TupleGetItem(func_5010_call(), 0)
call_5087 = relay.TupleGetItem(func_5011_call(), 0)
func_3578_call = mod.get_global_var('func_3578')
func_3581_call = mutated_mod.get_global_var('func_3581')
const_5091 = relay.const([6,8,-9,4,9,2,3,-8,-2,7,2,-9,-6,-9,6,10,-2,-1,-5,-1,-3,4,5,-6,2,-4,1,-1,8,9,-7,-5,9,-2,-2,-1,-7,3,-7,-10,-10,-3,8,9,5,-3,7,1,-5,-10,-9,-4,-6,-10,-5,3,-7,-8,10,4,-5,8,-4,-6,4,-7,-9,-9,7,-9,2,-8,8,-5,-3,-4,3,-10,10,5,4,-7,3,7,7,-2,7,7,6,-4,10,-7,9,-1,3,-3,10,-9,9,-4,-3,-5,-6,6,6,-3,7,3,-7,-4,-2,7,-8,6,-2,4,-5,-6,3,5,3,8,-7,-3,-7,3,4,3,6,-9,-10,-6,2,-7,5,6,9,-5,7,9,6,7,-3,4,-10,10,6,4,-9,6,-5,1,8,-10,-5,-3,2,1,-8,5,-7,-9,-2,-4,-6,-4,-5,-4,-2,-10,-3,7,10,-1,4,8,4,8,-10,8,5,6,-8,2,5,6,-2,-5,3,-3,-3,-10,-8,-2,3,6,-3,-7,-5,10,1,-1,-1,7,2,2,-1,-2,-5,9,6,5,8,-10,-2,-6,-8,-10,-1,6,-7,9,-3,8,9,5,1,-5,-3,-5,-9,2,5,-8,-8,-2,-3,4,-5,-5,8,-8,-1,1,9,-2,4,-8,5,9,-10,-10,-3,-10,-7,-1,-6,-7,3,10,-1,-2,6,7,-6,5,-7,-9,-9,7,6,4,-8,-9,-6,-4,-1,3,-6,9,5,6,-10,2,-5,-7,8,1,2,-6,-8,5,-7,-9,9,5,-1,-7,7,2,8,-3,1,-2,-3,-1,-9,2,-7,10,-8,-1,7,4,5,6,-5,10,2,-1,8,-7,10,-4,-4,-4,-9,-5,-1,10,3,1,-4,8,-3,-2,2,-10,3,-9,6,9,-8,-2,1,7,8,4,9,8,10,2,1,4,6,1,9,-7,-2,8,-1,-9,-2,-10,6,4,-10,-8,10,7,7,8,-7,5,-6,-5,5,-5,-9,-2,5,-1,-4,-7,2,10,1,-7,7,-8,-2,-1,6,-8,2,-2,-5,3,-3,-6,6,6,6,-6,7,7,6,8,3,-9,-5,-6,-5,2,1,4,-5,-7,-8,-5,6,4,-9,3,10,9,-6,-10,3,-8,-1,4,-5,-7,3,-7,6,-8,-6,7,7,-5,-2,-4,6,-3,-6,-3,9,3,-3,-8,2,4,-1,7,-8,10,9,8,6,4,-8,3,8,9,8,10,7,9,-4,5,1,5,9,-5,5,-9,6,-2,1,6,1,9,-10,4,-9,10,-6,9,-8,-2,-4,8,6,6,1,7,10,10,6,-7,-4,-4,2,8,10,5,-5,-5,4,8,-3,-9,-1,-4,4,-2,8,1,-1,-2,-2,-4,9,-8,1,8,1,7,-6,-8,2,-1,8,-10,2,10,8,-9,-3,10,2,-8,-7,4,-7,4,-4,2,6,3,-4,1,8,1,-8,-5,-2,3,9,-3,-2,6,3,-2,-9,-6,-1,-7,9,-10,2,7,-10,5,10,6,6,-1,-9,9,-7,3,4,-7,-1,-7,-6,-8,5,-6,1,8,-5,6,2,-3,10,9,7,4,4,-10,-6,-7,-2,-7,-6,-10,-5,-6,-2,8,-5,8,2,10,5,-6,-10,3,5,-7,-6,3,-3,-8,8,-9,-4,6,10,2,8,8,1,2,-3,9,5,-1,-1,-5,7,-3,-2,-7,-5,-10,8,-10,3,-5,10,6,-3,4,-7,4,-3,-9,4,-9,-6,9,-1,1,3,-10,7,10,4,6,3,9,5,-2,3,-7,10,-1,8,-5,-7,6,1,-7,-10,-6,3,10,3,-8,-1,3,2,6,-7,1,-6,-1,-4,1,1,8,5,3,-8,-2,5,-4,-3,-7,1,-6,6,3,-8,-4,4,-3,8,4,-7,8,-6,-1,3,9,5,-9,5,-8,6,1,4,8,-2,-9,-3,-2,-9,7,-8,-4,-4,-3,6,-1,3,-4,-6,8,-7,8,6,-8,-1,-7,-1,-4,-5,-5,8,5,8,8,-2,-3,-5,-6,10,-4,-6,2,3,4,4,-8,5,-2,3,-8,-6,1,-3,2,10,6,8,-7,5,8,-1,2,2,-9,-3,9,10,-3,-8,6,-1,-5,-2,8,4,-9,-2,10,-4,-8,-8,8,-8,2,-8,-5,-3,-7,-3,-2,-1,-3,-1,-9,-4,2,6,1,-3,-10,-1,9,5,9,-1,6,-4,-8,-4,10,4,1,3,5,-4,6,-10,-1,1,5,-5,-5,-2,5,-10,5,6,5,7,-5,5,-8,8,-1,1,10,-9,-4,8,6,-4,-3,6,-10,-7,5,8,-8,5,5,3,4,10,2,7,7,10,4,7,-8,10,-10,-9,5,6,-9,-5,3,-1,3,-7,-1,-10,3,-8,-6,6,-7,4,8,3,-3,10,-4,-2,-1,9,6,-7,-9,-1,3,10,-2,-3,-6,-8,5,-4,-1,7,-5,-5,8,-7,-7,3,-8,4,-9,10,3,4,-8,-6,5,2,-10,9,9,4,-6,9,-9,-4,10,-6,4,1,-8,-2,10,1,2,-9,-7,10,9,-7,-2,9,-5,-3,4,-2,2,-3,9,-4,7,-4,8,8,-1,10,-6,-5,3,-9,-3,9,-4,-10,10,5,-9,2,1,7,-4,7,-7,10,-2,8,9,-3,-2,5,-8,9,-9,7,10,-4,-2,-4,-7,8,3,-7,3,-5,-2,9,3,7,7,-4,7,-1,2,7,-2,-9,1,7,-5,-1,7,6,7,3,-9,-1,4,-5,-1,-4,-7,8,-8,-4,-1,9,-4,-7,-2,7,5,8,-1,-6,7,-5,-4,4,10,-4,-4,7,9,1,4,1,-5,1,-3,-10,8,7,-8,3,-1,-7,9,7,9,9,5,3,10,9,2,4,-5,-3,5,9,2,-3,1,10,7,1,9,3,9,-1,-1,2,-9,9,10,10,-5,4,-4,-5,-4,-4,-2,10,-10,4,-7,9,3,10,7,7,6,9,-8,10,3,-2,-4,8,-3,-7,-1,8,4,7,-1,-5,-8,4,7,7,-1,-4,-1,-9,9,9,-2,-3,-7,10,-9,-5,-7,4,-5,5,9,-1,6,-9,7,4,-6,-8,1,1,2,6,6,-5,-10,9,2,4,-1,2,10,7,-4,9,2,-5,7,-4,-1,6,-9,-3,-6,-2,9,-6,9,4,-8,-1,4,-5,-5,-4,7,-10,-6,1,9,10,7,-6,9,2,-3,-2,-8,6,5,2,1,-10,2,-10,5,8,5,-8,3,6,4,-3,-4,-6,10,-2,-7,-1,-4,-3,-10,-2,-6,-3,-4,-7,8,9,-8,10,-2,-2,-5,-1,3,-9,-4,9,-3,8,-3,6,-4,1,1,-3,-6,-1,5,1,5,-10,2,8,4,-5,-3,-6,5,1,1,-8,-9,7,2,-4,7,-5,-5,-6,-10,-4,1,2,-9,1,-8,-8,-7,-3,-4,-7,4,2,6,-8,9,9,-4,-6,-7,7,-6,-4,-2,6,-5,1,-5,-9,-10,-7,-9,-3,-1,-7,7,-2,9,-10,5,8,-6,-9,1,4,-3,4,-9,-6,-5,-7,-7,5,-6,-8,10,-1,7,9,-6,-3,4,-4,4,1,4,-2,-8,-10,4,5,6,-10,6,2,2,2,3,-1,7,-8,2,4,9,-6,4,4,-9,-4,4,6,3,4,-3,5,-8,3,-3,10,10,2,9,-3,-2,5,5,6,9,-4,-6,6,-1,2,5,3,-9,-9,-5,-1,1,5,-7,-2,2,3,-4,-1,-6,-7,6,6,9,8,-10,-2,-4,5,-9], dtype = "int32")#candidate|5091|(1440,)|const|int32
call_5090 = relay.TupleGetItem(func_3578_call(relay.reshape(const_5091.astype('int32'), [12, 8, 15]), relay.reshape(const_5091.astype('int32'), [12, 8, 15]), ), 2)
call_5092 = relay.TupleGetItem(func_3581_call(relay.reshape(const_5091.astype('int32'), [12, 8, 15]), relay.reshape(const_5091.astype('int32'), [12, 8, 15]), ), 2)
output = relay.Tuple([call_5086,call_5090,const_5091,])
output2 = relay.Tuple([call_5087,call_5092,const_5091,])
func_5093 = relay.Function([], output)
mod['func_5093'] = func_5093
mod = relay.transform.InferType()(mod)
output = func_5093()
func_5094 = relay.Function([], output)
mutated_mod['func_5094'] = func_5094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4762_call = mod.get_global_var('func_4762')
func_4763_call = mutated_mod.get_global_var('func_4763')
call_5123 = func_4762_call()
call_5124 = func_4762_call()
var_5128 = relay.var("var_5128", dtype = "uint32", shape = (26, 5))#candidate|5128|(26, 5)|var|uint32
bop_5129 = relay.floor_mod(call_5123.astype('float32'), relay.reshape(var_5128.astype('float32'), relay.shape_of(call_5123))) # shape=(26, 5)
bop_5132 = relay.floor_mod(call_5124.astype('float32'), relay.reshape(var_5128.astype('float32'), relay.shape_of(call_5124))) # shape=(26, 5)
uop_5139 = relay.log10(var_5128.astype('float64')) # shape=(26, 5)
func_543_call = mod.get_global_var('func_543')
func_547_call = mutated_mod.get_global_var('func_547')
var_5145 = relay.var("var_5145", dtype = "int32", shape = (112,))#candidate|5145|(112,)|var|int32
call_5144 = func_543_call(relay.reshape(var_5145.astype('int32'), [8, 7, 2]), relay.reshape(var_5145.astype('int32'), [8, 7, 2]), )
call_5146 = func_543_call(relay.reshape(var_5145.astype('int32'), [8, 7, 2]), relay.reshape(var_5145.astype('int32'), [8, 7, 2]), )
bop_5149 = relay.left_shift(uop_5139.astype('int64'), relay.reshape(call_5123.astype('int64'), relay.shape_of(uop_5139))) # shape=(26, 5)
bop_5152 = relay.left_shift(uop_5139.astype('int64'), relay.reshape(call_5124.astype('int64'), relay.shape_of(uop_5139))) # shape=(26, 5)
func_4137_call = mod.get_global_var('func_4137')
func_4138_call = mutated_mod.get_global_var('func_4138')
call_5162 = relay.TupleGetItem(func_4137_call(), 1)
call_5163 = relay.TupleGetItem(func_4138_call(), 1)
func_5065_call = mod.get_global_var('func_5065')
func_5066_call = mutated_mod.get_global_var('func_5066')
call_5166 = relay.TupleGetItem(func_5065_call(), 0)
call_5167 = relay.TupleGetItem(func_5066_call(), 0)
func_3771_call = mod.get_global_var('func_3771')
func_3773_call = mutated_mod.get_global_var('func_3773')
call_5170 = relay.TupleGetItem(func_3771_call(relay.reshape(call_5166.astype('float64'), [6, 9, 11])), 0)
call_5171 = relay.TupleGetItem(func_3773_call(relay.reshape(call_5166.astype('float64'), [6, 9, 11])), 0)
output = relay.Tuple([bop_5129,call_5144,var_5145,bop_5149,call_5162,call_5166,call_5170,])
output2 = relay.Tuple([bop_5132,call_5146,var_5145,bop_5152,call_5163,call_5167,call_5171,])
func_5172 = relay.Function([var_5128,var_5145,], output)
mod['func_5172'] = func_5172
mod = relay.transform.InferType()(mod)
var_5173 = relay.var("var_5173", dtype = "uint32", shape = (26, 5))#candidate|5173|(26, 5)|var|uint32
var_5174 = relay.var("var_5174", dtype = "int32", shape = (112,))#candidate|5174|(112,)|var|int32
output = func_5172(var_5173,var_5174,)
func_5175 = relay.Function([var_5173,var_5174,], output)
mutated_mod['func_5175'] = func_5175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_5182 = relay.TupleGetItem(func_4160_call(), 1)
call_5183 = relay.TupleGetItem(func_4161_call(), 1)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_5193 = relay.TupleGetItem(func_4016_call(), 0)
call_5194 = relay.TupleGetItem(func_4018_call(), 0)
func_1898_call = mod.get_global_var('func_1898')
func_1901_call = mutated_mod.get_global_var('func_1901')
const_5196 = relay.const([-7.706593,9.656417,-7.676711,-7.187404,7.188632,-2.285416,-4.887906,8.210849,4.606993,8.962056,2.932107,0.750233,-9.850105,6.489917,6.208321,0.964302,8.247530,2.849382,-7.509428,-0.259841,-5.250915,-7.211920,6.270387,-7.437978,-7.288753,4.873917,-6.341663,1.386039,9.424791,-1.326268,9.425398,-9.819993,4.589691,-4.357260,8.704659,4.594843,0.150125,9.044268,2.650159,7.516347,1.054144,3.044004,-8.515264,-7.355583,5.551156,-4.970215,-9.968149,-7.855930,-2.954528,7.042696,1.194717,3.631302,-9.824619,9.913383,-8.079995,2.548145,5.869787,-2.908180,5.820248,3.735768,4.355221,3.536475,-8.615366,9.871006,7.050568,1.602462,-6.209483,5.640168,3.191801,-8.614390,-6.698274,5.322473,8.265228,0.646101,-3.380036,4.030896,-9.012996,4.194108,-7.446331,-2.098185,5.038955,7.659539,-4.417878,-0.823285,4.174731,-1.572020,-5.334581,-2.560435,7.043333,-4.505560,-3.071614,0.369846,-2.577948,-9.286215,-2.805283,-3.139711,-5.988527,1.692359,1.763528,-3.555427,-7.834561,-0.402200,-4.005512,-9.952057,-7.455341,4.015242,9.860231,2.984333,9.002035,-6.020311,-8.112404,5.401892,-8.323382,-5.559418,-8.140238,9.818300,8.680128,6.569280,-1.323480,1.975737,-7.474904,4.884764,8.733028,9.225230,-4.396479,-3.678398,0.173006,0.079341,-8.814448,0.304677,-5.335628,-5.587958,-1.158602,0.085010,7.053922,3.511273,8.760374,6.754294,9.321148,0.951733,9.415462,0.316597,5.793409,-4.711879,-4.731454,-1.268603,-3.487791,-4.441577,-3.534162,7.902498,-2.793490,4.483168,-5.274149,-3.681409,-5.919993,9.016536,-8.036257,-0.186551,-6.776821,9.270430,-0.661609,3.773439,-2.221458,5.823158,-1.552032,8.036916,7.902010,-6.509813,9.773686,7.032941,3.273699,4.846608,0.440402,1.137468,5.747859,-4.455637,4.444574,-8.298461,4.591912,-4.920451,9.133876,-3.763554,9.201375,-1.971708,-4.007123,-7.372175,-5.687028,8.989582,6.615812,1.402644,6.976429,-2.460165,-9.867319,6.759389,-5.560116,6.213744,2.339047,-1.447180,-4.704785,8.990693,-5.327507,-9.763525,-2.229009,3.846621,9.692131,-6.582212,-6.371082,1.859337,1.416454,6.906503,-2.046182,1.167752,-7.510956,-7.687568,-7.149877,5.599652,5.729684,-1.554308,1.618419,5.430779,-7.657784,-7.288738,-2.210931,4.516930,-4.856084,8.936935,9.216667,-0.566391,-7.867911,2.022274,-5.443004,-2.300530,-4.677247,8.402388,-4.764031,-2.751606,-7.892021,8.999911,-5.984424,3.255882,2.358301,-8.869197,3.035174,5.592705,1.681350,3.533584,8.035033,-7.626637,-2.241736,-4.954139,-4.445567,0.745268,5.038183,-4.233720,-2.180381,-8.414567,-2.651384,-4.117160,7.404243,-8.767860,-0.208429,-2.797920,5.947242,-0.276208,0.399165,-1.088604,4.880644,-3.684988,-3.200603,5.833392,-6.096538,5.123268,-9.065110,1.051802,6.825932,-6.122012,1.509812,0.367855,1.314974,-9.885843,-9.587565,5.728677,-1.509125,-8.047888,-5.221491,5.207905,5.041138,8.575639,3.593911,1.853629,-4.677144,-0.468348,4.899479,-3.655912,0.870104,3.620690,1.243293,-7.074010,-9.564781,4.458010,-1.387536,-2.905079,5.352169,4.795571,-2.040554,5.476381,-0.564151,-9.936555,4.052189,9.897129,3.318402,2.265231,0.556949,-8.577162,-3.023282,-4.024351,1.558971,5.156211,-0.807699,5.592989,3.958294,-9.380555,-5.430056,1.340806,3.536293,2.730024,0.393992,-9.958411,-6.659525,9.957314,-7.845442,0.599606,-5.940909,-7.539573,7.732300,3.193064,-7.410825,-6.788266,-3.278478,-1.959402,-9.979540,-0.579720,-4.648973,-1.770496,6.789586,-7.343906,3.286879,8.137904,-3.675858,2.416929,9.740488,-1.887236,-3.503014,9.075678,4.011352,-4.814451,6.283456,0.685376,9.085688,-9.297233,8.743294,-9.902987,-4.633412,-7.807533,9.975047,-7.739519,-9.204127,-5.210319,7.848611,3.221141,-6.966151,7.818419,-0.754877,9.783524,-3.576527,7.345472,-5.266814,7.730755,3.557744,3.840529,5.820125,-9.558476,5.691864,-2.824830,-8.386249,0.718213,1.998332,-2.512589,6.571997,-2.750548,1.449349,-6.451487,3.344613,-1.061223,0.445248,-3.086793,9.527147,3.528294,5.832595,8.547238,8.781674,-6.316962,7.355662,0.111973,4.150804,2.142687,1.042697,-8.568787,3.076956,9.445913,4.332852,6.165274,-0.539216,0.784433,-3.231687,0.195925,4.745059,-7.580248,-5.185597,6.067215,2.124769,-2.964039,-6.401417,-4.384980,8.266760,8.273149,0.341312,9.488842,1.515910,1.180555,-2.341168,0.454898,1.630741,-8.638761,8.690708,2.863364,-4.740494,7.551029,-6.173357,-7.226044,-3.504918,-8.775359,-3.518511,2.889343,-8.820384,1.610499,-3.000628,-9.575560,1.854656,2.835889,6.655485,8.489216,6.666442,-8.713288,-3.176974,4.232646,-0.911565,-4.510329,-0.636638,-2.134676,3.968783,1.490057,8.738286,3.637127,-6.830408,7.614404,8.381740,-7.829061,-5.091020,-7.805126,2.465877,5.925803,-8.860168,3.479336,4.696387,3.186147,3.359857,-4.594174,7.987490,0.988237,9.151670,0.182633,-3.809129,0.031756,-2.379233,3.207117,9.452882,-6.235116,2.422050,-9.052422,7.746776,0.828956,-4.817294,3.386438,7.340805], dtype = "float64")#candidate|5196|(495,)|const|float64
call_5195 = relay.TupleGetItem(func_1898_call(relay.reshape(const_5196.astype('float64'), [11, 3, 15])), 0)
call_5197 = relay.TupleGetItem(func_1901_call(relay.reshape(const_5196.astype('float64'), [11, 3, 15])), 0)
output = relay.Tuple([call_5182,call_5193,call_5195,const_5196,])
output2 = relay.Tuple([call_5183,call_5194,call_5197,const_5196,])
func_5204 = relay.Function([], output)
mod['func_5204'] = func_5204
mod = relay.transform.InferType()(mod)
mutated_mod['func_5204'] = func_5204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5204_call = mutated_mod.get_global_var('func_5204')
call_5205 = func_5204_call()
output = call_5205
func_5206 = relay.Function([], output)
mutated_mod['func_5206'] = func_5206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_5213 = relay.TupleGetItem(func_4016_call(), 0)
call_5214 = relay.TupleGetItem(func_4018_call(), 0)
output = call_5213
output2 = call_5214
func_5217 = relay.Function([], output)
mod['func_5217'] = func_5217
mod = relay.transform.InferType()(mod)
mutated_mod['func_5217'] = func_5217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5217_call = mutated_mod.get_global_var('func_5217')
call_5218 = func_5217_call()
output = call_5218
func_5219 = relay.Function([], output)
mutated_mod['func_5219'] = func_5219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4481_call = mod.get_global_var('func_4481')
func_4483_call = mutated_mod.get_global_var('func_4483')
call_5235 = func_4481_call()
call_5236 = func_4481_call()
const_5241 = relay.const([[[-5,-8,10,6,-5,10,-1,-4,-3,-7,7],[-6,7,2,9,5,-8,-3,-2,-8,10,-2],[-1,2,-1,1,-6,-7,-10,-10,3,-3,8],[-9,6,7,5,7,-10,-2,-7,-8,-9,-7],[6,-7,3,-1,-5,1,-10,-9,2,1,-4],[-10,5,5,-5,-2,-10,-1,9,3,-4,7],[-7,-1,2,-8,6,-7,-7,4,5,-2,-6],[-9,5,-9,8,-3,2,-3,-5,-1,10,1],[-10,-9,2,1,2,-3,4,6,-9,9,4]],[[-6,-5,-1,4,-2,6,1,-1,-7,4,2],[3,-4,-10,4,6,-2,-6,4,6,6,5],[1,10,1,-10,-6,4,5,-2,5,-8,7],[-1,-4,6,10,-7,-1,8,3,-6,1,8],[3,3,-7,6,-5,-8,-5,-8,8,-5,4],[-1,-1,7,-9,6,-4,10,1,9,5,6],[-2,7,4,10,-7,-5,10,-10,5,-10,6],[4,8,-7,9,-6,-2,2,7,1,5,-2],[-8,-5,-8,-3,7,-6,-1,9,-6,10,8]],[[-1,-5,6,-10,4,-1,-10,8,-7,-3,9],[6,3,-2,10,-6,-6,-5,1,-1,3,6],[2,9,8,-4,7,6,2,4,2,2,10],[-10,-3,6,4,-1,7,-8,3,3,-2,1],[-10,3,-2,-10,4,-3,-1,-3,10,-3,-4],[-1,5,-9,4,-8,-5,-6,5,1,-4,-6],[-3,1,-5,-10,5,7,7,4,8,-6,2],[9,-6,9,-5,4,-6,-1,9,-9,5,6],[-2,3,-4,-2,-9,-6,-3,4,9,-6,-4]],[[3,10,-10,8,9,6,-1,-9,9,-3,-4],[9,4,7,-3,9,-6,10,6,-2,9,6],[-2,-2,-4,5,9,7,2,-5,7,-2,5],[-9,-9,5,-2,-7,-8,5,-2,-10,-4,6],[1,10,-5,10,-2,10,-3,1,-8,2,-7],[-9,-7,4,8,-7,3,-6,10,8,-9,5],[-7,-9,-5,2,8,-3,-2,8,6,6,3],[-8,10,-6,6,10,6,-10,-10,4,-6,5],[-1,8,8,-7,-8,5,10,-8,1,-4,7]],[[1,-8,5,10,-2,1,-8,-3,-2,-1,10],[8,-10,6,-9,9,10,3,-1,-5,3,4],[7,-10,10,-5,3,-10,4,8,-9,-1,4],[4,8,10,-5,5,-2,10,4,-2,-1,-1],[-8,-8,6,10,7,5,3,-7,10,2,-6],[-3,2,-9,-8,9,1,-7,-1,9,10,3],[1,-6,1,10,4,8,-9,-8,9,-6,-9],[9,9,7,-4,-5,-8,6,8,-7,-1,8],[-3,-10,-6,-5,9,-4,-4,8,-9,2,3]],[[-7,6,-3,10,-9,-8,7,5,-10,8,3],[-2,1,-5,1,3,-10,3,-7,5,-5,-7],[10,6,6,-1,-7,1,8,-3,5,8,-6],[-1,3,-3,10,3,-1,9,3,8,6,-8],[-7,-3,6,10,-2,8,-6,6,-8,9,5],[9,-9,-8,6,1,-6,8,4,5,-8,3],[-4,3,5,-3,9,10,7,-6,5,-8,10],[4,-3,-1,-4,8,-1,-9,-2,-9,-4,-10],[-7,6,2,5,-10,-9,2,8,4,3,5]]], dtype = "int16")#candidate|5241|(6, 9, 11)|const|int16
bop_5242 = relay.not_equal(call_5235.astype('bool'), relay.reshape(const_5241.astype('bool'), relay.shape_of(call_5235))) # shape=(6, 9, 11)
bop_5245 = relay.not_equal(call_5236.astype('bool'), relay.reshape(const_5241.astype('bool'), relay.shape_of(call_5236))) # shape=(6, 9, 11)
func_4894_call = mod.get_global_var('func_4894')
func_4898_call = mutated_mod.get_global_var('func_4898')
call_5250 = relay.TupleGetItem(func_4894_call(relay.reshape(bop_5242.astype('float32'), [594,]), relay.reshape(const_5241.astype('float32'), [594,]), ), 5)
call_5251 = relay.TupleGetItem(func_4898_call(relay.reshape(bop_5242.astype('float32'), [594,]), relay.reshape(const_5241.astype('float32'), [594,]), ), 5)
uop_5275 = relay.sqrt(bop_5242.astype('float32')) # shape=(6, 9, 11)
uop_5277 = relay.sqrt(bop_5245.astype('float32')) # shape=(6, 9, 11)
output = relay.Tuple([call_5250,uop_5275,])
output2 = relay.Tuple([call_5251,uop_5277,])
func_5280 = relay.Function([], output)
mod['func_5280'] = func_5280
mod = relay.transform.InferType()(mod)
output = func_5280()
func_5281 = relay.Function([], output)
mutated_mod['func_5281'] = func_5281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_5335 = relay.TupleGetItem(func_4160_call(), 0)
call_5336 = relay.TupleGetItem(func_4161_call(), 0)
output = relay.Tuple([call_5335,])
output2 = relay.Tuple([call_5336,])
func_5338 = relay.Function([], output)
mod['func_5338'] = func_5338
mod = relay.transform.InferType()(mod)
mutated_mod['func_5338'] = func_5338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5338_call = mutated_mod.get_global_var('func_5338')
call_5339 = func_5338_call()
output = call_5339
func_5340 = relay.Function([], output)
mutated_mod['func_5340'] = func_5340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4684_call = mod.get_global_var('func_4684')
func_4686_call = mutated_mod.get_global_var('func_4686')
call_5392 = relay.TupleGetItem(func_4684_call(), 0)
call_5393 = relay.TupleGetItem(func_4686_call(), 0)
func_5338_call = mod.get_global_var('func_5338')
func_5340_call = mutated_mod.get_global_var('func_5340')
call_5433 = relay.TupleGetItem(func_5338_call(), 0)
call_5434 = relay.TupleGetItem(func_5340_call(), 0)
output = relay.Tuple([call_5392,call_5433,])
output2 = relay.Tuple([call_5393,call_5434,])
func_5450 = relay.Function([], output)
mod['func_5450'] = func_5450
mod = relay.transform.InferType()(mod)
mutated_mod['func_5450'] = func_5450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5450_call = mutated_mod.get_global_var('func_5450')
call_5451 = func_5450_call()
output = call_5451
func_5452 = relay.Function([], output)
mutated_mod['func_5452'] = func_5452
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5615 = relay.var("var_5615", dtype = "float32", shape = (4, 14, 15))#candidate|5615|(4, 14, 15)|var|float32
uop_5616 = relay.asinh(var_5615.astype('float32')) # shape=(4, 14, 15)
func_3842_call = mod.get_global_var('func_3842')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_5621 = relay.TupleGetItem(func_3842_call(), 0)
call_5622 = relay.TupleGetItem(func_3843_call(), 0)
output = relay.Tuple([uop_5616,call_5621,])
output2 = relay.Tuple([uop_5616,call_5622,])
func_5626 = relay.Function([var_5615,], output)
mod['func_5626'] = func_5626
mod = relay.transform.InferType()(mod)
mutated_mod['func_5626'] = func_5626
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5627 = relay.var("var_5627", dtype = "float32", shape = (4, 14, 15))#candidate|5627|(4, 14, 15)|var|float32
func_5626_call = mutated_mod.get_global_var('func_5626')
call_5628 = func_5626_call(var_5627)
output = call_5628
func_5629 = relay.Function([var_5627], output)
mutated_mod['func_5629'] = func_5629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_5653 = relay.TupleGetItem(func_5010_call(), 0)
call_5654 = relay.TupleGetItem(func_5011_call(), 0)
output = relay.Tuple([call_5653,])
output2 = relay.Tuple([call_5654,])
func_5666 = relay.Function([], output)
mod['func_5666'] = func_5666
mod = relay.transform.InferType()(mod)
mutated_mod['func_5666'] = func_5666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5666_call = mutated_mod.get_global_var('func_5666')
call_5667 = func_5666_call()
output = call_5667
func_5668 = relay.Function([], output)
mutated_mod['func_5668'] = func_5668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4944_call = mod.get_global_var('func_4944')
func_4946_call = mutated_mod.get_global_var('func_4946')
call_5704 = func_4944_call()
call_5705 = func_4944_call()
output = call_5704
output2 = call_5705
func_5710 = relay.Function([], output)
mod['func_5710'] = func_5710
mod = relay.transform.InferType()(mod)
output = func_5710()
func_5711 = relay.Function([], output)
mutated_mod['func_5711'] = func_5711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3666_call = mod.get_global_var('func_3666')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_5750 = relay.TupleGetItem(func_3666_call(), 2)
call_5751 = relay.TupleGetItem(func_3667_call(), 2)
uop_5754 = relay.sigmoid(call_5750.astype('float32')) # shape=(6, 9, 11)
uop_5756 = relay.sigmoid(call_5751.astype('float32')) # shape=(6, 9, 11)
output = relay.Tuple([uop_5754,])
output2 = relay.Tuple([uop_5756,])
func_5761 = relay.Function([], output)
mod['func_5761'] = func_5761
mod = relay.transform.InferType()(mod)
output = func_5761()
func_5762 = relay.Function([], output)
mutated_mod['func_5762'] = func_5762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5450_call = mod.get_global_var('func_5450')
func_5452_call = mutated_mod.get_global_var('func_5452')
call_5774 = relay.TupleGetItem(func_5450_call(), 0)
call_5775 = relay.TupleGetItem(func_5452_call(), 0)
func_3666_call = mod.get_global_var('func_3666')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_5780 = relay.TupleGetItem(func_3666_call(), 1)
call_5781 = relay.TupleGetItem(func_3667_call(), 1)
func_2540_call = mod.get_global_var('func_2540')
func_2544_call = mutated_mod.get_global_var('func_2544')
const_5784 = relay.const([[-10,5],[8,2],[2,4],[7,8],[9,1],[2,-3],[7,-1],[9,-10],[-4,2],[-10,9],[4,-5],[-7,3],[4,8],[-3,-1],[10,3],[-3,-8],[-5,-8],[5,-6],[3,9],[6,-6],[7,-6],[-4,-3],[1,4],[6,-1],[-2,-7],[-8,-7],[-6,-1],[-10,5],[-2,8],[-10,-2],[6,4],[-8,4],[-6,7],[3,7],[10,-2],[-8,8],[7,-7],[6,7],[5,-5],[-8,1],[9,2],[-1,1],[-8,2],[1,-5],[7,-7],[-3,-6],[-8,9],[9,2],[9,-1],[-2,4],[7,-5],[7,7],[3,-6],[8,3],[2,-4],[6,-8],[-1,-7],[-1,-2],[-10,-7],[6,-10],[9,3],[7,-5],[-2,9],[-6,-4],[8,-7],[-4,-9],[5,-1],[1,-8],[-9,-10],[-9,-5],[-4,8],[5,-5],[3,2],[-3,2],[-9,9],[-4,10],[9,10],[-5,-10],[3,-8],[-2,-9],[-5,4],[4,-7],[9,-2],[-2,6],[4,-3],[3,7],[3,-2],[8,-2],[4,2],[2,-2],[-3,5],[9,-1],[7,4],[-7,-6],[6,-7],[-3,7]], dtype = "uint32")#candidate|5784|(96, 2)|const|uint32
const_5785 = relay.const([6,1,-1,1,6,9,-2,-2,-10,9,-7,-8,2,-9,1,-7,5,6,4,4,-3,-7,7,8,-2,-9,-5,4,-5,8,-8,-7,-4,8,2,5,-7,8,4,9,-3,8,5,7,2,8,-2,-4,-7,2,6,-3,-2,5,9,1,-4,1,-1,-1,-6,5,-5,-4,-1,4,-6,8,-9,3,9,-9,-4,-2,1,-8,-4,4,-1,-4,7,-8,4,-2,-1,3,10,10,-4,-1,-10,1,3,5,-6,-6,8,7,-2,-7,5,-2,1,2,-6,10,5,10,-9,-2,6,1], dtype = "int32")#candidate|5785|(112,)|const|int32
call_5783 = relay.TupleGetItem(func_2540_call(relay.reshape(const_5784.astype('uint32'), [4, 12, 4]), relay.reshape(const_5784.astype('uint32'), [4, 12, 4]), relay.reshape(const_5785.astype('int32'), [112,]), ), 6)
call_5786 = relay.TupleGetItem(func_2544_call(relay.reshape(const_5784.astype('uint32'), [4, 12, 4]), relay.reshape(const_5784.astype('uint32'), [4, 12, 4]), relay.reshape(const_5785.astype('int32'), [112,]), ), 6)
output = relay.Tuple([call_5774,call_5780,call_5783,const_5784,const_5785,])
output2 = relay.Tuple([call_5775,call_5781,call_5786,const_5784,const_5785,])
func_5788 = relay.Function([], output)
mod['func_5788'] = func_5788
mod = relay.transform.InferType()(mod)
output = func_5788()
func_5789 = relay.Function([], output)
mutated_mod['func_5789'] = func_5789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4137_call = mod.get_global_var('func_4137')
func_4138_call = mutated_mod.get_global_var('func_4138')
call_5811 = relay.TupleGetItem(func_4137_call(), 3)
call_5812 = relay.TupleGetItem(func_4138_call(), 3)
func_5338_call = mod.get_global_var('func_5338')
func_5340_call = mutated_mod.get_global_var('func_5340')
call_5815 = relay.TupleGetItem(func_5338_call(), 0)
call_5816 = relay.TupleGetItem(func_5340_call(), 0)
output = relay.Tuple([call_5811,call_5815,])
output2 = relay.Tuple([call_5812,call_5816,])
func_5817 = relay.Function([], output)
mod['func_5817'] = func_5817
mod = relay.transform.InferType()(mod)
mutated_mod['func_5817'] = func_5817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5817_call = mutated_mod.get_global_var('func_5817')
call_5818 = func_5817_call()
output = call_5818
func_5819 = relay.Function([], output)
mutated_mod['func_5819'] = func_5819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_5823 = relay.TupleGetItem(func_5010_call(), 0)
call_5824 = relay.TupleGetItem(func_5011_call(), 0)
output = relay.Tuple([call_5823,])
output2 = relay.Tuple([call_5824,])
func_5825 = relay.Function([], output)
mod['func_5825'] = func_5825
mod = relay.transform.InferType()(mod)
output = func_5825()
func_5826 = relay.Function([], output)
mutated_mod['func_5826'] = func_5826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5450_call = mod.get_global_var('func_5450')
func_5452_call = mutated_mod.get_global_var('func_5452')
call_5901 = relay.TupleGetItem(func_5450_call(), 0)
call_5902 = relay.TupleGetItem(func_5452_call(), 0)
const_5908 = relay.const([[[4.089704,-5.478277,5.606221,-7.595790,6.287952,9.894235,-0.466218,8.619229,7.960812,-3.404039,-0.038717],[5.896366,-8.191878,6.431164,-1.308849,9.567329,2.290519,-0.890824,2.747408,3.032902,-7.731313,-4.244370],[6.306469,-5.825426,0.876290,-7.244963,-4.220021,-0.085459,-2.854537,3.217128,-5.318370,-9.933728,-6.446332],[-9.377072,-4.051557,-5.174939,2.850552,0.506606,-1.348435,6.630539,-9.163922,1.634326,-4.910712,6.038977],[3.701674,9.323164,-5.469543,-6.013592,-8.171481,-3.237578,-7.519304,3.488595,6.848250,6.170683,-6.808253],[7.188949,-5.491206,9.371213,-7.308374,9.805150,3.295762,4.507204,0.977050,1.959021,8.481377,-2.383095],[-1.660576,5.792325,-4.699842,-7.193849,2.260304,-1.865678,-1.500702,-1.639004,-4.243641,4.585934,-5.315661],[2.016109,-6.208214,8.441100,-4.338018,5.509037,1.232647,-4.523607,8.209937,9.514740,2.171408,-3.937926],[1.207930,-8.305784,2.218574,-1.115075,8.928640,3.168943,-7.113469,6.720449,-1.797374,4.669452,2.500863]],[[0.373614,-4.736288,1.982861,-2.608931,-0.921402,3.963571,-6.622995,-7.472640,-4.132729,-9.373587,1.953102],[1.760643,-0.874116,6.142067,9.767520,5.130192,-0.748493,3.965849,7.434372,0.036170,-3.129824,6.426422],[1.747825,9.564349,5.474050,3.246454,-7.700440,2.548815,-8.479168,-0.608134,1.486797,5.185314,-3.527099],[3.598954,-9.431642,1.495728,9.406242,9.820974,-1.149942,2.269535,0.534860,-3.273989,7.353781,-5.384661],[-0.292198,4.244868,-3.883763,7.846860,-9.590639,1.257655,-9.817338,1.871376,8.638532,-3.090400,2.044829],[0.519625,3.558379,-6.418740,4.272229,-0.307670,6.705557,9.465559,-2.415724,-7.166037,5.563647,-0.768243],[-8.791537,-5.097360,-5.889013,3.088264,-4.194924,-1.845754,-0.682822,-3.661649,0.898394,-8.853752,-7.202244],[2.089016,-4.031604,5.184644,4.103040,7.085102,0.384218,9.773908,1.708116,5.233853,1.724231,4.905426],[-3.567252,2.790806,-4.717188,6.823836,4.411899,-7.880827,-4.179839,9.064985,4.030711,-4.522156,-7.602484]],[[-5.759916,-3.083990,4.815204,-7.051726,-4.085630,-5.200786,-3.324768,6.814798,-5.013568,-6.529229,-5.833092],[-8.760355,-3.898832,8.426750,8.885968,-0.072384,0.141433,0.474249,-5.560497,5.610078,3.976848,-7.025996],[-2.163046,8.400675,-7.608632,1.786821,-6.248032,2.145108,2.918623,9.264940,-0.926764,7.023493,3.457555],[3.364643,-2.282164,-9.736637,-3.853274,0.269964,-8.579984,0.254456,0.524625,3.827769,8.315189,-7.144303],[4.291914,1.273473,-7.697356,1.299164,3.237715,9.768620,4.132516,8.866616,7.734297,1.739010,0.745414],[-6.832136,3.738790,8.492498,-4.117628,-8.917805,8.785649,-6.282989,-6.233549,0.632321,-5.790042,9.589672],[-6.798334,8.713202,5.066102,1.154278,-1.853390,1.233934,-4.527960,-5.334570,7.551457,-3.983473,-3.899965],[-1.364224,0.481130,-0.476565,-4.915105,2.182983,0.159049,-9.138596,1.479032,1.558474,-8.740069,-2.347055],[4.683089,0.803131,9.590695,-1.832203,-4.687897,-2.360856,-4.958865,5.671987,-3.762502,-2.704493,-6.334940]],[[-1.971409,-2.843983,8.402739,9.750726,0.656933,-4.938118,0.738969,2.598028,3.053290,-8.135067,4.816418],[-8.557470,4.464231,1.654635,-3.490451,8.164845,-5.032881,4.398031,-5.175865,6.974480,6.771596,-9.539332],[1.852983,-9.887304,-2.351214,-5.689600,-1.726233,-7.599701,5.522236,6.863507,6.456984,-4.699497,-4.580497],[2.115532,-6.923343,3.751422,-5.685338,-9.211149,0.636071,-7.057453,8.421089,5.513617,-3.825755,-4.920562],[9.737967,9.753713,-5.171978,-8.018680,4.601714,1.731640,-4.383209,-6.464117,-6.603654,-4.661921,1.404317],[8.924066,5.999516,-7.066700,7.406413,1.429419,-8.367835,0.048926,5.662113,-5.906647,-3.408687,-2.447549],[-8.069918,4.626750,-2.335170,-6.524222,0.578719,-0.369828,-3.499146,-0.544808,7.688575,-0.327686,-5.105377],[-3.592213,-9.008550,8.933629,-6.925863,3.679784,-3.634223,-9.987185,9.109855,-6.702660,-7.868387,6.673789],[-3.031412,-3.663633,-7.014505,4.228999,7.764294,-7.293225,-5.510839,-5.426855,5.143515,6.003392,-7.399848]],[[-4.917829,-3.421307,-4.093048,-8.915505,4.481096,8.548844,-8.297140,2.078036,4.002478,-8.517029,-5.223596],[3.519732,3.992077,-4.354168,-4.237666,-7.531435,-3.842997,2.459920,-3.079327,4.451342,-6.816042,6.303229],[-5.954434,6.604617,7.060345,6.825808,-9.559029,-5.211535,9.077509,6.814321,-1.883305,5.719013,-9.335210],[4.809089,-3.459035,1.060602,-3.365806,3.038116,9.851478,-0.621701,-3.429377,-5.934780,-7.605452,1.725463],[7.719510,0.892092,-1.379104,9.052330,7.961566,1.892349,8.735636,9.316097,-8.017522,-4.466764,0.490711],[-7.307400,-0.796920,-1.159284,-5.614870,-2.320420,-1.962346,0.575651,-2.372747,-3.117717,7.644708,8.838278],[-0.418541,-2.597201,-2.216331,-2.461866,8.545284,1.242644,1.200954,-6.469461,8.614002,0.121456,-2.073201],[4.859699,7.139687,0.518214,4.960675,2.138428,5.218838,-8.199825,-1.515097,0.668321,-6.026788,9.751094],[-1.058227,5.431673,1.683802,-1.916525,6.406593,-4.062527,4.394801,7.120765,2.024082,-1.111683,9.842083]],[[-4.333677,6.183961,8.081549,-5.110007,9.001116,8.999724,6.567959,1.928020,-9.645508,2.089625,-5.266954],[-6.896822,5.754963,-5.601461,-4.013980,0.275989,-1.135051,-0.261307,-2.508279,-5.518711,-9.685442,-2.241409],[-3.892747,2.710712,-0.144875,-7.338546,2.761401,-6.698068,-4.992796,-5.808205,-6.184625,7.267401,-7.232126],[1.878941,-3.099732,-2.917109,4.430720,-6.192293,-1.569166,-2.110836,-2.472854,6.489148,-2.936766,1.106463],[9.598597,5.733260,8.370052,-2.632388,5.474132,-2.552058,3.458302,-0.520676,9.913519,4.261153,-3.446998],[-4.645216,-5.184591,-7.124745,3.155997,6.578053,4.458400,2.288376,8.976769,-1.419034,0.606851,-7.827347],[3.634589,0.759549,-1.546755,-5.705591,-3.091248,7.450588,8.118183,5.060714,5.154986,2.594556,-8.324748],[3.066183,-2.282837,-1.283577,-3.270612,-9.507370,9.209338,-4.508505,-4.948571,-5.505582,3.076843,7.988767],[1.621507,-4.451234,0.564718,4.561812,-8.122682,5.823409,-3.215646,-4.458691,2.499534,-0.228264,-8.180519]]], dtype = "float64")#candidate|5908|(6, 9, 11)|const|float64
bop_5909 = relay.floor_divide(call_5901.astype('float32'), relay.reshape(const_5908.astype('float32'), relay.shape_of(call_5901))) # shape=(6, 9, 11)
bop_5912 = relay.floor_divide(call_5902.astype('float32'), relay.reshape(const_5908.astype('float32'), relay.shape_of(call_5902))) # shape=(6, 9, 11)
output = bop_5909
output2 = bop_5912
func_5914 = relay.Function([], output)
mod['func_5914'] = func_5914
mod = relay.transform.InferType()(mod)
mutated_mod['func_5914'] = func_5914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5914_call = mutated_mod.get_global_var('func_5914')
call_5915 = func_5914_call()
output = call_5915
func_5916 = relay.Function([], output)
mutated_mod['func_5916'] = func_5916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3842_call = mod.get_global_var('func_3842')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_5920 = relay.TupleGetItem(func_3842_call(), 0)
call_5921 = relay.TupleGetItem(func_3843_call(), 0)
func_5825_call = mod.get_global_var('func_5825')
func_5826_call = mutated_mod.get_global_var('func_5826')
call_5927 = relay.TupleGetItem(func_5825_call(), 0)
call_5928 = relay.TupleGetItem(func_5826_call(), 0)
output = relay.Tuple([call_5920,call_5927,])
output2 = relay.Tuple([call_5921,call_5928,])
func_5929 = relay.Function([], output)
mod['func_5929'] = func_5929
mod = relay.transform.InferType()(mod)
output = func_5929()
func_5930 = relay.Function([], output)
mutated_mod['func_5930'] = func_5930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5929_call = mod.get_global_var('func_5929')
func_5930_call = mutated_mod.get_global_var('func_5930')
call_5974 = relay.TupleGetItem(func_5929_call(), 1)
call_5975 = relay.TupleGetItem(func_5930_call(), 1)
func_5093_call = mod.get_global_var('func_5093')
func_5094_call = mutated_mod.get_global_var('func_5094')
call_5982 = relay.TupleGetItem(func_5093_call(), 2)
call_5983 = relay.TupleGetItem(func_5094_call(), 2)
func_3523_call = mod.get_global_var('func_3523')
func_3525_call = mutated_mod.get_global_var('func_3525')
call_5992 = func_3523_call()
call_5993 = func_3523_call()
func_520_call = mod.get_global_var('func_520')
func_524_call = mutated_mod.get_global_var('func_524')
const_5996 = relay.const(8, dtype = "uint32")#candidate|5996|()|const|uint32
var_5997 = relay.var("var_5997", dtype = "uint32", shape = (130,))#candidate|5997|(130,)|var|uint32
call_5995 = relay.TupleGetItem(func_520_call(relay.reshape(const_5996.astype('uint32'), []), relay.reshape(var_5997.astype('uint32'), [1, 13, 10]), ), 0)
call_5998 = relay.TupleGetItem(func_524_call(relay.reshape(const_5996.astype('uint32'), []), relay.reshape(var_5997.astype('uint32'), [1, 13, 10]), ), 0)
output = relay.Tuple([call_5974,call_5982,call_5992,call_5995,const_5996,var_5997,])
output2 = relay.Tuple([call_5975,call_5983,call_5993,call_5998,const_5996,var_5997,])
func_5999 = relay.Function([var_5997,], output)
mod['func_5999'] = func_5999
mod = relay.transform.InferType()(mod)
var_6000 = relay.var("var_6000", dtype = "uint32", shape = (130,))#candidate|6000|(130,)|var|uint32
output = func_5999(var_6000)
func_6001 = relay.Function([var_6000], output)
mutated_mod['func_6001'] = func_6001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_6061 = relay.TupleGetItem(func_5010_call(), 0)
call_6062 = relay.TupleGetItem(func_5011_call(), 0)
output = call_6061
output2 = call_6062
func_6077 = relay.Function([], output)
mod['func_6077'] = func_6077
mod = relay.transform.InferType()(mod)
output = func_6077()
func_6078 = relay.Function([], output)
mutated_mod['func_6078'] = func_6078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5204_call = mod.get_global_var('func_5204')
func_5206_call = mutated_mod.get_global_var('func_5206')
call_6104 = relay.TupleGetItem(func_5204_call(), 0)
call_6105 = relay.TupleGetItem(func_5206_call(), 0)
output = relay.Tuple([call_6104,])
output2 = relay.Tuple([call_6105,])
func_6109 = relay.Function([], output)
mod['func_6109'] = func_6109
mod = relay.transform.InferType()(mod)
output = func_6109()
func_6110 = relay.Function([], output)
mutated_mod['func_6110'] = func_6110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5914_call = mod.get_global_var('func_5914')
func_5916_call = mutated_mod.get_global_var('func_5916')
call_6201 = func_5914_call()
call_6202 = func_5914_call()
output = relay.Tuple([call_6201,])
output2 = relay.Tuple([call_6202,])
func_6203 = relay.Function([], output)
mod['func_6203'] = func_6203
mod = relay.transform.InferType()(mod)
output = func_6203()
func_6204 = relay.Function([], output)
mutated_mod['func_6204'] = func_6204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5929_call = mod.get_global_var('func_5929')
func_5930_call = mutated_mod.get_global_var('func_5930')
call_6223 = relay.TupleGetItem(func_5929_call(), 0)
call_6224 = relay.TupleGetItem(func_5930_call(), 0)
func_4275_call = mod.get_global_var('func_4275')
func_4278_call = mutated_mod.get_global_var('func_4278')
const_6244 = relay.const([2,-1,-2,6,8,4,9,-3,2,-1,2,-5,5,4,4,10,-5,3,-10,7,6,-7,9,-9,8,4,-8,-5,-6,10,6,8,-1,-9,1,8,-7,-4,2,7,-5,-10,-10,7,3,8,7,1,8,-6,5,-6,-6,-9,6,-8,9,-6,-4,4,2,7,9,-5,7,8,5,4,-6,2,1,5,-8,8,5,9,6,-7,5,4,5,-2,5,4,9,5,5,-1,-10,7,10,3,4,-3,-3,-1,-10,-3,-8,-8,2,-10,-1,2,-7,9,4,5,3,9,6,8,-2,3,-7,-1,-4,8,10,-9,10,6,1,4,-1,3,2,7,2,5,3,-2,7,-4,-1,-5,2,-5,-7,8,1,-9,-3,-6,-6,-8,-7,6,2,2,-3,-4,-2,-8,9,9,5,4,4,-7,-1,1,-5,3,-7,3,-5,4,10,-8,-8,-1,-5,-3,3,3,-4,5,1,9,4,-9,10,8,-7,-9,3,8,-2,-9,10,10,-6,5,2,9,-5,9,-4,-5,1,-6,3,4,-4,2,-7,-9,-7,4,8,9,2,1,3,6,2,-10,-3,-10,-9,2,5,1,-8,5,-8,3,2,-5,2,1,-3,-8,-9,-5,3,6,-3,-1,-4,8,3,-4,-3,-10,-2,8,-5,-4,-7,3,-8,-9,8,1,8,-5,-9,4,8,9,-6,-5,-5,5,8,3,7,-7,2,6,-5,1,-8,8,-10,7,-5,-8,1,-4,1,7,7,-10,1,-1,5,-2,8,10,-10,5,-9,-8,4,1,7,-3,1,-5,9,1,-9,-8,7,-2,-7,2,10,8,2,-1,-9,-5,-8,-5,8,1,-10,-4,-9,6,5,-1,10,9,9,10,4,10,-10,7,10,-7,8,-9,-8,-2,3,-8,-5,2,8,-3,1,-4,-6,-9,2,-9,7,-9,3,10,7,8,6,7,5,-6,-1,7,5,6,-4,-8,-4,-8,8,-2,3,-6,-1,-2,-3,1,1,3,-4,3,-7,8,6,8,-1,9,-10,4,-10,-6,-5,6,4,3,-2,7,7,-9,-1,-7,7,10,-2,9,-1,6,-3,-3,4,7,4,5,9,-6,-3,5,-10,-9,9,6,-2,-7,5,-2,-8,6,2,5,7,4,-6,-10,-5,-1,-7,-6,1,6,3,-6,-8,5,4,-1,-3,1,-3,-6,-1,3,-3,-9,-2,10,-4,6,-9,-1,-1,5,7,-3,-8,9,3,-7,2,-3,-10,8,1,5,-3,4,9,7,-5,6,-9,-1,8,-1,4,3,-8,8,-4,-1,7,2,5,2,2,-1,3,-5,2,1,1,9,-8,-3,8,-1,9,3,-7,-4,-2,-1,-1,-8,-4,6,-7,-7,2,7,-3,-6,-4,-6,1,9,7,10,8,-8,1,8,-10,2,4,-3,10,9,6,4,-5,1,-6,-9,-1,5,-4,-9,-7,-8,2,9,-9,-7,-4,-2,-5,3,6,-6,-1,-10,-3,9,1,4,-9,5,-1,-2,-3,-6,-7,-2,2,-1,-8,-8,-1,-2,6,-6,-8,2,-3,-4,7,9,-10,-9,8,7,-3,8,4,4,5,-7,-1,4,-3,4,-10,-6,-5,-5,6,-8,7,-3,-7,2,-9,7,-8,-5,9,1,-4,2,-3,-2,-8,-8,-8,7,9,7,10,7,-3,9,4,3,-8,-7,3,9,-2,8,9,-5,-7,-6,6,-5,6,3,3,-7,-3,1,4,7,9,5,-3,8,-3,-6,-6,10,-4,-9,8,-7,10,7,10,-9,-9,8,-5,1,9,-8,10,-6,-8,-1,-2,-9,10,6,10,-8,-2,-3,3,6,3,10,10,8,-2,8,1,6,-3,-9,10,4,-6,-10,10,4,1,-7,-9,-1,-3,-2,-6,6,-3,-2,4,6,10,-10,5,2,-7,7,3,4,-6,-2,7,2,5,-4,8,9,-9,10,5,9,2,-8,3,3,-10,-4,3,8,9,-6,-5,7,-6,-7,-9,-10,2,6,-10,7,-1,9,-6,-3,3,4,-4,2,-7,10,-5,9,-8,3,1,2,-10,10,-9,2,2,-2,6,8,-4,1,9,-9,2,-7,-3,-9,-1,2,1,4,10,2,9,-9,-8,-4,-2,-6,-6,-9,1,3,-6,1,-9,-1,-10,-4,6,-4,6,3,-1,-2,1,6,-9,3,-6,-3,1,3,-8,4,10,8,6,-4,10,3,-7,-3,-2,4,-3,2,-2,9,1,5,1,-7,-5,-5,-5,6,1,-10,8,-10,10,6,8,1,-1,1,2,-1,7,3,6,5,9,-8,-9,7,-2,-1,-10,-10,-1,-5,8,-9,1,6,1,3,-9,8,-1,7,-10,6,3,3,6,6,-5,9,-8,3,8,-3,1,3,6,7,-10,-6,-10,6,6,-10,-10,-6,3,10,-7,8,-2,-2,-5,-4,4,8,8,10,8,4,-6,-6,2,-2,-9,-9,-5,9,1,-3,-3,9,-4,5,6,2,10,2,-6,-4,-9,5,-5,-2,-10,-1,7,-2,6,7,-7,-5,8,2,6,-8,9,8,10,8,6,-2,-9,6,-4,-9,-1,-1,-6,1,-8,-6,4,1,-6,3,8,7,-4,7,5,10,-2,2,-5,-1,-4,10,-3,-2,-9,2,-4,9,3,5,-1,3,9,3,-10,9,-1,4,9,2,-4,-9,5,-8,3,-6,2,8,-5,-5,3,-1,-2,-8,-4,1,9,8,-10,-2,-2,7,-6,-3,-6,-5,2,-3,4,5,6,-8,8,8,-4,10,9,-10,-10,5,3,7,10,10,-3,-2,3,-3,9,10,2,-1,-7,7,8,-5,3,-8,2,-7,-5,4,-2,-10,8,6,9,-2,-2,4,-10,3,-9,-8,-9,3,-7,-1,-6,2,8,-4,7,3,-5,-1,4,-8,-3,3,1,-5,5,-9,-6,4,9,2,4,-7,-2,3,10,-8,-8,-6,-7,9,-8,2,7,1,4,4,-9,-8,-9,7,-2,4,-6,-9,5,4,6,1,-1,-3,-6,-4,8,-7,3,-6,-9,-5,5,7,-3,5,-6,-7,9,-2,5,-1,10,-9,4,-9,8,-7,7,-2,2,2,-4,-4,8,-9,6,5,-9,-8,-10,5,1,10,5,-10,1,-6,-2,-9,8,3,-7,-9,-5,-9,-6,-2,8,6,-5,-2,-2,-1,-9,-7,6,3,10,-2,-3,-9,-7,7,-4,1,-3,6,-1,2,-5,9,2,-7,-5,9,-1,-6,-1,8,-8,-7,-9,-8,9,-2,-10,-8,-2,5,5,7,2,8,8,1,2,1,-2,-4,9,-5,-7,-3,9,8,2,2,1,-1,4,7,1,-1,-6,-4,-1,6,-4,-8,-7,-9,-2,-4,10,3,7,-2,-7,3,-10,-10,8,10,3,6,-4,10,5,10,7,-1,-3,-5,8,6,5,-10,10,-4,7,4,5,9,7,-7,-3,1,5,-10,3,2,2,10,1,-6,4,-8,-5,2,6,-8,-10,-7,-6,10,3,-9,4,-6,3,-1,-5,7,8,3,9,-5,2,-3,-8,-10,-5,-5,-8,3,-4,-10,5,-10,7,9,7,-6,-5,-1,-4,-6,-10,7,2,1,4,7,-9,4,-10,-3,-6,-10,-9,-6,2,3,2,9,-10,10,-2,-5,3,6,-4,-4,1,1,-5,-5,8,-6,-8,4,7,-3,-2,9,-8,1,-5,2,9,6,-2,-10,10,1,-2,5,-9,-8,7,-6,-2,8,-4,-3,-6,8,3,8,-3,-1,-2,-4,-7,1,8,10,6,9,-10,4,5,-4,9,2,-1,-7,-1,5,3,-9,-5,5,9,-1,8,5,-7,-2,2,-10,-6,7,8,-5,-8,-6,-5,4,4,-3,3,4,8,8,-1,-7,5,-6,6,8,6,-8,-2,5,10,-8,7,-4,-9,6,-1,7,-7,-1,-4,8,10,5,10,9,9,4,-1,-10,9,8,-9,7,10,10,6,8,-5,1,-2,-7,8,-6,10,-9,3,10,-4,7,-5,-2,6,9,2,7,2,8,7,-1,1,5,-7,6,-2,-9,-2,1,2,9,10,1,-4,-4,-2,-6,-2,7,-8,3,9,-8,-5,-1,9,-1,6,2,9,-10,8,-4,-9,-2,-5,6,8,-7,4,-10,-5,-3,2,-2,-1,4,10,-2,10,-5,-10,10,-8,-1,-2,5,-3,-10,-6,-10,5,-8,3,-4,-3,-9,-4,1,6,2,4,-7,8,3,-2,-10,-6,-3,-6,1,8,2,-1,-1,6,8,5,-8,5,-6,4,-5,4,-9,-5,-2,4,-2,-9,-3,10,-7,-7,7,-8,-8,-9,-5,10,-3,-8,-5,-9,7,-2,2,-4,-7,8,4,7,10,-4,6,1,-9,2,-1,-3,-8,-1,-8,-3,-7,-1,7,-2,3,-6,-9,8,-5,-4,-3,7,5,-4,-4,-10,-8,-1,-8,-3,-6,-9,5,-7,-10,-1,9,6,7,-8,9,-3,8,3,4,4,5,6,-1,-4,-5,5,2,-7,3,1,3,10,-5,-7,9,8,-7,5,9,-10,-4,-8,8,5,-1,5,10,7,-6,-4,-8,-8,7,4,5,-8,-10,-5,-2,-4,-1,-8,4,-6,-10,7,3,2,1,5,1,-6,2,1,-4,-6,4,5,9,-10,2,-4,3,4,-3,1,-2,5,8,7,-3,-8,9,6,-5,-7,-2,-1,-9,2,-1,4,-9,7,-6,-3,7,5,5,4,-8,8,-1,6,1,10,10,-7,-4,10,1,9,3,4,7,-7,-8,-4,3,1,-9,-7,-6,2,1,9,3,9,-6,-3,2,8,6,-1,4,-4,2,4,8,-7,5,-8,-8,6,2,6,3,4,-4,10,-8,10,8,9,9,-2,5,-5,-10,6,-10,4,6,5,-6,9,9,-5,3,-2,1,9,7,9,-4,-7,-7,10,-10,3,-9,-9,2,-7,7,9,3,-4,-1,6,-9,-2,6,10,-6,-10,-7,-5,-3,6,-2,-10,5,7,-8,-3,-8,3,-6,9,-8,-1,10,-6,8,4,6,-9,9,-9,9,-2,-7,-2,-8,7,10,10,3,4,7,5,4,-6,-8,-8,7,7,-4,6,-9,-7,2,8,5,-9,2,6,8,8,7,6,-7,7,-1,5,-8,9,-2,-5,1,-9,-10,8,9,5,-4,-1,5,4,8,5,2,6,-1,10,7,-6,6,-8,-1,-10,-5,6,8,-5,9,-4,4,-6,-3,8,8,8,7,1,-8,-3,-2,2,-10,8,-8,4,-2,-8,9,-4,9,2,-9,-6,-6,1,-9,-9,1,2,-10,9,7,5,-5,-4,3,2,1,-9,8,-4,-3,6,10,1,-4,-2,-10,-6,7,9,8,-4,-1,7,-2,-6,5,9,2,5,-4,7,-5,-9,3,-4,1,-3,10,-2,10,-1,2,10,2,7,4,10,-7,10,6,4,-4,2,6,8,3,-10,-9,-6,8,7,-9,1,-5,-7,-7,-10,5,-4,-7,-6,-2,-3,9,-4,-7,10,9,2,-4,-6,-8,-1,2,6,10,10,-10,-2,4,-7,6,-7,-1,-8,-5,-8,-5,-8,6,4,5,5,7,-4,3,4,-3,2,-9,10,9,7,-7,-8,-10,-7,8,-10,-9,-10,10,-2,4,-6,6,-6,-2,-8,-1,-1,3,-6,10,-8,4,1,-3,-6,9,-9,-10,2,10,-2,-8,-2,9,-4,3,9,-1,1,5,10,-1,-1,-3,-2,4,-6,5,7,-5,4,-2,-7,-3,-6,6,-2,-4,8,7,4,4,-8,-7,4,6,2,-2,3,-5,-4,7,-10,3,2,-7,-5,-6,9,-8,5,-2,-3,4,-10,7,4,3,8,-1,8,-5,-7,6,4,9,-9,6,7,-10,-3,-4,2,10,-5,-10,-6,-6,6,9,5,1,2,5,-9,8,-3,-8,2,-7,-6,-10,2,5,7,1,-3,5,10,-5,-7,9,-7,-5,5,-6,8,3,-1,9,-4,9,1,-5,7,9,4,4,-7,10,10,2,5,8,-8,5,9,9,9,-2,3,10,9,9,-2,7,9,10,9,-10,-8,8,9,7,3,-4,-1,4,-8,-8,-3,2,8,-6,3,1,10,-7,7,9,-5,6,9,6,4,8,10,-9,-6,-3,-10,-10,-6,-9,3,2,-3,2,10,-9,-3,-10,-1,-1,-4,5,3,-4,2,-1,-3,3,-3,10,-6,-6,8,-3,-6,7,1,4,7,10,-3,-8,-5,-4,7,-10,3,-1,-3,-1,9,1,-9,-3,-4,8,5,4,7,6,10,-7,3,3,10,-9,9,8,-4,4,3,5,-10,-8,5,-2,-4,-7,7,-5,3,6,3,-1,5,6,9,-8,10,-9,3,-1,2,-4,-1,6,4,-7,-9,7,-4,-4,6,-6,-1,3,-8,-1,-4,9,-3,-9,-8,5,5,-1,-4,-5,-10,-7,6,5,6,-4,8,-8,-8,-9,5,6,-5,-2,4,1,8,3,10,10,3,-6,5,5,3,2,9,2,4,4,9,2,-3,-3,-4,-7,-5,9,1,5,-7,3,-4,-9,-9,8,6,5,-6,2,-1,8,-4,-6,-8,-8,-10,10,-8,-4,-2,4,2,-9,10,-10,-10,5,-5,6,5,-10,-7,-9,-1,-9,-5,3,4,8,5,3,8,9,2,-9,-1,10,-1,-10,-3,-7,4,8,4,-2,-7,4,4,1,9,10,10,8,10,6,-9,-4,3,-2,9,7,6,1,3,3,3,1,-5,7,-7,1,-7,10,8,-8,4,10,7,2,-5,-3,10,2,-3,3,5,9,-10,4,10,4,7,8,7,-5,6,-9,-2,-6,-1,8,-4,7,-5,-3,-3,3,-10,6,-2,8,-7,-8,9,3,-2,7,7,3,3,8,-2,-7,-3,-10,2,-5,-8,-7,5,-6,-2,-7,6,-2,6,6,3,2,4,1,3,-4,-6,-7,-2,2,-7,2,8,4,-4,-4,4,2,-10,-6,6,-6,-1,-7,-6,-7,-7,8,-5,-1,-3,-3,-3,-4,8,7,-10,-8,4,5,4,6,-5,7,5,6,-3,4,5,-8,-8,7,-8,10,-2,-5,-9,10,-5,1,-6,-9,-9,6,1,-7,1,-6,10,-2,-10,-1,-9,-2,-7,-6,1,2,10,-4,-2,-9,-4,3,-10,-6,-3,9,7,8,-6,7,-4,7,-6,5,1,-4,-1,-9,-1,3,-4,-8,6,5,2,9,-10,10,-7,-6,10,-3,7,4], dtype = "uint32")#candidate|6244|(2730,)|const|uint32
call_6243 = func_4275_call(relay.reshape(const_6244.astype('uint32'), [15, 14, 13]), relay.reshape(const_6244.astype('uint32'), [15, 14, 13]), )
call_6245 = func_4275_call(relay.reshape(const_6244.astype('uint32'), [15, 14, 13]), relay.reshape(const_6244.astype('uint32'), [15, 14, 13]), )
func_2540_call = mod.get_global_var('func_2540')
func_2544_call = mutated_mod.get_global_var('func_2544')
const_6254 = relay.const([[9,2],[-4,4],[9,10],[-4,7],[9,-7],[-10,-9],[-5,-5],[-2,-1],[-9,-7],[-10,-4],[6,4],[-7,5],[5,-8],[5,7],[6,-10],[-4,-7],[6,5],[-6,4],[5,3],[-2,-7],[2,-3],[5,-8],[-1,9],[-9,-10],[2,-10],[6,-4],[3,2],[8,2],[5,7],[-7,-10],[1,-6],[6,5],[3,8],[-9,-2],[-10,8],[4,-5],[7,-8],[7,3],[-5,-8],[6,1],[-7,1],[-1,-8],[7,-6],[10,-9],[-5,1],[5,10],[6,-3],[3,2],[-2,8],[5,-2],[-6,3],[-4,-2],[9,1],[-9,8],[-2,8],[4,7],[-2,-7],[3,-7],[-2,2],[3,4],[-7,-10],[9,4],[8,7],[1,-7],[-9,9],[-8,8],[9,5],[-3,-7],[-8,-9],[-4,6],[-4,-3],[-7,7],[5,-7],[-4,-2],[-4,-4],[7,-1],[8,-2],[2,4],[3,10],[-8,-7],[5,-3],[-8,2],[1,2],[9,5],[-1,2],[4,-1],[3,-8],[-2,-3],[8,6],[10,-9],[5,-1],[3,4],[10,9],[-3,-3],[-2,9],[-8,1]], dtype = "uint32")#candidate|6254|(96, 2)|const|uint32
var_6255 = relay.var("var_6255", dtype = "int32", shape = (112,))#candidate|6255|(112,)|var|int32
call_6253 = relay.TupleGetItem(func_2540_call(relay.reshape(const_6254.astype('uint32'), [4, 12, 4]), relay.reshape(const_6254.astype('uint32'), [4, 12, 4]), relay.reshape(var_6255.astype('int32'), [112,]), ), 2)
call_6256 = relay.TupleGetItem(func_2544_call(relay.reshape(const_6254.astype('uint32'), [4, 12, 4]), relay.reshape(const_6254.astype('uint32'), [4, 12, 4]), relay.reshape(var_6255.astype('int32'), [112,]), ), 2)
func_5788_call = mod.get_global_var('func_5788')
func_5789_call = mutated_mod.get_global_var('func_5789')
call_6257 = relay.TupleGetItem(func_5788_call(), 4)
call_6258 = relay.TupleGetItem(func_5789_call(), 4)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_6271 = relay.TupleGetItem(func_4016_call(), 0)
call_6272 = relay.TupleGetItem(func_4018_call(), 0)
output = relay.Tuple([call_6223,call_6243,const_6244,call_6253,const_6254,var_6255,call_6257,call_6271,])
output2 = relay.Tuple([call_6224,call_6245,const_6244,call_6256,const_6254,var_6255,call_6258,call_6272,])
func_6273 = relay.Function([var_6255,], output)
mod['func_6273'] = func_6273
mod = relay.transform.InferType()(mod)
var_6274 = relay.var("var_6274", dtype = "int32", shape = (112,))#candidate|6274|(112,)|var|int32
output = func_6273(var_6274)
func_6275 = relay.Function([var_6274], output)
mutated_mod['func_6275'] = func_6275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_6302 = relay.TupleGetItem(func_4160_call(), 1)
call_6303 = relay.TupleGetItem(func_4161_call(), 1)
func_5093_call = mod.get_global_var('func_5093')
func_5094_call = mutated_mod.get_global_var('func_5094')
call_6307 = relay.TupleGetItem(func_5093_call(), 2)
call_6308 = relay.TupleGetItem(func_5094_call(), 2)
var_6317 = relay.var("var_6317", dtype = "float32", shape = (3, 2, 9))#candidate|6317|(3, 2, 9)|var|float32
bop_6318 = relay.right_shift(call_6302.astype('int16'), relay.reshape(var_6317.astype('int16'), relay.shape_of(call_6302))) # shape=(3, 2, 9)
bop_6321 = relay.right_shift(call_6303.astype('int16'), relay.reshape(var_6317.astype('int16'), relay.shape_of(call_6303))) # shape=(3, 2, 9)
output = relay.Tuple([call_6307,bop_6318,])
output2 = relay.Tuple([call_6308,bop_6321,])
func_6323 = relay.Function([var_6317,], output)
mod['func_6323'] = func_6323
mod = relay.transform.InferType()(mod)
mutated_mod['func_6323'] = func_6323
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6324 = relay.var("var_6324", dtype = "float32", shape = (3, 2, 9))#candidate|6324|(3, 2, 9)|var|float32
func_6323_call = mutated_mod.get_global_var('func_6323')
call_6325 = func_6323_call(var_6324)
output = call_6325
func_6326 = relay.Function([var_6324], output)
mutated_mod['func_6326'] = func_6326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5710_call = mod.get_global_var('func_5710')
func_5711_call = mutated_mod.get_global_var('func_5711')
call_6328 = func_5710_call()
call_6329 = func_5710_call()
var_6339 = relay.var("var_6339", dtype = "float32", shape = (6, 9, 11))#candidate|6339|(6, 9, 11)|var|float32
bop_6340 = relay.bitwise_or(call_6328.astype('int16'), relay.reshape(var_6339.astype('int16'), relay.shape_of(call_6328))) # shape=(6, 9, 11)
bop_6343 = relay.bitwise_or(call_6329.astype('int16'), relay.reshape(var_6339.astype('int16'), relay.shape_of(call_6329))) # shape=(6, 9, 11)
func_5817_call = mod.get_global_var('func_5817')
func_5819_call = mutated_mod.get_global_var('func_5819')
call_6360 = relay.TupleGetItem(func_5817_call(), 0)
call_6361 = relay.TupleGetItem(func_5819_call(), 0)
func_4974_call = mod.get_global_var('func_4974')
func_4977_call = mutated_mod.get_global_var('func_4977')
var_6373 = relay.var("var_6373", dtype = "uint16", shape = (16,))#candidate|6373|(16,)|var|uint16
const_6374 = relay.const([4,-7,4,-6,4,6,-6,-6,-9,-7,-3,-4,1,-8,-5,-6,-4,6,5,-8,-1,-7,-9,9,-3,6,1,-2,9,7,7,-3,-6,-1,-10,-2,-1,10,-1,-10,5,-2,-4,-1,6,-7,1,4,-10,10,1,-10,10,4,9,8,8,2,-2,-6,-1,1,-4,1,7,-3,3,3,-1,7,-1,-4,4,-2,9,7,3,-1,-3,1,4,-2,-5,-2,-4,-8,5,5,-10,-8,-6,-6,-2,-6,-7,-7,-8,10,4,2,3,2,-2,9,-5,-10,9,10,2,8,-10,10,4,3,-2,-7,-5,-2,5,10,8,8,3,-1,-3,-4,-4,3,6,9,1,4,-2,-2,10,6,9,5,4,-8,-3,-2,-9,-8,-10,-5,-10,4,7,-10,7,3,9,-1,4,-2,2,-5,-8,9,9,-1,-5,2,3,7,7,8,-9,-1,-8,9,6,4,8,-5,9,7,-1,4,-4,-5,-2,-9,4,4,-4,4,9,-5,1,-8,-6,-4,8,2,-10,3,4,3,-5,-9,-1,10,-3,1,-4,6,-5,-6,8,-3,7,-10,-1,8,-1,-6,4,-4,-10,10,-5,-4], dtype = "uint16")#candidate|6374|(224,)|const|uint16
call_6372 = func_4974_call(relay.reshape(var_6373.astype('uint16'), [1, 8, 2]), relay.reshape(const_6374.astype('uint16'), [14, 8, 2]), )
call_6375 = func_4974_call(relay.reshape(var_6373.astype('uint16'), [1, 8, 2]), relay.reshape(const_6374.astype('uint16'), [14, 8, 2]), )
func_520_call = mod.get_global_var('func_520')
func_524_call = mutated_mod.get_global_var('func_524')
var_6380 = relay.var("var_6380", dtype = "uint32", shape = ())#candidate|6380|()|var|uint32
const_6381 = relay.const([-3,-10,2,3,3,4,2,-6,7,-1,-3,-3,4,10,6,7,-8,-6,3,10,5,-1,3,-3,7,9,-8,4,-2,-2,-6,8,6,-4,-5,4,-10,6,-4,-8,-7,-9,-9,7,-9,-2,9,-1,-7,-5,-1,4,-6,9,-1,9,3,-3,4,6,10,-10,-9,6,-8,-8,-10,10,-3,3,5,-4,-3,1,-4,3,-6,-4,4,2,-9,-10,-5,4,-1,-3,-3,5,1,-5,4,10,-1,-6,4,-8,10,-1,-10,2,4,-8,-4,2,10,2,-5,3,-9,-10,6,-4,-6,1,2,7,-1,-2,9,-8,-3,-2,-5,2,-3,4,10,6,-5,-2], dtype = "uint32")#candidate|6381|(130,)|const|uint32
call_6379 = relay.TupleGetItem(func_520_call(relay.reshape(var_6380.astype('uint32'), []), relay.reshape(const_6381.astype('uint32'), [1, 13, 10]), ), 0)
call_6382 = relay.TupleGetItem(func_524_call(relay.reshape(var_6380.astype('uint32'), []), relay.reshape(const_6381.astype('uint32'), [1, 13, 10]), ), 0)
func_5450_call = mod.get_global_var('func_5450')
func_5452_call = mutated_mod.get_global_var('func_5452')
call_6384 = relay.TupleGetItem(func_5450_call(), 1)
call_6385 = relay.TupleGetItem(func_5452_call(), 1)
func_5450_call = mod.get_global_var('func_5450')
func_5452_call = mutated_mod.get_global_var('func_5452')
call_6393 = relay.TupleGetItem(func_5450_call(), 1)
call_6394 = relay.TupleGetItem(func_5452_call(), 1)
output = relay.Tuple([bop_6340,call_6360,call_6372,var_6373,const_6374,call_6379,var_6380,const_6381,call_6384,call_6393,])
output2 = relay.Tuple([bop_6343,call_6361,call_6375,var_6373,const_6374,call_6382,var_6380,const_6381,call_6385,call_6394,])
func_6412 = relay.Function([var_6339,var_6373,var_6380,], output)
mod['func_6412'] = func_6412
mod = relay.transform.InferType()(mod)
var_6413 = relay.var("var_6413", dtype = "float32", shape = (6, 9, 11))#candidate|6413|(6, 9, 11)|var|float32
var_6414 = relay.var("var_6414", dtype = "uint16", shape = (16,))#candidate|6414|(16,)|var|uint16
var_6415 = relay.var("var_6415", dtype = "uint32", shape = ())#candidate|6415|()|var|uint32
output = func_6412(var_6413,var_6414,var_6415,)
func_6416 = relay.Function([var_6413,var_6414,var_6415,], output)
mutated_mod['func_6416'] = func_6416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5450_call = mod.get_global_var('func_5450')
func_5452_call = mutated_mod.get_global_var('func_5452')
call_6429 = relay.TupleGetItem(func_5450_call(), 0)
call_6430 = relay.TupleGetItem(func_5452_call(), 0)
func_4249_call = mod.get_global_var('func_4249')
func_4252_call = mutated_mod.get_global_var('func_4252')
var_6456 = relay.var("var_6456", dtype = "int32", shape = (2, 56))#candidate|6456|(2, 56)|var|int32
const_6457 = relay.const([-1,-7,5,9,7,4,-5,7,-4,6,-10,10,-9,-6,-6,-4,-2,-3,9,6,-10,-7,9,9,-7,-7,-5,8,8,10,6,10,-5,3,-6,1,1,-9,2,-4,-6,-5,-1,-6,6,2,9,8,-4,-9,3,-6,-8,5,-4,8,-1,10,5,-1,-1,-2,3,-6,4,7,5,-10,-8,-4,7,4,-4,-1,2,1,5,4,5,4,5,-5,-5,-5,3,5,1,7,4,6,8,-9,-1,2,5,3,9,2,6,-7,9,6,-3,-5,9,-3,9,1,-7,3,-8,3,8,-1,5,1,2,-3,-10,-2,-8,-7,8,-6,-10,-8,9,8,-7,2,-7,-5,10,-1,-4,1,-9,10,6,-2,-5,7,-2,-1,-3,10,-6,8,10,-8,4,8,-10,1,-4,-4,-5,-5,7,-3,-9,-2,-5,2,-2,4,2,1,10,-7,5,5,2,5,6,-2,3,9,-4,5,-1,-4,-1,-4,7,7,-1,-1,4,4,8,-2], dtype = "uint32")#candidate|6457|(192,)|const|uint32
call_6455 = relay.TupleGetItem(func_4249_call(relay.reshape(var_6456.astype('int32'), [112,]), relay.reshape(const_6457.astype('uint32'), [192,]), ), 0)
call_6458 = relay.TupleGetItem(func_4252_call(relay.reshape(var_6456.astype('int32'), [112,]), relay.reshape(const_6457.astype('uint32'), [192,]), ), 0)
func_3771_call = mod.get_global_var('func_3771')
func_3773_call = mutated_mod.get_global_var('func_3773')
call_6489 = relay.TupleGetItem(func_3771_call(relay.reshape(call_6429.astype('float64'), [6, 9, 11])), 9)
call_6490 = relay.TupleGetItem(func_3773_call(relay.reshape(call_6429.astype('float64'), [6, 9, 11])), 9)
uop_6495 = relay.rsqrt(var_6456.astype('float32')) # shape=(2, 56)
func_5761_call = mod.get_global_var('func_5761')
func_5762_call = mutated_mod.get_global_var('func_5762')
call_6497 = relay.TupleGetItem(func_5761_call(), 0)
call_6498 = relay.TupleGetItem(func_5762_call(), 0)
bop_6503 = relay.divide(uop_6495.astype('float32'), relay.reshape(var_6456.astype('float32'), relay.shape_of(uop_6495))) # shape=(2, 56)
output = relay.Tuple([call_6429,call_6455,const_6457,call_6489,call_6497,bop_6503,])
output2 = relay.Tuple([call_6430,call_6458,const_6457,call_6490,call_6498,bop_6503,])
func_6522 = relay.Function([var_6456,], output)
mod['func_6522'] = func_6522
mod = relay.transform.InferType()(mod)
mutated_mod['func_6522'] = func_6522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6523 = relay.var("var_6523", dtype = "int32", shape = (2, 56))#candidate|6523|(2, 56)|var|int32
func_6522_call = mutated_mod.get_global_var('func_6522')
call_6524 = func_6522_call(var_6523)
output = call_6524
func_6525 = relay.Function([var_6523], output)
mutated_mod['func_6525'] = func_6525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5280_call = mod.get_global_var('func_5280')
func_5281_call = mutated_mod.get_global_var('func_5281')
call_6551 = relay.TupleGetItem(func_5280_call(), 0)
call_6552 = relay.TupleGetItem(func_5281_call(), 0)
output = relay.Tuple([call_6551,])
output2 = relay.Tuple([call_6552,])
func_6554 = relay.Function([], output)
mod['func_6554'] = func_6554
mod = relay.transform.InferType()(mod)
mutated_mod['func_6554'] = func_6554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6554_call = mutated_mod.get_global_var('func_6554')
call_6555 = func_6554_call()
output = call_6555
func_6556 = relay.Function([], output)
mutated_mod['func_6556'] = func_6556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4137_call = mod.get_global_var('func_4137')
func_4138_call = mutated_mod.get_global_var('func_4138')
call_6578 = relay.TupleGetItem(func_4137_call(), 2)
call_6579 = relay.TupleGetItem(func_4138_call(), 2)
output = relay.Tuple([call_6578,])
output2 = relay.Tuple([call_6579,])
func_6617 = relay.Function([], output)
mod['func_6617'] = func_6617
mod = relay.transform.InferType()(mod)
output = func_6617()
func_6618 = relay.Function([], output)
mutated_mod['func_6618'] = func_6618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5710_call = mod.get_global_var('func_5710')
func_5711_call = mutated_mod.get_global_var('func_5711')
call_6668 = func_5710_call()
call_6669 = func_5710_call()
func_5338_call = mod.get_global_var('func_5338')
func_5340_call = mutated_mod.get_global_var('func_5340')
call_6705 = relay.TupleGetItem(func_5338_call(), 0)
call_6706 = relay.TupleGetItem(func_5340_call(), 0)
output = relay.Tuple([call_6668,call_6705,])
output2 = relay.Tuple([call_6669,call_6706,])
func_6708 = relay.Function([], output)
mod['func_6708'] = func_6708
mod = relay.transform.InferType()(mod)
output = func_6708()
func_6709 = relay.Function([], output)
mutated_mod['func_6709'] = func_6709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5788_call = mod.get_global_var('func_5788')
func_5789_call = mutated_mod.get_global_var('func_5789')
call_6767 = relay.TupleGetItem(func_5788_call(), 3)
call_6768 = relay.TupleGetItem(func_5789_call(), 3)
const_6771 = relay.const([[2,-2],[-5,6],[-10,-5],[-5,-2],[1,2],[-9,2],[2,-7],[8,6],[-9,-8],[9,2],[-2,-2],[-3,-5],[-10,-4],[9,-3],[10,8],[1,-9],[-10,5],[-3,-3],[-3,-10],[-7,3],[-4,-8],[-5,-6],[8,2],[-5,10],[-9,9],[1,7],[-4,2],[-1,-1],[-4,-8],[8,1],[-5,7],[-7,7],[3,10],[-7,10],[5,5],[9,-1],[-2,9],[4,-8],[-6,-10],[4,-2],[5,-3],[-10,-4],[-4,-1],[4,5],[2,6],[7,-4],[10,7],[1,-3],[1,1],[-8,4],[-5,-7],[6,4],[8,-5],[-7,8],[-3,3],[4,2],[-1,-7],[-9,5],[6,2],[-5,-4],[-8,10],[6,-3],[6,-4],[-4,-8],[-9,-6],[-5,-4],[-4,-7],[-3,-4],[9,-6],[-5,-5],[5,-1],[-6,-5],[-1,-7],[3,-9],[6,-8],[8,9],[9,4],[4,-2],[9,-9],[-2,3],[-5,-2],[-10,7],[-9,-6],[-8,-4],[-10,-8],[-8,-5],[-6,1],[7,1],[-4,10],[4,-1],[-2,-9],[2,7],[2,8],[10,6],[-8,-3],[-2,-6]], dtype = "uint32")#candidate|6771|(96, 2)|const|uint32
bop_6772 = relay.minimum(call_6767.astype('uint64'), relay.reshape(const_6771.astype('uint64'), relay.shape_of(call_6767))) # shape=(96, 2)
bop_6775 = relay.minimum(call_6768.astype('uint64'), relay.reshape(const_6771.astype('uint64'), relay.shape_of(call_6768))) # shape=(96, 2)
output = relay.Tuple([bop_6772,])
output2 = relay.Tuple([bop_6775,])
func_6778 = relay.Function([], output)
mod['func_6778'] = func_6778
mod = relay.transform.InferType()(mod)
output = func_6778()
func_6779 = relay.Function([], output)
mutated_mod['func_6779'] = func_6779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5450_call = mod.get_global_var('func_5450')
func_5452_call = mutated_mod.get_global_var('func_5452')
call_6955 = relay.TupleGetItem(func_5450_call(), 1)
call_6956 = relay.TupleGetItem(func_5452_call(), 1)
output = relay.Tuple([call_6955,])
output2 = relay.Tuple([call_6956,])
func_6957 = relay.Function([], output)
mod['func_6957'] = func_6957
mod = relay.transform.InferType()(mod)
mutated_mod['func_6957'] = func_6957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6957_call = mutated_mod.get_global_var('func_6957')
call_6958 = func_6957_call()
output = call_6958
func_6959 = relay.Function([], output)
mutated_mod['func_6959'] = func_6959
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7001 = relay.const([[[-0.640964,-1.525413,6.057104,7.584891,-0.810763,-8.585378,-2.925899,6.593034,-2.495017,6.958556,5.611050,-6.456617,2.083894],[-8.882094,-3.371775,-0.280231,-0.389368,-4.753206,1.122864,-5.540129,3.544021,-4.256631,5.817798,-5.494114,-2.073880,3.489946],[2.722055,0.477934,-4.518900,-0.382077,4.460664,3.801181,9.740008,0.982066,2.805996,-2.905646,-1.592283,1.260432,9.479188],[6.242427,8.302098,4.605390,2.008723,0.971576,9.945600,-6.665705,1.331688,-9.298429,8.224037,4.673413,-1.780484,2.047237],[-1.534215,-0.069966,3.244748,0.977580,-7.098286,4.544898,7.919646,-4.474877,-7.950967,9.338701,-7.736027,-1.163334,2.328862],[2.558492,-4.789144,-0.375707,6.706941,-6.425696,1.968258,3.597252,-7.284720,0.748451,-5.816914,-0.934381,-5.079980,-0.199105],[-5.900143,-2.748415,-4.348034,7.127097,-5.888799,7.102950,-6.477275,-8.365003,0.269204,-5.764777,3.181076,-3.206066,4.805057],[-7.144818,-0.422269,-8.994400,-5.747691,6.857686,-6.366258,9.792051,-3.740609,-0.360917,-6.587261,-0.209775,4.957626,3.319343]],[[-6.900565,-0.458637,4.847027,6.087681,8.082728,-2.302306,-4.612898,-5.618504,-2.256776,-7.257152,-1.733515,4.619436,8.164818],[-7.875417,-0.080191,7.100591,6.053286,-1.977061,4.365330,2.654072,-7.283188,-9.600025,8.051061,5.692042,-3.322842,-3.159458],[9.874502,6.740904,-2.586441,9.826608,2.854817,1.934914,-0.216104,3.035384,-5.865652,-5.668701,-1.644560,9.950569,1.284467],[8.197195,-9.999336,-6.400045,-9.671241,6.508094,1.278292,6.330393,9.442187,-3.851594,9.428474,3.117256,-5.129061,-1.135096],[-0.500155,-1.629955,-8.751928,1.510407,0.550554,-8.335036,4.261311,-6.789280,-0.536281,-9.486512,3.187470,8.330038,-6.965676],[-0.522121,-2.504543,-1.021885,-6.317609,-6.217125,-0.494331,-9.614020,8.547719,9.373602,-6.356115,-7.614744,-2.592667,-0.112898],[9.642352,-5.061784,6.874656,-0.028538,9.287250,-7.280014,1.318694,-2.211840,2.214987,1.516764,-4.585424,7.175245,8.265660],[7.624488,-0.154011,8.867497,-3.907114,-4.576010,-7.486594,1.044477,3.357770,0.719352,7.151707,-7.213463,-6.483107,8.589154]],[[6.874451,0.283420,-7.164116,-2.656983,5.705000,-5.288714,0.660492,2.433929,8.350287,4.480962,-9.701139,8.705560,-4.844553],[-0.789281,-4.781230,8.148998,3.036406,-5.339664,-9.770414,-1.829534,-9.562076,1.315338,6.813749,6.189333,8.060653,6.788962],[6.097787,5.297148,1.409997,5.039701,-0.007980,7.641139,8.076843,2.587156,-7.552657,0.521437,3.139189,-5.483613,9.699060],[7.957864,-1.449142,9.942785,-9.040233,1.578068,-9.016095,3.272024,-1.924574,-6.975028,-9.767252,6.145261,-7.312203,3.428006],[7.982653,-8.344828,3.324538,6.397349,4.532818,3.774078,-4.388029,6.457789,4.248822,0.801521,8.285950,-7.606829,4.895767],[-2.209056,-4.153964,6.014572,4.327888,5.185804,-5.028819,-8.100478,1.507499,5.935852,-1.028654,-4.892026,8.892124,2.904332],[-4.967460,-0.854992,0.044381,0.274900,-0.271696,7.144454,-2.253914,-8.926362,-1.660729,-0.618067,-1.259241,7.349849,-4.378808],[0.915587,3.190202,-6.241337,-0.924586,1.934774,6.190356,5.661430,-9.444692,0.999449,1.747969,8.178737,-3.430765,5.110069]],[[9.658052,-1.306833,3.751645,8.129718,-2.385431,-5.350503,-7.076113,9.283793,-0.769623,8.046696,3.484490,2.706706,-2.928601],[-9.773314,4.186518,8.134676,-4.221369,-3.809234,0.349963,-5.129670,-9.025444,-7.316300,5.052250,-9.474553,0.130741,-1.562222],[3.965362,4.887575,-6.955874,-8.838792,-9.296135,-7.089972,9.898980,-1.844107,-2.741132,0.202087,8.359408,4.414507,8.528965],[-7.009836,2.852553,1.488318,-0.081360,-7.692700,7.572635,-0.391150,-8.496005,-4.374821,-6.825457,9.376756,-5.437364,2.522911],[-7.406613,-8.761471,-7.090644,-1.948944,5.754965,-6.721766,2.433916,-1.426173,-4.318997,-1.448227,4.631210,-5.684909,7.758427],[-9.517648,-9.867793,1.888218,-4.090634,-0.705759,-8.182789,-9.346835,5.401726,2.906866,2.030377,1.679573,8.453170,-7.661181],[-8.146515,-3.503918,-7.027747,1.372704,-9.768528,-6.202350,-9.517376,5.341847,6.277622,-8.152899,6.872549,2.856920,1.181526],[-1.136903,-5.567404,7.943448,6.227254,-7.892808,-9.316382,5.255714,-9.955088,6.358788,-0.695820,0.965593,-1.658393,-6.349855]],[[-4.545767,-9.836307,-0.461498,-3.932935,-5.700296,-6.965504,0.971924,0.695337,-0.250846,-0.338759,-5.365330,-3.634086,-2.019332],[9.789785,3.352917,-6.456815,9.783526,-8.147011,9.554318,0.137565,-5.588545,-3.983564,-2.660746,-9.869079,-9.751196,-2.328030],[-5.871525,6.435444,-4.370542,-9.673884,6.372392,4.944468,8.129727,-5.930475,-9.209371,-4.866041,2.193732,-5.107934,3.147990],[9.953120,1.823096,-5.073252,-0.946220,0.140529,-9.394103,-8.819680,-8.755063,0.146204,3.341732,1.551062,6.586658,2.029360],[-9.430343,-3.821854,-8.428296,2.361196,4.871962,6.359193,0.320559,2.653548,-4.059334,9.308031,9.796176,0.978859,2.407748],[2.697668,-0.632072,6.965437,-1.099380,-9.303048,6.770277,9.900919,-2.268380,-9.489262,7.827870,9.518569,-7.529854,-1.732952],[7.528604,-4.686263,-3.095354,0.318660,-0.205917,9.488765,4.060600,1.622401,1.750496,5.010727,-5.458904,-2.072798,6.984853],[4.433196,-8.785684,-9.589679,0.825177,-1.865267,-0.701340,6.406009,0.249821,6.869319,-3.142824,9.719883,4.248227,0.746560]],[[4.570454,3.040785,-9.840905,-5.259633,3.997653,-2.285746,9.225914,-8.238973,0.725059,1.979350,8.681497,4.912677,5.552924],[1.450415,4.224445,-1.126289,-7.506436,-5.692562,1.993587,-2.746609,6.226891,7.249694,1.921813,-8.566439,3.239089,9.934460],[-2.824756,2.949405,-2.732137,1.192486,1.636444,-0.453922,5.983929,-9.750062,7.384136,9.638351,-4.823314,1.083598,8.285921],[-8.329497,9.413403,9.933465,-8.906931,-7.109819,9.923341,-6.327238,6.884168,0.676108,7.832466,0.969714,-3.220893,1.047458],[-1.594235,-6.831930,-6.589317,-8.652950,3.513783,-8.550804,-4.622474,-4.435523,-7.823353,3.687421,8.187280,-0.693639,-7.299873],[3.971288,2.458574,1.417888,1.483019,0.017768,-9.048863,-3.587735,3.710264,4.199646,5.061617,2.320216,9.652352,6.836739],[3.485959,9.203759,-3.407824,-2.880548,-2.199009,4.762081,-8.517162,5.846932,-1.925415,-8.305142,-5.797296,-1.462095,0.188980],[1.709966,-5.934708,7.193273,1.240378,7.700868,0.227906,3.094601,-2.146001,8.197612,5.023558,7.937968,-9.036702,8.072045]],[[-8.725697,-1.629740,2.404327,-9.221948,7.490372,-2.068418,-3.549381,-5.487198,5.420085,8.198854,-2.221829,-2.454883,-1.930844],[0.286373,2.209648,0.962602,-8.513129,4.949395,-1.627319,9.359666,6.909398,-2.392384,-0.055653,0.899561,-8.309206,6.154411],[-2.145495,-4.039522,6.355825,5.315191,-0.673703,-6.504661,9.862276,-9.864092,9.303966,4.862871,0.333979,6.531455,-5.767221],[-0.277659,0.602969,2.333596,0.553848,-6.106314,5.994443,-3.245407,8.075012,3.301161,-0.591126,-6.898010,6.907233,3.747917],[7.330571,-4.150501,5.297841,-5.206005,-6.784313,-4.066654,4.712360,5.140034,8.723926,-1.404161,-9.455611,2.077156,3.027615],[9.082655,5.421241,-7.629161,2.323856,-5.163870,9.907210,3.473950,-1.522413,7.790101,9.759494,-3.489593,-5.171313,0.025738],[-4.878302,-1.140373,-4.161358,6.398569,-1.731875,-8.205547,-1.502704,-7.876365,7.362475,-2.664825,-2.203765,9.175500,-6.327861],[-4.898056,-6.473273,2.658657,-3.440887,-4.069178,2.118080,-5.893819,0.202583,2.588272,7.932155,4.748920,-5.580265,-8.347758]],[[-4.694029,-8.017895,2.091300,1.774940,-8.489353,3.115802,-9.412880,3.246023,9.673152,8.026478,-9.622731,-6.496111,2.308404],[-0.740950,0.249505,-0.879062,-2.934814,-8.579384,3.258042,1.374899,8.048574,-1.018381,-7.659664,5.326634,1.935440,5.739985],[-3.785452,0.785436,1.196984,7.514671,-1.668523,-0.978070,-1.527089,-4.935236,9.214991,1.113785,-2.087910,-3.789276,4.519128],[-5.263783,0.446503,-1.887490,-0.204209,9.901087,8.645876,-0.632792,-6.703095,-4.574060,-2.394407,-9.342308,-1.041958,-3.689244],[9.882253,3.153027,-6.725407,8.717896,7.331944,7.763118,5.182845,-3.197406,2.176535,-9.168320,9.889030,-9.325040,7.064840],[0.249504,-0.159199,9.880047,0.053665,-5.936227,-0.644725,9.692845,4.273519,2.247773,2.818811,3.356162,0.376165,-2.494014],[-5.396759,-1.531218,6.153351,1.297573,8.754992,0.078202,-9.670374,-1.332404,4.628402,-1.013279,7.974638,7.754515,9.217480],[5.845148,-1.563333,-6.432550,7.784388,-4.813650,-2.548108,-4.108296,-4.906419,-9.937313,-4.856309,-2.854433,-1.256066,-9.047812]],[[-2.634880,-7.589796,7.974258,-0.727684,7.880592,-0.494340,4.089599,4.050018,6.634355,0.850065,5.522610,-2.309329,1.962957],[6.269452,5.975830,0.771132,0.593876,-2.156045,6.555773,-0.138575,2.249969,8.966451,-3.352382,-5.879295,4.926951,4.581918],[-1.068538,-1.625542,-4.953377,5.506197,6.306305,-8.910842,9.594831,8.582663,2.328725,0.226755,1.789502,-4.011941,-4.012581],[1.891700,-5.873124,-4.728043,-0.810180,-4.153140,3.936492,-9.753243,-1.896890,9.963884,4.947895,5.241872,5.265814,4.335524],[7.313618,-5.230733,3.553661,9.010330,-8.084114,-8.647009,-8.744776,-8.622491,-3.868218,3.264128,7.575062,-8.559173,0.746283],[9.680957,7.318602,3.479302,-6.492823,-3.604120,6.051076,-9.674824,2.070310,-7.037013,7.847493,9.344755,-0.140489,0.658013],[-1.958488,-4.210985,3.899903,-6.065333,3.909487,4.194460,8.473494,5.624908,-6.250044,-8.667660,-5.576137,3.507288,4.337822],[4.425635,7.813223,1.053690,0.409524,-0.496380,-5.186346,4.654784,-1.427552,0.273531,-8.070366,3.311422,-5.285784,-7.248167]],[[-8.534782,3.984121,9.369474,1.846863,5.669230,-2.270904,5.048898,0.344579,0.219591,9.647090,6.435537,2.832499,7.140552],[-6.238455,-4.643080,-0.069147,4.475827,3.810245,-0.991143,6.932547,5.259745,-9.816783,-9.046043,-0.192874,-7.627037,-4.125912],[9.745716,4.731649,-3.610301,-2.472263,4.573526,4.759977,-0.734750,9.649989,-8.406272,-5.289854,-9.972432,-1.861675,-2.267057],[-6.009132,-1.664586,4.143746,-1.710396,-2.158477,-1.575852,2.870112,3.623397,-6.391053,1.077239,-1.791014,4.987418,-4.842747],[-9.710096,-5.040230,8.778171,5.094367,0.189292,4.890445,-9.917772,-1.907468,4.809155,-7.488417,5.989002,-8.517903,-1.571360],[-9.769849,-9.209839,5.912394,8.420988,9.398577,-7.796439,-6.314456,8.162428,1.727306,5.979150,1.478638,3.100764,5.886005],[-8.270266,-1.054757,-0.004358,-4.482893,8.115291,4.523192,-2.842742,5.071085,-3.565133,-8.602274,-6.023636,1.093116,-3.865028],[-0.910003,-5.769841,-5.983069,0.315772,6.234293,1.260239,-4.455989,5.837215,4.940520,1.312140,-4.519135,-3.517847,6.192227]],[[-8.882805,-0.301228,6.689724,-5.522418,-7.841759,4.495347,5.518416,0.365363,-7.273636,5.427161,-1.146133,1.422245,-2.264688],[7.189930,0.852733,2.928070,7.805349,-2.455646,-8.720326,-5.906335,9.371071,-5.868417,-1.060813,4.735904,-5.717811,-3.493605],[7.171355,-1.592751,0.963957,-9.214680,-2.623835,-0.183646,3.875022,1.388614,2.464929,-1.109336,6.596521,-3.408425,-9.139942],[-1.359194,-0.077931,5.717583,6.374395,8.853384,0.263786,9.401644,6.720264,1.735063,-4.109896,-3.714492,-6.499723,-5.085313],[-9.271534,4.268054,-2.541351,3.745225,-7.889608,-3.430140,-0.139494,-5.938015,5.801909,1.235509,9.395534,6.469787,1.028067],[-7.253871,-4.705758,0.536181,4.206052,5.766898,9.481361,-7.711602,-5.516624,0.566363,5.107048,-2.302631,5.546945,5.349991],[7.761532,-2.978086,5.975783,-6.405329,0.410252,-1.574871,7.490848,-1.196954,-6.956047,-0.662799,4.436559,7.760045,-9.916157],[9.889068,8.982054,-6.133260,9.596880,-9.587401,0.168180,-5.253287,-8.418271,1.249247,-6.757128,-7.013472,8.502348,2.317187]],[[-8.087285,2.385999,6.480229,-5.253505,3.319446,9.912690,7.575525,0.409294,-2.393958,3.266081,-7.871929,-3.103755,-9.611605],[1.172342,-7.458782,-8.760753,4.883417,1.513615,-8.152953,-0.297612,-4.033428,-6.335789,5.269998,8.570588,2.382232,-6.064153],[3.342537,8.152761,-1.373066,7.184332,3.668205,1.556692,2.733092,3.222848,2.213845,-1.716961,8.149088,3.840104,-0.025935],[9.719054,-5.396976,-8.398499,-6.661250,7.629308,-1.564364,4.587187,7.772178,3.656419,2.199546,-9.410691,-6.401368,3.206066],[-8.343438,-0.497938,1.581920,-9.234177,9.316520,8.302647,-8.586877,-3.406867,-7.115633,3.348636,9.477538,-6.695432,5.321589],[4.498982,6.900425,-2.905061,1.018891,8.414389,-5.803460,-7.440363,-0.606756,4.164449,8.542511,3.089729,-0.223522,8.888423],[7.932080,-7.659615,-1.401533,-3.694926,-0.143603,0.045639,5.374790,-5.224161,1.459178,-5.162179,3.586565,-6.984543,7.229944],[-3.262397,-2.456294,5.815718,8.261285,5.845083,4.403189,-2.376797,-7.292675,-2.087615,-1.511322,4.688587,8.889715,9.209800]],[[6.909147,0.098312,6.686830,-5.468502,7.912680,-3.158235,-8.623310,0.274723,5.083560,7.087059,6.266489,-6.461916,1.459536],[2.034100,9.098015,1.582708,7.860891,7.705830,-1.026659,-1.862752,-2.798323,-1.083970,-2.601505,-7.300338,8.475759,6.479273],[5.330060,-2.998307,3.782423,-5.063282,-6.719903,-0.947958,-7.347889,8.051672,7.254118,6.757043,-9.783995,-8.014079,4.723325],[-3.232227,0.298612,4.317915,0.027992,2.574165,-0.389788,7.323818,9.441331,-8.985387,-3.227106,-1.062183,3.000290,8.424496],[8.134070,6.314332,-2.539317,-1.918963,6.312923,7.640509,1.169559,-4.554877,-4.361342,3.430102,2.076472,5.935636,0.099490],[7.893097,9.767072,-5.520739,1.728229,3.203842,5.800430,1.191003,-7.100999,-0.003259,5.675809,2.003676,-7.608168,7.029884],[-9.050175,5.425597,-5.957976,-8.003183,0.018479,-5.752182,-1.869504,1.933458,3.004319,7.806801,4.032279,-0.358643,-4.984939],[-9.256105,-7.873308,-2.751481,-9.775954,-8.005160,-1.934977,0.456752,7.123634,-9.038194,9.695053,1.230494,-2.070663,-1.060253]],[[-7.410455,-2.820904,-4.022968,-6.659949,-0.873061,4.966364,-2.697584,1.290277,8.613402,9.635133,3.463846,-3.404038,7.326459],[3.667751,-3.738252,3.661801,-2.442308,8.460005,-8.453557,5.765661,-9.731289,8.069966,-2.114515,-9.841041,8.033363,-6.877919],[3.982716,-1.875438,1.869772,4.147186,4.254800,-0.751508,-0.614874,6.246208,5.412973,-1.015022,9.101471,7.053411,-8.792237],[5.754301,0.905800,-0.312922,7.833485,5.681688,6.263263,-4.498414,2.287399,-7.995499,9.035004,-2.000812,5.265205,-3.577235],[-0.815436,-1.106465,1.153945,3.816537,-3.695573,-4.028362,-5.403220,-2.829016,-4.624293,-9.305988,5.423746,5.600537,-8.306705],[-8.970463,-8.963424,9.821035,-0.183158,-4.605456,8.914816,-9.457941,9.266195,0.133543,-6.507341,7.008028,7.532346,-6.308900],[6.205356,0.476386,4.196956,2.780626,-2.714220,-3.051003,-8.111936,1.440468,-1.644330,6.160723,-0.922384,2.287137,-1.149004],[8.938491,1.149787,1.097592,1.655616,-3.245090,-8.893927,8.536909,-3.721109,5.062335,-2.569995,5.608754,-0.286252,-3.503616]],[[3.125966,3.343294,7.633081,2.452811,-5.795225,6.596925,0.548312,-6.729019,9.222185,9.497252,0.130625,-4.347828,4.218731],[0.371923,2.183286,-7.269393,7.927024,-3.077652,-4.815293,5.490994,-1.610490,-0.711551,9.434952,2.737006,-8.464243,-7.550309],[5.283176,6.557407,-1.406952,-8.408481,0.515472,4.290342,-7.344256,1.659508,8.686804,9.257638,6.676126,-9.595930,-5.018097],[5.686213,-4.021865,8.308103,-5.571274,-0.331322,4.749000,-9.747164,3.900691,8.162289,-4.919760,-0.764450,-8.358459,0.368383],[0.293529,-5.617735,-0.031025,6.889905,9.182387,-4.850142,6.057948,7.560752,-4.506510,0.519722,1.128415,8.366685,3.264079],[1.510725,-3.245670,2.210604,-9.956050,3.944779,9.814459,1.098697,6.880853,8.854029,-5.836828,3.002837,-3.017633,-1.888962],[-8.440145,7.621458,6.086887,0.165657,-4.235366,-1.414174,-3.960247,1.222634,-1.620822,-7.706365,-2.619292,-0.612434,-8.766152],[2.210565,4.700375,-9.818590,-8.459099,0.111346,2.631161,2.582204,-7.677839,-1.116300,1.255984,-0.092694,4.072316,-4.570940]]], dtype = "float32")#candidate|7001|(15, 8, 13)|const|float32
uop_7002 = relay.atan(const_7001.astype('float32')) # shape=(15, 8, 13)
func_2540_call = mod.get_global_var('func_2540')
func_2544_call = mutated_mod.get_global_var('func_2544')
var_7005 = relay.var("var_7005", dtype = "uint32", shape = (192,))#candidate|7005|(192,)|var|uint32
var_7006 = relay.var("var_7006", dtype = "int32", shape = (112,))#candidate|7006|(112,)|var|int32
call_7004 = relay.TupleGetItem(func_2540_call(relay.reshape(var_7005.astype('uint32'), [4, 12, 4]), relay.reshape(var_7005.astype('uint32'), [4, 12, 4]), relay.reshape(var_7006.astype('int32'), [112,]), ), 4)
call_7007 = relay.TupleGetItem(func_2544_call(relay.reshape(var_7005.astype('uint32'), [4, 12, 4]), relay.reshape(var_7005.astype('uint32'), [4, 12, 4]), relay.reshape(var_7006.astype('int32'), [112,]), ), 4)
func_4249_call = mod.get_global_var('func_4249')
func_4252_call = mutated_mod.get_global_var('func_4252')
call_7013 = relay.TupleGetItem(func_4249_call(relay.reshape(var_7006.astype('int32'), [112,]), relay.reshape(var_7005.astype('uint32'), [192,]), ), 3)
call_7014 = relay.TupleGetItem(func_4252_call(relay.reshape(var_7006.astype('int32'), [112,]), relay.reshape(var_7005.astype('uint32'), [192,]), ), 3)
func_1427_call = mod.get_global_var('func_1427')
func_1429_call = mutated_mod.get_global_var('func_1429')
var_7018 = relay.var("var_7018", dtype = "float64", shape = (80,))#candidate|7018|(80,)|var|float64
call_7017 = relay.TupleGetItem(func_1427_call(relay.reshape(var_7018.astype('float64'), [16, 1, 5])), 0)
call_7019 = relay.TupleGetItem(func_1429_call(relay.reshape(var_7018.astype('float64'), [16, 1, 5])), 0)
output = relay.Tuple([uop_7002,call_7004,var_7005,var_7006,call_7013,call_7017,var_7018,])
output2 = relay.Tuple([uop_7002,call_7007,var_7005,var_7006,call_7014,call_7019,var_7018,])
func_7029 = relay.Function([var_7005,var_7006,var_7018,], output)
mod['func_7029'] = func_7029
mod = relay.transform.InferType()(mod)
mutated_mod['func_7029'] = func_7029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7029_call = mutated_mod.get_global_var('func_7029')
var_7031 = relay.var("var_7031", dtype = "uint32", shape = (192,))#candidate|7031|(192,)|var|uint32
var_7032 = relay.var("var_7032", dtype = "int32", shape = (112,))#candidate|7032|(112,)|var|int32
var_7033 = relay.var("var_7033", dtype = "float64", shape = (80,))#candidate|7033|(80,)|var|float64
call_7030 = func_7029_call(var_7031,var_7032,var_7033,)
output = call_7030
func_7034 = relay.Function([var_7031,var_7032,var_7033,], output)
mutated_mod['func_7034'] = func_7034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6554_call = mod.get_global_var('func_6554')
func_6556_call = mutated_mod.get_global_var('func_6556')
call_7064 = relay.TupleGetItem(func_6554_call(), 0)
call_7065 = relay.TupleGetItem(func_6556_call(), 0)
func_5172_call = mod.get_global_var('func_5172')
func_5175_call = mutated_mod.get_global_var('func_5175')
const_7067 = relay.const([[2,8,-10,-8,-3,-1,-6,10,1,3],[-1,10,9,4,7,8,9,-9,-2,-1],[-7,-9,-7,8,-10,5,-8,-3,-6,4],[1,3,7,-1,3,3,4,3,-8,-1],[-6,4,-1,2,3,1,5,4,-7,2],[-4,-10,-8,10,-7,-6,5,-6,8,6],[-1,5,-10,-1,-1,1,-9,-4,5,3],[-4,5,-3,-8,9,2,8,10,-4,8],[-4,-1,-9,10,-8,8,-5,1,-5,7],[-2,6,6,-1,6,6,-8,7,-3,-3],[-1,4,5,-4,-6,-4,1,8,5,8],[1,-5,10,-8,8,-5,-6,9,-4,-10],[5,9,-4,-5,-8,-4,4,8,3,8]], dtype = "uint32")#candidate|7067|(13, 10)|const|uint32
const_7068 = relay.const([2,-10,7,-5,4,-10,8,-10,7,-6,7,-2,6,2,7,-5,-9,2,-8,-4,7,-7,-10,-7,-7,7,3,-2,5,10,-7,2,9,3,-9,4,-3,-2,-10,-9,2,-2,7,1,-7,-5,8,-2,9,6,4,-7,-1,-9,8,7,-8,-2,-2,-9,7,-3,9,-2,5,-10,8,-6,-4,1,5,-1,-6,9,7,-6,2,-7,-9,3,7,-2,1,-5,5,7,3,-6,-1,8,5,-2,7,9,-10,-9,8,-3,1,3,3,9,-8,-6,10,-8,-2,-1,4,5,6,3], dtype = "int32")#candidate|7068|(112,)|const|int32
call_7066 = relay.TupleGetItem(func_5172_call(relay.reshape(const_7067.astype('uint32'), [26, 5]), relay.reshape(const_7068.astype('int32'), [112,]), ), 5)
call_7069 = relay.TupleGetItem(func_5175_call(relay.reshape(const_7067.astype('uint32'), [26, 5]), relay.reshape(const_7068.astype('int32'), [112,]), ), 5)
output = relay.Tuple([call_7064,call_7066,const_7067,const_7068,])
output2 = relay.Tuple([call_7065,call_7069,const_7067,const_7068,])
func_7093 = relay.Function([], output)
mod['func_7093'] = func_7093
mod = relay.transform.InferType()(mod)
mutated_mod['func_7093'] = func_7093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7093_call = mutated_mod.get_global_var('func_7093')
call_7094 = func_7093_call()
output = call_7094
func_7095 = relay.Function([], output)
mutated_mod['func_7095'] = func_7095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6957_call = mod.get_global_var('func_6957')
func_6959_call = mutated_mod.get_global_var('func_6959')
call_7132 = relay.TupleGetItem(func_6957_call(), 0)
call_7133 = relay.TupleGetItem(func_6959_call(), 0)
func_6412_call = mod.get_global_var('func_6412')
func_6416_call = mutated_mod.get_global_var('func_6416')
var_7135 = relay.var("var_7135", dtype = "float32", shape = (198, 3))#candidate|7135|(198, 3)|var|float32
const_7136 = relay.const([-5,8,4,8,10,-6,-10,1,3,9,-6,10,8,1,1,-7], dtype = "uint16")#candidate|7136|(16,)|const|uint16
const_7137 = relay.const(-5, dtype = "uint32")#candidate|7137|()|const|uint32
call_7134 = relay.TupleGetItem(func_6412_call(relay.reshape(var_7135.astype('float32'), [6, 9, 11]), relay.reshape(const_7136.astype('uint16'), [16,]), relay.reshape(const_7137.astype('uint32'), []), ), 4)
call_7138 = relay.TupleGetItem(func_6416_call(relay.reshape(var_7135.astype('float32'), [6, 9, 11]), relay.reshape(const_7136.astype('uint16'), [16,]), relay.reshape(const_7137.astype('uint32'), []), ), 4)
bop_7159 = relay.greater_equal(call_7132.astype('bool'), const_7137.astype('bool')) # shape=(3, 2, 9)
bop_7162 = relay.greater_equal(call_7133.astype('bool'), const_7137.astype('bool')) # shape=(3, 2, 9)
uop_7166 = relay.cos(var_7135.astype('float64')) # shape=(198, 3)
bop_7184 = relay.power(uop_7166.astype('float64'), relay.reshape(var_7135.astype('float64'), relay.shape_of(uop_7166))) # shape=(198, 3)
uop_7193 = relay.sqrt(uop_7166.astype('float64')) # shape=(198, 3)
bop_7195 = relay.equal(uop_7193.astype('bool'), relay.reshape(bop_7184.astype('bool'), relay.shape_of(uop_7193))) # shape=(198, 3)
func_639_call = mod.get_global_var('func_639')
func_642_call = mutated_mod.get_global_var('func_642')
var_7201 = relay.var("var_7201", dtype = "float32", shape = (60, 14))#candidate|7201|(60, 14)|var|float32
call_7200 = func_639_call(relay.reshape(var_7201.astype('float32'), [10, 7, 12]))
call_7202 = func_639_call(relay.reshape(var_7201.astype('float32'), [10, 7, 12]))
bop_7228 = relay.not_equal(bop_7195.astype('bool'), const_7137.astype('bool')) # shape=(198, 3)
uop_7240 = relay.rsqrt(uop_7193.astype('float64')) # shape=(198, 3)
bop_7243 = relay.greater(uop_7166.astype('bool'), relay.reshape(bop_7184.astype('bool'), relay.shape_of(uop_7166))) # shape=(198, 3)
bop_7252 = relay.floor_divide(uop_7240.astype('float64'), relay.reshape(bop_7184.astype('float64'), relay.shape_of(uop_7240))) # shape=(198, 3)
uop_7262 = relay.sigmoid(uop_7166.astype('float32')) # shape=(198, 3)
output = relay.Tuple([call_7134,const_7136,bop_7159,call_7200,var_7201,bop_7228,bop_7243,bop_7252,uop_7262,])
output2 = relay.Tuple([call_7138,const_7136,bop_7162,call_7202,var_7201,bop_7228,bop_7243,bop_7252,uop_7262,])
func_7265 = relay.Function([var_7135,var_7201,], output)
mod['func_7265'] = func_7265
mod = relay.transform.InferType()(mod)
mutated_mod['func_7265'] = func_7265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7265_call = mutated_mod.get_global_var('func_7265')
var_7267 = relay.var("var_7267", dtype = "float32", shape = (198, 3))#candidate|7267|(198, 3)|var|float32
var_7268 = relay.var("var_7268", dtype = "float32", shape = (60, 14))#candidate|7268|(60, 14)|var|float32
call_7266 = func_7265_call(var_7267,var_7268,)
output = call_7266
func_7269 = relay.Function([var_7267,var_7268,], output)
mutated_mod['func_7269'] = func_7269
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7285 = relay.const([[[-9.568987,-5.887037,5.837289,-0.821716,-9.076568,-1.522580,-6.648090,-6.704845,7.288710,5.586884],[7.341834,-2.554222,-1.284979,-9.510714,-3.963717,5.399691,1.784978,-0.520577,-7.928104,-5.389244],[-2.258718,-7.438640,-2.174296,-3.633785,-6.682463,2.430963,5.222187,8.609299,9.604357,-1.565749],[0.632286,-1.765416,-4.190921,-3.554535,-3.036781,2.569641,5.895100,0.975870,-8.381561,4.862719],[5.677670,-7.849419,7.239483,-2.407810,0.511845,-4.303548,-2.142717,8.211314,3.100946,-0.417797],[-3.739213,-4.030148,2.455999,8.981895,7.249115,-4.894158,4.718869,6.923393,-1.079920,-9.473263],[4.041688,3.258891,3.957568,-7.713251,-8.698161,-5.300352,-9.391940,-1.689876,3.952359,8.473095]],[[7.669179,1.705445,-3.398304,9.707446,4.896010,-1.507913,-4.058558,-7.568852,-6.056376,-1.464310],[5.163716,2.819690,5.157764,-1.286944,-6.973464,-9.400784,8.599300,-4.624016,-8.069019,2.970550],[2.176721,-4.765630,4.222984,-3.553814,1.875988,-3.386212,1.575175,-8.055779,2.545218,4.040289],[-0.145599,9.560398,-4.449263,1.777528,4.596588,-7.373795,-9.031655,-6.975023,0.991849,4.830251],[2.166167,-4.996558,-9.487666,-3.089100,1.992455,1.231426,6.067492,9.212631,-0.418474,-8.512846],[6.346441,4.934470,-8.290653,3.910415,-0.948062,-4.979429,-2.527412,-8.408546,-3.968872,2.542951],[9.769581,9.495109,9.518187,-8.151509,-5.356749,-1.124614,2.888162,2.944890,5.382918,2.729884]],[[-7.352149,-2.524363,-4.441291,2.010184,3.553177,-8.060189,0.351101,7.124568,3.425900,-6.665160],[-1.937178,2.132467,-9.981497,6.614802,-1.372404,7.067561,7.067724,9.440876,1.324102,-4.529129],[6.872888,4.435439,-1.251470,-0.070224,-5.213126,9.413002,7.516872,-6.702658,-4.017665,8.719889],[-8.721960,1.344732,-6.127988,-9.087762,5.318568,-3.750468,3.079195,8.974511,-7.988101,3.360173],[-0.969209,-7.425663,-9.041538,-7.041111,-0.614511,2.427478,-0.363989,-1.803839,7.248384,-7.456310],[7.387411,-3.229277,-5.366004,9.953434,0.959332,5.586783,3.570364,8.803603,-5.463198,-3.036353],[8.830668,-5.738532,-5.267116,7.878349,0.305748,-3.492472,-3.996804,5.578267,-0.573500,-4.876109]],[[-7.754330,-9.882248,2.392717,3.830544,1.346221,-9.341211,4.243946,-4.416040,-3.296781,0.253303],[-9.505667,-7.760930,-4.616380,1.541744,-3.871261,-5.480069,-3.912636,4.229144,-7.775489,7.242726],[-1.389345,3.342201,-6.123994,-5.331841,6.332477,-5.994700,6.862782,-2.322789,5.560025,7.749301],[2.963717,-5.138092,-4.123083,3.378558,-3.341245,-7.096855,5.971046,-8.355204,6.801844,-2.522703],[-8.116221,-3.794652,9.466982,-2.892082,6.018614,9.492691,0.022974,-9.471559,8.056230,9.652032],[-7.328243,-9.521489,0.491614,-8.893735,3.584798,7.346493,0.729247,-6.359665,-3.780628,2.731956],[-0.558183,6.533296,-0.175835,1.426826,3.893729,4.973415,-0.987854,1.795485,-1.842181,-3.568504]],[[-6.609929,-3.171606,-7.638895,9.342236,7.182105,-5.565307,4.803937,0.414619,2.655184,9.190925],[4.691921,-1.307336,-0.155959,5.390781,6.638146,3.371784,9.304645,-4.230239,-8.858307,5.419515],[-1.814657,5.051472,7.540351,-9.040681,3.267086,0.481124,-3.492147,-0.425708,-5.713194,-6.003104],[7.521348,7.994042,8.568056,-8.510212,7.835999,1.613904,8.166629,2.054196,8.220311,9.899206],[2.840887,-9.353790,5.947456,4.416354,-3.416855,0.220059,1.928233,6.439390,-4.358756,-6.447711],[1.831634,-9.845770,-5.146385,6.188673,7.039903,-2.789659,6.822955,-8.076555,4.742612,-1.529320],[2.722795,3.587064,0.435720,9.775640,8.176886,8.132257,0.830952,8.866041,-6.529677,-2.334531]],[[-6.046481,-7.936634,1.864157,-5.061364,-0.701952,-4.770607,-8.085953,-5.383155,-9.960371,-5.771504],[3.131720,-5.410936,8.886967,-1.545769,-3.106009,9.094519,5.635467,1.015855,-6.700846,5.160271],[-0.966973,7.649281,-6.301660,-7.751536,1.482439,-2.039060,8.802034,-0.577163,-7.795003,-5.985802],[2.320520,4.911838,4.355398,9.526295,-2.269196,9.926998,-8.833166,-0.170878,-3.828660,-1.791832],[6.814830,9.193532,3.644288,3.141819,-7.116202,4.764822,0.850722,8.387793,8.715651,-6.835480],[3.082238,-9.694108,-5.456126,-2.610804,-5.548796,1.837586,8.759140,-1.608690,-8.420212,0.993186],[2.219535,-4.766750,1.425126,7.860377,-1.903340,4.260205,0.267729,9.274224,-8.542745,4.269987]],[[-1.261589,-8.237594,7.148304,2.676164,-4.822323,-3.698039,3.189319,-7.240081,-8.870705,1.286507],[2.299984,7.829813,-4.656854,3.224767,-8.527369,5.725842,1.411862,4.780856,-7.300619,-5.919602],[9.546801,-5.654232,1.722726,2.479815,7.552782,-8.349654,1.683843,3.308077,-4.427398,-1.968086],[3.121930,-9.539631,0.524398,4.141925,-4.522933,-0.128770,8.113591,-7.378691,3.096834,-6.325841],[-9.226455,-6.201553,-7.643238,5.833375,-3.808414,-3.380196,-8.646262,-5.735727,-8.926971,8.487641],[4.448599,-9.971809,0.764388,3.352153,-4.841882,3.606049,-8.456105,5.823775,0.578192,4.527710],[-5.775283,-2.301278,-1.033363,6.578523,-9.625345,8.841147,-7.211317,-1.702010,-1.064535,5.352819]],[[-4.100967,9.277703,-7.093674,0.817717,-5.247748,1.301346,-1.840684,5.924243,-8.388780,9.294763],[7.235464,-4.811334,-2.410124,2.213961,-8.924664,-7.403192,2.075344,1.062997,-5.111986,-7.059791],[6.862766,2.493211,8.090070,8.461402,0.771593,-1.138473,5.745419,7.627539,-8.606298,4.863060],[6.359347,3.906347,6.225772,-2.783871,8.213599,-9.166945,-5.782625,7.880590,-3.709027,0.723117],[5.843195,2.129918,-5.146292,7.464828,6.206251,6.375251,-2.510658,-5.991055,8.519768,1.460491],[2.933521,4.035414,3.609633,6.642680,5.600432,-2.034808,-4.107575,-8.665613,-6.973465,0.407487],[-0.366033,-4.704672,7.007731,-7.012542,8.229160,-5.880915,-0.144091,-7.796338,-9.574384,0.357060]],[[-6.121285,-6.513920,4.262742,1.564718,-3.505863,-6.625689,0.982755,6.927226,0.442990,4.148392],[3.807280,7.569362,3.251041,-5.822017,7.650917,-9.030266,9.122134,-4.815199,4.034856,-9.056518],[5.213309,-0.358965,9.114098,9.875640,3.340991,5.924621,-0.408664,-2.855882,-0.997588,4.309075],[9.159092,6.867670,4.550659,7.178227,3.240139,-0.160909,-4.671677,8.363250,4.745568,-4.204258],[2.697296,2.608535,-1.697443,4.760291,-4.810295,-8.586550,-0.060758,-4.721601,-8.515455,-4.514502],[1.785400,-9.117827,9.546076,6.094741,-8.059220,-1.748764,9.498402,-8.445484,1.523409,-3.243492],[-2.885219,7.929699,-9.356053,-6.242434,-5.735128,-1.745884,-5.034066,9.947883,-1.404474,-0.297665]],[[3.378235,-2.716564,-8.375507,-1.099856,4.593315,-1.530180,-1.175467,-2.985858,3.704425,1.630232],[-9.099141,-4.550307,-1.491317,-9.367031,-6.099027,1.537930,0.536872,7.793707,-8.861092,-3.486054],[-0.914554,-1.007511,-3.676933,-2.604324,0.137980,6.142750,3.220105,-9.039927,-5.409911,0.879029],[4.040033,-8.034375,-8.005464,0.104792,2.277093,-1.452595,-3.087757,-7.957190,-3.250410,-5.078762],[-9.661696,3.865182,0.828076,9.545821,-5.491530,6.766119,-8.399557,5.095213,2.595985,9.857769],[-6.591428,-3.779887,-6.336285,6.800044,1.038708,3.427504,-2.676350,-0.710693,-3.777214,6.256029],[-8.004103,3.420891,-7.415127,4.826168,6.138253,-5.861510,3.046270,-3.324687,-6.535362,-2.733331]]], dtype = "float32")#candidate|7285|(10, 7, 10)|const|float32
uop_7286 = relay.sin(const_7285.astype('float32')) # shape=(10, 7, 10)
output = uop_7286
output2 = uop_7286
func_7298 = relay.Function([], output)
mod['func_7298'] = func_7298
mod = relay.transform.InferType()(mod)
output = func_7298()
func_7299 = relay.Function([], output)
mutated_mod['func_7299'] = func_7299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7329 = relay.var("var_7329", dtype = "float32", shape = (1, 15, 6))#candidate|7329|(1, 15, 6)|var|float32
uop_7330 = relay.log2(var_7329.astype('float32')) # shape=(1, 15, 6)
output = relay.Tuple([uop_7330,])
output2 = relay.Tuple([uop_7330,])
func_7351 = relay.Function([var_7329,], output)
mod['func_7351'] = func_7351
mod = relay.transform.InferType()(mod)
mutated_mod['func_7351'] = func_7351
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7352 = relay.var("var_7352", dtype = "float32", shape = (1, 15, 6))#candidate|7352|(1, 15, 6)|var|float32
func_7351_call = mutated_mod.get_global_var('func_7351')
call_7353 = func_7351_call(var_7352)
output = call_7353
func_7354 = relay.Function([var_7352], output)
mutated_mod['func_7354'] = func_7354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6554_call = mod.get_global_var('func_6554')
func_6556_call = mutated_mod.get_global_var('func_6556')
call_7385 = relay.TupleGetItem(func_6554_call(), 0)
call_7386 = relay.TupleGetItem(func_6556_call(), 0)
output = call_7385
output2 = call_7386
func_7393 = relay.Function([], output)
mod['func_7393'] = func_7393
mod = relay.transform.InferType()(mod)
output = func_7393()
func_7394 = relay.Function([], output)
mutated_mod['func_7394'] = func_7394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6957_call = mod.get_global_var('func_6957')
func_6959_call = mutated_mod.get_global_var('func_6959')
call_7454 = relay.TupleGetItem(func_6957_call(), 0)
call_7455 = relay.TupleGetItem(func_6959_call(), 0)
func_1480_call = mod.get_global_var('func_1480')
func_1484_call = mutated_mod.get_global_var('func_1484')
const_7468 = relay.const([6.470390,2.823118,7.610203,0.213123,4.059039,2.415877,4.037988,5.986983,-7.284320,1.652069,5.684448,5.055404,1.599079,-0.327721,7.472504,7.109353,9.952744,-5.732873,1.588644,5.711788,4.052112,-0.121172,-3.216838,-7.306332,-1.206418,-2.298581,4.812123,8.624895,-0.846571,-3.231345,9.537656,-5.021290,-5.890529,3.294202,-4.427068,-7.387608,-6.211143,1.175215,3.369814,1.532371,3.735362,3.554322,8.508452,0.747780,-7.720220,4.248239,3.155038,-9.504247,6.564920,-7.407359,-2.420080,6.992310,0.719285,-2.518571,4.824524,-6.636377,4.328437,1.234892,-0.782212,-3.695612,-9.866556,-8.335466,0.905449,5.789696,1.523534,3.185170,8.612748,-0.723217,1.512435,7.048462,-2.346873,0.604629,1.505679,-6.999033,3.287224,2.914275,-5.396457,-4.566109,-8.211824,-5.811819,9.894990,-9.129770,6.396428,5.579206,0.487753,2.990426,-5.710182,4.531619,3.494102,-3.028326,-3.221256,5.255605,3.988834,-8.661410,1.352917,8.485282,-7.428038,8.217462,-0.716768,-4.301350,5.469713,3.240489,-1.973093,-6.580690,-3.095673,7.049631,-9.995469,-6.464423,-8.796441,1.995492,6.968485,-3.895929,-6.084963,8.127429,-7.610911,-0.662826,3.849855,4.616872,-6.417820,-4.478528,-8.553464,2.475913,-4.817139,1.439567,6.258547,-1.985164,6.672638,-9.336476,9.945758,6.493723,-0.055115,3.586476,7.059448,4.462748,-9.158867,7.120857,7.998410,0.026578,-0.085178,-5.373585,-2.997396,-4.811580,2.179928,2.250870,9.214656,-4.842639,3.518158,8.861671,8.723048,-3.783674,-3.503241,-8.240643,0.816160,7.981261,-0.918757,2.713630,7.355311,5.153937,-9.633612,1.338493,8.729747,0.552641,9.646620,4.689006,-3.191329,4.249016,2.299450,-0.808300,1.014763,-2.579982,-7.577717,-3.763166,-8.629955,-7.921489,8.557125,-9.869073,-0.654557,7.896789,-2.971863,-5.640963,-8.276659,-9.598788,1.903151,-8.502001,-2.773504,9.453030,-8.466451,-4.616092,5.006679,-4.030152,-0.925512,0.351269,-3.363732,9.481395,2.834411,4.999083,1.150474,-8.064227,8.374154,8.013934,8.881084,-6.983916,8.770676,-7.529888,8.472981,7.006227,0.671635,-5.865645,6.590959,9.024214,8.582889,-9.724812,-5.871874,-3.460688,-9.462817,5.362620,-1.730069,6.850582,7.254683,-3.495078,-3.170174,-8.744372,-9.714189,-6.230294,-5.648654,-5.187865,-9.248650,-6.137496,4.192819,-7.036359,4.968428,-7.528694,2.937487,6.906378,2.740421,-5.430042,5.500546,-0.567360,8.437310,7.435574,-0.894222,-9.262684,-9.753382,8.068460,8.047338,4.920975,9.323287,-3.240316,-4.182545,8.784575,8.436706,1.183528,4.255473,-0.326867,-3.260955,-4.053460,1.758509,-1.722132,-0.226550,-9.148029,2.566449,-3.255706,0.541523,-8.280697,-1.350446,3.475049,6.619482,-1.134725,-1.258204,7.160453,-8.828039,3.436816,-1.709218,9.593915,8.283400,-9.788907,-2.443215,-8.988205,5.210044,7.575164,-6.723180,0.906251,8.687912,-2.542138,-8.986550,8.930174,-5.205519,6.909247,-2.425968,7.204946,-2.578095,-7.759762,-2.491077,-8.307212,3.722333,7.394980,-6.790845,5.356236,-1.685655,-8.385465,-0.984247,1.238887,-3.362114,0.364822,4.218165,9.410550,7.181949,-4.038278,-9.208114,4.629957,-5.434865,1.447765,-6.123737,6.584435,1.842614,7.258832,7.450721,-7.271445,7.369664,-4.625263,-3.545053,-1.248892,3.158731,5.975083,9.289443,-0.146629,7.341929,5.918983,-8.397645,-3.645592,-7.892131,1.270490,-2.083837,6.976399,-3.656429,-6.134370,5.955684,-3.631647,-4.365003,-1.181362,-7.896755,0.016234,1.481731,2.265469,2.603105,7.254656,-5.385270,2.887088,-9.116944,-0.514500,-8.508502,2.381086,-6.881451,6.857221,8.504961,-9.244363,-9.203791,3.169209,-1.429843,8.708955,-5.898194,5.140690,-7.515814,6.662413,-7.397194,5.245982,-2.619517,-1.078145,-9.269075,3.444893,-0.493392,3.283322,-2.069436,-7.632378,-1.897843,-4.563590,-4.386666,6.316771,3.512705,4.896474,-5.211327,-3.156230,7.797868,0.346368,-7.878375,4.634211,5.242169,8.348768,6.258933,-3.781879,-3.906838,-4.151255,9.142226,7.220326,-5.180806,-1.402849,6.107555,6.229313,7.504650,-5.252003,-1.712016,-9.122710,-9.030414,4.221819,0.567629,0.050256,-2.821120,-9.339409,6.892282,-9.832142,-0.081041,4.678419,-0.200156,-9.848899,7.244913,9.234654,-6.909691,0.906171,-9.258728,-6.885309,1.850623,9.885206,2.061225,5.324951,7.282641,-2.300545,-2.510133,6.522872,4.642306,-7.499687,-7.275746,-3.199360,-4.506189,1.547579,-0.473062,-2.301940,-1.856244,5.312157,-2.222129,-5.775535,9.166532,6.484594,-9.223537,-1.349874,7.112170,9.512539,-2.591555,-9.343608,0.129152,1.038643,-3.564020,7.600479,5.221558,-7.334267,9.976213,4.947345,-9.037672,-0.405777,2.060355,-0.997240,-5.785967,-2.681769,0.570597,2.705228,4.170298,-4.435315,-4.301661,-2.702136,-9.881254,6.088311,8.423489,-7.467621,-2.129634,0.046488,9.312371,-8.949536,4.491736,4.811947,0.027276,1.629689,6.527189,-3.902622,-2.832246,-4.743752,-3.648392,-7.872081,-7.574598,7.444434,-9.847606,9.259590,-7.052365,2.940745,-5.240345,-2.796083,8.871345,-5.812717,2.176154,-8.923945,6.377607,-9.743147,5.556186,-4.658548,-1.700055,-9.005010,-3.044810,-0.892052,8.415599,-8.110419,-9.386300,7.172590,-2.206737,6.942327], dtype = "float32")#candidate|7468|(512,)|const|float32
const_7469 = relay.const([-5.316649,-6.435809,0.197453,7.648761,-2.291386,-2.593901,9.661773,4.615174,-4.201624,9.227371,-0.732575,-5.889068,-5.793280,-6.628077,8.639092,8.182924,5.188170,6.589719,-7.528725,-0.258479,-3.359841,7.118401,-6.150363,-7.439970,-4.752923,3.659587,4.972330,1.976090,7.572588,1.046364,-1.699284,-4.195869,-8.704781,-7.389445,4.114581,0.339490,5.973893,8.010029,1.184735,-1.057272,9.931051,-8.483535,2.418488,1.537447,7.587057,6.547042,1.345884,1.493423,-5.543685,-4.202576,2.071833,4.697967,-5.291763,-0.784812,9.173670,4.771242,-7.509837,1.398569,9.781320,4.099560,3.753606,-6.883510,-4.459446,-6.017297,1.214643,-6.868549,-7.920047,0.752369,5.466340,-7.667809,-4.665872,3.679685,0.496456,-9.671934,9.715993,2.256480,1.582038,1.416476,7.487363,-1.826455], dtype = "float64")#candidate|7469|(80,)|const|float64
var_7470 = relay.var("var_7470", dtype = "float64", shape = (640,))#candidate|7470|(640,)|var|float64
call_7467 = relay.TupleGetItem(func_1480_call(relay.reshape(const_7468.astype('float32'), [4, 8, 16]), relay.reshape(const_7469.astype('float64'), [80,]), relay.reshape(var_7470.astype('float64'), [16, 8, 5]), ), 0)
call_7471 = relay.TupleGetItem(func_1484_call(relay.reshape(const_7468.astype('float32'), [4, 8, 16]), relay.reshape(const_7469.astype('float64'), [80,]), relay.reshape(var_7470.astype('float64'), [16, 8, 5]), ), 0)
output = relay.Tuple([call_7454,call_7467,const_7468,const_7469,var_7470,])
output2 = relay.Tuple([call_7455,call_7471,const_7468,const_7469,var_7470,])
func_7490 = relay.Function([var_7470,], output)
mod['func_7490'] = func_7490
mod = relay.transform.InferType()(mod)
mutated_mod['func_7490'] = func_7490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7491 = relay.var("var_7491", dtype = "float64", shape = (640,))#candidate|7491|(640,)|var|float64
func_7490_call = mutated_mod.get_global_var('func_7490')
call_7492 = func_7490_call(var_7491)
output = call_7492
func_7493 = relay.Function([var_7491], output)
mutated_mod['func_7493'] = func_7493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4829_call = mod.get_global_var('func_4829')
func_4831_call = mutated_mod.get_global_var('func_4831')
call_7544 = func_4829_call()
call_7545 = func_4829_call()
func_5817_call = mod.get_global_var('func_5817')
func_5819_call = mutated_mod.get_global_var('func_5819')
call_7553 = relay.TupleGetItem(func_5817_call(), 1)
call_7554 = relay.TupleGetItem(func_5819_call(), 1)
output = relay.Tuple([call_7544,call_7553,])
output2 = relay.Tuple([call_7545,call_7554,])
func_7575 = relay.Function([], output)
mod['func_7575'] = func_7575
mod = relay.transform.InferType()(mod)
mutated_mod['func_7575'] = func_7575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7575_call = mutated_mod.get_global_var('func_7575')
call_7576 = func_7575_call()
output = call_7576
func_7577 = relay.Function([], output)
mutated_mod['func_7577'] = func_7577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5666_call = mod.get_global_var('func_5666')
func_5668_call = mutated_mod.get_global_var('func_5668')
call_7580 = relay.TupleGetItem(func_5666_call(), 0)
call_7581 = relay.TupleGetItem(func_5668_call(), 0)
output = call_7580
output2 = call_7581
func_7584 = relay.Function([], output)
mod['func_7584'] = func_7584
mod = relay.transform.InferType()(mod)
mutated_mod['func_7584'] = func_7584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7584_call = mutated_mod.get_global_var('func_7584')
call_7585 = func_7584_call()
output = call_7585
func_7586 = relay.Function([], output)
mutated_mod['func_7586'] = func_7586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5929_call = mod.get_global_var('func_5929')
func_5930_call = mutated_mod.get_global_var('func_5930')
call_7608 = relay.TupleGetItem(func_5929_call(), 0)
call_7609 = relay.TupleGetItem(func_5930_call(), 0)
func_639_call = mod.get_global_var('func_639')
func_642_call = mutated_mod.get_global_var('func_642')
const_7614 = relay.const([8.620673,7.444992,-0.123845,-2.138123,6.524840,0.684617,2.653043,-0.975699,-3.619630,-3.065471,2.497745,-4.271393,-1.102027,-3.877641,-5.742829,-3.315925,8.865385,-2.611562,-0.756770,0.314901,-5.562883,9.122848,7.007040,-5.140295,5.873675,-6.628592,6.072105,7.154887,1.843161,6.393943,6.266756,-4.991837,3.321165,-8.074773,6.630690,-5.709085,4.551458,7.293248,2.240860,-6.914968,-5.791437,2.486088,6.876299,3.160337,-9.722529,-0.981674,-3.607978,-2.647182,0.193725,4.787738,-6.162417,8.623131,6.710946,-7.480535,-9.264242,0.905949,6.052919,-7.901755,6.706462,-6.899098,8.738077,3.632933,1.041800,5.743554,7.711428,4.101781,-4.822040,6.420175,8.302390,4.604202,-9.727686,-0.205089,5.421913,-5.434462,-4.010376,3.664138,4.702259,-9.243330,-1.833422,4.998162,-2.780357,-2.840910,5.852357,3.714407,6.235594,4.963354,1.621703,-8.780212,-5.477152,-8.150213,0.295424,-2.552838,-4.925462,0.936502,6.410243,-7.450994,6.773640,-4.486747,-2.309492,7.203881,-1.655427,3.454364,-5.908840,6.404689,-4.090261,3.120538,6.882096,-5.732292,-3.400305,-4.183693,4.443357,-0.382950,4.670107,9.531963,-9.705516,-8.101456,9.359651,-6.550386,1.176585,0.644984,3.573587,1.261035,-4.564671,1.102151,8.331768,-3.781788,-7.834149,9.054757,-6.619460,-4.666942,6.300032,7.063667,-8.326454,-5.589765,5.540413,-2.198124,-2.811081,6.592633,2.229119,-7.121712,3.380017,8.589196,1.014946,8.907848,-6.693191,-4.517844,-6.323276,-7.544782,4.428866,-7.742062,-2.819200,-8.673445,-4.841991,-1.670944,-4.997154,-8.466497,0.630336,8.973095,-8.941462,-9.747583,-3.968606,-5.815439,4.206890,-1.384800,7.670656,4.096245,5.093098,0.394240,-5.660869,2.318673,-1.709770,-5.168022,-6.616909,-7.816198,-7.532643,5.277779,1.250598,-9.725017,-3.189236,6.110396,0.487161,-1.070301,-3.785001,7.813949,3.085899,7.007818,-3.992335,3.529495,-2.192482,-8.287941,7.819280,1.686845,7.020582,5.432882,-6.146974,-5.418021,9.441073,-5.945564,-9.354482,-0.336738,7.655309,2.215533,3.593725,-6.380559,-0.731677,0.934741,-2.435350,-5.207697,-6.921016,2.083763,-6.257798,-9.648869,-6.773993,-7.192891,-4.422536,-6.753203,-6.226175,-3.059999,8.842217,4.826612,3.544690,0.169713,-9.298138,0.075978,4.059820,4.811810,-1.364712,7.967049,1.983565,3.618327,3.889774,8.448825,8.700740,4.486305,-4.997091,-1.184030,4.629133,5.463563,4.144354,-0.606655,6.624544,7.048093,-5.722128,1.619070,-0.390195,0.852600,-3.137698,6.957740,-3.871730,-4.562086,-0.698193,-7.370998,-5.415126,6.904411,2.391218,-4.312783,6.043016,-9.460438,3.124571,6.884173,4.931099,0.942950,1.889743,0.141859,0.695137,-7.238762,6.993146,-7.085977,-5.839972,3.146605,3.424740,4.372954,6.870222,-2.576019,8.010302,-5.679480,8.575736,-9.571918,9.556991,-1.982072,-5.124465,-7.292986,-5.897571,3.422089,-7.981061,-3.436298,3.755905,-2.745908,5.000396,8.727605,6.706629,6.886607,5.451703,6.778110,-1.159465,2.843087,9.784966,-4.437904,-6.136638,-7.399815,-4.160512,6.513577,-9.315444,4.969049,-3.430828,-5.382949,-9.119966,-8.435900,-0.782644,-6.805643,-3.137825,2.626344,4.245578,7.536122,1.370703,-3.634389,-1.710939,9.092736,-8.929040,-8.240789,5.520230,-2.271614,4.240778,2.444902,-6.287420,-1.058823,-0.104092,-8.003841,9.064851,8.713830,-2.648694,-1.414256,4.771273,6.332108,-3.633864,5.241091,5.193261,-5.516358,-5.833546,-7.422857,0.178349,0.317970,-2.995389,-8.766343,5.130323,-6.267153,2.981808,-8.097468,1.623877,-9.546635,-9.343116,3.021567,5.243224,-0.406644,-7.800077,5.174836,2.982924,7.917407,-5.915233,5.318804,4.300556,6.913234,-9.510108,-8.380952,-7.246216,-4.165762,-4.445973,-3.166393,0.606863,1.680247,6.883153,1.092293,-6.389531,-9.561917,-3.209376,-2.356294,4.777823,4.047990,-2.344140,2.393124,-8.297171,7.543670,-9.463785,4.006329,-5.663820,2.986888,5.988736,-1.269356,4.374868,-1.114811,-4.540411,5.027387,9.989199,7.719030,-0.255444,-7.600050,-8.381901,1.767252,8.813769,-9.059945,-0.571908,8.058274,8.237592,8.487364,-1.920610,-7.917902,-9.697176,-0.947432,-7.688018,0.787882,6.527014,-6.053745,9.991896,-6.735616,-9.424844,-1.453988,-6.111580,-1.306224,4.768316,-4.671536,8.212976,-2.869018,-3.113598,6.481215,0.302820,-3.127287,-9.281908,-9.926832,-1.632584,-2.792016,-1.787220,8.121188,-1.898656,-0.449108,6.755436,7.321206,3.580883,3.465703,0.647124,3.186753,1.336154,4.716512,-4.572253,-9.287691,-2.467222,1.444498,8.694602,4.985607,-0.346308,-2.779206,-0.903481,-2.648549,3.190359,0.499496,2.139951,0.331432,-3.983236,-2.669707,3.120882,-3.575555,-9.404824,-4.118422,-2.975069,4.755495,3.938431,5.503014,-4.941627,3.760666,0.860970,-2.851656,4.693647,8.775737,-4.285400,-7.670013,-6.930016,8.709856,-7.998525,9.209230,4.883246,6.178081,-1.876825,-8.521774,5.402848,-6.501794,-8.815165,9.350006,4.708222,-6.024063,-9.103450,3.196731,3.501707,9.992088,-1.347169,-0.446957,-3.121009,-3.983284,-6.665964,7.910452,-2.805086,-1.779703,-8.676400,8.505859,3.131692,7.664632,-3.025253,-1.442687,1.845591,-3.969545,-0.589020,0.596400,-4.890440,1.416133,-3.011529,-4.438245,5.439345,8.987541,-5.227345,1.415931,-5.439623,-6.968640,8.951488,-0.449568,-0.906447,-5.902030,-5.297286,2.474801,8.005315,3.028802,8.590175,-8.909714,3.103145,-7.059984,-2.773464,3.560967,-5.654364,-1.092869,-0.444271,-7.240037,7.548304,-1.785197,-2.780015,-2.391757,-0.204931,9.022549,-0.255357,-9.518800,-3.256027,7.247916,-4.828053,9.241383,-6.726045,-1.136636,5.248585,-6.722743,8.623193,-7.306485,-8.576484,2.062481,-1.194711,9.193153,7.331968,-1.499464,-3.294232,-2.523641,-5.921708,-3.174125,7.774736,-7.172365,7.759612,7.011426,2.591375,4.778227,3.705188,-9.803122,5.536282,-3.711608,-0.610637,-6.889017,-7.347997,4.494355,2.709634,-2.822003,8.356749,2.748886,0.970837,5.225604,-1.624342,-4.728228,-8.384806,8.523654,-0.582425,-8.942411,4.510334,-2.453227,3.728636,-0.664908,6.346306,-7.694356,1.751061,2.100301,-9.884811,3.114018,6.422441,-0.627844,6.514173,-1.989893,4.601508,-7.810397,4.520451,1.234441,-1.090228,7.687737,-3.634886,-9.661777,4.715167,-6.085092,5.016255,-4.593391,0.755841,-8.840689,0.636000,3.493377,1.649540,0.235279,-2.449735,2.006918,-1.967694,-7.263078,-2.536534,5.699226,-8.097286,-9.404348,8.501098,5.679622,0.724917,5.078206,-5.218577,-7.374522,-3.051143,-9.284942,-1.787276,-4.885297,6.776808,1.739071,1.834189,6.821848,-0.765073,7.841343,8.695545,-2.525493,-9.981148,8.154145,-4.916767,-3.310074,6.403598,3.477222,1.490349,-6.529421,-6.155461,-1.808742,-9.916583,-5.713517,1.158414,8.078379,-1.721695,-6.231189,3.725633,6.837712,4.287385,7.148286,-5.865007,-7.156345,-2.772990,-8.240515,-0.926108,-9.477751,0.131744,1.814658,7.179422,1.882160,-4.618907,-1.249144,0.433833,-5.658030,-5.902483,7.145806,-5.321163,-3.581445,-5.758326,-5.204410,7.426606,-5.186260,3.428256,-8.245525,-4.085653,-4.170872,5.060980,-7.169865,-4.901496,7.559611,-9.290864,7.407172,-5.961844,4.108619,7.097238,9.530134,6.169235,4.472320,7.688201,6.288541,0.711402,-7.186222,-7.135394,8.675794,3.842016,5.632526,6.654836,7.436249,-0.790763,-5.528272,-7.940937,2.010436,0.568986,-7.263501,-3.482687,-6.520185,2.999511,-7.883510,-7.029074,-6.168716,-1.493908,9.434036,-7.712635,2.998140,-5.062040,-7.740930,8.948605,-3.612683,-6.498901,0.042593,-0.027459,-6.045800,-1.931436,1.171829,-7.153145,5.704229,-6.925706,-3.226434,1.651571,7.990114,-6.803692,-6.542442,6.593049,-3.021499,3.198772,-8.373891,-6.357706,5.609060,7.705889,6.886692,-2.959351,-1.207602,2.099363,5.343587,-1.566894,-6.818484,2.302150,-4.907224,9.554120,-7.134220,-6.828709,-7.244063,-5.997473,-0.012049,5.388768,8.253682,-9.245642,-8.178410,7.888684,-8.312450,-0.680976,-1.776556,6.957315,5.430342,5.447462,6.324763,-2.910818,-5.389773,4.107367,9.991985,-3.208883,-4.829062,-1.185466,9.596533,-2.302466,-3.287244,-7.502259,-1.121601,4.043677,9.570331,-3.182777,4.540844,-9.454034,6.413666,-5.475438,-0.025883,6.334224,4.302931,6.481619,9.386872,-6.738924,4.675398,-1.192017,-3.810519,5.501881,8.134408,-2.417578,-4.192209,-1.803006,-1.429478,-5.237884,-7.692919,4.147300,-8.251632,-8.819747,-5.357297,5.924908,2.814735,-6.290609,9.958124,1.398673,5.323507,4.882236,6.870131,8.477722,-5.093011,-1.195581,5.947612,-4.698318,1.445567], dtype = "float32")#candidate|7614|(840,)|const|float32
call_7613 = func_639_call(relay.reshape(const_7614.astype('float32'), [10, 7, 12]))
call_7615 = func_639_call(relay.reshape(const_7614.astype('float32'), [10, 7, 12]))
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_7617 = relay.TupleGetItem(func_4160_call(), 0)
call_7618 = relay.TupleGetItem(func_4161_call(), 0)
output = relay.Tuple([call_7608,call_7613,const_7614,call_7617,])
output2 = relay.Tuple([call_7609,call_7615,const_7614,call_7618,])
func_7621 = relay.Function([], output)
mod['func_7621'] = func_7621
mod = relay.transform.InferType()(mod)
mutated_mod['func_7621'] = func_7621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7621_call = mutated_mod.get_global_var('func_7621')
call_7622 = func_7621_call()
output = call_7622
func_7623 = relay.Function([], output)
mutated_mod['func_7623'] = func_7623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5761_call = mod.get_global_var('func_5761')
func_5762_call = mutated_mod.get_global_var('func_5762')
call_7632 = relay.TupleGetItem(func_5761_call(), 0)
call_7633 = relay.TupleGetItem(func_5762_call(), 0)
output = call_7632
output2 = call_7633
func_7646 = relay.Function([], output)
mod['func_7646'] = func_7646
mod = relay.transform.InferType()(mod)
output = func_7646()
func_7647 = relay.Function([], output)
mutated_mod['func_7647'] = func_7647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5093_call = mod.get_global_var('func_5093')
func_5094_call = mutated_mod.get_global_var('func_5094')
call_7700 = relay.TupleGetItem(func_5093_call(), 2)
call_7701 = relay.TupleGetItem(func_5094_call(), 2)
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_7703 = relay.TupleGetItem(func_4160_call(), 0)
call_7704 = relay.TupleGetItem(func_4161_call(), 0)
var_7716 = relay.var("var_7716", dtype = "int32", shape = (1440,))#candidate|7716|(1440,)|var|int32
bop_7717 = relay.add(call_7700.astype('float32'), relay.reshape(var_7716.astype('float32'), relay.shape_of(call_7700))) # shape=(1440,)
bop_7720 = relay.add(call_7701.astype('float32'), relay.reshape(var_7716.astype('float32'), relay.shape_of(call_7701))) # shape=(1440,)
output = relay.Tuple([call_7703,bop_7717,])
output2 = relay.Tuple([call_7704,bop_7720,])
func_7722 = relay.Function([var_7716,], output)
mod['func_7722'] = func_7722
mod = relay.transform.InferType()(mod)
mutated_mod['func_7722'] = func_7722
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7723 = relay.var("var_7723", dtype = "int32", shape = (1440,))#candidate|7723|(1440,)|var|int32
func_7722_call = mutated_mod.get_global_var('func_7722')
call_7724 = func_7722_call(var_7723)
output = call_7724
func_7725 = relay.Function([var_7723], output)
mutated_mod['func_7725'] = func_7725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6109_call = mod.get_global_var('func_6109')
func_6110_call = mutated_mod.get_global_var('func_6110')
call_7739 = relay.TupleGetItem(func_6109_call(), 0)
call_7740 = relay.TupleGetItem(func_6110_call(), 0)
var_7748 = relay.var("var_7748", dtype = "float32", shape = (3, 2, 9))#candidate|7748|(3, 2, 9)|var|float32
bop_7749 = relay.maximum(call_7739.astype('int8'), relay.reshape(var_7748.astype('int8'), relay.shape_of(call_7739))) # shape=(3, 2, 9)
bop_7752 = relay.maximum(call_7740.astype('int8'), relay.reshape(var_7748.astype('int8'), relay.shape_of(call_7740))) # shape=(3, 2, 9)
output = bop_7749
output2 = bop_7752
func_7758 = relay.Function([var_7748,], output)
mod['func_7758'] = func_7758
mod = relay.transform.InferType()(mod)
mutated_mod['func_7758'] = func_7758
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7759 = relay.var("var_7759", dtype = "float32", shape = (3, 2, 9))#candidate|7759|(3, 2, 9)|var|float32
func_7758_call = mutated_mod.get_global_var('func_7758')
call_7760 = func_7758_call(var_7759)
output = call_7760
func_7761 = relay.Function([var_7759], output)
mutated_mod['func_7761'] = func_7761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7575_call = mod.get_global_var('func_7575')
func_7577_call = mutated_mod.get_global_var('func_7577')
call_7826 = relay.TupleGetItem(func_7575_call(), 1)
call_7827 = relay.TupleGetItem(func_7577_call(), 1)
output = relay.Tuple([call_7826,])
output2 = relay.Tuple([call_7827,])
func_7856 = relay.Function([], output)
mod['func_7856'] = func_7856
mod = relay.transform.InferType()(mod)
mutated_mod['func_7856'] = func_7856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7856_call = mutated_mod.get_global_var('func_7856')
call_7857 = func_7856_call()
output = call_7857
func_7858 = relay.Function([], output)
mutated_mod['func_7858'] = func_7858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4684_call = mod.get_global_var('func_4684')
func_4686_call = mutated_mod.get_global_var('func_4686')
call_7859 = relay.TupleGetItem(func_4684_call(), 0)
call_7860 = relay.TupleGetItem(func_4686_call(), 0)
output = relay.Tuple([call_7859,])
output2 = relay.Tuple([call_7860,])
func_7873 = relay.Function([], output)
mod['func_7873'] = func_7873
mod = relay.transform.InferType()(mod)
mutated_mod['func_7873'] = func_7873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7873_call = mutated_mod.get_global_var('func_7873')
call_7874 = func_7873_call()
output = call_7874
func_7875 = relay.Function([], output)
mutated_mod['func_7875'] = func_7875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4137_call = mod.get_global_var('func_4137')
func_4138_call = mutated_mod.get_global_var('func_4138')
call_7887 = relay.TupleGetItem(func_4137_call(), 3)
call_7888 = relay.TupleGetItem(func_4138_call(), 3)
output = call_7887
output2 = call_7888
func_7891 = relay.Function([], output)
mod['func_7891'] = func_7891
mod = relay.transform.InferType()(mod)
mutated_mod['func_7891'] = func_7891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7891_call = mutated_mod.get_global_var('func_7891')
call_7892 = func_7891_call()
output = call_7892
func_7893 = relay.Function([], output)
mutated_mod['func_7893'] = func_7893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3842_call = mod.get_global_var('func_3842')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_7911 = relay.TupleGetItem(func_3842_call(), 0)
call_7912 = relay.TupleGetItem(func_3843_call(), 0)
output = call_7911
output2 = call_7912
func_7925 = relay.Function([], output)
mod['func_7925'] = func_7925
mod = relay.transform.InferType()(mod)
output = func_7925()
func_7926 = relay.Function([], output)
mutated_mod['func_7926'] = func_7926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7621_call = mod.get_global_var('func_7621')
func_7623_call = mutated_mod.get_global_var('func_7623')
call_7957 = relay.TupleGetItem(func_7621_call(), 0)
call_7958 = relay.TupleGetItem(func_7623_call(), 0)
uop_7966 = relay.asinh(call_7957.astype('float32')) # shape=(6, 9, 11)
uop_7968 = relay.asinh(call_7958.astype('float32')) # shape=(6, 9, 11)
output = uop_7966
output2 = uop_7968
func_7983 = relay.Function([], output)
mod['func_7983'] = func_7983
mod = relay.transform.InferType()(mod)
mutated_mod['func_7983'] = func_7983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7983_call = mutated_mod.get_global_var('func_7983')
call_7984 = func_7983_call()
output = call_7984
func_7985 = relay.Function([], output)
mutated_mod['func_7985'] = func_7985
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8045 = relay.var("var_8045", dtype = "int8", shape = (15, 11, 8))#candidate|8045|(15, 11, 8)|var|int8
var_8046 = relay.var("var_8046", dtype = "int8", shape = (15, 11, 8))#candidate|8046|(15, 11, 8)|var|int8
bop_8047 = relay.bitwise_and(var_8045.astype('int8'), relay.reshape(var_8046.astype('int8'), relay.shape_of(var_8045))) # shape=(15, 11, 8)
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
var_8052 = relay.var("var_8052", dtype = "int32", shape = (112,))#candidate|8052|(112,)|var|int32
call_8051 = relay.TupleGetItem(func_2890_call(relay.reshape(var_8052.astype('int32'), [28, 4])), 2)
call_8053 = relay.TupleGetItem(func_2892_call(relay.reshape(var_8052.astype('int32'), [28, 4])), 2)
func_4684_call = mod.get_global_var('func_4684')
func_4686_call = mutated_mod.get_global_var('func_4686')
call_8055 = relay.TupleGetItem(func_4684_call(), 0)
call_8056 = relay.TupleGetItem(func_4686_call(), 0)
bop_8063 = relay.right_shift(call_8051.astype('uint16'), relay.reshape(var_8052.astype('uint16'), relay.shape_of(call_8051))) # shape=(28, 4)
bop_8066 = relay.right_shift(call_8053.astype('uint16'), relay.reshape(var_8052.astype('uint16'), relay.shape_of(call_8053))) # shape=(28, 4)
bop_8068 = relay.mod(bop_8063.astype('float32'), relay.reshape(call_8051.astype('float32'), relay.shape_of(bop_8063))) # shape=(28, 4)
bop_8071 = relay.mod(bop_8066.astype('float32'), relay.reshape(call_8053.astype('float32'), relay.shape_of(bop_8066))) # shape=(28, 4)
bop_8074 = relay.equal(bop_8063.astype('bool'), relay.reshape(var_8052.astype('bool'), relay.shape_of(bop_8063))) # shape=(28, 4)
bop_8077 = relay.equal(bop_8066.astype('bool'), relay.reshape(var_8052.astype('bool'), relay.shape_of(bop_8066))) # shape=(28, 4)
const_8080 = relay.const([[3.215594,-8.199695,-3.859108,-2.323465],[-4.184733,8.144156,-0.441413,1.862624],[1.318266,-9.880937,8.261836,3.664393],[2.489118,-0.304340,8.916481,-8.751251],[5.623446,-8.507257,8.296304,1.073577],[6.544142,-9.286529,3.163110,4.765272],[-9.702191,8.148643,8.441147,5.015033],[8.451989,6.891688,5.120549,-6.354810],[6.329167,1.443517,3.638233,-1.173634],[5.947915,6.526829,-1.845704,0.145117],[-3.290961,0.923254,0.208890,-2.113449],[-1.599724,6.362322,-1.891768,-7.689602],[-0.710929,-2.894063,-7.076178,-3.083501],[3.607854,-4.493620,-7.584200,-1.424242],[-6.417853,-3.609090,-7.414894,7.617305],[1.324594,5.896467,-4.672398,7.399471],[3.515281,-7.156283,-8.847751,7.958802],[-2.538513,-0.206283,5.655384,5.585188],[-1.412739,9.003904,8.344053,6.471775],[3.301779,-4.906657,-4.021675,9.909045],[9.459577,0.469352,-8.867069,1.425307],[-4.162238,-8.493152,0.188561,-7.609062],[5.287735,-1.441642,-8.185639,4.650846],[-0.147753,0.243737,8.297943,-1.466445],[-2.292435,8.249483,-6.565168,-9.771835],[-5.031857,-5.958977,-5.581603,1.672773],[-0.198496,-8.747376,1.067337,2.575231],[6.547672,-1.443214,6.800180,4.350567]], dtype = "float32")#candidate|8080|(28, 4)|const|float32
bop_8081 = relay.subtract(bop_8068.astype('int8'), relay.reshape(const_8080.astype('int8'), relay.shape_of(bop_8068))) # shape=(28, 4)
bop_8084 = relay.subtract(bop_8071.astype('int8'), relay.reshape(const_8080.astype('int8'), relay.shape_of(bop_8071))) # shape=(28, 4)
bop_8105 = relay.power(bop_8063.astype('float64'), relay.reshape(bop_8081.astype('float64'), relay.shape_of(bop_8063))) # shape=(28, 4)
bop_8108 = relay.power(bop_8066.astype('float64'), relay.reshape(bop_8084.astype('float64'), relay.shape_of(bop_8066))) # shape=(28, 4)
uop_8111 = relay.tan(var_8045.astype('float64')) # shape=(15, 11, 8)
output = relay.Tuple([bop_8047,call_8055,bop_8074,bop_8105,uop_8111,])
output2 = relay.Tuple([bop_8047,call_8056,bop_8077,bop_8108,uop_8111,])
func_8115 = relay.Function([var_8045,var_8046,var_8052,], output)
mod['func_8115'] = func_8115
mod = relay.transform.InferType()(mod)
mutated_mod['func_8115'] = func_8115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8115_call = mutated_mod.get_global_var('func_8115')
var_8117 = relay.var("var_8117", dtype = "int8", shape = (15, 11, 8))#candidate|8117|(15, 11, 8)|var|int8
var_8118 = relay.var("var_8118", dtype = "int8", shape = (15, 11, 8))#candidate|8118|(15, 11, 8)|var|int8
var_8119 = relay.var("var_8119", dtype = "int32", shape = (112,))#candidate|8119|(112,)|var|int32
call_8116 = func_8115_call(var_8117,var_8118,var_8119,)
output = call_8116
func_8120 = relay.Function([var_8117,var_8118,var_8119,], output)
mutated_mod['func_8120'] = func_8120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5093_call = mod.get_global_var('func_5093')
func_5094_call = mutated_mod.get_global_var('func_5094')
call_8150 = relay.TupleGetItem(func_5093_call(), 1)
call_8151 = relay.TupleGetItem(func_5094_call(), 1)
output = relay.Tuple([call_8150,])
output2 = relay.Tuple([call_8151,])
func_8158 = relay.Function([], output)
mod['func_8158'] = func_8158
mod = relay.transform.InferType()(mod)
mutated_mod['func_8158'] = func_8158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8158_call = mutated_mod.get_global_var('func_8158')
call_8159 = func_8158_call()
output = call_8159
func_8160 = relay.Function([], output)
mutated_mod['func_8160'] = func_8160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5914_call = mod.get_global_var('func_5914')
func_5916_call = mutated_mod.get_global_var('func_5916')
call_8234 = func_5914_call()
call_8235 = func_5914_call()
func_7621_call = mod.get_global_var('func_7621')
func_7623_call = mutated_mod.get_global_var('func_7623')
call_8293 = relay.TupleGetItem(func_7621_call(), 2)
call_8294 = relay.TupleGetItem(func_7623_call(), 2)
output = relay.Tuple([call_8234,call_8293,])
output2 = relay.Tuple([call_8235,call_8294,])
func_8295 = relay.Function([], output)
mod['func_8295'] = func_8295
mod = relay.transform.InferType()(mod)
mutated_mod['func_8295'] = func_8295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8295_call = mutated_mod.get_global_var('func_8295')
call_8296 = func_8295_call()
output = call_8296
func_8297 = relay.Function([], output)
mutated_mod['func_8297'] = func_8297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_8346 = relay.TupleGetItem(func_5010_call(), 0)
call_8347 = relay.TupleGetItem(func_5011_call(), 0)
const_8350 = relay.const([[[9.907642,-4.595871,9.424507,6.974625,4.444834,-7.838711,1.052466,6.305833,-0.369752,-9.691341,-6.469853],[7.324309,-2.256844,6.123039,-0.773600,-6.779643,4.517376,-0.295733,3.078640,-7.888718,-2.232481,-6.949151],[-3.053273,-1.296694,1.568526,-9.522337,-0.192566,7.041716,9.590167,0.977158,2.661811,9.711221,-6.944580],[7.736967,5.041018,7.325538,5.517758,7.941766,5.017739,-1.331599,-5.493090,-7.194554,-5.677790,2.572971],[-6.467848,8.885984,-7.084324,-9.507067,-5.036593,1.569697,5.862986,9.324174,-8.678484,-7.887631,-6.737274],[-7.873498,-6.546032,7.533492,-1.523162,-5.960396,-6.594656,-7.047817,-6.834840,2.938161,6.405593,-7.410657],[6.776565,2.374983,-5.659353,3.199058,-3.375879,4.647861,-7.175168,6.798549,7.074215,9.869500,1.933895],[-8.000431,0.467141,-2.817582,-5.704465,3.697507,3.773062,-2.456570,6.196135,-7.590506,0.060914,-7.263332],[1.669419,6.524966,3.184795,-8.177011,-1.110607,-3.928343,-8.209575,-2.229059,7.403093,4.457812,-6.640678]],[[-3.233479,3.345005,0.598220,-7.131697,4.554498,4.179827,-9.047378,6.997378,8.392588,5.975266,7.517410],[3.942471,8.348890,-1.900276,2.525890,-1.287085,-0.327132,-7.677794,-7.414537,7.317616,-0.066443,-6.755785],[0.653889,9.716465,-9.213869,-7.782028,5.642515,8.107012,-2.270452,5.094321,0.940546,1.972368,0.977224],[2.289120,-5.402327,9.946664,-5.763488,4.506040,-3.634945,-4.894071,3.537689,-1.471051,-0.178722,9.477934],[6.527682,-8.777371,-5.837261,-8.749396,-5.344533,-0.106166,-5.505288,3.588643,2.704862,-6.741097,-9.984516],[-0.937743,1.595421,-6.544813,8.861212,-8.966191,-7.841918,5.348486,-4.595272,-0.362516,7.026267,0.353357],[6.095640,-1.020316,4.996187,-9.922203,-9.706919,-9.222073,9.700350,7.294716,-2.043091,-2.335816,5.825955],[-6.285852,4.821813,-5.038836,4.318706,7.510865,-7.890120,9.327552,-7.289975,7.408841,0.266680,8.712922],[-8.083814,4.067505,-7.883460,8.143726,8.777333,-8.414002,4.016579,5.176011,-5.365761,7.128459,9.115228]],[[9.104224,-4.470439,-7.124547,-3.135519,-0.591106,-0.877657,4.879498,1.971911,-8.254509,-7.687062,-1.407668],[4.771950,-6.055817,-9.809699,5.105820,0.486664,2.374908,8.464079,8.912409,8.361388,9.955615,2.321964],[2.094493,2.393774,7.977573,-2.574630,8.292140,2.634079,5.729503,0.663771,6.919940,1.355589,-3.278051],[-6.529009,-1.027930,-2.553826,-2.316103,0.968777,-9.385744,2.926381,-2.545966,0.388302,-9.778408,-9.732284],[-1.527975,-4.992920,-5.361059,6.961435,-0.946838,-2.846377,2.282146,-5.977593,-1.176913,8.361138,9.140528],[-8.956342,-0.429452,1.701768,-3.654578,2.976448,-0.339939,1.234938,4.705336,5.159442,-3.917951,0.684045],[-4.790251,8.470230,8.303404,-0.791048,-7.920241,-6.535464,-2.700843,2.837835,3.715919,-9.945065,-4.707932],[-0.349428,-8.253722,9.959455,4.079076,-6.541742,8.126316,-5.413300,8.999746,8.190005,9.081483,-0.808274],[0.409862,9.299856,-3.718884,-1.046937,2.493852,3.918419,9.012114,-5.427045,1.532632,-8.885130,1.530318]],[[0.117245,6.293421,-8.953699,-2.789388,5.235772,-1.967665,8.754135,-9.873256,7.829529,-2.340007,8.290680],[8.586224,3.041560,-3.741015,8.242660,-9.114877,-1.184916,1.914496,3.942559,-2.777094,-3.039853,5.534019],[8.999262,6.508874,5.392951,0.099242,9.881173,-5.802037,8.089591,7.587256,-5.677471,2.597225,4.218046],[3.992764,3.504858,0.613367,-1.930964,4.469127,-8.821181,-2.472461,-5.696788,-7.893374,3.426938,-9.396090],[-8.721523,6.395066,-3.993755,6.821430,-5.981149,-1.687315,-5.073636,7.369470,-2.204712,7.209453,8.645440],[-6.055156,0.314924,-6.559797,4.238108,-3.827995,-4.454302,7.268200,-2.869053,-2.528240,5.706383,-0.614604],[8.063505,6.505617,-9.140703,-5.732513,-6.522496,-3.634944,-3.898709,-3.930063,1.364391,7.923749,0.514764],[-7.540874,0.175512,-1.271269,3.467228,1.453985,-8.585766,-7.408049,0.787392,-5.610964,5.470311,1.983579],[7.008732,-8.316231,-6.046279,-4.718566,-3.741328,-2.367631,-8.034851,-7.943463,4.904055,-2.073735,-2.136069]],[[9.521986,9.151887,-6.498523,-3.142036,-8.970128,9.526540,-1.052327,-0.058398,3.696899,-0.704976,5.943682],[-0.314823,-5.532955,0.572397,2.745461,-6.366339,2.607245,8.651350,-7.720988,5.000696,2.244468,1.576110],[6.235785,7.817221,-4.890041,-8.352773,-4.604592,-2.555794,-4.730369,5.719349,5.163223,-8.578434,2.261208],[-1.148598,7.419741,1.878365,1.052143,6.175766,-7.567199,5.646610,-4.184496,-4.974078,7.776960,5.927145],[-8.145720,8.507240,-0.520212,-7.559595,6.157300,-3.717544,5.499354,-6.079251,-5.872242,7.071901,-9.942880],[-7.890917,-8.160860,2.452405,3.487706,0.809468,2.033364,2.688769,8.253114,3.990173,6.188784,1.923398],[6.943149,4.817365,7.421616,5.021060,3.207808,-6.637850,-4.728569,2.984150,0.033545,-4.886521,-3.650144],[-5.790222,0.257498,-1.651413,9.301592,4.009074,0.053600,7.300656,1.404848,-1.668433,-8.436486,-7.110798],[-3.798166,-4.274329,6.019477,-8.353848,-9.109611,2.658571,0.276467,-3.423230,3.532583,2.547274,-2.935587]],[[-6.195304,5.171542,1.695482,8.576135,9.948584,2.202240,2.763149,-4.487579,-3.480601,7.672054,-9.080463],[-0.237769,0.263155,3.985965,-8.318672,3.582101,7.969464,-2.480801,-9.031174,2.963070,6.392034,2.821008],[1.785433,4.543728,5.658647,1.849039,0.080048,-7.649575,9.645662,5.516589,-2.998276,-1.986179,-4.650366],[-7.681489,5.403522,-6.844874,-4.681386,5.751014,9.135873,-4.105560,6.151896,-7.195932,1.148062,-4.227949],[-7.698177,-9.759215,-4.094091,3.248096,8.484188,-6.813136,3.184999,-2.941475,-9.741062,3.037392,-2.598252],[-8.847659,8.924180,-3.895751,-9.491360,4.171722,-3.715296,9.087626,0.069717,3.643735,-0.963605,4.834693],[-7.219069,4.746806,2.090635,-8.208582,-2.720705,-1.900824,-4.648546,-6.482443,2.852044,3.780690,-7.261966],[-8.988128,1.909328,-2.900766,9.903342,9.073377,0.537896,0.242952,6.309381,-2.180831,-4.704001,4.354793],[6.194389,8.003325,-8.931742,9.756622,6.088451,-7.967143,4.406938,-3.005594,-5.733498,6.756438,8.777476]]], dtype = "float32")#candidate|8350|(6, 9, 11)|const|float32
bop_8351 = relay.subtract(call_8346.astype('int8'), relay.reshape(const_8350.astype('int8'), relay.shape_of(call_8346))) # shape=(6, 9, 11)
bop_8354 = relay.subtract(call_8347.astype('int8'), relay.reshape(const_8350.astype('int8'), relay.shape_of(call_8347))) # shape=(6, 9, 11)
output = bop_8351
output2 = bop_8354
func_8358 = relay.Function([], output)
mod['func_8358'] = func_8358
mod = relay.transform.InferType()(mod)
mutated_mod['func_8358'] = func_8358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8358_call = mutated_mod.get_global_var('func_8358')
call_8359 = func_8358_call()
output = call_8359
func_8360 = relay.Function([], output)
mutated_mod['func_8360'] = func_8360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6203_call = mod.get_global_var('func_6203')
func_6204_call = mutated_mod.get_global_var('func_6204')
call_8383 = relay.TupleGetItem(func_6203_call(), 0)
call_8384 = relay.TupleGetItem(func_6204_call(), 0)
func_5280_call = mod.get_global_var('func_5280')
func_5281_call = mutated_mod.get_global_var('func_5281')
call_8391 = relay.TupleGetItem(func_5280_call(), 0)
call_8392 = relay.TupleGetItem(func_5281_call(), 0)
func_4762_call = mod.get_global_var('func_4762')
func_4763_call = mutated_mod.get_global_var('func_4763')
call_8399 = func_4762_call()
call_8400 = func_4762_call()
output = relay.Tuple([call_8383,call_8391,call_8399,])
output2 = relay.Tuple([call_8384,call_8392,call_8400,])
func_8409 = relay.Function([], output)
mod['func_8409'] = func_8409
mod = relay.transform.InferType()(mod)
mutated_mod['func_8409'] = func_8409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8409_call = mutated_mod.get_global_var('func_8409')
call_8410 = func_8409_call()
output = call_8410
func_8411 = relay.Function([], output)
mutated_mod['func_8411'] = func_8411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6109_call = mod.get_global_var('func_6109')
func_6110_call = mutated_mod.get_global_var('func_6110')
call_8440 = relay.TupleGetItem(func_6109_call(), 0)
call_8441 = relay.TupleGetItem(func_6110_call(), 0)
uop_8465 = relay.sinh(call_8440.astype('float64')) # shape=(3, 2, 9)
uop_8467 = relay.sinh(call_8441.astype('float64')) # shape=(3, 2, 9)
bop_8476 = relay.greater(uop_8465.astype('bool'), relay.reshape(call_8440.astype('bool'), relay.shape_of(uop_8465))) # shape=(3, 2, 9)
bop_8479 = relay.greater(uop_8467.astype('bool'), relay.reshape(call_8441.astype('bool'), relay.shape_of(uop_8467))) # shape=(3, 2, 9)
output = bop_8476
output2 = bop_8479
func_8491 = relay.Function([], output)
mod['func_8491'] = func_8491
mod = relay.transform.InferType()(mod)
mutated_mod['func_8491'] = func_8491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8491_call = mutated_mod.get_global_var('func_8491')
call_8492 = func_8491_call()
output = call_8492
func_8493 = relay.Function([], output)
mutated_mod['func_8493'] = func_8493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5817_call = mod.get_global_var('func_5817')
func_5819_call = mutated_mod.get_global_var('func_5819')
call_8502 = relay.TupleGetItem(func_5817_call(), 0)
call_8503 = relay.TupleGetItem(func_5819_call(), 0)
func_4118_call = mod.get_global_var('func_4118')
func_4119_call = mutated_mod.get_global_var('func_4119')
call_8547 = func_4118_call()
call_8548 = func_4118_call()
output = relay.Tuple([call_8502,call_8547,])
output2 = relay.Tuple([call_8503,call_8548,])
func_8549 = relay.Function([], output)
mod['func_8549'] = func_8549
mod = relay.transform.InferType()(mod)
mutated_mod['func_8549'] = func_8549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8549_call = mutated_mod.get_global_var('func_8549')
call_8550 = func_8549_call()
output = call_8550
func_8551 = relay.Function([], output)
mutated_mod['func_8551'] = func_8551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7621_call = mod.get_global_var('func_7621')
func_7623_call = mutated_mod.get_global_var('func_7623')
call_8555 = relay.TupleGetItem(func_7621_call(), 3)
call_8556 = relay.TupleGetItem(func_7623_call(), 3)
output = call_8555
output2 = call_8556
func_8558 = relay.Function([], output)
mod['func_8558'] = func_8558
mod = relay.transform.InferType()(mod)
output = func_8558()
func_8559 = relay.Function([], output)
mutated_mod['func_8559'] = func_8559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5788_call = mod.get_global_var('func_5788')
func_5789_call = mutated_mod.get_global_var('func_5789')
call_8593 = relay.TupleGetItem(func_5788_call(), 3)
call_8594 = relay.TupleGetItem(func_5789_call(), 3)
var_8596 = relay.var("var_8596", dtype = "uint32", shape = (96, 2))#candidate|8596|(96, 2)|var|uint32
bop_8597 = relay.less(call_8593.astype('bool'), relay.reshape(var_8596.astype('bool'), relay.shape_of(call_8593))) # shape=(96, 2)
bop_8600 = relay.less(call_8594.astype('bool'), relay.reshape(var_8596.astype('bool'), relay.shape_of(call_8594))) # shape=(96, 2)
output = bop_8597
output2 = bop_8600
func_8619 = relay.Function([var_8596,], output)
mod['func_8619'] = func_8619
mod = relay.transform.InferType()(mod)
mutated_mod['func_8619'] = func_8619
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8620 = relay.var("var_8620", dtype = "uint32", shape = (96, 2))#candidate|8620|(96, 2)|var|uint32
func_8619_call = mutated_mod.get_global_var('func_8619')
call_8621 = func_8619_call(var_8620)
output = call_8621
func_8622 = relay.Function([var_8620], output)
mutated_mod['func_8622'] = func_8622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8632 = relay.var("var_8632", dtype = "float32", shape = (12, 1))#candidate|8632|(12, 1)|var|float32
uop_8633 = relay.asin(var_8632.astype('float32')) # shape=(12, 1)
output = relay.Tuple([uop_8633,])
output2 = relay.Tuple([uop_8633,])
func_8635 = relay.Function([var_8632,], output)
mod['func_8635'] = func_8635
mod = relay.transform.InferType()(mod)
var_8636 = relay.var("var_8636", dtype = "float32", shape = (12, 1))#candidate|8636|(12, 1)|var|float32
output = func_8635(var_8636)
func_8637 = relay.Function([var_8636], output)
mutated_mod['func_8637'] = func_8637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5817_call = mod.get_global_var('func_5817')
func_5819_call = mutated_mod.get_global_var('func_5819')
call_8726 = relay.TupleGetItem(func_5817_call(), 1)
call_8727 = relay.TupleGetItem(func_5819_call(), 1)
output = relay.Tuple([call_8726,])
output2 = relay.Tuple([call_8727,])
func_8747 = relay.Function([], output)
mod['func_8747'] = func_8747
mod = relay.transform.InferType()(mod)
mutated_mod['func_8747'] = func_8747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8747_call = mutated_mod.get_global_var('func_8747')
call_8748 = func_8747_call()
output = call_8748
func_8749 = relay.Function([], output)
mutated_mod['func_8749'] = func_8749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6554_call = mod.get_global_var('func_6554')
func_6556_call = mutated_mod.get_global_var('func_6556')
call_8765 = relay.TupleGetItem(func_6554_call(), 0)
call_8766 = relay.TupleGetItem(func_6556_call(), 0)
output = call_8765
output2 = call_8766
func_8777 = relay.Function([], output)
mod['func_8777'] = func_8777
mod = relay.transform.InferType()(mod)
mutated_mod['func_8777'] = func_8777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8777_call = mutated_mod.get_global_var('func_8777')
call_8778 = func_8777_call()
output = call_8778
func_8779 = relay.Function([], output)
mutated_mod['func_8779'] = func_8779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7891_call = mod.get_global_var('func_7891')
func_7893_call = mutated_mod.get_global_var('func_7893')
call_8827 = func_7891_call()
call_8828 = func_7891_call()
output = relay.Tuple([call_8827,])
output2 = relay.Tuple([call_8828,])
func_8834 = relay.Function([], output)
mod['func_8834'] = func_8834
mod = relay.transform.InferType()(mod)
output = func_8834()
func_8835 = relay.Function([], output)
mutated_mod['func_8835'] = func_8835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7575_call = mod.get_global_var('func_7575')
func_7577_call = mutated_mod.get_global_var('func_7577')
call_8842 = relay.TupleGetItem(func_7575_call(), 0)
call_8843 = relay.TupleGetItem(func_7577_call(), 0)
output = call_8842
output2 = call_8843
func_8845 = relay.Function([], output)
mod['func_8845'] = func_8845
mod = relay.transform.InferType()(mod)
mutated_mod['func_8845'] = func_8845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8845_call = mutated_mod.get_global_var('func_8845')
call_8846 = func_8845_call()
output = call_8846
func_8847 = relay.Function([], output)
mutated_mod['func_8847'] = func_8847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8777_call = mod.get_global_var('func_8777')
func_8779_call = mutated_mod.get_global_var('func_8779')
call_8894 = func_8777_call()
call_8895 = func_8777_call()
func_1480_call = mod.get_global_var('func_1480')
func_1484_call = mutated_mod.get_global_var('func_1484')
const_8899 = relay.const([[-2.329395,-6.558797],[2.845152,8.617193],[-4.398976,2.057191],[4.995306,2.206661],[-1.698623,5.990473],[3.764453,-8.402872],[2.174775,6.260522],[9.183532,1.970649],[-3.100135,-6.775111],[-1.149422,-9.790810],[8.094728,0.412491],[-4.242093,5.799078],[-5.109887,0.066352],[6.049571,3.991022],[1.058713,-6.043396],[-6.523619,-7.094362],[-7.830442,-4.957339],[-2.460488,6.147376],[-1.784015,-0.966769],[-8.339796,5.732286],[4.728784,-3.203180],[2.294142,5.598084],[-0.887903,2.337733],[-8.069008,0.383238],[-1.071730,4.444927],[8.408356,6.784596],[3.474808,-8.931609],[2.818898,-6.099330],[-6.938475,3.087375],[-6.830841,5.116595],[-5.885674,0.153925],[-6.507510,8.692014],[-0.031292,-3.934186],[-5.993442,-1.004559],[9.183994,2.434064],[-0.251076,7.563768],[-0.990069,-6.326507],[-4.133226,-0.777862],[-2.231864,1.695433],[-5.911439,-6.842726],[1.444532,-5.064988],[-2.101156,5.482437],[1.721907,-8.945384],[-4.958310,4.923157],[-3.741134,2.757806],[9.621146,3.375790],[-4.138618,-6.963408],[-6.784071,3.743111],[2.452671,9.574157],[-1.031360,-6.788369],[9.219289,-9.388589],[-7.058201,-1.165305],[2.170782,9.669085],[3.291093,3.598506],[1.868686,7.343670],[-8.616458,1.292407],[-3.328942,2.711152],[3.410308,1.432837],[-2.620644,-3.588692],[7.157546,0.850753],[9.884212,4.822798],[1.505332,-6.929825],[-6.752518,-2.845464],[-6.660893,1.237480],[-7.607562,-9.863792],[-2.645371,-3.088189],[6.060071,7.581237],[-5.203285,8.178425],[-6.260512,-9.611789],[1.968338,-2.444172],[-7.335214,-4.303477],[7.880207,-1.625992],[-9.221580,9.939376],[-4.152852,2.493887],[5.528924,-7.825253],[0.506364,2.350223],[-0.980925,-5.074966],[-7.677070,5.472666],[4.515187,4.954098],[0.511810,3.843197],[-0.866158,-0.781942],[-9.936951,-7.501054],[5.494570,2.504164],[8.733578,-7.753586],[6.404955,0.993360],[3.035445,-1.566720],[4.228627,6.242275],[9.679199,-9.365219],[-8.921238,-9.484564],[9.478825,-2.854169],[5.091606,0.349327],[-7.805409,-8.455620],[-9.926087,6.316566],[4.253072,6.293032],[9.542418,4.845753],[3.000279,2.704565],[7.688106,-4.795269],[-1.371898,6.391173],[2.959096,-3.606657],[-6.348667,1.745108],[3.032203,-6.945128],[-2.440251,1.541616],[2.914888,3.609594],[-1.709514,-1.764653],[-1.901650,-4.837547],[1.637613,6.497858],[4.897004,-4.619644],[-7.861988,-9.158223],[-2.897014,-9.049722],[-3.477679,-0.197262],[5.553627,-4.386529],[-8.939791,1.537936],[-6.620886,-9.936146],[9.961114,-5.391214],[6.000947,-4.785009],[-6.328165,9.752417],[4.218858,3.907171],[5.290958,2.554749],[6.885912,3.467631],[-2.071468,3.639376],[-1.342913,-8.479570],[7.397609,-1.225531],[2.326508,-0.404660],[-1.212723,-7.058540],[-4.037009,3.137345],[-9.893243,-8.131280],[9.634399,7.667372],[-6.069212,-9.424705],[-3.668150,-1.106132],[6.825812,9.945217],[8.862303,-4.630722],[5.898361,4.386459],[-1.889978,-1.758931],[-9.479866,5.679032],[-2.984231,9.625852],[2.922233,0.866227],[4.789700,2.426837],[4.033420,4.647826],[-4.744467,-0.332898],[2.302205,2.975015],[-3.761705,-7.316285],[-5.380544,-7.073317],[-3.913455,9.522177],[8.922276,-3.196946],[-1.381237,5.415261],[-4.020273,-7.360898],[-4.844346,-9.543224],[9.245070,-7.188015],[3.232278,-6.771935],[-7.516923,-9.766559],[-6.642191,-6.112780],[7.354730,-6.309649],[-4.683152,1.595847],[0.130163,3.798974],[-2.363918,3.324921],[-0.130736,9.427582],[-6.536905,0.655530],[7.189729,0.104562],[-7.193131,5.287673],[-6.143640,9.693242],[-6.398967,6.958012],[0.500622,2.770666],[4.617338,5.961058],[-7.722002,2.990841],[-7.581671,9.600869],[0.204414,5.871081],[-3.405851,1.208522],[3.651964,3.920028],[0.532054,2.033610],[-2.521493,-3.633546],[0.851236,0.187605],[-4.187167,-0.605147],[3.844420,-1.561235],[-9.540776,-6.091348],[8.448164,-3.703873],[8.626637,-1.946874],[-9.427083,7.445900],[-2.479157,-6.557187],[8.852256,-0.730922],[4.507908,-4.646905],[-4.759453,5.185555],[-8.247969,-9.470654],[1.687374,-8.074881],[-3.719585,4.953679],[-0.390381,6.523258],[-5.660181,-1.752597],[7.303321,0.693768],[1.671634,-2.586642],[7.039011,7.514912],[0.094269,3.558777],[-0.478466,5.681697],[-2.567416,8.717330],[4.837767,2.871835],[5.746035,6.944824],[-0.437682,7.481746],[-2.493256,-1.069049],[4.128088,-0.944208],[0.124452,2.734374],[9.530020,-1.571989],[6.987852,9.333977],[4.417994,-5.749827],[-6.780679,7.452446],[-6.091032,3.668106],[-7.723145,-5.142903],[8.430583,2.197744],[-2.822725,-9.560332],[1.642044,5.783989],[-5.898254,-0.752868],[-9.683075,-1.560664],[-9.609772,2.906856],[-8.677825,-1.165673],[-0.716981,-5.424460],[5.446908,-3.342175],[-8.702861,4.279583],[-3.891344,-4.000224],[6.249662,-3.847600],[3.551895,6.868665],[-9.121368,6.342659],[5.015801,-0.878580],[-6.069791,2.126262],[-2.606283,-1.485817],[-0.203832,-1.783348],[-6.407164,6.890403],[2.747446,8.637507],[8.394089,8.838461],[-4.237264,-7.429893],[-0.956538,6.032635],[-0.816895,-9.617936],[8.648901,6.582860],[-6.917086,-4.548028],[4.480327,1.715201],[5.407923,2.134100],[1.230087,-2.250765],[3.899943,2.774143],[6.799449,2.257773],[6.862822,-1.190921],[-2.323100,-8.899389],[-8.017821,0.305435],[-4.849482,-7.536308],[-4.522932,-1.917102],[-1.275925,1.452769],[-1.187790,9.578863],[8.321639,9.097220],[-5.972851,6.885288],[7.291719,-9.560622],[-1.416073,4.140760],[-7.823360,-8.744781],[-4.920926,-5.946827],[-4.669060,-2.578122],[-2.263731,-7.788644],[-9.055334,-2.617615],[-1.007363,2.743001],[0.541809,7.821444],[-8.850537,-6.674278],[-7.620926,2.993769],[-1.704511,-9.258490]], dtype = "float32")#candidate|8899|(256, 2)|const|float32
const_8900 = relay.const([-7.921787,5.070825,6.475885,-2.710438,-6.997215,2.554930,9.350125,7.715067,-5.273381,-3.646038,4.104178,7.552706,9.161198,-0.230378,-3.155730,-5.830387,3.263823,-8.329617,8.787142,-4.705280,-1.981367,7.579263,-9.584995,0.629461,-0.490792,-5.370620,1.976075,3.214728,8.912378,3.657695,0.516067,-8.599329,-4.288382,9.560456,7.176087,3.934323,-3.091119,8.006900,2.197898,4.539499,-9.856702,6.332383,6.802390,-0.343750,-0.632729,-2.704752,5.523503,6.591599,7.335013,5.110112,-2.467186,1.187307,3.098687,-0.733700,0.434265,3.094242,0.798619,-3.703098,2.624363,3.401495,-3.762697,-2.310187,-2.654339,7.223599,-4.379320,9.504823,9.293979,1.433259,6.702718,-7.945009,9.200445,1.222759,-9.294891,0.690205,-0.057221,-0.984623,8.187279,0.153992,-0.606972,4.004930], dtype = "float64")#candidate|8900|(80,)|const|float64
const_8901 = relay.const([0.226426,-1.830998,-2.795837,-2.395568,-7.678518,-1.100297,8.150392,-9.523201,-7.903613,-9.430007,7.353532,-5.529273,4.712384,8.631554,-4.778850,4.351470,7.205283,-1.771149,-6.716763,-9.644413,-3.122746,-2.266798,-8.589311,-0.143104,8.550276,-0.865424,-4.818126,-2.881001,9.739916,-4.203566,-3.995526,4.219802,1.687509,-0.771247,-8.143695,-8.607102,9.615868,-4.017516,-0.534443,1.101927,-7.512493,-9.923333,-1.181554,-9.536936,-4.516534,5.146468,-8.030464,2.545973,-6.275930,-1.585866,-2.741448,-8.502449,6.031405,1.923175,5.033445,0.047487,0.751136,-7.052553,-8.584457,1.435427,1.654995,1.185149,0.652108,-1.295236,-4.200182,1.766466,6.658350,8.808893,-9.005031,-5.969780,8.261242,4.643340,-8.780459,-0.300428,-2.666226,2.527826,-5.884970,-0.486273,5.199434,6.266824,5.621779,-1.100361,-5.067256,5.090529,3.675465,-6.430947,8.493034,6.963846,9.881254,-9.125322,0.270489,-5.192892,-1.256209,3.135561,1.093984,-8.564418,3.421391,4.123864,-2.342858,1.892948,7.942234,-2.519184,2.016956,-1.949460,5.777705,5.507851,-9.226428,-4.497094,-2.539596,0.452481,-7.679226,-5.384189,-0.257492,-0.399779,-3.805358,-4.665602,2.662893,-8.781279,-9.022090,-7.345874,5.813450,-0.661588,8.178436,-9.843666,7.277927,3.660956,3.795440,6.508205,5.429403,-6.749524,8.213451,2.296870,1.453185,-9.969957,-0.033024,7.313376,-7.283083,-8.781872,-7.852822,9.319323,-3.895549,-7.637735,-2.507534,0.549410,7.942740,1.488945,8.990119,0.691799,-1.008219,-9.536159,-1.887697,-4.011119,-0.838852,-3.430622,2.764114,-1.321201,-9.197679,-7.285793,-0.443811,9.068132,6.231408,6.996106,1.606817,-0.950242,-2.099640,9.648146,-0.906891,9.625456,-8.675781,-6.025627,4.599023,6.156567,3.555164,-8.424839,6.317890,4.086707,-8.930784,4.740544,8.592150,2.779865,6.847678,0.216295,-3.854294,-1.126528,-5.534748,-9.254415,0.880768,-2.102608,0.172234,-7.975550,-8.694040,-4.771186,-7.895895,-5.073254,0.801096,4.224585,-8.445339,-1.507384,0.201765,4.525633,5.427244,3.696271,2.419699,1.011528,-9.668019,-6.715523,0.742680,9.464651,-1.865436,-4.788893,1.492032,-1.586253,-7.679169,-0.922520,3.395158,3.865358,-1.553568,2.598009,-2.890733,-1.817628,2.472997,3.279289,4.599555,-8.541485,3.657685,2.501821,4.678059,-0.240049,1.058429,8.412118,0.839746,4.124275,-2.994023,9.572432,-5.528844,5.569247,-9.988117,-2.172651,-5.856036,-4.902538,0.010765,-2.754733,6.324333,-8.385415,-3.971879,-5.464628,8.691966,8.042745,-9.257651,-7.497330,-2.489409,-7.807999,1.935136,2.117763,-5.889563,2.049224,4.608924,-0.584443,-0.844855,0.873772,-4.232830,-1.562102,-6.224982,4.157547,2.910819,3.108229,-9.647945,-9.022441,-5.457922,9.384630,4.573325,2.706523,-1.527317,-7.699240,-9.029460,3.545989,9.653067,-0.621879,8.068842,-7.766699,-3.295257,2.989745,-6.872017,-9.309251,5.568902,3.972672,-2.012463,8.678728,-3.121236,5.196125,-2.252227,7.771092,8.250148,9.181007,-7.091402,3.493164,4.693733,7.559371,-7.265258,-6.443844,8.201145,8.326635,-2.862589,-1.800029,-6.876069,-2.333339,9.926719,-5.103967,6.586104,1.943155,7.141339,-1.885693,9.295575,-2.181004,2.319796,9.738714,-1.155738,-5.871697,-5.513701,8.509275,0.213759,2.430189,-1.585784,8.842630,1.577916,5.051105,0.757418,6.092128,5.528734,-2.399904,-6.789452,7.764520,-7.271043,-4.946017,-1.590087,1.508032,8.330158,-1.356769,-2.772659,6.720151,8.308897,6.842710,7.435489,3.738338,-4.313888,0.465532,-5.578601,-6.096164,1.578566,6.070767,-9.541320,5.025602,0.526706,9.992045,4.421024,7.361201,1.246936,0.097941,9.548000,7.294120,-9.612854,-6.176795,5.275293,-5.948859,1.144336,8.413090,-2.099269,5.574958,-9.698931,-2.333140,-1.395985,-1.463056,-6.092462,-1.298643,6.941846,8.866846,-7.145883,-4.859976,-5.028908,-7.547386,-4.274407,-4.700278,-8.672063,-6.322241,-3.592403,-7.454842,-5.350347,2.642432,-6.233536,-5.975121,5.193831,-9.600584,0.894166,-5.389971,3.637656,-5.487270,-6.583835,-2.731247,-2.087409,1.872085,4.640655,4.659558,9.894324,-9.985493,-6.017602,0.843714,4.018516,-8.331198,-6.833407,-7.887268,2.085552,7.391986,3.051583,9.429713,-9.574521,2.075600,-0.758283,1.590455,2.535380,-9.002053,-4.585826,6.857801,9.697099,-8.916892,-6.073600,5.736365,5.765535,7.012022,-4.861548,6.106847,-2.851339,8.630234,3.349837,-0.269453,-3.149289,9.164107,-5.189608,-6.183399,-7.490876,0.849838,-4.364324,-6.693915,9.500942,-5.289433,-3.135983,-7.383698,-9.353432,-2.063721,-2.731777,-7.537062,6.931719,4.431568,7.770856,0.301408,-7.346939,-8.097680,2.704623,0.365526,0.424940,-8.291840,9.791428,-4.849348,-2.237015,1.657443,8.129844,-9.091891,5.124365,-3.894168,0.878876,-3.283144,-1.822694,-0.968564,-5.324716,-5.906904,-5.141292,6.719404,8.619243,7.261805,-1.184852,-2.783863,9.462139,-1.757205,-6.086142,0.449974,-9.554928,2.722338,-5.212938,-3.534852,3.948169,-4.140986,-3.046690,7.535229,0.375596,8.759891,-6.064466,9.795762,-9.514937,-1.166332,-0.278965,0.294679,-3.646206,5.048808,-1.024092,0.241144,-0.009867,7.100083,8.871731,-9.915271,-7.174253,7.833777,2.705083,-9.525467,-5.191153,-3.655862,-2.470006,-8.607525,4.835829,6.906463,1.327856,9.051026,2.439138,-3.178061,-5.951810,4.936238,2.595991,4.338493,-2.839961,-2.069524,-7.413712,4.368515,-9.147426,6.291038,-6.925834,-8.264944,0.967442,1.924273,-8.924033,-7.584417,8.163839,6.163729,-2.537484,7.572164,-5.343805,9.730862,7.600671,3.311753,-0.814169,2.073243,-1.836460,4.160050,0.044760,-7.884924,-1.362535,-8.744516,-6.266283,-0.600022,-4.730706,1.648597,-5.014269,-7.650002,-8.027299,6.874429,-4.047687,4.876957,-6.522124,9.695057,4.004174,-7.043021,-4.085562,6.825544,-2.639909,3.823434,-3.076347,-1.230239,6.191731,-6.423046,-4.588752,0.269906,-1.067097,6.730513,7.191709,-5.653426,-8.132741,-1.619230,-0.065288,-8.645944,-5.101318,0.155679,-4.861182,3.493102,-0.200078,7.697559,7.372922,-0.131067,5.432351,1.156626,-1.938358,-1.667604,-4.736474,0.382418,-1.576443,0.341706,5.460541,7.501585,-8.629139,6.173020,-0.446921,-2.748065,1.570288,5.738324,-9.933097,7.745701,7.308563,-4.244131,7.517114,-6.014312,4.606171,-8.066422,-4.365771,-6.498823,-8.339522,-6.819178,7.609027,-9.196141,6.262515,1.549002,-2.520569,-4.020058,-5.821258,9.731213,-5.721390,-9.283980,-7.293795,-0.107965,-1.844381,0.812366,-4.766501,-8.833832,-0.382897,1.952974], dtype = "float64")#candidate|8901|(640,)|const|float64
call_8898 = relay.TupleGetItem(func_1480_call(relay.reshape(const_8899.astype('float32'), [4, 8, 16]), relay.reshape(const_8900.astype('float64'), [80,]), relay.reshape(const_8901.astype('float64'), [16, 8, 5]), ), 5)
call_8902 = relay.TupleGetItem(func_1484_call(relay.reshape(const_8899.astype('float32'), [4, 8, 16]), relay.reshape(const_8900.astype('float64'), [80,]), relay.reshape(const_8901.astype('float64'), [16, 8, 5]), ), 5)
output = relay.Tuple([call_8894,call_8898,const_8899,const_8900,const_8901,])
output2 = relay.Tuple([call_8895,call_8902,const_8899,const_8900,const_8901,])
func_8909 = relay.Function([], output)
mod['func_8909'] = func_8909
mod = relay.transform.InferType()(mod)
output = func_8909()
func_8910 = relay.Function([], output)
mutated_mod['func_8910'] = func_8910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5929_call = mod.get_global_var('func_5929')
func_5930_call = mutated_mod.get_global_var('func_5930')
call_8916 = relay.TupleGetItem(func_5929_call(), 0)
call_8917 = relay.TupleGetItem(func_5930_call(), 0)
output = call_8916
output2 = call_8917
func_8934 = relay.Function([], output)
mod['func_8934'] = func_8934
mod = relay.transform.InferType()(mod)
output = func_8934()
func_8935 = relay.Function([], output)
mutated_mod['func_8935'] = func_8935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6957_call = mod.get_global_var('func_6957')
func_6959_call = mutated_mod.get_global_var('func_6959')
call_8943 = relay.TupleGetItem(func_6957_call(), 0)
call_8944 = relay.TupleGetItem(func_6959_call(), 0)
func_7351_call = mod.get_global_var('func_7351')
func_7354_call = mutated_mod.get_global_var('func_7354')
const_8955 = relay.const([[-9.447305,-6.070730,-5.076871,3.908427,-7.152497,-8.442378,-5.769993,-9.492062,-2.578713,-6.779485,-9.749875,7.385838,-5.529750,7.456909,-5.115535,-6.734316,-9.170165,-0.858300,1.313158,8.123758,-5.009087,5.462307,-4.501114,3.415349,8.284260,0.195479,1.626697,3.703942,-0.365118,8.257277],[-9.891721,1.588285,-6.369402,2.804937,3.080498,-4.506075,-4.055884,6.937664,2.787116,7.613923,-1.769372,-7.585092,-7.076021,-4.691594,-7.828842,4.277748,6.283336,7.365661,-4.550623,0.505242,1.080842,-9.723218,7.585193,-9.517248,-0.893329,-2.051656,1.483786,2.434734,-5.108324,-5.902507],[0.180824,3.399137,-0.108690,-6.189405,8.801411,-9.034501,5.479983,-1.530124,-9.259720,5.801541,0.948121,-4.971663,-8.774608,-6.340379,5.572967,4.852796,-1.566207,7.360018,8.760178,4.537605,-4.245627,4.119850,-6.466021,-9.629655,6.678080,-9.717379,8.146943,4.886823,-0.689104,-2.375532]], dtype = "float32")#candidate|8955|(3, 30)|const|float32
call_8954 = relay.TupleGetItem(func_7351_call(relay.reshape(const_8955.astype('float32'), [1, 15, 6])), 0)
call_8956 = relay.TupleGetItem(func_7354_call(relay.reshape(const_8955.astype('float32'), [1, 15, 6])), 0)
func_6554_call = mod.get_global_var('func_6554')
func_6556_call = mutated_mod.get_global_var('func_6556')
call_8962 = relay.TupleGetItem(func_6554_call(), 0)
call_8963 = relay.TupleGetItem(func_6556_call(), 0)
output = relay.Tuple([call_8943,call_8954,const_8955,call_8962,])
output2 = relay.Tuple([call_8944,call_8956,const_8955,call_8963,])
func_8974 = relay.Function([], output)
mod['func_8974'] = func_8974
mod = relay.transform.InferType()(mod)
output = func_8974()
func_8975 = relay.Function([], output)
mutated_mod['func_8975'] = func_8975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4928_call = mod.get_global_var('func_4928')
func_4930_call = mutated_mod.get_global_var('func_4930')
call_8992 = relay.TupleGetItem(func_4928_call(), 0)
call_8993 = relay.TupleGetItem(func_4930_call(), 0)
output = relay.Tuple([call_8992,])
output2 = relay.Tuple([call_8993,])
func_8996 = relay.Function([], output)
mod['func_8996'] = func_8996
mod = relay.transform.InferType()(mod)
mutated_mod['func_8996'] = func_8996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8996_call = mutated_mod.get_global_var('func_8996')
call_8997 = func_8996_call()
output = call_8997
func_8998 = relay.Function([], output)
mutated_mod['func_8998'] = func_8998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7873_call = mod.get_global_var('func_7873')
func_7875_call = mutated_mod.get_global_var('func_7875')
call_9011 = relay.TupleGetItem(func_7873_call(), 0)
call_9012 = relay.TupleGetItem(func_7875_call(), 0)
func_4275_call = mod.get_global_var('func_4275')
func_4278_call = mutated_mod.get_global_var('func_4278')
const_9014 = relay.const([3,7,-8,-5,6,5,6,-2,-9,-10,-9,7,-8,7,1,-7,10,6,10,-5,3,-2,1,7,-2,7,1,3,2,9,6,8,1,7,5,8,4,-10,2,5,4,7,5,-5,8,10,9,1,4,-9,-10,1,-7,-6,-8,-6,2,-10,-3,-4,6,-6,-4,4,7,-8,-10,-8,10,7,7,-2,7,6,6,1,-1,-6,-6,-2,-4,7,-9,-1,2,-7,-1,6,1,-6,-1,9,-5,-9,-5,-3,3,-3,8,-1,3,-7,-7,2,6,-4,-8,1,10,-6,10,6,-1,6,-6,-8,-7,5,10,5,-7,5,4,9,-5,-10,4,10,8,5,-5,5,9,-7,7,-9,10,2,-9,9,7,8,-7,7,4,-1,6,-2,-6,-8,-10,-1,-10,-4,5,-4,3,4,-2,-9,-4,7,6,6,6,-9,10,7,-5,10,6,-2,6,1,4,6,10,-7,1,-2,-7,5,3,9,5,-7,3,-10,-3,7,-10,-5,-6,-9,-8,-6,-2,-4,3,2,-3,6,6,3,6,-9,4,-7,8,7,-8,3,-2,-6,10,-2,7,-9,6,6,-3,-8,-9,-7,-2,-7,7,-10,-8,-7,-6,-3,9,-8,3,4,-9,5,7,8,-8,10,4,-8,10,-3,4,-9,-8,-7,3,9,6,-1,-7,4,4,5,-8,10,-8,-4,1,-7,-2,-9,8,8,-3,-10,-8,8,-10,9,5,6,4,-6,-3,3,-9,-4,-2,2,-3,-6,7,-2,6,-7,-5,-6,4,6,-7,5,-3,3,-1,-9,-7,5,8,3,3,6,-4,6,4,-5,1,5,9,9,2,4,2,3,1,5,7,-1,-2,1,7,7,8,-1,-1,-8,-8,-10,6,-2,1,-10,-9,-1,7,8,-8,3,-6,-4,5,-10,8,5,3,-10,9,3,10,8,6,3,-1,-1,-3,6,8,-2,5,-8,-7,3,8,-3,-1,-10,-8,-8,-9,8,3,9,9,6,9,2,-4,-3,2,3,-10,10,-7,-7,-7,-8,8,-2,1,10,-5,9,9,2,-9,-7,-9,6,-5,-2,-9,-5,-2,-5,6,-2,-10,-10,2,-2,-8,-1,-6,-3,-2,-3,7,-10,-4,1,-2,1,-5,-1,-3,-9,2,8,-7,-6,7,-9,-7,5,-6,1,9,-10,-5,1,-3,-10,10,-2,-10,5,-8,-2,-5,-6,3,-9,-1,9,9,5,2,-7,-5,9,-7,-3,-9,10,3,-5,3,-1,2,-10,1,2,-1,6,-6,-1,9,10,10,4,-5,-2,-10,5,-4,-2,2,-10,1,-1,5,1,-8,4,10,3,-4,8,-7,-7,-7,8,2,-4,-8,-1,-7,-8,3,4,9,-3,-10,10,-1,10,5,9,10,10,10,-2,4,-3,2,-4,-5,-6,5,4,-3,8,-4,5,2,-1,-7,-9,-3,-1,2,-7,-2,1,9,5,-2,9,-2,10,-2,-8,4,-3,2,3,1,10,-3,1,6,3,3,-4,8,10,-4,10,-6,6,-9,1,-9,3,1,3,4,-7,-7,1,-2,-7,9,-4,-2,-4,-1,1,7,-3,10,8,-1,-10,-4,4,-1,-4,-10,-7,1,5,8,4,-2,4,5,7,-6,6,7,8,3,-10,2,-7,-1,-5,-2,4,9,7,1,2,2,-1,-8,-9,-3,-5,-6,-6,-7,-6,3,5,2,-6,6,4,5,-7,4,-5,-4,-2,5,9,-10,-10,-9,-4,7,-3,7,-2,-3,-5,-4,-4,1,1,3,-5,-5,7,-2,-4,-1,3,-4,-10,6,6,4,-8,-5,8,-9,2,-1,-7,-1,3,7,10,3,-10,5,-8,-5,3,-5,7,-7,-7,1,-1,-4,2,2,-5,-4,-3,3,10,-8,-8,-6,-9,8,-1,-2,9,9,-9,5,-6,-1,10,10,3,-2,1,6,1,5,-10,6,-3,3,8,8,-9,-4,-4,-6,2,-8,6,-10,9,-8,-2,-10,-9,-7,-1,4,-5,-6,3,-7,-1,-8,8,-1,3,6,4,-10,-9,2,3,7,-6,-8,8,-4,10,-4,-9,-7,-4,8,1,3,-5,7,2,-6,10,7,-9,6,2,10,-7,-6,10,-9,1,10,-8,4,2,6,3,-1,-4,-2,9,10,8,6,-9,8,8,8,4,4,1,9,3,8,7,6,3,9,-1,9,2,1,-3,4,10,-3,-7,-9,-2,-8,9,6,-9,3,-2,1,8,-1,-1,-10,2,6,-8,2,3,1,-3,6,-4,3,1,-9,5,2,7,-1,-7,-2,3,3,3,2,2,9,8,3,5,-10,4,-8,-6,-3,5,8,-9,-6,6,2,7,-6,-3,-6,-1,-9,-10,9,6,-3,-7,-9,-1,-3,-4,-6,6,7,1,10,-10,8,-7,-10,-8,4,-1,4,-1,-8,9,7,6,-7,-5,-10,7,7,-4,7,-7,9,-7,9,-1,-2,-2,8,-2,6,1,4,-3,-3,7,1,2,-3,7,6,10,-8,8,-2,-8,-10,2,8,5,4,-1,6,-9,2,-3,-1,6,-7,3,5,-8,2,-6,-5,2,-3,-6,-8,-1,8,9,-9,9,9,7,-3,8,-5,8,7,1,6,-2,2,-5,7,2,-10,4,-2,5,4,-3,-10,-8,4,1,-9,-4,-6,3,-4,-9,-7,8,-4,7,8,8,4,9,7,7,10,-7,4,-10,-9,5,-2,5,7,3,-3,-5,6,4,1,9,7,-10,8,-9,8,2,10,5,1,-3,10,-1,4,-2,-9,8,7,-6,7,9,-1,3,-10,9,8,-6,-3,-7,-4,-2,7,10,-8,-8,-4,-8,10,8,-4,3,-10,2,-8,8,7,-7,-10,10,-3,-4,-7,-4,6,9,9,-3,3,-2,-4,4,-10,8,10,-1,6,2,8,2,-5,5,5,3,-1,10,5,7,-9,-9,-2,-1,-4,4,8,7,9,9,7,-3,-9,6,-10,-3,-7,-5,-3,-9,-1,8,-9,7,6,-9,10,-3,-6,4,1,3,10,-9,8,9,-1,3,1,-5,5,-1,-7,-3,3,-8,-5,-6,-3,-5,3,2,-10,-3,4,1,1,4,6,10,5,8,1,2,-9,6,-10,7,5,2,-7,1,-4,-5,-2,-2,4,-4,3,10,-2,5,7,3,-3,3,7,5,7,-4,4,-6,3,3,4,8,-10,-10,-7,8,8,-10,-5,8,5,-1,-7,7,-6,6,4,6,8,-10,8,7,-9,-3,-1,6,-3,7,5,10,6,1,-1,-7,-4,-8,-5,8,-3,10,-2,-4,-5,-4,6,-10,-1,6,10,5,-10,-4,-9,1,-3,-7,-5,-9,1,1,-9,-2,3,-6,-1,5,-3,6,-3,-3,-8,-1,-1,-5,8,-2,6,1,3,-10,-6,6,6,-1,-1,-5,-5,3,-1,-10,2,-7,-7,-10,4,7,-5,-9,-6,-9,-5,7,-3,7,7,-2,-1,-9,-5,-1,9,7,2,6,-8,-7,1,4,4,-7,-1,10,-6,-4,-10,-8,-4,4,4,-8,-6,3,10,-9,-1,3,-5,-5,4,10,6,-2,6,10,5,-10,2,-6,5,5,4,-7,3,-10,3,10,1,-4,7,6,-10,2,-4,-4,-6,2,-1,10,2,10,1,7,-3,6,-4,3,-1,-8,3,-3,-5,10,-5,-9,-10,2,-2,-3,3,6,-4,-1,-3,-1,5,7,8,-5,10,7,4,3,-2,10,8,3,4,-8,-5,3,-10,9,10,8,-7,-1,-6,-4,3,-4,-9,-2,2,-7,-8,6,-1,-5,-6,-10,-7,1,-7,6,8,-10,8,9,-3,-5,-7,8,-6,10,3,-5,2,8,3,-1,5,-10,-7,-10,-7,1,8,3,-10,5,2,-8,8,-8,-9,3,-4,6,2,-2,-3,-3,10,-6,-9,-6,1,-9,-9,9,8,3,-5,-3,-6,-5,8,1,-6,-8,8,-5,-7,9,1,-3,1,1,4,-2,9,-1,-9,-6,-1,-7,-8,9,9,1,-9,-9,2,-6,-5,9,10,-2,-2,2,-3,-2,3,6,3,-2,-4,3,-2,-2,-7,-1,-9,-6,9,6,-6,3,-4,-1,-8,7,5,-6,9,4,-7,3,-7,-10,-6,8,-7,-3,-10,7,-9,-10,4,-3,-3,1,1,-9,4,5,-6,-3,-4,5,1,1,-6,-6,8,5,6,1,-1,-8,-10,4,5,-10,-4,-2,6,-4,-4,-3,10,4,-6,-5,-7,-10,5,-6,1,-9,2,-9,5,-9,6,3,-3,-3,-2,-4,1,-8,7,-9,2,5,-1,10,-10,5,4,1,5,-4,10,7,-1,-2,-1,-9,10,6,-8,7,7,1,2,-7,-6,5,1,9,-1,10,-1,6,3,-5,8,9,4,7,4,4,-6,-5,-10,-9,-5,-4,8,-10,-10,3,6,5,4,7,-7,7,9,10,-6,2,-8,10,6,8,-6,6,-3,-6,-3,2,-6,-3,10,-6,-2,10,5,-5,-1,-9,-4,-2,5,1,-1,-8,-3,-1,4,-1,-6,-6,2,-1,6,1,4,6,-3,7,-3,10,6,1,7,-6,-5,-5,8,10,-6,6,6,1,-1,3,5,-10,-5,1,-4,-6,-3,-6,6,7,-6,-4,-6,-2,-3,-1,-8,-9,5,-6,1,8,10,-5,7,-10,4,7,-1,5,6,4,10,-1,-5,1,-7,-8,-4,-7,4,6,-3,5,4,8,9,-7,5,-1,-3,6,5,10,8,10,5,9,-9,-10,8,4,-9,-6,9,5,-2,-3,-9,-6,-10,-9,10,-3,-6,-1,-2,-4,6,-5,9,-8,-3,10,5,8,-10,-4,-9,-1,-1,-1,-9,-4,-5,1,-1,7,-1,-7,-2,-6,4,-5,7,7,-10,1,-5,6,5,4,-6,1,7,-6,5,-3,9,1,8,4,-8,7,3,3,-1,-6,-9,4,7,9,9,-10,-2,6,10,-7,-8,-4,-10,-9,-6,-7,1,5,1,-9,-5,-1,-9,4,9,-10,8,6,-10,6,-9,3,4,10,-1,6,-10,-1,-3,10,8,9,-3,3,-9,1,4,9,-1,3,-2,6,-7,-2,-3,4,-4,7,-7,3,1,-5,-6,-3,7,-7,-7,10,-9,6,-7,-3,-3,-8,-1,6,3,-7,10,-7,7,4,8,-10,8,-9,6,6,4,-2,5,9,1,-8,-5,6,9,-6,7,4,-1,10,8,-1,-8,-7,10,2,1,2,4,-8,9,-10,1,2,10,3,8,10,4,-10,3,-6,1,-2,6,-8,5,3,-3,-10,-9,-8,-7,-4,6,-5,-5,7,7,-8,1,-7,-3,4,7,8,-9,4,5,-6,1,3,-10,-1,10,-9,-7,-7,9,8,-7,4,3,1,4,-2,-7,-3,5,-6,-7,-4,-3,9,-2,10,3,7,-9,-5,-6,-10,-2,-1,-8,10,2,-2,-4,-7,-7,-10,-10,-6,5,-2,8,3,-4,5,-1,-9,-8,8,-1,-10,3,-1,-7,9,-8,-3,2,6,-2,8,-5,-8,10,-7,-10,-1,7,3,-9,-5,3,3,6,1,-10,3,8,8,-7,8,4,-10,1,6,-8,-5,1,-8,7,6,10,5,-1,5,10,5,3,4,3,-4,-2,-3,6,1,3,-3,9,3,10,9,-3,3,-2,-2,6,-7,4,1,-3,7,4,-1,7,4,-3,-7,-9,-2,7,7,9,-4,-4,-5,9,-3,10,-5,-7,6,4,-6,-6,-6,-2,10,5,-4,-9,5,9,-3,1,7,1,-10,9,-7,-4,-1,6,-8,3,9,1,4,-4,-10,-8,-5,-2,-5,-2,-9,-5,-5,-10,-3,4,-9,-8,6,1,-8,-5,-10,-9,10,-7,-8,-9,-7,-5,-6,-4,6,7,3,8,-10,4,1,-7,5,-2,-8,3,2,6,6,2,-2,-4,10,6,-4,-10,-6,-8,10,-1,10,4,3,-9,-7,-3,-9,-4,8,9,-4,8,7,-10,-5,5,-6,-7,-8,8,-7,-6,5,-7,2,8,6,-6,2,-10,-7,-2,6,10,6,-3,8,-9,-9,-9,-2,-7,-2,1,-10,-3,-8,10,2,9,-9,-1,2,-1,6,-2,-6,5,3,-2,-9,-10,9,10,-9,1,3,-4,-2,6,4,4,-8,-5,-9,5,-3,-2,2,-8,-2,8,1,-2,6,10,-7,-7,-7,7,-3,-1,-5,3,-6,-10,-7,4,2,-10,-6,-8,7,8,-2,-8,-7,-3,4,4,4,8,4,-1,10,5,-4,-8,8,4,3,5,3,-4,4,6,-4,3,-6,4,-8,1,2,2,7,10,-10,-10,4,9,-2,10,-9,3,7,-5,-6,4,8,-8,4,3,-6,6,-6,2,1,-5,-2,10,-8,2,-1,-4,6,2,-3,-3,-9,-10,5,-5,1,9,-10,3,-3,-6,5,3,-3,9,-1,4,3,-5,6,-7,9,2,-6,-9,-4,-5,-2,-8,3,-2,2,-2,-2,5,6,4,-9,-5,3,-6,-9,-4,9,-8,3,-7,-6,2,-8,5,-9,9,9,-5,-10,-9,-3,-1,-7,5,9,-7,-10,4,-5,2,-1,-4,-7,-3,1,7,7,6,-7,5,10,-2,10,8,8,-1,-3,9,7,6,-4,-2,10,-4,-9,-4,1,-9,3,-6,9,2,-4,9,-3,-9,-1,7,-1,8,-9,8,10,9,-5,6,2,-4,-9,10,-2,-8,-2,-4,-3,10,5,-10,-5,10,-5,4,4,-6,2,4,4,7,-6,-6,5,1,-6,-7,-1,1,-3,5,-4,2,-6,-2,-10,-4,-1,-3,8,6,-6,-5,2,-5,2,4,-1,-1,-5,-5,1,-9,-2,1,-10,-6,-2,3,8,8,-8,-5,9,3,-9,10,10,6,-4,5,-4,10,3,-7,-3,-4,-7,9,-5,3,3,-7,3,-8,-8,2,-4,-7,8,-2,3,2,-5,8,-3,7,2,-10,7,3,9,-9,-8,3,-4,-6,1,7,-1,7,5,10,7,-4,8,-2,-3,-1,9,8,1,8,-4,-9,9,-8,1,4,10,4,5,4,-7,2,10,-7,6,4,-2,6,10,-8,6,1,-9,-1,-1,6,-1,-1,-10,6,8,9,-3,-3,-1,-6,-4,2,-1,10,9,9,-6,-4,1,-4,10,-10,8,-7,-4,-5,-9,-2,1,2,9,3,4,-2,9,-3,-9,1,-6,-6,3,-1,-10,7,-6,-5,-2,10,8,-8,-10,-6,-6,4,-7,-4,-4,7,9,-7,-2], dtype = "uint32")#candidate|9014|(2730,)|const|uint32
call_9013 = func_4275_call(relay.reshape(const_9014.astype('uint32'), [15, 14, 13]), relay.reshape(const_9014.astype('uint32'), [15, 14, 13]), )
call_9015 = func_4275_call(relay.reshape(const_9014.astype('uint32'), [15, 14, 13]), relay.reshape(const_9014.astype('uint32'), [15, 14, 13]), )
output = relay.Tuple([call_9011,call_9013,const_9014,])
output2 = relay.Tuple([call_9012,call_9015,const_9014,])
func_9026 = relay.Function([], output)
mod['func_9026'] = func_9026
mod = relay.transform.InferType()(mod)
output = func_9026()
func_9027 = relay.Function([], output)
mutated_mod['func_9027'] = func_9027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8996_call = mod.get_global_var('func_8996')
func_8998_call = mutated_mod.get_global_var('func_8998')
call_9050 = relay.TupleGetItem(func_8996_call(), 0)
call_9051 = relay.TupleGetItem(func_8998_call(), 0)
uop_9076 = relay.asin(call_9050.astype('float64')) # shape=(6, 9, 11)
uop_9078 = relay.asin(call_9051.astype('float64')) # shape=(6, 9, 11)
output = relay.Tuple([uop_9076,])
output2 = relay.Tuple([uop_9078,])
func_9083 = relay.Function([], output)
mod['func_9083'] = func_9083
mod = relay.transform.InferType()(mod)
mutated_mod['func_9083'] = func_9083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9083_call = mutated_mod.get_global_var('func_9083')
call_9084 = func_9083_call()
output = call_9084
func_9085 = relay.Function([], output)
mutated_mod['func_9085'] = func_9085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5817_call = mod.get_global_var('func_5817')
func_5819_call = mutated_mod.get_global_var('func_5819')
call_9089 = relay.TupleGetItem(func_5817_call(), 0)
call_9090 = relay.TupleGetItem(func_5819_call(), 0)
func_6522_call = mod.get_global_var('func_6522')
func_6525_call = mutated_mod.get_global_var('func_6525')
call_9096 = relay.TupleGetItem(func_6522_call(relay.reshape(call_9089.astype('int32'), [2, 56])), 1)
call_9097 = relay.TupleGetItem(func_6525_call(relay.reshape(call_9089.astype('int32'), [2, 56])), 1)
output = relay.Tuple([call_9089,call_9096,])
output2 = relay.Tuple([call_9090,call_9097,])
func_9099 = relay.Function([], output)
mod['func_9099'] = func_9099
mod = relay.transform.InferType()(mod)
mutated_mod['func_9099'] = func_9099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9099_call = mutated_mod.get_global_var('func_9099')
call_9100 = func_9099_call()
output = call_9100
func_9101 = relay.Function([], output)
mutated_mod['func_9101'] = func_9101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_9121 = relay.TupleGetItem(func_4160_call(), 1)
call_9122 = relay.TupleGetItem(func_4161_call(), 1)
output = relay.Tuple([call_9121,])
output2 = relay.Tuple([call_9122,])
func_9137 = relay.Function([], output)
mod['func_9137'] = func_9137
mod = relay.transform.InferType()(mod)
output = func_9137()
func_9138 = relay.Function([], output)
mutated_mod['func_9138'] = func_9138
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9148 = relay.const([[[-8.639890,7.089277,3.707988],[4.690155,-0.136583,5.080583],[-3.764982,-8.966496,-2.391673],[1.269248,-1.131167,8.340690],[2.439532,-3.899096,5.274553],[-6.482763,5.697427,4.984647],[-6.496862,-9.318763,5.077244],[5.895868,6.487562,-7.096587],[7.461681,-4.904948,-1.105289]],[[-1.990929,4.057661,-7.416026],[8.203674,-4.364569,0.920006],[6.107760,5.267772,-5.971666],[4.114178,-7.954025,6.862005],[-2.833250,9.638176,-2.435663],[-1.971243,1.246682,0.290518],[4.464835,1.139359,-2.196745],[7.814613,-4.088222,5.849724],[0.449026,5.932311,-9.139891]],[[5.153777,1.999268,9.977545],[-1.712886,-6.144945,1.675596],[9.998617,-2.900334,0.025798],[4.716287,5.623007,6.518834],[-2.588871,3.626233,-1.677924],[-0.201280,8.112529,-0.735716],[0.558089,-2.565564,9.865092],[-4.991270,-9.227203,0.903635],[0.313595,-0.342590,-4.548082]],[[0.747775,7.768017,-9.432091],[-5.806318,1.777213,-4.043257],[2.665827,-8.355382,-0.303947],[9.886312,-4.481682,5.018394],[4.512634,3.626278,1.646973],[2.781381,-1.189983,-6.391891],[3.033009,-0.196438,-8.698143],[-7.081689,-6.897395,3.199691],[-6.586379,7.847947,7.342372]],[[-3.857523,0.929701,-8.596696],[-4.004068,-8.734944,-1.269726],[0.704978,6.974552,-6.105669],[3.009744,4.574355,4.904449],[-8.706129,-1.964241,5.090451],[-8.716638,-2.248629,1.510709],[4.773891,9.598837,-2.372814],[-7.643370,3.766081,8.584499],[7.756042,-0.016211,7.152498]],[[6.946913,-1.189771,8.204628],[2.223337,4.637653,-9.301886],[5.852340,-4.607318,7.849991],[-4.471510,3.742225,9.992190],[-1.415302,5.904825,-8.474717],[-5.474221,-0.784773,7.517855],[-6.894792,0.260522,-0.234335],[-6.518555,6.219922,-6.842745],[-7.810785,-1.699874,-4.049704]],[[-0.596290,-8.231272,-5.570965],[-3.473431,3.842607,6.497653],[9.450436,0.921262,8.390358],[-9.460301,8.878726,6.637332],[-8.170745,4.935857,6.195059],[-0.911290,-4.729073,2.345195],[2.372902,7.888145,-6.453816],[2.860008,1.619069,-2.368706],[5.167369,-4.764638,6.891569]],[[-4.816640,7.843180,-6.175507],[-8.858638,8.444058,-4.567411],[7.817266,-1.144054,-7.717966],[3.891089,-6.084827,-5.407663],[9.844960,1.667550,7.105076],[4.623136,-4.920248,7.967402],[5.261422,-3.012186,-8.024426],[0.867113,-6.343878,-7.065795],[-8.172573,9.695181,-9.654727]]], dtype = "float32")#candidate|9148|(8, 9, 3)|const|float32
uop_9149 = relay.asin(const_9148.astype('float32')) # shape=(8, 9, 3)
uop_9160 = relay.sigmoid(uop_9149.astype('float64')) # shape=(8, 9, 3)
func_4545_call = mod.get_global_var('func_4545')
func_4549_call = mutated_mod.get_global_var('func_4549')
const_9165 = relay.const([3.240180,3.923990,4.793798,-2.841185,-9.429260,-0.200080,-1.663088,4.789439,-4.647464,-5.148361,2.982042,2.719869,-3.303545,-2.102492,3.184049,-5.174105,4.737760,5.383052,5.090953,3.927302,5.540925,-5.581239,-2.963277,6.101455,9.569999,9.041917,4.728174,-5.194013,8.013583,0.804554,-4.708030,1.820959,-2.706439,-4.172815,-3.738501,4.663540,4.017960,-6.241178,0.408875,-5.831231,7.923401,6.386338,6.863326,-3.311244,-7.879693,9.926581,9.501553,1.955103,7.995574,-3.063083,1.080344,5.346263,0.852237,-8.394060], dtype = "float32")#candidate|9165|(54,)|const|float32
const_9166 = relay.const([6.742827,9.734099,-8.566055,6.303802,-2.877709,8.599086,5.925737,5.077320,-2.981273,-3.295369,5.510234,3.894288,2.871402,9.460363,-1.929486,3.982178,7.802341,-5.371181,2.174403,-8.936740,5.683564,7.162126,-7.417340,1.613838,-0.395564,6.284962,-0.360876,-7.187289,-6.452410,-7.306645,7.341428,-9.221113,8.533818,-7.724559,-2.327269,-2.124822,5.565583,-4.656134,-7.961652,-2.671656,-6.841921,-0.802634,-5.294474,-4.837036,-2.526995,-8.225060,2.101298,-9.919576,0.674399,3.078703,8.627026,5.771305,5.137996,8.060470,-8.242820,2.664430,6.404243,0.794652,-3.725304,-9.071877,-1.529383,-1.796003,-6.017021,-5.990704,-0.094771,1.927069,9.648146,-9.978886,4.669279,-9.390863,3.841781,-5.619816,7.251897,9.377057,2.797916,-3.346313,-1.525983,7.150339,7.573892,-0.594517,7.661474,-8.636063,8.833555,-9.522751,-1.508288,-0.905902,-8.995313,-7.497049,-8.975105,7.477170,7.053860,0.016972,0.933317,-5.912115,2.302112,-9.438426,0.273734,2.587713,9.594769,0.095044,3.507198,0.606717,-8.909847,2.942412,8.841034,-6.976442,2.357761,-7.504291,8.007143,2.652381,-5.246414,1.797922,-9.960500,-9.158616,-1.971342,4.455780,0.933716,3.221882,-1.139516,-0.151250,-8.197196,6.808014,-8.753414,-9.535859,-3.209054,-1.171682,5.705877,-2.174341,1.668029,7.717644,-2.012610,5.826550,5.898837,1.805746,6.328409,-6.198076,9.190164,9.341616,5.146745,8.690627,-2.356323,-4.507321,4.761636,1.495372,9.008675,0.086712,-9.599337,1.373286,1.905209,3.810006,-1.977699,-9.808955,9.791971,-8.774323,5.765761,4.114934,9.735198,6.197038,-6.218853,3.018485,3.778519,-4.737127,9.350589,-5.886348,-2.896458,-0.149518,8.610966,-8.263157,-4.737267,7.012158,-7.966387,5.459292,0.394318,5.914819,-4.717873,9.544226,1.437213,1.267755,-4.433083,3.930570,2.114609,3.947259,6.171121,-0.605568,-5.120335,6.048685,-7.044136,2.785896,-5.857700,6.277592,1.163476,-8.313790,-0.124884,-5.754278,8.965828,-6.789088,6.252621,0.057379,6.034416,-3.220635,-7.044968,0.540719,4.814108,-2.942804,8.391524,-3.774880,-1.633765,2.873176,-2.402292,9.356660,4.282180,-3.923114,-4.886571,5.799494,9.275422,3.464580,-6.251114,-8.800865,2.208464,8.125641,1.352828,-2.668592,-4.619349,-8.148262,2.034084,5.621473,9.476324,5.019185,1.084112,-1.446110,-9.375894,-6.848809,-5.593445,-3.131738,4.312390,-7.170544,5.298813,5.662844,-7.070833,-7.040435,6.213473,-0.348722,-8.810659,-2.826023,5.435981,-6.805894,0.570919,-8.799383,-6.074153,0.217087,-7.426188,-6.289557,-7.904104,4.315926,3.770407,-1.145099,2.072534,-2.234629,-4.720853,-2.844060,1.506844,-2.069101,0.536034,-7.033517,3.475653,-4.237616,4.997033,-3.391214,-1.332045,-1.657048,8.873651,-4.068799,1.307506,-1.336559,-0.307876,9.102933,-8.587429,-4.483646,-9.915154,3.342932,-0.460059,7.050159,-3.516604,-2.303542,-3.174086,-6.733572,2.391639,-4.332750,6.450756,9.827979,4.382997,0.655292,-8.645091,-4.381369,-0.992611,-9.011652,6.630869,-7.894644,7.978302,-8.781803,7.871985,-9.335387,4.448093,-3.868816,5.080913,-0.518382,-8.076094,-5.904685,0.399941,-9.329198,-1.910592,8.908617,-7.464617,7.124808,-7.409251,0.501831,0.059421,-8.069876,5.936618,6.378631,-6.695867,1.261825,-1.025708,3.831976,-5.488874,0.651596,5.426689,-1.916239,4.177190,5.581347,4.752609,3.384831,-0.130402,-5.845982,-9.507588,7.923563,2.718205,-9.100046,-2.983871,-8.894726,3.676245,-2.966062,-0.991355,-4.826235,-5.763663,5.203534,1.846691,-6.507900,-7.040168,0.199401,3.084231,-5.684685,1.589357,-8.159336,-4.087342,2.952024,-7.701117,-4.404552,-8.863406,-1.094540,2.901045,4.692719,0.081061,-2.815617,-8.834584,-9.930054,-6.451111,-7.612221,6.507607,-3.502323,9.549017,9.433620,3.589846,-2.888890,5.880074,-3.915030,-6.426737,4.181107,-5.938828,-2.126555,7.482372,-9.253002,9.802885,4.181010,2.659533,-6.561027,2.327819,-4.953512,-1.009648,1.365091,-5.844029,-1.547147,4.905774,-8.916758,2.229953,-5.836941,6.067486,0.437597,2.765625,-9.488027,-5.066006,-9.194000,-2.801798,-2.194210,2.159042,-5.755427,4.406789,6.319154,-6.636058,-1.068829,-3.090200,-1.098308,4.341253,-8.385420,4.706401,0.835369,6.337287,0.294867,5.353870,-5.776622,5.172009,-8.222004,5.045678,4.837099,4.657555,-0.904998,-5.041064,9.025497,-3.210107,3.276899,-6.724566,4.658877,-2.955289,-2.562777,-5.458359,-2.769091,4.735119,-4.018785,-3.690853,2.889495,-5.894447,2.377552,-3.644850,-8.258658,-3.923209,-9.443069,4.592244,1.364927,5.006738,6.320711,-7.339991,9.120631,-8.692284,7.772936,-3.457838,-0.572876,-1.274823,3.778794,-8.630431,4.988510,6.270543,-9.372191,6.922972,-4.419712,8.909049,-5.273672,-4.924445,6.860936,0.745079,0.929390,5.729657,-0.908508,-9.295441,5.563572,-3.043188,7.576426,-2.198932,-9.139003,3.252065,-0.362810,-4.924873,2.282843,2.126993,0.327571,5.696588,-9.920686,-8.972637,-7.070250,-1.885425,1.803213,-5.602961,4.354958,-3.372017,-3.559703,-4.320833,-7.485743,4.557321,7.457370,3.442017,9.172198,-4.759862,3.596777,8.390747,7.376347,7.481191,-9.044815,7.143053,5.358234,1.556202,-6.693298,-8.814542,-8.107898,-2.992720,-2.453135,-2.491318,-3.658745,1.648654,1.963665,5.453409,7.555296,7.244235,-0.297099,3.220810,5.949833,2.835205,-8.068733,-6.455324,3.792494,1.319961,-9.268320,5.031521,-4.472608,8.203985,6.553814,-2.864151,3.914594,-3.179229,-8.112804,2.796705,-6.077213,1.971984,0.559273,3.571018,-4.070615,-9.715781,-2.545988,4.167762,7.463017,-8.049423,0.801762,4.189514,3.236544,-6.355966,4.708261,8.232494,-8.346925,-8.265111,-4.103282,-3.286496,-4.745149,-3.759360,5.601830,1.823591,-1.982308,9.346186,-0.024385,-1.270957,5.400319,-4.272798,5.673595,-5.004152,-0.273895,4.910460,7.609059,-7.725733,-4.378261,-8.286016,-3.065220,-3.982637,-0.817116,2.087517,-0.712972,-5.228773,-9.403032,-3.979990,-1.552307,-7.891816,-8.091285,8.954631,3.823944,3.380999,-0.855722,3.965251,-4.548421,3.793718,-8.679485,5.352925,9.626011,-8.067550,-6.994097,1.294870,9.013311,-8.824765,0.978668,2.139978,9.477660,-7.555414,6.802298,-1.283079,-6.351194,-8.710336,-8.022815,8.295266,6.716332,-6.343760,5.769307,-2.934125,6.391402,-7.086166,-7.783959,6.318090,-5.244008,-1.294288,-8.721249,3.531500,-8.321223,5.384149,-6.550466,-3.744614,-0.787912,8.985133,-5.773653,-9.927404,-3.368212,-2.605445,4.875639,-9.798099,-5.723003,8.865063,-9.499093,1.036642,-5.183476,9.326104,6.677037,-8.945684,-0.570601,8.105766,5.125061,-3.639583,-2.290784,-7.675559,9.736494,-4.886864,3.800369,-2.767025,-5.867447,6.263177,-7.647873,7.153038,-5.992486,8.256335,-6.122476,-7.677697,-5.883081,2.551039,1.319059,-8.665654,6.195496,-1.576081,-8.135710,-0.608606,-0.695105,9.720196,-4.068394,9.037200,-0.715977,-0.170794,3.735222,-6.582189,3.238979,3.145022,-9.956477,4.555220,-5.827909,-2.603126,-2.344546,0.558880,-8.420821,8.664096,-1.305889,-1.033425,9.548772,5.721313,2.465371,8.048568,0.230847,5.397579,-1.545368,5.661668,7.648909,-3.095740,-9.982701,-8.630739,-7.030891,-9.653499,-2.044715,-6.512070,7.098393,4.566263,3.486512,0.917683,5.581010,-7.211965,-2.731595,-1.353665,-1.553251,7.157120,-7.754687,1.656348,-3.052886,6.461529,-8.359934,-3.083200,3.281908,-0.682412,-5.440509,-2.723083,5.032292,-0.896816,-4.660932,0.505423,6.629446,-9.887634,-9.508481,-3.589792,2.648955,-8.712803,9.246870,0.987825,-1.773430,-4.442691,1.720850,-3.736986,7.640616,-6.195299,5.102107,-8.352565,3.779719,-0.742887,4.829985,-7.271651,5.559110,-5.186245,3.415870,5.028110,-1.973463,4.515387,-5.180116,-7.374102,-8.057546,-4.830380,-3.664779,-5.695136,1.552513,1.459884,8.986156,3.056603,-5.453819,-1.830230,0.814453,3.462293,2.418480,3.531825,-9.936926,7.064208,4.184988,-6.952338,0.530730,8.388149,-6.237803,0.400738,-9.081979,-5.703458,-0.114834,-6.924650,-5.127266,1.044358,-4.060462,-7.206865,-3.934274,9.273861,4.509496,2.867220,-3.304649,7.569352,-7.948761,1.173593,9.231535,2.729012,-8.968008,2.982186,-5.522486,-5.469993,1.377445,4.118415,-4.061493,7.083088,1.668070,-8.575185,4.636181,-8.092724,-1.240290,-2.432314,8.782489,-8.097393,-0.204365,-8.206473,-5.877616,0.409165,9.982383,-5.168849,-8.905506,6.659791,-6.477283,4.921456,9.483098,2.050153,7.055098,2.942241,-0.152299,-0.173455,6.286028,2.697648,6.348076,-0.862920,4.361638,5.387360,-8.357218,1.288631,-0.303456,9.828787,-7.662977,-3.184923,-6.625287,-7.156182,8.728479,4.268770,-9.880924,-0.312394,-7.785119,-1.530084,2.500137,3.928816,3.585405,2.242534,5.087017,4.210369,7.469767,-5.808055,-5.535532,-6.694223,5.232312,-3.101401,-9.940618,-2.419994,4.525632,5.596927,-9.205038,9.922099,8.966630,6.545631,4.424944,1.274665,-8.975202,-3.396899,-1.422959,-8.964344,4.096403,3.339450,-8.545941,-0.381723,4.319181,-2.048208,-1.750256,7.914314,-4.979061,-7.390499,6.051529,4.926257,5.468521,-3.148468,-7.004111,-4.218332,-2.726636,-0.573088,7.740772,-5.161464,-5.264001,-5.847547,-0.056353,-2.488668,-3.021158,-8.323177,-4.085990,-8.233563,-6.217588,-1.029207,4.449203,-6.228030,-9.296609,-7.154474,8.105376,-9.671709,-8.977161,-2.908851,-8.729724,5.191368,8.960847,7.590284,8.730766,-1.589523,-7.386192,9.657393,4.001764,6.687298,-9.401816,2.524978,9.154283,6.751742,-1.150198,-6.159895,-0.630865,9.278484,-4.522884,-2.183422,-1.078196,1.398363,3.739583,1.285973,-4.124189,-1.000297,-2.393814,-6.953694,-5.364357,1.976534,1.777509,6.558349,-7.783006,8.281265,9.218095,-1.483963,-4.412800,5.039867,-6.625170,-8.029861,4.179536,2.359512,-4.835425,4.462043,0.913604,1.494020,9.527235,1.807386,-0.945748,-5.704185,-8.930377,6.513006,-4.760704,-5.086761,2.567612,0.216469,9.793758,2.039930,-8.485601,-3.537906,8.377357,-0.591539,4.577147,-0.253308,-0.692669,9.805468,-4.599183,-2.512215,7.055012,3.052617,6.432977,-8.617702,-7.055041,2.259165,-6.310816,-0.467446,9.001453,-1.528396,-8.980209,-1.965546,1.739478,5.923423,3.198370,-6.202608,-1.672311,8.680650,-9.002716,4.212311,0.926844,9.729329,-1.718496,-5.587335,-2.902166,-7.954386,6.369652,-7.279096,0.255246,-4.513387,3.584676,5.314113,7.228062,4.408415,-4.653276,-5.268229,5.093328,-4.511895,3.297481,-2.189040,7.010532,7.672681,6.266677,-6.712594,8.420661,0.581349,2.616720,2.747754,-3.047152,7.438234,9.714843,-1.152424,6.822704,-0.293824,7.213186,7.025877,-5.122437,-7.325306,-1.271977,-9.922953,5.034429,-1.477294,-6.797058,8.320840,-6.352156,-7.854306,-4.959129,7.929434,4.486741,5.126418,-2.772600,7.979546,5.743847,-2.445514,-8.592677,0.548352,6.853942,0.596031,6.951105,-2.016231,8.259527,6.321783,5.798841,5.319453,2.839806,-1.962246,9.261522,-5.029099,0.279628,-8.028280,2.022947,8.101240,4.249277,-5.289794,-7.523501,0.995857,1.035673,5.345456,3.619352,0.708656,8.845143,-5.155784,-4.535331,3.548562,6.642612,0.389031,-4.141508,8.878367,1.478207,-9.638560,-2.238796,7.818163,5.146413,1.999749,-9.465741,7.459714,-8.941705,-4.689950,-6.721229,-8.641387,-0.916485,-4.364958,-9.863030,-8.468991,9.291548,5.243291,-0.958529,-8.609690,-1.464128,-7.704165,-3.684749,-5.516422,1.353654,1.382445,6.805399,-8.247927,-7.145554,-7.660139,-3.533482,-5.318379,5.668832,-0.584529,0.325600,0.921853,-9.917859,-0.770564,6.144552,8.514737,1.462751,-6.297914,-0.497165,-4.545956,2.147888,6.288674,-0.280642,-6.309340,-4.692030,5.639248,0.311803,2.760250,9.327540,-1.207038,-8.687388,8.741197,0.636018,-3.889099,-4.076484,-1.152360,9.824519,-7.412115,3.170691,-4.420157,6.111265,1.332336,-7.808133,-7.081605,-5.038610,7.440879,-0.640620,1.444389,-1.334647,2.935826,-2.215518,4.058766,8.005712,8.763697,-3.180143,-7.895658,-1.970063,-9.641097,-4.667785,-0.777825,6.702387,-0.463048,-9.826105,9.008246,7.968463,-3.865510,-0.705935,-7.850473,6.898621,2.666895,2.918628,0.037207,7.193923,-5.400654,-1.950044,2.001443,-9.178121,2.361813,0.491699,-4.249697,6.018658,-4.470806,-2.067124,3.179046,9.590146,0.036176,7.420828,-9.919487,-1.264936,-7.946582,5.813720,-6.343261,1.235962,-1.754554,3.794239,-5.567711,5.473155,-1.750560,1.299587,4.931543,-3.990711,1.556478,1.960273,3.627554,-8.283547,-7.673678,2.794250,-3.990858,-1.944322,6.252456,0.373517,-1.443293,-0.675030,-7.064354,6.381533,-5.240613,-3.012558,3.866142,4.486856,9.028470,-9.070189,0.701084,-0.949826,7.847977,9.207944,-5.410333,-2.266093,3.019556,-0.825056,-3.828364,-9.780021,0.046829,-7.941459,-1.573718,8.361950,1.841159,-1.306030,7.358837,-4.955924,3.186190,7.894862,-6.433084,2.916778,8.394081,8.048700,8.693815,-7.470781,-0.119779,6.777444,3.842490,-3.223740,-6.547601,1.090741,-7.569222,-1.969274,1.552645,6.365482,0.897956,-5.314030,-9.590337,-8.920315,5.959760,9.498634,9.595139,-4.318036,5.654483,-0.688929,6.091340,-0.240104,4.060274,-7.411248,-2.484551,6.013968,-0.143554,-9.514575,3.477516,-2.121372,-1.071397,0.733266,-4.798073,-7.091813,-5.663899,5.565923,-5.634878,3.164692,7.789064,1.515528,-7.778517,0.771513,-4.685096,6.164790,5.067541,-3.043027,6.715065,5.940593,3.465273,-5.443397,-6.092863,-5.105334,8.962516,8.147596,0.375011,-8.871781,3.502177,-1.344723,-1.648837,6.191671,6.204561,2.615664,2.552392,-5.798408,-9.938451,2.144250,-9.791714,6.113954,6.233706,-5.841527,1.587257,-7.394776,1.117021,-8.096803,5.176525,6.433474,3.354804,3.255758,3.544193,-6.503184,-8.927342,1.763987,7.826452,-1.647077,7.506088,2.755360,-6.376931,8.191441,-3.871733,6.109162,3.328291,-5.329149,1.450714,-2.689593,0.070813,-2.946118,-3.519213,-5.668404,-2.566878,-5.168064,-3.353556,9.852708,-6.744204,-7.949420,-5.527594,-1.319473,-4.821188,0.779544,-8.858377,-2.173228,-3.861164,-6.396247,-4.379823,-6.223381,0.744948,-5.652807,-8.888317,-7.688746,-6.320105,9.025573,-6.178413,1.545389,-7.310510,-5.093115,-1.480704,-6.491060,5.519115,0.944713,1.975917,4.958878,-4.058113,-2.509025,3.226519,6.016367,7.045505,-2.778558,-2.377203,-1.067014,-8.522331,-5.904593,-3.112722,1.449282,1.399350,7.181572,-7.579119,6.473540,4.087865,7.935618,5.486774,-7.210557,5.248218,-2.521533,-8.031788,-7.749499,-6.825448,0.461650,2.391243,-8.559293,1.499110,-3.952026,-1.164374,9.251174,3.483573,-7.938035,5.164441,-7.416883,-9.954923,6.733882,4.010143,9.223364,-4.193325,-2.470754,-3.844739,-5.206088,1.002363,6.450309,-8.721016,3.194809], dtype = "float64")#candidate|9166|(1440,)|const|float64
call_9164 = relay.TupleGetItem(func_4545_call(relay.reshape(const_9165.astype('float32'), [3, 2, 9]), relay.reshape(const_9166.astype('float64'), [12, 8, 15]), ), 3)
call_9167 = relay.TupleGetItem(func_4549_call(relay.reshape(const_9165.astype('float32'), [3, 2, 9]), relay.reshape(const_9166.astype('float64'), [12, 8, 15]), ), 3)
bop_9168 = relay.minimum(uop_9160.astype('float32'), relay.reshape(uop_9149.astype('float32'), relay.shape_of(uop_9160))) # shape=(8, 9, 3)
output = relay.Tuple([call_9164,const_9165,const_9166,bop_9168,])
output2 = relay.Tuple([call_9167,const_9165,const_9166,bop_9168,])
func_9172 = relay.Function([], output)
mod['func_9172'] = func_9172
mod = relay.transform.InferType()(mod)
output = func_9172()
func_9173 = relay.Function([], output)
mutated_mod['func_9173'] = func_9173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4481_call = mod.get_global_var('func_4481')
func_4483_call = mutated_mod.get_global_var('func_4483')
call_9177 = func_4481_call()
call_9178 = func_4481_call()
func_7575_call = mod.get_global_var('func_7575')
func_7577_call = mutated_mod.get_global_var('func_7577')
call_9185 = relay.TupleGetItem(func_7575_call(), 1)
call_9186 = relay.TupleGetItem(func_7577_call(), 1)
func_8549_call = mod.get_global_var('func_8549')
func_8551_call = mutated_mod.get_global_var('func_8551')
call_9189 = relay.TupleGetItem(func_8549_call(), 0)
call_9190 = relay.TupleGetItem(func_8551_call(), 0)
output = relay.Tuple([call_9177,call_9185,call_9189,])
output2 = relay.Tuple([call_9178,call_9186,call_9190,])
func_9207 = relay.Function([], output)
mod['func_9207'] = func_9207
mod = relay.transform.InferType()(mod)
mutated_mod['func_9207'] = func_9207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9207_call = mutated_mod.get_global_var('func_9207')
call_9208 = func_9207_call()
output = call_9208
func_9209 = relay.Function([], output)
mutated_mod['func_9209'] = func_9209
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9293 = relay.var("var_9293", dtype = "uint64", shape = ())#candidate|9293|()|var|uint64
var_9294 = relay.var("var_9294", dtype = "uint64", shape = (16, 4, 11))#candidate|9294|(16, 4, 11)|var|uint64
bop_9295 = relay.greater_equal(var_9293.astype('bool'), var_9294.astype('bool')) # shape=(16, 4, 11)
output = relay.Tuple([bop_9295,])
output2 = relay.Tuple([bop_9295,])
func_9309 = relay.Function([var_9293,var_9294,], output)
mod['func_9309'] = func_9309
mod = relay.transform.InferType()(mod)
mutated_mod['func_9309'] = func_9309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9309_call = mutated_mod.get_global_var('func_9309')
var_9311 = relay.var("var_9311", dtype = "uint64", shape = ())#candidate|9311|()|var|uint64
var_9312 = relay.var("var_9312", dtype = "uint64", shape = (16, 4, 11))#candidate|9312|(16, 4, 11)|var|uint64
call_9310 = func_9309_call(var_9311,var_9312,)
output = call_9310
func_9313 = relay.Function([var_9311,var_9312,], output)
mutated_mod['func_9313'] = func_9313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4944_call = mod.get_global_var('func_4944')
func_4946_call = mutated_mod.get_global_var('func_4946')
call_9322 = func_4944_call()
call_9323 = func_4944_call()
func_7584_call = mod.get_global_var('func_7584')
func_7586_call = mutated_mod.get_global_var('func_7586')
call_9324 = func_7584_call()
call_9325 = func_7584_call()
output = relay.Tuple([call_9322,call_9324,])
output2 = relay.Tuple([call_9323,call_9325,])
func_9334 = relay.Function([], output)
mod['func_9334'] = func_9334
mod = relay.transform.InferType()(mod)
output = func_9334()
func_9335 = relay.Function([], output)
mutated_mod['func_9335'] = func_9335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8549_call = mod.get_global_var('func_8549')
func_8551_call = mutated_mod.get_global_var('func_8551')
call_9428 = relay.TupleGetItem(func_8549_call(), 0)
call_9429 = relay.TupleGetItem(func_8551_call(), 0)
output = relay.Tuple([call_9428,])
output2 = relay.Tuple([call_9429,])
func_9431 = relay.Function([], output)
mod['func_9431'] = func_9431
mod = relay.transform.InferType()(mod)
mutated_mod['func_9431'] = func_9431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9431_call = mutated_mod.get_global_var('func_9431')
call_9432 = func_9431_call()
output = call_9432
func_9433 = relay.Function([], output)
mutated_mod['func_9433'] = func_9433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7873_call = mod.get_global_var('func_7873')
func_7875_call = mutated_mod.get_global_var('func_7875')
call_9456 = relay.TupleGetItem(func_7873_call(), 0)
call_9457 = relay.TupleGetItem(func_7875_call(), 0)
output = call_9456
output2 = call_9457
func_9463 = relay.Function([], output)
mod['func_9463'] = func_9463
mod = relay.transform.InferType()(mod)
output = func_9463()
func_9464 = relay.Function([], output)
mutated_mod['func_9464'] = func_9464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8358_call = mod.get_global_var('func_8358')
func_8360_call = mutated_mod.get_global_var('func_8360')
call_9474 = func_8358_call()
call_9475 = func_8358_call()
output = call_9474
output2 = call_9475
func_9482 = relay.Function([], output)
mod['func_9482'] = func_9482
mod = relay.transform.InferType()(mod)
mutated_mod['func_9482'] = func_9482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9482_call = mutated_mod.get_global_var('func_9482')
call_9483 = func_9482_call()
output = call_9483
func_9484 = relay.Function([], output)
mutated_mod['func_9484'] = func_9484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7856_call = mod.get_global_var('func_7856')
func_7858_call = mutated_mod.get_global_var('func_7858')
call_9494 = relay.TupleGetItem(func_7856_call(), 0)
call_9495 = relay.TupleGetItem(func_7858_call(), 0)
uop_9505 = relay.sqrt(call_9494.astype('float32')) # shape=(3, 2, 9)
uop_9507 = relay.sqrt(call_9495.astype('float32')) # shape=(3, 2, 9)
func_4944_call = mod.get_global_var('func_4944')
func_4946_call = mutated_mod.get_global_var('func_4946')
call_9530 = func_4944_call()
call_9531 = func_4944_call()
func_3842_call = mod.get_global_var('func_3842')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_9533 = relay.TupleGetItem(func_3842_call(), 0)
call_9534 = relay.TupleGetItem(func_3843_call(), 0)
func_8295_call = mod.get_global_var('func_8295')
func_8297_call = mutated_mod.get_global_var('func_8297')
call_9539 = relay.TupleGetItem(func_8295_call(), 1)
call_9540 = relay.TupleGetItem(func_8297_call(), 1)
func_4928_call = mod.get_global_var('func_4928')
func_4930_call = mutated_mod.get_global_var('func_4930')
call_9546 = relay.TupleGetItem(func_4928_call(), 0)
call_9547 = relay.TupleGetItem(func_4930_call(), 0)
func_6323_call = mod.get_global_var('func_6323')
func_6326_call = mutated_mod.get_global_var('func_6326')
call_9549 = relay.TupleGetItem(func_6323_call(relay.reshape(uop_9505.astype('float32'), [3, 2, 9])), 1)
call_9550 = relay.TupleGetItem(func_6326_call(relay.reshape(uop_9505.astype('float32'), [3, 2, 9])), 1)
func_3666_call = mod.get_global_var('func_3666')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_9552 = relay.TupleGetItem(func_3666_call(), 0)
call_9553 = relay.TupleGetItem(func_3667_call(), 0)
output = relay.Tuple([uop_9505,call_9530,call_9533,call_9539,call_9546,call_9549,call_9552,])
output2 = relay.Tuple([uop_9507,call_9531,call_9534,call_9540,call_9547,call_9550,call_9553,])
func_9554 = relay.Function([], output)
mod['func_9554'] = func_9554
mod = relay.transform.InferType()(mod)
mutated_mod['func_9554'] = func_9554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9554_call = mutated_mod.get_global_var('func_9554')
call_9555 = func_9554_call()
output = call_9555
func_9556 = relay.Function([], output)
mutated_mod['func_9556'] = func_9556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4829_call = mod.get_global_var('func_4829')
func_4831_call = mutated_mod.get_global_var('func_4831')
call_9588 = func_4829_call()
call_9589 = func_4829_call()
output = relay.Tuple([call_9588,])
output2 = relay.Tuple([call_9589,])
func_9600 = relay.Function([], output)
mod['func_9600'] = func_9600
mod = relay.transform.InferType()(mod)
mutated_mod['func_9600'] = func_9600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9600_call = mutated_mod.get_global_var('func_9600')
call_9601 = func_9600_call()
output = call_9601
func_9602 = relay.Function([], output)
mutated_mod['func_9602'] = func_9602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7575_call = mod.get_global_var('func_7575')
func_7577_call = mutated_mod.get_global_var('func_7577')
call_9603 = relay.TupleGetItem(func_7575_call(), 1)
call_9604 = relay.TupleGetItem(func_7577_call(), 1)
func_5999_call = mod.get_global_var('func_5999')
func_6001_call = mutated_mod.get_global_var('func_6001')
var_9606 = relay.var("var_9606", dtype = "uint32", shape = (130,))#candidate|9606|(130,)|var|uint32
call_9605 = relay.TupleGetItem(func_5999_call(relay.reshape(var_9606.astype('uint32'), [130,])), 5)
call_9607 = relay.TupleGetItem(func_6001_call(relay.reshape(var_9606.astype('uint32'), [130,])), 5)
output = relay.Tuple([call_9603,call_9605,var_9606,])
output2 = relay.Tuple([call_9604,call_9607,var_9606,])
func_9612 = relay.Function([var_9606,], output)
mod['func_9612'] = func_9612
mod = relay.transform.InferType()(mod)
mutated_mod['func_9612'] = func_9612
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9613 = relay.var("var_9613", dtype = "uint32", shape = (130,))#candidate|9613|(130,)|var|uint32
func_9612_call = mutated_mod.get_global_var('func_9612')
call_9614 = func_9612_call(var_9613)
output = call_9614
func_9615 = relay.Function([var_9613], output)
mutated_mod['func_9615'] = func_9615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5788_call = mod.get_global_var('func_5788')
func_5789_call = mutated_mod.get_global_var('func_5789')
call_9620 = relay.TupleGetItem(func_5788_call(), 1)
call_9621 = relay.TupleGetItem(func_5789_call(), 1)
output = call_9620
output2 = call_9621
func_9622 = relay.Function([], output)
mod['func_9622'] = func_9622
mod = relay.transform.InferType()(mod)
mutated_mod['func_9622'] = func_9622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9622_call = mutated_mod.get_global_var('func_9622')
call_9623 = func_9622_call()
output = call_9623
func_9624 = relay.Function([], output)
mutated_mod['func_9624'] = func_9624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6778_call = mod.get_global_var('func_6778')
func_6779_call = mutated_mod.get_global_var('func_6779')
call_9627 = relay.TupleGetItem(func_6778_call(), 0)
call_9628 = relay.TupleGetItem(func_6779_call(), 0)
const_9638 = relay.const([[1,-4],[-6,1],[1,-10],[1,-3],[5,8],[2,3],[-7,6],[-3,7],[-10,10],[5,-4],[9,-7],[7,7],[-5,-10],[-8,7],[-7,3],[-1,-5],[1,-4],[5,3],[5,-6],[-9,6],[6,3],[1,9],[-10,-8],[-5,9],[-6,-10],[-5,7],[-4,-2],[-6,9],[8,-5],[-9,-7],[-9,9],[9,7],[2,-10],[-2,-7],[-10,1],[1,9],[9,8],[-8,-6],[-1,-8],[2,-8],[5,-3],[5,-5],[-1,2],[-6,9],[6,-5],[2,1],[6,-6],[7,5],[1,8],[8,-4],[10,10],[8,-1],[-7,-9],[8,6],[1,2],[-7,-9],[5,-6],[-1,-3],[-6,-4],[2,-9],[2,2],[5,-5],[2,-6],[6,-1],[3,5],[8,4],[1,-10],[-5,-4],[6,8],[7,-10],[1,-10],[-1,10],[-8,7],[-3,4],[1,6],[5,-7],[-9,-2],[10,-5],[-8,-10],[6,3],[4,-2],[3,8],[-9,3],[6,5],[-5,-2],[-9,-6],[2,5],[5,-9],[-8,-6],[6,6],[-10,-9],[9,4],[1,8],[10,6],[-1,9],[-9,-7]], dtype = "uint64")#candidate|9638|(96, 2)|const|uint64
bop_9639 = relay.greater(call_9627.astype('bool'), relay.reshape(const_9638.astype('bool'), relay.shape_of(call_9627))) # shape=(96, 2)
bop_9642 = relay.greater(call_9628.astype('bool'), relay.reshape(const_9638.astype('bool'), relay.shape_of(call_9628))) # shape=(96, 2)
var_9648 = relay.var("var_9648", dtype = "uint64", shape = (96, 2))#candidate|9648|(96, 2)|var|uint64
bop_9649 = relay.divide(call_9627.astype('float64'), relay.reshape(var_9648.astype('float64'), relay.shape_of(call_9627))) # shape=(96, 2)
bop_9652 = relay.divide(call_9628.astype('float64'), relay.reshape(var_9648.astype('float64'), relay.shape_of(call_9628))) # shape=(96, 2)
func_9207_call = mod.get_global_var('func_9207')
func_9209_call = mutated_mod.get_global_var('func_9209')
call_9654 = relay.TupleGetItem(func_9207_call(), 0)
call_9655 = relay.TupleGetItem(func_9209_call(), 0)
func_5280_call = mod.get_global_var('func_5280')
func_5281_call = mutated_mod.get_global_var('func_5281')
call_9658 = relay.TupleGetItem(func_5280_call(), 0)
call_9659 = relay.TupleGetItem(func_5281_call(), 0)
output = relay.Tuple([bop_9639,bop_9649,call_9654,call_9658,])
output2 = relay.Tuple([bop_9642,bop_9652,call_9655,call_9659,])
func_9663 = relay.Function([var_9648,], output)
mod['func_9663'] = func_9663
mod = relay.transform.InferType()(mod)
mutated_mod['func_9663'] = func_9663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9664 = relay.var("var_9664", dtype = "uint64", shape = (96, 2))#candidate|9664|(96, 2)|var|uint64
func_9663_call = mutated_mod.get_global_var('func_9663')
call_9665 = func_9663_call(var_9664)
output = call_9665
func_9666 = relay.Function([var_9664], output)
mutated_mod['func_9666'] = func_9666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4928_call = mod.get_global_var('func_4928')
func_4930_call = mutated_mod.get_global_var('func_4930')
call_9671 = relay.TupleGetItem(func_4928_call(), 0)
call_9672 = relay.TupleGetItem(func_4930_call(), 0)
func_7856_call = mod.get_global_var('func_7856')
func_7858_call = mutated_mod.get_global_var('func_7858')
call_9673 = relay.TupleGetItem(func_7856_call(), 0)
call_9674 = relay.TupleGetItem(func_7858_call(), 0)
func_4137_call = mod.get_global_var('func_4137')
func_4138_call = mutated_mod.get_global_var('func_4138')
call_9681 = relay.TupleGetItem(func_4137_call(), 1)
call_9682 = relay.TupleGetItem(func_4138_call(), 1)
uop_9701 = relay.tan(call_9671.astype('float64')) # shape=(6, 9, 11)
uop_9703 = relay.tan(call_9672.astype('float64')) # shape=(6, 9, 11)
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_9713 = relay.TupleGetItem(func_4016_call(), 0)
call_9714 = relay.TupleGetItem(func_4018_call(), 0)
bop_9719 = relay.logical_and(uop_9701.astype('bool'), relay.reshape(call_9671.astype('bool'), relay.shape_of(uop_9701))) # shape=(6, 9, 11)
bop_9722 = relay.logical_and(uop_9703.astype('bool'), relay.reshape(call_9672.astype('bool'), relay.shape_of(uop_9703))) # shape=(6, 9, 11)
bop_9734 = relay.less(uop_9701.astype('bool'), relay.reshape(bop_9719.astype('bool'), relay.shape_of(uop_9701))) # shape=(6, 9, 11)
bop_9737 = relay.less(uop_9703.astype('bool'), relay.reshape(bop_9722.astype('bool'), relay.shape_of(uop_9703))) # shape=(6, 9, 11)
bop_9739 = relay.divide(bop_9734.astype('float64'), relay.reshape(bop_9719.astype('float64'), relay.shape_of(bop_9734))) # shape=(6, 9, 11)
bop_9742 = relay.divide(bop_9737.astype('float64'), relay.reshape(bop_9722.astype('float64'), relay.shape_of(bop_9737))) # shape=(6, 9, 11)
func_4928_call = mod.get_global_var('func_4928')
func_4930_call = mutated_mod.get_global_var('func_4930')
call_9745 = relay.TupleGetItem(func_4928_call(), 0)
call_9746 = relay.TupleGetItem(func_4930_call(), 0)
output = relay.Tuple([call_9673,call_9681,call_9713,bop_9739,call_9745,])
output2 = relay.Tuple([call_9674,call_9682,call_9714,bop_9742,call_9746,])
func_9747 = relay.Function([], output)
mod['func_9747'] = func_9747
mod = relay.transform.InferType()(mod)
output = func_9747()
func_9748 = relay.Function([], output)
mutated_mod['func_9748'] = func_9748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9622_call = mod.get_global_var('func_9622')
func_9624_call = mutated_mod.get_global_var('func_9624')
call_9799 = func_9622_call()
call_9800 = func_9622_call()
func_6617_call = mod.get_global_var('func_6617')
func_6618_call = mutated_mod.get_global_var('func_6618')
call_9813 = relay.TupleGetItem(func_6617_call(), 0)
call_9814 = relay.TupleGetItem(func_6618_call(), 0)
output = relay.Tuple([call_9799,call_9813,])
output2 = relay.Tuple([call_9800,call_9814,])
func_9844 = relay.Function([], output)
mod['func_9844'] = func_9844
mod = relay.transform.InferType()(mod)
output = func_9844()
func_9845 = relay.Function([], output)
mutated_mod['func_9845'] = func_9845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5817_call = mod.get_global_var('func_5817')
func_5819_call = mutated_mod.get_global_var('func_5819')
call_9907 = relay.TupleGetItem(func_5817_call(), 0)
call_9908 = relay.TupleGetItem(func_5819_call(), 0)
output = call_9907
output2 = call_9908
func_9941 = relay.Function([], output)
mod['func_9941'] = func_9941
mod = relay.transform.InferType()(mod)
mutated_mod['func_9941'] = func_9941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9941_call = mutated_mod.get_global_var('func_9941')
call_9942 = func_9941_call()
output = call_9942
func_9943 = relay.Function([], output)
mutated_mod['func_9943'] = func_9943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_9970 = relay.TupleGetItem(func_5010_call(), 0)
call_9971 = relay.TupleGetItem(func_5011_call(), 0)
output = relay.Tuple([call_9970,])
output2 = relay.Tuple([call_9971,])
func_9976 = relay.Function([], output)
mod['func_9976'] = func_9976
mod = relay.transform.InferType()(mod)
output = func_9976()
func_9977 = relay.Function([], output)
mutated_mod['func_9977'] = func_9977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_9984 = relay.TupleGetItem(func_5010_call(), 0)
call_9985 = relay.TupleGetItem(func_5011_call(), 0)
output = call_9984
output2 = call_9985
func_9986 = relay.Function([], output)
mod['func_9986'] = func_9986
mod = relay.transform.InferType()(mod)
mutated_mod['func_9986'] = func_9986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9986_call = mutated_mod.get_global_var('func_9986')
call_9987 = func_9986_call()
output = call_9987
func_9988 = relay.Function([], output)
mutated_mod['func_9988'] = func_9988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7983_call = mod.get_global_var('func_7983')
func_7985_call = mutated_mod.get_global_var('func_7985')
call_10042 = func_7983_call()
call_10043 = func_7983_call()
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_10073 = relay.TupleGetItem(func_7093_call(), 1)
call_10074 = relay.TupleGetItem(func_7095_call(), 1)
output = relay.Tuple([call_10042,call_10073,])
output2 = relay.Tuple([call_10043,call_10074,])
func_10087 = relay.Function([], output)
mod['func_10087'] = func_10087
mod = relay.transform.InferType()(mod)
output = func_10087()
func_10088 = relay.Function([], output)
mutated_mod['func_10088'] = func_10088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5761_call = mod.get_global_var('func_5761')
func_5762_call = mutated_mod.get_global_var('func_5762')
call_10095 = relay.TupleGetItem(func_5761_call(), 0)
call_10096 = relay.TupleGetItem(func_5762_call(), 0)
func_8777_call = mod.get_global_var('func_8777')
func_8779_call = mutated_mod.get_global_var('func_8779')
call_10104 = func_8777_call()
call_10105 = func_8777_call()
output = relay.Tuple([call_10095,call_10104,])
output2 = relay.Tuple([call_10096,call_10105,])
func_10111 = relay.Function([], output)
mod['func_10111'] = func_10111
mod = relay.transform.InferType()(mod)
mutated_mod['func_10111'] = func_10111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10111_call = mutated_mod.get_global_var('func_10111')
call_10112 = func_10111_call()
output = call_10112
func_10113 = relay.Function([], output)
mutated_mod['func_10113'] = func_10113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8996_call = mod.get_global_var('func_8996')
func_8998_call = mutated_mod.get_global_var('func_8998')
call_10114 = relay.TupleGetItem(func_8996_call(), 0)
call_10115 = relay.TupleGetItem(func_8998_call(), 0)
func_9137_call = mod.get_global_var('func_9137')
func_9138_call = mutated_mod.get_global_var('func_9138')
call_10141 = relay.TupleGetItem(func_9137_call(), 0)
call_10142 = relay.TupleGetItem(func_9138_call(), 0)
output = relay.Tuple([call_10114,call_10141,])
output2 = relay.Tuple([call_10115,call_10142,])
func_10146 = relay.Function([], output)
mod['func_10146'] = func_10146
mod = relay.transform.InferType()(mod)
output = func_10146()
func_10147 = relay.Function([], output)
mutated_mod['func_10147'] = func_10147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6077_call = mod.get_global_var('func_6077')
func_6078_call = mutated_mod.get_global_var('func_6078')
call_10169 = func_6077_call()
call_10170 = func_6077_call()
func_7029_call = mod.get_global_var('func_7029')
func_7034_call = mutated_mod.get_global_var('func_7034')
var_10183 = relay.var("var_10183", dtype = "uint32", shape = (192,))#candidate|10183|(192,)|var|uint32
var_10184 = relay.var("var_10184", dtype = "int32", shape = (112,))#candidate|10184|(112,)|var|int32
var_10185 = relay.var("var_10185", dtype = "float64", shape = (80,))#candidate|10185|(80,)|var|float64
call_10182 = relay.TupleGetItem(func_7029_call(relay.reshape(var_10183.astype('uint32'), [192,]), relay.reshape(var_10184.astype('int32'), [112,]), relay.reshape(var_10185.astype('float64'), [80,]), ), 2)
call_10186 = relay.TupleGetItem(func_7034_call(relay.reshape(var_10183.astype('uint32'), [192,]), relay.reshape(var_10184.astype('int32'), [112,]), relay.reshape(var_10185.astype('float64'), [80,]), ), 2)
func_4684_call = mod.get_global_var('func_4684')
func_4686_call = mutated_mod.get_global_var('func_4686')
call_10192 = relay.TupleGetItem(func_4684_call(), 0)
call_10193 = relay.TupleGetItem(func_4686_call(), 0)
uop_10198 = relay.log(call_10169.astype('float64')) # shape=(6, 9, 11)
uop_10200 = relay.log(call_10170.astype('float64')) # shape=(6, 9, 11)
func_5825_call = mod.get_global_var('func_5825')
func_5826_call = mutated_mod.get_global_var('func_5826')
call_10217 = relay.TupleGetItem(func_5825_call(), 0)
call_10218 = relay.TupleGetItem(func_5826_call(), 0)
func_8635_call = mod.get_global_var('func_8635')
func_8637_call = mutated_mod.get_global_var('func_8637')
const_10266 = relay.const([-7.581832,0.142651,7.149462,7.053469,-7.341986,4.854550,-5.982373,0.890860,-9.865761,6.485784,7.398796,2.671845], dtype = "float32")#candidate|10266|(12,)|const|float32
call_10265 = relay.TupleGetItem(func_8635_call(relay.reshape(const_10266.astype('float32'), [12, 1])), 0)
call_10267 = relay.TupleGetItem(func_8637_call(relay.reshape(const_10266.astype('float32'), [12, 1])), 0)
func_4762_call = mod.get_global_var('func_4762')
func_4763_call = mutated_mod.get_global_var('func_4763')
call_10268 = func_4762_call()
call_10269 = func_4762_call()
uop_10290 = relay.sin(uop_10198.astype('float64')) # shape=(6, 9, 11)
uop_10292 = relay.sin(uop_10200.astype('float64')) # shape=(6, 9, 11)
bop_10294 = relay.greater(call_10265.astype('bool'), var_10184.astype('bool')) # shape=(12, 112)
bop_10297 = relay.greater(call_10267.astype('bool'), var_10184.astype('bool')) # shape=(12, 112)
uop_10302 = relay.atanh(uop_10290.astype('float32')) # shape=(6, 9, 11)
uop_10304 = relay.atanh(uop_10292.astype('float32')) # shape=(6, 9, 11)
func_4974_call = mod.get_global_var('func_4974')
func_4977_call = mutated_mod.get_global_var('func_4977')
var_10306 = relay.var("var_10306", dtype = "uint16", shape = (16,))#candidate|10306|(16,)|var|uint16
var_10307 = relay.var("var_10307", dtype = "uint16", shape = (224,))#candidate|10307|(224,)|var|uint16
call_10305 = func_4974_call(relay.reshape(var_10306.astype('uint16'), [1, 8, 2]), relay.reshape(var_10307.astype('uint16'), [14, 8, 2]), )
call_10308 = func_4974_call(relay.reshape(var_10306.astype('uint16'), [1, 8, 2]), relay.reshape(var_10307.astype('uint16'), [14, 8, 2]), )
func_639_call = mod.get_global_var('func_639')
func_642_call = mutated_mod.get_global_var('func_642')
var_10317 = relay.var("var_10317", dtype = "float32", shape = (840,))#candidate|10317|(840,)|var|float32
call_10316 = func_639_call(relay.reshape(var_10317.astype('float32'), [10, 7, 12]))
call_10318 = func_639_call(relay.reshape(var_10317.astype('float32'), [10, 7, 12]))
output = relay.Tuple([call_10182,var_10183,var_10185,call_10192,call_10217,const_10266,call_10268,bop_10294,uop_10302,call_10305,var_10306,var_10307,call_10316,var_10317,])
output2 = relay.Tuple([call_10186,var_10183,var_10185,call_10193,call_10218,const_10266,call_10269,bop_10297,uop_10304,call_10308,var_10306,var_10307,call_10318,var_10317,])
func_10321 = relay.Function([var_10183,var_10184,var_10185,var_10306,var_10307,var_10317,], output)
mod['func_10321'] = func_10321
mod = relay.transform.InferType()(mod)
mutated_mod['func_10321'] = func_10321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10321_call = mutated_mod.get_global_var('func_10321')
var_10323 = relay.var("var_10323", dtype = "uint32", shape = (192,))#candidate|10323|(192,)|var|uint32
var_10324 = relay.var("var_10324", dtype = "int32", shape = (112,))#candidate|10324|(112,)|var|int32
var_10325 = relay.var("var_10325", dtype = "float64", shape = (80,))#candidate|10325|(80,)|var|float64
var_10326 = relay.var("var_10326", dtype = "uint16", shape = (16,))#candidate|10326|(16,)|var|uint16
var_10327 = relay.var("var_10327", dtype = "uint16", shape = (224,))#candidate|10327|(224,)|var|uint16
var_10328 = relay.var("var_10328", dtype = "float32", shape = (840,))#candidate|10328|(840,)|var|float32
call_10322 = func_10321_call(var_10323,var_10324,var_10325,var_10326,var_10327,var_10328,)
output = call_10322
func_10329 = relay.Function([var_10323,var_10324,var_10325,var_10326,var_10327,var_10328,], output)
mutated_mod['func_10329'] = func_10329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7584_call = mod.get_global_var('func_7584')
func_7586_call = mutated_mod.get_global_var('func_7586')
call_10405 = func_7584_call()
call_10406 = func_7584_call()
func_7925_call = mod.get_global_var('func_7925')
func_7926_call = mutated_mod.get_global_var('func_7926')
call_10409 = func_7925_call()
call_10410 = func_7925_call()
output = relay.Tuple([call_10405,call_10409,])
output2 = relay.Tuple([call_10406,call_10410,])
func_10412 = relay.Function([], output)
mod['func_10412'] = func_10412
mod = relay.transform.InferType()(mod)
mutated_mod['func_10412'] = func_10412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10412_call = mutated_mod.get_global_var('func_10412')
call_10413 = func_10412_call()
output = call_10413
func_10414 = relay.Function([], output)
mutated_mod['func_10414'] = func_10414
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10522 = relay.var("var_10522", dtype = "float64", shape = (14, 7, 1))#candidate|10522|(14, 7, 1)|var|float64
var_10523 = relay.var("var_10523", dtype = "float64", shape = (14, 7, 7))#candidate|10523|(14, 7, 7)|var|float64
bop_10524 = relay.subtract(var_10522.astype('float64'), var_10523.astype('float64')) # shape=(14, 7, 7)
output = bop_10524
output2 = bop_10524
func_10530 = relay.Function([var_10522,var_10523,], output)
mod['func_10530'] = func_10530
mod = relay.transform.InferType()(mod)
var_10531 = relay.var("var_10531", dtype = "float64", shape = (14, 7, 1))#candidate|10531|(14, 7, 1)|var|float64
var_10532 = relay.var("var_10532", dtype = "float64", shape = (14, 7, 7))#candidate|10532|(14, 7, 7)|var|float64
output = func_10530(var_10531,var_10532,)
func_10533 = relay.Function([var_10531,var_10532,], output)
mutated_mod['func_10533'] = func_10533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3842_call = mod.get_global_var('func_3842')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_10535 = relay.TupleGetItem(func_3842_call(), 0)
call_10536 = relay.TupleGetItem(func_3843_call(), 0)
func_10087_call = mod.get_global_var('func_10087')
func_10088_call = mutated_mod.get_global_var('func_10088')
call_10586 = relay.TupleGetItem(func_10087_call(), 0)
call_10587 = relay.TupleGetItem(func_10088_call(), 0)
func_7575_call = mod.get_global_var('func_7575')
func_7577_call = mutated_mod.get_global_var('func_7577')
call_10593 = relay.TupleGetItem(func_7575_call(), 0)
call_10594 = relay.TupleGetItem(func_7577_call(), 0)
output = relay.Tuple([call_10535,call_10586,call_10593,])
output2 = relay.Tuple([call_10536,call_10587,call_10594,])
func_10601 = relay.Function([], output)
mod['func_10601'] = func_10601
mod = relay.transform.InferType()(mod)
output = func_10601()
func_10602 = relay.Function([], output)
mutated_mod['func_10602'] = func_10602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6778_call = mod.get_global_var('func_6778')
func_6779_call = mutated_mod.get_global_var('func_6779')
call_10621 = relay.TupleGetItem(func_6778_call(), 0)
call_10622 = relay.TupleGetItem(func_6779_call(), 0)
output = call_10621
output2 = call_10622
func_10623 = relay.Function([], output)
mod['func_10623'] = func_10623
mod = relay.transform.InferType()(mod)
output = func_10623()
func_10624 = relay.Function([], output)
mutated_mod['func_10624'] = func_10624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8834_call = mod.get_global_var('func_8834')
func_8835_call = mutated_mod.get_global_var('func_8835')
call_10664 = relay.TupleGetItem(func_8834_call(), 0)
call_10665 = relay.TupleGetItem(func_8835_call(), 0)
output = call_10664
output2 = call_10665
func_10676 = relay.Function([], output)
mod['func_10676'] = func_10676
mod = relay.transform.InferType()(mod)
output = func_10676()
func_10677 = relay.Function([], output)
mutated_mod['func_10677'] = func_10677
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10817 = relay.var("var_10817", dtype = "int64", shape = ())#candidate|10817|()|var|int64
var_10818 = relay.var("var_10818", dtype = "int64", shape = (10, 7, 6))#candidate|10818|(10, 7, 6)|var|int64
bop_10819 = relay.multiply(var_10817.astype('int64'), var_10818.astype('int64')) # shape=(10, 7, 6)
output = bop_10819
output2 = bop_10819
func_10826 = relay.Function([var_10817,var_10818,], output)
mod['func_10826'] = func_10826
mod = relay.transform.InferType()(mod)
mutated_mod['func_10826'] = func_10826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10826_call = mutated_mod.get_global_var('func_10826')
var_10828 = relay.var("var_10828", dtype = "int64", shape = ())#candidate|10828|()|var|int64
var_10829 = relay.var("var_10829", dtype = "int64", shape = (10, 7, 6))#candidate|10829|(10, 7, 6)|var|int64
call_10827 = func_10826_call(var_10828,var_10829,)
output = call_10827
func_10830 = relay.Function([var_10828,var_10829,], output)
mutated_mod['func_10830'] = func_10830
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10839 = relay.var("var_10839", dtype = "float64", shape = (2, 9, 12))#candidate|10839|(2, 9, 12)|var|float64
uop_10840 = relay.cosh(var_10839.astype('float64')) # shape=(2, 9, 12)
func_8777_call = mod.get_global_var('func_8777')
func_8779_call = mutated_mod.get_global_var('func_8779')
call_10845 = func_8777_call()
call_10846 = func_8777_call()
uop_10858 = relay.atan(uop_10840.astype('float64')) # shape=(2, 9, 12)
output = relay.Tuple([call_10845,uop_10858,])
output2 = relay.Tuple([call_10846,uop_10858,])
F = relay.Function([var_10839,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10839,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

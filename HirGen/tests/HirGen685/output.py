import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_85 = relay.var("var_85", dtype = "bool", shape = (1, 9, 13))#candidate|85|(1, 9, 13)|var|bool
var_86 = relay.var("var_86", dtype = "bool", shape = (3, 9, 13))#candidate|86|(3, 9, 13)|var|bool
bop_87 = relay.logical_or(var_85.astype('bool'), var_86.astype('bool')) # shape=(3, 9, 13)
output = bop_87
output2 = bop_87
func_92 = relay.Function([var_85,var_86,], output)
mod['func_92'] = func_92
mod = relay.transform.InferType()(mod)
mutated_mod['func_92'] = func_92
mutated_mod = relay.transform.InferType()(mutated_mod)
func_92_call = mutated_mod.get_global_var('func_92')
var_94 = relay.var("var_94", dtype = "bool", shape = (1, 9, 13))#candidate|94|(1, 9, 13)|var|bool
var_95 = relay.var("var_95", dtype = "bool", shape = (3, 9, 13))#candidate|95|(3, 9, 13)|var|bool
call_93 = func_92_call(var_94,var_95,)
output = call_93
func_96 = relay.Function([var_94,var_95,], output)
mutated_mod['func_96'] = func_96
mutated_mod = relay.transform.InferType()(mutated_mod)
var_736 = relay.var("var_736", dtype = "float64", shape = (9, 14, 9))#candidate|736|(9, 14, 9)|var|float64
uop_737 = relay.cos(var_736.astype('float64')) # shape=(9, 14, 9)
output = uop_737
output2 = uop_737
func_742 = relay.Function([var_736,], output)
mod['func_742'] = func_742
mod = relay.transform.InferType()(mod)
var_743 = relay.var("var_743", dtype = "float64", shape = (9, 14, 9))#candidate|743|(9, 14, 9)|var|float64
output = func_742(var_743)
func_744 = relay.Function([var_743], output)
mutated_mod['func_744'] = func_744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1621 = relay.var("var_1621", dtype = "int16", shape = (1, 9, 1))#candidate|1621|(1, 9, 1)|var|int16
var_1622 = relay.var("var_1622", dtype = "int16", shape = (9, 9, 10))#candidate|1622|(9, 9, 10)|var|int16
bop_1623 = relay.bitwise_or(var_1621.astype('int16'), var_1622.astype('int16')) # shape=(9, 9, 10)
uop_1627 = relay.cos(bop_1623.astype('float32')) # shape=(9, 9, 10)
func_742_call = mod.get_global_var('func_742')
func_744_call = mutated_mod.get_global_var('func_744')
const_1630 = relay.const([-9.537004,0.721231,-8.793653,-0.279880,7.104537,3.166354,2.983806,8.700544,5.585323,8.846900,8.537207,-2.195818,3.047857,-4.947444,-7.253053,1.593278,-8.026804,5.621255,-5.702965,-3.954981,0.692815,8.662873,-3.038301,0.284387,-5.565833,6.431385,2.230045,7.398898,-6.777607,7.394510,-2.868750,-2.680019,-6.343698,8.667567,6.471642,-6.964195,0.435711,6.740200,-8.682250,-8.945239,4.399153,-3.828484,4.253009,2.566288,4.959943,7.472881,-0.715237,5.726935,4.259475,0.637016,-8.263370,8.903519,5.458486,9.745131,5.946256,-3.403555,-9.153903,8.608003,4.751705,5.730517,-6.011221,-5.668179,-0.152175,0.309741,2.338767,3.559805,-4.125349,8.716968,1.013523,-6.559070,-9.510877,-5.259673,2.352553,6.346937,-3.653623,-6.478706,5.942863,1.690342,-3.630767,9.882002,3.496213,1.069238,0.631494,-7.946907,-7.110723,-5.752900,5.544963,8.341333,-7.238924,6.670387,1.012898,2.419462,5.551140,6.792049,6.689896,1.348489,1.897362,3.312023,5.800561,8.308455,-8.433212,1.839075,-8.977324,-8.990142,4.327700,-7.522205,8.090594,3.271349,-6.220835,-6.194258,3.107614,6.411337,3.230146,2.375832,-8.799963,-0.308186,-0.553415,-3.907343,-8.529961,-1.446764,9.043811,-4.236561,-7.372981,9.304057,-0.489559,9.428493,8.846605,-1.188722,4.699046,0.226013,3.347759,-5.559422,7.775730,-3.809981,1.508465,9.125471,1.828622,-3.494302,0.286406,6.683374,6.975850,8.693895,3.948933,4.831908,-0.218493,-3.003706,-3.880759,0.913984,9.601878,3.177109,-5.516655,4.884324,8.881300,-5.152939,1.179176,-0.882330,-2.424569,4.925687,-0.427277,-7.943849,-7.781016,-9.569475,5.722507,-4.302428,9.371855,7.898117,0.926279,-0.851930,-7.085751,4.279442,-2.143323,6.869007,-6.775107,-0.155615,6.868752,6.549217,5.456845,0.614196,9.675569,7.474585,9.935483,1.299184,-8.338062,4.541541,-2.943273,-6.446496,7.034080,4.037113,3.790923,-0.526945,-6.059220,-9.411702,5.990792,-7.731053,3.939065,9.497315,-4.197929,3.532050,-9.448507,-0.433042,-8.271730,7.270249,-3.079237,9.454735,-7.200943,-4.753489,0.574423,-8.638801,-3.443621,5.434159,3.201367,4.506713,9.325439,-8.282956,7.331977,-6.633146,2.568869,1.010186,-0.798938,1.735154,-2.124905,7.158341,-0.195983,-1.506884,-5.825176,3.297713,2.242326,-5.582468,6.393072,-2.330698,2.558708,-9.653669,8.462335,-3.945575,-6.323790,-8.230326,5.778131,-6.058805,-1.271538,4.028243,7.868978,-8.667500,6.427183,1.648715,0.524291,7.091794,6.896708,5.124983,-3.001999,-3.706799,-2.126807,2.332026,8.169601,2.075497,2.822981,-0.369685,3.071250,6.724077,0.425344,-8.451478,-5.498723,2.742251,7.585013,-9.025743,-8.582941,7.123509,-1.082888,6.967239,-5.293921,7.359803,8.935920,-9.391757,-2.909660,9.617161,5.273608,-1.682405,6.771730,1.050235,-9.619884,-2.649957,-0.002839,9.497675,3.929561,-4.501549,-0.401309,2.765872,-1.804093,-5.339900,2.285557,-1.812504,5.697731,-6.471135,3.823141,-3.052117,-2.885614,-4.332428,-5.383080,9.907207,-0.615550,5.669089,3.328867,-6.428395,2.362909,-1.592770,-0.023792,7.603292,6.475104,1.729774,1.507991,-4.418610,-5.801833,-6.337038,6.541638,-4.999164,-3.985810,-3.779165,-9.788058,9.531188,9.239874,-0.016304,-5.738066,-4.081422,-3.510224,-7.615881,0.278710,5.531667,-0.226202,-9.413090,4.749082,7.767237,-3.328719,9.724197,9.353322,-6.070373,-4.350687,-1.738625,-0.918967,-1.183822,-4.496970,-5.854969,4.654169,-6.473405,-8.787094,2.549634,5.670701,5.166565,-2.754423,7.578146,0.046241,1.684086,-2.299314,-8.744545,-7.463672,4.697166,-3.469284,-8.405321,1.768815,1.671331,6.144614,6.656592,9.720433,-3.437654,3.628735,4.487152,-8.210406,-2.394363,0.906593,1.184615,4.417464,-1.224064,0.566427,-7.986416,1.287690,-8.584271,-2.101613,-5.165243,-2.669563,-4.916690,-2.426887,-9.136439,-6.778123,5.912785,4.781542,2.330456,-7.177261,-4.486253,-0.929404,-3.582721,-3.392909,-1.861237,0.745074,8.959904,1.987297,4.561143,2.363587,-0.808006,5.111139,6.398673,0.500132,6.427239,2.759305,3.523166,-5.852455,0.063145,-1.835031,-2.175706,-9.053944,6.408185,2.367570,2.067989,-9.002263,-9.718856,-2.421250,-4.375255,-0.631147,7.162893,-8.588858,5.086218,-7.331854,2.018264,-4.105111,-0.952642,6.708285,-4.153487,3.629137,-3.034107,-6.333076,6.124286,-8.927267,-1.350416,6.684729,-8.647272,-5.802938,1.075186,8.985688,9.178476,-1.824647,-3.005756,8.258537,-6.667797,9.580578,-0.117223,4.953971,-6.383143,2.568977,-2.730190,-1.750846,-1.941296,-7.095821,6.119976,6.562031,8.233122,7.264316,3.286997,-3.458424,6.621527,-2.552499,5.295655,2.420592,-3.776471,-7.444782,8.217768,4.027483,6.384014,4.906760,3.048202,4.341826,-7.304464,5.825925,2.774376,8.970549,5.477658,-2.910654,3.992123,-8.053588,2.688148,-7.550287,3.306971,-8.605390,1.045744,7.130627,-6.553628,8.616384,5.121428,1.380258,9.397140,1.105457,-9.419645,2.381973,6.695672,3.895391,0.202963,-0.717066,-0.711321,3.746744,-1.297562,-9.468210,-7.856015,-4.595593,-1.493466,-0.112273,-4.626905,-3.208058,-5.059701,8.617050,1.531189,-5.444494,-8.054786,9.521922,1.254797,9.243352,-1.406132,7.855773,7.294339,-1.628614,3.556721,7.864298,6.701611,-9.898246,-5.872733,2.108615,0.105772,-0.012831,-2.531946,-7.705778,-4.669453,-3.789341,3.233822,7.147682,2.842059,6.620148,8.497899,-2.221321,-2.745194,-0.300095,-4.305505,6.514725,8.760403,-1.121080,6.912057,2.977212,-0.066798,-6.308946,2.985550,-3.300195,-6.132751,7.470961,7.703054,-0.546936,7.209699,-5.583238,-5.933056,1.719769,4.199894,-4.135026,-8.109058,-8.492915,6.654697,-4.827780,6.371948,2.255792,-3.480796,5.836670,-4.148486,-6.876962,-1.501152,-4.805310,-0.352383,-0.943813,4.239236,-6.254129,-8.272520,-6.612677,-7.787475,9.239014,4.327812,9.663016,4.009869,1.939198,-3.191821,5.728115,-7.997811,2.176290,7.615467,-1.961567,-6.290244,-6.230004,-1.008585,-6.208543,-6.115007,-1.792005,-7.534691,7.173298,-3.053712,-9.997568,-8.101048,5.111681,0.753941,6.599899,-1.461052,2.446682,8.441964,4.634107,-4.185115,-8.602814,5.820029,-5.002312,-8.777855,-0.180314,5.438063,4.456157,-5.311486,-5.467789,8.871697,0.612891,-1.192194,0.613721,-9.211409,6.605531,-4.796570,3.443928,-0.738109,-9.724924,-3.739229,9.460344,6.375201,7.497840,8.400142,7.649066,-6.469270,-3.268603,7.169876,-0.789328,-1.475167,-8.914712,7.854329,5.519926,3.592755,-2.336850,-4.449674,5.666905,-9.623815,2.401882,5.583259,-4.724350,0.695021,-6.372034,-6.407565,0.950464,-9.569649,-5.404295,3.211132,3.195384,0.098542,-5.501808,7.495291,0.948889,8.114954,5.096162,7.125010,-7.230348,-7.391099,3.629345,5.678428,6.462124,-9.362194,7.930133,4.932648,-4.443259,-7.072669,-7.051820,6.401159,5.432912,0.244947,1.109899,-4.307009,5.562289,-5.955573,-4.277076,1.837003,7.513453,6.462125,-4.300340,9.736835,2.533197,6.255366,0.606474,9.333716,2.104412,5.627396,5.130179,-3.303568,-2.818255,6.929484,-2.811468,-4.060422,-8.370979,-1.327958,9.693454,1.328784,2.359316,-0.416783,7.259752,7.223949,-7.796508,0.964398,0.949561,1.773380,-6.864614,-8.352690,9.958945,-4.255681,-7.558479,-7.059253,-3.809345,-8.209380,4.666987,-8.477788,-5.146179,1.096467,-5.402874,-6.464625,2.226797,6.104520,-9.290186,-0.368068,1.742791,9.377401,-5.591172,6.719709,3.201405,-9.754413,-9.975092,-2.468860,9.994288,-6.876313,-8.372442,9.535983,-0.496508,-7.771541,-0.259835,-3.795529,6.223427,0.372931,-3.526024,4.498106,-6.129527,-7.618716,-6.575316,5.788378,-1.007570,-3.053909,-4.678642,-4.851932,-4.288558,4.710113,-7.100778,-2.518183,0.163617,7.151888,-4.543314,6.379145,-7.291857,-6.392586,-8.565391,-8.631881,5.815262,-4.577318,-5.215854,-4.099271,9.622709,4.918099,5.642930,9.794573,2.882556,-8.943815,7.913713,-5.514490,8.553845,1.336956,-3.132447,6.269845,-3.305899,0.390516,-2.801558,0.708821,3.224775,2.982244,2.254933,0.156392,8.865217,-1.708014,-9.387447,7.719107,8.747754,7.152055,-8.073040,3.139471,-0.019387,-5.769695,-8.952815,-0.567743,-7.034011,4.146365,4.410481,2.581577,-4.064763,9.916045,-4.658142,3.345516,6.522706,-4.559534,3.098272,-5.846040,-0.950136,-1.437016,3.484090,9.531101,2.113418,9.356029,7.542464,5.436151,-0.512106,-3.089456,9.745789,4.491548,9.281048,3.142754,5.856667,-4.080254,-9.535479,1.461808,-8.030144,7.690069,0.278887,-0.570704,9.779407,-8.515825,-2.756293,8.962444,-0.465545,9.311288,-8.106832,-5.642460,-9.672903,0.973058,-4.496519,-7.685672,9.955893,-3.360123,-4.314410,-5.044272,-7.722083,-1.627682,2.847659,5.884683,-5.828287,2.352415,8.879787,-2.106555,2.363830,-7.895644,-3.460946,-6.752241,-2.935274,-7.341975,5.732689,9.327231,-8.884543,-6.094141,1.962737,2.377384,-9.186961,-7.342538,7.798254,-2.614170,-0.665386,-4.352491,0.086359,1.243671,9.171201,2.411074,-3.036740,-4.873824,-4.369196,-8.280848,-2.800653,5.612673,8.722186,-4.771383,-3.802591,1.288586,7.195472,-5.197617,-9.886160,0.060713,5.327504,-5.661283,6.624127,-0.684382,3.766966,6.493041,9.954773,9.110443,-6.224437,7.678245,-7.350675,4.748707,-9.841979,-4.369184,8.187535,-6.353874,-2.121601,-4.273801,2.460254,5.883172,-9.915557,7.037785,0.056266,-9.440420,-5.420900,9.650634,-5.337264,1.488396,-6.966456,2.560761,7.106130,-7.336629,-8.790880,4.068262,-9.610087,-1.876039,8.855901,-0.965128,-9.790156,-2.419049,-6.921681,5.035194,-6.055782,1.683560,9.931301,1.459468,-8.096315,-1.839472,-5.324716,-6.921584,2.167788,0.249135,-5.264338,6.252981,-7.087230,-4.026213,7.477453,5.222719,-5.955710,-7.186207,1.407381,-0.442424,-4.940686,-0.150604,-1.324039,4.565586,-8.503895,-0.282745,-9.008603,0.099716,1.481889,0.481530,-9.135210,-9.032100,2.848236,-3.927872,-6.533204,-0.750627,1.033042,-5.391398,2.703973,1.733265,-6.513693,8.473617,-7.830711,-5.525291,-0.647702,-3.802801,-8.184036,4.137091,-4.139824,3.605495,-8.382336,7.532174,-6.075694,6.250375,6.829329,2.337414,-8.353476,-6.510801,-2.782675,-9.790863,-8.727417,0.415711,2.387064,-2.061655,-7.812083,3.964229,5.790426,-6.215205,-3.354754,9.645359,5.344839,1.367975,1.238383,-9.297224,-2.239974,-2.846538,9.065606,-6.683207,-9.459493,-9.100437,-4.935711,6.041584,-0.447670,0.309695,4.464964,-8.738004,-1.927930,-2.444113,7.464561,1.394244,9.184198,-3.784894,6.334065,-5.773779,0.091315,-9.434305,-3.780719,6.923820,2.996812,9.752169,-3.047878,5.982977,3.072622,-0.830475,-0.909389,8.376329,-2.501979,6.186106,-8.390196,6.994618,-7.106539,6.909748,-0.550738,-5.990176,1.510433,-5.198651,5.328231,-5.068299,-2.457492,-3.340585,-3.873807,-3.790723,3.548822,-6.343564,6.683534,-5.011237,3.712020,-0.386104,-3.341846,-9.431006,-3.408134,3.056397,-4.931543,8.163194,1.288735,-5.614267,5.865423,-7.279418,-4.459388,-6.178254,-6.623810,9.124020,-4.256520,2.433975,-7.169208,-8.188818,6.008041,5.050670,-0.171840,-7.459664,-2.588484,2.953472,0.288160,-9.987208,2.385654,-5.443571,6.333550,7.280616,5.576715,9.023181,-4.120243,5.385193,0.649096,-6.650073,3.898342,9.584015,5.956522,6.084600,-7.362478,-6.101739,-0.675366,-4.672637,-9.432774,8.620070,-4.519622,-0.103163,-3.021145,-6.465368,-3.025881,2.582958,0.175831,9.012111,-8.649157,-6.576394,-1.156609,-3.982407,7.564796,1.879292,-4.502297,5.749677,6.570853,-3.190957,8.537154,5.550349,7.563896,7.760431], dtype = "float64")#candidate|1630|(1134,)|const|float64
call_1629 = func_742_call(relay.reshape(const_1630.astype('float64'), [9, 14, 9]))
call_1631 = func_742_call(relay.reshape(const_1630.astype('float64'), [9, 14, 9]))
func_92_call = mod.get_global_var('func_92')
func_96_call = mutated_mod.get_global_var('func_96')
const_1633 = relay.const([True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False], dtype = "bool")#candidate|1633|(117,)|const|bool
const_1634 = relay.const([[False,False,True],[False,False,False],[False,True,True],[True,False,False],[False,False,True],[True,False,False],[False,False,True],[True,True,True],[False,True,False],[False,False,False],[False,False,False],[True,True,False],[False,True,True],[True,False,True],[True,False,True],[True,False,False],[True,False,False],[False,True,True],[True,False,False],[True,False,False],[True,True,True],[True,False,False],[True,False,True],[False,False,True],[True,True,False],[True,False,False],[True,True,False],[True,True,True],[False,False,True],[False,False,False],[True,True,True],[False,True,True],[False,False,False],[True,True,False],[False,False,True],[False,True,False],[False,False,True],[False,True,True],[False,True,True],[True,False,True],[True,True,True],[False,True,False],[False,True,False],[False,False,True],[False,False,False],[True,True,True],[True,True,False],[True,False,True],[False,False,True],[True,True,True],[True,True,False],[False,True,True],[False,True,False],[False,True,False],[False,True,False],[False,True,True],[True,False,True],[True,True,True],[True,True,True],[False,True,False],[True,False,True],[True,False,True],[False,False,False],[False,False,False],[False,False,True],[False,False,False],[False,False,True],[True,True,False],[False,False,False],[True,False,True],[True,True,True],[True,False,True],[False,False,True],[False,False,True],[False,False,False],[False,True,False],[False,True,False],[True,False,False],[False,False,False],[False,True,True],[True,False,False],[False,True,True],[True,True,True],[False,False,False],[True,False,False],[True,False,True],[False,True,False],[False,False,False],[False,False,False],[True,False,True],[False,True,False],[False,True,True],[True,False,True],[True,False,True],[True,False,True],[True,True,False],[True,True,True],[True,False,True],[False,False,False],[False,True,False],[False,True,False],[False,False,True],[True,True,False],[False,False,False],[True,True,False],[True,True,False],[True,False,True],[False,True,True],[True,True,False],[True,False,True],[False,False,True],[False,False,True],[True,True,False],[True,False,True],[False,True,False],[False,False,True],[False,True,True]], dtype = "bool")#candidate|1634|(117, 3)|const|bool
call_1632 = func_92_call(relay.reshape(const_1633.astype('bool'), [1, 9, 13]), relay.reshape(const_1634.astype('bool'), [3, 9, 13]), )
call_1635 = func_92_call(relay.reshape(const_1633.astype('bool'), [1, 9, 13]), relay.reshape(const_1634.astype('bool'), [3, 9, 13]), )
bop_1637 = relay.subtract(const_1634.astype('uint32'), relay.reshape(call_1632.astype('uint32'), relay.shape_of(const_1634))) # shape=(117, 3)
bop_1640 = relay.subtract(const_1634.astype('uint32'), relay.reshape(call_1635.astype('uint32'), relay.shape_of(const_1634))) # shape=(117, 3)
output = relay.Tuple([uop_1627,call_1629,const_1630,const_1633,bop_1637,])
output2 = relay.Tuple([uop_1627,call_1631,const_1630,const_1633,bop_1640,])
func_1648 = relay.Function([var_1621,var_1622,], output)
mod['func_1648'] = func_1648
mod = relay.transform.InferType()(mod)
var_1649 = relay.var("var_1649", dtype = "int16", shape = (1, 9, 1))#candidate|1649|(1, 9, 1)|var|int16
var_1650 = relay.var("var_1650", dtype = "int16", shape = (9, 9, 10))#candidate|1650|(9, 9, 10)|var|int16
output = func_1648(var_1649,var_1650,)
func_1651 = relay.Function([var_1649,var_1650,], output)
mutated_mod['func_1651'] = func_1651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2244 = relay.var("var_2244", dtype = "int16", shape = (7, 12, 13))#candidate|2244|(7, 12, 13)|var|int16
const_2245 = relay.const([[[8,5,-1,-7,-10,-6,-6,-5,7,2,-3,1,-3],[-3,-3,-6,-2,-10,-3,10,10,4,-10,-10,8,-1],[3,6,9,2,6,2,10,-3,-3,-4,10,-10,6],[9,3,8,-2,-1,-2,4,10,7,9,3,-4,-6],[5,-7,5,-7,-8,2,7,-2,6,-8,3,8,-7],[6,8,-8,-6,-3,10,9,5,7,-7,-3,-4,-1],[10,1,-10,1,-10,10,3,-7,3,3,9,2,-9],[-9,9,4,-9,9,3,-7,8,-9,9,3,3,-4],[8,-6,-2,-1,-5,2,-1,3,-10,7,8,-8,5],[2,1,-10,-9,-3,-3,4,1,-4,-7,-6,-9,-5],[-10,-5,8,5,-1,-6,3,-3,-8,-8,3,1,9],[6,-2,-5,8,9,5,-5,9,7,5,-2,-7,1]],[[-10,-1,-10,7,10,6,9,-3,-9,1,4,-4,7],[1,4,-7,2,5,3,-6,3,-10,-7,-7,5,-6],[7,7,6,10,-8,6,3,4,3,-10,1,-9,6],[7,-5,2,5,-7,-9,-8,-4,-9,-6,-6,4,-5],[9,-5,1,8,-7,9,-2,-10,3,-10,-4,5,-3],[-9,8,-3,-8,-2,2,-7,10,10,2,5,-10,4],[3,6,-10,-4,-8,3,-7,7,5,-8,-9,1,10],[9,-10,-8,2,-8,8,1,8,4,-1,7,-4,-2],[-5,6,-8,7,-8,8,8,4,-9,4,1,5,8],[7,-6,4,-2,7,7,-6,7,-7,-4,-1,-6,-10],[-4,10,-6,-3,-5,-4,-1,-7,-4,-1,8,8,-9],[-3,-5,-3,-10,10,-9,10,3,-1,6,-1,10,5]],[[-2,-10,-3,7,7,-8,10,-7,-4,2,-3,-2,-10],[1,-6,8,9,-10,-10,-4,-4,6,-2,-4,-9,4],[9,1,10,9,-8,6,2,2,1,-1,-8,-1,-9],[7,-1,-2,-8,10,-6,-3,-6,2,5,2,-9,2],[-9,8,-8,-7,-5,-7,-5,10,-6,6,2,-9,-3],[2,1,9,-7,-7,-1,1,-7,-10,7,-4,3,-2],[9,1,-10,3,-6,-1,-1,-7,-7,8,-9,8,8],[-7,-3,5,10,-5,-8,-4,-3,9,-5,6,-5,8],[5,-7,10,-6,-5,-7,7,-5,-2,-3,-4,-9,-7],[5,-3,5,10,1,-8,-3,7,7,-1,3,1,-8],[-8,-8,-6,-6,-5,-5,3,-5,4,-1,9,9,10],[5,7,10,4,2,-10,-7,1,10,-1,-4,-4,-7]],[[5,-4,9,-10,-5,-4,8,-9,6,5,-9,9,9],[-6,-10,-5,3,10,1,8,10,-4,-8,7,8,-9],[-7,8,4,1,1,9,-7,3,8,-3,3,-7,2],[-5,7,7,6,2,-3,6,-10,7,-3,-7,-2,-7],[10,8,-9,-2,10,-2,7,8,6,-4,-6,-4,-3],[-10,-1,-2,3,3,-2,10,-4,-8,-4,-3,-10,-9],[-1,-5,-3,-7,-2,-7,8,8,-7,-4,1,-6,-8],[-7,7,5,8,10,5,-8,-8,-3,-7,8,9,6],[4,5,10,-10,-8,7,-5,7,-6,-8,-2,-3,-1],[-4,1,-2,-2,6,-1,-1,1,6,4,-7,-10,7],[5,-10,2,-1,-6,7,2,-1,2,-3,-9,3,4],[-8,-5,6,-6,10,-4,1,4,7,-5,-8,-2,4]],[[-9,7,-6,-10,1,-5,-4,-4,-6,8,7,5,-6],[9,-5,9,9,-9,-2,-8,-7,-9,7,-1,2,-2],[-7,-9,3,10,2,-2,-7,5,-2,-2,5,-9,-9],[-7,8,-8,-10,7,-6,9,-6,8,-4,3,-6,-2],[-8,-5,-9,-8,4,3,4,5,-7,-9,-7,-6,-7],[-4,4,4,-7,1,-3,-5,6,1,10,-1,10,9],[4,-8,-4,6,8,-2,-10,3,3,-10,-7,-10,-7],[-3,-10,4,-6,6,5,-8,1,2,-4,-5,-4,-5],[-6,-10,-5,-9,5,-10,6,-1,-10,-5,-2,2,-1],[-2,-4,8,3,2,-2,2,4,8,-9,-2,1,-10],[4,8,3,-2,6,-8,9,6,2,-9,-3,-8,-10],[-1,-10,4,7,9,10,6,1,-7,-5,-4,-5,5]],[[1,-10,8,2,4,-9,-5,-8,10,-5,9,3,-8],[-5,1,-1,-5,-5,-2,-10,2,7,8,4,-1,-8],[4,-8,-8,5,3,4,-5,-3,-6,3,-2,7,8],[-5,2,-1,7,-7,4,-6,8,-9,1,-9,-6,-6],[3,-8,5,-9,-9,3,2,10,-4,5,6,-2,-5],[-5,3,7,5,8,9,6,10,3,-1,-7,9,4],[3,4,7,9,1,8,1,7,-3,-9,2,4,5],[8,-5,-1,8,-8,-5,9,-3,3,4,8,-4,-10],[-1,10,8,-9,-10,-3,6,-7,8,-8,-2,-7,-2],[6,3,2,2,9,-4,5,9,-4,7,7,-7,6],[-7,-8,9,-4,-9,6,2,3,6,-10,4,-1,5],[-8,-2,-6,9,-7,-7,3,-9,9,-4,5,-10,6]],[[-9,7,-4,10,9,-4,-9,9,2,-4,-10,-10,5],[6,-2,-9,9,7,-1,9,3,10,-4,8,8,-7],[-4,5,-6,-7,1,-9,4,-4,-5,6,-6,-1,-3],[8,-10,-2,-4,6,-5,-6,8,9,-5,8,-7,9],[-1,6,9,5,-9,-4,3,-10,-4,7,6,-6,8],[-1,8,-8,10,3,10,-7,-7,9,-4,8,-9,-9],[-10,6,-1,-3,-6,-10,-9,-4,-2,-5,5,-1,-6],[6,-4,10,4,-2,-2,-3,-9,5,-5,4,-3,8],[-4,-8,10,8,10,7,-2,8,7,-2,-6,2,-7],[1,-7,7,-10,6,8,-5,9,-2,-3,7,-4,6],[-8,-3,7,3,5,-9,-5,-6,-6,9,4,-10,-4],[7,-8,9,-3,10,-6,-6,-3,9,-10,10,7,1]]], dtype = "int16")#candidate|2245|(7, 12, 13)|const|int16
bop_2246 = relay.bitwise_or(var_2244.astype('int16'), relay.reshape(const_2245.astype('int16'), relay.shape_of(var_2244))) # shape=(7, 12, 13)
output = relay.Tuple([bop_2246,])
output2 = relay.Tuple([bop_2246,])
func_2252 = relay.Function([var_2244,], output)
mod['func_2252'] = func_2252
mod = relay.transform.InferType()(mod)
mutated_mod['func_2252'] = func_2252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2253 = relay.var("var_2253", dtype = "int16", shape = (7, 12, 13))#candidate|2253|(7, 12, 13)|var|int16
func_2252_call = mutated_mod.get_global_var('func_2252')
call_2254 = func_2252_call(var_2253)
output = call_2254
func_2255 = relay.Function([var_2253], output)
mutated_mod['func_2255'] = func_2255
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2369 = relay.var("var_2369", dtype = "uint16", shape = (10, 6, 7))#candidate|2369|(10, 6, 7)|var|uint16
const_2370 = relay.const([[[-8,-3,-5,-2,-3,9,2],[6,2,9,9,-4,6,-5],[10,8,-9,2,-5,-4,-5],[4,-10,-1,-10,-6,-10,7],[10,2,8,-7,9,8,6],[-2,-6,8,7,-10,-10,6]],[[-7,-5,5,-7,7,9,-5],[-2,2,2,2,-5,1,-8],[2,-10,8,-3,5,7,6],[-8,4,2,5,3,-5,-6],[6,7,9,4,-5,10,9],[-1,-3,5,-10,5,-2,3]],[[-9,-2,-5,2,8,-9,2],[-2,9,5,-2,-1,-9,8],[-7,7,-9,2,9,6,-9],[-2,-6,-2,-8,7,1,-2],[6,-2,-10,2,1,3,-9],[9,6,9,-6,5,9,-3]],[[1,1,-9,2,-3,9,8],[5,-1,-5,4,8,-6,3],[6,8,-5,-5,-3,2,-9],[1,4,-3,8,3,2,1],[4,-3,-2,-8,-9,1,-9],[-9,5,6,-4,6,8,4]],[[-1,-8,-1,-7,-4,-1,-7],[-7,7,-5,-4,4,9,-9],[-1,7,-8,-7,5,-5,1],[4,-10,4,-4,2,7,5],[-7,-3,5,-10,-4,-5,3],[10,6,1,2,5,-4,6]],[[-4,9,5,-2,1,-5,-3],[4,2,1,7,-6,-9,8],[10,7,5,9,-10,-10,5],[6,8,5,7,8,7,-4],[6,10,-6,-2,-2,10,-4],[-3,-6,8,-2,-1,-8,-2]],[[4,-1,-9,-6,7,7,1],[-3,6,3,-8,5,3,-8],[7,-5,-9,-3,7,-5,-9],[4,-10,4,-5,-9,7,3],[-9,8,3,1,10,-10,5],[-9,-10,4,-4,-7,7,-1]],[[9,2,-5,6,-4,9,2],[10,5,-2,6,6,-8,8],[6,-8,1,2,2,5,-8],[-1,2,-8,3,-3,-9,7],[-1,-1,-4,1,-8,-3,-5],[-8,1,-3,-3,3,2,4]],[[-4,-7,8,1,6,7,-6],[-8,-9,6,-8,-4,-2,6],[2,5,1,-8,-1,-10,10],[5,-8,-9,-9,-6,5,-9],[-6,1,5,1,-2,-6,9],[-2,-3,-8,-7,-7,-1,-5]],[[-4,3,1,7,2,3,-8],[-6,7,7,2,3,2,8],[-7,-2,-9,-1,1,-6,6],[8,10,-1,2,9,3,7],[-5,1,-8,-1,7,5,9],[-2,1,-9,4,10,-9,-1]]], dtype = "uint16")#candidate|2370|(10, 6, 7)|const|uint16
bop_2371 = relay.greater(var_2369.astype('bool'), relay.reshape(const_2370.astype('bool'), relay.shape_of(var_2369))) # shape=(10, 6, 7)
func_2252_call = mod.get_global_var('func_2252')
func_2255_call = mutated_mod.get_global_var('func_2255')
const_2386 = relay.const([1,3,-2,-3,4,-9,1,-10,-1,-6,-6,-2,9,-10,6,-10,-7,-10,2,10,-7,4,10,10,4,8,10,-2,-4,9,4,-8,-4,9,-4,-9,-10,9,-4,1,-5,-1,1,-4,-6,6,4,-8,-4,2,6,9,4,-7,-8,-10,7,8,5,-4,8,-8,6,1,-4,10,-4,-9,-8,1,-5,9,-10,-2,10,5,-6,8,-10,-3,-4,8,5,-8,-2,-7,8,10,4,5,6,9,3,-5,8,9,5,2,5,-1,9,-5,-5,-6,-7,-2,-1,4,-10,-6,8,-2,5,3,4,-10,-3,1,-9,6,8,-8,10,-10,4,-1,-3,5,7,-9,-1,5,3,-3,-10,10,-8,-8,4,-9,6,-1,2,-9,4,-1,7,1,9,4,-3,-1,5,-7,7,-5,5,2,-4,8,8,-4,-5,-5,-7,8,-3,10,6,9,5,-6,2,10,10,-3,-9,-3,10,-1,-7,8,7,2,-9,-9,-4,7,-7,-9,4,7,-7,-10,-10,-7,-1,9,-4,3,1,-8,-9,9,1,-4,10,-10,2,7,10,-1,8,9,2,-7,-6,-7,9,4,6,7,-9,-4,-7,-5,4,10,-5,-5,-4,9,7,-6,4,8,-8,-5,-4,-10,-1,-1,-2,-6,-1,3,5,-5,9,-1,-3,-10,-8,8,5,4,-6,10,6,-4,-9,2,10,-8,-1,2,10,5,-9,9,-4,10,7,-7,-6,-10,7,-8,-3,7,-7,-10,-1,4,-9,-3,-7,-2,-3,-7,-7,5,-3,2,-9,-2,8,-3,6,-8,-2,7,-4,-6,-5,5,2,-9,-2,10,9,-10,-3,-5,-2,-3,4,8,8,-4,-6,6,-8,2,-5,-3,-4,3,-8,4,1,-6,7,10,7,8,-4,1,1,-4,-8,5,2,9,4,1,3,10,-3,-5,6,-6,-2,-2,2,1,3,-2,-2,4,-4,-3,4,9,6,10,9,-10,-2,-4,-8,-4,3,-5,-7,-2,6,10,-1,-1,-2,8,-6,-10,3,-3,-1,2,-1,10,8,8,9,7,-6,-8,-9,10,7,4,-6,-10,1,2,1,-9,3,-4,-7,6,-9,-2,1,4,1,-7,-2,-5,-1,7,10,10,7,-8,4,8,8,-4,3,6,-3,-3,10,-1,7,-2,6,-10,5,-9,-4,6,8,-1,-7,7,10,6,7,10,7,-1,-3,8,-1,-10,-6,8,-6,7,8,3,1,7,-9,2,-8,-9,-3,10,5,-2,-6,-5,1,-6,-5,8,-10,-5,-1,-5,9,-1,-4,-10,-1,-10,-5,3,-8,-7,-10,10,-8,-9,4,-10,-1,-9,2,-3,-4,-1,-9,-4,-5,-1,-6,5,8,4,9,6,5,-4,-5,-9,10,-7,-6,6,-2,6,-8,1,-4,-7,-9,4,8,-10,-5,-3,2,-1,-3,-10,2,2,-7,-5,9,6,6,-3,-8,-9,-3,5,4,-4,1,-1,-9,4,-5,-7,-10,2,2,2,8,10,-6,7,-1,7,4,-6,1,9,8,10,-8,5,8,8,7,-1,3,2,-8,7,-7,7,2,3,1,-9,8,6,9,3,-4,-10,-2,-2,-3,6,-3,-7,-8,-8,-6,9,10,9,1,-7,6,-3,-10,-1,-5,3,10,6,2,1,10,-9,5,-8,-10,1,-2,4,-9,-7,4,4,-1,5,4,-1,-4,-3,-6,5,-7,4,1,1,5,-6,-7,-4,-1,-2,-5,-9,1,7,-4,7,-1,9,9,3,10,-4,10,-5,-8,-7,-10,-9,-10,-2,3,6,-8,-7,6,2,9,-3,3,9,-7,-2,3,-9,2,-7,-1,-8,-7,8,4,1,6,-10,4,-10,-6,-9,8,3,-9,4,3,-3,-6,6,-2,3,3,-9,-5,-9,3,-1,5,-10,4,6,-7,-10,1,5,4,-1,1,5,9,8,-1,-5,-3,-3,-1,6,10,-1,3,4,3,-8,7,2,-9,-10,-9,9,9,3,-10,8,-7,1,-6,-1,4,7,5,9,-10,-6,-3,-3,6,-2,4,-8,-10,3,6,7,5,1,-3,-4,9,-4,-3,-5,-2,7,9,-9,4,5,7,-10,-5,-2,9,-3,-6,-1,5,-9,-2,-5,2,10,-7,6,6,-8,-4,3,-8,4,-5,-2,10,7,8,5,-7,5,-1,-10,4,-9,-10,-4,9,2,-4,6,6,7,7,-3,10,-10,9,-7,-10,3,-9,10,-6,3,7,-5,-5,6,-6,-6,-8,-7,-6,2,-1,8,6,9,8,-2,-1,7,-9,10,3,4,-2,-10,3,6,9,-3,2,6,4,-5,7,3,-7,3,-8,-1,8,-3,-5,5,3,-10,-10,4,-6,-8,-5,1,5,9,-3,-6,-4,-3,7,3,-8,4,-9,1,-9,10,-4,-5,-7,2,7,-10,-6,9,1,-3,5,8,-8,-1,9,-3,4,-10,4,-8,10,3,-3,9,-4,-4,2,7,10,-8,-9,2,9,-4,-5,-4,-2,-1,9,10,2,6,-7,-3,1,6,2,-5,1,4,2,9,4,1,-9,1,-7,5,-8,-1,-10,8,6,-3,-3,-10,-4,8,-10,3,10,-1,1,-10,-6,7,-9,-8,-10,-9,7,-7,10,-10,4,2,-9,2,-10,-8,-5,-4,2,9,-4,-5,10,1,7,2,9,9,6,-8,6,-5,-1,-7,-1,-6,-5,-6,-5,4,-10,-5,-2,-7,-6,9,10,-4,10,-5,6,-6,2,-5,-8,-9,9,9,8,2,-10,-7,4,3,-5,-7,-10,3,2,1,8,10,5,9,-5,1,-3,-8,-2,-2,-7,-7,9,-9,5,-5,-1,2,-4,1,-3,7,-1,-4,-3,-7,3,-9,1,7,9,2,-7,-6,-5,-2,-9,6,-5,-10,-9,1,10,-6,10,-10], dtype = "int16")#candidate|2386|(1092,)|const|int16
call_2385 = relay.TupleGetItem(func_2252_call(relay.reshape(const_2386.astype('int16'), [7, 12, 13])), 0)
call_2387 = relay.TupleGetItem(func_2255_call(relay.reshape(const_2386.astype('int16'), [7, 12, 13])), 0)
bop_2413 = relay.logical_xor(const_2386.astype('int16'), relay.reshape(call_2385.astype('int16'), relay.shape_of(const_2386))) # shape=(1092,)
bop_2416 = relay.logical_xor(const_2386.astype('int16'), relay.reshape(call_2387.astype('int16'), relay.shape_of(const_2386))) # shape=(1092,)
func_1648_call = mod.get_global_var('func_1648')
func_1651_call = mutated_mod.get_global_var('func_1651')
const_2426 = relay.const([8,9,10,-1,6,6,7,9,7], dtype = "int16")#candidate|2426|(9,)|const|int16
var_2427 = relay.var("var_2427", dtype = "int16", shape = (81, 10))#candidate|2427|(81, 10)|var|int16
call_2425 = relay.TupleGetItem(func_1648_call(relay.reshape(const_2426.astype('int16'), [1, 9, 1]), relay.reshape(var_2427.astype('int16'), [9, 9, 10]), ), 4)
call_2428 = relay.TupleGetItem(func_1651_call(relay.reshape(const_2426.astype('int16'), [1, 9, 1]), relay.reshape(var_2427.astype('int16'), [9, 9, 10]), ), 4)
const_2433 = relay.const([[3,-4,-8],[-6,5,3],[-4,10,6],[1,-3,-9],[5,-7,6],[-8,9,-6],[3,3,-7],[5,5,-3],[7,2,6],[-2,3,-4],[1,8,8],[-6,-5,-8],[-5,-6,-10],[1,10,-9],[7,1,-1],[9,-9,-3],[-10,-5,-7],[-9,-9,5],[3,9,1],[4,-1,8],[-10,-5,3],[-5,6,9],[-6,-6,-5],[-6,-8,4],[5,1,-4],[10,-7,4],[-3,-4,10],[2,2,-1],[-2,-5,-4],[-2,-10,-6],[2,-10,-5],[1,-5,8],[-8,1,10],[-5,1,-3],[-1,-3,-9],[-7,9,2],[-4,-1,-7],[2,9,5],[7,2,-2],[-2,-1,5],[-6,-1,-10],[8,-5,10],[-9,-7,-8],[-8,4,3],[-4,-8,10],[4,-8,2],[9,9,-2],[-8,-5,-9],[-7,10,-6],[7,9,-6],[-1,-6,9],[-6,-1,-2],[5,-2,-5],[5,-10,5],[-7,-8,10],[-7,6,9],[-3,-4,1],[7,-6,-6],[2,2,6],[7,-10,10],[-1,-2,-2],[4,5,2],[-4,1,8],[10,1,-1],[1,-10,5],[2,9,-4],[-4,-6,4],[4,7,-7],[-7,6,-1],[4,-6,-5],[-6,-8,-3],[-6,9,-6],[2,-3,9],[5,-9,3],[9,-3,2],[10,9,3],[-8,-6,2],[10,-6,-4],[-4,-9,9],[4,9,-7],[-9,9,2],[-7,2,7],[-9,-10,1],[8,-1,10],[-10,2,-4],[-10,-3,-1],[4,5,-5],[-10,1,-9],[-3,10,7],[8,4,7],[-6,-3,8],[5,-3,-8],[5,5,9],[10,3,8],[10,7,5],[-4,-3,-9],[2,-2,6],[-5,9,9],[-4,-2,9],[-6,7,4],[7,2,-6],[10,-6,-5],[4,3,10],[3,-9,10],[8,-6,7],[-8,10,2],[-2,-6,-5],[-9,10,4],[4,-5,-6],[-10,9,1],[9,-2,-7],[5,-7,8],[-1,-4,-8],[3,10,4],[1,10,3],[-9,9,9],[6,-7,-4]], dtype = "uint32")#candidate|2433|(117, 3)|const|uint32
bop_2434 = relay.bitwise_xor(call_2425.astype('uint16'), relay.reshape(const_2433.astype('uint16'), relay.shape_of(call_2425))) # shape=(117, 3)
bop_2437 = relay.bitwise_xor(call_2428.astype('uint16'), relay.reshape(const_2433.astype('uint16'), relay.shape_of(call_2428))) # shape=(117, 3)
uop_2438 = relay.sqrt(bop_2371.astype('float64')) # shape=(10, 6, 7)
var_2441 = relay.var("var_2441", dtype = "int16", shape = (81, 10))#candidate|2441|(81, 10)|var|int16
bop_2442 = relay.logical_or(var_2427.astype('bool'), relay.reshape(var_2441.astype('bool'), relay.shape_of(var_2427))) # shape=(81, 10)
output = relay.Tuple([bop_2413,const_2426,bop_2434,uop_2438,bop_2442,])
output2 = relay.Tuple([bop_2416,const_2426,bop_2437,uop_2438,bop_2442,])
func_2448 = relay.Function([var_2369,var_2427,var_2441,], output)
mod['func_2448'] = func_2448
mod = relay.transform.InferType()(mod)
var_2449 = relay.var("var_2449", dtype = "uint16", shape = (10, 6, 7))#candidate|2449|(10, 6, 7)|var|uint16
var_2450 = relay.var("var_2450", dtype = "int16", shape = (81, 10))#candidate|2450|(81, 10)|var|int16
var_2451 = relay.var("var_2451", dtype = "int16", shape = (81, 10))#candidate|2451|(81, 10)|var|int16
output = func_2448(var_2449,var_2450,var_2451,)
func_2452 = relay.Function([var_2449,var_2450,var_2451,], output)
mutated_mod['func_2452'] = func_2452
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2751 = relay.const([[[-5,-10,-6,6,9,-4],[4,5,-3,1,-10,-10],[-6,2,5,-2,8,1],[-6,-8,8,3,2,-3],[-4,4,-9,1,-5,-1],[-8,3,5,-2,10,6],[-1,-3,-7,-9,1,7],[2,-7,-2,9,1,7],[-5,-7,-8,2,3,4],[4,-3,1,-6,9,-9],[-2,-4,-10,9,10,10],[-10,-7,10,3,7,8],[5,10,-7,-8,7,2],[-2,3,-6,8,-7,-6]],[[-6,-10,4,-10,4,-6],[9,10,5,3,2,7],[-1,3,-10,5,-10,9],[-3,-5,-9,5,-5,3],[-6,5,-6,-3,7,-5],[7,-5,2,-10,-4,-1],[-6,-2,1,8,6,5],[-6,-1,6,-4,-5,-9],[4,4,-6,3,-1,-4],[-4,2,-8,4,-5,10],[10,-4,2,5,-5,-4],[-4,-7,-5,1,-3,-1],[-10,-4,-9,-8,-8,-5],[-8,-4,9,-5,8,10]],[[-3,5,4,7,-9,10],[-5,7,1,-2,2,3],[8,4,10,-1,5,-8],[-10,-4,6,-6,-2,-4],[5,-3,6,8,-4,1],[-8,-8,10,3,-1,-10],[-1,-7,1,8,-9,-5],[-9,-10,7,6,6,8],[9,6,6,-8,4,2],[9,5,2,-5,-5,3],[-8,7,4,2,5,-5],[5,2,9,7,5,-5],[4,-8,-7,-10,2,1],[-1,1,-10,-10,10,-6]],[[-5,8,-7,-7,-5,9],[-5,-8,-4,-3,3,-4],[-10,10,6,10,1,3],[3,10,-4,1,-9,6],[-8,-10,-1,-4,1,-3],[-1,10,3,1,-1,3],[3,-7,-10,6,2,-1],[-4,-5,10,-2,3,3],[3,-9,7,2,-3,-2],[1,-5,8,7,-2,5],[-10,-2,-8,8,-1,10],[8,-9,2,-8,-1,-6],[-8,1,5,1,-2,10],[-10,-3,-3,10,-4,4]],[[4,9,-4,4,-9,-1],[10,2,7,-2,-8,9],[-6,5,-1,6,-3,-1],[-1,9,10,4,6,-4],[6,1,10,7,10,-8],[1,4,-10,-10,-2,2],[-3,-3,-2,1,2,-4],[-3,-10,1,3,3,-7],[-4,5,8,-7,-4,9],[7,4,3,2,6,-8],[-10,-2,-10,-6,-8,2],[8,6,-10,-8,6,-8],[9,-2,4,6,10,-6],[7,-7,-5,-10,8,5]],[[-2,7,-6,-4,7,-1],[-5,-4,5,9,4,-6],[7,-1,1,-5,10,8],[8,-10,9,3,-8,-2],[7,-6,7,9,7,1],[10,10,7,-6,1,10],[-9,3,10,-4,-7,7],[2,2,-7,-7,8,-7],[-5,-1,-2,6,2,1],[-7,8,-3,9,-10,-5],[3,-2,-7,-5,-5,-9],[-7,-6,-4,-10,2,-6],[2,2,-8,7,-9,2],[9,10,-6,-10,-4,2]],[[3,-1,-2,10,4,-4],[-9,4,1,3,5,-5],[-2,4,1,-6,-7,-1],[-5,3,-5,2,7,1],[1,-1,5,7,-2,3],[-4,10,-7,-10,-2,-2],[9,10,-9,7,2,6],[5,7,2,-9,-3,8],[9,-2,3,9,-7,2],[-9,6,7,3,3,7],[1,2,6,4,1,10],[2,-8,8,7,-8,-1],[6,7,3,7,-2,8],[10,-7,7,-7,-5,-8]],[[-4,2,-9,-9,6,-4],[-1,-3,-9,-3,2,-10],[-7,8,3,-7,-4,-10],[-4,7,4,9,2,8],[-2,10,3,4,8,-4],[-9,-7,1,-5,-6,-5],[4,8,5,-5,9,2],[5,3,-8,-2,7,-2],[-7,-5,9,-5,-1,9],[9,4,9,-3,10,10],[5,6,3,2,7,5],[5,-9,3,4,-3,-3],[4,1,-1,3,2,8],[9,7,7,-2,-2,-1]]], dtype = "int8")#candidate|2751|(8, 14, 6)|const|int8
var_2752 = relay.var("var_2752", dtype = "int8", shape = (8, 14, 6))#candidate|2752|(8, 14, 6)|var|int8
bop_2753 = relay.logical_xor(const_2751.astype('int8'), relay.reshape(var_2752.astype('int8'), relay.shape_of(const_2751))) # shape=(8, 14, 6)
output = relay.Tuple([bop_2753,])
output2 = relay.Tuple([bop_2753,])
func_2766 = relay.Function([var_2752,], output)
mod['func_2766'] = func_2766
mod = relay.transform.InferType()(mod)
var_2767 = relay.var("var_2767", dtype = "int8", shape = (8, 14, 6))#candidate|2767|(8, 14, 6)|var|int8
output = func_2766(var_2767)
func_2768 = relay.Function([var_2767], output)
mutated_mod['func_2768'] = func_2768
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3814 = relay.var("var_3814", dtype = "float32", shape = (3, 7, 1))#candidate|3814|(3, 7, 1)|var|float32
uop_3815 = relay.log(var_3814.astype('float32')) # shape=(3, 7, 1)
uop_3840 = relay.sinh(uop_3815.astype('float64')) # shape=(3, 7, 1)
output = uop_3840
output2 = uop_3840
func_3842 = relay.Function([var_3814,], output)
mod['func_3842'] = func_3842
mod = relay.transform.InferType()(mod)
mutated_mod['func_3842'] = func_3842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3843 = relay.var("var_3843", dtype = "float32", shape = (3, 7, 1))#candidate|3843|(3, 7, 1)|var|float32
func_3842_call = mutated_mod.get_global_var('func_3842')
call_3844 = func_3842_call(var_3843)
output = call_3844
func_3845 = relay.Function([var_3843], output)
mutated_mod['func_3845'] = func_3845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3906 = relay.var("var_3906", dtype = "float32", shape = (2, 10, 15))#candidate|3906|(2, 10, 15)|var|float32
uop_3907 = relay.cosh(var_3906.astype('float32')) # shape=(2, 10, 15)
uop_3909 = relay.sqrt(var_3906.astype('float64')) # shape=(2, 10, 15)
func_1648_call = mod.get_global_var('func_1648')
func_1651_call = mutated_mod.get_global_var('func_1651')
var_3915 = relay.var("var_3915", dtype = "int16", shape = (9,))#candidate|3915|(9,)|var|int16
var_3916 = relay.var("var_3916", dtype = "int16", shape = (810,))#candidate|3916|(810,)|var|int16
call_3914 = relay.TupleGetItem(func_1648_call(relay.reshape(var_3915.astype('int16'), [1, 9, 1]), relay.reshape(var_3916.astype('int16'), [9, 9, 10]), ), 0)
call_3917 = relay.TupleGetItem(func_1651_call(relay.reshape(var_3915.astype('int16'), [1, 9, 1]), relay.reshape(var_3916.astype('int16'), [9, 9, 10]), ), 0)
output = relay.Tuple([uop_3907,uop_3909,call_3914,var_3915,var_3916,])
output2 = relay.Tuple([uop_3907,uop_3909,call_3917,var_3915,var_3916,])
func_3922 = relay.Function([var_3906,var_3915,var_3916,], output)
mod['func_3922'] = func_3922
mod = relay.transform.InferType()(mod)
mutated_mod['func_3922'] = func_3922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3922_call = mutated_mod.get_global_var('func_3922')
var_3924 = relay.var("var_3924", dtype = "float32", shape = (2, 10, 15))#candidate|3924|(2, 10, 15)|var|float32
var_3925 = relay.var("var_3925", dtype = "int16", shape = (9,))#candidate|3925|(9,)|var|int16
var_3926 = relay.var("var_3926", dtype = "int16", shape = (810,))#candidate|3926|(810,)|var|int16
call_3923 = func_3922_call(var_3924,var_3925,var_3926,)
output = call_3923
func_3927 = relay.Function([var_3924,var_3925,var_3926,], output)
mutated_mod['func_3927'] = func_3927
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4406 = relay.var("var_4406", dtype = "float64", shape = (4, 9, 11))#candidate|4406|(4, 9, 11)|var|float64
uop_4407 = relay.log2(var_4406.astype('float64')) # shape=(4, 9, 11)
bop_4414 = relay.greater(var_4406.astype('bool'), relay.reshape(uop_4407.astype('bool'), relay.shape_of(var_4406))) # shape=(4, 9, 11)
func_2766_call = mod.get_global_var('func_2766')
func_2768_call = mutated_mod.get_global_var('func_2768')
var_4424 = relay.var("var_4424", dtype = "int8", shape = (672,))#candidate|4424|(672,)|var|int8
call_4423 = relay.TupleGetItem(func_2766_call(relay.reshape(var_4424.astype('int8'), [8, 14, 6])), 0)
call_4425 = relay.TupleGetItem(func_2768_call(relay.reshape(var_4424.astype('int8'), [8, 14, 6])), 0)
func_2252_call = mod.get_global_var('func_2252')
func_2255_call = mutated_mod.get_global_var('func_2255')
var_4428 = relay.var("var_4428", dtype = "int16", shape = (1092,))#candidate|4428|(1092,)|var|int16
call_4427 = relay.TupleGetItem(func_2252_call(relay.reshape(var_4428.astype('int16'), [7, 12, 13])), 0)
call_4429 = relay.TupleGetItem(func_2255_call(relay.reshape(var_4428.astype('int16'), [7, 12, 13])), 0)
func_92_call = mod.get_global_var('func_92')
func_96_call = mutated_mod.get_global_var('func_96')
var_4433 = relay.var("var_4433", dtype = "bool", shape = (117,))#candidate|4433|(117,)|var|bool
var_4434 = relay.var("var_4434", dtype = "bool", shape = (3, 117))#candidate|4434|(3, 117)|var|bool
call_4432 = func_92_call(relay.reshape(var_4433.astype('bool'), [1, 9, 13]), relay.reshape(var_4434.astype('bool'), [3, 9, 13]), )
call_4435 = func_92_call(relay.reshape(var_4433.astype('bool'), [1, 9, 13]), relay.reshape(var_4434.astype('bool'), [3, 9, 13]), )
bop_4455 = relay.right_shift(bop_4414.astype('uint8'), relay.reshape(uop_4407.astype('uint8'), relay.shape_of(bop_4414))) # shape=(4, 9, 11)
output = relay.Tuple([call_4423,var_4424,call_4427,var_4428,call_4432,var_4433,var_4434,bop_4455,])
output2 = relay.Tuple([call_4425,var_4424,call_4429,var_4428,call_4435,var_4433,var_4434,bop_4455,])
func_4483 = relay.Function([var_4406,var_4424,var_4428,var_4433,var_4434,], output)
mod['func_4483'] = func_4483
mod = relay.transform.InferType()(mod)
mutated_mod['func_4483'] = func_4483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4483_call = mutated_mod.get_global_var('func_4483')
var_4485 = relay.var("var_4485", dtype = "float64", shape = (4, 9, 11))#candidate|4485|(4, 9, 11)|var|float64
var_4486 = relay.var("var_4486", dtype = "int8", shape = (672,))#candidate|4486|(672,)|var|int8
var_4487 = relay.var("var_4487", dtype = "int16", shape = (1092,))#candidate|4487|(1092,)|var|int16
var_4488 = relay.var("var_4488", dtype = "bool", shape = (117,))#candidate|4488|(117,)|var|bool
var_4489 = relay.var("var_4489", dtype = "bool", shape = (3, 117))#candidate|4489|(3, 117)|var|bool
call_4484 = func_4483_call(var_4485,var_4486,var_4487,var_4488,var_4489,)
output = call_4484
func_4490 = relay.Function([var_4485,var_4486,var_4487,var_4488,var_4489,], output)
mutated_mod['func_4490'] = func_4490
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4728 = relay.const([[[3,5,-8,-7,-6,-1,10,-3,5,3,5,-10,8,1],[10,-3,9,6,-2,10,-10,2,-1,2,-8,-1,-10,10],[-10,3,10,4,-1,-9,-3,-2,1,6,6,1,2,9],[-3,-1,9,5,-7,3,9,-4,2,-7,7,-9,1,7],[2,-9,-4,-9,4,4,-5,3,10,8,1,-9,1,9],[7,-7,-1,-5,-7,-8,10,-4,3,-1,-3,5,8,-10],[1,1,7,-9,6,-5,-10,-4,7,9,3,2,-1,-10],[10,-8,-1,-1,10,-9,5,9,-7,8,-1,5,-7,10],[4,8,9,-7,6,-1,7,1,5,7,-3,7,4,-7],[-1,-10,6,10,-4,8,-4,-6,-10,-5,9,7,9,-7],[8,-3,-3,-3,-10,6,2,4,2,9,9,7,5,1],[9,-6,-3,5,1,7,-3,-5,-9,-2,-1,5,2,1],[5,1,1,1,6,2,-6,-9,5,5,-5,7,8,7],[5,7,-1,5,8,5,-2,9,9,-8,-2,-8,-1,-2]],[[-6,-7,8,-2,4,10,-3,-6,-6,-4,3,-7,8,1],[-10,-6,-3,-7,9,-3,-5,7,-1,-5,-7,2,-3,-4],[-4,-8,-7,1,9,4,-9,3,1,-4,-2,-7,-7,9],[-8,1,-8,-8,-5,-7,-9,2,-10,-4,4,1,-4,-5],[9,-3,6,9,-4,9,8,-4,8,6,1,-1,5,-3],[2,4,-1,-8,-10,1,6,3,-5,-2,3,5,8,-10],[-7,6,10,-3,-8,10,-2,1,-8,-3,-3,9,4,9],[7,-9,-2,-8,-6,5,-5,-1,5,-4,-10,7,-3,9],[-8,3,8,4,8,4,4,-7,4,6,2,2,7,3],[-6,1,-1,-1,-6,-8,-8,6,2,1,-1,-7,8,-3],[1,-7,8,-10,2,-7,8,-1,-10,10,-2,1,-9,6],[-8,-2,-7,-3,-9,-4,-8,-7,10,5,-7,-5,-6,-2],[-3,-2,-7,9,5,9,-8,-3,5,3,10,-7,-2,5],[9,5,-4,-4,-3,-3,6,2,-4,-10,-7,-6,2,-3]],[[8,-6,-3,-10,10,-8,-8,3,4,9,8,-8,-4,-1],[10,5,-10,-6,2,10,1,-8,10,4,-5,-1,-4,-10],[-5,-7,5,-4,10,7,-7,7,6,8,5,9,7,-4],[1,1,5,5,-7,4,-1,1,-2,8,2,-4,-10,-8],[7,9,-4,-5,6,8,1,3,4,1,-2,4,7,-2],[4,-5,10,8,4,-4,5,6,-5,-7,-2,-5,-9,2],[-8,2,-4,3,-1,-1,-4,5,-8,-3,-1,4,-1,10],[9,-6,6,-10,-3,6,2,8,4,-7,-8,5,-3,3],[-7,3,-6,-4,-5,3,-7,-3,-8,-7,8,-5,4,-4],[-9,10,1,-4,2,-9,2,8,-3,-8,-4,3,9,-8],[8,-2,8,-2,7,6,-2,10,-9,3,1,-2,8,-9],[-5,-2,9,-7,5,-8,5,-2,10,-3,2,10,-9,10],[-10,-4,6,-8,-7,-1,-6,5,-4,-10,-10,-3,1,6],[6,7,5,-10,5,-3,3,-7,5,-10,-8,1,-5,2]],[[8,8,-4,-9,-6,7,9,6,-5,2,-4,7,5,1],[2,10,1,-3,4,-1,5,4,9,-7,-4,2,-1,9],[7,-8,7,-1,5,-3,-10,-9,-4,8,-2,6,3,-3],[7,2,6,-4,-9,1,-9,-3,1,-3,-5,-10,7,5],[6,-6,-2,6,2,10,5,3,6,-2,-8,-3,7,1],[9,-5,6,7,-2,5,-3,5,-6,1,-6,8,9,8],[3,1,7,-7,7,-8,-7,5,8,7,8,-6,2,-8],[-5,6,-8,-2,-2,8,2,-2,-1,-6,-7,-2,10,1],[4,-2,8,7,-4,-8,7,-8,2,-8,7,3,-7,-10],[5,-9,-1,-5,9,-4,2,-9,-10,10,7,6,-1,9],[-3,7,10,-6,6,-1,-7,8,-9,-10,6,-10,9,-8],[-2,-10,-5,5,-2,-10,4,1,-8,-1,-6,5,-5,6],[10,6,-2,-9,3,4,-6,-2,-8,10,-2,5,3,9],[-7,-2,10,1,4,8,-7,-1,-9,-1,-7,-4,-1,-4]],[[-3,10,9,-6,-8,8,-10,-9,9,8,-4,6,10,-8],[-1,3,9,-1,-5,-7,8,7,4,-5,-8,2,1,-5],[7,10,-8,-1,8,7,-3,-10,-4,8,-5,-2,3,-6],[3,5,-5,-10,-10,1,-5,3,5,-8,2,-6,7,1],[5,6,9,7,-6,8,-8,-4,-9,10,2,-2,1,1],[-9,10,10,-9,-7,4,5,-9,-4,7,-4,7,4,2],[9,-5,-8,2,3,8,10,-5,-7,-2,-1,-2,6,3],[-1,5,-10,10,-7,5,-4,10,-6,-10,1,-2,1,-7],[7,8,5,-2,4,-3,4,1,-3,-1,7,-2,5,3],[1,-6,-10,-8,8,7,2,2,-8,-4,-5,-9,-8,3],[8,3,5,-8,4,9,-8,3,-8,7,-10,-6,6,9],[10,-9,-9,-8,4,1,-3,-9,9,-2,8,3,-10,5],[6,-2,-10,-5,-5,-5,-8,-8,-7,6,10,-2,-9,10],[-4,5,-1,-8,-10,-9,-5,-6,3,8,1,-5,-1,-3]],[[2,10,-10,-7,4,1,-10,8,7,2,6,-9,3,-1],[-2,5,-2,9,-1,-3,6,6,-6,-5,8,4,-7,-4],[8,-5,2,4,4,-5,4,10,4,5,-10,-5,-8,-4],[-2,7,4,2,-1,-1,10,2,4,3,7,9,8,8],[3,-3,10,6,-2,-1,3,-2,8,8,-5,1,8,-9],[-2,-4,-9,-1,-7,-3,3,3,-6,2,8,-7,2,-7],[5,-9,-3,3,2,-2,-9,9,9,-2,9,-10,-4,2],[-2,-6,-4,-8,-8,2,-5,8,-7,7,-10,-10,3,-8],[6,4,-10,7,-5,-5,-5,2,9,-3,-8,-2,-1,1],[-4,-2,-10,8,-5,6,-1,-5,-7,-6,9,-3,-2,-9],[-9,9,-9,4,5,3,-9,4,-9,-8,-5,3,6,5],[8,2,-4,1,-2,-7,6,-9,-9,7,-1,6,-7,-2],[-2,-10,-10,-10,-3,-2,-7,-2,-6,-10,-5,5,-9,-9],[-8,1,9,4,6,-6,6,-6,4,6,10,-7,2,-8]],[[-10,9,-10,-2,6,8,10,2,1,-9,-5,-7,2,9],[-3,-4,6,3,-8,6,-10,5,-10,6,-7,8,-1,-9],[10,-6,7,-8,-7,-10,7,-8,-2,-7,-2,-6,9,2],[-1,-4,9,4,3,-8,4,-5,3,7,6,8,10,-8],[-9,10,9,1,-5,-3,-6,1,8,2,-9,7,-7,-5],[8,-6,2,-7,10,-9,2,5,3,-9,-2,-2,-1,6],[1,-5,-5,-8,-6,7,2,3,10,-1,6,3,4,-8],[-2,5,6,-4,10,7,4,2,-10,9,4,2,-3,-7],[10,-2,-10,6,8,8,-2,3,-8,4,-3,7,-5,9],[-6,3,-2,8,3,-1,-6,8,-3,-5,-10,-9,4,-10],[9,-4,-6,8,-5,1,2,10,2,-7,-1,-5,3,-1],[4,-5,9,-5,-10,4,-3,3,8,3,-3,4,-5,4],[7,-7,9,3,3,4,4,9,2,1,9,-9,-6,-6],[-3,9,8,-10,-9,-4,2,-8,-5,-4,-2,6,-10,-2]],[[9,7,8,2,3,-2,7,-7,-3,7,-3,-4,7,6],[4,-4,-8,5,-1,2,8,-8,-10,-4,-1,1,-2,-9],[-5,-6,5,-2,-3,8,1,-9,6,4,4,10,-8,9],[8,-9,-5,1,-5,10,9,3,8,1,-1,1,-4,9],[4,2,-10,-4,-5,4,10,-1,3,-1,8,-6,-8,2],[-8,3,-3,-1,-5,-5,-9,-2,4,-8,-7,-10,10,4],[3,-9,9,10,-9,2,-7,4,-7,-3,-10,-9,-9,-4],[5,10,-1,8,2,-9,-10,-5,-9,10,-7,-6,5,6],[4,-6,7,6,4,-8,-1,-7,10,-7,3,3,-4,9],[-6,-5,6,-9,7,8,1,-10,-5,-5,-1,1,2,3],[5,-5,-6,1,-4,-2,-10,-6,8,-5,-5,7,-5,-9],[6,-4,2,2,-4,2,7,-10,-6,-6,-2,-1,-3,2],[-9,-8,-1,-8,4,4,4,5,-10,8,1,4,7,2],[-4,-10,5,9,-2,10,-8,-5,8,6,7,8,8,-3]],[[7,-4,10,-5,-2,1,-3,2,-5,8,7,5,-5,-1],[-5,7,2,3,7,-6,-6,5,-10,-3,-3,2,2,-3],[-8,-4,-3,-5,4,6,7,2,-1,-3,5,-9,6,10],[7,-8,2,-10,-3,-9,-4,-10,-8,-4,-1,-1,-2,7],[-10,-7,10,5,-7,6,-1,-7,-9,6,9,-6,7,-9],[8,7,4,-6,-1,-8,-6,-8,-9,-2,2,-6,7,5],[9,-3,1,6,5,-2,5,-5,-2,9,-8,10,10,4],[7,-1,3,-7,5,-10,9,7,1,6,6,5,-10,-5],[2,-10,-7,7,-7,6,10,-2,-9,-3,-2,-2,-8,-2],[5,-9,-7,5,-1,5,9,-8,9,-9,1,-7,-3,-3],[9,9,3,10,-10,5,9,7,-3,-8,9,1,1,4],[8,-5,3,10,6,7,4,7,-3,-3,1,9,1,1],[5,-6,-3,1,-6,1,8,10,-1,5,-3,-8,-2,-6],[6,-2,3,5,10,-1,4,10,1,6,-9,3,1,-6]],[[-10,-5,10,-7,-7,6,-8,-6,8,-6,10,-10,-7,10],[-8,-3,3,-5,9,-5,-4,-6,9,-7,-7,-7,-9,5],[1,5,6,-8,-8,-1,6,-3,-6,-5,10,3,8,-6],[6,-2,1,-8,7,-5,10,-2,-1,-9,6,3,5,-5],[5,-10,5,1,1,-2,-7,5,-2,-4,-4,9,6,-5],[-9,5,-2,-6,-9,2,6,10,10,1,-2,4,-9,-3],[-6,-7,9,-8,9,5,-8,-9,10,8,-7,-3,-5,5],[1,-8,-8,-3,-6,-5,4,4,8,8,5,9,4,-10],[-8,-4,3,-7,6,-8,-10,9,5,-8,7,3,2,3],[-2,9,-8,-1,3,-3,-6,3,-4,-10,6,-1,3,-2],[-6,3,7,-9,2,-5,-6,6,-7,-7,-1,-9,-4,7],[-6,4,-5,-9,-8,-7,-10,7,-1,9,-2,-1,5,8],[-2,-9,-6,-10,10,5,-10,2,5,8,-4,5,3,-9],[-6,10,-3,-6,-3,-2,-8,5,-1,7,-6,-3,-2,-6]]], dtype = "int64")#candidate|4728|(10, 14, 14)|const|int64
var_4729 = relay.var("var_4729", dtype = "int64", shape = (10, 14, 14))#candidate|4729|(10, 14, 14)|var|int64
bop_4730 = relay.left_shift(const_4728.astype('int64'), relay.reshape(var_4729.astype('int64'), relay.shape_of(const_4728))) # shape=(10, 14, 14)
output = bop_4730
output2 = bop_4730
func_4734 = relay.Function([var_4729,], output)
mod['func_4734'] = func_4734
mod = relay.transform.InferType()(mod)
mutated_mod['func_4734'] = func_4734
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4735 = relay.var("var_4735", dtype = "int64", shape = (10, 14, 14))#candidate|4735|(10, 14, 14)|var|int64
func_4734_call = mutated_mod.get_global_var('func_4734')
call_4736 = func_4734_call(var_4735)
output = call_4736
func_4737 = relay.Function([var_4735], output)
mutated_mod['func_4737'] = func_4737
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5211 = relay.const(-8, dtype = "int8")#candidate|5211|()|const|int8
var_5212 = relay.var("var_5212", dtype = "int8", shape = (8, 14, 11))#candidate|5212|(8, 14, 11)|var|int8
bop_5213 = relay.maximum(const_5211.astype('int8'), var_5212.astype('int8')) # shape=(8, 14, 11)
func_3842_call = mod.get_global_var('func_3842')
func_3845_call = mutated_mod.get_global_var('func_3845')
var_5217 = relay.var("var_5217", dtype = "float32", shape = (21, 1))#candidate|5217|(21, 1)|var|float32
call_5216 = func_3842_call(relay.reshape(var_5217.astype('float32'), [3, 7, 1]))
call_5218 = func_3842_call(relay.reshape(var_5217.astype('float32'), [3, 7, 1]))
func_4483_call = mod.get_global_var('func_4483')
func_4490_call = mutated_mod.get_global_var('func_4490')
var_5220 = relay.var("var_5220", dtype = "float64", shape = (396,))#candidate|5220|(396,)|var|float64
var_5221 = relay.var("var_5221", dtype = "int8", shape = (672,))#candidate|5221|(672,)|var|int8
var_5222 = relay.var("var_5222", dtype = "int16", shape = (1092,))#candidate|5222|(1092,)|var|int16
const_5223 = relay.const([True,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True], dtype = "bool")#candidate|5223|(117,)|const|bool
const_5224 = relay.const([True,False,False,True,False,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,False,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,True,False], dtype = "bool")#candidate|5224|(351,)|const|bool
call_5219 = relay.TupleGetItem(func_4483_call(relay.reshape(var_5220.astype('float64'), [4, 9, 11]), relay.reshape(var_5221.astype('int8'), [672,]), relay.reshape(var_5222.astype('int16'), [1092,]), relay.reshape(const_5223.astype('bool'), [117,]), relay.reshape(const_5224.astype('bool'), [3, 117]), ), 0)
call_5225 = relay.TupleGetItem(func_4490_call(relay.reshape(var_5220.astype('float64'), [4, 9, 11]), relay.reshape(var_5221.astype('int8'), [672,]), relay.reshape(var_5222.astype('int16'), [1092,]), relay.reshape(const_5223.astype('bool'), [117,]), relay.reshape(const_5224.astype('bool'), [3, 117]), ), 0)
func_2448_call = mod.get_global_var('func_2448')
func_2452_call = mutated_mod.get_global_var('func_2452')
const_5232 = relay.const([-2,2,-6,6,1,-3,7,7,7,7,3,-10,6,-8,-7,-2,-7,-8,-3,2,-4,-10,2,10,-1,3,-8,8,6,-9,-10,-1,7,-1,-8,6,-8,4,-6,-9,1,10,-5,-5,6,-6,-5,3,-10,2,-7,-9,5,-5,6,-7,-8,-6,7,5,-3,8,-10,10,9,-8,-10,-3,8,7,4,9,-1,4,-6,9,-2,7,-2,-1,-9,-7,-6,6,-8,6,-7,3,-1,3,-8,7,1,-3,1,4,-5,-10,1,2,9,3,-6,3,5,-5,2,4,-3,6,1,3,3,4,9,5,-6,5,9,9,6,7,-3,-1,8,-2,9,2,9,8,-3,-8,-5,3,1,-6,-6,-6,5,-9,5,1,-7,8,10,3,-10,4,-4,-9,-9,-3,-9,-7,-6,-9,-8,-9,-1,10,-4,5,-4,1,-6,-4,-5,-1,7,1,2,6,-8,4,3,-3,5,-3,6,8,2,8,-2,-2,-7,-4,-2,-9,-7,-10,-7,7,10,2,2,10,3,-1,-7,5,5,2,-10,-6,6,-7,-10,6,6,5,-9,2,-3,10,-8,-3,-2,10,6,1,3,-6,4,-2,1,8,4,-5,-7,-8,-9,5,6,3,3,-5,-4,9,4,-8,-3,-8,-8,-6,9,9,-5,-7,-2,-4,-6,1,-1,-8,6,-3,-4,-7,-5,9,-9,9,-3,-6,1,-9,-8,-7,-3,-3,10,-7,6,-7,9,2,-4,-1,-1,3,-6,9,3,10,-8,6,-8,2,-8,-4,7,-2,-8,8,-1,-1,3,10,3,-5,-2,1,-3,5,-4,-8,-4,-1,-5,-2,-2,-5,3,3,5,7,9,9,-10,5,3,4,6,-10,6,1,-6,-5,2,-3,7,6,9,-10,-2,-3,-10,2,4,-9,5,10,-6,8,-2,5,-2,-5,-8,10,-2,5,-1,10,-9,6,8,-5,1,-4,-6,-4,2,1,-6,10,-5,-10,1,2,8,6,-5,2,-4,-9,-7,-9,4,-1,-3,8,5,6,7,-6,7,-3,-10,-8,-5,-5,2,3,7,6,-2,-10,2,3,-6,-6,-8,7,8,-4,-4,5,-6,4,10,-3,-6,-1,9,-10,2,7,-7,-10], dtype = "uint16")#candidate|5232|(420,)|const|uint16
var_5233 = relay.var("var_5233", dtype = "int16", shape = (810,))#candidate|5233|(810,)|var|int16
call_5231 = relay.TupleGetItem(func_2448_call(relay.reshape(const_5232.astype('uint16'), [10, 6, 7]), relay.reshape(var_5233.astype('int16'), [81, 10]), relay.reshape(var_5233.astype('int16'), [81, 10]), ), 2)
call_5234 = relay.TupleGetItem(func_2452_call(relay.reshape(const_5232.astype('uint16'), [10, 6, 7]), relay.reshape(var_5233.astype('int16'), [81, 10]), relay.reshape(var_5233.astype('int16'), [81, 10]), ), 2)
output = relay.Tuple([bop_5213,call_5216,var_5217,call_5219,var_5220,var_5221,var_5222,const_5223,const_5224,call_5231,const_5232,var_5233,])
output2 = relay.Tuple([bop_5213,call_5218,var_5217,call_5225,var_5220,var_5221,var_5222,const_5223,const_5224,call_5234,const_5232,var_5233,])
func_5254 = relay.Function([var_5212,var_5217,var_5220,var_5221,var_5222,var_5233,], output)
mod['func_5254'] = func_5254
mod = relay.transform.InferType()(mod)
var_5255 = relay.var("var_5255", dtype = "int8", shape = (8, 14, 11))#candidate|5255|(8, 14, 11)|var|int8
var_5256 = relay.var("var_5256", dtype = "float32", shape = (21, 1))#candidate|5256|(21, 1)|var|float32
var_5257 = relay.var("var_5257", dtype = "float64", shape = (396,))#candidate|5257|(396,)|var|float64
var_5258 = relay.var("var_5258", dtype = "int8", shape = (672,))#candidate|5258|(672,)|var|int8
var_5259 = relay.var("var_5259", dtype = "int16", shape = (1092,))#candidate|5259|(1092,)|var|int16
var_5260 = relay.var("var_5260", dtype = "int16", shape = (810,))#candidate|5260|(810,)|var|int16
output = func_5254(var_5255,var_5256,var_5257,var_5258,var_5259,var_5260,)
func_5261 = relay.Function([var_5255,var_5256,var_5257,var_5258,var_5259,var_5260,], output)
mutated_mod['func_5261'] = func_5261
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5520 = relay.var("var_5520", dtype = "uint32", shape = (3, 3, 3))#candidate|5520|(3, 3, 3)|var|uint32
var_5521 = relay.var("var_5521", dtype = "uint32", shape = (3, 3, 3))#candidate|5521|(3, 3, 3)|var|uint32
bop_5522 = relay.equal(var_5520.astype('bool'), relay.reshape(var_5521.astype('bool'), relay.shape_of(var_5520))) # shape=(3, 3, 3)
bop_5526 = relay.greater_equal(bop_5522.astype('bool'), relay.reshape(var_5520.astype('bool'), relay.shape_of(bop_5522))) # shape=(3, 3, 3)
func_3922_call = mod.get_global_var('func_3922')
func_3927_call = mutated_mod.get_global_var('func_3927')
const_5555 = relay.const([[-2.230870],[-1.229686],[3.055766],[-5.863038],[-2.550014],[8.659088],[-1.896934],[4.047298],[-1.154568],[3.689083],[-6.061478],[-3.346971],[1.659977],[-1.218716],[0.218763],[-5.706163],[0.499230],[-8.210498],[-3.641351],[2.602289],[0.295369],[-1.077628],[8.509386],[-7.575806],[0.309539],[2.025610],[2.807991],[5.029110],[-4.986330],[-7.055893],[-1.598556],[2.608487],[-1.752737],[1.611996],[-7.413342],[9.712781],[6.209074],[7.642524],[5.093626],[9.441008],[-4.234897],[7.919830],[-0.434045],[-3.491218],[-4.801201],[-9.106600],[6.287225],[-8.110225],[0.472295],[-2.910008],[-4.207268],[1.222215],[7.289945],[-7.456614],[-5.202736],[7.022320],[-9.912322],[-6.381227],[9.145514],[0.014931],[-4.554455],[3.764227],[5.601366],[9.785943],[7.181530],[3.546681],[9.852422],[3.318146],[5.246355],[7.184851],[4.900451],[-6.562434],[6.881774],[-4.480796],[1.486572],[-9.896602],[5.786314],[6.535021],[5.295393],[-7.991649],[-3.717702],[-2.620606],[-2.082111],[2.774799],[7.772042],[-5.014779],[1.414996],[1.499595],[1.968106],[-5.563421],[6.837351],[-5.741486],[-8.336506],[-7.178618],[-1.427447],[-3.508296],[-5.124934],[-8.537315],[-0.712134],[-6.547181],[7.572645],[0.930846],[-2.787853],[4.460613],[-0.311670],[-1.135607],[0.470408],[4.023129],[5.548924],[3.556019],[-5.818924],[-7.581500],[8.839182],[6.712335],[-3.924171],[7.099366],[-8.299923],[5.809323],[3.893547],[2.191964],[-8.228558],[-8.516695],[-6.483869],[0.663471],[9.137730],[-6.581952],[-8.154325],[-4.034925],[3.947952],[5.834282],[4.199887],[9.910497],[0.168945],[-4.075733],[-0.136120],[5.543224],[-1.658394],[-8.676196],[0.074311],[-7.233206],[-0.030153],[-9.139814],[0.078621],[-3.621846],[-2.556230],[3.001320],[8.889739],[-0.469601],[3.396936],[7.138867],[-0.082453],[-9.188656],[-9.093295],[1.325445],[-2.081029],[-5.700348],[-9.638730],[3.978645],[1.038837],[0.843684],[7.315394],[-2.452824],[7.613538],[-9.478887],[5.010429],[-0.516981],[-9.215597],[-0.853948],[1.221785],[-9.950072],[8.865346],[0.275354],[8.623476],[-6.112210],[-0.533175],[-9.003711],[-5.846033],[-0.671098],[2.488271],[-4.753047],[8.444240],[-2.585381],[0.386819],[-2.141899],[4.036764],[-4.262908],[-2.248434],[-0.757806],[-3.725898],[-2.984561],[-5.600921],[-2.226220],[4.996653],[4.618321],[3.695000],[-0.222111],[-1.956173],[-7.537972],[7.986566],[0.158265],[7.135025],[-1.831478],[1.816168],[9.059670],[8.750177],[-6.309717],[6.386765],[-0.756884],[-7.718561],[8.419390],[2.083431],[-3.161054],[6.004555],[5.519498],[8.609936],[2.713985],[-0.182103],[-6.440194],[-5.328049],[7.126391],[-7.116357],[-6.577104],[-6.993610],[-7.965456],[-8.761295],[8.332313],[5.657708],[3.491265],[-9.385810],[-4.495638],[9.320548],[4.173873],[7.399317],[7.848414],[0.828193],[8.599490],[5.626100],[3.749035],[-5.594134],[-4.989652],[-8.374025],[-6.608585],[1.206951],[-2.070094],[-5.147780],[3.409457],[-4.500911],[9.806999],[2.507134],[4.071674],[1.659567],[-6.337718],[-3.898597],[-2.613608],[0.361080],[1.202336],[-0.832280],[-0.708526],[-7.346821],[-8.694557],[4.853471],[-9.815921],[-6.151971],[3.050983],[1.969348],[-3.616505],[4.839688],[3.202790],[1.777427],[-6.414835],[-2.455899],[-4.328739],[0.887007],[-7.792183],[9.203363],[-4.565443],[-8.534188],[-3.620554],[-3.605856],[-2.165338],[-9.846228],[-9.884613],[5.446226],[-0.519304],[1.637185],[-3.120518],[-9.886781],[1.501739],[8.211515],[4.007234],[-7.468688],[3.070673],[1.344015],[0.530877],[6.666042],[8.046496],[-2.022180],[9.260341],[0.962356],[-9.375450]], dtype = "float32")#candidate|5555|(300, 1)|const|float32
var_5556 = relay.var("var_5556", dtype = "int16", shape = (1, 9))#candidate|5556|(1, 9)|var|int16
var_5557 = relay.var("var_5557", dtype = "int16", shape = (810,))#candidate|5557|(810,)|var|int16
call_5554 = relay.TupleGetItem(func_3922_call(relay.reshape(const_5555.astype('float32'), [2, 10, 15]), relay.reshape(var_5556.astype('int16'), [9,]), relay.reshape(var_5557.astype('int16'), [810,]), ), 2)
call_5558 = relay.TupleGetItem(func_3927_call(relay.reshape(const_5555.astype('float32'), [2, 10, 15]), relay.reshape(var_5556.astype('int16'), [9,]), relay.reshape(var_5557.astype('int16'), [810,]), ), 2)
func_3842_call = mod.get_global_var('func_3842')
func_3845_call = mutated_mod.get_global_var('func_3845')
var_5568 = relay.var("var_5568", dtype = "float32", shape = (7, 3))#candidate|5568|(7, 3)|var|float32
call_5567 = func_3842_call(relay.reshape(var_5568.astype('float32'), [3, 7, 1]))
call_5569 = func_3842_call(relay.reshape(var_5568.astype('float32'), [3, 7, 1]))
func_2252_call = mod.get_global_var('func_2252')
func_2255_call = mutated_mod.get_global_var('func_2255')
var_5585 = relay.var("var_5585", dtype = "int16", shape = (182, 6))#candidate|5585|(182, 6)|var|int16
call_5584 = relay.TupleGetItem(func_2252_call(relay.reshape(var_5585.astype('int16'), [7, 12, 13])), 0)
call_5586 = relay.TupleGetItem(func_2255_call(relay.reshape(var_5585.astype('int16'), [7, 12, 13])), 0)
func_2448_call = mod.get_global_var('func_2448')
func_2452_call = mutated_mod.get_global_var('func_2452')
var_5589 = relay.var("var_5589", dtype = "uint16", shape = (420,))#candidate|5589|(420,)|var|uint16
call_5588 = relay.TupleGetItem(func_2448_call(relay.reshape(var_5589.astype('uint16'), [10, 6, 7]), relay.reshape(call_5554.astype('int16'), [81, 10]), relay.reshape(call_5554.astype('int16'), [81, 10]), ), 4)
call_5590 = relay.TupleGetItem(func_2452_call(relay.reshape(var_5589.astype('uint16'), [10, 6, 7]), relay.reshape(call_5554.astype('int16'), [81, 10]), relay.reshape(call_5554.astype('int16'), [81, 10]), ), 4)
output = relay.Tuple([bop_5526,call_5554,const_5555,var_5556,var_5557,call_5567,var_5568,call_5584,var_5585,call_5588,var_5589,])
output2 = relay.Tuple([bop_5526,call_5558,const_5555,var_5556,var_5557,call_5569,var_5568,call_5586,var_5585,call_5590,var_5589,])
func_5594 = relay.Function([var_5520,var_5521,var_5556,var_5557,var_5568,var_5585,var_5589,], output)
mod['func_5594'] = func_5594
mod = relay.transform.InferType()(mod)
var_5595 = relay.var("var_5595", dtype = "uint32", shape = (3, 3, 3))#candidate|5595|(3, 3, 3)|var|uint32
var_5596 = relay.var("var_5596", dtype = "uint32", shape = (3, 3, 3))#candidate|5596|(3, 3, 3)|var|uint32
var_5597 = relay.var("var_5597", dtype = "int16", shape = (1, 9))#candidate|5597|(1, 9)|var|int16
var_5598 = relay.var("var_5598", dtype = "int16", shape = (810,))#candidate|5598|(810,)|var|int16
var_5599 = relay.var("var_5599", dtype = "float32", shape = (7, 3))#candidate|5599|(7, 3)|var|float32
var_5600 = relay.var("var_5600", dtype = "int16", shape = (182, 6))#candidate|5600|(182, 6)|var|int16
var_5601 = relay.var("var_5601", dtype = "uint16", shape = (420,))#candidate|5601|(420,)|var|uint16
output = func_5594(var_5595,var_5596,var_5597,var_5598,var_5599,var_5600,var_5601,)
func_5602 = relay.Function([var_5595,var_5596,var_5597,var_5598,var_5599,var_5600,var_5601,], output)
mutated_mod['func_5602'] = func_5602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5858 = relay.var("var_5858", dtype = "float32", shape = (5, 16, 1))#candidate|5858|(5, 16, 1)|var|float32
uop_5859 = relay.tan(var_5858.astype('float32')) # shape=(5, 16, 1)
bop_5865 = relay.less_equal(uop_5859.astype('bool'), relay.reshape(var_5858.astype('bool'), relay.shape_of(uop_5859))) # shape=(5, 16, 1)
output = bop_5865
output2 = bop_5865
func_5868 = relay.Function([var_5858,], output)
mod['func_5868'] = func_5868
mod = relay.transform.InferType()(mod)
mutated_mod['func_5868'] = func_5868
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5869 = relay.var("var_5869", dtype = "float32", shape = (5, 16, 1))#candidate|5869|(5, 16, 1)|var|float32
func_5868_call = mutated_mod.get_global_var('func_5868')
call_5870 = func_5868_call(var_5869)
output = call_5870
func_5871 = relay.Function([var_5869], output)
mutated_mod['func_5871'] = func_5871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6416 = relay.var("var_6416", dtype = "int32", shape = (12, 3, 2))#candidate|6416|(12, 3, 2)|var|int32
var_6417 = relay.var("var_6417", dtype = "int32", shape = (12, 3, 2))#candidate|6417|(12, 3, 2)|var|int32
bop_6418 = relay.equal(var_6416.astype('bool'), relay.reshape(var_6417.astype('bool'), relay.shape_of(var_6416))) # shape=(12, 3, 2)
func_2448_call = mod.get_global_var('func_2448')
func_2452_call = mutated_mod.get_global_var('func_2452')
const_6443 = relay.const([2,1,3,-8,-5,-8,-4,-10,-5,-7,5,-10,5,6,-1,-10,10,-8,-7,5,5,1,-2,10,-3,-4,-9,5,-2,-6,1,-6,9,3,-4,8,-10,1,-9,-9,2,-3,10,6,10,-7,-8,-1,10,-5,-2,4,-9,6,-9,-4,-10,3,6,4,-1,-6,-5,-10,-1,-9,-5,5,-1,-5,7,1,-6,-7,-4,-8,-3,8,1,3,10,-5,7,10,-2,-6,4,-6,2,5,-6,2,7,-7,5,-8,-2,-1,-4,4,-8,5,-10,4,-6,-9,-10,-2,-9,5,1,-1,8,-1,-7,-8,-7,-6,-4,8,-9,-4,8,-8,-7,2,-6,-8,-7,7,-3,-8,6,7,6,1,2,6,1,6,-5,-5,-1,5,3,-3,-7,-9,5,-4,-3,6,-10,5,4,-1,-2,-2,-1,-3,1,5,5,10,9,-10,-8,-8,-9,-10,-6,4,9,-1,6,-7,9,6,5,5,9,6,4,-6,9,-7,-6,3,10,-6,-7,5,4,-2,-9,-2,-4,6,4,-2,9,-8,-4,-10,4,-3,10,6,1,-2,-5,-9,-5,-9,-10,-2,4,-3,2,3,9,4,7,-3,8,-1,10,-1,6,3,-3,-4,-6,5,8,1,-5,-9,7,-3,7,-9,3,-3,-2,-6,3,9,-4,-7,-2,2,-7,2,-2,10,-6,-8,9,-7,-10,-5,2,2,8,-8,2,-2,2,-5,-8,8,4,-4,-9,-5,5,-10,5,2,-5,-6,4,-6,-3,-5,-3,-8,8,3,4,-6,7,-7,-2,-6,1,2,1,2,-6,-8,9,-8,-9,-6,-9,3,10,8,8,7,-7,5,-8,5,-5,4,10,-2,-3,1,3,-9,5,7,3,-3,4,8,8,-5,-8,-8,1,5,-10,-9,4,8,-5,-1,8,7,-3,-3,2,-3,-6,-7,10,-4,-2,-5,-9,4,-7,-2,-2,-8,-8,5,10,-10,-10,5,1,-2,2,-9,-2,5,-9,-6,-10,5,7,7,1,-6,-2,-3,-2,-8,-4,-5,10,-8,9,-8,-2,4,-5,9,-8,-7,7,5,-6,-2,-10,9,-7,6,4,-4,1,6,-10,-3,9,9,9,3,-9,-6,-4,-8,3,-8], dtype = "uint16")#candidate|6443|(420,)|const|uint16
var_6444 = relay.var("var_6444", dtype = "int16", shape = (810,))#candidate|6444|(810,)|var|int16
call_6442 = relay.TupleGetItem(func_2448_call(relay.reshape(const_6443.astype('uint16'), [10, 6, 7]), relay.reshape(var_6444.astype('int16'), [81, 10]), relay.reshape(var_6444.astype('int16'), [81, 10]), ), 1)
call_6445 = relay.TupleGetItem(func_2452_call(relay.reshape(const_6443.astype('uint16'), [10, 6, 7]), relay.reshape(var_6444.astype('int16'), [81, 10]), relay.reshape(var_6444.astype('int16'), [81, 10]), ), 1)
func_5254_call = mod.get_global_var('func_5254')
func_5261_call = mutated_mod.get_global_var('func_5261')
const_6449 = relay.const([1,6,3,10,7,8,9,-9,-2,7,1,-7,-10,-6,-6,-8,-3,8,-2,-3,-10,-6,2,-4,-6,-2,3,-9,8,-5,4,-3,2,2,2,1,-6,-2,6,5,-9,9,10,-2,5,5,5,-4,-1,-8,-4,6,-8,10,-4,-4,-4,2,-2,4,-6,-5,-9,5,-9,-5,-2,5,-9,3,-2,6,-1,1,5,-9,2,-1,6,3,10,8,-8,3,-8,1,-5,-5,7,10,-9,4,-4,4,-10,-3,6,-4,4,4,-4,-1,3,-5,-2,-2,-3,-4,-1,7,9,4,3,10,5,-9,-10,-10,-8,3,10,-3,-2,-2,-9,-6,8,4,8,-1,9,-4,2,-1,-8,2,-2,1,-6,-8,-1,-5,-4,2,-2,-5,-3,-9,-2,7,7,-8,-8,4,1,1,4,-2,-3,-10,-7,6,-5,-9,7,7,-7,4,3,9,10,7,-4,-4,-5,-3,-1,-4,-6,-5,9,9,-6,-1,-3,-6,-10,10,-4,-2,1,3,4,10,10,-5,7,7,8,-6,-10,-7,5,-6,-2,-8,-4,4,-8,-10,-10,-9,8,10,-6,1,9,6,-5,-3,-9,-1,1,2,2,8,-4,8,-5,-2,-7,4,-10,7,1,4,10,4,5,-1,-6,8,5,4,6,-10,-8,8,3,5,5,5,-7,7,4,10,6,-2,5,3,-3,-4,-5,8,8,-3,5,10,-8,-5,-4,4,4,-3,3,2,-6,6,-9,-1,-2,-1,6,-10,-10,-9,-1,-6,-9,3,4,-10,2,-4,-4,1,1,2,5,2,-8,-10,3,3,-7,-8,4,3,-3,10,-2,-3,2,2,7,3,-6,4,10,-3,-8,10,-6,9,-10,9,9,-8,-7,-8,-6,-8,3,2,-1,-2,4,10,-7,-3,7,10,4,-7,-10,-3,-6,-7,-5,4,-3,-5,-10,-1,4,-3,-6,9,3,-8,2,9,4,-9,-4,5,1,6,-4,8,9,-1,6,-4,5,-2,-5,5,7,-8,-6,10,-4,-7,-3,6,-8,-8,6,-3,-4,-6,-8,-8,-4,7,1,7,4,-6,1,-3,-9,-3,-3,-4,3,-7,2,5,-2,-5,-8,10,6,-10,-8,-8,-4,-1,-7,-5,8,1,-5,-7,-7,-4,5,-8,2,10,3,-8,-8,3,8,6,-7,-6,-1,1,-5,2,1,-3,-10,-2,2,7,10,5,-7,2,8,-8,2,7,-6,-7,9,-1,-4,1,4,-8,-9,10,4,1,3,10,-3,-1,6,-8,-10,5,4,2,3,10,-2,9,6,9,3,5,8,7,-5,-10,-5,-1,-10,-5,-4,6,-9,4,-9,5,4,-10,-5,4,-1,7,9,5,2,4,-6,1,-7,1,10,10,3,4,-6,-9,5,2,-3,-5,6,-10,10,-8,-10,5,-4,-4,6,6,-8,-6,1,1,5,-1,-5,-3,-6,-4,-9,-4,7,-9,-6,2,10,-9,7,4,-5,-3,10,7,-9,10,-3,1,4,10,7,-8,-1,-7,-6,-10,-8,3,-9,3,5,-5,10,8,-8,-8,2,1,2,2,10,10,5,5,-6,-9,2,9,10,9,-6,2,-10,1,-2,1,7,8,-5,-5,3,-3,-7,-10,8,6,6,-1,-2,10,9,4,3,9,6,10,-7,-6,-3,-5,6,4,9,10,-10,-3,-2,-5,10,-4,8,-8,6,1,-2,2,-8,-2,4,6,4,2,-8,-2,9,-7,-9,1,-10,-5,-1,-4,5,-3,10,2,-1,-2,1,9,8,-6,2,-10,-4,-7,-6,-3,9,-2,7,2,8,1,8,9,8,10,-7,-2,-9,-7,2,-6,5,-9,-1,2,-7,-1,3,-8,7,10,-2,6,-3,-6,2,5,9,-10,5,2,-5,4,2,8,3,5,10,7,-6,-8,5,6,7,6,7,3,-10,-1,-2,4,-9,-9,10,-4,-8,-5,-8,-7,-6,-7,3,-7,9,-5,-9,4,-8,8,-10,-6,-7,-9,1,-9,1,8,-6,-8,4,-3,4,10,-2,-10,3,1,9,6,-8,-5,-1,-4,9,-1,5,6,3,1,-6,-10,-9,2,8,7,3,6,4,-10,-2,-4,4,8,7,5,-10,-4,-5,-8,4,-1,-7,2,5,-4,2,-5,9,-6,-1,-10,7,4,10,-6,-9,-1,2,-8,5,5,10,-8,3,3,-6,-7,-7,-6,4,1,-7,-10,6,-9,9,-2,3,-8,-3,-2,-6,-3,-1,9,-3,1,-3,-10,-10,-1,2,-10,3,-5,10,7,-6,10,1,5,8,-3,-8,1,3,-8,5,-4,-7,5,6,-5,4,2,-5,-9,-4,5,9,-1,-7,-1,-1,3,4,7,-1,2,10,-1,2,1,6,7,3,10,-1,4,-6,9,-4,9,9,-1,7,5,5,5,-1,9,-2,-3,9,-4,4,-6,10,-6,-9,9,2,-7,-1,8,-5,-5,5,-2,7,1,1,-2,3,1,8,1,-5,4,-1,7,9,-4,2,-9,6,-2,5,8,-3,-3,-1,8,-3,10,-7,1,-9,-8,-3,-1,5,5,-7,-10,-4,-1,7,8,4,-5,7,6,-1,8,-1,2,-2,8,2,2,-2,8,4,1,-6,-10,-10,-8,1,6,6,-8,7,-8,5,-4,2,-6,9,-4,-4,9,-1,7,-4,-5,-3,9,-10,-2,6,2,9,4,-7,-5,5,5,1,-9,6,-5,7,-2,2,2,9,8,3,-6,-10,-9,4,-2,-9,2,-3,6,-5,-8,4,5,-5,-1,-2,-9,9,1,4,-10,2,-10,-3,6,-7,-2,-8,4,9,4,-2,8,-2,5,-10,-1,-9,7,9,9,-2,7,-10,-7,-6,-2,5,10,-7,-5,1,9,-9,1,4,2,-5,-7,-1,3,7,-8,5,10,-4,-9,1,5,8,7,-8,-9,-9,-7,3,10,5,-10,5,-4,-5,3,3,-7,4,3,3,4,-10,-4,2,3,-1,10,5,6,7,7,7,-2,-9,4,7,-8,10,-10,-8,-2,5,7,-5,9,4,3,3,-4,-10,-6,6,-6,6,9,-8,-2,-2,-3,6,1,2,-1,9,9,4,6,9,-6,-7,-10,-5,-10,-3,-6,-6,9,10,3,7,-9,-7,-1,-9,3,2,-3,-6,-6,3,-8,-8,9,8,7,5,-6,-3,1,4,7,9,-4,10,-6,3,-4,-2,1,4,-7,6,-1,2,8,-10,-5,5,-6,1,-2,7,-5,8,10,6,2,5,-8,7,-7,2,-4,1,-6], dtype = "int8")#candidate|6449|(1232,)|const|int8
const_6450 = relay.const([3.070760,4.484295,4.756759,2.145935,-3.896702,-7.379543,-3.318837,8.428549,-7.915440,5.063041,3.986478,3.733268,7.585857,5.857503,7.672033,-4.890941,1.800132,-6.416454,-0.113862,7.546852,2.438391], dtype = "float32")#candidate|6450|(21,)|const|float32
const_6451 = relay.const([-1.642716,7.903027,-3.445388,-4.432512,-7.228868,9.133518,-1.651371,-6.358212,3.455571,-7.610686,-4.821085,2.553362,7.615268,3.277106,-9.280737,-5.834320,-4.945793,-1.917147,-9.118966,-8.251679,-2.159237,3.545224,0.795797,3.265898,1.014998,-4.420109,-0.122707,4.508391,-6.243207,1.371021,2.183301,-1.571932,6.308174,-2.837524,2.995879,-7.951100,-2.052896,3.365697,1.900873,-0.061676,-2.697637,-9.613954,8.415692,7.014876,-0.966584,-7.079841,-0.687735,8.487162,-0.200360,3.041000,-1.195969,2.073951,2.937785,-6.951358,-0.070114,3.769811,0.738442,9.076086,5.853232,3.409566,3.068534,-1.397030,-7.653837,8.580322,5.843431,-2.210462,-2.451491,4.378200,-4.918784,-4.733384,-2.982149,-6.962904,0.418211,-1.083604,-4.920204,-7.088065,-0.834964,3.661869,-6.261930,2.687547,6.847468,-7.633230,8.496194,-7.951916,9.928644,-4.703619,-0.177722,-8.438462,7.545783,3.198689,-5.594408,4.342439,-0.922038,9.808240,-9.487979,-7.416172,-4.512670,6.545662,-2.009882,-5.781341,0.618833,-3.094514,7.373379,9.386145,7.278327,-2.065172,9.257538,-9.076956,-6.447569,-0.339646,-8.149470,-5.291700,5.180134,7.836540,1.271227,-1.686569,-9.168930,9.773075,1.704599,-9.903299,6.214261,-3.091874,6.557061,-6.684615,-0.980133,-9.125193,9.587291,3.829853,-7.402821,8.740319,-2.175756,-3.179771,-2.938708,-5.477371,0.448278,-7.762304,1.028763,6.672733,-9.934500,-4.337805,-3.336629,5.723664,-8.157170,8.837614,0.773723,-1.161034,-0.332401,2.495973,-1.221619,-3.964775,-5.931418,-4.668287,0.978274,-8.225254,8.422917,-0.667721,9.049078,-7.950995,-1.976925,9.145415,-8.211118,-7.058158,-6.859655,9.046301,8.838869,-0.452114,-8.030769,-6.300029,-4.910604,1.037250,7.790164,-3.736363,-7.549210,-9.527847,-0.997382,-6.510726,-0.642741,3.105390,-2.201329,4.381505,-0.963656,-6.653274,8.017783,-6.480477,9.731428,5.995453,5.902559,-1.637716,-0.078738,-2.748835,-0.314339,3.386157,7.025333,4.271281,2.510000,-1.591656,3.215384,3.620446,5.451559,-1.597402,4.965310,5.503411,9.611242,-9.012883,4.007200,-0.067007,-4.593932,-6.501303,-5.274133,0.006964,-9.906869,5.459680,-5.254298,-8.212380,-0.740821,1.268126,6.769854,-3.638262,-0.278152,-0.760821,-8.477171,0.370450,3.720159,-5.067671,9.345444,5.870906,7.292876,0.134225,1.057541,3.904597,8.837515,-5.813201,-7.619865,8.666854,2.529459,-9.876969,1.863412,-1.116015,5.661735,-6.489113,3.481341,-0.454390,8.499133,-5.389465,-8.258384,-5.050249,-0.429367,-8.165484,-7.758767,7.286133,3.555866,1.488663,1.053982,3.261443,-9.376551,-9.469554,-5.107333,8.652949,-5.959748,-2.801360,7.524800,-1.045961,7.273749,-0.172167,8.852068,-2.106586,4.059266,1.208931,9.604301,0.802480,-2.207212,9.722446,0.063752,-8.047749,6.821197,-2.426384,-7.281299,-2.192445,7.584698,6.747695,5.596038,6.843289,6.723084,2.632348,-9.787431,-2.568318,-0.864973,1.958053,-1.638626,-4.667382,-4.188399,6.396609,7.148895,1.441905,-9.076542,4.637145,-0.841014,8.272797,9.922190,-7.179707,6.938007,6.641534,6.383417,8.794777,-2.831842,8.441757,-5.535390,0.871261,-9.636254,-4.943964,0.119583,-4.978386,6.520592,1.305772,6.492617,-4.283355,3.179234,-8.648242,-6.710552,-9.281407,4.107717,1.433457,-0.164344,-1.010610,1.571942,-0.283404,-0.411470,-7.293424,-6.742230,1.332100,-7.927207,-5.252763,5.445954,-1.043005,1.716309,-9.592482,-1.450908,-1.841209,1.104774,9.829174,-1.583345,0.460782,0.746201,-5.184289,-0.012833,8.434673,2.337699,-6.763756,-6.908919,-1.617778,0.163313,7.439119,-9.656200,7.980618,-1.523218,3.424389,-8.643440,3.846708,-6.924238,6.097753,7.772225,3.528118,-6.683890,9.273432,-6.776634,-2.337333,5.850105,3.597196,-2.868989,2.468386,-7.508404,4.802823,6.688355,-5.770781,-5.133902,-4.579729,-0.541439,-0.795902,7.162725,5.268372,8.660174,-2.659893,8.317954,-5.188806,-6.883907,-7.990845,-8.450138,6.019604,5.388796,-9.897517,2.229696,8.693896,-3.712513,-2.123897,-8.923211,-0.972193], dtype = "float64")#candidate|6451|(396,)|const|float64
var_6452 = relay.var("var_6452", dtype = "int8", shape = (672,))#candidate|6452|(672,)|var|int8
var_6453 = relay.var("var_6453", dtype = "int16", shape = (1092,))#candidate|6453|(1092,)|var|int16
call_6448 = relay.TupleGetItem(func_5254_call(relay.reshape(const_6449.astype('int8'), [8, 14, 11]), relay.reshape(const_6450.astype('float32'), [21, 1]), relay.reshape(const_6451.astype('float64'), [396,]), relay.reshape(var_6452.astype('int8'), [672,]), relay.reshape(var_6453.astype('int16'), [1092,]), relay.reshape(var_6444.astype('int16'), [810,]), ), 4)
call_6454 = relay.TupleGetItem(func_5261_call(relay.reshape(const_6449.astype('int8'), [8, 14, 11]), relay.reshape(const_6450.astype('float32'), [21, 1]), relay.reshape(const_6451.astype('float64'), [396,]), relay.reshape(var_6452.astype('int8'), [672,]), relay.reshape(var_6453.astype('int16'), [1092,]), relay.reshape(var_6444.astype('int16'), [810,]), ), 4)
output = relay.Tuple([bop_6418,call_6442,const_6443,var_6444,call_6448,const_6449,const_6450,const_6451,var_6452,var_6453,])
output2 = relay.Tuple([bop_6418,call_6445,const_6443,var_6444,call_6454,const_6449,const_6450,const_6451,var_6452,var_6453,])
func_6498 = relay.Function([var_6416,var_6417,var_6444,var_6452,var_6453,], output)
mod['func_6498'] = func_6498
mod = relay.transform.InferType()(mod)
var_6499 = relay.var("var_6499", dtype = "int32", shape = (12, 3, 2))#candidate|6499|(12, 3, 2)|var|int32
var_6500 = relay.var("var_6500", dtype = "int32", shape = (12, 3, 2))#candidate|6500|(12, 3, 2)|var|int32
var_6501 = relay.var("var_6501", dtype = "int16", shape = (810,))#candidate|6501|(810,)|var|int16
var_6502 = relay.var("var_6502", dtype = "int8", shape = (672,))#candidate|6502|(672,)|var|int8
var_6503 = relay.var("var_6503", dtype = "int16", shape = (1092,))#candidate|6503|(1092,)|var|int16
output = func_6498(var_6499,var_6500,var_6501,var_6502,var_6503,)
func_6504 = relay.Function([var_6499,var_6500,var_6501,var_6502,var_6503,], output)
mutated_mod['func_6504'] = func_6504
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6872 = relay.var("var_6872", dtype = "float32", shape = (3, 4, 15))#candidate|6872|(3, 4, 15)|var|float32
var_6873 = relay.var("var_6873", dtype = "float32", shape = (3, 4, 15))#candidate|6873|(3, 4, 15)|var|float32
bop_6874 = relay.divide(var_6872.astype('float32'), relay.reshape(var_6873.astype('float32'), relay.shape_of(var_6872))) # shape=(3, 4, 15)
output = relay.Tuple([bop_6874,])
output2 = relay.Tuple([bop_6874,])
func_6878 = relay.Function([var_6872,var_6873,], output)
mod['func_6878'] = func_6878
mod = relay.transform.InferType()(mod)
var_6879 = relay.var("var_6879", dtype = "float32", shape = (3, 4, 15))#candidate|6879|(3, 4, 15)|var|float32
var_6880 = relay.var("var_6880", dtype = "float32", shape = (3, 4, 15))#candidate|6880|(3, 4, 15)|var|float32
output = func_6878(var_6879,var_6880,)
func_6881 = relay.Function([var_6879,var_6880,], output)
mutated_mod['func_6881'] = func_6881
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7581 = relay.var("var_7581", dtype = "int8", shape = ())#candidate|7581|()|var|int8
var_7582 = relay.var("var_7582", dtype = "int8", shape = (6, 13, 1))#candidate|7582|(6, 13, 1)|var|int8
bop_7583 = relay.greater(var_7581.astype('bool'), var_7582.astype('bool')) # shape=(6, 13, 1)
bop_7592 = relay.logical_and(var_7581.astype('bool'), var_7582.astype('bool')) # shape=(6, 13, 1)
func_6878_call = mod.get_global_var('func_6878')
func_6881_call = mutated_mod.get_global_var('func_6881')
const_7597 = relay.const([-9.370023,-2.213824,-9.450740,-6.176404,-4.317443,-3.616678,-7.381838,-4.473356,0.241770,-0.432966,0.101579,-5.455472,9.906434,-2.458913,8.104281,-2.193255,5.790656,3.022569,-0.541983,-5.112702,7.650564,-9.226625,-1.394349,-8.744757,7.679772,8.707779,6.264291,2.454515,4.661713,7.417222,-6.528436,-1.788728,-9.995723,6.820256,-3.054911,-3.503048,-6.373957,8.390627,5.227960,-0.192482,-0.783881,7.579473,6.569933,5.601518,-8.111101,-8.635906,-4.984657,-4.284860,-1.987868,9.398742,7.402631,-0.115354,-5.404676,-8.641794,-2.421408,-1.686239,-9.066836,-9.241061,-1.082980,-1.516516,-1.738478,1.460901,-9.930902,7.893171,9.873105,5.649702,-8.888909,-1.171225,1.571809,-6.105086,0.528569,-5.105948,-1.597681,-4.874505,-4.028085,0.935939,1.918093,9.437828,-6.379306,-7.573955,0.953163,-6.507533,0.369754,-7.756212,6.318383,-5.980926,1.621602,-3.839154,1.003305,2.748504,-6.399579,-3.860457,1.231729,1.175935,4.796384,-2.934993,5.987360,-6.896641,6.918737,6.412222,-9.864165,-2.515658,-5.746643,5.190806,0.269378,-5.065283,-2.988972,1.198745,-8.822329,8.431725,-3.233444,4.554908,3.059507,-4.458996,-4.772457,0.849974,-0.042512,4.648469,7.399992,-8.574888,5.053128,-5.196238,-8.948455,3.597315,-0.707140,-3.816872,-3.993931,-3.585024,8.650560,9.458674,-2.691303,-5.804219,-8.321768,8.862957,0.044056,-3.646064,-0.234211,-8.743197,-9.950852,-0.278921,-1.206813,6.082697,-4.627009,-4.517998,-2.881934,1.887924,6.202415,4.182642,0.240650,2.157351,4.242503,1.706643,-7.325051,-4.074274,-3.151394,8.245409,3.454859,5.458213,-7.927232,1.910071,8.998134,6.421663,5.477308,-8.220470,7.308715,1.451844,4.232666,6.901978,-7.652772,-6.510969,-0.741465,9.125528,-2.873469,5.757501,4.062232,-1.316772,4.117860,9.144633,-9.326625,-9.076481], dtype = "float32")#candidate|7597|(180,)|const|float32
call_7596 = relay.TupleGetItem(func_6878_call(relay.reshape(const_7597.astype('float32'), [3, 4, 15]), relay.reshape(const_7597.astype('float32'), [3, 4, 15]), ), 0)
call_7598 = relay.TupleGetItem(func_6881_call(relay.reshape(const_7597.astype('float32'), [3, 4, 15]), relay.reshape(const_7597.astype('float32'), [3, 4, 15]), ), 0)
bop_7599 = relay.left_shift(const_7597.astype('uint16'), var_7582.astype('uint16')) # shape=(6, 13, 180)
output = relay.Tuple([bop_7583,bop_7592,call_7596,bop_7599,])
output2 = relay.Tuple([bop_7583,bop_7592,call_7598,bop_7599,])
func_7602 = relay.Function([var_7581,var_7582,], output)
mod['func_7602'] = func_7602
mod = relay.transform.InferType()(mod)
mutated_mod['func_7602'] = func_7602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7602_call = mutated_mod.get_global_var('func_7602')
var_7604 = relay.var("var_7604", dtype = "int8", shape = ())#candidate|7604|()|var|int8
var_7605 = relay.var("var_7605", dtype = "int8", shape = (6, 13, 1))#candidate|7605|(6, 13, 1)|var|int8
call_7603 = func_7602_call(var_7604,var_7605,)
output = call_7603
func_7606 = relay.Function([var_7604,var_7605,], output)
mutated_mod['func_7606'] = func_7606
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7627 = relay.const([[[3.131177,0.512542,7.917382,9.591782,-0.646778,-4.138229,-8.670422,-3.556540,-9.363174,3.536123,8.552472,-1.061286],[-6.800144,-2.394298,4.881699,-9.091468,7.494603,9.502617,9.775364,-9.893233,7.987739,-7.761880,6.653289,4.445948],[-1.844613,9.101712,-6.430244,3.439949,-8.339377,-0.744446,-1.968251,4.570952,-4.191148,-6.518338,4.347652,1.717722],[1.476344,-0.373503,3.750709,-0.811966,9.715768,8.013891,-4.196884,-3.786596,1.672890,-0.651037,4.788176,9.572976]],[[-8.053691,5.034911,-2.666029,3.003107,6.583677,-5.617208,9.665208,-8.872494,-2.279065,4.798113,0.303334,3.674795],[-0.245289,-9.420149,8.910159,5.672784,7.245749,-5.315237,9.509088,-7.250276,5.956057,5.899385,2.642878,3.496844],[-9.951995,-6.792707,6.561277,-5.192619,-7.394043,4.515073,-8.087764,0.823860,-7.571337,7.189912,6.344592,-1.761033],[-9.600695,-5.246557,7.603019,8.363016,-7.310838,8.601750,9.369039,7.444696,-8.815751,-8.362701,8.827641,4.810361]],[[2.874375,3.892122,-6.892672,9.784168,-5.424821,-1.490744,-8.525977,8.523543,-1.232404,-7.996324,-8.061656,4.946080],[-7.134875,4.257807,8.037926,3.540134,9.460676,-5.160112,-5.519501,-8.487829,8.544308,8.224285,-4.522678,-0.519053],[7.909217,-3.250146,-6.093893,3.804948,0.718753,-8.588373,0.253823,3.569821,-9.071727,-6.876926,-4.524489,9.048844],[7.111701,2.798587,1.530425,-4.248898,-8.547442,-0.879675,-5.111638,0.660730,-4.381549,1.176011,-3.445302,-6.698541]],[[-4.049478,3.396631,6.861153,-7.866996,7.520909,-5.430381,7.407196,-0.955790,-6.781675,-3.580282,-3.870701,-4.298693],[5.285457,-3.554435,4.609814,-9.979358,6.379869,-6.220197,3.007496,2.422926,-9.907494,0.734931,2.554020,6.418911],[4.367121,-5.244822,1.327218,-3.072268,-3.651265,-0.263204,-2.061202,7.993474,2.791678,-0.963680,-9.617798,0.743191],[-5.614351,-9.196930,-8.719919,9.351985,2.696662,2.874977,-1.797660,6.990461,-6.925835,-4.033126,3.912419,-8.740363]]], dtype = "float64")#candidate|7627|(4, 4, 12)|const|float64
uop_7628 = relay.log(const_7627.astype('float64')) # shape=(4, 4, 12)
func_92_call = mod.get_global_var('func_92')
func_96_call = mutated_mod.get_global_var('func_96')
var_7631 = relay.var("var_7631", dtype = "bool", shape = (117,))#candidate|7631|(117,)|var|bool
const_7632 = relay.const([[True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False],[True,False,True,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,True,True],[False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,False,False]], dtype = "bool")#candidate|7632|(3, 117)|const|bool
call_7630 = func_92_call(relay.reshape(var_7631.astype('bool'), [1, 9, 13]), relay.reshape(const_7632.astype('bool'), [3, 9, 13]), )
call_7633 = func_92_call(relay.reshape(var_7631.astype('bool'), [1, 9, 13]), relay.reshape(const_7632.astype('bool'), [3, 9, 13]), )
output = relay.Tuple([uop_7628,call_7630,var_7631,const_7632,])
output2 = relay.Tuple([uop_7628,call_7633,var_7631,const_7632,])
func_7637 = relay.Function([var_7631,], output)
mod['func_7637'] = func_7637
mod = relay.transform.InferType()(mod)
mutated_mod['func_7637'] = func_7637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7638 = relay.var("var_7638", dtype = "bool", shape = (117,))#candidate|7638|(117,)|var|bool
func_7637_call = mutated_mod.get_global_var('func_7637')
call_7639 = func_7637_call(var_7638)
output = call_7639
func_7640 = relay.Function([var_7638], output)
mutated_mod['func_7640'] = func_7640
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7749 = relay.var("var_7749", dtype = "uint32", shape = (3, 11, 6))#candidate|7749|(3, 11, 6)|var|uint32
var_7750 = relay.var("var_7750", dtype = "uint32", shape = (3, 11, 6))#candidate|7750|(3, 11, 6)|var|uint32
bop_7751 = relay.minimum(var_7749.astype('uint32'), relay.reshape(var_7750.astype('uint32'), relay.shape_of(var_7749))) # shape=(3, 11, 6)
output = relay.Tuple([bop_7751,])
output2 = relay.Tuple([bop_7751,])
func_7755 = relay.Function([var_7749,var_7750,], output)
mod['func_7755'] = func_7755
mod = relay.transform.InferType()(mod)
var_7756 = relay.var("var_7756", dtype = "uint32", shape = (3, 11, 6))#candidate|7756|(3, 11, 6)|var|uint32
var_7757 = relay.var("var_7757", dtype = "uint32", shape = (3, 11, 6))#candidate|7757|(3, 11, 6)|var|uint32
output = func_7755(var_7756,var_7757,)
func_7758 = relay.Function([var_7756,var_7757,], output)
mutated_mod['func_7758'] = func_7758
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7881 = relay.var("var_7881", dtype = "int16", shape = (13, 15, 6))#candidate|7881|(13, 15, 6)|var|int16
var_7882 = relay.var("var_7882", dtype = "int16", shape = (13, 15, 6))#candidate|7882|(13, 15, 6)|var|int16
bop_7883 = relay.less_equal(var_7881.astype('bool'), relay.reshape(var_7882.astype('bool'), relay.shape_of(var_7881))) # shape=(13, 15, 6)
func_4483_call = mod.get_global_var('func_4483')
func_4490_call = mutated_mod.get_global_var('func_4490')
var_7899 = relay.var("var_7899", dtype = "float64", shape = (396,))#candidate|7899|(396,)|var|float64
var_7900 = relay.var("var_7900", dtype = "int8", shape = (672,))#candidate|7900|(672,)|var|int8
const_7901 = relay.const([[-5,-2,-4,3,7,7,5,-9,4,-5,7,-8,-4,9,8,-10,-8,1,-1,9,4,-3,-9,7,4,-8,3,6,-2,-5,8,-7,-10,-8,5,-1,5,-9,6,-8,2,-5,-3,4,6,10,-5,-10,-5,7,6,-8,-2,7,-5,-10,2,3,4,3,-7,4,7,-8,-2,10,-5,-1,7,4,-5,-10,10,2,-1,4,5,-7,-1,5,-1,3,5,-2,-4,-6,-1,-5,2,-4,2,8,-7,-2,-1,4,-3,-8,3,-5,-6,-7,9,-7,9,1,-3,-9,-5,1,-9,8,3,4,-7,4,-10,-10,5,2,-3,7,4,-6,-6,-5,-1,-9,-10,-10,-2,8,-9,2,8,-10,-9,-6,-3,-1,1,-4,-10,9,-5,-7,-7,-8,-7,-10,6,-5,7,9,-6,-8],[8,-1,6,10,-1,8,-6,-4,-1,-6,-6,-6,-4,2,-7,9,2,-6,10,-2,5,-8,-8,-1,-9,-8,10,8,8,6,-10,-3,-4,3,-6,-6,-4,-1,-9,5,-3,-2,8,-9,-8,2,-1,-10,-3,-9,-7,2,-1,8,-7,-9,6,5,1,-10,2,-7,-8,-6,-4,-2,1,-4,6,4,3,-6,-3,4,-9,-3,8,-2,10,7,-4,-5,-2,-7,1,2,3,4,10,-1,10,-10,7,5,9,-1,3,-7,-5,1,-6,-9,-2,-8,-8,-3,-5,9,4,-9,-7,7,-6,-5,9,-8,-1,-7,-9,7,-3,8,-3,10,-2,-10,1,1,2,-10,-3,7,5,-7,8,-2,4,1,-8,5,-3,-2,-4,2,10,8,-2,5,10,4,6,3,5,-9,6,-4],[1,-3,-1,-3,-1,-2,8,2,1,-8,-1,9,4,10,2,-10,2,-9,2,-1,5,-8,5,2,8,-7,10,7,-5,-5,3,-1,-3,-7,4,-10,3,3,9,-8,-5,6,-10,-9,-9,2,-2,-6,-5,1,-3,10,8,6,1,2,6,1,-10,10,9,-3,3,7,4,-7,7,-3,-3,10,-2,9,-2,-3,-5,4,-5,4,-8,-7,-6,-9,4,-8,2,2,-2,-1,3,9,-9,3,-1,1,7,4,-2,8,7,-4,6,5,7,4,-2,-10,-7,-4,-10,-10,2,-10,-8,-2,-4,6,-10,-8,6,9,-5,8,1,-10,4,-6,3,3,-6,-8,1,8,4,-10,-8,-8,-7,-6,-6,-9,-8,9,3,-5,-6,9,5,-1,-5,-9,8,-7,2,3,-2,2],[-7,1,4,-9,9,10,-5,-2,9,-5,-9,-6,-6,10,-1,-9,-3,10,-6,-10,9,8,-10,-6,2,-8,4,3,-2,1,7,-6,10,-8,7,3,7,-1,4,7,-1,-8,-10,-6,-3,-8,6,-1,-9,3,8,-1,-7,-3,10,-6,5,-5,-4,9,-9,-10,-10,1,1,-5,-2,-5,9,-2,7,1,4,9,8,-5,-5,-1,-5,4,8,6,-8,-9,-8,7,10,9,3,-10,-6,-9,2,-5,4,-5,-1,-2,-2,3,3,7,-7,5,-8,2,-2,6,10,-4,-3,5,-2,10,-10,-5,-4,-4,3,-2,4,7,-4,1,4,-6,-6,10,10,3,-2,10,-5,10,4,10,-7,-4,-10,3,-2,-1,-4,6,1,-3,-10,-1,-7,-2,3,9,-9,-1,9,2],[-4,10,6,-1,7,-9,9,3,-3,9,9,5,2,-8,9,4,5,-3,-2,-7,10,-8,-8,-5,6,-6,-3,-4,7,5,1,3,-3,-8,-1,-6,3,-10,-2,1,-10,-4,5,5,7,-10,-1,-6,-9,9,-1,3,-6,-4,-9,-8,-9,-1,10,10,7,-6,3,1,8,4,-5,-1,1,3,10,8,-6,6,4,-3,-6,-7,1,-2,10,-8,4,-7,-5,-4,4,4,2,3,-6,7,5,2,4,7,-2,8,-4,-1,-7,-6,1,-10,4,9,2,-3,-9,-5,8,6,8,-6,-3,5,-5,3,-5,-9,6,8,-5,5,5,-9,-5,-1,-3,9,-5,7,7,6,-1,-10,6,-5,8,-6,-1,6,-2,-10,5,10,-4,-1,-7,3,-3,-4,-3,-9,10,-6],[10,6,-8,-4,6,2,-1,10,-2,-5,-8,-6,-2,3,-10,-3,-8,2,-7,-8,10,-2,-5,-10,-7,-1,-6,5,-4,9,7,4,-3,1,3,-3,-1,6,9,-2,3,-1,-2,6,-7,10,7,1,-10,-9,4,-8,9,1,-3,2,8,-2,10,-6,3,10,2,9,4,7,-10,-4,-2,-4,-8,9,-2,8,-9,8,2,1,1,-6,-5,-4,-1,-3,3,-5,6,1,-7,9,-5,9,8,1,-7,8,-3,9,3,4,1,-9,7,6,-10,9,5,3,7,5,-5,10,-7,2,2,6,-7,-2,-6,8,5,-1,7,-4,-10,-10,3,-2,8,-10,2,-4,2,5,6,4,-3,2,9,-6,-6,-5,-8,-7,3,-9,-3,3,-10,-3,-2,-8,2,-6,-5,-3],[1,-9,-6,-7,6,-3,-10,-4,5,-9,-6,3,-6,-10,-9,3,10,-1,10,5,-6,3,-5,8,-6,-8,-3,-2,-7,-1,7,10,-8,6,-1,-2,-9,2,-3,7,-7,-4,5,-1,-8,3,-8,3,-6,-4,9,-1,-4,-4,5,-8,8,3,6,10,-6,-9,7,-2,2,7,5,-10,3,6,5,10,-4,9,-9,-5,-1,1,8,-9,1,-2,4,-5,-5,-4,-3,-6,-1,8,-1,5,9,7,1,-8,2,1,1,4,5,6,4,4,6,-5,6,8,8,-5,-3,-3,4,-2,8,-10,-4,10,10,-5,-9,-3,2,2,-9,9,1,-5,-6,7,3,-8,6,6,3,2,4,8,-9,8,-7,-7,10,1,-1,1,-10,10,6,-1,9,-4,-9,1,-3,5]], dtype = "int16")#candidate|7901|(7, 156)|const|int16
const_7902 = relay.const([True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,True,True,False], dtype = "bool")#candidate|7902|(117,)|const|bool
const_7903 = relay.const([True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False], dtype = "bool")#candidate|7903|(351,)|const|bool
call_7898 = relay.TupleGetItem(func_4483_call(relay.reshape(var_7899.astype('float64'), [4, 9, 11]), relay.reshape(var_7900.astype('int8'), [672,]), relay.reshape(const_7901.astype('int16'), [1092,]), relay.reshape(const_7902.astype('bool'), [117,]), relay.reshape(const_7903.astype('bool'), [3, 117]), ), 5)
call_7904 = relay.TupleGetItem(func_4490_call(relay.reshape(var_7899.astype('float64'), [4, 9, 11]), relay.reshape(var_7900.astype('int8'), [672,]), relay.reshape(const_7901.astype('int16'), [1092,]), relay.reshape(const_7902.astype('bool'), [117,]), relay.reshape(const_7903.astype('bool'), [3, 117]), ), 5)
uop_7906 = relay.asin(const_7901.astype('float32')) # shape=(7, 156)
bop_7914 = relay.right_shift(uop_7906.astype('int16'), relay.reshape(const_7901.astype('int16'), relay.shape_of(uop_7906))) # shape=(7, 156)
bop_7918 = relay.add(uop_7906.astype('int8'), relay.reshape(const_7901.astype('int8'), relay.shape_of(uop_7906))) # shape=(7, 156)
bop_7939 = relay.subtract(uop_7906.astype('int16'), relay.reshape(bop_7918.astype('int16'), relay.shape_of(uop_7906))) # shape=(7, 156)
bop_7946 = relay.power(bop_7918.astype('float32'), relay.reshape(const_7901.astype('float32'), relay.shape_of(bop_7918))) # shape=(7, 156)
bop_7957 = relay.logical_and(bop_7914.astype('bool'), relay.reshape(bop_7939.astype('bool'), relay.shape_of(bop_7914))) # shape=(7, 156)
func_5254_call = mod.get_global_var('func_5254')
func_5261_call = mutated_mod.get_global_var('func_5261')
var_7961 = relay.var("var_7961", dtype = "int8", shape = (1232,))#candidate|7961|(1232,)|var|int8
var_7962 = relay.var("var_7962", dtype = "float32", shape = (21,))#candidate|7962|(21,)|var|float32
var_7963 = relay.var("var_7963", dtype = "int16", shape = (810,))#candidate|7963|(810,)|var|int16
call_7960 = relay.TupleGetItem(func_5254_call(relay.reshape(var_7961.astype('int8'), [8, 14, 11]), relay.reshape(var_7962.astype('float32'), [21, 1]), relay.reshape(var_7899.astype('float64'), [396,]), relay.reshape(var_7900.astype('int8'), [672,]), relay.reshape(uop_7906.astype('int16'), [1092,]), relay.reshape(var_7963.astype('int16'), [810,]), ), 6)
call_7964 = relay.TupleGetItem(func_5261_call(relay.reshape(var_7961.astype('int8'), [8, 14, 11]), relay.reshape(var_7962.astype('float32'), [21, 1]), relay.reshape(var_7899.astype('float64'), [396,]), relay.reshape(var_7900.astype('int8'), [672,]), relay.reshape(uop_7906.astype('int16'), [1092,]), relay.reshape(var_7963.astype('int16'), [810,]), ), 6)
output = relay.Tuple([bop_7883,call_7898,var_7899,var_7900,const_7902,const_7903,bop_7946,bop_7957,call_7960,var_7961,var_7962,var_7963,])
output2 = relay.Tuple([bop_7883,call_7904,var_7899,var_7900,const_7902,const_7903,bop_7946,bop_7957,call_7964,var_7961,var_7962,var_7963,])
func_7967 = relay.Function([var_7881,var_7882,var_7899,var_7900,var_7961,var_7962,var_7963,], output)
mod['func_7967'] = func_7967
mod = relay.transform.InferType()(mod)
mutated_mod['func_7967'] = func_7967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7967_call = mutated_mod.get_global_var('func_7967')
var_7969 = relay.var("var_7969", dtype = "int16", shape = (13, 15, 6))#candidate|7969|(13, 15, 6)|var|int16
var_7970 = relay.var("var_7970", dtype = "int16", shape = (13, 15, 6))#candidate|7970|(13, 15, 6)|var|int16
var_7971 = relay.var("var_7971", dtype = "float64", shape = (396,))#candidate|7971|(396,)|var|float64
var_7972 = relay.var("var_7972", dtype = "int8", shape = (672,))#candidate|7972|(672,)|var|int8
var_7973 = relay.var("var_7973", dtype = "int8", shape = (1232,))#candidate|7973|(1232,)|var|int8
var_7974 = relay.var("var_7974", dtype = "float32", shape = (21,))#candidate|7974|(21,)|var|float32
var_7975 = relay.var("var_7975", dtype = "int16", shape = (810,))#candidate|7975|(810,)|var|int16
call_7968 = func_7967_call(var_7969,var_7970,var_7971,var_7972,var_7973,var_7974,var_7975,)
output = call_7968
func_7976 = relay.Function([var_7969,var_7970,var_7971,var_7972,var_7973,var_7974,var_7975,], output)
mutated_mod['func_7976'] = func_7976
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7999 = relay.var("var_7999", dtype = "uint32", shape = ())#candidate|7999|()|var|uint32
var_8000 = relay.var("var_8000", dtype = "uint32", shape = (2, 1, 11))#candidate|8000|(2, 1, 11)|var|uint32
bop_8001 = relay.bitwise_or(var_7999.astype('uint32'), var_8000.astype('uint32')) # shape=(2, 1, 11)
var_8027 = relay.var("var_8027", dtype = "uint32", shape = (2, 16, 11))#candidate|8027|(2, 16, 11)|var|uint32
bop_8028 = relay.left_shift(bop_8001.astype('int16'), var_8027.astype('int16')) # shape=(2, 16, 11)
bop_8036 = relay.divide(bop_8028.astype('float64'), var_7999.astype('float64')) # shape=(2, 16, 11)
output = relay.Tuple([bop_8036,])
output2 = relay.Tuple([bop_8036,])
func_8042 = relay.Function([var_7999,var_8000,var_8027,], output)
mod['func_8042'] = func_8042
mod = relay.transform.InferType()(mod)
var_8043 = relay.var("var_8043", dtype = "uint32", shape = ())#candidate|8043|()|var|uint32
var_8044 = relay.var("var_8044", dtype = "uint32", shape = (2, 1, 11))#candidate|8044|(2, 1, 11)|var|uint32
var_8045 = relay.var("var_8045", dtype = "uint32", shape = (2, 16, 11))#candidate|8045|(2, 16, 11)|var|uint32
output = func_8042(var_8043,var_8044,var_8045,)
func_8046 = relay.Function([var_8043,var_8044,var_8045,], output)
mutated_mod['func_8046'] = func_8046
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8274 = relay.var("var_8274", dtype = "float32", shape = (13, 3, 16))#candidate|8274|(13, 3, 16)|var|float32
uop_8275 = relay.atan(var_8274.astype('float32')) # shape=(13, 3, 16)
func_5594_call = mod.get_global_var('func_5594')
func_5602_call = mutated_mod.get_global_var('func_5602')
var_8297 = relay.var("var_8297", dtype = "uint32", shape = (1, 27))#candidate|8297|(1, 27)|var|uint32
const_8298 = relay.const([-5,7,3,1,-3,4,4,5,7], dtype = "int16")#candidate|8298|(9,)|const|int16
var_8299 = relay.var("var_8299", dtype = "int16", shape = (81, 10))#candidate|8299|(81, 10)|var|int16
const_8300 = relay.const([0.597806,7.933027,6.410649,-4.731439,-4.267722,-7.043132,-7.157894,5.454834,-6.768647,9.187822,-8.201600,-4.484977,3.430376,-3.711646,-0.651771,2.920550,7.802697,7.958904,-9.518781,5.528347,8.898277], dtype = "float32")#candidate|8300|(21,)|const|float32
var_8301 = relay.var("var_8301", dtype = "int16", shape = (1092,))#candidate|8301|(1092,)|var|int16
const_8302 = relay.const([-5,-2,6,-4,7,-7,-2,-1,-9,-7,2,-2,7,-6,-5,-2,1,-5,5,8,-3,3,9,8,-9,-5,-1,7,10,4,8,8,-1,8,6,6,-1,5,-2,-10,-8,-1,-3,6,10,9,-8,-1,9,3,-5,5,7,-6,2,10,-2,-8,9,-8,-6,1,3,-2,-1,-10,-5,10,2,3,-1,-4,3,-8,6,3,3,7,-8,-8,4,-3,2,3,7,-8,10,-3,-3,-7,-9,2,-8,7,8,3,3,2,-7,-9,-2,7,8,5,1,2,-4,-1,5,-8,-5,-4,-5,4,-1,10,-2,3,7,3,2,9,2,-10,-9,-8,9,3,-8,8,1,-3,5,3,8,1,1,-7,9,10,8,-2,-1,1,-1,-1,6,-5,1,-4,-6,-8,4,-2,5,-5,-1,7,2,-1,8,-7,-5,-7,2,7,8,-7,-3,7,10,-8,-9,-2,7,-3,-5,-9,-5,-1,8,5,3,10,8,3,-1,8,8,-10,3,-7,-6,-3,5,-7,1,-10,-3,-10,8,-2,4,9,-2,-8,4,5,4,-2,9,-1,-5,-7,-1,-1,10,-10,-5,-8,-9,2,-2,7,3,4,-3,4,-5,-6,8,7,-3,4,-5,-3,-7,-10,-1,4,8,-8,2,-7,-5,-5,-2,-2,-9,-3,7,1,-2,-2,9,7,-5,-8,-10,-3,-10,7,1,7,4,-4,-7,-6,7,-3,5,6,6,-6,-1,-1,-7,2,-10,8,10,-6,9,7,-9,4,10,-5,-4,-3,9,-3,-4,6,6,7,-8,-5,4,-2,-4,-8,-6,3,5,-4,-1,5,-4,9,-5,-7,1,7,-8,8,-7,8,-3,-3,8,5,4,7,10,-9,-4,5,10,1,-5,10,7,-5,-9,-9,4,6,-1,-10,-1,-6,-5,10,-5,7,-10,-1,-7,7,3,-2,-9,8,3,1,-7,9,-9,9,-10,5,-5,6,1,7,9,-4,8,-8,-10,-5,7,-8,2,2,6,-1,4,-1,1,10,7,-8,-7,-8,-5,-1,6,1,-9,-10,-10,3,8,-8,4,-9,-3,-6,3,-7,-8,3,8,-3,-6,-1,2,10,-2,9,8,4,4,4,-7,-8,-9,-8], dtype = "uint16")#candidate|8302|(420,)|const|uint16
call_8296 = relay.TupleGetItem(func_5594_call(relay.reshape(var_8297.astype('uint32'), [3, 3, 3]), relay.reshape(var_8297.astype('uint32'), [3, 3, 3]), relay.reshape(const_8298.astype('int16'), [1, 9]), relay.reshape(var_8299.astype('int16'), [810,]), relay.reshape(const_8300.astype('float32'), [7, 3]), relay.reshape(var_8301.astype('int16'), [182, 6]), relay.reshape(const_8302.astype('uint16'), [420,]), ), 3)
call_8303 = relay.TupleGetItem(func_5602_call(relay.reshape(var_8297.astype('uint32'), [3, 3, 3]), relay.reshape(var_8297.astype('uint32'), [3, 3, 3]), relay.reshape(const_8298.astype('int16'), [1, 9]), relay.reshape(var_8299.astype('int16'), [810,]), relay.reshape(const_8300.astype('float32'), [7, 3]), relay.reshape(var_8301.astype('int16'), [182, 6]), relay.reshape(const_8302.astype('uint16'), [420,]), ), 3)
func_5254_call = mod.get_global_var('func_5254')
func_5261_call = mutated_mod.get_global_var('func_5261')
var_8310 = relay.var("var_8310", dtype = "int8", shape = (1232,))#candidate|8310|(1232,)|var|int8
const_8311 = relay.const([8.078109,-4.856774,-6.469571,4.480680,8.752791,-9.352889,-4.878120,-9.726254,-4.327451,7.946563,3.773669,0.761142,2.255478,6.594563,-7.772551,2.679737,0.960365,5.137566,-3.021493,-8.707610,-8.211415,-9.162362,1.576265,-3.763015,5.557233,3.031111,-8.049857,9.376941,2.838595,-7.592205,-8.800386,1.674942,-3.159559,-3.963699,-1.486588,-3.727758,6.936647,3.043814,7.143684,-8.476354,3.377245,-3.238113,0.290789,1.419489,-5.625318,-0.833887,7.642958,-3.575398,5.134662,-3.797447,-0.598215,-3.003991,-2.949182,-8.396702,8.520430,-6.279059,-6.873478,-6.285929,-5.155229,-6.885724,-6.109940,5.260113,1.988346,5.734806,-0.087456,-7.566447,-7.502455,-7.934909,-2.217515,-6.131738,-8.531595,-2.823803,1.858116,-6.365535,-7.904640,3.326709,9.214440,-2.267039,-6.395724,4.861857,4.092123,2.881363,-9.677827,-5.978860,-5.372299,0.094178,7.621096,3.677760,-1.575686,-2.039204,8.966794,4.412285,4.906779,4.708333,9.063878,-5.025943,-7.352522,-3.721899,-9.285511,1.132084,-2.335678,0.815559,-4.945914,-5.832282,-6.157916,7.830925,-1.775284,-6.051066,-9.682983,-7.628496,1.764627,-7.559593,-2.605753,-8.288378,-0.862224,-2.752888,-1.336715,-7.225394,-8.506681,-0.399884,-2.216465,-3.302183,-8.697387,-5.486241,-5.262018,1.521333,7.989466,2.121718,-5.410529,-7.741490,2.498699,9.747605,-7.360813,-5.301353,9.109279,6.376161,-7.913203,-8.979282,5.859437,3.919169,3.481771,6.618517,4.136741,0.008423,-8.367519,-3.413737,-1.898384,-5.904055,1.212084,3.130357,0.678415,-8.289902,5.596174,-0.861917,7.101080,-8.094831,-6.207788,-5.300967,7.893577,-1.581247,6.578401,1.628272,-9.520362,6.733398,4.922143,-4.458091,5.849341,-6.258416,-9.481328,0.687962,3.029009,-4.735466,2.254233,9.572872,-8.396006,3.704085,-6.028560,9.788755,-2.778279,-9.958373,-3.646764,-0.821691,-4.258119,-4.924449,7.827273,-6.192792,7.854156,1.618672,9.224206,6.337932,-6.995269,-1.033349,-3.102237,0.697101,-2.214787,-7.459204,6.100738,-6.240710,0.459927,-8.088199,7.294290,1.313528,5.151747,8.682269,1.900214,3.979312,1.503624,-6.316065,9.602044,-0.547112,-9.161106,-5.326858,3.307537,3.143572,8.597045,-4.211500,-1.149746,-5.990377,-7.269007,8.305182,-6.197951,1.560345,-4.206685,5.108980,4.075589,7.105342,-6.190949,4.203169,-8.869165,1.727824,-2.528950,-8.632128,1.973115,2.069524,4.030547,-3.102261,1.763654,5.942988,9.236212,0.323300,2.672554,-3.978421,2.203279,5.983670,-8.420442,8.238737,-6.878742,-3.971943,-1.143815,2.021166,-7.681340,-2.949491,2.175731,7.291999,-4.229182,-4.725031,8.861492,-3.183791,-1.056885,-3.633866,-6.312088,-4.317935,-1.712335,-9.761489,-5.713120,-8.071241,6.700849,-4.366064,-9.438742,-9.493240,-0.633712,-1.341904,5.937618,-3.795751,0.390222,0.614862,4.001772,-5.472226,-9.934634,-6.576755,2.597152,9.036274,9.728872,9.773403,8.430810,2.692725,-5.947730,1.504706,-8.640622,-6.491477,-4.438288,6.632236,5.034978,6.739380,-4.164293,-0.983582,-2.253796,2.715998,1.008492,-1.459076,-6.011836,-0.925148,8.525949,-2.042111,-9.084195,1.962315,-0.955522,-7.102503,6.422468,2.274494,5.208969,2.348662,2.212426,-9.892970,9.520991,1.665108,-4.045696,4.658790,9.639912,0.188422,-7.285020,4.830970,6.186730,-9.103281,8.610082,-2.404051,1.860241,0.419305,-2.548302,0.095044,-0.778939,0.860327,-6.526681,-2.046535,6.960299,4.329246,4.476934,-7.706807,-3.271025,0.824659,9.963797,6.537549,4.896395,5.392126,-8.778674,5.519449,-0.434308,9.981383,6.380764,-9.770029,2.605720,-0.780676,-0.311426,2.106349,3.589857,3.525443,-7.543382,7.067893,3.735924,-6.349299,9.264605,-1.461106,-0.882485,2.185943,3.729796,-0.645010,0.100726,9.667809,-5.377097,5.981910,1.266898,-1.524506,7.071459,9.052702,-6.626498,-4.312946,-0.255512,7.380565,-8.746391,-1.425976,6.352502,-1.693249,-1.859539,-8.419616,-2.147579,-2.642516,-6.234344,9.185947,6.948304,-3.439503,-1.584398,9.501155,2.389557,-4.824010,5.736456,-7.282214], dtype = "float64")#candidate|8311|(396,)|const|float64
const_8312 = relay.const([[-6,5,2,1],[4,-4,7,1],[-8,-2,-10,6],[2,5,-1,5],[1,-7,5,2],[10,-6,-7,-10],[-1,6,9,-7],[1,9,7,9],[-5,3,-2,1],[-3,1,-3,-5],[-5,8,-4,-9],[8,-6,3,5],[10,9,-4,-6],[-7,-7,7,-7],[-4,8,-3,-4],[4,-8,-5,-4],[2,9,-4,-3],[1,1,3,-10],[-4,-4,5,10],[7,-6,-10,9],[4,7,2,-8],[9,1,-9,8],[1,-2,1,-8],[9,-3,4,2],[10,5,9,-7],[3,10,-10,5],[2,2,9,-4],[-3,7,8,9],[-7,2,-10,-4],[-8,6,5,-1],[-9,2,4,6],[10,-9,3,8],[2,5,10,6],[-8,-6,-4,-9],[4,2,-7,5],[2,-8,10,4],[-8,6,10,4],[2,10,10,10],[-3,10,-1,-7],[-9,-5,-1,-4],[9,4,2,9],[1,2,1,5],[-4,-1,-10,-7],[3,1,-2,2],[-3,-3,8,10],[1,1,4,5],[-1,-3,7,3],[2,6,6,-5],[6,-5,10,-6],[-9,-5,4,-1],[8,-9,3,-7],[-5,1,2,-4],[4,5,-7,6],[-9,-9,3,-2],[-5,8,-3,3],[9,-3,9,-1],[7,10,-8,-1],[7,4,9,1],[-4,-2,-5,9],[10,-4,7,4],[1,1,-10,8],[2,9,7,5],[-10,-10,-1,-8],[-9,10,8,-4],[-9,8,-7,9],[10,1,8,9],[-1,3,-8,-3],[-3,-6,8,-10],[5,6,-6,-3],[3,-6,-10,-10],[-3,-2,-6,-1],[9,-2,7,4],[9,6,-5,4],[3,-2,4,-3],[-9,-10,-2,-5],[-8,10,6,7],[-3,3,-2,-7],[-8,7,3,10],[6,8,-3,-1],[-10,4,2,-3],[4,3,6,2],[-3,5,8,-9],[-7,4,-9,-1],[-5,-5,6,-4],[-8,8,-10,-8],[-9,8,-10,4],[3,-7,5,1],[3,-9,-6,1],[1,-5,-10,-2],[8,8,7,3],[-2,-2,8,-8],[-9,-10,-9,8],[8,1,-8,9],[-4,-2,-1,-9],[-7,1,-4,4],[4,-6,-5,-5],[8,3,10,2],[8,-5,10,1],[4,-3,-9,-2],[1,7,2,8],[-9,-8,2,-5],[3,-9,-3,-10],[-2,-7,-10,-7],[-7,-8,8,3],[-9,-8,-10,-9],[-2,-9,1,-2],[-2,8,-8,-4],[9,7,10,-7],[-10,7,-10,6],[9,5,-5,-2],[7,-9,-5,1],[-5,-1,8,-3],[3,-10,-8,-4],[-2,-6,-7,-1],[10,-1,-5,9],[3,-6,-8,-1],[8,-5,-8,5],[8,-6,-2,9],[-9,7,5,5],[-5,-10,9,-5],[3,-7,-7,-2],[6,1,-6,-9],[3,8,-1,-7],[-3,9,-8,-9],[4,-3,-10,7],[-2,-3,-9,3],[10,1,6,10],[-4,-1,5,5],[-8,10,3,4],[-6,-6,-1,6],[-2,-7,-4,8],[-7,-10,1,-4],[4,-6,1,-6],[7,3,-3,-9],[5,-5,-2,7],[-4,-4,4,3],[-1,-7,-9,1],[-9,3,-3,-8],[8,-7,8,4],[1,-8,-7,3],[2,-2,6,-8],[-10,-6,-1,3],[-10,2,4,-2],[5,2,-3,-9],[6,7,-9,-7],[-3,-3,-7,-8],[5,-5,-7,6],[6,-1,2,5],[5,1,8,10],[3,8,10,-7],[5,5,-10,3],[8,7,5,-1],[-6,2,-2,-5],[-8,5,8,-2],[-7,-4,-10,4],[-10,10,-5,-8],[3,6,4,8],[-6,-9,-6,-9],[10,1,10,-7],[-6,-8,8,-3],[5,4,-3,-3],[-7,5,-5,-10],[6,4,5,-8],[8,2,-1,-7],[-6,-8,-5,-10],[-3,-10,9,-5],[9,3,-1,-5],[-9,5,3,8]], dtype = "int8")#candidate|8312|(168, 4)|const|int8
call_8309 = relay.TupleGetItem(func_5254_call(relay.reshape(var_8310.astype('int8'), [8, 14, 11]), relay.reshape(const_8300.astype('float32'), [21, 1]), relay.reshape(const_8311.astype('float64'), [396,]), relay.reshape(const_8312.astype('int8'), [672,]), relay.reshape(var_8301.astype('int16'), [1092,]), relay.reshape(var_8299.astype('int16'), [810,]), ), 6)
call_8313 = relay.TupleGetItem(func_5261_call(relay.reshape(var_8310.astype('int8'), [8, 14, 11]), relay.reshape(const_8300.astype('float32'), [21, 1]), relay.reshape(const_8311.astype('float64'), [396,]), relay.reshape(const_8312.astype('int8'), [672,]), relay.reshape(var_8301.astype('int16'), [1092,]), relay.reshape(var_8299.astype('int16'), [810,]), ), 6)
output = relay.Tuple([uop_8275,call_8296,var_8297,const_8298,var_8299,const_8300,var_8301,const_8302,call_8309,var_8310,const_8311,const_8312,])
output2 = relay.Tuple([uop_8275,call_8303,var_8297,const_8298,var_8299,const_8300,var_8301,const_8302,call_8313,var_8310,const_8311,const_8312,])
func_8331 = relay.Function([var_8274,var_8297,var_8299,var_8301,var_8310,], output)
mod['func_8331'] = func_8331
mod = relay.transform.InferType()(mod)
mutated_mod['func_8331'] = func_8331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8331_call = mutated_mod.get_global_var('func_8331')
var_8333 = relay.var("var_8333", dtype = "float32", shape = (13, 3, 16))#candidate|8333|(13, 3, 16)|var|float32
var_8334 = relay.var("var_8334", dtype = "uint32", shape = (1, 27))#candidate|8334|(1, 27)|var|uint32
var_8335 = relay.var("var_8335", dtype = "int16", shape = (81, 10))#candidate|8335|(81, 10)|var|int16
var_8336 = relay.var("var_8336", dtype = "int16", shape = (1092,))#candidate|8336|(1092,)|var|int16
var_8337 = relay.var("var_8337", dtype = "int8", shape = (1232,))#candidate|8337|(1232,)|var|int8
call_8332 = func_8331_call(var_8333,var_8334,var_8335,var_8336,var_8337,)
output = call_8332
func_8338 = relay.Function([var_8333,var_8334,var_8335,var_8336,var_8337,], output)
mutated_mod['func_8338'] = func_8338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8623 = relay.var("var_8623", dtype = "float64", shape = (1, 4, 14))#candidate|8623|(1, 4, 14)|var|float64
var_8624 = relay.var("var_8624", dtype = "float64", shape = (13, 4, 14))#candidate|8624|(13, 4, 14)|var|float64
bop_8625 = relay.floor_divide(var_8623.astype('float64'), var_8624.astype('float64')) # shape=(13, 4, 14)
output = relay.Tuple([bop_8625,])
output2 = relay.Tuple([bop_8625,])
func_8635 = relay.Function([var_8623,var_8624,], output)
mod['func_8635'] = func_8635
mod = relay.transform.InferType()(mod)
mutated_mod['func_8635'] = func_8635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8635_call = mutated_mod.get_global_var('func_8635')
var_8637 = relay.var("var_8637", dtype = "float64", shape = (1, 4, 14))#candidate|8637|(1, 4, 14)|var|float64
var_8638 = relay.var("var_8638", dtype = "float64", shape = (13, 4, 14))#candidate|8638|(13, 4, 14)|var|float64
call_8636 = func_8635_call(var_8637,var_8638,)
output = call_8636
func_8639 = relay.Function([var_8637,var_8638,], output)
mutated_mod['func_8639'] = func_8639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8702 = relay.var("var_8702", dtype = "float32", shape = (14, 7, 16))#candidate|8702|(14, 7, 16)|var|float32
var_8703 = relay.var("var_8703", dtype = "float32", shape = (14, 7, 16))#candidate|8703|(14, 7, 16)|var|float32
bop_8704 = relay.divide(var_8702.astype('float32'), relay.reshape(var_8703.astype('float32'), relay.shape_of(var_8702))) # shape=(14, 7, 16)
func_8331_call = mod.get_global_var('func_8331')
func_8338_call = mutated_mod.get_global_var('func_8338')
const_8711 = relay.const([[3.821536,8.063633,-5.569709,-7.106570,-0.987652,7.408264,5.816568,-9.900067,-0.866738,-7.945649,-6.739432,-4.595899,-2.353548,-5.284797,1.400640,3.646647,7.619884,-6.838799,2.799918,7.143369,2.152314,-9.559680,8.391584,8.854784,-4.821362,-7.659193,-0.312383,2.138286,-1.027513,5.415444,4.024529,6.606509,1.566880,-0.187825,-3.626620,2.119271,-1.053635,-2.559514,-1.356898,7.838957,-0.445563,6.724150,-1.026944,2.606076,-9.255316,-1.575788,4.227192,-6.343279,7.675183,6.677621,3.778884,-3.897943,-8.846426,3.893671,-8.905596,8.857018,3.171957,1.425400,-6.970073,-9.246012,-6.879805,-9.364542,-8.063587,-7.157670,4.014900,6.277343,-8.115637,-1.132965,5.885485,-5.955523,-9.573448,-7.273489,-9.332558,-0.913763,-5.152358,-5.201761,4.805970,-7.722262,7.468535,-1.912078,-4.981894,6.628838,7.387711,8.386738,-1.584243,-4.859042,9.305474,-9.781991,0.346732,-8.492165,6.595421,-7.252772,8.201641,4.219273,1.289931,1.565747,4.006579,3.539663,-8.008369,1.529769,-4.042757,-1.183982,-1.926337,6.946055,0.800476,0.022256,-3.910458,7.367673,-2.721077,4.402097,-1.884870,4.225267,1.029791,-8.146512,9.504395,-7.029814,-5.533053,-3.795821,2.111830,-4.770215,5.161935,-2.505237,8.892239,-0.664403,-9.722072,9.298063,-8.513511,-1.159217,4.672164,-6.395869,1.674085,-0.846008,4.852136,-4.723656,4.790160,9.535282,8.257625,-3.159419,1.727495,-0.827241,-3.978995,5.835915,5.072295,4.375497,-3.957184,1.664779,-5.132471,6.037123,-2.912543,7.110105,-8.301243,4.465628,-9.179687,-2.240388,-3.578785,8.770185,5.742208,1.691046,-6.032263,1.621913,-4.617735,-1.738129,0.270859,-3.807048,-4.754398,9.183399,-5.086063,-3.758104,-4.041389,6.497779,1.825820,-3.079551,4.153492,3.273741,-5.132664,-1.593248,-7.832630,3.768247,2.578297,3.643049,4.844102,-4.215072,2.059962,-5.642111,-8.650042,-7.575310,-2.459104,-5.230849,0.290735,-4.497261,-5.364129,-7.803607,1.204202,-5.190161,-5.281726,-1.402399,-7.858975,1.996256,6.539877,-3.841504,3.624202,-9.317599,3.748884,0.167487,-8.884007,-4.247756,7.094932,4.592893,-4.191551,1.187444,-7.867049,7.214940,-5.293632,-0.988325,-5.735831,7.102524,-6.954953,-1.057410,-2.840552,-7.366405,5.091411,-0.457220,3.411430,6.853571,6.268599,-6.460636,5.917197,3.436082,0.816678,9.580726,-5.799983,6.311702,-7.438151,-8.930982,-7.373034,-1.701840,2.028442,-7.554539,-1.120373,-7.554597,-9.754176,8.290086,-9.936462,9.680410,5.151920,-9.829814,-3.822937,-6.127071,8.420111,7.279684,9.541989,7.500578,-3.021309,3.395373,7.566699,3.134433,0.583830,6.377585,5.007522,7.705123,-0.081563,-2.349639,0.693565,9.294495,7.959300,-9.832256,-5.442546,9.313782,1.054183,-1.788696,-4.705894,-3.377922,-4.611410,-7.019191,9.110098,-1.542338,7.078870,-7.250213,6.931977,0.442485,-5.955834,6.223628,4.237739,-4.843045,-1.377126,5.800340,-9.204681,-3.559282,-5.144279,-4.071606,-4.343418,5.153510,9.543326,-6.600940,1.669016,0.301542,-6.622979,8.884033,9.139250,-4.314487,-2.075760,-5.437717,-6.062953,7.261803,1.864090,-1.460197,1.978345,9.723427,7.693740,6.472454,5.873475,-6.948588],[-5.434683,7.556944,6.528959,0.459398,-7.094271,-0.610730,-7.830821,3.126675,4.927763,3.545676,3.868992,8.140853,-7.343378,4.445506,4.772017,5.208790,9.463072,0.815447,9.651342,-9.640576,3.252589,-0.052773,4.360445,5.660172,9.899106,6.069899,-8.867236,9.453938,8.725848,-9.561717,-3.856391,-6.028665,7.989821,6.971987,-8.434735,-7.637783,-9.856497,8.235046,-9.862891,0.069052,0.498415,-4.728303,5.399829,1.298709,-8.592369,-5.912327,7.703024,9.018550,-3.365100,0.348608,-2.388722,-9.589186,-7.418843,-4.979026,6.779972,-2.621705,-2.668167,-4.843614,-7.273395,9.458686,2.269530,-9.500471,-6.297299,8.090077,-6.761873,-8.931523,-3.302894,7.901144,-5.602720,8.999763,9.408501,1.479940,-5.328370,-5.735865,5.538468,-3.316820,7.085408,7.146854,-5.120917,-5.638298,-0.145720,3.048621,-8.468104,8.298179,7.103274,-1.346840,3.692763,-6.589644,5.852792,-5.230371,-5.036055,3.289836,1.496142,-2.139724,-3.685504,-5.209495,2.814692,4.707860,9.434072,-5.301530,-8.101957,6.776404,-3.010526,9.357126,-5.098091,-5.066812,-5.165977,-7.784303,4.507273,1.611819,-2.603113,-4.101713,-9.746440,5.648622,-7.888916,-4.964708,-2.880855,-1.538160,9.305118,-8.268762,-1.675552,4.719514,-7.763457,-3.048485,-8.296704,0.830119,-1.406562,-8.293646,-4.744878,-2.047331,8.712740,6.876196,-4.370169,5.436015,8.496724,-9.567565,-0.611593,9.571035,6.801536,-1.074536,1.360068,-8.597715,7.986960,-7.104187,-5.876594,1.667471,9.319719,1.025280,-3.611056,-8.757806,-3.734805,4.431404,-0.948291,-9.018091,8.015379,0.487220,-9.587047,-5.190386,-4.562772,7.505908,3.525037,-6.853049,1.281335,-1.613697,-2.474172,-0.383882,1.024715,-2.802470,-8.542458,-9.927795,4.919197,-4.060993,9.094074,-1.836714,-8.454857,5.801241,-8.719317,-7.960827,7.123907,0.332120,0.717309,0.739455,-2.948836,-2.273490,-7.365405,-5.183188,-9.561302,0.771038,4.077602,1.334050,-9.841260,9.208819,2.425913,-3.861464,-0.503922,-4.468393,2.266446,8.044635,0.012684,-3.612276,-1.692539,-8.968304,-0.639281,-7.301614,6.030997,5.727663,-2.291202,-8.853052,-5.686213,9.529481,-5.817861,6.780481,4.319232,2.700576,-3.181837,-7.886086,-1.817314,-4.652469,-9.752014,-2.621157,-3.858713,6.657930,-6.766081,-8.118005,8.716971,-4.479859,-5.691640,2.991490,-6.557947,-8.901790,1.392844,8.170524,6.246560,-6.000612,-0.783318,2.948690,-0.569853,-0.853128,-7.253959,6.066029,-5.434783,-8.846378,9.543632,-3.576240,-3.532275,1.327053,1.229574,-8.644990,-1.654561,-8.965640,8.359317,5.792754,0.789331,7.990409,8.237988,9.703000,-7.864237,-4.006665,3.211160,5.117480,6.914455,3.061186,4.637099,-0.207136,-4.387265,-1.838798,-1.140895,3.093708,3.912598,-1.173019,-8.555793,-3.326925,3.112577,-0.001055,4.636755,-2.569929,-4.679654,6.504242,1.456072,7.543742,1.452662,-8.190030,-1.857769,6.320990,-0.853835,-1.963063,4.312815,7.660707,8.600877,3.574763,7.365271,7.922086,-5.905418,0.126237,-4.190248,2.520152,-7.409734,-5.777218,-9.646735,6.910908,5.698791,6.081022,-4.159224,7.200842,-2.201941,3.607662,-5.311121,-1.138482,0.890362,9.248911,-7.269738,7.252716]], dtype = "float32")#candidate|8711|(2, 312)|const|float32
var_8712 = relay.var("var_8712", dtype = "uint32", shape = (27,))#candidate|8712|(27,)|var|uint32
const_8713 = relay.const([6,-7,4,9,-5,-5,-3,2,-6,-9,8,-7,-1,-1,7,-8,-6,10,-10,-3,5,-9,7,-2,6,1,3,6,-7,2,1,-8,4,6,-4,8,-6,-10,6,8,-1,5,9,9,-8,-1,-10,5,-7,-7,-3,2,10,4,2,-8,-3,9,4,-7,9,-3,-8,-3,3,-6,5,-6,10,2,2,-6,-5,-6,-1,5,-2,8,-7,5,-1,6,10,10,2,1,4,-10,10,-1,-8,10,-3,1,1,1,8,-7,-9,-8,1,-6,5,-5,1,-8,2,-10,8,6,9,1,-7,6,7,9,-3,4,-3,5,-5,-5,-10,-4,8,8,-9,5,-7,-4,-8,2,-9,9,5,6,-6,-9,-5,5,-4,1,1,-1,-10,3,-1,-9,-1,-4,4,-8,-10,5,1,1,2,-1,9,-1,9,6,1,10,-6,2,-4,-8,-9,-2,-2,8,-4,-7,2,-1,-4,-1,-4,10,-7,10,3,8,1,-4,4,9,2,-2,-5,-5,1,5,1,7,-8,-1,-3,6,-10,8,-4,-3,-4,3,7,-10,6,-8,-3,-2,10,-5,-2,-10,1,8,7,-4,-6,2,-4,6,8,-4,-6,3,2,2,6,10,-2,-5,-2,1,7,-3,-6,1,-10,-6,-5,-6,-6,3,-10,1,3,-2,8,-3,9,-6,-3,-8,3,-9,2,7,4,1,-5,10,10,-3,7,3,-9,2,5,-5,3,-1,9,-4,10,-1,-8,2,-2,4,10,7,6,9,9,-4,-8,-9,10,4,-9,-4,-5,-2,-3,8,6,1,5,7,-6,10,3,4,5,5,2,-10,8,-4,2,2,-7,2,-5,-10,10,-4,9,8,6,7,-7,-3,-9,-5,10,9,-2,-1,-9,-7,-9,2,9,-2,-7,2,-4,-6,5,3,1,-3,2,8,-5,2,6,-3,-6,-3,-2,5,-2,-8,-4,-2,-3,-6,7,8,-10,5,6,2,-3,-5,10,10,2,-10,-2,-1,-5,2,2,-5,2,-10,-8,-10,-7,-7,-6,-2,-8,5,5,5,-7,-4,-10,-1,9,-3,-6,-9,8,2,2,2,-6,-9,7,1,-10,-10,1,3,7,-8,-8,3,-2,2,9,-3,-5,8,-6,-3,-1,9,8,-4,9,-5,-9,-7,-5,5,4,-1,-2,-10,-7,7,6,1,-7,9,7,4,-2,8,-1,1,3,-6,-2,-3,9,-6,5,1,4,-9,3,8,-4,3,9,3,-10,5,5,-9,-8,-1,4,-5,3,-1,9,2,-8,-1,10,9,2,10,-3,-4,-7,4,-1,10,-6,10,2,9,6,-7,5,-6,9,6,6,3,-7,5,-7,-1,7,8,-1,9,8,-6,9,2,8,10,-10,-7,9,4,-8,10,-6,5,5,7,-10,-8,4,7,-8,8,-9,4,9,-5,-4,-2,-3,-8,-9,-4,9,-7,4,5,-10,-1,-9,6,-4,5,-6,-6,2,-9,-10,-1,7,-2,-4,4,-1,5,-9,-8,-4,8,-9,-10,10,-5,4,-7,-6,3,-5,5,1,6,1,-2,-8,-6,7,-2,-7,7,-5,-4,3,-2,-6,6,7,9,7,-4,4,-2,9,-9,-2,-8,1,9,-1,6,-8,-5,4,2,5,-4,9,9,-1,2,5,10,4,-3,10,2,-10,2,1,5,1,5,7,-8,4,-4,2,6,5,4,-9,-1,5,4,7,-4,-1,10,4,-8,10,9,8,-9,-7,6,9,-4,3,10,7,2,-2,-6,10,7,8,1,1,8,-5,3,-4,-8,-7,8,-2,-2,3,-3,3,-3,3,-8,-6,-6,1,-2,-8,-3,-1,-9,-9,9,10,-5,9,-6,1,-1,-8,-7,6,-5,2,-9,9,7,-10,2,-6,5,-4,-2,-4,-6,-1,3,-2,2,-10,-8,1,-9,-10,3,9,-5,-8,9,-1,-4,8,10,10,6,4,-9,7,-8,-10,-5,8,1,9,7,5,-2,1,-2,7,2,-2,-8,10,6,-6,6,-2,-9,-7,1,-8,-6,7,3,-8,5,6,8,9,4,6,-1,-7,7,7,-7,-3,7,4,3,-2,1,2,-2,3,8,5,6,-2,-7,3,5,10,-5,1,-6,6,3,-7,1,-2,-1,-10,1,2,-10,-4,2,-8,-8], dtype = "int16")#candidate|8713|(810,)|const|int16
var_8714 = relay.var("var_8714", dtype = "int16", shape = (1092,))#candidate|8714|(1092,)|var|int16
var_8715 = relay.var("var_8715", dtype = "int8", shape = (616, 2))#candidate|8715|(616, 2)|var|int8
call_8710 = relay.TupleGetItem(func_8331_call(relay.reshape(const_8711.astype('float32'), [13, 3, 16]), relay.reshape(var_8712.astype('uint32'), [1, 27]), relay.reshape(const_8713.astype('int16'), [81, 10]), relay.reshape(var_8714.astype('int16'), [1092,]), relay.reshape(var_8715.astype('int8'), [1232,]), ), 1)
call_8716 = relay.TupleGetItem(func_8338_call(relay.reshape(const_8711.astype('float32'), [13, 3, 16]), relay.reshape(var_8712.astype('uint32'), [1, 27]), relay.reshape(const_8713.astype('int16'), [81, 10]), relay.reshape(var_8714.astype('int16'), [1092,]), relay.reshape(var_8715.astype('int8'), [1232,]), ), 1)
func_5594_call = mod.get_global_var('func_5594')
func_5602_call = mutated_mod.get_global_var('func_5602')
const_8724 = relay.const([8.696977,-3.778287,3.637798,-5.572872,-3.037801,-2.960184,9.248254,-3.983814,-6.576947,4.254889,9.132336,-0.638996,-9.941901,-6.537323,3.052461,9.673439,-4.832705,8.963943,1.879826,3.409926,-5.315201], dtype = "float32")#candidate|8724|(21,)|const|float32
var_8725 = relay.var("var_8725", dtype = "uint16", shape = (420,))#candidate|8725|(420,)|var|uint16
call_8723 = relay.TupleGetItem(func_5594_call(relay.reshape(var_8712.astype('uint32'), [3, 3, 3]), relay.reshape(var_8712.astype('uint32'), [3, 3, 3]), relay.reshape(call_8710.astype('int16'), [1, 9]), relay.reshape(const_8713.astype('int16'), [810,]), relay.reshape(const_8724.astype('float32'), [7, 3]), relay.reshape(var_8714.astype('int16'), [182, 6]), relay.reshape(var_8725.astype('uint16'), [420,]), ), 7)
call_8726 = relay.TupleGetItem(func_5602_call(relay.reshape(var_8712.astype('uint32'), [3, 3, 3]), relay.reshape(var_8712.astype('uint32'), [3, 3, 3]), relay.reshape(call_8710.astype('int16'), [1, 9]), relay.reshape(const_8713.astype('int16'), [810,]), relay.reshape(const_8724.astype('float32'), [7, 3]), relay.reshape(var_8714.astype('int16'), [182, 6]), relay.reshape(var_8725.astype('uint16'), [420,]), ), 7)
uop_8737 = relay.cosh(const_8711.astype('float64')) # shape=(2, 312)
output = relay.Tuple([bop_8704,call_8710,var_8712,const_8713,var_8714,var_8715,call_8723,const_8724,var_8725,uop_8737,])
output2 = relay.Tuple([bop_8704,call_8716,var_8712,const_8713,var_8714,var_8715,call_8726,const_8724,var_8725,uop_8737,])
func_8743 = relay.Function([var_8702,var_8703,var_8712,var_8714,var_8715,var_8725,], output)
mod['func_8743'] = func_8743
mod = relay.transform.InferType()(mod)
var_8744 = relay.var("var_8744", dtype = "float32", shape = (14, 7, 16))#candidate|8744|(14, 7, 16)|var|float32
var_8745 = relay.var("var_8745", dtype = "float32", shape = (14, 7, 16))#candidate|8745|(14, 7, 16)|var|float32
var_8746 = relay.var("var_8746", dtype = "uint32", shape = (27,))#candidate|8746|(27,)|var|uint32
var_8747 = relay.var("var_8747", dtype = "int16", shape = (1092,))#candidate|8747|(1092,)|var|int16
var_8748 = relay.var("var_8748", dtype = "int8", shape = (616, 2))#candidate|8748|(616, 2)|var|int8
var_8749 = relay.var("var_8749", dtype = "uint16", shape = (420,))#candidate|8749|(420,)|var|uint16
output = func_8743(var_8744,var_8745,var_8746,var_8747,var_8748,var_8749,)
func_8750 = relay.Function([var_8744,var_8745,var_8746,var_8747,var_8748,var_8749,], output)
mutated_mod['func_8750'] = func_8750
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8893 = relay.const([[[-2.340598,2.238387,3.866842,7.370345,-1.518725,-5.219582],[-6.963080,-2.717187,4.215626,-6.647429,0.170762,2.546301],[-0.610790,-8.012250,9.437508,-7.952099,9.498305,-5.202783],[-6.404979,2.009283,-6.067160,-3.696087,-6.060590,-3.792943],[8.725329,1.683574,9.438421,2.195971,-9.908517,-3.104362],[9.369735,7.876166,8.848462,5.001336,-2.529342,-8.195155],[-0.423728,1.772691,7.894025,9.420510,-0.568978,-8.447617],[2.564123,-1.951853,1.918465,7.366216,5.967834,3.765442],[-7.002606,8.851043,1.006569,2.340600,-8.680475,8.537176],[-5.404011,1.887677,9.239640,9.781724,8.587208,-1.076747],[-7.397981,5.970833,4.500322,-8.289202,0.154001,-4.229598]],[[5.505431,-1.278283,-2.678902,-9.437196,-5.565619,-5.913051],[3.616113,-1.187506,6.870760,0.352391,-9.014131,9.192105],[-6.198880,8.726364,4.061598,-4.992642,9.839254,3.124846],[-3.412270,3.063037,5.797677,8.074812,4.679984,3.227221],[-4.031053,-7.280871,5.080943,-8.533041,-7.659718,9.867904],[3.533350,-9.165180,-7.908828,8.514171,8.827730,-2.041651],[-6.762908,3.298546,0.275552,-6.481308,-2.826386,2.948020],[-8.891336,3.588599,1.011486,0.443576,-9.381570,-7.667566],[8.427106,-5.760794,-3.954163,3.824352,-3.638332,-2.427040],[3.608885,2.000762,4.994527,5.679690,4.397174,-8.314855],[5.495871,0.181760,-2.532868,-6.073718,9.245684,-1.145229]]], dtype = "float32")#candidate|8893|(2, 11, 6)|const|float32
var_8894 = relay.var("var_8894", dtype = "float32", shape = (2, 11, 6))#candidate|8894|(2, 11, 6)|var|float32
bop_8895 = relay.power(const_8893.astype('float32'), relay.reshape(var_8894.astype('float32'), relay.shape_of(const_8893))) # shape=(2, 11, 6)
output = relay.Tuple([bop_8895,])
output2 = relay.Tuple([bop_8895,])
func_8898 = relay.Function([var_8894,], output)
mod['func_8898'] = func_8898
mod = relay.transform.InferType()(mod)
mutated_mod['func_8898'] = func_8898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8899 = relay.var("var_8899", dtype = "float32", shape = (2, 11, 6))#candidate|8899|(2, 11, 6)|var|float32
func_8898_call = mutated_mod.get_global_var('func_8898')
call_8900 = func_8898_call(var_8899)
output = call_8900
func_8901 = relay.Function([var_8899], output)
mutated_mod['func_8901'] = func_8901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9340 = relay.var("var_9340", dtype = "uint16", shape = (5, 15, 16))#candidate|9340|(5, 15, 16)|var|uint16
var_9341 = relay.var("var_9341", dtype = "uint16", shape = (5, 15, 16))#candidate|9341|(5, 15, 16)|var|uint16
bop_9342 = relay.add(var_9340.astype('uint16'), relay.reshape(var_9341.astype('uint16'), relay.shape_of(var_9340))) # shape=(5, 15, 16)
uop_9345 = relay.sqrt(var_9340.astype('float32')) # shape=(5, 15, 16)
uop_9350 = relay.log2(uop_9345.astype('float64')) # shape=(5, 15, 16)
func_7637_call = mod.get_global_var('func_7637')
func_7640_call = mutated_mod.get_global_var('func_7640')
const_9357 = relay.const([False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False], dtype = "bool")#candidate|9357|(117,)|const|bool
call_9356 = relay.TupleGetItem(func_7637_call(relay.reshape(const_9357.astype('bool'), [117,])), 1)
call_9358 = relay.TupleGetItem(func_7640_call(relay.reshape(const_9357.astype('bool'), [117,])), 1)
output = relay.Tuple([bop_9342,uop_9350,call_9356,const_9357,])
output2 = relay.Tuple([bop_9342,uop_9350,call_9358,const_9357,])
func_9361 = relay.Function([var_9340,var_9341,], output)
mod['func_9361'] = func_9361
mod = relay.transform.InferType()(mod)
var_9362 = relay.var("var_9362", dtype = "uint16", shape = (5, 15, 16))#candidate|9362|(5, 15, 16)|var|uint16
var_9363 = relay.var("var_9363", dtype = "uint16", shape = (5, 15, 16))#candidate|9363|(5, 15, 16)|var|uint16
output = func_9361(var_9362,var_9363,)
func_9364 = relay.Function([var_9362,var_9363,], output)
mutated_mod['func_9364'] = func_9364
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9427 = relay.const([[[6,10,9,-4,4,7,-9,5,2,8,4],[9,8,8,-10,-6,6,-4,6,3,-3,-9],[7,-10,-8,2,-8,9,-9,-9,-9,-7,-3],[-9,1,10,-2,6,-2,8,-7,-1,1,10],[-4,-9,6,-7,9,7,-8,1,5,-9,4],[-5,10,-7,-6,1,3,-5,7,7,8,3],[-10,-5,-2,4,-6,10,-6,6,-3,2,-10],[7,8,1,-8,1,-1,-7,-5,-2,9,-6],[8,-7,-1,-6,-7,-8,7,-9,6,-4,-8],[-1,-1,1,-4,7,1,2,6,-2,-1,7],[2,2,8,4,-9,7,9,-2,-7,6,4],[1,-7,2,-3,-7,-5,-2,9,8,-4,-7],[-5,7,-7,-3,4,2,6,1,-5,4,-1],[4,6,-5,-7,3,-3,-7,5,3,1,-3]],[[3,8,-4,9,-1,-3,-3,5,-3,3,1],[6,9,5,9,8,-2,10,-9,1,-2,-6],[5,6,-2,-3,10,-8,1,2,3,-1,-4],[-3,10,4,-6,-6,2,8,4,4,5,4],[7,-5,5,7,7,-4,-2,10,7,-1,-9],[-2,2,-6,9,-2,-7,9,5,1,4,10],[4,-3,5,1,-3,-6,10,-2,3,5,3],[1,-10,1,-10,7,10,-6,-4,-8,9,-3],[-7,5,-1,1,6,1,8,9,2,3,-8],[4,3,10,-7,10,8,-5,8,2,-9,2],[-4,5,-9,-5,-5,-10,2,-2,-2,2,-8],[8,2,-1,-2,6,6,-1,10,-1,-6,5],[2,8,10,4,6,5,4,9,-3,-4,-8],[3,3,-3,6,9,-5,-1,-7,-4,-1,-3]],[[7,2,8,-8,-3,4,-6,4,-5,1,10],[-5,-9,1,6,-4,5,2,4,-2,10,2],[3,7,9,-5,1,5,9,-9,-10,-9,-9],[-10,10,9,-8,-5,6,-8,-1,5,3,10],[-8,8,-2,-4,-5,-5,6,4,-6,4,10],[-7,5,2,4,9,-1,-7,-3,7,5,4],[7,-5,6,4,-1,8,5,-3,2,-8,-10],[-9,7,-2,7,6,-5,-8,2,8,7,9],[-8,10,8,-4,-4,-3,8,-5,-3,-10,2],[7,1,7,-3,-9,-3,-2,8,9,-10,5],[10,-4,1,-9,-3,-8,6,-4,4,-2,4],[-7,-2,4,-3,-10,9,5,-10,-4,3,-1],[9,-7,-3,-1,-3,-9,7,8,2,-10,-4],[4,1,8,2,-2,7,4,-8,-6,3,7]],[[1,-9,-5,-6,6,-4,-8,9,-4,-10,10],[-10,9,1,-3,4,-6,-7,-2,10,4,2],[-6,1,2,2,5,2,2,-10,4,9,4],[2,10,3,8,6,-8,6,10,6,4,1],[-1,-8,-4,-6,-4,6,2,8,7,-6,2],[-7,-1,-8,-10,10,-10,8,-5,4,-5,-3],[-10,-9,-6,-1,8,-1,-2,-4,7,-6,2],[3,-8,-9,7,-10,-3,-3,-3,-5,6,-9],[-6,3,-9,-2,-2,-10,-4,-1,-1,8,-1],[2,7,6,5,2,-10,-5,-5,-4,4,5],[-5,8,9,-9,-7,6,-8,7,-8,5,7],[1,-6,7,8,-7,10,8,-1,2,8,4],[-10,1,4,-8,-3,1,1,-9,-1,4,2],[-3,-1,-3,-4,-8,9,-4,3,-2,-10,-6]],[[-4,-4,1,-6,-1,6,-7,2,-5,8,10],[-7,-4,1,-3,-7,-4,-1,6,-10,8,1],[-4,-7,-5,-4,-6,10,-1,4,-2,10,9],[-2,9,-3,7,-4,-9,3,5,9,-10,3],[-1,-5,7,8,-5,4,10,2,-3,10,7],[-6,-1,-8,-5,2,8,-7,-3,3,-5,3],[-6,5,-3,-1,-10,-5,-3,2,3,-2,-3],[8,-5,-3,9,8,-5,5,9,8,-5,10],[7,-4,8,-3,-6,-7,1,-3,-8,-8,-7],[-10,-10,-6,3,-3,-2,3,4,2,-5,4],[9,-8,10,1,-8,-4,9,-3,7,-3,2],[10,-1,7,9,4,9,-6,-6,4,6,-2],[7,-7,9,5,7,-9,-8,-4,8,-7,-8],[3,10,7,7,-2,5,1,1,-7,-3,-5]],[[-3,-10,-7,-5,9,-8,-7,-6,-8,-9,10],[-7,7,-1,2,-3,-7,3,9,-8,10,-7],[2,-1,4,3,1,-6,6,3,5,3,9],[3,-6,6,6,-2,7,-1,5,-6,6,9],[1,-1,7,6,2,4,2,-3,-3,9,10],[4,7,-4,-6,-8,2,-3,3,-5,-1,-4],[-10,3,2,7,3,-9,-3,-5,3,-6,-3],[6,-8,-3,-3,-4,-4,8,9,9,-7,4],[1,-9,-3,1,-1,3,9,10,5,-5,-1],[4,-10,-3,1,-7,9,7,8,-9,7,10],[-10,-10,-6,-3,-9,8,1,-6,-9,5,8],[9,9,7,-9,-4,9,3,10,-4,-4,8],[-2,-6,-9,8,-2,-3,4,-9,-9,2,-8],[5,3,-8,-10,10,3,2,8,9,-8,1]],[[2,-4,4,1,5,1,-3,-4,-7,6,2],[-2,-9,-10,-3,6,-2,8,-8,-9,5,10],[-9,3,-1,-6,7,5,8,1,-6,-7,-9],[6,4,-2,-7,8,-9,4,10,-4,9,-10],[-5,-8,-8,-1,2,6,-5,6,1,10,5],[-1,-5,1,-4,-10,-2,10,-5,-8,-10,-4],[3,9,-4,-5,2,-5,2,-8,4,5,-8],[7,10,2,-10,-7,6,8,-2,10,-10,10],[8,-8,7,10,10,3,-5,-10,-1,7,-2],[7,7,-9,-10,-6,-8,-3,-10,2,-2,-2],[10,-1,8,8,2,-5,3,-3,2,3,8],[4,-3,-7,-1,-2,-10,4,3,-7,9,2],[-5,-7,8,4,-8,-3,-5,5,-9,1,-2],[-7,-8,9,-8,1,10,8,-8,4,-3,8]],[[-7,-5,2,6,-2,-10,-9,10,-10,1,-9],[-7,-1,2,8,-1,-4,1,-4,-1,-2,-9],[-8,10,-9,9,10,-2,7,-5,5,9,-6],[-5,-7,-7,5,-10,4,-4,-1,-9,-1,1],[9,2,-4,3,-1,-10,-5,5,-4,7,-7],[1,4,-8,-2,-2,5,-5,6,8,-10,-6],[-7,7,10,-9,4,4,9,4,10,-4,-3],[3,9,-9,-10,-4,-9,-6,6,5,-5,-10],[2,-8,2,-7,-1,6,-4,8,1,-10,-4],[9,-4,-10,7,5,-3,-4,-5,4,3,-5],[-5,2,-7,-10,1,-3,-6,-7,-2,-4,5],[4,1,5,5,5,-7,10,9,6,-9,-8],[9,-10,8,-8,4,-3,7,2,-2,-4,2],[-2,3,-3,-5,1,-6,7,-7,-7,6,-7]],[[-1,-6,4,9,-5,-8,-7,5,4,9,5],[6,-2,4,-4,-2,-7,-8,-10,6,-8,-6],[-5,-10,-4,-9,-7,-2,7,-9,-6,7,-1],[4,-2,9,-5,6,5,-9,4,-10,2,-10],[-10,1,3,-7,3,-8,-2,-4,1,8,-5],[-4,4,10,6,6,-10,-1,-5,9,-2,2],[3,2,5,9,5,-8,5,-7,-9,-6,2],[-4,-6,6,10,-1,-3,9,2,-9,-9,-8],[-7,5,9,-7,-1,-7,-5,-6,-10,-10,-1],[-10,-4,2,6,-8,-4,-10,-8,-4,-7,-5],[-6,9,-7,7,-7,3,-8,5,-2,8,7],[2,5,4,9,-6,2,8,-4,9,4,5],[4,7,-4,-5,2,-8,-3,1,-4,4,-2],[-7,-9,-10,-8,-6,-4,2,7,8,-5,8]],[[-1,-10,6,10,8,6,4,2,-10,6,-1],[-1,6,-10,8,-10,9,-1,-6,6,-8,3],[8,-6,4,-2,10,5,-5,-8,-5,1,10],[2,4,-2,-10,-6,2,1,-6,3,8,-4],[3,5,10,-3,-9,6,4,-10,5,-5,10],[5,8,-1,-5,1,-7,-7,4,7,6,-1],[-5,7,6,7,9,-3,-1,5,-7,4,-3],[-1,3,-10,-5,-1,1,8,-1,5,-10,-9],[3,5,-8,-4,-3,8,4,7,1,10,10],[-1,-5,-1,7,4,-3,1,-1,4,1,10],[-4,-7,-8,8,4,-9,10,-4,9,8,-10],[-3,4,-6,1,-2,-4,-9,5,10,-1,-8],[8,-7,-3,-9,5,-3,1,-6,7,9,-9],[6,8,-3,7,-9,5,-4,-2,-1,-6,8]],[[6,-4,-3,6,9,-8,-8,-5,4,9,-9],[-10,-5,10,7,-3,-1,6,7,-10,4,5],[-8,-8,-6,4,10,-8,2,10,-7,2,9],[-4,2,3,9,-9,-2,-1,-3,-6,6,-10],[4,-10,3,9,-2,8,-6,-1,1,-3,-6],[-1,-9,4,1,-6,3,3,7,-8,4,4],[-9,4,4,2,4,-1,-10,-6,8,-7,-7],[-9,-2,-3,4,-6,-10,-2,-2,6,-8,6],[-1,-3,6,10,-8,-6,-5,-1,-6,-10,9],[-3,-6,6,-6,-4,-5,-6,6,-4,2,-7],[1,-5,-4,3,7,-6,-3,-9,-5,7,-1],[-10,-6,1,6,-6,7,4,-8,-7,-1,10],[-5,4,-3,9,4,10,6,10,1,-1,-9],[8,-1,2,9,-9,-10,-4,6,6,-5,-9]],[[-10,-6,-7,7,-1,-1,1,-6,5,7,-10],[10,-6,-3,-5,-5,3,3,-6,6,-7,-2],[2,1,5,5,-10,-1,-3,9,-1,4,6],[6,10,-1,-8,-7,5,10,-5,7,-9,-4],[-7,2,-7,-1,-6,7,8,-4,5,9,-9],[-1,-1,10,1,4,-6,3,5,-8,-1,-8],[7,5,1,-3,10,-5,-4,-3,-8,2,-5],[9,9,2,4,-6,2,-2,-5,5,9,-8],[-6,10,10,-10,-5,7,-8,-3,-1,-3,4],[9,-2,-7,-6,-6,6,8,5,2,-9,-5],[10,-9,-1,-5,2,2,-10,-5,-4,9,-4],[-7,-5,1,8,10,6,-8,-4,9,8,-9],[2,3,2,7,10,-5,5,-8,-1,-10,8],[3,-2,7,6,8,-10,6,-6,-6,-9,1]],[[8,-6,8,8,-5,-9,3,-8,-3,-7,-1],[3,-5,2,-3,-9,-2,9,-2,-5,6,-5],[1,-8,-4,-7,7,2,10,-10,-7,-3,-6],[1,9,-7,2,-6,7,-7,-10,-6,6,-10],[2,-1,-1,-9,7,4,-8,3,-5,4,2],[3,-6,10,6,8,2,-8,4,-9,-9,-8],[-4,-6,-1,-10,-2,4,5,1,6,9,1],[-10,-7,9,-1,-3,-10,-5,1,-4,2,2],[4,9,7,9,-7,4,-7,10,-1,-5,1],[-4,5,5,7,-5,3,2,-3,-7,-9,4],[5,6,-4,1,-10,8,-4,-5,2,-4,5],[4,-9,6,-5,6,4,-8,-2,4,5,-9],[4,-1,-5,1,5,6,8,3,-4,-5,-2],[7,-3,8,-2,8,3,4,4,-8,3,-2]],[[7,4,4,-10,-2,10,7,-5,5,6,-3],[-5,-8,-6,6,9,3,3,-5,-6,9,4],[4,-6,1,8,-4,10,4,2,6,-3,7],[10,10,-8,-2,6,10,-8,6,6,8,4],[6,2,-7,2,-1,-5,8,10,6,9,-8],[10,2,-3,-3,-2,3,2,-1,4,-9,-4],[2,1,2,5,-9,-3,10,3,5,4,-1],[7,-1,7,10,8,-7,-10,-9,8,-10,8],[7,3,7,9,4,-4,-7,-6,2,8,1],[8,-5,-7,-5,4,6,-5,7,-5,-10,-7],[-9,5,-4,-1,-3,6,-5,-2,8,4,7],[1,5,-4,-2,-3,3,2,-9,4,-4,-1],[-5,-9,10,9,5,1,5,-5,8,9,4],[-1,-6,6,-9,-9,9,-7,3,8,7,8]]], dtype = "int16")#candidate|9427|(14, 14, 11)|const|int16
const_9428 = relay.const([[[-4,-4,-9,5,-8,-6,5,-4,5,10,-6],[-8,-9,1,7,-5,1,2,-6,-9,-6,-1],[-4,-4,3,-5,-6,3,1,-3,-4,-9,-8],[4,-8,8,-1,6,6,-6,-4,9,5,-5],[-4,5,9,-4,5,-2,-4,-8,1,-2,-4],[5,7,-9,-6,9,7,1,-7,4,6,6],[6,6,-10,2,5,1,3,-6,-8,-10,-10],[10,7,-1,8,4,-3,-1,7,6,-1,5],[9,-3,-6,-2,6,-4,-6,8,4,9,-10],[-10,-4,-8,5,8,-3,-1,-6,5,-4,4],[4,5,-4,5,3,-1,-4,-1,-2,-3,2],[6,-8,9,-8,4,-7,-9,-1,4,-2,2],[-6,4,-4,7,-2,3,3,-2,4,-4,4],[1,10,3,2,9,-10,8,-2,3,7,6]],[[7,1,-5,-2,8,6,9,-1,5,-9,-5],[-3,1,2,2,-7,5,2,-3,-1,-8,-1],[4,-9,2,-6,-6,-3,-4,6,3,5,-1],[10,-1,-7,7,9,-9,-10,6,-9,6,-3],[7,8,-3,7,-2,-10,-9,-4,-4,-6,1],[6,-6,2,-7,4,-4,-5,7,-3,-1,4],[9,-4,2,5,-10,1,-6,-7,7,10,-6],[-10,-6,-4,5,9,-7,-4,7,-2,-8,2],[-5,-8,2,6,2,-3,-9,7,4,-6,9],[7,9,2,2,3,4,-2,1,6,-5,4],[-5,-8,7,7,-3,-3,-4,2,-8,5,-8],[8,-8,5,-3,-7,-9,5,-10,3,9,-8],[8,2,6,-10,6,-8,-2,8,-3,4,-2],[8,-3,7,-7,-6,-8,-3,-6,1,-10,-6]],[[1,10,1,-5,-2,6,6,-9,10,-7,6],[3,4,-3,2,-9,-5,8,-10,8,-8,9],[-8,4,-6,8,-5,-3,6,5,7,-4,10],[8,-5,-4,-9,-6,3,-6,-2,-8,-5,8],[-9,1,5,-10,-7,7,-7,4,7,-4,1],[7,4,2,8,-3,3,7,-1,-4,-7,10],[-5,-9,-6,1,3,-3,-7,6,-5,6,-3],[5,-2,-10,-2,-3,9,-7,7,4,-10,-6],[-10,-4,-9,2,-1,-6,5,-2,-10,-2,-10],[-4,1,-8,-3,-7,5,9,-10,-6,7,6],[9,9,-6,8,3,5,-10,-4,5,7,5],[-6,8,-9,-5,6,-4,3,9,-6,-3,-6],[-1,-5,6,-6,7,-7,3,9,1,-4,-4],[5,-8,4,9,4,2,6,-1,-8,-6,5]],[[-1,9,-2,8,-10,7,-1,9,3,-10,3],[1,-10,-4,4,-6,-4,8,8,3,-9,5],[-3,2,10,-1,9,8,-2,6,2,2,8],[3,8,-3,-6,8,5,-7,3,-1,-1,2],[1,-3,1,-8,-7,-5,7,-3,6,-4,1],[-9,1,-7,-9,10,-8,-1,-8,7,10,-10],[10,9,7,1,7,2,-2,-2,9,-8,-3],[-3,-10,6,-4,4,-2,-2,-6,-6,-2,9],[-9,-4,-3,3,-3,-8,-9,-10,1,-7,-7],[-1,-1,-4,-7,-9,-5,5,5,-7,6,-1],[8,-10,-9,3,9,9,-2,4,-7,8,-6],[-2,-10,-1,-4,5,-8,-10,-5,1,6,-3],[2,-10,10,2,10,9,5,-8,4,1,-10],[7,6,7,-9,-2,8,3,-9,-6,-1,9]],[[-4,-6,-10,-10,-10,4,-6,-7,1,-7,3],[-7,-5,9,7,-3,-5,-1,8,7,-8,-1],[2,-1,-1,-4,-10,-7,3,2,-6,-2,6],[7,-3,-1,5,-7,-3,-4,9,-7,6,-6],[9,-8,5,-7,-3,6,-9,9,10,-3,-4],[-5,2,2,5,-8,7,1,-7,-4,3,6],[-6,7,9,-7,6,8,4,-9,-9,5,-4],[8,5,10,4,9,9,6,-6,4,6,4],[-3,1,10,8,4,-5,-1,-6,-1,5,-1],[-1,-5,-8,7,1,5,-4,1,10,9,4],[-2,-5,7,2,-10,-4,-8,-5,4,-6,9],[-7,1,6,5,-2,-2,10,6,7,7,-10],[-4,1,-3,1,7,4,7,10,2,9,-8],[5,-10,-9,-6,1,5,9,1,2,10,-5]],[[-6,9,6,5,-4,5,5,-3,2,10,-8],[-7,-1,-6,-5,-7,8,10,-3,-6,-5,3],[7,-10,9,-8,3,7,-2,-6,-8,9,-1],[7,-4,-1,8,-9,-1,3,1,1,7,-9],[-3,-8,-9,6,-6,2,-10,8,-10,-10,-6],[-2,-6,-2,-1,6,7,4,10,4,4,5],[10,9,-10,2,4,6,5,7,-10,-1,-6],[3,-6,4,-4,2,-2,-5,-4,2,-8,-9],[8,-10,-10,5,7,-2,4,1,-4,-3,7],[-3,-2,-8,5,7,5,2,-10,9,-7,-8],[-8,-1,3,-3,10,9,2,6,5,9,-3],[-5,-9,10,-7,7,9,-2,-1,-5,10,5],[-3,7,4,-10,-8,10,9,-3,10,4,9],[-4,-10,9,2,1,-5,-3,-6,-6,8,-2]],[[-7,5,-7,7,-6,4,9,-7,-9,6,1],[-5,-4,3,-6,-9,2,-10,-5,-6,-7,9],[6,-5,-8,-3,2,-8,-6,6,-8,6,-1],[10,1,-8,-8,4,-5,-1,10,2,1,-8],[-10,10,1,9,-10,7,5,-2,2,-7,5],[-2,3,8,-5,-10,1,5,3,2,-3,7],[-4,-2,-2,-5,-8,-3,10,-2,10,-2,-1],[-2,10,-8,-5,-2,-1,-5,-3,2,-7,2],[-8,2,8,8,-10,-2,4,-3,4,-8,-10],[-9,-3,-4,-8,8,1,-6,6,8,4,-6],[1,-9,-7,-1,-10,-1,1,-3,-2,-9,-1],[-3,2,-2,-3,-7,10,-1,-1,-5,1,3],[-3,-5,7,9,-10,6,-6,-8,-7,-3,-1],[5,7,2,-9,-1,1,-7,-1,-8,-1,-5]],[[-3,5,-10,-8,-5,4,6,-1,2,5,-10],[-2,1,4,-4,-10,-1,-6,7,3,-8,5],[4,-7,8,10,8,-6,3,2,8,4,-9],[4,4,-8,-6,-6,-9,-9,-9,-2,2,-6],[10,4,-10,-1,9,-4,3,-7,7,1,10],[-10,10,4,1,-9,-7,-1,1,7,7,5],[7,1,7,9,-4,6,2,6,-1,-6,-7],[-7,-1,8,-8,-10,-5,9,4,1,7,-2],[7,-4,-4,-7,7,9,10,6,10,-3,6],[7,1,8,5,-9,-9,-1,1,-5,-3,6],[2,1,7,-9,7,-5,-3,-8,-4,-3,10],[-7,3,1,4,9,-9,-10,-4,1,4,-2],[8,7,9,-4,-3,9,-3,-2,-8,-5,-1],[5,-5,-9,-2,-7,-2,-4,-6,9,-1,7]],[[-7,-1,2,-1,-2,-8,-5,-5,1,9,8],[-4,4,-4,-2,-7,2,5,5,-4,-6,-3],[3,-8,-9,8,2,2,7,-1,6,1,7],[9,4,8,-10,-1,-8,-5,-7,4,5,7],[1,3,5,5,-10,3,-2,3,1,-2,4],[4,10,-3,6,-9,10,-4,3,-9,8,6],[3,9,-7,3,-10,-3,6,7,9,-9,-5],[-4,-4,1,6,-1,1,3,3,-9,4,5],[-1,-2,-8,9,-5,4,-7,3,-6,-2,-6],[-5,2,4,-8,-6,1,7,-10,-5,-9,-6],[5,10,6,8,-9,-1,-9,-7,-3,-3,-4],[6,-9,8,-3,6,6,9,8,-3,4,-9],[8,9,-2,6,5,9,6,-1,4,6,3],[-3,7,-9,-8,4,-4,-7,-7,2,8,7]],[[-9,-2,-8,-4,-6,-4,-2,3,-1,6,-2],[-4,10,5,5,2,2,10,4,1,-10,-2],[7,-2,6,4,5,-9,3,-2,7,4,-10],[9,8,-4,6,3,-5,2,5,9,3,4],[3,-4,-10,10,-5,-1,-1,-3,3,2,1],[7,-9,7,-6,8,6,8,2,-3,-8,-10],[-1,8,9,2,-6,-7,7,7,-4,3,-8],[-6,-10,5,-5,-7,-8,-10,8,8,-5,9],[10,7,2,5,-10,8,8,-6,-10,9,1],[-4,5,3,8,4,-7,-1,-1,-6,-7,-9],[-10,8,-1,8,8,10,-4,3,-4,-10,-10],[-7,9,-9,2,1,-4,-1,-8,4,-1,-1],[-9,6,3,-2,9,1,-7,-2,10,-10,-4],[7,10,-10,-10,-7,-7,-10,-1,5,-6,-7]],[[9,-1,-5,-3,-9,-1,-6,1,3,-4,-1],[5,9,-9,6,-9,5,6,-8,-9,1,-8],[-4,-10,-7,9,1,7,2,6,-3,-7,-4],[8,-1,-10,8,7,7,9,4,-1,2,6],[5,3,6,6,-2,9,-1,6,-9,1,4],[1,8,2,9,3,9,-1,8,4,-2,-5],[-4,-4,4,8,-3,-6,10,-10,-8,-6,-1],[-2,6,10,9,-3,-6,5,-2,8,1,-8],[-3,-3,-1,8,5,2,-5,1,8,8,-3],[-4,5,10,-5,10,-5,1,-1,-10,10,-10],[-4,1,-7,4,2,-2,-9,5,-1,3,8],[-5,-4,7,-7,-9,2,-3,-10,8,6,-1],[4,-10,-10,4,9,-9,4,-7,5,-10,-9],[-7,-1,-3,4,-9,-1,-7,3,1,1,-5]],[[7,4,9,10,-8,-6,-9,3,4,-6,-2],[-6,-2,-9,8,-8,5,9,-7,-1,-6,-3],[8,10,1,-7,-9,-9,1,-6,9,3,7],[9,1,-10,-9,-1,10,-6,-9,3,7,9],[-8,-6,10,-3,1,10,2,-8,2,7,-1],[2,-8,-8,-4,3,-3,-1,10,7,-7,-3],[4,1,1,7,-1,-3,-3,-5,7,3,7],[-2,-9,8,7,-7,5,8,-8,-9,5,9],[3,7,2,-2,3,5,5,9,7,3,-6],[7,8,-2,-7,9,6,10,5,6,7,9],[7,4,-4,5,9,-5,-9,8,-9,-6,4],[-3,-9,4,-4,-6,10,4,-8,-7,2,-2],[8,-7,-8,4,-10,-10,9,2,8,2,-9],[-6,-7,4,5,-2,-5,-2,3,-6,4,-9]],[[9,-4,-3,-8,7,9,-7,5,8,-4,6],[7,-3,-10,8,-10,5,5,4,-10,7,5],[2,-5,5,5,-7,-1,-5,7,-4,-10,3],[-7,-1,8,-6,-2,-10,1,10,1,8,8],[-4,-7,-4,-9,4,-5,-3,-3,-3,1,3],[3,8,1,-5,-9,5,-9,-3,-7,-4,-10],[-3,-8,-7,4,-1,-5,2,-4,6,7,-1],[2,7,-1,-10,-10,5,3,-6,-3,-5,-5],[4,-1,-5,2,7,10,-3,-4,3,10,-1],[9,10,-4,10,-10,-1,5,-1,1,-10,3],[1,8,1,-9,1,-10,10,3,-5,4,-8],[-1,-5,9,3,-9,-9,-8,5,3,-9,-6],[-8,9,-4,9,-10,-10,-5,10,-1,4,-8],[-10,-4,-8,7,10,-2,1,1,-9,2,-6]],[[8,-5,-7,-9,-1,-7,-2,-6,10,4,-6],[-10,-5,-8,8,-4,-1,5,5,-2,-3,-3],[-5,-5,4,7,-4,-9,-5,6,2,-10,-8],[-5,-1,1,-6,-2,-3,8,-6,-9,1,9],[-6,1,-6,5,8,-1,6,6,8,5,-2],[-1,7,9,10,5,-5,-6,-9,-7,8,7],[-9,6,-2,-9,3,5,1,-7,1,7,-8],[9,1,-6,5,2,8,-3,10,-7,1,-2],[-3,3,1,-2,-2,-10,-8,-3,10,6,5],[10,-1,-10,-6,-7,1,5,-10,5,-7,-5],[9,-7,-3,-1,-4,6,8,2,-8,5,8],[3,6,-8,-3,9,8,5,8,-10,6,10],[1,10,-10,9,6,4,2,-6,-6,8,-10],[5,-8,-2,2,10,5,-3,6,3,-3,-5]]], dtype = "int16")#candidate|9428|(14, 14, 11)|const|int16
bop_9429 = relay.multiply(const_9427.astype('int16'), relay.reshape(const_9428.astype('int16'), relay.shape_of(const_9427))) # shape=(14, 14, 11)
bop_9432 = relay.maximum(bop_9429.astype('int8'), relay.reshape(const_9427.astype('int8'), relay.shape_of(bop_9429))) # shape=(14, 14, 11)
func_4483_call = mod.get_global_var('func_4483')
func_4490_call = mutated_mod.get_global_var('func_4490')
const_9442 = relay.const([7.668197,8.848490,4.239879,9.208240,7.212495,0.611413,0.797762,5.345180,-5.310951,2.684625,3.205965,-4.337233,7.559536,-5.098669,-7.187567,-3.534560,-0.853532,-1.584052,-1.298887,-0.072240,-3.838422,-3.058634,5.397949,-6.500561,4.628649,-3.725807,-3.947677,7.769334,4.068433,-1.782175,1.052628,4.661028,-6.839525,3.995982,3.829667,-1.295687,4.376592,6.561947,-1.775611,-2.952184,-3.440556,2.734015,8.315103,-3.986645,-8.735005,-8.769215,1.172083,3.410999,3.889403,-2.596392,1.340504,-1.335946,2.889515,9.587577,5.978356,-8.342256,2.805695,-3.000737,-4.727571,8.978248,5.354459,-4.646692,0.897641,-8.722561,-4.109763,-0.025355,3.276113,-6.177512,-8.569214,9.310942,7.629985,9.401362,1.692545,6.244121,5.736921,-0.974261,-7.044770,8.444067,-6.217843,-5.402620,7.787370,-0.185373,-9.539113,3.511381,3.504346,-7.635115,-8.444642,9.457112,-3.649705,6.259701,8.896011,-5.574859,-3.900769,3.403331,-7.164258,2.619189,-9.069733,-0.320831,-0.430027,-1.499697,-2.034781,-2.489259,-3.470738,-4.018572,-5.058127,-8.439210,6.467766,6.338074,5.887402,0.106316,9.384355,7.652324,-5.104744,-3.001042,8.606417,-4.212388,7.301825,7.089204,-5.776686,-3.543381,4.494111,-0.205553,-0.785906,0.781457,6.117819,5.690682,9.555580,-1.531844,-8.473061,4.913852,7.408289,-0.858495,-6.956447,8.966376,5.058867,-5.034494,-3.015845,-7.825954,-9.385615,-8.670934,-6.287086,-7.302647,-9.569033,6.177243,2.388604,4.730599,6.863617,-8.875292,2.207011,-2.074830,4.516842,5.555761,-0.541599,-0.909054,1.489874,-0.345249,-4.906580,-7.846520,0.743953,-2.399625,-7.405966,-5.683163,5.467125,6.437745,-1.583852,7.137698,-8.796935,6.303147,-6.028339,-7.341392,4.783307,4.391395,6.295813,-7.510196,-2.147733,-0.913804,-2.751184,-1.950476,3.134326,-1.969715,5.826925,4.060717,1.716399,-2.457529,7.104996,6.479203,1.380057,-4.390442,-7.414216,-2.195389,9.193334,3.777379,0.584825,4.745180,-5.435146,-6.162558,-8.429092,3.042305,-1.442080,3.574332,-9.825715,-7.835454,-6.209438,0.288897,-8.123951,3.971984,-3.644463,5.039636,-0.055874,-3.174733,2.741145,-4.101692,-1.290154,6.978421,-3.684020,-1.480375,0.737791,-9.829349,-8.559260,0.583635,6.916230,-9.742913,1.017244,8.784376,2.148301,-3.943529,-5.999808,-2.389175,1.490926,-7.596447,-8.788150,-9.837940,7.110215,7.169450,-7.994304,-3.387840,6.694894,5.653367,3.987444,-0.616379,-9.308545,7.619335,-3.016487,-0.437278,8.552892,8.214244,5.940539,3.378435,-3.524834,-2.809721,9.044543,9.758484,-3.497874,-8.747905,0.829161,-0.736951,7.370566,2.462276,1.084240,7.975671,-5.843401,-6.707826,6.415602,-6.068338,8.981687,-8.829804,-9.514936,6.716021,6.402597,-0.609446,8.697674,-3.306076,-0.449574,-2.917929,1.844177,-1.340491,-2.715392,-0.413385,-4.426650,3.448446,9.128400,2.607766,7.792313,-1.742044,-4.326761,-0.124449,3.453233,-2.725024,-4.314613,4.584995,7.498093,6.534833,9.061400,6.240630,-0.184452,3.206055,-0.326233,2.567985,3.140338,-7.872289,-8.112160,3.156325,-1.546788,9.054795,-8.262675,-4.555284,-5.553329,7.525253,3.418870,-7.432922,-4.408244,-4.208976,-3.094395,-5.586590,9.721376,8.141807,4.795658,-4.293699,-5.393956,-0.615713,-1.264189,-4.906223,-4.225695,-8.363513,-8.849393,-3.543649,-1.050679,-5.940997,-7.674943,3.156151,1.350233,-3.107903,2.346144,-2.029574,-4.311131,9.778386,-1.680969,-2.133153,9.133971,-5.905211,9.526602,-9.389888,7.159763,-3.157157,-3.611367,-5.830689,-1.005227,-5.666470,0.893867,8.716986,-6.675729,-3.099581,2.403158,5.702078,-3.134632,-1.564076,-3.453078,2.532654,9.451696,-9.849752,0.988430,-9.887675,6.963286,-6.593038,9.416312,-1.613894,-5.284031,-6.490386,9.492397,-6.054778,-2.867639,2.155240,-6.348159,-3.281807,-2.785638,1.185011,8.539124,6.746518,-5.484274,7.069000,-3.064330,8.441847,9.888579,-4.103616,-9.648990,-8.767557,1.294865,7.409268,-7.066704,-8.741291,-2.829699,3.349481,8.739312,-5.935530,-3.608759,5.019640], dtype = "float64")#candidate|9442|(396,)|const|float64
var_9443 = relay.var("var_9443", dtype = "int8", shape = (672,))#candidate|9443|(672,)|var|int8
const_9444 = relay.const([-6,9,-7,-9,5,-4,-7,-7,5,5,-2,-5,-6,3,10,6,-2,-4,-8,-5,8,1,10,6,-1,9,10,2,-8,5,-2,5,-8,3,2,8,-7,9,6,-3,6,10,-3,-1,7,10,-9,-3,4,2,6,-5,-6,2,-10,10,-6,-4,-1,1,-1,9,-4,6,10,3,5,-9,-2,4,4,8,6,-9,6,-7,1,-6,8,-2,-7,2,-2,-4,2,6,4,7,5,9,8,-10,-9,3,-8,8,1,-9,3,-9,3,-10,-1,-7,5,-10,1,1,6,-9,-10,-4,-7,7,-6,4,4,-6,-2,-1,-10,-9,3,-1,5,-5,-7,7,-2,3,-3,-7,2,9,-8,-1,3,9,2,-5,10,-2,-9,-2,-5,8,3,-2,3,-8,-6,-1,-1,-7,10,9,-3,6,2,-2,-4,-7,-8,-1,2,3,-10,-1,5,-3,-9,5,-5,-4,1,-6,-8,2,-3,8,2,-5,6,-3,-3,5,1,4,3,3,-5,8,3,1,3,-1,-3,-9,-2,9,1,7,-4,-5,10,10,8,-1,8,-7,3,9,-6,-4,-1,4,-7,-3,4,9,-8,3,6,9,10,-6,5,1,-4,-2,8,-8,-8,9,8,10,-4,4,-9,-4,10,-1,7,-8,7,-7,-7,1,7,1,-7,-3,-6,-10,1,-3,6,-10,6,-6,-10,-7,10,-4,9,2,6,6,4,6,-2,8,1,-2,4,9,3,-10,-5,7,10,1,-7,-8,4,6,-3,5,10,2,-7,9,6,-10,4,6,-9,1,-3,-6,-5,5,5,-3,-7,-1,3,-2,-9,-9,-4,-8,1,10,10,-4,-8,-4,-9,2,-9,10,-2,10,-9,-6,-5,5,-6,3,2,-3,-4,-7,-4,-1,-9,5,-5,3,-6,-6,-3,-9,7,5,7,10,-4,6,-4,-9,8,-6,-10,7,-8,-7,4,-10,-7,-10,10,8,7,-2,-3,-5,6,3,10,2,-5,-9,-6,-9,3,-7,-1,6,3,8,10,6,-7,-10,1,7,2,4,-6,-10,6,1,-6,-3,7,-4,9,1,-1,2,-4,9,-6,3,-7,10,-2,-1,10,-7,7,3,1,9,8,5,4,-9,8,2,-7,-1,5,-7,-5,-1,-4,-8,10,-9,3,-10,10,5,3,3,2,-9,5,-2,-8,3,-5,1,10,-4,5,-8,-5,-5,2,8,-4,-3,-1,-9,5,-5,5,-10,5,6,9,-9,8,-3,-3,-6,-6,-6,-3,-7,1,1,-5,10,4,-4,-9,7,6,-8,9,-6,3,3,8,-4,-2,-4,-7,-9,-2,6,-3,-9,-3,7,-10,-6,-4,-1,-8,3,2,-9,6,2,10,-7,8,-3,4,-2,3,-9,10,-1,-5,-10,-6,5,-6,7,-4,-10,-2,-5,3,3,7,2,4,-6,8,5,5,-5,9,-7,-6,-7,-10,-7,10,-6,3,-6,1,-5,10,-4,-2,-5,9,-5,-1,-5,3,-1,-1,-3,6,1,-3,-8,-6,9,-1,10,8,-7,8,-7,4,-5,8,-9,-9,-4,7,-5,-6,5,-1,-7,10,8,-6,10,-7,-6,5,1,-8,-4,9,-9,8,-2,9,-7,-3,-9,-4,-10,-6,-7,-2,2,-3,4,-10,7,-7,6,-8,6,-2,2,-6,6,-1,-2,3,-4,4,10,-10,-1,-8,4,-2,9,7,-9,-8,-6,9,-1,-4,1,-2,2,-10,1,-2,3,-5,-7,8,7,10,-4,-1,-3,1,-1,-3,-4,-5,-10,-10,-10,-7,-9,-2,10,10,-3,8,-4,-10,-1,9,7,-2,1,-1,-9,10,3,8,6,-7,9,-6,4,1,8,-3,-3,1,-9,7,-1,9,10,9,-5,6,-4,10,-6,-5,8,1,-5,7,7,3,2,-3,-9,-10,-1,-10,-7,-4,1,9,-9,1,7,9,4,3,6,-8,-2,-3,5,7,4,-6,3,4,-10,-10,-3,-10,-3,-2,-10,-7,-1,5,-4,9,-6,-2,-4,4,3,10,3,2,-4,-8,-7,9,5,-7,8,8,-2,-6,-9,10,-4,-8,10,-6,6,-1,9,4,-3,7,-6,-7,7,5,-4,8,5,5,-7,2,-5,10,-2,-1,7,8,3,4,-9,-6,5,-8,-1,8,6,-5,10,6,-2,-8,-5,2,4,-9,-6,5,-10,-4,8,1,9,-6,1,-4,8,-10,8,2,10,4,-6,-7,-4,7,2,-7,-6,-1,-2,10,7,-5,-3,-9,-8,-1,2,3,1,-7,10,4,-4,2,10,-9,3,-1,3,-1,3,-7,10,-10,-2,3,-2,9,-2,5,5,6,-8,-6,7,1,-1,-6,8,1,-4,1,1,-3,1,4,9,-3,7,7,-9,5,-7,-1,6,5,8,5,6,-2,-7,2,-6,-5,6,-8,-10,-7,1,-10,-1,6,-10,9,-10,-2,7,5,1,-8,-1,6,-1,-6,10,-9,10,-10,-8,-8,-10,-7,4,-2,-1,-6,1,2,2,4,6,4,-9,-8,-1,-7,-7,-10,6,8,4,-10,5,-7,-1,-10,4,-5,-6,2,-1,8,1,1,-2,5,-2,-3,8,-3,-2,-8,-6,-1,-5,-2,10,-4,-10,10,-3,-7,9,-1,9,6,8,-8,-6,-7,-10,7,10,2,-6,1,-7,-4,8,3,-1,1,-2,4,-7,-9,1,-10,-7,3,5,5,-2,-8,6,2,-10,-7,-3,10,-3,9,-5,6,-3,7,3,-2,9,-9,-3,2,-3,8,9,6,-7,7,3,-3,-10,-4,2,-10,-8,-8,10,-6,9,9,-4,-4,-9,2,-2,-10,-7,7,-2,10,8,3,-8,-10,-3,-8,5,7,-1,-8,5,-7,-4,-2,5,-8,-10,10,-10,-6,3,-9,6,-2,6,-9,-8,5,-3,10,-1], dtype = "int16")#candidate|9444|(1092,)|const|int16
const_9445 = relay.const([[True,True,True],[False,False,False],[True,False,False],[False,True,False],[True,False,True],[False,True,True],[True,False,True],[True,False,True],[True,False,True],[False,False,False],[False,False,True],[False,False,True],[False,True,True],[True,True,True],[True,True,True],[True,True,False],[False,False,False],[True,True,False],[False,False,True],[True,False,True],[True,True,True],[False,True,False],[True,True,True],[True,False,True],[False,False,False],[True,True,True],[False,True,True],[False,False,False],[True,True,True],[False,False,True],[True,False,False],[True,False,True],[True,False,True],[False,True,True],[True,True,True],[True,False,False],[False,False,True],[True,True,False],[False,False,True]], dtype = "bool")#candidate|9445|(39, 3)|const|bool
var_9446 = relay.var("var_9446", dtype = "bool", shape = (351,))#candidate|9446|(351,)|var|bool
call_9441 = relay.TupleGetItem(func_4483_call(relay.reshape(const_9442.astype('float64'), [4, 9, 11]), relay.reshape(var_9443.astype('int8'), [672,]), relay.reshape(const_9444.astype('int16'), [1092,]), relay.reshape(const_9445.astype('bool'), [117,]), relay.reshape(var_9446.astype('bool'), [3, 117]), ), 6)
call_9447 = relay.TupleGetItem(func_4490_call(relay.reshape(const_9442.astype('float64'), [4, 9, 11]), relay.reshape(var_9443.astype('int8'), [672,]), relay.reshape(const_9444.astype('int16'), [1092,]), relay.reshape(const_9445.astype('bool'), [117,]), relay.reshape(var_9446.astype('bool'), [3, 117]), ), 6)
bop_9451 = relay.bitwise_and(const_9428.astype('uint8'), relay.reshape(bop_9429.astype('uint8'), relay.shape_of(const_9428))) # shape=(14, 14, 11)
output = relay.Tuple([bop_9432,call_9441,const_9442,var_9443,const_9444,const_9445,var_9446,bop_9451,])
output2 = relay.Tuple([bop_9432,call_9447,const_9442,var_9443,const_9444,const_9445,var_9446,bop_9451,])
func_9455 = relay.Function([var_9443,var_9446,], output)
mod['func_9455'] = func_9455
mod = relay.transform.InferType()(mod)
var_9456 = relay.var("var_9456", dtype = "int8", shape = (672,))#candidate|9456|(672,)|var|int8
var_9457 = relay.var("var_9457", dtype = "bool", shape = (351,))#candidate|9457|(351,)|var|bool
output = func_9455(var_9456,var_9457,)
func_9458 = relay.Function([var_9456,var_9457,], output)
mutated_mod['func_9458'] = func_9458
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9598 = relay.const([[[0.339186,-5.890309,-7.366673,4.851861,-0.343497,5.038547,1.550429,-6.700326,-4.436776,7.216813,-0.975359,8.921485,9.649854]],[[7.039523,8.498513,6.618987,3.358405,5.565393,-2.329252,-4.372701,-0.354047,-1.978750,-5.090399,5.479135,8.418583,-0.740735]],[[-9.638544,7.647973,-0.978672,-3.600614,-4.757586,-1.326210,1.309093,5.600025,4.086048,-6.214054,9.083135,1.155706,9.988252]],[[-7.631521,6.377234,-7.429785,-2.790847,8.577092,2.469600,9.300006,9.047088,0.463115,7.362701,2.905819,-4.594659,3.919350]],[[-7.901698,-9.289115,6.417289,-9.916340,9.694181,-3.785669,2.016811,8.042075,9.656732,-9.100701,-1.718594,9.626031,-9.589621]],[[-8.455294,-4.964064,-2.528211,-7.089299,-2.414900,-0.566339,-9.708829,1.218891,7.749452,4.546415,2.571810,8.425204,3.077563]],[[-5.038102,-8.934808,0.379744,3.200551,-8.858673,5.055856,-7.478989,-9.045228,-8.560930,8.552466,8.437431,-3.530031,0.553611]]], dtype = "float64")#candidate|9598|(7, 1, 13)|const|float64
const_9599 = relay.const([[[-2.315954,6.583108,-2.940040,-6.039020,-2.615775,-6.858047,9.349918,1.530584,3.486990,3.559182,0.651141,0.422356,1.028957],[-6.251328,-2.141357,8.354584,7.056751,3.244975,-9.931663,7.425780,-6.187798,-1.767652,0.140659,3.631370,3.312223,3.063590],[5.137976,4.572339,3.826247,6.560934,0.711600,-3.517091,6.212821,9.714161,7.756376,-9.130478,-6.173847,-6.584461,-3.375557],[-3.253934,-6.612505,-0.833637,-8.585772,-9.675365,8.997307,9.703644,-0.366884,6.214186,8.472028,4.138132,-9.130549,-9.106213],[-5.215768,-2.832324,-2.175256,7.903368,-1.146239,-6.503117,3.891219,-4.305083,-5.863866,7.524095,2.177101,-7.961308,4.895518],[-0.519547,1.110496,-2.456371,2.276019,-8.520358,6.217151,-3.371386,-8.379599,1.598129,4.762255,-6.350348,2.577654,-9.288449],[3.547624,-7.497731,0.894225,-9.816713,0.529823,-9.821590,8.631457,2.266449,-2.193601,-3.398583,-1.874250,-3.204285,8.821340],[-8.292326,0.972077,2.143026,7.201297,8.810779,-0.149474,-9.307808,8.776072,-3.233909,3.525041,7.192290,5.657224,-6.319832],[1.546335,0.350142,-2.218940,-9.696689,4.832563,-8.642578,6.257264,0.351182,4.300356,7.790558,-2.871752,6.047487,0.378510],[-4.699156,-5.351460,0.976407,2.364661,-4.923883,-5.443801,4.138486,-1.334816,-8.525361,-9.804250,-6.838650,4.752314,-7.592686],[8.718126,-2.478510,-8.002130,-6.341669,4.987400,7.793895,-2.176810,-8.358153,-8.326049,-8.316566,6.783966,-8.884112,-2.793854]],[[2.431816,-7.633328,-2.908832,2.041184,4.088517,5.726004,-3.412144,1.936861,2.219181,4.093985,-2.442010,-1.345807,9.532302],[3.619688,0.242656,-9.331578,-9.752603,-5.970405,-1.501909,4.025751,8.781505,5.468474,3.686431,4.924356,2.521760,4.603454],[-9.206365,-0.587578,2.597272,0.277600,-6.015825,-4.165608,0.280879,5.032935,-7.469233,2.312035,5.225810,-6.792428,6.038847],[8.519383,-7.573091,-3.469135,-5.726700,-1.377040,-6.943375,-8.523845,6.527262,1.657872,0.587417,0.174630,0.265329,-6.531744],[0.883593,-0.579855,-8.357988,3.905899,-5.513414,-5.062543,1.109152,-0.752974,-1.172554,-0.337618,4.445397,-4.092208,-8.412973],[3.514751,-4.930234,-6.900998,-3.211907,-6.594808,-6.241107,2.390696,3.662333,-0.821525,8.544593,3.268659,8.189852,3.666939],[7.742118,-9.782436,9.586288,-6.352042,8.490680,-6.124740,4.972945,-0.052303,-5.491589,-8.634619,3.235236,-0.484562,3.527093],[6.386203,3.152618,-1.518462,-3.934117,-7.994040,-3.659361,-0.968622,4.633955,9.420023,9.160864,3.174532,3.572259,-5.436215],[-0.453296,5.096732,-1.991090,-7.520593,-8.371309,-0.766272,7.121437,-8.701312,0.403735,5.428248,5.789714,4.190203,2.332678],[9.559321,-6.421436,7.386985,-7.939756,8.260859,9.594779,8.729862,-7.544656,2.131868,-7.604243,6.055862,-0.378214,1.496432],[6.047742,-7.719374,8.881455,9.152048,1.515748,-6.196997,-4.514213,-0.248940,5.121142,2.482554,-3.824079,-7.726688,-4.775035]],[[-3.139307,-6.688047,0.327613,9.936390,-2.464562,3.341807,-3.245342,5.293429,-5.428853,-9.611255,7.118435,-6.108534,9.818732],[4.078466,-3.574567,7.735960,-9.385621,-5.497864,3.587316,-5.683171,-5.290276,-1.583389,-3.501341,7.578633,4.356424,-3.175430],[6.567910,0.244837,9.926532,-4.949092,-3.743173,-5.498118,-3.438371,-7.667202,-3.227740,7.068842,-2.176379,-4.066845,9.082899],[-2.283867,7.559374,-4.950627,9.460949,-0.397261,-9.051516,-4.631051,-1.284533,-9.284721,4.833096,3.223558,0.987624,-7.347341],[-8.718403,-6.072415,-3.707196,-6.978201,9.757121,7.644624,-5.083441,7.062989,-8.075725,0.649716,2.571516,8.000429,0.113277],[-7.639368,-7.121202,-3.838303,0.181891,-2.552376,6.249543,-5.482260,0.890850,-2.458390,3.407816,2.616455,6.048731,-8.639594],[-5.357450,-1.904867,-8.876798,-7.697080,8.756288,6.019293,3.304479,8.477610,-7.359606,-0.364035,9.987732,2.110386,-8.090305],[-4.740545,-4.607138,-8.802472,5.509506,-9.915122,-0.435590,-6.350427,0.108196,-1.105730,0.501061,-3.955757,7.304468,-4.869629],[4.807164,0.047695,-7.141842,0.732084,0.073470,9.712873,-5.684039,-7.055494,-2.530323,3.327569,1.145509,-8.864990,2.676205],[-1.264776,8.793016,8.645568,3.483594,9.291542,-0.564855,-1.514014,-4.846077,-6.755556,5.421234,8.354362,8.002588,6.830499],[7.812647,-1.099514,-7.805317,8.533030,5.388553,-8.258242,-6.505909,-7.451619,7.525518,-3.772376,-7.604619,-9.561797,2.096449]],[[1.387028,-5.892418,7.180472,-3.549699,-9.663465,7.506769,6.423753,-5.150209,6.765530,2.757910,-6.549164,-6.780468,-0.673255],[4.607094,-1.781792,0.635835,-4.189271,-7.111206,0.644565,4.895338,-1.341264,0.707653,0.635040,2.179795,-2.550645,-3.883036],[1.717401,4.392543,1.606745,2.722238,-9.208362,5.104706,-1.859347,-5.717710,-8.932008,-8.936336,-3.549221,-8.398501,7.605172],[-3.392889,-3.564128,-8.640716,9.279068,-1.159374,7.817978,-3.861993,-2.899099,-6.196621,-3.853617,-4.330543,-6.862352,4.497073],[-7.997295,-9.821344,6.868111,-3.454333,2.716653,-2.401565,-1.954766,1.397240,-4.142932,8.977678,3.487790,2.458341,4.969693],[-4.584588,-3.956822,-8.854877,-2.689450,4.350615,-5.052923,2.795421,-6.829929,-3.474748,-0.237552,-4.923901,-6.267712,7.757038],[5.161291,7.646683,-5.175403,-9.319230,5.133787,-2.349145,9.509491,9.598588,2.915406,0.426085,-5.990031,-0.140792,3.740350],[0.323786,6.094205,0.386061,-8.508686,0.802464,6.771723,2.450342,-5.615117,-8.732728,0.121971,1.519257,-7.751148,3.685846],[3.887548,-3.787937,-2.854497,-9.385453,-0.468869,0.038052,-8.344643,-8.880771,-0.594336,-6.303006,5.870826,2.304087,-0.306876],[9.320933,7.683771,-5.925551,-7.646243,-0.510687,-2.381457,-9.909798,-9.701774,6.175765,-7.903225,-0.006223,-3.884313,-7.614044],[4.515012,-2.406886,-7.779337,9.013784,-2.020324,-7.772965,-4.216884,-6.025942,3.408630,5.155636,-1.116911,-4.707817,-5.432101]],[[5.706099,7.758694,-2.591186,9.822729,8.369993,-4.483446,-3.766976,-0.874904,-3.650174,2.939710,8.269620,7.636530,-6.829491],[-9.255534,6.191981,-4.258479,9.730384,-3.238643,-4.485225,-2.576234,4.966879,-1.725617,-3.589520,7.717426,0.755283,7.992169],[7.071965,-5.765633,-8.193542,6.750635,2.778730,-3.424640,1.090864,0.958095,5.265164,5.935984,-7.931504,-5.423764,-0.599612],[0.344739,-8.155209,4.537539,-9.549886,2.297237,-2.035444,-4.109856,-1.610864,-3.690085,0.488993,-0.974959,1.824216,3.651267],[4.849479,-5.035154,8.328326,-0.864645,-8.066665,-7.439161,8.142015,6.414454,-0.029516,9.808749,3.717653,-3.265839,9.627656],[7.873121,4.528927,1.017091,-4.422111,-5.205716,0.423065,3.493864,-8.261327,-4.799119,5.950611,4.140667,8.511881,0.373050],[-7.382074,7.860998,-3.084809,4.689436,-8.749910,-9.754682,-9.725621,-9.513211,7.790767,-7.818509,7.007795,0.709284,-3.655021],[-8.634825,-8.294014,-8.811239,-8.631732,-4.655017,-3.547515,-4.974097,-2.343503,5.333072,2.642659,3.127335,0.364219,7.273527],[-1.561329,-3.941143,2.660914,7.693557,-3.562650,5.081379,6.550970,1.576038,9.907770,-5.589818,-6.667352,-7.473870,-1.881577],[2.280784,8.146357,-7.094215,7.184695,0.302453,-3.060409,-3.382059,-2.315133,1.413431,-9.740486,-2.404282,-9.383345,5.684271],[-8.596725,-3.484984,8.720052,8.774183,-9.934320,3.885879,-5.396690,8.400236,0.480789,5.488705,5.540236,1.761842,5.717027]],[[1.675168,2.602321,-5.056032,-5.637272,-1.075698,-0.278179,2.709180,1.719855,1.116351,6.129359,-7.883118,-6.106699,-5.299788],[-0.729431,0.792519,8.176644,2.711026,-8.159795,1.598586,0.960173,-6.804448,8.462231,-9.711472,-9.180862,-6.598347,-2.585060],[-2.534530,-7.724126,-0.523929,5.886782,-0.010382,-2.381378,7.025683,0.686049,-7.631564,-6.847382,4.745427,-9.749760,-1.769123],[5.775317,-5.892014,-3.586749,-0.559643,7.754150,3.167715,3.415641,-4.337143,-7.499977,-5.788036,-1.785737,-6.401092,6.621993],[-6.114144,7.976989,0.310184,3.361616,9.077997,-2.898423,-0.093308,-0.579127,-1.774044,7.466076,-1.384189,-7.324775,2.201614],[6.530141,0.761941,1.637394,-6.236649,2.620549,6.021560,1.286022,-6.196426,9.342470,3.247625,-3.561815,2.642029,-5.590820],[3.745655,-8.286742,4.034271,-5.693996,-3.204096,-2.073408,8.766112,-8.821931,-0.148787,9.175982,-3.953243,8.485539,-8.950690],[0.940671,2.739342,8.227223,2.026769,-9.467229,4.988286,5.816728,-1.891884,-8.104839,7.187370,0.295744,-5.092176,-6.883914],[2.729380,4.234042,-9.007730,5.250041,-4.966612,-7.034610,-6.913275,9.952334,-0.186496,0.653298,-0.564113,-9.522347,9.913036],[-4.761164,-2.519510,-5.661377,-8.284390,5.378701,-9.514065,0.086952,-8.737687,-0.455889,-1.485022,-0.434831,8.738280,7.341765],[-8.640642,7.257093,1.244967,3.351392,2.186618,1.924476,4.066285,-9.189880,9.256396,6.100022,5.141717,-6.278614,2.156812]],[[-2.864467,0.579632,-0.011601,4.385592,6.762899,7.790982,-2.349497,-0.477231,3.589492,1.346481,8.519808,5.970990,-0.257212],[8.377124,-1.352719,5.930793,0.066990,-0.427983,-8.866112,4.828637,5.093247,3.267319,3.012211,2.932930,9.251927,-8.407223],[-1.307468,6.939964,8.528484,6.129124,2.512575,-1.623888,3.952883,0.659274,5.517360,5.837082,0.086260,-2.956033,-9.210630],[1.205951,-0.301219,9.018052,2.777889,9.809143,7.390901,-2.927964,-9.385652,3.582052,-8.859088,2.610416,5.968704,-7.777785],[2.389114,-1.298139,-4.283026,-6.357581,2.639059,3.580311,-0.457001,0.132808,-5.370339,1.027573,7.156201,-2.976728,2.331456],[4.782368,3.257518,1.185518,-3.514380,-8.230242,-2.797603,-4.590403,-8.173437,-5.492312,-0.486833,-8.707717,-6.695648,5.205478],[-6.136280,0.021903,-6.956571,6.062008,-7.258169,-2.803414,-0.757315,1.164293,3.668864,-9.326410,-8.694185,5.674309,6.969613],[9.226369,8.227022,9.960699,-9.259628,9.945357,9.903403,-6.016075,7.660736,-4.660110,-7.494220,-0.355301,3.017899,4.011888],[-9.420127,2.690171,6.739152,7.133477,0.903365,-2.944236,1.361803,-8.786170,-4.194134,-8.452279,-4.729705,4.468384,-9.576743],[-8.818490,3.998096,1.071598,-2.151872,3.932078,1.974316,-1.701829,0.850466,1.590327,-7.949227,5.089089,-3.217048,9.996590],[-9.135125,2.535368,-3.863124,6.837636,-0.996768,5.011190,6.085833,-5.523892,3.083971,1.109467,8.939536,9.428008,3.476288]]], dtype = "float64")#candidate|9599|(7, 11, 13)|const|float64
bop_9600 = relay.not_equal(const_9598.astype('bool'), const_9599.astype('bool')) # shape=(7, 11, 13)
func_7755_call = mod.get_global_var('func_7755')
func_7758_call = mutated_mod.get_global_var('func_7758')
var_9604 = relay.var("var_9604", dtype = "uint32", shape = (198,))#candidate|9604|(198,)|var|uint32
call_9603 = relay.TupleGetItem(func_7755_call(relay.reshape(var_9604.astype('uint32'), [3, 11, 6]), relay.reshape(var_9604.astype('uint32'), [3, 11, 6]), ), 0)
call_9605 = relay.TupleGetItem(func_7758_call(relay.reshape(var_9604.astype('uint32'), [3, 11, 6]), relay.reshape(var_9604.astype('uint32'), [3, 11, 6]), ), 0)
output = relay.Tuple([bop_9600,call_9603,var_9604,])
output2 = relay.Tuple([bop_9600,call_9605,var_9604,])
func_9606 = relay.Function([var_9604,], output)
mod['func_9606'] = func_9606
mod = relay.transform.InferType()(mod)
mutated_mod['func_9606'] = func_9606
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9607 = relay.var("var_9607", dtype = "uint32", shape = (198,))#candidate|9607|(198,)|var|uint32
func_9606_call = mutated_mod.get_global_var('func_9606')
call_9608 = func_9606_call(var_9607)
output = call_9608
func_9609 = relay.Function([var_9607], output)
mutated_mod['func_9609'] = func_9609
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9787 = relay.const([[[6.095959,-3.955668],[2.192227,2.738817],[4.359732,-5.582499],[-2.030907,7.446236],[-8.213181,2.513560],[7.650201,-8.276032],[-2.342004,-4.711232],[-5.491325,-4.468986],[-8.716996,1.571326],[-7.967711,1.040839],[-9.592079,-8.477938]],[[-8.969433,-4.839796],[-7.410679,-5.569954],[-6.817839,-5.035864],[5.418015,4.420973],[-2.109980,8.133879],[-9.137281,0.708283],[4.256917,-0.767758],[-9.430687,-2.028325],[7.978004,6.174498],[-7.477153,5.670045],[8.205499,-7.178687]],[[-5.047920,-5.433673],[0.946606,2.339903],[6.509659,2.955371],[-4.338386,-0.204891],[-9.543078,6.784051],[-4.961865,2.086502],[2.121917,0.642324],[-1.158491,3.810333],[8.474684,-8.179579],[4.240289,-8.819067],[-4.393565,-2.120722]],[[-9.522837,6.546903],[2.924884,-5.856105],[-1.312151,2.770950],[-6.627216,-2.006511],[-7.616422,0.699415],[2.354532,-1.891456],[9.677624,3.938234],[-1.052379,-6.381667],[3.569210,2.828408],[0.475877,-5.586181],[9.210183,7.929664]],[[-5.384483,1.480369],[2.675852,-3.679765],[-2.846443,0.687375],[0.720929,8.438041],[-6.205152,-5.127851],[1.945583,4.128136],[5.609160,-4.988920],[7.555567,-9.332952],[6.852593,-3.370303],[-2.450815,-8.677287],[2.300697,1.420913]],[[-0.843346,4.831559],[-0.956890,-7.576137],[5.794259,-3.231310],[4.801369,-4.356285],[-0.169442,-8.524478],[-2.148788,-5.727876],[6.236677,1.324422],[5.535110,-1.403967],[5.340794,-5.097703],[0.203263,9.069127],[-4.208025,-9.113129]],[[9.771600,-9.727071],[8.145326,3.259929],[7.576765,8.831651],[-0.105545,-9.870689],[6.490173,-0.526622],[-9.339281,-2.616917],[5.441530,-1.902762],[-4.419203,-6.384468],[9.362975,5.026073],[5.903357,-9.371188],[3.750541,-2.090947]],[[-5.140945,2.226252],[9.226811,-3.635732],[-6.746483,4.098021],[9.440292,-1.843044],[-2.592390,4.378868],[8.394244,7.042456],[1.693373,-3.007547],[1.896567,2.729948],[9.100564,5.764689],[-6.632788,-7.230332],[-7.211128,-1.879831]],[[9.340775,5.230838],[3.903641,-6.041988],[-4.643035,-5.425698],[9.439697,-0.601002],[6.544856,3.958956],[-2.366772,0.528331],[-2.983648,8.862673],[4.732904,-1.511506],[-0.639306,1.374320],[-5.181242,3.688977],[4.259754,7.833652]]], dtype = "float64")#candidate|9787|(9, 11, 2)|const|float64
uop_9788 = relay.tan(const_9787.astype('float64')) # shape=(9, 11, 2)
output = uop_9788
output2 = uop_9788
func_9803 = relay.Function([], output)
mod['func_9803'] = func_9803
mod = relay.transform.InferType()(mod)
output = func_9803()
func_9804 = relay.Function([], output)
mutated_mod['func_9804'] = func_9804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9803_call = mod.get_global_var('func_9803')
func_9804_call = mutated_mod.get_global_var('func_9804')
call_9847 = func_9803_call()
call_9848 = func_9803_call()
output = call_9847
output2 = call_9848
func_9867 = relay.Function([], output)
mod['func_9867'] = func_9867
mod = relay.transform.InferType()(mod)
output = func_9867()
func_9868 = relay.Function([], output)
mutated_mod['func_9868'] = func_9868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9867_call = mod.get_global_var('func_9867')
func_9868_call = mutated_mod.get_global_var('func_9868')
call_9889 = func_9867_call()
call_9890 = func_9867_call()
output = call_9889
output2 = call_9890
func_9913 = relay.Function([], output)
mod['func_9913'] = func_9913
mod = relay.transform.InferType()(mod)
mutated_mod['func_9913'] = func_9913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9913_call = mutated_mod.get_global_var('func_9913')
call_9914 = func_9913_call()
output = call_9914
func_9915 = relay.Function([], output)
mutated_mod['func_9915'] = func_9915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9913_call = mod.get_global_var('func_9913')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_9949 = func_9913_call()
call_9950 = func_9913_call()
const_9952 = relay.const([[[-6.441984,0.107616],[4.079938,-4.497197],[-9.594026,4.451889],[5.393120,-7.683194],[8.101660,8.416333],[-1.380868,1.229135],[-0.197279,-8.907977],[9.578459,7.859657],[7.692901,-7.203123],[-4.514833,9.067485],[-6.529902,-2.198659]],[[5.561269,3.567278],[-6.707343,-2.956328],[-0.064398,3.381203],[-5.598791,2.590179],[6.497549,1.421581],[9.946776,-2.129517],[-9.092121,-4.566552],[-6.741526,-4.748128],[5.950493,-1.956611],[-1.413834,1.620239],[-4.678734,-1.667124]],[[-6.050186,5.695674],[-6.983875,-6.505619],[-6.956239,7.452162],[-0.778749,-3.022978],[-8.179802,-5.577539],[-1.307181,8.534248],[-7.436284,-3.676145],[9.202316,6.331642],[-6.552147,-4.364021],[-8.293755,-9.689694],[7.392012,5.748150]],[[8.967852,-1.357381],[5.761092,-4.773292],[-1.033154,-6.115636],[-8.646658,2.162089],[7.964982,2.347702],[6.414174,-2.234741],[-6.255428,3.370888],[8.544304,7.984412],[-5.474883,-0.939272],[-1.820591,0.872128],[8.120365,9.780879]],[[-8.731202,7.388384],[-3.442490,8.355908],[-0.936698,1.374242],[-3.125164,-4.940315],[1.423912,1.375317],[-1.400868,6.541992],[-5.895613,1.155330],[7.552504,3.837695],[2.083136,2.424644],[2.999192,-5.202876],[1.961230,-4.321427]],[[-1.770033,6.633603],[-3.911244,5.799021],[-3.996623,6.488009],[7.388768,-6.610477],[-2.926113,7.560068],[2.593784,5.138862],[2.538505,-6.707856],[3.796025,4.549539],[-5.807918,3.954870],[5.842350,8.107087],[-9.429593,-1.111148]],[[9.837115,-8.955098],[-7.501437,0.033677],[-2.306819,-6.101859],[-3.689937,-4.549708],[3.353396,9.657223],[-9.272476,-1.771738],[9.898225,-3.704698],[-2.213304,-7.244102],[1.220682,8.159988],[-9.160585,3.211592],[8.337451,-1.124738]],[[0.767005,5.737153],[-3.162855,-0.761535],[-2.031037,-7.953462],[-0.385434,6.298108],[3.069498,-9.181360],[-6.617950,-1.191207],[-1.743477,2.339672],[6.022600,-9.595607],[8.578486,0.543482],[-9.480432,-3.948245],[-5.766009,9.729899]],[[5.988342,-9.566949],[-2.004284,-1.873901],[-9.129433,0.946846],[-3.637973,8.743403],[-7.385586,-9.603565],[4.928213,-9.458979],[2.854572,-1.502767],[6.534682,-7.043252],[-0.586993,-7.431044],[8.209357,6.323848],[2.424309,6.250717]]], dtype = "float64")#candidate|9952|(9, 11, 2)|const|float64
bop_9953 = relay.logical_and(call_9949.astype('bool'), relay.reshape(const_9952.astype('bool'), relay.shape_of(call_9949))) # shape=(9, 11, 2)
bop_9956 = relay.logical_and(call_9950.astype('bool'), relay.reshape(const_9952.astype('bool'), relay.shape_of(call_9950))) # shape=(9, 11, 2)
func_8042_call = mod.get_global_var('func_8042')
func_8046_call = mutated_mod.get_global_var('func_8046')
const_9973 = relay.const(6, dtype = "uint32")#candidate|9973|()|const|uint32
var_9974 = relay.var("var_9974", dtype = "uint32", shape = (22,))#candidate|9974|(22,)|var|uint32
var_9975 = relay.var("var_9975", dtype = "uint32", shape = (352,))#candidate|9975|(352,)|var|uint32
call_9972 = relay.TupleGetItem(func_8042_call(relay.reshape(const_9973.astype('uint32'), []), relay.reshape(var_9974.astype('uint32'), [2, 1, 11]), relay.reshape(var_9975.astype('uint32'), [2, 16, 11]), ), 0)
call_9976 = relay.TupleGetItem(func_8046_call(relay.reshape(const_9973.astype('uint32'), []), relay.reshape(var_9974.astype('uint32'), [2, 1, 11]), relay.reshape(var_9975.astype('uint32'), [2, 16, 11]), ), 0)
bop_9979 = relay.floor_divide(call_9949.astype('float64'), relay.reshape(bop_9953.astype('float64'), relay.shape_of(call_9949))) # shape=(9, 11, 2)
bop_9982 = relay.floor_divide(call_9950.astype('float64'), relay.reshape(bop_9956.astype('float64'), relay.shape_of(call_9950))) # shape=(9, 11, 2)
var_9995 = relay.var("var_9995", dtype = "float64", shape = (9, 11, 2))#candidate|9995|(9, 11, 2)|var|float64
bop_9996 = relay.less(call_9949.astype('bool'), relay.reshape(var_9995.astype('bool'), relay.shape_of(call_9949))) # shape=(9, 11, 2)
bop_9999 = relay.less(call_9950.astype('bool'), relay.reshape(var_9995.astype('bool'), relay.shape_of(call_9950))) # shape=(9, 11, 2)
func_6878_call = mod.get_global_var('func_6878')
func_6881_call = mutated_mod.get_global_var('func_6881')
var_10007 = relay.var("var_10007", dtype = "float32", shape = (180,))#candidate|10007|(180,)|var|float32
call_10006 = relay.TupleGetItem(func_6878_call(relay.reshape(var_10007.astype('float32'), [3, 4, 15]), relay.reshape(var_10007.astype('float32'), [3, 4, 15]), ), 0)
call_10008 = relay.TupleGetItem(func_6881_call(relay.reshape(var_10007.astype('float32'), [3, 4, 15]), relay.reshape(var_10007.astype('float32'), [3, 4, 15]), ), 0)
output = relay.Tuple([call_9972,const_9973,var_9974,var_9975,bop_9979,bop_9996,call_10006,var_10007,])
output2 = relay.Tuple([call_9976,const_9973,var_9974,var_9975,bop_9982,bop_9999,call_10008,var_10007,])
func_10047 = relay.Function([var_9974,var_9975,var_9995,var_10007,], output)
mod['func_10047'] = func_10047
mod = relay.transform.InferType()(mod)
var_10048 = relay.var("var_10048", dtype = "uint32", shape = (22,))#candidate|10048|(22,)|var|uint32
var_10049 = relay.var("var_10049", dtype = "uint32", shape = (352,))#candidate|10049|(352,)|var|uint32
var_10050 = relay.var("var_10050", dtype = "float64", shape = (9, 11, 2))#candidate|10050|(9, 11, 2)|var|float64
var_10051 = relay.var("var_10051", dtype = "float32", shape = (180,))#candidate|10051|(180,)|var|float32
output = func_10047(var_10048,var_10049,var_10050,var_10051,)
func_10052 = relay.Function([var_10048,var_10049,var_10050,var_10051,], output)
mutated_mod['func_10052'] = func_10052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9867_call = mod.get_global_var('func_9867')
func_9868_call = mutated_mod.get_global_var('func_9868')
call_10081 = func_9867_call()
call_10082 = func_9867_call()
func_8042_call = mod.get_global_var('func_8042')
func_8046_call = mutated_mod.get_global_var('func_8046')
const_10101 = relay.const(-10, dtype = "uint32")#candidate|10101|()|const|uint32
var_10102 = relay.var("var_10102", dtype = "uint32", shape = (22,))#candidate|10102|(22,)|var|uint32
const_10103 = relay.const([[-9,1,1,10,5,-1,8,-9,-6,-6,-3,-2,3,3,-2,-4,1,-9,-1,4,-6,10,4,2,6,7,-3,2,-2,6,5,-5,5,-9,-4,2,-9,-1,-4,3,2,-9,-10,5,-7,-6,-8,7,8,10,2,-1,4,3,6,8,-5,-5,2,-9,-10,9,7,-3,-5,-6,-5,-7,-10,7,-4,5,3,-6,-1,-4,-9,1,1,2,7,3,6,10,-8,-1,-3,-6],[6,1,-7,10,-8,-6,5,6,-8,3,-7,-8,-2,-9,-7,1,-7,3,-9,-1,-4,-7,5,-2,-2,-4,9,-4,-5,6,-8,-5,1,-8,-1,-9,-6,-5,-2,3,-3,3,-3,3,-1,-7,-7,-5,-10,-9,4,5,6,10,-8,-2,-9,3,3,9,-4,-7,1,-9,5,-2,-10,8,1,-6,10,-10,-4,-3,8,4,-10,-4,3,2,5,-6,2,-1,-1,-2,4,1],[2,8,8,5,-1,9,-4,1,-6,4,-2,-1,-1,-7,2,6,2,5,4,-7,8,-10,-8,2,7,-10,-9,5,3,-9,-7,-8,-7,-10,4,7,-5,4,7,7,-10,-4,-9,2,-10,-6,4,-10,8,3,9,-6,6,-10,-6,6,8,-8,10,9,-1,-8,9,-7,8,-1,-9,-1,-6,7,-2,9,-4,4,-9,3,-8,-4,-7,-5,2,-1,-4,-7,5,-4,8,4],[-2,-7,3,-10,10,-7,-8,3,-10,-10,-7,7,-2,9,-6,-5,3,-1,3,9,-7,2,1,-3,8,-7,4,-8,-7,-8,2,-1,-7,-3,-4,-4,9,6,9,-2,7,-1,5,7,6,3,1,5,8,8,10,-5,-6,-8,-2,-2,-2,-10,-4,-9,2,-8,-7,3,-1,-7,3,-10,5,-5,-2,6,2,1,10,-6,-1,7,7,5,-1,1,-6,-4,-10,-6,6,6]], dtype = "uint32")#candidate|10103|(4, 88)|const|uint32
call_10100 = relay.TupleGetItem(func_8042_call(relay.reshape(const_10101.astype('uint32'), []), relay.reshape(var_10102.astype('uint32'), [2, 1, 11]), relay.reshape(const_10103.astype('uint32'), [2, 16, 11]), ), 0)
call_10104 = relay.TupleGetItem(func_8046_call(relay.reshape(const_10101.astype('uint32'), []), relay.reshape(var_10102.astype('uint32'), [2, 1, 11]), relay.reshape(const_10103.astype('uint32'), [2, 16, 11]), ), 0)
output = relay.Tuple([call_10081,call_10100,const_10101,var_10102,const_10103,])
output2 = relay.Tuple([call_10082,call_10104,const_10101,var_10102,const_10103,])
func_10117 = relay.Function([var_10102,], output)
mod['func_10117'] = func_10117
mod = relay.transform.InferType()(mod)
var_10118 = relay.var("var_10118", dtype = "uint32", shape = (22,))#candidate|10118|(22,)|var|uint32
output = func_10117(var_10118)
func_10119 = relay.Function([var_10118], output)
mutated_mod['func_10119'] = func_10119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9803_call = mod.get_global_var('func_9803')
func_9804_call = mutated_mod.get_global_var('func_9804')
call_10124 = func_9803_call()
call_10125 = func_9803_call()
var_10138 = relay.var("var_10138", dtype = "float64", shape = (9, 11, 2))#candidate|10138|(9, 11, 2)|var|float64
bop_10139 = relay.mod(call_10124.astype('float64'), relay.reshape(var_10138.astype('float64'), relay.shape_of(call_10124))) # shape=(9, 11, 2)
bop_10142 = relay.mod(call_10125.astype('float64'), relay.reshape(var_10138.astype('float64'), relay.shape_of(call_10125))) # shape=(9, 11, 2)
func_9606_call = mod.get_global_var('func_9606')
func_9609_call = mutated_mod.get_global_var('func_9609')
call_10148 = relay.TupleGetItem(func_9606_call(relay.reshape(bop_10139.astype('uint32'), [198,])), 2)
call_10149 = relay.TupleGetItem(func_9609_call(relay.reshape(bop_10139.astype('uint32'), [198,])), 2)
output = relay.Tuple([bop_10139,call_10148,])
output2 = relay.Tuple([bop_10142,call_10149,])
func_10162 = relay.Function([var_10138,], output)
mod['func_10162'] = func_10162
mod = relay.transform.InferType()(mod)
mutated_mod['func_10162'] = func_10162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10163 = relay.var("var_10163", dtype = "float64", shape = (9, 11, 2))#candidate|10163|(9, 11, 2)|var|float64
func_10162_call = mutated_mod.get_global_var('func_10162')
call_10164 = func_10162_call(var_10163)
output = call_10164
func_10165 = relay.Function([var_10163], output)
mutated_mod['func_10165'] = func_10165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9913_call = mod.get_global_var('func_9913')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_10194 = func_9913_call()
call_10195 = func_9913_call()
func_8743_call = mod.get_global_var('func_8743')
func_8750_call = mutated_mod.get_global_var('func_8750')
const_10228 = relay.const([8.906095,2.950086,-5.398980,8.276319,-4.681578,-6.854642,-3.194193,-7.555247,0.302839,-3.031818,6.681174,-2.781028,-6.290010,6.400616,-3.177545,6.766973,4.977811,-0.785864,4.190776,4.016992,-7.642581,-4.988381,-0.457569,-3.180410,-1.395323,1.895059,6.362516,6.014114,-3.532943,4.090677,9.556531,-1.025517,-1.252324,-6.153789,0.369846,1.860740,-7.762294,-7.369873,-6.973527,-3.864871,0.555434,2.077795,-4.096948,3.211539,8.020549,9.673806,7.292317,4.554050,-0.408709,4.813393,1.084996,6.816736,-7.412191,3.941770,-9.355375,3.752386,1.083761,-2.678210,4.139301,0.138681,3.301912,1.425827,-6.451033,-8.655513,2.088466,-5.084567,-3.197718,-5.692119,0.430493,5.760707,9.812533,-4.791379,9.235550,-3.783512,-8.575881,8.357397,-2.149058,-5.971797,-2.196648,4.933295,0.696566,-9.864385,7.909313,-6.733412,-5.571655,3.275083,0.421822,2.428756,-8.906583,5.483884,2.164052,-2.535482,-7.813191,-4.709998,3.310264,-8.713223,-8.896352,-4.925954,2.148821,-3.525092,2.126861,5.325516,8.418028,6.907503,5.028138,-7.503072,-8.676817,-0.108839,-5.674800,2.251643,6.935175,-0.441549,-7.023516,5.840922,5.597059,-3.443674,3.362027,6.680063,-0.131157,5.192399,-5.507013,-6.835071,-2.008499,8.663083,2.830206,4.529266,-5.329024,-2.865868,-3.503377,-9.055205,-4.261445,-0.893549,-8.838992,-6.913053,6.217723,-9.781062,-6.026980,-2.853360,-1.055820,4.240156,-1.250831,-0.555479,-7.939459,8.763825,-0.900285,-6.279711,-0.355833,1.958491,8.889968,7.267581,9.677030,-4.744789,-5.408279,-1.972929,-5.557568,3.180439,-7.905524,6.350024,-9.553605,-3.111106,-4.160155,0.728136,7.308870,7.882258,1.659257,6.130670,3.074788,-8.318058,-1.567442,-8.305364,-1.987974,3.036342,9.861473,6.224052,-2.204738,-1.245560,-9.681721,2.962624,-8.078526,-4.741217,-4.115382,-9.613527,0.493480,6.376222,-0.965045,-1.523995,0.636306,6.754112,-9.960451,3.964824,-6.634404,4.635740,2.723183,4.238770,-4.978161,3.908636,6.169758,-8.794078,-7.111635,9.960072,0.569218,1.912659,6.515490,0.502826,6.521500,-5.864770,-5.355701,9.568168,0.809995,-8.939968,-8.932084,-3.738775,6.069575,8.213999,-3.619478,-2.530618,-6.205243,1.964463,0.744736,-3.422767,8.266504,-0.998753,-8.958878,2.656310,-9.231109,5.010442,-0.943651,8.155634,-3.908985,1.021262,4.206152,-3.107400,-2.417864,6.003997,-2.665904,-5.203682,7.405545,-6.438843,-9.471282,1.285905,0.319048,-9.493349,-4.574300,9.843488,-7.132922,7.093916,4.424109,5.282487,8.988485,8.203347,-2.210559,7.765021,-9.321185,-2.254073,-3.426511,-3.489057,-3.440576,3.884498,-5.555431,-1.854093,4.190878,-8.971098,8.346533,-6.269943,-2.325271,1.045858,-8.538134,-1.102381,-7.686077,9.547436,-7.629527,-2.197124,-2.948853,5.345541,-3.266510,9.438876,-6.483523,-7.524993,-3.912087,-8.256008,-9.314092,2.248656,1.836222,-4.352327,-5.024665,-9.546642,4.015667,-9.505116,-2.919863,-7.915945,1.280793,-5.482244,9.073622,3.423108,-6.049723,-1.511739,8.700827,4.031022,-3.534441,-3.508717,0.099563,2.789722,1.917182,7.989082,-9.723402,7.961261,9.189100,1.850798,-0.033634,-4.772414,-3.004037,-1.537737,6.435786,-4.858329,0.806595,-2.455409,9.455148,5.376520,9.016731,-6.455887,-6.316918,2.953337,-0.314044,-5.638820,-6.008925,3.186456,8.106325,-9.539035,8.049055,-5.386016,-7.443498,4.159464,8.485580,-8.409943,1.258520,-7.913657,-6.057206,-5.919164,-3.775226,-7.204295,3.854473,6.552148,7.974667,0.125607,8.501865,5.643412,8.133590,9.801684,1.013787,9.425430,0.510737,-8.190882,-9.625199,-2.230676,1.312067,7.257664,-2.256765,2.696479,-6.063201,-4.577051,0.273769,5.271242,-3.148435,6.812856,7.925867,9.555315,-2.435463,-1.682159,-8.553773,6.292394,6.787406,-3.841910,3.901900,8.490995,5.524805,9.266662,3.941650,2.372103,-7.094276,2.638550,3.746049,-8.313120,-8.724448,-5.895958,3.387296,-4.936904,-0.619890,-3.774414,5.299797,-4.107606,6.970229,0.264047,-9.376339,-4.022206,2.913942,-2.798131,-3.362953,-0.057666,-5.002065,5.042949,-6.448053,-8.928831,9.739537,-6.756422,4.925469,5.099698,2.279554,4.425060,1.234651,-2.935390,-1.597612,5.874330,8.345339,5.947263,4.952464,1.124583,4.470307,-5.463623,-9.503472,0.336356,1.228150,-2.618215,8.351616,4.698816,3.382891,4.210817,-1.866769,3.428147,-2.363163,7.928126,3.455732,4.265570,2.848680,4.289615,-6.887627,4.760555,7.641410,-1.952617,7.041430,6.128876,2.798349,-6.960838,-0.216345,0.821408,2.698700,-9.758648,2.696037,1.732585,9.409545,-8.478760,1.677557,-4.988664,1.352565,3.640731,-9.715582,-9.328260,8.454362,7.970414,-5.614472,-6.688180,-5.021647,-3.176330,-9.007517,-4.327766,7.863236,5.921445,-3.207757,1.527846,0.910975,-1.174434,-3.754168,8.859711,-1.468526,8.958743,-3.658300,-3.656054,-6.898337,-1.562008,-8.933028,-5.887347,-2.619256,-9.047572,4.030302,-7.419724,-6.566370,-9.691506,0.942426,-7.922003,7.475298,-6.027725,2.311883,-3.133212,-9.143686,-9.384315,6.906205,-0.014031,-5.536698,-6.077965,-4.091007,-5.571947,2.245233,3.477053,3.833475,-3.097221,5.457192,-1.613926,7.453470,-9.877461,9.705524,-1.222824,-5.465364,-6.268241,5.823376,-4.365022,-4.822036,-4.576045,-2.779364,-4.353100,3.027750,-0.480052,-4.160021,6.820757,7.347540,8.524945,-9.264402,2.609817,-7.635167,-0.065351,-3.691531,3.420586,6.133374,-7.203252,-6.238410,9.833515,-0.180959,-7.671016,-8.900784,-2.697557,-6.936034,1.828038,-1.641565,2.872196,-5.155453,-8.726228,-5.705009,8.967178,-2.981766,8.094339,6.096536,-7.604221,-2.117644,-9.095532,5.322851,-3.903532,-6.679972,-2.656013,-2.563783,9.495267,5.917962,6.193581,0.908238,-4.831634,1.667527,-3.567454,-6.865241,-6.576156,-8.559539,-2.169241,8.305690,4.821648,-4.125743,-9.857886,7.979357,6.899933,-5.564036,-5.596622,-9.317872,9.751207,7.818175,-5.491924,-8.389488,-1.501480,7.935150,-2.633145,-4.486912,-5.551356,-5.977580,6.243535,-6.959992,-8.525646,-2.275849,-7.587470,6.914338,-8.698501,-8.575468,0.899103,2.359223,8.280699,-6.384630,2.636117,1.272546,8.895317,5.319172,0.597697,1.062889,-7.651622,-9.194275,-1.863525,-8.216292,-6.574865,2.730922,1.233480,-5.144515,0.838959,4.047566,0.229980,-7.869352,-8.956093,0.825784,5.425157,7.501539,-8.999803,3.889128,-7.927555,2.357353,-6.524084,-5.425009,8.054684,-3.897722,3.489304,-6.911037,-5.946256,8.493647,-6.140605,-1.465449,6.854203,0.212475,2.995536,8.117139,-2.680188,0.353341,8.686585,-1.287821,-0.263014,-8.897819,-7.719642,-3.165382,2.640406,5.936946,-4.980905,-3.203849,-6.036948,-6.667171,-4.737571,4.196584,-2.228806,1.847019,-2.772052,0.140448,-4.671674,-3.299478,-5.397836,1.945056,-6.107384,2.890238,-4.453000,-5.651651,4.947835,-6.982095,-5.694997,-0.991497,-4.471955,0.030041,4.907038,7.417419,-1.767701,8.821154,-4.734241,-7.778551,9.666028,-3.806256,8.194074,-3.922799,5.562100,-3.172669,-7.424809,-2.476225,-5.634448,4.723545,-9.632172,4.442279,-3.719459,7.207922,1.752610,3.963901,5.369265,-7.889088,3.326126,5.865832,-4.944355,-1.583808,-7.120309,8.944896,-2.005198,9.815797,-7.629730,8.814922,1.265969,6.279067,3.085359,2.816014,-1.164325,5.241459,4.170560,-4.883015,1.944810,-3.895679,-3.626371,-8.919911,4.141527,0.517096,6.718151,-2.214595,-8.369968,8.679437,1.119572,-4.070460,8.530331,1.787383,5.100310,-5.308665,-9.383757,-5.175004,-5.608419,-1.136782,-1.612540,0.801629,-3.288099,-8.088350,-2.323192,-4.327735,7.950862,3.320770,6.260700,4.754218,3.370697,0.233348,-8.105875,-6.469288,-3.696787,-0.947127,-2.277180,-6.740052,-2.048764,6.362167,1.407825,-1.718746,5.962489,2.873055,-7.070779,4.507882,-4.715992,6.926783,-2.513031,3.513190,-1.246524,-8.987822,-1.913800,-3.838727,6.582752,2.411787,9.921064,4.334735,5.510900,4.419249,4.994298,4.029556,3.009044,4.716642,-0.720994,5.615389,-8.488457,-9.996437,-8.148257,6.648548,-4.522489,-9.987688,-1.263085,-9.213909,-5.897888,7.379571,-9.992171,4.710632,-0.696019,-4.353977,-4.439767,3.338917,7.957582,7.244108,-9.536270,2.563526,2.024343,3.464655,-9.635059,7.483730,7.836117,-8.299032,-9.750517,-8.088305,-7.901321,5.978160,-2.739765,-5.809239,-9.589256,9.629922,-0.007077,-8.371718,5.838124,-5.953517,3.286020,-0.410449,-3.619088,1.662470,5.487635,2.684092,-2.876633,-4.840721,-5.700440,-6.941047,-3.616640,7.058173,-7.884053,-4.693715,5.936878,5.607819,-6.231204,-0.430196,4.217966,4.489104,3.113406,-3.215966,-2.491785,-0.718700,6.991570,8.371482,-3.046991,5.441947,-2.179169,-6.135693,-0.529069,0.063623,-9.939656,1.554734,9.049816,-6.862776,-4.832444,-6.918621,5.911423,6.757960,0.744915,-3.963277,9.438396,-8.871218,4.468239,-8.929449,5.907427,-3.516933,2.969714,4.753519,0.481678,2.425133,-1.735882,-2.917440,-4.465981,6.518011,-4.702365,7.746682,2.467376,-7.575654,8.758694,-1.653851,-8.833106,-5.588568,-0.905639,-4.071766,6.282296,0.787972,6.579340,8.974785,2.982975,8.133770,-2.724956,-2.577645,-6.790757,-9.700832,2.144800,-9.780292,1.279316,6.755197,-5.629694,8.936483,7.549598,-0.748810,-0.544203,-6.657031,-6.189750,-8.969705,-8.262691,-5.652193,1.032719,-3.611419,2.758298,-2.511444,2.555644,-5.587608,0.823301,6.740207,3.386327,5.478786,3.416485,4.235312,6.440326,-0.924965,-9.161067,-9.093360,3.363311,-3.683900,-7.510698,-1.210194,-9.856868,6.754372,-8.294645,-0.177228,-2.431889,-1.613098,2.346985,0.005719,2.027012,3.466790,-5.421525,0.037039,-7.225095,-8.246567,-4.566467,0.360468,-2.736291,-5.788447,8.826255,-9.735364,-0.438188,-8.883331,-0.113106,-3.748390,1.523823,-4.602875,3.425666,-5.422468,3.975722,-4.958063,0.485725,2.823540,2.956305,-8.108552,-3.301019,-7.496737,3.173209,6.795112,7.729525,5.037735,7.033564,-8.521625,9.053431,-8.124385,-3.884225,-6.887965,-9.424140,5.226610,6.636948,4.457707,-7.925664,-2.883415,-5.902805,0.460175,7.883436,-9.411013,-7.085352,-7.318252,6.347731,4.612405,4.371204,7.820521,9.067482,1.843268,9.705748,-2.983934,6.839016,7.594756,-8.723826,3.865326,-6.435135,-0.619573,-7.079327,-6.317639,-2.835700,3.331635,-5.365230,8.360244,9.367949,-6.983054,1.317027,-1.791550,-4.824774,-2.767884,0.064471,-7.999205,-1.041213,-3.575344,1.894775,-0.924214,-2.330018,-5.848977,2.518474,-2.011303,-6.489546,5.839841,-4.587196,-9.281154,5.985047,3.491069,-6.575361,-6.068687,6.739629,-2.856618,-4.229130,-3.994627,-4.959618,7.939265,-4.337827,5.938310,-9.798282,1.399210,-2.299239,3.141565,-8.026865,-4.441851,9.341221,0.326040,-8.717572,1.647326,3.749285,3.602357,-0.871315,1.149583,6.426011,-2.474627,7.649067,-3.587023,0.659028,6.249365,-2.995557,1.480873,4.656716,-0.951634,-9.355470,-0.284370,7.526767,2.910006,-2.516218,7.452636,8.723287,1.833861,3.813587,7.922133,-0.236961,-8.043615,-4.730470,-9.726316,1.459393,9.132180,-8.700716,8.524332,-6.396397,-2.683085,2.323893,-8.764250,7.367029,6.989772,9.028240,6.146963,0.240500,-9.776865,2.720008,2.687023,-3.591650,-7.882048,-6.781517,-4.924964,4.601682,3.872398,-8.178939,4.311827,-1.968429,-2.933885,8.960798,1.252656,-3.909121,0.396889,-2.354864,-6.815398,9.628560,6.084229,-5.681061,-4.557173,-2.213889,-0.540823,6.367695,-6.330326,-4.814258,2.450573,5.603615,-6.361443,3.993707,1.372763,0.130610,-5.992445,4.488217,-1.522367,2.408678,1.535849,6.618553,2.764037,4.816064,-3.198767,-6.297960,-0.983728,-7.025632,8.637763,-6.031801,4.949548,-1.503479,-4.673768,4.217261,8.530840,-8.463850,2.369860,-9.363380,-0.647677,-2.865717,1.763256,2.961334,-8.440861,7.182996,7.401694,1.469545,5.517746,-6.301235,0.712054,-7.416612,-0.367778,5.300025,-2.973420,-8.529054,4.393049,0.208322,-7.284627,-1.024787,-3.804331,-6.897756,8.812008,-0.797276,-6.542941,9.361154,7.711140,-7.336793,-7.457802,3.390626,-0.292086,4.589501,-7.777775,-3.600762,9.660299,-5.954461,-2.203299,9.369605,-0.763894,-6.730891,-3.706929,-2.709937,-1.887552,-6.648221,-9.618699,8.601055,7.020596,-7.785920,-4.815983,-9.741694,-8.966319,1.423515,-3.215328,-5.916445,0.068956,0.028112,-8.860232,1.405026,-5.675095,8.185298,4.899854,1.106454,-2.528923,-8.184422,0.429761,-8.490154,0.062847,-1.451861,3.295964,-5.048959,-2.371558,-1.830930,4.740004,1.484728,7.414064,-7.731372,7.318773,-6.645098,-8.637534,-1.884718,0.380254,2.036496,0.318615,-6.523225,-8.981299,4.818502,-6.465595,-1.330051,9.799413,-8.323004,-6.051879,9.907556,-5.587298,1.318059,-2.840174,-9.983892,3.739081,1.337432,-5.892607,0.646972,-8.408484,0.781169,-4.174380,6.400606,2.807405,1.144016,-2.853217,0.912729,-9.083553,6.617010,5.125351,-1.856398,6.587467,3.964047,-3.779624,6.641551,8.387315,3.828435,-7.777930,5.443447,-5.168662,2.663797,5.341953,-1.127340,-0.572977,-3.845754,5.524080,-1.979396,-3.902422,-3.821070,-0.779400,-8.488899,-1.377903,8.502430,-7.687202,-4.166936,0.537076,2.673277,5.052601,-5.433076,-7.652751,2.593506,-1.571718,-2.666782,6.750798,5.213066,-2.616525,5.400916,9.753985,5.633526,6.099350,0.582197,-8.991552,2.691589,-6.516340,5.616128,-5.236792,-8.391837,-0.466160,-1.842605,-9.967357,5.284801,7.145507,6.232244,1.240897,-5.505309,2.331477,-2.361516,-3.383568,3.646652,8.355499,6.948978,8.673963,-5.918155,7.915800,5.576529,-4.655483,-6.367762,9.168478,0.755153,1.208116,3.427381,8.043336,-9.542650,7.247994,-7.537514,-0.110520,-8.370809,3.203816,3.986010,0.904992,-3.393340,2.018587,8.830248,4.851981,8.386072,-8.269260,9.309580,-3.913606,-5.571148,9.213940,0.784267,-0.424006,2.926150,-5.127454,-3.211648,7.535635,-3.227405,-9.951717,7.165169,-3.442104,-9.573216,0.461372,-7.252081,8.518760,6.764181,2.394873,-9.573813,-9.860139,6.278070,-0.607743,7.458991,1.340615,-9.391087,3.341766,6.435362,-3.958651,0.720501,8.877820,-2.221790,-9.231201,4.951799,-3.080043,3.832205,1.465369,7.229896,4.111691,9.942672,-0.977501,-2.186648,4.521783,4.580776,1.773540,7.045529,-9.224853,6.451014,7.112973,-9.075950,-4.319744,-8.864163,7.409824,8.088802,-0.690298,4.679273,-1.574636,8.229827,8.529048,9.040068,0.745321,4.604108,-3.078596,-9.895258,0.924509,5.742563,-9.245295,9.553438,-4.456835,-2.939401,9.546441,0.638904,5.184438,8.574638,-4.131658,0.623714,2.340365,2.063331,6.438052,6.600191,9.726159,-4.222600,-5.331093,3.042235,-1.724677,-1.222271,1.699218,3.891403,-8.481217,7.364130,-6.499350,-7.772614,7.521423,5.203854,2.590892,6.763543,-4.461941,-7.361084,8.944789,5.437946,-9.817970,4.986462,8.520622,-5.523810,5.910306,-3.680185,8.667815,5.254306,1.751283,9.238066,3.651515,0.954340,9.255433,-9.940298,4.292990,-1.541004,7.150573,4.683919,1.509859,-8.827900,7.547614,-4.950925,5.211893,8.513805,-8.232421,3.645621,9.664065,6.366776,1.418271,1.332689,4.184863,-3.767961,1.838132,-1.216920,6.437623,6.130522,2.088003,6.050083,8.592328,5.628147,-1.392816,9.217182,8.135167,-0.155971,-6.880558,1.997987,3.959308,4.516772,6.218821,7.989002,-9.468348,0.614086,-1.167433,9.711614,5.178169,-1.404686,6.521810,4.106974,-1.275465,9.415065,1.161444,4.874107,-4.935804,1.200329,-5.554496,7.872208,8.144870,-4.969695,8.864426,2.956351,0.666966,-6.542886,6.816216,6.120645,1.624619,4.642685,-4.561693,-5.606993,6.778572,-0.921546,-0.578678,-8.332415,5.146063,-3.024537,-1.908219,8.122383,9.223867,4.101646,-7.049490,-4.019157,0.407927,-7.018134,-8.436324,8.923120,8.388963,8.039085,9.280491,8.036886,6.005782,3.965975,-1.463207,4.342011,5.749483,-3.115505,3.491058,4.496756,-2.678247,-7.500310,-3.925615,-0.176820,-4.060740,-0.928338,-4.391484,-5.749410,2.377919,6.350006,-9.952982,3.394525,5.846405,3.781904,-6.329683,-0.519917,9.633811,-6.740650], dtype = "float32")#candidate|10228|(1568,)|const|float32
const_10229 = relay.const([[-5],[-6],[-2],[4],[3],[-2],[7],[-9],[4],[-4],[1],[4],[-4],[8],[4],[4],[3],[-4],[1],[8],[-8],[-6],[8],[-5],[-7],[-7],[-10]], dtype = "uint32")#candidate|10229|(27, 1)|const|uint32
var_10230 = relay.var("var_10230", dtype = "int16", shape = (1092,))#candidate|10230|(1092,)|var|int16
var_10231 = relay.var("var_10231", dtype = "int8", shape = (1232,))#candidate|10231|(1232,)|var|int8
const_10232 = relay.const([-5,5,9,5,-7,-1,-5,1,6,6,-5,-2,5,-3,5,1,7,10,-7,-5,9,-1,-4,-8,8,-6,10,-2,-3,2,-4,-1,-10,4,-7,-4,-4,-3,-7,3,-6,2,6,-8,10,-10,-4,-3,4,-6,8,-9,4,5,2,9,-6,1,5,-2,1,9,-4,10,2,9,5,-2,-10,2,-4,10,-4,-1,-10,3,-6,-7,-5,-6,-4,-6,-5,-9,5,8,4,7,-7,-4,1,8,-2,-8,1,-5,-1,5,-9,-4,6,4,-8,-6,1,-5,1,-2,8,1,3,6,9,1,-6,4,7,-9,-3,1,7,8,9,1,7,-9,-10,-6,8,6,-2,-5,-10,-3,1,7,-10,-6,-5,8,-8,2,-6,6,-6,8,-5,-5,7,-8,-4,6,1,4,-8,-8,3,-2,-10,3,-1,6,-5,-10,10,1,-6,7,1,-5,-8,-3,7,-10,-6,-5,-5,4,3,-2,-6,7,2,-1,-9,-1,-3,8,2,7,4,-8,4,-8,-9,-9,5,-9,4,-1,-10,10,7,-1,9,-10,1,-1,-1,3,-1,-5,2,5,-7,9,-9,9,10,-8,10,-1,5,10,-10,5,7,10,-7,-7,1,10,-6,7,-10,4,-2,-5,-6,-4,7,-2,1,-8,-6,1,-1,-9,-1,-3,-1,5,4,2,-4,-8,8,-9,-1,5,10,-5,8,-5,10,4,-7,-7,-8,10,-9,-2,10,4,-6,9,9,-6,7,8,1,9,10,6,-8,9,-5,-2,2,-6,-7,6,-8,4,4,-1,5,-3,-7,-4,-5,2,-6,5,-2,-8,-6,6,-7,-9,2,5,1,4,-7,5,-1,-2,-1,5,-9,-2,-7,1,7,-4,10,-6,-7,9,9,6,10,7,8,-5,-4,4,-5,5,4,3,-9,5,1,2,7,-2,-7,-8,-10,1,-10,-7,-9,1,10,-5,4,6,3,7,-5,7,-7,-6,8,3,2,4,-10,5,8,-10,-2,-8,-2,7,4,-1,10,8,-7,-5,10,-10,-2,-2,-5,-3,-7,-3,5,-10,5,8,1,3,-6,6,-8,8,-1,2,-3,2,7,-10,-5,-1,-4,-6,-6,10,9,-10,2,9,-8,-9], dtype = "uint16")#candidate|10232|(420,)|const|uint16
call_10227 = relay.TupleGetItem(func_8743_call(relay.reshape(const_10228.astype('float32'), [14, 7, 16]), relay.reshape(const_10228.astype('float32'), [14, 7, 16]), relay.reshape(const_10229.astype('uint32'), [27,]), relay.reshape(var_10230.astype('int16'), [1092,]), relay.reshape(var_10231.astype('int8'), [616, 2]), relay.reshape(const_10232.astype('uint16'), [420,]), ), 3)
call_10233 = relay.TupleGetItem(func_8750_call(relay.reshape(const_10228.astype('float32'), [14, 7, 16]), relay.reshape(const_10228.astype('float32'), [14, 7, 16]), relay.reshape(const_10229.astype('uint32'), [27,]), relay.reshape(var_10230.astype('int16'), [1092,]), relay.reshape(var_10231.astype('int8'), [616, 2]), relay.reshape(const_10232.astype('uint16'), [420,]), ), 3)
func_3842_call = mod.get_global_var('func_3842')
func_3845_call = mutated_mod.get_global_var('func_3845')
var_10235 = relay.var("var_10235", dtype = "float32", shape = (21,))#candidate|10235|(21,)|var|float32
call_10234 = func_3842_call(relay.reshape(var_10235.astype('float32'), [3, 7, 1]))
call_10236 = func_3842_call(relay.reshape(var_10235.astype('float32'), [3, 7, 1]))
output = relay.Tuple([call_10194,call_10227,const_10228,const_10229,var_10230,var_10231,const_10232,call_10234,var_10235,])
output2 = relay.Tuple([call_10195,call_10233,const_10228,const_10229,var_10230,var_10231,const_10232,call_10236,var_10235,])
func_10240 = relay.Function([var_10230,var_10231,var_10235,], output)
mod['func_10240'] = func_10240
mod = relay.transform.InferType()(mod)
mutated_mod['func_10240'] = func_10240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10240_call = mutated_mod.get_global_var('func_10240')
var_10242 = relay.var("var_10242", dtype = "int16", shape = (1092,))#candidate|10242|(1092,)|var|int16
var_10243 = relay.var("var_10243", dtype = "int8", shape = (1232,))#candidate|10243|(1232,)|var|int8
var_10244 = relay.var("var_10244", dtype = "float32", shape = (21,))#candidate|10244|(21,)|var|float32
call_10241 = func_10240_call(var_10242,var_10243,var_10244,)
output = call_10241
func_10245 = relay.Function([var_10242,var_10243,var_10244,], output)
mutated_mod['func_10245'] = func_10245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9913_call = mod.get_global_var('func_9913')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_10288 = func_9913_call()
call_10289 = func_9913_call()
output = relay.Tuple([call_10288,])
output2 = relay.Tuple([call_10289,])
func_10305 = relay.Function([], output)
mod['func_10305'] = func_10305
mod = relay.transform.InferType()(mod)
mutated_mod['func_10305'] = func_10305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10305_call = mutated_mod.get_global_var('func_10305')
call_10306 = func_10305_call()
output = call_10306
func_10307 = relay.Function([], output)
mutated_mod['func_10307'] = func_10307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9803_call = mod.get_global_var('func_9803')
func_9804_call = mutated_mod.get_global_var('func_9804')
call_10311 = func_9803_call()
call_10312 = func_9803_call()
func_5868_call = mod.get_global_var('func_5868')
func_5871_call = mutated_mod.get_global_var('func_5871')
const_10363 = relay.const([[1.899932,5.506730,8.194453,0.774844],[-8.504130,-5.681099,-2.481368,-2.521980],[-3.436322,-4.970508,7.340440,7.077937],[-1.880898,7.048961,-1.149576,1.240935],[4.466478,3.231946,0.517978,-3.228423],[-4.364392,8.799780,-2.790471,9.794600],[8.334732,8.398691,-0.834416,4.187301],[6.149265,3.763103,-5.095388,0.579480],[6.403903,-2.422473,3.846267,-1.654372],[2.173232,-0.335324,-9.284552,-8.356050],[8.561067,-2.663226,-6.324688,-3.513557],[-5.270261,1.359527,-2.331097,-3.434220],[3.688000,0.533618,5.116331,8.424623],[3.124633,-8.371894,4.663517,5.923271],[-3.165160,-7.712863,8.321905,-2.398846],[-4.243986,-4.981232,-9.373348,9.585524],[1.177458,1.402423,-2.070700,1.274812],[-6.237038,3.416751,0.726971,9.456339],[7.034120,-5.233641,-0.990860,-3.447906],[7.144815,-1.292702,-2.231269,1.548954]], dtype = "float32")#candidate|10363|(20, 4)|const|float32
call_10362 = func_5868_call(relay.reshape(const_10363.astype('float32'), [5, 16, 1]))
call_10364 = func_5868_call(relay.reshape(const_10363.astype('float32'), [5, 16, 1]))
bop_10365 = relay.add(call_10362.astype('float32'), relay.reshape(const_10363.astype('float32'), relay.shape_of(call_10362))) # shape=(5, 16, 1)
bop_10368 = relay.add(call_10364.astype('float32'), relay.reshape(const_10363.astype('float32'), relay.shape_of(call_10364))) # shape=(5, 16, 1)
output = relay.Tuple([call_10311,bop_10365,])
output2 = relay.Tuple([call_10312,bop_10368,])
func_10380 = relay.Function([], output)
mod['func_10380'] = func_10380
mod = relay.transform.InferType()(mod)
mutated_mod['func_10380'] = func_10380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10380_call = mutated_mod.get_global_var('func_10380')
call_10381 = func_10380_call()
output = call_10381
func_10382 = relay.Function([], output)
mutated_mod['func_10382'] = func_10382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10305_call = mod.get_global_var('func_10305')
func_10307_call = mutated_mod.get_global_var('func_10307')
call_10428 = relay.TupleGetItem(func_10305_call(), 0)
call_10429 = relay.TupleGetItem(func_10307_call(), 0)
output = relay.Tuple([call_10428,])
output2 = relay.Tuple([call_10429,])
func_10436 = relay.Function([], output)
mod['func_10436'] = func_10436
mod = relay.transform.InferType()(mod)
mutated_mod['func_10436'] = func_10436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10436_call = mutated_mod.get_global_var('func_10436')
call_10437 = func_10436_call()
output = call_10437
func_10438 = relay.Function([], output)
mutated_mod['func_10438'] = func_10438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10305_call = mod.get_global_var('func_10305')
func_10307_call = mutated_mod.get_global_var('func_10307')
call_10502 = relay.TupleGetItem(func_10305_call(), 0)
call_10503 = relay.TupleGetItem(func_10307_call(), 0)
var_10529 = relay.var("var_10529", dtype = "float64", shape = (9, 11, 2))#candidate|10529|(9, 11, 2)|var|float64
bop_10530 = relay.subtract(call_10502.astype('float64'), relay.reshape(var_10529.astype('float64'), relay.shape_of(call_10502))) # shape=(9, 11, 2)
bop_10533 = relay.subtract(call_10503.astype('float64'), relay.reshape(var_10529.astype('float64'), relay.shape_of(call_10503))) # shape=(9, 11, 2)
output = bop_10530
output2 = bop_10533
func_10538 = relay.Function([var_10529,], output)
mod['func_10538'] = func_10538
mod = relay.transform.InferType()(mod)
mutated_mod['func_10538'] = func_10538
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10539 = relay.var("var_10539", dtype = "float64", shape = (9, 11, 2))#candidate|10539|(9, 11, 2)|var|float64
func_10538_call = mutated_mod.get_global_var('func_10538')
call_10540 = func_10538_call(var_10539)
output = call_10540
func_10541 = relay.Function([var_10539], output)
mutated_mod['func_10541'] = func_10541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10380_call = mod.get_global_var('func_10380')
func_10382_call = mutated_mod.get_global_var('func_10382')
call_10551 = relay.TupleGetItem(func_10380_call(), 1)
call_10552 = relay.TupleGetItem(func_10382_call(), 1)
func_10162_call = mod.get_global_var('func_10162')
func_10165_call = mutated_mod.get_global_var('func_10165')
const_10561 = relay.const([4.892860,5.972072,4.911925,-4.582261,-8.517585,-0.588439,-0.815727,-9.544857,-2.192059,-9.415287,1.746544,4.839918,1.353851,-1.608471,-3.588389,7.273346,-4.336588,9.596157,-0.280659,1.163439,-5.974493,-5.530870,2.211398,-8.705012,4.771160,-4.889538,8.960566,6.109574,-3.069776,-8.805781,0.021742,8.436634,-7.535073,-7.160773,-7.990249,2.739000,4.751572,9.953296,8.034698,-7.140314,-0.361486,3.157890,-7.420781,0.924308,-6.039207,-7.546779,6.425330,-3.732447,-4.934501,-0.825031,-1.151572,2.734895,-7.567579,-8.414067,-3.784043,-3.909923,2.880225,7.406604,9.548531,-7.762558,-8.444199,6.127784,-4.056790,5.027211,-0.383967,-3.946808,3.249559,-2.539543,-8.286758,3.426783,-4.132765,-6.608896,-5.382378,3.667759,-0.741044,3.489590,-8.871568,-8.800677,-0.828746,-7.563012,-1.400265,7.610982,-3.916839,5.106432,-8.727127,-2.118425,-3.755319,-2.790272,-1.443551,-3.602830,-8.089330,0.154411,6.115244,4.055194,8.450262,-7.096811,-7.922717,9.663556,-4.586704,-5.089877,-2.522581,0.356789,0.371784,9.282908,2.920918,-8.381501,7.623329,1.962270,8.629542,1.274140,-0.702773,-2.165514,8.501615,2.529497,-9.465547,5.187623,-9.753111,-5.555976,-2.148653,5.551895,0.555874,5.414406,5.619765,4.547982,-2.161389,6.627782,5.493848,3.253075,-8.649374,-2.532075,-4.440099,8.453413,-0.172494,-7.760044,9.814532,-3.161555,2.110648,0.824045,-4.844687,-6.930966,8.202019,9.412838,0.767045,-9.667124,-9.432770,0.333215,-9.943584,8.552395,-8.531528,5.439062,-2.714347,-2.034340,-9.867293,-7.373553,9.776637,3.162186,8.148484,8.940066,8.386436,-4.809750,-6.943530,2.713258,-9.614831,7.019015,-1.839919,-0.237914,-1.378208,3.616160,-5.895924,-5.006079,-6.632931,4.534535,-9.632091,-3.232207,-1.113321,3.336820,-4.782721,1.764708,-3.367174,9.428502,3.009390,5.299730,6.986072,-0.457634,-1.831859,3.455585,-2.734544,-9.213587,6.888282,2.118790,9.976650,-8.756054,1.422439,-1.202684,-2.237317,-5.130124,5.533246,2.220291], dtype = "float64")#candidate|10561|(198,)|const|float64
call_10560 = relay.TupleGetItem(func_10162_call(relay.reshape(const_10561.astype('float64'), [9, 11, 2])), 0)
call_10562 = relay.TupleGetItem(func_10165_call(relay.reshape(const_10561.astype('float64'), [9, 11, 2])), 0)
output = relay.Tuple([call_10551,call_10560,const_10561,])
output2 = relay.Tuple([call_10552,call_10562,const_10561,])
func_10563 = relay.Function([], output)
mod['func_10563'] = func_10563
mod = relay.transform.InferType()(mod)
mutated_mod['func_10563'] = func_10563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10563_call = mutated_mod.get_global_var('func_10563')
call_10564 = func_10563_call()
output = call_10564
func_10565 = relay.Function([], output)
mutated_mod['func_10565'] = func_10565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9803_call = mod.get_global_var('func_9803')
func_9804_call = mutated_mod.get_global_var('func_9804')
call_10589 = func_9803_call()
call_10590 = func_9803_call()
func_3922_call = mod.get_global_var('func_3922')
func_3927_call = mutated_mod.get_global_var('func_3927')
var_10608 = relay.var("var_10608", dtype = "float32", shape = (150, 2))#candidate|10608|(150, 2)|var|float32
var_10609 = relay.var("var_10609", dtype = "int16", shape = (9,))#candidate|10609|(9,)|var|int16
const_10610 = relay.const([[-2,-9,-9,-7,-10,-7,4,4,-8,-9,1,-4,-2,-3,6,7,4,-3,10,-8,-4,9,-5,-1,-10,-6,2,7,-6,4,6,10,-1,10,2,4,-3,4,-6,2,7,-8,-7,-4,-3,-7,-2,-8,-9,-4,8,-6,3,-10,-7,4,2,5,-6,4,-7,-10,-7,2,1,-6,-6,-2,2,-9,-6,-3,6,8,6,3,3,2,4,-4,10,3,-2,-6,-7,-3,9,-1,-5,6],[1,5,-5,-1,-9,-5,5,-6,5,1,-6,-6,4,9,-6,-1,6,-10,2,-3,8,-9,-10,-2,-6,6,1,8,-9,5,4,4,-3,-5,10,6,-10,3,-2,2,1,-2,7,-8,-9,-4,10,-6,-6,7,-1,-4,-8,10,5,7,-7,8,1,4,10,6,8,4,5,8,4,8,10,-1,-7,2,-9,1,8,-1,-3,-10,-9,3,-4,1,-6,10,-4,-2,1,-6,-4,-10],[2,1,-8,-6,-3,-10,-1,-7,-7,-2,9,-3,-8,3,-8,2,-4,-5,4,-7,10,6,-6,10,-1,6,6,4,-10,6,8,8,-1,-4,4,-3,-9,-8,3,2,-10,-8,10,2,9,-8,6,-8,-10,-5,6,-9,-9,1,2,-8,2,9,-9,1,-1,-4,-6,-5,7,-9,7,7,4,8,3,-8,-3,6,10,-10,6,-7,6,-9,3,7,7,-4,4,-6,-9,4,3,-3],[-9,5,7,-8,-7,8,-6,-8,9,-3,-5,1,-5,-5,7,3,-3,1,-4,2,7,-1,-5,5,2,-10,-7,2,-6,-2,7,8,8,9,-8,3,-3,8,3,3,-1,4,-3,-4,5,3,1,-1,1,-1,1,4,-6,1,6,-5,-8,-9,-7,-2,-6,4,8,-8,-5,6,1,-7,2,6,-5,-5,4,-4,4,5,2,-9,7,7,-4,-6,-5,-4,3,3,5,-1,-1,-1],[-4,8,8,-6,5,-6,10,-8,7,10,-3,9,2,-6,6,1,-4,8,6,-6,9,2,4,-4,9,2,-8,2,3,-4,-7,-9,-4,2,10,1,-10,3,-10,-6,3,-2,10,-3,-4,-2,-4,10,9,-7,2,2,-10,7,-10,-10,-2,5,8,5,-7,-1,-9,8,-4,8,-3,-9,5,-5,-10,9,-9,6,-2,-7,9,9,-10,-7,-2,-2,7,-9,7,7,-1,3,-3,-5],[-1,4,-2,-1,8,7,-5,4,-10,6,9,9,2,-7,-1,7,-7,-4,-4,3,3,3,-9,-3,1,8,-3,-9,-9,9,1,3,-9,-8,2,-6,-1,6,-7,1,-8,-8,-6,-5,3,4,-10,-1,4,1,-3,4,7,4,-8,-1,-3,-7,-8,-3,-6,5,4,4,-9,5,-3,4,8,5,-4,-4,9,-8,-4,8,-8,4,2,9,5,3,-2,10,-6,9,3,-9,-3,-9],[-7,-6,3,4,-10,-7,8,2,7,-1,-9,5,2,-6,10,-1,-6,10,7,-5,9,-1,-3,7,9,5,8,1,3,-6,-5,-9,-6,-10,-7,1,8,2,-8,-5,9,-4,9,1,-3,8,6,10,-8,-8,-5,2,-2,9,5,5,-4,-5,4,-9,-2,6,-4,-1,-7,1,7,-9,8,-9,4,9,2,-2,-9,-5,8,1,10,-8,1,2,1,-7,1,-5,9,-2,-9,7],[-5,-9,6,7,-1,4,2,-10,-9,-5,-4,-5,4,3,-4,-1,3,-4,-9,-4,3,2,3,-2,8,3,8,4,7,-5,-8,-2,6,9,-6,-6,2,-8,-10,5,8,2,8,-7,-5,-8,1,-3,7,-4,8,1,10,3,10,9,-10,5,1,2,6,-7,1,4,6,10,10,4,-3,-9,8,2,-1,3,8,-5,7,-1,-6,6,-5,-7,-10,-2,-9,7,-8,-3,-5,-10],[4,-9,-1,-9,5,10,4,4,8,8,-4,-5,5,3,4,4,1,9,4,-1,-7,-1,-10,-6,1,-8,-10,-9,-10,-6,-6,-4,-4,10,-5,8,-4,3,-6,-4,3,-1,-4,-10,1,-1,-6,3,-10,-7,2,4,-8,9,6,-8,5,1,-8,-6,-5,-5,1,-1,10,5,7,9,-8,7,2,-2,5,-8,4,-1,8,2,-5,-2,4,7,9,-5,4,9,-9,3,-4,-6]], dtype = "int16")#candidate|10610|(9, 90)|const|int16
call_10607 = relay.TupleGetItem(func_3922_call(relay.reshape(var_10608.astype('float32'), [2, 10, 15]), relay.reshape(var_10609.astype('int16'), [9,]), relay.reshape(const_10610.astype('int16'), [810,]), ), 1)
call_10611 = relay.TupleGetItem(func_3927_call(relay.reshape(var_10608.astype('float32'), [2, 10, 15]), relay.reshape(var_10609.astype('int16'), [9,]), relay.reshape(const_10610.astype('int16'), [810,]), ), 1)
uop_10624 = relay.rsqrt(var_10608.astype('float64')) # shape=(150, 2)
func_4483_call = mod.get_global_var('func_4483')
func_4490_call = mutated_mod.get_global_var('func_4490')
const_10629 = relay.const([[9.152556,4.497390,8.432343,3.074909,-0.056936,-6.324075,-5.539450,0.949640,9.046731,-4.579556,0.729152,-3.355280,6.764728,-4.436581,-3.441919,4.562259,9.321941,2.091065,0.578768,3.548573,5.924885,-1.593658,-1.593752,-7.609677,7.915583,-2.239460,5.756006,2.004663,5.075536,-9.726865,8.136741,8.181866,2.587170,8.306986,9.823930,-8.303675,-1.466047,-4.998779,-3.390005,-7.264380,4.779619,4.695270,8.144894,-5.105581,-7.314567,5.434745,-3.687833,5.234214,7.175720,9.521531,3.575050,5.879110,-1.108020,-4.391319,-9.892222,-2.339727,-2.250411,-2.384457,-0.583190,-8.877130,-8.151703,-3.272703,-2.469420,-0.211261,-3.798684,-7.615795],[6.210385,6.923249,-0.647342,-4.282810,6.745021,-8.715121,-0.243481,7.452407,8.641152,-5.136854,1.296207,6.744262,-3.987410,-6.070898,4.810443,-8.552598,-7.134533,-8.427859,-9.290507,-2.916221,-5.739010,5.143665,2.679853,1.135459,-4.085842,-9.507578,7.321328,8.217445,0.698141,-7.616544,-1.374328,7.659881,5.447327,0.067064,8.725884,6.094831,9.677617,-6.755370,7.260091,0.053411,3.941315,-8.946997,9.276842,-5.641333,6.480400,9.478381,-1.749636,-8.100976,5.989431,3.599791,5.168532,-2.033659,6.426381,-5.598088,-1.070363,-6.499278,5.720552,-5.029487,-5.730213,-5.311240,-3.501372,8.829583,-1.771998,-9.488371,-7.179484,-0.768167],[-4.804214,-1.519990,-1.472449,-7.454817,-7.808185,-4.332928,5.485452,3.747848,-2.623437,8.121617,3.753479,2.473088,5.931438,0.847418,0.617874,3.019459,-3.693860,0.841296,-7.011183,-3.974956,-0.043280,0.637662,6.354119,9.072674,-5.514220,-7.626039,4.497218,5.382466,3.120429,-8.375031,1.493393,-8.132944,9.534485,-1.104830,-0.536025,0.991312,1.213528,-9.808269,3.955904,-8.597953,2.503709,9.110935,-8.029722,5.699659,-4.826972,-8.918912,1.510382,9.501367,-8.419941,2.588959,-9.724494,3.577841,1.198320,4.777979,0.792877,-4.281846,-6.722088,-4.708350,-9.984937,7.799724,6.949950,-0.406355,-2.988726,-3.207896,5.867309,3.695857],[-1.714886,-9.461627,9.618656,-6.373196,6.870625,3.592452,-6.679099,2.969277,8.806397,9.365338,-6.339396,8.097312,-7.270930,-1.658395,3.530749,8.703168,-6.676969,0.643816,7.764525,9.349875,-3.327679,9.114891,-0.058916,-2.325613,1.751656,-7.400948,9.835994,-7.435162,2.434944,-1.504139,1.687123,-4.594151,6.134313,7.070479,4.162057,0.215940,6.816020,2.787645,5.614629,1.295813,1.171151,9.063893,1.154074,-5.282270,-4.734203,-0.954244,3.176200,3.465418,-9.629846,0.381330,8.028279,-2.163574,1.119028,-5.260092,8.085168,8.592012,-6.114518,2.239727,9.323045,-6.872776,-6.224167,6.594341,-8.741674,-8.068145,9.766085,-3.683690],[2.192667,6.730646,-6.934875,1.015173,8.145107,7.555436,5.789668,7.050082,-6.484330,-2.554210,-3.533134,-9.652848,9.844940,-8.854526,5.087084,5.320302,6.860102,7.103892,5.400632,5.416405,-4.041291,-9.088674,7.585248,-0.817685,3.527015,0.099885,-9.167856,-4.729887,-0.844688,-3.607830,-6.241501,-8.636379,-7.372769,6.406952,0.982821,-3.282316,7.390007,9.528760,-5.967471,2.389458,2.279626,-1.867892,-2.446522,5.511860,4.267849,-0.923293,2.676767,1.506241,6.657741,0.750496,4.641764,-7.590637,-2.323119,9.263049,5.690259,7.365925,8.145186,-1.122056,-7.767970,7.812576,3.558022,2.384484,-9.792899,-6.028870,-1.737230,-4.566557],[2.136522,-8.012445,5.020738,-9.740761,-4.653461,2.605576,8.947106,-5.633447,8.770577,6.705906,3.818584,2.514407,4.364241,8.979795,-1.414163,7.406340,-0.582335,3.530106,-0.144111,-1.754602,2.755055,-9.947825,7.496331,4.992415,-3.151520,0.235144,4.723275,-9.780242,-0.437550,-6.676304,0.074314,-6.161060,-9.338158,1.513806,-8.693963,3.836216,5.258304,-6.300802,-4.793625,7.744813,2.422442,9.649046,-5.907977,5.129054,8.017995,9.608105,-0.173079,4.880365,7.920331,8.842945,-3.810527,-7.671710,-3.916366,3.906463,-1.946470,-2.931314,8.929617,-4.573008,3.771883,5.826500,-2.240449,8.822341,-1.647190,1.286580,-4.302268,9.932312]], dtype = "float64")#candidate|10629|(6, 66)|const|float64
const_10630 = relay.const([[7,1,6,-3,2,-10,7,8,8,-7,3,7],[5,10,-9,3,2,7,-10,2,8,-7,-4,6],[4,-2,-1,10,-4,8,-3,-9,-7,-4,7,-8],[-7,-10,9,-5,-9,-1,6,6,4,-3,-5,1],[-1,8,10,-2,1,2,-10,-3,3,-9,5,-9],[7,5,4,-3,-2,4,-5,1,-10,5,9,9],[2,-1,1,-6,-9,10,7,-2,-4,-1,3,-6],[6,-3,9,-6,-7,-10,4,9,-6,-1,-4,-2],[-7,9,8,3,7,8,7,9,-1,-4,-4,10],[-4,3,-4,-6,1,-3,9,4,3,3,5,3],[2,3,-2,8,-6,4,9,10,-3,10,8,-1],[-5,8,10,-8,-3,-10,5,-1,-10,-10,-2,10],[3,1,-3,2,-9,-8,6,-3,8,-1,1,6],[6,-2,-8,8,-4,3,-3,5,-7,-3,10,1],[-7,-3,-4,-4,4,-1,-10,-4,-7,-2,-3,-4],[-2,3,-1,2,-7,-10,3,-3,10,9,-2,6],[9,-2,7,-3,1,2,2,-1,8,-2,-5,-8],[-1,-7,-8,-2,1,9,10,-6,10,2,-4,3],[-4,3,-9,4,-7,-3,-4,-4,-9,-2,9,-9],[-7,-2,-3,3,9,-7,-8,-8,-2,2,8,-10],[10,-7,1,9,6,-1,6,8,-9,-4,4,1],[-5,-1,-10,-1,4,-1,-3,-4,-2,9,10,-1],[-10,7,-7,1,1,4,-4,2,-10,-2,-3,-1],[3,3,7,2,1,3,-8,-9,-10,-10,7,-10],[-7,1,1,7,1,-7,5,6,-7,-3,7,3],[4,-10,7,9,4,-6,-1,-9,4,-9,-3,5],[5,-6,10,8,3,7,9,6,4,-8,-6,7],[1,8,-2,8,3,-10,1,8,-5,6,1,-7],[3,-1,-2,-10,4,-9,-3,4,8,10,3,5],[-5,3,-2,-10,-6,5,-9,1,3,10,8,3],[-9,7,-10,-9,3,10,2,4,3,4,-6,-5],[-6,6,-2,-9,-1,10,-9,8,-1,-9,10,-1],[-3,-7,1,-10,9,-2,-3,2,9,7,3,2],[-6,6,-6,-9,3,10,7,2,3,7,-5,2],[-10,-4,6,6,-6,-8,-1,-3,-2,-8,-10,7],[2,-9,-4,3,-4,9,-2,2,9,-2,6,3],[-6,-8,-1,10,-8,2,-4,8,-3,-7,-1,-5],[-10,1,4,-5,6,9,-8,-9,-1,-10,8,-2],[4,6,-10,-6,-9,6,2,6,-5,-3,5,1],[5,-9,-9,3,-2,-9,-3,-3,-3,-8,2,-2],[8,-2,-9,6,-4,6,10,7,2,4,-2,-8],[6,1,-9,-5,-8,9,-9,1,2,5,9,-3],[9,-6,4,7,9,10,-10,-4,-3,8,-10,3],[6,-3,3,6,3,2,-6,-9,-8,-3,-5,1],[-2,10,-7,3,3,10,3,-8,8,4,-1,-8],[-4,-9,2,7,-8,5,9,1,-5,10,5,-4],[9,8,3,-1,9,-7,2,6,-8,7,10,-1],[-9,2,-10,8,6,-1,3,7,-6,4,6,-9],[-2,6,-6,-6,-10,8,7,-9,-3,-4,-4,8],[-5,7,-2,-10,5,-6,-2,6,5,2,-2,-6],[1,9,1,3,-10,9,-7,6,-2,-2,9,8],[4,5,-9,10,1,7,-7,-9,-1,8,-9,1],[-1,8,3,-1,4,-4,8,-6,3,2,2,-8],[-4,-2,-3,4,5,1,8,6,9,-6,4,-8],[3,-7,-5,-9,-1,10,5,-9,6,10,-3,5],[-8,1,-10,9,10,2,10,2,4,9,-8,2]], dtype = "int8")#candidate|10630|(56, 12)|const|int8
var_10631 = relay.var("var_10631", dtype = "int16", shape = (1092,))#candidate|10631|(1092,)|var|int16
const_10632 = relay.const([True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,True,True], dtype = "bool")#candidate|10632|(117,)|const|bool
var_10633 = relay.var("var_10633", dtype = "bool", shape = (351,))#candidate|10633|(351,)|var|bool
call_10628 = relay.TupleGetItem(func_4483_call(relay.reshape(const_10629.astype('float64'), [4, 9, 11]), relay.reshape(const_10630.astype('int8'), [672,]), relay.reshape(var_10631.astype('int16'), [1092,]), relay.reshape(const_10632.astype('bool'), [117,]), relay.reshape(var_10633.astype('bool'), [3, 117]), ), 6)
call_10634 = relay.TupleGetItem(func_4490_call(relay.reshape(const_10629.astype('float64'), [4, 9, 11]), relay.reshape(const_10630.astype('int8'), [672,]), relay.reshape(var_10631.astype('int16'), [1092,]), relay.reshape(const_10632.astype('bool'), [117,]), relay.reshape(var_10633.astype('bool'), [3, 117]), ), 6)
func_2448_call = mod.get_global_var('func_2448')
func_2452_call = mutated_mod.get_global_var('func_2452')
var_10638 = relay.var("var_10638", dtype = "uint16", shape = (420,))#candidate|10638|(420,)|var|uint16
call_10637 = relay.TupleGetItem(func_2448_call(relay.reshape(var_10638.astype('uint16'), [10, 6, 7]), relay.reshape(const_10610.astype('int16'), [81, 10]), relay.reshape(const_10610.astype('int16'), [81, 10]), ), 3)
call_10639 = relay.TupleGetItem(func_2452_call(relay.reshape(var_10638.astype('uint16'), [10, 6, 7]), relay.reshape(const_10610.astype('int16'), [81, 10]), relay.reshape(const_10610.astype('int16'), [81, 10]), ), 3)
output = relay.Tuple([call_10589,call_10607,var_10609,const_10610,uop_10624,call_10628,const_10629,const_10630,var_10631,const_10632,var_10633,call_10637,var_10638,])
output2 = relay.Tuple([call_10590,call_10611,var_10609,const_10610,uop_10624,call_10634,const_10629,const_10630,var_10631,const_10632,var_10633,call_10639,var_10638,])
func_10654 = relay.Function([var_10608,var_10609,var_10631,var_10633,var_10638,], output)
mod['func_10654'] = func_10654
mod = relay.transform.InferType()(mod)
mutated_mod['func_10654'] = func_10654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10654_call = mutated_mod.get_global_var('func_10654')
var_10656 = relay.var("var_10656", dtype = "float32", shape = (150, 2))#candidate|10656|(150, 2)|var|float32
var_10657 = relay.var("var_10657", dtype = "int16", shape = (9,))#candidate|10657|(9,)|var|int16
var_10658 = relay.var("var_10658", dtype = "int16", shape = (1092,))#candidate|10658|(1092,)|var|int16
var_10659 = relay.var("var_10659", dtype = "bool", shape = (351,))#candidate|10659|(351,)|var|bool
var_10660 = relay.var("var_10660", dtype = "uint16", shape = (420,))#candidate|10660|(420,)|var|uint16
call_10655 = func_10654_call(var_10656,var_10657,var_10658,var_10659,var_10660,)
output = call_10655
func_10661 = relay.Function([var_10656,var_10657,var_10658,var_10659,var_10660,], output)
mutated_mod['func_10661'] = func_10661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10666 = relay.var("var_10666", dtype = "float64", shape = (2, 4, 13))#candidate|10666|(2, 4, 13)|var|float64
uop_10667 = relay.sin(var_10666.astype('float64')) # shape=(2, 4, 13)
uop_10671 = relay.cos(var_10666.astype('float32')) # shape=(2, 4, 13)
bop_10676 = relay.floor_divide(uop_10671.astype('float64'), relay.reshape(uop_10667.astype('float64'), relay.shape_of(uop_10671))) # shape=(2, 4, 13)
func_9867_call = mod.get_global_var('func_9867')
func_9868_call = mutated_mod.get_global_var('func_9868')
call_10681 = func_9867_call()
call_10682 = func_9867_call()
func_5254_call = mod.get_global_var('func_5254')
func_5261_call = mutated_mod.get_global_var('func_5261')
var_10685 = relay.var("var_10685", dtype = "int8", shape = (1232,))#candidate|10685|(1232,)|var|int8
var_10686 = relay.var("var_10686", dtype = "float32", shape = (21,))#candidate|10686|(21,)|var|float32
const_10687 = relay.const([[-0.106737,8.075376],[-7.427394,3.209640],[2.091531,-2.836951],[2.396004,-0.263872],[5.924134,9.169316],[7.067522,5.426119],[-2.609700,2.087376],[-9.911683,-9.165079],[6.568019,5.169022],[-3.438937,3.480990],[4.408495,-3.719456],[8.757229,-4.436129],[6.234157,1.104744],[3.752260,0.298492],[-2.353425,-5.373333],[8.367100,0.766964],[-4.926890,-4.667373],[2.062539,1.289088],[5.313284,-4.505921],[-4.828545,-5.997759],[-0.694801,-3.550044],[-6.635603,6.789344],[-0.008204,2.739875],[-0.712526,-8.265460],[-6.560574,0.426105],[-3.936777,-4.415220],[5.230054,3.145041],[8.814662,1.544630],[9.807947,6.066855],[0.671216,-8.217850],[-2.141553,8.907979],[1.622935,-4.264771],[7.723365,7.253812],[-6.116706,5.982200],[-6.180676,0.864062],[-2.379822,1.910570],[3.558960,6.485161],[0.562454,-4.126486],[-4.656570,6.057503],[-4.268109,0.061014],[7.440357,6.979732],[-2.467941,7.559545],[3.977080,-0.883537],[-5.234789,-4.113359],[-7.317585,-3.763630],[6.711956,9.026870],[0.542543,6.621216],[-1.125030,3.884316],[-1.489839,2.252610],[0.655950,2.563234],[-6.668732,9.463872],[-8.862619,-5.368261],[6.151836,-0.447648],[5.971332,-4.938981],[-6.822862,-4.150905],[-8.117489,1.146418],[1.087285,2.083386],[9.906086,5.664446],[-8.221304,-1.769503],[-2.383071,4.949330],[-4.470224,0.542197],[-4.339288,-9.743405],[9.274064,3.559397],[-6.609645,-2.752021],[-1.661163,-2.395046],[0.881991,2.170498],[-7.870252,-9.448815],[-5.066591,6.173651],[3.685189,-1.433005],[-9.784766,9.841841],[-7.534083,-2.304383],[2.796833,-0.186797],[-5.172163,6.159364],[-8.938425,-2.610484],[5.254898,-3.361977],[-1.133396,-6.147143],[-0.162149,5.184621],[9.497261,-3.776274],[-2.894769,-1.129410],[-1.508430,7.617891],[6.387018,-4.342175],[0.126819,7.133886],[5.865804,-0.626410],[2.766284,8.937198],[7.996475,-8.646955],[0.099379,-1.098535],[6.672576,3.116891],[9.880367,1.584155],[-1.241540,5.740078],[-9.926520,-3.664711],[-7.516714,5.790288],[2.475427,5.109087],[-2.576930,2.303310],[-2.500850,0.894270],[-2.075643,1.079968],[6.765392,-6.426261],[-7.727916,8.800042],[-6.167950,-6.132162],[-3.499893,-9.859249],[9.519283,-2.580693],[-3.289445,8.849268],[-9.139076,-4.536354],[-5.880756,-6.624691],[-5.362547,0.566866],[-1.419205,7.396318],[-6.905540,3.972304],[-7.050449,-6.847951],[2.905716,6.882904],[-2.944284,1.906129],[1.545982,1.213041],[5.753017,6.350684],[-1.765847,1.597913],[5.404884,-9.984014],[-5.587334,-2.704698],[1.448017,-4.843395],[9.616504,-4.749538],[8.138001,-9.139793],[-0.164961,-2.854392],[-6.695505,0.692025],[-3.346349,4.813085],[-0.786233,9.482148],[-4.184928,5.530968],[-7.620630,-0.073613],[2.289144,8.260513],[-5.195656,4.684260],[4.136059,2.522392],[6.411698,-7.648750],[7.702152,9.210764],[9.848807,-0.987118],[-2.191720,-0.548884],[-2.950080,-3.391298],[6.311638,-8.265128],[-1.854054,-1.164697],[3.601807,7.912607],[6.584890,-6.879322],[4.365781,-7.326645],[-4.301676,-0.886594],[-3.395557,3.322662],[-7.035406,-5.546020],[0.098854,9.375659],[-1.472376,6.208096],[5.223013,-5.785751],[-2.115194,0.297063],[-8.902732,2.627996],[2.811930,6.763978],[-1.081852,-9.563028],[-4.495210,-5.738623],[0.093334,4.701369],[-6.887693,3.526079],[2.652542,-8.322494],[-5.442410,-7.031869],[6.159367,6.995497],[2.602312,-8.428417],[4.279358,-8.561320],[6.265561,7.917538],[9.903603,-9.208567],[7.407099,9.407084],[4.108190,-1.019184],[-7.946076,-8.983263],[-2.833907,-9.155142],[-0.818647,8.775227],[5.058062,4.178922],[0.611612,3.446716],[-2.343433,-5.318793],[3.841747,-5.933480],[8.307161,-3.396417],[0.944026,7.835980],[-4.368482,-3.644763],[-6.391827,-5.445748],[4.429988,-6.223867],[-6.244319,9.546244],[3.645428,-5.313891],[-4.140781,5.932120],[1.962392,8.587290],[-2.507026,1.106778],[-1.736975,6.777016],[1.615577,-8.664780],[8.253573,8.180009],[-5.592655,-9.401099],[-3.302587,-7.557343],[-3.628990,-6.469757],[5.544250,-0.287618],[-5.265492,-3.540174],[4.893731,6.413200],[8.008906,-6.089428],[-8.487572,-7.737906],[-9.534233,-4.907607],[5.591038,0.499605],[-8.842505,3.272499],[9.394454,1.881311],[8.862906,-6.964596],[7.639562,-8.427982],[3.868387,-5.594815],[-3.918521,-0.807628],[5.988742,-4.226246],[5.985468,-9.769323],[5.837177,9.997594],[-6.406507,6.345369]], dtype = "float64")#candidate|10687|(198, 2)|const|float64
var_10688 = relay.var("var_10688", dtype = "int8", shape = (336, 2))#candidate|10688|(336, 2)|var|int8
var_10689 = relay.var("var_10689", dtype = "int16", shape = (1092,))#candidate|10689|(1092,)|var|int16
const_10690 = relay.const([-1,5,-10,-2,10,7,-4,1,-8,-10,-8,-7,-10,5,3,8,-10,3,-5,1,9,-7,10,10,10,-10,-5,-5,4,-2,9,4,-5,1,4,-5,-9,-5,-10,-9,-7,1,4,8,6,-6,10,-6,6,4,9,-4,-2,9,8,-4,-7,-8,1,-10,5,-3,7,-9,1,5,-3,-10,8,6,-9,10,7,6,5,4,3,5,1,3,5,1,6,2,-3,9,-1,8,10,-6,2,-5,1,5,1,-3,-5,-6,-6,-5,1,10,7,-1,-4,2,-9,2,-6,-2,-6,-5,9,-2,-2,-5,4,-4,-5,-10,2,-4,-10,2,5,2,1,2,9,-9,2,-5,-9,-9,-3,-3,2,9,8,-7,7,2,-7,10,-8,-8,-2,9,1,8,-7,-3,10,1,3,-1,-5,10,9,9,-8,-10,-9,4,6,-4,-4,-2,-8,4,-10,4,8,-7,-4,6,3,-6,6,-2,3,7,-4,-4,3,4,3,-9,3,-9,4,3,-3,10,9,2,-10,9,-10,-4,3,6,-9,-8,-3,-1,4,4,1,7,-8,3,-1,-9,7,4,5,-7,-5,7,2,2,-10,-3,4,4,-2,9,-9,-2,6,-8,6,-5,10,6,8,8,-6,-2,5,-4,2,8,-4,10,8,10,5,4,7,-7,-8,6,10,-6,-3,9,4,7,-10,9,-6,2,6,7,6,10,-1,-1,4,5,10,3,3,-3,4,3,-2,-1,8,2,2,-9,-8,-5,8,10,-5,-1,2,3,7,-5,-8,-7,-4,2,3,-10,-2,5,-4,7,9,-8,-3,6,7,-8,10,3,8,-2,7,-4,-7,-10,-4,-2,4,-4,3,6,1,-4,3,7,-3,2,10,-10,5,-2,6,3,-6,-8,7,10,1,-1,9,6,4,3,-6,-3,-4,1,10,1,-3,6,4,9,8,-10,5,-1,7,-5,9,-3,4,5,10,-10,7,-4,-10,6,1,6,-3,-7,5,3,-1,-8,-4,8,1,8,2,8,-5,1,-2,3,8,-10,-3,6,1,8,-9,1,4,7,-1,9,1,1,-1,-3,-6,1,-5,-3,10,-4,-10,8,-2,10,-2,-9,-3,10,-5,-2,-5,-10,9,-1,-9,-10,9,2,3,-5,3,9,4,-1,-4,10,7,4,-7,6,9,4,-4,-9,8,-3,8,6,-5,1,-9,9,-10,1,7,3,5,-1,-2,7,4,1,-4,-6,-6,-8,-5,-3,9,4,3,-1,-5,-9,-5,-8,-6,3,-10,1,-3,2,-6,-6,-9,3,10,-2,10,-1,-8,4,-10,4,-5,5,-3,-9,-2,-6,-7,-6,-6,-9,10,9,-3,-1,-1,4,-1,-5,7,-3,-9,1,1,1,4,2,-4,-3,8,-1,-1,5,3,6,2,-9,2,6,-5,-1,-1,-4,-5,-1,3,2,-4,-5,4,6,-3,-8,-3,8,-3,7,-1,-8,-2,-1,-10,8,-7,2,-8,-9,5,8,4,-6,-3,3,-7,-2,2,3,-6,8,8,5,2,7,-3,-5,-8,-6,-7,-9,-1,-3,-4,-7,-7,-4,-8,-1,2,8,-10,4,8,-3,10,9,-2,-6,-7,9,-9,1,3,-8,9,-2,-2,8,-6,-5,2,-10,4,-5,1,9,8,-7,-1,9,2,-8,8,4,-9,-4,1,-7,2,-10,-7,-2,6,-7,-6,-6,10,5,-9,5,8,-9,3,-5,-2,-5,3,-6,-9,-7,-1,-7,6,8,3,-3,1,1,2,9,3,2,3,7,1,9,7,-1,-2,-8,4,-5,5,-1,3,10,-3,-4,-8,-8,-4,-1,7,-6,2,-3,7,-3,5,9,1,-6,2,1,-8,1,8,-3,-5,-3,2,5,-3,4,-2,5,-4,8,-8,8,-7,-8,-10,-1,1,-1,-7,4,5,-7,-1,-10,3,1,-6,9,-7,-2,1,1,7,-7,-8,-6,9,10,6,-4,-6,4,5,9,10,10,-5,3,3,-6,-1,6,6,1,-3,-4,-2,-3,10,3,-3,3,-4,-8,8,-9,-6,10,-8,7,8,2,-8,8,-7,1,-4,8,5,-6,-9,4,2,1,-7,-1,8,4,10,-5,5,-7,-4,-8,10,-2,10,6,1,2,-6,2,8,-1,10,-5,3,5], dtype = "int16")#candidate|10690|(810,)|const|int16
call_10684 = relay.TupleGetItem(func_5254_call(relay.reshape(var_10685.astype('int8'), [8, 14, 11]), relay.reshape(var_10686.astype('float32'), [21, 1]), relay.reshape(const_10687.astype('float64'), [396,]), relay.reshape(var_10688.astype('int8'), [672,]), relay.reshape(var_10689.astype('int16'), [1092,]), relay.reshape(const_10690.astype('int16'), [810,]), ), 3)
call_10691 = relay.TupleGetItem(func_5261_call(relay.reshape(var_10685.astype('int8'), [8, 14, 11]), relay.reshape(var_10686.astype('float32'), [21, 1]), relay.reshape(const_10687.astype('float64'), [396,]), relay.reshape(var_10688.astype('int8'), [672,]), relay.reshape(var_10689.astype('int16'), [1092,]), relay.reshape(const_10690.astype('int16'), [810,]), ), 3)
var_10698 = relay.var("var_10698", dtype = "float64", shape = (198, 2))#candidate|10698|(198, 2)|var|float64
bop_10699 = relay.logical_or(const_10687.astype('bool'), relay.reshape(var_10698.astype('bool'), relay.shape_of(const_10687))) # shape=(198, 2)
uop_10711 = relay.log2(uop_10667.astype('float64')) # shape=(2, 4, 13)
bop_10715 = relay.bitwise_xor(var_10666.astype('int16'), relay.reshape(bop_10676.astype('int16'), relay.shape_of(var_10666))) # shape=(2, 4, 13)
var_10725 = relay.var("var_10725", dtype = "float32", shape = (21,))#candidate|10725|(21,)|var|float32
bop_10726 = relay.not_equal(var_10686.astype('bool'), relay.reshape(var_10725.astype('bool'), relay.shape_of(var_10686))) # shape=(21,)
output = relay.Tuple([call_10681,call_10684,var_10685,var_10688,var_10689,const_10690,bop_10699,uop_10711,bop_10715,bop_10726,])
output2 = relay.Tuple([call_10682,call_10691,var_10685,var_10688,var_10689,const_10690,bop_10699,uop_10711,bop_10715,bop_10726,])
func_10749 = relay.Function([var_10666,var_10685,var_10686,var_10688,var_10689,var_10698,var_10725,], output)
mod['func_10749'] = func_10749
mod = relay.transform.InferType()(mod)
mutated_mod['func_10749'] = func_10749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10749_call = mutated_mod.get_global_var('func_10749')
var_10751 = relay.var("var_10751", dtype = "float64", shape = (2, 4, 13))#candidate|10751|(2, 4, 13)|var|float64
var_10752 = relay.var("var_10752", dtype = "int8", shape = (1232,))#candidate|10752|(1232,)|var|int8
var_10753 = relay.var("var_10753", dtype = "float32", shape = (21,))#candidate|10753|(21,)|var|float32
var_10754 = relay.var("var_10754", dtype = "int8", shape = (336, 2))#candidate|10754|(336, 2)|var|int8
var_10755 = relay.var("var_10755", dtype = "int16", shape = (1092,))#candidate|10755|(1092,)|var|int16
var_10756 = relay.var("var_10756", dtype = "float64", shape = (198, 2))#candidate|10756|(198, 2)|var|float64
var_10757 = relay.var("var_10757", dtype = "float32", shape = (21,))#candidate|10757|(21,)|var|float32
call_10750 = func_10749_call(var_10751,var_10752,var_10753,var_10754,var_10755,var_10756,var_10757,)
output = call_10750
func_10758 = relay.Function([var_10751,var_10752,var_10753,var_10754,var_10755,var_10756,var_10757,], output)
mutated_mod['func_10758'] = func_10758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9913_call = mod.get_global_var('func_9913')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_10773 = func_9913_call()
call_10774 = func_9913_call()
output = call_10773
output2 = call_10774
func_10777 = relay.Function([], output)
mod['func_10777'] = func_10777
mod = relay.transform.InferType()(mod)
output = func_10777()
func_10778 = relay.Function([], output)
mutated_mod['func_10778'] = func_10778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9867_call = mod.get_global_var('func_9867')
func_9868_call = mutated_mod.get_global_var('func_9868')
call_10785 = func_9867_call()
call_10786 = func_9867_call()
func_9803_call = mod.get_global_var('func_9803')
func_9804_call = mutated_mod.get_global_var('func_9804')
call_10787 = func_9803_call()
call_10788 = func_9803_call()
output = relay.Tuple([call_10785,call_10787,])
output2 = relay.Tuple([call_10786,call_10788,])
func_10797 = relay.Function([], output)
mod['func_10797'] = func_10797
mod = relay.transform.InferType()(mod)
mutated_mod['func_10797'] = func_10797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10797_call = mutated_mod.get_global_var('func_10797')
call_10798 = func_10797_call()
output = call_10798
func_10799 = relay.Function([], output)
mutated_mod['func_10799'] = func_10799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9913_call = mod.get_global_var('func_9913')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_10845 = func_9913_call()
call_10846 = func_9913_call()
func_5594_call = mod.get_global_var('func_5594')
func_5602_call = mutated_mod.get_global_var('func_5602')
var_10858 = relay.var("var_10858", dtype = "uint32", shape = (27,))#candidate|10858|(27,)|var|uint32
const_10859 = relay.const([3,-3,-4,1,8,-5,-8,9,4], dtype = "int16")#candidate|10859|(9,)|const|int16
var_10860 = relay.var("var_10860", dtype = "int16", shape = (810,))#candidate|10860|(810,)|var|int16
const_10861 = relay.const([[-3.027416],[-9.533674],[1.722439],[1.217305],[4.737018],[-5.405287],[6.634492],[8.012911],[8.207275],[9.917951],[-7.236319],[-6.389839],[-3.481115],[7.063097],[-5.945918],[-8.662370],[1.613811],[-9.268533],[1.603488],[-9.948635],[-2.584793]], dtype = "float32")#candidate|10861|(21, 1)|const|float32
var_10862 = relay.var("var_10862", dtype = "int16", shape = (1092,))#candidate|10862|(1092,)|var|int16
var_10863 = relay.var("var_10863", dtype = "uint16", shape = (420,))#candidate|10863|(420,)|var|uint16
call_10857 = relay.TupleGetItem(func_5594_call(relay.reshape(var_10858.astype('uint32'), [3, 3, 3]), relay.reshape(var_10858.astype('uint32'), [3, 3, 3]), relay.reshape(const_10859.astype('int16'), [1, 9]), relay.reshape(var_10860.astype('int16'), [810,]), relay.reshape(const_10861.astype('float32'), [7, 3]), relay.reshape(var_10862.astype('int16'), [182, 6]), relay.reshape(var_10863.astype('uint16'), [420,]), ), 1)
call_10864 = relay.TupleGetItem(func_5602_call(relay.reshape(var_10858.astype('uint32'), [3, 3, 3]), relay.reshape(var_10858.astype('uint32'), [3, 3, 3]), relay.reshape(const_10859.astype('int16'), [1, 9]), relay.reshape(var_10860.astype('int16'), [810,]), relay.reshape(const_10861.astype('float32'), [7, 3]), relay.reshape(var_10862.astype('int16'), [182, 6]), relay.reshape(var_10863.astype('uint16'), [420,]), ), 1)
func_10749_call = mod.get_global_var('func_10749')
func_10758_call = mutated_mod.get_global_var('func_10758')
const_10872 = relay.const([-8.517490,6.829900,-2.089292,-2.693473,-0.257018,8.329116,-3.896359,5.647854,-8.443137,8.243058,-1.872359,-1.947740,4.939448,8.586577,-4.043615,3.236013,-2.979965,6.011059,6.301215,9.832685,-6.450214,8.985032,4.444232,6.615205,3.067675,8.008304,4.700222,8.250173,1.770816,9.036609,7.771764,-7.921426,0.804835,-2.713563,5.207713,-1.243947,6.003332,-3.748872,-9.213207,-1.516806,5.145443,3.443764,8.611549,5.590585,0.626817,1.508283,9.327828,2.062201,8.519230,-8.870606,2.816707,9.058124,-7.490236,3.482643,0.276435,-1.108278,0.786148,2.982817,-7.569832,9.901124,0.870234,-6.845507,4.716345,7.444990,-4.921215,1.492219,-2.153361,-3.975163,2.980647,1.504858,6.301348,1.827907,0.323757,-3.283231,6.325091,0.846230,-6.360369,5.642322,1.366619,-5.971307,-0.418863,8.974382,-6.664962,7.767218,-3.678818,-4.598115,5.225716,-8.745069,-3.391563,-5.108491,1.264893,-4.969100,-7.225228,6.955089,-4.519167,6.213784,6.796566,7.640032,-3.812524,4.282192,8.804346,-6.881639,3.462040,0.317186], dtype = "float64")#candidate|10872|(104,)|const|float64
const_10873 = relay.const([-6,-2,6,1,-4,-3,-7,3,-4,1,-10,10,-6,3,5,-5,-3,-5,5,-4,-2,5,4,5,-1,-9,-5,-5,2,-8,3,7,10,-4,-6,3,7,-9,-8,-8,3,9,6,2,-3,-6,-6,4,-5,-3,9,10,6,9,-6,-2,-4,-10,9,10,-4,10,-9,8,-3,6,-6,1,8,5,-9,-6,10,-5,9,10,-2,-5,-5,5,-1,3,7,-9,-6,-10,1,-9,-9,-1,10,4,-4,-4,-10,-8,-10,-10,4,4,4,-6,8,-8,-10,7,-10,3,-10,2,6,2,-10,-6,2,6,-2,2,8,8,1,-7,6,7,-8,7,1,-1,4,7,7,-3,-8,8,-7,5,2,8,-3,-6,-4,-5,2,7,-5,-1,10,1,1,5,8,5,-1,9,-8,4,-6,8,-7,4,-9,-4,1,8,-7,-9,2,-6,-6,8,-8,7,-3,3,-2,-4,6,-2,5,10,-5,-8,2,2,7,-2,-6,2,-6,1,-6,10,5,10,4,-4,6,5,-4,-5,-1,-9,-8,6,9,-3,-2,-6,7,-9,-3,-1,2,8,5,10,-2,2,-1,-5,4,5,1,5,7,-10,-6,3,8,-6,5,-10,-7,9,9,-10,2,-10,-9,2,8,8,4,4,3,7,-7,6,-9,4,7,-2,-9,1,-9,4,6,3,-3,3,6,5,9,7,-4,-10,5,1,6,2,6,5,9,-3,-5,-10,6,-6,5,-5,-6,-2,-6,-7,-5,-8,-4,-3,10,-7,10,-8,1,3,9,6,2,-8,-9,1,-3,-4,-1,-4,-1,-6,6,-9,-7,-2,-2,-4,6,-5,9,8,-6,-3,-1,7,-5,5,6,8,-8,-2,1,-7,1,10,9,-4,-4,1,3,7,9,-1,8,8,2,-6,-7,-7,-4,-8,9,-7,8,-8,4,-3,7,-7,5,-1,-5,-9,-10,3,-7,9,5,-1,-2,6,-4,8,-2,6,-2,4,4,2,-2,-9,7,9,4,5,-8,-1,-9,-6,5,8,-9,-5,-6,8,-3,10,-5,-10,-8,-4,-5,1,-5,4,-8,-7,5,-1,-10,-10,6,-5,-9,-1,-9,3,1,9,-10,-5,-5,7,-6,-10,7,-1,10,-7,10,-5,-2,-4,-4,-8,6,-5,6,3,-2,10,3,-6,9,1,1,2,-6,-6,-9,-5,8,10,-5,9,3,9,-5,10,-8,5,7,-3,-4,-3,5,-2,9,-10,2,-4,-9,5,-9,7,-4,-7,10,5,-8,8,6,8,-1,-2,6,-10,-2,-10,-9,-8,-9,-5,-4,-4,-9,-6,2,10,10,8,1,-2,4,4,9,8,7,-9,-6,-3,-7,7,3,-5,-3,-1,-3,-5,-7,2,-1,3,4,6,9,4,-8,-7,10,6,-7,8,-3,8,-2,-5,-1,-8,2,-6,5,7,2,-6,8,-8,2,8,8,5,-8,-2,7,-7,-6,-2,-4,-4,-4,1,-4,-8,4,10,-4,4,5,3,8,3,-5,-4,-3,-5,9,-9,-4,9,-5,-4,6,-2,-3,-3,7,4,-10,-8,9,1,1,2,9,5,-10,4,6,7,1,2,-7,-9,-7,1,4,5,-2,-9,8,-6,3,-6,-5,10,-2,-5,1,5,5,-3,8,2,-4,-2,7,1,-9,2,-10,10,-5,1,3,3,2,6,-3,-1,-1,1,4,-1,9,-4,6,-10,-3,6,-7,-3,-4,-2,-7,-5,-9,-8,8,-3,-5,-5,3,1,-6,-1,3,-5,-10,5,1,10,6,-10,-9,1,-2,-4,-2,10,-9,5,2,2,-7,3,-7,-8,1,9,-5,-4,9,-1,-3,10,-9,-8,5,6,5,1,-2,-8,1,5,-10,-10,-8,-1,-1,3,-8,-2,8,-8,-9,6,-10,-6,-2,6,9,2,-8,-6,-5,-8,1,9,-9,-4,-6,2,7,-10,7,2,3,-3,6,-7,-2,8,-6,-3,-4,3,-7,7,-1,2,2,-5,-7,-3,2,8,4,5,2,4,5,5,2,-6,10,4,2,-6,-10,6,8,5,-9,-3,10,-5,7,-7,-4,6,10,6,9,-5,-1,-2,2,-5,8,1,9,3,8,9,-2,7,-4,6,-7,6,-1,-10,-6,3,5,1,2,2,-3,-3,5,-7,-5,6,-5,3,-1,-8,-8,-10,-6,8,5,7,2,-3,2,-10,4,-2,-8,-2,5,-5,-10,7,6,-4,-7,10,-1,-8,4,3,-4,6,7,3,7,-7,3,-5,-1,-1,-9,10,6,4,-8,8,1,5,2,-2,-4,-10,-4,5,3,4,6,4,3,-2,7,2,5,-6,3,-10,8,3,4,-7,-5,10,6,5,-2,-10,-8,6,8,-2,1,-10,-1,-1,5,3,1,-3,-7,-8,-7,9,3,-1,-7,-3,-5,9,8,-1,10,-2,7,-1,4,-5,-2,-8,-8,-5,2,-7,-3,-2,-8,5,-7,2,2,8,5,-9,-6,1,8,2,3,8,6,8,-3,2,10,3,7,10,-5,-10,-7,-8,4,4,9,-5,2,-9,-4,6,-4,8,2,-7,8,-9,-6,-10,7,10,-8,9,8,-6,8,8,2,-7,-3,-3,-2,6,9,8,1,-10,-5,-8,8,5,7,1,-7,-4,-3,-9,-9,-2,-2,4,10,-10,-6,8,-4,9,-4,1,-1,2,-1,-8,10,1,-4,-3,1,-1,-4,1,10,9,2,-9,-4,6,6,6,-6,5,-3,6,4,1,4,7,-1,2,-6,-4,-2,6,6,1,10,-2,4,7,5,5,-7,3,-9,-1,6,5,-8,3,4,6,9,7,7,-1,-1,2,-9,7,-10,2,6,3,10,-7,-1,8,-10,5,-10,-2,5,8,8,1,-6,3,10,-3,3,3,-3,-4,-8,2,7,1,-7,5,6,3,-7,-1,4,5,6,-1,-3,-3,6,-10,-1,-5,10,2,-4,-8,-3,9,-5,-7,6,-9,3,-1,9,-1,2,9,-6,10,7,-2,-6,-10,-5,1,4,-10,4,-5,-3,-3,2,9,-2,9,-6,10,2,-3,6,10,-8,7,2,-6,8,-9,1,10,6,5,-8,4,-4,9,-2,9,9,-9,8,3,-5,8,-2,-3,6,10,2,6,-10,-7,-1,-10,2,1,-7,8,9,-9,-4,9,10,-6,3,10,4,-4,4,7,-5,8,3,3,-1,4,7,-5,-3,1,2,9,-7,-3,7,6,6,-4,-9,-2,-1,8,-10,-7,4,10,7,2,-2,-6,-4,-5,-6,9], dtype = "int8")#candidate|10873|(1232,)|const|int8
const_10874 = relay.const([[8,6,-10,2],[1,2,1,4],[10,6,-2,-2],[9,-6,5,-3],[-3,-2,4,-9],[-7,-4,4,4],[8,7,3,10],[3,6,-3,4],[10,7,1,8],[6,6,10,5],[4,-9,1,6],[-7,-3,-3,-4],[-2,-4,6,1],[-4,3,9,-3],[10,-7,-1,-5],[7,-9,-7,-3],[6,2,-1,-6],[-7,10,-9,-8],[-5,9,10,-8],[-4,-9,-10,9],[-2,-9,-1,-2],[6,-6,-5,1],[1,-9,6,8],[-4,2,-1,-9],[-2,-10,5,-3],[3,3,6,-7],[-8,6,4,5],[-4,2,-7,-10],[1,-2,-1,-5],[-6,2,6,9],[-8,7,2,9],[-8,1,2,-4],[3,-9,-3,-1],[-7,-3,4,5],[8,5,-2,5],[-3,-7,2,-10],[-9,1,7,3],[9,-5,9,-7],[1,-8,-4,5],[3,-6,3,-10],[-7,4,-5,6],[-4,-6,-2,-1],[-5,-10,-6,-8],[-6,2,10,-4],[2,-1,-7,-10],[-9,-6,-1,7],[-10,7,-1,2],[1,9,-5,8],[-2,-6,-7,2],[5,10,6,4],[-4,1,7,-5],[9,-10,8,2],[7,1,-6,-2],[10,9,-9,4],[-3,9,10,6],[1,-4,4,-10],[-5,8,3,-2],[-2,-9,-3,4],[-1,8,10,-3],[-2,1,4,-8],[2,2,-6,6],[-7,-8,-1,-8],[7,6,-10,8],[5,-7,-9,-1],[2,6,-10,-7],[1,-7,10,-7],[-3,-4,-9,4],[-2,-4,-9,3],[8,3,-4,-5],[8,9,9,-4],[-6,-5,3,-10],[4,5,1,-7],[7,-7,2,8],[-5,-7,3,-7],[10,-8,5,5],[4,-5,7,-5],[3,9,-5,-3],[-6,-5,2,9],[-5,-4,-5,-10],[-2,-3,8,-5],[-10,-6,3,-5],[10,7,-1,-5],[-5,5,-1,-8],[-1,-1,-9,-9],[3,5,-5,-7],[10,8,-2,6],[-3,9,7,6],[-10,-6,-5,1],[-8,-6,-9,-9],[-6,-10,9,8],[-10,-5,-6,-4],[10,-7,-3,-5],[-3,4,-3,-10],[-10,-1,-8,-3],[8,5,1,-10],[9,5,4,-5],[-2,-10,3,-6],[-2,-4,-6,9],[6,-9,5,-7],[-7,-6,-4,-1],[-9,-1,-10,-5],[-4,5,5,5],[9,-8,3,9],[-2,2,-6,-4],[3,7,-2,8],[-1,-7,6,-8],[8,-7,5,-3],[-1,-3,-10,-1],[-2,-8,1,2],[6,10,3,-5],[6,-2,-10,-8],[-1,-7,9,6],[4,-10,8,9],[-1,-6,-7,-5],[-6,5,-3,-6],[-5,-5,-1,-8],[5,-2,-9,-6],[7,7,6,-8],[1,8,-6,8],[9,6,6,-5],[-3,3,5,2],[-3,8,3,2],[9,9,6,7],[-3,-3,8,-8],[-4,-2,-10,3],[-5,5,-8,5],[-8,-1,2,-8],[-10,1,-1,-8],[2,6,-6,7],[1,-3,-10,-4],[-1,-1,-2,7],[1,9,-7,-9],[-9,-2,3,8],[1,2,-10,-10],[-3,5,1,9],[-7,8,-7,4],[-1,3,-6,-1],[-2,2,1,-2],[-4,-2,-6,1],[-9,-1,5,4],[-4,1,8,10],[-4,2,4,-2],[1,-3,2,4],[10,-8,5,-2],[-9,-10,4,-6],[2,-4,4,-3],[9,-5,8,4],[7,5,-6,-10],[10,1,-9,2],[7,-6,-3,7],[4,5,-1,4],[-1,-1,-5,-1],[2,1,-10,-3],[-1,9,7,-6],[-8,-7,-1,9],[9,10,-3,-1],[4,-4,-4,-3],[-5,9,-8,7],[7,5,2,-10],[3,6,-1,-9],[-8,-1,-2,-7],[9,-1,2,-1],[3,-7,-9,7],[-8,-8,-10,4],[-1,-2,3,10],[-7,7,10,-10],[-5,7,5,5],[-6,2,9,-6]], dtype = "int8")#candidate|10874|(168, 4)|const|int8
const_10875 = relay.const([8.464735,2.598196,-6.675562,-0.657876,-4.690746,9.518619,-0.679504,-4.570926,-2.204295,-0.411780,7.316926,5.953285,-2.167399,4.631871,7.130010,-9.229915,2.701559,2.268829,-5.079757,4.420169,2.782019,-7.528290,5.213292,5.206523,-5.538921,1.965597,-1.287853,0.457780,8.241821,2.441377,-9.979824,-5.415826,9.131121,8.473396,5.816859,-8.297814,-7.420126,-2.493513,9.469266,0.542994,2.876683,-5.506354,-2.371112,-1.979945,-8.013628,-5.983455,1.167714,-4.050776,8.073555,-0.166322,4.034028,8.805222,6.338384,9.955334,8.744835,4.440489,2.341446,8.855823,2.961212,-2.426343,4.710036,-3.286763,7.486165,6.423898,7.465800,5.080466,7.633746,-0.397097,-0.998958,4.001305,-3.139121,-2.389080,-2.177563,4.939413,9.459099,4.730665,4.286111,6.580739,5.417401,8.734427,-9.398833,4.713768,3.854234,2.064051,8.762510,8.547517,3.746863,8.213767,1.838158,4.601067,-7.958009,3.214876,4.420828,-3.647205,-5.767402,0.256202,-1.225075,-4.063833,-5.590684,4.837509,-9.308980,2.656395,-6.050098,-7.112512,-0.881158,-3.566380,-7.487709,-4.495110,-3.432307,-7.345598,-1.590208,-5.462149,-9.679625,-8.594524,-3.261524,-9.556631,-3.863007,-6.734693,2.536083,2.273588,-8.397016,-1.314412,2.573757,-3.836847,-8.034919,-9.056847,-8.285999,3.106654,7.291290,0.340302,-3.640767,1.296295,-8.627796,6.156287,-9.042981,5.042314,2.745769,9.930544,-0.531276,-1.809547,9.543285,7.599487,7.658379,-0.265303,-8.353359,-3.026423,-7.525701,4.528337,6.610053,-9.328354,3.588039,2.666495,8.794931,-5.809527,-0.076992,-2.003157,0.310527,-4.407129,5.749508,-3.601368,-0.405323,-7.092351,-8.275074,2.650876,-1.198560,3.441975,6.754856,-6.834278,4.867151,-4.161394,-9.603963,7.150349,-0.747402,-1.377413,2.594851,0.003625,-0.198037,-7.273936,-1.253659,-7.314006,3.032819,-1.453697,-0.821267,4.996085,5.266262,-6.502111,6.757553,-4.370268,1.556237,4.994362,5.006922,-3.268466,-5.713621,-2.851829,9.201243,1.847248,-4.293026,1.332980,6.688315,-6.047573,3.762670,-9.139128,6.904244,-5.929446,3.922001,0.365426,4.285089,-9.134281,-0.095734,-4.946336,-7.805806,-2.581574,9.326284,0.736475,-8.123015,-1.740650,-1.953458,-7.039992,0.347166,-3.058019,-6.361613,6.474405,-8.470068,5.708072,-3.901264,-2.997948,-2.393646,5.287471,-0.629053,-7.108078,-4.809568,-1.043324,5.836451,-4.700416,-1.206400,0.182752,-7.599402,-6.105343,6.967320,0.338202,5.592496,-1.101763,-5.354040,8.158367,-4.283572,-2.445902,-9.796106,-1.504465,5.688438,-9.748442,6.231313,0.147662,-2.090953,-6.881693,5.960767,0.166586,5.224582,-3.626776,6.922543,5.978459,6.250606,4.662167,-8.073845,0.644353,-8.823855,3.399736,-9.891552,-1.675707,-3.989192,-8.161237,-7.088187,-5.026868,1.636729,-2.855681,3.050407,-3.086073,5.919414,-6.538302,2.748072,7.635483,-4.505431,-7.799425,3.123786,5.434969,4.315413,-5.650120,-0.457888,-1.915876,8.164800,-3.782628,-8.578103,-2.478210,-3.352046,3.145038,-9.554534,-3.014263,-8.515266,8.593576,1.227866,1.136962,-8.935764,-3.741797,2.932010,-4.151804,2.284125,5.604433,-8.676829,5.876903,-6.983516,-8.935873,-0.379844,6.421003,8.447702,-2.883882,-8.111580,-1.544690,6.219382,8.526420,6.660769,-0.182813,-1.738523,-3.791100,2.761686,-7.842316,-9.865125,-5.451681,9.369293,4.881288,1.385223,8.412630,-4.924038,-7.039490,-3.247195,-1.281880,-6.272665,0.090196,-8.325750,7.655414,7.753888,2.805535,-4.553830,-3.755140,-0.029219,3.598848,-7.706341,6.112243,-5.260281,-4.139086,5.006635,-9.458821,0.409805,-7.921286,6.179340,8.421430,1.620634,-5.308314,2.659944,2.053017,3.554962,9.822294,6.178407,-0.671226,-3.037531,4.122720,5.944943,8.591699,9.600843,-8.069437,3.120925,8.647618,-7.831769,3.107271,2.508030,5.812883,6.534028,-0.790201,0.648657,-8.678935,8.244083,0.702756,5.786602,-5.348033,5.270198,5.945046,-2.517090,0.177119,-7.065367,-1.633823,-0.906321,-9.264916,-1.426169,-8.064324,3.748604,-8.126295,-1.155804,7.313395], dtype = "float64")#candidate|10875|(396,)|const|float64
call_10871 = relay.TupleGetItem(func_10749_call(relay.reshape(const_10872.astype('float64'), [2, 4, 13]), relay.reshape(const_10873.astype('int8'), [1232,]), relay.reshape(const_10861.astype('float32'), [21,]), relay.reshape(const_10874.astype('int8'), [336, 2]), relay.reshape(var_10862.astype('int16'), [1092,]), relay.reshape(const_10875.astype('float64'), [198, 2]), relay.reshape(const_10861.astype('float32'), [21,]), ), 2)
call_10876 = relay.TupleGetItem(func_10758_call(relay.reshape(const_10872.astype('float64'), [2, 4, 13]), relay.reshape(const_10873.astype('int8'), [1232,]), relay.reshape(const_10861.astype('float32'), [21,]), relay.reshape(const_10874.astype('int8'), [336, 2]), relay.reshape(var_10862.astype('int16'), [1092,]), relay.reshape(const_10875.astype('float64'), [198, 2]), relay.reshape(const_10861.astype('float32'), [21,]), ), 2)
output = relay.Tuple([call_10845,call_10857,var_10858,const_10859,var_10860,const_10861,var_10862,var_10863,call_10871,const_10872,const_10873,const_10874,const_10875,])
output2 = relay.Tuple([call_10846,call_10864,var_10858,const_10859,var_10860,const_10861,var_10862,var_10863,call_10876,const_10872,const_10873,const_10874,const_10875,])
func_10899 = relay.Function([var_10858,var_10860,var_10862,var_10863,], output)
mod['func_10899'] = func_10899
mod = relay.transform.InferType()(mod)
mutated_mod['func_10899'] = func_10899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10899_call = mutated_mod.get_global_var('func_10899')
var_10901 = relay.var("var_10901", dtype = "uint32", shape = (27,))#candidate|10901|(27,)|var|uint32
var_10902 = relay.var("var_10902", dtype = "int16", shape = (810,))#candidate|10902|(810,)|var|int16
var_10903 = relay.var("var_10903", dtype = "int16", shape = (1092,))#candidate|10903|(1092,)|var|int16
var_10904 = relay.var("var_10904", dtype = "uint16", shape = (420,))#candidate|10904|(420,)|var|uint16
call_10900 = func_10899_call(var_10901,var_10902,var_10903,var_10904,)
output = call_10900
func_10905 = relay.Function([var_10901,var_10902,var_10903,var_10904,], output)
mutated_mod['func_10905'] = func_10905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10436_call = mod.get_global_var('func_10436')
func_10438_call = mutated_mod.get_global_var('func_10438')
call_10992 = relay.TupleGetItem(func_10436_call(), 0)
call_10993 = relay.TupleGetItem(func_10438_call(), 0)
func_10240_call = mod.get_global_var('func_10240')
func_10245_call = mutated_mod.get_global_var('func_10245')
var_11003 = relay.var("var_11003", dtype = "int16", shape = (1092,))#candidate|11003|(1092,)|var|int16
const_11004 = relay.const([-4,-7,-9,10,9,-10,-10,3,-2,-1,-7,-9,6,-2,-9,-4,-1,-5,-5,4,2,-10,-10,10,-9,-6,-6,9,-6,-6,-2,-8,-3,-3,-8,2,-4,4,-7,-7,-3,-5,8,1,-2,1,-1,-9,3,-5,-1,-5,-1,-9,3,-7,9,-7,3,-2,-7,3,5,-2,-3,1,4,-1,7,3,5,8,1,2,-5,1,9,-2,5,5,1,-4,-4,-1,-2,-10,-6,1,-6,-1,7,-5,-7,3,10,-10,3,-7,-6,7,5,-6,-6,8,10,-2,-3,-5,1,4,7,-4,9,-9,-10,-4,-4,5,7,-3,-5,4,-10,-10,-9,4,-10,6,10,6,-2,6,-1,7,6,-3,-2,1,-7,5,-7,2,7,-9,-3,-6,5,2,-5,-2,-8,-10,-3,4,-1,-6,2,-8,-5,-6,3,-3,6,-2,2,-9,-10,-1,-1,-3,-8,5,-6,-8,1,9,-8,10,-6,4,-8,-10,-6,-3,8,1,6,5,-8,-5,7,-3,-4,8,5,10,6,4,-3,-7,5,-8,-4,5,7,3,3,8,6,9,-9,9,-1,5,9,4,2,7,6,-9,1,7,-7,1,-3,7,9,7,-8,-3,-4,3,8,3,-9,5,6,3,-8,-7,5,3,1,-6,-2,-7,6,4,7,8,-4,7,-8,3,5,7,7,3,-1,6,8,10,3,-9,-3,-8,3,-9,8,-5,4,-2,-5,9,-4,9,-10,7,7,4,5,9,1,-7,9,-1,-7,8,-8,7,-3,5,9,5,-9,6,-4,4,-2,-2,4,-8,4,4,-2,-5,9,-6,-3,-6,3,8,8,1,-2,3,-6,-10,6,4,7,2,-9,-6,-1,-5,-4,-2,-5,-2,-5,7,-7,-6,3,10,-9,-5,9,9,4,6,6,-2,-10,2,-1,-1,-7,1,6,7,-2,-2,-6,4,-4,9,8,-3,-10,-8,-5,1,-5,-10,-4,6,1,-10,6,6,4,-2,-1,-3,-3,1,-1,7,-5,-8,-6,-6,10,-4,9,8,7,6,-8,-8,3,6,4,-1,-2,9,-1,7,-10,-8,2,2,10,9,10,-7,-9,-6,-8,-1,6,-2,-4,6,9,4,-4,3,8,-1,9,1,3,-2,-4,3,2,7,-4,1,9,-7,4,6,-1,-10,5,10,-9,-8,7,5,7,-7,-6,-6,-6,9,-2,3,4,-4,7,8,8,2,-7,5,10,-5,-2,3,-4,1,-1,-7,-10,-5,-7,-4,9,2,-3,-10,-1,-9,-5,-5,7,5,2,5,5,8,3,8,-8,-5,-9,3,-9,-7,7,3,7,3,2,-1,8,-8,3,-10,-8,1,-2,-1,9,5,-9,-1,8,6,-4,4,6,2,10,2,8,9,-8,-9,8,4,-4,-4,10,2,-6,-5,-2,6,6,-10,-1,-4,-9,7,-7,-7,-7,5,10,1,-8,2,3,10,4,-6,10,4,-1,9,4,-2,6,10,5,-3,10,-2,1,-4,3,2,8,-5,8,10,9,-5,-9,10,-8,8,-8,1,-2,8,5,-1,5,5,-1,9,6,4,9,-1,6,-7,8,8,4,-7,6,-3,3,8,2,-1,-1,4,-8,-9,2,3,-3,-2,-8,6,-7,7,-7,-2,-2,5,-10,3,4,4,-7,8,9,9,-10,-1,5,7,-5,-1,3,-10,7,-3,-7,-8,6,-8,-7,10,3,-4,-9,4,-9,-1,-3,7,8,4,7,-2,10,-7,9,6,-1,4,-1,-6,-3,3,9,7,-2,-5,-3,-3,8,-9,9,1,-6,-10,3,-7,2,-2,2,10,-10,-2,-3,3,-4,2,-10,3,-8,-2,8,7,9,-5,-9,-4,2,-10,-2,-10,-7,-2,-5,-2,-10,4,-4,-2,-10,-6,1,-8,8,10,2,8,2,8,-5,-10,5,-4,7,-1,-2,8,7,-6,3,-4,-6,6,-2,-5,5,3,9,8,-3,5,-6,-9,-10,-7,-3,-7,5,8,8,-6,9,2,7,6,-8,5,5,-4,-1,7,4,-4,9,-6,-7,9,-10,-4,10,-8,10,-10,-9,7,5,-5,-7,-8,3,3,-6,6,3,6,-7,-10,8,-1,4,9,3,10,5,6,4,7,-2,-10,2,-8,8,7,8,5,7,1,7,10,9,-9,-7,-5,-3,6,8,-6,4,4,-3,-5,-10,10,8,-9,-8,-2,-9,8,1,-7,9,-7,7,4,8,-2,-6,8,-4,4,7,1,-4,-8,-10,-6,-8,-2,4,-7,-7,-3,-1,10,-5,-1,10,-10,8,1,-5,-9,-2,10,-10,8,-5,-2,-1,-4,-7,-1,-7,-5,-1,7,5,-10,10,3,-4,9,4,-8,6,-3,8,-1,-7,4,-3,5,-6,5,5,-5,-10,10,8,1,9,6,-10,-4,3,6,-6,4,-7,9,-6,3,-1,-2,-1,2,8,9,4,6,9,5,-4,9,-7,-7,3,1,-5,2,9,-7,-1,-5,-8,-4,3,-4,8,2,10,-8,-9,8,3,3,-3,9,7,-10,-4,-3,4,8,1,-5,9,-7,-4,6,4,-9,10,-2,1,3,6,6,5,2,-6,-8,-4,-5,7,-6,-1,-9,-3,7,3,-1,5,-3,-3,-6,-3,4,-9,-6,2,-9,-4,-3,9,3,9,-5,3,-7,-2,-7,-9,-4,2,5,1,9,2,4,-10,-5,1,3,7,-4,3,6,2,10,-10,-10,-9,-8,-8,2,9,9,5,-8,2,-1,-1,8,-9,-9,-3,1,7,1,-2,-7,8,3,-8,8,-2,8,8,-9,4,5,9,7,5,-3,-9,-10,-6,2,5,-5,-3,-2,-9,-7,1,8,9,-5,-3,1,-9,-1,-5,1,5,9,-9,8,-4,-10,-8,-6,-4,-1,-1,9,5,-7,4,-10,-5,6,2,3,10,4,2,5,2,4,-8,5,4,-4,1,-7,5,-10,7,4,7,-5,7,-6,6,2,5,-7,-1,-5,-5,9,-6,-8,10,-2,9,7,-9,-6,-5,7,8,-8,5,1,6,9,-9,-6,-8,-8,-8,-4,10,-2,-2,4,4,-1,5,-8,-4,-2,-5,-3,-9,-1,-8,3,-7,-10,5,9,3,-8,-3,-9,3,-1,-2,-1,-5,-9,7,8,9,5,1,-3,5,5,8,-7,7,-1,-2,1,7,10,-4,-10,-8,8,8,-6,-7,-10,-6,7,-5,-2,5,4,-5,-7,-3,-5,1,-10,9,1,8,-10,-10,-6,7,4,5,-3,-2,-1,-9,-6,2,-9], dtype = "int8")#candidate|11004|(1232,)|const|int8
var_11005 = relay.var("var_11005", dtype = "float32", shape = (1, 21))#candidate|11005|(1, 21)|var|float32
call_11002 = relay.TupleGetItem(func_10240_call(relay.reshape(var_11003.astype('int16'), [1092,]), relay.reshape(const_11004.astype('int8'), [1232,]), relay.reshape(var_11005.astype('float32'), [21,]), ), 2)
call_11006 = relay.TupleGetItem(func_10245_call(relay.reshape(var_11003.astype('int16'), [1092,]), relay.reshape(const_11004.astype('int8'), [1232,]), relay.reshape(var_11005.astype('float32'), [21,]), ), 2)
func_4734_call = mod.get_global_var('func_4734')
func_4737_call = mutated_mod.get_global_var('func_4737')
const_11013 = relay.const([6,-5,-8,6,9,-10,7,1,-3,5,-5,-6,-4,-8,-7,7,10,10,4,-7,8,-8,-7,2,-7,6,5,-5,-7,3,-8,9,-2,-8,-5,-9,-4,-9,-7,1,-9,-8,-6,-3,-5,-1,5,-1,-9,3,-5,4,-1,-8,-5,2,5,8,2,6,-6,-2,-7,9,-3,-9,-5,8,7,6,-5,7,8,-1,7,-2,4,-5,9,8,-6,-2,1,9,-6,-9,-3,10,2,-4,9,-1,7,8,7,10,3,4,-10,2,-8,-8,7,-2,9,7,9,-3,-1,-4,6,-2,6,5,-1,-1,-7,-9,6,3,-5,-3,8,5,-6,-8,3,-3,7,4,-4,6,5,-8,-7,6,3,8,-7,9,-2,-8,-8,-3,-1,-5,-3,8,6,-8,-7,7,-6,-9,8,6,6,6,-5,9,7,2,-4,-7,-6,-5,9,-3,9,-6,2,8,6,-2,-4,-8,6,10,-10,-2,1,-1,1,5,-8,8,5,-9,-1,-3,-3,-5,-2,-7,-1,-1,8,3,6,1,9,3,7,-6,-3,5,-3,-3,9,-9,2,-3,4,2,-3,3,4,7,-9,2,-5,8,-1,-3,4,1,4,4,9,9,1,-6,-9,6,8,-2,7,9,2,8,-5,-9,2,-8,-3,3,-10,-7,-1,-9,-3,2,-10,9,4,-7,6,-8,3,-9,3,-10,-10,2,-10,-2,1,-4,-4,4,-2,-7,-8,9,10,-10,2,6,7,-5,6,-1,-9,9,-1,3,3,-4,-4,-4,10,7,-6,-6,-8,1,6,2,-8,-1,3,2,4,7,-8,-2,9,-2,2,-7,9,-6,-1,-10,-1,-9,5,-10,-7,6,-2,-4,8,5,6,-2,-1,9,1,2,-2,-8,-10,5,7,-3,-2,7,6,1,5,6,2,-7,-7,-4,-8,8,-1,7,6,7,8,-7,-8,-8,-2,9,2,-8,5,-9,-6,-2,10,7,1,4,-9,-8,9,-2,-10,8,8,-2,2,7,6,7,3,4,9,7,-8,7,-9,-10,-1,-1,-6,4,-4,-6,-2,-8,8,-1,7,6,-1,3,-3,8,-3,5,-2,5,-9,8,-5,-8,-6,9,5,1,10,5,-8,9,4,9,2,3,7,5,-8,5,10,-9,1,2,-5,9,1,-3,4,2,9,9,9,-8,-7,-10,8,3,-3,-3,1,10,-1,-7,-6,-3,6,-1,-6,-1,3,-9,3,10,-6,-4,4,8,-6,2,-6,7,5,-7,8,-1,9,9,1,-10,4,-3,-6,6,6,6,-1,3,10,8,-8,-8,-10,-1,-8,-7,4,3,-2,4,6,-1,-4,6,6,1,-4,3,5,4,-6,8,-4,-4,1,-4,9,-6,2,4,-8,4,-5,4,2,5,-3,-1,-3,1,2,-3,-3,-3,-2,2,3,10,2,8,-5,5,-6,-3,1,5,1,4,6,6,-6,8,4,-7,-3,2,8,6,-4,-4,-4,8,-8,9,2,4,4,7,-1,4,-9,-3,-4,2,-7,2,-7,7,5,-9,-1,-6,6,-5,-10,-10,5,-8,2,6,-8,3,9,1,7,-2,5,-7,3,-8,3,2,1,9,-1,7,3,5,1,5,-9,8,7,7,-5,3,-2,8,-8,-9,9,-8,-7,4,2,5,8,-5,7,5,6,-2,6,2,-4,-2,-8,-7,5,2,-1,-9,10,-4,-8,3,-8,2,4,7,-6,2,9,-8,1,2,-9,-8,6,8,-10,8,5,-1,6,8,7,6,9,10,8,-1,4,-5,-3,6,1,3,-6,4,2,-3,-2,-5,-7,-3,9,-9,5,-5,7,4,-7,-6,1,2,2,2,-6,-6,-2,-7,3,7,-2,-6,4,-8,7,4,4,1,3,9,-2,2,4,-6,7,-4,-6,7,2,-2,9,-9,2,-10,-5,6,-4,3,8,-4,5,-4,-10,-2,6,1,10,10,-2,-8,-1,-4,1,-4,9,5,-6,4,2,8,1,-5,1,-4,-8,-10,5,6,3,6,-6,7,-4,7,8,3,-7,2,-6,1,-7,4,6,7,-8,3,-7,-7,3,4,1,3,-6,6,-1,7,-7,-9,1,-6,10,4,-2,-8,-6,8,-10,7,-8,-9,9,7,8,-1,-4,7,-8,3,5,7,-4,1,6,3,1,2,-9,-6,-7,-6,-5,6,8,-5,1,-6,-5,-10,-5,4,6,-5,-7,1,-9,-4,2,10,-9,2,-7,6,5,6,8,7,-7,8,3,-7,-10,9,-3,1,5,2,4,-7,-4,1,2,8,8,5,-7,4,-3,9,-3,8,8,2,-9,-10,-2,5,-9,-5,-8,10,3,3,8,-4,4,9,-3,3,9,-7,6,-7,6,6,2,-1,2,3,-8,3,10,-6,-2,-6,-2,-6,-4,5,-6,-4,-7,-5,1,-8,-4,2,2,8,-5,-9,-7,7,-7,-1,-1,3,-10,-6,-6,-9,-5,6,-9,3,9,4,8,-5,-4,-10,-1,-3,-9,1,3,-8,3,8,-10,-9,-5,-5,4,8,6,3,10,10,4,7,-1,10,10,-7,10,-9,9,-8,4,1,3,-9,9,-2,-9,2,5,8,-9,6,-3,4,7,-6,-9,2,2,-7,-9,6,10,-1,-2,-10,4,-2,-1,10,2,10,5,-5,3,10,5,-1,-5,-1,3,-10,9,3,-10,-9,-1,4,-3,2,5,10,-7,-6,-5,-1,-10,5,-5,-1,-3,7,-3,9,4,-2,3,-8,4,3,10,-8,-5,10,-3,-4,3,-10,4,2,1,4,5,2,-7,9,-9,8,9,-3,-10,1,-8,-2,10,-10,-8,-5,-10,4,-2,-3,-9,-6,-2,3,7,7,-6,-10,1,-7,8,-3,9,-4,-10,5,-1,-10,-1,4,10,5,-8,-10,9,-9,-1,5,-10,2,-9,1,-7,2,-5,-8,-6,1,-10,-5,10,5,-6,9,9,-6,-8,8,-8,-5,-7,-10,-6,8,-1,4,-7,-1,9,-9,-3,9,-3,-9,7,6,7,-8,-6,-8,7,10,-10,9,3,8,-4,-9,3,-10,2,-6,-3,-1,-1,7,10,4,-8,-9,-2,9,3,-4,8,9,-9,8,-1,10,5,-2,7,-4,8,8,-10,7,-8,2,-3,5,-9,-4,9,4,3,8,-1,-5,-8,10,-1,-1,-8,-5,5,-2,1,7,-2,-4,5,3,4,7,-2,-10,-4,1,6,-2,6,-7,2,6,5,8,-4,7,10,2,1,-4,4,6,5,-5,5,-9,8,-2,-7,-2,-3,9,-3,5,2,8,9,6,-5,5,4,7,-9,-2,9,-9,3,6,-8,9,-2,-6,2,-5,4,4,-3,-10,10,-1,8,-1,-8,6,-8,8,1,-1,7,-9,-5,10,6,10,-2,6,3,-10,6,8,10,-6,-9,5,4,-8,-8,6,-10,3,1,1,-9,-2,-8,9,-6,8,-3,-3,8,-5,-2,10,9,-6,-3,4,-8,6,-9,-4,9,10,7,-8,-5,-1,6,-10,7,7,3,-3,-8,-6,6,-1,4,-7,-5,7,-10,8,2,-2,2,-10,-1,-5,-1,-9,5,-2,-3,1,5,-9,-6,2,-5,-6,6,-3,8,7,10,-6,5,-5,6,6,4,10,-2,-10,7,-3,4,9,3,1,1,10,3,6,-1,-5,-8,7,-5,5,6,4,-4,-10,-10,-4,-8,9,-2,-3,7,-10,-2,3,5,-1,7,-1,-10,-2,1,3,4,3,7,9,-5,-9,7,6,3,4,-7,-3,-5,-9,-2,-8,-4,-2,-8,-7,1,9,1,1,7,3,10,10,2,-6,2,1,-6,9,4,-6,-3,3,4,-7,1,2,-6,9,-2,2,-10,9,6,9,-5,6,-1,1,5,4,-10,7,9,-3,2,4,-10,7,1,7,10,4,-2,-9,-5,-1,1,10,-6,10,10,-10,-7,6,3,-3,-7,-6,-4,-6,-10,-3,-6,9,-7,2,5,6,8,-9,7,6,9,-5,-9,-1,7,-7,6,-9,-9,8,2,5,10,-3,-3,3,2,-4,-6,-9,-6,9,4,-5,-8,4,-1,-10,-2,9,1,-9,7,-4,-6,-9,-9,6,-6,-6,-6,-4,9,9,8,-9,10,-4,9,2,-8,10,1,1,-7,-4,7,-3,4,2,-7,-3,-6,4,4,3,-10,1,8,-9,-1,9,2,8,3,-10,-8,-9,-1,-2,-2,-8,7,-2,-1,10,-5,-2,3,5,-10,8,9,4,2,-6,2,-5,-1,-2,9,8,4,-2,-10,3,-3,7,10,-1,-9,7,1,8,10,-8,-5,4,6,4,-5,5,-2,10,-6,-4,-10,-6,-4,2,-6,2,7,-1,-6,-9,4,8,6,7,1,-7,-6,-1,-7,2,-5,5,4,5,10,10,-5,1,-8,-3,2,1,3,8,-7,1,9,-6,-3,3,-4,-7,-3,2,9,-2,5,10,-5,6,-1,6,7,10,-4,1,-6,-6,-1,10,-2,-10,6,-7,-8,-7,-1,8,-6,6,-1,-5,-9,8,9,-9,-2,2,-9,-1,9,6,10,8,2,7,2,4,4,1,-2,6,9,2,-4,-5,-2,5,-6,-9,6,4,7,-9,-10,6,-1,5,-10,-8,-1,-7,5,-6,-4,9,-2,-6,-3,-2,7,6,-10,-8,10,-5,10,-6,6,5,-7,-8,7,10,10,4,9,7,-1,-10,-2,1,-8,6,9,2,6,-6,5,-5,-7,-4,7,8,6,-8,-4,2,-6,-4,10,10,7,8,-4,-8,-10,-7,-4,6,4,10,-10,10,1,-10,1,4,8,9,-5,-2,7,-3,-6,-1,-2,8,3,8,1,2,10,7,2,-9,-1,3,2,-9,6,9,-2,9,-3,9,7,-6,-1,-6,-9,9,7,9,7,-6,-9,10,1,9,6,-8,1,-1,-6,-5,-3,-4,4,10,1,-6,-10,-6,-6,5,-4,7,6,10,-7,7,-9,10,6,7,-5,-10,9,-6,-10,7,5,-1,-3,4,-6,-8,4,8,-8,-7,-8,-8,2,4,-4,-6,-6,-9,-8,7,-6,8,-4,9,-9,-5,-3,6,6,7,-10,10,-10,2,-3,-1,-5,8,5,-1,4,-3,-8,2,6,7,-4,9,7,-3,2,9,5,9,3,-4,6,3,6,-10,-5,-6,4,-5,1,-3,-2,-2,-8,-8,-3,-9,10,4], dtype = "int64")#candidate|11013|(1960,)|const|int64
call_11012 = func_4734_call(relay.reshape(const_11013.astype('int64'), [10, 14, 14]))
call_11014 = func_4734_call(relay.reshape(const_11013.astype('int64'), [10, 14, 14]))
func_2766_call = mod.get_global_var('func_2766')
func_2768_call = mutated_mod.get_global_var('func_2768')
var_11019 = relay.var("var_11019", dtype = "int8", shape = (2, 336))#candidate|11019|(2, 336)|var|int8
call_11018 = relay.TupleGetItem(func_2766_call(relay.reshape(var_11019.astype('int8'), [8, 14, 6])), 0)
call_11020 = relay.TupleGetItem(func_2768_call(relay.reshape(var_11019.astype('int8'), [8, 14, 6])), 0)
func_2448_call = mod.get_global_var('func_2448')
func_2452_call = mutated_mod.get_global_var('func_2452')
const_11029 = relay.const([2,-5,8,2,-3,-9,2,-5,1,-7,-9,5,-3,4,-10,7,8,-10,5,4,-2,-2,-8,-3,-8,1,-3,9,-3,-5,7,-4,5,5,-7,9,-2,8,-9,-1,1,4,-6,-9,5,1,-5,1,10,9,5,-9,-8,-8,-7,-4,9,-10,3,6,-3,-2,-2,8,6,-1,3,7,6,8,2,-2,2,-10,3,-2,10,5,-6,-6,-10,3,-7,-7,-8,6,1,-3,-2,-7,-8,1,5,-2,1,-3,-6,-4,-1,-6,8,-8,-2,1,3,-10,8,-1,-9,4,-10,1,-7,9,-8,4,-10,6,-5,-7,6,9,3,9,-2,4,-1,-10,-1,-8,-7,-6,7,9,8,10,7,10,-1,4,1,9,-2,-4,-9,4,5,3,2,3,1,-6,5,8,2,-1,-9,-8,-9,-8,3,4,-9,-1,10,1,-9,8,2,2,-10,-8,3,-4,8,-1,-1,10,-4,3,7,5,-2,2,1,-7,-6,1,-2,-2,-4,-1,1,-7,4,-9,5,-7,-7,8,-2,10,-3,-7,-6,7,-3,-9,2,9,5,7,2,-6,2,8,10,-1,-8,9,-9,-6,-3,-9,10,-10,-8,6,10,8,5,-5,-3,-9,7,5,-2,-10,-7,-1,9,-3,-8,-4,10,-10,7,1,2,-10,-7,4,-7,8,5,10,-3,-10,1,-1,9,7,7,-5,9,-7,-10,10,9,-1,9,10,-4,3,8,8,7,3,-5,-2,-6,5,-4,-5,-2,7,8,1,10,7,2,-5,-1,1,-7,-2,-4,10,9,10,2,3,9,-1,-2,8,4,-10,-2,-10,-4,3,-7,-7,-8,10,-8,-1,-8,5,1,-1,5,-1,-2,7,3,-5,2,-1,-3,-10,3,-6,-4,-9,4,-1,1,7,4,1,-3,2,-10,-6,3,4,9,-8,-2,-9,9,9,-5,5,-2,7,-3,-1,-1,8,2,3,-3,-6,2,-3,-9,-2,1,-2,-2,-10,-9,9,-7,7,8,-3,-2,6,-4,4,-3,8,4,9,-10,-10,-10,-2,-4,6,-10,3,-6,6,7,-5,-6,4,-2,5,-2,4,4,6,-4,1,1,-6,2,1,1,2,1,-7,-1,-7], dtype = "uint16")#candidate|11029|(420,)|const|uint16
const_11030 = relay.const([[10,-1],[-10,3],[7,-10],[-9,8],[2,-10],[-5,-7],[-6,4],[-4,-2],[4,7],[8,-9],[-6,-2],[9,2],[5,10],[-8,-7],[-3,6],[-9,-6],[-2,7],[3,-7],[-5,1],[-8,5],[8,1],[10,2],[-3,5],[-7,-5],[3,10],[-7,4],[-5,8],[-1,-7],[6,-5],[-8,-4],[-7,2],[-9,4],[-10,8],[1,-1],[-9,10],[-10,9],[6,6],[2,6],[-6,-5],[7,7],[-4,-3],[8,-3],[-3,-7],[1,10],[-1,-1],[4,-2],[6,-5],[7,-8],[-8,-9],[-7,3],[7,-2],[7,4],[-8,-9],[-2,5],[10,-1],[-4,9],[-4,-8],[3,2],[1,-6],[7,4],[-7,-8],[-8,7],[4,5],[10,10],[4,-6],[9,-7],[-1,-1],[-3,4],[2,8],[-6,5],[4,-8],[6,8],[-5,-9],[2,9],[8,-2],[6,10],[-9,-7],[-5,2],[4,6],[7,-10],[-10,-1],[4,8],[9,-3],[-7,5],[3,-8],[4,-2],[2,-8],[5,5],[8,10],[5,6],[-7,3],[1,-7],[-9,7],[-8,4],[8,-1],[10,8],[2,-2],[5,3],[6,-5],[3,5],[8,-7],[-10,8],[-3,-1],[-7,-4],[9,7],[3,-6],[-5,8],[-5,-4],[-5,-9],[4,-5],[8,-1],[-6,-3],[-1,9],[-10,5],[-7,7],[-7,5],[2,9],[3,2],[-9,-6],[7,8],[-2,4],[-5,9],[-3,4],[-7,-2],[-2,4],[4,-9],[-8,5],[-6,3],[-1,10],[-5,8],[5,-8],[10,3],[2,9],[1,6],[-3,-5],[6,-7],[-5,3],[-5,-10],[4,5],[9,-7],[-3,-6],[6,-8],[-4,8],[-10,-7],[1,7],[-4,6],[-6,-1],[9,7],[-4,-10],[6,9],[-10,-10],[-3,7],[8,2],[2,9],[1,4],[-5,3],[5,-10],[-3,3],[-8,-6],[-1,-9],[-9,-2],[-8,-1],[-8,-8],[8,-4],[7,8],[-7,-5],[-5,7],[6,-6],[6,-7],[8,1],[5,-10],[-3,7],[-2,-3],[-5,5],[-9,-7],[-10,-1],[-2,9],[6,-7],[1,5],[-4,5],[-7,-5],[7,4],[2,-3],[8,-9],[2,-10],[7,-1],[-5,-2],[9,4],[-8,-10],[-1,-10],[-8,7],[9,-6],[-1,-1],[-2,-9],[-1,5],[-10,7],[10,-2],[-2,5],[-7,7],[8,7],[10,10],[-2,-10],[-9,4],[5,-9],[9,-7],[-4,-2],[-7,-7],[2,4],[9,5],[-2,4],[-9,-3],[10,-1],[-3,-9],[-3,10],[-1,4],[-8,-7],[-10,-10],[-7,-6],[-3,-1],[10,1],[2,-4],[2,-4],[-10,10],[5,-7],[-10,-9],[-3,5],[5,8],[-10,1],[-10,7],[-1,-5],[-9,1],[2,3],[6,1],[9,7],[2,9],[6,-3],[7,8],[-1,10],[-8,8],[-8,-4],[-4,-6],[-10,7],[8,-3],[-8,-1],[-6,-6],[2,9],[-5,-1],[-7,-7],[-9,4],[-6,3],[-8,8],[-3,-2],[8,8],[-2,-9],[3,1],[-3,10],[1,-3],[-4,-1],[-3,8],[-8,4],[10,5],[8,-10],[3,2],[-10,-10],[-6,-10],[-9,3],[-9,-7],[3,4],[-5,5],[4,6],[-7,-3],[-3,-9],[-8,-3],[9,-1],[9,9],[3,-7],[-4,-2],[10,-6],[-10,-5],[6,4],[-3,2],[-3,4],[3,5],[-7,-4],[5,-1],[-6,3],[10,9],[-1,9],[-9,10],[6,-7],[-7,6],[-5,7],[6,6],[-9,-10],[-4,-4],[-3,1],[-3,-8],[-4,9],[7,7],[4,3],[-4,-6],[5,-3],[-6,-6],[-9,4],[9,-3],[7,4],[5,-8],[-5,-3],[-8,-3],[6,2],[2,-2],[4,-5],[10,-5],[7,-2],[1,3],[1,-7],[4,1],[-10,1],[-10,5],[1,-6],[7,9],[-1,8],[1,9],[7,10],[-8,9],[-4,1],[3,8],[5,6],[-3,8],[6,-5],[-9,-10],[10,6],[-10,9],[-5,-8],[4,4],[-7,-5],[-5,-4],[1,9],[-6,6],[10,-8],[-9,4],[5,4],[-7,-3],[1,7],[-1,9],[2,9],[9,-4],[7,9],[8,10],[7,-5],[4,-1],[3,3],[8,-5],[-1,8],[2,-1],[5,7],[-7,-7],[2,-3],[9,3],[1,-8],[-9,-9],[9,-2],[-1,-2],[-7,2],[-7,-10],[-2,-7],[-6,-4],[8,6],[-9,8],[4,1],[-5,4],[3,7],[4,10],[2,-8],[10,5],[-8,-5],[-10,4],[-3,9],[-7,3],[10,1],[9,9],[-9,-2],[-1,-4],[10,3],[-2,-3],[-2,-6],[-7,3],[9,1],[-3,9],[-1,10],[-10,8],[-4,9],[10,3],[-6,4],[-8,-3],[9,4],[8,6],[6,9],[10,5],[10,2],[-6,5],[5,-7],[6,-9],[4,9],[-7,-9]], dtype = "int16")#candidate|11030|(405, 2)|const|int16
call_11028 = relay.TupleGetItem(func_2448_call(relay.reshape(const_11029.astype('uint16'), [10, 6, 7]), relay.reshape(const_11030.astype('int16'), [81, 10]), relay.reshape(const_11030.astype('int16'), [81, 10]), ), 2)
call_11031 = relay.TupleGetItem(func_2452_call(relay.reshape(const_11029.astype('uint16'), [10, 6, 7]), relay.reshape(const_11030.astype('int16'), [81, 10]), relay.reshape(const_11030.astype('int16'), [81, 10]), ), 2)
output = relay.Tuple([call_10992,call_11002,var_11003,const_11004,var_11005,call_11012,const_11013,call_11018,var_11019,call_11028,const_11029,const_11030,])
output2 = relay.Tuple([call_10993,call_11006,var_11003,const_11004,var_11005,call_11014,const_11013,call_11020,var_11019,call_11031,const_11029,const_11030,])
func_11033 = relay.Function([var_11003,var_11005,var_11019,], output)
mod['func_11033'] = func_11033
mod = relay.transform.InferType()(mod)
var_11034 = relay.var("var_11034", dtype = "int16", shape = (1092,))#candidate|11034|(1092,)|var|int16
var_11035 = relay.var("var_11035", dtype = "float32", shape = (1, 21))#candidate|11035|(1, 21)|var|float32
var_11036 = relay.var("var_11036", dtype = "int8", shape = (2, 336))#candidate|11036|(2, 336)|var|int8
output = func_11033(var_11034,var_11035,var_11036,)
func_11037 = relay.Function([var_11034,var_11035,var_11036,], output)
mutated_mod['func_11037'] = func_11037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10563_call = mod.get_global_var('func_10563')
func_10565_call = mutated_mod.get_global_var('func_10565')
call_11052 = relay.TupleGetItem(func_10563_call(), 2)
call_11053 = relay.TupleGetItem(func_10565_call(), 2)
func_8898_call = mod.get_global_var('func_8898')
func_8901_call = mutated_mod.get_global_var('func_8901')
const_11059 = relay.const([[3.693835,-2.596195,-1.149535,4.506112],[-9.306713,2.385529,1.040792,-0.091134],[-3.693777,9.012196,-8.144597,5.946183],[9.740608,9.240958,-0.104243,-7.246447],[0.690168,-5.047990,9.905041,-6.989161],[8.206762,6.948133,-4.506513,5.037579],[-7.729012,5.411310,3.914081,2.943122],[3.314906,-7.728379,-8.829410,9.589939],[8.500415,-2.773180,6.335830,-4.869065],[-0.567944,-1.020891,-3.236599,7.938999],[-6.790335,6.875433,-2.104664,-0.049227],[5.326299,5.791526,-6.423894,9.392371],[7.065090,-0.248573,7.058378,8.626059],[-7.448003,-5.405057,-5.282359,-7.473202],[-0.271779,-8.057766,-8.363321,7.926168],[8.880348,-9.654620,8.031126,3.417071],[9.648121,-2.019217,4.429336,-8.889026],[3.804074,-2.105564,-1.848835,-7.445615],[-7.231335,4.159661,-1.773485,7.853691],[-3.344121,2.897087,0.141165,-7.112405],[-7.291501,2.912909,-5.453535,-2.685023],[-0.587470,0.392778,4.682130,-6.725972],[-1.753931,-6.417534,-6.366052,-7.742311],[3.091792,-5.444543,7.990001,6.682843],[7.603149,3.415165,-1.451473,3.466924],[-8.649073,-7.721017,2.218191,1.714394],[-1.018865,-8.793271,8.038263,2.532984],[-9.214601,-0.874000,-4.106474,9.078263],[-1.420213,-2.525946,-0.696762,-5.110540],[-9.439786,-0.260516,1.382532,-3.923832],[-6.399614,-8.121206,1.736776,-9.342546],[7.692808,8.405266,6.083581,-0.108083],[0.450481,-4.217142,-7.603405,-1.122276]], dtype = "float32")#candidate|11059|(33, 4)|const|float32
call_11058 = relay.TupleGetItem(func_8898_call(relay.reshape(const_11059.astype('float32'), [2, 11, 6])), 0)
call_11060 = relay.TupleGetItem(func_8901_call(relay.reshape(const_11059.astype('float32'), [2, 11, 6])), 0)
func_10436_call = mod.get_global_var('func_10436')
func_10438_call = mutated_mod.get_global_var('func_10438')
call_11068 = relay.TupleGetItem(func_10436_call(), 0)
call_11069 = relay.TupleGetItem(func_10438_call(), 0)
func_9455_call = mod.get_global_var('func_9455')
func_9458_call = mutated_mod.get_global_var('func_9458')
var_11071 = relay.var("var_11071", dtype = "int8", shape = (672,))#candidate|11071|(672,)|var|int8
const_11072 = relay.const([True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,False,True,False], dtype = "bool")#candidate|11072|(351,)|const|bool
call_11070 = relay.TupleGetItem(func_9455_call(relay.reshape(var_11071.astype('int8'), [672,]), relay.reshape(const_11072.astype('bool'), [351,]), ), 0)
call_11073 = relay.TupleGetItem(func_9458_call(relay.reshape(var_11071.astype('int8'), [672,]), relay.reshape(const_11072.astype('bool'), [351,]), ), 0)
output = relay.Tuple([call_11052,call_11058,const_11059,call_11068,call_11070,var_11071,const_11072,])
output2 = relay.Tuple([call_11053,call_11060,const_11059,call_11069,call_11073,var_11071,const_11072,])
func_11082 = relay.Function([var_11071,], output)
mod['func_11082'] = func_11082
mod = relay.transform.InferType()(mod)
var_11083 = relay.var("var_11083", dtype = "int8", shape = (672,))#candidate|11083|(672,)|var|int8
output = func_11082(var_11083)
func_11084 = relay.Function([var_11083], output)
mutated_mod['func_11084'] = func_11084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9803_call = mod.get_global_var('func_9803')
func_9804_call = mutated_mod.get_global_var('func_9804')
call_11099 = func_9803_call()
call_11100 = func_9803_call()
func_8898_call = mod.get_global_var('func_8898')
func_8901_call = mutated_mod.get_global_var('func_8901')
var_11103 = relay.var("var_11103", dtype = "float32", shape = (1, 132))#candidate|11103|(1, 132)|var|float32
call_11102 = relay.TupleGetItem(func_8898_call(relay.reshape(var_11103.astype('float32'), [2, 11, 6])), 0)
call_11104 = relay.TupleGetItem(func_8901_call(relay.reshape(var_11103.astype('float32'), [2, 11, 6])), 0)
func_5594_call = mod.get_global_var('func_5594')
func_5602_call = mutated_mod.get_global_var('func_5602')
const_11106 = relay.const([-4,-4,-1,-4,-1,-7,-7,7,10,3,-8,2,-5,8,-8,6,4,-2,-7,5,7,6,8,8,-1,-8,7], dtype = "uint32")#candidate|11106|(27,)|const|uint32
const_11107 = relay.const([[-7],[7],[-10],[-3],[7],[9],[5],[5],[-2]], dtype = "int16")#candidate|11107|(9, 1)|const|int16
const_11108 = relay.const([1,-10,-6,-8,-6,3,-3,-7,3,-5,10,-4,10,10,-4,-1,-6,-5,5,-7,-10,-4,-3,5,-3,-8,-4,9,4,5,8,-5,6,-7,5,-2,4,-7,-1,5,-5,-8,-5,-3,8,-9,6,1,5,-1,-1,5,-10,-2,-7,4,10,-2,-1,-8,-5,-5,2,-2,-3,-5,-7,10,3,8,-3,-3,-6,-9,-2,-8,-3,-9,-1,10,-4,-10,7,6,-6,-3,1,-1,3,-6,7,3,8,-5,-2,5,-1,-7,-9,-2,9,3,1,7,-5,10,-6,2,-4,-3,3,4,-4,-4,-4,-7,2,-3,5,-9,-4,2,2,3,2,-4,-5,9,-9,-4,1,-6,-3,-10,-2,9,-5,-3,5,-3,-4,-2,-7,-10,-5,-9,-8,-1,-5,-1,9,-2,-1,3,1,-4,5,5,6,8,10,8,-2,10,2,-6,-1,7,-3,1,6,-10,9,5,-1,-7,-10,-10,7,-2,3,-2,-6,8,9,5,3,8,-3,9,6,4,2,8,5,-10,8,3,-1,5,-10,-7,8,-9,10,4,6,4,3,9,4,4,-1,7,-10,4,-7,-5,8,-7,-3,-8,10,-7,6,8,-5,-3,1,-8,6,-1,3,-7,3,1,4,5,1,-6,-9,-10,-9,3,-5,-1,3,4,-1,8,7,-7,9,5,-5,-1,-5,1,4,-6,-4,-1,-10,-4,-10,-2,-2,-5,3,4,-1,4,-6,10,6,-2,-2,7,10,2,4,6,-4,-10,3,7,-1,-9,-4,10,6,10,4,1,-1,-5,-10,-2,2,-3,7,8,-9,-6,8,4,-5,4,-4,-3,-10,1,-9,-4,6,-7,-5,3,-4,8,-5,7,-7,-1,-6,7,5,7,10,5,9,10,-7,-10,4,-4,-10,-10,10,7,8,-3,1,-6,-1,10,-5,6,5,-4,5,9,6,4,3,-3,7,-3,-6,-1,2,-7,-2,-8,10,-6,-9,-2,-4,-1,8,-7,10,3,-1,-2,-6,1,-1,-4,2,-8,5,-5,4,4,-2,7,3,7,-4,8,-8,-7,7,-2,9,9,9,3,-10,9,7,3,8,3,-8,2,-9,5,-10,6,-8,-5,1,-4,4,2,-9,-1,-4,9,-9,-8,-1,6,-1,-1,1,7,4,10,5,9,-8,1,7,6,10,-6,-8,-2,-9,9,1,-10,7,10,4,8,-10,-6,8,4,-7,-10,-5,3,7,3,-7,-2,-3,-10,2,10,6,10,9,1,6,-10,-4,-6,6,9,-10,-2,3,-1,10,8,1,-8,-4,8,-8,3,-3,3,6,-5,-2,9,-8,10,-6,-2,6,7,6,-10,-6,-6,-1,8,-10,-4,-9,8,7,-3,-6,-8,-4,-2,10,7,-6,5,-4,7,-8,-6,5,-4,2,5,-2,-10,-8,7,8,-6,-6,4,-3,-4,1,8,4,10,9,3,8,8,-8,6,8,2,2,-6,6,-6,7,-7,-3,-6,2,-4,3,-10,8,8,-7,-3,-8,-4,6,3,1,6,-9,-8,10,-3,7,-5,-9,-2,5,7,-2,-8,-10,-4,3,9,-10,2,1,6,-1,3,-4,-8,10,-2,6,-1,-1,1,4,-5,-7,8,-4,-3,5,-5,-1,-10,8,-3,2,-3,10,-8,-2,-1,-9,6,-5,-8,-5,1,-4,6,5,-6,-3,1,-3,-10,-1,5,-3,-3,9,9,2,9,3,10,5,4,-7,3,-3,8,-7,-3,-5,7,8,10,-7,8,6,-7,-3,1,9,9,-9,5,-1,6,-7,-10,10,6,8,-9,-3,-5,1,-6,2,-2,4,8,-8,-1,-1,1,-8,-1,3,3,8,2,-6,10,6,2,1,-5,-8,5,7,1,3,4,-1,1,6,1,-4,3,-2,9,-7,-4,3,2,-5,5,-4,5,-7,7,2,9,-6,5,7,5,10,-1,-9,1,6,4,-7,7,7,-1,-9,-6,-3,7,3,-8,-9,6,-1,-4,4,-9,6,9,8,-6,-10,-6,-1,5,-4,9,-9,3,-1,-7,4,-8,-9,-6,4,-6,2,7,4,9,2,-1,-10,-1,1,6,3,6,10,3,-3,10,10,1,7,3,-8,2,-9,1,-2,-3,-2,1,10,7,2,1,5,7,3,-3,4,-1,2,-1], dtype = "int16")#candidate|11108|(810,)|const|int16
var_11109 = relay.var("var_11109", dtype = "float32", shape = (21,))#candidate|11109|(21,)|var|float32
const_11110 = relay.const([3,-5,5,-4,-1,8,-6,8,-5,-10,-8,-2,-4,5,6,-9,10,-10,10,-2,1,-5,-9,6,-5,4,1,4,-8,-3,-8,3,-8,5,-9,9,10,-6,-8,-2,-3,6,2,-1,-2,-5,7,-8,-1,3,1,1,-7,-10,-1,7,9,-10,-5,1,3,8,4,-7,3,8,-3,7,5,-4,-10,-2,4,1,-1,9,-8,6,-6,-10,2,-3,4,4,9,-8,6,-9,-2,-2,-3,-8,9,-5,-4,6,-3,-10,10,8,1,8,6,8,8,-10,2,-3,2,7,-5,4,1,6,-10,-1,-2,8,6,7,-5,-4,7,-9,-7,4,9,-7,4,2,-10,6,-9,10,-8,1,6,-2,3,9,-8,-2,-3,-7,-4,4,9,-6,2,-6,-4,8,2,-10,-3,-7,-6,-8,-7,9,-2,-5,-2,-1,-6,-7,-6,10,-6,7,3,-8,2,-7,1,-2,10,-3,-8,-7,5,-7,-10,1,9,-5,1,-1,-9,1,6,-2,1,-9,4,-7,1,-2,-3,8,2,-4,5,5,6,6,9,10,-7,-3,4,-2,6,-7,8,10,-7,2,-2,9,-2,1,7,3,8,-7,-8,9,-4,10,2,-3,-6,10,-1,-7,-6,-4,10,4,-5,-2,1,-4,8,10,-6,8,9,4,-8,3,-9,-4,-6,7,-3,-4,-2,1,6,1,-4,6,8,-3,10,10,-5,-6,-7,4,-4,4,9,-8,-7,-7,-8,4,2,4,-5,1,1,1,-2,5,5,2,5,9,8,2,-10,4,4,-5,-2,-9,4,10,6,2,5,5,5,-1,-3,-9,-9,-6,10,-4,-10,3,4,9,-9,9,-6,-5,2,4,-8,8,-7,-4,8,7,-10,1,4,-4,-1,-10,-1,8,10,7,-6,-7,9,-9,-9,6,-9,-5,-7,7,-6,-4,1,-8,-7,-10,10,-5,-9,10,3,9,-1,4,-7,-5,-7,8,3,10,3,-3,9,5,-4,-8,-1,8,5,-7,2,-3,-2,-10,1,5,10,-10,-9,7,-2,-2,-3,-2,-2,-9,2,5,7,9,5,-3,-3,6,-7,-7,9,9,-8,10,-1,-4,3,9,7,9,3,9,-4,-9,-7,10,-4,7,4,-3,6,-10,-9,10,-6,-7,10,6,-10,-5,-9,-2,7,-6,5,-6,7,2,6,1,3,-10,4,7,10,3,-6,-4,-2,-4,2,-10,7,-4,-5,2,2,3,9,-2,-1,-10,-7,1,-7,-8,4,-5,-9,-1,-3,-4,-6,-1,-4,-6,7,3,-10,-7,7,5,1,-2,8,-5,-6,-6,-4,9,-9,5,1,-3,-2,10,-4,-3,-5,-5,6,-6,9,-7,8,-4,-3,6,-9,-4,7,-2,-9,8,-10,8,5,10,-7,-10,3,5,-5,9,-8,-4,-7,8,1,-9,-10,-7,-3,10,4,-5,4,-4,-1,-10,5,5,-2,9,10,-6,-7,5,2,9,5,-4,4,-5,-10,-5,1,-7,5,-8,-4,-5,-9,-10,-6,-6,3,-10,-9,-3,2,-2,-5,7,4,7,10,-8,4,10,7,3,-8,-6,-7,-6,4,-3,-6,1,6,8,9,6,6,-3,4,10,8,10,4,6,1,-8,-2,9,-6,5,-4,9,9,-10,8,6,5,-3,2,-8,-9,-2,-5,10,-7,-9,7,1,-1,-10,3,7,2,9,-9,6,1,-10,8,-10,-4,8,-8,-7,1,10,-5,-2,-6,10,-5,-3,4,-5,-3,9,-5,-1,5,-3,-7,-2,9,9,4,1,6,8,-9,-6,9,2,-2,10,-2,6,8,-2,-4,2,-10,9,-7,10,1,8,1,7,-4,-3,-10,4,8,6,-8,-10,-1,6,8,-6,2,-1,6,4,-5,-6,5,4,7,5,-8,4,4,1,-4,10,-3,-6,-1,8,-9,-4,6,10,-9,7,-10,9,8,3,-7,9,6,-10,8,-2,4,-3,-3,2,-8,9,1,-1,10,-3,8,8,9,-10,7,6,-7,2,4,4,-4,-1,3,-3,5,-1,-10,-7,-10,-6,9,8,10,8,3,-7,4,-1,-1,1,2,1,4,9,-6,-1,-6,3,-9,2,-2,1,1,5,8,-8,-10,10,-6,6,-5,-9,5,9,-2,8,-1,1,10,-2,2,9,-8,5,-10,-7,7,-4,-7,-8,3,2,4,-8,7,-5,1,-10,2,6,-8,7,-9,10,5,3,-4,3,-8,4,-2,-6,-2,-3,-4,8,-2,-7,-5,6,-5,-7,-6,6,-3,1,9,8,4,6,10,1,-9,2,-5,4,-9,-10,-5,-1,7,4,7,-5,-3,2,7,7,2,-9,-10,-9,-8,-4,-3,9,-6,6,-5,8,-6,-3,-2,8,-2,10,-2,10,8,-2,10,-3,-6,-10,1,-1,8,9,-6,3,4,9,4,5,-3,3,10,-10,6,-9,9,4,-6,7,-10,10,-6,9,8,2,-2,-5,-2,9,6,-4,10,2,3,-7,-2,4,-8,9,-6,9,9,-8,-8,10,-9,-9,-4,-4,-2,9,-10,3,-5,-5,-5,-7,-8,-7,6,-2,-4,1,-4,7,5,-2,-9,4,9,-3,4,1,6,8,-7,-4,-3,-1,9,-3,-1,1,1,-4,-5,-5,6,2,-3,-2,3,1,3,3,9,-8,2,-2,5,3,10,10,3,-6,6,-7,5,5,10,-10,5,-1,5,1,-7,1,-2,5,-5,-2,-10,2,-8,1,-6,-9,9,1,1,-4,-6,-8,-8,-4,4,5,-6,9,-5,-4,-1,5,2,4,8,4,4,4,4,6,7,-2,-10,9,-3,-8,7,-6,9,-4,9,3,-9,9,7,3,-9,-7,8,-6,-8,-5,8,-3,1,-6,-5,-8,-5,10,-2,-8,-10,10,10,8], dtype = "int16")#candidate|11110|(1092,)|const|int16
var_11111 = relay.var("var_11111", dtype = "uint16", shape = (420,))#candidate|11111|(420,)|var|uint16
call_11105 = relay.TupleGetItem(func_5594_call(relay.reshape(const_11106.astype('uint32'), [3, 3, 3]), relay.reshape(const_11106.astype('uint32'), [3, 3, 3]), relay.reshape(const_11107.astype('int16'), [1, 9]), relay.reshape(const_11108.astype('int16'), [810,]), relay.reshape(var_11109.astype('float32'), [7, 3]), relay.reshape(const_11110.astype('int16'), [182, 6]), relay.reshape(var_11111.astype('uint16'), [420,]), ), 2)
call_11112 = relay.TupleGetItem(func_5602_call(relay.reshape(const_11106.astype('uint32'), [3, 3, 3]), relay.reshape(const_11106.astype('uint32'), [3, 3, 3]), relay.reshape(const_11107.astype('int16'), [1, 9]), relay.reshape(const_11108.astype('int16'), [810,]), relay.reshape(var_11109.astype('float32'), [7, 3]), relay.reshape(const_11110.astype('int16'), [182, 6]), relay.reshape(var_11111.astype('uint16'), [420,]), ), 2)
output = relay.Tuple([call_11099,call_11102,var_11103,call_11105,const_11106,const_11107,const_11108,var_11109,const_11110,var_11111,])
output2 = relay.Tuple([call_11100,call_11104,var_11103,call_11112,const_11106,const_11107,const_11108,var_11109,const_11110,var_11111,])
func_11117 = relay.Function([var_11103,var_11109,var_11111,], output)
mod['func_11117'] = func_11117
mod = relay.transform.InferType()(mod)
mutated_mod['func_11117'] = func_11117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11117_call = mutated_mod.get_global_var('func_11117')
var_11119 = relay.var("var_11119", dtype = "float32", shape = (1, 132))#candidate|11119|(1, 132)|var|float32
var_11120 = relay.var("var_11120", dtype = "float32", shape = (21,))#candidate|11120|(21,)|var|float32
var_11121 = relay.var("var_11121", dtype = "uint16", shape = (420,))#candidate|11121|(420,)|var|uint16
call_11118 = func_11117_call(var_11119,var_11120,var_11121,)
output = call_11118
func_11122 = relay.Function([var_11119,var_11120,var_11121,], output)
mutated_mod['func_11122'] = func_11122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10563_call = mod.get_global_var('func_10563')
func_10565_call = mutated_mod.get_global_var('func_10565')
call_11167 = relay.TupleGetItem(func_10563_call(), 0)
call_11168 = relay.TupleGetItem(func_10565_call(), 0)
func_9361_call = mod.get_global_var('func_9361')
func_9364_call = mutated_mod.get_global_var('func_9364')
var_11171 = relay.var("var_11171", dtype = "uint16", shape = (1200,))#candidate|11171|(1200,)|var|uint16
call_11170 = relay.TupleGetItem(func_9361_call(relay.reshape(var_11171.astype('uint16'), [5, 15, 16]), relay.reshape(var_11171.astype('uint16'), [5, 15, 16]), ), 1)
call_11172 = relay.TupleGetItem(func_9364_call(relay.reshape(var_11171.astype('uint16'), [5, 15, 16]), relay.reshape(var_11171.astype('uint16'), [5, 15, 16]), ), 1)
output = relay.Tuple([call_11167,call_11170,var_11171,])
output2 = relay.Tuple([call_11168,call_11172,var_11171,])
func_11177 = relay.Function([var_11171,], output)
mod['func_11177'] = func_11177
mod = relay.transform.InferType()(mod)
var_11178 = relay.var("var_11178", dtype = "uint16", shape = (1200,))#candidate|11178|(1200,)|var|uint16
output = func_11177(var_11178)
func_11179 = relay.Function([var_11178], output)
mutated_mod['func_11179'] = func_11179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9913_call = mod.get_global_var('func_9913')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_11181 = func_9913_call()
call_11182 = func_9913_call()
output = call_11181
output2 = call_11182
func_11183 = relay.Function([], output)
mod['func_11183'] = func_11183
mod = relay.transform.InferType()(mod)
output = func_11183()
func_11184 = relay.Function([], output)
mutated_mod['func_11184'] = func_11184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10777_call = mod.get_global_var('func_10777')
func_10778_call = mutated_mod.get_global_var('func_10778')
call_11185 = func_10777_call()
call_11186 = func_10777_call()
output = call_11185
output2 = call_11186
func_11197 = relay.Function([], output)
mod['func_11197'] = func_11197
mod = relay.transform.InferType()(mod)
output = func_11197()
func_11198 = relay.Function([], output)
mutated_mod['func_11198'] = func_11198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9803_call = mod.get_global_var('func_9803')
func_9804_call = mutated_mod.get_global_var('func_9804')
call_11242 = func_9803_call()
call_11243 = func_9803_call()
output = relay.Tuple([call_11242,])
output2 = relay.Tuple([call_11243,])
func_11266 = relay.Function([], output)
mod['func_11266'] = func_11266
mod = relay.transform.InferType()(mod)
output = func_11266()
func_11267 = relay.Function([], output)
mutated_mod['func_11267'] = func_11267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9867_call = mod.get_global_var('func_9867')
func_9868_call = mutated_mod.get_global_var('func_9868')
call_11273 = func_9867_call()
call_11274 = func_9867_call()
func_7967_call = mod.get_global_var('func_7967')
func_7976_call = mutated_mod.get_global_var('func_7976')
var_11282 = relay.var("var_11282", dtype = "int16", shape = (1, 1170))#candidate|11282|(1, 1170)|var|int16
var_11283 = relay.var("var_11283", dtype = "float64", shape = (396,))#candidate|11283|(396,)|var|float64
const_11284 = relay.const([10,-3,10,5,-10,3,-5,10,1,-10,-10,9,7,-8,9,-9,7,-7,5,-4,-8,-2,-9,-9,-4,3,7,1,-10,-9,8,-10,-2,-2,1,-4,5,10,-8,6,7,5,1,-9,5,-2,6,6,8,-6,7,6,4,8,6,-6,-1,-6,-7,3,-1,-2,6,-8,9,-3,-2,8,6,1,-10,-4,8,-3,-3,8,3,2,10,-6,-3,-7,10,2,3,-10,10,4,-4,-4,5,-10,2,10,3,2,4,1,-7,4,8,-1,-7,-6,-3,-7,-2,1,-10,-7,6,9,9,6,6,-5,3,3,-2,3,1,6,-7,-7,-7,-2,-4,-4,4,10,-9,4,-3,-4,-10,-2,6,-4,6,-4,8,7,8,6,1,-3,4,-2,6,2,2,-5,-4,3,-2,5,2,3,-3,-3,-6,-5,-4,7,-5,-6,-5,-7,-1,10,-9,5,-7,3,-7,4,-5,-4,-6,-8,2,-7,-6,5,-9,5,10,-1,-8,8,-3,9,-1,-6,5,-7,-2,3,1,7,3,-7,-10,3,-3,3,3,-5,-8,1,-6,10,5,6,-3,7,5,-10,-2,-2,6,-2,-9,3,-9,1,-3,5,-6,5,6,-5,3,5,-2,2,-2,5,5,-1,4,-2,-2,-6,-10,8,-10,6,-2,-1,-5,10,-9,-3,5,-1,-5,-8,1,-7,-3,-6,10,8,-2,6,-4,-7,1,9,5,7,-10,6,8,-2,-2,6,2,-4,3,-4,-6,9,-2,-5,8,-6,6,-2,7,7,-4,-1,-7,3,-7,-8,-7,-10,7,5,-9,4,4,2,-9,3,4,-2,-1,4,1,10,-8,6,-8,-9,-3,-2,6,-10,-5,-8,7,1,-4,-7,-6,2,7,-9,2,-4,10,4,2,-3,-7,7,3,-3,4,2,6,3,-4,10,10,-1,-10,8,-8,-8,-4,-10,-4,3,-2,-5,1,-4,10,-8,-8,1,-3,9,-4,10,-3,-4,-5,4,-4,-8,8,-9,-3,-1,8,-8,-2,4,-5,3,-7,6,6,1,-2,-4,-8,1,9,-4,-3,-8,9,-1,8,-2,-1,-7,10,-8,5,-3,6,-6,-5,4,5,2,-7,8,-7,10,-1,-6,5,5,7,-4,-3,1,-3,5,8,1,2,-9,-4,-8,6,-7,-1,10,10,2,4,-1,-8,-6,4,10,-1,-7,-9,-9,1,5,-8,-2,9,-2,-7,4,9,-2,9,1,10,-2,-2,-4,-9,-7,-4,-5,-2,7,-8,-7,-1,10,-10,8,8,8,3,5,3,-6,2,1,8,7,1,3,-2,1,-5,-9,1,2,-3,5,-2,4,-2,-10,-5,8,-1,-7,7,3,7,4,-3,-1,5,2,-6,-1,-9,3,-10,-9,4,-3,4,-1,-2,-8,-3,-9,6,6,-8,-4,-2,1,8,4,-6,2,-5,-10,10,-9,-10,1,-2,9,8,6,-10,1,-9,-9,1,6,6,10,7,-9,10,10,-1,-1,-2,-8,-6,-10,1,1,-3,-8,4,-5,9,-5,-7,10,-5,6,10,2,10,-10,-1,5,-7,-5,10,3,5,10,-4,-2,3,-8,2,6,2,-5,6,-9,4,5,3,5,5,-1,-6,-10,1,-2,8,4,-4,4,-2,3,4,-10,-6,-6,10,10,10,-7,-7,-5,6,4,-10,-10,-1,8,10,4,-5,-7,-8,5,4,-3,8,6,7,4,10,10,6,7,-8,-2,-1,-9,5,-1,3,-3,-9,-7,-1,-4,2,2,-3,-3,-2,-3,-5,4,-6,2,8,-4], dtype = "int8")#candidate|11284|(672,)|const|int8
var_11285 = relay.var("var_11285", dtype = "int8", shape = (8, 154))#candidate|11285|(8, 154)|var|int8
var_11286 = relay.var("var_11286", dtype = "float32", shape = (21,))#candidate|11286|(21,)|var|float32
var_11287 = relay.var("var_11287", dtype = "int16", shape = (810,))#candidate|11287|(810,)|var|int16
call_11281 = relay.TupleGetItem(func_7967_call(relay.reshape(var_11282.astype('int16'), [13, 15, 6]), relay.reshape(var_11282.astype('int16'), [13, 15, 6]), relay.reshape(var_11283.astype('float64'), [396,]), relay.reshape(const_11284.astype('int8'), [672,]), relay.reshape(var_11285.astype('int8'), [1232,]), relay.reshape(var_11286.astype('float32'), [21,]), relay.reshape(var_11287.astype('int16'), [810,]), ), 0)
call_11288 = relay.TupleGetItem(func_7976_call(relay.reshape(var_11282.astype('int16'), [13, 15, 6]), relay.reshape(var_11282.astype('int16'), [13, 15, 6]), relay.reshape(var_11283.astype('float64'), [396,]), relay.reshape(const_11284.astype('int8'), [672,]), relay.reshape(var_11285.astype('int8'), [1232,]), relay.reshape(var_11286.astype('float32'), [21,]), relay.reshape(var_11287.astype('int16'), [810,]), ), 0)
output = relay.Tuple([call_11273,call_11281,var_11282,var_11283,const_11284,var_11285,var_11286,var_11287,])
output2 = relay.Tuple([call_11274,call_11288,var_11282,var_11283,const_11284,var_11285,var_11286,var_11287,])
func_11297 = relay.Function([var_11282,var_11283,var_11285,var_11286,var_11287,], output)
mod['func_11297'] = func_11297
mod = relay.transform.InferType()(mod)
mutated_mod['func_11297'] = func_11297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11297_call = mutated_mod.get_global_var('func_11297')
var_11299 = relay.var("var_11299", dtype = "int16", shape = (1, 1170))#candidate|11299|(1, 1170)|var|int16
var_11300 = relay.var("var_11300", dtype = "float64", shape = (396,))#candidate|11300|(396,)|var|float64
var_11301 = relay.var("var_11301", dtype = "int8", shape = (8, 154))#candidate|11301|(8, 154)|var|int8
var_11302 = relay.var("var_11302", dtype = "float32", shape = (21,))#candidate|11302|(21,)|var|float32
var_11303 = relay.var("var_11303", dtype = "int16", shape = (810,))#candidate|11303|(810,)|var|int16
call_11298 = func_11297_call(var_11299,var_11300,var_11301,var_11302,var_11303,)
output = call_11298
func_11304 = relay.Function([var_11299,var_11300,var_11301,var_11302,var_11303,], output)
mutated_mod['func_11304'] = func_11304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11197_call = mod.get_global_var('func_11197')
func_11198_call = mutated_mod.get_global_var('func_11198')
call_11373 = func_11197_call()
call_11374 = func_11197_call()
func_9361_call = mod.get_global_var('func_9361')
func_9364_call = mutated_mod.get_global_var('func_9364')
const_11397 = relay.const([[-9,-9],[1,-4],[-3,2],[3,4],[-9,9],[-9,-9],[-9,-4],[8,8],[-3,2],[2,2],[9,1],[-9,1],[5,8],[-6,-2],[-3,7],[-8,-9],[-2,6],[10,-3],[1,-1],[1,8],[4,4],[2,5],[4,-7],[5,-5],[10,4],[7,-9],[1,9],[-3,-2],[3,-7],[1,10],[-3,8],[-6,6],[-4,6],[-8,-10],[-4,-3],[-7,4],[-8,-5],[-2,-6],[6,5],[-9,-8],[3,-6],[6,2],[-6,8],[7,-3],[4,7],[5,-3],[1,4],[10,5],[-3,-6],[7,-10],[-2,-8],[10,-7],[-9,10],[-10,-8],[-2,-3],[2,6],[10,-4],[-10,2],[5,-3],[9,-9],[4,6],[-4,-5],[5,-9],[-7,-2],[-8,4],[3,10],[-5,-2],[10,-7],[-3,-8],[-5,5],[2,-7],[-10,-6],[7,6],[7,9],[8,-10],[-3,5],[-10,-6],[10,7],[7,3],[-4,10],[2,-5],[-2,4],[-6,-2],[-1,-6],[4,8],[-5,-7],[2,4],[2,9],[-9,-2],[-7,-3],[-1,1],[-4,7],[-10,1],[1,-10],[10,8],[7,4],[2,-7],[4,-3],[6,1],[2,9],[2,-9],[-8,5],[-2,-7],[-10,5],[1,-10],[-3,-2],[-6,1],[10,2],[-8,4],[-2,3],[9,5],[5,1],[1,10],[4,-2],[-4,10],[3,-7],[-7,-8],[-9,-4],[-2,-10],[-6,-2],[-2,-2],[-4,-7],[-9,4],[3,2],[4,8],[10,-2],[9,-1],[2,-6],[6,1],[2,8],[-6,-3],[6,8],[5,1],[-8,-2],[-6,-3],[-6,3],[7,-10],[3,-2],[2,8],[1,8],[-4,5],[-4,8],[-8,2],[-2,-6],[10,-7],[5,2],[5,5],[-7,-5],[-2,2],[5,-9],[1,-7],[-6,-1],[8,-1],[-9,10],[2,1],[-8,10],[-7,9],[-2,-5],[10,5],[6,4],[6,-8],[-8,-9],[4,10],[8,-4],[-2,-7],[1,-7],[-7,-1],[-10,6],[10,-1],[2,1],[-9,10],[2,-2],[-6,1],[2,-2],[-4,-1],[-8,2],[-1,-8],[-2,1],[-9,9],[-4,8],[-10,9],[10,-1],[4,9],[-9,10],[4,6],[-7,9],[5,-9],[-9,-1],[7,2],[-3,2],[-5,7],[-3,-7],[-7,3],[8,-9],[-10,-4],[-7,-1],[-6,4],[6,-7],[8,-8],[-3,6],[-7,-3],[4,10],[10,4],[-10,2],[8,7],[1,-6],[10,-9],[-8,-4],[-5,10],[8,-3],[7,-6],[2,2],[3,3],[-5,-4],[-4,7],[-8,-9],[-9,4],[10,-4],[9,-3],[-7,1],[6,7],[-7,-6],[5,-5],[6,8],[2,1],[-3,10],[-6,-3],[9,4],[-9,7],[-3,7],[8,-1],[-5,-10],[-2,2],[7,-7],[4,-7],[-3,-8],[-3,8],[-10,5],[8,-2],[6,-1],[-2,-6],[-4,1],[1,1],[-8,-6],[-8,8],[3,5],[9,6],[9,6],[2,-2],[2,-4],[-1,9],[-8,4],[-1,-5],[6,-6],[9,-2],[1,2],[7,10],[7,-4],[-1,-2],[8,-6],[-8,3],[-10,1],[-3,10],[1,7],[-3,-9],[1,1],[-6,2],[6,-3],[6,10],[-7,7],[-6,-3],[-8,6],[9,4],[-1,-3],[-7,-9],[10,7],[7,2],[-10,3],[-6,4],[-9,7],[-10,-8],[-5,7],[6,5],[9,-2],[1,2],[4,9],[2,-6],[-8,8],[2,-8],[-9,-9],[3,10],[7,-8],[-5,2],[-6,9],[-6,8],[8,3],[-6,-8],[-6,-1],[-2,8],[-1,8],[9,-7],[-2,-10],[3,-4],[7,-10],[-8,7],[5,10],[-9,7],[-9,7],[-4,10],[3,4],[-9,7],[-6,9],[5,-6],[4,-8],[-8,-2],[-1,-2],[5,10],[-3,4],[-5,-8],[-7,-2],[2,3],[-8,10],[7,3],[-3,2],[1,6],[6,-6],[10,-1],[2,9],[5,-2],[2,-1],[4,-8],[2,-4],[2,5],[-1,-1],[6,10],[-7,-3],[-1,-5],[9,-4],[1,1],[-2,4],[-7,1],[3,-3],[-4,-8],[1,3],[-8,-5],[-6,9],[10,1],[-5,5],[-8,-3],[10,2],[8,5],[1,9],[8,-6],[2,-10],[-5,4],[7,-5],[-8,4],[4,-2],[-5,-10],[-6,-8],[3,-7],[-9,-7],[9,6],[1,-9],[-8,8],[10,-2],[6,-3],[-3,5],[3,10],[10,-6],[-9,2],[-2,10],[7,-1],[8,2],[-9,6],[-4,-9],[4,10],[-9,2],[-1,-9],[-9,-4],[-8,1],[-2,2],[8,3],[-1,-2],[4,-1],[-2,-8],[-9,-5],[-7,-3],[6,3],[-9,-9],[-2,-2],[7,-10],[-9,1],[-5,-2],[7,3],[8,10],[-3,4],[-5,2],[5,2],[9,-10],[-4,10],[1,6],[-3,1],[6,-7],[-2,3],[-2,-7],[-1,9],[-1,-10],[2,-6],[4,-1],[10,8],[3,7],[6,5],[6,-5],[10,-9],[-4,10],[1,-9],[8,1],[1,-6],[-5,-4],[-6,9],[2,9],[9,-5],[-8,-9],[10,3],[-7,8],[6,-4],[10,3],[8,7],[7,2],[-5,1],[3,-2],[9,3],[-2,5],[6,8],[-7,9],[3,5],[-4,-8],[-7,4],[-8,-3],[4,2],[-8,3],[-6,7],[1,1],[3,-6],[7,8],[2,2],[-8,8],[4,7],[6,-3],[2,10],[-7,9],[-8,-7],[-8,9],[-6,-1],[-7,-8],[8,-2],[-5,1],[-4,-1],[3,-10],[-7,-8],[-3,7],[7,6],[9,-6],[9,-3],[10,4],[-4,-4],[6,-8],[3,8],[-2,-7],[-4,-4],[7,2],[-7,-10],[9,-2],[8,-2],[1,7],[-7,-10],[-1,7],[-10,-10],[4,-2],[-7,9],[-8,-10],[10,-3],[1,5],[-7,6],[-1,-7],[5,-7],[1,9],[2,5],[2,6],[-7,-1],[9,6],[-10,-5],[-5,-4],[-2,-9],[-8,1],[8,-10],[1,-10],[-5,7],[-8,1],[5,-1],[-10,1],[5,3],[10,-5],[-9,-1],[-3,9],[4,3],[8,2],[-1,2],[-9,3],[4,-9],[-9,-5],[9,9],[6,1],[3,-4],[9,-4],[10,-4],[-10,-2],[3,9],[6,-10],[-9,-9],[8,-7],[-4,-2],[4,7],[-4,2],[8,-8],[-5,-2],[-4,-6],[-1,10],[-2,10],[5,-3],[10,4],[1,-9],[9,-9],[-6,-5],[-3,-3],[-3,4],[7,5],[8,2],[8,-3],[1,-7],[1,5],[8,8],[-9,4],[6,-1],[-1,-7],[-4,8],[-5,10],[-5,6],[-6,-3],[-9,4],[4,3],[-7,4],[-1,-9],[-2,-9],[-8,-2],[-10,6],[9,10],[2,9],[-1,7],[7,6],[-6,6],[-1,-6],[-4,1],[9,9],[9,-8],[-1,-9],[7,2],[1,5],[4,5],[4,4],[10,-3],[-3,6],[2,-2],[-1,7],[7,4],[-9,5],[-10,-7],[-10,6],[6,-10],[2,10],[-2,-6],[1,10],[3,8],[-5,-5],[1,-1],[5,-4],[7,-10],[2,10],[10,6],[9,3],[-10,-6],[-2,-1],[-5,8],[10,-2],[8,5],[-2,3],[-2,5],[-2,5],[-7,-8]], dtype = "uint16")#candidate|11397|(600, 2)|const|uint16
call_11396 = relay.TupleGetItem(func_9361_call(relay.reshape(const_11397.astype('uint16'), [5, 15, 16]), relay.reshape(const_11397.astype('uint16'), [5, 15, 16]), ), 3)
call_11398 = relay.TupleGetItem(func_9364_call(relay.reshape(const_11397.astype('uint16'), [5, 15, 16]), relay.reshape(const_11397.astype('uint16'), [5, 15, 16]), ), 3)
var_11402 = relay.var("var_11402", dtype = "uint16", shape = (600, 2))#candidate|11402|(600, 2)|var|uint16
bop_11403 = relay.greater_equal(const_11397.astype('bool'), relay.reshape(var_11402.astype('bool'), relay.shape_of(const_11397))) # shape=(600, 2)
const_11406 = relay.const([[[5.258212,9.580256],[1.596611,-5.427695],[5.917687,4.432822],[0.704998,7.350590],[-4.488857,-4.364704],[-2.696849,-6.976573],[2.695882,-3.845732],[-8.302457,-2.858239],[0.945838,-3.297772],[1.016414,-4.779759],[6.954081,2.582169]],[[-4.113284,8.599791],[8.217437,2.598454],[6.591802,-3.998677],[9.745626,4.451834],[-4.729245,8.081525],[-3.647983,7.860766],[-6.399896,-0.793748],[1.947867,2.821698],[-3.078285,-5.470243],[-1.685051,1.057427],[0.007481,3.083520]],[[-5.835733,-3.105208],[-3.298917,-9.182730],[8.702783,-9.008506],[1.789143,-3.790572],[-9.329395,-7.332216],[-9.936836,-2.146322],[-8.491702,-3.683931],[-4.629211,-8.961831],[9.823746,6.266690],[-9.759277,-9.261465],[1.130579,-9.315058]],[[5.815769,4.276291],[-6.692164,-4.236741],[-8.984009,2.331985],[-4.609236,-4.754195],[0.445140,7.079860],[-4.510024,-2.393746],[-2.661206,-8.043710],[9.074431,-9.484670],[7.144722,-7.376818],[4.669956,-6.961570],[-1.007748,-6.597701]],[[-4.428335,0.745802],[-2.095875,-2.216992],[3.876578,5.094013],[8.190459,-6.045097],[-2.773507,0.900293],[-0.123310,6.992324],[-4.425397,-2.647166],[-1.217874,0.282083],[8.176423,-0.217768],[1.909857,-0.047507],[-0.630240,-8.713875]],[[-4.771035,-8.528694],[7.376776,-8.488204],[-0.126807,6.385845],[-3.263217,1.271780],[-7.416947,2.559533],[7.090042,6.231621],[-1.703204,1.378039],[-1.959189,-6.314612],[-3.201060,6.751448],[-5.919021,-1.612596],[-0.620698,5.280473]],[[2.788085,9.709069],[2.092091,0.304787],[-3.365566,4.727401],[6.788531,7.613339],[-1.168879,-9.595123],[6.484858,-7.663425],[0.048558,-4.210616],[-3.440605,-4.882682],[-7.851355,4.652476],[-2.722969,-7.002211],[-3.603551,5.519531]],[[-5.758811,9.707020],[-0.090547,-5.971742],[0.568879,6.181985],[3.333356,-5.284661],[4.319342,5.965809],[-5.627162,3.179066],[3.365294,-5.634517],[5.613756,2.977723],[-7.892867,-5.739164],[-7.526249,-0.803635],[4.869949,5.358766]],[[0.204233,-2.428706],[-5.202559,-7.100180],[4.128973,-8.656482],[4.076235,-2.220863],[-2.858923,3.516091],[-6.713259,-0.758594],[-6.823281,-9.580525],[-2.807197,-9.250848],[-2.422383,5.127851],[-6.927303,3.022734],[8.723493,-2.354970]]], dtype = "float64")#candidate|11406|(9, 11, 2)|const|float64
bop_11407 = relay.divide(call_11373.astype('float64'), relay.reshape(const_11406.astype('float64'), relay.shape_of(call_11373))) # shape=(9, 11, 2)
bop_11410 = relay.divide(call_11374.astype('float64'), relay.reshape(const_11406.astype('float64'), relay.shape_of(call_11374))) # shape=(9, 11, 2)
bop_11420 = relay.right_shift(const_11397.astype('int8'), relay.reshape(bop_11403.astype('int8'), relay.shape_of(const_11397))) # shape=(600, 2)
uop_11423 = relay.asinh(bop_11407.astype('float64')) # shape=(9, 11, 2)
uop_11425 = relay.asinh(bop_11410.astype('float64')) # shape=(9, 11, 2)
bop_11432 = relay.add(const_11397.astype('int64'), relay.reshape(var_11402.astype('int64'), relay.shape_of(const_11397))) # shape=(600, 2)
output = relay.Tuple([call_11396,bop_11420,uop_11423,bop_11432,])
output2 = relay.Tuple([call_11398,bop_11420,uop_11425,bop_11432,])
func_11441 = relay.Function([var_11402,], output)
mod['func_11441'] = func_11441
mod = relay.transform.InferType()(mod)
var_11442 = relay.var("var_11442", dtype = "uint16", shape = (600, 2))#candidate|11442|(600, 2)|var|uint16
output = func_11441(var_11442)
func_11443 = relay.Function([var_11442], output)
mutated_mod['func_11443'] = func_11443
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11495 = relay.var("var_11495", dtype = "float32", shape = (8, 14, 6))#candidate|11495|(8, 14, 6)|var|float32
uop_11496 = relay.log(var_11495.astype('float32')) # shape=(8, 14, 6)
output = uop_11496
output2 = uop_11496
func_11506 = relay.Function([var_11495,], output)
mod['func_11506'] = func_11506
mod = relay.transform.InferType()(mod)
mutated_mod['func_11506'] = func_11506
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11507 = relay.var("var_11507", dtype = "float32", shape = (8, 14, 6))#candidate|11507|(8, 14, 6)|var|float32
func_11506_call = mutated_mod.get_global_var('func_11506')
call_11508 = func_11506_call(var_11507)
output = call_11508
func_11509 = relay.Function([var_11507], output)
mutated_mod['func_11509'] = func_11509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9913_call = mod.get_global_var('func_9913')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_11515 = func_9913_call()
call_11516 = func_9913_call()
output = relay.Tuple([call_11515,])
output2 = relay.Tuple([call_11516,])
func_11542 = relay.Function([], output)
mod['func_11542'] = func_11542
mod = relay.transform.InferType()(mod)
mutated_mod['func_11542'] = func_11542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11542_call = mutated_mod.get_global_var('func_11542')
call_11543 = func_11542_call()
output = call_11543
func_11544 = relay.Function([], output)
mutated_mod['func_11544'] = func_11544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11183_call = mod.get_global_var('func_11183')
func_11184_call = mutated_mod.get_global_var('func_11184')
call_11567 = func_11183_call()
call_11568 = func_11183_call()
func_5594_call = mod.get_global_var('func_5594')
func_5602_call = mutated_mod.get_global_var('func_5602')
var_11584 = relay.var("var_11584", dtype = "uint32", shape = (3, 9))#candidate|11584|(3, 9)|var|uint32
var_11585 = relay.var("var_11585", dtype = "int16", shape = (9,))#candidate|11585|(9,)|var|int16
var_11586 = relay.var("var_11586", dtype = "int16", shape = (810,))#candidate|11586|(810,)|var|int16
const_11587 = relay.const([-2.959627,1.379678,8.293393,4.132711,-2.818632,-4.531496,8.010120,-0.857297,-4.224002,3.704399,-2.798017,-9.858028,6.339083,-4.046556,6.427186,-7.733594,3.742771,0.481280,2.601973,9.845476,4.203120], dtype = "float32")#candidate|11587|(21,)|const|float32
var_11588 = relay.var("var_11588", dtype = "int16", shape = (1092,))#candidate|11588|(1092,)|var|int16
var_11589 = relay.var("var_11589", dtype = "uint16", shape = (420,))#candidate|11589|(420,)|var|uint16
call_11583 = relay.TupleGetItem(func_5594_call(relay.reshape(var_11584.astype('uint32'), [3, 3, 3]), relay.reshape(var_11584.astype('uint32'), [3, 3, 3]), relay.reshape(var_11585.astype('int16'), [1, 9]), relay.reshape(var_11586.astype('int16'), [810,]), relay.reshape(const_11587.astype('float32'), [7, 3]), relay.reshape(var_11588.astype('int16'), [182, 6]), relay.reshape(var_11589.astype('uint16'), [420,]), ), 3)
call_11590 = relay.TupleGetItem(func_5602_call(relay.reshape(var_11584.astype('uint32'), [3, 3, 3]), relay.reshape(var_11584.astype('uint32'), [3, 3, 3]), relay.reshape(var_11585.astype('int16'), [1, 9]), relay.reshape(var_11586.astype('int16'), [810,]), relay.reshape(const_11587.astype('float32'), [7, 3]), relay.reshape(var_11588.astype('int16'), [182, 6]), relay.reshape(var_11589.astype('uint16'), [420,]), ), 3)
output = relay.Tuple([call_11567,call_11583,var_11584,var_11585,var_11586,const_11587,var_11588,var_11589,])
output2 = relay.Tuple([call_11568,call_11590,var_11584,var_11585,var_11586,const_11587,var_11588,var_11589,])
func_11594 = relay.Function([var_11584,var_11585,var_11586,var_11588,var_11589,], output)
mod['func_11594'] = func_11594
mod = relay.transform.InferType()(mod)
mutated_mod['func_11594'] = func_11594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11594_call = mutated_mod.get_global_var('func_11594')
var_11596 = relay.var("var_11596", dtype = "uint32", shape = (3, 9))#candidate|11596|(3, 9)|var|uint32
var_11597 = relay.var("var_11597", dtype = "int16", shape = (9,))#candidate|11597|(9,)|var|int16
var_11598 = relay.var("var_11598", dtype = "int16", shape = (810,))#candidate|11598|(810,)|var|int16
var_11599 = relay.var("var_11599", dtype = "int16", shape = (1092,))#candidate|11599|(1092,)|var|int16
var_11600 = relay.var("var_11600", dtype = "uint16", shape = (420,))#candidate|11600|(420,)|var|uint16
call_11595 = func_11594_call(var_11596,var_11597,var_11598,var_11599,var_11600,)
output = call_11595
func_11601 = relay.Function([var_11596,var_11597,var_11598,var_11599,var_11600,], output)
mutated_mod['func_11601'] = func_11601
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11623 = relay.var("var_11623", dtype = "uint32", shape = ())#candidate|11623|()|var|uint32
var_11624 = relay.var("var_11624", dtype = "uint32", shape = (9, 8, 14))#candidate|11624|(9, 8, 14)|var|uint32
bop_11625 = relay.greater(var_11623.astype('bool'), var_11624.astype('bool')) # shape=(9, 8, 14)
bop_11645 = relay.subtract(var_11624.astype('int8'), relay.reshape(bop_11625.astype('int8'), relay.shape_of(var_11624))) # shape=(9, 8, 14)
output = bop_11645
output2 = bop_11645
func_11650 = relay.Function([var_11623,var_11624,], output)
mod['func_11650'] = func_11650
mod = relay.transform.InferType()(mod)
var_11651 = relay.var("var_11651", dtype = "uint32", shape = ())#candidate|11651|()|var|uint32
var_11652 = relay.var("var_11652", dtype = "uint32", shape = (9, 8, 14))#candidate|11652|(9, 8, 14)|var|uint32
output = func_11650(var_11651,var_11652,)
func_11653 = relay.Function([var_11651,var_11652,], output)
mutated_mod['func_11653'] = func_11653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10777_call = mod.get_global_var('func_10777')
func_10778_call = mutated_mod.get_global_var('func_10778')
call_11831 = func_10777_call()
call_11832 = func_10777_call()
output = call_11831
output2 = call_11832
func_11894 = relay.Function([], output)
mod['func_11894'] = func_11894
mod = relay.transform.InferType()(mod)
mutated_mod['func_11894'] = func_11894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11894_call = mutated_mod.get_global_var('func_11894')
call_11895 = func_11894_call()
output = call_11895
func_11896 = relay.Function([], output)
mutated_mod['func_11896'] = func_11896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10380_call = mod.get_global_var('func_10380')
func_10382_call = mutated_mod.get_global_var('func_10382')
call_11917 = relay.TupleGetItem(func_10380_call(), 1)
call_11918 = relay.TupleGetItem(func_10382_call(), 1)
output = call_11917
output2 = call_11918
func_11928 = relay.Function([], output)
mod['func_11928'] = func_11928
mod = relay.transform.InferType()(mod)
output = func_11928()
func_11929 = relay.Function([], output)
mutated_mod['func_11929'] = func_11929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10305_call = mod.get_global_var('func_10305')
func_10307_call = mutated_mod.get_global_var('func_10307')
call_11959 = relay.TupleGetItem(func_10305_call(), 0)
call_11960 = relay.TupleGetItem(func_10307_call(), 0)
func_11117_call = mod.get_global_var('func_11117')
func_11122_call = mutated_mod.get_global_var('func_11122')
var_11964 = relay.var("var_11964", dtype = "float32", shape = (132,))#candidate|11964|(132,)|var|float32
const_11965 = relay.const([-5.196387,9.146772,-3.753713,-8.687898,-6.774633,4.039076,-8.344217,7.467914,0.774368,1.914637,5.997608,5.846824,-8.263137,0.471972,6.737190,-4.081806,-0.072673,-6.432965,-0.045211,-3.187903,-0.921977], dtype = "float32")#candidate|11965|(21,)|const|float32
const_11966 = relay.const([5,-7,-10,8,-10,6,-2,-10,1,8,-6,9,-8,1,1,10,-3,-9,-6,9,-2,7,4,-2,-7,-2,-7,-6,-9,-7,-9,8,-1,-7,4,4,10,1,-9,8,5,-10,10,9,3,8,10,5,3,-10,-5,4,-4,-1,7,-10,9,7,5,9,-2,1,-4,-5,8,5,-10,1,3,-8,1,-5,9,10,-5,-6,-5,-9,3,8,-1,-5,10,-4,7,-5,3,7,-1,-8,7,3,10,2,10,-7,1,-10,9,3,-8,-2,-8,3,-7,6,-4,5,5,-1,7,5,-9,8,1,-4,2,9,5,1,-4,6,-8,-4,-10,7,3,5,7,2,7,-8,-1,10,1,-8,10,5,-6,-10,-5,4,-1,2,2,-7,-1,9,1,8,3,-9,1,-9,-2,-5,-10,-5,-10,8,-2,-3,1,4,1,6,-9,7,6,9,6,4,-7,-6,3,-8,-10,-7,3,3,-5,-10,-3,-4,-2,6,1,4,9,4,6,9,3,5,9,-1,-6,-7,-5,-7,-8,-7,-4,-6,2,5,1,4,-9,-9,-6,3,1,-10,-2,7,9,-10,6,-6,-5,-8,4,-10,8,1,2,-5,-3,1,-9,9,2,-3,-5,-9,-9,-7,-7,-5,-8,1,2,5,9,5,6,-10,-1,-9,3,7,6,-4,-2,-10,-9,4,-6,-9,9,-5,-7,-7,9,7,5,5,-9,-4,9,-5,4,-2,-10,-5,6,-6,-6,-1,9,8,-1,5,1,-3,3,3,-9,6,-7,-10,1,-3,-9,4,2,1,-5,3,8,-8,-6,-8,5,6,-7,4,10,-6,4,6,2,-1,-8,2,-2,6,-3,-7,-10,-2,-7,4,-6,10,-8,9,-6,8,-5,-9,-3,9,9,6,-6,4,-5,-5,-7,-2,-1,-7,-1,10,-7,5,4,-10,7,-10,-2,-10,-3,9,-10,-6,-2,-8,10,-1,9,-1,-9,3,6,-10,-10,-7,-5,-2,7,-6,3,-4,-3,3,10,-2,4,-4,1,-1,4,1,-2,6,2,-2,5,-7,-10,10,-4,-10,2,-1,10,1,9,5,8,3,-3,-3,1,-9,-2,-5,-5,-7,9,-7,1,4,3,-3,3,9], dtype = "uint16")#candidate|11966|(420,)|const|uint16
call_11963 = relay.TupleGetItem(func_11117_call(relay.reshape(var_11964.astype('float32'), [1, 132]), relay.reshape(const_11965.astype('float32'), [21,]), relay.reshape(const_11966.astype('uint16'), [420,]), ), 5)
call_11967 = relay.TupleGetItem(func_11122_call(relay.reshape(var_11964.astype('float32'), [1, 132]), relay.reshape(const_11965.astype('float32'), [21,]), relay.reshape(const_11966.astype('uint16'), [420,]), ), 5)
output = relay.Tuple([call_11959,call_11963,var_11964,const_11965,const_11966,])
output2 = relay.Tuple([call_11960,call_11967,var_11964,const_11965,const_11966,])
func_12006 = relay.Function([var_11964,], output)
mod['func_12006'] = func_12006
mod = relay.transform.InferType()(mod)
var_12007 = relay.var("var_12007", dtype = "float32", shape = (132,))#candidate|12007|(132,)|var|float32
output = func_12006(var_12007)
func_12008 = relay.Function([var_12007], output)
mutated_mod['func_12008'] = func_12008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11183_call = mod.get_global_var('func_11183')
func_11184_call = mutated_mod.get_global_var('func_11184')
call_12032 = func_11183_call()
call_12033 = func_11183_call()
output = call_12032
output2 = call_12033
func_12045 = relay.Function([], output)
mod['func_12045'] = func_12045
mod = relay.transform.InferType()(mod)
mutated_mod['func_12045'] = func_12045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12045_call = mutated_mod.get_global_var('func_12045')
call_12046 = func_12045_call()
output = call_12046
func_12047 = relay.Function([], output)
mutated_mod['func_12047'] = func_12047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9867_call = mod.get_global_var('func_9867')
func_9868_call = mutated_mod.get_global_var('func_9868')
call_12058 = func_9867_call()
call_12059 = func_9867_call()
func_11177_call = mod.get_global_var('func_11177')
func_11179_call = mutated_mod.get_global_var('func_11179')
var_12062 = relay.var("var_12062", dtype = "uint16", shape = (1200,))#candidate|12062|(1200,)|var|uint16
call_12061 = relay.TupleGetItem(func_11177_call(relay.reshape(var_12062.astype('uint16'), [1200,])), 0)
call_12063 = relay.TupleGetItem(func_11179_call(relay.reshape(var_12062.astype('uint16'), [1200,])), 0)
func_5868_call = mod.get_global_var('func_5868')
func_5871_call = mutated_mod.get_global_var('func_5871')
call_12070 = func_5868_call(relay.reshape(call_12061.astype('float32'), [5, 16, 1]))
call_12071 = func_5868_call(relay.reshape(call_12061.astype('float32'), [5, 16, 1]))
uop_12078 = relay.atan(call_12061.astype('float32')) # shape=(5, 16, 1)
uop_12080 = relay.atan(call_12063.astype('float32')) # shape=(5, 16, 1)
func_3842_call = mod.get_global_var('func_3842')
func_3845_call = mutated_mod.get_global_var('func_3845')
var_12096 = relay.var("var_12096", dtype = "float32", shape = (21,))#candidate|12096|(21,)|var|float32
call_12095 = func_3842_call(relay.reshape(var_12096.astype('float32'), [3, 7, 1]))
call_12097 = func_3842_call(relay.reshape(var_12096.astype('float32'), [3, 7, 1]))
output = relay.Tuple([call_12058,var_12062,call_12070,uop_12078,call_12095,var_12096,])
output2 = relay.Tuple([call_12059,var_12062,call_12071,uop_12080,call_12097,var_12096,])
func_12107 = relay.Function([var_12062,var_12096,], output)
mod['func_12107'] = func_12107
mod = relay.transform.InferType()(mod)
mutated_mod['func_12107'] = func_12107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12107_call = mutated_mod.get_global_var('func_12107')
var_12109 = relay.var("var_12109", dtype = "uint16", shape = (1200,))#candidate|12109|(1200,)|var|uint16
var_12110 = relay.var("var_12110", dtype = "float32", shape = (21,))#candidate|12110|(21,)|var|float32
call_12108 = func_12107_call(var_12109,var_12110,)
output = call_12108
func_12111 = relay.Function([var_12109,var_12110,], output)
mutated_mod['func_12111'] = func_12111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9803_call = mod.get_global_var('func_9803')
func_9804_call = mutated_mod.get_global_var('func_9804')
call_12170 = func_9803_call()
call_12171 = func_9803_call()
output = call_12170
output2 = call_12171
func_12186 = relay.Function([], output)
mod['func_12186'] = func_12186
mod = relay.transform.InferType()(mod)
mutated_mod['func_12186'] = func_12186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12186_call = mutated_mod.get_global_var('func_12186')
call_12187 = func_12186_call()
output = call_12187
func_12188 = relay.Function([], output)
mutated_mod['func_12188'] = func_12188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10436_call = mod.get_global_var('func_10436')
func_10438_call = mutated_mod.get_global_var('func_10438')
call_12343 = relay.TupleGetItem(func_10436_call(), 0)
call_12344 = relay.TupleGetItem(func_10438_call(), 0)
func_12186_call = mod.get_global_var('func_12186')
func_12188_call = mutated_mod.get_global_var('func_12188')
call_12374 = func_12186_call()
call_12375 = func_12186_call()
output = relay.Tuple([call_12343,call_12374,])
output2 = relay.Tuple([call_12344,call_12375,])
func_12376 = relay.Function([], output)
mod['func_12376'] = func_12376
mod = relay.transform.InferType()(mod)
output = func_12376()
func_12377 = relay.Function([], output)
mutated_mod['func_12377'] = func_12377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11183_call = mod.get_global_var('func_11183')
func_11184_call = mutated_mod.get_global_var('func_11184')
call_12401 = func_11183_call()
call_12402 = func_11183_call()
output = relay.Tuple([call_12401,])
output2 = relay.Tuple([call_12402,])
func_12405 = relay.Function([], output)
mod['func_12405'] = func_12405
mod = relay.transform.InferType()(mod)
mutated_mod['func_12405'] = func_12405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12405_call = mutated_mod.get_global_var('func_12405')
call_12406 = func_12405_call()
output = call_12406
func_12407 = relay.Function([], output)
mutated_mod['func_12407'] = func_12407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12045_call = mod.get_global_var('func_12045')
func_12047_call = mutated_mod.get_global_var('func_12047')
call_12424 = func_12045_call()
call_12425 = func_12045_call()
uop_12426 = relay.cos(call_12424.astype('float32')) # shape=(9, 11, 2)
uop_12428 = relay.cos(call_12425.astype('float32')) # shape=(9, 11, 2)
uop_12434 = relay.sinh(uop_12426.astype('float32')) # shape=(9, 11, 2)
uop_12436 = relay.sinh(uop_12428.astype('float32')) # shape=(9, 11, 2)
output = relay.Tuple([uop_12434,])
output2 = relay.Tuple([uop_12436,])
func_12437 = relay.Function([], output)
mod['func_12437'] = func_12437
mod = relay.transform.InferType()(mod)
output = func_12437()
func_12438 = relay.Function([], output)
mutated_mod['func_12438'] = func_12438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11266_call = mod.get_global_var('func_11266')
func_11267_call = mutated_mod.get_global_var('func_11267')
call_12458 = relay.TupleGetItem(func_11266_call(), 0)
call_12459 = relay.TupleGetItem(func_11267_call(), 0)
output = call_12458
output2 = call_12459
func_12473 = relay.Function([], output)
mod['func_12473'] = func_12473
mod = relay.transform.InferType()(mod)
output = func_12473()
func_12474 = relay.Function([], output)
mutated_mod['func_12474'] = func_12474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11197_call = mod.get_global_var('func_11197')
func_11198_call = mutated_mod.get_global_var('func_11198')
call_12477 = func_11197_call()
call_12478 = func_11197_call()
func_8898_call = mod.get_global_var('func_8898')
func_8901_call = mutated_mod.get_global_var('func_8901')
var_12488 = relay.var("var_12488", dtype = "float32", shape = (132,))#candidate|12488|(132,)|var|float32
call_12487 = relay.TupleGetItem(func_8898_call(relay.reshape(var_12488.astype('float32'), [2, 11, 6])), 0)
call_12489 = relay.TupleGetItem(func_8901_call(relay.reshape(var_12488.astype('float32'), [2, 11, 6])), 0)
output = relay.Tuple([call_12477,call_12487,var_12488,])
output2 = relay.Tuple([call_12478,call_12489,var_12488,])
func_12497 = relay.Function([var_12488,], output)
mod['func_12497'] = func_12497
mod = relay.transform.InferType()(mod)
mutated_mod['func_12497'] = func_12497
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12498 = relay.var("var_12498", dtype = "float32", shape = (132,))#candidate|12498|(132,)|var|float32
func_12497_call = mutated_mod.get_global_var('func_12497')
call_12499 = func_12497_call(var_12498)
output = call_12499
func_12500 = relay.Function([var_12498], output)
mutated_mod['func_12500'] = func_12500
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12517 = relay.var("var_12517", dtype = "float32", shape = (15, 4, 9))#candidate|12517|(15, 4, 9)|var|float32
uop_12518 = relay.tan(var_12517.astype('float32')) # shape=(15, 4, 9)
output = relay.Tuple([uop_12518,])
output2 = relay.Tuple([uop_12518,])
func_12526 = relay.Function([var_12517,], output)
mod['func_12526'] = func_12526
mod = relay.transform.InferType()(mod)
mutated_mod['func_12526'] = func_12526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12527 = relay.var("var_12527", dtype = "float32", shape = (15, 4, 9))#candidate|12527|(15, 4, 9)|var|float32
func_12526_call = mutated_mod.get_global_var('func_12526')
call_12528 = func_12526_call(var_12527)
output = call_12528
func_12529 = relay.Function([var_12527], output)
mutated_mod['func_12529'] = func_12529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10777_call = mod.get_global_var('func_10777')
func_10778_call = mutated_mod.get_global_var('func_10778')
call_12577 = func_10777_call()
call_12578 = func_10777_call()
output = call_12577
output2 = call_12578
func_12582 = relay.Function([], output)
mod['func_12582'] = func_12582
mod = relay.transform.InferType()(mod)
output = func_12582()
func_12583 = relay.Function([], output)
mutated_mod['func_12583'] = func_12583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12641 = relay.var("var_12641", dtype = "float32", shape = (13, 11, 8))#candidate|12641|(13, 11, 8)|var|float32
uop_12642 = relay.rsqrt(var_12641.astype('float32')) # shape=(13, 11, 8)
var_12665 = relay.var("var_12665", dtype = "float32", shape = (13, 11, 8))#candidate|12665|(13, 11, 8)|var|float32
bop_12666 = relay.bitwise_and(var_12641.astype('uint64'), relay.reshape(var_12665.astype('uint64'), relay.shape_of(var_12641))) # shape=(13, 11, 8)
uop_12680 = relay.sin(bop_12666.astype('float64')) # shape=(13, 11, 8)
func_10538_call = mod.get_global_var('func_10538')
func_10541_call = mutated_mod.get_global_var('func_10541')
var_12685 = relay.var("var_12685", dtype = "float64", shape = (198,))#candidate|12685|(198,)|var|float64
call_12684 = func_10538_call(relay.reshape(var_12685.astype('float64'), [9, 11, 2]))
call_12686 = func_10538_call(relay.reshape(var_12685.astype('float64'), [9, 11, 2]))
func_11594_call = mod.get_global_var('func_11594')
func_11601_call = mutated_mod.get_global_var('func_11601')
var_12689 = relay.var("var_12689", dtype = "uint32", shape = (27,))#candidate|12689|(27,)|var|uint32
var_12690 = relay.var("var_12690", dtype = "int16", shape = (9,))#candidate|12690|(9,)|var|int16
const_12691 = relay.const([-5,-3,-9,-5,2,8,10,-10,10,-1,-10,3,-4,6,-4,-3,1,1,8,-3,-7,4,9,-4,9,1,6,7,-4,1,5,4,7,8,-3,-6,3,8,5,-10,-7,6,-8,-3,-8,-10,-8,1,-2,-3,-9,7,-8,-4,7,9,-7,-7,-8,7,7,-10,-4,10,-9,2,1,-10,4,-4,-7,7,8,1,8,-3,-7,-8,6,-8,-1,5,-2,1,-8,-9,7,-9,3,2,-7,-4,2,5,2,-4,-4,6,-3,-3,3,-4,-9,-7,4,-2,8,7,-2,7,6,8,8,7,5,2,2,-10,10,3,-9,-7,5,-7,8,10,3,5,5,5,-4,8,3,-8,5,9,8,-1,1,9,-1,-3,-10,8,-4,3,-9,7,9,7,9,-10,-1,2,-10,-1,-2,5,-5,-7,-7,-7,3,2,-9,8,4,-7,-10,9,1,-10,4,-7,2,8,-4,8,8,1,-9,-7,8,10,-6,7,8,-2,-7,-1,-3,-10,3,6,8,-1,6,-1,-6,2,1,9,9,2,-2,-6,-2,-2,4,6,-5,2,7,-6,6,4,7,9,-9,-3,5,-4,6,2,5,-4,7,2,9,8,5,-5,9,10,8,-9,-3,-2,10,-8,3,7,-8,-5,-8,4,-7,8,6,4,-9,7,-5,-2,-2,-1,-4,3,7,1,-1,1,-8,5,-6,8,-1,9,3,-2,2,7,2,-10,-10,-6,-9,-10,-5,3,-6,-7,5,5,-7,-10,-10,9,-9,-3,-1,1,-8,-9,7,-6,-2,-10,-1,4,1,1,2,-3,6,-1,7,-8,-6,9,8,8,8,-6,2,9,5,7,7,-10,8,-1,-5,1,4,5,-3,2,1,-2,-8,-10,-8,-10,-7,-7,4,-1,5,-10,-9,-2,10,-6,2,5,7,-2,-2,-10,-5,-3,3,7,3,-10,4,7,-8,4,8,-9,-7,-2,3,6,-6,-6,5,8,1,-10,-2,1,-9,7,6,-4,8,2,7,9,8,-2,-9,1,-10,6,-8,-1,4,4,-5,3,-6,5,2,7,-1,3,1,1,4,5,-6,1,-4,10,-5,3,9,-7,5,-2,-4,8,8,-9,1,-8,-10,-7,-6,-8,-1,4,-10,-10,4,-3,9,-4,-3,3,8,-10,-10,7,-3,7,-5,-3,-2,1,-9,6,8,-4,4,-4,9,-5,1,3,8,-10,-2,9,8,-2,4,4,10,2,5,8,-2,-3,6,8,7,-6,-1,-3,-5,-7,-4,9,-8,10,9,-9,3,-1,-7,5,-7,5,6,-10,-4,9,9,-4,1,2,1,8,-5,-5,9,8,-10,7,-10,6,5,2,3,1,-7,3,-6,2,-1,-4,6,8,5,-10,2,9,-1,-1,8,-10,7,-4,4,6,4,4,4,-4,7,5,1,-7,4,1,-10,-8,-4,-3,8,-2,9,-10,9,-3,-1,-8,-10,-7,2,8,-8,-10,7,-9,-3,7,8,-7,3,-7,-6,-7,7,3,-1,-3,7,1,9,1,10,5,9,-9,10,9,9,2,-1,9,-8,-10,10,-3,1,2,-3,-3,9,-5,10,-4,-9,8,5,-1,-2,10,-4,10,6,-1,10,-1,8,9,1,6,2,-9,1,-10,5,-2,2,6,-7,8,3,-8,9,-8,1,-2,7,-1,-3,1,2,9,-9,-3,2,-4,5,5,-9,4,-6,-4,8,-3,-6,-1,2,-4,4,7,-1,10,-5,9,7,-6,10,8,-5,2,-9,-2,10,-2,-5,2,-2,-1,-9,-2,6,1,-8,-7,-2,-6,10,2,6,-6,-2,7,1,2,-10,6,10,3,6,1,-9,-9,-7,-10,-2,3,7,10,10,7,6,-8,-1,-4,-3,5,2,-10,4,1,8,-1,-4,2,5,-5,-3,7,6,-2,-6,8,2,6,-9,3,-1,-10,-9,8,-2,-5,8,10,3,10,3,-9,9,3,4,-5,4,9,-8,7,2,6,6,-3,-1,10,4,-1,7,-8,3,6,-1,-1,4,10,2,7,5,10,-4,2,-2,-10,8,-9,-3,8,-10,2,7,-3,9,8,1,-10,8,4,6,8,1,-4,-2,6,-1,9,10,6,3,5,-2,2,8,2,7,-7,7,3,-6,-5], dtype = "int16")#candidate|12691|(810,)|const|int16
const_12692 = relay.const([7,-6,9,9,-7,9,-2,5,-1,4,-1,9,-4,2,6,-4,9,7,1,-1,8,-8,-9,4,5,5,-3,-3,3,-6,7,1,-2,-5,4,-1,-8,-3,-4,-6,-9,9,7,-10,-7,9,-8,1,7,-3,4,5,5,-10,9,9,6,1,-10,-4,-9,1,1,9,8,1,8,-5,-6,-5,10,2,-2,9,-5,-8,-4,-6,-1,-5,9,-2,-5,-3,1,-5,-1,-4,9,-4,-6,1,-1,7,1,4,1,8,-2,-5,8,3,9,2,-3,-4,-9,1,1,-4,1,4,-4,7,3,9,4,-9,-1,10,-7,3,9,-6,1,5,-7,-5,1,-9,4,4,-9,-10,5,-4,-4,8,8,-6,-3,-2,-9,-3,9,-3,-9,-2,3,1,-3,2,-10,3,-4,1,-1,2,-10,-8,-7,1,-1,8,-4,-2,4,6,-4,-3,9,8,7,-10,4,-5,1,1,-10,6,8,2,-1,5,7,-6,2,-6,3,-5,6,-10,-7,-8,1,-2,1,-10,-2,8,5,-8,7,5,2,8,3,4,10,8,4,-10,-3,7,-5,7,-10,-6,-10,8,-4,-9,-6,-6,5,-6,3,-5,-6,6,-9,3,9,-10,-2,-3,7,-1,5,9,-3,-10,-3,-7,-7,-2,5,8,3,-4,-6,-1,-1,8,-2,-7,-2,-3,1,-5,2,-7,-1,4,-2,-8,7,3,-4,5,8,4,10,6,-9,10,-6,-10,-1,-10,-5,3,-10,2,-9,-1,-1,-6,4,4,3,-5,-2,-6,9,8,-4,6,9,-9,4,-5,7,-8,7,2,-8,9,-4,-3,-10,-9,-3,-10,2,3,9,3,-1,-7,-4,8,-8,10,-1,6,-5,6,9,-10,-5,-9,1,2,-6,2,-10,10,7,-3,-4,-2,4,-6,-3,-6,-9,5,-10,4,6,3,-6,5,4,4,6,8,-5,3,-1,8,-5,-10,8,8,-9,1,4,1,-5,-8,2,-1,10,-4,-2,-3,-5,-1,-8,-8,-9,-4,-6,-3,-9,-4,-8,-5,10,3,2,-8,-2,10,7,9,-9,-1,6,-8,6,4,-6,4,10,7,-5,9,-5,7,8,-7,7,-4,1,-7,-1,-3,-2,2,-6,4,-5,9,3,-1,2,-10,8,-3,5,10,-3,-4,1,6,6,-9,4,-2,-3,-10,4,5,5,3,-8,-5,-5,5,-6,3,3,-6,9,-6,2,9,-7,8,-2,1,1,10,-4,1,-6,-3,-6,7,-6,10,-10,-3,-5,10,-3,9,6,1,-6,9,5,-2,2,6,2,-5,-7,9,3,-1,-10,-10,2,6,2,-2,9,9,5,9,-3,10,-5,2,-8,-4,-3,-5,-4,5,-6,6,-2,7,10,3,-10,-3,-3,5,-8,-10,-3,-8,-5,4,9,-7,3,-6,-1,10,3,-8,-8,10,4,-9,-6,-4,7,2,-6,-6,-4,5,3,-7,-9,-5,-2,5,4,4,10,-2,-6,4,5,4,-4,7,4,-6,-10,2,-7,-9,10,2,1,-6,8,10,9,5,5,-3,-5,-4,1,9,10,10,9,-7,-7,9,2,-1,5,4,-5,1,-5,6,-8,5,-1,9,10,2,8,3,1,2,-9,8,-5,-5,-3,-8,4,-10,-2,-6,-4,10,-8,-3,-8,-6,5,-10,-10,-1,-5,-3,-6,-7,1,-1,-2,6,-5,-10,6,-9,-8,9,5,3,3,-1,9,7,1,-3,-10,-4,10,1,10,6,10,-7,7,5,6,-9,5,-4,-6,1,8,3,9,-3,-4,8,6,9,7,-5,1,9,2,4,4,3,9,1,2,9,-5,-9,6,6,3,8,5,-10,3,-4,9,1,7,-8,-6,-4,7,3,3,-7,-9,2,2,-5,-8,-4,-8,7,-6,4,-3,4,4,-3,7,5,7,-1,9,-6,5,-4,-6,8,-5,6,1,-9,-9,3,-4,-1,-8,-2,10,-6,7,-8,10,-6,8,-4,-2,-5,-9,7,9,-6,10,-3,-5,5,-8,6,-1,-4,2,10,-3,7,3,5,1,8,9,-4,-2,-6,-4,-10,-5,-5,-4,-3,10,-9,3,7,-7,-7,-8,-1,-8,3,-9,6,-9,1,6,10,-3,10,-7,9,-2,10,-7,-10,-8,-6,6,-9,5,-8,-3,8,9,3,5,-2,8,8,-3,-10,-1,-5,10,-4,5,5,-10,5,1,7,-10,4,1,5,2,4,-4,2,5,9,6,10,-1,9,-1,-9,-7,10,6,-1,-1,-2,4,-8,-10,8,5,3,-3,7,1,4,10,6,-7,6,10,2,-2,2,7,7,8,-7,4,-4,9,-1,-3,-7,-3,-10,-1,-8,1,4,-2,2,-2,-2,3,9,5,3,8,8,-2,-4,-1,7,-4,1,-1,5,-2,-10,-2,-6,-1,-5,-8,-2,-1,3,-1,-3,-1,-1,9,-8,3,-7,8,-4,-2,-2,1,-1,10,-6,6,6,-8,-4,2,-8,-1,-2,8,-2,2,-1,7,7,9,8,7,-7,-10,-9,-4,-9,-4,5,-4,2,-10,1,6,5,-5,3,9,-4,10,3,-2,8,-5,8,2,7,3,-1,8,-6,-1,3,-10,2,2,-5,-10,-10,8,4,8,-3,-9,-9,10,-8,-8,-4,-9,10,2,6,8,6,-4,5,-10,-2,-3,-6,10,-6,8,-7,-6,8,2,-9,2,6,6,9,-10,-6,3,5,-9,-2,-3,-4,7,7,6,10,3,-5,7,-4,-4,-9,-4,10,5,10,10,7,6,5,-1,-1,2,1,9,-8,8,9,2,-7,9,7,3,-5,7,10,-8,10,6,-9,9,-7,-5,-2,6,-5,9,4,-7,9,-10,2,2,8,-5,5,6,-4,-10,9,-6,-1,-8,4,-4,9], dtype = "int16")#candidate|12692|(1092,)|const|int16
var_12693 = relay.var("var_12693", dtype = "uint16", shape = (420,))#candidate|12693|(420,)|var|uint16
call_12688 = relay.TupleGetItem(func_11594_call(relay.reshape(var_12689.astype('uint32'), [3, 9]), relay.reshape(var_12690.astype('int16'), [9,]), relay.reshape(const_12691.astype('int16'), [810,]), relay.reshape(const_12692.astype('int16'), [1092,]), relay.reshape(var_12693.astype('uint16'), [420,]), ), 5)
call_12694 = relay.TupleGetItem(func_11601_call(relay.reshape(var_12689.astype('uint32'), [3, 9]), relay.reshape(var_12690.astype('int16'), [9,]), relay.reshape(const_12691.astype('int16'), [810,]), relay.reshape(const_12692.astype('int16'), [1092,]), relay.reshape(var_12693.astype('uint16'), [420,]), ), 5)
func_2252_call = mod.get_global_var('func_2252')
func_2255_call = mutated_mod.get_global_var('func_2255')
call_12708 = relay.TupleGetItem(func_2252_call(relay.reshape(const_12692.astype('int16'), [7, 12, 13])), 0)
call_12709 = relay.TupleGetItem(func_2255_call(relay.reshape(const_12692.astype('int16'), [7, 12, 13])), 0)
bop_12710 = relay.logical_or(uop_12680.astype('bool'), relay.reshape(var_12641.astype('bool'), relay.shape_of(uop_12680))) # shape=(13, 11, 8)
func_10563_call = mod.get_global_var('func_10563')
func_10565_call = mutated_mod.get_global_var('func_10565')
call_12715 = relay.TupleGetItem(func_10563_call(), 2)
call_12716 = relay.TupleGetItem(func_10565_call(), 2)
output = relay.Tuple([uop_12642,call_12684,var_12685,call_12688,var_12689,var_12690,const_12691,const_12692,var_12693,call_12708,bop_12710,call_12715,])
output2 = relay.Tuple([uop_12642,call_12686,var_12685,call_12694,var_12689,var_12690,const_12691,const_12692,var_12693,call_12709,bop_12710,call_12716,])
func_12717 = relay.Function([var_12641,var_12665,var_12685,var_12689,var_12690,var_12693,], output)
mod['func_12717'] = func_12717
mod = relay.transform.InferType()(mod)
mutated_mod['func_12717'] = func_12717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12717_call = mutated_mod.get_global_var('func_12717')
var_12719 = relay.var("var_12719", dtype = "float32", shape = (13, 11, 8))#candidate|12719|(13, 11, 8)|var|float32
var_12720 = relay.var("var_12720", dtype = "float32", shape = (13, 11, 8))#candidate|12720|(13, 11, 8)|var|float32
var_12721 = relay.var("var_12721", dtype = "float64", shape = (198,))#candidate|12721|(198,)|var|float64
var_12722 = relay.var("var_12722", dtype = "uint32", shape = (27,))#candidate|12722|(27,)|var|uint32
var_12723 = relay.var("var_12723", dtype = "int16", shape = (9,))#candidate|12723|(9,)|var|int16
var_12724 = relay.var("var_12724", dtype = "uint16", shape = (420,))#candidate|12724|(420,)|var|uint16
call_12718 = func_12717_call(var_12719,var_12720,var_12721,var_12722,var_12723,var_12724,)
output = call_12718
func_12725 = relay.Function([var_12719,var_12720,var_12721,var_12722,var_12723,var_12724,], output)
mutated_mod['func_12725'] = func_12725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9913_call = mod.get_global_var('func_9913')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_12734 = func_9913_call()
call_12735 = func_9913_call()
func_12526_call = mod.get_global_var('func_12526')
func_12529_call = mutated_mod.get_global_var('func_12529')
var_12737 = relay.var("var_12737", dtype = "float32", shape = (540,))#candidate|12737|(540,)|var|float32
call_12736 = relay.TupleGetItem(func_12526_call(relay.reshape(var_12737.astype('float32'), [15, 4, 9])), 0)
call_12738 = relay.TupleGetItem(func_12529_call(relay.reshape(var_12737.astype('float32'), [15, 4, 9])), 0)
output = relay.Tuple([call_12734,call_12736,var_12737,])
output2 = relay.Tuple([call_12735,call_12738,var_12737,])
func_12741 = relay.Function([var_12737,], output)
mod['func_12741'] = func_12741
mod = relay.transform.InferType()(mod)
mutated_mod['func_12741'] = func_12741
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12742 = relay.var("var_12742", dtype = "float32", shape = (540,))#candidate|12742|(540,)|var|float32
func_12741_call = mutated_mod.get_global_var('func_12741')
call_12743 = func_12741_call(var_12742)
output = call_12743
func_12744 = relay.Function([var_12742], output)
mutated_mod['func_12744'] = func_12744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12473_call = mod.get_global_var('func_12473')
func_12474_call = mutated_mod.get_global_var('func_12474')
call_12807 = func_12473_call()
call_12808 = func_12473_call()
output = call_12807
output2 = call_12808
func_12809 = relay.Function([], output)
mod['func_12809'] = func_12809
mod = relay.transform.InferType()(mod)
mutated_mod['func_12809'] = func_12809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12809_call = mutated_mod.get_global_var('func_12809')
call_12810 = func_12809_call()
output = call_12810
func_12811 = relay.Function([], output)
mutated_mod['func_12811'] = func_12811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11894_call = mod.get_global_var('func_11894')
func_11896_call = mutated_mod.get_global_var('func_11896')
call_12866 = func_11894_call()
call_12867 = func_11894_call()
func_10749_call = mod.get_global_var('func_10749')
func_10758_call = mutated_mod.get_global_var('func_10758')
var_12897 = relay.var("var_12897", dtype = "float64", shape = (104,))#candidate|12897|(104,)|var|float64
var_12898 = relay.var("var_12898", dtype = "int8", shape = (1232,))#candidate|12898|(1232,)|var|int8
const_12899 = relay.const([-0.462056,-1.453874,7.783879,2.426873,6.539881,-8.950153,-1.615629,0.996984,-4.426074,0.250304,-7.883373,-9.991400,6.821693,-5.173381,0.777595,0.935975,3.999161,-5.051545,-7.152454,2.606415,-9.624386], dtype = "float32")#candidate|12899|(21,)|const|float32
var_12900 = relay.var("var_12900", dtype = "int8", shape = (672,))#candidate|12900|(672,)|var|int8
const_12901 = relay.const([[1,-4,3,-9,9,7],[-3,1,-6,-4,-2,9],[-10,-2,-8,7,-2,4],[-6,-10,-2,-6,8,8],[10,8,-2,6,2,10],[-2,-3,-9,-2,7,-10],[10,6,7,-1,-8,1],[-6,2,8,-9,-9,7],[-7,-5,-10,5,-2,8],[-5,-8,-6,2,7,9],[6,-8,-10,6,-3,-2],[-5,2,8,-9,-9,-7],[-8,-6,-5,-10,4,-9],[-2,-4,4,-7,2,10],[-1,4,-8,4,4,-10],[-8,-3,10,-9,-4,9],[-8,9,-6,-2,8,7],[-1,-1,-3,-5,1,3],[7,-4,-4,1,9,-4],[8,4,-3,3,3,10],[-5,7,2,-7,-2,2],[-4,-10,2,10,7,8],[-6,-6,7,3,1,-7],[-9,-2,5,-9,-8,6],[2,-1,-1,-10,2,-3],[2,-10,-7,-3,-1,-9],[10,9,-8,7,-8,-8],[-7,-5,-4,7,-6,6],[6,-2,-6,-5,-3,-4],[7,3,-8,-6,1,6],[-2,3,2,3,-1,-4],[10,-3,4,-3,9,-8],[-9,3,-6,7,-2,5],[-10,-3,-5,-9,-8,7],[-10,-5,-8,-5,7,-7],[7,-10,2,4,-4,-4],[7,4,-4,9,1,2],[-7,6,-4,-5,-5,-9],[-10,1,-1,-5,-6,6],[-9,-5,-9,2,3,7],[1,10,7,-4,-4,1],[10,4,4,-6,-4,-7],[-10,-8,9,2,-7,7],[-2,1,8,1,-9,-5],[-6,-7,-4,5,3,6],[-7,1,3,-10,-1,-10],[4,-8,-10,-5,4,9],[6,9,-5,1,-5,8],[10,-2,-8,1,-8,6],[-10,4,-4,-1,7,2],[-6,6,7,1,1,-8],[8,4,8,1,10,3],[10,-6,5,9,-3,5],[8,-7,9,-9,-7,-2],[2,3,1,-5,10,-6],[-9,6,-9,-2,-7,7],[4,-3,-10,4,-8,-3],[4,10,1,-1,-2,-2],[10,-1,3,-4,-5,-6],[4,6,-8,3,-6,8],[-2,8,5,-8,-6,-3],[6,-3,-8,5,-10,6],[-7,-2,5,-10,10,-10],[8,2,-4,2,-6,-10],[-4,8,3,4,4,-4],[-5,-5,-10,9,-2,3],[-8,7,-2,8,-1,1],[-2,-5,8,-7,-2,9],[-7,4,-1,-7,-4,5],[-1,-1,1,10,5,-10],[-5,-8,-9,-2,7,-8],[-3,-7,9,-2,-7,7],[-4,-3,-2,-4,2,-5],[10,9,-1,4,-4,-2],[5,5,4,-3,-9,-7],[-1,-6,-2,-4,-8,10],[2,5,6,-8,9,6],[7,4,-6,-5,-2,10],[3,8,8,1,1,5],[5,-10,-9,10,6,10],[-4,8,7,2,1,1],[6,-9,-2,-4,-10,-1],[-1,-2,6,-8,8,-8],[4,-7,8,6,2,10],[-10,8,9,8,2,-6],[4,1,-9,-9,9,-10],[3,-10,1,-6,-4,-2],[4,10,10,6,-9,-9],[8,-3,-3,-3,-1,9],[4,-3,-10,1,5,-1],[9,-2,-8,9,9,2],[-7,8,9,9,5,-2],[-7,10,-6,8,2,-4],[-10,-4,-4,-1,-3,-6],[8,-8,7,7,-4,-9],[-2,6,8,-4,-2,7],[7,7,-7,-4,10,8],[-1,3,-6,6,1,1],[1,-6,-6,-8,-1,2],[-8,4,8,5,-7,-5],[-3,10,-2,-1,-6,5],[-2,-4,-6,2,5,-1],[-8,-4,-5,7,-3,-1],[-9,7,1,-7,7,-7],[-2,-8,-5,-1,5,7],[8,9,-2,-6,3,4],[7,7,7,-6,3,5],[3,10,-3,10,-10,3],[-9,10,-2,6,-10,-3],[6,-5,3,8,5,-4],[2,2,-2,5,1,3],[-2,5,3,8,-7,-10],[-2,-8,4,-7,-5,2],[3,-7,3,-10,-9,6],[2,1,8,2,10,8],[2,-4,-6,2,-4,-4],[1,3,-10,1,-2,1],[-6,1,-3,-3,6,-1],[6,2,6,-8,-3,-6],[9,-2,10,2,-8,-3],[1,7,-3,-10,6,8],[1,9,-6,-4,10,5],[-1,7,7,-2,6,-6],[10,8,9,5,2,3],[-9,-1,4,3,1,7],[-10,8,8,4,9,3],[-8,9,4,-5,2,-4],[-4,-4,-6,4,-1,1],[6,9,-7,-5,-3,-4],[8,-2,7,-7,-2,5],[3,4,-2,5,-2,3],[-7,6,-3,-6,10,-1],[3,-8,-10,-3,-4,9],[3,4,-8,-7,-7,4],[-1,-1,8,10,2,8],[-2,-7,9,-2,9,10],[-7,4,-9,-2,-9,-5],[-6,10,-2,-10,-9,-9],[-4,-3,-9,2,-1,7],[-5,4,3,10,-2,-7],[-9,7,5,-6,-8,-2],[1,2,10,-4,2,8],[-7,7,1,4,-3,7],[8,7,-2,3,-4,-5],[-6,-1,7,6,-8,-3],[-6,-10,-9,-7,10,-3],[2,6,-10,-2,2,-5],[-3,-4,3,-1,-6,6],[-7,2,-6,8,8,-5],[6,7,3,8,-2,-8],[-10,3,-9,3,3,-3],[-8,-8,4,-7,5,8],[-5,-3,-9,-3,1,6],[7,7,-5,-9,-9,3],[10,-6,5,2,-10,-8],[-7,9,9,9,-5,5],[7,4,9,-1,-7,-6],[3,-2,-5,4,-3,2],[-6,-7,-9,10,-4,-2],[-2,-6,4,-9,9,9],[-2,-8,6,9,2,3],[-8,-7,-9,-9,-4,8],[-6,4,-10,1,-8,9],[8,-3,3,2,-3,6],[-10,1,-10,1,-7,3],[-9,-9,5,8,5,-6],[1,2,8,4,-2,1],[7,8,-6,1,-7,-2],[-10,6,6,-6,9,-1],[-5,-5,1,1,-8,1],[-1,-1,5,-1,-6,2],[8,-8,-5,5,3,9],[8,3,-10,-3,-1,9],[10,2,-6,9,-2,2],[6,-9,1,-5,7,-6],[6,-8,-6,2,-7,-3],[7,-9,-8,8,10,3],[5,-10,-9,1,-8,10],[-6,-1,7,7,5,-4],[-9,-7,10,-10,-9,9],[-9,-3,7,-10,-8,-7],[-4,-10,2,-1,6,2]], dtype = "int16")#candidate|12901|(182, 6)|const|int16
const_12902 = relay.const([2.778268,5.776156,-4.304912,8.662264,-9.789098,-4.886523,-1.648183,-7.811348,5.898585,5.525527,-1.009278,-8.190445,-5.698136,4.667844,4.495748,3.697573,-7.095791,-4.974247,-1.729394,8.111967,3.584127,4.396334,-1.198397,-9.300848,2.333508,1.740440,-4.822883,-5.541774,-0.751420,5.867725,-0.789706,-5.832685,0.889975,-1.680798,-6.192378,-0.568874,5.712077,-4.705855,-8.529653,-6.840737,-4.101064,7.780560,9.881309,3.282096,-9.672402,-0.689577,9.702290,7.816771,2.076841,-1.959280,-7.305381,-7.254160,2.768628,0.496364,8.685638,6.345366,6.603230,-5.753853,-2.537267,-1.493306,-8.196117,7.557827,1.404096,2.606075,-3.404864,6.197194,-0.155237,7.423482,-7.597997,2.047401,-4.112881,2.100580,-2.379443,-7.283014,3.623030,3.037221,3.962400,-6.865467,2.058869,-3.125640,0.121342,-6.244963,8.356200,7.899459,-6.356370,3.150539,7.007593,9.512045,-5.922475,-1.828634,-6.558613,-8.695768,2.102104,2.289652,-9.150145,-7.262706,3.951492,5.810381,-6.956402,-2.744139,-9.885328,1.192131,-2.670276,0.799493,6.691947,-6.740477,9.279212,7.471490,6.006525,2.291986,-7.263957,-4.050564,8.860218,-3.200707,-8.513960,-5.977045,-6.479651,1.350150,-7.005901,-2.420217,-6.970111,-3.094886,6.648217,-1.631344,-2.284564,-4.164608,-9.453020,-1.120240,-1.316477,0.220702,7.240970,2.985895,-9.482367,-8.365855,6.519911,-4.030340,2.431446,1.483702,-0.776833,-1.976626,-4.505868,-2.815614,5.166708,-3.287372,6.899759,-3.081869,9.091119,0.250496,-2.711736,7.765528,-4.285742,-5.989570,-5.521195,-6.253937,6.042541,8.323187,7.808475,-5.281350,-3.832415,-1.155101,4.179430,-5.637022,6.859042,-0.696946,8.104627,1.094258,9.507244,6.611837,-3.409268,-0.315927,-6.572075,6.932687,9.593218,-7.566717,-6.821213,-1.290492,-3.432421,-6.133525,-4.672921,2.448263,-8.178697,3.717885,-2.621877,0.890166,-9.883170,2.539688,5.783505,-9.471322,-4.061589,-0.795526,2.559329,-6.896891,2.472057,1.043978,1.738869,9.371964,-0.803729,0.850791,-1.845592,5.350615,1.664250,4.379078,2.365319,1.165155,3.591650,-5.483594,-5.635633,-3.639347,5.893776,0.680739,-2.025679,3.930851,2.820487,-7.904874,9.964642,-3.425917,-9.499791,-7.949652,9.524159,8.273187,2.096097,-1.105675,0.091480,-8.419553,-9.924476,9.507823,-9.092652,8.258155,-0.666681,1.120491,2.774833,-3.450987,-5.924261,2.480096,-3.690140,-1.431929,-6.430041,-4.002048,0.585028,4.375566,-3.214594,-4.130588,9.573631,3.966480,9.898495,2.303808,-5.839760,-6.323340,-2.166054,5.860782,3.268943,8.652289,-0.221433,7.671945,-0.787110,6.178147,8.257648,0.162213,-5.443657,-3.017639,-1.995808,-5.055566,9.181512,8.244500,0.135814,0.722797,-4.357468,-4.720188,-9.530094,-7.089202,-8.335620,1.837098,5.910526,-0.013201,3.693082,-5.242429,8.036242,4.129855,5.006989,-4.870343,3.188980,1.794141,-4.105744,-4.268792,6.517646,7.421493,-7.173461,-6.421532,-4.733907,1.742320,5.253865,3.768721,1.018305,-7.658573,1.525105,2.016630,-3.619567,-0.718505,-5.362120,1.225068,7.991316,-0.856484,4.733908,0.359575,6.376975,-4.523539,-3.070524,6.517359,-0.424060,8.427606,8.022677,-3.919915,9.577077,-3.241929,1.810359,-3.908103,1.950342,-3.426013,1.474949,-3.648804,7.877543,1.320414,-6.367621,2.953525,-7.525919,-2.952562,2.906750,0.990542,5.660559,-9.681542,6.777911,3.902451,6.311444,-4.037291,2.549230,-8.722434,2.049885,4.378485,-2.510812,-6.925296,5.793073,-7.859901,7.429518,6.425343,-2.657659,0.675978,-3.655683,-5.006874,-3.551218,-8.078103,1.510723,-1.015498,1.882025,-1.615774,-8.757664,-2.371541,8.537535,-0.009884,4.987922,3.530456,-8.193700,9.246364,7.387439,-5.236811,-4.231942,7.727636,7.813032,-5.674390,8.967651,7.696776,7.183600,5.172779,-6.402094,0.763842,-7.152250,2.977295,3.953448,4.963040,-0.680802,7.359034,3.852062,-1.889535,-5.204474,0.279056,6.043897,-9.784952,-1.358674,7.722895,0.803779,-0.677291,1.456516,-9.321042,7.144752,0.835592,-4.867199,-1.925717], dtype = "float64")#candidate|12902|(396,)|const|float64
call_12896 = relay.TupleGetItem(func_10749_call(relay.reshape(var_12897.astype('float64'), [2, 4, 13]), relay.reshape(var_12898.astype('int8'), [1232,]), relay.reshape(const_12899.astype('float32'), [21,]), relay.reshape(var_12900.astype('int8'), [336, 2]), relay.reshape(const_12901.astype('int16'), [1092,]), relay.reshape(const_12902.astype('float64'), [198, 2]), relay.reshape(const_12899.astype('float32'), [21,]), ), 8)
call_12903 = relay.TupleGetItem(func_10758_call(relay.reshape(var_12897.astype('float64'), [2, 4, 13]), relay.reshape(var_12898.astype('int8'), [1232,]), relay.reshape(const_12899.astype('float32'), [21,]), relay.reshape(var_12900.astype('int8'), [336, 2]), relay.reshape(const_12901.astype('int16'), [1092,]), relay.reshape(const_12902.astype('float64'), [198, 2]), relay.reshape(const_12899.astype('float32'), [21,]), ), 8)
output = relay.Tuple([call_12866,call_12896,var_12897,var_12898,const_12899,var_12900,const_12901,const_12902,])
output2 = relay.Tuple([call_12867,call_12903,var_12897,var_12898,const_12899,var_12900,const_12901,const_12902,])
func_12912 = relay.Function([var_12897,var_12898,var_12900,], output)
mod['func_12912'] = func_12912
mod = relay.transform.InferType()(mod)
mutated_mod['func_12912'] = func_12912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12912_call = mutated_mod.get_global_var('func_12912')
var_12914 = relay.var("var_12914", dtype = "float64", shape = (104,))#candidate|12914|(104,)|var|float64
var_12915 = relay.var("var_12915", dtype = "int8", shape = (1232,))#candidate|12915|(1232,)|var|int8
var_12916 = relay.var("var_12916", dtype = "int8", shape = (672,))#candidate|12916|(672,)|var|int8
call_12913 = func_12912_call(var_12914,var_12915,var_12916,)
output = call_12913
func_12917 = relay.Function([var_12914,var_12915,var_12916,], output)
mutated_mod['func_12917'] = func_12917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9867_call = mod.get_global_var('func_9867')
func_9868_call = mutated_mod.get_global_var('func_9868')
call_12934 = func_9867_call()
call_12935 = func_9867_call()
func_7755_call = mod.get_global_var('func_7755')
func_7758_call = mutated_mod.get_global_var('func_7758')
call_12964 = relay.TupleGetItem(func_7755_call(relay.reshape(call_12934.astype('uint32'), [3, 11, 6]), relay.reshape(call_12934.astype('uint32'), [3, 11, 6]), ), 0)
call_12965 = relay.TupleGetItem(func_7758_call(relay.reshape(call_12934.astype('uint32'), [3, 11, 6]), relay.reshape(call_12934.astype('uint32'), [3, 11, 6]), ), 0)
output = relay.Tuple([call_12934,call_12964,])
output2 = relay.Tuple([call_12935,call_12965,])
func_12973 = relay.Function([], output)
mod['func_12973'] = func_12973
mod = relay.transform.InferType()(mod)
mutated_mod['func_12973'] = func_12973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12973_call = mutated_mod.get_global_var('func_12973')
call_12974 = func_12973_call()
output = call_12974
func_12975 = relay.Function([], output)
mutated_mod['func_12975'] = func_12975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10777_call = mod.get_global_var('func_10777')
func_10778_call = mutated_mod.get_global_var('func_10778')
call_13014 = func_10777_call()
call_13015 = func_10777_call()
func_9803_call = mod.get_global_var('func_9803')
func_9804_call = mutated_mod.get_global_var('func_9804')
call_13032 = func_9803_call()
call_13033 = func_9803_call()
func_10047_call = mod.get_global_var('func_10047')
func_10052_call = mutated_mod.get_global_var('func_10052')
var_13044 = relay.var("var_13044", dtype = "uint32", shape = (22,))#candidate|13044|(22,)|var|uint32
const_13045 = relay.const([-9,-4,2,7,-8,7,-5,10,-7,-9,-7,-6,7,10,-5,7,-8,1,6,-1,-2,-2,5,8,-2,-4,3,-5,1,10,-8,10,-8,8,-10,10,7,8,6,3,-4,9,6,-8,1,3,-4,5,-7,-6,4,-10,10,3,3,-3,5,-4,6,-10,-9,8,7,5,-8,2,9,-3,9,4,-5,10,-9,-3,-8,3,5,3,5,-7,-1,5,10,-10,5,10,10,-10,-4,-5,-5,2,-10,-5,2,-7,2,6,1,8,1,8,7,2,10,-4,6,6,-10,8,-4,7,-1,5,-1,8,10,-3,3,-8,3,-9,-7,-4,7,-7,8,-6,-6,-1,-5,-9,4,-1,9,1,1,-2,8,-5,7,7,-7,6,-5,10,-5,-6,-5,9,6,8,3,-8,-6,-7,5,10,-8,-5,5,-4,6,-1,-5,-5,-2,10,4,4,9,5,-5,5,-3,-8,-6,9,10,-3,2,-10,4,8,8,-8,-5,-2,-9,-6,5,-3,6,-5,3,5,-7,-10,5,-8,1,-1,-8,9,-9,-2,-10,-7,8,-5,9,8,5,6,-9,-2,-10,-9,5,8,4,8,8,2,-5,-8,-9,10,-8,3,-3,-8,-7,3,-4,3,4,1,7,7,2,-8,-4,4,-7,9,-9,2,1,-7,-6,-2,4,-2,9,-6,-5,-2,3,2,3,9,-8,10,-4,-4,-7,-3,-2,-5,2,-1,-4,-9,9,8,-3,-3,-5,2,-10,-4,-5,-2,-9,7,6,10,1,8,1,1,10,6,-7,-9,-5,7,-9,6,-4,9,2,-2,9,2,-6,3,-7,5,5,4,-8,-7,-8,3,7,3,-1,4,-7,-9,9,10,1,3,-1,6,-6,4,-8,-9,1,8,-7,4,-9,8,5,6,-3,-3,-6,2,2,7,5,8,-7,7,-7,9], dtype = "uint32")#candidate|13045|(352,)|const|uint32
var_13046 = relay.var("var_13046", dtype = "float32", shape = (180,))#candidate|13046|(180,)|var|float32
call_13043 = relay.TupleGetItem(func_10047_call(relay.reshape(var_13044.astype('uint32'), [22,]), relay.reshape(const_13045.astype('uint32'), [352,]), relay.reshape(call_13032.astype('float64'), [9, 11, 2]), relay.reshape(var_13046.astype('float32'), [180,]), ), 2)
call_13047 = relay.TupleGetItem(func_10052_call(relay.reshape(var_13044.astype('uint32'), [22,]), relay.reshape(const_13045.astype('uint32'), [352,]), relay.reshape(call_13032.astype('float64'), [9, 11, 2]), relay.reshape(var_13046.astype('float32'), [180,]), ), 2)
output = relay.Tuple([call_13014,call_13032,call_13043,var_13044,const_13045,var_13046,])
output2 = relay.Tuple([call_13015,call_13033,call_13047,var_13044,const_13045,var_13046,])
func_13054 = relay.Function([var_13044,var_13046,], output)
mod['func_13054'] = func_13054
mod = relay.transform.InferType()(mod)
var_13055 = relay.var("var_13055", dtype = "uint32", shape = (22,))#candidate|13055|(22,)|var|uint32
var_13056 = relay.var("var_13056", dtype = "float32", shape = (180,))#candidate|13056|(180,)|var|float32
output = func_13054(var_13055,var_13056,)
func_13057 = relay.Function([var_13055,var_13056,], output)
mutated_mod['func_13057'] = func_13057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9913_call = mod.get_global_var('func_9913')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_13064 = func_9913_call()
call_13065 = func_9913_call()
output = call_13064
output2 = call_13065
func_13078 = relay.Function([], output)
mod['func_13078'] = func_13078
mod = relay.transform.InferType()(mod)
mutated_mod['func_13078'] = func_13078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13078_call = mutated_mod.get_global_var('func_13078')
call_13079 = func_13078_call()
output = call_13079
func_13080 = relay.Function([], output)
mutated_mod['func_13080'] = func_13080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10436_call = mod.get_global_var('func_10436')
func_10438_call = mutated_mod.get_global_var('func_10438')
call_13081 = relay.TupleGetItem(func_10436_call(), 0)
call_13082 = relay.TupleGetItem(func_10438_call(), 0)
output = relay.Tuple([call_13081,])
output2 = relay.Tuple([call_13082,])
func_13085 = relay.Function([], output)
mod['func_13085'] = func_13085
mod = relay.transform.InferType()(mod)
output = func_13085()
func_13086 = relay.Function([], output)
mutated_mod['func_13086'] = func_13086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9803_call = mod.get_global_var('func_9803')
func_9804_call = mutated_mod.get_global_var('func_9804')
call_13153 = func_9803_call()
call_13154 = func_9803_call()
func_11542_call = mod.get_global_var('func_11542')
func_11544_call = mutated_mod.get_global_var('func_11544')
call_13188 = relay.TupleGetItem(func_11542_call(), 0)
call_13189 = relay.TupleGetItem(func_11544_call(), 0)
func_8898_call = mod.get_global_var('func_8898')
func_8901_call = mutated_mod.get_global_var('func_8901')
const_13192 = relay.const([-4.855480,-8.120430,4.433283,3.065662,-4.397557,3.946387,6.446775,0.907664,2.816043,-0.643809,7.281651,-4.662534,3.482468,1.119258,0.185248,-2.298514,-8.076807,7.204495,9.136215,7.976453,2.284471,9.298739,-5.183473,1.266408,-6.792784,-0.197292,-7.334649,-1.408639,-8.876581,-1.739298,-0.252765,5.883360,4.869820,-9.349592,2.705913,-8.296090,6.100065,7.491753,8.052666,8.956166,8.188831,3.133443,-6.135089,6.615343,4.679194,-9.749680,8.300163,9.946224,-9.723686,6.352720,4.107831,-1.806353,8.065671,-0.641944,2.318012,-7.487037,-3.998255,-8.377117,2.007077,9.926953,7.233667,-9.633134,9.001685,4.270306,-0.465599,2.319852,8.241351,-5.142383,6.608178,2.404504,-9.497070,2.266629,1.284252,9.269236,-3.117856,-3.302267,-3.896394,-5.910005,-3.614533,6.544202,-0.907064,-5.700519,3.522372,-1.585163,7.451919,8.950522,6.542665,-0.827131,-3.142460,-9.624420,-1.061345,-9.774202,4.669795,-8.731403,-5.179826,-1.742258,-7.464008,-1.724736,7.915504,9.642721,-0.324563,-7.144617,8.587949,8.032746,-9.682311,-7.538339,-8.259609,9.900966,6.886802,9.071095,-1.763002,-5.612999,-1.741792,-5.481217,3.573832,-0.217722,-7.615761,-1.846997,-5.238839,1.037443,3.209965,8.224792,-7.735637,4.487287,1.765952,7.434143,9.012512,-5.031270,8.093205,6.060962,-8.872629,-6.544856], dtype = "float32")#candidate|13192|(132,)|const|float32
call_13191 = relay.TupleGetItem(func_8898_call(relay.reshape(const_13192.astype('float32'), [2, 11, 6])), 0)
call_13193 = relay.TupleGetItem(func_8901_call(relay.reshape(const_13192.astype('float32'), [2, 11, 6])), 0)
func_10797_call = mod.get_global_var('func_10797')
func_10799_call = mutated_mod.get_global_var('func_10799')
call_13218 = relay.TupleGetItem(func_10797_call(), 1)
call_13219 = relay.TupleGetItem(func_10799_call(), 1)
func_11197_call = mod.get_global_var('func_11197')
func_11198_call = mutated_mod.get_global_var('func_11198')
call_13221 = func_11197_call()
call_13222 = func_11197_call()
output = relay.Tuple([call_13153,call_13188,call_13191,const_13192,call_13218,call_13221,])
output2 = relay.Tuple([call_13154,call_13189,call_13193,const_13192,call_13219,call_13222,])
func_13225 = relay.Function([], output)
mod['func_13225'] = func_13225
mod = relay.transform.InferType()(mod)
mutated_mod['func_13225'] = func_13225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13225_call = mutated_mod.get_global_var('func_13225')
call_13226 = func_13225_call()
output = call_13226
func_13227 = relay.Function([], output)
mutated_mod['func_13227'] = func_13227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10563_call = mod.get_global_var('func_10563')
func_10565_call = mutated_mod.get_global_var('func_10565')
call_13299 = relay.TupleGetItem(func_10563_call(), 1)
call_13300 = relay.TupleGetItem(func_10565_call(), 1)
func_9913_call = mod.get_global_var('func_9913')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_13324 = func_9913_call()
call_13325 = func_9913_call()
output = relay.Tuple([call_13299,call_13324,])
output2 = relay.Tuple([call_13300,call_13325,])
func_13326 = relay.Function([], output)
mod['func_13326'] = func_13326
mod = relay.transform.InferType()(mod)
mutated_mod['func_13326'] = func_13326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13326_call = mutated_mod.get_global_var('func_13326')
call_13327 = func_13326_call()
output = call_13327
func_13328 = relay.Function([], output)
mutated_mod['func_13328'] = func_13328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11197_call = mod.get_global_var('func_11197')
func_11198_call = mutated_mod.get_global_var('func_11198')
call_13349 = func_11197_call()
call_13350 = func_11197_call()
output = call_13349
output2 = call_13350
func_13352 = relay.Function([], output)
mod['func_13352'] = func_13352
mod = relay.transform.InferType()(mod)
mutated_mod['func_13352'] = func_13352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13352_call = mutated_mod.get_global_var('func_13352')
call_13353 = func_13352_call()
output = call_13353
func_13354 = relay.Function([], output)
mutated_mod['func_13354'] = func_13354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13225_call = mod.get_global_var('func_13225')
func_13227_call = mutated_mod.get_global_var('func_13227')
call_13358 = relay.TupleGetItem(func_13225_call(), 2)
call_13359 = relay.TupleGetItem(func_13227_call(), 2)
output = call_13358
output2 = call_13359
func_13381 = relay.Function([], output)
mod['func_13381'] = func_13381
mod = relay.transform.InferType()(mod)
output = func_13381()
func_13382 = relay.Function([], output)
mutated_mod['func_13382'] = func_13382
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13395 = relay.var("var_13395", dtype = "int8", shape = ())#candidate|13395|()|var|int8
var_13396 = relay.var("var_13396", dtype = "int8", shape = (2, 7, 14))#candidate|13396|(2, 7, 14)|var|int8
bop_13397 = relay.greater(var_13395.astype('bool'), var_13396.astype('bool')) # shape=(2, 7, 14)
output = relay.Tuple([bop_13397,])
output2 = relay.Tuple([bop_13397,])
func_13418 = relay.Function([var_13395,var_13396,], output)
mod['func_13418'] = func_13418
mod = relay.transform.InferType()(mod)
mutated_mod['func_13418'] = func_13418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13418_call = mutated_mod.get_global_var('func_13418')
var_13420 = relay.var("var_13420", dtype = "int8", shape = ())#candidate|13420|()|var|int8
var_13421 = relay.var("var_13421", dtype = "int8", shape = (2, 7, 14))#candidate|13421|(2, 7, 14)|var|int8
call_13419 = func_13418_call(var_13420,var_13421,)
output = call_13419
func_13422 = relay.Function([var_13420,var_13421,], output)
mutated_mod['func_13422'] = func_13422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13430 = relay.var("var_13430", dtype = "float64", shape = ())#candidate|13430|()|var|float64
var_13431 = relay.var("var_13431", dtype = "float64", shape = (4, 2, 1))#candidate|13431|(4, 2, 1)|var|float64
bop_13432 = relay.divide(var_13430.astype('float64'), var_13431.astype('float64')) # shape=(4, 2, 1)
output = bop_13432
output2 = bop_13432
func_13437 = relay.Function([var_13430,var_13431,], output)
mod['func_13437'] = func_13437
mod = relay.transform.InferType()(mod)
var_13438 = relay.var("var_13438", dtype = "float64", shape = ())#candidate|13438|()|var|float64
var_13439 = relay.var("var_13439", dtype = "float64", shape = (4, 2, 1))#candidate|13439|(4, 2, 1)|var|float64
output = func_13437(var_13438,var_13439,)
func_13440 = relay.Function([var_13438,var_13439,], output)
mutated_mod['func_13440'] = func_13440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9867_call = mod.get_global_var('func_9867')
func_9868_call = mutated_mod.get_global_var('func_9868')
call_13464 = func_9867_call()
call_13465 = func_9867_call()
output = relay.Tuple([call_13464,])
output2 = relay.Tuple([call_13465,])
func_13466 = relay.Function([], output)
mod['func_13466'] = func_13466
mod = relay.transform.InferType()(mod)
mutated_mod['func_13466'] = func_13466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13466_call = mutated_mod.get_global_var('func_13466')
call_13467 = func_13466_call()
output = call_13467
func_13468 = relay.Function([], output)
mutated_mod['func_13468'] = func_13468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10380_call = mod.get_global_var('func_10380')
func_10382_call = mutated_mod.get_global_var('func_10382')
call_13558 = relay.TupleGetItem(func_10380_call(), 1)
call_13559 = relay.TupleGetItem(func_10382_call(), 1)
uop_13561 = relay.log(call_13558.astype('float64')) # shape=(5, 16, 1)
uop_13563 = relay.log(call_13559.astype('float64')) # shape=(5, 16, 1)
func_8635_call = mod.get_global_var('func_8635')
func_8639_call = mutated_mod.get_global_var('func_8639')
var_13573 = relay.var("var_13573", dtype = "float64", shape = (56,))#candidate|13573|(56,)|var|float64
var_13574 = relay.var("var_13574", dtype = "float64", shape = (728,))#candidate|13574|(728,)|var|float64
call_13572 = relay.TupleGetItem(func_8635_call(relay.reshape(var_13573.astype('float64'), [1, 4, 14]), relay.reshape(var_13574.astype('float64'), [13, 4, 14]), ), 0)
call_13575 = relay.TupleGetItem(func_8639_call(relay.reshape(var_13573.astype('float64'), [1, 4, 14]), relay.reshape(var_13574.astype('float64'), [13, 4, 14]), ), 0)
bop_13580 = relay.bitwise_and(var_13574.astype('uint32'), uop_13561.astype('uint32')) # shape=(5, 16, 728)
bop_13583 = relay.bitwise_and(var_13574.astype('uint32'), uop_13563.astype('uint32')) # shape=(5, 16, 728)
func_12473_call = mod.get_global_var('func_12473')
func_12474_call = mutated_mod.get_global_var('func_12474')
call_13606 = func_12473_call()
call_13607 = func_12473_call()
uop_13610 = relay.exp(uop_13561.astype('float64')) # shape=(5, 16, 1)
uop_13612 = relay.exp(uop_13563.astype('float64')) # shape=(5, 16, 1)
output = relay.Tuple([call_13572,var_13573,bop_13580,call_13606,uop_13610,])
output2 = relay.Tuple([call_13575,var_13573,bop_13583,call_13607,uop_13612,])
func_13613 = relay.Function([var_13573,var_13574,], output)
mod['func_13613'] = func_13613
mod = relay.transform.InferType()(mod)
mutated_mod['func_13613'] = func_13613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13613_call = mutated_mod.get_global_var('func_13613')
var_13615 = relay.var("var_13615", dtype = "float64", shape = (56,))#candidate|13615|(56,)|var|float64
var_13616 = relay.var("var_13616", dtype = "float64", shape = (728,))#candidate|13616|(728,)|var|float64
call_13614 = func_13613_call(var_13615,var_13616,)
output = call_13614
func_13617 = relay.Function([var_13615,var_13616,], output)
mutated_mod['func_13617'] = func_13617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9913_call = mod.get_global_var('func_9913')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_13630 = func_9913_call()
call_13631 = func_9913_call()
func_13078_call = mod.get_global_var('func_13078')
func_13080_call = mutated_mod.get_global_var('func_13080')
call_13633 = func_13078_call()
call_13634 = func_13078_call()
func_10240_call = mod.get_global_var('func_10240')
func_10245_call = mutated_mod.get_global_var('func_10245')
const_13639 = relay.const([[-1,-10,1,4,-4,-5,-7,1,1,-9,-3,7,9,-10,9,10,2,10,-1,-7,9,10,-10,-8,-7,2,-5,7,6,-8,1,5,-9,-9,7,-5,-7,-4,8,-10,1,4,-10,2,10,2,-8,-5,2,-7,-9,9,7,-4,7,1,-5,-2,8,2,-3,-1,3,-10,-9,6,-9,-5,8,5,-5,-3,-3,-7,10,1,6,-6,8,-6,3,7,6,-2,3,-2,-6,-1,2,2,-9,-7,4,6,9,1,3,-8,9,-7,-9,-3,6,4,3,-9,-10,9,-2,-8,-6,-5,-8,-10,-2,1,8,4,9,-1,5,-5,8,9,-9,-1,5,-4,8,9,-2,9,6,3,3,-8,-8,1,6,-8,-6,-10,4,3,-9,-1,-7,-3,4,-8,4,3,-10,-9,-4,-9,-5,-9,-2,-2,9,4,-4,8,-4,4,4,-9,-2,9,5,-4,9,-3,10,-4,9,-2,6,2,8,-2,-1,-5,1,-9,-5,9,10,5,-7,8,8,10,2,7,-6,-2,-10,-4,-2,7,7,9,10,-9,4,5,-9,-7,-7,-1,-3,-3,-10,6,-9,-9,-1,-6,-4,-7,2,2,7,4,-6,-10,-8,4,2,-1,-4,-9,-3,-7,-4,7,6,-9,9,-10,8,5,-7,-5,-10,-9,-1,3,-7,-10,5,-7,5,8,9,10,-10,-5,-4,3,9,10,2,3,-2,-10,-8,-9,-3,8,7,-9,-3,-3,5,2,-9,5,4,3,-8,-4,-10,-1,2,-4,9,5,8,-10,-3,6,-3,-5,6,4,1,-2,10,5,-3,10,-2,4,10,-2,4,-7,8,5,-10,-10,4,-3,5,8,-8,-10,3,10,-7,8,-2,-10,7,-8,4,-7,2,-5,-9,-5,-3,-7,8,-10,2,6,-1,6,-4,4,-2,8,-2,-1,8,-7,-10,7,-2,2,-3,7,7,-3,-8,8,-7,-4,-1,-1,10,2,-10,7,-4,-5,-7,2,-8,4,-3,7,-9,10,-5,-1,-6,-4,-1,-10,2,-3,-2,5,-1,7,1,5,-3,2,-5,5,-7,2,2,3,9,-4,-3,10,-6,-8,-1,7,-8,-3,3,6,7,-9,10,-4,10,-10,5,-6,7,7,9,-1,6,-1,2,-10,7,-9,-3,-6,8,-5,5,5,-7,1,8,-6,8,5,7,10,-5,3,-1,-1,4,-2,-7,-3,9,2,-8,4,-8,-5,-4,-10,-3,9,1,-4,5,-6,-5,9,-4,3,-1,-5,4,5,6,-9,8,4,-5,6,6,-2,-4,-3,4,-8,3,-4,-7,6,-4,-4,-2,-4,9,-7,-4,4,-2,6,-4,-2,10,-5,5,-10,-8,-3,-5,5,7,-8,5,-10,-2,-2,1,-5,-10,-7,4,5,-2,-2,5,2,1,4,-6,2,1,4,10,2,-2,6,-6,7,1,-6,7,8,-2,6,9,5,4,1,-1,-5,-9,8,-5,-5,6,-1,-1,-5,-3,10,10,1,7,9,4,10,8,1,6,-8,-7,-7,1,-3,4,-8,1,8,3,5,-5,1,2,7,-5,-10,7,1,1,2,-7,10,2,-5,9,-10,-4,10,-2,6,3,2,-5,-7,8,4,2,5,-1,-6,-2,-5,-9,4,1,1,-8,-5,7,-1,-5,-2,8,10,-10,10,-7,8,-1,9,2,7,2,-3,7,-6,7,-9,7,-4,10,-9,-2,-2,9,4,-1,9,6,4,6,-6,-10,-9,6,4,-1,2,-7,-6,-6,-8,-3,10,-9,-3,-4,9,5,1,-1,-9,7,6,6,10,2,8,-7,7,1,-2,-10,-1,8,8,6,-4,9,-6,-1,8,6,-1,2,-8,9,-10,-10,-3,2,8,9,2,1,4,6,-5,7,5,5,4,5,2,6,4,9,7,-5,5,-7,-7,-10,-7,-10,6,-8,-1,6,-8,1,10,5,5,8,-5,-8,10,-7,-4,-7,-6,3,-8,3,9,8,-3,9,-5,9,-2,4,-4,6,2,10,-10,5,10,-4,1,10,-6,-3,6,1,-10,7,-8,4,8,-5,-7,-4,8,7,1,3,-8,6,-2,-1,4,8,3,-9,8,-9,6,-3,3,-2,-1,10,3,5,-5,-10,8,-10,-2,2,-4,-8,-6,3,-4,4,1,-7,1,2,10,-6,9,-1,-4,-4,6,9,2,-1,-6,-2,-8,1,-2,-9,4,3,3,6,-7,-8,-10,-2,8,1,-10,-10,1,-2,-4,-7,8,4,2,-3,-10,-1,-9,-5,8,-10,10,-9,-1,5,-1,6,10,3,9,4,-8,-10,-10,3,-2,8,-2,2,-5,-9,-9,6,-4,-5,4,2,4,8,-8,4,5,-1,-9,8,-4,-10,1,-4,6,8,9,-1,-4,7,-3,2,-2,-3,-10,7,-10,-6,-5,-6,10,-9,5,-1,3,9,-10,-4,-7,-5,9,-2,-9,10,9,-2,-1,9,5,3,10,3,-4,-4,3,-10,1,3,-10,-3,8,-9,8,-5,8,2,9,-7,2,7,-1,10,-9,-2,-6,10,-10,-5,7,-3,7,2,-1,-2,-10,-10,6,-3,-5,-5,-9,6,-6,-8,-10,-7,-6,-4,7,10,3,-10,-2,-5,9,-7,-7,-8,6,5,8,-5,-10,-1,-5,8,-3,-6,-3,-9,2,-3,-2,5,10,8,-3,-4,1,2,8,-5,-8,5,3,8,-1,8,5,-3,-3,-4,-3,-9,-6,2,1,-5,10,2,4,-9,-2,-2,8,9,6,8,-2,8,8,-3,7,5,8,1,9,10,-8,-6,8,10,9,-5,-4,10,-3,8,1,-9,3,4,1,1,6,8,5,10,-5,-6,8,-9,-10,-4,2,-1,-5,-7,7,-10,7,7,-7,7,-1,-10,-10,-3,8,1,-1,5,7]], dtype = "int16")#candidate|13639|(1, 1092)|const|int16
var_13640 = relay.var("var_13640", dtype = "int8", shape = (1232,))#candidate|13640|(1232,)|var|int8
const_13641 = relay.const([4.521330,-0.182823,7.103162,7.131058,-3.947168,0.527272,-4.093909,6.782492,9.967107,-8.374601,-2.359139,9.858827,-0.742974,-0.577181,-0.545012,-0.027081,1.082903,5.584299,-5.577444,2.957973,-7.203028], dtype = "float32")#candidate|13641|(21,)|const|float32
call_13638 = relay.TupleGetItem(func_10240_call(relay.reshape(const_13639.astype('int16'), [1092,]), relay.reshape(var_13640.astype('int8'), [1232,]), relay.reshape(const_13641.astype('float32'), [21,]), ), 1)
call_13642 = relay.TupleGetItem(func_10245_call(relay.reshape(const_13639.astype('int16'), [1092,]), relay.reshape(var_13640.astype('int8'), [1232,]), relay.reshape(const_13641.astype('float32'), [21,]), ), 1)
var_13653 = relay.var("var_13653", dtype = "int16", shape = (15, 1092))#candidate|13653|(15, 1092)|var|int16
bop_13654 = relay.left_shift(const_13639.astype('uint16'), var_13653.astype('uint16')) # shape=(15, 1092)
output = relay.Tuple([call_13630,call_13633,call_13638,var_13640,const_13641,bop_13654,])
output2 = relay.Tuple([call_13631,call_13634,call_13642,var_13640,const_13641,bop_13654,])
func_13657 = relay.Function([var_13640,var_13653,], output)
mod['func_13657'] = func_13657
mod = relay.transform.InferType()(mod)
mutated_mod['func_13657'] = func_13657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13657_call = mutated_mod.get_global_var('func_13657')
var_13659 = relay.var("var_13659", dtype = "int8", shape = (1232,))#candidate|13659|(1232,)|var|int8
var_13660 = relay.var("var_13660", dtype = "int16", shape = (15, 1092))#candidate|13660|(15, 1092)|var|int16
call_13658 = func_13657_call(var_13659,var_13660,)
output = call_13658
func_13661 = relay.Function([var_13659,var_13660,], output)
mutated_mod['func_13661'] = func_13661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12437_call = mod.get_global_var('func_12437')
func_12438_call = mutated_mod.get_global_var('func_12438')
call_13699 = relay.TupleGetItem(func_12437_call(), 0)
call_13700 = relay.TupleGetItem(func_12438_call(), 0)
func_11177_call = mod.get_global_var('func_11177')
func_11179_call = mutated_mod.get_global_var('func_11179')
var_13706 = relay.var("var_13706", dtype = "uint16", shape = (1200,))#candidate|13706|(1200,)|var|uint16
call_13705 = relay.TupleGetItem(func_11177_call(relay.reshape(var_13706.astype('uint16'), [1200,])), 1)
call_13707 = relay.TupleGetItem(func_11179_call(relay.reshape(var_13706.astype('uint16'), [1200,])), 1)
func_7602_call = mod.get_global_var('func_7602')
func_7606_call = mutated_mod.get_global_var('func_7606')
var_13722 = relay.var("var_13722", dtype = "int8", shape = ())#candidate|13722|()|var|int8
var_13723 = relay.var("var_13723", dtype = "int8", shape = (78,))#candidate|13723|(78,)|var|int8
call_13721 = relay.TupleGetItem(func_7602_call(relay.reshape(var_13722.astype('int8'), []), relay.reshape(var_13723.astype('int8'), [6, 13, 1]), ), 1)
call_13724 = relay.TupleGetItem(func_7606_call(relay.reshape(var_13722.astype('int8'), []), relay.reshape(var_13723.astype('int8'), [6, 13, 1]), ), 1)
output = relay.Tuple([call_13699,call_13705,var_13706,call_13721,var_13722,var_13723,])
output2 = relay.Tuple([call_13700,call_13707,var_13706,call_13724,var_13722,var_13723,])
func_13743 = relay.Function([var_13706,var_13722,var_13723,], output)
mod['func_13743'] = func_13743
mod = relay.transform.InferType()(mod)
mutated_mod['func_13743'] = func_13743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13743_call = mutated_mod.get_global_var('func_13743')
var_13745 = relay.var("var_13745", dtype = "uint16", shape = (1200,))#candidate|13745|(1200,)|var|uint16
var_13746 = relay.var("var_13746", dtype = "int8", shape = ())#candidate|13746|()|var|int8
var_13747 = relay.var("var_13747", dtype = "int8", shape = (78,))#candidate|13747|(78,)|var|int8
call_13744 = func_13743_call(var_13745,var_13746,var_13747,)
output = call_13744
func_13748 = relay.Function([var_13745,var_13746,var_13747,], output)
mutated_mod['func_13748'] = func_13748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12973_call = mod.get_global_var('func_12973')
func_12975_call = mutated_mod.get_global_var('func_12975')
call_13760 = relay.TupleGetItem(func_12973_call(), 0)
call_13761 = relay.TupleGetItem(func_12975_call(), 0)
output = relay.Tuple([call_13760,])
output2 = relay.Tuple([call_13761,])
func_13770 = relay.Function([], output)
mod['func_13770'] = func_13770
mod = relay.transform.InferType()(mod)
output = func_13770()
func_13771 = relay.Function([], output)
mutated_mod['func_13771'] = func_13771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11183_call = mod.get_global_var('func_11183')
func_11184_call = mutated_mod.get_global_var('func_11184')
call_13807 = func_11183_call()
call_13808 = func_11183_call()
func_7602_call = mod.get_global_var('func_7602')
func_7606_call = mutated_mod.get_global_var('func_7606')
var_13810 = relay.var("var_13810", dtype = "int8", shape = ())#candidate|13810|()|var|int8
var_13811 = relay.var("var_13811", dtype = "int8", shape = (78,))#candidate|13811|(78,)|var|int8
call_13809 = relay.TupleGetItem(func_7602_call(relay.reshape(var_13810.astype('int8'), []), relay.reshape(var_13811.astype('int8'), [6, 13, 1]), ), 1)
call_13812 = relay.TupleGetItem(func_7606_call(relay.reshape(var_13810.astype('int8'), []), relay.reshape(var_13811.astype('int8'), [6, 13, 1]), ), 1)
func_12045_call = mod.get_global_var('func_12045')
func_12047_call = mutated_mod.get_global_var('func_12047')
call_13813 = func_12045_call()
call_13814 = func_12045_call()
func_13466_call = mod.get_global_var('func_13466')
func_13468_call = mutated_mod.get_global_var('func_13468')
call_13817 = relay.TupleGetItem(func_13466_call(), 0)
call_13818 = relay.TupleGetItem(func_13468_call(), 0)
func_12473_call = mod.get_global_var('func_12473')
func_12474_call = mutated_mod.get_global_var('func_12474')
call_13819 = func_12473_call()
call_13820 = func_12473_call()
output = relay.Tuple([call_13807,call_13809,var_13810,var_13811,call_13813,call_13817,call_13819,])
output2 = relay.Tuple([call_13808,call_13812,var_13810,var_13811,call_13814,call_13818,call_13820,])
func_13821 = relay.Function([var_13810,var_13811,], output)
mod['func_13821'] = func_13821
mod = relay.transform.InferType()(mod)
mutated_mod['func_13821'] = func_13821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13821_call = mutated_mod.get_global_var('func_13821')
var_13823 = relay.var("var_13823", dtype = "int8", shape = ())#candidate|13823|()|var|int8
var_13824 = relay.var("var_13824", dtype = "int8", shape = (78,))#candidate|13824|(78,)|var|int8
call_13822 = func_13821_call(var_13823,var_13824,)
output = call_13822
func_13825 = relay.Function([var_13823,var_13824,], output)
mutated_mod['func_13825'] = func_13825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12376_call = mod.get_global_var('func_12376')
func_12377_call = mutated_mod.get_global_var('func_12377')
call_13827 = relay.TupleGetItem(func_12376_call(), 0)
call_13828 = relay.TupleGetItem(func_12377_call(), 0)
func_12107_call = mod.get_global_var('func_12107')
func_12111_call = mutated_mod.get_global_var('func_12111')
var_13841 = relay.var("var_13841", dtype = "uint16", shape = (1200,))#candidate|13841|(1200,)|var|uint16
var_13842 = relay.var("var_13842", dtype = "float32", shape = (7, 3))#candidate|13842|(7, 3)|var|float32
call_13840 = relay.TupleGetItem(func_12107_call(relay.reshape(var_13841.astype('uint16'), [1200,]), relay.reshape(var_13842.astype('float32'), [21,]), ), 0)
call_13843 = relay.TupleGetItem(func_12111_call(relay.reshape(var_13841.astype('uint16'), [1200,]), relay.reshape(var_13842.astype('float32'), [21,]), ), 0)
output = relay.Tuple([call_13827,call_13840,var_13841,var_13842,])
output2 = relay.Tuple([call_13828,call_13843,var_13841,var_13842,])
func_13868 = relay.Function([var_13841,var_13842,], output)
mod['func_13868'] = func_13868
mod = relay.transform.InferType()(mod)
var_13869 = relay.var("var_13869", dtype = "uint16", shape = (1200,))#candidate|13869|(1200,)|var|uint16
var_13870 = relay.var("var_13870", dtype = "float32", shape = (7, 3))#candidate|13870|(7, 3)|var|float32
output = func_13868(var_13869,var_13870,)
func_13871 = relay.Function([var_13869,var_13870,], output)
mutated_mod['func_13871'] = func_13871
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13938 = relay.const([[[-1,3,-8,-3,-8,2,-7,-8,4,2,-9,6,4,8,-3],[7,-10,5,3,-1,-10,-5,-5,1,-2,-1,-5,10,-3,7],[1,-7,4,-3,1,-8,-4,9,9,-1,3,1,2,-5,4],[-8,-6,8,-8,-9,-2,1,1,7,2,-10,-3,2,6,8],[-9,-7,-3,7,3,-2,2,-2,5,-4,1,-3,6,-10,5],[6,-6,1,7,3,-3,-6,-8,9,-10,-4,8,5,-5,8],[-3,-5,7,-10,-5,6,-8,4,-3,-3,7,-5,-7,1,-5],[3,5,-9,-6,-7,-10,1,-5,5,-10,-2,6,-4,-8,-4],[-3,-3,4,1,10,1,2,9,-8,5,1,-7,-7,-9,-7],[7,9,-8,-3,5,8,-3,-9,-8,-7,7,2,-6,-6,-3],[-7,2,-2,10,-1,9,10,-10,6,-6,-10,-2,6,3,-4],[-6,7,-6,-10,4,-9,1,-5,-8,6,6,4,10,8,3]]], dtype = "uint8")#candidate|13938|(1, 12, 15)|const|uint8
var_13939 = relay.var("var_13939", dtype = "uint8", shape = (10, 12, 15))#candidate|13939|(10, 12, 15)|var|uint8
bop_13940 = relay.bitwise_or(const_13938.astype('uint8'), var_13939.astype('uint8')) # shape=(10, 12, 15)
output = bop_13940
output2 = bop_13940
func_13943 = relay.Function([var_13939,], output)
mod['func_13943'] = func_13943
mod = relay.transform.InferType()(mod)
var_13944 = relay.var("var_13944", dtype = "uint8", shape = (10, 12, 15))#candidate|13944|(10, 12, 15)|var|uint8
output = func_13943(var_13944)
func_13945 = relay.Function([var_13944], output)
mutated_mod['func_13945'] = func_13945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12186_call = mod.get_global_var('func_12186')
func_12188_call = mutated_mod.get_global_var('func_12188')
call_14032 = func_12186_call()
call_14033 = func_12186_call()
output = relay.Tuple([call_14032,])
output2 = relay.Tuple([call_14033,])
func_14046 = relay.Function([], output)
mod['func_14046'] = func_14046
mod = relay.transform.InferType()(mod)
output = func_14046()
func_14047 = relay.Function([], output)
mutated_mod['func_14047'] = func_14047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13352_call = mod.get_global_var('func_13352')
func_13354_call = mutated_mod.get_global_var('func_13354')
call_14072 = func_13352_call()
call_14073 = func_13352_call()
func_4734_call = mod.get_global_var('func_4734')
func_4737_call = mutated_mod.get_global_var('func_4737')
var_14076 = relay.var("var_14076", dtype = "int64", shape = (1960,))#candidate|14076|(1960,)|var|int64
call_14075 = func_4734_call(relay.reshape(var_14076.astype('int64'), [10, 14, 14]))
call_14077 = func_4734_call(relay.reshape(var_14076.astype('int64'), [10, 14, 14]))
func_8743_call = mod.get_global_var('func_8743')
func_8750_call = mutated_mod.get_global_var('func_8750')
const_14079 = relay.const([4.021377,3.337445,4.009177,-7.142821,-6.402248,4.165637,1.793531,-3.505504,-6.171574,-3.486094,6.171063,-9.538494,-7.200280,8.936724,2.425785,2.932090,-1.221002,9.007609,-6.097539,-1.109520,0.529836,-6.094569,-9.452794,6.053639,-2.063950,-2.077453,-1.645070,2.545240,7.273199,-7.507132,-6.418069,4.438650,6.059439,0.437488,-0.620503,-8.715066,2.863634,-9.953231,2.690040,-2.748134,4.935564,-1.073219,5.069173,-9.695524,-7.900670,-4.345399,-2.281165,0.041404,-7.037682,1.552657,-7.364485,-4.030475,-2.153859,-7.325263,8.852168,9.947265,0.215701,-4.011683,3.475644,2.596615,-1.742547,6.844359,9.575258,-4.568358,5.771058,-9.815305,8.153948,4.935784,2.840105,-2.009433,3.729942,7.358905,0.886231,1.233842,-3.928914,-0.658314,-3.683682,8.142475,6.567202,-1.813596,8.244270,-8.683870,8.268634,-7.533576,4.397804,9.626281,0.794388,7.077086,0.465486,9.091062,2.034616,-6.099910,9.194373,3.386013,2.854902,7.877258,-8.024208,0.810716,-1.778850,-2.074596,-4.008340,-5.723874,-7.801272,-7.499916,-2.794039,5.183172,-4.518956,-2.941503,7.147448,-1.906736,9.090383,3.289652,3.637601,6.093155,5.778919,-9.247723,-5.587389,1.431577,-6.864827,-2.051813,1.871457,7.766599,0.829365,-2.074305,5.162111,3.582026,-7.740420,5.408220,3.646749,9.293400,-4.246585,3.882134,-8.395624,-6.538870,-2.912030,-8.264140,-6.881702,1.622097,3.336041,9.948184,-7.881061,6.713647,2.643496,8.933236,6.363982,1.757682,-6.991227,-4.635039,8.348960,2.823506,9.346395,-3.134427,1.398453,2.004194,2.040968,-3.965300,4.908717,-8.323819,-7.548741,-6.454793,4.495321,1.857340,-7.459306,-4.233511,-7.587112,9.946144,2.946531,-8.865954,-2.399990,2.748887,-9.747992,2.135754,6.210334,-0.942517,2.643369,-0.417470,3.559165,-4.416939,0.456089,7.992689,3.912539,-6.831957,-5.283316,4.728663,-2.413142,-0.012789,-8.653691,9.100559,-2.801864,3.818628,-1.975338,-3.820139,-2.931624,8.100657,3.785170,7.943236,6.299873,-1.295132,-2.800317,-4.870560,-0.158783,8.454400,5.601079,6.902475,6.137268,6.240367,-3.643051,4.163493,7.548371,-2.149924,8.091520,2.538247,5.324947,7.380253,0.889585,9.206680,-3.129433,3.230273,5.777171,5.815679,1.078751,-7.782659,-5.923856,-9.363908,-3.577232,5.609440,5.685633,-0.404034,-7.010055,-1.233210,-9.876754,9.758025,1.452288,-9.305781,9.761851,8.420513,-1.638304,-3.162452,2.045712,-1.140046,-3.255731,5.027500,-5.631358,-6.889064,7.138764,0.011344,-6.530078,6.738984,9.074721,-7.302344,1.718518,2.539276,4.422145,7.467759,2.212803,-1.229814,1.188684,4.656023,-0.703806,-2.224837,-7.330558,7.655943,-9.306869,-2.318130,-5.706894,3.080398,-1.177934,5.982651,-5.502589,-3.842427,9.561515,9.581967,6.901543,-3.235463,0.807964,7.725609,-2.727403,-3.204893,1.794823,-9.233263,-3.762658,-5.006280,9.308154,-4.577990,-2.276452,5.757461,-1.784273,-2.062876,5.241221,2.863569,4.235159,-5.759497,7.822364,-0.853937,-6.883614,-9.606544,-4.462345,7.585140,-2.662635,-0.246888,2.790255,-6.242172,-6.530411,2.709372,-3.828526,-6.160015,3.211901,7.003515,-1.402958,-2.969184,3.253048,1.076755,0.326171,5.034003,-2.819260,-3.022025,7.498935,7.501653,6.481513,8.937024,6.332960,1.758939,-8.899983,0.561412,-2.360241,4.770833,-4.369171,-5.388651,-7.303645,-5.557291,3.330448,-3.215942,4.119633,-9.978387,-3.216946,-6.680643,-5.509135,-4.507258,7.290307,1.252056,7.494776,1.147490,4.232569,4.081072,0.632384,-6.859475,-7.923170,4.185953,7.892271,-5.970945,8.133962,2.512953,-9.056751,-1.613705,-6.906403,-4.648681,9.609490,0.255955,8.835315,-6.981529,-4.709574,9.893245,6.030391,0.619312,-4.711851,-7.865558,-7.612634,5.597698,2.638380,-0.230731,9.702192,-6.140178,-5.973759,2.703849,-6.267865,-7.436970,7.443547,-0.943538,-2.861674,6.320054,8.884880,-1.356911,5.763951,3.956230,-9.842293,-8.121494,-7.756181,-9.789821,3.935200,-0.679155,0.511169,-0.882890,-4.689696,5.488729,-6.120338,3.557131,-7.730711,-7.724106,-1.799814,-9.985526,6.091638,-6.286136,8.463908,3.891140,6.873067,2.431304,-6.779179,7.615400,-6.192554,-0.080021,9.695847,-5.409847,0.031338,1.163897,-1.027847,-6.835812,7.944444,2.977853,8.484598,1.542132,-9.793099,1.795135,-9.785323,6.755693,1.320948,-9.594419,-9.018508,-5.138715,9.229984,4.156036,-7.208178,2.640443,-7.488570,-0.058644,6.093909,-8.861289,-7.149382,0.687908,-1.692281,5.282285,-7.508508,-6.183122,4.731504,-7.639259,1.156851,-1.703722,-6.238660,0.846920,8.890503,-2.601039,9.150538,-0.562082,1.494480,-3.446338,0.527537,4.670383,7.114453,-4.168996,2.789320,8.319796,-0.600414,-2.303623,-1.082554,3.731265,6.468352,-8.087521,7.375086,9.690317,-7.513954,-1.553484,5.178987,4.103503,-3.805296,9.495661,5.513429,-7.893143,7.277532,-9.180648,-4.767165,4.282158,0.654271,-3.781629,-0.177786,2.067559,5.294873,-6.232921,-0.753230,-4.588263,3.233378,-5.120632,-8.670767,-1.567269,6.834661,8.707417,7.716037,5.914085,6.112200,7.029465,5.526743,-0.317903,-3.856059,-2.014614,3.763839,4.341967,-5.375704,4.391299,-7.557331,-7.280553,-6.118751,4.712417,-9.830811,-2.728786,-0.199684,-9.303031,7.962161,8.389774,3.663842,-9.424279,-9.156617,-5.235263,1.932839,2.803927,9.172024,0.200879,-7.583357,9.692664,9.928869,-1.327745,7.037263,-6.487922,3.164611,3.533205,0.286453,9.884365,9.051138,-1.660562,3.029403,7.626268,-2.510915,-3.910788,5.221017,8.665198,-0.263038,1.315611,-0.440015,-7.220423,4.404849,1.940354,3.682015,-3.748304,-8.447708,7.964607,-9.711444,-4.230390,0.844565,3.066780,5.718575,7.735184,-8.691287,8.722587,-2.140126,6.919493,6.320760,-6.217804,9.309083,-9.126231,-0.751036,-6.516309,-2.458405,5.547460,6.967211,-0.433470,1.825803,-8.210661,-3.405102,8.390711,1.672433,-1.875651,9.878153,3.468488,4.855699,-3.996334,7.275752,2.574599,7.926784,6.645794,8.999155,8.787522,-7.204302,1.107636,-2.599513,2.537771,4.602436,-8.977482,8.234480,3.259408,9.151420,-5.604956,-0.413111,-7.904611,-5.891542,0.549766,-6.518471,-3.109738,-4.145675,6.914836,-9.743097,1.633507,3.657981,-0.416722,9.972337,9.481654,1.270911,-1.103852,5.047168,-3.757569,-6.614245,-3.973036,-4.781947,0.467743,-7.726271,6.004942,-1.878305,-3.675577,7.555899,-2.499921,-6.266366,0.998494,2.077275,-5.790592,4.850299,-0.169012,-8.611534,-3.780703,0.742856,9.344045,-6.308516,2.810664,1.825697,-2.864880,-5.315004,-4.237750,2.171198,5.720685,1.229735,4.648221,-8.353361,-9.086735,-6.698712,2.367291,5.052927,3.134422,-4.815089,-6.937824,-8.721289,-4.194046,3.175987,-6.881017,-6.148954,2.952333,4.207843,-3.348991,-9.318093,-1.637757,6.312753,-7.354620,-5.079441,3.363875,-9.994476,7.335945,-3.547560,-5.625959,-5.025768,-0.365766,-8.117466,-7.133652,4.460729,9.370340,1.767064,-9.733280,9.545290,9.723929,2.893249,-0.385368,-5.093828,-8.537979,1.238076,-4.610067,5.007418,9.281509,-0.746706,6.074719,-6.999356,4.154290,-3.122687,7.558659,2.224328,-0.552127,5.350050,-5.170342,-8.007713,-5.540899,7.790773,7.160112,-6.961835,-5.827483,-6.028609,-4.241272,-1.292627,-7.993224,4.658796,0.757008,8.752475,6.772236,-8.121198,-9.031362,7.557941,0.473375,-0.192371,8.556282,8.990667,5.218558,-1.445346,-6.435498,-2.638578,1.536212,-7.671761,-5.394091,-2.306747,-8.708617,6.596963,6.654111,-1.867923,-1.256784,3.049524,4.844063,6.784683,-7.357296,-9.207718,1.441578,-0.385330,-3.412066,9.417686,-0.594473,1.209252,-3.571357,2.376868,3.704419,-0.320968,-5.057718,3.453829,-3.356739,6.668681,-1.715055,-5.872431,-2.861627,7.368677,6.024235,7.813268,-5.220526,5.692817,1.708917,2.686584,-5.716786,-9.264235,4.210340,-2.506285,2.582043,6.972985,8.359453,8.279134,-7.482378,-1.210509,8.045897,2.268020,-5.598891,-7.570086,4.814683,-9.784811,-5.295342,1.019848,1.225549,4.626261,5.250102,-8.796270,-0.561339,-3.004196,-2.262676,7.609132,-1.937267,-0.208845,5.726710,-3.528957,-1.110899,-2.615310,-8.733093,-7.527532,5.842626,-0.875299,-5.602868,7.198173,-0.415895,2.496616,-1.757677,-1.063168,7.682462,-1.193313,8.232049,-0.475784,6.972132,-0.477398,-4.007692,9.942729,0.284400,-5.431401,6.619061,-1.497955,1.462049,-1.701563,-7.053687,-9.217636,7.050371,-5.692547,1.162338,-4.671933,5.822031,-7.298057,-1.421006,9.859568,9.256283,2.566686,9.598560,-7.073916,-7.453322,2.058088,7.393186,-9.821537,-1.416227,-4.052752,7.264416,-8.703177,6.241303,-8.333553,2.763128,4.857126,6.438360,5.948672,6.559089,7.836962,-8.003112,-1.086773,-5.801935,2.351987,-3.957048,3.700658,-6.871844,-3.763976,-2.639911,4.263714,7.388611,7.953717,-8.000091,6.149707,-5.194018,6.168023,3.025136,3.785690,-2.198096,-6.931367,-4.512611,1.922903,-7.228082,-2.718216,-1.910835,-0.065125,8.523350,6.330145,-1.372231,7.310275,0.867869,9.066430,-5.530827,9.261073,1.120917,3.277232,7.271895,5.058035,5.942461,-4.394814,5.870573,1.374829,-2.797731,-3.482953,5.385042,-7.010058,-5.550830,-5.290869,-8.720600,-3.532296,9.131777,9.528517,-4.002359,-7.472880,-7.401452,6.644215,1.506244,-3.062161,2.152227,-6.877495,-0.722382,-0.559752,2.862042,-8.008240,-8.068951,8.744820,-6.497569,-0.182778,3.798843,-1.884409,3.897392,-3.228308,-5.223402,5.563386,8.986325,0.412189,-9.604781,4.641228,-6.125346,1.094882,-8.287640,-0.386294,3.974033,5.981179,-1.383873,-4.954932,6.870537,-2.080929,-0.580542,-7.637835,-8.752511,2.990938,4.740437,-3.094393,-3.946017,-6.132312,-2.540758,-6.676390,3.715916,8.113709,2.001432,8.030673,-3.834626,1.176773,9.603544,-5.867749,5.281155,-6.928708,-0.328359,-6.603480,-7.261729,7.386969,5.881604,-2.434492,3.258866,-2.843505,-4.781121,-7.525245,-4.780152,7.877777,3.353907,5.704038,2.893053,4.670979,-8.958296,4.515432,-0.398453,7.267037,-3.039040,-6.702513,5.060799,-6.479757,-7.187980,-3.411937,-6.187447,1.017292,-1.846164,-2.607685,-5.445510,1.720111,8.781983,-2.268519,-4.514525,-1.587579,4.647305,-9.263580,1.039056,-0.880746,1.693105,-2.886353,-2.671116,5.412103,-5.103660,0.285805,6.127941,8.533683,5.220981,-0.046112,-4.526936,-0.573732,5.376053,-8.915575,7.143275,4.960618,-1.429311,5.719808,9.553061,0.609809,-0.672034,-1.533637,3.855438,4.426601,2.062728,-2.056667,-4.998009,-3.332106,-1.606451,-8.109256,9.762562,-1.884084,-1.090355,5.738985,0.435208,6.169595,1.301961,7.275848,-9.427455,4.040457,5.338599,3.825355,-5.545506,4.484750,-4.694484,-2.234732,2.381222,2.499557,-1.036477,9.154598,1.937474,-1.031183,5.611032,-7.542505,-1.919414,8.571830,3.033159,9.496121,-9.229430,-8.276839,-7.134008,7.536116,-4.864439,3.977773,1.934059,-2.626747,-7.362462,4.361818,-5.048007,5.002614,6.383426,-0.070683,9.923178,-8.519731,4.263383,-8.914073,6.467835,5.124935,2.546304,6.670777,-5.020159,1.864957,-8.491319,-8.222443,-5.332370,6.848756,-0.333466,8.137335,8.168557,-1.938136,-2.692492,-5.316953,-2.983688,9.663308,7.740810,-0.580557,-0.530448,-8.347606,-8.174738,-7.616654,-3.459508,-3.868983,7.498413,-6.449882,2.258203,6.932682,3.699520,7.049960,-8.365076,0.343232,6.169298,6.323023,-3.488612,-2.591224,-3.551708,4.291235,-2.960509,9.924948,7.925615,-9.298514,-4.622290,6.689270,-2.221174,6.346940,7.404283,-0.215462,-5.748956,0.755763,6.252681,4.116801,-7.129906,-8.212859,-5.201382,-5.533663,6.012574,-1.731562,5.375826,2.160796,9.331155,-0.256872,-8.406171,4.885587,-0.992010,3.367440,0.737384,9.186549,0.333486,-1.388370,8.446741,-2.749418,-6.425260,7.329066,-2.102878,9.866174,3.060186,-2.100891,-7.503618,3.306754,-7.968793,-7.195208,5.764761,4.748056,3.729136,9.027088,4.738362,0.663429,-2.569623,1.880918,0.227662,-2.992251,-0.938006,-4.726399,9.111384,9.874038,-0.604007,6.471224,1.245770,9.398255,-5.042377,1.720792,-5.606356,0.912774,7.490545,3.689833,1.288671,-6.279616,-7.143539,-2.958652,-9.085237,-3.210991,5.658218,-7.748652,-7.857189,0.501122,-3.797250,-5.757594,1.365384,-0.905796,-9.138774,-9.463750,3.165661,6.727536,5.665555,0.047743,6.765610,5.399061,0.659045,4.384977,8.600320,7.758626,-0.651322,-2.418907,5.038886,-9.045613,-1.591368,-8.721857,2.455425,3.733712,1.630832,-4.546382,-9.228776,-0.699290,-6.131277,-8.494842,-2.757422,8.962794,7.293421,2.749126,-4.550979,3.670526,-9.855249,0.525989,6.311319,-9.479904,3.777797,-0.577477,-6.034274,-0.763909,-6.040011,-7.019074,-6.731384,0.567648,9.468093,-9.398957,8.098316,-7.795189,9.664815,5.196250,5.205562,-9.081299,7.848451,-3.629742,3.320383,-5.675702,2.633001,-6.463185,-5.386460,-0.607729,-5.648679,-2.124036,-5.012082,8.978333,-9.937983,-9.843593,0.954734,-3.868098,8.402189,-7.471430,2.825484,2.486436,-1.046341,-6.640297,7.864275,-5.101982,-3.107995,5.889855,-7.913975,-2.396828,-4.215809,-6.039189,3.946899,-4.980899,7.996668,4.909529,3.024030,-1.676788,3.380103,-9.113006,3.364308,-6.932000,2.333531,-0.607910,0.616226,-1.106229,9.922446,4.041110,-3.439415,-2.232980,-6.171528,-2.929875,-1.524941,8.769527,-7.531396,-3.536510,6.927652,2.380362,8.114672,-6.932106,-5.669984,-6.705904,7.182363,5.522311,8.813000,6.736978,5.690391,5.919098,-4.808004,6.752473,-0.292975,-2.699004,9.737789,2.047401,5.577619,6.859206,-8.662365,-8.475803,0.446510,8.939737,3.554958,-8.627850,3.890112,-0.129890,2.277944,-0.925183,9.471579,1.069250,-1.672038,6.742276,-8.110888,3.141471,-7.301114,-7.316789,7.731223,-1.914758,-7.525817,-3.009726,-9.916541,-9.120803,-0.935804,-0.581359,4.849399,-2.615421,-6.936672,-2.410286,-6.249216,9.188174,9.235119,-8.655975,-8.402176,7.977084,-2.353318,-3.165407,-7.813104,-2.611716,0.145948,-4.643674,-4.700616,-0.273329,7.717992,1.464007,-7.845359,-8.116495,-7.087252,2.228988,-9.997399,6.135158,-2.254683,4.357956,-2.793036,7.048693,-2.221378,4.440600,7.288541,4.103509,-3.273513,-8.741313,-1.534151,-1.852274,-0.698416,1.763553,-0.233420,0.017582,-3.112001,5.475865,-4.325571,-7.600506,-5.206481,8.726474,4.632263,-7.098457,3.337589,-7.872917,-6.966879,-2.436430,-0.774094,2.534644,-2.280548,6.826807,7.522049,-0.561279,-6.591324,4.144118,-7.965121,-5.980041,8.683774,7.591329,9.750052,-9.381153,-1.013599,-9.435050,-1.539526,7.767342,-0.665710,0.894805,3.365370,4.787698,-6.975188,-1.574319,7.852692,-7.009858,-4.908314,0.545291,-5.829251,9.753340,-2.899958,7.896306,4.974040,-2.071410,-5.506048,7.083824,0.675601,0.201135,6.854323,-7.436753,-1.002239,-0.168716,-5.905658,-8.930727,6.353208,2.907385,-2.947141,8.761271,1.609708,8.880465,0.655046,1.253465,-2.871757,3.390772,-5.935445,-9.252027,-9.907040,9.797495,7.923492,9.020004,8.814388,-3.984742,-5.885782,8.192979,3.789614,5.712484,-2.946346,1.674216,4.665530,-7.747443,-2.437338,-0.469885,8.764050,1.887164,2.390179,-5.793073,9.391873,-7.437964,-7.551673,5.403028,3.739153,-3.429973,1.499808,-0.622819,-7.114485,3.867765,5.851157,-5.337386,6.991236,3.382229,-5.530537,-2.185156,1.677516,5.961120,-2.312556,6.037293,0.502948,4.435182,-2.217833,6.450549,4.606735,0.812802,-2.334385,3.264631,-4.397798,7.567591,-3.862339,-2.022443,-0.204561,5.832258,4.135275,-2.664901,8.035895,3.301737,3.069389,-9.202010,1.051015,-7.099969,3.692180,-0.105715,-5.744726,3.817332,7.018362,-1.933798,2.265977,-4.617679,5.854393,-0.769451,0.667895,-9.926488,-7.734494,3.033903,-9.052623,-9.079714,8.638789,5.376649,-7.145686,1.325712,4.622155,3.282018,3.707205,6.082724,0.758289,6.190509,4.424960,6.420160,0.200321,-2.113553,-5.598944,7.557904,1.783383,-7.715312,9.367350,2.032732,5.091764,-4.831089,-4.631681,6.574606,9.470176,-7.155690,-9.515085,-0.766803,-2.849023,-9.187802,5.730200,8.526600,-4.511467], dtype = "float32")#candidate|14079|(1568,)|const|float32
const_14080 = relay.const([[-7,-9,1,-10,-1,-10,-7,-2,9,10,4,8,-10,3,-10,1,2,-2,8,-9,-10,-9,-3,5,-8,-9,3]], dtype = "uint32")#candidate|14080|(1, 27)|const|uint32
var_14081 = relay.var("var_14081", dtype = "int16", shape = (1092,))#candidate|14081|(1092,)|var|int16
var_14082 = relay.var("var_14082", dtype = "int8", shape = (4, 308))#candidate|14082|(4, 308)|var|int8
var_14083 = relay.var("var_14083", dtype = "uint16", shape = (1, 420))#candidate|14083|(1, 420)|var|uint16
call_14078 = relay.TupleGetItem(func_8743_call(relay.reshape(const_14079.astype('float32'), [14, 7, 16]), relay.reshape(const_14079.astype('float32'), [14, 7, 16]), relay.reshape(const_14080.astype('uint32'), [27,]), relay.reshape(var_14081.astype('int16'), [1092,]), relay.reshape(var_14082.astype('int8'), [616, 2]), relay.reshape(var_14083.astype('uint16'), [420,]), ), 3)
call_14084 = relay.TupleGetItem(func_8750_call(relay.reshape(const_14079.astype('float32'), [14, 7, 16]), relay.reshape(const_14079.astype('float32'), [14, 7, 16]), relay.reshape(const_14080.astype('uint32'), [27,]), relay.reshape(var_14081.astype('int16'), [1092,]), relay.reshape(var_14082.astype('int8'), [616, 2]), relay.reshape(var_14083.astype('uint16'), [420,]), ), 3)
output = relay.Tuple([call_14072,call_14075,var_14076,call_14078,const_14079,const_14080,var_14081,var_14082,var_14083,])
output2 = relay.Tuple([call_14073,call_14077,var_14076,call_14084,const_14079,const_14080,var_14081,var_14082,var_14083,])
func_14087 = relay.Function([var_14076,var_14081,var_14082,var_14083,], output)
mod['func_14087'] = func_14087
mod = relay.transform.InferType()(mod)
var_14088 = relay.var("var_14088", dtype = "int64", shape = (1960,))#candidate|14088|(1960,)|var|int64
var_14089 = relay.var("var_14089", dtype = "int16", shape = (1092,))#candidate|14089|(1092,)|var|int16
var_14090 = relay.var("var_14090", dtype = "int8", shape = (4, 308))#candidate|14090|(4, 308)|var|int8
var_14091 = relay.var("var_14091", dtype = "uint16", shape = (1, 420))#candidate|14091|(1, 420)|var|uint16
output = func_14087(var_14088,var_14089,var_14090,var_14091,)
func_14092 = relay.Function([var_14088,var_14089,var_14090,var_14091,], output)
mutated_mod['func_14092'] = func_14092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9913_call = mod.get_global_var('func_9913')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_14104 = func_9913_call()
call_14105 = func_9913_call()
output = relay.Tuple([call_14104,])
output2 = relay.Tuple([call_14105,])
func_14113 = relay.Function([], output)
mod['func_14113'] = func_14113
mod = relay.transform.InferType()(mod)
mutated_mod['func_14113'] = func_14113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14113_call = mutated_mod.get_global_var('func_14113')
call_14114 = func_14113_call()
output = call_14114
func_14115 = relay.Function([], output)
mutated_mod['func_14115'] = func_14115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14127 = relay.var("var_14127", dtype = "float32", shape = (14, 10, 13))#candidate|14127|(14, 10, 13)|var|float32
const_14128 = relay.const([[[3.773552,8.662908,1.352900,-0.255445,-3.809738,-9.402183,6.555676,-8.011066,-3.102429,0.852337,-1.976257,7.496728,-3.529975],[-6.918794,-2.742905,3.654523,8.936411,1.303552,3.516256,-1.996917,-6.164380,2.610934,2.568957,6.590655,-5.624145,-8.321322],[-1.855495,5.218960,-5.147695,8.595613,0.566158,8.010164,-1.704157,4.722917,-9.609881,6.499088,8.288937,-5.573018,-6.245581],[-6.110762,-2.785650,-0.221001,8.137452,9.729126,7.020893,-5.075504,-5.584489,3.963476,-7.182059,-5.439789,4.667869,7.940930],[-9.373206,8.361110,-9.073813,9.237837,6.288727,0.435228,4.200134,-7.477882,-8.855847,-5.156244,-8.610130,4.942149,-9.154057],[7.796761,5.241548,-9.505326,7.007507,-5.459575,-2.345390,-5.338128,5.160657,-0.457845,8.653909,9.874804,6.994968,-4.954986],[-9.550737,5.202772,4.746228,-5.402052,2.768594,-0.767227,-8.356727,-1.127772,-5.797360,-6.958497,2.818088,-9.346398,-1.934994],[-6.580285,4.619933,0.749685,-8.246624,1.864849,-2.389510,-2.644070,-4.205464,-3.032485,2.732940,1.719234,1.320928,-8.413131],[-8.978316,0.066800,-7.925286,0.059900,-4.552866,7.984875,4.304137,-1.551824,-9.559016,8.122859,6.753965,-3.762649,9.618037],[-2.868636,4.249244,6.815490,-0.013555,-4.310892,-2.447683,-3.033642,7.794151,6.804853,-7.698577,-8.285439,-4.210787,-8.908919]],[[6.394675,-9.100551,-4.793983,9.827762,7.543768,-7.426208,-0.624994,6.386740,-0.461260,0.418480,1.822678,-2.234369,0.064184],[5.134181,-8.271208,8.409291,-2.754735,-1.331331,2.948002,-8.968705,-5.508851,-6.226748,-0.037176,4.429501,1.214879,-2.533945],[0.572196,3.064218,8.906776,-0.113159,-0.721705,0.932426,-0.018161,1.968950,4.055176,-2.913919,-8.967223,-1.738553,-0.706226],[5.065936,4.393000,5.186196,-7.737828,0.453993,5.172519,-6.301829,5.190245,-8.603816,5.080078,1.706683,6.970542,1.871141],[-2.929066,-9.427128,2.517398,7.352764,6.039894,-3.594688,1.696490,9.326241,9.185957,-6.072449,4.979437,-4.233243,-4.447110],[-7.313012,-2.588070,-7.609346,1.160124,9.579047,-4.156308,6.281596,6.748227,-8.391477,4.258300,0.347479,5.634007,-4.659567],[-7.047672,5.885670,-4.468713,7.009869,8.442652,-4.274196,-0.455069,-9.486983,-4.763508,7.752650,1.620399,-5.246835,6.467813],[1.539485,7.340954,-8.458572,3.909917,-1.395022,2.544824,-8.214330,8.231147,5.020462,-2.377348,3.342816,-6.653206,5.523199],[-3.853938,-3.492897,9.427732,-5.511197,8.358178,9.802674,-2.795042,1.800166,2.698931,2.894086,-5.169694,-8.762438,-4.814923],[3.381364,-2.473099,-0.939209,-1.425216,4.068183,-9.810646,-8.459574,-5.485823,-5.153310,1.810003,-7.466913,6.059957,-2.615649]],[[-9.937126,9.494791,-7.401623,5.061571,5.825392,6.213089,9.515676,7.793225,-1.227371,9.894532,2.315358,1.031044,4.100022],[3.000117,7.315527,-3.843903,0.580920,-1.519196,-7.853891,-9.118620,5.400871,5.239054,-4.461529,0.882224,-1.167648,2.778109],[-9.230281,1.467177,-5.023753,7.063884,-2.624102,-8.090780,2.099126,5.592499,-0.574129,2.140933,5.463939,-5.565441,0.150667],[-3.537200,0.608915,-6.494097,-6.856688,2.262964,-2.057451,3.125163,8.598693,-5.993358,-1.461131,-5.827309,-0.335731,6.458656],[6.508632,8.359311,5.543287,-0.120004,-0.016977,-2.421018,-4.858097,3.829204,-2.481234,4.727474,-5.362170,-4.630754,3.052279],[-1.358261,-6.090849,4.349990,1.725567,1.024550,-3.675871,6.608736,-8.867948,-5.329110,-3.444552,0.499954,-8.641424,-2.292821],[2.777816,3.024157,5.985750,-8.810506,2.533884,9.803157,-9.802568,9.160863,5.664368,2.976089,2.506831,-9.384354,-7.192167],[-4.113760,3.095299,3.151286,-3.839841,5.892619,-8.823877,9.042159,-1.680503,4.096544,4.648374,5.371778,1.278744,-4.060173],[-9.086201,-4.382196,4.172370,0.367604,6.724240,3.233118,-9.927669,-9.225858,-7.904831,-9.567396,-7.196234,7.181942,0.556985],[-2.296781,-5.149133,5.142449,-5.979185,6.110096,-8.568191,-2.742201,2.329567,4.313746,-4.015512,6.406856,-0.806085,9.986342]],[[1.772312,-0.028729,-9.993695,0.261415,-6.360296,7.904674,9.417532,-2.573085,-6.292332,5.994126,-0.062868,1.544811,-4.858856],[3.883401,-4.224190,-1.387782,7.820996,-7.268491,5.388736,-5.323544,-3.638311,-2.358944,-5.575124,-3.393561,5.136803,7.853588],[-3.466077,2.068193,3.365862,9.224935,3.630656,4.417457,5.872734,-3.275730,7.451282,-2.163953,2.701005,9.829173,4.432551],[-3.764940,-9.696375,-7.220520,-7.428321,9.213315,-6.593740,6.703006,-8.779738,-1.114127,7.298454,1.224996,-3.627959,-7.849853],[-3.900916,4.585105,6.115228,3.568805,7.661390,8.419056,3.709740,4.854492,7.732832,3.179453,2.048407,7.449196,2.390629],[-9.369942,-1.033643,6.832481,-6.431873,-9.554581,-4.267408,2.928432,9.673710,1.952803,-6.525847,-2.194927,0.830261,7.412666],[-6.701486,1.532620,8.387436,7.200820,5.033833,4.062742,9.497583,4.531067,2.737239,-0.498033,1.447099,2.800571,-8.252602],[-3.791621,8.095679,5.537672,-7.995387,2.153897,-8.399020,-9.740388,9.802348,2.275945,3.566523,-4.747909,-9.577141,-2.668887],[-1.607230,3.644869,0.424686,1.007587,4.182575,-4.075870,9.558995,-2.095407,-3.006508,4.768837,-6.469068,3.268725,-0.090127],[-6.005001,-3.535745,-1.544388,-9.171045,1.391942,6.831110,-9.835239,8.154595,5.593999,9.480075,-7.452610,-4.417876,7.207868]],[[2.500654,-3.095024,7.215485,-6.797419,7.673012,-0.584588,-5.114515,-9.711259,-5.161026,-1.976877,9.161130,6.137762,0.013607],[6.717001,4.202210,-0.622820,1.154684,-2.508795,7.317817,-3.301997,-1.390365,-5.751647,-8.475696,-4.482730,-0.864284,2.843899],[-7.258812,-9.294214,-6.117424,4.749470,-6.261079,-4.364789,2.993762,-9.494722,1.471477,0.200728,-7.713463,-3.604800,-2.004901],[2.372844,-3.937336,2.316157,3.299914,-9.484621,2.864710,-5.267662,-8.990694,5.680206,1.935936,-1.088325,-5.476891,-4.729374],[-3.897074,9.711757,-9.282502,9.295222,6.619795,2.151663,-8.273345,2.791663,-2.343313,1.549952,-8.729242,-4.914294,4.103581],[5.848320,-4.752811,-0.476651,-5.790532,-8.758470,-4.817274,7.463470,-0.009023,5.794031,3.437370,-9.026598,-6.162522,-7.693871],[-2.560282,-4.044235,6.015180,1.298670,-7.305519,-0.403081,7.352681,5.415614,-1.677605,-6.821318,1.649870,9.169975,-8.368230],[-5.376055,-5.446167,7.872687,3.216811,-5.419843,8.822100,8.735725,2.260419,7.152315,-4.784032,-0.897393,9.690336,1.693054],[-0.240776,6.833345,-3.888269,5.423960,-6.386074,0.003333,0.628010,6.675544,7.333938,-5.064783,-2.121093,8.191276,-9.294572],[-5.091968,-6.258190,-9.074327,-6.269095,5.256246,-4.580422,0.369452,-6.162059,-6.137487,-1.547549,-0.731823,-3.680828,-6.853101]],[[-1.981460,7.379222,-5.194957,0.931871,0.460226,3.347105,3.350326,-8.415704,-3.595247,2.330725,-0.835758,-8.181138,1.919726],[-0.995060,5.870866,-2.753586,9.242176,-1.131872,3.783233,-5.605606,3.615672,7.650530,5.049819,-1.732932,2.149167,-4.377587],[-2.660351,9.179165,9.370715,1.221899,-5.429185,1.609949,-9.986963,6.700781,1.230819,-2.238870,-8.370832,2.849144,-5.008565],[2.450997,4.193872,5.168031,-3.165252,3.852450,7.722867,-0.295432,4.734033,0.876973,5.384331,4.722268,-3.932691,3.072657],[6.960193,-5.721672,6.076754,-2.987062,2.246402,-1.226977,-1.883626,-0.238905,-5.122295,0.867970,-6.435896,8.966943,-7.392690],[-7.177902,5.543756,9.422187,-0.646945,-1.780651,7.828439,5.730202,-1.023358,-3.350204,8.871302,-9.206981,7.619468,3.179722],[-0.309553,4.046892,-2.025269,-9.170659,4.123613,-3.797888,9.470459,0.741521,8.065945,-2.091683,-8.509962,-1.801244,3.324881],[-3.565504,6.331179,-4.679187,-3.122501,-3.393992,7.072132,-7.138387,-3.268015,-0.612835,5.337494,-5.312797,-7.480969,3.571545],[8.455351,7.599518,-4.840602,3.480412,6.124054,-8.618536,2.381087,-5.851711,5.199612,0.482715,-9.106082,1.803002,-8.696713],[-6.293985,-6.541827,7.763631,-9.093549,-1.249719,-4.154260,-8.895187,3.725001,-8.870524,3.250253,2.622628,4.885088,-9.387504]],[[6.763836,-3.775278,0.864713,-8.485978,-0.818332,6.899221,-2.114164,8.772710,7.063585,0.462559,-7.418272,4.937132,-4.113042],[-5.944977,4.877889,3.033028,9.902397,-5.576676,1.372872,-0.468192,8.699984,-6.237546,-5.746650,-3.016781,1.670444,-4.936133],[5.180390,9.407350,3.825651,-3.460984,-6.097136,9.002470,9.893151,-5.253274,-7.536024,-1.872609,-6.360906,-3.456359,-0.106006],[-0.668302,-2.418589,-5.892084,-4.515730,1.116217,3.364392,-5.181323,-0.145250,7.649450,-8.926935,-6.273861,0.315525,-4.808316],[1.988602,-6.243528,5.551096,0.965464,2.135574,-1.552081,2.769603,7.464278,4.154169,-1.565966,7.448407,6.680931,4.858806],[1.141274,-4.791512,-5.789451,-8.868954,6.716329,8.275093,4.353859,-6.887883,-3.669145,1.488073,6.499393,9.119628,-4.066794],[4.166986,-8.868654,2.592773,9.168538,9.990449,9.871004,-9.280075,-4.463231,0.168321,0.991499,0.239142,7.919266,2.439256],[2.978769,-6.005504,-7.662827,0.007791,-6.002038,-1.472531,-3.876968,6.758279,0.500138,-5.409114,8.519228,9.161651,-5.810245],[-3.601969,8.104612,-3.498450,3.468320,9.961932,-0.344079,-8.152763,6.226127,0.018392,9.568279,-5.691606,-1.126479,-7.918522],[-5.370601,-6.767578,-1.952655,4.404019,3.591098,-3.144286,-1.552999,-9.781528,-2.919325,-0.246928,0.212827,1.018962,-9.051925]],[[9.997952,-2.510123,8.642530,1.899392,1.645964,-2.715801,5.084571,-7.412245,-6.003112,9.558148,-7.993714,-7.844567,-3.131257],[-8.016924,-1.415031,9.895689,7.137183,0.444566,-6.568367,5.489450,-4.667120,-3.146317,7.686909,1.996314,-7.313110,-6.158583],[-7.344477,5.995891,-5.520578,-4.965405,-8.654552,-5.866803,2.641722,-8.751979,-3.154878,-7.361494,-6.687347,-7.537282,1.784064],[5.490359,2.399252,-0.214123,-2.898217,-7.086928,4.865131,0.841139,-8.188990,-0.822394,9.885460,6.541595,-8.216982,-3.142281],[2.081462,-4.937308,-2.509136,-5.796841,8.689358,1.032357,-0.456522,-6.130765,-8.958163,6.888143,5.537059,6.458507,2.121445],[-4.460328,-7.551317,-0.607595,0.069091,-7.229842,-7.547732,3.217200,-1.794124,-8.097451,-5.284385,-9.248483,-1.663605,0.460415],[4.915535,7.648792,-8.469465,-5.096154,-4.350363,-7.422458,5.412229,-7.026598,2.335077,5.825281,-4.702226,-2.758897,-3.064249],[-6.194344,-6.931263,-6.939152,-5.624606,-8.280126,9.083923,2.903292,3.600483,-5.194269,-4.963216,6.099681,-8.772118,5.374115],[-6.651604,-5.834699,7.005299,9.896905,-7.589524,3.261902,5.342551,0.631867,9.293052,0.708995,-5.639519,5.183253,-1.269606],[-7.294347,-9.551735,7.477048,0.153460,7.757738,-7.123060,1.944830,6.637608,0.857156,-9.791796,3.103319,0.207972,5.249396]],[[-1.490610,5.141718,1.584427,-9.949331,9.007174,-5.322815,9.110752,5.509328,-4.633240,-9.118822,-1.794869,2.090596,0.310752],[-0.727714,8.003011,-0.903332,-7.553953,-0.749663,-7.165997,4.349352,-7.927065,-1.277538,-9.500816,-2.865189,-3.573325,-2.763994],[-0.043952,-7.184591,-8.971870,9.961486,-0.100816,-4.124255,4.211179,-0.516899,3.236935,3.471675,8.696559,2.809662,-8.760088],[-4.928602,-1.954208,3.376746,-0.338125,-6.166479,-0.672101,-2.442092,-0.232205,2.889790,8.444449,1.233696,-1.783978,9.467320],[-1.797929,8.866761,-4.964870,-1.016173,-8.797989,6.876823,7.473723,4.386517,1.431918,-7.424876,-9.623321,0.032707,1.169111],[-9.347549,-6.861457,4.690485,-4.969757,4.025724,-0.748788,-4.822171,1.964663,-7.811535,9.569153,-7.863504,4.404608,-5.872229],[-3.077362,-6.033866,-3.423705,0.256223,-2.223355,-3.318718,9.262962,8.620107,2.372258,-0.155676,5.047210,4.366260,3.795395],[-3.375112,-6.683694,-5.705079,-3.559221,-5.195923,-5.916186,2.154415,-0.233400,1.596493,0.936311,9.395655,-9.720854,7.009951],[-7.038109,3.662003,-2.792993,6.898791,-0.089825,-9.767674,-7.543968,-8.864805,-0.730212,7.034264,7.870421,4.410452,3.040160],[8.450496,-7.092580,5.506781,7.803074,-5.270483,-2.212849,-3.270776,-4.354106,-3.719195,3.422419,3.567930,-3.833769,-2.961237]],[[6.031949,0.764459,-2.224556,5.348916,2.874758,-2.776184,5.864786,7.411807,-6.240416,-3.513764,-6.674040,7.922583,1.973864],[4.636569,3.204829,9.966183,9.412197,7.511055,7.458440,9.107807,6.907780,9.692146,-9.119761,8.171936,-4.694915,0.084820],[-0.964687,-9.641121,1.900635,4.764614,1.594903,-7.541911,5.004129,3.064988,-8.773990,-5.290552,-5.526040,-2.704133,-3.415144],[9.996087,1.679687,3.575060,5.175615,-7.829019,7.452628,5.071806,-2.872009,-6.032639,8.637052,9.585282,-2.872396,1.349145],[8.088478,7.421280,7.577780,5.924607,-8.360313,-2.141169,-2.436223,-9.146107,9.767466,4.727140,4.359419,4.030542,5.130408],[-8.813534,-5.935766,-2.980837,3.188099,1.530851,-5.372159,-6.062802,9.691525,-2.039829,7.982541,-4.892237,-6.308078,-5.605299],[4.303772,-6.533116,-3.203550,-6.935321,-3.876953,2.798653,-3.493515,4.890997,0.547829,8.487726,-9.256767,-2.729355,1.784343],[-5.240296,-8.296834,6.897317,5.470083,-6.618645,1.207280,-6.799033,9.947618,1.893005,9.077427,-5.654421,-6.796606,8.045556],[0.852762,-6.952204,-6.630750,-3.024378,-6.232571,-1.457291,2.093643,1.190147,4.148777,8.357968,0.430113,7.292355,8.817028],[2.749925,8.116795,-3.247872,1.685920,5.035833,-9.503527,-2.184527,-4.988252,-8.411309,-1.194825,-7.227447,5.070450,-7.417792]],[[-9.975612,3.068317,-3.446108,-9.063105,-2.307778,-2.733839,8.567429,0.495130,-4.622127,-5.622382,1.362698,-8.299945,6.794226],[6.463521,-2.457334,3.095239,5.609719,-5.142265,-1.516547,-5.375120,-2.432496,-1.490582,-8.865567,7.510097,8.733052,2.776073],[-4.175192,-2.900152,-2.663179,-0.937473,-5.082026,-2.029422,5.033747,7.236619,1.246700,-6.418917,-6.378329,8.446885,-3.151202],[5.928133,7.613835,-0.332577,2.117220,2.479178,9.403512,-2.780700,2.185861,5.325072,-3.001068,-4.177280,-1.716482,0.771517],[2.543072,-1.807187,9.021585,-9.812142,-4.707630,-6.866740,4.137455,-2.442493,2.063656,-9.097611,3.390659,1.485626,-0.991888],[1.026405,-7.936393,-9.079212,4.035363,-9.077523,-9.852474,5.177209,7.710508,-5.070894,2.164036,9.227498,-5.679638,-3.516685],[-8.329296,8.920098,0.282633,3.938495,1.528251,-5.322067,-5.583922,9.398947,1.994473,-8.245276,-1.374180,1.221051,2.909673],[-8.076598,7.786128,1.381928,0.293289,-6.918522,4.932021,-9.500776,8.256205,6.111500,6.333538,8.119077,-0.772875,-6.223946],[-3.243700,-4.017812,-6.492335,8.150563,2.608110,4.552366,0.539907,-7.667490,-5.669480,2.587775,4.072518,1.288958,4.192219],[1.214410,-5.108743,-0.610105,9.906553,-1.887124,-6.318009,0.797555,-1.625114,-8.578980,6.105478,-1.607806,4.508762,9.178845]],[[5.099548,-2.079054,4.415265,-8.371162,1.995149,5.678095,5.738509,-3.147229,2.927295,-2.548401,7.508326,-2.567994,0.417762],[-5.392236,-1.377665,5.711578,-0.565686,6.251562,7.317275,-3.286465,-8.600676,1.665103,1.297518,4.921331,-1.077149,6.235251],[-8.094982,-1.270065,-6.983599,6.333795,-1.306025,-7.496027,-6.787260,2.253855,8.416968,-7.663263,6.879619,-3.632151,2.355332],[0.985179,4.586070,9.890783,-5.195978,3.853390,-7.786358,-3.051559,0.155046,-7.280351,-0.976783,5.019747,6.271284,6.448212],[1.310013,2.890104,-3.026901,-3.546457,3.638738,1.173743,8.793799,2.534162,3.328896,4.593081,-1.290762,-7.140658,8.027901],[9.907998,3.571812,6.560029,-3.943221,-5.971402,8.367277,-4.451867,-2.806126,8.550952,-0.435032,-4.296528,-8.846458,-4.813707],[9.225009,4.701222,-6.876729,1.376679,6.724617,-8.265748,0.103775,-6.927771,-9.251117,-6.614839,2.689266,-1.499929,-5.055283],[5.984112,-1.104899,0.713781,2.717127,-5.421842,7.903358,7.316159,-2.028005,-2.559529,-9.800625,6.978896,4.038865,-4.768846],[5.870999,-9.970632,0.093033,-8.117192,4.964809,5.081538,-8.991659,-1.379640,1.176755,-6.824323,-6.130862,8.525003,-5.078843],[6.072770,-2.259460,-3.445918,-3.857438,9.229891,-7.586304,-5.248955,-4.780501,-7.028175,1.736790,-0.532821,8.854315,2.350176]],[[-5.691558,-0.816378,8.381698,-2.309092,8.691027,3.608833,-8.074877,8.837834,-0.417994,-6.748499,0.405818,1.356766,-0.841447],[9.729919,-5.798934,6.592979,-5.548062,5.263957,5.770570,8.731577,-0.658169,-3.696622,-5.242996,-7.937974,4.619670,0.198313],[7.655194,-8.692695,-1.391662,4.435959,-9.212541,1.666552,8.093146,-9.730935,5.852347,2.935226,-3.341528,-5.214662,-5.280161],[4.103220,4.176964,-7.331283,8.173382,-1.566449,5.718405,-8.728484,-2.233843,-3.095995,0.974965,-2.393971,-5.582500,-6.191072],[-6.977007,1.382674,3.184411,-0.697538,8.062006,-2.835960,2.625319,4.091904,-7.392228,-9.183801,8.001851,-5.305241,6.775225],[0.546571,9.380948,-9.043225,-3.858826,-7.302620,-9.233523,1.417990,3.582783,-5.088150,-1.661228,0.198573,-0.228879,-3.187054],[-5.488205,-0.334870,0.529566,-7.223150,5.950625,-7.445616,-8.234028,-2.805359,-3.667961,4.500162,8.072665,-1.990850,0.055830],[-1.140614,-3.109579,8.337366,-3.867256,-2.464150,-4.447861,-4.596835,-5.706613,2.853267,2.840598,2.606674,2.062646,3.871476],[9.333088,2.435631,-9.481151,-1.881298,-3.012597,6.524680,4.051404,-6.616810,-8.096348,0.498510,-1.743035,-0.861063,-3.928975],[7.625495,-9.511777,-9.623492,-5.154053,-2.650582,-9.642037,0.853113,-8.328656,1.604759,7.315810,6.792466,-2.425247,-7.609774]],[[-9.044583,-8.757828,-5.332252,-6.998345,-3.914382,-0.324082,-7.896066,9.434988,6.277199,5.093222,-4.448003,6.231982,3.236896],[8.697661,-1.455960,-6.170504,-7.601317,8.613701,-8.270486,8.218053,7.891205,3.501725,-9.443122,-8.569183,-9.981754,-1.780823],[-1.821963,-4.554101,-0.332151,7.990574,9.976891,3.392368,-6.936675,-6.761463,6.884241,5.997201,-2.208316,-0.342601,-7.039585],[-8.088857,2.527839,4.258065,1.414371,9.329022,0.264399,-0.699891,-1.905295,8.129683,-7.055098,0.518409,4.402706,-9.790507],[9.876287,8.997763,4.432318,-9.951074,-5.902606,-4.388682,6.472711,5.227164,-8.757689,0.621950,-3.386968,8.521218,1.558921],[-4.431145,-9.884726,-8.597235,3.663191,4.640626,6.824229,4.671009,7.201769,0.481747,6.706881,0.939091,-8.380132,-2.007520],[1.506368,-3.893098,-2.035595,-2.829104,6.390011,6.466637,-4.032357,-2.167109,-5.689383,7.105998,4.341049,7.286921,2.139536],[3.449900,6.101143,-8.400051,8.272107,5.053849,9.782879,-1.488194,-9.401141,-2.899090,-4.546619,6.601883,-2.718512,-2.389855],[9.628495,0.334308,9.893456,3.862010,-9.347902,8.092139,-6.259069,-4.923168,-7.703716,-8.872969,-5.929397,2.637053,5.044656],[3.882666,7.912848,-4.937667,4.101052,-8.249065,-5.018683,-6.349846,2.372692,-4.446331,-1.651673,-7.910830,-1.021423,-7.114713]]], dtype = "float32")#candidate|14128|(14, 10, 13)|const|float32
bop_14129 = relay.mod(var_14127.astype('float32'), relay.reshape(const_14128.astype('float32'), relay.shape_of(var_14127))) # shape=(14, 10, 13)
uop_14136 = relay.acos(var_14127.astype('float32')) # shape=(14, 10, 13)
bop_14153 = relay.multiply(var_14127.astype('int64'), relay.reshape(const_14128.astype('int64'), relay.shape_of(var_14127))) # shape=(14, 10, 13)
func_3842_call = mod.get_global_var('func_3842')
func_3845_call = mutated_mod.get_global_var('func_3845')
const_14158 = relay.const([5.465821,8.864973,-6.017102,-9.611399,2.579800,1.626596,-7.950652,4.542799,1.405941,1.810550,0.035924,-6.263753,4.001288,-3.902543,-1.719010,-6.112391,-6.582072,3.451125,-8.820750,-9.716840,4.161061], dtype = "float32")#candidate|14158|(21,)|const|float32
call_14157 = func_3842_call(relay.reshape(const_14158.astype('float32'), [3, 7, 1]))
call_14159 = func_3842_call(relay.reshape(const_14158.astype('float32'), [3, 7, 1]))
func_9867_call = mod.get_global_var('func_9867')
func_9868_call = mutated_mod.get_global_var('func_9868')
call_14168 = func_9867_call()
call_14169 = func_9867_call()
output = relay.Tuple([bop_14129,uop_14136,bop_14153,call_14157,const_14158,call_14168,])
output2 = relay.Tuple([bop_14129,uop_14136,bop_14153,call_14159,const_14158,call_14169,])
func_14182 = relay.Function([var_14127,], output)
mod['func_14182'] = func_14182
mod = relay.transform.InferType()(mod)
var_14183 = relay.var("var_14183", dtype = "float32", shape = (14, 10, 13))#candidate|14183|(14, 10, 13)|var|float32
output = func_14182(var_14183)
func_14184 = relay.Function([var_14183], output)
mutated_mod['func_14184'] = func_14184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12045_call = mod.get_global_var('func_12045')
func_12047_call = mutated_mod.get_global_var('func_12047')
call_14217 = func_12045_call()
call_14218 = func_12045_call()
func_13326_call = mod.get_global_var('func_13326')
func_13328_call = mutated_mod.get_global_var('func_13328')
call_14224 = relay.TupleGetItem(func_13326_call(), 1)
call_14225 = relay.TupleGetItem(func_13328_call(), 1)
func_13381_call = mod.get_global_var('func_13381')
func_13382_call = mutated_mod.get_global_var('func_13382')
call_14234 = func_13381_call()
call_14235 = func_13381_call()
output = relay.Tuple([call_14217,call_14224,call_14234,])
output2 = relay.Tuple([call_14218,call_14225,call_14235,])
func_14242 = relay.Function([], output)
mod['func_14242'] = func_14242
mod = relay.transform.InferType()(mod)
output = func_14242()
func_14243 = relay.Function([], output)
mutated_mod['func_14243'] = func_14243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13225_call = mod.get_global_var('func_13225')
func_13227_call = mutated_mod.get_global_var('func_13227')
call_14252 = relay.TupleGetItem(func_13225_call(), 4)
call_14253 = relay.TupleGetItem(func_13227_call(), 4)
output = call_14252
output2 = call_14253
func_14258 = relay.Function([], output)
mod['func_14258'] = func_14258
mod = relay.transform.InferType()(mod)
mutated_mod['func_14258'] = func_14258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14258_call = mutated_mod.get_global_var('func_14258')
call_14259 = func_14258_call()
output = call_14259
func_14260 = relay.Function([], output)
mutated_mod['func_14260'] = func_14260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12473_call = mod.get_global_var('func_12473')
func_12474_call = mutated_mod.get_global_var('func_12474')
call_14289 = func_12473_call()
call_14290 = func_12473_call()
func_6498_call = mod.get_global_var('func_6498')
func_6504_call = mutated_mod.get_global_var('func_6504')
var_14294 = relay.var("var_14294", dtype = "int32", shape = (72,))#candidate|14294|(72,)|var|int32
const_14295 = relay.const([4,-7,1,2,10,4,4,10,2,7,-5,10,9,-5,3,-3,10,-7,-9,-4,9,-6,6,1,8,-1,-2,-4,-5,3,9,-8,8,-1,-4,-8,2,4,-10,9,6,10,1,10,-5,5,-1,-2,-8,-9,-7,-7,-9,-9,7,-6,8,-10,9,6,-5,7,-5,6,-1,8,-2,-7,8,-9,-5,-10,10,-3,-2,-1,9,-2,7,10,4,6,-4,6,-2,-9,-9,-2,-8,8,-2,-6,6,-7,-9,1,-6,-9,1,-2,-10,9,-9,8,4,7,4,-10,5,-5,6,-8,-4,-3,-10,-7,-6,-10,7,-2,4,10,-5,2,10,2,5,8,-7,-6,6,9,-2,-6,-7,-4,8,-2,-6,10,-2,-2,2,-6,-1,-8,-8,8,4,-8,4,5,-6,4,-3,-8,9,-2,1,2,2,8,4,7,2,2,-9,-10,6,-7,-10,-4,6,-2,5,9,-5,-5,-5,-9,-10,-6,10,4,-10,6,5,-9,-5,-7,8,-6,-5,1,5,-8,5,-6,10,2,10,-9,6,-5,10,1,-8,-10,8,-2,5,10,5,-4,5,-4,4,9,1,10,7,-1,8,9,-5,1,-4,8,6,-4,-10,5,2,-3,-9,4,6,-3,7,10,-5,-9,-1,-6,-1,-9,1,-4,-7,3,9,4,-3,10,8,-9,3,10,7,3,8,-10,6,-1,-10,-9,-4,-4,9,-8,-6,-8,6,-2,-5,4,7,-4,7,-5,2,8,8,-4,8,4,8,10,1,1,-9,9,9,10,-9,-3,-1,-6,2,8,1,-3,-7,4,-7,3,-8,-3,-8,-2,-7,7,-7,9,-2,-9,-2,-3,-5,6,-2,7,3,-8,2,7,7,7,6,3,-6,2,-5,6,2,4,-3,5,-3,-7,2,-2,10,5,9,8,10,-3,5,-9,-3,10,-3,2,-7,-9,-6,10,-4,4,4,-9,1,1,1,-2,2,2,6,-1,4,-2,5,-8,10,2,-3,-8,3,8,-9,10,-2,-9,8,-9,-4,-5,-6,7,3,10,2,-10,-7,-9,-1,-10,-3,9,-10,4,-3,2,1,7,-1,-2,3,8,-2,-6,5,-4,-4,-10,5,-6,-4,-10,-10,-1,-4,-5,-4,-6,-7,-9,-8,-5,-8,-7,-10,3,-3,-2,-2,5,-5,2,1,-8,-10,-5,10,3,4,2,4,9,-2,2,4,-9,-6,-2,9,-7,5,-1,9,-2,5,8,-3,9,-10,7,-8,4,-9,3,4,-9,2,-3,-6,-8,3,10,-3,-9,-10,6,7,4,-6,-4,-8,1,-4,5,-3,1,-6,-10,-4,3,-9,3,-9,-10,3,7,-8,3,3,6,-10,-2,9,-7,-2,6,9,5,-6,5,10,3,10,-4,4,1,-6,-2,4,10,10,-7,-5,7,9,3,3,9,-3,-8,-10,3,-9,-3,-4,1,8,1,10,7,1,1,7,9,3,-7,6,1,4,-10,-6,10,-7,-9,2,-8,-7,7,7,4,-3,4,-10,5,-8,2,-4,-10,-7,9,5,2,-6,-6,5,4,-10,7,3,5,5,-5,-4,-1,4,-10,-1,10,1,2,-5,-4,-7,6,3,1,-1,-8,-1,-5,2,3,6,-1,-9,-5,-1,9,9,10,-7,1,-9,-2,-7,7,-2,3,4,-7,6,9,-10,-7,-4,-3,10,-2,3,9,-2,-9,7,-2,-5,5,-2,1,3,-1,7,-1,-9,3,-6,2,-9,10,-5,8,-5,1,7,7,10,-10,-5,-3,3,-6,10,-7,-1,4,3,-5,-5,4,-10,6,3,8,-7,2,-9,-9,6,-6,2,2,4,-4,6,2,10,-8,4,-3,-9,10,-3,4,4,-4,-2,4,6,6,7,-9,-8,4,-5,4,1,-9,-5,-2,3,-7,-4,2,2,-3,-7,-10,1,6,10,-7,4,-5,-9,7,-5,-8,9,1,7,10,8,9,-3,-3,-5,-2,-6,-9,4,-8,2,1,5,3,-8,6,-5,3,-9,1,-9,-4,-1,-2,1,-5,-8,-6,-8,7,-4,-2,-9,6,-1,4,1,-5,-3,7,-8,8,-9,-1,3,-3,-2,-5,9,-6,10,10,-10,-2,-3,6,1,9,8,7,7,-6,6,-7,5,-5,5,-4,2,7,-5,9], dtype = "int16")#candidate|14295|(810,)|const|int16
const_14296 = relay.const([-6,-6,-6,-4,10,-6,-4,2,5,7,-2,7,6,-4,-10,1,-8,8,9,-8,3,-8,6,8,-9,3,6,1,-4,9,8,9,-8,-3,10,-8,7,9,7,-5,4,6,-9,-4,-3,-8,-2,8,5,-6,3,5,-1,-3,4,5,-5,-8,9,7,4,5,-2,5,-6,-2,5,1,4,4,-4,-5,-9,3,-4,2,-8,1,3,1,7,2,-3,-9,9,-6,-2,3,-2,1,-9,-4,-3,-10,1,8,5,1,5,4,3,6,-10,9,5,10,5,4,-8,-4,6,-8,-4,-8,9,10,1,-7,6,5,-6,-9,6,8,-8,5,-6,6,2,-8,7,2,5,10,-5,-7,7,-1,7,-9,4,10,6,2,1,10,-8,-5,4,-6,-10,10,-7,2,-2,3,-6,-8,1,2,-7,-2,-7,-10,4,-1,-9,4,4,1,9,-2,9,5,9,5,-2,-3,-4,1,6,-4,5,-10,4,-4,7,5,-7,9,-2,2,-1,-2,-5,-5,-4,-6,5,-9,9,-1,1,-4,10,4,8,-5,-10,-6,-9,8,7,6,3,-2,-9,1,-1,-10,-10,5,2,-9,-7,1,-3,3,4,2,3,10,-7,3,5,2,-10,3,5,6,6,-9,-6,-1,-10,-8,6,-6,-8,-4,-4,8,1,6,7,9,-9,4,-3,-6,7,7,-3,-10,-3,5,1,1,-7,10,-9,7,1,3,-6,6,-4,-9,-9,-9,-3,10,-8,-6,8,-8,8,6,9,-3,10,-10,-6,5,-10,-8,1,-9,-10,5,-2,6,-10,-1,-4,6,6,10,7,-7,-10,-9,2,-9,4,2,-8,-8,-3,-9,-3,-10,-1,9,6,2,-1,-4,-1,-7,6,1,-10,-4,7,-1,-6,-9,3,-2,6,-2,9,9,-10,4,-8,2,5,-2,-7,5,5,-10,-4,5,8,-4,-5,6,-3,-1,-9,-10,7,9,6,7,7,-8,-10,10,2,5,-9,1,3,-5,-5,7,7,-7,-9,4,4,9,-7,-3,5,6,-9,7,1,4,-7,1,6,-8,-4,3,6,-5,-10,-4,6,-8,9,7,-7,9,2,9,7,3,8,1,-7,-7,-3,-2,2,-4,-7,-2,-3,-10,8,3,7,-7,1,10,-4,-4,9,8,10,-2,-6,-3,5,4,-5,1,2,-6,7,10,3,10,2,3,3,-8,10,-10,7,10,-2,1,-10,8,2,-9,-1,-7,1,4,-5,-5,-4,-2,8,2,-5,-3,-1,-10,-10,-10,-10,-6,6,6,-2,8,3,-6,2,-8,-2,-1,5,-6,10,6,2,4,-9,9,9,-9,7,-3,5,5,-6,8,8,4,9,-2,1,-7,4,4,-3,-8,-10,1,-4,-3,-3,-2,5,2,8,-5,8,1,-9,-7,-10,5,8,5,2,-2,9,7,10,7,3,-6,5,-5,4,9,1,-2,-9,10,-3,8,4,5,5,3,6,-1,9,-7,9,5,-9,-8,-3,2,9,-7,5,1,6,10,-5,4,6,-5,7,-5,-8,-7,-9,9,6,3,10,3,-7,-9,-1,-6,-4,2,-2,10,-9,-3,3,-8,-7,-2,6,2,-8,6,4,8,5,-1,-6,9,7,4,5,1,-5,-9,-10,-4,4,10,4,-7,-6,7,1,-7,-9,8,-5,6,-2,10,-7,-2,6,8,8,10,6,-7,-3,-5,7,8,10,9,8,4,6,4,-8,2,10,3,7,-4,6,7,-1,-3,-7,-5,-4,10,-4,1,-1,-9,3,8], dtype = "int8")#candidate|14296|(672,)|const|int8
var_14297 = relay.var("var_14297", dtype = "int16", shape = (1092,))#candidate|14297|(1092,)|var|int16
call_14293 = relay.TupleGetItem(func_6498_call(relay.reshape(var_14294.astype('int32'), [12, 3, 2]), relay.reshape(var_14294.astype('int32'), [12, 3, 2]), relay.reshape(const_14295.astype('int16'), [810,]), relay.reshape(const_14296.astype('int8'), [672,]), relay.reshape(var_14297.astype('int16'), [1092,]), ), 1)
call_14298 = relay.TupleGetItem(func_6504_call(relay.reshape(var_14294.astype('int32'), [12, 3, 2]), relay.reshape(var_14294.astype('int32'), [12, 3, 2]), relay.reshape(const_14295.astype('int16'), [810,]), relay.reshape(const_14296.astype('int8'), [672,]), relay.reshape(var_14297.astype('int16'), [1092,]), ), 1)
output = relay.Tuple([call_14289,call_14293,var_14294,const_14295,const_14296,var_14297,])
output2 = relay.Tuple([call_14290,call_14298,var_14294,const_14295,const_14296,var_14297,])
func_14301 = relay.Function([var_14294,var_14297,], output)
mod['func_14301'] = func_14301
mod = relay.transform.InferType()(mod)
var_14302 = relay.var("var_14302", dtype = "int32", shape = (72,))#candidate|14302|(72,)|var|int32
var_14303 = relay.var("var_14303", dtype = "int16", shape = (1092,))#candidate|14303|(1092,)|var|int16
output = func_14301(var_14302,var_14303,)
func_14304 = relay.Function([var_14302,var_14303,], output)
mutated_mod['func_14304'] = func_14304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13352_call = mod.get_global_var('func_13352')
func_13354_call = mutated_mod.get_global_var('func_13354')
call_14361 = func_13352_call()
call_14362 = func_13352_call()
output = relay.Tuple([call_14361,])
output2 = relay.Tuple([call_14362,])
func_14375 = relay.Function([], output)
mod['func_14375'] = func_14375
mod = relay.transform.InferType()(mod)
mutated_mod['func_14375'] = func_14375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14375_call = mutated_mod.get_global_var('func_14375')
call_14376 = func_14375_call()
output = call_14376
func_14377 = relay.Function([], output)
mutated_mod['func_14377'] = func_14377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9803_call = mod.get_global_var('func_9803')
func_9804_call = mutated_mod.get_global_var('func_9804')
call_14395 = func_9803_call()
call_14396 = func_9803_call()
func_9803_call = mod.get_global_var('func_9803')
func_9804_call = mutated_mod.get_global_var('func_9804')
call_14397 = func_9803_call()
call_14398 = func_9803_call()
output = relay.Tuple([call_14395,call_14397,])
output2 = relay.Tuple([call_14396,call_14398,])
func_14411 = relay.Function([], output)
mod['func_14411'] = func_14411
mod = relay.transform.InferType()(mod)
output = func_14411()
func_14412 = relay.Function([], output)
mutated_mod['func_14412'] = func_14412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11928_call = mod.get_global_var('func_11928')
func_11929_call = mutated_mod.get_global_var('func_11929')
call_14413 = func_11928_call()
call_14414 = func_11928_call()
output = relay.Tuple([call_14413,])
output2 = relay.Tuple([call_14414,])
func_14416 = relay.Function([], output)
mod['func_14416'] = func_14416
mod = relay.transform.InferType()(mod)
mutated_mod['func_14416'] = func_14416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14416_call = mutated_mod.get_global_var('func_14416')
call_14417 = func_14416_call()
output = call_14417
func_14418 = relay.Function([], output)
mutated_mod['func_14418'] = func_14418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14411_call = mod.get_global_var('func_14411')
func_14412_call = mutated_mod.get_global_var('func_14412')
call_14431 = relay.TupleGetItem(func_14411_call(), 1)
call_14432 = relay.TupleGetItem(func_14412_call(), 1)
output = relay.Tuple([call_14431,])
output2 = relay.Tuple([call_14432,])
func_14435 = relay.Function([], output)
mod['func_14435'] = func_14435
mod = relay.transform.InferType()(mod)
mutated_mod['func_14435'] = func_14435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14435_call = mutated_mod.get_global_var('func_14435')
call_14436 = func_14435_call()
output = call_14436
func_14437 = relay.Function([], output)
mutated_mod['func_14437'] = func_14437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14450 = relay.var("var_14450", dtype = "bool", shape = (14, 15, 12))#candidate|14450|(14, 15, 12)|var|bool
const_14451 = relay.const([[[True,True,False,True,True,False,False,True,False,False,False,False],[False,True,False,False,False,False,False,True,True,False,True,False],[False,False,True,True,True,True,True,True,False,False,False,False],[False,False,True,False,True,False,True,True,True,True,True,True],[True,True,False,False,True,True,False,False,False,False,True,True],[True,False,False,False,False,False,False,True,True,True,True,False],[True,False,True,False,True,False,False,False,True,False,False,True],[False,True,True,False,True,False,True,False,False,False,False,True],[False,False,False,True,False,True,True,True,False,False,False,True],[False,False,False,False,False,False,True,False,True,False,False,False],[False,False,True,False,False,True,True,False,False,True,False,False],[True,True,True,True,False,True,False,False,True,False,False,False],[True,True,False,False,True,True,True,True,True,False,False,True],[True,True,True,True,True,True,True,False,True,True,True,True],[False,True,True,False,False,False,False,True,True,False,True,True]],[[True,False,False,False,False,False,True,False,False,True,True,True],[False,True,True,True,False,False,False,False,True,False,False,True],[False,False,False,True,True,False,False,False,False,True,True,True],[True,False,True,True,True,False,False,False,True,True,True,True],[True,False,False,True,False,False,False,False,True,True,True,False],[True,False,False,True,True,True,False,False,False,True,False,True],[False,False,True,True,False,True,True,True,True,True,False,True],[True,True,True,False,False,False,False,True,False,True,False,True],[False,True,False,False,False,False,False,False,False,True,False,False],[False,True,False,True,False,False,False,True,True,True,False,True],[False,False,False,False,True,True,False,False,False,False,False,False],[False,False,True,False,False,True,True,False,False,True,False,False],[True,False,True,True,False,True,False,False,False,True,False,True],[False,False,True,False,False,False,False,False,False,True,True,False],[False,False,True,False,True,True,False,False,True,False,True,True]],[[True,False,True,True,True,False,True,True,False,False,True,True],[False,True,True,True,True,False,True,True,False,False,False,True],[True,False,False,True,False,True,False,False,True,False,True,False],[False,False,True,False,True,False,True,True,False,True,False,True],[True,False,False,False,False,False,True,False,True,True,True,True],[True,True,True,False,True,True,True,True,True,False,False,False],[True,True,False,True,False,False,False,False,False,False,False,True],[True,True,True,False,True,False,True,False,True,True,False,True],[False,True,False,True,False,False,False,True,False,False,False,False],[False,False,False,True,False,False,False,True,False,True,True,True],[True,True,True,False,False,True,True,False,True,False,True,True],[False,True,False,False,True,False,True,False,False,True,True,False],[False,True,False,False,False,True,True,True,False,False,True,False],[True,True,False,False,True,False,True,True,True,True,False,True],[True,True,True,True,False,False,False,False,True,False,False,True]],[[True,True,False,False,True,True,False,True,False,True,True,True],[True,True,True,False,False,True,True,False,False,False,True,False],[False,True,True,True,True,True,False,True,True,False,True,False],[False,True,True,False,False,True,False,True,False,True,False,False],[False,True,False,False,False,False,False,False,True,True,False,True],[True,False,False,False,True,True,False,True,False,False,True,True],[True,True,False,True,False,False,True,False,False,False,False,False],[False,True,False,True,False,False,False,True,True,False,True,False],[True,False,True,False,False,False,True,True,False,True,False,False],[False,True,True,False,True,True,False,True,False,False,True,True],[True,True,False,False,False,False,False,True,False,True,True,False],[True,False,True,True,False,True,False,False,False,True,False,False],[False,False,True,True,False,False,False,True,False,False,True,False],[False,True,True,False,False,True,False,False,True,True,True,True],[False,True,True,True,False,True,True,True,True,False,False,False]],[[True,False,True,True,False,True,True,True,False,False,True,True],[True,False,True,True,True,False,False,False,False,False,True,False],[True,False,True,True,False,True,True,True,True,False,False,False],[True,True,True,False,False,False,True,True,False,False,False,False],[False,True,False,False,True,True,True,False,True,False,True,True],[False,False,True,True,True,True,True,False,True,False,False,True],[True,True,False,True,True,True,True,False,False,True,False,True],[False,True,True,True,False,True,True,False,True,False,True,False],[True,True,True,False,True,True,True,False,True,False,False,False],[True,True,False,True,True,True,False,True,False,True,True,False],[False,False,False,False,False,False,False,True,True,True,False,False],[True,True,True,False,True,True,False,False,False,True,True,True],[False,True,True,False,True,False,True,True,False,True,True,False],[True,False,True,False,True,True,True,False,True,False,False,False],[True,True,True,True,False,False,True,False,False,False,False,True]],[[False,True,False,False,True,False,False,False,False,True,True,True],[True,False,False,False,False,False,False,True,True,True,False,True],[False,True,True,False,True,False,True,True,True,True,True,False],[True,True,True,True,True,False,True,False,False,True,False,False],[True,False,True,True,False,True,False,False,True,False,False,False],[False,True,False,True,False,True,False,False,True,True,True,False],[True,False,False,True,True,False,True,True,False,False,False,False],[True,False,False,False,False,False,True,False,True,True,False,False],[False,False,False,True,True,True,True,False,False,True,True,True],[True,False,False,False,False,False,False,True,True,True,False,True],[True,True,False,True,False,False,True,False,False,True,False,True],[False,True,True,False,True,False,False,False,False,False,False,False],[True,True,True,False,False,True,True,True,False,True,False,False],[True,True,True,True,False,True,False,True,False,True,True,True],[True,True,False,True,False,False,True,True,True,True,True,True]],[[False,False,True,True,False,True,True,True,True,False,True,True],[True,True,False,False,True,False,True,False,True,True,False,True],[False,True,False,True,False,True,True,True,False,False,False,False],[True,True,True,False,False,False,False,True,False,False,True,True],[False,True,True,False,False,True,True,False,True,False,False,True],[True,True,False,True,True,False,True,False,False,True,True,False],[True,True,True,True,True,True,False,False,False,False,False,False],[True,True,True,False,True,True,False,True,False,False,False,True],[True,False,True,True,True,False,True,False,True,False,False,True],[True,False,True,True,False,True,False,False,False,True,False,False],[False,False,True,False,True,True,True,False,True,False,True,False],[True,False,True,False,False,True,True,False,True,False,True,False],[True,True,False,False,False,False,False,False,True,True,False,False],[False,True,False,False,False,True,False,True,True,True,True,True],[False,True,True,False,True,True,False,True,False,False,True,True]],[[False,True,True,True,False,False,True,False,True,True,False,True],[False,True,False,True,False,False,True,True,True,False,True,False],[True,True,True,False,True,False,True,True,True,False,True,True],[False,False,False,False,False,False,True,False,True,False,False,False],[False,True,True,True,True,False,True,True,True,True,True,False],[True,False,True,True,False,False,False,True,True,False,True,True],[True,False,True,False,False,True,False,False,False,True,True,False],[True,True,True,False,False,False,False,True,False,False,False,False],[False,True,True,True,True,False,False,False,True,False,True,True],[True,True,False,False,True,True,False,False,False,True,True,False],[True,True,False,True,True,False,True,False,True,True,True,True],[True,False,True,False,False,False,False,True,False,False,True,True],[True,True,True,False,False,False,False,True,False,False,False,True],[True,False,True,False,True,True,True,False,True,True,True,True],[True,True,False,True,True,False,False,False,True,False,False,False]],[[False,True,True,False,True,False,False,False,False,True,True,True],[False,False,True,True,True,False,False,True,True,True,False,False],[True,True,True,False,True,True,False,True,False,False,False,False],[False,False,False,False,True,True,True,False,False,False,True,True],[True,False,False,False,True,True,True,False,False,False,False,True],[True,True,False,False,True,False,False,True,False,False,True,False],[False,False,False,False,False,True,True,True,True,False,False,False],[True,True,False,True,True,True,False,False,False,False,False,True],[True,False,False,True,True,True,True,True,True,True,True,True],[True,False,True,False,False,True,True,True,False,True,False,True],[False,False,True,False,True,False,True,False,False,True,True,True],[False,True,False,True,False,True,True,True,False,False,False,False],[True,True,False,True,False,False,False,True,True,True,True,False],[True,True,False,False,False,True,True,True,False,False,False,True],[True,True,False,True,True,False,False,False,True,False,True,False]],[[False,True,True,True,True,False,True,False,True,True,False,False],[True,False,True,True,False,True,False,True,True,True,True,False],[True,True,True,True,True,False,True,True,False,False,True,True],[False,False,True,False,False,False,False,True,False,True,False,False],[False,True,True,True,False,False,False,True,True,True,False,False],[True,True,False,True,True,True,False,False,True,False,False,True],[False,False,False,False,True,True,False,True,False,True,True,False],[False,True,True,True,False,False,False,True,True,False,True,True],[True,True,True,False,True,True,False,True,True,False,True,False],[True,True,True,True,True,False,True,True,True,True,False,True],[True,False,True,False,False,False,True,True,True,False,False,True],[True,False,False,False,False,False,False,False,True,False,True,False],[False,True,True,False,False,False,True,True,False,False,True,True],[False,True,False,False,True,False,True,True,False,True,True,True],[True,False,True,True,False,False,True,False,True,True,False,True]],[[True,False,False,True,False,False,False,True,True,True,True,False],[True,False,True,False,True,True,True,True,True,False,False,True],[False,True,True,False,False,False,True,True,False,False,True,False],[False,True,True,True,False,False,True,False,False,True,False,False],[False,True,True,True,True,True,False,True,False,True,True,True],[True,True,False,True,True,True,False,True,True,True,False,True],[False,True,True,False,False,True,False,False,False,True,True,True],[False,True,True,True,True,False,False,False,True,False,False,False],[False,False,True,True,True,True,False,True,True,False,False,True],[True,False,False,False,False,True,True,False,True,False,True,False],[True,True,False,False,False,False,True,False,False,False,True,False],[False,True,True,True,True,True,False,True,False,False,True,False],[False,False,False,True,True,False,True,False,True,True,False,True],[False,True,True,False,False,False,False,False,False,False,True,True],[True,True,False,True,False,True,True,False,False,False,True,True]],[[False,False,True,True,True,True,True,True,True,False,False,True],[True,False,True,True,False,False,False,False,True,True,True,True],[False,True,True,False,True,False,True,True,False,False,False,False],[False,True,True,True,False,True,False,True,False,True,False,False],[True,False,False,False,True,False,False,False,True,True,False,False],[False,False,True,False,False,True,False,False,True,False,True,True],[True,True,False,True,False,False,False,True,False,False,False,False],[False,False,False,True,True,False,True,True,False,False,False,True],[False,False,True,True,False,True,False,False,False,False,True,True],[False,True,False,False,False,False,False,False,False,False,False,False],[True,True,True,True,False,True,False,False,False,False,True,False],[True,True,False,True,True,False,False,True,True,True,True,True],[True,False,False,False,False,False,False,True,True,True,True,True],[True,True,True,True,True,False,True,False,True,False,False,False],[False,False,True,True,True,True,True,True,True,True,True,True]],[[True,True,True,False,False,False,False,True,True,True,False,True],[False,False,True,True,False,True,False,False,False,True,True,True],[False,False,False,True,True,True,True,False,False,False,True,True],[False,True,False,True,False,True,False,False,True,False,False,True],[True,False,True,True,True,False,True,False,True,True,True,False],[True,False,True,True,False,False,False,False,True,True,False,True],[False,False,False,True,False,False,False,False,False,True,True,True],[True,False,True,False,False,True,True,True,True,False,False,False],[False,True,False,True,False,False,False,False,True,False,True,True],[False,True,True,False,False,True,False,True,True,True,False,True],[False,True,False,False,True,True,False,True,False,False,False,False],[True,False,False,False,True,True,True,True,False,True,False,False],[False,False,True,True,True,True,True,False,False,True,False,True],[False,False,False,False,False,False,False,True,True,False,True,False],[True,True,True,True,False,True,True,False,True,True,True,True]],[[False,False,True,True,False,True,False,False,True,True,True,True],[True,True,True,False,False,False,False,True,True,False,True,True],[True,False,True,True,True,True,False,False,True,True,True,True],[False,True,False,True,False,True,False,False,False,True,False,False],[False,True,False,True,True,True,True,False,True,False,True,True],[True,True,True,True,False,False,False,False,True,False,True,False],[True,False,False,False,True,False,False,True,True,False,True,False],[True,False,True,True,False,False,False,False,False,True,True,False],[True,True,True,False,False,False,False,True,False,False,True,False],[True,False,True,False,False,False,True,False,False,False,True,True],[False,True,True,False,False,False,True,True,True,False,True,True],[False,False,True,True,False,False,True,True,False,False,False,True],[True,True,True,True,True,False,False,True,True,True,False,True],[True,True,False,True,True,True,False,True,True,True,False,False],[False,True,True,False,False,True,True,True,False,False,False,True]]], dtype = "bool")#candidate|14451|(14, 15, 12)|const|bool
bop_14452 = relay.logical_and(var_14450.astype('bool'), relay.reshape(const_14451.astype('bool'), relay.shape_of(var_14450))) # shape=(14, 15, 12)
output = relay.Tuple([bop_14452,])
output2 = relay.Tuple([bop_14452,])
func_14455 = relay.Function([var_14450,], output)
mod['func_14455'] = func_14455
mod = relay.transform.InferType()(mod)
var_14456 = relay.var("var_14456", dtype = "bool", shape = (14, 15, 12))#candidate|14456|(14, 15, 12)|var|bool
output = func_14455(var_14456)
func_14457 = relay.Function([var_14456], output)
mutated_mod['func_14457'] = func_14457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10436_call = mod.get_global_var('func_10436')
func_10438_call = mutated_mod.get_global_var('func_10438')
call_14468 = relay.TupleGetItem(func_10436_call(), 0)
call_14469 = relay.TupleGetItem(func_10438_call(), 0)
func_14087_call = mod.get_global_var('func_14087')
func_14092_call = mutated_mod.get_global_var('func_14092')
const_14476 = relay.const([[2,2,6,-9,7,7,6,-7,-6,9,5,9,-1,10,-8,5,-6,2,-6,1,2,7,5,1,2,1,5,-1,4,8,-10,1,-2,9,5,-1,2,-7,2,6,-9,1,-8,2,4,1,-5,-9,7,-6,2,9,5,-8,-3,3,3,8,4,3,-2,-1,9,5,-10,6,8,5,-3,-2,-9,-8,9,-4,-6,1,1,6,-2,6,1,5,1,-7,-2,1,-6,-4,5,-7,6,10,10,9,-8,-5,9,10,-1,-2,-8,6,2,-6,-9,1,-3,-3,8,6,-7,6,-2,-5,5,-5,2,6,3,-4,-7,8,-7,-2,10,-2,-8,2,5,10,-5,-3,-8,3,-3,4,10,-9,-10,2,6,9,-2,-1,-8,-9,9,2,-10,-9,-1,-4,-4,10,3,-5,7,2,-7,-6,-5,-10,6,-2,-8,-1,3,-2,8,10,-5,8,-1,9,5,-2,10,-7,-7,-5,9,8,1,10,3,9,-6,-9,-9,-6,-6,7,4,4,-2,-8,5,6,7,5,7,-7,-3,2,7,-10,-8,-8,-10,4,1,6,10,-2,-7,7,3,9,-10,-1,10,-9,8,-1,-2,-2,-10,1,-8,9,1,9,9,1,-10,-8,2,9,5,-10,-6,1,1,-8,-8,6,2,-5,-5,4,-1,-4,-10,-4,-2,3,5,5,-10,6,-9,-9,-10,-6,3,10,2,6,6,6,-4,-7,-3,-6,-7,-10,5,-9,-4,-9,5,-10,3,9,-7,9,-4,-2,-3,1,-3,6,10,4,-2,-10,4,6,-7,-9,9,-8,8,-1,2,-1,-3,-4,4,-7,-5,-3,-9,6,-5,-2,5,-7,-4,2,-8,-1,-9,4,-7,10,-9,10,-4,-6,1,3,-2,7,-9,-1,3,8,9,7,-4,-9,-2,3,-5,-6,10,2,-10,-5,-9,5,-10,-6,-8,6,-10,7,4,-9,-10,7,4,2,-10,4,5,3,-6,-4,-2,8,-7,-5,6,2,-10,-6,8,-10,-6,8,-8,5,-10,10,-1,-7,3,9,-5,-7,-10,1,2,-4,8,10,-3,-9,5,-8,-6,-5,6,-2,7,-5,-4,-2,-8,7,-10,-1,9,7,-7,-2,-9,-6,3,5,-7,4,1,-10,-4,-4,-1,7,-6,5,1,-8,4,-7,-4,-4,7,2,6,6,8,-4,6,10,8,-7,3,-3,-1,-4,5,6,10,9,-10,5,6,9,-3,-5,-6,-3,-8,-8,9,4,3,-7,7,-8,2,7,7,3,6,-2,-10,1,-3,7,-2,5,2,-8,-9,-8,-2,-10,-2,8,1,-10,6,7,10,-1,-8,10,8,8,4,8,-2,4,1,4,3,3,7,9,5,-2,6,-10,7,4,6,9,2,2,5,-7,9,-10,-1,6,10,-8,7,5,-8,7,-10,-1,-10,-10,-8,7,-9,6,5,6,9,4,-4,1,-7,-5,7,-3,-9,-5,-10,-8,9,-8,5,2,8,1,-6,-3,3,1,-3,10,-5,-3,-7,-5,5,5,-7,-4,-4,4,-9,2,-4,3,-7,-3,8,-9,-5,5,8,-9,-6,8,2,-1,-1,-3,8,-6,9,-7,-3,5,-1,-9,-8,-3,-5,-4,7,6,-8,2,-4,-9,8,-1,-4,-1,5,-3,-2,7,1,4,7,-3,8,-1,6,7,-7,4,-5,6,7,-4,8,-6,-7,5,2,-8,-5,-5,10,2,-10,-9,-3,6,-4,1,-6,-1,9,6,7,-2,-5,-3,6,-4,-6,-3,10,1,2,8,-10,8,8,-1,-9,7,-9,-1,-8,1,-8,2,-4,1,-4,-3,-9,-4,-6,-10,-7,9,9,-10,4,2,-8,9,-7,9,9,-8,2,5,-8,-2,-2,-2,10,-10,5,-6,4,6,-6,-7,-4,5,-6,3,5,-10,8,-10,3,-3,-1,1,4,9,2,-7,10,4,2,1,-7,-8,2,-3,9,-3,-5,-8,-4,9,2,6,-7,9,2,-9,-2,1,-9,10,2,-8,10,6,-2,1,10,-9,10,6,-9,-8,-4,-6,-5,10,-10,4,6,-3,4,6,3,-1,-3,-4,4,3,5,2,6,7,4,-3,3,1,-1,-1,2,9,9,-8,-7,10,2,2,-5,3,4,10,-3,-5,7,1,8,-5,-5,-9,-5,6,2,-3,-1,-6,4,10,-6,4,-3,-5,6,7,4,-6,6,4,2,-4,-6,7,6,-9,-4,-8,-9,7,2,9,-1,-2,-8,6,-8,4,3,-5,-1,-3,-7,-4,-3,-2,-9,2,-3,-7,-3,-3,-5,6,-8,-7,3,-8,1,7,-4,-1,-7,3,9,2,-4,4,4,5,9,3,-2,-4,-2,8,-9,9,4,-7,3,-7,-6,4,9,4,-1,-1,7,-7,6,6,-6,1,-8,-3,10,8,10,-8,3,-6,6,-9,-3,-5,-10,4,8,6,-8,9,-10,5,-8,9,-2,8,-4,-2,-1,-6,10,9,-9,-5,5,-4,10,-4,-2,-2,10,4,-4,1,-5,-8,-8,2,3,4,-9,10,-10,10,9,-6,-1,-3,7,2,-10,7,-1,-5,4,10,-10,5,-7,9,8,-5,6,-5,1,-4,-10,-8,10,5,3,-9,8,-2,-10,10,-8,6,4,-8,-9,-7,5,-1,-1,9,2,8,2,4,10,-8,3,-4,-3,4,-7,2,8,-7,8,2,1,-9,-9,5,-8,-8,6,10,4,-3,6,-1,7,-3,3,8,-7,-7,1,-4,6,2,5,3,-7,-8,-2,-7,-8,-7,-8,-5,1,9,-5,-10,6,2,5,1,-2,5,10,4,-4,9,5,7,9,5,-1,-4,9,10,-3,-6,-10,10,4,-7,6,-10,-3,4,-3,5,-8,-2,-7,2,1,-5,-10,-10,9,-3,-7,-6,8,-10,3,-6,4,-7,-8,1,9,-2,-10,-1,2,-6,7,-9,1,7,-5,-4,-8,-2,-2,-8,10,7,-2,1,-2,-5,6,-3,3,3,-10,-9,-8,7,-5,-10,-2,-4,-5,10,-9,-6,7,6,-9,10,-5,-10,-9,4,9,-8,1,7,7,3,10,-3,-9,1,-7,9,-7,5,-7,1,-3,9,2,-9,-1,5,4,-2,-8,-2,3,6,-2,7,2,-5,8,-10,-10,-9,3,-6,-3,-9,1,-7,5,-6,6,8,1,4,9,-2,-7,2,5,7,6,1,7,2,1,1,-1,-7,4,4,7,2,6,-4,-2,1,6,5,-9,-7,5,10,-9,-10,8,6,-1,1,-4,10,-7,2,-2,9,4,-4,6,-6,-8,-7,4,6,-4,5,-4,-2,4,4,-10,7,-1,-2,-2,-9,7,-1,-1,-6,-3,-1,-4,8,6,5,-7,2,3,4,-4,-8,-10,2,5,6,-9,-5,-9,-2,-8,-5,-9,-4,10,-8,10,-5,-6,-4,5,6,-7,6,5,3,4,10,-2,6,2,-8,1,-5,-10,-5,-8,-8,4,-1,1,4,-1,-9,-9,-6,-8,-3,8,5,8,-5,-2,9,9,9,-3,5,9,6,-8,9,9,-6,-2,6,-10,-6,6,-10,-5,-6,2,-2,-7,7,5,3,1,-2,10,-3,-9,-5,-4,1,-2,10,8,2,-4,-3,8,2,7,2,-2,-10,-4,9,7,-9,-6,-2,-3,-2,-5,6,10,3,-2,7,-10,6,-9,5,-4,5,-3,6,3,-3,-2,-4,-8,2,-1,-5,-5,8,5,-9,8,-9,-5,7,3,-8,10,9,-10,8,-1,6,-2,-9,-6,6,-4,-4,-1,9,-2,1,1,-10,3,6,-8,10,-5,-9,-7,6,1,2,-3,-8,-8,-7,-10,-1,4,7,-10,-6,-5,-7,-9,6,10,-3,-1,-8,-1,9,3,-2,-9,-2,5,-1,10,-3,-10,-2,8,-3,-8,9,7,9,-10,-10,-2,-6,-8,-7,7,-9,2,-7,-9,-9,-3,-4,-8,2,-6,5,-5,-4,1,3,-5,7,6,-8,-6,9,7,2,8,1,6,-1,10,4,-9,1,1,-1,-2,9,-6,-9,-4,6,3,-6,-5,2,2,-9,4,5,8,10,3,-9,-2,1,7,9,-7,1,-4,9,2,7,8,1,7,5,3,-10,2,2,-1,1,8,3,-6,7,2,4,-7,-5,6,-6,-6,5,-10,-9,-10,2,-2,-1,9,6,4,-3,-5,-5,10,10,-2,8,-4,4,7,3,2,8,1,-7,6,-6,-8,-1,-4,8,6,7,-3,3,8,-9,-9,6,-3,-5,-2,-1,1,3,-5,-1,-7,10,-1,1,-10,-4,7,10,-2,2,-5,-6,-7,4,-10,-2,3,-10,-8,4,1,-8,7,-2,-3,4,-9,6,9,-7,-5,9,-2,2,10,-7,-3,1,3,8,-10,-5,5,5,3,5,3,-10,3,-7,8,-5,-1,1,-2,1,3,10,-9,-2,-9,4,2,-8,-6,7,-1,4,-9,-7,6,-2,3,-7,-9,7,-7,-9,-3,-2,-2,-2,3,6,-3,-4,10,-9,10,-5,4,-4,-1,8,9,-4,2,7,-1,9,5,-4,1,-8,-9,9,-3,6,7,-9,-5,9,-8,-3,1,-7,-5,-3,-4,7,-4,-9,-9,-2,-9,3,3,-1,10,3,6,-10,-1,-7,-6,10,-1,6,6,-6,-8,-10,3,-3,7,-6,4,-6,-3,-9,7,6,10,8,9,-10,-3,7,4,-10,-5,-8,4,-3,-6,5,-2,1,-4,-8,3,1,10,1,-7,-9,-7,3,-10,10,9,-9,-10,-2,9,9,-10,5,10,6,-7,2,-1,-7,9,4,7,-8,-2,-1,-10,3,3,-10,6,-10,10,-8,7,9,-5,6,6,8,4,-1,2,-6,1,-9,1,-9,1,1,5,6,5,-1,-5,1,10,6,5,8,10,-5,7,2,-3,8,5,7,7,10,-9,-1,-4,-1,-1,-7,4,-1,-9,-1,-8,-2,2,-2,9,10,5,-5,2,-10,-4,-3,-10,-9,9,-3,8,9,-5,10,-5,10,-4,2,10,9,8,2,6,9,3,2,7,3,4,-6,4,2,-2,1,6,-7,2,4,-5,5,3,9,-3,-4,4,8,7,-3,6,-2,-6,7,-10,-7,-4,-3,2,-8,4,1,-1,5,3,-6,4,1,9,-7,1,-4,-6,1,-8,-4,3,10,6,-2,3,-8,-8,-8,-1,5,-1,-6,-5,7,-7,6,6,-4,1,-3]], dtype = "int64")#candidate|14476|(1, 1960)|const|int64
const_14477 = relay.const([[-4,1,-2,-8,6,-1,-4,-2,6,5,1,-10,-10,6,-2,-7,1,-8,7,-7,2,7,-6,4,-5,7,-8,8,3,5,-4,-2,2,-7,6,2,-1,-5,-10,-7,9,-10,1,7,3,1,-4,-2,5,-3,-1,-2,-6,9,7,2,2,-2,-1,8,1,-3,4,-1,-5,1,-1,-10,9,4,7,-3,9,3,6,-6,-3,-2,-6,-6,-7,-7,-10,-5,6,7,5,-4,7,6,1,10,3,-10,3,10,-3,-8,3,1,1,3,-10,-2,-4,-10,-2,-8,-10,-4,6,-3,-2,-1,-2,-4,-2,3,-6,9,-5,7,-7,2,5,2,-3,-10,6,10,6,5,1,-10,-4,8,-5,-9,-10,-2,1,8,-9,-9,-10,4,-2,-1,-6,-1,9,-2,-4,7,-1,9,-2,-6,-5,-7,3,-10,10,-10,-4,9,-10,-8,-1,8,-5,-6,4,-10,-8,-6,8,-5,-7,5,6,5,-6,-10,-7,10,5,-8,9,-10,5,-5,-1,-1,7,-2,-1,-9,-1,5,7,-9,-1,-3,-9,7,-10,6,5,4,5,-5,6,-5,-4,4,-6,-6,-1,7,-6,3,9,1,-9,5,2,2,7,2,8,7,-10,10,5,-3,-4,-7,8,-6,-3,-10,-5,3,-8,5,1,-9,-6,4,6,10,-4,2,7,6,9,4,-6,5,-2,-1,2,-5,9,-10,5,-7,-9,10,7,5,-1,9,6,3,-6,-2,-4,-9,-6,-10,-10,-1,-3,4,-6,5,8,5,2,5,-2,-10,-5,1,-9,6,5,-8,-8,-10,1,-2,-3,-6,-4,-5,-7,-5,4,-4,5,2,-7,10,-1,2,8,-3,-2,8,-8,-4,-5,-7,-3,2,3,9,4,-7,-2,9,4,2,10,4,10,5,5,6,7,7,4,9,-7,-7,7,10,-7,-9,-2,-9,1,10,9,7,8,5,-9,-1,5,7,3,5,-10,1,9,4,5,9,2,10,-9,-1,1,7,2,-8,-9,-7,9,-1,-7,2,3,-5,-5,-4,-10,-3,8,9,-3,-5,9,-3,1,1,-3,1,2,10,3,-4,-10,5,6,-8,-10,1,-8,-10,-10,-8,-3,6,4,-5,-1,-9,-5,-9,-10,-9,-1,-10,7,-7,-10,-10,3,-10,-4,-4,-3,6,-1,8,1,10,10,-2,-1,-5,-3,5,3,-4,10,1,-3,1,9,5,-9,-3,-6,-7,5,7,-7,5,8,6,-9,9,-4,-8,-10,-5,10,9,5,1,9,2,-2,5,-8,6,-8,1,-5,-4,-2,7,9,7,3,-7,-8,10,6,10,6,3,-10,5,3,-2,8,-8,5,-4,5,-3,-10,3,-8,-2,-8,8,9,-5,3,-7,7,2,1,2,-5,9,8,1,-6,10,-10,-1,-2,-1,-6,-7,-4,-6,-3,8,-3,-5,-8,9,-1,-7,-9,-10,-7,-7,-7,-5,-3,5,9,-6,-10,-5,7,-4,5,9,-4,-5,10,-5,6,10,-10,5,-8,-4,-4,-1,-7,1,-8,5,9,-4,-2,6,10,-7,-10,-2,5,-1,8,-2,-8,-4,5,-10,-9,-3,-3,9,6,-4,8,9,3,-6,1,-4,1,7,9,-10,2,-1,6,-10,6,1,3,9,1,7,-3,2,2,2,7,-10,-7,7,1,-6,-3,-10,10,-2,-5,4,1,4,5,5,-7,-2,5,8,9,2,-4,8,-4,-4,1,-6,3,-6,-5,-2,-5,5,-6,-8,8,6,-4,5,-9,6,-4,-2,4,5,8,-2,-2,3,-9,-2,2,-8,-4,-6,-1,-1,-9,-3,-3,-4,6,4,-2,-5,-9,-9,-2,-9,1,9,2,-8,5,3,8,8,3,3,8,-6,2,10,-4,2,6,7,1,8,7,-5,1,10,-5,9,8,4,3,-7,3,-4,1,9,-7,10,-2,-8,8,7,10,1,-3,1,7,5,-7,2,-10,-2,10,10,8,-3,9,-2,-7,-8,-5,6,-7,3,8,4,6,7,-1,-8,-7,5,-2,-5,-9,-1,4,-6,8,8,7,-6,-9,9,-9,9,9,-4,-3,1,-3,-6,-10,9,4,-4,9,-3,4,-2,-10,-9,-7,9,-1,1,3,-3,10,10,9,-4,-5,-1,-1,-2,-4,-10,-5,10,-1,1,8,6,-8,-3,-10,7,6,-4,9,-7,-8,-3,-6,-8,5,9,-5,-5,-1,10,-7,-7,-5,9,-7,-8,-3,-6,5,6,-5,-5,-1,-3,-9,4,-10,-9,9,8,6,1,-8,-10,10,2,2,8,-10,-6,4,6,-8,-8,5,-5,3,-2,-2,1,-8,-9,-4,2,8,2,-7,-5,-3,3,8,-1,-3,-9,3,7,6,-2,5,-2,-1,4,-3,2,-9,-6,-3,9,7,-1,1,-4,3,5,9,10,6,-7,-2,-6,5,9,8,6,-5,10,2,-3,9,5,-9,-7,9,-3,6,-2,-3,1,-9,9,-1,-2,-2,-9,4,8,-9,8,2,6,3,10,-9,9,9,5,-6,4,1,8,7,1,-4,3,2,-5,9,3,8,7,-10,7,9,-6,7,8,-4,10,-9,4,-4,6,-6,-3,-1,-4,-5,8,4,-6,10,5,-6,1,-1,5,-6,1,10,-8,6,-3,-7,-5,-9,-4,-9,-4,-5,10,-10,3,8,9,6,10,-3,3,5,1,-2,-4,3,8,3,-5,-3,-10,-10,8,8,8,-10,-9,10,1,-4,-3,-3,6,8,-8,10,1,-6,-6,6,6,-6,3,7,-7,10,-10,2,-8,7,-3,-5,7,-5,6,10,9,8,-3,7,10,4,10,-7,-6,8,3,4,-5,-4,10,4,1,1,-1,-6,6,2,-5,6,-3,-3,-8,-6,-7,5,-6,7,2,-1,-6,5,-8]], dtype = "int16")#candidate|14477|(1, 1092)|const|int16
var_14478 = relay.var("var_14478", dtype = "int8", shape = (1232,))#candidate|14478|(1232,)|var|int8
var_14479 = relay.var("var_14479", dtype = "uint16", shape = (420,))#candidate|14479|(420,)|var|uint16
call_14475 = relay.TupleGetItem(func_14087_call(relay.reshape(const_14476.astype('int64'), [1960,]), relay.reshape(const_14477.astype('int16'), [1092,]), relay.reshape(var_14478.astype('int8'), [4, 308]), relay.reshape(var_14479.astype('uint16'), [1, 420]), ), 2)
call_14480 = relay.TupleGetItem(func_14092_call(relay.reshape(const_14476.astype('int64'), [1960,]), relay.reshape(const_14477.astype('int16'), [1092,]), relay.reshape(var_14478.astype('int8'), [4, 308]), relay.reshape(var_14479.astype('uint16'), [1, 420]), ), 2)
bop_14488 = relay.power(const_14476.astype('float64'), relay.reshape(call_14475.astype('float64'), relay.shape_of(const_14476))) # shape=(1, 1960)
bop_14491 = relay.power(const_14476.astype('float64'), relay.reshape(call_14480.astype('float64'), relay.shape_of(const_14476))) # shape=(1, 1960)
func_12741_call = mod.get_global_var('func_12741')
func_12744_call = mutated_mod.get_global_var('func_12744')
var_14497 = relay.var("var_14497", dtype = "float32", shape = (540,))#candidate|14497|(540,)|var|float32
call_14496 = relay.TupleGetItem(func_12741_call(relay.reshape(var_14497.astype('float32'), [540,])), 1)
call_14498 = relay.TupleGetItem(func_12744_call(relay.reshape(var_14497.astype('float32'), [540,])), 1)
func_2766_call = mod.get_global_var('func_2766')
func_2768_call = mutated_mod.get_global_var('func_2768')
const_14507 = relay.const([[-4,-8,-1,-10,8,1,4,2,-8,5,2,-8,-2,9,4,9,-8,6,7,-4,7,5,-5,-7,-4,4,10,4,10,9,9,-3,-6,-6,-5,10,-8,-3,-5,-5,-3,-5,-3,-6,-2,-9,3,-8,1,4,4,9,-10,-4,-5,4,-8,-2,7,5,2,-8,4,-4,2,2,-3,-10,5,9,-5,-7,-1,-5,6,-6,4,3,-2,4,6,-9,-8,5,-5,3,-7,-2,-1,7,-6,8,-8,9,-10,5,-8,-7,5,2,-6,9,-9,-2,-9,8,1,-7,-6,1,7,2,-2,6,10,-7,-4,10,7,-2,10,-2,-7,-1,3,-9,-10,10,1,-9,-3,-9,-1,8,10,4,1,2,7,3,7,-2,6,-1,7,9,-4,-7,-7,7,-7,9,9,8,-7,5,4,3,1,-8,-3,8,-5,-4,-2,-4,-4,-8,6,-8,-8,9,10,3,-7,10,6,-9,5,-7,-6,5,-6,10,9,-5,1,-9,5,2,1,-3,-2,-1,-6,3,9,-2,8,-7,10,-4,-3,3,6,-1,9,-5,-6,7,5,4,7,1,7,-4,9,9,-2,-1,8,-7,-7,8,-9,5,-5,1,6,7,9,2,1,9,2,4,-5,-6,1,6,-9,7,-4,5,-2,3,6,-1,-5,-10,2,8,3,10,10,-8,-8,2,-3,10,-9,-9,6,-2,10,-1,-6,-10,5,-4,3,-3,-7,3,-1,-7,5,5,-4,6,9,-6,6,-5,-3,7,1,9,4,7,-4,-6,-10,2,-10,-8,6,5,8,-5,8,-9,2,6,1,-3,-10,5,2,4,8,4,-5,-9,8,6,-6,7,-4,-7,-8,1,9,-8,5,-6,5,10,8,5,-3,-2,-5,-10,1,5],[6,-7,-1,-10,8,-3,6,5,3,8,8,-7,-10,-5,2,2,3,7,-8,-2,2,1,9,10,3,-7,1,-7,9,-5,9,1,9,-8,4,3,-7,2,10,7,-3,8,10,-6,-5,-2,-8,-8,10,4,-8,-7,-3,3,4,-9,-6,-2,2,5,-9,-2,9,-4,8,2,6,2,-2,-5,5,-5,10,-7,-5,10,1,-1,-5,-1,6,10,-7,-3,5,5,-1,3,8,-6,6,7,1,2,-4,1,-8,-1,-1,-4,-2,10,-9,-7,-5,-10,-2,-8,6,10,-3,-9,10,-6,4,-1,8,2,-4,-6,3,-8,4,9,-8,-9,8,3,-10,10,8,-2,1,-6,2,-2,10,9,9,-4,-5,-7,-1,-10,9,6,-9,6,10,-7,-5,-7,-10,-7,-4,-6,-3,1,-3,-6,-3,2,9,-4,-1,1,-9,-9,5,-7,-6,-8,-6,-5,-2,-1,-3,8,10,-3,4,-7,2,-3,-1,-8,3,-7,6,8,-5,4,-4,10,-4,-7,6,-1,-7,9,-5,6,-2,-9,-5,6,-7,-7,-1,-7,1,5,-7,8,-3,1,-4,7,9,2,-4,5,-9,2,-1,-8,2,-10,2,-2,-6,2,-1,-4,7,-8,6,-2,-8,-6,-5,3,-8,8,-2,-4,7,-6,6,-1,-10,6,2,1,-4,1,1,-9,-7,-8,9,-5,9,5,3,-2,4,-9,4,6,-8,7,1,8,-5,4,10,2,-3,9,-4,-9,7,-5,-7,-8,10,-4,-3,6,1,-4,1,2,-7,-8,-2,-1,4,-1,-9,-5,6,7,-4,-9,-4,5,1,7,-10,8,3,-10,-5,9,-10,2,-4,7,-3,2,-9,3,6,-9,7,8,-9,7,7,-10,2,3,5,3]], dtype = "int8")#candidate|14507|(2, 336)|const|int8
call_14506 = relay.TupleGetItem(func_2766_call(relay.reshape(const_14507.astype('int8'), [8, 14, 6])), 0)
call_14508 = relay.TupleGetItem(func_2768_call(relay.reshape(const_14507.astype('int8'), [8, 14, 6])), 0)
output = relay.Tuple([call_14468,const_14477,var_14478,var_14479,bop_14488,call_14496,var_14497,call_14506,const_14507,])
output2 = relay.Tuple([call_14469,const_14477,var_14478,var_14479,bop_14491,call_14498,var_14497,call_14508,const_14507,])
func_14511 = relay.Function([var_14478,var_14479,var_14497,], output)
mod['func_14511'] = func_14511
mod = relay.transform.InferType()(mod)
mutated_mod['func_14511'] = func_14511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14511_call = mutated_mod.get_global_var('func_14511')
var_14513 = relay.var("var_14513", dtype = "int8", shape = (1232,))#candidate|14513|(1232,)|var|int8
var_14514 = relay.var("var_14514", dtype = "uint16", shape = (420,))#candidate|14514|(420,)|var|uint16
var_14515 = relay.var("var_14515", dtype = "float32", shape = (540,))#candidate|14515|(540,)|var|float32
call_14512 = func_14511_call(var_14513,var_14514,var_14515,)
output = call_14512
func_14516 = relay.Function([var_14513,var_14514,var_14515,], output)
mutated_mod['func_14516'] = func_14516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13078_call = mod.get_global_var('func_13078')
func_13080_call = mutated_mod.get_global_var('func_13080')
call_14663 = func_13078_call()
call_14664 = func_13078_call()
output = relay.Tuple([call_14663,])
output2 = relay.Tuple([call_14664,])
func_14666 = relay.Function([], output)
mod['func_14666'] = func_14666
mod = relay.transform.InferType()(mod)
mutated_mod['func_14666'] = func_14666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14666_call = mutated_mod.get_global_var('func_14666')
call_14667 = func_14666_call()
output = call_14667
func_14668 = relay.Function([], output)
mutated_mod['func_14668'] = func_14668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10563_call = mod.get_global_var('func_10563')
func_10565_call = mutated_mod.get_global_var('func_10565')
call_14669 = relay.TupleGetItem(func_10563_call(), 0)
call_14670 = relay.TupleGetItem(func_10565_call(), 0)
func_13821_call = mod.get_global_var('func_13821')
func_13825_call = mutated_mod.get_global_var('func_13825')
const_14675 = relay.const(-10, dtype = "int8")#candidate|14675|()|const|int8
var_14676 = relay.var("var_14676", dtype = "int8", shape = (78,))#candidate|14676|(78,)|var|int8
call_14674 = relay.TupleGetItem(func_13821_call(relay.reshape(const_14675.astype('int8'), []), relay.reshape(var_14676.astype('int8'), [78,]), ), 3)
call_14677 = relay.TupleGetItem(func_13825_call(relay.reshape(const_14675.astype('int8'), []), relay.reshape(var_14676.astype('int8'), [78,]), ), 3)
output = relay.Tuple([call_14669,call_14674,const_14675,var_14676,])
output2 = relay.Tuple([call_14670,call_14677,const_14675,var_14676,])
func_14679 = relay.Function([var_14676,], output)
mod['func_14679'] = func_14679
mod = relay.transform.InferType()(mod)
mutated_mod['func_14679'] = func_14679
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14680 = relay.var("var_14680", dtype = "int8", shape = (78,))#candidate|14680|(78,)|var|int8
func_14679_call = mutated_mod.get_global_var('func_14679')
call_14681 = func_14679_call(var_14680)
output = call_14681
func_14682 = relay.Function([var_14680], output)
mutated_mod['func_14682'] = func_14682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12473_call = mod.get_global_var('func_12473')
func_12474_call = mutated_mod.get_global_var('func_12474')
call_14687 = func_12473_call()
call_14688 = func_12473_call()
output = call_14687
output2 = call_14688
func_14695 = relay.Function([], output)
mod['func_14695'] = func_14695
mod = relay.transform.InferType()(mod)
mutated_mod['func_14695'] = func_14695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14695_call = mutated_mod.get_global_var('func_14695')
call_14696 = func_14695_call()
output = call_14696
func_14697 = relay.Function([], output)
mutated_mod['func_14697'] = func_14697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11894_call = mod.get_global_var('func_11894')
func_11896_call = mutated_mod.get_global_var('func_11896')
call_14709 = func_11894_call()
call_14710 = func_11894_call()
func_11594_call = mod.get_global_var('func_11594')
func_11601_call = mutated_mod.get_global_var('func_11601')
var_14718 = relay.var("var_14718", dtype = "uint32", shape = (3, 9))#candidate|14718|(3, 9)|var|uint32
var_14719 = relay.var("var_14719", dtype = "int16", shape = (9,))#candidate|14719|(9,)|var|int16
var_14720 = relay.var("var_14720", dtype = "int16", shape = (3, 270))#candidate|14720|(3, 270)|var|int16
var_14721 = relay.var("var_14721", dtype = "int16", shape = (1092,))#candidate|14721|(1092,)|var|int16
const_14722 = relay.const([[1,4,-3,6,3,3,4,-8,2,-6,2,8,-5,-7,-10,-3,2,-4,-10,2,8,3,-9,-2,6,9,2,-4,-4,-9,-5,9,4,2,-2,5,10,-3,-3,-9,-3,-9,-8,1,1,8,4,3,9,-2,-2,10,-7,2,-7,8,-9,-4,-7,1,-7,-4,-4,-1,-6,5,-9,1,-9,-5,2,-8,-10,10,-7,5,-9,5,8,8,8,-2,-8,3],[8,4,3,2,4,1,4,7,5,-9,-7,-6,8,-4,-5,-6,6,2,3,3,8,1,9,7,10,-6,-3,-4,2,-9,-4,9,-6,9,7,-7,5,-10,5,-8,-3,4,7,-9,5,-10,-5,-2,2,-8,-5,-5,-4,5,-4,4,7,5,5,5,-2,-2,-3,-7,6,-3,4,-1,7,-8,9,8,10,-2,-7,-7,-3,7,-3,-1,4,2,-6,-4],[1,3,4,7,-7,2,-7,7,10,-6,-10,4,4,10,10,-2,8,4,9,9,-10,1,10,7,-2,4,1,6,5,7,3,-10,-7,4,-6,3,4,5,-2,3,-7,-7,-7,6,-10,1,4,-6,-6,8,-3,-9,-5,-10,-7,2,-2,-4,2,2,5,-7,7,-2,4,-6,-3,4,7,6,7,-10,6,7,-6,-10,-4,-1,-2,3,-3,3,-4,-5],[-8,-7,-10,1,2,2,7,-8,10,-2,-2,-6,-6,2,-5,2,-9,-8,7,3,-7,7,8,7,-7,-10,-7,-6,7,-4,-5,6,5,-3,3,-4,-2,6,-8,-7,5,-6,6,-5,9,5,-4,-10,-5,3,-10,8,-8,1,1,-5,-5,-7,2,-4,-1,-7,-10,-6,-9,-2,-6,10,-9,1,8,6,-6,6,7,1,1,-3,-4,-5,-7,-1,-9,8],[1,-6,7,4,-7,3,2,-9,3,-5,2,1,7,4,-4,-4,4,-6,3,4,4,-1,-5,-1,-6,-7,-6,-8,2,-1,-4,5,-6,-9,-3,-9,2,5,-2,-6,-3,-7,-5,2,-6,-6,-7,-10,-2,-1,2,1,-10,1,-3,10,-2,-4,1,4,10,-10,1,-9,-7,-9,10,2,8,-2,10,6,-9,9,-4,-7,-5,3,-7,10,-5,-2,10,-5]], dtype = "uint16")#candidate|14722|(5, 84)|const|uint16
call_14717 = relay.TupleGetItem(func_11594_call(relay.reshape(var_14718.astype('uint32'), [3, 9]), relay.reshape(var_14719.astype('int16'), [9,]), relay.reshape(var_14720.astype('int16'), [810,]), relay.reshape(var_14721.astype('int16'), [1092,]), relay.reshape(const_14722.astype('uint16'), [420,]), ), 4)
call_14723 = relay.TupleGetItem(func_11601_call(relay.reshape(var_14718.astype('uint32'), [3, 9]), relay.reshape(var_14719.astype('int16'), [9,]), relay.reshape(var_14720.astype('int16'), [810,]), relay.reshape(var_14721.astype('int16'), [1092,]), relay.reshape(const_14722.astype('uint16'), [420,]), ), 4)
output = relay.Tuple([call_14709,call_14717,var_14718,var_14719,var_14720,var_14721,const_14722,])
output2 = relay.Tuple([call_14710,call_14723,var_14718,var_14719,var_14720,var_14721,const_14722,])
func_14755 = relay.Function([var_14718,var_14719,var_14720,var_14721,], output)
mod['func_14755'] = func_14755
mod = relay.transform.InferType()(mod)
mutated_mod['func_14755'] = func_14755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14755_call = mutated_mod.get_global_var('func_14755')
var_14757 = relay.var("var_14757", dtype = "uint32", shape = (3, 9))#candidate|14757|(3, 9)|var|uint32
var_14758 = relay.var("var_14758", dtype = "int16", shape = (9,))#candidate|14758|(9,)|var|int16
var_14759 = relay.var("var_14759", dtype = "int16", shape = (3, 270))#candidate|14759|(3, 270)|var|int16
var_14760 = relay.var("var_14760", dtype = "int16", shape = (1092,))#candidate|14760|(1092,)|var|int16
call_14756 = func_14755_call(var_14757,var_14758,var_14759,var_14760,)
output = call_14756
func_14761 = relay.Function([var_14757,var_14758,var_14759,var_14760,], output)
mutated_mod['func_14761'] = func_14761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13085_call = mod.get_global_var('func_13085')
func_13086_call = mutated_mod.get_global_var('func_13086')
call_14770 = relay.TupleGetItem(func_13085_call(), 0)
call_14771 = relay.TupleGetItem(func_13086_call(), 0)
output = call_14770
output2 = call_14771
func_14791 = relay.Function([], output)
mod['func_14791'] = func_14791
mod = relay.transform.InferType()(mod)
output = func_14791()
func_14792 = relay.Function([], output)
mutated_mod['func_14792'] = func_14792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13078_call = mod.get_global_var('func_13078')
func_13080_call = mutated_mod.get_global_var('func_13080')
call_14819 = func_13078_call()
call_14820 = func_13078_call()
func_7755_call = mod.get_global_var('func_7755')
func_7758_call = mutated_mod.get_global_var('func_7758')
call_14829 = relay.TupleGetItem(func_7755_call(relay.reshape(call_14819.astype('uint32'), [3, 11, 6]), relay.reshape(call_14819.astype('uint32'), [3, 11, 6]), ), 0)
call_14830 = relay.TupleGetItem(func_7758_call(relay.reshape(call_14819.astype('uint32'), [3, 11, 6]), relay.reshape(call_14819.astype('uint32'), [3, 11, 6]), ), 0)
output = relay.Tuple([call_14819,call_14829,])
output2 = relay.Tuple([call_14820,call_14830,])
func_14836 = relay.Function([], output)
mod['func_14836'] = func_14836
mod = relay.transform.InferType()(mod)
mutated_mod['func_14836'] = func_14836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14836_call = mutated_mod.get_global_var('func_14836')
call_14837 = func_14836_call()
output = call_14837
func_14838 = relay.Function([], output)
mutated_mod['func_14838'] = func_14838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14046_call = mod.get_global_var('func_14046')
func_14047_call = mutated_mod.get_global_var('func_14047')
call_14843 = relay.TupleGetItem(func_14046_call(), 0)
call_14844 = relay.TupleGetItem(func_14047_call(), 0)
output = relay.Tuple([call_14843,])
output2 = relay.Tuple([call_14844,])
func_14851 = relay.Function([], output)
mod['func_14851'] = func_14851
mod = relay.transform.InferType()(mod)
output = func_14851()
func_14852 = relay.Function([], output)
mutated_mod['func_14852'] = func_14852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14258_call = mod.get_global_var('func_14258')
func_14260_call = mutated_mod.get_global_var('func_14260')
call_14867 = func_14258_call()
call_14868 = func_14258_call()
output = relay.Tuple([call_14867,])
output2 = relay.Tuple([call_14868,])
func_14869 = relay.Function([], output)
mod['func_14869'] = func_14869
mod = relay.transform.InferType()(mod)
output = func_14869()
func_14870 = relay.Function([], output)
mutated_mod['func_14870'] = func_14870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14046_call = mod.get_global_var('func_14046')
func_14047_call = mutated_mod.get_global_var('func_14047')
call_14883 = relay.TupleGetItem(func_14046_call(), 0)
call_14884 = relay.TupleGetItem(func_14047_call(), 0)
output = call_14883
output2 = call_14884
func_14889 = relay.Function([], output)
mod['func_14889'] = func_14889
mod = relay.transform.InferType()(mod)
mutated_mod['func_14889'] = func_14889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14889_call = mutated_mod.get_global_var('func_14889')
call_14890 = func_14889_call()
output = call_14890
func_14891 = relay.Function([], output)
mutated_mod['func_14891'] = func_14891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11894_call = mod.get_global_var('func_11894')
func_11896_call = mutated_mod.get_global_var('func_11896')
call_14919 = func_11894_call()
call_14920 = func_11894_call()
func_14791_call = mod.get_global_var('func_14791')
func_14792_call = mutated_mod.get_global_var('func_14792')
call_14931 = func_14791_call()
call_14932 = func_14791_call()
output = relay.Tuple([call_14919,call_14931,])
output2 = relay.Tuple([call_14920,call_14932,])
func_14933 = relay.Function([], output)
mod['func_14933'] = func_14933
mod = relay.transform.InferType()(mod)
mutated_mod['func_14933'] = func_14933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14933_call = mutated_mod.get_global_var('func_14933')
call_14934 = func_14933_call()
output = call_14934
func_14935 = relay.Function([], output)
mutated_mod['func_14935'] = func_14935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14375_call = mod.get_global_var('func_14375')
func_14377_call = mutated_mod.get_global_var('func_14377')
call_14947 = relay.TupleGetItem(func_14375_call(), 0)
call_14948 = relay.TupleGetItem(func_14377_call(), 0)
func_9361_call = mod.get_global_var('func_9361')
func_9364_call = mutated_mod.get_global_var('func_9364')
var_14960 = relay.var("var_14960", dtype = "uint16", shape = (1200,))#candidate|14960|(1200,)|var|uint16
call_14959 = relay.TupleGetItem(func_9361_call(relay.reshape(var_14960.astype('uint16'), [5, 15, 16]), relay.reshape(var_14960.astype('uint16'), [5, 15, 16]), ), 3)
call_14961 = relay.TupleGetItem(func_9364_call(relay.reshape(var_14960.astype('uint16'), [5, 15, 16]), relay.reshape(var_14960.astype('uint16'), [5, 15, 16]), ), 3)
func_8743_call = mod.get_global_var('func_8743')
func_8750_call = mutated_mod.get_global_var('func_8750')
var_14976 = relay.var("var_14976", dtype = "float32", shape = (1568,))#candidate|14976|(1568,)|var|float32
const_14977 = relay.const([-5,-7,-7,3,8,-4,-4,-4,-7,-3,-4,-3,1,5,9,8,-3,6,9,-5,-7,-5,-6,-2,-10,6,-9], dtype = "uint32")#candidate|14977|(27,)|const|uint32
const_14978 = relay.const([6,-10,10,-9,-2,-2,4,-8,-6,4,4,5,-2,-7,3,3,2,2,-1,6,8,6,5,7,-9,-1,6,6,-8,10,3,-1,-7,8,6,3,9,-9,5,6,-4,6,5,-9,9,6,-3,6,10,9,-7,1,2,-2,4,1,-7,10,-3,8,-8,-3,-1,-10,2,-8,-2,4,-9,-10,-4,-2,10,-4,-9,-2,-9,8,3,-3,-9,-3,-2,-4,-3,5,-3,-2,-1,5,-1,6,3,9,4,-10,-5,-4,2,-1,2,4,-4,-8,5,4,-2,5,6,1,8,-5,-6,1,8,-3,-9,-6,3,8,9,3,4,-7,2,4,-9,2,-9,3,6,-8,3,7,-9,-6,-9,-10,-7,-7,4,6,10,9,2,7,-8,-2,-8,-8,6,-5,-5,9,-1,8,6,9,3,-7,1,-4,8,1,8,5,5,8,7,9,-2,3,4,-5,-1,-3,-6,-1,-6,-4,-4,-6,-1,7,2,7,-5,-5,4,6,-2,-8,-8,5,-3,-8,-8,-6,-9,-8,-10,-8,-7,6,2,-7,-2,3,7,-6,6,9,-8,-4,9,9,-9,8,9,7,7,6,-2,3,-8,2,-3,-2,8,-8,-10,-8,-6,-4,2,8,5,9,6,7,-1,10,1,-4,7,-6,1,-5,2,-3,1,4,-7,5,6,-9,-10,2,-10,10,8,-6,4,7,-3,10,4,-1,-10,-6,8,-5,4,-2,2,4,10,1,5,9,8,3,-5,5,-3,-2,-6,-3,-4,7,-7,-8,-2,8,-4,-7,-6,6,-5,7,-4,10,7,10,-6,-7,-7,9,-1,9,4,10,4,-3,9,-8,-10,2,-2,9,9,-5,1,8,-1,-9,-2,-6,9,7,1,10,6,1,2,9,5,10,8,-8,-4,7,-10,-2,4,6,7,-7,5,4,-7,1,-7,-8,8,5,4,7,4,-10,9,4,-9,-2,10,-4,-8,-8,5,-1,1,4,-7,9,10,-10,5,-6,4,1,-3,10,9,8,6,-4,7,-4,8,-6,3,7,7,-2,-3,-4,7,10,5,-9,-9,-10,10,-1,-7,7,2,-6,9,-1,-5,1,-10,-10,-10,8,10,8,-1,-8,-7,-8,1,7,6,-2,-4,2,5,8,1,-7,-3,-2,-7,5,-7,2,-9,-6,8,5,-3,3,-1,3,9,4,8,-8,-6,8,6,-1,-8,1,7,5,6,-7,-3,8,4,-3,8,5,2,7,-3,4,-5,7,-2,-3,-4,-5,3,-6,7,-7,-1,-9,8,-3,-4,4,4,3,-6,2,7,5,-3,4,2,-3,8,8,-9,6,-7,-5,2,7,-4,-7,8,-10,-5,-1,8,10,7,1,-8,-9,9,-6,-4,10,1,9,-9,10,-5,-1,-4,-10,-8,7,10,-10,4,4,10,5,3,-3,-3,8,-4,3,-9,-1,6,2,-7,-6,10,-6,6,-4,-5,1,9,-10,-8,3,7,-4,-3,8,-1,-1,-6,1,-10,1,9,-7,-1,3,9,-5,-9,7,7,6,-2,7,5,10,-3,3,2,2,7,3,1,-10,8,6,7,-3,10,6,10,-3,8,-8,-5,6,-8,-8,8,3,7,3,-3,2,-8,9,6,-4,-7,7,-7,-6,3,-5,-1,-8,2,-2,-10,8,-5,-8,10,-7,6,-3,-8,-7,-10,-3,5,-1,3,-3,8,-2,10,-3,-4,9,6,-5,10,7,-6,-3,2,-9,-5,-9,-4,5,-3,-6,1,-8,-7,5,-7,-7,5,-6,-4,-3,5,-4,-4,-3,-9,7,4,1,10,-9,10,-10,6,1,8,8,7,2,-3,10,6,4,-3,-1,2,-10,8,7,-5,-3,-6,6,-7,7,-7,-1,-6,-3,1,4,6,6,-3,7,3,10,-4,-5,9,10,8,-9,8,3,-7,-3,-10,-6,-1,-10,-6,-6,-9,1,10,1,5,-2,1,-10,-4,-1,1,-7,2,-9,-6,-9,5,-2,-3,4,-5,1,-6,6,6,-2,7,-9,5,-7,2,-7,-8,-1,3,1,6,6,2,9,9,5,1,7,2,8,-4,1,5,4,-9,-6,6,-6,3,-8,-7,2,-7,-3,-5,-2,-7,10,7,9,-1,-1,-8,7,2,-8,8,-6,-9,5,9,2,2,-7,-5,5,5,5,2,-9,-7,3,6,-4,8,8,9,-3,-9,-8,-1,4,-8,1,1,6,6,-5,1,-7,9,6,3,-8,2,-1,-8,8,2,-8,9,10,5,8,-3,5,-8,9,-10,6,-5,-4,-9,-1,-4,-3,4,8,9,7,1,-5,5,-2,2,-5,-4,10,-3,-6,9,-8,5,6,4,-5,7,5,5,-7,7,4,2,7,-4,-10,2,-9,8,10,-9,8,-6,-8,-2,8,6,1,7,-3,10,-5,5,-9,7,4,4,-4,7,-1,-8,8,-4,-3,-8,-1,2,-1,8,-8,9,3,-4,-6,-8,1,8,9,10,-3,8,7,8,5,-7,-2,-4,10,9,-2,2,4,-3,-4,-5,-1,10,1,7,-5,10,1,-10,4,6,8,-9,10,5,5,10,3,6,-8,-1,-7,10,-4,8,2,6,-2,4,5,5,-9,7,-6,7,8,-7,-8,-3,-9,-10,5,-5,-1,10,-10,5,3,-3,-7,-1,8,-9,6,9,-3,10,-5,8,4,1,6,-5,-9,5,1,-10,7,5,3,1,-3,7,-6,3,2,5,-1,6,1,8,9,-8,9,-10,-7,10,1,-7,10,-8,5,2,-4,-6,10,-6,1,-3,-9,-3,-3,-4,8,-1,3,-5,-3,-4,7,-3,-3,-6,-4,5,4,-8,10,-1,-5,-9,4,-7,-2,5,1,6,8,10,-3,-5,-2,-1,-7,3,7,-4,-9,-9,2], dtype = "int16")#candidate|14978|(1092,)|const|int16
var_14979 = relay.var("var_14979", dtype = "int8", shape = (1232,))#candidate|14979|(1232,)|var|int8
const_14980 = relay.const([-10,-10,-2,5,9,-2,-2,-5,3,-10,-2,-8,7,6,-6,6,9,-6,1,10,-1,-10,-1,9,-6,3,-7,10,4,5,-4,-7,9,6,5,7,8,10,-2,-7,9,8,-2,1,-6,-7,-7,3,-8,-3,-5,-8,10,4,8,-2,-1,2,-1,-9,-9,-5,-1,-2,7,1,-8,3,-6,9,8,10,2,-3,4,9,-10,-10,3,1,9,-2,-10,4,3,1,-5,-1,2,-3,7,2,6,-10,5,-1,-3,1,9,1,-9,3,3,4,-7,-4,8,-2,1,7,3,-10,10,-10,-7,1,3,-1,-6,-2,1,-9,-3,5,-3,1,10,-2,5,1,5,9,4,2,6,-6,1,7,-4,-7,-5,-5,-2,-5,-1,8,-8,3,6,3,1,-10,-5,-8,7,8,-6,7,1,2,8,-9,-6,10,10,-5,-3,5,9,-6,1,-10,-6,2,1,-9,-5,-7,1,-4,-1,5,-3,3,-6,-2,-5,-3,-1,8,10,-3,8,-5,-7,1,9,3,6,3,5,8,-8,-2,-5,-3,10,9,3,-8,-6,-8,4,-4,7,4,-3,-3,5,-1,6,7,-7,-5,-2,-3,-1,-3,2,9,5,1,-8,-10,-10,3,-3,5,7,-2,-2,-9,-6,9,-10,-9,-4,2,5,-4,2,-4,-8,-7,-8,5,-6,4,-7,-1,-3,-3,-9,8,-8,2,10,7,6,4,-4,5,-5,9,-3,-10,-1,5,7,-5,-6,5,4,3,-7,-5,7,-9,8,-6,-10,-9,-9,-10,-8,3,3,-9,1,8,-10,-9,2,9,5,1,2,-4,-4,9,-9,-5,2,3,7,-3,4,-4,-7,-6,-8,8,9,-3,8,7,6,-2,-8,-4,-6,-2,7,9,-10,-6,4,-2,-8,7,9,-5,-10,3,-4,2,2,-2,-1,2,-6,4,2,2,-1,8,-5,-2,10,2,2,5,10,-10,-8,4,1,-3,-4,-5,-6,-4,5,-7,-1,10,2,5,3,-5,-10,-7,9,-5,7,-7,-10,3,6,10,-8,3,6,-2,-5,-1,7,7,-8,-8,-10,-7,7,6,9,-3,8,6,3,-4,4,5,-3,-7,3,-7,2,5,-3,3], dtype = "uint16")#candidate|14980|(420,)|const|uint16
call_14975 = relay.TupleGetItem(func_8743_call(relay.reshape(var_14976.astype('float32'), [14, 7, 16]), relay.reshape(var_14976.astype('float32'), [14, 7, 16]), relay.reshape(const_14977.astype('uint32'), [27,]), relay.reshape(const_14978.astype('int16'), [1092,]), relay.reshape(var_14979.astype('int8'), [616, 2]), relay.reshape(const_14980.astype('uint16'), [420,]), ), 1)
call_14981 = relay.TupleGetItem(func_8750_call(relay.reshape(var_14976.astype('float32'), [14, 7, 16]), relay.reshape(var_14976.astype('float32'), [14, 7, 16]), relay.reshape(const_14977.astype('uint32'), [27,]), relay.reshape(const_14978.astype('int16'), [1092,]), relay.reshape(var_14979.astype('int8'), [616, 2]), relay.reshape(const_14980.astype('uint16'), [420,]), ), 1)
output = relay.Tuple([call_14947,call_14959,var_14960,call_14975,var_14976,const_14977,const_14978,var_14979,const_14980,])
output2 = relay.Tuple([call_14948,call_14961,var_14960,call_14981,var_14976,const_14977,const_14978,var_14979,const_14980,])
func_14982 = relay.Function([var_14960,var_14976,var_14979,], output)
mod['func_14982'] = func_14982
mod = relay.transform.InferType()(mod)
mutated_mod['func_14982'] = func_14982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14982_call = mutated_mod.get_global_var('func_14982')
var_14984 = relay.var("var_14984", dtype = "uint16", shape = (1200,))#candidate|14984|(1200,)|var|uint16
var_14985 = relay.var("var_14985", dtype = "float32", shape = (1568,))#candidate|14985|(1568,)|var|float32
var_14986 = relay.var("var_14986", dtype = "int8", shape = (1232,))#candidate|14986|(1232,)|var|int8
call_14983 = func_14982_call(var_14984,var_14985,var_14986,)
output = call_14983
func_14987 = relay.Function([var_14984,var_14985,var_14986,], output)
mutated_mod['func_14987'] = func_14987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10436_call = mod.get_global_var('func_10436')
func_10438_call = mutated_mod.get_global_var('func_10438')
call_14989 = relay.TupleGetItem(func_10436_call(), 0)
call_14990 = relay.TupleGetItem(func_10438_call(), 0)
func_13078_call = mod.get_global_var('func_13078')
func_13080_call = mutated_mod.get_global_var('func_13080')
call_14991 = func_13078_call()
call_14992 = func_13078_call()
func_8042_call = mod.get_global_var('func_8042')
func_8046_call = mutated_mod.get_global_var('func_8046')
const_14999 = relay.const(8, dtype = "uint32")#candidate|14999|()|const|uint32
const_15000 = relay.const([[-10,-3],[-10,6],[10,10],[-7,-6],[3,-3],[-8,4],[-3,2],[-10,-1],[7,-3],[-9,-2],[10,10]], dtype = "uint32")#candidate|15000|(11, 2)|const|uint32
var_15001 = relay.var("var_15001", dtype = "uint32", shape = (352,))#candidate|15001|(352,)|var|uint32
call_14998 = relay.TupleGetItem(func_8042_call(relay.reshape(const_14999.astype('uint32'), []), relay.reshape(const_15000.astype('uint32'), [2, 1, 11]), relay.reshape(var_15001.astype('uint32'), [2, 16, 11]), ), 0)
call_15002 = relay.TupleGetItem(func_8046_call(relay.reshape(const_14999.astype('uint32'), []), relay.reshape(const_15000.astype('uint32'), [2, 1, 11]), relay.reshape(var_15001.astype('uint32'), [2, 16, 11]), ), 0)
bop_15027 = relay.less(var_15001.astype('bool'), relay.reshape(call_14998.astype('bool'), relay.shape_of(var_15001))) # shape=(352,)
bop_15030 = relay.less(var_15001.astype('bool'), relay.reshape(call_15002.astype('bool'), relay.shape_of(var_15001))) # shape=(352,)
func_11117_call = mod.get_global_var('func_11117')
func_11122_call = mutated_mod.get_global_var('func_11122')
var_15038 = relay.var("var_15038", dtype = "float32", shape = (132, 1))#candidate|15038|(132, 1)|var|float32
const_15039 = relay.const([6.494947,4.538262,-8.517654,-0.336239,5.905322,4.563780,9.496903,0.843511,-8.125447,8.268012,6.946515,-3.995600,-6.334499,9.615392,2.767227,-9.884242,-4.391830,0.316003,-5.528456,4.107123,-8.778572], dtype = "float32")#candidate|15039|(21,)|const|float32
var_15040 = relay.var("var_15040", dtype = "uint16", shape = (420,))#candidate|15040|(420,)|var|uint16
call_15037 = relay.TupleGetItem(func_11117_call(relay.reshape(var_15038.astype('float32'), [1, 132]), relay.reshape(const_15039.astype('float32'), [21,]), relay.reshape(var_15040.astype('uint16'), [420,]), ), 6)
call_15041 = relay.TupleGetItem(func_11122_call(relay.reshape(var_15038.astype('float32'), [1, 132]), relay.reshape(const_15039.astype('float32'), [21,]), relay.reshape(var_15040.astype('uint16'), [420,]), ), 6)
output = relay.Tuple([call_14989,call_14991,const_14999,const_15000,bop_15027,call_15037,var_15038,const_15039,var_15040,])
output2 = relay.Tuple([call_14990,call_14992,const_14999,const_15000,bop_15030,call_15041,var_15038,const_15039,var_15040,])
func_15045 = relay.Function([var_15001,var_15038,var_15040,], output)
mod['func_15045'] = func_15045
mod = relay.transform.InferType()(mod)
var_15046 = relay.var("var_15046", dtype = "uint32", shape = (352,))#candidate|15046|(352,)|var|uint32
var_15047 = relay.var("var_15047", dtype = "float32", shape = (132, 1))#candidate|15047|(132, 1)|var|float32
var_15048 = relay.var("var_15048", dtype = "uint16", shape = (420,))#candidate|15048|(420,)|var|uint16
output = func_15045(var_15046,var_15047,var_15048,)
func_15049 = relay.Function([var_15046,var_15047,var_15048,], output)
mutated_mod['func_15049'] = func_15049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12045_call = mod.get_global_var('func_12045')
func_12047_call = mutated_mod.get_global_var('func_12047')
call_15063 = func_12045_call()
call_15064 = func_12045_call()
output = call_15063
output2 = call_15064
func_15070 = relay.Function([], output)
mod['func_15070'] = func_15070
mod = relay.transform.InferType()(mod)
mutated_mod['func_15070'] = func_15070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15070_call = mutated_mod.get_global_var('func_15070')
call_15071 = func_15070_call()
output = call_15071
func_15072 = relay.Function([], output)
mutated_mod['func_15072'] = func_15072
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15224 = relay.var("var_15224", dtype = "float64", shape = (14, 6, 8))#candidate|15224|(14, 6, 8)|var|float64
var_15225 = relay.var("var_15225", dtype = "float64", shape = (14, 6, 8))#candidate|15225|(14, 6, 8)|var|float64
bop_15226 = relay.power(var_15224.astype('float64'), relay.reshape(var_15225.astype('float64'), relay.shape_of(var_15224))) # shape=(14, 6, 8)
output = relay.Tuple([bop_15226,])
output2 = relay.Tuple([bop_15226,])
func_15242 = relay.Function([var_15224,var_15225,], output)
mod['func_15242'] = func_15242
mod = relay.transform.InferType()(mod)
mutated_mod['func_15242'] = func_15242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15242_call = mutated_mod.get_global_var('func_15242')
var_15244 = relay.var("var_15244", dtype = "float64", shape = (14, 6, 8))#candidate|15244|(14, 6, 8)|var|float64
var_15245 = relay.var("var_15245", dtype = "float64", shape = (14, 6, 8))#candidate|15245|(14, 6, 8)|var|float64
call_15243 = func_15242_call(var_15244,var_15245,)
output = call_15243
func_15246 = relay.Function([var_15244,var_15245,], output)
mutated_mod['func_15246'] = func_15246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14836_call = mod.get_global_var('func_14836')
func_14838_call = mutated_mod.get_global_var('func_14838')
call_15251 = relay.TupleGetItem(func_14836_call(), 0)
call_15252 = relay.TupleGetItem(func_14838_call(), 0)
output = relay.Tuple([call_15251,])
output2 = relay.Tuple([call_15252,])
func_15258 = relay.Function([], output)
mod['func_15258'] = func_15258
mod = relay.transform.InferType()(mod)
mutated_mod['func_15258'] = func_15258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15258_call = mutated_mod.get_global_var('func_15258')
call_15259 = func_15258_call()
output = call_15259
func_15260 = relay.Function([], output)
mutated_mod['func_15260'] = func_15260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11183_call = mod.get_global_var('func_11183')
func_11184_call = mutated_mod.get_global_var('func_11184')
call_15269 = func_11183_call()
call_15270 = func_11183_call()
func_12405_call = mod.get_global_var('func_12405')
func_12407_call = mutated_mod.get_global_var('func_12407')
call_15275 = relay.TupleGetItem(func_12405_call(), 0)
call_15276 = relay.TupleGetItem(func_12407_call(), 0)
func_15242_call = mod.get_global_var('func_15242')
func_15246_call = mutated_mod.get_global_var('func_15246')
const_15291 = relay.const([[-2.660307],[5.608172],[-7.840933],[-1.969215],[4.629892],[7.232581],[-5.707819],[-3.198590],[-1.922965],[-6.601088],[-4.611987],[8.541119],[3.672442],[-5.708631],[-0.850946],[7.764079],[3.855355],[0.470361],[1.652525],[-4.977786],[-2.477712],[-0.413250],[-3.730681],[7.806439],[1.508170],[-3.192439],[-7.436398],[-8.287844],[-9.184304],[6.860052],[6.553589],[3.526813],[3.196328],[-7.731271],[-0.405183],[4.845574],[-2.882971],[9.178207],[2.212858],[-6.496557],[-7.199944],[-0.460403],[-9.994424],[-7.040355],[-1.472749],[8.248951],[-2.555997],[-3.297815],[3.997624],[-3.066267],[5.272291],[-1.181764],[-7.165838],[8.300315],[0.277349],[-2.006325],[-5.225083],[-7.255596],[-3.299866],[-2.894965],[-3.545815],[-2.698104],[-8.954225],[8.008964],[-5.032459],[-5.299381],[6.846361],[5.059123],[-5.231803],[5.303488],[-6.374006],[-3.327437],[1.792745],[0.810039],[6.547436],[-7.652606],[7.276640],[2.243995],[4.693049],[4.834200],[-6.813765],[2.362574],[8.662725],[1.450948],[1.432462],[8.320711],[1.406622],[0.836545],[-5.311112],[-5.848199],[-5.071110],[0.098745],[2.961633],[0.058448],[4.998559],[-6.122458],[-3.261247],[-3.252633],[4.166493],[-7.151894],[-8.241698],[-6.979243],[4.620795],[-0.802025],[2.043317],[5.097136],[8.586571],[9.844990],[6.668907],[8.167840],[-1.391726],[9.843132],[-9.474986],[-5.672459],[4.006115],[-2.596267],[-9.741966],[8.249089],[-4.567616],[6.021898],[-5.060442],[2.140507],[2.603405],[2.374810],[-5.746852],[-3.033818],[-6.617282],[6.577276],[6.680709],[-2.299707],[-7.975341],[-9.236694],[-7.909908],[-6.231572],[-4.930593],[-9.083561],[3.910283],[-9.919196],[-2.048419],[9.469966],[4.818047],[1.637986],[0.959519],[-5.379727],[-9.636114],[-0.306226],[9.206954],[2.167962],[-9.118140],[0.539114],[2.961784],[-7.257050],[0.233972],[-4.555593],[-3.373026],[-3.832555],[6.195686],[3.362285],[6.764592],[6.922423],[8.049666],[-1.058007],[-3.047772],[-6.022942],[-9.286598],[7.511886],[5.997574],[-1.287082],[2.004389],[-2.471466],[-8.244472],[5.084800],[8.956551],[8.873666],[-5.026892],[-2.215473],[-0.788537],[-2.573266],[3.672591],[1.824691],[-2.084721],[5.506037],[-8.202231],[4.218719],[-5.664166],[9.525580],[-0.004345],[-7.113104],[-1.472116],[-4.929350],[-2.827731],[-6.751340],[-6.655037],[-9.294582],[5.563334],[1.790076],[-3.655732],[3.787946],[-0.534668],[-0.740103],[-1.028204],[8.444359],[-7.318276],[-1.926810],[9.154322],[9.161204],[-2.286619],[-2.578031],[3.379220],[-4.067888],[5.244034],[-3.740977],[-2.450233],[-8.459941],[-4.817618],[-6.524641],[5.487519],[-3.192881],[2.243340],[-5.988219],[1.748019],[6.471796],[5.604883],[-2.946815],[-4.808241],[4.412353],[-2.955647],[5.684150],[5.365689],[4.777794],[6.864965],[-6.435431],[-9.975163],[-1.143656],[-4.424683],[-3.452267],[9.010982],[8.680018],[-5.774050],[2.957357],[-2.547440],[-1.738741],[-9.850954],[0.493508],[8.975286],[-4.942161],[-8.676212],[7.750020],[4.622247],[8.050940],[-6.103685],[0.555725],[5.546319],[-7.497818],[6.062450],[-7.373493],[-5.794176],[-1.083730],[-3.660124],[-3.362609],[4.783704],[-6.521977],[-5.616651],[-9.509036],[-0.977609],[5.072508],[1.397566],[-6.254591],[0.908423],[-7.835323],[-8.585172],[-0.257257],[6.790441],[5.355633],[-8.830042],[-4.151679],[-7.444996],[-0.469976],[-4.474349],[-4.662781],[-2.459542],[-8.951103],[4.142530],[-8.703733],[8.389341],[0.247490],[1.132612],[0.163107],[-8.655896],[-2.212971],[-8.531841],[-8.014307],[-7.520529],[4.971270],[5.966484],[1.041779],[6.613055],[-2.970806],[-6.921113],[0.752803],[9.098021],[5.009586],[-9.480576],[-7.282082],[1.284854],[-3.124623],[2.117807],[6.065257],[6.714215],[-4.676046],[-9.541902],[-4.306011],[3.047465],[-7.889301],[1.087654],[-0.490874],[-2.869982],[8.787114],[-0.632823],[-6.793729],[-1.611704],[0.587807],[4.696655],[5.703273],[-4.281307],[-3.167724],[9.036795],[-7.686868],[5.532693],[-8.012519],[8.121592],[5.617132],[-4.709858],[-2.094042],[-3.103926],[2.953773],[2.287333],[-7.358030],[6.320805],[5.037782],[-9.645617],[-8.317067],[-5.347223],[-2.570013],[-0.395730],[-6.043081],[4.154137],[7.992929],[-4.379837],[-9.765448],[-4.770306],[-3.333659],[1.384513],[1.222048],[-3.190272],[-3.500423],[-2.800690],[8.232178],[9.334557],[-7.099652],[-8.071947],[1.142395],[-8.777204],[-1.534092],[3.855826],[-0.807641],[-9.027711],[7.757384],[3.121498],[-2.077232],[-5.868361],[-8.545136],[4.262116],[9.825435],[-5.855582],[-0.197318],[2.165416],[-1.075678],[5.504218],[-8.107409],[-8.092782],[-7.900205],[7.421626],[-1.384887],[-9.778447],[3.898987],[9.548656],[1.777408],[4.462081],[0.239932],[-9.076175],[-1.428169],[-5.719472],[-8.610405],[2.976912],[-0.769910],[1.242345],[-1.791021],[-5.428414],[7.266069],[1.195920],[0.986171],[1.661762],[-7.963610],[-6.150672],[-4.238375],[3.352597],[-5.421317],[0.451446],[5.012502],[9.092237],[-4.967397],[4.904720],[-0.679013],[9.411074],[-4.415162],[-5.596861],[3.947519],[1.410768],[-0.611452],[-6.930985],[-2.182349],[4.833868],[9.431339],[7.870547],[-7.287644],[-7.155067],[2.633298],[3.187314],[9.261585],[-9.963557],[-7.290406],[-2.827965],[-0.201290],[8.147152],[5.655638],[4.992320],[3.609191],[-9.512987],[6.157946],[-3.470352],[-7.722065],[0.476176],[-9.335244],[2.763597],[1.047822],[8.536040],[-9.705823],[-5.580092],[6.712187],[9.018768],[2.881938],[1.191328],[-9.489225],[3.776362],[3.348787],[3.873038],[-7.000269],[-0.620456],[7.221004],[-5.563260],[5.001620],[-0.812679],[6.284161],[-6.914502],[-2.288862],[5.282665],[-8.404345],[7.554771],[-3.669127],[-6.010773],[-8.789290],[-4.039389],[-5.256646],[4.228057],[-7.016413],[8.109634],[7.580311],[-4.536518],[-6.395860],[-4.076526],[-5.571274],[-8.843589],[-0.346924],[7.988664],[-8.533384],[-1.078056],[4.539357],[5.065202],[8.745444],[-1.254138],[-1.551534],[8.701644],[6.539610],[5.768074],[-3.207738],[9.622576],[6.045972],[6.933352],[8.338012],[9.234701],[1.045022],[-5.316753],[-4.246792],[-0.569167],[-9.767584],[2.738198],[-5.338288],[-4.361248],[-8.256603],[3.062827],[2.606284],[-9.192559],[-4.122471],[-0.278688],[-9.811314],[6.383862],[-3.385392],[2.434195],[4.644936],[-7.659532],[-3.935152],[0.422917],[3.379426],[-8.314697],[1.454256],[-1.484107],[-5.586550],[5.256032],[0.062197],[-3.031831],[5.709563],[4.061178],[1.168654],[-3.917575],[-8.127978],[-2.312812],[8.561234],[-7.257840],[-6.358921],[-4.695701],[-1.341516],[-3.566331],[4.900592],[-5.553455],[-6.269957],[6.792424],[-4.115569],[7.597091],[0.809963],[6.469105],[-2.447004],[-7.970176],[2.945131],[-2.497238],[7.707916],[3.134412],[-8.559800],[5.516765],[6.940276],[-7.841366],[-0.399520],[-0.202287],[-0.577362],[4.394980],[2.615996],[8.661475],[-6.018422],[7.551705],[-0.041350],[0.027963],[3.230170],[-5.555339],[6.073149],[7.079733],[1.880059],[-2.822254],[7.885366],[-4.053285],[-2.648067],[3.853007],[-3.573057],[9.941072],[-6.461275],[-9.072590],[5.696366],[7.859004],[-0.616514],[-8.781513],[1.006887],[6.937794],[7.552637],[-9.758591],[-8.582580],[-7.639693],[-7.618107],[-2.999692],[-8.011351],[-4.505677],[9.120103],[-2.595750],[-2.799509],[4.542012],[3.675887],[-1.182627],[5.870216],[9.734147],[4.897373],[-7.979333],[-0.461952],[-5.465174],[-4.567637],[-8.429153],[6.766548],[-2.172128],[0.103899],[1.798829],[-9.599229],[5.905565],[-0.251133],[-5.034354],[3.676793],[-7.584659],[3.286991],[-8.514708],[1.166614],[5.071689],[6.412686],[-1.564445],[-4.024687],[5.541003],[2.996581],[1.883517],[7.821857],[8.005873],[8.126768],[-1.909010],[5.871863],[0.033051],[9.894292],[1.482476],[3.607427],[-5.046147],[-6.849004],[6.855000],[1.461288],[-9.263391],[8.345265],[-1.958745],[-0.413346],[-0.095689],[4.020115],[-7.259655],[9.956002],[-0.622034],[7.606589],[0.303236],[-2.337347],[-0.113050],[-1.026171],[9.627902],[-6.954227],[2.183444],[9.491956],[1.837819],[4.226125],[7.727191],[-3.355547],[-9.339952],[-2.281643],[-0.473792],[-8.082986]], dtype = "float64")#candidate|15291|(672, 1)|const|float64
call_15290 = relay.TupleGetItem(func_15242_call(relay.reshape(const_15291.astype('float64'), [14, 6, 8]), relay.reshape(const_15291.astype('float64'), [14, 6, 8]), ), 0)
call_15292 = relay.TupleGetItem(func_15246_call(relay.reshape(const_15291.astype('float64'), [14, 6, 8]), relay.reshape(const_15291.astype('float64'), [14, 6, 8]), ), 0)
output = relay.Tuple([call_15269,call_15275,call_15290,const_15291,])
output2 = relay.Tuple([call_15270,call_15276,call_15292,const_15291,])
func_15307 = relay.Function([], output)
mod['func_15307'] = func_15307
mod = relay.transform.InferType()(mod)
output = func_15307()
func_15308 = relay.Function([], output)
mutated_mod['func_15308'] = func_15308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14435_call = mod.get_global_var('func_14435')
func_14437_call = mutated_mod.get_global_var('func_14437')
call_15357 = relay.TupleGetItem(func_14435_call(), 0)
call_15358 = relay.TupleGetItem(func_14437_call(), 0)
func_12437_call = mod.get_global_var('func_12437')
func_12438_call = mutated_mod.get_global_var('func_12438')
call_15375 = relay.TupleGetItem(func_12437_call(), 0)
call_15376 = relay.TupleGetItem(func_12438_call(), 0)
output = relay.Tuple([call_15357,call_15375,])
output2 = relay.Tuple([call_15358,call_15376,])
func_15380 = relay.Function([], output)
mod['func_15380'] = func_15380
mod = relay.transform.InferType()(mod)
mutated_mod['func_15380'] = func_15380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15380_call = mutated_mod.get_global_var('func_15380')
call_15381 = func_15380_call()
output = call_15381
func_15382 = relay.Function([], output)
mutated_mod['func_15382'] = func_15382
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15418 = relay.var("var_15418", dtype = "int16", shape = (4, 11, 4))#candidate|15418|(4, 11, 4)|var|int16
var_15419 = relay.var("var_15419", dtype = "int16", shape = (4, 11, 4))#candidate|15419|(4, 11, 4)|var|int16
bop_15420 = relay.add(var_15418.astype('int16'), relay.reshape(var_15419.astype('int16'), relay.shape_of(var_15418))) # shape=(4, 11, 4)
output = relay.Tuple([bop_15420,])
output2 = relay.Tuple([bop_15420,])
F = relay.Function([var_15418,var_15419,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_15418,var_15419,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

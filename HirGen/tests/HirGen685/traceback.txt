==========mod==========
#[version = "0.0.5"]
def @func_12473() -> Tensor[(9, 11, 2), float64] {
  %0 = @func_11266() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %0.0
}

def @func_13743(%var_13706: Tensor[(1200), uint16], %var_13722: int8, %var_13723: Tensor[(78), int8]) -> (Tensor[(9, 11, 2), float32], Tensor[(5, 15, 16), float64], Tensor[(1200), uint16], Tensor[(6, 13, 1), bool], int8, Tensor[(78), int8]) {
  %1 = @func_12437() /* ty=(Tensor[(9, 11, 2), float32],) */;
  %2 = cast(%var_13706, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %3 = reshape(%2, newshape=[1200]) /* ty=Tensor[(1200), uint16] */;
  %4 = @func_11177(%3) /* ty=(Tensor[(5, 16, ?), float32], Tensor[(5, 15, 16), float64], Tensor[(1200), uint16]) */;
  %5 = cast(%var_13722, dtype="int8") /* ty=int8 */;
  %6 = cast(%var_13723, dtype="int8") /* ty=Tensor[(78), int8] */;
  %7 = reshape(%5, newshape=[]) /* ty=int8 */;
  %8 = reshape(%6, newshape=[6, 13, 1]) /* ty=Tensor[(6, 13, 1), int8] */;
  %9 = @func_7602(%7, %8) /* ty=(Tensor[(6, 13, 1), bool], Tensor[(6, 13, 1), bool], Tensor[(3, 4, 15), float32], Tensor[(6, 13, 180), uint16]) */;
  %10 = %1.0;
  %11 = %4.1;
  %12 = %9.1;
  (%10, %11, %var_13706, %12, %var_13722, %var_13723)
}

def @func_11506(%var_11495: Tensor[(8, 14, 6), float32]) -> Tensor[(8, 14, 6), float32] {
  %13 = cast(%var_11495, dtype="float32") /* ty=Tensor[(8, 14, 6), float32] */;
  log(%13) /* ty=Tensor[(8, 14, 6), float32] */
}

def @func_92(%var_85: Tensor[(1, 9, 13), bool], %var_86: Tensor[(3, 9, 13), bool]) -> Tensor[(3, 9, 13), bool] {
  %14 = cast(%var_85, dtype="bool") /* ty=Tensor[(1, 9, 13), bool] */;
  %15 = cast(%var_86, dtype="bool") /* ty=Tensor[(3, 9, 13), bool] */;
  logical_or(%14, %15) /* ty=Tensor[(3, 9, 13), bool] */
}

def @func_6878(%var_6872: Tensor[(3, 4, 15), float32], %var_6873: Tensor[(3, 4, 15), float32]) -> (Tensor[(3, 4, 15), float32],) {
  %16 = cast(%var_6873, dtype="float32") /* ty=Tensor[(3, 4, 15), float32] */;
  %17 = shape_of(%var_6872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(%var_6872, dtype="float32") /* ty=Tensor[(3, 4, 15), float32] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %20 = divide(%18, %19) /* ty=Tensor[(3, 4, 15), float32] */;
  (%20,)
}

def @func_2448(%var_2369: Tensor[(10, 6, 7), uint16], %var_2427: Tensor[(81, 10), int16], %var_2441: Tensor[(81, 10), int16]) -> (Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) {
  %21 = cast(meta[relay.Constant][0] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %22 = reshape(%21, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int16] */;
  %23 = @func_2252(%22) /* ty=(Tensor[(7, 12, 13), int16],) */;
  %24 = %23.0;
  %25 = cast(%24, dtype="int16") /* ty=Tensor[(7, 12, 13), int16] */;
  %26 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(1092), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?), int16] */;
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %30 = cast(%var_2427, dtype="int16") /* ty=Tensor[(81, 10), int16] */;
  %31 = reshape(%29, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %32 = reshape(%30, newshape=[9, 9, 10]) /* ty=Tensor[(9, 9, 10), int16] */;
  %33 = @func_1648(%31, %32) /* ty=(Tensor[(9, 9, 10), float32], Tensor[(9, 14, 9), float64], Tensor[(1134), float64], Tensor[(117), bool], Tensor[(117, 3), uint32]) */;
  %34 = %33.4;
  %35 = cast(meta[relay.Constant][2] /* ty=Tensor[(117, 3), uint32] */, dtype="uint16") /* ty=Tensor[(117, 3), uint16] */;
  %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(2), int32] */;
  %37 = cast(%34, dtype="uint16") /* ty=Tensor[(117, 3), uint16] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %39 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 6, 7), uint16] */, dtype="bool") /* ty=Tensor[(10, 6, 7), bool] */;
  %40 = shape_of(%var_2369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%var_2369, dtype="bool") /* ty=Tensor[(10, 6, 7), bool] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %43 = greater(%41, %42) /* ty=Tensor[(10, 6, 7), bool] */;
  %44 = cast(%43, dtype="float64") /* ty=Tensor[(10, 6, 7), float64] */;
  %45 = cast(%var_2441, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
  %46 = shape_of(%var_2427, dtype="int32") /* ty=Tensor[(2), int32] */;
  %47 = cast(%var_2427, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %49 = logical_xor(%27, %28) /* ty=Tensor[(1092), int16] */;
  %50 = bitwise_xor(%37, %38) /* ty=Tensor[(117, 3), uint16] */;
  %51 = sqrt(%44) /* ty=Tensor[(10, 6, 7), float64] */;
  %52 = logical_or(%47, %48) /* ty=Tensor[(81, 10), bool] */;
  (%49, meta[relay.Constant][1] /* ty=Tensor[(9), int16] */, %50, %51, %52)
}

def @func_14755(%var_14718: Tensor[(3, 9), uint32], %var_14719: Tensor[(9), int16], %var_14720: Tensor[(3, 270), int16], %var_14721: Tensor[(1092), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(3, 9), uint32], Tensor[(9), int16], Tensor[(3, 270), int16], Tensor[(1092), int16], Tensor[(5, 84), uint16]) {
  %53 = cast(%var_14718, dtype="uint32") /* ty=Tensor[(3, 9), uint32] */;
  %54 = cast(%var_14719, dtype="int16") /* ty=Tensor[(9), int16] */;
  %55 = cast(%var_14720, dtype="int16") /* ty=Tensor[(3, 270), int16] */;
  %56 = cast(%var_14721, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %57 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 84), uint16] */, dtype="uint16") /* ty=Tensor[(5, 84), uint16] */;
  %58 = reshape(%53, newshape=[3, 9]) /* ty=Tensor[(3, 9), uint32] */;
  %59 = reshape(%54, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %60 = reshape(%55, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %61 = reshape(%56, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %62 = reshape(%57, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %63 = @func_11594(%58, %59, %60, %61, %62) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(1, 9), int16], Tensor[(3, 9), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) */;
  %64 = @func_11894() /* ty=Tensor[(9, 11, 2), float64] */;
  %65 = %63.4;
  (%64, %65, %var_14718, %var_14719, %var_14720, %var_14721, meta[relay.Constant][4] /* ty=Tensor[(5, 84), uint16] */)
}

def @func_14836() -> (Tensor[(9, 11, 2), float64], Tensor[(3, 11, 6), uint32]) {
  %66 = @func_13078() /* ty=Tensor[(9, 11, 2), float64] */;
  %67 = cast(%66, dtype="uint32") /* ty=Tensor[(9, 11, 2), uint32] */;
  %68 = cast(%66, dtype="uint32") /* ty=Tensor[(9, 11, 2), uint32] */;
  %69 = reshape(%67, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), uint32] */;
  %70 = reshape(%68, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), uint32] */;
  %71 = @func_7755(%69, %70) /* ty=(Tensor[(3, 11, 6), uint32],) */;
  %72 = %71.0;
  (%66, %72)
}

def @func_11542() -> (Tensor[(9, 11, 2), float64],) {
  %73 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  (%73,)
}

def @func_9455(%var_9443: Tensor[(672), int8], %var_9446: Tensor[(351), bool]) -> (Tensor[(14, 14, 11), int8], Tensor[(3, 117), bool], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(39, 3), bool], Tensor[(351), bool], Tensor[(14, 14, 11), uint8]) {
  %74 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 14, 11), int16] */, dtype="int16") /* ty=Tensor[(14, 14, 11), int16] */;
  %75 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(14, 14, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 14, 11), int16] */, dtype="int16") /* ty=Tensor[(14, 14, 11), int16] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %78 = multiply(%76, %77) /* ty=Tensor[(14, 14, 11), int16] */;
  %79 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 14, 11), int16] */, dtype="int8") /* ty=Tensor[(14, 14, 11), int8] */;
  %80 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%78, dtype="int8") /* ty=Tensor[(14, 14, 11), int8] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %83 = cast(meta[relay.Constant][7] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %84 = cast(%var_9443, dtype="int8") /* ty=Tensor[(672), int8] */;
  %85 = cast(meta[relay.Constant][8] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %86 = cast(meta[relay.Constant][9] /* ty=Tensor[(39, 3), bool] */, dtype="bool") /* ty=Tensor[(39, 3), bool] */;
  %87 = cast(%var_9446, dtype="bool") /* ty=Tensor[(351), bool] */;
  %88 = reshape(%83, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float64] */;
  %89 = reshape(%84, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %90 = reshape(%85, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %91 = reshape(%86, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %92 = reshape(%87, newshape=[3, 117]) /* ty=Tensor[(3, 117), bool] */;
  %93 = @func_4483(%88, %89, %90, %91, %92) /* ty=(Tensor[(8, 14, 6), int8], Tensor[(672), int8], Tensor[(7, 12, 13), int16], Tensor[(1092), int16], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool], Tensor[(4, 9, 11), uint8]) */;
  %94 = cast(%78, dtype="uint8") /* ty=Tensor[(14, 14, 11), uint8] */;
  %95 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(14, 14, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 14, 11), int16] */, dtype="uint8") /* ty=Tensor[(14, 14, 11), uint8] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %98 = maximum(%81, %82) /* ty=Tensor[(14, 14, 11), int8] */;
  %99 = %93.6;
  %100 = bitwise_and(%96, %97) /* ty=Tensor[(14, 14, 11), uint8] */;
  (%98, %99, meta[relay.Constant][7] /* ty=Tensor[(396), float64] */, %var_9443, meta[relay.Constant][8] /* ty=Tensor[(1092), int16] */, meta[relay.Constant][9] /* ty=Tensor[(39, 3), bool] */, %var_9446, %100)
}

def @func_14182(%var_14127: Tensor[(14, 10, 13), float32]) -> (Tensor[(14, 10, 13), float32], Tensor[(14, 10, 13), float32], Tensor[(14, 10, 13), int64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(9, 11, 2), float64]) {
  %101 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 13), float32] */;
  %102 = shape_of(%var_14127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %103 = cast(%var_14127, dtype="float32") /* ty=Tensor[(14, 10, 13), float32] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %105 = cast(%var_14127, dtype="float32") /* ty=Tensor[(14, 10, 13), float32] */;
  %106 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 10, 13), float32] */, dtype="int64") /* ty=Tensor[(14, 10, 13), int64] */;
  %107 = shape_of(%var_14127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%var_14127, dtype="int64") /* ty=Tensor[(14, 10, 13), int64] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %110 = cast(meta[relay.Constant][11] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %111 = reshape(%110, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %112 = mod(%103, %104) /* ty=Tensor[(14, 10, 13), float32] */;
  %113 = acos(%105) /* ty=Tensor[(14, 10, 13), float32] */;
  %114 = multiply(%108, %109) /* ty=Tensor[(14, 10, 13), int64] */;
  %115 = @func_3842(%111) /* ty=Tensor[(3, 7, 1), float64] */;
  %116 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  (%112, %113, %114, %115, meta[relay.Constant][11] /* ty=Tensor[(21), float32] */, %116)
}

def @func_10563() -> (Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) {
  %117 = @func_10380() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float32]) */;
  %118 = cast(meta[relay.Constant][12] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %119 = reshape(%118, newshape=[9, 11, 2]) /* ty=Tensor[(9, 11, 2), float64] */;
  %120 = @func_10162(%119) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(198), uint32]) */;
  %121 = %117.1;
  %122 = %120.0;
  (%121, %122, meta[relay.Constant][12] /* ty=Tensor[(198), float64] */)
}

def @func_13054(%var_13044: Tensor[(22), uint32], %var_13046: Tensor[(180), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(22), uint32], Tensor[(22), uint32], Tensor[(352), uint32], Tensor[(180), float32]) {
  %123 = cast(%var_13044, dtype="uint32") /* ty=Tensor[(22), uint32] */;
  %124 = cast(meta[relay.Constant][13] /* ty=Tensor[(352), uint32] */, dtype="uint32") /* ty=Tensor[(352), uint32] */;
  %125 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  %126 = cast(%125, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %127 = cast(%var_13046, dtype="float32") /* ty=Tensor[(180), float32] */;
  %128 = reshape(%123, newshape=[22]) /* ty=Tensor[(22), uint32] */;
  %129 = reshape(%124, newshape=[352]) /* ty=Tensor[(352), uint32] */;
  %130 = reshape(%126, newshape=[9, 11, 2]) /* ty=Tensor[(9, 11, 2), float64] */;
  %131 = reshape(%127, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %132 = @func_10047(%128, %129, %130, %131) /* ty=(Tensor[(2, 16, 11), float64], uint32, Tensor[(22), uint32], Tensor[(352), uint32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), bool], Tensor[(3, 4, 15), float32], Tensor[(180), float32]) */;
  %133 = @func_10777() /* ty=Tensor[(9, 11, 2), float64] */;
  %134 = %132.2;
  (%133, %125, %134, %var_13044, meta[relay.Constant][13] /* ty=Tensor[(352), uint32] */, %var_13046)
}

def @func_10305() -> (Tensor[(9, 11, 2), float64],) {
  %135 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  (%135,)
}

def @func_14889() -> Tensor[(9, 11, 2), float64] {
  %136 = @func_14046() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %136.0
}

def @func_11117(%var_11103: Tensor[(1, 132), float32], %var_11109: Tensor[(21), float32], %var_11111: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(1, 132), float32], Tensor[(300, 1), float32], Tensor[(27), uint32], Tensor[(9, 1), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) {
  %137 = cast(%var_11103, dtype="float32") /* ty=Tensor[(1, 132), float32] */;
  %138 = reshape(%137, newshape=[2, 11, 6]) /* ty=Tensor[(2, 11, 6), float32] */;
  %139 = @func_8898(%138) /* ty=(Tensor[(2, 11, 6), float32],) */;
  %140 = cast(meta[relay.Constant][14] /* ty=Tensor[(27), uint32] */, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %141 = cast(meta[relay.Constant][14] /* ty=Tensor[(27), uint32] */, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %142 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 1), int16] */, dtype="int16") /* ty=Tensor[(9, 1), int16] */;
  %143 = cast(meta[relay.Constant][16] /* ty=Tensor[(810), int16] */, dtype="int16") /* ty=Tensor[(810), int16] */;
  %144 = cast(%var_11109, dtype="float32") /* ty=Tensor[(21), float32] */;
  %145 = cast(meta[relay.Constant][17] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %146 = cast(%var_11111, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %147 = reshape(%140, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %148 = reshape(%141, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %149 = reshape(%142, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %150 = reshape(%143, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %151 = reshape(%144, newshape=[7, 3]) /* ty=Tensor[(7, 3), float32] */;
  %152 = reshape(%145, newshape=[182, 6]) /* ty=Tensor[(182, 6), int16] */;
  %153 = reshape(%146, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %154 = @func_5594(%147, %148, %149, %150, %151, %152, %153) /* ty=(Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) */;
  %155 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  %156 = %139.0;
  %157 = %154.2;
  (%155, %156, %var_11103, %157, meta[relay.Constant][14] /* ty=Tensor[(27), uint32] */, meta[relay.Constant][15] /* ty=Tensor[(9, 1), int16] */, meta[relay.Constant][16] /* ty=Tensor[(810), int16] */, %var_11109, meta[relay.Constant][17] /* ty=Tensor[(1092), int16] */, %var_11111)
}

def @func_9867() -> Tensor[(9, 11, 2), float64] {
  @func_9803() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_13466() -> (Tensor[(9, 11, 2), float64],) {
  %158 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  (%158,)
}

def @func_13943(%var_13939: Tensor[(10, 12, 15), uint8]) -> Tensor[(10, 12, 15), uint8] {
  %159 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 12, 15), uint8] */, dtype="uint8") /* ty=Tensor[(1, 12, 15), uint8] */;
  %160 = cast(%var_13939, dtype="uint8") /* ty=Tensor[(10, 12, 15), uint8] */;
  bitwise_or(%159, %160) /* ty=Tensor[(10, 12, 15), uint8] */
}

def @func_14435() -> (Tensor[(9, 11, 2), float64],) {
  %161 = @func_14411() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
  %162 = %161.1;
  (%162,)
}

def @func_8635(%var_8623: Tensor[(1, 4, 14), float64], %var_8624: Tensor[(13, 4, 14), float64]) -> (Tensor[(13, 4, 14), float64],) {
  %163 = cast(%var_8623, dtype="float64") /* ty=Tensor[(1, 4, 14), float64] */;
  %164 = cast(%var_8624, dtype="float64") /* ty=Tensor[(13, 4, 14), float64] */;
  %165 = floor_divide(%163, %164) /* ty=Tensor[(13, 4, 14), float64] */;
  (%165,)
}

def @func_11441(%var_11402: Tensor[(600, 2), uint16]) -> (Tensor[(117), bool], Tensor[(600, 2), int8], Tensor[(9, 11, 2), float64], Tensor[(600, 2), int64]) {
  %166 = cast(meta[relay.Constant][19] /* ty=Tensor[(600, 2), uint16] */, dtype="uint16") /* ty=Tensor[(600, 2), uint16] */;
  %167 = cast(meta[relay.Constant][19] /* ty=Tensor[(600, 2), uint16] */, dtype="uint16") /* ty=Tensor[(600, 2), uint16] */;
  %168 = reshape(%166, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint16] */;
  %169 = reshape(%167, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint16] */;
  %170 = @func_9361(%168, %169) /* ty=(Tensor[(5, 15, 16), uint16], Tensor[(5, 15, 16), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool]) */;
  %171 = cast(%var_11402, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
  %172 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(600, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %173 = cast(meta[relay.Constant][19] /* ty=Tensor[(600, 2), uint16] */, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %175 = greater_equal(%173, %174) /* ty=Tensor[(600, 2), bool] */;
  %176 = cast(%175, dtype="int8") /* ty=Tensor[(600, 2), int8] */;
  %177 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(600, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %178 = cast(meta[relay.Constant][19] /* ty=Tensor[(600, 2), uint16] */, dtype="int8") /* ty=Tensor[(600, 2), int8] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %180 = @func_11197() /* ty=Tensor[(9, 11, 2), float64] */;
  %181 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 11, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %182 = shape_of(%180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%180, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %185 = divide(%183, %184) /* ty=Tensor[(9, 11, 2), float64] */;
  %186 = cast(%185, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %187 = cast(%var_11402, dtype="int64") /* ty=Tensor[(600, 2), int64] */;
  %188 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(600, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %189 = cast(meta[relay.Constant][19] /* ty=Tensor[(600, 2), uint16] */, dtype="int64") /* ty=Tensor[(600, 2), int64] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %191 = %170.3;
  %192 = right_shift(%178, %179) /* ty=Tensor[(600, 2), int8] */;
  %193 = asinh(%186) /* ty=Tensor[(9, 11, 2), float64] */;
  %194 = add(%189, %190) /* ty=Tensor[(600, 2), int64] */;
  (%191, %192, %193, %194)
}

def @func_15258() -> (Tensor[(9, 11, 2), float64],) {
  %195 = @func_14836() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(3, 11, 6), uint32]) */;
  %196 = %195.0;
  (%196,)
}

def @func_14679(%var_14676: Tensor[(78), int8]) -> (Tensor[(5, 16, ?), float32], Tensor[(78), int8], int8, Tensor[(78), int8]) {
  %197 = @func_10563() /* ty=(Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) */;
  %198 = cast(meta[relay.Constant][21] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %199 = cast(%var_14676, dtype="int8") /* ty=Tensor[(78), int8] */;
  %200 = reshape(%198, newshape=[]) /* ty=int8 */;
  %201 = reshape(%199, newshape=[78]) /* ty=Tensor[(78), int8] */;
  %202 = @func_13821(%200, %201) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(6, 13, 1), bool], int8, Tensor[(78), int8], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
  %203 = %197.0;
  %204 = %202.3;
  (%203, %204, meta[relay.Constant][21] /* ty=int8 */, %var_14676)
}

def @func_14301(%var_14294: Tensor[(72), int32], %var_14297: Tensor[(1092), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(9), int16], Tensor[(72), int32], Tensor[(810), int16], Tensor[(672), int8], Tensor[(1092), int16]) {
  %205 = cast(%var_14294, dtype="int32") /* ty=Tensor[(72), int32] */;
  %206 = cast(%var_14294, dtype="int32") /* ty=Tensor[(72), int32] */;
  %207 = cast(meta[relay.Constant][22] /* ty=Tensor[(810), int16] */, dtype="int16") /* ty=Tensor[(810), int16] */;
  %208 = cast(meta[relay.Constant][23] /* ty=Tensor[(672), int8] */, dtype="int8") /* ty=Tensor[(672), int8] */;
  %209 = cast(%var_14297, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %210 = reshape(%205, newshape=[12, 3, 2]) /* ty=Tensor[(12, 3, 2), int32] */;
  %211 = reshape(%206, newshape=[12, 3, 2]) /* ty=Tensor[(12, 3, 2), int32] */;
  %212 = reshape(%207, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %213 = reshape(%208, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %214 = reshape(%209, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %215 = @func_6498(%210, %211, %212, %213, %214) /* ty=(Tensor[(12, 3, 2), bool], Tensor[(9), int16], Tensor[(420), uint16], Tensor[(810), int16], Tensor[(396), float64], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16]) */;
  %216 = @func_12473() /* ty=Tensor[(9, 11, 2), float64] */;
  %217 = %215.1;
  (%216, %217, %var_14294, meta[relay.Constant][22] /* ty=Tensor[(810), int16] */, meta[relay.Constant][23] /* ty=Tensor[(672), int8] */, %var_14297)
}

def @func_8743(%var_8702: Tensor[(14, 7, 16), float32], %var_8703: Tensor[(14, 7, 16), float32], %var_8712: Tensor[(27), uint32], %var_8714: Tensor[(1092), int16], %var_8715: Tensor[(616, 2), int8], %var_8725: Tensor[(420), uint16]) -> (Tensor[(14, 7, 16), float32], Tensor[(1, 9), int16], Tensor[(27), uint32], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(616, 2), int8], Tensor[(7, 12, 13), int16], Tensor[(21), float32], Tensor[(420), uint16], Tensor[(2, 312), float64]) {
  %218 = cast(%var_8703, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  %219 = shape_of(%var_8702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%var_8702, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %222 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 312), float32] */, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
  %223 = cast(%var_8712, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %224 = cast(meta[relay.Constant][25] /* ty=Tensor[(810), int16] */, dtype="int16") /* ty=Tensor[(810), int16] */;
  %225 = cast(%var_8714, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %226 = cast(%var_8715, dtype="int8") /* ty=Tensor[(616, 2), int8] */;
  %227 = reshape(%222, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %228 = reshape(%223, newshape=[1, 27]) /* ty=Tensor[(1, 27), uint32] */;
  %229 = reshape(%224, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %230 = reshape(%225, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %231 = reshape(%226, newshape=[1232]) /* ty=Tensor[(1232), int8] */;
  %232 = @func_8331(%227, %228, %229, %230, %231) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(1, 9), int16], Tensor[(1, 27), uint32], Tensor[(9), int16], Tensor[(81, 10), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(396), float64], Tensor[(168, 4), int8]) */;
  %233 = cast(%var_8712, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %234 = cast(%var_8712, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %235 = %232.1;
  %236 = cast(%235, dtype="int16") /* ty=Tensor[(1, 9), int16] */;
  %237 = cast(meta[relay.Constant][25] /* ty=Tensor[(810), int16] */, dtype="int16") /* ty=Tensor[(810), int16] */;
  %238 = cast(meta[relay.Constant][26] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %239 = cast(%var_8714, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %240 = cast(%var_8725, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %241 = reshape(%233, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %242 = reshape(%234, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %243 = reshape(%236, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %244 = reshape(%237, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %245 = reshape(%238, newshape=[7, 3]) /* ty=Tensor[(7, 3), float32] */;
  %246 = reshape(%239, newshape=[182, 6]) /* ty=Tensor[(182, 6), int16] */;
  %247 = reshape(%240, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %248 = @func_5594(%241, %242, %243, %244, %245, %246, %247) /* ty=(Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) */;
  %249 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 312), float32] */, dtype="float64") /* ty=Tensor[(2, 312), float64] */;
  %250 = divide(%220, %221) /* ty=Tensor[(14, 7, 16), float32] */;
  %251 = %248.7;
  %252 = cosh(%249) /* ty=Tensor[(2, 312), float64] */;
  (%250, %235, %var_8712, meta[relay.Constant][25] /* ty=Tensor[(810), int16] */, %var_8714, %var_8715, %251, meta[relay.Constant][26] /* ty=Tensor[(21), float32] */, %var_8725, %252)
}

def @func_12006(%var_11964: Tensor[(132), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 1), int16], Tensor[(132), float32], Tensor[(21), float32], Tensor[(420), uint16]) {
  %253 = @func_10305() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %254 = cast(%var_11964, dtype="float32") /* ty=Tensor[(132), float32] */;
  %255 = cast(meta[relay.Constant][27] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %256 = cast(meta[relay.Constant][28] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %257 = reshape(%254, newshape=[1, 132]) /* ty=Tensor[(1, 132), float32] */;
  %258 = reshape(%255, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %259 = reshape(%256, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %260 = @func_11117(%257, %258, %259) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(1, 132), float32], Tensor[(300, 1), float32], Tensor[(27), uint32], Tensor[(9, 1), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) */;
  %261 = %253.0;
  %262 = %260.5;
  (%261, %262, %var_11964, meta[relay.Constant][27] /* ty=Tensor[(21), float32] */, meta[relay.Constant][28] /* ty=Tensor[(420), uint16] */)
}

def @func_11033(%var_11003: Tensor[(1092), int16], %var_11005: Tensor[(1, 21), float32], %var_11019: Tensor[(2, 336), int8]) -> (Tensor[(9, 11, 2), float64], Tensor[(1568), float32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(1, 21), float32], Tensor[(10, 14, 14), int64], Tensor[(1960), int64], Tensor[(8, 14, 6), int8], Tensor[(2, 336), int8], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(405, 2), int16]) {
  %263 = @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %264 = cast(%var_11003, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %265 = cast(meta[relay.Constant][29] /* ty=Tensor[(1232), int8] */, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %266 = cast(%var_11005, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
  %267 = reshape(%264, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %268 = reshape(%265, newshape=[1232]) /* ty=Tensor[(1232), int8] */;
  %269 = reshape(%266, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %270 = @func_10240(%267, %268, %269) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(27, 1), uint32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(420), uint16], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) */;
  %271 = cast(meta[relay.Constant][30] /* ty=Tensor[(1960), int64] */, dtype="int64") /* ty=Tensor[(1960), int64] */;
  %272 = reshape(%271, newshape=[10, 14, 14]) /* ty=Tensor[(10, 14, 14), int64] */;
  %273 = cast(%var_11019, dtype="int8") /* ty=Tensor[(2, 336), int8] */;
  %274 = reshape(%273, newshape=[8, 14, 6]) /* ty=Tensor[(8, 14, 6), int8] */;
  %275 = @func_2766(%274) /* ty=(Tensor[(8, 14, 6), int8],) */;
  %276 = cast(meta[relay.Constant][31] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %277 = cast(meta[relay.Constant][32] /* ty=Tensor[(405, 2), int16] */, dtype="int16") /* ty=Tensor[(405, 2), int16] */;
  %278 = cast(meta[relay.Constant][32] /* ty=Tensor[(405, 2), int16] */, dtype="int16") /* ty=Tensor[(405, 2), int16] */;
  %279 = reshape(%276, newshape=[10, 6, 7]) /* ty=Tensor[(10, 6, 7), uint16] */;
  %280 = reshape(%277, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %281 = reshape(%278, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %282 = @func_2448(%279, %280, %281) /* ty=(Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) */;
  %283 = %263.0;
  %284 = %270.2;
  %285 = @func_4734(%272) /* ty=Tensor[(10, 14, 14), int64] */;
  %286 = %275.0;
  %287 = %282.2;
  (%283, %284, %var_11003, meta[relay.Constant][29] /* ty=Tensor[(1232), int8] */, %var_11005, %285, meta[relay.Constant][30] /* ty=Tensor[(1960), int64] */, %286, %var_11019, %287, meta[relay.Constant][31] /* ty=Tensor[(420), uint16] */, meta[relay.Constant][32] /* ty=Tensor[(405, 2), int16] */)
}

def @func_11594(%var_11584: Tensor[(3, 9), uint32], %var_11585: Tensor[(9), int16], %var_11586: Tensor[(810), int16], %var_11588: Tensor[(1092), int16], %var_11589: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(1, 9), int16], Tensor[(3, 9), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) {
  %288 = cast(%var_11584, dtype="uint32") /* ty=Tensor[(3, 9), uint32] */;
  %289 = cast(%var_11584, dtype="uint32") /* ty=Tensor[(3, 9), uint32] */;
  %290 = cast(%var_11585, dtype="int16") /* ty=Tensor[(9), int16] */;
  %291 = cast(%var_11586, dtype="int16") /* ty=Tensor[(810), int16] */;
  %292 = cast(meta[relay.Constant][33] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %293 = cast(%var_11588, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %294 = cast(%var_11589, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %295 = reshape(%288, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %296 = reshape(%289, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %297 = reshape(%290, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %298 = reshape(%291, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %299 = reshape(%292, newshape=[7, 3]) /* ty=Tensor[(7, 3), float32] */;
  %300 = reshape(%293, newshape=[182, 6]) /* ty=Tensor[(182, 6), int16] */;
  %301 = reshape(%294, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %302 = @func_5594(%295, %296, %297, %298, %299, %300, %301) /* ty=(Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) */;
  %303 = @func_11183() /* ty=Tensor[(9, 11, 2), float64] */;
  %304 = %302.3;
  (%303, %304, %var_11584, %var_11585, %var_11586, meta[relay.Constant][33] /* ty=Tensor[(21), float32] */, %var_11588, %var_11589)
}

def @func_12582() -> Tensor[(9, 11, 2), float64] {
  @func_10777() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_14411() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %305 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  %306 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  (%305, %306)
}

def @func_14375() -> (Tensor[(9, 11, 2), float64],) {
  %307 = @func_13352() /* ty=Tensor[(9, 11, 2), float64] */;
  (%307,)
}

def @func_8042(%var_7999: uint32, %var_8000: Tensor[(2, 1, 11), uint32], %var_8027: Tensor[(2, 16, 11), uint32]) -> (Tensor[(2, 16, 11), float64],) {
  %308 = cast(%var_7999, dtype="uint32") /* ty=uint32 */;
  %309 = cast(%var_8000, dtype="uint32") /* ty=Tensor[(2, 1, 11), uint32] */;
  %310 = bitwise_or(%308, %309) /* ty=Tensor[(2, 1, 11), uint32] */;
  %311 = cast(%310, dtype="int16") /* ty=Tensor[(2, 1, 11), int16] */;
  %312 = cast(%var_8027, dtype="int16") /* ty=Tensor[(2, 16, 11), int16] */;
  %313 = left_shift(%311, %312) /* ty=Tensor[(2, 16, 11), int16] */;
  %314 = cast(%313, dtype="float64") /* ty=Tensor[(2, 16, 11), float64] */;
  %315 = cast(%var_7999, dtype="float64") /* ty=float64 */;
  %316 = divide(%314, %315) /* ty=Tensor[(2, 16, 11), float64] */;
  (%316,)
}

def @func_15070() -> Tensor[(9, 11, 2), float64] {
  @func_12045() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_2766(%var_2752: Tensor[(8, 14, 6), int8]) -> (Tensor[(8, 14, 6), int8],) {
  %317 = cast(%var_2752, dtype="int8") /* ty=Tensor[(8, 14, 6), int8] */;
  %318 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(8, 14, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 14, 6), int8] */, dtype="int8") /* ty=Tensor[(8, 14, 6), int8] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %321 = logical_xor(%319, %320) /* ty=Tensor[(8, 14, 6), int8] */;
  (%321,)
}

def @func_5868(%var_5858: Tensor[(5, 16, 1), float32]) -> Tensor[(5, 16, ?), bool] {
  %322 = cast(%var_5858, dtype="float32") /* ty=Tensor[(5, 16, 1), float32] */;
  %323 = tan(%322) /* ty=Tensor[(5, 16, 1), float32] */;
  %324 = cast(%var_5858, dtype="bool") /* ty=Tensor[(5, 16, 1), bool] */;
  %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%323, dtype="bool") /* ty=Tensor[(5, 16, 1), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%326, %327) /* ty=Tensor[(5, 16, ?), bool] */
}

def @func_11650(%var_11623: uint32, %var_11624: Tensor[(9, 8, 14), uint32]) -> Tensor[(9, 8, 14), int8] {
  %328 = cast(%var_11623, dtype="bool") /* ty=bool */;
  %329 = cast(%var_11624, dtype="bool") /* ty=Tensor[(9, 8, 14), bool] */;
  %330 = greater(%328, %329) /* ty=Tensor[(9, 8, 14), bool] */;
  %331 = cast(%330, dtype="int8") /* ty=Tensor[(9, 8, 14), int8] */;
  %332 = shape_of(%var_11624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%var_11624, dtype="int8") /* ty=Tensor[(9, 8, 14), int8] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  subtract(%333, %334) /* ty=Tensor[(9, 8, 14), int8] */
}

def @func_8331(%var_8274: Tensor[(13, 3, 16), float32], %var_8297: Tensor[(1, 27), uint32], %var_8299: Tensor[(81, 10), int16], %var_8301: Tensor[(1092), int16], %var_8310: Tensor[(1232), int8]) -> (Tensor[(13, 3, 16), float32], Tensor[(1, 9), int16], Tensor[(1, 27), uint32], Tensor[(9), int16], Tensor[(81, 10), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(396), float64], Tensor[(168, 4), int8]) {
  %335 = cast(%var_8274, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %336 = cast(%var_8297, dtype="uint32") /* ty=Tensor[(1, 27), uint32] */;
  %337 = cast(%var_8297, dtype="uint32") /* ty=Tensor[(1, 27), uint32] */;
  %338 = cast(meta[relay.Constant][35] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %339 = cast(%var_8299, dtype="int16") /* ty=Tensor[(81, 10), int16] */;
  %340 = cast(meta[relay.Constant][36] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %341 = cast(%var_8301, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %342 = cast(meta[relay.Constant][37] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %343 = reshape(%336, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %344 = reshape(%337, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %345 = reshape(%338, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %346 = reshape(%339, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %347 = reshape(%340, newshape=[7, 3]) /* ty=Tensor[(7, 3), float32] */;
  %348 = reshape(%341, newshape=[182, 6]) /* ty=Tensor[(182, 6), int16] */;
  %349 = reshape(%342, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %350 = @func_5594(%343, %344, %345, %346, %347, %348, %349) /* ty=(Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) */;
  %351 = cast(%var_8310, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %352 = cast(meta[relay.Constant][36] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %353 = cast(meta[relay.Constant][38] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %354 = cast(meta[relay.Constant][39] /* ty=Tensor[(168, 4), int8] */, dtype="int8") /* ty=Tensor[(168, 4), int8] */;
  %355 = cast(%var_8301, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %356 = cast(%var_8299, dtype="int16") /* ty=Tensor[(81, 10), int16] */;
  %357 = reshape(%351, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), int8] */;
  %358 = reshape(%352, newshape=[21, 1]) /* ty=Tensor[(21, 1), float32] */;
  %359 = reshape(%353, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %360 = reshape(%354, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %361 = reshape(%355, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %362 = reshape(%356, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %363 = @func_5254(%357, %358, %359, %360, %361, %362) /* ty=(Tensor[(8, 14, 11), int8], Tensor[(3, 7, 1), float64], Tensor[(21, 1), float32], Tensor[(8, 14, 6), int8], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(810), int16]) */;
  %364 = atan(%335) /* ty=Tensor[(13, 3, 16), float32] */;
  %365 = %350.3;
  %366 = %363.6;
  (%364, %365, %var_8297, meta[relay.Constant][35] /* ty=Tensor[(9), int16] */, %var_8299, meta[relay.Constant][36] /* ty=Tensor[(21), float32] */, %var_8301, meta[relay.Constant][37] /* ty=Tensor[(420), uint16] */, %366, %var_8310, meta[relay.Constant][38] /* ty=Tensor[(396), float64] */, meta[relay.Constant][39] /* ty=Tensor[(168, 4), int8] */)
}

def @func_12526(%var_12517: Tensor[(15, 4, 9), float32]) -> (Tensor[(15, 4, 9), float32],) {
  %367 = cast(%var_12517, dtype="float32") /* ty=Tensor[(15, 4, 9), float32] */;
  %368 = tan(%367) /* ty=Tensor[(15, 4, 9), float32] */;
  (%368,)
}

def @func_14851() -> (Tensor[(9, 11, 2), float64],) {
  %369 = @func_14046() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %370 = %369.0;
  (%370,)
}

def @func_8898(%var_8894: Tensor[(2, 11, 6), float32]) -> (Tensor[(2, 11, 6), float32],) {
  %371 = cast(%var_8894, dtype="float32") /* ty=Tensor[(2, 11, 6), float32] */;
  %372 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(2, 11, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 6), float32] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %375 = power(%373, %374) /* ty=Tensor[(2, 11, 6), float32] */;
  (%375,)
}

def @func_11197() -> Tensor[(9, 11, 2), float64] {
  @func_10777() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_14455(%var_14450: Tensor[(14, 15, 12), bool]) -> (Tensor[(14, 15, 12), bool],) {
  %376 = cast(meta[relay.Constant][41] /* ty=Tensor[(14, 15, 12), bool] */, dtype="bool") /* ty=Tensor[(14, 15, 12), bool] */;
  %377 = shape_of(%var_14450, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%var_14450, dtype="bool") /* ty=Tensor[(14, 15, 12), bool] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %380 = logical_and(%378, %379) /* ty=Tensor[(14, 15, 12), bool] */;
  (%380,)
}

def @func_14869() -> (Tensor[(9, 11, 2), float64],) {
  %381 = @func_14258() /* ty=Tensor[(9, 11, 2), float64] */;
  (%381,)
}

def @func_10436() -> (Tensor[(9, 11, 2), float64],) {
  %382 = @func_10305() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %383 = %382.0;
  (%383,)
}

def @func_10047(%var_9974: Tensor[(22), uint32], %var_9975: Tensor[(352), uint32], %var_9995: Tensor[(9, 11, 2), float64], %var_10007: Tensor[(180), float32]) -> (Tensor[(2, 16, 11), float64], uint32, Tensor[(22), uint32], Tensor[(352), uint32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), bool], Tensor[(3, 4, 15), float32], Tensor[(180), float32]) {
  %384 = cast(meta[relay.Constant][42] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %385 = cast(%var_9974, dtype="uint32") /* ty=Tensor[(22), uint32] */;
  %386 = cast(%var_9975, dtype="uint32") /* ty=Tensor[(352), uint32] */;
  %387 = reshape(%384, newshape=[]) /* ty=uint32 */;
  %388 = reshape(%385, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), uint32] */;
  %389 = reshape(%386, newshape=[2, 16, 11]) /* ty=Tensor[(2, 16, 11), uint32] */;
  %390 = @func_8042(%387, %388, %389) /* ty=(Tensor[(2, 16, 11), float64],) */;
  %391 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  %392 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 11, 2), float64] */, dtype="bool") /* ty=Tensor[(9, 11, 2), bool] */;
  %393 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
  %394 = cast(%391, dtype="bool") /* ty=Tensor[(9, 11, 2), bool] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %396 = logical_and(%394, %395) /* ty=Tensor[(9, 11, 2), bool] */;
  %397 = cast(%396, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %398 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%391, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %401 = cast(%var_9995, dtype="bool") /* ty=Tensor[(9, 11, 2), bool] */;
  %402 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
  %403 = cast(%391, dtype="bool") /* ty=Tensor[(9, 11, 2), bool] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %405 = cast(%var_10007, dtype="float32") /* ty=Tensor[(180), float32] */;
  %406 = cast(%var_10007, dtype="float32") /* ty=Tensor[(180), float32] */;
  %407 = reshape(%405, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %408 = reshape(%406, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %409 = @func_6878(%407, %408) /* ty=(Tensor[(3, 4, 15), float32],) */;
  %410 = %390.0;
  %411 = floor_divide(%399, %400) /* ty=Tensor[(9, 11, 2), float64] */;
  %412 = less(%403, %404) /* ty=Tensor[(9, 11, 2), bool] */;
  %413 = %409.0;
  (%410, meta[relay.Constant][42] /* ty=uint32 */, %var_9974, %var_9975, %411, %412, %413, %var_10007)
}

def @func_14087(%var_14076: Tensor[(1960), int64], %var_14081: Tensor[(1092), int16], %var_14082: Tensor[(4, 308), int8], %var_14083: Tensor[(1, 420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(10, 14, 14), int64], Tensor[(1960), int64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(1, 27), uint32], Tensor[(1092), int16], Tensor[(4, 308), int8], Tensor[(1, 420), uint16]) {
  %414 = cast(%var_14076, dtype="int64") /* ty=Tensor[(1960), int64] */;
  %415 = reshape(%414, newshape=[10, 14, 14]) /* ty=Tensor[(10, 14, 14), int64] */;
  %416 = cast(meta[relay.Constant][44] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %417 = cast(meta[relay.Constant][44] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %418 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 27), uint32] */, dtype="uint32") /* ty=Tensor[(1, 27), uint32] */;
  %419 = cast(%var_14081, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %420 = cast(%var_14082, dtype="int8") /* ty=Tensor[(4, 308), int8] */;
  %421 = cast(%var_14083, dtype="uint16") /* ty=Tensor[(1, 420), uint16] */;
  %422 = reshape(%416, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
  %423 = reshape(%417, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
  %424 = reshape(%418, newshape=[27]) /* ty=Tensor[(27), uint32] */;
  %425 = reshape(%419, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %426 = reshape(%420, newshape=[616, 2]) /* ty=Tensor[(616, 2), int8] */;
  %427 = reshape(%421, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %428 = @func_8743(%422, %423, %424, %425, %426, %427) /* ty=(Tensor[(14, 7, 16), float32], Tensor[(1, 9), int16], Tensor[(27), uint32], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(616, 2), int8], Tensor[(7, 12, 13), int16], Tensor[(21), float32], Tensor[(420), uint16], Tensor[(2, 312), float64]) */;
  %429 = @func_13352() /* ty=Tensor[(9, 11, 2), float64] */;
  %430 = @func_4734(%415) /* ty=Tensor[(10, 14, 14), int64] */;
  %431 = %428.3;
  (%429, %430, %var_14076, %431, meta[relay.Constant][44] /* ty=Tensor[(1568), float32] */, meta[relay.Constant][45] /* ty=Tensor[(1, 27), uint32] */, %var_14081, %var_14082, %var_14083)
}

def @func_10117(%var_10102: Tensor[(22), uint32]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 16, 11), float64], uint32, Tensor[(22), uint32], Tensor[(4, 88), uint32]) {
  %432 = cast(meta[relay.Constant][46] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %433 = cast(%var_10102, dtype="uint32") /* ty=Tensor[(22), uint32] */;
  %434 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 88), uint32] */, dtype="uint32") /* ty=Tensor[(4, 88), uint32] */;
  %435 = reshape(%432, newshape=[]) /* ty=uint32 */;
  %436 = reshape(%433, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), uint32] */;
  %437 = reshape(%434, newshape=[2, 16, 11]) /* ty=Tensor[(2, 16, 11), uint32] */;
  %438 = @func_8042(%435, %436, %437) /* ty=(Tensor[(2, 16, 11), float64],) */;
  %439 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  %440 = %438.0;
  (%439, %440, meta[relay.Constant][46] /* ty=uint32 */, %var_10102, meta[relay.Constant][47] /* ty=Tensor[(4, 88), uint32] */)
}

def @func_6498(%var_6416: Tensor[(12, 3, 2), int32], %var_6417: Tensor[(12, 3, 2), int32], %var_6444: Tensor[(810), int16], %var_6452: Tensor[(672), int8], %var_6453: Tensor[(1092), int16]) -> (Tensor[(12, 3, 2), bool], Tensor[(9), int16], Tensor[(420), uint16], Tensor[(810), int16], Tensor[(396), float64], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16]) {
  %441 = cast(%var_6417, dtype="bool") /* ty=Tensor[(12, 3, 2), bool] */;
  %442 = shape_of(%var_6416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%var_6416, dtype="bool") /* ty=Tensor[(12, 3, 2), bool] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %445 = cast(meta[relay.Constant][48] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %446 = cast(%var_6444, dtype="int16") /* ty=Tensor[(810), int16] */;
  %447 = cast(%var_6444, dtype="int16") /* ty=Tensor[(810), int16] */;
  %448 = reshape(%445, newshape=[10, 6, 7]) /* ty=Tensor[(10, 6, 7), uint16] */;
  %449 = reshape(%446, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %450 = reshape(%447, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %451 = @func_2448(%448, %449, %450) /* ty=(Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) */;
  %452 = cast(meta[relay.Constant][49] /* ty=Tensor[(1232), int8] */, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %453 = cast(meta[relay.Constant][50] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %454 = cast(meta[relay.Constant][51] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %455 = cast(%var_6452, dtype="int8") /* ty=Tensor[(672), int8] */;
  %456 = cast(%var_6453, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %457 = cast(%var_6444, dtype="int16") /* ty=Tensor[(810), int16] */;
  %458 = reshape(%452, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), int8] */;
  %459 = reshape(%453, newshape=[21, 1]) /* ty=Tensor[(21, 1), float32] */;
  %460 = reshape(%454, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %461 = reshape(%455, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %462 = reshape(%456, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %463 = reshape(%457, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %464 = @func_5254(%458, %459, %460, %461, %462, %463) /* ty=(Tensor[(8, 14, 11), int8], Tensor[(3, 7, 1), float64], Tensor[(21, 1), float32], Tensor[(8, 14, 6), int8], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(810), int16]) */;
  %465 = equal(%443, %444) /* ty=Tensor[(12, 3, 2), bool] */;
  %466 = %451.1;
  %467 = %464.4;
  (%465, %466, meta[relay.Constant][48] /* ty=Tensor[(420), uint16] */, %var_6444, %467, meta[relay.Constant][49] /* ty=Tensor[(1232), int8] */, meta[relay.Constant][50] /* ty=Tensor[(21), float32] */, meta[relay.Constant][51] /* ty=Tensor[(396), float64] */, %var_6452, %var_6453)
}

def @func_14666() -> (Tensor[(9, 11, 2), float64],) {
  %468 = @func_13078() /* ty=Tensor[(9, 11, 2), float64] */;
  (%468,)
}

def @func_11928() -> Tensor[(5, 16, ?), float32] {
  %469 = @func_10380() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float32]) */;
  %469.1
}

def @func_10380() -> (Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float32]) {
  %470 = cast(meta[relay.Constant][52] /* ty=Tensor[(20, 4), float32] */, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %471 = reshape(%470, newshape=[5, 16, 1]) /* ty=Tensor[(5, 16, 1), float32] */;
  %472 = @func_5868(%471) /* ty=Tensor[(5, 16, ?), bool] */;
  %473 = cast(meta[relay.Constant][52] /* ty=Tensor[(20, 4), float32] */, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %474 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %475 = cast(%472, dtype="float32") /* ty=Tensor[(5, 16, ?), float32] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %477 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  %478 = add(%475, %476) /* ty=Tensor[(5, 16, ?), float32] */;
  (%477, %478)
}

def @func_4734(%var_4729: Tensor[(10, 14, 14), int64]) -> Tensor[(10, 14, 14), int64] {
  %479 = cast(%var_4729, dtype="int64") /* ty=Tensor[(10, 14, 14), int64] */;
  %480 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(10, 14, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(meta[relay.Constant][53] /* ty=Tensor[(10, 14, 14), int64] */, dtype="int64") /* ty=Tensor[(10, 14, 14), int64] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%481, %482) /* ty=Tensor[(10, 14, 14), int64] */
}

def @func_12973() -> (Tensor[(9, 11, 2), float64], Tensor[(3, 11, 6), uint32]) {
  %483 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  %484 = cast(%483, dtype="uint32") /* ty=Tensor[(9, 11, 2), uint32] */;
  %485 = cast(%483, dtype="uint32") /* ty=Tensor[(9, 11, 2), uint32] */;
  %486 = reshape(%484, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), uint32] */;
  %487 = reshape(%485, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), uint32] */;
  %488 = @func_7755(%486, %487) /* ty=(Tensor[(3, 11, 6), uint32],) */;
  %489 = %488.0;
  (%483, %489)
}

def @func_7967(%var_7881: Tensor[(13, 15, 6), int16], %var_7882: Tensor[(13, 15, 6), int16], %var_7899: Tensor[(396), float64], %var_7900: Tensor[(672), int8], %var_7961: Tensor[(1232), int8], %var_7962: Tensor[(21), float32], %var_7963: Tensor[(810), int16]) -> (Tensor[(13, 15, 6), bool], Tensor[(117), bool], Tensor[(396), float64], Tensor[(672), int8], Tensor[(117), bool], Tensor[(351), bool], Tensor[(7, 156), float32], Tensor[(7, 156), bool], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(810), int16]) {
  %490 = cast(%var_7882, dtype="bool") /* ty=Tensor[(13, 15, 6), bool] */;
  %491 = shape_of(%var_7881, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%var_7881, dtype="bool") /* ty=Tensor[(13, 15, 6), bool] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %494 = cast(%var_7899, dtype="float64") /* ty=Tensor[(396), float64] */;
  %495 = cast(%var_7900, dtype="int8") /* ty=Tensor[(672), int8] */;
  %496 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 156), int16] */, dtype="int16") /* ty=Tensor[(7, 156), int16] */;
  %497 = cast(meta[relay.Constant][55] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %498 = cast(meta[relay.Constant][56] /* ty=Tensor[(351), bool] */, dtype="bool") /* ty=Tensor[(351), bool] */;
  %499 = reshape(%494, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float64] */;
  %500 = reshape(%495, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %501 = reshape(%496, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %502 = reshape(%497, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %503 = reshape(%498, newshape=[3, 117]) /* ty=Tensor[(3, 117), bool] */;
  %504 = @func_4483(%499, %500, %501, %502, %503) /* ty=(Tensor[(8, 14, 6), int8], Tensor[(672), int8], Tensor[(7, 12, 13), int16], Tensor[(1092), int16], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool], Tensor[(4, 9, 11), uint8]) */;
  %505 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 156), int16] */, dtype="float32") /* ty=Tensor[(7, 156), float32] */;
  %506 = asin(%505) /* ty=Tensor[(7, 156), float32] */;
  %507 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 156), int16] */, dtype="int8") /* ty=Tensor[(7, 156), int8] */;
  %508 = shape_of(%506, dtype="int32") /* ty=Tensor[(2), int32] */;
  %509 = cast(%506, dtype="int8") /* ty=Tensor[(7, 156), int8] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %511 = add(%509, %510) /* ty=Tensor[(7, 156), int8] */;
  %512 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 156), int16] */, dtype="float32") /* ty=Tensor[(7, 156), float32] */;
  %513 = shape_of(%511, dtype="int32") /* ty=Tensor[(2), int32] */;
  %514 = cast(%511, dtype="float32") /* ty=Tensor[(7, 156), float32] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %516 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 156), int16] */, dtype="int16") /* ty=Tensor[(7, 156), int16] */;
  %517 = shape_of(%506, dtype="int32") /* ty=Tensor[(2), int32] */;
  %518 = cast(%506, dtype="int16") /* ty=Tensor[(7, 156), int16] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %520 = right_shift(%518, %519) /* ty=Tensor[(7, 156), int16] */;
  %521 = cast(%511, dtype="int16") /* ty=Tensor[(7, 156), int16] */;
  %522 = shape_of(%506, dtype="int32") /* ty=Tensor[(2), int32] */;
  %523 = cast(%506, dtype="int16") /* ty=Tensor[(7, 156), int16] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %525 = subtract(%523, %524) /* ty=Tensor[(7, 156), int16] */;
  %526 = cast(%525, dtype="bool") /* ty=Tensor[(7, 156), bool] */;
  %527 = shape_of(%520, dtype="int32") /* ty=Tensor[(2), int32] */;
  %528 = cast(%520, dtype="bool") /* ty=Tensor[(7, 156), bool] */;
  %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %530 = cast(%var_7961, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %531 = cast(%var_7962, dtype="float32") /* ty=Tensor[(21), float32] */;
  %532 = cast(%var_7899, dtype="float64") /* ty=Tensor[(396), float64] */;
  %533 = cast(%var_7900, dtype="int8") /* ty=Tensor[(672), int8] */;
  %534 = cast(%506, dtype="int16") /* ty=Tensor[(7, 156), int16] */;
  %535 = cast(%var_7963, dtype="int16") /* ty=Tensor[(810), int16] */;
  %536 = reshape(%530, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), int8] */;
  %537 = reshape(%531, newshape=[21, 1]) /* ty=Tensor[(21, 1), float32] */;
  %538 = reshape(%532, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %539 = reshape(%533, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %540 = reshape(%534, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %541 = reshape(%535, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %542 = @func_5254(%536, %537, %538, %539, %540, %541) /* ty=(Tensor[(8, 14, 11), int8], Tensor[(3, 7, 1), float64], Tensor[(21, 1), float32], Tensor[(8, 14, 6), int8], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(810), int16]) */;
  %543 = less_equal(%492, %493) /* ty=Tensor[(13, 15, 6), bool] */;
  %544 = %504.5;
  %545 = power(%514, %515) /* ty=Tensor[(7, 156), float32] */;
  %546 = logical_and(%528, %529) /* ty=Tensor[(7, 156), bool] */;
  %547 = %542.6;
  (%543, %544, %var_7899, %var_7900, meta[relay.Constant][55] /* ty=Tensor[(117), bool] */, meta[relay.Constant][56] /* ty=Tensor[(351), bool] */, %545, %546, %547, %var_7961, %var_7962, %var_7963)
}

def @func_12045() -> Tensor[(9, 11, 2), float64] {
  @func_11183() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_12186() -> Tensor[(9, 11, 2), float64] {
  @func_9803() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_5594(%var_5520: Tensor[(3, 3, 3), uint32], %var_5521: Tensor[(3, 3, 3), uint32], %var_5556: Tensor[(1, 9), int16], %var_5557: Tensor[(810), int16], %var_5568: Tensor[(7, 3), float32], %var_5585: Tensor[(182, 6), int16], %var_5589: Tensor[(420), uint16]) -> (Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) {
  %548 = cast(%var_5521, dtype="bool") /* ty=Tensor[(3, 3, 3), bool] */;
  %549 = shape_of(%var_5520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%var_5520, dtype="bool") /* ty=Tensor[(3, 3, 3), bool] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %552 = equal(%550, %551) /* ty=Tensor[(3, 3, 3), bool] */;
  %553 = cast(%var_5520, dtype="bool") /* ty=Tensor[(3, 3, 3), bool] */;
  %554 = shape_of(%552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%552, dtype="bool") /* ty=Tensor[(3, 3, 3), bool] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %557 = cast(meta[relay.Constant][57] /* ty=Tensor[(300, 1), float32] */, dtype="float32") /* ty=Tensor[(300, 1), float32] */;
  %558 = cast(%var_5556, dtype="int16") /* ty=Tensor[(1, 9), int16] */;
  %559 = cast(%var_5557, dtype="int16") /* ty=Tensor[(810), int16] */;
  %560 = reshape(%557, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), float32] */;
  %561 = reshape(%558, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %562 = reshape(%559, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %563 = @func_3922(%560, %561, %562) /* ty=(Tensor[(2, 10, 15), float32], Tensor[(2, 10, 15), float64], Tensor[(9, 9, 10), float32], Tensor[(9), int16], Tensor[(810), int16]) */;
  %564 = cast(%var_5568, dtype="float32") /* ty=Tensor[(7, 3), float32] */;
  %565 = reshape(%564, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %566 = cast(%var_5585, dtype="int16") /* ty=Tensor[(182, 6), int16] */;
  %567 = reshape(%566, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int16] */;
  %568 = @func_2252(%567) /* ty=(Tensor[(7, 12, 13), int16],) */;
  %569 = cast(%var_5589, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %570 = %563.2;
  %571 = cast(%570, dtype="int16") /* ty=Tensor[(9, 9, 10), int16] */;
  %572 = cast(%570, dtype="int16") /* ty=Tensor[(9, 9, 10), int16] */;
  %573 = reshape(%569, newshape=[10, 6, 7]) /* ty=Tensor[(10, 6, 7), uint16] */;
  %574 = reshape(%571, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %575 = reshape(%572, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %576 = @func_2448(%573, %574, %575) /* ty=(Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) */;
  %577 = greater_equal(%555, %556) /* ty=Tensor[(3, 3, 3), bool] */;
  %578 = @func_3842(%565) /* ty=Tensor[(3, 7, 1), float64] */;
  %579 = %568.0;
  %580 = %576.4;
  (%577, %570, meta[relay.Constant][57] /* ty=Tensor[(300, 1), float32] */, %var_5556, %var_5557, %578, %var_5568, %579, %var_5585, %580, %var_5589)
}

def @func_13868(%var_13841: Tensor[(1200), uint16], %var_13842: Tensor[(7, 3), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(1200), uint16], Tensor[(7, 3), float32]) {
  %581 = @func_12376() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
  %582 = cast(%var_13841, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %583 = cast(%var_13842, dtype="float32") /* ty=Tensor[(7, 3), float32] */;
  %584 = reshape(%582, newshape=[1200]) /* ty=Tensor[(1200), uint16] */;
  %585 = reshape(%583, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %586 = @func_12107(%584, %585) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(1200), uint16], Tensor[(5, 16, ?), bool], Tensor[(5, 16, ?), float32], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) */;
  %587 = %581.0;
  %588 = %586.0;
  (%587, %588, %var_13841, %var_13842)
}

def @func_14791() -> Tensor[(9, 11, 2), float64] {
  %589 = @func_13085() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %589.0
}

def @func_9361(%var_9340: Tensor[(5, 15, 16), uint16], %var_9341: Tensor[(5, 15, 16), uint16]) -> (Tensor[(5, 15, 16), uint16], Tensor[(5, 15, 16), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool]) {
  %590 = cast(%var_9341, dtype="uint16") /* ty=Tensor[(5, 15, 16), uint16] */;
  %591 = shape_of(%var_9340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%var_9340, dtype="uint16") /* ty=Tensor[(5, 15, 16), uint16] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %594 = cast(%var_9340, dtype="float32") /* ty=Tensor[(5, 15, 16), float32] */;
  %595 = sqrt(%594) /* ty=Tensor[(5, 15, 16), float32] */;
  %596 = cast(%595, dtype="float64") /* ty=Tensor[(5, 15, 16), float64] */;
  %597 = cast(meta[relay.Constant][58] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %598 = reshape(%597, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %599 = @func_7637(%598) /* ty=(Tensor[(4, 4, 12), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool]) */;
  %600 = add(%592, %593) /* ty=Tensor[(5, 15, 16), uint16] */;
  %601 = log2(%596) /* ty=Tensor[(5, 15, 16), float64] */;
  %602 = %599.1;
  (%600, %601, %602, meta[relay.Constant][58] /* ty=Tensor[(117), bool] */)
}

def @func_9913() -> Tensor[(9, 11, 2), float64] {
  @func_9867() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_7637(%var_7631: Tensor[(117), bool]) -> (Tensor[(4, 4, 12), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool]) {
  %603 = cast(meta[relay.Constant][59] /* ty=Tensor[(4, 4, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 4, 12), float64] */;
  %604 = cast(%var_7631, dtype="bool") /* ty=Tensor[(117), bool] */;
  %605 = cast(meta[relay.Constant][60] /* ty=Tensor[(3, 117), bool] */, dtype="bool") /* ty=Tensor[(3, 117), bool] */;
  %606 = reshape(%604, newshape=[1, 9, 13]) /* ty=Tensor[(1, 9, 13), bool] */;
  %607 = reshape(%605, newshape=[3, 9, 13]) /* ty=Tensor[(3, 9, 13), bool] */;
  %608 = log(%603) /* ty=Tensor[(4, 4, 12), float64] */;
  %609 = @func_92(%606, %607) /* ty=Tensor[(3, 9, 13), bool] */;
  (%608, %609, %var_7631, meta[relay.Constant][60] /* ty=Tensor[(3, 117), bool] */)
}

def @func_10538(%var_10529: Tensor[(9, 11, 2), float64]) -> Tensor[(9, 11, 2), float64] {
  %610 = @func_10305() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %611 = %610.0;
  %612 = cast(%var_10529, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%611, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  subtract(%614, %615) /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_11183() -> Tensor[(9, 11, 2), float64] {
  @func_9913() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_3842(%var_3814: Tensor[(3, 7, 1), float32]) -> Tensor[(3, 7, 1), float64] {
  %616 = cast(%var_3814, dtype="float32") /* ty=Tensor[(3, 7, 1), float32] */;
  %617 = log(%616) /* ty=Tensor[(3, 7, 1), float32] */;
  %618 = cast(%617, dtype="float64") /* ty=Tensor[(3, 7, 1), float64] */;
  sinh(%618) /* ty=Tensor[(3, 7, 1), float64] */
}

def @func_12405() -> (Tensor[(9, 11, 2), float64],) {
  %619 = @func_11183() /* ty=Tensor[(9, 11, 2), float64] */;
  (%619,)
}

def @func_10162(%var_10138: Tensor[(9, 11, 2), float64]) -> (Tensor[(9, 11, 2), float64], Tensor[(198), uint32]) {
  %620 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  %621 = cast(%var_10138, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %623 = cast(%620, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %625 = mod(%623, %624) /* ty=Tensor[(9, 11, 2), float64] */;
  %626 = cast(%625, dtype="uint32") /* ty=Tensor[(9, 11, 2), uint32] */;
  %627 = reshape(%626, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %628 = @func_9606(%627) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(3, 11, 6), uint32], Tensor[(198), uint32]) */;
  %629 = %628.2;
  (%625, %629)
}

def @func_11266() -> (Tensor[(9, 11, 2), float64],) {
  %630 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  (%630,)
}

def @func_12107(%var_12062: Tensor[(1200), uint16], %var_12096: Tensor[(21), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(1200), uint16], Tensor[(5, 16, ?), bool], Tensor[(5, 16, ?), float32], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) {
  %631 = cast(%var_12062, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %632 = reshape(%631, newshape=[1200]) /* ty=Tensor[(1200), uint16] */;
  %633 = @func_11177(%632) /* ty=(Tensor[(5, 16, ?), float32], Tensor[(5, 15, 16), float64], Tensor[(1200), uint16]) */;
  %634 = %633.0;
  %635 = cast(%634, dtype="float32") /* ty=Tensor[(5, 16, ?), float32] */;
  %636 = reshape(%635, newshape=[5, 16, 1]) /* ty=Tensor[(5, 16, 1), float32] */;
  %637 = cast(%634, dtype="float32") /* ty=Tensor[(5, 16, ?), float32] */;
  %638 = cast(%var_12096, dtype="float32") /* ty=Tensor[(21), float32] */;
  %639 = reshape(%638, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %640 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  %641 = @func_5868(%636) /* ty=Tensor[(5, 16, ?), bool] */;
  %642 = atan(%637) /* ty=Tensor[(5, 16, ?), float32] */;
  %643 = @func_3842(%639) /* ty=Tensor[(3, 7, 1), float64] */;
  (%640, %var_12062, %641, %642, %643, %var_12096)
}

def @func_14258() -> Tensor[(9, 11, 2), float64] {
  %644 = @func_13225() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(132), float32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
  %644.4
}

def @func_9803() -> Tensor[(9, 11, 2), float64] {
  %645 = cast(meta[relay.Constant][61] /* ty=Tensor[(9, 11, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  tan(%645) /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_14242() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32]) {
  %646 = @func_13326() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
  %647 = @func_12045() /* ty=Tensor[(9, 11, 2), float64] */;
  %648 = %646.1;
  %649 = @func_13381() /* ty=Tensor[(2, 11, 6), float32] */;
  (%647, %648, %649)
}

def @func_13613(%var_13573: Tensor[(56), float64], %var_13574: Tensor[(728), float64]) -> (Tensor[(13, 4, 14), float64], Tensor[(56), float64], Tensor[(5, 16, 728), uint32], Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float64]) {
  %650 = cast(%var_13573, dtype="float64") /* ty=Tensor[(56), float64] */;
  %651 = cast(%var_13574, dtype="float64") /* ty=Tensor[(728), float64] */;
  %652 = reshape(%650, newshape=[1, 4, 14]) /* ty=Tensor[(1, 4, 14), float64] */;
  %653 = reshape(%651, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), float64] */;
  %654 = @func_8635(%652, %653) /* ty=(Tensor[(13, 4, 14), float64],) */;
  %655 = @func_10380() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float32]) */;
  %656 = %655.1;
  %657 = cast(%656, dtype="float64") /* ty=Tensor[(5, 16, ?), float64] */;
  %658 = log(%657) /* ty=Tensor[(5, 16, ?), float64] */;
  %659 = cast(%var_13574, dtype="uint32") /* ty=Tensor[(728), uint32] */;
  %660 = cast(%658, dtype="uint32") /* ty=Tensor[(5, 16, ?), uint32] */;
  %661 = cast(%658, dtype="float64") /* ty=Tensor[(5, 16, ?), float64] */;
  %662 = %654.0;
  %663 = bitwise_and(%659, %660) /* ty=Tensor[(5, 16, 728), uint32] */;
  %664 = @func_12473() /* ty=Tensor[(9, 11, 2), float64] */;
  %665 = exp(%661) /* ty=Tensor[(5, 16, ?), float64] */;
  (%662, %var_13573, %663, %664, %665)
}

def @func_12717(%var_12641: Tensor[(13, 11, 8), float32], %var_12665: Tensor[(13, 11, 8), float32], %var_12685: Tensor[(198), float64], %var_12689: Tensor[(27), uint32], %var_12690: Tensor[(9), int16], %var_12693: Tensor[(420), uint16]) -> (Tensor[(13, 11, 8), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64], Tensor[(21), float32], Tensor[(27), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(7, 12, 13), int16], Tensor[(13, 11, 8), bool], Tensor[(198), float64]) {
  %666 = cast(%var_12641, dtype="float32") /* ty=Tensor[(13, 11, 8), float32] */;
  %667 = cast(%var_12685, dtype="float64") /* ty=Tensor[(198), float64] */;
  %668 = reshape(%667, newshape=[9, 11, 2]) /* ty=Tensor[(9, 11, 2), float64] */;
  %669 = cast(%var_12689, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %670 = cast(%var_12690, dtype="int16") /* ty=Tensor[(9), int16] */;
  %671 = cast(meta[relay.Constant][62] /* ty=Tensor[(810), int16] */, dtype="int16") /* ty=Tensor[(810), int16] */;
  %672 = cast(meta[relay.Constant][63] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %673 = cast(%var_12693, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %674 = reshape(%669, newshape=[3, 9]) /* ty=Tensor[(3, 9), uint32] */;
  %675 = reshape(%670, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %676 = reshape(%671, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %677 = reshape(%672, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %678 = reshape(%673, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %679 = @func_11594(%674, %675, %676, %677, %678) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(1, 9), int16], Tensor[(3, 9), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) */;
  %680 = cast(meta[relay.Constant][63] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %681 = reshape(%680, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int16] */;
  %682 = @func_2252(%681) /* ty=(Tensor[(7, 12, 13), int16],) */;
  %683 = cast(%var_12665, dtype="uint64") /* ty=Tensor[(13, 11, 8), uint64] */;
  %684 = shape_of(%var_12641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%var_12641, dtype="uint64") /* ty=Tensor[(13, 11, 8), uint64] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %687 = bitwise_and(%685, %686) /* ty=Tensor[(13, 11, 8), uint64] */;
  %688 = cast(%687, dtype="float64") /* ty=Tensor[(13, 11, 8), float64] */;
  %689 = sin(%688) /* ty=Tensor[(13, 11, 8), float64] */;
  %690 = cast(%var_12641, dtype="bool") /* ty=Tensor[(13, 11, 8), bool] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%689, dtype="bool") /* ty=Tensor[(13, 11, 8), bool] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %694 = @func_10563() /* ty=(Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) */;
  %695 = rsqrt(%666) /* ty=Tensor[(13, 11, 8), float32] */;
  %696 = @func_10538(%668) /* ty=Tensor[(9, 11, 2), float64] */;
  %697 = %679.5;
  %698 = %682.0;
  %699 = logical_or(%692, %693) /* ty=Tensor[(13, 11, 8), bool] */;
  %700 = %694.2;
  (%695, %696, %var_12685, %697, %var_12689, %var_12690, meta[relay.Constant][62] /* ty=Tensor[(810), int16] */, meta[relay.Constant][63] /* ty=Tensor[(1092), int16] */, %var_12693, %698, %699, %700)
}

def @func_10749(%var_10666: Tensor[(2, 4, 13), float64], %var_10685: Tensor[(1232), int8], %var_10686: Tensor[(21), float32], %var_10688: Tensor[(336, 2), int8], %var_10689: Tensor[(1092), int16], %var_10698: Tensor[(198, 2), float64], %var_10725: Tensor[(21), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(8, 14, 6), int8], Tensor[(1232), int8], Tensor[(336, 2), int8], Tensor[(1092), int16], Tensor[(810), int16], Tensor[(198, 2), bool], Tensor[(2, 4, 13), float64], Tensor[(2, 4, 13), int16], Tensor[(21), bool]) {
  %701 = cast(%var_10685, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %702 = cast(%var_10686, dtype="float32") /* ty=Tensor[(21), float32] */;
  %703 = cast(meta[relay.Constant][64] /* ty=Tensor[(198, 2), float64] */, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
  %704 = cast(%var_10688, dtype="int8") /* ty=Tensor[(336, 2), int8] */;
  %705 = cast(%var_10689, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %706 = cast(meta[relay.Constant][65] /* ty=Tensor[(810), int16] */, dtype="int16") /* ty=Tensor[(810), int16] */;
  %707 = reshape(%701, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), int8] */;
  %708 = reshape(%702, newshape=[21, 1]) /* ty=Tensor[(21, 1), float32] */;
  %709 = reshape(%703, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %710 = reshape(%704, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %711 = reshape(%705, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %712 = reshape(%706, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %713 = @func_5254(%707, %708, %709, %710, %711, %712) /* ty=(Tensor[(8, 14, 11), int8], Tensor[(3, 7, 1), float64], Tensor[(21, 1), float32], Tensor[(8, 14, 6), int8], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(810), int16]) */;
  %714 = cast(%var_10698, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
  %715 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(198, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %716 = cast(meta[relay.Constant][64] /* ty=Tensor[(198, 2), float64] */, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %718 = cast(%var_10666, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %719 = sin(%718) /* ty=Tensor[(2, 4, 13), float64] */;
  %720 = cast(%719, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %721 = cast(%var_10666, dtype="float32") /* ty=Tensor[(2, 4, 13), float32] */;
  %722 = cos(%721) /* ty=Tensor[(2, 4, 13), float32] */;
  %723 = cast(%719, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %724 = shape_of(%722, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(%722, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %727 = floor_divide(%725, %726) /* ty=Tensor[(2, 4, 13), float64] */;
  %728 = cast(%727, dtype="int16") /* ty=Tensor[(2, 4, 13), int16] */;
  %729 = shape_of(%var_10666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%var_10666, dtype="int16") /* ty=Tensor[(2, 4, 13), int16] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %732 = cast(%var_10725, dtype="bool") /* ty=Tensor[(21), bool] */;
  %733 = shape_of(%var_10686, dtype="int32") /* ty=Tensor[(1), int32] */;
  %734 = cast(%var_10686, dtype="bool") /* ty=Tensor[(21), bool] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?), bool] */;
  %736 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  %737 = %713.3;
  %738 = logical_or(%716, %717) /* ty=Tensor[(198, 2), bool] */;
  %739 = log2(%720) /* ty=Tensor[(2, 4, 13), float64] */;
  %740 = bitwise_xor(%730, %731) /* ty=Tensor[(2, 4, 13), int16] */;
  %741 = not_equal(%734, %735) /* ty=Tensor[(21), bool] */;
  (%736, %737, %var_10685, %var_10688, %var_10689, meta[relay.Constant][65] /* ty=Tensor[(810), int16] */, %738, %739, %740, %741)
}

def @func_14416() -> (Tensor[(5, 16, ?), float32],) {
  %742 = @func_11928() /* ty=Tensor[(5, 16, ?), float32] */;
  (%742,)
}

def @func_9606(%var_9604: Tensor[(198), uint32]) -> (Tensor[(7, 11, 13), bool], Tensor[(3, 11, 6), uint32], Tensor[(198), uint32]) {
  %743 = cast(meta[relay.Constant][66] /* ty=Tensor[(7, 1, 13), float64] */, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %744 = cast(meta[relay.Constant][67] /* ty=Tensor[(7, 11, 13), float64] */, dtype="bool") /* ty=Tensor[(7, 11, 13), bool] */;
  %745 = cast(%var_9604, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %746 = cast(%var_9604, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %747 = reshape(%745, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), uint32] */;
  %748 = reshape(%746, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), uint32] */;
  %749 = @func_7755(%747, %748) /* ty=(Tensor[(3, 11, 6), uint32],) */;
  %750 = not_equal(%743, %744) /* ty=Tensor[(7, 11, 13), bool] */;
  %751 = %749.0;
  (%750, %751, %var_9604)
}

def @func_15045(%var_15001: Tensor[(352), uint32], %var_15038: Tensor[(132, 1), float32], %var_15040: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], uint32, Tensor[(11, 2), uint32], Tensor[(352), bool], Tensor[(810), int16], Tensor[(132, 1), float32], Tensor[(21), float32], Tensor[(420), uint16]) {
  %752 = @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %753 = cast(meta[relay.Constant][68] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %754 = cast(meta[relay.Constant][69] /* ty=Tensor[(11, 2), uint32] */, dtype="uint32") /* ty=Tensor[(11, 2), uint32] */;
  %755 = cast(%var_15001, dtype="uint32") /* ty=Tensor[(352), uint32] */;
  %756 = reshape(%753, newshape=[]) /* ty=uint32 */;
  %757 = reshape(%754, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), uint32] */;
  %758 = reshape(%755, newshape=[2, 16, 11]) /* ty=Tensor[(2, 16, 11), uint32] */;
  %759 = @func_8042(%756, %757, %758) /* ty=(Tensor[(2, 16, 11), float64],) */;
  %760 = %759.0;
  %761 = cast(%760, dtype="bool") /* ty=Tensor[(2, 16, 11), bool] */;
  %762 = shape_of(%var_15001, dtype="int32") /* ty=Tensor[(1), int32] */;
  %763 = cast(%var_15001, dtype="bool") /* ty=Tensor[(352), bool] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?), bool] */;
  %765 = cast(%var_15038, dtype="float32") /* ty=Tensor[(132, 1), float32] */;
  %766 = cast(meta[relay.Constant][70] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %767 = cast(%var_15040, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %768 = reshape(%765, newshape=[1, 132]) /* ty=Tensor[(1, 132), float32] */;
  %769 = reshape(%766, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %770 = reshape(%767, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %771 = @func_11117(%768, %769, %770) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(1, 132), float32], Tensor[(300, 1), float32], Tensor[(27), uint32], Tensor[(9, 1), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) */;
  %772 = %752.0;
  %773 = @func_13078() /* ty=Tensor[(9, 11, 2), float64] */;
  %774 = less(%763, %764) /* ty=Tensor[(352), bool] */;
  %775 = %771.6;
  (%772, %773, meta[relay.Constant][68] /* ty=uint32 */, meta[relay.Constant][69] /* ty=Tensor[(11, 2), uint32] */, %774, %775, %var_15038, meta[relay.Constant][70] /* ty=Tensor[(21), float32] */, %var_15040)
}

def @func_14113() -> (Tensor[(9, 11, 2), float64],) {
  %776 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  (%776,)
}

def @func_11177(%var_11171: Tensor[(1200), uint16]) -> (Tensor[(5, 16, ?), float32], Tensor[(5, 15, 16), float64], Tensor[(1200), uint16]) {
  %777 = @func_10563() /* ty=(Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) */;
  %778 = cast(%var_11171, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %779 = cast(%var_11171, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %780 = reshape(%778, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint16] */;
  %781 = reshape(%779, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint16] */;
  %782 = @func_9361(%780, %781) /* ty=(Tensor[(5, 15, 16), uint16], Tensor[(5, 15, 16), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool]) */;
  %783 = %777.0;
  %784 = %782.1;
  (%783, %784, %var_11171)
}

def @func_13078() -> Tensor[(9, 11, 2), float64] {
  @func_9913() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_13418(%var_13395: int8, %var_13396: Tensor[(2, 7, 14), int8]) -> (Tensor[(2, 7, 14), bool],) {
  %785 = cast(%var_13395, dtype="bool") /* ty=bool */;
  %786 = cast(%var_13396, dtype="bool") /* ty=Tensor[(2, 7, 14), bool] */;
  %787 = greater(%785, %786) /* ty=Tensor[(2, 7, 14), bool] */;
  (%787,)
}

def @func_15380() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float32]) {
  %788 = @func_14435() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %789 = @func_12437() /* ty=(Tensor[(9, 11, 2), float32],) */;
  %790 = %788.0;
  %791 = %789.0;
  (%790, %791)
}

def @func_13381() -> Tensor[(2, 11, 6), float32] {
  %792 = @func_13225() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(132), float32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
  %792.2
}

def @func_13770() -> (Tensor[(9, 11, 2), float64],) {
  %793 = @func_12973() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(3, 11, 6), uint32]) */;
  %794 = %793.0;
  (%794,)
}

def @func_15242(%var_15224: Tensor[(14, 6, 8), float64], %var_15225: Tensor[(14, 6, 8), float64]) -> (Tensor[(14, 6, 8), float64],) {
  %795 = cast(%var_15225, dtype="float64") /* ty=Tensor[(14, 6, 8), float64] */;
  %796 = shape_of(%var_15224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%var_15224, dtype="float64") /* ty=Tensor[(14, 6, 8), float64] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %799 = power(%797, %798) /* ty=Tensor[(14, 6, 8), float64] */;
  (%799,)
}

def @func_12912(%var_12897: Tensor[(104), float64], %var_12898: Tensor[(1232), int8], %var_12900: Tensor[(672), int8]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 4, 13), int16], Tensor[(104), float64], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(672), int8], Tensor[(182, 6), int16], Tensor[(396), float64]) {
  %800 = cast(%var_12897, dtype="float64") /* ty=Tensor[(104), float64] */;
  %801 = cast(%var_12898, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %802 = cast(meta[relay.Constant][71] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %803 = cast(%var_12900, dtype="int8") /* ty=Tensor[(672), int8] */;
  %804 = cast(meta[relay.Constant][72] /* ty=Tensor[(182, 6), int16] */, dtype="int16") /* ty=Tensor[(182, 6), int16] */;
  %805 = cast(meta[relay.Constant][73] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %806 = cast(meta[relay.Constant][71] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %807 = reshape(%800, newshape=[2, 4, 13]) /* ty=Tensor[(2, 4, 13), float64] */;
  %808 = reshape(%801, newshape=[1232]) /* ty=Tensor[(1232), int8] */;
  %809 = reshape(%802, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %810 = reshape(%803, newshape=[336, 2]) /* ty=Tensor[(336, 2), int8] */;
  %811 = reshape(%804, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %812 = reshape(%805, newshape=[198, 2]) /* ty=Tensor[(198, 2), float64] */;
  %813 = reshape(%806, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %814 = @func_10749(%807, %808, %809, %810, %811, %812, %813) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(8, 14, 6), int8], Tensor[(1232), int8], Tensor[(336, 2), int8], Tensor[(1092), int16], Tensor[(810), int16], Tensor[(198, 2), bool], Tensor[(2, 4, 13), float64], Tensor[(2, 4, 13), int16], Tensor[(21), bool]) */;
  %815 = @func_11894() /* ty=Tensor[(9, 11, 2), float64] */;
  %816 = %814.8;
  (%815, %816, %var_12897, %var_12898, meta[relay.Constant][71] /* ty=Tensor[(21), float32] */, %var_12900, meta[relay.Constant][72] /* ty=Tensor[(182, 6), int16] */, meta[relay.Constant][73] /* ty=Tensor[(396), float64] */)
}

def @func_14511(%var_14478: Tensor[(1232), int8], %var_14479: Tensor[(420), uint16], %var_14497: Tensor[(540), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(1, 1092), int16], Tensor[(1232), int8], Tensor[(420), uint16], Tensor[(?, 1960), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32], Tensor[(8, 14, 6), int8], Tensor[(2, 336), int8]) {
  %817 = @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %818 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 1960), int64] */, dtype="int64") /* ty=Tensor[(1, 1960), int64] */;
  %819 = cast(meta[relay.Constant][74] /* ty=Tensor[(1, 1092), int16] */, dtype="int16") /* ty=Tensor[(1, 1092), int16] */;
  %820 = cast(%var_14478, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %821 = cast(%var_14479, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %822 = reshape(%818, newshape=[1960]) /* ty=Tensor[(1960), int64] */;
  %823 = reshape(%819, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %824 = reshape(%820, newshape=[4, 308]) /* ty=Tensor[(4, 308), int8] */;
  %825 = reshape(%821, newshape=[1, 420]) /* ty=Tensor[(1, 420), uint16] */;
  %826 = @func_14087(%822, %823, %824, %825) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(10, 14, 14), int64], Tensor[(1960), int64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(1, 27), uint32], Tensor[(1092), int16], Tensor[(4, 308), int8], Tensor[(1, 420), uint16]) */;
  %827 = %826.2;
  %828 = cast(%827, dtype="float64") /* ty=Tensor[(1960), float64] */;
  %829 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(1, 1960), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %830 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 1960), int64] */, dtype="float64") /* ty=Tensor[(1, 1960), float64] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %832 = cast(%var_14497, dtype="float32") /* ty=Tensor[(540), float32] */;
  %833 = reshape(%832, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %834 = @func_12741(%833) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */;
  %835 = cast(meta[relay.Constant][76] /* ty=Tensor[(2, 336), int8] */, dtype="int8") /* ty=Tensor[(2, 336), int8] */;
  %836 = reshape(%835, newshape=[8, 14, 6]) /* ty=Tensor[(8, 14, 6), int8] */;
  %837 = @func_2766(%836) /* ty=(Tensor[(8, 14, 6), int8],) */;
  %838 = %817.0;
  %839 = power(%830, %831) /* ty=Tensor[(?, 1960), float64] */;
  %840 = %834.1;
  %841 = %837.0;
  (%838, meta[relay.Constant][74] /* ty=Tensor[(1, 1092), int16] */, %var_14478, %var_14479, %839, %840, %var_14497, %841, meta[relay.Constant][76] /* ty=Tensor[(2, 336), int8] */)
}

def @func_14982(%var_14960: Tensor[(1200), uint16], %var_14976: Tensor[(1568), float32], %var_14979: Tensor[(1232), int8]) -> (Tensor[(9, 11, 2), float64], Tensor[(117), bool], Tensor[(1200), uint16], Tensor[(1, 9), int16], Tensor[(1568), float32], Tensor[(27), uint32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(420), uint16]) {
  %842 = @func_14375() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %843 = cast(%var_14960, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %844 = cast(%var_14960, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %845 = reshape(%843, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint16] */;
  %846 = reshape(%844, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint16] */;
  %847 = @func_9361(%845, %846) /* ty=(Tensor[(5, 15, 16), uint16], Tensor[(5, 15, 16), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool]) */;
  %848 = cast(%var_14976, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %849 = cast(%var_14976, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %850 = cast(meta[relay.Constant][77] /* ty=Tensor[(27), uint32] */, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %851 = cast(meta[relay.Constant][78] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %852 = cast(%var_14979, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %853 = cast(meta[relay.Constant][79] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %854 = reshape(%848, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
  %855 = reshape(%849, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
  %856 = reshape(%850, newshape=[27]) /* ty=Tensor[(27), uint32] */;
  %857 = reshape(%851, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %858 = reshape(%852, newshape=[616, 2]) /* ty=Tensor[(616, 2), int8] */;
  %859 = reshape(%853, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %860 = @func_8743(%854, %855, %856, %857, %858, %859) /* ty=(Tensor[(14, 7, 16), float32], Tensor[(1, 9), int16], Tensor[(27), uint32], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(616, 2), int8], Tensor[(7, 12, 13), int16], Tensor[(21), float32], Tensor[(420), uint16], Tensor[(2, 312), float64]) */;
  %861 = %842.0;
  %862 = %847.3;
  %863 = %860.1;
  (%861, %862, %var_14960, %863, %var_14976, meta[relay.Constant][77] /* ty=Tensor[(27), uint32] */, meta[relay.Constant][78] /* ty=Tensor[(1092), int16] */, %var_14979, meta[relay.Constant][79] /* ty=Tensor[(420), uint16] */)
}

def @func_1648(%var_1621: Tensor[(1, 9, 1), int16], %var_1622: Tensor[(9, 9, 10), int16]) -> (Tensor[(9, 9, 10), float32], Tensor[(9, 14, 9), float64], Tensor[(1134), float64], Tensor[(117), bool], Tensor[(117, 3), uint32]) {
  %864 = cast(%var_1621, dtype="int16") /* ty=Tensor[(1, 9, 1), int16] */;
  %865 = cast(%var_1622, dtype="int16") /* ty=Tensor[(9, 9, 10), int16] */;
  %866 = bitwise_or(%864, %865) /* ty=Tensor[(9, 9, 10), int16] */;
  %867 = cast(%866, dtype="float32") /* ty=Tensor[(9, 9, 10), float32] */;
  %868 = cast(meta[relay.Constant][80] /* ty=Tensor[(1134), float64] */, dtype="float64") /* ty=Tensor[(1134), float64] */;
  %869 = reshape(%868, newshape=[9, 14, 9]) /* ty=Tensor[(9, 14, 9), float64] */;
  %870 = cast(meta[relay.Constant][81] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %871 = cast(meta[relay.Constant][82] /* ty=Tensor[(117, 3), bool] */, dtype="bool") /* ty=Tensor[(117, 3), bool] */;
  %872 = reshape(%870, newshape=[1, 9, 13]) /* ty=Tensor[(1, 9, 13), bool] */;
  %873 = reshape(%871, newshape=[3, 9, 13]) /* ty=Tensor[(3, 9, 13), bool] */;
  %874 = @func_92(%872, %873) /* ty=Tensor[(3, 9, 13), bool] */;
  %875 = cast(%874, dtype="uint32") /* ty=Tensor[(3, 9, 13), uint32] */;
  %876 = shape_of(meta[relay.Constant][82] /* ty=Tensor[(117, 3), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %877 = cast(meta[relay.Constant][82] /* ty=Tensor[(117, 3), bool] */, dtype="uint32") /* ty=Tensor[(117, 3), uint32] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %879 = cos(%867) /* ty=Tensor[(9, 9, 10), float32] */;
  %880 = @func_742(%869) /* ty=Tensor[(9, 14, 9), float64] */;
  %881 = subtract(%877, %878) /* ty=Tensor[(117, 3), uint32] */;
  (%879, %880, meta[relay.Constant][80] /* ty=Tensor[(1134), float64] */, meta[relay.Constant][81] /* ty=Tensor[(117), bool] */, %881)
}

def @func_14933() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %882 = @func_11894() /* ty=Tensor[(9, 11, 2), float64] */;
  %883 = @func_14791() /* ty=Tensor[(9, 11, 2), float64] */;
  (%882, %883)
}

def @func_10797() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %884 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  %885 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  (%884, %885)
}

def @func_2252(%var_2244: Tensor[(7, 12, 13), int16]) -> (Tensor[(7, 12, 13), int16],) {
  %886 = cast(meta[relay.Constant][83] /* ty=Tensor[(7, 12, 13), int16] */, dtype="int16") /* ty=Tensor[(7, 12, 13), int16] */;
  %887 = shape_of(%var_2244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %888 = cast(%var_2244, dtype="int16") /* ty=Tensor[(7, 12, 13), int16] */;
  %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %890 = bitwise_or(%888, %889) /* ty=Tensor[(7, 12, 13), int16] */;
  (%890,)
}

def @func_13085() -> (Tensor[(9, 11, 2), float64],) {
  %891 = @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %892 = %891.0;
  (%892,)
}

def @func_7602(%var_7581: int8, %var_7582: Tensor[(6, 13, 1), int8]) -> (Tensor[(6, 13, 1), bool], Tensor[(6, 13, 1), bool], Tensor[(3, 4, 15), float32], Tensor[(6, 13, 180), uint16]) {
  %893 = cast(%var_7581, dtype="bool") /* ty=bool */;
  %894 = cast(%var_7582, dtype="bool") /* ty=Tensor[(6, 13, 1), bool] */;
  %895 = cast(%var_7581, dtype="bool") /* ty=bool */;
  %896 = cast(%var_7582, dtype="bool") /* ty=Tensor[(6, 13, 1), bool] */;
  %897 = cast(meta[relay.Constant][84] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %898 = cast(meta[relay.Constant][84] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %899 = reshape(%897, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %900 = reshape(%898, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %901 = @func_6878(%899, %900) /* ty=(Tensor[(3, 4, 15), float32],) */;
  %902 = cast(meta[relay.Constant][84] /* ty=Tensor[(180), float32] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %903 = cast(%var_7582, dtype="uint16") /* ty=Tensor[(6, 13, 1), uint16] */;
  %904 = greater(%893, %894) /* ty=Tensor[(6, 13, 1), bool] */;
  %905 = logical_and(%895, %896) /* ty=Tensor[(6, 13, 1), bool] */;
  %906 = %901.0;
  %907 = left_shift(%902, %903) /* ty=Tensor[(6, 13, 180), uint16] */;
  (%904, %905, %906, %907)
}

def @func_10240(%var_10230: Tensor[(1092), int16], %var_10231: Tensor[(1232), int8], %var_10235: Tensor[(21), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(27, 1), uint32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(420), uint16], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) {
  %908 = cast(meta[relay.Constant][85] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %909 = cast(meta[relay.Constant][85] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %910 = cast(meta[relay.Constant][86] /* ty=Tensor[(27, 1), uint32] */, dtype="uint32") /* ty=Tensor[(27, 1), uint32] */;
  %911 = cast(%var_10230, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %912 = cast(%var_10231, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %913 = cast(meta[relay.Constant][87] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %914 = reshape(%908, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
  %915 = reshape(%909, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
  %916 = reshape(%910, newshape=[27]) /* ty=Tensor[(27), uint32] */;
  %917 = reshape(%911, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %918 = reshape(%912, newshape=[616, 2]) /* ty=Tensor[(616, 2), int8] */;
  %919 = reshape(%913, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %920 = @func_8743(%914, %915, %916, %917, %918, %919) /* ty=(Tensor[(14, 7, 16), float32], Tensor[(1, 9), int16], Tensor[(27), uint32], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(616, 2), int8], Tensor[(7, 12, 13), int16], Tensor[(21), float32], Tensor[(420), uint16], Tensor[(2, 312), float64]) */;
  %921 = cast(%var_10235, dtype="float32") /* ty=Tensor[(21), float32] */;
  %922 = reshape(%921, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %923 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  %924 = %920.3;
  %925 = @func_3842(%922) /* ty=Tensor[(3, 7, 1), float64] */;
  (%923, %924, meta[relay.Constant][85] /* ty=Tensor[(1568), float32] */, meta[relay.Constant][86] /* ty=Tensor[(27, 1), uint32] */, %var_10230, %var_10231, meta[relay.Constant][87] /* ty=Tensor[(420), uint16] */, %925, %var_10235)
}

def @func_13437(%var_13430: float64, %var_13431: Tensor[(4, 2, 1), float64]) -> Tensor[(4, 2, 1), float64] {
  %926 = cast(%var_13430, dtype="float64") /* ty=float64 */;
  %927 = cast(%var_13431, dtype="float64") /* ty=Tensor[(4, 2, 1), float64] */;
  divide(%926, %927) /* ty=Tensor[(4, 2, 1), float64] */
}

def @func_15307() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(14, 6, 8), float64], Tensor[(672, 1), float64]) {
  %928 = @func_12405() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %929 = cast(meta[relay.Constant][88] /* ty=Tensor[(672, 1), float64] */, dtype="float64") /* ty=Tensor[(672, 1), float64] */;
  %930 = cast(meta[relay.Constant][88] /* ty=Tensor[(672, 1), float64] */, dtype="float64") /* ty=Tensor[(672, 1), float64] */;
  %931 = reshape(%929, newshape=[14, 6, 8]) /* ty=Tensor[(14, 6, 8), float64] */;
  %932 = reshape(%930, newshape=[14, 6, 8]) /* ty=Tensor[(14, 6, 8), float64] */;
  %933 = @func_15242(%931, %932) /* ty=(Tensor[(14, 6, 8), float64],) */;
  %934 = @func_11183() /* ty=Tensor[(9, 11, 2), float64] */;
  %935 = %928.0;
  %936 = %933.0;
  (%934, %935, %936, meta[relay.Constant][88] /* ty=Tensor[(672, 1), float64] */)
}

def @func_13326() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %937 = @func_10563() /* ty=(Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) */;
  %938 = %937.1;
  %939 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  (%938, %939)
}

def @func_4483(%var_4406: Tensor[(4, 9, 11), float64], %var_4424: Tensor[(672), int8], %var_4428: Tensor[(1092), int16], %var_4433: Tensor[(117), bool], %var_4434: Tensor[(3, 117), bool]) -> (Tensor[(8, 14, 6), int8], Tensor[(672), int8], Tensor[(7, 12, 13), int16], Tensor[(1092), int16], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool], Tensor[(4, 9, 11), uint8]) {
  %940 = cast(%var_4424, dtype="int8") /* ty=Tensor[(672), int8] */;
  %941 = reshape(%940, newshape=[8, 14, 6]) /* ty=Tensor[(8, 14, 6), int8] */;
  %942 = @func_2766(%941) /* ty=(Tensor[(8, 14, 6), int8],) */;
  %943 = cast(%var_4428, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %944 = reshape(%943, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int16] */;
  %945 = @func_2252(%944) /* ty=(Tensor[(7, 12, 13), int16],) */;
  %946 = cast(%var_4433, dtype="bool") /* ty=Tensor[(117), bool] */;
  %947 = cast(%var_4434, dtype="bool") /* ty=Tensor[(3, 117), bool] */;
  %948 = reshape(%946, newshape=[1, 9, 13]) /* ty=Tensor[(1, 9, 13), bool] */;
  %949 = reshape(%947, newshape=[3, 9, 13]) /* ty=Tensor[(3, 9, 13), bool] */;
  %950 = cast(%var_4406, dtype="float64") /* ty=Tensor[(4, 9, 11), float64] */;
  %951 = log2(%950) /* ty=Tensor[(4, 9, 11), float64] */;
  %952 = cast(%951, dtype="bool") /* ty=Tensor[(4, 9, 11), bool] */;
  %953 = shape_of(%var_4406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%var_4406, dtype="bool") /* ty=Tensor[(4, 9, 11), bool] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %956 = greater(%954, %955) /* ty=Tensor[(4, 9, 11), bool] */;
  %957 = cast(%951, dtype="uint8") /* ty=Tensor[(4, 9, 11), uint8] */;
  %958 = shape_of(%956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %959 = cast(%956, dtype="uint8") /* ty=Tensor[(4, 9, 11), uint8] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %961 = %942.0;
  %962 = %945.0;
  %963 = @func_92(%948, %949) /* ty=Tensor[(3, 9, 13), bool] */;
  %964 = right_shift(%959, %960) /* ty=Tensor[(4, 9, 11), uint8] */;
  (%961, %var_4424, %962, %var_4428, %963, %var_4433, %var_4434, %964)
}

def @func_11297(%var_11282: Tensor[(1, 1170), int16], %var_11283: Tensor[(396), float64], %var_11285: Tensor[(8, 154), int8], %var_11286: Tensor[(21), float32], %var_11287: Tensor[(810), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(13, 15, 6), bool], Tensor[(1, 1170), int16], Tensor[(396), float64], Tensor[(672), int8], Tensor[(8, 154), int8], Tensor[(21), float32], Tensor[(810), int16]) {
  %965 = cast(%var_11282, dtype="int16") /* ty=Tensor[(1, 1170), int16] */;
  %966 = cast(%var_11282, dtype="int16") /* ty=Tensor[(1, 1170), int16] */;
  %967 = cast(%var_11283, dtype="float64") /* ty=Tensor[(396), float64] */;
  %968 = cast(meta[relay.Constant][89] /* ty=Tensor[(672), int8] */, dtype="int8") /* ty=Tensor[(672), int8] */;
  %969 = cast(%var_11285, dtype="int8") /* ty=Tensor[(8, 154), int8] */;
  %970 = cast(%var_11286, dtype="float32") /* ty=Tensor[(21), float32] */;
  %971 = cast(%var_11287, dtype="int16") /* ty=Tensor[(810), int16] */;
  %972 = reshape(%965, newshape=[13, 15, 6]) /* ty=Tensor[(13, 15, 6), int16] */;
  %973 = reshape(%966, newshape=[13, 15, 6]) /* ty=Tensor[(13, 15, 6), int16] */;
  %974 = reshape(%967, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %975 = reshape(%968, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %976 = reshape(%969, newshape=[1232]) /* ty=Tensor[(1232), int8] */;
  %977 = reshape(%970, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %978 = reshape(%971, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %979 = @func_7967(%972, %973, %974, %975, %976, %977, %978) /* ty=(Tensor[(13, 15, 6), bool], Tensor[(117), bool], Tensor[(396), float64], Tensor[(672), int8], Tensor[(117), bool], Tensor[(351), bool], Tensor[(7, 156), float32], Tensor[(7, 156), bool], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(810), int16]) */;
  %980 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  %981 = %979.0;
  (%980, %981, %var_11282, %var_11283, meta[relay.Constant][89] /* ty=Tensor[(672), int8] */, %var_11285, %var_11286, %var_11287)
}

def @func_7755(%var_7749: Tensor[(3, 11, 6), uint32], %var_7750: Tensor[(3, 11, 6), uint32]) -> (Tensor[(3, 11, 6), uint32],) {
  %982 = cast(%var_7750, dtype="uint32") /* ty=Tensor[(3, 11, 6), uint32] */;
  %983 = shape_of(%var_7749, dtype="int32") /* ty=Tensor[(3), int32] */;
  %984 = cast(%var_7749, dtype="uint32") /* ty=Tensor[(3, 11, 6), uint32] */;
  %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %986 = minimum(%984, %985) /* ty=Tensor[(3, 11, 6), uint32] */;
  (%986,)
}

def @func_12809() -> Tensor[(9, 11, 2), float64] {
  @func_12473() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_12497(%var_12488: Tensor[(132), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(132), float32]) {
  %987 = cast(%var_12488, dtype="float32") /* ty=Tensor[(132), float32] */;
  %988 = reshape(%987, newshape=[2, 11, 6]) /* ty=Tensor[(2, 11, 6), float32] */;
  %989 = @func_8898(%988) /* ty=(Tensor[(2, 11, 6), float32],) */;
  %990 = @func_11197() /* ty=Tensor[(9, 11, 2), float64] */;
  %991 = %989.0;
  (%990, %991, %var_12488)
}

def @func_11894() -> Tensor[(9, 11, 2), float64] {
  @func_10777() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_13225() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(132), float32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %992 = @func_11542() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %993 = cast(meta[relay.Constant][90] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %994 = reshape(%993, newshape=[2, 11, 6]) /* ty=Tensor[(2, 11, 6), float32] */;
  %995 = @func_8898(%994) /* ty=(Tensor[(2, 11, 6), float32],) */;
  %996 = @func_10797() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
  %997 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  %998 = %992.0;
  %999 = %995.0;
  %1000 = %996.1;
  %1001 = @func_11197() /* ty=Tensor[(9, 11, 2), float64] */;
  (%997, %998, %999, meta[relay.Constant][90] /* ty=Tensor[(132), float32] */, %1000, %1001)
}

def @func_10654(%var_10608: Tensor[(150, 2), float32], %var_10609: Tensor[(9), int16], %var_10631: Tensor[(1092), int16], %var_10633: Tensor[(351), bool], %var_10638: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 10, 15), float64], Tensor[(9), int16], Tensor[(9, 90), int16], Tensor[(150, 2), float64], Tensor[(3, 117), bool], Tensor[(6, 66), float64], Tensor[(56, 12), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(10, 6, 7), float64], Tensor[(420), uint16]) {
  %1002 = cast(%var_10608, dtype="float32") /* ty=Tensor[(150, 2), float32] */;
  %1003 = cast(%var_10609, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1004 = cast(meta[relay.Constant][91] /* ty=Tensor[(9, 90), int16] */, dtype="int16") /* ty=Tensor[(9, 90), int16] */;
  %1005 = reshape(%1002, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), float32] */;
  %1006 = reshape(%1003, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %1007 = reshape(%1004, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %1008 = @func_3922(%1005, %1006, %1007) /* ty=(Tensor[(2, 10, 15), float32], Tensor[(2, 10, 15), float64], Tensor[(9, 9, 10), float32], Tensor[(9), int16], Tensor[(810), int16]) */;
  %1009 = cast(%var_10608, dtype="float64") /* ty=Tensor[(150, 2), float64] */;
  %1010 = cast(meta[relay.Constant][92] /* ty=Tensor[(6, 66), float64] */, dtype="float64") /* ty=Tensor[(6, 66), float64] */;
  %1011 = cast(meta[relay.Constant][93] /* ty=Tensor[(56, 12), int8] */, dtype="int8") /* ty=Tensor[(56, 12), int8] */;
  %1012 = cast(%var_10631, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %1013 = cast(meta[relay.Constant][94] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %1014 = cast(%var_10633, dtype="bool") /* ty=Tensor[(351), bool] */;
  %1015 = reshape(%1010, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float64] */;
  %1016 = reshape(%1011, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %1017 = reshape(%1012, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %1018 = reshape(%1013, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %1019 = reshape(%1014, newshape=[3, 117]) /* ty=Tensor[(3, 117), bool] */;
  %1020 = @func_4483(%1015, %1016, %1017, %1018, %1019) /* ty=(Tensor[(8, 14, 6), int8], Tensor[(672), int8], Tensor[(7, 12, 13), int16], Tensor[(1092), int16], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool], Tensor[(4, 9, 11), uint8]) */;
  %1021 = cast(%var_10638, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %1022 = cast(meta[relay.Constant][91] /* ty=Tensor[(9, 90), int16] */, dtype="int16") /* ty=Tensor[(9, 90), int16] */;
  %1023 = cast(meta[relay.Constant][91] /* ty=Tensor[(9, 90), int16] */, dtype="int16") /* ty=Tensor[(9, 90), int16] */;
  %1024 = reshape(%1021, newshape=[10, 6, 7]) /* ty=Tensor[(10, 6, 7), uint16] */;
  %1025 = reshape(%1022, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %1026 = reshape(%1023, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %1027 = @func_2448(%1024, %1025, %1026) /* ty=(Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) */;
  %1028 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  %1029 = %1008.1;
  %1030 = rsqrt(%1009) /* ty=Tensor[(150, 2), float64] */;
  %1031 = %1020.6;
  %1032 = %1027.3;
  (%1028, %1029, %var_10609, meta[relay.Constant][91] /* ty=Tensor[(9, 90), int16] */, %1030, %1031, meta[relay.Constant][92] /* ty=Tensor[(6, 66), float64] */, meta[relay.Constant][93] /* ty=Tensor[(56, 12), int8] */, %var_10631, meta[relay.Constant][94] /* ty=Tensor[(117), bool] */, %var_10633, %1032, %var_10638)
}

def @func_3922(%var_3906: Tensor[(2, 10, 15), float32], %var_3915: Tensor[(9), int16], %var_3916: Tensor[(810), int16]) -> (Tensor[(2, 10, 15), float32], Tensor[(2, 10, 15), float64], Tensor[(9, 9, 10), float32], Tensor[(9), int16], Tensor[(810), int16]) {
  %1033 = cast(%var_3906, dtype="float32") /* ty=Tensor[(2, 10, 15), float32] */;
  %1034 = cast(%var_3906, dtype="float64") /* ty=Tensor[(2, 10, 15), float64] */;
  %1035 = cast(%var_3915, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1036 = cast(%var_3916, dtype="int16") /* ty=Tensor[(810), int16] */;
  %1037 = reshape(%1035, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %1038 = reshape(%1036, newshape=[9, 9, 10]) /* ty=Tensor[(9, 9, 10), int16] */;
  %1039 = @func_1648(%1037, %1038) /* ty=(Tensor[(9, 9, 10), float32], Tensor[(9, 14, 9), float64], Tensor[(1134), float64], Tensor[(117), bool], Tensor[(117, 3), uint32]) */;
  %1040 = cosh(%1033) /* ty=Tensor[(2, 10, 15), float32] */;
  %1041 = sqrt(%1034) /* ty=Tensor[(2, 10, 15), float64] */;
  %1042 = %1039.0;
  (%1040, %1041, %1042, %var_3915, %var_3916)
}

def @func_13352() -> Tensor[(9, 11, 2), float64] {
  @func_11197() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_13657(%var_13640: Tensor[(1232), int8], %var_13653: Tensor[(15, 1092), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(15, 1092), uint16]) {
  %1043 = cast(meta[relay.Constant][95] /* ty=Tensor[(1, 1092), int16] */, dtype="int16") /* ty=Tensor[(1, 1092), int16] */;
  %1044 = cast(%var_13640, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %1045 = cast(meta[relay.Constant][96] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %1046 = reshape(%1043, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %1047 = reshape(%1044, newshape=[1232]) /* ty=Tensor[(1232), int8] */;
  %1048 = reshape(%1045, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %1049 = @func_10240(%1046, %1047, %1048) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(27, 1), uint32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(420), uint16], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) */;
  %1050 = cast(meta[relay.Constant][95] /* ty=Tensor[(1, 1092), int16] */, dtype="uint16") /* ty=Tensor[(1, 1092), uint16] */;
  %1051 = cast(%var_13653, dtype="uint16") /* ty=Tensor[(15, 1092), uint16] */;
  %1052 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  %1053 = @func_13078() /* ty=Tensor[(9, 11, 2), float64] */;
  %1054 = %1049.1;
  %1055 = left_shift(%1050, %1051) /* ty=Tensor[(15, 1092), uint16] */;
  (%1052, %1053, %1054, %var_13640, meta[relay.Constant][96] /* ty=Tensor[(21), float32] */, %1055)
}

def @func_5254(%var_5212: Tensor[(8, 14, 11), int8], %var_5217: Tensor[(21, 1), float32], %var_5220: Tensor[(396), float64], %var_5221: Tensor[(672), int8], %var_5222: Tensor[(1092), int16], %var_5233: Tensor[(810), int16]) -> (Tensor[(8, 14, 11), int8], Tensor[(3, 7, 1), float64], Tensor[(21, 1), float32], Tensor[(8, 14, 6), int8], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(810), int16]) {
  %1056 = cast(meta[relay.Constant][97] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1057 = cast(%var_5212, dtype="int8") /* ty=Tensor[(8, 14, 11), int8] */;
  %1058 = cast(%var_5217, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %1059 = reshape(%1058, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %1060 = cast(%var_5220, dtype="float64") /* ty=Tensor[(396), float64] */;
  %1061 = cast(%var_5221, dtype="int8") /* ty=Tensor[(672), int8] */;
  %1062 = cast(%var_5222, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %1063 = cast(meta[relay.Constant][98] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %1064 = cast(meta[relay.Constant][99] /* ty=Tensor[(351), bool] */, dtype="bool") /* ty=Tensor[(351), bool] */;
  %1065 = reshape(%1060, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float64] */;
  %1066 = reshape(%1061, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %1067 = reshape(%1062, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %1068 = reshape(%1063, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %1069 = reshape(%1064, newshape=[3, 117]) /* ty=Tensor[(3, 117), bool] */;
  %1070 = @func_4483(%1065, %1066, %1067, %1068, %1069) /* ty=(Tensor[(8, 14, 6), int8], Tensor[(672), int8], Tensor[(7, 12, 13), int16], Tensor[(1092), int16], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool], Tensor[(4, 9, 11), uint8]) */;
  %1071 = cast(meta[relay.Constant][100] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %1072 = cast(%var_5233, dtype="int16") /* ty=Tensor[(810), int16] */;
  %1073 = cast(%var_5233, dtype="int16") /* ty=Tensor[(810), int16] */;
  %1074 = reshape(%1071, newshape=[10, 6, 7]) /* ty=Tensor[(10, 6, 7), uint16] */;
  %1075 = reshape(%1072, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %1076 = reshape(%1073, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %1077 = @func_2448(%1074, %1075, %1076) /* ty=(Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) */;
  %1078 = maximum(%1056, %1057) /* ty=Tensor[(8, 14, 11), int8] */;
  %1079 = @func_3842(%1059) /* ty=Tensor[(3, 7, 1), float64] */;
  %1080 = %1070.0;
  %1081 = %1077.2;
  (%1078, %1079, %var_5217, %1080, %var_5220, %var_5221, %var_5222, meta[relay.Constant][98] /* ty=Tensor[(117), bool] */, meta[relay.Constant][99] /* ty=Tensor[(351), bool] */, %1081, meta[relay.Constant][100] /* ty=Tensor[(420), uint16] */, %var_5233)
}

def @func_10899(%var_10858: Tensor[(27), uint32], %var_10860: Tensor[(810), int16], %var_10862: Tensor[(1092), int16], %var_10863: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 9, 10), float32], Tensor[(27), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(21, 1), float32], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(1232), int8], Tensor[(104), float64], Tensor[(1232), int8], Tensor[(168, 4), int8], Tensor[(396), float64]) {
  %1082 = cast(%var_10858, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %1083 = cast(%var_10858, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %1084 = cast(meta[relay.Constant][101] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1085 = cast(%var_10860, dtype="int16") /* ty=Tensor[(810), int16] */;
  %1086 = cast(meta[relay.Constant][102] /* ty=Tensor[(21, 1), float32] */, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %1087 = cast(%var_10862, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %1088 = cast(%var_10863, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %1089 = reshape(%1082, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %1090 = reshape(%1083, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %1091 = reshape(%1084, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %1092 = reshape(%1085, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %1093 = reshape(%1086, newshape=[7, 3]) /* ty=Tensor[(7, 3), float32] */;
  %1094 = reshape(%1087, newshape=[182, 6]) /* ty=Tensor[(182, 6), int16] */;
  %1095 = reshape(%1088, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %1096 = @func_5594(%1089, %1090, %1091, %1092, %1093, %1094, %1095) /* ty=(Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) */;
  %1097 = cast(meta[relay.Constant][103] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1098 = cast(meta[relay.Constant][104] /* ty=Tensor[(1232), int8] */, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %1099 = cast(meta[relay.Constant][102] /* ty=Tensor[(21, 1), float32] */, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %1100 = cast(meta[relay.Constant][105] /* ty=Tensor[(168, 4), int8] */, dtype="int8") /* ty=Tensor[(168, 4), int8] */;
  %1101 = cast(%var_10862, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %1102 = cast(meta[relay.Constant][106] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %1103 = cast(meta[relay.Constant][102] /* ty=Tensor[(21, 1), float32] */, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %1104 = reshape(%1097, newshape=[2, 4, 13]) /* ty=Tensor[(2, 4, 13), float64] */;
  %1105 = reshape(%1098, newshape=[1232]) /* ty=Tensor[(1232), int8] */;
  %1106 = reshape(%1099, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %1107 = reshape(%1100, newshape=[336, 2]) /* ty=Tensor[(336, 2), int8] */;
  %1108 = reshape(%1101, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %1109 = reshape(%1102, newshape=[198, 2]) /* ty=Tensor[(198, 2), float64] */;
  %1110 = reshape(%1103, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %1111 = @func_10749(%1104, %1105, %1106, %1107, %1108, %1109, %1110) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(8, 14, 6), int8], Tensor[(1232), int8], Tensor[(336, 2), int8], Tensor[(1092), int16], Tensor[(810), int16], Tensor[(198, 2), bool], Tensor[(2, 4, 13), float64], Tensor[(2, 4, 13), int16], Tensor[(21), bool]) */;
  %1112 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  %1113 = %1096.1;
  %1114 = %1111.2;
  (%1112, %1113, %var_10858, meta[relay.Constant][101] /* ty=Tensor[(9), int16] */, %var_10860, meta[relay.Constant][102] /* ty=Tensor[(21, 1), float32] */, %var_10862, %var_10863, %1114, meta[relay.Constant][103] /* ty=Tensor[(104), float64] */, meta[relay.Constant][104] /* ty=Tensor[(1232), int8] */, meta[relay.Constant][105] /* ty=Tensor[(168, 4), int8] */, meta[relay.Constant][106] /* ty=Tensor[(396), float64] */)
}

def @func_742(%var_736: Tensor[(9, 14, 9), float64]) -> Tensor[(9, 14, 9), float64] {
  %1115 = cast(%var_736, dtype="float64") /* ty=Tensor[(9, 14, 9), float64] */;
  cos(%1115) /* ty=Tensor[(9, 14, 9), float64] */
}

def @func_10777() -> Tensor[(9, 11, 2), float64] {
  @func_9913() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_14046() -> (Tensor[(9, 11, 2), float64],) {
  %1116 = @func_12186() /* ty=Tensor[(9, 11, 2), float64] */;
  (%1116,)
}

def @main(%var_15418: Tensor[(4, 11, 4), int16], %var_15419: Tensor[(4, 11, 4), int16]) -> (Tensor[(4, 11, 4), int16],) {
  %1117 = cast(%var_15419, dtype="int16") /* ty=Tensor[(4, 11, 4), int16] */;
  %1118 = shape_of(%var_15418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1119 = cast(%var_15418, dtype="int16") /* ty=Tensor[(4, 11, 4), int16] */;
  %1120 = dyn.reshape(%1117, %1118, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1121 = add(%1119, %1120) /* ty=Tensor[(4, 11, 4), int16] */;
  (%1121,)
}

def @func_14695() -> Tensor[(9, 11, 2), float64] {
  @func_12473() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_12376() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %1122 = @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %1123 = %1122.0;
  %1124 = @func_12186() /* ty=Tensor[(9, 11, 2), float64] */;
  (%1123, %1124)
}

def @func_13821(%var_13810: int8, %var_13811: Tensor[(78), int8]) -> (Tensor[(9, 11, 2), float64], Tensor[(6, 13, 1), bool], int8, Tensor[(78), int8], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %1125 = cast(%var_13810, dtype="int8") /* ty=int8 */;
  %1126 = cast(%var_13811, dtype="int8") /* ty=Tensor[(78), int8] */;
  %1127 = reshape(%1125, newshape=[]) /* ty=int8 */;
  %1128 = reshape(%1126, newshape=[6, 13, 1]) /* ty=Tensor[(6, 13, 1), int8] */;
  %1129 = @func_7602(%1127, %1128) /* ty=(Tensor[(6, 13, 1), bool], Tensor[(6, 13, 1), bool], Tensor[(3, 4, 15), float32], Tensor[(6, 13, 180), uint16]) */;
  %1130 = @func_13466() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %1131 = @func_11183() /* ty=Tensor[(9, 11, 2), float64] */;
  %1132 = %1129.1;
  %1133 = @func_12045() /* ty=Tensor[(9, 11, 2), float64] */;
  %1134 = %1130.0;
  %1135 = @func_12473() /* ty=Tensor[(9, 11, 2), float64] */;
  (%1131, %1132, %var_13810, %var_13811, %1133, %1134, %1135)
}

def @func_12741(%var_12737: Tensor[(540), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) {
  %1136 = cast(%var_12737, dtype="float32") /* ty=Tensor[(540), float32] */;
  %1137 = reshape(%1136, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %1138 = @func_12526(%1137) /* ty=(Tensor[(15, 4, 9), float32],) */;
  %1139 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  %1140 = %1138.0;
  (%1139, %1140, %var_12737)
}

def @func_11082(%var_11071: Tensor[(672), int8]) -> (Tensor[(198), float64], Tensor[(2, 11, 6), float32], Tensor[(33, 4), float32], Tensor[(9, 11, 2), float64], Tensor[(14, 14, 11), int8], Tensor[(672), int8], Tensor[(351), bool]) {
  %1141 = @func_10563() /* ty=(Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) */;
  %1142 = cast(meta[relay.Constant][107] /* ty=Tensor[(33, 4), float32] */, dtype="float32") /* ty=Tensor[(33, 4), float32] */;
  %1143 = reshape(%1142, newshape=[2, 11, 6]) /* ty=Tensor[(2, 11, 6), float32] */;
  %1144 = @func_8898(%1143) /* ty=(Tensor[(2, 11, 6), float32],) */;
  %1145 = @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %1146 = cast(%var_11071, dtype="int8") /* ty=Tensor[(672), int8] */;
  %1147 = cast(meta[relay.Constant][108] /* ty=Tensor[(351), bool] */, dtype="bool") /* ty=Tensor[(351), bool] */;
  %1148 = reshape(%1146, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %1149 = reshape(%1147, newshape=[351]) /* ty=Tensor[(351), bool] */;
  %1150 = @func_9455(%1148, %1149) /* ty=(Tensor[(14, 14, 11), int8], Tensor[(3, 117), bool], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(39, 3), bool], Tensor[(351), bool], Tensor[(14, 14, 11), uint8]) */;
  %1151 = %1141.2;
  %1152 = %1144.0;
  %1153 = %1145.0;
  %1154 = %1150.0;
  (%1151, %1152, meta[relay.Constant][107] /* ty=Tensor[(33, 4), float32] */, %1153, %1154, %var_11071, meta[relay.Constant][108] /* ty=Tensor[(351), bool] */)
}

def @func_12437() -> (Tensor[(9, 11, 2), float32],) {
  %1155 = @func_12045() /* ty=Tensor[(9, 11, 2), float64] */;
  %1156 = cast(%1155, dtype="float32") /* ty=Tensor[(9, 11, 2), float32] */;
  %1157 = cos(%1156) /* ty=Tensor[(9, 11, 2), float32] */;
  %1158 = cast(%1157, dtype="float32") /* ty=Tensor[(9, 11, 2), float32] */;
  %1159 = sinh(%1158) /* ty=Tensor[(9, 11, 2), float32] */;
  (%1159,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3842(%var_3814: Tensor[(3, 7, 1), float32]) -> Tensor[(3, 7, 1), float64] {
  %0 = cast(%var_3814, dtype="float32") /* ty=Tensor[(3, 7, 1), float32] */;
  %1 = log(%0) /* ty=Tensor[(3, 7, 1), float32] */;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(3, 7, 1), float64] */;
  sinh(%2) /* ty=Tensor[(3, 7, 1), float64] */
}

def @func_8898(%var_8894: Tensor[(2, 11, 6), float32]) -> (Tensor[(2, 11, 6), float32],) {
  %3 = cast(%var_8894, dtype="float32") /* ty=Tensor[(2, 11, 6), float32] */;
  %4 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(2, 11, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 6), float32] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %7 = power(%5, %6) /* ty=Tensor[(2, 11, 6), float32] */;
  (%7,)
}

def @func_6504(%var_6499: Tensor[(12, 3, 2), int32], %var_6500: Tensor[(12, 3, 2), int32], %var_6501: Tensor[(810), int16], %var_6502: Tensor[(672), int8], %var_6503: Tensor[(1092), int16]) -> (Tensor[(12, 3, 2), bool], Tensor[(9), int16], Tensor[(420), uint16], Tensor[(810), int16], Tensor[(396), float64], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16]) {
  %35 = fn (%var_6416: Tensor[(12, 3, 2), int32], %var_6417: Tensor[(12, 3, 2), int32], %var_6444: Tensor[(810), int16], %var_6452: Tensor[(672), int8], %var_6453: Tensor[(1092), int16]) -> (Tensor[(12, 3, 2), bool], Tensor[(9), int16], Tensor[(420), uint16], Tensor[(810), int16], Tensor[(396), float64], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16]) {
    %8 = cast(%var_6417, dtype="bool") /* ty=Tensor[(12, 3, 2), bool] */;
    %9 = shape_of(%var_6416, dtype="int32") /* ty=Tensor[(3), int32] */;
    %10 = cast(%var_6416, dtype="bool") /* ty=Tensor[(12, 3, 2), bool] */;
    %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
    %13 = cast(%var_6444, dtype="int16") /* ty=Tensor[(810), int16] */;
    %14 = cast(%var_6444, dtype="int16") /* ty=Tensor[(810), int16] */;
    %15 = reshape(%12, newshape=[10, 6, 7]) /* ty=Tensor[(10, 6, 7), uint16] */;
    %16 = reshape(%13, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
    %17 = reshape(%14, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
    %18 = @func_2448(%15, %16, %17) /* ty=(Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) */;
    %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(1232), int8] */, dtype="int8") /* ty=Tensor[(1232), int8] */;
    %20 = cast(meta[relay.Constant][3] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
    %21 = cast(meta[relay.Constant][4] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %22 = cast(%var_6452, dtype="int8") /* ty=Tensor[(672), int8] */;
    %23 = cast(%var_6453, dtype="int16") /* ty=Tensor[(1092), int16] */;
    %24 = cast(%var_6444, dtype="int16") /* ty=Tensor[(810), int16] */;
    %25 = reshape(%19, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), int8] */;
    %26 = reshape(%20, newshape=[21, 1]) /* ty=Tensor[(21, 1), float32] */;
    %27 = reshape(%21, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %28 = reshape(%22, newshape=[672]) /* ty=Tensor[(672), int8] */;
    %29 = reshape(%23, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
    %30 = reshape(%24, newshape=[810]) /* ty=Tensor[(810), int16] */;
    %31 = @func_5254(%25, %26, %27, %28, %29, %30) /* ty=(Tensor[(8, 14, 11), int8], Tensor[(3, 7, 1), float64], Tensor[(21, 1), float32], Tensor[(8, 14, 6), int8], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(810), int16]) */;
    %32 = equal(%10, %11) /* ty=Tensor[(12, 3, 2), bool] */;
    %33 = %18.1;
    %34 = %31.4;
    (%32, %33, meta[relay.Constant][1] /* ty=Tensor[(420), uint16] */, %var_6444, %34, meta[relay.Constant][2] /* ty=Tensor[(1232), int8] */, meta[relay.Constant][3] /* ty=Tensor[(21), float32] */, meta[relay.Constant][4] /* ty=Tensor[(396), float64] */, %var_6452, %var_6453)
  };
  %35(%var_6499, %var_6500, %var_6501, %var_6502, %var_6503) /* ty=(Tensor[(12, 3, 2), bool], Tensor[(9), int16], Tensor[(420), uint16], Tensor[(810), int16], Tensor[(396), float64], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16]) */
}

def @func_13945(%var_13944: Tensor[(10, 12, 15), uint8]) -> Tensor[(10, 12, 15), uint8] {
  %38 = fn (%var_13939: Tensor[(10, 12, 15), uint8]) -> Tensor[(10, 12, 15), uint8] {
    %36 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 12, 15), uint8] */, dtype="uint8") /* ty=Tensor[(1, 12, 15), uint8] */;
    %37 = cast(%var_13939, dtype="uint8") /* ty=Tensor[(10, 12, 15), uint8] */;
    bitwise_or(%36, %37) /* ty=Tensor[(10, 12, 15), uint8] */
  };
  %38(%var_13944) /* ty=Tensor[(10, 12, 15), uint8] */
}

def @func_14511(%var_14478: Tensor[(1232), int8], %var_14479: Tensor[(420), uint16], %var_14497: Tensor[(540), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(1, 1092), int16], Tensor[(1232), int8], Tensor[(420), uint16], Tensor[(?, 1960), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32], Tensor[(8, 14, 6), int8], Tensor[(2, 336), int8]) {
  %39 = @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %40 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 1960), int64] */, dtype="int64") /* ty=Tensor[(1, 1960), int64] */;
  %41 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 1092), int16] */, dtype="int16") /* ty=Tensor[(1, 1092), int16] */;
  %42 = cast(%var_14478, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %43 = cast(%var_14479, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %44 = reshape(%40, newshape=[1960]) /* ty=Tensor[(1960), int64] */;
  %45 = reshape(%41, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %46 = reshape(%42, newshape=[4, 308]) /* ty=Tensor[(4, 308), int8] */;
  %47 = reshape(%43, newshape=[1, 420]) /* ty=Tensor[(1, 420), uint16] */;
  %48 = @func_14087(%44, %45, %46, %47) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(10, 14, 14), int64], Tensor[(1960), int64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(1, 27), uint32], Tensor[(1092), int16], Tensor[(4, 308), int8], Tensor[(1, 420), uint16]) */;
  %49 = %48.2;
  %50 = cast(%49, dtype="float64") /* ty=Tensor[(1960), float64] */;
  %51 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(1, 1960), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %52 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 1960), int64] */, dtype="float64") /* ty=Tensor[(1, 1960), float64] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %54 = cast(%var_14497, dtype="float32") /* ty=Tensor[(540), float32] */;
  %55 = reshape(%54, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %56 = @func_12741(%55) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */;
  %57 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 336), int8] */, dtype="int8") /* ty=Tensor[(2, 336), int8] */;
  %58 = reshape(%57, newshape=[8, 14, 6]) /* ty=Tensor[(8, 14, 6), int8] */;
  %59 = @func_2766(%58) /* ty=(Tensor[(8, 14, 6), int8],) */;
  %60 = %39.0;
  %61 = power(%52, %53) /* ty=Tensor[(?, 1960), float64] */;
  %62 = %56.1;
  %63 = %59.0;
  (%60, meta[relay.Constant][6] /* ty=Tensor[(1, 1092), int16] */, %var_14478, %var_14479, %61, %62, %var_14497, %63, meta[relay.Constant][8] /* ty=Tensor[(2, 336), int8] */)
}

def @func_10538(%var_10529: Tensor[(9, 11, 2), float64]) -> Tensor[(9, 11, 2), float64] {
  %64 = @func_10305() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %65 = %64.0;
  %66 = cast(%var_10529, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
  %68 = cast(%65, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  subtract(%68, %69) /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_12377() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %73 = fn () -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
    %70 = @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */;
    %71 = %70.0;
    %72 = @func_12186() /* ty=Tensor[(9, 11, 2), float64] */;
    (%71, %72)
  };
  %73() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */
}

def @func_14516(%var_14513: Tensor[(1232), int8], %var_14514: Tensor[(420), uint16], %var_14515: Tensor[(540), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(1, 1092), int16], Tensor[(1232), int8], Tensor[(420), uint16], Tensor[(?, 1960), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32], Tensor[(8, 14, 6), int8], Tensor[(2, 336), int8]) {
  @func_14511(%var_14513, %var_14514, %var_14515) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(1, 1092), int16], Tensor[(1232), int8], Tensor[(420), uint16], Tensor[(?, 1960), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32], Tensor[(8, 14, 6), int8], Tensor[(2, 336), int8]) */
}

def @func_14982(%var_14960: Tensor[(1200), uint16], %var_14976: Tensor[(1568), float32], %var_14979: Tensor[(1232), int8]) -> (Tensor[(9, 11, 2), float64], Tensor[(117), bool], Tensor[(1200), uint16], Tensor[(1, 9), int16], Tensor[(1568), float32], Tensor[(27), uint32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(420), uint16]) {
  %74 = @func_14375() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %75 = cast(%var_14960, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %76 = cast(%var_14960, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %77 = reshape(%75, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint16] */;
  %78 = reshape(%76, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint16] */;
  %79 = @func_9361(%77, %78) /* ty=(Tensor[(5, 15, 16), uint16], Tensor[(5, 15, 16), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool]) */;
  %80 = cast(%var_14976, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %81 = cast(%var_14976, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %82 = cast(meta[relay.Constant][9] /* ty=Tensor[(27), uint32] */, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %83 = cast(meta[relay.Constant][10] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %84 = cast(%var_14979, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %85 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %86 = reshape(%80, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
  %87 = reshape(%81, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
  %88 = reshape(%82, newshape=[27]) /* ty=Tensor[(27), uint32] */;
  %89 = reshape(%83, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %90 = reshape(%84, newshape=[616, 2]) /* ty=Tensor[(616, 2), int8] */;
  %91 = reshape(%85, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %92 = @func_8743(%86, %87, %88, %89, %90, %91) /* ty=(Tensor[(14, 7, 16), float32], Tensor[(1, 9), int16], Tensor[(27), uint32], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(616, 2), int8], Tensor[(7, 12, 13), int16], Tensor[(21), float32], Tensor[(420), uint16], Tensor[(2, 312), float64]) */;
  %93 = %74.0;
  %94 = %79.3;
  %95 = %92.1;
  (%93, %94, %var_14960, %95, %var_14976, meta[relay.Constant][9] /* ty=Tensor[(27), uint32] */, meta[relay.Constant][10] /* ty=Tensor[(1092), int16] */, %var_14979, meta[relay.Constant][11] /* ty=Tensor[(420), uint16] */)
}

def @func_13328() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  @func_13326() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */
}

def @func_14682(%var_14680: Tensor[(78), int8]) -> (Tensor[(5, 16, ?), float32], Tensor[(78), int8], int8, Tensor[(78), int8]) {
  @func_14679(%var_14680) /* ty=(Tensor[(5, 16, ?), float32], Tensor[(78), int8], int8, Tensor[(78), int8]) */
}

def @func_14836() -> (Tensor[(9, 11, 2), float64], Tensor[(3, 11, 6), uint32]) {
  %96 = @func_13078() /* ty=Tensor[(9, 11, 2), float64] */;
  %97 = cast(%96, dtype="uint32") /* ty=Tensor[(9, 11, 2), uint32] */;
  %98 = cast(%96, dtype="uint32") /* ty=Tensor[(9, 11, 2), uint32] */;
  %99 = reshape(%97, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), uint32] */;
  %100 = reshape(%98, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), uint32] */;
  %101 = @func_7755(%99, %100) /* ty=(Tensor[(3, 11, 6), uint32],) */;
  %102 = %101.0;
  (%96, %102)
}

def @func_13422(%var_13420: int8, %var_13421: Tensor[(2, 7, 14), int8]) -> (Tensor[(2, 7, 14), bool],) {
  @func_13418(%var_13420, %var_13421) /* ty=(Tensor[(2, 7, 14), bool],) */
}

def @func_13354() -> Tensor[(9, 11, 2), float64] {
  @func_13352() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_14852() -> (Tensor[(9, 11, 2), float64],) {
  %105 = fn () -> (Tensor[(9, 11, 2), float64],) {
    %103 = @func_14046() /* ty=(Tensor[(9, 11, 2), float64],) */;
    %104 = %103.0;
    (%104,)
  };
  %105() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_10797() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %106 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  %107 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  (%106, %107)
}

def @func_12497(%var_12488: Tensor[(132), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(132), float32]) {
  %108 = cast(%var_12488, dtype="float32") /* ty=Tensor[(132), float32] */;
  %109 = reshape(%108, newshape=[2, 11, 6]) /* ty=Tensor[(2, 11, 6), float32] */;
  %110 = @func_8898(%109) /* ty=(Tensor[(2, 11, 6), float32],) */;
  %111 = @func_11197() /* ty=Tensor[(9, 11, 2), float64] */;
  %112 = %110.0;
  (%111, %112, %var_12488)
}

def @func_11544() -> (Tensor[(9, 11, 2), float64],) {
  @func_11542() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_14838() -> (Tensor[(9, 11, 2), float64], Tensor[(3, 11, 6), uint32]) {
  @func_14836() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(3, 11, 6), uint32]) */
}

def @func_15072() -> Tensor[(9, 11, 2), float64] {
  @func_15070() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_2452(%var_2449: Tensor[(10, 6, 7), uint16], %var_2450: Tensor[(81, 10), int16], %var_2451: Tensor[(81, 10), int16]) -> (Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) {
  %145 = fn (%var_2369: Tensor[(10, 6, 7), uint16], %var_2427: Tensor[(81, 10), int16], %var_2441: Tensor[(81, 10), int16]) -> (Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) {
    %113 = cast(meta[relay.Constant][12] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
    %114 = reshape(%113, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int16] */;
    %115 = @func_2252(%114) /* ty=(Tensor[(7, 12, 13), int16],) */;
    %116 = %115.0;
    %117 = cast(%116, dtype="int16") /* ty=Tensor[(7, 12, 13), int16] */;
    %118 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(1092), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %119 = cast(meta[relay.Constant][12] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
    %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?), int16] */;
    %121 = cast(meta[relay.Constant][13] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
    %122 = cast(%var_2427, dtype="int16") /* ty=Tensor[(81, 10), int16] */;
    %123 = reshape(%121, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
    %124 = reshape(%122, newshape=[9, 9, 10]) /* ty=Tensor[(9, 9, 10), int16] */;
    %125 = @func_1648(%123, %124) /* ty=(Tensor[(9, 9, 10), float32], Tensor[(9, 14, 9), float64], Tensor[(1134), float64], Tensor[(117), bool], Tensor[(117, 3), uint32]) */;
    %126 = %125.4;
    %127 = cast(meta[relay.Constant][14] /* ty=Tensor[(117, 3), uint32] */, dtype="uint16") /* ty=Tensor[(117, 3), uint16] */;
    %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(2), int32] */;
    %129 = cast(%126, dtype="uint16") /* ty=Tensor[(117, 3), uint16] */;
    %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %131 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 6, 7), uint16] */, dtype="bool") /* ty=Tensor[(10, 6, 7), bool] */;
    %132 = shape_of(%var_2369, dtype="int32") /* ty=Tensor[(3), int32] */;
    %133 = cast(%var_2369, dtype="bool") /* ty=Tensor[(10, 6, 7), bool] */;
    %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %135 = greater(%133, %134) /* ty=Tensor[(10, 6, 7), bool] */;
    %136 = cast(%135, dtype="float64") /* ty=Tensor[(10, 6, 7), float64] */;
    %137 = cast(%var_2441, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
    %138 = shape_of(%var_2427, dtype="int32") /* ty=Tensor[(2), int32] */;
    %139 = cast(%var_2427, dtype="bool") /* ty=Tensor[(81, 10), bool] */;
    %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %141 = logical_xor(%119, %120) /* ty=Tensor[(1092), int16] */;
    %142 = bitwise_xor(%129, %130) /* ty=Tensor[(117, 3), uint16] */;
    %143 = sqrt(%136) /* ty=Tensor[(10, 6, 7), float64] */;
    %144 = logical_or(%139, %140) /* ty=Tensor[(81, 10), bool] */;
    (%141, meta[relay.Constant][13] /* ty=Tensor[(9), int16] */, %142, %143, %144)
  };
  %145(%var_2449, %var_2450, %var_2451) /* ty=(Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) */
}

def @func_9804() -> Tensor[(9, 11, 2), float64] {
  %147 = fn () -> Tensor[(9, 11, 2), float64] {
    %146 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 11, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
    tan(%146) /* ty=Tensor[(9, 11, 2), float64] */
  };
  %147() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_14679(%var_14676: Tensor[(78), int8]) -> (Tensor[(5, 16, ?), float32], Tensor[(78), int8], int8, Tensor[(78), int8]) {
  %148 = @func_10563() /* ty=(Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) */;
  %149 = cast(meta[relay.Constant][17] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %150 = cast(%var_14676, dtype="int8") /* ty=Tensor[(78), int8] */;
  %151 = reshape(%149, newshape=[]) /* ty=int8 */;
  %152 = reshape(%150, newshape=[78]) /* ty=Tensor[(78), int8] */;
  %153 = @func_13821(%151, %152) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(6, 13, 1), bool], int8, Tensor[(78), int8], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
  %154 = %148.0;
  %155 = %153.3;
  (%154, %155, meta[relay.Constant][17] /* ty=int8 */, %var_14676)
}

def @func_9364(%var_9362: Tensor[(5, 15, 16), uint16], %var_9363: Tensor[(5, 15, 16), uint16]) -> (Tensor[(5, 15, 16), uint16], Tensor[(5, 15, 16), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool]) {
  %169 = fn (%var_9340: Tensor[(5, 15, 16), uint16], %var_9341: Tensor[(5, 15, 16), uint16]) -> (Tensor[(5, 15, 16), uint16], Tensor[(5, 15, 16), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool]) {
    %156 = cast(%var_9341, dtype="uint16") /* ty=Tensor[(5, 15, 16), uint16] */;
    %157 = shape_of(%var_9340, dtype="int32") /* ty=Tensor[(3), int32] */;
    %158 = cast(%var_9340, dtype="uint16") /* ty=Tensor[(5, 15, 16), uint16] */;
    %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %160 = cast(%var_9340, dtype="float32") /* ty=Tensor[(5, 15, 16), float32] */;
    %161 = sqrt(%160) /* ty=Tensor[(5, 15, 16), float32] */;
    %162 = cast(%161, dtype="float64") /* ty=Tensor[(5, 15, 16), float64] */;
    %163 = cast(meta[relay.Constant][18] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
    %164 = reshape(%163, newshape=[117]) /* ty=Tensor[(117), bool] */;
    %165 = @func_7637(%164) /* ty=(Tensor[(4, 4, 12), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool]) */;
    %166 = add(%158, %159) /* ty=Tensor[(5, 15, 16), uint16] */;
    %167 = log2(%162) /* ty=Tensor[(5, 15, 16), float64] */;
    %168 = %165.1;
    (%166, %167, %168, meta[relay.Constant][18] /* ty=Tensor[(117), bool] */)
  };
  %169(%var_9362, %var_9363) /* ty=(Tensor[(5, 15, 16), uint16], Tensor[(5, 15, 16), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool]) */
}

def @main(%var_15418: Tensor[(4, 11, 4), int16], %var_15419: Tensor[(4, 11, 4), int16]) -> (Tensor[(4, 11, 4), int16],) {
  %170 = cast(%var_15419, dtype="int16") /* ty=Tensor[(4, 11, 4), int16] */;
  %171 = shape_of(%var_15418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%var_15418, dtype="int16") /* ty=Tensor[(4, 11, 4), int16] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %174 = add(%172, %173) /* ty=Tensor[(4, 11, 4), int16] */;
  (%174,)
}

def @func_13418(%var_13395: int8, %var_13396: Tensor[(2, 7, 14), int8]) -> (Tensor[(2, 7, 14), bool],) {
  %175 = cast(%var_13395, dtype="bool") /* ty=bool */;
  %176 = cast(%var_13396, dtype="bool") /* ty=Tensor[(2, 7, 14), bool] */;
  %177 = greater(%175, %176) /* ty=Tensor[(2, 7, 14), bool] */;
  (%177,)
}

def @func_11929() -> Tensor[(5, 16, ?), float32] {
  %179 = fn () -> Tensor[(5, 16, ?), float32] {
    %178 = @func_10380() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float32]) */;
    %178.1
  };
  %179() /* ty=Tensor[(5, 16, ?), float32] */
}

def @func_11594(%var_11584: Tensor[(3, 9), uint32], %var_11585: Tensor[(9), int16], %var_11586: Tensor[(810), int16], %var_11588: Tensor[(1092), int16], %var_11589: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(1, 9), int16], Tensor[(3, 9), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) {
  %180 = cast(%var_11584, dtype="uint32") /* ty=Tensor[(3, 9), uint32] */;
  %181 = cast(%var_11584, dtype="uint32") /* ty=Tensor[(3, 9), uint32] */;
  %182 = cast(%var_11585, dtype="int16") /* ty=Tensor[(9), int16] */;
  %183 = cast(%var_11586, dtype="int16") /* ty=Tensor[(810), int16] */;
  %184 = cast(meta[relay.Constant][19] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %185 = cast(%var_11588, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %186 = cast(%var_11589, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %187 = reshape(%180, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %188 = reshape(%181, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %189 = reshape(%182, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %190 = reshape(%183, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %191 = reshape(%184, newshape=[7, 3]) /* ty=Tensor[(7, 3), float32] */;
  %192 = reshape(%185, newshape=[182, 6]) /* ty=Tensor[(182, 6), int16] */;
  %193 = reshape(%186, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %194 = @func_5594(%187, %188, %189, %190, %191, %192, %193) /* ty=(Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) */;
  %195 = @func_11183() /* ty=Tensor[(9, 11, 2), float64] */;
  %196 = %194.3;
  (%195, %196, %var_11584, %var_11585, %var_11586, meta[relay.Constant][19] /* ty=Tensor[(21), float32] */, %var_11588, %var_11589)
}

def @func_10119(%var_10118: Tensor[(22), uint32]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 16, 11), float64], uint32, Tensor[(22), uint32], Tensor[(4, 88), uint32]) {
  %206 = fn (%var_10102: Tensor[(22), uint32]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 16, 11), float64], uint32, Tensor[(22), uint32], Tensor[(4, 88), uint32]) {
    %197 = cast(meta[relay.Constant][20] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %198 = cast(%var_10102, dtype="uint32") /* ty=Tensor[(22), uint32] */;
    %199 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 88), uint32] */, dtype="uint32") /* ty=Tensor[(4, 88), uint32] */;
    %200 = reshape(%197, newshape=[]) /* ty=uint32 */;
    %201 = reshape(%198, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), uint32] */;
    %202 = reshape(%199, newshape=[2, 16, 11]) /* ty=Tensor[(2, 16, 11), uint32] */;
    %203 = @func_8042(%200, %201, %202) /* ty=(Tensor[(2, 16, 11), float64],) */;
    %204 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
    %205 = %203.0;
    (%204, %205, meta[relay.Constant][20] /* ty=uint32 */, %var_10102, meta[relay.Constant][21] /* ty=Tensor[(4, 88), uint32] */)
  };
  %206(%var_10118) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(2, 16, 11), float64], uint32, Tensor[(22), uint32], Tensor[(4, 88), uint32]) */
}

def @func_11179(%var_11178: Tensor[(1200), uint16]) -> (Tensor[(5, 16, ?), float32], Tensor[(5, 15, 16), float64], Tensor[(1200), uint16]) {
  %215 = fn (%var_11171: Tensor[(1200), uint16]) -> (Tensor[(5, 16, ?), float32], Tensor[(5, 15, 16), float64], Tensor[(1200), uint16]) {
    %207 = @func_10563() /* ty=(Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) */;
    %208 = cast(%var_11171, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
    %209 = cast(%var_11171, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
    %210 = reshape(%208, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint16] */;
    %211 = reshape(%209, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint16] */;
    %212 = @func_9361(%210, %211) /* ty=(Tensor[(5, 15, 16), uint16], Tensor[(5, 15, 16), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool]) */;
    %213 = %207.0;
    %214 = %212.1;
    (%213, %214, %var_11171)
  };
  %215(%var_11178) /* ty=(Tensor[(5, 16, ?), float32], Tensor[(5, 15, 16), float64], Tensor[(1200), uint16]) */
}

def @func_8901(%var_8899: Tensor[(2, 11, 6), float32]) -> (Tensor[(2, 11, 6), float32],) {
  @func_8898(%var_8899) /* ty=(Tensor[(2, 11, 6), float32],) */
}

def @func_14047() -> (Tensor[(9, 11, 2), float64],) {
  %217 = fn () -> (Tensor[(9, 11, 2), float64],) {
    %216 = @func_12186() /* ty=Tensor[(9, 11, 2), float64] */;
    (%216,)
  };
  %217() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_13086() -> (Tensor[(9, 11, 2), float64],) {
  %220 = fn () -> (Tensor[(9, 11, 2), float64],) {
    %218 = @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */;
    %219 = %218.0;
    (%219,)
  };
  %220() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_12811() -> Tensor[(9, 11, 2), float64] {
  @func_12809() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_14412() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %223 = fn () -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
    %221 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
    %222 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
    (%221, %222)
  };
  %223() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */
}

def @func_12717(%var_12641: Tensor[(13, 11, 8), float32], %var_12665: Tensor[(13, 11, 8), float32], %var_12685: Tensor[(198), float64], %var_12689: Tensor[(27), uint32], %var_12690: Tensor[(9), int16], %var_12693: Tensor[(420), uint16]) -> (Tensor[(13, 11, 8), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64], Tensor[(21), float32], Tensor[(27), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(7, 12, 13), int16], Tensor[(13, 11, 8), bool], Tensor[(198), float64]) {
  %224 = cast(%var_12641, dtype="float32") /* ty=Tensor[(13, 11, 8), float32] */;
  %225 = cast(%var_12685, dtype="float64") /* ty=Tensor[(198), float64] */;
  %226 = reshape(%225, newshape=[9, 11, 2]) /* ty=Tensor[(9, 11, 2), float64] */;
  %227 = cast(%var_12689, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %228 = cast(%var_12690, dtype="int16") /* ty=Tensor[(9), int16] */;
  %229 = cast(meta[relay.Constant][22] /* ty=Tensor[(810), int16] */, dtype="int16") /* ty=Tensor[(810), int16] */;
  %230 = cast(meta[relay.Constant][23] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %231 = cast(%var_12693, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %232 = reshape(%227, newshape=[3, 9]) /* ty=Tensor[(3, 9), uint32] */;
  %233 = reshape(%228, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %234 = reshape(%229, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %235 = reshape(%230, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %236 = reshape(%231, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %237 = @func_11594(%232, %233, %234, %235, %236) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(1, 9), int16], Tensor[(3, 9), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) */;
  %238 = cast(meta[relay.Constant][23] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %239 = reshape(%238, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int16] */;
  %240 = @func_2252(%239) /* ty=(Tensor[(7, 12, 13), int16],) */;
  %241 = cast(%var_12665, dtype="uint64") /* ty=Tensor[(13, 11, 8), uint64] */;
  %242 = shape_of(%var_12641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%var_12641, dtype="uint64") /* ty=Tensor[(13, 11, 8), uint64] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %245 = bitwise_and(%243, %244) /* ty=Tensor[(13, 11, 8), uint64] */;
  %246 = cast(%245, dtype="float64") /* ty=Tensor[(13, 11, 8), float64] */;
  %247 = sin(%246) /* ty=Tensor[(13, 11, 8), float64] */;
  %248 = cast(%var_12641, dtype="bool") /* ty=Tensor[(13, 11, 8), bool] */;
  %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%247, dtype="bool") /* ty=Tensor[(13, 11, 8), bool] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %252 = @func_10563() /* ty=(Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) */;
  %253 = rsqrt(%224) /* ty=Tensor[(13, 11, 8), float32] */;
  %254 = @func_10538(%226) /* ty=Tensor[(9, 11, 2), float64] */;
  %255 = %237.5;
  %256 = %240.0;
  %257 = logical_or(%250, %251) /* ty=Tensor[(13, 11, 8), bool] */;
  %258 = %252.2;
  (%253, %254, %var_12685, %255, %var_12689, %var_12690, meta[relay.Constant][22] /* ty=Tensor[(810), int16] */, meta[relay.Constant][23] /* ty=Tensor[(1092), int16] */, %var_12693, %256, %257, %258)
}

def @func_10245(%var_10242: Tensor[(1092), int16], %var_10243: Tensor[(1232), int8], %var_10244: Tensor[(21), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(27, 1), uint32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(420), uint16], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) {
  @func_10240(%var_10242, %var_10243, %var_10244) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(27, 1), uint32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(420), uint16], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) */
}

def @func_12045() -> Tensor[(9, 11, 2), float64] {
  @func_11183() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_11506(%var_11495: Tensor[(8, 14, 6), float32]) -> Tensor[(8, 14, 6), float32] {
  %259 = cast(%var_11495, dtype="float32") /* ty=Tensor[(8, 14, 6), float32] */;
  log(%259) /* ty=Tensor[(8, 14, 6), float32] */
}

def @func_11117(%var_11103: Tensor[(1, 132), float32], %var_11109: Tensor[(21), float32], %var_11111: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(1, 132), float32], Tensor[(300, 1), float32], Tensor[(27), uint32], Tensor[(9, 1), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) {
  %260 = cast(%var_11103, dtype="float32") /* ty=Tensor[(1, 132), float32] */;
  %261 = reshape(%260, newshape=[2, 11, 6]) /* ty=Tensor[(2, 11, 6), float32] */;
  %262 = @func_8898(%261) /* ty=(Tensor[(2, 11, 6), float32],) */;
  %263 = cast(meta[relay.Constant][24] /* ty=Tensor[(27), uint32] */, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %264 = cast(meta[relay.Constant][24] /* ty=Tensor[(27), uint32] */, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %265 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 1), int16] */, dtype="int16") /* ty=Tensor[(9, 1), int16] */;
  %266 = cast(meta[relay.Constant][26] /* ty=Tensor[(810), int16] */, dtype="int16") /* ty=Tensor[(810), int16] */;
  %267 = cast(%var_11109, dtype="float32") /* ty=Tensor[(21), float32] */;
  %268 = cast(meta[relay.Constant][27] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %269 = cast(%var_11111, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %270 = reshape(%263, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %271 = reshape(%264, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %272 = reshape(%265, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %273 = reshape(%266, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %274 = reshape(%267, newshape=[7, 3]) /* ty=Tensor[(7, 3), float32] */;
  %275 = reshape(%268, newshape=[182, 6]) /* ty=Tensor[(182, 6), int16] */;
  %276 = reshape(%269, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %277 = @func_5594(%270, %271, %272, %273, %274, %275, %276) /* ty=(Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) */;
  %278 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  %279 = %262.0;
  %280 = %277.2;
  (%278, %279, %var_11103, %280, meta[relay.Constant][24] /* ty=Tensor[(27), uint32] */, meta[relay.Constant][25] /* ty=Tensor[(9, 1), int16] */, meta[relay.Constant][26] /* ty=Tensor[(810), int16] */, %var_11109, meta[relay.Constant][27] /* ty=Tensor[(1092), int16] */, %var_11111)
}

def @func_14416() -> (Tensor[(5, 16, ?), float32],) {
  %281 = @func_11928() /* ty=Tensor[(5, 16, ?), float32] */;
  (%281,)
}

def @func_12741(%var_12737: Tensor[(540), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) {
  %282 = cast(%var_12737, dtype="float32") /* ty=Tensor[(540), float32] */;
  %283 = reshape(%282, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %284 = @func_12526(%283) /* ty=(Tensor[(15, 4, 9), float32],) */;
  %285 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  %286 = %284.0;
  (%285, %286, %var_12737)
}

def @func_11896() -> Tensor[(9, 11, 2), float64] {
  @func_11894() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_10436() -> (Tensor[(9, 11, 2), float64],) {
  %287 = @func_10305() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %288 = %287.0;
  (%288,)
}

def @func_14870() -> (Tensor[(9, 11, 2), float64],) {
  %290 = fn () -> (Tensor[(9, 11, 2), float64],) {
    %289 = @func_14258() /* ty=Tensor[(9, 11, 2), float64] */;
    (%289,)
  };
  %290() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_9609(%var_9607: Tensor[(198), uint32]) -> (Tensor[(7, 11, 13), bool], Tensor[(3, 11, 6), uint32], Tensor[(198), uint32]) {
  @func_9606(%var_9607) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(3, 11, 6), uint32], Tensor[(198), uint32]) */
}

def @func_10565() -> (Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) {
  @func_10563() /* ty=(Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) */
}

def @func_10380() -> (Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float32]) {
  %291 = cast(meta[relay.Constant][28] /* ty=Tensor[(20, 4), float32] */, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %292 = reshape(%291, newshape=[5, 16, 1]) /* ty=Tensor[(5, 16, 1), float32] */;
  %293 = @func_5868(%292) /* ty=Tensor[(5, 16, ?), bool] */;
  %294 = cast(meta[relay.Constant][28] /* ty=Tensor[(20, 4), float32] */, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %295 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%293, dtype="float32") /* ty=Tensor[(5, 16, ?), float32] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %298 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  %299 = add(%296, %297) /* ty=Tensor[(5, 16, ?), float32] */;
  (%298, %299)
}

def @func_8635(%var_8623: Tensor[(1, 4, 14), float64], %var_8624: Tensor[(13, 4, 14), float64]) -> (Tensor[(13, 4, 14), float64],) {
  %300 = cast(%var_8623, dtype="float64") /* ty=Tensor[(1, 4, 14), float64] */;
  %301 = cast(%var_8624, dtype="float64") /* ty=Tensor[(13, 4, 14), float64] */;
  %302 = floor_divide(%300, %301) /* ty=Tensor[(13, 4, 14), float64] */;
  (%302,)
}

def @func_11894() -> Tensor[(9, 11, 2), float64] {
  @func_10777() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_12474() -> Tensor[(9, 11, 2), float64] {
  %304 = fn () -> Tensor[(9, 11, 2), float64] {
    %303 = @func_11266() /* ty=(Tensor[(9, 11, 2), float64],) */;
    %303.0
  };
  %304() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_14243() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32]) {
  %309 = fn () -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32]) {
    %305 = @func_13326() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
    %306 = @func_12045() /* ty=Tensor[(9, 11, 2), float64] */;
    %307 = %305.1;
    %308 = @func_13381() /* ty=Tensor[(2, 11, 6), float32] */;
    (%306, %307, %308)
  };
  %309() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32]) */
}

def @func_4483(%var_4406: Tensor[(4, 9, 11), float64], %var_4424: Tensor[(672), int8], %var_4428: Tensor[(1092), int16], %var_4433: Tensor[(117), bool], %var_4434: Tensor[(3, 117), bool]) -> (Tensor[(8, 14, 6), int8], Tensor[(672), int8], Tensor[(7, 12, 13), int16], Tensor[(1092), int16], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool], Tensor[(4, 9, 11), uint8]) {
  %310 = cast(%var_4424, dtype="int8") /* ty=Tensor[(672), int8] */;
  %311 = reshape(%310, newshape=[8, 14, 6]) /* ty=Tensor[(8, 14, 6), int8] */;
  %312 = @func_2766(%311) /* ty=(Tensor[(8, 14, 6), int8],) */;
  %313 = cast(%var_4428, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %314 = reshape(%313, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int16] */;
  %315 = @func_2252(%314) /* ty=(Tensor[(7, 12, 13), int16],) */;
  %316 = cast(%var_4433, dtype="bool") /* ty=Tensor[(117), bool] */;
  %317 = cast(%var_4434, dtype="bool") /* ty=Tensor[(3, 117), bool] */;
  %318 = reshape(%316, newshape=[1, 9, 13]) /* ty=Tensor[(1, 9, 13), bool] */;
  %319 = reshape(%317, newshape=[3, 9, 13]) /* ty=Tensor[(3, 9, 13), bool] */;
  %320 = cast(%var_4406, dtype="float64") /* ty=Tensor[(4, 9, 11), float64] */;
  %321 = log2(%320) /* ty=Tensor[(4, 9, 11), float64] */;
  %322 = cast(%321, dtype="bool") /* ty=Tensor[(4, 9, 11), bool] */;
  %323 = shape_of(%var_4406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%var_4406, dtype="bool") /* ty=Tensor[(4, 9, 11), bool] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %326 = greater(%324, %325) /* ty=Tensor[(4, 9, 11), bool] */;
  %327 = cast(%321, dtype="uint8") /* ty=Tensor[(4, 9, 11), uint8] */;
  %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%326, dtype="uint8") /* ty=Tensor[(4, 9, 11), uint8] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %331 = %312.0;
  %332 = %315.0;
  %333 = @func_92(%318, %319) /* ty=Tensor[(3, 9, 13), bool] */;
  %334 = right_shift(%329, %330) /* ty=Tensor[(4, 9, 11), uint8] */;
  (%331, %var_4424, %332, %var_4428, %333, %var_4433, %var_4434, %334)
}

def @func_14377() -> (Tensor[(9, 11, 2), float64],) {
  @func_14375() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_2768(%var_2767: Tensor[(8, 14, 6), int8]) -> (Tensor[(8, 14, 6), int8],) {
  %340 = fn (%var_2752: Tensor[(8, 14, 6), int8]) -> (Tensor[(8, 14, 6), int8],) {
    %335 = cast(%var_2752, dtype="int8") /* ty=Tensor[(8, 14, 6), int8] */;
    %336 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(8, 14, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %337 = cast(meta[relay.Constant][29] /* ty=Tensor[(8, 14, 6), int8] */, dtype="int8") /* ty=Tensor[(8, 14, 6), int8] */;
    %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %339 = logical_xor(%337, %338) /* ty=Tensor[(8, 14, 6), int8] */;
    (%339,)
  };
  %340(%var_2767) /* ty=(Tensor[(8, 14, 6), int8],) */
}

def @func_13825(%var_13823: int8, %var_13824: Tensor[(78), int8]) -> (Tensor[(9, 11, 2), float64], Tensor[(6, 13, 1), bool], int8, Tensor[(78), int8], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  @func_13821(%var_13823, %var_13824) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(6, 13, 1), bool], int8, Tensor[(78), int8], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */
}

def @func_14761(%var_14757: Tensor[(3, 9), uint32], %var_14758: Tensor[(9), int16], %var_14759: Tensor[(3, 270), int16], %var_14760: Tensor[(1092), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(3, 9), uint32], Tensor[(9), int16], Tensor[(3, 270), int16], Tensor[(1092), int16], Tensor[(5, 84), uint16]) {
  @func_14755(%var_14757, %var_14758, %var_14759, %var_14760) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(3, 9), uint32], Tensor[(9), int16], Tensor[(3, 270), int16], Tensor[(1092), int16], Tensor[(5, 84), uint16]) */
}

def @func_10799() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  @func_10797() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */
}

def @func_7606(%var_7604: int8, %var_7605: Tensor[(6, 13, 1), int8]) -> (Tensor[(6, 13, 1), bool], Tensor[(6, 13, 1), bool], Tensor[(3, 4, 15), float32], Tensor[(6, 13, 180), uint16]) {
  @func_7602(%var_7604, %var_7605) /* ty=(Tensor[(6, 13, 1), bool], Tensor[(6, 13, 1), bool], Tensor[(3, 4, 15), float32], Tensor[(6, 13, 180), uint16]) */
}

def @func_9913() -> Tensor[(9, 11, 2), float64] {
  @func_9867() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_4734(%var_4729: Tensor[(10, 14, 14), int64]) -> Tensor[(10, 14, 14), int64] {
  %341 = cast(%var_4729, dtype="int64") /* ty=Tensor[(10, 14, 14), int64] */;
  %342 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(10, 14, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(meta[relay.Constant][30] /* ty=Tensor[(10, 14, 14), int64] */, dtype="int64") /* ty=Tensor[(10, 14, 14), int64] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%343, %344) /* ty=Tensor[(10, 14, 14), int64] */
}

def @func_10749(%var_10666: Tensor[(2, 4, 13), float64], %var_10685: Tensor[(1232), int8], %var_10686: Tensor[(21), float32], %var_10688: Tensor[(336, 2), int8], %var_10689: Tensor[(1092), int16], %var_10698: Tensor[(198, 2), float64], %var_10725: Tensor[(21), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(8, 14, 6), int8], Tensor[(1232), int8], Tensor[(336, 2), int8], Tensor[(1092), int16], Tensor[(810), int16], Tensor[(198, 2), bool], Tensor[(2, 4, 13), float64], Tensor[(2, 4, 13), int16], Tensor[(21), bool]) {
  %345 = cast(%var_10685, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %346 = cast(%var_10686, dtype="float32") /* ty=Tensor[(21), float32] */;
  %347 = cast(meta[relay.Constant][31] /* ty=Tensor[(198, 2), float64] */, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
  %348 = cast(%var_10688, dtype="int8") /* ty=Tensor[(336, 2), int8] */;
  %349 = cast(%var_10689, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %350 = cast(meta[relay.Constant][32] /* ty=Tensor[(810), int16] */, dtype="int16") /* ty=Tensor[(810), int16] */;
  %351 = reshape(%345, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), int8] */;
  %352 = reshape(%346, newshape=[21, 1]) /* ty=Tensor[(21, 1), float32] */;
  %353 = reshape(%347, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %354 = reshape(%348, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %355 = reshape(%349, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %356 = reshape(%350, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %357 = @func_5254(%351, %352, %353, %354, %355, %356) /* ty=(Tensor[(8, 14, 11), int8], Tensor[(3, 7, 1), float64], Tensor[(21, 1), float32], Tensor[(8, 14, 6), int8], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(810), int16]) */;
  %358 = cast(%var_10698, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
  %359 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(198, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %360 = cast(meta[relay.Constant][31] /* ty=Tensor[(198, 2), float64] */, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %362 = cast(%var_10666, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %363 = sin(%362) /* ty=Tensor[(2, 4, 13), float64] */;
  %364 = cast(%363, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %365 = cast(%var_10666, dtype="float32") /* ty=Tensor[(2, 4, 13), float32] */;
  %366 = cos(%365) /* ty=Tensor[(2, 4, 13), float32] */;
  %367 = cast(%363, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%366, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %371 = floor_divide(%369, %370) /* ty=Tensor[(2, 4, 13), float64] */;
  %372 = cast(%371, dtype="int16") /* ty=Tensor[(2, 4, 13), int16] */;
  %373 = shape_of(%var_10666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %374 = cast(%var_10666, dtype="int16") /* ty=Tensor[(2, 4, 13), int16] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %376 = cast(%var_10725, dtype="bool") /* ty=Tensor[(21), bool] */;
  %377 = shape_of(%var_10686, dtype="int32") /* ty=Tensor[(1), int32] */;
  %378 = cast(%var_10686, dtype="bool") /* ty=Tensor[(21), bool] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?), bool] */;
  %380 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  %381 = %357.3;
  %382 = logical_or(%360, %361) /* ty=Tensor[(198, 2), bool] */;
  %383 = log2(%364) /* ty=Tensor[(2, 4, 13), float64] */;
  %384 = bitwise_xor(%374, %375) /* ty=Tensor[(2, 4, 13), int16] */;
  %385 = not_equal(%378, %379) /* ty=Tensor[(21), bool] */;
  (%380, %381, %var_10685, %var_10688, %var_10689, meta[relay.Constant][32] /* ty=Tensor[(810), int16] */, %382, %383, %384, %385)
}

def @func_13078() -> Tensor[(9, 11, 2), float64] {
  @func_9913() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_14695() -> Tensor[(9, 11, 2), float64] {
  @func_12473() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_11037(%var_11034: Tensor[(1092), int16], %var_11035: Tensor[(1, 21), float32], %var_11036: Tensor[(2, 336), int8]) -> (Tensor[(9, 11, 2), float64], Tensor[(1568), float32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(1, 21), float32], Tensor[(10, 14, 14), int64], Tensor[(1960), int64], Tensor[(8, 14, 6), int8], Tensor[(2, 336), int8], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(405, 2), int16]) {
  %411 = fn (%var_11003: Tensor[(1092), int16], %var_11005: Tensor[(1, 21), float32], %var_11019: Tensor[(2, 336), int8]) -> (Tensor[(9, 11, 2), float64], Tensor[(1568), float32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(1, 21), float32], Tensor[(10, 14, 14), int64], Tensor[(1960), int64], Tensor[(8, 14, 6), int8], Tensor[(2, 336), int8], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(405, 2), int16]) {
    %386 = @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */;
    %387 = cast(%var_11003, dtype="int16") /* ty=Tensor[(1092), int16] */;
    %388 = cast(meta[relay.Constant][33] /* ty=Tensor[(1232), int8] */, dtype="int8") /* ty=Tensor[(1232), int8] */;
    %389 = cast(%var_11005, dtype="float32") /* ty=Tensor[(1, 21), float32] */;
    %390 = reshape(%387, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
    %391 = reshape(%388, newshape=[1232]) /* ty=Tensor[(1232), int8] */;
    %392 = reshape(%389, newshape=[21]) /* ty=Tensor[(21), float32] */;
    %393 = @func_10240(%390, %391, %392) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(27, 1), uint32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(420), uint16], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) */;
    %394 = cast(meta[relay.Constant][34] /* ty=Tensor[(1960), int64] */, dtype="int64") /* ty=Tensor[(1960), int64] */;
    %395 = reshape(%394, newshape=[10, 14, 14]) /* ty=Tensor[(10, 14, 14), int64] */;
    %396 = cast(%var_11019, dtype="int8") /* ty=Tensor[(2, 336), int8] */;
    %397 = reshape(%396, newshape=[8, 14, 6]) /* ty=Tensor[(8, 14, 6), int8] */;
    %398 = @func_2766(%397) /* ty=(Tensor[(8, 14, 6), int8],) */;
    %399 = cast(meta[relay.Constant][35] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
    %400 = cast(meta[relay.Constant][36] /* ty=Tensor[(405, 2), int16] */, dtype="int16") /* ty=Tensor[(405, 2), int16] */;
    %401 = cast(meta[relay.Constant][36] /* ty=Tensor[(405, 2), int16] */, dtype="int16") /* ty=Tensor[(405, 2), int16] */;
    %402 = reshape(%399, newshape=[10, 6, 7]) /* ty=Tensor[(10, 6, 7), uint16] */;
    %403 = reshape(%400, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
    %404 = reshape(%401, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
    %405 = @func_2448(%402, %403, %404) /* ty=(Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) */;
    %406 = %386.0;
    %407 = %393.2;
    %408 = @func_4734(%395) /* ty=Tensor[(10, 14, 14), int64] */;
    %409 = %398.0;
    %410 = %405.2;
    (%406, %407, %var_11003, meta[relay.Constant][33] /* ty=Tensor[(1232), int8] */, %var_11005, %408, meta[relay.Constant][34] /* ty=Tensor[(1960), int64] */, %409, %var_11019, %410, meta[relay.Constant][35] /* ty=Tensor[(420), uint16] */, meta[relay.Constant][36] /* ty=Tensor[(405, 2), int16] */)
  };
  %411(%var_11034, %var_11035, %var_11036) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(1568), float32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(1, 21), float32], Tensor[(10, 14, 14), int64], Tensor[(1960), int64], Tensor[(8, 14, 6), int8], Tensor[(2, 336), int8], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(405, 2), int16]) */
}

def @func_12809() -> Tensor[(9, 11, 2), float64] {
  @func_12473() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_13466() -> (Tensor[(9, 11, 2), float64],) {
  %412 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  (%412,)
}

def @func_3845(%var_3843: Tensor[(3, 7, 1), float32]) -> Tensor[(3, 7, 1), float64] {
  @func_3842(%var_3843) /* ty=Tensor[(3, 7, 1), float64] */
}

def @func_10541(%var_10539: Tensor[(9, 11, 2), float64]) -> Tensor[(9, 11, 2), float64] {
  @func_10538(%var_10539) /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_12500(%var_12498: Tensor[(132), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(132), float32]) {
  @func_12497(%var_12498) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(132), float32]) */
}

def @func_11304(%var_11299: Tensor[(1, 1170), int16], %var_11300: Tensor[(396), float64], %var_11301: Tensor[(8, 154), int8], %var_11302: Tensor[(21), float32], %var_11303: Tensor[(810), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(13, 15, 6), bool], Tensor[(1, 1170), int16], Tensor[(396), float64], Tensor[(672), int8], Tensor[(8, 154), int8], Tensor[(21), float32], Tensor[(810), int16]) {
  @func_11297(%var_11299, %var_11300, %var_11301, %var_11302, %var_11303) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(13, 15, 6), bool], Tensor[(1, 1170), int16], Tensor[(396), float64], Tensor[(672), int8], Tensor[(8, 154), int8], Tensor[(21), float32], Tensor[(810), int16]) */
}

def @func_11653(%var_11651: uint32, %var_11652: Tensor[(9, 8, 14), uint32]) -> Tensor[(9, 8, 14), int8] {
  %420 = fn (%var_11623: uint32, %var_11624: Tensor[(9, 8, 14), uint32]) -> Tensor[(9, 8, 14), int8] {
    %413 = cast(%var_11623, dtype="bool") /* ty=bool */;
    %414 = cast(%var_11624, dtype="bool") /* ty=Tensor[(9, 8, 14), bool] */;
    %415 = greater(%413, %414) /* ty=Tensor[(9, 8, 14), bool] */;
    %416 = cast(%415, dtype="int8") /* ty=Tensor[(9, 8, 14), int8] */;
    %417 = shape_of(%var_11624, dtype="int32") /* ty=Tensor[(3), int32] */;
    %418 = cast(%var_11624, dtype="int8") /* ty=Tensor[(9, 8, 14), int8] */;
    %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    subtract(%418, %419) /* ty=Tensor[(9, 8, 14), int8] */
  };
  %420(%var_11651, %var_11652) /* ty=Tensor[(9, 8, 14), int8] */
}

def @func_6881(%var_6879: Tensor[(3, 4, 15), float32], %var_6880: Tensor[(3, 4, 15), float32]) -> (Tensor[(3, 4, 15), float32],) {
  %426 = fn (%var_6872: Tensor[(3, 4, 15), float32], %var_6873: Tensor[(3, 4, 15), float32]) -> (Tensor[(3, 4, 15), float32],) {
    %421 = cast(%var_6873, dtype="float32") /* ty=Tensor[(3, 4, 15), float32] */;
    %422 = shape_of(%var_6872, dtype="int32") /* ty=Tensor[(3), int32] */;
    %423 = cast(%var_6872, dtype="float32") /* ty=Tensor[(3, 4, 15), float32] */;
    %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %425 = divide(%423, %424) /* ty=Tensor[(3, 4, 15), float32] */;
    (%425,)
  };
  %426(%var_6879, %var_6880) /* ty=(Tensor[(3, 4, 15), float32],) */
}

def @func_4490(%var_4485: Tensor[(4, 9, 11), float64], %var_4486: Tensor[(672), int8], %var_4487: Tensor[(1092), int16], %var_4488: Tensor[(117), bool], %var_4489: Tensor[(3, 117), bool]) -> (Tensor[(8, 14, 6), int8], Tensor[(672), int8], Tensor[(7, 12, 13), int16], Tensor[(1092), int16], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool], Tensor[(4, 9, 11), uint8]) {
  @func_4483(%var_4485, %var_4486, %var_4487, %var_4488, %var_4489) /* ty=(Tensor[(8, 14, 6), int8], Tensor[(672), int8], Tensor[(7, 12, 13), int16], Tensor[(1092), int16], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool], Tensor[(4, 9, 11), uint8]) */
}

def @func_96(%var_94: Tensor[(1, 9, 13), bool], %var_95: Tensor[(3, 9, 13), bool]) -> Tensor[(3, 9, 13), bool] {
  @func_92(%var_94, %var_95) /* ty=Tensor[(3, 9, 13), bool] */
}

def @func_12047() -> Tensor[(9, 11, 2), float64] {
  @func_12045() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_14435() -> (Tensor[(9, 11, 2), float64],) {
  %427 = @func_14411() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
  %428 = %427.1;
  (%428,)
}

def @func_14437() -> (Tensor[(9, 11, 2), float64],) {
  @func_14435() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_14792() -> Tensor[(9, 11, 2), float64] {
  %430 = fn () -> Tensor[(9, 11, 2), float64] {
    %429 = @func_13085() /* ty=(Tensor[(9, 11, 2), float64],) */;
    %429.0
  };
  %430() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_15246(%var_15244: Tensor[(14, 6, 8), float64], %var_15245: Tensor[(14, 6, 8), float64]) -> (Tensor[(14, 6, 8), float64],) {
  @func_15242(%var_15244, %var_15245) /* ty=(Tensor[(14, 6, 8), float64],) */
}

def @func_14304(%var_14302: Tensor[(72), int32], %var_14303: Tensor[(1092), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(9), int16], Tensor[(72), int32], Tensor[(810), int16], Tensor[(672), int8], Tensor[(1092), int16]) {
  %444 = fn (%var_14294: Tensor[(72), int32], %var_14297: Tensor[(1092), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(9), int16], Tensor[(72), int32], Tensor[(810), int16], Tensor[(672), int8], Tensor[(1092), int16]) {
    %431 = cast(%var_14294, dtype="int32") /* ty=Tensor[(72), int32] */;
    %432 = cast(%var_14294, dtype="int32") /* ty=Tensor[(72), int32] */;
    %433 = cast(meta[relay.Constant][37] /* ty=Tensor[(810), int16] */, dtype="int16") /* ty=Tensor[(810), int16] */;
    %434 = cast(meta[relay.Constant][38] /* ty=Tensor[(672), int8] */, dtype="int8") /* ty=Tensor[(672), int8] */;
    %435 = cast(%var_14297, dtype="int16") /* ty=Tensor[(1092), int16] */;
    %436 = reshape(%431, newshape=[12, 3, 2]) /* ty=Tensor[(12, 3, 2), int32] */;
    %437 = reshape(%432, newshape=[12, 3, 2]) /* ty=Tensor[(12, 3, 2), int32] */;
    %438 = reshape(%433, newshape=[810]) /* ty=Tensor[(810), int16] */;
    %439 = reshape(%434, newshape=[672]) /* ty=Tensor[(672), int8] */;
    %440 = reshape(%435, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
    %441 = @func_6498(%436, %437, %438, %439, %440) /* ty=(Tensor[(12, 3, 2), bool], Tensor[(9), int16], Tensor[(420), uint16], Tensor[(810), int16], Tensor[(396), float64], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16]) */;
    %442 = @func_12473() /* ty=Tensor[(9, 11, 2), float64] */;
    %443 = %441.1;
    (%442, %443, %var_14294, meta[relay.Constant][37] /* ty=Tensor[(810), int16] */, meta[relay.Constant][38] /* ty=Tensor[(672), int8] */, %var_14297)
  };
  %444(%var_14302, %var_14303) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9), int16], Tensor[(72), int32], Tensor[(810), int16], Tensor[(672), int8], Tensor[(1092), int16]) */
}

def @func_14933() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %445 = @func_11894() /* ty=Tensor[(9, 11, 2), float64] */;
  %446 = @func_14791() /* ty=Tensor[(9, 11, 2), float64] */;
  (%445, %446)
}

def @func_11297(%var_11282: Tensor[(1, 1170), int16], %var_11283: Tensor[(396), float64], %var_11285: Tensor[(8, 154), int8], %var_11286: Tensor[(21), float32], %var_11287: Tensor[(810), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(13, 15, 6), bool], Tensor[(1, 1170), int16], Tensor[(396), float64], Tensor[(672), int8], Tensor[(8, 154), int8], Tensor[(21), float32], Tensor[(810), int16]) {
  %447 = cast(%var_11282, dtype="int16") /* ty=Tensor[(1, 1170), int16] */;
  %448 = cast(%var_11282, dtype="int16") /* ty=Tensor[(1, 1170), int16] */;
  %449 = cast(%var_11283, dtype="float64") /* ty=Tensor[(396), float64] */;
  %450 = cast(meta[relay.Constant][39] /* ty=Tensor[(672), int8] */, dtype="int8") /* ty=Tensor[(672), int8] */;
  %451 = cast(%var_11285, dtype="int8") /* ty=Tensor[(8, 154), int8] */;
  %452 = cast(%var_11286, dtype="float32") /* ty=Tensor[(21), float32] */;
  %453 = cast(%var_11287, dtype="int16") /* ty=Tensor[(810), int16] */;
  %454 = reshape(%447, newshape=[13, 15, 6]) /* ty=Tensor[(13, 15, 6), int16] */;
  %455 = reshape(%448, newshape=[13, 15, 6]) /* ty=Tensor[(13, 15, 6), int16] */;
  %456 = reshape(%449, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %457 = reshape(%450, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %458 = reshape(%451, newshape=[1232]) /* ty=Tensor[(1232), int8] */;
  %459 = reshape(%452, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %460 = reshape(%453, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %461 = @func_7967(%454, %455, %456, %457, %458, %459, %460) /* ty=(Tensor[(13, 15, 6), bool], Tensor[(117), bool], Tensor[(396), float64], Tensor[(672), int8], Tensor[(117), bool], Tensor[(351), bool], Tensor[(7, 156), float32], Tensor[(7, 156), bool], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(810), int16]) */;
  %462 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  %463 = %461.0;
  (%462, %463, %var_11282, %var_11283, meta[relay.Constant][39] /* ty=Tensor[(672), int8] */, %var_11285, %var_11286, %var_11287)
}

def @func_11601(%var_11596: Tensor[(3, 9), uint32], %var_11597: Tensor[(9), int16], %var_11598: Tensor[(810), int16], %var_11599: Tensor[(1092), int16], %var_11600: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(1, 9), int16], Tensor[(3, 9), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) {
  @func_11594(%var_11596, %var_11597, %var_11598, %var_11599, %var_11600) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(1, 9), int16], Tensor[(3, 9), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) */
}

def @func_8046(%var_8043: uint32, %var_8044: Tensor[(2, 1, 11), uint32], %var_8045: Tensor[(2, 16, 11), uint32]) -> (Tensor[(2, 16, 11), float64],) {
  %473 = fn (%var_7999: uint32, %var_8000: Tensor[(2, 1, 11), uint32], %var_8027: Tensor[(2, 16, 11), uint32]) -> (Tensor[(2, 16, 11), float64],) {
    %464 = cast(%var_7999, dtype="uint32") /* ty=uint32 */;
    %465 = cast(%var_8000, dtype="uint32") /* ty=Tensor[(2, 1, 11), uint32] */;
    %466 = bitwise_or(%464, %465) /* ty=Tensor[(2, 1, 11), uint32] */;
    %467 = cast(%466, dtype="int16") /* ty=Tensor[(2, 1, 11), int16] */;
    %468 = cast(%var_8027, dtype="int16") /* ty=Tensor[(2, 16, 11), int16] */;
    %469 = left_shift(%467, %468) /* ty=Tensor[(2, 16, 11), int16] */;
    %470 = cast(%469, dtype="float64") /* ty=Tensor[(2, 16, 11), float64] */;
    %471 = cast(%var_7999, dtype="float64") /* ty=float64 */;
    %472 = divide(%470, %471) /* ty=Tensor[(2, 16, 11), float64] */;
    (%472,)
  };
  %473(%var_8043, %var_8044, %var_8045) /* ty=(Tensor[(2, 16, 11), float64],) */
}

def @func_12725(%var_12719: Tensor[(13, 11, 8), float32], %var_12720: Tensor[(13, 11, 8), float32], %var_12721: Tensor[(198), float64], %var_12722: Tensor[(27), uint32], %var_12723: Tensor[(9), int16], %var_12724: Tensor[(420), uint16]) -> (Tensor[(13, 11, 8), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64], Tensor[(21), float32], Tensor[(27), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(7, 12, 13), int16], Tensor[(13, 11, 8), bool], Tensor[(198), float64]) {
  @func_12717(%var_12719, %var_12720, %var_12721, %var_12722, %var_12723, %var_12724) /* ty=(Tensor[(13, 11, 8), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64], Tensor[(21), float32], Tensor[(27), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(7, 12, 13), int16], Tensor[(13, 11, 8), bool], Tensor[(198), float64]) */
}

def @func_7640(%var_7638: Tensor[(117), bool]) -> (Tensor[(4, 4, 12), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool]) {
  @func_7637(%var_7638) /* ty=(Tensor[(4, 4, 12), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool]) */
}

def @func_15308() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(14, 6, 8), float64], Tensor[(672, 1), float64]) {
  %483 = fn () -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(14, 6, 8), float64], Tensor[(672, 1), float64]) {
    %474 = @func_12405() /* ty=(Tensor[(9, 11, 2), float64],) */;
    %475 = cast(meta[relay.Constant][40] /* ty=Tensor[(672, 1), float64] */, dtype="float64") /* ty=Tensor[(672, 1), float64] */;
    %476 = cast(meta[relay.Constant][40] /* ty=Tensor[(672, 1), float64] */, dtype="float64") /* ty=Tensor[(672, 1), float64] */;
    %477 = reshape(%475, newshape=[14, 6, 8]) /* ty=Tensor[(14, 6, 8), float64] */;
    %478 = reshape(%476, newshape=[14, 6, 8]) /* ty=Tensor[(14, 6, 8), float64] */;
    %479 = @func_15242(%477, %478) /* ty=(Tensor[(14, 6, 8), float64],) */;
    %480 = @func_11183() /* ty=Tensor[(9, 11, 2), float64] */;
    %481 = %474.0;
    %482 = %479.0;
    (%480, %481, %482, meta[relay.Constant][40] /* ty=Tensor[(672, 1), float64] */)
  };
  %483() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(14, 6, 8), float64], Tensor[(672, 1), float64]) */
}

def @func_14113() -> (Tensor[(9, 11, 2), float64],) {
  %484 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  (%484,)
}

def @func_11184() -> Tensor[(9, 11, 2), float64] {
  %485 = fn () -> Tensor[(9, 11, 2), float64] {
    @func_9913() /* ty=Tensor[(9, 11, 2), float64] */
  };
  %485() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_7602(%var_7581: int8, %var_7582: Tensor[(6, 13, 1), int8]) -> (Tensor[(6, 13, 1), bool], Tensor[(6, 13, 1), bool], Tensor[(3, 4, 15), float32], Tensor[(6, 13, 180), uint16]) {
  %486 = cast(%var_7581, dtype="bool") /* ty=bool */;
  %487 = cast(%var_7582, dtype="bool") /* ty=Tensor[(6, 13, 1), bool] */;
  %488 = cast(%var_7581, dtype="bool") /* ty=bool */;
  %489 = cast(%var_7582, dtype="bool") /* ty=Tensor[(6, 13, 1), bool] */;
  %490 = cast(meta[relay.Constant][41] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %491 = cast(meta[relay.Constant][41] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %492 = reshape(%490, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %493 = reshape(%491, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
  %494 = @func_6878(%492, %493) /* ty=(Tensor[(3, 4, 15), float32],) */;
  %495 = cast(meta[relay.Constant][41] /* ty=Tensor[(180), float32] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %496 = cast(%var_7582, dtype="uint16") /* ty=Tensor[(6, 13, 1), uint16] */;
  %497 = greater(%486, %487) /* ty=Tensor[(6, 13, 1), bool] */;
  %498 = logical_and(%488, %489) /* ty=Tensor[(6, 13, 1), bool] */;
  %499 = %494.0;
  %500 = left_shift(%495, %496) /* ty=Tensor[(6, 13, 180), uint16] */;
  (%497, %498, %499, %500)
}

def @func_9915() -> Tensor[(9, 11, 2), float64] {
  @func_9913() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_10758(%var_10751: Tensor[(2, 4, 13), float64], %var_10752: Tensor[(1232), int8], %var_10753: Tensor[(21), float32], %var_10754: Tensor[(336, 2), int8], %var_10755: Tensor[(1092), int16], %var_10756: Tensor[(198, 2), float64], %var_10757: Tensor[(21), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(8, 14, 6), int8], Tensor[(1232), int8], Tensor[(336, 2), int8], Tensor[(1092), int16], Tensor[(810), int16], Tensor[(198, 2), bool], Tensor[(2, 4, 13), float64], Tensor[(2, 4, 13), int16], Tensor[(21), bool]) {
  @func_10749(%var_10751, %var_10752, %var_10753, %var_10754, %var_10755, %var_10756, %var_10757) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(8, 14, 6), int8], Tensor[(1232), int8], Tensor[(336, 2), int8], Tensor[(1092), int16], Tensor[(810), int16], Tensor[(198, 2), bool], Tensor[(2, 4, 13), float64], Tensor[(2, 4, 13), int16], Tensor[(21), bool]) */
}

def @func_10052(%var_10048: Tensor[(22), uint32], %var_10049: Tensor[(352), uint32], %var_10050: Tensor[(9, 11, 2), float64], %var_10051: Tensor[(180), float32]) -> (Tensor[(2, 16, 11), float64], uint32, Tensor[(22), uint32], Tensor[(352), uint32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), bool], Tensor[(3, 4, 15), float32], Tensor[(180), float32]) {
  %531 = fn (%var_9974: Tensor[(22), uint32], %var_9975: Tensor[(352), uint32], %var_9995: Tensor[(9, 11, 2), float64], %var_10007: Tensor[(180), float32]) -> (Tensor[(2, 16, 11), float64], uint32, Tensor[(22), uint32], Tensor[(352), uint32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), bool], Tensor[(3, 4, 15), float32], Tensor[(180), float32]) {
    %501 = cast(meta[relay.Constant][42] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %502 = cast(%var_9974, dtype="uint32") /* ty=Tensor[(22), uint32] */;
    %503 = cast(%var_9975, dtype="uint32") /* ty=Tensor[(352), uint32] */;
    %504 = reshape(%501, newshape=[]) /* ty=uint32 */;
    %505 = reshape(%502, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), uint32] */;
    %506 = reshape(%503, newshape=[2, 16, 11]) /* ty=Tensor[(2, 16, 11), uint32] */;
    %507 = @func_8042(%504, %505, %506) /* ty=(Tensor[(2, 16, 11), float64],) */;
    %508 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
    %509 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 11, 2), float64] */, dtype="bool") /* ty=Tensor[(9, 11, 2), bool] */;
    %510 = shape_of(%508, dtype="int32") /* ty=Tensor[(3), int32] */;
    %511 = cast(%508, dtype="bool") /* ty=Tensor[(9, 11, 2), bool] */;
    %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %513 = logical_and(%511, %512) /* ty=Tensor[(9, 11, 2), bool] */;
    %514 = cast(%513, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
    %515 = shape_of(%508, dtype="int32") /* ty=Tensor[(3), int32] */;
    %516 = cast(%508, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
    %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %518 = cast(%var_9995, dtype="bool") /* ty=Tensor[(9, 11, 2), bool] */;
    %519 = shape_of(%508, dtype="int32") /* ty=Tensor[(3), int32] */;
    %520 = cast(%508, dtype="bool") /* ty=Tensor[(9, 11, 2), bool] */;
    %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %522 = cast(%var_10007, dtype="float32") /* ty=Tensor[(180), float32] */;
    %523 = cast(%var_10007, dtype="float32") /* ty=Tensor[(180), float32] */;
    %524 = reshape(%522, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
    %525 = reshape(%523, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), float32] */;
    %526 = @func_6878(%524, %525) /* ty=(Tensor[(3, 4, 15), float32],) */;
    %527 = %507.0;
    %528 = floor_divide(%516, %517) /* ty=Tensor[(9, 11, 2), float64] */;
    %529 = less(%520, %521) /* ty=Tensor[(9, 11, 2), bool] */;
    %530 = %526.0;
    (%527, meta[relay.Constant][42] /* ty=uint32 */, %var_9974, %var_9975, %528, %529, %530, %var_10007)
  };
  %531(%var_10048, %var_10049, %var_10050, %var_10051) /* ty=(Tensor[(2, 16, 11), float64], uint32, Tensor[(22), uint32], Tensor[(352), uint32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), bool], Tensor[(3, 4, 15), float32], Tensor[(180), float32]) */
}

def @func_12583() -> Tensor[(9, 11, 2), float64] {
  %532 = fn () -> Tensor[(9, 11, 2), float64] {
    @func_10777() /* ty=Tensor[(9, 11, 2), float64] */
  };
  %532() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_12529(%var_12527: Tensor[(15, 4, 9), float32]) -> (Tensor[(15, 4, 9), float32],) {
  @func_12526(%var_12527) /* ty=(Tensor[(15, 4, 9), float32],) */
}

def @func_13227() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(132), float32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  @func_13225() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(132), float32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */
}

def @func_9458(%var_9456: Tensor[(672), int8], %var_9457: Tensor[(351), bool]) -> (Tensor[(14, 14, 11), int8], Tensor[(3, 117), bool], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(39, 3), bool], Tensor[(351), bool], Tensor[(14, 14, 11), uint8]) {
  %560 = fn (%var_9443: Tensor[(672), int8], %var_9446: Tensor[(351), bool]) -> (Tensor[(14, 14, 11), int8], Tensor[(3, 117), bool], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(39, 3), bool], Tensor[(351), bool], Tensor[(14, 14, 11), uint8]) {
    %533 = cast(meta[relay.Constant][45] /* ty=Tensor[(14, 14, 11), int16] */, dtype="int16") /* ty=Tensor[(14, 14, 11), int16] */;
    %534 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(14, 14, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %535 = cast(meta[relay.Constant][44] /* ty=Tensor[(14, 14, 11), int16] */, dtype="int16") /* ty=Tensor[(14, 14, 11), int16] */;
    %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %537 = multiply(%535, %536) /* ty=Tensor[(14, 14, 11), int16] */;
    %538 = cast(meta[relay.Constant][44] /* ty=Tensor[(14, 14, 11), int16] */, dtype="int8") /* ty=Tensor[(14, 14, 11), int8] */;
    %539 = shape_of(%537, dtype="int32") /* ty=Tensor[(3), int32] */;
    %540 = cast(%537, dtype="int8") /* ty=Tensor[(14, 14, 11), int8] */;
    %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %542 = cast(meta[relay.Constant][46] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %543 = cast(%var_9443, dtype="int8") /* ty=Tensor[(672), int8] */;
    %544 = cast(meta[relay.Constant][47] /* ty=Tensor[(1092), int16] */, dtype="int16") /* ty=Tensor[(1092), int16] */;
    %545 = cast(meta[relay.Constant][48] /* ty=Tensor[(39, 3), bool] */, dtype="bool") /* ty=Tensor[(39, 3), bool] */;
    %546 = cast(%var_9446, dtype="bool") /* ty=Tensor[(351), bool] */;
    %547 = reshape(%542, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float64] */;
    %548 = reshape(%543, newshape=[672]) /* ty=Tensor[(672), int8] */;
    %549 = reshape(%544, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
    %550 = reshape(%545, newshape=[117]) /* ty=Tensor[(117), bool] */;
    %551 = reshape(%546, newshape=[3, 117]) /* ty=Tensor[(3, 117), bool] */;
    %552 = @func_4483(%547, %548, %549, %550, %551) /* ty=(Tensor[(8, 14, 6), int8], Tensor[(672), int8], Tensor[(7, 12, 13), int16], Tensor[(1092), int16], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool], Tensor[(4, 9, 11), uint8]) */;
    %553 = cast(%537, dtype="uint8") /* ty=Tensor[(14, 14, 11), uint8] */;
    %554 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(14, 14, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %555 = cast(meta[relay.Constant][45] /* ty=Tensor[(14, 14, 11), int16] */, dtype="uint8") /* ty=Tensor[(14, 14, 11), uint8] */;
    %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %557 = maximum(%540, %541) /* ty=Tensor[(14, 14, 11), int8] */;
    %558 = %552.6;
    %559 = bitwise_and(%555, %556) /* ty=Tensor[(14, 14, 11), uint8] */;
    (%557, %558, meta[relay.Constant][46] /* ty=Tensor[(396), float64] */, %var_9443, meta[relay.Constant][47] /* ty=Tensor[(1092), int16] */, meta[relay.Constant][48] /* ty=Tensor[(39, 3), bool] */, %var_9446, %559)
  };
  %560(%var_9456, %var_9457) /* ty=(Tensor[(14, 14, 11), int8], Tensor[(3, 117), bool], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(39, 3), bool], Tensor[(351), bool], Tensor[(14, 14, 11), uint8]) */
}

def @func_14375() -> (Tensor[(9, 11, 2), float64],) {
  %561 = @func_13352() /* ty=Tensor[(9, 11, 2), float64] */;
  (%561,)
}

def @func_14755(%var_14718: Tensor[(3, 9), uint32], %var_14719: Tensor[(9), int16], %var_14720: Tensor[(3, 270), int16], %var_14721: Tensor[(1092), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(3, 9), uint32], Tensor[(9), int16], Tensor[(3, 270), int16], Tensor[(1092), int16], Tensor[(5, 84), uint16]) {
  %562 = cast(%var_14718, dtype="uint32") /* ty=Tensor[(3, 9), uint32] */;
  %563 = cast(%var_14719, dtype="int16") /* ty=Tensor[(9), int16] */;
  %564 = cast(%var_14720, dtype="int16") /* ty=Tensor[(3, 270), int16] */;
  %565 = cast(%var_14721, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %566 = cast(meta[relay.Constant][49] /* ty=Tensor[(5, 84), uint16] */, dtype="uint16") /* ty=Tensor[(5, 84), uint16] */;
  %567 = reshape(%562, newshape=[3, 9]) /* ty=Tensor[(3, 9), uint32] */;
  %568 = reshape(%563, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %569 = reshape(%564, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %570 = reshape(%565, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %571 = reshape(%566, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %572 = @func_11594(%567, %568, %569, %570, %571) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(1, 9), int16], Tensor[(3, 9), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) */;
  %573 = @func_11894() /* ty=Tensor[(9, 11, 2), float64] */;
  %574 = %572.4;
  (%573, %574, %var_14718, %var_14719, %var_14720, %var_14721, meta[relay.Constant][49] /* ty=Tensor[(5, 84), uint16] */)
}

def @func_1651(%var_1649: Tensor[(1, 9, 1), int16], %var_1650: Tensor[(9, 9, 10), int16]) -> (Tensor[(9, 9, 10), float32], Tensor[(9, 14, 9), float64], Tensor[(1134), float64], Tensor[(117), bool], Tensor[(117, 3), uint32]) {
  %593 = fn (%var_1621: Tensor[(1, 9, 1), int16], %var_1622: Tensor[(9, 9, 10), int16]) -> (Tensor[(9, 9, 10), float32], Tensor[(9, 14, 9), float64], Tensor[(1134), float64], Tensor[(117), bool], Tensor[(117, 3), uint32]) {
    %575 = cast(%var_1621, dtype="int16") /* ty=Tensor[(1, 9, 1), int16] */;
    %576 = cast(%var_1622, dtype="int16") /* ty=Tensor[(9, 9, 10), int16] */;
    %577 = bitwise_or(%575, %576) /* ty=Tensor[(9, 9, 10), int16] */;
    %578 = cast(%577, dtype="float32") /* ty=Tensor[(9, 9, 10), float32] */;
    %579 = cast(meta[relay.Constant][50] /* ty=Tensor[(1134), float64] */, dtype="float64") /* ty=Tensor[(1134), float64] */;
    %580 = reshape(%579, newshape=[9, 14, 9]) /* ty=Tensor[(9, 14, 9), float64] */;
    %581 = cast(meta[relay.Constant][51] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
    %582 = cast(meta[relay.Constant][52] /* ty=Tensor[(117, 3), bool] */, dtype="bool") /* ty=Tensor[(117, 3), bool] */;
    %583 = reshape(%581, newshape=[1, 9, 13]) /* ty=Tensor[(1, 9, 13), bool] */;
    %584 = reshape(%582, newshape=[3, 9, 13]) /* ty=Tensor[(3, 9, 13), bool] */;
    %585 = @func_92(%583, %584) /* ty=Tensor[(3, 9, 13), bool] */;
    %586 = cast(%585, dtype="uint32") /* ty=Tensor[(3, 9, 13), uint32] */;
    %587 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(117, 3), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %588 = cast(meta[relay.Constant][52] /* ty=Tensor[(117, 3), bool] */, dtype="uint32") /* ty=Tensor[(117, 3), uint32] */;
    %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %590 = cos(%578) /* ty=Tensor[(9, 9, 10), float32] */;
    %591 = @func_742(%580) /* ty=Tensor[(9, 14, 9), float64] */;
    %592 = subtract(%588, %589) /* ty=Tensor[(117, 3), uint32] */;
    (%590, %591, meta[relay.Constant][50] /* ty=Tensor[(1134), float64] */, meta[relay.Constant][51] /* ty=Tensor[(117), bool] */, %592)
  };
  %593(%var_1649, %var_1650) /* ty=(Tensor[(9, 9, 10), float32], Tensor[(9, 14, 9), float64], Tensor[(1134), float64], Tensor[(117), bool], Tensor[(117, 3), uint32]) */
}

def @func_11542() -> (Tensor[(9, 11, 2), float64],) {
  %594 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  (%594,)
}

def @func_10661(%var_10656: Tensor[(150, 2), float32], %var_10657: Tensor[(9), int16], %var_10658: Tensor[(1092), int16], %var_10659: Tensor[(351), bool], %var_10660: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 10, 15), float64], Tensor[(9), int16], Tensor[(9, 90), int16], Tensor[(150, 2), float64], Tensor[(3, 117), bool], Tensor[(6, 66), float64], Tensor[(56, 12), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(10, 6, 7), float64], Tensor[(420), uint16]) {
  @func_10654(%var_10656, %var_10657, %var_10658, %var_10659, %var_10660) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(2, 10, 15), float64], Tensor[(9), int16], Tensor[(9, 90), int16], Tensor[(150, 2), float64], Tensor[(3, 117), bool], Tensor[(6, 66), float64], Tensor[(56, 12), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(10, 6, 7), float64], Tensor[(420), uint16]) */
}

def @func_13382() -> Tensor[(2, 11, 6), float32] {
  %596 = fn () -> Tensor[(2, 11, 6), float32] {
    %595 = @func_13225() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(132), float32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
    %595.2
  };
  %596() /* ty=Tensor[(2, 11, 6), float32] */
}

def @func_13468() -> (Tensor[(9, 11, 2), float64],) {
  @func_13466() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_8750(%var_8744: Tensor[(14, 7, 16), float32], %var_8745: Tensor[(14, 7, 16), float32], %var_8746: Tensor[(27), uint32], %var_8747: Tensor[(1092), int16], %var_8748: Tensor[(616, 2), int8], %var_8749: Tensor[(420), uint16]) -> (Tensor[(14, 7, 16), float32], Tensor[(1, 9), int16], Tensor[(27), uint32], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(616, 2), int8], Tensor[(7, 12, 13), int16], Tensor[(21), float32], Tensor[(420), uint16], Tensor[(2, 312), float64]) {
  %632 = fn (%var_8702: Tensor[(14, 7, 16), float32], %var_8703: Tensor[(14, 7, 16), float32], %var_8712: Tensor[(27), uint32], %var_8714: Tensor[(1092), int16], %var_8715: Tensor[(616, 2), int8], %var_8725: Tensor[(420), uint16]) -> (Tensor[(14, 7, 16), float32], Tensor[(1, 9), int16], Tensor[(27), uint32], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(616, 2), int8], Tensor[(7, 12, 13), int16], Tensor[(21), float32], Tensor[(420), uint16], Tensor[(2, 312), float64]) {
    %597 = cast(%var_8703, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
    %598 = shape_of(%var_8702, dtype="int32") /* ty=Tensor[(3), int32] */;
    %599 = cast(%var_8702, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
    %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %601 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 312), float32] */, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
    %602 = cast(%var_8712, dtype="uint32") /* ty=Tensor[(27), uint32] */;
    %603 = cast(meta[relay.Constant][54] /* ty=Tensor[(810), int16] */, dtype="int16") /* ty=Tensor[(810), int16] */;
    %604 = cast(%var_8714, dtype="int16") /* ty=Tensor[(1092), int16] */;
    %605 = cast(%var_8715, dtype="int8") /* ty=Tensor[(616, 2), int8] */;
    %606 = reshape(%601, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
    %607 = reshape(%602, newshape=[1, 27]) /* ty=Tensor[(1, 27), uint32] */;
    %608 = reshape(%603, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
    %609 = reshape(%604, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
    %610 = reshape(%605, newshape=[1232]) /* ty=Tensor[(1232), int8] */;
    %611 = @func_8331(%606, %607, %608, %609, %610) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(1, 9), int16], Tensor[(1, 27), uint32], Tensor[(9), int16], Tensor[(81, 10), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(396), float64], Tensor[(168, 4), int8]) */;
    %612 = cast(%var_8712, dtype="uint32") /* ty=Tensor[(27), uint32] */;
    %613 = cast(%var_8712, dtype="uint32") /* ty=Tensor[(27), uint32] */;
    %614 = %611.1;
    %615 = cast(%614, dtype="int16") /* ty=Tensor[(1, 9), int16] */;
    %616 = cast(meta[relay.Constant][54] /* ty=Tensor[(810), int16] */, dtype="int16") /* ty=Tensor[(810), int16] */;
    %617 = cast(meta[relay.Constant][55] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
    %618 = cast(%var_8714, dtype="int16") /* ty=Tensor[(1092), int16] */;
    %619 = cast(%var_8725, dtype="uint16") /* ty=Tensor[(420), uint16] */;
    %620 = reshape(%612, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
    %621 = reshape(%613, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
    %622 = reshape(%615, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
    %623 = reshape(%616, newshape=[810]) /* ty=Tensor[(810), int16] */;
    %624 = reshape(%617, newshape=[7, 3]) /* ty=Tensor[(7, 3), float32] */;
    %625 = reshape(%618, newshape=[182, 6]) /* ty=Tensor[(182, 6), int16] */;
    %626 = reshape(%619, newshape=[420]) /* ty=Tensor[(420), uint16] */;
    %627 = @func_5594(%620, %621, %622, %623, %624, %625, %626) /* ty=(Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) */;
    %628 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 312), float32] */, dtype="float64") /* ty=Tensor[(2, 312), float64] */;
    %629 = divide(%599, %600) /* ty=Tensor[(14, 7, 16), float32] */;
    %630 = %627.7;
    %631 = cosh(%628) /* ty=Tensor[(2, 312), float64] */;
    (%629, %614, %var_8712, meta[relay.Constant][54] /* ty=Tensor[(810), int16] */, %var_8714, %var_8715, %630, meta[relay.Constant][55] /* ty=Tensor[(21), float32] */, %var_8725, %631)
  };
  %632(%var_8744, %var_8745, %var_8746, %var_8747, %var_8748, %var_8749) /* ty=(Tensor[(14, 7, 16), float32], Tensor[(1, 9), int16], Tensor[(27), uint32], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(616, 2), int8], Tensor[(7, 12, 13), int16], Tensor[(21), float32], Tensor[(420), uint16], Tensor[(2, 312), float64]) */
}

def @func_10162(%var_10138: Tensor[(9, 11, 2), float64]) -> (Tensor[(9, 11, 2), float64], Tensor[(198), uint32]) {
  %633 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  %634 = cast(%var_10138, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %635 = shape_of(%633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(%633, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %638 = mod(%636, %637) /* ty=Tensor[(9, 11, 2), float64] */;
  %639 = cast(%638, dtype="uint32") /* ty=Tensor[(9, 11, 2), uint32] */;
  %640 = reshape(%639, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %641 = @func_9606(%640) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(3, 11, 6), uint32], Tensor[(198), uint32]) */;
  %642 = %641.2;
  (%638, %642)
}

def @func_14258() -> Tensor[(9, 11, 2), float64] {
  %643 = @func_13225() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(132), float32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
  %643.4
}

def @func_15382() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float32]) {
  @func_15380() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float32]) */
}

def @func_13617(%var_13615: Tensor[(56), float64], %var_13616: Tensor[(728), float64]) -> (Tensor[(13, 4, 14), float64], Tensor[(56), float64], Tensor[(5, 16, 728), uint32], Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float64]) {
  @func_13613(%var_13615, %var_13616) /* ty=(Tensor[(13, 4, 14), float64], Tensor[(56), float64], Tensor[(5, 16, 728), uint32], Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float64]) */
}

def @func_13821(%var_13810: int8, %var_13811: Tensor[(78), int8]) -> (Tensor[(9, 11, 2), float64], Tensor[(6, 13, 1), bool], int8, Tensor[(78), int8], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %644 = cast(%var_13810, dtype="int8") /* ty=int8 */;
  %645 = cast(%var_13811, dtype="int8") /* ty=Tensor[(78), int8] */;
  %646 = reshape(%644, newshape=[]) /* ty=int8 */;
  %647 = reshape(%645, newshape=[6, 13, 1]) /* ty=Tensor[(6, 13, 1), int8] */;
  %648 = @func_7602(%646, %647) /* ty=(Tensor[(6, 13, 1), bool], Tensor[(6, 13, 1), bool], Tensor[(3, 4, 15), float32], Tensor[(6, 13, 180), uint16]) */;
  %649 = @func_13466() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %650 = @func_11183() /* ty=Tensor[(9, 11, 2), float64] */;
  %651 = %648.1;
  %652 = @func_12045() /* ty=Tensor[(9, 11, 2), float64] */;
  %653 = %649.0;
  %654 = @func_12473() /* ty=Tensor[(9, 11, 2), float64] */;
  (%650, %651, %var_13810, %var_13811, %652, %653, %654)
}

def @func_10307() -> (Tensor[(9, 11, 2), float64],) {
  @func_10305() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_14697() -> Tensor[(9, 11, 2), float64] {
  @func_14695() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_13871(%var_13869: Tensor[(1200), uint16], %var_13870: Tensor[(7, 3), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(1200), uint16], Tensor[(7, 3), float32]) {
  %663 = fn (%var_13841: Tensor[(1200), uint16], %var_13842: Tensor[(7, 3), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(1200), uint16], Tensor[(7, 3), float32]) {
    %655 = @func_12376() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
    %656 = cast(%var_13841, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
    %657 = cast(%var_13842, dtype="float32") /* ty=Tensor[(7, 3), float32] */;
    %658 = reshape(%656, newshape=[1200]) /* ty=Tensor[(1200), uint16] */;
    %659 = reshape(%657, newshape=[21]) /* ty=Tensor[(21), float32] */;
    %660 = @func_12107(%658, %659) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(1200), uint16], Tensor[(5, 16, ?), bool], Tensor[(5, 16, ?), float32], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) */;
    %661 = %655.0;
    %662 = %660.0;
    (%661, %662, %var_13841, %var_13842)
  };
  %663(%var_13869, %var_13870) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(1200), uint16], Tensor[(7, 3), float32]) */
}

def @func_12405() -> (Tensor[(9, 11, 2), float64],) {
  %664 = @func_11183() /* ty=Tensor[(9, 11, 2), float64] */;
  (%664,)
}

def @func_10905(%var_10901: Tensor[(27), uint32], %var_10902: Tensor[(810), int16], %var_10903: Tensor[(1092), int16], %var_10904: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 9, 10), float32], Tensor[(27), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(21, 1), float32], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(1232), int8], Tensor[(104), float64], Tensor[(1232), int8], Tensor[(168, 4), int8], Tensor[(396), float64]) {
  @func_10899(%var_10901, %var_10902, %var_10903, %var_10904) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 9, 10), float32], Tensor[(27), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(21, 1), float32], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(1232), int8], Tensor[(104), float64], Tensor[(1232), int8], Tensor[(168, 4), int8], Tensor[(396), float64]) */
}

def @func_13057(%var_13055: Tensor[(22), uint32], %var_13056: Tensor[(180), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(22), uint32], Tensor[(22), uint32], Tensor[(352), uint32], Tensor[(180), float32]) {
  %677 = fn (%var_13044: Tensor[(22), uint32], %var_13046: Tensor[(180), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(22), uint32], Tensor[(22), uint32], Tensor[(352), uint32], Tensor[(180), float32]) {
    %665 = cast(%var_13044, dtype="uint32") /* ty=Tensor[(22), uint32] */;
    %666 = cast(meta[relay.Constant][56] /* ty=Tensor[(352), uint32] */, dtype="uint32") /* ty=Tensor[(352), uint32] */;
    %667 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
    %668 = cast(%667, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
    %669 = cast(%var_13046, dtype="float32") /* ty=Tensor[(180), float32] */;
    %670 = reshape(%665, newshape=[22]) /* ty=Tensor[(22), uint32] */;
    %671 = reshape(%666, newshape=[352]) /* ty=Tensor[(352), uint32] */;
    %672 = reshape(%668, newshape=[9, 11, 2]) /* ty=Tensor[(9, 11, 2), float64] */;
    %673 = reshape(%669, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %674 = @func_10047(%670, %671, %672, %673) /* ty=(Tensor[(2, 16, 11), float64], uint32, Tensor[(22), uint32], Tensor[(352), uint32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), bool], Tensor[(3, 4, 15), float32], Tensor[(180), float32]) */;
    %675 = @func_10777() /* ty=Tensor[(9, 11, 2), float64] */;
    %676 = %674.2;
    (%675, %667, %676, %var_13044, meta[relay.Constant][56] /* ty=Tensor[(352), uint32] */, %var_13046)
  };
  %677(%var_13055, %var_13056) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(22), uint32], Tensor[(22), uint32], Tensor[(352), uint32], Tensor[(180), float32]) */
}

def @func_12008(%var_12007: Tensor[(132), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 1), int16], Tensor[(132), float32], Tensor[(21), float32], Tensor[(420), uint16]) {
  %688 = fn (%var_11964: Tensor[(132), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 1), int16], Tensor[(132), float32], Tensor[(21), float32], Tensor[(420), uint16]) {
    %678 = @func_10305() /* ty=(Tensor[(9, 11, 2), float64],) */;
    %679 = cast(%var_11964, dtype="float32") /* ty=Tensor[(132), float32] */;
    %680 = cast(meta[relay.Constant][57] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
    %681 = cast(meta[relay.Constant][58] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
    %682 = reshape(%679, newshape=[1, 132]) /* ty=Tensor[(1, 132), float32] */;
    %683 = reshape(%680, newshape=[21]) /* ty=Tensor[(21), float32] */;
    %684 = reshape(%681, newshape=[420]) /* ty=Tensor[(420), uint16] */;
    %685 = @func_11117(%682, %683, %684) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(1, 132), float32], Tensor[(300, 1), float32], Tensor[(27), uint32], Tensor[(9, 1), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) */;
    %686 = %678.0;
    %687 = %685.5;
    (%686, %687, %var_11964, meta[relay.Constant][57] /* ty=Tensor[(21), float32] */, meta[relay.Constant][58] /* ty=Tensor[(420), uint16] */)
  };
  %688(%var_12007) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 1), int16], Tensor[(132), float32], Tensor[(21), float32], Tensor[(420), uint16]) */
}

def @func_15070() -> Tensor[(9, 11, 2), float64] {
  @func_12045() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_10654(%var_10608: Tensor[(150, 2), float32], %var_10609: Tensor[(9), int16], %var_10631: Tensor[(1092), int16], %var_10633: Tensor[(351), bool], %var_10638: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 10, 15), float64], Tensor[(9), int16], Tensor[(9, 90), int16], Tensor[(150, 2), float64], Tensor[(3, 117), bool], Tensor[(6, 66), float64], Tensor[(56, 12), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(10, 6, 7), float64], Tensor[(420), uint16]) {
  %689 = cast(%var_10608, dtype="float32") /* ty=Tensor[(150, 2), float32] */;
  %690 = cast(%var_10609, dtype="int16") /* ty=Tensor[(9), int16] */;
  %691 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 90), int16] */, dtype="int16") /* ty=Tensor[(9, 90), int16] */;
  %692 = reshape(%689, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), float32] */;
  %693 = reshape(%690, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %694 = reshape(%691, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %695 = @func_3922(%692, %693, %694) /* ty=(Tensor[(2, 10, 15), float32], Tensor[(2, 10, 15), float64], Tensor[(9, 9, 10), float32], Tensor[(9), int16], Tensor[(810), int16]) */;
  %696 = cast(%var_10608, dtype="float64") /* ty=Tensor[(150, 2), float64] */;
  %697 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 66), float64] */, dtype="float64") /* ty=Tensor[(6, 66), float64] */;
  %698 = cast(meta[relay.Constant][61] /* ty=Tensor[(56, 12), int8] */, dtype="int8") /* ty=Tensor[(56, 12), int8] */;
  %699 = cast(%var_10631, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %700 = cast(meta[relay.Constant][62] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %701 = cast(%var_10633, dtype="bool") /* ty=Tensor[(351), bool] */;
  %702 = reshape(%697, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float64] */;
  %703 = reshape(%698, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %704 = reshape(%699, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %705 = reshape(%700, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %706 = reshape(%701, newshape=[3, 117]) /* ty=Tensor[(3, 117), bool] */;
  %707 = @func_4483(%702, %703, %704, %705, %706) /* ty=(Tensor[(8, 14, 6), int8], Tensor[(672), int8], Tensor[(7, 12, 13), int16], Tensor[(1092), int16], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool], Tensor[(4, 9, 11), uint8]) */;
  %708 = cast(%var_10638, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %709 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 90), int16] */, dtype="int16") /* ty=Tensor[(9, 90), int16] */;
  %710 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 90), int16] */, dtype="int16") /* ty=Tensor[(9, 90), int16] */;
  %711 = reshape(%708, newshape=[10, 6, 7]) /* ty=Tensor[(10, 6, 7), uint16] */;
  %712 = reshape(%709, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %713 = reshape(%710, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
  %714 = @func_2448(%711, %712, %713) /* ty=(Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) */;
  %715 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  %716 = %695.1;
  %717 = rsqrt(%696) /* ty=Tensor[(150, 2), float64] */;
  %718 = %707.6;
  %719 = %714.3;
  (%715, %716, %var_10609, meta[relay.Constant][59] /* ty=Tensor[(9, 90), int16] */, %717, %718, meta[relay.Constant][60] /* ty=Tensor[(6, 66), float64] */, meta[relay.Constant][61] /* ty=Tensor[(56, 12), int8] */, %var_10631, meta[relay.Constant][62] /* ty=Tensor[(117), bool] */, %var_10633, %719, %var_10638)
}

def @func_8338(%var_8333: Tensor[(13, 3, 16), float32], %var_8334: Tensor[(1, 27), uint32], %var_8335: Tensor[(81, 10), int16], %var_8336: Tensor[(1092), int16], %var_8337: Tensor[(1232), int8]) -> (Tensor[(13, 3, 16), float32], Tensor[(1, 9), int16], Tensor[(1, 27), uint32], Tensor[(9), int16], Tensor[(81, 10), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(396), float64], Tensor[(168, 4), int8]) {
  @func_8331(%var_8333, %var_8334, %var_8335, %var_8336, %var_8337) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(1, 9), int16], Tensor[(1, 27), uint32], Tensor[(9), int16], Tensor[(81, 10), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(396), float64], Tensor[(168, 4), int8]) */
}

def @func_14666() -> (Tensor[(9, 11, 2), float64],) {
  %720 = @func_13078() /* ty=Tensor[(9, 11, 2), float64] */;
  (%720,)
}

def @func_5868(%var_5858: Tensor[(5, 16, 1), float32]) -> Tensor[(5, 16, ?), bool] {
  %721 = cast(%var_5858, dtype="float32") /* ty=Tensor[(5, 16, 1), float32] */;
  %722 = tan(%721) /* ty=Tensor[(5, 16, 1), float32] */;
  %723 = cast(%var_5858, dtype="bool") /* ty=Tensor[(5, 16, 1), bool] */;
  %724 = shape_of(%722, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(%722, dtype="bool") /* ty=Tensor[(5, 16, 1), bool] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%725, %726) /* ty=Tensor[(5, 16, ?), bool] */
}

def @func_14418() -> (Tensor[(5, 16, ?), float32],) {
  @func_14416() /* ty=(Tensor[(5, 16, ?), float32],) */
}

def @func_15242(%var_15224: Tensor[(14, 6, 8), float64], %var_15225: Tensor[(14, 6, 8), float64]) -> (Tensor[(14, 6, 8), float64],) {
  %727 = cast(%var_15225, dtype="float64") /* ty=Tensor[(14, 6, 8), float64] */;
  %728 = shape_of(%var_15224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%var_15224, dtype="float64") /* ty=Tensor[(14, 6, 8), float64] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %731 = power(%729, %730) /* ty=Tensor[(14, 6, 8), float64] */;
  (%731,)
}

def @func_5602(%var_5595: Tensor[(3, 3, 3), uint32], %var_5596: Tensor[(3, 3, 3), uint32], %var_5597: Tensor[(1, 9), int16], %var_5598: Tensor[(810), int16], %var_5599: Tensor[(7, 3), float32], %var_5600: Tensor[(182, 6), int16], %var_5601: Tensor[(420), uint16]) -> (Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) {
  %765 = fn (%var_5520: Tensor[(3, 3, 3), uint32], %var_5521: Tensor[(3, 3, 3), uint32], %var_5556: Tensor[(1, 9), int16], %var_5557: Tensor[(810), int16], %var_5568: Tensor[(7, 3), float32], %var_5585: Tensor[(182, 6), int16], %var_5589: Tensor[(420), uint16]) -> (Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) {
    %732 = cast(%var_5521, dtype="bool") /* ty=Tensor[(3, 3, 3), bool] */;
    %733 = shape_of(%var_5520, dtype="int32") /* ty=Tensor[(3), int32] */;
    %734 = cast(%var_5520, dtype="bool") /* ty=Tensor[(3, 3, 3), bool] */;
    %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %736 = equal(%734, %735) /* ty=Tensor[(3, 3, 3), bool] */;
    %737 = cast(%var_5520, dtype="bool") /* ty=Tensor[(3, 3, 3), bool] */;
    %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
    %739 = cast(%736, dtype="bool") /* ty=Tensor[(3, 3, 3), bool] */;
    %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %741 = cast(meta[relay.Constant][63] /* ty=Tensor[(300, 1), float32] */, dtype="float32") /* ty=Tensor[(300, 1), float32] */;
    %742 = cast(%var_5556, dtype="int16") /* ty=Tensor[(1, 9), int16] */;
    %743 = cast(%var_5557, dtype="int16") /* ty=Tensor[(810), int16] */;
    %744 = reshape(%741, newshape=[2, 10, 15]) /* ty=Tensor[(2, 10, 15), float32] */;
    %745 = reshape(%742, newshape=[9]) /* ty=Tensor[(9), int16] */;
    %746 = reshape(%743, newshape=[810]) /* ty=Tensor[(810), int16] */;
    %747 = @func_3922(%744, %745, %746) /* ty=(Tensor[(2, 10, 15), float32], Tensor[(2, 10, 15), float64], Tensor[(9, 9, 10), float32], Tensor[(9), int16], Tensor[(810), int16]) */;
    %748 = cast(%var_5568, dtype="float32") /* ty=Tensor[(7, 3), float32] */;
    %749 = reshape(%748, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
    %750 = cast(%var_5585, dtype="int16") /* ty=Tensor[(182, 6), int16] */;
    %751 = reshape(%750, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int16] */;
    %752 = @func_2252(%751) /* ty=(Tensor[(7, 12, 13), int16],) */;
    %753 = cast(%var_5589, dtype="uint16") /* ty=Tensor[(420), uint16] */;
    %754 = %747.2;
    %755 = cast(%754, dtype="int16") /* ty=Tensor[(9, 9, 10), int16] */;
    %756 = cast(%754, dtype="int16") /* ty=Tensor[(9, 9, 10), int16] */;
    %757 = reshape(%753, newshape=[10, 6, 7]) /* ty=Tensor[(10, 6, 7), uint16] */;
    %758 = reshape(%755, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
    %759 = reshape(%756, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
    %760 = @func_2448(%757, %758, %759) /* ty=(Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) */;
    %761 = greater_equal(%739, %740) /* ty=Tensor[(3, 3, 3), bool] */;
    %762 = @func_3842(%749) /* ty=Tensor[(3, 7, 1), float64] */;
    %763 = %752.0;
    %764 = %760.4;
    (%761, %754, meta[relay.Constant][63] /* ty=Tensor[(300, 1), float32] */, %var_5556, %var_5557, %762, %var_5568, %763, %var_5585, %764, %var_5589)
  };
  %765(%var_5595, %var_5596, %var_5597, %var_5598, %var_5599, %var_5600, %var_5601) /* ty=(Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) */
}

def @func_12188() -> Tensor[(9, 11, 2), float64] {
  @func_12186() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_3922(%var_3906: Tensor[(2, 10, 15), float32], %var_3915: Tensor[(9), int16], %var_3916: Tensor[(810), int16]) -> (Tensor[(2, 10, 15), float32], Tensor[(2, 10, 15), float64], Tensor[(9, 9, 10), float32], Tensor[(9), int16], Tensor[(810), int16]) {
  %766 = cast(%var_3906, dtype="float32") /* ty=Tensor[(2, 10, 15), float32] */;
  %767 = cast(%var_3906, dtype="float64") /* ty=Tensor[(2, 10, 15), float64] */;
  %768 = cast(%var_3915, dtype="int16") /* ty=Tensor[(9), int16] */;
  %769 = cast(%var_3916, dtype="int16") /* ty=Tensor[(810), int16] */;
  %770 = reshape(%768, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %771 = reshape(%769, newshape=[9, 9, 10]) /* ty=Tensor[(9, 9, 10), int16] */;
  %772 = @func_1648(%770, %771) /* ty=(Tensor[(9, 9, 10), float32], Tensor[(9, 14, 9), float64], Tensor[(1134), float64], Tensor[(117), bool], Tensor[(117, 3), uint32]) */;
  %773 = cosh(%766) /* ty=Tensor[(2, 10, 15), float32] */;
  %774 = sqrt(%767) /* ty=Tensor[(2, 10, 15), float64] */;
  %775 = %772.0;
  (%773, %774, %775, %var_3915, %var_3916)
}

def @func_10778() -> Tensor[(9, 11, 2), float64] {
  %776 = fn () -> Tensor[(9, 11, 2), float64] {
    @func_9913() /* ty=Tensor[(9, 11, 2), float64] */
  };
  %776() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_5261(%var_5255: Tensor[(8, 14, 11), int8], %var_5256: Tensor[(21, 1), float32], %var_5257: Tensor[(396), float64], %var_5258: Tensor[(672), int8], %var_5259: Tensor[(1092), int16], %var_5260: Tensor[(810), int16]) -> (Tensor[(8, 14, 11), int8], Tensor[(3, 7, 1), float64], Tensor[(21, 1), float32], Tensor[(8, 14, 6), int8], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(810), int16]) {
  %803 = fn (%var_5212: Tensor[(8, 14, 11), int8], %var_5217: Tensor[(21, 1), float32], %var_5220: Tensor[(396), float64], %var_5221: Tensor[(672), int8], %var_5222: Tensor[(1092), int16], %var_5233: Tensor[(810), int16]) -> (Tensor[(8, 14, 11), int8], Tensor[(3, 7, 1), float64], Tensor[(21, 1), float32], Tensor[(8, 14, 6), int8], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(810), int16]) {
    %777 = cast(meta[relay.Constant][64] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %778 = cast(%var_5212, dtype="int8") /* ty=Tensor[(8, 14, 11), int8] */;
    %779 = cast(%var_5217, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
    %780 = reshape(%779, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
    %781 = cast(%var_5220, dtype="float64") /* ty=Tensor[(396), float64] */;
    %782 = cast(%var_5221, dtype="int8") /* ty=Tensor[(672), int8] */;
    %783 = cast(%var_5222, dtype="int16") /* ty=Tensor[(1092), int16] */;
    %784 = cast(meta[relay.Constant][65] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
    %785 = cast(meta[relay.Constant][66] /* ty=Tensor[(351), bool] */, dtype="bool") /* ty=Tensor[(351), bool] */;
    %786 = reshape(%781, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float64] */;
    %787 = reshape(%782, newshape=[672]) /* ty=Tensor[(672), int8] */;
    %788 = reshape(%783, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
    %789 = reshape(%784, newshape=[117]) /* ty=Tensor[(117), bool] */;
    %790 = reshape(%785, newshape=[3, 117]) /* ty=Tensor[(3, 117), bool] */;
    %791 = @func_4483(%786, %787, %788, %789, %790) /* ty=(Tensor[(8, 14, 6), int8], Tensor[(672), int8], Tensor[(7, 12, 13), int16], Tensor[(1092), int16], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool], Tensor[(4, 9, 11), uint8]) */;
    %792 = cast(meta[relay.Constant][67] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
    %793 = cast(%var_5233, dtype="int16") /* ty=Tensor[(810), int16] */;
    %794 = cast(%var_5233, dtype="int16") /* ty=Tensor[(810), int16] */;
    %795 = reshape(%792, newshape=[10, 6, 7]) /* ty=Tensor[(10, 6, 7), uint16] */;
    %796 = reshape(%793, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
    %797 = reshape(%794, newshape=[81, 10]) /* ty=Tensor[(81, 10), int16] */;
    %798 = @func_2448(%795, %796, %797) /* ty=(Tensor[(1092), int16], Tensor[(9), int16], Tensor[(117, 3), uint16], Tensor[(10, 6, 7), float64], Tensor[(81, 10), bool]) */;
    %799 = maximum(%777, %778) /* ty=Tensor[(8, 14, 11), int8] */;
    %800 = @func_3842(%780) /* ty=Tensor[(3, 7, 1), float64] */;
    %801 = %791.0;
    %802 = %798.2;
    (%799, %800, %var_5217, %801, %var_5220, %var_5221, %var_5222, meta[relay.Constant][65] /* ty=Tensor[(117), bool] */, meta[relay.Constant][66] /* ty=Tensor[(351), bool] */, %802, meta[relay.Constant][67] /* ty=Tensor[(420), uint16] */, %var_5233)
  };
  %803(%var_5255, %var_5256, %var_5257, %var_5258, %var_5259, %var_5260) /* ty=(Tensor[(8, 14, 11), int8], Tensor[(3, 7, 1), float64], Tensor[(21, 1), float32], Tensor[(8, 14, 6), int8], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(810), int16]) */
}

def @func_4737(%var_4735: Tensor[(10, 14, 14), int64]) -> Tensor[(10, 14, 14), int64] {
  @func_4734(%var_4735) /* ty=Tensor[(10, 14, 14), int64] */
}

def @func_2252(%var_2244: Tensor[(7, 12, 13), int16]) -> (Tensor[(7, 12, 13), int16],) {
  %804 = cast(meta[relay.Constant][68] /* ty=Tensor[(7, 12, 13), int16] */, dtype="int16") /* ty=Tensor[(7, 12, 13), int16] */;
  %805 = shape_of(%var_2244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%var_2244, dtype="int16") /* ty=Tensor[(7, 12, 13), int16] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %808 = bitwise_or(%806, %807) /* ty=Tensor[(7, 12, 13), int16] */;
  (%808,)
}

def @func_11084(%var_11083: Tensor[(672), int8]) -> (Tensor[(198), float64], Tensor[(2, 11, 6), float32], Tensor[(33, 4), float32], Tensor[(9, 11, 2), float64], Tensor[(14, 14, 11), int8], Tensor[(672), int8], Tensor[(351), bool]) {
  %823 = fn (%var_11071: Tensor[(672), int8]) -> (Tensor[(198), float64], Tensor[(2, 11, 6), float32], Tensor[(33, 4), float32], Tensor[(9, 11, 2), float64], Tensor[(14, 14, 11), int8], Tensor[(672), int8], Tensor[(351), bool]) {
    %809 = @func_10563() /* ty=(Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) */;
    %810 = cast(meta[relay.Constant][69] /* ty=Tensor[(33, 4), float32] */, dtype="float32") /* ty=Tensor[(33, 4), float32] */;
    %811 = reshape(%810, newshape=[2, 11, 6]) /* ty=Tensor[(2, 11, 6), float32] */;
    %812 = @func_8898(%811) /* ty=(Tensor[(2, 11, 6), float32],) */;
    %813 = @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */;
    %814 = cast(%var_11071, dtype="int8") /* ty=Tensor[(672), int8] */;
    %815 = cast(meta[relay.Constant][70] /* ty=Tensor[(351), bool] */, dtype="bool") /* ty=Tensor[(351), bool] */;
    %816 = reshape(%814, newshape=[672]) /* ty=Tensor[(672), int8] */;
    %817 = reshape(%815, newshape=[351]) /* ty=Tensor[(351), bool] */;
    %818 = @func_9455(%816, %817) /* ty=(Tensor[(14, 14, 11), int8], Tensor[(3, 117), bool], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(39, 3), bool], Tensor[(351), bool], Tensor[(14, 14, 11), uint8]) */;
    %819 = %809.2;
    %820 = %812.0;
    %821 = %813.0;
    %822 = %818.0;
    (%819, %820, meta[relay.Constant][69] /* ty=Tensor[(33, 4), float32] */, %821, %822, %var_11071, meta[relay.Constant][70] /* ty=Tensor[(351), bool] */)
  };
  %823(%var_11083) /* ty=(Tensor[(198), float64], Tensor[(2, 11, 6), float32], Tensor[(33, 4), float32], Tensor[(9, 11, 2), float64], Tensor[(14, 14, 11), int8], Tensor[(672), int8], Tensor[(351), bool]) */
}

def @func_12107(%var_12062: Tensor[(1200), uint16], %var_12096: Tensor[(21), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(1200), uint16], Tensor[(5, 16, ?), bool], Tensor[(5, 16, ?), float32], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) {
  %824 = cast(%var_12062, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %825 = reshape(%824, newshape=[1200]) /* ty=Tensor[(1200), uint16] */;
  %826 = @func_11177(%825) /* ty=(Tensor[(5, 16, ?), float32], Tensor[(5, 15, 16), float64], Tensor[(1200), uint16]) */;
  %827 = %826.0;
  %828 = cast(%827, dtype="float32") /* ty=Tensor[(5, 16, ?), float32] */;
  %829 = reshape(%828, newshape=[5, 16, 1]) /* ty=Tensor[(5, 16, 1), float32] */;
  %830 = cast(%827, dtype="float32") /* ty=Tensor[(5, 16, ?), float32] */;
  %831 = cast(%var_12096, dtype="float32") /* ty=Tensor[(21), float32] */;
  %832 = reshape(%831, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %833 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  %834 = @func_5868(%829) /* ty=Tensor[(5, 16, ?), bool] */;
  %835 = atan(%830) /* ty=Tensor[(5, 16, ?), float32] */;
  %836 = @func_3842(%832) /* ty=Tensor[(3, 7, 1), float64] */;
  (%833, %var_12062, %834, %835, %836, %var_12096)
}

def @func_14987(%var_14984: Tensor[(1200), uint16], %var_14985: Tensor[(1568), float32], %var_14986: Tensor[(1232), int8]) -> (Tensor[(9, 11, 2), float64], Tensor[(117), bool], Tensor[(1200), uint16], Tensor[(1, 9), int16], Tensor[(1568), float32], Tensor[(27), uint32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(420), uint16]) {
  @func_14982(%var_14984, %var_14985, %var_14986) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(117), bool], Tensor[(1200), uint16], Tensor[(1, 9), int16], Tensor[(1568), float32], Tensor[(27), uint32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(420), uint16]) */
}

def @func_15049(%var_15046: Tensor[(352), uint32], %var_15047: Tensor[(132, 1), float32], %var_15048: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], uint32, Tensor[(11, 2), uint32], Tensor[(352), bool], Tensor[(810), int16], Tensor[(132, 1), float32], Tensor[(21), float32], Tensor[(420), uint16]) {
  %861 = fn (%var_15001: Tensor[(352), uint32], %var_15038: Tensor[(132, 1), float32], %var_15040: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], uint32, Tensor[(11, 2), uint32], Tensor[(352), bool], Tensor[(810), int16], Tensor[(132, 1), float32], Tensor[(21), float32], Tensor[(420), uint16]) {
    %837 = @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */;
    %838 = cast(meta[relay.Constant][71] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %839 = cast(meta[relay.Constant][72] /* ty=Tensor[(11, 2), uint32] */, dtype="uint32") /* ty=Tensor[(11, 2), uint32] */;
    %840 = cast(%var_15001, dtype="uint32") /* ty=Tensor[(352), uint32] */;
    %841 = reshape(%838, newshape=[]) /* ty=uint32 */;
    %842 = reshape(%839, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), uint32] */;
    %843 = reshape(%840, newshape=[2, 16, 11]) /* ty=Tensor[(2, 16, 11), uint32] */;
    %844 = @func_8042(%841, %842, %843) /* ty=(Tensor[(2, 16, 11), float64],) */;
    %845 = %844.0;
    %846 = cast(%845, dtype="bool") /* ty=Tensor[(2, 16, 11), bool] */;
    %847 = shape_of(%var_15001, dtype="int32") /* ty=Tensor[(1), int32] */;
    %848 = cast(%var_15001, dtype="bool") /* ty=Tensor[(352), bool] */;
    %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?), bool] */;
    %850 = cast(%var_15038, dtype="float32") /* ty=Tensor[(132, 1), float32] */;
    %851 = cast(meta[relay.Constant][73] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
    %852 = cast(%var_15040, dtype="uint16") /* ty=Tensor[(420), uint16] */;
    %853 = reshape(%850, newshape=[1, 132]) /* ty=Tensor[(1, 132), float32] */;
    %854 = reshape(%851, newshape=[21]) /* ty=Tensor[(21), float32] */;
    %855 = reshape(%852, newshape=[420]) /* ty=Tensor[(420), uint16] */;
    %856 = @func_11117(%853, %854, %855) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(1, 132), float32], Tensor[(300, 1), float32], Tensor[(27), uint32], Tensor[(9, 1), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) */;
    %857 = %837.0;
    %858 = @func_13078() /* ty=Tensor[(9, 11, 2), float64] */;
    %859 = less(%848, %849) /* ty=Tensor[(352), bool] */;
    %860 = %856.6;
    (%857, %858, meta[relay.Constant][71] /* ty=uint32 */, meta[relay.Constant][72] /* ty=Tensor[(11, 2), uint32] */, %859, %860, %var_15038, meta[relay.Constant][73] /* ty=Tensor[(21), float32] */, %var_15040)
  };
  %861(%var_15046, %var_15047, %var_15048) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], uint32, Tensor[(11, 2), uint32], Tensor[(352), bool], Tensor[(810), int16], Tensor[(132, 1), float32], Tensor[(21), float32], Tensor[(420), uint16]) */
}

def @func_13326() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %862 = @func_10563() /* ty=(Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) */;
  %863 = %862.1;
  %864 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  (%863, %864)
}

def @func_14092(%var_14088: Tensor[(1960), int64], %var_14089: Tensor[(1092), int16], %var_14090: Tensor[(4, 308), int8], %var_14091: Tensor[(1, 420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(10, 14, 14), int64], Tensor[(1960), int64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(1, 27), uint32], Tensor[(1092), int16], Tensor[(4, 308), int8], Tensor[(1, 420), uint16]) {
  %883 = fn (%var_14076: Tensor[(1960), int64], %var_14081: Tensor[(1092), int16], %var_14082: Tensor[(4, 308), int8], %var_14083: Tensor[(1, 420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(10, 14, 14), int64], Tensor[(1960), int64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(1, 27), uint32], Tensor[(1092), int16], Tensor[(4, 308), int8], Tensor[(1, 420), uint16]) {
    %865 = cast(%var_14076, dtype="int64") /* ty=Tensor[(1960), int64] */;
    %866 = reshape(%865, newshape=[10, 14, 14]) /* ty=Tensor[(10, 14, 14), int64] */;
    %867 = cast(meta[relay.Constant][74] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
    %868 = cast(meta[relay.Constant][74] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
    %869 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 27), uint32] */, dtype="uint32") /* ty=Tensor[(1, 27), uint32] */;
    %870 = cast(%var_14081, dtype="int16") /* ty=Tensor[(1092), int16] */;
    %871 = cast(%var_14082, dtype="int8") /* ty=Tensor[(4, 308), int8] */;
    %872 = cast(%var_14083, dtype="uint16") /* ty=Tensor[(1, 420), uint16] */;
    %873 = reshape(%867, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
    %874 = reshape(%868, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
    %875 = reshape(%869, newshape=[27]) /* ty=Tensor[(27), uint32] */;
    %876 = reshape(%870, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
    %877 = reshape(%871, newshape=[616, 2]) /* ty=Tensor[(616, 2), int8] */;
    %878 = reshape(%872, newshape=[420]) /* ty=Tensor[(420), uint16] */;
    %879 = @func_8743(%873, %874, %875, %876, %877, %878) /* ty=(Tensor[(14, 7, 16), float32], Tensor[(1, 9), int16], Tensor[(27), uint32], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(616, 2), int8], Tensor[(7, 12, 13), int16], Tensor[(21), float32], Tensor[(420), uint16], Tensor[(2, 312), float64]) */;
    %880 = @func_13352() /* ty=Tensor[(9, 11, 2), float64] */;
    %881 = @func_4734(%866) /* ty=Tensor[(10, 14, 14), int64] */;
    %882 = %879.3;
    (%880, %881, %var_14076, %882, meta[relay.Constant][74] /* ty=Tensor[(1568), float32] */, meta[relay.Constant][75] /* ty=Tensor[(1, 27), uint32] */, %var_14081, %var_14082, %var_14083)
  };
  %883(%var_14088, %var_14089, %var_14090, %var_14091) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(10, 14, 14), int64], Tensor[(1960), int64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(1, 27), uint32], Tensor[(1092), int16], Tensor[(4, 308), int8], Tensor[(1, 420), uint16]) */
}

def @func_14184(%var_14183: Tensor[(14, 10, 13), float32]) -> (Tensor[(14, 10, 13), float32], Tensor[(14, 10, 13), float32], Tensor[(14, 10, 13), int64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(9, 11, 2), float64]) {
  %900 = fn (%var_14127: Tensor[(14, 10, 13), float32]) -> (Tensor[(14, 10, 13), float32], Tensor[(14, 10, 13), float32], Tensor[(14, 10, 13), int64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(9, 11, 2), float64]) {
    %884 = cast(meta[relay.Constant][76] /* ty=Tensor[(14, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 13), float32] */;
    %885 = shape_of(%var_14127, dtype="int32") /* ty=Tensor[(3), int32] */;
    %886 = cast(%var_14127, dtype="float32") /* ty=Tensor[(14, 10, 13), float32] */;
    %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %888 = cast(%var_14127, dtype="float32") /* ty=Tensor[(14, 10, 13), float32] */;
    %889 = cast(meta[relay.Constant][76] /* ty=Tensor[(14, 10, 13), float32] */, dtype="int64") /* ty=Tensor[(14, 10, 13), int64] */;
    %890 = shape_of(%var_14127, dtype="int32") /* ty=Tensor[(3), int32] */;
    %891 = cast(%var_14127, dtype="int64") /* ty=Tensor[(14, 10, 13), int64] */;
    %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %893 = cast(meta[relay.Constant][77] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
    %894 = reshape(%893, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
    %895 = mod(%886, %887) /* ty=Tensor[(14, 10, 13), float32] */;
    %896 = acos(%888) /* ty=Tensor[(14, 10, 13), float32] */;
    %897 = multiply(%891, %892) /* ty=Tensor[(14, 10, 13), int64] */;
    %898 = @func_3842(%894) /* ty=Tensor[(3, 7, 1), float64] */;
    %899 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
    (%895, %896, %897, %898, meta[relay.Constant][77] /* ty=Tensor[(21), float32] */, %899)
  };
  %900(%var_14183) /* ty=(Tensor[(14, 10, 13), float32], Tensor[(14, 10, 13), float32], Tensor[(14, 10, 13), int64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(9, 11, 2), float64]) */
}

def @func_12407() -> (Tensor[(9, 11, 2), float64],) {
  @func_12405() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_3927(%var_3924: Tensor[(2, 10, 15), float32], %var_3925: Tensor[(9), int16], %var_3926: Tensor[(810), int16]) -> (Tensor[(2, 10, 15), float32], Tensor[(2, 10, 15), float64], Tensor[(9, 9, 10), float32], Tensor[(9), int16], Tensor[(810), int16]) {
  @func_3922(%var_3924, %var_3925, %var_3926) /* ty=(Tensor[(2, 10, 15), float32], Tensor[(2, 10, 15), float64], Tensor[(9, 9, 10), float32], Tensor[(9), int16], Tensor[(810), int16]) */
}

def @func_744(%var_743: Tensor[(9, 14, 9), float64]) -> Tensor[(9, 14, 9), float64] {
  %902 = fn (%var_736: Tensor[(9, 14, 9), float64]) -> Tensor[(9, 14, 9), float64] {
    %901 = cast(%var_736, dtype="float64") /* ty=Tensor[(9, 14, 9), float64] */;
    cos(%901) /* ty=Tensor[(9, 14, 9), float64] */
  };
  %902(%var_743) /* ty=Tensor[(9, 14, 9), float64] */
}

def @func_14891() -> Tensor[(9, 11, 2), float64] {
  @func_14889() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_10382() -> (Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float32]) {
  @func_10380() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float32]) */
}

def @func_14457(%var_14456: Tensor[(14, 15, 12), bool]) -> (Tensor[(14, 15, 12), bool],) {
  %908 = fn (%var_14450: Tensor[(14, 15, 12), bool]) -> (Tensor[(14, 15, 12), bool],) {
    %903 = cast(meta[relay.Constant][78] /* ty=Tensor[(14, 15, 12), bool] */, dtype="bool") /* ty=Tensor[(14, 15, 12), bool] */;
    %904 = shape_of(%var_14450, dtype="int32") /* ty=Tensor[(3), int32] */;
    %905 = cast(%var_14450, dtype="bool") /* ty=Tensor[(14, 15, 12), bool] */;
    %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %907 = logical_and(%905, %906) /* ty=Tensor[(14, 15, 12), bool] */;
    (%907,)
  };
  %908(%var_14456) /* ty=(Tensor[(14, 15, 12), bool],) */
}

def @func_14935() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  @func_14933() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */
}

def @func_12973() -> (Tensor[(9, 11, 2), float64], Tensor[(3, 11, 6), uint32]) {
  %909 = @func_9867() /* ty=Tensor[(9, 11, 2), float64] */;
  %910 = cast(%909, dtype="uint32") /* ty=Tensor[(9, 11, 2), uint32] */;
  %911 = cast(%909, dtype="uint32") /* ty=Tensor[(9, 11, 2), uint32] */;
  %912 = reshape(%910, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), uint32] */;
  %913 = reshape(%911, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), uint32] */;
  %914 = @func_7755(%912, %913) /* ty=(Tensor[(3, 11, 6), uint32],) */;
  %915 = %914.0;
  (%909, %915)
}

def @func_11267() -> (Tensor[(9, 11, 2), float64],) {
  %917 = fn () -> (Tensor[(9, 11, 2), float64],) {
    %916 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
    (%916,)
  };
  %917() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_13657(%var_13640: Tensor[(1232), int8], %var_13653: Tensor[(15, 1092), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(15, 1092), uint16]) {
  %918 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 1092), int16] */, dtype="int16") /* ty=Tensor[(1, 1092), int16] */;
  %919 = cast(%var_13640, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %920 = cast(meta[relay.Constant][80] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %921 = reshape(%918, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %922 = reshape(%919, newshape=[1232]) /* ty=Tensor[(1232), int8] */;
  %923 = reshape(%920, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %924 = @func_10240(%921, %922, %923) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(27, 1), uint32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(420), uint16], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) */;
  %925 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 1092), int16] */, dtype="uint16") /* ty=Tensor[(1, 1092), uint16] */;
  %926 = cast(%var_13653, dtype="uint16") /* ty=Tensor[(15, 1092), uint16] */;
  %927 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  %928 = @func_13078() /* ty=Tensor[(9, 11, 2), float64] */;
  %929 = %924.1;
  %930 = left_shift(%925, %926) /* ty=Tensor[(15, 1092), uint16] */;
  (%927, %928, %929, %var_13640, meta[relay.Constant][80] /* ty=Tensor[(21), float32] */, %930)
}

def @func_5871(%var_5869: Tensor[(5, 16, 1), float32]) -> Tensor[(5, 16, ?), bool] {
  @func_5868(%var_5869) /* ty=Tensor[(5, 16, ?), bool] */
}

def @func_12111(%var_12109: Tensor[(1200), uint16], %var_12110: Tensor[(21), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(1200), uint16], Tensor[(5, 16, ?), bool], Tensor[(5, 16, ?), float32], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) {
  @func_12107(%var_12109, %var_12110) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(1200), uint16], Tensor[(5, 16, ?), bool], Tensor[(5, 16, ?), float32], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) */
}

def @func_11122(%var_11119: Tensor[(1, 132), float32], %var_11120: Tensor[(21), float32], %var_11121: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(1, 132), float32], Tensor[(300, 1), float32], Tensor[(27), uint32], Tensor[(9, 1), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) {
  @func_11117(%var_11119, %var_11120, %var_11121) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(1, 132), float32], Tensor[(300, 1), float32], Tensor[(27), uint32], Tensor[(9, 1), int16], Tensor[(810), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16]) */
}

def @func_10438() -> (Tensor[(9, 11, 2), float64],) {
  @func_10436() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_10305() -> (Tensor[(9, 11, 2), float64],) {
  %931 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  (%931,)
}

def @func_14889() -> Tensor[(9, 11, 2), float64] {
  %932 = @func_14046() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %932.0
}

def @func_12186() -> Tensor[(9, 11, 2), float64] {
  @func_9803() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_13748(%var_13745: Tensor[(1200), uint16], %var_13746: int8, %var_13747: Tensor[(78), int8]) -> (Tensor[(9, 11, 2), float32], Tensor[(5, 15, 16), float64], Tensor[(1200), uint16], Tensor[(6, 13, 1), bool], int8, Tensor[(78), int8]) {
  @func_13743(%var_13745, %var_13746, %var_13747) /* ty=(Tensor[(9, 11, 2), float32], Tensor[(5, 15, 16), float64], Tensor[(1200), uint16], Tensor[(6, 13, 1), bool], int8, Tensor[(78), int8]) */
}

def @func_9606(%var_9604: Tensor[(198), uint32]) -> (Tensor[(7, 11, 13), bool], Tensor[(3, 11, 6), uint32], Tensor[(198), uint32]) {
  %933 = cast(meta[relay.Constant][81] /* ty=Tensor[(7, 1, 13), float64] */, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %934 = cast(meta[relay.Constant][82] /* ty=Tensor[(7, 11, 13), float64] */, dtype="bool") /* ty=Tensor[(7, 11, 13), bool] */;
  %935 = cast(%var_9604, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %936 = cast(%var_9604, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %937 = reshape(%935, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), uint32] */;
  %938 = reshape(%936, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), uint32] */;
  %939 = @func_7755(%937, %938) /* ty=(Tensor[(3, 11, 6), uint32],) */;
  %940 = not_equal(%933, %934) /* ty=Tensor[(7, 11, 13), bool] */;
  %941 = %939.0;
  (%940, %941, %var_9604)
}

def @func_12975() -> (Tensor[(9, 11, 2), float64], Tensor[(3, 11, 6), uint32]) {
  @func_12973() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(3, 11, 6), uint32]) */
}

def @func_13771() -> (Tensor[(9, 11, 2), float64],) {
  %944 = fn () -> (Tensor[(9, 11, 2), float64],) {
    %942 = @func_12973() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(3, 11, 6), uint32]) */;
    %943 = %942.0;
    (%943,)
  };
  %944() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_13352() -> Tensor[(9, 11, 2), float64] {
  @func_11197() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_12526(%var_12517: Tensor[(15, 4, 9), float32]) -> (Tensor[(15, 4, 9), float32],) {
  %945 = cast(%var_12517, dtype="float32") /* ty=Tensor[(15, 4, 9), float32] */;
  %946 = tan(%945) /* ty=Tensor[(15, 4, 9), float32] */;
  (%946,)
}

def @func_13080() -> Tensor[(9, 11, 2), float64] {
  @func_13078() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_8331(%var_8274: Tensor[(13, 3, 16), float32], %var_8297: Tensor[(1, 27), uint32], %var_8299: Tensor[(81, 10), int16], %var_8301: Tensor[(1092), int16], %var_8310: Tensor[(1232), int8]) -> (Tensor[(13, 3, 16), float32], Tensor[(1, 9), int16], Tensor[(1, 27), uint32], Tensor[(9), int16], Tensor[(81, 10), int16], Tensor[(21), float32], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(396), float64], Tensor[(168, 4), int8]) {
  %947 = cast(%var_8274, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %948 = cast(%var_8297, dtype="uint32") /* ty=Tensor[(1, 27), uint32] */;
  %949 = cast(%var_8297, dtype="uint32") /* ty=Tensor[(1, 27), uint32] */;
  %950 = cast(meta[relay.Constant][83] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %951 = cast(%var_8299, dtype="int16") /* ty=Tensor[(81, 10), int16] */;
  %952 = cast(meta[relay.Constant][84] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %953 = cast(%var_8301, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %954 = cast(meta[relay.Constant][85] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %955 = reshape(%948, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %956 = reshape(%949, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %957 = reshape(%950, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %958 = reshape(%951, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %959 = reshape(%952, newshape=[7, 3]) /* ty=Tensor[(7, 3), float32] */;
  %960 = reshape(%953, newshape=[182, 6]) /* ty=Tensor[(182, 6), int16] */;
  %961 = reshape(%954, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %962 = @func_5594(%955, %956, %957, %958, %959, %960, %961) /* ty=(Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) */;
  %963 = cast(%var_8310, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %964 = cast(meta[relay.Constant][84] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %965 = cast(meta[relay.Constant][86] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %966 = cast(meta[relay.Constant][87] /* ty=Tensor[(168, 4), int8] */, dtype="int8") /* ty=Tensor[(168, 4), int8] */;
  %967 = cast(%var_8301, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %968 = cast(%var_8299, dtype="int16") /* ty=Tensor[(81, 10), int16] */;
  %969 = reshape(%963, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), int8] */;
  %970 = reshape(%964, newshape=[21, 1]) /* ty=Tensor[(21, 1), float32] */;
  %971 = reshape(%965, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %972 = reshape(%966, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %973 = reshape(%967, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %974 = reshape(%968, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %975 = @func_5254(%969, %970, %971, %972, %973, %974) /* ty=(Tensor[(8, 14, 11), int8], Tensor[(3, 7, 1), float64], Tensor[(21, 1), float32], Tensor[(8, 14, 6), int8], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(810), int16]) */;
  %976 = atan(%947) /* ty=Tensor[(13, 3, 16), float32] */;
  %977 = %962.3;
  %978 = %975.6;
  (%976, %977, %var_8297, meta[relay.Constant][83] /* ty=Tensor[(9), int16] */, %var_8299, meta[relay.Constant][84] /* ty=Tensor[(21), float32] */, %var_8301, meta[relay.Constant][85] /* ty=Tensor[(420), uint16] */, %978, %var_8310, meta[relay.Constant][86] /* ty=Tensor[(396), float64] */, meta[relay.Constant][87] /* ty=Tensor[(168, 4), int8] */)
}

def @func_8639(%var_8637: Tensor[(1, 4, 14), float64], %var_8638: Tensor[(13, 4, 14), float64]) -> (Tensor[(13, 4, 14), float64],) {
  @func_8635(%var_8637, %var_8638) /* ty=(Tensor[(13, 4, 14), float64],) */
}

def @func_7758(%var_7756: Tensor[(3, 11, 6), uint32], %var_7757: Tensor[(3, 11, 6), uint32]) -> (Tensor[(3, 11, 6), uint32],) {
  %984 = fn (%var_7749: Tensor[(3, 11, 6), uint32], %var_7750: Tensor[(3, 11, 6), uint32]) -> (Tensor[(3, 11, 6), uint32],) {
    %979 = cast(%var_7750, dtype="uint32") /* ty=Tensor[(3, 11, 6), uint32] */;
    %980 = shape_of(%var_7749, dtype="int32") /* ty=Tensor[(3), int32] */;
    %981 = cast(%var_7749, dtype="uint32") /* ty=Tensor[(3, 11, 6), uint32] */;
    %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %983 = minimum(%981, %982) /* ty=Tensor[(3, 11, 6), uint32] */;
    (%983,)
  };
  %984(%var_7756, %var_7757) /* ty=(Tensor[(3, 11, 6), uint32],) */
}

def @func_7976(%var_7969: Tensor[(13, 15, 6), int16], %var_7970: Tensor[(13, 15, 6), int16], %var_7971: Tensor[(396), float64], %var_7972: Tensor[(672), int8], %var_7973: Tensor[(1232), int8], %var_7974: Tensor[(21), float32], %var_7975: Tensor[(810), int16]) -> (Tensor[(13, 15, 6), bool], Tensor[(117), bool], Tensor[(396), float64], Tensor[(672), int8], Tensor[(117), bool], Tensor[(351), bool], Tensor[(7, 156), float32], Tensor[(7, 156), bool], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(810), int16]) {
  @func_7967(%var_7969, %var_7970, %var_7971, %var_7972, %var_7973, %var_7974, %var_7975) /* ty=(Tensor[(13, 15, 6), bool], Tensor[(117), bool], Tensor[(396), float64], Tensor[(672), int8], Tensor[(117), bool], Tensor[(351), bool], Tensor[(7, 156), float32], Tensor[(7, 156), bool], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(810), int16]) */
}

def @func_14260() -> Tensor[(9, 11, 2), float64] {
  @func_14258() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_15260() -> (Tensor[(9, 11, 2), float64],) {
  @func_15258() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_2255(%var_2253: Tensor[(7, 12, 13), int16]) -> (Tensor[(7, 12, 13), int16],) {
  @func_2252(%var_2253) /* ty=(Tensor[(7, 12, 13), int16],) */
}

def @func_13440(%var_13438: float64, %var_13439: Tensor[(4, 2, 1), float64]) -> Tensor[(4, 2, 1), float64] {
  %987 = fn (%var_13430: float64, %var_13431: Tensor[(4, 2, 1), float64]) -> Tensor[(4, 2, 1), float64] {
    %985 = cast(%var_13430, dtype="float64") /* ty=float64 */;
    %986 = cast(%var_13431, dtype="float64") /* ty=Tensor[(4, 2, 1), float64] */;
    divide(%985, %986) /* ty=Tensor[(4, 2, 1), float64] */
  };
  %987(%var_13438, %var_13439) /* ty=Tensor[(4, 2, 1), float64] */
}

def @func_92(%var_85: Tensor[(1, 9, 13), bool], %var_86: Tensor[(3, 9, 13), bool]) -> Tensor[(3, 9, 13), bool] {
  %988 = cast(%var_85, dtype="bool") /* ty=Tensor[(1, 9, 13), bool] */;
  %989 = cast(%var_86, dtype="bool") /* ty=Tensor[(3, 9, 13), bool] */;
  logical_or(%988, %989) /* ty=Tensor[(3, 9, 13), bool] */
}

def @func_10240(%var_10230: Tensor[(1092), int16], %var_10231: Tensor[(1232), int8], %var_10235: Tensor[(21), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(1568), float32], Tensor[(27, 1), uint32], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(420), uint16], Tensor[(3, 7, 1), float64], Tensor[(21), float32]) {
  %990 = cast(meta[relay.Constant][88] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %991 = cast(meta[relay.Constant][88] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %992 = cast(meta[relay.Constant][89] /* ty=Tensor[(27, 1), uint32] */, dtype="uint32") /* ty=Tensor[(27, 1), uint32] */;
  %993 = cast(%var_10230, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %994 = cast(%var_10231, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %995 = cast(meta[relay.Constant][90] /* ty=Tensor[(420), uint16] */, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %996 = reshape(%990, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
  %997 = reshape(%991, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
  %998 = reshape(%992, newshape=[27]) /* ty=Tensor[(27), uint32] */;
  %999 = reshape(%993, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %1000 = reshape(%994, newshape=[616, 2]) /* ty=Tensor[(616, 2), int8] */;
  %1001 = reshape(%995, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %1002 = @func_8743(%996, %997, %998, %999, %1000, %1001) /* ty=(Tensor[(14, 7, 16), float32], Tensor[(1, 9), int16], Tensor[(27), uint32], Tensor[(810), int16], Tensor[(1092), int16], Tensor[(616, 2), int8], Tensor[(7, 12, 13), int16], Tensor[(21), float32], Tensor[(420), uint16], Tensor[(2, 312), float64]) */;
  %1003 = cast(%var_10235, dtype="float32") /* ty=Tensor[(21), float32] */;
  %1004 = reshape(%1003, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %1005 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  %1006 = %1002.3;
  %1007 = @func_3842(%1004) /* ty=Tensor[(3, 7, 1), float64] */;
  (%1005, %1006, meta[relay.Constant][88] /* ty=Tensor[(1568), float32] */, meta[relay.Constant][89] /* ty=Tensor[(27, 1), uint32] */, %var_10230, %var_10231, meta[relay.Constant][90] /* ty=Tensor[(420), uint16] */, %1007, %var_10235)
}

def @func_11509(%var_11507: Tensor[(8, 14, 6), float32]) -> Tensor[(8, 14, 6), float32] {
  @func_11506(%var_11507) /* ty=Tensor[(8, 14, 6), float32] */
}

def @func_10563() -> (Tensor[(5, 16, ?), float32], Tensor[(9, 11, 2), float64], Tensor[(198), float64]) {
  %1008 = @func_10380() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float32]) */;
  %1009 = cast(meta[relay.Constant][91] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %1010 = reshape(%1009, newshape=[9, 11, 2]) /* ty=Tensor[(9, 11, 2), float64] */;
  %1011 = @func_10162(%1010) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(198), uint32]) */;
  %1012 = %1008.1;
  %1013 = %1011.0;
  (%1012, %1013, meta[relay.Constant][91] /* ty=Tensor[(198), float64] */)
}

def @func_12917(%var_12914: Tensor[(104), float64], %var_12915: Tensor[(1232), int8], %var_12916: Tensor[(672), int8]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 4, 13), int16], Tensor[(104), float64], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(672), int8], Tensor[(182, 6), int16], Tensor[(396), float64]) {
  @func_12912(%var_12914, %var_12915, %var_12916) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(2, 4, 13), int16], Tensor[(104), float64], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(672), int8], Tensor[(182, 6), int16], Tensor[(396), float64]) */
}

def @func_13613(%var_13573: Tensor[(56), float64], %var_13574: Tensor[(728), float64]) -> (Tensor[(13, 4, 14), float64], Tensor[(56), float64], Tensor[(5, 16, 728), uint32], Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float64]) {
  %1014 = cast(%var_13573, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1015 = cast(%var_13574, dtype="float64") /* ty=Tensor[(728), float64] */;
  %1016 = reshape(%1014, newshape=[1, 4, 14]) /* ty=Tensor[(1, 4, 14), float64] */;
  %1017 = reshape(%1015, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), float64] */;
  %1018 = @func_8635(%1016, %1017) /* ty=(Tensor[(13, 4, 14), float64],) */;
  %1019 = @func_10380() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(5, 16, ?), float32]) */;
  %1020 = %1019.1;
  %1021 = cast(%1020, dtype="float64") /* ty=Tensor[(5, 16, ?), float64] */;
  %1022 = log(%1021) /* ty=Tensor[(5, 16, ?), float64] */;
  %1023 = cast(%var_13574, dtype="uint32") /* ty=Tensor[(728), uint32] */;
  %1024 = cast(%1022, dtype="uint32") /* ty=Tensor[(5, 16, ?), uint32] */;
  %1025 = cast(%1022, dtype="float64") /* ty=Tensor[(5, 16, ?), float64] */;
  %1026 = %1018.0;
  %1027 = bitwise_and(%1023, %1024) /* ty=Tensor[(5, 16, 728), uint32] */;
  %1028 = @func_12473() /* ty=Tensor[(9, 11, 2), float64] */;
  %1029 = exp(%1025) /* ty=Tensor[(5, 16, ?), float64] */;
  (%1026, %var_13573, %1027, %1028, %1029)
}

def @func_14668() -> (Tensor[(9, 11, 2), float64],) {
  @func_14666() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_13225() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(2, 11, 6), float32], Tensor[(132), float32], Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) {
  %1030 = @func_11542() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %1031 = cast(meta[relay.Constant][92] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %1032 = reshape(%1031, newshape=[2, 11, 6]) /* ty=Tensor[(2, 11, 6), float32] */;
  %1033 = @func_8898(%1032) /* ty=(Tensor[(2, 11, 6), float32],) */;
  %1034 = @func_10797() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64]) */;
  %1035 = @func_9803() /* ty=Tensor[(9, 11, 2), float64] */;
  %1036 = %1030.0;
  %1037 = %1033.0;
  %1038 = %1034.1;
  %1039 = @func_11197() /* ty=Tensor[(9, 11, 2), float64] */;
  (%1035, %1036, %1037, meta[relay.Constant][92] /* ty=Tensor[(132), float32] */, %1038, %1039)
}

def @func_11443(%var_11442: Tensor[(600, 2), uint16]) -> (Tensor[(117), bool], Tensor[(600, 2), int8], Tensor[(9, 11, 2), float64], Tensor[(600, 2), int64]) {
  %1069 = fn (%var_11402: Tensor[(600, 2), uint16]) -> (Tensor[(117), bool], Tensor[(600, 2), int8], Tensor[(9, 11, 2), float64], Tensor[(600, 2), int64]) {
    %1040 = cast(meta[relay.Constant][93] /* ty=Tensor[(600, 2), uint16] */, dtype="uint16") /* ty=Tensor[(600, 2), uint16] */;
    %1041 = cast(meta[relay.Constant][93] /* ty=Tensor[(600, 2), uint16] */, dtype="uint16") /* ty=Tensor[(600, 2), uint16] */;
    %1042 = reshape(%1040, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint16] */;
    %1043 = reshape(%1041, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), uint16] */;
    %1044 = @func_9361(%1042, %1043) /* ty=(Tensor[(5, 15, 16), uint16], Tensor[(5, 15, 16), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool]) */;
    %1045 = cast(%var_11402, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
    %1046 = shape_of(meta[relay.Constant][93] /* ty=Tensor[(600, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1047 = cast(meta[relay.Constant][93] /* ty=Tensor[(600, 2), uint16] */, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
    %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1049 = greater_equal(%1047, %1048) /* ty=Tensor[(600, 2), bool] */;
    %1050 = cast(%1049, dtype="int8") /* ty=Tensor[(600, 2), int8] */;
    %1051 = shape_of(meta[relay.Constant][93] /* ty=Tensor[(600, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1052 = cast(meta[relay.Constant][93] /* ty=Tensor[(600, 2), uint16] */, dtype="int8") /* ty=Tensor[(600, 2), int8] */;
    %1053 = dyn.reshape(%1050, %1051, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %1054 = @func_11197() /* ty=Tensor[(9, 11, 2), float64] */;
    %1055 = cast(meta[relay.Constant][94] /* ty=Tensor[(9, 11, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
    %1056 = shape_of(%1054, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1057 = cast(%1054, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
    %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1059 = divide(%1057, %1058) /* ty=Tensor[(9, 11, 2), float64] */;
    %1060 = cast(%1059, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
    %1061 = cast(%var_11402, dtype="int64") /* ty=Tensor[(600, 2), int64] */;
    %1062 = shape_of(meta[relay.Constant][93] /* ty=Tensor[(600, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1063 = cast(meta[relay.Constant][93] /* ty=Tensor[(600, 2), uint16] */, dtype="int64") /* ty=Tensor[(600, 2), int64] */;
    %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %1065 = %1044.3;
    %1066 = right_shift(%1052, %1053) /* ty=Tensor[(600, 2), int8] */;
    %1067 = asinh(%1060) /* ty=Tensor[(9, 11, 2), float64] */;
    %1068 = add(%1063, %1064) /* ty=Tensor[(600, 2), int64] */;
    (%1065, %1066, %1067, %1068)
  };
  %1069(%var_11442) /* ty=(Tensor[(117), bool], Tensor[(600, 2), int8], Tensor[(9, 11, 2), float64], Tensor[(600, 2), int64]) */
}

def @func_13661(%var_13659: Tensor[(1232), int8], %var_13660: Tensor[(15, 1092), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(15, 1092), uint16]) {
  @func_13657(%var_13659, %var_13660) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float64], Tensor[(810), int16], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(15, 1092), uint16]) */
}

def @func_12438() -> (Tensor[(9, 11, 2), float32],) {
  %1075 = fn () -> (Tensor[(9, 11, 2), float32],) {
    %1070 = @func_12045() /* ty=Tensor[(9, 11, 2), float64] */;
    %1071 = cast(%1070, dtype="float32") /* ty=Tensor[(9, 11, 2), float32] */;
    %1072 = cos(%1071) /* ty=Tensor[(9, 11, 2), float32] */;
    %1073 = cast(%1072, dtype="float32") /* ty=Tensor[(9, 11, 2), float32] */;
    %1074 = sinh(%1073) /* ty=Tensor[(9, 11, 2), float32] */;
    (%1074,)
  };
  %1075() /* ty=(Tensor[(9, 11, 2), float32],) */
}

def @func_7967(%var_7881: Tensor[(13, 15, 6), int16], %var_7882: Tensor[(13, 15, 6), int16], %var_7899: Tensor[(396), float64], %var_7900: Tensor[(672), int8], %var_7961: Tensor[(1232), int8], %var_7962: Tensor[(21), float32], %var_7963: Tensor[(810), int16]) -> (Tensor[(13, 15, 6), bool], Tensor[(117), bool], Tensor[(396), float64], Tensor[(672), int8], Tensor[(117), bool], Tensor[(351), bool], Tensor[(7, 156), float32], Tensor[(7, 156), bool], Tensor[(1092), int16], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(810), int16]) {
  %1076 = cast(%var_7882, dtype="bool") /* ty=Tensor[(13, 15, 6), bool] */;
  %1077 = shape_of(%var_7881, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1078 = cast(%var_7881, dtype="bool") /* ty=Tensor[(13, 15, 6), bool] */;
  %1079 = dyn.reshape(%1076, %1077, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1080 = cast(%var_7899, dtype="float64") /* ty=Tensor[(396), float64] */;
  %1081 = cast(%var_7900, dtype="int8") /* ty=Tensor[(672), int8] */;
  %1082 = cast(meta[relay.Constant][95] /* ty=Tensor[(7, 156), int16] */, dtype="int16") /* ty=Tensor[(7, 156), int16] */;
  %1083 = cast(meta[relay.Constant][96] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %1084 = cast(meta[relay.Constant][97] /* ty=Tensor[(351), bool] */, dtype="bool") /* ty=Tensor[(351), bool] */;
  %1085 = reshape(%1080, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float64] */;
  %1086 = reshape(%1081, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %1087 = reshape(%1082, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %1088 = reshape(%1083, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %1089 = reshape(%1084, newshape=[3, 117]) /* ty=Tensor[(3, 117), bool] */;
  %1090 = @func_4483(%1085, %1086, %1087, %1088, %1089) /* ty=(Tensor[(8, 14, 6), int8], Tensor[(672), int8], Tensor[(7, 12, 13), int16], Tensor[(1092), int16], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool], Tensor[(4, 9, 11), uint8]) */;
  %1091 = cast(meta[relay.Constant][95] /* ty=Tensor[(7, 156), int16] */, dtype="float32") /* ty=Tensor[(7, 156), float32] */;
  %1092 = asin(%1091) /* ty=Tensor[(7, 156), float32] */;
  %1093 = cast(meta[relay.Constant][95] /* ty=Tensor[(7, 156), int16] */, dtype="int8") /* ty=Tensor[(7, 156), int8] */;
  %1094 = shape_of(%1092, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1095 = cast(%1092, dtype="int8") /* ty=Tensor[(7, 156), int8] */;
  %1096 = dyn.reshape(%1093, %1094, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1097 = add(%1095, %1096) /* ty=Tensor[(7, 156), int8] */;
  %1098 = cast(meta[relay.Constant][95] /* ty=Tensor[(7, 156), int16] */, dtype="float32") /* ty=Tensor[(7, 156), float32] */;
  %1099 = shape_of(%1097, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1100 = cast(%1097, dtype="float32") /* ty=Tensor[(7, 156), float32] */;
  %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1102 = cast(meta[relay.Constant][95] /* ty=Tensor[(7, 156), int16] */, dtype="int16") /* ty=Tensor[(7, 156), int16] */;
  %1103 = shape_of(%1092, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1104 = cast(%1092, dtype="int16") /* ty=Tensor[(7, 156), int16] */;
  %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1106 = right_shift(%1104, %1105) /* ty=Tensor[(7, 156), int16] */;
  %1107 = cast(%1097, dtype="int16") /* ty=Tensor[(7, 156), int16] */;
  %1108 = shape_of(%1092, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1109 = cast(%1092, dtype="int16") /* ty=Tensor[(7, 156), int16] */;
  %1110 = dyn.reshape(%1107, %1108, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1111 = subtract(%1109, %1110) /* ty=Tensor[(7, 156), int16] */;
  %1112 = cast(%1111, dtype="bool") /* ty=Tensor[(7, 156), bool] */;
  %1113 = shape_of(%1106, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1114 = cast(%1106, dtype="bool") /* ty=Tensor[(7, 156), bool] */;
  %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1116 = cast(%var_7961, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %1117 = cast(%var_7962, dtype="float32") /* ty=Tensor[(21), float32] */;
  %1118 = cast(%var_7899, dtype="float64") /* ty=Tensor[(396), float64] */;
  %1119 = cast(%var_7900, dtype="int8") /* ty=Tensor[(672), int8] */;
  %1120 = cast(%1092, dtype="int16") /* ty=Tensor[(7, 156), int16] */;
  %1121 = cast(%var_7963, dtype="int16") /* ty=Tensor[(810), int16] */;
  %1122 = reshape(%1116, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), int8] */;
  %1123 = reshape(%1117, newshape=[21, 1]) /* ty=Tensor[(21, 1), float32] */;
  %1124 = reshape(%1118, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %1125 = reshape(%1119, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %1126 = reshape(%1120, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %1127 = reshape(%1121, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %1128 = @func_5254(%1122, %1123, %1124, %1125, %1126, %1127) /* ty=(Tensor[(8, 14, 11), int8], Tensor[(3, 7, 1), float64], Tensor[(21, 1), float32], Tensor[(8, 14, 6), int8], Tensor[(396), float64], Tensor[(672), int8], Tensor[(1092), int16], Tensor[(117), bool], Tensor[(351), bool], Tensor[(117, 3), uint16], Tensor[(420), uint16], Tensor[(810), int16]) */;
  %1129 = less_equal(%1078, %1079) /* ty=Tensor[(13, 15, 6), bool] */;
  %1130 = %1090.5;
  %1131 = power(%1100, %1101) /* ty=Tensor[(7, 156), float32] */;
  %1132 = logical_and(%1114, %1115) /* ty=Tensor[(7, 156), bool] */;
  %1133 = %1128.6;
  (%1129, %1130, %var_7899, %var_7900, meta[relay.Constant][96] /* ty=Tensor[(117), bool] */, meta[relay.Constant][97] /* ty=Tensor[(351), bool] */, %1131, %1132, %1133, %var_7961, %var_7962, %var_7963)
}

def @func_7637(%var_7631: Tensor[(117), bool]) -> (Tensor[(4, 4, 12), float64], Tensor[(3, 9, 13), bool], Tensor[(117), bool], Tensor[(3, 117), bool]) {
  %1134 = cast(meta[relay.Constant][98] /* ty=Tensor[(4, 4, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 4, 12), float64] */;
  %1135 = cast(%var_7631, dtype="bool") /* ty=Tensor[(117), bool] */;
  %1136 = cast(meta[relay.Constant][99] /* ty=Tensor[(3, 117), bool] */, dtype="bool") /* ty=Tensor[(3, 117), bool] */;
  %1137 = reshape(%1135, newshape=[1, 9, 13]) /* ty=Tensor[(1, 9, 13), bool] */;
  %1138 = reshape(%1136, newshape=[3, 9, 13]) /* ty=Tensor[(3, 9, 13), bool] */;
  %1139 = log(%1134) /* ty=Tensor[(4, 4, 12), float64] */;
  %1140 = @func_92(%1137, %1138) /* ty=Tensor[(3, 9, 13), bool] */;
  (%1139, %1140, %var_7631, meta[relay.Constant][99] /* ty=Tensor[(3, 117), bool] */)
}

def @func_14115() -> (Tensor[(9, 11, 2), float64],) {
  @func_14113() /* ty=(Tensor[(9, 11, 2), float64],) */
}

def @func_12744(%var_12742: Tensor[(540), float32]) -> (Tensor[(9, 11, 2), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) {
  @func_12741(%var_12742) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */
}

def @func_15380() -> (Tensor[(9, 11, 2), float64], Tensor[(9, 11, 2), float32]) {
  %1141 = @func_14435() /* ty=(Tensor[(9, 11, 2), float64],) */;
  %1142 = @func_12437() /* ty=(Tensor[(9, 11, 2), float32],) */;
  %1143 = %1141.0;
  %1144 = %1142.0;
  (%1143, %1144)
}

def @func_11198() -> Tensor[(9, 11, 2), float64] {
  %1145 = fn () -> Tensor[(9, 11, 2), float64] {
    @func_10777() /* ty=Tensor[(9, 11, 2), float64] */
  };
  %1145() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_12912(%var_12897: Tensor[(104), float64], %var_12898: Tensor[(1232), int8], %var_12900: Tensor[(672), int8]) -> (Tensor[(9, 11, 2), float64], Tensor[(2, 4, 13), int16], Tensor[(104), float64], Tensor[(1232), int8], Tensor[(21), float32], Tensor[(672), int8], Tensor[(182, 6), int16], Tensor[(396), float64]) {
  %1146 = cast(%var_12897, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1147 = cast(%var_12898, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %1148 = cast(meta[relay.Constant][100] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %1149 = cast(%var_12900, dtype="int8") /* ty=Tensor[(672), int8] */;
  %1150 = cast(meta[relay.Constant][101] /* ty=Tensor[(182, 6), int16] */, dtype="int16") /* ty=Tensor[(182, 6), int16] */;
  %1151 = cast(meta[relay.Constant][102] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %1152 = cast(meta[relay.Constant][100] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %1153 = reshape(%1146, newshape=[2, 4, 13]) /* ty=Tensor[(2, 4, 13), float64] */;
  %1154 = reshape(%1147, newshape=[1232]) /* ty=Tensor[(1232), int8] */;
  %1155 = reshape(%1148, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %1156 = reshape(%1149, newshape=[336, 2]) /* ty=Tensor[(336, 2), int8] */;
  %1157 = reshape(%1150, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %1158 = reshape(%1151, newshape=[198, 2]) /* ty=Tensor[(198, 2), float64] */;
  %1159 = reshape(%1152, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %1160 = @func_10749(%1153, %1154, %1155, %1156, %1157, %1158, %1159) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(8, 14, 6), int8], Tensor[(1232), int8], Tensor[(336, 2), int8], Tensor[(1092), int16], Tensor[(810), int16], Tensor[(198, 2), bool], Tensor[(2, 4, 13), float64], Tensor[(2, 4, 13), int16], Tensor[(21), bool]) */;
  %1161 = @func_11894() /* ty=Tensor[(9, 11, 2), float64] */;
  %1162 = %1160.8;
  (%1161, %1162, %var_12897, %var_12898, meta[relay.Constant][100] /* ty=Tensor[(21), float32] */, %var_12900, meta[relay.Constant][101] /* ty=Tensor[(182, 6), int16] */, meta[relay.Constant][102] /* ty=Tensor[(396), float64] */)
}

def @func_13743(%var_13706: Tensor[(1200), uint16], %var_13722: int8, %var_13723: Tensor[(78), int8]) -> (Tensor[(9, 11, 2), float32], Tensor[(5, 15, 16), float64], Tensor[(1200), uint16], Tensor[(6, 13, 1), bool], int8, Tensor[(78), int8]) {
  %1163 = @func_12437() /* ty=(Tensor[(9, 11, 2), float32],) */;
  %1164 = cast(%var_13706, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %1165 = reshape(%1164, newshape=[1200]) /* ty=Tensor[(1200), uint16] */;
  %1166 = @func_11177(%1165) /* ty=(Tensor[(5, 16, ?), float32], Tensor[(5, 15, 16), float64], Tensor[(1200), uint16]) */;
  %1167 = cast(%var_13722, dtype="int8") /* ty=int8 */;
  %1168 = cast(%var_13723, dtype="int8") /* ty=Tensor[(78), int8] */;
  %1169 = reshape(%1167, newshape=[]) /* ty=int8 */;
  %1170 = reshape(%1168, newshape=[6, 13, 1]) /* ty=Tensor[(6, 13, 1), int8] */;
  %1171 = @func_7602(%1169, %1170) /* ty=(Tensor[(6, 13, 1), bool], Tensor[(6, 13, 1), bool], Tensor[(3, 4, 15), float32], Tensor[(6, 13, 180), uint16]) */;
  %1172 = %1163.0;
  %1173 = %1166.1;
  %1174 = %1171.1;
  (%1172, %1173, %var_13706, %1174, %var_13722, %var_13723)
}

def @func_9868() -> Tensor[(9, 11, 2), float64] {
  %1175 = fn () -> Tensor[(9, 11, 2), float64] {
    @func_9803() /* ty=Tensor[(9, 11, 2), float64] */
  };
  %1175() /* ty=Tensor[(9, 11, 2), float64] */
}

def @func_10165(%var_10163: Tensor[(9, 11, 2), float64]) -> (Tensor[(9, 11, 2), float64], Tensor[(198), uint32]) {
  @func_10162(%var_10163) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(198), uint32]) */
}

def @func_10899(%var_10858: Tensor[(27), uint32], %var_10860: Tensor[(810), int16], %var_10862: Tensor[(1092), int16], %var_10863: Tensor[(420), uint16]) -> (Tensor[(9, 11, 2), float64], Tensor[(9, 9, 10), float32], Tensor[(27), uint32], Tensor[(9), int16], Tensor[(810), int16], Tensor[(21, 1), float32], Tensor[(1092), int16], Tensor[(420), uint16], Tensor[(1232), int8], Tensor[(104), float64], Tensor[(1232), int8], Tensor[(168, 4), int8], Tensor[(396), float64]) {
  %1176 = cast(%var_10858, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %1177 = cast(%var_10858, dtype="uint32") /* ty=Tensor[(27), uint32] */;
  %1178 = cast(meta[relay.Constant][103] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1179 = cast(%var_10860, dtype="int16") /* ty=Tensor[(810), int16] */;
  %1180 = cast(meta[relay.Constant][104] /* ty=Tensor[(21, 1), float32] */, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %1181 = cast(%var_10862, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %1182 = cast(%var_10863, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %1183 = reshape(%1176, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %1184 = reshape(%1177, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), uint32] */;
  %1185 = reshape(%1178, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %1186 = reshape(%1179, newshape=[810]) /* ty=Tensor[(810), int16] */;
  %1187 = reshape(%1180, newshape=[7, 3]) /* ty=Tensor[(7, 3), float32] */;
  %1188 = reshape(%1181, newshape=[182, 6]) /* ty=Tensor[(182, 6), int16] */;
  %1189 = reshape(%1182, newshape=[420]) /* ty=Tensor[(420), uint16] */;
  %1190 = @func_5594(%1183, %1184, %1185, %1186, %1187, %1188, %1189) /* ty=(Tensor[(3, 3, 3), bool], Tensor[(9, 9, 10), float32], Tensor[(300, 1), float32], Tensor[(1, 9), int16], Tensor[(810), int16], Tensor[(3, 7, 1), float64], Tensor[(7, 3), float32], Tensor[(7, 12, 13), int16], Tensor[(182, 6), int16], Tensor[(81, 10), bool], Tensor[(420), uint16]) */;
  %1191 = cast(meta[relay.Constant][105] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1192 = cast(meta[relay.Constant][106] /* ty=Tensor[(1232), int8] */, dtype="int8") /* ty=Tensor[(1232), int8] */;
  %1193 = cast(meta[relay.Constant][104] /* ty=Tensor[(21, 1), float32] */, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %1194 = cast(meta[relay.Constant][107] /* ty=Tensor[(168, 4), int8] */, dtype="int8") /* ty=Tensor[(168, 4), int8] */;
  %1195 = cast(%var_10862, dtype="int16") /* ty=Tensor[(1092), int16] */;
  %1196 = cast(meta[relay.Constant][108] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %1197 = cast(meta[relay.Constant][104] /* ty=Tensor[(21, 1), float32] */, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %1198 = reshape(%1191, newshape=[2, 4, 13]) /* ty=Tensor[(2, 4, 13), float64] */;
  %1199 = reshape(%1192, newshape=[1232]) /* ty=Tensor[(1232), int8] */;
  %1200 = reshape(%1193, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %1201 = reshape(%1194, newshape=[336, 2]) /* ty=Tensor[(336, 2), int8] */;
  %1202 = reshape(%1195, newshape=[1092]) /* ty=Tensor[(1092), int16] */;
  %1203 = reshape(%1196, newshape=[198, 2]) /* ty=Tensor[(198, 2), float64] */;
  %1204 = reshape(%1197, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %1205 = @func_10749(%1198, %1199, %1200, %1201, %1202, %1203, %1204) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(8, 14, 6), int8], Tensor[(1232), int8], Tensor[(336, 2), int8], Tensor[(1092), int16], Tensor[(810), int16], Tensor[(198, 2), bool], Tensor[(2, 4, 13), float64], Tensor[(2, 4, 13), int16], Tensor[(21), bool]) */;
  %1206 = @func_9913() /* ty=Tensor[(9, 11, 2), float64] */;
  %1207 = %1190.1;
  %1208 = %1205.2;
  (%1206, %1207, %var_10858, meta[relay.Constant][103] /* ty=Tensor[(9), int16] */, %var_10860, meta[relay.Constant][104] /* ty=Tensor[(21, 1), float32] */, %var_10862, %var_10863, %1208, meta[relay.Constant][105] /* ty=Tensor[(104), float64] */, meta[relay.Constant][106] /* ty=Tensor[(1232), int8] */, meta[relay.Constant][107] /* ty=Tensor[(168, 4), int8] */, meta[relay.Constant][108] /* ty=Tensor[(396), float64] */)
}

def @func_15258() -> (Tensor[(9, 11, 2), float64],) {
  %1209 = @func_14836() /* ty=(Tensor[(9, 11, 2), float64], Tensor[(3, 11, 6), uint32]) */;
  %1210 = %1209.0;
  (%1210,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen685/build/output.py:2770: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen685/build/output.py", line 2775, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(176) tvmgen_default_fused_reshape_add_kernel0(short* __restrict__ T_add, short* __restrict__ placeholder, short* __restrict__ placeholder1) {
  T_add[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] + placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


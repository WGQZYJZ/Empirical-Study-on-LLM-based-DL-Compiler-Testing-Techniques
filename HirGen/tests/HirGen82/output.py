import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_64 = relay.var("var_64", dtype = "bool", shape = (2, 10, 8))#candidate|64|(2, 10, 8)|var|bool
var_65 = relay.var("var_65", dtype = "bool", shape = (2, 10, 8))#candidate|65|(2, 10, 8)|var|bool
bop_66 = relay.logical_or(var_64.astype('bool'), relay.reshape(var_65.astype('bool'), relay.shape_of(var_64))) # shape=(2, 10, 8)
bop_72 = relay.less(bop_66.astype('bool'), relay.reshape(var_65.astype('bool'), relay.shape_of(bop_66))) # shape=(2, 10, 8)
uop_79 = relay.tan(var_64.astype('float64')) # shape=(2, 10, 8)
output = relay.Tuple([bop_72,uop_79,])
output2 = relay.Tuple([bop_72,uop_79,])
func_84 = relay.Function([var_64,var_65,], output)
mod['func_84'] = func_84
mod = relay.transform.InferType()(mod)
var_85 = relay.var("var_85", dtype = "bool", shape = (2, 10, 8))#candidate|85|(2, 10, 8)|var|bool
var_86 = relay.var("var_86", dtype = "bool", shape = (2, 10, 8))#candidate|86|(2, 10, 8)|var|bool
output = func_84(var_85,var_86,)
func_87 = relay.Function([var_85,var_86,], output)
mutated_mod['func_87'] = func_87
mutated_mod = relay.transform.InferType()(mutated_mod)
var_118 = relay.var("var_118", dtype = "float32", shape = (9, 11, 9))#candidate|118|(9, 11, 9)|var|float32
uop_119 = relay.atan(var_118.astype('float32')) # shape=(9, 11, 9)
bop_121 = relay.logical_or(var_118.astype('bool'), relay.reshape(uop_119.astype('bool'), relay.shape_of(var_118))) # shape=(9, 11, 9)
uop_124 = relay.acosh(bop_121.astype('float32')) # shape=(9, 11, 9)
output = relay.Tuple([uop_124,])
output2 = relay.Tuple([uop_124,])
func_127 = relay.Function([var_118,], output)
mod['func_127'] = func_127
mod = relay.transform.InferType()(mod)
mutated_mod['func_127'] = func_127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_128 = relay.var("var_128", dtype = "float32", shape = (9, 11, 9))#candidate|128|(9, 11, 9)|var|float32
func_127_call = mutated_mod.get_global_var('func_127')
call_129 = func_127_call(var_128)
output = call_129
func_130 = relay.Function([var_128], output)
mutated_mod['func_130'] = func_130
mutated_mod = relay.transform.InferType()(mutated_mod)
var_185 = relay.var("var_185", dtype = "int64", shape = (10, 13, 16))#candidate|185|(10, 13, 16)|var|int64
var_186 = relay.var("var_186", dtype = "int64", shape = (10, 13, 16))#candidate|186|(10, 13, 16)|var|int64
bop_187 = relay.left_shift(var_185.astype('int64'), relay.reshape(var_186.astype('int64'), relay.shape_of(var_185))) # shape=(10, 13, 16)
func_84_call = mod.get_global_var('func_84')
func_87_call = mutated_mod.get_global_var('func_87')
var_191 = relay.var("var_191", dtype = "bool", shape = (160,))#candidate|191|(160,)|var|bool
call_190 = relay.TupleGetItem(func_84_call(relay.reshape(var_191.astype('bool'), [2, 10, 8]), relay.reshape(var_191.astype('bool'), [2, 10, 8]), ), 0)
call_192 = relay.TupleGetItem(func_87_call(relay.reshape(var_191.astype('bool'), [2, 10, 8]), relay.reshape(var_191.astype('bool'), [2, 10, 8]), ), 0)
func_127_call = mod.get_global_var('func_127')
func_130_call = mutated_mod.get_global_var('func_130')
var_200 = relay.var("var_200", dtype = "float32", shape = (99, 9))#candidate|200|(99, 9)|var|float32
call_199 = relay.TupleGetItem(func_127_call(relay.reshape(var_200.astype('float32'), [9, 11, 9])), 0)
call_201 = relay.TupleGetItem(func_130_call(relay.reshape(var_200.astype('float32'), [9, 11, 9])), 0)
uop_207 = relay.acos(var_191.astype('float32')) # shape=(160,)
var_215 = relay.var("var_215", dtype = "int64", shape = (10, 13, 16))#candidate|215|(10, 13, 16)|var|int64
bop_216 = relay.subtract(var_186.astype('float64'), relay.reshape(var_215.astype('float64'), relay.shape_of(var_186))) # shape=(10, 13, 16)
func_84_call = mod.get_global_var('func_84')
func_87_call = mutated_mod.get_global_var('func_87')
call_223 = relay.TupleGetItem(func_84_call(relay.reshape(var_191.astype('bool'), [2, 10, 8]), relay.reshape(uop_207.astype('bool'), [2, 10, 8]), ), 1)
call_224 = relay.TupleGetItem(func_87_call(relay.reshape(var_191.astype('bool'), [2, 10, 8]), relay.reshape(uop_207.astype('bool'), [2, 10, 8]), ), 1)
func_84_call = mod.get_global_var('func_84')
func_87_call = mutated_mod.get_global_var('func_87')
call_229 = relay.TupleGetItem(func_84_call(relay.reshape(call_223.astype('bool'), [2, 10, 8]), relay.reshape(call_223.astype('bool'), [2, 10, 8]), ), 1)
call_230 = relay.TupleGetItem(func_87_call(relay.reshape(call_223.astype('bool'), [2, 10, 8]), relay.reshape(call_223.astype('bool'), [2, 10, 8]), ), 1)
func_84_call = mod.get_global_var('func_84')
func_87_call = mutated_mod.get_global_var('func_87')
call_263 = relay.TupleGetItem(func_84_call(relay.reshape(call_223.astype('bool'), [2, 10, 8]), relay.reshape(uop_207.astype('bool'), [2, 10, 8]), ), 1)
call_264 = relay.TupleGetItem(func_87_call(relay.reshape(call_223.astype('bool'), [2, 10, 8]), relay.reshape(uop_207.astype('bool'), [2, 10, 8]), ), 1)
output = relay.Tuple([bop_187,call_190,call_199,var_200,uop_207,bop_216,call_223,call_229,call_263,])
output2 = relay.Tuple([bop_187,call_192,call_201,var_200,uop_207,bop_216,call_224,call_230,call_264,])
func_272 = relay.Function([var_185,var_186,var_191,var_200,var_215,], output)
mod['func_272'] = func_272
mod = relay.transform.InferType()(mod)
var_273 = relay.var("var_273", dtype = "int64", shape = (10, 13, 16))#candidate|273|(10, 13, 16)|var|int64
var_274 = relay.var("var_274", dtype = "int64", shape = (10, 13, 16))#candidate|274|(10, 13, 16)|var|int64
var_275 = relay.var("var_275", dtype = "bool", shape = (160,))#candidate|275|(160,)|var|bool
var_276 = relay.var("var_276", dtype = "float32", shape = (99, 9))#candidate|276|(99, 9)|var|float32
var_277 = relay.var("var_277", dtype = "int64", shape = (10, 13, 16))#candidate|277|(10, 13, 16)|var|int64
output = func_272(var_273,var_274,var_275,var_276,var_277,)
func_278 = relay.Function([var_273,var_274,var_275,var_276,var_277,], output)
mutated_mod['func_278'] = func_278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_372 = relay.var("var_372", dtype = "float32", shape = (1, 7, 9))#candidate|372|(1, 7, 9)|var|float32
uop_373 = relay.cos(var_372.astype('float32')) # shape=(1, 7, 9)
output = uop_373
output2 = uop_373
func_382 = relay.Function([var_372,], output)
mod['func_382'] = func_382
mod = relay.transform.InferType()(mod)
var_383 = relay.var("var_383", dtype = "float32", shape = (1, 7, 9))#candidate|383|(1, 7, 9)|var|float32
output = func_382(var_383)
func_384 = relay.Function([var_383], output)
mutated_mod['func_384'] = func_384
mutated_mod = relay.transform.InferType()(mutated_mod)
var_500 = relay.var("var_500", dtype = "float64", shape = (8, 8, 11))#candidate|500|(8, 8, 11)|var|float64
uop_501 = relay.asin(var_500.astype('float64')) # shape=(8, 8, 11)
func_272_call = mod.get_global_var('func_272')
func_278_call = mutated_mod.get_global_var('func_278')
const_523 = relay.const([[9,5,6,-10,-9,-1,6,7,-1,9,6,-1,-9,10,2,-10,-2,10,5,2,7,-5,1,-4,1,-4,-3,3,9,-5,9,-1,-2,-8,-1,3,6,-10,1,9,-1,8,7,7,-7,6,-8,7,-10,-7,5,-8,9,8,-5,-2,2,-10,1,7,-2,4,-2,9,5,-2,9,3,-9,8,10,2,-7,-2,-2,6,2,3,10,3,-2,-6,-6,-7,-10,10,-4,-3,-7,-1,4,4,-9,1,2,5,-10,5,7,-10,8,8,-4,-4,8,3,-7,1,5,5,7,-1,8,4,7,-6,-7,8,-7,-4,10,-8,-4,2,10,-7,7,7,-4,-5,-6,8,5,-5,-8,7,6,-6,-6,-2,-6,-7,-6,10,-5,1,-6,-5,4,-3,-8,-2,-8,7,-7,-2,7,-7,2,-3,4,8,-4,1,2,-2,-4,7,5,8,4,-6,-7,-3,2,-6,9,-6,-9,-3,-1,-1,1,1,-3,-9,-6,7,-10,4,6,10,-6,-8,-5,5,-6,-3,4,5,10,4,9,-1,2,10,-7,-1,9,7,-10,10,-7,-5,4,8,-3,3,-4,10,-2,-3,-3,10,-6,3,-9,4,-5,-9,-8,-4,9,-3,-4,8,5,4,6,9,-3,9,-5,-10,-1,-9,5,-8,-3,-7,5,-4,7,-8,2,-4,-10,-8,6,-5],[-6,6,10,-4,-6,-3,-8,-1,2,7,-7,-2,-6,3,-10,-8,5,-6,9,-1,2,-8,-8,5,-10,-8,3,-5,-2,-2,-9,7,-6,10,-6,2,2,10,1,-1,-8,-10,-1,-2,3,5,6,-5,-6,10,7,-2,4,-10,9,-7,-2,-10,2,-8,-5,7,5,-6,9,5,-7,-5,-10,7,-8,-6,1,-7,-7,-8,-6,-6,8,-1,7,5,2,-7,6,-2,10,9,2,-4,9,-3,-6,-5,8,-3,2,1,9,8,1,2,-8,3,-4,-10,9,-7,10,-1,-6,5,2,3,3,-7,-1,-6,-9,-10,-5,6,-4,1,3,-4,6,-8,-7,-2,-4,5,-9,6,-1,10,7,-2,-9,6,-6,-2,4,-3,-10,-1,7,10,10,-5,-2,-9,-3,1,5,-3,-10,5,4,6,4,-10,5,8,-8,6,-10,-1,7,6,-1,-3,5,-6,-6,4,-10,-3,-6,2,-4,4,-5,-10,8,4,-8,-2,-5,-3,-1,-2,-3,7,6,3,-10,-5,-3,7,2,3,-8,-4,-3,3,3,-8,10,8,-7,-5,10,-1,-8,4,-10,1,-2,-3,9,-1,-3,1,-4,-9,-9,-7,-6,-10,9,-6,1,-8,-2,7,7,6,-9,-3,-5,6,-9,-3,-3,1,8,-2,-5,-1,-3,10,8,-2,-4,-2,7,5,10,1],[10,7,9,7,2,-3,-10,-7,-9,-7,-3,-2,-4,-6,-4,8,-1,1,4,4,-10,5,7,10,10,-1,-6,-3,9,-5,-8,-6,-7,7,-9,-1,7,8,-5,-4,-6,8,-7,4,-10,-10,3,-7,4,-6,-6,-1,3,9,-8,3,-7,9,3,9,-4,2,-6,10,3,-5,10,-2,-7,-1,3,10,8,-3,3,-4,4,4,5,1,7,6,4,-2,-8,-6,8,2,-7,7,-8,9,-7,3,-7,9,-2,3,1,-7,-8,-2,10,4,-9,-9,2,-1,1,8,-8,-1,-9,6,-8,1,-7,6,-4,-7,1,-4,-6,-1,-10,-4,-5,-1,-9,-6,-2,-5,-7,8,-1,-8,3,-5,-6,-5,-5,-7,5,-5,-4,3,8,-7,-9,8,-8,-4,8,-1,6,-1,6,-3,3,-7,-1,-5,6,-5,4,7,-2,6,-2,4,-2,1,2,-1,4,-4,-6,-5,10,9,5,-10,9,-9,-1,-1,8,3,7,-5,-9,5,7,-10,-2,-4,9,6,-10,-10,-5,-5,2,3,9,-10,6,-6,5,-1,-6,-4,9,-2,-2,-1,1,10,-4,-3,-10,5,-8,8,-6,-10,5,5,3,-4,-8,-4,1,-4,-8,9,-10,1,-5,3,9,4,-9,-8,6,9,-7,7,-6,6,-10,1,1,-9,-2,-10,8,-5,-4,-9],[-4,-6,-1,2,6,1,-5,5,6,-2,6,9,5,1,6,-10,8,3,1,-7,3,2,-2,-4,10,-7,8,-10,-8,4,9,-4,2,-8,-3,1,-5,-4,9,-7,3,-5,10,6,4,-3,6,2,5,2,-7,5,-7,10,8,2,3,-4,3,-10,2,2,1,5,-5,5,3,5,1,-5,-5,10,-6,-1,-6,6,6,-3,3,4,-8,-10,-1,8,-10,-2,-2,5,9,-5,-10,-3,8,-5,6,8,10,-5,-5,-6,-8,2,-1,5,4,4,-10,10,5,-10,-7,-6,-6,-2,4,8,6,-1,8,8,-8,5,1,10,3,6,-6,-6,3,-5,-6,10,-2,9,-9,-3,-1,-8,6,-8,-6,8,7,6,4,9,-6,-1,2,-10,9,7,-2,2,-3,-4,5,2,-7,-3,2,10,3,-8,-3,3,10,2,6,-9,-4,-7,6,-10,8,2,7,9,3,-4,-4,8,10,-7,6,5,-10,9,-4,8,6,3,4,-5,7,-3,6,-8,-5,-5,2,3,4,9,2,-9,9,-2,-4,-10,-6,-4,4,1,7,-10,-5,3,6,-7,-9,-7,-10,1,-7,7,-4,6,-4,-7,2,-10,-2,-6,4,7,2,2,-6,-8,-6,4,7,-7,-8,2,6,9,-4,8,-10,3,-10,6,10,9,-10,-3,5,-9],[-6,5,2,2,10,-6,-5,-2,6,3,3,-1,4,-3,-5,2,-1,5,-2,1,-7,10,-8,10,-4,7,2,-2,1,5,-8,-1,-3,-2,5,5,-2,7,1,1,8,-5,-7,9,4,6,-9,9,-5,-7,6,-2,10,8,7,-7,9,-7,10,-4,8,-4,-9,10,-8,2,-10,-2,-6,-2,-2,-9,-4,5,2,6,-9,8,-5,-2,5,9,-10,6,3,-10,10,4,-6,7,8,10,6,-7,-4,6,-1,-7,-5,-9,-2,1,-8,7,4,2,7,-1,-7,4,5,3,2,-9,2,5,-4,-7,1,-6,7,-7,1,-5,-6,2,-6,7,6,7,1,3,8,10,3,4,-6,-2,1,-5,-6,-6,3,-4,-9,-6,-3,-10,8,-10,-5,-3,-7,8,-4,-5,-2,-7,-6,4,4,-8,1,-7,7,2,-4,-5,-1,1,7,-8,-8,-4,5,-10,7,5,-5,9,-10,5,7,4,-4,3,-10,-10,5,-3,-1,-1,-10,-8,-9,-8,-9,4,7,-4,-5,-4,-8,-5,8,5,-10,10,5,6,7,6,9,4,9,6,-4,1,5,-7,4,4,10,-6,6,-10,8,-10,5,-4,1,8,-10,-9,7,-10,10,6,2,7,-6,10,3,2,6,-2,-3,4,1,10,1,-10,-8,1,10,7,-6,-1,-10,7],[-6,5,-1,-7,-4,10,-9,-6,-9,-8,-6,-7,3,-1,1,-7,7,8,-10,-8,-4,-10,1,1,-5,-10,-3,5,-7,6,-2,-6,-6,-7,-1,-3,-5,7,10,-9,4,-8,-10,-2,-7,6,-1,8,-9,6,-2,-3,3,-5,6,8,5,9,-8,2,-9,-7,-1,10,2,7,4,-10,-10,9,-1,9,4,-9,9,10,-10,-10,3,-8,-5,-8,-7,-7,-7,6,-5,2,-5,2,4,3,10,-2,3,-8,9,9,-8,4,5,1,-6,-7,-6,4,2,4,1,5,-8,-4,10,-2,2,-2,-9,-4,8,6,4,-5,-7,8,-7,-6,5,1,-3,-4,10,-3,10,3,-1,-3,-9,1,9,8,10,10,-1,-1,-3,-3,-10,1,-4,-8,-3,9,-3,-10,10,8,-1,7,7,-10,4,5,-10,4,3,10,-4,10,9,-10,9,3,6,3,10,6,-9,-6,9,2,3,-8,10,8,9,2,-6,9,5,-9,-9,6,6,-6,5,7,-1,9,-4,-3,-5,-2,-10,-4,4,9,-8,1,9,1,7,-4,-4,10,-7,2,9,-2,-6,5,10,3,-1,4,-2,-5,-4,7,-9,-7,-9,-10,-2,9,-9,-7,-8,-8,7,-8,10,7,-10,1,1,-10,6,1,2,-5,-4,-1,3,1,5,8,-3,-9,-3,-6],[10,-5,6,4,5,9,4,-4,-1,-6,4,-2,-2,2,1,10,-4,8,2,-7,3,-8,6,-3,-7,-5,-6,-10,8,-4,1,-2,8,6,4,-8,-7,-6,-8,-10,-2,6,4,4,9,10,-1,-5,-4,8,-2,7,-3,-4,3,-6,1,-3,-9,4,7,7,10,-9,-3,-2,-3,8,-1,-9,-6,-1,6,-1,-1,2,-3,-5,1,5,3,2,-6,4,-1,-6,-7,-4,-1,9,-10,-1,9,5,-2,-5,8,10,6,-3,-6,-3,-8,-5,2,2,-4,6,-8,5,-1,-4,-6,3,8,-8,-7,-9,-8,3,-10,-1,-7,-8,-7,-7,-3,-5,7,10,8,-2,-9,-1,5,6,-8,-10,5,1,2,8,1,4,-3,-3,-2,-7,6,-7,-1,-6,1,7,-3,6,8,-1,-9,-7,7,5,-5,-2,2,3,4,4,5,-1,-10,6,-3,7,1,-6,3,2,6,10,3,1,5,3,9,-10,3,8,-4,9,8,6,9,-9,9,-4,5,2,-3,9,10,-4,7,8,7,-7,-5,6,2,-10,7,5,-1,3,1,7,-3,-4,-3,2,-2,-4,-5,-4,6,-7,-9,-6,-9,-4,4,2,4,-10,10,6,-4,-10,1,-3,7,-9,-2,7,-7,-2,4,-8,1,7,1,-3,6,-3,7,-3,6,9,8,-1],[-6,-5,8,1,3,-1,3,-9,-9,-5,8,9,9,-4,-5,-3,-8,5,2,-7,6,-1,-4,-8,-5,-7,3,9,-7,1,7,-5,2,1,6,1,6,10,4,-2,1,2,-7,-5,3,6,-10,5,1,-8,-3,-10,2,-10,-8,-5,-2,-4,-9,3,7,-4,-2,-10,6,-1,-6,-10,1,-5,2,9,-1,1,1,6,3,4,-10,8,2,-6,2,-9,6,1,7,10,-10,10,6,9,5,-7,-10,2,6,-4,-4,1,-8,5,-2,-5,-7,8,-10,-3,2,1,-4,-8,3,-1,5,-4,-6,-10,4,-5,-10,-2,-7,7,-6,-5,-3,3,3,10,7,2,-3,-4,-8,7,9,8,6,-9,-4,-5,5,3,-5,7,7,5,-4,8,-7,9,4,-4,-3,-5,5,-3,1,10,1,7,-9,-9,-3,-4,-1,6,10,-8,-3,1,-4,-8,-2,-10,-10,-10,-9,-1,-5,-1,-7,4,9,2,6,7,8,6,6,1,-10,4,-10,-2,-1,3,-1,7,10,9,-5,-9,-4,2,-10,-7,-4,2,7,2,6,-9,-4,-5,8,-2,10,5,-6,-3,10,1,-10,-1,-6,6,8,-8,-2,7,-7,-4,-2,-3,5,-9,6,2,-10,5,-6,7,-8,6,-10,-1,-4,5,3,-6,-4,7,4,5,2,9,3,-10]], dtype = "int64")#candidate|523|(8, 260)|const|int64
const_524 = relay.const([True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False,False,False,False,False,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,True], dtype = "bool")#candidate|524|(160,)|const|bool
const_525 = relay.const([[7.029976,-2.679489,4.655007,8.592780,4.683099,-6.714534,-5.648679,5.088389,-3.476215],[-2.724160,6.331468,2.297139,-3.589688,9.028527,6.795607,-4.274708,5.741215,-2.054966],[4.329182,0.721409,6.378999,-5.148211,-3.381657,7.748425,-0.018614,9.236418,0.103398],[-2.084819,5.318299,3.283889,9.016102,-6.686670,-3.457107,6.261061,-3.971665,-2.545129],[5.757937,-6.801846,-9.160839,-2.223439,0.340269,-4.544178,-5.130375,-2.202945,4.692074],[-1.278432,2.223104,9.786139,3.717317,1.479682,1.601693,8.562108,6.056337,-0.666110],[-1.278945,-6.273303,-9.373132,-0.053406,0.214804,2.145252,-8.172749,3.365628,-5.025869],[7.838692,-9.231165,7.037893,8.888691,-8.378788,-6.522772,-6.029857,3.149470,4.462636],[-4.560238,-4.555410,-7.980156,-2.320005,7.884325,6.097584,-9.642812,-3.264413,2.545335],[-2.466609,-3.273202,1.647793,2.175368,6.095908,1.598507,5.859441,3.470511,0.102746],[6.487322,-5.567021,-0.944329,-8.691919,6.441713,8.523361,-3.626103,8.826970,-1.679420],[-9.412410,-9.829696,-9.908361,-2.411795,7.093336,1.259235,4.955001,-1.777838,9.896325],[7.827779,2.586173,-0.024339,-1.943869,-2.479540,-4.107633,-3.457034,6.160250,-1.998875],[-1.292387,9.153875,-5.415708,3.843071,9.408884,-6.843072,-4.730027,-2.666054,-5.848376],[-2.027789,9.588075,-1.556781,0.878776,-1.327664,8.564809,-6.071495,2.733498,-8.284095],[-6.697256,-9.269370,4.848076,-6.482979,-7.340853,-9.431883,-5.683306,2.711913,7.041861],[4.536326,0.780537,7.375517,-9.448232,-4.924711,4.763446,-4.952812,-1.047534,0.606113],[9.073993,0.125916,-4.836922,-1.077571,-6.369604,0.280861,4.278449,-1.549621,-1.067322],[9.733463,7.828231,5.595307,-4.033448,-2.152628,-8.889048,4.513753,-5.888712,6.669169],[-9.084567,0.690175,-4.797222,-9.180583,1.567008,-7.258887,5.943631,-9.118164,3.714301],[7.263094,6.621850,7.296925,-2.999953,1.587513,2.186277,3.660538,-7.014686,3.479801],[0.962757,-1.376891,-8.660948,5.796675,5.328039,0.728540,6.752577,-0.630104,-4.186063],[-3.053098,-6.028574,1.869645,-4.064363,3.575561,4.450057,0.536091,1.413006,7.160737],[-9.665302,1.295740,8.546920,6.185844,8.335052,8.014639,1.903811,-3.991025,-1.513267],[6.230184,3.837931,4.311174,8.463445,5.733440,3.157444,1.808979,6.696955,6.366228],[1.937606,0.942899,-3.694595,-4.540456,-1.426878,-3.085933,3.076562,-4.564916,-3.878978],[5.511699,-6.086595,-5.996619,-4.810230,-2.288137,-7.387215,-5.306048,-7.985167,6.761860],[-3.805247,-4.173020,-9.424483,8.252049,-6.986574,-4.029831,-7.069290,4.876577,7.027759],[-7.604476,9.622655,2.937209,-4.999927,6.770168,-4.762095,2.151732,-5.415561,9.993043],[-0.921983,-2.172029,-8.332447,-7.425041,2.906681,-3.720675,4.401818,-2.085773,6.945512],[7.507504,4.873940,-2.412899,6.315267,-3.715892,9.156583,-2.648012,4.477631,-1.642943],[-3.457955,-5.098078,-7.291720,-4.729667,0.267313,-9.469675,-8.926414,-1.881732,-5.351849],[7.237020,-0.830350,-7.044045,-1.839173,-5.171225,3.881357,1.906227,7.821577,9.755227],[-2.685420,1.620182,-1.119427,-1.260220,6.702161,-0.909676,4.882303,9.989655,-3.459059],[7.172375,6.050433,-2.240226,5.587092,-5.267206,2.847400,-9.665703,3.079011,2.018357],[-0.116350,-2.360015,-3.683948,2.117057,0.909771,4.043975,-6.766613,-2.380494,-9.878421],[1.585460,-4.926801,-2.100241,5.007322,-5.303115,8.333729,9.807220,1.514244,1.139130],[-9.613106,-2.139836,-7.764218,0.763114,-1.702649,-5.846545,-0.423975,-1.238186,9.134716],[-3.914180,-0.299291,6.142597,-9.911887,3.075445,-2.469785,9.535216,6.912635,-8.991462],[-5.687939,0.167431,9.785481,9.917200,0.348039,9.245654,9.701206,4.528220,-0.427157],[5.552131,4.961689,-9.535307,2.350218,9.485468,9.649324,-3.300921,0.660649,3.400918],[3.619848,2.762123,-5.333967,0.484203,-8.259800,1.314322,8.931030,-8.209197,9.221565],[4.876801,-2.320721,-4.357308,-3.631562,5.868307,-0.278988,0.296814,-8.316906,-5.897449],[2.829031,-5.851465,-0.294804,-7.520529,-8.203276,0.357709,8.643929,-4.301028,0.679826],[-0.751410,-6.542728,4.702154,-5.739881,-0.229235,5.424075,8.073174,8.011033,2.074702],[-8.289847,8.947289,-3.480444,-5.971780,2.446458,5.346427,2.425245,2.597225,-8.145255],[-6.030161,7.092116,3.302422,9.759582,2.806585,-7.845032,4.751011,-7.816113,9.931206],[2.258543,-6.993217,-2.010970,2.159023,9.986633,7.024309,3.018455,-7.872014,4.748627],[-2.365833,7.481761,1.515375,-0.033290,-1.674168,9.602109,5.384181,1.827285,-4.911034],[9.457841,-3.119484,-4.541520,-2.283104,9.078517,-0.965057,-3.002599,-6.836012,-0.370691],[4.191589,-9.783201,5.670019,7.413892,-9.879628,-6.525028,8.067895,-1.296864,1.623244],[0.861742,-0.953187,-6.237534,7.527332,4.475436,-0.054481,4.417286,-5.601725,7.155915],[-7.957682,-6.701021,-6.365170,6.093760,0.472401,3.072791,-6.714856,-6.495587,0.708460],[8.365130,-2.633848,-5.093043,-6.230706,-8.230306,7.896571,-0.538451,5.574520,-0.411888],[9.406763,7.772766,9.055907,2.909118,5.522604,9.816270,7.693644,-4.893793,2.099266],[-0.138089,-3.826878,8.883594,8.371703,3.872108,-4.179996,-3.174007,5.746421,-5.245017],[-2.918442,-2.657438,-6.888638,-1.216416,-1.293245,9.034505,-6.173423,4.115394,-2.150168],[-2.206063,-8.163954,-7.776341,-5.679166,2.626934,-0.680171,-4.018343,7.395452,1.844090],[-6.954699,9.572487,-2.087066,1.232335,3.324403,3.249877,5.894320,1.159250,-4.608272],[-2.475695,-2.934339,-7.106747,-1.680306,1.284523,-9.190410,1.245157,-9.361389,6.905209],[6.201908,4.037549,-7.467073,-2.384104,8.484768,0.033813,-3.232023,-0.438426,0.171537],[4.590031,9.530252,-1.501131,1.637544,1.533577,-5.212089,-6.791968,1.528272,-3.687169],[7.863434,5.087790,-4.763304,-9.018292,-6.536622,7.932827,6.137208,7.874340,2.620616],[-1.295453,1.369580,5.543824,4.012301,3.777670,6.562322,-3.653914,0.046435,2.446153],[-6.212697,-0.488601,-9.551664,5.369572,-8.759682,3.258364,-4.191908,9.784562,0.263339],[1.476031,-1.935583,8.266466,2.284714,-8.486593,1.705942,-4.215785,2.124495,-4.623668],[8.264928,-0.188114,6.120334,7.473379,0.607113,8.493706,1.740934,4.069655,-4.818024],[-3.530879,-9.981481,-8.527839,-0.819250,-5.689017,8.122164,-3.714845,-4.468513,-6.388710],[-7.498070,2.157321,-6.969969,-5.576768,0.611732,-8.247435,-0.764357,2.653753,7.837330],[-2.653800,2.518971,-2.441538,5.682657,8.782904,0.455262,3.480173,4.567160,5.279230],[-2.664481,-6.111003,-1.715751,0.949361,0.657613,4.943709,-6.645779,-2.959888,-6.455843],[-8.782858,7.851812,7.681409,8.866447,-4.355357,7.032549,2.604994,6.428720,-0.603850],[-4.680567,-6.917251,-6.033981,-0.393952,9.163602,-2.043958,6.998110,-1.884914,-3.324974],[6.475339,-7.469839,8.070885,-6.789826,9.981729,-7.264435,0.968518,2.518204,-5.467376],[1.891477,-2.697960,5.146475,4.749597,7.896171,-8.622468,5.731902,-5.753440,3.949937],[-9.088162,-7.152272,-4.686575,9.154392,1.946774,5.868503,-3.157164,-1.350700,-1.042367],[-3.679014,2.703655,1.761868,2.729513,5.195435,-9.908324,9.096680,-1.924992,3.704316],[-3.940350,-0.386187,7.146502,2.819538,2.815800,6.001921,-3.858168,3.110702,7.395995],[6.620154,0.965634,-3.877586,8.526284,-3.903334,2.005838,-6.749836,-6.383292,5.580863],[5.069783,-6.381660,8.885108,-7.431894,0.501725,4.281463,-3.951738,5.707302,9.931518],[9.902787,-1.731408,8.206434,3.613256,4.449338,-4.537506,-6.728274,-6.404141,-7.697519],[-3.840929,9.728196,-1.494525,-6.847407,8.320548,6.980412,-1.570562,6.184279,-9.009439],[-0.284161,7.881084,-7.398546,7.987405,4.424923,6.072140,7.139525,-8.133093,2.171171],[8.015983,1.862293,3.198594,7.245169,4.039328,-4.575627,2.350567,-3.856300,9.637420],[7.544329,5.823092,-5.211437,-7.581895,-7.864969,-4.354810,-6.119339,8.098822,-4.105986],[-0.139326,-7.873365,-0.689369,6.843504,-0.980949,-6.790883,-9.451416,-4.014255,-7.330756],[-1.874992,-7.776041,6.565431,-6.364422,-3.334136,5.179594,5.447354,-9.550120,-5.079738],[-7.810656,2.032174,3.607968,-7.691008,5.101572,3.087018,6.123072,-6.794491,-0.756074],[-6.976389,8.057535,-0.180201,9.876718,-0.395448,-2.919692,9.404019,8.448389,9.190529],[-5.316380,-7.565727,-4.330278,-1.267572,-0.928716,0.084018,-5.615387,5.918290,-6.124213],[9.702307,6.895390,0.082652,-1.489394,3.291601,7.100864,-3.426502,-8.742204,2.721689],[-8.974456,5.265152,5.454472,6.069378,-8.422940,9.497062,-3.785347,6.422860,5.590616],[2.787339,7.239861,6.211248,7.281566,-4.491101,-3.674504,-4.455863,1.970268,2.875544],[-5.219153,2.449381,-2.445106,9.316032,8.876369,-5.999812,-5.045871,-8.327001,-4.720148],[-9.427247,9.301377,-4.639635,3.773908,-2.723128,-6.508793,1.320364,-3.558200,4.440852],[9.618233,5.617099,9.380654,9.417845,-8.111539,4.524154,0.697192,-4.059169,8.639861],[4.042877,-3.988368,0.756072,1.814186,9.825190,2.483231,-8.081537,-9.595123,6.691555],[-2.935994,4.019262,-5.328738,3.816417,-8.859866,-1.102679,-5.515480,-0.583209,1.448717],[0.137195,-2.789570,-8.108270,-3.541459,0.456016,6.610247,-5.820277,3.319338,-5.224371]], dtype = "float32")#candidate|525|(99, 9)|const|float32
call_522 = relay.TupleGetItem(func_272_call(relay.reshape(const_523.astype('int64'), [10, 13, 16]), relay.reshape(const_523.astype('int64'), [10, 13, 16]), relay.reshape(const_524.astype('bool'), [160,]), relay.reshape(const_525.astype('float32'), [99, 9]), relay.reshape(const_523.astype('int64'), [10, 13, 16]), ), 0)
call_526 = relay.TupleGetItem(func_278_call(relay.reshape(const_523.astype('int64'), [10, 13, 16]), relay.reshape(const_523.astype('int64'), [10, 13, 16]), relay.reshape(const_524.astype('bool'), [160,]), relay.reshape(const_525.astype('float32'), [99, 9]), relay.reshape(const_523.astype('int64'), [10, 13, 16]), ), 0)
func_382_call = mod.get_global_var('func_382')
func_384_call = mutated_mod.get_global_var('func_384')
const_532 = relay.const([[-8.749321,-7.170090,-5.661624],[9.812938,-8.193210,5.682250],[-4.882246,-2.322651,-7.625606],[-1.410354,3.142404,6.377157],[8.843453,6.464116,2.064767],[-2.143371,-6.435643,-1.638809],[4.705154,-1.506800,-8.085503],[8.417251,6.869889,-2.304153],[-8.146286,-5.536822,-2.585195],[-3.075537,-7.489386,0.502940],[-9.043673,-8.092075,-6.694270],[4.181356,-0.492587,7.548198],[3.458803,1.666051,-8.019131],[-0.552998,0.203135,2.847426],[9.009828,1.837642,2.956432],[3.132737,3.906779,-3.176204],[-1.034580,3.200835,4.128264],[2.942968,2.021350,-1.569892],[4.397490,-1.570975,8.009667],[-5.909582,9.368187,-9.359931],[-7.639209,-7.161334,8.482503]], dtype = "float32")#candidate|532|(21, 3)|const|float32
call_531 = func_382_call(relay.reshape(const_532.astype('float32'), [1, 7, 9]))
call_533 = func_382_call(relay.reshape(const_532.astype('float32'), [1, 7, 9]))
func_127_call = mod.get_global_var('func_127')
func_130_call = mutated_mod.get_global_var('func_130')
call_534 = relay.TupleGetItem(func_127_call(relay.reshape(const_525.astype('float32'), [9, 11, 9])), 0)
call_535 = relay.TupleGetItem(func_130_call(relay.reshape(const_525.astype('float32'), [9, 11, 9])), 0)
uop_542 = relay.rsqrt(uop_501.astype('float32')) # shape=(8, 8, 11)
func_127_call = mod.get_global_var('func_127')
func_130_call = mutated_mod.get_global_var('func_130')
call_561 = relay.TupleGetItem(func_127_call(relay.reshape(const_525.astype('float32'), [9, 11, 9])), 0)
call_562 = relay.TupleGetItem(func_130_call(relay.reshape(const_525.astype('float32'), [9, 11, 9])), 0)
output = relay.Tuple([call_522,const_523,const_524,const_525,call_531,const_532,call_534,uop_542,call_561,])
output2 = relay.Tuple([call_526,const_523,const_524,const_525,call_533,const_532,call_535,uop_542,call_562,])
func_563 = relay.Function([var_500,], output)
mod['func_563'] = func_563
mod = relay.transform.InferType()(mod)
mutated_mod['func_563'] = func_563
mutated_mod = relay.transform.InferType()(mutated_mod)
var_564 = relay.var("var_564", dtype = "float64", shape = (8, 8, 11))#candidate|564|(8, 8, 11)|var|float64
func_563_call = mutated_mod.get_global_var('func_563')
call_565 = func_563_call(var_564)
output = call_565
func_566 = relay.Function([var_564], output)
mutated_mod['func_566'] = func_566
mutated_mod = relay.transform.InferType()(mutated_mod)
var_570 = relay.var("var_570", dtype = "float64", shape = (9, 16, 12))#candidate|570|(9, 16, 12)|var|float64
var_571 = relay.var("var_571", dtype = "float64", shape = (9, 16, 12))#candidate|571|(9, 16, 12)|var|float64
bop_572 = relay.maximum(var_570.astype('float64'), relay.reshape(var_571.astype('float64'), relay.shape_of(var_570))) # shape=(9, 16, 12)
output = relay.Tuple([bop_572,])
output2 = relay.Tuple([bop_572,])
func_581 = relay.Function([var_570,var_571,], output)
mod['func_581'] = func_581
mod = relay.transform.InferType()(mod)
mutated_mod['func_581'] = func_581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_581_call = mutated_mod.get_global_var('func_581')
var_583 = relay.var("var_583", dtype = "float64", shape = (9, 16, 12))#candidate|583|(9, 16, 12)|var|float64
var_584 = relay.var("var_584", dtype = "float64", shape = (9, 16, 12))#candidate|584|(9, 16, 12)|var|float64
call_582 = func_581_call(var_583,var_584,)
output = call_582
func_585 = relay.Function([var_583,var_584,], output)
mutated_mod['func_585'] = func_585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_705 = relay.var("var_705", dtype = "uint16", shape = (13, 2, 4))#candidate|705|(13, 2, 4)|var|uint16
var_706 = relay.var("var_706", dtype = "uint16", shape = (13, 2, 4))#candidate|706|(13, 2, 4)|var|uint16
bop_707 = relay.less(var_705.astype('bool'), relay.reshape(var_706.astype('bool'), relay.shape_of(var_705))) # shape=(13, 2, 4)
output = bop_707
output2 = bop_707
func_716 = relay.Function([var_705,var_706,], output)
mod['func_716'] = func_716
mod = relay.transform.InferType()(mod)
var_717 = relay.var("var_717", dtype = "uint16", shape = (13, 2, 4))#candidate|717|(13, 2, 4)|var|uint16
var_718 = relay.var("var_718", dtype = "uint16", shape = (13, 2, 4))#candidate|718|(13, 2, 4)|var|uint16
output = func_716(var_717,var_718,)
func_719 = relay.Function([var_717,var_718,], output)
mutated_mod['func_719'] = func_719
mutated_mod = relay.transform.InferType()(mutated_mod)
const_800 = relay.const([[[-5,-7]],[[7,8]],[[-3,-9]],[[7,3]],[[-6,-3]],[[1,-7]],[[5,5]],[[-1,5]],[[4,-3]],[[-10,-4]],[[-1,3]],[[6,8]],[[-4,4]],[[-2,-4]],[[-4,6]],[[9,-1]]], dtype = "int16")#candidate|800|(16, 1, 2)|const|int16
const_801 = relay.const([[[-3,-5],[9,1],[4,5],[9,4],[7,-4],[-2,-9],[4,-10],[-1,7],[10,-3]],[[9,-1],[1,-4],[9,4],[5,6],[-8,6],[1,5],[10,9],[5,1],[8,-9]],[[-1,-9],[-3,4],[-3,-5],[-3,1],[6,-9],[-9,6],[-10,1],[10,7],[3,10]],[[1,3],[-4,6],[-1,3],[-4,-4],[3,-10],[7,-1],[9,6],[5,7],[-2,1]],[[1,5],[-4,-9],[-3,5],[3,8],[-5,6],[-8,6],[-2,3],[-5,10],[-2,8]],[[-5,8],[10,-3],[9,2],[2,-9],[-4,-6],[-10,-8],[3,-1],[-5,5],[-3,-6]],[[-6,-5],[-2,-8],[7,-7],[-2,5],[1,-7],[5,1],[6,-8],[9,-2],[-4,-10]],[[6,-1],[3,1],[-10,-9],[4,-7],[-3,-7],[-8,-10],[8,4],[10,10],[-1,-6]],[[8,2],[-8,3],[7,10],[-10,-1],[-3,-5],[-4,5],[-2,8],[8,8],[3,-6]],[[-10,-4],[-8,-9],[5,-7],[2,1],[3,-9],[-1,-6],[1,4],[5,9],[-10,-2]],[[-9,-7],[2,3],[7,1],[-10,-5],[-7,1],[-7,4],[-7,-7],[7,-5],[2,-1]],[[7,-10],[7,-6],[-2,-9],[2,-7],[-5,10],[3,10],[7,-6],[-9,-3],[2,5]],[[-5,-6],[10,3],[5,10],[10,-3],[7,5],[-9,5],[8,8],[-1,9],[2,2]],[[1,3],[-7,6],[-4,4],[-2,-9],[10,3],[-10,-9],[-2,9],[-6,-7],[8,2]],[[4,7],[-9,-1],[-10,4],[-2,7],[5,-5],[6,2],[-6,-8],[-8,2],[-10,-2]],[[-9,-2],[3,8],[-2,-1],[3,-6],[1,9],[-9,-2],[7,1],[-4,-8],[5,-4]]], dtype = "int16")#candidate|801|(16, 9, 2)|const|int16
bop_802 = relay.not_equal(const_800.astype('bool'), const_801.astype('bool')) # shape=(16, 9, 2)
func_563_call = mod.get_global_var('func_563')
func_566_call = mutated_mod.get_global_var('func_566')
const_806 = relay.const([[1.364920],[1.987262],[9.848253],[-7.275265],[6.888808],[4.025768],[-0.570641],[9.764232],[6.160312],[-9.524509],[-1.720641],[2.848947],[-0.414781],[-6.804166],[0.460261],[-8.625752],[8.813764],[-3.667183],[-0.439118],[9.544347],[-5.039307],[-3.129285],[-3.109899],[8.468963],[7.867992],[-0.685508],[-5.907941],[-1.143858],[-7.446322],[-8.762638],[4.519487],[-1.781627],[-4.847750],[3.888575],[-7.615373],[-1.540786],[-7.948808],[1.457640],[7.289480],[-5.818259],[-9.477328],[-7.207712],[-0.930677],[-3.265749],[-6.597719],[-8.560762],[2.495667],[-2.942633],[3.206553],[-9.187945],[-0.484892],[2.250528],[-5.467600],[9.949765],[5.703261],[-1.794190],[8.145426],[8.355176],[4.248260],[-2.548062],[-0.479277],[-7.515507],[-2.346211],[0.014619],[-7.216335],[5.834490],[-0.979935],[1.906721],[8.045696],[-7.851494],[6.924085],[5.982166],[-9.788833],[-4.111135],[-6.541865],[9.414960],[-8.436264],[-3.665752],[-0.487253],[-8.859500],[-2.634217],[-0.531006],[-0.005728],[3.181087],[-9.432692],[9.123832],[-1.803851],[-7.570589],[0.785432],[-2.231946],[-9.976571],[-7.990279],[9.248988],[9.276947],[-9.737995],[9.503711],[5.714544],[3.163533],[3.225391],[9.614741],[3.780041],[2.387089],[0.439571],[-7.524331],[8.067988],[-8.794391],[-1.305675],[-6.172091],[-1.603883],[2.675605],[2.872476],[6.790330],[-2.065526],[4.602964],[7.147698],[-0.278057],[7.379257],[-2.196490],[8.939930],[7.474876],[1.092738],[-7.486681],[-4.182664],[-2.485656],[-9.490794],[1.222279],[-6.758196],[-7.008862],[8.910903],[-2.779324],[0.764497],[1.308817],[9.241198],[6.656087],[-2.956399],[9.310986],[9.320287],[7.891585],[-7.544953],[-4.225592],[-6.055531],[-0.244792],[-5.582996],[8.572455],[-1.132857],[-4.004278],[-1.859383],[-0.661462],[9.104338],[1.967193],[-2.915037],[3.683239],[-6.386349],[9.848994],[-5.312367],[-9.335830],[3.153615],[7.376551],[2.770567],[-3.856271],[0.632374],[0.846923],[-1.757976],[0.204321],[-1.014956],[-3.798609],[2.512371],[-7.121214],[-4.531341],[-6.414963],[3.782257],[5.607393],[6.405416],[-8.142863],[-7.476710],[4.300977],[7.333947],[0.879125],[-7.694532],[6.657231],[8.641152],[-6.425984],[3.854768],[7.652727],[-4.616713],[1.297304],[-2.801369],[6.813719],[8.447568],[-9.455916],[-6.678755],[6.611350],[6.568728],[0.127299],[0.532070],[-5.291541],[-0.272146],[7.759179],[8.913095],[-3.765919],[-6.608852],[2.584981],[-0.671463],[6.410058],[-3.401348],[8.459817],[0.611421],[-6.587782],[-4.893264],[-5.126046],[-8.232298],[-9.337741],[2.647140],[-5.401009],[-5.969517],[2.236351],[-6.033086],[1.771142],[2.231929],[3.598077],[7.844935],[-9.302408],[8.621893],[0.986120],[-6.287604],[-8.857942],[-1.831145],[-0.111430],[-7.359934],[-5.112859],[9.138662],[-5.116281],[-9.728928],[-4.959078],[-7.356498],[5.516302],[6.003056],[-5.790666],[-4.449286],[-0.499228],[4.556876],[6.585760],[3.975817],[-0.380965],[-2.495853],[9.461269],[-8.962823],[-2.618398],[7.138712],[-3.258830],[-4.629811],[8.655087],[4.811847],[-3.209294],[1.553577],[-9.494090],[8.354432],[-3.012643],[9.069173],[5.400235],[4.770267],[0.676616],[-0.466762],[-8.308807],[8.189893],[8.323659],[-4.589914],[4.683902],[-0.163760],[3.334469],[-0.234322],[-9.147095],[5.884080],[-7.234028],[7.210477],[5.351759],[-4.562348],[-5.148970],[-5.207339],[1.464864],[0.083972],[4.250231],[7.251996],[3.477000],[-8.392487],[-3.870459],[4.173618],[3.097238],[7.096212],[9.775386],[6.420971],[-8.033418],[-1.776030],[-7.421072],[9.481604],[-2.347414],[-6.451618],[2.534522],[-1.590763],[5.844261],[6.032808],[2.814633],[-5.443139],[-4.394418],[-6.023641],[0.591394],[-5.835607],[-9.209279],[-2.840304],[4.779881],[-2.011733],[5.075412],[4.225171],[-1.317531],[3.231298],[-8.867868],[2.690648],[7.673823],[-3.011005],[-0.297875],[-7.127340],[-6.310864],[5.336548],[1.985943],[6.255549],[0.160599],[-8.789268],[-0.308297],[1.408591],[0.925227],[-9.898056],[-2.567775],[8.028879],[-6.676223],[8.561605],[-1.912479],[-7.663969],[-3.310856],[3.328845],[4.321582],[-9.654160],[-2.855849],[7.306583],[-8.978410],[-2.318762],[-8.406251],[5.741016],[-0.011643],[-5.751921],[0.637210],[7.197807],[1.641932],[-0.904260],[4.309429],[7.652621],[1.141197],[-7.896604],[-9.056666],[-9.760884],[-9.690833],[-6.850244],[-7.245275],[9.988922],[-3.800728],[1.961522],[1.008218],[-8.165144],[-2.000597],[-5.868140],[-0.493306],[-6.244276],[7.528555],[-6.961402],[5.210857],[-0.844875],[4.871071],[-5.484831],[1.133616],[-4.481679],[4.104791],[7.842285],[6.428570],[-3.390964],[-5.229221],[4.846715],[-4.954292],[-8.487993],[-8.709047],[-7.185106],[-9.767454],[-7.686939],[8.881089],[4.353003],[-8.841036],[1.452912],[7.317667],[7.435156],[-3.115802],[-7.556664],[-6.730818],[3.675739],[2.555324],[3.761051],[-5.405662],[8.183831],[-5.570410],[-4.362263],[-0.838382],[-9.738106],[-9.776265],[8.599409],[-4.671704],[-1.352985],[-7.066470],[-5.715869],[-6.117777],[2.614990],[3.204479],[-5.350245],[-4.803224],[-3.143014],[6.219485],[1.577036],[-9.035259],[-5.682435],[2.510052],[-6.397071],[-0.809750],[-1.554933],[8.742749],[-8.001699],[-4.222536],[-4.471900],[-5.251192],[-2.963265],[-4.935600],[7.297413],[6.098299],[-6.535181],[3.052751],[-6.586430],[-2.806923],[-6.823544],[1.002026],[9.156407],[6.668031],[0.935582],[5.066593],[-2.539116],[-8.361905],[0.341438],[9.434496],[-0.997659],[0.365767],[0.875750],[6.565826],[4.772557],[-0.770492],[1.382259],[-7.453106],[4.966476],[-3.460805],[7.918883],[-2.615961],[8.966074],[-1.584476],[4.365130],[3.908846],[9.488613],[-6.785273],[9.821714],[-9.905986],[0.611016],[0.693906],[8.193057],[5.654191],[4.412262],[2.437961],[-9.276072],[-9.276127],[-7.783957],[-1.763470],[0.456220],[4.582315],[-1.030706],[3.175413],[0.419387],[-0.578417],[-6.825268],[1.944774],[7.698264],[-3.307957],[-5.846531],[2.448139],[5.449811],[-3.180757],[0.150164],[-7.097502],[6.846467],[7.469532],[9.970412],[1.331055],[-1.270172],[-7.303611],[3.226175],[-0.698304],[-1.639902],[-1.160491],[-6.299702],[4.225317],[6.166589],[1.237428],[-3.443293],[0.821133],[3.536710],[9.493441],[7.494865],[-5.909433],[-7.517812],[2.473270],[-2.130862],[-2.793721],[-4.745757],[-8.183007],[4.452787],[5.491421],[4.868357],[7.576752],[-6.986388],[3.101251],[8.334322],[-8.902409],[-5.485443],[-0.947163],[5.076000],[-2.908753],[-2.611366],[5.982171],[2.459893],[0.037649],[1.243081],[-4.041787],[-4.007245],[8.250856],[-7.842239],[-5.568731],[1.233060],[1.636135],[7.717740],[4.260982],[5.335786],[9.871688],[-5.328247],[-2.113434],[-5.444513],[-7.750582],[-0.192964],[-8.660365],[-9.721084],[4.630467],[0.396254],[-2.901090],[0.536073],[-9.140513],[-5.190193],[8.420886],[7.247234],[5.883782],[9.184552],[-3.223588],[9.771725],[-4.442703],[4.482761],[-9.201308],[-8.836419],[-9.149213],[-3.038205],[-7.500282],[-8.850475],[-7.328467],[-0.893031],[-5.426758],[-7.521035],[-4.663407],[-1.634595],[6.817893],[0.813107],[9.578591],[6.297587],[2.076085],[-9.943541],[5.604710],[-2.339189],[-6.979317],[-7.451421],[5.330493],[-4.398626],[-4.515022],[8.353150],[9.846345],[4.869908],[-3.704921],[-8.905386],[3.794787],[2.535616],[5.241883],[1.698148],[-6.168390],[-1.420006],[-3.509188],[-7.935780],[-2.760665],[-6.172307],[4.762800],[2.401005],[1.793881],[-5.422540],[0.222005],[7.260163],[-0.785525],[5.280042],[-5.408783],[-6.766827],[1.564630],[7.959645],[5.692281],[8.676331],[9.249971],[-7.475435],[-1.546147],[2.753989],[6.881802],[1.401050],[-6.666311],[2.273681],[7.539499],[-1.690771],[5.337076],[3.043804],[5.974390],[8.215154],[-6.708916],[-0.749295],[-5.844763],[-9.354968],[-4.109354],[-0.955584],[1.705529],[9.907525],[-4.495107],[-1.262671],[0.765499],[-4.408153],[6.753360],[4.827639],[-0.335836],[1.231791],[-7.881660],[-3.168025],[3.595638],[8.858995],[-2.264182],[9.181939],[4.962144],[1.466564],[5.702262],[4.005106],[-2.043912],[-0.955146],[3.221711],[6.157098],[-0.081941],[-7.295044],[-1.404267],[9.351167],[-9.058423],[-0.437838],[-8.679311],[-2.451524],[-6.097297],[3.395400],[-1.586728],[-7.840967],[-9.991166],[-0.914380],[1.682408],[-7.720964],[6.145028],[-6.439140],[2.958987],[6.986782],[-9.114165],[2.698998],[1.110511],[-9.951838],[4.388894],[5.198279],[-4.658934],[9.739698],[-8.088011],[0.838380],[4.638150],[4.611194],[-3.728282]], dtype = "float64")#candidate|806|(704, 1)|const|float64
call_805 = relay.TupleGetItem(func_563_call(relay.reshape(const_806.astype('float64'), [8, 8, 11])), 3)
call_807 = relay.TupleGetItem(func_566_call(relay.reshape(const_806.astype('float64'), [8, 8, 11])), 3)
func_272_call = mod.get_global_var('func_272')
func_278_call = mutated_mod.get_global_var('func_278')
const_820 = relay.const([-7,-1,-10,-5,-8,5,9,4,-7,6,-4,9,8,-8,-2,-6,-10,10,-3,-10,9,2,9,9,-4,5,4,2,9,-6,-1,-10,1,-2,6,7,7,3,-3,3,-7,-9,-2,5,-3,4,5,-6,5,1,9,-7,5,-4,10,10,-6,2,-2,-1,10,-10,9,-1,3,6,-8,-8,-2,-5,-10,4,6,3,-5,-2,10,-9,-7,5,-10,1,5,5,4,10,5,-7,9,8,6,6,1,7,6,9,7,8,-1,-7,-2,-8,-10,7,-7,-3,4,-1,7,-4,-1,2,5,10,-2,-3,-6,3,-8,-7,-5,7,10,-6,-7,-1,-5,8,5,-8,-5,-3,-3,-8,9,5,-6,5,2,4,-2,-2,9,7,-10,-1,7,7,-4,-1,10,9,8,-1,-5,-2,1,-6,-5,-2,-9,9,1,-5,1,-8,-2,9,10,2,5,4,9,-6,-10,-9,-5,4,6,-1,-7,-2,-3,-3,-10,-8,-1,3,-10,-6,7,-1,6,8,-9,1,-5,7,1,-3,-4,-8,-3,7,-9,-8,-8,9,-6,-6,-6,-1,9,1,9,-2,6,8,-10,5,-7,6,-3,9,-1,-4,-3,8,-4,-1,6,6,3,1,8,-3,-8,10,3,1,-6,1,-2,9,-1,-1,-6,-6,10,4,-3,4,-3,1,6,10,-6,1,-9,4,-3,-6,1,-9,9,-10,10,4,-10,1,-6,10,-1,10,1,1,-8,-6,9,1,-9,-2,6,-4,10,4,6,8,5,9,-1,-4,9,9,5,8,10,5,-6,4,-6,-10,4,-2,-7,9,-1,-8,-10,10,6,1,8,1,7,-7,-6,5,-6,-3,8,-10,2,1,4,7,-7,-3,-4,-8,2,2,-4,-1,4,5,3,-2,3,7,5,5,-2,-9,-5,-7,-2,-8,-8,9,3,7,-1,-3,2,-2,-5,9,7,8,-4,-10,6,5,9,9,9,-9,4,-3,-3,-5,1,-10,3,10,-2,4,-2,-1,4,-4,5,1,7,-8,-10,1,-9,10,8,9,-2,-8,-1,-5,1,8,-3,7,-5,-2,-10,-6,5,-10,8,3,-2,4,9,10,1,8,-9,5,4,10,-2,4,4,10,-1,4,5,-9,-9,6,7,3,-1,-1,-6,10,7,7,5,-3,-2,2,-5,2,9,4,-4,-3,5,-9,-5,1,2,-3,-7,7,-3,7,-1,-4,8,8,4,4,-7,2,-3,-4,-5,4,-5,-9,2,-8,6,-3,7,4,-7,3,-5,-8,2,-5,-10,6,2,4,3,4,2,-4,3,2,-8,3,-10,4,-4,-8,8,10,1,-3,-5,-4,4,-6,5,6,3,-9,-2,-6,1,-3,-7,-10,-6,-3,-10,8,6,-3,-5,6,-10,-2,7,-1,3,-9,8,1,2,6,2,6,-9,-8,-7,2,-9,-2,-4,7,6,10,-7,7,-6,1,-7,7,-7,-2,-1,-4,1,-9,6,4,3,-7,8,10,-8,-3,10,-3,-7,3,-1,10,-10,9,-6,1,9,-10,3,1,2,6,-4,-3,6,-10,-3,-9,1,1,10,-9,-2,-6,-10,6,-10,8,-3,-8,-6,-8,-9,4,-6,7,8,5,-6,3,-9,-10,3,-5,-6,7,-1,3,-3,-2,-1,-5,7,-9,2,-9,-10,1,6,10,-9,3,4,-2,2,-6,-2,-2,-2,2,-2,6,-9,-5,-3,4,-4,3,-5,-6,8,-10,4,9,-4,1,-1,7,-6,-2,1,-2,-7,4,-10,10,2,-8,3,-2,8,2,4,9,6,-10,9,2,7,-7,6,-6,-9,-5,-4,9,2,-3,-3,-8,-4,-5,-10,-7,5,-5,3,-3,8,5,7,-3,-7,7,1,-10,4,5,6,-1,10,-6,-7,-3,7,6,4,-4,10,-3,-7,-3,2,-4,-4,9,-1,4,4,-5,-5,-4,4,10,-1,2,-7,8,-5,-8,-7,2,4,8,-3,-10,5,9,-3,-3,1,-2,-4,-10,5,9,-8,2,7,1,-4,-2,4,10,10,2,3,-2,4,-6,-3,-3,-6,-3,4,6,-5,-8,-8,6,4,-1,-2,3,-6,-7,4,10,-4,6,6,-7,-8,10,3,-6,-4,5,-10,3,7,-5,-9,-4,9,-10,-2,6,2,-10,1,-4,-2,2,7,-10,-5,-9,1,9,3,-4,8,7,-5,-7,-2,5,9,-8,3,3,2,-6,7,-2,7,-7,8,-7,2,3,-4,-8,6,-1,3,-8,-8,-7,-2,-7,-6,5,10,-9,7,-6,8,4,-9,4,-9,-6,-7,-1,-3,9,3,-5,8,-5,6,6,5,-8,4,-8,-4,-1,-9,-1,3,4,-4,10,3,-4,5,2,9,4,-2,8,7,9,4,-10,10,2,1,5,-7,2,1,2,4,5,10,-1,3,-5,-2,3,-7,7,8,3,-2,-7,-8,5,5,-7,-3,2,-10,2,-9,5,3,5,5,7,2,-2,-1,10,7,2,8,6,10,10,-5,7,-9,9,10,-3,8,-3,-4,-8,2,1,-4,8,4,-5,-4,-9,5,-9,4,9,9,4,7,-4,-9,-9,-9,5,6,4,-2,-5,1,-4,-5,-8,5,8,3,10,-5,3,5,-9,9,1,6,-10,9,3,-5,10,4,-1,-8,-9,10,-8,1,8,-1,-3,6,-8,-5,10,-6,9,6,7,1,-8,-7,9,-6,-9,-9,-7,-8,-9,8,5,10,3,6,-4,7,9,10,3,-7,2,9,-1,4,9,1,-5,-10,9,-10,2,-4,-1,-10,-8,-1,3,10,6,-5,-6,-1,-7,9,4,8,-5,8,7,-4,-5,5,-6,5,9,-9,6,5,-8,1,2,-9,-2,-6,-4,-3,-5,8,-5,3,3,-10,9,-4,10,10,-5,-10,7,5,4,2,-8,3,5,1,6,-7,-7,-4,6,-10,7,7,5,5,2,1,8,-5,-9,-1,8,-2,10,-3,-3,7,-2,-2,-8,6,-4,10,-10,7,1,-4,9,-3,3,-5,-8,6,9,-5,-7,-7,-8,7,1,-7,5,3,-9,-2,2,-1,-4,-2,-7,9,10,8,-4,5,-2,-10,-6,-10,-9,9,4,4,9,2,-5,-1,-9,-2,-8,8,1,-9,-9,10,-3,-1,-9,6,3,3,9,10,6,10,-8,6,-4,-6,3,-3,7,5,1,3,1,1,-1,-9,4,3,-8,3,1,9,5,2,7,7,1,3,7,6,-4,7,6,2,-8,-8,-2,4,-10,-1,-4,-7,8,8,4,3,7,-6,1,-7,-2,-9,3,-6,-10,1,3,8,8,7,10,-9,-2,-1,4,-4,-4,-5,-8,9,-5,-3,-6,10,-9,-5,-8,5,3,7,-4,6,-5,5,1,3,-2,-4,9,4,2,-6,-8,-2,-9,-8,9,-10,-4,-8,-9,-1,-9,-1,9,-8,-9,-1,7,7,2,8,-9,6,7,8,-8,9,4,-8,9,3,-2,4,10,7,5,5,-6,-9,6,-9,8,4,9,-6,7,4,-4,1,10,-5,-3,-10,1,4,-7,-4,10,-9,-9,7,2,7,10,1,-8,-6,9,10,5,9,-6,9,2,-6,10,-7,5,-2,4,6,10,-2,7,-10,7,-6,-6,-10,-2,-7,8,-9,-10,9,-2,5,-6,-2,-9,7,4,9,-10,-8,3,-7,1,-5,4,-4,-10,10,-6,-1,7,-2,-5,2,-8,-8,-6,-4,-10,8,5,-10,-1,-3,5,3,-3,-4,6,4,6,6,8,9,-3,1,8,-2,-4,-7,8,2,7,-2,3,8,9,-3,6,-4,-10,-6,6,9,-5,-8,10,-6,7,-9,-5,2,-1,-2,9,-3,-9,-9,-8,-5,-7,-6,5,4,-2,-2,10,-5,-1,7,1,10,10,4,-8,-3,-2,-1,-2,6,-10,5,4,-2,-4,-6,-10,4,-8,1,5,-2,-2,-1,10,10,-10,9,-2,-1,-9,-1,3,-2,-4,-6,7,-8,-1,-3,10,10,-6,-4,-9,7,9,-10,5,-5,4,-2,9,8,-10,-2,4,-10,10,-1,6,6,5,-10,-7,1,-6,2,4,-9,1,-5,-3,5,9,-10,-3,-10,4,1,5,-3,-7,-8,5,7,1,2,7,7,3,-10,-6,7,2,-9,1,8,7,1,5,7,-10,-10,-8,4,4,10,-6,-10,-4,-5,-3,5,1,9,5,-4,8,-3,-2,-8,3,-6,4,7,-5,4,-5,7,6,4,5,-6,3,-7,-6,-9,2,8,-3,3,7,-7,6,-6,9,2,9,7,7,7,9,-2,3,-9,7,6,9,4,-7,-8,2,2,-9,-3,3,2,6,-4,-6,-5,5,4,-5,9,-9,-10,-8,2,9,6,5,-3,1,-10,-10,-7,8,-9,10,-7,-7,-9,7,-4,9,8,7,-5,-1,-5,-3,4,-4,6,-10,-2,-10,-4,4,-3,10,-9,7,7,-2,-6,7,-6,-4,-6,5,-3,-10,-2,-5,-9,10,-5,-3,-4,-7,10,2,-4,8,1,7,-10,1,3,-9,-4,-2,6,1,10,2,-9,-6,3,2,-9,7,8,-3,5,-5,3,-8,-5,-8,-5,3,-7,9,-2,3,2,3,10,-2,10,-6,7,1,-2,-6,-1,3,9,5,2,5,10,5,5,-8,7,7,9,5,-7,10,-2,-6,-4,-2,-1,-10,4,10,5,4,2,-5,9,2,-2,6,5,3,-2,-6,2,3,-3,9,3,-9,5,7,5,2,2,-3,7,-6,3,-4,-2,-4,10,-5,7,9,10,-5,-5,-2,4,-4,1,10,6,10,-10,4,-6,-4,-5,-4,-9,7,8,1,-7,1,-8,4,6,3,8,6,8,-8,5,5,-1,-9,6,-8,-8,-2,1,-2,2,3,-5,-6,10,-6,-6,-10,7,-5,-3,5,4,-8,7,-6,-5,1,-9,-3,-2,6,1,-4,-9,-1,-4,4,6,-6,1,-2,-10,-6,-1,-10,7,-1,-5,-9,4,7,-6,7,-10,-7,-3,-7,3,4,2,6,-9,10,-10,8,-8,-3,3,-8,-2,-6,-5,10,6,-1,5,8,4,7,4,9,10,6,-9,8,1,-8,9,-6,1,1,-5,-1,-4,5,6,10,4,-9,4,6,-3,4,2,7,7,9,-7,-3,9,-1,-1,-10,10,-2,1,8,4,-6,-1,-10,-10,-2,-9,10,-2,2,-3,-10,4,-5,-2,10,6,2,10,-6,9,7,-5,-6,7,2,-2,3,4,2,-5,-2,10,-8,4,-1,6,-2,7,7,8,6,-2,8,8,-4,4,-4,9,-5,10,7,5,4,-7,-6,10,5,-4,2,6,-7,-3,7,4,7,7,9,-5,-4,6,9,3,-10,10,-8,-7,7,5,9,5,5,-2,-3,-7,-1,-6,-9,-6,-5,10,-3,10,4,-3,9,1,-9,8,1,-9,-8,-5,-4,-7,-7,6,-1,-9,4,-10,-1,6,-5,2,-2,8,-3,-9,4,-8,3,1,10,1,-4,-8,-3], dtype = "int64")#candidate|820|(2080,)|const|int64
const_821 = relay.const([True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,False], dtype = "bool")#candidate|821|(160,)|const|bool
call_819 = relay.TupleGetItem(func_272_call(relay.reshape(const_820.astype('int64'), [10, 13, 16]), relay.reshape(const_820.astype('int64'), [10, 13, 16]), relay.reshape(const_821.astype('bool'), [160,]), relay.reshape(call_805.astype('float32'), [99, 9]), relay.reshape(const_820.astype('int64'), [10, 13, 16]), ), 7)
call_822 = relay.TupleGetItem(func_278_call(relay.reshape(const_820.astype('int64'), [10, 13, 16]), relay.reshape(const_820.astype('int64'), [10, 13, 16]), relay.reshape(const_821.astype('bool'), [160,]), relay.reshape(call_805.astype('float32'), [99, 9]), relay.reshape(const_820.astype('int64'), [10, 13, 16]), ), 7)
uop_830 = relay.sinh(const_820.astype('float32')) # shape=(2080,)
func_272_call = mod.get_global_var('func_272')
func_278_call = mutated_mod.get_global_var('func_278')
call_833 = relay.TupleGetItem(func_272_call(relay.reshape(uop_830.astype('int64'), [10, 13, 16]), relay.reshape(const_820.astype('int64'), [10, 13, 16]), relay.reshape(const_821.astype('bool'), [160,]), relay.reshape(call_805.astype('float32'), [99, 9]), relay.reshape(const_820.astype('int64'), [10, 13, 16]), ), 8)
call_834 = relay.TupleGetItem(func_278_call(relay.reshape(uop_830.astype('int64'), [10, 13, 16]), relay.reshape(const_820.astype('int64'), [10, 13, 16]), relay.reshape(const_821.astype('bool'), [160,]), relay.reshape(call_805.astype('float32'), [99, 9]), relay.reshape(const_820.astype('int64'), [10, 13, 16]), ), 8)
func_563_call = mod.get_global_var('func_563')
func_566_call = mutated_mod.get_global_var('func_566')
call_839 = relay.TupleGetItem(func_563_call(relay.reshape(const_806.astype('float64'), [8, 8, 11])), 1)
call_840 = relay.TupleGetItem(func_566_call(relay.reshape(const_806.astype('float64'), [8, 8, 11])), 1)
uop_843 = relay.sin(uop_830.astype('float32')) # shape=(2080,)
output = relay.Tuple([bop_802,call_805,const_806,call_819,const_821,call_833,call_839,uop_843,])
output2 = relay.Tuple([bop_802,call_807,const_806,call_822,const_821,call_834,call_840,uop_843,])
func_860 = relay.Function([], output)
mod['func_860'] = func_860
mod = relay.transform.InferType()(mod)
mutated_mod['func_860'] = func_860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_860_call = mutated_mod.get_global_var('func_860')
call_861 = func_860_call()
output = call_861
func_862 = relay.Function([], output)
mutated_mod['func_862'] = func_862
mutated_mod = relay.transform.InferType()(mutated_mod)
var_901 = relay.var("var_901", dtype = "float32", shape = (8, 16, 16))#candidate|901|(8, 16, 16)|var|float32
var_902 = relay.var("var_902", dtype = "float32", shape = (8, 16, 16))#candidate|902|(8, 16, 16)|var|float32
bop_903 = relay.maximum(var_901.astype('float32'), relay.reshape(var_902.astype('float32'), relay.shape_of(var_901))) # shape=(8, 16, 16)
var_911 = relay.var("var_911", dtype = "float32", shape = (8, 16, 16))#candidate|911|(8, 16, 16)|var|float32
bop_912 = relay.bitwise_and(bop_903.astype('uint64'), relay.reshape(var_911.astype('uint64'), relay.shape_of(bop_903))) # shape=(8, 16, 16)
func_84_call = mod.get_global_var('func_84')
func_87_call = mutated_mod.get_global_var('func_87')
var_920 = relay.var("var_920", dtype = "bool", shape = (4, 40))#candidate|920|(4, 40)|var|bool
call_919 = relay.TupleGetItem(func_84_call(relay.reshape(var_920.astype('bool'), [2, 10, 8]), relay.reshape(var_920.astype('bool'), [2, 10, 8]), ), 1)
call_921 = relay.TupleGetItem(func_87_call(relay.reshape(var_920.astype('bool'), [2, 10, 8]), relay.reshape(var_920.astype('bool'), [2, 10, 8]), ), 1)
output = relay.Tuple([bop_912,call_919,var_920,])
output2 = relay.Tuple([bop_912,call_921,var_920,])
func_936 = relay.Function([var_901,var_902,var_911,var_920,], output)
mod['func_936'] = func_936
mod = relay.transform.InferType()(mod)
mutated_mod['func_936'] = func_936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_936_call = mutated_mod.get_global_var('func_936')
var_938 = relay.var("var_938", dtype = "float32", shape = (8, 16, 16))#candidate|938|(8, 16, 16)|var|float32
var_939 = relay.var("var_939", dtype = "float32", shape = (8, 16, 16))#candidate|939|(8, 16, 16)|var|float32
var_940 = relay.var("var_940", dtype = "float32", shape = (8, 16, 16))#candidate|940|(8, 16, 16)|var|float32
var_941 = relay.var("var_941", dtype = "bool", shape = (4, 40))#candidate|941|(4, 40)|var|bool
call_937 = func_936_call(var_938,var_939,var_940,var_941,)
output = call_937
func_942 = relay.Function([var_938,var_939,var_940,var_941,], output)
mutated_mod['func_942'] = func_942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_860_call = mod.get_global_var('func_860')
func_862_call = mutated_mod.get_global_var('func_862')
call_972 = relay.TupleGetItem(func_860_call(), 1)
call_973 = relay.TupleGetItem(func_862_call(), 1)
var_990 = relay.var("var_990", dtype = "float32", shape = (99, 9))#candidate|990|(99, 9)|var|float32
bop_991 = relay.less(call_972.astype('bool'), relay.reshape(var_990.astype('bool'), relay.shape_of(call_972))) # shape=(99, 9)
bop_994 = relay.less(call_973.astype('bool'), relay.reshape(var_990.astype('bool'), relay.shape_of(call_973))) # shape=(99, 9)
func_84_call = mod.get_global_var('func_84')
func_87_call = mutated_mod.get_global_var('func_87')
const_1015 = relay.const([False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,True,False], dtype = "bool")#candidate|1015|(160,)|const|bool
call_1014 = relay.TupleGetItem(func_84_call(relay.reshape(const_1015.astype('bool'), [2, 10, 8]), relay.reshape(const_1015.astype('bool'), [2, 10, 8]), ), 1)
call_1016 = relay.TupleGetItem(func_87_call(relay.reshape(const_1015.astype('bool'), [2, 10, 8]), relay.reshape(const_1015.astype('bool'), [2, 10, 8]), ), 1)
output = relay.Tuple([bop_991,call_1014,const_1015,])
output2 = relay.Tuple([bop_994,call_1016,const_1015,])
func_1026 = relay.Function([var_990,], output)
mod['func_1026'] = func_1026
mod = relay.transform.InferType()(mod)
mutated_mod['func_1026'] = func_1026
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1027 = relay.var("var_1027", dtype = "float32", shape = (99, 9))#candidate|1027|(99, 9)|var|float32
func_1026_call = mutated_mod.get_global_var('func_1026')
call_1028 = func_1026_call(var_1027)
output = call_1028
func_1029 = relay.Function([var_1027], output)
mutated_mod['func_1029'] = func_1029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_860_call = mod.get_global_var('func_860')
func_862_call = mutated_mod.get_global_var('func_862')
call_1079 = relay.TupleGetItem(func_860_call(), 3)
call_1080 = relay.TupleGetItem(func_862_call(), 3)
output = relay.Tuple([call_1079,])
output2 = relay.Tuple([call_1080,])
func_1083 = relay.Function([], output)
mod['func_1083'] = func_1083
mod = relay.transform.InferType()(mod)
output = func_1083()
func_1084 = relay.Function([], output)
mutated_mod['func_1084'] = func_1084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1083_call = mod.get_global_var('func_1083')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_1148 = relay.TupleGetItem(func_1083_call(), 0)
call_1149 = relay.TupleGetItem(func_1084_call(), 0)
func_716_call = mod.get_global_var('func_716')
func_719_call = mutated_mod.get_global_var('func_719')
const_1151 = relay.const([7,-10,-4,-2,-3,-1,-8,4,-3,6,6,10,7,10,-2,3,2,-6,2,-3,9,-6,4,-8,-8,-6,2,-6,10,8,4,3,7,-2,-1,5,-6,8,-10,-9,-3,-3,-3,-5,6,6,7,7,3,4,-2,-4,10,8,-10,-10,-4,-7,-3,-1,-6,-10,8,-6,7,-3,-8,7,8,-10,4,1,-5,4,-9,-7,-2,7,-6,-9,2,4,-8,2,8,-6,1,2,-4,-4,-9,-7,1,1,6,10,3,-9,-5,-8,-2,7,2,1], dtype = "uint16")#candidate|1151|(104,)|const|uint16
call_1150 = func_716_call(relay.reshape(const_1151.astype('uint16'), [13, 2, 4]), relay.reshape(const_1151.astype('uint16'), [13, 2, 4]), )
call_1152 = func_716_call(relay.reshape(const_1151.astype('uint16'), [13, 2, 4]), relay.reshape(const_1151.astype('uint16'), [13, 2, 4]), )
output = relay.Tuple([call_1148,call_1150,const_1151,])
output2 = relay.Tuple([call_1149,call_1152,const_1151,])
func_1156 = relay.Function([], output)
mod['func_1156'] = func_1156
mod = relay.transform.InferType()(mod)
output = func_1156()
func_1157 = relay.Function([], output)
mutated_mod['func_1157'] = func_1157
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1222 = relay.var("var_1222", dtype = "int32", shape = (1, 7, 5))#candidate|1222|(1, 7, 5)|var|int32
const_1223 = relay.const([[[4,-8,2,5,-2],[-5,7,-10,2,1],[10,6,-6,1,10],[5,1,-8,7,-8],[-8,1,-10,-6,3],[-10,3,-8,3,-4],[3,-10,-5,9,10]],[[8,-2,-3,3,7],[-5,7,-2,-8,-6],[1,4,-6,-8,8],[4,-5,-8,-9,6],[-7,2,10,10,-3],[10,8,3,-2,10],[-10,9,-1,2,8]],[[-7,-2,10,4,-1],[6,9,5,9,5],[-9,-6,-10,5,-8],[-1,-7,-1,-4,7],[-2,-7,9,4,-1],[-1,-4,9,3,-8],[-7,5,4,1,1]],[[-3,2,-3,-6,-3],[6,9,1,5,-10],[-7,4,2,-8,-5],[-2,-1,2,9,10],[7,6,-7,-4,10],[-5,-2,9,-6,7],[-7,10,5,-1,-10]],[[-6,9,10,6,-8],[9,-5,2,-3,2],[-10,10,6,-9,-2],[2,-5,8,6,-1],[-2,8,9,5,10],[3,6,-7,-1,-1],[-7,-10,3,10,-2]],[[4,9,-5,-3,2],[8,3,-1,8,9],[6,2,10,4,5],[-9,1,-10,-10,-9],[-8,10,-2,-4,-6],[2,10,-7,-1,8],[-6,4,7,-6,-1]],[[-9,-1,-10,1,-5],[-6,-8,1,5,-6],[-8,2,-2,8,-7],[-2,-7,7,-5,-1],[7,7,4,-1,-2],[1,-3,-3,-3,-2],[1,-9,8,6,-8]],[[4,-4,1,1,-6],[2,4,-2,10,-2],[-10,-8,-1,-8,-8],[6,2,-6,-10,6],[1,-5,1,6,7],[-4,10,7,-6,10],[9,-9,10,3,-2]],[[5,-7,10,2,-1],[-3,5,9,-7,-4],[1,5,-4,5,4],[-6,-1,-1,-3,7],[9,1,3,5,6],[-7,5,-9,6,6],[-1,8,7,5,10]],[[8,-1,-5,-10,4],[-2,-3,2,5,5],[-9,6,-2,-7,-7],[-8,8,5,-6,6],[8,-1,-6,-4,3],[4,10,9,5,9],[-3,-8,-8,6,5]],[[-4,-3,-6,7,10],[1,-4,-4,-3,9],[4,8,-4,-4,-10],[4,3,-8,6,1],[7,-2,3,4,-6],[7,-4,9,-1,10],[-3,7,2,7,1]],[[6,1,7,-3,-1],[3,-8,-3,6,-1],[7,-1,-9,10,-4],[5,-8,-9,4,7],[10,3,6,-8,-2],[-1,2,5,-6,9],[-3,10,-3,-6,1]],[[-2,3,3,-3,-4],[-8,6,-6,3,-4],[-1,-7,10,-2,-6],[-10,-7,8,-4,9],[-8,4,8,4,3],[-4,-9,-9,-2,5],[-5,-10,10,10,-7]],[[-4,7,10,8,-9],[-4,-7,-5,-9,-7],[-6,-9,-5,-2,-3],[-6,-5,-4,2,-9],[-5,5,3,8,6],[-6,10,-9,-4,-1],[-10,-3,2,10,-9]],[[7,1,6,2,9],[9,-4,-3,-3,-4],[6,-1,-10,6,9],[10,-1,-7,-6,1],[1,-1,9,6,2],[8,3,-9,-4,-3],[-2,8,6,10,-4]]], dtype = "int32")#candidate|1223|(15, 7, 5)|const|int32
bop_1224 = relay.bitwise_and(var_1222.astype('int32'), const_1223.astype('int32')) # shape=(15, 7, 5)
output = bop_1224
output2 = bop_1224
func_1229 = relay.Function([var_1222,], output)
mod['func_1229'] = func_1229
mod = relay.transform.InferType()(mod)
mutated_mod['func_1229'] = func_1229
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1230 = relay.var("var_1230", dtype = "int32", shape = (1, 7, 5))#candidate|1230|(1, 7, 5)|var|int32
func_1229_call = mutated_mod.get_global_var('func_1229')
call_1231 = func_1229_call(var_1230)
output = call_1231
func_1232 = relay.Function([var_1230], output)
mutated_mod['func_1232'] = func_1232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1234 = relay.var("var_1234", dtype = "float64", shape = ())#candidate|1234|()|var|float64
var_1235 = relay.var("var_1235", dtype = "float64", shape = (4, 9, 16))#candidate|1235|(4, 9, 16)|var|float64
bop_1236 = relay.power(var_1234.astype('float64'), var_1235.astype('float64')) # shape=(4, 9, 16)
output = bop_1236
output2 = bop_1236
func_1244 = relay.Function([var_1234,var_1235,], output)
mod['func_1244'] = func_1244
mod = relay.transform.InferType()(mod)
mutated_mod['func_1244'] = func_1244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1244_call = mutated_mod.get_global_var('func_1244')
var_1246 = relay.var("var_1246", dtype = "float64", shape = ())#candidate|1246|()|var|float64
var_1247 = relay.var("var_1247", dtype = "float64", shape = (4, 9, 16))#candidate|1247|(4, 9, 16)|var|float64
call_1245 = func_1244_call(var_1246,var_1247,)
output = call_1245
func_1248 = relay.Function([var_1246,var_1247,], output)
mutated_mod['func_1248'] = func_1248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1083_call = mod.get_global_var('func_1083')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_1284 = relay.TupleGetItem(func_1083_call(), 0)
call_1285 = relay.TupleGetItem(func_1084_call(), 0)
output = relay.Tuple([call_1284,])
output2 = relay.Tuple([call_1285,])
func_1289 = relay.Function([], output)
mod['func_1289'] = func_1289
mod = relay.transform.InferType()(mod)
output = func_1289()
func_1290 = relay.Function([], output)
mutated_mod['func_1290'] = func_1290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mod.get_global_var('func_1156')
func_1157_call = mutated_mod.get_global_var('func_1157')
call_1300 = relay.TupleGetItem(func_1156_call(), 0)
call_1301 = relay.TupleGetItem(func_1157_call(), 0)
output = call_1300
output2 = call_1301
func_1315 = relay.Function([], output)
mod['func_1315'] = func_1315
mod = relay.transform.InferType()(mod)
mutated_mod['func_1315'] = func_1315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mutated_mod.get_global_var('func_1315')
call_1316 = func_1315_call()
output = call_1316
func_1317 = relay.Function([], output)
mutated_mod['func_1317'] = func_1317
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1338 = relay.var("var_1338", dtype = "bool", shape = (4, 14, 16))#candidate|1338|(4, 14, 16)|var|bool
var_1339 = relay.var("var_1339", dtype = "bool", shape = (4, 14, 16))#candidate|1339|(4, 14, 16)|var|bool
bop_1340 = relay.logical_or(var_1338.astype('bool'), relay.reshape(var_1339.astype('bool'), relay.shape_of(var_1338))) # shape=(4, 14, 16)
output = relay.Tuple([bop_1340,])
output2 = relay.Tuple([bop_1340,])
func_1343 = relay.Function([var_1338,var_1339,], output)
mod['func_1343'] = func_1343
mod = relay.transform.InferType()(mod)
mutated_mod['func_1343'] = func_1343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1343_call = mutated_mod.get_global_var('func_1343')
var_1345 = relay.var("var_1345", dtype = "bool", shape = (4, 14, 16))#candidate|1345|(4, 14, 16)|var|bool
var_1346 = relay.var("var_1346", dtype = "bool", shape = (4, 14, 16))#candidate|1346|(4, 14, 16)|var|bool
call_1344 = func_1343_call(var_1345,var_1346,)
output = call_1344
func_1347 = relay.Function([var_1345,var_1346,], output)
mutated_mod['func_1347'] = func_1347
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1400 = relay.const(6, dtype = "int32")#candidate|1400|()|const|int32
var_1401 = relay.var("var_1401", dtype = "int32", shape = (16, 8, 7))#candidate|1401|(16, 8, 7)|var|int32
bop_1402 = relay.bitwise_and(const_1400.astype('int32'), var_1401.astype('int32')) # shape=(16, 8, 7)
func_1156_call = mod.get_global_var('func_1156')
func_1157_call = mutated_mod.get_global_var('func_1157')
call_1431 = relay.TupleGetItem(func_1156_call(), 1)
call_1432 = relay.TupleGetItem(func_1157_call(), 1)
func_1343_call = mod.get_global_var('func_1343')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_1433 = relay.TupleGetItem(func_1343_call(relay.reshape(var_1401.astype('bool'), [4, 14, 16]), relay.reshape(bop_1402.astype('bool'), [4, 14, 16]), ), 0)
call_1434 = relay.TupleGetItem(func_1347_call(relay.reshape(var_1401.astype('bool'), [4, 14, 16]), relay.reshape(bop_1402.astype('bool'), [4, 14, 16]), ), 0)
bop_1444 = relay.equal(bop_1402.astype('bool'), relay.reshape(var_1401.astype('bool'), relay.shape_of(bop_1402))) # shape=(16, 8, 7)
const_1452 = relay.const([[[-2,-10,7,9,5,8,1],[-2,-8,-4,-8,3,4,-10],[-6,6,6,-10,-1,-9,-4],[-2,4,6,2,-10,9,-6],[-1,-7,-9,-7,-8,-8,-8],[5,-5,-9,-4,-2,-6,-5],[-4,-9,9,-3,8,5,-1],[-7,1,2,-1,-4,-5,9]],[[7,-8,9,5,3,8,2],[-9,10,1,-8,-5,2,-1],[-6,-10,-8,-5,4,-5,-9],[-10,10,-3,3,-10,-7,-9],[-8,5,3,-8,-4,10,-2],[6,-1,4,6,-10,1,10],[-8,-6,1,10,-9,-7,-1],[10,3,7,-2,5,-8,7]],[[-6,-7,7,-3,-5,2,-3],[-6,7,8,-1,4,-7,9],[4,7,4,8,-7,8,6],[-7,-1,1,-6,10,7,-1],[2,2,-8,10,2,1,-1],[-3,-1,3,-1,1,-7,-7],[6,-9,-9,-6,9,-1,6],[-2,3,1,6,-7,10,6]],[[-1,-10,-2,5,9,2,-9],[-10,-5,9,10,3,6,2],[-9,3,-3,5,1,9,-3],[-9,4,-5,-4,8,-6,9],[-4,-8,-3,-3,4,-4,-9],[-7,3,-5,5,-7,-6,-2],[-7,-4,4,-6,-3,-3,-8],[-1,9,-9,4,-1,-6,6]],[[3,-4,-9,-3,-2,-9,-7],[-1,-9,-4,-2,1,7,-5],[-10,4,-10,-6,-9,-1,-10],[-6,-3,4,1,10,-8,-1],[5,-9,6,-8,4,-5,-5],[-1,-7,1,-6,-1,10,-2],[4,-7,-9,4,4,2,-8],[-10,-3,7,10,1,-5,-2]],[[-8,5,-10,-1,-3,-4,8],[2,3,10,-4,8,-9,9],[3,-8,8,3,10,-4,-10],[9,-4,-8,2,3,-7,10],[-1,-9,-10,5,2,5,3],[-4,-8,3,-3,-9,8,-3],[-4,-2,-1,9,-10,9,-2],[6,4,8,-5,3,3,7]],[[5,-8,-2,-2,-3,-6,5],[5,-8,3,-2,-5,4,-7],[2,-8,-3,-6,9,9,10],[3,1,-3,10,2,-10,1],[4,1,-3,3,-9,4,-8],[8,-8,-3,10,9,-3,3],[9,9,5,9,1,5,-10],[8,2,6,-8,3,5,9]],[[5,3,-8,-7,-2,-3,8],[-5,-9,-8,8,4,-3,3],[9,5,-3,-7,-1,-6,-1],[-8,-10,-1,5,-1,3,8],[-2,-3,-2,-4,9,6,6],[-4,2,7,-4,-1,8,-1],[-7,9,9,-8,-2,-4,4],[2,-5,-6,-10,-8,-9,-5]],[[-3,8,-5,-7,8,-5,-10],[3,10,-3,-4,1,9,-10],[2,-5,-4,-3,1,5,-9],[-2,-7,2,-10,2,3,-10],[5,-3,7,-10,-3,2,-6],[5,-5,-4,-2,4,1,-6],[1,9,9,-3,-1,9,-9],[-10,-10,-10,-2,9,-3,5]],[[-1,10,-10,8,-10,6,-5],[7,-8,8,-4,2,5,1],[6,-3,9,-9,-2,-6,7],[8,-9,-5,-4,4,5,5],[9,9,-1,4,-6,7,-1],[4,7,1,7,-2,3,8],[-1,-8,-6,-8,9,-7,5],[5,-8,-6,-3,10,5,10]],[[5,-5,-8,9,-10,-2,-6],[-6,-2,-1,-1,5,5,3],[-5,-9,-8,9,5,-1,4],[4,2,-3,2,-5,10,-7],[5,-5,1,-5,8,5,1],[-10,9,4,-5,-8,-10,8],[-4,7,4,-2,-7,4,-10],[-9,-6,5,-5,9,-8,7]],[[-1,-10,-1,-4,10,-10,2],[2,-4,4,-2,-5,10,6],[-2,-7,-7,8,3,-3,-10],[10,8,6,5,-9,-9,-3],[-10,-6,-4,-7,-10,-1,9],[-8,8,4,9,5,10,-10],[-10,-9,-4,5,7,-8,-7],[2,4,6,7,5,10,10]],[[6,10,-3,-8,-3,6,7],[9,-5,-9,-10,-9,4,10],[6,1,-2,-7,9,3,-10],[-4,-2,-10,-3,-4,-5,7],[-8,1,-9,-5,-5,-5,2],[8,4,9,-4,-3,-2,-7],[1,-6,1,5,2,-2,-4],[3,2,10,-5,3,9,-4]],[[10,-8,5,2,-1,-9,-8],[-2,-5,-10,8,6,8,1],[-3,10,8,6,2,-3,-4],[-6,3,-5,-2,-7,5,-2],[-1,10,-1,9,8,5,5],[1,-10,4,-4,2,-5,4],[2,-3,-10,1,5,1,7],[-3,5,4,2,1,-8,-10]],[[3,5,2,10,-2,3,1],[1,1,-2,2,2,-5,-10],[5,10,-5,-3,2,9,6],[-1,6,-7,-8,3,-7,3],[-9,9,-4,2,-1,-8,-2],[-6,9,-5,1,-3,-3,10],[1,-3,8,-6,8,-4,5],[-3,7,7,-9,2,-6,-3]],[[-3,-10,8,-5,-5,9,-1],[4,2,-4,9,8,4,1],[7,9,-7,-4,-2,1,2],[-3,-2,-8,4,-5,1,-2],[5,5,5,2,4,-7,7],[-6,-8,9,-5,4,8,2],[-5,4,-8,-2,4,-7,9],[9,-3,-2,-3,9,-9,9]]], dtype = "int32")#candidate|1452|(16, 8, 7)|const|int32
bop_1453 = relay.minimum(var_1401.astype('int32'), relay.reshape(const_1452.astype('int32'), relay.shape_of(var_1401))) # shape=(16, 8, 7)
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_1462 = func_1315_call()
call_1463 = func_1315_call()
output = relay.Tuple([call_1431,call_1433,bop_1444,bop_1453,call_1462,])
output2 = relay.Tuple([call_1432,call_1434,bop_1444,bop_1453,call_1463,])
func_1464 = relay.Function([var_1401,], output)
mod['func_1464'] = func_1464
mod = relay.transform.InferType()(mod)
var_1465 = relay.var("var_1465", dtype = "int32", shape = (16, 8, 7))#candidate|1465|(16, 8, 7)|var|int32
output = func_1464(var_1465)
func_1466 = relay.Function([var_1465], output)
mutated_mod['func_1466'] = func_1466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_860_call = mod.get_global_var('func_860')
func_862_call = mutated_mod.get_global_var('func_862')
call_1476 = relay.TupleGetItem(func_860_call(), 5)
call_1477 = relay.TupleGetItem(func_862_call(), 5)
func_1244_call = mod.get_global_var('func_1244')
func_1248_call = mutated_mod.get_global_var('func_1248')
var_1482 = relay.var("var_1482", dtype = "float64", shape = ())#candidate|1482|()|var|float64
var_1483 = relay.var("var_1483", dtype = "float64", shape = (576,))#candidate|1483|(576,)|var|float64
call_1481 = func_1244_call(relay.reshape(var_1482.astype('float64'), []), relay.reshape(var_1483.astype('float64'), [4, 9, 16]), )
call_1484 = func_1244_call(relay.reshape(var_1482.astype('float64'), []), relay.reshape(var_1483.astype('float64'), [4, 9, 16]), )
bop_1486 = relay.logical_xor(var_1483.astype('int32'), relay.reshape(call_1481.astype('int32'), relay.shape_of(var_1483))) # shape=(576,)
bop_1489 = relay.logical_xor(var_1483.astype('int32'), relay.reshape(call_1484.astype('int32'), relay.shape_of(var_1483))) # shape=(576,)
bop_1495 = relay.bitwise_xor(var_1482.astype('uint16'), bop_1486.astype('uint16')) # shape=(576,)
bop_1498 = relay.bitwise_xor(var_1482.astype('uint16'), bop_1489.astype('uint16')) # shape=(576,)
uop_1500 = relay.log2(call_1476.astype('float64')) # shape=(2, 10, 8)
uop_1502 = relay.log2(call_1477.astype('float64')) # shape=(2, 10, 8)
output = relay.Tuple([bop_1495,uop_1500,])
output2 = relay.Tuple([bop_1498,uop_1502,])
func_1511 = relay.Function([var_1482,var_1483,], output)
mod['func_1511'] = func_1511
mod = relay.transform.InferType()(mod)
var_1512 = relay.var("var_1512", dtype = "float64", shape = ())#candidate|1512|()|var|float64
var_1513 = relay.var("var_1513", dtype = "float64", shape = (576,))#candidate|1513|(576,)|var|float64
output = func_1511(var_1512,var_1513,)
func_1514 = relay.Function([var_1512,var_1513,], output)
mutated_mod['func_1514'] = func_1514
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1556 = relay.const([[[-1.431743,-2.974614,2.345727,7.126957],[3.946004,-6.389946,-3.602761,-2.401281],[-1.625057,8.171745,6.280215,-6.287267],[4.650806,-5.734119,8.273105,0.612613],[-2.957027,-2.271778,3.930923,2.433735],[-2.552603,7.471508,4.043260,-3.554439],[-2.809399,-5.760769,-8.779951,-7.283155],[-1.707528,5.971965,-7.858446,1.755001],[0.216332,-1.435532,8.942940,4.360231],[1.455096,-9.203868,-0.168793,-0.443596]]], dtype = "float32")#candidate|1556|(1, 10, 4)|const|float32
var_1557 = relay.var("var_1557", dtype = "float32", shape = (2, 10, 4))#candidate|1557|(2, 10, 4)|var|float32
bop_1558 = relay.floor_mod(const_1556.astype('float32'), var_1557.astype('float32')) # shape=(2, 10, 4)
func_1026_call = mod.get_global_var('func_1026')
func_1029_call = mutated_mod.get_global_var('func_1029')
const_1562 = relay.const([8.707764,0.632917,-7.852307,-3.580489,0.506159,-6.870731,-3.543425,-0.369590,-6.242334,6.778657,-2.140743,8.002830,3.177249,3.788120,3.509904,8.623521,5.929924,6.411580,8.889572,8.944238,-4.425907,-4.028588,9.715711,4.358501,9.264289,-3.693889,-3.930831,4.326027,1.071740,-3.722584,-7.564831,3.132640,-7.690108,-5.954914,-7.989539,-5.087802,8.908314,0.323312,-8.317327,-0.740368,9.005165,8.011319,-1.923473,-0.706227,9.932225,-7.020473,-7.291581,3.413611,-0.947202,0.653779,-3.594216,1.378492,-8.747760,-3.730789,7.098891,5.945489,8.131410,7.224137,5.116597,7.460956,-4.956147,1.615623,2.026312,-3.216092,-3.148097,-5.686656,1.016659,-1.605196,3.420863,-3.680127,-6.890447,9.062262,-2.032728,3.814556,-9.342846,0.197584,6.607112,-8.495599,9.126673,-7.209748,-2.818498,-8.809030,0.709696,7.362522,6.240944,8.538777,6.481081,3.397440,1.961814,-8.820252,1.168193,4.830861,-2.966289,3.331995,-0.189308,1.536902,1.887995,-0.043988,-1.317164,5.199881,-8.156587,5.616277,3.859641,9.646695,-0.022357,1.556505,5.547766,-6.317001,-7.646220,-0.882242,3.908557,8.495236,6.741356,8.499722,2.793679,-2.187473,-4.034423,-6.643980,-5.074903,-8.176905,5.556661,0.390196,-3.753910,-8.900518,0.177269,6.706845,-5.256564,0.687092,8.624171,3.340150,1.942530,-5.428128,-8.360134,-0.369098,-9.911682,6.115229,-8.752374,4.642748,-0.040458,2.026804,-4.929882,-8.325929,0.064675,-3.170780,6.091083,0.545894,4.146698,-6.340142,-1.727451,5.198094,0.719737,-3.695121,6.154682,3.371233,7.390375,6.106161,4.739829,-4.412906,-5.855947,2.141080,8.538244,-9.089709,-6.478438,-4.029233,5.245462,-2.847326,-3.945289,-0.626191,-8.146969,0.405517,-5.015495,7.973201,-5.939260,-9.436248,-9.233904,-8.567089,3.254970,6.178340,0.547633,-1.718412,1.392890,-1.212160,-4.839360,1.086922,-3.120997,-3.977358,7.842806,-3.965717,-1.070008,-1.327948,6.563659,-2.289778,-5.019615,-5.588802,5.384679,-1.412286,9.194983,-3.636270,-2.148855,-5.837369,-8.852766,5.214530,-4.500287,5.255950,9.067300,-2.543479,9.613537,9.181021,-2.505832,6.691126,-1.034725,-9.223855,-0.869605,6.613637,-5.726566,9.680577,4.096292,-8.406459,3.568999,-7.249419,-8.410795,6.764314,9.916437,7.339473,-9.324780,0.143312,-1.317247,9.541575,-0.253045,2.785959,-5.466573,3.736394,-4.803409,-4.778099,3.822932,-5.290162,7.454845,0.760285,-8.040761,-1.667030,-4.663614,5.268543,9.746801,5.292711,-3.416319,-1.698780,-9.138205,-5.857276,2.587159,-4.127660,7.171438,-0.045074,-9.154654,0.951558,-2.105741,9.585750,3.594988,-3.970234,1.486872,-3.876522,-0.874196,1.808878,-6.829044,3.269876,-7.119352,-0.288292,-5.918676,-9.183581,4.516243,2.113129,6.540719,-7.338314,-0.064257,9.538533,-1.114122,9.813394,-8.102177,8.826116,-3.608165,-0.269544,-1.038959,-5.427926,-2.943536,8.306395,-6.513274,2.430015,-5.461557,-0.041197,-9.388790,-4.251697,7.304406,-5.239354,-4.700914,-0.542728,-1.268939,7.138118,0.257639,-6.412816,-0.995301,9.915312,-8.604868,-4.173899,-3.828499,9.157442,-7.009290,-3.923611,0.867868,0.206615,-4.973575,-2.306338,3.276450,-9.676570,4.246778,-2.141752,-8.281083,-5.006597,-6.185636,4.166082,8.814424,-4.904584,9.109619,6.486423,7.588813,-7.192181,-8.438674,-0.499438,9.536675,0.388271,3.273439,-9.023383,8.539230,3.552468,-5.132834,3.060104,8.314894,8.756225,-4.018491,-8.489911,-4.613589,3.027408,9.106523,-6.601339,-1.805909,-2.465289,2.179698,-8.926400,5.836478,-0.676489,-0.364758,-5.108453,0.037883,-3.229219,-4.346683,0.666747,-4.037731,-5.601539,8.710664,-3.484185,-5.431370,0.016503,7.229064,-7.609303,3.307552,-0.381167,-6.622324,-9.597927,2.087811,4.924215,5.711983,-5.634310,-6.813507,9.813537,7.259795,4.384705,-2.484854,9.213862,-4.360833,6.451697,-2.648414,-9.129987,-7.007005,6.529527,9.192306,5.851053,1.300552,-6.201120,-6.708639,8.612089,9.105608,8.516903,-5.760713,-3.555082,4.459489,-9.153872,9.211256,-9.997128,1.392844,6.913274,1.642985,0.286582,-7.571566,-6.343402,-5.850190,-6.362214,-4.633174,7.054134,-9.046641,-2.163412,1.741776,-4.214140,4.605361,-8.206799,-8.494706,7.413583,9.097982,-5.226500,7.715215,-4.014749,2.802061,0.176037,8.915402,-9.791536,-2.439770,6.118317,3.245842,1.968474,-0.273585,-3.636328,5.766408,-1.951622,-6.201437,0.892460,6.689241,3.993353,-3.550483,5.399694,-7.447072,-9.607223,-0.364203,-1.254611,8.390516,-1.758779,-2.812649,-0.065323,-4.033540,-0.708065,9.665609,-3.278037,3.235877,6.207837,4.160407,5.375206,-3.960337,-6.800995,8.118869,4.458766,-5.031004,8.514149,-0.865055,0.162121,-1.200571,3.848231,5.892645,2.795750,-9.470732,-8.517131,2.549709,2.731676,6.476769,-5.056608,-3.219835,6.481442,4.996981,3.340528,-0.261255,-2.764166,-1.715145,9.267117,-4.100319,7.081104,5.904015,-2.151246,8.236349,6.025098,4.778424,-9.314840,1.060132,6.028117,-1.590863,-0.310100,5.106299,4.620461,-2.089468,2.154623,4.432711,3.329507,-7.138957,3.544379,9.092252,3.131279,-7.182698,8.874671,0.773530,-1.606512,0.727569,9.528455,-7.152050,9.402270,6.300255,8.165590,8.803310,5.637010,-2.993316,2.521420,9.962285,-7.622325,-1.967517,4.860516,-5.400386,9.252533,-2.338050,-3.814638,-1.407480,-7.730807,-5.221484,-7.092850,-0.405320,-6.463071,5.004203,5.003754,-7.189471,-0.053269,0.835731,-1.670665,-9.161706,7.745695,-7.522320,0.416736,9.371553,-6.812324,7.568414,0.368581,2.373731,-1.292749,-7.847414,2.075318,7.403062,1.141291,-0.847720,3.733499,-3.452571,2.707273,-9.433979,1.664202,-9.869207,-1.137637,-5.370828,-9.433203,3.395145,-1.870386,-0.718720,-5.729469,-7.566285,-0.237655,1.022143,1.862617,-0.665844,9.578508,9.403131,4.026419,-8.767595,8.103828,8.823144,-7.666486,-1.349192,-6.558725,4.102101,-2.846529,9.382773,-9.370031,-8.189931,-2.133171,-4.624595,-0.209009,-1.610470,-8.824538,9.893084,7.532314,2.292219,9.169915,9.000419,-6.336895,-4.743566,-9.453596,6.784747,-6.113780,-3.287870,-2.885795,-4.167124,-2.232207,-3.918458,-3.509310,-1.934202,7.727043,3.756620,2.564353,-0.388481,7.768496,-7.981375,-1.649450,-4.136612,-1.402896,2.284717,-5.829143,4.379001,-2.837373,6.057872,1.900722,4.836297,3.049201,7.032361,6.835268,-5.320777,-3.233116,-7.440856,-1.933922,8.620604,0.982588,9.305753,9.661601,-2.573782,6.527604,-8.381190,8.367673,9.062134,-0.410913,3.390141,-4.161683,6.933718,-9.032889,-1.880295,-4.176142,5.975802,-9.158118,5.079429,0.784274,-1.721337,0.511518,6.179458,-7.001897,9.470761,6.107133,-8.104860,-1.837110,-1.660226,3.048422,4.861067,9.910296,0.775823,-7.910514,3.583783,-0.154038,-9.478567,-4.766770,-2.173869,-1.470319,9.948884,-6.435250,1.347389,6.663199,1.093289,-4.853181,6.749057,-3.761512,-8.043551,2.331319,-5.400205,1.745987,-5.685039,1.831277,-1.731228,-4.477382,8.457826,9.800906,-6.814098,6.264299,0.746049,-2.297418,3.814033,0.420761,7.214518,2.906738,-4.525728,-0.999656,-7.574138,0.667918,9.721587,-6.631851,-2.049290,-9.495853,3.453872,-4.213896,1.258409,6.121377,8.793895,-5.355857,0.837281,0.348187,-8.615368,-5.725144,7.420069,3.935348,-7.526650,6.842816,9.482966,2.462221,3.918193,8.835365,-3.548749,6.792067,0.474075,1.643917,1.710140,-9.951650,-7.687574,-1.869077,-2.760947,8.873837,-1.154477,1.726322,-3.529859,-9.191571,5.305870,-6.002429,-6.481059,1.143007,-7.162472,-6.980891,3.160819,0.041793,-2.146914,0.961884,-6.321587,6.891845,-2.475092,-1.588322,9.669510,-3.380809,3.742865,-1.805891,5.601516,7.865598,-7.447270,3.681710,6.749513,-8.005230,5.621767,-1.148351,-6.511761,-2.468728,1.088976,2.804040,3.644676,7.878335,-6.356977,-4.640893,6.342364,9.469061,9.209077,-3.530251,-3.233678,-7.653800,-6.946429,9.109102,-5.703972,6.554301,-6.271576,-3.735242,5.806783,-5.856257,-4.581912,1.658267,8.744943,6.830215,2.216672,0.664989,-7.588175,9.695602,-9.906959,6.134627,-3.012130,-8.196433,0.824672,-7.464966,-1.836991,4.812380,9.897213,7.668332,8.284222,-3.507390,-5.798941,-2.075461,3.428026,3.555356,-3.487232,4.624637,-5.699465,-1.376029,-5.624602,-0.043376,5.118839,1.899827,-9.978083,0.752661,-4.421874,-8.676235,4.702260,7.862031,0.324652,2.334464,-0.050815,-1.293998,-9.835796,-5.193921,-0.971302,-8.468019,-1.903280,-8.603798,-1.131781,9.410849,0.757388,2.624960,-2.322495,-2.037860,1.812729,-0.204386,-7.354507,-8.654994,0.030989,3.472241,6.328483,4.267868,-9.010790,-1.546998,-9.518291,7.565079,-6.654964,-7.009489,3.895464,-0.889764,-8.116998,-1.904577,0.664268,-8.541805,-0.120912,-1.582482,5.376637,2.971143,-2.724838,-5.849405,9.500841,-0.744598,-9.512299,3.740172,9.772292,-8.330515,-0.799879,-6.339562,-4.379545,-6.749276,2.051571,-8.906382,-8.553409,-6.110076,-2.285464,4.101011,-2.711450,8.093636,7.372474,-6.729126,-5.475209,-0.433196,-4.681650,-3.664307,8.366519,7.324232,-0.194456,8.559552,7.193280,2.975664,-8.405337], dtype = "float32")#candidate|1562|(891,)|const|float32
call_1561 = relay.TupleGetItem(func_1026_call(relay.reshape(const_1562.astype('float32'), [99, 9])), 0)
call_1563 = relay.TupleGetItem(func_1029_call(relay.reshape(const_1562.astype('float32'), [99, 9])), 0)
func_1511_call = mod.get_global_var('func_1511')
func_1514_call = mutated_mod.get_global_var('func_1514')
const_1577 = relay.const(-3.235263, dtype = "float64")#candidate|1577|()|const|float64
var_1578 = relay.var("var_1578", dtype = "float64", shape = (36, 16))#candidate|1578|(36, 16)|var|float64
call_1576 = relay.TupleGetItem(func_1511_call(relay.reshape(const_1577.astype('float64'), []), relay.reshape(var_1578.astype('float64'), [576,]), ), 1)
call_1579 = relay.TupleGetItem(func_1514_call(relay.reshape(const_1577.astype('float64'), []), relay.reshape(var_1578.astype('float64'), [576,]), ), 1)
func_860_call = mod.get_global_var('func_860')
func_862_call = mutated_mod.get_global_var('func_862')
call_1580 = relay.TupleGetItem(func_860_call(), 1)
call_1581 = relay.TupleGetItem(func_862_call(), 1)
var_1583 = relay.var("var_1583", dtype = "float64", shape = (36, 16))#candidate|1583|(36, 16)|var|float64
bop_1584 = relay.add(var_1578.astype('uint16'), relay.reshape(var_1583.astype('uint16'), relay.shape_of(var_1578))) # shape=(36, 16)
uop_1590 = relay.sqrt(call_1580.astype('float32')) # shape=(99, 9)
uop_1592 = relay.sqrt(call_1581.astype('float32')) # shape=(99, 9)
output = relay.Tuple([bop_1558,call_1561,const_1562,call_1576,const_1577,bop_1584,uop_1590,])
output2 = relay.Tuple([bop_1558,call_1563,const_1562,call_1579,const_1577,bop_1584,uop_1592,])
func_1594 = relay.Function([var_1557,var_1578,var_1583,], output)
mod['func_1594'] = func_1594
mod = relay.transform.InferType()(mod)
var_1595 = relay.var("var_1595", dtype = "float32", shape = (2, 10, 4))#candidate|1595|(2, 10, 4)|var|float32
var_1596 = relay.var("var_1596", dtype = "float64", shape = (36, 16))#candidate|1596|(36, 16)|var|float64
var_1597 = relay.var("var_1597", dtype = "float64", shape = (36, 16))#candidate|1597|(36, 16)|var|float64
output = func_1594(var_1595,var_1596,var_1597,)
func_1598 = relay.Function([var_1595,var_1596,var_1597,], output)
mutated_mod['func_1598'] = func_1598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_860_call = mod.get_global_var('func_860')
func_862_call = mutated_mod.get_global_var('func_862')
call_1603 = relay.TupleGetItem(func_860_call(), 5)
call_1604 = relay.TupleGetItem(func_862_call(), 5)
output = relay.Tuple([call_1603,])
output2 = relay.Tuple([call_1604,])
func_1628 = relay.Function([], output)
mod['func_1628'] = func_1628
mod = relay.transform.InferType()(mod)
mutated_mod['func_1628'] = func_1628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1628_call = mutated_mod.get_global_var('func_1628')
call_1629 = func_1628_call()
output = call_1629
func_1630 = relay.Function([], output)
mutated_mod['func_1630'] = func_1630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_1644 = func_1315_call()
call_1645 = func_1315_call()
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_1661 = func_1315_call()
call_1662 = func_1315_call()
func_581_call = mod.get_global_var('func_581')
func_585_call = mutated_mod.get_global_var('func_585')
const_1675 = relay.const([-7.173137,8.002179,1.983303,3.837964,-0.860239,-4.287700,0.561514,-1.369847,2.216540,-2.975585,7.965036,0.508012,-6.847742,-3.382773,-2.842678,-4.527313,6.188546,-6.069787,8.184570,3.317597,-5.864321,8.587623,8.994371,-0.096068,7.525760,-9.501690,5.058113,1.873869,-0.537701,7.502698,5.659017,4.338353,-3.532658,-7.620160,7.765198,8.151596,5.199721,-0.029678,-2.706633,3.591156,3.006008,-0.387769,2.969452,-0.285867,2.803139,2.286070,8.393973,0.561503,-6.762607,-6.385975,7.808685,4.878960,-9.755629,-1.369167,-5.464747,-3.589154,9.288439,-4.714279,-9.206556,-1.294779,0.164428,6.838489,-9.010028,-8.495739,-8.404132,9.018046,-8.776932,-5.607390,-0.036566,2.154414,-5.921126,-3.327215,-4.559221,-8.632896,5.931075,-1.368778,-3.928388,4.457179,-5.128106,-8.039461,-9.231590,-9.182840,-6.886259,0.830954,3.839388,-1.972031,7.994593,5.296628,3.010722,-0.761312,-1.886001,9.701909,-9.759925,-9.107357,-9.825446,0.477588,-2.286650,6.933019,-8.715085,1.829804,1.459296,5.106554,-7.748481,-6.423035,6.240452,-6.703152,8.489815,-6.282378,-6.437129,-9.552174,5.707977,-4.856873,-8.539067,9.189086,-5.002340,-0.121364,-6.523982,-2.977637,1.262392,-6.208072,-1.455832,-6.491430,1.960394,9.260164,1.334771,-0.720797,-7.524227,-3.870973,2.543439,9.581337,-2.550864,1.508413,-8.648944,2.601198,0.942773,-4.366649,-7.759055,0.695274,0.968321,-4.666116,8.642707,-8.228389,3.700397,-0.325833,-9.534372,-0.905169,1.260124,2.682967,-7.907582,9.598382,-3.684302,9.453344,1.487475,-3.950005,2.750054,0.956379,-0.320052,-9.894324,0.540410,-3.408561,2.722407,-3.571332,-8.734129,-8.388089,8.913357,-4.810919,9.538513,-7.236678,4.478970,9.640353,8.985739,2.495112,-0.267349,4.696764,-0.622683,6.915668,6.176015,-1.121303,5.698654,-4.935814,8.681295,9.728219,-9.471352,9.984869,-4.119907,-0.920918,7.662080,8.702852,-5.370347,3.049064,-0.399713,-5.252309,2.990051,-2.230770,8.442221,7.526852,3.632316,7.022870,-0.457470,6.430055,7.627197,3.922465,4.381304,4.003075,1.532794,-9.052953,3.007000,4.177182,-4.709716,-2.778654,-6.441367,-4.669644,-3.183237,6.742358,-2.526926,2.458795,4.761846,-9.495063,-9.698766,-5.970228,4.420647,1.347847,9.641732,0.400906,-0.861287,6.109536,1.913797,4.938458,7.666595,-0.855745,0.320471,4.492093,-1.901340,-5.632831,6.918912,2.639548,2.752245,-0.892172,6.998866,-5.330340,5.006620,3.179956,5.246951,-7.434450,5.980911,-9.046179,-7.386363,2.191936,-7.927706,3.737933,-9.452002,-6.007323,-5.485301,-9.222303,-1.241589,0.991851,-6.692872,-3.109334,1.106881,-6.407859,4.298349,-2.165129,8.965444,7.240949,8.810078,8.246236,1.625103,1.116018,-0.684685,7.332203,0.191833,-0.885068,6.250266,4.337260,5.720415,-2.570611,3.062702,1.142655,-6.719847,-2.041474,0.796071,-5.495975,7.100400,-6.941701,4.593752,-9.052508,8.917993,4.124246,1.306314,6.181565,-4.295406,3.294658,-9.818183,-4.362826,5.477217,-8.963441,3.246278,9.970334,7.169182,-3.921807,-1.524653,6.542778,-7.268970,-4.491040,9.503742,-7.690080,5.946902,7.745154,-9.341291,8.124060,-4.496587,8.981200,-3.084307,-0.070802,-8.915037,-7.218824,1.030405,-2.227811,-7.779721,0.248957,5.565294,-3.865188,-3.082395,-9.713875,7.502984,-5.558363,-6.410399,0.553464,8.749125,-5.333437,2.211354,-1.223315,-8.211091,-3.293444,1.196053,-4.841669,1.061794,-2.761323,5.923996,1.099259,-8.344792,-7.800531,0.991431,7.036865,-3.598208,-6.995479,-3.491750,-6.389839,-9.831390,-1.669287,6.954155,-7.953602,1.224478,-4.276534,2.459760,5.719279,8.566001,-9.692550,-6.236299,2.389563,3.351961,-7.681554,-5.776483,-2.367081,7.273937,9.036393,-8.248717,7.003861,-3.409074,-4.108252,9.365736,1.218985,4.512506,5.049231,8.464068,-7.113541,7.456345,-9.660270,-2.325064,-4.939628,9.998904,-4.787183,4.638420,7.219270,0.095752,0.398271,-2.489616,3.397406,9.760116,2.319957,-7.506069,9.867023,-2.586323,5.439538,9.487422,-3.217751,9.024559,-9.720037,-9.739217,-5.791929,4.250077,0.337277,-0.510001,6.878196,3.292758,-6.122350,7.409627,9.478335,-9.562867,-0.065598,-2.812692,-6.592394,4.318510,-0.444110,3.649677,0.391815,9.067935,-4.873074,3.967051,8.660403,-2.640069,-1.663502,6.537789,3.427792,5.894588,1.018146,-8.705431,9.069696,-0.967593,2.384470,7.421944,-2.866191,4.838284,-5.434135,0.427275,-5.631391,-7.296930,0.779033,-2.765360,5.511336,-0.471486,-8.977600,-9.034755,-2.521092,5.175844,-7.831103,-2.167434,1.461680,6.964900,-9.892784,3.212980,-2.295160,-8.993672,-5.763952,-1.033988,-9.819551,-3.255634,8.979327,-3.532270,-5.056144,-3.312396,-2.635223,1.227883,-2.885480,-4.237689,5.357603,7.567534,4.589004,7.296531,5.658050,3.508324,-4.540811,-8.122652,-3.911717,3.510464,-4.088278,-6.228281,-8.043569,3.560680,-8.333831,-0.780709,4.349567,-4.565425,0.058198,-6.258329,1.232399,-4.473317,-8.567818,-3.133819,7.424559,2.582962,8.807809,0.277269,9.811075,-1.948309,-4.027910,-7.830018,2.991544,-7.853470,-3.510736,2.233623,-0.967135,-9.162241,-9.179954,3.997433,-9.847134,5.843654,-1.454712,-2.241031,9.705755,-7.896788,2.954986,-4.317293,4.186446,2.560510,0.165516,4.330307,-2.590459,-6.101131,-4.518757,-7.411040,-5.533229,-5.984266,-8.620126,1.079668,-1.168796,0.789409,-2.382188,-3.401040,-2.349638,5.799096,-3.965247,1.734895,-2.858624,1.616408,-5.272067,-0.597504,5.637720,4.583097,2.189063,-0.111066,-9.433834,9.140915,2.815209,-0.014588,4.678268,5.642848,7.308181,-4.283373,8.850770,-2.294881,9.534476,-0.492310,-1.289821,3.466651,-3.845898,3.395332,5.325378,8.970628,-7.898930,5.750496,-5.527738,3.123819,3.164648,2.729424,3.229755,-9.902415,-7.970072,7.059222,8.780681,-0.321113,-5.882121,-6.985514,-7.477755,-1.643952,-9.787361,-8.417370,9.233065,-5.968068,3.669539,4.833627,6.111381,-8.597216,-9.607999,-6.833731,-8.780000,-5.646008,-2.792606,-9.030492,-1.018532,4.840412,-3.853201,9.826540,3.170439,0.912256,-0.604809,5.704473,-0.373741,3.610338,-5.046480,-3.861817,0.286626,7.713285,-8.942546,-5.797091,1.177141,4.470567,-1.771171,2.961471,-5.145377,-1.032279,0.137098,-2.675561,6.052997,-1.267156,-7.219148,-7.928027,1.756943,2.403543,-0.516971,2.910853,-3.844717,6.778265,8.925843,-6.171838,7.946564,-6.395525,9.845358,7.295389,5.315673,-4.738372,-8.426671,0.413641,-2.689640,3.806873,-4.225966,-8.740981,1.416819,0.176879,-3.793189,-3.651543,9.527722,-3.977046,-9.180449,7.846156,-4.011050,6.700368,3.696097,-3.850413,3.353475,-5.844240,-5.416977,-1.902216,-7.360216,5.303715,-4.955487,5.448135,-3.099271,-3.907781,3.543661,-5.867666,1.182735,-8.217169,-7.682558,-6.686065,1.036306,-8.240510,-6.117002,9.976162,-0.329827,8.218733,0.378072,-3.862394,3.198994,-9.044065,6.553840,-3.634875,-5.295731,5.576236,2.374345,-7.793754,-3.744438,7.300309,-9.433040,6.515746,0.321789,3.779318,4.466369,-0.715039,-5.796853,5.029199,-9.036470,-7.696053,1.351808,0.372682,5.767262,6.568120,-0.802726,-4.863360,6.281889,-7.488884,4.100240,0.068766,0.252384,9.569450,-6.220282,1.477326,-6.287369,7.749266,7.774999,-2.630842,7.186994,-1.618667,-4.880021,-9.030289,2.652141,-8.553862,-1.327667,3.250018,-2.503697,8.505940,-2.716848,3.741324,-1.366478,-5.503283,6.363588,-6.119142,-9.039358,3.999784,-1.902717,-2.253337,-4.065142,-4.530588,5.129770,-6.417545,-9.165312,-9.871216,2.330702,0.761208,2.024139,8.487220,-7.986667,9.925166,0.046465,-2.336408,-1.967608,4.044473,9.091425,4.815715,8.608247,-0.079919,6.515036,-4.358908,-8.460741,-2.588432,2.845658,3.871860,6.558548,-7.474155,6.560690,-7.318296,-4.766998,-6.503679,7.213682,-8.002039,4.345313,-5.634973,8.009396,6.834512,-3.537698,2.574606,-9.138524,-9.781514,8.970449,-9.751471,0.085246,-7.426015,-5.256436,0.892856,-9.891242,-8.085328,3.918573,-3.270221,-2.036587,-7.254591,8.160728,-0.262948,-6.215279,-8.587623,-8.299455,-8.575174,7.089807,9.400822,0.212138,-5.231467,-0.815698,-1.533794,3.237989,-6.582311,-5.537499,2.738482,1.626912,2.000132,-0.636273,0.145631,-9.769839,-7.943467,5.855403,5.869109,-2.131355,-5.116471,4.520517,-3.366032,-6.565965,-0.925125,-7.023628,-8.759716,2.587297,5.903276,2.561615,-9.475692,4.505238,-5.656055,-1.543712,5.549195,4.186033,5.032568,-2.560734,4.166718,2.584295,-5.600936,4.428330,5.655704,-8.178153,-9.125796,3.309616,-1.768090,2.769740,7.478474,-1.293684,1.837797,1.679336,-7.635382,-5.643580,-2.051083,7.620615,5.977848,0.251954,-2.380063,-6.270356,-5.716286,7.134552,-3.118107,5.834823,5.930441,-2.058667,3.269303,4.288743,-1.258636,0.726888,0.894031,0.908808,-7.492615,8.510963,-7.776312,6.969078,-4.011995,3.348313,-0.772435,-6.290202,5.028391,-3.010627,-2.869109,-1.628677,3.843660,0.550456,6.646719,-8.451949,-8.371626,-2.733057,7.879694,4.860100,-4.974683,-0.146299,8.088134,-7.294910,3.621472,1.965909,6.649405,-9.854073,7.365300,7.990437,-8.305531,-8.570161,-2.143039,-4.818670,8.592573,5.596332,-6.380841,-2.533296,-1.566252,-2.362153,2.183871,-1.673207,-6.142201,6.047460,-2.397719,-7.679506,-8.957443,7.181563,7.946014,-0.111507,8.685632,-4.265317,5.750553,4.151405,-3.308747,-1.877529,4.713440,-1.703121,7.007064,-9.453636,-0.374522,0.185827,3.562396,8.077880,-2.353693,5.378852,9.651413,8.925330,-7.566819,9.510839,0.472126,-5.511027,-6.115655,-5.630203,9.189196,9.606738,4.874296,-9.795904,-4.624853,3.113064,-4.329354,-7.306868,-7.028942,-8.015427,8.745557,4.912493,7.214932,9.869315,-4.383075,-3.826633,-5.232423,-3.094349,-3.647080,8.386464,-7.488537,4.813765,6.442351,6.733476,1.157726,7.926428,1.795969,9.210429,-6.055453,-3.976847,-4.037669,-5.867242,-5.861473,-6.030698,-7.273777,6.838351,-7.760419,0.285177,5.799647,-4.289381,-2.605942,7.712061,-7.715181,2.769337,3.441876,-6.182216,-9.307691,0.824353,9.607360,2.901425,0.465993,-9.589140,5.373267,4.435172,-3.072719,6.474865,9.615462,-3.674651,-8.157195,5.954783,9.773676,2.190933,-1.231451,0.095981,5.804999,3.970285,6.709486,-9.333793,8.150146,4.057014,5.001195,9.389945,2.160324,6.795736,8.387216,-8.425479,-5.660113,-4.715732,-4.947203,-1.290011,-1.836099,-6.150873,1.593387,-6.129125,-6.193893,9.839203,-8.434176,6.691293,-7.384922,5.504265,3.496085,4.982659,-8.632997,-3.288595,2.077517,-2.079930,7.991121,6.328792,3.788010,6.339357,-0.888148,-4.284574,0.765271,-6.114050,-7.237868,0.895776,1.869021,8.511868,-2.388091,-4.416320,-9.303752,5.668905,0.686059,-6.231587,-6.231295,4.340654,-7.180591,-2.293530,3.440462,-5.747150,-5.257569,8.131608,-1.080642,9.438856,-8.015680,-4.791707,-4.035583,-8.292165,-3.618287,3.040195,3.030632,1.347995,-3.658589,3.941287,8.330309,4.623407,-0.319735,8.543454,0.591368,0.482839,0.096034,-2.300200,-8.689038,2.114831,5.839684,3.161570,5.154705,5.878548,-4.752709,9.183847,-1.694482,-9.470723,0.566959,3.265577,-0.021616,3.837791,-6.304729,-5.214198,-9.012132,3.182357,-6.382694,-3.970815,-2.489828,1.779374,9.349854,-3.925149,8.989133,-8.122727,-8.071967,7.656863,-1.546934,-3.955190,-3.729441,8.177963,6.306571,-9.936830,-7.877290,3.738204,-2.864973,3.637784,-1.192659,4.607015,-6.450908,-9.833945,8.873926,-8.826617,-2.908100,-9.944516,5.658984,-6.805029,0.917971,-4.175334,0.304486,-5.291079,-7.700418,1.312406,1.334424,-6.692929,-7.904632,-0.613067,-9.124193,-5.994449,-6.671825,1.137216,-4.009369,-0.696577,-1.896117,1.388764,-3.627510,-0.819854,-7.764045,4.386914,-2.672001,2.618219,9.703255,0.521405,-3.543610,-0.254261,-6.929604,-7.434455,8.034883,-6.672099,7.062691,-9.410745,9.003172,-1.961712,-1.307896,1.109590,7.589689,-3.255967,7.473867,-2.018958,8.474403,-7.666833,-2.278452,-8.700957,0.429541,-3.725396,2.958147,-1.516988,0.682704,-3.205938,5.893700,-0.517705,-1.501725,0.835503,-5.907875,-5.455581,-0.362567,-5.889799,5.892397,3.337892,0.494229,-6.238772,-7.929440,-6.951409,7.518358,3.587796,-3.285850,-0.282061,-9.784908,-8.643275,3.058585,-0.395675,8.847343,4.806497,-2.859717,0.567596,-1.580955,-3.968222,3.378248,-0.400666,3.436600,5.933772,4.191346,-8.901212,5.798174,9.774446,5.986318,-2.794765,-0.819499,-8.890122,-8.535674,-8.791483,0.298206,4.297036,6.694819,4.723857,-2.936891,8.371621,-1.132200,0.775676,-5.557472,9.686728,5.353890,4.350114,5.206806,-1.720334,6.425842,-5.420827,8.932577,6.945821,6.465878,4.041628,0.822955,7.705260,-7.182072,1.337566,2.555194,0.236158,0.075477,-7.818759,-7.662111,-6.528603,-5.872902,-8.606898,1.531054,-6.561999,-8.797905,-4.014302,-0.647382,-9.644731,-3.874241,-9.271873,-6.713734,-1.297076,-7.709481,-0.666248,8.041816,-5.236669,6.190116,9.944176,9.357726,0.905755,4.869101,3.358882,2.600698,3.688356,-8.397509,-5.552707,9.745718,-7.494665,9.790118,-6.406757,6.823384,-9.176927,3.210395,6.015106,-9.355692,-1.678260,-5.979699,1.045880,1.830903,-3.197529,-9.474114,-9.952690,6.599693,7.890793,2.726224,-9.522994,3.632495,6.708968,-8.803283,6.522625,3.321192,4.174965,7.735873,-6.045718,5.204704,-3.011970,3.993669,2.137254,7.329707,5.622387,-7.415997,-1.213101,8.949665,-7.596863,-3.419336,-5.856360,7.744120,-0.212834,-6.001440,-3.926037,6.340003,-3.855105,7.380399,7.278295,-1.264386,-7.298249,-0.499459,-3.678034,-8.613467,-1.315742,-5.619717,4.685535,-3.416141,1.027452,-3.552920,-8.706681,-0.257241,-6.079471,-6.003866,9.578433,-6.749085,5.979443,-1.283597,-2.802174,-1.258180,5.961126,2.076863,-3.257253,-6.318298,0.436398,9.697660,-5.991729,-0.953731,-4.319400,1.202690,1.923616,3.357911,-0.746181,0.434141,-7.807416,0.049499,-7.477581,-4.590035,-3.142938,-8.078252,3.180846,4.898408,-5.652762,-9.884071,-3.186688,-5.138442,-1.831658,-5.917509,4.319041,2.784519,0.409230,4.350770,-6.681083,2.788473,1.991119,-7.497420,4.016978,-8.522825,2.329661,-9.489460,-7.008206,3.698675,-6.270799,-1.347845,2.371971,-5.573242,-2.063672,0.170647,4.296183,-8.684223,-0.087516,-5.886352,-5.146899,5.020567,9.756405,-5.961461,-0.107866,-6.367655,0.524105,-6.339573,1.938796,-8.872657,9.088458,-7.134790,-9.644099,9.709959,3.394050,-9.339420,-8.788440,8.809285,-4.930142,-0.805183,9.520903,0.934628,2.928109,-9.069364,-7.895507,-6.554302,-6.553809,8.565445,3.283889,9.730835,-8.967356,5.682609,-8.738361,-6.376965,-0.971256,8.938924,-2.812247,-7.053359,9.652763,-3.814638,9.228125,3.331209,8.388364,-3.271101,7.466414,1.124087,-3.966767,-7.288386,8.345702,3.365403,3.388484,2.097273,9.564891,4.766856,-3.977952,5.799040,4.660501,8.107881,8.443020,9.669464,-9.354223,-3.613786,2.620068,1.013655,3.791914,-5.203450,2.266133,-4.892669,-6.868091,9.862697,0.341267,-2.887357,9.119872,5.422903,-4.789097,0.808330,3.229729,3.991631,8.951413,8.480370,8.090027,7.637542,-4.079255,8.371647,-0.559635,2.018075,9.910749,-7.259328,-7.527052,2.684359,-7.190505,0.743095,-2.434433,6.082991,1.772262,2.413530,-0.812482,7.655286,-7.391525,8.729542,-1.634478,3.163055,1.105526,-4.995313,5.913312,-0.767564,5.505113,-9.936858,-4.156573,4.105007,-0.664079,-0.369772,2.830000,9.482267,-8.455758,-5.019304,-3.438482,2.538403,1.425234,6.907344,9.871166,9.480296,4.394745,4.729844,4.307687,1.343690,5.022026,-7.258329,4.951785,-2.191737,6.253548,-6.897983,-0.024435,1.861517,-2.631535,3.972641,-2.050819,-7.890424,-8.492267,9.878712,-8.424028,1.964767,-3.657387,-9.341398,-9.589387,4.303512,-1.909220,4.798492,2.320165,-2.819473,2.246916,-0.615140,-2.835328,1.696647,-2.332687,-0.451802,5.155136,-8.675568,-9.222591,9.941038,7.588220,-4.209881,0.183264,8.407646,-4.739649,-4.538165,1.473367,2.637589,1.605409,-0.242750,9.768135,-4.550696,-3.698893,-2.465216,8.834900,9.092607,-2.114754,-4.419739,7.067019,6.795875,-0.544923,4.507420,-6.394034,8.829380,0.234825,1.848941,6.235811,2.048729,-8.063903,-9.366840,-6.155159,-9.357447,4.844271,-2.856055,-6.921843,-1.155063,5.498226,-3.814256,-3.433547,0.828483,3.749461,-9.115830,-4.456552,9.458103,6.226210,-4.075869,8.290930,-6.979211,-3.070460,-3.537533,-8.816239,5.973584,-4.065534,4.126703,3.112880,3.500355,8.660208,4.312561,0.032446,-0.177083,-2.473064,-8.816543,-9.753286,-6.682809,3.324291,9.752837,1.932559,1.911278,0.618541,-0.800814,5.162926,3.744968,7.590810,-7.070438,7.075768,9.500323,-1.366711,-8.774590,3.309345,8.641416,3.327920,-6.428753,9.205959,-2.968661,0.367326,9.330618,-4.981242,6.622248,-3.877854,5.524752,1.144621,2.184390,-3.065905,-9.976177,5.348445,9.783872,-3.821981,0.106354,7.104522,-8.093497,3.569975,-0.395219,1.644096,7.694303,9.165549,8.944112,-1.785539,-0.794269,-7.477286,-6.600859,-7.784099,-9.860464,5.837883,-5.745350,-2.991721,7.803726,7.498915,3.354804,-1.858705,-2.389054,8.023910,-3.974093,-3.418421,9.592628,3.500838,-7.907904,5.318750,-1.257994,2.071500,0.246922,-9.447532,9.029561,-7.011194,-6.886433,3.358143,3.537247,-2.820101,-2.677176,-9.638136,-9.288591,4.434250,-9.063042,3.179235,-6.041407,1.901296,-9.873369,-3.271709,1.403241,6.274129,0.967530,-5.172456,2.752446,-7.805290,-8.023605,6.493711,-3.873405,6.001459,7.302183,-4.011658,4.714684,-6.301404,6.168064,9.032677,1.357242,-3.336577,-5.094603,7.075386,6.664953,2.077503,5.391249,-4.335899], dtype = "float64")#candidate|1675|(1728,)|const|float64
call_1674 = relay.TupleGetItem(func_581_call(relay.reshape(const_1675.astype('float64'), [9, 16, 12]), relay.reshape(const_1675.astype('float64'), [9, 16, 12]), ), 0)
call_1676 = relay.TupleGetItem(func_585_call(relay.reshape(const_1675.astype('float64'), [9, 16, 12]), relay.reshape(const_1675.astype('float64'), [9, 16, 12]), ), 0)
func_382_call = mod.get_global_var('func_382')
func_384_call = mutated_mod.get_global_var('func_384')
const_1690 = relay.const([6.534251,-8.645588,-7.964270,-7.595028,-2.898806,5.037366,2.730523,5.777399,-6.674752,8.738958,-9.130882,-8.690014,-3.269327,-6.356969,-1.624112,-7.481680,-7.034072,-9.979512,5.173787,-9.964519,-7.374942,-1.428725,5.212723,-5.541401,3.590739,-7.543488,9.036294,9.546357,-3.026595,0.166840,3.766446,-4.839414,2.114877,-7.262214,7.767036,-4.341993,-4.409931,3.519676,-9.006298,5.547313,2.553763,1.203603,0.539350,-0.960912,-0.667653,-2.255161,2.756091,-5.466795,-4.189082,1.458881,6.797238,0.599120,0.231578,2.644234,-6.748916,9.278696,0.554241,-1.273347,8.601480,-6.677273,2.899767,4.623511,1.132013], dtype = "float32")#candidate|1690|(63,)|const|float32
call_1689 = func_382_call(relay.reshape(const_1690.astype('float32'), [1, 7, 9]))
call_1691 = func_382_call(relay.reshape(const_1690.astype('float32'), [1, 7, 9]))
output = relay.Tuple([call_1644,call_1661,call_1674,const_1675,call_1689,const_1690,])
output2 = relay.Tuple([call_1645,call_1662,call_1676,const_1675,call_1691,const_1690,])
func_1693 = relay.Function([], output)
mod['func_1693'] = func_1693
mod = relay.transform.InferType()(mod)
mutated_mod['func_1693'] = func_1693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mutated_mod.get_global_var('func_1693')
call_1694 = func_1693_call()
output = call_1694
func_1695 = relay.Function([], output)
mutated_mod['func_1695'] = func_1695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1083_call = mod.get_global_var('func_1083')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_1698 = relay.TupleGetItem(func_1083_call(), 0)
call_1699 = relay.TupleGetItem(func_1084_call(), 0)
func_581_call = mod.get_global_var('func_581')
func_585_call = mutated_mod.get_global_var('func_585')
var_1706 = relay.var("var_1706", dtype = "float64", shape = (1728,))#candidate|1706|(1728,)|var|float64
call_1705 = relay.TupleGetItem(func_581_call(relay.reshape(var_1706.astype('float64'), [9, 16, 12]), relay.reshape(var_1706.astype('float64'), [9, 16, 12]), ), 0)
call_1707 = relay.TupleGetItem(func_585_call(relay.reshape(var_1706.astype('float64'), [9, 16, 12]), relay.reshape(var_1706.astype('float64'), [9, 16, 12]), ), 0)
func_1289_call = mod.get_global_var('func_1289')
func_1290_call = mutated_mod.get_global_var('func_1290')
call_1715 = relay.TupleGetItem(func_1289_call(), 0)
call_1716 = relay.TupleGetItem(func_1290_call(), 0)
func_860_call = mod.get_global_var('func_860')
func_862_call = mutated_mod.get_global_var('func_862')
call_1725 = relay.TupleGetItem(func_860_call(), 5)
call_1726 = relay.TupleGetItem(func_862_call(), 5)
output = relay.Tuple([call_1698,call_1705,var_1706,call_1715,call_1725,])
output2 = relay.Tuple([call_1699,call_1707,var_1706,call_1716,call_1726,])
func_1732 = relay.Function([var_1706,], output)
mod['func_1732'] = func_1732
mod = relay.transform.InferType()(mod)
var_1733 = relay.var("var_1733", dtype = "float64", shape = (1728,))#candidate|1733|(1728,)|var|float64
output = func_1732(var_1733)
func_1734 = relay.Function([var_1733], output)
mutated_mod['func_1734'] = func_1734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_860_call = mod.get_global_var('func_860')
func_862_call = mutated_mod.get_global_var('func_862')
call_1795 = relay.TupleGetItem(func_860_call(), 2)
call_1796 = relay.TupleGetItem(func_862_call(), 2)
output = relay.Tuple([call_1795,])
output2 = relay.Tuple([call_1796,])
func_1801 = relay.Function([], output)
mod['func_1801'] = func_1801
mod = relay.transform.InferType()(mod)
output = func_1801()
func_1802 = relay.Function([], output)
mutated_mod['func_1802'] = func_1802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1083_call = mod.get_global_var('func_1083')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_1803 = relay.TupleGetItem(func_1083_call(), 0)
call_1804 = relay.TupleGetItem(func_1084_call(), 0)
func_1229_call = mod.get_global_var('func_1229')
func_1232_call = mutated_mod.get_global_var('func_1232')
var_1810 = relay.var("var_1810", dtype = "int32", shape = (1, 35))#candidate|1810|(1, 35)|var|int32
call_1809 = func_1229_call(relay.reshape(var_1810.astype('int32'), [1, 7, 5]))
call_1811 = func_1229_call(relay.reshape(var_1810.astype('int32'), [1, 7, 5]))
output = relay.Tuple([call_1803,call_1809,var_1810,])
output2 = relay.Tuple([call_1804,call_1811,var_1810,])
func_1815 = relay.Function([var_1810,], output)
mod['func_1815'] = func_1815
mod = relay.transform.InferType()(mod)
mutated_mod['func_1815'] = func_1815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1816 = relay.var("var_1816", dtype = "int32", shape = (1, 35))#candidate|1816|(1, 35)|var|int32
func_1815_call = mutated_mod.get_global_var('func_1815')
call_1817 = func_1815_call(var_1816)
output = call_1817
func_1818 = relay.Function([var_1816], output)
mutated_mod['func_1818'] = func_1818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1083_call = mod.get_global_var('func_1083')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_1836 = relay.TupleGetItem(func_1083_call(), 0)
call_1837 = relay.TupleGetItem(func_1084_call(), 0)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_1861 = relay.TupleGetItem(func_1693_call(), 1)
call_1862 = relay.TupleGetItem(func_1695_call(), 1)
func_860_call = mod.get_global_var('func_860')
func_862_call = mutated_mod.get_global_var('func_862')
call_1865 = relay.TupleGetItem(func_860_call(), 5)
call_1866 = relay.TupleGetItem(func_862_call(), 5)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_1868 = relay.TupleGetItem(func_1693_call(), 3)
call_1869 = relay.TupleGetItem(func_1695_call(), 3)
output = relay.Tuple([call_1836,call_1861,call_1865,call_1868,])
output2 = relay.Tuple([call_1837,call_1862,call_1866,call_1869,])
func_1870 = relay.Function([], output)
mod['func_1870'] = func_1870
mod = relay.transform.InferType()(mod)
mutated_mod['func_1870'] = func_1870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1870_call = mutated_mod.get_global_var('func_1870')
call_1871 = func_1870_call()
output = call_1871
func_1872 = relay.Function([], output)
mutated_mod['func_1872'] = func_1872
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1876 = relay.var("var_1876", dtype = "int16", shape = (10, 14, 9))#candidate|1876|(10, 14, 9)|var|int16
var_1877 = relay.var("var_1877", dtype = "int16", shape = (10, 14, 9))#candidate|1877|(10, 14, 9)|var|int16
bop_1878 = relay.logical_xor(var_1876.astype('int16'), relay.reshape(var_1877.astype('int16'), relay.shape_of(var_1876))) # shape=(10, 14, 9)
bop_1889 = relay.floor_mod(bop_1878.astype('float64'), relay.reshape(var_1876.astype('float64'), relay.shape_of(bop_1878))) # shape=(10, 14, 9)
func_1511_call = mod.get_global_var('func_1511')
func_1514_call = mutated_mod.get_global_var('func_1514')
const_1917 = relay.const(-3.060140, dtype = "float64")#candidate|1917|()|const|float64
var_1918 = relay.var("var_1918", dtype = "float64", shape = (1, 576))#candidate|1918|(1, 576)|var|float64
call_1916 = relay.TupleGetItem(func_1511_call(relay.reshape(const_1917.astype('float64'), []), relay.reshape(var_1918.astype('float64'), [576,]), ), 0)
call_1919 = relay.TupleGetItem(func_1514_call(relay.reshape(const_1917.astype('float64'), []), relay.reshape(var_1918.astype('float64'), [576,]), ), 0)
uop_1926 = relay.tan(var_1918.astype('float64')) # shape=(1, 576)
bop_1931 = relay.maximum(uop_1926.astype('int32'), relay.reshape(var_1918.astype('int32'), relay.shape_of(uop_1926))) # shape=(1, 576)
bop_1934 = relay.bitwise_xor(bop_1878.astype('int8'), relay.reshape(var_1876.astype('int8'), relay.shape_of(bop_1878))) # shape=(10, 14, 9)
uop_1942 = relay.acos(bop_1931.astype('float64')) # shape=(1, 576)
bop_1946 = relay.floor_mod(uop_1942.astype('float32'), relay.reshape(call_1916.astype('float32'), relay.shape_of(uop_1942))) # shape=(1, 576)
bop_1949 = relay.floor_mod(uop_1942.astype('float32'), relay.reshape(call_1919.astype('float32'), relay.shape_of(uop_1942))) # shape=(1, 576)
bop_1952 = relay.divide(uop_1942.astype('float32'), relay.reshape(uop_1926.astype('float32'), relay.shape_of(uop_1942))) # shape=(1, 576)
output = relay.Tuple([bop_1889,const_1917,bop_1934,bop_1946,bop_1952,])
output2 = relay.Tuple([bop_1889,const_1917,bop_1934,bop_1949,bop_1952,])
func_1956 = relay.Function([var_1876,var_1877,var_1918,], output)
mod['func_1956'] = func_1956
mod = relay.transform.InferType()(mod)
mutated_mod['func_1956'] = func_1956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1956_call = mutated_mod.get_global_var('func_1956')
var_1958 = relay.var("var_1958", dtype = "int16", shape = (10, 14, 9))#candidate|1958|(10, 14, 9)|var|int16
var_1959 = relay.var("var_1959", dtype = "int16", shape = (10, 14, 9))#candidate|1959|(10, 14, 9)|var|int16
var_1960 = relay.var("var_1960", dtype = "float64", shape = (1, 576))#candidate|1960|(1, 576)|var|float64
call_1957 = func_1956_call(var_1958,var_1959,var_1960,)
output = call_1957
func_1961 = relay.Function([var_1958,var_1959,var_1960,], output)
mutated_mod['func_1961'] = func_1961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_1981 = func_1315_call()
call_1982 = func_1315_call()
func_1956_call = mod.get_global_var('func_1956')
func_1961_call = mutated_mod.get_global_var('func_1961')
const_1991 = relay.const([2,3,10,-3,-1,9,5,-7,-9,-10,6,-4,-2,4,-4,-6,-6,2,-5,2,-9,2,-6,-5,-5,-8,5,-3,-10,-10,5,-3,-5,6,7,5,-10,1,6,-3,-3,6,-6,-4,-6,-1,2,-4,8,-6,10,2,-10,10,-9,1,-5,-9,-5,-9,9,4,5,-8,-7,-1,-8,1,-6,-6,-3,6,-3,10,9,-9,-1,-10,10,-1,-6,8,-5,-4,9,5,-6,-1,-7,-6,-10,7,-9,-10,-8,-10,3,-8,8,-9,-3,-8,-7,-9,9,5,4,3,-10,6,5,-2,-5,-7,4,7,-2,10,3,-8,-7,-4,-6,4,-9,5,6,2,-10,4,7,-3,8,10,3,6,2,10,-6,-3,-7,-10,-8,6,-3,3,-4,9,-2,-5,-9,-6,10,9,2,-10,-10,2,5,5,-8,8,-5,-4,-9,1,-10,9,2,-4,9,3,-8,-7,-5,-1,-1,7,-9,4,-1,-4,-1,-1,-10,-7,-10,-8,7,1,10,-7,2,-8,8,-9,-6,-10,-7,-9,-5,-5,9,5,-1,-10,-8,-3,-4,3,4,8,6,-8,-8,-9,-5,8,-8,-4,9,9,2,2,-4,5,-9,-7,-3,-8,-3,-4,3,-4,6,9,1,-5,-9,-6,-1,10,-6,-7,-3,-9,-3,-5,-6,-7,-7,8,-4,1,-9,8,-10,10,-7,-8,-1,7,2,10,10,-10,6,5,10,-5,2,9,-4,-1,-7,1,4,3,9,3,3,-4,-1,10,4,-10,-1,-8,9,7,-8,3,-8,9,-2,-7,-6,-5,-10,10,-2,-10,-9,-9,-10,6,7,-10,-8,4,-1,-6,-2,6,5,5,6,10,6,6,8,-5,-1,-3,6,-8,8,6,4,1,-9,9,-6,3,-10,9,2,6,9,-4,-7,-1,-6,-7,2,4,-6,9,3,5,2,3,10,-7,1,3,4,4,-5,-4,9,-8,-10,9,8,7,10,6,-3,8,-6,1,6,-2,6,-10,6,10,-5,-9,2,7,-10,-9,-5,7,7,1,-3,8,1,-4,6,-2,4,-7,1,-8,4,4,-6,9,8,1,-3,3,-7,-10,1,-5,5,-1,4,7,-1,-7,3,2,-8,-5,2,-6,4,-3,7,-10,-7,-1,2,-9,3,10,4,9,5,-2,1,7,3,10,7,4,-3,-7,5,6,1,-3,-7,6,6,10,-5,5,-8,-10,7,9,1,4,1,3,7,-9,-8,-8,-3,6,-7,8,7,10,-3,5,4,-1,1,-9,10,3,-2,-6,1,-5,-4,6,10,-9,-7,-9,6,-10,-2,5,8,3,1,7,3,4,6,9,8,-2,-2,9,-9,-5,7,-6,-2,-7,8,6,-7,-9,10,2,5,4,3,7,2,4,4,6,-8,-8,6,-10,-4,-9,-8,-4,-5,2,4,1,-1,-7,6,10,6,-2,4,7,-2,4,-9,3,-7,-1,4,6,8,10,-9,-8,2,9,-4,4,5,6,-6,-8,-3,5,3,-1,-7,3,-5,10,2,3,-8,-2,5,-8,8,-6,-5,6,-2,-6,-2,-4,-3,6,6,1,-6,-10,2,2,2,-1,-6,-4,8,7,1,6,-10,9,-2,1,-5,1,-6,9,10,6,9,-6,10,-6,9,-4,6,4,-4,-8,-7,-8,1,-3,-9,8,-7,-4,2,-7,-4,7,-6,8,7,9,-4,-6,-6,7,-8,-3,1,-3,7,-3,2,-1,-2,-8,-6,4,-4,6,-1,-5,-9,-5,4,-3,-7,2,-6,-8,1,-9,3,-8,4,-8,8,-4,-10,7,-7,8,5,-5,-2,-9,-7,1,-10,6,2,8,7,-7,3,4,-2,-5,-2,-10,-1,7,-7,-7,-7,2,-9,9,6,-5,-10,8,1,1,-2,-8,-9,-1,3,-5,5,2,-2,1,9,-7,-7,10,-6,3,-1,-3,6,-9,3,1,-5,-1,-6,-5,2,-3,-4,-9,4,-10,-3,-7,6,9,-10,-7,-5,-2,-5,-5,6,6,-9,-10,-6,-7,-3,7,-10,9,7,7,-6,-3,5,-8,6,-10,-6,9,3,1,2,-5,2,-4,-10,3,9,9,-7,-6,-8,9,9,5,6,7,-4,2,-8,9,7,-6,-9,2,-9,-9,5,2,-6,5,3,-1,6,-4,-8,-2,4,-3,10,-1,4,-7,-9,-2,-6,-8,8,-7,-3,-9,-4,7,-7,-3,8,8,-5,10,4,1,-8,8,-8,-2,-5,-1,-10,-9,1,-7,-5,2,10,3,5,-3,-3,-8,-5,2,-1,-3,5,9,-1,6,1,-7,9,4,-4,-6,-7,7,-5,4,-6,-7,8,-7,-2,6,-1,4,-2,2,5,-2,2,-6,10,5,8,7,9,4,6,-7,-2,-5,-1,-8,-6,-1,-10,9,9,-6,-5,-3,-6,8,-9,-9,5,-5,2,3,6,10,2,-7,-3,-8,-5,-5,-9,3,7,9,7,-8,-9,-8,-6,-10,6,-7,-10,9,7,-8,-6,-4,-4,-5,-9,9,6,1,-4,8,8,-10,4,6,3,8,5,-2,-5,10,-10,1,4,7,5,-9,5,-1,-9,10,1,1,10,-4,10,10,-1,-7,-3,5,2,-10,3,3,10,-4,-1,-8,-8,-5,-6,-10,6,-2,-2,8,10,8,-3,5,-8,6,-4,10,7,-2,-2,10,10,8,10,5,-8,-3,-7,6,-7,-3,-9,7,-10,-8,1,-10,-1,-4,-6,9,3,-5,-10,6,-5,10,-1,9,6,-4,5,-2,4,-7,7,6,-8,10,2,-5,4,1,4,9,-7,-9,-6,-1,6,-3,-4,3,-10,1,-9,-10,-4,10,-3,8,-1,4,-7,-8,-3,-8,-9,-10,-3,10,-7,-5,-1,9,-2,-4,5,2,3,6,10,4,4,8,-4,9,9,4,-7,-6,1,3,7,1,5,7,-3,7,-6,-5,5,4,8,-4,1,5,9,2,-5,-8,-2,8,-10,3,1,-6,1,-10,8,-3,5,4,8,-2,9,-3,-8,4,-9,-4,6,9,-2,6,5,10,9,-4,10,-10,-7,-9,6,-3,-2,-5,8,6,3,9,-3,-5,-1,-9,-6,-9,2,10,-1,10,1,-2,9,9,9,-7,-7,3,3,10,-1,-4,6,8,6,-1,-3,-8,-10,-4,4,-1,6,-8,8,-10,-6,-1,-8,-10,-8,3,-7,-6,7,7,-5,-2,-6,2,10,-4,-6,-1,-5,1,3,7,-7,8,-4,5,5,10,2,5,4,8,-6,6,-1,5,5,5,-4,5,-8,-7,2,4,9,-3,1,-5,-2,8,-10,-7,-6,8,-5,-10,-5,-8,6,10,1,8,-7,-1,-4,4,6,2], dtype = "int16")#candidate|1991|(1260,)|const|int16
const_1992 = relay.const([[-3.247740,5.980589,-9.792453,9.445436,-8.118342,1.589428,-6.801267,-3.985176,3.477525,-5.688200,-8.393258,-0.701652,-4.126569,8.856236,-9.551117,-1.406383,9.579747,-5.106974,0.793681,-5.090038,-1.091943,3.604519,-2.341606,3.428629,2.172128,2.143831,8.229611,-1.257182,7.215069,-4.337952,4.202399,-1.577854,-9.728917,-6.451845,-7.294939,-0.099846,-0.151119,-4.301465,0.315743,0.999628,8.997650,-6.554542,-8.972964,-5.639012,-5.572288,0.408250,8.839557,-5.362804],[4.761450,6.613747,1.246042,-4.686016,9.489637,-1.258943,-1.333728,1.181268,-0.661128,-9.096462,-0.660556,-9.389767,-4.788880,1.435661,-7.514157,9.848087,-9.291483,7.528090,-2.651212,-8.778048,-0.042749,-4.456559,-2.562331,-3.780380,8.990812,5.702515,4.786816,6.898007,7.163353,4.877314,-4.961812,6.321166,-9.928639,2.830984,-8.115412,-7.818563,-6.326856,2.177676,2.684819,-9.255098,8.508678,-7.776394,9.980091,-8.925430,-2.729340,-1.657117,-8.663283,-3.864565],[0.216026,-3.642071,3.213400,-9.823224,8.711545,-5.232729,-0.380481,-4.620913,-9.409553,-7.957362,-9.970313,-6.357306,7.011095,7.633794,2.777178,-7.922089,9.699974,-2.782024,5.464180,6.897202,4.995149,3.569157,-3.478758,9.747884,3.285228,-9.707901,-2.825986,-8.870950,-5.388768,4.063214,9.795486,-8.584462,-1.749093,3.516148,2.831401,6.662873,-7.129798,-8.412935,-0.870861,0.049750,-9.075067,0.324425,1.863931,-5.422333,9.038730,0.202927,1.130243,-3.694943],[-5.473816,9.691380,-7.241599,-0.680377,-8.088682,5.486103,-8.201289,-6.668402,-5.142013,9.123937,4.462071,4.275618,-2.653279,-8.808690,-9.811368,2.646068,-8.646855,1.193728,3.994446,-5.390682,-8.204328,-6.672593,-1.005261,2.363507,-8.347614,-7.652667,-2.033102,0.496069,-8.127536,-0.082024,-5.420290,-8.883989,7.417122,8.143822,2.922049,-6.205146,3.705959,8.490814,8.904184,-0.904667,5.007075,9.245516,3.379623,-6.391695,-1.000389,-7.728735,8.905533,-6.598875],[-4.733624,6.447492,1.833031,-7.580606,4.998330,-8.223832,-7.442907,-0.695430,-6.089304,-9.555503,-6.598529,2.443342,7.541258,2.984321,-8.632432,9.433960,4.342661,8.101260,-2.988400,1.471325,2.391522,-4.445525,3.520321,4.915842,2.710359,3.904731,8.286342,-5.448089,-3.077017,5.993080,7.520724,-4.209565,0.523133,8.493644,1.221033,0.233873,0.055998,-7.868388,4.650943,-3.615217,1.612560,-2.072970,-8.602317,-4.999238,8.232689,-9.248660,-4.720666,0.024579],[-9.086514,-4.883386,-6.684122,-1.852419,0.766108,-8.824785,-6.195814,9.379217,-1.304005,-9.670711,7.795200,6.547885,-4.668872,4.192653,-0.071588,9.159158,-3.009968,-7.114572,2.111604,-6.113427,-5.746128,3.018155,2.569788,-1.327926,0.965921,-1.372903,5.710932,4.054817,4.999693,2.182668,4.315546,-0.954474,-4.643687,-8.067558,4.351627,-9.355217,5.162272,6.896448,3.842657,-5.903356,-8.960299,3.558062,8.819188,-6.073376,8.091653,-6.473184,-8.410712,-5.924162],[-2.015871,-5.061990,0.949357,9.210785,5.256065,8.579948,-5.204605,9.453685,9.054526,5.105406,0.909947,6.422235,5.160500,6.538356,9.480952,-6.680625,8.568633,7.429726,4.180487,0.678536,9.121759,7.317563,9.227959,4.528114,9.449397,6.421265,-9.123097,-1.273118,-4.019761,5.518197,4.022127,1.084436,-0.731212,-3.322267,3.113642,-5.793323,-3.201701,7.531066,-3.444216,-2.366859,9.900136,-9.258690,9.142718,4.575845,3.664377,1.740248,-2.293431,0.969285],[9.545969,-3.760327,1.842737,-8.471028,3.443808,6.055986,-8.830514,0.817710,6.534004,0.317497,-6.064802,9.996907,6.654463,9.500942,0.674887,-4.845972,-2.406785,-7.456498,-9.223553,2.551858,-2.729965,5.030128,8.844870,-4.339865,7.044432,7.554328,-4.953196,6.668685,8.303071,4.530919,6.594757,7.818925,-4.619332,0.770037,-3.035817,-6.312845,-6.631055,0.311370,8.302677,-9.028044,0.543593,-2.561738,-6.489913,7.574620,-8.503726,4.480697,3.723808,8.062609],[-9.919741,-9.076575,-8.401296,9.246995,-9.479066,-6.493644,-8.447288,-0.981816,-4.097125,4.833040,-2.771986,-5.464199,8.388952,-2.964390,-9.181820,-0.292196,0.287654,-1.915634,-9.806191,-2.559177,-8.904375,-2.886248,0.856490,9.420215,4.014639,0.595835,7.191522,6.263336,1.521268,6.079276,9.353521,-6.382248,-6.203958,-6.703321,-3.114843,-8.222078,8.053522,1.509972,8.673228,-8.251305,1.821183,7.590975,2.790414,2.606995,-7.141915,2.773071,-8.368146,-0.455601],[-9.627860,8.062025,4.084623,8.449216,-2.107937,-0.556029,8.000339,3.636836,-1.623021,-2.629448,2.088475,-6.849527,-3.322464,1.778661,6.799250,-6.014780,6.755856,-5.303176,4.767194,7.328583,-8.140928,3.385465,8.129487,-1.793324,5.258645,9.242627,-1.763551,9.119996,0.519588,6.453785,-9.141360,-3.413791,-9.553652,0.293210,0.123463,4.464534,-7.424406,6.399284,5.108180,3.059269,-9.905683,6.344412,-0.227676,-7.296655,-5.430643,-6.713070,8.558339,-5.461991],[3.163190,2.157325,-0.913187,-2.723822,6.888685,-7.219717,5.237760,-5.201786,4.102882,-1.256824,-8.305844,7.922256,-2.353629,4.333433,8.135556,4.306268,2.885741,2.485107,-4.292127,-8.711815,8.624331,-6.250652,-1.768742,0.179078,4.452416,8.053417,-1.878764,-3.820791,-1.933411,-0.624174,5.254112,-0.393450,-7.944497,-7.864140,0.378983,-6.068737,-9.295105,8.800299,8.299672,-5.737350,-2.284682,-9.102080,-5.098200,-4.678045,6.580704,-9.309445,-9.496318,7.896261],[-7.857674,6.128223,9.108644,3.976768,9.092860,-3.678065,6.674691,6.557431,1.479337,-2.221032,-3.328926,-4.674468,7.093537,-2.352290,-7.962273,-1.889770,2.141414,-7.198913,9.314723,-0.336747,3.772650,-5.742757,6.451968,-8.620488,1.428262,3.589359,1.041672,3.381120,-0.892793,9.891048,-0.417545,-5.191863,8.545743,-1.710510,-3.435546,5.084222,1.315478,-2.241583,5.984028,7.317973,6.906051,-2.117796,6.142265,9.992501,8.097484,-0.447889,-4.192317,-3.710289]], dtype = "float64")#candidate|1992|(12, 48)|const|float64
call_1990 = relay.TupleGetItem(func_1956_call(relay.reshape(const_1991.astype('int16'), [10, 14, 9]), relay.reshape(const_1991.astype('int16'), [10, 14, 9]), relay.reshape(const_1992.astype('float64'), [1, 576]), ), 1)
call_1993 = relay.TupleGetItem(func_1961_call(relay.reshape(const_1991.astype('int16'), [10, 14, 9]), relay.reshape(const_1991.astype('int16'), [10, 14, 9]), relay.reshape(const_1992.astype('float64'), [1, 576]), ), 1)
func_1732_call = mod.get_global_var('func_1732')
func_1734_call = mutated_mod.get_global_var('func_1734')
const_1999 = relay.const([[7.947608,6.608664,3.895241,-6.378687,-3.732555,-6.563911,-2.780167,8.029944,-3.571464,-4.363709,-3.939923,1.254882,-8.522474,2.612548,5.255547,-4.709247,-3.118970,2.114104,-6.652083,-0.061581,-2.626200,7.914622,7.159543,-2.368346,-6.109186,-8.261919,3.703238,-8.908356,-8.473573,3.509657,9.888357,-3.898113,9.198498,7.948265,-9.335736,9.248423,-2.225709,9.156385,7.458613,-9.980100,-1.157583,-1.866431,-8.870854,6.157713,-7.205198,-6.357497,-2.707483,-8.779037,-7.582477,-9.350436,5.184500,-1.900110,-6.497517,7.465177,6.779649,5.338841,-1.057727,-5.816201,4.640539,4.042869,-9.241366,0.971344,7.803158,-5.727975,9.907252,-0.874052,-5.454127,5.929136,-0.534854,-0.682147,-9.785435,9.592362],[-6.106012,7.337422,-0.063521,5.355122,4.443751,0.255691,-7.392685,-3.025304,-6.658796,-6.944354,6.231032,8.567401,1.834109,-7.898067,-9.947789,-7.506013,0.337107,-3.206398,8.243441,-4.715934,-3.378898,8.045697,6.031660,-8.261050,-0.065677,3.230531,-5.442911,1.248568,-7.735276,9.140326,1.281625,5.101231,-3.637157,-8.183561,-7.825672,-5.896712,6.010592,1.137421,8.925368,-7.242090,6.979084,-5.093964,5.738828,2.489607,5.008729,-6.840206,-9.849855,4.480648,1.822887,-6.292645,-4.346746,-9.916522,-3.508396,-7.005693,3.671253,9.909678,-1.997865,0.467438,0.909113,-4.941738,9.490415,-2.318744,-3.204564,-0.713187,3.883541,4.328150,0.793658,5.115959,-9.032916,-9.399512,5.916246,-3.882280],[2.748065,9.645308,-6.120634,4.408038,-5.430879,0.784092,1.614876,-9.705672,4.035009,-8.336120,9.157296,-5.661937,4.614178,0.294369,6.325087,5.916674,1.698793,9.593761,-4.772826,-7.765021,-1.376070,9.158256,4.193153,6.741995,-3.027798,-5.736178,7.631902,9.990471,9.172569,7.194761,-6.699750,5.090762,2.942052,9.271892,0.202440,-5.972911,4.452075,7.679137,8.954998,6.296955,-9.205198,0.037781,0.929423,-9.995106,-0.477309,9.655104,-0.888448,-7.962632,4.183690,2.058041,4.174797,5.767160,-2.570903,-8.538492,3.674622,5.556845,2.083729,7.568148,8.127944,9.969271,-1.625144,-8.922675,1.151730,-9.693734,-5.683699,8.514337,-9.187429,-7.860130,3.355474,-3.897068,0.626010,-4.388537],[7.765813,6.117800,1.424318,-6.123869,9.404090,6.139002,5.859742,0.093273,0.473314,-3.937083,2.071610,-5.738949,7.314581,1.572599,-9.932126,2.630880,-3.285778,-7.421845,8.736268,4.083372,8.838448,4.058803,-3.645951,-1.988024,5.684018,4.799551,-9.170901,6.139791,6.226228,-7.219626,-3.151405,7.402908,-2.807646,-5.842429,-7.582385,-9.060572,-5.833349,-7.673918,-9.027315,4.108483,6.735719,5.069614,-7.275152,0.857194,3.331816,-9.357740,2.100425,-3.498120,4.809122,6.918481,-6.517109,-1.243304,9.533602,-3.749855,9.382151,7.649165,-4.676595,-0.249814,1.171042,-5.684597,7.326693,-7.483109,-6.296700,-7.042480,-7.401446,6.802729,8.135676,3.633552,4.685626,5.836778,8.424793,3.156498],[5.111523,2.142508,-7.579167,6.322575,-9.751188,-3.156064,9.402368,-3.834045,6.978735,-1.098073,6.838262,6.081382,5.977627,-3.992471,-6.540695,0.612142,8.031494,-4.955731,-2.139807,-4.086784,-5.084785,-8.794931,7.574063,7.499643,-1.727517,-0.039743,8.078679,-5.294135,-5.402518,-7.931778,6.871204,-6.872660,-0.146693,-9.108436,-2.667678,8.640201,8.596094,-5.564274,-1.772492,1.958366,-4.198685,1.013579,-5.509627,-7.607330,-8.312980,6.785514,-6.215562,-4.994922,-5.320767,-1.216263,5.964698,3.658787,1.865069,-2.914116,5.034885,-1.827514,9.141283,-4.801099,-5.102563,-5.557009,1.288579,-5.561105,6.824692,-7.764218,5.827373,-9.072262,-3.497280,7.342220,-3.183301,5.521371,-0.808930,3.914750],[9.341088,3.568990,-8.369906,-8.252718,1.171423,-7.279364,-8.959666,-5.803811,7.927861,-8.029176,9.803075,1.881754,1.196492,5.521726,-2.248277,2.805150,-1.749114,2.042302,-6.792039,-6.337235,-1.149405,-9.655721,1.088446,-9.821599,-3.984581,-4.554657,0.952808,2.477609,9.838726,-2.128768,3.464439,4.320130,-6.876022,-9.025346,2.453532,-2.208206,1.076102,-8.703573,8.628747,1.741404,7.223140,7.671950,9.092093,-3.508467,-2.660605,3.335646,-6.385386,7.650762,7.050069,-6.317108,6.621538,8.513338,9.433965,2.528561,-7.956721,-3.894304,0.588212,-1.234685,-0.282901,4.592201,0.717913,-1.921404,5.462258,-9.714802,-3.399729,7.680352,4.246796,-7.776102,-4.396554,-5.265840,6.900363,3.104639],[-1.699353,2.133172,-5.707643,7.227558,4.327352,9.283859,-5.076159,-7.478986,-2.935328,-7.806200,-4.988966,0.089954,-2.529475,1.292257,-6.329543,-0.325543,6.091473,-8.668929,-1.847038,6.589737,2.598120,0.855500,4.599685,-0.556736,7.048205,8.648492,-3.274099,9.140327,-0.166080,-9.816434,0.870081,-6.925893,-7.280515,-4.824540,-4.630830,1.592700,-7.565739,8.982231,-8.834079,-5.650680,-5.483020,6.078550,-9.292200,-1.708260,4.546717,2.586531,0.759535,9.391803,-1.606914,9.630514,-7.863210,8.178902,0.409460,-9.879311,-0.230067,6.070841,-3.251188,5.941570,3.508578,-8.907611,-7.052476,8.008976,1.634992,-2.595418,-0.892094,-7.176156,-2.369138,-5.421628,4.600210,9.025223,6.629926,-6.585978],[4.176510,-3.350195,3.907554,1.174553,-7.587419,-1.166695,-5.690719,-2.641164,-4.550754,1.161541,-5.825614,-8.027081,-3.917058,5.849902,-1.218023,9.402496,-6.449903,7.173962,-7.366685,4.008845,4.012336,-3.299988,-9.160218,3.725662,-2.044456,8.853205,-9.452038,-3.697646,8.081367,-2.806435,4.347928,4.519823,3.470149,-7.784811,-7.514924,-4.043142,8.247832,4.921876,6.207565,-4.508046,1.087205,-0.740762,1.732352,-9.340252,7.748984,-0.157707,-8.204972,-2.703099,-0.516592,-3.500714,-7.832265,3.282036,1.229596,-3.011476,9.485185,-5.236803,-0.171225,-3.277235,7.177906,0.117233,8.600249,-8.694102,0.864424,6.947527,5.518204,-6.888222,-3.825781,5.935571,-5.481172,4.019005,-5.865099,-2.947921],[-4.984856,-4.483069,6.022838,-6.879651,8.350955,2.346040,5.474694,9.058156,-6.178080,5.409983,1.095320,-6.309696,-6.093171,9.745049,-3.636509,0.035606,-9.769412,-0.712891,9.979101,-6.264734,1.426106,-5.045201,-1.123214,2.837161,1.193304,5.122088,9.499004,8.768245,8.356357,-7.496125,-4.444919,5.101840,0.181508,9.953303,-5.457923,-5.418007,1.211458,7.532446,-7.024818,-2.034133,5.176748,-3.198272,8.072421,-6.047398,-1.572599,-5.609533,-5.634122,8.628691,-4.312364,5.439983,-8.719051,-2.965668,-7.187371,1.069751,2.108416,-5.360992,1.650316,6.394360,-1.559947,-1.673287,2.781143,-9.149927,-3.462707,5.787672,-6.252154,8.171000,-8.393798,-2.399407,7.337026,3.107833,6.650590,8.969772],[-5.715772,7.740257,-0.868746,2.151978,3.045071,-7.039585,5.039139,-6.610073,-2.290976,-1.964140,3.156923,4.780086,-6.688090,2.208272,-0.871211,4.282532,-1.187264,-5.808767,-8.799796,-3.512884,2.078417,0.623105,-5.638237,-3.500622,6.791783,-5.456537,5.565459,-6.176937,-2.574006,4.386998,-3.940817,-4.313306,8.242634,-2.147746,-3.289686,6.953235,3.411598,9.232470,-9.519950,-2.793734,-0.642560,3.129822,-4.775641,-6.391855,8.019019,5.979859,-3.023639,-3.857838,-5.093852,8.988814,7.600797,-3.165432,5.536337,3.802097,6.092208,6.053278,-0.170880,0.299924,-2.217453,0.869569,4.806803,-7.823152,-5.955525,-5.970276,8.374441,-9.440453,-7.815411,6.220172,-6.457078,-2.052802,-4.543572,6.741469],[-8.197374,8.651725,-8.269068,-8.707413,3.023190,2.738287,-3.248472,6.382715,9.713137,-1.447088,-9.293964,8.131777,-3.779055,3.482676,-3.291256,0.917383,1.020995,7.011188,-6.248579,-5.178727,-8.102446,2.433661,8.127656,-4.375654,-3.593663,-8.593532,-0.592637,1.499413,6.906294,4.239131,-1.861950,-9.108840,4.804481,8.998741,-5.600992,-6.535478,-8.765411,5.670100,-0.551600,-8.245104,-4.927525,6.679775,2.984390,-0.945122,7.423175,-5.954084,-2.557142,-0.018979,-7.316706,6.481247,0.898229,-1.412073,-1.741864,3.232062,4.996171,1.334935,-1.789865,3.780855,-6.810397,8.287850,5.986420,9.406896,-8.940058,-4.095299,2.941234,4.121446,8.263128,-2.478494,0.484650,-5.695249,-5.987021,4.057211],[-0.213290,-9.818989,-5.548986,3.496737,1.250346,6.487923,-1.355496,-6.354674,-6.920367,-0.261408,2.959161,0.642533,-0.859419,-1.865932,1.019704,8.259292,-6.565951,-7.639610,6.680830,-3.211171,-9.171676,1.243624,1.965420,7.347901,4.928878,2.463162,-0.847819,-7.635246,-8.502215,7.662199,-1.533325,-1.286792,-5.675450,5.378663,-4.805444,-5.618089,4.317803,9.660918,-3.193407,-3.556013,-4.683103,-4.853359,-3.632594,7.265313,2.665793,3.520815,3.322750,-2.925695,-3.900992,-1.608421,-1.440680,-2.191267,-0.494148,-9.424012,-6.790539,-4.491935,3.571918,6.721272,1.972390,-1.147761,-4.450887,-3.342930,1.433783,2.796437,-0.785043,-5.369129,2.250170,8.751728,-5.996372,-3.468913,-2.515749,2.320695],[7.027786,-2.715317,7.541159,-8.820364,-5.585161,-4.782461,6.578070,5.640510,4.439340,-8.057812,-4.836799,-6.351611,-5.489925,6.572154,1.719280,-3.764678,-0.674593,-1.072195,7.547229,9.059786,4.879909,-6.384146,1.657936,0.930449,5.539251,8.373743,1.195140,0.693076,-4.500824,-7.184288,1.957479,9.268088,7.830309,-1.280519,-4.004825,-1.705657,3.442618,-2.754096,5.703992,0.546363,-6.421358,-7.674059,-2.529458,2.759300,2.531609,-4.635272,-6.229739,-9.226049,5.320169,-6.787500,-8.886140,-6.226770,9.727770,-1.916287,-7.885352,-9.290588,0.842715,-9.551408,-0.896416,-5.891603,8.694790,-4.059116,-1.500371,-9.977515,2.499111,7.084699,7.485964,8.866331,1.372135,0.920700,6.865385,-9.672168],[5.289274,-9.437391,-4.691259,5.923412,-9.418190,0.995017,-0.916375,-3.766435,-3.807243,9.619668,3.097331,3.583408,-5.989348,-0.534021,-5.680328,-5.087192,4.707155,7.265619,-1.605253,-7.595999,-9.393568,2.640519,6.176547,9.365839,-6.505233,5.520714,9.278197,-5.176968,-9.922288,-9.272450,9.098556,-9.419216,1.907470,-0.639097,-0.507527,-8.376379,-8.762949,4.452340,-9.795131,7.858094,1.798828,-0.333492,7.193128,-2.844945,-2.326016,-4.401942,-2.595170,-5.506475,-1.547837,2.119729,9.253895,-3.521812,5.632548,5.463899,-9.001575,-7.470766,-7.639796,-5.770319,1.123710,7.539299,4.742044,2.224594,-6.364632,-1.211313,-0.938368,1.102409,7.526204,4.615335,2.039264,-9.785568,-6.818946,0.507370],[-9.505549,-0.427706,-2.627151,9.182975,-8.631432,4.722393,-8.067544,0.236463,8.977840,6.290430,-6.437305,-3.771271,3.257201,1.373510,8.115054,-4.429041,0.293101,-7.508524,-8.863171,9.740970,-8.674693,2.508208,-3.206881,-0.231907,9.252628,6.520257,-6.318398,7.817768,-6.263087,9.580123,8.482809,8.434855,1.213865,5.797686,0.324209,-2.712485,0.678094,8.799749,-2.859517,-9.837935,0.817437,-1.110776,4.964972,2.557873,-9.771679,5.703571,5.027662,-5.518633,-7.606115,-4.415834,8.193002,-3.732268,4.680692,-4.494101,3.424099,8.375798,-2.762891,-7.629925,-2.181952,-5.935782,5.040900,-4.720177,-4.149834,6.081091,-0.394649,1.461611,-6.110149,9.649464,1.409919,2.989651,-1.397523,1.691194],[-7.395387,-6.091394,1.803942,-7.605071,-5.641417,2.992536,4.670009,-3.944468,2.794841,0.794952,2.330891,1.199102,1.701377,5.663582,2.899566,-4.113260,-6.978095,-6.506202,5.126968,-1.092859,-3.076994,6.482201,-0.544879,8.342370,6.822788,4.281008,5.535328,7.424365,-8.836236,-6.119316,0.496600,1.655248,9.330424,7.213292,-7.206854,8.560892,-0.698429,3.573132,-3.244906,-8.516477,1.976044,-9.947697,-4.207018,1.070159,-6.288757,-8.109849,8.331553,5.795391,-1.005677,4.724032,5.596138,1.027016,5.112545,-1.401177,3.404914,9.121470,0.330589,-1.258793,8.220575,-0.901871,0.855726,9.705415,-3.334019,-3.955748,-1.461464,-5.431555,-1.009938,4.017951,-9.031902,1.891995,-7.215552,-3.129002],[-2.542702,1.616114,8.609667,7.868557,-1.358690,9.787691,3.388852,6.446162,0.682823,3.929675,9.391657,-6.865701,9.230411,-3.732245,-7.248239,0.053840,6.421471,0.193267,-4.203637,4.217979,6.122115,6.468766,-3.034881,-1.112220,-2.733321,8.804152,-3.909001,1.514358,2.965946,3.600101,8.890157,-4.419842,9.290430,5.857320,-2.733706,5.600160,1.471176,1.043394,6.464490,4.152860,6.850119,-5.201256,-6.482362,9.852352,0.045394,-1.474443,8.651011,5.573531,-4.783498,-8.513305,3.446200,-9.607546,5.656804,5.332339,-4.433130,-8.570496,1.864984,1.304936,2.056750,-3.028141,-6.096232,0.471379,9.132023,-7.127867,6.844214,5.656618,-1.666901,5.282451,0.609652,7.264838,2.541934,3.881868],[-6.046304,5.697862,-7.641856,-6.094576,-2.965058,-1.704811,-3.526619,3.332609,-1.582767,-0.955107,-3.960420,-5.180484,-3.313504,4.737802,5.503171,8.107505,-2.843588,5.048302,-2.315140,7.183686,6.886295,-2.610458,-7.647912,7.112931,-6.509278,-3.798535,3.304405,-7.515148,-5.767854,-4.060385,4.505844,7.701977,-0.467330,-1.412444,-8.843350,3.699499,6.561119,8.158761,7.756381,-9.123088,-3.728886,-9.837582,7.503870,-6.049035,1.642121,-4.557982,-4.021418,-9.597655,-1.300669,8.076768,-0.016075,4.498982,-3.683124,8.177271,1.893984,-8.801201,-1.323642,-8.132074,6.180460,5.528168,7.744828,3.150751,2.107178,-4.039541,-7.634977,-7.026910,-2.620631,2.603026,-7.609068,-8.402984,-2.377891,-1.945817],[0.098279,3.418204,5.802054,9.966097,-0.452864,-2.956613,-9.532310,1.911524,-3.044323,1.673217,4.478496,8.209665,-9.074207,-5.211155,-2.183857,3.536369,5.472590,2.566092,-9.663804,4.022147,0.868825,-4.468000,-7.250593,1.042447,-5.531223,8.896745,0.142235,7.210476,-2.841526,-6.278637,-6.907676,-3.345065,-7.384519,-5.551849,0.553202,5.479795,5.251456,-3.789085,-7.722476,-1.013965,1.572690,-1.508738,5.005902,-7.565051,2.407342,-3.350604,-7.478681,0.476768,-2.403897,3.130271,8.820904,7.562647,8.423275,-4.265123,5.722417,-3.053306,-9.089756,2.994736,-9.038419,9.273368,-8.988149,-3.799953,0.866248,-6.438902,6.009284,1.900428,-1.626050,-2.792169,-9.218560,2.088184,1.947014,-3.783067],[7.780477,5.786813,9.926110,4.447918,9.850990,3.852600,-8.431036,-5.695518,1.717541,-6.776675,-9.747600,6.284181,-5.805534,-1.993835,-8.830379,0.880763,-3.286634,-5.359254,-6.993955,-3.429376,7.096046,-3.581744,2.178825,5.352246,-8.434678,-6.340426,-7.395471,8.234457,0.222855,7.800571,4.473492,4.412026,0.104991,4.697321,1.775274,8.256778,4.593997,-0.162742,2.737252,-7.624906,-1.109861,-2.622999,-7.156432,1.072260,-1.932611,-0.455272,7.908405,4.978542,5.819201,-1.603228,-3.528935,5.375010,0.503983,-9.267389,3.331946,-8.099553,-9.260787,4.455976,9.253475,-2.300787,6.191298,1.423141,-0.421237,8.562945,5.554503,-4.193764,-5.879518,-9.903888,-9.385423,-2.095420,4.511460,7.499494],[6.316258,-9.059444,5.848728,-8.554366,6.522949,3.384366,2.495604,3.156947,4.665087,-9.927358,7.254377,8.987834,-4.123545,-2.210680,5.594340,9.316547,-9.718115,2.036258,-8.109268,-6.711179,6.461831,7.015918,-2.042222,6.147123,-5.235938,0.970502,-7.269360,5.095457,-2.422184,-3.362823,5.895459,1.307747,-7.743285,3.519838,-5.884753,-8.157483,-2.112102,-2.218254,2.481846,-7.819281,-4.155280,0.364711,-5.235044,3.728417,-1.051315,-1.472582,8.110594,8.390826,-4.531192,-2.652587,-2.710946,-1.497478,-5.347647,-0.921095,4.700485,5.460282,-2.456005,-3.332864,-6.751844,-4.075151,-0.496523,-6.306616,-5.477113,7.731830,0.942868,9.768857,-6.225821,-0.498824,9.279244,-9.546131,4.622902,-2.056000],[3.107246,-4.768005,-3.499025,-0.662542,-9.122816,-2.893313,4.177348,4.952172,1.654318,-5.943998,9.527035,-9.161866,7.778208,8.631776,-4.481626,4.960191,-4.908589,6.786798,-9.625263,8.394662,3.302769,6.572111,6.050903,8.038710,6.818302,8.520942,-4.584091,0.440075,-8.063407,-9.860455,-2.356493,-5.385417,2.911333,1.196905,-2.504664,-9.974940,-2.258410,-5.743310,6.992841,-7.274322,0.640387,6.080413,6.539975,-0.114204,5.487429,0.925774,-7.584405,-0.345484,9.061178,9.756974,2.297269,7.828153,6.224609,9.362960,5.669767,0.538498,1.886688,-3.006473,-0.407330,5.998789,3.520405,0.399699,-5.020096,-3.279319,-9.310436,3.306022,5.048861,1.510009,-6.068644,6.343022,5.827364,1.127770],[0.878770,5.774100,-2.959625,6.030141,1.721349,1.862076,4.579389,-7.188163,9.496888,8.240275,-2.921202,0.062256,0.583812,5.172994,2.866398,-2.909881,-0.948390,-1.294826,-5.407763,7.494891,7.355927,4.270895,-8.697886,-4.363341,-7.237242,-3.739355,-5.839146,0.071819,3.870173,-9.433915,6.080318,3.739153,3.678843,-1.823710,-3.876148,8.112897,-8.377582,-6.156002,-6.612819,-2.981101,-9.717874,-4.966977,-4.972776,-5.727530,-5.909668,0.227370,7.059796,1.617593,-3.207226,-3.717219,5.068552,-5.641358,7.370539,-0.407339,2.700571,-0.409297,-5.083716,5.197621,-9.428505,-0.042480,-8.532618,9.328510,-9.642822,-1.306512,-4.696681,1.215154,1.341438,-4.657268,-2.136687,-6.661208,7.925206,0.092660],[7.088417,5.689109,2.449489,-3.481333,7.271025,9.609729,9.053587,-3.186170,2.024898,9.943727,-9.752414,1.271063,6.590373,-4.682441,-7.826982,-6.054873,-2.212558,2.153668,7.963860,-1.315845,2.129420,-1.465677,6.526571,8.859943,5.705733,2.574273,-5.020102,-5.892996,7.289210,-1.724933,4.780399,0.329179,-0.142549,2.688710,3.800384,-7.221529,6.758055,8.387679,-2.975289,3.920632,0.850607,6.209592,2.582529,0.037021,-3.249227,-5.619530,-9.080144,-3.511778,0.877786,-6.001969,3.124641,5.894312,-5.622150,5.995905,2.556351,-1.210319,-8.265484,-5.144464,7.613397,-7.233373,-2.025676,1.017346,-2.287979,8.589204,4.993276,-6.229289,2.971641,-0.085115,-7.612996,-6.600920,-2.739422,1.137355]], dtype = "float64")#candidate|1999|(24, 72)|const|float64
call_1998 = relay.TupleGetItem(func_1732_call(relay.reshape(const_1999.astype('float64'), [1728,])), 3)
call_2000 = relay.TupleGetItem(func_1734_call(relay.reshape(const_1999.astype('float64'), [1728,])), 3)
output = relay.Tuple([call_1981,call_1990,const_1991,const_1992,call_1998,const_1999,])
output2 = relay.Tuple([call_1982,call_1993,const_1991,const_1992,call_2000,const_1999,])
func_2015 = relay.Function([], output)
mod['func_2015'] = func_2015
mod = relay.transform.InferType()(mod)
output = func_2015()
func_2016 = relay.Function([], output)
mutated_mod['func_2016'] = func_2016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mod.get_global_var('func_1156')
func_1157_call = mutated_mod.get_global_var('func_1157')
call_2125 = relay.TupleGetItem(func_1156_call(), 1)
call_2126 = relay.TupleGetItem(func_1157_call(), 1)
output = relay.Tuple([call_2125,])
output2 = relay.Tuple([call_2126,])
func_2141 = relay.Function([], output)
mod['func_2141'] = func_2141
mod = relay.transform.InferType()(mod)
output = func_2141()
func_2142 = relay.Function([], output)
mutated_mod['func_2142'] = func_2142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_2182 = func_1315_call()
call_2183 = func_1315_call()
func_1083_call = mod.get_global_var('func_1083')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_2193 = relay.TupleGetItem(func_1083_call(), 0)
call_2194 = relay.TupleGetItem(func_1084_call(), 0)
output = relay.Tuple([call_2182,call_2193,])
output2 = relay.Tuple([call_2183,call_2194,])
func_2205 = relay.Function([], output)
mod['func_2205'] = func_2205
mod = relay.transform.InferType()(mod)
output = func_2205()
func_2206 = relay.Function([], output)
mutated_mod['func_2206'] = func_2206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_860_call = mod.get_global_var('func_860')
func_862_call = mutated_mod.get_global_var('func_862')
call_2276 = relay.TupleGetItem(func_860_call(), 6)
call_2277 = relay.TupleGetItem(func_862_call(), 6)
output = relay.Tuple([call_2276,])
output2 = relay.Tuple([call_2277,])
func_2284 = relay.Function([], output)
mod['func_2284'] = func_2284
mod = relay.transform.InferType()(mod)
output = func_2284()
func_2285 = relay.Function([], output)
mutated_mod['func_2285'] = func_2285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1870_call = mod.get_global_var('func_1870')
func_1872_call = mutated_mod.get_global_var('func_1872')
call_2337 = relay.TupleGetItem(func_1870_call(), 1)
call_2338 = relay.TupleGetItem(func_1872_call(), 1)
func_2141_call = mod.get_global_var('func_2141')
func_2142_call = mutated_mod.get_global_var('func_2142')
call_2350 = relay.TupleGetItem(func_2141_call(), 0)
call_2351 = relay.TupleGetItem(func_2142_call(), 0)
func_382_call = mod.get_global_var('func_382')
func_384_call = mutated_mod.get_global_var('func_384')
const_2353 = relay.const([[8.540404,1.879225,-6.516911],[-4.186629,-6.387353,-3.258243],[-4.361420,-3.408320,-9.726339],[-2.082763,-6.101987,-0.567480],[-8.837478,6.948528,2.873200],[8.323092,-5.642939,-4.345165],[-2.896900,2.887729,-6.524530],[-7.905458,-3.118286,-1.400371],[4.933830,6.502615,4.737551],[4.169326,4.536688,-4.872051],[3.994881,5.954508,-5.004474],[-9.878172,6.071366,-9.589593],[0.572379,-6.425474,6.932340],[-2.352750,7.562894,-3.995627],[5.155492,-0.515457,-9.598925],[0.706651,9.647189,-9.552243],[7.833321,-1.894564,-9.688420],[-0.856448,5.220920,-5.119894],[8.238327,-4.962962,-3.772791],[5.520414,-4.318981,-1.502271],[7.939947,2.987599,-1.796841]], dtype = "float32")#candidate|2353|(21, 3)|const|float32
call_2352 = func_382_call(relay.reshape(const_2353.astype('float32'), [1, 7, 9]))
call_2354 = func_382_call(relay.reshape(const_2353.astype('float32'), [1, 7, 9]))
func_272_call = mod.get_global_var('func_272')
func_278_call = mutated_mod.get_global_var('func_278')
var_2390 = relay.var("var_2390", dtype = "int64", shape = (104, 20))#candidate|2390|(104, 20)|var|int64
var_2391 = relay.var("var_2391", dtype = "float32", shape = (891,))#candidate|2391|(891,)|var|float32
call_2389 = relay.TupleGetItem(func_272_call(relay.reshape(var_2390.astype('int64'), [10, 13, 16]), relay.reshape(var_2390.astype('int64'), [10, 13, 16]), relay.reshape(call_2337.astype('bool'), [160,]), relay.reshape(var_2391.astype('float32'), [99, 9]), relay.reshape(var_2390.astype('int64'), [10, 13, 16]), ), 5)
call_2392 = relay.TupleGetItem(func_278_call(relay.reshape(var_2390.astype('int64'), [10, 13, 16]), relay.reshape(var_2390.astype('int64'), [10, 13, 16]), relay.reshape(call_2337.astype('bool'), [160,]), relay.reshape(var_2391.astype('float32'), [99, 9]), relay.reshape(var_2390.astype('int64'), [10, 13, 16]), ), 5)
uop_2402 = relay.atanh(var_2390.astype('float64')) # shape=(104, 20)
func_1628_call = mod.get_global_var('func_1628')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_2404 = relay.TupleGetItem(func_1628_call(), 0)
call_2405 = relay.TupleGetItem(func_1630_call(), 0)
output = relay.Tuple([call_2337,call_2350,call_2352,const_2353,call_2389,var_2391,uop_2402,call_2404,])
output2 = relay.Tuple([call_2338,call_2351,call_2354,const_2353,call_2392,var_2391,uop_2402,call_2405,])
func_2408 = relay.Function([var_2390,var_2391,], output)
mod['func_2408'] = func_2408
mod = relay.transform.InferType()(mod)
mutated_mod['func_2408'] = func_2408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2408_call = mutated_mod.get_global_var('func_2408')
var_2410 = relay.var("var_2410", dtype = "int64", shape = (104, 20))#candidate|2410|(104, 20)|var|int64
var_2411 = relay.var("var_2411", dtype = "float32", shape = (891,))#candidate|2411|(891,)|var|float32
call_2409 = func_2408_call(var_2410,var_2411,)
output = call_2409
func_2412 = relay.Function([var_2410,var_2411,], output)
mutated_mod['func_2412'] = func_2412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2205_call = mod.get_global_var('func_2205')
func_2206_call = mutated_mod.get_global_var('func_2206')
call_2422 = relay.TupleGetItem(func_2205_call(), 0)
call_2423 = relay.TupleGetItem(func_2206_call(), 0)
func_272_call = mod.get_global_var('func_272')
func_278_call = mutated_mod.get_global_var('func_278')
var_2438 = relay.var("var_2438", dtype = "int64", shape = (2080,))#candidate|2438|(2080,)|var|int64
var_2439 = relay.var("var_2439", dtype = "float32", shape = (891,))#candidate|2439|(891,)|var|float32
call_2437 = relay.TupleGetItem(func_272_call(relay.reshape(var_2438.astype('int64'), [10, 13, 16]), relay.reshape(var_2438.astype('int64'), [10, 13, 16]), relay.reshape(call_2422.astype('bool'), [160,]), relay.reshape(var_2439.astype('float32'), [99, 9]), relay.reshape(var_2438.astype('int64'), [10, 13, 16]), ), 5)
call_2440 = relay.TupleGetItem(func_278_call(relay.reshape(var_2438.astype('int64'), [10, 13, 16]), relay.reshape(var_2438.astype('int64'), [10, 13, 16]), relay.reshape(call_2422.astype('bool'), [160,]), relay.reshape(var_2439.astype('float32'), [99, 9]), relay.reshape(var_2438.astype('int64'), [10, 13, 16]), ), 5)
output = relay.Tuple([call_2422,call_2437,var_2438,var_2439,])
output2 = relay.Tuple([call_2423,call_2440,var_2438,var_2439,])
func_2474 = relay.Function([var_2438,var_2439,], output)
mod['func_2474'] = func_2474
mod = relay.transform.InferType()(mod)
mutated_mod['func_2474'] = func_2474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2474_call = mutated_mod.get_global_var('func_2474')
var_2476 = relay.var("var_2476", dtype = "int64", shape = (2080,))#candidate|2476|(2080,)|var|int64
var_2477 = relay.var("var_2477", dtype = "float32", shape = (891,))#candidate|2477|(891,)|var|float32
call_2475 = func_2474_call(var_2476,var_2477,)
output = call_2475
func_2478 = relay.Function([var_2476,var_2477,], output)
mutated_mod['func_2478'] = func_2478
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2487 = relay.var("var_2487", dtype = "float64", shape = (14, 13, 10))#candidate|2487|(14, 13, 10)|var|float64
uop_2488 = relay.rsqrt(var_2487.astype('float64')) # shape=(14, 13, 10)
func_1083_call = mod.get_global_var('func_1083')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_2492 = relay.TupleGetItem(func_1083_call(), 0)
call_2493 = relay.TupleGetItem(func_1084_call(), 0)
output = relay.Tuple([uop_2488,call_2492,])
output2 = relay.Tuple([uop_2488,call_2493,])
func_2500 = relay.Function([var_2487,], output)
mod['func_2500'] = func_2500
mod = relay.transform.InferType()(mod)
var_2501 = relay.var("var_2501", dtype = "float64", shape = (14, 13, 10))#candidate|2501|(14, 13, 10)|var|float64
output = func_2500(var_2501)
func_2502 = relay.Function([var_2501], output)
mutated_mod['func_2502'] = func_2502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1083_call = mod.get_global_var('func_1083')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_2508 = relay.TupleGetItem(func_1083_call(), 0)
call_2509 = relay.TupleGetItem(func_1084_call(), 0)
output = relay.Tuple([call_2508,])
output2 = relay.Tuple([call_2509,])
func_2518 = relay.Function([], output)
mod['func_2518'] = func_2518
mod = relay.transform.InferType()(mod)
output = func_2518()
func_2519 = relay.Function([], output)
mutated_mod['func_2519'] = func_2519
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2528 = relay.var("var_2528", dtype = "uint8", shape = (2, 7, 16))#candidate|2528|(2, 7, 16)|var|uint8
var_2529 = relay.var("var_2529", dtype = "uint8", shape = (2, 7, 16))#candidate|2529|(2, 7, 16)|var|uint8
bop_2530 = relay.not_equal(var_2528.astype('bool'), relay.reshape(var_2529.astype('bool'), relay.shape_of(var_2528))) # shape=(2, 7, 16)
func_563_call = mod.get_global_var('func_563')
func_566_call = mutated_mod.get_global_var('func_566')
const_2535 = relay.const([[-2.464781,-9.008117,0.096536,5.592010,8.606100,-4.673507,-9.483865,3.043203,7.774471,4.130254,-5.038478,-5.596100,-6.895195,-4.865910,-6.710482,6.209009,-4.939763,-6.643615,-6.232223,-1.911749,-7.078768,-3.818033,3.110934,-1.391496,0.713198,2.041968,-1.855280,4.689902,7.036812,-2.734614,-9.237245,-2.356942,7.516669,-2.363836,-3.543334,5.397865,-9.179306,0.569876,3.001427,-6.310345,0.020764,-1.193457,-5.762228,-7.617315,-7.645632,6.726712,-0.725081,1.131142,-9.906825,6.896395,-8.124162,-8.729932,-5.323196,-9.872523,0.973875,-3.981018,-6.354294,3.932771,9.919091,-6.216308,-3.236841,-1.318391,0.814341,-9.616615,-2.705548,-2.644912,-8.377320,8.048037,-5.486655,-8.573368,-6.890295,-4.049359,9.214025,0.769351,3.383789,-1.170183,2.132129,9.863353,-4.094966,4.400745,8.335503,5.283933,-6.188358,4.232911,2.455461,-2.517589,-4.073029,-6.406525],[-2.983402,-7.700683,-8.253204,3.181555,-2.576319,-9.371864,-2.680690,5.865898,-7.437205,4.713272,1.417004,9.424749,-7.413550,-4.149036,2.600117,5.769018,8.557075,2.241021,-2.610766,9.926451,3.652648,-2.702463,4.856388,-4.954134,-0.684194,-0.574692,-6.834885,-3.202135,-2.205789,1.329935,-3.709136,5.567794,6.713662,0.266034,-3.644101,-5.507836,-3.404524,5.042855,-6.106148,6.864297,-4.073411,-1.467496,-2.541528,7.004429,5.984781,-3.695764,7.819152,4.811503,-9.054770,6.810264,-6.380228,3.329501,-7.400568,-6.311607,-6.876213,7.900060,-1.128244,1.400650,7.656711,0.800148,3.030954,-3.643736,8.004182,4.019383,-5.389604,-2.280736,-5.696250,0.861827,7.201020,8.255914,-0.605357,-9.183664,-0.835886,8.394810,-0.746506,1.077104,-8.786890,2.503566,4.082849,7.783360,5.349628,-5.165546,5.398676,-1.203124,-5.457021,-1.984923,-7.683068,7.652609],[-2.872549,-4.124176,9.667681,6.612752,1.738728,8.583209,1.070006,-1.261617,4.586766,8.875770,4.443947,5.683752,1.651417,-3.238488,-0.517876,5.673099,-3.122686,7.853066,5.725082,3.806824,9.587687,0.703844,2.316358,7.757548,0.041477,-5.183302,-2.149598,-7.062205,0.513971,-7.821585,-7.896437,7.110818,4.689619,-5.714385,3.937651,-6.911272,-5.943854,3.127192,5.173991,-4.018429,5.162863,3.104323,-1.973521,-9.518082,-4.946230,9.098162,-9.657968,1.092346,-9.619399,-4.616244,7.317719,-2.381770,-4.085389,-8.834771,7.232261,-0.200054,6.440217,-2.275998,6.598949,2.736954,3.173597,-0.924174,7.254175,-6.501264,5.686336,8.234236,6.200265,5.669114,-5.329741,8.126843,-9.000976,-9.500083,-6.948492,-7.306955,8.040754,1.101584,-5.162032,-5.479388,-3.020510,0.501264,4.766119,-8.761549,6.998732,6.740191,0.918883,7.920750,-7.181562,6.612318],[-9.650545,5.663944,-4.659557,4.432891,-0.844442,-6.475240,-3.649442,8.059781,1.266000,-3.206155,1.118993,-7.981041,-0.455503,-2.649606,0.893808,2.565457,7.671104,-5.041872,-9.527727,1.460618,0.723705,1.096637,5.638360,-5.517587,-9.782300,6.283936,-4.445267,1.349794,1.065773,1.968656,6.635349,8.756129,8.418950,-2.252251,1.234573,9.378238,-5.827444,-0.430141,9.204638,-4.706300,6.460556,8.132356,2.750924,-3.532125,-2.442333,5.879050,7.537472,2.032036,-8.066870,-9.237598,3.868510,7.153729,-9.213657,3.866690,-6.197394,2.838521,-1.223908,7.026388,2.293140,-4.693691,1.581655,-5.539530,-0.732008,-9.872403,3.573924,-9.201016,-1.788796,-7.556417,8.667659,-5.894847,9.250555,7.325718,-7.776355,1.159851,6.620990,7.559619,-0.039999,4.415228,3.846681,9.586152,-3.086650,1.233278,2.138619,8.120826,-8.553645,-6.955608,7.766290,1.519891],[-8.876511,-9.434519,-3.110475,7.355831,8.608452,-5.537568,-5.934480,2.036402,7.124252,8.790597,4.791773,-7.355862,-9.663978,1.084810,-0.037433,9.556651,-5.551627,-2.945117,7.503796,5.070396,-5.341514,-6.789208,3.916548,0.443939,-2.592415,-5.303291,4.299985,3.123726,2.824214,-1.781318,8.971985,8.808052,2.666142,1.817732,9.321630,8.545495,-6.376933,-9.035703,4.490973,-9.133523,-1.423769,6.504535,5.197976,5.305537,-0.520732,8.681138,5.932304,0.140382,-4.326748,2.790982,3.931113,-4.222054,-1.827506,0.498490,-4.927733,-4.058586,-6.136177,6.786852,-4.191905,0.797722,-3.806838,0.162910,5.697241,-5.727587,0.771327,6.579081,-5.336147,-5.378063,-9.070315,-6.424045,9.341006,8.118098,8.204132,-6.010168,9.207801,-9.167715,-1.523460,8.246136,-1.186692,0.477275,4.787939,-5.281007,-3.697240,7.674460,-0.737880,-8.348796,-7.644851,-9.226279],[-2.875824,5.038778,-5.799936,7.638583,1.413050,-7.465202,-3.775371,9.063002,-3.625691,4.285455,-0.320744,2.921475,-2.311752,5.581723,8.031943,-5.198683,-5.371300,1.952728,5.863626,7.450854,7.404103,-2.078369,5.119355,3.722461,2.281812,2.670790,4.827133,7.374662,-7.757903,-6.834381,-5.748597,9.048224,2.327869,3.079923,9.020426,6.780997,-9.603623,-1.704101,-8.654822,6.157002,-8.838051,3.682740,2.761043,6.521092,2.959546,3.865232,6.326592,-8.909701,9.259416,6.515361,-4.366512,2.050942,8.994256,6.965881,1.767644,5.869282,6.478369,-6.036614,0.228984,-3.536042,3.840593,-2.837381,-5.296828,6.345379,-2.311764,-9.261486,-1.869820,5.294719,6.970435,8.227789,6.494389,-1.937549,9.397717,2.206786,-3.915486,-2.483853,1.480872,-2.708425,3.318514,6.931787,3.929316,8.293871,5.070837,3.849639,3.218831,-8.202084,9.970932,4.967540],[9.324369,-5.120235,-4.860980,8.516075,1.461014,2.903391,-0.871135,4.521548,-4.156157,9.935205,5.846592,-2.407759,4.190311,-9.366606,2.369778,0.818146,-3.306214,-5.510382,-8.933784,7.318301,-7.767228,0.649617,5.677047,-2.351553,0.814734,-4.766295,-5.141783,8.110060,2.848724,-4.390794,4.124309,5.801720,0.115750,-5.955571,9.450911,-5.919777,-8.075156,-2.438162,-6.972330,0.707213,-0.882278,-5.139540,-5.443095,-2.539395,0.750276,-3.334737,5.683945,1.300901,7.023389,-8.697731,5.723262,-2.175207,-7.540791,2.443456,5.759204,-0.242249,-8.841716,-9.514539,-0.050749,-8.872596,-8.690476,-7.763656,-9.275708,-0.803751,5.661380,9.461662,8.438306,-0.867812,-6.566796,-2.515351,-4.713609,-8.562371,-6.317827,6.114674,3.354857,-8.908515,-5.962435,2.272343,-4.925212,8.055207,9.316472,-2.626188,-2.043596,-5.839344,9.775416,2.040111,-8.332771,-6.418408],[-6.326219,6.556181,-8.080560,6.014024,7.211751,4.612889,7.881274,0.118595,2.643000,8.725512,7.233066,7.297540,6.628637,-8.335873,-5.534023,-1.595311,4.295013,-7.369572,3.054901,-2.025739,6.952598,2.001825,-4.659891,2.159473,-9.095022,-0.353919,-1.385941,-6.737372,-6.962349,7.669716,-0.474640,2.223932,-2.844194,2.142772,-1.943560,-0.360206,9.710648,-0.462041,-3.241707,-1.466651,-9.257872,-5.422047,-8.482025,-1.287660,-3.017404,4.853692,0.053323,-1.667383,-6.589994,-0.975798,0.991417,-3.149184,-1.281084,2.198719,-0.351519,1.182917,-2.772255,-7.494539,4.318506,4.345229,-8.235900,-6.352542,2.454285,0.530375,-4.130071,-6.069786,-4.524475,-6.957946,4.564609,-0.974940,4.055226,8.952640,1.744708,-4.071568,-6.441046,-4.323915,-6.110047,4.572750,3.798343,-3.208386,-0.003500,-0.458175,1.943995,9.408942,-7.248085,2.410286,8.805532,4.853668]], dtype = "float64")#candidate|2535|(8, 88)|const|float64
call_2534 = relay.TupleGetItem(func_563_call(relay.reshape(const_2535.astype('float64'), [8, 8, 11])), 7)
call_2536 = relay.TupleGetItem(func_566_call(relay.reshape(const_2535.astype('float64'), [8, 8, 11])), 7)
func_2015_call = mod.get_global_var('func_2015')
func_2016_call = mutated_mod.get_global_var('func_2016')
call_2547 = relay.TupleGetItem(func_2015_call(), 0)
call_2548 = relay.TupleGetItem(func_2016_call(), 0)
bop_2549 = relay.greater_equal(const_2535.astype('bool'), relay.reshape(call_2534.astype('bool'), relay.shape_of(const_2535))) # shape=(8, 88)
bop_2552 = relay.greater_equal(const_2535.astype('bool'), relay.reshape(call_2536.astype('bool'), relay.shape_of(const_2535))) # shape=(8, 88)
output = relay.Tuple([bop_2530,call_2547,bop_2549,])
output2 = relay.Tuple([bop_2530,call_2548,bop_2552,])
func_2559 = relay.Function([var_2528,var_2529,], output)
mod['func_2559'] = func_2559
mod = relay.transform.InferType()(mod)
var_2560 = relay.var("var_2560", dtype = "uint8", shape = (2, 7, 16))#candidate|2560|(2, 7, 16)|var|uint8
var_2561 = relay.var("var_2561", dtype = "uint8", shape = (2, 7, 16))#candidate|2561|(2, 7, 16)|var|uint8
output = func_2559(var_2560,var_2561,)
func_2562 = relay.Function([var_2560,var_2561,], output)
mutated_mod['func_2562'] = func_2562
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2604 = relay.const([[[5.837814,4.759101,5.866910,3.589268],[0.344121,-3.770218,-1.797854,8.265834]],[[-7.476244,-5.275109,-6.892612,6.864332],[-2.225902,-7.694677,7.855472,3.369459]],[[9.983810,-5.798900,-9.481593,-0.123686],[7.407319,-0.480343,6.255457,3.707803]],[[-1.885561,7.797194,-5.817802,9.113534],[-2.763291,-0.411673,8.082137,0.786045]],[[-5.454891,6.213488,3.218530,-9.316547],[4.422269,-7.408456,-3.268061,-2.168579]],[[-3.049449,9.532282,-3.158241,8.235406],[6.311008,-9.264673,7.369038,9.819169]],[[7.766012,-7.029041,3.809295,-5.691589],[-1.626529,0.533118,-1.346980,9.728499]],[[1.462426,2.227768,2.420626,-1.991076],[-7.637737,8.329488,-7.915091,3.173376]],[[-5.535508,-0.290056,-9.171597,-7.035838],[-4.320943,7.959904,8.116683,6.010585]]], dtype = "float64")#candidate|2604|(9, 2, 4)|const|float64
uop_2605 = relay.sqrt(const_2604.astype('float64')) # shape=(9, 2, 4)
uop_2607 = relay.exp(const_2604.astype('float64')) # shape=(9, 2, 4)
output = relay.Tuple([uop_2605,uop_2607,])
output2 = relay.Tuple([uop_2605,uop_2607,])
func_2617 = relay.Function([], output)
mod['func_2617'] = func_2617
mod = relay.transform.InferType()(mod)
output = func_2617()
func_2618 = relay.Function([], output)
mutated_mod['func_2618'] = func_2618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1628_call = mod.get_global_var('func_1628')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_2641 = relay.TupleGetItem(func_1628_call(), 0)
call_2642 = relay.TupleGetItem(func_1630_call(), 0)
output = call_2641
output2 = call_2642
func_2650 = relay.Function([], output)
mod['func_2650'] = func_2650
mod = relay.transform.InferType()(mod)
mutated_mod['func_2650'] = func_2650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2650_call = mutated_mod.get_global_var('func_2650')
call_2651 = func_2650_call()
output = call_2651
func_2652 = relay.Function([], output)
mutated_mod['func_2652'] = func_2652
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2682 = relay.var("var_2682", dtype = "float64", shape = (16, 7, 6))#candidate|2682|(16, 7, 6)|var|float64
uop_2683 = relay.log10(var_2682.astype('float64')) # shape=(16, 7, 6)
func_2559_call = mod.get_global_var('func_2559')
func_2562_call = mutated_mod.get_global_var('func_2562')
const_2691 = relay.const([3,-3,10,2,-6,2,-7,-2,2,4,-2,3,-4,9,9,10,1,-6,7,10,-10,-9,-9,-8,3,-10,-2,9,7,5,2,-10,1,6,6,3,10,-3,-3,9,2,2,-4,9,9,-5,-9,5,-3,-10,-9,-4,-5,10,-9,-5,-10,-2,-6,-4,-5,7,6,-6,5,9,-10,-6,2,-4,-5,-10,4,9,-5,8,-4,3,-8,-10,-8,-8,-1,-5,10,-4,8,10,-7,5,-2,1,-7,7,-5,8,-5,4,-1,-9,-10,-8,6,-2,6,3,10,3,8,1,-6,-1,-5,7,5,9,-6,6,4,4,-7,8,-3,-5,3,-6,-4,10,-1,-7,2,2,4,1,-5,-10,2,-10,-2,-5,10,4,10,5,-2,8,10,-3,7,4,8,6,5,4,8,10,3,-2,-9,-4,1,4,-3,8,2,-4,8,-10,-6,10,-4,-2,6,9,2,8,-7,-7,-1,10,6,2,6,1,-6,5,-1,10,2,-5,-5,10,-5,-2,-1,-8,8,5,3,3,-4,3,5,5,5,6,10,1,4,-2,6,3,3,8,-3,7,-9,-5,6,-6,9,-10,-7,-6], dtype = "uint8")#candidate|2691|(224,)|const|uint8
call_2690 = relay.TupleGetItem(func_2559_call(relay.reshape(const_2691.astype('uint8'), [2, 7, 16]), relay.reshape(const_2691.astype('uint8'), [2, 7, 16]), ), 0)
call_2692 = relay.TupleGetItem(func_2562_call(relay.reshape(const_2691.astype('uint8'), [2, 7, 16]), relay.reshape(const_2691.astype('uint8'), [2, 7, 16]), ), 0)
bop_2709 = relay.left_shift(uop_2683.astype('int8'), relay.reshape(var_2682.astype('int8'), relay.shape_of(uop_2683))) # shape=(16, 7, 6)
output = relay.Tuple([call_2690,const_2691,bop_2709,])
output2 = relay.Tuple([call_2692,const_2691,bop_2709,])
func_2714 = relay.Function([var_2682,], output)
mod['func_2714'] = func_2714
mod = relay.transform.InferType()(mod)
var_2715 = relay.var("var_2715", dtype = "float64", shape = (16, 7, 6))#candidate|2715|(16, 7, 6)|var|float64
output = func_2714(var_2715)
func_2716 = relay.Function([var_2715], output)
mutated_mod['func_2716'] = func_2716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1801_call = mod.get_global_var('func_1801')
func_1802_call = mutated_mod.get_global_var('func_1802')
call_2718 = relay.TupleGetItem(func_1801_call(), 0)
call_2719 = relay.TupleGetItem(func_1802_call(), 0)
func_127_call = mod.get_global_var('func_127')
func_130_call = mutated_mod.get_global_var('func_130')
const_2726 = relay.const([7.836405,1.828903,-5.081765,-2.172045,7.297234,-6.005119,-1.035527,6.715701,3.798934,1.699113,-1.537956,7.758748,3.030990,1.415505,-5.689905,-8.640596,-7.515025,-4.549194,9.488883,-2.852434,5.228322,8.114109,-2.920618,1.848127,-2.180850,-4.380080,-3.376862,4.768585,5.899714,-7.331367,0.487294,-1.191232,-6.146528,-4.759380,9.965237,-6.755718,0.409130,-5.208500,-0.897063,4.559230,-0.086109,9.301012,1.789068,4.389338,6.884458,-2.626210,-9.583241,3.778028,-2.777781,1.470435,-9.113320,-4.927983,6.531577,-8.284128,-1.696627,-5.713927,3.419903,4.581279,-0.628617,-6.458178,-3.121405,-8.316808,8.305925,3.765490,6.009822,4.484774,-0.706689,0.529218,-7.994338,5.812327,-3.580238,-6.173217,3.373584,-5.500261,-3.400620,5.570008,-3.218361,6.335103,8.990160,9.204844,4.208904,0.697259,-6.532465,-8.089011,-3.515133,5.746324,3.189298,-9.779626,7.994327,9.802017,7.465739,-4.795722,-2.650847,7.461463,-3.649760,0.283950,0.907328,5.527818,3.182117,8.575740,2.497319,-4.552160,-0.711868,5.143544,-9.277990,0.508683,9.191518,2.097073,0.521589,-9.278012,5.156114,-6.841457,-0.271525,-0.462408,6.072225,6.969732,-1.083050,3.025406,-6.123176,-1.077715,9.771037,6.239471,7.260068,6.963658,1.715099,-3.182782,5.122969,-0.525975,-1.088257,5.678417,-4.574189,-4.642636,1.254909,9.359767,-6.285780,-8.444631,5.167501,-8.131698,-2.314952,4.597490,1.611591,-9.511207,-7.293827,-3.198710,5.787321,-5.524940,-5.847447,-4.378164,9.029118,-2.211001,4.248673,0.301246,-7.996201,2.659288,6.770060,-6.947679,-5.187808,1.195266,8.190062,5.785250,-3.612126,-1.388123,-9.531273,-7.145933,-4.851842,2.284872,1.242375,-7.037461,-0.372007,-5.865730,9.993666,0.855396,1.408925,-0.636930,-3.780043,6.473802,-5.101528,-3.315329,-5.756631,-7.841246,0.926973,-8.480256,-2.283920,-1.254553,-8.686551,7.263712,2.925811,0.017601,1.408130,-4.499035,7.937781,-5.347792,9.810408,-4.135795,4.735028,7.426167,-0.885213,0.242711,-7.931648,2.407269,-4.280551,-6.498181,8.818142,-2.468131,-8.740286,9.138069,-4.937077,2.819459,-9.167127,1.734759,-7.295887,-4.282590,-5.090468,2.706439,7.652849,6.153006,6.323000,6.805787,5.470163,-0.255951,-8.411801,6.314461,7.596544,4.745352,-2.078314,-0.804099,6.732981,0.298553,-6.299460,-1.084871,-7.818968,-2.660906,-8.364219,-8.441195,1.047920,1.160642,-5.571292,7.166368,9.734240,5.771226,9.294864,-0.070862,-5.663852,8.300267,-4.259379,-0.260083,1.045944,9.177967,7.426130,-5.135848,-9.797198,-1.699613,-5.242146,-6.608070,-2.198719,-9.406292,0.432989,-3.179547,-0.497376,6.644026,-4.848956,6.873782,-5.338775,5.386996,8.056356,-2.533332,1.063447,-6.317138,-0.692112,1.725990,1.040608,9.677359,-9.970994,-3.320002,7.780447,9.574807,-7.089615,2.842184,8.449014,-0.545269,-0.918082,-7.044319,5.253751,-7.589695,-5.504301,5.517970,7.448125,-7.730368,-6.179309,-1.284629,-3.432887,6.571485,2.338118,0.722427,4.581479,1.556270,7.208834,0.892733,-9.720938,-1.165128,3.898723,-1.070367,-6.874575,-0.125408,-5.702315,-6.163946,1.376549,5.913768,1.070507,7.288275,-7.049087,-0.847283,1.885322,-8.051545,5.940341,-9.719998,-5.587541,0.201405,8.336431,-1.754082,1.565989,8.715875,-8.129655,7.654957,3.653922,4.069105,0.498668,8.683037,0.766242,-0.502196,4.187136,-5.405369,-2.233626,-6.412522,0.098610,2.360948,-1.424018,7.330433,2.411536,-3.078550,-0.504004,-4.112389,8.751391,-9.927651,6.970277,-0.899537,2.034699,5.352233,-1.466033,6.751958,-7.862366,-3.288621,9.268020,1.966397,-5.533151,-1.354938,0.809952,-6.660070,-2.129822,-8.194494,-1.095347,-9.977064,8.374762,2.218110,-5.464883,2.671774,1.250380,3.413844,-9.493554,1.998527,-0.242144,7.918251,-7.158293,-2.786422,-4.816167,-4.578069,3.904503,-1.796533,-7.316797,2.507254,-5.226821,1.315629,-6.127241,1.074416,-1.950234,-7.799972,-0.065723,-6.811588,6.053513,9.809648,4.042276,-5.944500,8.113334,1.004632,-7.648471,-4.346327,-5.895397,-8.398035,-4.784254,6.349475,-7.652159,5.049374,1.517085,9.121433,-0.156106,-3.505178,5.148302,1.675783,4.307946,-4.323187,8.689664,-3.945848,6.200273,-1.001244,-7.609850,-3.280176,5.427660,5.188270,7.298702,-9.597511,-5.545183,-1.418413,2.965250,-8.292678,-3.856028,4.668711,8.749665,5.319097,-6.049634,-2.178432,9.904368,-7.463700,-1.795329,4.917806,-8.559207,7.234957,-4.880090,-3.481082,5.151476,-6.781873,-2.422780,1.066545,-2.227795,-4.597530,4.998919,2.087236,1.400552,8.428055,-7.033568,4.331701,-4.500124,2.943719,-2.714980,9.220860,-4.115394,-9.895791,2.079986,-2.768907,-4.541084,-1.613338,9.732818,9.504072,0.113427,-6.063512,6.518257,3.378129,-1.695716,5.927447,-3.164146,2.490222,-9.176939,8.119121,3.343357,6.249719,-6.839919,7.176355,-3.076970,-3.291413,-3.483423,1.680519,1.642250,5.782851,5.100689,-4.152020,0.009022,-0.787289,3.508294,2.960633,0.188631,2.196733,4.721250,2.382914,6.923804,0.752335,-2.189132,9.826601,8.075713,0.077974,2.656705,1.904984,6.421649,8.010795,9.215740,-8.336227,4.496535,6.578302,-0.594337,-0.623347,-0.817362,1.312443,-1.663848,-3.866486,-6.757422,-7.615866,-4.187118,-2.269011,0.557457,-4.389391,5.810508,2.719674,-9.017999,9.771184,0.338372,-0.610079,1.428037,-6.517546,9.853114,-5.949359,9.076905,3.999675,-9.762431,4.275851,6.809280,-1.937612,-6.241090,-9.823941,-7.265397,-7.894552,2.625353,-1.476390,-7.702318,2.576740,2.885108,0.131696,-2.204810,-8.236744,3.728430,0.572589,-4.836433,6.305189,4.082260,1.139794,7.928331,-8.797416,2.081816,3.255778,7.378539,4.807774,-9.076710,2.525066,4.335238,3.816372,-2.242206,-2.617495,4.226427,1.249083,6.461414,-4.137316,-7.887471,5.895049,4.506678,-9.800991,7.246671,-4.382243,-6.868419,6.766101,0.597297,-1.207619,4.207220,-2.491909,-3.644476,0.962065,7.779507,-7.684886,-1.842968,3.047890,4.947203,8.463456,1.811397,-9.677052,8.341158,5.133010,6.983129,-9.904368,-1.803712,9.529910,4.569595,-7.799528,-9.774635,-4.196713,6.229191,3.947153,5.568586,5.192106,-7.242629,8.576184,5.336234,-0.680338,-1.020963,6.336605,-0.970170,-1.692408,-4.630959,-4.145046,9.358100,5.654213,-8.415491,8.423314,6.967144,-3.870626,6.563331,-7.594770,-3.094687,2.321009,4.082733,-2.861565,6.034007,5.266057,9.700355,-8.662505,6.325421,7.722008,-9.009785,3.523620,-9.477131,3.276415,8.556654,-2.384061,0.761982,3.805246,9.402243,-6.238307,-9.288689,-5.102555,3.226240,-3.749996,-2.770173,-0.659484,4.270212,8.752633,6.911609,6.188342,-9.594670,-0.094065,8.243076,-8.691578,4.374038,4.958736,5.639876,-1.304635,-5.829864,9.199237,-3.442126,-7.856594,6.832609,4.866073,-3.989566,-6.737116,4.718469,-2.968823,-2.867882,6.869294,0.795793,0.439002,-8.534330,4.410017,-7.598949,3.204097,-5.707063,-6.231583,9.905411,-8.655653,-6.037487,-7.188428,-1.540965,-0.097161,-2.693100,-0.950616,-8.776708,-4.018582,7.288114,-1.493933,-5.800200,4.634918,4.488919,-1.092586,9.438861,-9.071655,4.446835,1.066941,-7.480476,-7.394964,0.748621,-6.845996,-3.174848,-9.166487,5.438020,-5.638986,7.156173,-2.250091,8.317285,1.330473,-8.040527,9.444464,8.483016,3.478584,-9.160470,-8.979478,-1.215682,-6.519001,0.939769,5.951915,7.708145,-6.331860,0.042821,6.339986,8.331290,0.289825,-2.849654,-9.699681,-9.773173,7.811117,1.832411,-1.743616,3.826978,8.090300,-8.834443,3.879169,-4.056437,-7.553699,-6.692908,-0.346316,-6.114434,8.984303,-4.311330,-8.540207,3.663675,-7.830053,1.795909,2.754698,8.676638,8.243174,9.260736,4.719989,-2.347324,4.941862,5.741941,2.736588,3.300304,-9.623329,-6.725327,-0.716768,5.438697,-6.006306,-4.108304,7.457374,-3.384156,8.369401,7.859823,0.353805,-6.421925,-9.656953,3.393164,9.749765,5.552413,-1.271996,0.573905,4.432055,7.725614,2.113552,8.649470,7.852318,-5.555935,0.480254,3.440171,9.264235,3.281876,6.462354,4.909385,-8.002415,8.956171,-3.544330,3.975750,9.297030,-4.474214,-1.921208,0.235292,0.768026,-1.568830,0.079185,-5.923234,6.306953,-0.484245,-4.595942,-5.531683,-1.974514,3.858923,-4.614046,3.088249,-6.351030,-1.525677,1.329165,-9.495979,7.157997,-1.841207,9.111258,-5.258867,-4.876387,4.759526,-0.524928,2.549183,5.981444,-2.095018,-8.950022,9.289041,4.848679,4.305669,6.696971,8.401362,0.883818,0.404331,-6.024464,5.108663,4.849428,5.804585,-3.155670,-1.733549,-1.054359,1.766608,-8.101544,6.207648,3.270733,3.446147,-4.532432,8.415465,-6.305273,-7.800946,-2.973435,0.866040,3.814309,-4.093353,-4.805463,1.956331,8.121559,0.432371,-6.277021,5.655896,2.668739,-9.247982,3.408285,5.428268,9.271753,3.012774,-7.708863,3.865990,7.542401,4.006552,-4.349609,-2.803641,-0.400963,-9.969422,-4.855976,-7.306992,-4.865596,-6.599063,-8.471168,7.892586,4.056274,-5.246343,5.693805,8.273092,2.719871,-0.274105,-1.364042,7.681437,-4.193803,6.637548,1.340008,7.664474,-5.645227,1.230404], dtype = "float32")#candidate|2726|(891,)|const|float32
call_2725 = relay.TupleGetItem(func_127_call(relay.reshape(const_2726.astype('float32'), [9, 11, 9])), 0)
call_2727 = relay.TupleGetItem(func_130_call(relay.reshape(const_2726.astype('float32'), [9, 11, 9])), 0)
func_1244_call = mod.get_global_var('func_1244')
func_1248_call = mutated_mod.get_global_var('func_1248')
var_2730 = relay.var("var_2730", dtype = "float64", shape = ())#candidate|2730|()|var|float64
const_2731 = relay.const([2.333098,-2.420809,-7.588995,-0.193694,-1.627449,-4.061322,1.642099,-8.885208,0.969024,1.233980,-1.606673,-2.507807,9.907131,5.573288,-5.032704,4.307977,2.248289,3.490050,-5.950802,-0.641135,0.095088,-0.305365,6.584967,-3.068661,0.345723,9.555022,4.770735,-7.215687,-0.564213,2.535522,-0.027784,-2.132910,-8.679713,5.140839,-1.770754,6.714220,-2.402267,-4.981400,8.693809,-2.692743,1.074757,-8.690368,0.796825,5.361302,-4.081119,-9.965678,-9.714648,7.044621,0.709213,1.308155,-8.681285,2.087382,-2.350286,-1.299679,-4.398608,1.476549,0.951682,8.401000,-9.232904,-8.601452,9.268043,0.456827,-8.738393,9.045758,9.860338,8.686574,0.973564,-6.650249,-5.995634,6.883826,-8.836505,-8.787656,-9.766626,-3.974473,0.720125,-8.986671,-7.777683,-1.108804,-1.044700,-6.600985,-4.852649,3.866904,-8.986912,3.854310,-2.678321,2.825191,7.993009,-4.891725,0.778560,-6.889048,-0.703233,-5.011778,-8.177350,4.464752,-7.480500,-9.807270,0.319017,-4.438847,-9.086622,-5.779928,9.208951,9.485621,-4.791823,-2.304612,-5.553602,-4.723776,5.834477,7.643144,0.789426,-0.047140,-9.944223,-0.071760,-3.693334,0.454889,-0.849455,-6.235877,-9.459765,0.040781,8.346608,-9.119113,-9.215593,-5.577882,6.857768,-5.503054,-4.623398,-5.107346,4.438353,-4.365140,-8.799397,-8.670288,-9.574104,-1.731700,-4.565286,2.379204,9.183027,-1.362219,-0.486859,-3.598923,-2.864601,-5.633090,8.992207,-8.623566,9.120471,1.556565,-9.409141,-1.349609,-2.784769,4.557200,-1.291816,-1.359238,2.570128,-3.599303,-3.222509,5.667588,8.867939,0.623360,3.517761,0.143927,2.178921,-4.113133,7.028361,-6.511740,1.683179,-9.587446,-1.901959,7.088293,8.578376,7.790987,-7.721722,2.854474,-4.602736,3.129749,-4.510053,-5.363358,9.173491,5.231263,2.504894,-8.517375,-9.291517,3.783268,1.815780,-2.141650,-4.463493,-1.436563,-2.911594,-9.653042,7.334037,-0.432847,-4.444192,6.365785,3.724124,-9.034869,-8.085428,7.680081,-4.928767,1.328749,-4.386015,-4.617308,6.756420,5.952623,-3.781628,-9.690565,4.629264,6.411936,4.604435,9.729831,-5.169530,5.824963,-3.745435,8.943438,9.351582,1.815016,-9.797786,-5.452950,-8.068601,1.423307,8.309032,-3.569568,3.702634,0.498318,-6.494480,0.342816,-6.402887,0.629394,-9.831573,9.314328,0.562529,4.421352,7.975528,0.714654,2.688460,-7.921859,-6.744004,-4.259393,3.648315,-2.579659,-9.714279,-3.973561,7.074674,-5.589379,-3.894131,3.553600,-2.522325,1.453297,4.421892,9.505132,9.161813,2.709658,1.852580,5.384120,6.469792,-1.578785,-8.728982,7.494349,5.474496,2.252878,0.057549,5.296646,5.464926,1.153833,-3.716080,1.517704,3.427307,8.295578,-0.025858,4.834022,0.674252,-2.792534,-5.277550,7.913426,5.785989,8.762430,4.813294,-4.260512,0.077739,7.530843,-1.805342,2.126846,-9.881285,-5.647109,-3.982914,-4.094657,-4.622526,3.290483,-8.692054,-6.506647,8.501036,0.554928,-8.415286,8.844659,6.581462,8.849448,9.498662,0.007165,-9.568646,9.263608,7.367849,-3.728296,-9.756550,-0.820022,-6.058845,-1.873880,-6.115774,-3.771774,7.114062,-5.936744,3.660369,-2.447796,9.089275,-8.185974,-2.389702,-1.227627,3.972473,5.958216,-6.902087,6.892202,-9.434929,-1.507985,6.782984,0.850026,-1.953908,8.091306,-1.770836,-0.425371,-4.585078,4.738913,-5.311266,-6.024803,-0.065171,0.126958,-9.918717,8.870959,-5.252862,2.892021,-9.936631,-1.962227,0.136024,-8.760808,-5.120416,1.056045,4.569430,5.117825,-8.182445,-7.373756,9.256932,6.587863,-3.587878,-6.285143,-4.134196,-9.620256,-0.955296,5.453457,-8.419601,5.244601,-1.812142,2.256736,9.297515,-9.307401,4.148429,-3.631813,-7.485369,-3.962654,-8.938574,-7.631566,-6.771987,-8.202217,6.686118,-3.431370,6.714891,-1.766305,-0.788902,-4.688758,-1.921317,4.743199,9.352006,-8.710200,9.038683,-4.888318,8.463628,-3.747525,6.733309,9.510096,-6.141580,-3.341434,3.005658,-6.143647,7.480717,-2.886732,4.247608,9.396991,2.288998,-4.088369,-5.592716,7.959435,3.951780,1.620910,-0.243141,-9.478907,3.640171,-4.874212,6.938298,-0.683225,6.549413,8.182954,9.032614,0.572223,-2.024017,5.675533,-7.907192,7.632127,5.345950,-1.647117,6.829345,-6.733741,-2.518017,9.166526,0.779407,-0.860620,-7.969739,0.631017,-7.012385,5.079410,0.024691,5.694252,3.059423,3.638377,1.465174,-4.239759,-4.590528,3.670133,0.353114,9.240919,1.973466,-5.029099,1.843303,2.540667,-0.323429,-2.420010,8.855871,-2.348157,-5.687584,9.412854,6.395255,-2.812947,1.554693,-0.427646,9.674968,6.678084,0.901185,-3.501782,-0.795492,-4.279933,-8.315076,-7.310754,-6.936527,-2.725918,-6.839043,9.300185,6.619605,-0.903527,1.832620,-2.721746,-0.438291,0.074993,0.849374,-2.231993,9.193345,-0.593600,6.181663,-7.326820,8.343517,4.708378,-9.607934,-8.026792,-4.428668,-0.015245,1.683239,-9.871282,5.206809,-1.513050,-5.466701,-9.321366,7.439518,2.729961,7.223674,6.919729,9.735218,-1.295804,1.855306,6.757796,3.726042,6.490372,-4.689035,-3.227436,-7.039477,-2.803009,0.951782,-8.921272,-1.057010,-7.488989,6.152396,-8.873491,-7.203609,8.267452,0.162178,1.488334,-7.133562,-5.778586,7.380835,-0.043996,1.227422,-6.087984,6.173752,4.196491,-4.618576,9.934298,9.307593,-2.039820,0.807437,0.082563,8.897755,7.811631,-4.713216,-5.294033,2.124337,2.731609,-0.540450,1.772237,-7.479310,3.973231,-9.546599,3.955222,-4.724644,4.908059,5.816720,5.406942,-3.434358,-1.535839,-9.346061,-4.430108,-3.752094,-1.813120,0.466637,-1.834183,-3.253774,-6.993168,7.182562,1.997041,-9.753458,5.603508,5.686933,-8.216857,2.358561,-3.296199,5.416203,9.828147,-2.321933,-0.139421,-2.538932,-4.258603,-9.780453,4.357490,-1.507763,-1.896176,-0.675463,-3.753807,-1.464480,2.073098,2.124582,2.817926,-9.440789,-3.478630,-2.757019,-0.819115,-3.339573,6.609073], dtype = "float64")#candidate|2731|(576,)|const|float64
call_2729 = func_1244_call(relay.reshape(var_2730.astype('float64'), []), relay.reshape(const_2731.astype('float64'), [4, 9, 16]), )
call_2732 = func_1244_call(relay.reshape(var_2730.astype('float64'), []), relay.reshape(const_2731.astype('float64'), [4, 9, 16]), )
var_2739 = relay.var("var_2739", dtype = "float32", shape = (9, 11, 9))#candidate|2739|(9, 11, 9)|var|float32
bop_2740 = relay.logical_and(call_2725.astype('bool'), relay.reshape(var_2739.astype('bool'), relay.shape_of(call_2725))) # shape=(9, 11, 9)
bop_2743 = relay.logical_and(call_2727.astype('bool'), relay.reshape(var_2739.astype('bool'), relay.shape_of(call_2727))) # shape=(9, 11, 9)
output = relay.Tuple([call_2718,const_2726,call_2729,var_2730,const_2731,bop_2740,])
output2 = relay.Tuple([call_2719,const_2726,call_2732,var_2730,const_2731,bop_2743,])
func_2772 = relay.Function([var_2730,var_2739,], output)
mod['func_2772'] = func_2772
mod = relay.transform.InferType()(mod)
var_2773 = relay.var("var_2773", dtype = "float64", shape = ())#candidate|2773|()|var|float64
var_2774 = relay.var("var_2774", dtype = "float32", shape = (9, 11, 9))#candidate|2774|(9, 11, 9)|var|float32
output = func_2772(var_2773,var_2774,)
func_2775 = relay.Function([var_2773,var_2774,], output)
mutated_mod['func_2775'] = func_2775
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2786 = relay.const([[[5,-1,10,-9,10,-4,-8,-6,-10,-9,6,4,-7,10,9,-1],[-10,9,10,8,9,-7,-2,-9,6,5,10,-7,-2,4,10,8],[-8,4,4,-8,-4,9,7,-8,6,6,-3,-2,-1,6,4,1],[-2,1,-7,-10,-5,-8,-7,-7,2,-8,8,9,8,9,3,5],[-7,3,7,-6,2,-7,2,3,-7,8,5,-5,7,5,5,5],[-8,5,-2,10,-5,-5,10,1,-3,5,10,-10,-3,7,7,-8],[-2,2,4,-2,-2,-5,6,-2,-7,-4,-6,-4,-9,6,4,-3],[-7,-4,1,-1,10,-5,-4,-5,5,-7,-4,-7,1,1,7,4]],[[10,-6,-2,2,-3,-10,6,-7,5,-10,-5,3,2,3,-7,5],[5,-8,10,-10,-9,-1,6,-3,-4,-1,2,6,10,-5,-8,-6],[-6,1,4,-3,4,5,-4,2,-3,-8,8,3,7,7,-10,10],[5,4,-5,-2,10,8,8,-3,-2,10,-9,10,-10,-3,9,-8],[5,6,8,-8,5,-4,3,-6,10,-6,8,5,4,10,-1,10],[8,-7,-1,-5,-8,-9,-6,-7,10,7,1,4,10,-1,-2,-7],[4,-7,9,-3,-10,-8,-7,5,10,3,-4,9,3,-4,-8,5],[7,8,5,2,4,-4,-7,-8,10,2,-2,-7,10,10,-4,-1]],[[9,6,-3,-1,-8,-7,3,4,9,-9,-5,-6,10,5,2,-7],[-9,5,9,8,1,2,1,9,-10,-10,9,-1,1,4,-6,-4],[-4,-7,-5,10,-8,-1,-6,10,-1,10,8,10,1,-5,-7,-2],[-10,-3,1,10,-4,2,-3,6,7,-5,-9,-6,-1,7,-2,8],[-7,-8,6,2,10,2,8,-7,-5,-10,7,5,9,-5,-1,6],[6,8,3,-2,4,6,1,7,-6,-10,-4,-1,9,7,-1,-9],[4,-10,9,-10,7,5,9,-4,8,6,-3,7,2,-3,5,-9],[3,-8,3,-3,3,-8,9,-7,-8,-9,9,2,-9,4,10,5]],[[-5,4,-10,-8,-5,5,-8,1,5,-6,5,8,4,-8,-7,8],[3,-2,8,-7,-6,-9,7,10,-1,6,4,-9,-6,-5,-9,7],[-4,8,8,-7,8,-9,-5,8,-5,1,10,10,-1,1,7,-4],[6,2,-7,-8,-2,-3,4,-2,-6,8,7,2,-4,-7,-8,1],[5,7,2,-1,10,3,3,-5,-10,-3,-1,-4,7,-6,-2,-8],[-10,-1,2,-9,3,-8,-9,5,4,-8,-4,-1,-2,7,-4,3],[2,8,-5,6,-9,6,5,-9,3,7,-8,10,5,-5,2,5],[-3,6,10,-8,6,10,5,-4,5,-8,8,-6,-3,2,-1,9]],[[-9,-2,9,-1,3,-8,-9,7,-2,10,2,4,6,-1,2,3],[-7,2,4,-2,-5,5,3,-1,-6,-8,8,4,-8,3,4,-3],[10,8,-1,8,3,1,7,2,4,2,1,-5,2,1,3,-9],[-9,6,-9,7,10,-5,-1,-10,8,8,9,-8,-3,-7,3,1],[4,4,-4,3,-1,2,-9,1,-6,7,-2,6,-6,-2,-10,-10],[10,10,-7,9,5,-3,4,2,-3,-5,7,-2,6,-1,7,-5],[-7,1,7,-5,-1,-7,-4,-5,9,4,1,7,10,-8,-1,-3],[5,6,6,-6,-2,2,-1,3,-6,6,-10,9,-10,6,7,2]],[[3,-7,9,-4,6,7,4,9,-4,9,7,4,4,-1,-9,-4],[2,9,-7,-2,-2,2,6,4,-6,6,1,-1,9,-6,6,9],[3,9,5,-5,-10,-1,-10,-10,9,10,-5,-7,-4,1,4,7],[-1,9,8,3,1,-8,-2,-7,-4,3,9,-2,-4,4,6,-7],[-10,5,8,-9,3,-10,-6,7,4,-9,-1,-8,5,-3,7,-8],[-6,-6,2,-3,-3,-1,10,8,8,-6,8,4,-8,-4,6,-2],[6,7,3,2,-5,-4,-1,-8,10,7,-10,1,7,4,7,6],[-6,-1,4,-3,-6,-3,-9,-5,-5,-7,5,-2,5,-8,4,6]],[[-8,6,-10,-3,6,-1,-7,4,-1,6,10,8,5,-8,9,-8],[-10,-1,5,-7,7,4,8,-5,-8,3,-10,1,-5,4,-2,-3],[9,5,5,3,-3,8,-6,8,-6,1,-2,-1,3,4,-10,-10],[-8,-2,-8,-7,-5,-2,-9,-6,3,-9,2,-5,7,-2,6,-7],[8,9,8,9,-2,4,-3,-6,-10,5,-7,8,-10,3,4,-10],[3,10,-9,5,-10,-3,-9,-3,-4,-2,-9,-6,-1,-4,-1,7],[8,-5,6,6,-9,1,8,9,-2,-4,1,9,1,7,10,7],[-1,2,-2,-5,9,-1,2,2,10,7,8,-5,9,-2,-8,-8]],[[-3,8,1,8,-9,-1,-2,-7,1,-6,-9,-9,-3,-1,1,-9],[10,-10,1,2,-1,-3,8,-5,-5,9,2,-4,8,-5,5,-1],[-1,5,-1,4,-2,4,8,-10,-10,6,-4,6,-6,-10,5,7],[4,-10,10,8,-10,3,-2,10,9,-4,6,6,-3,4,-8,3],[-2,-7,-8,6,7,-7,-2,1,-3,-8,-8,-1,-1,-6,8,2],[-6,-4,-6,-2,2,2,-6,-9,1,-6,-2,-8,5,-3,-7,3],[-4,8,9,-2,9,7,8,-4,1,-8,8,7,3,-6,-3,-4],[8,-6,3,-8,-2,10,8,9,-4,4,2,-7,1,5,-4,10]],[[2,9,-4,8,1,-3,9,-2,-8,7,10,-7,9,5,-3,-7],[3,-8,4,-2,-3,-8,7,-7,6,7,8,-7,5,2,10,-3],[-7,9,-9,8,8,-4,6,1,5,-10,-3,-4,10,8,-5,-3],[4,-4,3,-4,-10,5,2,-9,-6,-2,5,-9,1,-3,8,9],[-7,4,-6,10,-7,-3,-5,-7,-9,-9,-4,7,6,4,-7,-6],[5,-4,-8,-9,3,5,-4,8,1,8,-6,3,-9,5,-9,8],[-1,-8,-1,6,-9,-2,3,-6,7,-2,-1,4,3,3,8,-7],[-8,-10,2,-4,8,5,8,-6,7,8,4,-7,-1,6,-6,10]],[[7,-4,5,1,-6,5,-8,-10,10,3,10,-8,2,10,-8,-1],[-2,6,-3,-3,3,-2,8,8,-10,1,-2,-2,-4,10,7,-8],[6,-6,-1,7,-6,9,-3,-3,7,-6,4,3,2,-9,5,-8],[1,10,-3,-8,-8,-5,3,5,-4,10,8,-4,-7,1,-10,2],[1,3,-1,-4,-9,1,9,-3,4,10,7,4,7,-7,-2,-8],[3,8,-2,2,-3,3,-8,4,-2,-5,8,-4,-5,-2,9,2],[1,5,-4,7,1,-9,10,10,8,2,5,1,-6,6,2,9],[-10,1,3,-3,-9,3,6,1,9,9,9,3,-2,-3,9,-2]]], dtype = "int8")#candidate|2786|(10, 8, 16)|const|int8
var_2787 = relay.var("var_2787", dtype = "int8", shape = (10, 8, 16))#candidate|2787|(10, 8, 16)|var|int8
bop_2788 = relay.maximum(const_2786.astype('int8'), relay.reshape(var_2787.astype('int8'), relay.shape_of(const_2786))) # shape=(10, 8, 16)
uop_2796 = relay.exp(bop_2788.astype('float32')) # shape=(10, 8, 16)
func_1229_call = mod.get_global_var('func_1229')
func_1232_call = mutated_mod.get_global_var('func_1232')
var_2809 = relay.var("var_2809", dtype = "int32", shape = (35,))#candidate|2809|(35,)|var|int32
call_2808 = func_1229_call(relay.reshape(var_2809.astype('int32'), [1, 7, 5]))
call_2810 = func_1229_call(relay.reshape(var_2809.astype('int32'), [1, 7, 5]))
bop_2815 = relay.multiply(bop_2788.astype('int32'), relay.reshape(var_2787.astype('int32'), relay.shape_of(bop_2788))) # shape=(10, 8, 16)
func_2617_call = mod.get_global_var('func_2617')
func_2618_call = mutated_mod.get_global_var('func_2618')
call_2830 = relay.TupleGetItem(func_2617_call(), 1)
call_2831 = relay.TupleGetItem(func_2618_call(), 1)
bop_2833 = relay.not_equal(const_2786.astype('bool'), relay.reshape(bop_2788.astype('bool'), relay.shape_of(const_2786))) # shape=(10, 8, 16)
func_2714_call = mod.get_global_var('func_2714')
func_2716_call = mutated_mod.get_global_var('func_2716')
var_2848 = relay.var("var_2848", dtype = "float64", shape = (672,))#candidate|2848|(672,)|var|float64
call_2847 = relay.TupleGetItem(func_2714_call(relay.reshape(var_2848.astype('float64'), [16, 7, 6])), 1)
call_2849 = relay.TupleGetItem(func_2716_call(relay.reshape(var_2848.astype('float64'), [16, 7, 6])), 1)
var_2855 = relay.var("var_2855", dtype = "bool", shape = (10, 8, 16))#candidate|2855|(10, 8, 16)|var|bool
bop_2856 = relay.less_equal(bop_2833.astype('bool'), relay.reshape(var_2855.astype('bool'), relay.shape_of(bop_2833))) # shape=(10, 8, 16)
func_84_call = mod.get_global_var('func_84')
func_87_call = mutated_mod.get_global_var('func_87')
const_2860 = relay.const([True,True,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False], dtype = "bool")#candidate|2860|(160,)|const|bool
call_2859 = relay.TupleGetItem(func_84_call(relay.reshape(const_2860.astype('bool'), [2, 10, 8]), relay.reshape(const_2860.astype('bool'), [2, 10, 8]), ), 0)
call_2861 = relay.TupleGetItem(func_87_call(relay.reshape(const_2860.astype('bool'), [2, 10, 8]), relay.reshape(const_2860.astype('bool'), [2, 10, 8]), ), 0)
output = relay.Tuple([uop_2796,call_2808,var_2809,bop_2815,call_2830,call_2847,var_2848,bop_2856,call_2859,const_2860,])
output2 = relay.Tuple([uop_2796,call_2810,var_2809,bop_2815,call_2831,call_2849,var_2848,bop_2856,call_2861,const_2860,])
func_2862 = relay.Function([var_2787,var_2809,var_2848,var_2855,], output)
mod['func_2862'] = func_2862
mod = relay.transform.InferType()(mod)
mutated_mod['func_2862'] = func_2862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2862_call = mutated_mod.get_global_var('func_2862')
var_2864 = relay.var("var_2864", dtype = "int8", shape = (10, 8, 16))#candidate|2864|(10, 8, 16)|var|int8
var_2865 = relay.var("var_2865", dtype = "int32", shape = (35,))#candidate|2865|(35,)|var|int32
var_2866 = relay.var("var_2866", dtype = "float64", shape = (672,))#candidate|2866|(672,)|var|float64
var_2867 = relay.var("var_2867", dtype = "bool", shape = (10, 8, 16))#candidate|2867|(10, 8, 16)|var|bool
call_2863 = func_2862_call(var_2864,var_2865,var_2866,var_2867,)
output = call_2863
func_2868 = relay.Function([var_2864,var_2865,var_2866,var_2867,], output)
mutated_mod['func_2868'] = func_2868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2617_call = mod.get_global_var('func_2617')
func_2618_call = mutated_mod.get_global_var('func_2618')
call_2882 = relay.TupleGetItem(func_2617_call(), 1)
call_2883 = relay.TupleGetItem(func_2618_call(), 1)
const_2890 = relay.const([[[8.390064,6.917976,6.901013,2.899877],[8.170245,3.849405,-3.187528,8.078047]],[[2.368190,-5.716118,-8.465506,5.299236],[-9.674196,-9.433426,-8.307650,-3.399819]],[[-6.006052,1.280196,8.412376,-1.571150],[2.738361,4.145861,6.667145,1.828572]],[[-8.759972,3.385052,-7.914827,5.262012],[1.214286,3.921378,5.614792,9.455823]],[[-8.422903,6.990453,-4.698900,-0.717340],[-3.651726,3.820394,-0.687669,-8.993066]],[[8.226533,8.785903,-3.751239,-0.038820],[-7.607674,3.149205,6.241334,-1.288912]],[[0.140225,2.887465,4.619019,8.263474],[4.376358,7.000842,8.368959,5.503350]],[[5.737766,1.346151,2.982353,8.170295],[6.392767,8.372306,-4.261488,-2.462091]],[[1.299213,2.586259,9.454327,-8.549789],[2.947246,-9.938495,-5.586433,3.577375]]], dtype = "float64")#candidate|2890|(9, 2, 4)|const|float64
bop_2891 = relay.logical_xor(call_2882.astype('uint16'), relay.reshape(const_2890.astype('uint16'), relay.shape_of(call_2882))) # shape=(9, 2, 4)
bop_2894 = relay.logical_xor(call_2883.astype('uint16'), relay.reshape(const_2890.astype('uint16'), relay.shape_of(call_2883))) # shape=(9, 2, 4)
bop_2895 = relay.left_shift(bop_2891.astype('int8'), relay.reshape(call_2882.astype('int8'), relay.shape_of(bop_2891))) # shape=(9, 2, 4)
bop_2898 = relay.left_shift(bop_2894.astype('int8'), relay.reshape(call_2883.astype('int8'), relay.shape_of(bop_2894))) # shape=(9, 2, 4)
output = relay.Tuple([bop_2895,])
output2 = relay.Tuple([bop_2898,])
func_2902 = relay.Function([], output)
mod['func_2902'] = func_2902
mod = relay.transform.InferType()(mod)
output = func_2902()
func_2903 = relay.Function([], output)
mutated_mod['func_2903'] = func_2903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1083_call = mod.get_global_var('func_1083')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_2930 = relay.TupleGetItem(func_1083_call(), 0)
call_2931 = relay.TupleGetItem(func_1084_call(), 0)
var_2936 = relay.var("var_2936", dtype = "float64", shape = (2, 10, 8))#candidate|2936|(2, 10, 8)|var|float64
bop_2937 = relay.less_equal(call_2930.astype('bool'), relay.reshape(var_2936.astype('bool'), relay.shape_of(call_2930))) # shape=(2, 10, 8)
bop_2940 = relay.less_equal(call_2931.astype('bool'), relay.reshape(var_2936.astype('bool'), relay.shape_of(call_2931))) # shape=(2, 10, 8)
func_1343_call = mod.get_global_var('func_1343')
func_1347_call = mutated_mod.get_global_var('func_1347')
const_2945 = relay.const([[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[False],[False]], dtype = "bool")#candidate|2945|(896, 1)|const|bool
call_2944 = relay.TupleGetItem(func_1343_call(relay.reshape(const_2945.astype('bool'), [4, 14, 16]), relay.reshape(const_2945.astype('bool'), [4, 14, 16]), ), 0)
call_2946 = relay.TupleGetItem(func_1347_call(relay.reshape(const_2945.astype('bool'), [4, 14, 16]), relay.reshape(const_2945.astype('bool'), [4, 14, 16]), ), 0)
func_1083_call = mod.get_global_var('func_1083')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_2949 = relay.TupleGetItem(func_1083_call(), 0)
call_2950 = relay.TupleGetItem(func_1084_call(), 0)
uop_2953 = relay.log2(const_2945.astype('float64')) # shape=(896, 1)
output = relay.Tuple([bop_2937,call_2944,call_2949,uop_2953,])
output2 = relay.Tuple([bop_2940,call_2946,call_2950,uop_2953,])
func_2957 = relay.Function([var_2936,], output)
mod['func_2957'] = func_2957
mod = relay.transform.InferType()(mod)
mutated_mod['func_2957'] = func_2957
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2958 = relay.var("var_2958", dtype = "float64", shape = (2, 10, 8))#candidate|2958|(2, 10, 8)|var|float64
func_2957_call = mutated_mod.get_global_var('func_2957')
call_2959 = func_2957_call(var_2958)
output = call_2959
func_2960 = relay.Function([var_2958], output)
mutated_mod['func_2960'] = func_2960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2205_call = mod.get_global_var('func_2205')
func_2206_call = mutated_mod.get_global_var('func_2206')
call_2964 = relay.TupleGetItem(func_2205_call(), 0)
call_2965 = relay.TupleGetItem(func_2206_call(), 0)
var_2994 = relay.var("var_2994", dtype = "float64", shape = (2, 10, 8))#candidate|2994|(2, 10, 8)|var|float64
bop_2995 = relay.multiply(call_2964.astype('int32'), relay.reshape(var_2994.astype('int32'), relay.shape_of(call_2964))) # shape=(2, 10, 8)
bop_2998 = relay.multiply(call_2965.astype('int32'), relay.reshape(var_2994.astype('int32'), relay.shape_of(call_2965))) # shape=(2, 10, 8)
output = relay.Tuple([bop_2995,])
output2 = relay.Tuple([bop_2998,])
func_3002 = relay.Function([var_2994,], output)
mod['func_3002'] = func_3002
mod = relay.transform.InferType()(mod)
mutated_mod['func_3002'] = func_3002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3003 = relay.var("var_3003", dtype = "float64", shape = (2, 10, 8))#candidate|3003|(2, 10, 8)|var|float64
func_3002_call = mutated_mod.get_global_var('func_3002')
call_3004 = func_3002_call(var_3003)
output = call_3004
func_3005 = relay.Function([var_3003], output)
mutated_mod['func_3005'] = func_3005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3031 = relay.var("var_3031", dtype = "float64", shape = (14, 5, 13))#candidate|3031|(14, 5, 13)|var|float64
uop_3032 = relay.sin(var_3031.astype('float64')) # shape=(14, 5, 13)
func_1343_call = mod.get_global_var('func_1343')
func_1347_call = mutated_mod.get_global_var('func_1347')
var_3041 = relay.var("var_3041", dtype = "bool", shape = (112, 8))#candidate|3041|(112, 8)|var|bool
call_3040 = relay.TupleGetItem(func_1343_call(relay.reshape(var_3041.astype('bool'), [4, 14, 16]), relay.reshape(var_3041.astype('bool'), [4, 14, 16]), ), 0)
call_3042 = relay.TupleGetItem(func_1347_call(relay.reshape(var_3041.astype('bool'), [4, 14, 16]), relay.reshape(var_3041.astype('bool'), [4, 14, 16]), ), 0)
uop_3043 = relay.sinh(uop_3032.astype('float64')) # shape=(14, 5, 13)
uop_3055 = relay.asinh(uop_3043.astype('float32')) # shape=(14, 5, 13)
bop_3064 = relay.mod(uop_3043.astype('float32'), relay.reshape(uop_3032.astype('float32'), relay.shape_of(uop_3043))) # shape=(14, 5, 13)
func_2650_call = mod.get_global_var('func_2650')
func_2652_call = mutated_mod.get_global_var('func_2652')
call_3077 = func_2650_call()
call_3078 = func_2650_call()
output = relay.Tuple([call_3040,var_3041,uop_3055,bop_3064,call_3077,])
output2 = relay.Tuple([call_3042,var_3041,uop_3055,bop_3064,call_3078,])
func_3085 = relay.Function([var_3031,var_3041,], output)
mod['func_3085'] = func_3085
mod = relay.transform.InferType()(mod)
mutated_mod['func_3085'] = func_3085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3085_call = mutated_mod.get_global_var('func_3085')
var_3087 = relay.var("var_3087", dtype = "float64", shape = (14, 5, 13))#candidate|3087|(14, 5, 13)|var|float64
var_3088 = relay.var("var_3088", dtype = "bool", shape = (112, 8))#candidate|3088|(112, 8)|var|bool
call_3086 = func_3085_call(var_3087,var_3088,)
output = call_3086
func_3089 = relay.Function([var_3087,var_3088,], output)
mutated_mod['func_3089'] = func_3089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1870_call = mod.get_global_var('func_1870')
func_1872_call = mutated_mod.get_global_var('func_1872')
call_3101 = relay.TupleGetItem(func_1870_call(), 1)
call_3102 = relay.TupleGetItem(func_1872_call(), 1)
output = call_3101
output2 = call_3102
func_3106 = relay.Function([], output)
mod['func_3106'] = func_3106
mod = relay.transform.InferType()(mod)
output = func_3106()
func_3107 = relay.Function([], output)
mutated_mod['func_3107'] = func_3107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2015_call = mod.get_global_var('func_2015')
func_2016_call = mutated_mod.get_global_var('func_2016')
call_3118 = relay.TupleGetItem(func_2015_call(), 1)
call_3119 = relay.TupleGetItem(func_2016_call(), 1)
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_3122 = func_1315_call()
call_3123 = func_1315_call()
bop_3144 = relay.logical_xor(call_3122.astype('int32'), call_3118.astype('int32')) # shape=(2, 10, 8)
bop_3147 = relay.logical_xor(call_3123.astype('int32'), call_3119.astype('int32')) # shape=(2, 10, 8)
output = relay.Tuple([bop_3144,])
output2 = relay.Tuple([bop_3147,])
func_3150 = relay.Function([], output)
mod['func_3150'] = func_3150
mod = relay.transform.InferType()(mod)
mutated_mod['func_3150'] = func_3150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3150_call = mutated_mod.get_global_var('func_3150')
call_3151 = func_3150_call()
output = call_3151
func_3152 = relay.Function([], output)
mutated_mod['func_3152'] = func_3152
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3168 = relay.var("var_3168", dtype = "float32", shape = (12, 6, 16))#candidate|3168|(12, 6, 16)|var|float32
var_3169 = relay.var("var_3169", dtype = "float32", shape = (12, 6, 16))#candidate|3169|(12, 6, 16)|var|float32
bop_3170 = relay.floor_divide(var_3168.astype('float32'), relay.reshape(var_3169.astype('float32'), relay.shape_of(var_3168))) # shape=(12, 6, 16)
output = relay.Tuple([bop_3170,])
output2 = relay.Tuple([bop_3170,])
func_3180 = relay.Function([var_3168,var_3169,], output)
mod['func_3180'] = func_3180
mod = relay.transform.InferType()(mod)
var_3181 = relay.var("var_3181", dtype = "float32", shape = (12, 6, 16))#candidate|3181|(12, 6, 16)|var|float32
var_3182 = relay.var("var_3182", dtype = "float32", shape = (12, 6, 16))#candidate|3182|(12, 6, 16)|var|float32
output = func_3180(var_3181,var_3182,)
func_3183 = relay.Function([var_3181,var_3182,], output)
mutated_mod['func_3183'] = func_3183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2284_call = mod.get_global_var('func_2284')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_3210 = relay.TupleGetItem(func_2284_call(), 0)
call_3211 = relay.TupleGetItem(func_2285_call(), 0)
output = call_3210
output2 = call_3211
func_3221 = relay.Function([], output)
mod['func_3221'] = func_3221
mod = relay.transform.InferType()(mod)
output = func_3221()
func_3222 = relay.Function([], output)
mutated_mod['func_3222'] = func_3222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2141_call = mod.get_global_var('func_2141')
func_2142_call = mutated_mod.get_global_var('func_2142')
call_3231 = relay.TupleGetItem(func_2141_call(), 0)
call_3232 = relay.TupleGetItem(func_2142_call(), 0)
func_2284_call = mod.get_global_var('func_2284')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_3239 = relay.TupleGetItem(func_2284_call(), 0)
call_3240 = relay.TupleGetItem(func_2285_call(), 0)
const_3248 = relay.const([[-10,1,-10,3,3,-9,9,-3,-5,-8,9,3,9,5,-6,1,3,9,1,3,5,1,5,8,-8,-3,2,9,7,-3,9,2,-6,-7,2,10,-3,-1,7,-8,-10,2,-6,-5,6,-9,-4,7,1,6,4,-1,9,7,3,-10,8,-7,4,-9,-2,3,9,-5,-4,4,-8,-8,6,2,-3,-4,-4,-5,-5,-7,3,4,-4,4,3,-7,-2,-10,2,-10,4,-6,-5,7,5,10,7,-2,4,-8,-4,7,-4,2,1,-3,-6,-5,9,-2,7,-4,5,-7,2,5,2,9,1,2,-5,-8,5,3,-5,-10,-6,-9,10,1,1,9,-10,-9,-2,-4,7,10,-5,-6,8,3,10,-7,5,-6,6,10,-4,8,2,-4,5,-3,-7,-1,6,-10,-3,1,-7,-6,2,10,5,-5,1,9,5,6,-4,-6,-10,-9,3,3,-6,-4,5,8,1,8,-3,10,1,-10,5,-5,2,10,-5,7,3,4,5,-9,-3,10,6,-6,10,-3,-1,1,-4,1,7,-3,-7,-8,6,9,-6,7,-1,-10,8,7,4,5,1,9,1,-8,-8,-3,6,8,-4,-4,10,7,7,-9,2,-9,9,-2,-10,1,9,-4,9,-8,9,-10,-8,-6,1,-4,-9,-7,-2,9,1,10,5,6,-8,-8,10,5,-5,1],[-6,10,-1,-4,-7,-5,-2,-8,-10,4,3,-6,-2,-9,2,4,6,-3,-4,-9,9,-9,8,-9,-2,-8,-5,-7,5,-5,-5,-5,4,9,-5,6,2,-7,3,-1,-9,1,3,-2,-2,-5,5,-2,-10,-6,1,10,-9,6,-3,8,-5,-7,-5,-9,7,5,-4,2,8,-10,1,-4,5,2,-6,1,7,2,-8,-8,4,6,10,3,-5,1,-3,6,-5,-7,9,4,5,-8,6,-5,-1,10,10,-3,6,-10,-9,6,-7,6,-8,-9,-6,-5,3,3,-2,7,-4,-6,-4,-9,5,4,-8,-5,1,-9,-3,1,4,-9,-5,-8,-9,-1,-3,4,8,9,10,-2,9,10,-6,7,-5,6,-7,10,9,6,6,1,8,7,5,1,-1,-8,-1,6,-3,5,7,5,9,-9,1,-8,-9,9,4,-9,-10,-9,2,-7,10,-7,7,4,-1,-2,10,-1,5,-2,-9,-4,-8,10,-10,6,-8,6,5,3,10,10,7,10,3,-3,-5,-3,-1,4,9,3,3,5,9,5,5,-3,9,6,-7,4,7,-4,10,2,-8,-9,6,10,-9,-7,10,-9,-1,-1,-4,-10,-4,-1,-4,4,-10,4,6,-1,9,-1,8,-10,-3,-9,7,9,-6,6,5,-4,4,1,4,-4,2,5,-5,8,5,-6,7,-6],[6,-4,3,-6,-8,6,10,8,-7,-9,8,-10,-3,9,-10,4,6,-6,8,5,-8,-9,-3,8,1,-2,-5,4,-7,-9,-6,4,10,1,2,3,9,8,-10,3,6,-8,6,-8,-7,-3,-9,-4,-6,7,3,10,2,5,6,1,3,-2,3,3,8,-2,-2,-6,-5,10,10,1,10,4,-6,-8,4,8,-10,9,9,-5,-10,-3,3,-3,5,-7,-10,1,-3,4,8,7,5,6,-7,-8,1,2,-7,8,-8,7,5,-5,6,10,-1,4,4,3,2,-10,5,8,6,-1,3,4,5,-8,9,9,-4,-8,-4,10,4,-8,2,8,3,4,-9,-4,8,-9,10,8,10,2,7,-9,-2,8,4,3,9,-1,-4,5,9,-10,4,2,-4,-10,-8,1,-6,5,-7,7,-4,6,-5,1,-7,-10,-8,4,7,-2,3,-5,2,-10,8,7,-8,-9,4,-7,-2,-1,-9,2,-1,3,8,4,9,1,3,-9,-2,4,-10,-8,-7,-3,-4,-6,-9,-8,8,7,7,-5,9,-1,-4,-7,-5,-9,4,1,-8,4,6,6,-5,1,4,-4,2,4,-2,2,-7,-2,-4,-2,9,-4,9,7,5,-8,6,2,7,3,6,-9,-8,-6,3,7,-2,-5,2,-5,-1,-6,4,4,3,-3,5,-1,-10,-7],[5,-4,-6,-9,2,3,-8,-8,-8,-6,-2,-9,-8,9,-9,2,2,-10,7,-5,5,10,-9,-6,3,-8,-8,1,9,-5,-8,-4,-4,-7,4,-8,3,2,8,-9,-9,-7,5,-4,-8,3,-7,8,-1,-2,8,6,2,3,8,-3,10,4,8,10,-7,3,9,-5,6,-7,-1,-8,-3,-5,5,-7,-7,-10,7,2,2,7,-9,-4,-2,-1,-6,-8,-10,-1,10,-9,9,4,7,9,1,1,-6,5,5,-3,-5,-1,3,-9,2,-9,-7,-4,-9,6,-6,-2,-1,4,-2,-1,7,3,6,2,2,-6,6,-5,-4,7,-7,4,-5,-6,-7,-6,-8,4,-1,-1,-2,3,-8,3,7,-2,8,-4,6,9,-6,-8,2,-10,10,9,10,-10,-8,10,2,2,10,10,-6,9,-4,10,-1,-2,-2,1,-10,-2,-3,-6,8,4,3,-6,-4,5,-4,-5,-5,-5,5,1,-8,-4,7,5,-7,5,-6,-1,8,8,2,8,-10,4,-9,-1,-10,-8,-4,-4,4,2,-10,10,-10,-1,-4,10,2,-9,9,-7,-6,5,2,2,-9,-7,7,7,8,2,7,-7,-3,9,8,-10,5,-4,-5,4,-1,2,-8,7,-9,9,-8,4,-5,-5,2,-9,1,5,-2,-1,-10,10,4,-6,-6,-8,5,8,-6,3],[8,-9,5,-8,-3,-9,4,2,9,-10,5,3,-9,-10,-6,6,-6,5,-9,10,4,2,9,7,-2,-6,4,-8,10,1,-2,-10,-2,-10,9,-2,9,4,-7,-9,7,-9,3,-5,7,7,-5,-8,1,9,-7,-5,-4,-6,10,-2,-1,10,-8,6,-3,5,-1,6,-10,-4,-5,-7,9,-9,-9,6,4,3,-2,-7,4,-4,6,7,-6,-5,1,1,-5,9,-3,-5,2,9,9,-9,-10,7,5,-2,-6,-4,-10,9,5,-1,-2,5,6,-7,2,7,-9,7,-8,-6,9,3,7,5,7,-2,2,-4,1,-3,-5,4,5,-9,4,9,-7,1,2,8,1,10,-9,-2,-4,-3,5,3,1,-3,7,-6,-2,-10,2,4,10,-7,-8,7,-1,-1,8,-6,-5,-1,1,-7,-6,-9,-5,-4,-9,-3,-7,7,3,-6,-1,9,1,8,-1,9,4,-6,1,5,10,-6,-8,-6,-10,-3,5,9,-4,-2,-4,2,8,-8,-7,-8,-8,-5,7,9,-4,-10,-6,8,6,7,-10,-7,-9,7,5,-5,2,-3,-1,-6,-7,-5,5,-5,3,10,-10,-2,-1,5,6,3,9,-7,-10,-5,-3,-10,-4,-9,6,2,6,5,5,-5,7,1,4,6,2,1,-10,4,-7,-2,-2,-10,-8,-6,-2,-6,-7,-7],[-4,6,-4,3,-1,9,10,2,-6,10,5,9,-5,8,-1,-6,8,2,9,6,-2,8,8,6,2,2,-10,-5,-5,10,10,10,5,9,-5,6,4,1,-3,8,3,-3,10,-9,-10,10,4,-7,-9,-5,-3,-6,-4,-1,-4,-2,-6,9,2,-10,8,4,9,10,-8,-6,5,-10,-9,-8,9,-9,5,-2,5,-9,3,4,5,-1,9,7,-9,5,-9,10,-2,-2,6,-4,-7,5,-6,-3,-3,7,-4,-7,1,-3,-6,-8,-2,3,-8,1,10,5,-7,1,5,-3,10,1,4,4,7,-8,6,-8,-8,10,-7,6,-5,3,2,-8,5,-8,5,1,-5,10,-10,-6,7,6,10,7,10,-5,7,-7,-3,3,8,-10,3,-6,10,1,7,3,-1,3,2,6,-1,2,-9,-2,1,1,5,8,9,-5,9,4,-10,-3,-2,2,1,7,-2,-8,4,8,-7,5,6,-2,7,6,2,-10,10,8,-7,-3,8,4,3,1,8,5,5,-10,-3,8,8,10,9,1,-6,6,8,-8,-2,8,-7,4,2,4,4,3,-1,2,-4,7,7,-6,1,-5,-4,-3,-8,3,-4,-7,1,10,4,2,-5,8,2,7,9,-8,-7,-4,-9,6,5,2,3,8,4,-7,-10,-10,-10,-6,1,2,7,2],[2,-1,-1,-3,-5,-4,-10,7,-6,2,4,-5,-4,-10,2,8,7,-10,-2,-5,-1,-7,7,-3,-9,-9,3,-5,-10,9,-6,-3,-6,-3,6,-7,-6,10,-6,-8,-7,7,10,8,-8,1,2,9,9,-8,10,1,-10,9,3,-3,4,-10,-2,6,5,-4,-3,7,-4,6,2,10,-8,10,-8,-2,10,1,-2,2,4,6,-8,9,10,6,3,-4,8,-2,4,1,8,8,10,-9,7,-4,-8,4,10,-10,7,2,7,-2,-10,6,6,7,-5,10,2,4,-9,-2,10,10,5,3,-7,-2,9,-2,2,-8,-8,9,-4,-3,-3,10,6,-1,1,2,10,-5,-4,1,-8,4,-9,9,-6,-4,9,2,-3,6,-10,4,-4,8,-5,5,2,-3,-2,4,-7,7,-4,9,4,3,-6,4,5,-10,-1,-6,-6,-3,1,6,-10,2,-2,3,-8,7,-5,-6,3,3,-2,-8,-7,-7,-10,6,4,4,-1,-1,7,-3,-1,5,8,9,-8,-8,-5,5,6,5,-9,7,8,-9,7,7,2,1,1,-9,4,6,-2,7,2,9,3,-1,3,-3,-3,-8,4,4,1,4,3,-9,9,-3,9,4,8,-10,5,-3,6,3,3,5,3,1,7,10,-5,-9,-5,-4,-8,5,-2,4,-10,-9,-8,-8],[2,-8,-1,-7,1,1,-10,-10,3,-6,4,4,8,-8,6,9,7,-8,-6,-7,2,-5,-4,3,-2,2,-6,1,-10,2,7,5,-1,-4,-10,5,8,-6,-9,-10,5,-7,10,7,-9,5,4,-3,3,-1,-8,-6,-10,-1,-1,-10,-4,-9,6,-4,7,-4,9,6,-5,-8,-7,1,9,4,2,-6,2,-1,-1,5,6,1,-5,9,5,-4,2,-10,7,8,-10,8,-10,-10,5,1,3,7,10,-9,-1,-7,-10,3,3,-7,-8,6,-3,10,-2,-9,4,4,-2,-9,5,8,-5,3,2,4,6,-9,6,6,2,-2,3,-10,-6,2,7,9,8,-3,-3,-2,6,-7,-3,-10,-10,1,8,-2,4,-8,-1,4,-10,-4,3,3,7,4,2,-7,6,-10,1,9,-6,-6,-5,-8,9,-9,8,-4,1,-7,1,9,-1,-2,-1,-8,9,3,6,10,-3,-10,2,-6,-1,7,-6,-9,-5,9,-1,10,3,-3,-5,6,1,-9,-7,5,-9,-10,-9,1,-2,-8,7,3,5,1,-1,10,-3,7,3,10,6,-6,-10,9,-7,-5,6,6,-5,1,-6,-10,-9,10,8,-5,-1,7,8,-1,2,-9,5,-2,-4,8,6,-10,-4,-9,2,5,7,-5,10,1,-4,-2,8,1,9,-4,7,9,6,-4]], dtype = "int64")#candidate|3248|(8, 260)|const|int64
bop_3249 = relay.logical_xor(call_3239.astype('int16'), relay.reshape(const_3248.astype('int16'), relay.shape_of(call_3239))) # shape=(8, 260)
bop_3252 = relay.logical_xor(call_3240.astype('int16'), relay.reshape(const_3248.astype('int16'), relay.shape_of(call_3240))) # shape=(8, 260)
func_2500_call = mod.get_global_var('func_2500')
func_2502_call = mutated_mod.get_global_var('func_2502')
const_3261 = relay.const([[-9.915351,-4.759234,3.694380,5.056950,8.486892,0.198531,9.051382,-2.361300,-7.198930,-6.957990],[5.209345,-5.676884,6.533884,3.619739,2.003500,7.325162,-4.708710,4.956431,-1.382078,-7.637132],[-7.668036,1.527775,0.339129,-3.958893,-0.756582,7.511910,1.121760,8.213037,-3.802357,-7.642904],[8.285764,0.787778,-7.136715,3.721833,-9.444719,-2.198257,-7.756263,-6.437473,5.750545,1.916810],[3.668774,6.326034,-5.169066,9.516939,9.640660,-4.304480,1.929414,-5.586400,-8.801710,-1.099905],[3.558217,0.194029,-3.321246,-2.098333,-3.499564,-9.252594,-3.905360,3.349959,-7.893255,8.713719],[-8.691535,-2.708741,-8.455308,9.068498,1.420870,2.821119,-8.039377,-5.285070,-8.891641,-6.759865],[-0.897645,6.164526,-8.182029,1.878611,2.730808,-0.328211,-5.707443,-5.765724,2.229851,0.120123],[3.439089,-5.684940,5.753489,6.333399,4.448859,-6.823068,-4.998478,-3.502278,-7.495844,4.171179],[0.814840,-1.309772,0.433198,-7.204623,-8.743469,9.217483,-7.541578,-1.410338,-5.886020,2.130024],[6.198109,0.673875,4.848573,5.202387,2.381138,-1.523889,-1.720614,-8.767791,5.707392,4.808388],[-7.701777,4.427900,-4.498380,-4.350438,7.187566,-2.878217,4.157661,-3.753740,7.964714,7.464483],[0.111442,8.132497,-5.076707,5.192686,-5.984218,5.452081,9.241142,5.305268,-1.910442,-8.269402],[-3.002141,1.951761,-6.482057,-1.159793,5.211205,-0.724082,5.217378,-2.410364,1.316319,9.080883],[-8.241815,-1.888699,-3.154058,1.523529,0.881313,-6.940827,-0.838985,9.598920,-8.469434,3.465647],[6.320096,-0.293266,3.187497,-7.548614,-4.419550,5.022589,3.386984,-9.867491,6.251083,-7.807388],[2.468787,-8.280973,-5.149160,-8.591428,-8.254263,-2.358014,2.043247,-9.144497,-6.649193,8.172462],[2.849219,7.863021,-2.655643,-1.196822,-8.245616,-7.306944,2.649260,5.106173,-1.294891,-0.980663],[4.317591,6.692125,9.766796,-9.987232,-0.803704,-4.760930,-4.910673,-0.431323,8.610142,-8.842545],[-5.206931,1.905183,-1.255617,7.471677,-7.332208,1.639716,0.938686,-8.920225,-5.084554,-5.161603],[-8.106190,-8.163849,-3.438933,0.239996,9.456179,2.641642,-0.237531,-7.145208,-4.066227,-1.830955],[9.035266,-4.573645,-5.911099,-3.459093,4.131798,8.817347,2.123258,-3.454252,6.967712,-9.061548],[-2.964098,-8.171185,-9.105153,0.463765,-5.720863,-9.749878,4.327898,-5.744257,7.898431,-2.606702],[4.691487,4.545447,-8.145094,3.715482,1.325000,-1.360904,0.649452,0.884329,4.975941,-6.143351],[-7.162944,-6.822412,-8.861634,0.523670,1.167764,-8.999264,3.882020,9.166293,-8.494325,1.984535],[-1.606634,9.127732,-5.025473,-0.870318,6.568569,-9.022626,0.222531,5.702159,6.461168,3.560898],[-4.599410,-4.870271,2.121172,1.746482,-4.043288,-0.550302,5.503133,-6.428975,-9.048597,6.688796],[-3.980352,4.958401,-1.622898,2.788184,2.999600,-0.581013,-4.787617,1.919298,2.588464,6.357508],[-3.913553,-0.524899,1.806206,1.907428,0.008931,1.624871,-8.048656,2.442674,6.375303,2.145063],[-1.323869,7.907416,-2.567726,-2.646438,3.865475,3.483164,5.938358,0.571384,-1.887429,-9.721687],[-0.235804,6.987974,-5.623439,0.992979,3.423345,-8.551888,0.425963,6.526009,0.410347,7.611049],[6.561520,-9.489096,-1.604697,-4.009154,-7.000934,0.195525,-7.807502,-6.276733,6.559454,5.664259],[-2.126583,-0.591289,1.854259,2.722682,-8.459810,8.398141,4.933868,-9.842689,-6.434632,-7.245461],[-1.508561,7.969448,2.940196,9.575867,6.664345,7.586261,1.754978,4.646506,0.241314,6.710319],[0.457328,-2.799815,-7.802403,2.797037,1.249170,3.202254,1.387992,-2.642329,-1.850019,8.940915],[-6.554644,0.506111,9.350398,-8.325115,6.808331,-6.244129,9.492259,4.623030,7.471465,-0.351015],[9.075282,-3.228349,-3.422344,7.832311,4.210979,-0.903390,7.692717,0.158814,1.930211,-8.747745],[1.051809,9.649817,2.026390,-2.222620,2.800410,6.083930,-1.795080,7.131444,-2.864502,-8.955109],[-3.689400,-5.477113,-0.337839,-9.844427,8.796170,6.420901,8.106675,8.267936,2.425326,7.863754],[-6.111783,8.640059,1.687093,6.101523,2.952150,9.148680,2.265638,-2.006961,9.420516,6.901121],[0.222813,2.196520,7.409420,0.819660,-8.661368,-7.377033,1.603908,7.668170,-6.020932,-5.308796],[-9.612597,9.214074,1.573745,-3.214631,-5.250006,-5.108977,-0.378438,-0.368566,-4.521387,-6.623508],[0.675580,-7.846507,3.571445,9.132396,-9.964745,4.984636,4.017299,-3.996543,-2.312242,8.725853],[-1.925394,-6.995708,7.360735,6.258316,-2.365635,-4.278058,-0.226104,-0.439416,-2.531991,9.149154],[-0.668349,-6.102788,-7.095428,-6.872486,7.076510,1.104518,3.685665,-7.120862,7.634830,0.198484],[9.675371,0.608397,-4.482623,9.300885,2.731050,5.027938,-5.474443,3.973375,7.452333,8.095181],[2.087177,-1.681705,1.458860,9.044698,-3.895051,-9.606620,-7.200664,2.412406,-7.649372,1.596919],[-1.912014,4.208285,-3.877314,1.388665,-7.504158,-8.412987,1.969130,9.146585,6.276783,2.372822],[7.569810,-2.939453,2.110595,-7.098684,-1.598905,2.345032,-6.163455,8.139985,0.874928,-5.127883],[-4.645630,7.372306,-5.380586,-8.124298,4.066836,0.549072,2.455921,-4.327654,-5.898867,-4.865254],[9.946089,4.198163,-7.375142,-1.212803,6.370329,-4.100524,-4.838587,4.781004,-9.367745,-9.402454],[-0.846779,-2.538731,1.566882,-2.419770,6.163444,2.574075,4.081543,-3.335827,9.788425,4.141578],[-0.810704,-4.334631,-2.994779,3.608146,1.532748,-4.570371,1.641890,-3.515547,-6.772416,-8.745426],[8.952173,-3.299825,-7.472428,5.629979,4.723082,-9.421709,-9.979196,-5.677666,3.376706,2.750365],[-9.972748,-8.729590,-6.151455,-8.696914,4.626281,-0.595788,-1.239051,9.883332,7.607189,9.421583],[-2.380796,-9.469742,-9.236477,6.433382,-0.930088,8.562086,-4.783578,2.027515,-9.678955,6.779415],[-9.871183,-5.521043,-9.133420,-5.287149,-2.385479,6.051108,5.053137,1.605105,-5.855803,3.212732],[8.336136,5.700743,-8.200386,-8.379294,8.159226,9.427913,5.919696,-8.595643,1.247705,-9.917672],[-8.245842,-6.055674,2.050728,-7.478983,-4.015602,4.707576,-6.925243,-2.805558,6.227131,3.642504],[-4.163962,-2.309948,-9.072190,-7.552146,8.293351,-5.521943,-4.702697,-4.064575,-5.790924,1.747948],[-9.137232,8.694688,-8.432522,-4.465073,-0.855874,-5.234303,-3.325689,0.216558,6.226315,-7.985515],[-0.295163,6.372593,-7.735881,-7.214046,-1.909524,8.545310,-3.827973,7.994355,-1.852518,-5.761854],[9.077362,-2.504867,-6.038776,-2.927926,8.185343,-8.558662,4.119385,-6.985514,5.510144,6.308141],[-7.175137,3.048539,7.805700,5.776260,-6.823506,-7.371597,-9.533567,5.737407,-2.670837,2.287763],[-5.061362,1.452186,1.157478,8.453654,8.184016,-4.388516,-8.235526,-6.170833,-5.595359,3.502186],[-5.228378,-6.722002,-8.771273,4.690682,6.672313,-3.553762,-6.744550,-9.086307,8.535560,9.929452],[-7.099681,5.342680,5.745782,-6.953227,0.944194,-5.764092,5.784107,0.388561,-8.208561,0.521674],[7.840262,7.825451,2.658145,0.557230,-8.964354,9.909330,-5.697968,6.413470,9.363657,3.985993],[4.952939,-6.887711,-4.394436,2.560555,-1.667547,-3.198780,-2.264248,3.921804,6.179032,7.239047],[4.102709,-7.121093,7.533953,0.599445,4.940894,2.827224,-1.258408,-8.238473,7.210913,6.597876],[-8.645078,6.545808,-0.298477,-1.632044,7.071010,2.284048,1.992754,-3.855827,6.175644,2.380498],[-6.456096,7.387658,-5.257760,8.878543,7.864270,2.707668,4.945285,9.670936,7.081891,2.630770],[7.022572,-6.787157,5.471115,8.630120,-2.899287,9.228339,7.371097,-0.618378,-3.099279,-4.838948],[-9.636689,7.407925,-4.015679,8.404593,3.439498,9.187213,8.223636,4.142021,-4.932635,9.665569],[0.091657,-9.361541,-0.740744,-6.830726,-2.725057,-5.446310,-2.060240,-8.380302,-2.650487,-8.378088],[0.896006,-3.893387,0.201005,5.467449,-2.207749,1.198144,7.845790,7.269749,-0.061880,3.459109],[-5.299069,4.609587,6.528679,1.422911,-8.964188,7.647013,0.199814,-8.136454,6.574876,6.572421],[3.923414,2.272847,-3.421750,-8.574626,-1.474471,9.448243,5.188854,7.159939,3.047287,4.619614],[2.717719,2.422386,-3.396040,7.511475,5.398922,-6.960892,0.055900,0.251312,-3.822734,-2.744478],[9.425467,9.526316,2.493886,-3.624559,7.405559,-9.851314,-1.495761,-5.954246,1.247443,0.713369],[-3.538047,9.660456,0.015224,8.666304,-4.321754,0.880287,8.259991,4.009533,3.307990,2.596202],[0.583451,9.275368,6.311233,-0.763071,-1.132629,6.462008,5.217895,-6.118516,-3.033149,-1.128576],[-5.953295,-0.149199,-6.769361,-4.401022,0.445529,0.258052,3.994413,6.794374,-0.995294,4.129458],[8.298763,1.883119,-5.591055,9.570078,9.904769,2.400938,6.766303,5.228949,4.735268,-1.650257],[-7.637933,7.735656,-7.843665,-3.857691,6.183120,0.423314,9.434353,0.464262,2.387651,-0.952126],[4.099095,-5.308753,4.961908,-9.947573,0.643848,-0.094695,-1.523483,9.773245,-7.317249,1.108515],[9.433998,-9.945667,2.211302,-3.258126,-8.235428,7.979538,5.702174,1.792324,-1.824049,4.045514],[-0.419101,4.649219,-6.414881,5.966230,-3.291797,-3.237911,-5.572086,-0.847157,-4.060121,-2.861323],[0.919615,-3.641111,9.980735,-2.502883,-3.037129,8.787325,2.113644,9.972179,5.764524,-8.240109],[-7.946434,7.702173,0.566817,-1.908655,2.931086,-7.408186,9.356870,9.636805,-6.828536,-9.373513],[2.441172,1.655146,-7.091145,-2.059891,-4.937718,0.182515,6.145405,1.975852,1.880838,3.111055],[-6.639615,6.160637,-7.525905,-3.948645,-5.274528,4.238639,-0.229564,-4.597227,-8.176960,-8.744796],[1.484465,0.219267,-5.403553,7.780974,-4.704473,-0.456779,9.087410,-4.749956,-0.042771,-6.869078],[9.426554,4.332558,3.985175,-3.440938,-7.568563,-9.879026,4.728522,9.011828,-8.785338,3.766398],[3.146777,2.699578,8.542460,-0.936710,-8.236946,7.805234,4.591143,7.279796,-7.833734,-4.522061],[-9.515638,6.369283,-8.675201,3.596014,3.882150,1.932674,1.781995,1.661885,9.314137,-6.697704],[4.009448,0.071184,-4.991073,5.949943,5.236329,-8.933752,-3.135031,8.062325,-7.755722,7.739301],[7.138514,-4.783645,3.186759,5.891163,1.907621,-8.459161,5.885652,4.773825,-7.434102,1.479612],[-6.231963,0.721344,3.124908,5.413672,2.901438,9.565109,-1.002702,3.131530,-0.672176,-5.323337],[2.181423,-3.742186,-1.876512,-3.317648,-3.742208,-5.675008,9.614715,0.499524,-2.224338,-2.846924],[9.718008,-8.507977,8.628492,8.991848,5.157814,-2.028578,-6.435639,4.122425,-8.373668,6.799070],[2.919618,-3.497576,6.846725,1.262705,-7.421082,8.322382,-2.537351,6.142490,-5.513376,2.920568],[-8.719582,-9.007342,-7.089092,-4.703594,1.736722,6.632837,8.396745,-0.675722,6.627851,0.257112],[7.432134,8.188203,-3.245545,-2.643513,0.163007,-6.020190,4.884510,-9.407921,1.337177,-8.882365],[-1.420569,6.127290,7.059786,-5.204958,-5.442324,2.212001,-9.056782,0.198701,8.104506,6.759345],[1.186337,9.670791,-3.838175,-1.988029,-8.614507,6.706258,-2.945648,-0.398740,-9.512405,-2.326592],[-4.915736,-0.404220,-1.731533,-5.942866,4.840234,-6.908668,5.223516,8.166356,9.436112,0.002423],[5.134993,-8.868828,-6.967993,5.277524,5.923309,9.782622,5.631190,-0.300923,2.654283,-5.678633],[3.659451,9.514004,-0.346792,-8.950955,-2.901232,3.595777,-0.283390,7.237580,-9.473181,0.587133],[-3.710035,-4.780211,3.930137,6.106912,4.256750,5.891877,-3.530230,6.247186,-0.148006,-7.040263],[-7.366163,-1.755537,2.103740,8.653793,-3.029572,6.814746,1.723630,5.250841,-9.838721,2.013047],[-0.985366,-8.924127,7.615307,9.633628,-9.691449,-1.247774,2.332014,2.944497,-8.060330,-8.567442],[-5.577337,7.437569,5.693877,-4.197839,0.434495,9.472485,-9.678151,-3.820702,-0.313979,4.491790],[2.657115,7.026882,-3.019054,4.615693,7.356296,-1.993272,3.442102,3.076819,-5.933493,-3.203228],[8.350353,0.025647,-1.703516,1.779122,1.039321,4.317450,-3.865747,7.030536,1.936520,7.130644],[-4.357306,-5.111910,1.290775,9.837013,9.366516,4.044236,0.984775,2.035335,-5.357310,-9.577254],[1.992849,-2.699759,-3.021271,0.797272,-8.300099,-0.266377,-5.850533,-0.502586,-1.918509,7.610284],[9.799511,-6.317575,7.489804,-9.144108,-1.788645,2.216054,-9.295876,1.409477,2.530946,5.196110],[3.575267,-1.967676,-1.284770,5.892366,-4.461975,6.871339,0.034068,5.049959,0.819950,-2.492964],[-9.612655,1.124306,3.796285,-9.384604,9.616556,-7.762607,5.245972,-7.663434,9.555824,0.295064],[-4.657922,-0.880318,-1.206736,-3.092926,6.809905,-5.654088,-4.990786,7.569741,-2.687062,-5.457808],[8.026730,3.995113,-1.682572,-9.911003,7.491473,0.964387,-1.479280,-7.975858,8.397586,-0.608896],[6.632772,9.083603,5.961117,-0.697535,-6.277241,9.776072,4.423764,-3.689325,0.679271,-2.229289],[-8.555619,-1.390013,8.977088,-1.414772,-2.344469,2.051986,5.744445,8.999165,1.329747,-0.886704],[5.117688,0.361178,-2.445681,-6.322292,6.334169,0.829608,-0.585628,-7.889200,-3.697352,6.625000],[-9.894471,-4.434315,3.333924,-6.854471,6.806301,-3.175423,-2.928360,-2.846624,5.631328,-1.900558],[0.708339,4.815455,-0.428854,4.724297,-8.775799,6.969281,3.768566,-8.835720,4.176883,-7.689567],[2.053027,0.275317,-0.374632,7.571484,-6.213541,-6.781539,7.901885,-8.549445,-5.428123,-5.798447],[-4.325504,2.789945,5.620980,-3.787138,-7.412623,-2.043907,9.515609,2.537579,1.637806,0.806654],[4.627314,3.634770,0.156545,-1.850452,3.807715,-2.016576,-4.327299,5.951973,1.056744,-4.344743],[-9.340840,-9.835350,7.926119,-2.174268,-0.955358,-6.562753,3.064042,-2.092404,1.941174,-4.528503],[8.729344,-9.273236,-3.476225,9.612786,7.429569,6.479025,-6.554397,9.575025,-5.906100,-4.038898],[-6.753073,-9.582556,-0.668041,-3.611065,1.083439,-0.307583,-2.591862,-8.077322,3.022001,-8.135026],[6.875112,-0.928137,4.066400,9.581662,5.521739,-7.755021,1.795649,-8.993787,4.885892,4.790521],[6.399960,0.766039,0.765271,7.056020,-6.473227,1.425235,3.469462,3.619350,-9.197388,-3.102843],[1.325531,7.002176,4.864337,-7.363323,-6.162647,0.495402,-0.839902,6.217318,-3.150478,-5.410361],[0.538892,6.928662,1.332012,5.919208,3.188328,-7.609792,2.313192,4.188779,5.973862,4.437999],[-5.232836,8.351780,-6.234239,-3.499031,4.190235,1.223983,-4.729400,-2.394390,8.994590,9.369496],[9.617017,9.291564,7.802552,-6.701254,4.836537,7.499653,-1.727448,-3.259998,0.722370,-1.336299],[5.144465,2.903519,-6.624059,2.426129,-1.107682,-1.767563,-0.434087,-6.640257,6.596952,-8.929179],[-4.535430,-0.180900,4.065241,3.929835,2.728051,2.640295,2.877806,-5.298081,-1.717328,-1.826478],[6.745465,3.995622,-8.523781,2.070006,-8.552460,-5.438367,6.414239,3.872674,4.645104,-5.024375],[-0.001082,6.913453,-1.091492,2.142588,-2.984406,7.128750,3.452432,8.312149,-8.480718,6.109628],[3.886734,-5.617128,-5.181864,8.441650,-3.292619,-4.075878,1.105224,2.792726,8.772339,3.003961],[-2.243811,2.345111,1.500581,0.589189,-7.276100,-6.193487,8.062141,-9.636590,-6.152818,1.282410],[5.295676,-1.801490,-5.976204,2.896914,-8.998694,5.775106,2.362711,-2.136954,2.787311,9.791611],[-7.274700,3.069181,-5.885653,8.124006,9.586158,3.238465,-1.139803,-1.693289,6.118294,9.209890],[-4.580740,-8.187541,0.135943,-2.339489,5.575013,-4.876346,1.147461,3.811257,-0.709861,-9.042708],[3.846142,-8.784747,8.827900,-7.187803,-7.877126,1.714124,-2.156759,4.297624,-3.543508,3.247442],[3.543580,-3.095657,5.118226,-6.559720,-9.482180,-8.061004,-8.306232,-6.017026,9.242498,4.190037],[-9.541758,-6.205456,-3.908862,-2.882065,0.121711,-4.930019,-0.100290,6.263476,-6.145090,9.861409],[-4.666866,2.751480,-2.024662,3.053865,-5.223004,-1.492537,7.042201,-0.362555,-1.038676,-9.334313],[-7.871538,-2.438737,7.618288,-6.924261,6.026946,0.943232,1.006772,-3.936277,-8.977392,2.959918],[-1.356412,7.540931,-9.369658,-6.687525,-7.804579,-0.206970,2.718851,2.995806,-9.372546,7.413409],[3.312673,-3.559031,5.770695,3.498055,-9.344934,-2.408519,-4.719926,-9.180505,6.420889,0.411016],[1.298706,-6.785975,-8.991329,-3.709150,-7.165236,-7.756477,-6.759737,-6.142428,5.952277,8.030177],[7.099660,9.852141,9.417108,-0.158479,-5.778815,-0.907701,-9.769792,-3.636865,6.078995,9.168694],[-6.024445,4.354728,-0.129626,-1.544839,7.233236,9.875446,-7.642084,-5.316594,-0.200657,-1.338585],[-5.207463,3.616712,-2.660414,1.308593,-7.301342,8.428101,-9.372997,2.241465,-7.149200,2.851269],[3.209825,-8.767514,8.215337,2.597012,-8.019534,-6.844974,-0.073531,8.126893,0.088050,-8.127090],[3.856661,3.532193,0.741110,4.556104,-7.468838,5.642255,3.172725,0.162253,7.860824,5.271108],[8.919625,-3.946110,4.497683,-5.205558,5.059465,-3.886451,-1.750560,-6.784856,-7.890813,0.176652],[-3.271931,-0.323947,6.501115,-7.579030,-2.798304,-5.895943,6.254740,8.008046,-2.531606,-8.255837],[1.943035,-9.518812,-2.821846,8.006002,-5.538692,1.859088,2.717909,9.355722,-6.321806,7.697942],[9.780329,-4.519998,1.279995,5.783460,2.747254,6.206126,-4.197066,-6.062320,-4.198907,2.344052],[-6.389911,-2.722594,-2.457282,-9.315540,8.677638,8.013242,6.329567,-3.534747,9.647110,-8.458341],[6.915256,1.021268,-1.132392,-1.753836,6.894409,5.410442,-5.091141,-9.085867,6.830237,4.191351],[-0.371513,3.737729,-4.817534,-4.014690,8.525927,-3.843666,-1.897339,-5.188940,9.000136,-0.456083],[-5.432627,4.097387,1.206989,6.348316,-8.159833,0.131352,0.401196,7.597347,-1.149919,-7.385875],[-1.981780,-9.115751,-6.229474,9.095514,8.645360,8.979744,-8.742677,5.843589,-2.236705,-3.802874],[5.842271,5.969604,4.511467,3.587093,7.840476,6.673245,-7.601599,-5.609973,8.651719,9.955080],[5.286181,-9.837572,8.608859,6.572304,4.017266,-0.888219,-8.827302,5.612265,-6.249799,8.836487],[-9.999994,-7.415455,3.715877,-7.744097,-1.816824,9.491085,-6.494547,0.440699,7.556207,9.722849],[6.507596,-0.617869,5.262106,1.930527,-3.668388,8.801765,1.770270,8.242475,4.860334,7.126660],[8.825985,2.193134,1.214265,7.263593,-8.691461,3.133651,2.203278,4.897321,2.353088,-2.657039],[9.349974,0.667254,3.228569,8.243631,-4.414735,8.275680,-5.246194,1.921142,1.712683,-0.497324],[9.528902,9.089451,2.596153,8.898636,1.667021,-4.469294,-6.000798,-8.390397,9.742177,-4.389635],[-2.912896,6.549850,-5.871572,-8.179236,-4.202063,2.508621,-1.654418,-5.312790,8.414054,9.405855],[8.387613,-8.583902,1.094982,-6.531710,-4.033546,-9.987380,-2.126224,0.596983,-4.460405,-4.406705],[3.291098,-1.383276,2.710401,4.770125,-4.706225,2.192351,8.728785,2.359847,-9.149435,4.157103],[-9.622470,-2.467176,2.335051,-5.645762,2.373203,-5.890678,-9.606738,0.779997,1.347899,3.681563],[2.298858,-9.817838,-9.488524,1.947101,0.343808,5.732810,-1.766011,-1.198399,-9.563495,8.765756]], dtype = "float64")#candidate|3261|(182, 10)|const|float64
call_3260 = relay.TupleGetItem(func_2500_call(relay.reshape(const_3261.astype('float64'), [14, 13, 10])), 1)
call_3262 = relay.TupleGetItem(func_2502_call(relay.reshape(const_3261.astype('float64'), [14, 13, 10])), 1)
const_3271 = relay.const([[-1.949823,-9.508220,2.922659,-6.039792,8.407456,5.688416,-0.048032,-7.109979,9.466525,6.160128],[0.947365,8.662252,4.434266,-3.092214,6.219622,-3.943673,-2.913061,3.080270,5.218828,6.468491],[-6.621226,4.185057,-1.398947,1.921326,-1.107312,3.459931,6.595657,1.569747,6.121069,6.897005],[4.807588,-4.369281,7.428984,4.787018,6.221445,2.245999,2.139691,-1.790594,-8.878828,2.302483],[4.356797,0.588134,1.577465,2.608828,-6.015167,4.268545,0.381564,-3.473532,7.867159,6.714229],[-7.217407,-6.037676,-2.446621,6.943875,-4.424801,8.723733,2.913482,-0.439689,8.267416,8.172443],[2.063350,8.102767,0.880628,6.931471,5.581768,7.935603,3.947014,-1.075261,7.572482,-0.277315],[-2.023973,8.819003,-9.328527,3.564074,0.479901,-4.597042,3.714399,8.233305,9.065020,-3.126944],[-0.473498,-4.832768,0.643749,8.210991,-2.241745,2.877771,2.959254,8.274154,-5.456379,8.504002],[1.962952,-9.198071,3.280504,6.670095,-4.335063,4.109085,-6.911728,-8.736912,-4.069373,-8.841539],[-8.556148,-2.158256,-9.578543,6.085656,-2.762683,-7.164620,-7.864424,-9.463297,1.995119,-6.338642],[6.097589,-7.372941,0.950946,-3.249420,-2.471054,8.193238,-3.916483,-7.623484,3.235036,0.881823],[-2.683022,0.553034,5.594408,-6.965666,-5.425864,-8.575451,-3.823362,4.186865,-4.665877,-9.154226],[-6.968624,6.701174,3.191120,7.165864,4.790401,-7.227092,-6.641322,3.691121,7.526475,-3.877179],[-8.684665,-1.683619,1.440810,8.660695,2.883689,-4.372442,1.796166,-9.605546,1.336989,7.889719],[-1.223823,-0.718606,0.768802,-7.810816,8.209168,-5.899884,-5.164287,2.374454,-6.753139,8.562033],[-8.168981,5.055697,7.824963,-0.750736,1.950621,8.544405,0.722035,9.515330,1.438914,5.893012],[-1.187665,5.748795,-2.002210,2.890320,6.362833,-8.466134,-4.913669,4.854180,2.406213,6.830603],[4.432711,5.201449,-8.154260,6.548974,-3.702215,5.827443,5.312269,5.751740,6.719718,-3.563594],[8.756403,-5.279857,7.371113,1.987362,8.498850,6.465377,-6.433466,2.692653,2.082362,-9.799265],[8.802319,0.982101,-0.149641,4.066613,8.075525,-0.533109,-7.662821,-4.344429,-1.536197,2.305131],[-2.526918,-9.438093,7.529327,-2.539019,4.915060,-8.440668,-6.708666,3.511004,4.700909,-7.606775],[-2.574288,3.259229,9.331851,-6.921772,-7.066426,7.420457,7.225341,0.267328,6.332646,6.744576],[-2.182351,1.026388,8.257034,-2.605605,0.040692,0.468943,6.898155,9.060782,7.270266,2.141406],[9.366077,-0.438629,-6.622415,7.911682,3.071966,-0.683294,-5.479167,-3.019502,-7.029809,-8.084674],[8.642130,-6.948258,0.950638,5.496630,2.977490,-2.530995,0.851054,1.188477,-1.772336,8.657695],[-6.765176,9.573229,-0.047834,-8.681740,-1.475822,-4.529815,1.637107,7.038490,-8.897749,5.113858],[5.512740,-7.866194,-5.105338,-9.587717,-9.193264,9.689027,-0.320416,-8.201337,-7.709041,1.086218],[7.135374,5.122633,-8.395435,2.739864,5.365859,9.429547,-7.634911,-9.504137,3.980759,6.253947],[-4.327848,-2.108805,-5.590100,9.216524,-5.308027,6.460136,4.872743,-9.841700,2.180337,-8.986883],[-2.613567,8.180385,-0.612570,8.972008,4.165346,4.641189,4.173548,-3.557929,-5.059321,9.198393],[-9.697056,1.156459,4.069440,-4.893001,3.167567,8.138108,-2.873204,0.721611,-4.141105,-1.731386],[0.496493,-5.011976,-0.265509,-4.678823,-6.124914,0.879906,4.709162,-2.149042,-5.926321,5.473046],[-4.846560,3.464481,-8.971866,3.989857,4.197427,-9.203426,2.643115,-4.215468,8.926654,5.574413],[-2.999372,-6.379588,6.501752,-7.436110,4.845287,4.513173,-9.712290,-9.413403,2.245134,-2.157514],[-4.835681,-1.926755,7.626522,0.011803,8.076064,-0.706943,2.024480,3.206327,-5.741022,-8.539572],[-5.319621,7.428497,-0.907228,4.256438,0.466668,-6.147070,-1.240043,4.821651,5.519568,-4.027304],[5.797106,-9.417973,7.682474,0.628864,5.282223,-7.656911,-3.619080,6.018760,7.739595,-7.683260],[-9.569522,-9.999067,1.212916,-3.414187,-7.096446,-4.630762,1.014021,-7.121950,-8.427860,-8.259455],[3.501112,3.853912,-0.752860,-1.200369,8.765159,-7.218201,-0.719172,-3.947823,7.258062,-1.394202],[0.515229,4.485522,-2.346990,-2.624389,-7.269811,-2.470883,0.243987,1.210908,-9.087522,5.379856],[-2.974576,0.110875,3.686701,9.676323,-2.641560,-6.084107,-1.523341,1.667972,-1.609666,4.009181],[-9.044354,-7.669859,-8.222307,-7.654876,-4.564522,-0.856935,4.204403,0.789502,-3.507698,6.032541],[-5.174549,-3.852441,-7.172272,5.946176,9.995526,7.877763,3.293551,4.509745,2.924892,-3.738492],[-2.824392,-7.393842,6.680918,-5.248044,-0.167392,-5.519344,2.434818,7.398162,-6.231415,-6.077979],[-1.711428,-7.481153,-6.383558,4.957635,1.464029,1.074494,-7.954151,5.517537,3.861613,8.824592],[-9.261210,-0.965331,5.994663,6.484664,6.193643,3.872091,7.652363,4.628839,-5.937342,4.676128],[-1.944707,6.429163,-6.638744,-3.669470,-1.798046,-8.924620,-8.279107,-9.057666,-0.107958,4.129248],[-7.399034,8.833386,-1.269955,8.902923,6.354671,-2.728066,6.967791,0.769815,6.856952,0.959276],[0.511821,-0.815998,-5.357521,0.367963,-3.127564,-2.481909,-2.701502,-7.788000,-8.913039,9.991622],[-5.392210,-7.094307,5.581414,8.877729,3.535714,-8.977293,-9.215821,-4.452967,2.281616,-1.622266],[9.908691,-8.288284,-7.549242,-0.905628,-8.863771,6.054784,-3.746369,-6.354054,6.781746,-7.047192],[-3.836341,2.870099,0.610346,-3.392672,-9.137300,-1.141230,6.217509,9.258811,0.048633,7.428656],[1.193082,-4.962496,-6.468847,3.177527,-2.183268,-3.656229,-1.550970,-9.326936,-7.148524,-4.498032],[2.390283,-5.607255,-9.043692,-9.144013,8.555113,0.564775,-2.587228,-7.696709,6.403690,-5.422142],[9.610594,-5.021460,7.674593,5.042541,2.646372,-8.984305,-3.704909,-0.765302,-9.469367,-0.027112],[-4.559618,-8.645426,5.255747,1.225101,-8.249068,9.895628,-9.297724,8.433972,-4.437829,8.911190],[-8.274439,-0.438381,-6.054085,4.502422,5.785151,7.874734,-2.205815,5.682966,-9.315499,-2.124336],[-3.332358,6.676761,6.204868,-3.314009,3.453560,-4.718068,0.098605,2.552335,2.110757,-8.937598],[-4.926705,-7.759782,7.665021,4.718578,-8.838907,-5.609888,1.667076,5.801513,-2.259087,-0.363524],[-9.205585,-2.691540,2.528712,5.444763,-0.800596,3.468788,8.892050,7.650250,9.555007,8.342204],[-4.459053,6.137088,2.216586,5.723063,-0.658060,4.842516,-3.268531,5.975827,3.192685,-5.061149],[-7.705352,4.189261,0.919872,1.707092,4.878253,-2.518462,-6.226474,0.539314,-7.567702,-5.955970],[-4.130979,6.273106,4.266588,-9.228832,-8.894498,-9.198771,-0.536318,-3.964716,9.199560,9.656433],[-2.266498,-0.364446,4.369489,-1.594932,-6.727394,-8.964037,2.000662,2.378737,-0.976086,7.266715],[-7.354021,-7.324010,2.272667,-1.098044,-9.583476,0.781443,4.891757,6.863495,1.728752,9.134833],[-5.006490,-5.817590,0.137464,-0.922144,7.645022,-9.837773,-9.978788,5.651552,-9.484619,-9.770333],[0.654442,5.584323,0.841213,6.790824,8.128646,0.789897,-3.510818,2.542847,1.742796,-4.549184],[2.953003,8.466122,8.712514,-2.701259,-9.987387,-3.456213,-3.159415,7.306157,-3.049838,9.689251],[8.442161,-2.052088,-0.186583,7.753578,5.518607,5.132365,0.429325,-4.059176,1.952689,-8.541047],[1.958610,8.030211,-4.594030,-5.814262,1.598181,-2.749376,-7.969600,-9.795189,-2.039151,-8.063311],[0.591276,0.773570,-7.311177,6.650186,-4.654074,-0.777561,-5.615940,9.102534,-4.676941,-0.037955],[2.388229,-3.076121,9.684797,8.605069,-9.550745,7.442014,8.297796,-4.389975,6.097898,2.121906],[6.358368,2.613113,8.242243,0.671811,-4.411552,6.477087,-0.973082,2.771721,-3.626715,-4.533117],[4.192213,1.102918,-6.635948,-3.112160,4.175236,9.545314,0.616883,9.576161,8.138625,-4.365364],[-1.339178,-9.080250,3.469711,-5.998306,-3.417061,7.734500,-7.018694,-7.790870,-6.317485,-0.580232],[-9.611397,3.692373,2.116254,-7.760388,5.871096,-2.001560,-7.158611,-5.767788,9.586188,4.989400],[0.603115,4.878434,8.351033,-8.765578,-8.003594,-9.302026,-3.405325,2.829462,-4.954004,5.161670],[-0.885629,9.859040,-5.654831,3.742944,-3.766967,3.141336,9.245429,1.689967,-5.848783,-6.702526],[2.049760,3.755086,-1.500454,9.975219,-7.028663,-5.100216,-8.035214,7.407868,-5.874571,-5.223043],[8.604837,-0.931457,-1.986989,-6.911336,-3.113233,-8.771851,2.894574,5.263734,-6.815133,-2.663398],[3.290650,8.885652,-4.956819,-0.666586,7.391484,1.586505,-8.392533,6.327966,4.218668,0.552231],[2.538389,5.095250,3.378640,-2.171688,1.180036,-9.074790,-2.739571,9.563498,-2.096003,1.959839],[-3.745777,6.183285,-7.293505,-1.575624,-2.663329,0.606665,9.387791,-6.522398,-7.995257,-6.838346],[8.518930,-4.750495,-7.731892,-3.518798,-7.371740,1.201959,-0.029945,4.301791,7.143438,-7.831544],[-9.442465,8.665556,6.107840,-9.110698,2.495830,4.853767,-4.923396,-6.670770,4.250302,9.240914],[-9.015001,2.715160,4.262997,4.450445,-7.746783,-6.245295,-7.692473,-4.185203,4.824894,2.660805],[7.253649,3.277859,-2.540296,-8.711316,-3.197720,1.623252,-6.930164,7.097062,-4.754689,3.783114],[4.279826,5.435421,6.153978,9.863439,-4.312344,3.832272,7.064994,5.320605,-7.849767,-5.769235],[-5.322717,0.212464,-2.154961,-2.340751,-3.121364,6.407330,-9.350740,0.559671,-5.463176,-8.229561],[9.850389,-6.426301,7.718741,-5.144774,5.022571,-6.156458,2.345697,2.832449,7.310726,-8.599002],[2.564992,4.783419,-9.502078,6.590535,8.117795,3.757841,-5.083404,8.013129,-2.481104,9.587375],[-2.423229,0.327513,-1.708042,4.370314,-0.844466,9.176445,7.252179,2.210440,8.146356,-1.375553],[9.718765,1.174125,8.796496,6.667563,-0.367761,-3.501709,-3.412678,-7.592508,-6.226109,-2.883044],[6.879040,-3.350143,-5.502808,-2.482949,-9.628502,-8.560781,7.523748,5.632780,2.126924,-6.563095],[-7.022895,-1.237834,-5.800114,1.293970,6.456584,2.149705,0.121179,3.729735,-0.832280,1.383785],[0.262185,-2.680284,8.453485,1.024106,-9.535298,-1.732209,-4.107758,5.690430,-7.587230,6.701896],[8.859405,-3.997549,-7.294835,-3.560633,-1.716648,-8.334986,-3.099329,-0.864158,-7.077679,-4.531104],[1.584438,0.930562,1.844952,-8.151142,6.989456,1.954434,-2.598376,1.861570,-4.771989,5.176892],[4.082178,-3.502780,-9.975087,6.129475,-7.899222,6.980938,5.839463,-7.806184,-1.691429,-2.841712],[-1.575284,-2.538218,6.996903,-2.330060,5.473654,-1.509281,7.459448,-4.970975,1.559492,-7.979552],[2.600686,0.894032,8.612377,-7.096727,-4.609420,6.589273,-0.482613,-5.491073,-5.880194,7.595481],[-5.638313,-6.773297,-2.905298,-1.431754,1.298051,-1.711815,-6.681796,5.125328,8.959557,2.823771],[-5.641394,-9.823279,-7.267500,-4.237357,9.515323,1.660624,-4.340538,3.279224,-0.847117,-7.166140],[5.124895,5.907846,5.143932,7.981489,-6.901934,-1.178068,2.118885,7.132224,6.832773,-6.090008],[-2.999589,8.172705,-5.828326,8.240921,-3.941726,-4.418652,-7.986725,5.909436,-3.846942,-3.699927],[-3.219524,9.611555,-3.188662,4.582440,-4.607282,-8.630389,0.174143,9.869144,8.990776,0.188508],[2.546913,8.264812,3.567220,1.337710,8.242632,-5.946069,-3.100600,9.760768,-0.751395,9.782997],[8.462532,1.681705,9.152673,-9.004586,-7.579999,-3.697319,8.026381,9.278273,-9.628806,-2.639965],[2.801068,6.650045,-3.470181,-4.199003,-0.809524,3.745428,4.380637,-6.959429,-5.513822,0.284478],[-4.603628,-5.378043,7.819122,-5.058789,-2.295672,6.689448,5.920981,2.369094,-7.863457,3.609398],[4.439349,-1.044398,7.740827,0.439556,8.666046,-9.549052,-0.265448,0.716647,4.386039,-3.305961],[-6.335507,6.651420,-4.297057,6.501453,-1.112389,4.303317,9.071628,-1.283126,2.619495,-8.165113],[4.346369,-5.088726,6.096447,5.178491,-0.843706,-7.796485,-8.528417,-8.650075,5.494849,1.051084],[-3.795037,1.252574,-3.650678,7.666394,-8.514796,-4.462095,-3.715103,7.924816,-6.838219,-5.663089],[-4.961202,9.127433,-8.386478,-8.492198,9.387049,4.861138,-2.649823,5.454169,5.130258,-4.798393],[0.431975,1.614043,-0.014946,1.190198,2.032407,3.468626,9.702211,-7.100129,-8.821575,9.539530],[-2.464796,-9.737115,2.657158,0.411080,-1.021437,-6.105222,-0.995031,1.962307,3.397284,0.885300],[1.322525,-6.235840,0.930626,-8.765189,8.821246,3.036045,9.069666,4.859344,-8.341417,1.295616],[-9.309453,-3.941240,5.451047,3.585752,-2.842651,7.058811,6.364511,-0.933422,7.378909,9.327256],[-7.836111,-4.851807,-3.930546,8.387990,9.421821,6.859574,-0.868837,-9.629676,2.180301,-6.413879],[3.905765,3.757107,-8.250692,0.608463,4.242939,-9.363368,-4.171409,6.044775,-0.650629,1.741627],[8.945559,-1.432734,-2.769869,4.513020,-6.813026,7.584585,2.512217,4.466584,8.664867,7.442237],[6.244127,-4.070691,9.151373,-4.403429,-3.128570,2.476377,-5.588709,-1.146296,-6.679927,-6.888635],[8.328511,-2.791343,8.291135,-3.893769,8.768836,8.106156,-9.359126,-9.398443,1.223183,7.342112],[-6.479056,4.935222,-2.032480,9.120341,8.879772,-3.915179,5.533996,4.416553,-5.676527,3.823408],[-4.840953,-8.344429,8.398458,-0.621356,9.874468,-5.081310,-3.455349,-5.174783,4.937355,4.573570],[9.371400,-7.245682,1.032152,8.941158,0.770971,0.614210,9.810173,-5.622933,-9.610647,0.760177],[7.481471,2.206579,8.262683,-7.894252,9.925913,1.287280,1.909745,7.040426,-2.198033,-3.385641],[-1.487961,9.749716,6.094096,-2.668899,-3.377274,5.302360,3.074155,1.516775,-0.739855,-4.857037],[0.681313,5.624217,2.119780,1.308700,0.525292,0.456864,6.250535,-8.380210,5.441651,-0.793616],[-3.083815,2.089577,-7.886264,0.932323,-4.772955,-3.762173,3.038698,2.306540,0.376115,-5.453787],[-1.002117,-0.087780,-8.686110,9.847201,6.877495,3.127583,3.085220,5.058561,8.753638,4.167603],[-7.512558,-9.303055,4.259129,-6.663658,-1.412554,0.896495,2.857584,5.235251,-5.308379,0.740742],[-2.911091,-9.491628,6.254287,-4.771376,-9.031045,-2.858916,9.154702,-0.674117,-1.776865,0.304653],[-0.724355,-7.867749,-4.507021,7.641254,-5.105765,-2.914360,-8.741401,-8.613917,0.196356,-0.363585],[-8.129899,-4.764409,8.697695,-5.306042,-5.145325,3.337892,9.109109,-4.965174,8.048076,-7.306995],[-7.060595,-3.912979,8.047500,-1.693788,2.386306,-4.635021,4.893918,-2.191560,-2.982677,1.490954],[-0.260904,3.841947,-5.327290,-2.107503,7.074627,0.258037,6.734841,-9.401549,-4.591955,6.451038],[-8.474616,-6.892521,7.220466,-4.610685,3.627231,-0.001029,-6.258787,0.385509,7.344810,-1.464189],[7.738183,-1.712693,-7.826482,9.341292,0.016822,-5.283862,2.795121,7.684012,4.133572,-8.848161],[2.894097,0.508163,-1.994599,-2.109995,-0.852881,-4.499574,-8.257646,-2.967344,-5.472294,-9.747930],[3.674140,9.586122,5.270625,5.964820,-8.182563,1.509987,-6.040223,-0.106427,-3.944667,-6.265312],[6.937749,-8.812154,7.691717,-2.099244,-2.830433,0.795679,-1.305236,-5.924428,4.870873,-3.281191],[5.195329,-9.354734,-2.914471,-8.536099,3.165725,7.120380,-5.167947,3.585890,7.012612,7.837035],[-7.365341,9.994534,6.587496,-0.044120,8.793819,-1.933235,-7.503672,-0.060282,8.861619,8.611843],[3.115451,-7.388609,-3.218821,0.904505,4.914856,-0.389647,4.468635,-6.045872,5.864375,5.996007],[-6.250313,-5.886218,-8.117951,7.088952,5.613930,1.619835,-0.815894,-1.506362,2.140408,-3.924870],[-0.044261,-3.636960,-3.474788,-4.599383,9.781106,-5.586263,-9.886958,-0.661021,5.255601,-1.747663],[0.866660,8.867263,5.082838,-3.187944,2.560703,-3.481922,1.193293,7.060531,2.934869,-8.656951],[2.623248,-2.988794,8.912233,7.992051,3.540720,5.687730,2.257928,-0.284790,9.748334,4.699220],[2.987320,-7.768413,-2.419946,-7.816320,-3.343975,-3.062503,4.403622,5.037359,3.177104,3.196375],[-0.279250,1.460392,8.990449,7.454667,4.775167,4.001975,-5.642639,3.607724,1.675819,-9.195288],[-3.470914,0.951968,-8.154861,-3.631924,1.180399,-8.211351,6.467038,2.910350,0.525866,0.163633],[1.782503,8.803106,-8.008587,-4.805914,-0.081690,5.301377,9.275582,-6.613935,4.293988,-0.029053],[-5.573560,0.069568,-9.741913,-3.714113,4.975554,-0.986573,-9.709942,-4.945110,7.890091,-4.178516],[4.552433,-7.968919,-4.087067,-9.942516,-5.126512,5.978296,9.999103,-5.635936,3.974539,9.207752],[-8.508527,-3.296504,9.001771,8.992107,4.714291,-7.250028,-0.218048,-6.195693,2.825864,-4.393318],[8.515152,-0.493226,-1.416361,-9.373588,2.516094,-2.075041,-7.211734,-0.238852,2.816374,-7.592062],[0.616212,-8.846033,8.939143,1.830546,0.093974,-8.798201,9.129610,-0.096374,8.132642,4.197454],[-8.177496,-4.172104,-0.813426,8.943083,9.848936,7.501704,-6.588156,-6.989354,-6.156953,1.211300],[5.364182,-7.450416,-2.479472,8.488099,0.571120,1.399046,-9.798968,-3.871973,-3.110154,1.858276],[8.532107,6.588159,-0.832677,-7.376290,2.856114,-4.213635,3.120101,8.685423,4.361520,-0.955396],[1.818142,6.887382,8.100751,7.336481,7.360994,5.898935,2.247936,-3.708723,-2.655284,-0.297172],[-7.935211,1.299643,7.683438,-3.532180,7.400292,7.888934,-0.970180,-5.977330,5.880915,1.286376],[-4.300066,1.404458,1.969288,5.845335,-8.999341,8.168677,4.941955,4.405901,8.209588,8.112353],[-6.255569,-4.920266,3.365857,-1.731507,-1.203776,6.579166,4.487521,-4.769947,1.652444,-4.778980],[8.688107,-4.899937,-5.004115,6.745291,8.035297,-1.061301,2.515821,-4.043770,-9.670887,0.983543],[6.488973,8.655578,-9.146264,8.487374,-0.843000,4.729822,-1.813694,-1.693200,8.979260,-4.532135],[-6.117860,-0.231252,0.400002,5.051571,-3.856869,-1.228658,3.026047,-9.587513,8.394509,5.477086],[7.087652,0.602673,1.032942,0.889319,7.536369,0.823688,-5.106604,-1.988252,8.429969,8.553820],[-2.445458,8.806520,-4.053712,1.927310,9.124913,1.374914,-1.232314,-2.156183,-7.783040,-6.885039],[-4.766420,7.856591,-4.925432,-7.968986,5.004260,8.644075,-4.703921,-6.307468,-3.551046,-7.819216],[-0.805753,-6.075554,2.347285,-2.074696,-1.444336,1.107465,9.037812,-3.719995,-2.379551,8.035617],[-0.809136,-0.008063,0.053080,7.676796,-7.386854,7.934605,4.283894,5.247049,1.963194,-6.755069],[6.577368,-1.430072,1.012905,-8.813891,1.431609,5.102972,-9.443956,-9.203208,-4.147916,5.897603],[-5.845176,-0.471904,-4.750223,-9.275852,9.842107,-7.219516,-7.379069,0.572714,9.588187,-7.424359],[7.794818,-6.588903,6.773279,0.167941,0.013840,-4.055531,-2.021906,8.430614,9.655740,-9.372316],[1.084074,5.723072,9.030945,1.177239,-8.450346,4.298314,4.461502,0.252861,1.929381,1.742833],[0.175347,-3.771847,-7.561130,-8.765386,1.357781,-1.249266,8.909654,-6.040907,4.865352,7.839982],[6.705867,9.467872,2.326445,8.923886,-3.115849,4.555361,8.702261,4.509542,5.732493,6.659345],[-6.055504,7.868928,7.381240,-1.400889,7.202518,-5.867933,-3.676161,-7.938670,-7.675012,-5.183230]], dtype = "float64")#candidate|3271|(182, 10)|const|float64
bop_3272 = relay.greater_equal(const_3261.astype('bool'), relay.reshape(const_3271.astype('bool'), relay.shape_of(const_3261))) # shape=(182, 10)
output = relay.Tuple([call_3231,bop_3249,call_3260,bop_3272,])
output2 = relay.Tuple([call_3232,bop_3252,call_3262,bop_3272,])
func_3282 = relay.Function([], output)
mod['func_3282'] = func_3282
mod = relay.transform.InferType()(mod)
output = func_3282()
func_3283 = relay.Function([], output)
mutated_mod['func_3283'] = func_3283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2518_call = mod.get_global_var('func_2518')
func_2519_call = mutated_mod.get_global_var('func_2519')
call_3315 = relay.TupleGetItem(func_2518_call(), 0)
call_3316 = relay.TupleGetItem(func_2519_call(), 0)
output = relay.Tuple([call_3315,])
output2 = relay.Tuple([call_3316,])
func_3318 = relay.Function([], output)
mod['func_3318'] = func_3318
mod = relay.transform.InferType()(mod)
mutated_mod['func_3318'] = func_3318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3318_call = mutated_mod.get_global_var('func_3318')
call_3319 = func_3318_call()
output = call_3319
func_3320 = relay.Function([], output)
mutated_mod['func_3320'] = func_3320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1628_call = mod.get_global_var('func_1628')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_3404 = relay.TupleGetItem(func_1628_call(), 0)
call_3405 = relay.TupleGetItem(func_1630_call(), 0)
func_1511_call = mod.get_global_var('func_1511')
func_1514_call = mutated_mod.get_global_var('func_1514')
var_3416 = relay.var("var_3416", dtype = "float64", shape = ())#candidate|3416|()|var|float64
var_3417 = relay.var("var_3417", dtype = "float64", shape = (576,))#candidate|3417|(576,)|var|float64
call_3415 = relay.TupleGetItem(func_1511_call(relay.reshape(var_3416.astype('float64'), []), relay.reshape(var_3417.astype('float64'), [576,]), ), 1)
call_3418 = relay.TupleGetItem(func_1514_call(relay.reshape(var_3416.astype('float64'), []), relay.reshape(var_3417.astype('float64'), [576,]), ), 1)
bop_3426 = relay.add(call_3415.astype('float32'), relay.reshape(call_3404.astype('float32'), relay.shape_of(call_3415))) # shape=(2, 10, 8)
bop_3429 = relay.add(call_3418.astype('float32'), relay.reshape(call_3405.astype('float32'), relay.shape_of(call_3418))) # shape=(2, 10, 8)
output = relay.Tuple([var_3416,var_3417,bop_3426,])
output2 = relay.Tuple([var_3416,var_3417,bop_3429,])
func_3449 = relay.Function([var_3416,var_3417,], output)
mod['func_3449'] = func_3449
mod = relay.transform.InferType()(mod)
var_3450 = relay.var("var_3450", dtype = "float64", shape = ())#candidate|3450|()|var|float64
var_3451 = relay.var("var_3451", dtype = "float64", shape = (576,))#candidate|3451|(576,)|var|float64
output = func_3449(var_3450,var_3451,)
func_3452 = relay.Function([var_3450,var_3451,], output)
mutated_mod['func_3452'] = func_3452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3318_call = mod.get_global_var('func_3318')
func_3320_call = mutated_mod.get_global_var('func_3320')
call_3468 = relay.TupleGetItem(func_3318_call(), 0)
call_3469 = relay.TupleGetItem(func_3320_call(), 0)
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_3476 = func_1315_call()
call_3477 = func_1315_call()
bop_3490 = relay.floor_divide(call_3468.astype('float64'), relay.reshape(call_3476.astype('float64'), relay.shape_of(call_3468))) # shape=(2, 10, 8)
bop_3493 = relay.floor_divide(call_3469.astype('float64'), relay.reshape(call_3477.astype('float64'), relay.shape_of(call_3469))) # shape=(2, 10, 8)
func_1289_call = mod.get_global_var('func_1289')
func_1290_call = mutated_mod.get_global_var('func_1290')
call_3496 = relay.TupleGetItem(func_1289_call(), 0)
call_3497 = relay.TupleGetItem(func_1290_call(), 0)
uop_3500 = relay.asinh(call_3468.astype('float64')) # shape=(2, 10, 8)
uop_3502 = relay.asinh(call_3469.astype('float64')) # shape=(2, 10, 8)
output = relay.Tuple([bop_3490,call_3496,uop_3500,])
output2 = relay.Tuple([bop_3493,call_3497,uop_3502,])
func_3509 = relay.Function([], output)
mod['func_3509'] = func_3509
mod = relay.transform.InferType()(mod)
output = func_3509()
func_3510 = relay.Function([], output)
mutated_mod['func_3510'] = func_3510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1317_call = mutated_mod.get_global_var('func_1317')
call_3537 = func_1315_call()
call_3538 = func_1315_call()
func_3509_call = mod.get_global_var('func_3509')
func_3510_call = mutated_mod.get_global_var('func_3510')
call_3559 = relay.TupleGetItem(func_3509_call(), 1)
call_3560 = relay.TupleGetItem(func_3510_call(), 1)
func_84_call = mod.get_global_var('func_84')
func_87_call = mutated_mod.get_global_var('func_87')
call_3562 = relay.TupleGetItem(func_84_call(relay.reshape(call_3559.astype('bool'), [2, 10, 8]), relay.reshape(call_3559.astype('bool'), [2, 10, 8]), ), 1)
call_3563 = relay.TupleGetItem(func_87_call(relay.reshape(call_3559.astype('bool'), [2, 10, 8]), relay.reshape(call_3559.astype('bool'), [2, 10, 8]), ), 1)
func_1628_call = mod.get_global_var('func_1628')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_3569 = relay.TupleGetItem(func_1628_call(), 0)
call_3570 = relay.TupleGetItem(func_1630_call(), 0)
func_2500_call = mod.get_global_var('func_2500')
func_2502_call = mutated_mod.get_global_var('func_2502')
const_3573 = relay.const([-3.811810,9.443443,-9.270917,-4.860340,7.804542,2.343700,-0.282980,-4.711573,-5.393440,2.694048,1.589981,-6.207194,3.115551,-6.077942,-5.490872,9.990531,-6.680376,-1.779579,6.790964,2.443720,-9.291037,-1.425489,-7.733254,-0.304425,6.045991,9.956503,-6.227680,-6.536971,-1.939737,-9.597412,-9.261080,6.502041,0.134258,8.691689,8.326609,8.832323,5.146618,-2.661241,-9.039131,-1.645943,-0.906252,-1.973489,-7.506915,-7.392360,3.874314,8.037436,2.358631,-5.841312,-3.570285,3.840801,-9.838749,-2.223095,9.688259,8.598380,7.015245,6.365625,6.494023,-9.227806,-2.446319,2.206496,4.325886,0.107455,7.581974,5.297455,2.015751,4.294548,0.095481,-3.436603,-9.464576,-2.497028,2.806803,5.455384,8.731469,-8.983163,3.510836,9.548927,-0.649163,4.210002,-5.553527,-1.981201,4.600919,-6.985896,0.578274,4.263062,-7.358460,5.245666,2.510641,0.547811,-6.365930,-7.679082,4.192853,-9.878813,-7.492006,0.300935,2.756905,6.000558,-3.171485,8.671427,-3.500193,0.361436,1.066777,-8.337093,-8.342033,6.000371,-6.100782,-6.214031,-3.528632,0.972280,-2.272697,6.044850,-5.768131,-9.442615,-0.302315,-6.045880,4.057194,-1.339216,-6.914085,7.074938,-8.968205,2.415126,3.810593,-9.362387,8.463993,-7.825161,-5.793516,9.218842,-8.023859,4.179472,5.970248,2.107352,-4.936663,5.267550,2.847695,6.250104,-4.215076,-7.692649,-6.051374,7.526615,-8.314905,7.580304,5.188239,-4.203460,-9.735422,5.763990,9.430264,-7.485548,-8.533642,5.989599,3.756408,7.104268,4.039211,9.883135,-1.799888,5.712541,-5.850487,5.268756,0.512897,-9.686732,-3.695734,-4.575781,-4.104222,8.095115,-5.408478,-7.914321,6.557255,7.028638,6.838405,-5.379604,1.201295,6.081452,-2.938758,-6.119888,-0.031843,5.060853,-4.040862,-5.040496,0.148428,4.742933,-8.139468,0.950908,5.295163,6.579314,9.659334,-8.257481,3.298189,-7.456482,-5.214678,-8.864775,3.958106,7.424975,5.908843,7.031569,3.604353,-5.151656,-6.161118,7.342790,4.634595,7.286604,-1.397004,3.297764,0.075734,7.466511,-8.014886,-2.095989,-6.754397,1.815961,5.955930,-6.472876,5.107656,6.094883,-8.503522,9.150222,2.469073,-1.960195,-2.131151,2.342338,0.070420,-2.696009,-4.545656,-4.501439,-7.103522,-3.500225,-2.049505,1.511361,-0.849704,4.910197,1.289176,-0.491705,6.261305,8.863172,-6.721604,4.894525,1.483958,-5.155577,-0.927215,-8.642818,-2.738388,6.211521,4.111102,9.010812,3.757850,-4.448735,4.086820,3.740995,4.025182,1.288219,1.804470,-8.508241,-7.780735,3.106708,6.050272,7.139814,-8.021180,-3.331012,3.371161,5.687051,-7.776095,-7.116947,-4.379917,3.749788,-4.590617,-2.145058,1.375868,-3.082049,4.044443,4.672681,-9.284607,-9.406877,6.974399,-1.792274,-4.821276,1.335474,-1.383283,0.812237,8.978491,-4.609875,3.610723,4.016331,7.447860,-3.749737,8.740326,4.706030,-0.385801,7.420853,-5.003372,2.701187,8.828455,-4.511200,-6.017851,2.482015,-9.821726,6.341170,-8.095447,-8.445931,-9.800283,-5.136444,-4.243529,0.126741,3.619709,-5.707871,6.701690,0.475158,-8.080618,-4.324020,9.291222,-8.983798,4.437200,2.266812,2.291932,-3.791863,-8.469188,7.991324,-1.692796,9.396455,3.405511,-6.047779,0.316594,-2.393492,8.639103,-9.076651,-9.079383,-9.865595,-4.925729,8.876860,4.828357,-9.399764,-0.836756,8.455595,-2.881422,-3.024002,-5.316477,-7.194052,-8.874218,-4.947890,0.543237,-6.247899,3.065108,-1.106171,-1.317562,9.171933,9.561080,1.010514,-6.917076,-1.097952,-7.502245,-4.804035,1.507200,-5.484140,2.208908,4.547764,-8.229422,-9.426238,-9.642342,3.679613,-5.249476,3.069504,-1.961885,3.874960,3.168908,-5.861188,9.648278,-3.930858,1.734175,-1.500804,0.093079,-5.393344,-2.146488,-7.557117,4.652985,6.812710,-4.482585,7.235107,-2.460133,6.683738,-0.433231,0.985878,6.100132,0.804203,-7.955780,6.232590,8.841390,4.888172,7.884138,5.455412,-0.010935,-5.515121,6.632882,2.945511,1.729932,4.713472,-8.798307,9.865624,-3.171309,6.241369,-2.756629,4.155091,-8.184652,2.235167,-6.016653,-3.951229,-0.220706,3.217609,-9.162893,5.176116,-0.218031,5.606559,7.735436,-4.919927,8.099992,-2.564655,-7.684170,-8.762209,9.625123,-1.018994,-9.965927,-3.797192,-8.432970,-3.617065,-5.782969,-9.181504,-5.060829,-2.013723,-6.641678,2.681855,-8.775423,6.974336,1.631019,4.115383,-5.747232,-3.704827,-4.721677,3.879842,1.513829,6.177116,4.246107,-6.823137,1.151219,3.317379,6.842215,-3.067106,-9.233101,-6.419835,7.195593,-8.143682,-6.723331,-4.161448,9.373569,8.356515,6.899211,1.357766,-5.519475,-1.488932,-4.055224,0.018009,-2.129728,9.774470,5.120328,2.645508,0.676548,-2.448727,-2.981106,-2.629920,-1.779199,-9.662630,-4.583971,-6.337417,1.931858,-5.603555,-0.376587,2.368957,5.537699,-5.873081,4.381440,4.847929,4.664158,-9.523189,-8.585403,-2.804898,-4.210897,-3.207116,-4.551259,2.369210,3.291770,2.477732,3.374186,4.726173,6.008346,0.323189,1.585388,3.370109,1.769711,-2.619821,-5.600464,-9.797122,-4.986624,8.458479,-6.807974,-5.676988,-8.423120,8.414983,0.751289,4.894913,-6.510506,9.932849,1.796885,5.257899,-6.727591,5.174541,-8.869001,1.239218,-2.358548,2.017202,6.416663,5.938494,2.687143,7.716566,0.460086,5.522906,1.371024,2.498650,0.501352,9.544688,-5.542089,-3.692274,5.067122,8.918103,-9.829681,-5.296631,0.634240,3.722925,-1.161550,7.800656,9.490065,-4.314671,6.202272,-6.843002,-2.116170,-7.076562,-5.838308,7.072604,-3.746726,4.825525,4.019684,-8.460850,0.283719,9.894869,-1.506138,5.794762,0.590950,-0.303618,2.090291,2.773289,4.737629,1.735823,-2.095126,6.279079,3.978017,8.939804,-3.510213,9.959093,3.423699,6.178126,2.482214,-7.578841,-3.655615,0.713385,5.937986,4.086408,-0.473162,-4.397269,3.682716,3.933317,-9.160478,3.379353,-7.233875,2.532236,1.406461,8.366657,9.175150,1.778986,2.504234,-8.017565,4.484744,7.217479,-5.011513,-8.983315,4.518547,-5.609398,-8.466009,-0.066260,4.523309,5.878152,-3.366345,9.251036,-8.581758,-7.410272,-5.940154,-3.346775,-6.976625,3.270735,9.030140,3.944590,-5.269167,-5.349954,0.087612,0.499826,-8.787016,-1.033080,-4.829329,7.854872,-8.817875,-2.113421,-1.513380,3.659211,-3.258619,1.091259,-7.744527,-3.006834,-7.545059,-1.072088,0.777793,-9.246686,-4.408866,-8.248820,0.338971,3.965043,0.227814,-9.122744,-6.087014,6.786821,-2.383272,-8.988841,8.357778,0.439947,2.236313,1.812266,-0.647363,9.883656,-2.955404,0.293698,4.695697,-5.178210,-2.505680,-5.815127,-0.269739,4.613210,-1.894786,5.769360,-1.186020,9.889460,-0.745538,-2.276770,6.934274,6.400768,9.126734,7.326368,4.963988,-2.785512,-3.930376,-9.496022,-9.872626,9.148286,5.967756,-4.651992,-2.608456,-0.431264,-1.722608,0.872544,-9.120769,-4.004609,8.306417,-1.324793,8.975615,-0.304832,2.702004,-1.907188,-9.857629,-7.197802,-4.210570,3.479387,-9.871524,-9.718995,-2.132327,-2.551382,-9.396024,-4.188700,-2.928963,2.191838,4.471879,6.138069,-3.123451,-2.021217,-6.784452,3.318048,3.406103,3.544505,-8.237748,3.106123,7.934426,7.420349,-4.658476,2.304119,-7.445385,-1.458385,-9.171584,-0.739167,1.998123,9.487801,8.266687,-2.198293,5.806757,-4.693160,5.253993,-0.083036,-6.531330,7.500443,5.607066,4.768867,9.262787,-8.001141,-7.397507,-2.285366,2.312201,9.014711,-1.135503,-7.710254,6.041021,1.775402,-5.578371,1.412173,0.673632,6.715637,4.753311,-3.140711,-6.789575,-3.646749,7.097103,-8.907061,-4.632931,8.354638,2.694497,-6.175242,9.344421,-1.537384,7.007340,-5.773364,-6.328159,0.992889,-7.016895,-9.993793,-1.309679,0.489626,1.220079,8.962809,6.095404,9.426928,-1.505553,1.475424,5.705850,6.787475,8.554879,-5.174223,9.146604,7.927860,8.012221,-6.203256,-7.873685,-2.714911,9.090869,1.239235,-5.148845,7.264595,-1.630395,-8.836588,-3.968176,-0.238228,5.929514,1.156600,7.106255,6.899757,-0.421426,-5.203136,1.840901,4.320067,-0.182091,-0.003932,4.109598,4.367087,-4.707031,1.925447,7.058693,1.032914,-0.529147,5.878591,6.187465,8.918979,-2.431502,7.494313,-0.459055,-3.287089,7.195330,9.930383,4.533058,4.324690,2.553198,-3.496486,-2.141740,7.307080,6.065264,-5.013401,7.820167,-6.263936,-0.009468,-3.653636,-7.622076,6.846298,9.200343,-3.800571,-1.067166,-1.393196,1.011761,-6.617097,-2.589785,-4.757337,8.507149,0.687045,-9.848589,-8.292459,0.567605,8.471086,-4.695896,6.843797,-9.619610,-9.401804,1.979968,-3.808668,4.476524,9.109932,-8.113926,7.146636,-1.100755,2.160495,1.487368,0.531442,-5.077586,-3.787417,-8.867458,-3.422101,-4.440876,5.065028,6.750015,-7.518188,-6.697317,3.288525,3.054141,-1.701015,3.928338,3.506404,-8.381046,6.221479,4.755785,5.473941,7.905593,-9.941823,-6.913116,-8.957223,1.405318,-9.379599,-6.923156,6.080494,2.966839,1.499196,5.740797,0.056593,-7.627487,-0.192226,-5.406343,2.707767,0.818156,4.316485,7.070204,4.795687,-7.693125,-8.837539,4.480625,5.453410,-1.297051,2.552120,0.144221,6.624909,6.955148,8.719873,6.045211,-2.878724,0.478036,-0.728795,5.649311,0.887061,0.010613,-1.484808,7.834852,5.526854,-7.889108,6.487429,3.296935,7.177308,-7.382746,9.405096,4.994411,-4.850018,1.651832,6.588950,4.587200,5.680108,6.436542,0.425482,0.294084,-2.647696,-5.220975,9.442495,-5.254815,-8.643884,3.450092,-2.837341,4.523225,1.682515,0.375987,9.189887,-6.270603,3.504052,-2.695961,-0.415462,-5.004232,-3.087087,5.776564,-7.395534,-4.480358,-3.549000,-8.818241,4.903119,-4.639866,5.155814,9.313954,-8.826361,5.379231,2.839675,-3.782848,3.151933,-8.980899,4.468591,3.977877,7.819098,6.287197,0.612523,-5.875170,7.442762,-6.629516,-8.299296,-1.642901,8.075854,7.401720,0.964911,-5.601306,-5.480840,-6.218043,-5.876994,1.150921,-4.502276,-7.373960,0.502833,-8.717133,6.611770,9.679237,-9.405414,-8.693306,4.485798,1.912255,1.718898,9.312209,-5.364976,-1.989128,4.826326,5.495508,-1.296573,1.744373,-6.189278,-3.331223,-8.923259,-0.328889,4.221270,-9.146838,-0.882965,-4.899010,-6.363898,4.862175,2.549945,3.114356,5.700966,-1.695818,-7.989095,5.499803,1.728402,-9.395799,2.335016,9.380943,6.632419,7.987730,3.960969,-2.898568,4.711913,-0.495005,4.261107,4.508589,-4.381098,-0.226172,-9.935567,-3.890181,1.775938,5.341651,9.035654,-4.731857,7.987185,-7.202116,0.497355,-4.371941,-2.741664,1.484035,-8.753855,-5.045000,2.117621,-1.908485,0.640937,4.453226,8.977699,4.141435,9.865444,-9.482826,-0.156321,5.445343,4.381001,-6.895470,1.526173,6.704425,8.611843,-4.065368,-6.022815,-5.224960,1.091873,-8.315574,-3.393054,8.149978,3.494130,-6.897778,-5.968360,6.405441,5.337179,2.833229,-0.107707,5.974862,0.268276,-1.261166,-5.252756,0.349581,-4.800475,-9.901421,3.991651,5.781693,3.344023,-7.957949,0.741588,6.152721,-7.890816,2.737875,0.525782,-8.609895,5.771753,-5.604780,9.146120,2.432987,-9.617147,-8.221025,-0.644103,-1.479364,-3.630717,2.152315,9.963652,-8.200963,-6.055109,-4.114709,-2.494408,-9.244353,0.189604,9.667351,-0.243257,-2.700518,7.006500,-2.252157,-7.573897,2.024807,-2.964009,6.961555,-8.363177,2.607857,2.614616,-7.550881,-1.407494,1.302690,-2.048526,-0.452393,-2.962431,2.081341,0.622743,1.138370,-8.160824,-2.388669,4.722079,-5.504414,-8.366118,-3.694776,3.265876,2.072490,8.667336,7.982490,-6.245924,-7.113109,7.580160,-3.226090,-2.298528,-4.141968,-0.894137,9.625817,-3.404846,1.601083,8.818625,2.734959,0.616576,-6.599494,9.620129,-6.043870,0.680445,-5.006377,-4.769565,9.757793,-4.086730,5.386171,1.502669,1.812900,5.678887,-3.197496,-6.460273,1.682610,-8.218662,1.086960,-2.872478,1.469003,-5.169490,-1.403455,-7.692269,7.952522,8.329148,-6.788809,6.680038,2.559542,-0.486947,3.717671,3.776375,-2.204792,-3.037851,5.643318,9.592643,-3.489027,3.868888,-5.243087,3.144833,-2.478987,2.629657,1.406877,-1.924258,9.480081,-7.471154,-2.971460,9.809546,6.838495,-2.804257,-7.845852,-5.136725,8.729678,6.775977,8.248561,-6.482365,-8.576658,-5.320777,-6.748302,-9.206662,-7.960142,0.595746,-7.406125,7.005947,-8.617201,-5.422273,-1.770988,-3.369821,-6.787469,4.159289,-1.799921,-2.574711,1.336269,-6.417883,2.041491,9.259496,8.403034,-6.966467,-2.817456,9.442749,0.011310,1.947078,-3.758829,-5.259302,-8.550088,0.198752,5.777839,7.758288,-7.022690,-6.427708,-7.876790,6.189092,-2.171551,8.887398,-8.916058,-4.665593,-0.757687,7.569717,4.644637,-8.039350,4.837697,-0.410951,1.763535,-4.944815,0.549867,0.975735,-2.286056,5.414292,4.496280,0.703644,2.400354,4.260784,-8.289460,7.364558,-4.264197,4.227388,0.471069,-5.130928,5.755098,-3.345647,-2.846934,-9.009711,6.197617,7.680194,-7.178062,-4.301454,-3.173620,2.656753,-7.802925,-6.248899,-0.641461,-4.348466,4.031271,-4.972168,2.617432,4.685105,3.732332,9.300587,2.871287,4.214980,1.884390,-6.307371,6.565719,-1.579650,-5.420696,5.824448,-7.788863,-2.113446,-2.973367,-2.085364,6.430206,3.721669,2.694682,0.079276,-5.145113,-5.119889,-2.470170,0.681476,8.250333,7.155595,4.227883,-7.643485,1.521855,1.130900,-3.868992,3.372063,-6.842451,-5.941902,3.218216,-2.815729,-1.513362,-0.472864,3.189258,-2.643927,4.374271,-9.996014,-6.888432,2.144551,7.327327,-4.230587,-5.340420,-1.517902,-8.619934,2.040382,-2.665269,9.872398,-8.103822,-8.719254,-7.349258,-1.201422,-4.910525,-9.104920,-6.975935,-3.832226,-9.376757,1.001565,8.000945,5.730347,-4.054422,5.457185,7.469817,6.681106,-9.691707,1.746602,-1.276531,7.199992,4.733813,-0.136858,3.016124,7.853374,0.638794,-1.628685,-6.977800,-1.830039,-6.088965,-8.168106,7.940990,-0.714455,7.728989,-5.858703,2.142089,-0.090575,9.660413,-3.943651,-4.066676,-5.984701,-0.481363,-2.308021,3.786847,9.093594,-6.651867,7.614232,1.445248,-6.763394,6.284670,9.454972,-4.090385,7.997081,-3.106771,-3.388684,-9.377049,-1.792266,4.044376,7.819355,3.770246,9.977037,-6.589283,5.180608,-8.652902,-5.446341,-4.649163,-4.453177,-2.655902,-3.641345,-0.934362,7.862892,-1.324641,2.862807,-9.047760,-5.611577,-6.566492,3.974290,-0.696786,-9.450544,-1.163011,-2.146370,-2.634966,4.019580,7.587583,5.969838,-0.570203,-6.184668,-7.086635,7.451659,-4.245540,4.006908,1.865623,-7.122953,2.036936,-6.060072,8.162336,6.480135,8.142834,-9.287584,-4.357912,-4.625816,-8.301307,5.343325,7.453935,8.333772,-7.251510,-2.375138,-8.958445,1.559663,1.158308,8.181747,4.066325,5.777627,-0.401751,4.098221,4.329254,4.454765,-1.515313,9.775002,5.002317,3.926628,0.080128,8.589593,-5.394807,4.433143,-2.421761,1.599742,8.701985,9.103560,-2.340389,5.558939,-7.764341,-7.981744,5.027132,-0.003969,-1.481291,9.312501,4.901158,1.059570,9.671993,-7.674504,-1.609871,8.042176,-4.192850,2.394160,5.007769,-4.753045,7.587469,-3.758777,-4.582090,-6.040458,1.344161,-7.297273,-4.862405,-1.469873,3.239989,-3.468135,-3.063748,7.626250,-3.929129,-4.413911,5.459170,2.744492,0.360373,-1.138557,6.369875,-4.022673,-2.537469,7.760758,6.645198,-8.742017,-0.641696,-4.410206,9.962152,7.425744,-0.568299,0.911645,1.021581,-9.456933,3.543905,-9.583840,6.709967,6.232188,-8.753440,8.169430,-1.806168,-4.758275,-8.903998,-1.051854,-0.638997,8.889921,5.535687,1.056419,4.220998,3.945693,-4.227507,1.973539,-3.982974,6.673921,-0.014552,-9.942917,-0.190612,1.101598,2.499764,-3.505817,-0.728500,-9.912216,3.435605,-0.246937,-4.534448,4.050254,3.867598,-5.874249,6.037871,-9.117499,-3.370793,-2.810191,0.117675,5.316217,0.519903,3.940401,8.893036,4.480538,5.011543,-3.123461,2.524611,-2.908653,-6.383967,9.251288,-8.554469,2.588506,-6.981815,8.063391,-0.630201,5.903887,2.960018,6.680537,-2.606876,9.951786,-5.708981,1.988991,1.662236,-1.000412,9.439434,1.334432,-0.164716,-1.758206,-4.250709,-8.412716,4.382486,9.306466,-9.754130,9.420500,2.034178,-6.484283,-0.309272,-6.485697,7.854205,-7.906491,-1.506571,-1.472896,-7.823988,6.576423,8.768799,9.703541,0.797447,7.926447,3.067662,4.937144,3.094667,-8.284956,1.734077,0.680501,-2.365893,7.517597,6.452974,4.286137,8.097705,-7.772526,-1.963944,9.641326,-0.626665,-6.596216,3.766690,2.534474,6.664492,8.362202,-0.199148,-2.027660,-0.314828,9.161782,6.505118,9.571610,5.503549,3.956023,-8.592287,-1.887072,6.302529,-9.238137,-6.963031,7.380460,-2.782523,-7.268272,8.709581,2.681734,6.217618,7.750086,0.053095,5.728198,8.669937,-1.780846,6.175864,-3.008876,6.522621,0.877963,-1.608416,-4.809360,8.596578,7.322152,0.634965,-5.344641,3.838898,3.832624,4.515611,-4.955213,-2.261256,-8.649746,4.527080,-8.652479,7.584124,-2.563306,1.030083,-5.012559,2.388747,0.714857,-7.508150,3.329259,-0.872087,-2.551295,5.825822,-0.385036,-9.414160,0.323564,0.086140,-7.398328,-0.877433,7.759689,5.579242,-8.171009,2.718236,0.114375,-2.756991,-5.398050,-7.738770,-7.990963,4.390180,4.687872,0.784700,2.006324,-2.847888,7.201511,-1.306433,-0.634885,5.744126,-5.751278,1.115505,-8.679078,8.589323,-7.542489,-7.927017,2.786942,5.450065,0.966646,-6.061599,4.694779,-8.860093,5.801581,9.461476,6.622255,-9.532165,-2.440746,0.034692,3.882258,0.010038,-7.336412,-9.900241,0.040149,-6.159811,-3.638139,2.437460,-2.477279,4.521658,-7.105986,3.511688,8.951233,5.621771,2.221312,-4.022384,1.423993,-9.475505,6.963885,-0.869739,-6.234181,0.127900,6.054984,2.507719,3.116122,0.703638,7.999579,5.338281,-0.363190,-9.565801,6.397361,8.783958,-9.067903,2.465267,-6.164583,-8.061013,-1.135183,-2.249514,-1.427352,5.986924,-2.560123,0.973079,-3.960573,-2.192621,-4.487790,-4.429898,7.881564,-5.450305,-8.108194,-7.992548,4.147219,1.933424,-4.365436,5.449995,2.785827,-6.831014,1.496410,-6.504042,-3.758881,9.676037,0.782372,7.887296,6.946025,0.359155,4.014162,-9.870619,-7.677180,-1.975190,0.976973,-2.146520,4.566239,-2.067573,-1.479673,-2.064978,2.114593,8.570619,4.139543,-1.682211,8.792225,-0.456746,8.435552,4.447572,9.155660,-7.653610,-4.398280,1.300701,-4.611614,-9.540986,-5.738804,0.038796,-5.066954,5.917530,7.686573,-0.950387,7.170397,7.891244,-4.713162,-2.276337,5.348202,-5.630069,6.940574,1.669559,-2.230250,2.561643,-8.960001,-9.094982,4.874112,-2.194107,8.629917,0.370875,-3.931705,4.337198,-7.472979,-0.860395,1.955607,9.090680,-3.316374,-5.576935,-1.691503], dtype = "float64")#candidate|3573|(1820,)|const|float64
call_3572 = relay.TupleGetItem(func_2500_call(relay.reshape(const_3573.astype('float64'), [14, 13, 10])), 1)
call_3574 = relay.TupleGetItem(func_2502_call(relay.reshape(const_3573.astype('float64'), [14, 13, 10])), 1)
func_1464_call = mod.get_global_var('func_1464')
func_1466_call = mutated_mod.get_global_var('func_1466')
const_3577 = relay.const([10,-1,-4,-6,9,9,-6,-5,-1,-5,-6,-3,-7,-8,5,-9,9,1,-1,2,-8,7,-7,4,1,-3,8,-5,5,8,-1,8,-7,5,-7,7,9,9,8,4,-3,-6,4,-6,7,10,10,-9,-6,6,-1,-9,7,-6,1,4,-6,-5,-4,-1,6,8,-9,7,-1,-9,4,-5,-5,-5,1,-10,-2,9,-7,-6,2,-3,2,6,-10,6,-4,6,1,6,1,-1,1,8,2,3,1,-7,-3,-6,10,9,-4,1,-6,-7,3,9,-2,1,2,-10,-9,4,9,-7,4,1,2,-1,-9,5,-10,7,1,8,2,-6,2,-5,2,8,-9,-3,-2,-1,-5,-4,-3,9,-9,-9,4,5,7,-8,1,4,6,-3,2,-1,2,-3,6,-1,10,9,-7,-3,2,1,7,5,3,-4,-4,3,10,-3,2,1,-5,-8,-5,-7,2,2,5,5,-9,-2,-3,1,3,-8,-1,6,1,10,-5,-5,-5,8,-6,8,1,-8,-7,8,6,-4,8,3,-6,-7,10,-9,1,-6,10,2,-6,-8,3,2,3,-6,-7,-2,4,5,-1,10,2,9,-10,5,-3,-10,8,-8,9,2,5,-1,3,-4,10,6,-9,-4,-8,-6,2,1,-7,1,-3,4,-4,6,8,-4,1,2,7,-1,-5,-9,-5,6,-9,10,9,7,-8,3,-10,-6,-6,-3,4,-9,-4,-7,9,3,-10,10,-8,5,10,1,4,3,4,5,3,-9,4,-8,-9,3,-5,-1,9,-8,-5,-9,6,10,-1,2,-1,-2,6,10,-2,-7,3,1,-5,1,10,10,3,10,9,9,-10,6,1,-1,8,-10,-5,3,10,1,-5,5,-5,1,4,3,-10,-10,-7,-4,9,6,-4,8,-4,-1,-4,-6,-1,2,-8,9,-5,1,-2,-7,-6,8,1,-4,-7,-5,-1,-9,-1,-8,-7,8,-8,4,-1,-4,3,9,-8,-2,-7,-5,9,1,-4,-8,5,-2,5,4,8,-5,2,6,8,-4,-2,-5,4,8,6,8,2,-6,-10,4,-2,9,-4,1,-1,-9,7,-4,2,8,10,1,8,10,2,5,3,-6,-7,1,6,-2,3,-2,10,5,6,3,-5,-3,8,-9,-2,-8,-3,-8,8,-10,6,8,-1,-7,8,2,-6,10,-3,-3,-5,-3,-9,-9,-10,7,-2,5,7,2,-3,-1,-1,3,4,-8,-8,-9,-1,3,7,1,-5,3,-10,1,1,-4,-5,-6,-2,7,-5,-6,-5,10,-9,3,9,7,-3,3,-2,-6,-4,7,-7,8,3,10,3,3,-3,7,2,-1,4,-9,-3,-5,-9,4,1,10,6,-3,2,-2,-10,-6,2,-5,3,5,1,2,-4,-10,10,8,-1,-6,7,-7,4,-9,-3,5,10,-2,9,5,-2,-6,-4,-8,-7,8,-10,-1,10,-3,4,-9,-5,9,4,-7,6,9,-10,-7,-1,9,1,8,-9,6,-8,-10,-5,6,1,-8,-9,-9,3,-5,2,-8,3,-6,-6,6,7,-8,6,-2,9,6,-4,-6,10,3,-5,-6,-6,1,-5,7,-6,2,1,7,-3,-6,7,-6,-3,-8,10,7,6,-10,-6,3,-2,-1,1,10,2,-3,-10,-5,-7,-1,9,-7,-7,-8,-1,-4,7,5,7,4,-3,-8,5,8,-8,-3,9,4,4,-9,-4,-8,-2,3,-8,9,-3,4,2,-9,3,9,-9,-7,6,10,3,-3,2,-2,-2,-2,8,2,-2,-10,3,4,-4,-7,-9,2,-6,4,-10,8,9,-8,10,7,-3,4,6,-1,2,-1,-4,2,-8,8,7,4,8,3,4,-9,-6,-4,-2,5,3,-5,-10,9,-5,10,4,8,-7,-7,10,9,-10,2,-8,-6,-4,-1,9,-6,8,-6,9,-2,2,7,-7,10,9,-9,-9,-1,-7,-1,2,-9,-3,-1,-9,-9,6,5,-2,1,8,-2,5,4,-4,8,-10,6,-2,-8,-4,3,4,-3,4,-10,4,-1,-3,-10,-8,5,-5,-5,-2,9,-9,3,-10,-10,10,9,1,-2,-5,-3,3,4,1,-7,10,8,-10,-3,-9,7,10,-3,7,5,-2,-6,-8,-4,-10,9,-9,-1,10,-9,6,6,1,-7,7,-10,-4,-3,-9,-9,-10,-2,7,-7,-9,4,4,1,1,6,4,6,-4,-8,6,5,8,-4,-3,4,9,5,-9,-1,-6,10,-2,-8,7,-9,-5,-10,2,-10,7,6,1,1,10,2,-8,-6,1,7,9,-5,-2,7,-1,8,-10,-5,-8,3,-10,-3,-9,1,10,10,-7,4,-1,5,8,1,-10,1,5,-5,8,7,7,-7,-7,-6,5,-6,-1,-10], dtype = "int32")#candidate|3577|(896,)|const|int32
call_3576 = relay.TupleGetItem(func_1464_call(relay.reshape(const_3577.astype('int32'), [16, 8, 7])), 1)
call_3578 = relay.TupleGetItem(func_1466_call(relay.reshape(const_3577.astype('int32'), [16, 8, 7])), 1)
uop_3579 = relay.exp(const_3577.astype('float64')) # shape=(896,)
func_1244_call = mod.get_global_var('func_1244')
func_1248_call = mutated_mod.get_global_var('func_1248')
const_3584 = relay.const(1.754759, dtype = "float64")#candidate|3584|()|const|float64
var_3585 = relay.var("var_3585", dtype = "float64", shape = (576,))#candidate|3585|(576,)|var|float64
call_3583 = func_1244_call(relay.reshape(const_3584.astype('float64'), []), relay.reshape(var_3585.astype('float64'), [4, 9, 16]), )
call_3586 = func_1244_call(relay.reshape(const_3584.astype('float64'), []), relay.reshape(var_3585.astype('float64'), [4, 9, 16]), )
func_3180_call = mod.get_global_var('func_3180')
func_3183_call = mutated_mod.get_global_var('func_3183')
var_3590 = relay.var("var_3590", dtype = "float32", shape = (1152,))#candidate|3590|(1152,)|var|float32
call_3589 = relay.TupleGetItem(func_3180_call(relay.reshape(var_3590.astype('float32'), [12, 6, 16]), relay.reshape(var_3590.astype('float32'), [12, 6, 16]), ), 0)
call_3591 = relay.TupleGetItem(func_3183_call(relay.reshape(var_3590.astype('float32'), [12, 6, 16]), relay.reshape(var_3590.astype('float32'), [12, 6, 16]), ), 0)
func_2284_call = mod.get_global_var('func_2284')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_3619 = relay.TupleGetItem(func_2284_call(), 0)
call_3620 = relay.TupleGetItem(func_2285_call(), 0)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_3630 = relay.TupleGetItem(func_1693_call(), 1)
call_3631 = relay.TupleGetItem(func_1695_call(), 1)
bop_3632 = relay.power(uop_3579.astype('float32'), relay.reshape(const_3577.astype('float32'), relay.shape_of(uop_3579))) # shape=(896,)
var_3641 = relay.var("var_3641", dtype = "float64", shape = (896,))#candidate|3641|(896,)|var|float64
bop_3642 = relay.subtract(uop_3579.astype('uint16'), relay.reshape(var_3641.astype('uint16'), relay.shape_of(uop_3579))) # shape=(896,)
output = relay.Tuple([call_3537,call_3559,call_3562,call_3569,call_3572,const_3573,call_3576,call_3583,const_3584,var_3585,call_3589,var_3590,call_3619,call_3630,bop_3632,bop_3642,])
output2 = relay.Tuple([call_3538,call_3560,call_3563,call_3570,call_3574,const_3573,call_3578,call_3586,const_3584,var_3585,call_3591,var_3590,call_3620,call_3631,bop_3632,bop_3642,])
func_3646 = relay.Function([var_3585,var_3590,var_3641,], output)
mod['func_3646'] = func_3646
mod = relay.transform.InferType()(mod)
mutated_mod['func_3646'] = func_3646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3646_call = mutated_mod.get_global_var('func_3646')
var_3648 = relay.var("var_3648", dtype = "float64", shape = (576,))#candidate|3648|(576,)|var|float64
var_3649 = relay.var("var_3649", dtype = "float32", shape = (1152,))#candidate|3649|(1152,)|var|float32
var_3650 = relay.var("var_3650", dtype = "float64", shape = (896,))#candidate|3650|(896,)|var|float64
call_3647 = func_3646_call(var_3648,var_3649,var_3650,)
output = call_3647
func_3651 = relay.Function([var_3648,var_3649,var_3650,], output)
mutated_mod['func_3651'] = func_3651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1083_call = mod.get_global_var('func_1083')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_3662 = relay.TupleGetItem(func_1083_call(), 0)
call_3663 = relay.TupleGetItem(func_1084_call(), 0)
output = relay.Tuple([call_3662,])
output2 = relay.Tuple([call_3663,])
func_3669 = relay.Function([], output)
mod['func_3669'] = func_3669
mod = relay.transform.InferType()(mod)
mutated_mod['func_3669'] = func_3669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3669_call = mutated_mod.get_global_var('func_3669')
call_3670 = func_3669_call()
output = call_3670
func_3671 = relay.Function([], output)
mutated_mod['func_3671'] = func_3671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1289_call = mod.get_global_var('func_1289')
func_1290_call = mutated_mod.get_global_var('func_1290')
call_3709 = relay.TupleGetItem(func_1289_call(), 0)
call_3710 = relay.TupleGetItem(func_1290_call(), 0)
output = relay.Tuple([call_3709,])
output2 = relay.Tuple([call_3710,])
func_3716 = relay.Function([], output)
mod['func_3716'] = func_3716
mod = relay.transform.InferType()(mod)
mutated_mod['func_3716'] = func_3716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3716_call = mutated_mod.get_global_var('func_3716')
call_3717 = func_3716_call()
output = call_3717
func_3718 = relay.Function([], output)
mutated_mod['func_3718'] = func_3718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1801_call = mod.get_global_var('func_1801')
func_1802_call = mutated_mod.get_global_var('func_1802')
call_3719 = relay.TupleGetItem(func_1801_call(), 0)
call_3720 = relay.TupleGetItem(func_1802_call(), 0)
output = call_3719
output2 = call_3720
func_3721 = relay.Function([], output)
mod['func_3721'] = func_3721
mod = relay.transform.InferType()(mod)
output = func_3721()
func_3722 = relay.Function([], output)
mutated_mod['func_3722'] = func_3722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1083_call = mod.get_global_var('func_1083')
func_1084_call = mutated_mod.get_global_var('func_1084')
call_3723 = relay.TupleGetItem(func_1083_call(), 0)
call_3724 = relay.TupleGetItem(func_1084_call(), 0)
func_3449_call = mod.get_global_var('func_3449')
func_3452_call = mutated_mod.get_global_var('func_3452')
var_3727 = relay.var("var_3727", dtype = "float64", shape = ())#candidate|3727|()|var|float64
var_3728 = relay.var("var_3728", dtype = "float64", shape = (576,))#candidate|3728|(576,)|var|float64
call_3726 = relay.TupleGetItem(func_3449_call(relay.reshape(var_3727.astype('float64'), []), relay.reshape(var_3728.astype('float64'), [576,]), ), 0)
call_3729 = relay.TupleGetItem(func_3452_call(relay.reshape(var_3727.astype('float64'), []), relay.reshape(var_3728.astype('float64'), [576,]), ), 0)
output = relay.Tuple([call_3723,call_3726,var_3727,var_3728,])
output2 = relay.Tuple([call_3724,call_3729,var_3727,var_3728,])
func_3742 = relay.Function([var_3727,var_3728,], output)
mod['func_3742'] = func_3742
mod = relay.transform.InferType()(mod)
mutated_mod['func_3742'] = func_3742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mutated_mod.get_global_var('func_3742')
var_3744 = relay.var("var_3744", dtype = "float64", shape = ())#candidate|3744|()|var|float64
var_3745 = relay.var("var_3745", dtype = "float64", shape = (576,))#candidate|3745|(576,)|var|float64
call_3743 = func_3742_call(var_3744,var_3745,)
output = call_3743
func_3746 = relay.Function([var_3744,var_3745,], output)
mutated_mod['func_3746'] = func_3746
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3764 = relay.const([[[-5,10,3,-4,-3,-10,3,-7,-4,-8,1],[-9,4,6,-6,-4,3,4,3,10,-1,4],[2,10,8,-10,-6,8,6,9,-2,-2,-4]],[[-2,-4,-2,-3,-8,10,2,8,7,-2,5],[10,10,5,-6,10,-8,10,-9,10,9,-7],[-6,-4,8,-7,-6,5,6,9,2,1,4]],[[-2,6,2,10,8,-2,-8,-8,1,1,-9],[-7,10,-8,1,-2,-4,-5,-4,6,2,4],[-10,6,-6,9,-3,-4,8,-5,3,-2,-8]],[[5,-3,-3,1,-4,10,4,6,-1,-2,5],[6,-10,9,-8,-8,-8,6,-7,-1,-9,2],[8,9,-8,-4,-2,3,9,-4,9,-10,5]],[[8,-4,-3,-9,6,-3,-7,-5,-4,-3,-7],[-10,-1,-4,-4,8,1,1,5,-10,-9,6],[-6,9,8,-8,6,7,-7,-10,-2,-4,-10]],[[-8,7,8,1,-4,-6,8,6,-10,-5,10],[10,4,-8,-4,3,5,-9,10,6,-8,8],[6,-3,-4,7,-10,-6,10,3,2,5,-8]]], dtype = "int64")#candidate|3764|(6, 3, 11)|const|int64
var_3765 = relay.var("var_3765", dtype = "int64", shape = (6, 3, 11))#candidate|3765|(6, 3, 11)|var|int64
bop_3766 = relay.bitwise_xor(const_3764.astype('int64'), relay.reshape(var_3765.astype('int64'), relay.shape_of(const_3764))) # shape=(6, 3, 11)
uop_3774 = relay.acos(var_3765.astype('float64')) # shape=(6, 3, 11)
func_581_call = mod.get_global_var('func_581')
func_585_call = mutated_mod.get_global_var('func_585')
var_3783 = relay.var("var_3783", dtype = "float64", shape = (1728,))#candidate|3783|(1728,)|var|float64
call_3782 = relay.TupleGetItem(func_581_call(relay.reshape(var_3783.astype('float64'), [9, 16, 12]), relay.reshape(var_3783.astype('float64'), [9, 16, 12]), ), 0)
call_3784 = relay.TupleGetItem(func_585_call(relay.reshape(var_3783.astype('float64'), [9, 16, 12]), relay.reshape(var_3783.astype('float64'), [9, 16, 12]), ), 0)
output = relay.Tuple([bop_3766,uop_3774,call_3782,var_3783,])
output2 = relay.Tuple([bop_3766,uop_3774,call_3784,var_3783,])
func_3789 = relay.Function([var_3765,var_3783,], output)
mod['func_3789'] = func_3789
mod = relay.transform.InferType()(mod)
var_3790 = relay.var("var_3790", dtype = "int64", shape = (6, 3, 11))#candidate|3790|(6, 3, 11)|var|int64
var_3791 = relay.var("var_3791", dtype = "float64", shape = (1728,))#candidate|3791|(1728,)|var|float64
output = func_3789(var_3790,var_3791,)
func_3792 = relay.Function([var_3790,var_3791,], output)
mutated_mod['func_3792'] = func_3792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3871 = relay.var("var_3871", dtype = "float32", shape = (3, 12, 3))#candidate|3871|(3, 12, 3)|var|float32
uop_3872 = relay.rsqrt(var_3871.astype('float32')) # shape=(3, 12, 3)
bop_3895 = relay.left_shift(uop_3872.astype('int8'), relay.reshape(var_3871.astype('int8'), relay.shape_of(uop_3872))) # shape=(3, 12, 3)
func_2957_call = mod.get_global_var('func_2957')
func_2960_call = mutated_mod.get_global_var('func_2960')
const_3932 = relay.const([[-8.718438,9.381104,9.900638,-6.558002,-2.209716,-8.344806,-7.407220,-7.329518,8.078262,-0.907325,2.695633,1.176230,-7.831090,-0.615000,-8.874211,-9.318341,7.331971,4.599044,-0.782008,0.032708,-3.664802,3.811932,-3.000398,8.356157,1.766222,6.741068,0.791075,7.637828,8.455067,3.467622,-2.438790,-8.090302,4.532695,-4.574331,4.562824,-7.242390,7.512962,-4.080347,6.759146,4.241289],[-0.407392,8.985382,-5.138080,3.910501,2.767193,7.598221,-2.216333,1.873334,8.377002,-0.584329,4.543880,-5.484352,-2.089550,6.598789,5.332538,5.293213,5.398082,6.148938,5.001476,-0.498385,5.957482,-3.551111,9.206746,9.064071,8.938727,-3.212699,-2.551616,-0.721697,4.623021,-3.399775,-9.722874,-6.824304,9.938807,0.861811,-2.545276,6.413351,1.637165,-4.281884,7.345709,4.676798],[0.211538,-1.765320,0.455021,-5.110773,-5.591956,1.023041,-4.677195,-9.430140,7.880503,-3.534209,4.538733,-8.344951,2.891824,-2.927309,-1.906376,-7.038234,7.487148,-7.401503,0.464925,3.011060,4.278425,-3.414135,6.798168,5.470422,4.405862,-9.060157,9.565822,9.012367,2.215654,-0.668992,-7.511542,4.714300,6.282095,-9.429897,6.875055,-0.280835,-6.049760,-0.914287,7.829572,-8.571103],[-5.153089,-5.046368,1.236464,-7.515588,7.327080,6.360718,8.137172,8.824943,-9.394992,1.652649,2.207235,-5.940956,3.702683,9.639366,8.330147,0.793278,2.585927,1.692431,3.156399,9.554321,-3.007710,-4.860972,-1.960643,-5.347641,0.179543,-4.695772,3.246524,-6.116564,8.046042,-7.349446,-1.655229,-6.608312,8.441271,-6.298986,-6.083747,4.570390,-9.212098,-5.745425,9.327243,4.984466]], dtype = "float64")#candidate|3932|(4, 40)|const|float64
call_3931 = relay.TupleGetItem(func_2957_call(relay.reshape(const_3932.astype('float64'), [2, 10, 8])), 1)
call_3933 = relay.TupleGetItem(func_2960_call(relay.reshape(const_3932.astype('float64'), [2, 10, 8])), 1)
func_2205_call = mod.get_global_var('func_2205')
func_2206_call = mutated_mod.get_global_var('func_2206')
call_3935 = relay.TupleGetItem(func_2205_call(), 1)
call_3936 = relay.TupleGetItem(func_2206_call(), 1)
func_272_call = mod.get_global_var('func_272')
func_278_call = mutated_mod.get_global_var('func_278')
var_3940 = relay.var("var_3940", dtype = "int64", shape = (8, 260))#candidate|3940|(8, 260)|var|int64
var_3941 = relay.var("var_3941", dtype = "float32", shape = (891,))#candidate|3941|(891,)|var|float32
call_3939 = relay.TupleGetItem(func_272_call(relay.reshape(var_3940.astype('int64'), [10, 13, 16]), relay.reshape(var_3940.astype('int64'), [10, 13, 16]), relay.reshape(const_3932.astype('bool'), [160,]), relay.reshape(var_3941.astype('float32'), [99, 9]), relay.reshape(var_3940.astype('int64'), [10, 13, 16]), ), 3)
call_3942 = relay.TupleGetItem(func_278_call(relay.reshape(var_3940.astype('int64'), [10, 13, 16]), relay.reshape(var_3940.astype('int64'), [10, 13, 16]), relay.reshape(const_3932.astype('bool'), [160,]), relay.reshape(var_3941.astype('float32'), [99, 9]), relay.reshape(var_3940.astype('int64'), [10, 13, 16]), ), 3)
func_1815_call = mod.get_global_var('func_1815')
func_1818_call = mutated_mod.get_global_var('func_1818')
const_3950 = relay.const([1,-8,-3,10,4,-3,-8,-9,6,8,1,9,-8,-9,8,-4,-3,2,7,2,-3,-8,3,-1,-9,-2,-10,10,-8,6,-1,4,5,4,9], dtype = "int32")#candidate|3950|(35,)|const|int32
call_3949 = relay.TupleGetItem(func_1815_call(relay.reshape(const_3950.astype('int32'), [1, 35])), 2)
call_3951 = relay.TupleGetItem(func_1818_call(relay.reshape(const_3950.astype('int32'), [1, 35])), 2)
var_3952 = relay.var("var_3952", dtype = "float32", shape = (3, 12, 3))#candidate|3952|(3, 12, 3)|var|float32
bop_3953 = relay.greater_equal(uop_3872.astype('bool'), relay.reshape(var_3952.astype('bool'), relay.shape_of(uop_3872))) # shape=(3, 12, 3)
bop_3971 = relay.right_shift(bop_3895.astype('uint16'), relay.reshape(var_3871.astype('uint16'), relay.shape_of(bop_3895))) # shape=(3, 12, 3)
bop_3974 = relay.bitwise_or(call_3949.astype('uint16'), relay.reshape(const_3950.astype('uint16'), relay.shape_of(call_3949))) # shape=(1, 35)
bop_3977 = relay.bitwise_or(call_3951.astype('uint16'), relay.reshape(const_3950.astype('uint16'), relay.shape_of(call_3951))) # shape=(1, 35)
func_3721_call = mod.get_global_var('func_3721')
func_3722_call = mutated_mod.get_global_var('func_3722')
call_3978 = func_3721_call()
call_3979 = func_3721_call()
uop_3987 = relay.sinh(bop_3953.astype('float64')) # shape=(3, 12, 3)
output = relay.Tuple([call_3931,const_3932,call_3935,call_3939,var_3940,var_3941,bop_3971,bop_3974,call_3978,uop_3987,])
output2 = relay.Tuple([call_3933,const_3932,call_3936,call_3942,var_3940,var_3941,bop_3971,bop_3977,call_3979,uop_3987,])
func_3989 = relay.Function([var_3871,var_3940,var_3941,var_3952,], output)
mod['func_3989'] = func_3989
mod = relay.transform.InferType()(mod)
mutated_mod['func_3989'] = func_3989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3989_call = mutated_mod.get_global_var('func_3989')
var_3991 = relay.var("var_3991", dtype = "float32", shape = (3, 12, 3))#candidate|3991|(3, 12, 3)|var|float32
var_3992 = relay.var("var_3992", dtype = "int64", shape = (8, 260))#candidate|3992|(8, 260)|var|int64
var_3993 = relay.var("var_3993", dtype = "float32", shape = (891,))#candidate|3993|(891,)|var|float32
var_3994 = relay.var("var_3994", dtype = "float32", shape = (3, 12, 3))#candidate|3994|(3, 12, 3)|var|float32
call_3990 = func_3989_call(var_3991,var_3992,var_3993,var_3994,)
output = call_3990
func_3995 = relay.Function([var_3991,var_3992,var_3993,var_3994,], output)
mutated_mod['func_3995'] = func_3995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2617_call = mod.get_global_var('func_2617')
func_2618_call = mutated_mod.get_global_var('func_2618')
call_4002 = relay.TupleGetItem(func_2617_call(), 1)
call_4003 = relay.TupleGetItem(func_2618_call(), 1)
func_2518_call = mod.get_global_var('func_2518')
func_2519_call = mutated_mod.get_global_var('func_2519')
call_4015 = relay.TupleGetItem(func_2518_call(), 0)
call_4016 = relay.TupleGetItem(func_2519_call(), 0)
uop_4036 = relay.log(call_4015.astype('float32')) # shape=(2, 10, 8)
uop_4038 = relay.log(call_4016.astype('float32')) # shape=(2, 10, 8)
uop_4044 = relay.erf(call_4015.astype('float64')) # shape=(2, 10, 8)
uop_4046 = relay.erf(call_4016.astype('float64')) # shape=(2, 10, 8)
uop_4048 = relay.atan(uop_4044.astype('float64')) # shape=(2, 10, 8)
uop_4050 = relay.atan(uop_4046.astype('float64')) # shape=(2, 10, 8)
func_2205_call = mod.get_global_var('func_2205')
func_2206_call = mutated_mod.get_global_var('func_2206')
call_4052 = relay.TupleGetItem(func_2205_call(), 0)
call_4053 = relay.TupleGetItem(func_2206_call(), 0)
func_3449_call = mod.get_global_var('func_3449')
func_3452_call = mutated_mod.get_global_var('func_3452')
var_4057 = relay.var("var_4057", dtype = "float64", shape = ())#candidate|4057|()|var|float64
const_4058 = relay.const([8.005409,5.481335,5.267908,7.774603,3.547684,-8.066797,3.382002,-0.308064,7.177975,-0.552132,5.757852,-0.823088,7.240015,-1.441817,-2.812403,-8.432259,-7.807125,-1.845042,-7.216229,6.273360,3.723689,-1.522377,7.831875,3.889830,-3.006005,-8.430147,6.707115,6.632471,1.533125,6.812470,1.539350,9.527820,4.878864,1.088859,-9.789176,1.473523,-9.418171,-5.760723,8.238104,1.474048,4.018409,9.989041,-9.261873,5.878091,-2.695453,-2.494384,2.726831,3.064492,1.130612,-8.726262,9.581088,4.365513,5.886893,9.196862,-5.637016,-1.170568,-3.957544,-1.492930,4.104322,0.017505,-8.348379,3.322816,7.479003,-7.359722,-2.066281,-0.063171,4.989531,1.239632,5.766102,9.781715,7.791952,-6.965091,3.984568,8.419941,-2.581608,-0.538345,-5.809745,-2.424080,-6.465300,-9.017728,5.065094,3.617925,3.696508,-2.376478,4.444937,-9.525659,6.372630,2.528361,4.978654,3.682935,5.846406,-1.756896,-1.942274,7.522455,3.223113,6.337742,2.387069,3.998584,9.319103,3.526456,0.015599,-7.565868,-7.227797,3.502700,-2.182905,-9.845425,-0.262456,8.245947,5.439386,-4.266503,-4.473358,-0.086745,-9.610725,-4.097414,6.598508,-4.002745,5.472198,1.980667,-4.544000,2.599135,-5.784053,-3.266682,-8.192219,7.881561,3.488848,2.555854,2.049438,0.491819,6.399547,1.033726,0.896101,-6.203573,-1.335194,3.826902,-6.683117,9.553057,-1.866429,-3.998521,9.071833,-5.716621,0.992418,4.168987,8.487488,-1.011736,-6.628983,5.327706,0.938482,3.816499,-2.869724,0.556976,1.139460,6.493251,-8.265285,0.093541,0.284293,-0.179216,0.189201,9.258628,-2.339763,4.330854,7.079398,1.904611,-9.948635,5.988199,2.519005,-8.603515,7.534109,-7.383441,0.392934,-3.669220,0.957282,9.725011,-2.751413,-1.653323,-9.503087,7.129403,-9.244716,-3.970379,0.127153,8.400069,-6.036999,-2.026432,0.848053,-8.196083,-2.800145,9.645667,4.497391,-6.100031,9.225409,4.156564,-5.086296,-5.443894,6.999872,-2.814858,-0.506746,9.235193,4.518533,-4.939619,-3.105042,4.025748,3.169625,-9.411973,9.532812,-8.868946,3.481443,-7.891858,7.429300,3.448998,1.701744,1.730055,3.895929,7.813560,-8.462544,-1.546380,-8.504877,1.480252,-5.500658,-0.888977,-9.159953,3.129712,-6.204252,-8.172528,-1.512275,-4.111809,3.476728,0.156603,-6.211804,9.884848,-7.792598,8.773688,4.311017,4.789506,8.869877,2.116281,-5.619343,2.650173,-3.503210,-6.739893,1.145309,-5.601866,3.382263,-1.301936,-4.438335,-3.898195,0.073502,0.641824,4.013694,-3.850218,8.069855,-9.971567,-7.148215,-0.074097,7.833075,2.286240,-0.838429,2.021811,3.767480,7.999425,4.193951,9.483015,-0.283539,8.744061,6.883410,-6.925524,9.106572,-3.393374,-3.477279,-0.765458,-3.801692,3.762473,-1.658406,-2.709376,-1.822115,2.480733,5.135921,-9.273882,-4.171946,0.659258,3.678845,-5.976945,1.847239,0.619153,9.451941,5.454955,3.109951,-8.752735,-3.177287,-5.616860,3.008716,-5.419689,-4.098842,-9.529416,1.453431,-5.529868,0.709058,6.921574,4.917189,-6.544652,0.088196,-4.083867,-1.849601,-5.095407,6.878634,1.323178,-8.852760,-3.213296,-4.057761,2.634461,-3.532091,6.426828,-1.644451,-4.422855,9.594328,8.547471,3.584378,3.458949,-4.746502,-6.637671,-6.149116,-7.606998,1.155837,1.233995,4.031040,7.773969,-0.075380,0.155929,-3.836654,3.322722,3.683552,-9.354972,-7.477084,-1.637801,6.631482,0.938246,3.009123,-4.922173,-7.678914,-3.875238,8.794966,8.498435,-4.560361,-1.559649,6.471599,-7.883787,-1.544402,3.175126,1.746478,-9.574459,-7.655544,-9.252059,7.922571,-4.028850,2.638968,-8.398042,6.698807,-5.897623,-0.666345,-0.227979,-0.424435,-2.243788,7.993187,-2.877651,-7.271895,4.581808,-9.514379,-8.164831,-2.558685,5.364381,1.150747,-1.324133,1.509136,4.401479,-5.732257,3.879359,-1.486432,4.037926,1.309313,-1.525009,-0.523753,-9.454627,-8.490199,5.948478,-6.148541,-9.694053,-1.217827,-1.447528,6.153654,7.553282,9.778498,5.038840,7.020616,7.698708,-3.332883,-6.081735,1.359918,9.926923,0.568266,-4.594344,9.203729,4.344296,-7.914451,1.893437,5.669590,7.653516,-8.161325,7.203741,3.315596,-5.378734,-4.509380,2.901685,-2.852180,3.393470,3.841830,6.775820,-0.984599,-6.276608,-9.086315,9.527654,-5.284672,-9.594217,9.216059,-6.307321,-5.173013,-3.697165,2.763577,-4.135787,-7.126978,1.162451,2.676663,-8.665648,-4.229018,-8.254634,-2.399788,-0.684262,-4.684009,6.751109,-6.008981,8.718238,8.433562,-9.360506,1.344572,-3.215013,-8.003495,0.443719,-2.994988,-2.335345,-0.088786,7.910838,-8.881141,8.674263,-5.073544,-1.314141,8.428510,5.433656,4.489833,5.947690,-3.657054,-2.309847,-1.793393,-3.490813,6.967036,2.486562,-4.683125,-3.680651,-1.538222,6.589094,9.883228,-3.284319,4.814761,7.980061,2.289720,1.575397,-3.325319,-8.028655,8.999225,7.529521,7.346721,-0.134515,0.400857,-3.519979,2.018506,-6.227308,9.257081,5.013620,-3.185013,6.884487,7.443635,2.914425,-5.353575,-1.877213,-7.713627,-6.589620,-2.362571,4.795732,-6.954784,-9.042548,-7.180808,-1.096048,7.822935,-8.150287,-6.548594,6.683030,2.230162,2.787841,-7.392875,1.260939,6.710752,6.012632,0.214011,5.377288,-3.983380,5.581533,-2.200191,3.332162,5.091848,0.238498,8.085095,0.765681,6.962230,1.888118,9.563612,-5.384822,-5.047349,-1.093265,9.705858,6.181909,7.213768,-6.924831,-7.895097,6.600231,6.246190,5.674141,6.517984,9.346436,1.219777,0.133323,-4.541657,5.492741,7.411907,-8.402370,9.161505,-4.033937,-9.214621,-6.579183,-8.229221,-7.239205,-4.744047,5.572460,-3.702346,-5.530983,3.625824,-7.818774,-6.973103,-1.322171,-3.221552,-9.053111,2.194820,-3.983942,2.689682,-3.658086,1.856040,3.203315,8.473015,1.598920,-3.786673,7.148816,1.672705,2.413987,-3.437776,6.811087,-0.459449,-3.938495,9.178223,9.073998,-8.864862,-9.296307], dtype = "float64")#candidate|4058|(576,)|const|float64
call_4056 = relay.TupleGetItem(func_3449_call(relay.reshape(var_4057.astype('float64'), []), relay.reshape(const_4058.astype('float64'), [576,]), ), 0)
call_4059 = relay.TupleGetItem(func_3452_call(relay.reshape(var_4057.astype('float64'), []), relay.reshape(const_4058.astype('float64'), [576,]), ), 0)
output = relay.Tuple([call_4002,uop_4036,uop_4048,call_4052,call_4056,var_4057,const_4058,])
output2 = relay.Tuple([call_4003,uop_4038,uop_4050,call_4053,call_4059,var_4057,const_4058,])
func_4078 = relay.Function([var_4057,], output)
mod['func_4078'] = func_4078
mod = relay.transform.InferType()(mod)
var_4079 = relay.var("var_4079", dtype = "float64", shape = ())#candidate|4079|()|var|float64
output = func_4078(var_4079)
func_4080 = relay.Function([var_4079], output)
mutated_mod['func_4080'] = func_4080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4095 = relay.var("var_4095", dtype = "float64", shape = ())#candidate|4095|()|var|float64
const_4096 = relay.const([[[-2.833766,-8.818722,-0.928009,6.778887,-9.611802,8.233936],[-7.115355,-2.661705,5.147238,-9.995662,-8.168999,5.047949],[8.991690,-5.647292,-5.433670,-4.646955,-8.167233,4.543161],[-2.800169,7.931452,3.660238,6.692510,-8.014898,7.033205],[5.358273,9.783761,-4.612589,-5.601030,0.906628,9.374689]],[[-6.152771,-0.894798,-5.448424,4.731293,-5.067930,9.180513],[1.148538,-2.644283,-9.441577,-6.402589,8.555764,0.195397],[-5.252834,-5.226103,5.393751,8.744322,5.819949,-2.678376],[0.410236,1.958240,-0.368791,6.279125,3.744233,0.400124],[4.925216,7.529969,-6.897870,-6.816007,-7.796288,-1.503346]],[[-9.940639,5.641769,-8.636606,8.158762,4.673286,0.080206],[4.640202,-8.636804,-3.070599,0.442072,9.524684,2.024714],[6.597254,-1.588744,-1.279610,5.782251,-6.583499,-4.416638],[-6.415978,-9.533287,-8.603242,-7.911409,-7.862303,-4.598654],[-4.607076,-5.503679,-5.921764,0.320347,0.736190,3.875541]],[[1.155691,-7.259803,5.723183,-4.309489,-9.299296,-9.994134],[-8.613716,-1.105584,7.995435,-0.322989,-8.659587,1.973960],[-4.723096,2.649752,-2.057845,4.139771,4.109170,6.040858],[-7.989924,8.881812,-0.619388,-3.190457,-9.393544,2.663229],[5.851638,0.739420,-1.341556,3.779938,-7.140146,-0.385425]],[[0.290611,-2.138117,6.846256,-2.084267,0.882094,-9.901002],[6.896826,-0.249651,3.494516,4.590090,0.064821,9.567269],[7.947991,-2.155545,8.152497,-0.218593,-4.926523,8.343191],[-7.858809,-6.507618,1.113039,3.043794,6.166346,-8.912083],[6.801459,6.600080,8.352655,-9.003076,8.400955,-2.755068]],[[8.500980,-6.222817,4.097169,9.907810,1.999729,9.919146],[-5.131550,5.998423,-7.793041,-3.757750,0.560752,3.185558],[-4.268788,6.724907,-3.758436,-7.071757,-5.463198,-4.930400],[7.224681,0.937142,3.839798,1.861140,6.332895,5.408106],[4.241344,2.003582,6.106564,4.839191,-8.122086,-4.374062]],[[-8.161056,-5.528556,3.672880,-5.048242,-6.572605,8.833450],[-7.202732,3.603827,7.398094,3.677974,-3.976634,0.239769],[6.105587,-4.941658,0.245013,2.322829,8.121469,-2.595503],[-1.685168,6.474765,-7.038788,-1.804764,-1.831895,-3.549874],[-7.970960,-5.827966,-6.805871,-8.278058,-0.217545,9.556781]],[[7.231783,7.277888,-9.418174,0.636061,-9.202472,7.547246],[9.275647,4.995185,7.652945,0.056734,2.342342,-5.966222],[4.787965,-0.654994,2.650160,8.792241,-3.673436,-2.764871],[-3.013530,9.718611,-5.116408,0.985750,-0.429016,3.438055],[-8.064021,7.947515,-8.858962,0.730472,-5.786893,2.598475]],[[5.546120,9.898617,7.064814,-1.947817,6.090745,-0.517164],[-8.262838,-6.216437,-5.856336,-9.526995,-5.536046,9.853160],[-2.139566,4.942120,-4.050987,-9.118708,4.810059,4.461000],[3.730079,3.464756,3.677335,1.206061,5.941300,-0.232931],[4.574049,0.865777,-4.553015,6.796478,0.277793,3.381104]],[[2.247248,-9.852974,9.467294,-3.021938,7.331493,-0.503189],[8.756609,6.314273,5.751760,2.198436,-4.051786,-3.826335],[4.289213,9.658483,-9.600864,-1.894899,6.167888,6.108305],[-5.117824,3.450469,4.957113,-9.279208,7.054186,6.868147],[2.699852,-0.910199,9.400235,-6.451047,-7.486213,-8.509092]],[[-7.133657,-0.362173,0.746486,9.836534,5.224953,7.660974],[-8.231512,-5.121659,6.879429,-0.347546,-1.007440,7.510827],[6.467800,-9.308098,6.802747,8.697282,4.282009,1.327992],[0.732399,-5.160981,-4.602178,1.545654,7.188246,-2.432252],[3.796982,2.864286,8.056121,-2.951779,-2.724982,-9.811014]],[[4.775549,6.526644,-9.779913,2.446179,7.961369,-3.991465],[5.119109,-8.187082,1.755592,-2.551535,9.827328,-7.634047],[-5.982969,-2.833727,2.620192,-1.297279,-1.739931,4.360088],[7.449721,-4.248669,-3.056284,-3.181659,-7.958697,-7.491121],[3.015731,-5.631847,-9.727999,-5.381473,4.816337,0.019819]],[[1.330462,2.966252,-9.067158,-7.122394,9.485199,-2.564987],[-9.916738,-3.541420,-2.996523,-5.659475,9.597575,-1.955620],[-9.043432,-5.464081,2.929759,-3.599467,5.371512,-4.062197],[9.843142,1.265761,6.668795,-2.032082,-9.943040,-4.101191],[-6.578945,8.096114,-9.739368,3.686464,-7.006054,-4.884726]],[[-4.994586,-1.037167,1.274878,9.744613,-3.341361,6.769605],[-9.171989,5.313517,-8.440778,7.574687,-8.713343,-7.208537],[9.186402,0.475011,0.163925,2.622183,4.586550,-7.923671],[0.642263,2.499194,-0.492562,8.307476,-6.416815,-0.237404],[9.994669,9.659918,-1.275824,-0.409506,-6.152454,3.765480]]], dtype = "float64")#candidate|4096|(14, 5, 6)|const|float64
bop_4097 = relay.floor_mod(var_4095.astype('float64'), const_4096.astype('float64')) # shape=(14, 5, 6)
func_1815_call = mod.get_global_var('func_1815')
func_1818_call = mutated_mod.get_global_var('func_1818')
const_4117 = relay.const([-10,10,-2,-7,-4,6,-2,-2,-5,7,8,-7,4,10,-4,7,1,-2,-2,-6,5,-4,6,-8,-10,8,3,-7,-3,-2,7,3,-9,-3,-3], dtype = "int32")#candidate|4117|(35,)|const|int32
call_4116 = relay.TupleGetItem(func_1815_call(relay.reshape(const_4117.astype('int32'), [1, 35])), 0)
call_4118 = relay.TupleGetItem(func_1818_call(relay.reshape(const_4117.astype('int32'), [1, 35])), 0)
func_3721_call = mod.get_global_var('func_3721')
func_3722_call = mutated_mod.get_global_var('func_3722')
call_4121 = func_3721_call()
call_4122 = func_3721_call()
output = relay.Tuple([bop_4097,call_4116,const_4117,call_4121,])
output2 = relay.Tuple([bop_4097,call_4118,const_4117,call_4122,])
func_4123 = relay.Function([var_4095,], output)
mod['func_4123'] = func_4123
mod = relay.transform.InferType()(mod)
var_4124 = relay.var("var_4124", dtype = "float64", shape = ())#candidate|4124|()|var|float64
output = func_4123(var_4124)
func_4125 = relay.Function([var_4124], output)
mutated_mod['func_4125'] = func_4125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_4136 = relay.TupleGetItem(func_1693_call(), 3)
call_4137 = relay.TupleGetItem(func_1695_call(), 3)
output = relay.Tuple([call_4136,])
output2 = relay.Tuple([call_4137,])
func_4144 = relay.Function([], output)
mod['func_4144'] = func_4144
mod = relay.transform.InferType()(mod)
output = func_4144()
func_4145 = relay.Function([], output)
mutated_mod['func_4145'] = func_4145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2902_call = mod.get_global_var('func_2902')
func_2903_call = mutated_mod.get_global_var('func_2903')
call_4157 = relay.TupleGetItem(func_2902_call(), 0)
call_4158 = relay.TupleGetItem(func_2903_call(), 0)
output = call_4157
output2 = call_4158
func_4159 = relay.Function([], output)
mod['func_4159'] = func_4159
mod = relay.transform.InferType()(mod)
output = func_4159()
func_4160 = relay.Function([], output)
mutated_mod['func_4160'] = func_4160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4167 = relay.var("var_4167", dtype = "float32", shape = ())#candidate|4167|()|var|float32
var_4168 = relay.var("var_4168", dtype = "float32", shape = (2, 1, 14))#candidate|4168|(2, 1, 14)|var|float32
bop_4169 = relay.not_equal(var_4167.astype('bool'), var_4168.astype('bool')) # shape=(2, 1, 14)
func_3221_call = mod.get_global_var('func_3221')
func_3222_call = mutated_mod.get_global_var('func_3222')
call_4172 = func_3221_call()
call_4173 = func_3221_call()
uop_4176 = relay.sqrt(bop_4169.astype('float64')) # shape=(2, 1, 14)
uop_4182 = relay.log2(bop_4169.astype('float32')) # shape=(2, 1, 14)
output = relay.Tuple([call_4172,uop_4176,uop_4182,])
output2 = relay.Tuple([call_4173,uop_4176,uop_4182,])
func_4188 = relay.Function([var_4167,var_4168,], output)
mod['func_4188'] = func_4188
mod = relay.transform.InferType()(mod)
var_4189 = relay.var("var_4189", dtype = "float32", shape = ())#candidate|4189|()|var|float32
var_4190 = relay.var("var_4190", dtype = "float32", shape = (2, 1, 14))#candidate|4190|(2, 1, 14)|var|float32
output = func_4188(var_4189,var_4190,)
func_4191 = relay.Function([var_4189,var_4190,], output)
mutated_mod['func_4191'] = func_4191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2205_call = mod.get_global_var('func_2205')
func_2206_call = mutated_mod.get_global_var('func_2206')
call_4193 = relay.TupleGetItem(func_2205_call(), 0)
call_4194 = relay.TupleGetItem(func_2206_call(), 0)
output = call_4193
output2 = call_4194
func_4196 = relay.Function([], output)
mod['func_4196'] = func_4196
mod = relay.transform.InferType()(mod)
output = func_4196()
func_4197 = relay.Function([], output)
mutated_mod['func_4197'] = func_4197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3282_call = mod.get_global_var('func_3282')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_4202 = relay.TupleGetItem(func_3282_call(), 0)
call_4203 = relay.TupleGetItem(func_3283_call(), 0)
func_1244_call = mod.get_global_var('func_1244')
func_1248_call = mutated_mod.get_global_var('func_1248')
var_4205 = relay.var("var_4205", dtype = "float64", shape = ())#candidate|4205|()|var|float64
var_4206 = relay.var("var_4206", dtype = "float64", shape = (576,))#candidate|4206|(576,)|var|float64
call_4204 = func_1244_call(relay.reshape(var_4205.astype('float64'), []), relay.reshape(var_4206.astype('float64'), [4, 9, 16]), )
call_4207 = func_1244_call(relay.reshape(var_4205.astype('float64'), []), relay.reshape(var_4206.astype('float64'), [4, 9, 16]), )
bop_4211 = relay.multiply(var_4205.astype('uint8'), call_4202.astype('uint8')) # shape=(13, 2, 4)
bop_4214 = relay.multiply(var_4205.astype('uint8'), call_4203.astype('uint8')) # shape=(13, 2, 4)
output = relay.Tuple([call_4204,var_4206,bop_4211,])
output2 = relay.Tuple([call_4207,var_4206,bop_4214,])
func_4216 = relay.Function([var_4205,var_4206,], output)
mod['func_4216'] = func_4216
mod = relay.transform.InferType()(mod)
var_4217 = relay.var("var_4217", dtype = "float64", shape = ())#candidate|4217|()|var|float64
var_4218 = relay.var("var_4218", dtype = "float64", shape = (576,))#candidate|4218|(576,)|var|float64
output = func_4216(var_4217,var_4218,)
func_4219 = relay.Function([var_4217,var_4218,], output)
mutated_mod['func_4219'] = func_4219
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4281 = relay.var("var_4281", dtype = "float64", shape = (1, 13, 10))#candidate|4281|(1, 13, 10)|var|float64
uop_4282 = relay.cosh(var_4281.astype('float64')) # shape=(1, 13, 10)
output = uop_4282
output2 = uop_4282
func_4285 = relay.Function([var_4281,], output)
mod['func_4285'] = func_4285
mod = relay.transform.InferType()(mod)
mutated_mod['func_4285'] = func_4285
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4286 = relay.var("var_4286", dtype = "float64", shape = (1, 13, 10))#candidate|4286|(1, 13, 10)|var|float64
func_4285_call = mutated_mod.get_global_var('func_4285')
call_4287 = func_4285_call(var_4286)
output = call_4287
func_4288 = relay.Function([var_4286], output)
mutated_mod['func_4288'] = func_4288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4196_call = mod.get_global_var('func_4196')
func_4197_call = mutated_mod.get_global_var('func_4197')
call_4344 = func_4196_call()
call_4345 = func_4196_call()
func_2205_call = mod.get_global_var('func_2205')
func_2206_call = mutated_mod.get_global_var('func_2206')
call_4350 = relay.TupleGetItem(func_2205_call(), 1)
call_4351 = relay.TupleGetItem(func_2206_call(), 1)
func_382_call = mod.get_global_var('func_382')
func_384_call = mutated_mod.get_global_var('func_384')
var_4358 = relay.var("var_4358", dtype = "float32", shape = (21, 3))#candidate|4358|(21, 3)|var|float32
call_4357 = func_382_call(relay.reshape(var_4358.astype('float32'), [1, 7, 9]))
call_4359 = func_382_call(relay.reshape(var_4358.astype('float32'), [1, 7, 9]))
bop_4360 = relay.bitwise_or(var_4358.astype('uint16'), relay.reshape(call_4357.astype('uint16'), relay.shape_of(var_4358))) # shape=(21, 3)
bop_4363 = relay.bitwise_or(var_4358.astype('uint16'), relay.reshape(call_4359.astype('uint16'), relay.shape_of(var_4358))) # shape=(21, 3)
output = relay.Tuple([call_4344,call_4350,bop_4360,])
output2 = relay.Tuple([call_4345,call_4351,bop_4363,])
func_4365 = relay.Function([var_4358,], output)
mod['func_4365'] = func_4365
mod = relay.transform.InferType()(mod)
mutated_mod['func_4365'] = func_4365
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4366 = relay.var("var_4366", dtype = "float32", shape = (21, 3))#candidate|4366|(21, 3)|var|float32
func_4365_call = mutated_mod.get_global_var('func_4365')
call_4367 = func_4365_call(var_4366)
output = call_4367
func_4368 = relay.Function([var_4366], output)
mutated_mod['func_4368'] = func_4368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_860_call = mod.get_global_var('func_860')
func_862_call = mutated_mod.get_global_var('func_862')
call_4382 = relay.TupleGetItem(func_860_call(), 7)
call_4383 = relay.TupleGetItem(func_862_call(), 7)
output = call_4382
output2 = call_4383
func_4394 = relay.Function([], output)
mod['func_4394'] = func_4394
mod = relay.transform.InferType()(mod)
output = func_4394()
func_4395 = relay.Function([], output)
mutated_mod['func_4395'] = func_4395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3106_call = mod.get_global_var('func_3106')
func_3107_call = mutated_mod.get_global_var('func_3107')
call_4416 = func_3106_call()
call_4417 = func_3106_call()
output = call_4416
output2 = call_4417
func_4424 = relay.Function([], output)
mod['func_4424'] = func_4424
mod = relay.transform.InferType()(mod)
mutated_mod['func_4424'] = func_4424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4424_call = mutated_mod.get_global_var('func_4424')
call_4425 = func_4424_call()
output = call_4425
func_4426 = relay.Function([], output)
mutated_mod['func_4426'] = func_4426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3282_call = mod.get_global_var('func_3282')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_4446 = relay.TupleGetItem(func_3282_call(), 3)
call_4447 = relay.TupleGetItem(func_3283_call(), 3)
func_3716_call = mod.get_global_var('func_3716')
func_3718_call = mutated_mod.get_global_var('func_3718')
call_4448 = relay.TupleGetItem(func_3716_call(), 0)
call_4449 = relay.TupleGetItem(func_3718_call(), 0)
output = relay.Tuple([call_4446,call_4448,])
output2 = relay.Tuple([call_4447,call_4449,])
func_4452 = relay.Function([], output)
mod['func_4452'] = func_4452
mod = relay.transform.InferType()(mod)
mutated_mod['func_4452'] = func_4452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4452_call = mutated_mod.get_global_var('func_4452')
call_4453 = func_4452_call()
output = call_4453
func_4454 = relay.Function([], output)
mutated_mod['func_4454'] = func_4454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2015_call = mod.get_global_var('func_2015')
func_2016_call = mutated_mod.get_global_var('func_2016')
call_4460 = relay.TupleGetItem(func_2015_call(), 3)
call_4461 = relay.TupleGetItem(func_2016_call(), 3)
output = call_4460
output2 = call_4461
func_4462 = relay.Function([], output)
mod['func_4462'] = func_4462
mod = relay.transform.InferType()(mod)
output = func_4462()
func_4463 = relay.Function([], output)
mutated_mod['func_4463'] = func_4463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4394_call = mod.get_global_var('func_4394')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_4511 = func_4394_call()
call_4512 = func_4394_call()
output = relay.Tuple([call_4511,])
output2 = relay.Tuple([call_4512,])
func_4518 = relay.Function([], output)
mod['func_4518'] = func_4518
mod = relay.transform.InferType()(mod)
mutated_mod['func_4518'] = func_4518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4518_call = mutated_mod.get_global_var('func_4518')
call_4519 = func_4518_call()
output = call_4519
func_4520 = relay.Function([], output)
mutated_mod['func_4520'] = func_4520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2141_call = mod.get_global_var('func_2141')
func_2142_call = mutated_mod.get_global_var('func_2142')
call_4521 = relay.TupleGetItem(func_2141_call(), 0)
call_4522 = relay.TupleGetItem(func_2142_call(), 0)
var_4529 = relay.var("var_4529", dtype = "bool", shape = (13, 2, 4))#candidate|4529|(13, 2, 4)|var|bool
bop_4530 = relay.less_equal(call_4521.astype('bool'), relay.reshape(var_4529.astype('bool'), relay.shape_of(call_4521))) # shape=(13, 2, 4)
bop_4533 = relay.less_equal(call_4522.astype('bool'), relay.reshape(var_4529.astype('bool'), relay.shape_of(call_4522))) # shape=(13, 2, 4)
func_2559_call = mod.get_global_var('func_2559')
func_2562_call = mutated_mod.get_global_var('func_2562')
const_4537 = relay.const([-5,2,-7,2,6,-2,-10,-6,-4,8,3,9,-8,2,-5,4,7,9,4,-9,-1,-5,7,-5,-8,-8,7,-6,10,-2,5,8,1,6,-3,8,-8,-5,4,10,3,3,-7,-6,7,5,4,-3,-3,4,6,9,5,-8,6,-1,6,-10,4,-10,-5,-2,8,-6,6,6,2,-5,1,-5,1,-5,-1,10,2,6,-6,-6,6,5,10,4,-1,8,-2,9,1,10,3,-7,9,10,-4,10,-8,1,-10,-1,-4,3,2,-9,9,4,9,-5,-7,-4,3,10,-10,-1,-6,9,1,-5,-5,-7,6,-6,-5,3,-10,-4,10,-6,6,1,2,-1,-4,-8,-1,-5,6,-1,-4,6,1,7,-5,2,-2,3,-2,7,-1,7,1,10,-5,10,-5,-3,6,8,5,-5,4,9,4,-4,-4,-8,4,2,-7,1,1,-8,6,-10,-9,-5,5,-9,-1,-4,3,-10,8,-6,-6,-8,-1,-6,6,5,1,6,-4,-4,5,2,8,5,-3,2,8,-8,10,-3,10,-10,9,-8,1,8,10,4,-1,5,-7,-5,10,-3,7,-5,-7,-9,-10,-7,-1,-7], dtype = "uint8")#candidate|4537|(224,)|const|uint8
call_4536 = relay.TupleGetItem(func_2559_call(relay.reshape(const_4537.astype('uint8'), [2, 7, 16]), relay.reshape(const_4537.astype('uint8'), [2, 7, 16]), ), 2)
call_4538 = relay.TupleGetItem(func_2562_call(relay.reshape(const_4537.astype('uint8'), [2, 7, 16]), relay.reshape(const_4537.astype('uint8'), [2, 7, 16]), ), 2)
output = relay.Tuple([bop_4530,call_4536,const_4537,])
output2 = relay.Tuple([bop_4533,call_4538,const_4537,])
func_4547 = relay.Function([var_4529,], output)
mod['func_4547'] = func_4547
mod = relay.transform.InferType()(mod)
mutated_mod['func_4547'] = func_4547
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4548 = relay.var("var_4548", dtype = "bool", shape = (13, 2, 4))#candidate|4548|(13, 2, 4)|var|bool
func_4547_call = mutated_mod.get_global_var('func_4547')
call_4549 = func_4547_call(var_4548)
output = call_4549
func_4550 = relay.Function([var_4548], output)
mutated_mod['func_4550'] = func_4550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4555 = relay.var("var_4555", dtype = "float64", shape = (14, 4, 1))#candidate|4555|(14, 4, 1)|var|float64
uop_4556 = relay.acosh(var_4555.astype('float64')) # shape=(14, 4, 1)
func_3509_call = mod.get_global_var('func_3509')
func_3510_call = mutated_mod.get_global_var('func_3510')
call_4559 = relay.TupleGetItem(func_3509_call(), 0)
call_4560 = relay.TupleGetItem(func_3510_call(), 0)
uop_4566 = relay.cos(var_4555.astype('float64')) # shape=(14, 4, 1)
const_4576 = relay.const([[[2.694953],[3.401838],[-8.523045],[-9.290697]],[[7.988550],[-7.499324],[-5.223745],[-3.509520]],[[-4.938481],[3.691314],[3.446879],[-8.417130]],[[-2.362620],[8.092462],[2.682138],[0.100653]],[[-0.412305],[-4.182032],[0.623422],[4.538167]],[[-5.213513],[-9.966860],[-3.135985],[8.200603]],[[8.279301],[6.587928],[9.358323],[-8.865819]],[[-1.800015],[3.463972],[-4.954380],[-2.566457]],[[-9.100100],[1.888751],[-6.301528],[-0.811361]],[[-6.403882],[8.352171],[-7.574807],[5.137117]],[[9.614899],[-4.715212],[-6.361554],[-2.882451]],[[-1.463337],[-8.317434],[-4.199130],[0.049609]],[[-5.497204],[-8.610479],[1.528708],[2.118278]],[[-0.703985],[-0.672588],[2.045115],[-7.942585]]], dtype = "float64")#candidate|4576|(14, 4, 1)|const|float64
bop_4577 = relay.floor_mod(uop_4566.astype('float32'), relay.reshape(const_4576.astype('float32'), relay.shape_of(uop_4566))) # shape=(14, 4, 1)
func_2650_call = mod.get_global_var('func_2650')
func_2652_call = mutated_mod.get_global_var('func_2652')
call_4582 = func_2650_call()
call_4583 = func_2650_call()
bop_4589 = relay.minimum(var_4555.astype('uint32'), relay.reshape(const_4576.astype('uint32'), relay.shape_of(var_4555))) # shape=(14, 4, 1)
uop_4594 = relay.sinh(uop_4556.astype('float64')) # shape=(14, 4, 1)
uop_4596 = relay.erf(uop_4594.astype('float64')) # shape=(14, 4, 1)
func_936_call = mod.get_global_var('func_936')
func_942_call = mutated_mod.get_global_var('func_942')
var_4604 = relay.var("var_4604", dtype = "float32", shape = (2048,))#candidate|4604|(2048,)|var|float32
call_4603 = relay.TupleGetItem(func_936_call(relay.reshape(var_4604.astype('float32'), [8, 16, 16]), relay.reshape(var_4604.astype('float32'), [8, 16, 16]), relay.reshape(var_4604.astype('float32'), [8, 16, 16]), relay.reshape(call_4559.astype('bool'), [4, 40]), ), 0)
call_4605 = relay.TupleGetItem(func_942_call(relay.reshape(var_4604.astype('float32'), [8, 16, 16]), relay.reshape(var_4604.astype('float32'), [8, 16, 16]), relay.reshape(var_4604.astype('float32'), [8, 16, 16]), relay.reshape(call_4559.astype('bool'), [4, 40]), ), 0)
bop_4613 = relay.logical_xor(uop_4556.astype('int32'), relay.reshape(bop_4577.astype('int32'), relay.shape_of(uop_4556))) # shape=(14, 4, 1)
func_84_call = mod.get_global_var('func_84')
func_87_call = mutated_mod.get_global_var('func_87')
call_4620 = relay.TupleGetItem(func_84_call(relay.reshape(call_4559.astype('bool'), [2, 10, 8]), relay.reshape(call_4559.astype('bool'), [2, 10, 8]), ), 0)
call_4621 = relay.TupleGetItem(func_87_call(relay.reshape(call_4559.astype('bool'), [2, 10, 8]), relay.reshape(call_4559.astype('bool'), [2, 10, 8]), ), 0)
output = relay.Tuple([call_4559,call_4582,bop_4589,uop_4596,call_4603,var_4604,bop_4613,call_4620,])
output2 = relay.Tuple([call_4560,call_4583,bop_4589,uop_4596,call_4605,var_4604,bop_4613,call_4621,])
func_4623 = relay.Function([var_4555,var_4604,], output)
mod['func_4623'] = func_4623
mod = relay.transform.InferType()(mod)
var_4624 = relay.var("var_4624", dtype = "float64", shape = (14, 4, 1))#candidate|4624|(14, 4, 1)|var|float64
var_4625 = relay.var("var_4625", dtype = "float32", shape = (2048,))#candidate|4625|(2048,)|var|float32
output = func_4623(var_4624,var_4625,)
func_4626 = relay.Function([var_4624,var_4625,], output)
mutated_mod['func_4626'] = func_4626
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4646 = relay.const([[[1,-1],[6,-9],[-8,3],[6,-3],[-1,-1],[9,7],[3,-3],[-10,3],[10,2],[-3,-8]],[[3,-6],[-1,1],[-2,-2],[-10,5],[6,-10],[-6,8],[8,-4],[2,-2],[3,7],[-9,-7]]], dtype = "int64")#candidate|4646|(2, 10, 2)|const|int64
var_4647 = relay.var("var_4647", dtype = "int64", shape = (2, 10, 2))#candidate|4647|(2, 10, 2)|var|int64
bop_4648 = relay.equal(const_4646.astype('bool'), relay.reshape(var_4647.astype('bool'), relay.shape_of(const_4646))) # shape=(2, 10, 2)
output = bop_4648
output2 = bop_4648
F = relay.Function([var_4647,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_4647,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

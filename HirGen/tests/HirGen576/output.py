import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_240 = relay.var("var_240", dtype = "uint64", shape = (9, 9, 2))#candidate|240|(9, 9, 2)|var|uint64
var_241 = relay.var("var_241", dtype = "uint64", shape = (9, 9, 2))#candidate|241|(9, 9, 2)|var|uint64
bop_242 = relay.multiply(var_240.astype('uint64'), relay.reshape(var_241.astype('uint64'), relay.shape_of(var_240))) # shape=(9, 9, 2)
uop_268 = relay.rsqrt(var_240.astype('float32')) # shape=(9, 9, 2)
bop_275 = relay.minimum(uop_268.astype('uint64'), relay.reshape(var_241.astype('uint64'), relay.shape_of(uop_268))) # shape=(9, 9, 2)
uop_282 = relay.tan(uop_268.astype('float64')) # shape=(9, 9, 2)
output = relay.Tuple([bop_242,bop_275,uop_282,])
output2 = relay.Tuple([bop_242,bop_275,uop_282,])
func_288 = relay.Function([var_240,var_241,], output)
mod['func_288'] = func_288
mod = relay.transform.InferType()(mod)
mutated_mod['func_288'] = func_288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_288_call = mutated_mod.get_global_var('func_288')
var_290 = relay.var("var_290", dtype = "uint64", shape = (9, 9, 2))#candidate|290|(9, 9, 2)|var|uint64
var_291 = relay.var("var_291", dtype = "uint64", shape = (9, 9, 2))#candidate|291|(9, 9, 2)|var|uint64
call_289 = func_288_call(var_290,var_291,)
output = call_289
func_292 = relay.Function([var_290,var_291,], output)
mutated_mod['func_292'] = func_292
mutated_mod = relay.transform.InferType()(mutated_mod)
var_392 = relay.var("var_392", dtype = "float32", shape = (9, 16, 14))#candidate|392|(9, 16, 14)|var|float32
uop_393 = relay.sqrt(var_392.astype('float32')) # shape=(9, 16, 14)
func_288_call = mod.get_global_var('func_288')
func_292_call = mutated_mod.get_global_var('func_292')
var_401 = relay.var("var_401", dtype = "uint64", shape = (162,))#candidate|401|(162,)|var|uint64
call_400 = relay.TupleGetItem(func_288_call(relay.reshape(var_401.astype('uint64'), [9, 9, 2]), relay.reshape(var_401.astype('uint64'), [9, 9, 2]), ), 2)
call_402 = relay.TupleGetItem(func_292_call(relay.reshape(var_401.astype('uint64'), [9, 9, 2]), relay.reshape(var_401.astype('uint64'), [9, 9, 2]), ), 2)
output = relay.Tuple([uop_393,call_400,var_401,])
output2 = relay.Tuple([uop_393,call_402,var_401,])
func_406 = relay.Function([var_392,var_401,], output)
mod['func_406'] = func_406
mod = relay.transform.InferType()(mod)
var_407 = relay.var("var_407", dtype = "float32", shape = (9, 16, 14))#candidate|407|(9, 16, 14)|var|float32
var_408 = relay.var("var_408", dtype = "uint64", shape = (162,))#candidate|408|(162,)|var|uint64
output = func_406(var_407,var_408,)
func_409 = relay.Function([var_407,var_408,], output)
mutated_mod['func_409'] = func_409
mutated_mod = relay.transform.InferType()(mutated_mod)
var_597 = relay.var("var_597", dtype = "bool", shape = (1, 3, 10))#candidate|597|(1, 3, 10)|var|bool
const_598 = relay.const([[[False,False,False,False,False,False,False,False,False,False],[False,False,False,True,False,False,False,True,False,True],[False,False,False,False,True,True,True,False,False,False]],[[False,False,False,False,True,True,False,True,True,True],[True,False,True,False,True,True,False,True,False,True],[False,True,True,True,True,False,False,False,True,False]],[[False,True,False,True,False,True,False,False,False,True],[True,False,True,False,False,False,False,False,False,False],[True,False,True,False,True,True,True,True,True,False]],[[True,False,True,False,True,True,True,True,False,False],[False,True,False,False,False,False,False,False,False,False],[False,False,True,False,False,False,True,True,False,False]],[[True,True,False,True,True,True,False,True,False,False],[True,True,False,True,True,False,True,True,False,True],[False,False,True,True,False,False,True,True,True,True]],[[False,True,True,False,False,False,False,False,True,False],[True,False,True,True,True,False,True,False,False,True],[False,False,True,True,True,False,True,False,True,True]],[[False,True,False,True,False,False,True,False,False,True],[False,True,True,False,False,True,False,True,True,False],[False,True,False,False,True,True,False,False,False,True]],[[True,False,True,True,True,True,True,False,True,False],[True,True,True,True,True,False,False,False,True,True],[False,False,True,True,False,False,False,False,False,False]],[[True,False,False,False,True,True,True,True,False,False],[True,True,False,False,False,True,False,False,True,False],[False,False,False,True,True,False,True,True,False,True]],[[False,True,True,False,False,True,False,True,False,False],[False,True,True,False,True,False,True,False,False,True],[False,False,True,False,True,False,False,False,True,False]]], dtype = "bool")#candidate|598|(10, 3, 10)|const|bool
bop_599 = relay.logical_and(var_597.astype('bool'), const_598.astype('bool')) # shape=(10, 3, 10)
output = bop_599
output2 = bop_599
func_609 = relay.Function([var_597,], output)
mod['func_609'] = func_609
mod = relay.transform.InferType()(mod)
mutated_mod['func_609'] = func_609
mutated_mod = relay.transform.InferType()(mutated_mod)
var_610 = relay.var("var_610", dtype = "bool", shape = (1, 3, 10))#candidate|610|(1, 3, 10)|var|bool
func_609_call = mutated_mod.get_global_var('func_609')
call_611 = func_609_call(var_610)
output = call_611
func_612 = relay.Function([var_610], output)
mutated_mod['func_612'] = func_612
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1387 = relay.var("var_1387", dtype = "float32", shape = (3, 13, 1))#candidate|1387|(3, 13, 1)|var|float32
uop_1388 = relay.sinh(var_1387.astype('float32')) # shape=(3, 13, 1)
func_406_call = mod.get_global_var('func_406')
func_409_call = mutated_mod.get_global_var('func_409')
const_1395 = relay.const([-2.750930,8.695540,-0.186186,4.431654,2.263076,-0.250912,-8.088639,0.793743,-5.816057,0.431448,2.636687,-2.066947,2.211017,-1.341235,-8.857262,8.882966,4.691327,6.538815,5.457132,-8.566636,3.038818,7.049665,-1.891697,-4.026714,-1.094128,-5.572612,6.756592,-5.448846,-0.234596,3.827697,-8.823318,7.867471,-1.456204,-9.343213,0.988531,-7.280492,0.881879,-0.807317,8.717197,-2.467851,-2.880960,1.646726,9.981426,1.619797,-1.253387,7.844958,7.034622,-1.053139,4.607761,-8.092071,4.625585,8.966188,-9.144453,6.480857,-4.434615,-2.356051,-0.595273,0.925256,2.258354,0.562852,3.129309,9.050894,5.750548,-2.345721,-6.396586,7.604228,-6.846023,-0.007336,1.761381,-3.084432,-7.420605,-8.864685,-4.639587,-6.178071,-3.908027,7.535256,-4.948429,0.649466,-2.987312,-4.256746,-9.044992,-4.253497,0.571617,3.221973,-7.340538,-0.395267,-5.617386,1.523772,-2.824620,3.114204,5.603845,1.717324,7.772010,5.353553,-5.969996,-3.328647,-0.899134,0.440378,0.748962,-3.529572,-4.269480,-9.640069,0.962160,4.014686,-9.467623,2.574258,5.439170,9.063129,2.905667,-7.272556,2.539678,-4.243082,-3.156826,9.737707,-5.430909,6.920843,-0.629105,-6.146759,-1.862115,-2.429531,-2.015826,-3.588122,-7.762832,-8.262351,7.588956,3.388231,5.408097,-2.328605,-2.910726,4.663249,2.273489,7.326320,1.437697,6.765507,-4.504395,-9.466065,8.985505,-0.873623,-7.269459,6.746343,-4.257820,-8.928911,-2.762052,1.683131,-4.191156,-8.798324,4.362707,-9.295275,6.087146,-9.739502,9.325442,-5.550526,-2.897800,-1.975527,4.369190,-7.680642,-0.043749,9.606202,5.281786,0.401610,0.324851,1.503319,-9.702377,8.033696,2.880226,8.375653,-5.909133,-1.804167,-4.314232,-8.500450,-2.638103,3.168532,3.789675,-1.157292,4.066197,8.805191,6.052944,-9.780307,-5.393981,2.846265,0.079855,-2.536043,-6.560231,-1.305953,3.777049,-8.836291,2.802108,-5.419923,-1.230297,0.696599,9.415523,-6.183043,6.367493,-6.501109,8.345167,-1.904928,-9.295384,-9.252238,1.369243,9.880630,7.448971,-0.382390,-7.160303,-0.179881,1.122713,-8.571761,-7.316184,1.669466,5.542380,5.626156,5.640859,-7.182279,-1.754424,-9.012236,9.735643,-0.622377,6.040067,-9.362019,9.194640,-1.482948,-0.401500,4.952073,-5.884791,2.873778,-9.574398,-0.458425,-1.015300,7.846046,9.253777,-3.604595,-7.369749,-9.136781,0.319097,0.886434,7.882076,-6.926970,-0.758971,-5.028884,-8.690423,3.054851,-2.363337,7.384276,-6.549828,6.845149,-1.846789,-9.665356,-4.441292,9.587027,2.726267,-0.307602,-4.679441,4.396830,5.530165,0.476004,4.885181,-6.044116,-6.000367,-6.794925,3.782546,9.960771,7.041517,-4.552992,-2.370446,5.293961,-0.246569,-3.352285,-8.822067,1.958317,3.825418,-3.081242,8.996760,-6.114651,-1.886142,-8.227059,-9.078438,4.269096,-2.993727,9.461037,8.491142,-1.530311,-0.683607,7.387014,-8.658767,-5.205332,4.069173,-1.415412,-0.223616,9.303241,4.812395,-6.635659,3.200946,6.770099,9.942283,-8.947371,-3.068786,-2.230789,1.868624,0.594170,-5.260935,3.776164,-9.010469,4.778092,-8.655832,0.432489,-3.197066,7.822439,-1.324882,1.371891,9.953655,-0.838336,9.208947,-4.028967,-8.373126,-3.638197,-8.628239,9.315959,-6.040118,9.382313,3.227187,-7.988062,-2.591660,9.006888,4.945275,-3.030592,-2.887459,-6.440127,5.252095,-7.291564,-0.713411,-6.980006,-9.087562,-3.718032,-7.675579,9.054107,-0.852571,-2.051634,7.047892,4.286559,-8.829667,9.593959,3.285767,-6.729843,-1.978677,-9.060756,-4.018932,3.182117,-7.614558,7.624389,8.007274,-5.294451,-0.004471,-0.457967,-7.877852,-5.432607,4.033956,7.145611,6.605354,9.627897,-4.454724,5.107084,1.558705,9.092799,-1.249530,-1.601722,3.709826,0.498878,4.814013,4.393318,-9.691295,3.831699,8.263458,-1.677498,-5.106206,8.731714,1.187766,2.177423,0.475094,7.781004,5.441142,-6.940868,-9.076083,8.269639,0.775160,-3.721597,-7.470570,-4.182731,-5.659155,6.053899,-5.284777,-3.581591,3.634175,-1.765847,-8.989186,-3.732422,-4.066419,2.471141,-4.358004,-9.569223,2.248376,3.233617,-8.849637,-5.012533,-1.772736,-5.620426,-6.819772,8.603557,-6.493061,-6.793538,9.332134,8.501706,3.592028,-0.205951,8.731687,-3.689782,7.676073,-8.229114,8.549364,5.078469,-0.507105,-0.525534,-9.361102,-6.146062,-9.397154,8.665140,7.319672,5.423595,8.089117,5.926645,-4.884634,-8.234632,2.457104,-9.612153,6.762576,7.031783,6.249507,-0.305155,5.298689,-1.664231,0.565274,3.723485,-6.072652,-2.048297,-1.583543,-9.570552,3.102355,2.214032,-4.078666,2.667194,6.913979,8.052029,-8.707443,-6.469553,9.404536,1.221710,-7.158435,3.070419,6.268876,9.501418,2.514744,9.348674,-7.028070,-5.489226,-2.953087,-7.915481,-1.849276,-3.109090,9.762663,-8.154082,0.374849,3.417186,-3.824612,3.532015,-0.698472,7.260097,-0.387946,-5.166720,4.443790,8.258405,-2.514665,4.552859,-2.588482,-7.368605,-5.707456,-2.661381,-4.046573,-1.838753,-1.223973,9.241251,-3.814158,6.372798,9.401268,7.543378,-0.424421,-4.462192,-8.800592,7.162312,9.639308,-4.913865,-9.736979,5.105703,-4.468051,8.645988,5.465405,-9.614228,6.395068,9.648716,4.117248,-9.016893,4.343935,3.682217,-6.666955,-3.196068,-1.548140,-2.500993,8.559029,7.324412,2.710872,0.993764,5.199152,-9.921496,3.257697,5.407296,-1.544329,-2.254128,-0.244855,9.377038,-7.716800,-2.854992,-1.304565,0.211577,7.650405,9.809676,9.390810,5.419813,-4.206806,9.518245,6.274560,5.078429,-3.321334,-3.797036,0.732088,-1.278473,3.366519,-6.256669,2.891575,-1.147221,-0.343253,1.015296,-4.906201,2.310161,-6.716013,-8.328694,7.104992,9.479218,3.934855,9.320471,0.019304,-0.148845,-9.383305,-8.172872,-1.514827,-3.196733,-9.072303,-1.209987,5.834384,-7.213530,-6.877190,3.316028,-9.014734,-4.692527,-3.718781,-8.049377,3.535265,2.192684,9.947407,3.876546,-4.828050,-3.701188,9.862951,9.138292,-3.649071,-1.373470,-3.574382,5.916029,-4.116148,-2.391542,2.189911,-6.529889,4.629374,-1.674908,0.965932,-2.681736,-7.427197,-2.198271,9.710450,-6.982255,6.026591,-3.746276,-6.455532,-1.047171,0.691518,-1.399448,1.698020,3.767974,-0.746258,3.110375,2.031769,9.376499,5.919312,2.451817,1.032100,-2.157525,-6.594262,-4.592426,-7.812288,1.876958,6.651854,-8.542445,-1.759173,8.402137,-0.268285,-4.746911,-7.854561,1.516291,-9.731123,-2.761221,-2.668149,-7.060973,8.515880,7.986437,-2.510093,-4.400502,-4.532376,-3.676633,-1.958872,1.299582,6.010472,2.443333,0.151186,7.230709,1.782980,0.066178,-2.485846,7.751098,-0.983111,-0.231084,4.043335,-7.105056,1.803171,0.033513,-3.011996,-2.803380,-1.003471,0.640780,-8.902728,6.035084,-5.934631,1.242174,1.616735,9.124862,-5.908004,-0.374549,-0.212304,3.890886,6.093700,8.468384,-7.066711,6.696234,8.472587,-8.967841,7.319063,-6.463095,4.373217,5.146496,-7.198943,-9.187724,-8.258635,-2.862431,-7.468880,-7.496363,-6.506357,1.872804,-4.273751,-4.825563,-9.907267,9.566391,-7.080510,7.844329,-0.729556,-6.464731,1.758360,1.098461,0.263594,-3.310045,0.764362,-3.492295,8.068952,-8.782815,-6.737724,0.564339,-0.709511,0.772087,-3.219227,-4.543887,7.652495,6.521970,2.969089,-9.093557,8.473902,-9.821731,6.231698,-3.162271,1.592690,-6.946220,6.862947,-6.433417,6.764652,2.192224,-1.200195,-9.688979,-5.324644,8.925821,-3.776402,1.312893,-9.531235,-5.523481,-3.807492,-4.957761,-1.547552,1.188887,8.327095,6.393558,9.459286,-6.958813,-1.699102,5.730738,1.475925,-8.179207,-3.390474,5.091762,-5.074075,8.002413,-5.705330,-1.294559,-5.850103,1.793815,3.359869,-0.414734,5.059836,-1.847940,8.718700,-8.485151,-5.995094,-3.951100,-9.085279,-0.975311,-3.750575,3.232101,4.442618,3.497593,-3.275011,3.292043,9.761559,-8.460426,3.303215,-3.595406,3.146472,1.902878,7.893764,-5.915537,9.347716,-7.780137,-3.987896,-1.883384,5.616410,-1.682136,-0.889387,6.912843,9.774621,-5.562817,7.235089,-2.965596,-1.276787,-1.689811,1.697257,5.957838,0.740457,-3.743945,-5.884670,-7.337461,-9.836048,5.246849,-9.590807,-1.720669,-4.817409,-1.106500,6.742511,-8.369820,-6.055347,-7.474785,-9.722053,-4.760059,3.245540,6.876228,-0.017789,-9.647087,-8.333037,1.042668,-9.249627,2.691501,7.854058,-4.429849,-0.529347,-6.630108,-6.521554,-0.221708,-3.322585,-4.857954,-4.101593,0.386996,7.234277,3.067525,8.613751,5.440656,6.818014,9.135137,-8.046874,2.687475,-8.218604,-1.845334,-2.556242,9.937348,9.869335,6.545887,-9.377857,-9.678458,-1.611267,6.133555,0.991387,6.625920,2.889167,3.307450,6.826104,-0.514979,-5.343225,-7.484072,-5.001024,2.851620,7.051749,1.755556,-4.044659,-5.215936,8.490335,-6.889719,-5.791156,2.317952,-3.390921,1.326874,-7.712922,-5.397922,-5.841252,3.592614,-0.943464,8.447126,7.468918,9.028566,-3.554872,-8.951701,-0.651644,-2.917148,7.098429,-9.191118,-3.453691,4.566358,-9.689307,9.799615,-4.713994,1.526737,-8.071311,-8.660825,9.707305,0.355285,5.421472,3.269361,-0.564520,-0.721674,-2.600462,-2.337698,5.921042,1.648508,8.617175,-7.677066,2.886431,-1.795128,-2.021895,-7.904714,8.605783,-6.953034,5.813601,-0.152173,8.830862,6.050154,1.870400,9.228912,8.693254,-5.686401,0.541342,-7.801322,-6.163584,-6.793243,-0.065704,-6.855501,-0.440894,-4.820120,4.498767,-0.532092,-3.945159,-2.284944,7.030595,-8.963233,-1.050382,9.606798,3.710274,-8.372591,-7.822367,7.690146,9.397267,-2.749363,-8.793278,-8.225054,5.909539,-0.329629,-8.301137,-4.020781,-1.171184,9.578470,1.168689,2.176405,-6.624861,0.279396,-3.884564,0.973033,-3.512486,-3.992994,7.824896,-4.775754,7.036116,-7.982541,7.488947,6.849644,7.302310,-9.116044,9.095135,5.679192,-6.303237,-6.668620,2.009134,-0.234575,-2.527247,-2.889703,4.955551,-3.762095,-2.714031,0.506187,9.169846,5.853175,3.511500,-0.258883,9.581461,-1.517876,-3.896350,3.802194,5.977305,7.219207,-0.831477,1.067419,3.662031,-6.145251,-7.537836,8.230844,-8.744452,-0.307976,7.255450,-1.841393,-0.417632,-8.532439,3.640859,9.983855,3.955894,-1.526163,-6.069385,-3.066394,-9.978983,3.347746,-3.237290,-6.111380,-7.317889,-6.029092,2.367200,-4.329439,2.631520,-0.009276,-8.389164,2.980056,3.538441,3.809100,0.241758,2.250858,-5.424724,-3.766750,5.421334,0.135182,0.392228,5.373694,-1.117963,3.625702,-2.010417,2.930528,6.994854,6.304091,-2.867149,-6.148641,-8.549885,7.265811,9.035129,1.492372,0.481394,-4.900564,-2.254694,2.262603,8.650461,-3.489427,6.051703,7.517406,4.180379,9.371957,0.206603,7.938128,2.856559,5.958655,8.525572,7.996844,7.958787,9.271965,-9.641395,6.870935,7.078831,3.043312,6.958799,4.688179,4.129527,-5.290507,1.461733,-8.009327,5.873143,2.456412,-5.079531,4.276662,-3.795418,4.009334,0.067286,-6.059845,8.775767,8.508404,-4.177314,0.641690,6.199329,2.499611,5.276563,6.351218,3.390657,0.364334,-0.513931,0.215193,-4.933004,4.767961,7.721191,-5.980489,1.322307,8.944265,5.353155,-0.443447,5.029474,2.241298,6.823601,6.959051,2.962678,8.587934,5.545013,-7.575616,9.471931,8.181842,0.087600,9.202869,-9.893505,5.011085,9.572488,-1.464707,4.590144,-2.545388,7.855969,2.373236,-7.169130,-5.825269,6.917676,5.778137,-1.602474,-8.767510,5.572550,-3.682733,-2.760180,9.351787,7.034863,-7.635178,7.944032,-0.482280,-6.814626,6.263857,-2.625731,-1.654935,-7.744619,-3.031986,1.700771,-5.536536,9.366495,-1.698736,-6.905991,5.196186,0.512309,-9.019305,-3.237727,2.092209,-3.684014,-4.157136,-1.831421,6.204799,-1.709103,7.361610,-3.336476,-3.330713,1.144328,0.955135,-0.931850,5.211637,5.026780,-6.674354,-2.775194,-8.074401,-8.083798,5.225466,-9.651390,8.614869,2.127318,-4.845312,5.876904,4.546084,0.369672,-8.217163,4.443425,3.653434,-2.705086,9.499328,-6.529409,0.569023,-8.730822,1.515025,6.205918,2.905342,-2.230609,-2.722131,4.456538,-2.239265,1.682627,-8.063318,-7.520376,7.285684,-9.815207,-5.205984,-4.263011,5.781047,-8.263374,8.399687,-6.731457,-1.215958,-2.223619,-7.273595,-7.997408,-2.711321,2.719214,1.186737,6.602628,-5.362154,5.761970,-8.120773,5.137428,-4.281499,-7.273356,5.023861,-2.786891,6.700163,0.557439,-3.946242,-7.855615,5.087012,-0.792425,-7.047443,5.720180,4.649259,2.126882,-8.763855,4.839463,-8.089825,2.513964,-1.006084,-8.445004,-6.603425,8.558752,6.263919,-1.458044,-0.547459,4.496779,-2.500574,8.166294,4.269525,1.617338,8.222768,-1.890674,-3.431278,-1.809306,-4.027364,9.211629,-1.014931,9.520797,-3.090679,-6.315577,-0.150949,3.223374,-1.655181,-5.816436,6.766440,0.519537,0.073410,9.544944,1.506193,-6.476198,-4.815047,4.120082,5.327309,-0.600156,-0.077786,-8.536504,2.214042,3.119103,-3.228804,9.334574,1.954396,0.937910,3.134146,-3.657387,-9.680872,-8.281207,-3.829362,2.090077,-6.754249,-1.746307,-7.045894,-8.827786,-1.950229,8.674033,9.619980,5.952198,5.384173,6.146324,9.549544,-1.233691,2.008443,-2.733030,-0.576817,9.093295,8.609271,0.628669,-2.841339,6.947182,1.523490,4.892755,-7.113211,8.309148,8.613197,-4.674892,-8.315280,-5.935170,7.729240,-1.542917,-4.748204,-1.379184,5.389593,8.136340,5.427014,-0.499213,8.787629,-2.354912,-6.515448,-3.967643,-9.475483,-6.563679,0.717038,-6.338153,2.058379,-1.992794,-6.291294,-2.124008,-9.697385,4.980147,-9.825250,-9.949417,-2.107357,8.121487,-2.406539,-5.485953,-6.042736,1.017310,-3.591739,-9.523075,-6.848695,3.982714,-0.919132,-3.742481,-2.029824,-1.863951,-3.261107,-4.840903,3.689459,0.533539,9.750594,0.168085,0.542855,3.057064,-9.197244,3.656941,-3.264589,-0.497167,-0.060768,5.616344,-0.450327,-2.566552,-4.054575,0.624995,-7.317261,3.304537,8.042413,-9.875745,-2.924365,-9.928112,1.420638,1.571389,-4.778991,-6.223818,8.755024,9.913078,-5.678401,-1.247478,9.911242,-7.229102,-5.178876,1.393444,-1.264184,-0.079492,-2.037265,-1.942052,9.928250,9.999259,3.352766,-6.695889,-1.876609,-9.455666,5.161736,5.631048,1.615537,3.377131,-0.146320,9.821664,-4.370492,7.099473,-6.989932,-0.841831,6.873710,1.924122,-2.230123,8.053008,-5.220536,8.071856,-3.948242,-5.980828,-0.986938,-5.291596,-3.356170,-9.386053,3.991340,1.064660,5.554479,1.688761,-8.085172,9.741348,3.065510,9.219818,-3.826813,2.515915,4.695819,-8.122396,9.508407,-1.838053,-1.320559,-5.347423,-3.301746,3.962742,-7.340253,8.117277,-9.355428,9.138798,3.333573,8.044232,5.335735,3.683599,-4.836716,-2.558300,-3.354480,5.625241,5.400247,-0.229838,-4.181098,7.761328,8.838463,9.357500,8.814114,6.499241,0.415984,8.639300,4.415742,7.841621,-4.246790,-1.986881,8.956114,-6.084565,9.217071,-9.527466,-6.147337,-8.175411,-4.217912,1.126527,-1.182609,3.252647,4.420359,-5.903508,1.705906,-8.282636,-9.126071,-9.707893,7.383809,-9.264889,8.968064,-9.313585,9.195686,8.637661,-9.239674,4.928879,7.951815,-4.409821,9.954354,-9.066612,-6.263341,7.841852,3.803574,-5.327449,-9.752608,5.014453,-4.697130,9.303456,1.730644,9.880251,-0.009127,-2.106195,1.301906,-0.539899,-6.385988,2.478449,-4.280531,3.032586,-4.276484,-1.709024,-0.771362,6.784320,7.433248,-0.014865,6.192536,-8.129150,8.573169,-0.952492,5.157100,5.933253,6.682413,-4.996644,4.022708,6.820867,-6.415794,-8.989038,5.245520,9.558135,3.265053,6.059340,0.179327,-8.462503,9.764824,-6.124829,0.379773,-7.766161,-2.671292,-6.484972,-0.023065,-6.145167,4.740230,1.433913,-4.448336,4.535227,8.856322,-6.848043,-8.476853,5.622577,4.799191,-8.561969,6.985058,2.503278,-3.223307,-5.974432,2.545197,4.801719,9.803936,-6.852774,0.047540,7.591902,-0.070897,1.576764,-3.588051,-8.916591,-0.217667,6.678753,0.120854,-7.079498,-7.961958,-3.559069,1.153045,1.052783,0.844737,-6.492910,7.610789,5.032936,6.701977,1.487726,3.720647,-3.137566,-3.101523,6.089691,-6.268926,7.235480,-5.442142,9.394414,6.338196,1.134457,-4.520235,6.447851,6.654455,3.389059,-6.920978,1.221548,2.391471,0.424056,0.753260,8.779053,-4.811045,-0.769085,8.795566,-5.617780,-5.615298,6.595562,8.020021,6.737930,6.610703,-2.284502,0.265726,6.640925,9.072992,-1.565351,8.283181,-9.670830,8.757308,0.276582,-8.147721,4.965763,8.414888,9.926222,-1.958653,6.791062,-2.753206,7.613136,5.590613,-1.894879,3.715699,0.375770,-0.123441,7.071529,9.742237,-9.436097,-0.742382,-8.707203,-4.136340,5.977732,-2.604591,-7.240946,-1.219837,-7.840694,-2.224157,-1.370052,-4.944818,9.560704,3.657197,-2.356951,3.210319,3.507385,-5.344080,0.007707,2.483705,4.103235,3.224054,-6.976323,4.192680,-5.049803,6.105476,-7.621195,-9.589621,8.679532,-8.209510,-1.970859,-3.034775,5.143083,-9.683186,-6.650634,0.086527,6.383218,2.295192,-3.634474,5.235312,7.886023,5.655374,-1.284240,0.854847,-7.726099,6.901725,4.118711,-3.753763,-4.595572,5.322277,-4.415219,2.996588,1.343476,-8.930215,4.659782,-9.017933,-9.223230,-8.325717,-2.819239,-6.180736,1.789974,5.767822,-6.720339,-2.647204,-7.385476,8.777263,-8.827495,2.360273,3.639977,-7.692141,8.996121,6.649854,-6.604020,-6.328797,1.547835,1.272102,-5.776083,4.593224,-5.972441,3.818805,6.494599,-7.690682,9.674333,-5.351689,7.199344,-0.668279,4.406550,-1.691167,1.699220,-5.549427,-6.498385,-1.146451,4.605471,2.129626,0.988661,-1.869239,2.590516,-5.442166,-1.129472,6.412069,6.792320,-1.179306,-2.932726,6.084690,7.875055,-9.088305,3.889212,-4.565039,2.694758,0.401548,9.576513,0.266600,-3.376945,0.214152,-9.548019,-6.401611,-5.352478,5.452552,2.916070,1.755602,-1.397585,-9.443073,-4.710220,-3.692224,-8.356028,-9.834174,-1.988262,-1.833569,3.063545,9.412288,3.757001,-1.491126,2.034976,-2.341746,-5.254523,3.503018,7.860118,-1.122124,1.445068,3.286502,-3.803608,5.165447,-7.081074,5.766838,7.208137,5.894973,-6.463204,5.210674,0.234221,6.255611,7.178175,8.233135,-1.203971,-9.737967,-7.766851,-0.666672,8.833047,7.261179,2.568089,3.022612,-0.087591,8.026803,-5.999894,-8.654386,-1.207140,3.239406,-3.785278,3.696649,0.174971,-4.746791,2.070017,-7.441849,-2.941000,-0.036969,1.619792,9.197731,4.041638,-1.589680,2.464434,8.678398,-3.132410,1.307711,7.222859,-3.067793,-1.768256,2.544369,0.587304,-9.148429,4.712320,4.757997,-6.282722,-9.652833,-6.072293,-8.310182,4.449757,3.549429,-9.386746,1.359931,2.932593,-4.122540,-4.896322,-0.108558,-1.904479,-5.060424,8.227469,-8.494931,-4.259574,9.039162,9.377036,-2.267562,-6.741275,3.893116,-1.112086,-3.946579,-4.441988,0.002750,-2.882184,-7.965996,-7.371145,0.513812,-8.139619,0.387126,-7.448754,7.843488,-1.119165,6.828322,-9.902603,-6.176123,6.595458,-6.915542,6.466937,-0.991427,2.174919,-6.633592,9.109460,-9.870485,1.904871,-6.778436,-7.673015,-3.677620,0.995525,4.523888,-7.465425,-6.897291,4.613634,4.192054,-1.957537,-4.319903,-5.731313,6.908070,-6.517494,5.715821,-4.081296,-5.630669,-8.088797,8.173201,-2.315336,0.139201,-4.100775,-5.723904,-4.765081,8.597203,1.265953,4.857953,-5.474903,-3.998381,-3.995884,0.496104,7.289194,3.153933,-9.854147,-3.242512,-8.139719,4.868952,0.568439,-4.266074,0.205572,3.837065,4.083688,-1.785857,4.210379,0.266514,-4.316505,-6.998467,-3.874650,1.281447,1.019897,7.764507,3.481530,-4.685899,-0.491022,9.216281,-7.805459,-5.626217,9.411532,-0.147479,5.113696,-6.552601,-2.932323,-5.171723,-6.661857,8.169170,6.040291,1.535168,9.588064,4.346014,-9.538307,3.217531,7.601809,4.410524,-3.460212,-6.485343,9.507719,1.460194,8.781002,-1.638010,-7.886429,3.574349,-2.271127,-0.705767,1.863295,4.242456,-2.605254,-8.274047,-6.803458,-5.431550,7.762248,5.438398,1.868137,-4.703750,-3.172774,1.285753,-5.537629,-4.740352,7.840959,-7.989929,-7.741905,0.363822,-5.565450,4.978719,4.756445,7.396544,-9.555150,4.747860,-5.357499,-1.954862,-0.972664,9.785683,5.897051,1.110069,-5.223683,1.626883,3.599715,-5.399969,-3.162062,-4.834154,5.666459,4.540131,-7.470963,-4.681954,-2.434592,4.395904,-8.970565,-7.697853,-6.433769,-4.777849,3.841841,-6.843682,-6.617025,3.441713,-1.786777,-5.240684,8.506344,7.725475,-5.262136,-3.425299,-2.790206,7.515015,-3.352288,-4.837712,5.930619,-8.192511,-5.827155,5.221940,0.848973,-4.216018,4.772448,1.661667,-0.076375,-0.923390,-4.784508,7.294801,2.612225,7.164541,-7.530076,-0.242480,9.428048,9.130912,4.708919,-4.723302,1.611308,-1.926125,-6.049981,7.644938,-3.255965,5.660060], dtype = "float32")#candidate|1395|(2016,)|const|float32
const_1396 = relay.const([-8,-9,3,7,6,10,2,-1,8,-4,-5,7,-10,7,7,-4,9,7,1,-2,5,4,-9,-2,6,-5,-5,-10,7,4,-9,10,6,-10,1,-5,-5,2,3,3,2,-2,-10,9,-2,-3,3,-9,-1,5,2,-6,8,2,-4,1,-5,-10,-5,-6,3,-8,-3,5,-9,-5,2,-9,-9,-10,-10,-8,3,-1,8,7,-7,10,-5,3,7,6,-9,-10,8,3,10,-2,-3,5,-10,-3,-1,-8,-9,-10,-1,6,1,-10,7,-6,7,1,-3,-1,1,2,8,8,-1,4,7,1,7,9,-3,10,-5,9,-9,10,6,-4,2,-10,4,-4,-3,1,4,-3,-6,-8,5,-10,-10,6,2,8,4,6,1,9,5,-3,1,-6,8,10,3,-10,10,-9,-6,8,-5,9,6,-2,-9,10], dtype = "uint64")#candidate|1396|(162,)|const|uint64
call_1394 = relay.TupleGetItem(func_406_call(relay.reshape(const_1395.astype('float32'), [9, 16, 14]), relay.reshape(const_1396.astype('uint64'), [162,]), ), 0)
call_1397 = relay.TupleGetItem(func_409_call(relay.reshape(const_1395.astype('float32'), [9, 16, 14]), relay.reshape(const_1396.astype('uint64'), [162,]), ), 0)
func_406_call = mod.get_global_var('func_406')
func_409_call = mutated_mod.get_global_var('func_409')
call_1404 = relay.TupleGetItem(func_406_call(relay.reshape(call_1394.astype('float32'), [9, 16, 14]), relay.reshape(const_1396.astype('uint64'), [162,]), ), 1)
call_1405 = relay.TupleGetItem(func_409_call(relay.reshape(call_1394.astype('float32'), [9, 16, 14]), relay.reshape(const_1396.astype('uint64'), [162,]), ), 1)
output = relay.Tuple([uop_1388,call_1394,const_1395,const_1396,call_1404,])
output2 = relay.Tuple([uop_1388,call_1397,const_1395,const_1396,call_1405,])
func_1407 = relay.Function([var_1387,], output)
mod['func_1407'] = func_1407
mod = relay.transform.InferType()(mod)
mutated_mod['func_1407'] = func_1407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1408 = relay.var("var_1408", dtype = "float32", shape = (3, 13, 1))#candidate|1408|(3, 13, 1)|var|float32
func_1407_call = mutated_mod.get_global_var('func_1407')
call_1409 = func_1407_call(var_1408)
output = call_1409
func_1410 = relay.Function([var_1408], output)
mutated_mod['func_1410'] = func_1410
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1425 = relay.var("var_1425", dtype = "float64", shape = (7, 10, 4))#candidate|1425|(7, 10, 4)|var|float64
uop_1426 = relay.sin(var_1425.astype('float64')) # shape=(7, 10, 4)
output = relay.Tuple([uop_1426,])
output2 = relay.Tuple([uop_1426,])
func_1442 = relay.Function([var_1425,], output)
mod['func_1442'] = func_1442
mod = relay.transform.InferType()(mod)
mutated_mod['func_1442'] = func_1442
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1443 = relay.var("var_1443", dtype = "float64", shape = (7, 10, 4))#candidate|1443|(7, 10, 4)|var|float64
func_1442_call = mutated_mod.get_global_var('func_1442')
call_1444 = func_1442_call(var_1443)
output = call_1444
func_1445 = relay.Function([var_1443], output)
mutated_mod['func_1445'] = func_1445
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1740 = relay.const([[[1.514413,-0.308994,2.289702,6.128591,-3.597561,-0.646299,7.262395,6.136873,3.326952,9.008223,6.902818,-3.531241,-4.817248],[-2.474045,9.087203,-0.606228,1.204844,-1.694667,-1.927089,0.290468,-9.252768,9.123032,-8.957790,0.945008,-8.330703,6.496087],[-5.327294,-1.072726,0.432678,2.585581,-9.175843,-1.917219,-9.224167,-0.400187,-6.501882,1.689348,9.391163,-7.973890,2.126293],[6.086503,0.307412,-1.484934,3.835267,-8.415900,4.035199,5.316653,9.635462,2.912130,-7.274618,-8.559044,-5.166214,-3.355133],[-3.354111,7.071722,-5.013462,-6.875397,9.541996,7.827368,7.428216,9.075710,5.532130,-7.706410,-8.640525,-5.525980,-7.981129],[-8.096709,-9.286254,-3.104140,4.353521,9.244123,0.302652,1.216243,-6.108406,8.258557,-2.881819,-8.943534,9.571441,2.009728],[5.487628,-9.469699,-6.069936,-0.261795,9.033496,-1.902453,-4.735653,-0.031839,8.056007,-0.403253,3.303250,7.915856,-0.245475]],[[0.563769,-6.011903,-0.298304,9.847786,4.491785,6.309540,-8.841141,5.631770,6.293230,-3.760871,4.323887,-0.124561,3.417719],[1.353410,4.886203,9.289154,9.316995,3.174153,1.447226,-0.795597,4.570827,-1.099627,4.486016,-7.223056,3.516877,-3.881863],[-9.441877,-1.293141,-7.979054,-3.890703,4.725889,4.740772,1.133324,-9.875378,1.880247,-4.228791,-6.038657,-0.956895,-0.165369],[7.635579,-8.686621,-7.988059,-3.296038,-3.711630,-8.901718,-8.895086,-2.053862,-8.185497,0.351618,-2.994977,8.468758,5.904285],[0.865798,8.753497,-0.655307,4.311074,4.780353,4.823803,-0.197203,-9.768045,-3.989211,2.739438,-4.647877,-2.594301,-2.210303],[-4.238882,5.703744,-3.518972,-4.887782,-7.960578,-8.911339,7.892039,1.680951,0.416099,-5.319801,-2.544480,-0.778887,-6.371999],[8.677681,-9.480794,3.896281,-8.636569,-0.712406,-2.941574,-5.530608,1.068211,-3.847443,-1.593412,1.534451,-1.545874,-2.419522]],[[-0.191379,-3.794078,6.047953,-4.554715,6.218392,4.710548,-7.871379,-6.913296,-8.132589,-2.968414,2.083523,-6.610803,-8.305876],[9.524898,0.040573,-4.172217,8.254048,-7.235894,-3.730313,-0.299287,1.925635,9.455235,-2.775276,-4.025213,2.941053,-8.914537],[2.168252,-2.294824,5.645750,-6.657421,3.011209,-4.656968,2.168135,-9.454415,1.579193,-5.742853,-7.892289,5.900115,7.232151],[5.749607,-5.829337,-2.721008,-5.152900,5.320633,-3.166633,-3.320580,-8.357240,-9.452529,-5.486968,-1.843204,-2.788961,-6.639360],[-7.846780,9.609647,7.510060,-1.700494,-9.331132,7.617177,-0.801850,-5.877133,0.842010,-6.019317,-3.846951,3.058238,2.744089],[-7.006743,-2.254158,-3.545976,-3.553544,9.767308,-9.340995,4.276356,-9.510812,5.549734,-5.606172,5.545574,3.078551,4.429259],[1.581772,-0.077411,-6.378913,-8.514728,1.738210,-7.847901,-7.024950,7.285119,6.754221,0.649211,0.422533,-6.545384,4.364630]],[[7.157706,-9.333230,-2.123084,-3.019006,-3.861237,3.701935,0.778236,-0.087152,3.722278,4.966368,8.627634,9.645041,-1.792470],[-8.001765,-9.108983,4.664533,-3.187597,2.786880,1.341121,4.239955,-0.484461,-8.898417,9.408527,7.991768,4.226158,0.139610],[-7.812802,4.173633,0.539214,4.994521,4.768550,-9.493748,-1.055749,-2.354459,4.399872,-3.672979,2.835271,9.007628,9.056745],[4.082908,-3.999679,6.993914,6.442130,0.322566,-1.460181,0.477531,4.117884,5.493352,4.041018,9.597135,2.586546,-8.779159],[-9.412763,3.582809,2.487628,-8.895065,4.853956,-9.290764,8.432606,-9.615083,-3.701683,5.116617,1.995425,-6.337564,8.753686],[4.416138,1.494934,2.538489,0.574141,9.978124,0.143600,-6.711583,3.652104,7.045208,0.212463,5.357053,9.316897,5.747151],[7.777851,2.182310,-1.206937,-4.116384,1.705767,9.488561,-7.273402,6.103865,0.508805,1.171692,-5.943569,8.983011,-4.308662]],[[2.660138,6.035546,-3.869196,-8.013654,8.706033,-1.492312,-4.489702,4.491627,-9.867545,-5.877640,8.339531,-9.330863,0.889207],[-0.139265,-1.435915,2.974467,-4.635376,-8.574535,5.984023,0.764434,6.132640,-5.526022,9.780691,-9.268037,-6.395423,6.775042],[-7.819317,-6.525806,-0.064023,-4.846712,6.969804,-7.546626,-0.192853,-2.020142,-4.785730,9.259755,1.554597,8.990842,9.001681],[-9.611541,7.260232,-3.992220,8.597934,1.234565,8.563270,-4.645820,5.264307,-9.323900,-7.745477,8.813142,-5.969146,-6.567996],[2.486536,-5.646821,5.966954,-9.745603,-2.957898,-2.649381,2.846002,0.630696,8.865840,4.170942,4.386864,6.596883,-2.790924],[-2.854274,4.003154,-2.485321,-2.002494,2.389719,5.999717,-0.462979,-4.096163,-4.635039,-5.428402,-9.160665,6.187336,-8.565872],[-8.002807,-7.542279,9.561984,6.710401,-7.189294,8.603682,5.902656,-0.138600,-1.738071,-4.514869,-6.036139,-5.292009,9.583212]],[[-4.296494,-1.243351,1.761477,-0.698889,7.967988,-6.630872,-7.098607,-5.158388,4.625833,9.310293,-7.447768,2.973854,-9.375346],[8.422770,-2.043411,-9.031942,-2.165707,-4.293329,3.488021,3.370214,-4.720351,7.476728,-8.747658,-9.435960,2.778336,-8.343580],[5.693044,0.309495,8.550669,-6.635275,1.848907,-7.497652,5.689993,9.901975,-5.752791,8.166251,-9.921138,7.923748,-5.574088],[-0.480053,5.450750,6.703869,-9.913795,9.484243,-2.289468,-8.741663,-9.477354,6.098335,5.735725,-0.646255,8.419236,-0.175015],[-6.689850,0.992489,6.430045,6.002711,-6.326309,1.492007,5.508156,-3.398289,-8.422481,2.009901,7.436646,-1.239853,3.242820],[-9.651041,-1.770678,-9.563240,3.633165,1.364365,0.051770,2.214266,5.329106,9.043941,5.794935,-2.568646,-6.033930,-5.455266],[-6.198262,-5.071374,1.799313,2.462882,7.170214,6.563257,6.915579,3.198365,4.836409,-6.834132,1.377206,3.152449,0.811370]],[[-7.316834,4.520372,0.847367,2.347158,9.997444,7.411925,-7.305292,-6.790691,2.983531,-6.490154,-6.188691,7.930501,-2.122578],[-4.605713,-5.970772,-0.290089,9.489494,8.005908,7.253877,-7.633260,-0.549047,2.347885,-9.693675,-3.526115,1.059215,-8.053674],[-4.671095,-8.669599,-2.402614,-5.601517,-4.503525,5.360373,-8.913871,5.284520,3.870438,-9.976607,1.232902,-7.629482,8.033931],[8.046352,4.300844,-4.521089,8.602664,0.803327,-6.525865,-9.121189,-1.858980,-3.583029,4.532926,-7.390683,-8.930742,-4.021592],[1.841188,1.785540,8.000572,7.642558,1.158618,-5.942310,6.664557,-2.781656,4.159250,-9.279705,2.642379,-4.858084,-6.835725],[2.277898,0.514387,-5.286295,6.740531,1.581658,-5.216597,9.142854,-0.112616,4.236570,5.027504,8.150017,-8.943952,-5.322131],[6.213163,-3.372934,-2.651812,-9.641811,8.229882,-7.067175,-1.674794,3.666841,-1.268540,-0.236528,-7.315271,-0.271401,-9.686538]],[[-1.107372,-8.400939,-7.459901,7.735621,2.021259,-5.408702,7.496824,5.125671,-3.245119,3.113877,-5.597314,9.479286,0.425270],[-0.717742,3.135472,9.167195,-1.243223,8.868302,1.246005,8.457685,-9.923773,-7.261576,-7.237720,4.174297,-9.254191,-7.658787],[-8.424346,2.210865,-9.532365,-1.705031,-6.538567,9.457340,2.060032,1.677294,-1.096719,2.335301,6.738613,-3.512215,1.023538],[-3.420082,4.371251,8.457251,-2.738663,1.127770,-2.603476,5.927428,9.191684,9.019520,1.002930,-7.613747,-6.929024,-8.260312],[3.848648,6.085252,-3.716631,-1.044110,-2.086079,6.092405,9.529078,3.220044,-0.571633,-0.705678,-2.621684,-0.409633,4.305366],[7.762415,2.575421,0.404486,-8.615611,9.854945,-8.461114,-1.206297,7.432638,-2.946912,-4.995430,5.864737,-9.476884,1.735111],[3.457983,-2.079327,-3.807496,-9.945067,8.567572,-3.748625,-6.121558,-0.800046,-7.715685,-3.225395,-2.170565,-7.283938,-2.553179]],[[-3.266879,2.209260,2.611834,5.034826,6.892155,3.516967,5.787650,3.029130,7.918850,-1.744394,4.319775,-2.196016,-4.287504],[-2.512576,-1.193375,-9.402001,2.132389,-0.183571,9.383823,-7.201746,9.450775,-8.190025,-2.852154,-0.207274,-9.606031,2.369292],[6.302235,7.645001,-5.305178,-5.717496,-0.831024,9.076779,4.756677,8.860141,-8.447967,8.097251,1.667300,-1.994843,-7.292809],[6.238154,6.422776,-1.770749,2.472547,4.657546,8.855200,-2.276896,-6.417628,4.787958,4.437509,-1.529516,-9.689356,1.514399],[-2.643019,1.194235,-8.867618,2.461197,6.878234,8.682504,9.932018,-5.488244,-8.130138,-6.822239,7.564922,-6.911764,-4.268966],[-4.192924,9.892989,6.012458,8.186908,-7.562337,6.997100,-2.069724,6.287776,6.236915,-5.520119,9.829153,-5.799585,7.680123],[0.485992,-7.176732,6.034951,-0.877081,-4.189841,-6.406296,-9.751585,-7.005983,-8.987869,-0.130422,-8.510720,-5.442670,0.745867]],[[1.521713,0.544305,9.436022,0.606077,8.779201,-6.614041,1.587162,9.037399,4.486679,-9.297943,2.750891,-2.154249,-1.689915],[-0.432237,5.547165,-7.867894,3.985618,6.955420,-4.915675,3.041425,5.325042,2.838143,-2.603169,-2.852293,-0.583403,2.712935],[0.855174,3.071576,-7.778763,-2.969716,3.053658,4.373163,2.715313,-8.973240,7.243967,1.084017,6.260612,6.779453,2.092188],[9.935973,-1.340319,4.989052,-1.309628,2.810443,-1.262396,-0.607679,-3.500496,4.750728,5.166851,6.049178,9.259374,5.541192],[2.977388,-8.297474,7.755554,-7.573808,8.635688,9.050382,-5.681200,-1.437048,8.390365,-9.629563,-5.187541,1.274113,4.776896],[-6.643394,5.551579,-5.357962,-5.177788,0.462804,-0.310552,2.388227,8.947256,-0.927929,0.423253,0.791019,7.634861,-8.297230],[9.741123,2.879592,-8.840213,0.750370,-4.688640,-5.917068,-1.807983,-7.887821,7.073255,-0.597243,-0.305449,-3.194426,-1.481782]],[[-8.085737,-1.731021,1.182901,-1.668501,-9.736735,8.401739,-6.644546,6.353444,-5.010782,-9.039115,5.275726,4.199670,8.231188],[-4.767212,7.211184,0.703340,-6.269194,0.701936,1.277496,5.401331,-4.120132,4.934790,-2.096684,-9.365693,-0.080324,0.042516],[-9.241520,-8.506966,-0.695651,-1.013165,9.261172,-7.042867,6.806493,1.966379,0.999488,-3.212487,1.644393,2.465068,2.105127],[8.523357,-1.850176,3.190881,6.965291,-8.222010,-1.608210,8.392127,-0.264882,7.008027,7.347385,-0.637450,8.044914,7.760782],[-2.760477,-6.146716,-5.494165,-4.683173,-0.077025,9.550236,2.496698,-5.633967,-5.373463,8.554602,5.842385,-4.529294,7.353350],[2.946732,-3.146429,-1.601464,9.463459,-8.904327,-6.592011,8.198675,-0.844773,-5.174549,-6.806723,3.238556,-3.431740,-8.308105],[0.349874,5.327827,6.045818,-5.339824,1.461814,4.754622,8.135730,-0.638906,-7.052156,3.707178,-3.398350,-2.439928,-7.451696]],[[-5.654327,-2.938709,-3.752346,2.128371,-4.499569,-9.529984,-5.441904,3.367109,7.360188,7.672626,-3.047766,4.061592,-0.467101],[3.517973,-7.354229,-7.806832,5.302220,0.613464,3.505492,2.798010,-6.064573,-2.626707,1.139788,-8.531474,-2.329983,-5.481607],[4.121141,-4.991287,0.817059,-4.590328,7.115906,-5.384630,5.434309,-7.199416,7.966905,-4.172608,-1.602294,-2.235579,7.202496],[-3.296208,0.285173,-3.527718,-7.967022,-9.102016,2.489221,1.921856,-1.176266,6.885696,-2.202381,-9.573131,2.804749,7.183744],[9.720864,3.025586,-7.863486,-6.966356,-8.428281,-8.956880,-3.942706,-1.482442,4.070925,-5.141216,-1.936421,8.957450,-3.607987],[-3.678223,-0.803329,4.984964,6.358579,-5.908667,-2.189644,4.168356,-7.919831,1.713454,2.297804,-9.050805,4.153282,-9.511529],[-1.304001,-9.971268,3.396891,-9.806753,-9.751853,8.739938,-4.330221,4.009315,-7.104689,7.424657,-0.657781,7.691896,-6.922368]]], dtype = "float32")#candidate|1740|(12, 7, 13)|const|float32
var_1741 = relay.var("var_1741", dtype = "float32", shape = (12, 7, 13))#candidate|1741|(12, 7, 13)|var|float32
bop_1742 = relay.floor_divide(const_1740.astype('float32'), relay.reshape(var_1741.astype('float32'), relay.shape_of(const_1740))) # shape=(12, 7, 13)
func_288_call = mod.get_global_var('func_288')
func_292_call = mutated_mod.get_global_var('func_292')
var_1747 = relay.var("var_1747", dtype = "uint64", shape = (162,))#candidate|1747|(162,)|var|uint64
call_1746 = relay.TupleGetItem(func_288_call(relay.reshape(var_1747.astype('uint64'), [9, 9, 2]), relay.reshape(var_1747.astype('uint64'), [9, 9, 2]), ), 1)
call_1748 = relay.TupleGetItem(func_292_call(relay.reshape(var_1747.astype('uint64'), [9, 9, 2]), relay.reshape(var_1747.astype('uint64'), [9, 9, 2]), ), 1)
output = relay.Tuple([bop_1742,call_1746,var_1747,])
output2 = relay.Tuple([bop_1742,call_1748,var_1747,])
func_1753 = relay.Function([var_1741,var_1747,], output)
mod['func_1753'] = func_1753
mod = relay.transform.InferType()(mod)
var_1754 = relay.var("var_1754", dtype = "float32", shape = (12, 7, 13))#candidate|1754|(12, 7, 13)|var|float32
var_1755 = relay.var("var_1755", dtype = "uint64", shape = (162,))#candidate|1755|(162,)|var|uint64
output = func_1753(var_1754,var_1755,)
func_1756 = relay.Function([var_1754,var_1755,], output)
mutated_mod['func_1756'] = func_1756
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2143 = relay.var("var_2143", dtype = "bool", shape = (2, 4, 1))#candidate|2143|(2, 4, 1)|var|bool
var_2144 = relay.var("var_2144", dtype = "bool", shape = (2, 4, 11))#candidate|2144|(2, 4, 11)|var|bool
bop_2145 = relay.logical_or(var_2143.astype('bool'), var_2144.astype('bool')) # shape=(2, 4, 11)
func_1442_call = mod.get_global_var('func_1442')
func_1445_call = mutated_mod.get_global_var('func_1445')
var_2153 = relay.var("var_2153", dtype = "float64", shape = (280,))#candidate|2153|(280,)|var|float64
call_2152 = relay.TupleGetItem(func_1442_call(relay.reshape(var_2153.astype('float64'), [7, 10, 4])), 0)
call_2154 = relay.TupleGetItem(func_1445_call(relay.reshape(var_2153.astype('float64'), [7, 10, 4])), 0)
func_1442_call = mod.get_global_var('func_1442')
func_1445_call = mutated_mod.get_global_var('func_1445')
call_2161 = relay.TupleGetItem(func_1442_call(relay.reshape(call_2152.astype('float64'), [7, 10, 4])), 0)
call_2162 = relay.TupleGetItem(func_1445_call(relay.reshape(call_2152.astype('float64'), [7, 10, 4])), 0)
uop_2184 = relay.asin(call_2152.astype('float32')) # shape=(7, 10, 4)
uop_2186 = relay.asin(call_2154.astype('float32')) # shape=(7, 10, 4)
uop_2190 = relay.cos(uop_2184.astype('float64')) # shape=(7, 10, 4)
uop_2192 = relay.cos(uop_2186.astype('float64')) # shape=(7, 10, 4)
uop_2210 = relay.erf(uop_2184.astype('float64')) # shape=(7, 10, 4)
uop_2212 = relay.erf(uop_2186.astype('float64')) # shape=(7, 10, 4)
func_288_call = mod.get_global_var('func_288')
func_292_call = mutated_mod.get_global_var('func_292')
const_2218 = relay.const([[-4,1,-10,-6,3,-6,-1,-1,3,-2,6,-10,-4,2,-4,-2,-5,-8,2,-5,-3,-7,1,9,-9,8,7,-6,-6,-8,1,9,-2,10,-10,-9,8,-7,-8,-5,-9,4,-1,-8,1,7,7,7,-2,5,1,-5,2,8],[-10,8,-3,9,7,3,5,-1,6,2,-2,-8,-1,-10,6,-4,10,-10,-6,-9,6,2,-1,-4,10,3,-2,-5,-5,-5,-4,1,-3,-6,-10,4,6,7,-1,-4,-6,-1,7,9,-10,7,5,7,-9,-1,-8,2,2,-1],[10,-2,-10,3,10,3,8,5,6,-3,2,3,-8,-4,-6,-5,-8,-3,1,-8,-7,2,-1,-9,8,-3,8,2,2,-8,9,-5,10,9,-3,4,-10,-5,5,9,8,6,7,-1,2,-9,3,-1,-3,6,-7,-8,-9,7]], dtype = "uint64")#candidate|2218|(3, 54)|const|uint64
call_2217 = relay.TupleGetItem(func_288_call(relay.reshape(const_2218.astype('uint64'), [9, 9, 2]), relay.reshape(const_2218.astype('uint64'), [9, 9, 2]), ), 0)
call_2219 = relay.TupleGetItem(func_292_call(relay.reshape(const_2218.astype('uint64'), [9, 9, 2]), relay.reshape(const_2218.astype('uint64'), [9, 9, 2]), ), 0)
func_1753_call = mod.get_global_var('func_1753')
func_1756_call = mutated_mod.get_global_var('func_1756')
var_2247 = relay.var("var_2247", dtype = "float32", shape = (1092,))#candidate|2247|(1092,)|var|float32
call_2246 = relay.TupleGetItem(func_1753_call(relay.reshape(var_2247.astype('float32'), [12, 7, 13]), relay.reshape(call_2217.astype('uint64'), [162,]), ), 1)
call_2248 = relay.TupleGetItem(func_1756_call(relay.reshape(var_2247.astype('float32'), [12, 7, 13]), relay.reshape(call_2217.astype('uint64'), [162,]), ), 1)
func_288_call = mod.get_global_var('func_288')
func_292_call = mutated_mod.get_global_var('func_292')
call_2251 = relay.TupleGetItem(func_288_call(relay.reshape(call_2217.astype('uint64'), [9, 9, 2]), relay.reshape(call_2246.astype('uint64'), [9, 9, 2]), ), 2)
call_2252 = relay.TupleGetItem(func_292_call(relay.reshape(call_2217.astype('uint64'), [9, 9, 2]), relay.reshape(call_2246.astype('uint64'), [9, 9, 2]), ), 2)
func_609_call = mod.get_global_var('func_609')
func_612_call = mutated_mod.get_global_var('func_612')
const_2260 = relay.const([True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,False], dtype = "bool")#candidate|2260|(30,)|const|bool
call_2259 = func_609_call(relay.reshape(const_2260.astype('bool'), [1, 3, 10]))
call_2261 = func_609_call(relay.reshape(const_2260.astype('bool'), [1, 3, 10]))
output = relay.Tuple([bop_2145,var_2153,call_2161,uop_2190,uop_2210,call_2217,const_2218,call_2246,var_2247,call_2251,call_2259,const_2260,])
output2 = relay.Tuple([bop_2145,var_2153,call_2162,uop_2192,uop_2212,call_2219,const_2218,call_2248,var_2247,call_2252,call_2261,const_2260,])
func_2264 = relay.Function([var_2143,var_2144,var_2153,var_2247,], output)
mod['func_2264'] = func_2264
mod = relay.transform.InferType()(mod)
mutated_mod['func_2264'] = func_2264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2264_call = mutated_mod.get_global_var('func_2264')
var_2266 = relay.var("var_2266", dtype = "bool", shape = (2, 4, 1))#candidate|2266|(2, 4, 1)|var|bool
var_2267 = relay.var("var_2267", dtype = "bool", shape = (2, 4, 11))#candidate|2267|(2, 4, 11)|var|bool
var_2268 = relay.var("var_2268", dtype = "float64", shape = (280,))#candidate|2268|(280,)|var|float64
var_2269 = relay.var("var_2269", dtype = "float32", shape = (1092,))#candidate|2269|(1092,)|var|float32
call_2265 = func_2264_call(var_2266,var_2267,var_2268,var_2269,)
output = call_2265
func_2270 = relay.Function([var_2266,var_2267,var_2268,var_2269,], output)
mutated_mod['func_2270'] = func_2270
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2512 = relay.var("var_2512", dtype = "float32", shape = (7, 9, 8))#candidate|2512|(7, 9, 8)|var|float32
uop_2513 = relay.acos(var_2512.astype('float32')) # shape=(7, 9, 8)
output = uop_2513
output2 = uop_2513
func_2525 = relay.Function([var_2512,], output)
mod['func_2525'] = func_2525
mod = relay.transform.InferType()(mod)
var_2526 = relay.var("var_2526", dtype = "float32", shape = (7, 9, 8))#candidate|2526|(7, 9, 8)|var|float32
output = func_2525(var_2526)
func_2527 = relay.Function([var_2526], output)
mutated_mod['func_2527'] = func_2527
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2774 = relay.const([[[-1],[1],[6],[-9],[-5],[-3],[-5],[-3],[5],[4],[-4],[-4],[5],[3]],[[1],[3],[1],[-8],[-2],[-3],[1],[7],[10],[-4],[7],[-2],[1],[2]],[[-8],[-6],[-1],[10],[1],[-6],[6],[-3],[9],[5],[-1],[6],[-9],[9]]], dtype = "uint32")#candidate|2774|(3, 14, 1)|const|uint32
var_2775 = relay.var("var_2775", dtype = "uint32", shape = (3, 14, 10))#candidate|2775|(3, 14, 10)|var|uint32
bop_2776 = relay.bitwise_xor(const_2774.astype('uint32'), var_2775.astype('uint32')) # shape=(3, 14, 10)
output = bop_2776
output2 = bop_2776
func_2790 = relay.Function([var_2775,], output)
mod['func_2790'] = func_2790
mod = relay.transform.InferType()(mod)
var_2791 = relay.var("var_2791", dtype = "uint32", shape = (3, 14, 10))#candidate|2791|(3, 14, 10)|var|uint32
output = func_2790(var_2791)
func_2792 = relay.Function([var_2791], output)
mutated_mod['func_2792'] = func_2792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2843 = relay.var("var_2843", dtype = "float32", shape = (2, 3, 1))#candidate|2843|(2, 3, 1)|var|float32
uop_2844 = relay.log2(var_2843.astype('float32')) # shape=(2, 3, 1)
func_2790_call = mod.get_global_var('func_2790')
func_2792_call = mutated_mod.get_global_var('func_2792')
var_2862 = relay.var("var_2862", dtype = "uint32", shape = (420,))#candidate|2862|(420,)|var|uint32
call_2861 = func_2790_call(relay.reshape(var_2862.astype('uint32'), [3, 14, 10]))
call_2863 = func_2790_call(relay.reshape(var_2862.astype('uint32'), [3, 14, 10]))
output = relay.Tuple([uop_2844,call_2861,var_2862,])
output2 = relay.Tuple([uop_2844,call_2863,var_2862,])
func_2865 = relay.Function([var_2843,var_2862,], output)
mod['func_2865'] = func_2865
mod = relay.transform.InferType()(mod)
var_2866 = relay.var("var_2866", dtype = "float32", shape = (2, 3, 1))#candidate|2866|(2, 3, 1)|var|float32
var_2867 = relay.var("var_2867", dtype = "uint32", shape = (420,))#candidate|2867|(420,)|var|uint32
output = func_2865(var_2866,var_2867,)
func_2868 = relay.Function([var_2866,var_2867,], output)
mutated_mod['func_2868'] = func_2868
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3414 = relay.const(4, dtype = "uint64")#candidate|3414|()|const|uint64
const_3415 = relay.const([[[-4,-9,1,-9,-7,7,-9,10],[8,8,8,1,-4,4,9,-3]],[[8,-1,-2,-5,-5,2,-3,-9],[-4,-2,7,-8,8,-6,5,9]],[[-1,-2,3,2,2,-2,-6,-3],[8,-5,-1,-7,4,-7,3,4]],[[-8,-7,-4,9,-2,-8,-1,-3],[8,-7,-2,9,8,-6,-2,8]],[[-7,-3,5,4,2,-8,-4,-4],[-2,3,-3,-1,-8,5,9,2]],[[-10,6,6,3,-3,10,3,-2],[-3,8,-5,1,5,-3,-1,10]],[[-9,-5,6,4,-10,-7,-8,-7],[-3,-9,5,2,-5,-4,-10,-8]],[[-1,-8,10,6,-6,-2,-3,-5],[5,5,-3,-9,1,-7,-10,-4]],[[5,-5,3,4,6,4,-4,-8],[-1,10,-9,4,-2,3,-3,2]],[[10,-4,1,-4,3,-6,7,7],[-6,-3,6,7,6,10,8,1]],[[9,2,-3,-7,-4,-3,-9,-8],[7,-10,-9,-1,-6,8,4,3]],[[-5,3,3,4,5,10,-10,-8],[2,-10,-4,5,5,-5,3,2]],[[7,3,7,9,7,-7,10,3],[-3,10,-7,9,-10,-1,-6,-10]],[[10,3,1,1,-1,-4,-4,-2],[2,-6,1,-9,4,4,2,-3]],[[7,2,-9,-7,-1,-3,8,4],[9,6,-5,-1,-6,-9,10,3]]], dtype = "uint64")#candidate|3415|(15, 2, 8)|const|uint64
bop_3416 = relay.multiply(const_3414.astype('uint64'), const_3415.astype('uint64')) # shape=(15, 2, 8)
output = bop_3416
output2 = bop_3416
func_3423 = relay.Function([], output)
mod['func_3423'] = func_3423
mod = relay.transform.InferType()(mod)
output = func_3423()
func_3424 = relay.Function([], output)
mutated_mod['func_3424'] = func_3424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3439 = relay.var("var_3439", dtype = "float32", shape = (7, 10, 11))#candidate|3439|(7, 10, 11)|var|float32
var_3440 = relay.var("var_3440", dtype = "float32", shape = (7, 10, 11))#candidate|3440|(7, 10, 11)|var|float32
bop_3441 = relay.not_equal(var_3439.astype('bool'), relay.reshape(var_3440.astype('bool'), relay.shape_of(var_3439))) # shape=(7, 10, 11)
func_2865_call = mod.get_global_var('func_2865')
func_2868_call = mutated_mod.get_global_var('func_2868')
const_3457 = relay.const([-9.823344,7.328845,2.346122,-1.017961,-9.354566,1.081992], dtype = "float32")#candidate|3457|(6,)|const|float32
const_3458 = relay.const([-8,-6,3,-2,3,-9,-2,-7,-1,-10,-4,2,-2,3,8,8,-7,7,-4,-6,-2,3,-3,10,7,1,-2,1,1,-2,2,-5,6,-8,2,7,-10,-1,3,9,9,1,-2,-7,-6,3,1,-6,1,-9,-7,-10,9,2,-1,1,-2,3,-5,-6,-1,1,-7,1,1,3,-6,-9,-2,-6,3,-5,10,-8,2,5,2,-7,5,9,8,7,4,-1,-6,-3,4,1,-10,6,2,-5,-1,5,2,3,-7,6,-4,-2,-3,7,-5,-1,9,6,1,8,-6,8,-9,8,9,7,-8,-4,-4,-10,3,-3,-9,6,10,1,-8,-2,10,-3,3,-4,9,-3,1,1,3,6,2,-3,7,8,5,-2,-1,5,7,6,7,10,-3,2,6,9,2,-2,-5,4,-10,4,5,5,9,7,-3,6,9,-3,7,-5,-5,8,7,2,2,1,5,9,-9,2,5,-7,5,1,3,3,-3,8,6,-7,7,-8,-4,-8,3,-5,7,5,2,-6,-2,-1,-9,-2,2,-5,-9,-1,8,-8,-9,-3,2,8,2,9,2,-8,10,8,-1,-10,6,5,-1,8,5,6,-7,-3,10,-2,1,-7,-10,-4,-10,3,-6,-9,-3,-6,-6,6,-9,-4,-1,3,-6,3,-5,-1,1,-10,-4,3,6,6,2,-7,2,-1,-10,5,7,6,-4,9,-2,-2,8,6,5,-7,-5,-9,8,10,-6,-5,-2,5,7,1,2,6,7,3,-3,8,-9,-4,8,-6,-8,7,10,-4,-5,4,8,-7,-1,6,5,1,2,-10,9,5,6,5,-6,-3,-6,8,9,9,-6,-4,-9,-4,10,3,9,-5,2,1,1,-8,-10,-8,-2,9,-2,-8,7,3,-7,7,4,2,-1,3,6,-8,-10,5,3,-9,-4,7,-10,-1,7,-4,9,9,7,-4,5,-9,-8,4,-6,-8,1,-6,-6,-9,-2,-3,7,2,4,-6,6,4,10,5,3,10,9,-7,2,7,9,6,-2,9,-2,6,2,2,-10,-2,2,-10,-8,7,5,4,6,9,6,-3,-4,-8,1,-10,1,-7,-4,6,-4,-1,-9,-2,-5,-2,-8,1], dtype = "uint32")#candidate|3458|(420,)|const|uint32
call_3456 = relay.TupleGetItem(func_2865_call(relay.reshape(const_3457.astype('float32'), [2, 3, 1]), relay.reshape(const_3458.astype('uint32'), [420,]), ), 2)
call_3459 = relay.TupleGetItem(func_2868_call(relay.reshape(const_3457.astype('float32'), [2, 3, 1]), relay.reshape(const_3458.astype('uint32'), [420,]), ), 2)
uop_3460 = relay.log10(bop_3441.astype('float64')) # shape=(7, 10, 11)
bop_3462 = relay.less_equal(uop_3460.astype('bool'), relay.reshape(var_3440.astype('bool'), relay.shape_of(uop_3460))) # shape=(7, 10, 11)
output = relay.Tuple([call_3456,const_3457,const_3458,bop_3462,])
output2 = relay.Tuple([call_3459,const_3457,const_3458,bop_3462,])
func_3465 = relay.Function([var_3439,var_3440,], output)
mod['func_3465'] = func_3465
mod = relay.transform.InferType()(mod)
var_3466 = relay.var("var_3466", dtype = "float32", shape = (7, 10, 11))#candidate|3466|(7, 10, 11)|var|float32
var_3467 = relay.var("var_3467", dtype = "float32", shape = (7, 10, 11))#candidate|3467|(7, 10, 11)|var|float32
output = func_3465(var_3466,var_3467,)
func_3468 = relay.Function([var_3466,var_3467,], output)
mutated_mod['func_3468'] = func_3468
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3515 = relay.var("var_3515", dtype = "int16", shape = (1, 8, 3))#candidate|3515|(1, 8, 3)|var|int16
const_3516 = relay.const([[[1,-10,-5],[-2,1,-7],[-8,-10,-1],[-9,-3,-9],[3,5,1],[-10,2,-3],[6,-9,-1],[-3,5,9]]], dtype = "int16")#candidate|3516|(1, 8, 3)|const|int16
bop_3517 = relay.less_equal(var_3515.astype('bool'), relay.reshape(const_3516.astype('bool'), relay.shape_of(var_3515))) # shape=(1, 8, 3)
output = relay.Tuple([bop_3517,])
output2 = relay.Tuple([bop_3517,])
func_3522 = relay.Function([var_3515,], output)
mod['func_3522'] = func_3522
mod = relay.transform.InferType()(mod)
mutated_mod['func_3522'] = func_3522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3523 = relay.var("var_3523", dtype = "int16", shape = (1, 8, 3))#candidate|3523|(1, 8, 3)|var|int16
func_3522_call = mutated_mod.get_global_var('func_3522')
call_3524 = func_3522_call(var_3523)
output = call_3524
func_3525 = relay.Function([var_3523], output)
mutated_mod['func_3525'] = func_3525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_3530 = func_3423_call()
call_3531 = func_3423_call()
output = relay.Tuple([call_3530,])
output2 = relay.Tuple([call_3531,])
func_3532 = relay.Function([], output)
mod['func_3532'] = func_3532
mod = relay.transform.InferType()(mod)
output = func_3532()
func_3533 = relay.Function([], output)
mutated_mod['func_3533'] = func_3533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_3540 = relay.TupleGetItem(func_3532_call(), 0)
call_3541 = relay.TupleGetItem(func_3533_call(), 0)
func_609_call = mod.get_global_var('func_609')
func_612_call = mutated_mod.get_global_var('func_612')
const_3555 = relay.const([False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True], dtype = "bool")#candidate|3555|(30,)|const|bool
call_3554 = func_609_call(relay.reshape(const_3555.astype('bool'), [1, 3, 10]))
call_3556 = func_609_call(relay.reshape(const_3555.astype('bool'), [1, 3, 10]))
func_1407_call = mod.get_global_var('func_1407')
func_1410_call = mutated_mod.get_global_var('func_1410')
const_3570 = relay.const([-1.895311,0.638317,6.745086,-5.527546,-8.565064,-9.442151,-6.572045,-3.036924,9.705296,6.800546,7.444834,4.614993,-1.059659,-3.961789,-2.139802,2.449372,-2.993650,-9.448734,-7.766481,3.186763,-7.756860,6.708313,1.468355,4.044737,-8.746370,-2.671107,7.058804,9.275800,-4.833847,0.046778,0.255344,6.200022,-0.787337,0.578486,-1.086649,3.093990,5.259309,-4.175974,-1.778269], dtype = "float32")#candidate|3570|(39,)|const|float32
call_3569 = relay.TupleGetItem(func_1407_call(relay.reshape(const_3570.astype('float32'), [3, 13, 1])), 1)
call_3571 = relay.TupleGetItem(func_1410_call(relay.reshape(const_3570.astype('float32'), [3, 13, 1])), 1)
func_3522_call = mod.get_global_var('func_3522')
func_3525_call = mutated_mod.get_global_var('func_3525')
var_3582 = relay.var("var_3582", dtype = "int16", shape = (24,))#candidate|3582|(24,)|var|int16
call_3581 = relay.TupleGetItem(func_3522_call(relay.reshape(var_3582.astype('int16'), [1, 8, 3])), 0)
call_3583 = relay.TupleGetItem(func_3525_call(relay.reshape(var_3582.astype('int16'), [1, 8, 3])), 0)
var_3584 = relay.var("var_3584", dtype = "bool", shape = (1, 8, 3))#candidate|3584|(1, 8, 3)|var|bool
bop_3585 = relay.minimum(call_3581.astype('int64'), relay.reshape(var_3584.astype('int64'), relay.shape_of(call_3581))) # shape=(1, 8, 3)
bop_3588 = relay.minimum(call_3583.astype('int64'), relay.reshape(var_3584.astype('int64'), relay.shape_of(call_3583))) # shape=(1, 8, 3)
var_3594 = relay.var("var_3594", dtype = "bool", shape = (10, 3, 10))#candidate|3594|(10, 3, 10)|var|bool
bop_3595 = relay.maximum(call_3554.astype('uint64'), relay.reshape(var_3594.astype('uint64'), relay.shape_of(call_3554))) # shape=(10, 3, 10)
bop_3598 = relay.maximum(call_3556.astype('uint64'), relay.reshape(var_3594.astype('uint64'), relay.shape_of(call_3556))) # shape=(10, 3, 10)
output = relay.Tuple([call_3540,const_3555,call_3569,const_3570,var_3582,bop_3585,bop_3595,])
output2 = relay.Tuple([call_3541,const_3555,call_3571,const_3570,var_3582,bop_3588,bop_3598,])
func_3604 = relay.Function([var_3582,var_3584,var_3594,], output)
mod['func_3604'] = func_3604
mod = relay.transform.InferType()(mod)
mutated_mod['func_3604'] = func_3604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3604_call = mutated_mod.get_global_var('func_3604')
var_3606 = relay.var("var_3606", dtype = "int16", shape = (24,))#candidate|3606|(24,)|var|int16
var_3607 = relay.var("var_3607", dtype = "bool", shape = (1, 8, 3))#candidate|3607|(1, 8, 3)|var|bool
var_3608 = relay.var("var_3608", dtype = "bool", shape = (10, 3, 10))#candidate|3608|(10, 3, 10)|var|bool
call_3605 = func_3604_call(var_3606,var_3607,var_3608,)
output = call_3605
func_3609 = relay.Function([var_3606,var_3607,var_3608,], output)
mutated_mod['func_3609'] = func_3609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_3641 = func_3423_call()
call_3642 = func_3423_call()
uop_3671 = relay.exp(call_3641.astype('float64')) # shape=(15, 2, 8)
uop_3673 = relay.exp(call_3642.astype('float64')) # shape=(15, 2, 8)
output = uop_3671
output2 = uop_3673
func_3674 = relay.Function([], output)
mod['func_3674'] = func_3674
mod = relay.transform.InferType()(mod)
output = func_3674()
func_3675 = relay.Function([], output)
mutated_mod['func_3675'] = func_3675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3674_call = mod.get_global_var('func_3674')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_3678 = func_3674_call()
call_3679 = func_3674_call()
output = call_3678
output2 = call_3679
func_3699 = relay.Function([], output)
mod['func_3699'] = func_3699
mod = relay.transform.InferType()(mod)
mutated_mod['func_3699'] = func_3699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3699_call = mutated_mod.get_global_var('func_3699')
call_3700 = func_3699_call()
output = call_3700
func_3701 = relay.Function([], output)
mutated_mod['func_3701'] = func_3701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3674_call = mod.get_global_var('func_3674')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_3735 = func_3674_call()
call_3736 = func_3674_call()
output = relay.Tuple([call_3735,])
output2 = relay.Tuple([call_3736,])
func_3757 = relay.Function([], output)
mod['func_3757'] = func_3757
mod = relay.transform.InferType()(mod)
mutated_mod['func_3757'] = func_3757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mutated_mod.get_global_var('func_3757')
call_3758 = func_3757_call()
output = call_3758
func_3759 = relay.Function([], output)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_3856 = func_3423_call()
call_3857 = func_3423_call()
output = relay.Tuple([call_3856,])
output2 = relay.Tuple([call_3857,])
func_3858 = relay.Function([], output)
mod['func_3858'] = func_3858
mod = relay.transform.InferType()(mod)
output = func_3858()
func_3859 = relay.Function([], output)
mutated_mod['func_3859'] = func_3859
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3874 = relay.var("var_3874", dtype = "int64", shape = (10, 7, 6))#candidate|3874|(10, 7, 6)|var|int64
var_3875 = relay.var("var_3875", dtype = "int64", shape = (10, 7, 6))#candidate|3875|(10, 7, 6)|var|int64
bop_3876 = relay.less_equal(var_3874.astype('bool'), relay.reshape(var_3875.astype('bool'), relay.shape_of(var_3874))) # shape=(10, 7, 6)
output = relay.Tuple([bop_3876,])
output2 = relay.Tuple([bop_3876,])
func_3882 = relay.Function([var_3874,var_3875,], output)
mod['func_3882'] = func_3882
mod = relay.transform.InferType()(mod)
var_3883 = relay.var("var_3883", dtype = "int64", shape = (10, 7, 6))#candidate|3883|(10, 7, 6)|var|int64
var_3884 = relay.var("var_3884", dtype = "int64", shape = (10, 7, 6))#candidate|3884|(10, 7, 6)|var|int64
output = func_3882(var_3883,var_3884,)
func_3885 = relay.Function([var_3883,var_3884,], output)
mutated_mod['func_3885'] = func_3885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mod.get_global_var('func_3757')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_4031 = relay.TupleGetItem(func_3757_call(), 0)
call_4032 = relay.TupleGetItem(func_3759_call(), 0)
func_3465_call = mod.get_global_var('func_3465')
func_3468_call = mutated_mod.get_global_var('func_3468')
var_4045 = relay.var("var_4045", dtype = "float32", shape = (770,))#candidate|4045|(770,)|var|float32
call_4044 = relay.TupleGetItem(func_3465_call(relay.reshape(var_4045.astype('float32'), [7, 10, 11]), relay.reshape(var_4045.astype('float32'), [7, 10, 11]), ), 1)
call_4046 = relay.TupleGetItem(func_3468_call(relay.reshape(var_4045.astype('float32'), [7, 10, 11]), relay.reshape(var_4045.astype('float32'), [7, 10, 11]), ), 1)
func_3882_call = mod.get_global_var('func_3882')
func_3885_call = mutated_mod.get_global_var('func_3885')
var_4051 = relay.var("var_4051", dtype = "int64", shape = (420,))#candidate|4051|(420,)|var|int64
call_4050 = relay.TupleGetItem(func_3882_call(relay.reshape(var_4051.astype('int64'), [10, 7, 6]), relay.reshape(var_4051.astype('int64'), [10, 7, 6]), ), 0)
call_4052 = relay.TupleGetItem(func_3885_call(relay.reshape(var_4051.astype('int64'), [10, 7, 6]), relay.reshape(var_4051.astype('int64'), [10, 7, 6]), ), 0)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_4055 = func_3423_call()
call_4056 = func_3423_call()
func_3858_call = mod.get_global_var('func_3858')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_4064 = relay.TupleGetItem(func_3858_call(), 0)
call_4065 = relay.TupleGetItem(func_3859_call(), 0)
output = relay.Tuple([call_4031,call_4044,var_4045,call_4050,var_4051,call_4055,call_4064,])
output2 = relay.Tuple([call_4032,call_4046,var_4045,call_4052,var_4051,call_4056,call_4065,])
func_4069 = relay.Function([var_4045,var_4051,], output)
mod['func_4069'] = func_4069
mod = relay.transform.InferType()(mod)
var_4070 = relay.var("var_4070", dtype = "float32", shape = (770,))#candidate|4070|(770,)|var|float32
var_4071 = relay.var("var_4071", dtype = "int64", shape = (420,))#candidate|4071|(420,)|var|int64
output = func_4069(var_4070,var_4071,)
func_4072 = relay.Function([var_4070,var_4071,], output)
mutated_mod['func_4072'] = func_4072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3858_call = mod.get_global_var('func_3858')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_4131 = relay.TupleGetItem(func_3858_call(), 0)
call_4132 = relay.TupleGetItem(func_3859_call(), 0)
func_3882_call = mod.get_global_var('func_3882')
func_3885_call = mutated_mod.get_global_var('func_3885')
var_4136 = relay.var("var_4136", dtype = "int64", shape = (420,))#candidate|4136|(420,)|var|int64
call_4135 = relay.TupleGetItem(func_3882_call(relay.reshape(var_4136.astype('int64'), [10, 7, 6]), relay.reshape(var_4136.astype('int64'), [10, 7, 6]), ), 0)
call_4137 = relay.TupleGetItem(func_3885_call(relay.reshape(var_4136.astype('int64'), [10, 7, 6]), relay.reshape(var_4136.astype('int64'), [10, 7, 6]), ), 0)
func_609_call = mod.get_global_var('func_609')
func_612_call = mutated_mod.get_global_var('func_612')
var_4151 = relay.var("var_4151", dtype = "bool", shape = (30,))#candidate|4151|(30,)|var|bool
call_4150 = func_609_call(relay.reshape(var_4151.astype('bool'), [1, 3, 10]))
call_4152 = func_609_call(relay.reshape(var_4151.astype('bool'), [1, 3, 10]))
func_3674_call = mod.get_global_var('func_3674')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_4173 = func_3674_call()
call_4174 = func_3674_call()
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_4183 = func_3423_call()
call_4184 = func_3423_call()
bop_4189 = relay.floor_mod(call_4183.astype('float32'), relay.reshape(call_4173.astype('float32'), relay.shape_of(call_4183))) # shape=(15, 2, 8)
bop_4192 = relay.floor_mod(call_4184.astype('float32'), relay.reshape(call_4174.astype('float32'), relay.shape_of(call_4184))) # shape=(15, 2, 8)
func_609_call = mod.get_global_var('func_609')
func_612_call = mutated_mod.get_global_var('func_612')
call_4202 = func_609_call(relay.reshape(var_4151.astype('bool'), [1, 3, 10]))
call_4203 = func_609_call(relay.reshape(var_4151.astype('bool'), [1, 3, 10]))
output = relay.Tuple([call_4131,call_4135,var_4136,call_4150,var_4151,bop_4189,call_4202,])
output2 = relay.Tuple([call_4132,call_4137,var_4136,call_4152,var_4151,bop_4192,call_4203,])
func_4209 = relay.Function([var_4136,var_4151,], output)
mod['func_4209'] = func_4209
mod = relay.transform.InferType()(mod)
var_4210 = relay.var("var_4210", dtype = "int64", shape = (420,))#candidate|4210|(420,)|var|int64
var_4211 = relay.var("var_4211", dtype = "bool", shape = (30,))#candidate|4211|(30,)|var|bool
output = func_4209(var_4210,var_4211,)
func_4212 = relay.Function([var_4210,var_4211,], output)
mutated_mod['func_4212'] = func_4212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4226 = relay.var("var_4226", dtype = "float64", shape = ())#candidate|4226|()|var|float64
const_4227 = relay.const([[[7.507479,7.749900,-8.474773,2.063133],[8.686667,0.518810,-8.537820,0.658965],[1.827716,-8.529682,-4.933379,0.680795],[9.706083,5.374008,3.768803,0.529149],[-3.778899,5.019064,6.317381,-3.022859],[0.191403,5.125320,4.088368,7.635884],[8.295892,-7.068427,6.513235,0.341066],[8.432971,-2.152165,-0.824271,8.075710],[-0.212009,7.242754,0.377811,-7.637235]],[[8.408665,-3.093114,-6.629265,5.263379],[-9.853422,2.437357,-9.131886,-9.969064],[9.515995,-5.074107,7.888499,-8.370746],[-0.507505,7.060499,-0.262399,4.218354],[7.854371,-7.038213,5.886980,-0.007180],[2.234886,3.000517,-1.099851,7.466074],[-6.037709,6.203226,5.574273,6.995332],[6.539473,9.749576,0.695066,3.675244],[5.165028,-7.708410,-0.681031,-9.468896]],[[9.130742,9.038071,8.816322,1.117745],[-6.723617,7.562784,2.438099,1.033440],[3.498099,-7.014376,6.448173,-5.108161],[1.835315,-3.464427,2.847047,1.760307],[-4.202867,-7.378159,-2.753149,-8.453133],[7.776044,-4.035947,-9.215323,2.447073],[5.067388,-9.152418,-7.635073,0.931947],[-6.225777,6.305575,-0.485450,-2.560138],[4.578408,-5.971983,-8.063285,-0.496143]]], dtype = "float64")#candidate|4227|(3, 9, 4)|const|float64
bop_4228 = relay.floor_divide(var_4226.astype('float64'), const_4227.astype('float64')) # shape=(3, 9, 4)
output = relay.Tuple([bop_4228,])
output2 = relay.Tuple([bop_4228,])
func_4231 = relay.Function([var_4226,], output)
mod['func_4231'] = func_4231
mod = relay.transform.InferType()(mod)
mutated_mod['func_4231'] = func_4231
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4232 = relay.var("var_4232", dtype = "float64", shape = ())#candidate|4232|()|var|float64
func_4231_call = mutated_mod.get_global_var('func_4231')
call_4233 = func_4231_call(var_4232)
output = call_4233
func_4234 = relay.Function([var_4232], output)
mutated_mod['func_4234'] = func_4234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mod.get_global_var('func_3757')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_4273 = relay.TupleGetItem(func_3757_call(), 0)
call_4274 = relay.TupleGetItem(func_3759_call(), 0)
func_2865_call = mod.get_global_var('func_2865')
func_2868_call = mutated_mod.get_global_var('func_2868')
const_4282 = relay.const([-9.543366,-4.579222,-5.745367,9.130882,-3.509233,5.840534], dtype = "float32")#candidate|4282|(6,)|const|float32
const_4283 = relay.const([-9,-8,-8,7,-2,-9,-5,-7,2,-10,-10,4,9,-4,-5,-2,10,9,3,-10,-4,-3,-6,8,6,6,9,4,10,-5,-10,1,9,8,5,-8,10,10,2,3,5,2,9,-6,-5,-6,-9,5,-9,9,4,5,-1,-10,-2,-10,6,5,-9,6,1,1,1,8,-2,3,6,-9,-2,1,4,1,5,-5,6,-10,-3,6,8,3,-3,-3,-6,-8,-3,-2,-10,7,10,10,3,-2,-1,-2,4,-1,6,8,8,10,-4,-6,-7,10,7,3,1,8,-6,3,8,7,-7,7,10,5,-2,-10,8,-6,1,-4,-7,-4,-5,-4,-10,8,-5,-5,4,1,-2,3,-1,4,-10,-6,-3,9,7,2,4,7,6,-8,-3,-4,-10,-7,-10,4,-1,7,1,1,-1,7,4,-7,-7,3,-4,7,6,4,4,5,8,-7,-10,-7,3,6,-10,-2,-10,9,3,-5,-7,-6,6,-6,3,-3,4,-6,4,8,7,-2,-6,10,-6,-8,-5,-6,6,-5,-7,-4,8,2,1,5,2,6,8,-7,2,-7,-10,10,-5,4,3,5,-7,-3,-6,8,-8,6,-10,-10,8,1,-10,-1,6,-1,3,-2,2,9,-6,6,1,9,4,-6,-7,-8,8,6,-7,4,-2,2,-4,1,-10,-5,8,-4,3,5,-9,-9,-6,-10,1,-5,-2,4,-10,7,2,4,-6,-6,-10,-9,6,7,-2,-5,3,-5,-8,1,3,-9,8,9,-4,2,-6,5,10,3,9,4,-7,4,-7,-3,-3,-7,8,6,9,-5,1,-8,-10,-3,-9,10,6,-1,-1,5,-9,-6,8,-8,-9,3,-3,-9,2,-3,-8,6,10,-9,4,-6,6,-1,-1,-1,-3,10,-7,-10,-10,-7,9,4,-3,-2,-9,-1,10,9,-2,-4,9,1,-3,-3,6,-3,5,6,-4,-6,-7,-8,-10,10,9,7,8,-4,-8,5,-6,1,-10,1,5,7,-6,-9,-3,-6,-1,-2,10,-1,2,-6,-8,10,-6,-2,-10,-1,5,1,-8,-2,-2,9,10,-2,-8,9,-7,-6,3,2,-8,-8,-4,10,-7,-1,7,-1,-2,7,3,-7,-8,3], dtype = "uint32")#candidate|4283|(420,)|const|uint32
call_4281 = relay.TupleGetItem(func_2865_call(relay.reshape(const_4282.astype('float32'), [2, 3, 1]), relay.reshape(const_4283.astype('uint32'), [420,]), ), 0)
call_4284 = relay.TupleGetItem(func_2868_call(relay.reshape(const_4282.astype('float32'), [2, 3, 1]), relay.reshape(const_4283.astype('uint32'), [420,]), ), 0)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_4293 = relay.TupleGetItem(func_3532_call(), 0)
call_4294 = relay.TupleGetItem(func_3533_call(), 0)
output = relay.Tuple([call_4273,call_4281,const_4282,const_4283,call_4293,])
output2 = relay.Tuple([call_4274,call_4284,const_4282,const_4283,call_4294,])
func_4306 = relay.Function([], output)
mod['func_4306'] = func_4306
mod = relay.transform.InferType()(mod)
output = func_4306()
func_4307 = relay.Function([], output)
mutated_mod['func_4307'] = func_4307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3674_call = mod.get_global_var('func_3674')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_4419 = func_3674_call()
call_4420 = func_3674_call()
output = call_4419
output2 = call_4420
func_4423 = relay.Function([], output)
mod['func_4423'] = func_4423
mod = relay.transform.InferType()(mod)
mutated_mod['func_4423'] = func_4423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mutated_mod.get_global_var('func_4423')
call_4424 = func_4423_call()
output = call_4424
func_4425 = relay.Function([], output)
mutated_mod['func_4425'] = func_4425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3858_call = mod.get_global_var('func_3858')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_4503 = relay.TupleGetItem(func_3858_call(), 0)
call_4504 = relay.TupleGetItem(func_3859_call(), 0)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_4538 = func_4423_call()
call_4539 = func_4423_call()
output = relay.Tuple([call_4503,call_4538,])
output2 = relay.Tuple([call_4504,call_4539,])
func_4549 = relay.Function([], output)
mod['func_4549'] = func_4549
mod = relay.transform.InferType()(mod)
mutated_mod['func_4549'] = func_4549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4549_call = mutated_mod.get_global_var('func_4549')
call_4550 = func_4549_call()
output = call_4550
func_4551 = relay.Function([], output)
mutated_mod['func_4551'] = func_4551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mod.get_global_var('func_3757')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_4560 = relay.TupleGetItem(func_3757_call(), 0)
call_4561 = relay.TupleGetItem(func_3759_call(), 0)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_4570 = func_4423_call()
call_4571 = func_4423_call()
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
const_4574 = relay.const([[3.531824,-8.534759,-1.582408,-0.974674,-9.656044,7.464822,-1.296810,-4.891841,-1.866411,3.596518,7.456953,-6.964959,-0.453603,3.857335],[-4.087339,8.236361,0.200325,9.722321,4.376481,7.439001,5.483555,7.613951,-0.998191,-0.725170,-1.930882,-5.869395,-4.845286,5.378595],[-5.122040,0.283392,7.024325,1.994871,-8.840931,4.643657,-8.191662,3.698618,3.986004,-6.872512,4.829982,-8.709998,-9.015772,7.366638],[1.857536,-0.027122,3.235644,2.093818,-3.722267,1.150994,6.504463,-1.852415,0.044683,8.029193,-7.208941,9.765937,5.193531,-8.955905],[-1.873374,-0.173784,-8.351005,-6.173679,9.277885,6.066442,-3.757969,-9.228264,8.101342,4.656305,4.741198,3.650393,-3.403489,9.765031],[-7.614605,-0.063580,5.122186,9.091741,1.684674,3.251189,1.398967,-7.807612,-0.546354,6.640318,3.431439,-1.746256,5.383892,5.564437],[-2.987902,2.694519,-7.710993,-0.541570,4.614904,4.898707,8.331892,5.223354,2.484390,-6.023220,-9.910282,5.623769,-7.142460,-7.448942],[0.103111,-9.187823,-4.980715,9.971074,0.908408,-4.820037,4.059921,7.536652,5.904289,1.230216,-6.325006,-0.598608,3.116896,-1.434338],[1.921889,3.862732,-8.964879,9.234391,-5.771703,7.730286,-3.808897,-3.110535,-1.815252,-9.485894,-2.113575,-4.940929,9.548445,3.165891],[7.799614,-1.738645,9.567367,1.131272,0.003456,-9.654280,5.999145,7.839747,-3.955753,0.334463,2.398789,-9.319588,6.833912,-5.636710],[9.038227,9.332982,-9.119636,4.432396,-5.593452,4.862958,7.936411,6.872524,-3.562610,-4.230952,-3.708010,9.905857,8.148372,3.391549],[-2.410584,7.207129,9.309150,-3.332119,3.931455,4.092899,0.100047,7.405347,3.895400,1.810894,-9.584491,-4.566925,-4.131270,-9.070787],[2.226643,-9.945088,-8.413677,0.400711,2.481134,4.984484,8.733896,-6.202104,1.031242,-4.634997,-6.900004,-9.771120,3.618280,8.935234],[-6.042144,-2.410326,0.872646,-8.535197,-6.623954,7.244247,2.731933,-3.469482,-2.844370,1.574762,4.042599,-7.231431,-7.280641,-0.972986],[2.233253,7.688595,6.005830,6.914077,-5.392178,-9.651679,1.826969,-9.699827,-5.113675,0.934093,9.746817,5.670966,-8.107673,-8.746354],[-8.870837,8.614397,-0.085404,-3.365029,-5.909123,-0.247487,7.837941,4.423215,7.351542,9.920174,2.889377,-6.216491,-5.231276,6.897478],[8.237390,0.318386,-3.183704,0.312098,7.194054,-0.770841,9.508486,-1.545846,-2.900878,9.969222,-5.763066,1.894327,7.199692,-8.448110],[3.679916,8.876193,-0.144402,8.071488,1.949452,1.528262,-8.424198,-1.574065,1.870598,-6.111933,-5.975846,8.461354,-3.007577,-1.388557],[-6.648917,0.077449,-9.879874,-7.690789,5.276773,0.702614,-4.193777,8.997451,1.757886,-7.633448,4.198894,-4.472960,-2.900906,-6.455401],[-4.179699,-2.911339,1.816126,0.537628,-2.379917,-5.235413,1.790991,-0.430747,6.526142,-9.389275,3.328916,5.349041,9.885833,7.761608],[1.834743,-9.008346,-2.932776,-7.300970,8.696055,-2.198215,9.461905,1.364223,-2.693760,-2.613880,-9.422215,-7.333759,2.954735,-0.059064],[4.615887,-7.204904,8.460485,4.033150,2.776059,2.085005,2.089956,8.541401,1.062614,8.573108,-5.403790,6.854736,-9.142501,0.027290],[1.184785,-8.144033,1.830094,6.445543,6.885290,-3.246819,-6.912561,5.961268,2.679150,-2.809723,-2.718884,5.525433,0.494241,6.031039],[-0.068574,0.097978,-7.342039,1.878945,-3.883416,-2.379928,1.831264,-6.968357,-5.727433,0.191118,-0.333231,-7.107826,4.785042,-6.520999],[-7.787517,-3.588736,-0.394620,-5.672924,8.741842,-5.318180,-1.470270,9.758186,6.016894,7.739040,-3.406084,-6.946037,-7.261857,1.388845],[-6.725140,-8.680463,8.174572,2.379809,-6.404368,-5.778015,9.133406,5.991878,2.231949,9.896471,3.732640,-2.469088,1.068466,-9.670672],[-6.853475,3.225648,9.187365,4.292698,-7.047981,-3.378048,9.022044,-5.463080,2.168992,-9.529264,9.288991,-4.280433,6.274134,-8.813952],[9.025493,-9.770858,-9.708284,-6.313005,-9.419549,-4.802969,-4.729666,0.755523,6.516491,6.883244,-2.218761,4.783891,1.034739,-7.168993],[-2.939184,-5.944206,9.579275,6.678991,-8.834685,-2.191500,-7.216738,-6.254828,2.680897,-9.960997,4.923982,-6.246321,7.977918,8.551772],[3.108031,8.640909,-1.473489,3.198266,1.032272,3.659827,-3.100117,-0.897020,-8.817472,4.195380,-9.508291,-6.359666,1.851726,5.533373],[-0.382470,-9.174909,-3.684193,-7.941987,8.408630,8.468884,-7.060803,-9.552872,-7.530942,5.662152,5.921965,-5.629647,-6.211641,-1.426216],[3.204147,4.814366,-7.463509,0.139548,2.273501,-5.130465,9.765104,8.891732,-4.943947,-1.867243,-1.515992,-9.484771,2.141539,-4.224491],[2.259215,0.389212,-8.709778,7.306150,-7.417911,-5.508004,-6.165991,-9.155493,-8.092188,6.883066,-7.557107,1.181572,-4.800066,-2.863504],[-9.908338,3.265205,4.201991,6.087754,5.716894,8.038803,8.402071,-5.081762,-0.116744,-5.929422,-3.859670,9.539010,1.624846,-8.613299],[-7.123409,2.331791,2.055705,9.418084,-3.851661,-0.871850,8.058042,1.459174,7.482916,-0.221361,0.687319,-5.241781,-0.870372,-9.985502],[-5.069968,3.948047,3.506198,-5.916380,-5.653532,-9.300499,-1.172423,-4.193661,-5.946932,-1.881592,4.914905,9.628968,9.100412,0.328559]], dtype = "float32")#candidate|4574|(36, 14)|const|float32
call_4573 = func_2525_call(relay.reshape(const_4574.astype('float32'), [7, 9, 8]))
call_4575 = func_2525_call(relay.reshape(const_4574.astype('float32'), [7, 9, 8]))
output = relay.Tuple([call_4560,call_4570,call_4573,const_4574,])
output2 = relay.Tuple([call_4561,call_4571,call_4575,const_4574,])
func_4576 = relay.Function([], output)
mod['func_4576'] = func_4576
mod = relay.transform.InferType()(mod)
output = func_4576()
func_4577 = relay.Function([], output)
mutated_mod['func_4577'] = func_4577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_4601 = func_4423_call()
call_4602 = func_4423_call()
func_3465_call = mod.get_global_var('func_3465')
func_3468_call = mutated_mod.get_global_var('func_3468')
const_4604 = relay.const([[-1.885889,-0.026628,2.783337,7.571468,-9.442764,-7.067896,1.299204,6.713388,6.501954,5.796178,8.771601,-7.793938,0.393172,8.180506,-5.036666,-0.086531,-5.676300,-5.014525,1.309379,7.392147,-7.693462,6.008960,2.551945,-7.101788,2.662060,-3.676098,-8.449628,9.468553,-5.062024,1.859535,6.838916,4.077132,-9.280472,4.562839,-6.008007,-8.874997,8.739563,-5.830630,-4.680891,1.595112,-0.698363,4.532459,0.659644,-6.853136,6.481315,-8.516640,6.684367,-9.338892,3.125435,-5.355788,-0.364567,-1.873282,-4.280266,-8.355935,6.640612,-4.598044,4.123864,6.039131,-6.476697,6.622218,3.096194,-7.996599,7.025895,9.436202,1.504218,-0.683202,-3.896110,9.109255,9.420302,5.290856,1.297867,-6.420783,4.496134,0.607469,-7.326311,3.907580,3.126730,-5.551016,-8.363575,4.865996,6.891498,9.956712,9.326434,1.227656,-2.916914,2.053030,-3.944265,0.979448,3.266774,-5.799252,0.153869,-0.303580,5.652886,9.990427,-9.441250,6.970446,6.871349,8.067591,7.501426,7.232293,4.968647,-5.682853,4.246704,-2.366374,-4.789515,-5.451497,-9.131335,-1.674408,1.254661,-2.884759],[8.783583,-0.229836,-1.468926,2.516737,-6.858836,-0.295416,7.119523,5.154965,-1.537185,-0.071224,-9.744566,-6.559413,9.695276,7.927368,-7.183304,-6.818615,9.080319,-9.872885,-9.697523,-6.222654,8.577837,-7.703921,7.579779,7.300184,4.206873,-5.083624,-5.752812,2.054051,-5.810640,-2.586712,-6.101465,-8.775708,5.383766,0.509523,-7.197280,-3.753746,-6.687153,-1.721121,5.835460,8.017324,4.754285,-8.476662,-2.136718,1.119723,-8.940596,-4.721545,-7.626760,8.332781,6.825047,0.091698,-2.015990,2.262840,8.236071,-2.947876,1.017361,5.252948,1.618049,-3.440361,0.208881,-4.341022,-8.045236,-7.275568,7.387481,-8.776958,9.809984,-7.053437,-8.786854,-7.850936,-9.939891,-9.608425,1.997881,-8.508813,4.059784,-0.047739,5.854449,7.821815,2.901141,-2.095370,7.608080,-7.986898,6.147660,-7.951234,-5.793873,2.140695,3.393770,8.993798,0.967386,2.228543,-4.390167,-9.893152,8.171985,7.694872,0.382673,1.882565,2.013485,9.367360,8.382451,-5.748845,7.678372,-7.646175,2.446811,8.076404,5.426554,7.275302,-7.514470,0.619630,3.246430,5.485930,4.711749,0.578641],[-9.741940,4.038509,-7.613926,4.874444,0.599257,-9.774330,6.757492,3.796627,1.616653,6.915032,-9.771738,9.440814,7.516340,1.482522,4.540470,2.592482,4.027294,9.888598,-8.188935,4.013671,-5.916327,-9.128775,6.283786,8.558299,7.510334,2.741349,1.464542,6.928008,1.445229,9.394287,-0.037985,-7.834890,1.830409,5.265686,-4.093779,6.809072,4.955632,0.079058,-8.060345,1.438091,8.450700,7.572811,9.924296,8.182377,2.698508,1.126170,-0.547330,-8.598593,-5.263904,5.633971,-2.129930,8.222672,5.474975,8.785480,1.686046,2.719123,3.158561,-5.990560,8.273241,2.175280,-9.112534,-5.004070,-0.419535,1.000537,3.504032,1.187008,0.244320,4.831354,2.846462,-0.618982,9.321041,4.996519,3.884304,3.712998,-5.899746,6.112762,2.943039,5.719738,-6.992290,-5.312239,2.427306,-5.186985,7.758099,2.765097,-8.154124,6.240032,2.472226,-8.688137,-0.502151,-9.219126,-0.872911,-6.044213,2.350128,0.816419,-3.820499,2.307999,3.512670,-0.907499,4.060971,-1.126442,-7.163390,1.502312,-7.532594,-0.037303,4.592876,7.310328,-2.139941,-9.266275,8.783819,-5.233647],[4.123536,-0.040256,4.625624,3.590943,-3.555084,-6.363107,-9.473252,2.308346,8.571516,3.998751,-9.303548,-6.275443,-5.545067,-2.383666,-6.255953,1.136433,0.007551,-4.379843,4.282674,8.703842,9.806878,-7.083456,-0.404362,1.175008,6.424822,-0.697402,8.775810,-4.502080,9.665799,-1.961220,0.287542,-1.547921,5.600073,5.731680,-0.585831,-6.179944,-2.543900,1.650821,-0.439329,-6.807461,-8.173752,9.132747,5.665570,9.224642,9.619464,-0.625867,-1.711973,9.601224,-0.818698,-5.044922,9.188895,-3.243013,5.540639,-0.236129,-6.346214,3.740780,-6.220727,7.674719,-7.325900,-7.674354,-3.136693,0.206397,7.188403,-9.105413,8.035579,9.952961,3.430704,6.483678,0.984594,5.514650,-7.506366,-6.251836,8.392955,0.392073,7.011782,9.819185,-3.843384,-8.031998,2.168344,3.485693,9.160219,-1.817264,2.583845,6.531640,0.559097,-4.345885,6.698017,-5.950746,-7.584874,-0.013582,-1.784719,7.700061,-7.824020,-9.480243,-2.632008,9.186589,-4.621900,6.345768,5.570456,6.140054,8.713232,-0.486570,-0.348147,5.443161,-9.715824,-3.313840,-2.382097,-8.893822,7.382454,-8.135938],[-6.907810,2.830328,3.533122,-9.889544,1.705648,-3.393611,-9.654470,5.204483,3.129099,6.817922,8.344541,-6.407032,-5.128973,-0.511685,-6.647361,8.149584,-5.699347,6.727836,1.391149,-5.167327,5.127440,6.420290,-8.227641,3.486100,-4.732056,8.860561,-2.705176,6.901419,-3.766056,7.769854,-9.798444,-4.084429,6.878775,5.922368,9.156299,-6.086200,-7.699193,-5.843239,-6.619187,-0.333330,0.545932,-4.318800,-3.868521,-1.757824,-3.691250,3.378522,-5.329742,8.924221,7.878608,8.769251,8.255926,-4.609786,1.251750,-4.181006,-5.988788,-6.434377,-9.719021,4.002049,-6.540956,-7.292779,2.062696,-5.952190,8.763157,-0.112255,-9.254318,2.593266,0.965140,0.793036,9.767511,-2.690263,-0.696655,4.989968,-9.022132,6.463300,-3.146222,4.390049,5.759245,8.706628,4.800053,-8.814337,4.180470,8.382762,7.640700,-7.144366,-0.308923,-8.193755,9.542939,-3.341650,-5.041142,6.625671,6.275374,8.997533,-5.980873,9.218953,-0.814611,9.883842,7.103955,-5.964583,9.682201,2.153825,5.710757,-5.646596,7.018246,-2.622111,0.911256,-4.716915,-5.222368,0.177715,9.027852,1.138125],[-8.705978,3.043949,8.617501,-1.012543,-6.192429,9.633292,9.932141,2.182371,-8.175485,6.360134,0.392900,-6.955829,5.864742,-9.742637,-8.398575,-0.782860,-8.227036,-6.358809,8.803355,-4.930001,2.211012,6.063001,4.877615,2.978444,3.649665,4.119642,7.114999,-4.527348,-7.241361,7.893054,-5.426055,9.048054,6.257145,0.319975,7.373358,5.009965,8.139064,6.235533,9.134315,-5.977046,5.009881,4.036957,0.462315,6.630878,-8.315222,-9.445037,-0.937106,2.341246,6.914159,-4.554194,-6.221588,4.164545,3.427731,-0.501584,-8.729612,7.176165,5.646661,-3.929813,-8.134373,-9.784880,-5.021375,-5.783745,-7.970751,-4.833228,-8.176592,-1.015307,-9.854341,-6.919259,8.778381,-0.959698,2.449260,1.974809,-3.067201,9.859638,-1.938766,2.454675,-3.150624,5.012640,0.218642,-7.636205,6.208815,-5.010771,5.260400,7.393410,-4.879640,-4.624222,2.415480,-3.642783,4.446852,-9.837994,5.842799,-5.559835,3.310105,-5.378230,0.515429,-8.711284,-7.509924,4.993234,0.070754,-6.547040,-9.303168,1.223573,-3.694517,-7.381759,0.168980,5.167263,-1.848108,-5.281981,-0.260112,2.180298],[-9.350414,-4.467866,-9.960092,-9.920642,-2.972772,9.742240,0.456002,-5.245074,-6.189746,1.424068,7.643306,-6.194601,-3.254203,-2.224111,-8.678162,-0.938062,7.274032,9.076375,-2.373960,-6.670645,-0.668436,-1.928789,-6.878914,9.241892,2.376564,2.003037,-4.437126,-0.216086,-2.629933,5.189015,-8.423039,2.908345,-1.499661,-9.454264,-3.971125,9.265763,-9.479489,-2.679150,-9.730133,-8.521196,-8.660222,-4.165825,6.038109,5.816914,3.025542,-4.430142,8.847865,-3.994352,-8.240449,-8.528691,8.533051,3.201992,2.542680,-8.867908,-3.596297,7.897379,-8.908329,9.700521,4.074737,-0.321639,8.961421,-7.260974,-0.245263,-3.662238,3.798048,-0.335497,-9.135554,1.303865,2.915693,6.249918,-5.976192,2.025920,-5.645471,-4.383915,1.812258,3.329285,-4.841407,6.316677,-8.339122,8.656265,5.744161,-0.460736,-8.034546,9.294487,8.386761,5.864513,-2.813247,3.160028,0.647192,-1.786564,-0.935674,1.263583,9.717713,1.934015,-5.975825,-2.638060,-2.843259,1.069209,-3.084262,4.325699,4.748451,6.896092,0.545662,-0.457505,-2.860982,9.527470,-3.956713,4.480571,-3.549171,5.908649]], dtype = "float32")#candidate|4604|(7, 110)|const|float32
call_4603 = relay.TupleGetItem(func_3465_call(relay.reshape(const_4604.astype('float32'), [7, 10, 11]), relay.reshape(const_4604.astype('float32'), [7, 10, 11]), ), 0)
call_4605 = relay.TupleGetItem(func_3468_call(relay.reshape(const_4604.astype('float32'), [7, 10, 11]), relay.reshape(const_4604.astype('float32'), [7, 10, 11]), ), 0)
func_4069_call = mod.get_global_var('func_4069')
func_4072_call = mutated_mod.get_global_var('func_4072')
call_4613 = relay.TupleGetItem(func_4069_call(relay.reshape(const_4604.astype('float32'), [770,]), relay.reshape(call_4603.astype('int64'), [420,]), ), 4)
call_4614 = relay.TupleGetItem(func_4072_call(relay.reshape(const_4604.astype('float32'), [770,]), relay.reshape(call_4603.astype('int64'), [420,]), ), 4)
func_3674_call = mod.get_global_var('func_3674')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_4632 = func_3674_call()
call_4633 = func_3674_call()
const_4635 = relay.const([[-7.728458,-8.715228,-0.214223,5.312543,8.395342,7.913807,7.410733,0.340545,5.603202,4.121382,4.106372,-9.002652,-4.359611,6.158219,-1.433721,2.616427,-9.050677,2.270032,0.657590,3.721025,-6.670619,1.524013,-6.855228,-1.758003,-4.027690,-6.929482,-5.429564,-0.436160,8.792900,5.482019,1.779779,-8.350580,-0.483534,-1.513001,-5.489032,-7.804468,-0.538656,4.600030,-3.430784,-6.059596,7.888835,-6.334873,-8.196670,1.464846,-6.554075,1.902430,7.387452,9.312734,2.955834,4.670414,-2.459271,6.825184,7.320858,5.572645,-4.169761,-1.943012,-9.644611,-0.413796,9.335671,-4.071385,-9.301157,4.631667,-9.391275,7.844945,-4.027014,0.907950,-3.309316,-0.077883,8.980551,-0.998219,5.152618,-4.560852,2.193150,-9.268216,-1.119891,9.501699,-0.112276,-6.110250,5.707307,0.513647,-1.889179,-4.239709,5.140722,-8.859893,-8.370889,-4.043678,7.494361,1.711594,6.468794,2.378094,2.378339,-1.961102,-6.900027,-2.604419,-5.216733,7.712526,-6.777551,-6.527128,-1.936136,9.447291,1.599374,0.211378,-5.030027,4.402283,-6.627569,7.253982,7.091935,-8.993656,-9.998676,-6.453914],[-8.147803,4.184155,8.156742,-2.488356,-5.302919,7.262864,7.189832,-7.384818,2.124495,-2.725888,-7.893852,3.421799,1.404701,9.403347,-3.096684,9.861052,-5.983921,-4.861019,-6.398505,1.706769,-4.240823,-8.515546,9.978481,9.846446,-7.705769,6.294327,1.475027,5.296058,-7.514575,-1.631730,-6.685592,3.428741,-1.214566,-4.635420,-9.648032,6.022938,-3.999773,-7.915488,-1.038825,0.353034,1.551586,9.183349,4.811963,-7.178786,-8.527385,8.758766,-5.177634,5.667094,-7.825139,4.998367,8.898304,7.078846,-6.015263,-7.535009,0.858679,4.299707,-3.328014,6.894252,4.408718,1.113431,-3.531903,-4.477230,2.952981,7.218736,-8.528648,-8.541674,3.149138,5.850906,6.817768,-8.539954,5.300719,-4.779294,-9.823415,-4.746451,0.170440,8.596331,-3.265277,-1.166417,7.841004,1.716082,-2.079009,-7.370611,9.729832,5.937984,5.053764,6.170077,5.111828,-2.064725,8.779374,-7.705377,-8.088713,-2.513127,0.629875,-5.900178,-8.258896,-2.170039,3.783746,-9.394065,9.432830,8.931757,3.783177,8.529459,-7.276936,-0.273333,-7.372627,-6.028933,3.267387,6.188275,3.992253,3.682264],[7.546143,-0.575912,-2.781215,1.049967,-9.200461,-2.852876,0.815471,8.369888,3.634391,8.227356,-5.536519,-9.836867,-9.581942,-1.260601,9.791948,7.334943,-6.753662,9.501830,-7.383191,-3.745543,-8.710104,-8.584102,-5.864370,8.103972,-9.143372,-8.624800,4.587118,-2.258124,-2.799956,3.456334,-1.418861,0.766000,5.106265,-3.915471,6.264605,-8.718132,4.444123,-9.808477,-3.330254,-0.798011,-2.810726,2.067580,8.089638,-2.642767,9.617160,-1.636799,-0.924730,-9.225744,-0.701598,-2.246702,2.290483,8.399458,9.695117,-5.874210,-6.283124,-2.044522,8.550353,-1.589135,9.657936,4.955717,-5.416990,0.102672,6.354572,-5.287286,-6.337706,6.460761,-3.185591,-8.264667,-2.255311,7.395264,5.429131,-3.012233,-1.931326,-6.885059,4.520547,-9.437146,4.172584,-0.315668,9.378292,-8.161258,4.565714,7.018045,5.321387,-9.292434,-9.106119,-9.201341,2.216910,1.528281,8.155743,-1.330098,7.967983,-2.969432,-8.515028,5.039666,-2.388429,2.896262,8.756724,0.737180,-9.244545,9.300767,7.994834,5.707880,-1.251464,-5.546706,-1.230755,-9.907096,7.716067,-5.144665,3.670930,5.302223],[1.919884,-4.455585,7.583869,9.407369,4.731659,7.416234,-6.695496,2.359814,2.428453,-8.618134,-6.906551,0.145047,-5.727291,1.284590,3.930145,1.440341,9.032089,7.749388,1.764808,9.227853,9.977708,0.322203,9.011057,-7.125338,8.233335,-9.314854,5.235277,9.432111,8.456838,-8.627202,-3.944088,7.248262,1.711052,-2.839636,-3.183828,1.958769,-7.320486,6.540745,9.000509,-4.943123,5.600615,5.188903,-9.835584,-3.102634,6.493395,-7.037872,-7.823436,-0.117980,2.381859,-9.503026,-1.816606,6.977572,-3.850009,-6.064789,9.833157,-8.152459,8.132409,4.838550,6.601487,8.217935,-7.755267,-0.218397,6.035420,-0.972003,3.367795,-0.320211,-7.827112,5.053009,2.098085,0.709660,-9.960448,1.620392,8.499159,-6.400193,-0.442928,7.918390,9.229592,4.073794,-3.161951,0.934417,-4.460745,2.411926,-0.107623,4.163330,-0.787454,-2.646512,1.975806,-7.575095,-5.260602,8.856522,-2.641694,-4.014706,-0.375202,9.751749,8.524539,-9.963716,-5.275094,3.536653,-8.599259,-8.033201,9.197377,-6.089055,-7.027579,8.870005,5.743822,1.401161,8.488406,9.259358,9.632176,2.169773],[-6.930566,-6.735111,6.747380,0.478572,7.810531,2.649320,-4.147410,1.882878,-6.720076,2.786610,9.797142,-7.150560,-5.648422,-8.016791,-8.538665,2.852074,8.053111,2.289077,0.610641,1.647081,5.523742,2.101752,-1.559129,-7.375845,9.604949,-4.938210,8.536277,0.271839,-1.139154,9.467397,0.104736,1.333302,2.938255,-1.056933,9.039828,0.914691,-8.669122,-7.735972,5.490896,8.341321,7.818466,3.585608,-1.846752,-5.783170,-3.097922,6.891414,-6.952222,-4.141667,-7.116270,-7.815566,-6.593737,-1.127727,-0.343725,4.097570,0.049018,-3.483543,-2.914672,8.942457,7.599990,-3.217197,-5.673510,3.475749,-2.434657,-2.639444,-3.139467,5.013511,-3.796945,6.121970,-9.810225,-3.369909,-1.657822,-5.007692,-7.757224,7.533009,-1.118766,2.404218,-1.332961,3.952670,-5.752421,3.081466,2.717650,-1.952993,-0.345856,-1.644440,-3.347021,-7.378512,-9.240559,-0.474971,6.225279,-9.303904,2.783772,-6.843186,-4.887352,-9.238699,2.126358,-8.460313,-7.590522,-4.531818,-4.133441,-9.200644,4.931914,1.920994,9.532424,-3.830743,-0.411414,-7.474930,-0.784870,3.845616,6.474069,5.191375],[3.644745,2.712410,-7.300125,-0.557324,-0.523014,-0.159424,3.023845,3.672926,9.174269,2.250576,-3.754845,6.808687,-1.328291,-4.371399,-1.975103,-0.003213,5.530477,-1.662707,3.537016,-5.546823,1.552154,5.831944,3.221947,1.785537,-3.074167,-4.713432,2.119147,5.495984,-5.812471,2.221883,-1.128454,-0.331997,0.406704,3.057003,4.901149,-3.992268,-1.148847,5.993256,5.565473,-5.045720,-6.608915,-5.017720,-9.026807,1.250003,5.182359,-3.982474,7.839997,0.445221,6.067181,8.486495,2.863157,3.227209,-3.803269,0.561325,2.236524,1.948684,-6.522141,8.376235,-8.499777,5.363509,0.583317,4.860465,-3.243449,7.085214,1.113475,-7.189846,3.158803,7.402754,-0.423442,3.105764,-3.625474,1.023135,-4.178077,-3.117476,-8.242078,0.873081,2.825744,-7.952237,4.774744,4.411472,-1.366238,0.584166,0.265546,1.764494,8.647317,6.516790,-2.130771,-3.144102,-7.279833,0.422009,-9.992405,-4.246312,6.808448,0.913374,0.922975,2.642468,-4.083347,5.640502,5.265564,-1.890719,5.622384,0.834905,-1.554100,-4.065221,-8.277485,8.937850,-7.260380,-9.646037,-4.773598,1.098554],[-4.799101,-0.979807,1.636128,-3.064709,-2.054320,-6.373050,-4.153775,6.957901,5.284315,1.932375,5.074499,4.797520,2.785752,6.614181,9.062911,9.252373,-4.266711,3.710581,6.623956,-0.739531,-9.588794,5.041592,-6.847216,4.058633,-4.224494,4.705116,-5.906474,-8.033051,-1.941219,7.054410,-0.084457,4.549896,-4.870222,-6.411384,-4.304918,-0.764733,3.701024,-9.825503,-3.440403,-6.139088,-0.056367,8.922562,-0.208863,-4.968406,6.317088,-2.466901,-8.028041,-0.623491,-4.968217,-1.841501,-7.288317,9.129012,-6.968362,9.900814,-3.970187,-2.940612,-1.415555,4.702753,4.237002,3.306138,3.088927,-5.524062,-6.416787,8.399390,3.024207,4.142584,-5.203050,-1.151555,-6.124363,7.343179,3.485699,-5.379411,4.917831,-7.048589,1.348858,-9.125361,8.132038,6.256679,1.457889,5.858782,-6.926239,-3.992254,0.591007,-0.362826,1.067390,-6.919183,3.597474,-6.742810,-4.879084,8.549521,-3.187312,4.613777,-0.321824,3.441667,7.620554,-6.199676,-4.864814,-1.235623,9.806008,3.847587,-4.167917,0.260118,-8.049248,3.082633,-5.849554,4.325131,-1.938309,3.633262,7.902374,-5.288060]], dtype = "float32")#candidate|4635|(7, 110)|const|float32
bop_4636 = relay.less_equal(const_4604.astype('bool'), relay.reshape(const_4635.astype('bool'), relay.shape_of(const_4604))) # shape=(7, 110)
var_4646 = relay.var("var_4646", dtype = "float32", shape = (7, 110))#candidate|4646|(7, 110)|var|float32
bop_4647 = relay.left_shift(const_4604.astype('int8'), relay.reshape(var_4646.astype('int8'), relay.shape_of(const_4604))) # shape=(7, 110)
uop_4654 = relay.sqrt(const_4604.astype('float64')) # shape=(7, 110)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_4656 = relay.TupleGetItem(func_3532_call(), 0)
call_4657 = relay.TupleGetItem(func_3533_call(), 0)
func_3699_call = mod.get_global_var('func_3699')
func_3701_call = mutated_mod.get_global_var('func_3701')
call_4660 = func_3699_call()
call_4661 = func_3699_call()
func_3674_call = mod.get_global_var('func_3674')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_4662 = func_3674_call()
call_4663 = func_3674_call()
output = relay.Tuple([call_4601,call_4603,call_4613,call_4632,bop_4636,bop_4647,uop_4654,call_4656,call_4660,call_4662,])
output2 = relay.Tuple([call_4602,call_4605,call_4614,call_4633,bop_4636,bop_4647,uop_4654,call_4657,call_4661,call_4663,])
func_4673 = relay.Function([var_4646,], output)
mod['func_4673'] = func_4673
mod = relay.transform.InferType()(mod)
var_4674 = relay.var("var_4674", dtype = "float32", shape = (7, 110))#candidate|4674|(7, 110)|var|float32
output = func_4673(var_4674)
func_4675 = relay.Function([var_4674], output)
mutated_mod['func_4675'] = func_4675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_4697 = func_4423_call()
call_4698 = func_4423_call()
var_4704 = relay.var("var_4704", dtype = "float64", shape = (15, 2, 8))#candidate|4704|(15, 2, 8)|var|float64
bop_4705 = relay.less(call_4697.astype('bool'), relay.reshape(var_4704.astype('bool'), relay.shape_of(call_4697))) # shape=(15, 2, 8)
bop_4708 = relay.less(call_4698.astype('bool'), relay.reshape(var_4704.astype('bool'), relay.shape_of(call_4698))) # shape=(15, 2, 8)
output = relay.Tuple([bop_4705,])
output2 = relay.Tuple([bop_4708,])
func_4714 = relay.Function([var_4704,], output)
mod['func_4714'] = func_4714
mod = relay.transform.InferType()(mod)
mutated_mod['func_4714'] = func_4714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4715 = relay.var("var_4715", dtype = "float64", shape = (15, 2, 8))#candidate|4715|(15, 2, 8)|var|float64
func_4714_call = mutated_mod.get_global_var('func_4714')
call_4716 = func_4714_call(var_4715)
output = call_4716
func_4717 = relay.Function([var_4715], output)
mutated_mod['func_4717'] = func_4717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3674_call = mod.get_global_var('func_3674')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_4724 = func_3674_call()
call_4725 = func_3674_call()
var_4730 = relay.var("var_4730", dtype = "float64", shape = (15, 2, 8))#candidate|4730|(15, 2, 8)|var|float64
bop_4731 = relay.less_equal(call_4724.astype('bool'), relay.reshape(var_4730.astype('bool'), relay.shape_of(call_4724))) # shape=(15, 2, 8)
bop_4734 = relay.less_equal(call_4725.astype('bool'), relay.reshape(var_4730.astype('bool'), relay.shape_of(call_4725))) # shape=(15, 2, 8)
output = bop_4731
output2 = bop_4734
func_4736 = relay.Function([var_4730,], output)
mod['func_4736'] = func_4736
mod = relay.transform.InferType()(mod)
var_4737 = relay.var("var_4737", dtype = "float64", shape = (15, 2, 8))#candidate|4737|(15, 2, 8)|var|float64
output = func_4736(var_4737)
func_4738 = relay.Function([var_4737], output)
mutated_mod['func_4738'] = func_4738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_4778 = func_3423_call()
call_4779 = func_3423_call()
output = relay.Tuple([call_4778,])
output2 = relay.Tuple([call_4779,])
func_4783 = relay.Function([], output)
mod['func_4783'] = func_4783
mod = relay.transform.InferType()(mod)
mutated_mod['func_4783'] = func_4783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4783_call = mutated_mod.get_global_var('func_4783')
call_4784 = func_4783_call()
output = call_4784
func_4785 = relay.Function([], output)
mutated_mod['func_4785'] = func_4785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_4799 = func_3423_call()
call_4800 = func_3423_call()
uop_4821 = relay.cosh(call_4799.astype('float32')) # shape=(15, 2, 8)
uop_4823 = relay.cosh(call_4800.astype('float32')) # shape=(15, 2, 8)
var_4826 = relay.var("var_4826", dtype = "float32", shape = (15, 2, 8))#candidate|4826|(15, 2, 8)|var|float32
bop_4827 = relay.maximum(uop_4821.astype('uint32'), relay.reshape(var_4826.astype('uint32'), relay.shape_of(uop_4821))) # shape=(15, 2, 8)
bop_4830 = relay.maximum(uop_4823.astype('uint32'), relay.reshape(var_4826.astype('uint32'), relay.shape_of(uop_4823))) # shape=(15, 2, 8)
uop_4837 = relay.rsqrt(uop_4821.astype('float64')) # shape=(15, 2, 8)
uop_4839 = relay.rsqrt(uop_4823.astype('float64')) # shape=(15, 2, 8)
func_609_call = mod.get_global_var('func_609')
func_612_call = mutated_mod.get_global_var('func_612')
var_4843 = relay.var("var_4843", dtype = "bool", shape = (30,))#candidate|4843|(30,)|var|bool
call_4842 = func_609_call(relay.reshape(var_4843.astype('bool'), [1, 3, 10]))
call_4844 = func_609_call(relay.reshape(var_4843.astype('bool'), [1, 3, 10]))
bop_4849 = relay.logical_and(uop_4837.astype('bool'), relay.reshape(uop_4821.astype('bool'), relay.shape_of(uop_4837))) # shape=(15, 2, 8)
bop_4852 = relay.logical_and(uop_4839.astype('bool'), relay.reshape(uop_4823.astype('bool'), relay.shape_of(uop_4839))) # shape=(15, 2, 8)
bop_4860 = relay.bitwise_and(uop_4821.astype('uint16'), relay.reshape(call_4799.astype('uint16'), relay.shape_of(uop_4821))) # shape=(15, 2, 8)
bop_4863 = relay.bitwise_and(uop_4823.astype('uint16'), relay.reshape(call_4800.astype('uint16'), relay.shape_of(uop_4823))) # shape=(15, 2, 8)
uop_4865 = relay.sin(bop_4860.astype('float32')) # shape=(15, 2, 8)
uop_4867 = relay.sin(bop_4863.astype('float32')) # shape=(15, 2, 8)
func_406_call = mod.get_global_var('func_406')
func_409_call = mutated_mod.get_global_var('func_409')
var_4914 = relay.var("var_4914", dtype = "float32", shape = (2016,))#candidate|4914|(2016,)|var|float32
var_4915 = relay.var("var_4915", dtype = "uint64", shape = (162,))#candidate|4915|(162,)|var|uint64
call_4913 = relay.TupleGetItem(func_406_call(relay.reshape(var_4914.astype('float32'), [9, 16, 14]), relay.reshape(var_4915.astype('uint64'), [162,]), ), 1)
call_4916 = relay.TupleGetItem(func_409_call(relay.reshape(var_4914.astype('float32'), [9, 16, 14]), relay.reshape(var_4915.astype('uint64'), [162,]), ), 1)
func_1753_call = mod.get_global_var('func_1753')
func_1756_call = mutated_mod.get_global_var('func_1756')
const_4926 = relay.const([-2.440330,3.553928,-8.576504,-9.874488,3.728575,3.114225,-7.365587,-8.243264,9.636763,-4.186903,6.859581,6.594225,0.949189,0.420941,-6.734633,4.796221,8.221765,-8.079772,3.740667,0.153267,-5.275823,9.232000,-9.666757,3.309322,-6.458730,6.243700,3.435981,6.059669,7.459508,2.458973,5.782464,-4.700782,-8.059604,-7.361838,3.698047,-4.656891,-1.082806,-8.862648,5.465905,-8.244658,-9.280980,-6.337317,-2.172733,-9.654138,-9.047905,5.557991,2.521801,-2.807368,-9.777151,0.521766,-8.820920,-9.954054,5.847806,9.727581,-3.006006,-9.353636,-0.779936,-7.800290,2.856430,-7.133738,3.550916,8.642382,8.805138,-3.453353,-0.311580,-8.142642,9.924410,7.737644,9.262202,-1.033076,1.012671,-9.059240,4.468727,-3.690768,-5.594674,-3.996962,5.579450,-1.162398,0.870097,-5.693459,-4.417165,4.076508,6.023050,-3.764702,4.731146,4.598477,-2.426345,-3.411707,-7.258088,-1.509417,7.740086,-1.655501,-7.621386,-3.073353,5.124419,3.507974,7.455063,-2.556025,8.372561,1.638826,4.945548,0.030431,1.467322,6.160268,7.834669,-2.972792,-5.458139,4.116218,9.223245,-2.511162,-2.749278,-6.492116,-2.910481,0.413972,3.461937,1.009750,8.526623,-2.471730,-2.293866,-0.053440,4.163723,1.294833,-7.065417,-5.514816,-6.238632,-6.766426,-9.297506,-9.988963,1.028926,1.308227,-7.321896,6.507687,0.907367,-1.843651,0.702954,0.779038,9.265865,-1.862565,2.812287,5.643314,-8.059646,7.783966,-7.306154,6.068925,7.435888,0.937343,5.832466,1.243816,-7.846579,6.633420,-4.079999,7.958136,1.172639,8.008464,-9.784073,-5.163662,6.455375,-2.431944,4.529811,7.579206,-2.739930,-9.111914,-7.905723,-5.494456,-7.510956,-5.719534,4.240407,-2.126282,-3.845736,1.934112,4.820072,9.923121,7.648910,-6.430754,7.119890,7.950629,-9.028555,-2.063636,4.380924,-9.413081,-3.643358,5.954557,-3.719218,-3.140632,4.006966,2.962115,9.140368,1.562549,-2.684566,4.449060,-7.217071,6.951323,-5.699226,5.345527,1.586763,5.574743,-4.551565,7.049495,1.738461,6.740298,5.822985,1.567333,2.713727,-8.854219,-0.464547,-5.194473,-4.936660,-1.269494,9.214045,7.425909,6.875541,-7.263942,6.376351,-9.262598,7.733655,0.326601,-0.543845,2.262711,-8.117099,-7.231091,8.102624,1.828482,-9.066510,-2.084606,8.607957,-9.237294,8.216167,-5.829018,-8.313499,2.052878,7.556276,4.576913,0.071774,4.452280,-5.447546,-9.537737,-2.752742,6.589608,5.244138,-8.478474,2.817739,7.869379,4.604712,9.978466,-1.347720,1.128932,-0.108780,-5.950578,4.592208,5.185809,7.763336,4.372422,5.685758,-5.845819,4.389261,1.720686,-9.774458,1.070058,-4.807819,9.409253,8.555113,-2.268861,1.806883,9.949239,5.334324,-6.194000,-2.072481,-7.265446,7.681433,1.513668,-1.704006,7.763801,3.159247,-0.587446,-1.604354,1.566011,2.238106,9.560101,-2.022649,9.600366,8.525442,-8.997929,-4.942262,0.544210,0.323152,-9.482265,5.882095,-4.406910,-0.884672,-0.170615,3.602840,-9.425822,-6.391290,2.152928,-7.685147,-7.465412,1.384349,2.977455,8.859433,3.209852,6.701433,-0.148798,8.243046,-4.493322,-0.406521,-5.996130,-3.181069,-7.275079,-8.844078,6.123847,-2.464984,-7.801920,-7.624706,7.427417,-8.471899,-9.097818,-4.783765,-4.527614,-2.978243,1.622617,-3.047003,-9.217023,-3.727918,5.716387,-3.781884,8.277095,-8.184451,-5.980339,-3.572487,-5.531783,-0.966184,-2.659373,-5.513196,9.154063,7.448546,1.134735,-7.930152,-9.026823,-1.939135,-3.060128,-8.190574,7.032380,4.623287,0.058449,-3.471822,9.479350,5.631021,3.667395,-1.099211,-5.527463,-8.444262,8.647916,5.237180,1.768566,9.142715,-6.350073,-2.288527,-1.710567,-9.033350,6.922162,-0.381573,5.060311,-5.485054,5.675418,8.313210,5.393675,4.977507,7.356143,-5.919366,-3.753995,-1.182941,-6.550264,-6.610561,-1.550171,-2.472998,9.007908,-0.793759,-3.276470,-6.695705,-1.408468,8.825217,6.634443,-1.265457,7.364236,6.183669,8.998235,4.417048,-7.096101,-4.918728,-6.757619,-6.203822,5.147414,-2.776551,-1.184171,7.868093,9.369180,-1.166526,3.945424,8.224567,2.051899,-8.384302,-1.246885,-8.653079,-3.353093,4.841968,-6.142835,-2.185305,5.621124,2.838627,1.443573,-8.571220,-3.178259,4.250059,1.831931,-2.073235,-0.346942,6.019885,-2.153562,7.939593,4.704966,9.315438,4.416186,5.214581,1.190799,-7.630949,-7.431265,0.606299,6.596856,-8.919681,6.960431,6.351365,-0.725994,-0.918704,7.832616,7.732926,-0.761323,-9.795994,-1.400938,-2.334614,-9.357580,8.185653,7.097794,2.171434,3.630902,-9.263506,4.065430,-5.623051,-2.091495,-1.430352,1.045019,-6.255229,6.106107,8.617447,6.352098,8.979954,-2.273859,-7.757378,2.368643,-5.839010,8.324486,7.063506,-7.770157,-4.505349,-0.477784,-7.673613,-3.528816,5.631229,3.989347,-2.785723,8.389283,1.536773,-1.141129,8.412839,8.645478,-8.920183,-4.105056,0.789491,-1.017865,-5.419448,2.681654,-0.066109,4.855444,7.583253,-8.041925,7.527943,3.576655,4.168709,-5.946114,4.550310,-1.946125,6.130487,6.120320,3.485267,-7.167540,-0.357700,6.334636,-4.843570,-2.817866,6.231453,7.196694,-1.004969,8.853283,-9.130191,4.788678,-5.668274,9.758420,-4.781291,-6.934319,-0.495131,6.535961,-6.355486,5.870951,-9.803742,-6.673126,-9.122329,-6.311056,-1.095078,-2.896584,-3.417208,-4.848484,2.924518,-9.513074,-8.904754,-2.645314,2.139167,8.991479,-8.254927,-1.236795,9.625122,-4.730517,-1.078019,-6.758100,1.877377,1.995298,-7.471494,-1.178919,-3.553151,-4.795108,8.890997,5.468387,-3.931589,6.619970,-3.055396,1.560320,-5.335037,1.773720,4.750198,-5.159772,6.148870,-9.274660,3.264391,2.401139,3.275183,0.350995,-8.135985,7.894542,2.052640,8.055499,0.287156,3.936165,2.943268,-9.935024,9.114539,9.515108,7.211119,-8.595791,-4.117551,-0.816700,0.757044,-2.156464,-7.619308,4.080949,-7.901717,7.261038,7.177420,-2.434670,-4.569843,4.707780,9.612922,-2.782725,-9.442113,0.438965,-7.632547,-5.393213,7.653215,-2.375639,3.459348,-1.626241,-8.347561,3.986806,-4.182131,-9.626435,-3.045527,-2.419094,-6.412732,-6.904521,-2.736038,5.731683,3.210433,-9.137365,8.088917,7.501651,-6.826053,-4.176745,6.604952,0.842239,6.803841,-0.237634,6.321294,0.121612,0.160046,1.322266,-7.851655,3.323812,-9.309696,-2.569025,-1.209864,-0.852680,7.607280,5.847329,-2.754622,4.362136,6.585610,-7.679128,-3.113560,-6.916617,2.242661,3.092991,9.805072,-2.570679,4.400587,8.472677,-9.358296,-5.768750,-6.258173,-2.355416,-4.609552,2.179707,-3.399093,5.389674,0.482293,-0.223912,7.531099,-1.280636,-7.879169,-9.311239,-3.873595,2.967801,-2.766387,-2.983045,-1.352004,8.619823,-7.516265,-5.945305,-5.456782,-1.778833,0.859617,2.584028,-1.288792,6.529990,-3.636231,-2.367386,0.030419,3.056227,-3.444341,8.326132,-1.956049,5.669945,4.901566,7.122769,1.283339,0.301597,4.382669,8.588043,3.396552,-9.854577,0.324882,-9.909521,9.218366,-3.531894,6.653185,-0.086619,-8.950679,9.089167,9.006988,-9.886054,-9.091654,3.032632,-1.124554,9.485504,-6.121318,4.114344,8.125559,-1.412752,7.835948,-1.215904,-6.838090,-3.728099,-3.853759,-0.348622,2.011307,7.199990,2.492252,1.551420,6.882397,7.416012,-3.717095,1.013097,-4.423771,-4.356026,-7.527535,-4.675228,1.570979,-7.596476,-4.989921,9.143525,6.587762,3.676316,-0.536559,-3.980361,-6.794566,5.943928,-6.182554,-0.700491,-9.098194,-5.699840,3.476908,-7.343016,8.645652,-4.615505,1.454351,7.692794,-3.750948,3.651900,2.463710,2.897477,9.210125,8.509089,9.591367,-0.053203,-8.272389,3.636607,-8.483283,6.222698,-5.233128,2.313383,4.952197,-3.155464,-9.752490,-1.863139,0.297472,2.156832,-3.234551,-3.137131,-4.324338,-3.585763,0.444044,-4.511259,2.297831,7.486083,9.451104,3.546771,-8.950647,5.417243,-6.555271,-5.370519,4.504123,-3.163751,-8.568184,7.917335,-0.593143,-3.788787,6.222157,2.452769,-5.727446,-3.765085,4.430816,-1.068916,7.966700,-9.254737,-1.554677,5.831021,-0.263323,3.792675,-0.381558,0.590824,-5.540103,-5.856171,-0.489478,-3.017990,0.922414,9.510931,1.580458,-9.870493,3.967801,-5.024055,7.401321,6.910804,0.612585,0.752448,7.964176,-6.716638,-1.542674,-3.943509,-0.794540,2.712899,0.759336,8.787110,-2.516256,-3.013532,-2.193636,6.235497,-1.224546,-7.846453,-6.520343,-4.592537,-9.305997,2.563694,9.158667,-9.917723,0.654538,9.088275,-5.247662,6.323254,-3.837323,-8.438219,-4.065327,2.544640,-6.808981,-0.420743,2.200774,-2.575689,-1.724371,-8.252418,2.503435,7.275320,-1.119693,-7.535582,3.192195,3.830289,1.785127,1.692303,-2.790604,-2.668653,-4.616063,6.001211,2.322598,4.541775,1.828063,-6.079606,-4.528626,6.389072,-6.589494,6.498209,8.661656,-6.475999,-9.132789,-6.997858,-7.708243,1.050299,-1.734912,-8.262374,4.107025,8.151707,5.833650,8.988712,7.784944,-7.451716,-8.631106,-9.382511,-9.827999,-4.257464,-3.486455,8.080064,-5.282652,7.336241,4.259184,-9.097318,9.148953,-7.742037,8.661418,5.559131,-0.403977,9.701671,5.747861,6.955834,-2.533754,8.509461,-5.727438,7.266998,3.877577,6.578828,-1.519105,6.137527,3.812424,-2.361209,-9.418878,-9.901309,7.578699,2.745315,3.546502,-5.656366,8.862842,-5.898161,2.021876,-2.302965,-0.586594,2.674331,8.657075,-6.790031,-3.601295,-5.815704,-0.022400,-0.244417,-6.544080,4.719772,-9.849596,8.658807,9.486070,6.470094,6.455711,7.914427,-6.868878,-3.255403,-0.388192,-9.283614,7.843270,6.333458,6.411295,9.952524,8.498568,8.133282,-3.445613,4.654552,-6.218972,-0.426078,-6.465005,1.723038,1.668058,2.853805,7.403658,-4.045365,-9.232057,-1.277379,1.578942,7.015677,-0.269100,-4.814919,3.959235,-2.462772,6.239861,4.998902,2.178696,-9.180366,-8.812005,-7.214126,0.053454,-8.902715,-4.677445,-2.115131,-4.469051,-4.258229,-3.919282,6.538660,1.970761,-6.524527,5.701469,-8.710717,-3.912462,6.367773,-2.507153,-8.108785,-1.947241,4.457245,-1.330074,9.043114,4.091263,8.672874,-8.468818,5.502296,9.753317,-8.216871,2.323043,6.884556,9.812830,-4.651562,-1.036333,-5.070110,9.245861,6.897421,8.676495,-0.853054,-7.757788,-7.561143,0.849226,-6.860615,0.475747,4.844347,-4.262558,9.958536,8.011635,6.099370,-6.903238,-3.192108,-0.735112,6.294267,-9.249334,-1.830204,-7.970122,-6.227135,6.349714,-3.323665,6.502552,1.803999,-1.882521,-7.226826,6.317353,2.356599,3.568608,8.750878,2.423797,9.461496,9.455073,-2.074629,-9.801057,9.129128,-7.422711,6.844742,2.597463,4.849970,7.901167,0.878200,5.015592,-3.086370,-1.834745,-3.649777,0.694852,-5.899505,-7.017252,-7.085826,5.015587,-3.951062,4.867091,3.377320,-0.131782,-7.151589,-4.807130,-2.815594,-2.833686,-5.525306,8.163540,-4.829945,-5.951437,6.181450,8.174775,-4.708079,7.614232,-2.064305,-8.435707,0.106275,-6.351485,-2.608715,0.378847,5.249696,9.675455,-1.853880,-8.058872,3.227673,0.208472,1.214498,-8.258654,6.098345,-1.181366,-1.574344,-5.147088,-1.467076,0.423938,8.009470,0.576353,-3.846562,6.525677,5.658891,3.549734,-7.109737,3.643646,-5.330724,0.238977,9.170600,1.693772,-5.366237,3.892594,5.155309], dtype = "float32")#candidate|4926|(1092,)|const|float32
call_4925 = relay.TupleGetItem(func_1753_call(relay.reshape(const_4926.astype('float32'), [12, 7, 13]), relay.reshape(var_4915.astype('uint64'), [162,]), ), 1)
call_4927 = relay.TupleGetItem(func_1756_call(relay.reshape(const_4926.astype('float32'), [12, 7, 13]), relay.reshape(var_4915.astype('uint64'), [162,]), ), 1)
const_4930 = relay.const([[[8.886278,4.989277,-1.675289,4.704498,-1.532153,4.323982,4.940655,-1.708827],[-8.308116,0.261217,5.805604,7.155243,2.136968,5.148263,5.518687,6.467246]],[[-6.452021,6.933523,9.796456,-5.096506,4.906832,-6.363298,-5.165610,6.785837],[-0.043356,7.518001,0.728512,9.202659,-9.290482,-9.257231,4.225192,-1.164682]],[[7.221606,-2.908478,-9.291964,-9.637501,3.731362,8.201744,2.888336,-4.459619],[6.379840,7.554758,-9.281099,1.138821,-8.833842,-8.347603,5.787555,6.446179]],[[4.303744,-6.356234,-4.049946,1.922993,0.466476,-7.744864,1.084052,-1.628273],[-2.202228,2.140823,-2.281210,4.976732,7.748489,2.359488,-9.600171,1.906605]],[[-0.775528,6.276990,-5.998423,-8.807390,4.269892,-5.044397,3.985097,0.184612],[9.689679,-3.284706,-2.674720,-4.561683,-0.716098,-1.038483,-8.663143,-8.501896]],[[5.305055,5.761366,-7.580369,-2.976579,-5.427087,9.155941,8.094416,8.465101],[9.363458,2.213624,6.206730,2.642544,5.140446,-6.263756,7.391436,-1.926451]],[[4.310996,-9.318065,-1.686490,1.616276,-1.787916,-3.284385,-3.176159,-9.174071],[-1.536101,3.390742,2.280427,5.450901,-0.073914,-4.570909,-1.706339,6.996609]],[[-3.769720,9.838582,-1.367893,-3.197161,9.568429,-3.307259,-6.011889,-8.092026],[-0.899964,4.792372,-4.265215,-4.476122,-3.350410,8.532307,-0.841386,-1.134815]],[[-0.139265,3.957136,7.452059,8.298297,-1.191067,-6.989121,-3.843772,5.004411],[-3.099833,-0.488395,7.111925,3.187308,2.777777,-4.154408,5.717252,9.122881]],[[4.798642,-0.866562,-1.122434,1.414139,-4.790238,1.965886,-9.433159,1.046974],[1.743200,-6.774034,7.469218,3.030835,-9.779606,-8.106111,-9.938308,2.865205]],[[-8.094374,-1.448813,-2.173476,1.354816,9.397641,7.937997,-6.183718,-3.887506],[3.714278,-7.028728,0.546926,8.357151,-2.428560,1.518003,9.480822,-6.929065]],[[2.343074,-0.888912,-7.461942,-3.585433,4.773831,-7.218583,-3.983007,6.836533],[4.724071,-4.555369,9.034163,-1.543690,2.483928,9.200784,-3.897758,-8.769718]],[[-1.182038,4.043173,2.031755,2.228482,-2.962067,-3.365600,-3.822715,-0.750919],[9.661918,-2.899259,-9.368391,-3.204935,0.429594,4.499150,7.546223,9.505079]],[[-5.997117,7.189694,-0.575247,-1.873849,-4.392393,6.665285,3.018143,-5.679296],[4.575579,9.238147,6.493279,4.219732,2.128378,-4.521847,9.534707,5.486599]],[[5.002835,5.712599,1.642114,-6.657101,-5.673541,-0.705807,0.061343,-8.566049],[-3.657074,-0.487375,-1.373040,-0.338127,-4.436526,-1.360047,-5.213646,-8.647692]]], dtype = "float64")#candidate|4930|(15, 2, 8)|const|float64
bop_4931 = relay.right_shift(uop_4837.astype('int8'), relay.reshape(const_4930.astype('int8'), relay.shape_of(uop_4837))) # shape=(15, 2, 8)
bop_4934 = relay.right_shift(uop_4839.astype('int8'), relay.reshape(const_4930.astype('int8'), relay.shape_of(uop_4839))) # shape=(15, 2, 8)
output = relay.Tuple([bop_4827,call_4842,var_4843,bop_4849,uop_4865,call_4913,var_4914,var_4915,call_4925,const_4926,bop_4931,])
output2 = relay.Tuple([bop_4830,call_4844,var_4843,bop_4852,uop_4867,call_4916,var_4914,var_4915,call_4927,const_4926,bop_4934,])
func_4942 = relay.Function([var_4826,var_4843,var_4914,var_4915,], output)
mod['func_4942'] = func_4942
mod = relay.transform.InferType()(mod)
var_4943 = relay.var("var_4943", dtype = "float32", shape = (15, 2, 8))#candidate|4943|(15, 2, 8)|var|float32
var_4944 = relay.var("var_4944", dtype = "bool", shape = (30,))#candidate|4944|(30,)|var|bool
var_4945 = relay.var("var_4945", dtype = "float32", shape = (2016,))#candidate|4945|(2016,)|var|float32
var_4946 = relay.var("var_4946", dtype = "uint64", shape = (162,))#candidate|4946|(162,)|var|uint64
output = func_4942(var_4943,var_4944,var_4945,var_4946,)
func_4947 = relay.Function([var_4943,var_4944,var_4945,var_4946,], output)
mutated_mod['func_4947'] = func_4947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4783_call = mod.get_global_var('func_4783')
func_4785_call = mutated_mod.get_global_var('func_4785')
call_4956 = relay.TupleGetItem(func_4783_call(), 0)
call_4957 = relay.TupleGetItem(func_4785_call(), 0)
func_3522_call = mod.get_global_var('func_3522')
func_3525_call = mutated_mod.get_global_var('func_3525')
var_4961 = relay.var("var_4961", dtype = "int16", shape = (24,))#candidate|4961|(24,)|var|int16
call_4960 = relay.TupleGetItem(func_3522_call(relay.reshape(var_4961.astype('int16'), [1, 8, 3])), 0)
call_4962 = relay.TupleGetItem(func_3525_call(relay.reshape(var_4961.astype('int16'), [1, 8, 3])), 0)
uop_4969 = relay.tan(call_4956.astype('float64')) # shape=(15, 2, 8)
uop_4971 = relay.tan(call_4957.astype('float64')) # shape=(15, 2, 8)
func_4714_call = mod.get_global_var('func_4714')
func_4717_call = mutated_mod.get_global_var('func_4717')
call_4976 = relay.TupleGetItem(func_4714_call(relay.reshape(uop_4969.astype('float64'), [15, 2, 8])), 0)
call_4977 = relay.TupleGetItem(func_4717_call(relay.reshape(uop_4969.astype('float64'), [15, 2, 8])), 0)
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
var_4983 = relay.var("var_4983", dtype = "float32", shape = (504,))#candidate|4983|(504,)|var|float32
call_4982 = func_2525_call(relay.reshape(var_4983.astype('float32'), [7, 9, 8]))
call_4984 = func_2525_call(relay.reshape(var_4983.astype('float32'), [7, 9, 8]))
output = relay.Tuple([call_4960,var_4961,uop_4969,call_4976,call_4982,var_4983,])
output2 = relay.Tuple([call_4962,var_4961,uop_4971,call_4977,call_4984,var_4983,])
func_4994 = relay.Function([var_4961,var_4983,], output)
mod['func_4994'] = func_4994
mod = relay.transform.InferType()(mod)
mutated_mod['func_4994'] = func_4994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4994_call = mutated_mod.get_global_var('func_4994')
var_4996 = relay.var("var_4996", dtype = "int16", shape = (24,))#candidate|4996|(24,)|var|int16
var_4997 = relay.var("var_4997", dtype = "float32", shape = (504,))#candidate|4997|(504,)|var|float32
call_4995 = func_4994_call(var_4996,var_4997,)
output = call_4995
func_4998 = relay.Function([var_4996,var_4997,], output)
mutated_mod['func_4998'] = func_4998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_5046 = func_4423_call()
call_5047 = func_4423_call()
func_2790_call = mod.get_global_var('func_2790')
func_2792_call = mutated_mod.get_global_var('func_2792')
const_5082 = relay.const([-6,9,-7,8,5,1,7,8,7,5,9,-2,7,1,-8,5,9,1,2,-8,-9,1,-7,1,-1,2,4,10,-5,-3,7,9,6,4,9,5,10,-5,-4,-1,-5,-8,6,-8,-1,3,3,-4,4,-4,-9,-5,4,-6,-8,-7,9,-10,1,5,3,10,2,4,3,8,-9,-2,5,-3,-6,-6,6,-1,7,9,-6,5,-6,-3,-9,2,6,-2,2,3,-8,5,6,10,-2,3,-9,-5,9,5,-10,7,3,-4,7,-2,-6,-6,3,-6,-5,4,-9,-1,8,8,7,2,5,4,5,6,5,6,7,4,4,8,-8,2,6,-3,-7,10,5,5,-2,-3,-2,4,4,-1,-5,-2,7,8,-5,-6,-10,-6,10,4,10,-6,10,-4,-7,3,-4,-6,10,-2,-7,-7,5,-1,-5,-7,-4,-9,-5,9,8,6,8,10,-8,-2,3,1,5,4,-6,-4,8,-5,8,6,5,-7,6,10,2,-8,-3,6,10,5,5,-6,-7,-7,-4,-1,7,-3,-7,-4,5,7,-10,6,-5,7,2,-2,-6,-6,-1,1,-4,10,7,2,7,-10,10,-8,6,-4,1,-9,-4,9,-1,3,5,7,-9,-6,8,-1,1,-3,5,7,-3,2,1,-3,4,-10,-1,-10,7,5,1,4,-7,1,6,9,6,7,5,-2,5,-5,-10,-7,3,2,9,-8,-3,-8,8,-8,-9,4,6,10,-7,-8,-3,3,6,-2,1,1,10,5,-7,2,10,1,-1,7,-7,6,1,-6,7,4,-9,-2,-6,-8,-9,-10,-8,5,1,1,9,8,9,9,-1,3,-9,10,3,-8,-10,-3,1,-10,-2,-10,8,-2,-1,4,5,-5,-2,8,3,-8,-6,1,-1,-10,2,5,-10,-7,-8,-5,8,-9,-5,8,5,-10,8,-8,2,3,10,4,-3,-10,-3,7,-7,6,3,1,-9,-1,-4,-8,-9,-2,9,8,10,4,-5,7,-7,-5,4,-8,-8,-3,-10,-1,-4,-7,-1,-4,4,-4,-10,2,-1,-10,4,-1,-9,-3,7,-5,6,-3,-8,8,6,-1,-1,6,2,1,3,6,-8,10,-4,-8,8,9], dtype = "uint32")#candidate|5082|(420,)|const|uint32
call_5081 = func_2790_call(relay.reshape(const_5082.astype('uint32'), [3, 14, 10]))
call_5083 = func_2790_call(relay.reshape(const_5082.astype('uint32'), [3, 14, 10]))
output = relay.Tuple([call_5046,call_5081,const_5082,])
output2 = relay.Tuple([call_5047,call_5083,const_5082,])
func_5095 = relay.Function([], output)
mod['func_5095'] = func_5095
mod = relay.transform.InferType()(mod)
mutated_mod['func_5095'] = func_5095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mutated_mod.get_global_var('func_5095')
call_5096 = func_5095_call()
output = call_5096
func_5097 = relay.Function([], output)
mutated_mod['func_5097'] = func_5097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3674_call = mod.get_global_var('func_3674')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_5121 = func_3674_call()
call_5122 = func_3674_call()
func_4576_call = mod.get_global_var('func_4576')
func_4577_call = mutated_mod.get_global_var('func_4577')
call_5135 = relay.TupleGetItem(func_4576_call(), 1)
call_5136 = relay.TupleGetItem(func_4577_call(), 1)
output = relay.Tuple([call_5121,call_5135,])
output2 = relay.Tuple([call_5122,call_5136,])
func_5139 = relay.Function([], output)
mod['func_5139'] = func_5139
mod = relay.transform.InferType()(mod)
output = func_5139()
func_5140 = relay.Function([], output)
mutated_mod['func_5140'] = func_5140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4549_call = mod.get_global_var('func_4549')
func_4551_call = mutated_mod.get_global_var('func_4551')
call_5198 = relay.TupleGetItem(func_4549_call(), 1)
call_5199 = relay.TupleGetItem(func_4551_call(), 1)
func_4209_call = mod.get_global_var('func_4209')
func_4212_call = mutated_mod.get_global_var('func_4212')
const_5204 = relay.const([-8,-5,-5,5,3,7,10,4,3,-4,-7,-8,6,10,3,1,6,2,3,5,7,3,1,-7,3,1,-4,10,-2,8,-10,9,-5,1,-8,5,8,5,7,6,-3,-1,6,9,-2,5,7,1,-3,-1,7,-8,-6,-6,5,5,9,-7,7,-4,2,-2,3,1,6,-9,-10,9,10,-10,-9,2,-3,2,-2,9,-6,-3,6,5,7,-8,10,4,-5,2,-1,2,3,4,-10,9,5,5,7,-7,5,-5,3,3,-4,-3,-1,-9,-9,-10,-5,5,3,3,-1,6,6,-10,-1,-10,-10,-1,6,-7,-4,-3,6,-3,9,8,-8,5,8,-4,8,5,5,-3,10,5,7,-5,8,-3,-5,7,7,-7,7,5,5,5,8,2,-8,-1,7,-9,5,-9,2,4,-8,-6,4,10,5,-1,3,-10,2,-7,9,-5,-5,5,-2,9,-9,5,-8,3,10,6,-9,6,10,-2,7,-5,4,2,-10,6,-5,3,7,9,-1,-5,-5,-4,4,8,-5,-6,5,-7,-8,-4,-5,10,-6,1,8,-10,7,-8,1,-2,8,-7,7,-8,8,-2,3,-7,3,-8,6,-3,-1,-3,6,-1,7,-7,-2,3,-1,5,9,2,-1,-2,-8,9,-6,4,-10,-6,2,1,-10,-6,-9,4,-2,-9,-7,-8,-6,6,9,-3,2,-6,-5,-10,1,-6,6,10,6,-1,-2,8,7,-1,-4,5,-4,-10,-6,-3,-8,-9,9,-4,-9,-8,5,-1,1,-9,6,1,-3,-8,3,7,-2,-6,8,-4,5,9,9,2,-2,5,3,8,6,4,-9,1,-9,-2,6,-3,-9,1,-10,8,-4,-10,8,2,5,-5,8,6,2,-4,4,-9,8,1,-5,-2,3,-5,-9,6,4,8,7,1,2,8,-1,-8,-1,10,9,4,-3,10,-9,-6,8,-6,8,4,1,5,-1,4,4,-7,-8,-3,-3,3,-1,-4,10,4,7,7,2,-1,-7,-4,-1,-3,3,9,3,7,-8,-5,-10,6,8,5,-5,2,5,4,8,-4,5,10,-5,4,-7,4,9,-7,3,-9,-2,4,-9,-3,6,-2,3,1,-9,1], dtype = "int64")#candidate|5204|(420,)|const|int64
const_5205 = relay.const([False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True], dtype = "bool")#candidate|5205|(30,)|const|bool
call_5203 = relay.TupleGetItem(func_4209_call(relay.reshape(const_5204.astype('int64'), [420,]), relay.reshape(const_5205.astype('bool'), [30,]), ), 3)
call_5206 = relay.TupleGetItem(func_4212_call(relay.reshape(const_5204.astype('int64'), [420,]), relay.reshape(const_5205.astype('bool'), [30,]), ), 3)
var_5212 = relay.var("var_5212", dtype = "bool", shape = (10, 3, 10))#candidate|5212|(10, 3, 10)|var|bool
bop_5213 = relay.greater(call_5203.astype('bool'), relay.reshape(var_5212.astype('bool'), relay.shape_of(call_5203))) # shape=(10, 3, 10)
bop_5216 = relay.greater(call_5206.astype('bool'), relay.reshape(var_5212.astype('bool'), relay.shape_of(call_5206))) # shape=(10, 3, 10)
func_2264_call = mod.get_global_var('func_2264')
func_2270_call = mutated_mod.get_global_var('func_2270')
var_5239 = relay.var("var_5239", dtype = "bool", shape = (8,))#candidate|5239|(8,)|var|bool
var_5240 = relay.var("var_5240", dtype = "bool", shape = (88,))#candidate|5240|(88,)|var|bool
var_5241 = relay.var("var_5241", dtype = "float64", shape = (280,))#candidate|5241|(280,)|var|float64
const_5242 = relay.const([[2.499762,3.710385,-3.591522,5.953900,7.524668,-5.746041],[-3.541084,6.612581,-5.490630,-0.417553,0.700963,-8.767144],[-5.184391,2.396204,7.172591,-8.514320,0.994091,-3.567721],[-6.007350,-0.765698,6.733856,4.124916,-1.000437,1.497128],[-6.858874,-3.726043,-5.106837,1.019581,-1.309623,0.025587],[-7.097602,-6.180072,-5.477919,3.006971,-1.914832,-4.188510],[-7.260674,6.540492,6.087733,-8.932808,-7.987459,3.460618],[4.690815,1.008490,1.472803,6.803057,5.874223,-0.144478],[-8.281275,-4.236982,7.881097,-4.016172,-7.122559,-7.299191],[-2.290687,3.632149,6.823038,8.110316,-9.843213,-5.694216],[-6.407769,4.220747,1.303521,5.975569,-9.538623,5.511868],[-0.128888,8.783197,1.876226,-5.614700,-5.897878,1.478835],[1.538227,-6.703080,5.612982,9.286578,-0.006884,5.632763],[-4.967470,-6.412046,-9.516981,3.431982,6.253420,1.136121],[-0.021333,8.542974,-7.336696,6.986970,5.054366,9.253007],[-6.251208,-4.285671,0.822530,1.658221,-0.371490,-5.955207],[8.704698,-0.824296,8.742363,1.498835,0.507434,-3.259273],[3.434962,7.431608,-9.068792,-8.365613,-2.077585,5.736950],[-7.930906,0.146142,-6.590598,-3.571465,7.591003,4.350922],[-2.408113,9.483360,0.006974,4.609355,8.305333,2.918776],[5.697494,-9.364719,8.511812,-8.515671,-1.513711,-8.504370],[4.475645,-3.123999,0.770464,0.503783,0.417421,-5.591832],[6.665694,2.594465,-4.166108,-9.002567,-3.059085,0.080490],[-3.234725,-0.955154,-2.659413,-8.619384,5.231395,-7.717889],[-9.967586,-8.138814,-5.996220,-0.990690,7.600172,-5.905690],[-6.707323,1.407701,-1.872173,-9.884694,-4.687289,4.404136],[-9.057971,6.747161,5.175469,-7.440670,3.059659,2.109441],[8.583645,2.534458,3.644938,2.215268,-0.433822,8.754007],[9.088078,-3.978624,-6.439710,-0.172201,8.363189,-0.683856],[-2.068793,-6.770947,0.051306,9.934904,8.622413,9.300867],[7.142397,-6.339950,-4.403409,-5.807969,-0.722081,7.395144],[-6.478682,6.817344,4.458765,-6.398281,-4.777897,-2.998204],[-3.863608,0.153042,-3.524367,7.954262,8.028113,-2.736075],[3.205537,1.126127,1.031824,-6.713850,8.579706,8.022720],[5.003716,-2.911553,-9.323931,3.845866,-7.544073,-6.142906],[-0.147827,-4.898747,8.903495,0.400530,1.759176,-5.825258],[7.132426,8.761993,-3.378235,-4.521241,-8.744676,-5.406084],[6.200685,-6.888689,-6.300808,-0.390704,-8.531438,-4.651357],[6.608844,-5.215276,-9.761932,4.609819,1.362525,-7.437409],[0.572548,8.325256,9.812514,-4.640125,3.810020,7.431392],[1.755507,-7.207107,-2.998396,-7.168869,-3.602113,0.408102],[2.593948,0.068739,0.795774,8.836496,-8.980211,-9.679315],[-9.362452,-2.929038,3.000417,0.368443,5.366821,-6.964586],[-0.237152,-5.254966,1.508844,3.677408,-9.355953,5.117767],[0.229769,5.455726,5.657603,3.843819,-7.653887,-5.932805],[8.480102,9.665614,3.380106,8.137140,-0.359121,4.656618],[4.017847,-3.227273,0.907151,1.201178,-1.348202,-8.259588],[-4.963427,0.378568,9.414842,7.168180,4.563668,3.246901],[-5.669134,-5.901618,-6.722841,6.053062,3.928496,-3.403150],[8.558515,8.637138,-9.875392,-8.925118,9.685835,1.416668],[0.353778,-9.390747,1.603468,9.049525,-1.990755,-8.989576],[8.920189,-8.771448,-5.249508,5.811300,-1.136161,5.980536],[-6.844777,3.151510,-7.853099,-5.820023,6.598198,-3.925450],[9.855536,2.265975,-7.817103,-0.823740,9.674842,-9.929351],[2.036726,7.191580,-5.321373,-0.890944,-4.999634,-0.412491],[6.353492,-4.689548,8.732920,1.695005,8.135003,-7.263265],[3.961916,5.120085,7.584587,-2.371439,-6.393976,-2.340260],[-7.944483,4.233285,4.780347,5.451080,7.681318,0.944087],[7.878383,7.945218,3.027496,-7.293269,-2.150165,9.024600],[6.943452,9.328411,-5.288910,-8.254275,-6.767930,6.916142],[1.408350,-0.047991,5.635387,-5.047587,2.379737,1.559702],[8.314161,6.704968,8.118269,-5.881103,-9.338024,-2.428077],[7.380705,9.088826,3.916513,6.319316,-9.864391,6.523005],[-5.813554,-8.315486,6.743712,-0.667772,6.142463,-4.584633],[1.007047,4.707296,-4.169894,-5.240086,-3.113910,-2.261223],[-2.793495,-0.594024,9.144199,-1.695985,1.826022,5.294508],[-2.661802,-6.465354,0.860992,2.633249,6.805051,-3.515047],[-0.377335,2.878167,5.255178,-6.051693,-4.324340,-5.659134],[-0.040840,1.073011,8.264009,-3.936753,-0.929555,4.045874],[-1.649310,-1.510446,8.993789,4.126806,0.326535,-8.197060],[-3.340783,2.050212,1.901503,0.830439,-3.277523,-6.953249],[1.441256,-3.025571,4.150633,-0.691819,-9.596425,5.494674],[3.384311,8.103141,0.620938,4.605508,7.737675,-7.878750],[-5.253232,-9.694530,-9.018182,-5.804478,-5.664186,-3.488233],[-0.003665,9.066668,3.048476,-8.793351,9.889116,-0.650140],[0.101786,7.107931,-5.765486,-3.554263,8.091722,2.516959],[7.389012,1.277391,-2.389411,1.721736,-8.826204,6.501385],[5.019911,4.000839,-4.441686,3.566523,6.640563,-1.920133],[2.372710,5.742010,4.663618,-1.641747,-7.629170,-4.513643],[3.411454,-5.627586,-7.758271,-4.604608,7.384900,0.628175],[3.654851,-0.515867,6.909321,-6.023006,8.725382,1.419912],[-4.663666,6.411536,8.156903,-4.841145,6.553503,1.641896],[-4.474920,3.107591,6.635007,8.672184,2.292697,3.385791],[-4.036563,1.502856,9.149841,4.877129,3.694080,7.929269],[-5.610536,0.206135,-8.775605,-2.446122,-3.691152,-3.491804],[-7.361016,-9.468762,3.205545,-0.242568,1.320827,7.968313],[-4.343420,2.798338,1.314579,-8.968660,-4.414210,4.194682],[-6.811397,3.071516,9.431606,-7.955380,-3.037390,-5.362398],[3.795419,0.446790,-2.424945,1.991316,1.599832,-9.258826],[3.649407,7.670565,1.289184,-9.731630,-3.875331,-7.213621],[-9.763083,9.775432,-4.490390,-0.415942,-7.840990,-5.317265],[5.727989,3.899229,-9.210324,9.745004,-0.919447,1.807230],[-0.974565,-3.502840,-4.866742,-8.533210,7.409845,5.905997],[6.108946,9.315390,9.290279,6.517187,-0.101518,-7.436197],[-5.965517,-8.175026,-5.043307,-5.633353,-7.943829,4.999764],[-9.378323,0.885767,4.152805,0.318502,-1.501892,-9.481377],[-8.978868,-3.564996,-6.038974,-8.436811,3.443239,5.706660],[-4.111365,-2.615452,-3.651014,7.600277,8.691792,5.541675],[9.142528,-3.460671,7.458571,-8.926092,-3.555663,-8.478238],[8.760961,9.352718,-0.497971,-9.765434,4.470702,6.362407],[-1.279245,-7.365419,6.972221,-1.876408,-2.088698,-2.627811],[9.919930,4.038128,-9.923596,-8.139471,-6.126467,-1.424097],[-4.480761,-4.869842,1.602397,-4.735794,-6.971262,5.603194],[-8.470000,5.749795,-1.507300,-9.944206,-0.942231,5.292854],[-7.152579,-0.268602,-5.751017,1.279355,0.470043,-2.308160],[0.325869,-0.463134,7.986478,1.044764,6.211262,-0.619250],[-0.470077,2.355497,-9.943466,8.483491,-4.155681,-6.162584],[-9.848856,0.142007,5.052572,-9.244206,-1.771943,-5.683033],[1.727787,8.435646,-8.553380,-8.410161,9.503351,6.776994],[0.368576,-7.093067,-2.015938,-8.827022,-6.679544,-4.260631],[8.982135,-6.123904,2.004649,3.332427,-9.023328,0.800382],[-6.419870,8.422431,2.750198,5.185590,-6.376923,-5.802886],[-6.990684,0.454295,0.481069,-8.201994,2.881054,-5.664017],[-4.028238,8.258888,8.197538,3.049890,-6.821041,9.152652],[-7.795180,-2.279746,-0.744028,3.252103,3.431742,1.159582],[2.995196,1.979294,-8.568684,5.008609,6.380811,0.961341],[-5.014456,-7.303756,2.845031,-1.086510,9.948436,-9.618457],[-5.387094,-1.084747,1.603470,-1.034625,-4.043161,4.470181],[2.441193,9.508106,8.764075,8.153452,9.583956,-0.671668],[2.149502,-4.941273,-0.975776,-8.402576,1.130691,-4.469839],[-0.380368,1.367441,6.259203,7.692715,6.349293,7.144866],[3.325564,-3.869498,7.733035,-7.919733,-0.028250,0.934648],[0.601160,2.210009,-5.071300,4.184563,-6.935797,2.850806],[6.650741,-6.138402,8.088593,2.613297,6.592739,-2.166578],[9.239360,5.813385,6.346649,-1.895151,0.309509,2.695089],[1.272494,-4.340824,0.688037,5.722818,4.787316,-8.377665],[-1.088459,8.426626,3.582044,-6.493421,-7.570254,-3.956217],[-7.212128,2.845474,-2.505544,5.711939,0.382609,5.064814],[-1.403712,-7.465059,9.950212,-7.761681,-4.265008,9.953000],[8.182375,-9.083160,0.529191,-4.640682,5.753079,5.571473],[-1.933745,-7.094791,7.898222,8.225158,-9.417017,9.715361],[-2.405762,0.263456,0.012389,-4.196790,-2.613791,0.590043],[-0.395956,9.682016,3.726385,1.146861,-5.174602,9.196852],[-4.151420,9.930337,-2.527566,-9.055541,-2.130091,-0.197168],[-2.060173,6.355323,5.889960,-5.857255,-0.803826,-2.856113],[1.452754,8.601288,3.749227,6.858941,8.492469,-6.292527],[8.336635,-5.947052,3.660603,1.720957,-5.595303,-7.961192],[4.939263,6.979646,0.223162,3.258926,3.807717,-0.437128],[-1.800208,-7.140250,-1.592599,5.880131,8.550516,5.877770],[-8.866089,-4.596769,5.418745,2.269788,-7.857036,-3.042526],[-3.404417,-7.157143,6.512923,-8.756193,-8.880221,5.932558],[1.321720,-7.602793,1.457708,6.411285,-6.898060,-6.709348],[4.622110,8.108959,-0.984460,8.715277,8.852882,-3.533594],[-7.163502,-2.431164,-1.912716,5.366041,1.805555,-7.744730],[1.593602,-0.672764,-9.602514,-1.004173,-2.713517,1.625272],[0.434633,4.798366,-2.893771,4.371501,-6.815087,8.991714],[-6.090906,1.668337,-0.166210,-5.447177,9.936775,9.857538],[8.852102,2.960685,6.413227,-5.103667,0.028775,-0.658088],[3.692871,-1.235657,2.480518,-3.280333,-1.599804,6.119850],[-6.041057,5.774557,6.298166,5.935007,-7.568051,-0.570980],[5.290365,-6.285590,8.019682,-8.969652,3.619378,-0.034058],[-0.601886,-4.986901,-1.190742,3.826346,8.481218,8.111274],[0.320136,4.198061,0.221637,-5.417122,-9.363118,-7.455158],[9.577653,-0.686189,9.651111,1.586414,-0.423119,9.074467],[-6.932806,8.941172,6.740348,-1.460700,4.644591,-1.420952],[2.205859,7.403541,4.184770,1.716124,-7.569508,5.472880],[7.383859,4.731837,-4.066517,-2.229165,9.454324,-2.093574],[-8.649302,8.749438,-1.459883,1.060157,-7.106526,9.645478],[-8.002924,-1.390677,4.834966,-0.716600,4.472733,-7.809481],[-2.136463,-4.886704,-6.723148,-5.354796,7.266739,-3.130262],[6.148571,1.851065,-5.127270,-9.549773,-1.283985,2.655231],[-5.983410,-3.657142,8.412287,-8.273982,3.777587,7.236175],[1.207497,7.036245,8.479791,3.359115,9.120466,9.036838],[3.886332,-9.418438,-7.491310,4.080722,6.534803,-3.843876],[-7.047299,6.580349,9.321778,0.684560,-6.916650,9.734539],[-9.865223,4.450421,-2.022881,3.509383,-5.643374,0.085004],[5.882989,8.558133,-8.221895,2.975196,-0.026142,-7.455679],[6.334309,6.439509,-8.560812,-0.530785,7.430036,-1.069326],[-1.089786,7.266121,8.808237,7.683473,-1.263128,-4.771931],[8.361237,4.351438,-7.870419,0.913854,-7.856487,2.402037],[-0.811738,5.269063,3.296594,7.790388,-5.609482,-0.763492],[0.353799,-0.477965,8.714978,-0.865699,7.972276,-8.260267],[3.128651,3.851065,-0.372469,0.002627,-9.809678,-3.422283],[-9.863273,0.985125,7.067996,8.630471,-9.314160,-0.228216],[-8.778723,-2.439284,-4.655272,3.091312,-8.046382,8.509820],[5.043625,6.161365,-9.242676,-3.313130,4.187427,1.399645],[1.281563,0.496704,-3.473542,6.887688,-8.101033,-3.560091],[2.512874,9.300052,4.278251,-4.932806,3.055182,-5.772849],[-4.761525,-2.732869,7.379321,-6.559926,-9.895095,-6.411759],[2.465922,2.906627,4.578176,-2.230848,1.928622,-9.405523],[9.362581,-7.652409,9.875196,-7.269809,4.723291,2.295219],[-9.234510,4.372692,-6.337895,6.699737,-3.804771,8.161976]], dtype = "float32")#candidate|5242|(182, 6)|const|float32
call_5238 = relay.TupleGetItem(func_2264_call(relay.reshape(var_5239.astype('bool'), [2, 4, 1]), relay.reshape(var_5240.astype('bool'), [2, 4, 11]), relay.reshape(var_5241.astype('float64'), [280,]), relay.reshape(const_5242.astype('float32'), [1092,]), ), 1)
call_5243 = relay.TupleGetItem(func_2270_call(relay.reshape(var_5239.astype('bool'), [2, 4, 1]), relay.reshape(var_5240.astype('bool'), [2, 4, 11]), relay.reshape(var_5241.astype('float64'), [280,]), relay.reshape(const_5242.astype('float32'), [1092,]), ), 1)
output = relay.Tuple([call_5198,const_5204,const_5205,bop_5213,call_5238,var_5239,var_5240,var_5241,const_5242,])
output2 = relay.Tuple([call_5199,const_5204,const_5205,bop_5216,call_5243,var_5239,var_5240,var_5241,const_5242,])
func_5247 = relay.Function([var_5212,var_5239,var_5240,var_5241,], output)
mod['func_5247'] = func_5247
mod = relay.transform.InferType()(mod)
mutated_mod['func_5247'] = func_5247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5247_call = mutated_mod.get_global_var('func_5247')
var_5249 = relay.var("var_5249", dtype = "bool", shape = (10, 3, 10))#candidate|5249|(10, 3, 10)|var|bool
var_5250 = relay.var("var_5250", dtype = "bool", shape = (8,))#candidate|5250|(8,)|var|bool
var_5251 = relay.var("var_5251", dtype = "bool", shape = (88,))#candidate|5251|(88,)|var|bool
var_5252 = relay.var("var_5252", dtype = "float64", shape = (280,))#candidate|5252|(280,)|var|float64
call_5248 = func_5247_call(var_5249,var_5250,var_5251,var_5252,)
output = call_5248
func_5253 = relay.Function([var_5249,var_5250,var_5251,var_5252,], output)
mutated_mod['func_5253'] = func_5253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4306_call = mod.get_global_var('func_4306')
func_4307_call = mutated_mod.get_global_var('func_4307')
call_5295 = relay.TupleGetItem(func_4306_call(), 2)
call_5296 = relay.TupleGetItem(func_4307_call(), 2)
func_406_call = mod.get_global_var('func_406')
func_409_call = mutated_mod.get_global_var('func_409')
var_5300 = relay.var("var_5300", dtype = "float32", shape = (2016,))#candidate|5300|(2016,)|var|float32
const_5301 = relay.const([[3,-5,-9,9,-5,-10,-7,-5,7,-3,4,-7,2,9,7,-3,1,7,10,-5,6,9,-4,2,6,4,-3],[-5,4,-8,-1,5,-8,1,-8,-5,2,6,10,-7,-5,6,-1,-3,-5,8,-2,10,-5,8,-7,-6,8,-5],[1,-5,-3,6,-4,-1,-8,4,1,-9,-5,8,9,3,9,6,-1,8,-1,-10,-3,-1,9,2,9,6,8],[10,-9,5,-2,-10,1,9,-2,5,1,8,-3,-9,2,8,9,-5,2,8,2,-9,6,3,8,-5,5,-8],[-4,1,-2,3,-9,-2,10,-5,10,3,3,-3,-5,-7,-2,1,1,1,2,-7,-4,-4,-2,7,4,-7,-8],[-7,9,-7,10,-8,-9,6,-4,-6,1,1,10,5,-9,-2,-3,2,-2,4,5,5,-2,7,2,-4,-3,8]], dtype = "uint64")#candidate|5301|(6, 27)|const|uint64
call_5299 = relay.TupleGetItem(func_406_call(relay.reshape(var_5300.astype('float32'), [9, 16, 14]), relay.reshape(const_5301.astype('uint64'), [162,]), ), 2)
call_5302 = relay.TupleGetItem(func_409_call(relay.reshape(var_5300.astype('float32'), [9, 16, 14]), relay.reshape(const_5301.astype('uint64'), [162,]), ), 2)
func_5139_call = mod.get_global_var('func_5139')
func_5140_call = mutated_mod.get_global_var('func_5140')
call_5356 = relay.TupleGetItem(func_5139_call(), 1)
call_5357 = relay.TupleGetItem(func_5140_call(), 1)
func_3604_call = mod.get_global_var('func_3604')
func_3609_call = mutated_mod.get_global_var('func_3609')
const_5371 = relay.const([[8,-1,7,4],[-4,8,-6,-8],[-4,4,3,8],[8,-9,-3,-2],[-10,10,9,-9],[-2,6,7,5]], dtype = "int16")#candidate|5371|(6, 4)|const|int16
var_5372 = relay.var("var_5372", dtype = "bool", shape = (300,))#candidate|5372|(300,)|var|bool
call_5370 = relay.TupleGetItem(func_3604_call(relay.reshape(const_5371.astype('int16'), [24,]), relay.reshape(const_5371.astype('bool'), [1, 8, 3]), relay.reshape(var_5372.astype('bool'), [10, 3, 10]), ), 1)
call_5373 = relay.TupleGetItem(func_3609_call(relay.reshape(const_5371.astype('int16'), [24,]), relay.reshape(const_5371.astype('bool'), [1, 8, 3]), relay.reshape(var_5372.astype('bool'), [10, 3, 10]), ), 1)
func_3757_call = mod.get_global_var('func_3757')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_5374 = relay.TupleGetItem(func_3757_call(), 0)
call_5375 = relay.TupleGetItem(func_3759_call(), 0)
uop_5406 = relay.cos(const_5301.astype('float32')) # shape=(6, 27)
bop_5410 = relay.less(uop_5406.astype('bool'), relay.reshape(call_5299.astype('bool'), relay.shape_of(uop_5406))) # shape=(6, 27)
bop_5413 = relay.less(uop_5406.astype('bool'), relay.reshape(call_5302.astype('bool'), relay.shape_of(uop_5406))) # shape=(6, 27)
func_4306_call = mod.get_global_var('func_4306')
func_4307_call = mutated_mod.get_global_var('func_4307')
call_5414 = relay.TupleGetItem(func_4306_call(), 2)
call_5415 = relay.TupleGetItem(func_4307_call(), 2)
bop_5418 = relay.equal(const_5301.astype('bool'), relay.reshape(uop_5406.astype('bool'), relay.shape_of(const_5301))) # shape=(6, 27)
func_4549_call = mod.get_global_var('func_4549')
func_4551_call = mutated_mod.get_global_var('func_4551')
call_5425 = relay.TupleGetItem(func_4549_call(), 1)
call_5426 = relay.TupleGetItem(func_4551_call(), 1)
bop_5433 = relay.power(bop_5410.astype('float32'), relay.reshape(uop_5406.astype('float32'), relay.shape_of(bop_5410))) # shape=(6, 27)
bop_5436 = relay.power(bop_5413.astype('float32'), relay.reshape(uop_5406.astype('float32'), relay.shape_of(bop_5413))) # shape=(6, 27)
func_3604_call = mod.get_global_var('func_3604')
func_3609_call = mutated_mod.get_global_var('func_3609')
call_5440 = relay.TupleGetItem(func_3604_call(relay.reshape(const_5371.astype('int16'), [24,]), relay.reshape(const_5371.astype('bool'), [1, 8, 3]), relay.reshape(var_5372.astype('bool'), [10, 3, 10]), ), 5)
call_5441 = relay.TupleGetItem(func_3609_call(relay.reshape(const_5371.astype('int16'), [24,]), relay.reshape(const_5371.astype('bool'), [1, 8, 3]), relay.reshape(var_5372.astype('bool'), [10, 3, 10]), ), 5)
func_609_call = mod.get_global_var('func_609')
func_612_call = mutated_mod.get_global_var('func_612')
call_5444 = func_609_call(relay.reshape(call_5370.astype('bool'), [1, 3, 10]))
call_5445 = func_609_call(relay.reshape(call_5370.astype('bool'), [1, 3, 10]))
bop_5448 = relay.mod(const_5301.astype('float64'), relay.reshape(call_5299.astype('float64'), relay.shape_of(const_5301))) # shape=(6, 27)
bop_5451 = relay.mod(const_5301.astype('float64'), relay.reshape(call_5302.astype('float64'), relay.shape_of(const_5301))) # shape=(6, 27)
func_4549_call = mod.get_global_var('func_4549')
func_4551_call = mutated_mod.get_global_var('func_4551')
call_5455 = relay.TupleGetItem(func_4549_call(), 0)
call_5456 = relay.TupleGetItem(func_4551_call(), 0)
uop_5457 = relay.rsqrt(bop_5433.astype('float64')) # shape=(6, 27)
uop_5459 = relay.rsqrt(bop_5436.astype('float64')) # shape=(6, 27)
func_1753_call = mod.get_global_var('func_1753')
func_1756_call = mutated_mod.get_global_var('func_1756')
var_5464 = relay.var("var_5464", dtype = "float32", shape = (1092,))#candidate|5464|(1092,)|var|float32
call_5463 = relay.TupleGetItem(func_1753_call(relay.reshape(var_5464.astype('float32'), [12, 7, 13]), relay.reshape(uop_5457.astype('uint64'), [162,]), ), 2)
call_5465 = relay.TupleGetItem(func_1756_call(relay.reshape(var_5464.astype('float32'), [12, 7, 13]), relay.reshape(uop_5457.astype('uint64'), [162,]), ), 2)
var_5476 = relay.var("var_5476", dtype = "float64", shape = (6, 27))#candidate|5476|(6, 27)|var|float64
bop_5477 = relay.minimum(uop_5457.astype('int32'), relay.reshape(var_5476.astype('int32'), relay.shape_of(uop_5457))) # shape=(6, 27)
bop_5480 = relay.minimum(uop_5459.astype('int32'), relay.reshape(var_5476.astype('int32'), relay.shape_of(uop_5459))) # shape=(6, 27)
var_5485 = relay.var("var_5485", dtype = "int32", shape = (6, 27))#candidate|5485|(6, 27)|var|int32
bop_5486 = relay.logical_or(bop_5477.astype('bool'), relay.reshape(var_5485.astype('bool'), relay.shape_of(bop_5477))) # shape=(6, 27)
bop_5489 = relay.logical_or(bop_5480.astype('bool'), relay.reshape(var_5485.astype('bool'), relay.shape_of(bop_5480))) # shape=(6, 27)
output = relay.Tuple([call_5295,var_5300,call_5356,call_5370,const_5371,var_5372,call_5374,call_5414,bop_5418,call_5425,call_5440,call_5444,bop_5448,call_5455,call_5463,var_5464,bop_5486,])
output2 = relay.Tuple([call_5296,var_5300,call_5357,call_5373,const_5371,var_5372,call_5375,call_5415,bop_5418,call_5426,call_5441,call_5445,bop_5451,call_5456,call_5465,var_5464,bop_5489,])
func_5493 = relay.Function([var_5300,var_5372,var_5464,var_5476,var_5485,], output)
mod['func_5493'] = func_5493
mod = relay.transform.InferType()(mod)
var_5494 = relay.var("var_5494", dtype = "float32", shape = (2016,))#candidate|5494|(2016,)|var|float32
var_5495 = relay.var("var_5495", dtype = "bool", shape = (300,))#candidate|5495|(300,)|var|bool
var_5496 = relay.var("var_5496", dtype = "float32", shape = (1092,))#candidate|5496|(1092,)|var|float32
var_5497 = relay.var("var_5497", dtype = "float64", shape = (6, 27))#candidate|5497|(6, 27)|var|float64
var_5498 = relay.var("var_5498", dtype = "int32", shape = (6, 27))#candidate|5498|(6, 27)|var|int32
output = func_5493(var_5494,var_5495,var_5496,var_5497,var_5498,)
func_5499 = relay.Function([var_5494,var_5495,var_5496,var_5497,var_5498,], output)
mutated_mod['func_5499'] = func_5499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mod.get_global_var('func_3757')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_5515 = relay.TupleGetItem(func_3757_call(), 0)
call_5516 = relay.TupleGetItem(func_3759_call(), 0)
func_1753_call = mod.get_global_var('func_1753')
func_1756_call = mutated_mod.get_global_var('func_1756')
var_5518 = relay.var("var_5518", dtype = "float32", shape = (1092,))#candidate|5518|(1092,)|var|float32
const_5519 = relay.const([5,9,-9,-2,2,10,8,5,6,-7,-3,-10,-6,7,1,3,9,3,-4,-5,-6,-4,-3,-2,-5,7,8,9,4,-3,9,-10,-10,8,-7,2,8,-10,7,3,9,-1,5,-2,-7,-5,-2,5,-9,-6,8,10,6,-8,-1,6,-8,8,9,6,4,-2,-8,8,10,4,4,3,-5,4,1,-8,8,-4,-8,5,-2,8,-4,7,-2,1,6,-9,-8,-7,-6,-9,2,3,4,2,3,-7,-8,-10,-7,10,8,4,-4,-4,-7,5,8,7,-6,-1,-1,-7,-5,3,1,-5,3,-4,10,9,4,-7,2,4,5,8,-4,-6,3,10,3,2,5,-6,7,-2,-7,-1,3,10,3,-3,-4,-7,-10,-10,2,-2,-1,10,4,-9,9,2,9,9,10,10,-4,-3,-2,1,9,1], dtype = "uint64")#candidate|5519|(162,)|const|uint64
call_5517 = relay.TupleGetItem(func_1753_call(relay.reshape(var_5518.astype('float32'), [12, 7, 13]), relay.reshape(const_5519.astype('uint64'), [162,]), ), 1)
call_5520 = relay.TupleGetItem(func_1756_call(relay.reshape(var_5518.astype('float32'), [12, 7, 13]), relay.reshape(const_5519.astype('uint64'), [162,]), ), 1)
func_4736_call = mod.get_global_var('func_4736')
func_4738_call = mutated_mod.get_global_var('func_4738')
call_5524 = func_4736_call(relay.reshape(call_5515.astype('float64'), [15, 2, 8]))
call_5525 = func_4736_call(relay.reshape(call_5515.astype('float64'), [15, 2, 8]))
func_5247_call = mod.get_global_var('func_5247')
func_5253_call = mutated_mod.get_global_var('func_5253')
var_5533 = relay.var("var_5533", dtype = "bool", shape = (300,))#candidate|5533|(300,)|var|bool
const_5534 = relay.const([False,False,True,False,False,False,False,True], dtype = "bool")#candidate|5534|(8,)|const|bool
const_5535 = relay.const([False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,False,True,False,False,True,False], dtype = "bool")#candidate|5535|(88,)|const|bool
var_5536 = relay.var("var_5536", dtype = "float64", shape = (280,))#candidate|5536|(280,)|var|float64
call_5532 = relay.TupleGetItem(func_5247_call(relay.reshape(var_5533.astype('bool'), [10, 3, 10]), relay.reshape(const_5534.astype('bool'), [8,]), relay.reshape(const_5535.astype('bool'), [88,]), relay.reshape(var_5536.astype('float64'), [280,]), ), 1)
call_5537 = relay.TupleGetItem(func_5253_call(relay.reshape(var_5533.astype('bool'), [10, 3, 10]), relay.reshape(const_5534.astype('bool'), [8,]), relay.reshape(const_5535.astype('bool'), [88,]), relay.reshape(var_5536.astype('float64'), [280,]), ), 1)
func_3522_call = mod.get_global_var('func_3522')
func_3525_call = mutated_mod.get_global_var('func_3525')
var_5543 = relay.var("var_5543", dtype = "int16", shape = (24,))#candidate|5543|(24,)|var|int16
call_5542 = relay.TupleGetItem(func_3522_call(relay.reshape(var_5543.astype('int16'), [1, 8, 3])), 0)
call_5544 = relay.TupleGetItem(func_3525_call(relay.reshape(var_5543.astype('int16'), [1, 8, 3])), 0)
output = relay.Tuple([call_5515,call_5517,var_5518,const_5519,call_5524,call_5532,var_5533,const_5534,const_5535,var_5536,call_5542,var_5543,])
output2 = relay.Tuple([call_5516,call_5520,var_5518,const_5519,call_5525,call_5537,var_5533,const_5534,const_5535,var_5536,call_5544,var_5543,])
func_5552 = relay.Function([var_5518,var_5533,var_5536,var_5543,], output)
mod['func_5552'] = func_5552
mod = relay.transform.InferType()(mod)
var_5553 = relay.var("var_5553", dtype = "float32", shape = (1092,))#candidate|5553|(1092,)|var|float32
var_5554 = relay.var("var_5554", dtype = "bool", shape = (300,))#candidate|5554|(300,)|var|bool
var_5555 = relay.var("var_5555", dtype = "float64", shape = (280,))#candidate|5555|(280,)|var|float64
var_5556 = relay.var("var_5556", dtype = "int16", shape = (24,))#candidate|5556|(24,)|var|int16
output = func_5552(var_5553,var_5554,var_5555,var_5556,)
func_5557 = relay.Function([var_5553,var_5554,var_5555,var_5556,], output)
mutated_mod['func_5557'] = func_5557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_5582 = func_4423_call()
call_5583 = func_4423_call()
output = relay.Tuple([call_5582,])
output2 = relay.Tuple([call_5583,])
func_5588 = relay.Function([], output)
mod['func_5588'] = func_5588
mod = relay.transform.InferType()(mod)
mutated_mod['func_5588'] = func_5588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5588_call = mutated_mod.get_global_var('func_5588')
call_5589 = func_5588_call()
output = call_5589
func_5590 = relay.Function([], output)
mutated_mod['func_5590'] = func_5590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5139_call = mod.get_global_var('func_5139')
func_5140_call = mutated_mod.get_global_var('func_5140')
call_5612 = relay.TupleGetItem(func_5139_call(), 0)
call_5613 = relay.TupleGetItem(func_5140_call(), 0)
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
const_5628 = relay.const([-2.985356,-9.612286,-5.696970,-9.213084,7.802757,-2.267466,4.685604,-4.094334,3.549153,-9.813279,-6.049725,-5.531184,7.587024,3.543204,1.287722,7.733190,-3.652586,-2.737198,4.770443,-1.944088,-9.025246,3.166249,-5.266216,7.763801,-9.750733,3.273487,8.397010,2.636120,-9.303603,2.017795,9.857333,-8.506148,-5.820749,-1.736643,8.013159,-9.482845,-7.343627,3.355648,7.433395,-2.885187,-5.328097,-0.589059,7.059460,-1.749867,-5.124093,9.030652,-2.648018,-5.368953,-7.662921,5.705823,0.738640,-2.886094,6.616118,-7.843213,-3.888808,-4.816903,2.094954,-7.986987,3.663564,-7.110657,-2.188638,8.644711,6.467630,9.212784,2.413714,6.836552,-5.696979,-9.029776,-3.080502,-6.454827,6.781745,6.558726,0.821104,4.416180,8.532541,-1.261951,9.589122,-9.344234,6.736543,-5.144669,-4.568394,6.022236,2.202847,-0.657109,5.478856,-2.679823,-1.241893,5.000247,2.413812,-5.729884,-9.303809,-3.930988,-1.349080,4.205463,-7.461258,-6.444507,2.480058,5.547084,9.289032,-9.915478,-8.913248,9.611318,0.177414,-2.527058,9.005240,2.445456,-5.108583,2.584912,-3.291125,-6.463610,9.622813,-7.952228,2.999289,3.252691,1.741289,5.746483,5.189981,-6.732281,2.366105,2.285371,3.140291,-7.506975,4.084757,1.829107,-6.588795,-2.669751,-2.664952,4.964061,1.429127,7.298506,-5.848849,-8.779302,1.941174,-8.194151,-1.965536,-1.862722,-0.870659,7.430790,-1.083104,-5.501763,-0.149815,-8.801093,7.357505,-5.639167,3.085380,5.061194,-6.859604,6.256650,3.390457,-4.608923,8.120000,7.590957,-3.344280,8.355747,6.103144,4.805287,5.617210,2.491069,3.132301,7.782830,9.180117,7.430942,-8.378265,2.057299,-9.163944,5.339419,-4.004072,-6.942999,5.092022,-1.659524,9.246020,9.439972,8.256109,6.853617,-2.981467,0.011271,8.019959,-5.885963,1.254833,9.081268,2.517042,-0.217944,-0.691482,-9.453742,-3.064060,-0.754935,1.867784,-4.105678,-6.422936,9.276469,-4.150524,-9.523098,7.004394,-0.278579,7.083560,8.718357,-5.366151,-5.926619,-6.604234,0.862237,5.465258,-4.574715,3.459428,-9.797243,-5.527951,-4.325501,-2.710217,-5.644745,2.188249,2.231896,5.075203,-5.791158,-3.689733,-6.355464,0.443926,9.407612,9.887410,1.112679,5.071981,1.299492,-8.216704,-8.425805,-8.349345,-9.980441,8.172039,-3.394827,-8.995706,9.157124,-8.794222,8.518071,8.047289,-1.192129,-3.894066,8.942073,7.119617,6.348013,-3.474952,4.968407,0.305070,8.841523,1.396348,4.236376,-9.800983,-0.571643,-3.687145,-8.948660,-1.224181,-8.800102,4.320007,-4.039345,-0.506810,-3.146432,-1.372956,-1.551099,8.396472,-0.488497,9.391871,8.403517,-9.047809,-6.070651,5.514690,-3.625505,-7.099650,7.472749,-4.127352,-4.964803,5.440158,-3.241699,-8.318434,5.583303,-5.915217,-9.651117,5.331166,5.799808,7.151991,-3.294650,-7.133730,5.891652,-5.445499,-7.768153,-4.636243,8.284062,2.542770,2.031828,-6.528622,-9.453372,3.551772,4.672672,-4.409694,-0.009159,-4.169014,-6.592105,-6.582367,9.079293,-2.266867,6.504590,6.582504,7.290099,-7.039416,-4.073624,9.555934,0.374972,-2.174818,-8.998814,9.268194,-3.588035,6.576408,8.193131,-1.113417,-4.387217,-2.722878,-5.909242,8.748750,1.369726,-8.475447,-4.349913,-0.883827,-5.772752,-6.500818,7.485578,-4.817863,-2.063481,-0.458994,5.576112,-7.320529,-4.358590,6.157957,-8.887336,-4.703497,4.331157,-8.937910,-5.617039,4.886812,4.816313,2.550317,-9.926109,-4.947091,-0.605481,-5.503216,-3.599525,2.832755,2.138326,9.721736,5.094683,3.069909,-3.318041,7.472943,-2.191085,-5.816145,-0.096017,-4.672460,6.568666,2.923554,-6.405287,2.823926,6.797104,6.975817,8.966086,-4.956922,-6.079781,2.119293,7.791636,6.517826,-4.212468,8.546876,-0.662850,2.713495,2.721985,5.974855,-5.177336,-6.164371,3.691600,-1.369557,-5.730611,-2.869408,9.587032,6.790121,-7.808967,-9.879847,-5.482532,5.096084,-1.937865,-3.956770,-1.573473,5.947842,-6.762153,-9.797720,2.019881,6.508251,6.994843,-5.462099,4.659626,-2.099206,-2.466193,-8.915754,-4.732964,8.076811,-4.406762,-6.049850,2.720847,7.154860,8.772771,-2.266797,4.165916,-4.942184,1.403050,3.085070,5.024368,-6.401271,-4.776291,-4.170370,-3.565939,7.922123,-2.502817,2.963916,3.656890,1.150942,-5.793944,9.604536,9.217272,7.971795,-3.807046,-1.431729,-5.828024,-0.533990,4.708343,7.911538,-6.898260,3.621904,8.201763,0.035522,1.948474,5.218764,-1.137115,4.764174,9.232675,-2.951370,8.136370,7.609814,9.791936,7.016700,-7.313865,-3.743500,4.979926,2.518673,1.686230,-9.913127,-9.155721,-9.149548,-6.277427,-3.028512,-7.190204,-2.922071,0.434280,8.501538,0.875519,-3.671888,-8.384671,-3.574110,-9.702836,-1.731920,-3.582337,-6.824750,-9.220350,3.940288,8.602421,-9.733490,-2.343418,2.108669,-5.474269,-5.746722,0.778937,-0.409714,-8.656810,-2.897565,-4.567027,-7.627936,5.915685,3.441631,5.345515,-3.890217,0.622622,4.369200,0.915852,1.702481,3.536314,1.462723,-0.145964,-5.138747,4.004158,5.092582,5.343738,-3.434384,7.798829,5.108849,5.901280,2.170845,-1.079526,-4.562028,9.072057,-6.109660,-5.009256,-3.513026,6.485438], dtype = "float32")#candidate|5628|(504,)|const|float32
call_5627 = func_2525_call(relay.reshape(const_5628.astype('float32'), [7, 9, 8]))
call_5629 = func_2525_call(relay.reshape(const_5628.astype('float32'), [7, 9, 8]))
uop_5638 = relay.log2(call_5627.astype('float64')) # shape=(7, 9, 8)
uop_5640 = relay.log2(call_5629.astype('float64')) # shape=(7, 9, 8)
bop_5641 = relay.multiply(uop_5638.astype('int32'), relay.reshape(const_5628.astype('int32'), relay.shape_of(uop_5638))) # shape=(7, 9, 8)
bop_5644 = relay.multiply(uop_5640.astype('int32'), relay.reshape(const_5628.astype('int32'), relay.shape_of(uop_5640))) # shape=(7, 9, 8)
const_5653 = relay.const([[[8.423212,5.894664,-7.378207,2.081179,0.730821,-6.237170,6.798376,9.487445],[-2.956730,-1.948262,7.756539,-6.480527,0.353093,-7.112404,6.525860,-7.140658],[7.605304,-2.421323,9.670230,-6.360618,1.930514,0.718890,7.897645,-9.782475],[-8.300521,5.059129,3.317515,3.067412,-8.949509,9.833650,8.790549,-0.213833],[7.798070,-5.396227,-9.058050,6.225370,-4.201722,7.531834,6.492751,0.642959],[-0.212013,7.989729,-4.016867,4.837101,2.456465,1.872634,-6.539700,1.225279],[-6.075706,5.632970,-8.025115,-6.935049,9.802116,8.804077,7.332111,-6.362029],[5.259204,7.829525,-6.646904,-5.467390,2.685068,7.176100,-4.273552,-5.525210],[-1.969497,8.944390,-6.609409,6.156648,8.014801,2.512184,8.026957,6.901391]],[[3.549418,6.674959,4.216420,2.079210,8.888909,-0.454425,5.256323,-5.981487],[-7.836767,1.450060,1.282969,2.183480,1.529013,8.893171,-2.703344,9.637829],[-9.740121,-0.136484,2.972198,-4.213356,-2.872965,-6.728956,5.976009,4.467253],[-3.852940,4.672445,-7.228696,2.896316,2.913980,-1.214017,3.374261,3.523214],[-5.973574,3.368967,-6.270686,-0.129935,-2.413677,-9.730982,2.312604,-0.393301],[-8.423847,0.990173,-4.833230,-0.421223,-5.893866,6.454976,9.684359,1.970438],[-9.934210,8.840526,-7.998464,4.678930,-7.007453,5.800327,-4.336534,2.506896],[0.588978,6.811557,1.374120,0.874328,-6.392468,1.224352,7.567049,-0.312408],[8.153160,-6.967532,7.629449,9.593619,-8.835173,-5.854733,-8.199634,4.174251]],[[-9.665848,0.101874,6.836887,8.775362,6.770911,8.442779,6.268708,2.610213],[0.631234,6.672728,8.029668,-4.167769,6.954560,-9.188483,-4.501897,9.656364],[-1.334502,8.333561,5.872880,-5.772053,2.818630,7.540790,3.370845,-6.991843],[4.053475,2.001274,-2.260965,-3.324274,-1.923198,2.155854,-1.372122,-1.496614],[0.516889,-7.901841,-0.258760,8.065532,-9.968374,7.108872,7.093932,-4.641224],[8.020750,-1.680990,7.545206,2.810820,0.339919,9.083815,0.764227,9.935614],[8.581210,7.295581,-7.234712,3.559116,9.719068,-9.597189,-7.970380,3.741431],[-8.632516,6.347656,-7.808229,-4.305802,1.038671,-0.129006,2.205978,9.580160],[8.310758,-0.361973,-3.933849,7.397640,-9.465362,-3.907853,-9.588292,-5.746754]],[[8.927273,5.621233,-0.530274,-7.363080,9.408624,-6.704296,-9.778897,9.404299],[-6.133400,4.357266,8.833721,5.542023,-1.223814,1.635113,5.690780,1.515769],[9.160669,8.027844,-3.998295,-0.968567,-1.443170,-8.936878,-1.988492,-5.859881],[-6.380846,5.681860,-2.690571,9.575215,4.555288,-0.765960,0.550142,6.868891],[-3.809343,-0.023167,-1.271887,-0.525972,-2.446909,2.671207,-6.349882,3.019214],[5.059216,-1.782615,9.529095,-6.723473,-0.416122,-9.612749,3.047007,3.509021],[-9.386466,-8.019378,-1.882783,0.846448,-6.338085,5.830903,-7.373817,1.056133],[-2.897894,-3.629509,9.764175,-4.870498,9.741914,8.787932,-5.317115,-7.717085],[3.645851,-5.241170,2.342441,-5.993190,-8.295289,-6.884752,-6.467553,6.860968]],[[0.091273,3.654058,-6.726396,6.848598,-8.888602,-5.709969,0.158123,0.025696],[-1.801882,-8.836417,1.099744,5.415525,-6.125649,-0.245270,8.008441,0.974348],[4.481412,6.651879,-1.085681,0.073903,-9.116547,-2.820654,-6.300880,-7.989965],[6.023063,-0.071635,1.457416,-0.966780,0.858252,-0.585559,-7.136305,-2.729092],[-5.013985,-5.013661,-4.012153,0.484533,1.209616,-6.733833,2.097096,-1.827682],[6.008092,7.585268,-0.789212,-5.514858,8.681560,-7.206982,4.805722,2.682813],[1.697946,-2.764547,-2.777196,-6.728764,5.212063,7.396266,7.499238,3.835006],[1.649913,0.437498,3.629249,8.276986,-6.780774,-6.392376,-0.334360,-6.358618],[7.347875,5.356743,-2.318970,-5.472735,-8.461555,2.502873,6.685419,-4.878309]],[[7.404425,6.638326,-3.924239,0.936820,-1.126424,-3.580228,-9.542198,-1.160487],[0.425400,9.196080,1.911057,-8.036248,3.109652,4.610317,-9.804109,0.243585],[7.591704,-9.981810,-5.641696,2.952040,-0.865774,2.144452,-6.891155,-9.410732],[-6.522614,3.998553,9.649993,0.544088,7.964774,-1.964565,4.400107,-2.601398],[-9.367328,-2.645274,-5.678823,4.441377,0.468769,6.565635,2.377102,7.778312],[3.168710,3.135299,-4.555327,-7.999575,-0.432073,-0.418652,-2.463940,-5.988292],[5.245387,0.976208,-9.125744,-0.850155,-9.590292,7.382415,-3.624604,8.686871],[-5.513956,-0.254246,2.551075,-4.120546,7.745347,1.802985,6.974624,-2.582308],[-2.491590,9.561566,6.336671,-8.125676,5.490531,2.701647,1.666243,-8.660325]],[[0.960599,-0.801381,2.002271,-6.927062,0.494876,-3.193193,-4.153908,-8.115035],[2.419905,8.988899,2.199562,-2.637315,-3.824248,-3.232668,-6.198429,1.182651],[-5.206053,-8.436581,-9.133443,-2.744568,2.815671,6.817769,-2.070044,-3.226793],[9.944514,-4.069976,-7.524569,9.676465,-4.805741,-1.891753,-5.245953,-6.182279],[8.804024,-3.488401,-8.315448,-2.050019,-1.654094,5.905513,9.354679,-7.355931],[4.248509,4.115384,1.853923,-4.644464,4.572465,-3.148013,-4.193108,-5.703985],[7.944207,-6.370694,3.341090,6.239939,-7.893290,-4.076280,5.108062,-4.763182],[0.569549,-1.174998,-0.019022,-8.089539,5.618044,-7.397885,-5.856855,6.029095],[4.975354,8.513203,-8.053327,-3.427909,1.331044,-1.197633,5.155169,0.956044]]], dtype = "float64")#candidate|5653|(7, 9, 8)|const|float64
bop_5654 = relay.less(uop_5638.astype('bool'), relay.reshape(const_5653.astype('bool'), relay.shape_of(uop_5638))) # shape=(7, 9, 8)
bop_5657 = relay.less(uop_5640.astype('bool'), relay.reshape(const_5653.astype('bool'), relay.shape_of(uop_5640))) # shape=(7, 9, 8)
output = relay.Tuple([call_5612,bop_5641,bop_5654,])
output2 = relay.Tuple([call_5613,bop_5644,bop_5657,])
func_5665 = relay.Function([], output)
mod['func_5665'] = func_5665
mod = relay.transform.InferType()(mod)
output = func_5665()
func_5666 = relay.Function([], output)
mutated_mod['func_5666'] = func_5666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4549_call = mod.get_global_var('func_4549')
func_4551_call = mutated_mod.get_global_var('func_4551')
call_5667 = relay.TupleGetItem(func_4549_call(), 0)
call_5668 = relay.TupleGetItem(func_4551_call(), 0)
func_2865_call = mod.get_global_var('func_2865')
func_2868_call = mutated_mod.get_global_var('func_2868')
const_5672 = relay.const([5.378638,0.189627,8.570641,5.262508,2.626426,-7.746702], dtype = "float32")#candidate|5672|(6,)|const|float32
var_5673 = relay.var("var_5673", dtype = "uint32", shape = (420, 1))#candidate|5673|(420, 1)|var|uint32
call_5671 = relay.TupleGetItem(func_2865_call(relay.reshape(const_5672.astype('float32'), [2, 3, 1]), relay.reshape(var_5673.astype('uint32'), [420,]), ), 2)
call_5674 = relay.TupleGetItem(func_2868_call(relay.reshape(const_5672.astype('float32'), [2, 3, 1]), relay.reshape(var_5673.astype('uint32'), [420,]), ), 2)
output = relay.Tuple([call_5667,call_5671,const_5672,var_5673,])
output2 = relay.Tuple([call_5668,call_5674,const_5672,var_5673,])
func_5687 = relay.Function([var_5673,], output)
mod['func_5687'] = func_5687
mod = relay.transform.InferType()(mod)
mutated_mod['func_5687'] = func_5687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5688 = relay.var("var_5688", dtype = "uint32", shape = (420, 1))#candidate|5688|(420, 1)|var|uint32
func_5687_call = mutated_mod.get_global_var('func_5687')
call_5689 = func_5687_call(var_5688)
output = call_5689
func_5690 = relay.Function([var_5688], output)
mutated_mod['func_5690'] = func_5690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4549_call = mod.get_global_var('func_4549')
func_4551_call = mutated_mod.get_global_var('func_4551')
call_5716 = relay.TupleGetItem(func_4549_call(), 1)
call_5717 = relay.TupleGetItem(func_4551_call(), 1)
output = call_5716
output2 = call_5717
func_5729 = relay.Function([], output)
mod['func_5729'] = func_5729
mod = relay.transform.InferType()(mod)
mutated_mod['func_5729'] = func_5729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mutated_mod.get_global_var('func_5729')
call_5730 = func_5729_call()
output = call_5730
func_5731 = relay.Function([], output)
mutated_mod['func_5731'] = func_5731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3674_call = mod.get_global_var('func_3674')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_5745 = func_3674_call()
call_5746 = func_3674_call()
output = relay.Tuple([call_5745,])
output2 = relay.Tuple([call_5746,])
func_5751 = relay.Function([], output)
mod['func_5751'] = func_5751
mod = relay.transform.InferType()(mod)
mutated_mod['func_5751'] = func_5751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5751_call = mutated_mod.get_global_var('func_5751')
call_5752 = func_5751_call()
output = call_5752
func_5753 = relay.Function([], output)
mutated_mod['func_5753'] = func_5753
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5756 = relay.var("var_5756", dtype = "float64", shape = (3, 11, 7))#candidate|5756|(3, 11, 7)|var|float64
uop_5757 = relay.acos(var_5756.astype('float64')) # shape=(3, 11, 7)
bop_5766 = relay.power(uop_5757.astype('float64'), relay.reshape(var_5756.astype('float64'), relay.shape_of(uop_5757))) # shape=(3, 11, 7)
bop_5770 = relay.less(uop_5757.astype('bool'), relay.reshape(bop_5766.astype('bool'), relay.shape_of(uop_5757))) # shape=(3, 11, 7)
uop_5773 = relay.cosh(bop_5770.astype('float32')) # shape=(3, 11, 7)
func_3522_call = mod.get_global_var('func_3522')
func_3525_call = mutated_mod.get_global_var('func_3525')
const_5785 = relay.const([-5,-7,7,4,-7,2,9,10,1,5,1,-2,9,-4,-7,3,-9,4,6,-1,8,3,-5,-3], dtype = "int16")#candidate|5785|(24,)|const|int16
call_5784 = relay.TupleGetItem(func_3522_call(relay.reshape(const_5785.astype('int16'), [1, 8, 3])), 0)
call_5786 = relay.TupleGetItem(func_3525_call(relay.reshape(const_5785.astype('int16'), [1, 8, 3])), 0)
output = relay.Tuple([uop_5773,call_5784,const_5785,])
output2 = relay.Tuple([uop_5773,call_5786,const_5785,])
func_5788 = relay.Function([var_5756,], output)
mod['func_5788'] = func_5788
mod = relay.transform.InferType()(mod)
mutated_mod['func_5788'] = func_5788
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5789 = relay.var("var_5789", dtype = "float64", shape = (3, 11, 7))#candidate|5789|(3, 11, 7)|var|float64
func_5788_call = mutated_mod.get_global_var('func_5788')
call_5790 = func_5788_call(var_5789)
output = call_5790
func_5791 = relay.Function([var_5789], output)
mutated_mod['func_5791'] = func_5791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5665_call = mod.get_global_var('func_5665')
func_5666_call = mutated_mod.get_global_var('func_5666')
call_5912 = relay.TupleGetItem(func_5665_call(), 0)
call_5913 = relay.TupleGetItem(func_5666_call(), 0)
func_5729_call = mod.get_global_var('func_5729')
func_5731_call = mutated_mod.get_global_var('func_5731')
call_5916 = func_5729_call()
call_5917 = func_5729_call()
uop_5921 = relay.sinh(call_5912.astype('float32')) # shape=(15, 2, 8)
uop_5923 = relay.sinh(call_5913.astype('float32')) # shape=(15, 2, 8)
output = relay.Tuple([call_5916,uop_5921,])
output2 = relay.Tuple([call_5917,uop_5923,])
func_5930 = relay.Function([], output)
mod['func_5930'] = func_5930
mod = relay.transform.InferType()(mod)
output = func_5930()
func_5931 = relay.Function([], output)
mutated_mod['func_5931'] = func_5931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4576_call = mod.get_global_var('func_4576')
func_4577_call = mutated_mod.get_global_var('func_4577')
call_5940 = relay.TupleGetItem(func_4576_call(), 0)
call_5941 = relay.TupleGetItem(func_4577_call(), 0)
func_3465_call = mod.get_global_var('func_3465')
func_3468_call = mutated_mod.get_global_var('func_3468')
const_5961 = relay.const([-1.958007,5.979456,3.632707,-1.543915,-0.676566,2.088216,-8.358853,-8.862018,6.582154,1.299902,9.710578,8.100090,-2.075375,-6.684964,5.339127,1.269187,1.701964,-2.671585,-3.144039,6.705263,-8.284490,3.473867,8.744346,-2.289797,-9.895134,0.463625,1.714531,-3.442606,-4.568583,-0.844393,-4.997068,6.717599,-9.692165,-7.986883,-5.920790,-0.571651,2.649870,-3.272989,6.628386,3.652546,-7.127963,-1.883967,6.260655,-4.571021,0.506536,8.851251,-9.536289,7.496916,-7.369227,-3.330854,1.033661,7.025683,-7.321209,-5.483562,6.854625,4.634236,-5.047989,6.187569,-2.944848,5.209286,-4.314270,7.612051,0.952603,-2.241400,9.045681,4.713717,5.564088,2.613361,-1.812018,7.932414,7.735659,4.306395,-5.291847,-4.270247,-1.690469,-1.809071,-6.631283,-5.083713,-8.934827,-6.176996,4.059372,0.651509,-8.388583,-0.403045,-5.883207,-7.673293,-5.864061,5.202686,5.483923,1.599566,-0.261250,-0.872899,1.165203,-5.084438,6.547617,2.073077,-3.997178,1.170368,6.367871,4.328371,-6.891855,-8.524644,-5.075683,6.693679,2.989046,9.639815,4.529302,-7.419181,-0.966909,-8.234468,4.784952,-0.290509,-7.585693,2.956292,8.300412,2.678390,-3.921580,-6.316625,-9.725812,-1.567530,-2.401595,1.982008,-2.559908,4.974675,-1.756307,-9.274168,7.307295,-1.206591,7.014837,-3.348524,-9.147842,-0.055881,2.834827,4.125546,-9.636290,8.081320,-9.162678,-1.980796,-4.315349,0.069705,-9.007028,6.970032,5.809144,2.150564,2.270882,8.982649,-8.592909,-0.969949,6.046991,4.635182,-1.815612,-3.124302,0.453328,5.647938,-9.226927,-6.704568,-5.826593,2.323331,5.718481,-4.799248,-9.097824,0.397160,9.863396,-0.132924,3.561138,6.246520,-0.739415,-1.106365,-3.836999,2.533211,1.110265,6.192043,6.600121,4.505752,-8.422926,9.331698,7.112524,0.170387,2.071123,0.531433,5.724946,-1.260393,5.133250,7.430008,-5.256006,-7.678236,-4.150692,9.399605,-9.868259,1.121482,3.766385,0.720220,0.324868,4.819635,-2.271157,0.931145,4.955430,5.009772,3.635493,4.159022,-9.761455,9.526879,5.516954,-5.971004,1.674606,-8.358161,4.596849,0.070010,-0.260758,7.855668,-8.830368,-8.173486,-3.339784,-1.668790,-1.276867,1.643094,5.939579,-3.092284,6.012958,8.767387,-7.015161,3.809285,7.326900,-6.539322,-2.343852,3.305532,-2.454753,-7.863557,8.285270,-5.989257,-2.262343,-6.764802,-0.052592,7.706386,-9.949205,-1.685673,-2.269530,-6.379651,1.464394,-5.750333,-7.985510,-1.792942,5.255051,2.180174,7.406083,6.258417,2.965683,8.601754,-5.962379,6.540654,9.590640,1.209814,-4.687927,-9.305898,-6.744972,5.257939,-9.463032,7.688820,-6.919349,-4.619385,5.759983,-2.303978,-8.990080,-2.519200,-5.678805,7.638921,-0.968606,7.214769,-0.577605,-9.918251,-0.435156,0.629041,9.111522,7.144470,2.663358,1.772447,6.817744,6.610005,0.580223,-0.819035,2.513298,-1.637691,-3.447490,-0.457725,8.361410,8.185354,-3.646126,-0.870369,9.166633,-0.220552,9.639347,1.834063,9.833096,-0.807583,9.538611,-0.690067,-7.079613,-1.269427,-5.890310,3.511413,7.580316,-9.783332,7.783762,3.336829,-1.019732,2.423142,9.557850,-1.156823,2.055696,0.186834,2.837066,-8.576424,-6.799382,-3.345608,9.462228,-6.184859,-1.451309,9.159998,5.741640,-5.010993,-7.272138,-7.325653,8.003285,-6.158042,2.338887,0.695274,4.884477,7.163940,-8.162309,-9.258445,5.472172,-3.564854,7.854063,-1.693925,-9.882089,-9.714158,-7.500567,-2.288048,2.306013,8.955314,-3.994544,9.407462,-3.499446,-4.630249,-6.780739,-5.434380,9.047178,0.254689,-5.707254,-1.874201,1.798973,1.193709,5.808962,2.457157,-8.532286,4.791574,0.918175,-6.084777,0.839648,-0.018859,-6.483371,-3.747461,2.178761,-6.356286,7.030634,-3.353163,-1.009854,-4.311776,0.175474,-0.813711,-6.860035,-9.555366,4.832752,8.780659,8.219411,-9.514004,8.299092,-3.256868,0.097192,-3.109246,2.800109,1.604216,3.115804,1.447579,3.924882,-0.055628,0.366529,0.865664,-0.497201,-4.094587,-5.570741,3.756528,4.521575,-3.067370,-2.895560,3.585611,5.437644,5.074651,-4.274244,7.910959,7.202679,-2.071066,-4.713702,3.082685,-5.194081,7.882282,-3.708423,-4.836532,-2.415438,-3.555107,-3.104989,-7.919851,-7.324450,-5.366873,-4.931250,-2.057369,4.642910,-5.572705,-5.733010,-6.315320,6.057391,8.572971,-0.340194,0.570664,-6.381523,-5.177454,0.396444,-8.532821,-2.588325,2.298833,-1.479333,-8.074345,-8.445274,-6.206167,-8.295604,8.951607,-2.754330,-4.282599,4.977923,0.449887,9.399934,-7.573830,-4.324800,5.231778,1.028330,8.551773,-7.865095,8.115637,-5.081724,-4.537432,6.522843,2.292804,-5.115725,-3.398951,5.118083,-8.280498,3.575565,-8.585281,0.071757,9.567346,-5.682294,1.197979,-6.054315,7.055474,-5.458568,-2.491947,1.761778,3.312981,2.586196,3.526884,8.281294,4.596630,-1.325672,-1.599430,0.406043,-8.686220,-4.986557,3.363739,2.730299,4.171401,-5.868433,3.238371,4.309618,7.266577,-3.974136,-3.572903,-1.796877,1.991632,6.447325,4.800038,3.260971,-5.847306,3.916583,-3.575072,-7.617979,-9.029978,6.050586,-4.443610,-8.695181,9.974017,8.976394,-1.661375,-2.532230,-9.678310,8.080030,-3.633155,-9.481190,-9.226756,-7.036806,-3.030952,-0.719284,2.909750,-7.235998,1.669914,-9.372398,6.884017,-7.845639,0.727997,1.256106,-6.063683,5.772934,7.457527,9.274108,6.488407,9.396314,-9.442646,-9.135704,6.224581,3.074963,8.711167,-6.280011,1.617120,-4.778868,8.812423,0.625086,-9.918223,-8.613085,-6.772843,0.693175,-0.181079,9.435872,4.711325,-2.198220,-0.762508,7.655763,1.752250,-8.835059,-2.775916,-2.924247,8.204953,5.838734,-7.166134,5.935493,7.468988,7.731570,1.500546,-4.785600,-5.280065,-4.388892,-3.022640,2.132055,0.708904,8.242761,-4.032401,0.536196,7.532453,-5.622572,-1.832580,-0.899325,-9.220467,9.103458,-2.610163,-6.298756,9.364249,4.254379,-3.340328,5.713599,-1.440154,5.877080,-7.892951,-7.054755,3.084868,-3.673366,8.531375,4.908966,-3.270919,3.518582,-0.312568,5.730501,-3.114047,-1.604511,4.472451,-5.727695,-5.772099,8.312218,-6.267219,-8.012188,-3.150729,-2.715020,2.739563,1.981683,-9.666548,-0.013637,5.876453,-9.947578,-1.156378,-0.852986,3.129359,0.459781,8.113870,-4.105666,6.767114,5.156655,3.374615,2.204230,-1.098615,-7.194317,3.668932,8.226493,8.066482,6.986149,-2.505963,9.363465,-3.176048,4.060365,6.875592,-1.196870,-6.289202,-2.791632,6.193679,-6.102672,0.617866,-0.043173,6.830925,7.919410,-6.176990,-7.476440,-4.243440,-6.980367,9.738304,-1.982657,9.032600,2.577740,3.132143,-8.930056,9.565687,-9.366870,7.572700,4.165400,-4.086262,8.998543,1.709054,-2.536203,-1.070652,8.658997,-3.401477,-6.608736,-8.633391,-7.811969,-6.295647,-1.904765,8.465468,-7.763949,7.926119,-5.529517,-9.255237,-4.092255,3.024277,7.024413,3.046355,2.016576,2.311866,-5.202901,0.034858,9.788209,0.169375,5.729227,-0.396880,0.786629,-0.388783,3.685944,-2.229081,-0.074008,-5.903915,5.300379,-2.715229,-3.186308,-8.103228,4.988528,3.974114,5.320294,-9.400499,0.498540,-3.179723,2.326544,-4.489321,2.007725,-0.634166,3.961213,-9.615059,0.160497,2.432447,-8.309535,-8.556495,-7.850648,-4.683229,-1.532348,-0.528718,3.302218,-4.580559,5.660288,9.690637,2.265723,0.391859,5.783491,5.586582,-1.384568,-7.164707,6.314280,6.020914,-0.577631,2.832579,-6.444568,-7.691307,1.306284,-3.064325,-9.434836,1.279219,-0.810914,-3.043131,-2.572809,-3.358174,-3.464534,5.051783,0.017498,1.870589,-1.977111,-5.246811,9.700879,-6.076270,3.648323,2.645197,8.129052,-1.510830,9.112273,6.483677,-6.698114,8.795209,-4.316121,-6.721697,2.828014,8.880937,0.365583,-6.857680,-5.581906,9.110180,-2.421456,4.763201,4.871091,5.712420,-2.201324,6.902224,-1.511363,-8.948530,6.147640,-7.244986,-6.715534,6.520583,0.441174,-6.075685], dtype = "float32")#candidate|5961|(770,)|const|float32
call_5960 = relay.TupleGetItem(func_3465_call(relay.reshape(const_5961.astype('float32'), [7, 10, 11]), relay.reshape(const_5961.astype('float32'), [7, 10, 11]), ), 0)
call_5962 = relay.TupleGetItem(func_3468_call(relay.reshape(const_5961.astype('float32'), [7, 10, 11]), relay.reshape(const_5961.astype('float32'), [7, 10, 11]), ), 0)
uop_5965 = relay.log2(call_5940.astype('float64')) # shape=(15, 2, 8)
uop_5967 = relay.log2(call_5941.astype('float64')) # shape=(15, 2, 8)
func_3699_call = mod.get_global_var('func_3699')
func_3701_call = mutated_mod.get_global_var('func_3701')
call_5969 = func_3699_call()
call_5970 = func_3699_call()
output = relay.Tuple([call_5960,const_5961,uop_5965,call_5969,])
output2 = relay.Tuple([call_5962,const_5961,uop_5967,call_5970,])
func_5980 = relay.Function([], output)
mod['func_5980'] = func_5980
mod = relay.transform.InferType()(mod)
output = func_5980()
func_5981 = relay.Function([], output)
mutated_mod['func_5981'] = func_5981
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6013 = relay.var("var_6013", dtype = "float32", shape = (7, 11, 1))#candidate|6013|(7, 11, 1)|var|float32
uop_6014 = relay.atan(var_6013.astype('float32')) # shape=(7, 11, 1)
output = relay.Tuple([uop_6014,])
output2 = relay.Tuple([uop_6014,])
func_6020 = relay.Function([var_6013,], output)
mod['func_6020'] = func_6020
mod = relay.transform.InferType()(mod)
var_6021 = relay.var("var_6021", dtype = "float32", shape = (7, 11, 1))#candidate|6021|(7, 11, 1)|var|float32
output = func_6020(var_6021)
func_6022 = relay.Function([var_6021], output)
mutated_mod['func_6022'] = func_6022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_6047 = relay.TupleGetItem(func_3532_call(), 0)
call_6048 = relay.TupleGetItem(func_3533_call(), 0)
uop_6052 = relay.cos(call_6047.astype('float64')) # shape=(15, 2, 8)
uop_6054 = relay.cos(call_6048.astype('float64')) # shape=(15, 2, 8)
output = uop_6052
output2 = uop_6054
func_6058 = relay.Function([], output)
mod['func_6058'] = func_6058
mod = relay.transform.InferType()(mod)
output = func_6058()
func_6059 = relay.Function([], output)
mutated_mod['func_6059'] = func_6059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5980_call = mod.get_global_var('func_5980')
func_5981_call = mutated_mod.get_global_var('func_5981')
call_6146 = relay.TupleGetItem(func_5980_call(), 0)
call_6147 = relay.TupleGetItem(func_5981_call(), 0)
output = relay.Tuple([call_6146,])
output2 = relay.Tuple([call_6147,])
func_6153 = relay.Function([], output)
mod['func_6153'] = func_6153
mod = relay.transform.InferType()(mod)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6153_call = mutated_mod.get_global_var('func_6153')
call_6154 = func_6153_call()
output = call_6154
func_6155 = relay.Function([], output)
mutated_mod['func_6155'] = func_6155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5588_call = mod.get_global_var('func_5588')
func_5590_call = mutated_mod.get_global_var('func_5590')
call_6158 = relay.TupleGetItem(func_5588_call(), 0)
call_6159 = relay.TupleGetItem(func_5590_call(), 0)
func_5980_call = mod.get_global_var('func_5980')
func_5981_call = mutated_mod.get_global_var('func_5981')
call_6160 = relay.TupleGetItem(func_5980_call(), 2)
call_6161 = relay.TupleGetItem(func_5981_call(), 2)
output = relay.Tuple([call_6158,call_6160,])
output2 = relay.Tuple([call_6159,call_6161,])
func_6178 = relay.Function([], output)
mod['func_6178'] = func_6178
mod = relay.transform.InferType()(mod)
output = func_6178()
func_6179 = relay.Function([], output)
mutated_mod['func_6179'] = func_6179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5751_call = mod.get_global_var('func_5751')
func_5753_call = mutated_mod.get_global_var('func_5753')
call_6222 = relay.TupleGetItem(func_5751_call(), 0)
call_6223 = relay.TupleGetItem(func_5753_call(), 0)
func_4576_call = mod.get_global_var('func_4576')
func_4577_call = mutated_mod.get_global_var('func_4577')
call_6229 = relay.TupleGetItem(func_4576_call(), 0)
call_6230 = relay.TupleGetItem(func_4577_call(), 0)
output = relay.Tuple([call_6222,call_6229,])
output2 = relay.Tuple([call_6223,call_6230,])
func_6231 = relay.Function([], output)
mod['func_6231'] = func_6231
mod = relay.transform.InferType()(mod)
mutated_mod['func_6231'] = func_6231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6231_call = mutated_mod.get_global_var('func_6231')
call_6232 = func_6231_call()
output = call_6232
func_6233 = relay.Function([], output)
mutated_mod['func_6233'] = func_6233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6178_call = mod.get_global_var('func_6178')
func_6179_call = mutated_mod.get_global_var('func_6179')
call_6343 = relay.TupleGetItem(func_6178_call(), 0)
call_6344 = relay.TupleGetItem(func_6179_call(), 0)
output = relay.Tuple([call_6343,])
output2 = relay.Tuple([call_6344,])
func_6355 = relay.Function([], output)
mod['func_6355'] = func_6355
mod = relay.transform.InferType()(mod)
output = func_6355()
func_6356 = relay.Function([], output)
mutated_mod['func_6356'] = func_6356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6355_call = mod.get_global_var('func_6355')
func_6356_call = mutated_mod.get_global_var('func_6356')
call_6369 = relay.TupleGetItem(func_6355_call(), 0)
call_6370 = relay.TupleGetItem(func_6356_call(), 0)
func_4714_call = mod.get_global_var('func_4714')
func_4717_call = mutated_mod.get_global_var('func_4717')
call_6371 = relay.TupleGetItem(func_4714_call(relay.reshape(call_6369.astype('float64'), [15, 2, 8])), 0)
call_6372 = relay.TupleGetItem(func_4717_call(relay.reshape(call_6369.astype('float64'), [15, 2, 8])), 0)
func_4783_call = mod.get_global_var('func_4783')
func_4785_call = mutated_mod.get_global_var('func_4785')
call_6387 = relay.TupleGetItem(func_4783_call(), 0)
call_6388 = relay.TupleGetItem(func_4785_call(), 0)
output = relay.Tuple([call_6369,call_6371,call_6387,])
output2 = relay.Tuple([call_6370,call_6372,call_6388,])
func_6404 = relay.Function([], output)
mod['func_6404'] = func_6404
mod = relay.transform.InferType()(mod)
output = func_6404()
func_6405 = relay.Function([], output)
mutated_mod['func_6405'] = func_6405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5980_call = mod.get_global_var('func_5980')
func_5981_call = mutated_mod.get_global_var('func_5981')
call_6412 = relay.TupleGetItem(func_5980_call(), 1)
call_6413 = relay.TupleGetItem(func_5981_call(), 1)
func_6058_call = mod.get_global_var('func_6058')
func_6059_call = mutated_mod.get_global_var('func_6059')
call_6436 = func_6058_call()
call_6437 = func_6058_call()
output = relay.Tuple([call_6412,call_6436,])
output2 = relay.Tuple([call_6413,call_6437,])
func_6438 = relay.Function([], output)
mod['func_6438'] = func_6438
mod = relay.transform.InferType()(mod)
output = func_6438()
func_6439 = relay.Function([], output)
mutated_mod['func_6439'] = func_6439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6519 = relay.var("var_6519", dtype = "uint16", shape = (3, 7, 1))#candidate|6519|(3, 7, 1)|var|uint16
var_6520 = relay.var("var_6520", dtype = "uint16", shape = (3, 7, 15))#candidate|6520|(3, 7, 15)|var|uint16
bop_6521 = relay.less(var_6519.astype('bool'), var_6520.astype('bool')) # shape=(3, 7, 15)
bop_6536 = relay.greater(var_6520.astype('bool'), relay.reshape(bop_6521.astype('bool'), relay.shape_of(var_6520))) # shape=(3, 7, 15)
output = bop_6536
output2 = bop_6536
func_6560 = relay.Function([var_6519,var_6520,], output)
mod['func_6560'] = func_6560
mod = relay.transform.InferType()(mod)
mutated_mod['func_6560'] = func_6560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6560_call = mutated_mod.get_global_var('func_6560')
var_6562 = relay.var("var_6562", dtype = "uint16", shape = (3, 7, 1))#candidate|6562|(3, 7, 1)|var|uint16
var_6563 = relay.var("var_6563", dtype = "uint16", shape = (3, 7, 15))#candidate|6563|(3, 7, 15)|var|uint16
call_6561 = func_6560_call(var_6562,var_6563,)
output = call_6561
func_6564 = relay.Function([var_6562,var_6563,], output)
mutated_mod['func_6564'] = func_6564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mod.get_global_var('func_5729')
func_5731_call = mutated_mod.get_global_var('func_5731')
call_6626 = func_5729_call()
call_6627 = func_5729_call()
output = relay.Tuple([call_6626,])
output2 = relay.Tuple([call_6627,])
func_6659 = relay.Function([], output)
mod['func_6659'] = func_6659
mod = relay.transform.InferType()(mod)
output = func_6659()
func_6660 = relay.Function([], output)
mutated_mod['func_6660'] = func_6660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6404_call = mod.get_global_var('func_6404')
func_6405_call = mutated_mod.get_global_var('func_6405')
call_6724 = relay.TupleGetItem(func_6404_call(), 0)
call_6725 = relay.TupleGetItem(func_6405_call(), 0)
output = relay.Tuple([call_6724,])
output2 = relay.Tuple([call_6725,])
func_6753 = relay.Function([], output)
mod['func_6753'] = func_6753
mod = relay.transform.InferType()(mod)
output = func_6753()
func_6754 = relay.Function([], output)
mutated_mod['func_6754'] = func_6754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6355_call = mod.get_global_var('func_6355')
func_6356_call = mutated_mod.get_global_var('func_6356')
call_6779 = relay.TupleGetItem(func_6355_call(), 0)
call_6780 = relay.TupleGetItem(func_6356_call(), 0)
uop_6785 = relay.atan(call_6779.astype('float64')) # shape=(15, 2, 8)
uop_6787 = relay.atan(call_6780.astype('float64')) # shape=(15, 2, 8)
func_5139_call = mod.get_global_var('func_5139')
func_5140_call = mutated_mod.get_global_var('func_5140')
call_6793 = relay.TupleGetItem(func_5139_call(), 0)
call_6794 = relay.TupleGetItem(func_5140_call(), 0)
func_4231_call = mod.get_global_var('func_4231')
func_4234_call = mutated_mod.get_global_var('func_4234')
var_6800 = relay.var("var_6800", dtype = "float64", shape = ())#candidate|6800|()|var|float64
call_6799 = relay.TupleGetItem(func_4231_call(relay.reshape(var_6800.astype('float64'), [])), 0)
call_6801 = relay.TupleGetItem(func_4234_call(relay.reshape(var_6800.astype('float64'), [])), 0)
func_5729_call = mod.get_global_var('func_5729')
func_5731_call = mutated_mod.get_global_var('func_5731')
call_6806 = func_5729_call()
call_6807 = func_5729_call()
func_5247_call = mod.get_global_var('func_5247')
func_5253_call = mutated_mod.get_global_var('func_5253')
const_6809 = relay.const([False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False], dtype = "bool")#candidate|6809|(300,)|const|bool
const_6810 = relay.const([False,True,False,False,False,False,True,True], dtype = "bool")#candidate|6810|(8,)|const|bool
const_6811 = relay.const([True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,False,False,True], dtype = "bool")#candidate|6811|(88,)|const|bool
const_6812 = relay.const([-0.053234,5.868204,-0.657639,-9.621184,-2.052967,1.028894,-9.025584,3.816646,-0.662571,-3.222909,2.109175,-8.331432,-1.929636,-2.642419,1.670971,-3.637407,1.485866,-4.274863,-6.485978,4.466034,6.525016,5.884121,0.554193,4.572479,-7.421442,7.151991,3.587797,0.156427,3.260921,-1.804217,-1.883053,-7.894097,-0.129170,5.863637,-0.384764,-8.382035,6.950423,6.635746,-1.952593,-8.184112,-0.728554,-6.592621,4.123206,6.446744,1.942581,0.213241,-3.244375,2.147248,4.106015,1.819310,-7.457565,6.101756,-5.978853,-0.783085,1.822485,7.184604,-6.695421,9.825261,8.672972,-6.120835,-1.672365,-5.882433,-6.244573,-6.114821,-6.176733,8.214331,7.710234,-7.808631,8.577077,-7.565972,-1.516896,-7.897599,8.679854,-7.265330,5.253382,8.673635,5.469637,-3.069877,-5.459144,3.472795,0.557424,6.571124,2.163956,-4.052904,-5.711443,5.470186,-8.571679,5.611923,1.385151,6.229658,3.751672,0.866188,-2.615476,-4.342265,-9.344442,-3.313936,-8.181105,-6.320606,3.415052,-6.709364,9.404442,-3.272438,2.327571,4.421406,-2.273553,1.957277,1.247004,-1.137924,2.855810,-9.212459,-6.490583,5.093603,-7.872992,-6.730524,-5.664061,8.905801,-4.696789,9.727572,-6.624185,-4.387689,1.836363,-1.867716,-8.254897,9.649759,7.182791,6.492102,-3.076681,-5.271003,-0.480729,-2.554228,2.846047,-1.121329,-8.758067,6.908791,-5.230221,9.461136,-9.372982,3.239415,-5.963041,-5.840856,-8.807249,1.210961,-4.944283,-0.765297,-9.395430,9.242875,-2.889499,6.576678,4.309227,7.765925,-4.953396,-2.627025,-3.904814,-1.265771,-7.233685,-7.229670,-2.122480,4.312839,2.564170,-7.751346,-3.937539,9.343013,0.994222,8.570297,-6.300115,6.201810,1.537143,1.604296,4.455803,-5.387241,-7.667162,-8.146503,-7.511462,2.480996,3.226800,0.542970,6.300562,6.064724,9.700059,1.964953,6.625194,5.578560,-6.631025,1.596358,-6.470304,9.447578,-9.513119,3.272056,6.141423,0.007966,-0.497324,8.085266,9.689272,0.569329,5.162662,-0.988705,3.339999,-0.321720,-7.326458,6.047576,9.351582,0.910861,-0.164578,1.835754,0.802159,6.768216,3.347306,3.306013,1.183453,-7.957027,-2.742239,8.519211,-0.002751,9.003129,2.718845,0.960771,-6.792868,5.490917,7.535317,-0.307247,5.617271,1.180363,-0.534666,7.644126,1.166500,7.870732,5.621857,5.931872,-6.115308,-2.038505,7.222051,-6.642486,8.089458,-7.514176,-9.836999,3.216553,-3.308813,4.437308,-8.843144,-7.661264,-7.629443,9.356550,0.779405,8.765647,2.843251,8.174992,7.349956,-5.106046,3.871447,2.794761,-8.486188,0.465985,8.385118,0.623301,-3.682132,0.207582,0.604337,-8.849129,5.757470,-2.002026,4.922280,4.605847,-6.427184,8.430113,5.195469,8.824738,-1.100748,-5.985884,8.699376,4.355373,-6.767955,-9.920566,9.704872,-8.891479,-7.327842,7.322237,-6.386637,-9.805742,9.304890,6.671686], dtype = "float64")#candidate|6812|(280,)|const|float64
call_6808 = relay.TupleGetItem(func_5247_call(relay.reshape(const_6809.astype('bool'), [10, 3, 10]), relay.reshape(const_6810.astype('bool'), [8,]), relay.reshape(const_6811.astype('bool'), [88,]), relay.reshape(const_6812.astype('float64'), [280,]), ), 3)
call_6813 = relay.TupleGetItem(func_5253_call(relay.reshape(const_6809.astype('bool'), [10, 3, 10]), relay.reshape(const_6810.astype('bool'), [8,]), relay.reshape(const_6811.astype('bool'), [88,]), relay.reshape(const_6812.astype('float64'), [280,]), ), 3)
var_6816 = relay.var("var_6816", dtype = "float64", shape = (15, 2, 8))#candidate|6816|(15, 2, 8)|var|float64
bop_6817 = relay.mod(call_6793.astype('float64'), relay.reshape(var_6816.astype('float64'), relay.shape_of(call_6793))) # shape=(15, 2, 8)
bop_6820 = relay.mod(call_6794.astype('float64'), relay.reshape(var_6816.astype('float64'), relay.shape_of(call_6794))) # shape=(15, 2, 8)
output = relay.Tuple([uop_6785,call_6799,var_6800,call_6806,call_6808,const_6809,const_6810,const_6811,const_6812,bop_6817,])
output2 = relay.Tuple([uop_6787,call_6801,var_6800,call_6807,call_6813,const_6809,const_6810,const_6811,const_6812,bop_6820,])
func_6829 = relay.Function([var_6800,var_6816,], output)
mod['func_6829'] = func_6829
mod = relay.transform.InferType()(mod)
mutated_mod['func_6829'] = func_6829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6829_call = mutated_mod.get_global_var('func_6829')
var_6831 = relay.var("var_6831", dtype = "float64", shape = ())#candidate|6831|()|var|float64
var_6832 = relay.var("var_6832", dtype = "float64", shape = (15, 2, 8))#candidate|6832|(15, 2, 8)|var|float64
call_6830 = func_6829_call(var_6831,var_6832,)
output = call_6830
func_6833 = relay.Function([var_6831,var_6832,], output)
mutated_mod['func_6833'] = func_6833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6858 = relay.var("var_6858", dtype = "int8", shape = (13, 3, 15))#candidate|6858|(13, 3, 15)|var|int8
var_6859 = relay.var("var_6859", dtype = "int8", shape = (13, 3, 15))#candidate|6859|(13, 3, 15)|var|int8
bop_6860 = relay.less(var_6858.astype('bool'), relay.reshape(var_6859.astype('bool'), relay.shape_of(var_6858))) # shape=(13, 3, 15)
func_5247_call = mod.get_global_var('func_5247')
func_5253_call = mutated_mod.get_global_var('func_5253')
const_6866 = relay.const([False,True,False,False,True,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,True], dtype = "bool")#candidate|6866|(300,)|const|bool
var_6867 = relay.var("var_6867", dtype = "bool", shape = (8,))#candidate|6867|(8,)|var|bool
const_6868 = relay.const([False,True,False,True,True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True], dtype = "bool")#candidate|6868|(88,)|const|bool
var_6869 = relay.var("var_6869", dtype = "float64", shape = (280,))#candidate|6869|(280,)|var|float64
call_6865 = relay.TupleGetItem(func_5247_call(relay.reshape(const_6866.astype('bool'), [10, 3, 10]), relay.reshape(var_6867.astype('bool'), [8,]), relay.reshape(const_6868.astype('bool'), [88,]), relay.reshape(var_6869.astype('float64'), [280,]), ), 2)
call_6870 = relay.TupleGetItem(func_5253_call(relay.reshape(const_6866.astype('bool'), [10, 3, 10]), relay.reshape(var_6867.astype('bool'), [8,]), relay.reshape(const_6868.astype('bool'), [88,]), relay.reshape(var_6869.astype('float64'), [280,]), ), 2)
output = relay.Tuple([bop_6860,call_6865,const_6866,var_6867,const_6868,var_6869,])
output2 = relay.Tuple([bop_6860,call_6870,const_6866,var_6867,const_6868,var_6869,])
func_6873 = relay.Function([var_6858,var_6859,var_6867,var_6869,], output)
mod['func_6873'] = func_6873
mod = relay.transform.InferType()(mod)
var_6874 = relay.var("var_6874", dtype = "int8", shape = (13, 3, 15))#candidate|6874|(13, 3, 15)|var|int8
var_6875 = relay.var("var_6875", dtype = "int8", shape = (13, 3, 15))#candidate|6875|(13, 3, 15)|var|int8
var_6876 = relay.var("var_6876", dtype = "bool", shape = (8,))#candidate|6876|(8,)|var|bool
var_6877 = relay.var("var_6877", dtype = "float64", shape = (280,))#candidate|6877|(280,)|var|float64
output = func_6873(var_6874,var_6875,var_6876,var_6877,)
func_6878 = relay.Function([var_6874,var_6875,var_6876,var_6877,], output)
mutated_mod['func_6878'] = func_6878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6438_call = mod.get_global_var('func_6438')
func_6439_call = mutated_mod.get_global_var('func_6439')
call_6897 = relay.TupleGetItem(func_6438_call(), 0)
call_6898 = relay.TupleGetItem(func_6439_call(), 0)
output = call_6897
output2 = call_6898
func_6909 = relay.Function([], output)
mod['func_6909'] = func_6909
mod = relay.transform.InferType()(mod)
mutated_mod['func_6909'] = func_6909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6909_call = mutated_mod.get_global_var('func_6909')
call_6910 = func_6909_call()
output = call_6910
func_6911 = relay.Function([], output)
mutated_mod['func_6911'] = func_6911
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6928 = relay.var("var_6928", dtype = "float64", shape = (15, 1, 14))#candidate|6928|(15, 1, 14)|var|float64
var_6929 = relay.var("var_6929", dtype = "float64", shape = (15, 12, 14))#candidate|6929|(15, 12, 14)|var|float64
bop_6930 = relay.floor_mod(var_6928.astype('float64'), var_6929.astype('float64')) # shape=(15, 12, 14)
output = relay.Tuple([bop_6930,])
output2 = relay.Tuple([bop_6930,])
func_6939 = relay.Function([var_6928,var_6929,], output)
mod['func_6939'] = func_6939
mod = relay.transform.InferType()(mod)
mutated_mod['func_6939'] = func_6939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6939_call = mutated_mod.get_global_var('func_6939')
var_6941 = relay.var("var_6941", dtype = "float64", shape = (15, 1, 14))#candidate|6941|(15, 1, 14)|var|float64
var_6942 = relay.var("var_6942", dtype = "float64", shape = (15, 12, 14))#candidate|6942|(15, 12, 14)|var|float64
call_6940 = func_6939_call(var_6941,var_6942,)
output = call_6940
func_6943 = relay.Function([var_6941,var_6942,], output)
mutated_mod['func_6943'] = func_6943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_7028 = func_3423_call()
call_7029 = func_3423_call()
output = call_7028
output2 = call_7029
func_7033 = relay.Function([], output)
mod['func_7033'] = func_7033
mod = relay.transform.InferType()(mod)
mutated_mod['func_7033'] = func_7033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7033_call = mutated_mod.get_global_var('func_7033')
call_7034 = func_7033_call()
output = call_7034
func_7035 = relay.Function([], output)
mutated_mod['func_7035'] = func_7035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6058_call = mod.get_global_var('func_6058')
func_6059_call = mutated_mod.get_global_var('func_6059')
call_7098 = func_6058_call()
call_7099 = func_6058_call()
func_1407_call = mod.get_global_var('func_1407')
func_1410_call = mutated_mod.get_global_var('func_1410')
var_7126 = relay.var("var_7126", dtype = "float32", shape = (39,))#candidate|7126|(39,)|var|float32
call_7125 = relay.TupleGetItem(func_1407_call(relay.reshape(var_7126.astype('float32'), [3, 13, 1])), 2)
call_7127 = relay.TupleGetItem(func_1410_call(relay.reshape(var_7126.astype('float32'), [3, 13, 1])), 2)
output = relay.Tuple([call_7098,call_7125,var_7126,])
output2 = relay.Tuple([call_7099,call_7127,var_7126,])
func_7128 = relay.Function([var_7126,], output)
mod['func_7128'] = func_7128
mod = relay.transform.InferType()(mod)
var_7129 = relay.var("var_7129", dtype = "float32", shape = (39,))#candidate|7129|(39,)|var|float32
output = func_7128(var_7129)
func_7130 = relay.Function([var_7129], output)
mutated_mod['func_7130'] = func_7130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mod.get_global_var('func_5095')
func_5097_call = mutated_mod.get_global_var('func_5097')
call_7148 = relay.TupleGetItem(func_5095_call(), 1)
call_7149 = relay.TupleGetItem(func_5097_call(), 1)
func_5665_call = mod.get_global_var('func_5665')
func_5666_call = mutated_mod.get_global_var('func_5666')
call_7160 = relay.TupleGetItem(func_5665_call(), 0)
call_7161 = relay.TupleGetItem(func_5666_call(), 0)
func_6873_call = mod.get_global_var('func_6873')
func_6878_call = mutated_mod.get_global_var('func_6878')
var_7181 = relay.var("var_7181", dtype = "int8", shape = (585,))#candidate|7181|(585,)|var|int8
const_7182 = relay.const([False,False,True,False,False,False,False,False], dtype = "bool")#candidate|7182|(8,)|const|bool
var_7183 = relay.var("var_7183", dtype = "float64", shape = (140, 2))#candidate|7183|(140, 2)|var|float64
call_7180 = relay.TupleGetItem(func_6873_call(relay.reshape(var_7181.astype('int8'), [13, 3, 15]), relay.reshape(var_7181.astype('int8'), [13, 3, 15]), relay.reshape(const_7182.astype('bool'), [8,]), relay.reshape(var_7183.astype('float64'), [280,]), ), 5)
call_7184 = relay.TupleGetItem(func_6878_call(relay.reshape(var_7181.astype('int8'), [13, 3, 15]), relay.reshape(var_7181.astype('int8'), [13, 3, 15]), relay.reshape(const_7182.astype('bool'), [8,]), relay.reshape(var_7183.astype('float64'), [280,]), ), 5)
output = relay.Tuple([call_7148,call_7160,call_7180,var_7181,const_7182,var_7183,])
output2 = relay.Tuple([call_7149,call_7161,call_7184,var_7181,const_7182,var_7183,])
func_7187 = relay.Function([var_7181,var_7183,], output)
mod['func_7187'] = func_7187
mod = relay.transform.InferType()(mod)
mutated_mod['func_7187'] = func_7187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7187_call = mutated_mod.get_global_var('func_7187')
var_7189 = relay.var("var_7189", dtype = "int8", shape = (585,))#candidate|7189|(585,)|var|int8
var_7190 = relay.var("var_7190", dtype = "float64", shape = (140, 2))#candidate|7190|(140, 2)|var|float64
call_7188 = func_7187_call(var_7189,var_7190,)
output = call_7188
func_7191 = relay.Function([var_7189,var_7190,], output)
mutated_mod['func_7191'] = func_7191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5139_call = mod.get_global_var('func_5139')
func_5140_call = mutated_mod.get_global_var('func_5140')
call_7231 = relay.TupleGetItem(func_5139_call(), 0)
call_7232 = relay.TupleGetItem(func_5140_call(), 0)
var_7242 = relay.var("var_7242", dtype = "float64", shape = (15, 2, 8))#candidate|7242|(15, 2, 8)|var|float64
bop_7243 = relay.floor_divide(call_7231.astype('float32'), relay.reshape(var_7242.astype('float32'), relay.shape_of(call_7231))) # shape=(15, 2, 8)
bop_7246 = relay.floor_divide(call_7232.astype('float32'), relay.reshape(var_7242.astype('float32'), relay.shape_of(call_7232))) # shape=(15, 2, 8)
output = bop_7243
output2 = bop_7246
func_7269 = relay.Function([var_7242,], output)
mod['func_7269'] = func_7269
mod = relay.transform.InferType()(mod)
mutated_mod['func_7269'] = func_7269
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7270 = relay.var("var_7270", dtype = "float64", shape = (15, 2, 8))#candidate|7270|(15, 2, 8)|var|float64
func_7269_call = mutated_mod.get_global_var('func_7269')
call_7271 = func_7269_call(var_7270)
output = call_7271
func_7272 = relay.Function([var_7270], output)
mutated_mod['func_7272'] = func_7272
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7339 = relay.const([[[9.314972,-8.563192,8.364504,2.153693,-2.782445,-6.341665,-5.054876],[-0.561914,-6.350416,9.572025,-4.128696,4.570580,7.121113,-6.792554],[-1.318254,3.217915,8.323390,-6.678027,-7.269438,-3.217422,4.000036]],[[0.175198,6.238023,-0.160659,2.882989,6.455881,5.008996,-2.438879],[8.237232,3.111559,4.829264,4.553475,3.787511,0.466921,-6.696654],[-7.076413,-4.337529,5.072202,2.911588,8.061954,7.385719,3.706173]],[[2.911750,5.867729,-4.256527,-9.621248,5.257227,0.537404,-9.205759],[-3.235127,-8.393360,-9.889252,-7.527715,-0.502066,1.709079,0.682282],[-3.178707,6.912418,-0.430003,-9.867360,9.326516,-2.211378,7.221101]],[[3.873826,-9.428067,-0.186099,6.622617,5.319424,-6.052764,1.426774],[4.932741,-1.874825,1.237725,-8.430561,-3.049016,3.384311,9.413396],[0.664535,4.952295,-5.338287,-9.936833,-8.349337,7.869648,-3.733259]],[[4.152013,1.858790,-1.313436,6.046900,5.994777,2.613856,-1.523380],[-0.678891,3.041057,-6.647683,-6.644014,-3.613670,9.421374,-9.962128],[7.185518,-2.297074,8.985652,8.833331,0.746938,4.368726,-5.602404]],[[5.291539,0.060765,7.749982,7.806202,9.328966,-1.039411,-9.698471],[-6.287117,9.759382,4.169540,0.370291,1.382518,-0.650122,3.212030],[-9.261449,5.164163,-2.114916,9.159157,5.751473,-4.086466,-7.933206]],[[-5.108722,-6.488436,-4.823292,-0.411868,-8.977379,-4.085877,7.538578],[-7.203937,-1.534128,-9.178246,-2.145649,4.051893,-2.144621,-7.374631],[6.852731,-7.000181,-6.651934,8.335857,-2.698428,-3.543011,6.248111]],[[-1.325384,-7.612738,8.436285,4.093425,-8.686832,-5.350067,0.215557],[-9.299337,9.899697,3.426341,0.493016,8.302629,-2.651852,5.394514],[-5.640565,4.831852,0.252366,4.736997,-9.095633,-9.159442,1.217965]],[[-8.646336,-5.743307,-0.106094,3.430432,7.206010,5.996682,4.466329],[-3.314958,0.672196,9.811488,7.682974,-1.024982,4.745423,-5.032946],[7.422725,-2.018196,-9.673926,-5.628804,7.748025,-2.338225,-8.011793]],[[1.515816,0.340362,-8.336399,-3.964796,9.176880,-9.186627,-6.569217],[5.158811,-7.113419,-0.172909,-5.782581,4.658159,-7.188083,-1.060983],[2.646220,-7.917699,-3.061533,-4.873067,-9.181769,-2.724686,-2.552649]]], dtype = "float32")#candidate|7339|(10, 3, 7)|const|float32
uop_7340 = relay.log(const_7339.astype('float32')) # shape=(10, 3, 7)
output = relay.Tuple([uop_7340,])
output2 = relay.Tuple([uop_7340,])
func_7356 = relay.Function([], output)
mod['func_7356'] = func_7356
mod = relay.transform.InferType()(mod)
mutated_mod['func_7356'] = func_7356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7356_call = mutated_mod.get_global_var('func_7356')
call_7357 = func_7356_call()
output = call_7357
func_7358 = relay.Function([], output)
mutated_mod['func_7358'] = func_7358
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7374 = relay.var("var_7374", dtype = "float64", shape = (13, 8, 11))#candidate|7374|(13, 8, 11)|var|float64
uop_7375 = relay.sinh(var_7374.astype('float64')) # shape=(13, 8, 11)
func_5751_call = mod.get_global_var('func_5751')
func_5753_call = mutated_mod.get_global_var('func_5753')
call_7382 = relay.TupleGetItem(func_5751_call(), 0)
call_7383 = relay.TupleGetItem(func_5753_call(), 0)
func_6873_call = mod.get_global_var('func_6873')
func_6878_call = mutated_mod.get_global_var('func_6878')
const_7397 = relay.const([-10,9,-1,-4,6,2,-6,-7,7,6,-9,-1,7,9,1,7,-9,9,-5,-6,5,-3,9,5,6,-7,2,5,8,-5,-8,-2,-1,8,4,-7,4,-1,-9,-8,10,2,-5,-3,-1,-2,3,7,-5,-9,10,9,5,-4,-8,1,-10,-2,-10,-8,3,1,5,9,-2,10,-4,4,3,-2,-4,1,-6,9,-9,-6,-10,-10,4,7,-8,7,-8,-9,-3,-1,6,1,8,9,-8,10,3,-2,-9,-4,-6,7,4,-6,-9,-3,1,-8,-3,-6,3,10,-6,-2,1,-2,-8,4,6,-10,7,3,-7,-6,-7,3,8,7,-8,-1,-6,-8,3,-6,-10,-8,-10,-6,2,-9,-2,-1,8,6,-9,-4,9,7,4,5,-2,2,1,-10,9,2,-4,4,2,-5,-7,4,-1,-10,-6,10,5,1,9,1,-5,-9,-7,-10,-3,10,5,5,-6,-2,9,4,3,2,-9,10,-5,4,4,-2,2,-4,-7,5,-6,-8,9,9,-9,6,3,3,-8,1,-2,6,5,1,3,-5,-2,-1,7,7,-2,-6,-10,2,-6,10,6,-10,-10,-2,6,9,4,-3,2,9,-2,9,-3,-1,-6,9,-9,-2,1,-9,3,6,-9,-8,-6,9,1,-1,-10,7,5,7,-6,-10,-5,3,8,5,8,-2,-10,6,8,-8,-2,-4,1,-9,-4,-4,-10,7,8,-9,5,5,-2,-9,-8,9,-3,5,8,-1,-2,1,1,2,-10,-8,-2,-10,-1,5,7,-7,8,-2,-5,9,7,-9,-8,8,2,2,-6,-6,-3,-8,4,-9,-9,-1,6,-2,-1,-1,-4,6,-2,9,1,7,-8,-4,-2,7,8,6,9,6,10,9,-6,-1,-3,8,-10,10,2,10,-1,-5,-6,-2,8,-5,5,2,10,10,8,9,-5,-5,7,2,2,-4,6,-3,3,-3,-1,10,2,7,9,7,-7,2,-6,9,-2,8,10,-4,-1,-1,-6,6,-10,8,-8,-3,5,-8,-2,3,-1,-3,4,4,-8,10,6,2,8,5,-4,3,-6,2,-10,-1,8,4,5,9,-2,5,-6,4,-6,-4,-9,-10,7,-2,-9,-10,9,10,3,-7,-2,-3,-1,4,9,-8,4,3,1,8,10,-8,-3,3,10,1,4,10,-4,-3,-2,-1,-10,-8,2,3,-6,-3,9,-3,7,9,-7,-7,3,3,-10,4,1,-2,-7,-6,-6,-2,-6,4,-8,-7,1,-7,3,-2,2,-4,9,7,3,-9,-2,-3,-7,-4,-7,-9,4,-5,-5,9,-4,-2,10,-8,-3,-9,-9,5,-9,-10,-1,-7,4,1,8,9,-4,-4,8,-5,-9,6,-9,4,2,-4,-5,-8,-2,8,-9,-3,-8,5,-9,7,-7,7,-3,-1,7,8,6,-10,-2,-10,7,-4,-10,-1,9,6,10,-1,-4,-8,8,2,-1,-4,-1,6,8,1,8,5,-9,-7,-4,-1,-1,-1,6,-6,-6,-10,5,-2,-7,-10,-6,-4,8,1,-10,-2,3,1,-7,-4,7,9,-1,4,-6], dtype = "int8")#candidate|7397|(585,)|const|int8
const_7398 = relay.const([True,False,True,True,False,False,False,True], dtype = "bool")#candidate|7398|(8,)|const|bool
var_7399 = relay.var("var_7399", dtype = "float64", shape = (280,))#candidate|7399|(280,)|var|float64
call_7396 = relay.TupleGetItem(func_6873_call(relay.reshape(const_7397.astype('int8'), [13, 3, 15]), relay.reshape(const_7397.astype('int8'), [13, 3, 15]), relay.reshape(const_7398.astype('bool'), [8,]), relay.reshape(var_7399.astype('float64'), [280,]), ), 0)
call_7400 = relay.TupleGetItem(func_6878_call(relay.reshape(const_7397.astype('int8'), [13, 3, 15]), relay.reshape(const_7397.astype('int8'), [13, 3, 15]), relay.reshape(const_7398.astype('bool'), [8,]), relay.reshape(var_7399.astype('float64'), [280,]), ), 0)
bop_7403 = relay.less(var_7374.astype('bool'), relay.reshape(uop_7375.astype('bool'), relay.shape_of(var_7374))) # shape=(13, 8, 11)
func_5980_call = mod.get_global_var('func_5980')
func_5981_call = mutated_mod.get_global_var('func_5981')
call_7415 = relay.TupleGetItem(func_5980_call(), 3)
call_7416 = relay.TupleGetItem(func_5981_call(), 3)
func_6355_call = mod.get_global_var('func_6355')
func_6356_call = mutated_mod.get_global_var('func_6356')
call_7419 = relay.TupleGetItem(func_6355_call(), 0)
call_7420 = relay.TupleGetItem(func_6356_call(), 0)
output = relay.Tuple([call_7382,call_7396,const_7397,const_7398,var_7399,bop_7403,call_7415,call_7419,])
output2 = relay.Tuple([call_7383,call_7400,const_7397,const_7398,var_7399,bop_7403,call_7416,call_7420,])
func_7427 = relay.Function([var_7374,var_7399,], output)
mod['func_7427'] = func_7427
mod = relay.transform.InferType()(mod)
mutated_mod['func_7427'] = func_7427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7427_call = mutated_mod.get_global_var('func_7427')
var_7429 = relay.var("var_7429", dtype = "float64", shape = (13, 8, 11))#candidate|7429|(13, 8, 11)|var|float64
var_7430 = relay.var("var_7430", dtype = "float64", shape = (280,))#candidate|7430|(280,)|var|float64
call_7428 = func_7427_call(var_7429,var_7430,)
output = call_7428
func_7431 = relay.Function([var_7429,var_7430,], output)
mutated_mod['func_7431'] = func_7431
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7444 = relay.var("var_7444", dtype = "uint16", shape = (3, 4, 4))#candidate|7444|(3, 4, 4)|var|uint16
var_7445 = relay.var("var_7445", dtype = "uint16", shape = (3, 4, 4))#candidate|7445|(3, 4, 4)|var|uint16
bop_7446 = relay.bitwise_or(var_7444.astype('uint16'), relay.reshape(var_7445.astype('uint16'), relay.shape_of(var_7444))) # shape=(3, 4, 4)
func_4673_call = mod.get_global_var('func_4673')
func_4675_call = mutated_mod.get_global_var('func_4675')
var_7456 = relay.var("var_7456", dtype = "float32", shape = (770,))#candidate|7456|(770,)|var|float32
call_7455 = relay.TupleGetItem(func_4673_call(relay.reshape(var_7456.astype('float32'), [7, 110])), 5)
call_7457 = relay.TupleGetItem(func_4675_call(relay.reshape(var_7456.astype('float32'), [7, 110])), 5)
uop_7459 = relay.asinh(var_7444.astype('float64')) # shape=(3, 4, 4)
output = relay.Tuple([bop_7446,call_7455,var_7456,uop_7459,])
output2 = relay.Tuple([bop_7446,call_7457,var_7456,uop_7459,])
func_7461 = relay.Function([var_7444,var_7445,var_7456,], output)
mod['func_7461'] = func_7461
mod = relay.transform.InferType()(mod)
var_7462 = relay.var("var_7462", dtype = "uint16", shape = (3, 4, 4))#candidate|7462|(3, 4, 4)|var|uint16
var_7463 = relay.var("var_7463", dtype = "uint16", shape = (3, 4, 4))#candidate|7463|(3, 4, 4)|var|uint16
var_7464 = relay.var("var_7464", dtype = "float32", shape = (770,))#candidate|7464|(770,)|var|float32
output = func_7461(var_7462,var_7463,var_7464,)
func_7465 = relay.Function([var_7462,var_7463,var_7464,], output)
mutated_mod['func_7465'] = func_7465
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7531 = relay.var("var_7531", dtype = "int8", shape = (13, 9, 11))#candidate|7531|(13, 9, 11)|var|int8
var_7532 = relay.var("var_7532", dtype = "int8", shape = (13, 9, 11))#candidate|7532|(13, 9, 11)|var|int8
bop_7533 = relay.bitwise_or(var_7531.astype('int8'), relay.reshape(var_7532.astype('int8'), relay.shape_of(var_7531))) # shape=(13, 9, 11)
func_6058_call = mod.get_global_var('func_6058')
func_6059_call = mutated_mod.get_global_var('func_6059')
call_7536 = func_6058_call()
call_7537 = func_6058_call()
const_7541 = relay.const([[[-9,5,2,5,9,-8,1,-7,-6,-7,5],[4,-6,2,-1,1,7,4,-10,-9,-2,-4],[-2,-4,-4,-1,-7,-10,8,-4,-4,10,1],[-1,10,1,-8,5,-8,8,-9,8,4,1],[-9,10,10,-7,2,3,7,-6,-1,-6,-9],[10,5,-6,-5,10,9,-9,10,1,3,7],[-10,-4,-5,9,-7,4,6,-3,-4,-6,5],[-4,-1,-8,-1,-4,-10,-3,1,9,-10,1],[10,10,5,8,3,-4,1,9,-8,2,-3]],[[3,6,3,-4,5,-6,-9,-10,2,1,10],[-9,3,-3,-7,1,-2,1,-4,-10,8,-5],[-9,-4,-10,9,8,-8,7,-7,10,6,6],[7,-2,-10,-3,7,-1,2,-7,-1,9,7],[5,-2,-1,-6,8,6,2,-4,10,6,-4],[5,1,8,7,8,7,-8,-2,5,10,2],[9,9,-7,3,5,-3,-3,-8,6,4,-8],[4,-7,-2,2,10,-9,-1,6,-8,-1,7],[3,6,-3,-3,-3,3,-7,8,8,-3,9]],[[-3,-9,5,-5,-3,10,-8,-10,-6,-9,4],[1,-7,3,5,-5,6,1,-3,-8,5,-6],[2,5,10,6,-9,-7,7,-8,2,3,7],[-3,-10,-7,-10,-7,10,2,-5,-3,7,-3],[-9,-1,4,9,9,2,-3,-4,1,-5,3],[-2,-6,-5,4,-9,10,-4,-3,-8,6,-2],[6,-2,-9,-9,-4,5,5,-3,7,-3,-4],[-3,-1,1,-8,6,1,4,-5,-6,-3,9],[8,-8,7,-4,-10,10,-8,3,-6,-4,9]],[[8,-1,4,-3,2,6,10,3,4,3,-9],[7,-8,2,-7,-10,-4,-9,-2,3,8,6],[-3,-2,-6,-3,5,-8,-2,-5,-1,5,-5],[-8,-9,-3,-10,-2,9,2,-8,-4,-6,8],[-5,6,-9,5,-3,10,-2,8,-1,-7,-4],[-10,3,-5,-6,-6,5,9,10,5,5,-7],[8,10,-6,10,5,2,3,6,10,2,-3],[1,-3,7,2,6,9,-9,-1,5,-10,4],[4,-5,-4,-2,-6,-10,-9,-8,3,3,7]],[[7,3,-6,8,-8,-1,-7,-2,4,1,-8],[3,1,7,9,8,-4,7,5,9,10,-10],[7,-5,9,-6,-6,10,-4,3,-1,-9,-1],[-2,-4,2,10,-10,-2,-7,10,-6,2,-6],[-3,10,-8,-6,7,-5,-8,6,9,-7,2],[-3,-7,1,-5,8,3,-3,-6,2,-8,6],[-4,-5,8,-7,6,-3,9,4,10,-3,9],[6,4,9,-2,7,7,2,-4,4,-7,4],[-2,1,2,4,9,-9,5,6,-2,7,6]],[[5,-8,-1,7,-2,-8,8,8,-1,2,-1],[-7,8,9,1,7,-7,-6,-4,6,1,-9],[-5,-2,4,-8,5,-10,-7,8,-6,7,-2],[4,5,1,5,6,9,-6,-6,-7,-2,-1],[10,10,-6,9,-7,3,-2,-9,-6,-7,-6],[7,-9,-2,5,-9,-5,-9,5,1,1,-5],[10,-2,-2,-1,-1,-10,-5,3,-6,-5,3],[-3,3,10,8,9,-9,4,9,10,6,-2],[2,10,-8,-10,8,7,7,-7,3,3,-8]],[[-5,-4,9,-7,-10,-6,9,-5,7,2,7],[3,6,-2,8,-8,7,8,-2,6,-5,2],[8,-3,-1,9,6,-3,-8,1,-5,8,3],[-7,-2,6,-3,9,6,-4,-1,-6,-7,-1],[-4,-10,1,2,-4,8,-9,-1,-3,-4,6],[-5,-5,6,-9,-4,7,-3,-1,-4,-3,-3],[9,5,-6,-8,-10,-9,-3,6,2,-5,3],[-1,5,9,10,-10,-6,10,5,6,2,-2],[-2,8,-6,3,3,4,-9,-5,7,-9,-2]],[[6,-8,5,-10,8,-5,6,-9,3,-2,1],[-1,2,4,2,-2,-5,1,-4,-9,2,7],[7,4,-10,-6,10,7,-9,7,9,10,-2],[4,-1,-6,-6,9,-9,-3,1,-9,-9,7],[7,9,-3,-10,9,9,-6,1,8,-5,-4],[5,8,-10,-8,6,9,3,-4,7,6,5],[10,6,-7,4,-9,-9,-3,-5,6,-10,7],[-8,-8,-8,10,-8,9,-10,-7,8,-5,3],[7,-9,-9,7,2,-1,-10,-5,-2,3,-9]],[[8,9,-9,4,-2,-10,-4,-2,7,6,-4],[-8,-9,6,-10,6,10,-5,-2,3,-1,-7],[-3,8,4,-1,2,-9,-8,2,-9,-7,4],[8,-4,-1,5,2,8,-2,-3,3,10,6],[-7,9,9,-5,-9,-10,-5,8,1,-7,-9],[5,2,9,10,-4,-6,-2,-9,7,-1,1],[-9,5,-8,-3,3,-2,6,9,-9,-2,3],[1,3,10,-6,-10,-9,-9,9,-5,-9,-7],[10,-8,8,5,6,-3,-5,-4,3,10,-1]],[[8,-10,-2,10,2,5,9,4,5,4,-10],[3,2,10,-8,10,10,-1,-8,10,-10,-4],[8,-7,-5,-5,9,-8,5,-4,10,-3,3],[3,-4,3,-9,5,2,-4,-4,-3,8,6],[1,10,-6,-2,-4,2,7,2,-2,-5,2],[5,-10,-8,2,-2,4,4,5,-8,-10,-7],[-8,7,9,-6,3,6,2,10,8,8,-5],[3,-10,-7,3,-1,4,-1,-10,-3,-10,6],[10,9,9,-3,2,2,-7,4,4,9,3]],[[-10,-8,-8,9,4,10,-9,-1,-1,8,-6],[-4,-3,8,-4,-3,-6,7,-1,7,-6,-9],[6,-9,2,10,-10,-8,3,-8,-9,-3,-4],[-8,-5,-10,-2,7,-6,2,-4,6,9,1],[-2,-10,10,3,-4,-8,-5,-1,7,4,-4],[3,-1,4,-5,-3,-3,-5,8,6,-10,-2],[-5,4,1,-7,-4,-5,-9,6,-5,10,-6],[1,-4,6,3,3,-1,10,-4,-10,-7,-5],[5,2,-2,8,-7,2,7,-9,5,10,6]],[[-9,9,9,6,2,-5,1,-7,7,-9,-7],[-8,9,-8,-1,-1,7,2,5,9,-9,-2],[-6,-1,-4,2,9,10,3,-8,-2,-7,-6],[6,8,1,-2,8,-3,-10,3,10,4,-1],[8,3,8,-1,-10,-8,-2,4,1,3,4],[2,-9,-1,-2,10,-2,2,-3,-4,1,1],[-10,-9,-10,-6,-10,-2,-1,-2,5,-5,-4],[-7,-3,2,-3,-7,-8,4,1,-2,8,-9],[-9,4,-2,-3,7,3,-8,-3,-8,6,9]],[[3,9,10,-3,6,10,8,-8,-8,8,6],[6,1,-2,-9,-4,-8,10,-2,-10,5,-8],[-4,3,-3,3,10,-1,-3,-5,-1,-7,-4],[10,9,4,-10,10,-1,5,-5,5,10,-6],[8,-7,4,1,-10,6,1,-5,2,-4,-8],[9,9,-1,-2,2,-2,-1,3,-4,3,4],[10,4,5,-7,10,10,-9,-8,2,1,1],[8,-3,6,-2,9,-10,-4,-4,-1,6,-2],[4,6,-4,-10,10,-8,2,-1,6,4,5]]], dtype = "int8")#candidate|7541|(13, 9, 11)|const|int8
bop_7542 = relay.left_shift(var_7531.astype('uint8'), relay.reshape(const_7541.astype('uint8'), relay.shape_of(var_7531))) # shape=(13, 9, 11)
uop_7561 = relay.tan(bop_7533.astype('float64')) # shape=(13, 9, 11)
output = relay.Tuple([call_7536,bop_7542,uop_7561,])
output2 = relay.Tuple([call_7537,bop_7542,uop_7561,])
func_7564 = relay.Function([var_7531,var_7532,], output)
mod['func_7564'] = func_7564
mod = relay.transform.InferType()(mod)
var_7565 = relay.var("var_7565", dtype = "int8", shape = (13, 9, 11))#candidate|7565|(13, 9, 11)|var|int8
var_7566 = relay.var("var_7566", dtype = "int8", shape = (13, 9, 11))#candidate|7566|(13, 9, 11)|var|int8
output = func_7564(var_7565,var_7566,)
func_7567 = relay.Function([var_7565,var_7566,], output)
mutated_mod['func_7567'] = func_7567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5588_call = mod.get_global_var('func_5588')
func_5590_call = mutated_mod.get_global_var('func_5590')
call_7585 = relay.TupleGetItem(func_5588_call(), 0)
call_7586 = relay.TupleGetItem(func_5590_call(), 0)
func_4209_call = mod.get_global_var('func_4209')
func_4212_call = mutated_mod.get_global_var('func_4212')
const_7639 = relay.const([-1,-9,5,-7,-4,7,-8,6,7,-2,3,1,-8,-1,-10,-5,5,7,9,9,9,-1,-6,-9,-4,-9,2,2,10,8,-10,-1,10,6,-2,-3,10,7,8,8,-8,-3,-6,-8,-6,8,-1,2,-7,-1,5,9,7,-1,6,8,-6,-2,-6,3,-9,10,10,-1,2,7,7,1,5,-10,-3,5,-1,-4,-7,1,-7,-6,-2,-5,1,2,-9,-4,6,3,4,1,-5,2,-1,10,3,7,2,-10,4,-3,-6,5,-10,-1,8,-10,6,-7,-5,7,2,5,-5,-7,8,2,-6,6,-7,10,9,-10,-4,-4,-3,-8,6,-9,8,-10,5,-10,8,10,-1,1,-2,4,8,-4,-10,8,-6,7,-2,-2,-8,1,-6,-1,1,6,-3,-7,10,-5,-6,6,-9,-7,9,-9,10,3,9,3,-6,-3,-3,3,4,4,1,9,3,1,5,-7,8,-3,3,-8,8,7,2,5,-8,-5,8,-6,-1,-3,7,-3,9,3,-3,1,4,1,10,3,6,4,1,-5,9,9,9,10,-8,-1,5,2,-2,7,-10,7,-8,10,-4,-10,-4,-6,10,10,-8,9,-3,-5,6,4,-4,-2,5,-10,6,10,10,2,2,10,-2,-7,1,-9,-6,3,-7,2,6,1,-3,-3,-8,5,-8,2,-5,9,3,-3,3,8,-2,4,-4,1,7,-2,-2,7,-3,1,7,4,-8,-8,-4,2,1,-5,10,-4,-3,-4,-5,-4,-9,6,5,-6,4,5,-4,-5,3,-2,7,2,4,2,6,-8,1,10,2,10,-4,6,-9,5,-1,7,-10,-8,6,4,6,-6,5,-4,4,7,-8,-5,5,1,4,-6,6,9,-3,-3,-6,-9,-4,10,-8,3,-9,5,8,-2,3,-9,1,2,-2,7,3,-6,1,-3,2,-7,4,-5,-7,7,4,-2,3,-8,-8,-10,1,7,4,10,-8,7,10,-6,-10,8,8,-6,3,-3,-1,3,-1,-5,-2,2,-4,4,2,1,-3,-5,-9,2,-7,5,10,-1,10,-7,-10,2,10,8,-6,-4,-7,1,-2,-2,-10,8,-6,-2,-4,9,-7,-8,7,-9,-4,-3], dtype = "int64")#candidate|7639|(420,)|const|int64
const_7640 = relay.const([False,True,False,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,True,False], dtype = "bool")#candidate|7640|(30,)|const|bool
call_7638 = relay.TupleGetItem(func_4209_call(relay.reshape(const_7639.astype('int64'), [420,]), relay.reshape(const_7640.astype('bool'), [30,]), ), 2)
call_7641 = relay.TupleGetItem(func_4212_call(relay.reshape(const_7639.astype('int64'), [420,]), relay.reshape(const_7640.astype('bool'), [30,]), ), 2)
func_7187_call = mod.get_global_var('func_7187')
func_7191_call = mutated_mod.get_global_var('func_7191')
var_7658 = relay.var("var_7658", dtype = "int8", shape = (585,))#candidate|7658|(585,)|var|int8
const_7659 = relay.const([-5.492285,0.350910,-8.493336,-0.406666,-5.766026,-2.325989,-9.727683,0.118356,6.135989,-1.210195,-9.793229,-0.979425,3.398517,8.398075,-7.266902,-7.095415,3.291860,1.873413,1.376219,6.940068,0.503523,-5.139080,-4.548202,-0.389511,-7.256994,5.217951,-4.201657,0.085899,3.853187,8.219794,6.468531,-8.806612,4.691239,0.250333,9.034499,-2.932844,-3.678526,-6.650530,8.666950,-6.730382,5.020129,-8.796496,2.297140,2.056849,-0.591423,0.628446,-9.757229,-1.586210,9.398359,-1.620157,8.037661,3.280748,-0.274605,-2.152040,-4.281061,9.021260,9.362518,0.536514,-2.493634,1.895019,8.756468,-6.510986,-5.354566,-1.901653,-1.375328,6.738341,0.801040,4.791902,-5.914119,7.604158,6.714720,0.607523,-5.617733,2.987392,1.721817,-1.956282,5.875487,8.987764,5.715152,0.549392,-6.629280,0.104236,3.813832,5.571078,9.352137,-9.037160,-7.888429,6.023234,2.805968,8.842109,3.412159,7.538596,-0.009209,-9.847843,-6.660996,-4.528463,-3.625212,8.166907,-0.559539,-0.988678,9.602936,-6.855773,-1.157478,1.560081,7.526911,-7.769949,-4.203139,0.348291,-1.955613,-8.291311,-6.285168,-1.112069,6.819258,-3.553153,-1.138953,3.717330,-8.376474,6.693194,6.452444,-8.210244,2.752319,8.667525,-1.412591,8.799571,-8.975483,-3.849993,-2.336625,-2.241666,-3.976189,4.042330,8.772839,-1.286433,3.206681,-3.657210,-3.790274,4.771966,7.543992,7.736466,2.195172,5.745037,3.357637,-8.222421,-0.155512,8.651290,-7.556953,8.552585,2.005301,6.249517,-2.152117,7.537267,-4.816068,-9.385994,3.628492,9.382896,-1.606610,-3.248593,-6.289495,9.331413,4.970356,8.004711,-6.991212,1.761035,3.630596,-0.467161,-0.342247,-5.686907,-1.008565,9.354525,9.755484,-7.466506,2.848770,0.812749,-1.648378,-2.654765,9.880254,5.999511,-3.562860,0.306857,4.953439,0.711819,5.015004,-9.854903,0.797645,6.709566,-6.258410,-6.176579,-8.137124,-3.646389,6.885852,1.839196,-0.949964,-9.661903,2.504647,-4.839827,4.609717,5.682718,-8.938651,-3.947014,7.873870,-0.171468,4.432796,5.959019,-9.625520,-4.249604,-9.545186,-0.543539,-4.643702,4.722569,-1.240891,-0.028576,-2.810620,-3.672789,3.953057,-6.227032,-0.719114,2.499399,6.892727,4.915930,-0.134670,8.718338,8.543126,3.066199,-2.393565,-3.163931,1.454223,-5.878092,-2.050924,-9.169231,2.716452,-0.411993,3.949933,-2.247375,-7.743431,-7.231027,4.233284,3.028426,1.378713,1.909140,3.546314,-9.827723,-6.790748,-7.195231,4.272316,2.343634,2.462330,-7.747026,2.884754,-9.155461,-3.658851,-4.255246,-2.898392,4.708981,-8.170968,-0.704110,-7.245002,-8.269201,2.603868,5.152462,0.113439,-0.796763,-8.365779,4.393602,6.973023,1.821585,-1.968732,5.384062,8.362134,-1.588760,7.809556,7.113170,5.041573,1.028580,0.461658,5.352051,5.818662,8.262707,-6.668623,1.102072,-4.947189,-7.803775], dtype = "float64")#candidate|7659|(280,)|const|float64
call_7657 = relay.TupleGetItem(func_7187_call(relay.reshape(var_7658.astype('int8'), [585,]), relay.reshape(const_7659.astype('float64'), [140, 2]), ), 0)
call_7660 = relay.TupleGetItem(func_7191_call(relay.reshape(var_7658.astype('int8'), [585,]), relay.reshape(const_7659.astype('float64'), [140, 2]), ), 0)
func_5687_call = mod.get_global_var('func_5687')
func_5690_call = mutated_mod.get_global_var('func_5690')
call_7664 = relay.TupleGetItem(func_5687_call(relay.reshape(const_7639.astype('uint32'), [420, 1])), 1)
call_7665 = relay.TupleGetItem(func_5690_call(relay.reshape(const_7639.astype('uint32'), [420, 1])), 1)
func_5588_call = mod.get_global_var('func_5588')
func_5590_call = mutated_mod.get_global_var('func_5590')
call_7681 = relay.TupleGetItem(func_5588_call(), 0)
call_7682 = relay.TupleGetItem(func_5590_call(), 0)
output = relay.Tuple([call_7585,call_7638,const_7639,const_7640,call_7657,var_7658,const_7659,call_7664,call_7681,])
output2 = relay.Tuple([call_7586,call_7641,const_7639,const_7640,call_7660,var_7658,const_7659,call_7665,call_7682,])
func_7693 = relay.Function([var_7658,], output)
mod['func_7693'] = func_7693
mod = relay.transform.InferType()(mod)
var_7694 = relay.var("var_7694", dtype = "int8", shape = (585,))#candidate|7694|(585,)|var|int8
output = func_7693(var_7694)
func_7695 = relay.Function([var_7694], output)
mutated_mod['func_7695'] = func_7695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_7697 = func_3423_call()
call_7698 = func_3423_call()
output = relay.Tuple([call_7697,])
output2 = relay.Tuple([call_7698,])
func_7702 = relay.Function([], output)
mod['func_7702'] = func_7702
mod = relay.transform.InferType()(mod)
mutated_mod['func_7702'] = func_7702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7702_call = mutated_mod.get_global_var('func_7702')
call_7703 = func_7702_call()
output = call_7703
func_7704 = relay.Function([], output)
mutated_mod['func_7704'] = func_7704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7702_call = mod.get_global_var('func_7702')
func_7704_call = mutated_mod.get_global_var('func_7704')
call_7713 = relay.TupleGetItem(func_7702_call(), 0)
call_7714 = relay.TupleGetItem(func_7704_call(), 0)
func_4994_call = mod.get_global_var('func_4994')
func_4998_call = mutated_mod.get_global_var('func_4998')
const_7718 = relay.const([4,4,-6,2,-1,5,-8,-8,-8,-9,-4,8,6,-8,-10,5,-5,-4,9,1,2,2,5,-7], dtype = "int16")#candidate|7718|(24,)|const|int16
var_7719 = relay.var("var_7719", dtype = "float32", shape = (504,))#candidate|7719|(504,)|var|float32
call_7717 = relay.TupleGetItem(func_4994_call(relay.reshape(const_7718.astype('int16'), [24,]), relay.reshape(var_7719.astype('float32'), [504,]), ), 4)
call_7720 = relay.TupleGetItem(func_4998_call(relay.reshape(const_7718.astype('int16'), [24,]), relay.reshape(var_7719.astype('float32'), [504,]), ), 4)
output = relay.Tuple([call_7713,call_7717,const_7718,var_7719,])
output2 = relay.Tuple([call_7714,call_7720,const_7718,var_7719,])
func_7733 = relay.Function([var_7719,], output)
mod['func_7733'] = func_7733
mod = relay.transform.InferType()(mod)
var_7734 = relay.var("var_7734", dtype = "float32", shape = (504,))#candidate|7734|(504,)|var|float32
output = func_7733(var_7734)
func_7735 = relay.Function([var_7734], output)
mutated_mod['func_7735'] = func_7735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_7743 = func_3423_call()
call_7744 = func_3423_call()
output = relay.Tuple([call_7743,])
output2 = relay.Tuple([call_7744,])
func_7747 = relay.Function([], output)
mod['func_7747'] = func_7747
mod = relay.transform.InferType()(mod)
output = func_7747()
func_7748 = relay.Function([], output)
mutated_mod['func_7748'] = func_7748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mod.get_global_var('func_3757')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_7802 = relay.TupleGetItem(func_3757_call(), 0)
call_7803 = relay.TupleGetItem(func_3759_call(), 0)
func_6873_call = mod.get_global_var('func_6873')
func_6878_call = mutated_mod.get_global_var('func_6878')
const_7808 = relay.const([[7],[10],[-6],[1],[9],[10],[4],[-9],[10],[-5],[-2],[4],[3],[10],[3],[-3],[1],[10],[-8],[-1],[-6],[-4],[-8],[-1],[4],[-3],[-2],[-8],[2],[2],[4],[-4],[1],[-4],[-4],[-7],[6],[1],[6],[-2],[-7],[-7],[-2],[3],[3],[-9],[-3],[3],[6],[-4],[-2],[1],[4],[-2],[5],[1],[9],[-10],[-2],[-6],[8],[-1],[-8],[-8],[2],[7],[5],[-6],[1],[1],[3],[9],[-9],[4],[-3],[8],[4],[4],[-6],[6],[-4],[-3],[-10],[-10],[-6],[8],[-3],[3],[7],[-7],[8],[2],[7],[-3],[8],[-10],[-2],[-3],[-4],[3],[6],[-1],[-10],[4],[2],[6],[7],[9],[3],[6],[1],[4],[-2],[6],[-4],[8],[-2],[-10],[3],[-10],[5],[2],[-3],[5],[-7],[7],[-10],[-3],[-10],[10],[10],[1],[-5],[4],[4],[3],[-1],[1],[-10],[-10],[-1],[4],[8],[6],[6],[9],[2],[-8],[2],[6],[-8],[-7],[-8],[3],[-7],[4],[9],[-1],[-5],[4],[-3],[-7],[-4],[3],[-1],[-4],[-10],[9],[9],[5],[-6],[6],[-6],[4],[-6],[-5],[3],[5],[9],[3],[-6],[10],[-8],[-5],[3],[-5],[-6],[-6],[-9],[-6],[-1],[5],[4],[-1],[-7],[4],[3],[-1],[-3],[8],[-4],[-4],[-5],[7],[-3],[1],[3],[-7],[-6],[-2],[5],[6],[10],[-7],[-4],[10],[7],[10],[-4],[-5],[9],[10],[2],[1],[-8],[-10],[-10],[10],[-2],[4],[1],[5],[8],[9],[-4],[1],[-2],[7],[10],[1],[4],[-2],[-8],[6],[-9],[-7],[4],[10],[7],[6],[-6],[5],[9],[2],[-4],[9],[6],[2],[-2],[-5],[9],[-1],[2],[-5],[-3],[-10],[-7],[6],[1],[-5],[-3],[-2],[-6],[5],[5],[8],[2],[8],[-3],[4],[-3],[4],[1],[8],[-10],[-6],[-9],[-3],[7],[4],[-10],[7],[-4],[-7],[-8],[-4],[9],[-5],[-7],[-4],[-7],[-1],[-3],[3],[6],[1],[10],[9],[2],[2],[9],[3],[3],[10],[-8],[-7],[5],[3],[-4],[-7],[4],[6],[7],[-9],[-3],[1],[6],[-2],[9],[-8],[-6],[-3],[-5],[-10],[-5],[-9],[6],[-6],[-3],[4],[-5],[-8],[6],[-7],[-3],[3],[10],[-2],[-6],[-5],[-1],[1],[-2],[-2],[1],[10],[10],[6],[-1],[-2],[-10],[4],[3],[-6],[-8],[2],[-5],[-7],[-2],[-3],[7],[-9],[-5],[-5],[-10],[9],[-4],[-1],[-10],[-7],[-5],[-8],[-2],[9],[-5],[4],[-8],[-9],[2],[7],[10],[3],[2],[-10],[8],[-9],[-6],[5],[-5],[9],[9],[-2],[-10],[9],[-6],[3],[4],[-10],[7],[-7],[9],[10],[-6],[-3],[-1],[10],[8],[8],[6],[8],[-4],[8],[7],[4],[-7],[-1],[-10],[2],[-7],[-8],[-7],[-10],[-2],[-3],[-6],[10],[3],[7],[5],[-8],[-4],[-1],[-3],[2],[-9],[-10],[-9],[-3],[1],[-1],[8],[4],[-1],[-5],[-2],[-1],[3],[3],[-6],[-6],[3],[3],[-8],[-3],[4],[-3],[-7],[-6],[-8],[5],[4],[-6],[-9],[-3],[-4],[-1],[-4],[-9],[3],[-1],[-5],[-9],[-1],[-1],[6],[1],[-3],[6],[-8],[6],[-9],[8],[-1],[8],[-8],[3],[3],[-8],[-7],[-5],[6],[-2],[3],[-10],[7],[2],[4],[1],[-5],[-1],[8],[-6],[6],[-5],[-2],[5],[-6],[-8],[4],[-9],[-5],[9],[1],[5],[9],[-8],[-10],[7],[-8],[-10],[-3],[-8],[-1],[-8],[-6],[8],[-8],[-9],[8],[-4],[9],[-5],[-6],[-6],[5],[3],[-10],[-6],[9],[6],[3],[-7],[4],[9],[-9],[1],[4],[-9],[-8],[-3],[1],[-2],[-10],[2],[4],[-7],[3],[-7],[7],[8],[-8],[-5],[5],[-3],[1],[8],[3],[-2],[8],[-4],[-3],[9],[-4],[-2],[-2]], dtype = "int8")#candidate|7808|(585, 1)|const|int8
var_7809 = relay.var("var_7809", dtype = "bool", shape = (8,))#candidate|7809|(8,)|var|bool
const_7810 = relay.const([6.250234,6.678458,8.581846,5.506251,6.625855,4.539516,-0.762726,6.486965,8.501684,-5.596553,5.590766,-3.040929,-0.947513,0.890632,-5.719542,7.733214,-4.115070,2.667931,4.842164,-3.014073,9.931822,-6.738255,-7.387195,-9.678129,-2.385526,2.808349,-9.869655,6.245858,5.271315,-6.536240,7.572663,-4.621530,-6.297221,0.656030,-2.230055,3.440344,8.954457,6.588784,2.686652,2.366028,-3.837195,2.570753,-3.855499,1.012558,-2.972736,8.700698,0.111511,6.088767,-0.735984,-7.696585,-8.868258,-2.270863,2.400465,0.557368,6.222316,-8.076384,2.788807,-5.472367,-7.093268,-7.059769,6.847651,-4.945251,7.631316,3.451942,-9.300190,-3.653974,4.514089,-1.801769,-0.920962,8.869138,-7.503962,1.951666,-2.952133,-4.204914,-4.403910,9.172734,-4.252009,-4.117574,9.334620,5.101091,9.252215,-0.463952,-8.026455,-5.161756,7.378337,4.643931,6.516661,7.317284,-9.451994,3.063802,-6.257924,4.684287,-3.840337,-0.681724,9.972893,-3.481231,2.259105,6.004636,8.620625,-9.504431,5.599116,4.297253,2.613927,-4.272422,-5.871504,-7.144342,-7.408737,0.879608,4.883985,-7.867301,-2.597275,-4.073415,-5.763021,2.657010,8.396018,-1.753864,2.288156,3.821343,-8.311396,8.092101,7.616022,-6.807857,0.080590,1.345850,7.124764,6.210830,-1.634435,-5.467116,7.358094,-7.203203,7.786523,8.863345,-8.238932,3.285653,8.300272,9.264901,-7.220764,-8.923871,-7.747337,9.521709,-7.670971,1.690142,-8.531756,3.798538,0.497266,-8.618598,-9.149279,-1.535357,-1.345484,4.496516,-9.041760,5.301893,-6.649499,-3.412510,1.615925,0.851420,-2.180601,-3.219782,-1.586259,-5.006834,0.126538,-6.953328,-4.787688,0.385053,9.064510,-6.092364,5.609319,-1.694535,-6.377628,-7.910104,-6.205015,7.648886,-6.180358,8.020048,9.311018,9.946065,-3.383481,-2.764042,-2.550313,-6.691240,-0.038290,2.435091,-9.508816,-7.898020,-3.119548,-7.662432,-0.824923,7.176552,5.559153,4.785106,-9.920553,1.141039,-2.955590,6.747824,4.245276,-3.069627,4.913547,-3.213280,-2.099300,-6.582631,2.125536,3.613123,-5.050722,3.332277,-5.201078,-0.889475,6.300584,6.953022,3.991346,-8.144995,-7.980405,-4.698425,-8.377050,8.235710,5.903494,8.340915,-1.516993,-6.140173,5.861323,-1.977373,-5.426271,-7.262338,7.927601,-4.091810,-8.716831,0.236616,2.449704,-0.143508,-4.149687,-9.012447,0.186549,4.303669,4.999247,-2.161880,1.110949,-2.659446,2.279622,4.142830,-8.179839,7.466869,-4.785681,-4.304082,1.744473,0.133079,-3.399408,6.855805,6.190510,-8.278739,9.246426,0.866188,6.325771,-5.077854,-3.356816,3.376217,9.812730,0.596266,-7.597202,-6.455645,6.510910,9.541515,7.313205,3.372883,5.718066,9.763246,0.576260,3.458040,-1.779311,3.375219,0.510110,-4.711136,-5.586326,-7.447443,7.753214,-4.704213,-5.294116,-8.535008,-6.623567,-6.620380,2.723325,-7.902602], dtype = "float64")#candidate|7810|(280,)|const|float64
call_7807 = relay.TupleGetItem(func_6873_call(relay.reshape(const_7808.astype('int8'), [13, 3, 15]), relay.reshape(const_7808.astype('int8'), [13, 3, 15]), relay.reshape(var_7809.astype('bool'), [8,]), relay.reshape(const_7810.astype('float64'), [280,]), ), 1)
call_7811 = relay.TupleGetItem(func_6878_call(relay.reshape(const_7808.astype('int8'), [13, 3, 15]), relay.reshape(const_7808.astype('int8'), [13, 3, 15]), relay.reshape(var_7809.astype('bool'), [8,]), relay.reshape(const_7810.astype('float64'), [280,]), ), 1)
output = relay.Tuple([call_7802,call_7807,const_7808,var_7809,const_7810,])
output2 = relay.Tuple([call_7803,call_7811,const_7808,var_7809,const_7810,])
func_7819 = relay.Function([var_7809,], output)
mod['func_7819'] = func_7819
mod = relay.transform.InferType()(mod)
mutated_mod['func_7819'] = func_7819
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7820 = relay.var("var_7820", dtype = "bool", shape = (8,))#candidate|7820|(8,)|var|bool
func_7819_call = mutated_mod.get_global_var('func_7819')
call_7821 = func_7819_call(var_7820)
output = call_7821
func_7822 = relay.Function([var_7820], output)
mutated_mod['func_7822'] = func_7822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5665_call = mod.get_global_var('func_5665')
func_5666_call = mutated_mod.get_global_var('func_5666')
call_7875 = relay.TupleGetItem(func_5665_call(), 0)
call_7876 = relay.TupleGetItem(func_5666_call(), 0)
output = call_7875
output2 = call_7876
func_7883 = relay.Function([], output)
mod['func_7883'] = func_7883
mod = relay.transform.InferType()(mod)
mutated_mod['func_7883'] = func_7883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7883_call = mutated_mod.get_global_var('func_7883')
call_7884 = func_7883_call()
output = call_7884
func_7885 = relay.Function([], output)
mutated_mod['func_7885'] = func_7885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4576_call = mod.get_global_var('func_4576')
func_4577_call = mutated_mod.get_global_var('func_4577')
call_7906 = relay.TupleGetItem(func_4576_call(), 1)
call_7907 = relay.TupleGetItem(func_4577_call(), 1)
output = call_7906
output2 = call_7907
func_7908 = relay.Function([], output)
mod['func_7908'] = func_7908
mod = relay.transform.InferType()(mod)
output = func_7908()
func_7909 = relay.Function([], output)
mutated_mod['func_7909'] = func_7909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5139_call = mod.get_global_var('func_5139')
func_5140_call = mutated_mod.get_global_var('func_5140')
call_7932 = relay.TupleGetItem(func_5139_call(), 1)
call_7933 = relay.TupleGetItem(func_5140_call(), 1)
output = call_7932
output2 = call_7933
func_7934 = relay.Function([], output)
mod['func_7934'] = func_7934
mod = relay.transform.InferType()(mod)
output = func_7934()
func_7935 = relay.Function([], output)
mutated_mod['func_7935'] = func_7935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5588_call = mod.get_global_var('func_5588')
func_5590_call = mutated_mod.get_global_var('func_5590')
call_7942 = relay.TupleGetItem(func_5588_call(), 0)
call_7943 = relay.TupleGetItem(func_5590_call(), 0)
func_4576_call = mod.get_global_var('func_4576')
func_4577_call = mutated_mod.get_global_var('func_4577')
call_7946 = relay.TupleGetItem(func_4576_call(), 3)
call_7947 = relay.TupleGetItem(func_4577_call(), 3)
func_6153_call = mod.get_global_var('func_6153')
func_6155_call = mutated_mod.get_global_var('func_6155')
call_7950 = relay.TupleGetItem(func_6153_call(), 0)
call_7951 = relay.TupleGetItem(func_6155_call(), 0)
output = relay.Tuple([call_7942,call_7946,call_7950,])
output2 = relay.Tuple([call_7943,call_7947,call_7951,])
func_7971 = relay.Function([], output)
mod['func_7971'] = func_7971
mod = relay.transform.InferType()(mod)
output = func_7971()
func_7972 = relay.Function([], output)
mutated_mod['func_7972'] = func_7972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6404_call = mod.get_global_var('func_6404')
func_6405_call = mutated_mod.get_global_var('func_6405')
call_8042 = relay.TupleGetItem(func_6404_call(), 0)
call_8043 = relay.TupleGetItem(func_6405_call(), 0)
uop_8046 = relay.acos(call_8042.astype('float32')) # shape=(15, 2, 8)
uop_8048 = relay.acos(call_8043.astype('float32')) # shape=(15, 2, 8)
output = uop_8046
output2 = uop_8048
func_8052 = relay.Function([], output)
mod['func_8052'] = func_8052
mod = relay.transform.InferType()(mod)
output = func_8052()
func_8053 = relay.Function([], output)
mutated_mod['func_8053'] = func_8053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5665_call = mod.get_global_var('func_5665')
func_5666_call = mutated_mod.get_global_var('func_5666')
call_8054 = relay.TupleGetItem(func_5665_call(), 2)
call_8055 = relay.TupleGetItem(func_5666_call(), 2)
output = call_8054
output2 = call_8055
func_8058 = relay.Function([], output)
mod['func_8058'] = func_8058
mod = relay.transform.InferType()(mod)
mutated_mod['func_8058'] = func_8058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8058_call = mutated_mod.get_global_var('func_8058')
call_8059 = func_8058_call()
output = call_8059
func_8060 = relay.Function([], output)
mutated_mod['func_8060'] = func_8060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8058_call = mod.get_global_var('func_8058')
func_8060_call = mutated_mod.get_global_var('func_8060')
call_8111 = func_8058_call()
call_8112 = func_8058_call()
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
call_8117 = func_2525_call(relay.reshape(call_8111.astype('float32'), [7, 9, 8]))
call_8118 = func_2525_call(relay.reshape(call_8111.astype('float32'), [7, 9, 8]))
output = relay.Tuple([call_8111,call_8117,])
output2 = relay.Tuple([call_8112,call_8118,])
func_8137 = relay.Function([], output)
mod['func_8137'] = func_8137
mod = relay.transform.InferType()(mod)
output = func_8137()
func_8138 = relay.Function([], output)
mutated_mod['func_8138'] = func_8138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mod.get_global_var('func_5729')
func_5731_call = mutated_mod.get_global_var('func_5731')
call_8153 = func_5729_call()
call_8154 = func_5729_call()
output = relay.Tuple([call_8153,])
output2 = relay.Tuple([call_8154,])
func_8159 = relay.Function([], output)
mod['func_8159'] = func_8159
mod = relay.transform.InferType()(mod)
mutated_mod['func_8159'] = func_8159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8159_call = mutated_mod.get_global_var('func_8159')
call_8160 = func_8159_call()
output = call_8160
func_8161 = relay.Function([], output)
mutated_mod['func_8161'] = func_8161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3699_call = mod.get_global_var('func_3699')
func_3701_call = mutated_mod.get_global_var('func_3701')
call_8166 = func_3699_call()
call_8167 = func_3699_call()
func_2865_call = mod.get_global_var('func_2865')
func_2868_call = mutated_mod.get_global_var('func_2868')
const_8198 = relay.const([[4.959879,-4.524086],[-0.485337,2.750071],[3.031784,-8.031756]], dtype = "float32")#candidate|8198|(3, 2)|const|float32
const_8199 = relay.const([7,-3,10,-10,8,-4,-6,-2,10,-5,7,9,-6,-9,6,-8,-7,-2,1,-5,-3,-10,5,10,-3,2,-8,7,5,-8,-3,6,7,4,9,7,-8,4,8,-3,-7,-10,-5,9,-4,-3,-5,-6,6,-8,-9,8,3,-5,4,-1,-2,-7,9,-6,-3,1,-7,-8,-5,9,-3,-5,9,-9,-5,-5,3,-3,6,-7,-10,6,-3,2,3,6,-6,-4,9,7,4,-3,4,1,-5,10,7,5,-2,-2,6,-3,-6,-9,-2,3,10,5,1,-5,-4,-4,-3,-1,-5,2,-10,6,-3,5,1,3,5,7,-4,4,9,7,6,9,-2,5,-5,9,5,-5,-3,2,-6,2,1,-8,-4,4,-6,3,1,1,8,4,-6,-4,5,5,-2,3,-4,6,5,-2,-1,8,-5,-8,1,-8,8,5,7,7,8,-5,-1,4,10,-7,-1,5,-6,-10,-4,5,10,7,10,9,4,-4,-8,2,-4,-1,6,10,-8,10,-9,-5,-4,8,-4,4,4,4,-6,-10,-5,-5,8,2,8,-9,6,-7,4,-6,6,-8,-10,2,9,8,4,7,-1,-7,3,-9,10,9,5,4,-5,-4,7,3,-10,1,4,-8,-7,7,1,-8,2,-4,-3,8,1,5,10,3,8,-5,-2,-1,-8,-8,4,1,-3,5,-5,8,-9,-5,2,10,-4,4,8,6,6,6,-9,-10,-3,-10,1,4,10,8,9,-2,1,-10,5,-6,9,-3,-8,-1,-9,9,9,-10,7,1,-4,-9,-2,7,-5,8,-4,10,-5,6,2,-4,3,1,1,-3,6,-1,3,6,10,1,7,9,4,4,1,8,3,3,1,1,10,-8,2,4,-7,8,-8,-4,4,-2,-9,10,-10,-5,9,-10,8,5,-1,-1,-3,2,8,6,5,9,-8,5,-2,-3,-6,1,3,3,-4,-2,-5,-8,2,7,2,1,-6,2,-9,-10,-7,1,8,4,10,9,-2,-10,-3,-10,-4,-6,1,8,-2,7,1,1,-3,1,1,-9,-9,7,-6,6,10,-10,-10,3,9,3,-1,1,-9,7,4,-3,5,-4,9,-10,-2,1,1,7,-7,9], dtype = "uint32")#candidate|8199|(420,)|const|uint32
call_8197 = relay.TupleGetItem(func_2865_call(relay.reshape(const_8198.astype('float32'), [2, 3, 1]), relay.reshape(const_8199.astype('uint32'), [420,]), ), 0)
call_8200 = relay.TupleGetItem(func_2868_call(relay.reshape(const_8198.astype('float32'), [2, 3, 1]), relay.reshape(const_8199.astype('uint32'), [420,]), ), 0)
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
var_8207 = relay.var("var_8207", dtype = "float32", shape = (504,))#candidate|8207|(504,)|var|float32
call_8206 = func_2525_call(relay.reshape(var_8207.astype('float32'), [7, 9, 8]))
call_8208 = func_2525_call(relay.reshape(var_8207.astype('float32'), [7, 9, 8]))
output = relay.Tuple([call_8166,call_8197,const_8198,const_8199,call_8206,var_8207,])
output2 = relay.Tuple([call_8167,call_8200,const_8198,const_8199,call_8208,var_8207,])
func_8219 = relay.Function([var_8207,], output)
mod['func_8219'] = func_8219
mod = relay.transform.InferType()(mod)
var_8220 = relay.var("var_8220", dtype = "float32", shape = (504,))#candidate|8220|(504,)|var|float32
output = func_8219(var_8220)
func_8221 = relay.Function([var_8220], output)
mutated_mod['func_8221'] = func_8221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mod.get_global_var('func_5095')
func_5097_call = mutated_mod.get_global_var('func_5097')
call_8317 = relay.TupleGetItem(func_5095_call(), 1)
call_8318 = relay.TupleGetItem(func_5097_call(), 1)
func_2865_call = mod.get_global_var('func_2865')
func_2868_call = mutated_mod.get_global_var('func_2868')
const_8323 = relay.const([3.668737,-4.441750,6.323027,1.338005,6.545229,0.684852], dtype = "float32")#candidate|8323|(6,)|const|float32
call_8322 = relay.TupleGetItem(func_2865_call(relay.reshape(const_8323.astype('float32'), [2, 3, 1]), relay.reshape(call_8317.astype('uint32'), [420,]), ), 0)
call_8324 = relay.TupleGetItem(func_2868_call(relay.reshape(const_8323.astype('float32'), [2, 3, 1]), relay.reshape(call_8317.astype('uint32'), [420,]), ), 0)
output = relay.Tuple([call_8317,call_8322,const_8323,])
output2 = relay.Tuple([call_8318,call_8324,const_8323,])
func_8325 = relay.Function([], output)
mod['func_8325'] = func_8325
mod = relay.transform.InferType()(mod)
output = func_8325()
func_8326 = relay.Function([], output)
mutated_mod['func_8326'] = func_8326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6404_call = mod.get_global_var('func_6404')
func_6405_call = mutated_mod.get_global_var('func_6405')
call_8373 = relay.TupleGetItem(func_6404_call(), 2)
call_8374 = relay.TupleGetItem(func_6405_call(), 2)
output = relay.Tuple([call_8373,])
output2 = relay.Tuple([call_8374,])
func_8393 = relay.Function([], output)
mod['func_8393'] = func_8393
mod = relay.transform.InferType()(mod)
mutated_mod['func_8393'] = func_8393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8393_call = mutated_mod.get_global_var('func_8393')
call_8394 = func_8393_call()
output = call_8394
func_8395 = relay.Function([], output)
mutated_mod['func_8395'] = func_8395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mod.get_global_var('func_5095')
func_5097_call = mutated_mod.get_global_var('func_5097')
call_8424 = relay.TupleGetItem(func_5095_call(), 2)
call_8425 = relay.TupleGetItem(func_5097_call(), 2)
func_5930_call = mod.get_global_var('func_5930')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_8449 = relay.TupleGetItem(func_5930_call(), 0)
call_8450 = relay.TupleGetItem(func_5931_call(), 0)
output = relay.Tuple([call_8424,call_8449,])
output2 = relay.Tuple([call_8425,call_8450,])
func_8455 = relay.Function([], output)
mod['func_8455'] = func_8455
mod = relay.transform.InferType()(mod)
mutated_mod['func_8455'] = func_8455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8455_call = mutated_mod.get_global_var('func_8455')
call_8456 = func_8455_call()
output = call_8456
func_8457 = relay.Function([], output)
mutated_mod['func_8457'] = func_8457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5751_call = mod.get_global_var('func_5751')
func_5753_call = mutated_mod.get_global_var('func_5753')
call_8458 = relay.TupleGetItem(func_5751_call(), 0)
call_8459 = relay.TupleGetItem(func_5753_call(), 0)
func_7693_call = mod.get_global_var('func_7693')
func_7695_call = mutated_mod.get_global_var('func_7695')
const_8464 = relay.const([-7,6,-7,-2,8,10,-5,-10,3,-9,4,-5,4,8,-6,9,10,-5,-8,8,4,-9,-2,2,-3,-4,-2,5,6,-5,-6,10,-10,3,-3,-5,-8,-7,-5,8,1,-5,10,6,3,2,8,7,6,-7,2,-5,-8,3,-3,-1,2,5,8,-1,5,-2,5,2,-1,8,2,-6,-8,-4,-9,-5,-5,-6,-4,-3,10,5,-9,5,-5,-5,-8,7,-1,7,10,-2,2,7,5,-8,-7,8,-7,6,-6,9,4,-2,-1,-5,-10,-5,5,10,-3,-2,-9,-8,5,-10,-7,-7,-9,5,7,-10,-7,9,8,-1,-8,-1,5,-7,3,1,8,-10,6,-8,3,10,-4,3,10,3,9,7,3,-6,1,8,-7,8,-2,-8,4,-7,9,-10,-6,-7,9,8,-7,-10,-2,-2,7,-2,-8,-5,8,-3,-4,4,-8,-4,4,-8,-6,3,-7,9,-5,-4,-1,5,3,-6,1,-8,2,7,-3,9,5,1,7,7,-1,4,10,-3,9,9,-9,10,-8,-9,2,-4,2,-1,3,8,9,-8,-3,-1,8,2,-6,3,9,-6,-2,8,-4,-10,6,-3,-1,-3,1,9,-3,-1,3,-2,-5,-5,-9,-8,3,1,7,-6,4,5,3,-7,4,7,9,2,-8,-9,-10,-1,7,2,-6,2,-8,-7,2,-9,-9,6,6,2,-4,2,-9,7,-4,10,9,-2,-3,-10,-3,1,-5,-2,4,-6,8,-2,-2,-5,-10,-6,8,-6,7,6,-4,3,-4,2,-10,6,-6,-5,1,-5,-4,10,9,3,-3,-7,7,-8,-5,-1,-1,-1,7,-7,5,-9,-3,8,-6,-9,1,-10,7,1,10,-9,9,8,-7,2,7,8,10,-1,9,7,-9,2,7,-10,-5,8,8,-8,10,-6,3,6,-9,2,-8,-2,8,-5,-7,-1,-3,-4,4,-7,-6,-9,6,-2,2,-5,-5,-9,10,9,8,-10,7,-3,8,5,-4,2,-2,5,8,-8,8,7,1,5,-6,-2,9,-5,-7,10,7,-1,6,-4,-5,-9,-10,-1,2,2,-1,2,4,-8,8,-2,9,5,-9,-10,-9,-9,7,2,8,-9,2,2,1,-7,-7,5,4,3,-6,2,-4,-8,3,-10,6,3,-3,6,-4,-2,-3,6,6,5,-4,9,7,9,-7,-2,-2,-3,-9,-8,1,3,6,5,1,-6,-4,5,4,1,4,-6,-8,1,7,10,1,6,-3,1,-9,-8,-2,2,6,-7,7,-9,4,10,-1,-3,-4,-2,-8,-10,10,9,1,-9,-7,7,4,8,-8,-1,-1,-3,-3,-9,-8,9,-6,-3,2,-4,-2,2,9,-4,-8,-5,-1,-3,3,-7,-10,-10,-7,-3,-7,-9,-8,-5,-10,-3,7,-9,-8,5,4,-2,-10,-1,7,7,1,-3,6,-5,8,-7,9,1,10,-9,-10,9,3,-9,5,4,-10,6,-4,2,-10,5,7,-5,6,1,4,5,1,-10,8,4,-3,-3,1,9,4,-1,1,-8,-9,-2,9,4,1,-10,-8], dtype = "int8")#candidate|8464|(585,)|const|int8
call_8463 = relay.TupleGetItem(func_7693_call(relay.reshape(const_8464.astype('int8'), [585,])), 8)
call_8465 = relay.TupleGetItem(func_7695_call(relay.reshape(const_8464.astype('int8'), [585,])), 8)
output = relay.Tuple([call_8458,call_8463,const_8464,])
output2 = relay.Tuple([call_8459,call_8465,const_8464,])
func_8467 = relay.Function([], output)
mod['func_8467'] = func_8467
mod = relay.transform.InferType()(mod)
mutated_mod['func_8467'] = func_8467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8467_call = mutated_mod.get_global_var('func_8467')
call_8468 = func_8467_call()
output = call_8468
func_8469 = relay.Function([], output)
mutated_mod['func_8469'] = func_8469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8501 = relay.var("var_8501", dtype = "float32", shape = (8, 14, 4))#candidate|8501|(8, 14, 4)|var|float32
uop_8502 = relay.log10(var_8501.astype('float32')) # shape=(8, 14, 4)
func_2790_call = mod.get_global_var('func_2790')
func_2792_call = mutated_mod.get_global_var('func_2792')
var_8514 = relay.var("var_8514", dtype = "uint32", shape = (420,))#candidate|8514|(420,)|var|uint32
call_8513 = func_2790_call(relay.reshape(var_8514.astype('uint32'), [3, 14, 10]))
call_8515 = func_2790_call(relay.reshape(var_8514.astype('uint32'), [3, 14, 10]))
func_4231_call = mod.get_global_var('func_4231')
func_4234_call = mutated_mod.get_global_var('func_4234')
var_8529 = relay.var("var_8529", dtype = "float64", shape = ())#candidate|8529|()|var|float64
call_8528 = relay.TupleGetItem(func_4231_call(relay.reshape(var_8529.astype('float64'), [])), 0)
call_8530 = relay.TupleGetItem(func_4234_call(relay.reshape(var_8529.astype('float64'), [])), 0)
const_8541 = relay.const([[[-0.802642,5.202563,-3.116129,3.928880],[1.317979,-6.096955,-9.078286,0.670931],[-0.060077,-0.602835,1.764953,3.490378],[0.325863,7.604211,2.195842,8.404308],[2.363577,4.731247,6.369831,8.767705],[8.967444,6.537631,-1.663076,1.880781],[-6.261337,4.937750,5.521679,-3.707379],[-7.827286,-7.773613,1.007334,3.896910],[-4.758691,-9.719455,-7.087950,-5.889866]],[[9.390145,6.743679,-0.964884,-5.827931],[-4.413610,-3.997191,7.962468,-0.759484],[-1.721709,2.749927,9.026180,-1.563247],[0.691426,8.804710,-6.551563,-9.060472],[5.128382,5.001106,-8.439121,-5.699964],[-8.542322,-2.304114,-1.224285,5.627132],[3.101757,-2.494506,6.360745,-3.440219],[6.622948,-1.563592,5.276678,7.046617],[-6.405046,-9.254127,-1.520798,-1.177574]],[[5.071669,-5.154540,2.918645,-0.709973],[-9.647243,1.556794,9.899038,1.258658],[9.892975,-0.367366,-7.752277,9.204687],[6.952199,3.866400,4.403396,-9.112519],[9.540930,-8.133938,-0.296588,8.048738],[4.681020,-9.716385,3.768946,7.373154],[-7.377394,0.998031,6.096089,5.799398],[6.452676,-4.994104,-6.285454,2.838428],[-3.212256,7.412152,7.995814,5.415761]]], dtype = "float64")#candidate|8541|(3, 9, 4)|const|float64
bop_8542 = relay.bitwise_and(call_8528.astype('uint8'), relay.reshape(const_8541.astype('uint8'), relay.shape_of(call_8528))) # shape=(3, 9, 4)
bop_8545 = relay.bitwise_and(call_8530.astype('uint8'), relay.reshape(const_8541.astype('uint8'), relay.shape_of(call_8530))) # shape=(3, 9, 4)
func_6020_call = mod.get_global_var('func_6020')
func_6022_call = mutated_mod.get_global_var('func_6022')
const_8547 = relay.const([-5.361827,5.106284,6.558247,-9.504286,-7.134052,6.111092,5.798235,0.081486,0.073429,2.848913,-9.041913,0.531170,2.772273,4.640815,-0.003668,2.995216,-5.651573,-2.096771,1.127198,9.325118,-8.430860,-6.277091,4.463552,-5.764505,-1.478021,-1.980328,2.641950,5.847798,0.539710,0.535600,-1.225559,-1.032306,8.816729,-7.735705,-3.630724,-1.682909,-7.235199,-0.545008,-3.588621,3.279995,0.154542,1.535752,9.119325,6.767477,-4.136032,-7.579920,-4.087522,1.530029,3.356951,-1.651087,8.497295,2.441329,4.040493,-3.098087,-5.628231,-2.258319,2.367284,-3.923011,-0.734931,6.294199,-5.232606,-1.041486,-3.121968,-0.743940,1.123486,1.592433,0.612244,3.258522,7.825098,-7.228901,7.120227,3.512836,5.775066,8.987919,5.016013,-5.229624,1.309228], dtype = "float32")#candidate|8547|(77,)|const|float32
call_8546 = relay.TupleGetItem(func_6020_call(relay.reshape(const_8547.astype('float32'), [7, 11, 1])), 0)
call_8548 = relay.TupleGetItem(func_6022_call(relay.reshape(const_8547.astype('float32'), [7, 11, 1])), 0)
output = relay.Tuple([uop_8502,call_8513,var_8514,var_8529,bop_8542,call_8546,const_8547,])
output2 = relay.Tuple([uop_8502,call_8515,var_8514,var_8529,bop_8545,call_8548,const_8547,])
func_8549 = relay.Function([var_8501,var_8514,var_8529,], output)
mod['func_8549'] = func_8549
mod = relay.transform.InferType()(mod)
var_8550 = relay.var("var_8550", dtype = "float32", shape = (8, 14, 4))#candidate|8550|(8, 14, 4)|var|float32
var_8551 = relay.var("var_8551", dtype = "uint32", shape = (420,))#candidate|8551|(420,)|var|uint32
var_8552 = relay.var("var_8552", dtype = "float64", shape = ())#candidate|8552|()|var|float64
output = func_8549(var_8550,var_8551,var_8552,)
func_8553 = relay.Function([var_8550,var_8551,var_8552,], output)
mutated_mod['func_8553'] = func_8553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7908_call = mod.get_global_var('func_7908')
func_7909_call = mutated_mod.get_global_var('func_7909')
call_8560 = func_7908_call()
call_8561 = func_7908_call()
func_7128_call = mod.get_global_var('func_7128')
func_7130_call = mutated_mod.get_global_var('func_7130')
const_8603 = relay.const([[-8.465701,-7.186742,5.180988,4.190132,8.605465,-3.919875,8.758081,-8.634401,-6.215481,3.358482,-6.332022,5.740212,8.048603,9.533410,-0.957034,9.800478,-0.833458,1.200359,-1.141754,-9.752421,6.276886,9.222150,4.598666,-2.179019,1.859470,-4.581105,-9.214603,-6.258842,-6.017468,5.519227,4.995651,9.435991,-1.741603,-1.811924,9.796567,-1.749370,2.259278,6.005560,4.106819]], dtype = "float32")#candidate|8603|(1, 39)|const|float32
call_8602 = relay.TupleGetItem(func_7128_call(relay.reshape(const_8603.astype('float32'), [39,])), 0)
call_8604 = relay.TupleGetItem(func_7130_call(relay.reshape(const_8603.astype('float32'), [39,])), 0)
output = relay.Tuple([call_8560,call_8602,const_8603,])
output2 = relay.Tuple([call_8561,call_8604,const_8603,])
func_8614 = relay.Function([], output)
mod['func_8614'] = func_8614
mod = relay.transform.InferType()(mod)
mutated_mod['func_8614'] = func_8614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8614_call = mutated_mod.get_global_var('func_8614')
call_8615 = func_8614_call()
output = call_8615
func_8616 = relay.Function([], output)
mutated_mod['func_8616'] = func_8616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8467_call = mod.get_global_var('func_8467')
func_8469_call = mutated_mod.get_global_var('func_8469')
call_8635 = relay.TupleGetItem(func_8467_call(), 1)
call_8636 = relay.TupleGetItem(func_8469_call(), 1)
output = relay.Tuple([call_8635,])
output2 = relay.Tuple([call_8636,])
func_8641 = relay.Function([], output)
mod['func_8641'] = func_8641
mod = relay.transform.InferType()(mod)
output = func_8641()
func_8642 = relay.Function([], output)
mutated_mod['func_8642'] = func_8642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3674_call = mod.get_global_var('func_3674')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_8665 = func_3674_call()
call_8666 = func_3674_call()
func_3674_call = mod.get_global_var('func_3674')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_8674 = func_3674_call()
call_8675 = func_3674_call()
uop_8686 = relay.asinh(call_8674.astype('float64')) # shape=(15, 2, 8)
uop_8688 = relay.asinh(call_8675.astype('float64')) # shape=(15, 2, 8)
output = relay.Tuple([call_8665,uop_8686,])
output2 = relay.Tuple([call_8666,uop_8688,])
func_8689 = relay.Function([], output)
mod['func_8689'] = func_8689
mod = relay.transform.InferType()(mod)
mutated_mod['func_8689'] = func_8689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8689_call = mutated_mod.get_global_var('func_8689')
call_8690 = func_8689_call()
output = call_8690
func_8691 = relay.Function([], output)
mutated_mod['func_8691'] = func_8691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6404_call = mod.get_global_var('func_6404')
func_6405_call = mutated_mod.get_global_var('func_6405')
call_8786 = relay.TupleGetItem(func_6404_call(), 0)
call_8787 = relay.TupleGetItem(func_6405_call(), 0)
output = call_8786
output2 = call_8787
func_8799 = relay.Function([], output)
mod['func_8799'] = func_8799
mod = relay.transform.InferType()(mod)
mutated_mod['func_8799'] = func_8799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8799_call = mutated_mod.get_global_var('func_8799')
call_8800 = func_8799_call()
output = call_8800
func_8801 = relay.Function([], output)
mutated_mod['func_8801'] = func_8801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7747_call = mod.get_global_var('func_7747')
func_7748_call = mutated_mod.get_global_var('func_7748')
call_8804 = relay.TupleGetItem(func_7747_call(), 0)
call_8805 = relay.TupleGetItem(func_7748_call(), 0)
func_8393_call = mod.get_global_var('func_8393')
func_8395_call = mutated_mod.get_global_var('func_8395')
call_8815 = relay.TupleGetItem(func_8393_call(), 0)
call_8816 = relay.TupleGetItem(func_8395_call(), 0)
output = relay.Tuple([call_8804,call_8815,])
output2 = relay.Tuple([call_8805,call_8816,])
func_8820 = relay.Function([], output)
mod['func_8820'] = func_8820
mod = relay.transform.InferType()(mod)
output = func_8820()
func_8821 = relay.Function([], output)
mutated_mod['func_8821'] = func_8821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mod.get_global_var('func_3757')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_8824 = relay.TupleGetItem(func_3757_call(), 0)
call_8825 = relay.TupleGetItem(func_3759_call(), 0)
output = relay.Tuple([call_8824,])
output2 = relay.Tuple([call_8825,])
func_8831 = relay.Function([], output)
mod['func_8831'] = func_8831
mod = relay.transform.InferType()(mod)
output = func_8831()
func_8832 = relay.Function([], output)
mutated_mod['func_8832'] = func_8832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3858_call = mod.get_global_var('func_3858')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_8849 = relay.TupleGetItem(func_3858_call(), 0)
call_8850 = relay.TupleGetItem(func_3859_call(), 0)
func_6178_call = mod.get_global_var('func_6178')
func_6179_call = mutated_mod.get_global_var('func_6179')
call_8860 = relay.TupleGetItem(func_6178_call(), 1)
call_8861 = relay.TupleGetItem(func_6179_call(), 1)
func_5930_call = mod.get_global_var('func_5930')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_8862 = relay.TupleGetItem(func_5930_call(), 0)
call_8863 = relay.TupleGetItem(func_5931_call(), 0)
output = relay.Tuple([call_8849,call_8860,call_8862,])
output2 = relay.Tuple([call_8850,call_8861,call_8863,])
func_8871 = relay.Function([], output)
mod['func_8871'] = func_8871
mod = relay.transform.InferType()(mod)
output = func_8871()
func_8872 = relay.Function([], output)
mutated_mod['func_8872'] = func_8872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5139_call = mod.get_global_var('func_5139')
func_5140_call = mutated_mod.get_global_var('func_5140')
call_8928 = relay.TupleGetItem(func_5139_call(), 0)
call_8929 = relay.TupleGetItem(func_5140_call(), 0)
output = relay.Tuple([call_8928,])
output2 = relay.Tuple([call_8929,])
func_8940 = relay.Function([], output)
mod['func_8940'] = func_8940
mod = relay.transform.InferType()(mod)
mutated_mod['func_8940'] = func_8940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8940_call = mutated_mod.get_global_var('func_8940')
call_8941 = func_8940_call()
output = call_8941
func_8942 = relay.Function([], output)
mutated_mod['func_8942'] = func_8942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7908_call = mod.get_global_var('func_7908')
func_7909_call = mutated_mod.get_global_var('func_7909')
call_9005 = func_7908_call()
call_9006 = func_7908_call()
func_406_call = mod.get_global_var('func_406')
func_409_call = mutated_mod.get_global_var('func_409')
var_9009 = relay.var("var_9009", dtype = "float32", shape = (84, 24))#candidate|9009|(84, 24)|var|float32
const_9010 = relay.const([1,-6,3,1,-4,6,-10,7,1,-1,10,9,-6,-10,-5,6,2,1,9,5,-10,5,1,-10,-3,-5,6,-10,10,-1,-10,-3,8,8,-7,5,3,-7,-1,9,8,9,-9,-4,-1,-6,-1,5,-2,-9,5,-6,3,5,10,9,9,10,9,6,1,2,10,1,10,1,-1,6,-8,-9,-4,-6,6,-10,2,-4,-8,4,2,2,-5,-9,-7,2,5,-6,8,1,-10,1,-7,-6,1,-4,5,-7,8,9,-1,3,-2,9,10,6,-3,3,-1,-6,7,5,8,4,-10,-1,2,8,-2,-6,9,4,8,-1,-4,-9,-6,5,-8,10,-10,8,-5,-7,-5,1,4,5,3,-9,10,-10,-6,-2,3,-2,-5,6,1,10,8,-2,-7,4,-1,-6,3,-1,10,3,7,6,-8,-3], dtype = "uint64")#candidate|9010|(162,)|const|uint64
call_9008 = relay.TupleGetItem(func_406_call(relay.reshape(var_9009.astype('float32'), [9, 16, 14]), relay.reshape(const_9010.astype('uint64'), [162,]), ), 0)
call_9011 = relay.TupleGetItem(func_409_call(relay.reshape(var_9009.astype('float32'), [9, 16, 14]), relay.reshape(const_9010.astype('uint64'), [162,]), ), 0)
output = relay.Tuple([call_9005,call_9008,var_9009,const_9010,])
output2 = relay.Tuple([call_9006,call_9011,var_9009,const_9010,])
func_9017 = relay.Function([var_9009,], output)
mod['func_9017'] = func_9017
mod = relay.transform.InferType()(mod)
var_9018 = relay.var("var_9018", dtype = "float32", shape = (84, 24))#candidate|9018|(84, 24)|var|float32
output = func_9017(var_9018)
func_9019 = relay.Function([var_9018], output)
mutated_mod['func_9019'] = func_9019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3699_call = mod.get_global_var('func_3699')
func_3701_call = mutated_mod.get_global_var('func_3701')
call_9110 = func_3699_call()
call_9111 = func_3699_call()
output = relay.Tuple([call_9110,])
output2 = relay.Tuple([call_9111,])
func_9122 = relay.Function([], output)
mod['func_9122'] = func_9122
mod = relay.transform.InferType()(mod)
mutated_mod['func_9122'] = func_9122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9122_call = mutated_mod.get_global_var('func_9122')
call_9123 = func_9122_call()
output = call_9123
func_9124 = relay.Function([], output)
mutated_mod['func_9124'] = func_9124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_9144 = func_3423_call()
call_9145 = func_3423_call()
output = relay.Tuple([call_9144,])
output2 = relay.Tuple([call_9145,])
func_9154 = relay.Function([], output)
mod['func_9154'] = func_9154
mod = relay.transform.InferType()(mod)
mutated_mod['func_9154'] = func_9154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9154_call = mutated_mod.get_global_var('func_9154')
call_9155 = func_9154_call()
output = call_9155
func_9156 = relay.Function([], output)
mutated_mod['func_9156'] = func_9156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6153_call = mod.get_global_var('func_6153')
func_6155_call = mutated_mod.get_global_var('func_6155')
call_9166 = relay.TupleGetItem(func_6153_call(), 0)
call_9167 = relay.TupleGetItem(func_6155_call(), 0)
output = relay.Tuple([call_9166,])
output2 = relay.Tuple([call_9167,])
func_9171 = relay.Function([], output)
mod['func_9171'] = func_9171
mod = relay.transform.InferType()(mod)
output = func_9171()
func_9172 = relay.Function([], output)
mutated_mod['func_9172'] = func_9172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9187 = relay.var("var_9187", dtype = "float64", shape = (3, 8, 16))#candidate|9187|(3, 8, 16)|var|float64
uop_9188 = relay.rsqrt(var_9187.astype('float64')) # shape=(3, 8, 16)
output = relay.Tuple([uop_9188,])
output2 = relay.Tuple([uop_9188,])
func_9200 = relay.Function([var_9187,], output)
mod['func_9200'] = func_9200
mod = relay.transform.InferType()(mod)
var_9201 = relay.var("var_9201", dtype = "float64", shape = (3, 8, 16))#candidate|9201|(3, 8, 16)|var|float64
output = func_9200(var_9201)
func_9202 = relay.Function([var_9201], output)
mutated_mod['func_9202'] = func_9202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6753_call = mod.get_global_var('func_6753')
func_6754_call = mutated_mod.get_global_var('func_6754')
call_9306 = relay.TupleGetItem(func_6753_call(), 0)
call_9307 = relay.TupleGetItem(func_6754_call(), 0)
output = call_9306
output2 = call_9307
func_9313 = relay.Function([], output)
mod['func_9313'] = func_9313
mod = relay.transform.InferType()(mod)
mutated_mod['func_9313'] = func_9313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9313_call = mutated_mod.get_global_var('func_9313')
call_9314 = func_9313_call()
output = call_9314
func_9315 = relay.Function([], output)
mutated_mod['func_9315'] = func_9315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3674_call = mod.get_global_var('func_3674')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_9382 = func_3674_call()
call_9383 = func_3674_call()
output = call_9382
output2 = call_9383
func_9392 = relay.Function([], output)
mod['func_9392'] = func_9392
mod = relay.transform.InferType()(mod)
output = func_9392()
func_9393 = relay.Function([], output)
mutated_mod['func_9393'] = func_9393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5980_call = mod.get_global_var('func_5980')
func_5981_call = mutated_mod.get_global_var('func_5981')
call_9458 = relay.TupleGetItem(func_5980_call(), 3)
call_9459 = relay.TupleGetItem(func_5981_call(), 3)
uop_9460 = relay.acosh(call_9458.astype('float64')) # shape=(15, 2, 8)
uop_9462 = relay.acosh(call_9459.astype('float64')) # shape=(15, 2, 8)
func_4069_call = mod.get_global_var('func_4069')
func_4072_call = mutated_mod.get_global_var('func_4072')
var_9472 = relay.var("var_9472", dtype = "float32", shape = (770,))#candidate|9472|(770,)|var|float32
var_9473 = relay.var("var_9473", dtype = "int64", shape = (420,))#candidate|9473|(420,)|var|int64
call_9471 = relay.TupleGetItem(func_4069_call(relay.reshape(var_9472.astype('float32'), [770,]), relay.reshape(var_9473.astype('int64'), [420,]), ), 3)
call_9474 = relay.TupleGetItem(func_4072_call(relay.reshape(var_9472.astype('float32'), [770,]), relay.reshape(var_9473.astype('int64'), [420,]), ), 3)
output = relay.Tuple([uop_9460,call_9471,var_9472,var_9473,])
output2 = relay.Tuple([uop_9462,call_9474,var_9472,var_9473,])
func_9507 = relay.Function([var_9472,var_9473,], output)
mod['func_9507'] = func_9507
mod = relay.transform.InferType()(mod)
var_9508 = relay.var("var_9508", dtype = "float32", shape = (770,))#candidate|9508|(770,)|var|float32
var_9509 = relay.var("var_9509", dtype = "int64", shape = (420,))#candidate|9509|(420,)|var|int64
output = func_9507(var_9508,var_9509,)
func_9510 = relay.Function([var_9508,var_9509,], output)
mutated_mod['func_9510'] = func_9510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9629 = relay.var("var_9629", dtype = "float64", shape = (16, 8, 15))#candidate|9629|(16, 8, 15)|var|float64
var_9630 = relay.var("var_9630", dtype = "float64", shape = (16, 8, 15))#candidate|9630|(16, 8, 15)|var|float64
bop_9631 = relay.less_equal(var_9629.astype('bool'), relay.reshape(var_9630.astype('bool'), relay.shape_of(var_9629))) # shape=(16, 8, 15)
func_6404_call = mod.get_global_var('func_6404')
func_6405_call = mutated_mod.get_global_var('func_6405')
call_9637 = relay.TupleGetItem(func_6404_call(), 2)
call_9638 = relay.TupleGetItem(func_6405_call(), 2)
output = relay.Tuple([bop_9631,call_9637,])
output2 = relay.Tuple([bop_9631,call_9638,])
func_9648 = relay.Function([var_9629,var_9630,], output)
mod['func_9648'] = func_9648
mod = relay.transform.InferType()(mod)
var_9649 = relay.var("var_9649", dtype = "float64", shape = (16, 8, 15))#candidate|9649|(16, 8, 15)|var|float64
var_9650 = relay.var("var_9650", dtype = "float64", shape = (16, 8, 15))#candidate|9650|(16, 8, 15)|var|float64
output = func_9648(var_9649,var_9650,)
func_9651 = relay.Function([var_9649,var_9650,], output)
mutated_mod['func_9651'] = func_9651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8799_call = mod.get_global_var('func_8799')
func_8801_call = mutated_mod.get_global_var('func_8801')
call_9692 = func_8799_call()
call_9693 = func_8799_call()
func_4549_call = mod.get_global_var('func_4549')
func_4551_call = mutated_mod.get_global_var('func_4551')
call_9729 = relay.TupleGetItem(func_4549_call(), 1)
call_9730 = relay.TupleGetItem(func_4551_call(), 1)
func_1753_call = mod.get_global_var('func_1753')
func_1756_call = mutated_mod.get_global_var('func_1756')
const_9734 = relay.const([-7.926787,-2.979898,-5.291010,-8.035699,5.892856,-0.148596,-1.913567,9.056517,-6.480443,0.195418,4.971458,-3.596769,-7.409604,-1.793679,0.234845,1.994280,3.788471,-3.614032,7.390949,-5.253584,2.383088,-3.479782,-6.002880,6.443207,4.199011,-7.263153,7.217588,0.575770,9.931505,0.132732,8.894421,-2.441990,-1.190258,-3.693359,5.871805,-2.937362,3.817697,-0.404118,-8.123734,-6.057158,-6.213517,9.106531,-7.671426,-2.856865,-3.361446,-4.161100,-8.445564,-7.978867,5.004570,-1.085233,-1.241069,9.575001,9.228032,2.334573,4.386027,6.675274,-6.211705,5.673599,5.279352,-2.876281,3.313594,6.651016,7.907531,3.680937,8.046218,9.175168,-6.551610,5.028033,-9.920710,-6.380476,2.194767,-2.813337,-5.427644,-1.948039,8.512673,8.691357,3.908751,-1.367744,0.678314,3.330883,4.938839,-6.778561,-2.531616,0.470235,-7.157886,-7.521348,8.830099,9.107753,0.692981,4.810382,-5.260926,9.316958,7.070209,-9.847831,3.624395,9.760375,-6.526666,1.122878,-5.834984,4.175917,-6.663179,-8.071644,-7.590525,5.847979,9.731005,-3.053703,0.810532,3.312968,6.909272,3.154310,2.489796,2.986310,-2.583629,-7.627542,1.239246,1.067726,-5.381152,1.186770,9.986875,-0.150940,2.442181,-9.451567,-3.530093,-4.695672,7.965141,6.952515,-9.973662,-3.351744,7.584639,8.365746,2.869597,-7.304179,-6.571751,-7.214780,-8.474128,-3.500523,-6.754238,-2.556868,-3.459022,-6.143707,1.719537,5.589445,0.867834,-6.004672,-5.483505,6.867305,8.690372,7.936275,-7.983438,0.308335,-1.591121,-2.620658,0.930019,-7.821225,1.959827,2.326245,-5.422116,2.759666,1.177890,-2.482451,3.570064,9.456772,9.010226,1.508421,-3.615530,-4.134220,-4.157265,7.983939,4.856716,-3.539398,2.147988,3.553835,-6.461934,7.877141,8.264286,3.873112,3.219092,2.160507,-5.643902,-4.385778,5.081370,0.446185,-4.521387,9.380020,-8.325620,-0.810870,-5.515353,7.572581,-8.190249,-6.294153,-8.318995,8.075456,-1.578579,-8.793317,4.533903,0.183947,0.696464,-8.181849,-8.128945,-9.782697,6.800278,-3.718712,-9.825590,-9.571352,-3.204210,-4.697885,4.949383,-2.000216,-6.859817,-2.347125,-0.308180,2.571453,-0.450853,0.441469,1.054906,-3.563300,-0.888568,-8.569379,-1.617455,-7.154968,9.556581,-5.067483,-4.573164,-9.738125,3.616885,-7.168521,6.165829,-6.360140,5.751956,-5.468895,2.927926,-1.483806,8.964907,-6.941516,2.786727,-8.670025,-3.906417,3.587477,6.722711,4.205370,-4.931559,-2.689815,4.611260,-0.599223,-9.215936,-3.179567,7.075553,-4.860974,5.428061,-4.167387,6.950294,-7.442256,9.057063,-4.777857,8.151184,-8.737829,5.560304,7.297564,5.399085,2.145245,-0.304465,1.314931,-7.766862,-2.202053,-2.813597,6.478683,5.101299,3.527729,2.592194,-0.753541,-7.446763,1.392045,8.446149,-6.759706,-6.186002,2.524082,5.522196,-8.234485,-8.593089,-3.764946,1.198428,-7.081075,8.728137,-0.444501,8.743771,9.680891,2.155296,3.058875,-2.279478,6.919143,0.920970,9.315987,2.234494,8.036147,2.296729,-1.838423,8.281334,9.311855,1.884601,6.579540,-3.730633,-3.168105,1.904864,7.660130,3.222455,-7.926350,5.412166,-9.248531,8.711653,-1.255870,5.099351,-9.243670,4.834472,8.286791,4.403850,4.383279,4.097800,3.330322,0.372654,-4.726323,2.445158,5.633979,6.698873,5.402973,9.988054,4.001943,-3.856421,0.241919,8.651079,-1.229269,-7.873880,7.479410,9.458604,-9.392380,8.744502,-9.029099,-0.511846,4.750741,3.510590,-0.293747,-0.180790,7.225608,1.624869,-4.945287,7.558462,8.643152,-9.108371,3.456618,5.655082,-2.943620,3.360277,8.014052,-4.278032,9.681477,4.628118,7.061472,3.440459,9.163106,1.675676,5.891602,-0.307205,-4.905609,1.414361,2.078512,-1.578325,6.948331,-6.514909,4.565911,6.981377,-6.103078,-5.165020,-2.010408,-1.491832,2.251942,9.656674,-7.127860,9.616971,-0.828837,-0.304448,-4.927410,8.564326,-1.731593,-6.258185,2.026370,-6.405384,7.226831,5.088701,-6.228859,8.057092,3.800709,7.604976,-2.181903,4.483692,1.760056,-7.198626,-5.353064,-9.880240,3.849416,-6.310537,-3.485680,-2.189774,2.807151,-3.186805,3.947031,1.829532,-4.274133,-8.117309,-5.076865,-2.765141,-8.295209,7.440424,-2.078322,4.565858,-4.695514,-2.838096,3.977802,-4.975648,-2.860453,-7.488711,-9.320209,5.700145,-4.125041,-6.914570,6.130214,5.213012,2.899627,-2.405810,-6.818036,-9.560349,3.882888,9.789461,6.859286,9.893665,-5.658377,-9.300957,-7.737601,-1.602169,3.169237,8.997092,5.681900,-6.958287,1.025235,-0.150392,8.558669,-0.031500,-3.025349,4.122551,-9.868160,8.878642,-5.988517,3.566407,8.316652,-1.614253,-5.264702,5.856261,-5.485345,8.482702,-3.681659,2.911943,-9.334930,-6.343506,1.638841,-5.376572,0.962073,9.770396,8.212935,-1.215279,-9.452321,-2.901475,-5.610225,-3.954844,1.190758,-8.620746,2.818901,0.185405,3.584024,-6.211970,1.869686,-3.149925,2.514730,8.524691,2.115545,5.557166,-6.233405,-0.499071,-6.387419,5.753105,-8.898365,5.290348,6.942062,4.320779,0.446428,0.161283,8.053482,6.255888,7.099353,3.363799,-0.995557,-5.431247,-1.036877,1.221801,9.108018,9.271381,-1.456199,-4.980945,9.283528,-3.671363,4.914656,-9.555632,-5.863892,3.456339,-3.165025,-1.686291,-6.447265,0.590470,5.156146,6.925428,1.481964,3.315682,2.720052,1.417141,9.400385,4.588945,7.035629,0.411982,3.587736,-7.957626,-9.964020,-3.383524,1.825182,8.344423,-3.461629,-1.010144,5.288165,0.442685,2.368104,-4.264140,0.252882,9.694863,7.070849,-6.261018,-1.235773,-9.052530,3.952354,0.882785,-8.480854,9.180285,3.620508,-0.826384,2.738312,9.252444,-8.315880,-7.568636,-3.942536,-1.736798,-6.103316,-3.973183,2.365158,3.220884,-3.930870,-4.299229,-6.984663,2.478877,9.062688,-4.448547,-9.451194,0.641306,6.194394,-7.256364,6.031537,4.546530,0.325398,-4.539492,-3.170453,6.564421,-9.325355,2.108547,2.249925,-5.649217,-9.629807,-0.745511,7.347278,5.380460,8.486471,-7.971593,2.623164,-2.459435,2.656269,4.815707,7.588749,-1.085372,-7.679737,-0.481196,7.451915,-9.734684,1.333547,-9.087070,-8.275709,-1.245529,1.884944,3.670072,-7.824992,0.405082,-0.127832,-1.956130,1.692794,-6.048509,-4.422848,4.510822,9.656918,-0.378642,-7.810214,0.800548,-8.262109,-1.362988,-9.402231,-3.452024,-4.475872,8.824109,4.503080,-0.509868,-3.612264,-2.575698,7.858234,-3.310375,-5.867593,0.956386,7.368188,2.873159,-8.738384,8.590563,3.996265,-6.823561,7.840241,9.190858,9.562803,2.283851,-0.672955,-8.274141,-8.863548,-4.449315,1.261094,6.194217,6.727806,2.188452,3.592234,-8.146938,-7.218082,-1.440255,-6.906842,-7.480954,3.137069,-6.800849,-0.114484,7.490149,2.130283,2.822860,8.920226,-8.017498,4.272341,7.118307,-4.606271,-4.628627,-5.269288,0.713341,-9.286332,-9.095860,4.643515,6.600173,1.877316,-1.176274,-2.201688,-3.707161,4.271595,-9.336751,-7.328467,2.280306,-9.108636,7.642332,-5.412382,3.953620,1.429980,-0.760300,-8.645322,-5.490800,-0.596704,5.578017,-8.766783,-7.955506,-0.181347,-5.057274,-5.764127,3.850903,8.371657,9.482537,3.264862,-1.507156,-4.266159,-8.736695,-1.269622,0.952134,7.721437,-0.233058,-4.898325,9.469025,7.926838,0.569081,1.673190,-6.133379,1.838222,-2.253632,6.346749,4.872733,3.191069,-1.516103,-1.865430,-5.081894,-1.182541,3.778421,-1.789422,0.709026,5.826242,3.666068,-9.457903,1.512519,-1.162841,-8.872675,9.674072,7.609996,6.406230,-9.147631,8.683420,-2.203048,6.868246,-7.982786,-5.119677,-6.819402,-2.290768,6.483839,1.394754,0.887205,-7.271545,9.621194,4.402791,3.339075,9.244685,6.339207,-9.819597,-6.629751,4.832663,6.107256,9.019441,4.991624,-2.881342,-7.748210,-4.537151,5.468335,2.082184,-0.498206,4.807049,-5.830672,5.297008,-5.356190,0.578855,-5.109658,1.699124,-2.358674,6.839920,6.788023,-8.230207,8.423713,2.987493,-3.559575,-1.805876,0.803773,-8.122650,-6.080286,7.681674,7.304916,0.704605,-0.805371,-2.160192,1.057264,-1.310136,5.900297,-1.306405,9.622492,3.176050,9.688371,-3.308497,8.223601,-4.574120,8.121967,-9.516567,-0.681152,-8.916325,6.070448,2.627680,-0.118258,0.932032,8.723304,-6.893902,4.649993,-2.442860,5.075959,6.585844,3.515934,-1.706974,-6.700857,1.151516,4.987935,8.529654,-9.045868,0.440599,-7.641784,-0.214308,0.226559,1.914169,-8.295716,8.518255,-6.898954,6.498986,-8.208387,-8.496442,-4.909262,0.681499,0.511627,-1.053397,8.259064,-1.963525,-8.243686,4.660795,-8.570642,-6.040357,-8.416143,-5.079918,8.230195,-2.155947,-9.812427,-5.978598,3.739431,-5.168099,-2.194253,-6.907815,-6.678454,4.338107,-5.809862,-1.452633,9.984850,0.717310,-6.107708,9.033932,6.730977,3.868049,-6.901297,5.964337,4.981885,4.950739,-3.552045,-1.258470,-9.057582,-3.709407,-7.782877,8.387492,2.196188,-7.715139,8.263060,0.656883,9.203854,-6.537893,-7.882139,4.745825,1.098601,5.070834,0.173600,-7.707505,-5.274249,-5.948349,-3.300432,-9.186405,-0.549994,8.617832,-8.100530,8.451904,-8.109966,-0.212274,3.456788,-4.801789,-1.358432,-6.855615,4.744522,6.041694,1.106465,8.953757,-5.847078,-0.050494,-8.421409,-8.336507,-3.971095,-9.644476,5.637970,-8.743100,0.664540,8.321587,-7.020352,2.535152,-5.118316,5.924678,-2.942157,1.833151,9.062820,2.567443,-2.912158,-8.405634,0.416381,7.201143,3.459622,8.232807,-6.804906,-8.292026,4.619954,5.890330,9.638402,8.306328,4.177563,-3.568541,-6.464539,-6.573569,7.528424,-0.468891,3.125021,6.443744,7.299699,2.156100,4.418828,-1.465439,3.347671,-4.155956,4.794839,-0.386307,0.645981,4.082605,9.847938,-9.765958,-1.342215,7.351926,-8.034238,3.989201,-1.064179,6.533728,-1.124518,-6.958210,5.196330,-1.636916,-0.457166,4.205283,8.980641,-6.013441,-7.404996,2.633678,1.716783,5.767320,1.227701,2.151613,1.006466,5.974666,-0.802980,-0.265585,0.875630,-6.182205,9.955973,8.332314,-6.702725,9.200880,-8.279363,-0.600752,-7.223357,6.274682,-5.433318,3.966441,8.958078,7.504829,-8.045191,-3.332457,9.045209,7.689516,-6.563268,3.576467,-7.690287,-3.261562,-0.134874,-7.499051,-7.424493,-4.444928,-5.213928,-3.748901,2.590865,-2.355555,8.108288,4.929272,0.061651,-9.957737,6.041521,0.597250,-7.331581,-8.268544,-8.164150,9.528583,-0.933802,6.763715,6.021755,-6.153338,4.698588,-0.914527,4.496193,2.203666,7.214795,4.804225,-5.524181,-8.835976,-7.407093,9.462527,-2.339192,0.320082,-0.248680,5.055014,-0.920886,-3.636182,-7.783177,3.781462,-8.324463,6.855302,-8.280176,-6.159334,0.130440,5.067536,0.233032,-5.150945,-0.918561,-2.590140,-2.874794,-3.657523,-5.786537,-1.578551,-6.267078,-7.418939,7.241150,-8.286890,-9.744663,-1.331058,2.870675,0.536339,-7.699508,-9.785138,3.730277,6.005692,1.440304,5.666961,1.736480,-8.379295,6.456100,-3.492832,-9.933301,-5.244060,-1.760797,-3.742680,-7.152605,-9.620229,5.099199,1.201611,-8.443047,-7.136647,0.334247,5.627233,-9.453454,-5.449578,-9.174729,-9.650013,5.786384,-6.325412,7.226374,0.936487,-8.848951,-4.461835,1.665002,8.336645,-9.047334,5.869321,0.778382,-7.985666,-5.790814,9.140396], dtype = "float32")#candidate|9734|(1092,)|const|float32
var_9735 = relay.var("var_9735", dtype = "uint64", shape = (162,))#candidate|9735|(162,)|var|uint64
call_9733 = relay.TupleGetItem(func_1753_call(relay.reshape(const_9734.astype('float32'), [12, 7, 13]), relay.reshape(var_9735.astype('uint64'), [162,]), ), 2)
call_9736 = relay.TupleGetItem(func_1756_call(relay.reshape(const_9734.astype('float32'), [12, 7, 13]), relay.reshape(var_9735.astype('uint64'), [162,]), ), 2)
func_4783_call = mod.get_global_var('func_4783')
func_4785_call = mutated_mod.get_global_var('func_4785')
call_9750 = relay.TupleGetItem(func_4783_call(), 0)
call_9751 = relay.TupleGetItem(func_4785_call(), 0)
output = relay.Tuple([call_9692,call_9729,call_9733,const_9734,var_9735,call_9750,])
output2 = relay.Tuple([call_9693,call_9730,call_9736,const_9734,var_9735,call_9751,])
func_9757 = relay.Function([var_9735,], output)
mod['func_9757'] = func_9757
mod = relay.transform.InferType()(mod)
mutated_mod['func_9757'] = func_9757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9758 = relay.var("var_9758", dtype = "uint64", shape = (162,))#candidate|9758|(162,)|var|uint64
func_9757_call = mutated_mod.get_global_var('func_9757')
call_9759 = func_9757_call(var_9758)
output = call_9759
func_9760 = relay.Function([var_9758], output)
mutated_mod['func_9760'] = func_9760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8689_call = mod.get_global_var('func_8689')
func_8691_call = mutated_mod.get_global_var('func_8691')
call_9765 = relay.TupleGetItem(func_8689_call(), 1)
call_9766 = relay.TupleGetItem(func_8691_call(), 1)
output = call_9765
output2 = call_9766
func_9774 = relay.Function([], output)
mod['func_9774'] = func_9774
mod = relay.transform.InferType()(mod)
mutated_mod['func_9774'] = func_9774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9774_call = mutated_mod.get_global_var('func_9774')
call_9775 = func_9774_call()
output = call_9775
func_9776 = relay.Function([], output)
mutated_mod['func_9776'] = func_9776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8820_call = mod.get_global_var('func_8820')
func_8821_call = mutated_mod.get_global_var('func_8821')
call_9830 = relay.TupleGetItem(func_8820_call(), 0)
call_9831 = relay.TupleGetItem(func_8821_call(), 0)
output = relay.Tuple([call_9830,])
output2 = relay.Tuple([call_9831,])
func_9842 = relay.Function([], output)
mod['func_9842'] = func_9842
mod = relay.transform.InferType()(mod)
mutated_mod['func_9842'] = func_9842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9842_call = mutated_mod.get_global_var('func_9842')
call_9843 = func_9842_call()
output = call_9843
func_9844 = relay.Function([], output)
mutated_mod['func_9844'] = func_9844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9154_call = mod.get_global_var('func_9154')
func_9156_call = mutated_mod.get_global_var('func_9156')
call_9854 = relay.TupleGetItem(func_9154_call(), 0)
call_9855 = relay.TupleGetItem(func_9156_call(), 0)
output = call_9854
output2 = call_9855
func_9856 = relay.Function([], output)
mod['func_9856'] = func_9856
mod = relay.transform.InferType()(mod)
mutated_mod['func_9856'] = func_9856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9856_call = mutated_mod.get_global_var('func_9856')
call_9857 = func_9856_call()
output = call_9857
func_9858 = relay.Function([], output)
mutated_mod['func_9858'] = func_9858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8393_call = mod.get_global_var('func_8393')
func_8395_call = mutated_mod.get_global_var('func_8395')
call_9868 = relay.TupleGetItem(func_8393_call(), 0)
call_9869 = relay.TupleGetItem(func_8395_call(), 0)
func_9392_call = mod.get_global_var('func_9392')
func_9393_call = mutated_mod.get_global_var('func_9393')
call_9878 = func_9392_call()
call_9879 = func_9392_call()
func_9757_call = mod.get_global_var('func_9757')
func_9760_call = mutated_mod.get_global_var('func_9760')
const_9888 = relay.const([[6,-4,-8,4,8,3,7,5,-4,3,7,6,-2,7,-10,3,-8,6,7,-7,2,-2,-3,-6,5,-10,-9],[-8,-3,7,1,-1,9,2,-5,-9,-10,-8,10,-7,3,-9,6,-3,4,2,10,-2,-1,2,-5,7,-4,8],[8,8,5,-4,-5,-9,7,-6,-7,3,-5,5,10,7,6,-7,-1,4,4,-6,-6,-10,6,-9,6,-10,9],[-3,9,2,-7,8,3,3,-1,-8,4,10,-4,3,-1,3,2,8,7,-5,-8,-2,6,-10,-4,5,-8,6],[-4,-4,-3,8,2,-7,7,-3,4,9,1,-6,-10,3,-6,10,9,8,10,9,1,10,5,-2,-1,8,2],[6,-3,-10,7,10,3,-8,-1,2,3,9,-9,7,-3,1,7,7,-6,2,6,-1,-9,1,-8,-3,7,8]], dtype = "uint64")#candidate|9888|(6, 27)|const|uint64
call_9887 = relay.TupleGetItem(func_9757_call(relay.reshape(const_9888.astype('uint64'), [162,])), 1)
call_9889 = relay.TupleGetItem(func_9760_call(relay.reshape(const_9888.astype('uint64'), [162,])), 1)
output = relay.Tuple([call_9868,call_9878,call_9887,const_9888,])
output2 = relay.Tuple([call_9869,call_9879,call_9889,const_9888,])
func_9893 = relay.Function([], output)
mod['func_9893'] = func_9893
mod = relay.transform.InferType()(mod)
output = func_9893()
func_9894 = relay.Function([], output)
mutated_mod['func_9894'] = func_9894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mod.get_global_var('func_3757')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_9925 = relay.TupleGetItem(func_3757_call(), 0)
call_9926 = relay.TupleGetItem(func_3759_call(), 0)
output = call_9925
output2 = call_9926
func_9927 = relay.Function([], output)
mod['func_9927'] = func_9927
mod = relay.transform.InferType()(mod)
output = func_9927()
func_9928 = relay.Function([], output)
mutated_mod['func_9928'] = func_9928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8614_call = mod.get_global_var('func_8614')
func_8616_call = mutated_mod.get_global_var('func_8616')
call_9940 = relay.TupleGetItem(func_8614_call(), 1)
call_9941 = relay.TupleGetItem(func_8616_call(), 1)
func_7883_call = mod.get_global_var('func_7883')
func_7885_call = mutated_mod.get_global_var('func_7885')
call_9962 = func_7883_call()
call_9963 = func_7883_call()
func_6020_call = mod.get_global_var('func_6020')
func_6022_call = mutated_mod.get_global_var('func_6022')
const_9967 = relay.const([[1.404417,7.066900,0.582128,-1.167864,1.458150,-2.805782,-8.094680,1.938896,-6.354114,8.328706,7.175056,-5.511116,-9.053951,2.409888,-8.468877,7.292714,-6.706010,-6.736895,4.015339,-1.956629,4.228157,6.795459,-0.309076,-4.172995,-4.071232,-2.932525,-9.186548,8.220231,-3.200081,1.982318,6.088510,4.297817,1.101582,-5.496327,-8.931010,3.299307,8.029102,-0.443438,2.990363,-0.004107,-7.428900,0.115853,7.053949,5.182660,-8.086103,-5.654247,-7.082044,9.765616,-2.634654,-2.263286,-7.556728,-3.662608,-3.940906,7.053981,-5.295596,0.613553,5.073503,4.317320,-6.547292,-4.137026,8.155494,-7.165023,-5.693519,7.780129,0.486818,-4.021629,-3.715214,2.319727,6.100426,-2.145182,-2.478656,-4.323494,4.928872,8.429447,-4.894808,-5.720280,-5.045707]], dtype = "float32")#candidate|9967|(1, 77)|const|float32
call_9966 = relay.TupleGetItem(func_6020_call(relay.reshape(const_9967.astype('float32'), [7, 11, 1])), 0)
call_9968 = relay.TupleGetItem(func_6022_call(relay.reshape(const_9967.astype('float32'), [7, 11, 1])), 0)
func_1407_call = mod.get_global_var('func_1407')
func_1410_call = mutated_mod.get_global_var('func_1410')
var_9970 = relay.var("var_9970", dtype = "float32", shape = (39,))#candidate|9970|(39,)|var|float32
call_9969 = relay.TupleGetItem(func_1407_call(relay.reshape(var_9970.astype('float32'), [3, 13, 1])), 3)
call_9971 = relay.TupleGetItem(func_1410_call(relay.reshape(var_9970.astype('float32'), [3, 13, 1])), 3)
output = relay.Tuple([call_9940,call_9962,call_9966,const_9967,call_9969,var_9970,])
output2 = relay.Tuple([call_9941,call_9963,call_9968,const_9967,call_9971,var_9970,])
func_9975 = relay.Function([var_9970,], output)
mod['func_9975'] = func_9975
mod = relay.transform.InferType()(mod)
var_9976 = relay.var("var_9976", dtype = "float32", shape = (39,))#candidate|9976|(39,)|var|float32
output = func_9975(var_9976)
func_9977 = relay.Function([var_9976], output)
mutated_mod['func_9977'] = func_9977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6178_call = mod.get_global_var('func_6178')
func_6179_call = mutated_mod.get_global_var('func_6179')
call_10002 = relay.TupleGetItem(func_6178_call(), 0)
call_10003 = relay.TupleGetItem(func_6179_call(), 0)
func_9392_call = mod.get_global_var('func_9392')
func_9393_call = mutated_mod.get_global_var('func_9393')
call_10004 = func_9392_call()
call_10005 = func_9392_call()
func_6231_call = mod.get_global_var('func_6231')
func_6233_call = mutated_mod.get_global_var('func_6233')
call_10015 = relay.TupleGetItem(func_6231_call(), 1)
call_10016 = relay.TupleGetItem(func_6233_call(), 1)
output = relay.Tuple([call_10002,call_10004,call_10015,])
output2 = relay.Tuple([call_10003,call_10005,call_10016,])
func_10020 = relay.Function([], output)
mod['func_10020'] = func_10020
mod = relay.transform.InferType()(mod)
mutated_mod['func_10020'] = func_10020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10020_call = mutated_mod.get_global_var('func_10020')
call_10021 = func_10020_call()
output = call_10021
func_10022 = relay.Function([], output)
mutated_mod['func_10022'] = func_10022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4306_call = mod.get_global_var('func_4306')
func_4307_call = mutated_mod.get_global_var('func_4307')
call_10025 = relay.TupleGetItem(func_4306_call(), 3)
call_10026 = relay.TupleGetItem(func_4307_call(), 3)
func_6355_call = mod.get_global_var('func_6355')
func_6356_call = mutated_mod.get_global_var('func_6356')
call_10027 = relay.TupleGetItem(func_6355_call(), 0)
call_10028 = relay.TupleGetItem(func_6356_call(), 0)
func_3465_call = mod.get_global_var('func_3465')
func_3468_call = mutated_mod.get_global_var('func_3468')
const_10036 = relay.const([4.581657,-4.642188,-3.611369,-4.696254,-9.241990,-3.583674,-3.945921,5.161750,-8.426113,-9.484700,-9.572660,-5.837934,-5.054219,4.732721,-5.712905,-7.026533,-3.120721,-3.687647,6.945370,1.350848,8.533286,-0.354999,-3.016247,2.326004,9.194183,5.092720,6.508827,-2.884296,0.711789,2.159244,9.188298,5.189885,1.573654,8.854978,-3.298690,-0.937135,-3.388664,0.555331,9.722518,7.571279,1.691780,-6.722207,2.387632,-2.077545,-1.200351,-8.148913,6.327534,6.943808,5.823308,6.682673,6.378910,-6.013953,-1.485501,7.570303,-4.156980,-7.961615,6.544755,-3.736056,0.564420,4.507735,9.412207,-6.109562,-6.810327,3.357093,-3.487234,2.205222,-3.230349,8.399031,-7.587326,-4.259218,4.237903,-2.408314,2.575995,7.795599,0.488833,-6.531167,1.229847,9.662557,-9.057970,0.614912,1.211993,9.095815,-9.081014,-8.162266,3.239633,4.348688,7.670004,6.959694,6.656375,-3.398640,9.403488,9.726457,1.998810,-9.336013,0.330097,-4.419566,4.803115,-0.142151,-6.020261,-9.202497,-1.390753,-6.705903,6.826319,-0.302674,1.446889,7.045085,-8.558793,1.262385,1.430029,9.978660,2.067979,7.346912,9.909609,1.004805,-4.977586,5.204211,4.139908,-6.403106,6.105662,2.343837,4.140637,-2.559509,2.497978,4.438653,5.961689,2.983709,-9.851292,4.548243,0.986300,8.758852,-3.872706,-3.211930,9.403748,-6.364010,9.197788,3.828906,-9.030651,-4.464048,6.943261,-1.876682,3.885164,0.757529,-8.312813,8.427192,2.173754,6.132522,-1.722008,-5.568964,0.302792,-2.496081,-3.319888,2.790128,6.626090,8.572155,-1.298557,-0.395120,8.060790,2.248869,-9.883957,7.258841,-0.451597,-5.786707,-6.451899,-2.343744,3.160838,4.825834,-5.179532,7.932701,-8.899482,-5.385169,-2.109989,-2.464821,-9.318293,-9.712627,1.152503,8.256296,-8.671546,-3.317654,-9.145202,-4.081199,9.871046,9.732377,9.303155,-9.903669,6.742884,-9.962021,4.877139,-1.997471,-8.403608,-6.478730,-9.071827,9.703749,6.723532,-8.519472,-0.986480,-8.015691,-2.537771,8.146552,-1.039148,1.991463,-1.630251,4.801599,8.871798,-8.601879,-2.444645,3.414703,-2.159104,-5.988967,-0.667207,7.195159,7.016267,-3.972332,7.074337,7.156221,1.077841,-5.044630,-7.444488,3.204742,9.111857,-9.013698,9.707428,-9.746274,-3.313015,1.482453,8.239960,-2.049197,-1.105079,-5.574733,-5.859024,8.325355,8.724157,-3.697714,-9.603971,2.114796,1.067434,6.381601,1.614095,-3.004591,-6.016443,-5.016524,-4.314392,5.364893,6.916643,-4.147148,8.143181,-6.253653,4.141351,1.612550,-8.088743,8.358653,-5.541800,-9.923910,5.431428,8.249501,3.848406,5.051642,-4.480072,-4.354570,0.128788,-2.360310,9.502344,1.679354,3.114234,-5.981730,6.976440,2.279098,-2.896698,4.626633,-1.245311,-3.760189,-8.311500,9.219099,-0.033546,-4.887063,-8.448875,-7.393205,1.683799,3.695959,-0.802479,9.370843,5.030988,0.853197,-6.400238,2.661273,-0.630837,-3.097833,-9.797073,1.700626,-6.624703,-3.094461,-8.369932,-2.318568,-2.966881,-0.953892,3.314764,-8.372170,-3.291409,-1.530436,-9.539235,9.276884,3.883384,8.516490,9.201659,-5.232220,-1.831627,0.281411,-3.626538,0.404786,2.808106,3.638218,2.333453,5.658017,-1.248971,-1.004767,-9.254360,2.202916,-8.144281,9.985196,8.355238,0.006447,-0.655904,9.923887,-7.480301,9.405357,-2.318558,-5.257686,-7.004206,-1.707211,2.813455,6.783470,-4.725500,-9.708512,8.654622,5.620509,5.046772,-0.681941,6.582078,-9.674148,-6.122710,5.739570,4.109170,-8.001115,5.553648,-1.574666,-9.985405,-1.807666,-4.069485,8.445982,-3.151437,-6.939189,4.280104,5.052324,-8.093653,-2.324887,5.257967,-0.392410,3.249970,-4.824586,5.235709,9.178312,-4.223276,-6.790973,-9.129505,-2.573536,-6.750649,6.530272,-0.968494,-3.202716,-4.411614,0.197745,-9.848557,-1.952790,7.938031,7.035214,8.481298,-3.428843,-5.660556,-6.062976,-2.829504,-6.455629,-4.071195,-6.620374,-1.557336,0.276337,3.152447,0.564948,-1.888297,3.634413,-0.435234,-7.762935,1.492787,-6.834871,-6.671395,9.779555,0.282309,6.608016,9.339459,-7.166287,6.951551,-5.620943,4.305230,-4.881058,-9.296430,1.231696,-9.603557,-8.082021,-6.523747,-8.717290,-7.155603,4.467475,1.771645,7.519783,-6.858262,-4.302998,7.663602,-4.452303,-7.456925,3.246359,-6.380710,-7.770770,-2.607169,-3.380214,1.939564,9.033906,-2.770275,0.881405,-1.359908,-8.314343,0.432294,-2.566442,-3.848982,6.063996,0.472992,4.775158,6.986311,3.956076,-8.124800,-3.685742,-8.125247,3.756186,-9.274079,-6.917021,3.252366,9.462739,4.851210,-2.649912,-5.511966,0.688615,-5.156678,2.775858,-8.861897,2.841741,-4.021969,-8.161851,-2.446948,-7.887981,-4.283908,3.799489,3.867482,-6.717700,-6.920402,-4.754088,-4.126967,-8.647913,-6.314517,-1.539388,-1.898432,-7.584827,8.259341,8.946401,-4.647857,-0.773129,-5.046225,5.750839,-9.375925,5.508257,-8.386919,6.259569,0.913188,8.001076,3.617757,-7.334197,9.766379,9.800897,1.654248,-1.009338,-6.846163,-7.928585,-2.663255,-8.090744,-2.748011,5.945157,-3.136103,2.380219,1.276046,7.996342,3.264193,-6.819651,-4.028195,5.898417,2.147450,-7.576405,1.961658,-8.642583,-5.604915,-6.461613,-9.869172,7.458276,5.438593,-4.082901,7.865165,7.251154,1.584226,3.871899,3.817006,4.228197,8.051662,-4.728200,2.682023,-2.349244,-5.913442,-7.952658,4.480912,5.992947,-0.914869,0.199611,2.409583,-6.470051,-7.223815,8.591111,6.425283,-0.123768,-2.319330,8.363824,-2.811428,1.883003,-4.456657,1.808347,2.193356,-6.712404,7.617454,9.063786,4.325366,1.939424,1.091005,4.996616,-9.070785,3.293828,5.609435,-6.004353,1.650560,-2.536275,1.364066,4.833103,-4.005135,-5.307109,0.081262,-8.294756,-9.412789,-9.191649,-7.757598,-9.990557,-8.806337,7.296055,-6.856227,0.312326,5.858708,7.123819,9.573289,6.035611,6.019483,1.506679,7.623494,5.357410,-7.664152,-0.906541,9.316942,6.775113,-1.734695,1.230155,-8.620157,-0.333512,-1.176994,-9.337171,-9.676357,5.240601,2.653866,-5.870076,3.012235,-0.513106,-7.326833,-5.908122,1.258478,0.912540,3.414588,-5.327007,6.158454,4.599721,7.548183,1.322408,-8.015157,9.759447,-4.752692,-4.858769,7.091493,2.621861,0.213349,0.552270,7.877721,3.656733,-3.363065,-6.652240,-8.337539,1.050999,8.480841,-1.698632,-1.822551,1.388264,8.161165,-5.007609,9.696538,-6.903294,2.958715,2.039451,-1.867134,2.525171,5.333402,-9.515792,-3.202161,2.310615,0.831341,4.552859,8.305968,-1.764373,-4.200075,5.645419,-1.470907,3.169551,9.171162,-2.327053,8.664239,-5.487999,0.577579,-3.101204,5.959956,9.515294,6.418857,-8.283810,1.221453,-4.498086,5.379538,2.922679,0.784823,6.614218,-0.270311,1.818914,-0.984369,-3.185575,-9.798520,2.325759,-1.938342,-1.770014,7.186016,-0.315841,1.754502,-0.623548,-7.932343,-8.060165,-5.281213,-0.427014,3.003272,-3.749641,-3.226777,2.359234,-3.966041,-4.951230,6.569461,-5.669432,1.447688,-5.316239,1.437936,9.097061,-8.373483,-5.357582,9.217758,4.914437,-8.846722,-1.924529,-4.389501,7.955661,-7.750886,9.834104,3.953471,-1.873001,-8.822795,0.258070,-6.239442,4.814440,3.405377,4.053910,4.331779,4.152202,6.370507,-7.616870,-4.473393,-9.540446,6.954063,-1.645865,4.690099,0.760839,6.696468,-7.865670,2.519179,9.945416,1.584282,4.885770,7.511165,-7.667254,5.642397,4.219549,-0.075057,-0.627599,6.728689,-4.061165,-9.202251,0.305999,2.414856,7.103272,5.662010,6.761321,3.634900,0.656285,1.159172,7.719566,-2.466143,-6.264418,-7.678138,-6.968134,-6.365390,7.983428,-8.085827,-1.417449,-7.147363,-7.704620,-3.162073,-3.046383,6.008511,9.602193,7.862033,4.514212,3.283700,-8.815063,-2.281865,3.677642,-1.977578,5.682924,5.155527,-5.709110,4.386542,-6.951665,-4.487617,-4.642061,-4.785477,-2.387918,-2.858483,-2.214844,-8.177956,-9.136841,3.752865,7.873513], dtype = "float32")#candidate|10036|(770,)|const|float32
call_10035 = relay.TupleGetItem(func_3465_call(relay.reshape(const_10036.astype('float32'), [7, 10, 11]), relay.reshape(const_10036.astype('float32'), [7, 10, 11]), ), 0)
call_10037 = relay.TupleGetItem(func_3468_call(relay.reshape(const_10036.astype('float32'), [7, 10, 11]), relay.reshape(const_10036.astype('float32'), [7, 10, 11]), ), 0)
output = relay.Tuple([call_10025,call_10027,call_10035,const_10036,])
output2 = relay.Tuple([call_10026,call_10028,call_10037,const_10036,])
func_10044 = relay.Function([], output)
mod['func_10044'] = func_10044
mod = relay.transform.InferType()(mod)
output = func_10044()
func_10045 = relay.Function([], output)
mutated_mod['func_10045'] = func_10045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9154_call = mod.get_global_var('func_9154')
func_9156_call = mutated_mod.get_global_var('func_9156')
call_10070 = relay.TupleGetItem(func_9154_call(), 0)
call_10071 = relay.TupleGetItem(func_9156_call(), 0)
output = call_10070
output2 = call_10071
func_10075 = relay.Function([], output)
mod['func_10075'] = func_10075
mod = relay.transform.InferType()(mod)
output = func_10075()
func_10076 = relay.Function([], output)
mutated_mod['func_10076'] = func_10076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8614_call = mod.get_global_var('func_8614')
func_8616_call = mutated_mod.get_global_var('func_8616')
call_10110 = relay.TupleGetItem(func_8614_call(), 2)
call_10111 = relay.TupleGetItem(func_8616_call(), 2)
output = relay.Tuple([call_10110,])
output2 = relay.Tuple([call_10111,])
func_10113 = relay.Function([], output)
mod['func_10113'] = func_10113
mod = relay.transform.InferType()(mod)
mutated_mod['func_10113'] = func_10113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10113_call = mutated_mod.get_global_var('func_10113')
call_10114 = func_10113_call()
output = call_10114
func_10115 = relay.Function([], output)
mutated_mod['func_10115'] = func_10115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5751_call = mod.get_global_var('func_5751')
func_5753_call = mutated_mod.get_global_var('func_5753')
call_10145 = relay.TupleGetItem(func_5751_call(), 0)
call_10146 = relay.TupleGetItem(func_5753_call(), 0)
output = relay.Tuple([call_10145,])
output2 = relay.Tuple([call_10146,])
func_10170 = relay.Function([], output)
mod['func_10170'] = func_10170
mod = relay.transform.InferType()(mod)
mutated_mod['func_10170'] = func_10170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10170_call = mutated_mod.get_global_var('func_10170')
call_10171 = func_10170_call()
output = call_10171
func_10172 = relay.Function([], output)
mutated_mod['func_10172'] = func_10172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mod.get_global_var('func_5729')
func_5731_call = mutated_mod.get_global_var('func_5731')
call_10247 = func_5729_call()
call_10248 = func_5729_call()
func_5980_call = mod.get_global_var('func_5980')
func_5981_call = mutated_mod.get_global_var('func_5981')
call_10255 = relay.TupleGetItem(func_5980_call(), 1)
call_10256 = relay.TupleGetItem(func_5981_call(), 1)
output = relay.Tuple([call_10247,call_10255,])
output2 = relay.Tuple([call_10248,call_10256,])
func_10264 = relay.Function([], output)
mod['func_10264'] = func_10264
mod = relay.transform.InferType()(mod)
output = func_10264()
func_10265 = relay.Function([], output)
mutated_mod['func_10265'] = func_10265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5751_call = mod.get_global_var('func_5751')
func_5753_call = mutated_mod.get_global_var('func_5753')
call_10282 = relay.TupleGetItem(func_5751_call(), 0)
call_10283 = relay.TupleGetItem(func_5753_call(), 0)
output = relay.Tuple([call_10282,])
output2 = relay.Tuple([call_10283,])
func_10310 = relay.Function([], output)
mod['func_10310'] = func_10310
mod = relay.transform.InferType()(mod)
mutated_mod['func_10310'] = func_10310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10310_call = mutated_mod.get_global_var('func_10310')
call_10311 = func_10310_call()
output = call_10311
func_10312 = relay.Function([], output)
mutated_mod['func_10312'] = func_10312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10313 = relay.var("var_10313", dtype = "float64", shape = (2, 11, 15))#candidate|10313|(2, 11, 15)|var|float64
var_10314 = relay.var("var_10314", dtype = "float64", shape = (2, 11, 15))#candidate|10314|(2, 11, 15)|var|float64
bop_10315 = relay.add(var_10313.astype('float64'), relay.reshape(var_10314.astype('float64'), relay.shape_of(var_10313))) # shape=(2, 11, 15)
func_10044_call = mod.get_global_var('func_10044')
func_10045_call = mutated_mod.get_global_var('func_10045')
call_10327 = relay.TupleGetItem(func_10044_call(), 2)
call_10328 = relay.TupleGetItem(func_10045_call(), 2)
bop_10343 = relay.bitwise_and(bop_10315.astype('int32'), relay.reshape(var_10313.astype('int32'), relay.shape_of(bop_10315))) # shape=(2, 11, 15)
output = relay.Tuple([call_10327,bop_10343,])
output2 = relay.Tuple([call_10328,bop_10343,])
func_10346 = relay.Function([var_10313,var_10314,], output)
mod['func_10346'] = func_10346
mod = relay.transform.InferType()(mod)
var_10347 = relay.var("var_10347", dtype = "float64", shape = (2, 11, 15))#candidate|10347|(2, 11, 15)|var|float64
var_10348 = relay.var("var_10348", dtype = "float64", shape = (2, 11, 15))#candidate|10348|(2, 11, 15)|var|float64
output = func_10346(var_10347,var_10348,)
func_10349 = relay.Function([var_10347,var_10348,], output)
mutated_mod['func_10349'] = func_10349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9893_call = mod.get_global_var('func_9893')
func_9894_call = mutated_mod.get_global_var('func_9894')
call_10367 = relay.TupleGetItem(func_9893_call(), 3)
call_10368 = relay.TupleGetItem(func_9894_call(), 3)
uop_10373 = relay.atanh(call_10367.astype('float32')) # shape=(6, 27)
uop_10375 = relay.atanh(call_10368.astype('float32')) # shape=(6, 27)
func_8940_call = mod.get_global_var('func_8940')
func_8942_call = mutated_mod.get_global_var('func_8942')
call_10376 = relay.TupleGetItem(func_8940_call(), 0)
call_10377 = relay.TupleGetItem(func_8942_call(), 0)
output = relay.Tuple([uop_10373,call_10376,])
output2 = relay.Tuple([uop_10375,call_10377,])
func_10380 = relay.Function([], output)
mod['func_10380'] = func_10380
mod = relay.transform.InferType()(mod)
output = func_10380()
func_10381 = relay.Function([], output)
mutated_mod['func_10381'] = func_10381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10113_call = mod.get_global_var('func_10113')
func_10115_call = mutated_mod.get_global_var('func_10115')
call_10390 = relay.TupleGetItem(func_10113_call(), 0)
call_10391 = relay.TupleGetItem(func_10115_call(), 0)
output = relay.Tuple([call_10390,])
output2 = relay.Tuple([call_10391,])
func_10404 = relay.Function([], output)
mod['func_10404'] = func_10404
mod = relay.transform.InferType()(mod)
output = func_10404()
func_10405 = relay.Function([], output)
mutated_mod['func_10405'] = func_10405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mod.get_global_var('func_3757')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_10465 = relay.TupleGetItem(func_3757_call(), 0)
call_10466 = relay.TupleGetItem(func_3759_call(), 0)
func_8058_call = mod.get_global_var('func_8058')
func_8060_call = mutated_mod.get_global_var('func_8060')
call_10484 = func_8058_call()
call_10485 = func_8058_call()
func_5687_call = mod.get_global_var('func_5687')
func_5690_call = mutated_mod.get_global_var('func_5690')
var_10490 = relay.var("var_10490", dtype = "uint32", shape = (420,))#candidate|10490|(420,)|var|uint32
call_10489 = relay.TupleGetItem(func_5687_call(relay.reshape(var_10490.astype('uint32'), [420, 1])), 2)
call_10491 = relay.TupleGetItem(func_5690_call(relay.reshape(var_10490.astype('uint32'), [420, 1])), 2)
func_3522_call = mod.get_global_var('func_3522')
func_3525_call = mutated_mod.get_global_var('func_3525')
var_10497 = relay.var("var_10497", dtype = "int16", shape = (1, 24))#candidate|10497|(1, 24)|var|int16
call_10496 = relay.TupleGetItem(func_3522_call(relay.reshape(var_10497.astype('int16'), [1, 8, 3])), 0)
call_10498 = relay.TupleGetItem(func_3525_call(relay.reshape(var_10497.astype('int16'), [1, 8, 3])), 0)
func_9154_call = mod.get_global_var('func_9154')
func_9156_call = mutated_mod.get_global_var('func_9156')
call_10504 = relay.TupleGetItem(func_9154_call(), 0)
call_10505 = relay.TupleGetItem(func_9156_call(), 0)
output = relay.Tuple([call_10465,call_10484,call_10489,var_10490,call_10496,var_10497,call_10504,])
output2 = relay.Tuple([call_10466,call_10485,call_10491,var_10490,call_10498,var_10497,call_10505,])
func_10510 = relay.Function([var_10490,var_10497,], output)
mod['func_10510'] = func_10510
mod = relay.transform.InferType()(mod)
var_10511 = relay.var("var_10511", dtype = "uint32", shape = (420,))#candidate|10511|(420,)|var|uint32
var_10512 = relay.var("var_10512", dtype = "int16", shape = (1, 24))#candidate|10512|(1, 24)|var|int16
output = func_10510(var_10511,var_10512,)
func_10513 = relay.Function([var_10511,var_10512,], output)
mutated_mod['func_10513'] = func_10513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9856_call = mod.get_global_var('func_9856')
func_9858_call = mutated_mod.get_global_var('func_9858')
call_10515 = func_9856_call()
call_10516 = func_9856_call()
func_3858_call = mod.get_global_var('func_3858')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_10521 = relay.TupleGetItem(func_3858_call(), 0)
call_10522 = relay.TupleGetItem(func_3859_call(), 0)
output = relay.Tuple([call_10515,call_10521,])
output2 = relay.Tuple([call_10516,call_10522,])
func_10527 = relay.Function([], output)
mod['func_10527'] = func_10527
mod = relay.transform.InferType()(mod)
output = func_10527()
func_10528 = relay.Function([], output)
mutated_mod['func_10528'] = func_10528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6178_call = mod.get_global_var('func_6178')
func_6179_call = mutated_mod.get_global_var('func_6179')
call_10593 = relay.TupleGetItem(func_6178_call(), 1)
call_10594 = relay.TupleGetItem(func_6179_call(), 1)
output = relay.Tuple([call_10593,])
output2 = relay.Tuple([call_10594,])
func_10595 = relay.Function([], output)
mod['func_10595'] = func_10595
mod = relay.transform.InferType()(mod)
output = func_10595()
func_10596 = relay.Function([], output)
mutated_mod['func_10596'] = func_10596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7883_call = mod.get_global_var('func_7883')
func_7885_call = mutated_mod.get_global_var('func_7885')
call_10628 = func_7883_call()
call_10629 = func_7883_call()
output = call_10628
output2 = call_10629
func_10632 = relay.Function([], output)
mod['func_10632'] = func_10632
mod = relay.transform.InferType()(mod)
mutated_mod['func_10632'] = func_10632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10632_call = mutated_mod.get_global_var('func_10632')
call_10633 = func_10632_call()
output = call_10633
func_10634 = relay.Function([], output)
mutated_mod['func_10634'] = func_10634
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10766 = relay.const([[[-1.565718,-3.692255,-3.081335,1.169835,8.031256,-5.773033,-6.159925,8.231017,5.537864,-4.901528,9.544943],[9.278017,6.135060,7.823926,-0.424710,2.166794,1.745860,7.862168,-9.122445,2.695619,-5.657338,-7.380069],[7.331584,-2.098022,-9.503622,-7.371741,-3.817723,7.573346,6.138894,-8.309572,0.244852,-0.614148,9.469443],[-8.155098,2.314596,5.435969,9.391651,-1.261342,-8.834522,5.381958,1.707221,-7.855575,8.077895,1.123210]],[[-1.943214,0.553471,6.980914,6.376336,4.276072,-1.658119,4.118921,-0.893163,-6.719029,7.680168,2.184369],[8.815460,-5.052274,-3.745906,-5.345092,-4.032634,-7.903741,-9.733168,3.840634,-8.804224,-9.200820,1.235933],[0.136303,-7.979263,-5.792155,-3.399615,1.157229,-3.624087,7.328039,7.737528,-0.928234,5.749141,0.684160],[-0.636327,6.233507,4.706880,-1.935545,0.680384,-9.758228,5.410116,4.126470,1.985316,5.653012,-3.562259]],[[-1.827192,-8.803705,2.324577,2.762216,-1.842626,9.940840,8.924002,7.424197,-2.567155,6.362375,-3.644897],[4.322356,-9.432974,-8.208762,0.875663,-2.764943,1.590825,-2.252199,-0.570346,8.013105,-6.051438,-6.135175],[-7.473877,4.975802,-0.392164,4.955874,2.986628,-2.490828,3.227783,4.964722,8.802474,1.577466,4.205864],[1.777883,0.740279,-5.826408,-4.460042,3.165824,-9.585371,3.110175,5.103719,5.602265,5.439594,-9.429103]],[[9.821828,7.423581,-4.348369,3.785217,7.068886,7.300461,5.486059,-9.789950,1.192726,-9.095178,-8.223944],[-8.378539,7.872648,-7.239379,-2.681493,2.178257,-3.653584,-2.276441,5.834771,-7.030416,2.578137,-2.577814],[0.322863,-2.407700,-8.362834,-9.937920,-4.665041,0.714443,3.673084,-7.363749,-5.868810,7.422926,0.850588],[1.021514,7.806422,9.201320,-2.142440,6.679751,-8.781855,-9.523953,0.276835,8.271307,0.938630,7.642231]],[[-4.650007,-3.231897,9.672631,2.756981,-5.657653,-8.849021,3.233006,-2.015203,0.850285,6.495998,8.250435],[-5.919301,3.652606,-5.939822,-0.068168,2.000699,0.068343,-3.194705,3.063109,2.183202,-4.929970,6.214665],[2.297771,3.725536,1.154996,-0.549290,-6.582470,7.513297,-8.294806,1.784858,3.789284,9.020133,-9.614785],[-6.526360,-8.857826,4.597820,2.938518,-9.534463,-0.050054,0.199774,-4.907477,-3.706713,-5.814671,-8.785531]],[[0.381373,-8.594027,-6.267133,-1.114247,1.864189,-8.158928,-9.662906,-5.032197,-6.660481,1.177585,4.404471],[2.726192,-7.517535,-0.928892,8.236637,-3.301453,-4.850789,-1.270492,-8.683296,-9.506648,5.478241,0.687900],[-1.762025,2.767030,-6.269085,-5.570647,1.998329,-7.826650,7.066704,-0.849459,3.294868,-7.164962,4.922491],[9.592498,1.249691,3.846117,-8.385986,-3.242178,0.428804,-3.903759,-0.187884,2.117487,-4.694469,-1.731089]],[[-4.059571,-6.703271,1.385548,-6.874126,2.776779,-9.456239,9.391481,0.712407,9.263721,-5.036306,9.136860],[-0.651435,7.691860,5.400707,0.026197,-5.303366,6.333140,-1.601871,1.906301,0.464423,-5.191072,5.614791],[-7.641290,3.004146,-5.079104,-0.147826,-3.334516,-3.747194,-3.259313,4.564232,5.848936,9.043060,5.952441],[3.918505,-3.562555,5.214382,-1.426252,-7.415302,-3.578505,-4.301578,-0.432831,-7.940043,-2.810530,-9.928461]],[[1.470030,-7.867568,2.505752,8.673978,5.669682,4.111214,2.309448,-0.341803,2.743353,-6.447063,9.810222],[3.981001,4.278759,-9.094106,-3.890646,-4.926858,4.597478,-4.600620,9.910042,3.967324,-3.994015,-1.924939],[4.627363,7.435685,-8.771188,-3.819437,5.740342,4.700982,-3.146795,-6.099834,-1.433262,-8.944542,6.144547],[1.604707,-6.100104,-6.937272,2.834462,-2.947341,6.404298,-4.264818,-9.877826,4.302093,-1.207878,-6.572130]]], dtype = "float32")#candidate|10766|(8, 4, 11)|const|float32
uop_10767 = relay.sin(const_10766.astype('float32')) # shape=(8, 4, 11)
func_6355_call = mod.get_global_var('func_6355')
func_6356_call = mutated_mod.get_global_var('func_6356')
call_10771 = relay.TupleGetItem(func_6355_call(), 0)
call_10772 = relay.TupleGetItem(func_6356_call(), 0)
func_8831_call = mod.get_global_var('func_8831')
func_8832_call = mutated_mod.get_global_var('func_8832')
call_10776 = relay.TupleGetItem(func_8831_call(), 0)
call_10777 = relay.TupleGetItem(func_8832_call(), 0)
func_9171_call = mod.get_global_var('func_9171')
func_9172_call = mutated_mod.get_global_var('func_9172')
call_10786 = relay.TupleGetItem(func_9171_call(), 0)
call_10787 = relay.TupleGetItem(func_9172_call(), 0)
uop_10790 = relay.exp(uop_10767.astype('float32')) # shape=(8, 4, 11)
func_10595_call = mod.get_global_var('func_10595')
func_10596_call = mutated_mod.get_global_var('func_10596')
call_10796 = relay.TupleGetItem(func_10595_call(), 0)
call_10797 = relay.TupleGetItem(func_10596_call(), 0)
func_7564_call = mod.get_global_var('func_7564')
func_7567_call = mutated_mod.get_global_var('func_7567')
const_10804 = relay.const([[10,9,1,-9,5,-3,-1,1,-4,-5,-3,-5,4,8,-3,3,-6,-1,-8,-8,-10,-7,-3,7,9,2,-2,4,4,-3,-2,4,9,-7,-6,1,-7,-6,-1,8,6,-1,-6,6,4,-6,-6,-8,-6,3,9,-7,-4,-7,-8,2,-4,2,-7,7,-10,10,5,-10,-3,4,-6,-10,-6,5,9,-7,2,2,-2,3,-4,-5,-2,-2,9,-9,-7,-5,-4,-8,-10,8,8,1,9,-9,6,-1,-10,-3,1,4,-1,-2,1,-9,-6,-3,5,2,8,6,-7,4,4,-8,1,4,5,8,7],[-9,4,-5,5,-4,3,1,-9,-9,4,7,-1,7,8,-2,-3,-5,-2,-6,2,-4,-10,-4,9,3,3,9,2,10,1,4,-4,9,-3,-6,4,9,4,4,-9,9,6,5,-5,-7,-6,2,-10,-7,7,8,-3,7,2,-3,8,-2,3,2,2,-6,-10,10,7,-5,-1,8,-1,1,6,-6,-7,9,-8,8,2,-2,-10,6,-2,-4,3,-4,6,-10,9,-9,6,6,10,-8,8,7,-2,5,-4,-4,-2,-5,-4,-1,3,-1,7,-5,-1,-3,10,-7,3,-8,-3,-7,-3,-3,7,1],[-3,9,10,-1,4,10,-4,-8,-10,-7,9,6,-4,8,-5,1,1,-10,-3,-2,4,1,-10,6,-3,3,-5,-3,-9,2,2,-2,5,-4,2,5,1,-6,3,2,-3,10,-3,-8,-6,4,6,-10,7,-9,-3,7,-10,-6,-4,-1,-1,-4,-5,-7,-5,-10,-9,3,-6,7,9,-3,6,2,-8,-7,-5,5,5,5,-7,10,5,1,8,-3,1,-3,-7,-9,9,8,-6,8,-7,1,7,-9,7,-6,-10,-1,6,10,-9,10,4,4,3,3,-2,-5,6,-3,-5,-9,7,8,3,9,-8],[2,9,1,-7,-3,9,-9,-1,9,1,-3,-7,4,-8,4,3,7,3,5,2,-10,-5,7,1,-2,-5,1,-5,-4,7,10,-5,2,-4,-7,-5,9,-3,-6,4,7,4,-5,-10,-3,-8,-6,9,-10,-7,1,-1,-3,-9,-1,8,6,3,-4,-10,-3,-1,3,9,3,10,9,6,-10,-3,-2,8,-7,-1,7,8,-2,-8,-7,8,-2,-5,4,7,10,4,2,-2,-2,-10,4,8,4,-1,-1,-4,9,-8,-3,-6,6,5,-9,-7,-9,1,-4,9,3,3,-1,8,6,-3,-10,4,-9],[4,-7,1,9,-1,-1,4,-2,-9,-6,3,3,-3,-6,-1,-7,5,7,9,-9,10,1,-5,3,-6,-9,10,-8,6,-1,1,1,1,-3,5,-3,4,-1,8,1,4,4,3,-9,6,-8,-10,-4,-9,3,10,9,1,3,7,-3,7,4,-9,-10,7,-5,-7,9,-7,9,8,1,9,9,1,6,-9,-7,5,7,-3,8,1,-5,-10,6,-4,9,5,9,10,-2,-8,-1,-6,7,-3,1,-4,4,3,-4,-9,8,3,-9,-7,-3,-2,9,5,7,-5,-1,5,5,-5,2,-3,9,-2],[-8,1,-3,8,-1,10,-2,-4,-3,8,6,-8,9,-9,-7,9,9,9,-5,3,-1,-1,7,-5,4,-10,-7,9,8,-8,-10,-10,-9,10,-7,9,6,-10,7,5,9,4,-4,5,4,6,-10,-2,5,-2,-6,10,-3,7,8,-3,-9,-4,-1,-4,-2,-8,7,1,3,6,-6,-1,9,-1,2,-3,-3,4,5,9,-8,-10,-7,9,-6,-9,-3,3,10,8,-2,-5,-7,-8,-6,-2,4,-9,4,-2,5,3,2,10,2,6,-7,8,9,-10,3,-9,-5,7,-8,-10,-10,1,-10,6,6],[-7,-2,-1,-1,3,-5,2,-3,-9,-7,4,-3,1,-5,-7,-10,6,-9,2,7,5,-10,-2,-5,-3,-4,-10,-3,10,10,1,-2,-2,5,3,1,-6,5,3,-10,2,3,-1,-5,-6,-8,4,3,1,2,-2,1,4,-7,-6,3,-3,4,-5,-6,-5,-8,-6,-7,-1,-10,9,-2,-7,-10,-9,5,-9,7,7,7,-10,2,-3,3,-7,-8,6,9,-10,8,-2,-1,-1,9,4,1,8,-9,2,7,-5,-6,-5,-4,-6,4,7,-10,-8,8,2,5,3,-1,6,-4,2,-1,5,-2,10],[-8,3,-7,7,-2,-5,9,1,-2,-7,-7,6,-6,5,-1,-3,-4,-9,9,6,-4,-10,-8,-2,-7,7,-8,4,-4,-1,4,8,-4,6,-2,7,-3,9,-8,-2,-10,1,-1,-3,1,-2,9,10,-6,9,1,3,10,7,-5,-3,9,-4,-6,-7,-2,-2,10,6,-2,-3,-8,-9,10,-8,-7,1,-2,8,5,-7,-6,-10,4,-2,1,-1,4,9,6,-3,8,-10,-1,10,-6,5,-9,10,-8,-2,-10,10,-3,-9,8,-3,-6,-7,-3,-6,-8,-3,-3,2,7,-2,7,10,3,-2,-3],[-7,9,-9,1,-3,4,5,9,1,-1,1,-9,1,-4,2,9,-8,3,3,1,-4,2,-4,-7,6,-2,-8,-10,2,4,-1,5,-3,7,4,-4,4,-8,-6,7,-4,1,-9,-3,-4,9,1,-5,4,-2,9,-9,-1,-5,-3,-1,1,-1,2,5,4,-3,10,9,1,4,-9,-5,1,9,10,3,1,-4,-1,-9,3,-7,-10,-6,-10,-1,5,-1,-5,2,-10,9,-2,-4,-1,5,-5,-6,-1,-7,5,1,-5,-8,-3,-6,-9,4,-9,2,3,6,2,-4,6,-5,9,-5,-10,-5,-5],[-6,7,4,8,9,-3,-1,9,-7,7,8,-10,2,-5,-3,-9,5,-8,-3,-6,10,-7,4,4,-3,-7,-9,-5,7,8,-2,-8,5,5,2,2,1,-1,-7,10,8,-2,-4,-7,-9,-10,4,-6,-2,6,-2,-6,-8,-10,1,-5,-7,5,-6,-2,-9,-3,-2,9,10,8,4,7,-10,-6,-8,10,-10,5,-7,-10,-1,1,-2,7,-8,7,10,3,-2,-1,-2,4,-3,-9,-7,-1,1,-2,-2,6,6,1,9,6,-3,-10,7,6,-6,-4,-3,1,-5,-7,-4,7,8,7,-2,-7,-1],[1,-4,10,3,2,7,9,8,10,-1,-5,-9,-6,-5,-7,1,-4,4,-4,-6,-2,-2,8,7,6,-7,6,-1,-6,-5,-5,-10,3,3,-2,6,3,-4,-9,-8,-8,-4,-2,5,5,10,8,9,7,-9,-10,-2,-4,-5,-9,8,10,2,-10,8,8,-3,2,-8,-3,-8,3,-7,8,1,-5,-5,-10,-6,3,-6,-4,9,-1,6,5,9,4,6,10,-9,4,-9,-10,-9,-1,-8,-3,2,2,-10,-2,7,-6,1,-10,-10,-6,-1,6,-1,-4,-3,-6,3,-2,6,-3,-3,-6,5,-5]], dtype = "int8")#candidate|10804|(11, 117)|const|int8
call_10803 = relay.TupleGetItem(func_7564_call(relay.reshape(const_10804.astype('int8'), [13, 9, 11]), relay.reshape(const_10804.astype('int8'), [13, 9, 11]), ), 1)
call_10805 = relay.TupleGetItem(func_7567_call(relay.reshape(const_10804.astype('int8'), [13, 9, 11]), relay.reshape(const_10804.astype('int8'), [13, 9, 11]), ), 1)
uop_10807 = relay.atanh(uop_10790.astype('float32')) # shape=(8, 4, 11)
output = relay.Tuple([call_10771,call_10776,call_10786,call_10796,call_10803,const_10804,uop_10807,])
output2 = relay.Tuple([call_10772,call_10777,call_10787,call_10797,call_10805,const_10804,uop_10807,])
func_10810 = relay.Function([], output)
mod['func_10810'] = func_10810
mod = relay.transform.InferType()(mod)
output = func_10810()
func_10811 = relay.Function([], output)
mutated_mod['func_10811'] = func_10811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6404_call = mod.get_global_var('func_6404')
func_6405_call = mutated_mod.get_global_var('func_6405')
call_10824 = relay.TupleGetItem(func_6404_call(), 0)
call_10825 = relay.TupleGetItem(func_6405_call(), 0)
func_8820_call = mod.get_global_var('func_8820')
func_8821_call = mutated_mod.get_global_var('func_8821')
call_10833 = relay.TupleGetItem(func_8820_call(), 1)
call_10834 = relay.TupleGetItem(func_8821_call(), 1)
output = relay.Tuple([call_10824,call_10833,])
output2 = relay.Tuple([call_10825,call_10834,])
func_10842 = relay.Function([], output)
mod['func_10842'] = func_10842
mod = relay.transform.InferType()(mod)
output = func_10842()
func_10843 = relay.Function([], output)
mutated_mod['func_10843'] = func_10843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5588_call = mod.get_global_var('func_5588')
func_5590_call = mutated_mod.get_global_var('func_5590')
call_10847 = relay.TupleGetItem(func_5588_call(), 0)
call_10848 = relay.TupleGetItem(func_5590_call(), 0)
func_8455_call = mod.get_global_var('func_8455')
func_8457_call = mutated_mod.get_global_var('func_8457')
call_10850 = relay.TupleGetItem(func_8455_call(), 1)
call_10851 = relay.TupleGetItem(func_8457_call(), 1)
output = relay.Tuple([call_10847,call_10850,])
output2 = relay.Tuple([call_10848,call_10851,])
func_10852 = relay.Function([], output)
mod['func_10852'] = func_10852
mod = relay.transform.InferType()(mod)
mutated_mod['func_10852'] = func_10852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10852_call = mutated_mod.get_global_var('func_10852')
call_10853 = func_10852_call()
output = call_10853
func_10854 = relay.Function([], output)
mutated_mod['func_10854'] = func_10854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6659_call = mod.get_global_var('func_6659')
func_6660_call = mutated_mod.get_global_var('func_6660')
call_10858 = relay.TupleGetItem(func_6659_call(), 0)
call_10859 = relay.TupleGetItem(func_6660_call(), 0)
func_2264_call = mod.get_global_var('func_2264')
func_2270_call = mutated_mod.get_global_var('func_2270')
const_10869 = relay.const([[True,False,True,True,False,False,False,False]], dtype = "bool")#candidate|10869|(1, 8)|const|bool
const_10870 = relay.const([True,True,False,True,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,True], dtype = "bool")#candidate|10870|(88,)|const|bool
var_10871 = relay.var("var_10871", dtype = "float64", shape = (70, 4))#candidate|10871|(70, 4)|var|float64
var_10872 = relay.var("var_10872", dtype = "float32", shape = (14, 78))#candidate|10872|(14, 78)|var|float32
call_10868 = relay.TupleGetItem(func_2264_call(relay.reshape(const_10869.astype('bool'), [2, 4, 1]), relay.reshape(const_10870.astype('bool'), [2, 4, 11]), relay.reshape(var_10871.astype('float64'), [280,]), relay.reshape(var_10872.astype('float32'), [1092,]), ), 7)
call_10873 = relay.TupleGetItem(func_2270_call(relay.reshape(const_10869.astype('bool'), [2, 4, 1]), relay.reshape(const_10870.astype('bool'), [2, 4, 11]), relay.reshape(var_10871.astype('float64'), [280,]), relay.reshape(var_10872.astype('float32'), [1092,]), ), 7)
func_6231_call = mod.get_global_var('func_6231')
func_6233_call = mutated_mod.get_global_var('func_6233')
call_10876 = relay.TupleGetItem(func_6231_call(), 1)
call_10877 = relay.TupleGetItem(func_6233_call(), 1)
func_4994_call = mod.get_global_var('func_4994')
func_4998_call = mutated_mod.get_global_var('func_4998')
const_10879 = relay.const([-9,-4,2,-9,-7,-9,-9,7,8,-2,2,-5,-4,1,3,3,-2,4,-10,4,5,6,2,-7], dtype = "int16")#candidate|10879|(24,)|const|int16
const_10880 = relay.const([2.137011,-6.234768,-3.788421,8.184942,-7.864934,-8.159517,4.824089,-6.392696,-1.499512,9.990732,4.859113,-1.964290,1.457098,-0.754857,-7.282164,-0.125162,9.040074,4.477861,5.865446,-7.781720,4.235504,8.195501,-8.392067,8.321749,5.428063,-4.119111,7.829355,-7.596146,5.917208,0.494272,6.651927,1.033873,2.708336,5.631435,-1.102881,-8.030152,-1.743878,-5.120088,9.042505,9.962291,-0.456056,8.505581,-0.985397,-1.319413,4.448338,9.615106,9.647205,3.012459,-2.141474,0.157705,-9.739819,-8.632921,7.739860,-6.472759,-3.493566,1.723339,0.062790,-4.221581,-5.360521,5.098770,6.513814,0.677792,5.635736,5.735493,7.774917,-9.100341,-3.262299,-6.601586,8.958695,-4.235561,-8.768204,-9.478365,8.860639,5.650946,1.059582,6.097791,-0.744502,2.074655,9.827065,5.145442,5.962546,-2.429719,-6.218600,0.469684,0.248351,-4.690006,-2.947840,0.323909,4.659526,9.706205,4.763101,4.714756,3.331201,-4.845434,3.118754,1.091030,2.779325,-4.149132,-0.377482,-4.225048,-6.840362,8.204179,3.453921,-6.475646,-3.466295,-2.977854,-5.995375,3.344880,-0.435356,-8.652968,7.411683,1.125102,5.049058,-0.328556,6.351999,-7.380361,5.021152,-7.857260,-5.722393,-0.673815,0.875147,8.278107,-0.669584,7.807112,-0.266135,3.248962,-1.211784,-6.172867,-3.955991,5.035975,0.272079,0.181970,-5.750554,-7.345191,-0.074987,7.676693,9.421569,0.916335,2.537881,-3.273334,-8.822255,9.946021,-4.459863,8.163085,-1.951581,5.422316,-1.315265,9.725552,-8.419469,6.108330,-0.578373,-1.847213,4.026211,5.634340,7.265317,-8.343091,5.948291,-5.988980,-2.345933,2.372744,-7.160325,-0.080346,0.678010,9.515621,0.725681,4.804458,7.180079,3.251572,7.357711,6.409271,7.610337,1.522740,6.490585,-4.060682,2.548750,9.644839,-5.724560,-6.769250,8.244368,-6.187161,-3.003350,-8.496691,2.658936,9.238048,-4.757146,4.797325,-3.745245,6.953912,-5.293780,8.836925,5.478199,-3.917328,6.284681,3.200804,-8.683582,0.177408,3.530380,5.985804,-1.034362,-6.912768,6.583338,-8.298572,-1.541823,-0.378092,0.485526,-1.964600,-2.739250,5.550053,6.958678,-5.098928,-0.142313,-2.708254,5.522278,-9.372265,-9.654363,-8.485664,1.854239,-4.428105,-2.011379,-8.517909,-9.507821,-2.474368,4.942227,-5.778600,4.865637,3.347941,1.268965,4.118754,4.554183,-8.806490,-7.254655,6.038619,6.215307,5.912792,-7.217656,5.910142,-3.214548,7.089957,2.515739,-0.022642,-5.305674,-1.185597,-9.777699,-4.836893,-0.754802,4.804892,-2.278503,-5.730298,-5.260475,8.731908,1.144677,-0.730222,7.280374,-4.669099,1.625934,3.574971,-7.721623,4.656089,1.736488,-2.770319,-1.864101,9.689181,-9.913712,-8.102479,1.781620,-4.265283,2.845194,7.388296,-2.019090,3.133894,-1.500654,-8.945321,0.336895,0.566275,7.904091,-8.706181,-0.668623,-7.732378,2.236128,2.173382,6.856857,6.628357,-1.317389,2.438499,-8.426649,3.141391,8.795489,5.015511,1.451991,8.071987,-4.275151,8.932026,2.634737,-4.755054,-7.380330,-3.408352,0.008002,-3.357161,-3.304738,-9.336941,7.326071,2.531841,6.873689,1.266937,-1.340243,-4.559737,-7.775798,4.383013,3.737715,-7.489492,3.918259,1.245701,-0.690603,4.189236,4.504816,-8.021872,6.384682,0.252484,-2.111586,0.927961,-9.855854,-5.951758,2.759364,-9.716689,4.779968,7.657285,9.101817,7.928346,-0.242427,-2.747839,-9.054217,-4.321247,4.685120,8.407112,-2.993875,-2.873851,-7.803987,9.708620,-1.359851,-7.865368,-7.326585,-3.244453,1.911751,-3.021325,-6.021204,0.314197,8.956341,-6.052868,-2.119113,-3.146058,7.718961,6.364068,2.076526,5.782348,-5.874278,7.576126,1.711110,1.295511,4.769846,3.959824,-5.264157,4.778775,-9.498434,-5.477342,3.759396,-5.744520,3.569934,-2.453402,-1.740373,-5.434719,2.170699,-6.399854,-6.221658,2.744141,4.169081,1.381905,-6.454360,9.894926,5.212647,9.940643,-5.098406,2.209306,7.047731,2.313050,2.408612,-9.886853,8.836149,-5.494418,-9.999544,-8.035503,-9.164542,-4.735743,-5.745398,1.155816,1.236268,-5.387249,-3.097556,-0.268552,4.834246,-9.649003,6.542103,1.200274,4.599127,-5.734954,-9.261473,6.335501,9.829436,3.889296,0.374959,6.445093,1.813370,-2.046464,8.137965,9.787738,-7.757209,2.658631,-7.056153,2.727308,-6.552967,-3.214288,-7.216889,1.086594,2.294870,6.733657,-4.454056,3.321126,-2.652852,6.460984,-9.226406,-8.622016,-7.840630,6.750403,-5.887250,-6.655222,-5.979346,9.017619,-3.869205,-6.503795,3.087219,-3.982076,-3.593600,7.997688,-6.796569,-6.385752,5.251662,0.053063,1.578944,2.208415,6.148613,-0.736367,-5.513478,-3.491260,5.048481,-5.476820,-3.111820,-5.497043,-8.722921,7.701667,-2.518735,-7.173659,-0.877250,-1.251586,-1.492627,-5.046672,6.525917,1.016896,-8.223171,1.775208,8.719272,4.830371,-2.013971,-3.008598,8.931904,4.976783,-1.106888,-9.779361,-3.519787,-5.917695,-8.087466,-3.191755,2.500963,7.361275,-7.147215,4.436429,-0.596973,9.474191,-0.230996,0.016519,-7.912760,-4.122928,-1.946228,0.085916,9.980586,8.249478,-3.530704,4.966669,-2.893740,-7.202627,7.893507,-1.727201,-6.230863,0.865624,6.260917,-7.662191], dtype = "float32")#candidate|10880|(504,)|const|float32
call_10878 = relay.TupleGetItem(func_4994_call(relay.reshape(const_10879.astype('int16'), [24,]), relay.reshape(const_10880.astype('float32'), [504,]), ), 0)
call_10881 = relay.TupleGetItem(func_4998_call(relay.reshape(const_10879.astype('int16'), [24,]), relay.reshape(const_10880.astype('float32'), [504,]), ), 0)
func_5751_call = mod.get_global_var('func_5751')
func_5753_call = mutated_mod.get_global_var('func_5753')
call_10886 = relay.TupleGetItem(func_5751_call(), 0)
call_10887 = relay.TupleGetItem(func_5753_call(), 0)
func_7693_call = mod.get_global_var('func_7693')
func_7695_call = mutated_mod.get_global_var('func_7695')
const_10889 = relay.const([-4,-6,-8,-8,-6,-10,1,9,-9,-7,3,8,-9,-4,-2,3,-5,6,-7,10,5,8,-8,-3,1,7,-5,10,9,-3,3,1,-6,9,-3,9,-3,-5,3,-5,8,-6,10,-5,2,-3,3,-2,1,2,-2,-2,-7,-5,5,-3,-5,-3,9,-5,-7,5,-10,-7,-10,-7,-2,-9,-7,9,6,2,3,6,5,-2,-8,2,-3,1,10,8,-6,-10,1,3,-3,7,-4,7,-2,2,3,-10,-5,-2,6,6,4,4,-9,-3,6,6,2,-9,-10,6,7,2,6,6,3,-5,9,-4,-8,9,-4,-6,-8,-1,-8,-6,3,-6,1,1,3,2,-7,2,-1,1,-8,2,-4,6,1,8,9,3,5,5,1,-1,4,-6,-4,2,6,8,10,3,-8,-7,6,-9,5,-10,-3,-7,-4,-4,3,-10,4,10,-6,5,-5,-10,-2,1,-3,8,-2,5,-9,4,-6,3,-4,4,-8,-3,3,6,-10,-5,-8,1,9,5,6,1,4,4,9,-8,-8,1,-4,-9,4,9,8,-1,7,-6,-5,-7,-3,7,-10,8,-7,9,8,6,-3,-5,7,7,-1,-9,10,-5,6,2,8,3,-2,7,-2,1,7,6,1,-8,-4,9,10,6,8,3,1,3,10,-1,-2,10,8,1,-9,10,-5,-9,4,2,-5,-2,-1,-8,-5,-5,-1,4,1,9,-6,5,-9,-8,-2,-7,-7,3,-3,3,2,-5,-3,4,-6,-7,-1,6,9,-5,8,9,-2,-7,7,-3,8,-4,6,-8,-9,7,-7,10,-10,-8,8,6,-4,-2,-3,-10,2,-3,-9,3,3,-10,4,8,-6,2,8,3,-1,2,10,4,-7,-4,-5,6,6,8,-7,-4,5,-8,-4,-4,6,8,10,-9,6,-5,10,-8,-9,-10,5,1,2,2,8,10,1,-9,-7,-8,-4,5,-4,4,-1,2,-8,3,-2,-5,-10,6,2,-2,6,3,5,-5,1,4,4,6,-1,-10,-6,3,10,7,5,-1,3,2,-2,-9,-8,2,1,2,1,-4,8,2,9,10,-1,6,4,2,-6,-6,-5,4,10,-9,1,7,1,7,-1,5,-7,7,-10,7,1,-10,-6,4,4,7,7,5,3,9,1,9,-4,3,-7,-1,6,7,-8,7,2,-7,6,-8,-6,-7,10,8,4,9,-2,10,-4,9,5,3,-8,10,-2,6,-5,6,-9,-9,-4,4,1,-3,10,6,-7,-7,-9,2,-3,-1,1,4,-4,5,-3,5,3,-10,9,10,-5,1,-4,-7,-1,-5,-6,4,-2,-7,8,-1,-9,5,7,3,2,5,-9,5,9,-4,-9,-6,-5,-9,6,-5,-1,4,-6,9,3,6,-4,-3,10,-1,-4,-3,-1,-4,-2,-1,-9,-2,-4,-5,-5,-8,-3,-4,-8,4,-2,-3,-9,10,-9,-4,-10,3,9,8,10,-5,-8,-8,5,-10,-10,2,3,-1,-6,9,3,-7,-4,6,-4,-9,-9,-1,-10,3,-6,-1,8,-1,7,10,6,2,-4], dtype = "int8")#candidate|10889|(585,)|const|int8
call_10888 = relay.TupleGetItem(func_7693_call(relay.reshape(const_10889.astype('int8'), [585,])), 2)
call_10890 = relay.TupleGetItem(func_7695_call(relay.reshape(const_10889.astype('int8'), [585,])), 2)
output = relay.Tuple([call_10858,call_10868,const_10869,const_10870,var_10871,var_10872,call_10876,call_10878,const_10879,const_10880,call_10886,call_10888,const_10889,])
output2 = relay.Tuple([call_10859,call_10873,const_10869,const_10870,var_10871,var_10872,call_10877,call_10881,const_10879,const_10880,call_10887,call_10890,const_10889,])
func_10893 = relay.Function([var_10871,var_10872,], output)
mod['func_10893'] = func_10893
mod = relay.transform.InferType()(mod)
mutated_mod['func_10893'] = func_10893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10893_call = mutated_mod.get_global_var('func_10893')
var_10895 = relay.var("var_10895", dtype = "float64", shape = (70, 4))#candidate|10895|(70, 4)|var|float64
var_10896 = relay.var("var_10896", dtype = "float32", shape = (14, 78))#candidate|10896|(14, 78)|var|float32
call_10894 = func_10893_call(var_10895,var_10896,)
output = call_10894
func_10897 = relay.Function([var_10895,var_10896,], output)
mutated_mod['func_10897'] = func_10897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_10942 = func_3423_call()
call_10943 = func_3423_call()
output = relay.Tuple([call_10942,])
output2 = relay.Tuple([call_10943,])
func_10948 = relay.Function([], output)
mod['func_10948'] = func_10948
mod = relay.transform.InferType()(mod)
mutated_mod['func_10948'] = func_10948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10948_call = mutated_mod.get_global_var('func_10948')
call_10949 = func_10948_call()
output = call_10949
func_10950 = relay.Function([], output)
mutated_mod['func_10950'] = func_10950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8940_call = mod.get_global_var('func_8940')
func_8942_call = mutated_mod.get_global_var('func_8942')
call_10957 = relay.TupleGetItem(func_8940_call(), 0)
call_10958 = relay.TupleGetItem(func_8942_call(), 0)
func_4942_call = mod.get_global_var('func_4942')
func_4947_call = mutated_mod.get_global_var('func_4947')
var_10986 = relay.var("var_10986", dtype = "bool", shape = (1, 30))#candidate|10986|(1, 30)|var|bool
const_10987 = relay.const([1.120871,-1.094889,6.995072,-7.573766,-9.736767,-9.076414,7.483923,-5.761697,5.013232,4.842040,-7.217929,8.515537,0.012006,-0.107557,-3.514973,3.871916,-6.815669,1.896262,-1.636687,2.250922,-7.159304,9.647916,1.564149,5.257897,1.626776,-1.630094,-8.474775,-6.101138,-0.343087,-2.927273,-7.635171,5.258347,3.074434,-7.736634,-2.033037,6.065883,6.515395,-2.159467,-5.072853,4.632188,-2.354119,-5.415865,7.905199,-3.376561,6.048560,1.819166,5.045107,-1.881612,9.766876,-7.304692,-7.593469,-1.230515,-2.623807,4.725532,-5.158327,-3.297903,-6.296960,-8.675152,8.152301,-2.796304,7.029883,-7.941942,-5.695002,-9.905809,6.646926,3.550418,-7.654591,9.342714,-0.162926,1.665285,-6.387276,2.695858,-5.683915,-7.586136,-0.585694,-8.968003,-9.601684,-3.651174,8.570196,-7.453231,1.798780,1.690845,0.631470,-0.839881,7.216369,0.963309,2.975971,-1.133148,-6.555662,1.916056,3.640796,-9.760474,-4.940733,-5.418070,5.105344,-4.608320,-9.683984,-4.648358,8.002393,7.661377,6.943963,-3.686358,9.990055,-8.852261,4.896813,7.765893,-6.006649,1.539203,-4.138750,-0.778502,-3.298033,3.293950,-5.662895,7.137566,-2.205666,-8.855837,5.000476,7.541831,-3.866255,-6.256442,4.915572,-4.710379,8.388722,6.918617,-5.408291,-3.495060,-8.568359,2.354361,2.636518,-1.515737,-8.546162,7.915684,5.335119,-7.622105,8.285903,-0.081610,-9.749745,-8.393943,-2.848074,-9.255081,9.060932,1.408218,-8.051129,2.785772,3.228362,4.839554,-3.450997,8.756197,6.011422,2.262285,-8.277156,-0.283988,1.872456,5.643725,-0.419451,-8.731575,-9.898166,3.957949,-4.526236,-9.598775,8.741220,7.007732,3.091368,7.637323,4.425730,8.237313,-7.997999,-4.856760,-6.275795,0.626908,8.289953,-8.324228,-5.814448,-1.121155,-0.610782,-5.079109,3.962876,-4.584928,3.134544,2.698702,-6.873849,-7.329930,-3.090717,-9.468656,-2.483841,0.163081,6.262793,8.544322,-1.288745,8.674438,6.114679,-1.709652,3.410369,6.297282,-7.223818,9.525480,1.073798,-9.755626,2.876400,-1.410330,-0.885376,9.162744,1.169165,4.394874,7.952402,3.329368,9.151009,2.007429,-9.373460,2.215008,9.496958,5.041280,-6.506406,9.274034,3.639672,-6.394733,7.229853,6.389872,-1.084711,-8.875784,5.633054,-8.268796,5.112289,-6.553251,-9.423674,1.240119,-0.216234,-9.005229,-5.903721,-6.494044,4.300027,0.652553,9.934499,-0.643900,-0.294126,8.547308,-2.620333,-3.858526,6.167720,5.286896,-1.023301,8.697385,2.768538,1.948467,6.935895,6.148647,-5.962883,-9.167225,-2.367357,-2.472256,3.705312,-6.727354,7.216943,-7.779250,7.152270,3.539472,-8.713425,5.211850,-0.303872,5.230292,-6.446303,5.988806,7.367921,-3.430727,-6.205457,-3.696694,-6.774177,3.783840,8.474056,-5.154164,9.757431,-6.189437,7.763809,3.726259,4.640265,3.672713,-8.730633,-0.833004,-1.146336,1.082240,3.302124,5.844791,-2.305308,-2.914098,-9.642382,1.835850,-6.485168,9.689106,9.489459,3.121517,5.743603,-9.087393,2.608898,8.115573,-5.132416,-1.417439,3.052738,0.033749,-1.751692,8.161376,9.113611,-7.084894,2.969519,7.782017,7.123350,6.908192,8.744325,-2.117583,-5.108066,1.395688,-0.603409,3.215706,0.705206,3.681145,-8.552077,-3.684401,3.076438,2.961989,-5.501496,3.667709,0.759075,-7.121893,3.497341,-0.342791,-4.241702,-8.084324,5.994211,-2.992887,-1.953851,1.521986,4.747784,-9.185615,-8.992215,4.624903,-6.752545,-4.368062,7.963496,2.983529,4.033976,-1.885444,5.876077,-0.102025,-5.536874,8.974746,4.936724,0.937663,-7.896328,2.017396,0.001686,8.018991,-7.871045,-4.379974,-3.857267,-6.958144,0.626482,6.227235,3.289009,1.877038,1.989223,-3.147490,1.402970,4.950784,-0.716112,4.914403,9.220577,6.423444,-5.085997,4.851445,9.540467,2.257622,-6.450860,2.216137,-7.857858,-8.148137,2.771193,-1.634053,-1.057532,-8.033697,6.688971,7.877140,-3.699937,-4.156139,-2.953526,2.483336,3.008136,-9.954104,-4.536294,9.105180,-0.216605,-9.479975,-7.320187,4.051450,-7.257117,2.836032,7.802279,-3.065257,-7.139591,-3.876332,-5.475465,-7.130630,-9.568136,2.249534,6.962630,-7.209080,-1.281624,7.679343,0.720842,-1.480253,4.958819,2.613419,-5.223219,-7.491523,-9.030735,7.945572,8.844478,-0.541157,-7.018532,-5.047789,-0.487001,0.625528,6.420359,-0.799010,3.849617,-2.386941,-4.129994,3.965764,5.348943,5.120473,5.713540,-3.094067,6.771222,-8.882751,-8.420206,5.482918,7.592910,-5.315890,6.597522,-3.531966,6.973303,6.355721,-2.639786,-0.816727,8.472256,-4.191368,-7.921564,4.781557,3.503121,6.940419,-0.762241,2.204391,7.937360,-3.252056,-8.178127,-5.367980,1.261144,2.190894,-7.487923,2.492486,-8.416348,-9.337016,-4.929175,-4.849138,-0.443652,8.870757,-1.633635,-7.127342,-2.076160,-2.002041,5.933553,-7.683050,2.439000,7.099826,6.923638,8.385757,-8.821202,-7.757990,8.482453,-7.257868,-7.038371,-1.688527,-5.028900,9.250252,8.068760,8.137829,-6.069944,6.924443,-3.438120,2.158529,3.277871,2.599310,2.237801,-0.583140,-1.675445,-2.756997,-4.596846,4.366386,5.212843,-8.115736,-3.314730,-9.785396,8.267645,-5.323326,-1.909786,-1.237037,-7.258432,7.315928,0.940763,-2.433860,-5.991934,6.112954,9.677832,-6.023842,0.502898,7.759574,-0.353700,-8.377197,9.333817,8.605579,-0.591236,9.846341,3.052576,-1.850700,-9.121867,-9.572126,8.170764,-2.626552,-1.993017,-8.435828,6.382702,-7.422288,4.583097,3.967113,8.033519,-3.307712,-7.400792,0.616423,-4.023907,9.590422,-2.041886,3.686949,0.009467,9.411423,-3.575555,4.687083,4.720747,-0.827906,-2.466169,-8.159305,-5.790106,9.087787,-8.032240,2.718441,1.904079,-5.804276,-0.509446,2.405033,7.758443,-6.878884,-5.672186,5.112753,7.430821,-9.865089,5.662744,6.911359,0.542540,4.601910,5.568816,-3.571234,5.042414,5.286055,6.092030,9.358528,1.029513,-2.623694,7.760385,8.782318,4.066912,-0.242665,-1.653865,5.704731,-1.940005,-4.104291,2.931159,-7.242301,7.898545,-7.870808,2.223762,2.501059,7.545210,-0.133064,3.649113,1.982266,-9.039602,0.134536,-8.754244,-3.145162,0.191766,-8.282938,-2.860985,5.263555,-9.665104,-3.101757,2.311276,-9.835188,2.145185,3.471560,6.418917,-5.155717,-1.739519,-8.147029,-8.475861,-2.014778,4.062201,-0.648388,4.711342,9.140032,5.983380,4.564848,8.068740,-0.964483,3.707528,0.826307,-2.795079,-4.535826,-7.342626,1.722212,1.075491,-2.436370,2.046487,-7.652982,0.405344,-2.033436,8.520768,1.246999,-7.387427,-0.437193,-0.635081,-9.229158,1.796123,7.960243,0.523363,-7.642205,-6.255349,-3.945460,9.839641,5.892476,-1.072353,7.582515,0.383165,0.876974,-6.510600,7.156409,7.499389,-6.588401,-1.926588,-8.384619,-5.893747,7.278033,-8.195562,-6.942336,-7.571838,-2.933065,-1.035189,7.034061,-5.850831,1.583500,-5.944817,2.566756,-4.517278,-0.020559,-7.033023,-9.510216,1.001048,4.848821,9.335483,4.861191,9.399521,0.361082,4.797336,-0.223285,1.215553,0.041764,-0.722190,9.875771,-3.419215,-5.039333,4.948658,4.524589,-7.354649,-4.942369,4.664197,8.760025,2.951126,-7.165562,1.983118,-3.237070,-1.134841,-8.456204,3.391105,6.573149,1.585781,-7.839641,-3.532469,0.086193,-4.752412,0.786677,0.551589,3.103779,3.302586,-5.894176,-5.372607,8.720554,-5.548198,8.620244,2.078983,1.967614,-0.499319,2.767855,8.698896,0.634411,-6.384132,8.725166,-2.861449,-3.979623,-4.900710,-4.792073,-2.460074,3.965452,-2.612332,-9.532132,6.795016,-2.480887,0.241479,3.198633,0.641113,-9.487176,1.162531,2.922474,-0.426061,2.064999,-0.253563,2.140163,0.391998,2.806106,-6.848861,0.119185,1.363968,6.032125,-0.059250,-2.579064,-5.942561,5.010656,-2.912385,4.660077,6.432267,-7.082786,-0.536746,-8.848028,-0.744042,1.599154,8.168397,7.462527,9.501582,4.577389,2.444109,5.364320,-9.473608,1.448552,2.554771,-2.664511,0.052030,0.229505,-4.586942,1.653649,7.782259,8.660940,7.508906,-3.782736,-8.567052,-8.392265,9.826195,6.711591,6.366645,-4.477712,9.232296,7.498663,2.053701,-5.264805,-2.448226,2.621041,7.722958,-4.453848,9.219219,3.396841,-6.089867,3.274215,6.716750,1.823306,3.068558,4.933877,-7.726833,1.067392,8.787574,-6.898362,0.217521,-7.016943,-8.944590,0.802224,2.959715,4.880966,5.145182,1.285396,7.937462,7.840077,-4.893560,6.485282,2.156625,8.663096,2.044523,-9.300164,2.270244,5.699896,4.123905,0.674234,7.939544,-8.885249,4.807872,0.707838,-1.290763,6.847597,4.415261,-0.423735,0.246672,-7.785884,1.804507,9.784838,9.688587,-0.668498,2.757549,1.409037,1.836083,3.816738,0.614140,5.905210,3.303814,-2.210248,-7.422558,2.360683,-7.116037,-8.919469,-6.466747,-8.480705,-9.632302,-6.422797,-9.593631,-7.466018,7.515723,-5.928178,-5.911680,6.670854,-1.390394,-2.453901,-8.606164,-6.454984,3.287374,-7.865273,-0.526455,6.973524,8.058203,9.558190,8.995568,2.124927,9.075948,0.332427,-6.022254,-0.302129,0.883669,3.893047,-1.196342,-3.015346,-3.959185,-7.789907,-5.379583,5.985404,0.479672,2.240647,-3.988284,-8.982987,3.447523,8.350678,-3.975310,-6.295139,-1.915193,9.894204,-6.697479,8.346518,-9.682180,3.201107,4.355622,-8.272698,2.725357,-8.463934,5.752958,-1.391505,-7.690628,-3.306412,3.197211,-9.282658,-3.476406,-3.840202,-0.427055,9.063184,2.613949,2.848915,0.145052,-4.747666,6.769051,-4.156023,9.287444,5.594738,-2.935156,-2.191466,0.736729,7.710801,-0.876502,-3.132568,8.860797,0.839061,-8.265347,-9.557798,-8.676504,2.949896,2.412049,-1.537536,-4.633181,-5.010078,1.446677,-7.551364,-3.849257,-9.767477,9.782902,3.748151,-6.085906,-1.181891,1.558525,-4.579880,3.165418,6.941129,2.113651,4.009855,-4.115924,-1.388748,-4.813161,-9.890746,2.776328,4.581687,5.558585,3.711308,0.938065,-0.328202,-9.601640,-7.264121,-4.695579,-5.038241,-9.744845,3.581000,-9.262350,-4.055634,-2.860491,4.282151,-6.684984,6.369060,0.268718,5.110148,-9.959222,2.650700,8.511831,-0.550297,2.039882,9.262432,-5.303603,-7.755619,8.035855,3.904159,8.103473,5.790352,6.371676,6.658485,3.337028,1.259640,2.559112,9.641205,-5.133875,-8.887368,-9.065445,2.157617,6.439255,1.215343,1.666238,-6.341589,3.977572,-1.329294,-7.225008,5.278803,-6.846094,4.835363,1.952158,-0.750352,-9.461155,-8.926716,8.223944,8.372424,5.138091,6.653049,3.390461,-8.523827,0.055727,8.052723,-2.316832,5.901531,0.874245,-0.839194,8.700758,7.385506,-2.907704,2.498764,8.737409,-0.810098,0.788092,6.142871,0.685108,-8.022659,-4.079950,0.943212,-8.268398,-1.223088,9.127727,6.801192,1.296766,3.776892,-2.554831,3.658208,5.109509,-2.181395,7.129855,-3.411891,8.436754,2.218377,-1.393128,0.569481,-2.242676,3.858779,-2.188131,-3.231864,8.299670,8.468312,-6.420712,7.544136,-3.799600,5.227148,-3.762172,4.252424,-5.237834,6.860631,0.041378,8.176842,-6.113229,5.242338,2.743844,7.711095,8.108129,-9.969761,6.874767,-9.893337,-3.429251,-2.842245,6.512976,-7.849013,-7.044276,-3.617460,-3.949049,4.868346,-2.086415,-3.979705,6.353221,-2.143881,-0.795090,-2.704770,5.568184,-2.606282,-3.189047,-4.395897,-5.123430,3.934803,-4.444325,-7.889129,-1.063799,-4.949099,-1.774063,-9.708636,-6.400279,0.559881,-4.028278,-7.308050,-1.354955,4.071860,5.759507,-7.502337,-4.263634,9.941583,8.924180,-7.777020,1.360875,3.200256,9.887864,5.323688,-1.399994,-5.130165,8.472001,-2.190953,4.499060,-2.956830,7.173796,-7.378860,8.927876,3.872486,3.066721,-9.576154,-6.893875,0.428949,0.832892,0.364294,3.972020,-3.560029,-2.117933,-5.390189,-5.728439,9.825114,7.093803,-2.215176,0.768585,2.080244,9.427518,2.492581,8.253073,9.065147,-8.138493,6.103311,-8.282305,-0.676000,-1.651452,7.195245,8.933152,5.208949,-2.124259,1.650125,5.751696,9.149221,-1.603031,-1.174918,4.626720,1.850158,-5.121963,7.429969,-5.184784,2.447232,-4.255234,-5.985596,4.718960,-3.035931,8.090194,7.156581,-8.371195,6.263469,-2.166624,6.373277,7.337455,1.173857,3.353082,-1.765925,-3.123730,-6.772755,-2.910219,-0.264589,-5.094019,-7.535338,4.347729,-9.406727,-3.640447,-9.029643,9.925231,-1.519550,-2.794786,-0.363644,-8.559785,-4.835536,7.788049,2.588823,3.919670,5.997059,-6.341332,0.522555,-8.815922,6.648694,9.090187,1.860086,3.145528,3.278948,2.330964,7.617186,-7.984783,-6.197910,6.163995,-5.933576,8.749701,-5.986205,5.737733,2.849054,-5.114372,-1.146633,9.523859,-8.284283,7.537356,-8.524932,-7.453715,-7.513390,1.167653,-3.453134,-0.277494,6.327722,-6.503169,3.814698,9.019704,3.443379,5.781148,4.801940,5.078976,-1.335658,4.713803,3.327857,-0.380513,3.776518,-3.775962,-3.746416,-2.467482,3.146874,-7.901980,-8.535589,0.254137,3.330523,5.355576,8.696684,-7.974865,4.423342,7.151885,9.403673,-4.197352,0.586992,-7.372984,8.230042,-5.800183,-3.071902,8.326820,-3.640725,-7.858688,4.740281,6.301267,0.141504,-1.197972,1.679360,9.222289,-7.986739,6.684613,0.344034,5.786533,-8.803576,6.214050,-1.106433,3.088138,0.745207,-0.060404,5.835137,-0.548835,-3.895424,2.945152,-0.767172,-8.250205,-4.727535,-5.692033,-3.474006,-7.315443,8.736888,7.000286,-4.952366,6.455019,-8.383344,5.870646,2.666826,-8.614614,-0.225509,8.490719,1.847348,9.898438,-6.968858,5.635087,-3.235059,5.966423,2.190952,9.947635,-2.046954,6.021932,0.587106,-5.869914,-0.012792,-6.122533,9.523298,5.307156,9.089295,-4.782579,8.897013,-0.268912,-5.556439,3.678916,-0.693355,9.249807,8.746167,-8.274463,9.845089,1.764523,2.412919,6.848883,-5.974929,5.586373,2.466271,5.066367,1.976291,-4.138498,4.624723,0.775209,8.709436,-6.852829,-2.367478,3.203386,-2.805508,2.153144,-8.228433,-6.546891,-9.606143,-7.290897,4.210160,-2.593545,-5.383704,-0.365964,-5.558813,7.500146,8.435027,8.879656,-3.056121,7.496123,7.115344,9.938373,3.496352,-3.761654,4.436683,-6.670374,-7.239015,-6.688034,7.103272,3.226111,-4.631897,0.754923,-0.896743,9.233395,0.189773,3.024492,-5.306293,-6.161978,-0.356775,1.292683,-4.963772,5.676684,-7.116661,9.443104,-4.830384,9.576400,4.647015,-0.213641,1.778863,5.432598,2.167017,-0.655358,5.958041,6.504935,5.692641,8.227786,-1.998628,0.395519,-8.976160,4.203517,7.320510,-0.512635,6.639114,-1.623056,-0.016649,-9.089609,4.129117,2.470450,4.274131,-7.964370,0.939596,-8.152888,-8.228410,-6.279668,-1.291116,-2.625926,7.374456,8.439059,9.491714,9.521586,0.121224,3.393393,-0.683857,5.762185,-0.581529,4.612089,9.012113,1.842642,7.676554,2.106276,2.504461,2.573975,-5.410641,-6.898735,-1.323175,1.264753,1.381564,-3.051807,-7.531372,3.126894,-5.341114,-9.523024,0.516179,6.066267,-5.166422,-2.129825,-8.601063,-9.913035,-6.140451,3.449512,-7.137228,-3.013010,8.066616,-1.423020,-3.410488,-3.124773,-0.851402,3.434021,9.403759,-2.451228,6.827523,5.018276,-3.474628,-7.262142,-1.035441,2.099244,-3.472661,-6.002487,1.338234,9.041542,3.701724,-3.620376,0.354524,2.421099,-2.066750,-8.195608,-2.571437,-0.861617,0.378050,-8.912794,-4.785012,-9.102116,9.700045,-9.903902,9.549440,9.063311,-5.158329,-4.409973,3.875310,-7.577891,1.559580,6.584035,-3.340321,-3.630101,-3.938924,-9.264707,2.583457,0.541942,2.787759,4.533046,-0.217729,2.984966,-0.206374,-2.242020,8.266583,8.264277,3.120086,8.970567,-0.709589,1.307022,-9.249852,8.553467,-1.463203,-2.985115,2.771539,0.908707,-1.932162,-3.643425,-5.101705,-4.426561,4.665235,1.750116,-9.367170,-5.394458,-4.136634,9.596023,6.597506,-5.047685,-1.281688,-5.290266,-2.479417,6.127737,-6.913343,4.073789,-7.275650,1.638041,-3.303618,-1.811936,6.163246,4.128235,-2.630410,-8.955679,-5.530493,5.764755,6.617962,-6.164339,7.865526,4.452993,6.089263,3.135299,-8.610100,7.368626,1.165525,-9.612596,-8.219237,-6.447238,-1.198211,9.446548,-5.832719,9.455369,-5.164080,1.207837,9.008825,1.436586,-4.693446,-6.952694,6.981637,3.396250,6.574510,6.945541,9.455073,-0.690697,-2.169518,-3.635101,6.550843,4.589688,9.532655,2.724444,0.822064,2.077049,8.548229,-4.182173,9.846084,5.207901,1.987716,7.219646,6.625396,3.429945,9.405963,-1.963852,3.688122,-2.975982,-8.866251,-5.197177,-5.804134,4.695596,2.884568,2.660642,5.871832,-7.511739,1.521493,-0.419811,2.321401,8.141176,1.494064,5.449668,0.638975,-0.109105,-7.298041,3.728738,-2.771317,-5.604734,-2.463369,7.767966,7.107953,4.476325,8.135715,3.924267,3.095781,4.619553,-3.185913,4.082757,-0.416235,0.258278,-7.134051,9.031507,-2.882658,6.048982,5.660952,-3.106908,-4.475483,-9.329048,7.374365,-9.182463,-4.368887,-6.732150,3.598992,-2.631062,0.200500,-4.417936,-0.190900,-9.077691,6.939806,1.384587,-3.436769,2.123777,0.543317,-8.931362,3.792642,8.110741,-0.306482,-8.337841,-6.928720,5.681952,5.369898,3.416128,-3.773451,-4.617891,7.786848,-4.851498,7.964965,-9.758791,8.509151,-4.959826,-8.270156,-4.186253,6.345034,-2.637351,8.872959,9.241002,0.932078,-5.329209,-2.304120,3.679063,1.059731,-4.279435,-8.261127,3.671254,9.424142,-7.814656,-3.734515,1.019649,-6.154909,2.504566,1.594689,-9.400390,0.997526,-4.531254,9.740955,-6.040723,-4.274042,4.022290,0.556022,-4.057666,-2.735371,-7.311236,-7.229408,-3.592105,9.334534,-0.114745,-8.384676,3.038466,-9.508365,-0.474115,-0.858952,-4.805782,5.779525,8.841807,-1.763095,7.501515,-7.617570,0.810884,9.210965,5.410161,9.619927,-6.987952,-1.251363,-5.146689,4.976647,-2.924247,6.187143,-6.798687,2.133123,8.664216,-5.829198,-7.722602,7.646802,6.248390,-7.856703,8.833176,-7.343822,6.446785,-5.864835,1.895616,-9.381904,5.639512,-9.822439,-1.022340,1.285324,-7.556468,1.469892,-0.151822,-6.210036,8.946973,2.746033,4.327379,-1.562348,-2.511708,-9.049943,6.060396,-4.463552,-6.092252,-2.423957,-7.883813,-3.898806,0.132945,6.944892,-9.114383,9.901818,-6.169003,0.773474,8.723669,0.745280,-8.795647,2.792178,-7.732244,-5.563454,7.845043,-4.397780,-3.322695,-7.409841,-1.977365,5.938092,1.810181,-8.638867,7.593854,9.164838,-1.250767,4.264159,-5.967880,-9.855959,-1.214832,1.280119,8.441173,1.856074,4.435190,-4.245771,5.907228,-2.533140,-3.351857,2.163923,-7.209465,-2.303140,9.040908,6.058636,6.783070,-5.429831,-9.536831,5.638964,9.906090,9.757797,-2.666680,-0.891634,-2.648593,-9.697723,-6.448628,-4.455135,7.238567,5.318700,-1.100172,-2.942792,-9.335628,0.298736,3.693639,-6.894796,8.989250,9.760639,5.266266,-8.022522,-8.099214,1.314547,-5.950608,-4.425865,-4.456688,-6.604162,-0.154663,-6.801563,2.047849,-6.450966,-3.694609,-3.567953,-5.693896,3.976189,8.848283,7.165360,5.352990,-5.415069,1.032990,0.802194,-7.976520,-3.708588,-0.940100,9.517076,5.204704,-8.041034,7.713499,5.755760,-2.468512,5.677970,-9.593666,-9.317662,2.661099,9.175375,2.142972,0.756301,-1.662049,-2.455595,-9.989630,6.743736,6.868450,-4.263701,-8.647723,6.809514,-3.220370,-5.619728,5.859435,-5.243373,-2.468440,2.262453,-5.263965,8.832719,4.819072,-6.527932,-1.771125,5.327112,5.001045,-3.744663,2.140571,5.840842,-9.700013,5.171652,-8.731938,6.997705,8.302969,-4.438460,2.012476,5.886432,5.495518,-1.682778,6.703067,-3.963778,8.919944,-1.919957,-9.136924,5.306417,1.815268,-2.022849,-1.068742,-5.510060,9.959918,-8.404349,9.772258,1.026471,5.803131,-1.407103,6.784503,7.176379,5.623897,5.158479,5.227353,-1.926679,5.081215,-0.568221,-0.559663,-3.280742,5.097634,-7.665897,-4.288575,-8.451808,-0.358787,-1.557928,4.229232,-1.552396,9.002144,-3.709817,-6.478964,9.110416,9.386030,-5.709486,3.606825,7.475390,6.915902,7.164930,7.370687,9.443525,-8.387624,7.766286,5.564022,-6.633213,-2.932341,-7.448746,7.685546,-1.648366,0.389829,7.763929,1.095333,-1.471965,-3.671688,-2.183384,9.600905,3.094262,6.718951,8.393195,8.655287,4.729518,-6.197857,-1.524266,-2.011101,-1.153808,2.613898,-7.797738,0.492850,5.410070,-3.176560,1.828416,9.566900,4.517501,-0.953922,-9.522937,-3.140197,0.587693,5.149015,-4.269820,-3.078018,2.235820,-9.714959,9.659960,-4.223893,-4.287779,-3.720186,-7.712916,-0.358487,6.677737,-0.033448,-6.048167,5.928449,4.272946,-4.296905,-8.881426,6.797809,-5.103099,5.533759,0.956228,7.446381,-0.253364,1.136204,2.954277,-5.242670,-6.273101,-5.019220,2.633862,-9.778232,-5.237062,2.439367,-4.277210,0.098131,-7.812669,-4.943988,-0.703738,9.823001,1.589361,-8.429593,6.533930,8.779504,1.011037,-4.425396,-4.445748], dtype = "float32")#candidate|10987|(2016,)|const|float32
var_10988 = relay.var("var_10988", dtype = "uint64", shape = (162,))#candidate|10988|(162,)|var|uint64
call_10985 = relay.TupleGetItem(func_4942_call(relay.reshape(call_10957.astype('float32'), [15, 2, 8]), relay.reshape(var_10986.astype('bool'), [30,]), relay.reshape(const_10987.astype('float32'), [2016,]), relay.reshape(var_10988.astype('uint64'), [162,]), ), 1)
call_10989 = relay.TupleGetItem(func_4947_call(relay.reshape(call_10957.astype('float32'), [15, 2, 8]), relay.reshape(var_10986.astype('bool'), [30,]), relay.reshape(const_10987.astype('float32'), [2016,]), relay.reshape(var_10988.astype('uint64'), [162,]), ), 1)
func_5665_call = mod.get_global_var('func_5665')
func_5666_call = mutated_mod.get_global_var('func_5666')
call_11006 = relay.TupleGetItem(func_5665_call(), 2)
call_11007 = relay.TupleGetItem(func_5666_call(), 2)
func_10632_call = mod.get_global_var('func_10632')
func_10634_call = mutated_mod.get_global_var('func_10634')
call_11008 = func_10632_call()
call_11009 = func_10632_call()
output = relay.Tuple([call_10957,call_10985,var_10986,const_10987,var_10988,call_11006,call_11008,])
output2 = relay.Tuple([call_10958,call_10989,var_10986,const_10987,var_10988,call_11007,call_11009,])
func_11028 = relay.Function([var_10986,var_10988,], output)
mod['func_11028'] = func_11028
mod = relay.transform.InferType()(mod)
var_11029 = relay.var("var_11029", dtype = "bool", shape = (1, 30))#candidate|11029|(1, 30)|var|bool
var_11030 = relay.var("var_11030", dtype = "uint64", shape = (162,))#candidate|11030|(162,)|var|uint64
output = func_11028(var_11029,var_11030,)
func_11031 = relay.Function([var_11029,var_11030,], output)
mutated_mod['func_11031'] = func_11031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4576_call = mod.get_global_var('func_4576')
func_4577_call = mutated_mod.get_global_var('func_4577')
call_11041 = relay.TupleGetItem(func_4576_call(), 3)
call_11042 = relay.TupleGetItem(func_4577_call(), 3)
output = call_11041
output2 = call_11042
func_11043 = relay.Function([], output)
mod['func_11043'] = func_11043
mod = relay.transform.InferType()(mod)
output = func_11043()
func_11044 = relay.Function([], output)
mutated_mod['func_11044'] = func_11044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9122_call = mod.get_global_var('func_9122')
func_9124_call = mutated_mod.get_global_var('func_9124')
call_11267 = relay.TupleGetItem(func_9122_call(), 0)
call_11268 = relay.TupleGetItem(func_9124_call(), 0)
func_3699_call = mod.get_global_var('func_3699')
func_3701_call = mutated_mod.get_global_var('func_3701')
call_11278 = func_3699_call()
call_11279 = func_3699_call()
func_6058_call = mod.get_global_var('func_6058')
func_6059_call = mutated_mod.get_global_var('func_6059')
call_11295 = func_6058_call()
call_11296 = func_6058_call()
func_9893_call = mod.get_global_var('func_9893')
func_9894_call = mutated_mod.get_global_var('func_9894')
call_11307 = relay.TupleGetItem(func_9893_call(), 1)
call_11308 = relay.TupleGetItem(func_9894_call(), 1)
output = relay.Tuple([call_11267,call_11278,call_11295,call_11307,])
output2 = relay.Tuple([call_11268,call_11279,call_11296,call_11308,])
func_11329 = relay.Function([], output)
mod['func_11329'] = func_11329
mod = relay.transform.InferType()(mod)
output = func_11329()
func_11330 = relay.Function([], output)
mutated_mod['func_11330'] = func_11330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8689_call = mod.get_global_var('func_8689')
func_8691_call = mutated_mod.get_global_var('func_8691')
call_11331 = relay.TupleGetItem(func_8689_call(), 0)
call_11332 = relay.TupleGetItem(func_8691_call(), 0)
func_8058_call = mod.get_global_var('func_8058')
func_8060_call = mutated_mod.get_global_var('func_8060')
call_11334 = func_8058_call()
call_11335 = func_8058_call()
func_9856_call = mod.get_global_var('func_9856')
func_9858_call = mutated_mod.get_global_var('func_9858')
call_11362 = func_9856_call()
call_11363 = func_9856_call()
func_9507_call = mod.get_global_var('func_9507')
func_9510_call = mutated_mod.get_global_var('func_9510')
var_11366 = relay.var("var_11366", dtype = "float32", shape = (7, 110))#candidate|11366|(7, 110)|var|float32
var_11367 = relay.var("var_11367", dtype = "int64", shape = (420,))#candidate|11367|(420,)|var|int64
call_11365 = relay.TupleGetItem(func_9507_call(relay.reshape(var_11366.astype('float32'), [770,]), relay.reshape(var_11367.astype('int64'), [420,]), ), 0)
call_11368 = relay.TupleGetItem(func_9510_call(relay.reshape(var_11366.astype('float32'), [770,]), relay.reshape(var_11367.astype('int64'), [420,]), ), 0)
var_11384 = relay.var("var_11384", dtype = "float32", shape = (7, 110))#candidate|11384|(7, 110)|var|float32
bop_11385 = relay.floor_divide(var_11366.astype('float32'), relay.reshape(var_11384.astype('float32'), relay.shape_of(var_11366))) # shape=(7, 110)
func_10113_call = mod.get_global_var('func_10113')
func_10115_call = mutated_mod.get_global_var('func_10115')
call_11393 = relay.TupleGetItem(func_10113_call(), 0)
call_11394 = relay.TupleGetItem(func_10115_call(), 0)
func_10075_call = mod.get_global_var('func_10075')
func_10076_call = mutated_mod.get_global_var('func_10076')
call_11398 = func_10075_call()
call_11399 = func_10075_call()
output = relay.Tuple([call_11331,call_11334,call_11362,call_11365,var_11367,bop_11385,call_11393,call_11398,])
output2 = relay.Tuple([call_11332,call_11335,call_11363,call_11368,var_11367,bop_11385,call_11394,call_11399,])
func_11403 = relay.Function([var_11366,var_11367,var_11384,], output)
mod['func_11403'] = func_11403
mod = relay.transform.InferType()(mod)
mutated_mod['func_11403'] = func_11403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11403_call = mutated_mod.get_global_var('func_11403')
var_11405 = relay.var("var_11405", dtype = "float32", shape = (7, 110))#candidate|11405|(7, 110)|var|float32
var_11406 = relay.var("var_11406", dtype = "int64", shape = (420,))#candidate|11406|(420,)|var|int64
var_11407 = relay.var("var_11407", dtype = "float32", shape = (7, 110))#candidate|11407|(7, 110)|var|float32
call_11404 = func_11403_call(var_11405,var_11406,var_11407,)
output = call_11404
func_11408 = relay.Function([var_11405,var_11406,var_11407,], output)
mutated_mod['func_11408'] = func_11408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7702_call = mod.get_global_var('func_7702')
func_7704_call = mutated_mod.get_global_var('func_7704')
call_11433 = relay.TupleGetItem(func_7702_call(), 0)
call_11434 = relay.TupleGetItem(func_7704_call(), 0)
func_10852_call = mod.get_global_var('func_10852')
func_10854_call = mutated_mod.get_global_var('func_10854')
call_11435 = relay.TupleGetItem(func_10852_call(), 0)
call_11436 = relay.TupleGetItem(func_10854_call(), 0)
output = relay.Tuple([call_11433,call_11435,])
output2 = relay.Tuple([call_11434,call_11436,])
func_11439 = relay.Function([], output)
mod['func_11439'] = func_11439
mod = relay.transform.InferType()(mod)
output = func_11439()
func_11440 = relay.Function([], output)
mutated_mod['func_11440'] = func_11440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mod.get_global_var('func_5095')
func_5097_call = mutated_mod.get_global_var('func_5097')
call_11565 = relay.TupleGetItem(func_5095_call(), 2)
call_11566 = relay.TupleGetItem(func_5097_call(), 2)
func_4942_call = mod.get_global_var('func_4942')
func_4947_call = mutated_mod.get_global_var('func_4947')
var_11570 = relay.var("var_11570", dtype = "float32", shape = (120, 2))#candidate|11570|(120, 2)|var|float32
const_11571 = relay.const([True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False], dtype = "bool")#candidate|11571|(30,)|const|bool
var_11572 = relay.var("var_11572", dtype = "float32", shape = (252, 8))#candidate|11572|(252, 8)|var|float32
var_11573 = relay.var("var_11573", dtype = "uint64", shape = (162,))#candidate|11573|(162,)|var|uint64
call_11569 = relay.TupleGetItem(func_4942_call(relay.reshape(var_11570.astype('float32'), [15, 2, 8]), relay.reshape(const_11571.astype('bool'), [30,]), relay.reshape(var_11572.astype('float32'), [2016,]), relay.reshape(var_11573.astype('uint64'), [162,]), ), 10)
call_11574 = relay.TupleGetItem(func_4947_call(relay.reshape(var_11570.astype('float32'), [15, 2, 8]), relay.reshape(const_11571.astype('bool'), [30,]), relay.reshape(var_11572.astype('float32'), [2016,]), relay.reshape(var_11573.astype('uint64'), [162,]), ), 10)
output = relay.Tuple([call_11565,call_11569,var_11570,const_11571,var_11572,var_11573,])
output2 = relay.Tuple([call_11566,call_11574,var_11570,const_11571,var_11572,var_11573,])
func_11584 = relay.Function([var_11570,var_11572,var_11573,], output)
mod['func_11584'] = func_11584
mod = relay.transform.InferType()(mod)
var_11585 = relay.var("var_11585", dtype = "float32", shape = (120, 2))#candidate|11585|(120, 2)|var|float32
var_11586 = relay.var("var_11586", dtype = "float32", shape = (252, 8))#candidate|11586|(252, 8)|var|float32
var_11587 = relay.var("var_11587", dtype = "uint64", shape = (162,))#candidate|11587|(162,)|var|uint64
output = func_11584(var_11585,var_11586,var_11587,)
func_11588 = relay.Function([var_11585,var_11586,var_11587,], output)
mutated_mod['func_11588'] = func_11588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10075_call = mod.get_global_var('func_10075')
func_10076_call = mutated_mod.get_global_var('func_10076')
call_11602 = func_10075_call()
call_11603 = func_10075_call()
output = call_11602
output2 = call_11603
func_11611 = relay.Function([], output)
mod['func_11611'] = func_11611
mod = relay.transform.InferType()(mod)
output = func_11611()
func_11612 = relay.Function([], output)
mutated_mod['func_11612'] = func_11612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3699_call = mod.get_global_var('func_3699')
func_3701_call = mutated_mod.get_global_var('func_3701')
call_11635 = func_3699_call()
call_11636 = func_3699_call()
output = relay.Tuple([call_11635,])
output2 = relay.Tuple([call_11636,])
func_11645 = relay.Function([], output)
mod['func_11645'] = func_11645
mod = relay.transform.InferType()(mod)
mutated_mod['func_11645'] = func_11645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11645_call = mutated_mod.get_global_var('func_11645')
call_11646 = func_11645_call()
output = call_11646
func_11647 = relay.Function([], output)
mutated_mod['func_11647'] = func_11647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6355_call = mod.get_global_var('func_6355')
func_6356_call = mutated_mod.get_global_var('func_6356')
call_11665 = relay.TupleGetItem(func_6355_call(), 0)
call_11666 = relay.TupleGetItem(func_6356_call(), 0)
output = relay.Tuple([call_11665,])
output2 = relay.Tuple([call_11666,])
func_11668 = relay.Function([], output)
mod['func_11668'] = func_11668
mod = relay.transform.InferType()(mod)
mutated_mod['func_11668'] = func_11668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11668_call = mutated_mod.get_global_var('func_11668')
call_11669 = func_11668_call()
output = call_11669
func_11670 = relay.Function([], output)
mutated_mod['func_11670'] = func_11670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4549_call = mod.get_global_var('func_4549')
func_4551_call = mutated_mod.get_global_var('func_4551')
call_11712 = relay.TupleGetItem(func_4549_call(), 0)
call_11713 = relay.TupleGetItem(func_4551_call(), 0)
output = call_11712
output2 = call_11713
func_11718 = relay.Function([], output)
mod['func_11718'] = func_11718
mod = relay.transform.InferType()(mod)
mutated_mod['func_11718'] = func_11718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11718_call = mutated_mod.get_global_var('func_11718')
call_11719 = func_11718_call()
output = call_11719
func_11720 = relay.Function([], output)
mutated_mod['func_11720'] = func_11720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5665_call = mod.get_global_var('func_5665')
func_5666_call = mutated_mod.get_global_var('func_5666')
call_11759 = relay.TupleGetItem(func_5665_call(), 2)
call_11760 = relay.TupleGetItem(func_5666_call(), 2)
func_8549_call = mod.get_global_var('func_8549')
func_8553_call = mutated_mod.get_global_var('func_8553')
var_11762 = relay.var("var_11762", dtype = "float32", shape = (448,))#candidate|11762|(448,)|var|float32
var_11763 = relay.var("var_11763", dtype = "uint32", shape = (420,))#candidate|11763|(420,)|var|uint32
const_11764 = relay.const(-5.789986, dtype = "float64")#candidate|11764|()|const|float64
call_11761 = relay.TupleGetItem(func_8549_call(relay.reshape(var_11762.astype('float32'), [8, 14, 4]), relay.reshape(var_11763.astype('uint32'), [420,]), relay.reshape(const_11764.astype('float64'), []), ), 4)
call_11765 = relay.TupleGetItem(func_8553_call(relay.reshape(var_11762.astype('float32'), [8, 14, 4]), relay.reshape(var_11763.astype('uint32'), [420,]), relay.reshape(const_11764.astype('float64'), []), ), 4)
func_9154_call = mod.get_global_var('func_9154')
func_9156_call = mutated_mod.get_global_var('func_9156')
call_11788 = relay.TupleGetItem(func_9154_call(), 0)
call_11789 = relay.TupleGetItem(func_9156_call(), 0)
func_8455_call = mod.get_global_var('func_8455')
func_8457_call = mutated_mod.get_global_var('func_8457')
call_11797 = relay.TupleGetItem(func_8455_call(), 0)
call_11798 = relay.TupleGetItem(func_8457_call(), 0)
func_3858_call = mod.get_global_var('func_3858')
func_3859_call = mutated_mod.get_global_var('func_3859')
call_11820 = relay.TupleGetItem(func_3858_call(), 0)
call_11821 = relay.TupleGetItem(func_3859_call(), 0)
func_6753_call = mod.get_global_var('func_6753')
func_6754_call = mutated_mod.get_global_var('func_6754')
call_11828 = relay.TupleGetItem(func_6753_call(), 0)
call_11829 = relay.TupleGetItem(func_6754_call(), 0)
func_7128_call = mod.get_global_var('func_7128')
func_7130_call = mutated_mod.get_global_var('func_7130')
var_11843 = relay.var("var_11843", dtype = "float32", shape = (39,))#candidate|11843|(39,)|var|float32
call_11842 = relay.TupleGetItem(func_7128_call(relay.reshape(var_11843.astype('float32'), [39,])), 1)
call_11844 = relay.TupleGetItem(func_7130_call(relay.reshape(var_11843.astype('float32'), [39,])), 1)
output = relay.Tuple([call_11759,call_11761,var_11762,var_11763,const_11764,call_11788,call_11797,call_11820,call_11828,call_11842,var_11843,])
output2 = relay.Tuple([call_11760,call_11765,var_11762,var_11763,const_11764,call_11789,call_11798,call_11821,call_11829,call_11844,var_11843,])
func_11848 = relay.Function([var_11762,var_11763,var_11843,], output)
mod['func_11848'] = func_11848
mod = relay.transform.InferType()(mod)
var_11849 = relay.var("var_11849", dtype = "float32", shape = (448,))#candidate|11849|(448,)|var|float32
var_11850 = relay.var("var_11850", dtype = "uint32", shape = (420,))#candidate|11850|(420,)|var|uint32
var_11851 = relay.var("var_11851", dtype = "float32", shape = (39,))#candidate|11851|(39,)|var|float32
output = func_11848(var_11849,var_11850,var_11851,)
func_11852 = relay.Function([var_11849,var_11850,var_11851,], output)
mutated_mod['func_11852'] = func_11852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7702_call = mod.get_global_var('func_7702')
func_7704_call = mutated_mod.get_global_var('func_7704')
call_11883 = relay.TupleGetItem(func_7702_call(), 0)
call_11884 = relay.TupleGetItem(func_7704_call(), 0)
output = call_11883
output2 = call_11884
func_11896 = relay.Function([], output)
mod['func_11896'] = func_11896
mod = relay.transform.InferType()(mod)
mutated_mod['func_11896'] = func_11896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11896_call = mutated_mod.get_global_var('func_11896')
call_11897 = func_11896_call()
output = call_11897
func_11898 = relay.Function([], output)
mutated_mod['func_11898'] = func_11898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8641_call = mod.get_global_var('func_8641')
func_8642_call = mutated_mod.get_global_var('func_8642')
call_11899 = relay.TupleGetItem(func_8641_call(), 0)
call_11900 = relay.TupleGetItem(func_8642_call(), 0)
output = call_11899
output2 = call_11900
func_11908 = relay.Function([], output)
mod['func_11908'] = func_11908
mod = relay.transform.InferType()(mod)
mutated_mod['func_11908'] = func_11908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11908_call = mutated_mod.get_global_var('func_11908')
call_11909 = func_11908_call()
output = call_11909
func_11910 = relay.Function([], output)
mutated_mod['func_11910'] = func_11910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6058_call = mod.get_global_var('func_6058')
func_6059_call = mutated_mod.get_global_var('func_6059')
call_11922 = func_6058_call()
call_11923 = func_6058_call()
output = call_11922
output2 = call_11923
func_11927 = relay.Function([], output)
mod['func_11927'] = func_11927
mod = relay.transform.InferType()(mod)
output = func_11927()
func_11928 = relay.Function([], output)
mutated_mod['func_11928'] = func_11928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8467_call = mod.get_global_var('func_8467')
func_8469_call = mutated_mod.get_global_var('func_8469')
call_11967 = relay.TupleGetItem(func_8467_call(), 0)
call_11968 = relay.TupleGetItem(func_8469_call(), 0)
func_8831_call = mod.get_global_var('func_8831')
func_8832_call = mutated_mod.get_global_var('func_8832')
call_11978 = relay.TupleGetItem(func_8831_call(), 0)
call_11979 = relay.TupleGetItem(func_8832_call(), 0)
func_4549_call = mod.get_global_var('func_4549')
func_4551_call = mutated_mod.get_global_var('func_4551')
call_11982 = relay.TupleGetItem(func_4549_call(), 1)
call_11983 = relay.TupleGetItem(func_4551_call(), 1)
func_7693_call = mod.get_global_var('func_7693')
func_7695_call = mutated_mod.get_global_var('func_7695')
const_11987 = relay.const([10,2,2,-8,-2,2,-4,10,-5,-9,10,-9,-5,-8,-10,1,-4,3,-4,1,-9,-2,7,-3,2,3,4,-4,-3,-3,3,7,10,7,9,2,10,3,5,2,-7,-9,7,1,-6,-4,-10,-8,9,6,3,7,1,-3,-7,-6,-7,7,-8,5,5,-5,-8,-7,10,6,3,-9,3,-5,-4,-5,5,7,10,-9,1,2,-9,-8,-2,2,-10,-2,-2,5,7,1,4,7,-1,-1,-10,-2,9,8,6,1,-3,-9,1,5,6,1,-5,3,7,-6,4,8,10,7,5,4,-10,-7,8,10,-7,1,-1,7,8,-7,-3,-6,-10,-1,-10,5,9,-2,3,1,2,3,6,-3,3,-7,-4,1,7,-1,6,-10,7,4,-3,-3,6,-10,5,-9,3,7,10,-1,10,5,-7,3,-4,-7,1,-3,5,-1,7,9,7,-9,-3,-5,2,9,2,7,-8,-4,4,7,-3,10,-10,1,-6,-6,3,-2,-1,6,6,1,8,4,-7,9,-9,1,9,-9,-4,-4,8,2,10,3,1,-9,-1,9,3,-9,1,2,-4,5,-5,7,-8,1,6,3,9,-6,-6,-8,7,1,-7,-7,1,-1,4,8,-8,9,4,-3,7,-3,8,-2,-1,4,4,-1,5,1,-1,-1,-9,-4,4,8,-9,-4,4,-4,9,-3,9,-7,-5,6,-9,-6,7,1,-7,5,-10,3,-9,9,4,10,-7,10,7,-9,-2,5,2,3,7,-5,10,-10,-4,-4,2,-4,3,2,-9,-4,-3,10,-5,5,2,-8,8,9,1,-2,9,4,9,10,5,9,-3,5,2,1,-2,4,8,-3,9,2,1,-10,1,10,-5,6,-8,7,3,-1,6,-6,-1,1,-6,9,-10,10,10,9,-1,-3,-8,-8,-8,-9,-6,-7,5,8,3,-9,-8,-6,2,-2,-2,1,-7,2,-8,8,-5,-1,-4,-2,-6,-10,3,-3,-1,8,-1,-3,6,2,8,5,4,6,5,-5,-8,-7,2,5,-4,9,2,2,1,1,5,-5,-4,-8,-8,1,-9,8,-6,-7,6,4,9,-3,1,10,-9,-6,5,-1,-7,8,1,-7,8,7,-9,-9,8,-9,-7,-6,3,1,-6,-8,7,6,1,-4,7,-1,4,-3,6,-5,10,-1,-5,-8,7,1,3,1,-1,2,-10,-4,-7,-9,10,5,-7,-2,9,1,-7,1,2,-3,8,-10,-10,-3,3,9,-9,-3,1,9,7,-9,4,4,1,-10,-5,-7,7,4,-3,-5,-9,9,6,-1,9,7,9,1,1,7,4,-2,4,-10,1,9,6,2,-5,-4,5,10,-3,2,-4,9,-4,8,-9,9,6,1,-6,-3,-8,-7,-8,-6,2,6,-8,-4,6,-4,-2,6,-9,-7,10,7,-9,-10,3,-10,4,3,-9,-6,-10,-3,-1,10,5,-6,9,4,8,-5,-10,8,-8,-5,7,-5,2,-7,4,3,-7,6,-2,2,-4,3,-9,-7,-9,6,-6,2,7,-10,-9,2,-4,9,-9], dtype = "int8")#candidate|11987|(585,)|const|int8
call_11986 = relay.TupleGetItem(func_7693_call(relay.reshape(const_11987.astype('int8'), [585,])), 2)
call_11988 = relay.TupleGetItem(func_7695_call(relay.reshape(const_11987.astype('int8'), [585,])), 2)
func_6231_call = mod.get_global_var('func_6231')
func_6233_call = mutated_mod.get_global_var('func_6233')
call_11999 = relay.TupleGetItem(func_6231_call(), 1)
call_12000 = relay.TupleGetItem(func_6233_call(), 1)
func_6404_call = mod.get_global_var('func_6404')
func_6405_call = mutated_mod.get_global_var('func_6405')
call_12019 = relay.TupleGetItem(func_6404_call(), 2)
call_12020 = relay.TupleGetItem(func_6405_call(), 2)
output = relay.Tuple([call_11967,call_11978,call_11982,call_11986,const_11987,call_11999,call_12019,])
output2 = relay.Tuple([call_11968,call_11979,call_11983,call_11988,const_11987,call_12000,call_12020,])
func_12021 = relay.Function([], output)
mod['func_12021'] = func_12021
mod = relay.transform.InferType()(mod)
output = func_12021()
func_12022 = relay.Function([], output)
mutated_mod['func_12022'] = func_12022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7883_call = mod.get_global_var('func_7883')
func_7885_call = mutated_mod.get_global_var('func_7885')
call_12088 = func_7883_call()
call_12089 = func_7883_call()
func_609_call = mod.get_global_var('func_609')
func_612_call = mutated_mod.get_global_var('func_612')
var_12107 = relay.var("var_12107", dtype = "bool", shape = (30,))#candidate|12107|(30,)|var|bool
call_12106 = func_609_call(relay.reshape(var_12107.astype('bool'), [1, 3, 10]))
call_12108 = func_609_call(relay.reshape(var_12107.astype('bool'), [1, 3, 10]))
func_10404_call = mod.get_global_var('func_10404')
func_10405_call = mutated_mod.get_global_var('func_10405')
call_12121 = relay.TupleGetItem(func_10404_call(), 0)
call_12122 = relay.TupleGetItem(func_10405_call(), 0)
output = relay.Tuple([call_12088,call_12106,var_12107,call_12121,])
output2 = relay.Tuple([call_12089,call_12108,var_12107,call_12122,])
func_12141 = relay.Function([var_12107,], output)
mod['func_12141'] = func_12141
mod = relay.transform.InferType()(mod)
var_12142 = relay.var("var_12142", dtype = "bool", shape = (30,))#candidate|12142|(30,)|var|bool
output = func_12141(var_12142)
func_12143 = relay.Function([var_12142], output)
mutated_mod['func_12143'] = func_12143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7934_call = mod.get_global_var('func_7934')
func_7935_call = mutated_mod.get_global_var('func_7935')
call_12183 = func_7934_call()
call_12184 = func_7934_call()
func_11848_call = mod.get_global_var('func_11848')
func_11852_call = mutated_mod.get_global_var('func_11852')
var_12193 = relay.var("var_12193", dtype = "float32", shape = (448,))#candidate|12193|(448,)|var|float32
const_12194 = relay.const([-8,-9,2,-7,9,-1,6,-4,-3,-4,4,1,2,4,-10,2,-3,6,1,10,-3,6,-4,6,5,-8,-1,-2,-10,7,-1,-2,2,-10,1,-2,2,4,10,-3,-2,-6,1,6,-4,5,-3,-2,5,9,-3,-2,1,-10,6,8,6,10,1,1,8,3,-5,8,8,-7,8,-5,-3,-2,10,-8,-3,6,-4,-9,4,-4,6,10,1,4,-7,10,8,1,-1,4,7,6,-8,-4,9,-3,1,-9,-3,2,4,9,4,-9,9,9,-5,7,-1,10,-8,5,8,-2,8,10,5,-3,-1,6,-10,-10,-1,10,6,4,-3,-3,-4,4,10,4,-5,-4,3,-10,4,-8,7,-1,-8,-8,5,-5,-8,-8,3,2,3,8,-8,7,-8,-1,2,7,6,-10,9,-7,-4,-3,-1,7,-5,-7,5,6,-6,-8,8,8,-3,2,-6,8,8,-7,8,-10,-10,5,1,-9,-10,-7,4,-10,-4,10,-5,-9,8,1,-1,1,8,-7,9,7,-4,-6,10,7,10,5,6,8,10,-1,10,2,-8,-8,6,-4,2,1,8,5,7,-5,3,-4,5,-2,7,-5,-5,-10,8,1,4,1,10,-1,-7,-8,10,-1,-9,-9,9,1,-7,-4,7,-7,7,-4,-6,-6,1,-1,-7,-5,-7,5,2,-1,7,6,-3,6,4,9,-4,3,8,-6,10,1,10,5,-2,-1,-6,-6,3,-10,-3,-7,3,-2,-5,8,-4,3,7,-5,6,9,-4,-10,-6,-2,-1,-5,10,-7,-10,10,-6,-5,3,-1,6,3,-6,7,-5,-2,-9,-3,6,3,7,-9,8,-5,4,2,-7,-9,9,-6,4,-3,4,-1,-7,6,10,6,-9,-9,-6,-4,7,7,-9,2,-10,-8,2,5,-6,3,6,3,8,-10,-4,-9,-10,-7,-1,4,-6,4,-4,7,-9,7,10,3,-4,4,9,-7,2,-6,4,4,4,8,-6,7,7,-1,4,5,-8,3,4,4,5,9,-2,7,-1,-4,-2,-2,-5,-4,-8,-4,-7,4,9,7,10,3,-3,9,-7,-10,-4,-8,9,5,-2,-4,7,10,7,-10,-7,10,5,-3], dtype = "uint32")#candidate|12194|(420,)|const|uint32
var_12195 = relay.var("var_12195", dtype = "float32", shape = (39,))#candidate|12195|(39,)|var|float32
call_12192 = relay.TupleGetItem(func_11848_call(relay.reshape(var_12193.astype('float32'), [448,]), relay.reshape(const_12194.astype('uint32'), [420,]), relay.reshape(var_12195.astype('float32'), [39,]), ), 3)
call_12196 = relay.TupleGetItem(func_11852_call(relay.reshape(var_12193.astype('float32'), [448,]), relay.reshape(const_12194.astype('uint32'), [420,]), relay.reshape(var_12195.astype('float32'), [39,]), ), 3)
func_10893_call = mod.get_global_var('func_10893')
func_10897_call = mutated_mod.get_global_var('func_10897')
const_12204 = relay.const([2.946494,4.373592,-0.697333,-1.436985,-3.347230,-9.422954,7.407697,3.371810,6.260337,-7.369506,-8.428978,-1.958951,-1.870347,-1.073390,-5.139378,-6.659932,-3.142055,-7.683406,-4.503412,1.287043,4.566386,-4.100240,5.996448,-0.071158,8.840674,7.003590,-5.513869,6.040814,8.417360,-1.699269,-9.937435,-1.383246,-0.970199,6.279874,4.435746,-5.643976,-6.699897,8.479985,-4.078989,-6.087836,1.729883,4.847144,0.348657,-1.100986,-6.273863,-4.121285,9.507955,-4.480378,-7.651875,2.482832,-3.991114,-6.894386,-0.267126,-7.268267,9.565738,-1.726749,3.747366,-8.471920,2.506557,5.443567,-6.856612,-0.831930,-8.320073,2.391582,-9.592953,2.032359,-7.962726,1.561526,6.857727,6.592624,-6.885851,0.384901,-1.035539,-8.582023,-6.096458,7.095810,-4.796759,0.688388,-6.118233,6.932644,4.658140,-6.849224,-6.807091,-7.980401,5.600307,-6.758850,4.514243,3.383226,1.611848,4.195347,-6.976079,-8.100011,-6.046943,6.666811,5.024818,3.613091,8.261826,-4.804236,3.893881,-3.688107,2.463402,-5.243997,-2.073117,-3.871226,-0.545197,-6.346659,-4.823295,3.810266,-2.309757,-4.405637,8.551476,-1.590249,6.240651,-8.313898,8.300224,5.603638,7.028658,1.951223,-1.164279,7.402981,-7.610541,0.865845,6.427335,8.911923,3.806924,0.098864,-4.141871,-1.427269,-2.718160,-6.596858,3.194539,-5.147822,-8.877672,-7.017323,8.588125,1.274409,9.501074,7.501121,7.951994,-1.165671,-3.375038,1.259282,6.507935,-4.313539,-1.880226,8.911348,-9.859218,-3.133083,-2.008663,8.340835,-1.127744,6.129656,1.564775,-0.361278,0.949006,-1.696254,-9.433096,-4.135193,2.431263,-9.688926,-1.901715,7.608082,3.305401,3.260517,-7.992727,-8.578942,9.893010,1.764451,-0.427733,6.928284,-7.202259,1.944711,9.744077,2.918809,-1.832219,-6.264078,0.646016,3.195986,9.071827,-9.306014,-2.728343,-2.382402,-0.610094,-7.017257,-3.780563,6.902798,3.515736,9.655494,-1.616362,8.634888,-7.481313,5.175670,3.544766,7.806093,1.910441,6.012659,-4.687535,4.319299,4.524822,6.486357,4.976630,-2.159818,5.870323,7.207987,-5.351518,-4.337768,-1.161535,5.744677,-1.409237,-3.077549,-4.051131,2.094267,-1.074350,-6.570581,6.148587,8.518796,-5.519913,0.436925,2.611990,7.901686,-4.920805,7.493100,-0.305570,-9.376429,5.786852,-9.471715,-8.882613,-7.308888,8.098343,-4.557449,-4.038936,9.398387,-0.061539,-5.540926,-0.082880,3.586605,7.451823,2.414302,9.673400,-3.591844,2.672612,4.055689,0.779143,-7.362284,-2.299465,8.030631,-3.357003,9.677234,2.777355,-3.245520,5.264104,-2.536139,-3.447244,-8.890938,-8.827772,-0.657305,-3.826765,1.871453,7.186358,-6.259541,6.153465,-9.754477,-8.478569,-3.702968,4.396644,3.627625,-1.621624,7.654563,-1.325249,0.632235,1.320995,-2.117872,6.723811,2.034896,0.700491,-5.749145,2.998032,-0.820929,-8.627326,9.869643], dtype = "float64")#candidate|12204|(280,)|const|float64
const_12205 = relay.const([9.387723,5.240995,-1.048574,-2.667884,-5.736469,1.746102,-4.177250,2.860326,-3.647953,-7.435250,-0.998720,1.668591,0.304371,0.358254,-9.345972,0.056492,2.365996,9.350255,4.358371,5.798121,-5.980089,6.364955,6.090342,-1.644505,-1.250291,1.613132,4.541570,4.408174,-8.429124,9.854325,-9.156624,-0.631978,7.947999,2.932034,9.158525,1.270196,5.881638,-1.946965,8.624900,-9.553368,-4.182484,-7.777636,2.103021,-6.064679,-7.611173,-9.743541,-9.080693,8.215682,-5.725027,-7.826511,3.430626,9.847265,-7.810108,-9.378261,-4.770398,9.635590,-5.237944,-5.205482,8.161051,0.009495,-7.339848,5.678612,-4.722087,6.043913,1.218689,-3.276705,4.505133,-4.170568,-0.085494,8.700337,6.359149,5.873977,-3.764377,3.461457,-4.774824,-0.430079,-1.817061,-6.898832,-9.834183,2.903047,6.133573,-3.986265,9.182115,6.170185,0.976622,-2.713171,1.882982,6.052911,6.109706,-8.843695,4.909422,8.666995,-6.756304,2.668882,9.043075,-9.323290,-9.455308,4.310681,1.035475,4.584992,7.403184,-3.258369,2.844984,-2.827506,-8.915055,9.019777,8.097224,-3.365510,-1.835272,-8.551717,-4.303582,-4.124671,-2.361301,6.120613,-4.565896,-4.581640,-3.854919,9.223848,-2.061497,8.591232,-3.072102,8.382658,4.861057,9.847277,0.958501,3.383945,-3.142777,-8.746253,0.551931,9.609296,0.544411,4.660846,-1.563014,2.889008,-4.991532,0.939835,6.934531,6.361090,-0.719432,-9.540706,-9.658719,-2.246800,-9.389888,2.260390,-7.489620,9.565227,5.422118,4.827409,1.233919,-3.411765,7.477777,-7.365789,-4.596772,0.182646,-9.927933,-7.114319,7.233613,-6.695658,-9.278414,6.736699,-3.889898,-1.142529,6.636249,2.704863,-2.276131,6.532679,1.521413,7.538727,9.007336,4.401596,-8.934208,-9.069258,-9.292202,1.024218,0.974579,8.703122,-1.281009,5.072751,6.784127,-1.453710,-5.050557,-4.628155,-6.707454,-4.509049,-2.002689,9.850671,2.520995,5.554470,-5.534755,-9.622094,7.335114,5.207076,9.264099,-6.066007,5.873627,5.879058,-3.149490,-9.353696,8.115871,-6.346037,-0.157152,-6.485691,2.279642,0.227009,2.623768,8.096153,9.802085,-5.184245,1.324388,2.315573,6.410956,5.683474,-3.715052,-5.207056,-3.532891,-3.219193,6.398884,-6.500523,-4.549731,-3.857357,-7.227133,-5.255041,6.581820,-7.560841,3.622080,3.463096,-5.554553,-5.221390,-3.503773,-7.234835,8.864233,6.494717,-4.348516,-9.152511,7.035445,-9.862756,-4.899745,7.012970,0.298316,2.982879,-4.635329,1.359003,4.100546,6.436096,3.894493,-8.935547,-0.658255,3.626386,4.949542,5.192993,-6.724719,-1.197805,3.871081,-6.041252,-0.790669,8.108107,4.838578,4.669586,4.699537,-1.800813,5.266025,3.022852,1.469719,-0.926868,-6.002509,0.061249,5.240535,-7.147702,-8.839808,2.071514,-1.924383,0.216227,9.478777,-8.219415,3.974857,6.068515,2.886508,6.428885,3.757655,4.016027,1.465605,3.748592,0.444159,0.745205,-6.546410,-4.312408,-8.598882,-4.648575,-4.339811,-0.322792,-2.609244,-1.743370,-1.097236,-3.971480,1.005345,-3.075905,-7.519475,4.553187,8.988930,3.311809,4.453912,-5.713280,5.353715,-2.442602,8.068159,-7.274189,-5.032863,9.204377,-7.932904,3.060898,9.705442,-1.248911,5.035847,1.860428,2.352230,-4.762594,-0.357843,-6.506068,-9.893216,-6.315691,6.481919,7.042733,0.798940,-5.084043,-9.362416,-9.356688,1.534870,8.357373,-0.447306,6.052382,-5.286865,1.952392,-3.487405,-6.622338,-4.040457,-5.996145,0.146663,4.153335,-5.667916,-9.996910,1.257086,8.132751,-6.003478,1.377699,0.520352,-5.195943,8.877813,9.371505,9.683490,-7.000702,-6.026029,7.430522,-5.350142,-1.510505,-2.730109,7.155423,7.939673,2.975457,1.814787,0.339213,6.714083,-4.373504,2.757344,1.020407,-7.860162,-8.821493,-9.025200,-3.135795,-4.946126,-3.037165,-8.192763,7.335279,-4.662197,2.562683,6.799497,-0.871262,-3.662888,5.550381,-8.664198,-3.781711,-7.850754,4.174972,-1.355724,4.148463,1.166005,7.574427,2.723163,0.604906,0.794322,-8.400896,9.923389,-2.993078,7.735925,5.859976,-9.959075,-0.784852,-2.310704,7.114966,-5.856763,-1.021731,-3.834957,1.656157,-2.695195,2.285639,4.066006,-5.022026,3.799596,-0.495660,3.900483,-6.983323,3.096412,-8.370268,9.773285,-6.686279,7.866579,2.491075,-7.252724,9.766092,2.590524,8.173230,-1.957381,-2.280364,-5.722011,5.209793,-7.641162,5.061775,-6.987023,-3.878678,3.572858,8.138987,6.603903,2.195956,8.004607,-7.647607,0.868955,9.322954,5.348737,5.149406,-1.881577,3.572549,8.383653,-1.854976,9.722459,6.190522,3.335062,6.644282,6.804802,2.327806,9.909942,3.898017,5.248288,8.318114,-6.067487,-1.452492,9.036195,-6.738544,-0.464964,-5.628637,1.603965,-0.985247,4.140977,6.381360,-1.734329,1.956386,-2.572888,7.127729,-3.336926,-5.822634,3.519644,6.092300,0.018267,4.165973,7.213251,5.554222,6.660302,4.583324,5.826707,8.399151,2.962120,8.041422,-0.431504,1.040237,5.899077,7.002833,-3.112251,0.625568,-0.548954,7.008635,1.239092,-2.291038,4.887536,6.575670,-4.766939,-1.916842,3.334976,2.196564,-3.252813,-1.784400,2.699408,3.996905,1.886955,5.984284,4.672638,9.752891,6.372974,-5.975703,3.637227,0.271206,-5.471320,-7.693191,1.138978,2.868017,-0.214752,-8.483949,-6.366553,-1.395265,-1.937973,5.720966,-3.701771,-6.615345,4.182435,-2.832050,-6.516101,-7.186319,-1.766792,2.366043,9.498646,3.731197,-5.126889,0.041427,6.579638,-0.914809,2.716810,-2.067111,-0.218524,6.105498,5.342864,4.002134,2.445957,-6.095211,-4.620089,6.106200,6.657581,8.522390,-1.733007,-7.797844,-6.110884,-9.887603,-5.746355,-5.704434,9.198426,-3.582030,6.771262,1.328546,-2.744022,-1.561737,5.102484,-8.503766,6.116564,-0.551677,-4.460987,0.475723,-6.418855,-2.481100,-1.836791,9.086291,-3.536975,-1.379800,3.124669,-2.770135,-0.719996,-3.076363,-1.546588,-4.446610,8.529550,-9.612159,4.286070,-9.389829,4.919918,-1.383540,7.412468,6.156876,-6.738657,-8.954036,6.715627,1.156082,5.089678,3.321570,-2.902385,0.264802,9.897873,8.943938,-4.513271,-1.551441,-7.378825,8.339228,-9.629221,6.465883,5.760426,2.386162,-6.848222,-7.828729,-9.136649,6.249264,9.817771,-7.847803,-4.136270,5.590970,-0.745327,-4.201618,-0.071089,-6.456776,2.810491,0.801949,2.263176,6.833755,8.254627,-4.022256,-2.625111,-9.353200,-3.161892,-6.181396,-0.098436,1.565091,6.593633,0.316370,-3.203512,-8.064994,2.338302,-8.714571,-8.862538,-9.441519,5.768444,-0.121501,4.933732,9.544708,0.373019,-5.103056,8.415215,-6.473292,-4.150674,-6.150975,-7.025586,-5.991587,2.804776,-5.649088,-0.506768,7.714447,8.171057,1.365951,3.002613,5.717490,-7.321506,-2.458283,4.700013,-9.092109,6.861178,-1.156105,-0.350284,4.306837,7.478975,9.093691,4.959379,4.242353,-3.357289,8.948262,8.512911,4.062623,-5.481732,8.885937,-2.378389,5.386163,8.991938,0.698631,-9.634087,2.271402,4.062311,-1.424982,0.465161,2.227426,-6.000251,6.953540,8.138101,-2.913585,1.561681,-1.814431,1.281139,8.342651,7.947193,-0.010703,2.781930,-4.252786,4.034342,3.416674,-5.634654,-4.466855,7.377495,7.534775,-4.384992,2.695135,4.813419,-2.545879,6.603285,9.290119,-1.723044,4.400332,5.713072,-9.429813,-8.385466,-5.250093,3.677891,3.952912,-2.429645,7.099628,-1.696766,-2.613106,-1.311513,6.999739,-3.176113,2.437764,-0.370333,3.669931,-7.839234,-8.532827,9.054973,2.565940,-1.313348,-5.890346,2.835100,6.597419,-7.969233,-9.186892,-2.901670,-5.430968,-6.111312,-0.177187,-0.972069,0.127858,7.011952,5.229097,-5.977079,8.661072,-5.804868,7.057100,-2.044486,5.837747,5.210736,6.710759,2.214686,-3.453787,9.139117,7.473819,-3.234414,-5.570480,-9.362126,8.387000,0.030018,1.366484,-8.319642,9.751014,-9.592639,3.449606,-4.375634,0.080714,-8.936355,-5.779156,-1.902811,-2.860685,-3.290657,4.956464,-8.589805,5.223437,5.117994,3.585245,4.432352,-0.637211,-3.334250,7.582150,3.872711,-3.328697,5.380632,9.197869,-8.920911,-4.148030,5.725252,-9.527049,-6.529192,1.120382,-5.291780,6.200674,6.861213,4.635345,2.755981,0.918886,-4.890843,6.632992,-0.254691,9.575734,-9.572594,9.697461,0.782704,4.492254,6.713262,-3.111463,-3.981255,3.518584,3.333850,3.368116,-0.695840,8.816166,-7.924441,-6.993921,-7.466230,-9.629160,6.417529,-8.283852,2.667955,8.996906,-9.595940,-9.662914,8.904812,-1.087122,0.035155,-3.529161,-1.127466,-7.293589,-6.105894,7.436490,-8.142379,6.306376,4.575647,4.824637,8.448290,2.615824,-2.981626,-9.580235,-7.245812,-0.450736,-5.071022,1.529799,0.629395,-0.148944,-0.376639,-1.740978,4.926111,-1.294685,5.010590,1.850790,-4.093426,-9.698552,-1.314089,0.631983,1.288430,-6.659370,-7.826468,5.979778,4.078232,1.626363,6.160885,8.945114,3.638120,-7.702725,7.394487,7.037085,-5.382318,-8.998042,3.371433,5.388914,2.416810,-7.207027,1.201843,6.846658,5.937247,-8.309735,-4.611788,0.072807,-5.144702,-3.728633,5.028299,6.469117,1.972389,0.352972,8.233958,-2.173717,-4.936195,-3.082985,-0.786004,3.252605,-7.733507,-2.695459,5.909225,-0.178993,8.302068,2.920775,8.586568,3.378596,-4.964546,0.372921,6.786067,-5.996642,-9.462964,-8.050164,7.981132,4.606709,9.070080,-2.604856,8.494190,-2.795361,-5.247709,-9.493453,9.555300,-2.216958,-0.117675,6.260349,5.852886,4.377568,7.295397,-7.439417,9.152228,-9.469655,-9.411501,7.731840,-5.817942,-5.010150,1.211557,-0.559971,-3.030589,-4.745517,-3.428109,1.969780,-0.438751,7.004745,-8.615502,-4.186913,9.355705,-8.034614,9.309151,-0.664960,-7.841877,-2.338599,5.071470,-1.887379,-7.980253,-3.216905,-1.987819,-5.211062,-6.268111,-4.169707,-0.339943,7.451338,-7.511106,2.456592,4.005897,9.612990,-0.753607,-0.595876,-4.004881,-7.332834,2.251606,7.858954,-1.419364,-4.956570,5.400881,5.293475,8.684778,-0.182767,-8.726094,-0.126498,3.523172,9.363032,4.384905,6.571020,-1.692912,-9.364724,-9.735540,-6.474969,-4.294200,0.718882,4.797044,4.497874,8.584521,-3.238659,1.719860,-2.178492,-0.433947,-8.954934,2.537577,7.493407,5.465012,4.480420,9.976058,-6.706377,0.977575,-3.718032,-5.263218,6.591776,6.320037,-2.877123,-0.361772,2.910025,-9.306947,2.905168,1.442970,-5.770252,-4.403409,-5.181894,9.917662,5.909480,-5.068866,1.496253,9.485454,4.767187,1.225946,5.081223,-9.062497,-6.467495,8.560393,-0.328059,8.184433,5.251361,-9.722135,9.512807,2.352957,-8.833073,-1.994329,-6.783344,1.359816,-8.798136,5.063382,-6.280733,-0.438543,1.965251,-5.841310,-4.050449,-5.350610,-5.105162,6.221927,-7.736429,-8.606398,5.498809,-7.597761,9.407240,1.007474,-8.325519,5.541341,-8.100014,-9.285826,2.323775,2.895251,-9.617140,-8.274391,-7.908267,-5.298309,-6.030937,-9.101071,-0.778720,9.215999,-3.073960,5.217073,-6.912335,1.380298,5.886716,-0.434576,8.927508,-6.745856,1.379116,-6.148698,7.761281,-2.868678,6.967293,4.443619,5.397337,8.990059,4.915099,7.686369,-0.585649,-1.580655,-2.065786,-2.552668,-2.118445,4.762286,4.399461,4.039764,-4.972887,-8.494105,-7.464597,3.354519,3.637392,7.423032,-3.265328,-4.537659,-3.457287], dtype = "float32")#candidate|12205|(1092,)|const|float32
call_12203 = relay.TupleGetItem(func_10893_call(relay.reshape(const_12204.astype('float64'), [70, 4]), relay.reshape(const_12205.astype('float32'), [14, 78]), ), 7)
call_12206 = relay.TupleGetItem(func_10897_call(relay.reshape(const_12204.astype('float64'), [70, 4]), relay.reshape(const_12205.astype('float32'), [14, 78]), ), 7)
func_8219_call = mod.get_global_var('func_8219')
func_8221_call = mutated_mod.get_global_var('func_8221')
const_12219 = relay.const([-9.685947,-1.720188,-7.732848,-2.593326,-8.906853,4.584342,6.070829,-7.089305,-0.861707,-7.382543,-3.777499,-4.959706,-3.368939,2.282080,6.955771,3.813476,5.218558,1.313602,2.972523,-1.300369,-4.558122,-2.584737,0.611994,8.699649,-6.753710,-5.740685,-2.286814,4.071271,0.693077,-5.225397,4.807210,-3.053771,7.992864,-2.078328,7.840604,8.722075,-4.529048,4.713866,-6.073998,0.205736,-6.147389,2.599528,5.810680,5.088570,2.730590,3.428992,0.406536,5.711298,0.675276,-5.843310,-2.751312,-2.698028,4.511904,-2.755903,-1.274003,-0.216022,9.052589,3.577503,3.213887,-6.390933,-9.698280,1.966017,3.754289,4.133412,-2.276375,-1.659729,4.780328,0.160718,-9.480090,-4.143107,0.316574,-9.427726,-0.760164,6.413860,-1.279690,-3.349434,1.649346,6.216623,-9.628797,3.342244,-9.787056,-3.647241,-6.229807,-7.521281,1.675333,-2.763316,-2.432080,-9.473874,-4.265738,-4.343848,0.249166,-3.172976,-6.116223,6.112248,-0.931432,9.938917,-4.277385,-1.378709,5.713081,-7.402581,7.615819,1.279958,2.451747,-2.328966,-4.450745,-7.644804,4.525956,-4.062865,-5.463815,-1.900589,5.774371,1.507162,7.443623,-9.986106,1.179658,-1.267153,0.760405,-3.980590,6.103696,4.551734,7.718739,2.670424,-9.994992,-7.095625,2.331609,9.866504,-1.029663,9.609468,-4.024319,-3.346429,-8.860653,-6.086828,-6.562430,-1.901408,1.556198,4.129581,1.432918,6.389495,4.135451,4.237567,-9.528631,3.925819,8.476762,1.021599,-2.827923,8.132140,-5.191786,0.883642,-1.610739,-6.569232,0.198630,-3.478653,-2.813400,-6.773586,3.004464,-7.860876,-4.923842,-7.083367,-1.680082,0.794781,3.099958,1.702999,-1.864506,1.039028,-2.627304,-8.825241,0.437247,2.645211,-6.955453,2.145604,9.561854,9.204548,3.852434,2.876786,6.282167,0.538965,-5.961569,-5.442798,8.599798,4.649862,6.438138,7.138337,7.417517,-7.304050,-1.266403,1.734187,-1.046549,0.590571,6.354786,9.853081,7.113457,6.889503,-0.060233,-7.477733,5.106265,0.400318,1.635537,-9.602648,3.922424,-6.238380,-2.027772,0.709475,-8.814840,2.467839,-4.422590,5.951537,2.510812,5.097858,-9.978625,5.057787,2.264796,5.467464,5.598327,7.570357,-3.166042,-7.533144,-2.327836,2.377920,-7.799476,-0.719486,-7.110634,-2.128443,-9.524665,8.636812,1.274384,3.297650,1.299719,4.792254,-5.455984,-0.890459,-7.938894,7.888367,-3.752604,8.471039,9.452386,7.130588,5.460805,5.300678,7.293374,7.711914,5.369153,-1.758456,9.260209,3.235408,-4.165416,-0.702700,-7.441597,1.082512,2.332820,7.493293,-8.521911,-3.958574,-2.832159,-2.168194,-0.227402,-0.337216,-0.718499,-9.831388,-6.082135,1.130607,6.528756,0.044423,1.634244,4.385957,-1.761572,-2.117690,3.426131,-8.382492,-4.616985,-8.177387,-8.702262,2.761879,3.809967,-9.362271,9.648989,-3.301443,-9.435354,2.144574,2.595839,-7.955461,7.384519,-3.516450,1.933614,6.909714,2.498688,-9.035617,-5.767066,-2.976788,8.009218,-1.079301,-8.807778,-3.913181,-3.924144,9.918026,-6.218536,6.752527,-5.172223,-4.784914,4.190267,2.830272,4.769662,-2.688827,4.383792,8.693928,-8.041873,-6.378748,6.787977,9.590890,-2.945519,3.057001,-5.598155,-0.345732,-1.462298,-4.104472,-0.400293,3.450154,0.930246,-6.379043,-2.117949,4.161558,1.356450,-7.418904,-2.680502,-7.246146,-1.143004,3.176505,6.118603,7.953024,0.660653,7.825341,0.906229,2.061928,-0.773062,-9.677708,-8.851952,9.884696,2.839731,-2.976783,9.511839,-3.489819,-6.743847,-4.249973,4.255420,2.454537,5.257768,6.807881,7.673496,2.453723,-5.811326,4.890660,-7.019648,-9.673471,-7.842282,1.435664,7.638604,7.226611,-9.288631,5.130239,8.468426,-7.837499,1.420312,9.161999,-1.924268,2.366438,-5.299608,1.621628,5.611874,-4.208321,-8.614441,-0.779215,9.920039,9.386290,5.559723,-3.307562,-0.920079,-5.890353,-0.988709,-3.077721,-3.513358,6.015053,-3.232308,6.252951,-5.880779,3.721882,-0.630256,-7.185218,1.029989,5.255138,3.506607,4.042536,-2.269382,7.811820,-6.985953,5.432886,7.039658,7.578179,-7.958976,-5.176058,7.724554,3.021068,3.289044,8.704469,-8.088907,0.288352,-7.258774,6.057508,-1.503165,0.482745,-4.623423,-9.705794,4.750365,-9.940874,-7.126987,-0.607395,-3.526471,5.749947,-8.948668,9.004315,5.092644,-6.158264,9.964924,-9.015311,-4.629621,-9.730927,9.543992,2.535403,7.082869,-7.378698,-0.273569,0.900249,-7.825130,-1.847943,9.633685,0.471789,-2.387807,4.385037,1.046664,-5.180972,0.880153,7.119588,4.901324,-4.165369,-5.162894,-8.692137,4.895648,8.132820,1.225287,-3.122593,2.884842,4.363718,1.194487,-2.899844,6.487360,6.552676,3.761321,8.186660,0.699529,6.756997,-7.113169,-6.224101,3.742894,4.345022,7.126650,-4.703429,-9.657699,-6.208272,-9.567297,-0.899685,1.702286,-0.203887,-0.994405,3.708108,2.467629,6.063420,9.316938,-5.644730,-7.837720,9.977482,9.892265,-3.385943,4.643324,-9.343681,3.544136,9.222878,-6.030118,-0.499930,1.208742,-8.643730,-8.371562,-6.728052,4.083881,5.593883,7.040525,0.426429,-2.735456,-9.331340,-4.858140,0.188932,5.579793,3.468082,-7.899712,1.519052,9.892225,5.060230], dtype = "float32")#candidate|12219|(504,)|const|float32
call_12218 = relay.TupleGetItem(func_8219_call(relay.reshape(const_12219.astype('float32'), [504,])), 5)
call_12220 = relay.TupleGetItem(func_8221_call(relay.reshape(const_12219.astype('float32'), [504,])), 5)
func_12021_call = mod.get_global_var('func_12021')
func_12022_call = mutated_mod.get_global_var('func_12022')
call_12225 = relay.TupleGetItem(func_12021_call(), 1)
call_12226 = relay.TupleGetItem(func_12022_call(), 1)
output = relay.Tuple([call_12183,call_12192,var_12193,const_12194,var_12195,call_12203,const_12204,const_12205,call_12218,const_12219,call_12225,])
output2 = relay.Tuple([call_12184,call_12196,var_12193,const_12194,var_12195,call_12206,const_12204,const_12205,call_12220,const_12219,call_12226,])
func_12241 = relay.Function([var_12193,var_12195,], output)
mod['func_12241'] = func_12241
mod = relay.transform.InferType()(mod)
mutated_mod['func_12241'] = func_12241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12241_call = mutated_mod.get_global_var('func_12241')
var_12243 = relay.var("var_12243", dtype = "float32", shape = (448,))#candidate|12243|(448,)|var|float32
var_12244 = relay.var("var_12244", dtype = "float32", shape = (39,))#candidate|12244|(39,)|var|float32
call_12242 = func_12241_call(var_12243,var_12244,)
output = call_12242
func_12245 = relay.Function([var_12243,var_12244,], output)
mutated_mod['func_12245'] = func_12245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7934_call = mod.get_global_var('func_7934')
func_7935_call = mutated_mod.get_global_var('func_7935')
call_12261 = func_7934_call()
call_12262 = func_7934_call()
output = call_12261
output2 = call_12262
func_12267 = relay.Function([], output)
mod['func_12267'] = func_12267
mod = relay.transform.InferType()(mod)
output = func_12267()
func_12268 = relay.Function([], output)
mutated_mod['func_12268'] = func_12268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8052_call = mod.get_global_var('func_8052')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_12334 = func_8052_call()
call_12335 = func_8052_call()
func_5930_call = mod.get_global_var('func_5930')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_12336 = relay.TupleGetItem(func_5930_call(), 0)
call_12337 = relay.TupleGetItem(func_5931_call(), 0)
output = relay.Tuple([call_12334,call_12336,])
output2 = relay.Tuple([call_12335,call_12337,])
func_12347 = relay.Function([], output)
mod['func_12347'] = func_12347
mod = relay.transform.InferType()(mod)
mutated_mod['func_12347'] = func_12347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12347_call = mutated_mod.get_global_var('func_12347')
call_12348 = func_12347_call()
output = call_12348
func_12349 = relay.Function([], output)
mutated_mod['func_12349'] = func_12349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5139_call = mod.get_global_var('func_5139')
func_5140_call = mutated_mod.get_global_var('func_5140')
call_12350 = relay.TupleGetItem(func_5139_call(), 0)
call_12351 = relay.TupleGetItem(func_5140_call(), 0)
func_11611_call = mod.get_global_var('func_11611')
func_11612_call = mutated_mod.get_global_var('func_11612')
call_12352 = func_11611_call()
call_12353 = func_11611_call()
func_406_call = mod.get_global_var('func_406')
func_409_call = mutated_mod.get_global_var('func_409')
var_12368 = relay.var("var_12368", dtype = "float32", shape = (84, 24))#candidate|12368|(84, 24)|var|float32
var_12369 = relay.var("var_12369", dtype = "uint64", shape = (162,))#candidate|12369|(162,)|var|uint64
call_12367 = relay.TupleGetItem(func_406_call(relay.reshape(var_12368.astype('float32'), [9, 16, 14]), relay.reshape(var_12369.astype('uint64'), [162,]), ), 2)
call_12370 = relay.TupleGetItem(func_409_call(relay.reshape(var_12368.astype('float32'), [9, 16, 14]), relay.reshape(var_12369.astype('uint64'), [162,]), ), 2)
func_6753_call = mod.get_global_var('func_6753')
func_6754_call = mutated_mod.get_global_var('func_6754')
call_12376 = relay.TupleGetItem(func_6753_call(), 0)
call_12377 = relay.TupleGetItem(func_6754_call(), 0)
func_9757_call = mod.get_global_var('func_9757')
func_9760_call = mutated_mod.get_global_var('func_9760')
call_12378 = relay.TupleGetItem(func_9757_call(relay.reshape(var_12369.astype('uint64'), [162,])), 3)
call_12379 = relay.TupleGetItem(func_9760_call(relay.reshape(var_12369.astype('uint64'), [162,])), 3)
uop_12380 = relay.cos(var_12368.astype('float64')) # shape=(84, 24)
uop_12385 = relay.atanh(uop_12380.astype('float64')) # shape=(84, 24)
output = relay.Tuple([call_12350,call_12352,call_12367,var_12369,call_12376,call_12378,uop_12385,])
output2 = relay.Tuple([call_12351,call_12353,call_12370,var_12369,call_12377,call_12379,uop_12385,])
func_12403 = relay.Function([var_12368,var_12369,], output)
mod['func_12403'] = func_12403
mod = relay.transform.InferType()(mod)
mutated_mod['func_12403'] = func_12403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12403_call = mutated_mod.get_global_var('func_12403')
var_12405 = relay.var("var_12405", dtype = "float32", shape = (84, 24))#candidate|12405|(84, 24)|var|float32
var_12406 = relay.var("var_12406", dtype = "uint64", shape = (162,))#candidate|12406|(162,)|var|uint64
call_12404 = func_12403_call(var_12405,var_12406,)
output = call_12404
func_12407 = relay.Function([var_12405,var_12406,], output)
mutated_mod['func_12407'] = func_12407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10075_call = mod.get_global_var('func_10075')
func_10076_call = mutated_mod.get_global_var('func_10076')
call_12454 = func_10075_call()
call_12455 = func_10075_call()
func_7269_call = mod.get_global_var('func_7269')
func_7272_call = mutated_mod.get_global_var('func_7272')
call_12466 = func_7269_call(relay.reshape(call_12454.astype('float64'), [15, 2, 8]))
call_12467 = func_7269_call(relay.reshape(call_12454.astype('float64'), [15, 2, 8]))
output = relay.Tuple([call_12454,call_12466,])
output2 = relay.Tuple([call_12455,call_12467,])
func_12475 = relay.Function([], output)
mod['func_12475'] = func_12475
mod = relay.transform.InferType()(mod)
output = func_12475()
func_12476 = relay.Function([], output)
mutated_mod['func_12476'] = func_12476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7971_call = mod.get_global_var('func_7971')
func_7972_call = mutated_mod.get_global_var('func_7972')
call_12489 = relay.TupleGetItem(func_7971_call(), 0)
call_12490 = relay.TupleGetItem(func_7972_call(), 0)
func_4231_call = mod.get_global_var('func_4231')
func_4234_call = mutated_mod.get_global_var('func_4234')
var_12494 = relay.var("var_12494", dtype = "float64", shape = ())#candidate|12494|()|var|float64
call_12493 = relay.TupleGetItem(func_4231_call(relay.reshape(var_12494.astype('float64'), [])), 0)
call_12495 = relay.TupleGetItem(func_4234_call(relay.reshape(var_12494.astype('float64'), [])), 0)
bop_12500 = relay.bitwise_xor(call_12489.astype('int8'), var_12494.astype('int8')) # shape=(15, 2, 8)
bop_12503 = relay.bitwise_xor(call_12490.astype('int8'), var_12494.astype('int8')) # shape=(15, 2, 8)
output = relay.Tuple([call_12493,bop_12500,])
output2 = relay.Tuple([call_12495,bop_12503,])
func_12526 = relay.Function([var_12494,], output)
mod['func_12526'] = func_12526
mod = relay.transform.InferType()(mod)
mutated_mod['func_12526'] = func_12526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12527 = relay.var("var_12527", dtype = "float64", shape = ())#candidate|12527|()|var|float64
func_12526_call = mutated_mod.get_global_var('func_12526')
call_12528 = func_12526_call(var_12527)
output = call_12528
func_12529 = relay.Function([var_12527], output)
mutated_mod['func_12529'] = func_12529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9842_call = mod.get_global_var('func_9842')
func_9844_call = mutated_mod.get_global_var('func_9844')
call_12559 = relay.TupleGetItem(func_9842_call(), 0)
call_12560 = relay.TupleGetItem(func_9844_call(), 0)
func_7356_call = mod.get_global_var('func_7356')
func_7358_call = mutated_mod.get_global_var('func_7358')
call_12565 = relay.TupleGetItem(func_7356_call(), 0)
call_12566 = relay.TupleGetItem(func_7358_call(), 0)
output = relay.Tuple([call_12559,call_12565,])
output2 = relay.Tuple([call_12560,call_12566,])
func_12585 = relay.Function([], output)
mod['func_12585'] = func_12585
mod = relay.transform.InferType()(mod)
mutated_mod['func_12585'] = func_12585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12585_call = mutated_mod.get_global_var('func_12585')
call_12586 = func_12585_call()
output = call_12586
func_12587 = relay.Function([], output)
mutated_mod['func_12587'] = func_12587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6404_call = mod.get_global_var('func_6404')
func_6405_call = mutated_mod.get_global_var('func_6405')
call_12662 = relay.TupleGetItem(func_6404_call(), 1)
call_12663 = relay.TupleGetItem(func_6405_call(), 1)
func_5552_call = mod.get_global_var('func_5552')
func_5557_call = mutated_mod.get_global_var('func_5557')
const_12675 = relay.const([-9.928565,1.293348,-5.782212,-9.653153,0.586299,-0.468092,-9.432809,-9.528973,0.559710,-4.781042,-2.514887,0.260623,-4.672492,-2.265028,0.989090,-8.748167,7.120381,-4.164754,5.103931,-7.135923,3.825703,-9.995619,2.897017,-1.278620,6.809049,-0.221923,-3.952484,-6.788937,-7.116127,-2.325567,5.663756,-7.107555,-4.143258,-6.855390,2.726234,-4.229484,-0.498460,-6.545722,5.655382,-0.868213,5.506818,6.542712,-2.338669,-5.682409,-4.921428,5.932735,3.944486,-8.980354,-5.487643,5.664611,-0.964990,-9.067591,-0.555950,-2.231752,2.270039,-4.006467,8.677743,-7.062088,-1.085700,-0.679805,-3.619164,-6.732921,8.505905,3.639151,7.363124,7.715964,3.394994,-1.282998,-3.042632,4.031405,-1.021477,-3.977219,9.284774,0.153407,-7.654086,1.261748,3.059998,-3.237795,-7.490908,-8.349742,0.351218,5.508378,3.598808,-5.074933,-2.344584,-6.208914,-5.255886,-6.382063,2.261208,4.725344,-6.870073,-5.049660,-7.332819,-7.138499,8.721264,-9.447760,8.504158,3.263847,-6.591542,-3.684174,6.524625,0.805711,-5.497788,-6.053198,1.831697,2.304101,-9.034293,-9.719788,-3.704666,4.491098,2.063987,-4.081354,-2.561065,-0.548415,-0.534390,6.788194,3.130220,6.666267,2.524404,0.185116,4.965264,-6.743405,1.843642,-5.135418,3.544658,4.020905,3.682960,1.887151,0.047506,-9.225781,9.606815,9.717687,-3.571682,-0.864241,-2.494858,9.077373,-7.603175,0.493870,-1.627340,3.941730,-3.357750,-0.324274,9.539406,8.067801,3.694228,-2.859288,4.037986,5.289251,-2.795017,6.474489,-1.261515,-0.932849,-3.729892,-8.363212,1.778389,3.762464,-6.811982,4.611641,5.266265,-3.803528,7.641138,1.191805,-4.606019,-3.000342,-8.087960,-9.370071,-9.100630,6.189641,-5.761320,5.878418,-8.307720,1.482307,0.096680,-8.915918,2.305356,3.614594,1.800833,-8.880082,-5.189295,-9.832481,-9.635384,4.995263,8.216139,-0.879260,-7.743484,9.450233,-0.123415,5.295927,7.728439,-4.587670,-6.534198,2.911912,5.730919,6.075737,2.550895,-1.696322,-0.849366,-6.937166,4.614615,-0.893261,6.835627,-6.804760,-8.408622,8.445628,3.885416,4.602062,2.057772,2.079829,-4.036907,-3.910724,-6.625398,0.427018,-3.556742,-5.761440,-1.351969,5.358243,-6.815809,0.594317,2.610330,-8.276184,9.323358,-1.617262,6.154472,2.471065,6.848853,5.429047,-6.410575,-9.770192,-6.152334,-3.095089,3.300312,-7.644063,3.069950,0.773660,-3.220739,9.355427,7.456119,2.300244,3.793567,-1.974816,-3.410553,-5.234787,-1.831428,-2.618453,1.946088,-7.057705,-7.004834,-1.941944,-2.661081,0.660184,-1.015717,-6.461430,-6.557130,-3.682446,-2.872362,-4.608437,-2.533611,-3.671700,-7.764897,7.907814,6.740967,-1.824049,5.928708,-3.714870,-2.518994,-5.288602,-2.608587,-8.252106,-6.831374,9.040492,2.924161,-2.872896,-3.392103,9.303527,0.397846,6.250610,-5.890816,-5.894409,-2.898443,9.072783,-9.934027,6.472974,6.773092,-7.404758,-6.635463,-1.498555,0.937123,0.382462,3.068493,-6.656845,-7.682585,-1.896641,-3.080013,-2.688991,7.338485,2.529591,9.472303,-2.240094,8.532574,1.671345,-9.575853,6.444724,-4.215160,-4.176282,9.045434,-8.459280,-5.476500,-2.834684,1.863604,7.539480,4.531845,6.485254,-3.840010,3.832739,-4.774531,1.471187,-7.017964,-8.321075,-6.426123,4.344972,-5.906617,4.491840,-8.293007,5.648298,-3.392559,-1.435422,1.302612,-9.210457,2.135118,5.767453,-5.307403,9.267481,-6.659329,3.709813,-1.305249,-3.033609,-1.185789,1.729401,-2.544495,9.616829,8.943384,-4.315611,8.363230,-3.729495,-1.707301,-1.773875,2.606561,8.209066,6.734849,-3.545904,9.113999,-8.679624,-4.679119,-9.576323,-7.324504,7.530754,2.924924,7.791642,-0.206116,-2.262919,7.193789,-6.467680,-9.546311,-8.263551,-0.174534,1.539592,-7.320636,-7.764915,8.036421,1.873141,-4.819902,8.237436,-6.449486,-0.411280,1.005124,1.194539,7.547191,2.941596,8.193272,6.154307,-9.918075,-8.163164,0.543731,2.099644,6.416224,-0.372578,7.097266,-2.544004,-9.625050,-4.496776,7.792804,2.274045,7.043239,-3.405837,-6.085018,3.425902,-3.202301,8.979700,-3.791672,-9.320375,5.730346,0.605788,-7.379965,-1.566602,-7.709240,-4.766748,-6.141130,-4.934998,-2.933617,9.760880,-7.076351,3.660164,-2.181715,-4.702489,3.233429,-0.338206,-7.377943,6.000592,6.176631,7.986477,5.584287,3.707927,1.396110,9.073124,-5.570943,0.063710,8.668929,7.404506,6.364711,-1.129659,-0.815161,-5.976094,-6.421715,-0.673908,7.275028,0.833454,5.846940,0.457463,-4.804154,0.212624,8.561949,-7.728476,2.959348,-7.081508,7.198379,-6.479796,7.813352,-4.420827,-4.617835,-5.422105,4.051185,-6.455173,-9.513149,9.538037,4.176719,-0.913230,0.731775,1.526027,-9.981597,-7.193570,4.977854,-7.574592,2.973210,-3.354110,5.320228,7.558675,2.871805,5.726553,8.453650,-2.914417,5.956885,2.386327,4.297018,-4.206440,-9.556751,-7.828078,9.213848,6.709414,0.946042,-3.020903,-6.882733,2.465094,-4.800653,9.021689,-3.854578,-0.518581,-4.997855,-3.999511,-3.096314,-8.968180,5.276440,-5.098882,3.974364,0.589299,-2.752225,6.870593,-3.309493,-1.184849,6.958468,-6.430199,0.200916,-8.373601,4.539192,-3.137529,7.509707,-1.641523,9.725912,3.276320,-3.552614,8.888705,-6.177646,7.117742,-4.642627,4.889125,-3.942427,0.839332,-8.298538,6.859639,-9.599141,-9.053196,-3.137418,2.590946,2.604216,-3.484149,3.841820,-2.260931,-6.262410,-3.987694,5.216955,3.107178,-1.286705,-3.725320,-1.267093,-1.754757,9.806475,-8.894926,6.053802,6.698967,-3.081995,9.093122,0.914147,6.091754,4.290273,-1.977320,-3.236865,-2.083370,-4.557602,0.735554,1.382556,-8.437038,-0.654043,-5.855290,-1.206507,6.333678,-9.077111,-3.500336,-4.881441,1.959713,-3.275050,6.760085,9.224148,9.353343,-8.964654,-3.416512,-7.149919,-3.515290,0.804233,-8.170695,-3.688036,-7.331255,-2.784558,-3.966196,9.400105,6.493219,-4.305370,-8.474864,-0.635157,6.276224,-3.531093,-3.099125,-0.092877,-8.474587,-2.965828,5.981033,-7.447022,0.611280,6.523066,8.498978,0.989590,-6.432960,5.503720,-6.988661,-1.697819,-1.490203,1.135272,7.344131,7.758967,-2.762352,-9.022620,-4.419361,9.905855,-6.063951,-7.143239,4.436673,-2.891977,4.718589,-1.021954,3.313983,1.546873,-7.644653,5.730770,9.628771,3.057723,-6.552305,1.923338,-4.137055,-0.323952,3.815314,-2.663577,-8.932145,-6.446952,0.316926,2.199900,0.968007,-3.846920,-8.663665,7.661758,1.880824,8.430630,5.136222,-8.988473,5.331999,-2.331213,5.576372,-0.589348,9.910783,4.272209,2.108871,2.541857,-6.272265,-9.133800,1.286671,-8.162398,-2.215133,-2.778580,-5.932515,2.482201,2.716918,3.321821,7.886147,9.493580,-3.649684,0.943392,4.226738,4.526928,-4.333565,-1.380625,8.360328,-6.570262,-3.916155,5.970061,-3.093959,4.925839,-7.184388,-8.196045,-4.651384,-9.462073,2.713944,-0.686148,6.643448,-1.679682,-7.182683,8.069060,1.541714,0.325936,7.682318,-3.918671,-3.550961,4.663360,-2.642333,-3.406383,8.335501,-9.839915,-3.289683,-3.117780,-7.113412,3.737470,7.761610,-6.780810,0.086355,1.500146,0.074084,-2.541869,8.206236,-1.684018,6.773227,-5.827895,-6.089152,4.751000,0.550221,-2.704934,-5.025451,-3.692636,-4.128679,-5.889616,4.176540,-1.119000,-2.876520,-4.832602,3.346154,9.269267,7.579512,3.771971,-1.757083,-7.554737,-7.740389,3.900106,-4.894666,0.304234,4.018777,-9.531496,3.311718,9.660513,6.478321,2.342129,-1.525980,-6.087187,-2.381733,1.150010,-6.774599,-1.853665,-4.794814,-3.405735,-1.150155,-8.699689,3.562380,-7.767625,1.415119,-7.976182,0.795121,7.523851,1.665210,3.319645,-3.900907,-0.504977,-2.501093,6.071438,9.346335,1.452474,3.333280,1.330430,5.657805,8.594793,1.645086,0.826258,7.412802,-3.499097,-1.646417,-1.616542,2.564399,-8.957909,-0.830526,-2.010871,7.489890,8.532864,2.914489,9.202433,-7.928425,-5.178848,2.070139,-1.279235,-1.490871,7.608751,-3.861107,4.508679,-4.740387,6.770633,-0.197128,-9.646458,3.242950,-2.407729,-1.074672,1.151478,0.904316,-5.564761,-5.426419,7.263776,-8.835144,4.830341,5.956604,-1.461042,-5.371694,-5.649139,3.666157,-6.442005,-8.743099,-3.800095,9.420242,4.529758,5.643287,4.264479,-1.372542,-1.733637,3.252377,2.808296,1.397593,-8.895774,6.936585,-6.481843,-3.060971,4.792783,6.107748,5.581416,-6.833736,8.630262,0.539625,8.341371,-5.342073,-2.678113,8.862481,-3.340046,4.526308,4.999255,6.409272,2.909851,-3.778663,-8.404594,-1.819679,-7.406216,-9.101666,-8.633709,-2.441608,5.009826,-8.754084,-5.334189,5.925022,-4.541871,-3.853250,4.273227,9.985157,9.386511,4.318530,4.603472,7.870173,-4.263284,-1.166882,0.114762,-5.153639,5.637332,-9.932997,0.979474,-3.193496,-7.020866,5.108663,-3.381345,7.229295,-4.688458,2.880242,-2.758097,-1.969570,-4.970449,-5.348431,2.260206,-5.171981,1.153107,6.091645,-8.791640,-9.639477,-9.756993,-3.108363,-7.918830,-0.566633,-9.824143,-8.799128,-4.959030,-3.968871,0.144969,0.326481,6.739395,3.460000,-5.765323,6.036245,-1.887402,-0.837450,7.465034,9.649167,-9.414923,0.794790,9.650826,0.578292,-9.328013,-3.776271,-4.013480,-6.680408,3.350104,-4.240232,-4.021197,-1.869893,5.318359,8.859297,2.868038,-5.661165,-2.479332,9.821396,-2.693938,-0.681622,-3.948103,-0.705354,-7.037436,-7.204087,5.275349,7.720287,9.786118,-9.983193,-3.356426,7.403182,0.706075,7.921314,1.436061,4.143554,-8.141843,-3.188438,1.009847,7.484539,-6.672631,5.647949,4.797927,4.103914,5.375847,3.520483,-3.253126,1.007975,8.238650,3.251003,0.496979,-7.996873,-4.419343,-9.456308,4.919376,2.212214,-7.640505,2.775034,-2.162900,-1.046444,6.281646,7.797259,-8.597334,9.088057,-3.857781,8.710097,9.559832,1.845210,-1.088107,9.413689,3.689369,1.694001,-7.404039,0.160246,-4.326337,-2.185465,-5.442202,6.100412,-6.898347,-0.439633,1.716063,6.679989,2.376655,8.676995,-7.757816,1.295090,4.024856,4.330255,-1.930557,-5.540764,-8.981078,-2.857036,3.815313,-0.055935,-7.581624,-2.562327,-8.498053,-7.309486,-9.790452,8.320859,4.079452,-0.077502,-5.093468,-3.388796,7.259645,5.111635,9.280186,-4.583908,5.198322,-8.756679,5.201088,2.238243,-4.629389,3.322889,6.824204,-9.045593,7.064420,-2.185750,-7.429146,-9.454866,8.685242,-8.367706,1.043704,6.024580,6.726430,-8.403697,-9.490521,-4.605376,-3.578285,8.592703,-2.977855,-7.443249,3.583247,0.271086,6.042614,1.420827,9.930377,0.132124,-0.287951,1.628839,-3.766262,-0.891425,-6.552264,-0.117423,-4.003313,-8.745198,3.085232,-1.370780,4.351827,-1.418754,-0.624733,-8.643409,7.175725,-8.091043,-1.841759,9.043218,-6.158344,-2.600385,-3.656768,0.252873,-7.174827,-9.577398,-1.113361,-7.893989,-2.050481,-4.950476,-1.859979,8.664504,-1.735096,7.348489,4.950809,2.225292,-7.683674,-7.719546,-2.309171,0.112376,-4.315037,-3.963598,0.620846,-4.039448,-4.909614,-1.444162,7.114089,-3.495927,4.279510,1.579000,1.301369,-6.847049,-5.837702,-7.991005,-5.146351,2.195162,4.267580,9.318705,7.236954,4.753231,-8.752535,-2.673871,3.655170,7.489101,7.946924,2.575330,-4.289285,-4.796370,1.119282,3.185689,1.584340,-1.057024], dtype = "float32")#candidate|12675|(1092,)|const|float32
const_12676 = relay.const([False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True], dtype = "bool")#candidate|12676|(300,)|const|bool
const_12677 = relay.const([-3.546631,5.772388,6.159895,-1.146321,-2.177508,-7.445837,-2.113804,1.495502,9.247380,-9.118650,-3.786211,2.768629,-9.516559,8.100797,6.586930,-1.768289,-9.138356,-2.361862,-9.865226,0.823012,-3.145030,2.862530,-3.214446,5.470749,2.920109,0.598829,3.877168,0.804722,-8.152415,0.389886,5.102378,4.744978,-9.975589,8.535723,-3.123790,2.773089,-4.017453,6.277850,-3.299601,4.041097,-5.316341,6.612523,9.834313,-8.756146,0.517926,0.034768,9.719463,-0.753682,6.055064,-9.177823,-4.686210,-6.123541,6.203605,2.356325,-9.316691,9.905268,4.971046,6.859848,7.018094,-8.601582,3.422250,4.035697,-8.889322,-0.693896,3.003315,4.981759,5.745669,7.214309,8.192206,-4.902512,1.037809,0.620422,-5.018416,8.649849,-8.440532,-2.550168,-5.320266,-3.788144,2.210290,-2.134272,-4.717076,-4.212180,2.934063,-3.363134,-1.208210,-7.224605,-0.032255,9.544660,-8.799097,-7.499862,-5.757736,1.207992,-2.515307,-9.538903,-1.848857,-9.295586,-6.131757,-6.244471,-0.358920,4.194398,5.173893,-8.073068,4.867222,-0.045386,5.000101,-9.737423,2.116306,-9.929438,2.838567,8.674565,1.333748,-7.806058,-9.290134,7.783117,9.083927,-6.810622,-3.351128,-2.524281,-6.484589,-7.474821,5.138137,0.826324,-9.123668,-4.832912,-4.403671,6.767829,-5.797052,-1.140696,4.182085,6.260371,-7.373840,6.989301,9.825511,-7.340873,4.649020,4.981382,1.445496,3.474084,-2.878739,8.438299,-4.559953,-0.662083,1.407250,9.830179,-7.682340,5.040594,-1.746009,4.213896,0.096592,3.760160,-2.296849,3.880242,-3.656719,2.050810,0.140472,8.148190,-0.430659,-4.397149,-1.586879,-8.442643,-5.339587,8.299801,-9.544961,-7.651377,-0.970007,-4.041044,-5.331602,-1.370029,3.838157,0.224170,6.097822,-2.083563,-8.051302,3.793883,-8.054309,1.946252,0.391202,-5.713849,-0.987739,2.739374,-9.469167,9.296636,-8.346084,9.834408,-9.080899,-5.933716,-0.533941,5.702757,7.128676,7.409333,-3.571842,-7.420238,-0.125334,8.174260,-7.457650,5.840517,7.487604,8.619496,8.939795,3.477583,-6.612907,1.615214,-4.666101,3.620305,9.891603,8.424340,-7.435330,6.804291,-4.043644,7.685003,-6.953216,-8.907954,3.450149,6.289911,-2.864547,-7.800718,-6.506144,8.008625,-1.905518,-8.956398,-1.022899,1.312338,3.210681,8.264232,-8.392990,-3.520781,2.330183,-1.791175,3.073661,2.266027,-9.156686,-1.942350,4.642600,5.110957,-5.129999,4.458412,4.846753,8.869329,-8.154309,0.523505,2.039162,3.814535,-4.816918,-1.847640,6.424470,7.551416,6.132685,-8.442240,-0.880515,2.256497,3.861423,2.391507,4.870606,8.116851,6.796080,-4.075780,3.512161,9.441354,9.664553,9.195612,-6.391628,-0.435429,-3.256577,-5.532688,-3.462322,6.305908,4.079737,9.615829,-8.073736,-8.143209,9.630541,-1.744902,-0.140032,-3.876586,6.382243,-1.397439,-1.656621,-3.035559,5.077246,1.783572], dtype = "float64")#candidate|12677|(280,)|const|float64
var_12678 = relay.var("var_12678", dtype = "int16", shape = (24,))#candidate|12678|(24,)|var|int16
call_12674 = relay.TupleGetItem(func_5552_call(relay.reshape(const_12675.astype('float32'), [1092,]), relay.reshape(const_12676.astype('bool'), [300,]), relay.reshape(const_12677.astype('float64'), [280,]), relay.reshape(var_12678.astype('int16'), [24,]), ), 0)
call_12679 = relay.TupleGetItem(func_5557_call(relay.reshape(const_12675.astype('float32'), [1092,]), relay.reshape(const_12676.astype('bool'), [300,]), relay.reshape(const_12677.astype('float64'), [280,]), relay.reshape(var_12678.astype('int16'), [24,]), ), 0)
func_9171_call = mod.get_global_var('func_9171')
func_9172_call = mutated_mod.get_global_var('func_9172')
call_12680 = relay.TupleGetItem(func_9171_call(), 0)
call_12681 = relay.TupleGetItem(func_9172_call(), 0)
var_12682 = relay.var("var_12682", dtype = "float32", shape = (1092,))#candidate|12682|(1092,)|var|float32
bop_12683 = relay.mod(const_12675.astype('float32'), relay.reshape(var_12682.astype('float32'), relay.shape_of(const_12675))) # shape=(1092,)
func_11028_call = mod.get_global_var('func_11028')
func_11031_call = mutated_mod.get_global_var('func_11031')
const_12701 = relay.const([True,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False], dtype = "bool")#candidate|12701|(30,)|const|bool
var_12702 = relay.var("var_12702", dtype = "uint64", shape = (162,))#candidate|12702|(162,)|var|uint64
call_12700 = relay.TupleGetItem(func_11028_call(relay.reshape(const_12701.astype('bool'), [1, 30]), relay.reshape(var_12702.astype('uint64'), [162,]), ), 1)
call_12703 = relay.TupleGetItem(func_11031_call(relay.reshape(const_12701.astype('bool'), [1, 30]), relay.reshape(var_12702.astype('uint64'), [162,]), ), 1)
uop_12720 = relay.log(var_12682.astype('float32')) # shape=(1092,)
output = relay.Tuple([call_12662,call_12674,const_12676,const_12677,var_12678,call_12680,bop_12683,call_12700,const_12701,var_12702,uop_12720,])
output2 = relay.Tuple([call_12663,call_12679,const_12676,const_12677,var_12678,call_12681,bop_12683,call_12703,const_12701,var_12702,uop_12720,])
func_12723 = relay.Function([var_12678,var_12682,var_12702,], output)
mod['func_12723'] = func_12723
mod = relay.transform.InferType()(mod)
var_12724 = relay.var("var_12724", dtype = "int16", shape = (24,))#candidate|12724|(24,)|var|int16
var_12725 = relay.var("var_12725", dtype = "float32", shape = (1092,))#candidate|12725|(1092,)|var|float32
var_12726 = relay.var("var_12726", dtype = "uint64", shape = (162,))#candidate|12726|(162,)|var|uint64
output = func_12723(var_12724,var_12725,var_12726,)
func_12727 = relay.Function([var_12724,var_12725,var_12726,], output)
mutated_mod['func_12727'] = func_12727
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12815 = relay.var("var_12815", dtype = "float32", shape = (11, 12, 6))#candidate|12815|(11, 12, 6)|var|float32
uop_12816 = relay.tan(var_12815.astype('float32')) # shape=(11, 12, 6)
var_12822 = relay.var("var_12822", dtype = "float32", shape = (11, 12, 6))#candidate|12822|(11, 12, 6)|var|float32
bop_12823 = relay.logical_xor(uop_12816.astype('uint32'), relay.reshape(var_12822.astype('uint32'), relay.shape_of(uop_12816))) # shape=(11, 12, 6)
output = relay.Tuple([bop_12823,])
output2 = relay.Tuple([bop_12823,])
func_12846 = relay.Function([var_12815,var_12822,], output)
mod['func_12846'] = func_12846
mod = relay.transform.InferType()(mod)
mutated_mod['func_12846'] = func_12846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12846_call = mutated_mod.get_global_var('func_12846')
var_12848 = relay.var("var_12848", dtype = "float32", shape = (11, 12, 6))#candidate|12848|(11, 12, 6)|var|float32
var_12849 = relay.var("var_12849", dtype = "float32", shape = (11, 12, 6))#candidate|12849|(11, 12, 6)|var|float32
call_12847 = func_12846_call(var_12848,var_12849,)
output = call_12847
func_12850 = relay.Function([var_12848,var_12849,], output)
mutated_mod['func_12850'] = func_12850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10852_call = mod.get_global_var('func_10852')
func_10854_call = mutated_mod.get_global_var('func_10854')
call_12904 = relay.TupleGetItem(func_10852_call(), 0)
call_12905 = relay.TupleGetItem(func_10854_call(), 0)
func_10527_call = mod.get_global_var('func_10527')
func_10528_call = mutated_mod.get_global_var('func_10528')
call_12920 = relay.TupleGetItem(func_10527_call(), 1)
call_12921 = relay.TupleGetItem(func_10528_call(), 1)
output = relay.Tuple([call_12904,call_12920,])
output2 = relay.Tuple([call_12905,call_12921,])
func_12924 = relay.Function([], output)
mod['func_12924'] = func_12924
mod = relay.transform.InferType()(mod)
output = func_12924()
func_12925 = relay.Function([], output)
mutated_mod['func_12925'] = func_12925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5665_call = mod.get_global_var('func_5665')
func_5666_call = mutated_mod.get_global_var('func_5666')
call_12945 = relay.TupleGetItem(func_5665_call(), 0)
call_12946 = relay.TupleGetItem(func_5666_call(), 0)
func_1442_call = mod.get_global_var('func_1442')
func_1445_call = mutated_mod.get_global_var('func_1445')
var_12955 = relay.var("var_12955", dtype = "float64", shape = (280,))#candidate|12955|(280,)|var|float64
call_12954 = relay.TupleGetItem(func_1442_call(relay.reshape(var_12955.astype('float64'), [7, 10, 4])), 0)
call_12956 = relay.TupleGetItem(func_1445_call(relay.reshape(var_12955.astype('float64'), [7, 10, 4])), 0)
uop_12962 = relay.asinh(var_12955.astype('float64')) # shape=(280,)
output = relay.Tuple([call_12945,call_12954,uop_12962,])
output2 = relay.Tuple([call_12946,call_12956,uop_12962,])
func_12967 = relay.Function([var_12955,], output)
mod['func_12967'] = func_12967
mod = relay.transform.InferType()(mod)
var_12968 = relay.var("var_12968", dtype = "float64", shape = (280,))#candidate|12968|(280,)|var|float64
output = func_12967(var_12968)
func_12969 = relay.Function([var_12968], output)
mutated_mod['func_12969'] = func_12969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7702_call = mod.get_global_var('func_7702')
func_7704_call = mutated_mod.get_global_var('func_7704')
call_12996 = relay.TupleGetItem(func_7702_call(), 0)
call_12997 = relay.TupleGetItem(func_7704_call(), 0)
func_4069_call = mod.get_global_var('func_4069')
func_4072_call = mutated_mod.get_global_var('func_4072')
const_12999 = relay.const([[2.431229,-1.918767,3.513504,-2.297174,6.930102,-1.440919,-8.235277,7.380014,-9.356084,-7.642450,-4.431822,1.419930,6.917194,-0.629157,-8.228577,-4.416391,3.583676,0.208341,6.222537,8.423063,8.775825,-8.957761,-3.630679,-9.934677,-3.531352,-0.213139,1.399856,-8.467771,6.220648,-1.828542,3.115601,7.207107,-3.343361,3.790192,-4.380715,-2.771579,9.174840,-3.536376,-5.346759,-1.528378,4.445818,8.098248,-5.449159,-4.356214,8.565135,2.822076,2.970315,8.096946,-3.289875,1.232972,9.347548,-7.927532,-7.043893,-3.680335,4.863698,6.480960,-7.574096,6.783713,-4.345381,-2.793363,0.512613,2.371522,-1.862958,-3.064596,8.642303,-7.637909,7.961081,6.973769,6.039402,-5.843605,9.323060,8.292476,-4.006839,-2.702624,-7.823146,-2.228006,1.470522,-4.768685,0.670357,-7.504109,5.055000,5.717008,0.870210,-2.429377,8.263681,5.083362,8.811600,-5.641489,-3.681147,-0.110812,7.469220,-6.930245,-7.407707,-7.888454,5.667651,7.422014,0.446743,7.487586,0.320814,8.364453,-9.193263,7.969985,-1.799043,0.530981,2.284068,2.365676,6.380450,8.890372,3.203783,0.675156],[-6.921249,0.740387,7.260307,-3.569512,-5.651939,1.931086,-1.721415,-2.182636,-7.702723,1.211104,-3.429192,-8.974686,-6.886538,2.808867,-9.019096,-5.772012,1.761121,-8.128944,-8.644710,-8.939629,7.186372,5.150274,-7.189936,-4.005351,-6.869813,-4.840989,-4.330989,-3.807537,-7.894765,-9.737974,-0.514487,7.453277,-8.005215,-5.394325,-0.692213,-2.906921,4.225765,-1.188977,1.225474,-0.761821,-4.136974,-8.882308,-6.304071,-6.785513,6.941197,5.488863,9.491157,8.672876,-3.961511,1.552422,-8.655921,-3.689445,3.144081,-4.308970,1.729959,-0.162577,5.833914,0.177065,2.391926,1.979997,-6.229905,-6.375483,5.293390,-5.940471,-7.473046,3.653519,9.845780,-5.711702,-3.227007,8.930824,8.867180,2.687566,9.827493,-7.910789,-6.819546,7.820402,-3.625029,3.513234,6.221924,-3.637243,7.529729,3.343170,2.771843,8.693482,-3.487061,-3.808765,2.768322,-6.702953,-7.424989,5.959567,-8.860070,6.064965,5.316900,4.600694,-2.375112,-2.028210,7.082144,-3.351335,0.415680,-5.434117,1.548501,9.172617,-6.254994,1.214178,4.778636,-1.731099,6.277010,-0.240666,-9.607846,4.480542],[6.513897,-0.328638,8.849910,-1.988731,-7.165208,-9.074612,3.027833,-5.448137,-9.318157,-9.485259,2.743361,9.460666,-3.975214,3.369917,6.447922,-5.727792,-8.851212,8.964542,1.317927,-8.950681,-3.711732,9.053639,-6.037988,-1.320497,8.160932,-6.262828,3.690048,6.051172,-2.837562,-5.672237,-5.901795,-6.370501,8.299798,-5.160055,7.169118,-7.799478,-6.801993,7.932915,-9.654153,9.544891,-9.410824,-6.591850,3.809612,-2.927896,-5.060451,-5.496890,8.029727,0.697397,-1.325521,0.292552,-8.582476,-1.035296,-3.894253,6.786407,6.698962,-6.680344,7.846122,3.494543,0.716109,-2.047036,-0.833234,-2.345450,4.821848,-6.353916,9.154269,-5.479173,0.238744,-8.814693,-3.939912,-3.794332,-9.910446,-1.692398,6.048592,3.960449,9.852810,-5.894506,-5.812021,4.965486,-3.052018,5.438286,9.454140,8.324658,-3.599569,-1.080090,-3.666203,-0.438330,-8.189115,-6.773155,-1.767486,-0.922280,2.679676,8.163890,5.468267,4.119527,-0.091196,3.167911,-6.475630,2.460462,7.018187,-2.839946,-5.606152,-7.999286,0.219377,1.747748,-6.230881,6.986482,-0.392491,8.948684,4.664542,-4.599890],[-6.448884,1.176692,-2.040306,4.828325,6.322844,5.553402,2.848371,-0.870794,-3.315287,-5.888982,4.074447,-5.625260,6.186588,4.424853,1.599390,-9.025635,9.505064,-4.221596,-3.607511,5.777419,0.285822,-5.529003,8.872679,9.730525,-8.333435,-1.066188,2.674416,2.975607,8.197067,4.137102,-4.628220,-1.767319,-5.855489,-5.454564,-0.251222,-9.610909,-4.366635,-9.868002,2.842106,-9.244136,-1.641286,8.559846,2.548914,-9.443198,7.524359,7.858356,8.304261,5.657252,4.516240,8.899510,-9.903604,8.641721,-6.649473,-5.505506,-4.018196,7.575979,3.161550,-4.113022,9.719891,9.601351,6.522432,4.729076,-6.173324,-0.118774,-6.181282,-6.953076,0.788188,0.228977,0.155638,4.164441,-4.688495,-1.274637,2.064959,5.799564,8.004473,1.311864,4.809364,-5.335785,6.712398,1.870199,-5.998826,-1.875228,-8.964536,6.196490,8.308971,1.344462,2.272418,-7.725197,-4.062231,7.817926,-2.991011,-2.129733,0.894950,-2.353783,6.679713,-2.830493,1.108223,2.501990,3.860832,9.801346,7.179119,-6.614819,2.471245,3.907862,-9.545165,0.743485,0.512373,9.689614,-1.670312,-2.724933],[2.558965,4.467085,6.856102,-5.066798,3.500337,-4.245577,-5.004395,4.518589,3.241909,-3.927436,-1.090386,-7.897915,5.129494,-4.441576,4.575876,-0.549496,-1.083590,1.410101,-3.138399,-8.699410,-3.534381,6.357200,1.727713,-4.475512,2.321466,7.223332,-8.697094,-3.592304,1.153123,-7.527809,6.706865,5.876060,-9.433173,3.141894,3.679029,4.402849,-3.940042,-9.202508,3.382221,-9.964576,2.266336,-5.499337,-0.101515,-7.839361,-2.759445,-3.254330,8.979819,0.442936,0.028883,-1.465000,-4.902427,-2.707404,-9.222440,-3.015453,7.996069,8.237522,-6.590292,-4.714365,-5.089167,-1.578758,1.294225,-7.979009,9.232526,0.510912,-7.470730,5.759453,7.733719,-7.014054,-7.097948,0.196807,2.881781,5.371643,8.107405,-3.930582,-9.360858,-2.515860,-6.929121,-2.735812,-5.716160,-6.384117,1.589947,5.590074,5.810158,8.227088,-1.582190,0.673306,1.330936,-3.985709,-7.488630,-7.778065,0.138594,8.876384,6.531552,7.938235,0.960098,-9.200142,5.165350,8.467364,3.572846,6.047343,8.636100,-1.023732,6.667190,3.580012,1.741322,-2.195671,-7.760518,-9.479182,5.293012,3.869471],[1.592796,0.574937,0.241103,5.965322,3.108610,8.692593,1.894907,7.016488,-0.940662,0.927968,-0.311747,-5.568818,2.876137,-5.771021,8.881359,8.064850,-0.110732,2.811005,8.944976,-5.511349,5.983591,6.834613,4.268346,2.867286,-9.156343,-0.817634,-7.656457,5.460339,7.624993,-4.247101,-7.568416,-9.435947,3.962614,-6.888500,-3.470774,3.672888,-1.332349,8.190917,-8.009458,5.228432,5.127861,7.169512,7.139613,0.338274,7.750761,4.076911,3.434331,-9.791758,7.170647,8.753352,1.067930,-3.321731,4.148912,-9.504922,-9.386115,-6.758203,6.732402,-2.599323,5.298051,6.573092,6.509665,-3.383017,-2.649204,8.286172,2.622702,-0.305618,-1.976876,9.572056,-3.071297,8.455428,4.257021,-9.887058,9.062988,9.405865,-3.735173,8.533348,3.206095,-0.698301,-1.103335,-7.362755,-3.249649,2.808175,0.294759,-2.549802,-3.103866,-2.130182,-6.510863,-5.050866,8.677422,-6.745079,-2.938685,-9.195575,7.756644,-3.969686,-2.906382,8.457417,6.175874,7.499696,2.955362,-1.567224,8.489885,-9.826801,6.466347,-0.894578,-2.039094,-5.716451,-5.978601,5.047453,0.647141,-4.228213],[-4.026512,-2.341150,-9.426991,-7.093398,4.763451,3.427654,6.282921,-1.546395,-9.628556,-6.171778,4.173788,3.934282,8.408415,0.338686,-5.882966,-2.406796,-7.197338,-5.073778,9.147312,-0.731249,0.590223,9.231070,6.506388,2.425376,-3.850428,5.056749,-6.540470,-7.359367,0.216565,-6.640039,8.946513,-2.551446,5.502941,-2.691855,8.525142,-1.123865,-2.746437,0.049688,3.237492,6.834386,-6.392459,-8.395824,9.023274,-3.851189,-4.752034,3.354799,-0.244809,4.213375,-4.703992,-5.590383,2.092045,3.925633,-3.532755,6.676660,7.949936,-3.560822,5.644386,2.431481,8.103568,9.120763,-8.703166,3.772271,-5.321202,5.059893,-9.364339,-5.000257,-2.637846,9.522551,6.692393,-7.542420,5.176333,-3.445653,3.407926,6.429368,-1.483932,2.072472,0.266670,7.490562,5.129712,9.172165,-3.789981,0.516956,3.116376,4.569981,-8.328699,5.532127,-2.720799,-0.480661,8.499509,-2.688903,0.287754,1.355688,-0.468473,-7.348485,2.725722,4.242649,-8.079667,-9.763010,8.539333,-0.482154,1.456632,8.524448,5.607646,-4.972038,-4.555952,-8.232152,-2.208902,-0.623240,-0.993420,-3.007321]], dtype = "float32")#candidate|12999|(7, 110)|const|float32
var_13000 = relay.var("var_13000", dtype = "int64", shape = (420,))#candidate|13000|(420,)|var|int64
call_12998 = relay.TupleGetItem(func_4069_call(relay.reshape(const_12999.astype('float32'), [770,]), relay.reshape(var_13000.astype('int64'), [420,]), ), 4)
call_13001 = relay.TupleGetItem(func_4072_call(relay.reshape(const_12999.astype('float32'), [770,]), relay.reshape(var_13000.astype('int64'), [420,]), ), 4)
output = relay.Tuple([call_12996,call_12998,const_12999,var_13000,])
output2 = relay.Tuple([call_12997,call_13001,const_12999,var_13000,])
func_13007 = relay.Function([var_13000,], output)
mod['func_13007'] = func_13007
mod = relay.transform.InferType()(mod)
mutated_mod['func_13007'] = func_13007
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13008 = relay.var("var_13008", dtype = "int64", shape = (420,))#candidate|13008|(420,)|var|int64
func_13007_call = mutated_mod.get_global_var('func_13007')
call_13009 = func_13007_call(var_13008)
output = call_13009
func_13010 = relay.Function([var_13008], output)
mutated_mod['func_13010'] = func_13010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9842_call = mod.get_global_var('func_9842')
func_9844_call = mutated_mod.get_global_var('func_9844')
call_13014 = relay.TupleGetItem(func_9842_call(), 0)
call_13015 = relay.TupleGetItem(func_9844_call(), 0)
func_11668_call = mod.get_global_var('func_11668')
func_11670_call = mutated_mod.get_global_var('func_11670')
call_13038 = relay.TupleGetItem(func_11668_call(), 0)
call_13039 = relay.TupleGetItem(func_11670_call(), 0)
func_2790_call = mod.get_global_var('func_2790')
func_2792_call = mutated_mod.get_global_var('func_2792')
var_13067 = relay.var("var_13067", dtype = "uint32", shape = (420,))#candidate|13067|(420,)|var|uint32
call_13066 = func_2790_call(relay.reshape(var_13067.astype('uint32'), [3, 14, 10]))
call_13068 = func_2790_call(relay.reshape(var_13067.astype('uint32'), [3, 14, 10]))
func_5552_call = mod.get_global_var('func_5552')
func_5557_call = mutated_mod.get_global_var('func_5557')
const_13098 = relay.const([2.032158,4.262300,8.427262,1.192272,-4.899669,1.091316,8.775419,3.506196,4.165635,-5.712445,5.699124,-4.112372,4.518888,-0.346085,-0.577934,-7.708222,-8.146149,2.148952,-8.541700,2.269408,0.976567,-2.966151,-5.104947,-2.563928,-4.429133,-1.280973,2.179453,-5.408001,3.618390,7.623576,-8.031364,9.558294,5.712102,-1.511162,-4.069302,9.646377,-5.870886,-5.043410,4.528228,-8.224034,-5.126237,4.013027,-7.843213,-6.803015,-3.563752,0.575320,8.563494,-0.744238,3.684520,8.131443,-6.190557,3.841214,-3.080559,3.034276,0.135704,-4.137247,-0.360295,6.142781,3.124581,-1.010324,7.962257,7.643389,1.873979,9.474989,-2.310935,-2.324810,5.925112,-0.341539,7.891774,-3.131583,5.931579,-0.238850,-3.801272,-5.174076,-1.621176,-0.233736,8.049121,-6.579472,7.595126,6.647780,-8.861967,-9.125566,-0.609718,-7.950323,-7.891258,-7.703472,4.164829,9.686883,-9.345871,2.948679,-0.593873,-8.307985,2.966975,-9.125480,-4.479869,9.914368,8.394285,1.352224,-7.286521,-8.654502,-1.563023,-0.704683,0.298365,1.479951,-5.249018,-2.141864,-4.796089,-8.782557,-6.324183,-1.284373,-1.720399,4.357468,7.893443,6.293049,-7.948570,-4.370361,-6.797203,-5.847119,-7.940811,6.920598,5.436583,-1.366157,-1.621736,2.358048,2.896399,-9.667699,2.736852,-6.097744,-1.626491,-9.604493,9.507697,8.914975,-8.662076,5.181129,3.084902,1.940802,6.426186,3.196823,-8.155842,-4.537332,-5.478762,7.544613,-6.377707,3.804110,-9.703410,-6.874336,-5.785879,5.427686,4.205331,-1.542485,-1.066379,0.004004,3.116612,0.596752,-8.391658,9.019915,-8.036771,-3.192794,-5.750387,2.757038,-4.111131,-0.559012,0.652208,8.424114,6.636846,-0.892869,7.667606,7.674637,-9.753000,-6.216445,-7.547948,6.844666,-9.762375,5.826924,0.645844,3.710952,-2.592192,8.518667,-0.792270,5.989971,-8.937370,6.431269,9.405586,-3.672911,2.207808,-6.969343,-7.624589,9.315398,-4.478702,-3.891956,6.450022,2.194379,9.700032,-4.881073,1.854918,5.585610,6.616355,3.235742,8.183808,-3.662897,-2.423985,-8.111428,-6.042266,9.599284,7.323126,4.720980,-0.038237,-3.885884,4.105237,2.193540,-1.779792,-7.965177,7.557981,1.665545,1.604929,5.956973,-7.415833,-7.979541,8.004334,5.807015,2.031588,-6.251132,7.471069,-1.690091,7.469835,3.481372,-3.131542,1.798222,2.740434,9.628992,-3.580828,-9.823989,-5.999958,6.954315,9.119340,-0.309836,7.975309,-6.805103,-1.211060,6.756190,-3.320918,4.636692,-9.977659,-6.386103,4.639261,-4.866163,-1.084479,5.434990,-4.309945,9.178338,0.415311,-3.571784,-0.992309,-1.199737,1.571687,-2.097839,-1.723174,5.027329,-8.069259,4.172490,5.278509,1.000614,-2.373935,-1.761688,4.950696,-6.306635,-1.870841,-3.555290,2.754661,4.473889,-2.301250,-0.587426,7.888224,-8.035846,6.796357,-0.979649,6.308166,8.325768,-7.018775,-8.959181,4.394926,-4.006880,-5.640123,-7.321635,7.109193,-6.850767,9.368283,4.403360,-2.208344,-5.803283,0.731977,-7.764213,-4.964826,-1.402746,-9.935369,-9.104927,-6.484434,8.704110,1.753665,-1.721560,0.004608,7.401891,-5.117417,3.589402,-4.923164,-4.282068,-3.845688,-9.203410,-5.189393,5.760249,-4.694552,-9.089717,1.461951,6.180143,2.195739,6.885029,-8.570856,8.928609,1.326401,-7.248138,-7.308477,9.456002,0.433770,1.231166,9.615223,-2.240064,9.881439,-5.734922,-8.121920,0.558800,4.091312,-7.417119,8.929651,-2.590152,7.297525,-2.551540,-9.564756,-6.100470,-7.146135,9.771453,7.477306,4.679249,5.609525,9.049981,8.548400,8.463565,8.430771,-8.091700,-3.084881,-6.426614,0.724614,4.245677,-1.181464,-5.922411,-7.281382,-2.794488,9.996605,-6.667783,6.798257,6.974936,-7.844933,-1.690031,-4.178975,5.910468,5.108851,-7.027764,-9.233048,-4.787131,-5.069359,4.141491,6.455726,-9.305728,3.449888,6.043821,-2.084735,2.941557,4.836499,-8.884739,9.711614,-9.104467,1.684991,8.261207,2.200153,4.079369,-5.674962,-8.426920,-8.292323,0.396736,9.413257,0.135469,9.816818,-7.850555,-7.428700,-6.644509,-9.743447,-9.546739,-2.603538,-3.219965,-4.668647,9.684896,-2.343908,-8.010267,-0.032471,7.596468,-4.953304,5.763797,6.721410,-0.044872,-4.015423,7.754347,-5.907392,3.144787,-6.750871,-8.921805,4.848443,9.945220,0.732943,-7.110204,5.972302,3.701203,-5.129650,1.508968,-0.614445,7.348327,2.404055,-8.462515,5.951342,-4.066803,7.146414,-8.931224,-3.849751,-8.939862,8.711812,7.155366,-8.362697,-5.434369,1.281937,1.247636,9.899106,-4.828030,3.184859,-1.033887,-5.813130,-4.837773,1.284369,-8.732814,6.489210,8.352302,-9.589973,3.802895,0.419752,7.161018,-4.735967,4.166474,-1.454999,-1.848168,-4.871633,-6.468020,5.784842,-9.382919,7.078175,-6.066154,5.602772,8.778141,-6.663505,0.941257,-3.507648,-6.310990,2.023653,-7.350997,2.142163,6.307962,-9.478546,6.425276,9.785979,-8.958438,-5.130508,8.215354,0.318468,0.001612,0.060284,8.885977,-2.998392,-5.093777,8.609014,6.031969,3.657053,-7.726552,-0.697386,4.913127,5.498513,-1.283369,-4.605546,-2.478451,-8.243340,0.684044,-3.947669,8.879546,-9.412845,-5.165173,-2.036502,9.842670,-8.600563,9.959290,0.185877,-2.936707,2.644308,-2.070619,-4.019556,7.776109,1.390220,4.126701,9.344009,-4.078410,-9.560845,-9.749461,-7.553583,2.831820,3.152860,5.458638,8.145621,-6.311825,-1.401081,3.911279,2.182808,1.490735,3.870724,-9.275422,2.972801,0.294865,5.775660,-1.098810,5.999532,-3.705213,3.644808,4.965076,-8.993738,4.766693,-4.146423,6.490496,8.617676,-9.538279,0.663309,2.052303,5.415050,8.088012,-5.367135,-7.411043,8.506399,3.658368,-7.984818,7.423508,-0.582349,3.189428,1.525405,-9.211056,0.898006,-9.647057,8.438915,8.228097,-8.557466,0.964841,9.766703,-6.912650,-4.642019,1.590523,-3.138617,7.211525,5.601440,3.068028,-3.172879,3.477153,7.928991,-3.541203,0.631235,0.386162,-9.860662,1.866194,9.111755,-1.577631,0.021368,-3.162155,2.274322,-2.324787,3.874753,3.870312,6.826592,7.772505,-8.312948,2.228664,-7.363682,3.381875,5.285715,-0.764762,-6.270468,-3.024612,-5.355118,4.486783,0.026269,-3.738839,-5.926690,-7.249738,-6.214712,-9.859961,4.069725,-9.645829,-7.337787,4.660343,-0.003016,-7.603363,-0.960648,-5.635128,-3.668973,-6.918830,5.388601,-9.249464,4.735916,3.846825,-2.154980,-4.399302,8.415368,0.447238,4.571602,1.340509,-4.634358,-1.434611,7.827623,3.491006,9.712181,0.724366,-6.120602,-5.343077,-9.900548,1.001763,5.471864,-8.025814,9.775453,-7.146082,-8.419772,-9.440850,-5.305177,-9.493251,-7.188203,1.928529,2.666630,-9.562633,-0.498802,9.987578,0.046676,4.995603,4.661737,4.924138,-9.282368,1.410977,-6.805670,3.643401,-1.020133,-6.200810,-4.188871,-2.145805,-9.423298,0.561455,1.534087,7.755096,-3.108018,8.202454,-4.782026,-2.829557,7.785383,-7.139654,9.566258,-9.857183,6.845100,-0.931852,-8.372841,3.571458,-7.084691,4.551169,-7.527983,-2.094991,0.670156,-5.932190,-6.424277,-5.342016,-6.793943,8.910101,0.534577,2.052528,-9.424394,-0.361280,6.897231,5.294386,-8.718503,8.212785,4.589009,2.545298,-1.207631,3.443310,-0.237477,-5.518364,-1.905264,2.425431,6.006357,-6.722143,-6.808066,-2.913167,-8.185561,9.760248,-9.816063,7.075107,-8.017857,-6.252548,-0.077734,-7.223374,-1.409359,2.329190,-4.005492,-7.912200,-7.201063,-8.908417,1.754358,-2.903216,-8.348696,-2.536321,-9.278160,9.288222,7.082260,5.001112,5.789650,-8.568219,-4.072857,-6.248156,-3.755925,-8.674579,6.079493,-7.386779,9.508750,-4.048856,-4.057885,-5.246945,4.427601,-3.369824,-7.966454,-6.087147,2.208838,8.494577,2.483289,-3.953493,-5.228394,-3.550751,7.973534,-3.057308,7.906507,1.066254,9.699801,-3.355124,4.718200,9.632539,9.162248,6.083739,7.711369,-4.825104,-9.500102,-1.748451,-4.739817,-0.392141,7.392889,-1.646058,2.439053,8.457946,-4.997836,7.950381,-1.040536,4.962736,7.329062,-2.484550,5.858309,2.579353,2.870803,-5.252892,-3.261033,-7.233736,8.341832,-3.119513,-1.156081,7.205701,8.881292,-2.176305,-3.748280,2.249820,-9.519666,-3.106559,1.895587,4.172715,3.262632,-6.238544,-1.854299,-8.393403,9.616329,-0.553878,-7.175127,-0.037773,8.430342,9.747458,-8.246929,2.425725,-0.802311,-1.702790,3.812707,-0.979004,8.830975,-7.593332,5.140302,7.649125,3.422099,-7.039216,-2.658359,7.997586,5.544177,2.957936,-8.928468,-5.334220,-2.128036,-6.411412,-1.230784,-3.567338,8.618973,6.302334,9.216802,6.795098,9.756568,-8.833974,9.766466,3.008823,-1.243895,-1.776270,3.523681,8.607424,-7.038960,2.036352,6.045075,-6.780610,-0.763419,1.685123,6.963838,-3.221929,4.574277,-5.759342,-5.605965,7.368270,-5.282203,4.210746,9.035114,8.466569,-2.086546,-3.501376,-2.259297,-0.428092,3.858997,9.872438,0.854643,9.865899,-8.732927,3.410920,6.706125,-2.638474,-5.892859,5.214811,-9.242956,6.484374,6.128170,-5.728425,7.691872,-9.756488,8.844194,7.664244,8.899362,6.422098,-5.794780,-1.297807,8.767629,3.945325,8.354271,9.746137,0.317072,-9.951331,8.510381,-2.917968,-6.312486,1.960425,-1.518862,-4.874066,4.856501,-0.995813,-8.921097,4.637145,6.202094,3.174481,5.848261,-1.714927,-7.515836,4.097197,-3.702538,-0.752215,-0.547758,-5.139244,-2.552949,-2.490205,-4.649346,6.334168,3.387784,-4.072200,2.499969,2.923205,0.921583,2.892718,1.511224,8.077801,-5.343722,-5.609725,7.886411,-4.637952,7.368814,7.441171,0.811444,-9.938553,9.749735,4.787677,-9.735514,2.389819,-5.450761,4.410324,2.707445,6.426482,-2.781260,-1.897305,-8.875721,0.270595,0.327748,2.746940,0.842182,9.521680,2.339571,3.927520,-0.681952,7.221280,2.204256,-7.617998,6.914197,6.364148,7.692271,8.483195,-2.538565,6.389909,2.213180,-5.317214,-5.972791,8.765668,-3.323893,0.414776,4.942071,1.346646,-0.259377,8.129884,-5.460842,5.722469,-1.975684,4.363808,-6.907032,-5.900677,-8.943515,-0.942878,-4.502072,-3.032073,4.188418,1.522641,-1.231681,4.764914,-3.439066,-6.521300,2.255854,-7.760463,-9.291774,-8.957371,-8.827981,-9.990352,5.007608,3.075023,-3.332009,-7.900310,-6.579014,-6.687553,6.055408,2.798246,-3.445920,-0.406210,4.205761,6.194019,-5.824608,-8.498629,-0.773666,8.056503,-1.388487,9.139480,-7.551131,-7.731589,-3.333535,2.629077,-9.499926,3.158931,-3.006414,8.823505,4.345721,9.772018,-6.700242,-7.412559,-5.435786,0.772409,8.791486,4.041285,-8.210062,-7.950058,-0.455115,-9.011610,-1.355408,2.736432,6.297115,-3.403116,5.226384,9.724047,-1.313558,-6.416985,6.116425,8.651398,2.153430,4.202876,-7.115601,-0.518410,6.845568,9.533920,-3.930501,2.948264,3.852994,-5.587583,6.103132,3.275426,-9.850296,2.001729,6.499066,-5.546297,6.054994,-1.868080,0.367407,1.637980,-6.504335,-6.882736,4.232497,-7.543766,4.041773,-6.651707,-4.580291,-4.458401,0.717290,7.607256,-5.829436,9.325960,6.837163,4.963350,-2.424177,5.319132,-5.244144,-1.101738,0.691816,-2.730253,2.520939,-1.984849,-8.458463,-8.251958,-5.919909,-4.370920,1.792651,-0.330242,-8.165994,2.554079,-8.047663,4.238486,-7.232617,4.655731,-7.307366,1.751880,-6.457144,-8.809171], dtype = "float32")#candidate|13098|(1092,)|const|float32
var_13099 = relay.var("var_13099", dtype = "bool", shape = (300,))#candidate|13099|(300,)|var|bool
var_13100 = relay.var("var_13100", dtype = "float64", shape = (1, 280))#candidate|13100|(1, 280)|var|float64
var_13101 = relay.var("var_13101", dtype = "int16", shape = (24,))#candidate|13101|(24,)|var|int16
call_13097 = relay.TupleGetItem(func_5552_call(relay.reshape(const_13098.astype('float32'), [1092,]), relay.reshape(var_13099.astype('bool'), [300,]), relay.reshape(var_13100.astype('float64'), [280,]), relay.reshape(var_13101.astype('int16'), [24,]), ), 3)
call_13102 = relay.TupleGetItem(func_5557_call(relay.reshape(const_13098.astype('float32'), [1092,]), relay.reshape(var_13099.astype('bool'), [300,]), relay.reshape(var_13100.astype('float64'), [280,]), relay.reshape(var_13101.astype('int16'), [24,]), ), 3)
output = relay.Tuple([call_13014,call_13038,call_13066,var_13067,call_13097,const_13098,var_13099,var_13100,var_13101,])
output2 = relay.Tuple([call_13015,call_13039,call_13068,var_13067,call_13102,const_13098,var_13099,var_13100,var_13101,])
func_13112 = relay.Function([var_13067,var_13099,var_13100,var_13101,], output)
mod['func_13112'] = func_13112
mod = relay.transform.InferType()(mod)
var_13113 = relay.var("var_13113", dtype = "uint32", shape = (420,))#candidate|13113|(420,)|var|uint32
var_13114 = relay.var("var_13114", dtype = "bool", shape = (300,))#candidate|13114|(300,)|var|bool
var_13115 = relay.var("var_13115", dtype = "float64", shape = (1, 280))#candidate|13115|(1, 280)|var|float64
var_13116 = relay.var("var_13116", dtype = "int16", shape = (24,))#candidate|13116|(24,)|var|int16
output = func_13112(var_13113,var_13114,var_13115,var_13116,)
func_13117 = relay.Function([var_13113,var_13114,var_13115,var_13116,], output)
mutated_mod['func_13117'] = func_13117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10842_call = mod.get_global_var('func_10842')
func_10843_call = mutated_mod.get_global_var('func_10843')
call_13153 = relay.TupleGetItem(func_10842_call(), 1)
call_13154 = relay.TupleGetItem(func_10843_call(), 1)
output = call_13153
output2 = call_13154
func_13173 = relay.Function([], output)
mod['func_13173'] = func_13173
mod = relay.transform.InferType()(mod)
output = func_13173()
func_13174 = relay.Function([], output)
mutated_mod['func_13174'] = func_13174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10380_call = mod.get_global_var('func_10380')
func_10381_call = mutated_mod.get_global_var('func_10381')
call_13181 = relay.TupleGetItem(func_10380_call(), 1)
call_13182 = relay.TupleGetItem(func_10381_call(), 1)
func_2790_call = mod.get_global_var('func_2790')
func_2792_call = mutated_mod.get_global_var('func_2792')
var_13190 = relay.var("var_13190", dtype = "uint32", shape = (420,))#candidate|13190|(420,)|var|uint32
call_13189 = func_2790_call(relay.reshape(var_13190.astype('uint32'), [3, 14, 10]))
call_13191 = func_2790_call(relay.reshape(var_13190.astype('uint32'), [3, 14, 10]))
output = relay.Tuple([call_13181,call_13189,var_13190,])
output2 = relay.Tuple([call_13182,call_13191,var_13190,])
func_13196 = relay.Function([var_13190,], output)
mod['func_13196'] = func_13196
mod = relay.transform.InferType()(mod)
mutated_mod['func_13196'] = func_13196
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13197 = relay.var("var_13197", dtype = "uint32", shape = (420,))#candidate|13197|(420,)|var|uint32
func_13196_call = mutated_mod.get_global_var('func_13196')
call_13198 = func_13196_call(var_13197)
output = call_13198
func_13199 = relay.Function([var_13197], output)
mutated_mod['func_13199'] = func_13199
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13215 = relay.var("var_13215", dtype = "float64", shape = (12, 3, 16))#candidate|13215|(12, 3, 16)|var|float64
uop_13216 = relay.sigmoid(var_13215.astype('float64')) # shape=(12, 3, 16)
func_12403_call = mod.get_global_var('func_12403')
func_12407_call = mutated_mod.get_global_var('func_12407')
const_13230 = relay.const([-7.394701,2.846844,-1.633640,-3.037490,-8.288849,-1.108159,7.255016,-3.612597,7.163722,-1.263186,-5.555703,1.847368,-4.695028,-4.870545,-9.994965,-3.180662,-5.196407,-1.056579,-6.764230,-4.507123,3.727998,-9.923661,0.088284,-4.023529,-0.191061,-8.433902,-9.785115,-2.881008,-2.230472,-7.133415,-5.993194,3.691208,-7.171240,-3.829283,0.077719,-9.768669,1.644590,6.215822,8.112176,5.131918,-3.029389,-1.879371,0.079006,3.188579,6.227602,-2.660248,-5.635621,2.581731,4.332719,8.291402,-5.536220,-1.438923,-9.828151,-4.625271,2.413448,8.123385,-1.106358,-7.087688,8.321363,1.854964,-0.911298,-9.389833,-5.189953,1.399702,4.954373,-0.298945,-0.720716,-3.627991,-8.849140,-2.491647,-7.824303,3.474129,-7.782158,0.968019,0.947272,-8.579400,-9.934319,2.446052,-8.752322,7.974101,5.507426,-8.157234,-2.706564,8.857071,1.908984,-2.514975,9.831636,-3.308459,-5.578313,7.282649,7.713015,1.119457,2.470824,-0.564418,9.222772,9.917695,6.999543,5.704670,-9.742030,-8.453720,-5.716921,-7.830621,-4.238522,1.694111,-1.474128,-5.814753,7.297679,0.335793,-3.001599,-9.484867,8.385440,2.264289,0.353786,-2.445510,4.969569,-0.949061,-2.431466,7.092902,0.647757,2.154391,-7.282828,9.213826,2.544640,-4.931639,-1.152272,6.737076,-4.504025,-0.758404,2.249953,-0.836530,4.097273,3.310577,9.269624,-8.715227,8.097462,-9.323904,-8.051012,3.592894,-8.161940,4.883644,4.183358,7.118684,4.955806,0.428369,-2.689715,4.265905,-8.716526,6.294846,-4.775517,0.858950,3.148774,1.500158,1.236206,6.994602,-7.741299,5.131649,-6.760995,2.920012,-3.892800,-1.650347,-4.585104,7.785331,-8.536701,-8.085601,-5.636554,2.920993,3.010636,7.159419,1.346499,8.398059,-9.321955,3.533888,9.723917,-4.630908,-4.439523,-3.451057,0.717445,9.112643,5.867709,-5.552221,6.177961,0.684143,-2.528762,-7.480451,-3.447841,0.971988,-6.029747,1.529153,0.719173,4.120721,-5.987308,7.814206,8.972793,-4.985913,-0.948202,0.641433,-2.494141,5.840761,6.644541,-2.543323,2.734839,-8.252051,6.216100,5.319431,-2.683723,-7.155608,-8.173199,-4.581655,-6.971144,-5.254233,0.695398,4.328282,8.863020,-4.247690,-3.860363,-8.458284,-3.094328,6.284526,-1.044885,-4.456746,7.799298,4.599570,-0.354326,-4.107766,-3.339668,-1.002265,-6.284547,0.001218,-4.353123,-0.482403,2.316997,-7.435698,-8.181831,4.773827,-1.726764,2.051931,-7.466740,4.464653,-6.514648,9.218423,2.668477,-9.459727,2.442902,9.390246,1.955791,-9.560900,-8.017444,-0.004717,-2.984570,9.367261,3.393163,6.167582,1.464661,8.564811,-3.086065,0.105915,-4.569718,5.801248,4.298580,0.471548,-3.948536,6.506735,-4.562904,4.067576,9.837788,9.644184,8.322107,-9.420139,2.995778,-3.823729,3.564902,9.025227,9.094125,1.939409,4.996427,7.604659,0.929524,-0.036427,-4.175023,-8.625085,-7.260680,7.592908,-9.466451,2.067311,4.624511,4.342639,7.946917,-1.495169,5.452786,2.139144,-8.510322,7.406870,-1.869259,5.566792,5.306645,-3.919401,2.870460,-4.636530,-9.063828,3.899704,3.917994,-1.722970,-9.250550,-4.781265,-1.756892,-5.250765,-6.261253,-9.781321,-5.983995,-6.235352,-5.458370,2.312731,-3.124303,7.735179,7.431255,-6.198578,-3.016901,8.272867,5.255074,-0.475787,-6.625723,-1.186596,-0.745930,5.307461,-4.965288,5.136002,-3.206030,-5.671907,-1.288966,0.347940,-1.637245,-7.827122,-2.700159,3.921213,5.260752,-6.900868,3.065843,6.500828,9.370677,-3.642433,-6.570998,-6.179970,-2.291590,2.516202,5.060062,2.889844,-9.401319,-1.129281,0.453229,-2.331413,1.164166,-7.072676,0.238215,6.451891,-9.176402,-7.498696,9.392130,-3.277804,7.319994,-8.824972,-6.096274,-4.495280,3.291363,-7.881132,4.361297,-3.368078,2.037779,0.765363,-1.270556,4.686449,-3.494166,1.367877,3.192480,8.406170,8.140212,3.314388,2.767127,-9.353663,-4.599315,-6.438868,6.134025,-6.046646,8.696448,9.406531,-6.301580,2.828142,-2.184453,-8.172774,-8.640592,-1.571840,4.478027,8.784442,2.029480,-4.709690,-4.573222,0.662811,4.301455,-5.461669,2.253408,-2.920021,8.810320,-6.291986,-9.604063,8.046807,5.337018,-2.555576,4.978977,2.270488,9.051530,-1.203314,-8.306808,7.155283,0.016928,2.357206,3.805875,5.019422,7.942988,-2.573744,-3.042326,-7.838408,4.033862,4.691646,-8.665932,6.801980,-2.387930,-8.133494,-6.399294,-7.832310,5.461558,-9.405790,4.729857,3.718409,-0.259096,-4.012754,3.962732,-0.806409,5.138661,6.006850,-0.300404,7.203655,-6.564341,-5.495731,0.526577,8.584688,-8.576517,2.704528,1.784611,-7.105750,-8.469671,-8.231451,3.512487,-2.950436,-1.364898,-9.887719,-5.164310,8.100095,5.619109,7.510058,-9.567196,-4.347256,1.102160,-0.457060,-9.196785,-9.539380,0.769032,9.065728,1.712726,2.878638,5.221798,-4.254725,0.095424,2.057612,9.182663,3.087367,4.384299,-5.445619,4.011677,3.884755,4.649437,-4.037104,-7.093749,0.001829,2.703556,-4.353731,1.933204,2.500407,-9.245593,5.358035,6.486020,-4.450073,-0.882553,5.160556,2.801015,-8.016382,-9.213679,-8.891686,-5.361701,-6.664455,-7.423925,-0.398261,-0.402129,1.622944,-5.073289,-0.286308,0.607272,-1.623656,-0.855340,-6.075402,-3.666773,-1.746503,6.289264,-2.411038,2.830061,-0.072975,2.741603,6.128677,-9.272988,-7.306151,0.059549,-2.721031,7.188452,6.013145,1.836211,-5.473740,-4.903937,-8.266207,0.816040,5.916361,-1.818523,-3.580414,-3.861152,1.351541,-0.607020,-6.468531,-1.651718,9.688265,7.277192,1.599993,-1.924230,2.746249,9.192289,-1.577316,-2.217824,1.686791,4.684041,-7.563101,1.315353,-8.680815,7.203195,5.493659,-8.707643,-9.948372,6.101261,-5.216920,2.248941,-2.222397,5.636760,2.399103,-3.766131,-2.960467,-3.311401,-8.630746,-3.753455,-7.768479,9.871367,-1.459189,-5.901168,6.380695,-4.403036,3.851719,9.989733,-8.828857,-4.763817,-4.839452,-8.767679,8.011048,4.218454,-8.581729,-9.606416,-7.028571,1.117086,8.324205,7.147640,4.823143,-1.427678,6.371150,0.217718,9.003368,3.904664,-6.301187,-3.861149,-9.109093,9.938080,-1.542346,4.279075,8.226659,9.252093,-4.740713,-3.858367,-7.209197,-0.527586,-1.956252,-8.224682,-5.528513,-6.311563,3.493663,-3.814636,-3.217901,4.588570,7.958397,0.542028,7.569093,-9.996024,3.423773,1.394425,6.182170,8.781740,1.559312,8.559363,1.600109,8.900413,0.707249,6.325405,3.043927,-0.243852,6.936095,-4.790372,-8.808635,5.330661,1.840938,3.087883,-3.442266,-8.408883,-1.005852,3.217356,7.507150,3.369469,-5.555549,0.816086,9.185291,3.187563,8.531462,0.026167,-8.894544,-9.855034,5.528346,-7.487987,-6.559066,-5.542117,5.058576,3.532974,-7.754713,6.878460,5.013718,-9.263105,-8.029910,1.628914,3.344380,5.698481,7.472519,1.654517,5.263240,3.701628,2.245843,4.891013,9.913528,0.127413,9.665131,0.722477,8.417924,4.662103,2.511798,-3.820776,1.970929,-2.037955,3.936024,6.809853,5.835381,-9.826571,-9.427113,8.738097,-0.060278,4.395079,5.416940,-6.219320,3.734497,-7.014662,8.683114,9.916116,-8.617890,2.332059,-4.024537,4.278124,3.722876,-6.051855,0.264238,-2.066550,-1.633429,0.790075,-3.383882,4.737519,6.461858,-7.089673,-9.041111,3.912553,0.899818,-3.962558,0.543203,3.101008,0.465213,2.201468,-2.642474,1.559190,4.893624,-0.652369,-6.213147,6.238025,-2.407927,-1.738588,-5.693378,1.589877,1.611308,6.011560,5.789762,9.091582,-2.108032,4.861338,-2.192559,5.536209,0.430893,8.855791,9.190496,7.638084,-9.682462,-0.196960,1.612064,-3.248454,3.491450,-1.384245,2.749185,-3.639867,-6.406494,-6.625740,-8.335319,-7.092826,9.509927,9.259054,6.763109,-9.947469,0.799396,-8.069371,0.330793,7.145443,-4.662250,1.583124,7.186966,0.955102,-0.711339,4.322838,2.444275,-0.702368,0.968255,-5.176536,9.961647,5.406462,7.346216,6.381590,-5.311860,-5.147601,-6.740257,-2.272264,2.941453,2.423504,9.562553,-1.546612,6.046817,-2.715824,-7.693860,6.413969,1.659869,-8.617182,-1.558350,9.585219,-4.813754,8.926096,-0.150592,3.975151,3.437988,1.914025,5.750961,1.337019,-7.339977,2.552066,-9.363896,-9.207968,4.377045,8.663389,0.330869,7.015595,-2.385906,-5.767303,-2.844892,-0.333479,8.664360,0.788053,0.884382,3.411383,-7.376139,-7.504928,0.538950,-3.251045,-7.263215,-9.703802,2.484456,6.436384,-2.760089,-4.913055,7.384917,-1.288910,-0.353417,0.818934,-1.701329,8.766601,-2.843720,-8.950652,5.581630,-0.082660,-5.260783,3.771339,-3.831625,2.333991,-7.873018,-4.074278,-1.272258,-1.701895,-9.810548,-8.080030,-6.982548,4.891160,8.235405,-9.860949,-1.547755,-5.338145,8.872223,-2.842288,4.393662,-1.586373,4.342966,2.397441,4.610123,-1.660881,-1.847817,1.498985,5.654951,6.041842,-1.148379,5.668769,-2.891478,0.462317,0.808552,-0.858512,7.112109,-4.923457,6.857678,-4.104209,-8.198340,-8.985837,7.266226,7.428662,-7.854715,3.988637,4.529169,8.569589,9.779148,1.142059,6.692706,5.868079,7.554188,5.727951,3.985546,5.101316,7.413244,-2.065063,1.640564,9.127579,-2.182900,-8.981376,4.653525,-0.155839,-2.457899,4.815252,7.941055,-6.140351,-8.606716,6.511681,2.588510,2.320153,-5.289052,5.555930,-0.911082,1.808372,-2.498801,-4.268740,9.816809,-2.435088,-4.469301,2.993184,-3.648846,-6.720904,-1.166905,-3.753824,8.484685,-7.392242,-6.805360,6.609796,-2.694296,0.419762,0.706161,-9.613724,-3.636841,-1.253196,-1.887658,-0.412403,-0.646594,4.384272,-4.918655,-1.535969,-3.992967,6.677904,2.361187,2.158262,4.946547,-5.262823,-2.551457,-0.746120,6.114134,4.539131,-4.440729,-3.849311,5.325811,9.143211,8.401326,1.564935,-7.634675,-0.657189,3.530636,3.922484,1.567088,1.648374,-1.102491,-6.216013,4.420448,4.996008,-0.514735,-4.075789,-2.591343,6.212040,6.611335,5.809092,-5.603993,8.935677,9.943351,-4.956665,-3.014372,-4.706445,1.956981,-1.070258,-0.995140,6.798420,2.910676,-3.565942,6.723647,-5.619237,-8.441814,0.905763,3.409498,7.620544,6.804412,0.328650,3.342393,3.043763,5.896866,2.511160,9.839075,-4.124908,-8.976544,-6.297678,-4.181695,8.313512,-9.354414,6.007731,3.547672,-2.832953,4.925597,9.587141,1.875704,2.736282,-6.161758,1.605481,1.725449,3.112630,-5.191910,-8.428381,-1.628759,-0.045254,-7.972100,-5.025377,-4.388340,-4.256194,0.950096,-4.701096,-8.448809,6.626909,9.329595,3.658018,-9.546520,-4.464081,-2.021387,5.040992,-5.248188,-7.091794,-1.268816,3.367325,8.593973,-7.104397,8.550154,-0.216849,-7.970094,-9.105869,-8.701853,5.273104,-9.208494,4.343942,-7.324859,2.758667,-2.054056,3.635091,9.144008,9.611376,-8.710143,8.876119,5.190577,-8.803215,4.839591,3.519895,-0.738779,-3.247195,-9.916874,1.345556,-9.500880,-2.605896,-1.121447,2.203655,-9.364327,6.773685,-6.552173,-5.515909,-1.334751,-3.857855,1.664271,1.528212,-4.755911,2.709615,3.904243,8.215264,6.933961,9.586986,6.677862,6.131121,0.314045,-4.380451,7.425747,6.120415,0.846796,7.430186,4.473381,-5.637895,-2.646286,0.182838,4.390498,-6.434546,-2.324290,-4.611035,-5.767245,5.265454,-8.290733,-8.544111,-0.328170,7.779292,1.043884,-4.895827,2.979788,-3.181045,-6.941702,-5.067801,-0.244623,6.477292,-0.576678,-6.253324,4.858629,-2.163815,1.996973,-7.781069,2.211947,-2.969446,-4.052760,0.125576,9.472680,-0.121918,4.357430,7.921036,9.010948,-6.352181,5.245896,-5.457288,-3.433721,-9.916597,9.898075,5.149779,0.272574,9.057011,1.139180,5.993297,-3.842402,-8.779191,-9.843239,3.155792,-4.611122,1.181384,-2.928210,9.792538,3.581481,5.201958,-1.393871,4.585976,-0.035397,0.249303,3.138646,-0.366611,-0.950471,-2.904294,0.763912,-5.046910,7.706527,9.215113,-1.194524,5.021925,-0.960075,-1.989838,5.322624,-5.389258,3.669447,3.743914,8.744384,-7.417706,1.912384,-4.668260,5.799683,-0.919019,0.089011,-0.250153,-3.715278,3.639146,-9.749417,5.159103,7.016032,5.646301,-5.443400,6.891387,7.514034,9.439035,-9.688333,6.822041,7.226716,4.046440,2.298184,-8.219955,2.638729,-1.692563,8.391480,6.879990,-2.031659,4.424956,-6.466752,-6.237148,2.610626,-8.917939,3.549867,2.822715,1.850578,1.404218,-6.720948,5.315026,2.375039,-6.322401,0.684743,9.547152,-7.734571,-3.007854,-5.604168,-9.649349,3.430460,3.804771,-5.675589,2.751268,9.699377,-8.366612,-8.854193,7.346703,-2.170937,-5.996696,-9.822852,2.098511,3.094159,1.346193,-6.694566,6.764520,-6.662281,-6.230090,9.890287,-3.225998,7.105318,-9.728958,-5.636504,6.242763,4.581156,7.719493,-2.788675,2.224920,-6.625008,7.606572,-1.724890,-8.718025,1.428002,-1.267777,-0.112424,-7.680485,6.052203,5.201569,-4.244477,-1.389362,7.989909,7.780254,-7.525544,4.375577,6.651217,7.256565,3.871791,-2.684363,5.895103,9.431893,-1.370945,6.242103,-7.472492,8.573816,4.269927,5.512463,7.256765,-6.973194,3.207780,2.672220,-7.608530,-9.869237,-9.628011,5.137929,5.490210,-9.715951,-3.512163,-1.328217,-3.895192,4.233836,8.364857,-2.760734,-5.918788,6.879283,-1.610198,-0.115949,4.384040,-9.832547,-0.616704,0.053785,-5.822647,8.611943,0.370044,-5.843372,1.061197,-9.310971,-8.313885,-5.538111,2.665469,-9.656188,-2.172644,4.887091,5.601692,2.741974,8.579785,-8.087500,-9.663982,-1.128732,0.098258,-0.923587,-0.444641,0.131035,4.565518,9.751646,1.617266,5.701085,5.800394,-5.999017,-1.140968,-6.772525,-0.643917,-4.597614,-0.193606,1.222143,6.177478,-4.610591,-5.310519,-0.696895,8.504105,-8.190635,6.122534,-4.355803,-9.636612,3.958487,0.527966,-4.169821,-4.961230,-3.925103,4.097891,-6.766611,6.482627,7.594025,2.952582,-4.431284,3.161389,8.164690,-7.433650,5.278669,-7.602109,7.493007,-7.002380,-5.358793,-6.166020,3.968850,-8.574183,-2.760309,5.675270,2.549074,2.685704,0.824840,-1.297342,7.689412,3.515824,-8.789952,-7.489860,6.491053,2.010610,1.830039,-9.716179,-6.048448,5.930249,1.195552,-6.507655,4.639174,-8.901811,-3.506154,2.876480,6.768359,1.217503,2.146306,0.582404,-7.745065,-1.214567,4.656906,5.061377,9.322326,-3.073329,1.440018,7.543260,9.073557,7.373536,-6.174077,6.820364,4.643509,2.362437,-6.860807,5.218556,-0.676435,2.477404,0.262760,8.025608,1.632297,3.820138,-3.217391,3.044686,-3.330934,2.338671,0.874727,-5.801754,2.452210,3.645018,-7.418991,2.869959,-6.437863,-4.871076,2.340011,-2.952795,-5.863484,0.912738,-9.588778,-5.870434,9.357007,-3.075534,-1.548535,-7.146320,-1.876458,-5.730471,-6.443860,8.453164,-0.659065,-4.741747,1.191890,-8.523646,-2.630494,-3.642904,-4.003421,3.310154,8.055346,-8.767955,-8.361058,0.080142,4.404383,-1.524525,4.748006,-5.403001,3.333136,4.114283,-0.464779,-1.492318,4.374716,3.500911,5.398983,-2.766397,-0.698386,5.065481,0.951771,-0.764916,-4.865539,-2.937311,-5.064574,2.980886,-5.819564,6.868888,-1.117721,1.091744,-1.419104,1.585839,-9.186760,-9.318954,-5.385923,9.823024,2.987149,-4.948302,-1.219513,0.899244,-4.877899,2.448887,-6.335352,3.253407,-8.263759,-2.612140,8.646067,2.353376,0.716639,5.339359,8.532742,0.590947,-4.290506,-8.107566,4.224636,3.287187,-3.544112,-8.490549,9.060346,9.813425,-7.461490,1.672153,2.269115,3.249589,-1.668117,-4.893523,-0.210538,-1.864050,-8.626794,9.237061,3.103290,2.504567,9.859771,-9.621473,2.087049,2.948439,6.993562,2.241458,5.476559,-3.387055,9.209853,5.113704,-8.070232,-7.013718,-0.083830,-2.907220,2.656823,0.376721,2.337740,7.381837,8.608385,3.315294,6.095779,0.183376,4.724821,5.074644,-3.027450,-0.595719,-1.606445,2.486515,5.602705,-2.213722,2.703980,5.791968,5.573993,2.227045,1.259181,-0.042323,-0.928932,9.203817,5.295836,-3.233219,0.722486,-3.079652,-2.145549,-7.899822,-5.298907,-7.748979,-7.854319,-5.633770,-8.668125,-9.815960,-0.511857,1.495647,-3.720084,8.733358,6.314461,-5.010977,-3.121565,-3.957106,-7.656629,-5.111101,-1.023183,5.028693,1.846896,-0.640417,6.892852,8.813708,0.665838,-1.585084,-6.841648,4.349308,-9.205860,-9.226302,2.235195,9.975755,-8.136983,-0.610302,-5.648250,9.228571,7.512435,3.491459,7.055493,2.956742,8.360342,-9.635584,6.433138,7.888338,7.259904,-8.793173,9.762202,8.664734,-0.634593,-1.923860,7.333371,-6.626392,4.343629,6.774450,-3.962933,-5.057078,4.282826,1.507557,-4.359987,-6.345046,5.920269,-1.395987,-2.808566,-7.146289,0.209230,3.785577,-3.787587,-6.590787,4.883687,-1.054783,-9.108885,-3.184658,-4.404748,-4.493471,-6.397636,-4.150946,9.409290,-2.745540,-9.757419,-6.077899,5.432350,-0.749005,4.432617,-1.799751,3.474856,1.974500,1.162893,3.995478,2.870625,-6.510071,-3.739569,6.320202,-9.785617,8.489985,-7.324628,-9.448389,7.114087,-9.089305,2.124484,7.978791,0.766203,-7.859026,-7.016171,-4.690840,5.777044,-4.063018,-7.314025,-8.102970,8.323876,2.432517,9.829832,-9.900304,7.965231,-8.749263,8.215327,1.976804,-7.553511,1.414909,4.037334,-9.125870,-5.504009,-3.792273,9.252226,4.204560,-3.737836,-7.203552,1.783198,-4.390000,1.944643,9.618580,-0.112030,-1.033354,6.649960,-8.320712,8.904129,3.768407,4.269414,-2.541141,-3.494166,6.485236,4.158167,0.482758,-7.660883,2.974003,-4.837534,-5.636429,9.730031,4.731431,-1.368688,1.840837,-1.361757,-4.754335,-4.235808,-6.285455,-7.780176,9.144869,-8.147543,-0.320985,-4.196223,-6.304644,9.434995,8.195148,6.380939,2.079700,-6.595670,-9.472568,8.187235,-6.870924,9.956719,6.212491,9.700799,6.919357,6.679839,-1.392427,1.080867,-1.054881,-8.343877,9.013119,-0.009457,2.590910,6.245163,7.012194,-1.528993,-1.695978,4.703998,-9.359361,-1.955932,-6.042048,6.614807,6.158370,3.490777,9.631155,-9.493936,-0.396520,8.545998,2.242501,6.895485,-3.573119,2.303566,1.455059,-0.851977,3.185291,-5.800281,-9.515672,-5.662788,-8.526404,3.140949,1.140420,8.294307,-1.779316,-7.226773,0.043434,-4.600041,9.225078,2.922770,-8.701781,-6.460743,-4.627170,0.467341,7.147149,0.205649,-8.353592,2.464331,-1.853434,4.979954,-6.992806,-8.002852,5.962573,6.881093,-8.082805,4.498536,-2.011698,-6.866303,-5.957104,5.340791,-7.224729,-7.850129,6.756157,-9.656044,-2.946890,-7.791954,1.737272,-8.859033,9.538011,-4.214632,-9.130336,8.118824,8.695494,-3.933350,1.870339,5.188527,-1.239501,-6.729372,-2.683108,6.810052,-1.961444,6.758776,-4.787184,-0.837111,1.423660,-6.998436,7.694060,-7.298287,4.172641,-0.317022,-3.233510,-8.352160,1.143325,-1.582649,-8.178116,-3.555381,0.136000,-7.775194,-8.831404,4.317007,4.563941,8.480370,9.340199,-8.042488,-6.997930,-0.377811,-3.259429,6.639153,3.554191,0.068979,2.554580,9.863021,0.617540,1.337319,-6.657764,5.989035,-2.346799,-4.422516,-4.297984,-8.613905,-1.947904,3.636623,-3.298672,-0.412484,-7.762352,0.948203,-1.432129,-7.870639,-2.216303,5.330193,3.469268,3.995214,6.145637,3.817252,-5.147060,8.449035,-5.395695,6.004952,7.155812,0.915920,-3.078737,-2.409025,1.449477,-1.522270,-7.205456,-6.388281,8.454685,0.603048,-9.584780,-0.326158,-2.368721,2.376193,6.453916,9.842506,-2.778780,-9.290263,0.241532,3.168439,-2.479828,1.700806,0.580367,-3.943355,6.036266,-3.524159,-3.358911,-3.926993,-5.067790,-0.824819,-8.845600,-7.185971,-4.955948,5.421915,7.674746,-5.879490,0.811929,-4.599769,4.252717,3.834847,-4.218382,-0.762450,-2.831049,-4.377066,-1.257032,-0.335982,-3.174829,-4.414325,-0.495493,3.910441,-3.901369,7.806293,9.165877,9.532358,-2.316051,3.817888,-9.817724,1.587871,-8.153702,6.576241,-3.835564,7.285978,-6.883052,1.451685,-6.278934,3.271595,-9.818229,-0.214798,-2.812115,2.471022,-7.948922,-9.306191,-2.436914,0.700377,8.368401,-5.935057,5.866815,-8.423791,5.368886,-3.577463,-1.987084,-9.493701,-0.519866,-8.021957,-0.839189,3.136645,-7.171935,5.913548,6.343720,8.292448,1.941435,6.623808,-0.015956,3.530520,3.888340,3.277528,8.945227,5.112182,-4.056636,-1.942371,6.957017,5.177176,5.611564,-2.411364,3.553474,6.819746,1.125959,1.565075,6.269302,1.746246,-2.804273,-7.397892,6.487666,4.935289,-7.304871,-1.046226,6.133199,9.384236,4.428203,-6.608808,-6.246021,8.387050,-7.944701,3.773642,4.252590,-3.517773,3.738083,4.375944,-5.993436,-3.392582,6.199284,-7.556337,-0.333618,8.262531,-1.556383,-2.507836,-6.281938,-2.019157,8.624091,-1.658064,9.985515,-6.299015,3.827242,1.569818,9.612442,-0.635275,-6.028493,2.532356,1.326853,-3.886880,-6.255774,-5.653125,2.076713,8.244038,-1.963624,8.361173,3.389768,-6.607775,-9.172423,-3.220387,2.726207,-3.194653,-1.926330], dtype = "float32")#candidate|13230|(2016,)|const|float32
var_13231 = relay.var("var_13231", dtype = "uint64", shape = (162,))#candidate|13231|(162,)|var|uint64
call_13229 = relay.TupleGetItem(func_12403_call(relay.reshape(const_13230.astype('float32'), [84, 24]), relay.reshape(var_13231.astype('uint64'), [162,]), ), 3)
call_13232 = relay.TupleGetItem(func_12407_call(relay.reshape(const_13230.astype('float32'), [84, 24]), relay.reshape(var_13231.astype('uint64'), [162,]), ), 3)
uop_13241 = relay.exp(uop_13216.astype('float64')) # shape=(12, 3, 16)
func_4576_call = mod.get_global_var('func_4576')
func_4577_call = mutated_mod.get_global_var('func_4577')
call_13248 = relay.TupleGetItem(func_4576_call(), 3)
call_13249 = relay.TupleGetItem(func_4577_call(), 3)
func_12526_call = mod.get_global_var('func_12526')
func_12529_call = mutated_mod.get_global_var('func_12529')
var_13256 = relay.var("var_13256", dtype = "float64", shape = ())#candidate|13256|()|var|float64
call_13255 = relay.TupleGetItem(func_12526_call(relay.reshape(var_13256.astype('float64'), [])), 1)
call_13257 = relay.TupleGetItem(func_12529_call(relay.reshape(var_13256.astype('float64'), [])), 1)
func_6939_call = mod.get_global_var('func_6939')
func_6943_call = mutated_mod.get_global_var('func_6943')
const_13279 = relay.const([6.880541,-9.611717,5.946258,4.957904,-3.277346,3.122714,9.598207,-5.367477,-1.410040,4.477522,-1.485439,2.851091,-7.158840,-5.023524,5.520915,-6.519928,9.939744,8.262325,6.340977,1.157321,3.008004,-4.613414,-9.725984,-8.831204,-8.801304,-3.589465,5.222830,9.597353,7.146191,3.212451,1.008399,3.791158,0.723956,7.001798,4.070363,-6.320275,-7.861973,-7.339484,3.463423,9.564992,-8.955519,9.245041,1.047083,7.453903,-4.730439,-7.763119,-9.789813,5.182556,-8.237768,-2.192963,6.794964,-7.682995,1.534698,-5.542354,-2.814541,2.013325,4.741068,-3.865156,2.004783,0.507401,-5.235295,9.327896,4.236448,-6.258783,4.675473,6.991318,-6.435845,-5.722827,-0.508879,-3.082789,-6.516186,-5.011284,-1.033456,7.942383,-2.222285,-8.961227,-1.402535,-8.903895,-9.703814,8.292078,8.202120,-1.431937,-4.801992,-2.175055,5.325431,3.193641,-6.965627,4.999910,-0.197782,-8.125340,5.166642,-7.253101,-7.912584,6.940076,1.459298,-2.058145,1.430343,-8.818149,-6.899327,0.549056,-1.280514,1.319055,-8.181289,4.291290,1.673863,5.383421,-5.993282,-6.760798,-2.725156,5.355500,-7.744566,4.912517,-8.936905,-3.700696,-7.705566,-7.378176,-6.461474,6.117923,-1.844365,-8.152509,-2.514527,-1.973695,6.923171,5.367635,-8.776917,5.742601,-1.331389,7.137287,7.189308,5.290619,4.186451,-4.658127,-5.105353,-0.037284,-1.355572,-2.052441,-5.222035,-1.619731,-7.262676,-2.414199,-2.570805,9.753189,-7.520189,-9.513605,-5.269805,6.352621,2.945131,-4.287378,1.002653,5.006910,8.700957,-2.537570,-2.520908,0.775174,-8.786057,-7.514578,6.508183,2.211630,-9.086530,7.559151,-4.198370,-0.995829,-9.875483,6.857781,3.595780,-3.961119,-0.358005,-6.888216,9.033995,6.367274,8.082999,-9.799993,-4.147495,-0.885865,4.337133,2.094366,-8.809345,-6.809847,-9.756387,-3.420151,-2.934518,-2.955063,7.239672,7.663624,-3.891889,-1.260424,-5.696343,4.761459,6.450100,9.603803,8.797435,-0.801998,-2.079239,3.522087,-2.587939,-6.679985,-6.585241,9.385461,-1.642181,-7.003140,-8.344402,-7.050824,8.719395,8.228317,-6.490706,-5.976959,9.201312,8.436103,6.444144,1.593653], dtype = "float64")#candidate|13279|(210,)|const|float64
const_13280 = relay.const([-6.399106,3.967151,-4.307703,-7.048548,7.492570,-9.683647,-3.771106,2.271004,-1.003453,-8.139308,-6.960826,-3.791867,-0.878874,3.711401,4.446411,1.800806,0.025348,-9.869280,-8.349405,-5.172603,-4.362811,1.949930,-2.649443,3.038036,-1.087322,3.183626,5.416446,-9.907837,9.311137,2.151536,2.415612,-4.208926,-7.977546,-8.817196,8.663228,-5.424563,8.319007,-6.575810,-5.167140,0.117565,-0.225413,3.430125,-8.176366,4.468809,2.770745,-2.691859,-0.329956,1.199374,-7.102372,1.179373,6.013859,0.047523,9.769608,-5.121255,3.840585,-3.934372,-8.506522,9.724639,4.842772,-7.393650,-9.845796,3.258501,-3.545001,9.213239,2.274348,-2.060647,-6.715702,3.419038,-2.653981,4.153945,4.921727,2.965017,8.348844,-3.468004,7.861615,1.079142,-7.370066,-8.236087,2.805514,6.430881,8.816113,7.216115,7.539926,5.114578,3.510604,9.063808,6.395028,-3.160958,9.452611,1.902298,-0.030438,-7.083024,-6.274442,7.400872,-5.655097,-4.221666,-8.455858,1.501876,-1.702041,2.767838,9.242761,9.751296,4.466371,4.410626,-3.096396,-3.539628,4.967453,3.050033,7.300719,-9.021397,4.331992,6.096830,-1.687100,3.733115,-8.194982,-4.622892,3.633584,-9.116788,-9.960711,-5.420819,-5.793085,7.718903,5.594881,8.357697,9.528042,7.565426,-8.705627,-2.972278,7.950537,-4.617866,2.413459,-4.862808,-2.878283,4.474260,-8.451139,7.724505,-7.346453,4.349502,-5.460593,4.383524,-3.821177,-2.002216,3.498361,2.080038,3.005602,-0.829244,6.493875,5.938605,0.678084,-5.207010,-7.101158,1.149079,-2.395730,0.512341,0.926308,-2.409824,5.536818,3.381262,0.215892,2.344247,-4.290117,6.567899,-6.819329,7.193326,-3.867066,-7.553298,2.520221,8.750031,-0.723450,-3.541038,5.840452,5.001310,-0.576322,-0.642046,5.836545,-1.239353,3.807639,0.046134,-7.714098,-7.588476,-2.047475,-2.157381,-8.977833,8.932928,-0.788249,-2.958077,-5.228127,-6.165993,-8.731365,6.933809,-0.371522,5.968811,4.842371,-7.614006,1.585530,-6.336542,9.652896,-9.835042,0.192203,-7.524777,4.058024,5.555853,-3.918000,-0.083264,-4.990597,-7.938301,3.175154,7.723073,0.655490,6.513106,-0.739411,-9.971425,-4.816608,7.558520,1.104750,2.375342,-4.747003,-6.322803,-6.603821,-3.764170,-1.114781,6.447982,-1.719697,3.934193,-6.239530,9.229306,-8.307775,-7.329528,-6.525155,-6.654508,3.024669,-6.226723,7.381990,-0.842056,-5.695498,-4.214082,-7.114849,-5.961887,-3.395707,-3.745082,-8.933265,2.866719,2.450683,6.864574,9.227182,4.589543,6.244032,0.105451,6.232954,-2.347586,-5.414253,-3.635243,9.761466,3.646531,-1.152617,-0.951238,1.517791,-3.744436,-8.030856,-0.413729,0.589480,-1.499021,-8.728249,4.315937,-2.254424,7.823054,8.296603,1.845782,-4.704921,-1.133729,-5.121138,-2.514260,0.740995,-1.652814,-9.119764,7.807773,7.235726,3.718443,5.206060,4.145650,-2.933948,-3.608744,-4.327185,-6.840410,5.466964,-2.944956,-3.630085,5.416978,6.896982,0.447793,1.541735,1.485940,-0.111591,-4.570048,-3.664573,4.968098,-0.931699,-1.349823,3.789100,7.836171,2.755126,-2.846403,-2.113917,1.699858,-4.670833,-4.819393,-6.084191,-2.495247,-2.501984,-4.245613,-2.443447,0.067558,-4.189817,2.821688,3.122372,-3.901613,-4.200295,-8.133512,-0.480791,-0.004549,-8.361180,-6.843135,2.043406,5.876044,8.218592,-8.569327,-5.600950,-7.120960,0.245403,-7.449531,0.391388,8.310123,-5.749720,-0.738823,-7.348645,6.255663,8.399792,9.268033,-8.693262,-7.051975,-2.019028,0.793388,7.127570,5.445737,6.188407,7.183009,-3.886190,7.920942,-8.115221,-8.062584,-5.445933,0.039481,1.254851,-0.545126,6.635334,-4.779504,4.033049,-7.894314,8.332903,8.005503,-5.498271,2.536470,-0.740193,0.400619,7.561030,0.876251,3.054323,0.713100,2.202671,-1.499722,6.938386,-3.299855,-2.320812,5.303235,0.940984,-4.019581,1.708957,-8.679249,-8.120359,-2.059775,6.304972,-4.445397,-8.386359,-3.898832,7.404010,-3.531415,4.049284,-8.566996,-9.051758,8.865650,-7.121213,8.204515,-8.429855,6.385173,0.850719,-2.620326,3.776851,5.303150,-8.566114,0.137336,-2.580622,-4.653033,8.997208,2.097238,-6.752239,6.876811,-1.910614,-3.684526,-1.689199,-0.963904,0.177747,8.107213,2.647009,-9.380410,-6.672988,4.460892,-0.097458,-5.952452,-0.513521,1.844721,-3.930134,-0.440562,3.862467,8.522071,-7.098866,8.591424,-1.086164,7.378502,3.178549,-4.742796,4.286358,-0.116402,9.740390,8.718970,-2.633053,7.837989,6.807017,7.382505,-4.105481,8.468719,-4.109771,7.455045,9.850424,-6.368562,-1.067289,-6.662359,3.614431,6.493850,5.938258,-1.771899,4.551576,-4.361632,2.906936,2.856038,6.341432,7.439152,2.338372,-2.732882,5.274139,9.084827,9.060153,6.799371,-6.736796,-3.289400,-0.918131,8.865437,-5.129362,-1.785543,-1.054385,0.390823,-7.206227,9.202150,7.362627,-6.558635,2.657933,4.767590,4.398190,7.717709,7.490321,8.786624,-9.443395,-8.995967,5.040417,7.612640,-8.624207,6.906725,2.464542,7.154371,-3.934113,4.246158,6.389730,6.662652,7.514265,1.180718,-0.629888,-8.017993,9.169534,3.840155,-0.231805,-8.329030,2.035487,2.901989,2.303428,-4.459861,5.896881,0.784504,-2.428399,6.366036,8.947661,-7.038779,-9.884514,-7.125082,2.832909,-1.049750,-6.975084,5.102459,-2.286878,-9.681167,2.676489,0.804867,-1.583653,0.134929,0.735716,4.707905,2.519704,-0.736830,-6.506986,-5.038579,-5.670936,0.748683,4.472964,1.198324,-5.915539,2.220310,-8.181456,-6.034417,5.550981,2.229270,-3.155570,9.679883,-9.210872,8.001928,2.393155,3.488587,-3.620163,-8.753126,9.488244,3.610476,-7.132180,8.700665,-4.960244,4.213613,7.375716,-8.997371,7.817186,-0.423809,-6.689182,7.118586,5.522427,7.812623,3.199072,7.187356,8.107506,-7.081454,-8.089833,-8.974204,9.812280,-5.138546,-1.504463,6.072306,3.737337,-4.783114,4.550079,9.019331,-0.473232,9.402134,-9.064147,-7.323685,5.364945,2.713609,-4.538401,-6.869872,-2.212821,-4.338055,-6.012962,-5.164759,3.743961,0.962346,-3.229165,1.077656,3.911637,4.295827,-3.801468,-3.889751,-5.387740,9.612962,5.445917,9.039663,-0.900396,1.739346,6.125348,-1.251813,-1.265186,5.019582,-9.360864,6.432369,5.375398,-9.129839,-9.035819,-9.444085,-3.183409,0.416739,5.251173,7.809871,-8.661001,-4.420737,6.194794,2.267440,-1.081752,-0.313739,5.105807,7.842671,-7.705626,-9.580691,-8.187134,-6.591325,-7.577045,-7.333301,-4.197037,-4.960329,-3.919643,-3.324791,2.372283,2.647880,-4.967351,5.131009,0.630075,0.402382,-3.480622,-8.431179,-2.743857,4.954922,-3.506720,-7.564135,-4.918030,-5.282046,-5.081369,-2.009331,-1.510171,7.472671,3.669085,-2.939996,0.471708,0.546176,-7.402358,-9.858043,-1.039434,9.166126,-3.796567,8.865059,-1.421970,6.788560,-3.183424,0.737071,-5.542612,2.276654,4.598614,-4.064995,2.972626,-1.082077,-5.183750,-8.141717,-6.587915,9.939176,-3.666831,1.657756,-1.623856,2.005259,-4.201882,3.779134,4.725485,2.690512,1.196512,-8.156245,9.799121,-5.498240,1.648884,-9.291203,-1.650528,-0.206249,-4.092363,-2.378243,2.404487,2.549702,-2.284962,-3.473336,2.715310,-2.221769,0.931125,-8.366370,6.253321,-4.625884,6.132028,-8.982283,4.786700,-6.762553,7.808390,-7.804807,-0.149979,-4.460230,7.231410,0.734681,-9.582998,6.394326,-2.248565,-3.418250,-8.409466,-5.141088,3.349328,1.044979,-9.711264,-4.555432,-6.932598,-8.239305,-3.432972,6.440303,0.956975,5.513082,-0.959798,8.546220,-4.530505,-6.908597,5.575350,-3.630728,-6.726524,8.129380,-1.475627,-5.264155,-2.347411,3.389065,7.252456,-6.436118,2.896215,3.872912,-8.200485,-6.321209,-6.631503,9.005612,-5.449591,5.769877,-1.993096,5.368345,-4.261535,7.361597,-4.794953,-6.803324,-7.378822,-8.724163,-1.861396,1.774229,-0.509705,0.306933,1.138171,-3.683441,-5.676940,-2.853004,-3.344120,5.258797,2.716274,-4.103226,-6.660419,2.696266,0.449453,-2.550421,9.165517,3.740578,-7.628621,1.848417,0.265944,0.960645,8.874100,-7.002369,2.179617,-3.622890,3.214982,-1.643854,3.859007,-8.577216,3.231528,-4.737941,-7.670178,-5.262127,-6.902681,-4.997330,-9.786894,-5.117240,4.869092,6.722212,-8.824950,2.315900,-1.222591,2.962583,-0.409929,0.797444,5.753680,-0.925209,6.786858,-6.780637,-7.455694,4.401902,-6.145262,-2.575085,4.167361,-4.038993,-2.022246,8.112536,0.530648,-3.337116,-3.880039,4.810109,-2.833806,4.275245,-0.953263,3.295132,0.902695,6.302113,-8.212090,3.410834,-2.878327,-8.716673,-8.940244,1.030298,-3.328861,4.911950,1.488067,-2.053601,-5.810884,4.274592,8.952796,-7.426091,-5.667284,-7.334641,1.818270,-6.538701,1.817543,-9.016254,-3.920324,9.596555,-0.587637,4.036528,6.255214,8.068838,2.717356,2.843130,5.823126,7.769830,9.353003,5.428184,-7.609463,-3.861220,-4.067479,0.718805,1.520117,8.644190,8.070669,1.310082,1.777812,-2.191526,-7.558827,7.924817,9.712363,6.148847,9.508306,-4.794781,-4.535837,5.699061,5.655139,6.713130,-0.133202,-0.107484,2.030524,-5.604090,-8.469543,0.515884,-4.569385,2.669088,-6.440072,7.874128,5.905716,3.050011,-7.485226,-1.579122,0.430257,-1.281312,-4.248703,8.362580,8.896706,-2.538381,-2.033480,-0.362623,7.042954,2.858016,-7.719474,4.159512,-6.625168,2.935377,1.434282,-4.114831,1.935247,-8.608617,-8.867242,5.797476,-7.285234,1.331162,6.431481,6.316761,6.374262,-3.955649,7.316844,2.168894,-5.840638,0.640779,-6.225759,-2.933365,-9.488747,-3.816054,-1.661477,-5.050437,1.559261,-5.637651,8.936781,8.744312,-5.758744,-7.418714,2.394119,4.438947,-3.994822,-0.616097,-1.432242,-2.743011,4.396058,6.701868,-9.946854,-0.604054,-0.718844,5.938890,8.894135,-8.712443,-2.705838,1.596879,8.742853,-2.385093,3.831952,-5.611248,1.222529,0.400366,5.769750,6.900061,-8.246317,-3.841511,-8.948323,6.132243,-4.092199,3.983781,-3.765973,8.167367,9.766125,-7.713714,-5.268980,-1.431810,4.668664,-2.830525,0.993525,7.772745,-7.100031,-5.608308,1.212571,-1.124306,5.269065,-4.175124,-5.989947,0.793968,8.823300,9.149828,9.996441,-6.746848,3.980636,0.769270,-5.683998,-1.059703,-4.423657,1.052818,-4.238677,-9.939159,0.837451,-5.508602,-1.336275,6.357406,9.017067,0.944270,-8.700555,1.870324,-4.400256,-7.937964,2.623961,5.426007,9.721930,1.753389,-6.208135,-7.213401,6.903738,-3.525292,-7.967910,2.549120,-9.672163,-8.454489,-7.837882,-6.558820,5.157809,9.966786,8.605190,-4.687049,8.548310,7.505745,3.303603,4.677052,-1.871239,-4.616305,4.791011,-2.807553,-1.490447,6.291155,-7.323942,-6.236609,-0.419846,9.820726,-2.336787,8.199868,1.868395,-3.965789,-4.791472,3.350666,9.636176,1.438757,-5.677211,-9.271584,3.364573,6.581333,1.716648,3.931463,-2.128652,8.175433,-9.140584,-0.291494,6.801258,1.650598,4.768926,-1.159487,-5.665862,7.084547,1.445520,-0.148276,4.587692,3.298333,4.688656,9.554789,5.336218,-3.757937,1.469815,5.002776,5.170268,-8.356097,-9.692819,7.396716,-3.347374,8.367753,-2.157841,-5.112311,0.065353,-3.598630,-4.999671,-1.091595,2.200701,-1.972478,-3.476658,3.403761,-4.279455,-2.075067,6.782400,0.602661,-9.811465,2.190331,-4.608700,7.391120,3.262146,-8.252699,9.316050,5.003702,-9.077507,1.443525,-4.063823,-1.386308,-6.748955,6.701117,8.729415,7.612544,7.028833,-4.988230,5.321126,4.470704,-1.333014,-9.432515,8.542553,-2.824513,2.881519,-2.652370,-4.232322,-3.296617,7.352186,-1.517279,0.291203,-6.283865,6.986832,-0.441665,-7.339050,4.048400,-8.877902,-0.441741,-3.303527,2.955961,-0.427582,3.134625,-2.265867,4.498853,9.962993,-0.917412,-4.318350,1.170237,-0.136910,-9.595267,1.370460,7.422134,5.253890,6.773018,-2.886479,-3.664537,-3.728874,3.191274,5.504083,-0.819943,4.592047,0.231457,-8.442146,7.671917,1.517558,5.840414,0.938896,-1.333679,0.876174,-3.619934,-9.158078,-9.493056,-5.814190,2.869039,7.873319,-4.725038,8.029757,-2.789679,-7.152951,-3.476569,1.644573,5.469597,-9.587844,9.754490,8.267479,6.624759,-2.162637,1.894072,8.623337,5.760181,-2.362535,0.877849,8.585252,4.875878,9.670193,0.786528,-6.450209,-8.803486,-6.852891,-3.587412,8.079912,5.399834,3.587810,1.668123,-9.019491,1.704771,-2.583574,-9.604426,-5.955805,-9.514812,7.554337,-8.297441,-0.146652,-3.118565,4.321961,-9.721854,-8.159937,-9.841665,-5.652761,-2.854990,-8.195036,-9.297402,6.335376,7.947444,-4.623177,2.651133,1.883001,7.797980,-7.572478,6.624735,-0.784336,5.204426,8.495633,1.345061,9.757851,-6.738549,8.379658,-0.542257,9.089803,1.209341,4.351381,0.834878,-2.037780,-3.910719,-0.602737,-9.786608,-2.318260,2.557552,-7.319979,9.858323,4.446056,0.550060,-5.877288,6.661183,2.994916,-8.447753,7.293395,-2.884831,-2.663563,0.998052,-4.152633,-7.746887,7.995449,-3.735206,-8.145885,7.977751,-5.210889,-4.587412,-3.786851,-0.328679,-1.942093,0.544265,0.517481,-7.945873,-5.556085,-5.520980,1.344563,2.156091,4.055285,-9.492686,-8.371242,6.698355,5.115023,8.978713,2.344264,6.592443,-4.271334,8.845352,-4.701339,-9.772504,8.956617,4.263756,8.654748,1.105513,0.155589,-4.130839,7.210171,-9.046582,4.699983,1.965186,6.640166,7.632179,7.537258,4.633047,-7.315299,-6.129970,6.676454,-4.192785,9.788752,8.763167,-2.453434,-0.962468,7.565355,-5.387125,-2.220567,9.081186,-4.904898,-6.622468,8.168552,-7.542181,6.799119,-7.683988,-9.249490,3.769703,-1.521078,-4.133854,-5.093977,8.352499,8.334587,-7.022960,3.099165,-2.061974,-0.800773,0.085689,-1.920122,4.793478,-3.206201,-0.183629,0.096595,-6.333445,-2.837449,-3.447513,5.398105,-1.309679,4.013225,7.382082,-4.627898,-7.772397,-9.804652,0.068358,7.273660,-6.294541,-5.141444,2.577249,-8.612769,6.223666,-6.477337,3.961034,2.745481,2.287699,-8.046300,8.851126,-6.777338,-4.971874,6.960348,8.266254,-8.518883,6.647389,2.893613,-9.957309,-8.894379,-1.206343,7.597127,8.742802,-1.346858,7.193594,2.906735,4.206792,4.923990,-2.861401,1.604540,8.827414,9.299633,-7.071918,8.538582,-9.235010,8.977068,9.365456,-4.656212,3.537234,2.997879,7.369339,-0.022172,-4.781106,-6.262752,-9.402353,-0.760224,-5.003363,-7.782258,-9.465366,7.724325,-1.035754,-0.302505,-0.729001,-5.729046,3.837967,-0.870743,-3.018054,0.814378,-9.059532,6.633833,-6.002117,6.383101,6.318547,5.769312,7.602898,-8.477715,9.155353,2.456092,5.389767,-2.257989,6.530357,8.075348,5.696205,-5.525573,4.633971,-2.624779,-6.812260,-4.711841,-3.826659,2.326950,-0.436881,4.009076,-7.009473,4.709393,-0.996380,-4.986431,2.649621,1.609687,5.138846,-3.874531,8.397800,-9.943391,-5.436946,4.764068,-5.652009,3.146063,-8.533611,9.638739,2.900058,-6.931671,-6.812675,-0.662845,-9.255392,-2.183782,9.264164,-8.868835,2.356524,-9.134291,7.604987,-2.834202,9.550578,6.115536,-4.196165,-3.477813,8.814951,4.683967,-1.476301,5.248650,2.064221,-2.715972,9.362212,0.699756,9.078378,-5.641336,2.775704,-9.931971,-7.760439,-5.555737,-3.926327,3.857430,0.658406,4.287225,-2.671202,9.467449,-3.000544,-5.767838,-8.437846,3.215733,-4.700474,4.332858,-7.548604,-0.003620,1.062201,-2.505471,1.682540,3.885329,-5.826439,-6.836551,-3.884931,8.683092,7.051272,-4.516270,5.496644,7.103516,1.647982,-5.328714,8.483169,2.438336,0.867333,-7.085655,6.082589,-1.733096,3.104110,-2.219933,-8.481465,-5.833076,5.368604,3.407477,-6.234026,-1.900595,3.770358,-3.875833,2.119830,6.682702,0.321210,-1.171064,-2.773534,-2.906534,2.448582,4.988792,-4.922992,-8.199538,-7.103725,3.409187,-8.893099,-6.279705,-7.271516,-0.424449,-7.378992,-1.295062,-9.757416,-0.912090,8.566315,-1.380975,9.976684,-7.873694,1.210350,-0.960150,3.371472,4.785598,2.595503,2.917025,-6.393716,-0.331142,-3.223999,-9.496792,7.209246,7.686559,9.939097,2.263149,0.221306,9.032824,-8.462340,-7.407498,6.219234,-7.758955,3.134746,-1.911991,0.518546,3.203414,7.327205,-9.416832,-0.016859,-0.648327,2.254625,3.067443,5.766003,-0.631539,-0.656944,0.728758,-2.397503,-3.982305,-1.131142,6.948198,3.383616,5.347254,-5.590842,7.616289,9.128370,-0.610798,-0.099144,0.804306,-7.286104,2.500701,-5.639736,-4.210144,-7.704066,-2.128412,6.000089,2.089340,-1.574127,-3.429229,-2.633837,-2.250168,0.974703,1.447467,-2.067158,2.531647,-3.203327,2.467653,-8.203849,6.499568,-1.190808,5.449738,4.429582,3.510554,5.452273,-5.341030,6.254102,0.264136,1.727708,-1.952466,7.581853,7.346770,2.464941,-6.615797,-8.362876,-7.825124,5.980206,4.448985,-3.606233,3.112771,-5.246493,-8.601509,-8.710532,-3.195340,-1.551645,0.310453,-5.530664,2.634280,7.882983,8.693855,1.713398,-4.709882,3.279330,5.194799,-4.210937,1.770915,-0.333154,1.673147,9.213934,-9.405292,-2.906283,0.864373,-7.320052,-5.935459,-6.248050,-6.305969,-9.226544,2.179886,-1.161943,6.609680,2.002378,5.980277,-7.006785,-8.700322,-4.602251,8.950364,-0.666243,7.836916,4.066961,-3.097305,-5.805022,6.485387,5.480499,-5.256839,8.858879,0.471724,3.130960,-5.154917,4.331631,7.441392,-4.748288,-1.613603,-7.954791,1.726470,-5.636393,6.466243,-8.967689,7.072300,0.868755,6.075551,0.387723,0.510253,5.309275,4.961099,-5.508206,-4.606221,2.465561,6.432465,6.468121,-5.657498,-5.182636,-6.801883,-2.961396,3.243143,7.189700,0.047514,6.353943,4.916086,-6.489406,5.165576,-9.097097,7.666949,-4.832771,5.302478,-1.484606,4.241472,7.221973,2.490612,7.929725,-5.111600,-7.430148,-9.378474,-9.366416,-3.468000,-1.947650,-9.749640,-3.632114,-6.541093,-1.142870,-1.899028,0.573399,-6.226763,2.442874,6.615643,-1.234874,6.440367,3.204997,-3.107992,-4.064093,-2.742833,-4.265379,3.666178,0.803563,0.297765,9.533393,-3.232585,-7.482794,5.442655,-7.107126,-8.361266,-0.143173,8.685765,2.814737,-1.702743,2.298898,-9.720011,0.206929,-7.202269,-7.743459,-2.254088,3.792367,-3.811062,8.914453,6.808754,-5.139316,-5.556686,9.898323,-3.113697,1.902571,-8.505821,-2.420526,-1.248047,-0.742827,-0.436039,0.323297,-1.143982,3.706648,-9.178250,2.007171,-3.486822,6.179938,-1.974962,5.356686,-1.009638,7.325537,7.662963,4.513517,8.306259,-6.318449,-3.365697,0.993158,-3.788517,-7.884860,0.358905,-5.840003,4.714106,2.635154,-1.380635,0.947214,0.879320,-1.794320,-2.571122,4.672832,2.494555,9.907455,7.519819,9.993431,1.226449,-7.588693,6.215745,-8.372668,-0.900271,-7.100408,-0.196369,5.778562,2.070875,-4.597417,-7.227281,3.864119,0.411123,7.510610,2.905064,-1.696375,-6.716560,-3.973784,5.555077,3.732483,-2.957153,9.091967,2.657941,-4.875463,-0.891349,-1.935039,-1.175305,-0.800941,-2.363472,-4.649497,-5.530327,-0.587368,2.028520,-0.096700,2.734509,0.242231,-1.660818,0.987204,4.272393,-4.967344,-8.692570,-3.637121,-7.807932,3.355745,1.485639,4.350828,-2.814505,-7.571174,-0.415227,3.439584,-0.140976,0.105295,7.904143,-2.826068,-1.431846,-5.868944,9.756836,-1.939396,7.056702,-9.976943,5.616814,5.722720,2.405824,-6.652432,-0.908327,-4.306080,-0.161235,5.187159,-6.342923,-9.749484,-8.126363,0.729438,-1.805681,-8.600131,4.415963,-8.717761,-7.573549,7.444795,0.266355,7.426147,5.988642,1.134888,1.573454,4.297114,-6.370226,-1.730225,-8.790880,0.681834,6.320693,-5.277119,-9.262233,-4.510749,-7.555326,5.982763,0.602853,-2.995535,-9.190055,-1.641157,-0.769385,7.303918,2.247718,-5.936130,1.091691,-4.162842,7.856642,-2.297020,5.650883,-1.564477,-5.838288,-0.517104,-6.083629,-6.322137,-3.000861,-4.242002,-6.980404,7.670798,0.718156,5.674839,5.810543,-2.912287,-5.623633,2.867762,7.260864,-1.523673,5.856544,5.634160,6.042600,-3.171502,-8.227592,-5.207529,-4.859811,-6.282007,5.378977,-6.332604,-8.624254,8.189820,8.651682,-6.693342,-2.460381,-2.621113,6.560709,0.809586,7.963856,-1.983359,-6.325630,-3.178279,4.089654,2.004881,-3.292456,5.796030,-0.926110,-2.090778,9.798631,-2.542695,9.274474,2.076567,-0.187442,7.691361,-7.054681,5.297361,-8.170853,6.988645,-3.139147,6.345006,9.623337,0.100205,1.832219,6.065713,3.370648,6.807616,0.309363,5.487065,8.939508,9.715092,5.181530,6.395235,5.829879,0.925654,4.597467,-2.847914,9.986734,-9.988235,5.461771,-3.340529,4.501137,4.789947,-0.684041,-0.402633,0.111695,-5.380242,-0.067367,6.511787,-1.691216,9.130932,0.231602,-4.965539,-9.246174,4.588143,2.813400,-7.897600,2.507381,6.063658,-7.362707,-8.520523,5.432708,-7.465708,-8.482330,7.771473,-9.918901,-4.270965,5.965992,8.156439,3.632137,9.462406,-8.158395,8.740207,-2.573378,2.313314,-1.634677,-5.260117,-2.272046,8.132839,-2.951652,-7.664084,0.977885,-3.817428,1.618957,-0.694795,7.898755,7.794858,8.543574,4.470554,2.314644,4.214235,-9.659091,-4.905984,-3.445131,1.565556,-4.261328,-5.850792,-3.420156,-0.550961,-8.998982,-4.659452,1.079578,1.634391,-7.835260,-5.746610,4.532412,5.534375,4.419096,8.144197,1.122140,3.645594,-4.715966,-9.988738,-3.137463,-9.592066,5.754515,-4.741705,3.562779,-8.600267,8.118307,6.707595,-0.684072,-1.572848,-2.250241,9.813884,0.669358,-7.651410,-4.419337,-9.989430,8.767421,4.968832,-2.982584,6.816686,5.001265,6.848626,-1.222874,-5.965404,-7.530759,4.407026,-0.422243,-5.485742,2.806896,5.616694,5.553612,-9.663484,-7.238986,-3.907436,-9.371591,-3.140680,9.761508,-1.752169,8.616432,-6.855829,1.590014,-8.123937,-5.353884,3.284686,6.953491,-4.514821,2.375169,-9.032572,-3.686030,-4.469360,-6.172910,6.586455,-0.087553,-4.638169,-5.811610,7.477840,-1.516299,2.934403,1.619923,-7.594721,3.568054,0.672027,8.526930,-0.554956,-1.815947,-6.615996,-8.467740,-6.950385,4.181626,-6.190100,5.969279,-1.141675,9.839252,8.975657,-2.252446,-3.371847,-9.777564,-3.189713,6.590537,1.696862,2.793864,-2.707255,9.835188,0.248684,7.984963,-7.046968,6.525348,-2.057242,-2.328877,9.497823,8.274762,-3.596152,-9.776216,-1.967014,-3.661989,2.888406,6.263096,0.596946,9.752811,-6.266512,-4.516743,8.010495,8.989304,-6.198536,7.428443,-3.487849,9.440945,-9.754149,-5.992100,4.125364,9.928870,-0.988067,0.181544,4.671667,-2.572428,5.423039,4.701172,6.897393,0.438590,-4.389779,4.693445,0.690414,-8.752687,-8.660137,-3.774768,1.524701,6.039013,6.027602,4.546113,3.915702,-1.101641,-1.599233,0.359966,-0.496504,1.403946,-2.738856,9.679693,-3.963374,6.501327,-1.706188,-2.541168,0.216301,-3.147935,-8.173589,-6.633781,5.529592,5.528213,-4.131339,7.360643,9.239099,7.786824,-1.523616,1.167649,-7.698692,2.361974,2.072277,-6.115139,3.625489,3.220315,-1.271568,6.333931,-8.118322,5.567144,-3.797907,7.305912,-3.498220,9.536937,7.993395,0.750277,5.479623,1.907807,-4.055506,-9.840762,-6.636151,-3.866752,8.966478,-8.380945,-0.876898,-5.306770,4.050907,-8.889481,-3.260290,-4.652836,-5.800353,-3.361728,-5.952772,-4.310819,6.266072,6.302100,-1.867742,7.962140,8.665270,8.687562,1.159279,-5.810346,7.374721,-3.053836,-7.784800,-1.083569,-9.762222,3.410723,-4.437312,-6.258997,-2.480432,4.366454,9.187565,-2.246062,-2.982630,-5.329275,6.224440,-7.707678,2.387521,-1.175642,0.078927,-6.575116,8.391416,5.862614,-1.987295,-2.154513,4.443942,3.518579,-9.079294,4.930009,-2.823717,-6.428657,6.300473,-8.380689,-4.637975,-4.649130,2.799343,4.572124,-3.582021,-3.606841,-2.603304,2.795252,-8.129408,-5.329771,-3.109070,-4.784092,6.180029,-9.794537,3.181198,7.865553,-0.768477,-1.698038,6.285820,-6.423443,-4.850058,-2.312596,7.964005,-7.772689,-9.237592,-4.648816,-5.736685,4.029647,-6.567984,-4.922748,5.323088,7.147396,-8.447661,7.867101,7.733121,8.432619,6.736762,8.528561,-3.232188,-5.842357,-4.076382,4.584110,7.614532,3.675487,7.528413,-6.563707,9.048342,-7.717301,3.167307,4.211583,4.247566,-5.371212,-2.163951,-3.877689,3.674940,-5.275172,3.485541,-4.518875,-7.468753,-3.757310,-8.306645,-6.639672,-3.250443,4.342267,0.631108,8.319360,6.865555,4.968577,8.547815,-1.541500,-5.612861,-2.448675,9.783844,1.739122,-3.423236,5.863296,-7.160633,7.692161,-4.692123,-1.082802,5.756174,-8.892581,4.689506,2.741173,8.064413,3.925207,-0.934718,-6.817745,-7.193607,1.232665,3.756786,8.959386,6.555096,2.906432,7.475769,8.703344,1.535533,-2.870134,3.927448,6.480831,5.006765,-6.740077,-5.278267,5.184339,-2.088093,-4.242626,7.142263,8.777537,-4.479563,-3.988850,-3.099023,-3.538510,-3.002513,-1.746777,-5.026526,-7.396627,-3.549401,6.518357,3.773904,-2.245296,-4.282423,-5.832418,-4.562931,-9.595692,-3.562732,6.327584,-2.986009,-9.370114,-9.038971,-4.616072,-9.298308,-6.888713,1.693016,7.461304,2.284243,7.442954,-1.611307,4.045437,9.287108,2.481214,4.296376,9.499476,9.204840,-3.270982,-3.299546,-4.585522,9.766574,-4.286314,2.166766,-0.015774,8.815681,-8.696551,4.439319,-2.282824,6.669080,-4.467530,-1.397316,-6.297691,1.276068,2.126926,4.277958,-7.094322,4.467805,3.227955,-8.132413,3.935934,2.584034,-8.292162,9.968737,-6.610106,-9.523549,4.085934,-9.339046,-1.801681,-7.752246,7.291493,-4.575973,9.173633,-7.278937,-5.647026,-6.772670,-7.507474,1.951495,-9.930088,-2.766476,4.002939,6.559509,2.352593,-3.972556,1.527972,-5.182565,-9.482805,-6.852816,-0.684470,-6.267439,8.640368,-3.621732,5.994797,-9.924090,-4.826707,-3.165680,-1.080266,2.799450,6.469873,2.517909,-5.872963,5.589626,-6.404349,-4.158992,7.946010,9.510386,8.904752,-1.752055,5.415911,-7.852013,1.530637,0.464296,-9.027376,-6.679693,-2.907680,-2.740117,4.953299,1.573474,9.580091,-0.359501,6.307479,-5.909040,7.881054,2.943651,2.976250,-9.422524,-6.331651,-6.344499,-9.915794,-9.895620,4.503132,-9.489305], dtype = "float64")#candidate|13280|(2520,)|const|float64
call_13278 = relay.TupleGetItem(func_6939_call(relay.reshape(const_13279.astype('float64'), [15, 1, 14]), relay.reshape(const_13280.astype('float64'), [15, 12, 14]), ), 0)
call_13281 = relay.TupleGetItem(func_6943_call(relay.reshape(const_13279.astype('float64'), [15, 1, 14]), relay.reshape(const_13280.astype('float64'), [15, 12, 14]), ), 0)
bop_13301 = relay.floor_divide(uop_13241.astype('float32'), var_13256.astype('float32')) # shape=(12, 3, 16)
output = relay.Tuple([call_13229,const_13230,var_13231,call_13248,call_13255,call_13278,const_13279,const_13280,bop_13301,])
output2 = relay.Tuple([call_13232,const_13230,var_13231,call_13249,call_13257,call_13281,const_13279,const_13280,bop_13301,])
F = relay.Function([var_13215,var_13231,var_13256,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_13215,var_13231,var_13256,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

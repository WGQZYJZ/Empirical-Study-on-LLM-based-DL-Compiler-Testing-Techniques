==========mod==========
#[version = "0.0.5"]
def @func_10612() -> Tensor[(2, 14, 8), float64] {
  %0 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %0.0
}

def @func_13633() -> Tensor[(630), bool] {
  %1 = @func_13560() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %1.1
}

def @func_6088(%var_6083: Tensor[(112, 2), float64]) -> (Tensor[(330), float32], Tensor[(224), float64], Tensor[(112, 2), float64]) {
  %2 = @func_5030() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %3 = cast(%var_6083, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  %4 = reshape(%3, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %5 = @func_2586(%4) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %6 = %2.3;
  %7 = %5.3;
  (%6, %7, %var_6083)
}

def @func_9366() -> Tensor[(2, 14, 8), bool] {
  %8 = @func_7559() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), bool]) */;
  %8.1
}

def @func_14311() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) {
  %9 = @func_7559() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), bool]) */;
  %10 = @func_8034() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) */;
  %11 = @func_9706() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %12 = %9.0;
  %13 = %10.2;
  %14 = %11.1;
  (%12, %13, %14)
}

def @func_17343() -> (Tensor[(2, 14, 8), float64],) {
  %15 = @func_17056() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %16 = %15.0;
  (%16,)
}

def @func_3102() -> Tensor[(630), bool] {
  %17 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %17.3
}

def @func_2634() -> (Tensor[(2, 14, 8), float64],) {
  %18 = @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */;
  %19 = %18.3;
  (%19,)
}

def @func_16114() -> (Tensor[(2, 14, 8), bool], Tensor[(630), bool]) {
  %20 = @func_1935() /* ty=(Tensor[(630), bool],) */;
  %21 = @func_9366() /* ty=Tensor[(2, 14, 8), bool] */;
  %22 = %20.0;
  (%21, %22)
}

def @func_6681(%var_6679: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) {
  %23 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %24 = @func_2511() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */;
  %25 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %26 = cast(%var_6679, dtype="float32") /* ty=Tensor[(330), float32] */;
  %27 = reshape(%26, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), float32] */;
  %28 = @func_3929(%27) /* ty=(Tensor[(11, 15, 2), float32],) */;
  %29 = %23.1;
  %30 = %24.1;
  %31 = %25.1;
  %32 = %28.0;
  (%29, %30, %31, %32, %var_6679)
}

def @func_1729(%var_1702: Tensor[(15, 15, 2), bool]) -> (Tensor[(15, 15, 2), bool],) {
  %33 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %34 = cast(%var_1702, dtype="bool") /* ty=Tensor[(15, 15, 2), bool] */;
  %35 = logical_or(%33, %34) /* ty=Tensor[(15, 15, 2), bool] */;
  (%35,)
}

def @func_6407() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %36 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %37 = @func_3799() /* ty=Tensor[(2, 14, 8), float64] */;
  %38 = %36.1;
  (%37, %38)
}

def @func_6623() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %39 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %40 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %41 = %39.2;
  %42 = %40.0;
  (%41, %42)
}

def @func_7296() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) {
  %43 = @func_3138() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %44 = @func_1935() /* ty=(Tensor[(630), bool],) */;
  %45 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %46 = %43.0;
  %47 = %44.0;
  %48 = %45.0;
  %49 = @func_1871() /* ty=Tensor[(630), bool] */;
  (%46, %47, %48, %49)
}

def @func_8493() -> Tensor[(2, 14, 8), float64] {
  %50 = @func_8470() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %50.0
}

def @func_14740() -> (Tensor[(3, 14, 15), bool], Tensor[(13, 14, 10), bool], Tensor[(182), int64], Tensor[(1820), int64]) {
  %51 = @func_6751() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %52 = cast(meta[relay.Constant][0] /* ty=Tensor[(182), int64] */, dtype="int64") /* ty=Tensor[(182), int64] */;
  %53 = cast(meta[relay.Constant][1] /* ty=Tensor[(1820), int64] */, dtype="int64") /* ty=Tensor[(1820), int64] */;
  %54 = cast(meta[relay.Constant][1] /* ty=Tensor[(1820), int64] */, dtype="bool") /* ty=Tensor[(1820), bool] */;
  %55 = reshape(%52, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), int64] */;
  %56 = reshape(%53, newshape=[13, 14, 10]) /* ty=Tensor[(13, 14, 10), int64] */;
  %57 = reshape(%54, newshape=[13, 14, 10]) /* ty=Tensor[(13, 14, 10), bool] */;
  %58 = @func_10185(%55, %56, %57) /* ty=(Tensor[(13, 14, 10), bool],) */;
  %59 = %51.0;
  %60 = %58.0;
  (%59, %60, meta[relay.Constant][0] /* ty=Tensor[(182), int64] */, meta[relay.Constant][1] /* ty=Tensor[(1820), int64] */)
}

def @func_14795() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), int16]) {
  %61 = @func_6894() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %62 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %63 = %62.0;
  %64 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 14, 8), float64] */, dtype="int16") /* ty=Tensor[(2, 14, 8), int16] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="int16") /* ty=Tensor[(2, 14, 8), int16] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %68 = %61.0;
  %69 = bitwise_and(%66, %67) /* ty=Tensor[(2, 14, 8), int16] */;
  (%68, %69)
}

def @func_14907() -> Tensor[(630), bool] {
  @func_9383() /* ty=Tensor[(630), bool] */
}

def @func_3211() -> Tensor[(2, 14, 8), int16] {
  %70 = @func_2511() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */;
  %71 = %70.1;
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 14, 8), float64] */, dtype="int16") /* ty=Tensor[(2, 14, 8), int16] */;
  %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%71, dtype="int16") /* ty=Tensor[(2, 14, 8), int16] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  multiply(%74, %75) /* ty=Tensor[(2, 14, 8), int16] */
}

def @func_8677(%var_8633: Tensor[(1, 3, 14), float64]) -> (Tensor[(?, 3, 14), bool], Tensor[(2, 14, 8), float64]) {
  %76 = cast(%var_8633, dtype="float64") /* ty=Tensor[(1, 3, 14), float64] */;
  %77 = asinh(%76) /* ty=Tensor[(1, 3, 14), float64] */;
  %78 = cast(%77, dtype="bool") /* ty=Tensor[(1, 3, 14), bool] */;
  %79 = shape_of(%var_8633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%var_8633, dtype="bool") /* ty=Tensor[(1, 3, 14), bool] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %82 = @func_2634() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %83 = logical_and(%80, %81) /* ty=Tensor[(?, 3, 14), bool] */;
  %84 = %82.0;
  (%83, %84)
}

def @func_11170() -> (Tensor[(224), float64],) {
  %85 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %86 = %85.0;
  (%86,)
}

def @func_11103() -> Tensor[(2, 14, 8), float64] {
  @func_1632() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_10015(%var_10012: Tensor[(70), float64]) -> (Tensor[(630), bool], Tensor[(1, 14, 5), float32], Tensor[(70), float64]) {
  %87 = cast(%var_10012, dtype="float64") /* ty=Tensor[(70), float64] */;
  %88 = reshape(%87, newshape=[70]) /* ty=Tensor[(70), float64] */;
  %89 = @func_9691(%88) /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(1, 14, 5), float32], Tensor[(70), float64]) */;
  %90 = @func_6011() /* ty=Tensor[(630), bool] */;
  %91 = %89.2;
  (%90, %91, %var_10012)
}

def @func_17728() -> (Tensor[(2, 14, 8), float64],) {
  %92 = @func_3799() /* ty=Tensor[(2, 14, 8), float64] */;
  (%92,)
}

def @func_2126(%var_2075: Tensor[(2, 14, 8), float64]) -> (Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(128, 2), float32], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint8], Tensor[(2, 14, 8), float64]) {
  %93 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %94 = cast(meta[relay.Constant][4] /* ty=Tensor[(128, 2), float32] */, dtype="float32") /* ty=Tensor[(128, 2), float32] */;
  %95 = reshape(%94, newshape=[1, 16, 16]) /* ty=Tensor[(1, 16, 16), float32] */;
  %96 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %97 = %96.5;
  %98 = cast(%97, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %99 = erf(%98) /* ty=Tensor[(2, 14, 8), float64] */;
  %100 = cast(%97, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %101 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%99, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %104 = cast(%99, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %105 = cast(%var_2075, dtype="float32") /* ty=Tensor[(2, 14, 8), float32] */;
  %106 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%99, dtype="float32") /* ty=Tensor[(2, 14, 8), float32] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %109 = divide(%107, %108) /* ty=Tensor[(2, 14, 8), float32] */;
  %110 = cast(%109, dtype="uint8") /* ty=Tensor[(2, 14, 8), uint8] */;
  %111 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%97, dtype="uint8") /* ty=Tensor[(2, 14, 8), uint8] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %114 = cast(%97, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %115 = %93.0;
  %116 = @func_1558(%95) /* ty=Tensor[(1, 16, 16), float64] */;
  %117 = logical_or(%102, %103) /* ty=Tensor[(2, 14, 8), bool] */;
  %118 = log2(%104) /* ty=Tensor[(2, 14, 8), float64] */;
  %119 = logical_xor(%112, %113) /* ty=Tensor[(2, 14, 8), uint8] */;
  %120 = cosh(%114) /* ty=Tensor[(2, 14, 8), float64] */;
  (%115, %116, meta[relay.Constant][4] /* ty=Tensor[(128, 2), float32] */, %117, %118, %119, %120)
}

def @func_15723() -> (Tensor[(630), bool], Tensor[(3, 14, 15), bool]) {
  %121 = @func_7213() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float32]) */;
  %122 = @func_9383() /* ty=Tensor[(630), bool] */;
  %123 = %121.2;
  (%122, %123)
}

def @func_3222() -> (Tensor[(2, 14, 8), float64],) {
  %124 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %125 = %124.0;
  (%125,)
}

def @func_6998() -> (Tensor[(630), bool],) {
  %126 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %127 = %126.0;
  (%127,)
}

def @func_15123() -> (Tensor[(224), float64],) {
  %128 = @func_12996() /* ty=Tensor[(224), float64] */;
  (%128,)
}

def @func_7763(%var_7700: uint16, %var_7701: Tensor[(7, 11, 1), uint16], %var_7730: Tensor[(735), float32]) -> (Tensor[(7, 11, 1), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(7, 7, 15), float32], Tensor[(735), float32], Tensor[(7, 11, 1), uint8], Tensor[(630), bool]) {
  %129 = cast(%var_7700, dtype="bool") /* ty=bool */;
  %130 = cast(%var_7701, dtype="bool") /* ty=Tensor[(7, 11, 1), bool] */;
  %131 = @func_6998() /* ty=(Tensor[(630), bool],) */;
  %132 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %133 = cast(%var_7730, dtype="float32") /* ty=Tensor[(735), float32] */;
  %134 = reshape(%133, newshape=[7, 7, 15]) /* ty=Tensor[(7, 7, 15), float32] */;
  %135 = @func_2863(%134) /* ty=(Tensor[(7, 7, 15), float32], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64], Tensor[(630), bool]) */;
  %136 = cast(%var_7701, dtype="uint8") /* ty=Tensor[(7, 11, 1), uint8] */;
  %137 = cast(%var_7700, dtype="uint8") /* ty=uint8 */;
  %138 = @func_6998() /* ty=(Tensor[(630), bool],) */;
  %139 = less(%129, %130) /* ty=Tensor[(7, 11, 1), bool] */;
  %140 = %131.0;
  %141 = @func_1871() /* ty=Tensor[(630), bool] */;
  %142 = %132.0;
  %143 = %135.0;
  %144 = right_shift(%136, %137) /* ty=Tensor[(7, 11, 1), uint8] */;
  %145 = %138.0;
  (%139, %140, %141, %142, %143, %var_7730, %144, %145)
}

def @func_17080() -> Tensor[(2, 14, 8), bool] {
  %146 = @func_7559() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), bool]) */;
  %146.1
}

def @func_16693() -> (Tensor[(13, 4, 9), float64], Tensor[(2, 14, 8), float32]) {
  %147 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 4, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 4, 9), float64] */;
  %148 = sin(%147) /* ty=Tensor[(13, 4, 9), float64] */;
  %149 = @func_14020() /* ty=Tensor[(2, 14, 8), float32] */;
  (%148, %149)
}

def @func_4137() -> (Tensor[(224), float64],) {
  %150 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %151 = %150.0;
  (%151,)
}

def @func_12551() -> (Tensor[(2, 14, 8), float64],) {
  %152 = @func_2770() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */;
  %153 = %152.3;
  (%153,)
}

def @func_13401(%var_13398: Tensor[(66), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(330), float32], Tensor[(330), float32], Tensor[(630), bool], Tensor[(66), float32]) {
  %154 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %155 = cast(meta[relay.Constant][6] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %156 = reshape(%155, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %157 = @func_11146(%156) /* ty=(Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %158 = cast(%var_13398, dtype="float32") /* ty=Tensor[(66), float32] */;
  %159 = reshape(%158, newshape=[3, 2, 11]) /* ty=Tensor[(3, 2, 11), float32] */;
  %160 = @func_6438(%159) /* ty=(Tensor[(3, 2, 11), float32], Tensor[(630), bool]) */;
  %161 = %154.1;
  %162 = %157.2;
  %163 = %160.1;
  (%161, %162, meta[relay.Constant][6] /* ty=Tensor[(330), float32] */, %163, %var_13398)
}

def @func_10895() -> (Tensor[(224), float64],) {
  %164 = @func_9562() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %165 = %164.1;
  (%165,)
}

def @func_5693(%var_5557: int64, %var_5558: Tensor[(5, 4, 14), int64], %var_5576: Tensor[(100), float32], %var_5577: Tensor[(256), float32], %var_5652: Tensor[(40), float32]) -> (Tensor[(5, 4, 14), int64], Tensor[(5, 4, 5), float32], Tensor[(100), float32], Tensor[(256), float32], Tensor[(630), bool], Tensor[(8, 5, 1), float32], Tensor[(40), float32], Tensor[(630), bool], Tensor[(224), float64], Tensor[(5, 4, 14), int8], Tensor[(2, 14, 8), float64], Tensor[(5, 4, 14), float64]) {
  %166 = cast(%var_5557, dtype="int64") /* ty=int64 */;
  %167 = cast(%var_5558, dtype="int64") /* ty=Tensor[(5, 4, 14), int64] */;
  %168 = cast(%var_5576, dtype="float32") /* ty=Tensor[(100), float32] */;
  %169 = cast(%var_5577, dtype="float32") /* ty=Tensor[(256), float32] */;
  %170 = reshape(%168, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), float32] */;
  %171 = reshape(%169, newshape=[2, 128]) /* ty=Tensor[(2, 128), float32] */;
  %172 = @func_4362(%170, %171) /* ty=(Tensor[(5, 4, 5), float32], Tensor[(630), bool], Tensor[(2, 128), float32]) */;
  %173 = @func_1474() /* ty=(Tensor[(630), bool],) */;
  %174 = cast(%var_5652, dtype="float32") /* ty=Tensor[(40), float32] */;
  %175 = reshape(%174, newshape=[20, 2]) /* ty=Tensor[(20, 2), float32] */;
  %176 = @func_5087(%175) /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), int16], Tensor[(8, 5, 1), float32], Tensor[(20, 2), float32]) */;
  %177 = cast(%var_5577, dtype="float32") /* ty=Tensor[(256), float32] */;
  %178 = reshape(%177, newshape=[1, 256]) /* ty=Tensor[(1, 256), float32] */;
  %179 = @func_1962(%178) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */;
  %180 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %181 = cast(%var_5558, dtype="float32") /* ty=Tensor[(5, 4, 14), float32] */;
  %182 = asin(%181) /* ty=Tensor[(5, 4, 14), float32] */;
  %183 = cast(%182, dtype="int8") /* ty=Tensor[(5, 4, 14), int8] */;
  %184 = cast(%var_5557, dtype="int8") /* ty=int8 */;
  %185 = @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */;
  %186 = cast(%var_5558, dtype="float32") /* ty=Tensor[(5, 4, 14), float32] */;
  %187 = shape_of(%182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%182, dtype="float32") /* ty=Tensor[(5, 4, 14), float32] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %190 = mod(%188, %189) /* ty=Tensor[(5, 4, 14), float32] */;
  %191 = cast(%190, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
  %192 = subtract(%166, %167) /* ty=Tensor[(5, 4, 14), int64] */;
  %193 = %172.0;
  %194 = %173.0;
  %195 = %176.2;
  %196 = %179.0;
  %197 = %180.0;
  %198 = add(%183, %184) /* ty=Tensor[(5, 4, 14), int8] */;
  %199 = %185.3;
  %200 = asinh(%191) /* ty=Tensor[(5, 4, 14), float64] */;
  (%192, %193, %var_5576, %var_5577, %194, %195, %var_5652, %196, %197, %198, %199, %200)
}

def @func_14513() -> Tensor[(2, 14, 8), bool] {
  %201 = @func_14311() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) */;
  %202 = %201.0;
  %203 = @func_9601() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %204 = %203.0;
  %205 = cast(%204, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %206 = shape_of(%202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%202, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%207, %208) /* ty=Tensor[(2, 14, 8), bool] */
}

def @func_8725() -> (Tensor[(6, 1, 6), float64], Tensor[(2, 14, 8), float64]) {
  %209 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 1, 6), float64] */, dtype="float64") /* ty=Tensor[(6, 1, 6), float64] */;
  %210 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %211 = cos(%209) /* ty=Tensor[(6, 1, 6), float64] */;
  %212 = %210.0;
  (%211, %212)
}

def @func_5469() -> Tensor[(630), bool] {
  @func_1366() /* ty=Tensor[(630), bool] */
}

def @func_17522() -> Tensor[(630), bool] {
  %213 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %213.0
}

def @func_1366() -> Tensor[(630), bool] {
  %214 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %214.0
}

def @main(%var_17735: Tensor[(5, 6, 10), float32]) -> (Tensor[(5, 6, 10), float32],) {
  %215 = cast(%var_17735, dtype="float32") /* ty=Tensor[(5, 6, 10), float32] */;
  %216 = acos(%215) /* ty=Tensor[(5, 6, 10), float32] */;
  (%216,)
}

def @func_9706() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64]) {
  %217 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %218 = @func_4947() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %219 = %217.0;
  %220 = %218.0;
  (%219, %220)
}

def @func_7916() -> Tensor[(2, 14, 8), float64] {
  %221 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %221.0
}

def @func_12950() -> Tensor[(630), bool] {
  %222 = @func_6920() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %222.1
}

def @func_11480() -> (Tensor[(630), bool],) {
  %223 = @func_1871() /* ty=Tensor[(630), bool] */;
  (%223,)
}

def @func_2403() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %224 = @func_1474() /* ty=(Tensor[(630), bool],) */;
  %225 = %224.0;
  %226 = @func_1366() /* ty=Tensor[(630), bool] */;
  (%225, %226)
}

def @func_3559() -> (Tensor[(3, 14, 15), bool],) {
  %227 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %228 = %227.1;
  (%228,)
}

def @func_13219() -> Tensor[(224), float64] {
  %229 = @func_10895() /* ty=(Tensor[(224), float64],) */;
  %229.0
}

def @func_1935() -> (Tensor[(630), bool],) {
  %230 = @func_1871() /* ty=Tensor[(630), bool] */;
  (%230,)
}

def @func_11854() -> (Tensor[(2, 14, 8), float64],) {
  %231 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
  (%231,)
}

def @func_13482(%var_13431: Tensor[(2240), float64]) -> (Tensor[(630), bool], Tensor[(2240), float64], Tensor[(3, 14, 15), bool], Tensor[(224, ?), uint32]) {
  %232 = @func_6751() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %233 = cast(%var_13431, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %234 = reshape(%233, newshape=[224, 10]) /* ty=Tensor[(224, 10), float64] */;
  %235 = @func_8962(%234) /* ty=(Tensor[(2, 6, 14), int64], Tensor[(735), float32], Tensor[(224, 10), bool], Tensor[(224, 1), float32]) */;
  %236 = %235.3;
  %237 = @func_3839() /* ty=Tensor[(224), float64] */;
  %238 = cast(%237, dtype="uint32") /* ty=Tensor[(224), uint32] */;
  %239 = shape_of(%236, dtype="int32") /* ty=Tensor[(2), int32] */;
  %240 = cast(%236, dtype="uint32") /* ty=Tensor[(224, 1), uint32] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %242 = @func_8221() /* ty=Tensor[(630), bool] */;
  %243 = %232.0;
  %244 = right_shift(%240, %241) /* ty=Tensor[(224, ?), uint32] */;
  (%242, %var_13431, %243, %244)
}

def @func_15488() -> Tensor[(2, 14, 8), float64] {
  %245 = @func_2634() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %245.0
}

def @func_10328(%var_10284: Tensor[(256), float32], %var_10287: int64, %var_10288: Tensor[(40), float32]) -> (Tensor[(256), float32], Tensor[(280), int64], int64, Tensor[(40), float32], Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool]) {
  %246 = cast(%var_10287, dtype="int64") /* ty=int64 */;
  %247 = cast(%var_10288, dtype="float32") /* ty=Tensor[(40), float32] */;
  %248 = reshape(%246, newshape=[]) /* ty=int64 */;
  %249 = reshape(%247, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %250 = @func_9884(%248, %249) /* ty=(Tensor[(224), float64], Tensor[(256), float32], Tensor[(280), int64], Tensor[(50, 2), float32], Tensor[(256), float32], Tensor[(224), float64], Tensor[(40), uint64], Tensor[(1, 256), float32], Tensor[(630), bool]) */;
  %251 = @func_8565() /* ty=(Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64]) */;
  %252 = @func_5030() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %253 = %252.1;
  %254 = cast(%253, dtype="bool") /* ty=Tensor[(630), bool] */;
  %255 = cast(%var_10284, dtype="float32") /* ty=Tensor[(256), float32] */;
  %256 = cast(%253, dtype="bool") /* ty=Tensor[(630), bool] */;
  %257 = reshape(%254, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
  %258 = reshape(%255, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %259 = reshape(%256, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
  %260 = @func_6874(%257, %258, %259) /* ty=(Tensor[(3, 14, 15), float32], Tensor[(1, 256), float32], Tensor[(256), float32], Tensor[(3, 14, 15), bool], Tensor[(3, 14, 15), int32], Tensor[(630), bool]) */;
  %261 = %260.4;
  %262 = cast(%253, dtype="bool") /* ty=Tensor[(630), bool] */;
  %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%261, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %266 = %250.2;
  %267 = %251.2;
  %268 = logical_or(%264, %265) /* ty=Tensor[(3, 14, 15), bool] */;
  %269 = @func_4408() /* ty=Tensor[(630), bool] */;
  %270 = @func_5257() /* ty=Tensor[(3, 14, 15), bool] */;
  (%var_10284, %266, %var_10287, %var_10288, %267, %268, %269, %270)
}

def @func_12401() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %271 = @func_6944() /* ty=(Tensor[(630), bool],) */;
  %272 = @func_11445() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), uint64], Tensor[(224), float64]) */;
  %273 = %271.0;
  %274 = %272.1;
  (%273, %274)
}

def @func_15796() -> (Tensor[(3, 14, 15), float32], Tensor[(2, 14, 8), float64]) {
  %275 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %276 = @func_14376() /* ty=Tensor[(3, 14, 15), float32] */;
  %277 = %275.0;
  (%276, %277)
}

def @func_4016() -> Tensor[(224, 630), float32] {
  %278 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
  %279 = %278.2;
  %280 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %281 = %280.1;
  %282 = cast(%279, dtype="float32") /* ty=Tensor[(224, 1), float32] */;
  %283 = cast(%281, dtype="float32") /* ty=Tensor[(630), float32] */;
  power(%282, %283) /* ty=Tensor[(224, 630), float32] */
}

def @func_6011() -> Tensor[(630), bool] {
  %284 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %284.2
}

def @func_7524(%var_7506: Tensor[(2, 14, 8), float64], %var_7518: Tensor[(2, 14, 8), float64]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), int8]) {
  %285 = @func_4442() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %286 = @func_4442() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %287 = %286.2;
  %288 = cast(%var_7506, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%287, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %292 = cast(%var_7518, dtype="int8") /* ty=Tensor[(2, 14, 8), int8] */;
  %293 = shape_of(%var_7506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%var_7506, dtype="int8") /* ty=Tensor[(2, 14, 8), int8] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %296 = %285.1;
  %297 = equal(%290, %291) /* ty=Tensor[(2, 14, 8), bool] */;
  %298 = bitwise_or(%294, %295) /* ty=Tensor[(2, 14, 8), int8] */;
  (%296, %297, %298)
}

def @func_11471() -> Tensor[(630), bool] {
  %299 = @func_9998() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(330), float32], Tensor[(630), bool]) */;
  %299.1
}

def @func_7126() -> Tensor[(630), bool] {
  @func_1871() /* ty=Tensor[(630), bool] */
}

def @func_12309() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) {
  %300 = @func_6407() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %301 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %302 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %303 = %300.0;
  %304 = %301.1;
  %305 = %302.1;
  (%303, %304, %305)
}

def @func_14020() -> Tensor[(2, 14, 8), float32] {
  %306 = @func_2306() /* ty=(Tensor[(2, 14, 8), float32],) */;
  %306.0
}

def @func_10778() -> Tensor[(2, 14, 8), float64] {
  @func_7146() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_2770() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) {
  %307 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %308 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %309 = %308.1;
  %310 = cast(%309, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %311 = exp(%310) /* ty=Tensor[(2, 14, 8), float64] */;
  %312 = cast(%311, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %313 = @func_2511() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */;
  %314 = %313.2;
  %315 = cast(%314, dtype="float64") /* ty=Tensor[(224), float64] */;
  %316 = reshape(%315, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %317 = @func_230(%316) /* ty=(Tensor[(2, 14, 8), float64],) */;
  %318 = @func_2511() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */;
  %319 = cast(%309, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %320 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%311, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %323 = %307.0;
  %324 = tan(%312) /* ty=Tensor[(2, 14, 8), float64] */;
  %325 = %317.0;
  %326 = %318.4;
  %327 = less_equal(%321, %322) /* ty=Tensor[(2, 14, 8), bool] */;
  (%323, %324, %314, %325, %326, %327)
}

def @func_9884(%var_9842: int64, %var_9846: Tensor[(40), float32]) -> (Tensor[(224), float64], Tensor[(256), float32], Tensor[(280), int64], Tensor[(50, 2), float32], Tensor[(256), float32], Tensor[(224), float64], Tensor[(40), uint64], Tensor[(1, 256), float32], Tensor[(630), bool]) {
  %328 = @func_4258() /* ty=(Tensor[(224, 1), float64], Tensor[(224), float64], Tensor[(10, 45), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %329 = cast(%var_9842, dtype="int64") /* ty=int64 */;
  %330 = cast(meta[relay.Constant][8] /* ty=Tensor[(280), int64] */, dtype="int64") /* ty=Tensor[(280), int64] */;
  %331 = cast(meta[relay.Constant][9] /* ty=Tensor[(50, 2), float32] */, dtype="float32") /* ty=Tensor[(50, 2), float32] */;
  %332 = cast(meta[relay.Constant][10] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %333 = cast(%var_9846, dtype="float32") /* ty=Tensor[(40), float32] */;
  %334 = reshape(%329, newshape=[]) /* ty=int64 */;
  %335 = reshape(%330, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int64] */;
  %336 = reshape(%331, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %337 = reshape(%332, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %338 = reshape(%333, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %339 = @func_5693(%334, %335, %336, %337, %338) /* ty=(Tensor[(5, 4, 14), int64], Tensor[(5, 4, 5), float32], Tensor[(100), float32], Tensor[(256), float32], Tensor[(630), bool], Tensor[(8, 5, 1), float32], Tensor[(40), float32], Tensor[(630), bool], Tensor[(224), float64], Tensor[(5, 4, 14), int8], Tensor[(2, 14, 8), float64], Tensor[(5, 4, 14), float64]) */;
  %340 = %328.1;
  %341 = cast(%340, dtype="float64") /* ty=Tensor[(224), float64] */;
  %342 = reshape(%341, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %343 = @func_2586(%342) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %344 = cast(%var_9846, dtype="uint64") /* ty=Tensor[(40), uint64] */;
  %345 = cast(%var_9842, dtype="uint64") /* ty=uint64 */;
  %346 = cast(meta[relay.Constant][11] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %347 = %339.3;
  %348 = cast(%347, dtype="float32") /* ty=Tensor[(256), float32] */;
  %349 = cast(meta[relay.Constant][11] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %350 = reshape(%346, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
  %351 = reshape(%348, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %352 = reshape(%349, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
  %353 = @func_6874(%350, %351, %352) /* ty=(Tensor[(3, 14, 15), float32], Tensor[(1, 256), float32], Tensor[(256), float32], Tensor[(3, 14, 15), bool], Tensor[(3, 14, 15), int32], Tensor[(630), bool]) */;
  %354 = %343.3;
  %355 = bitwise_or(%344, %345) /* ty=Tensor[(40), uint64] */;
  %356 = %353.1;
  (%340, %347, meta[relay.Constant][8] /* ty=Tensor[(280), int64] */, meta[relay.Constant][9] /* ty=Tensor[(50, 2), float32] */, meta[relay.Constant][10] /* ty=Tensor[(256), float32] */, %354, %355, %356, meta[relay.Constant][11] /* ty=Tensor[(630), bool] */)
}

def @func_10625(%var_10622: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) {
  %357 = @func_7213() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float32]) */;
  %358 = cast(%var_10622, dtype="float32") /* ty=Tensor[(330), float32] */;
  %359 = reshape(%358, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), float32] */;
  %360 = @func_3929(%359) /* ty=(Tensor[(11, 15, 2), float32],) */;
  %361 = %357.1;
  %362 = %360.0;
  (%361, %362, %var_10622)
}

def @func_17668(%var_17659: Tensor[(10, 11, 14), float32]) -> (Tensor[(10, 11, 14), float32],) {
  %363 = cast(%var_17659, dtype="float32") /* ty=Tensor[(10, 11, 14), float32] */;
  %364 = atanh(%363) /* ty=Tensor[(10, 11, 14), float32] */;
  (%364,)
}

def @func_11626() -> (Tensor[(224), float64], Tensor[(630), bool]) {
  %365 = @func_8742() /* ty=(Tensor[(630), bool], Tensor[(224), float64]) */;
  %366 = @func_3839() /* ty=Tensor[(224), float64] */;
  %367 = %365.0;
  (%366, %367)
}

def @func_14376() -> Tensor[(3, 14, 15), float32] {
  %368 = @func_6751() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %369 = %368.0;
  %370 = cast(%369, dtype="float32") /* ty=Tensor[(3, 14, 15), float32] */;
  cos(%370) /* ty=Tensor[(3, 14, 15), float32] */
}

def @func_15634(%var_15622: Tensor[(256), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), int32], Tensor[(630), bool], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) {
  %371 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %372 = cast(meta[relay.Constant][12] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %373 = cast(%var_15622, dtype="float32") /* ty=Tensor[(256), float32] */;
  %374 = cast(meta[relay.Constant][12] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %375 = reshape(%372, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
  %376 = reshape(%373, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %377 = reshape(%374, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
  %378 = @func_6874(%375, %376, %377) /* ty=(Tensor[(3, 14, 15), float32], Tensor[(1, 256), float32], Tensor[(256), float32], Tensor[(3, 14, 15), bool], Tensor[(3, 14, 15), int32], Tensor[(630), bool]) */;
  %379 = %371.1;
  %380 = %378.4;
  %381 = @func_8493() /* ty=Tensor[(2, 14, 8), float64] */;
  (%379, %380, meta[relay.Constant][12] /* ty=Tensor[(630), bool] */, %var_15622, %381)
}

def @func_3138() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %382 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %383 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %384 = %382.1;
  %385 = %383.2;
  (%384, %385)
}

def @func_1474() -> (Tensor[(630), bool],) {
  %386 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %387 = %386.0;
  (%387,)
}

def @func_2260() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  %388 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %389 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %391 = %388.0;
  %392 = rsqrt(%390) /* ty=Tensor[(2, 14, 8), float64] */;
  (%391, %392)
}

def @func_7108(%var_7037: Tensor[(256), float32], %var_7073: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(100), float32], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(330), float32], Tensor[(2, 128), int8]) {
  %393 = @func_1935() /* ty=(Tensor[(630), bool],) */;
  %394 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %395 = @func_4442() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %396 = cast(%var_7073, dtype="float32") /* ty=Tensor[(330), float32] */;
  %397 = reshape(%396, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %398 = @func_6681(%397) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %399 = cast(meta[relay.Constant][13] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %400 = cast(%var_7037, dtype="float32") /* ty=Tensor[(256), float32] */;
  %401 = reshape(%399, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), float32] */;
  %402 = reshape(%400, newshape=[2, 128]) /* ty=Tensor[(2, 128), float32] */;
  %403 = @func_4362(%401, %402) /* ty=(Tensor[(5, 4, 5), float32], Tensor[(630), bool], Tensor[(2, 128), float32]) */;
  %404 = %403.2;
  %405 = cast(%var_7037, dtype="bool") /* ty=Tensor[(256), bool] */;
  %406 = shape_of(%404, dtype="int32") /* ty=Tensor[(2), int32] */;
  %407 = cast(%404, dtype="bool") /* ty=Tensor[(2, 128), bool] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %409 = logical_and(%407, %408) /* ty=Tensor[(2, 128), bool] */;
  %410 = cast(%404, dtype="int8") /* ty=Tensor[(2, 128), int8] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(2), int32] */;
  %412 = cast(%409, dtype="int8") /* ty=Tensor[(2, 128), int8] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %414 = %393.0;
  %415 = @func_6011() /* ty=Tensor[(630), bool] */;
  %416 = %394.0;
  %417 = %395.2;
  %418 = %398.2;
  %419 = add(%412, %413) /* ty=Tensor[(2, 128), int8] */;
  (%414, %415, meta[relay.Constant][13] /* ty=Tensor[(100), float32] */, %416, %417, %418, %var_7073, %419)
}

def @func_13097() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) {
  %420 = cast(meta[relay.Constant][14] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %421 = reshape(%420, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %422 = @func_2586(%421) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %423 = @func_12309() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %424 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %425 = @func_12726() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %426 = @func_5469() /* ty=Tensor[(630), bool] */;
  %427 = %422.2;
  %428 = %423.0;
  %429 = %424.0;
  %430 = %425.1;
  (%426, %427, meta[relay.Constant][14] /* ty=Tensor[(224), float64] */, %428, %429, %430)
}

def @func_12650() -> (Tensor[(224), float64],) {
  %431 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %432 = %431.0;
  (%432,)
}

def @func_8470() -> (Tensor[(2, 14, 8), float64],) {
  %433 = @func_7146() /* ty=Tensor[(2, 14, 8), float64] */;
  (%433,)
}

def @func_10185(%var_10149: Tensor[(13, 14, 1), int64], %var_10150: Tensor[(13, 14, 10), int64], %var_10170: Tensor[(13, 14, 10), bool]) -> (Tensor[(13, 14, 10), bool],) {
  %434 = cast(%var_10149, dtype="bool") /* ty=Tensor[(13, 14, 1), bool] */;
  %435 = cast(%var_10150, dtype="bool") /* ty=Tensor[(13, 14, 10), bool] */;
  %436 = greater(%434, %435) /* ty=Tensor[(13, 14, 10), bool] */;
  %437 = cast(%var_10170, dtype="bool") /* ty=Tensor[(13, 14, 10), bool] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%436, dtype="bool") /* ty=Tensor[(13, 14, 10), bool] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %441 = equal(%439, %440) /* ty=Tensor[(13, 14, 10), bool] */;
  (%441,)
}

def @func_2306() -> (Tensor[(2, 14, 8), float32],) {
  %442 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %443 = %442.1;
  %444 = cast(%443, dtype="float32") /* ty=Tensor[(2, 14, 8), float32] */;
  %445 = sigmoid(%444) /* ty=Tensor[(2, 14, 8), float32] */;
  (%445,)
}

def @func_8962(%var_8943: Tensor[(224, 10), float64]) -> (Tensor[(2, 6, 14), int64], Tensor[(735), float32], Tensor[(224, 10), bool], Tensor[(224, 1), float32]) {
  %446 = @func_5837() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */;
  %447 = cast(meta[relay.Constant][15] /* ty=Tensor[(735), float32] */, dtype="float32") /* ty=Tensor[(735), float32] */;
  %448 = reshape(%447, newshape=[7, 7, 15]) /* ty=Tensor[(7, 7, 15), float32] */;
  %449 = @func_2863(%448) /* ty=(Tensor[(7, 7, 15), float32], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64], Tensor[(630), bool]) */;
  %450 = %449.2;
  %451 = cast(%450, dtype="bool") /* ty=Tensor[(224, 1), bool] */;
  %452 = cast(%var_8943, dtype="bool") /* ty=Tensor[(224, 10), bool] */;
  %453 = cast(%450, dtype="float32") /* ty=Tensor[(224, 1), float32] */;
  %454 = %446.0;
  %455 = greater(%451, %452) /* ty=Tensor[(224, 10), bool] */;
  %456 = log(%453) /* ty=Tensor[(224, 1), float32] */;
  (%454, meta[relay.Constant][15] /* ty=Tensor[(735), float32] */, %455, %456)
}

def @func_14431() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %457 = @func_12910() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %458 = @func_6894() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %459 = %457.0;
  %460 = %458.0;
  (%459, %460)
}

def @func_16977() -> (Tensor[(224), float64], Tensor[(2, 14, 8), float64]) {
  %461 = @func_9706() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %462 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %463 = %461.1;
  %464 = %462.0;
  (%463, %464)
}

def @func_11584(%var_11569: Tensor[(11, 6), float32]) -> (Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 6), float32], Tensor[(2, 14, 8), float64]) {
  %465 = @func_8410() /* ty=(Tensor[(630), bool], Tensor[(224), float64]) */;
  %466 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %467 = @func_3875() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) */;
  %468 = cast(%var_11569, dtype="float32") /* ty=Tensor[(11, 6), float32] */;
  %469 = reshape(%468, newshape=[3, 2, 11]) /* ty=Tensor[(3, 2, 11), float32] */;
  %470 = @func_6438(%469) /* ty=(Tensor[(3, 2, 11), float32], Tensor[(630), bool]) */;
  %471 = @func_9601() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %472 = %465.1;
  %473 = %466.1;
  %474 = %467.2;
  %475 = %470.1;
  %476 = %471.0;
  (%472, %473, %474, %475, %var_11569, %476)
}

def @func_7559() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), bool]) {
  %477 = @func_4107() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %478 = %477.0;
  %479 = cast(%478, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %480 = cast(%478, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %481 = reshape(%479, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %482 = reshape(%480, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %483 = @func_7524(%481, %482) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), int8]) */;
  %484 = %483.1;
  (%478, %484)
}

def @func_15263() -> (Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64]) {
  %485 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %486 = cast(meta[relay.Constant][16] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %487 = cast(meta[relay.Constant][16] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %488 = reshape(%486, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %489 = reshape(%487, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %490 = @func_7524(%488, %489) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), int8]) */;
  %491 = @func_13928() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %492 = %485.0;
  %493 = %490.1;
  %494 = %491.0;
  (%492, %493, meta[relay.Constant][16] /* ty=Tensor[(224), float64] */, %494)
}

def @func_9147() -> (Tensor[(2, 14, 8), float64],) {
  %495 = @func_8493() /* ty=Tensor[(2, 14, 8), float64] */;
  (%495,)
}

def @func_9601() -> (Tensor[(2, 14, 8), float64],) {
  %496 = @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %497 = %496.0;
  (%497,)
}

def @func_12996() -> Tensor[(224), float64] {
  %498 = @func_9706() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %498.1
}

def @func_1458(%var_1434: Tensor[(4, 56), float64]) -> (Tensor[(4, 56), uint64], Tensor[(630), bool], Tensor[(4, 56), float32]) {
  %499 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %500 = %499.6;
  %501 = cast(%var_1434, dtype="uint64") /* ty=Tensor[(4, 56), uint64] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(2), int32] */;
  %503 = cast(%500, dtype="uint64") /* ty=Tensor[(4, 56), uint64] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %505 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %506 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 56), float64] */, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %507 = shape_of(%var_1434, dtype="int32") /* ty=Tensor[(2), int32] */;
  %508 = cast(%var_1434, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %510 = minimum(%503, %504) /* ty=Tensor[(4, 56), uint64] */;
  %511 = %505.0;
  %512 = floor_mod(%508, %509) /* ty=Tensor[(4, 56), float32] */;
  (%510, %511, %512)
}

def @func_12910() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %513 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %514 = @func_4408() /* ty=Tensor[(630), bool] */;
  %515 = %513.1;
  (%514, %515)
}

def @func_6944() -> (Tensor[(630), bool],) {
  %516 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %517 = %516.0;
  (%517,)
}

def @func_1529(%var_1527: Tensor[(4, 56), float64]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) {
  %518 = @func_1474() /* ty=(Tensor[(630), bool],) */;
  %519 = %518.0;
  %520 = cast(%519, dtype="bool") /* ty=Tensor[(630), bool] */;
  %521 = cast(%var_1527, dtype="float64") /* ty=Tensor[(4, 56), float64] */;
  %522 = reshape(%520, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
  %523 = reshape(%521, newshape=[4, 56]) /* ty=Tensor[(4, 56), float64] */;
  %524 = @func_1007(%522, %523) /* ty=(Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %525 = %524.1;
  (%519, %525, %var_1527)
}

def @func_16552() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  %526 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %527 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %528 = @func_12204() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %529 = %526.0;
  %530 = @func_15866() /* ty=Tensor[(630), bool] */;
  %531 = %527.0;
  %532 = @func_10778() /* ty=Tensor[(2, 14, 8), float64] */;
  %533 = %528.1;
  (%529, %530, %531, %532, %533)
}

def @func_7636() -> Tensor[(630), bool] {
  @func_1271() /* ty=Tensor[(630), bool] */
}

def @func_1962(%var_1955: Tensor[(1, 256), float32]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) {
  %534 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %535 = @func_1474() /* ty=(Tensor[(630), bool],) */;
  %536 = cast(%var_1955, dtype="float32") /* ty=Tensor[(1, 256), float32] */;
  %537 = reshape(%536, newshape=[1, 16, 16]) /* ty=Tensor[(1, 16, 16), float32] */;
  %538 = @func_1271() /* ty=Tensor[(630), bool] */;
  %539 = %534.2;
  %540 = %535.0;
  %541 = @func_1558(%537) /* ty=Tensor[(1, 16, 16), float64] */;
  (%538, %539, %540, %541, %var_1955)
}

def @func_230(%var_220: Tensor[(2, 14, 8), float64]) -> (Tensor[(2, 14, 8), float64],) {
  %542 = cast(%var_220, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %543 = asin(%542) /* ty=Tensor[(2, 14, 8), float64] */;
  (%543,)
}

def @func_2811() -> (Tensor[(10, 45), bool],) {
  %544 = @func_2770() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */;
  %545 = %544.4;
  (%545,)
}

def @func_16190() -> (Tensor[(224), float64],) {
  %546 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %547 = %546.1;
  (%547,)
}

def @func_6438(%var_6419: Tensor[(3, 2, 11), float32]) -> (Tensor[(3, 2, 11), float32], Tensor[(630), bool]) {
  %548 = cast(%var_6419, dtype="float32") /* ty=Tensor[(3, 2, 11), float32] */;
  %549 = @func_4511() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %550 = sigmoid(%548) /* ty=Tensor[(3, 2, 11), float32] */;
  %551 = %549.1;
  (%550, %551)
}

def @func_17649() -> (Tensor[(630), bool], Tensor[(224, 630), bool]) {
  %552 = @func_9383() /* ty=Tensor[(630), bool] */;
  %553 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
  %554 = %553.2;
  %555 = cast(%552, dtype="bool") /* ty=Tensor[(630), bool] */;
  %556 = cast(%554, dtype="bool") /* ty=Tensor[(224, 1), bool] */;
  %557 = @func_13633() /* ty=Tensor[(630), bool] */;
  %558 = not_equal(%555, %556) /* ty=Tensor[(224, 630), bool] */;
  (%557, %558)
}

def @func_6258() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), float64]) {
  %559 = @func_2811() /* ty=(Tensor[(10, 45), bool],) */;
  %560 = %559.0;
  %561 = cast(%560, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %562 = @func_3799() /* ty=Tensor[(2, 14, 8), float64] */;
  %563 = @func_2451() /* ty=Tensor[(630), bool] */;
  %564 = exp(%561) /* ty=Tensor[(10, 45), float64] */;
  (%562, %563, %564)
}

def @func_8522(%var_8498: Tensor[(1, 14, 5), float64]) -> (Tensor[(1, 14, 5), float32],) {
  %565 = cast(%var_8498, dtype="float64") /* ty=Tensor[(1, 14, 5), float64] */;
  %566 = atan(%565) /* ty=Tensor[(1, 14, 5), float64] */;
  %567 = cast(%566, dtype="float32") /* ty=Tensor[(1, 14, 5), float32] */;
  %568 = erf(%567) /* ty=Tensor[(1, 14, 5), float32] */;
  (%568,)
}

def @func_10912() -> (Tensor[(10, 45), float64],) {
  %569 = @func_6258() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), float64]) */;
  %570 = %569.2;
  (%570,)
}

def @func_12204() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %571 = @func_11626() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %572 = @func_3402() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %573 = %571.1;
  %574 = %572.0;
  (%573, %574)
}

def @func_11070() -> Tensor[(630), bool] {
  %575 = @func_1935() /* ty=(Tensor[(630), bool],) */;
  %575.0
}

def @func_14803() -> (Tensor[(630), bool],) {
  %576 = @func_1271() /* ty=Tensor[(630), bool] */;
  (%576,)
}

def @func_1871() -> Tensor[(630), bool] {
  @func_1271() /* ty=Tensor[(630), bool] */
}

def @func_1558(%var_1552: Tensor[(1, 16, 16), float32]) -> Tensor[(1, 16, 16), float64] {
  %577 = cast(%var_1552, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  %578 = asinh(%577) /* ty=Tensor[(1, 16, 16), float32] */;
  %579 = cast(%578, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  tan(%579) /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_8108(%var_8051: Tensor[(256), float32]) -> (Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %580 = cast(%var_8051, dtype="float32") /* ty=Tensor[(256), float32] */;
  %581 = reshape(%580, newshape=[1, 256]) /* ty=Tensor[(1, 256), float32] */;
  %582 = @func_1962(%581) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */;
  %583 = @func_6920() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %584 = @func_7856() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64]) */;
  %585 = @func_3402() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %586 = @func_6920() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %587 = @func_2451() /* ty=Tensor[(630), bool] */;
  %588 = %582.3;
  %589 = %583.1;
  %590 = %584.0;
  %591 = %585.0;
  %592 = %586.1;
  (%587, %588, %var_8051, %589, %590, %591, %592)
}

def @func_16852() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], float32, Tensor[(1155), float32]) {
  %593 = cast(-0.624279f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %594 = cast(meta[relay.Constant][18] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %595 = reshape(%593, newshape=[]) /* ty=float32 */;
  %596 = reshape(%594, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %597 = @func_11731(%595, %596) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(10, 45), float64], Tensor[(11, 15, 2), float32], Tensor[(165, 2), float32], Tensor[(630), bool], float32, Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(1155), float64]) */;
  %598 = @func_10778() /* ty=Tensor[(2, 14, 8), float64] */;
  %599 = %597.0;
  (%598, %599, -0.624279f /* ty=float32 */, meta[relay.Constant][18] /* ty=Tensor[(1155), float32] */)
}

def @func_5087(%var_5085: Tensor[(20, 2), float32]) -> (Tensor[(224), float64], Tensor[(2, 14, 8), int16], Tensor[(8, 5, 1), float32], Tensor[(20, 2), float32]) {
  %600 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %601 = cast(%var_5085, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %602 = reshape(%601, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float32] */;
  %603 = %600.0;
  %604 = @func_3211() /* ty=Tensor[(2, 14, 8), int16] */;
  %605 = @func_411(%602) /* ty=Tensor[(8, 5, 1), float32] */;
  (%603, %604, %605, %var_5085)
}

def @func_15031() -> (Tensor[(2, 14, 8), float64], Tensor[(3, 2, 11), float32], Tensor[(66), float32]) {
  %606 = cast(meta[relay.Constant][19] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %607 = reshape(%606, newshape=[3, 2, 11]) /* ty=Tensor[(3, 2, 11), float32] */;
  %608 = @func_6438(%607) /* ty=(Tensor[(3, 2, 11), float32], Tensor[(630), bool]) */;
  %609 = @func_7146() /* ty=Tensor[(2, 14, 8), float64] */;
  %610 = %608.0;
  (%609, %610, meta[relay.Constant][19] /* ty=Tensor[(66), float32] */)
}

def @func_13531() -> (Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 330), float32]) {
  %611 = @func_12522() /* ty=(Tensor[(224), float64],) */;
  %612 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %613 = @func_12095() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 330), float32]) */;
  %614 = %611.0;
  %615 = %612.0;
  %616 = %613.2;
  (%614, %615, %616)
}

def @func_16879(%var_16863: int64, %var_16867: Tensor[(40), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(5, 4, 5), float32], int64, Tensor[(70, 4), int64], Tensor[(100), float32], Tensor[(256), float32], Tensor[(40), float32], Tensor[(2, 14, 8), float64], Tensor[(165, 2), float32]) {
  %617 = @func_16603() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %618 = cast(%var_16863, dtype="int64") /* ty=int64 */;
  %619 = cast(meta[relay.Constant][20] /* ty=Tensor[(70, 4), int64] */, dtype="int64") /* ty=Tensor[(70, 4), int64] */;
  %620 = cast(meta[relay.Constant][21] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %621 = cast(meta[relay.Constant][22] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %622 = cast(%var_16867, dtype="float32") /* ty=Tensor[(40), float32] */;
  %623 = reshape(%618, newshape=[]) /* ty=int64 */;
  %624 = reshape(%619, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int64] */;
  %625 = reshape(%620, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %626 = reshape(%621, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %627 = reshape(%622, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %628 = @func_5693(%623, %624, %625, %626, %627) /* ty=(Tensor[(5, 4, 14), int64], Tensor[(5, 4, 5), float32], Tensor[(100), float32], Tensor[(256), float32], Tensor[(630), bool], Tensor[(8, 5, 1), float32], Tensor[(40), float32], Tensor[(630), bool], Tensor[(224), float64], Tensor[(5, 4, 14), int8], Tensor[(2, 14, 8), float64], Tensor[(5, 4, 14), float64]) */;
  %629 = cast(meta[relay.Constant][23] /* ty=Tensor[(165, 2), float32] */, dtype="float32") /* ty=Tensor[(165, 2), float32] */;
  %630 = reshape(%629, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %631 = @func_6681(%630) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %632 = %617.0;
  %633 = %628.1;
  %634 = %631.2;
  (%632, %633, %var_16863, meta[relay.Constant][20] /* ty=Tensor[(70, 4), int64] */, meta[relay.Constant][21] /* ty=Tensor[(100), float32] */, meta[relay.Constant][22] /* ty=Tensor[(256), float32] */, %var_16867, %634, meta[relay.Constant][23] /* ty=Tensor[(165, 2), float32] */)
}

def @func_2863(%var_2826: Tensor[(7, 7, 15), float32]) -> (Tensor[(7, 7, 15), float32], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64], Tensor[(630), bool]) {
  %635 = cast(%var_2826, dtype="float32") /* ty=Tensor[(7, 7, 15), float32] */;
  %636 = cast(meta[relay.Constant][24] /* ty=Tensor[(224, 1), float64] */, dtype="float64") /* ty=Tensor[(224, 1), float64] */;
  %637 = reshape(%636, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %638 = @func_2586(%637) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %639 = sqrt(%635) /* ty=Tensor[(7, 7, 15), float32] */;
  %640 = %638.2;
  %641 = @func_1871() /* ty=Tensor[(630), bool] */;
  (%639, %640, meta[relay.Constant][24] /* ty=Tensor[(224, 1), float64] */, %641)
}

def @func_9562() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64]) {
  %642 = @func_3402() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %643 = @func_8742() /* ty=(Tensor[(630), bool], Tensor[(224), float64]) */;
  %644 = %642.0;
  %645 = %643.1;
  (%644, %645)
}

def @func_9027() -> (Tensor[(224), float64], Tensor[(630), bool]) {
  %646 = @func_8742() /* ty=(Tensor[(630), bool], Tensor[(224), float64]) */;
  %647 = @func_7238() /* ty=(Tensor[(630), bool],) */;
  %648 = %646.1;
  %649 = %647.0;
  (%648, %649)
}

def @func_14869(%var_14837: Tensor[(256), float32], %var_14838: int64) -> (Tensor[(630), bool], Tensor[(3, 14, 15), bool], int64, Tensor[(256), float32], int64, Tensor[(2, 6, 14), int64], Tensor[(630), bool]) {
  %650 = @func_10591() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %651 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %652 = cast(%var_14837, dtype="float32") /* ty=Tensor[(256), float32] */;
  %653 = cast(%var_14838, dtype="int64") /* ty=int64 */;
  %654 = reshape(%652, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %655 = reshape(%653, newshape=[]) /* ty=int64 */;
  %656 = @func_10491(%654, %655) /* ty=(Tensor[(630), bool], int64, Tensor[(256), float32], int64, Tensor[(40), float32], Tensor[(2, 14, 8), bool]) */;
  %657 = @func_5837() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */;
  %658 = %650.1;
  %659 = %651.0;
  %660 = %656.1;
  %661 = %657.0;
  %662 = @func_6011() /* ty=Tensor[(630), bool] */;
  (%658, %659, %660, %var_14837, %var_14838, %661, %662)
}

def @func_7146() -> Tensor[(2, 14, 8), float64] {
  %663 = @func_2770() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */;
  %663.1
}

def @func_13800(%var_13755: Tensor[(224), float64]) -> (Tensor[(6, 1, 6), float64], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool], Tensor[(256), float32], Tensor[(256), float32], int64) {
  %664 = @func_8725() /* ty=(Tensor[(6, 1, 6), float64], Tensor[(2, 14, 8), float64]) */;
  %665 = @func_5935() /* ty=(Tensor[(630), bool],) */;
  %666 = @func_3138() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %667 = cast(%var_13755, dtype="float64") /* ty=Tensor[(224), float64] */;
  %668 = reshape(%667, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %669 = @func_230(%668) /* ty=(Tensor[(2, 14, 8), float64],) */;
  %670 = cast(meta[relay.Constant][25] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %671 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %672 = reshape(%670, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %673 = reshape(%671, newshape=[]) /* ty=int64 */;
  %674 = @func_10491(%672, %673) /* ty=(Tensor[(630), bool], int64, Tensor[(256), float32], int64, Tensor[(40), float32], Tensor[(2, 14, 8), bool]) */;
  %675 = %664.0;
  %676 = %665.0;
  %677 = %666.1;
  %678 = %669.0;
  %679 = @func_7126() /* ty=Tensor[(630), bool] */;
  %680 = %674.2;
  (%675, %676, %677, %678, %var_13755, %679, %680, meta[relay.Constant][25] /* ty=Tensor[(256), float32] */, -5 /* ty=int64 */)
}

def @func_11731(%var_11683: float32, %var_11684: Tensor[(1155), float32]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(10, 45), float64], Tensor[(11, 15, 2), float32], Tensor[(165, 2), float32], Tensor[(630), bool], float32, Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(1155), float64]) {
  %681 = @func_11480() /* ty=(Tensor[(630), bool],) */;
  %682 = @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %683 = @func_10912() /* ty=(Tensor[(10, 45), float64],) */;
  %684 = cast(meta[relay.Constant][26] /* ty=Tensor[(165, 2), float32] */, dtype="float32") /* ty=Tensor[(165, 2), float32] */;
  %685 = reshape(%684, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), float32] */;
  %686 = @func_3929(%685) /* ty=(Tensor[(11, 15, 2), float32],) */;
  %687 = cast(%var_11683, dtype="float32") /* ty=float32 */;
  %688 = cast(%var_11684, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %689 = reshape(%687, newshape=[]) /* ty=float32 */;
  %690 = reshape(%688, newshape=[15, 7, 11]) /* ty=Tensor[(15, 7, 11), float32] */;
  %691 = @func_5145(%689, %690) /* ty=(Tensor[(15, 7, 11), float32], Tensor[(630), bool]) */;
  %692 = @func_11445() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), uint64], Tensor[(224), float64]) */;
  %693 = cast(%var_11684, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %694 = %681.0;
  %695 = %682.2;
  %696 = %683.0;
  %697 = %686.0;
  %698 = %691.1;
  %699 = %692.1;
  %700 = @func_7916() /* ty=Tensor[(2, 14, 8), float64] */;
  %701 = cos(%693) /* ty=Tensor[(1155), float64] */;
  (%694, %695, %696, %697, meta[relay.Constant][26] /* ty=Tensor[(165, 2), float32] */, %698, %var_11683, %699, %700, %701)
}

def @func_15518() -> (Tensor[(630), bool],) {
  %702 = @func_13560() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %703 = %702.1;
  (%703,)
}

def @func_16674(%var_16616: Tensor[(1, 6, 4), float64], %var_16666: Tensor[(40, 1), float32]) -> (Tensor[(?, 6, 4), bool], Tensor[(?, 6, 4), uint64], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool], int64, Tensor[(40, 1), float32]) {
  %704 = cast(%var_16616, dtype="float64") /* ty=Tensor[(1, 6, 4), float64] */;
  %705 = atan(%704) /* ty=Tensor[(1, 6, 4), float64] */;
  %706 = cast(%var_16616, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
  %707 = shape_of(%705, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(%705, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %710 = cast(%705, dtype="uint64") /* ty=Tensor[(1, 6, 4), uint64] */;
  %711 = shape_of(%var_16616, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%var_16616, dtype="uint64") /* ty=Tensor[(1, 6, 4), uint64] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %714 = @func_4732() /* ty=(Tensor[(224), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %715 = cast(9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %716 = cast(%var_16666, dtype="float32") /* ty=Tensor[(40, 1), float32] */;
  %717 = reshape(%715, newshape=[]) /* ty=int64 */;
  %718 = reshape(%716, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %719 = @func_9884(%717, %718) /* ty=(Tensor[(224), float64], Tensor[(256), float32], Tensor[(280), int64], Tensor[(50, 2), float32], Tensor[(256), float32], Tensor[(224), float64], Tensor[(40), uint64], Tensor[(1, 256), float32], Tensor[(630), bool]) */;
  %720 = logical_and(%708, %709) /* ty=Tensor[(?, 6, 4), bool] */;
  %721 = maximum(%712, %713) /* ty=Tensor[(?, 6, 4), uint64] */;
  %722 = @func_9592() /* ty=Tensor[(2, 14, 8), float64] */;
  %723 = %714.0;
  %724 = %719.8;
  (%720, %721, %722, %723, %724, 9 /* ty=int64 */, %var_16666)
}

def @func_9998() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(330), float32], Tensor[(630), bool]) {
  %725 = @func_4284() /* ty=(Tensor[(630), bool],) */;
  %726 = cast(meta[relay.Constant][27] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %727 = reshape(%726, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %728 = @func_6681(%727) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %729 = @func_4732() /* ty=(Tensor[(224), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %730 = %725.0;
  %731 = %728.0;
  %732 = %729.1;
  (%730, %731, meta[relay.Constant][27] /* ty=Tensor[(330), float32] */, %732)
}

def @func_5257() -> Tensor[(3, 14, 15), bool] {
  %733 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %733.0
}

def @func_7213() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float32]) {
  %734 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %735 = @func_1935() /* ty=(Tensor[(630), bool],) */;
  %736 = @func_6751() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %737 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %738 = %737.0;
  %739 = cast(%738, dtype="float32") /* ty=Tensor[(2, 14, 8), float32] */;
  %740 = %734.0;
  %741 = %735.0;
  %742 = %736.0;
  %743 = log10(%739) /* ty=Tensor[(2, 14, 8), float32] */;
  (%740, %741, %742, %743)
}

def @func_16020() -> (Tensor[(630), bool],) {
  %744 = @func_4442() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %745 = %744.3;
  (%745,)
}

def @func_9246(%var_9221: Tensor[(13, 14, 12), float64], %var_9222: Tensor[(13, 14, 12), float64], %var_9239: Tensor[(100), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(100), float32], Tensor[(2, 128), bool]) {
  %746 = cast(%var_9222, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %747 = shape_of(%var_9221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%var_9221, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %750 = @func_4511() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %751 = cast(%var_9239, dtype="float32") /* ty=Tensor[(100), float32] */;
  %752 = cast(meta[relay.Constant][28] /* ty=Tensor[(16, 16), float32] */, dtype="float32") /* ty=Tensor[(16, 16), float32] */;
  %753 = reshape(%751, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), float32] */;
  %754 = reshape(%752, newshape=[2, 128]) /* ty=Tensor[(2, 128), float32] */;
  %755 = @func_4362(%753, %754) /* ty=(Tensor[(5, 4, 5), float32], Tensor[(630), bool], Tensor[(2, 128), float32]) */;
  %756 = %755.2;
  %757 = cast(meta[relay.Constant][28] /* ty=Tensor[(16, 16), float32] */, dtype="bool") /* ty=Tensor[(16, 16), bool] */;
  %758 = shape_of(%756, dtype="int32") /* ty=Tensor[(2), int32] */;
  %759 = cast(%756, dtype="bool") /* ty=Tensor[(2, 128), bool] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %761 = power(%748, %749) /* ty=Tensor[(13, 14, 12), float64] */;
  %762 = %750.2;
  %763 = @func_7146() /* ty=Tensor[(2, 14, 8), float64] */;
  %764 = greater(%759, %760) /* ty=Tensor[(2, 128), bool] */;
  (%761, %762, %763, %var_9239, %764)
}

def @func_1271() -> Tensor[(630), bool] {
  %765 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %765.0
}

def @func_4071() -> (Tensor[(8, 10, 3), float32], Tensor[(630), bool]) {
  %766 = cast(meta[relay.Constant][29] /* ty=Tensor[(8, 10, 3), float32] */, dtype="float32") /* ty=Tensor[(8, 10, 3), float32] */;
  %767 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %768 = acos(%766) /* ty=Tensor[(8, 10, 3), float32] */;
  %769 = %767.3;
  (%768, %769)
}

def @func_15164() -> Tensor[(630), bool] {
  %770 = @func_4947() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %770.1
}

def @func_6751() -> (Tensor[(3, 14, 15), bool],) {
  %771 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %772 = %771.0;
  (%772,)
}

def @func_12664(%var_12658: Tensor[(224, 5), float64]) -> (Tensor[(224, 5), float64],) {
  %773 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
  %774 = %773.2;
  %775 = cast(%774, dtype="float64") /* ty=Tensor[(224, 1), float64] */;
  %776 = cast(%var_12658, dtype="float64") /* ty=Tensor[(224, 5), float64] */;
  %777 = divide(%775, %776) /* ty=Tensor[(224, 5), float64] */;
  (%777,)
}

def @func_6874(%var_6808: Tensor[(3, 14, 15), bool], %var_6821: Tensor[(256), float32], %var_6859: Tensor[(3, 14, 15), bool]) -> (Tensor[(3, 14, 15), float32], Tensor[(1, 256), float32], Tensor[(256), float32], Tensor[(3, 14, 15), bool], Tensor[(3, 14, 15), int32], Tensor[(630), bool]) {
  %778 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %779 = %778.0;
  %780 = cast(%var_6808, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %781 = shape_of(%779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%779, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %784 = less_equal(%782, %783) /* ty=Tensor[(3, 14, 15), bool] */;
  %785 = cast(%784, dtype="float32") /* ty=Tensor[(3, 14, 15), float32] */;
  %786 = shape_of(%779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%779, dtype="float32") /* ty=Tensor[(3, 14, 15), float32] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %789 = cast(%var_6821, dtype="float32") /* ty=Tensor[(256), float32] */;
  %790 = reshape(%789, newshape=[1, 256]) /* ty=Tensor[(1, 256), float32] */;
  %791 = @func_1962(%790) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */;
  %792 = @func_6751() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %793 = cast(%var_6859, dtype="int32") /* ty=Tensor[(3, 14, 15), int32] */;
  %794 = shape_of(%779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%779, dtype="int32") /* ty=Tensor[(3, 14, 15), int32] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %797 = @func_1935() /* ty=(Tensor[(630), bool],) */;
  %798 = floor_mod(%787, %788) /* ty=Tensor[(3, 14, 15), float32] */;
  %799 = %791.4;
  %800 = %792.0;
  %801 = multiply(%795, %796) /* ty=Tensor[(3, 14, 15), int32] */;
  %802 = %797.0;
  (%798, %799, %var_6821, %800, %801, %802)
}

def @func_16079() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(330, 1), float32]) {
  %803 = @func_14431() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %804 = cast(meta[relay.Constant][30] /* ty=Tensor[(330, 1), float32] */, dtype="float32") /* ty=Tensor[(330, 1), float32] */;
  %805 = reshape(%804, newshape=[5, 66]) /* ty=Tensor[(5, 66), float32] */;
  %806 = @func_9959(%805) /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(5, 66), float32]) */;
  %807 = %803.1;
  %808 = %806.0;
  (%807, %808, meta[relay.Constant][30] /* ty=Tensor[(330, 1), float32] */)
}

def @func_4442() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %809 = @func_4284() /* ty=(Tensor[(630), bool],) */;
  %810 = @func_4284() /* ty=(Tensor[(630), bool],) */;
  %811 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %812 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %813 = %809.0;
  %814 = %810.0;
  %815 = %811.0;
  %816 = %812.0;
  %817 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
  (%813, %814, %815, %816, %817)
}

def @func_6138() -> (Tensor[(630), bool],) {
  %818 = @func_6011() /* ty=Tensor[(630), bool] */;
  (%818,)
}

def @func_2357() -> (Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) {
  %819 = @func_1474() /* ty=(Tensor[(630), bool],) */;
  %820 = cast(meta[relay.Constant][31] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %821 = reshape(%820, newshape=[1, 16, 16]) /* ty=Tensor[(1, 16, 16), float32] */;
  %822 = %819.0;
  %823 = @func_1558(%821) /* ty=Tensor[(1, 16, 16), float64] */;
  %824 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
  (%822, %823, meta[relay.Constant][31] /* ty=Tensor[(256), float32] */, %824)
}

def @func_15457(%var_15414: Tensor[(1120), float64]) -> (Tensor[(66), float32], Tensor[(224, 5), float64], Tensor[(1120), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), bool]) {
  %825 = @func_15031() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(3, 2, 11), float32], Tensor[(66), float32]) */;
  %826 = cast(%var_15414, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %827 = reshape(%826, newshape=[224, 5]) /* ty=Tensor[(224, 5), float64] */;
  %828 = @func_12664(%827) /* ty=(Tensor[(224, 5), float64],) */;
  %829 = @func_9120() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %830 = @func_4657() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %831 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %832 = %825.2;
  %833 = %828.0;
  %834 = %829.0;
  %835 = %830.0;
  %836 = %831.0;
  (%832, %833, %var_15414, %834, %835, %836)
}

def @func_16703() -> Tensor[(2, 14, 8), float64] {
  @func_7146() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_9959(%var_9947: Tensor[(5, 66), float32]) -> (Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(5, 66), float32]) {
  %837 = @func_9027() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %838 = cast(%var_9947, dtype="float32") /* ty=Tensor[(5, 66), float32] */;
  %839 = reshape(%838, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %840 = @func_6681(%839) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %841 = %837.0;
  %842 = %840.2;
  (%841, %842, %var_9947)
}

def @func_15866() -> Tensor[(630), bool] {
  %843 = @func_7856() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64]) */;
  %843.0
}

def @func_3083() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %844 = @func_2634() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %845 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %846 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %847 = %844.0;
  %848 = %845.0;
  %849 = %846.0;
  %850 = @func_1366() /* ty=Tensor[(630), bool] */;
  (%847, %848, %849, %850)
}

def @func_2673() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %851 = @func_1474() /* ty=(Tensor[(630), bool],) */;
  %852 = %851.0;
  %853 = @func_1871() /* ty=Tensor[(630), bool] */;
  (%852, %853)
}

def @func_15005() -> (Tensor[(3, 14, 15), bool], Tensor[(6, 1, 6), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), bool]) {
  %854 = @func_6751() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %855 = @func_9754() /* ty=(Tensor[(6, 1, 6), float64],) */;
  %856 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %857 = @func_2770() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */;
  %858 = %854.0;
  %859 = %855.0;
  %860 = %856.1;
  %861 = @func_1271() /* ty=Tensor[(630), bool] */;
  %862 = %857.4;
  (%858, %859, %860, %861, %862)
}

def @func_2994() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %863 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %864 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %865 = %863.0;
  %866 = @func_1871() /* ty=Tensor[(630), bool] */;
  %867 = @func_2451() /* ty=Tensor[(630), bool] */;
  %868 = @func_1871() /* ty=Tensor[(630), bool] */;
  %869 = %864.0;
  (%865, %866, %867, %868, %869)
}

def @func_12161(%var_12154: Tensor[(2, 14, 8), float64]) -> (Tensor[(2, 14, 8), int64],) {
  %870 = @func_8565() /* ty=(Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64]) */;
  %871 = %870.2;
  %872 = cast(%var_12154, dtype="int64") /* ty=Tensor[(2, 14, 8), int64] */;
  %873 = shape_of(%871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%871, dtype="int64") /* ty=Tensor[(2, 14, 8), int64] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %876 = bitwise_xor(%874, %875) /* ty=Tensor[(2, 14, 8), int64] */;
  (%876,)
}

def @func_5935() -> (Tensor[(630), bool],) {
  %877 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %878 = %877.0;
  (%878,)
}

def @func_14398() -> (Tensor[(630), bool],) {
  %879 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %880 = %879.0;
  (%880,)
}

def @func_4408() -> Tensor[(630), bool] {
  %881 = @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %881.1
}

def @func_12726() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) {
  %882 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %883 = @func_12401() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %884 = %882.0;
  %885 = %883.1;
  %886 = @func_7126() /* ty=Tensor[(630), bool] */;
  (%884, %885, %886)
}

def @func_11316() -> Tensor[(330), float32] {
  %887 = @func_5030() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %887.3
}

def @func_13038(%var_13026: Tensor[(224, 630), float32]) -> Tensor[(224, 630), bool] {
  %888 = @func_4016() /* ty=Tensor[(224, 630), float32] */;
  %889 = cast(%var_13026, dtype="bool") /* ty=Tensor[(224, 630), bool] */;
  %890 = shape_of(%888, dtype="int32") /* ty=Tensor[(2), int32] */;
  %891 = cast(%888, dtype="bool") /* ty=Tensor[(224, 630), bool] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less_equal(%891, %892) /* ty=Tensor[(224, 630), bool] */
}

def @func_15376(%var_15369: Tensor[(256), float32], %var_15370: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(735), float32], Tensor[(630), bool], Tensor[(13, 14, 10), bool], Tensor[(2, 14, 8), float64], Tensor[(100), float32], Tensor[(256), float32], Tensor[(330), float32]) {
  %893 = @func_11607() /* ty=(Tensor[(630), bool],) */;
  %894 = cast(meta[relay.Constant][32] /* ty=Tensor[(735), float32] */, dtype="float32") /* ty=Tensor[(735), float32] */;
  %895 = reshape(%894, newshape=[7, 7, 15]) /* ty=Tensor[(7, 7, 15), float32] */;
  %896 = @func_2863(%895) /* ty=(Tensor[(7, 7, 15), float32], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64], Tensor[(630), bool]) */;
  %897 = @func_11895() /* ty=(Tensor[(630), bool],) */;
  %898 = @func_14740() /* ty=(Tensor[(3, 14, 15), bool], Tensor[(13, 14, 10), bool], Tensor[(182), int64], Tensor[(1820), int64]) */;
  %899 = %896.1;
  %900 = cast(%899, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %901 = reshape(%900, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %902 = @func_2126(%901) /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(128, 2), float32], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint8], Tensor[(2, 14, 8), float64]) */;
  %903 = cast(%var_15369, dtype="float32") /* ty=Tensor[(256), float32] */;
  %904 = cast(%var_15370, dtype="float32") /* ty=Tensor[(330), float32] */;
  %905 = reshape(%903, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %906 = reshape(%904, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %907 = @func_7108(%905, %906) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(100), float32], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(330), float32], Tensor[(2, 128), int8]) */;
  %908 = %893.0;
  %909 = %897.0;
  %910 = %898.1;
  %911 = %902.4;
  %912 = %907.2;
  (%908, %899, meta[relay.Constant][32] /* ty=Tensor[(735), float32] */, %909, %910, %911, %912, %var_15369, %var_15370)
}

def @func_4783() -> (Tensor[(3, 14, 15), bool],) {
  %913 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %914 = %913.1;
  (%914,)
}

def @func_16401(%var_16380: Tensor[(15, 3, 13), float32]) -> Tensor[(15, 3, 13), float32] {
  %915 = cast(%var_16380, dtype="float32") /* ty=Tensor[(15, 3, 13), float32] */;
  log10(%915) /* ty=Tensor[(15, 3, 13), float32] */
}

def @func_3875() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) {
  %916 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %917 = @func_1474() /* ty=(Tensor[(630), bool],) */;
  %918 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %919 = %916.1;
  %920 = %917.0;
  %921 = %918.1;
  %922 = @func_1271() /* ty=Tensor[(630), bool] */;
  (%919, %920, %921, %922)
}

def @func_15544() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  %923 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %924 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %925 = %923.0;
  %926 = %924.0;
  (%925, %926)
}

def @func_9754() -> (Tensor[(6, 1, 6), float64],) {
  %927 = @func_8725() /* ty=(Tensor[(6, 1, 6), float64], Tensor[(2, 14, 8), float64]) */;
  %928 = %927.0;
  (%928,)
}

def @func_13345() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %929 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %930 = @func_4657() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %931 = %929.0;
  %932 = %930.1;
  %933 = @func_5469() /* ty=Tensor[(630), bool] */;
  (%931, %932, %933)
}

def @func_2188() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  %934 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
  %935 = cast(%934, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %936 = reshape(%935, newshape=[4, 56]) /* ty=Tensor[(4, 56), float64] */;
  %937 = @func_1529(%936) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %938 = %937.1;
  (%934, %938)
}

def @func_4485() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %939 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %940 = @func_3402() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %941 = %939.0;
  %942 = %940.1;
  (%941, %942)
}

def @func_1007(%var_995: Tensor[(3, 14, 15), bool], %var_1001: Tensor[(4, 56), float64]) -> (Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) {
  %943 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %944 = cast(%var_995, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %945 = cast(%var_1001, dtype="float64") /* ty=Tensor[(4, 56), float64] */;
  %946 = reshape(%945, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %947 = @func_230(%946) /* ty=(Tensor[(2, 14, 8), float64],) */;
  %948 = logical_and(%943, %944) /* ty=Tensor[(3, 14, 15), bool] */;
  %949 = %947.0;
  (%948, %949, %var_1001)
}

def @func_12491() -> Tensor[(1, 11, 12), float64] {
  %950 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 11, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 11, 12), float64] */;
  atanh(%950) /* ty=Tensor[(1, 11, 12), float64] */
}

def @func_4732() -> (Tensor[(224), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %951 = @func_2634() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %952 = @func_3839() /* ty=Tensor[(224), float64] */;
  %953 = @func_1271() /* ty=Tensor[(630), bool] */;
  %954 = %951.0;
  (%952, %953, %954)
}

def @func_3383() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) {
  %955 = @func_3211() /* ty=Tensor[(2, 14, 8), int16] */;
  %956 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 14, 8), int16] */, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %957 = shape_of(%955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %958 = cast(%955, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %960 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %961 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %962 = floor_mod(%958, %959) /* ty=Tensor[(2, 14, 8), float64] */;
  %963 = %960.1;
  %964 = %961.2;
  (%962, %963, %964)
}

def @func_9318() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %965 = @func_6258() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), float64]) */;
  %966 = @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */;
  %967 = %965.1;
  %968 = %966.3;
  (%967, %968)
}

def @func_10430(%var_10416: Tensor[(100), float32], %var_10417: Tensor[(256), float32]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(100), float32], Tensor[(256), float32]) {
  %969 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %970 = cast(%var_10416, dtype="float32") /* ty=Tensor[(100), float32] */;
  %971 = cast(%var_10417, dtype="float32") /* ty=Tensor[(256), float32] */;
  %972 = reshape(%970, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), float32] */;
  %973 = reshape(%971, newshape=[2, 128]) /* ty=Tensor[(2, 128), float32] */;
  %974 = @func_4362(%972, %973) /* ty=(Tensor[(5, 4, 5), float32], Tensor[(630), bool], Tensor[(2, 128), float32]) */;
  %975 = %969.0;
  %976 = %974.1;
  (%975, %976, %var_10416, %var_10417)
}

def @func_4511() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) {
  %977 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %978 = %977.1;
  %979 = cast(%978, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %980 = @func_3875() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) */;
  %981 = atan(%979) /* ty=Tensor[(2, 14, 8), float64] */;
  %982 = @func_1366() /* ty=Tensor[(630), bool] */;
  %983 = %980.3;
  (%981, %982, %983)
}

def @func_13928() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  %984 = @func_4107() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %985 = @func_2634() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %986 = %984.0;
  %987 = %985.0;
  (%986, %987)
}

def @func_10521(%var_10514: Tensor[(13, 11, 4), float64], %var_10515: Tensor[(13, 11, 4), float64]) -> Tensor[(13, 11, 4), float64] {
  %988 = cast(%var_10515, dtype="float64") /* ty=Tensor[(13, 11, 4), float64] */;
  %989 = shape_of(%var_10514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %990 = cast(%var_10514, dtype="float64") /* ty=Tensor[(13, 11, 4), float64] */;
  %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%990, %991) /* ty=Tensor[(13, 11, 4), float64] */
}

def @func_2511() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) {
  %992 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %993 = cast(meta[relay.Constant][35] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %994 = reshape(%993, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %995 = @func_2126(%994) /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(128, 2), float32], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint8], Tensor[(2, 14, 8), float64]) */;
  %996 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 45), bool] */, dtype="bool") /* ty=Tensor[(10, 45), bool] */;
  %997 = reshape(%996, newshape=[15, 15, 2]) /* ty=Tensor[(15, 15, 2), bool] */;
  %998 = @func_1729(%997) /* ty=(Tensor[(15, 15, 2), bool],) */;
  %999 = %992.0;
  %1000 = %995.4;
  %1001 = %998.0;
  (%999, %1000, meta[relay.Constant][35] /* ty=Tensor[(224), float64] */, %1001, meta[relay.Constant][36] /* ty=Tensor[(10, 45), bool] */)
}

def @func_3799() -> Tensor[(2, 14, 8), float64] {
  %1002 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
  %1003 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 14, 8), float64] */, dtype="uint32") /* ty=Tensor[(2, 14, 8), uint32] */;
  %1004 = shape_of(%1002, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%1002, dtype="uint32") /* ty=Tensor[(2, 14, 8), uint32] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1007 = maximum(%1005, %1006) /* ty=Tensor[(2, 14, 8), uint32] */;
  %1008 = cast(meta[relay.Constant][38] /* ty=Tensor[(2, 14, 8), uint32] */, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1009 = shape_of(%1007, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1010 = cast(%1007, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%1010, %1011) /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_1216() -> (Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) {
  %1012 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1013 = cast(meta[relay.Constant][39] /* ty=Tensor[(2, 6, 14), int64] */, dtype="int64") /* ty=Tensor[(2, 6, 14), int64] */;
  %1014 = cast(meta[relay.Constant][40] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %1015 = cast(meta[relay.Constant][41] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %1016 = reshape(%1014, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
  %1017 = reshape(%1015, newshape=[4, 56]) /* ty=Tensor[(4, 56), float64] */;
  %1018 = @func_1007(%1016, %1017) /* ty=(Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %1019 = cast(meta[relay.Constant][41] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %1020 = reshape(%1019, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %1021 = @func_230(%1020) /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1022 = %1021.0;
  %1023 = cast(%1022, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1024 = reshape(%1023, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %1025 = @func_230(%1024) /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1026 = %1018.0;
  %1027 = cast(%1026, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %1028 = %1025.0;
  %1029 = cast(%1028, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1030 = reshape(%1027, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
  %1031 = reshape(%1029, newshape=[4, 56]) /* ty=Tensor[(4, 56), float64] */;
  %1032 = @func_1007(%1030, %1031) /* ty=(Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %1033 = right_shift(%1012, %1013) /* ty=Tensor[(2, 6, 14), int64] */;
  %1034 = %1032.2;
  (%1033, %1026, meta[relay.Constant][40] /* ty=Tensor[(630), bool] */, meta[relay.Constant][41] /* ty=Tensor[(224), float64] */, %1022, %1028, %1034)
}

def @func_10591() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %1035 = @func_9120() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1036 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1037 = @func_5752() /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(8, 10, 3), float32]) */;
  %1038 = %1035.0;
  %1039 = %1036.1;
  %1040 = %1037.1;
  (%1038, %1039, %1040)
}

def @func_1632() -> Tensor[(2, 14, 8), float64] {
  %1041 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1041.0
}

def @func_4947() -> (Tensor[(224), float64], Tensor[(630), bool]) {
  %1042 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %1043 = %1042.1;
  %1044 = @func_2451() /* ty=Tensor[(630), bool] */;
  (%1043, %1044)
}

def @func_3683() -> (Tensor[(224), float64],) {
  %1045 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %1046 = %1045.1;
  (%1046,)
}

def @func_8312(%var_8289: Tensor[(256), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(256), float32]) {
  %1047 = cast(%var_8289, dtype="float32") /* ty=Tensor[(256), float32] */;
  %1048 = reshape(%1047, newshape=[1, 256]) /* ty=Tensor[(1, 256), float32] */;
  %1049 = @func_1962(%1048) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */;
  %1050 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
  %1051 = %1049.0;
  (%1050, %1051, %var_8289)
}

def @func_5752() -> (Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(8, 10, 3), float32]) {
  %1052 = @func_4137() /* ty=(Tensor[(224), float64],) */;
  %1053 = @func_4107() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1054 = @func_4071() /* ty=(Tensor[(8, 10, 3), float32], Tensor[(630), bool]) */;
  %1055 = %1052.0;
  %1056 = %1053.0;
  %1057 = %1054.0;
  (%1055, %1056, %1057)
}

def @func_8837() -> (Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 6, 14), int64], Tensor[(630), bool], Tensor[(2, 14, 8), int8]) {
  %1058 = @func_6998() /* ty=(Tensor[(630), bool],) */;
  %1059 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %1060 = @func_5837() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */;
  %1061 = @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %1062 = %1059.1;
  %1063 = cast(%1062, dtype="float64") /* ty=Tensor[(224), float64] */;
  %1064 = cast(%1062, dtype="float64") /* ty=Tensor[(224), float64] */;
  %1065 = reshape(%1063, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %1066 = reshape(%1064, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %1067 = @func_7524(%1065, %1066) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), int8]) */;
  %1068 = %1058.0;
  %1069 = %1060.0;
  %1070 = %1061.1;
  %1071 = %1067.2;
  (%1068, %1062, %1069, %1070, %1071)
}

def @func_16723() -> (Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 7), float64]) {
  %1072 = @func_9601() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1073 = @func_5837() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */;
  %1074 = @func_14513() /* ty=Tensor[(2, 14, 8), bool] */;
  %1075 = %1072.0;
  %1076 = %1073.1;
  (%1074, %1075, %1076)
}

def @func_2542() -> (Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) {
  %1077 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %1078 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %1079 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1080 = @func_2451() /* ty=Tensor[(630), bool] */;
  %1081 = %1077.3;
  %1082 = %1078.0;
  %1083 = %1079.1;
  (%1080, %1081, %1082, %1083)
}

def @func_6920() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %1084 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1085 = %1084.0;
  %1086 = @func_3102() /* ty=Tensor[(630), bool] */;
  (%1085, %1086)
}

def @func_10103(%var_10082: Tensor[(3, 10, 1), float64]) -> Tensor[(3, 10, 1), float64] {
  %1087 = cast(%var_10082, dtype="float64") /* ty=Tensor[(3, 10, 1), float64] */;
  log(%1087) /* ty=Tensor[(3, 10, 1), float64] */
}

def @func_14204() -> (Tensor[(2, 14, 8), float64],) {
  %1088 = @func_9623() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1089 = %1088.0;
  (%1089,)
}

def @func_15929() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  %1090 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1091 = @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %1092 = %1090.0;
  %1093 = %1091.0;
  (%1092, %1093)
}

def @func_17319(%var_17202: Tensor[(245, 3), float32]) -> (Tensor[(630), bool], Tensor[(2, 6, 14), int64], Tensor[(77), uint16], Tensor[(13, 14, 12), float64], Tensor[(2, 14, 8), float64], Tensor[(7, 3, 14), float32], Tensor[(294), float32], Tensor[(100, 2184), bool], Tensor[(735), bool]) {
  %1094 = @func_15518() /* ty=(Tensor[(630), bool],) */;
  %1095 = @func_5837() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */;
  %1096 = cast(meta[relay.Constant][43] /* ty=Tensor[(2184), float64] */, dtype="float64") /* ty=Tensor[(2184), float64] */;
  %1097 = cast(meta[relay.Constant][43] /* ty=Tensor[(2184), float64] */, dtype="float64") /* ty=Tensor[(2184), float64] */;
  %1098 = cast(meta[relay.Constant][44] /* ty=Tensor[(100, 1), float32] */, dtype="float32") /* ty=Tensor[(100, 1), float32] */;
  %1099 = reshape(%1096, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %1100 = reshape(%1097, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %1101 = reshape(%1098, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %1102 = @func_9246(%1099, %1100, %1101) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(100), float32], Tensor[(2, 128), bool]) */;
  %1103 = @func_8470() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1104 = cast(meta[relay.Constant][45] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %1105 = cast(meta[relay.Constant][45] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %1106 = reshape(%1104, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
  %1107 = reshape(%1105, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
  %1108 = @func_11006(%1106, %1107) /* ty=(Tensor[(7, 3, 14), float32],) */;
  %1109 = cast(meta[relay.Constant][44] /* ty=Tensor[(100, 1), float32] */, dtype="bool") /* ty=Tensor[(100, 1), bool] */;
  %1110 = cast(meta[relay.Constant][43] /* ty=Tensor[(2184), float64] */, dtype="bool") /* ty=Tensor[(2184), bool] */;
  %1111 = cast(meta[relay.Constant][46] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1112 = cast(meta[relay.Constant][42] /* ty=Tensor[(77), uint16] */, dtype="uint16") /* ty=Tensor[(77), uint16] */;
  %1113 = cast(%var_17202, dtype="float32") /* ty=Tensor[(245, 3), float32] */;
  %1114 = reshape(%1111, newshape=[]) /* ty=uint16 */;
  %1115 = reshape(%1112, newshape=[7, 11, 1]) /* ty=Tensor[(7, 11, 1), uint16] */;
  %1116 = reshape(%1113, newshape=[735]) /* ty=Tensor[(735), float32] */;
  %1117 = @func_7763(%1114, %1115, %1116) /* ty=(Tensor[(7, 11, 1), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(7, 7, 15), float32], Tensor[(735), float32], Tensor[(7, 11, 1), uint8], Tensor[(630), bool]) */;
  %1118 = %1117.5;
  %1119 = cast(%var_17202, dtype="bool") /* ty=Tensor[(245, 3), bool] */;
  %1120 = cast(meta[relay.Constant][46] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %1121 = equal(%1119, %1120) /* ty=Tensor[(245, 3), bool] */;
  %1122 = cast(%1121, dtype="bool") /* ty=Tensor[(245, 3), bool] */;
  %1123 = shape_of(%1118, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1124 = cast(%1118, dtype="bool") /* ty=Tensor[(735), bool] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1126 = %1094.0;
  %1127 = %1095.0;
  %1128 = %1102.0;
  %1129 = %1103.0;
  %1130 = %1108.0;
  %1131 = less(%1109, %1110) /* ty=Tensor[(100, 2184), bool] */;
  %1132 = less(%1124, %1125) /* ty=Tensor[(735), bool] */;
  (%1126, %1127, meta[relay.Constant][42] /* ty=Tensor[(77), uint16] */, %1128, %1129, %1130, meta[relay.Constant][45] /* ty=Tensor[(294), float32] */, %1131, %1132)
}

def @func_8742() -> (Tensor[(630), bool], Tensor[(224), float64]) {
  %1133 = @func_3138() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1134 = @func_5752() /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(8, 10, 3), float32]) */;
  %1135 = %1133.0;
  %1136 = %1134.0;
  (%1135, %1136)
}

def @func_11006(%var_10971: Tensor[(7, 3, 14), float32], %var_10972: Tensor[(7, 3, 14), float32]) -> (Tensor[(7, 3, 14), float32],) {
  %1137 = cast(%var_10972, dtype="float32") /* ty=Tensor[(7, 3, 14), float32] */;
  %1138 = shape_of(%var_10971, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1139 = cast(%var_10971, dtype="float32") /* ty=Tensor[(7, 3, 14), float32] */;
  %1140 = dyn.reshape(%1137, %1138, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1141 = maximum(%1139, %1140) /* ty=Tensor[(7, 3, 14), float32] */;
  (%1141,)
}

def @func_17490() -> (Tensor[(630), bool],) {
  %1142 = @func_1366() /* ty=Tensor[(630), bool] */;
  (%1142,)
}

def @func_5030() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) {
  %1143 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
  %1144 = cast(meta[relay.Constant][47] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1145 = reshape(%1144, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), float32] */;
  %1146 = @func_3929(%1145) /* ty=(Tensor[(11, 15, 2), float32],) */;
  %1147 = @func_1871() /* ty=Tensor[(630), bool] */;
  %1148 = %1143.0;
  %1149 = %1146.0;
  (%1147, %1148, %1149, meta[relay.Constant][47] /* ty=Tensor[(330), float32] */)
}

def @func_3402() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %1150 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1151 = %1150.0;
  %1152 = @func_2451() /* ty=Tensor[(630), bool] */;
  (%1151, %1152)
}

def @func_5837() -> (Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) {
  %1153 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %1154 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
  %1155 = %1154.2;
  %1156 = cast(%1155, dtype="float64") /* ty=Tensor[(224, 1), float64] */;
  %1157 = cast(meta[relay.Constant][48] /* ty=Tensor[(224, 7), float64] */, dtype="float64") /* ty=Tensor[(224, 7), float64] */;
  %1158 = %1153.0;
  %1159 = floor_divide(%1156, %1157) /* ty=Tensor[(224, 7), float64] */;
  (%1158, %1159)
}

def @func_15748() -> (Tensor[(630), bool],) {
  %1160 = @func_12950() /* ty=Tensor[(630), bool] */;
  (%1160,)
}

def @func_13847(%var_13844: Tensor[(40), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(40), float32]) {
  %1161 = @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */;
  %1162 = cast(%var_13844, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1163 = reshape(%1162, newshape=[2, 20]) /* ty=Tensor[(2, 20), float32] */;
  %1164 = @func_8618(%1163) /* ty=(Tensor[(224), float64], Tensor[(8, 5, 1), float32], Tensor[(2, 20), float32], Tensor[(2, 14, 8), float64]) */;
  %1165 = %1161.3;
  %1166 = %1164.3;
  (%1165, %1166, %var_13844)
}

def @func_8618(%var_8584: Tensor[(2, 20), float32]) -> (Tensor[(224), float64], Tensor[(8, 5, 1), float32], Tensor[(2, 20), float32], Tensor[(2, 14, 8), float64]) {
  %1167 = @func_8034() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) */;
  %1168 = cast(%var_8584, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %1169 = reshape(%1168, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float32] */;
  %1170 = @func_6920() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %1171 = %1167.3;
  %1172 = @func_411(%1169) /* ty=Tensor[(8, 5, 1), float32] */;
  %1173 = %1170.0;
  (%1171, %1172, %var_8584, %1173)
}

def @func_15683() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint64]) {
  %1174 = @func_11445() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), uint64], Tensor[(224), float64]) */;
  %1175 = @func_3799() /* ty=Tensor[(2, 14, 8), float64] */;
  %1176 = %1174.2;
  (%1175, %1176)
}

def @func_14148() -> Tensor[(630), bool] {
  @func_5469() /* ty=Tensor[(630), bool] */
}

def @func_17044() -> (Tensor[(224), float64], Tensor[(630), bool]) {
  %1177 = @func_2511() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */;
  %1178 = @func_12726() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %1179 = %1177.2;
  %1180 = %1178.1;
  (%1179, %1180)
}

def @func_16174() -> Tensor[(630), bool] {
  @func_1871() /* ty=Tensor[(630), bool] */
}

def @func_12025() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 6, 14), int64]) {
  %1181 = @func_7238() /* ty=(Tensor[(630), bool],) */;
  %1182 = @func_8470() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1183 = @func_5837() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */;
  %1184 = %1181.0;
  %1185 = %1182.0;
  %1186 = %1183.0;
  (%1184, %1185, %1186)
}

def @func_4362(%var_4334: Tensor[(5, 4, 5), float32], %var_4340: Tensor[(2, 128), float32]) -> (Tensor[(5, 4, 5), float32], Tensor[(630), bool], Tensor[(2, 128), float32]) {
  %1187 = cast(%var_4334, dtype="float32") /* ty=Tensor[(5, 4, 5), float32] */;
  %1188 = cast(%var_4340, dtype="float32") /* ty=Tensor[(2, 128), float32] */;
  %1189 = reshape(%1188, newshape=[1, 256]) /* ty=Tensor[(1, 256), float32] */;
  %1190 = @func_1962(%1189) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */;
  %1191 = exp(%1187) /* ty=Tensor[(5, 4, 5), float32] */;
  %1192 = %1190.1;
  (%1191, %1192, %var_4340)
}

def @func_6894() -> (Tensor[(2, 14, 8), float64],) {
  %1193 = @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */;
  %1194 = %1193.3;
  (%1194,)
}

def @func_16274() -> (Tensor[(2, 14, 8), float64],) {
  %1195 = @func_9601() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1196 = %1195.0;
  (%1196,)
}

def @func_6463(%var_6457: Tensor[(1, 4, 13), float32]) -> Tensor[(1, 4, 13), float32] {
  %1197 = cast(%var_6457, dtype="float32") /* ty=Tensor[(1, 4, 13), float32] */;
  cosh(%1197) /* ty=Tensor[(1, 4, 13), float32] */
}

def @func_7238() -> (Tensor[(630), bool],) {
  %1198 = @func_1871() /* ty=Tensor[(630), bool] */;
  (%1198,)
}

def @func_16766() -> Tensor[(2, 14, 8), float64] {
  @func_9592() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_6038() -> Tensor[(630), bool] {
  %1199 = @func_1935() /* ty=(Tensor[(630), bool],) */;
  %1199.0
}

def @func_11445() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), uint64], Tensor[(224), float64]) {
  %1200 = cast(meta[relay.Constant][49] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %1201 = reshape(%1200, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %1202 = @func_2451() /* ty=Tensor[(630), bool] */;
  %1203 = @func_6011() /* ty=Tensor[(630), bool] */;
  %1204 = @func_4829(%1201) /* ty=Tensor[(2, 14, 8), uint64] */;
  (%1202, %1203, %1204, meta[relay.Constant][49] /* ty=Tensor[(224), float64] */)
}

def @func_3472() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) {
  %1205 = cast(meta[relay.Constant][50] /* ty=Tensor[(224, 1), float64] */, dtype="float64") /* ty=Tensor[(224, 1), float64] */;
  %1206 = reshape(%1205, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %1207 = @func_230(%1206) /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1208 = @func_2451() /* ty=Tensor[(630), bool] */;
  %1209 = %1207.0;
  (%1208, %1209, meta[relay.Constant][50] /* ty=Tensor[(224, 1), float64] */)
}

def @func_10041(%var_10030: Tensor[(2, 14, 8), bool]) -> (Tensor[(2, 14, 8), bool], Tensor[(630), bool]) {
  %1210 = @func_9366() /* ty=Tensor[(2, 14, 8), bool] */;
  %1211 = cast(%var_10030, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %1212 = shape_of(%1210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1213 = cast(%1210, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %1214 = dyn.reshape(%1211, %1212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1215 = not_equal(%1213, %1214) /* ty=Tensor[(2, 14, 8), bool] */;
  %1216 = cast(%1215, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1217 = reshape(%1216, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %1218 = @func_6983(%1217) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %1219 = %1218.1;
  (%1215, %1219)
}

def @func_12522() -> (Tensor[(224), float64],) {
  %1220 = @func_9027() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %1221 = %1220.0;
  (%1221,)
}

def @func_15890() -> Tensor[(630), bool] {
  @func_5469() /* ty=Tensor[(630), bool] */
}

def @func_17116(%var_17110: Tensor[(15, 15, 6), int64], %var_17111: Tensor[(15, 15, 6), int64]) -> (Tensor[(15, 15, 6), int64],) {
  %1222 = cast(%var_17111, dtype="int64") /* ty=Tensor[(15, 15, 6), int64] */;
  %1223 = shape_of(%var_17110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1224 = cast(%var_17110, dtype="int64") /* ty=Tensor[(15, 15, 6), int64] */;
  %1225 = dyn.reshape(%1222, %1223, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1226 = logical_xor(%1224, %1225) /* ty=Tensor[(15, 15, 6), int64] */;
  (%1226,)
}

def @func_9383() -> Tensor[(630), bool] {
  @func_6038() /* ty=Tensor[(630), bool] */
}

def @func_17545() -> (Tensor[(630), bool],) {
  %1227 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %1228 = %1227.3;
  (%1228,)
}

def @func_11146(%var_11126: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) {
  %1229 = @func_4511() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %1230 = cast(%var_11126, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1231 = reshape(%1230, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %1232 = @func_6681(%1231) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %1233 = %1229.1;
  %1234 = %1232.3;
  (%1233, %1234, %var_11126)
}

def @func_9120() -> (Tensor[(2, 14, 8), float64],) {
  %1235 = @func_7146() /* ty=Tensor[(2, 14, 8), float64] */;
  (%1235,)
}

def @func_6983(%var_6978: Tensor[(224), float64]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64], Tensor[(630), bool]) {
  %1236 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1237 = cast(%var_6978, dtype="float64") /* ty=Tensor[(224), float64] */;
  %1238 = reshape(%1237, newshape=[112, 2]) /* ty=Tensor[(112, 2), float64] */;
  %1239 = @func_6088(%1238) /* ty=(Tensor[(330), float32], Tensor[(224), float64], Tensor[(112, 2), float64]) */;
  %1240 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1241 = @func_6011() /* ty=Tensor[(630), bool] */;
  %1242 = %1236.1;
  %1243 = %1239.1;
  %1244 = %1240.1;
  (%1241, %1242, %1243, %var_6978, %1244)
}

def @func_4258() -> (Tensor[(224, 1), float64], Tensor[(224), float64], Tensor[(10, 45), float64], Tensor[(630), bool], Tensor[(630), bool]) {
  %1245 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
  %1246 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %1247 = @func_2811() /* ty=(Tensor[(10, 45), bool],) */;
  %1248 = %1247.0;
  %1249 = cast(%1248, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %1250 = log10(%1249) /* ty=Tensor[(10, 45), float64] */;
  %1251 = cast(%1250, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %1252 = @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */;
  %1253 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1254 = %1245.2;
  %1255 = %1246.1;
  %1256 = rsqrt(%1251) /* ty=Tensor[(10, 45), float64] */;
  %1257 = %1252.0;
  %1258 = %1253.1;
  (%1254, %1255, %1256, %1257, %1258)
}

def @func_12448() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %1259 = @func_11895() /* ty=(Tensor[(630), bool],) */;
  %1260 = @func_11895() /* ty=(Tensor[(630), bool],) */;
  %1261 = %1259.0;
  %1262 = %1260.0;
  (%1261, %1262)
}

def @func_7856() -> (Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64]) {
  %1263 = @func_4657() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %1264 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %1265 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %1266 = %1263.2;
  %1267 = %1264.0;
  %1268 = %1265.1;
  (%1266, %1267, %1268)
}

def @func_14133() -> (Tensor[(2, 14, 8), float64], Tensor[(1, 16, 16), float64], Tensor[(256), float32]) {
  %1269 = cast(meta[relay.Constant][51] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %1270 = reshape(%1269, newshape=[1, 256]) /* ty=Tensor[(1, 256), float32] */;
  %1271 = @func_1962(%1270) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */;
  %1272 = @func_10612() /* ty=Tensor[(2, 14, 8), float64] */;
  %1273 = %1271.3;
  (%1272, %1273, meta[relay.Constant][51] /* ty=Tensor[(256), float32] */)
}

def @func_9623() -> (Tensor[(2, 14, 8), float64],) {
  %1274 = @func_3799() /* ty=Tensor[(2, 14, 8), float64] */;
  %1275 = cast(%1274, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1276 = atanh(%1275) /* ty=Tensor[(2, 14, 8), float64] */;
  (%1276,)
}

def @func_2907() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %1277 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1278 = @func_1271() /* ty=Tensor[(630), bool] */;
  %1279 = %1277.1;
  (%1278, %1279)
}

def @func_411(%var_408: Tensor[(8, 5, 1), float32]) -> Tensor[(8, 5, 1), float32] {
  %1280 = cast(%var_408, dtype="float32") /* ty=Tensor[(8, 5, 1), float32] */;
  acosh(%1280) /* ty=Tensor[(8, 5, 1), float32] */
}

def @func_8034() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) {
  %1281 = @func_6623() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1282 = @func_2306() /* ty=(Tensor[(2, 14, 8), float32],) */;
  %1283 = %1282.0;
  %1284 = cast(%1283, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1285 = reshape(%1284, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %1286 = @func_6983(%1285) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %1287 = %1281.0;
  %1288 = @func_7126() /* ty=Tensor[(630), bool] */;
  %1289 = %1286.3;
  (%1287, %1288, %1283, %1289)
}

def @func_5145(%var_5128: float32, %var_5129: Tensor[(15, 7, 11), float32]) -> (Tensor[(15, 7, 11), float32], Tensor[(630), bool]) {
  %1290 = cast(%var_5128, dtype="float32") /* ty=float32 */;
  %1291 = cast(%var_5129, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
  %1292 = floor_mod(%1290, %1291) /* ty=Tensor[(15, 7, 11), float32] */;
  %1293 = @func_2451() /* ty=Tensor[(630), bool] */;
  (%1292, %1293)
}

def @func_13374() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %1294 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1295 = %1294.0;
  %1296 = @func_11070() /* ty=Tensor[(630), bool] */;
  (%1295, %1296)
}

def @func_4829(%var_4824: Tensor[(2, 14, 8), float64]) -> Tensor[(2, 14, 8), uint64] {
  %1297 = @func_4657() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %1298 = %1297.1;
  %1299 = cast(%var_4824, dtype="uint64") /* ty=Tensor[(2, 14, 8), uint64] */;
  %1300 = shape_of(%1298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1301 = cast(%1298, dtype="uint64") /* ty=Tensor[(2, 14, 8), uint64] */;
  %1302 = dyn.reshape(%1299, %1300, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  minimum(%1301, %1302) /* ty=Tensor[(2, 14, 8), uint64] */
}

def @func_10802() -> (Tensor[(2, 14, 8), float64],) {
  %1303 = @func_4107() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1304 = %1303.0;
  (%1304,)
}

def @func_2586(%var_2582: Tensor[(224), float64]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64]) {
  %1305 = @func_2511() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */;
  %1306 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %1307 = cast(%var_2582, dtype="float64") /* ty=Tensor[(224), float64] */;
  %1308 = reshape(%1307, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %1309 = @func_2126(%1308) /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(128, 2), float32], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint8], Tensor[(2, 14, 8), float64]) */;
  %1310 = %1305.0;
  %1311 = %1306.0;
  %1312 = %1309.6;
  (%1310, %1311, %1312, %var_2582)
}

def @func_2451() -> Tensor[(630), bool] {
  %1313 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %1313.0
}

def @func_11607() -> (Tensor[(630), bool],) {
  %1314 = @func_7238() /* ty=(Tensor[(630), bool],) */;
  %1315 = %1314.0;
  (%1315,)
}

def @func_11816(%var_11783: Tensor[(1, 450), bool]) -> (Tensor[(630), bool], Tensor[(15, 15, 2), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 450), float32], Tensor[(112, 2), float64], Tensor[(630), bool]) {
  %1316 = @func_4947() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %1317 = cast(%var_11783, dtype="bool") /* ty=Tensor[(1, 450), bool] */;
  %1318 = reshape(%1317, newshape=[15, 15, 2]) /* ty=Tensor[(15, 15, 2), bool] */;
  %1319 = @func_1729(%1318) /* ty=(Tensor[(15, 15, 2), bool],) */;
  %1320 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1321 = cast(%var_11783, dtype="float64") /* ty=Tensor[(1, 450), float64] */;
  %1322 = log10(%1321) /* ty=Tensor[(1, 450), float64] */;
  %1323 = cast(%1322, dtype="float32") /* ty=Tensor[(1, 450), float32] */;
  %1324 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 450), float64] */, dtype="float32") /* ty=Tensor[(4, 450), float32] */;
  %1325 = %1320.0;
  %1326 = cast(%1325, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1327 = reshape(%1326, newshape=[112, 2]) /* ty=Tensor[(112, 2), float64] */;
  %1328 = @func_6088(%1327) /* ty=(Tensor[(330), float32], Tensor[(224), float64], Tensor[(112, 2), float64]) */;
  %1329 = %1316.1;
  %1330 = %1319.0;
  %1331 = add(%1323, %1324) /* ty=Tensor[(4, 450), float32] */;
  %1332 = %1328.2;
  %1333 = @func_6011() /* ty=Tensor[(630), bool] */;
  (%1329, %1330, %1325, %1331, %1332, %1333)
}

def @func_17441(%var_17396: Tensor[(30, 1), float64], %var_17407: Tensor[(30, 14), float64]) -> (Tensor[(2, 14, 8), float64], Tensor[(3, 10, 1), float64], Tensor[(256), float32], Tensor[(256), float32], Tensor[(55, 6), float32], Tensor[(2, 14, 8), float64], Tensor[(30, 14), int8], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %1334 = @func_10802() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1335 = cast(%var_17396, dtype="float64") /* ty=Tensor[(30, 1), float64] */;
  %1336 = reshape(%1335, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float64] */;
  %1337 = cast(meta[relay.Constant][53] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %1338 = cast(meta[relay.Constant][54] /* ty=Tensor[(55, 6), float32] */, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %1339 = reshape(%1337, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %1340 = reshape(%1338, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %1341 = @func_15376(%1339, %1340) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(735), float32], Tensor[(630), bool], Tensor[(13, 14, 10), bool], Tensor[(2, 14, 8), float64], Tensor[(100), float32], Tensor[(256), float32], Tensor[(330), float32]) */;
  %1342 = @func_4511() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %1343 = cast(%var_17396, dtype="int8") /* ty=Tensor[(30, 1), int8] */;
  %1344 = cast(%var_17407, dtype="int8") /* ty=Tensor[(30, 14), int8] */;
  %1345 = @func_14204() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1346 = @func_9623() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1347 = cast(meta[relay.Constant][54] /* ty=Tensor[(55, 6), float32] */, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %1348 = reshape(%1347, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %1349 = @func_10625(%1348) /* ty=(Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %1350 = %1334.0;
  %1351 = @func_10103(%1336) /* ty=Tensor[(3, 10, 1), float64] */;
  %1352 = %1341.7;
  %1353 = %1342.0;
  %1354 = add(%1343, %1344) /* ty=Tensor[(30, 14), int8] */;
  %1355 = %1345.0;
  %1356 = %1346.0;
  %1357 = %1349.0;
  (%1350, %1351, %1352, meta[relay.Constant][53] /* ty=Tensor[(256), float32] */, meta[relay.Constant][54] /* ty=Tensor[(55, 6), float32] */, %1353, %1354, %1355, %1356, %1357)
}

def @func_9691(%var_9676: Tensor[(70), float64]) -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(1, 14, 5), float32], Tensor[(70), float64]) {
  %1358 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1359 = @func_5935() /* ty=(Tensor[(630), bool],) */;
  %1360 = cast(%var_9676, dtype="float64") /* ty=Tensor[(70), float64] */;
  %1361 = reshape(%1360, newshape=[1, 14, 5]) /* ty=Tensor[(1, 14, 5), float64] */;
  %1362 = @func_8522(%1361) /* ty=(Tensor[(1, 14, 5), float32],) */;
  %1363 = %1358.0;
  %1364 = %1359.0;
  %1365 = %1362.0;
  (%1363, %1364, %1365, %var_9676)
}

def @func_15102() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) {
  %1366 = @func_4485() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1367 = @func_14133() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(1, 16, 16), float64], Tensor[(256), float32]) */;
  %1368 = %1367.0;
  %1369 = cast(%1368, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1370 = reshape(%1369, newshape=[4, 56]) /* ty=Tensor[(4, 56), float64] */;
  %1371 = @func_1529(%1370) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %1372 = @func_11070() /* ty=Tensor[(630), bool] */;
  %1373 = %1366.0;
  %1374 = %1371.2;
  (%1372, %1373, %1368, %1374)
}

def @func_16000() -> (Tensor[(3, 14, 15), bool],) {
  %1375 = @func_7213() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float32]) */;
  %1376 = %1375.2;
  (%1376,)
}

def @func_4284() -> (Tensor[(630), bool],) {
  %1377 = @func_2770() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */;
  %1378 = %1377.0;
  (%1378,)
}

def @func_9592() -> Tensor[(2, 14, 8), float64] {
  %1379 = @func_2770() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */;
  %1379.1
}

def @func_17056() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %1380 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %1381 = @func_13374() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1382 = %1380.1;
  %1383 = %1381.1;
  (%1382, %1383)
}

def @func_14924(%var_14918: Tensor[(6, 8, 8), uint32]) -> Tensor[(6, 8, 8), uint32] {
  %1384 = cast(%var_14918, dtype="uint32") /* ty=Tensor[(6, 8, 8), uint32] */;
  %1385 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(6, 8, 8), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1386 = cast(meta[relay.Constant][55] /* ty=Tensor[(6, 8, 8), uint32] */, dtype="uint32") /* ty=Tensor[(6, 8, 8), uint32] */;
  %1387 = dyn.reshape(%1384, %1385, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%1386, %1387) /* ty=Tensor[(6, 8, 8), uint32] */
}

def @func_1240() -> (Tensor[(630), bool],) {
  %1388 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %1389 = %1388.2;
  (%1389,)
}

def @func_11261() -> (Tensor[(2, 14, 8), float64],) {
  %1390 = @func_7146() /* ty=Tensor[(2, 14, 8), float64] */;
  (%1390,)
}

def @func_8221() -> Tensor[(630), bool] {
  %1391 = @func_6138() /* ty=(Tensor[(630), bool],) */;
  %1391.0
}

def @func_13702() -> Tensor[(2, 14, 8), float64] {
  @func_7146() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_12095() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 330), float32]) {
  %1392 = @func_9562() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %1393 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 330), float32] */, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %1394 = reshape(%1393, newshape=[5, 66]) /* ty=Tensor[(5, 66), float32] */;
  %1395 = @func_9959(%1394) /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(5, 66), float32]) */;
  %1396 = %1392.0;
  %1397 = %1395.1;
  (%1396, %1397, meta[relay.Constant][56] /* ty=Tensor[(1, 330), float32] */)
}

def @func_14652() -> (Tensor[(2, 14, 8), float64],) {
  %1398 = @func_12204() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %1399 = %1398.1;
  (%1399,)
}

def @func_14694() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %1400 = @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %1401 = @func_11103() /* ty=Tensor[(2, 14, 8), float64] */;
  %1402 = %1400.3;
  (%1401, %1402)
}

def @func_3929(%var_3925: Tensor[(11, 15, 2), float32]) -> (Tensor[(11, 15, 2), float32],) {
  %1403 = cast(%var_3925, dtype="float32") /* ty=Tensor[(11, 15, 2), float32] */;
  %1404 = asinh(%1403) /* ty=Tensor[(11, 15, 2), float32] */;
  (%1404,)
}

def @func_16048() -> (Tensor[(630), bool],) {
  %1405 = @func_12910() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1406 = %1405.1;
  (%1406,)
}

def @func_8565() -> (Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64]) {
  %1407 = @func_7213() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float32]) */;
  %1408 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %1409 = @func_7126() /* ty=Tensor[(630), bool] */;
  %1410 = %1407.2;
  %1411 = %1408.1;
  (%1409, %1410, %1411)
}

def @func_3839() -> Tensor[(224), float64] {
  %1412 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %1412.0
}

def @func_4851() -> Tensor[(630), bool] {
  %1413 = @func_4284() /* ty=(Tensor[(630), bool],) */;
  %1413.0
}

def @func_12768(%var_12736: Tensor[(5, 4, 6), float32], %var_12737: Tensor[(5, 4, 6), float32]) -> (Tensor[(5, 4, 6), float32], Tensor[(112, 2), float64], Tensor[(450), bool]) {
  %1414 = cast(%var_12737, dtype="float32") /* ty=Tensor[(5, 4, 6), float32] */;
  %1415 = shape_of(%var_12736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1416 = cast(%var_12736, dtype="float32") /* ty=Tensor[(5, 4, 6), float32] */;
  %1417 = dyn.reshape(%1414, %1415, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1418 = cast(meta[relay.Constant][57] /* ty=Tensor[(450), bool] */, dtype="bool") /* ty=Tensor[(450), bool] */;
  %1419 = reshape(%1418, newshape=[1, 450]) /* ty=Tensor[(1, 450), bool] */;
  %1420 = @func_11816(%1419) /* ty=(Tensor[(630), bool], Tensor[(15, 15, 2), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 450), float32], Tensor[(112, 2), float64], Tensor[(630), bool]) */;
  %1421 = power(%1416, %1417) /* ty=Tensor[(5, 4, 6), float32] */;
  %1422 = %1420.4;
  (%1421, %1422, meta[relay.Constant][57] /* ty=Tensor[(450), bool] */)
}

def @func_10491(%var_10457: Tensor[(256), float32], %var_10458: int64) -> (Tensor[(630), bool], int64, Tensor[(256), float32], int64, Tensor[(40), float32], Tensor[(2, 14, 8), bool]) {
  %1423 = @func_4657() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %1424 = cast(%var_10457, dtype="float32") /* ty=Tensor[(256), float32] */;
  %1425 = cast(%var_10458, dtype="int64") /* ty=int64 */;
  %1426 = cast(meta[relay.Constant][58] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1427 = reshape(%1424, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %1428 = reshape(%1425, newshape=[]) /* ty=int64 */;
  %1429 = reshape(%1426, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %1430 = @func_10328(%1427, %1428, %1429) /* ty=(Tensor[(256), float32], Tensor[(280), int64], int64, Tensor[(40), float32], Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool]) */;
  %1431 = %1423.2;
  %1432 = %1430.2;
  %1433 = @func_9366() /* ty=Tensor[(2, 14, 8), bool] */;
  (%1431, %1432, %var_10457, %var_10458, meta[relay.Constant][58] /* ty=Tensor[(40), float32] */, %1433)
}

def @func_4657() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %1434 = @func_2634() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1435 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %1436 = @func_3875() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) */;
  %1437 = %1434.0;
  %1438 = %1435.0;
  %1439 = %1436.2;
  (%1437, %1438, %1439)
}

def @func_8214(%var_8173: Tensor[(13, 4), float32]) -> (Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 4, 13), float32], Tensor[(13, 4), float32], Tensor[(2, 14, 8), float64], Tensor[(735), float32], Tensor[(630), bool], Tensor[(2, 14, 8), int16], Tensor[(40), float32]) {
  %1440 = @func_6998() /* ty=(Tensor[(630), bool],) */;
  %1441 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %1442 = @func_6894() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1443 = cast(%var_8173, dtype="float32") /* ty=Tensor[(13, 4), float32] */;
  %1444 = reshape(%1443, newshape=[1, 4, 13]) /* ty=Tensor[(1, 4, 13), float32] */;
  %1445 = cast(meta[relay.Constant][59] /* ty=Tensor[(735), float32] */, dtype="float32") /* ty=Tensor[(735), float32] */;
  %1446 = reshape(%1445, newshape=[7, 7, 15]) /* ty=Tensor[(7, 7, 15), float32] */;
  %1447 = @func_2863(%1446) /* ty=(Tensor[(7, 7, 15), float32], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64], Tensor[(630), bool]) */;
  %1448 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %1449 = cast(meta[relay.Constant][60] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1450 = reshape(%1449, newshape=[20, 2]) /* ty=Tensor[(20, 2), float32] */;
  %1451 = @func_5087(%1450) /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), int16], Tensor[(8, 5, 1), float32], Tensor[(20, 2), float32]) */;
  %1452 = %1440.0;
  %1453 = %1441.1;
  %1454 = %1442.0;
  %1455 = @func_6463(%1444) /* ty=Tensor[(1, 4, 13), float32] */;
  %1456 = %1447.1;
  %1457 = %1448.2;
  %1458 = %1451.1;
  (%1452, %1453, %1454, %1455, %var_8173, %1456, meta[relay.Constant][59] /* ty=Tensor[(735), float32] */, %1457, %1458, meta[relay.Constant][60] /* ty=Tensor[(40), float32] */)
}

def @func_11895() -> (Tensor[(630), bool],) {
  %1459 = @func_8742() /* ty=(Tensor[(630), bool], Tensor[(224), float64]) */;
  %1460 = %1459.0;
  (%1460,)
}

def @func_7400() -> (Tensor[(630), bool],) {
  %1461 = @func_6038() /* ty=Tensor[(630), bool] */;
  (%1461,)
}

def @func_4107() -> (Tensor[(2, 14, 8), float64],) {
  %1462 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
  %1463 = %1462.1;
  (%1463,)
}

def @func_11217() -> Tensor[(630), bool] {
  @func_1366() /* ty=Tensor[(630), bool] */
}

def @func_12603() -> (Tensor[(2, 14, 8), float32], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %1464 = @func_2306() /* ty=(Tensor[(2, 14, 8), float32],) */;
  %1465 = @func_3138() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1466 = %1464.0;
  %1467 = %1465.1;
  %1468 = @func_3799() /* ty=Tensor[(2, 14, 8), float64] */;
  (%1466, %1467, %1468)
}

def @func_12875() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint64], Tensor[(224), float64], Tensor[(2, 14, 8), bool], Tensor[(630), bool]) {
  %1469 = @func_10591() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %1470 = %1469.2;
  %1471 = cast(meta[relay.Constant][61] /* ty=Tensor[(2, 14, 8), float64] */, dtype="uint64") /* ty=Tensor[(2, 14, 8), uint64] */;
  %1472 = shape_of(%1470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1473 = cast(%1470, dtype="uint64") /* ty=Tensor[(2, 14, 8), uint64] */;
  %1474 = dyn.reshape(%1471, %1472, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1475 = @func_4947() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %1476 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1477 = @func_7916() /* ty=Tensor[(2, 14, 8), float64] */;
  %1478 = right_shift(%1473, %1474) /* ty=Tensor[(2, 14, 8), uint64] */;
  %1479 = %1475.0;
  %1480 = @func_9366() /* ty=Tensor[(2, 14, 8), bool] */;
  %1481 = %1476.0;
  (%1477, %1478, %1479, %1480, %1481)
}

def @func_15596() -> Tensor[(3, 14, 15), float64] {
  %1482 = @func_5257() /* ty=Tensor[(3, 14, 15), bool] */;
  %1483 = cast(%1482, dtype="float64") /* ty=Tensor[(3, 14, 15), float64] */;
  sin(%1483) /* ty=Tensor[(3, 14, 15), float64] */
}

def @func_16603() -> (Tensor[(2, 14, 8), float64],) {
  %1484 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %1485 = %1484.1;
  (%1485,)
}

def @func_13560() -> (Tensor[(224), float64], Tensor[(630), bool]) {
  %1486 = @func_11170() /* ty=(Tensor[(224), float64],) */;
  %1487 = @func_1935() /* ty=(Tensor[(630), bool],) */;
  %1488 = %1486.0;
  %1489 = %1487.0;
  (%1488, %1489)
}

def @func_1575() -> (Tensor[(2, 14, 8), float64],) {
  %1490 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %1491 = %1490.5;
  (%1491,)
}

def @func_8410() -> (Tensor[(630), bool], Tensor[(224), float64]) {
  %1492 = @func_6258() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), float64]) */;
  %1493 = @func_4137() /* ty=(Tensor[(224), float64],) */;
  %1494 = %1492.1;
  %1495 = %1493.0;
  (%1494, %1495)
}

def @func_13906(%var_13867: Tensor[(15, 8, 1), float32], %var_13868: Tensor[(15, 8, 14), float32]) -> (Tensor[(15, 8, 14), float32],) {
  %1496 = cast(%var_13867, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %1497 = cast(%var_13868, dtype="float32") /* ty=Tensor[(15, 8, 14), float32] */;
  %1498 = mod(%1496, %1497) /* ty=Tensor[(15, 8, 14), float32] */;
  (%1498,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6681(%var_6679: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) {
  %0 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1 = @func_2511() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */;
  %2 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %3 = cast(%var_6679, dtype="float32") /* ty=Tensor[(330), float32] */;
  %4 = reshape(%3, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), float32] */;
  %5 = @func_3929(%4) /* ty=(Tensor[(11, 15, 2), float32],) */;
  %6 = %0.1;
  %7 = %1.1;
  %8 = %2.1;
  %9 = %5.0;
  (%6, %7, %8, %9, %var_6679)
}

def @func_7768(%var_7765: uint16, %var_7766: Tensor[(7, 11, 1), uint16], %var_7767: Tensor[(735), float32]) -> (Tensor[(7, 11, 1), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(7, 7, 15), float32], Tensor[(735), float32], Tensor[(7, 11, 1), uint8], Tensor[(630), bool]) {
  @func_7763(%var_7765, %var_7766, %var_7767) /* ty=(Tensor[(7, 11, 1), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(7, 7, 15), float32], Tensor[(735), float32], Tensor[(7, 11, 1), uint8], Tensor[(630), bool]) */
}

def @func_10190(%var_10187: Tensor[(13, 14, 1), int64], %var_10188: Tensor[(13, 14, 10), int64], %var_10189: Tensor[(13, 14, 10), bool]) -> (Tensor[(13, 14, 10), bool],) {
  @func_10185(%var_10187, %var_10188, %var_10189) /* ty=(Tensor[(13, 14, 10), bool],) */
}

def @func_7524(%var_7506: Tensor[(2, 14, 8), float64], %var_7518: Tensor[(2, 14, 8), float64]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), int8]) {
  %10 = @func_4442() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %11 = @func_4442() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %12 = %11.2;
  %13 = cast(%var_7506, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%12, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %17 = cast(%var_7518, dtype="int8") /* ty=Tensor[(2, 14, 8), int8] */;
  %18 = shape_of(%var_7506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%var_7506, dtype="int8") /* ty=Tensor[(2, 14, 8), int8] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %21 = %10.1;
  %22 = equal(%15, %16) /* ty=Tensor[(2, 14, 8), bool] */;
  %23 = bitwise_or(%19, %20) /* ty=Tensor[(2, 14, 8), int8] */;
  (%21, %22, %23)
}

def @func_14204() -> (Tensor[(2, 14, 8), float64],) {
  %24 = @func_9623() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %25 = %24.0;
  (%25,)
}

def @main(%var_17735: Tensor[(5, 6, 10), float32]) -> (Tensor[(5, 6, 10), float32],) {
  %26 = cast(%var_17735, dtype="float32") /* ty=Tensor[(5, 6, 10), float32] */;
  %27 = acos(%26) /* ty=Tensor[(5, 6, 10), float32] */;
  (%27,)
}

def @func_3560() -> (Tensor[(3, 14, 15), bool],) {
  %30 = fn () -> (Tensor[(3, 14, 15), bool],) {
    %28 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
    %29 = %28.1;
    (%29,)
  };
  %30() /* ty=(Tensor[(3, 14, 15), bool],) */
}

def @func_6625() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  @func_6623() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_12161(%var_12154: Tensor[(2, 14, 8), float64]) -> (Tensor[(2, 14, 8), int64],) {
  %31 = @func_8565() /* ty=(Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64]) */;
  %32 = %31.2;
  %33 = cast(%var_12154, dtype="int64") /* ty=Tensor[(2, 14, 8), int64] */;
  %34 = shape_of(%32, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%32, dtype="int64") /* ty=Tensor[(2, 14, 8), int64] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %37 = bitwise_xor(%35, %36) /* ty=Tensor[(2, 14, 8), int64] */;
  (%37,)
}

def @func_12877() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint64], Tensor[(224), float64], Tensor[(2, 14, 8), bool], Tensor[(630), bool]) {
  @func_12875() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint64], Tensor[(224), float64], Tensor[(2, 14, 8), bool], Tensor[(630), bool]) */
}

def @func_15379(%var_15377: Tensor[(256), float32], %var_15378: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(735), float32], Tensor[(630), bool], Tensor[(13, 14, 10), bool], Tensor[(2, 14, 8), float64], Tensor[(100), float32], Tensor[(256), float32], Tensor[(330), float32]) {
  %58 = fn (%var_15369: Tensor[(256), float32], %var_15370: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(735), float32], Tensor[(630), bool], Tensor[(13, 14, 10), bool], Tensor[(2, 14, 8), float64], Tensor[(100), float32], Tensor[(256), float32], Tensor[(330), float32]) {
    %38 = @func_11607() /* ty=(Tensor[(630), bool],) */;
    %39 = cast(meta[relay.Constant][0] /* ty=Tensor[(735), float32] */, dtype="float32") /* ty=Tensor[(735), float32] */;
    %40 = reshape(%39, newshape=[7, 7, 15]) /* ty=Tensor[(7, 7, 15), float32] */;
    %41 = @func_2863(%40) /* ty=(Tensor[(7, 7, 15), float32], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64], Tensor[(630), bool]) */;
    %42 = @func_11895() /* ty=(Tensor[(630), bool],) */;
    %43 = @func_14740() /* ty=(Tensor[(3, 14, 15), bool], Tensor[(13, 14, 10), bool], Tensor[(182), int64], Tensor[(1820), int64]) */;
    %44 = %41.1;
    %45 = cast(%44, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
    %46 = reshape(%45, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
    %47 = @func_2126(%46) /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(128, 2), float32], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint8], Tensor[(2, 14, 8), float64]) */;
    %48 = cast(%var_15369, dtype="float32") /* ty=Tensor[(256), float32] */;
    %49 = cast(%var_15370, dtype="float32") /* ty=Tensor[(330), float32] */;
    %50 = reshape(%48, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %51 = reshape(%49, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %52 = @func_7108(%50, %51) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(100), float32], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(330), float32], Tensor[(2, 128), int8]) */;
    %53 = %38.0;
    %54 = %42.0;
    %55 = %43.1;
    %56 = %47.4;
    %57 = %52.2;
    (%53, %44, meta[relay.Constant][0] /* ty=Tensor[(735), float32] */, %54, %55, %56, %57, %var_15369, %var_15370)
  };
  %58(%var_15377, %var_15378) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(735), float32], Tensor[(630), bool], Tensor[(13, 14, 10), bool], Tensor[(2, 14, 8), float64], Tensor[(100), float32], Tensor[(256), float32], Tensor[(330), float32]) */
}

def @func_2635() -> (Tensor[(2, 14, 8), float64],) {
  %61 = fn () -> (Tensor[(2, 14, 8), float64],) {
    %59 = @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */;
    %60 = %59.3;
    (%60,)
  };
  %61() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_233(%var_231: Tensor[(2, 14, 8), float64]) -> (Tensor[(2, 14, 8), float64],) {
  @func_230(%var_231) /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_6986(%var_6984: Tensor[(224), float64]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64], Tensor[(630), bool]) {
  @func_6983(%var_6984) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64], Tensor[(630), bool]) */
}

def @func_2995() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %69 = fn () -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
    %62 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %63 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %64 = %62.0;
    %65 = @func_1871() /* ty=Tensor[(630), bool] */;
    %66 = @func_2451() /* ty=Tensor[(630), bool] */;
    %67 = @func_1871() /* ty=Tensor[(630), bool] */;
    %68 = %63.0;
    (%64, %65, %66, %67, %68)
  };
  %69() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */
}

def @func_8494() -> Tensor[(2, 14, 8), float64] {
  %71 = fn () -> Tensor[(2, 14, 8), float64] {
    %70 = @func_8470() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %70.0
  };
  %71() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_17492() -> (Tensor[(630), bool],) {
  @func_17490() /* ty=(Tensor[(630), bool],) */
}

def @func_12026() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 6, 14), int64]) {
  %78 = fn () -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 6, 14), int64]) {
    %72 = @func_7238() /* ty=(Tensor[(630), bool],) */;
    %73 = @func_8470() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %74 = @func_5837() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */;
    %75 = %72.0;
    %76 = %73.0;
    %77 = %74.0;
    (%75, %76, %77)
  };
  %78() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 6, 14), int64]) */
}

def @func_14654() -> (Tensor[(2, 14, 8), float64],) {
  @func_14652() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_8471() -> (Tensor[(2, 14, 8), float64],) {
  %80 = fn () -> (Tensor[(2, 14, 8), float64],) {
    %79 = @func_7146() /* ty=Tensor[(2, 14, 8), float64] */;
    (%79,)
  };
  %80() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_10803() -> (Tensor[(2, 14, 8), float64],) {
  %83 = fn () -> (Tensor[(2, 14, 8), float64],) {
    %81 = @func_4107() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %82 = %81.0;
    (%82,)
  };
  %83() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_17343() -> (Tensor[(2, 14, 8), float64],) {
  %84 = @func_17056() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %85 = %84.0;
  (%85,)
}

def @func_9693(%var_9692: Tensor[(70), float64]) -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(1, 14, 5), float32], Tensor[(70), float64]) {
  %94 = fn (%var_9676: Tensor[(70), float64]) -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(1, 14, 5), float32], Tensor[(70), float64]) {
    %86 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %87 = @func_5935() /* ty=(Tensor[(630), bool],) */;
    %88 = cast(%var_9676, dtype="float64") /* ty=Tensor[(70), float64] */;
    %89 = reshape(%88, newshape=[1, 14, 5]) /* ty=Tensor[(1, 14, 5), float64] */;
    %90 = @func_8522(%89) /* ty=(Tensor[(1, 14, 5), float32],) */;
    %91 = %86.0;
    %92 = %87.0;
    %93 = %90.0;
    (%91, %92, %93, %var_9676)
  };
  %94(%var_9692) /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(1, 14, 5), float32], Tensor[(70), float64]) */
}

def @func_9250(%var_9247: Tensor[(13, 14, 12), float64], %var_9248: Tensor[(13, 14, 12), float64], %var_9249: Tensor[(100), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(100), float32], Tensor[(2, 128), bool]) {
  %114 = fn (%var_9221: Tensor[(13, 14, 12), float64], %var_9222: Tensor[(13, 14, 12), float64], %var_9239: Tensor[(100), float32]) -> (Tensor[(13, 14, 12), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(100), float32], Tensor[(2, 128), bool]) {
    %95 = cast(%var_9222, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %96 = shape_of(%var_9221, dtype="int32") /* ty=Tensor[(3), int32] */;
    %97 = cast(%var_9221, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %99 = @func_4511() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
    %100 = cast(%var_9239, dtype="float32") /* ty=Tensor[(100), float32] */;
    %101 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 16), float32] */, dtype="float32") /* ty=Tensor[(16, 16), float32] */;
    %102 = reshape(%100, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), float32] */;
    %103 = reshape(%101, newshape=[2, 128]) /* ty=Tensor[(2, 128), float32] */;
    %104 = @func_4362(%102, %103) /* ty=(Tensor[(5, 4, 5), float32], Tensor[(630), bool], Tensor[(2, 128), float32]) */;
    %105 = %104.2;
    %106 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 16), float32] */, dtype="bool") /* ty=Tensor[(16, 16), bool] */;
    %107 = shape_of(%105, dtype="int32") /* ty=Tensor[(2), int32] */;
    %108 = cast(%105, dtype="bool") /* ty=Tensor[(2, 128), bool] */;
    %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %110 = power(%97, %98) /* ty=Tensor[(13, 14, 12), float64] */;
    %111 = %99.2;
    %112 = @func_7146() /* ty=Tensor[(2, 14, 8), float64] */;
    %113 = greater(%108, %109) /* ty=Tensor[(2, 128), bool] */;
    (%110, %111, %112, %var_9239, %113)
  };
  %114(%var_9247, %var_9248, %var_9249) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(100), float32], Tensor[(2, 128), bool]) */
}

def @func_16050() -> (Tensor[(630), bool],) {
  @func_16048() /* ty=(Tensor[(630), bool],) */
}

def @func_17080() -> Tensor[(2, 14, 8), bool] {
  %115 = @func_7559() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), bool]) */;
  %115.1
}

def @func_6088(%var_6083: Tensor[(112, 2), float64]) -> (Tensor[(330), float32], Tensor[(224), float64], Tensor[(112, 2), float64]) {
  %116 = @func_5030() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %117 = cast(%var_6083, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  %118 = reshape(%117, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %119 = @func_2586(%118) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %120 = %116.3;
  %121 = %119.3;
  (%120, %121, %var_6083)
}

def @func_16678(%var_16676: Tensor[(1, 6, 4), float64], %var_16677: Tensor[(40, 1), float32]) -> (Tensor[(?, 6, 4), bool], Tensor[(?, 6, 4), uint64], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool], int64, Tensor[(40, 1), float32]) {
  @func_16674(%var_16676, %var_16677) /* ty=(Tensor[(?, 6, 4), bool], Tensor[(?, 6, 4), uint64], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool], int64, Tensor[(40, 1), float32]) */
}

def @func_2190() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */
}

def @func_2771() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) {
  %143 = fn () -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) {
    %122 = @func_1240() /* ty=(Tensor[(630), bool],) */;
    %123 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
    %124 = %123.1;
    %125 = cast(%124, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
    %126 = exp(%125) /* ty=Tensor[(2, 14, 8), float64] */;
    %127 = cast(%126, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
    %128 = @func_2511() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */;
    %129 = %128.2;
    %130 = cast(%129, dtype="float64") /* ty=Tensor[(224), float64] */;
    %131 = reshape(%130, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
    %132 = @func_230(%131) /* ty=(Tensor[(2, 14, 8), float64],) */;
    %133 = @func_2511() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */;
    %134 = cast(%124, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
    %135 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
    %136 = cast(%126, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
    %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %138 = %122.0;
    %139 = tan(%127) /* ty=Tensor[(2, 14, 8), float64] */;
    %140 = %132.0;
    %141 = %133.4;
    %142 = less_equal(%136, %137) /* ty=Tensor[(2, 14, 8), bool] */;
    (%138, %139, %129, %140, %141, %142)
  };
  %143() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */
}

def @func_8217(%var_8215: Tensor[(13, 4), float32]) -> (Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 4, 13), float32], Tensor[(13, 4), float32], Tensor[(2, 14, 8), float64], Tensor[(735), float32], Tensor[(630), bool], Tensor[(2, 14, 8), int16], Tensor[(40), float32]) {
  @func_8214(%var_8215) /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 4, 13), float32], Tensor[(13, 4), float32], Tensor[(2, 14, 8), float64], Tensor[(735), float32], Tensor[(630), bool], Tensor[(2, 14, 8), int16], Tensor[(40), float32]) */
}

def @func_14431() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %144 = @func_12910() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %145 = @func_6894() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %146 = %144.0;
  %147 = %145.0;
  (%146, %147)
}

def @func_4657() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %148 = @func_2634() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %149 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %150 = @func_3875() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) */;
  %151 = %148.0;
  %152 = %149.0;
  %153 = %150.2;
  (%151, %152, %153)
}

def @func_8035() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) {
  %163 = fn () -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) {
    %154 = @func_6623() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %155 = @func_2306() /* ty=(Tensor[(2, 14, 8), float32],) */;
    %156 = %155.0;
    %157 = cast(%156, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
    %158 = reshape(%157, newshape=[224]) /* ty=Tensor[(224), float64] */;
    %159 = @func_6983(%158) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
    %160 = %154.0;
    %161 = @func_7126() /* ty=Tensor[(630), bool] */;
    %162 = %159.3;
    (%160, %161, %156, %162)
  };
  %163() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) */
}

def @func_2357() -> (Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) {
  %164 = @func_1474() /* ty=(Tensor[(630), bool],) */;
  %165 = cast(meta[relay.Constant][2] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %166 = reshape(%165, newshape=[1, 16, 16]) /* ty=Tensor[(1, 16, 16), float32] */;
  %167 = %164.0;
  %168 = @func_1558(%166) /* ty=Tensor[(1, 16, 16), float64] */;
  %169 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
  (%167, %168, meta[relay.Constant][2] /* ty=Tensor[(256), float32] */, %169)
}

def @func_4444() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  @func_4442() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */
}

def @func_9148() -> (Tensor[(2, 14, 8), float64],) {
  %171 = fn () -> (Tensor[(2, 14, 8), float64],) {
    %170 = @func_8493() /* ty=Tensor[(2, 14, 8), float64] */;
    (%170,)
  };
  %171() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_9384() -> Tensor[(630), bool] {
  %172 = fn () -> Tensor[(630), bool] {
    @func_6038() /* ty=Tensor[(630), bool] */
  };
  %172() /* ty=Tensor[(630), bool] */
}

def @func_8314(%var_8313: Tensor[(256), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(256), float32]) {
  %178 = fn (%var_8289: Tensor[(256), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(256), float32]) {
    %173 = cast(%var_8289, dtype="float32") /* ty=Tensor[(256), float32] */;
    %174 = reshape(%173, newshape=[1, 256]) /* ty=Tensor[(1, 256), float32] */;
    %175 = @func_1962(%174) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */;
    %176 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
    %177 = %175.0;
    (%176, %177, %var_8289)
  };
  %178(%var_8313) /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(256), float32]) */
}

def @func_15636(%var_15635: Tensor[(256), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), int32], Tensor[(630), bool], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) {
  %190 = fn (%var_15622: Tensor[(256), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), int32], Tensor[(630), bool], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) {
    %179 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
    %180 = cast(meta[relay.Constant][3] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
    %181 = cast(%var_15622, dtype="float32") /* ty=Tensor[(256), float32] */;
    %182 = cast(meta[relay.Constant][3] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
    %183 = reshape(%180, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
    %184 = reshape(%181, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %185 = reshape(%182, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
    %186 = @func_6874(%183, %184, %185) /* ty=(Tensor[(3, 14, 15), float32], Tensor[(1, 256), float32], Tensor[(256), float32], Tensor[(3, 14, 15), bool], Tensor[(3, 14, 15), int32], Tensor[(630), bool]) */;
    %187 = %179.1;
    %188 = %186.4;
    %189 = @func_8493() /* ty=Tensor[(2, 14, 8), float64] */;
    (%187, %188, meta[relay.Constant][3] /* ty=Tensor[(630), bool] */, %var_15622, %189)
  };
  %190(%var_15635) /* ty=(Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), int32], Tensor[(630), bool], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */
}

def @func_3138() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %191 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %192 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %193 = %191.1;
  %194 = %192.2;
  (%193, %194)
}

def @func_13040(%var_13039: Tensor[(224, 630), float32]) -> Tensor[(224, 630), bool] {
  %200 = fn (%var_13026: Tensor[(224, 630), float32]) -> Tensor[(224, 630), bool] {
    %195 = @func_4016() /* ty=Tensor[(224, 630), float32] */;
    %196 = cast(%var_13026, dtype="bool") /* ty=Tensor[(224, 630), bool] */;
    %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(2), int32] */;
    %198 = cast(%195, dtype="bool") /* ty=Tensor[(224, 630), bool] */;
    %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    less_equal(%198, %199) /* ty=Tensor[(224, 630), bool] */
  };
  %200(%var_13039) /* ty=Tensor[(224, 630), bool] */
}

def @func_4783() -> (Tensor[(3, 14, 15), bool],) {
  %201 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %202 = %201.1;
  (%202,)
}

def @func_10778() -> Tensor[(2, 14, 8), float64] {
  @func_7146() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_1871() -> Tensor[(630), bool] {
  @func_1271() /* ty=Tensor[(630), bool] */
}

def @func_15684() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint64]) {
  %206 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint64]) {
    %203 = @func_11445() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), uint64], Tensor[(224), float64]) */;
    %204 = @func_3799() /* ty=Tensor[(2, 14, 8), float64] */;
    %205 = %203.2;
    (%204, %205)
  };
  %206() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint64]) */
}

def @func_16192() -> (Tensor[(224), float64],) {
  @func_16190() /* ty=(Tensor[(224), float64],) */
}

def @func_10612() -> Tensor[(2, 14, 8), float64] {
  %207 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %207.0
}

def @func_6463(%var_6457: Tensor[(1, 4, 13), float32]) -> Tensor[(1, 4, 13), float32] {
  %208 = cast(%var_6457, dtype="float32") /* ty=Tensor[(1, 4, 13), float32] */;
  cosh(%208) /* ty=Tensor[(1, 4, 13), float32] */
}

def @func_3929(%var_3925: Tensor[(11, 15, 2), float32]) -> (Tensor[(11, 15, 2), float32],) {
  %209 = cast(%var_3925, dtype="float32") /* ty=Tensor[(11, 15, 2), float32] */;
  %210 = asinh(%209) /* ty=Tensor[(11, 15, 2), float32] */;
  (%210,)
}

def @func_8743() -> (Tensor[(630), bool], Tensor[(224), float64]) {
  %215 = fn () -> (Tensor[(630), bool], Tensor[(224), float64]) {
    %211 = @func_3138() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %212 = @func_5752() /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(8, 10, 3), float32]) */;
    %213 = %211.0;
    %214 = %212.0;
    (%213, %214)
  };
  %215() /* ty=(Tensor[(630), bool], Tensor[(224), float64]) */
}

def @func_13347() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  @func_13345() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */
}

def @func_14804() -> (Tensor[(630), bool],) {
  %217 = fn () -> (Tensor[(630), bool],) {
    %216 = @func_1271() /* ty=Tensor[(630), bool] */;
    (%216,)
  };
  %217() /* ty=(Tensor[(630), bool],) */
}

def @func_8110(%var_8109: Tensor[(256), float32]) -> (Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %231 = fn (%var_8051: Tensor[(256), float32]) -> (Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
    %218 = cast(%var_8051, dtype="float32") /* ty=Tensor[(256), float32] */;
    %219 = reshape(%218, newshape=[1, 256]) /* ty=Tensor[(1, 256), float32] */;
    %220 = @func_1962(%219) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */;
    %221 = @func_6920() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
    %222 = @func_7856() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64]) */;
    %223 = @func_3402() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
    %224 = @func_6920() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
    %225 = @func_2451() /* ty=Tensor[(630), bool] */;
    %226 = %220.3;
    %227 = %221.1;
    %228 = %222.0;
    %229 = %223.0;
    %230 = %224.1;
    (%225, %226, %var_8051, %227, %228, %229, %230)
  };
  %231(%var_8109) /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */
}

def @func_8621(%var_8619: Tensor[(2, 20), float32]) -> (Tensor[(224), float64], Tensor[(8, 5, 1), float32], Tensor[(2, 20), float32], Tensor[(2, 14, 8), float64]) {
  @func_8618(%var_8619) /* ty=(Tensor[(224), float64], Tensor[(8, 5, 1), float32], Tensor[(2, 20), float32], Tensor[(2, 14, 8), float64]) */
}

def @func_11170() -> (Tensor[(224), float64],) {
  %232 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %233 = %232.0;
  (%233,)
}

def @func_6874(%var_6808: Tensor[(3, 14, 15), bool], %var_6821: Tensor[(256), float32], %var_6859: Tensor[(3, 14, 15), bool]) -> (Tensor[(3, 14, 15), float32], Tensor[(1, 256), float32], Tensor[(256), float32], Tensor[(3, 14, 15), bool], Tensor[(3, 14, 15), int32], Tensor[(630), bool]) {
  %234 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %235 = %234.0;
  %236 = cast(%var_6808, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %237 = shape_of(%235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%235, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %240 = less_equal(%238, %239) /* ty=Tensor[(3, 14, 15), bool] */;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(3, 14, 15), float32] */;
  %242 = shape_of(%235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%235, dtype="float32") /* ty=Tensor[(3, 14, 15), float32] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %245 = cast(%var_6821, dtype="float32") /* ty=Tensor[(256), float32] */;
  %246 = reshape(%245, newshape=[1, 256]) /* ty=Tensor[(1, 256), float32] */;
  %247 = @func_1962(%246) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */;
  %248 = @func_6751() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %249 = cast(%var_6859, dtype="int32") /* ty=Tensor[(3, 14, 15), int32] */;
  %250 = shape_of(%235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%235, dtype="int32") /* ty=Tensor[(3, 14, 15), int32] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %253 = @func_1935() /* ty=(Tensor[(630), bool],) */;
  %254 = floor_mod(%243, %244) /* ty=Tensor[(3, 14, 15), float32] */;
  %255 = %247.4;
  %256 = %248.0;
  %257 = multiply(%251, %252) /* ty=Tensor[(3, 14, 15), int32] */;
  %258 = %253.0;
  (%254, %255, %var_6821, %256, %257, %258)
}

def @func_11146(%var_11126: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) {
  %259 = @func_4511() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %260 = cast(%var_11126, dtype="float32") /* ty=Tensor[(330), float32] */;
  %261 = reshape(%260, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %262 = @func_6681(%261) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %263 = %259.1;
  %264 = %262.3;
  (%263, %264, %var_11126)
}

def @func_17441(%var_17396: Tensor[(30, 1), float64], %var_17407: Tensor[(30, 14), float64]) -> (Tensor[(2, 14, 8), float64], Tensor[(3, 10, 1), float64], Tensor[(256), float32], Tensor[(256), float32], Tensor[(55, 6), float32], Tensor[(2, 14, 8), float64], Tensor[(30, 14), int8], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %265 = @func_10802() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %266 = cast(%var_17396, dtype="float64") /* ty=Tensor[(30, 1), float64] */;
  %267 = reshape(%266, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float64] */;
  %268 = cast(meta[relay.Constant][4] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %269 = cast(meta[relay.Constant][5] /* ty=Tensor[(55, 6), float32] */, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %270 = reshape(%268, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %271 = reshape(%269, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %272 = @func_15376(%270, %271) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(735), float32], Tensor[(630), bool], Tensor[(13, 14, 10), bool], Tensor[(2, 14, 8), float64], Tensor[(100), float32], Tensor[(256), float32], Tensor[(330), float32]) */;
  %273 = @func_4511() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %274 = cast(%var_17396, dtype="int8") /* ty=Tensor[(30, 1), int8] */;
  %275 = cast(%var_17407, dtype="int8") /* ty=Tensor[(30, 14), int8] */;
  %276 = @func_14204() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %277 = @func_9623() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %278 = cast(meta[relay.Constant][5] /* ty=Tensor[(55, 6), float32] */, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %279 = reshape(%278, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %280 = @func_10625(%279) /* ty=(Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %281 = %265.0;
  %282 = @func_10103(%267) /* ty=Tensor[(3, 10, 1), float64] */;
  %283 = %272.7;
  %284 = %273.0;
  %285 = add(%274, %275) /* ty=Tensor[(30, 14), int8] */;
  %286 = %276.0;
  %287 = %277.0;
  %288 = %280.0;
  (%281, %282, %283, meta[relay.Constant][4] /* ty=Tensor[(256), float32] */, meta[relay.Constant][5] /* ty=Tensor[(55, 6), float32] */, %284, %285, %286, %287, %288)
}

def @func_17728() -> (Tensor[(2, 14, 8), float64],) {
  %289 = @func_3799() /* ty=Tensor[(2, 14, 8), float64] */;
  (%289,)
}

def @func_3222() -> (Tensor[(2, 14, 8), float64],) {
  %290 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %291 = %290.0;
  (%291,)
}

def @func_12772(%var_12770: Tensor[(5, 4, 6), float32], %var_12771: Tensor[(5, 4, 6), float32]) -> (Tensor[(5, 4, 6), float32], Tensor[(112, 2), float64], Tensor[(450), bool]) {
  @func_12768(%var_12770, %var_12771) /* ty=(Tensor[(5, 4, 6), float32], Tensor[(112, 2), float64], Tensor[(450), bool]) */
}

def @func_10780() -> Tensor[(2, 14, 8), float64] {
  @func_10778() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_7763(%var_7700: uint16, %var_7701: Tensor[(7, 11, 1), uint16], %var_7730: Tensor[(735), float32]) -> (Tensor[(7, 11, 1), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(7, 7, 15), float32], Tensor[(735), float32], Tensor[(7, 11, 1), uint8], Tensor[(630), bool]) {
  %292 = cast(%var_7700, dtype="bool") /* ty=bool */;
  %293 = cast(%var_7701, dtype="bool") /* ty=Tensor[(7, 11, 1), bool] */;
  %294 = @func_6998() /* ty=(Tensor[(630), bool],) */;
  %295 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %296 = cast(%var_7730, dtype="float32") /* ty=Tensor[(735), float32] */;
  %297 = reshape(%296, newshape=[7, 7, 15]) /* ty=Tensor[(7, 7, 15), float32] */;
  %298 = @func_2863(%297) /* ty=(Tensor[(7, 7, 15), float32], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64], Tensor[(630), bool]) */;
  %299 = cast(%var_7701, dtype="uint8") /* ty=Tensor[(7, 11, 1), uint8] */;
  %300 = cast(%var_7700, dtype="uint8") /* ty=uint8 */;
  %301 = @func_6998() /* ty=(Tensor[(630), bool],) */;
  %302 = less(%292, %293) /* ty=Tensor[(7, 11, 1), bool] */;
  %303 = %294.0;
  %304 = @func_1871() /* ty=Tensor[(630), bool] */;
  %305 = %295.0;
  %306 = %298.0;
  %307 = right_shift(%299, %300) /* ty=Tensor[(7, 11, 1), uint8] */;
  %308 = %301.0;
  (%302, %303, %304, %305, %306, %var_7730, %307, %308)
}

def @func_16081() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(330, 1), float32]) {
  @func_16079() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(330, 1), float32]) */
}

def @func_3932(%var_3930: Tensor[(11, 15, 2), float32]) -> (Tensor[(11, 15, 2), float32],) {
  @func_3929(%var_3930) /* ty=(Tensor[(11, 15, 2), float32],) */
}

def @func_12523() -> (Tensor[(224), float64],) {
  %311 = fn () -> (Tensor[(224), float64],) {
    %309 = @func_9027() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
    %310 = %309.0;
    (%310,)
  };
  %311() /* ty=(Tensor[(224), float64],) */
}

def @func_5087(%var_5085: Tensor[(20, 2), float32]) -> (Tensor[(224), float64], Tensor[(2, 14, 8), int16], Tensor[(8, 5, 1), float32], Tensor[(20, 2), float32]) {
  %312 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %313 = cast(%var_5085, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %314 = reshape(%313, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float32] */;
  %315 = %312.0;
  %316 = @func_3211() /* ty=Tensor[(2, 14, 8), int16] */;
  %317 = @func_411(%314) /* ty=Tensor[(8, 5, 1), float32] */;
  (%315, %316, %317, %var_5085)
}

def @func_11104() -> Tensor[(2, 14, 8), float64] {
  %318 = fn () -> Tensor[(2, 14, 8), float64] {
    @func_1632() /* ty=Tensor[(2, 14, 8), float64] */
  };
  %318() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_3403() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %322 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
    %319 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %320 = %319.0;
    %321 = @func_2451() /* ty=Tensor[(630), bool] */;
    (%320, %321)
  };
  %322() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */
}

def @func_4486() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %327 = fn () -> (Tensor[(630), bool], Tensor[(630), bool]) {
    %323 = @func_1240() /* ty=(Tensor[(630), bool],) */;
    %324 = @func_3402() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
    %325 = %323.0;
    %326 = %324.1;
    (%325, %326)
  };
  %327() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_13099() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) {
  @func_13097() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */
}

def @func_16552() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  %328 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %329 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %330 = @func_12204() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %331 = %328.0;
  %332 = @func_15866() /* ty=Tensor[(630), bool] */;
  %333 = %329.0;
  %334 = @func_10778() /* ty=Tensor[(2, 14, 8), float64] */;
  %335 = %330.1;
  (%331, %332, %333, %334, %335)
}

def @func_9027() -> (Tensor[(224), float64], Tensor[(630), bool]) {
  %336 = @func_8742() /* ty=(Tensor[(630), bool], Tensor[(224), float64]) */;
  %337 = @func_7238() /* ty=(Tensor[(630), bool],) */;
  %338 = %336.1;
  %339 = %337.0;
  (%338, %339)
}

def @func_11818(%var_11817: Tensor[(1, 450), bool]) -> (Tensor[(630), bool], Tensor[(15, 15, 2), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 450), float32], Tensor[(112, 2), float64], Tensor[(630), bool]) {
  %358 = fn (%var_11783: Tensor[(1, 450), bool]) -> (Tensor[(630), bool], Tensor[(15, 15, 2), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 450), float32], Tensor[(112, 2), float64], Tensor[(630), bool]) {
    %340 = @func_4947() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
    %341 = cast(%var_11783, dtype="bool") /* ty=Tensor[(1, 450), bool] */;
    %342 = reshape(%341, newshape=[15, 15, 2]) /* ty=Tensor[(15, 15, 2), bool] */;
    %343 = @func_1729(%342) /* ty=(Tensor[(15, 15, 2), bool],) */;
    %344 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %345 = cast(%var_11783, dtype="float64") /* ty=Tensor[(1, 450), float64] */;
    %346 = log10(%345) /* ty=Tensor[(1, 450), float64] */;
    %347 = cast(%346, dtype="float32") /* ty=Tensor[(1, 450), float32] */;
    %348 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 450), float64] */, dtype="float32") /* ty=Tensor[(4, 450), float32] */;
    %349 = %344.0;
    %350 = cast(%349, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
    %351 = reshape(%350, newshape=[112, 2]) /* ty=Tensor[(112, 2), float64] */;
    %352 = @func_6088(%351) /* ty=(Tensor[(330), float32], Tensor[(224), float64], Tensor[(112, 2), float64]) */;
    %353 = %340.1;
    %354 = %343.0;
    %355 = add(%347, %348) /* ty=Tensor[(4, 450), float32] */;
    %356 = %352.2;
    %357 = @func_6011() /* ty=Tensor[(630), bool] */;
    (%353, %354, %349, %355, %356, %357)
  };
  %358(%var_11817) /* ty=(Tensor[(630), bool], Tensor[(15, 15, 2), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 450), float32], Tensor[(112, 2), float64], Tensor[(630), bool]) */
}

def @func_15750() -> (Tensor[(630), bool],) {
  @func_15748() /* ty=(Tensor[(630), bool],) */
}

def @func_14149() -> Tensor[(630), bool] {
  %359 = fn () -> Tensor[(630), bool] {
    @func_5469() /* ty=Tensor[(630), bool] */
  };
  %359() /* ty=Tensor[(630), bool] */
}

def @func_9318() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %360 = @func_6258() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), float64]) */;
  %361 = @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */;
  %362 = %360.1;
  %363 = %361.3;
  (%362, %363)
}

def @func_13376() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  @func_13374() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_10628(%var_10626: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) {
  @func_10625(%var_10626) /* ty=(Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */
}

def @func_12768(%var_12736: Tensor[(5, 4, 6), float32], %var_12737: Tensor[(5, 4, 6), float32]) -> (Tensor[(5, 4, 6), float32], Tensor[(112, 2), float64], Tensor[(450), bool]) {
  %364 = cast(%var_12737, dtype="float32") /* ty=Tensor[(5, 4, 6), float32] */;
  %365 = shape_of(%var_12736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%var_12736, dtype="float32") /* ty=Tensor[(5, 4, 6), float32] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %368 = cast(meta[relay.Constant][7] /* ty=Tensor[(450), bool] */, dtype="bool") /* ty=Tensor[(450), bool] */;
  %369 = reshape(%368, newshape=[1, 450]) /* ty=Tensor[(1, 450), bool] */;
  %370 = @func_11816(%369) /* ty=(Tensor[(630), bool], Tensor[(15, 15, 2), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 450), float32], Tensor[(112, 2), float64], Tensor[(630), bool]) */;
  %371 = power(%366, %367) /* ty=Tensor[(5, 4, 6), float32] */;
  %372 = %370.4;
  (%371, %372, meta[relay.Constant][7] /* ty=Tensor[(450), bool] */)
}

def @func_17322(%var_17320: Tensor[(245, 3), float32]) -> (Tensor[(630), bool], Tensor[(2, 6, 14), int64], Tensor[(77), uint16], Tensor[(13, 14, 12), float64], Tensor[(2, 14, 8), float64], Tensor[(7, 3, 14), float32], Tensor[(294), float32], Tensor[(100, 2184), bool], Tensor[(735), bool]) {
  @func_17319(%var_17320) /* ty=(Tensor[(630), bool], Tensor[(2, 6, 14), int64], Tensor[(77), uint16], Tensor[(13, 14, 12), float64], Tensor[(2, 14, 8), float64], Tensor[(7, 3, 14), float32], Tensor[(294), float32], Tensor[(100, 2184), bool], Tensor[(735), bool]) */
}

def @func_3384() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) {
  %383 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) {
    %373 = @func_3211() /* ty=Tensor[(2, 14, 8), int16] */;
    %374 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 14, 8), int16] */, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
    %375 = shape_of(%373, dtype="int32") /* ty=Tensor[(3), int32] */;
    %376 = cast(%373, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
    %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %378 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
    %379 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
    %380 = floor_mod(%376, %377) /* ty=Tensor[(2, 14, 8), float64] */;
    %381 = %378.1;
    %382 = %379.2;
    (%380, %381, %382)
  };
  %383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */
}

def @func_4258() -> (Tensor[(224, 1), float64], Tensor[(224), float64], Tensor[(10, 45), float64], Tensor[(630), bool], Tensor[(630), bool]) {
  %384 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
  %385 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %386 = @func_2811() /* ty=(Tensor[(10, 45), bool],) */;
  %387 = %386.0;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %389 = log10(%388) /* ty=Tensor[(10, 45), float64] */;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %391 = @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */;
  %392 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %393 = %384.2;
  %394 = %385.1;
  %395 = rsqrt(%390) /* ty=Tensor[(10, 45), float64] */;
  %396 = %391.0;
  %397 = %392.1;
  (%393, %394, %395, %396, %397)
}

def @func_11472() -> Tensor[(630), bool] {
  %399 = fn () -> Tensor[(630), bool] {
    %398 = @func_9998() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(330), float32], Tensor[(630), bool]) */;
    %398.1
  };
  %399() /* ty=Tensor[(630), bool] */
}

def @func_14908() -> Tensor[(630), bool] {
  %400 = fn () -> Tensor[(630), bool] {
    @func_9383() /* ty=Tensor[(630), bool] */
  };
  %400() /* ty=Tensor[(630), bool] */
}

def @func_1937() -> (Tensor[(630), bool],) {
  @func_1935() /* ty=(Tensor[(630), bool],) */
}

def @func_14652() -> (Tensor[(2, 14, 8), float64],) {
  %401 = @func_12204() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %402 = %401.1;
  (%402,)
}

def @func_17670(%var_17669: Tensor[(10, 11, 14), float32]) -> (Tensor[(10, 11, 14), float32],) {
  %405 = fn (%var_17659: Tensor[(10, 11, 14), float32]) -> (Tensor[(10, 11, 14), float32],) {
    %403 = cast(%var_17659, dtype="float32") /* ty=Tensor[(10, 11, 14), float32] */;
    %404 = atanh(%403) /* ty=Tensor[(10, 11, 14), float32] */;
    (%404,)
  };
  %405(%var_17669) /* ty=(Tensor[(10, 11, 14), float32],) */
}

def @func_6623() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %406 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %407 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %408 = %406.2;
  %409 = %407.0;
  (%408, %409)
}

def @func_5090(%var_5088: Tensor[(20, 2), float32]) -> (Tensor[(224), float64], Tensor[(2, 14, 8), int16], Tensor[(8, 5, 1), float32], Tensor[(20, 2), float32]) {
  @func_5087(%var_5088) /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), int16], Tensor[(8, 5, 1), float32], Tensor[(20, 2), float32]) */
}

def @func_1458(%var_1434: Tensor[(4, 56), float64]) -> (Tensor[(4, 56), uint64], Tensor[(630), bool], Tensor[(4, 56), float32]) {
  %410 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %411 = %410.6;
  %412 = cast(%var_1434, dtype="uint64") /* ty=Tensor[(4, 56), uint64] */;
  %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(2), int32] */;
  %414 = cast(%411, dtype="uint64") /* ty=Tensor[(4, 56), uint64] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %416 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %417 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 56), float64] */, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %418 = shape_of(%var_1434, dtype="int32") /* ty=Tensor[(2), int32] */;
  %419 = cast(%var_1434, dtype="float32") /* ty=Tensor[(4, 56), float32] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %421 = minimum(%414, %415) /* ty=Tensor[(4, 56), uint64] */;
  %422 = %416.0;
  %423 = floor_mod(%419, %420) /* ty=Tensor[(4, 56), float32] */;
  (%421, %422, %423)
}

def @func_13561() -> (Tensor[(224), float64], Tensor[(630), bool]) {
  %428 = fn () -> (Tensor[(224), float64], Tensor[(630), bool]) {
    %424 = @func_11170() /* ty=(Tensor[(224), float64],) */;
    %425 = @func_1935() /* ty=(Tensor[(630), bool],) */;
    %426 = %424.0;
    %427 = %425.0;
    (%426, %427)
  };
  %428() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */
}

def @func_8410() -> (Tensor[(630), bool], Tensor[(224), float64]) {
  %429 = @func_6258() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), float64]) */;
  %430 = @func_4137() /* ty=(Tensor[(224), float64],) */;
  %431 = %429.1;
  %432 = %430.0;
  (%431, %432)
}

def @func_15596() -> Tensor[(3, 14, 15), float64] {
  %433 = @func_5257() /* ty=Tensor[(3, 14, 15), bool] */;
  %434 = cast(%433, dtype="float64") /* ty=Tensor[(3, 14, 15), float64] */;
  sin(%434) /* ty=Tensor[(3, 14, 15), float64] */
}

def @func_1531(%var_1530: Tensor[(4, 56), float64]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) {
  %443 = fn (%var_1527: Tensor[(4, 56), float64]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) {
    %435 = @func_1474() /* ty=(Tensor[(630), bool],) */;
    %436 = %435.0;
    %437 = cast(%436, dtype="bool") /* ty=Tensor[(630), bool] */;
    %438 = cast(%var_1527, dtype="float64") /* ty=Tensor[(4, 56), float64] */;
    %439 = reshape(%437, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
    %440 = reshape(%438, newshape=[4, 56]) /* ty=Tensor[(4, 56), float64] */;
    %441 = @func_1007(%439, %440) /* ty=(Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
    %442 = %441.1;
    (%436, %442, %var_1527)
  };
  %443(%var_1530) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */
}

def @func_6684(%var_6682: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) {
  @func_6681(%var_6682) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */
}

def @func_12875() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint64], Tensor[(224), float64], Tensor[(2, 14, 8), bool], Tensor[(630), bool]) {
  %444 = @func_10591() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %445 = %444.2;
  %446 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 14, 8), float64] */, dtype="uint64") /* ty=Tensor[(2, 14, 8), uint64] */;
  %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%445, dtype="uint64") /* ty=Tensor[(2, 14, 8), uint64] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %450 = @func_4947() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %451 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %452 = @func_7916() /* ty=Tensor[(2, 14, 8), float64] */;
  %453 = right_shift(%448, %449) /* ty=Tensor[(2, 14, 8), uint64] */;
  %454 = %450.0;
  %455 = @func_9366() /* ty=Tensor[(2, 14, 8), bool] */;
  %456 = %451.0;
  (%452, %453, %454, %455, %456)
}

def @func_4832(%var_4830: Tensor[(2, 14, 8), float64]) -> Tensor[(2, 14, 8), uint64] {
  @func_4829(%var_4830) /* ty=Tensor[(2, 14, 8), uint64] */
}

def @func_3140() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  @func_3138() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_14313() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) {
  @func_14311() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) */
}

def @func_12727() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) {
  %462 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) {
    %457 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %458 = @func_12401() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %459 = %457.0;
    %460 = %458.1;
    %461 = @func_7126() /* ty=Tensor[(630), bool] */;
    (%459, %460, %461)
  };
  %462() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_15102() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) {
  %463 = @func_4485() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %464 = @func_14133() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(1, 16, 16), float64], Tensor[(256), float32]) */;
  %465 = %464.0;
  %466 = cast(%465, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %467 = reshape(%466, newshape=[4, 56]) /* ty=Tensor[(4, 56), float64] */;
  %468 = @func_1529(%467) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %469 = @func_11070() /* ty=Tensor[(630), bool] */;
  %470 = %463.0;
  %471 = %468.2;
  (%469, %470, %465, %471)
}

def @func_3085() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */
}

def @func_8839() -> (Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 6, 14), int64], Tensor[(630), bool], Tensor[(2, 14, 8), int8]) {
  @func_8837() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 6, 14), int64], Tensor[(630), bool], Tensor[(2, 14, 8), int8]) */
}

def @func_4442() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %472 = @func_4284() /* ty=(Tensor[(630), bool],) */;
  %473 = @func_4284() /* ty=(Tensor[(630), bool],) */;
  %474 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %475 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %476 = %472.0;
  %477 = %473.0;
  %478 = %474.0;
  %479 = %475.0;
  %480 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
  (%476, %477, %478, %479, %480)
}

def @func_8962(%var_8943: Tensor[(224, 10), float64]) -> (Tensor[(2, 6, 14), int64], Tensor[(735), float32], Tensor[(224, 10), bool], Tensor[(224, 1), float32]) {
  %481 = @func_5837() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */;
  %482 = cast(meta[relay.Constant][11] /* ty=Tensor[(735), float32] */, dtype="float32") /* ty=Tensor[(735), float32] */;
  %483 = reshape(%482, newshape=[7, 7, 15]) /* ty=Tensor[(7, 7, 15), float32] */;
  %484 = @func_2863(%483) /* ty=(Tensor[(7, 7, 15), float32], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64], Tensor[(630), bool]) */;
  %485 = %484.2;
  %486 = cast(%485, dtype="bool") /* ty=Tensor[(224, 1), bool] */;
  %487 = cast(%var_8943, dtype="bool") /* ty=Tensor[(224, 10), bool] */;
  %488 = cast(%485, dtype="float32") /* ty=Tensor[(224, 1), float32] */;
  %489 = %481.0;
  %490 = greater(%486, %487) /* ty=Tensor[(224, 10), bool] */;
  %491 = log(%488) /* ty=Tensor[(224, 1), float32] */;
  (%489, meta[relay.Constant][11] /* ty=Tensor[(735), float32] */, %490, %491)
}

def @func_9562() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64]) {
  %492 = @func_3402() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %493 = @func_8742() /* ty=(Tensor[(630), bool], Tensor[(224), float64]) */;
  %494 = %492.0;
  %495 = %493.1;
  (%494, %495)
}

def @func_15868() -> Tensor[(630), bool] {
  @func_15866() /* ty=Tensor[(630), bool] */
}

def @func_16403(%var_16402: Tensor[(15, 3, 13), float32]) -> Tensor[(15, 3, 13), float32] {
  %497 = fn (%var_16380: Tensor[(15, 3, 13), float32]) -> Tensor[(15, 3, 13), float32] {
    %496 = cast(%var_16380, dtype="float32") /* ty=Tensor[(15, 3, 13), float32] */;
    log10(%496) /* ty=Tensor[(15, 3, 13), float32] */
  };
  %497(%var_16402) /* ty=Tensor[(15, 3, 13), float32] */
}

def @func_14021() -> Tensor[(2, 14, 8), float32] {
  %499 = fn () -> Tensor[(2, 14, 8), float32] {
    %498 = @func_2306() /* ty=(Tensor[(2, 14, 8), float32],) */;
    %498.0
  };
  %499() /* ty=Tensor[(2, 14, 8), float32] */
}

def @func_3876() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) {
  %507 = fn () -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) {
    %500 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %501 = @func_1474() /* ty=(Tensor[(630), bool],) */;
    %502 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %503 = %500.1;
    %504 = %501.0;
    %505 = %502.1;
    %506 = @func_1271() /* ty=Tensor[(630), bool] */;
    (%503, %504, %505, %506)
  };
  %507() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_5699(%var_5694: int64, %var_5695: Tensor[(5, 4, 14), int64], %var_5696: Tensor[(100), float32], %var_5697: Tensor[(256), float32], %var_5698: Tensor[(40), float32]) -> (Tensor[(5, 4, 14), int64], Tensor[(5, 4, 5), float32], Tensor[(100), float32], Tensor[(256), float32], Tensor[(630), bool], Tensor[(8, 5, 1), float32], Tensor[(40), float32], Tensor[(630), bool], Tensor[(224), float64], Tensor[(5, 4, 14), int8], Tensor[(2, 14, 8), float64], Tensor[(5, 4, 14), float64]) {
  %543 = fn (%var_5557: int64, %var_5558: Tensor[(5, 4, 14), int64], %var_5576: Tensor[(100), float32], %var_5577: Tensor[(256), float32], %var_5652: Tensor[(40), float32]) -> (Tensor[(5, 4, 14), int64], Tensor[(5, 4, 5), float32], Tensor[(100), float32], Tensor[(256), float32], Tensor[(630), bool], Tensor[(8, 5, 1), float32], Tensor[(40), float32], Tensor[(630), bool], Tensor[(224), float64], Tensor[(5, 4, 14), int8], Tensor[(2, 14, 8), float64], Tensor[(5, 4, 14), float64]) {
    %508 = cast(%var_5557, dtype="int64") /* ty=int64 */;
    %509 = cast(%var_5558, dtype="int64") /* ty=Tensor[(5, 4, 14), int64] */;
    %510 = cast(%var_5576, dtype="float32") /* ty=Tensor[(100), float32] */;
    %511 = cast(%var_5577, dtype="float32") /* ty=Tensor[(256), float32] */;
    %512 = reshape(%510, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), float32] */;
    %513 = reshape(%511, newshape=[2, 128]) /* ty=Tensor[(2, 128), float32] */;
    %514 = @func_4362(%512, %513) /* ty=(Tensor[(5, 4, 5), float32], Tensor[(630), bool], Tensor[(2, 128), float32]) */;
    %515 = @func_1474() /* ty=(Tensor[(630), bool],) */;
    %516 = cast(%var_5652, dtype="float32") /* ty=Tensor[(40), float32] */;
    %517 = reshape(%516, newshape=[20, 2]) /* ty=Tensor[(20, 2), float32] */;
    %518 = @func_5087(%517) /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), int16], Tensor[(8, 5, 1), float32], Tensor[(20, 2), float32]) */;
    %519 = cast(%var_5577, dtype="float32") /* ty=Tensor[(256), float32] */;
    %520 = reshape(%519, newshape=[1, 256]) /* ty=Tensor[(1, 256), float32] */;
    %521 = @func_1962(%520) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */;
    %522 = @func_3683() /* ty=(Tensor[(224), float64],) */;
    %523 = cast(%var_5558, dtype="float32") /* ty=Tensor[(5, 4, 14), float32] */;
    %524 = asin(%523) /* ty=Tensor[(5, 4, 14), float32] */;
    %525 = cast(%524, dtype="int8") /* ty=Tensor[(5, 4, 14), int8] */;
    %526 = cast(%var_5557, dtype="int8") /* ty=int8 */;
    %527 = @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */;
    %528 = cast(%var_5558, dtype="float32") /* ty=Tensor[(5, 4, 14), float32] */;
    %529 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
    %530 = cast(%524, dtype="float32") /* ty=Tensor[(5, 4, 14), float32] */;
    %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %532 = mod(%530, %531) /* ty=Tensor[(5, 4, 14), float32] */;
    %533 = cast(%532, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
    %534 = subtract(%508, %509) /* ty=Tensor[(5, 4, 14), int64] */;
    %535 = %514.0;
    %536 = %515.0;
    %537 = %518.2;
    %538 = %521.0;
    %539 = %522.0;
    %540 = add(%525, %526) /* ty=Tensor[(5, 4, 14), int8] */;
    %541 = %527.3;
    %542 = asinh(%533) /* ty=Tensor[(5, 4, 14), float64] */;
    (%534, %535, %var_5576, %var_5577, %536, %537, %var_5652, %538, %539, %540, %541, %542)
  };
  %543(%var_5694, %var_5695, %var_5696, %var_5697, %var_5698) /* ty=(Tensor[(5, 4, 14), int64], Tensor[(5, 4, 5), float32], Tensor[(100), float32], Tensor[(256), float32], Tensor[(630), bool], Tensor[(8, 5, 1), float32], Tensor[(40), float32], Tensor[(630), bool], Tensor[(224), float64], Tensor[(5, 4, 14), int8], Tensor[(2, 14, 8), float64], Tensor[(5, 4, 14), float64]) */
}

def @func_2589(%var_2587: Tensor[(224), float64]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64]) {
  @func_2586(%var_2587) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */
}

def @func_1732(%var_1730: Tensor[(15, 15, 2), bool]) -> (Tensor[(15, 15, 2), bool],) {
  @func_1729(%var_1730) /* ty=(Tensor[(15, 15, 2), bool],) */
}

def @func_10897() -> (Tensor[(224), float64],) {
  @func_10895() /* ty=(Tensor[(224), float64],) */
}

def @func_8618(%var_8584: Tensor[(2, 20), float32]) -> (Tensor[(224), float64], Tensor[(8, 5, 1), float32], Tensor[(2, 20), float32], Tensor[(2, 14, 8), float64]) {
  %544 = @func_8034() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) */;
  %545 = cast(%var_8584, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %546 = reshape(%545, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float32] */;
  %547 = @func_6920() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %548 = %544.3;
  %549 = @func_411(%546) /* ty=Tensor[(8, 5, 1), float32] */;
  %550 = %547.0;
  (%548, %549, %var_8584, %550)
}

def @func_6441(%var_6439: Tensor[(3, 2, 11), float32]) -> (Tensor[(3, 2, 11), float32], Tensor[(630), bool]) {
  @func_6438(%var_6439) /* ty=(Tensor[(3, 2, 11), float32], Tensor[(630), bool]) */
}

def @func_11172() -> (Tensor[(224), float64],) {
  @func_11170() /* ty=(Tensor[(224), float64],) */
}

def @func_11481() -> (Tensor[(630), bool],) {
  %552 = fn () -> (Tensor[(630), bool],) {
    %551 = @func_1871() /* ty=Tensor[(630), bool] */;
    (%551,)
  };
  %552() /* ty=(Tensor[(630), bool],) */
}

def @func_6091(%var_6089: Tensor[(112, 2), float64]) -> (Tensor[(330), float32], Tensor[(224), float64], Tensor[(112, 2), float64]) {
  @func_6088(%var_6089) /* ty=(Tensor[(330), float32], Tensor[(224), float64], Tensor[(112, 2), float64]) */
}

def @func_1475() -> (Tensor[(630), bool],) {
  %555 = fn () -> (Tensor[(630), bool],) {
    %553 = @func_1240() /* ty=(Tensor[(630), bool],) */;
    %554 = %553.0;
    (%554,)
  };
  %555() /* ty=(Tensor[(630), bool],) */
}

def @func_5031() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) {
  %563 = fn () -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) {
    %556 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
    %557 = cast(meta[relay.Constant][12] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %558 = reshape(%557, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), float32] */;
    %559 = @func_3929(%558) /* ty=(Tensor[(11, 15, 2), float32],) */;
    %560 = @func_1871() /* ty=Tensor[(630), bool] */;
    %561 = %556.0;
    %562 = %559.0;
    (%560, %561, %562, meta[relay.Constant][12] /* ty=Tensor[(330), float32] */)
  };
  %563() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */
}

def @func_12997() -> Tensor[(224), float64] {
  %565 = fn () -> Tensor[(224), float64] {
    %564 = @func_9706() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
    %564.1
  };
  %565() /* ty=Tensor[(224), float64] */
}

def @func_11734(%var_11732: float32, %var_11733: Tensor[(1155), float32]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(10, 45), float64], Tensor[(11, 15, 2), float32], Tensor[(165, 2), float32], Tensor[(630), bool], float32, Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(1155), float64]) {
  %587 = fn (%var_11683: float32, %var_11684: Tensor[(1155), float32]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(10, 45), float64], Tensor[(11, 15, 2), float32], Tensor[(165, 2), float32], Tensor[(630), bool], float32, Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(1155), float64]) {
    %566 = @func_11480() /* ty=(Tensor[(630), bool],) */;
    %567 = @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
    %568 = @func_10912() /* ty=(Tensor[(10, 45), float64],) */;
    %569 = cast(meta[relay.Constant][13] /* ty=Tensor[(165, 2), float32] */, dtype="float32") /* ty=Tensor[(165, 2), float32] */;
    %570 = reshape(%569, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), float32] */;
    %571 = @func_3929(%570) /* ty=(Tensor[(11, 15, 2), float32],) */;
    %572 = cast(%var_11683, dtype="float32") /* ty=float32 */;
    %573 = cast(%var_11684, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %574 = reshape(%572, newshape=[]) /* ty=float32 */;
    %575 = reshape(%573, newshape=[15, 7, 11]) /* ty=Tensor[(15, 7, 11), float32] */;
    %576 = @func_5145(%574, %575) /* ty=(Tensor[(15, 7, 11), float32], Tensor[(630), bool]) */;
    %577 = @func_11445() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), uint64], Tensor[(224), float64]) */;
    %578 = cast(%var_11684, dtype="float64") /* ty=Tensor[(1155), float64] */;
    %579 = %566.0;
    %580 = %567.2;
    %581 = %568.0;
    %582 = %571.0;
    %583 = %576.1;
    %584 = %577.1;
    %585 = @func_7916() /* ty=Tensor[(2, 14, 8), float64] */;
    %586 = cos(%578) /* ty=Tensor[(1155), float64] */;
    (%579, %580, %581, %582, meta[relay.Constant][13] /* ty=Tensor[(165, 2), float32] */, %583, %var_11683, %584, %585, %586)
  };
  %587(%var_11732, %var_11733) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(10, 45), float64], Tensor[(11, 15, 2), float32], Tensor[(165, 2), float32], Tensor[(630), bool], float32, Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(1155), float64]) */
}

def @func_15489() -> Tensor[(2, 14, 8), float64] {
  %589 = fn () -> Tensor[(2, 14, 8), float64] {
    %588 = @func_2634() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %588.0
  };
  %589() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_4785() -> (Tensor[(3, 14, 15), bool],) {
  @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */
}

def @func_15796() -> (Tensor[(3, 14, 15), float32], Tensor[(2, 14, 8), float64]) {
  %590 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %591 = @func_14376() /* ty=Tensor[(3, 14, 15), float32] */;
  %592 = %590.0;
  (%591, %592)
}

def @func_15891() -> Tensor[(630), bool] {
  %593 = fn () -> Tensor[(630), bool] {
    @func_5469() /* ty=Tensor[(630), bool] */
  };
  %593() /* ty=Tensor[(630), bool] */
}

def @func_15930() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  %598 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
    %594 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %595 = @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
    %596 = %594.0;
    %597 = %595.0;
    (%596, %597)
  };
  %598() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */
}

def @func_5753() -> (Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(8, 10, 3), float32]) {
  %605 = fn () -> (Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(8, 10, 3), float32]) {
    %599 = @func_4137() /* ty=(Tensor[(224), float64],) */;
    %600 = @func_4107() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %601 = @func_4071() /* ty=(Tensor[(8, 10, 3), float32], Tensor[(630), bool]) */;
    %602 = %599.0;
    %603 = %600.0;
    %604 = %601.0;
    (%602, %603, %604)
  };
  %605() /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(8, 10, 3), float32]) */
}

def @func_17730() -> (Tensor[(2, 14, 8), float64],) {
  @func_17728() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_16853() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], float32, Tensor[(1155), float32]) {
  %613 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], float32, Tensor[(1155), float32]) {
    %606 = cast(-0.624279f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %607 = cast(meta[relay.Constant][14] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %608 = reshape(%606, newshape=[]) /* ty=float32 */;
    %609 = reshape(%607, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
    %610 = @func_11731(%608, %609) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(10, 45), float64], Tensor[(11, 15, 2), float32], Tensor[(165, 2), float32], Tensor[(630), bool], float32, Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(1155), float64]) */;
    %611 = @func_10778() /* ty=Tensor[(2, 14, 8), float64] */;
    %612 = %610.0;
    (%611, %612, -0.624279f /* ty=float32 */, meta[relay.Constant][14] /* ty=Tensor[(1155), float32] */)
  };
  %613() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], float32, Tensor[(1155), float32]) */
}

def @func_3102() -> Tensor[(630), bool] {
  %614 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %614.3
}

def @func_16022() -> (Tensor[(630), bool],) {
  @func_16020() /* ty=(Tensor[(630), bool],) */
}

def @func_4948() -> (Tensor[(224), float64], Tensor[(630), bool]) {
  %618 = fn () -> (Tensor[(224), float64], Tensor[(630), bool]) {
    %615 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
    %616 = %615.1;
    %617 = @func_2451() /* ty=Tensor[(630), bool] */;
    (%616, %617)
  };
  %618() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */
}

def @func_12206() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  @func_12204() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */
}

def @func_7213() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float32]) {
  %619 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %620 = @func_1935() /* ty=(Tensor[(630), bool],) */;
  %621 = @func_6751() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %622 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %623 = %622.0;
  %624 = cast(%623, dtype="float32") /* ty=Tensor[(2, 14, 8), float32] */;
  %625 = %619.0;
  %626 = %620.0;
  %627 = %621.0;
  %628 = log10(%624) /* ty=Tensor[(2, 14, 8), float32] */;
  (%625, %626, %627, %628)
}

def @func_11627() -> (Tensor[(224), float64], Tensor[(630), bool]) {
  %632 = fn () -> (Tensor[(224), float64], Tensor[(630), bool]) {
    %629 = @func_8742() /* ty=(Tensor[(630), bool], Tensor[(224), float64]) */;
    %630 = @func_3839() /* ty=Tensor[(224), float64] */;
    %631 = %629.0;
    (%630, %631)
  };
  %632() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */
}

def @func_13097() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) {
  %633 = cast(meta[relay.Constant][15] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %634 = reshape(%633, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %635 = @func_2586(%634) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %636 = @func_12309() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %637 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %638 = @func_12726() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %639 = @func_5469() /* ty=Tensor[(630), bool] */;
  %640 = %635.2;
  %641 = %636.0;
  %642 = %637.0;
  %643 = %638.1;
  (%639, %640, meta[relay.Constant][15] /* ty=Tensor[(224), float64] */, %641, %642, %643)
}

def @func_15459(%var_15458: Tensor[(1120), float64]) -> (Tensor[(66), float32], Tensor[(224, 5), float64], Tensor[(1120), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), bool]) {
  %656 = fn (%var_15414: Tensor[(1120), float64]) -> (Tensor[(66), float32], Tensor[(224, 5), float64], Tensor[(1120), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), bool]) {
    %644 = @func_15031() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(3, 2, 11), float32], Tensor[(66), float32]) */;
    %645 = cast(%var_15414, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %646 = reshape(%645, newshape=[224, 5]) /* ty=Tensor[(224, 5), float64] */;
    %647 = @func_12664(%646) /* ty=(Tensor[(224, 5), float64],) */;
    %648 = @func_9120() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %649 = @func_4657() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
    %650 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
    %651 = %644.2;
    %652 = %647.0;
    %653 = %648.0;
    %654 = %649.0;
    %655 = %650.0;
    (%651, %652, %var_15414, %653, %654, %655)
  };
  %656(%var_15458) /* ty=(Tensor[(66), float32], Tensor[(224, 5), float64], Tensor[(1120), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), bool]) */
}

def @func_6407() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %657 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %658 = @func_3799() /* ty=Tensor[(2, 14, 8), float64] */;
  %659 = %657.1;
  (%658, %659)
}

def @func_2586(%var_2582: Tensor[(224), float64]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64]) {
  %660 = @func_2511() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */;
  %661 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %662 = cast(%var_2582, dtype="float64") /* ty=Tensor[(224), float64] */;
  %663 = reshape(%662, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %664 = @func_2126(%663) /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(128, 2), float32], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint8], Tensor[(2, 14, 8), float64]) */;
  %665 = %660.0;
  %666 = %661.0;
  %667 = %664.6;
  (%665, %666, %667, %var_2582)
}

def @func_3213() -> Tensor[(2, 14, 8), int16] {
  @func_3211() /* ty=Tensor[(2, 14, 8), int16] */
}

def @func_8837() -> (Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 6, 14), int64], Tensor[(630), bool], Tensor[(2, 14, 8), int8]) {
  %668 = @func_6998() /* ty=(Tensor[(630), bool],) */;
  %669 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %670 = @func_5837() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */;
  %671 = @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %672 = %669.1;
  %673 = cast(%672, dtype="float64") /* ty=Tensor[(224), float64] */;
  %674 = cast(%672, dtype="float64") /* ty=Tensor[(224), float64] */;
  %675 = reshape(%673, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %676 = reshape(%674, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %677 = @func_7524(%675, %676) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), int8]) */;
  %678 = %668.0;
  %679 = %670.0;
  %680 = %671.1;
  %681 = %677.2;
  (%678, %672, %679, %680, %681)
}

def @func_17547() -> (Tensor[(630), bool],) {
  @func_17545() /* ty=(Tensor[(630), bool],) */
}

def @func_16554() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  @func_16552() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */
}

def @func_5471() -> Tensor[(630), bool] {
  @func_5469() /* ty=Tensor[(630), bool] */
}

def @func_6466(%var_6464: Tensor[(1, 4, 13), float32]) -> Tensor[(1, 4, 13), float32] {
  @func_6463(%var_6464) /* ty=Tensor[(1, 4, 13), float32] */
}

def @func_4851() -> Tensor[(630), bool] {
  %682 = @func_4284() /* ty=(Tensor[(630), bool],) */;
  %682.0
}

def @func_13849(%var_13848: Tensor[(40), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(40), float32]) {
  %689 = fn (%var_13844: Tensor[(40), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(40), float32]) {
    %683 = @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */;
    %684 = cast(%var_13844, dtype="float32") /* ty=Tensor[(40), float32] */;
    %685 = reshape(%684, newshape=[2, 20]) /* ty=Tensor[(2, 20), float32] */;
    %686 = @func_8618(%685) /* ty=(Tensor[(224), float64], Tensor[(8, 5, 1), float32], Tensor[(2, 20), float32], Tensor[(2, 14, 8), float64]) */;
    %687 = %683.3;
    %688 = %686.3;
    (%687, %688, %var_13844)
  };
  %689(%var_13848) /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(40), float32]) */
}

def @func_3472() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) {
  %690 = cast(meta[relay.Constant][16] /* ty=Tensor[(224, 1), float64] */, dtype="float64") /* ty=Tensor[(224, 1), float64] */;
  %691 = reshape(%690, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %692 = @func_230(%691) /* ty=(Tensor[(2, 14, 8), float64],) */;
  %693 = @func_2451() /* ty=Tensor[(630), bool] */;
  %694 = %692.0;
  (%693, %694, meta[relay.Constant][16] /* ty=Tensor[(224, 1), float64] */)
}

def @func_9367() -> Tensor[(2, 14, 8), bool] {
  %696 = fn () -> Tensor[(2, 14, 8), bool] {
    %695 = @func_7559() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), bool]) */;
    %695.1
  };
  %696() /* ty=Tensor[(2, 14, 8), bool] */
}

def @func_7917() -> Tensor[(2, 14, 8), float64] {
  %698 = fn () -> Tensor[(2, 14, 8), float64] {
    %697 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
    %697.0
  };
  %698() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_15165() -> Tensor[(630), bool] {
  %700 = fn () -> Tensor[(630), bool] {
    %699 = @func_4947() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
    %699.1
  };
  %700() /* ty=Tensor[(630), bool] */
}

def @func_15798() -> (Tensor[(3, 14, 15), float32], Tensor[(2, 14, 8), float64]) {
  @func_15796() /* ty=(Tensor[(3, 14, 15), float32], Tensor[(2, 14, 8), float64]) */
}

def @func_7559() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), bool]) {
  %701 = @func_4107() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %702 = %701.0;
  %703 = cast(%702, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %704 = cast(%702, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %705 = reshape(%703, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %706 = reshape(%704, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %707 = @func_7524(%705, %706) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), int8]) */;
  %708 = %707.1;
  (%702, %708)
}

def @func_4260() -> (Tensor[(224, 1), float64], Tensor[(224), float64], Tensor[(10, 45), float64], Tensor[(630), bool], Tensor[(630), bool]) {
  @func_4258() /* ty=(Tensor[(224, 1), float64], Tensor[(224), float64], Tensor[(10, 45), float64], Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_17345() -> (Tensor[(2, 14, 8), float64],) {
  @func_17343() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_1558(%var_1552: Tensor[(1, 16, 16), float32]) -> Tensor[(1, 16, 16), float64] {
  %709 = cast(%var_1552, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  %710 = asinh(%709) /* ty=Tensor[(1, 16, 16), float32] */;
  %711 = cast(%710, dtype="float64") /* ty=Tensor[(1, 16, 16), float64] */;
  tan(%711) /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_10043(%var_10042: Tensor[(2, 14, 8), bool]) -> (Tensor[(2, 14, 8), bool], Tensor[(630), bool]) {
  %722 = fn (%var_10030: Tensor[(2, 14, 8), bool]) -> (Tensor[(2, 14, 8), bool], Tensor[(630), bool]) {
    %712 = @func_9366() /* ty=Tensor[(2, 14, 8), bool] */;
    %713 = cast(%var_10030, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
    %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
    %715 = cast(%712, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
    %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %717 = not_equal(%715, %716) /* ty=Tensor[(2, 14, 8), bool] */;
    %718 = cast(%717, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
    %719 = reshape(%718, newshape=[224]) /* ty=Tensor[(224), float64] */;
    %720 = @func_6983(%719) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
    %721 = %720.1;
    (%717, %721)
  };
  %722(%var_10042) /* ty=(Tensor[(2, 14, 8), bool], Tensor[(630), bool]) */
}

def @func_11445() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), uint64], Tensor[(224), float64]) {
  %723 = cast(meta[relay.Constant][17] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %724 = reshape(%723, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %725 = @func_2451() /* ty=Tensor[(630), bool] */;
  %726 = @func_6011() /* ty=Tensor[(630), bool] */;
  %727 = @func_4829(%724) /* ty=Tensor[(2, 14, 8), uint64] */;
  (%725, %726, %727, meta[relay.Constant][17] /* ty=Tensor[(224), float64] */)
}

def @func_12450() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  @func_12448() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_17044() -> (Tensor[(224), float64], Tensor[(630), bool]) {
  %728 = @func_2511() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */;
  %729 = @func_12726() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %730 = %728.2;
  %731 = %729.1;
  (%730, %731)
}

def @func_12492() -> Tensor[(1, 11, 12), float64] {
  %733 = fn () -> Tensor[(1, 11, 12), float64] {
    %732 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 11, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 11, 12), float64] */;
    atanh(%732) /* ty=Tensor[(1, 11, 12), float64] */
  };
  %733() /* ty=Tensor[(1, 11, 12), float64] */
}

def @func_16190() -> (Tensor[(224), float64],) {
  %734 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %735 = %734.1;
  (%735,)
}

def @func_14311() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) {
  %736 = @func_7559() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), bool]) */;
  %737 = @func_8034() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) */;
  %738 = @func_9706() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %739 = %736.0;
  %740 = %737.2;
  %741 = %738.1;
  (%739, %740, %741)
}

def @func_9029() -> (Tensor[(224), float64], Tensor[(630), bool]) {
  @func_9027() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */
}

def @func_6999() -> (Tensor[(630), bool],) {
  %744 = fn () -> (Tensor[(630), bool],) {
    %742 = @func_1240() /* ty=(Tensor[(630), bool],) */;
    %743 = %742.0;
    (%743,)
  };
  %744() /* ty=(Tensor[(630), bool],) */
}

def @func_7215() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float32]) {
  @func_7213() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float32]) */
}

def @func_13803(%var_13801: Tensor[(224), float64]) -> (Tensor[(6, 1, 6), float64], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool], Tensor[(256), float32], Tensor[(256), float32], int64) {
  @func_13800(%var_13801) /* ty=(Tensor[(6, 1, 6), float64], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool], Tensor[(256), float32], Tensor[(256), float32], int64) */
}

def @func_16079() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(330, 1), float32]) {
  %745 = @func_14431() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %746 = cast(meta[relay.Constant][19] /* ty=Tensor[(330, 1), float32] */, dtype="float32") /* ty=Tensor[(330, 1), float32] */;
  %747 = reshape(%746, newshape=[5, 66]) /* ty=Tensor[(5, 66), float32] */;
  %748 = @func_9959(%747) /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(5, 66), float32]) */;
  %749 = %745.1;
  %750 = %748.0;
  (%749, %750, meta[relay.Constant][19] /* ty=Tensor[(330, 1), float32] */)
}

def @func_1576() -> (Tensor[(2, 14, 8), float64],) {
  %753 = fn () -> (Tensor[(2, 14, 8), float64],) {
    %751 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
    %752 = %751.5;
    (%752,)
  };
  %753() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_15723() -> (Tensor[(630), bool], Tensor[(3, 14, 15), bool]) {
  %754 = @func_7213() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float32]) */;
  %755 = @func_9383() /* ty=Tensor[(630), bool] */;
  %756 = %754.2;
  (%755, %756)
}

def @func_17522() -> Tensor[(630), bool] {
  %757 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %757.0
}

def @func_10912() -> (Tensor[(10, 45), float64],) {
  %758 = @func_6258() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), float64]) */;
  %759 = %758.2;
  (%759,)
}

def @func_11217() -> Tensor[(630), bool] {
  @func_1366() /* ty=Tensor[(630), bool] */
}

def @func_9623() -> (Tensor[(2, 14, 8), float64],) {
  %760 = @func_3799() /* ty=Tensor[(2, 14, 8), float64] */;
  %761 = cast(%760, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %762 = atanh(%761) /* ty=Tensor[(2, 14, 8), float64] */;
  (%762,)
}

def @func_13220() -> Tensor[(224), float64] {
  %764 = fn () -> Tensor[(224), float64] {
    %763 = @func_10895() /* ty=(Tensor[(224), float64],) */;
    %763.0
  };
  %764() /* ty=Tensor[(224), float64] */
}

def @func_14377() -> Tensor[(3, 14, 15), float32] {
  %768 = fn () -> Tensor[(3, 14, 15), float32] {
    %765 = @func_6751() /* ty=(Tensor[(3, 14, 15), bool],) */;
    %766 = %765.0;
    %767 = cast(%766, dtype="float32") /* ty=Tensor[(3, 14, 15), float32] */;
    cos(%767) /* ty=Tensor[(3, 14, 15), float32] */
  };
  %768() /* ty=Tensor[(3, 14, 15), float32] */
}

def @func_4072() -> (Tensor[(8, 10, 3), float32], Tensor[(630), bool]) {
  %773 = fn () -> (Tensor[(8, 10, 3), float32], Tensor[(630), bool]) {
    %769 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 10, 3), float32] */, dtype="float32") /* ty=Tensor[(8, 10, 3), float32] */;
    %770 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
    %771 = acos(%769) /* ty=Tensor[(8, 10, 3), float32] */;
    %772 = %770.3;
    (%771, %772)
  };
  %773() /* ty=(Tensor[(8, 10, 3), float32], Tensor[(630), bool]) */
}

def @func_13929() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  %778 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
    %774 = @func_4107() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %775 = @func_2634() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %776 = %774.0;
    %777 = %775.0;
    (%776, %777)
  };
  %778() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */
}

def @func_3474() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) {
  @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */
}

def @func_5936() -> (Tensor[(630), bool],) {
  %781 = fn () -> (Tensor[(630), bool],) {
    %779 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %780 = %779.0;
    (%780,)
  };
  %781() /* ty=(Tensor[(630), bool],) */
}

def @func_6946() -> (Tensor[(630), bool],) {
  @func_6944() /* ty=(Tensor[(630), bool],) */
}

def @func_11447() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), uint64], Tensor[(224), float64]) {
  @func_11445() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), uint64], Tensor[(224), float64]) */
}

def @func_11895() -> (Tensor[(630), bool],) {
  %782 = @func_8742() /* ty=(Tensor[(630), bool], Tensor[(224), float64]) */;
  %783 = %782.0;
  (%783,)
}

def @func_3224() -> (Tensor[(2, 14, 8), float64],) {
  @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_13906(%var_13867: Tensor[(15, 8, 1), float32], %var_13868: Tensor[(15, 8, 14), float32]) -> (Tensor[(15, 8, 14), float32],) {
  %784 = cast(%var_13867, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %785 = cast(%var_13868, dtype="float32") /* ty=Tensor[(15, 8, 14), float32] */;
  %786 = mod(%784, %785) /* ty=Tensor[(15, 8, 14), float32] */;
  (%786,)
}

def @func_14514() -> Tensor[(2, 14, 8), bool] {
  %795 = fn () -> Tensor[(2, 14, 8), bool] {
    %787 = @func_14311() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float32], Tensor[(224), float64]) */;
    %788 = %787.0;
    %789 = @func_9601() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %790 = %789.0;
    %791 = cast(%790, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
    %792 = shape_of(%788, dtype="int32") /* ty=Tensor[(3), int32] */;
    %793 = cast(%788, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
    %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%793, %794) /* ty=Tensor[(2, 14, 8), bool] */
  };
  %795() /* ty=Tensor[(2, 14, 8), bool] */
}

def @func_14873(%var_14871: Tensor[(256), float32], %var_14872: int64) -> (Tensor[(630), bool], Tensor[(3, 14, 15), bool], int64, Tensor[(256), float32], int64, Tensor[(2, 6, 14), int64], Tensor[(630), bool]) {
  @func_14869(%var_14871, %var_14872) /* ty=(Tensor[(630), bool], Tensor[(3, 14, 15), bool], int64, Tensor[(256), float32], int64, Tensor[(2, 6, 14), int64], Tensor[(630), bool]) */
}

def @func_13910(%var_13908: Tensor[(15, 8, 1), float32], %var_13909: Tensor[(15, 8, 14), float32]) -> (Tensor[(15, 8, 14), float32],) {
  @func_13906(%var_13908, %var_13909) /* ty=(Tensor[(15, 8, 14), float32],) */
}

def @func_3801() -> Tensor[(2, 14, 8), float64] {
  @func_3799() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_16882(%var_16880: int64, %var_16881: Tensor[(40), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(5, 4, 5), float32], int64, Tensor[(70, 4), int64], Tensor[(100), float32], Tensor[(256), float32], Tensor[(40), float32], Tensor[(2, 14, 8), float64], Tensor[(165, 2), float32]) {
  %814 = fn (%var_16863: int64, %var_16867: Tensor[(40), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(5, 4, 5), float32], int64, Tensor[(70, 4), int64], Tensor[(100), float32], Tensor[(256), float32], Tensor[(40), float32], Tensor[(2, 14, 8), float64], Tensor[(165, 2), float32]) {
    %796 = @func_16603() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %797 = cast(%var_16863, dtype="int64") /* ty=int64 */;
    %798 = cast(meta[relay.Constant][21] /* ty=Tensor[(70, 4), int64] */, dtype="int64") /* ty=Tensor[(70, 4), int64] */;
    %799 = cast(meta[relay.Constant][22] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
    %800 = cast(meta[relay.Constant][23] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
    %801 = cast(%var_16867, dtype="float32") /* ty=Tensor[(40), float32] */;
    %802 = reshape(%797, newshape=[]) /* ty=int64 */;
    %803 = reshape(%798, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int64] */;
    %804 = reshape(%799, newshape=[100]) /* ty=Tensor[(100), float32] */;
    %805 = reshape(%800, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %806 = reshape(%801, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %807 = @func_5693(%802, %803, %804, %805, %806) /* ty=(Tensor[(5, 4, 14), int64], Tensor[(5, 4, 5), float32], Tensor[(100), float32], Tensor[(256), float32], Tensor[(630), bool], Tensor[(8, 5, 1), float32], Tensor[(40), float32], Tensor[(630), bool], Tensor[(224), float64], Tensor[(5, 4, 14), int8], Tensor[(2, 14, 8), float64], Tensor[(5, 4, 14), float64]) */;
    %808 = cast(meta[relay.Constant][24] /* ty=Tensor[(165, 2), float32] */, dtype="float32") /* ty=Tensor[(165, 2), float32] */;
    %809 = reshape(%808, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %810 = @func_6681(%809) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
    %811 = %796.0;
    %812 = %807.1;
    %813 = %810.2;
    (%811, %812, %var_16863, meta[relay.Constant][21] /* ty=Tensor[(70, 4), int64] */, meta[relay.Constant][22] /* ty=Tensor[(100), float32] */, meta[relay.Constant][23] /* ty=Tensor[(256), float32] */, %var_16867, %813, meta[relay.Constant][24] /* ty=Tensor[(165, 2), float32] */)
  };
  %814(%var_16880, %var_16881) /* ty=(Tensor[(2, 14, 8), float64], Tensor[(5, 4, 5), float32], int64, Tensor[(70, 4), int64], Tensor[(100), float32], Tensor[(256), float32], Tensor[(40), float32], Tensor[(2, 14, 8), float64], Tensor[(165, 2), float32]) */
}

def @func_9706() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64]) {
  %815 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %816 = @func_4947() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %817 = %815.0;
  %818 = %816.0;
  (%817, %818)
}

def @func_3799() -> Tensor[(2, 14, 8), float64] {
  %819 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
  %820 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 14, 8), float64] */, dtype="uint32") /* ty=Tensor[(2, 14, 8), uint32] */;
  %821 = shape_of(%819, dtype="int32") /* ty=Tensor[(3), int32] */;
  %822 = cast(%819, dtype="uint32") /* ty=Tensor[(2, 14, 8), uint32] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %824 = maximum(%822, %823) /* ty=Tensor[(2, 14, 8), uint32] */;
  %825 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 14, 8), uint32] */, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%824, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%827, %828) /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_8522(%var_8498: Tensor[(1, 14, 5), float64]) -> (Tensor[(1, 14, 5), float32],) {
  %829 = cast(%var_8498, dtype="float64") /* ty=Tensor[(1, 14, 5), float64] */;
  %830 = atan(%829) /* ty=Tensor[(1, 14, 5), float64] */;
  %831 = cast(%830, dtype="float32") /* ty=Tensor[(1, 14, 5), float32] */;
  %832 = erf(%831) /* ty=Tensor[(1, 14, 5), float32] */;
  (%832,)
}

def @func_3684() -> (Tensor[(224), float64],) {
  %835 = fn () -> (Tensor[(224), float64],) {
    %833 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
    %834 = %833.1;
    (%834,)
  };
  %835() /* ty=(Tensor[(224), float64],) */
}

def @func_16175() -> Tensor[(630), bool] {
  %836 = fn () -> Tensor[(630), bool] {
    @func_1871() /* ty=Tensor[(630), bool] */
  };
  %836() /* ty=Tensor[(630), bool] */
}

def @func_5148(%var_5146: float32, %var_5147: Tensor[(15, 7, 11), float32]) -> (Tensor[(15, 7, 11), float32], Tensor[(630), bool]) {
  %841 = fn (%var_5128: float32, %var_5129: Tensor[(15, 7, 11), float32]) -> (Tensor[(15, 7, 11), float32], Tensor[(630), bool]) {
    %837 = cast(%var_5128, dtype="float32") /* ty=float32 */;
    %838 = cast(%var_5129, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
    %839 = floor_mod(%837, %838) /* ty=Tensor[(15, 7, 11), float32] */;
    %840 = @func_2451() /* ty=Tensor[(630), bool] */;
    (%839, %840)
  };
  %841(%var_5146, %var_5147) /* ty=(Tensor[(15, 7, 11), float32], Tensor[(630), bool]) */
}

def @func_11316() -> Tensor[(330), float32] {
  %842 = @func_5030() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %842.3
}

def @func_13800(%var_13755: Tensor[(224), float64]) -> (Tensor[(6, 1, 6), float64], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool], Tensor[(256), float32], Tensor[(256), float32], int64) {
  %843 = @func_8725() /* ty=(Tensor[(6, 1, 6), float64], Tensor[(2, 14, 8), float64]) */;
  %844 = @func_5935() /* ty=(Tensor[(630), bool],) */;
  %845 = @func_3138() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %846 = cast(%var_13755, dtype="float64") /* ty=Tensor[(224), float64] */;
  %847 = reshape(%846, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %848 = @func_230(%847) /* ty=(Tensor[(2, 14, 8), float64],) */;
  %849 = cast(meta[relay.Constant][27] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %850 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %851 = reshape(%849, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %852 = reshape(%850, newshape=[]) /* ty=int64 */;
  %853 = @func_10491(%851, %852) /* ty=(Tensor[(630), bool], int64, Tensor[(256), float32], int64, Tensor[(40), float32], Tensor[(2, 14, 8), bool]) */;
  %854 = %843.0;
  %855 = %844.0;
  %856 = %845.1;
  %857 = %848.0;
  %858 = @func_7126() /* ty=Tensor[(630), bool] */;
  %859 = %853.2;
  (%854, %855, %856, %857, %var_13755, %858, %859, meta[relay.Constant][27] /* ty=Tensor[(256), float32] */, -5 /* ty=int64 */)
}

def @func_1241() -> (Tensor[(630), bool],) {
  %862 = fn () -> (Tensor[(630), bool],) {
    %860 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
    %861 = %860.2;
    (%861,)
  };
  %862() /* ty=(Tensor[(630), bool],) */
}

def @func_9625() -> (Tensor[(2, 14, 8), float64],) {
  @func_9623() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_6409() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  @func_6407() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */
}

def @func_6983(%var_6978: Tensor[(224), float64]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64], Tensor[(630), bool]) {
  %863 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %864 = cast(%var_6978, dtype="float64") /* ty=Tensor[(224), float64] */;
  %865 = reshape(%864, newshape=[112, 2]) /* ty=Tensor[(112, 2), float64] */;
  %866 = @func_6088(%865) /* ty=(Tensor[(330), float32], Tensor[(224), float64], Tensor[(112, 2), float64]) */;
  %867 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %868 = @func_6011() /* ty=Tensor[(630), bool] */;
  %869 = %863.1;
  %870 = %866.1;
  %871 = %867.1;
  (%868, %869, %870, %var_6978, %871)
}

def @func_8525(%var_8523: Tensor[(1, 14, 5), float64]) -> (Tensor[(1, 14, 5), float32],) {
  @func_8522(%var_8523) /* ty=(Tensor[(1, 14, 5), float32],) */
}

def @func_10494(%var_10492: Tensor[(256), float32], %var_10493: int64) -> (Tensor[(630), bool], int64, Tensor[(256), float32], int64, Tensor[(40), float32], Tensor[(2, 14, 8), bool]) {
  %883 = fn (%var_10457: Tensor[(256), float32], %var_10458: int64) -> (Tensor[(630), bool], int64, Tensor[(256), float32], int64, Tensor[(40), float32], Tensor[(2, 14, 8), bool]) {
    %872 = @func_4657() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
    %873 = cast(%var_10457, dtype="float32") /* ty=Tensor[(256), float32] */;
    %874 = cast(%var_10458, dtype="int64") /* ty=int64 */;
    %875 = cast(meta[relay.Constant][28] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %876 = reshape(%873, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %877 = reshape(%874, newshape=[]) /* ty=int64 */;
    %878 = reshape(%875, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %879 = @func_10328(%876, %877, %878) /* ty=(Tensor[(256), float32], Tensor[(280), int64], int64, Tensor[(40), float32], Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool]) */;
    %880 = %872.2;
    %881 = %879.2;
    %882 = @func_9366() /* ty=Tensor[(2, 14, 8), bool] */;
    (%880, %881, %var_10457, %var_10458, meta[relay.Constant][28] /* ty=Tensor[(40), float32] */, %882)
  };
  %883(%var_10492, %var_10493) /* ty=(Tensor[(630), bool], int64, Tensor[(256), float32], int64, Tensor[(40), float32], Tensor[(2, 14, 8), bool]) */
}

def @func_10521(%var_10514: Tensor[(13, 11, 4), float64], %var_10515: Tensor[(13, 11, 4), float64]) -> Tensor[(13, 11, 4), float64] {
  %884 = cast(%var_10515, dtype="float64") /* ty=Tensor[(13, 11, 4), float64] */;
  %885 = shape_of(%var_10514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %886 = cast(%var_10514, dtype="float64") /* ty=Tensor[(13, 11, 4), float64] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%886, %887) /* ty=Tensor[(13, 11, 4), float64] */
}

def @func_12204() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %888 = @func_11626() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %889 = @func_3402() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %890 = %888.1;
  %891 = %889.0;
  (%890, %891)
}

def @func_7857() -> (Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64]) {
  %898 = fn () -> (Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64]) {
    %892 = @func_4657() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
    %893 = @func_3683() /* ty=(Tensor[(224), float64],) */;
    %894 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
    %895 = %892.2;
    %896 = %893.0;
    %897 = %894.1;
    (%895, %896, %897)
  };
  %898() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64]) */
}

def @func_5257() -> Tensor[(3, 14, 15), bool] {
  %899 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %899.0
}

def @func_9887(%var_9885: int64, %var_9886: Tensor[(40), float32]) -> (Tensor[(224), float64], Tensor[(256), float32], Tensor[(280), int64], Tensor[(50, 2), float32], Tensor[(256), float32], Tensor[(224), float64], Tensor[(40), uint64], Tensor[(1, 256), float32], Tensor[(630), bool]) {
  %929 = fn (%var_9842: int64, %var_9846: Tensor[(40), float32]) -> (Tensor[(224), float64], Tensor[(256), float32], Tensor[(280), int64], Tensor[(50, 2), float32], Tensor[(256), float32], Tensor[(224), float64], Tensor[(40), uint64], Tensor[(1, 256), float32], Tensor[(630), bool]) {
    %900 = @func_4258() /* ty=(Tensor[(224, 1), float64], Tensor[(224), float64], Tensor[(10, 45), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
    %901 = cast(%var_9842, dtype="int64") /* ty=int64 */;
    %902 = cast(meta[relay.Constant][29] /* ty=Tensor[(280), int64] */, dtype="int64") /* ty=Tensor[(280), int64] */;
    %903 = cast(meta[relay.Constant][30] /* ty=Tensor[(50, 2), float32] */, dtype="float32") /* ty=Tensor[(50, 2), float32] */;
    %904 = cast(meta[relay.Constant][31] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
    %905 = cast(%var_9846, dtype="float32") /* ty=Tensor[(40), float32] */;
    %906 = reshape(%901, newshape=[]) /* ty=int64 */;
    %907 = reshape(%902, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), int64] */;
    %908 = reshape(%903, newshape=[100]) /* ty=Tensor[(100), float32] */;
    %909 = reshape(%904, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %910 = reshape(%905, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %911 = @func_5693(%906, %907, %908, %909, %910) /* ty=(Tensor[(5, 4, 14), int64], Tensor[(5, 4, 5), float32], Tensor[(100), float32], Tensor[(256), float32], Tensor[(630), bool], Tensor[(8, 5, 1), float32], Tensor[(40), float32], Tensor[(630), bool], Tensor[(224), float64], Tensor[(5, 4, 14), int8], Tensor[(2, 14, 8), float64], Tensor[(5, 4, 14), float64]) */;
    %912 = %900.1;
    %913 = cast(%912, dtype="float64") /* ty=Tensor[(224), float64] */;
    %914 = reshape(%913, newshape=[224]) /* ty=Tensor[(224), float64] */;
    %915 = @func_2586(%914) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
    %916 = cast(%var_9846, dtype="uint64") /* ty=Tensor[(40), uint64] */;
    %917 = cast(%var_9842, dtype="uint64") /* ty=uint64 */;
    %918 = cast(meta[relay.Constant][32] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
    %919 = %911.3;
    %920 = cast(%919, dtype="float32") /* ty=Tensor[(256), float32] */;
    %921 = cast(meta[relay.Constant][32] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
    %922 = reshape(%918, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
    %923 = reshape(%920, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %924 = reshape(%921, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
    %925 = @func_6874(%922, %923, %924) /* ty=(Tensor[(3, 14, 15), float32], Tensor[(1, 256), float32], Tensor[(256), float32], Tensor[(3, 14, 15), bool], Tensor[(3, 14, 15), int32], Tensor[(630), bool]) */;
    %926 = %915.3;
    %927 = bitwise_or(%916, %917) /* ty=Tensor[(40), uint64] */;
    %928 = %925.1;
    (%912, %919, meta[relay.Constant][29] /* ty=Tensor[(280), int64] */, meta[relay.Constant][30] /* ty=Tensor[(50, 2), float32] */, meta[relay.Constant][31] /* ty=Tensor[(256), float32] */, %926, %927, %928, meta[relay.Constant][32] /* ty=Tensor[(630), bool] */)
  };
  %929(%var_9885, %var_9886) /* ty=(Tensor[(224), float64], Tensor[(256), float32], Tensor[(280), int64], Tensor[(50, 2), float32], Tensor[(256), float32], Tensor[(224), float64], Tensor[(40), uint64], Tensor[(1, 256), float32], Tensor[(630), bool]) */
}

def @func_8222() -> Tensor[(630), bool] {
  %931 = fn () -> Tensor[(630), bool] {
    %930 = @func_6138() /* ty=(Tensor[(630), bool],) */;
    %930.0
  };
  %931() /* ty=Tensor[(630), bool] */
}

def @func_1272() -> Tensor[(630), bool] {
  %933 = fn () -> Tensor[(630), bool] {
    %932 = @func_1240() /* ty=(Tensor[(630), bool],) */;
    %932.0
  };
  %933() /* ty=Tensor[(630), bool] */
}

def @func_15031() -> (Tensor[(2, 14, 8), float64], Tensor[(3, 2, 11), float32], Tensor[(66), float32]) {
  %934 = cast(meta[relay.Constant][33] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %935 = reshape(%934, newshape=[3, 2, 11]) /* ty=Tensor[(3, 2, 11), float32] */;
  %936 = @func_6438(%935) /* ty=(Tensor[(3, 2, 11), float32], Tensor[(630), bool]) */;
  %937 = @func_7146() /* ty=Tensor[(2, 14, 8), float64] */;
  %938 = %936.0;
  (%937, %938, meta[relay.Constant][33] /* ty=Tensor[(66), float32] */)
}

def @func_17046() -> (Tensor[(224), float64], Tensor[(630), bool]) {
  @func_17044() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */
}

def @func_2865(%var_2864: Tensor[(7, 7, 15), float32]) -> (Tensor[(7, 7, 15), float32], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64], Tensor[(630), bool]) {
  %946 = fn (%var_2826: Tensor[(7, 7, 15), float32]) -> (Tensor[(7, 7, 15), float32], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64], Tensor[(630), bool]) {
    %939 = cast(%var_2826, dtype="float32") /* ty=Tensor[(7, 7, 15), float32] */;
    %940 = cast(meta[relay.Constant][34] /* ty=Tensor[(224, 1), float64] */, dtype="float64") /* ty=Tensor[(224, 1), float64] */;
    %941 = reshape(%940, newshape=[224]) /* ty=Tensor[(224), float64] */;
    %942 = @func_2586(%941) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
    %943 = sqrt(%939) /* ty=Tensor[(7, 7, 15), float32] */;
    %944 = %942.2;
    %945 = @func_1871() /* ty=Tensor[(630), bool] */;
    (%943, %944, meta[relay.Constant][34] /* ty=Tensor[(224, 1), float64] */, %945)
  };
  %946(%var_2864) /* ty=(Tensor[(7, 7, 15), float32], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64], Tensor[(630), bool]) */
}

def @func_7401() -> (Tensor[(630), bool],) {
  %948 = fn () -> (Tensor[(630), bool],) {
    %947 = @func_6038() /* ty=Tensor[(630), bool] */;
    (%947,)
  };
  %948() /* ty=(Tensor[(630), bool],) */
}

def @func_9320() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  @func_9318() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */
}

def @func_15598() -> Tensor[(3, 14, 15), float64] {
  @func_15596() /* ty=Tensor[(3, 14, 15), float64] */
}

def @func_13532() -> (Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 330), float32]) {
  %955 = fn () -> (Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 330), float32]) {
    %949 = @func_12522() /* ty=(Tensor[(224), float64],) */;
    %950 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %951 = @func_12095() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 330), float32]) */;
    %952 = %949.0;
    %953 = %950.0;
    %954 = %951.2;
    (%952, %953, %954)
  };
  %955() /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 330), float32]) */
}

def @func_2126(%var_2075: Tensor[(2, 14, 8), float64]) -> (Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(128, 2), float32], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint8], Tensor[(2, 14, 8), float64]) {
  %956 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %957 = cast(meta[relay.Constant][35] /* ty=Tensor[(128, 2), float32] */, dtype="float32") /* ty=Tensor[(128, 2), float32] */;
  %958 = reshape(%957, newshape=[1, 16, 16]) /* ty=Tensor[(1, 16, 16), float32] */;
  %959 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %960 = %959.5;
  %961 = cast(%960, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %962 = erf(%961) /* ty=Tensor[(2, 14, 8), float64] */;
  %963 = cast(%960, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%962, dtype="bool") /* ty=Tensor[(2, 14, 8), bool] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %967 = cast(%962, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %968 = cast(%var_2075, dtype="float32") /* ty=Tensor[(2, 14, 8), float32] */;
  %969 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %970 = cast(%962, dtype="float32") /* ty=Tensor[(2, 14, 8), float32] */;
  %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %972 = divide(%970, %971) /* ty=Tensor[(2, 14, 8), float32] */;
  %973 = cast(%972, dtype="uint8") /* ty=Tensor[(2, 14, 8), uint8] */;
  %974 = shape_of(%960, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%960, dtype="uint8") /* ty=Tensor[(2, 14, 8), uint8] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %977 = cast(%960, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %978 = %956.0;
  %979 = @func_1558(%958) /* ty=Tensor[(1, 16, 16), float64] */;
  %980 = logical_or(%965, %966) /* ty=Tensor[(2, 14, 8), bool] */;
  %981 = log2(%967) /* ty=Tensor[(2, 14, 8), float64] */;
  %982 = logical_xor(%975, %976) /* ty=Tensor[(2, 14, 8), uint8] */;
  %983 = cosh(%977) /* ty=Tensor[(2, 14, 8), float64] */;
  (%978, %979, meta[relay.Constant][35] /* ty=Tensor[(128, 2), float32] */, %980, %981, %982, %983)
}

def @func_7528(%var_7526: Tensor[(2, 14, 8), float64], %var_7527: Tensor[(2, 14, 8), float64]) -> (Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), int8]) {
  @func_7524(%var_7526, %var_7527) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), int8]) */
}

def @func_17057() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %988 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
    %984 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
    %985 = @func_13374() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %986 = %984.1;
    %987 = %985.1;
    (%986, %987)
  };
  %988() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */
}

def @func_17319(%var_17202: Tensor[(245, 3), float32]) -> (Tensor[(630), bool], Tensor[(2, 6, 14), int64], Tensor[(77), uint16], Tensor[(13, 14, 12), float64], Tensor[(2, 14, 8), float64], Tensor[(7, 3, 14), float32], Tensor[(294), float32], Tensor[(100, 2184), bool], Tensor[(735), bool]) {
  %989 = @func_15518() /* ty=(Tensor[(630), bool],) */;
  %990 = @func_5837() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */;
  %991 = cast(meta[relay.Constant][37] /* ty=Tensor[(2184), float64] */, dtype="float64") /* ty=Tensor[(2184), float64] */;
  %992 = cast(meta[relay.Constant][37] /* ty=Tensor[(2184), float64] */, dtype="float64") /* ty=Tensor[(2184), float64] */;
  %993 = cast(meta[relay.Constant][38] /* ty=Tensor[(100, 1), float32] */, dtype="float32") /* ty=Tensor[(100, 1), float32] */;
  %994 = reshape(%991, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %995 = reshape(%992, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %996 = reshape(%993, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %997 = @func_9246(%994, %995, %996) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(100), float32], Tensor[(2, 128), bool]) */;
  %998 = @func_8470() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %999 = cast(meta[relay.Constant][39] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %1000 = cast(meta[relay.Constant][39] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %1001 = reshape(%999, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
  %1002 = reshape(%1000, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float32] */;
  %1003 = @func_11006(%1001, %1002) /* ty=(Tensor[(7, 3, 14), float32],) */;
  %1004 = cast(meta[relay.Constant][38] /* ty=Tensor[(100, 1), float32] */, dtype="bool") /* ty=Tensor[(100, 1), bool] */;
  %1005 = cast(meta[relay.Constant][37] /* ty=Tensor[(2184), float64] */, dtype="bool") /* ty=Tensor[(2184), bool] */;
  %1006 = cast(meta[relay.Constant][40] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1007 = cast(meta[relay.Constant][36] /* ty=Tensor[(77), uint16] */, dtype="uint16") /* ty=Tensor[(77), uint16] */;
  %1008 = cast(%var_17202, dtype="float32") /* ty=Tensor[(245, 3), float32] */;
  %1009 = reshape(%1006, newshape=[]) /* ty=uint16 */;
  %1010 = reshape(%1007, newshape=[7, 11, 1]) /* ty=Tensor[(7, 11, 1), uint16] */;
  %1011 = reshape(%1008, newshape=[735]) /* ty=Tensor[(735), float32] */;
  %1012 = @func_7763(%1009, %1010, %1011) /* ty=(Tensor[(7, 11, 1), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(7, 7, 15), float32], Tensor[(735), float32], Tensor[(7, 11, 1), uint8], Tensor[(630), bool]) */;
  %1013 = %1012.5;
  %1014 = cast(%var_17202, dtype="bool") /* ty=Tensor[(245, 3), bool] */;
  %1015 = cast(meta[relay.Constant][40] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %1016 = equal(%1014, %1015) /* ty=Tensor[(245, 3), bool] */;
  %1017 = cast(%1016, dtype="bool") /* ty=Tensor[(245, 3), bool] */;
  %1018 = shape_of(%1013, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1019 = cast(%1013, dtype="bool") /* ty=Tensor[(735), bool] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1021 = %989.0;
  %1022 = %990.0;
  %1023 = %997.0;
  %1024 = %998.0;
  %1025 = %1003.0;
  %1026 = less(%1004, %1005) /* ty=Tensor[(100, 2184), bool] */;
  %1027 = less(%1019, %1020) /* ty=Tensor[(735), bool] */;
  (%1021, %1022, meta[relay.Constant][36] /* ty=Tensor[(77), uint16] */, %1023, %1024, %1025, meta[relay.Constant][39] /* ty=Tensor[(294), float32] */, %1026, %1027)
}

def @func_15725() -> (Tensor[(630), bool], Tensor[(3, 14, 15), bool]) {
  @func_15723() /* ty=(Tensor[(630), bool], Tensor[(3, 14, 15), bool]) */
}

def @func_15748() -> (Tensor[(630), bool],) {
  %1028 = @func_12950() /* ty=Tensor[(630), bool] */;
  (%1028,)
}

def @func_4408() -> Tensor[(630), bool] {
  %1029 = @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %1029.1
}

def @func_2908() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %1033 = fn () -> (Tensor[(630), bool], Tensor[(630), bool]) {
    %1030 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %1031 = @func_1271() /* ty=Tensor[(630), bool] */;
    %1032 = %1030.1;
    (%1031, %1032)
  };
  %1033() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_3104() -> Tensor[(630), bool] {
  @func_3102() /* ty=Tensor[(630), bool] */
}

def @func_11318() -> Tensor[(330), float32] {
  @func_11316() /* ty=Tensor[(330), float32] */
}

def @func_7238() -> (Tensor[(630), bool],) {
  %1034 = @func_1871() /* ty=Tensor[(630), bool] */;
  (%1034,)
}

def @func_2811() -> (Tensor[(10, 45), bool],) {
  %1035 = @func_2770() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */;
  %1036 = %1035.4;
  (%1036,)
}

def @func_6011() -> Tensor[(630), bool] {
  %1037 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %1037.2
}

def @func_11219() -> Tensor[(630), bool] {
  @func_11217() /* ty=Tensor[(630), bool] */
}

def @func_1218() -> (Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) {
  @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */
}

def @func_15545() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  %1042 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
    %1038 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %1039 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %1040 = %1038.0;
    %1041 = %1039.0;
    (%1040, %1041)
  };
  %1042() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */
}

def @func_2543() -> (Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) {
  %1050 = fn () -> (Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) {
    %1043 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
    %1044 = @func_1240() /* ty=(Tensor[(630), bool],) */;
    %1045 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %1046 = @func_2451() /* ty=Tensor[(630), bool] */;
    %1047 = %1043.3;
    %1048 = %1044.0;
    %1049 = %1045.1;
    (%1046, %1047, %1048, %1049)
  };
  %1050() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_15033() -> (Tensor[(2, 14, 8), float64], Tensor[(3, 2, 11), float32], Tensor[(66), float32]) {
  @func_15031() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(3, 2, 11), float32], Tensor[(66), float32]) */
}

def @func_4365(%var_4363: Tensor[(5, 4, 5), float32], %var_4364: Tensor[(2, 128), float32]) -> (Tensor[(5, 4, 5), float32], Tensor[(630), bool], Tensor[(2, 128), float32]) {
  %1057 = fn (%var_4334: Tensor[(5, 4, 5), float32], %var_4340: Tensor[(2, 128), float32]) -> (Tensor[(5, 4, 5), float32], Tensor[(630), bool], Tensor[(2, 128), float32]) {
    %1051 = cast(%var_4334, dtype="float32") /* ty=Tensor[(5, 4, 5), float32] */;
    %1052 = cast(%var_4340, dtype="float32") /* ty=Tensor[(2, 128), float32] */;
    %1053 = reshape(%1052, newshape=[1, 256]) /* ty=Tensor[(1, 256), float32] */;
    %1054 = @func_1962(%1053) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */;
    %1055 = exp(%1051) /* ty=Tensor[(5, 4, 5), float32] */;
    %1056 = %1054.1;
    (%1055, %1056, %var_4340)
  };
  %1057(%var_4363, %var_4364) /* ty=(Tensor[(5, 4, 5), float32], Tensor[(630), bool], Tensor[(2, 128), float32]) */
}

def @func_14740() -> (Tensor[(3, 14, 15), bool], Tensor[(13, 14, 10), bool], Tensor[(182), int64], Tensor[(1820), int64]) {
  %1058 = @func_6751() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %1059 = cast(meta[relay.Constant][41] /* ty=Tensor[(182), int64] */, dtype="int64") /* ty=Tensor[(182), int64] */;
  %1060 = cast(meta[relay.Constant][42] /* ty=Tensor[(1820), int64] */, dtype="int64") /* ty=Tensor[(1820), int64] */;
  %1061 = cast(meta[relay.Constant][42] /* ty=Tensor[(1820), int64] */, dtype="bool") /* ty=Tensor[(1820), bool] */;
  %1062 = reshape(%1059, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), int64] */;
  %1063 = reshape(%1060, newshape=[13, 14, 10]) /* ty=Tensor[(13, 14, 10), int64] */;
  %1064 = reshape(%1061, newshape=[13, 14, 10]) /* ty=Tensor[(13, 14, 10), bool] */;
  %1065 = @func_10185(%1062, %1063, %1064) /* ty=(Tensor[(13, 14, 10), bool],) */;
  %1066 = %1058.0;
  %1067 = %1065.0;
  (%1066, %1067, meta[relay.Constant][41] /* ty=Tensor[(182), int64] */, meta[relay.Constant][42] /* ty=Tensor[(1820), int64] */)
}

def @func_1935() -> (Tensor[(630), bool],) {
  %1068 = @func_1871() /* ty=Tensor[(630), bool] */;
  (%1068,)
}

def @func_2452() -> Tensor[(630), bool] {
  %1070 = fn () -> Tensor[(630), bool] {
    %1069 = @func_1240() /* ty=(Tensor[(630), bool],) */;
    %1069.0
  };
  %1070() /* ty=Tensor[(630), bool] */
}

def @func_6138() -> (Tensor[(630), bool],) {
  %1071 = @func_6011() /* ty=Tensor[(630), bool] */;
  (%1071,)
}

def @func_9121() -> (Tensor[(2, 14, 8), float64],) {
  %1073 = fn () -> (Tensor[(2, 14, 8), float64],) {
    %1072 = @func_7146() /* ty=Tensor[(2, 14, 8), float64] */;
    (%1072,)
  };
  %1073() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_14742() -> (Tensor[(3, 14, 15), bool], Tensor[(13, 14, 10), bool], Tensor[(182), int64], Tensor[(1820), int64]) {
  @func_14740() /* ty=(Tensor[(3, 14, 15), bool], Tensor[(13, 14, 10), bool], Tensor[(182), int64], Tensor[(1820), int64]) */
}

def @func_4018() -> Tensor[(224, 630), float32] {
  @func_4016() /* ty=Tensor[(224, 630), float32] */
}

def @func_14796() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), int16]) {
  %1083 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), int16]) {
    %1074 = @func_6894() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %1075 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %1076 = %1075.0;
    %1077 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 14, 8), float64] */, dtype="int16") /* ty=Tensor[(2, 14, 8), int16] */;
    %1078 = shape_of(%1076, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1079 = cast(%1076, dtype="int16") /* ty=Tensor[(2, 14, 8), int16] */;
    %1080 = dyn.reshape(%1077, %1078, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1081 = %1074.0;
    %1082 = bitwise_and(%1079, %1080) /* ty=Tensor[(2, 14, 8), int16] */;
    (%1081, %1082)
  };
  %1083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), int16]) */
}

def @func_15006() -> (Tensor[(3, 14, 15), bool], Tensor[(6, 1, 6), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), bool]) {
  %1093 = fn () -> (Tensor[(3, 14, 15), bool], Tensor[(6, 1, 6), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), bool]) {
    %1084 = @func_6751() /* ty=(Tensor[(3, 14, 15), bool],) */;
    %1085 = @func_9754() /* ty=(Tensor[(6, 1, 6), float64],) */;
    %1086 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
    %1087 = @func_2770() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */;
    %1088 = %1084.0;
    %1089 = %1085.0;
    %1090 = %1086.1;
    %1091 = @func_1271() /* ty=Tensor[(630), bool] */;
    %1092 = %1087.4;
    (%1088, %1089, %1090, %1091, %1092)
  };
  %1093() /* ty=(Tensor[(3, 14, 15), bool], Tensor[(6, 1, 6), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), bool]) */
}

def @func_3211() -> Tensor[(2, 14, 8), int16] {
  %1094 = @func_2511() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */;
  %1095 = %1094.1;
  %1096 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 14, 8), float64] */, dtype="int16") /* ty=Tensor[(2, 14, 8), int16] */;
  %1097 = shape_of(%1095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1098 = cast(%1095, dtype="int16") /* ty=Tensor[(2, 14, 8), int16] */;
  %1099 = dyn.reshape(%1096, %1097, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  multiply(%1098, %1099) /* ty=Tensor[(2, 14, 8), int16] */
}

def @func_7638() -> Tensor[(630), bool] {
  @func_7636() /* ty=Tensor[(630), bool] */
}

def @func_12448() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %1100 = @func_11895() /* ty=(Tensor[(630), bool],) */;
  %1101 = @func_11895() /* ty=(Tensor[(630), bool],) */;
  %1102 = %1100.0;
  %1103 = %1101.0;
  (%1102, %1103)
}

def @func_4734() -> (Tensor[(224), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  @func_4732() /* ty=(Tensor[(224), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */
}

def @func_10592() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %1110 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
    %1104 = @func_9120() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %1105 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %1106 = @func_5752() /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(8, 10, 3), float32]) */;
    %1107 = %1104.0;
    %1108 = %1105.1;
    %1109 = %1106.1;
    (%1107, %1108, %1109)
  };
  %1110() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */
}

def @func_10000() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(330), float32], Tensor[(630), bool]) {
  @func_9998() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(330), float32], Tensor[(630), bool]) */
}

def @func_17649() -> (Tensor[(630), bool], Tensor[(224, 630), bool]) {
  %1111 = @func_9383() /* ty=Tensor[(630), bool] */;
  %1112 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
  %1113 = %1112.2;
  %1114 = cast(%1111, dtype="bool") /* ty=Tensor[(630), bool] */;
  %1115 = cast(%1113, dtype="bool") /* ty=Tensor[(224, 1), bool] */;
  %1116 = @func_13633() /* ty=Tensor[(630), bool] */;
  %1117 = not_equal(%1114, %1115) /* ty=Tensor[(224, 630), bool] */;
  (%1116, %1117)
}

def @func_14206() -> (Tensor[(2, 14, 8), float64],) {
  @func_14204() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_11072() -> Tensor[(630), bool] {
  @func_11070() /* ty=Tensor[(630), bool] */
}

def @func_7147() -> Tensor[(2, 14, 8), float64] {
  %1119 = fn () -> Tensor[(2, 14, 8), float64] {
    %1118 = @func_2770() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */;
    %1118.1
  };
  %1119() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_13635() -> Tensor[(630), bool] {
  @func_13633() /* ty=Tensor[(630), bool] */
}

def @func_4513() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) {
  @func_4511() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_12402() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %1124 = fn () -> (Tensor[(630), bool], Tensor[(630), bool]) {
    %1120 = @func_6944() /* ty=(Tensor[(630), bool],) */;
    %1121 = @func_11445() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), uint64], Tensor[(224), float64]) */;
    %1122 = %1120.0;
    %1123 = %1121.1;
    (%1122, %1123)
  };
  %1124() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_14135() -> (Tensor[(2, 14, 8), float64], Tensor[(1, 16, 16), float64], Tensor[(256), float32]) {
  @func_14133() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(1, 16, 16), float64], Tensor[(256), float32]) */
}

def @func_6140() -> (Tensor[(630), bool],) {
  @func_6138() /* ty=(Tensor[(630), bool],) */
}

def @func_2404() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %1128 = fn () -> (Tensor[(630), bool], Tensor[(630), bool]) {
    %1125 = @func_1474() /* ty=(Tensor[(630), bool],) */;
    %1126 = %1125.0;
    %1127 = @func_1366() /* ty=Tensor[(630), bool] */;
    (%1126, %1127)
  };
  %1128() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_8677(%var_8633: Tensor[(1, 3, 14), float64]) -> (Tensor[(?, 3, 14), bool], Tensor[(2, 14, 8), float64]) {
  %1129 = cast(%var_8633, dtype="float64") /* ty=Tensor[(1, 3, 14), float64] */;
  %1130 = asinh(%1129) /* ty=Tensor[(1, 3, 14), float64] */;
  %1131 = cast(%1130, dtype="bool") /* ty=Tensor[(1, 3, 14), bool] */;
  %1132 = shape_of(%var_8633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1133 = cast(%var_8633, dtype="bool") /* ty=Tensor[(1, 3, 14), bool] */;
  %1134 = dyn.reshape(%1131, %1132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1135 = @func_2634() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1136 = logical_and(%1133, %1134) /* ty=Tensor[(?, 3, 14), bool] */;
  %1137 = %1135.0;
  (%1136, %1137)
}

def @func_9564() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64]) {
  @func_9562() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */
}

def @func_4659() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  @func_4657() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */
}

def @func_5469() -> Tensor[(630), bool] {
  @func_1366() /* ty=Tensor[(630), bool] */
}

def @func_6259() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), float64]) {
  %1144 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), float64]) {
    %1138 = @func_2811() /* ty=(Tensor[(10, 45), bool],) */;
    %1139 = %1138.0;
    %1140 = cast(%1139, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
    %1141 = @func_3799() /* ty=Tensor[(2, 14, 8), float64] */;
    %1142 = @func_2451() /* ty=Tensor[(630), bool] */;
    %1143 = exp(%1140) /* ty=Tensor[(10, 45), float64] */;
    (%1141, %1142, %1143)
  };
  %1144() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(10, 45), float64]) */
}

def @func_1461(%var_1459: Tensor[(4, 56), float64]) -> (Tensor[(4, 56), uint64], Tensor[(630), bool], Tensor[(4, 56), float32]) {
  @func_1458(%var_1459) /* ty=(Tensor[(4, 56), uint64], Tensor[(630), bool], Tensor[(4, 56), float32]) */
}

def @func_9603() -> (Tensor[(2, 14, 8), float64],) {
  @func_9601() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_1873() -> Tensor[(630), bool] {
  @func_1871() /* ty=Tensor[(630), bool] */
}

def @func_13482(%var_13431: Tensor[(2240), float64]) -> (Tensor[(630), bool], Tensor[(2240), float64], Tensor[(3, 14, 15), bool], Tensor[(224, ?), uint32]) {
  %1145 = @func_6751() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %1146 = cast(%var_13431, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %1147 = reshape(%1146, newshape=[224, 10]) /* ty=Tensor[(224, 10), float64] */;
  %1148 = @func_8962(%1147) /* ty=(Tensor[(2, 6, 14), int64], Tensor[(735), float32], Tensor[(224, 10), bool], Tensor[(224, 1), float32]) */;
  %1149 = %1148.3;
  %1150 = @func_3839() /* ty=Tensor[(224), float64] */;
  %1151 = cast(%1150, dtype="uint32") /* ty=Tensor[(224), uint32] */;
  %1152 = shape_of(%1149, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1153 = cast(%1149, dtype="uint32") /* ty=Tensor[(224, 1), uint32] */;
  %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1155 = @func_8221() /* ty=Tensor[(630), bool] */;
  %1156 = %1145.0;
  %1157 = right_shift(%1153, %1154) /* ty=Tensor[(224, ?), uint32] */;
  (%1155, %var_13431, %1156, %1157)
}

def @func_6039() -> Tensor[(630), bool] {
  %1159 = fn () -> Tensor[(630), bool] {
    %1158 = @func_1935() /* ty=(Tensor[(630), bool],) */;
    %1158.0
  };
  %1159() /* ty=Tensor[(630), bool] */
}

def @func_7127() -> Tensor[(630), bool] {
  %1160 = fn () -> Tensor[(630), bool] {
    @func_1871() /* ty=Tensor[(630), bool] */
  };
  %1160() /* ty=Tensor[(630), bool] */
}

def @func_7240() -> (Tensor[(630), bool],) {
  @func_7238() /* ty=(Tensor[(630), bool],) */
}

def @func_7297() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) {
  %1168 = fn () -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) {
    %1161 = @func_3138() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %1162 = @func_1935() /* ty=(Tensor[(630), bool],) */;
    %1163 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
    %1164 = %1161.0;
    %1165 = %1162.0;
    %1166 = %1163.0;
    %1167 = @func_1871() /* ty=Tensor[(630), bool] */;
    (%1164, %1165, %1166, %1167)
  };
  %1168() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_2188() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  %1169 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
  %1170 = cast(%1169, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1171 = reshape(%1170, newshape=[4, 56]) /* ty=Tensor[(4, 56), float64] */;
  %1172 = @func_1529(%1171) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %1173 = %1172.1;
  (%1169, %1173)
}

def @func_2261() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
  %1179 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) {
    %1174 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %1175 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
    %1176 = cast(%1175, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
    %1177 = %1174.0;
    %1178 = rsqrt(%1176) /* ty=Tensor[(2, 14, 8), float64] */;
    (%1177, %1178)
  };
  %1179() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */
}

def @func_6896() -> (Tensor[(2, 14, 8), float64],) {
  @func_6894() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_1965(%var_1963: Tensor[(1, 256), float32]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) {
  @func_1962(%var_1963) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */
}

def @func_4016() -> Tensor[(224, 630), float32] {
  %1180 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
  %1181 = %1180.2;
  %1182 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1183 = %1182.1;
  %1184 = cast(%1181, dtype="float32") /* ty=Tensor[(224, 1), float32] */;
  %1185 = cast(%1183, dtype="float32") /* ty=Tensor[(630), float32] */;
  power(%1184, %1185) /* ty=Tensor[(224, 630), float32] */
}

def @func_10105(%var_10104: Tensor[(3, 10, 1), float64]) -> Tensor[(3, 10, 1), float64] {
  %1187 = fn (%var_10082: Tensor[(3, 10, 1), float64]) -> Tensor[(3, 10, 1), float64] {
    %1186 = cast(%var_10082, dtype="float64") /* ty=Tensor[(3, 10, 1), float64] */;
    log(%1186) /* ty=Tensor[(3, 10, 1), float64] */
  };
  %1187(%var_10104) /* ty=Tensor[(3, 10, 1), float64] */
}

def @func_3840() -> Tensor[(224), float64] {
  %1189 = fn () -> Tensor[(224), float64] {
    %1188 = @func_3683() /* ty=(Tensor[(224), float64],) */;
    %1188.0
  };
  %1189() /* ty=Tensor[(224), float64] */
}

def @func_7111(%var_7109: Tensor[(256), float32], %var_7110: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(100), float32], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(330), float32], Tensor[(2, 128), int8]) {
  %1217 = fn (%var_7037: Tensor[(256), float32], %var_7073: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(100), float32], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(330), float32], Tensor[(2, 128), int8]) {
    %1190 = @func_1935() /* ty=(Tensor[(630), bool],) */;
    %1191 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
    %1192 = @func_4442() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
    %1193 = cast(%var_7073, dtype="float32") /* ty=Tensor[(330), float32] */;
    %1194 = reshape(%1193, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %1195 = @func_6681(%1194) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
    %1196 = cast(meta[relay.Constant][45] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
    %1197 = cast(%var_7037, dtype="float32") /* ty=Tensor[(256), float32] */;
    %1198 = reshape(%1196, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), float32] */;
    %1199 = reshape(%1197, newshape=[2, 128]) /* ty=Tensor[(2, 128), float32] */;
    %1200 = @func_4362(%1198, %1199) /* ty=(Tensor[(5, 4, 5), float32], Tensor[(630), bool], Tensor[(2, 128), float32]) */;
    %1201 = %1200.2;
    %1202 = cast(%var_7037, dtype="bool") /* ty=Tensor[(256), bool] */;
    %1203 = shape_of(%1201, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1204 = cast(%1201, dtype="bool") /* ty=Tensor[(2, 128), bool] */;
    %1205 = dyn.reshape(%1202, %1203, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1206 = logical_and(%1204, %1205) /* ty=Tensor[(2, 128), bool] */;
    %1207 = cast(%1201, dtype="int8") /* ty=Tensor[(2, 128), int8] */;
    %1208 = shape_of(%1206, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1209 = cast(%1206, dtype="int8") /* ty=Tensor[(2, 128), int8] */;
    %1210 = dyn.reshape(%1207, %1208, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %1211 = %1190.0;
    %1212 = @func_6011() /* ty=Tensor[(630), bool] */;
    %1213 = %1191.0;
    %1214 = %1192.2;
    %1215 = %1195.2;
    %1216 = add(%1209, %1210) /* ty=Tensor[(2, 128), int8] */;
    (%1211, %1212, meta[relay.Constant][45] /* ty=Tensor[(100), float32] */, %1213, %1214, %1215, %var_7073, %1216)
  };
  %1217(%var_7109, %var_7110) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(100), float32], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(330), float32], Tensor[(2, 128), int8]) */
}

def @func_10614() -> Tensor[(2, 14, 8), float64] {
  @func_10612() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_13401(%var_13398: Tensor[(66), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(330), float32], Tensor[(330), float32], Tensor[(630), bool], Tensor[(66), float32]) {
  %1218 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %1219 = cast(meta[relay.Constant][46] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1220 = reshape(%1219, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %1221 = @func_11146(%1220) /* ty=(Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %1222 = cast(%var_13398, dtype="float32") /* ty=Tensor[(66), float32] */;
  %1223 = reshape(%1222, newshape=[3, 2, 11]) /* ty=Tensor[(3, 2, 11), float32] */;
  %1224 = @func_6438(%1223) /* ty=(Tensor[(3, 2, 11), float32], Tensor[(630), bool]) */;
  %1225 = %1218.1;
  %1226 = %1221.2;
  %1227 = %1224.1;
  (%1225, %1226, meta[relay.Constant][46] /* ty=Tensor[(330), float32] */, %1227, %var_13398)
}

def @func_16048() -> (Tensor[(630), bool],) {
  %1228 = @func_12910() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1229 = %1228.1;
  (%1229,)
}

def @func_11070() -> Tensor[(630), bool] {
  %1230 = @func_1935() /* ty=(Tensor[(630), bool],) */;
  %1230.0
}

def @func_16695() -> (Tensor[(13, 4, 9), float64], Tensor[(2, 14, 8), float32]) {
  @func_16693() /* ty=(Tensor[(13, 4, 9), float64], Tensor[(2, 14, 8), float32]) */
}

def @func_17545() -> (Tensor[(630), bool],) {
  %1231 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %1232 = %1231.3;
  (%1232,)
}

def @func_11009(%var_11007: Tensor[(7, 3, 14), float32], %var_11008: Tensor[(7, 3, 14), float32]) -> (Tensor[(7, 3, 14), float32],) {
  %1238 = fn (%var_10971: Tensor[(7, 3, 14), float32], %var_10972: Tensor[(7, 3, 14), float32]) -> (Tensor[(7, 3, 14), float32],) {
    %1233 = cast(%var_10972, dtype="float32") /* ty=Tensor[(7, 3, 14), float32] */;
    %1234 = shape_of(%var_10971, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1235 = cast(%var_10971, dtype="float32") /* ty=Tensor[(7, 3, 14), float32] */;
    %1236 = dyn.reshape(%1233, %1234, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1237 = maximum(%1235, %1236) /* ty=Tensor[(7, 3, 14), float32] */;
    (%1237,)
  };
  %1238(%var_11007, %var_11008) /* ty=(Tensor[(7, 3, 14), float32],) */
}

def @func_14133() -> (Tensor[(2, 14, 8), float64], Tensor[(1, 16, 16), float64], Tensor[(256), float32]) {
  %1239 = cast(meta[relay.Constant][47] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %1240 = reshape(%1239, newshape=[1, 256]) /* ty=Tensor[(1, 256), float32] */;
  %1241 = @func_1962(%1240) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) */;
  %1242 = @func_10612() /* ty=Tensor[(2, 14, 8), float64] */;
  %1243 = %1241.3;
  (%1242, %1243, meta[relay.Constant][47] /* ty=Tensor[(256), float32] */)
}

def @func_1367() -> Tensor[(630), bool] {
  %1245 = fn () -> Tensor[(630), bool] {
    %1244 = @func_1240() /* ty=(Tensor[(630), bool],) */;
    %1244.0
  };
  %1245() /* ty=Tensor[(630), bool] */
}

def @func_16604() -> (Tensor[(2, 14, 8), float64],) {
  %1248 = fn () -> (Tensor[(2, 14, 8), float64],) {
    %1246 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
    %1247 = %1246.1;
    (%1247,)
  };
  %1248() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_11855() -> (Tensor[(2, 14, 8), float64],) {
  %1250 = fn () -> (Tensor[(2, 14, 8), float64],) {
    %1249 = @func_1632() /* ty=Tensor[(2, 14, 8), float64] */;
    (%1249,)
  };
  %1250() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_10525(%var_10523: Tensor[(13, 11, 4), float64], %var_10524: Tensor[(13, 11, 4), float64]) -> Tensor[(13, 11, 4), float64] {
  @func_10521(%var_10523, %var_10524) /* ty=Tensor[(13, 11, 4), float64] */
}

def @func_12310() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) {
  %1257 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) {
    %1251 = @func_6407() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
    %1252 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
    %1253 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %1254 = %1251.0;
    %1255 = %1252.1;
    %1256 = %1253.1;
    (%1254, %1255, %1256)
  };
  %1257() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */
}

def @func_9754() -> (Tensor[(6, 1, 6), float64],) {
  %1258 = @func_8725() /* ty=(Tensor[(6, 1, 6), float64], Tensor[(2, 14, 8), float64]) */;
  %1259 = %1258.0;
  (%1259,)
}

def @func_10185(%var_10149: Tensor[(13, 14, 1), int64], %var_10150: Tensor[(13, 14, 10), int64], %var_10170: Tensor[(13, 14, 10), bool]) -> (Tensor[(13, 14, 10), bool],) {
  %1260 = cast(%var_10149, dtype="bool") /* ty=Tensor[(13, 14, 1), bool] */;
  %1261 = cast(%var_10150, dtype="bool") /* ty=Tensor[(13, 14, 10), bool] */;
  %1262 = greater(%1260, %1261) /* ty=Tensor[(13, 14, 10), bool] */;
  %1263 = cast(%var_10170, dtype="bool") /* ty=Tensor[(13, 14, 10), bool] */;
  %1264 = shape_of(%1262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1265 = cast(%1262, dtype="bool") /* ty=Tensor[(13, 14, 10), bool] */;
  %1266 = dyn.reshape(%1263, %1264, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1267 = equal(%1265, %1266) /* ty=Tensor[(13, 14, 10), bool] */;
  (%1267,)
}

def @func_10017(%var_10016: Tensor[(70), float64]) -> (Tensor[(630), bool], Tensor[(1, 14, 5), float32], Tensor[(70), float64]) {
  %1273 = fn (%var_10012: Tensor[(70), float64]) -> (Tensor[(630), bool], Tensor[(1, 14, 5), float32], Tensor[(70), float64]) {
    %1268 = cast(%var_10012, dtype="float64") /* ty=Tensor[(70), float64] */;
    %1269 = reshape(%1268, newshape=[70]) /* ty=Tensor[(70), float64] */;
    %1270 = @func_9691(%1269) /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(1, 14, 5), float32], Tensor[(70), float64]) */;
    %1271 = @func_6011() /* ty=Tensor[(630), bool] */;
    %1272 = %1270.2;
    (%1271, %1272, %var_10012)
  };
  %1273(%var_10016) /* ty=(Tensor[(630), bool], Tensor[(1, 14, 5), float32], Tensor[(70), float64]) */
}

def @func_12096() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 330), float32]) {
  %1280 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 330), float32]) {
    %1274 = @func_9562() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
    %1275 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 330), float32] */, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
    %1276 = reshape(%1275, newshape=[5, 66]) /* ty=Tensor[(5, 66), float32] */;
    %1277 = @func_9959(%1276) /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(5, 66), float32]) */;
    %1278 = %1274.0;
    %1279 = %1277.1;
    (%1278, %1279, meta[relay.Constant][48] /* ty=Tensor[(1, 330), float32] */)
  };
  %1280() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 330), float32]) */
}

def @func_9708() -> (Tensor[(2, 14, 8), float64], Tensor[(224), float64]) {
  @func_9706() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */
}

def @func_15123() -> (Tensor[(224), float64],) {
  %1281 = @func_12996() /* ty=Tensor[(224), float64] */;
  (%1281,)
}

def @func_12666(%var_12665: Tensor[(224, 5), float64]) -> (Tensor[(224, 5), float64],) {
  %1287 = fn (%var_12658: Tensor[(224, 5), float64]) -> (Tensor[(224, 5), float64],) {
    %1282 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
    %1283 = %1282.2;
    %1284 = cast(%1283, dtype="float64") /* ty=Tensor[(224, 1), float64] */;
    %1285 = cast(%var_12658, dtype="float64") /* ty=Tensor[(224, 5), float64] */;
    %1286 = divide(%1284, %1285) /* ty=Tensor[(224, 5), float64] */;
    (%1286,)
  };
  %1287(%var_12665) /* ty=(Tensor[(224, 5), float64],) */
}

def @func_8214(%var_8173: Tensor[(13, 4), float32]) -> (Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(1, 4, 13), float32], Tensor[(13, 4), float32], Tensor[(2, 14, 8), float64], Tensor[(735), float32], Tensor[(630), bool], Tensor[(2, 14, 8), int16], Tensor[(40), float32]) {
  %1288 = @func_6998() /* ty=(Tensor[(630), bool],) */;
  %1289 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %1290 = @func_6894() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1291 = cast(%var_8173, dtype="float32") /* ty=Tensor[(13, 4), float32] */;
  %1292 = reshape(%1291, newshape=[1, 4, 13]) /* ty=Tensor[(1, 4, 13), float32] */;
  %1293 = cast(meta[relay.Constant][49] /* ty=Tensor[(735), float32] */, dtype="float32") /* ty=Tensor[(735), float32] */;
  %1294 = reshape(%1293, newshape=[7, 7, 15]) /* ty=Tensor[(7, 7, 15), float32] */;
  %1295 = @func_2863(%1294) /* ty=(Tensor[(7, 7, 15), float32], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64], Tensor[(630), bool]) */;
  %1296 = @func_3383() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool]) */;
  %1297 = cast(meta[relay.Constant][50] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1298 = reshape(%1297, newshape=[20, 2]) /* ty=Tensor[(20, 2), float32] */;
  %1299 = @func_5087(%1298) /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), int16], Tensor[(8, 5, 1), float32], Tensor[(20, 2), float32]) */;
  %1300 = %1288.0;
  %1301 = %1289.1;
  %1302 = %1290.0;
  %1303 = @func_6463(%1292) /* ty=Tensor[(1, 4, 13), float32] */;
  %1304 = %1295.1;
  %1305 = %1296.2;
  %1306 = %1299.1;
  (%1300, %1301, %1302, %1303, %var_8173, %1304, meta[relay.Constant][49] /* ty=Tensor[(735), float32] */, %1305, %1306, meta[relay.Constant][50] /* ty=Tensor[(40), float32] */)
}

def @func_15518() -> (Tensor[(630), bool],) {
  %1307 = @func_13560() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %1308 = %1307.1;
  (%1308,)
}

def @func_15520() -> (Tensor[(630), bool],) {
  @func_15518() /* ty=(Tensor[(630), bool],) */
}

def @func_7561() -> (Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), bool]) {
  @func_7559() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), bool]) */
}

def @func_13633() -> Tensor[(630), bool] {
  %1309 = @func_13560() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
  %1309.1
}

def @func_14433() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  @func_14431() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */
}

def @func_10895() -> (Tensor[(224), float64],) {
  %1310 = @func_9562() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
  %1311 = %1310.1;
  (%1311,)
}

def @func_14924(%var_14918: Tensor[(6, 8, 8), uint32]) -> Tensor[(6, 8, 8), uint32] {
  %1312 = cast(%var_14918, dtype="uint32") /* ty=Tensor[(6, 8, 8), uint32] */;
  %1313 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(6, 8, 8), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1314 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 8, 8), uint32] */, dtype="uint32") /* ty=Tensor[(6, 8, 8), uint32] */;
  %1315 = dyn.reshape(%1312, %1313, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%1314, %1315) /* ty=Tensor[(6, 8, 8), uint32] */
}

def @func_6944() -> (Tensor[(630), bool],) {
  %1316 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %1317 = %1316.0;
  (%1317,)
}

def @func_9961(%var_9960: Tensor[(5, 66), float32]) -> (Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(5, 66), float32]) {
  %1324 = fn (%var_9947: Tensor[(5, 66), float32]) -> (Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(5, 66), float32]) {
    %1318 = @func_9027() /* ty=(Tensor[(224), float64], Tensor[(630), bool]) */;
    %1319 = cast(%var_9947, dtype="float32") /* ty=Tensor[(5, 66), float32] */;
    %1320 = reshape(%1319, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %1321 = @func_6681(%1320) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
    %1322 = %1318.0;
    %1323 = %1321.2;
    (%1322, %1323, %var_9947)
  };
  %1324(%var_9960) /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(5, 66), float32]) */
}

def @func_8726() -> (Tensor[(6, 1, 6), float64], Tensor[(2, 14, 8), float64]) {
  %1329 = fn () -> (Tensor[(6, 1, 6), float64], Tensor[(2, 14, 8), float64]) {
    %1325 = cast(meta[relay.Constant][52] /* ty=Tensor[(6, 1, 6), float64] */, dtype="float64") /* ty=Tensor[(6, 1, 6), float64] */;
    %1326 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %1327 = cos(%1325) /* ty=Tensor[(6, 1, 6), float64] */;
    %1328 = %1326.0;
    (%1327, %1328)
  };
  %1329() /* ty=(Tensor[(6, 1, 6), float64], Tensor[(2, 14, 8), float64]) */
}

def @func_3083() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %1330 = @func_2634() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1331 = @func_2542() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %1332 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %1333 = %1330.0;
  %1334 = %1331.0;
  %1335 = %1332.0;
  %1336 = @func_1366() /* ty=Tensor[(630), bool] */;
  (%1333, %1334, %1335, %1336)
}

def @func_11586(%var_11585: Tensor[(11, 6), float32]) -> (Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 6), float32], Tensor[(2, 14, 8), float64]) {
  %1349 = fn (%var_11569: Tensor[(11, 6), float32]) -> (Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 6), float32], Tensor[(2, 14, 8), float64]) {
    %1337 = @func_8410() /* ty=(Tensor[(630), bool], Tensor[(224), float64]) */;
    %1338 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %1339 = @func_3875() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) */;
    %1340 = cast(%var_11569, dtype="float32") /* ty=Tensor[(11, 6), float32] */;
    %1341 = reshape(%1340, newshape=[3, 2, 11]) /* ty=Tensor[(3, 2, 11), float32] */;
    %1342 = @func_6438(%1341) /* ty=(Tensor[(3, 2, 11), float32], Tensor[(630), bool]) */;
    %1343 = @func_9601() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %1344 = %1337.1;
    %1345 = %1338.1;
    %1346 = %1339.2;
    %1347 = %1342.1;
    %1348 = %1343.0;
    (%1344, %1345, %1346, %1347, %var_11569, %1348)
  };
  %1349(%var_11585) /* ty=(Tensor[(224), float64], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 6), float32], Tensor[(2, 14, 8), float64]) */
}

def @func_12552() -> (Tensor[(2, 14, 8), float64],) {
  %1352 = fn () -> (Tensor[(2, 14, 8), float64],) {
    %1350 = @func_2770() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */;
    %1351 = %1350.3;
    (%1351,)
  };
  %1352() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_2129(%var_2127: Tensor[(2, 14, 8), float64]) -> (Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(128, 2), float32], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint8], Tensor[(2, 14, 8), float64]) {
  @func_2126(%var_2127) /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(128, 2), float32], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint8], Tensor[(2, 14, 8), float64]) */
}

def @func_2813() -> (Tensor[(10, 45), bool],) {
  @func_2811() /* ty=(Tensor[(10, 45), bool],) */
}

def @func_16724() -> (Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 7), float64]) {
  %1358 = fn () -> (Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 7), float64]) {
    %1353 = @func_9601() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %1354 = @func_5837() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */;
    %1355 = @func_14513() /* ty=Tensor[(2, 14, 8), bool] */;
    %1356 = %1353.0;
    %1357 = %1354.1;
    (%1355, %1356, %1357)
  };
  %1358() /* ty=(Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 7), float64]) */
}

def @func_4732() -> (Tensor[(224), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %1359 = @func_2634() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1360 = @func_3839() /* ty=Tensor[(224), float64] */;
  %1361 = @func_1271() /* ty=Tensor[(630), bool] */;
  %1362 = %1359.0;
  (%1360, %1361, %1362)
}

def @func_16020() -> (Tensor[(630), bool],) {
  %1363 = @func_4442() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %1364 = %1363.3;
  (%1364,)
}

def @func_17116(%var_17110: Tensor[(15, 15, 6), int64], %var_17111: Tensor[(15, 15, 6), int64]) -> (Tensor[(15, 15, 6), int64],) {
  %1365 = cast(%var_17111, dtype="int64") /* ty=Tensor[(15, 15, 6), int64] */;
  %1366 = shape_of(%var_17110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1367 = cast(%var_17110, dtype="int64") /* ty=Tensor[(15, 15, 6), int64] */;
  %1368 = dyn.reshape(%1365, %1366, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1369 = logical_xor(%1367, %1368) /* ty=Tensor[(15, 15, 6), int64] */;
  (%1369,)
}

def @func_1561(%var_1559: Tensor[(1, 16, 16), float32]) -> Tensor[(1, 16, 16), float64] {
  @func_1558(%var_1559) /* ty=Tensor[(1, 16, 16), float64] */
}

def @func_8566() -> (Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64]) {
  %1375 = fn () -> (Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64]) {
    %1370 = @func_7213() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float32]) */;
    %1371 = @func_2260() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
    %1372 = @func_7126() /* ty=Tensor[(630), bool] */;
    %1373 = %1370.2;
    %1374 = %1371.1;
    (%1372, %1373, %1374)
  };
  %1375() /* ty=(Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64]) */
}

def @func_17651() -> (Tensor[(630), bool], Tensor[(224, 630), bool]) {
  @func_17649() /* ty=(Tensor[(630), bool], Tensor[(224, 630), bool]) */
}

def @func_15104() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) {
  @func_15102() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */
}

def @func_5838() -> (Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) {
  %1383 = fn () -> (Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) {
    %1376 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
    %1377 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
    %1378 = %1377.2;
    %1379 = cast(%1378, dtype="float64") /* ty=Tensor[(224, 1), float64] */;
    %1380 = cast(meta[relay.Constant][53] /* ty=Tensor[(224, 7), float64] */, dtype="float64") /* ty=Tensor[(224, 7), float64] */;
    %1381 = %1376.0;
    %1382 = floor_divide(%1379, %1380) /* ty=Tensor[(224, 7), float64] */;
    (%1381, %1382)
  };
  %1383() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */
}

def @func_8680(%var_8678: Tensor[(1, 3, 14), float64]) -> (Tensor[(?, 3, 14), bool], Tensor[(2, 14, 8), float64]) {
  @func_8677(%var_8678) /* ty=(Tensor[(?, 3, 14), bool], Tensor[(2, 14, 8), float64]) */
}

def @func_8965(%var_8963: Tensor[(224, 10), float64]) -> (Tensor[(2, 6, 14), int64], Tensor[(735), float32], Tensor[(224, 10), bool], Tensor[(224, 1), float32]) {
  @func_8962(%var_8963) /* ty=(Tensor[(2, 6, 14), int64], Tensor[(735), float32], Tensor[(224, 10), bool], Tensor[(224, 1), float32]) */
}

def @func_9998() -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(330), float32], Tensor[(630), bool]) {
  %1384 = @func_4284() /* ty=(Tensor[(630), bool],) */;
  %1385 = cast(meta[relay.Constant][54] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1386 = reshape(%1385, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %1387 = @func_6681(%1386) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
  %1388 = @func_4732() /* ty=(Tensor[(224), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %1389 = %1384.0;
  %1390 = %1387.0;
  %1391 = %1388.1;
  (%1389, %1390, meta[relay.Constant][54] /* ty=Tensor[(330), float32] */, %1391)
}

def @func_6894() -> (Tensor[(2, 14, 8), float64],) {
  %1392 = @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */;
  %1393 = %1392.3;
  (%1393,)
}

def @func_13485(%var_13483: Tensor[(2240), float64]) -> (Tensor[(630), bool], Tensor[(2240), float64], Tensor[(3, 14, 15), bool], Tensor[(224, ?), uint32]) {
  @func_13482(%var_13483) /* ty=(Tensor[(630), bool], Tensor[(2240), float64], Tensor[(3, 14, 15), bool], Tensor[(224, ?), uint32]) */
}

def @func_15264() -> (Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64]) {
  %1404 = fn () -> (Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64]) {
    %1394 = @func_2673() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %1395 = cast(meta[relay.Constant][55] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
    %1396 = cast(meta[relay.Constant][55] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
    %1397 = reshape(%1395, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
    %1398 = reshape(%1396, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
    %1399 = @func_7524(%1397, %1398) /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), int8]) */;
    %1400 = @func_13928() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
    %1401 = %1394.0;
    %1402 = %1399.1;
    %1403 = %1400.0;
    (%1401, %1402, meta[relay.Constant][55] /* ty=Tensor[(224), float64] */, %1403)
  };
  %1404() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64]) */
}

def @func_2674() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %1408 = fn () -> (Tensor[(630), bool], Tensor[(630), bool]) {
    %1405 = @func_1474() /* ty=(Tensor[(630), bool],) */;
    %1406 = %1405.0;
    %1407 = @func_1871() /* ty=Tensor[(630), bool] */;
    (%1406, %1407)
  };
  %1408() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_413(%var_412: Tensor[(8, 5, 1), float32]) -> Tensor[(8, 5, 1), float32] {
  %1410 = fn (%var_408: Tensor[(8, 5, 1), float32]) -> Tensor[(8, 5, 1), float32] {
    %1409 = cast(%var_408, dtype="float32") /* ty=Tensor[(8, 5, 1), float32] */;
    acosh(%1409) /* ty=Tensor[(8, 5, 1), float32] */
  };
  %1410(%var_412) /* ty=Tensor[(8, 5, 1), float32] */
}

def @func_12605() -> (Tensor[(2, 14, 8), float32], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  @func_12603() /* ty=(Tensor[(2, 14, 8), float32], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */
}

def @func_4853() -> Tensor[(630), bool] {
  @func_4851() /* ty=Tensor[(630), bool] */
}

def @func_16767() -> Tensor[(2, 14, 8), float64] {
  %1411 = fn () -> Tensor[(2, 14, 8), float64] {
    @func_9592() /* ty=Tensor[(2, 14, 8), float64] */
  };
  %1411() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_7636() -> Tensor[(630), bool] {
  @func_1271() /* ty=Tensor[(630), bool] */
}

def @func_9756() -> (Tensor[(6, 1, 6), float64],) {
  @func_9754() /* ty=(Tensor[(6, 1, 6), float64],) */
}

def @func_6920() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %1412 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1413 = %1412.0;
  %1414 = @func_3102() /* ty=Tensor[(630), bool] */;
  (%1413, %1414)
}

def @func_11608() -> (Tensor[(630), bool],) {
  %1417 = fn () -> (Tensor[(630), bool],) {
    %1415 = @func_7238() /* ty=(Tensor[(630), bool],) */;
    %1416 = %1415.0;
    (%1416,)
  };
  %1417() /* ty=(Tensor[(630), bool],) */
}

def @func_16704() -> Tensor[(2, 14, 8), float64] {
  %1418 = fn () -> Tensor[(2, 14, 8), float64] {
    @func_7146() /* ty=Tensor[(2, 14, 8), float64] */
  };
  %1418() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_11261() -> (Tensor[(2, 14, 8), float64],) {
  %1419 = @func_7146() /* ty=Tensor[(2, 14, 8), float64] */;
  (%1419,)
}

def @func_9592() -> Tensor[(2, 14, 8), float64] {
  %1420 = @func_2770() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */;
  %1420.1
}

def @func_6438(%var_6419: Tensor[(3, 2, 11), float32]) -> (Tensor[(3, 2, 11), float32], Tensor[(630), bool]) {
  %1421 = cast(%var_6419, dtype="float32") /* ty=Tensor[(3, 2, 11), float32] */;
  %1422 = @func_4511() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) */;
  %1423 = sigmoid(%1421) /* ty=Tensor[(3, 2, 11), float32] */;
  %1424 = %1422.1;
  (%1423, %1424)
}

def @func_2307() -> (Tensor[(2, 14, 8), float32],) {
  %1429 = fn () -> (Tensor[(2, 14, 8), float32],) {
    %1425 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
    %1426 = %1425.1;
    %1427 = cast(%1426, dtype="float32") /* ty=Tensor[(2, 14, 8), float32] */;
    %1428 = sigmoid(%1427) /* ty=Tensor[(2, 14, 8), float32] */;
    (%1428,)
  };
  %1429() /* ty=(Tensor[(2, 14, 8), float32],) */
}

def @func_10625(%var_10622: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) {
  %1430 = @func_7213() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float32]) */;
  %1431 = cast(%var_10622, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1432 = reshape(%1431, newshape=[11, 15, 2]) /* ty=Tensor[(11, 15, 2), float32] */;
  %1433 = @func_3929(%1432) /* ty=(Tensor[(11, 15, 2), float32],) */;
  %1434 = %1430.1;
  %1435 = %1433.0;
  (%1434, %1435, %var_10622)
}

def @func_12952() -> Tensor[(630), bool] {
  @func_12950() /* ty=Tensor[(630), bool] */
}

def @func_4139() -> (Tensor[(224), float64],) {
  @func_4137() /* ty=(Tensor[(224), float64],) */
}

def @func_4137() -> (Tensor[(224), float64],) {
  %1436 = @func_3683() /* ty=(Tensor[(224), float64],) */;
  %1437 = %1436.0;
  (%1437,)
}

def @func_2359() -> (Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) {
  @func_2357() /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(256), float32], Tensor[(2, 14, 8), float64]) */
}

def @func_4410() -> Tensor[(630), bool] {
  @func_4408() /* ty=Tensor[(630), bool] */
}

def @func_8412() -> (Tensor[(630), bool], Tensor[(224), float64]) {
  @func_8410() /* ty=(Tensor[(630), bool], Tensor[(224), float64]) */
}

def @func_9594() -> Tensor[(2, 14, 8), float64] {
  @func_9592() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_13374() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %1438 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1439 = %1438.0;
  %1440 = @func_11070() /* ty=Tensor[(630), bool] */;
  (%1439, %1440)
}

def @func_13404(%var_13402: Tensor[(66), float32]) -> (Tensor[(2, 14, 8), float64], Tensor[(330), float32], Tensor[(330), float32], Tensor[(630), bool], Tensor[(66), float32]) {
  @func_13401(%var_13402) /* ty=(Tensor[(2, 14, 8), float64], Tensor[(330), float32], Tensor[(330), float32], Tensor[(630), bool], Tensor[(66), float32]) */
}

def @func_14927(%var_14925: Tensor[(6, 8, 8), uint32]) -> Tensor[(6, 8, 8), uint32] {
  @func_14924(%var_14925) /* ty=Tensor[(6, 8, 8), uint32] */
}

def @func_4285() -> (Tensor[(630), bool],) {
  %1443 = fn () -> (Tensor[(630), bool],) {
    %1441 = @func_2770() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(10, 45), bool], Tensor[(2, 14, 8), bool]) */;
    %1442 = %1441.0;
    (%1442,)
  };
  %1443() /* ty=(Tensor[(630), bool],) */
}

def @func_16276() -> (Tensor[(2, 14, 8), float64],) {
  @func_16274() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_5259() -> Tensor[(3, 14, 15), bool] {
  @func_5257() /* ty=Tensor[(3, 14, 15), bool] */
}

def @func_6752() -> (Tensor[(3, 14, 15), bool],) {
  %1446 = fn () -> (Tensor[(3, 14, 15), bool],) {
    %1444 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
    %1445 = %1444.0;
    (%1445,)
  };
  %1446() /* ty=(Tensor[(3, 14, 15), bool],) */
}

def @func_14869(%var_14837: Tensor[(256), float32], %var_14838: int64) -> (Tensor[(630), bool], Tensor[(3, 14, 15), bool], int64, Tensor[(256), float32], int64, Tensor[(2, 6, 14), int64], Tensor[(630), bool]) {
  %1447 = @func_10591() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %1448 = @func_4783() /* ty=(Tensor[(3, 14, 15), bool],) */;
  %1449 = cast(%var_14837, dtype="float32") /* ty=Tensor[(256), float32] */;
  %1450 = cast(%var_14838, dtype="int64") /* ty=int64 */;
  %1451 = reshape(%1449, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %1452 = reshape(%1450, newshape=[]) /* ty=int64 */;
  %1453 = @func_10491(%1451, %1452) /* ty=(Tensor[(630), bool], int64, Tensor[(256), float32], int64, Tensor[(40), float32], Tensor[(2, 14, 8), bool]) */;
  %1454 = @func_5837() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(224, 7), float64]) */;
  %1455 = %1447.1;
  %1456 = %1448.0;
  %1457 = %1453.1;
  %1458 = %1454.0;
  %1459 = @func_6011() /* ty=Tensor[(630), bool] */;
  (%1455, %1456, %1457, %var_14837, %var_14838, %1458, %1459)
}

def @func_10914() -> (Tensor[(10, 45), float64],) {
  @func_10912() /* ty=(Tensor[(10, 45), float64],) */
}

def @func_6922() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  @func_6920() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */
}

def @func_2512() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) {
  %1470 = fn () -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) {
    %1460 = @func_2403() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %1461 = cast(meta[relay.Constant][56] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
    %1462 = reshape(%1461, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
    %1463 = @func_2126(%1462) /* ty=(Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(128, 2), float32], Tensor[(2, 14, 8), bool], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), uint8], Tensor[(2, 14, 8), float64]) */;
    %1464 = cast(meta[relay.Constant][57] /* ty=Tensor[(10, 45), bool] */, dtype="bool") /* ty=Tensor[(10, 45), bool] */;
    %1465 = reshape(%1464, newshape=[15, 15, 2]) /* ty=Tensor[(15, 15, 2), bool] */;
    %1466 = @func_1729(%1465) /* ty=(Tensor[(15, 15, 2), bool],) */;
    %1467 = %1460.0;
    %1468 = %1463.4;
    %1469 = %1466.0;
    (%1467, %1468, meta[relay.Constant][56] /* ty=Tensor[(224), float64] */, %1469, meta[relay.Constant][57] /* ty=Tensor[(10, 45), bool] */)
  };
  %1470() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(15, 15, 2), bool], Tensor[(10, 45), bool]) */
}

def @func_230(%var_220: Tensor[(2, 14, 8), float64]) -> (Tensor[(2, 14, 8), float64],) {
  %1471 = cast(%var_220, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1472 = asin(%1471) /* ty=Tensor[(2, 14, 8), float64] */;
  (%1472,)
}

def @func_14695() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %1476 = fn () -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
    %1473 = @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
    %1474 = @func_11103() /* ty=Tensor[(2, 14, 8), float64] */;
    %1475 = %1473.3;
    (%1474, %1475)
  };
  %1476() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */
}

def @func_9601() -> (Tensor[(2, 14, 8), float64],) {
  %1477 = @func_3083() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %1478 = %1477.0;
  (%1478,)
}

def @func_17524() -> Tensor[(630), bool] {
  @func_17522() /* ty=Tensor[(630), bool] */
}

def @func_12651() -> (Tensor[(224), float64],) {
  %1481 = fn () -> (Tensor[(224), float64],) {
    %1479 = @func_3683() /* ty=(Tensor[(224), float64],) */;
    %1480 = %1479.0;
    (%1480,)
  };
  %1481() /* ty=(Tensor[(224), float64],) */
}

def @func_10433(%var_10431: Tensor[(100), float32], %var_10432: Tensor[(256), float32]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(100), float32], Tensor[(256), float32]) {
  %1490 = fn (%var_10416: Tensor[(100), float32], %var_10417: Tensor[(256), float32]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(100), float32], Tensor[(256), float32]) {
    %1482 = @func_2907() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
    %1483 = cast(%var_10416, dtype="float32") /* ty=Tensor[(100), float32] */;
    %1484 = cast(%var_10417, dtype="float32") /* ty=Tensor[(256), float32] */;
    %1485 = reshape(%1483, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), float32] */;
    %1486 = reshape(%1484, newshape=[2, 128]) /* ty=Tensor[(2, 128), float32] */;
    %1487 = @func_4362(%1485, %1486) /* ty=(Tensor[(5, 4, 5), float32], Tensor[(630), bool], Tensor[(2, 128), float32]) */;
    %1488 = %1482.0;
    %1489 = %1487.1;
    (%1488, %1489, %var_10416, %var_10417)
  };
  %1490(%var_10431, %var_10432) /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(100), float32], Tensor[(256), float32]) */
}

def @func_4511() -> (Tensor[(2, 14, 8), float64], Tensor[(630), bool], Tensor[(630), bool]) {
  %1491 = @func_2188() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64]) */;
  %1492 = %1491.1;
  %1493 = cast(%1492, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1494 = @func_3875() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool]) */;
  %1495 = atan(%1493) /* ty=Tensor[(2, 14, 8), float64] */;
  %1496 = @func_1366() /* ty=Tensor[(630), bool] */;
  %1497 = %1494.3;
  (%1495, %1496, %1497)
}

def @func_16001() -> (Tensor[(3, 14, 15), bool],) {
  %1500 = fn () -> (Tensor[(3, 14, 15), bool],) {
    %1498 = @func_7213() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float32]) */;
    %1499 = %1498.2;
    (%1499,)
  };
  %1500() /* ty=(Tensor[(3, 14, 15), bool],) */
}

def @func_12603() -> (Tensor[(2, 14, 8), float32], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) {
  %1501 = @func_2306() /* ty=(Tensor[(2, 14, 8), float32],) */;
  %1502 = @func_3138() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */;
  %1503 = %1501.0;
  %1504 = %1502.1;
  %1505 = @func_3799() /* ty=Tensor[(2, 14, 8), float64] */;
  (%1503, %1504, %1505)
}

def @func_12164(%var_12162: Tensor[(2, 14, 8), float64]) -> (Tensor[(2, 14, 8), int64],) {
  @func_12161(%var_12162) /* ty=(Tensor[(2, 14, 8), int64],) */
}

def @func_16674(%var_16616: Tensor[(1, 6, 4), float64], %var_16666: Tensor[(40, 1), float32]) -> (Tensor[(?, 6, 4), bool], Tensor[(?, 6, 4), uint64], Tensor[(2, 14, 8), float64], Tensor[(224), float64], Tensor[(630), bool], int64, Tensor[(40, 1), float32]) {
  %1506 = cast(%var_16616, dtype="float64") /* ty=Tensor[(1, 6, 4), float64] */;
  %1507 = atan(%1506) /* ty=Tensor[(1, 6, 4), float64] */;
  %1508 = cast(%var_16616, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
  %1509 = shape_of(%1507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1510 = cast(%1507, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
  %1511 = dyn.reshape(%1508, %1509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1512 = cast(%1507, dtype="uint64") /* ty=Tensor[(1, 6, 4), uint64] */;
  %1513 = shape_of(%var_16616, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1514 = cast(%var_16616, dtype="uint64") /* ty=Tensor[(1, 6, 4), uint64] */;
  %1515 = dyn.reshape(%1512, %1513, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1516 = @func_4732() /* ty=(Tensor[(224), float64], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
  %1517 = cast(9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1518 = cast(%var_16666, dtype="float32") /* ty=Tensor[(40, 1), float32] */;
  %1519 = reshape(%1517, newshape=[]) /* ty=int64 */;
  %1520 = reshape(%1518, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %1521 = @func_9884(%1519, %1520) /* ty=(Tensor[(224), float64], Tensor[(256), float32], Tensor[(280), int64], Tensor[(50, 2), float32], Tensor[(256), float32], Tensor[(224), float64], Tensor[(40), uint64], Tensor[(1, 256), float32], Tensor[(630), bool]) */;
  %1522 = logical_and(%1510, %1511) /* ty=Tensor[(?, 6, 4), bool] */;
  %1523 = maximum(%1514, %1515) /* ty=Tensor[(?, 6, 4), uint64] */;
  %1524 = @func_9592() /* ty=Tensor[(2, 14, 8), float64] */;
  %1525 = %1516.0;
  %1526 = %1521.8;
  (%1522, %1523, %1524, %1525, %1526, 9 /* ty=int64 */, %var_16666)
}

def @func_16693() -> (Tensor[(13, 4, 9), float64], Tensor[(2, 14, 8), float32]) {
  %1527 = cast(meta[relay.Constant][58] /* ty=Tensor[(13, 4, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 4, 9), float64] */;
  %1528 = sin(%1527) /* ty=Tensor[(13, 4, 9), float64] */;
  %1529 = @func_14020() /* ty=Tensor[(2, 14, 8), float32] */;
  (%1528, %1529)
}

def @func_16274() -> (Tensor[(2, 14, 8), float64],) {
  %1530 = @func_9601() /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1531 = %1530.0;
  (%1531,)
}

def @func_16978() -> (Tensor[(224), float64], Tensor[(2, 14, 8), float64]) {
  %1536 = fn () -> (Tensor[(224), float64], Tensor[(2, 14, 8), float64]) {
    %1532 = @func_9706() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(224), float64]) */;
    %1533 = @func_3222() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %1534 = %1532.1;
    %1535 = %1533.0;
    (%1534, %1535)
  };
  %1536() /* ty=(Tensor[(224), float64], Tensor[(2, 14, 8), float64]) */
}

def @func_1729(%var_1702: Tensor[(15, 15, 2), bool]) -> (Tensor[(15, 15, 2), bool],) {
  %1537 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1538 = cast(%var_1702, dtype="bool") /* ty=Tensor[(15, 15, 2), bool] */;
  %1539 = logical_or(%1537, %1538) /* ty=Tensor[(15, 15, 2), bool] */;
  (%1539,)
}

def @func_1962(%var_1955: Tensor[(1, 256), float32]) -> (Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(1, 16, 16), float64], Tensor[(1, 256), float32]) {
  %1540 = @func_1216() /* ty=(Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %1541 = @func_1474() /* ty=(Tensor[(630), bool],) */;
  %1542 = cast(%var_1955, dtype="float32") /* ty=Tensor[(1, 256), float32] */;
  %1543 = reshape(%1542, newshape=[1, 16, 16]) /* ty=Tensor[(1, 16, 16), float32] */;
  %1544 = @func_1271() /* ty=Tensor[(630), bool] */;
  %1545 = %1540.2;
  %1546 = %1541.0;
  %1547 = @func_1558(%1543) /* ty=Tensor[(1, 16, 16), float64] */;
  (%1544, %1545, %1546, %1547, %var_1955)
}

def @func_1010(%var_1008: Tensor[(3, 14, 15), bool], %var_1009: Tensor[(4, 56), float64]) -> (Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) {
  %1555 = fn (%var_995: Tensor[(3, 14, 15), bool], %var_1001: Tensor[(4, 56), float64]) -> (Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) {
    %1548 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %1549 = cast(%var_995, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
    %1550 = cast(%var_1001, dtype="float64") /* ty=Tensor[(4, 56), float64] */;
    %1551 = reshape(%1550, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
    %1552 = @func_230(%1551) /* ty=(Tensor[(2, 14, 8), float64],) */;
    %1553 = logical_and(%1548, %1549) /* ty=Tensor[(3, 14, 15), bool] */;
    %1554 = %1552.0;
    (%1553, %1554, %var_1001)
  };
  %1555(%var_1008, %var_1009) /* ty=(Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */
}

def @func_4829(%var_4824: Tensor[(2, 14, 8), float64]) -> Tensor[(2, 14, 8), uint64] {
  %1556 = @func_4657() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %1557 = %1556.1;
  %1558 = cast(%var_4824, dtype="uint64") /* ty=Tensor[(2, 14, 8), uint64] */;
  %1559 = shape_of(%1557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1560 = cast(%1557, dtype="uint64") /* ty=Tensor[(2, 14, 8), uint64] */;
  %1561 = dyn.reshape(%1558, %1559, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  minimum(%1560, %1561) /* ty=Tensor[(2, 14, 8), uint64] */
}

def @func_1633() -> Tensor[(2, 14, 8), float64] {
  %1563 = fn () -> Tensor[(2, 14, 8), float64] {
    %1562 = @func_1575() /* ty=(Tensor[(2, 14, 8), float64],) */;
    %1562.0
  };
  %1563() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_6013() -> Tensor[(630), bool] {
  @func_6011() /* ty=Tensor[(630), bool] */
}

def @func_11149(%var_11147: Tensor[(330), float32]) -> (Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) {
  @func_11146(%var_11147) /* ty=(Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */
}

def @func_15866() -> Tensor[(630), bool] {
  %1564 = @func_7856() /* ty=(Tensor[(630), bool], Tensor[(224), float64], Tensor[(224), float64]) */;
  %1564.0
}

def @func_17445(%var_17443: Tensor[(30, 1), float64], %var_17444: Tensor[(30, 14), float64]) -> (Tensor[(2, 14, 8), float64], Tensor[(3, 10, 1), float64], Tensor[(256), float32], Tensor[(256), float32], Tensor[(55, 6), float32], Tensor[(2, 14, 8), float64], Tensor[(30, 14), int8], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  @func_17441(%var_17443, %var_17444) /* ty=(Tensor[(2, 14, 8), float64], Tensor[(3, 10, 1), float64], Tensor[(256), float32], Tensor[(256), float32], Tensor[(55, 6), float32], Tensor[(2, 14, 8), float64], Tensor[(30, 14), int8], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */
}

def @func_6879(%var_6876: Tensor[(3, 14, 15), bool], %var_6877: Tensor[(256), float32], %var_6878: Tensor[(3, 14, 15), bool]) -> (Tensor[(3, 14, 15), float32], Tensor[(1, 256), float32], Tensor[(256), float32], Tensor[(3, 14, 15), bool], Tensor[(3, 14, 15), int32], Tensor[(630), bool]) {
  @func_6874(%var_6876, %var_6877, %var_6878) /* ty=(Tensor[(3, 14, 15), float32], Tensor[(1, 256), float32], Tensor[(256), float32], Tensor[(3, 14, 15), bool], Tensor[(3, 14, 15), int32], Tensor[(630), bool]) */
}

def @func_16115() -> (Tensor[(2, 14, 8), bool], Tensor[(630), bool]) {
  %1568 = fn () -> (Tensor[(2, 14, 8), bool], Tensor[(630), bool]) {
    %1565 = @func_1935() /* ty=(Tensor[(630), bool],) */;
    %1566 = @func_9366() /* ty=Tensor[(2, 14, 8), bool] */;
    %1567 = %1565.0;
    (%1566, %1567)
  };
  %1568() /* ty=(Tensor[(2, 14, 8), bool], Tensor[(630), bool]) */
}

def @func_11263() -> (Tensor[(2, 14, 8), float64],) {
  @func_11261() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_13345() -> (Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) {
  %1569 = @func_1240() /* ty=(Tensor[(630), bool],) */;
  %1570 = @func_4657() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %1571 = %1569.0;
  %1572 = %1570.1;
  %1573 = @func_5469() /* ty=Tensor[(630), bool] */;
  (%1571, %1572, %1573)
}

def @func_17490() -> (Tensor[(630), bool],) {
  %1574 = @func_1366() /* ty=Tensor[(630), bool] */;
  (%1574,)
}

def @func_4108() -> (Tensor[(2, 14, 8), float64],) {
  %1577 = fn () -> (Tensor[(2, 14, 8), float64],) {
    %1575 = @func_3472() /* ty=(Tensor[(630), bool], Tensor[(2, 14, 8), float64], Tensor[(224, 1), float64]) */;
    %1576 = %1575.1;
    (%1576,)
  };
  %1577() /* ty=(Tensor[(2, 14, 8), float64],) */
}

def @func_17082() -> Tensor[(2, 14, 8), bool] {
  @func_17080() /* ty=Tensor[(2, 14, 8), bool] */
}

def @func_12911() -> (Tensor[(630), bool], Tensor[(630), bool]) {
  %1581 = fn () -> (Tensor[(630), bool], Tensor[(630), bool]) {
    %1578 = @func_2994() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(630), bool], Tensor[(2, 14, 8), float64]) */;
    %1579 = @func_4408() /* ty=Tensor[(630), bool] */;
    %1580 = %1578.1;
    (%1579, %1580)
  };
  %1581() /* ty=(Tensor[(630), bool], Tensor[(630), bool]) */
}

def @func_13703() -> Tensor[(2, 14, 8), float64] {
  %1582 = fn () -> Tensor[(2, 14, 8), float64] {
    @func_7146() /* ty=Tensor[(2, 14, 8), float64] */
  };
  %1582() /* ty=Tensor[(2, 14, 8), float64] */
}

def @func_15125() -> (Tensor[(224), float64],) {
  @func_15123() /* ty=(Tensor[(224), float64],) */
}

def @func_11897() -> (Tensor[(630), bool],) {
  @func_11895() /* ty=(Tensor[(630), bool],) */
}

def @func_12950() -> Tensor[(630), bool] {
  %1583 = @func_6920() /* ty=(Tensor[(2, 14, 8), float64], Tensor[(630), bool]) */;
  %1583.1
}

def @func_1216() -> (Tensor[(2, 6, 14), int64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(224), float64], Tensor[(2, 14, 8), float64], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) {
  %1584 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1585 = cast(meta[relay.Constant][59] /* ty=Tensor[(2, 6, 14), int64] */, dtype="int64") /* ty=Tensor[(2, 6, 14), int64] */;
  %1586 = cast(meta[relay.Constant][60] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %1587 = cast(meta[relay.Constant][61] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %1588 = reshape(%1586, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
  %1589 = reshape(%1587, newshape=[4, 56]) /* ty=Tensor[(4, 56), float64] */;
  %1590 = @func_1007(%1588, %1589) /* ty=(Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %1591 = cast(meta[relay.Constant][61] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %1592 = reshape(%1591, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %1593 = @func_230(%1592) /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1594 = %1593.0;
  %1595 = cast(%1594, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1596 = reshape(%1595, newshape=[2, 14, 8]) /* ty=Tensor[(2, 14, 8), float64] */;
  %1597 = @func_230(%1596) /* ty=(Tensor[(2, 14, 8), float64],) */;
  %1598 = %1590.0;
  %1599 = cast(%1598, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %1600 = %1597.0;
  %1601 = cast(%1600, dtype="float64") /* ty=Tensor[(2, 14, 8), float64] */;
  %1602 = reshape(%1599, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
  %1603 = reshape(%1601, newshape=[4, 56]) /* ty=Tensor[(4, 56), float64] */;
  %1604 = @func_1007(%1602, %1603) /* ty=(Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64], Tensor[(4, 56), float64]) */;
  %1605 = right_shift(%1584, %1585) /* ty=Tensor[(2, 6, 14), int64] */;
  %1606 = %1604.2;
  (%1605, %1598, meta[relay.Constant][60] /* ty=Tensor[(630), bool] */, meta[relay.Constant][61] /* ty=Tensor[(224), float64] */, %1594, %1600, %1606)
}

def @func_10332(%var_10329: Tensor[(256), float32], %var_10330: int64, %var_10331: Tensor[(40), float32]) -> (Tensor[(256), float32], Tensor[(280), int64], int64, Tensor[(40), float32], Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool]) {
  %1632 = fn (%var_10284: Tensor[(256), float32], %var_10287: int64, %var_10288: Tensor[(40), float32]) -> (Tensor[(256), float32], Tensor[(280), int64], int64, Tensor[(40), float32], Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool]) {
    %1607 = cast(%var_10287, dtype="int64") /* ty=int64 */;
    %1608 = cast(%var_10288, dtype="float32") /* ty=Tensor[(40), float32] */;
    %1609 = reshape(%1607, newshape=[]) /* ty=int64 */;
    %1610 = reshape(%1608, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %1611 = @func_9884(%1609, %1610) /* ty=(Tensor[(224), float64], Tensor[(256), float32], Tensor[(280), int64], Tensor[(50, 2), float32], Tensor[(256), float32], Tensor[(224), float64], Tensor[(40), uint64], Tensor[(1, 256), float32], Tensor[(630), bool]) */;
    %1612 = @func_8565() /* ty=(Tensor[(630), bool], Tensor[(3, 14, 15), bool], Tensor[(2, 14, 8), float64]) */;
    %1613 = @func_5030() /* ty=(Tensor[(630), bool], Tensor[(630), bool], Tensor[(11, 15, 2), float32], Tensor[(330), float32]) */;
    %1614 = %1613.1;
    %1615 = cast(%1614, dtype="bool") /* ty=Tensor[(630), bool] */;
    %1616 = cast(%var_10284, dtype="float32") /* ty=Tensor[(256), float32] */;
    %1617 = cast(%1614, dtype="bool") /* ty=Tensor[(630), bool] */;
    %1618 = reshape(%1615, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
    %1619 = reshape(%1616, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %1620 = reshape(%1617, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), bool] */;
    %1621 = @func_6874(%1618, %1619, %1620) /* ty=(Tensor[(3, 14, 15), float32], Tensor[(1, 256), float32], Tensor[(256), float32], Tensor[(3, 14, 15), bool], Tensor[(3, 14, 15), int32], Tensor[(630), bool]) */;
    %1622 = %1621.4;
    %1623 = cast(%1614, dtype="bool") /* ty=Tensor[(630), bool] */;
    %1624 = shape_of(%1622, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1625 = cast(%1622, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
    %1626 = dyn.reshape(%1623, %1624, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1627 = %1611.2;
    %1628 = %1612.2;
    %1629 = logical_or(%1625, %1626) /* ty=Tensor[(3, 14, 15), bool] */;
    %1630 = @func_4408() /* ty=Tensor[(630), bool] */;
    %1631 = @func_5257() /* ty=Tensor[(3, 14, 15), bool] */;
    (%var_10284, %1627, %var_10287, %var_10288, %1628, %1629, %1630, %1631)
  };
  %1632(%var_10329, %var_10330, %var_10331) /* ty=(Tensor[(256), float32], Tensor[(280), int64], int64, Tensor[(40), float32], Tensor[(2, 14, 8), float64], Tensor[(3, 14, 15), bool], Tensor[(630), bool], Tensor[(3, 14, 15), bool]) */
}

def @func_14399() -> (Tensor[(630), bool],) {
  %1635 = fn () -> (Tensor[(630), bool],) {
    %1633 = @func_1240() /* ty=(Tensor[(630), bool],) */;
    %1634 = %1633.0;
    (%1634,)
  };
  %1635() /* ty=(Tensor[(630), bool],) */
}

def @func_17120(%var_17118: Tensor[(15, 15, 6), int64], %var_17119: Tensor[(15, 15, 6), int64]) -> (Tensor[(15, 15, 6), int64],) {
  @func_17116(%var_17118, %var_17119) /* ty=(Tensor[(15, 15, 6), int64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen615/build/output.py:5609: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen615/build/output.py", line 5614, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(300) tvmgen_default_fused_acos_kernel0(float* __restrict__ T_acos, float* __restrict__ placeholder) {
  T_acos[(((int)threadIdx.x))] = acosf(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_764 = relay.var("var_764", dtype = "int32", shape = ())#candidate|764|()|var|int32
var_765 = relay.var("var_765", dtype = "int32", shape = (2, 8, 1))#candidate|765|(2, 8, 1)|var|int32
bop_766 = relay.logical_xor(var_764.astype('int32'), var_765.astype('int32')) # shape=(2, 8, 1)
output = bop_766
output2 = bop_766
func_786 = relay.Function([var_764,var_765,], output)
mod['func_786'] = func_786
mod = relay.transform.InferType()(mod)
mutated_mod['func_786'] = func_786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_786_call = mutated_mod.get_global_var('func_786')
var_788 = relay.var("var_788", dtype = "int32", shape = ())#candidate|788|()|var|int32
var_789 = relay.var("var_789", dtype = "int32", shape = (2, 8, 1))#candidate|789|(2, 8, 1)|var|int32
call_787 = func_786_call(var_788,var_789,)
output = call_787
func_790 = relay.Function([var_788,var_789,], output)
mutated_mod['func_790'] = func_790
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1314 = relay.var("var_1314", dtype = "float64", shape = ())#candidate|1314|()|var|float64
var_1315 = relay.var("var_1315", dtype = "float64", shape = (9, 5, 6))#candidate|1315|(9, 5, 6)|var|float64
bop_1316 = relay.power(var_1314.astype('float64'), var_1315.astype('float64')) # shape=(9, 5, 6)
output = bop_1316
output2 = bop_1316
func_1323 = relay.Function([var_1314,var_1315,], output)
mod['func_1323'] = func_1323
mod = relay.transform.InferType()(mod)
var_1324 = relay.var("var_1324", dtype = "float64", shape = ())#candidate|1324|()|var|float64
var_1325 = relay.var("var_1325", dtype = "float64", shape = (9, 5, 6))#candidate|1325|(9, 5, 6)|var|float64
output = func_1323(var_1324,var_1325,)
func_1326 = relay.Function([var_1324,var_1325,], output)
mutated_mod['func_1326'] = func_1326
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1636 = relay.var("var_1636", dtype = "int8", shape = ())#candidate|1636|()|var|int8
var_1637 = relay.var("var_1637", dtype = "int8", shape = (4, 14, 3))#candidate|1637|(4, 14, 3)|var|int8
bop_1638 = relay.right_shift(var_1636.astype('int8'), var_1637.astype('int8')) # shape=(4, 14, 3)
output = bop_1638
output2 = bop_1638
func_1647 = relay.Function([var_1636,var_1637,], output)
mod['func_1647'] = func_1647
mod = relay.transform.InferType()(mod)
mutated_mod['func_1647'] = func_1647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1647_call = mutated_mod.get_global_var('func_1647')
var_1649 = relay.var("var_1649", dtype = "int8", shape = ())#candidate|1649|()|var|int8
var_1650 = relay.var("var_1650", dtype = "int8", shape = (4, 14, 3))#candidate|1650|(4, 14, 3)|var|int8
call_1648 = func_1647_call(var_1649,var_1650,)
output = call_1648
func_1651 = relay.Function([var_1649,var_1650,], output)
mutated_mod['func_1651'] = func_1651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1874 = relay.var("var_1874", dtype = "int16", shape = (11, 7, 6))#candidate|1874|(11, 7, 6)|var|int16
var_1875 = relay.var("var_1875", dtype = "int16", shape = (11, 7, 6))#candidate|1875|(11, 7, 6)|var|int16
bop_1876 = relay.bitwise_and(var_1874.astype('int16'), relay.reshape(var_1875.astype('int16'), relay.shape_of(var_1874))) # shape=(11, 7, 6)
output = relay.Tuple([bop_1876,])
output2 = relay.Tuple([bop_1876,])
func_1880 = relay.Function([var_1874,var_1875,], output)
mod['func_1880'] = func_1880
mod = relay.transform.InferType()(mod)
var_1881 = relay.var("var_1881", dtype = "int16", shape = (11, 7, 6))#candidate|1881|(11, 7, 6)|var|int16
var_1882 = relay.var("var_1882", dtype = "int16", shape = (11, 7, 6))#candidate|1882|(11, 7, 6)|var|int16
output = func_1880(var_1881,var_1882,)
func_1883 = relay.Function([var_1881,var_1882,], output)
mutated_mod['func_1883'] = func_1883
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2604 = relay.const([[[8.317762,-6.332213,8.465744],[-8.563135,0.955669,-8.126389],[6.933625,-5.114761,1.785698],[2.590149,-1.105777,5.099026],[-8.908372,3.352880,0.040983],[-5.819185,-5.067032,2.321241],[-9.541218,-7.927138,-5.597259]],[[-2.014867,-5.958599,8.105866],[-8.160496,-4.935532,5.394952],[3.615417,-1.772337,8.292688],[9.422141,-0.162885,6.382837],[3.723011,9.496234,3.367137],[-8.563026,-3.565114,-8.959554],[-3.894430,-9.757158,7.639784]],[[5.849197,4.509340,-2.054179],[9.231890,1.143830,9.841199],[1.340133,-4.797839,7.903563],[-3.229262,-3.444678,-9.848153],[7.080471,2.724483,0.301628],[8.270724,0.534271,-1.769415],[1.010027,-4.558138,3.750583]],[[8.179308,-5.520639,3.300818],[7.034845,-5.583753,-1.038320],[-9.278999,7.770256,-4.789523],[1.003699,7.039894,-7.564908],[-2.834497,6.141291,-4.109053],[-8.348160,-5.325910,-0.559804],[-7.644061,8.424684,8.386584]],[[6.009422,0.447001,7.741532],[3.285521,1.874103,-7.878080],[-3.761717,-4.630433,9.896221],[-8.033865,-1.237961,-9.607850],[5.377925,8.908682,9.140402],[-6.205614,-5.287056,-1.915686],[7.572357,-9.394902,-5.615546]]], dtype = "float64")#candidate|2604|(5, 7, 3)|const|float64
uop_2605 = relay.atanh(const_2604.astype('float64')) # shape=(5, 7, 3)
func_1647_call = mod.get_global_var('func_1647')
func_1651_call = mutated_mod.get_global_var('func_1651')
var_2614 = relay.var("var_2614", dtype = "int8", shape = ())#candidate|2614|()|var|int8
const_2615 = relay.const([[5],[2],[-9],[-3],[4],[4],[-7],[8],[-6],[-7],[4],[1],[-2],[3],[-10],[-3],[-1],[7],[5],[3],[-9],[3],[-7],[-10],[-9],[-9],[4],[-6],[2],[-8],[-4],[-9],[8],[-5],[8],[-4],[-4],[-5],[-7],[5],[-1],[10],[-6],[-2],[8],[1],[5],[-7],[8],[5],[9],[-4],[-6],[5],[3],[-1],[6],[-4],[10],[3],[7],[9],[5],[-4],[5],[10],[-1],[-8],[-5],[-2],[5],[-5],[-7],[-5],[4],[-4],[-9],[-5],[-7],[9],[8],[-8],[6],[-6],[1],[9],[1],[8],[2],[4],[9],[-9],[9],[5],[4],[-9],[-3],[-3],[-7],[10],[-7],[5],[-5],[-6],[4],[5],[8],[-2],[-9],[-4],[-10],[5],[-2],[-4],[7],[8],[-3],[2],[3],[4],[-9],[-9],[-2],[-3],[-7],[-4],[-2],[2],[-7],[-4],[8],[-10],[2],[-8],[-1],[-2],[-1],[7],[-3],[6],[9],[-9],[-1],[6],[7],[4],[-1],[-8],[-6],[10],[9],[8],[-5],[5],[7],[-10],[-1],[9],[1],[-2],[9],[-4],[2],[-5],[-8],[-6],[1],[7]], dtype = "int8")#candidate|2615|(168, 1)|const|int8
call_2613 = func_1647_call(relay.reshape(var_2614.astype('int8'), []), relay.reshape(const_2615.astype('int8'), [4, 14, 3]), )
call_2616 = func_1647_call(relay.reshape(var_2614.astype('int8'), []), relay.reshape(const_2615.astype('int8'), [4, 14, 3]), )
bop_2621 = relay.equal(uop_2605.astype('bool'), var_2614.astype('bool')) # shape=(5, 7, 3)
func_786_call = mod.get_global_var('func_786')
func_790_call = mutated_mod.get_global_var('func_790')
const_2637 = relay.const([[-4,-4,-8,-2],[5,8,5,6],[3,-7,3,10],[5,7,-5,-1]], dtype = "int32")#candidate|2637|(4, 4)|const|int32
call_2636 = func_786_call(relay.reshape(var_2614.astype('int32'), []), relay.reshape(const_2637.astype('int32'), [2, 8, 1]), )
call_2638 = func_786_call(relay.reshape(var_2614.astype('int32'), []), relay.reshape(const_2637.astype('int32'), [2, 8, 1]), )
output = relay.Tuple([call_2613,const_2615,bop_2621,call_2636,const_2637,])
output2 = relay.Tuple([call_2616,const_2615,bop_2621,call_2638,const_2637,])
func_2639 = relay.Function([var_2614,], output)
mod['func_2639'] = func_2639
mod = relay.transform.InferType()(mod)
mutated_mod['func_2639'] = func_2639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2640 = relay.var("var_2640", dtype = "int8", shape = ())#candidate|2640|()|var|int8
func_2639_call = mutated_mod.get_global_var('func_2639')
call_2641 = func_2639_call(var_2640)
output = call_2641
func_2642 = relay.Function([var_2640], output)
mutated_mod['func_2642'] = func_2642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2988 = relay.var("var_2988", dtype = "float32", shape = (12, 16, 8))#candidate|2988|(12, 16, 8)|var|float32
uop_2989 = relay.rsqrt(var_2988.astype('float32')) # shape=(12, 16, 8)
func_786_call = mod.get_global_var('func_786')
func_790_call = mutated_mod.get_global_var('func_790')
var_3013 = relay.var("var_3013", dtype = "int32", shape = ())#candidate|3013|()|var|int32
const_3014 = relay.const([[-10,10,-2,-3,5,5,-3,5],[5,4,4,9,-4,-5,4,5]], dtype = "int32")#candidate|3014|(2, 8)|const|int32
call_3012 = func_786_call(relay.reshape(var_3013.astype('int32'), []), relay.reshape(const_3014.astype('int32'), [2, 8, 1]), )
call_3015 = func_786_call(relay.reshape(var_3013.astype('int32'), []), relay.reshape(const_3014.astype('int32'), [2, 8, 1]), )
func_1647_call = mod.get_global_var('func_1647')
func_1651_call = mutated_mod.get_global_var('func_1651')
const_3035 = relay.const([1,-2,-7,-9,3,-5,-3,-3,-4,-3,-5,5,6,4,10,-2,3,10,-8,7,4,-2,-9,-10,-8,-6,-9,-6,-8,-8,6,-9,-3,2,-7,-5,-3,2,2,8,6,-4,5,-10,2,1,-8,-8,-1,-10,-1,1,-2,7,6,5,-9,7,-10,-7,6,10,-8,3,-1,10,-10,8,-6,9,10,6,-4,3,1,-4,-8,1,5,7,-8,9,-8,3,2,5,-5,-3,-5,1,-4,5,9,8,-1,-3,-2,9,9,-3,2,-5,1,4,-4,-4,-1,-10,6,-6,5,-7,2,-6,-6,4,-8,-4,8,-7,-4,3,-1,-6,5,7,3,-8,8,8,4,1,-4,1,3,-6,-8,-2,2,-9,2,-8,9,-8,9,-10,-9,-4,-4,-4,-2,5,9,-2,-5,-7,-8,2,10,-4,-7,3,5,-8,2,-7,-2,6], dtype = "int8")#candidate|3035|(168,)|const|int8
call_3034 = func_1647_call(relay.reshape(var_3013.astype('int8'), []), relay.reshape(const_3035.astype('int8'), [4, 14, 3]), )
call_3036 = func_1647_call(relay.reshape(var_3013.astype('int8'), []), relay.reshape(const_3035.astype('int8'), [4, 14, 3]), )
func_2639_call = mod.get_global_var('func_2639')
func_2642_call = mutated_mod.get_global_var('func_2642')
call_3037 = relay.TupleGetItem(func_2639_call(relay.reshape(var_3013.astype('int8'), [])), 1)
call_3038 = relay.TupleGetItem(func_2642_call(relay.reshape(var_3013.astype('int8'), [])), 1)
bop_3040 = relay.not_equal(call_3012.astype('bool'), const_3035.astype('bool')) # shape=(2, 8, 168)
bop_3043 = relay.not_equal(call_3015.astype('bool'), const_3035.astype('bool')) # shape=(2, 8, 168)
output = relay.Tuple([uop_2989,var_3013,const_3014,call_3034,call_3037,bop_3040,])
output2 = relay.Tuple([uop_2989,var_3013,const_3014,call_3036,call_3038,bop_3043,])
func_3050 = relay.Function([var_2988,var_3013,], output)
mod['func_3050'] = func_3050
mod = relay.transform.InferType()(mod)
var_3051 = relay.var("var_3051", dtype = "float32", shape = (12, 16, 8))#candidate|3051|(12, 16, 8)|var|float32
var_3052 = relay.var("var_3052", dtype = "int32", shape = ())#candidate|3052|()|var|int32
output = func_3050(var_3051,var_3052,)
func_3053 = relay.Function([var_3051,var_3052,], output)
mutated_mod['func_3053'] = func_3053
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3472 = relay.var("var_3472", dtype = "bool", shape = (3, 11, 4))#candidate|3472|(3, 11, 4)|var|bool
var_3473 = relay.var("var_3473", dtype = "bool", shape = (3, 11, 4))#candidate|3473|(3, 11, 4)|var|bool
bop_3474 = relay.logical_or(var_3472.astype('bool'), relay.reshape(var_3473.astype('bool'), relay.shape_of(var_3472))) # shape=(3, 11, 4)
output = relay.Tuple([bop_3474,])
output2 = relay.Tuple([bop_3474,])
func_3477 = relay.Function([var_3472,var_3473,], output)
mod['func_3477'] = func_3477
mod = relay.transform.InferType()(mod)
var_3478 = relay.var("var_3478", dtype = "bool", shape = (3, 11, 4))#candidate|3478|(3, 11, 4)|var|bool
var_3479 = relay.var("var_3479", dtype = "bool", shape = (3, 11, 4))#candidate|3479|(3, 11, 4)|var|bool
output = func_3477(var_3478,var_3479,)
func_3480 = relay.Function([var_3478,var_3479,], output)
mutated_mod['func_3480'] = func_3480
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3632 = relay.const([[[10,7,-6,-3,-7,3,5,-8,6,-1,3,3,9,-8,3],[-10,-7,-2,-4,-5,8,-2,-1,-3,10,8,-8,-9,-6,-7],[-8,-5,5,-2,-10,9,5,1,2,5,-8,7,5,-2,-1],[-1,7,6,3,1,4,-3,3,-5,10,9,4,-5,-2,-1],[7,1,-9,-7,6,-6,-10,-9,3,-10,-5,-10,-6,1,1],[8,3,-3,10,-5,-8,7,7,2,2,-10,2,-10,-4,-4],[-1,2,-6,8,-5,-2,-1,-2,7,-8,-6,7,-10,-6,-6],[-1,7,-2,-8,-8,-3,-7,-3,1,-3,-10,9,6,-4,4],[-5,8,-8,-4,3,1,-6,8,-7,1,10,-8,-7,-8,9],[3,-5,-7,-3,9,-6,-2,9,4,-3,-4,4,-1,8,-4],[-1,2,-7,-7,1,6,6,-2,10,-9,-10,-5,6,-7,-7],[-3,9,-4,-6,7,-9,-7,-5,-10,-4,7,5,-8,9,-7],[-8,7,-8,4,-4,-3,7,7,-10,6,-7,8,4,3,5],[4,-10,3,-5,-4,-9,3,-9,-6,9,-3,-5,-8,-10,4],[1,-9,2,3,-8,-6,3,2,10,-9,10,-5,4,3,4]],[[-7,7,10,-9,-7,-7,5,2,10,-7,-1,2,9,-9,7],[-2,-2,4,8,-4,-2,8,3,-9,2,-3,-1,8,8,-4],[3,-1,3,-9,-9,-8,4,-2,-3,-1,7,7,8,7,5],[2,5,4,-9,3,-6,10,-6,-8,-5,6,-2,7,-8,-5],[-8,-10,-10,-5,7,-6,-8,6,1,2,2,8,-1,-1,1],[-2,3,-2,-8,2,4,10,-8,-5,-10,-5,-5,6,7,-6],[5,7,-2,3,-5,-5,6,-10,-2,3,10,-6,-2,2,2],[-8,-8,7,4,-7,-6,8,10,6,1,-5,9,7,-4,1],[-8,2,-3,-5,-8,4,7,-10,9,8,-7,-10,-6,8,-9],[5,7,5,-6,-7,-5,2,4,-8,8,-3,-10,-1,-2,-8],[9,10,3,-6,-6,-5,5,-2,7,-1,5,-10,-7,-5,2],[-1,9,7,-9,-10,7,5,-3,10,-6,-7,-3,9,-9,-2],[-8,-4,-6,-8,5,7,3,5,-10,8,-3,10,1,7,-6],[1,-2,2,7,1,7,-5,2,8,2,-2,10,-1,3,-1],[5,-4,8,-4,-7,-6,-3,-7,-10,8,3,-6,-4,-6,-5]],[[8,2,6,10,-4,5,1,2,4,7,3,-4,4,6,-6],[10,10,10,1,-7,6,6,9,-9,9,7,-5,1,-8,1],[5,-2,3,-10,-1,-1,9,6,5,-3,9,-6,-10,6,-1],[3,-10,10,4,-10,-9,2,6,7,3,-8,9,-9,-1,8],[3,10,6,-9,-2,-7,-7,10,-7,7,-9,2,-8,-7,-7],[-3,-6,-6,-4,3,3,6,9,7,3,7,10,-9,2,9],[3,-2,4,-1,2,-6,-6,-6,8,-4,-7,4,2,-6,-3],[6,5,-5,3,-1,2,9,-10,6,8,1,-10,-1,-10,9],[-9,9,10,-7,2,9,3,-3,-4,-3,10,6,-10,-2,-3],[6,-3,-10,-9,-9,4,6,-5,10,-9,-2,6,-8,-6,-1],[-1,-2,1,9,-8,-2,6,10,8,-1,-3,-5,2,9,4],[-8,4,1,-4,7,9,-4,7,6,-6,-2,1,-1,-3,-2],[10,-1,-10,2,-3,7,8,6,-7,-9,-1,-3,-8,-7,7],[-7,-9,-1,-3,4,2,9,-5,5,7,-7,5,-1,6,-6],[-9,-10,-5,7,8,5,3,9,-7,1,8,-4,-10,8,5]],[[1,-8,10,5,-1,-1,2,10,-3,6,3,-2,9,-2,-9],[10,10,-4,3,-10,-2,-3,-6,-6,10,-2,7,7,-9,-10],[5,10,-2,-6,4,1,6,10,7,-2,9,-9,10,-10,-5],[9,4,5,-6,1,6,7,6,-5,-3,-1,1,-7,-7,1],[-9,2,-10,7,6,7,2,6,-1,-4,-6,-7,4,-7,4],[3,-8,7,1,-5,4,1,-6,-5,-7,-1,3,-9,5,7],[6,3,4,4,-3,-4,-1,-2,-3,-3,-5,1,-4,4,8],[9,1,10,1,3,-2,-1,-4,-1,-4,-5,-1,-9,-1,-6],[-4,3,-8,-3,8,5,2,5,2,5,4,-5,8,-2,6],[-8,-7,-8,-7,-6,-6,4,-8,6,-9,-4,-10,-8,4,9],[-7,2,9,9,-10,10,-5,-6,5,10,2,7,-4,10,2],[-8,8,3,10,5,6,-8,10,-5,-5,-1,1,-6,-10,3],[-8,2,-2,3,-6,4,4,6,-5,10,-6,-4,8,3,8],[1,8,-2,-8,-4,5,-8,-9,4,-3,-1,-9,7,-5,-7],[-8,-9,-2,9,-7,-4,-1,3,7,4,-6,-1,4,-2,10]],[[-3,8,7,4,9,10,-4,-8,-3,-4,6,-3,-5,-7,-7],[-4,7,2,-1,-1,6,4,2,-8,-8,1,-4,-1,3,-6],[8,1,-2,-1,-7,-3,-4,6,-8,3,7,-10,-10,10,2],[6,-5,-5,-7,-10,-1,-9,10,4,-10,-6,1,-9,-8,6],[6,9,-6,10,5,8,-5,-2,4,4,3,2,9,-4,-10],[-8,2,-10,4,-4,10,-6,10,-1,-3,10,-7,9,2,3],[-6,2,8,10,2,2,5,8,-5,-2,1,4,4,4,-9],[-10,7,6,-4,9,10,7,-1,-3,-1,5,-8,-2,6,-8],[4,-1,10,8,6,9,1,3,10,-8,-2,-4,6,3,-3],[-7,9,-2,7,-4,-9,1,8,2,2,10,7,-4,-10,-4],[-8,-4,1,5,-5,-1,1,-2,5,-8,8,-1,-1,-9,-4],[8,6,-8,-7,4,-3,4,-8,4,4,2,-1,8,-2,3],[-2,7,-2,-6,7,8,-9,-5,-1,-2,-2,-7,-9,-6,-2],[6,-9,-3,-7,9,10,-5,2,-6,10,5,4,6,-7,-4],[-1,-6,-3,-3,-9,-6,2,8,1,6,-1,3,5,9,-2]],[[-4,7,-5,-10,-3,-3,-7,-8,10,8,1,8,-5,3,-8],[10,8,-3,-8,-1,1,-7,10,5,7,7,5,3,-2,-7],[-3,-2,4,6,-6,4,3,-8,-9,3,8,-7,7,2,-6],[8,6,10,5,6,3,3,-1,8,-5,9,3,4,-6,9],[-7,-9,1,7,-5,9,2,5,2,5,-8,-1,-10,3,3],[-8,-1,7,8,7,-8,-3,-8,-4,-4,10,-5,3,5,-3],[-9,1,8,3,-4,1,-9,-2,3,-1,-7,8,-9,-9,-8],[3,3,-9,-3,-9,5,1,-4,-2,9,5,2,5,-8,-6],[-7,6,-4,-3,7,6,-9,5,7,2,1,-1,-3,-4,3],[5,-8,9,6,-9,-3,-7,1,8,9,4,-7,1,-3,9],[7,-5,-7,-7,8,7,2,-6,6,-10,5,-5,1,2,-2],[-8,-7,4,-9,10,-8,9,-1,-2,10,-3,8,-7,5,2],[2,-6,5,6,2,1,3,9,-4,2,-5,-9,3,3,-5],[5,7,8,-3,5,-10,-5,-6,-6,5,4,-5,2,-9,5],[-2,-3,6,-2,-6,6,5,9,-6,-2,5,1,-9,9,10]],[[3,-6,2,8,3,-10,1,10,9,-9,7,8,-5,4,4],[7,7,-4,7,10,-7,9,-8,-10,-5,7,-4,-3,-2,4],[-1,5,-6,7,-10,-3,1,-7,-3,7,7,-1,9,-1,-10],[-10,5,9,4,-7,4,3,4,-4,8,-6,-5,9,2,8],[-6,5,2,5,1,-4,1,-10,-9,3,-8,-6,9,-9,-5],[5,3,-5,3,5,-1,8,-6,9,5,-5,-3,5,6,5],[9,7,7,9,1,3,-2,-5,1,6,-10,-8,3,6,-5],[5,8,-8,-3,6,-10,7,4,-2,8,1,-10,10,2,5],[7,-3,-9,2,7,-5,1,-1,-5,-1,1,-2,3,-4,-10],[-2,8,-3,-6,8,-5,2,-6,4,-8,-6,-7,9,2,4],[-2,-8,2,7,6,-1,2,-10,6,2,7,2,10,-5,-7],[-4,-5,-9,-4,5,6,3,-9,8,7,9,2,9,5,4],[-2,10,3,-8,-10,8,-1,5,6,-5,-5,-6,-10,-9,-8],[6,3,9,9,-2,-2,-4,3,-1,3,1,-4,5,9,-8],[6,9,2,-5,7,8,2,-10,-1,4,-1,-2,-10,-9,-10]],[[8,-1,-7,-8,3,-4,5,-5,10,10,-2,7,-5,10,9],[-1,5,-5,6,-9,-9,10,-8,10,10,2,-10,5,-7,1],[2,3,7,-4,-1,10,5,-3,2,10,5,6,-10,-3,4],[5,10,-5,-5,-8,1,8,7,-8,-9,2,2,-9,9,-1],[10,10,3,-6,6,7,-3,3,8,-10,-2,1,2,-6,4],[5,3,-5,-1,-7,7,4,10,-2,9,-7,4,-4,-10,9],[-10,-9,10,-1,6,-9,1,5,-1,2,-8,-2,7,-3,10],[2,-6,5,4,8,4,-5,3,8,8,5,-9,10,-4,-4],[5,-4,-8,9,-5,-3,8,-3,7,-4,-1,3,-7,7,-8],[-6,10,5,1,9,-5,-4,-10,4,10,2,-9,3,-8,7],[-5,10,-5,3,-3,3,-3,-10,5,10,-4,-1,9,-6,8],[4,6,-9,1,8,-4,-1,-7,-2,9,-2,-6,3,-6,-2],[-4,-8,-10,-3,8,-6,-2,1,-10,-4,5,-1,6,6,-4],[-6,7,-9,10,-10,3,3,3,-7,-7,1,6,2,-5,-5],[9,7,5,4,10,-4,-10,-8,-10,-5,5,-8,-7,2,9]]], dtype = "int8")#candidate|3632|(8, 15, 15)|const|int8
var_3633 = relay.var("var_3633", dtype = "int8", shape = (8, 15, 15))#candidate|3633|(8, 15, 15)|var|int8
bop_3634 = relay.logical_xor(const_3632.astype('int8'), relay.reshape(var_3633.astype('int8'), relay.shape_of(const_3632))) # shape=(8, 15, 15)
var_3638 = relay.var("var_3638", dtype = "int8", shape = (8, 15, 15))#candidate|3638|(8, 15, 15)|var|int8
bop_3639 = relay.left_shift(bop_3634.astype('uint8'), relay.reshape(var_3638.astype('uint8'), relay.shape_of(bop_3634))) # shape=(8, 15, 15)
output = bop_3639
output2 = bop_3639
func_3654 = relay.Function([var_3633,var_3638,], output)
mod['func_3654'] = func_3654
mod = relay.transform.InferType()(mod)
var_3655 = relay.var("var_3655", dtype = "int8", shape = (8, 15, 15))#candidate|3655|(8, 15, 15)|var|int8
var_3656 = relay.var("var_3656", dtype = "int8", shape = (8, 15, 15))#candidate|3656|(8, 15, 15)|var|int8
output = func_3654(var_3655,var_3656,)
func_3657 = relay.Function([var_3655,var_3656,], output)
mutated_mod['func_3657'] = func_3657
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3693 = relay.const([[[8.201746,1.405128,1.682301,7.373587,-5.066000,-3.412317,8.231370,6.178316,-9.763641,4.544401,-4.527313,6.626693],[6.283369,-9.171127,-8.127317,9.115433,-3.429748,7.886626,4.429168,-5.651311,-4.095921,-8.118928,4.373749,7.154797],[7.826684,2.364474,-0.708512,7.141338,-6.266268,-8.828525,7.692218,-8.120208,-9.053497,-4.565817,0.404632,-5.134571],[8.840775,8.365482,-5.342924,-2.214790,5.024766,1.422650,0.356081,8.689440,-3.411695,-4.910912,0.511491,0.101254],[-4.840696,2.765407,2.090615,2.740517,-0.215892,9.370463,-8.098429,2.880105,7.850308,8.197399,7.325776,-8.024439],[-0.064424,-0.962143,7.929881,-4.135405,9.699502,0.334670,1.710518,7.973231,3.038944,-1.744238,-9.417845,9.425428],[-5.327382,-9.192014,2.700861,4.906661,3.161520,8.219093,6.838849,-6.589521,4.748452,9.964610,5.064970,7.848482],[4.799314,-8.019620,0.067362,6.644633,-6.782850,6.665633,-3.630842,-2.049974,-3.694411,9.913277,1.973135,-9.144886],[6.663910,3.689571,-3.209495,-4.004313,-0.636350,-8.925156,-0.611518,3.868876,0.969751,5.414854,5.540774,-6.967713],[1.578434,8.680394,4.640524,-3.181212,-0.316637,9.932444,-0.203157,-0.352845,-4.757862,-5.813862,9.745190,-9.189669],[-0.066988,-2.625245,1.750176,-5.669199,-1.445809,0.711438,8.350232,4.524532,4.615873,5.163962,-4.358976,-2.637155],[-2.858580,5.491403,-6.814720,-4.304157,6.794022,-7.337224,4.414172,-4.019875,-0.878938,-2.522846,4.797286,5.863249],[-8.058724,-7.776522,8.589475,-3.971010,4.330173,7.015228,0.397276,-4.208409,-1.030815,6.187059,5.563554,-8.154667],[4.637790,-9.673272,-8.965661,1.933880,-2.104989,1.739812,-4.618807,9.437440,4.218815,4.790864,-0.657171,-9.459789],[-7.529146,1.931400,1.738768,0.818208,-3.259422,3.676033,-6.426201,6.784037,-9.857418,-1.168451,-4.834871,-6.523830],[-3.039414,-7.636701,6.459606,0.012190,-7.027412,-2.195928,-6.420879,-4.301966,2.561041,9.179692,-0.490656,-1.524435]]], dtype = "float64")#candidate|3693|(1, 16, 12)|const|float64
uop_3694 = relay.log10(const_3693.astype('float64')) # shape=(1, 16, 12)
output = relay.Tuple([uop_3694,])
output2 = relay.Tuple([uop_3694,])
func_3719 = relay.Function([], output)
mod['func_3719'] = func_3719
mod = relay.transform.InferType()(mod)
output = func_3719()
func_3720 = relay.Function([], output)
mutated_mod['func_3720'] = func_3720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3719_call = mod.get_global_var('func_3719')
func_3720_call = mutated_mod.get_global_var('func_3720')
call_3733 = relay.TupleGetItem(func_3719_call(), 0)
call_3734 = relay.TupleGetItem(func_3720_call(), 0)
output = call_3733
output2 = call_3734
func_3754 = relay.Function([], output)
mod['func_3754'] = func_3754
mod = relay.transform.InferType()(mod)
output = func_3754()
func_3755 = relay.Function([], output)
mutated_mod['func_3755'] = func_3755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3754_call = mod.get_global_var('func_3754')
func_3755_call = mutated_mod.get_global_var('func_3755')
call_3800 = func_3754_call()
call_3801 = func_3754_call()
output = relay.Tuple([call_3800,])
output2 = relay.Tuple([call_3801,])
func_3814 = relay.Function([], output)
mod['func_3814'] = func_3814
mod = relay.transform.InferType()(mod)
mutated_mod['func_3814'] = func_3814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3814_call = mutated_mod.get_global_var('func_3814')
call_3815 = func_3814_call()
output = call_3815
func_3816 = relay.Function([], output)
mutated_mod['func_3816'] = func_3816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3719_call = mod.get_global_var('func_3719')
func_3720_call = mutated_mod.get_global_var('func_3720')
call_3830 = relay.TupleGetItem(func_3719_call(), 0)
call_3831 = relay.TupleGetItem(func_3720_call(), 0)
output = call_3830
output2 = call_3831
func_3835 = relay.Function([], output)
mod['func_3835'] = func_3835
mod = relay.transform.InferType()(mod)
mutated_mod['func_3835'] = func_3835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3835_call = mutated_mod.get_global_var('func_3835')
call_3836 = func_3835_call()
output = call_3836
func_3837 = relay.Function([], output)
mutated_mod['func_3837'] = func_3837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3814_call = mod.get_global_var('func_3814')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_3895 = relay.TupleGetItem(func_3814_call(), 0)
call_3896 = relay.TupleGetItem(func_3816_call(), 0)
uop_3898 = relay.sqrt(call_3895.astype('float32')) # shape=(1, 16, 12)
uop_3900 = relay.sqrt(call_3896.astype('float32')) # shape=(1, 16, 12)
func_3835_call = mod.get_global_var('func_3835')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_3904 = func_3835_call()
call_3905 = func_3835_call()
func_1880_call = mod.get_global_var('func_1880')
func_1883_call = mutated_mod.get_global_var('func_1883')
const_3925 = relay.const([3,7,6,8,5,2,2,10,7,-7,7,-10,-8,-3,-1,-2,-4,6,-10,-1,8,4,9,-8,-10,-3,-4,1,-4,-10,7,-7,2,2,10,6,-7,7,-4,2,-3,-3,10,9,-10,-6,3,-7,9,-9,-5,8,-5,7,2,-7,8,10,-6,9,9,5,1,7,3,8,2,1,-10,9,2,7,-10,6,-9,3,2,-8,-10,-2,2,1,7,1,2,3,10,4,8,-5,6,-5,-4,1,9,-6,-7,-4,1,-4,-7,-9,-7,-6,-2,6,-7,-6,1,4,5,2,9,8,1,-4,-1,7,3,-4,4,-3,-10,-3,-8,-2,9,5,-8,-7,-7,9,-2,-5,-2,10,-9,-9,3,2,1,4,-6,9,4,-4,6,6,-2,7,-9,9,1,9,-10,-5,2,10,-8,3,4,10,3,-2,-6,8,-5,3,5,-9,-2,-5,-2,4,3,-4,5,8,2,2,8,-3,-6,-8,10,-5,10,9,-4,-3,-8,-5,3,-10,5,4,1,6,-6,10,10,10,-7,3,2,10,3,3,-1,2,5,1,3,-3,10,7,-9,9,6,7,7,9,7,9,-7,5,-7,5,-4,1,10,-3,4,4,5,9,-3,6,-2,-7,8,-8,8,4,-2,5,2,-2,3,6,1,4,2,3,4,3,-4,6,-6,6,-7,9,-1,4,9,2,3,-4,-5,-1,9,-3,-6,-4,3,-8,1,10,10,-5,-3,-9,-2,-5,1,10,-1,2,-3,-10,8,-7,-9,2,2,-10,-4,-5,-3,-7,-8,6,-9,-9,-7,-9,8,4,4,7,-3,2,6,-6,-8,5,10,-7,10,-1,8,-1,-7,-4,-1,6,-9,-3,-4,6,-2,9,-4,10,4,-10,1,-1,-6,-9,7,3,4,1,-5,-9,9,8,4,-7,1,-3,9,-1,8,-2,-5,-10,-10,-6,-9,-3,-3,-2,-1,9,4,-4,-5,-8,7,7,6,3,-10,3,4,-6,7,7,-6,-9,10,5,-8,-8,4,9,5,-6,-10,4,4,-2,9,8,8,8,-9,-1,8,4,-9,10,4,10,-6,8,6,1,-1,-3,-6,-5,5,-6,9,3,-4,3,10,1,-8,9,1,9,1,-1,4,4,3,-10,-9,-10,5,-10,-7,-4,10,-10,3,10,-3,1,-6,5,-2,-4,6,-3,-9,10,1,-10,-7,-1,10,-8,-4,-10,-3,-2], dtype = "int16")#candidate|3925|(462,)|const|int16
call_3924 = relay.TupleGetItem(func_1880_call(relay.reshape(const_3925.astype('int16'), [11, 7, 6]), relay.reshape(const_3925.astype('int16'), [11, 7, 6]), ), 0)
call_3926 = relay.TupleGetItem(func_1883_call(relay.reshape(const_3925.astype('int16'), [11, 7, 6]), relay.reshape(const_3925.astype('int16'), [11, 7, 6]), ), 0)
output = relay.Tuple([uop_3898,call_3904,call_3924,const_3925,])
output2 = relay.Tuple([uop_3900,call_3905,call_3926,const_3925,])
func_3931 = relay.Function([], output)
mod['func_3931'] = func_3931
mod = relay.transform.InferType()(mod)
output = func_3931()
func_3932 = relay.Function([], output)
mutated_mod['func_3932'] = func_3932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3959 = relay.var("var_3959", dtype = "int8", shape = (15, 13, 8))#candidate|3959|(15, 13, 8)|var|int8
var_3960 = relay.var("var_3960", dtype = "int8", shape = (15, 13, 8))#candidate|3960|(15, 13, 8)|var|int8
bop_3961 = relay.left_shift(var_3959.astype('int8'), relay.reshape(var_3960.astype('int8'), relay.shape_of(var_3959))) # shape=(15, 13, 8)
const_3969 = relay.const([[[-7,-4,6,9,1,-2,-4,7],[-5,-7,2,5,-1,-1,-2,-3],[-8,8,-10,9,8,-4,-6,-2],[-1,-2,-2,-8,3,-3,8,4],[4,-10,-10,6,2,-10,10,-3],[-10,5,2,-4,3,-10,5,9],[-5,-6,9,2,-1,-2,-4,-3],[8,6,-3,4,10,-9,7,6],[6,-6,-5,8,1,-8,-5,-9],[1,4,8,2,-2,-6,-10,1],[-6,2,-5,7,2,-1,8,-9],[-7,-5,-3,-4,-9,-3,3,-4],[1,10,8,-4,-3,-7,-6,2]],[[-1,8,-5,8,5,2,5,8],[-5,6,8,-4,-6,3,-7,-5],[3,2,-10,-3,-2,-2,2,7],[-8,1,-4,8,3,-1,-6,9],[-2,7,-1,-6,5,2,-7,7],[3,-3,10,-4,-3,-5,3,-6],[5,6,2,-1,-1,-6,-3,6],[-8,2,10,-3,2,2,4,-10],[-1,-6,-2,2,1,2,1,-9],[-6,-9,8,-1,-3,-6,1,5],[6,-5,-10,10,6,-7,-9,-8],[-9,3,-2,-8,7,10,-1,10],[-8,-6,5,-10,-7,8,3,-10]],[[4,10,8,-10,1,5,-7,-9],[-3,3,-10,-8,2,-10,-3,-9],[-4,4,-6,-8,-4,-1,1,6],[-7,-1,4,4,7,-10,6,1],[10,-3,10,5,4,7,-10,-9],[-1,-3,-2,-10,-5,-3,-4,1],[10,10,5,7,5,-5,6,1],[-6,6,-3,1,9,-9,8,6],[-3,-1,-4,-8,-2,-4,-10,-8],[9,-6,-2,-10,-1,-5,6,9],[10,8,6,-4,2,9,-3,8],[-2,-4,-1,5,-3,9,4,1],[-7,9,-6,4,-3,9,9,-7]],[[4,-5,-6,-5,1,-8,-3,8],[-9,-3,-1,4,9,9,-3,-9],[8,1,4,-4,-3,9,-3,-8],[-3,-9,8,-8,1,5,4,2],[-7,9,-3,6,7,-2,4,5],[10,4,1,7,9,-5,-5,4],[-2,-5,6,-10,9,-5,1,2],[6,-1,8,-9,9,10,3,-8],[-9,-9,-6,-7,-1,10,2,7],[-8,7,8,4,7,3,-10,-4],[-4,3,2,-5,-4,-6,6,6],[-2,1,6,7,-1,-5,1,-9],[4,5,4,8,-4,6,-10,6]],[[-7,3,-4,9,1,6,7,9],[9,-7,3,-3,-4,8,3,-5],[3,-4,-8,-2,-8,3,6,-7],[5,10,-1,-6,1,-6,-8,-3],[-1,-7,9,-8,-8,2,-2,-8],[5,4,10,9,-5,-6,-10,-5],[-7,7,-10,2,-7,-1,-7,5],[-7,-6,-10,8,3,-10,4,-3],[-6,6,-7,-5,7,3,-4,-4],[1,8,6,-9,-2,2,-4,7],[-5,-7,3,7,7,4,2,10],[7,-9,6,1,-6,-3,10,-2],[5,7,1,-10,8,8,1,7]],[[8,2,-1,1,8,2,6,-2],[3,-8,7,-3,-1,7,10,1],[-8,-3,8,10,8,3,-6,-4],[8,3,2,-2,-6,-5,3,-6],[9,-3,1,-2,-7,-4,3,2],[-4,7,-1,-8,-8,-5,1,5],[9,4,3,-3,-2,-1,-7,-6],[-10,-6,4,9,-9,4,-8,-9],[-6,8,-10,8,-8,-8,-4,7],[-9,-4,-10,-4,9,-8,-8,-3],[9,-4,2,2,-2,6,-5,7],[-9,9,-4,-8,-3,-10,-3,-5],[-2,-1,2,-6,-4,-10,7,-6]],[[-8,6,8,-7,-10,1,-9,8],[-7,8,4,6,6,8,-3,10],[9,-5,1,7,-10,7,-9,3],[-5,7,-4,-7,9,4,2,-3],[-3,8,-4,-7,5,4,-8,2],[-5,-3,4,-9,-5,-4,10,-8],[10,5,10,8,8,1,-6,-1],[4,2,-4,-10,6,8,3,-9],[1,-5,-7,-8,5,-1,4,4],[4,7,-8,8,3,2,-1,9],[6,-3,-8,-8,-10,-4,10,4],[3,-3,10,-7,-5,-9,1,-8],[-3,-7,-2,2,3,6,-3,7]],[[-4,8,-10,-9,5,3,5,10],[4,8,4,8,5,9,6,3],[6,4,-8,5,10,-7,1,4],[7,-9,-2,-8,-3,-5,5,-9],[-1,9,7,-3,1,-3,-9,8],[-10,7,-6,-9,4,-7,5,-9],[8,-8,-1,-1,10,7,-10,-5],[3,-2,-9,-7,-8,1,8,-10],[10,-3,-8,3,8,-9,-4,1],[-8,-6,6,1,8,7,-4,4],[6,2,2,4,-7,8,-7,9],[-4,6,10,5,-1,-6,1,6],[-9,-3,-8,-9,-10,-6,-8,6]],[[-2,1,10,-2,8,6,7,-9],[2,7,9,-5,-5,-7,6,4],[-6,1,-10,-6,10,8,-6,6],[-8,-8,-9,7,-3,-6,8,8],[4,9,-4,-2,9,-4,8,-2],[10,-3,-4,2,5,-8,-5,-6],[-8,5,-1,6,9,-4,-7,3],[-8,-8,-7,10,6,6,4,2],[-6,-4,4,-7,-10,-9,-7,6],[-9,8,3,-9,-7,2,-6,3],[-3,-8,-7,-9,-4,-5,1,8],[4,-7,5,-7,10,4,-6,-7],[-6,-6,-8,1,3,6,-7,-1]],[[10,9,-3,-10,8,10,-2,10],[4,10,-1,5,-9,6,-5,9],[7,5,-6,7,-8,7,6,6],[5,3,1,10,10,3,4,-3],[10,5,2,2,-10,9,-8,7],[5,9,-7,3,4,-3,10,3],[3,-7,-9,6,-8,5,-2,-9],[-2,2,-7,5,2,10,-3,1],[-1,4,9,-9,-6,5,9,-6],[2,10,-10,-9,-4,-4,3,4],[6,-6,-9,6,-9,5,4,-9],[-7,6,-4,2,7,5,-3,-6],[9,6,4,5,-2,3,2,-2]],[[1,-10,2,-10,-10,-9,-6,-4],[6,4,1,-7,-10,10,-2,-2],[-10,-7,4,3,4,7,-8,6],[-10,-8,-2,5,-5,3,-5,2],[5,10,-9,-3,5,-7,-8,7],[-5,-8,-9,-8,-8,-4,6,-10],[7,10,1,1,3,8,-2,1],[1,-4,-4,5,-3,-7,-4,10],[7,7,5,-5,-7,4,-2,-7],[-6,-3,5,-4,-8,-7,-10,-6],[-1,8,-3,6,7,-1,5,-2],[-1,3,5,-6,10,7,-2,-6],[6,-9,-6,10,5,4,1,10]],[[3,10,1,-10,9,1,-8,6],[-3,-4,-2,-4,-8,-6,6,-3],[-9,6,-6,1,2,1,-8,-8],[4,2,8,4,4,-7,5,-9],[10,6,-2,5,10,-7,-5,-1],[-7,-6,9,-1,9,5,-5,-10],[-2,4,5,9,5,6,-1,10],[10,-10,-5,3,-8,-8,3,-9],[6,10,-3,9,-6,-10,3,-2],[-6,-3,-5,5,-3,8,2,-2],[1,10,-2,3,-7,3,-3,-5],[9,-9,4,-8,8,-4,1,9],[-9,-7,-9,7,3,5,6,4]],[[8,8,7,7,-1,-6,-9,6],[3,9,4,-7,7,-3,-2,6],[10,9,1,-5,-1,5,-5,7],[4,9,1,5,9,-9,-4,-2],[1,4,-9,2,-9,9,-6,1],[2,10,-7,3,4,9,-9,2],[4,1,4,-3,-10,6,-1,-8],[6,-8,2,1,3,3,2,-1],[-3,2,-6,2,-9,2,5,5],[-9,-8,-6,6,-10,-3,-4,1],[-7,-5,-7,-8,5,-8,-3,4],[6,10,1,-1,-5,-7,1,6],[-10,10,10,-6,2,-7,-7,-5]],[[-5,4,3,8,2,-8,-5,10],[7,-5,-1,-4,-6,-8,-4,-3],[1,6,7,-3,1,-1,-6,-4],[-2,-2,1,-6,8,10,-8,-10],[2,-3,2,-7,5,-9,-10,6],[3,3,-5,-3,-2,5,-7,6],[-3,-10,5,5,-7,1,-9,-7],[4,-8,-10,1,5,-1,1,4],[8,-6,-3,-3,9,-8,-2,3],[-7,-4,-4,-9,1,1,-9,5],[-9,10,-5,-2,6,5,5,3],[-10,10,-4,-5,1,8,-3,9],[7,3,10,-8,-5,4,10,-5]],[[6,6,-4,-6,7,7,10,-1],[5,9,-1,-2,10,8,5,10],[-9,-3,7,10,-5,3,4,2],[-8,-5,-8,5,4,7,9,3],[6,-2,5,-7,10,-6,2,6],[-9,-8,1,-4,-1,6,-10,9],[-3,7,3,-8,3,-1,-2,-6],[-1,9,-10,-9,-3,2,-4,-9],[1,6,-1,-9,8,1,9,2],[-4,10,-3,-8,3,-2,-10,-5],[7,5,6,4,5,4,5,-2],[7,6,2,-8,1,-4,-1,3],[10,5,3,-10,5,10,9,10]]], dtype = "int8")#candidate|3969|(15, 13, 8)|const|int8
bop_3970 = relay.floor_divide(var_3960.astype('float64'), relay.reshape(const_3969.astype('float64'), relay.shape_of(var_3960))) # shape=(15, 13, 8)
output = relay.Tuple([bop_3961,bop_3970,])
output2 = relay.Tuple([bop_3961,bop_3970,])
func_3983 = relay.Function([var_3959,var_3960,], output)
mod['func_3983'] = func_3983
mod = relay.transform.InferType()(mod)
var_3984 = relay.var("var_3984", dtype = "int8", shape = (15, 13, 8))#candidate|3984|(15, 13, 8)|var|int8
var_3985 = relay.var("var_3985", dtype = "int8", shape = (15, 13, 8))#candidate|3985|(15, 13, 8)|var|int8
output = func_3983(var_3984,var_3985,)
func_3986 = relay.Function([var_3984,var_3985,], output)
mutated_mod['func_3986'] = func_3986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3814_call = mod.get_global_var('func_3814')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_4014 = relay.TupleGetItem(func_3814_call(), 0)
call_4015 = relay.TupleGetItem(func_3816_call(), 0)
func_3477_call = mod.get_global_var('func_3477')
func_3480_call = mutated_mod.get_global_var('func_3480')
var_4018 = relay.var("var_4018", dtype = "bool", shape = (132,))#candidate|4018|(132,)|var|bool
call_4017 = relay.TupleGetItem(func_3477_call(relay.reshape(var_4018.astype('bool'), [3, 11, 4]), relay.reshape(var_4018.astype('bool'), [3, 11, 4]), ), 0)
call_4019 = relay.TupleGetItem(func_3480_call(relay.reshape(var_4018.astype('bool'), [3, 11, 4]), relay.reshape(var_4018.astype('bool'), [3, 11, 4]), ), 0)
output = relay.Tuple([call_4014,call_4017,var_4018,])
output2 = relay.Tuple([call_4015,call_4019,var_4018,])
func_4026 = relay.Function([var_4018,], output)
mod['func_4026'] = func_4026
mod = relay.transform.InferType()(mod)
mutated_mod['func_4026'] = func_4026
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4027 = relay.var("var_4027", dtype = "bool", shape = (132,))#candidate|4027|(132,)|var|bool
func_4026_call = mutated_mod.get_global_var('func_4026')
call_4028 = func_4026_call(var_4027)
output = call_4028
func_4029 = relay.Function([var_4027], output)
mutated_mod['func_4029'] = func_4029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3814_call = mod.get_global_var('func_3814')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_4057 = relay.TupleGetItem(func_3814_call(), 0)
call_4058 = relay.TupleGetItem(func_3816_call(), 0)
output = call_4057
output2 = call_4058
func_4065 = relay.Function([], output)
mod['func_4065'] = func_4065
mod = relay.transform.InferType()(mod)
mutated_mod['func_4065'] = func_4065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4065_call = mutated_mod.get_global_var('func_4065')
call_4066 = func_4065_call()
output = call_4066
func_4067 = relay.Function([], output)
mutated_mod['func_4067'] = func_4067
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4134 = relay.var("var_4134", dtype = "int16", shape = (16, 2, 16))#candidate|4134|(16, 2, 16)|var|int16
var_4135 = relay.var("var_4135", dtype = "int16", shape = (16, 2, 16))#candidate|4135|(16, 2, 16)|var|int16
bop_4136 = relay.bitwise_or(var_4134.astype('int16'), relay.reshape(var_4135.astype('int16'), relay.shape_of(var_4134))) # shape=(16, 2, 16)
uop_4143 = relay.acos(var_4135.astype('float32')) # shape=(16, 2, 16)
uop_4149 = relay.asinh(uop_4143.astype('float64')) # shape=(16, 2, 16)
var_4155 = relay.var("var_4155", dtype = "float32", shape = (16, 2, 16))#candidate|4155|(16, 2, 16)|var|float32
bop_4156 = relay.right_shift(uop_4143.astype('int32'), relay.reshape(var_4155.astype('int32'), relay.shape_of(uop_4143))) # shape=(16, 2, 16)
output = relay.Tuple([bop_4136,uop_4149,bop_4156,])
output2 = relay.Tuple([bop_4136,uop_4149,bop_4156,])
func_4164 = relay.Function([var_4134,var_4135,var_4155,], output)
mod['func_4164'] = func_4164
mod = relay.transform.InferType()(mod)
var_4165 = relay.var("var_4165", dtype = "int16", shape = (16, 2, 16))#candidate|4165|(16, 2, 16)|var|int16
var_4166 = relay.var("var_4166", dtype = "int16", shape = (16, 2, 16))#candidate|4166|(16, 2, 16)|var|int16
var_4167 = relay.var("var_4167", dtype = "float32", shape = (16, 2, 16))#candidate|4167|(16, 2, 16)|var|float32
output = func_4164(var_4165,var_4166,var_4167,)
func_4168 = relay.Function([var_4165,var_4166,var_4167,], output)
mutated_mod['func_4168'] = func_4168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_4198 = func_4065_call()
call_4199 = func_4065_call()
const_4204 = relay.constdtype = "float64")#candidate|4204|(13, 16, 12)|const|float64
bop_4205 = relay.logical_xor(call_4198.astype('uint32'), const_4204.astype('uint32')) # shape=(13, 16, 12)
bop_4208 = relay.logical_xor(call_4199.astype('uint32'), const_4204.astype('uint32')) # shape=(13, 16, 12)
output = bop_4205
output2 = bop_4208
func_4209 = relay.Function([], output)
mod['func_4209'] = func_4209
mod = relay.transform.InferType()(mod)
mutated_mod['func_4209'] = func_4209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mutated_mod.get_global_var('func_4209')
call_4210 = func_4209_call()
output = call_4210
func_4211 = relay.Function([], output)
mutated_mod['func_4211'] = func_4211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3931_call = mod.get_global_var('func_3931')
func_3932_call = mutated_mod.get_global_var('func_3932')
call_4232 = relay.TupleGetItem(func_3931_call(), 2)
call_4233 = relay.TupleGetItem(func_3932_call(), 2)
output = relay.Tuple([call_4232,])
output2 = relay.Tuple([call_4233,])
func_4236 = relay.Function([], output)
mod['func_4236'] = func_4236
mod = relay.transform.InferType()(mod)
output = func_4236()
func_4237 = relay.Function([], output)
mutated_mod['func_4237'] = func_4237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
call_4243 = func_4209_call()
call_4244 = func_4209_call()
var_4252 = relay.var("var_4252", dtype = "uint32", shape = (13, 16, 12))#candidate|4252|(13, 16, 12)|var|uint32
bop_4253 = relay.subtract(call_4243.astype('float32'), relay.reshape(var_4252.astype('float32'), relay.shape_of(call_4243))) # shape=(13, 16, 12)
bop_4256 = relay.subtract(call_4244.astype('float32'), relay.reshape(var_4252.astype('float32'), relay.shape_of(call_4244))) # shape=(13, 16, 12)
output = relay.Tuple([bop_4253,])
output2 = relay.Tuple([bop_4256,])
func_4268 = relay.Function([var_4252,], output)
mod['func_4268'] = func_4268
mod = relay.transform.InferType()(mod)
var_4269 = relay.var("var_4269", dtype = "uint32", shape = (13, 16, 12))#candidate|4269|(13, 16, 12)|var|uint32
output = func_4268(var_4269)
func_4270 = relay.Function([var_4269], output)
mutated_mod['func_4270'] = func_4270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_4365 = func_4065_call()
call_4366 = func_4065_call()
var_4369 = relay.var("var_4369", dtype = "float64", shape = (1, 16, 12))#candidate|4369|(1, 16, 12)|var|float64
bop_4370 = relay.multiply(call_4365.astype('uint16'), relay.reshape(var_4369.astype('uint16'), relay.shape_of(call_4365))) # shape=(1, 16, 12)
bop_4373 = relay.multiply(call_4366.astype('uint16'), relay.reshape(var_4369.astype('uint16'), relay.shape_of(call_4366))) # shape=(1, 16, 12)
output = relay.Tuple([bop_4370,])
output2 = relay.Tuple([bop_4373,])
func_4384 = relay.Function([var_4369,], output)
mod['func_4384'] = func_4384
mod = relay.transform.InferType()(mod)
var_4385 = relay.var("var_4385", dtype = "float64", shape = (1, 16, 12))#candidate|4385|(1, 16, 12)|var|float64
output = func_4384(var_4385)
func_4386 = relay.Function([var_4385], output)
mutated_mod['func_4386'] = func_4386
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4424 = relay.var("var_4424", dtype = "uint16", shape = (6, 14, 11))#candidate|4424|(6, 14, 11)|var|uint16
var_4425 = relay.var("var_4425", dtype = "uint16", shape = (6, 14, 11))#candidate|4425|(6, 14, 11)|var|uint16
bop_4426 = relay.subtract(var_4424.astype('uint16'), relay.reshape(var_4425.astype('uint16'), relay.shape_of(var_4424))) # shape=(6, 14, 11)
uop_4433 = relay.exp(var_4425.astype('float32')) # shape=(6, 14, 11)
output = relay.Tuple([bop_4426,uop_4433,])
output2 = relay.Tuple([bop_4426,uop_4433,])
func_4455 = relay.Function([var_4424,var_4425,], output)
mod['func_4455'] = func_4455
mod = relay.transform.InferType()(mod)
mutated_mod['func_4455'] = func_4455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4455_call = mutated_mod.get_global_var('func_4455')
var_4457 = relay.var("var_4457", dtype = "uint16", shape = (6, 14, 11))#candidate|4457|(6, 14, 11)|var|uint16
var_4458 = relay.var("var_4458", dtype = "uint16", shape = (6, 14, 11))#candidate|4458|(6, 14, 11)|var|uint16
call_4456 = func_4455_call(var_4457,var_4458,)
output = call_4456
func_4459 = relay.Function([var_4457,var_4458,], output)
mutated_mod['func_4459'] = func_4459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3931_call = mod.get_global_var('func_3931')
func_3932_call = mutated_mod.get_global_var('func_3932')
call_4468 = relay.TupleGetItem(func_3931_call(), 1)
call_4469 = relay.TupleGetItem(func_3932_call(), 1)
uop_4470 = relay.atanh(call_4468.astype('float64')) # shape=(1, 16, 12)
uop_4472 = relay.atanh(call_4469.astype('float64')) # shape=(1, 16, 12)
func_3654_call = mod.get_global_var('func_3654')
func_3657_call = mutated_mod.get_global_var('func_3657')
var_4477 = relay.var("var_4477", dtype = "int8", shape = (1800,))#candidate|4477|(1800,)|var|int8
call_4476 = func_3654_call(relay.reshape(var_4477.astype('int8'), [8, 15, 15]), relay.reshape(var_4477.astype('int8'), [8, 15, 15]), )
call_4478 = func_3654_call(relay.reshape(var_4477.astype('int8'), [8, 15, 15]), relay.reshape(var_4477.astype('int8'), [8, 15, 15]), )
output = relay.Tuple([uop_4470,call_4476,var_4477,])
output2 = relay.Tuple([uop_4472,call_4478,var_4477,])
func_4481 = relay.Function([var_4477,], output)
mod['func_4481'] = func_4481
mod = relay.transform.InferType()(mod)
var_4482 = relay.var("var_4482", dtype = "int8", shape = (1800,))#candidate|4482|(1800,)|var|int8
output = func_4481(var_4482)
func_4483 = relay.Function([var_4482], output)
mutated_mod['func_4483'] = func_4483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3835_call = mod.get_global_var('func_3835')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_4514 = func_3835_call()
call_4515 = func_3835_call()
uop_4518 = relay.sigmoid(call_4514.astype('float64')) # shape=(1, 16, 12)
uop_4520 = relay.sigmoid(call_4515.astype('float64')) # shape=(1, 16, 12)
func_1323_call = mod.get_global_var('func_1323')
func_1326_call = mutated_mod.get_global_var('func_1326')
const_4526 = relay.const(-6.759123, dtype = "float64")#candidate|4526|()|const|float64
const_4527 = relay.const([-7.446607,5.028401,-3.890545,-3.137669,-2.725097,7.095046,-3.022482,7.266225,7.134677,1.262425,-7.982099,0.391095,-8.582810,-2.449628,9.845593,4.760650,-1.791617,-2.216856,3.898103,-0.931480,-2.821831,-8.405163,-0.895342,9.024087,5.148095,0.646465,6.473973,4.540275,-1.641302,-6.443360,-6.444322,7.808022,-6.929150,7.423428,6.627260,5.860279,6.212633,-3.905679,-4.677074,9.693429,-4.541240,5.595565,-7.281163,3.793023,-3.562798,-9.351408,4.444700,-4.714793,-5.827572,6.303065,9.481932,8.346307,0.933641,-9.792711,8.007691,2.404892,-9.606746,-2.038994,-4.037339,-9.972780,5.777857,6.774709,-9.922156,-4.565537,0.663224,-9.049043,6.140484,-5.436494,6.093239,-4.720283,-4.924943,-7.032556,-9.009590,8.384129,1.590909,9.797883,3.501013,8.183160,-2.564454,-9.881323,-2.077234,7.194893,-2.287873,-3.794621,-5.774718,7.719211,-3.231242,-8.868932,-9.100166,9.105744,7.574507,-9.268220,4.782479,-3.622906,7.314932,-5.172078,-5.702772,7.563677,3.615121,-4.666219,-7.442384,-5.496807,-3.862681,7.429215,3.039967,-1.256334,-9.760321,8.899732,-6.398943,3.845285,-0.898100,3.678144,9.521679,3.322035,-8.411989,8.344906,8.908651,-4.623771,-7.926630,-1.605578,-8.338893,-7.975834,1.650460,7.440789,5.804622,-6.278976,-9.966940,-4.707728,-7.716192,-9.200606,-0.897664,-6.315419,4.397935,3.998034,-3.532930,1.102595,-1.240737,6.290457,6.466905,3.567497,-3.367565,-4.340600,-2.512337,-0.709119,5.255756,1.262933,-4.098616,3.973472,-5.646990,4.864292,7.363106,-5.181829,-4.098362,8.157082,-3.633546,4.895232,-4.651719,4.775062,-7.933541,-0.507905,-0.565746,0.356151,1.150871,-0.848043,6.771537,-2.178537,0.282398,-4.306208,8.770852,0.957217,9.537380,-3.655890,3.822804,-7.300666,8.672724,4.145803,-3.913003,8.773955,3.018353,-8.571587,7.774854,9.793476,5.163607,6.639737,-0.836092,-8.367145,8.297023,4.989758,-3.805825,-4.022337,-2.015674,9.570864,0.057420,-8.179005,-0.334021,5.246216,-4.410684,-0.613955,6.653450,-9.629393,6.635325,8.106187,5.688828,2.590289,-9.856841,1.596724,0.468092,2.734136,7.572092,8.071372,-6.325222,-6.436284,-8.412850,-0.066652,-6.493529,9.191023,9.989853,-2.393007,5.629065,-8.939214,9.932046,3.259270,-8.391358,9.755599,-1.490897,-7.469060,-7.632027,5.042319,3.556466,-3.042309,-8.117171,3.547419,-6.393531,-8.307389,2.867293,5.039709,3.081909,5.884667,6.448908,7.408343,-8.156654,8.609839,-9.761899,0.862098,-2.627757,0.713673,6.189592,5.266197,-4.421231,9.929847,-5.171528,1.527495,2.344032,-1.876270,7.834031,5.746894,5.019922,-5.063659,5.088862,3.865968,0.137068,7.411966,-0.782307,-8.597610,-9.159573,-2.524971,-6.978915,-6.226480,4.696153,7.026604], dtype = "float64")#candidate|4527|(270,)|const|float64
call_4525 = func_1323_call(relay.reshape(const_4526.astype('float64'), []), relay.reshape(const_4527.astype('float64'), [9, 5, 6]), )
call_4528 = func_1323_call(relay.reshape(const_4526.astype('float64'), []), relay.reshape(const_4527.astype('float64'), [9, 5, 6]), )
output = relay.Tuple([uop_4518,call_4525,const_4526,const_4527,])
output2 = relay.Tuple([uop_4520,call_4528,const_4526,const_4527,])
func_4530 = relay.Function([], output)
mod['func_4530'] = func_4530
mod = relay.transform.InferType()(mod)
output = func_4530()
func_4531 = relay.Function([], output)
mutated_mod['func_4531'] = func_4531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3814_call = mod.get_global_var('func_3814')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_4613 = relay.TupleGetItem(func_3814_call(), 0)
call_4614 = relay.TupleGetItem(func_3816_call(), 0)
func_786_call = mod.get_global_var('func_786')
func_790_call = mutated_mod.get_global_var('func_790')
var_4620 = relay.var("var_4620", dtype = "int32", shape = ())#candidate|4620|()|var|int32
var_4621 = relay.var("var_4621", dtype = "int32", shape = (16,))#candidate|4621|(16,)|var|int32
call_4619 = func_786_call(relay.reshape(var_4620.astype('int32'), []), relay.reshape(var_4621.astype('int32'), [2, 8, 1]), )
call_4622 = func_786_call(relay.reshape(var_4620.astype('int32'), []), relay.reshape(var_4621.astype('int32'), [2, 8, 1]), )
bop_4624 = relay.floor_mod(call_4619.astype('float32'), var_4620.astype('float32')) # shape=(2, 8, 1)
bop_4627 = relay.floor_mod(call_4622.astype('float32'), var_4620.astype('float32')) # shape=(2, 8, 1)
func_3654_call = mod.get_global_var('func_3654')
func_3657_call = mutated_mod.get_global_var('func_3657')
const_4630 = relay.const([4,-8,-7,-9,9,-3,-7,-3,-1,-8,-9,-5,-5,-3,1,-7,-5,8,-8,-2,6,3,-8,6,5,2,-10,10,-7,10,-6,-5,-4,2,-1,10,-10,1,-7,9,-4,-8,9,10,1,-8,-8,8,5,3,-4,3,4,-4,-2,-7,-6,-5,-2,-5,-6,10,3,6,-9,3,-2,7,-10,-10,-4,3,9,6,-2,4,3,1,-5,-3,-6,6,-1,-5,-4,5,10,-7,-3,-10,-4,-2,10,5,10,8,4,-3,10,8,-3,-1,1,1,3,-1,-8,5,8,-3,-8,6,8,-9,-9,2,9,2,3,4,-7,-2,7,2,9,-4,6,-9,1,-3,-4,-10,-8,5,-8,-5,3,9,-9,7,-6,-5,3,9,3,-4,-6,-1,1,-4,-4,-5,10,-1,6,-7,3,7,9,1,5,-10,-2,-5,-7,-3,10,2,-1,-1,2,-1,1,2,1,1,-9,-9,1,5,5,-3,-5,4,-9,-4,2,-6,1,-2,-1,10,-3,-2,-5,4,-4,-2,1,6,-3,-1,-4,-10,4,9,7,7,10,-4,-6,-2,7,-1,2,-8,-6,1,-5,8,5,7,7,-1,5,2,6,-4,-8,1,2,4,-8,1,6,-5,5,2,-7,-10,10,6,4,1,4,-1,-1,6,1,-5,7,9,-3,5,-4,4,7,-2,-1,4,-4,4,9,9,7,7,3,7,7,-9,7,8,5,-6,2,-2,4,-4,-5,-4,-6,-8,9,6,-7,8,10,9,-6,2,6,6,9,2,-4,8,-7,10,2,-3,-3,-5,9,-8,1,-2,-3,9,-10,-6,7,-4,-10,4,10,-1,8,-6,1,1,6,-1,4,3,-10,8,-4,-6,9,-8,-5,2,4,10,3,-9,7,-10,-7,6,-5,-7,-9,3,10,6,10,-9,-7,-2,-10,-1,-1,7,5,7,10,-7,6,-6,1,2,-2,-8,1,7,-10,-8,9,-1,1,-4,-4,9,-5,8,8,9,-2,7,8,-5,-4,1,10,-2,4,1,9,9,6,-1,-9,4,-7,5,9,-6,-4,-8,1,-7,-6,-2,-8,-10,-6,1,-1,-7,8,-4,5,-9,6,-3,-7,-9,-9,-1,-2,3,2,-5,9,-1,-5,1,4,-9,9,-9,-4,-1,-1,-10,-3,-1,7,8,-8,-10,-4,5,2,10,9,10,-10,-6,5,-2,-9,3,-8,1,-10,3,3,-3,5,6,5,-5,7,3,-7,2,9,3,8,5,6,-1,-9,4,8,-8,-6,-7,6,6,-5,1,-4,3,-10,-10,-8,3,-7,-3,-9,-9,4,1,-6,-5,-5,-6,5,-3,-8,1,-5,-5,-3,9,-9,-8,-4,5,6,-10,-8,-2,-4,8,-7,7,-3,-6,3,8,-4,5,5,-8,1,10,2,2,6,-7,-9,6,-1,8,-10,5,5,3,-1,-9,-9,-4,10,7,10,-8,2,-10,-6,8,7,1,-5,-1,3,1,-8,3,4,3,-7,2,-7,-4,-3,1,6,-1,4,7,2,1,4,-8,-7,-2,-4,-4,7,5,2,9,8,7,3,-3,-2,3,-8,6,-3,-10,3,9,-5,9,10,3,7,2,-6,5,7,5,10,-3,-10,-10,-8,-2,-3,10,6,-1,-5,-4,-8,-10,6,2,-7,-7,-9,-9,-7,-2,9,-4,-7,-9,-8,5,10,10,-1,2,-1,-4,-7,1,-5,4,7,10,-3,-6,1,-6,7,9,-10,5,-1,4,-5,3,8,-1,-3,8,-9,6,8,-3,10,2,-2,-3,-7,2,-10,9,10,4,2,-1,6,2,-9,-8,6,9,6,-10,9,-4,-5,-10,6,2,3,10,-1,5,5,9,3,9,1,4,-1,2,5,3,-3,-9,8,-8,-10,-9,8,8,9,1,-7,2,7,-6,-4,-2,-3,3,-2,10,-6,9,-6,-5,4,-5,-3,9,-2,2,3,3,9,-9,9,-3,8,-10,8,-9,3,5,4,-8,10,-2,-6,-1,1,3,9,8,7,2,-3,-10,-9,-2,9,-7,10,4,-4,-8,-4,6,7,1,-2,-9,-5,1,6,-7,3,-5,-3,8,3,4,-9,3,6,1,-8,-5,1,-9,9,-1,-9,-7,3,-2,3,4,-8,-9,-2,6,-1,4,-7,9,8,10,6,4,5,6,3,2,-8,10,1,1,-5,4,-8,9,2,-7,-1,8,8,5,-5,-7,-8,-4,-2,-1,-9,-10,7,-7,1,5,-7,-9,8,-8,-1,-7,-1,9,5,-10,-4,-3,10,-10,-4,-4,-10,5,6,-1,10,7,-7,5,-6,-6,5,-1,-9,-9,-6,5,-7,3,8,2,2,-7,8,10,-9,4,10,-1,6,4,-3,1,-3,-5,8,7,1,-8,-10,-4,-9,-10,-6,7,-9,6,-2,-3,-1,6,-6,-1,10,5,-10,-6,-7,-7,9,7,-7,-1,-9,-5,-3,-4,-7,7,4,7,10,2,-4,-2,-5,1,1,-10,-6,-5,-10,-9,1,4,7,1,7,-7,-4,-1,8,-8,6,1,7,-3,4,1,6,-3,9,2,-7,6,-10,10,-3,-8,8,-10,-7,1,-5,-7,10,-5,3,-6,6,2,2,-3,2,-1,3,5,-6,-1,1,-5,-9,-9,-8,5,-8,2,-10,-3,8,-3,9,1,6,-8,2,-7,6,5,10,9,-6,-6,-8,9,4,5,9,9,-9,-10,2,2,-3,1,-5,-1,-3,-9,5,5,7,-3,7,10,10,-7,-7,-10,5,4,-6,-5,2,-10,-2,-8,-6,-5,-4,-10,-5,9,-7,-4,4,6,-3,-9,-5,-3,5,-5,-4,-5,-5,7,6,-4,6,-7,6,-2,-4,-3,1,5,-9,8,-9,4,-10,6,6,10,9,-4,-1,-3,7,-6,-4,-4,-9,8,7,-4,4,4,-1,4,2,-5,4,9,-6,10,6,-2,-8,5,-2,-2,-2,-8,1,-2,-10,7,7,-7,-3,-2,3,-3,4,-4,-8,5,-5,2,-5,-10,-5,10,2,-4,4,-3,-2,6,4,-4,-10,-4,-2,-10,5,1,-6,-10,6,-3,-2,7,-3,-9,5,-1,2,2,4,-8,-2,8,8,6,4,4,8,-1,6,-9,-3,8,8,9,1,-2,6,9,-10,10,8,1,7,8,3,-4,8,4,-1,-1,-10,-3,4,2,1,-9,10,-5,-3,-2,-8,5,-8,5,1,2,-10,-10,1,10,8,10,-1,-6,-8,3,5,-6,-6,-4,9,-10,5,5,6,9,-5,3,-6,2,-7,1,-2,5,-8,-7,-7,7,-1,-7,8,-2,-4,10,-3,-1,-7,10,-9,-9,6,-7,-5,2,-5,-2,2,5,-6,-6,-9,-9,1,-6,-6,1,-1,4,1,1,-4,8,-6,4,1,-2,6,5,-3,-10,-7,3,-7,5,5,-5,-8,7,-7,-7,10,9,1,5,-6,-4,-6,-3,6,-5,4,1,3,6,-8,10,-2,-6,-2,8,-8,3,3,-8,-3,-1,-3,1,-2,-7,1,10,6,-8,-9,-6,-3,10,6,7,3,6,-2,-3,3,-5,-7,10,3,2,6,-8,9,-7,9,4,-3,7,9,-2,-10,-9,-3,8,6,-7,-8,-3,4,3,5,-5,-10,-8,2,3,8,-9,-2,-1,9,-3,5,-5,8,-2,7,-1,-10,8,-10,8,-5,-3,5,7,1,10,-6,5,-5,6,4,9,-8,-8,7,8,-2,-1,2,9,-8,9,6,-7,-1,-10,-2,-9,-5,-9,-4,6,-6,2,-5,-3,-2,4,-6,-8,5,2,-9,10,-1,-6,-5,-10,9,3,5,-4,8,-4,2,5,-1,7,-9,4,5,4,2,3,8,-5,1,9,-9,8,-6,-9,10,-7,-10,-1,-10,-6,-1,-4,-6,1,6,9,-2,7,1,-4,-9,-2,-9,5,-7,2,2,6,-2,-7,6,6,-6,5,6,-6,10,5,10,9,-4,7,6,6,-2,-10,3,-8,10,4,-5,-2,-10,-4,-10,-10,-7,-2,10,-3,-3,3,-1,-4,-6,-7,-1,-6,8,3,-7,2,-2,7,4,-6,-6,-2,-10,10,-7,7,-7,-10,4,-5,-8,5,3,2,5,-4,-7,-8,3,10,-6,-7,-9,10,-10,-6,-3,-8,6,-2,10,-2,2,-1,-9,-6,-10,-9,-10,4,-5,-2,-5,5,-2,2,2,-8,-5,3,2,10,2,10,-10,6,5,4,-8,-1,5,-4,-9,-5,-1,-10,-8,4,-2,4,9,9,-9,5,-1,10,2,-7,6,7,10,2,-10,10,1,5,-5,5,7,-1,-6,6,-7,-1,5,-2,-5,-5,-1,10,10,-3,10,-10,5,5,4,-1,6,-4,10,-6,-8,-4,7,-2,-9,-3,-10,8,-6,-1,6,-9,-6,3,-9,-4,1,6,2,-6,-3,-2,2,10,-2,-8,3,-1,10,-4,3,6,6,4,1,8,9,-7,-9,8,-8,-10,-4,7,-6,-5,-8,5,-4,-1,10,-9,1,-1,2,10,6,8,-4,7,7,9,2,1,-4,1,4,-5,5,-5,-3,-5,-6,10,10,-10,-9,4,6,9,2,5,9,10,4,-9,10,-8,6,8,7,-3,-10,10,-6,5,-7,3,10,10,-1,-5,-2,9,2,4,-9,8,5,5,-4,-9,-5,-9,-8,-1,9,-1,-8,8,2,-1,-10,10,6,-9,10,-5,4,9,4,-2,7,-3,4,7,5,6,-9,-3,6,7,-1,10,-6,-7,1,5,-3,-5,2,-4,1,2,-8,7,4,9], dtype = "int8")#candidate|4630|(1800,)|const|int8
call_4629 = func_3654_call(relay.reshape(const_4630.astype('int8'), [8, 15, 15]), relay.reshape(const_4630.astype('int8'), [8, 15, 15]), )
call_4631 = func_3654_call(relay.reshape(const_4630.astype('int8'), [8, 15, 15]), relay.reshape(const_4630.astype('int8'), [8, 15, 15]), )
uop_4634 = relay.erf(call_4629.astype('float32')) # shape=(8, 15, 15)
uop_4636 = relay.erf(call_4631.astype('float32')) # shape=(8, 15, 15)
func_4268_call = mod.get_global_var('func_4268')
func_4270_call = mutated_mod.get_global_var('func_4270')
var_4650 = relay.var("var_4650", dtype = "uint32", shape = (2496,))#candidate|4650|(2496,)|var|uint32
call_4649 = relay.TupleGetItem(func_4268_call(relay.reshape(var_4650.astype('uint32'), [13, 16, 12])), 0)
call_4651 = relay.TupleGetItem(func_4270_call(relay.reshape(var_4650.astype('uint32'), [13, 16, 12])), 0)
func_1647_call = mod.get_global_var('func_1647')
func_1651_call = mutated_mod.get_global_var('func_1651')
const_4660 = relay.const([-10,8,6,-7,-9,1,4,-8,8,9,10,3,-2,-7,-5,9,-1,-3,10,1,10,9,-3,6,3,-1,-3,-3,7,-7,8,-10,-2,-7,6,4,-1,-10,10,-6,-1,7,1,-10,-10,5,-2,-1,9,-1,-8,-8,9,-3,-6,-3,-6,-3,-4,9,2,4,-8,-2,-4,1,7,-3,9,-7,-7,-4,-5,-1,-1,-3,-4,-9,-3,-9,-2,-1,2,-7,-1,8,5,2,8,-6,-6,4,-7,2,1,-9,2,4,-5,4,3,6,3,-7,3,-2,4,9,-8,-1,2,2,9,5,6,10,1,-9,-5,-7,-4,9,4,9,-9,-3,-10,5,2,5,-9,-9,-2,7,9,-6,-3,-10,3,1,2,2,-10,3,-7,9,-3,8,-1,3,-9,4,5,10,-3,-9,6,9,8,-7,-10,1,-9,1,6,-1,-4,-8], dtype = "int8")#candidate|4660|(168,)|const|int8
call_4659 = func_1647_call(relay.reshape(var_4620.astype('int8'), []), relay.reshape(const_4660.astype('int8'), [4, 14, 3]), )
call_4661 = func_1647_call(relay.reshape(var_4620.astype('int8'), []), relay.reshape(const_4660.astype('int8'), [4, 14, 3]), )
output = relay.Tuple([call_4613,var_4621,bop_4624,const_4630,uop_4634,call_4649,var_4650,call_4659,const_4660,])
output2 = relay.Tuple([call_4614,var_4621,bop_4627,const_4630,uop_4636,call_4651,var_4650,call_4661,const_4660,])
func_4665 = relay.Function([var_4620,var_4621,var_4650,], output)
mod['func_4665'] = func_4665
mod = relay.transform.InferType()(mod)
var_4666 = relay.var("var_4666", dtype = "int32", shape = ())#candidate|4666|()|var|int32
var_4667 = relay.var("var_4667", dtype = "int32", shape = (16,))#candidate|4667|(16,)|var|int32
var_4668 = relay.var("var_4668", dtype = "uint32", shape = (2496,))#candidate|4668|(2496,)|var|uint32
output = func_4665(var_4666,var_4667,var_4668,)
func_4669 = relay.Function([var_4666,var_4667,var_4668,], output)
mutated_mod['func_4669'] = func_4669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3814_call = mod.get_global_var('func_3814')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_4756 = relay.TupleGetItem(func_3814_call(), 0)
call_4757 = relay.TupleGetItem(func_3816_call(), 0)
var_4773 = relay.var("var_4773", dtype = "float64", shape = (10, 16, 12))#candidate|4773|(10, 16, 12)|var|float64
bop_4774 = relay.logical_xor(call_4756.astype('int16'), var_4773.astype('int16')) # shape=(10, 16, 12)
bop_4777 = relay.logical_xor(call_4757.astype('int16'), var_4773.astype('int16')) # shape=(10, 16, 12)
func_3050_call = mod.get_global_var('func_3050')
func_3053_call = mutated_mod.get_global_var('func_3053')
var_4784 = relay.var("var_4784", dtype = "float32", shape = (1536,))#candidate|4784|(1536,)|var|float32
const_4785 = relay.const(10, dtype = "int32")#candidate|4785|()|const|int32
call_4783 = relay.TupleGetItem(func_3050_call(relay.reshape(var_4784.astype('float32'), [12, 16, 8]), relay.reshape(const_4785.astype('int32'), []), ), 1)
call_4786 = relay.TupleGetItem(func_3053_call(relay.reshape(var_4784.astype('float32'), [12, 16, 8]), relay.reshape(const_4785.astype('int32'), []), ), 1)
output = relay.Tuple([bop_4774,call_4783,var_4784,const_4785,])
output2 = relay.Tuple([bop_4777,call_4786,var_4784,const_4785,])
func_4791 = relay.Function([var_4773,var_4784,], output)
mod['func_4791'] = func_4791
mod = relay.transform.InferType()(mod)
mutated_mod['func_4791'] = func_4791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4791_call = mutated_mod.get_global_var('func_4791')
var_4793 = relay.var("var_4793", dtype = "float64", shape = (10, 16, 12))#candidate|4793|(10, 16, 12)|var|float64
var_4794 = relay.var("var_4794", dtype = "float32", shape = (1536,))#candidate|4794|(1536,)|var|float32
call_4792 = func_4791_call(var_4793,var_4794,)
output = call_4792
func_4795 = relay.Function([var_4793,var_4794,], output)
mutated_mod['func_4795'] = func_4795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
call_4797 = func_4209_call()
call_4798 = func_4209_call()
output = relay.Tuple([call_4797,])
output2 = relay.Tuple([call_4798,])
func_4816 = relay.Function([], output)
mod['func_4816'] = func_4816
mod = relay.transform.InferType()(mod)
output = func_4816()
func_4817 = relay.Function([], output)
mutated_mod['func_4817'] = func_4817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4816_call = mod.get_global_var('func_4816')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_4821 = relay.TupleGetItem(func_4816_call(), 0)
call_4822 = relay.TupleGetItem(func_4817_call(), 0)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_4828 = func_4065_call()
call_4829 = func_4065_call()
bop_4838 = relay.less(call_4821.astype('bool'), call_4828.astype('bool')) # shape=(13, 16, 12)
bop_4841 = relay.less(call_4822.astype('bool'), call_4829.astype('bool')) # shape=(13, 16, 12)
var_4842 = relay.var("var_4842", dtype = "float64", shape = (2, 16, 12))#candidate|4842|(2, 16, 12)|var|float64
bop_4843 = relay.greater_equal(call_4828.astype('bool'), var_4842.astype('bool')) # shape=(2, 16, 12)
bop_4846 = relay.greater_equal(call_4829.astype('bool'), var_4842.astype('bool')) # shape=(2, 16, 12)
bop_4859 = relay.left_shift(call_4828.astype('int32'), var_4842.astype('int32')) # shape=(2, 16, 12)
bop_4862 = relay.left_shift(call_4829.astype('int32'), var_4842.astype('int32')) # shape=(2, 16, 12)
output = relay.Tuple([bop_4838,bop_4843,bop_4859,])
output2 = relay.Tuple([bop_4841,bop_4846,bop_4862,])
func_4865 = relay.Function([var_4842,], output)
mod['func_4865'] = func_4865
mod = relay.transform.InferType()(mod)
var_4866 = relay.var("var_4866", dtype = "float64", shape = (2, 16, 12))#candidate|4866|(2, 16, 12)|var|float64
output = func_4865(var_4866)
func_4867 = relay.Function([var_4866], output)
mutated_mod['func_4867'] = func_4867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3754_call = mod.get_global_var('func_3754')
func_3755_call = mutated_mod.get_global_var('func_3755')
call_4935 = func_3754_call()
call_4936 = func_3754_call()
const_4943 = relay.const([[[8.792363,-9.862991,-5.828342,-3.649713,0.725712,8.486744,-8.363638,-7.698628,-9.858026,-9.108835,-4.580021,9.330206],[-5.145963,-2.861021,3.205804,0.838500,-0.577043,-9.541148,-8.457459,-7.242924,3.264853,-4.830126,4.432208,0.863632],[1.412208,8.575601,4.719241,-9.598085,-2.494783,-9.188579,-5.904387,-3.104041,1.511583,-5.120098,3.749061,-8.811160],[-2.708615,-1.336476,5.174223,4.832627,0.889644,-1.554267,0.743206,-4.456160,-2.866366,0.481456,2.275609,4.405346],[9.823763,-2.430223,-1.424496,7.496267,2.554714,-4.305067,0.540330,2.538550,-5.920939,1.652074,-2.974249,2.611475],[-4.229845,-5.148491,-2.309905,1.530358,4.906075,-4.766597,-9.880228,-2.688898,9.300709,-8.509872,-4.712187,-6.340946],[6.409338,-2.607570,6.712646,-9.396300,-1.750619,5.023771,-5.365463,-2.836878,-7.967656,0.586674,-8.872354,3.638738],[-2.615195,-8.703415,9.407861,1.338497,-5.082983,6.332998,2.331462,-2.043884,-6.113152,-5.062551,-8.857950,-9.892293],[3.588962,0.459749,0.528293,-6.499949,-7.300706,-1.551923,4.400189,-8.194575,4.805885,9.279494,-1.624273,-5.842334],[-0.710485,1.640161,-5.153315,6.484595,-3.884119,8.093667,6.505401,5.874208,8.318523,-7.937310,-2.614804,-2.505816],[-5.114596,-3.909848,0.382908,5.700200,-9.444127,-1.810683,-3.108901,-6.569356,-7.916595,-9.679531,1.347842,9.573598],[4.451524,1.440359,4.702330,0.108142,-1.066555,-0.259888,-5.809701,8.999734,-8.204251,8.683058,1.152797,7.328576],[-6.632473,-2.629541,-4.194244,-1.518626,1.767105,0.646867,3.169736,-0.904866,-1.834872,-3.111715,-4.129801,0.886300],[5.848574,0.270639,5.808047,1.640973,-8.377388,4.760356,0.207129,-5.940793,-4.834943,2.912315,-1.149769,3.847648],[-6.722757,5.786856,2.864527,-7.250517,-3.287718,9.399946,-1.388458,5.392214,-5.406440,5.244843,-3.316537,-9.701136],[8.690825,-6.429999,9.592652,4.521285,9.177274,-3.055655,2.864707,-1.122826,-6.484789,8.757352,-7.158671,6.362232]],[[-3.626545,-9.084858,-6.872640,6.351052,2.106022,2.991892,2.015563,-4.477186,-0.505323,0.535757,5.160702,5.464623],[8.052307,2.892659,1.426025,2.976985,7.413890,-1.990253,-8.157805,-9.272312,4.373448,0.388569,-4.025224,-8.453730],[-0.550711,-8.927770,1.029746,-3.501706,8.669813,-6.435195,-5.523297,-5.007358,9.144801,-3.436305,-7.170459,0.560183],[-4.672992,-3.901395,7.580236,2.149019,-7.527275,4.091985,3.588265,-2.688530,8.575562,9.349304,-7.814887,-1.253982],[-4.429136,-6.344180,4.286051,0.142683,-7.585784,-1.152244,-4.056533,5.674988,6.038002,-4.410924,-7.119174,3.821122],[4.932455,-3.087879,-8.106930,5.187706,1.871443,5.959138,-3.181849,-9.177670,-4.001531,-0.247133,2.470836,2.862022],[-9.178536,1.215052,7.035063,6.743651,-5.973056,-9.932674,-7.351380,2.425648,4.087244,-9.505347,8.085447,-6.111618],[7.987452,-8.217347,6.022543,2.308968,5.373065,-9.960841,-8.651503,5.982711,5.240102,9.873444,-4.415828,9.796236],[-2.270891,6.205081,4.713726,8.058284,-9.023716,7.784882,-8.029618,4.419951,2.506542,-4.309801,1.295710,-1.555764],[7.534749,-0.723309,7.839965,-0.120219,9.653787,0.930075,3.370583,4.327849,9.107509,6.521757,-1.217821,0.320670],[0.542334,4.605575,-5.073860,2.722947,1.220860,5.054586,-3.418989,-1.361667,1.307538,-2.664176,9.621011,-7.308650],[-2.650982,-4.619391,-6.410943,-2.982811,2.691857,6.506126,-2.677224,8.228104,-2.080471,-5.830229,-9.722671,2.217137],[-5.309542,0.967478,4.091185,-0.948795,2.565069,-4.468320,6.235509,3.941712,-9.953487,-0.124791,-4.760500,5.337638],[-9.563881,9.686500,-6.366852,-5.716130,-3.768439,-0.848222,3.316872,6.954201,7.472630,-7.542007,-2.599016,7.761487],[-6.361091,2.631410,-8.386568,-5.924725,-7.083430,0.841402,-6.326278,-6.422832,7.723107,-3.711121,3.301484,-9.612305],[-0.271351,6.808916,-0.977985,8.654033,-2.104632,4.763956,3.085379,2.901568,8.821818,6.876406,-3.240145,-9.518892]],[[-7.213691,-8.507250,-8.077076,1.595830,-5.782093,-4.153858,3.401475,6.550566,-6.369330,-1.948799,-5.396039,-7.632713],[9.081880,2.994563,3.530867,8.026341,2.396790,9.494888,-8.231973,-2.168916,-4.814307,-8.148111,-8.319093,0.304729],[-2.267220,8.088115,-3.180827,1.816609,0.073354,2.773884,-4.065387,-5.569810,1.091805,-4.156116,-1.090346,-6.788574],[0.952303,6.938131,-4.221623,-4.259044,-5.560642,-9.060941,1.619600,-8.578858,-2.571757,8.282074,4.511728,-0.838015],[-9.867961,-8.448062,8.409160,9.416102,2.092658,0.672266,5.597787,7.137065,7.491333,-4.027832,3.251573,9.384318],[5.187079,-1.227020,-2.764194,9.837464,8.125938,-6.781243,-6.011131,6.445468,-7.663543,9.308908,2.753717,0.119479],[-6.058854,7.126796,7.021537,-6.095821,-8.090023,1.092966,6.148835,7.133130,-6.776243,-5.055398,2.844954,8.771571],[-7.674060,8.065054,1.210212,-3.475729,0.094909,3.502264,-9.010610,9.327475,-6.739046,6.462764,2.068337,8.205700],[-3.409979,-5.689325,3.609568,1.652269,-9.732767,8.934123,-9.787784,-2.640376,-8.271236,-8.965519,2.647616,6.135550],[-5.524457,3.600606,9.988540,4.739059,-2.299922,3.690047,7.230315,6.933452,4.728956,6.369803,-6.237192,0.604341],[0.605837,0.252985,6.268384,6.695082,-8.261360,8.404820,2.904573,4.316827,-4.129337,6.692827,-6.728446,-9.142356],[-8.239623,8.768562,1.842019,9.892352,-1.613151,0.109276,4.950013,8.852057,5.348024,3.417252,8.828273,7.843966],[0.420656,-0.291118,6.285062,7.351186,-0.548816,1.720184,-8.272392,7.348272,5.828361,-2.233525,6.252521,-6.676348],[4.177440,9.023081,3.817401,-1.610970,7.785670,-7.184670,7.198797,-1.081654,-7.366117,1.341838,-2.374358,8.758514],[7.229102,-5.222288,2.984250,-5.437667,-2.555604,7.004878,-1.215286,-6.308414,-1.809371,-5.752583,3.202697,-9.399776],[-9.243498,-0.379537,-1.490528,4.301344,8.811527,-0.930825,-4.008390,9.302704,-5.802213,-1.169522,8.912112,-3.032474]],[[1.478684,1.960814,-4.065163,-7.971076,-5.967802,3.726059,-3.704137,-3.996950,4.488484,-3.776104,8.886593,-9.438889],[8.380563,-1.202211,-2.316282,-5.219437,-3.621016,-5.916921,3.886164,1.614946,7.410776,-8.797677,9.917391,4.754834],[9.303823,5.771345,-6.382433,-3.728813,-0.757544,-5.194210,-2.959743,5.439327,-3.950578,4.723846,-3.738526,0.274454],[7.034970,-1.660563,9.896256,6.903772,7.632268,3.916630,4.016103,9.402797,1.148909,-6.580387,6.478696,-8.419878],[0.577971,1.876820,-0.573554,2.394681,2.253166,4.980008,7.614495,0.857706,7.386016,-6.579391,9.289005,-3.597782],[9.980733,-3.946072,-8.369607,4.807965,-6.252056,-0.342794,1.397793,-1.993564,9.123587,6.931081,3.990444,5.207365],[-9.366594,1.224272,-1.465205,-5.984483,-9.744299,-4.112730,2.776016,-0.160679,-3.244940,-2.032488,-7.941221,-1.899271],[-4.392892,-1.403485,8.554718,-8.541807,-1.873790,9.856330,-6.943876,-8.072131,-9.374514,8.891970,-5.637554,5.727629],[-5.828206,7.707669,-9.781468,-0.652894,7.631631,-0.027772,6.434912,-7.763908,-8.486964,-2.470209,8.372477,2.888171],[3.760018,8.558309,-6.211727,-9.784617,9.096522,4.113415,-6.760715,-4.916138,2.381246,-5.739796,-3.701196,-0.208891],[-0.886246,8.742648,4.743807,4.162233,4.955593,1.908583,3.505277,7.740714,0.642883,-0.063716,-4.320036,8.696409],[-5.428734,-3.590816,9.443208,6.139483,7.982491,1.263871,-9.276770,5.307647,-4.728010,7.121126,5.610595,-6.235922],[-0.815915,-8.312539,9.763314,-8.212068,9.358298,-6.902680,7.674052,-4.085891,-6.517075,5.920357,-0.301879,4.907274],[4.661217,-9.453691,6.905568,5.690934,4.976946,-0.808520,-9.798565,-6.603243,-1.633262,-0.829273,8.984425,-3.208123],[-3.423038,-2.276652,2.432982,5.320971,-5.180968,0.488144,-4.103035,8.701218,-6.223108,5.645786,-4.635553,-2.600611],[-4.183972,-9.397485,8.158790,-1.946497,7.675698,-5.388207,-3.037139,7.005907,5.393972,-6.994198,-0.545434,7.570136]]], dtype = "float64")#candidate|4943|(4, 16, 12)|const|float64
bop_4944 = relay.floor_divide(call_4935.astype('float64'), const_4943.astype('float64')) # shape=(4, 16, 12)
bop_4947 = relay.floor_divide(call_4936.astype('float64'), const_4943.astype('float64')) # shape=(4, 16, 12)
output = relay.Tuple([bop_4944,])
output2 = relay.Tuple([bop_4947,])
func_4950 = relay.Function([], output)
mod['func_4950'] = func_4950
mod = relay.transform.InferType()(mod)
mutated_mod['func_4950'] = func_4950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4950_call = mutated_mod.get_global_var('func_4950')
call_4951 = func_4950_call()
output = call_4951
func_4952 = relay.Function([], output)
mutated_mod['func_4952'] = func_4952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4816_call = mod.get_global_var('func_4816')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_4961 = relay.TupleGetItem(func_4816_call(), 0)
call_4962 = relay.TupleGetItem(func_4817_call(), 0)
output = call_4961
output2 = call_4962
func_4972 = relay.Function([], output)
mod['func_4972'] = func_4972
mod = relay.transform.InferType()(mod)
mutated_mod['func_4972'] = func_4972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4972_call = mutated_mod.get_global_var('func_4972')
call_4973 = func_4972_call()
output = call_4973
func_4974 = relay.Function([], output)
mutated_mod['func_4974'] = func_4974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_4977 = func_4065_call()
call_4978 = func_4065_call()
func_3477_call = mod.get_global_var('func_3477')
func_3480_call = mutated_mod.get_global_var('func_3480')
const_4990 = relay.const([True,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,False], dtype = "bool")#candidate|4990|(132,)|const|bool
call_4989 = relay.TupleGetItem(func_3477_call(relay.reshape(const_4990.astype('bool'), [3, 11, 4]), relay.reshape(const_4990.astype('bool'), [3, 11, 4]), ), 0)
call_4991 = relay.TupleGetItem(func_3480_call(relay.reshape(const_4990.astype('bool'), [3, 11, 4]), relay.reshape(const_4990.astype('bool'), [3, 11, 4]), ), 0)
func_4236_call = mod.get_global_var('func_4236')
func_4237_call = mutated_mod.get_global_var('func_4237')
call_4996 = relay.TupleGetItem(func_4236_call(), 0)
call_4997 = relay.TupleGetItem(func_4237_call(), 0)
output = relay.Tuple([call_4977,call_4989,const_4990,call_4996,])
output2 = relay.Tuple([call_4978,call_4991,const_4990,call_4997,])
func_5003 = relay.Function([], output)
mod['func_5003'] = func_5003
mod = relay.transform.InferType()(mod)
mutated_mod['func_5003'] = func_5003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5003_call = mutated_mod.get_global_var('func_5003')
call_5004 = func_5003_call()
output = call_5004
func_5005 = relay.Function([], output)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3931_call = mod.get_global_var('func_3931')
func_3932_call = mutated_mod.get_global_var('func_3932')
call_5006 = relay.TupleGetItem(func_3931_call(), 0)
call_5007 = relay.TupleGetItem(func_3932_call(), 0)
output = relay.Tuple([call_5006,])
output2 = relay.Tuple([call_5007,])
func_5011 = relay.Function([], output)
mod['func_5011'] = func_5011
mod = relay.transform.InferType()(mod)
mutated_mod['func_5011'] = func_5011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5011_call = mutated_mod.get_global_var('func_5011')
call_5012 = func_5011_call()
output = call_5012
func_5013 = relay.Function([], output)
mutated_mod['func_5013'] = func_5013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3931_call = mod.get_global_var('func_3931')
func_3932_call = mutated_mod.get_global_var('func_3932')
call_5031 = relay.TupleGetItem(func_3931_call(), 2)
call_5032 = relay.TupleGetItem(func_3932_call(), 2)
output = call_5031
output2 = call_5032
func_5037 = relay.Function([], output)
mod['func_5037'] = func_5037
mod = relay.transform.InferType()(mod)
mutated_mod['func_5037'] = func_5037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5037_call = mutated_mod.get_global_var('func_5037')
call_5038 = func_5037_call()
output = call_5038
func_5039 = relay.Function([], output)
mutated_mod['func_5039'] = func_5039
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5087 = relay.const([[[-3,1,-1,1,-6],[8,3,-6,8,9],[-2,-8,10,-9,8],[5,9,5,3,-2],[7,6,6,4,-3],[7,-9,-4,10,4],[-9,9,2,-8,2],[-5,1,-8,-3,-10],[-3,-2,9,-1,-9],[-7,1,6,10,10]],[[5,-10,7,3,8],[6,10,6,-6,-8],[-2,-5,1,-8,-7],[-2,4,-1,9,10],[-9,3,-4,7,-5],[-7,2,-10,5,-3],[-8,7,8,-2,-3],[-6,-7,-10,-7,-3],[3,-1,-3,-9,1],[-1,6,9,-5,1]],[[-1,8,8,-1,6],[9,-5,6,1,6],[-5,9,4,-5,10],[7,-7,-1,5,-1],[-7,10,-3,4,2],[-8,-7,-10,6,2],[-5,7,-7,6,2],[3,-10,-3,-3,-8],[7,4,2,6,1],[-4,-8,8,-1,7]],[[6,3,7,10,1],[5,-4,3,-2,6],[9,-10,2,4,6],[7,5,7,-3,2],[-5,-5,3,-6,7],[8,3,4,-10,9],[2,-8,-5,9,-2],[-6,-5,7,-9,4],[-5,1,-2,3,5],[-8,7,4,-10,2]],[[3,10,-8,-7,-10],[-2,-3,2,10,-5],[-7,-4,8,-8,2],[-2,-1,4,-9,-6],[-3,-3,3,-2,-1],[10,2,4,-3,-10],[-6,9,-7,7,-5],[7,3,-2,5,9],[-1,-6,2,-2,-4],[-9,9,10,-2,-1]],[[9,-3,-8,-9,1],[1,-9,-4,8,-8],[-2,-5,-7,-4,1],[4,-5,-4,-3,6],[-5,5,-5,-6,7],[-5,1,10,6,-6],[1,-9,-8,7,-8],[-5,-1,6,1,9],[6,-9,-6,4,2],[1,2,10,-4,3]],[[-2,-4,1,1,2],[2,-5,-4,1,-5],[1,-6,7,-3,5],[-5,-6,-3,1,-1],[-3,-2,7,1,7],[10,-3,1,4,-3],[1,7,-8,-6,-4],[5,-3,8,-4,-5],[7,1,4,2,-7],[7,4,7,4,-3]],[[4,8,5,-5,-4],[-2,-8,1,-4,-9],[7,-2,10,2,-5],[-4,3,6,7,6],[4,10,-10,5,3],[6,-10,2,-10,-5],[1,3,3,-1,1],[-2,7,8,-5,3],[6,10,10,7,-8],[4,-4,-3,-6,-7]],[[-2,-5,-1,6,5],[5,-9,-9,-7,-8],[7,-4,8,-7,-10],[3,-3,2,-1,-1],[-6,-10,-9,5,-3],[3,-4,2,2,6],[6,-7,6,-5,6],[3,-10,10,-2,-7],[9,-5,-7,-4,-8],[3,10,3,9,-4]],[[3,8,10,5,2],[-7,2,-3,8,-7],[8,10,-2,-7,-10],[4,8,-7,10,2],[-5,-3,8,-7,-3],[-3,-6,2,-6,7],[-8,9,4,6,-1],[-6,-5,5,-2,10],[-7,-8,-5,-1,9],[-7,10,5,-4,-8]],[[7,-9,-10,6,7],[9,10,-10,-10,-6],[-10,8,-6,6,1],[-5,5,-1,-10,-8],[2,2,-9,-6,5],[9,-2,-7,-9,-10],[-6,-9,1,-9,6],[8,7,1,-6,6],[-1,-7,2,-3,9],[-1,10,-10,-1,-2]]], dtype = "uint16")#candidate|5087|(11, 10, 5)|const|uint16
var_5088 = relay.var("var_5088", dtype = "uint16", shape = (11, 10, 5))#candidate|5088|(11, 10, 5)|var|uint16
bop_5089 = relay.minimum(const_5087.astype('uint16'), relay.reshape(var_5088.astype('uint16'), relay.shape_of(const_5087))) # shape=(11, 10, 5)
func_4665_call = mod.get_global_var('func_4665')
func_4669_call = mutated_mod.get_global_var('func_4669')
const_5111 = relay.const(4, dtype = "int32")#candidate|5111|()|const|int32
const_5112 = relay.const([8,-2,8,10,-10,-9,-7,-7,4,10,-5,6,6,-7,3,-4], dtype = "int32")#candidate|5112|(16,)|const|int32
const_5113 = relay.const([3,-2,1,2,-10,-10,-7,-8,-6,-10,1,8,-6,4,-1,8,8,-6,1,-8,-6,7,3,-10,8,-9,-8,1,-9,6,1,3,3,8,-7,4,-5,9,-6,-6,9,-5,4,10,10,1,-7,3,-6,-5,-7,8,-2,7,4,-4,9,-9,-5,6,5,9,4,4,-2,10,-8,1,-5,-7,4,-9,1,7,7,3,1,-5,-3,4,8,5,4,7,4,6,7,2,5,6,-1,5,-1,6,9,-9,5,4,-10,7,-7,4,10,4,3,7,-8,-7,-1,3,2,9,-6,7,6,-1,-6,-6,1,10,-9,10,-7,8,-10,10,-3,-1,3,-4,-1,1,2,-2,7,-8,8,8,7,-7,-7,10,5,-6,9,-7,-6,8,6,-10,-3,-1,-8,-10,5,3,4,9,-7,10,-6,8,5,-10,5,6,-8,-1,-8,-5,-6,-2,-2,-10,9,-6,-8,6,10,6,6,3,1,-4,5,-1,-6,3,-5,8,4,-8,6,-6,2,2,-6,-1,1,5,3,-8,8,-8,4,-10,7,1,-3,-10,10,2,8,-4,-9,4,-4,2,4,8,3,6,-5,-5,-7,3,8,-5,9,7,8,-1,-6,6,-2,-7,2,6,4,8,-8,-9,6,-5,1,4,-5,-4,7,-2,4,-3,5,-6,1,-8,-6,-5,9,9,4,-1,-10,4,5,-6,5,7,-1,7,-8,-2,4,-7,9,-4,1,6,10,-7,-3,-4,-4,-8,-6,8,-2,6,-10,-8,1,6,7,1,1,2,3,-4,-9,-4,9,-6,-6,6,7,7,-8,-8,-6,-4,-9,4,-4,-10,1,5,10,1,-6,-2,-5,-1,-3,-9,9,7,-2,1,9,9,7,-10,-7,-3,-1,6,-5,8,5,8,-1,-2,-7,-6,-4,8,1,8,-10,9,-5,7,1,7,-3,9,-1,-6,4,5,-9,7,1,-5,6,4,10,-3,-7,4,5,-5,-4,5,2,-4,-2,-8,10,-6,9,10,-1,8,-3,-9,8,5,4,-10,1,-7,8,-6,9,5,-9,-5,7,-8,8,9,1,9,-5,2,-4,-8,4,-3,5,-1,2,-7,-1,-9,4,6,1,3,-4,-1,3,5,5,-10,-5,-7,9,5,-10,-9,-2,2,-10,-1,-9,7,4,-1,9,1,4,-10,-3,3,1,8,10,-9,4,-7,2,4,7,7,7,-1,-6,-6,-7,-2,2,2,-1,-2,-10,-7,4,-10,-9,8,-3,-8,1,-9,2,7,-5,-6,1,-1,-9,-3,4,-8,8,-10,7,3,-10,6,-6,-8,3,7,-3,5,9,-7,-1,5,-2,-2,2,5,-8,6,6,-4,7,5,10,-4,-9,-3,7,-10,2,6,-7,-6,5,-10,-5,2,-6,1,-8,-6,-7,9,-6,1,-3,1,-9,7,-10,-5,-9,-6,5,-10,4,3,-4,3,1,1,-2,-6,-1,7,7,-6,-10,-1,10,1,9,3,-6,7,-2,-3,-1,5,9,-3,3,-3,2,9,9,-5,-4,4,-7,-9,-7,3,-9,-10,-10,7,2,8,7,-7,-9,-3,-3,3,7,-10,4,2,2,6,-7,-7,4,-5,5,5,4,-7,6,8,-3,10,2,5,-6,-9,-3,-3,2,-7,-10,2,-2,-1,-10,4,9,-3,5,-6,10,-5,-2,9,6,4,8,-8,-5,-1,-9,-10,-10,-9,2,8,-3,-4,-1,10,9,-3,-7,9,1,-9,-6,1,4,3,-7,10,5,-4,9,6,-7,-4,10,-8,-5,3,8,1,4,-9,-6,1,-3,10,1,9,-4,4,-8,5,1,-9,4,10,4,8,-6,-3,-6,-10,-8,-4,-2,6,-1,5,3,-9,-4,2,8,-7,-1,-5,1,3,-4,4,5,8,-3,8,-9,-2,7,8,-3,10,-3,-10,-10,-8,10,-10,3,9,-3,3,-3,4,6,5,-6,5,10,8,8,2,-7,3,4,-6,-10,-10,2,4,5,1,-2,1,-4,2,4,-2,-8,-10,8,1,5,-2,5,-8,3,10,-8,9,-1,-5,-5,-5,-3,-7,-1,8,10,-4,6,-3,-1,-6,7,8,4,-2,-2,4,-2,-6,-9,-8,6,4,-3,-1,-4,-1,10,-9,-5,-5,-8,10,-10,-2,1,-10,3,9,2,8,4,-9,1,1,8,2,-5,-5,-1,5,-10,-10,-8,-7,-6,-8,-6,-7,4,-2,-5,8,9,6,2,-3,-4,-3,2,5,-7,-10,-2,2,6,8,-10,-3,10,10,-1,-4,6,9,9,5,1,-1,-4,-10,-8,-4,-7,-9,6,-8,-4,4,-10,-7,-1,7,8,4,2,2,4,-10,3,-9,1,-8,2,5,6,-2,-4,8,6,6,8,10,4,-5,9,7,-1,-7,10,-4,-5,3,5,3,-5,-3,-7,-7,1,9,5,-2,-3,-1,2,-9,-4,-8,6,-4,10,-4,-8,-9,4,-1,-6,-7,-3,-3,-4,3,9,-8,-3,-7,-8,2,-3,-7,3,-6,-2,-9,1,-3,8,-4,-7,1,-5,-5,-9,-10,-9,9,-4,10,-8,-4,-3,-4,3,8,-2,-10,-7,-1,3,9,6,-6,3,-10,-7,7,-1,2,3,-6,9,2,-2,-2,-4,-6,9,3,-8,-10,-7,-8,2,-4,10,-9,-5,-4,-4,9,9,8,-7,-9,-4,-3,-10,1,1,-6,-7,-1,-6,9,-3,-7,6,-10,8,2,-8,7,6,-9,-5,-7,2,3,4,9,2,10,3,5,-9,5,1,-7,-10,-1,5,-5,7,4,-2,7,-9,4,-8,5,-5,9,2,3,6,7,4,-6,-10,2,-3,7,-7,6,-1,7,3,4,-3,7,2,1,-6,9,-9,-1,10,-6,1,6,-5,10,8,3,-2,1,6,4,-8,9,3,-10,8,-4,10,-2,3,-4,7,-2,-10,5,-2,-8,-1,8,7,-9,-3,-3,-10,-7,7,4,9,-3,9,-6,8,-3,-3,2,-10,4,-1,6,1,4,7,2,-4,-8,4,5,-8,-10,9,8,1,3,-8,-3,6,-7,-9,-10,5,-7,-2,10,9,10,1,9,1,-4,-5,-9,8,6,6,-10,6,9,-8,-7,-8,8,4,-1,-1,5,4,9,-2,7,10,7,5,-3,5,-1,-8,2,6,8,-8,5,7,-2,-6,-8,-6,-4,3,3,1,10,-3,-1,6,6,2,-4,3,9,4,-8,2,-3,-1,-2,-10,-10,-5,-2,10,-2,9,-1,-3,2,8,10,-3,-3,-9,7,-7,4,7,10,-4,-10,-10,5,-1,-1,-8,7,3,-6,-6,6,9,5,4,5,-10,2,6,-5,4,-4,-8,6,2,6,6,-1,-1,-2,4,4,-2,5,-4,5,-6,-2,9,-8,1,-8,5,1,6,3,-1,-3,3,-1,10,-5,-4,-3,-5,3,-4,-3,10,4,-5,7,4,-9,10,4,-7,-6,-5,1,7,-8,-4,-9,2,2,2,3,9,-5,-3,9,-7,10,-4,-4,4,-4,-10,3,-8,-1,-4,6,-8,2,-9,3,6,8,4,-10,1,-9,7,-4,8,-5,10,4,4,1,-7,-9,-8,2,8,-2,-8,-1,4,-1,-3,-3,-2,10,4,-9,-6,5,-5,5,3,-2,8,-7,1,5,8,6,6,4,-7,-3,3,-6,7,10,9,-2,-5,9,10,-9,-1,-6,1,7,7,1,-9,6,8,-7,-10,-4,-9,3,9,6,9,7,6,-7,3,10,-7,-8,-6,4,4,-3,10,-10,1,9,2,9,-9,10,6,-3,-8,-10,4,2,-9,-10,-2,10,-10,3,-4,-9,-9,-4,-1,-8,8,3,1,1,-10,-10,3,10,-10,5,-7,8,5,1,-1,-5,8,-10,-3,8,1,-10,10,8,-2,8,9,-5,10,-8,-8,7,-1,4,9,1,-2,6,10,-3,-9,4,-7,-10,-7,-5,3,1,-8,-2,-7,-8,-4,10,-8,-10,4,-3,-5,7,3,-6,-3,-2,2,-9,-7,-9,-9,6,-3,-4,-2,-7,2,-8,-5,3,3,-8,-1,5,2,-8,-4,8,-5,-4,9,-2,7,-8,-6,10,-8,4,5,-7,5,10,4,-7,-2,5,-6,4,9,-8,5,-4,-4,4,8,-8,1,-4,-6,5,4,1,9,5,-7,4,-9,-9,-7,-4,-6,-9,8,3,4,4,-8,-10,-10,6,6,-1,8,-1,3,-9,-8,8,-2,2,1,-6,10,-7,-10,8,-2,-2,1,3,-9,-4,3,-2,3,2,1,4,-3,4,3,-9,2,-3,-7,6,-1,10,2,-10,10,-10,2,-4,4,-10,9,10,-5,4,-1,5,-9,-7,-10,10,3,-3,-4,1,5,3,-5,5,7,-9,8,-10,10,1,-6,-10,-1,-3,-9,10,-10,-8,-7,-2,-2,1,-6,10,10,-5,-2,-7,-7,-5,7,-2,10,1,-5,-2,-5,-9,-5,6,-2,-6,-8,-7,-3,5,2,8,-7,1,-3,9,5,-10,8,-10,9,-7,8,5,-10,1,6,-4,-10,5,8,-3,1,-7,-1,3,2,-10,6,10,-6,8,2,-4,-8,8,-2,-1,4,4,-5,-7,7,-7,-3,-10,10,10,1,6,3,-5,7,-8,4,-8,6,-5,-3,5,9,-2,3,-5,-5,4,-7,1,-5,-4,-10,9,8,-9,6,4,1,-8,-7,9,-4,-10,-3,4,1,-8,-2,6,-1,-10,1,4,-1,6,-5,-2,1,-9,-2,-2,-3,-3,-5,3,-4,-5,-9,6,-1,-10,9,-5,-3,-5,-7,9,5,-5,2,8,-2,-10,-2,-3,-9,9,-6,-10,-1,5,10,-10,-7,-7,2,5,-8,7,1,3,2,10,8,-6,-7,-7,-4,-3,-1,-9,8,8,-9,6,-6,2,4,-5,-3,1,3,-8,4,-9,-4,9,4,-9,-4,-5,-5,8,8,-2,-6,3,-1,-8,4,10,-8,1,-8,-7,5,-3,-8,10,6,-8,-4,-4,4,10,9,-8,-10,-9,7,-1,7,-5,-4,-2,6,5,-3,-3,-10,8,4,6,-5,2,-2,-6,-6,-5,-5,-3,9,1,6,2,8,7,4,-3,2,-10,-8,-7,-7,-5,1,1,5,-3,-5,-8,3,-4,3,-5,-5,-1,-1,-7,1,9,9,2,-2,-6,-10,-2,2,-9,3,9,-8,1,7,8,-2,-9,-8,7,-8,9,-9,-2,-6,5,-6,7,7,5,-10,1,9,4,-5,-7,6,-2,8,-6,-4,4,-7,5,-3,-7,5,-4,2,-4,-9,-9,-9,-9,-2,1,-8,-9,8,-1,6,1,-8,8,4,-6,-2,-9,-3,-10,-3,-4,-6,6,-8,-2,-6,6,9,-3,-5,-10,-3,10,7,-2,10,3,-10,-7,-7,3,-3,7,-4,-7,-1,-5,-5,-2,-4,-3,2,-10,5,1,6,5,-4,1,5,6,-6,10,-8,2,-1,-8,-2,-7,6,9,3,-1,-6,-6,4,-7,-5,-10,1,4,-8,7,1,-7,2,-8,1,6,6,10,-4,-8,6,-1,-1,-1,7,9,9,-4,-3,10,6,3,7,-9,10,9,7,-3,5,7,9,2,3,1,-10,2,-6,-7,-8,-6,-6,-4,-7,1,-10,-5,-4,9,3,-3,-2,9,10,2,2,8,-5,3,9,5,2,-8,-9,6,-6,6,-4,7,1,-5,9,3,4,-7,9,2,-6,-10,9,8,4,3,-7,5,-2,-2,-2,7,10,10,-10,9,-5,10,4,9,-1,8,-5,-7,1,-9,4,-10,-10,2,-5,5,-1,-3,-4,-2,7,3,3,10,-9,7,-5,-6,7,4,-10,-1,-7,-5,-9,5,9,9,-8,-5,7,8,9,6,3,-10,-10,-5,7,7,-9,1,10,7,8,3,-4,-7,9,2,3,7,5,10,4,-10,-10,10,-1,-8,-8,6,3,8,-5,4,-4,-1,2,1,-9,-8,3,10,4,-5,-8,6,-4,-3,-7,-7,7,8,-9,5,3,8,-1,10,-4,-8,7,6,-10,-10,-6,-6,5,4,6,-2,5,2,8,-9,-10,9,-1,-1,-3,-8,8,-4,9,-6,7,3,-2,8,-1,-6,-4,-10,-9,-5,-4,1,-8,-6,3,1,4,2,1,5,6,2,-4,4,3,-6,-4,-10,2,-1,-10,4,8,-7,7,10,-1,3,3,9,-9,-5,-1,-7,-3,-7,3,-6,-9,-10,4,2,-2,-3,2,-3,8,-4,-4,-2,-1,1,-10,7,-7,8,8,-7,4,-5,3,-7,-9,1,-4,-2,2,1,8,5,-4,9,2,-2,7,1,7,-2,-1,-10,6,9,5,1,-7,-1,9,5,-7,8,-4,5,-8,-10,7,-1,-3,-2,2,6,-10,-2,-8,-2,4,8,-8,-1,-7,3,-4,9,-9,-8,4,2,-2,7,-1,-2,9,-3,2,-5,-9,-6,-5,10,8,6,-3,-10,-3,2,5,9,5,-3,9,9,6,-1,-2,6,-1,4,3,9,-10,-1,7,9,5,-1,9,4,-7,8,-10,-9,-7,6,-6,7,8,-1,10,-6,-5,9,9,9,10,5,-2,-2,-9,10,-3,-3,4,5,7,7,2,-6,-1,9,4,3,10,6,4,-7,4,-10], dtype = "uint32")#candidate|5113|(2496,)|const|uint32
call_5110 = relay.TupleGetItem(func_4665_call(relay.reshape(const_5111.astype('int32'), []), relay.reshape(const_5112.astype('int32'), [16,]), relay.reshape(const_5113.astype('uint32'), [2496,]), ), 8)
call_5114 = relay.TupleGetItem(func_4669_call(relay.reshape(const_5111.astype('int32'), []), relay.reshape(const_5112.astype('int32'), [16,]), relay.reshape(const_5113.astype('uint32'), [2496,]), ), 8)
output = relay.Tuple([bop_5089,call_5110,const_5111,const_5112,const_5113,])
output2 = relay.Tuple([bop_5089,call_5114,const_5111,const_5112,const_5113,])
func_5133 = relay.Function([var_5088,], output)
mod['func_5133'] = func_5133
mod = relay.transform.InferType()(mod)
mutated_mod['func_5133'] = func_5133
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5134 = relay.var("var_5134", dtype = "uint16", shape = (11, 10, 5))#candidate|5134|(11, 10, 5)|var|uint16
func_5133_call = mutated_mod.get_global_var('func_5133')
call_5135 = func_5133_call(var_5134)
output = call_5135
func_5136 = relay.Function([var_5134], output)
mutated_mod['func_5136'] = func_5136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5011_call = mod.get_global_var('func_5011')
func_5013_call = mutated_mod.get_global_var('func_5013')
call_5230 = relay.TupleGetItem(func_5011_call(), 0)
call_5231 = relay.TupleGetItem(func_5013_call(), 0)
func_4164_call = mod.get_global_var('func_4164')
func_4168_call = mutated_mod.get_global_var('func_4168')
var_5245 = relay.var("var_5245", dtype = "int16", shape = (512,))#candidate|5245|(512,)|var|int16
call_5244 = relay.TupleGetItem(func_4164_call(relay.reshape(var_5245.astype('int16'), [16, 2, 16]), relay.reshape(var_5245.astype('int16'), [16, 2, 16]), relay.reshape(var_5245.astype('float32'), [16, 2, 16]), ), 2)
call_5246 = relay.TupleGetItem(func_4168_call(relay.reshape(var_5245.astype('int16'), [16, 2, 16]), relay.reshape(var_5245.astype('int16'), [16, 2, 16]), relay.reshape(var_5245.astype('float32'), [16, 2, 16]), ), 2)
func_786_call = mod.get_global_var('func_786')
func_790_call = mutated_mod.get_global_var('func_790')
var_5249 = relay.var("var_5249", dtype = "int32", shape = ())#candidate|5249|()|var|int32
var_5250 = relay.var("var_5250", dtype = "int32", shape = (16,))#candidate|5250|(16,)|var|int32
call_5248 = func_786_call(relay.reshape(var_5249.astype('int32'), []), relay.reshape(var_5250.astype('int32'), [2, 8, 1]), )
call_5251 = func_786_call(relay.reshape(var_5249.astype('int32'), []), relay.reshape(var_5250.astype('int32'), [2, 8, 1]), )
output = relay.Tuple([call_5230,call_5244,var_5245,call_5248,var_5249,var_5250,])
output2 = relay.Tuple([call_5231,call_5246,var_5245,call_5251,var_5249,var_5250,])
func_5252 = relay.Function([var_5245,var_5249,var_5250,], output)
mod['func_5252'] = func_5252
mod = relay.transform.InferType()(mod)
mutated_mod['func_5252'] = func_5252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5252_call = mutated_mod.get_global_var('func_5252')
var_5254 = relay.var("var_5254", dtype = "int16", shape = (512,))#candidate|5254|(512,)|var|int16
var_5255 = relay.var("var_5255", dtype = "int32", shape = ())#candidate|5255|()|var|int32
var_5256 = relay.var("var_5256", dtype = "int32", shape = (16,))#candidate|5256|(16,)|var|int32
call_5253 = func_5252_call(var_5254,var_5255,var_5256,)
output = call_5253
func_5257 = relay.Function([var_5254,var_5255,var_5256,], output)
mutated_mod['func_5257'] = func_5257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4950_call = mod.get_global_var('func_4950')
func_4952_call = mutated_mod.get_global_var('func_4952')
call_5259 = relay.TupleGetItem(func_4950_call(), 0)
call_5260 = relay.TupleGetItem(func_4952_call(), 0)
func_4791_call = mod.get_global_var('func_4791')
func_4795_call = mutated_mod.get_global_var('func_4795')
const_5264 = relay.const([-8.124989,-2.382649,8.435270,-1.481689,-4.359654,0.227438,0.472041,-8.155770,0.736711,-9.766968,-8.716748,3.476953,-7.908696,1.702269,-0.788690,8.549989,-7.118108,-4.615058,6.945880,-6.543058,-7.988411,7.181056,7.843443,0.542881,-7.299056,-4.813217,1.250542,0.035420,7.735895,4.491262,2.058836,-6.268595,2.137136,1.561517,7.091739,-0.868212,-3.034352,-1.068558,1.134398,-9.826598,8.749029,-0.040170,-1.108659,-6.383737,4.476554,5.875854,7.050800,-7.011678,0.650547,8.335397,2.391775,-4.187300,-4.294786,6.977808,7.227126,3.877313,8.405292,5.615915,9.560764,3.021229,8.259429,3.821579,-2.153939,3.216893,-8.947226,-1.163768,-1.226816,4.595817,6.247329,4.554786,-4.774566,-5.738016,-0.301700,4.150686,8.812062,-0.004920,8.066649,0.404521,7.343001,3.792606,-8.303186,3.142678,8.142437,8.804223,-2.803885,3.597023,9.022898,-7.109233,9.587767,7.782555,-4.402747,4.619787,8.059228,9.144389,-2.327740,-5.233077,-8.153121,6.864242,-4.085434,0.654423,1.941109,8.442240,-8.632641,0.251881,8.373799,-0.117372,-6.967054,-4.958738,8.832358,8.626523,-8.948417,-3.979867,3.837035,-1.118309,-1.949669,-3.383791,-7.008831,-2.003591,4.462054,-4.746529,-0.641168,-2.888965,7.902319,-2.761645,-4.245702,-3.346766,-3.326381,-4.962495,-8.449782,9.110757,-0.941916,8.717221,-1.589938,8.029760,2.842716,-4.243604,-7.281490,-6.899838,2.923251,-8.345737,-1.704462,9.323443,8.527925,9.211833,-6.997126,-0.210752,-9.289079,-5.337115,5.455044,2.583876,9.806970,-0.215203,-4.595927,7.236851,-7.195085,-5.113306,-1.555865,9.074072,6.786344,-0.057794,8.994801,-0.768515,-3.413940,-1.245097,-3.644593,-1.780574,-7.173013,8.988164,6.546746,-6.013346,7.663731,7.703937,-7.780456,0.843319,9.614916,-5.116181,4.366333,-9.520012,9.235345,4.218200,-9.121853,0.087178,0.753206,-0.927196,-3.662995,-7.616453,8.511508,2.137225,-5.708974,3.039087,-1.254298,-1.444788,-9.078020,8.973032,-7.002264,0.328719,-4.675369,0.687196,2.192712,0.421367,-3.962427,1.564761,4.779412,-3.333062,-5.892514,1.032981,8.617213,-0.888238,-2.454949,7.460730,-9.619943,-4.199905,9.365126,-7.718738,4.963572,-7.242979,0.300638,4.148237,2.716767,-7.386334,5.840932,-6.766997,-4.290511,-8.456234,6.404781,6.117646,-6.041490,-8.657413,2.185737,-2.525782,-9.716322,-4.844379,0.571224,-4.201877,8.293008,-7.147924,-9.283732,9.106464,9.114213,-8.498148,5.143120,-5.659854,6.197204,-3.347027,-9.354749,3.526537,7.735154,-6.458492,4.407092,0.721083,-5.161666,4.895397,6.962691,1.423764,-6.970888,4.865917,4.362313,4.374179,-2.453266,8.588032,-7.455431,-9.244419,-3.423097,-4.710450,5.441099,9.273962,4.892635,2.229807,3.869420,5.575216,-8.078494,-1.802748,1.024360,-5.148471,4.259762,-6.820731,-3.595340,5.794981,7.861606,-5.338459,-5.587939,-2.020219,-8.575511,-4.255989,-9.141578,3.890490,-4.875957,-3.258440,2.106580,3.722300,-8.317455,-0.043020,-1.456762,-1.792393,-4.731242,7.335017,-8.911693,-3.637349,1.270781,-3.479150,7.276614,-2.316278,4.276174,3.211339,4.819971,6.602192,-1.620930,-9.474396,-9.451876,-9.723315,5.008970,7.298595,-3.322136,-6.943600,-5.581526,0.636760,-2.705227,5.516728,2.064194,-0.118123,0.927944,-0.975258,0.525859,2.844277,3.716032,-8.482354,7.541382,-2.813072,-7.639475,4.297836,-2.783443,-7.449069,-3.617990,-5.525732,-9.359763,-7.885906,5.880339,8.489242,7.858559,-4.943740,-4.423086,4.568839,-2.645859,0.257610,-8.819811,6.427609,-9.771142,2.698405,5.539927,-6.401401,-5.797013,3.074177,5.156158,-4.325891,1.959731,-9.836563,-0.121152,1.565025,0.984338,7.258248,8.647887,-6.549435,-3.700978,-2.328673,-7.827798,5.751344,2.699166,-1.344550,3.253187,8.639306,4.053201,-3.853261,5.757419,-1.607832,0.460595,-1.635006,-5.854659,-5.319599,-2.766600,-6.149721,8.100827,5.982317,-5.949401,4.365396,6.335205,3.805213,-2.533453,-6.401691,8.766555,3.714933,-6.418632,-4.264696,-0.416437,5.482443,9.928766,7.081632,8.534782,-7.778090,-4.294767,4.727025,-5.911484,-5.504300,-3.791981,9.076465,8.700625,-6.427944,-0.668421,-1.240880,5.283611,-5.213566,4.644562,4.983487,-1.264757,8.910652,-3.980000,-6.938374,7.386297,5.130612,1.247036,0.197593,5.113031,-0.611600,-2.375450,9.056356,-7.176801,6.204629,2.902323,-3.565986,-5.613857,9.016489,-7.009464,6.530001,-8.297833,-9.855140,7.476523,3.520387,2.489412,7.109201,-6.901522,-8.647756,-4.764272,4.773888,-6.573613,0.801985,9.450322,0.338583,0.035090,4.188952,-9.248677,9.813483,7.169168,-2.877909,8.729941,8.778018,-4.341750,-7.205746,7.846783,0.109045,-1.959919,-5.549144,5.439821,9.877501,-7.665337,-5.269438,-7.139059,3.549513,-8.601809,2.663232,4.055361,-2.778692,-7.133501,-7.789207,-6.297424,8.143429,-1.086750,-5.664713,-1.855492,-4.105904,-8.877409,9.704137,0.216165,-3.949456,-4.364783,5.202811,-4.142853,-3.792957,-4.579804,-1.196042,-0.331715,0.698478,2.798492,-1.137795,-5.400766,9.173262,8.519547,6.849241,4.937780,7.153665,9.226079,7.799053,-2.030602,-0.432388,-1.949062,6.516151,6.263736,4.973925,-2.587890,-2.579888,2.465308,0.288361,-0.319847,9.817101,-7.474020,7.373071,5.308246,-3.491848,-9.602558,-9.466360,1.365513,9.663630,5.229421,-3.366390,-0.795813,-2.763830,-1.154772,9.544304,-1.360983,-6.215155,2.356905,3.539061,-5.168025,-7.360230,-9.060024,7.436386,-7.516663,-4.218441,3.730290,5.854183,4.767307,0.577425,1.505171,-4.795583,9.433334,-8.441346,1.091095,8.671133,8.635857,-9.133190,7.944215,-4.391675,1.062922,7.067688,7.000982,-4.684120,-3.820267,-0.737238,-4.943322,9.200436,5.097703,-5.456715,4.062023,-2.824090,2.997529,5.080214,-1.088101,-4.054868,-5.374351,-2.142949,-5.233733,5.238539,4.971915,-9.366343,-3.971264,5.954754,-2.498540,-0.360788,-5.227988,-3.367563,-8.044629,-5.146883,4.700517,-1.510199,-9.219410,7.748898,5.230787,6.463221,-2.050666,1.338375,9.120428,-5.733076,-7.327428,-0.995320,1.519541,7.891346,-7.918494,-5.926341,-2.814021,1.857643,-8.536226,-9.674190,5.540382,-2.795603,1.111835,3.188841,-0.815426,-2.900341,-5.540399,9.827050,-6.823193,6.439396,-0.817978,-6.719068,-6.106143,3.560416,8.245955,0.880280,8.812578,-4.578506,5.539065,-8.218604,-4.370960,-6.989654,3.529304,-1.339285,-3.782260,-8.020075,-4.323299,-5.076293,-9.151712,9.534508,5.413819,1.959050,-4.307905,2.077756,2.208886,1.491243,2.165488,-7.859748,-7.607017,-5.690947,1.353529,1.194244,7.304283,-6.103347,-3.378420,6.560293,-3.701323,-5.122959,2.284274,-3.789249,9.782752,-7.230035,-9.971934,0.430505,2.366024,5.479509,-5.888340,-3.529692,-0.293199,-4.485973,-8.738023,-9.902866,-2.191282,5.213813,1.569839,-4.240796,-3.315852,7.964844,8.820077,1.894277,-6.355584,2.278980,7.855633,-1.467912,7.256122,-3.293881,1.841266,-9.481956,-1.201688,4.566572,-5.871163,-9.953014,-9.247284,3.866261,8.472658,-1.077429,5.903721,-5.023460,-4.113811,9.992232,8.592177,9.380365,-1.951286,-0.130561,-7.127091,-2.920462,5.242874,7.277025,-5.658996,-3.248528,5.946334,5.836031,-8.221520,6.360510,8.498636,-6.142637,2.860020,1.327204,-0.640640,-1.345821,7.808663,2.478257,1.428040,-6.233657,1.418454,5.563274,2.009764,4.688282,6.144417,-1.201812,4.135882,5.136434,5.956897,5.233023,5.652484,-3.688450,-0.097566,3.290957,-0.870924,-9.897018,-8.132554,-9.610543,-1.063718,-6.639903,-8.806083,-1.342304,2.580819,-2.339687,-9.609685,-8.512997,0.767401,-3.669463,-5.233122,-9.590461,8.734383,-6.710473,-7.590820,-3.113337,8.117630,-8.009303,5.255541,8.306587,0.252197,2.875134,1.772350,5.915395,-7.696583,5.086727,0.226342,6.383878,-8.734446,4.792479,-0.869193,6.887823,-0.100526,-4.555270,4.419397,-0.361853,6.193629,-8.770513,-4.818876,-4.616615,-7.973414,8.043693,2.621188,-6.775911,5.229839,-6.647587,1.583630,0.172030,-5.256502,-5.328858,2.050661,-3.047453,-4.883275,-5.367188,-7.926598,-3.735723,-7.312416,-4.003713,-1.130563,4.469375,-7.285094,-4.212750,4.732944,6.172300,2.673434,9.533086,6.845535,8.768309,7.784966,-5.631361,-5.564538,-2.299696,-3.401568,-7.514239,8.618144,-7.365607,-5.528212,-4.604133,-9.619074,7.275786,6.683607,1.211142,-9.871059,-7.711172,-7.140583,3.960100,2.764414,0.636220,-0.432230,1.188226,5.629354,-2.258339,-9.454529,7.400985,-8.880544,-6.394470,-7.663555,-5.549980,-6.072311,-4.833922,0.650761,-3.911093,2.622717,4.377761,9.325810,4.069096,-2.871179,-9.555592,-3.172071,-1.169168,-9.684080,-9.083018,-4.627368,0.599507,-1.049948,4.351606,6.406221,-4.952747,9.926003,0.804410,-7.580725,0.380269,-7.985968,5.993976,2.318580,5.129964,-0.839354,-2.728230,4.217701,-0.804647,8.108148,6.232311,6.604774,5.625691,9.894971,8.266294,-2.674362,7.899085,9.394526,4.251194,-6.915813,-6.332937,2.396893,2.818765,1.391855,-0.903128,2.830769,3.267664,1.389988,5.928189,9.076730,1.897210,2.749041,-3.530766,7.090783,8.144061,4.472431,5.242135,7.094787,6.990741,-1.914552,1.045768,5.939204,-5.953540,-3.331008,-5.294121,-3.867304,3.213325,-8.691148,-9.167938,7.012908,9.635749,-6.710691,9.119475,0.420807,-2.573244,-7.975981,1.989815,-2.118713,1.737105,2.451173,0.041431,6.524505,6.638405,-3.144172,4.853988,1.959868,-1.333762,0.255124,7.253487,-1.321499,-0.906195,-2.915355,8.618564,7.381000,7.519475,-9.807308,4.217632,4.900184,0.506981,-8.784905,3.281553,7.698095,5.328271,-9.706225,8.323278,-4.493829,1.496882,6.399390,-6.002336,8.054918,1.620079,-1.923653,3.183827,1.116664,9.031666,-6.973133,2.920097,2.639881,-6.108257,-3.413011,-3.693553,-9.511292,4.100829,-8.547277,-5.696618,3.012440,4.908006,-7.214698,6.610614,3.242147,-3.378806,3.655335,4.245310,-1.876942,-2.938035,1.797521,-1.072193,5.656502,9.447267,2.718768,0.432661,3.913897,-5.955274,-9.151884,3.038203,-8.201047,3.607067,-8.685643,-7.475682,-3.274475,3.358617,-6.817707,1.458877,4.883478,0.763051,2.071139,1.530119,-3.200268,-8.434894,9.886832,-0.363947,7.937177,8.344130,1.881268,6.798050,5.327801,8.759366,-9.074876,7.450593,-9.490086,-5.348464,3.620428,-8.153343,9.200292,-9.994569,9.691170,-0.108876,-7.269920,-8.745429,-1.978030,-0.340484,-5.047423,0.119864,-2.160407,-4.779414,0.448143,-1.336041,-0.876937,-1.839143,-7.725407,-8.446281,-1.615958,-6.262774,-7.551877,-4.445013,-8.939433,-2.458750,-3.779530,4.398388,-6.006524,3.982895,-1.956564,1.699316,7.976359,-9.750988,-4.939441,2.865787,-5.469184,-8.211192,-8.896989,6.414276,6.769774,1.924603,7.698919,-5.279165,-5.646126,5.857731,-3.869393,2.790168,3.260984,5.308604,-6.780333,-8.751256,-4.855942,0.742544,1.521106,-4.737091,8.187629,-8.910683,-6.428227,-6.522347,9.848799,-6.153309,-2.480975,7.681370,1.417453,-7.104096,8.421444,-1.237809,0.235662,-9.186101,-1.014563,0.860827,-6.544554,-2.675752,-1.871364,9.014668,4.136779,8.300590,0.898328,3.659354,4.294437,-0.386041,-1.506011,0.404992,-3.976595,-8.044642,-8.063525,-9.303558,8.212109,2.949450,-8.463395,7.874644,-2.448400,4.536426,9.827346,7.222178,-1.071958,9.085478,-3.119333,-7.066517,-1.965272,-5.765185,-7.091069,9.880708,1.039440,-6.300662,8.497132,0.788805,-4.200465,0.229835,9.494588,9.036025,-7.429248,-6.502337,6.806123,-5.373766,1.051167,-1.094956,6.277805,-3.835023,-4.541569,-9.763990,-4.426223,-7.406927,3.338982,9.993773,-7.268001,-4.989729,9.570353,6.502881,-7.643327,6.883058,-1.457000,5.886507,4.310885,8.900150,-6.959638,-3.324176,6.317877,-6.076754,-1.472532,-0.685784,-3.489178,-7.273231,0.767523,-1.281067,5.752286,-6.099508,8.311484,8.359887,0.892777,-5.852674,7.087774,-3.418855,6.944088,1.254653,-9.080610,-1.563667,-5.650638,6.976406,9.229864,5.860620,8.501365,-6.292342,-5.049002,1.089175,-7.688328,7.463895,-6.375907,5.902785,-3.349732,-2.697807,-2.344775,8.545471,6.644479,-8.313746,-5.803743,5.875115,6.169861,-0.336621,5.934692,0.402896,-5.964123,4.056674,5.387188,-5.161748,9.991463,-3.756704,-2.876827,7.804916,-2.610645,-6.655411,3.375599,-6.857500,9.264341,-2.890426,4.867013,5.235271,1.014102,-5.095449,0.893377,-8.716532,6.509913,-2.494092,4.952652,0.789552,6.303434,-1.735804,6.702830,-5.052853,-1.917619,-9.986269,-1.107951,6.574224,-7.988586,-8.957076,-7.705325,1.989889,-4.048951,0.773796,4.332668,6.662185,-3.545026,4.033691,0.604001,3.426571,8.666056,7.559592,2.232524,4.933485,-8.186776,3.316167,-8.039099,6.066139,-4.250352,-6.103943,7.075817,-6.886205,-0.522814,-6.907201,6.269783,7.759027,4.967346,7.124929,0.705174,-6.476314,-0.773434,-3.465138,-5.022586,8.300421,3.904603,-8.821109,-2.506323,-8.741824,8.923054,-4.330588,-2.948014,3.625582,-1.542883,-8.106152,5.810711,8.150722,-5.990581,-7.765147,0.480315,6.748533,-1.729269,-8.017135,3.631570,2.083643,3.698332,5.908531,4.656070,1.559685,9.465407,5.649808,-0.667493,4.531530,-7.860675,-5.682803,7.735849,-7.927669,6.189323,-4.588968,-5.896534,9.584338,3.921998,8.597431,6.802282,-4.859622,0.677736,5.429808,1.167269,-4.774362,5.477118,3.219836,2.771841,-4.198858,-0.794478,3.156083,-7.849230,-6.679132,6.104628,-0.011949,-7.517827,-9.999959,-5.331779,-0.173689,-3.628242,6.666788,8.694278,-1.268483,2.663844,2.229815,-9.041559,-3.236429,-7.100926,-5.488839,-2.840137,-6.205744,-4.713268,-9.024329,5.514578,-8.924914,-3.139706,1.954187,-8.626720,-6.006794,-2.558289,-1.465073,-5.910635,5.899655,5.647316,-4.761607,-0.466054,3.313237,4.870033,9.818898,-5.858356,-5.575368,8.405416,-3.583719,-3.025634,8.052490,-2.301540,1.004838,-3.041565,9.169894,-0.076165,-3.647716,0.049469,7.734148,2.401101,4.055699,-3.658771,-8.344695,9.823451,-7.644417,9.254464,-0.988170,0.770522,-1.156058,-2.104860,6.940596,-1.320152,2.031044,4.338304,-7.351243,6.351326,-4.828457,-2.147371,9.043759,7.923979,7.663429,-3.781138,6.002142,6.423094,3.722385,0.833156,-2.397214,-4.226099,6.379314,1.389968,0.265003,2.362729,-0.129580,-2.150006,5.577313,1.519745,4.752105,-9.317422,8.162211,-3.989201,5.137160,-2.540974,5.188874,1.685091,-9.911858,7.799831,0.506417,-7.035773,-9.779512,-0.266739,-4.413995,-4.046662,5.695425,-9.895179,-4.504105,0.134981,2.944736,7.671559,1.962501,1.773462,5.992347,5.011180,-8.875239,9.315892,-3.918837,-1.395783,0.267869,-9.125446,-8.225155,-3.458793,-2.180897,-1.108373,5.754422,-1.686240,4.134679,-1.032863,-8.164219,3.730992,3.110603,4.651205,-6.489175,6.884477,-3.118851,-2.276110,-8.999412,3.124480,9.549182,-7.722520,-5.677903,8.690395,4.397304,-0.950399,2.239830,-8.049248,-2.947809,-6.903032,7.456433,6.915620,-0.930656,-1.345711,-4.901549,5.467247,-1.109414,-0.885103,-9.655394,-0.362539,4.185074,-6.004173,-8.401723,-5.261720,-7.027646,-4.047065,-1.033114,-5.369012,4.298747,5.991153,-1.837708,1.797468,2.377942,1.985905,8.891043,7.920696,0.711365,7.217274,-5.831285,-7.124195,2.786033,-5.310020,-9.618341,-9.389193,-6.101626,5.167592,-3.190072,1.073787,-1.763959,7.823633,-2.091410,8.219458,-5.439196,0.162709,-9.299087,-1.298614,-1.041283,5.666803,4.083605,7.157330,8.891785,-5.802405,4.195972,6.823592,9.253660,-4.039792,3.140763,3.512404,-8.955031,-7.564224,-7.547682,-8.288430,-6.991462,-6.520457,2.712122,0.518017,-1.028760,-9.307271,1.063937,-4.521118,3.948608,-2.923390,-6.455203,-2.107555,-0.647091,4.335718,0.240286,-1.445799,8.098511,4.495732,-0.690065,7.613726,7.995175,-5.522791,-5.849480,7.288399,6.597721,-3.658684,5.705011,8.351473,-9.444406,-1.168225,-6.134457,5.697182,8.991818,7.789500,0.700150,6.038964,-3.904760,3.236473,-7.457647,-2.707668,-2.096900,1.327804,-8.536332,6.565443,5.219558,-8.564617,-4.766375,7.721407,7.777791,4.341733,9.605832,6.285620,4.616112,-0.761931,0.208649,3.634369,-7.156318,3.282716,9.201766,5.860005,-1.256494,8.572703,9.365281,9.758800,7.717542,3.148725,3.275612,-2.617881,5.925837,-4.303092,-5.556435,-5.671132,-3.079548,5.684011,-0.650877,-3.603620,-2.666304,-4.549720,-4.864989,-5.469955,-3.659888,-9.525637,-2.120287,-5.637831,-6.382147,-2.405783,5.815644,0.136250,-6.224828,4.004201,4.790747,-0.917147,1.763636,6.264130,-6.059251,0.212440,4.285678,-2.279980,7.197818,3.841106,2.439625,-5.042168,-2.800585,-2.486325,-9.169418,6.425932,1.084608,2.687997,-2.189659,-2.636147,8.938573,-9.871301,2.017895,-0.444410,9.885348,-9.015642,-0.437549,1.077638,-7.744208,3.975604,-4.122362,-5.465636,-2.755756,-1.675208,-7.005354,2.260670,2.940919,-8.963382,-2.237973,7.856488,-2.190511,-8.529726,-6.855142,5.477968,7.068568,1.348994,-1.967365,5.314646,8.689974,1.814682,-1.498584,7.793830,-9.668280,3.231775,6.586724,9.192940,-4.493201,-8.213966,5.900202,-2.963459,-6.494818,-5.746552,4.788257,-2.625839,-7.533701,8.395135,-1.162597,-9.316259,-0.311004,-7.407596,-0.036253,-8.390837,3.049128,6.756441,-4.362145,-5.218249,4.089280,6.137916,-1.195267,3.999524,-4.715129,-0.512486,-8.042617,6.998147,-7.739982,-5.168025,4.924331,9.488782,2.829280,-9.182460,-4.626424,-4.662092,3.416399,6.669562,7.309383,-4.591666,2.802079,7.486451,8.808011,-1.088266,-8.499721,-2.100360,5.185025,-0.137120,-0.812622,4.788140,0.791668,-0.279440,4.381610,6.626369,0.551846,-3.235215,-9.211669,-0.580687,2.796674,2.132592,4.369499,2.051170,9.855589,6.096550,-0.523043,3.779639,-7.712256,1.064859,2.050453,6.814860,-4.300809,5.937961,2.342682,6.588276,-1.437937,-5.704570,-0.373524,1.753396,9.689815,-2.767192,7.702593,-9.955027,1.547451,9.315910,-4.190874,5.959967,8.251221,6.498893,-7.174791,0.273686,0.097421,-8.418349,8.679540,2.305805,-7.297828,8.294236,0.865831,-9.803786,7.834280,9.570792,-1.867646,-1.540096,4.007981,-1.148491,-0.700829,1.892258,7.402033,-1.257634,8.229539,8.175467,5.959398,2.082757,-9.105437,6.949838,7.745278,5.803453,-9.613196,4.802863,9.122771,2.737988,9.793387,4.476681,0.810718,-2.111670,-3.661919,-9.962206,-0.853663,-9.386728,0.297617,-1.453620,0.643460,-6.798517,5.602072,9.970606,2.232045,9.673885,6.687634,1.005474,-6.280292,2.968640,-8.464742,-9.623757,2.153162,7.105226,-6.340947,-0.020288,-9.823821,4.504519,-7.925475,-7.299893,-6.093018,7.831737,1.522873,-1.176108,-5.218275,-8.237782,2.607480,0.249193,7.555617,-9.731233,-3.956527,5.019062,7.641348,-1.608423,-0.003131,-7.693652,-9.889165,-9.373681,-8.410927,9.931689,7.771235,1.178115,-8.970755,6.936535,-9.834750,-3.276902,-0.373074,2.383452,-3.260283,-7.523006,-5.924791,6.600884,-5.250797,-0.792587,-8.883347,6.631584,7.331843,4.866729,6.062017,-1.111816,-9.702736,-5.706112,-6.995301,-1.635410,9.717551,4.893676,8.538076,8.033566,2.123959,9.721264,3.245636,0.889333,7.537087,7.826624,6.251120,-7.531429,-3.482872,0.201818,-8.429418,6.017886,-9.053976,-5.930923,-2.235112,3.098750,0.304292,3.114232,5.131468,-7.191906,0.686981,1.469697,4.402126,-0.633066,-8.640181,-1.323263,-9.496521,-7.096421,1.364562,-8.415124,-4.227091,0.286173,-2.591312,7.718584,6.351816,3.076616,4.928984,0.879489,-8.598153,-9.272592,1.984672,-8.846657,-0.232852,-8.091253,6.626183,7.570171,-2.353893,3.635920,-9.044686,-5.385368,-7.908299,-3.914909,-1.477036,-3.279764,-4.822530,3.712127,-0.334563,8.883054,5.206008,-9.328436,-9.394181], dtype = "float64")#candidate|5264|(1920,)|const|float64
var_5265 = relay.var("var_5265", dtype = "float32", shape = (1536, 1))#candidate|5265|(1536, 1)|var|float32
call_5263 = relay.TupleGetItem(func_4791_call(relay.reshape(const_5264.astype('float64'), [10, 16, 12]), relay.reshape(var_5265.astype('float32'), [1536,]), ), 0)
call_5266 = relay.TupleGetItem(func_4795_call(relay.reshape(const_5264.astype('float64'), [10, 16, 12]), relay.reshape(var_5265.astype('float32'), [1536,]), ), 0)
bop_5275 = relay.greater_equal(var_5265.astype('bool'), const_5264.astype('bool')) # shape=(1536, 1920)
func_3931_call = mod.get_global_var('func_3931')
func_3932_call = mutated_mod.get_global_var('func_3932')
call_5281 = relay.TupleGetItem(func_3931_call(), 1)
call_5282 = relay.TupleGetItem(func_3932_call(), 1)
func_5133_call = mod.get_global_var('func_5133')
func_5136_call = mutated_mod.get_global_var('func_5136')
const_5309 = relay.const([-5,2,1,2,7,10,10,-6,-2,2,2,1,-6,-4,-10,-10,-1,2,10,-5,-9,7,-5,-10,9,-1,9,-8,2,-1,-5,7,3,10,-5,-2,-8,-2,5,-3,5,7,5,10,-5,2,-1,-6,8,10,10,8,5,10,3,2,7,-1,-5,10,1,2,2,-8,3,-4,4,-1,-1,6,-6,1,10,-6,2,-4,9,-8,-3,1,-6,9,8,-8,-10,-4,-3,-10,6,5,-5,2,-5,4,9,-6,-4,-7,-4,3,9,2,10,-4,-1,4,-10,-9,9,4,1,-6,-4,9,-8,-6,10,9,-4,-8,-4,9,1,10,1,1,-4,7,8,8,8,4,-1,-2,6,10,-4,-5,-6,6,-10,1,4,2,8,9,-3,6,6,9,-7,5,7,-6,-6,4,1,-10,7,-6,-1,1,-10,9,4,-1,6,-2,-7,-10,3,6,1,-9,-7,1,2,3,-8,9,10,-3,-7,3,-3,4,7,10,-8,-4,3,-5,9,8,-10,-1,8,-1,1,8,5,2,6,7,10,-8,-9,8,3,-9,-5,-5,8,-10,8,-5,-2,4,-8,3,-6,-10,6,-5,4,-1,-6,-1,-4,5,9,-6,8,10,-5,-3,5,-6,-3,-9,-6,-5,-9,-9,9,5,-4,10,1,8,-4,4,6,10,2,-8,8,-1,2,-9,3,-9,-3,9,-1,-1,-1,6,-7,-9,-4,7,10,10,-9,-3,3,9,2,-1,8,2,6,-7,2,2,-2,-1,-7,4,-10,-6,10,-8,-7,9,-10,3,7,-9,-7,-9,7,1,9,-10,6,-1,-3,-1,7,-4,-9,2,-10,-8,-1,-5,-5,2,6,4,-8,-10,-5,1,-1,8,5,-9,-1,1,-2,-10,-7,-4,6,6,-4,-9,7,2,7,1,9,7,5,-4,8,-7,-8,-9,8,2,-2,-2,1,9,5,9,10,-6,8,5,5,1,2,10,5,-3,-3,6,-10,-1,8,10,8,4,-7,-3,2,6,6,-3,9,8,4,3,2,10,-4,8,6,1,1,-4,10,7,7,4,10,6,-7,-8,5,-7,-8,-2,-6,-8,6,2,-5,1,10,7,-7,-2,4,-3,9,7,-6,-4,3,-1,-7,5,1,1,1,-1,-1,-7,6,3,2,5,-10,-2,2,-1,8,8,-4,-1,8,-5,7,-3,2,8,-7,-3,5,-9,-1,-5,-8,8,-5,7,3,10,4,2,-1,-1,5,-5,-1,7,-7,-9,-9,-7,6,-6,7,-8,1,-8,-2,3,5,10,-4,-6,-1,-6,-3,-5,-8,-7,-6,6,7,-2,-5,8,2,-5,-7,9,-7,-8,-9,-9,-3,2,3,9,-3,1,-3,-7,-9,3,-3,-1,7,-9,4,5,-4,9,4,9,6,-5,-1,3,-5,3,9,8,-7,4,7,-1,6,-10,5,-10,-9,9,9,1,10,-2], dtype = "uint16")#candidate|5309|(550,)|const|uint16
call_5308 = relay.TupleGetItem(func_5133_call(relay.reshape(const_5309.astype('uint16'), [11, 10, 5])), 1)
call_5310 = relay.TupleGetItem(func_5136_call(relay.reshape(const_5309.astype('uint16'), [11, 10, 5])), 1)
output = relay.Tuple([call_5259,call_5263,bop_5275,call_5281,call_5308,const_5309,])
output2 = relay.Tuple([call_5260,call_5266,bop_5275,call_5282,call_5310,const_5309,])
func_5322 = relay.Function([var_5265,], output)
mod['func_5322'] = func_5322
mod = relay.transform.InferType()(mod)
mutated_mod['func_5322'] = func_5322
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5323 = relay.var("var_5323", dtype = "float32", shape = (1536, 1))#candidate|5323|(1536, 1)|var|float32
func_5322_call = mutated_mod.get_global_var('func_5322')
call_5324 = func_5322_call(var_5323)
output = call_5324
func_5325 = relay.Function([var_5323], output)
mutated_mod['func_5325'] = func_5325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3719_call = mod.get_global_var('func_3719')
func_3720_call = mutated_mod.get_global_var('func_3720')
call_5336 = relay.TupleGetItem(func_3719_call(), 0)
call_5337 = relay.TupleGetItem(func_3720_call(), 0)
var_5349 = relay.var("var_5349", dtype = "float64", shape = (14, 16, 12))#candidate|5349|(14, 16, 12)|var|float64
bop_5350 = relay.power(call_5336.astype('float64'), var_5349.astype('float64')) # shape=(14, 16, 12)
bop_5353 = relay.power(call_5337.astype('float64'), var_5349.astype('float64')) # shape=(14, 16, 12)
uop_5356 = relay.tan(call_5336.astype('float64')) # shape=(1, 16, 12)
uop_5358 = relay.tan(call_5337.astype('float64')) # shape=(1, 16, 12)
const_5362 = relay.const([[[0.626030,7.644039,-7.270004,0.742330,6.646999,-9.980762,0.501979,1.298375,-7.382759,7.160805,-4.884177,1.145573],[7.188611,3.105029,4.782386,-6.293889,-7.859251,1.629394,-8.430775,7.850777,-3.156458,3.908222,-5.290219,-3.607130],[1.947530,2.606731,1.747230,-9.830729,8.487019,-8.372435,-3.211880,3.441219,-5.062352,3.459910,4.883339,8.869729],[-9.702779,-4.565394,5.597434,9.945199,-5.981525,-7.702250,9.535946,1.328937,-3.316742,-1.500969,-8.573445,-1.327832],[-2.001069,0.597403,-7.846366,5.090980,7.504517,-9.117539,-8.504392,0.795420,-9.113050,1.038156,-2.125390,-9.702887],[-4.798573,4.620733,-1.018368,-3.172075,7.385119,4.721328,-6.199765,-6.305809,-5.857494,-5.954037,-3.350984,9.478868],[6.962824,-5.057141,0.747970,-7.121143,1.898648,-7.362895,2.541831,-4.524867,-5.274484,1.823128,0.115483,-9.278828],[-1.349673,-5.752583,-7.560546,5.292572,-1.593083,1.750549,1.870444,-1.871430,0.773323,-7.560146,3.547242,0.430402],[-6.874459,-8.422591,-6.934253,5.713471,5.350774,1.456839,-6.413308,5.989761,0.912752,-7.516325,-2.442705,0.776176],[-5.119531,0.093374,0.640270,5.187802,1.436530,6.649504,1.617698,-6.410002,-0.505561,-3.570561,-6.080438,-4.146298],[3.824564,-4.106025,5.992104,9.650272,-2.008576,4.452014,-3.598694,4.628819,-3.424259,7.074475,-1.529887,-1.126772],[-7.412277,7.274722,-9.820041,-8.258408,-1.641685,8.406377,-0.265719,1.243486,8.390579,-0.440025,-8.661723,9.364129],[-9.691082,-2.951309,-9.465573,-9.502193,0.871456,-3.471496,3.237849,5.395055,6.797375,2.435406,-6.383184,-0.166432],[2.255253,4.601647,5.050876,-1.232267,8.305383,-9.042293,8.191659,-4.015183,-9.841248,-7.058419,8.393898,6.934764],[-2.676444,6.456528,-7.715262,5.230356,-0.487546,4.943401,4.652017,-0.634971,-8.362678,5.068934,6.502326,-7.313859],[-5.569640,9.101962,3.799033,-4.531837,2.902314,-8.762495,-6.421368,1.400622,-7.388407,-8.788568,-4.515926,-9.256134]],[[5.503598,-3.545599,-5.017702,-9.690440,2.036931,-7.268126,-8.981250,-5.509224,-8.994390,4.389141,-8.509972,-0.152901],[8.176401,9.674569,6.531383,-2.205220,0.945831,7.136034,-6.260206,-5.701502,9.498600,-2.306459,3.528269,3.334632],[5.896524,-7.220485,3.416819,-9.389226,6.399999,-8.861941,1.523983,0.230299,3.653081,-3.119002,-7.227157,3.141872],[-9.124205,-5.119014,-6.120474,8.238565,-9.596455,-4.739060,-1.908190,0.532933,-5.039429,-6.100994,-7.209013,-5.045802],[-9.417496,6.454354,0.008370,-5.715654,-1.323174,2.172284,-9.417030,-1.280338,1.273238,-3.774045,1.249082,3.398020],[6.013933,-7.052718,-7.313474,9.685574,3.973408,8.286569,7.630610,-1.683723,-9.550942,3.541743,2.108224,-4.183143],[-6.823851,-6.334334,-6.808364,4.394226,-6.521197,8.892625,-7.004416,7.459536,-3.038648,-5.852527,6.468971,8.475163],[-6.942099,-9.900871,5.942364,-9.284148,-7.000143,5.904520,3.428552,-5.354918,-6.215821,-0.790892,5.894496,4.572962],[-1.667759,4.605554,-3.343796,-0.908972,2.549620,-2.985906,6.810016,-6.379174,-3.978833,-1.835583,-8.178221,6.383717],[-8.477685,2.067042,4.131954,7.631390,-2.431367,4.920802,-0.814310,-3.098798,5.999842,-9.237582,5.174483,-1.086086],[-6.457875,8.158236,7.380632,-1.880897,-9.911389,4.092205,-3.338246,-4.648081,-8.633852,3.642220,2.028612,-4.933192],[8.787497,3.919443,-0.984926,-1.270692,-4.445647,5.653804,-2.998884,3.759768,-2.222800,-7.388381,-0.273789,7.689619],[0.284771,9.914088,-4.877035,1.158750,-3.977395,7.542337,-9.221996,3.550613,0.859423,-3.013839,-1.235288,2.029072],[6.306774,0.653560,-6.296065,-0.200138,-9.034466,-0.971975,0.042322,-0.381321,-0.504179,-1.573786,2.773735,0.726854],[9.048343,-2.338599,1.490441,-3.001743,4.182130,-7.614654,-2.638359,8.300237,-5.200067,-4.290699,1.522747,1.302367],[-3.092348,-0.465578,-2.949322,-2.598758,-2.893871,8.118383,-4.426891,-2.958795,-4.030056,6.975068,3.248949,1.288712]],[[-1.814576,8.578767,-1.734342,8.974136,0.423727,-4.255018,5.122405,8.901391,8.617629,-0.969236,-5.808736,2.592481],[0.919336,6.318576,-8.646574,5.961078,-7.893551,-1.276145,1.623344,0.562996,-6.815863,-4.680081,3.204442,6.949406],[1.497776,-4.333799,-0.148530,-4.788953,5.246468,-7.201805,-4.657714,-0.505009,-7.478892,7.507284,3.945867,-7.745681],[-1.445159,4.284902,-2.278937,-1.239066,-7.447364,3.192332,-0.257878,3.087103,-9.446436,4.438039,7.954153,3.947483],[1.369191,3.483890,-8.704355,-7.036869,9.035255,-9.476104,-3.840573,2.852055,5.144433,0.890297,-3.836172,5.386580],[-1.420918,4.112451,9.308426,7.418913,4.362441,6.846576,2.909035,-0.140198,8.942134,-4.300852,3.599939,8.988848],[6.120361,-8.989759,6.901728,-5.810241,1.958393,3.075815,-8.697493,5.522088,0.653739,2.831134,-1.657138,2.344385],[-2.580044,4.956546,8.457033,8.439617,8.214871,-5.434871,8.098567,-7.057313,-3.271908,4.060785,-8.074374,-6.046627],[2.440499,-5.778029,7.506168,-0.970580,-1.245104,3.829756,-8.434789,-6.629582,7.010518,-9.593400,0.299988,7.941410],[-8.651296,-7.162426,3.322441,-3.981431,5.536132,-5.157403,5.898314,-9.456035,-9.088859,0.757728,-1.306134,-6.947483],[8.379420,5.238048,1.899880,-9.629998,8.496991,-1.383384,-6.971219,-3.815975,-6.789883,-2.704205,0.591498,8.830695],[5.955814,-9.389438,-7.287371,0.546004,5.986716,-5.894929,0.151703,-6.737057,3.849936,0.804694,8.759925,2.080570],[-5.893869,0.726444,4.980048,1.642912,-2.179171,-6.751256,-1.133510,-4.349372,-6.175205,-9.871713,4.054328,1.760308],[7.838053,-2.332586,-8.893676,-4.204388,-8.660448,-8.037738,-5.460862,-0.163479,7.434625,3.124858,-5.338975,0.733011],[-0.310109,-0.163043,-1.906580,6.335167,-2.271721,-6.307146,0.730442,1.644290,6.289355,0.170379,0.154743,-8.312074],[0.251833,-3.334590,3.299208,-5.618860,0.192817,9.768098,-5.083305,3.056267,2.592593,6.175625,1.716046,-3.953991]],[[-2.281188,-7.166996,4.716756,-9.109946,1.765251,-2.602510,-9.194354,-3.823107,1.233786,6.619896,-7.308889,-2.536750],[7.974263,2.624913,-5.262902,0.668106,0.417869,-4.811892,-3.896410,3.163043,0.899091,-6.743462,1.497069,1.299690],[-8.139641,-7.045379,2.580402,-3.534824,8.365310,4.682065,6.415179,-4.522131,8.392775,5.975587,-6.524503,9.030721],[-7.677568,6.911247,-4.507690,-0.563522,-1.411080,-0.993655,7.617644,-7.541811,-6.879699,-3.920931,-3.795255,-3.765061],[0.611307,7.208565,5.606583,6.598133,-0.236328,3.918034,3.706616,2.708206,-7.570582,-1.799643,2.114516,-3.999813],[-5.262366,6.432684,-6.489610,-9.788830,-9.661747,0.813117,-9.191704,0.184485,8.570494,-1.154184,3.611876,-7.410463],[6.875742,6.512866,4.261994,-4.027488,1.317007,-5.631374,1.364509,2.652792,-0.857493,6.871477,-0.069698,0.977773],[3.451105,-0.600715,-6.454410,0.393055,4.409724,-2.724939,-8.840701,0.078129,-3.441464,0.480922,-2.760783,9.341390],[1.471678,-6.319397,-2.003390,-1.499709,7.444100,-8.041905,2.162723,3.526430,-0.572626,-3.408194,-6.588690,-7.391995],[8.186047,-5.756679,4.052735,2.703963,5.933510,-3.227421,1.917832,8.491199,2.317857,-0.618472,2.339110,-7.483239],[4.867218,2.860178,-1.632967,0.643346,5.844861,4.275034,1.149834,-4.571264,-6.281167,-5.595413,3.034370,-6.749176],[5.297368,2.491660,-7.266811,2.234656,-2.042707,3.873233,-3.967089,3.889609,6.583211,-8.344556,3.104139,4.679779],[8.813909,8.913418,7.529183,-7.673278,4.923925,-6.099118,1.245285,0.819427,-5.416437,-2.373201,7.210447,-2.199486],[-1.836082,-2.425582,5.128405,-9.170273,3.324193,1.149230,2.103750,-5.726060,-7.625241,1.754106,-5.276980,3.758488],[0.952886,2.511681,6.069293,3.398429,6.905425,9.495031,8.883679,1.257271,-7.018836,-4.498121,-7.852713,-5.940648],[8.383389,-5.175172,-4.742713,-2.426956,4.707859,7.171992,3.702893,8.540633,-0.442533,-4.889525,-4.105994,-2.680446]],[[-6.015304,-6.733373,3.321750,1.215549,-2.405334,-0.129300,-5.139141,2.092438,6.357651,-8.612055,0.850847,8.041885],[0.525772,-0.028336,7.126942,-5.077316,4.358831,7.233081,8.756263,3.205136,-2.981261,-8.552279,-9.190848,4.467817],[-7.780573,-3.668312,4.094795,8.205845,8.779829,-6.176202,7.252353,8.143747,9.074246,8.659328,3.322032,9.903644],[1.091278,-9.073714,0.933803,9.322218,-7.038756,8.659500,3.133465,-7.021720,-5.083776,6.456469,6.706950,-3.533370],[8.718974,0.695230,-2.522850,1.562910,-0.380930,5.301322,7.972955,-7.513900,1.871736,0.858055,-5.946594,9.072415],[-6.600355,-2.901811,2.026993,-3.863666,6.387005,-5.509832,-6.333390,1.071650,6.974544,-1.621284,8.690548,-6.021435],[9.508695,9.290160,4.737853,-9.801378,1.742704,1.295327,-3.436693,-9.372493,3.354650,9.333904,-8.345478,4.608618],[-1.216831,-0.231595,-8.484727,-3.912371,-3.811343,9.987846,-3.651992,1.189775,9.057445,7.270694,-6.092854,8.645883],[-6.992852,-2.949393,2.120460,-9.974109,7.082746,3.936147,-7.097262,3.309290,4.956830,-0.446741,5.080498,2.883769],[4.749065,-6.147966,-3.638000,7.150062,-6.319842,3.692885,5.561333,7.874725,-6.316437,-2.089838,-5.630887,5.422230],[3.100141,-5.312777,5.314363,3.868417,-8.877767,9.196412,7.585246,7.123093,-9.638539,6.570666,-4.315542,-9.765989],[4.615988,9.983737,2.215955,7.190395,6.464211,5.885177,7.961683,4.795295,-3.735899,3.978043,3.364262,9.748352],[0.802652,-9.280246,-8.000996,2.149322,9.551777,0.168060,9.508868,4.661443,-5.461454,-9.547346,5.159313,6.917307],[-8.575003,6.923299,5.942776,1.228847,3.243497,2.133598,-1.262324,7.172880,7.152884,-8.829453,9.956546,1.482407],[-4.789552,-3.068306,8.420004,5.443669,-1.758912,-2.385306,-8.470640,-7.599162,9.537148,4.046764,-9.165907,7.419246],[0.126252,4.143242,-6.272497,8.640292,-7.013642,-0.667382,5.655361,4.125975,9.435932,-5.490848,8.905740,8.287069]],[[-0.873248,-9.869670,-6.186330,-2.466669,-4.007778,-8.073160,8.319789,1.731112,7.052778,6.321541,-7.709919,-3.687276],[-1.462790,5.720799,-1.616651,-7.123379,5.998282,8.614187,7.273344,3.773427,2.437522,-9.914295,4.767927,-2.924307],[7.275592,-3.574205,-4.590720,2.098262,3.546619,-4.597495,-4.530073,-8.808051,-7.589953,2.818391,8.674944,3.452372],[-7.616469,6.971345,8.192602,4.784225,-4.454724,-9.468414,-1.807191,2.636965,-5.825130,8.264502,4.125639,-5.118500],[-1.459219,8.753384,3.371795,-4.047589,-1.205219,4.666700,-2.983106,-5.087498,-7.999993,4.475056,4.464112,-1.503273],[9.973618,-8.521447,1.783987,-6.806195,-4.431854,-8.517557,-9.207486,8.849079,-0.128678,-4.138882,0.650521,8.416702],[-7.919280,6.953374,-0.062313,7.850153,7.551686,-8.728595,7.954111,-9.873560,-5.327639,4.147107,-3.679637,3.687231],[2.604243,5.009504,-3.570688,4.130606,1.156782,-8.628326,-8.895090,9.116610,9.203810,0.317774,-6.418789,-2.141857],[-5.295583,9.603981,6.066297,2.952324,5.725944,0.467337,-3.974800,-4.649624,0.297747,6.756114,-8.693545,-9.528773],[-5.128459,-8.175166,8.367143,8.278719,-4.012275,-9.359187,1.642765,8.785519,-8.601524,-9.215895,0.012351,2.207476],[-3.994075,-9.505547,4.296275,-4.231366,-0.747531,4.044381,-3.722952,5.239389,0.967963,-3.346391,-3.606721,0.616599],[-5.170855,2.964384,-9.481095,4.422014,2.717009,-5.548860,-5.393008,-5.889675,4.876828,-6.964890,-9.081670,4.169199],[-0.394582,-4.141461,2.136480,7.285449,0.136334,2.055418,5.019313,-7.688424,-7.417242,-0.159066,-5.005729,-3.408964],[-9.573223,5.892025,-3.588488,-2.872804,-9.920383,2.118750,1.777578,8.103245,0.566376,-9.938761,6.280927,0.865206],[5.234993,-2.061506,-9.780316,-1.176128,-3.671847,7.956299,-0.044184,9.167780,-9.537815,-1.186889,5.204793,4.538478],[-2.431445,-6.750756,-0.166259,1.326755,9.399655,7.729928,-3.054737,-2.039110,0.105667,-4.639945,0.424748,-7.817914]]], dtype = "float64")#candidate|5362|(6, 16, 12)|const|float64
bop_5363 = relay.bitwise_xor(uop_5356.astype('uint32'), const_5362.astype('uint32')) # shape=(6, 16, 12)
bop_5366 = relay.bitwise_xor(uop_5358.astype('uint32'), const_5362.astype('uint32')) # shape=(6, 16, 12)
func_4481_call = mod.get_global_var('func_4481')
func_4483_call = mutated_mod.get_global_var('func_4483')
var_5371 = relay.var("var_5371", dtype = "int8", shape = (1800,))#candidate|5371|(1800,)|var|int8
call_5370 = relay.TupleGetItem(func_4481_call(relay.reshape(var_5371.astype('int8'), [1800,])), 2)
call_5372 = relay.TupleGetItem(func_4483_call(relay.reshape(var_5371.astype('int8'), [1800,])), 2)
func_5322_call = mod.get_global_var('func_5322')
func_5325_call = mutated_mod.get_global_var('func_5325')
var_5386 = relay.var("var_5386", dtype = "float32", shape = (1536,))#candidate|5386|(1536,)|var|float32
call_5385 = relay.TupleGetItem(func_5322_call(relay.reshape(var_5386.astype('float32'), [1536, 1])), 3)
call_5387 = relay.TupleGetItem(func_5325_call(relay.reshape(var_5386.astype('float32'), [1536, 1])), 3)
func_4816_call = mod.get_global_var('func_4816')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_5390 = relay.TupleGetItem(func_4816_call(), 0)
call_5391 = relay.TupleGetItem(func_4817_call(), 0)
func_2639_call = mod.get_global_var('func_2639')
func_2642_call = mutated_mod.get_global_var('func_2642')
var_5396 = relay.var("var_5396", dtype = "int8", shape = ())#candidate|5396|()|var|int8
call_5395 = relay.TupleGetItem(func_2639_call(relay.reshape(var_5396.astype('int8'), [])), 1)
call_5397 = relay.TupleGetItem(func_2642_call(relay.reshape(var_5396.astype('int8'), [])), 1)
output = relay.Tuple([bop_5350,bop_5363,call_5370,var_5371,call_5385,var_5386,call_5390,call_5395,var_5396,])
output2 = relay.Tuple([bop_5353,bop_5366,call_5372,var_5371,call_5387,var_5386,call_5391,call_5397,var_5396,])
func_5401 = relay.Function([var_5349,var_5371,var_5386,var_5396,], output)
mod['func_5401'] = func_5401
mod = relay.transform.InferType()(mod)
var_5402 = relay.var("var_5402", dtype = "float64", shape = (14, 16, 12))#candidate|5402|(14, 16, 12)|var|float64
var_5403 = relay.var("var_5403", dtype = "int8", shape = (1800,))#candidate|5403|(1800,)|var|int8
var_5404 = relay.var("var_5404", dtype = "float32", shape = (1536,))#candidate|5404|(1536,)|var|float32
var_5405 = relay.var("var_5405", dtype = "int8", shape = ())#candidate|5405|()|var|int8
output = func_5401(var_5402,var_5403,var_5404,var_5405,)
func_5406 = relay.Function([var_5402,var_5403,var_5404,var_5405,], output)
mutated_mod['func_5406'] = func_5406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5003_call = mod.get_global_var('func_5003')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_5416 = relay.TupleGetItem(func_5003_call(), 2)
call_5417 = relay.TupleGetItem(func_5005_call(), 2)
output = call_5416
output2 = call_5417
func_5425 = relay.Function([], output)
mod['func_5425'] = func_5425
mod = relay.transform.InferType()(mod)
mutated_mod['func_5425'] = func_5425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5425_call = mutated_mod.get_global_var('func_5425')
call_5426 = func_5425_call()
output = call_5426
func_5427 = relay.Function([], output)
mutated_mod['func_5427'] = func_5427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3835_call = mod.get_global_var('func_3835')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_5461 = func_3835_call()
call_5462 = func_3835_call()
output = call_5461
output2 = call_5462
func_5463 = relay.Function([], output)
mod['func_5463'] = func_5463
mod = relay.transform.InferType()(mod)
output = func_5463()
func_5464 = relay.Function([], output)
mutated_mod['func_5464'] = func_5464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3931_call = mod.get_global_var('func_3931')
func_3932_call = mutated_mod.get_global_var('func_3932')
call_5471 = relay.TupleGetItem(func_3931_call(), 2)
call_5472 = relay.TupleGetItem(func_3932_call(), 2)
func_3835_call = mod.get_global_var('func_3835')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_5483 = func_3835_call()
call_5484 = func_3835_call()
output = relay.Tuple([call_5471,call_5483,])
output2 = relay.Tuple([call_5472,call_5484,])
func_5489 = relay.Function([], output)
mod['func_5489'] = func_5489
mod = relay.transform.InferType()(mod)
mutated_mod['func_5489'] = func_5489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5489_call = mutated_mod.get_global_var('func_5489')
call_5490 = func_5489_call()
output = call_5490
func_5491 = relay.Function([], output)
mutated_mod['func_5491'] = func_5491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3814_call = mod.get_global_var('func_3814')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_5496 = relay.TupleGetItem(func_3814_call(), 0)
call_5497 = relay.TupleGetItem(func_3816_call(), 0)
var_5502 = relay.var("var_5502", dtype = "float64", shape = (2, 16, 12))#candidate|5502|(2, 16, 12)|var|float64
bop_5503 = relay.greater(call_5496.astype('bool'), var_5502.astype('bool')) # shape=(2, 16, 12)
bop_5506 = relay.greater(call_5497.astype('bool'), var_5502.astype('bool')) # shape=(2, 16, 12)
const_5512 = relay.const([[[-1.672341,-1.274916,-2.739281,2.306387,-1.217471,1.271015,-3.738945,8.080201,-5.070416,4.488079,2.403528,1.551597],[9.597202,-5.151780,-1.550328,-4.581944,-2.594194,-2.928342,-4.673765,-6.878590,4.586465,2.609521,-8.394833,0.812498],[-4.368243,1.006410,-3.875361,7.746256,-5.883808,2.601828,4.951221,2.404065,-5.887025,1.654028,-3.041685,5.474730],[4.812865,2.891522,4.243016,9.524197,2.697991,4.419127,9.204257,-6.512442,-8.349788,-0.552006,4.320766,8.061576],[-3.804644,-5.531288,8.648261,-3.630448,-8.681664,-9.040034,0.493579,1.195887,-8.429824,-3.868411,-2.712374,-2.783646],[-4.549303,-1.727010,-1.271339,7.344134,-8.086084,8.724998,-0.903271,8.164620,5.502590,-2.857506,0.285998,-7.651128],[6.398145,5.748251,5.103543,-6.109167,-6.608420,9.269350,5.350929,2.497154,-1.387586,2.944917,3.494620,1.174239],[-4.594220,6.324769,6.584412,-4.492189,-8.059227,-2.865644,1.161917,-1.762242,-4.343508,-8.661764,-0.200054,4.568405],[9.742013,9.418298,1.183602,5.147391,5.305365,8.040105,-5.239397,1.405158,4.560201,-8.176853,-6.253010,7.722385],[-5.317033,-5.405302,3.436930,6.502663,-4.888687,2.951568,1.851177,-3.225449,3.719680,-3.819108,4.732599,3.040843],[8.532507,2.301397,-1.550559,-0.602904,-2.322794,8.760794,8.571120,-3.649733,-9.456838,3.792097,6.109450,-8.397838],[-6.496481,-3.571809,-5.267420,-6.400697,-9.781357,8.225068,-7.785594,9.192065,9.813732,4.943510,-0.082169,-1.770427],[7.866007,-6.619049,8.895479,-4.927997,0.814109,5.358601,-4.373804,-6.390799,3.840604,0.085819,7.973804,2.895267],[7.805929,4.959947,-0.406907,-1.593436,-2.709768,-3.348850,4.490072,8.762971,-5.484915,-6.456266,-8.362594,4.394922],[8.765461,-4.004340,2.447637,2.512746,-1.055939,-3.355401,-5.737087,-8.333923,-5.792187,0.036255,9.904174,-4.201734],[4.678468,-6.032655,3.473955,-0.593267,-1.237998,-5.889063,-8.650730,0.679552,-7.862948,1.172658,-1.847665,3.085764]],[[9.678590,1.651683,0.647312,-1.257415,-4.292501,7.389539,-7.816926,-7.651881,-5.503892,-5.040269,-9.595206,0.539467],[-4.295664,-1.861657,-5.787208,9.608993,-6.882808,4.607477,-4.013078,-2.087472,-4.255058,7.821343,3.115511,-3.025766],[-3.512612,-0.053130,-9.114399,8.564102,6.346907,6.340765,-1.134687,9.650112,3.597959,-7.773416,-3.674654,5.720185],[-1.047644,9.074143,-3.836918,2.748355,-3.886977,-5.928652,5.389864,0.955964,0.862733,5.278771,9.104751,-6.767710],[0.949930,3.745240,7.637285,-3.287803,5.517004,-8.205244,8.528179,-4.183095,5.967525,-8.362344,-4.847331,5.541480],[7.560583,0.456799,4.968841,2.720393,2.233571,-0.359911,3.320924,-0.059810,-3.722919,2.678264,0.984078,-0.926379],[-6.831230,7.308045,-0.662577,-8.288644,3.761582,1.581072,0.583274,6.971768,1.211163,5.892225,5.321099,2.046341],[-2.387195,8.389114,-2.270406,6.066390,4.100142,0.914370,6.801479,1.280014,-1.318646,-3.424257,0.982716,-6.171221],[5.880903,-8.653237,4.701550,2.661231,-3.224558,9.992735,-1.969931,5.257660,-7.201440,0.777586,-5.884376,-6.585119],[1.855372,-5.096835,7.056463,9.371878,-8.235709,0.917681,4.005627,-4.084765,8.966890,-4.994355,-5.098367,1.044671],[1.077622,-6.459947,1.525924,-7.773228,9.138412,-7.069982,8.278301,-3.117519,1.601575,1.571017,-2.611508,-3.532979],[-8.833485,0.211213,-3.926054,4.407793,4.409710,4.143182,-0.640866,-3.099420,-3.277001,-7.238577,-0.370572,3.801370],[-8.433707,8.803777,-3.574664,3.061069,-3.616238,1.928914,7.026900,-5.076317,6.147149,-6.842400,7.846635,1.009985],[8.956975,0.194712,-5.514228,0.776960,-6.746142,6.870207,-1.711287,9.192793,3.084632,7.689560,6.749533,-2.056853],[3.783866,-0.909160,6.222017,-0.653263,-4.939021,-9.517367,-7.076590,2.790495,-1.923890,-1.352859,3.479583,-8.911342],[-8.217749,-6.240094,3.568162,-4.417798,4.005709,-9.143111,2.291011,9.613245,-8.098468,-4.435981,4.385745,3.486030]]], dtype = "float64")#candidate|5512|(2, 16, 12)|const|float64
bop_5513 = relay.logical_xor(var_5502.astype('uint32'), relay.reshape(const_5512.astype('uint32'), relay.shape_of(var_5502))) # shape=(2, 16, 12)
bop_5529 = relay.bitwise_or(call_5496.astype('uint32'), var_5502.astype('uint32')) # shape=(2, 16, 12)
bop_5532 = relay.bitwise_or(call_5497.astype('uint32'), var_5502.astype('uint32')) # shape=(2, 16, 12)
func_5489_call = mod.get_global_var('func_5489')
func_5491_call = mutated_mod.get_global_var('func_5491')
call_5545 = relay.TupleGetItem(func_5489_call(), 1)
call_5546 = relay.TupleGetItem(func_5491_call(), 1)
var_5556 = relay.var("var_5556", dtype = "float64", shape = (2, 16, 12))#candidate|5556|(2, 16, 12)|var|float64
bop_5557 = relay.power(var_5502.astype('float64'), relay.reshape(var_5556.astype('float64'), relay.shape_of(var_5502))) # shape=(2, 16, 12)
output = relay.Tuple([bop_5503,bop_5513,bop_5529,call_5545,bop_5557,])
output2 = relay.Tuple([bop_5506,bop_5513,bop_5532,call_5546,bop_5557,])
func_5563 = relay.Function([var_5502,var_5556,], output)
mod['func_5563'] = func_5563
mod = relay.transform.InferType()(mod)
mutated_mod['func_5563'] = func_5563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5563_call = mutated_mod.get_global_var('func_5563')
var_5565 = relay.var("var_5565", dtype = "float64", shape = (2, 16, 12))#candidate|5565|(2, 16, 12)|var|float64
var_5566 = relay.var("var_5566", dtype = "float64", shape = (2, 16, 12))#candidate|5566|(2, 16, 12)|var|float64
call_5564 = func_5563_call(var_5565,var_5566,)
output = call_5564
func_5567 = relay.Function([var_5565,var_5566,], output)
mutated_mod['func_5567'] = func_5567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3719_call = mod.get_global_var('func_3719')
func_3720_call = mutated_mod.get_global_var('func_3720')
call_5610 = relay.TupleGetItem(func_3719_call(), 0)
call_5611 = relay.TupleGetItem(func_3720_call(), 0)
output = relay.Tuple([call_5610,])
output2 = relay.Tuple([call_5611,])
func_5613 = relay.Function([], output)
mod['func_5613'] = func_5613
mod = relay.transform.InferType()(mod)
mutated_mod['func_5613'] = func_5613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5613_call = mutated_mod.get_global_var('func_5613')
call_5614 = func_5613_call()
output = call_5614
func_5615 = relay.Function([], output)
mutated_mod['func_5615'] = func_5615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3931_call = mod.get_global_var('func_3931')
func_3932_call = mutated_mod.get_global_var('func_3932')
call_5668 = relay.TupleGetItem(func_3931_call(), 3)
call_5669 = relay.TupleGetItem(func_3932_call(), 3)
func_5011_call = mod.get_global_var('func_5011')
func_5013_call = mutated_mod.get_global_var('func_5013')
call_5671 = relay.TupleGetItem(func_5011_call(), 0)
call_5672 = relay.TupleGetItem(func_5013_call(), 0)
func_5252_call = mod.get_global_var('func_5252')
func_5257_call = mutated_mod.get_global_var('func_5257')
var_5674 = relay.var("var_5674", dtype = "int16", shape = (256, 2))#candidate|5674|(256, 2)|var|int16
var_5675 = relay.var("var_5675", dtype = "int32", shape = ())#candidate|5675|()|var|int32
const_5676 = relay.const([-1,-4,1,1,8,-4,-8,9,6,2,2,-7,10,-9,-6,-5], dtype = "int32")#candidate|5676|(16,)|const|int32
call_5673 = relay.TupleGetItem(func_5252_call(relay.reshape(var_5674.astype('int16'), [512,]), relay.reshape(var_5675.astype('int32'), []), relay.reshape(const_5676.astype('int32'), [16,]), ), 5)
call_5677 = relay.TupleGetItem(func_5257_call(relay.reshape(var_5674.astype('int16'), [512,]), relay.reshape(var_5675.astype('int32'), []), relay.reshape(const_5676.astype('int32'), [16,]), ), 5)
func_4236_call = mod.get_global_var('func_4236')
func_4237_call = mutated_mod.get_global_var('func_4237')
call_5679 = relay.TupleGetItem(func_4236_call(), 0)
call_5680 = relay.TupleGetItem(func_4237_call(), 0)
output = relay.Tuple([call_5668,call_5671,call_5673,var_5674,var_5675,const_5676,call_5679,])
output2 = relay.Tuple([call_5669,call_5672,call_5677,var_5674,var_5675,const_5676,call_5680,])
func_5698 = relay.Function([var_5674,var_5675,], output)
mod['func_5698'] = func_5698
mod = relay.transform.InferType()(mod)
var_5699 = relay.var("var_5699", dtype = "int16", shape = (256, 2))#candidate|5699|(256, 2)|var|int16
var_5700 = relay.var("var_5700", dtype = "int32", shape = ())#candidate|5700|()|var|int32
output = func_5698(var_5699,var_5700,)
func_5701 = relay.Function([var_5699,var_5700,], output)
mutated_mod['func_5701'] = func_5701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4972_call = mod.get_global_var('func_4972')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_5737 = func_4972_call()
call_5738 = func_4972_call()
output = call_5737
output2 = call_5738
func_5741 = relay.Function([], output)
mod['func_5741'] = func_5741
mod = relay.transform.InferType()(mod)
output = func_5741()
func_5742 = relay.Function([], output)
mutated_mod['func_5742'] = func_5742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
call_5767 = func_4209_call()
call_5768 = func_4209_call()
func_3983_call = mod.get_global_var('func_3983')
func_3986_call = mutated_mod.get_global_var('func_3986')
var_5770 = relay.var("var_5770", dtype = "int8", shape = (1560,))#candidate|5770|(1560,)|var|int8
call_5769 = relay.TupleGetItem(func_3983_call(relay.reshape(var_5770.astype('int8'), [15, 13, 8]), relay.reshape(var_5770.astype('int8'), [15, 13, 8]), ), 1)
call_5771 = relay.TupleGetItem(func_3986_call(relay.reshape(var_5770.astype('int8'), [15, 13, 8]), relay.reshape(var_5770.astype('int8'), [15, 13, 8]), ), 1)
func_5037_call = mod.get_global_var('func_5037')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_5774 = func_5037_call()
call_5775 = func_5037_call()
uop_5780 = relay.cosh(call_5774.astype('float64')) # shape=(11, 7, 6)
uop_5782 = relay.cosh(call_5775.astype('float64')) # shape=(11, 7, 6)
func_3654_call = mod.get_global_var('func_3654')
func_3657_call = mutated_mod.get_global_var('func_3657')
var_5796 = relay.var("var_5796", dtype = "int8", shape = (1800,))#candidate|5796|(1800,)|var|int8
call_5795 = func_3654_call(relay.reshape(var_5796.astype('int8'), [8, 15, 15]), relay.reshape(var_5796.astype('int8'), [8, 15, 15]), )
call_5797 = func_3654_call(relay.reshape(var_5796.astype('int8'), [8, 15, 15]), relay.reshape(var_5796.astype('int8'), [8, 15, 15]), )
output = relay.Tuple([call_5767,call_5769,var_5770,uop_5780,call_5795,var_5796,])
output2 = relay.Tuple([call_5768,call_5771,var_5770,uop_5782,call_5797,var_5796,])
func_5831 = relay.Function([var_5770,var_5796,], output)
mod['func_5831'] = func_5831
mod = relay.transform.InferType()(mod)
mutated_mod['func_5831'] = func_5831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5831_call = mutated_mod.get_global_var('func_5831')
var_5833 = relay.var("var_5833", dtype = "int8", shape = (1560,))#candidate|5833|(1560,)|var|int8
var_5834 = relay.var("var_5834", dtype = "int8", shape = (1800,))#candidate|5834|(1800,)|var|int8
call_5832 = func_5831_call(var_5833,var_5834,)
output = call_5832
func_5835 = relay.Function([var_5833,var_5834,], output)
mutated_mod['func_5835'] = func_5835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_5837 = func_5425_call()
call_5838 = func_5425_call()
output = call_5837
output2 = call_5838
func_5840 = relay.Function([], output)
mod['func_5840'] = func_5840
mod = relay.transform.InferType()(mod)
mutated_mod['func_5840'] = func_5840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5840_call = mutated_mod.get_global_var('func_5840')
call_5841 = func_5840_call()
output = call_5841
func_5842 = relay.Function([], output)
mutated_mod['func_5842'] = func_5842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3754_call = mod.get_global_var('func_3754')
func_3755_call = mutated_mod.get_global_var('func_3755')
call_5866 = func_3754_call()
call_5867 = func_3754_call()
func_3814_call = mod.get_global_var('func_3814')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_5885 = relay.TupleGetItem(func_3814_call(), 0)
call_5886 = relay.TupleGetItem(func_3816_call(), 0)
bop_5888 = relay.bitwise_or(call_5866.astype('int8'), relay.reshape(call_5885.astype('int8'), relay.shape_of(call_5866))) # shape=(1, 16, 12)
bop_5891 = relay.bitwise_or(call_5867.astype('int8'), relay.reshape(call_5886.astype('int8'), relay.shape_of(call_5867))) # shape=(1, 16, 12)
output = relay.Tuple([bop_5888,])
output2 = relay.Tuple([bop_5891,])
func_5921 = relay.Function([], output)
mod['func_5921'] = func_5921
mod = relay.transform.InferType()(mod)
output = func_5921()
func_5922 = relay.Function([], output)
mutated_mod['func_5922'] = func_5922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3835_call = mod.get_global_var('func_3835')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_5946 = func_3835_call()
call_5947 = func_3835_call()
var_5954 = relay.var("var_5954", dtype = "float64", shape = (5, 16, 12))#candidate|5954|(5, 16, 12)|var|float64
bop_5955 = relay.floor_divide(call_5946.astype('float64'), var_5954.astype('float64')) # shape=(5, 16, 12)
bop_5958 = relay.floor_divide(call_5947.astype('float64'), var_5954.astype('float64')) # shape=(5, 16, 12)
output = bop_5955
output2 = bop_5958
func_5970 = relay.Function([var_5954,], output)
mod['func_5970'] = func_5970
mod = relay.transform.InferType()(mod)
var_5971 = relay.var("var_5971", dtype = "float64", shape = (5, 16, 12))#candidate|5971|(5, 16, 12)|var|float64
output = func_5970(var_5971)
func_5972 = relay.Function([var_5971], output)
mutated_mod['func_5972'] = func_5972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_5976 = func_5463_call()
call_5977 = func_5463_call()
var_6003 = relay.var("var_6003", dtype = "float64", shape = (5, 16, 12))#candidate|6003|(5, 16, 12)|var|float64
bop_6004 = relay.bitwise_xor(call_5976.astype('int16'), var_6003.astype('int16')) # shape=(5, 16, 12)
bop_6007 = relay.bitwise_xor(call_5977.astype('int16'), var_6003.astype('int16')) # shape=(5, 16, 12)
bop_6012 = relay.floor_mod(call_5976.astype('float32'), var_6003.astype('float32')) # shape=(5, 16, 12)
bop_6015 = relay.floor_mod(call_5977.astype('float32'), var_6003.astype('float32')) # shape=(5, 16, 12)
func_3835_call = mod.get_global_var('func_3835')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_6019 = func_3835_call()
call_6020 = func_3835_call()
func_4950_call = mod.get_global_var('func_4950')
func_4952_call = mutated_mod.get_global_var('func_4952')
call_6040 = relay.TupleGetItem(func_4950_call(), 0)
call_6041 = relay.TupleGetItem(func_4952_call(), 0)
uop_6043 = relay.asinh(bop_6004.astype('float32')) # shape=(5, 16, 12)
uop_6045 = relay.asinh(bop_6007.astype('float32')) # shape=(5, 16, 12)
output = relay.Tuple([bop_6012,call_6019,call_6040,uop_6043,])
output2 = relay.Tuple([bop_6015,call_6020,call_6041,uop_6045,])
func_6046 = relay.Function([var_6003,], output)
mod['func_6046'] = func_6046
mod = relay.transform.InferType()(mod)
var_6047 = relay.var("var_6047", dtype = "float64", shape = (5, 16, 12))#candidate|6047|(5, 16, 12)|var|float64
output = func_6046(var_6047)
func_6048 = relay.Function([var_6047], output)
mutated_mod['func_6048'] = func_6048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5489_call = mod.get_global_var('func_5489')
func_5491_call = mutated_mod.get_global_var('func_5491')
call_6052 = relay.TupleGetItem(func_5489_call(), 1)
call_6053 = relay.TupleGetItem(func_5491_call(), 1)
func_5970_call = mod.get_global_var('func_5970')
func_5972_call = mutated_mod.get_global_var('func_5972')
const_6058 = relay.const([-5.806378,-6.929986,2.288755,6.225719,-0.970382,4.565097,2.953752,4.440904,7.648702,-4.766572,1.735515,-3.540829,2.268744,-5.377806,-6.856923,-9.090078,8.661955,0.876081,-9.782437,0.266946,9.095985,-7.788012,4.365753,-7.511998,6.075889,5.188168,-4.512670,9.496146,-8.141010,-7.472758,-2.123302,4.918143,1.112077,4.801625,6.997638,-5.508018,9.635770,-5.192144,-2.695651,0.668029,4.833955,-8.065633,2.885731,7.199757,9.813878,-3.060089,-2.130102,3.688675,-2.368948,4.145158,1.838456,-4.855517,-8.534480,2.083962,-7.265175,7.934394,6.462204,3.883021,3.656995,6.790520,-7.687862,5.585544,2.769912,-8.262342,5.226040,-4.589918,4.766321,3.392757,9.043619,-2.287947,-7.283162,1.174740,8.564997,-8.531231,2.170641,5.077035,9.542433,-5.888910,3.945074,6.298563,-7.332749,0.006192,-2.533198,-8.382928,9.208979,2.267116,-8.886585,4.966936,4.286384,-8.561616,4.980820,-5.994336,-6.052718,-7.730612,2.935707,-7.711101,7.366219,1.311669,3.032371,7.919033,-9.132786,-5.211811,6.665071,-1.512951,6.579132,2.946581,-4.122696,4.120486,-9.504857,-8.154303,3.655392,6.694263,-4.318608,4.421258,-1.538857,-6.477007,1.286459,1.415155,9.984672,-4.199762,9.548698,5.156799,0.100783,-1.901683,-7.812029,-4.291444,-9.358846,-8.758001,-1.853534,-5.678012,-6.076300,-3.805491,6.463959,-7.915792,7.777459,1.388801,-5.688639,1.224968,2.383261,2.316429,-6.876783,-3.392102,-0.222443,-9.560898,-8.725016,3.035854,9.809387,-3.193108,-4.316850,0.097044,1.907342,-9.205781,-9.533196,-3.228937,3.957289,9.887330,0.046572,-5.388825,0.580621,-6.803242,1.882630,-2.847844,4.103318,4.471051,-5.802348,-8.206578,3.114701,3.429027,-5.720092,-0.165451,-8.048203,0.733751,6.396237,0.739814,-7.088782,-9.200553,1.894353,7.611983,6.571721,-0.713206,2.416191,-6.250389,7.540292,-6.080776,5.902974,-1.272443,6.861101,0.732800,7.627402,9.100221,-2.771163,-1.853288,-0.642325,2.978409,-9.165720,8.535481,-8.496522,9.057497,-5.868069,5.101827,-9.593104,3.194462,2.001802,-8.941511,4.978912,6.385994,0.103840,5.642910,7.478913,1.936945,1.102008,8.771203,-0.251463,1.294083,3.757720,-3.745237,-1.406679,8.947965,-0.826761,2.767171,5.671277,-0.631551,-4.281983,-5.729056,-4.574621,8.864652,8.291684,1.434640,0.463098,-7.307478,0.725767,-0.240345,-1.921097,1.079882,1.250389,-2.375129,1.986373,2.486590,-4.310586,3.473895,-0.529530,-0.462367,-8.446445,0.317023,6.514337,-0.080092,0.503865,-7.436092,-7.801836,-9.845826,-7.164133,-0.632136,8.401073,1.386856,2.023918,-5.860403,-8.332010,5.564095,-0.313797,-7.277543,-8.689957,-5.876369,-6.965536,4.632572,7.122598,-6.488840,-8.149730,9.884030,7.766131,-2.915182,-6.801027,-7.803140,2.439319,5.679725,-4.235242,4.858295,-1.951058,-1.886230,6.956755,2.330473,-4.954886,-3.999620,-4.319842,-3.134321,1.398061,-2.859280,-4.450812,-5.752070,2.903707,6.028230,5.688137,-9.837740,4.698503,-8.414200,4.236214,3.372088,-7.339405,-6.956410,6.291532,-9.212863,3.719995,-2.564307,0.892284,-6.411753,-8.911480,-7.322256,-7.040819,3.862614,-4.990975,-0.074766,1.333627,5.445633,-2.626639,-8.509389,-8.462156,-9.997664,-2.054240,2.100817,8.180016,-3.709293,-3.909281,9.070293,7.184722,-3.055763,5.627101,6.536193,-5.748956,-5.021565,6.961185,-5.058979,4.861699,5.382760,-5.500189,3.551056,-5.513085,9.789831,-5.721129,-4.387530,-8.289304,6.518145,2.154750,-0.572296,9.663021,-3.486288,-0.109620,7.399255,4.731287,4.098660,5.884055,2.579696,-7.528763,-7.302701,-9.382388,-3.566703,9.059300,-8.271533,3.439539,-9.492697,5.081452,2.325441,-2.669137,1.370285,6.670289,4.926626,3.187111,6.558746,6.137726,-3.937876,-5.733847,-7.458526,6.104335,-1.825654,-4.180185,6.426426,-6.901989,0.502710,5.468698,-8.883297,9.113297,-8.375060,8.829846,-0.851466,1.585060,-6.529613,5.612976,-7.421493,6.603761,7.746280,8.786314,5.412358,6.187324,-6.870717,8.435494,-7.553370,-1.286737,6.643032,-4.150269,3.773152,-6.193382,2.170796,-6.276112,-5.754539,-0.782664,1.688716,4.029142,8.393025,8.956413,6.181885,1.547494,4.747691,-2.359458,9.755128,-0.010143,9.719690,-1.941248,4.996659,-0.209504,-9.900169,1.043427,-4.497411,-4.984055,-0.171666,-5.239365,-7.058002,4.145700,7.650464,-6.160953,-6.491829,2.651213,7.809872,-6.320755,4.557650,5.557799,2.134447,1.225944,4.578910,-1.267548,-9.051387,3.852400,-5.211540,-7.054410,2.304850,-3.152604,-1.079966,9.231965,6.090854,-9.924152,-3.333518,-1.894247,-1.274354,4.581243,6.479658,0.306735,-4.671641,-7.668034,0.299492,2.696517,6.095021,-1.574561,6.865567,9.249683,0.885693,2.299907,7.680234,-0.524230,-5.984544,6.464576,4.726754,7.214778,-1.979742,-6.788408,-8.872446,-1.032414,6.251731,8.351938,-7.715413,8.564188,-3.702198,9.780787,-8.302211,-4.828904,1.293057,-9.042098,-2.400397,9.526729,1.692203,2.581678,4.762975,6.448780,-0.445756,1.931560,5.896443,0.166642,-7.607803,-5.653966,-8.287743,6.288121,-6.398812,-4.792138,2.738193,7.914280,9.835708,-7.156463,-0.513953,0.305826,3.542102,3.936630,7.612442,-0.880437,8.616185,-1.940437,6.893440,-0.914412,2.499352,7.296074,-1.110452,0.619754,1.681941,-3.862192,7.323970,-6.736857,-0.978770,2.325182,-7.157865,2.976476,-2.314308,9.394334,4.268001,-6.507479,-3.959604,1.467807,-9.016104,-7.794793,2.824184,-4.244293,-7.941491,0.233977,-1.710054,-1.877527,-0.133953,7.039793,2.869127,2.026499,-8.356765,1.685943,2.611590,1.591112,5.075845,1.896997,-9.373670,1.184359,-1.810111,8.711545,-0.237408,-1.875727,-7.206461,3.251225,-5.788199,-1.257142,-3.917572,-9.745762,3.870459,-5.975082,6.305277,0.167910,3.166190,5.005699,6.778502,-3.486650,-8.869597,-4.585227,-8.036150,9.688556,-6.530238,6.765225,3.341275,-8.601067,4.985802,-2.386296,-4.706671,-7.305956,-7.867583,-1.675685,4.401158,4.292775,6.948175,-9.111694,-4.603425,-1.723708,1.633827,2.807894,3.019282,9.193334,-7.270221,-4.080541,2.653902,-3.595243,-3.044676,9.434805,-3.658762,9.422556,6.219372,3.226872,6.660944,-7.127498,-4.169143,-1.590450,-6.367686,-7.331618,9.208835,6.296259,-1.462634,-8.980315,-4.828709,-6.267498,7.691521,-5.525904,4.313203,-1.275645,-6.005652,2.569039,-5.918168,-2.280840,-4.023221,-8.778338,9.424677,-1.408086,6.432217,-0.291698,4.846476,-1.940256,6.959966,6.261739,5.235343,2.905292,-0.244683,-6.166251,-8.843389,4.936873,2.877897,-3.259812,-9.560186,-8.384670,-3.604683,3.914809,7.403411,-2.946173,2.053793,1.111374,1.765296,-4.416505,-8.476866,-4.129147,9.555425,7.956859,7.799336,-1.495036,-0.809743,-1.561909,7.356542,-2.116522,3.133467,6.366818,-7.735258,2.524299,-6.087988,-5.171528,-7.778388,9.571507,-1.539055,4.942879,8.955870,5.967887,-8.629934,-8.022226,-4.868255,1.580417,5.550663,-3.436429,6.758457,0.268169,6.941037,-9.824343,-6.492104,2.676695,-2.774341,7.554239,-1.750192,-4.314945,-3.916387,4.742991,7.096807,-9.911013,4.062679,2.172299,9.911427,-4.871649,-5.144985,-4.630639,8.716375,5.858853,-7.234897,9.544839,-0.899582,-6.165405,-3.679093,5.974652,-9.475332,-3.618826,-3.919997,-1.826347,-5.158288,-1.734774,-6.890702,0.127864,-2.458874,1.130680,2.575916,-5.559552,-7.859212,-2.933077,-0.291712,6.325689,-1.717846,-0.361312,6.014449,-0.122532,-1.460698,-9.259840,0.604209,-7.545731,-7.537930,0.246103,-7.366365,2.745610,-8.110412,7.380695,5.661065,2.498026,-4.676205,-2.574270,-2.487570,5.437109,0.133359,9.358081,4.903675,1.725564,-7.367478,-9.830701,-0.037358,8.204548,3.622195,7.175060,1.357178,-7.542567,-3.942113,4.279111,9.954264,2.471031,-0.378238,-3.081200,-3.643057,-5.663839,-8.560564,8.180703,-7.718249,3.059502,3.744122,2.584903,3.354482,-2.522409,-1.931652,-5.234005,-6.429796,5.980520,5.013301,9.912122,9.870564,-2.813202,-0.958840,-9.028523,-2.867318,-5.997441,-3.935058,8.981592,-7.570829,1.933571,0.037074,-5.876939,-9.485277,4.091157,0.181494,3.361108,-8.778885,-8.966330,-6.451764,3.510564,-3.046521,-7.031779,0.255088,-7.374368,-2.698312,7.763565,-4.634634,1.155761,2.628398,-2.740089,1.145683,6.536329,0.991518,-9.007347,-8.931082,-0.302613,-6.064000,3.644634,-2.434882,6.912448,9.797477,5.645332,-7.001058,-5.718465,0.012797,1.853150,9.806615,-3.949807,-8.140687,-9.756954,-4.571214,-0.716041,6.199879,3.940318,7.197665,-8.596414,6.608769,-0.205954,1.969179,7.063570,9.126371,3.455480,7.128121,6.388411,3.869724,-9.565047,5.102675,-1.343588,-6.699169,-1.208466,-7.081622,-7.085284,-1.655878,8.946789,-4.173204,-3.271438,6.481061,-0.230446,4.467712,4.168776,9.880163,9.153157,-4.534673,0.650481,2.997315,-0.953955,1.294537,2.277022,-1.685520,1.884280,1.915610,-1.932376,2.717843,8.506450,4.540614,2.951773,-2.368704,3.143772,-3.608297,4.391016,-7.790602,1.706863,-9.272152,-6.495437,-2.180002,8.883199,8.024382,-6.860280,-1.423522,-9.152801,-5.367739,-1.430818,-4.825060,9.071821,9.894558,-5.423396,8.610750,7.705382,-9.158090,-6.686034,7.073744,-1.319516,5.627731,7.051467,-8.320230,6.051160,-5.456988,9.787225,4.533501,0.322549,2.696303,0.819264,-3.633331,-3.709823,-0.704398,6.670052,4.747546,-9.741456,-9.371940,-2.969190,6.938589,-3.415952,-3.624725,-3.288846,-6.274028,-3.693406,1.217082,-3.111033,-3.195840,-6.332191,0.017823,-2.622418,6.903944,-1.092489,-9.485461,-4.941587,-6.272800,7.097817,-8.714644,3.355801,-3.751968,-1.049796,9.135372,0.034829,-7.007967,-7.790611,2.889505,-8.973450,0.225442,-5.326780,3.032248,-1.407894,7.753557,-4.997132,6.355757,6.649541,9.310124,-5.487579,-7.449505,-8.993618,4.216560,5.238551,6.595751], dtype = "float64")#candidate|6058|(960,)|const|float64
call_6057 = func_5970_call(relay.reshape(const_6058.astype('float64'), [5, 16, 12]))
call_6059 = func_5970_call(relay.reshape(const_6058.astype('float64'), [5, 16, 12]))
func_3050_call = mod.get_global_var('func_3050')
func_3053_call = mutated_mod.get_global_var('func_3053')
var_6093 = relay.var("var_6093", dtype = "float32", shape = (1536,))#candidate|6093|(1536,)|var|float32
var_6094 = relay.var("var_6094", dtype = "int32", shape = ())#candidate|6094|()|var|int32
call_6092 = relay.TupleGetItem(func_3050_call(relay.reshape(var_6093.astype('float32'), [12, 16, 8]), relay.reshape(var_6094.astype('int32'), []), ), 0)
call_6095 = relay.TupleGetItem(func_3053_call(relay.reshape(var_6093.astype('float32'), [12, 16, 8]), relay.reshape(var_6094.astype('int32'), []), ), 0)
func_5840_call = mod.get_global_var('func_5840')
func_5842_call = mutated_mod.get_global_var('func_5842')
call_6097 = func_5840_call()
call_6098 = func_5840_call()
func_5133_call = mod.get_global_var('func_5133')
func_5136_call = mutated_mod.get_global_var('func_5136')
var_6100 = relay.var("var_6100", dtype = "uint16", shape = (550,))#candidate|6100|(550,)|var|uint16
call_6099 = relay.TupleGetItem(func_5133_call(relay.reshape(var_6100.astype('uint16'), [11, 10, 5])), 4)
call_6101 = relay.TupleGetItem(func_5136_call(relay.reshape(var_6100.astype('uint16'), [11, 10, 5])), 4)
func_5322_call = mod.get_global_var('func_5322')
func_5325_call = mutated_mod.get_global_var('func_5325')
call_6106 = relay.TupleGetItem(func_5322_call(relay.reshape(var_6093.astype('float32'), [1536, 1])), 5)
call_6107 = relay.TupleGetItem(func_5325_call(relay.reshape(var_6093.astype('float32'), [1536, 1])), 5)
output = relay.Tuple([call_6052,call_6057,const_6058,call_6092,var_6093,var_6094,call_6097,call_6099,var_6100,call_6106,])
output2 = relay.Tuple([call_6053,call_6059,const_6058,call_6095,var_6093,var_6094,call_6098,call_6101,var_6100,call_6107,])
func_6150 = relay.Function([var_6093,var_6094,var_6100,], output)
mod['func_6150'] = func_6150
mod = relay.transform.InferType()(mod)
var_6151 = relay.var("var_6151", dtype = "float32", shape = (1536,))#candidate|6151|(1536,)|var|float32
var_6152 = relay.var("var_6152", dtype = "int32", shape = ())#candidate|6152|()|var|int32
var_6153 = relay.var("var_6153", dtype = "uint16", shape = (550,))#candidate|6153|(550,)|var|uint16
output = func_6150(var_6151,var_6152,var_6153,)
func_6154 = relay.Function([var_6151,var_6152,var_6153,], output)
mutated_mod['func_6154'] = func_6154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_6232 = func_4065_call()
call_6233 = func_4065_call()
func_5252_call = mod.get_global_var('func_5252')
func_5257_call = mutated_mod.get_global_var('func_5257')
const_6238 = relay.const([-3,-3,-10,-5,6,2,10,8,-10,-4,-5,2,4,-1,-10,-2,-9,-7,9,10,10,9,-7,-1,5,1,10,5,-5,-4,5,9,-10,-3,-8,6,-6,-9,-1,1,8,6,-7,1,-9,8,10,10,-6,8,-7,-4,-1,-5,3,-10,7,-8,-1,8,-5,-6,6,4,-2,-5,-9,3,10,-4,-3,4,4,-8,-3,5,-3,-3,-8,8,-9,10,-2,10,10,-4,10,-4,-10,-7,9,10,-4,8,10,-3,-10,5,-3,-1,8,-5,5,-3,2,-9,4,2,4,2,-7,-3,6,-7,4,2,-7,-2,-6,7,-7,-10,10,10,3,8,-5,-7,8,1,-5,-5,8,5,2,-6,10,1,10,-4,3,5,2,8,9,3,2,6,-5,8,5,-10,9,-3,-3,6,-8,4,4,-1,3,6,-1,-7,-5,8,8,5,7,8,6,8,4,5,5,-10,-9,6,-3,10,8,8,-4,-3,10,3,-5,9,2,-9,9,7,-8,-9,6,8,7,-9,-8,2,-6,-5,7,-4,9,7,-3,-5,-9,-3,-6,-10,9,-4,4,7,2,-4,-8,-7,10,-5,10,5,8,6,-8,-9,-8,6,-8,5,-6,6,-5,-3,8,-9,1,10,3,5,4,10,6,7,8,-3,-9,2,-3,3,4,2,8,-7,9,2,-6,9,-8,-6,-8,-3,-8,-3,2,2,9,-3,5,-8,4,2,-4,-3,-7,9,8,2,-8,8,-2,6,-4,8,1,-6,8,4,-8,4,-8,9,-6,-3,-8,4,1,1,1,5,-7,-4,8,5,-8,9,2,3,9,-2,-9,6,6,-3,7,8,8,9,1,10,-4,7,-9,4,6,-6,4,-3,9,7,6,2,-9,-8,6,2,-8,-6,7,4,7,10,-2,-2,-1,-1,-6,10,3,-6,7,8,6,2,-3,-9,-6,2,2,-3,6,-9,-6,-10,7,9,-5,-9,9,6,-8,4,6,4,-3,4,-10,4,3,4,-1,4,-9,8,-4,2,1,-6,6,-8,8,8,4,1,-5,7,-9,1,6,8,4,-2,7,-6,9,-10,6,4,-2,-9,-1,3,9,-9,-3,-7,-6,2,8,-6,1,-5,-6,7,3,4,-2,5,9,8,-1,-9,-5,-10,-10,-1,4,8,-4,-7,10,-2,-6,-6,3,9,1,10,-10,9,9,-8,8,1,10,-9,-9,5,-10,-2,-8,-8,10,7,10,-7,7,-10,-3,7,10,6,-6,5,-3,-10,10,2,-8,10,-6,-7,-4,8,-9,-1,-10,8,-7,4,10,2,4,1,-4,9,8,3,-2,-9,7,-10,6,-2,1,-4,-2,2,-2,-9], dtype = "int16")#candidate|6238|(512,)|const|int16
var_6239 = relay.var("var_6239", dtype = "int32", shape = ())#candidate|6239|()|var|int32
const_6240 = relay.const([[-4,3,-1,7,-2,-4,-4,-1,4,5,-2,5,2,10,-10,7]], dtype = "int32")#candidate|6240|(1, 16)|const|int32
call_6237 = relay.TupleGetItem(func_5252_call(relay.reshape(const_6238.astype('int16'), [512,]), relay.reshape(var_6239.astype('int32'), []), relay.reshape(const_6240.astype('int32'), [16,]), ), 5)
call_6241 = relay.TupleGetItem(func_5257_call(relay.reshape(const_6238.astype('int16'), [512,]), relay.reshape(var_6239.astype('int32'), []), relay.reshape(const_6240.astype('int32'), [16,]), ), 5)
output = relay.Tuple([call_6232,call_6237,const_6238,var_6239,const_6240,])
output2 = relay.Tuple([call_6233,call_6241,const_6238,var_6239,const_6240,])
func_6268 = relay.Function([var_6239,], output)
mod['func_6268'] = func_6268
mod = relay.transform.InferType()(mod)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6269 = relay.var("var_6269", dtype = "int32", shape = ())#candidate|6269|()|var|int32
func_6268_call = mutated_mod.get_global_var('func_6268')
call_6270 = func_6268_call(var_6269)
output = call_6270
func_6271 = relay.Function([var_6269], output)
mutated_mod['func_6271'] = func_6271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3931_call = mod.get_global_var('func_3931')
func_3932_call = mutated_mod.get_global_var('func_3932')
call_6282 = relay.TupleGetItem(func_3931_call(), 1)
call_6283 = relay.TupleGetItem(func_3932_call(), 1)
output = call_6282
output2 = call_6283
func_6288 = relay.Function([], output)
mod['func_6288'] = func_6288
mod = relay.transform.InferType()(mod)
output = func_6288()
func_6289 = relay.Function([], output)
mutated_mod['func_6289'] = func_6289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_6327 = func_5463_call()
call_6328 = func_5463_call()
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_6329 = func_5463_call()
call_6330 = func_5463_call()
bop_6333 = relay.not_equal(call_6329.astype('bool'), relay.reshape(call_6327.astype('bool'), relay.shape_of(call_6329))) # shape=(1, 16, 12)
bop_6336 = relay.not_equal(call_6330.astype('bool'), relay.reshape(call_6328.astype('bool'), relay.shape_of(call_6330))) # shape=(1, 16, 12)
output = bop_6333
output2 = bop_6336
func_6337 = relay.Function([], output)
mod['func_6337'] = func_6337
mod = relay.transform.InferType()(mod)
mutated_mod['func_6337'] = func_6337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6337_call = mutated_mod.get_global_var('func_6337')
call_6338 = func_6337_call()
output = call_6338
func_6339 = relay.Function([], output)
mutated_mod['func_6339'] = func_6339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5489_call = mod.get_global_var('func_5489')
func_5491_call = mutated_mod.get_global_var('func_5491')
call_6364 = relay.TupleGetItem(func_5489_call(), 0)
call_6365 = relay.TupleGetItem(func_5491_call(), 0)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_6403 = func_4065_call()
call_6404 = func_4065_call()
func_5489_call = mod.get_global_var('func_5489')
func_5491_call = mutated_mod.get_global_var('func_5491')
call_6408 = relay.TupleGetItem(func_5489_call(), 1)
call_6409 = relay.TupleGetItem(func_5491_call(), 1)
func_4816_call = mod.get_global_var('func_4816')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_6411 = relay.TupleGetItem(func_4816_call(), 0)
call_6412 = relay.TupleGetItem(func_4817_call(), 0)
func_5489_call = mod.get_global_var('func_5489')
func_5491_call = mutated_mod.get_global_var('func_5491')
call_6415 = relay.TupleGetItem(func_5489_call(), 1)
call_6416 = relay.TupleGetItem(func_5491_call(), 1)
output = relay.Tuple([call_6364,call_6403,call_6408,call_6411,call_6415,])
output2 = relay.Tuple([call_6365,call_6404,call_6409,call_6412,call_6416,])
func_6421 = relay.Function([], output)
mod['func_6421'] = func_6421
mod = relay.transform.InferType()(mod)
output = func_6421()
func_6422 = relay.Function([], output)
mutated_mod['func_6422'] = func_6422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6423 = relay.var("var_6423", dtype = "float32", shape = (4, 8, 8))#candidate|6423|(4, 8, 8)|var|float32
var_6424 = relay.var("var_6424", dtype = "float32", shape = (4, 8, 8))#candidate|6424|(4, 8, 8)|var|float32
bop_6425 = relay.subtract(var_6423.astype('float32'), relay.reshape(var_6424.astype('float32'), relay.shape_of(var_6423))) # shape=(4, 8, 8)
output = bop_6425
output2 = bop_6425
func_6429 = relay.Function([var_6423,var_6424,], output)
mod['func_6429'] = func_6429
mod = relay.transform.InferType()(mod)
mutated_mod['func_6429'] = func_6429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6429_call = mutated_mod.get_global_var('func_6429')
var_6431 = relay.var("var_6431", dtype = "float32", shape = (4, 8, 8))#candidate|6431|(4, 8, 8)|var|float32
var_6432 = relay.var("var_6432", dtype = "float32", shape = (4, 8, 8))#candidate|6432|(4, 8, 8)|var|float32
call_6430 = func_6429_call(var_6431,var_6432,)
output = call_6430
func_6433 = relay.Function([var_6431,var_6432,], output)
mutated_mod['func_6433'] = func_6433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5037_call = mod.get_global_var('func_5037')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_6574 = func_5037_call()
call_6575 = func_5037_call()
output = relay.Tuple([call_6574,])
output2 = relay.Tuple([call_6575,])
func_6579 = relay.Function([], output)
mod['func_6579'] = func_6579
mod = relay.transform.InferType()(mod)
output = func_6579()
func_6580 = relay.Function([], output)
mutated_mod['func_6580'] = func_6580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4236_call = mod.get_global_var('func_4236')
func_4237_call = mutated_mod.get_global_var('func_4237')
call_6587 = relay.TupleGetItem(func_4236_call(), 0)
call_6588 = relay.TupleGetItem(func_4237_call(), 0)
output = relay.Tuple([call_6587,])
output2 = relay.Tuple([call_6588,])
func_6589 = relay.Function([], output)
mod['func_6589'] = func_6589
mod = relay.transform.InferType()(mod)
output = func_6589()
func_6590 = relay.Function([], output)
mutated_mod['func_6590'] = func_6590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5011_call = mod.get_global_var('func_5011')
func_5013_call = mutated_mod.get_global_var('func_5013')
call_6614 = relay.TupleGetItem(func_5011_call(), 0)
call_6615 = relay.TupleGetItem(func_5013_call(), 0)
func_4972_call = mod.get_global_var('func_4972')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_6625 = func_4972_call()
call_6626 = func_4972_call()
output = relay.Tuple([call_6614,call_6625,])
output2 = relay.Tuple([call_6615,call_6626,])
func_6631 = relay.Function([], output)
mod['func_6631'] = func_6631
mod = relay.transform.InferType()(mod)
mutated_mod['func_6631'] = func_6631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6631_call = mutated_mod.get_global_var('func_6631')
call_6632 = func_6631_call()
output = call_6632
func_6633 = relay.Function([], output)
mutated_mod['func_6633'] = func_6633
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6660 = relay.const([[[6.918838,-2.818682,4.860593,-2.448742,-2.759209,-5.361815,1.378171,-7.053623,-7.417686],[4.107855,5.260362,7.190135,-1.526815,2.781843,-5.781721,8.568475,-1.666681,3.428552],[-9.015766,7.482333,3.902956,-4.467593,-4.632734,-9.738090,8.265950,-5.920518,6.464868],[5.555367,-6.062157,4.577790,-9.139567,-5.619199,-9.158900,-3.192408,-7.114304,-1.083799],[2.484390,-9.272791,7.679692,-8.122242,-0.878025,-7.270037,-4.388982,6.796843,-7.177531],[5.730596,8.267777,-6.937587,8.429077,6.550589,-5.097681,-1.229704,-5.607328,4.999357],[7.319188,-9.200487,-1.574333,-3.734799,-3.338566,-3.811330,-0.197351,5.938449,9.152149],[-7.729094,-9.746111,-0.953004,3.274876,9.253648,-5.868880,2.012626,-8.636999,6.197923],[-2.839147,-3.784530,-2.933320,-2.079625,-6.198373,-8.322668,4.920996,2.538025,-8.975788],[-7.214887,-0.190641,9.235822,-1.346448,-9.569797,-4.933160,4.833017,9.174488,-8.242523],[-3.538657,0.911992,-0.610439,2.579740,-8.010532,-2.744393,-7.102540,-6.688986,-3.284799],[2.351510,-4.828095,0.863729,-9.953761,-4.846958,-7.024166,6.557886,3.722188,-7.732753],[-5.622423,9.309963,-1.824551,-2.904515,-7.502627,4.883169,-1.511060,6.879739,-5.641127]],[[-4.298616,3.618732,4.256418,2.329441,7.370829,2.227873,-3.397679,8.708996,-3.063134],[3.724447,-0.855519,5.760679,-1.328844,2.119433,-0.263918,0.045012,-7.173002,6.632772],[-3.095092,-7.080671,7.418686,1.521163,4.250869,5.181451,-2.854829,-2.018194,-3.370715],[-8.858394,-4.471109,-3.198350,-8.376771,1.198404,2.447449,-7.563084,9.611582,5.093989],[-4.219651,-9.518963,1.563055,3.624648,4.487093,-9.073866,1.566822,-9.312814,-9.308670],[-7.615972,-0.316798,3.931576,6.985041,-5.975299,-2.154680,9.435794,-0.080233,6.709071],[-9.304013,-4.691749,-0.857219,4.216693,7.391973,8.620846,3.842147,-7.817222,5.388333],[5.974334,8.347813,3.796012,5.149136,-0.724085,7.737957,9.609202,-8.735416,5.271102],[-0.543846,-4.297102,-0.795856,-6.564987,-2.078739,-0.985625,-9.977195,-4.457560,3.343641],[-0.048278,-0.901911,-0.608435,-0.482672,9.762220,3.898364,6.639236,-7.736617,-9.257055],[-7.009053,-1.338548,3.784903,-5.473034,-8.702155,-4.029621,7.213663,-6.806168,1.314607],[2.537931,-0.724373,9.797059,3.323801,6.573051,-6.422990,-7.450477,-8.380840,2.483729],[4.624801,-4.011415,-7.393921,2.081891,4.475838,-6.731043,5.721741,-9.092798,-7.107290]],[[6.865602,-2.344510,8.782780,-4.094481,0.453682,-1.775229,1.904836,9.108294,4.351227],[-6.146128,3.936982,-8.658872,-6.151071,4.541995,5.873956,-6.454252,7.852178,-6.137034],[-7.380618,-8.472778,0.503555,-2.861490,5.156110,-6.609330,-3.826183,9.436424,-0.877092],[9.654636,8.898482,6.138712,-5.421540,-7.191529,1.799188,6.848617,3.894789,1.441487],[-7.009617,7.389913,5.229602,3.107840,-1.972451,2.838422,-7.179044,-6.829303,6.057042],[0.827785,3.793758,1.376460,-4.737934,-1.923712,7.170827,-5.229391,-3.341768,9.571021],[-0.396768,8.682052,5.925877,8.329129,6.908950,-5.008099,-1.247976,-1.543372,9.322863],[-5.965956,-1.383244,6.306444,-2.006821,-5.894505,-3.894565,7.389442,-5.289196,9.173780],[0.484663,3.755781,-9.120025,-2.307489,4.429134,0.882393,-6.882673,-8.855375,-2.913221],[-9.991843,-9.176972,6.551549,-2.846547,2.142734,2.441480,3.629932,4.585673,3.993536],[-4.435895,-1.679655,7.455766,-3.754758,4.874199,-2.518068,-0.346437,3.139605,1.648519],[0.506601,3.984158,-0.766066,-2.696597,3.803850,2.001591,0.173757,-6.454403,8.551240],[1.922135,-0.439907,7.602159,0.016839,4.502938,-9.151944,2.962408,3.705277,-9.512714]]], dtype = "float64")#candidate|6660|(3, 13, 9)|const|float64
var_6661 = relay.var("var_6661", dtype = "float64", shape = (3, 13, 9))#candidate|6661|(3, 13, 9)|var|float64
bop_6662 = relay.floor_divide(const_6660.astype('float64'), relay.reshape(var_6661.astype('float64'), relay.shape_of(const_6660))) # shape=(3, 13, 9)
func_4972_call = mod.get_global_var('func_4972')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_6673 = func_4972_call()
call_6674 = func_4972_call()
output = relay.Tuple([bop_6662,call_6673,])
output2 = relay.Tuple([bop_6662,call_6674,])
func_6677 = relay.Function([var_6661,], output)
mod['func_6677'] = func_6677
mod = relay.transform.InferType()(mod)
var_6678 = relay.var("var_6678", dtype = "float64", shape = (3, 13, 9))#candidate|6678|(3, 13, 9)|var|float64
output = func_6677(var_6678)
func_6679 = relay.Function([var_6678], output)
mutated_mod['func_6679'] = func_6679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4236_call = mod.get_global_var('func_4236')
func_4237_call = mutated_mod.get_global_var('func_4237')
call_6699 = relay.TupleGetItem(func_4236_call(), 0)
call_6700 = relay.TupleGetItem(func_4237_call(), 0)
uop_6703 = relay.log10(call_6699.astype('float32')) # shape=(11, 7, 6)
uop_6705 = relay.log10(call_6700.astype('float32')) # shape=(11, 7, 6)
func_5741_call = mod.get_global_var('func_5741')
func_5742_call = mutated_mod.get_global_var('func_5742')
call_6712 = func_5741_call()
call_6713 = func_5741_call()
func_4950_call = mod.get_global_var('func_4950')
func_4952_call = mutated_mod.get_global_var('func_4952')
call_6727 = relay.TupleGetItem(func_4950_call(), 0)
call_6728 = relay.TupleGetItem(func_4952_call(), 0)
func_3754_call = mod.get_global_var('func_3754')
func_3755_call = mutated_mod.get_global_var('func_3755')
call_6733 = func_3754_call()
call_6734 = func_3754_call()
output = relay.Tuple([uop_6703,call_6712,call_6727,call_6733,])
output2 = relay.Tuple([uop_6705,call_6713,call_6728,call_6734,])
func_6764 = relay.Function([], output)
mod['func_6764'] = func_6764
mod = relay.transform.InferType()(mod)
output = func_6764()
func_6765 = relay.Function([], output)
mutated_mod['func_6765'] = func_6765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3754_call = mod.get_global_var('func_3754')
func_3755_call = mutated_mod.get_global_var('func_3755')
call_6816 = func_3754_call()
call_6817 = func_3754_call()
output = call_6816
output2 = call_6817
func_6828 = relay.Function([], output)
mod['func_6828'] = func_6828
mod = relay.transform.InferType()(mod)
output = func_6828()
func_6829 = relay.Function([], output)
mutated_mod['func_6829'] = func_6829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5037_call = mod.get_global_var('func_5037')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_6845 = func_5037_call()
call_6846 = func_5037_call()
output = relay.Tuple([call_6845,])
output2 = relay.Tuple([call_6846,])
func_6853 = relay.Function([], output)
mod['func_6853'] = func_6853
mod = relay.transform.InferType()(mod)
mutated_mod['func_6853'] = func_6853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6853_call = mutated_mod.get_global_var('func_6853')
call_6854 = func_6853_call()
output = call_6854
func_6855 = relay.Function([], output)
mutated_mod['func_6855'] = func_6855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
call_6885 = func_4209_call()
call_6886 = func_4209_call()
uop_6965 = relay.sigmoid(call_6885.astype('float64')) # shape=(13, 16, 12)
uop_6967 = relay.sigmoid(call_6886.astype('float64')) # shape=(13, 16, 12)
output = uop_6965
output2 = uop_6967
func_6974 = relay.Function([], output)
mod['func_6974'] = func_6974
mod = relay.transform.InferType()(mod)
mutated_mod['func_6974'] = func_6974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6974_call = mutated_mod.get_global_var('func_6974')
call_6975 = func_6974_call()
output = call_6975
func_6976 = relay.Function([], output)
mutated_mod['func_6976'] = func_6976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6421_call = mod.get_global_var('func_6421')
func_6422_call = mutated_mod.get_global_var('func_6422')
call_6995 = relay.TupleGetItem(func_6421_call(), 0)
call_6996 = relay.TupleGetItem(func_6422_call(), 0)
func_4268_call = mod.get_global_var('func_4268')
func_4270_call = mutated_mod.get_global_var('func_4270')
const_7004 = relay.const([3,-8,-2,-1,-1,-3,8,8,6,-5,3,-3,7,-2,-9,4,3,-6,1,5,-6,5,-6,-6,-10,-3,10,-3,-6,-1,8,-9,-7,3,-4,-2,-1,-4,1,-1,2,-6,-8,1,-4,10,-8,-2,-6,3,-5,2,-3,5,8,-4,10,3,1,-3,-6,6,2,9,4,1,8,-9,10,4,10,8,-2,-9,7,-7,-4,7,2,5,-9,-7,-10,9,-10,9,2,3,8,-6,-1,8,-3,-3,-10,-3,7,-7,8,-8,-10,2,4,-6,5,-9,-3,4,-1,-5,7,3,7,10,5,-4,5,-9,-1,-1,-6,-5,-7,-9,7,-3,-1,8,-6,5,-8,-8,-7,10,-1,2,-3,-8,-7,-1,10,-7,-8,-9,5,8,3,4,1,5,7,9,8,10,-4,-8,-3,-5,1,-9,-10,-8,3,2,-8,-7,-8,-4,-4,10,5,4,4,-1,3,-1,-7,5,-3,-3,6,7,-6,10,7,-10,9,-2,-3,-10,-5,9,-2,-1,3,-9,5,5,-10,3,-5,2,7,9,-7,6,1,-3,2,-1,9,6,-7,5,-5,5,-9,6,-10,-6,5,8,-7,-3,6,-8,4,-7,4,-8,-10,9,-9,5,-9,6,-3,1,7,1,-8,8,-2,4,-9,-4,-5,-10,7,4,6,-3,-6,1,8,9,-2,9,4,-9,-6,-3,6,-5,-9,-1,1,-6,-8,-2,-10,6,8,3,9,-8,-4,5,-4,-5,1,10,1,1,-4,8,4,3,9,5,-7,-10,3,5,6,-2,7,1,7,-9,-4,4,-1,9,2,-8,6,2,-3,-7,-8,-8,-1,4,10,1,-10,-2,-10,1,-7,-1,-6,2,-3,-10,10,-5,-6,8,-2,-10,2,3,2,-3,2,-2,8,-2,5,-1,10,3,-7,-4,10,9,-5,-5,8,-4,4,3,-9,5,6,8,-4,-4,4,7,-1,7,1,-10,1,-1,1,-7,8,-6,-9,-10,7,-1,-1,4,-7,5,4,8,1,-10,-5,7,-10,6,9,-10,10,-7,2,-1,4,-8,3,-4,7,-9,3,-6,10,2,-7,-4,-6,8,-2,-6,6,5,-9,-6,-4,-1,-10,10,8,-9,-6,2,4,9,-8,4,-6,5,-1,4,-5,-2,1,-7,6,3,-9,-4,-6,10,-6,10,-5,-1,-6,-2,1,8,-8,2,10,-7,-2,-3,4,4,10,-5,-9,-3,-3,-5,-1,-8,-9,4,-6,8,10,8,-7,-5,6,-3,-4,9,-1,2,9,-10,10,8,5,-8,9,10,-8,-2,4,-9,-10,-6,7,5,-9,4,1,7,-10,-2,1,-3,-8,3,-10,10,3,3,7,-5,4,-8,-3,-10,10,-2,-7,-9,-1,7,-5,3,5,5,3,8,1,-2,-1,-7,-8,1,5,-10,-10,-8,-6,-2,-7,4,-9,9,8,-4,6,1,2,9,2,4,8,9,-4,-6,-8,-3,3,-8,-3,-2,-6,5,5,-5,-5,10,-4,-9,10,9,4,-6,4,-7,-6,6,-4,-10,-6,5,-6,5,4,8,9,-1,-1,-1,-10,-10,9,-6,8,9,1,-5,1,-8,-6,-8,-8,-10,-5,-2,9,-1,9,-9,-3,2,6,-2,-7,-3,-1,-10,9,5,-10,9,8,-8,-7,-5,9,6,-5,2,1,7,-4,8,-6,9,10,7,-8,-7,4,-7,1,6,-4,-10,-4,6,3,-3,-8,8,10,6,-10,7,4,5,-9,-1,-9,-7,-7,3,8,-2,-10,-6,6,10,-4,-8,-1,6,-3,-3,8,-7,5,-7,-8,1,9,-8,-9,1,-3,4,1,6,-6,6,10,-1,3,-10,-8,9,-8,4,-5,-5,-3,4,8,8,8,-10,-7,-3,-10,3,4,7,9,1,6,4,-4,3,-8,-8,5,7,10,4,1,-7,-1,8,8,6,5,5,-8,-5,-9,7,2,8,1,1,-1,-8,-5,-6,6,-8,2,4,2,-10,-2,-7,-10,6,8,5,6,-6,2,5,-4,10,-4,7,4,9,6,-10,-10,8,-4,1,-8,2,-7,-9,7,8,-6,9,4,-5,1,-7,-10,3,9,5,-1,9,-3,10,10,5,-4,-5,10,1,3,-4,-4,-10,-3,2,3,1,-2,8,-10,7,7,2,-1,-9,-2,1,2,-9,-6,8,-4,5,-1,-9,8,-4,-9,-10,-9,7,4,7,7,4,9,-1,10,-3,9,-3,-8,-1,3,-7,2,6,-2,-5,-1,2,-8,4,-9,2,-9,-6,-4,-5,-8,-1,-8,8,2,-9,-10,-2,4,-10,-3,2,9,-10,-4,-10,-9,5,-10,7,4,-4,7,-7,-1,3,-9,-9,-2,1,-4,-8,-2,2,6,1,-5,6,-10,-2,-10,-9,7,-9,-7,-5,-1,-7,8,4,-9,3,1,-8,2,4,-5,3,2,-1,2,1,-10,8,-8,-9,-9,-2,4,1,-10,-8,-9,6,-4,-2,2,-10,4,10,10,10,2,8,-2,1,-8,-6,3,10,-9,-2,6,5,9,3,-5,-9,-6,2,-7,-1,-6,-4,7,4,6,8,9,-3,9,10,-10,-10,7,6,6,1,-2,-1,-6,-8,-1,6,10,-8,7,2,8,-6,5,-9,9,5,4,4,-10,-4,-9,-9,-10,-9,-9,-4,6,-10,-4,-3,10,4,-3,3,1,4,-8,10,-4,-4,-3,-7,-10,1,7,-5,-4,-10,9,2,-3,-1,-9,-8,3,3,-10,-6,-9,-2,-1,-3,8,-3,9,9,2,-10,3,6,-9,2,1,-8,7,7,9,-4,-5,3,2,3,-2,-7,-10,10,1,-7,-2,-5,6,-8,3,-3,-8,-10,10,6,-6,-8,-5,-6,-10,1,1,-2,9,6,-9,8,-5,10,4,9,7,8,4,10,-10,-10,8,-10,10,-7,-2,8,5,-5,4,-9,-1,-4,-1,-1,-5,2,2,10,-7,-5,-2,-8,-1,-6,-7,7,-1,3,5,-5,-6,6,10,-2,-3,-5,9,5,-6,-6,-5,-3,4,-10,-3,-9,-1,-6,3,5,-4,2,-4,5,8,-7,6,1,7,9,6,8,7,8,2,5,-6,3,-5,-1,2,8,-7,10,-10,-3,-10,-2,5,-6,-3,-6,1,-10,8,1,-1,-9,-8,4,1,2,10,-8,-6,-3,7,-10,9,-5,3,-8,-5,-5,-10,-10,-8,-2,-10,3,-5,5,-8,-2,-6,5,-3,4,-3,-2,5,2,8,-2,-4,-2,-3,-3,-5,1,2,-1,-10,4,1,6,9,1,-4,4,10,-9,7,8,-6,3,5,-2,8,-10,-1,-5,8,8,1,-10,-1,5,-10,2,-2,-4,9,-5,2,-6,-4,5,-8,-4,6,1,-2,5,-1,-9,-2,-1,-9,-9,-2,5,-7,9,-3,6,8,7,6,-3,-9,-10,-3,5,7,-2,9,6,8,-1,10,-8,-5,-8,9,7,-2,-10,-8,-9,-8,-4,8,1,5,7,-9,4,2,-6,1,-10,2,10,-4,3,-9,7,6,5,1,-9,-1,-6,-4,3,-8,10,2,10,-8,9,1,-7,5,-2,-6,-7,-3,9,7,-3,-6,7,-3,-7,1,8,-2,-2,-9,-5,3,-1,5,4,-5,-9,7,2,-4,-1,-4,8,4,-5,4,7,10,-4,1,8,-4,-8,4,3,8,4,4,6,-4,10,-10,5,-8,-6,-8,6,5,7,3,-9,5,-1,-5,-7,-9,-5,8,9,-1,-7,-1,-1,7,8,-7,9,8,10,-8,-4,-6,5,1,9,3,10,-7,10,8,-3,5,-8,-3,-8,-7,-9,-5,6,10,-7,1,7,-8,-3,-7,3,8,4,-2,-2,9,2,6,10,-3,-1,4,-4,6,-1,2,2,-7,-1,3,10,3,-3,-9,-6,-10,9,-4,-6,-10,1,3,4,-4,-1,-8,-6,-4,-1,2,7,4,-5,9,-9,8,-3,-5,-5,1,5,-8,10,2,4,1,-5,5,5,1,7,6,-2,-6,-2,-4,8,-10,1,2,-5,7,9,-7,-8,-10,10,4,9,-9,-8,-1,-5,5,-2,-3,1,6,2,6,-4,6,4,-5,1,-7,-7,5,9,9,-8,-8,-2,9,-8,7,-3,5,4,-2,4,-6,-6,-4,-3,-6,-7,10,-7,-7,-3,-8,-9,2,4,2,3,-10,1,4,1,4,2,-9,-2,7,-3,2,9,9,9,-3,9,1,-9,3,5,-10,-3,10,-7,1,-2,-4,-6,-6,2,5,-3,1,-3,4,6,-5,-2,4,-1,-9,-7,-8,6,8,-3,1,-1,-8,9,-2,-5,-3,3,-8,4,9,-2,6,1,6,-1,8,9,8,-9,4,9,-2,-7,-9,8,4,-5,8,8,-9,-10,3,-4,-7,3,-6,-9,7,9,-8,-3,8,5,-5,-1,4,-1,1,9,-8,-9,7,5,5,9,4,6,-4,-10,-5,-1,-10,-7,-8,9,1,10,-8,-3,10,6,5,-6,4,8,-6,-10,1,-9,4,-7,-8,2,-4,8,-6,-8,10,-2,1,-6,8,5,-1,-10,-4,9,-4,7,5,-1,-2,4,4,-6,5,-4,-8,-2,-5,6,-7,-1,-6,-8,6,4,10,-9,7,1,-9,-4,-6,-8,9,2,10,9,-4,9,-6,-7,4,-1,5,-2,7,-1,-2,-3,4,-7,1,-10,-2,-4,-5,-7,10,9,-9,8,-7,-10,10,10,-9,8,-4,6,1,-6,-2,5,-10,5,-7,7,4,5,-9,9,3,-1,-8,-2,-4,5,-9,7,-7,9,9,-10,-1,8,9,1,7,-8,6,3,-8,7,-1,7,1,3,-1,-3,-5,4,10,-5,-7,9,-3,-5,-3,8,-1,3,2,1,9,8,7,-8,-7,-2,-6,-8,-7,9,9,5,4,-1,-4,-10,6,-6,9,-8,7,-1,-2,1,3,-9,-9,2,2,10,4,8,-7,5,-8,-4,-4,9,3,-7,-10,-9,-3,-2,4,3,-3,10,-7,8,9,-2,7,10,1,-8,-4,-2,10,3,10,-4,9,5,-8,-1,6,-9,-7,5,-6,1,-2,8,8,5,-7,1,2,10,-8,8,-8,-7,8,3,4,4,4,9,-1,-10,-5,4,6,1,7,-7,8,10,-7,8,4,9,-3,-1,-5,5,-3,-7,-3,2,8,4,3,-2,6,2,-3,1,-9,10,-5,-4,-4,-5,9,-6,7,3,-6,10,6,-4,-5,4,-7,-8,1,-9,2,1,-3,10,-7,-10,9,-4,4,-5,3,2,6,-2,-5,4,-7,9,-10,-10,2,-9,-9,-8,-1,3,2,5,7,-7,-10,-10,-3,-7,-9,-1,6,-4,1,10,-4,-7,8,4,-1,10,9,-8,-10,-7,-1,-4,8,-2,9,-2,-4,-9,3,10,2,5,9,-6,-8,9,-3,6,10,-2,-3,2,-5,10,4,-4,-9,8,10,-6,-8,8,8,5,-6,-9,-3,-6,1,10,5,2,1,-1,-3,-1,-4,4,-7,-1,8,-9,10,1,1,-9,-3,2,10,-9,2,5,1,7,-2,10,-8,-1,4,10,-3,-4,9,-4,-9,1,5,7,-9,3,-5,-1,1,1,-6,-3,-1,9,4,6,-6,-3,7,6,-6,-7,-3,-2,-2,4,-6,-1,5,-5,-1,10,-2,-10,-5,-4,7,-10,2,7,-8,6,-7,1,4,10,-10,7,-7,10,-3,-3,-10,3,6,9,-2,-8,-1,10,4,3,2,6,6,1,4,2,-6,7,-6,8,9,-6,4,6,-9,3,-10,3,7,-7,-8,7,5,-8,10,10,1,-10,5,-4,-8,8,-6,-5,-4,5,1,-8,8,7,1,7,-5,-8,4,7,-8,1,-3,-8,9,9,-7,-4,2,-1,3,8,5,-10,-7,-3,9,9,-2,-1,8,9,-6,10,-6,-4,9,9,-7,4,-6,-8,-3,-9,2,6,-9,-7,7,4,10,-4,-9,4,-2,9,-5,2,-6,5,-10,-9,-5,3,-6,9,2,-7,-6,8,-9,-5,6,4,-10,-9,9,7,-4,8,-5,10,-10,-2,-7,-6,7,-9,-3,-2,-4,-1,-9,-9,-1,5,-5,7,1,4,8,-2,-3,6,8,7,1,4,-8,-2,-3,-7,3,4,1,-2,9,-2,9,-8,-7,6,5,-7,7,4,-6,8,2,3,-1,-2,1,3,-3,-4,6,-10,3,5,-5,-10,9,2,2,-7,-2,-3,5,2,7,-2,-9,-5,10,-2,9,7,2,1,9,-6,9,6,7,3,6,-8,-10,9,3,4,-5,-1,-4,-10,-10,-4,8,-2,9,-1,-5,-2,-4,-2,10,8,-8,-2,-1,3,-1,-2,-8,5,4,-2,5,-1,-3,-5,-8,10,-3,-8,7,8,8,-8,-8,2,7,8,-8,-2,-3,-3,9,7,-8,-8,6,-4,8,1,-4,-6,8,4,7,6,10,-1,5,-3,-4,-7,-7,-5,4,10,2,9,-2,-8,9,-8,-3,10,-6,-10,-1,1,1,-10,-3,-1,6,6,2,-8,-8,-10,3,1,-2,-2,-10,-9,-8,-6,-1,7,-6,7,7,-1,-10,-5,10,4,7,-4,-8,9,-4,-6,-1,-2,6,-9,7,-7,10,1,10,-1,-3,7,8,9], dtype = "uint32")#candidate|7004|(2496,)|const|uint32
call_7003 = relay.TupleGetItem(func_4268_call(relay.reshape(const_7004.astype('uint32'), [13, 16, 12])), 0)
call_7005 = relay.TupleGetItem(func_4270_call(relay.reshape(const_7004.astype('uint32'), [13, 16, 12])), 0)
func_4481_call = mod.get_global_var('func_4481')
func_4483_call = mutated_mod.get_global_var('func_4483')
var_7009 = relay.var("var_7009", dtype = "int8", shape = (1800,))#candidate|7009|(1800,)|var|int8
call_7008 = relay.TupleGetItem(func_4481_call(relay.reshape(var_7009.astype('int8'), [1800,])), 1)
call_7010 = relay.TupleGetItem(func_4483_call(relay.reshape(var_7009.astype('int8'), [1800,])), 1)
output = relay.Tuple([call_6995,call_7003,const_7004,call_7008,var_7009,])
output2 = relay.Tuple([call_6996,call_7005,const_7004,call_7010,var_7009,])
func_7038 = relay.Function([var_7009,], output)
mod['func_7038'] = func_7038
mod = relay.transform.InferType()(mod)
mutated_mod['func_7038'] = func_7038
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7039 = relay.var("var_7039", dtype = "int8", shape = (1800,))#candidate|7039|(1800,)|var|int8
func_7038_call = mutated_mod.get_global_var('func_7038')
call_7040 = func_7038_call(var_7039)
output = call_7040
func_7041 = relay.Function([var_7039], output)
mutated_mod['func_7041'] = func_7041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4972_call = mod.get_global_var('func_4972')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_7048 = func_4972_call()
call_7049 = func_4972_call()
func_3754_call = mod.get_global_var('func_3754')
func_3755_call = mutated_mod.get_global_var('func_3755')
call_7059 = func_3754_call()
call_7060 = func_3754_call()
output = relay.Tuple([call_7048,call_7059,])
output2 = relay.Tuple([call_7049,call_7060,])
func_7061 = relay.Function([], output)
mod['func_7061'] = func_7061
mod = relay.transform.InferType()(mod)
output = func_7061()
func_7062 = relay.Function([], output)
mutated_mod['func_7062'] = func_7062
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7080 = relay.const([[[-1,-10,7,7,3,-7,-4,10,4,-10],[-10,2,1,4,9,-5,-8,3,10,5],[1,10,6,9,-3,-10,-3,6,-2,5],[2,-4,-8,-4,-6,2,4,3,2,-2],[10,-10,8,-8,6,-4,5,7,-4,2]],[[3,-7,7,-6,1,-4,4,3,9,2],[5,4,-3,-5,-5,7,2,4,4,-6],[10,6,-5,-5,8,-10,3,-5,8,-3],[7,-8,4,6,-1,-4,4,4,7,-4],[7,10,-9,-6,4,-9,-7,-8,8,-10]],[[-8,-2,4,-4,5,6,1,4,10,8],[-9,-3,-3,-9,6,-1,-6,1,-9,1],[-2,-8,2,4,1,-3,10,-9,8,-7],[9,-1,1,7,6,3,-2,10,4,5],[9,-8,-4,5,4,6,-9,10,-10,7]],[[-4,3,-3,1,8,-5,-2,7,9,-7],[1,-10,-10,-10,9,6,10,-9,-2,-2],[-6,9,-1,3,-8,7,-4,10,7,-4],[-9,-10,-2,4,1,4,5,5,-10,6],[-9,-7,-7,-8,-1,3,-5,-9,-3,-10]],[[-10,-2,-10,9,-7,9,-7,10,-7,2],[-3,8,-7,-6,1,-7,-2,6,-7,-3],[-1,2,-1,5,3,6,10,5,-2,-10],[-6,-5,-5,10,7,8,-6,-5,-5,4],[8,5,5,-7,-10,1,-3,6,-9,-10]],[[10,2,10,-4,10,2,-2,-5,-8,4],[-1,-6,3,-10,10,7,-10,7,-10,5],[-1,-7,-6,9,-7,4,10,-10,-3,5],[4,3,-5,-6,-3,5,9,-6,4,-1],[-8,9,-6,-1,3,4,10,-1,-10,-9]],[[9,-7,-8,5,6,-5,2,4,-4,9],[-3,-3,2,9,3,5,4,2,2,-3],[5,7,-1,7,6,-3,1,-1,3,5],[9,-10,1,-4,9,-5,7,-4,-3,-6],[-9,7,6,-2,-9,5,-8,-3,-8,4]],[[-6,4,1,6,8,-2,-2,6,-6,-8],[-5,4,-9,4,4,5,-7,5,-8,1],[-4,3,-1,-5,7,-3,-6,8,2,3],[10,-7,-8,6,-5,1,9,5,-5,8],[-4,6,5,-7,6,4,9,-4,6,-2]]], dtype = "uint64")#candidate|7080|(8, 5, 10)|const|uint64
var_7081 = relay.var("var_7081", dtype = "uint64", shape = (8, 5, 10))#candidate|7081|(8, 5, 10)|var|uint64
bop_7082 = relay.bitwise_and(const_7080.astype('uint64'), relay.reshape(var_7081.astype('uint64'), relay.shape_of(const_7080))) # shape=(8, 5, 10)
bop_7090 = relay.equal(const_7080.astype('bool'), relay.reshape(bop_7082.astype('bool'), relay.shape_of(const_7080))) # shape=(8, 5, 10)
func_6150_call = mod.get_global_var('func_6150')
func_6154_call = mutated_mod.get_global_var('func_6154')
const_7097 = relay.const([5.920253,4.491031,-9.117563,0.337411,7.979222,5.229579,-8.578030,-5.176582,5.234862,9.088873,-7.655107,-9.006425,-1.036135,3.830019,-6.642146,-5.577719,-0.909234,-1.717202,1.648347,-6.646424,4.747151,3.345529,-5.401038,-6.120781,4.120348,5.671915,8.042538,-3.758595,4.164308,7.585409,-1.837925,-0.279061,-3.018625,-7.613899,-4.007732,-4.838936,-5.071511,8.710142,5.134302,0.280803,3.082583,-5.633595,-9.655360,-5.756022,-1.726728,-2.845430,-6.223766,-6.362009,4.528244,-6.398863,3.954096,-6.161149,-6.168867,-8.558759,8.269840,2.448407,-5.562283,7.130716,-1.263058,-8.809592,-1.618366,4.990464,7.953169,9.305359,-6.022722,-7.380907,-6.872844,-5.574711,-4.500124,-7.250027,-6.748642,-7.135305,7.985090,9.882708,-1.877222,6.881900,-4.757627,7.656614,-5.531238,0.721034,-5.067286,-4.530825,-7.031323,-6.168924,1.833523,-4.073307,-9.009056,-7.995528,-8.425324,0.275685,5.218336,3.738162,2.889164,-6.905482,1.202348,3.990213,6.220822,-9.521698,-8.139079,4.985851,4.345528,4.322435,-1.484749,-0.005230,3.242067,5.402961,-8.759924,1.070554,3.416393,1.024624,0.150158,4.826556,-3.942388,-3.007341,-7.991657,-7.246622,2.203588,7.065205,2.758110,-5.667397,2.468416,6.150436,7.867677,2.276826,-6.732825,4.461681,7.596354,5.243513,6.794161,-8.128212,6.123789,6.684016,-0.294270,-8.684015,-6.577006,1.873511,7.044808,5.084157,3.945045,0.103399,0.968553,9.324588,2.529200,-3.356246,-2.749871,-3.764042,1.172692,-1.877526,-6.007368,5.970592,8.420949,-3.429205,-0.614860,5.325683,1.814407,5.411609,-8.768329,4.955694,3.192024,-5.085349,0.243359,7.550728,-2.997688,-2.058545,0.659851,-6.089211,-8.231785,6.687867,-9.444355,-7.634682,4.754713,8.811387,-9.409407,-7.583719,-4.599652,7.539106,0.607481,4.385503,-3.528179,2.606383,7.780574,4.542089,-9.004600,-1.907529,4.383589,-3.377858,8.816235,-9.397175,0.990169,6.164890,9.241363,1.147867,-9.742469,5.102823,-9.147803,-6.871514,-3.825587,-4.488586,-9.401494,3.254984,6.353035,-0.058206,4.453482,8.452276,2.549872,4.822041,3.866450,-0.672453,3.584609,6.161194,-3.950136,7.335671,7.836243,5.271175,9.041116,7.685770,2.132841,5.952655,8.760537,6.736741,4.732607,7.556060,6.449275,-6.351267,3.549525,-6.552604,0.083520,-8.271233,6.529090,-9.015177,3.191205,-7.229453,-7.185683,5.215405,-2.136952,-9.513224,7.743033,-1.096274,3.654506,0.659083,-7.287030,-4.809465,-9.531744,-0.462028,9.555688,-6.777870,7.768065,0.689582,-3.778403,8.173733,6.065275,-6.870676,2.799532,4.629757,-5.418128,-9.485172,-2.281074,-8.064200,8.254419,2.697979,-4.645797,3.286120,-1.917984,5.194011,-6.282560,8.792200,-9.700950,-2.575468,-6.075091,3.304073,3.932920,-2.925904,-5.241411,-1.589797,8.239282,-1.915922,6.914881,1.171525,-2.265090,-9.664282,2.274200,-5.506364,5.733519,-9.819230,-4.300465,-8.244807,5.252416,-5.063860,-1.087032,0.203748,-3.775692,3.263637,-2.448914,3.418739,5.259279,2.192959,5.280489,-4.966026,-9.955064,-8.055663,-9.523119,-8.888849,2.850404,-2.787305,1.039187,-7.898669,9.546462,7.643451,-7.286531,0.439483,-3.753528,4.778040,-9.891374,9.104775,-7.059023,-6.877899,-3.378356,-5.650189,3.991176,7.772808,-3.580660,-4.266374,6.539233,4.345484,-9.574036,0.800650,2.954489,-3.512957,5.144378,9.428183,5.725497,-1.883075,-8.223175,-5.199707,5.173285,6.910499,1.872851,-2.763477,5.408173,-0.553661,-8.865438,8.288051,-8.821386,1.355558,8.212366,8.467290,-7.385307,-1.681340,-4.448176,-0.209121,3.364176,-3.615492,3.703516,1.308966,-3.085022,-6.274309,-4.081858,0.314163,8.333398,-6.893027,9.033790,-6.565453,2.306164,-5.444107,9.177527,-0.168713,-3.231012,3.368540,7.836190,2.570743,-2.484020,-5.236706,0.376287,-4.276312,-2.146586,7.983152,-7.344575,-1.531031,-1.852386,-2.529627,2.734618,-2.720836,9.055349,-0.511147,2.376494,-7.913432,0.385454,-3.376741,-7.592056,-4.015841,1.019834,-4.696517,0.151187,9.236137,-4.551178,7.510392,-0.910369,7.650981,9.175135,-5.829577,4.422553,-6.636476,0.032716,3.517857,6.400665,9.917713,5.889385,6.284952,-5.910686,3.337184,-1.855007,-3.647440,-9.210521,-6.846230,1.478429,-3.856855,0.252229,-2.774433,6.151274,8.601922,5.865164,6.083058,-8.988554,8.977923,-9.940981,6.466628,2.484578,4.335680,-4.511387,8.474147,4.082146,-0.823071,-9.967614,4.717383,7.937878,4.437253,2.036575,5.985425,9.620029,-8.248188,5.798516,-3.728959,-2.934001,4.775613,4.922667,-2.609576,-5.408261,0.658387,4.518342,2.068716,4.843767,3.303186,3.165892,1.536125,9.448994,-5.673014,9.682704,8.657764,9.053086,-6.460698,6.282174,4.325512,-6.476872,4.940432,9.948195,-8.779630,6.120726,-7.996881,-2.859025,3.413663,3.676906,5.641978,-8.453485,-6.741632,5.387592,-7.068847,-9.815176,-0.943078,-8.676539,-2.355367,-1.399296,3.124282,2.871886,5.365725,6.584420,7.887379,-5.839612,5.391597,-0.820566,-4.984357,9.091052,-2.882801,-7.625832,-1.583393,-0.837882,4.024460,2.179736,-7.437106,-8.952015,-9.825996,-5.907328,-2.859249,-2.639995,3.734352,-8.581984,-4.418225,-4.431283,8.523259,-4.880536,-5.187734,-7.090031,1.447336,-7.025067,-5.100602,2.625020,-7.560489,7.426088,2.976357,-9.198832,-5.640119,-6.768026,-0.379941,9.954287,-3.822642,1.701918,0.931188,-5.529071,5.434965,-3.720971,6.252483,4.032048,-2.852026,-0.984942,-5.189578,-7.206908,5.649815,-9.616350,-6.145696,1.177313,4.431532,9.626210,4.774013,3.098192,-0.906382,-1.647415,-5.159842,9.543106,-0.063308,-1.517290,-9.563162,4.382583,3.019899,-6.277788,-6.672646,-0.901942,-9.614340,-5.013697,6.842843,0.540933,9.255920,0.269324,5.771795,-1.164567,0.184775,-4.761368,-5.599333,2.067873,5.693469,4.752777,-1.525532,8.277425,6.722924,-5.881203,-1.742857,-1.469351,9.499327,8.440306,-5.775429,0.784441,-8.277308,3.452050,0.064530,-1.525759,-2.542679,-6.291470,-7.776708,-6.687038,7.552117,-1.536251,-8.660767,-9.728181,4.718351,-1.236804,7.829941,0.712838,5.894155,-0.536375,6.345296,-2.994184,-5.784409,-8.498460,-3.889774,-2.752934,7.034815,4.406059,7.085073,-2.804936,8.108675,-8.697709,-1.480083,-8.562873,1.229951,-6.352061,-7.819563,-6.590631,-8.900348,2.647243,5.691929,-5.271749,-9.315207,-1.009547,8.226431,-6.108015,8.258110,-1.297298,-2.769469,-9.917252,8.978000,5.157715,7.314508,4.545951,-5.966723,-5.309052,-2.304396,1.844752,1.725052,5.810005,-4.617901,4.218237,-5.921061,7.954989,2.893961,-2.663010,-9.591807,-2.720367,-8.731675,8.363394,-0.709684,-5.030263,5.165707,0.752497,-9.937806,1.474175,2.492403,-4.766536,-2.184955,-7.404584,7.051467,1.699650,-1.127050,8.159917,8.817993,-5.763573,7.890727,-0.331062,-3.038680,7.807760,-1.209506,0.035309,6.941023,-2.250135,4.904039,8.638872,0.685628,-2.184734,-3.909534,-3.603616,2.606153,1.286955,-1.218132,3.357271,-1.577305,7.840302,2.219231,-0.906227,-8.079982,8.852547,4.006454,2.643950,7.307556,3.142724,3.761231,6.850219,-6.005749,5.281903,-0.618462,1.656237,3.174815,-0.419292,5.005945,-1.558761,2.916598,3.621976,-6.637433,8.597128,-3.429804,-7.923736,6.731446,-4.111147,-9.779113,-9.847317,-9.764845,8.196834,-7.864626,7.546809,-8.870545,1.403866,3.458897,5.641349,0.561765,7.072082,0.185981,-7.928771,9.973686,-7.604732,-5.432799,-0.398215,-2.103614,5.078684,7.107110,-7.748724,-8.385913,1.675069,-5.931650,8.941316,-8.534584,6.085821,-6.190468,-0.490373,6.562532,-3.451002,6.649534,-3.992312,-9.469539,-6.929654,-2.261928,-9.071684,-2.667251,-6.408683,-6.583499,1.965192,-7.096172,-3.804933,-4.896184,-3.919649,9.266016,8.702328,-7.302666,-1.374216,6.882275,-0.986799,5.352530,-5.898711,2.035321,-4.343783,9.089577,-6.477844,-6.359370,-2.051797,8.899980,-2.567373,7.423280,6.038700,-4.510860,8.533496,-3.669270,1.115763,-8.598500,0.584530,3.079895,6.619524,8.745050,-9.081819,-8.712449,-4.388779,-7.005343,-4.454535,5.949064,6.641238,4.161856,0.684003,-9.466082,9.891187,4.209710,-4.923961,-1.285479,3.332517,7.969790,0.733041,-7.928638,1.555815,6.149960,7.638401,5.577984,-9.115735,7.026988,-3.490300,-0.601802,-2.012543,2.237099,-1.942189,-7.078452,8.175278,-6.390490,4.962595,3.064625,9.737349,-0.621078,1.621897,5.268691,-5.689744,6.499278,-7.906354,-1.603488,8.554630,-8.823234,7.337127,1.101516,-8.585127,2.075925,6.116014,6.612570,0.839823,7.028293,9.663910,-5.282542,3.823331,3.859202,-5.235361,-8.706239,7.546510,7.685104,4.850849,7.216523,-9.124012,0.138976,5.043983,-7.020837,-2.893435,5.706257,-8.098318,3.944008,-4.089458,-7.968916,-7.763420,-0.274527,3.303571,-7.140987,8.407093,-6.946682,-3.230927,2.500173,-8.133253,8.823479,6.767721,0.166643,-0.424124,7.162582,8.400889,3.156440,-8.656017,8.274758,-4.243551,-6.127000,9.695766,9.871314,-9.023084,-0.416070,6.673097,3.432831,-4.694488,-1.384566,2.744247,5.559381,9.270054,-0.728609,2.781616,8.556095,5.998772,7.267355,8.516526,-6.156824,4.102241,-6.634161,-8.305029,2.320680,-8.573684,-3.781502,7.406603,-0.860384,-6.308626,-6.707455,-0.729634,7.451894,5.784685,5.724337,-0.581529,-3.122781,-9.090409,-6.729172,-8.266623,1.547700,9.083469,-4.105375,-9.248617,-0.877757,6.929758,-1.437320,-7.928457,1.589986,-8.526673,-3.755301,-5.038466,-9.343645,-8.085634,-0.427065,-6.667463,1.283963,1.336775,-0.556307,9.894455,-0.547730,9.764724,-6.968830,3.505074,6.273471,-1.577337,-1.121768,-2.129252,4.695630,6.849959,8.698820,-3.978962,1.508115,-4.068853,6.488276,-7.547031,-3.707604,-4.216992,-6.357177,-5.321538,7.323521,3.665117,4.368665,-0.644025,-8.367259,-9.491730,1.198939,7.739134,-1.122000,-9.239689,2.599068,-1.675565,-1.234774,-8.030540,-7.356631,-4.564579,-7.332066,3.537791,4.201476,-9.837012,0.005094,6.759869,0.025896,5.798857,-5.065743,5.953755,1.660539,1.353679,-6.337243,-8.638026,-3.608158,-7.007854,-5.405627,-2.131806,9.780838,-8.583480,-7.108490,0.639375,-6.233402,5.898939,-2.905121,-2.292519,-7.893079,7.821148,2.640062,9.713464,-6.630704,-8.278152,2.065621,-3.221131,-4.621448,1.872823,-8.659329,-4.554925,-3.550891,1.066944,5.812619,-9.497844,2.298282,-6.477904,5.356510,-9.381806,-9.073038,-1.543123,-2.451356,-2.732535,9.223072,2.777894,4.445249,-8.697122,4.692889,-7.462501,9.110704,7.503254,7.636774,-4.909918,2.021587,-8.495552,2.720676,-6.857888,-6.967913,-2.245211,-1.678765,0.885697,-5.114698,9.205486,-4.753691,-5.850732,-5.429417,-5.735473,8.026272,-8.132887,-6.727995,-8.040972,-4.768183,7.289701,-8.696574,-5.403491,4.767523,-6.160260,-2.066798,2.311516,0.088719,-0.201559,9.031960,7.132499,7.619843,-4.030580,7.402601,-3.867714,2.244932,-2.086388,5.489726,-8.271660,-3.421104,-0.137028,2.783824,8.627525,4.335477,-7.216942,0.383353,-9.314713,-8.118233,-7.556040,3.716284,6.198543,-4.499144,-8.779337,-5.919264,-9.213088,0.370437,6.234921,-7.141344,-9.006569,2.297038,5.740826,-1.466783,1.277290,-0.903639,-0.617929,-9.987653,-5.152014,3.077383,3.250988,4.515678,2.988296,-4.829846,9.417206,1.334363,3.081562,7.031832,0.730895,-2.818095,-7.254711,-8.064126,-5.240106,-9.979372,1.078622,-4.944428,2.562631,-3.426935,-7.480083,-9.127911,-2.156385,9.476345,-1.161371,-0.384101,8.508986,-5.583620,5.326937,-0.247591,-0.124579,-2.782815,0.510544,-7.597783,-4.945309,3.219096,1.066894,3.451259,4.574411,9.763780,8.570365,-3.389943,-2.378704,-1.042387,7.585087,-8.141806,6.581542,-7.618425,7.926537,7.589862,5.181094,-5.042914,-2.374568,-5.579594,1.664491,9.316839,0.178179,7.213243,7.155368,2.512494,-5.945817,-1.745555,-1.635071,-8.757293,1.135024,-3.597603,-6.653210,9.711686,-5.415625,6.120270,-8.339610,-5.867816,-0.684932,2.695605,5.992578,-0.345745,-9.686090,9.327212,0.474338,-9.927188,2.151700,-4.816092,-1.330949,3.352089,5.724986,-6.135205,5.878619,-5.944283,-9.783046,4.167693,-3.028734,5.855440,-4.175025,-1.776925,9.495739,-1.218428,3.878199,-3.633091,5.124527,-9.137193,-3.752926,-5.166897,1.374807,6.999486,-9.095273,2.543622,7.464951,-9.450649,7.373741,9.079842,5.182030,2.083542,-2.772615,-8.227933,0.858613,9.037842,8.954889,-9.398860,-5.053948,-3.471643,-2.788555,5.248592,2.649680,-4.168612,-2.521086,8.616658,3.275121,-7.876956,-3.430135,6.176771,4.557443,-7.843476,-5.614223,2.763299,-8.088872,-0.638272,0.806124,-4.340683,2.784474,4.685667,6.647424,6.534198,-3.076481,-0.126397,2.973867,-7.573702,-2.067171,7.910297,9.578142,9.257962,5.747560,2.134003,-7.763110,8.231495,-1.428322,2.515684,2.542918,-5.470071,8.322802,-2.557753,4.274559,2.478043,5.807996,-9.881199,-2.544253,9.721674,7.354127,-3.206906,-6.108755,5.501399,3.622648,-7.761239,-2.900227,-3.649750,-2.372050,-3.707277,4.934776,5.405599,-6.286850,-9.484328,-7.884420,-1.082698,-8.026952,4.276611,-9.907347,5.255399,5.265348,-2.918596,-3.509788,8.030802,-6.410478,-2.616261,-6.446264,-4.602479,-0.604571,2.680852,-8.996428,-4.239162,-4.612758,-1.874827,2.196573,-3.684313,1.344954,-4.374837,2.781831,-5.789991,2.043478,-0.557915,8.744247,-8.773397,5.017551,-5.246238,-7.571462,-3.097321,-3.545230,3.524320,-4.237519,-6.439968,9.346709,4.679135,2.905066,-8.635064,0.777697,-1.662256,6.025724,-5.310280,-5.869616,8.097511,3.063316,9.088586,-7.497963,0.359977,2.343659,-5.059249,-0.870112,6.536055,-2.964201,-2.872200,-8.959316,-5.220411,-7.551615,-0.760671,7.527285,4.682693,2.451910,-3.964951,9.818339,-1.125165,7.148077,2.908195,8.181668,6.946936,-9.188995,8.794306,-8.387929,8.487670,-2.569329,0.094157,2.513954,-5.275315,-8.807664,-7.019088,8.609607,-4.684892,4.901084,-8.370833,-5.910195,-8.356872,-7.870225,-8.198780,3.442427,3.909720,4.418981,1.333870,0.185489,-4.441776,-1.823773,5.400914,3.978649,9.656239,-4.754510,0.903019,7.162469,1.693436,4.805104,1.767957,4.129186,-6.727479,3.303989,6.779159,-1.512663,-3.225090,-8.212480,-5.960762,7.030951,5.775665,3.625790,3.528452,-8.478535,-8.237280,-6.862490,2.849093,-1.488557,-3.443113,0.496894,-9.653858,3.455046,4.245420,1.733659,-6.678455,5.440223,-6.682932,-0.070038,5.306976,-0.309424,5.217809,7.083224,7.468365,-4.203861,-0.638254,7.616415,7.963922,7.840679,5.483248,-4.395058,-7.127258,6.919387,7.367384,-7.353767,-4.682139,-1.297764,0.849165,-0.646214,-2.352650,-3.109997,8.044148,1.458173,6.058737,2.620457,9.689963,-9.545837,1.639373,-5.866010,5.297077,2.518181,-4.202413,7.592148,-0.359917,-3.377790,7.175076,2.914538,-6.957190,5.002016,3.610925,-4.636817,2.002372,-9.348563,-9.989003,2.897443,8.506453,-6.608770,-7.719857,4.568281,2.080068,6.366315,7.572256,3.553036,-5.121965,8.648121,9.392858,-7.276809,-7.332332,2.372063,-6.176469,-1.319121,-4.101725,1.063505,1.847491,9.196409,-1.545163,8.079731,1.878454,9.255422,3.028496,5.853345,1.034874,3.330386,7.361847,-6.620004,9.201676,7.782997,1.010143,9.753912,-0.098167,-2.226122,8.184877,-8.411338,-7.392380,-3.533420,-4.122182,0.412402,-0.858286,7.925284,6.876014,9.335029,-1.887441,-9.880646,0.463361,-8.397066,-6.261978,-7.096577,-6.709784,-1.774676,-1.833899,4.985227,1.331259,-2.125799,9.847534,8.851035,-5.561564,-5.695897,7.699553,-3.756643,-0.345711,-4.095719,0.151770,-0.568205,7.564910,0.300129,-8.880285,-2.356613,2.792149,1.415617,-5.383316,1.195817,6.129275,-1.355800,6.992903,6.855837,7.538425,-5.497463,-1.633954,2.397893,-8.303351], dtype = "float32")#candidate|7097|(1536,)|const|float32
const_7098 = relay.const(-3, dtype = "int32")#candidate|7098|()|const|int32
const_7099 = relay.const([-4,-8,3,-4,-1,-6,-10,10,-10,-8,6,4,1,3,8,9,6,2,3,10,5,-2,4,2,-2,5,-4,-9,-2,2,-6,-3,-10,2,9,5,9,-2,3,8,-6,7,-3,-6,9,-4,-1,-7,-10,-2,4,-4,9,5,9,9,-6,7,3,4,-3,6,3,-5,-4,-1,-8,-1,-10,3,10,7,8,-7,9,-2,-10,-8,-4,6,-4,6,2,3,4,1,7,1,-4,-8,-10,9,9,-2,2,10,-5,-10,-4,8,6,-1,1,-8,-2,10,-7,1,6,-10,3,4,6,6,-8,9,8,-7,-4,4,3,8,-10,-7,-4,5,-7,-9,5,-7,4,7,6,2,10,3,-9,3,-2,6,-7,5,-1,1,2,1,1,-9,-3,-6,7,6,2,5,-2,-10,-3,-7,1,-2,-3,10,-2,-1,-10,-8,8,-2,7,-2,2,10,-7,2,2,-1,-1,-10,-2,8,10,8,3,-8,-1,9,-2,-1,-5,-9,10,-3,2,4,6,5,-9,4,5,2,4,-9,10,7,2,-4,7,3,-3,-5,-8,-7,-3,9,-4,-4,-2,-5,3,-8,2,-7,-9,10,7,3,4,-4,-10,5,-6,2,-3,8,3,-1,8,-1,10,3,7,-5,-5,-9,2,10,-4,3,1,3,9,-6,4,8,-1,1,6,-10,-3,-7,-5,-2,-1,-8,10,6,-7,-8,4,-3,4,4,10,-2,-4,-9,-10,-10,7,5,1,-7,-6,9,1,-6,6,7,-1,-8,-10,4,9,10,3,-3,9,-5,5,6,6,2,-9,7,-10,6,3,9,-5,-7,-4,-7,10,-7,-3,-2,-4,-10,-3,-2,-3,2,-10,7,-8,6,-3,-5,2,-8,5,-6,4,2,5,10,-4,-2,-3,-10,3,5,8,9,-3,6,4,-9,-10,-6,4,-10,10,3,-3,6,-10,2,-2,7,-5,-3,7,-9,-10,-9,-1,-5,3,4,-4,1,-1,1,3,9,10,-9,4,1,1,10,-1,4,-6,1,9,3,7,3,9,6,-4,6,2,-1,1,6,-8,-7,9,4,10,-7,-9,-4,4,10,6,-3,-5,-1,6,8,8,-8,-3,-4,-8,-9,3,7,-5,3,-3,2,-1,-6,-2,2,-2,-6,3,-10,-1,9,-4,1,-3,3,-3,8,9,2,10,1,6,-9,-7,1,-7,2,-9,1,7,10,2,-5,-1,4,3,-3,3,10,-10,8,3,1,2,8,9,-1,-5,1,5,9,-1,7,-6,-3,-7,-8,-10,-6,10,-6,-1,9,3,-4,-5,6,-7,9,-9,-2,3,9,-8,8,9,6,-2,8,6,6,6,9,-5,9,-3,8,-10,1,-2,-5,-4,-10,7,-2,1,4,7,1,2,-4,10,10,1,-7,10,-5,-2,-1,-5,1,8,-3,1,-9,-5,-7,-6,-6,-10,-1,4,7,1,6], dtype = "uint16")#candidate|7099|(550,)|const|uint16
call_7096 = relay.TupleGetItem(func_6150_call(relay.reshape(const_7097.astype('float32'), [1536,]), relay.reshape(const_7098.astype('int32'), []), relay.reshape(const_7099.astype('uint16'), [550,]), ), 4)
call_7100 = relay.TupleGetItem(func_6154_call(relay.reshape(const_7097.astype('float32'), [1536,]), relay.reshape(const_7098.astype('int32'), []), relay.reshape(const_7099.astype('uint16'), [550,]), ), 4)
bop_7102 = relay.bitwise_xor(const_7098.astype('int16'), var_7081.astype('int16')) # shape=(8, 5, 10)
func_1323_call = mod.get_global_var('func_1323')
func_1326_call = mutated_mod.get_global_var('func_1326')
const_7106 = relay.const([[2.622083,9.514805,5.214013,-2.631068,2.504007,0.442408,-6.791382,6.193593,2.531598],[-7.046017,6.057946,8.948657,8.074250,3.883708,-2.261369,4.859019,8.186655,8.064780],[-2.323134,3.938840,-1.078511,-9.677370,-1.651680,-1.267609,-4.926941,1.479115,-4.573723],[-4.439379,2.007795,3.703275,-4.522878,6.293475,7.232306,-9.682887,-0.275229,1.648373],[-4.528527,3.754711,-6.946250,7.573050,-0.230564,-9.664489,8.589908,-1.815029,-9.604004],[-6.940000,-5.684218,-7.809838,-2.154234,-5.198987,-4.271728,-6.950909,7.728295,8.555273],[8.734037,-8.791208,6.869532,-4.341934,-9.604297,4.797315,-9.988396,1.156134,-2.242357],[0.819778,-1.058100,9.013478,9.115380,9.946936,-8.682847,-2.318166,5.144105,1.375240],[6.890560,-0.574265,7.628891,-4.848956,6.030165,-1.969054,3.838278,5.082818,1.815126],[-7.831710,-5.953068,7.349365,-7.562116,-1.370331,3.367683,-1.410130,-3.409892,-7.278361],[2.808331,4.099352,-8.495890,-2.793126,1.922727,7.381954,-8.553483,-6.051706,5.166601],[8.364860,2.485259,-6.892412,-4.969755,-5.533984,3.484614,-9.969815,5.223364,1.468421],[3.242313,-8.778927,8.573962,-5.679214,0.628657,-2.192316,-8.130007,5.113868,-7.406694],[-7.297106,-1.818400,7.976332,0.907406,-9.196915,2.112805,-4.544680,6.007926,-3.992586],[-7.197960,5.091896,0.455307,1.986592,2.580233,0.572095,-4.310785,-3.279096,-9.134247],[-3.530276,4.847457,3.499296,-2.711561,-7.691462,-9.398914,0.663842,5.757604,-5.301688],[-6.625728,-3.241289,-0.906416,9.137083,-1.278438,-3.247694,1.152463,-4.521912,6.931955],[-5.886398,-4.656881,-8.496510,2.439649,1.711059,-0.703687,2.692217,5.385110,-7.665121],[4.604371,-6.076046,-6.106522,8.120235,1.917397,-9.330681,7.005925,2.004391,2.968488],[-8.485860,5.490828,5.805470,0.015088,-6.292414,8.571284,0.598108,2.947857,-6.697565],[-3.407871,8.305844,9.272671,-5.637937,-8.376194,-9.487018,6.812701,-4.335968,3.930976],[-7.362781,-3.760590,7.766606,-8.262149,8.617130,4.347918,2.905556,7.874957,4.054933],[-6.283789,8.419632,8.149647,8.708803,-5.326438,9.722107,7.765268,-7.250169,8.541150],[5.745895,-7.723571,2.612634,-5.184913,7.495634,1.485353,6.120264,2.742928,7.573039],[-8.495155,9.947290,-5.951389,-1.133721,9.566321,-1.736577,4.384180,-6.520328,-6.845109],[4.080089,-0.577672,-1.610987,6.057830,9.768373,-9.501927,-1.916080,0.565170,0.823786],[-3.531455,-8.287398,-4.923173,-4.071049,-4.633645,-3.514938,-4.992627,-5.964726,-8.206097],[9.300599,-2.649603,-9.465314,0.810319,5.822009,5.681761,-6.688088,7.231691,4.939885],[0.372959,6.834480,-1.169854,-2.111398,2.905846,0.552113,8.226745,7.644281,1.450474],[-0.321367,-0.367261,-9.445761,-6.645087,-5.064211,9.508104,-8.482781,4.702198,-2.060865]], dtype = "float64")#candidate|7106|(30, 9)|const|float64
call_7105 = func_1323_call(relay.reshape(const_7098.astype('float64'), []), relay.reshape(const_7106.astype('float64'), [9, 5, 6]), )
call_7107 = func_1323_call(relay.reshape(const_7098.astype('float64'), []), relay.reshape(const_7106.astype('float64'), [9, 5, 6]), )
func_4865_call = mod.get_global_var('func_4865')
func_4867_call = mutated_mod.get_global_var('func_4867')
var_7111 = relay.var("var_7111", dtype = "float64", shape = (384,))#candidate|7111|(384,)|var|float64
call_7110 = relay.TupleGetItem(func_4865_call(relay.reshape(var_7111.astype('float64'), [2, 16, 12])), 1)
call_7112 = relay.TupleGetItem(func_4867_call(relay.reshape(var_7111.astype('float64'), [2, 16, 12])), 1)
uop_7118 = relay.log(const_7099.astype('float32')) # shape=(550,)
output = relay.Tuple([bop_7090,call_7096,const_7097,bop_7102,call_7105,const_7106,call_7110,var_7111,uop_7118,])
output2 = relay.Tuple([bop_7090,call_7100,const_7097,bop_7102,call_7107,const_7106,call_7112,var_7111,uop_7118,])
func_7141 = relay.Function([var_7081,var_7111,], output)
mod['func_7141'] = func_7141
mod = relay.transform.InferType()(mod)
var_7142 = relay.var("var_7142", dtype = "uint64", shape = (8, 5, 10))#candidate|7142|(8, 5, 10)|var|uint64
var_7143 = relay.var("var_7143", dtype = "float64", shape = (384,))#candidate|7143|(384,)|var|float64
output = func_7141(var_7142,var_7143,)
func_7144 = relay.Function([var_7142,var_7143,], output)
mutated_mod['func_7144'] = func_7144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3835_call = mod.get_global_var('func_3835')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_7250 = func_3835_call()
call_7251 = func_3835_call()
output = relay.Tuple([call_7250,])
output2 = relay.Tuple([call_7251,])
func_7267 = relay.Function([], output)
mod['func_7267'] = func_7267
mod = relay.transform.InferType()(mod)
mutated_mod['func_7267'] = func_7267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7267_call = mutated_mod.get_global_var('func_7267')
call_7268 = func_7267_call()
output = call_7268
func_7269 = relay.Function([], output)
mutated_mod['func_7269'] = func_7269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6579_call = mod.get_global_var('func_6579')
func_6580_call = mutated_mod.get_global_var('func_6580')
call_7282 = relay.TupleGetItem(func_6579_call(), 0)
call_7283 = relay.TupleGetItem(func_6580_call(), 0)
uop_7313 = relay.sigmoid(call_7282.astype('float32')) # shape=(11, 7, 6)
uop_7315 = relay.sigmoid(call_7283.astype('float32')) # shape=(11, 7, 6)
func_3654_call = mod.get_global_var('func_3654')
func_3657_call = mutated_mod.get_global_var('func_3657')
var_7324 = relay.var("var_7324", dtype = "int8", shape = (1800,))#candidate|7324|(1800,)|var|int8
call_7323 = func_3654_call(relay.reshape(var_7324.astype('int8'), [8, 15, 15]), relay.reshape(var_7324.astype('int8'), [8, 15, 15]), )
call_7325 = func_3654_call(relay.reshape(var_7324.astype('int8'), [8, 15, 15]), relay.reshape(var_7324.astype('int8'), [8, 15, 15]), )
func_5613_call = mod.get_global_var('func_5613')
func_5615_call = mutated_mod.get_global_var('func_5615')
call_7340 = relay.TupleGetItem(func_5613_call(), 0)
call_7341 = relay.TupleGetItem(func_5615_call(), 0)
output = relay.Tuple([uop_7313,call_7323,var_7324,call_7340,])
output2 = relay.Tuple([uop_7315,call_7325,var_7324,call_7341,])
func_7358 = relay.Function([var_7324,], output)
mod['func_7358'] = func_7358
mod = relay.transform.InferType()(mod)
mutated_mod['func_7358'] = func_7358
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7359 = relay.var("var_7359", dtype = "int8", shape = (1800,))#candidate|7359|(1800,)|var|int8
func_7358_call = mutated_mod.get_global_var('func_7358')
call_7360 = func_7358_call(var_7359)
output = call_7360
func_7361 = relay.Function([var_7359], output)
mutated_mod['func_7361'] = func_7361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7267_call = mod.get_global_var('func_7267')
func_7269_call = mutated_mod.get_global_var('func_7269')
call_7373 = relay.TupleGetItem(func_7267_call(), 0)
call_7374 = relay.TupleGetItem(func_7269_call(), 0)
func_3835_call = mod.get_global_var('func_3835')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_7386 = func_3835_call()
call_7387 = func_3835_call()
bop_7394 = relay.maximum(call_7386.astype('float32'), relay.reshape(call_7373.astype('float32'), relay.shape_of(call_7386))) # shape=(1, 16, 12)
bop_7397 = relay.maximum(call_7387.astype('float32'), relay.reshape(call_7374.astype('float32'), relay.shape_of(call_7387))) # shape=(1, 16, 12)
bop_7398 = relay.less_equal(call_7373.astype('bool'), relay.reshape(call_7386.astype('bool'), relay.shape_of(call_7373))) # shape=(1, 16, 12)
bop_7401 = relay.less_equal(call_7374.astype('bool'), relay.reshape(call_7387.astype('bool'), relay.shape_of(call_7374))) # shape=(1, 16, 12)
output = relay.Tuple([bop_7394,bop_7398,])
output2 = relay.Tuple([bop_7397,bop_7401,])
func_7404 = relay.Function([], output)
mod['func_7404'] = func_7404
mod = relay.transform.InferType()(mod)
mutated_mod['func_7404'] = func_7404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7404_call = mutated_mod.get_global_var('func_7404')
call_7405 = func_7404_call()
output = call_7405
func_7406 = relay.Function([], output)
mutated_mod['func_7406'] = func_7406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4950_call = mod.get_global_var('func_4950')
func_4952_call = mutated_mod.get_global_var('func_4952')
call_7437 = relay.TupleGetItem(func_4950_call(), 0)
call_7438 = relay.TupleGetItem(func_4952_call(), 0)
output = call_7437
output2 = call_7438
func_7454 = relay.Function([], output)
mod['func_7454'] = func_7454
mod = relay.transform.InferType()(mod)
mutated_mod['func_7454'] = func_7454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7454_call = mutated_mod.get_global_var('func_7454')
call_7455 = func_7454_call()
output = call_7455
func_7456 = relay.Function([], output)
mutated_mod['func_7456'] = func_7456
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7486 = relay.var("var_7486", dtype = "float64", shape = (5, 6, 5))#candidate|7486|(5, 6, 5)|var|float64
uop_7487 = relay.acosh(var_7486.astype('float64')) # shape=(5, 6, 5)
uop_7489 = relay.exp(var_7486.astype('float64')) # shape=(5, 6, 5)
bop_7497 = relay.power(var_7486.astype('float64'), relay.reshape(uop_7489.astype('float64'), relay.shape_of(var_7486))) # shape=(5, 6, 5)
output = relay.Tuple([uop_7487,bop_7497,])
output2 = relay.Tuple([uop_7487,bop_7497,])
func_7505 = relay.Function([var_7486,], output)
mod['func_7505'] = func_7505
mod = relay.transform.InferType()(mod)
mutated_mod['func_7505'] = func_7505
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7506 = relay.var("var_7506", dtype = "float64", shape = (5, 6, 5))#candidate|7506|(5, 6, 5)|var|float64
func_7505_call = mutated_mod.get_global_var('func_7505')
call_7507 = func_7505_call(var_7506)
output = call_7507
func_7508 = relay.Function([var_7506], output)
mutated_mod['func_7508'] = func_7508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5037_call = mod.get_global_var('func_5037')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_7520 = func_5037_call()
call_7521 = func_5037_call()
output = call_7520
output2 = call_7521
func_7523 = relay.Function([], output)
mod['func_7523'] = func_7523
mod = relay.transform.InferType()(mod)
output = func_7523()
func_7524 = relay.Function([], output)
mutated_mod['func_7524'] = func_7524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7267_call = mod.get_global_var('func_7267')
func_7269_call = mutated_mod.get_global_var('func_7269')
call_7580 = relay.TupleGetItem(func_7267_call(), 0)
call_7581 = relay.TupleGetItem(func_7269_call(), 0)
output = call_7580
output2 = call_7581
func_7586 = relay.Function([], output)
mod['func_7586'] = func_7586
mod = relay.transform.InferType()(mod)
output = func_7586()
func_7587 = relay.Function([], output)
mutated_mod['func_7587'] = func_7587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6974_call = mod.get_global_var('func_6974')
func_6976_call = mutated_mod.get_global_var('func_6976')
call_7600 = func_6974_call()
call_7601 = func_6974_call()
output = call_7600
output2 = call_7601
func_7609 = relay.Function([], output)
mod['func_7609'] = func_7609
mod = relay.transform.InferType()(mod)
mutated_mod['func_7609'] = func_7609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7609_call = mutated_mod.get_global_var('func_7609')
call_7610 = func_7609_call()
output = call_7610
func_7611 = relay.Function([], output)
mutated_mod['func_7611'] = func_7611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6579_call = mod.get_global_var('func_6579')
func_6580_call = mutated_mod.get_global_var('func_6580')
call_7624 = relay.TupleGetItem(func_6579_call(), 0)
call_7625 = relay.TupleGetItem(func_6580_call(), 0)
output = call_7624
output2 = call_7625
func_7635 = relay.Function([], output)
mod['func_7635'] = func_7635
mod = relay.transform.InferType()(mod)
output = func_7635()
func_7636 = relay.Function([], output)
mutated_mod['func_7636'] = func_7636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7061_call = mod.get_global_var('func_7061')
func_7062_call = mutated_mod.get_global_var('func_7062')
call_7687 = relay.TupleGetItem(func_7061_call(), 0)
call_7688 = relay.TupleGetItem(func_7062_call(), 0)
uop_7693 = relay.log(call_7687.astype('float64')) # shape=(13, 16, 12)
uop_7695 = relay.log(call_7688.astype('float64')) # shape=(13, 16, 12)
output = relay.Tuple([uop_7693,])
output2 = relay.Tuple([uop_7695,])
func_7702 = relay.Function([], output)
mod['func_7702'] = func_7702
mod = relay.transform.InferType()(mod)
mutated_mod['func_7702'] = func_7702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7702_call = mutated_mod.get_global_var('func_7702')
call_7703 = func_7702_call()
output = call_7703
func_7704 = relay.Function([], output)
mutated_mod['func_7704'] = func_7704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3754_call = mod.get_global_var('func_3754')
func_3755_call = mutated_mod.get_global_var('func_3755')
call_7782 = func_3754_call()
call_7783 = func_3754_call()
output = relay.Tuple([call_7782,])
output2 = relay.Tuple([call_7783,])
func_7790 = relay.Function([], output)
mod['func_7790'] = func_7790
mod = relay.transform.InferType()(mod)
mutated_mod['func_7790'] = func_7790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7790_call = mutated_mod.get_global_var('func_7790')
call_7791 = func_7790_call()
output = call_7791
func_7792 = relay.Function([], output)
mutated_mod['func_7792'] = func_7792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4236_call = mod.get_global_var('func_4236')
func_4237_call = mutated_mod.get_global_var('func_4237')
call_7805 = relay.TupleGetItem(func_4236_call(), 0)
call_7806 = relay.TupleGetItem(func_4237_call(), 0)
func_4026_call = mod.get_global_var('func_4026')
func_4029_call = mutated_mod.get_global_var('func_4029')
var_7810 = relay.var("var_7810", dtype = "bool", shape = (132,))#candidate|7810|(132,)|var|bool
call_7809 = relay.TupleGetItem(func_4026_call(relay.reshape(var_7810.astype('bool'), [132,])), 1)
call_7811 = relay.TupleGetItem(func_4029_call(relay.reshape(var_7810.astype('bool'), [132,])), 1)
func_4481_call = mod.get_global_var('func_4481')
func_4483_call = mutated_mod.get_global_var('func_4483')
var_7826 = relay.var("var_7826", dtype = "int8", shape = (1800, 1))#candidate|7826|(1800, 1)|var|int8
call_7825 = relay.TupleGetItem(func_4481_call(relay.reshape(var_7826.astype('int8'), [1800,])), 2)
call_7827 = relay.TupleGetItem(func_4483_call(relay.reshape(var_7826.astype('int8'), [1800,])), 2)
func_7454_call = mod.get_global_var('func_7454')
func_7456_call = mutated_mod.get_global_var('func_7456')
call_7832 = func_7454_call()
call_7833 = func_7454_call()
func_7061_call = mod.get_global_var('func_7061')
func_7062_call = mutated_mod.get_global_var('func_7062')
call_7872 = relay.TupleGetItem(func_7061_call(), 1)
call_7873 = relay.TupleGetItem(func_7062_call(), 1)
func_7141_call = mod.get_global_var('func_7141')
func_7144_call = mutated_mod.get_global_var('func_7144')
var_7886 = relay.var("var_7886", dtype = "uint64", shape = (400,))#candidate|7886|(400,)|var|uint64
const_7887 = relay.const([4.900985,-1.296958,3.658686,-8.566531,5.920863,0.734665,-0.795852,-4.364643,-7.717281,9.332617,-2.528586,5.189446,3.239089,4.997333,4.798054,-0.605524,7.670392,7.560496,3.120805,-2.491475,-4.883943,8.915058,-2.318006,5.812507,3.437348,9.167911,-9.813083,-7.977975,0.276612,-6.660456,-6.941452,2.872414,6.413514,6.080272,-4.324186,9.198222,5.077068,-6.670606,3.766582,4.656650,-9.546060,-9.459926,3.964038,-3.349283,-4.640618,3.772064,8.854396,9.503004,2.817957,-4.877472,-5.348038,0.629378,-6.598686,1.576828,8.891807,-9.679362,2.292961,-4.339258,2.947224,-3.001792,0.667127,6.856546,-8.161042,1.272310,8.651424,-5.470627,-2.189522,6.817592,6.077196,-0.850981,8.379798,-8.981449,0.561219,3.813546,5.633112,5.854799,5.908274,-4.737026,7.560112,-0.120185,2.387079,-8.774777,-4.932137,-5.328805,-4.191261,-9.427495,-2.828007,-2.905333,5.389491,-0.804701,8.328144,3.467946,-4.554022,4.757301,1.263772,-6.731074,-8.137658,-5.995118,2.706469,-4.987371,2.303798,1.214375,8.225319,-3.199301,-5.741142,2.764787,-0.645972,-8.106276,-2.625892,-5.241078,2.700876,-9.911799,6.761661,-4.013037,-6.188886,-6.766598,9.235841,8.075279,7.297635,5.079819,-0.131763,-1.648382,4.622958,-5.572022,-6.718895,-9.458699,1.467894,3.671911,5.307455,6.097471,-2.097215,-5.553502,-4.270609,-4.005824,3.841820,2.455750,-3.358880,-0.621850,-7.865757,-8.870208,0.773263,0.718236,6.495425,6.107653,-2.487870,-6.511863,-4.085677,9.395321,-2.613917,-4.116782,9.203547,-0.321798,6.676298,-5.103517,8.133026,-9.218106,6.644583,4.509616,-2.870401,3.860000,-2.427679,9.611588,-0.284194,5.317853,-9.097931,-1.188810,2.230148,-6.072430,7.742828,-6.351228,6.137286,8.147013,-4.887393,3.069773,0.041300,-0.649647,3.452045,-1.581919,-9.712770,-0.120269,-3.521152,-9.214364,8.538497,-4.357069,0.258760,6.032388,-3.330117,4.104250,-4.024085,1.206953,-7.772698,6.075813,-6.226457,5.558513,4.544547,0.895168,5.913842,9.317057,-9.817897,7.584793,-1.753078,-8.765618,-6.105290,-0.384844,0.882503,-5.569391,4.131510,9.555172,-3.302155,-9.726998,-7.541803,2.401588,3.416112,9.895818,-2.429772,-1.387727,7.242206,6.377355,-4.186717,-0.681273,-5.726255,0.723247,-0.470413,2.923640,-8.248076,-0.930696,5.929594,-9.236771,-9.599929,3.476455,-4.688927,-1.838082,-5.680824,7.795142,4.228903,-0.744982,9.550643,4.102356,-9.766449,-1.952122,-1.145836,-4.079518,-1.594895,-9.081974,-2.115257,9.372795,2.074184,-6.773957,-9.428221,1.471332,-6.957582,6.942071,3.447249,1.124010,3.787401,-9.483443,4.831856,9.002150,9.112019,-0.954995,7.213819,3.315719,3.753299,6.451233,9.873669,2.075624,-5.513006,7.489019,1.756337,-5.450682,-5.611025,-0.244713,8.809280,3.078452,-0.895723,-8.573811,-0.297763,-5.096400,7.998315,3.805311,-7.399413,-8.060902,7.339703,0.615902,4.526686,3.188845,-7.893172,5.251268,6.146351,0.046321,-4.349817,-0.314841,8.486928,7.525726,-8.852558,8.231225,4.513781,2.616898,-6.833010,-0.514565,-5.919932,7.058188,2.711691,-1.251181,-6.067774,-6.896615,2.299528,1.003722,-8.414697,-9.186338,5.495864,3.867872,6.077342,4.958159,5.196220,4.286189,8.395547,2.516013,6.842113,6.314016,8.164333,8.951816,-0.573144,7.755171,4.723063,7.416823,3.223846,2.414901,-0.932039,-7.971634,-6.608904,2.882717,8.444293,0.321984,3.611455,-6.257231,-7.410530,2.013090,-9.335311,7.358608,-1.504082,-1.536049,-1.743934,9.403799,-2.463444,-1.644513,7.132284,-7.283414,-9.122383,-7.932088,-4.937989,-7.880920,-9.298368,-3.688463,-4.210035,-7.287850,-6.778446,3.727186,-7.064776,9.219457,-0.773124,-2.950009,-7.285162,-7.508925,-9.768826,-6.650441,9.265610,7.818455,-6.441852,-9.616079,-4.274509,-6.367046,1.487010,6.327947,-1.518095,-4.199182,-1.646688,-4.414781,3.616538,-4.662170,7.522809,1.492088,3.608812,-8.978417], dtype = "float64")#candidate|7887|(384,)|const|float64
call_7885 = relay.TupleGetItem(func_7141_call(relay.reshape(var_7886.astype('uint64'), [8, 5, 10]), relay.reshape(const_7887.astype('float64'), [384,]), ), 1)
call_7888 = relay.TupleGetItem(func_7144_call(relay.reshape(var_7886.astype('uint64'), [8, 5, 10]), relay.reshape(const_7887.astype('float64'), [384,]), ), 1)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_7889 = func_5425_call()
call_7890 = func_5425_call()
output = relay.Tuple([call_7805,call_7809,var_7810,call_7825,var_7826,call_7832,call_7872,call_7885,var_7886,const_7887,call_7889,])
output2 = relay.Tuple([call_7806,call_7811,var_7810,call_7827,var_7826,call_7833,call_7873,call_7888,var_7886,const_7887,call_7890,])
func_7893 = relay.Function([var_7810,var_7826,var_7886,], output)
mod['func_7893'] = func_7893
mod = relay.transform.InferType()(mod)
mutated_mod['func_7893'] = func_7893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7893_call = mutated_mod.get_global_var('func_7893')
var_7895 = relay.var("var_7895", dtype = "bool", shape = (132,))#candidate|7895|(132,)|var|bool
var_7896 = relay.var("var_7896", dtype = "int8", shape = (1800, 1))#candidate|7896|(1800, 1)|var|int8
var_7897 = relay.var("var_7897", dtype = "uint64", shape = (400,))#candidate|7897|(400,)|var|uint64
call_7894 = func_7893_call(var_7895,var_7896,var_7897,)
output = call_7894
func_7898 = relay.Function([var_7895,var_7896,var_7897,], output)
mutated_mod['func_7898'] = func_7898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7911 = relay.var("var_7911", dtype = "float32", shape = (3, 10, 11))#candidate|7911|(3, 10, 11)|var|float32
var_7912 = relay.var("var_7912", dtype = "float32", shape = (3, 10, 11))#candidate|7912|(3, 10, 11)|var|float32
bop_7913 = relay.divide(var_7911.astype('float32'), relay.reshape(var_7912.astype('float32'), relay.shape_of(var_7911))) # shape=(3, 10, 11)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_7918 = func_4065_call()
call_7919 = func_4065_call()
output = relay.Tuple([bop_7913,call_7918,])
output2 = relay.Tuple([bop_7913,call_7919,])
func_7924 = relay.Function([var_7911,var_7912,], output)
mod['func_7924'] = func_7924
mod = relay.transform.InferType()(mod)
var_7925 = relay.var("var_7925", dtype = "float32", shape = (3, 10, 11))#candidate|7925|(3, 10, 11)|var|float32
var_7926 = relay.var("var_7926", dtype = "float32", shape = (3, 10, 11))#candidate|7926|(3, 10, 11)|var|float32
output = func_7924(var_7925,var_7926,)
func_7927 = relay.Function([var_7925,var_7926,], output)
mutated_mod['func_7927'] = func_7927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7790_call = mod.get_global_var('func_7790')
func_7792_call = mutated_mod.get_global_var('func_7792')
call_7961 = relay.TupleGetItem(func_7790_call(), 0)
call_7962 = relay.TupleGetItem(func_7792_call(), 0)
output = call_7961
output2 = call_7962
func_7974 = relay.Function([], output)
mod['func_7974'] = func_7974
mod = relay.transform.InferType()(mod)
mutated_mod['func_7974'] = func_7974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7974_call = mutated_mod.get_global_var('func_7974')
call_7975 = func_7974_call()
output = call_7975
func_7976 = relay.Function([], output)
mutated_mod['func_7976'] = func_7976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6764_call = mod.get_global_var('func_6764')
func_6765_call = mutated_mod.get_global_var('func_6765')
call_8004 = relay.TupleGetItem(func_6764_call(), 0)
call_8005 = relay.TupleGetItem(func_6765_call(), 0)
output = call_8004
output2 = call_8005
func_8006 = relay.Function([], output)
mod['func_8006'] = func_8006
mod = relay.transform.InferType()(mod)
mutated_mod['func_8006'] = func_8006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8006_call = mutated_mod.get_global_var('func_8006')
call_8007 = func_8006_call()
output = call_8007
func_8008 = relay.Function([], output)
mutated_mod['func_8008'] = func_8008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
call_8093 = func_4209_call()
call_8094 = func_4209_call()
func_2639_call = mod.get_global_var('func_2639')
func_2642_call = mutated_mod.get_global_var('func_2642')
var_8099 = relay.var("var_8099", dtype = "int8", shape = ())#candidate|8099|()|var|int8
call_8098 = relay.TupleGetItem(func_2639_call(relay.reshape(var_8099.astype('int8'), [])), 3)
call_8100 = relay.TupleGetItem(func_2642_call(relay.reshape(var_8099.astype('int8'), [])), 3)
output = relay.Tuple([call_8093,call_8098,var_8099,])
output2 = relay.Tuple([call_8094,call_8100,var_8099,])
func_8106 = relay.Function([var_8099,], output)
mod['func_8106'] = func_8106
mod = relay.transform.InferType()(mod)
var_8107 = relay.var("var_8107", dtype = "int8", shape = ())#candidate|8107|()|var|int8
output = func_8106(var_8107)
func_8108 = relay.Function([var_8107], output)
mutated_mod['func_8108'] = func_8108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_8125 = func_4065_call()
call_8126 = func_4065_call()
func_5698_call = mod.get_global_var('func_5698')
func_5701_call = mutated_mod.get_global_var('func_5701')
const_8128 = relay.const([-6,-3,-2,2,-5,4,-10,-7,-5,-3,4,-8,6,-1,8,-4,-5,-5,-3,-10,2,8,-2,6,-7,-2,1,-10,-1,3,-3,8,-7,-6,9,-9,-1,-1,-10,-10,10,-10,3,-7,4,-8,6,-6,8,-3,9,6,-9,-3,-7,-7,-7,5,8,-8,1,-1,9,-2,-9,-4,7,8,-8,-4,-6,-10,-8,4,-9,10,6,1,-9,4,7,6,-7,-9,-7,-10,4,7,6,-1,4,7,3,7,10,-9,1,-1,2,-3,-3,-4,-2,-2,-2,5,4,-8,-1,-6,8,8,-3,-8,-10,-3,-6,3,-10,8,8,8,5,-9,-2,-7,-2,-8,5,9,-8,10,1,-2,8,3,-1,-8,-8,5,1,10,7,8,5,9,2,-7,-3,-6,-9,7,-1,-8,-1,10,-5,5,8,5,-3,-9,4,-7,-5,7,1,3,10,-2,-4,-5,3,-2,5,8,-2,2,3,10,-2,1,5,-7,5,8,-4,-10,-2,1,10,9,6,-5,-3,-8,-3,10,1,5,-9,-7,5,-3,10,6,3,9,7,10,-10,-6,-5,3,6,-4,-10,-9,6,1,5,-5,5,8,7,-1,-6,2,-3,-9,-2,3,4,4,-5,-8,-2,-9,-7,8,-6,-1,-8,-4,-7,-10,-6,8,7,9,-6,-2,-10,-7,9,10,-6,10,3,3,-8,8,5,5,-9,6,1,-6,-9,7,8,-5,-8,8,-8,-3,3,-2,9,-4,2,-4,6,-4,-4,-6,8,-9,-6,-8,-8,-3,-4,3,2,2,5,-7,-9,-9,1,7,7,-6,3,-9,8,-3,-9,-6,4,-5,7,2,-2,-8,6,-6,1,8,-7,6,1,8,6,10,-5,10,6,7,-5,-5,-2,6,3,9,4,-7,-5,-4,-10,-2,9,6,-4,-7,10,1,-3,9,-4,-7,-6,-3,9,3,-2,-6,-6,10,7,-10,9,1,2,-7,-10,5,7,6,-5,-7,3,2,6,-1,9,-10,-7,-8,2,-5,10,-8,-10,-4,3,-4,5,-6,-7,-3,-10,-3,-7,4,-8,4,3,-6,-6,7,-10,-4,6,5,6,-8,-3,3,-5,1,-8,-3,5,-3,8,10,3,-2,-5,2,6,-10,-2,1,10,1,5,10,-1,-2,-4,-6,8,4,6,-7,-6,1,7,-5,4,-6,10,-10,8,-10,4,-7,-6,6,-9,-4,7,2,7,-5,-5,-9,-7,-6,1,-7,-5,-9,-7,3,-7,10,-2,2,-2,-2,5,2,2,-7,7,10,-8,3,4,-1,2,-7,-6,6,3,6,1,10,-9,6,10,-6,-7,-2,-4,3,6,10,8,-1,4,-1,-7,-8,-7,-10,4,-3], dtype = "int16")#candidate|8128|(512,)|const|int16
var_8129 = relay.var("var_8129", dtype = "int32", shape = ())#candidate|8129|()|var|int32
call_8127 = relay.TupleGetItem(func_5698_call(relay.reshape(const_8128.astype('int16'), [256, 2]), relay.reshape(var_8129.astype('int32'), []), ), 5)
call_8130 = relay.TupleGetItem(func_5701_call(relay.reshape(const_8128.astype('int16'), [256, 2]), relay.reshape(var_8129.astype('int32'), []), ), 5)
func_4816_call = mod.get_global_var('func_4816')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_8143 = relay.TupleGetItem(func_4816_call(), 0)
call_8144 = relay.TupleGetItem(func_4817_call(), 0)
func_4791_call = mod.get_global_var('func_4791')
func_4795_call = mutated_mod.get_global_var('func_4795')
const_8149 = relay.const([-7.119100,-3.130421,6.141002,4.608856,-8.249955,9.058161,-4.819466,-7.460532,2.496336,-8.181404,6.468971,-5.519508,-3.603112,-5.413633,3.054878,-0.530310,-1.887300,-9.729214,5.316487,-3.902892,-2.498764,-5.415743,1.858570,8.476035,-7.510093,-0.030714,-3.525166,-7.619619,8.400606,-0.427818,-0.684333,-1.436896,1.389300,-5.046055,4.743515,-2.245901,-1.569502,-6.271012,2.172905,-0.066466,-0.719159,8.310626,7.548226,2.612086,-4.607704,-4.881698,-6.936633,6.441079,0.201592,-1.653328,5.707217,-2.729055,3.492153,7.114547,6.993112,4.076545,-4.800866,-7.509310,-9.858084,6.601772,6.422265,5.532649,-0.691567,1.588788,-7.942034,-7.522652,-2.539580,-1.161857,-8.653488,-8.157203,1.353654,9.439701,-1.918913,-8.833423,1.746716,-1.751944,1.876738,-6.886994,-5.572998,7.254574,-2.916352,-3.602589,-7.364847,-6.754654,-1.478755,-0.771280,-0.335853,-4.964970,1.623596,9.356434,-6.697872,3.528796,6.452378,9.032104,9.834873,4.197063,0.786069,-5.472044,-6.885140,-6.102523,3.758675,-4.239718,-1.946170,3.157942,1.982177,-0.233453,-2.342176,2.421976,7.655289,9.839227,4.650858,-1.788541,0.444255,5.697487,-2.754179,-5.190140,-4.548577,9.721437,9.957040,9.709026,-3.014370,-9.805394,1.685618,-0.633404,1.102051,-4.024259,-4.301153,7.418594,2.662271,6.629724,-9.010162,-3.573998,3.460716,6.829456,-7.106836,6.862868,-1.901203,1.452190,-2.680289,-0.010215,1.363775,-7.063463,-2.676586,0.530701,-5.104157,6.281490,5.496252,-6.819337,7.950722,7.391888,-5.507799,-9.275680,3.655432,-6.417182,-6.996674,8.490595,5.637882,7.479174,2.836224,-1.764102,-4.763757,-1.306447,9.510939,-4.704943,-7.896353,-0.620266,-6.796367,8.118502,-7.455099,6.859662,-7.457862,-9.896649,0.874860,5.521801,1.110102,-8.884278,6.933940,9.411107,8.833148,-9.664227,0.412177,-0.276879,1.027948,2.913000,-6.159178,-3.454078,1.151735,-0.627239,9.216497,7.113589,1.544948,-7.378105,-3.716279,5.444890,5.976298,5.804155,-0.643618,-6.406077,5.639511,1.563715,8.061191,4.337139,6.420202,5.729537,5.396179,6.798034,-3.599064,-7.341504,0.537336,7.122526,9.393272,9.920155,-0.415534,5.418168,-1.835408,8.103076,2.494724,-8.735437,7.244227,0.448187,7.966105,6.273653,-9.185735,-5.032425,-0.407171,-3.286097,7.560199,9.405538,2.625633,9.115680,-4.412322,3.912143,2.820818,-6.372543,7.573523,-1.260869,-6.942137,1.040336,5.113269,-2.396043,0.476390,3.310051,-0.191197,-1.567645,7.065880,3.038344,4.719529,9.926391,7.905006,5.126297,1.864600,9.010917,7.715920,-6.476910,-2.777551,-4.962956,5.409374,-1.851071,6.407469,-8.618270,7.723065,-8.858297,-7.643268,1.184005,4.980848,8.733216,-4.782378,-6.958502,8.168572,-2.952598,5.843434,0.425736,-4.025496,-7.866427,-2.832882,6.064708,5.437856,-4.013188,4.838567,7.256230,-0.293462,-5.345973,1.054548,2.545437,3.045563,-2.748436,-0.993723,-6.993689,-4.414854,-5.902911,3.899483,-9.369037,5.024797,-5.156982,-3.309395,2.749743,-9.310754,-1.209097,-4.338650,-3.717858,3.750202,-1.701978,-0.128949,9.079751,-1.528929,-8.731567,1.729455,-2.248250,5.750479,2.993854,-0.012667,7.801486,-8.361223,-3.273422,0.537030,0.828758,5.239286,-3.698715,-6.752565,-7.955733,-8.064891,-7.979667,1.939782,-1.563830,1.990748,4.494336,8.571090,4.734172,-8.439191,-3.963443,-5.700276,-0.319530,-6.050256,-3.410849,-4.897008,5.732198,5.310957,-1.892401,-5.706347,4.200752,2.858021,3.960411,6.438507,-4.838231,-8.550963,3.448900,-4.964272,-9.526461,0.571994,5.974118,-7.030649,-8.794591,-3.525396,-5.826461,3.272523,2.404454,-2.562938,2.055696,3.171579,0.161393,5.889127,-9.862780,7.983741,-9.048713,7.947211,-2.174993,-8.660821,4.433571,-0.151154,2.699370,-3.360171,-8.060777,4.555559,-4.873326,1.649954,-0.755200,6.744040,3.403364,7.859151,1.224788,0.700283,-5.464303,-4.551367,2.602328,-2.888134,-6.753374,4.274575,6.748312,3.501171,0.438129,-4.820674,0.198011,-5.309826,-3.686289,-1.966479,1.849044,3.287952,4.647313,4.376519,-7.386757,4.336060,-8.275406,8.012423,3.997201,-5.119679,-3.949290,-2.765335,-2.023906,-7.549349,-4.947965,-9.219737,-7.976160,-0.869545,9.157953,-0.185993,9.733430,-7.380580,-5.496096,9.516887,-4.623210,-1.310281,-3.423008,-0.906793,-7.049576,3.479571,2.500269,-3.596393,-4.376102,4.496647,-5.258013,8.954220,9.570919,-1.583145,-9.942799,8.438500,0.742488,2.303391,-6.880468,-7.972196,-2.750610,-8.770530,0.758328,1.620339,1.421688,7.712180,3.991575,1.038562,-5.168344,-5.340097,5.112411,-4.569508,-2.072360,9.259541,1.504258,2.615844,3.757575,-3.935149,-6.262579,-7.406215,-1.958932,6.171618,8.926494,6.857827,-9.919562,-5.557246,2.407247,-6.383650,-4.542357,1.263483,6.774778,7.998890,-0.548993,3.717901,2.195411,-0.527893,7.621024,4.355461,-7.169595,8.875190,8.110135,-7.904384,-6.267690,-3.432108,-7.326199,-0.916275,-5.656766,0.322532,5.659947,1.573007,-6.741265,4.614144,8.043373,-1.612649,6.972650,2.813035,8.907777,5.140158,-8.440760,-5.321351,2.307094,6.214671,-3.174210,-1.378120,2.031851,7.370633,4.949400,-0.102694,9.837348,-7.919784,-2.087440,1.817242,-8.026089,8.159728,-9.480133,7.517817,-8.831063,7.047448,1.525360,9.761346,9.349148,9.648645,0.299683,-0.657024,-9.175933,9.661283,-5.237815,4.247401,9.620025,4.656584,-9.381594,-4.831239,2.003644,-2.884962,7.672188,-4.355381,-2.181718,-2.328037,2.042757,-3.214534,8.690647,-0.849045,9.874576,-6.917221,-4.393941,-0.601663,8.152203,1.673338,8.944829,7.067153,5.747655,2.004313,9.805133,5.974696,-7.739511,6.333065,0.028310,5.852788,5.215547,-2.823502,-3.618524,-5.086104,4.958459,-6.669379,1.675209,2.011186,5.498942,-7.831041,-0.058749,9.575576,-2.496118,2.434101,-4.504180,-8.615890,-4.141187,1.809676,5.182234,-9.070906,-7.895375,4.247223,7.980372,-8.090496,-0.245431,9.335218,7.936504,1.227843,9.711790,0.040988,-1.412021,9.503128,-3.089378,1.951058,9.543628,-0.845147,-3.380328,1.152149,0.002366,5.805948,7.240755,-5.316154,3.945282,-8.799081,-0.040558,2.411108,3.915342,-2.772131,1.932760,4.470794,6.531462,-8.345566,-1.600402,6.378325,-5.658629,6.311209,-7.119315,-8.252991,4.108182,-0.292194,-6.585357,-6.738516,0.018681,-5.573787,-5.686304,3.431050,2.558881,-6.049785,5.100163,3.844428,-4.044275,8.369765,0.165619,-3.750998,-6.662754,-3.655220,-0.491441,-8.281769,3.519539,3.740661,6.715488,-0.265562,-9.974139,-7.192449,-2.856646,1.534644,-3.318575,2.527418,-6.114709,-6.906255,9.985504,-1.850714,-6.922281,9.922321,4.598451,8.016690,0.623253,5.752519,-6.360081,3.163487,-2.304102,5.869481,-8.341335,-9.940739,7.440580,3.801553,0.767163,-7.346981,5.537665,-5.951043,-1.257545,9.308617,3.613003,-3.002283,-6.163027,-8.741437,-2.263608,9.321262,0.985912,-6.961831,-9.413147,0.673357,7.932317,3.160186,7.414111,0.805800,-6.664472,5.651689,1.414294,7.720330,9.845553,-2.982614,-0.644952,-4.836961,9.174146,-3.526574,2.401164,-0.585652,3.297803,6.012053,9.993592,8.162207,8.033153,8.471791,-4.195166,-4.932295,-0.341428,0.980508,-8.073371,-0.488617,-5.690496,9.597270,-1.785244,-4.190805,-2.886722,-6.184545,-2.166346,8.302434,-5.784503,8.388102,0.796104,5.341242,-7.316444,-3.861539,-4.388669,5.047101,3.529472,-3.233201,-1.331819,-6.918898,-1.751961,-2.832399,-4.440909,-4.227849,-0.754467,3.759527,8.418167,0.059653,1.700039,-0.005329,8.719047,7.148297,7.377996,-7.488865,-8.310403,-1.267954,-8.076096,-3.566927,-6.129934,3.206562,-3.858172,-7.181425,7.700763,4.719160,-6.198887,6.838454,9.541848,-3.297427,-3.497505,-1.755847,6.255033,-5.633443,5.220741,-2.228503,0.082762,-1.497766,-6.489613,-8.385134,3.383917,5.894236,3.695233,6.504205,4.667945,3.693303,-1.644864,-6.198087,-0.837128,2.024852,1.922266,0.778192,-0.578654,-2.757032,8.236711,-8.416290,3.677643,-9.405399,-1.493602,5.152947,8.126632,-0.881145,5.550580,-1.009192,4.049871,3.971655,2.264913,4.220713,7.565344,7.467276,-3.428518,0.286470,1.473491,3.636296,3.626625,1.791322,4.028970,-9.384670,-2.297778,9.158349,0.608219,9.081142,0.056597,-7.642529,-6.262977,6.218245,2.561682,-8.827742,-0.425640,6.713353,1.504902,9.400125,-7.586569,7.207382,-3.766113,-0.757635,5.997694,-8.102979,-5.270380,2.528379,-3.617985,-1.126693,8.834095,-3.115420,-6.602426,5.425591,-1.863087,-0.790405,7.270429,-9.327183,-5.448087,8.585471,-4.214253,7.182609,-7.797126,5.588871,9.667784,-1.318788,3.835979,3.420726,-1.035781,2.633112,9.122707,0.948382,4.504219,-6.761530,-1.270251,3.781555,2.890162,-5.548487,-1.593392,2.323242,0.669856,-8.153793,-4.491908,-0.025525,1.337544,-3.159058,1.071591,6.435270,3.250983,0.235307,8.335524,-7.361733,1.479828,-8.339795,-0.628401,8.701100,0.542951,-1.102793,7.400160,8.713413,-6.599192,1.315982,5.958154,-4.955172,-8.233179,4.707729,9.752506,0.098320,-0.724938,-6.102498,5.525104,-3.642037,0.405936,-4.974702,8.864900,7.640884,7.509622,3.975883,5.258112,7.299317,0.759837,7.884795,-8.093933,3.123530,-2.827791,-7.020944,-1.182739,1.752045,6.940366,-4.589975,2.990420,5.473786,3.807769,1.476372,-9.739344,-5.377088,5.333125,-1.748801,-5.365258,-9.878692,3.807708,-8.578298,3.970804,-2.876006,-4.240216,5.885374,-7.806565,-5.500302,-9.569931,8.169077,1.952589,-5.830048,9.995576,-4.887992,0.536712,7.034072,6.596101,-4.550870,3.853783,-4.890613,4.092131,2.238063,-6.104697,6.475648,2.849641,1.030539,8.268366,-7.467288,7.284807,-8.258955,0.216223,4.842463,-1.547080,-2.731125,-8.813107,1.954977,-2.034077,-8.431045,-1.980066,5.080163,-4.617534,-7.019232,4.892243,-0.100348,-9.039565,6.362165,-4.739770,-9.344348,-4.906742,-4.279062,8.993585,-5.118565,-3.946229,-1.409444,4.224272,0.655842,7.285302,0.410513,-6.181661,9.827748,-0.956089,-1.993187,6.874938,9.877274,6.953318,3.191098,7.104299,6.799457,-2.413552,9.629885,5.305355,0.549623,-1.700701,2.834803,-3.764478,0.425581,5.861697,-6.060661,9.080981,-2.259533,8.366528,1.935053,-3.831431,2.236540,4.769327,-9.021777,9.370299,2.854682,-4.617961,-2.543678,3.571627,0.459156,0.291538,9.987970,-6.020708,-1.265777,8.541804,-8.783989,-7.912778,-8.857864,-2.636786,-5.129611,-9.192180,-9.432326,7.542656,-2.068526,-5.351879,8.221979,4.563517,-9.061646,1.045159,1.136146,9.521303,-6.513912,5.209814,0.182470,1.864644,9.107932,7.513146,-0.956483,-7.813590,4.659625,-6.130113,9.267671,1.420465,7.335931,-8.485254,-7.740185,4.105929,4.650852,5.622546,-5.400089,-4.702506,5.104595,1.439219,-6.090607,-7.954488,9.565102,2.547869,-7.028803,-7.930546,0.122906,-0.049986,-0.885992,-2.633846,5.840012,-4.302856,-1.233859,8.959363,-9.526484,3.498571,8.135150,-1.143182,-7.747872,9.464773,9.803435,1.890835,-6.220824,-5.342903,1.563376,-6.351820,-8.863485,-5.788264,0.762520,-2.426696,3.033930,7.543837,0.210848,4.657949,8.882439,-2.001264,-0.553748,4.102351,-4.347518,-6.121913,-1.013348,-6.740274,8.818259,9.875255,-9.202454,4.861616,9.685221,-1.081092,-5.542996,-4.637066,-2.790688,-9.258842,-6.840169,1.194487,9.505091,-1.774172,-8.368265,8.829176,-3.049933,4.523643,-7.455090,-2.247577,8.695762,1.211843,-2.968684,4.001591,-1.621706,8.482039,6.880176,9.783991,-8.181783,-1.659284,-3.108838,2.075703,-4.264868,-3.145613,4.588191,-0.928709,2.869166,-3.118885,6.192999,3.089253,-1.232213,3.865625,6.146543,-8.431511,-5.870147,1.768610,-1.192989,0.518823,1.779193,-3.119652,-0.099134,4.298198,-4.069563,2.688709,6.028981,4.785866,-1.417337,1.219638,-6.541236,7.624516,-5.180505,3.207935,8.630487,4.255271,-5.769272,7.486537,-2.568174,3.227350,1.513493,-4.108489,3.880337,-3.642154,-1.848204,7.332016,2.390235,-2.378435,0.277329,2.997736,-6.494647,2.519976,-6.212239,-5.385133,0.048477,1.342312,-2.459470,2.028846,2.800086,7.001598,8.377627,-4.974326,-5.837172,-9.024183,7.029571,-0.641968,-0.426932,-0.653302,1.591067,0.547322,-2.811442,2.990821,4.289248,-4.100080,-0.385526,-6.992868,9.525997,-2.406694,7.535875,6.588328,-6.193489,2.840903,-2.552147,6.377079,-6.526646,-3.389100,1.638639,7.077617,6.572952,-4.794326,-5.927889,1.114178,7.810395,1.377983,5.414180,3.702074,-1.017967,-7.866800,5.343264,-3.598266,4.257082,-0.442769,-2.187008,9.942511,-3.774310,9.329759,-8.575620,-3.196986,4.859885,6.831548,-8.653343,-1.597451,3.550351,7.827540,3.538154,-8.151288,9.933782,7.705026,-1.911813,8.836971,-0.560525,2.757375,8.465971,1.287900,0.709450,7.452124,0.396335,6.652175,4.713479,9.458779,-2.289860,0.406612,4.912558,-3.652730,4.758935,-2.546541,-2.158569,-5.834561,9.532783,-3.070739,-7.829413,-3.819839,-8.236441,-1.307786,5.437783,-8.362918,7.499905,2.190424,-0.657505,7.381413,8.934276,-9.340510,3.642392,3.540762,-3.349386,-1.380158,-4.084952,-6.611413,-6.184804,-4.685587,0.566301,1.059799,-1.153670,0.168761,-0.708883,-6.192321,-5.834240,-6.438708,7.615361,-6.802331,4.731407,2.442376,0.834907,-3.554824,-7.776673,0.383932,8.807951,4.884220,5.884697,8.296427,2.469419,9.729832,-4.136405,6.891280,-1.584403,6.971178,-6.091428,4.240544,-8.334685,5.431213,-5.653085,-2.317642,-6.486373,1.899915,-6.613395,8.325381,-9.601419,4.703652,-9.302537,-3.405837,-4.877973,1.894132,-9.433656,5.506334,-0.737954,-6.729162,1.659660,3.427951,-7.930229,-3.873826,5.611690,-9.263074,-3.596834,-6.700880,-4.263817,2.715692,-1.104803,-6.406725,0.040954,8.284320,-0.185755,-6.741017,7.721482,4.596935,-4.558431,-0.082279,-7.136092,4.878503,6.017881,9.551025,5.351484,-7.129968,9.714544,-1.566671,-4.759324,9.699918,1.595174,7.432955,6.268782,-8.825345,-7.955350,0.854533,3.366730,7.684918,-8.123833,1.818480,-3.320256,9.292964,-6.011987,-0.421671,6.091458,3.841979,-5.578476,2.071070,-4.356758,0.116070,2.846662,7.359662,-5.945906,9.562479,1.432561,-1.660939,-5.026570,-8.450625,9.288174,-2.178241,-8.943456,-8.012075,-9.748491,-2.450342,0.997010,5.188429,-1.360808,-7.822580,2.745644,1.193997,-1.441918,-4.950689,1.809864,0.211730,-3.672456,1.310961,2.911969,2.373394,-4.361047,-7.449870,5.142840,-2.916194,-3.460021,-9.461628,-3.451617,6.609773,7.515951,6.488486,-1.144481,-2.018925,-7.231061,2.468675,7.170481,5.301833,-8.238142,8.626452,0.501069,8.788404,-6.292093,-2.745400,1.394783,1.486249,0.617643,2.874616,9.449743,-4.232601,9.979693,-1.041038,-8.401651,-2.718258,1.549105,0.756258,8.669610,7.189205,-8.974121,-9.079028,1.346031,8.737673,9.300207,-1.784862,-5.745336,-9.765640,-8.440032,-9.706094,7.490574,3.301446,-3.678131,9.943407,7.229287,-6.551626,-7.057254,2.137445,-7.792774,7.202092,8.603720,3.050157,-6.904763,8.286953,-0.792568,-4.033117,4.946112,-8.918177,-2.224664,4.504333,-1.158401,1.277281,6.379071,-8.903153,1.292134,8.469747,0.956332,-4.774601,-9.658482,-7.597140,1.917814,-1.698155,-2.024772,0.401466,7.058658,-0.913113,-9.346988,-3.416781,-5.711894,2.971763,-1.960175,-6.360924,7.761516,-1.231639,6.780002,-9.667715,9.181795,1.004685,-5.165901,-9.250670,1.591255,0.618391,-5.734051,9.777096,9.857746,8.871756,3.823876,8.975203,-1.611576,6.956623,4.777656,9.284162,-1.937704,-0.418737,4.905707,-5.006705,-0.686625,-0.254284,-4.431955,9.612766,-4.642797,3.253716,4.021193,9.205470,-3.292982,3.706388,-1.743581,-3.429193,0.690874,3.342539,7.353542,8.069774,-6.238791,0.464176,-9.586016,-3.454424,4.770326,-5.524523,-3.759627,-7.200724,-2.657664,-1.363905,-2.187679,-7.439884,-0.860194,-3.542687,3.484128,1.200440,2.875950,-1.602915,1.160649,9.300427,6.826567,8.201670,5.148442,-4.707604,8.087366,-6.135513,-3.874092,3.495913,2.991162,-5.614012,-5.044780,-2.268737,-6.440758,0.347229,5.781400,-9.356644,-0.566001,-6.323567,-9.463794,-1.105962,-1.805888,2.918626,4.669443,7.025825,3.640096,5.410211,8.917573,2.302116,5.929130,4.491418,2.801422,7.082420,-1.932629,8.272181,-4.210845,-8.020436,2.118774,8.680661,7.197299,9.237781,4.137035,-8.407243,-2.366208,-4.530475,-2.880115,-4.728197,-5.497178,6.570146,2.847593,3.656181,-9.281339,-5.273289,9.578657,-4.801451,-2.461619,5.461520,3.894226,-4.862226,-1.785819,1.681166,7.069230,-4.267256,4.544165,-9.227311,8.525580,-5.181286,3.646145,7.653602,2.268386,2.863415,4.067901,2.264112,-0.834460,-5.298472,-2.536707,4.894672,6.754664,7.882697,-2.723595,0.028478,3.830192,1.496078,8.879554,-7.417378,8.129404,-3.164700,-0.996014,8.784892,-7.873641,4.623205,7.578128,-7.566521,8.999289,5.254503,7.832474,1.959748,-5.588206,7.694327,0.075539,-4.928535,-0.512654,2.333982,-6.667979,9.843069,-9.603061,-7.924614,-3.823495,-2.132978,-8.544515,0.034384,-4.003707,7.707453,2.056648,-1.865345,-6.541574,1.202068,-1.247103,5.743905,8.790871,1.439916,-9.295487,1.432530,-2.958144,-6.758397,8.048240,-0.513882,-5.670248,9.458073,-9.954811,-9.052460,-3.749572,2.683951,-1.073694,-4.881380,-9.046699,4.161863,2.424392,0.805847,-7.391978,-1.111703,3.588726,8.768146,-1.868488,9.894444,2.451790,6.686099,-6.680555,-8.582746,-3.256821,-0.841575,-2.626586,2.573286,1.042248,7.854141,-5.662178,3.180700,-5.794856,4.294557,8.724566,6.145403,-5.911482,7.961020,-6.340377,1.084252,-9.611066,8.374464,6.843755,-5.412418,6.457692,-0.285526,1.726275,9.694418,-8.932018,3.530952,2.334315,-0.881282,2.102883,-7.870333,3.256933,-4.424642,-5.247417,-7.206919,-2.255260,-3.071900,-9.066221,4.216880,-8.567353,6.065806,7.721730,9.849495,-6.405231,-2.465463,6.383657,4.980463,-2.113710,-0.227482,7.762947,-1.697206,3.082775,8.888340,0.769881,6.579418,4.075913,2.424990,4.778592,0.578680,-9.610799,-4.357344,0.939208,5.835248,5.790444,-7.702179,-7.156711,9.804638,8.514464,-7.576030,1.983564,-4.854051,-0.418183,-0.492761,-1.232339,6.307215,8.547028,-3.392327,0.391691,8.522079,2.918703,6.903249,-6.481013,4.277418,3.682499,9.752555,-6.245793,8.680383,2.800836,-9.859812,-5.679911,-6.320645,5.050606,-0.319951,-2.549516,-2.688211,9.279626,-2.679677,-6.151333,2.387321,6.043537,-2.282834,-2.490919,-8.485825,4.205663,-1.157036,8.945093,-5.482577,9.310100,0.750241,-9.353256,-0.111195,-7.416893,9.269769,-0.435447,-5.865169,7.172056,0.838632,7.151968,5.294517,9.411909,-0.980871,9.119108,0.040445,3.984715,-2.905436,-4.806287,2.018990,1.992829,3.730416,5.227312,5.237145,3.477211,-0.562411,0.317741,7.331836,5.325460,4.035966,-9.252365,-7.448345,9.724921,6.742005,5.031964,-9.387803,-6.835046,-8.650638,-7.845334,-6.418233,1.962172,-7.321965,7.139924,6.984332,4.857499,1.079549,8.736764,5.704726,-3.614811,7.258095,3.703444,8.147214,3.167474,1.207997,6.359622,2.850580,-4.653990,0.299247,-5.234172,2.939473,7.772959,3.729094,-1.455789,-5.759736,-4.488444,-8.276128,3.215169,5.793332,6.074699,-2.977517,-7.279157,8.147402,2.174202,-7.571432,9.152912,6.157642,-3.424584,-5.198682,7.652210,-9.937238,-2.823506,1.218946,-6.630274,-5.822664,6.359058,-2.075831,7.882556,9.185250,3.262056,-7.746525,7.983516,7.999415,-4.874746,-6.020401,-8.930292,1.045942,4.204337,1.931353,7.425886,9.774621,-5.503010,8.487306,-0.015635,7.113991,-4.002747,-8.982945,0.489105,-8.919911,7.099139,-3.197410,2.739565,-6.892684], dtype = "float64")#candidate|8149|(1920,)|const|float64
var_8150 = relay.var("var_8150", dtype = "float32", shape = (1536,))#candidate|8150|(1536,)|var|float32
call_8148 = relay.TupleGetItem(func_4791_call(relay.reshape(const_8149.astype('float64'), [10, 16, 12]), relay.reshape(var_8150.astype('float32'), [1536,]), ), 3)
call_8151 = relay.TupleGetItem(func_4795_call(relay.reshape(const_8149.astype('float64'), [10, 16, 12]), relay.reshape(var_8150.astype('float32'), [1536,]), ), 3)
output = relay.Tuple([call_8125,call_8127,const_8128,var_8129,call_8143,call_8148,const_8149,var_8150,])
output2 = relay.Tuple([call_8126,call_8130,const_8128,var_8129,call_8144,call_8151,const_8149,var_8150,])
func_8153 = relay.Function([var_8129,var_8150,], output)
mod['func_8153'] = func_8153
mod = relay.transform.InferType()(mod)
mutated_mod['func_8153'] = func_8153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8153_call = mutated_mod.get_global_var('func_8153')
var_8155 = relay.var("var_8155", dtype = "int32", shape = ())#candidate|8155|()|var|int32
var_8156 = relay.var("var_8156", dtype = "float32", shape = (1536,))#candidate|8156|(1536,)|var|float32
call_8154 = func_8153_call(var_8155,var_8156,)
output = call_8154
func_8157 = relay.Function([var_8155,var_8156,], output)
mutated_mod['func_8157'] = func_8157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7974_call = mod.get_global_var('func_7974')
func_7976_call = mutated_mod.get_global_var('func_7976')
call_8159 = func_7974_call()
call_8160 = func_7974_call()
func_8153_call = mod.get_global_var('func_8153')
func_8157_call = mutated_mod.get_global_var('func_8157')
const_8172 = relay.const(-3, dtype = "int32")#candidate|8172|()|const|int32
var_8173 = relay.var("var_8173", dtype = "float32", shape = (768, 2))#candidate|8173|(768, 2)|var|float32
call_8171 = relay.TupleGetItem(func_8153_call(relay.reshape(const_8172.astype('int32'), []), relay.reshape(var_8173.astype('float32'), [1536,]), ), 5)
call_8174 = relay.TupleGetItem(func_8157_call(relay.reshape(const_8172.astype('int32'), []), relay.reshape(var_8173.astype('float32'), [1536,]), ), 5)
func_4865_call = mod.get_global_var('func_4865')
func_4867_call = mutated_mod.get_global_var('func_4867')
var_8176 = relay.var("var_8176", dtype = "float64", shape = (2, 192))#candidate|8176|(2, 192)|var|float64
call_8175 = relay.TupleGetItem(func_4865_call(relay.reshape(var_8176.astype('float64'), [2, 16, 12])), 2)
call_8177 = relay.TupleGetItem(func_4867_call(relay.reshape(var_8176.astype('float64'), [2, 16, 12])), 2)
uop_8178 = relay.tan(var_8176.astype('float32')) # shape=(2, 192)
func_7974_call = mod.get_global_var('func_7974')
func_7976_call = mutated_mod.get_global_var('func_7976')
call_8186 = func_7974_call()
call_8187 = func_7974_call()
output = relay.Tuple([call_8159,call_8171,const_8172,var_8173,call_8175,uop_8178,call_8186,])
output2 = relay.Tuple([call_8160,call_8174,const_8172,var_8173,call_8177,uop_8178,call_8187,])
func_8188 = relay.Function([var_8173,var_8176,], output)
mod['func_8188'] = func_8188
mod = relay.transform.InferType()(mod)
var_8189 = relay.var("var_8189", dtype = "float32", shape = (768, 2))#candidate|8189|(768, 2)|var|float32
var_8190 = relay.var("var_8190", dtype = "float64", shape = (2, 192))#candidate|8190|(2, 192)|var|float64
output = func_8188(var_8189,var_8190,)
func_8191 = relay.Function([var_8189,var_8190,], output)
mutated_mod['func_8191'] = func_8191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7702_call = mod.get_global_var('func_7702')
func_7704_call = mutated_mod.get_global_var('func_7704')
call_8207 = relay.TupleGetItem(func_7702_call(), 0)
call_8208 = relay.TupleGetItem(func_7704_call(), 0)
func_4791_call = mod.get_global_var('func_4791')
func_4795_call = mutated_mod.get_global_var('func_4795')
const_8220 = relay.const([[5.723605,3.442580,-7.880100,4.078697,8.671425,-8.079483,3.595647,-2.561909,-9.700182,-2.640973,-4.192696,-4.960816,7.998078,6.559650,0.034590,3.889472,-0.705889,-4.083669,7.777669,2.764596,2.878236,-5.946159,7.117761,1.988926,1.737690,8.851466,5.006458,-7.767386,9.442954,-9.288476,-6.061162,7.818982,0.911466,4.732642,-8.775034,4.095511,-8.306454,-3.502126,7.774449,-3.822135,0.421832,-5.658721,2.781013,0.141557,-0.959671,-5.008729,-5.955232,2.497071,5.827088,-3.520741,2.403896,-4.469110,-5.079764,2.918067,-6.297912,-1.127821,4.881977,-4.835026,0.394048,0.423323,-6.191976,-9.546858,1.011873,-0.249752,-8.462894,-3.517870,-8.867389,-1.858235,-7.321798,-2.389574,9.661296,-2.677436,9.573099,1.611668,4.620780,-5.722140,-7.824571,-2.197082,-9.254428,8.075433],[4.761027,-1.629462,-3.910638,-1.147695,-6.556270,9.733800,2.068279,-7.149303,0.407324,6.079080,-5.790307,-1.652693,-3.204453,5.633328,6.691883,-4.974106,-8.174130,-2.981414,1.151680,3.254566,-6.758699,4.952520,2.381411,-4.629181,4.657468,3.087197,-3.421245,5.358754,-1.217396,8.152856,3.878879,-9.305168,0.579128,-2.378936,-5.259234,-5.355990,-1.359979,-6.280207,-1.564805,-9.581637,7.586182,9.556510,5.354598,-1.782819,6.211140,8.869994,7.020013,2.845777,1.366180,8.436274,7.216941,-0.657635,0.159137,2.068688,1.396785,-6.995335,5.675509,-5.415948,-6.558345,-6.244933,5.721144,-3.472616,-4.776584,8.904605,6.900720,0.194068,-7.747175,-1.613651,-7.613746,1.568330,-2.976862,-1.730804,-0.870942,-3.448575,-0.750317,-2.368701,1.829324,-2.305353,-2.703412,6.900471],[7.596598,5.670189,-0.023139,2.781188,1.230259,-6.879283,-3.996464,-9.311236,-9.230411,2.611599,2.323534,-5.871077,-8.139631,-6.194836,-6.767133,-6.346071,-3.082879,2.561319,-8.514687,-8.999669,-3.127830,7.470751,4.987197,4.093507,-5.626186,-9.703484,-1.034049,-3.410470,-6.940927,-7.289887,-4.519976,-8.776877,-7.686641,7.938364,-4.064125,-5.366524,8.328761,-6.329533,7.961695,-3.161783,-2.381333,-2.843229,0.152256,-6.504596,4.412447,-3.575253,4.845134,9.630268,-8.236763,-1.885775,-8.445653,3.860365,-5.749606,-2.033131,5.708689,-7.685966,-6.745329,8.372211,3.962722,7.752599,-0.232617,3.817670,-1.300678,8.822182,3.514354,1.911435,-9.799267,1.010801,-6.751634,0.618048,-7.366817,-1.224826,-4.558044,-0.416463,0.141287,-9.665372,1.686363,2.573384,-4.201106,0.961413],[9.300151,7.428355,5.215217,-0.816171,2.417062,-9.994009,9.961496,-0.665032,-1.904319,-1.963079,-7.485561,9.673422,-5.485326,8.677002,2.337419,-8.498061,8.186635,-4.916111,1.308563,9.882471,-7.822424,-2.979708,-5.024976,8.282918,-8.612249,-0.150811,3.223635,-8.709696,-9.937310,-0.805717,-2.221704,-2.118556,0.814533,6.423518,-4.135472,5.234663,-0.940874,-0.482065,-4.711788,9.547689,0.992755,9.192070,1.739671,-7.342370,6.111145,3.663182,-6.812684,1.841722,-5.934105,-2.347601,8.562172,-1.497402,0.719182,-4.945991,-9.222709,-3.671780,1.895831,-0.937876,-1.016055,8.863535,-9.717242,4.122597,-9.611227,-3.131384,8.174136,4.411344,-3.826964,-7.852433,1.107854,9.629500,-7.859772,4.016087,6.877662,-8.037150,7.406638,2.577875,-3.562949,-7.977060,7.131349,-2.668551],[5.712109,-5.537193,1.473185,4.128417,6.250719,-4.696982,3.303036,-3.304462,-5.521441,-0.144920,-1.335931,9.403746,-8.557699,9.207279,-0.465815,6.057158,-2.842380,9.148547,-6.232342,-1.809475,7.916752,-5.824373,-4.665951,9.434455,6.632234,-6.489423,7.122656,6.189303,9.238018,0.815536,-8.839552,3.239970,-1.453193,-5.440031,-0.664788,6.844306,1.417983,-2.356051,-2.920322,-8.124216,6.207219,0.705209,-2.356124,-7.089475,9.829763,6.304366,-8.477276,-0.163236,2.259403,-9.562449,3.042342,1.755266,3.640606,4.495494,2.729582,4.300273,-9.086156,5.167429,7.748028,0.076592,-7.730343,-3.169772,8.861730,4.703943,2.364677,-2.388485,6.219977,-0.472424,8.806274,-8.131931,5.319131,4.889948,-9.239318,6.371875,1.348659,4.907480,3.200204,-3.533610,-5.469110,-1.201932],[0.035840,5.805340,-7.126610,1.801269,6.587407,8.280910,-8.533705,-0.105843,8.268259,-1.557919,-8.472184,-3.827205,-1.566473,4.961773,9.729246,-9.000083,-9.418642,0.546933,4.071847,5.994948,3.452338,-3.853165,4.336256,-5.805044,-6.181315,8.027803,-6.816734,-5.846805,5.588771,-5.518906,3.262467,1.208725,-3.995596,2.559287,-6.667245,-3.244749,1.608217,3.361065,1.541398,7.505738,-1.391219,8.015222,8.521078,9.888364,5.512084,8.563835,0.704510,-9.978232,9.374466,1.779404,-4.243690,0.331931,-2.243280,3.443932,3.914965,0.778610,6.684879,-4.153243,7.480951,5.176882,1.154687,1.455011,-0.938637,-7.733024,7.613064,0.522227,4.666003,7.091485,1.557712,-2.434086,-8.629348,-8.703109,-8.258820,-2.127660,4.976824,-1.226621,-4.660837,9.946568,0.066814,-3.520676],[0.450975,2.668577,2.948755,3.568213,6.909135,1.974145,0.199229,5.160713,-5.507777,5.427605,-2.567211,4.085531,-0.237153,7.804312,-5.846010,-6.139224,8.433069,9.420103,1.168238,5.853116,-7.847526,-2.138413,-1.750687,0.586300,3.164701,-3.423645,-4.018254,-7.844371,-6.593243,-4.028284,5.446532,4.485665,-6.166596,0.476563,2.189135,-5.003176,7.602002,0.439199,0.976698,2.323581,-0.452529,-1.394215,0.934660,1.715709,-3.916118,-1.983139,-4.562454,-1.211402,-0.618393,-3.826507,-6.330553,5.168947,4.431830,5.331532,8.631831,4.297133,0.989288,-5.075416,-2.474728,-2.673478,-8.972239,8.715353,-6.054195,7.571551,2.803644,-9.452443,7.477698,-9.051812,8.748254,5.141669,-4.061575,-3.370633,-0.308036,-7.813960,-6.532960,3.969507,6.506303,7.017677,-6.355380,4.415183],[6.555486,6.808471,4.172107,6.965058,1.103384,-1.432705,-4.694626,5.228490,9.429939,8.524490,2.771670,-7.312354,9.140387,-9.654103,1.834065,-8.349490,-7.509768,6.356472,6.652231,-4.569538,2.586864,-6.804484,0.704514,-1.034272,9.822771,-2.631059,-2.198745,3.139219,-3.111232,4.741649,0.926980,-6.269882,1.512576,-2.843470,5.069191,3.593607,4.506202,-5.568924,-1.137224,9.648465,-4.015083,-1.142968,0.172877,2.515031,5.079435,8.512381,-0.059948,-8.822695,3.481709,-7.544367,1.472948,7.411883,2.055332,4.141086,-8.821072,7.241983,-3.916671,8.637357,4.001763,-3.285287,2.472930,-1.236530,4.956519,9.419853,9.240274,5.562765,7.963987,9.540807,-7.346542,-3.756293,3.130457,-5.037780,8.992503,6.311198,-1.659459,-5.495500,3.243568,8.512643,3.888220,3.377135],[-6.709362,-4.613263,2.882147,-5.629931,-6.020758,-3.055471,-7.976698,-7.802298,-7.822865,-5.727634,0.291443,-6.018441,7.425346,6.206573,-4.172253,8.406232,-8.170657,5.737705,0.769618,3.924883,-2.900540,-5.595160,-7.570768,4.267184,-4.505687,8.739419,-6.443809,8.387460,4.774559,-8.835951,9.300746,-3.414243,1.954465,-9.677604,7.212289,9.174288,8.391756,-5.726706,-7.642179,0.459944,-1.653305,-0.387436,-3.247540,-4.156798,-5.989411,-4.360762,7.993080,7.206332,-3.467624,3.170124,-5.840794,3.668918,-6.598488,6.396575,1.456535,-5.520831,-9.329479,-3.993091,-2.706793,-4.995866,-4.831336,-6.036419,-3.586914,-9.011746,9.375722,-9.591107,-5.642138,-9.936203,-6.004100,7.916956,-7.399042,9.735276,-0.433918,1.127589,-8.928215,-3.514868,-4.577787,-1.653254,-6.025062,7.576640],[5.760830,4.059034,-1.961443,-7.026355,-3.754063,-5.109907,5.956516,3.202629,-5.232149,-1.579824,-5.506185,4.999096,-2.009568,6.564952,-8.945860,-8.195402,6.088529,-7.391625,9.473858,-0.093107,-7.401935,-7.680241,-7.875123,-5.338347,1.577980,7.876388,6.520501,-0.770214,1.823162,-1.243395,1.971174,2.023519,9.478403,-6.136310,-3.077800,-2.009972,4.116224,1.128129,-7.422642,-9.739906,-0.460941,4.358649,-6.747883,9.877449,-8.312696,-2.895952,9.578319,-0.146676,7.228221,1.775313,1.186508,-1.937747,5.188512,-1.008366,7.396005,6.974737,-2.928290,1.057922,-2.390420,-3.336316,4.445056,-8.494762,-1.314850,9.037488,2.878653,-4.636177,-0.357388,-7.943779,-2.063090,0.002049,8.900562,2.932260,2.183971,2.969132,-4.405149,-3.733025,-4.916072,-6.581042,3.584565,-4.112093],[-1.133539,3.150831,5.534268,-0.771132,-2.459420,-9.671495,-5.587455,-6.837339,-0.785424,-0.849730,7.663156,-1.713386,2.942830,6.738297,-9.404395,-3.462723,-7.148036,9.944091,3.991471,1.529565,4.415040,9.445075,2.467972,-3.292480,7.977064,-3.858942,6.682824,-5.541447,6.190293,-3.189101,2.314708,2.099993,-3.983395,-3.628288,-8.134459,-0.931769,1.429673,-8.549682,6.074026,-0.253265,3.914641,7.933614,-4.892633,0.839334,6.953589,9.010489,-2.118407,-2.930494,-7.918145,-2.092190,-5.539787,-4.909656,3.934026,6.327219,1.639776,4.201787,-7.774544,-0.852501,8.666060,0.736496,8.340448,0.637159,9.082453,-3.942960,-8.076976,-6.759606,0.106401,-6.285433,0.644420,0.565346,-5.236594,8.457292,-8.854130,3.226874,-5.714896,-6.456039,4.963853,9.531425,-1.516838,-6.965765],[1.932466,4.417135,-6.213359,8.452540,2.720354,-6.726248,7.572418,9.651285,7.134618,9.921433,0.168922,7.483142,-0.424076,8.535246,4.163242,4.797695,-7.110428,4.567300,8.300881,4.036620,-8.148836,-0.092585,9.152292,0.831563,-3.226182,-4.714280,-8.496081,-4.243835,4.141506,3.266020,-7.212773,2.499819,-5.505305,4.898428,0.712055,-3.740632,-0.941512,8.699909,-1.676698,9.537189,-3.564296,-1.116096,7.323289,2.954521,-7.865681,2.256668,3.505754,-7.160293,-3.480841,9.920965,-8.246513,0.334768,-5.353221,-5.715260,9.056363,1.075512,-1.675414,-7.555706,5.935826,-8.131108,5.757822,-1.434572,-9.411696,-2.466916,-9.298140,-7.189473,0.540982,7.734780,-6.736780,0.768747,1.947182,4.912534,-8.336819,-6.438705,9.236618,-9.337429,-2.312920,-0.071081,2.030210,6.053831],[-5.837739,-1.270837,0.573391,-6.868866,6.823107,9.651760,-6.889760,-7.269003,5.242539,-7.888839,4.847026,8.660451,9.063962,-8.865118,-5.230271,-1.951737,3.094605,-5.520515,3.612705,4.330580,-5.672770,0.700971,8.407487,-3.832883,-4.488346,-1.853831,8.294716,-4.092446,6.507480,9.326316,-1.706328,-5.571735,-3.489999,2.982937,8.572723,-4.985777,2.288563,4.016235,-5.523144,3.046603,-8.846119,-3.245197,5.309833,4.689834,-5.829904,-9.006963,-0.810610,-6.016857,-5.503106,-0.009045,-2.249030,3.652010,2.692218,1.808899,-5.492071,-5.254923,-6.614943,-9.037427,9.078220,-2.683732,-7.399679,5.590682,6.190938,6.718520,1.167996,-9.527058,5.889515,9.893232,-3.626556,-9.761141,-6.570377,8.132816,5.165064,-7.702861,5.104758,-1.850652,-4.563407,1.888340,-2.731557,3.940301],[-2.312439,8.577181,0.380392,-8.658154,6.642310,1.176101,-8.039445,-0.631364,-9.371653,-8.357698,0.337687,-4.659595,-7.720438,-5.828332,-6.333183,-4.700766,8.463593,-0.416266,8.596485,-7.102626,7.817316,-4.499325,-8.995640,-0.417991,7.423870,9.280614,2.608218,-3.738471,7.856520,-5.381228,-6.221666,-4.584491,4.773640,5.661476,-1.901183,5.587090,8.690765,6.383812,7.810126,-6.030703,-1.219008,3.066365,8.980652,-1.421233,-2.128291,5.832730,3.887410,-7.309196,-4.540323,9.584634,2.441013,0.669975,-2.767857,2.747774,-0.599634,0.545902,0.272117,-5.903193,-5.346770,0.472860,-9.955173,-2.114170,-5.322975,-3.877920,-5.287661,6.014354,-6.092760,-8.442762,4.002222,-9.750081,6.464856,3.666808,5.174977,-0.481714,-2.094993,-5.947922,-9.888790,-3.625210,-3.986581,2.996403],[4.587206,-1.566723,3.677427,-5.389560,-7.165787,-4.084838,-0.585963,-1.482913,-9.619519,-9.256274,-2.535322,8.749806,4.023328,-9.000080,-3.036705,-5.787925,-3.203464,2.184110,1.942466,1.783810,3.477968,7.791976,1.118068,4.613738,-4.019070,-0.379728,-4.506447,1.032152,3.229545,6.004406,-0.044956,1.656911,8.079943,-8.190183,6.115565,-6.029706,-5.750284,-9.124283,-8.095580,3.632216,9.154613,6.309996,1.716753,0.062907,-3.388930,-9.482094,-0.128262,-6.910704,-6.100076,-8.353902,-7.768038,-1.711028,6.214716,-5.351308,-9.746237,-3.307416,7.344355,-6.122191,6.122533,7.962590,-8.150217,-0.169358,-1.505324,-1.623476,0.490268,-8.825531,-8.593888,-6.975372,9.704725,7.706214,-4.872800,-3.814609,8.257225,-3.940207,-5.052411,1.253756,5.386448,-9.580745,-1.055396,5.045569],[4.524633,4.077739,-7.953801,3.319417,-8.620933,-4.065662,5.600002,-5.911057,8.046745,6.231371,-4.260089,-9.764932,-9.865060,8.884489,-5.607030,-6.438872,-4.303737,4.588087,-9.779862,1.193271,3.341307,5.281044,-7.787705,1.925684,5.370926,6.539940,9.163303,8.092881,-1.065571,-3.283494,4.661334,0.966987,-2.359184,0.647433,4.303262,6.954352,-0.527163,2.354161,-9.834552,-3.645185,7.129598,-0.191973,3.036114,-8.691973,-3.544317,-5.632009,-0.671273,-2.381328,-4.624631,1.217912,-9.509640,-6.715800,9.257921,5.134775,7.321536,6.056374,6.674077,1.033915,-7.919023,6.457757,2.861867,-6.854648,5.801786,-5.190858,-4.585036,4.359573,0.037192,9.397123,-4.815973,-5.729872,-4.607970,-7.240740,0.739260,7.584719,-9.691808,7.406338,-8.157127,8.640858,-1.189563,-7.069698],[6.675099,6.405191,2.159624,4.993785,6.481039,2.443985,-3.235694,4.704088,-0.954620,3.610183,5.261706,-9.441999,-9.286360,6.050547,6.205602,-2.421944,-3.862241,9.161793,-9.497258,3.557366,7.084718,-1.446247,-2.645316,2.079185,-7.682030,3.420509,6.991927,9.216929,0.974152,-1.267049,-0.022058,1.341029,-3.409294,5.688884,-2.983020,-0.345667,0.191745,5.856287,3.565326,-1.806261,0.453192,0.989602,0.558500,-0.271614,-1.951464,-3.924930,1.037528,6.834259,-5.131989,6.522619,5.270374,-8.172490,-8.293718,-3.342544,4.241799,6.260260,8.703065,7.731040,3.987305,2.995633,1.274602,6.891239,-4.660881,-3.134239,7.715970,6.929544,-1.889731,3.528729,7.846955,-7.717360,1.548033,7.934610,-6.514726,5.687920,-3.987057,7.048216,-9.534295,6.786258,5.634620,-5.217802],[5.438876,1.046368,6.352281,-4.129718,3.403906,0.725717,-4.665953,9.598508,-3.302065,-6.178630,7.613634,-5.738511,-1.679445,-1.188593,9.778649,-0.534085,-6.815443,-6.003895,0.877265,-9.485631,5.909007,6.499691,-7.276453,9.915368,8.801603,-6.324288,6.024410,1.138469,-4.251817,-7.814097,-8.685038,-0.476724,-7.797386,-9.012024,1.290317,-6.020925,2.913268,-9.441501,-1.961704,-5.449130,6.696681,0.742467,6.914505,1.741389,-1.876800,8.149973,-0.713889,-5.051526,9.757685,-6.596432,0.379160,6.415262,-0.568514,2.269757,1.669946,9.444176,-0.616946,-2.722009,3.898396,0.294060,8.606166,-3.194364,-3.067205,-3.328785,6.686583,-5.042446,-8.102822,0.640565,6.570141,4.709355,-8.867748,9.905099,0.538759,-1.926426,6.622627,5.813919,7.086643,1.192334,-0.804160,8.431532],[-0.913395,-9.206329,1.243613,-5.357367,-5.718390,-5.908051,-6.407849,7.754286,2.817387,-6.778985,8.758014,2.142856,4.282937,-0.117520,-7.011219,7.448617,2.590416,4.257106,-4.381673,9.548097,-6.934194,8.416475,-2.217687,-3.945406,3.113940,-6.202497,-0.023982,8.177252,-8.005929,0.586540,0.793325,-4.797977,4.840875,2.309155,8.456075,-1.985526,-6.704525,-9.584266,0.634134,-6.295328,4.574770,5.643833,-6.314868,5.298099,5.417052,-3.602717,4.135796,9.500465,-2.137976,-6.889947,-8.318257,2.161597,5.973482,3.375720,7.794608,2.368741,-4.014220,-2.836072,8.531155,-3.285843,1.733077,1.683871,2.945597,6.081061,3.201283,9.201828,-2.360197,6.151438,-6.518718,-6.166379,-5.578411,-3.319894,3.751902,-8.479949,-0.572476,6.397684,2.283431,-8.357361,8.752715,-6.174789],[-2.655230,-0.357923,2.278991,-8.788417,-0.774984,7.046288,-5.204867,-8.435788,-2.320221,-6.186766,1.995328,-8.093148,-0.653470,4.768113,-5.402837,-9.153854,0.384925,-2.828409,-1.658643,-6.794567,3.184556,-8.525900,8.316930,8.651077,0.016196,-3.782650,0.778095,9.830199,6.990842,-1.981900,-4.374794,-1.489253,2.331665,-7.950650,4.022888,4.319698,-9.109442,-2.048419,-4.406707,-6.190776,8.744946,-7.936571,5.181827,-6.396923,-6.704937,1.951922,-9.420887,-5.193053,-9.676375,8.250961,5.622626,-3.576656,-3.324328,0.594066,1.876228,-2.994815,-9.852817,0.719446,-8.953446,-1.933790,-1.975815,-1.910087,-0.245049,8.239816,5.935848,-7.846876,8.397846,2.707173,-5.788184,-2.990183,-8.469678,-6.554217,4.127438,-5.184478,-9.379449,-1.271217,-4.198956,8.809393,1.591555,2.642355],[3.746473,5.369278,5.010651,2.415147,5.027087,1.633260,-6.497014,-5.967407,5.859032,-6.260919,4.446192,9.902195,6.418581,-0.082986,2.515937,2.351866,-4.675519,4.558424,0.144434,6.444777,-0.724925,-9.620067,-9.527572,-5.399382,-7.836743,3.412879,8.019854,3.606478,5.509771,6.511221,-5.634607,-9.137144,1.827973,-1.515388,-0.582812,3.965124,-8.727445,2.178769,-7.463309,-8.005302,-0.228591,-4.130953,-2.419827,-1.603602,-4.841991,-7.137483,8.373739,4.717215,-5.600716,1.397201,3.830249,0.722300,1.753786,-7.121790,-5.435775,-3.568189,5.644630,-8.064657,-9.327368,6.700224,-7.767836,3.710709,-1.271908,-6.102759,-0.836574,0.308477,-9.620032,8.173769,-2.002682,7.811053,1.800423,1.357541,4.091183,-7.693654,3.028725,-6.311691,-2.441611,6.416430,-2.564009,4.971846],[4.948005,-5.462868,-6.288519,1.942954,5.217815,9.106346,-3.503299,9.655744,6.430878,-5.942842,-4.268243,-3.983653,-4.168477,4.388604,-1.663081,-4.047695,-8.823056,4.702121,-4.228842,7.897983,-5.756172,-6.965192,9.216485,-6.744611,-6.394737,9.898672,1.287559,1.522095,2.468694,-9.015250,5.291903,-0.948269,6.149580,-5.577492,-3.088647,0.180472,4.727959,-0.054939,-8.076916,5.482963,9.512915,6.466379,-5.591947,-5.827269,6.733720,2.652929,0.789193,-2.123262,-5.109668,0.832813,-6.096205,0.314936,-8.044071,0.971587,-9.549385,8.284533,5.918796,-5.509412,2.262942,-2.754766,1.724765,-0.696058,3.140472,7.152435,5.978829,-4.153504,2.595288,7.065945,3.469388,-5.596817,9.833843,2.288565,-5.934748,2.251525,9.188008,4.675570,7.802757,7.603593,-7.802044,-6.441354],[1.595452,-0.543649,-4.339847,5.996348,-1.841278,7.093641,0.017942,-1.227858,-4.246627,-2.098293,6.338789,-5.266260,7.351426,1.699563,-5.222071,6.845896,8.774054,3.926044,-8.247318,7.812241,-1.910782,-6.948721,-0.674188,-8.217764,-4.708333,-6.662081,-7.368250,9.348840,-5.724407,2.452644,-4.844780,3.617360,-5.045868,-3.002751,0.615756,0.214967,-1.074991,7.454066,4.623839,-5.466030,-8.905860,6.114449,5.417463,-8.989582,-8.151910,5.895437,6.589202,-5.922246,2.404657,-0.241225,-3.378758,-5.322066,3.420361,4.944222,2.559697,8.596058,-7.624899,-1.319239,0.691680,-5.155624,6.861970,-0.172742,-5.956231,-4.506517,1.637135,-8.680229,2.275640,6.240065,-3.353845,5.080526,-2.386347,-8.515844,9.244124,-6.233922,9.314756,-4.711816,-2.465949,2.119040,5.999139,-8.725517],[-9.650206,7.051212,-2.539877,3.957727,4.240236,-5.338679,1.826154,2.272086,-4.634705,2.080554,-3.526562,-2.288254,-9.959930,0.493902,0.573687,3.020931,-4.312665,6.419953,0.507845,7.349113,5.783804,-1.099199,-0.551689,-8.183392,0.286646,6.039497,5.323497,7.114151,7.919534,-2.529676,-6.021459,3.296743,-6.974515,4.343578,2.469642,-7.108774,1.629927,6.087163,-2.265077,-5.956607,0.878922,2.730584,2.643737,-4.603274,5.141137,3.571670,-8.653121,-6.888739,-7.579608,-7.937399,6.552807,-9.552027,6.489625,-4.728840,7.082849,-4.975162,-4.176691,-4.900008,-7.154279,8.423392,0.238077,9.786278,3.128645,-9.746973,-1.203819,2.419702,5.618611,-7.403805,8.758495,1.817241,9.369475,2.151953,7.721795,9.772554,-1.380857,-8.037973,2.928819,-4.387107,9.855008,-9.667408]], dtype = "float64")#candidate|8220|(24, 80)|const|float64
const_8221 = relay.const([-7.290442,-5.836875,1.830166,-3.784853,8.510541,-5.477927,3.584810,-3.375706,-0.396744,5.217627,-4.081695,-8.201626,-5.928342,3.283014,-6.493445,9.038352,-9.633695,-5.514468,0.295431,-3.998195,-2.449531,2.009928,-2.442024,-6.327377,-5.538138,6.352126,1.111401,4.381949,-7.956514,8.247071,6.217895,1.052449,-8.501785,7.378558,9.092328,-6.452280,5.930658,8.683580,2.703273,-1.456072,-1.226878,7.431208,-4.854395,7.044137,9.428229,1.567929,7.618846,3.563584,2.550742,6.483553,-9.896058,-7.393931,-2.451823,-4.098440,9.435575,9.927593,-5.993877,6.620553,6.780593,4.610374,-3.553872,-6.685556,-9.068849,5.371111,-4.029921,-7.428193,2.468554,-5.927182,-6.789179,2.086943,-5.939054,0.968646,9.260093,2.381112,-6.312573,-8.017275,4.687193,-7.483735,-9.505399,8.598321,6.987490,8.347809,3.990597,-0.869608,-5.160210,0.357144,-6.625790,7.597977,-7.782368,2.645241,-1.934722,0.932209,-6.697632,6.317550,6.996097,6.551089,-9.577707,5.540482,0.600025,9.553794,-1.739842,-4.776182,-0.758346,-0.621819,-4.664716,0.999313,2.534097,-8.304719,-4.971239,-1.611502,9.001732,-5.875975,2.153180,3.905470,7.119888,-8.466555,7.896621,1.761498,3.470718,-6.853192,4.509084,-7.437974,-9.954096,-6.616954,-0.282600,8.139960,-8.160537,5.658032,7.660522,-9.599188,2.317841,-3.839883,3.295807,-5.358179,-1.595691,-6.744405,-5.678194,-2.815110,-2.405590,-8.191209,-3.192820,-8.126271,0.048190,-9.770313,-3.888874,-0.154667,4.741583,-6.405728,-0.538678,9.241336,-7.691472,-0.215419,-3.283187,1.298956,8.754988,9.734833,6.680980,-7.107780,6.646220,-9.430035,-3.136891,-3.326864,6.376017,-4.685344,8.974494,-6.065238,-3.099611,2.347438,-9.441975,5.022482,-0.291159,5.253559,-1.047117,-7.882956,-9.406425,9.544731,0.761183,-2.390259,-3.639367,-4.391041,3.441382,8.447408,6.977177,-3.979660,-6.423811,5.789177,8.751106,-2.199903,4.748505,9.294928,1.988130,-3.359446,-6.729334,-6.975655,8.221952,8.402887,4.394604,-3.711364,3.010971,-7.687368,-3.987617,-0.536203,-3.213728,5.898055,9.587198,5.365242,6.911693,-1.868513,7.934724,1.440605,3.530299,7.813245,2.092113,-5.519677,-9.288208,-3.055555,-6.023653,-9.689343,-6.011798,-6.095645,4.701176,-7.137002,3.850231,-1.737074,9.257913,-3.356545,-6.056303,-9.867417,7.982537,-5.015164,0.857145,0.753055,8.402970,1.602876,8.167404,-0.997305,6.185595,-2.834484,2.287590,0.321876,-2.187585,2.656019,5.654949,-1.963524,-5.350921,5.242346,-1.692827,-2.497435,-5.091733,7.888850,9.923009,-2.500938,-4.338676,-5.408261,-5.069119,4.579539,6.019989,3.065297,-6.819478,4.790436,3.038442,-4.482840,1.516463,8.927710,-9.433387,-4.031745,-2.026342,1.764905,2.663969,-6.520996,4.321817,-8.368417,1.072209,-8.443583,4.293928,-9.730348,-6.877993,-6.967297,6.010331,7.969774,-3.821379,-9.039235,7.122691,-0.094844,1.563228,-4.383387,-5.578861,3.887821,-5.178257,2.986964,2.034666,-8.999848,-3.494113,-1.973654,7.972321,-0.256636,6.452286,-8.029175,-8.448993,8.022176,-2.726172,-7.348466,-0.959446,-2.038676,6.524585,-9.641575,6.515556,-1.998753,-6.606379,-9.587052,0.664762,1.860348,5.048378,8.814285,-2.536727,5.302598,-6.029793,4.084264,3.925392,8.488950,4.557595,5.296668,0.189088,6.504902,-8.229800,5.571123,-7.259071,-6.210439,-8.983499,2.394241,-6.958603,1.251172,-6.726537,7.492810,-3.806110,1.972628,8.859402,1.494608,-6.621422,-5.653801,-3.162407,-7.309337,-4.532062,-2.086191,-0.741654,-3.854154,-0.093140,9.210763,-9.922258,-4.346997,-3.909959,9.792962,-1.148177,-1.649606,6.997776,-7.782544,-7.528343,-2.424870,0.521484,3.544193,-1.198538,7.300799,-4.752893,8.132632,3.192793,2.837375,4.602089,3.638884,0.259537,8.117792,-4.021679,-9.174810,-6.781907,-5.600672,7.953305,-1.877004,1.255586,-6.886110,-4.785993,-7.662245,2.512344,4.219762,-5.562285,7.797639,-1.714540,-7.802757,-7.630684,1.505201,7.328825,-1.677860,-8.047837,-2.233873,-1.567772,5.891348,0.405339,6.635685,4.271128,7.635698,8.234676,-0.568367,6.054848,4.313246,4.162350,4.300433,-7.694451,-6.671129,-6.235302,-4.744308,8.230232,4.316402,1.026007,-5.114368,-5.873882,6.419830,-7.936528,7.798781,-5.669012,8.729027,-9.554410,4.003846,-2.990688,8.419157,-7.669943,-0.750749,4.804570,-2.981797,-8.390443,9.670835,6.769570,-2.147654,-0.334472,5.932228,-4.508461,7.131851,1.946040,1.522995,-4.038769,-4.648712,-7.874828,-5.239828,8.319985,6.912735,8.976044,-2.835642,9.447904,-1.505721,-8.288210,-8.534158,-1.097952,6.169295,-3.673719,-2.428879,2.346160,-3.475467,0.599274,3.615964,7.257177,-4.294086,-6.346076,3.648184,1.150018,6.073225,-8.815723,5.945650,7.317546,-4.241868,5.832570,-7.554592,-7.967256,3.716948,-3.032402,-6.952116,2.460332,-7.610557,3.783074,0.442134,-1.079808,-0.541145,-1.218299,2.361319,8.558623,-6.496920,-7.851674,5.068327,4.266743,-2.919600,-5.667472,3.660832,8.683960,9.356395,-2.189832,-8.081241,3.350465,4.312808,-5.543374,-3.632595,-0.237417,-7.421278,4.087593,3.452183,-3.411844,-9.982229,-1.625649,-5.157562,-8.084998,-8.936928,-1.669224,8.724402,-6.228692,-5.615433,6.196115,-0.208413,5.727284,5.534787,-3.511829,9.062109,-0.417467,3.573036,2.495680,2.337738,4.422715,-6.743035,-3.281381,-8.561131,-3.571233,4.094611,7.811466,-7.472097,-4.587367,2.927592,-1.563862,-6.478395,2.154882,-2.203999,0.040228,-5.479458,6.683018,1.878444,-2.633290,-2.787465,-8.148794,-9.889901,0.714700,-6.681716,-2.745813,8.957444,-5.610230,-9.818822,1.714476,-5.408831,-5.313854,-4.455184,-2.684418,5.564919,9.301504,5.871427,5.850375,0.002441,-7.512714,-0.972280,7.317772,-6.834842,4.112778,0.424156,6.973443,-4.976014,-6.076651,9.842371,-5.803714,3.545979,7.660184,3.653997,9.081219,3.091353,-1.344384,-3.603283,0.636408,7.351398,3.773365,-3.617315,-6.259212,-6.113753,5.443515,1.869731,-2.284023,6.623302,-7.040458,-5.385299,3.561116,6.466164,-5.857814,6.300072,-5.159995,-5.245208,-3.925001,-5.089020,0.625799,8.468666,8.377246,-3.214267,-8.233789,9.209603,-0.432162,-0.353608,7.917005,8.414697,9.939505,-3.886440,3.623621,-4.484739,5.307842,9.754131,2.240481,1.401238,1.855600,8.152563,7.145635,-5.802871,-7.654956,4.302582,9.420432,7.079704,4.283654,-9.066848,1.769306,-6.912458,-4.106460,0.816755,6.533344,-6.346299,7.764346,-5.419851,-1.711343,-0.159745,8.901548,-9.999983,2.377680,2.357007,0.932539,2.843015,-9.728997,6.441908,0.645038,4.700588,5.655341,-9.183302,6.790485,1.330793,4.585401,-7.820975,0.730607,2.509804,3.904128,-8.944072,3.964621,0.506266,1.111597,-8.345044,6.000446,0.624569,6.608802,1.763332,-5.451197,-1.891994,4.623758,-0.145312,1.545311,9.364950,0.694029,-4.798388,4.065060,-0.724008,-1.686007,-3.324165,-4.256645,1.732144,8.060485,-0.482374,6.628890,8.706423,-0.990717,-9.961726,-3.066300,-0.465277,3.400213,-9.979335,-3.556217,3.809673,1.096529,-2.797154,-0.304752,7.080237,8.517603,5.033098,-3.810932,7.817137,8.714279,-8.342006,7.099244,1.791292,1.607556,0.998052,-0.469629,5.431233,-2.057156,-5.595204,5.748155,-5.543450,6.769085,3.235807,3.825368,-2.518894,-7.927488,-5.629325,6.932311,-2.923261,2.868061,-0.855671,4.092277,2.562944,-7.098909,-8.799165,5.757625,-7.396233,-3.302225,-6.112207,-1.370278,-1.828296,1.399947,-1.574537,-4.704196,-1.122890,-2.052649,-7.576822,-4.696503,-7.222385,3.444670,-2.652109,0.546997,1.620313,-0.427337,5.629563,7.180716,-3.996374,-9.016125,1.073749,1.425391,-8.606502,9.205226,8.635743,-0.202976,-0.101185,-1.979759,-6.491009,7.229356,-2.418789,5.131430,-9.799102,1.571355,-1.542156,7.896782,6.414275,2.598553,-7.957363,-5.576424,-3.803241,4.158875,-4.300327,5.361501,-7.376791,-5.838146,-2.690609,-6.223543,-8.624616,9.623054,-2.181228,0.341989,-5.373758,4.206466,5.693255,-1.395636,9.191260,-3.815449,-7.059764,-0.943444,-4.510919,6.142989,8.963352,3.442387,3.369370,-6.218587,7.627974,7.738679,-5.548955,-5.296340,-7.942359,9.124514,1.553902,8.768697,6.584684,-8.049639,2.296483,-0.192500,6.362187,-2.525092,4.776866,-1.241265,-0.928195,-2.428078,8.809264,-1.015062,6.427412,4.705097,4.850442,-0.579914,-6.937705,-6.021865,-6.026005,-4.802732,-5.286220,0.011106,8.369178,-5.995760,2.061740,-2.525500,-7.389637,5.633194,-4.179375,-3.634366,2.652893,-3.516063,1.894409,7.102786,-6.894824,6.884003,5.327815,-6.260831,2.449797,-0.849974,3.626444,7.716122,-9.408846,9.466346,9.377290,-4.734484,7.430463,-3.056724,-8.621564,-7.595047,-7.986282,6.708769,-4.650776,-4.515753,6.560985,9.417153,-4.976994,-3.728261,5.574109,8.701269,4.253712,2.286889,8.074729,4.576007,-3.189657,-3.794646,9.198230,-6.091184,3.947494,6.733645,0.894009,9.487756,3.325229,-4.285632,7.978335,2.374425,-8.891997,7.060132,1.903246,8.610344,2.915496,-4.106879,0.662772,-9.715430,8.839140,2.618014,-0.385724,-9.655169,-8.120754,-5.084806,5.547198,-7.015810,2.105111,6.869497,-7.427785,-2.447368,-2.713908,6.465322,9.096297,-3.683429,8.134138,1.376711,-1.322265,-1.659017,1.965966,-9.919369,-6.823554,-9.551377,4.001454,-0.243161,-3.383573,4.351309,8.939699,-3.858424,-4.531012,-5.314577,6.306687,-9.943846,0.736974,-8.284606,3.797102,3.094228,-0.487567,5.001848,9.869588,6.859090,-5.849934,-8.881894,2.154942,-7.514670,5.398664,-6.268237,3.120383,-9.550465,5.227273,5.136821,-9.734549,-5.738408,-3.114015,-6.377654,-5.154728,4.909237,-7.967452,-4.518457,-6.151586,9.441761,0.683615,-6.404208,-2.257181,-8.424185,-3.482365,2.316298,-5.289963,7.021856,6.969946,6.767162,4.529207,8.113493,-5.602577,-4.381475,-2.837625,3.603982,3.520133,-2.710828,-0.911969,4.655166,-6.184089,4.111311,-6.573808,0.852403,-1.477048,1.176272,5.098521,4.825613,5.991828,1.303155,-7.094407,6.067323,-4.065916,1.415740,-2.648986,6.783938,0.122528,-4.230375,7.203576,-2.477089,-2.953879,-7.667388,-6.955468,4.693514,8.889043,4.851224,0.118431,1.265757,5.337792,3.707400,3.763756,-4.636299,7.887496,-8.920861,8.567236,0.971575,7.990811,1.383478,6.328075,9.947361,5.895884,-0.856936,8.490691,5.759296,3.364066,1.428338,8.903441,1.007169,-7.879451,-8.497557,-9.246188,7.351643,0.341790,4.074195,0.868471,5.990954,-8.692448,-0.106495,9.762270,-5.501848,-6.968757,7.922152,8.462707,-3.324376,-0.534955,1.206466,-2.465734,-3.652425,-4.512628,4.887736,-4.922190,-0.694410,-6.603069,5.580927,-1.031540,-7.066255,0.043234,0.334614,2.564048,-7.569577,-5.712985,-3.353633,-7.128399,-2.681416,3.660165,-8.260272,-9.594948,-3.339554,8.005341,-8.153500,1.130265,-6.247142,-9.865649,9.529544,-6.077323,5.532207,-6.165299,8.040111,6.766402,2.688550,3.965572,-0.279254,-4.154241,6.303322,-6.144696,-0.959200,-7.424574,-3.969241,-1.936609,-9.406103,3.739920,3.962117,-2.357297,-7.420997,-9.303771,-0.210964,-0.360029,1.363585,5.461418,-3.233642,-8.023631,9.099542,-4.544439,2.303790,4.331154,1.190151,1.597137,-3.649604,2.415065,5.801149,-6.713029,-2.296829,2.050850,-1.996729,-6.720444,-5.378140,8.509866,6.613859,-8.318409,-4.405778,8.210151,-9.243087,-9.978191,-8.136250,-9.118658,6.845348,9.742041,8.497254,9.528692,0.031703,-5.991361,-3.617810,8.462373,3.111029,-1.218433,1.745874,9.789302,-7.528258,6.614436,-9.223801,3.297701,-1.184912,7.129958,9.502247,4.639845,-4.541723,-3.769048,4.173417,-4.427250,0.398170,-4.605229,-6.418221,7.986417,1.133519,2.228187,-2.692954,7.735792,6.645456,-4.951943,7.630618,0.978525,5.928945,-8.118098,6.653131,-1.476275,2.310821,-6.090828,-7.675535,9.064815,-6.378045,0.952561,8.457549,6.302592,1.407634,9.526239,-5.597129,-1.326274,-1.184381,-9.646049,-7.458870,6.507565,-0.317673,8.991705,5.704154,-7.529933,-2.302970,-8.500966,7.462686,-8.727905,0.204262,3.481832,9.532447,9.086217,3.596718,9.324633,-3.649592,7.618346,-4.536323,-5.691345,1.921525,0.445336,-8.012336,3.607910,-6.524386,2.122407,1.199781,1.102418,-8.276851,7.459879,-8.016425,1.589912,0.493074,7.616374,-5.669206,9.966316,4.096253,0.772119,-9.858047,5.884091,-7.025307,-1.764053,3.758199,-1.778598,-2.875053,3.364991,4.848364,-1.994061,-7.063602,-9.098462,9.577660,-5.098214,9.203700,-4.401016,5.133630,-5.469270,-3.005672,8.879845,-8.772889,-0.025187,7.579539,5.730743,-3.069692,1.137569,-5.590620,6.035133,7.185582,-1.508237,4.127111,-9.450605,-7.444367,0.194426,0.611398,-4.579987,-2.840286,8.242288,5.931415,-6.929470,-6.344451,-6.419316,-9.435078,-8.358390,9.568197,-7.240774,8.498371,2.954346,9.395425,9.989404,-9.574770,-6.970622,-6.842751,-2.256733,-4.725342,8.930381,4.593116,9.576333,-3.995277,9.277132,-8.579791,-4.678534,1.966715,6.417102,-1.768071,7.674981,7.269422,-6.999011,9.948100,9.315143,2.247617,-5.585926,-7.585199,-8.232685,1.365345,-4.860159,9.033669,-0.784387,6.547193,0.380236,-9.392647,-0.642157,-5.358281,7.760649,3.693672,-1.475738,4.380690,1.827451,-7.059670,-3.759918,-4.947705,-6.115489,-1.208058,-1.405040,-2.749518,8.533588,-2.747967,-8.436394,-1.043812,6.607856,-7.495049,6.749023,-6.700025,2.430288,-0.692407,8.965993,3.880509,2.166021,-9.864673,2.013517,2.910059,5.869084,-7.692208,9.552272,1.920520,-4.129180,-9.282268,8.054610,0.603855,1.067711,8.703177,-4.851236,-9.363159,-7.269479,6.684088,-5.533254,-7.720452,-2.603649,2.457540,-5.703597,-3.251592,1.468231,-3.670161,-2.475553,0.513846,1.578652,-3.901176,0.785522,3.778860,5.251025,7.058894,-9.481238,1.918390,-8.407371,-9.159614,3.518186,-4.650945,6.958650,0.380946,-9.958394,3.255920,7.869277,8.578133,4.436838,-5.993194,6.327950,-5.292367,-8.280663,-4.104594,-9.176048,7.421597,-7.322500,-2.828927,-4.900232,9.420423,5.203528,-2.090068,-3.942392,4.634887,4.507927,-0.463518,-1.312080,-8.862146,-8.976592,5.273549,1.910675,-6.090202,-7.597666,4.533204,-1.124731,4.400565,5.018780,9.738002,2.230540,9.104776,-9.190946,6.910682,-7.217427,0.528125,9.157905,-4.230331,4.672768,-7.574355,9.716176,-6.071745,-7.268519,4.988008,-9.784301,8.445487,-3.973113,-4.245771,-7.583571,2.240995,6.987933,8.847080,1.592807,9.712329,-5.460697,9.256080,1.631758,4.397841,8.941701,6.317224,4.252384,-9.253105,-7.482368,1.881574,-3.076999,4.583023,0.498670,-8.219900,-1.152266,-8.574603,9.646030,1.637523,2.937745,-6.505024,6.232659,-6.813411,-1.952927,-6.795244,2.572303,1.795505,-5.020956,3.773490,3.534269,2.526729,7.186340,-3.114440,2.812996,5.729095,7.185264,3.296158,-6.337868,0.758840,-4.694711,7.689118,3.437406,-0.978466,8.637986,-7.045574,1.330419,6.355326,1.900489,-0.050317,4.349679,5.561364,1.557217,1.651112,6.476504,4.755918,7.803499,1.633408,2.500442,-5.885045,-9.457068,-6.978791,-8.612184,-8.013326,9.903468,-2.385850,5.232922,2.185524,9.359716,-5.788185,-6.620798,-2.948544,-4.163925,-9.717178,1.739681,-6.768911,2.967824,-5.783086,-3.013347,5.826074,3.426441,-2.490777,-9.450720,9.604707,8.018602,-9.669086,0.187194,2.145344,-2.136382,-7.114999,-1.622938,3.151886,0.819108,-9.023132,1.285043,9.214493,9.484371,3.024890,-8.436486,4.619018,-7.041428,1.500675,9.268440,4.828138,-7.017562,7.099952,-5.421293,9.664517,-0.955176,-0.503572,4.624187,-4.370233,2.126685,-5.459537,4.919123,3.161168,5.311660,6.753903,7.568965,5.859819,-7.237958,8.525030,3.391285,-1.571835,-7.007734,6.467568,1.409822,-1.247757,6.905693], dtype = "float32")#candidate|8221|(1536,)|const|float32
call_8219 = relay.TupleGetItem(func_4791_call(relay.reshape(const_8220.astype('float64'), [10, 16, 12]), relay.reshape(const_8221.astype('float32'), [1536,]), ), 1)
call_8222 = relay.TupleGetItem(func_4795_call(relay.reshape(const_8220.astype('float64'), [10, 16, 12]), relay.reshape(const_8221.astype('float32'), [1536,]), ), 1)
func_4236_call = mod.get_global_var('func_4236')
func_4237_call = mutated_mod.get_global_var('func_4237')
call_8226 = relay.TupleGetItem(func_4236_call(), 0)
call_8227 = relay.TupleGetItem(func_4237_call(), 0)
output = relay.Tuple([call_8207,call_8219,const_8220,const_8221,call_8226,])
output2 = relay.Tuple([call_8208,call_8222,const_8220,const_8221,call_8227,])
func_8231 = relay.Function([], output)
mod['func_8231'] = func_8231
mod = relay.transform.InferType()(mod)
mutated_mod['func_8231'] = func_8231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8231_call = mutated_mod.get_global_var('func_8231')
call_8232 = func_8231_call()
output = call_8232
func_8233 = relay.Function([], output)
mutated_mod['func_8233'] = func_8233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5840_call = mod.get_global_var('func_5840')
func_5842_call = mutated_mod.get_global_var('func_5842')
call_8312 = func_5840_call()
call_8313 = func_5840_call()
output = call_8312
output2 = call_8313
func_8331 = relay.Function([], output)
mod['func_8331'] = func_8331
mod = relay.transform.InferType()(mod)
mutated_mod['func_8331'] = func_8331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8331_call = mutated_mod.get_global_var('func_8331')
call_8332 = func_8331_call()
output = call_8332
func_8333 = relay.Function([], output)
mutated_mod['func_8333'] = func_8333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5489_call = mod.get_global_var('func_5489')
func_5491_call = mutated_mod.get_global_var('func_5491')
call_8334 = relay.TupleGetItem(func_5489_call(), 1)
call_8335 = relay.TupleGetItem(func_5491_call(), 1)
output = relay.Tuple([call_8334,])
output2 = relay.Tuple([call_8335,])
func_8349 = relay.Function([], output)
mod['func_8349'] = func_8349
mod = relay.transform.InferType()(mod)
output = func_8349()
func_8350 = relay.Function([], output)
mutated_mod['func_8350'] = func_8350
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8378 = relay.var("var_8378", dtype = "int16", shape = (12, 16, 5))#candidate|8378|(12, 16, 5)|var|int16
const_8379 = relay.const([[[-6,4,1,6,1],[2,1,-6,1,-9],[-6,3,7,-2,3],[-4,8,6,9,5],[-3,9,-6,-7,5],[-3,-7,10,8,-8],[9,-9,-7,4,-7],[5,9,8,-1,2],[2,-4,4,2,5],[4,-9,8,-7,3],[5,-6,2,-8,8],[8,9,-9,-5,6],[1,3,-10,8,-7],[-1,-9,-5,-10,3],[-6,10,-2,-8,-9],[8,-4,-10,3,-2]],[[-8,-1,2,7,2],[2,2,3,10,-10],[6,9,-8,4,8],[10,-1,-5,10,4],[4,7,-7,-10,2],[6,-8,5,7,-9],[-5,2,-1,-10,-1],[-2,10,2,10,4],[4,9,6,-9,-5],[-7,7,-8,-8,-9],[3,-5,1,-2,-9],[-6,-6,-4,10,5],[-2,-6,4,9,-2],[-1,10,-8,3,-5],[-6,-3,7,-7,3],[-2,6,3,-4,10]],[[-1,-9,-6,5,6],[-2,-2,-5,4,-5],[5,1,-5,-9,-7],[5,3,2,-10,9],[-8,6,-7,8,-4],[8,10,1,6,-4],[-3,2,2,5,2],[6,6,9,-7,-5],[-9,2,-4,5,-5],[2,8,1,-9,-2],[2,-10,-3,2,-5],[-1,-1,6,-8,-5],[9,-10,-1,-9,-7],[1,10,-8,2,3],[8,-4,10,6,10],[-8,9,6,-9,2]],[[7,-7,-9,-1,4],[8,1,3,-1,-7],[10,-10,5,1,-2],[-4,-10,-9,8,8],[6,-6,-10,-10,7],[2,5,8,-9,-8],[6,1,4,5,-9],[-4,8,6,8,-1],[-3,4,-4,-10,5],[-3,1,-5,3,5],[-2,9,-8,10,-8],[2,-3,-1,-1,9],[10,-5,5,6,-1],[-1,1,-4,4,-4],[6,-6,-2,-7,10],[9,9,9,-5,3]],[[-7,8,6,-6,10],[5,-7,5,1,-2],[-10,-9,4,-3,4],[-6,2,-8,8,9],[5,5,8,-1,4],[8,-6,-2,-6,1],[3,-2,1,-3,5],[8,7,-1,-3,-6],[10,10,-2,8,7],[9,-7,5,10,-1],[-10,-6,-2,4,1],[-4,-3,-7,-9,2],[-6,-8,-1,-5,10],[5,-4,-9,-9,-4],[4,-1,4,-3,-7],[-1,-7,8,-1,-8]],[[-6,3,5,8,6],[4,2,8,-7,1],[5,7,-8,-9,-5],[-9,3,2,-5,-3],[2,10,5,10,-8],[-8,-2,6,-9,10],[-5,6,3,5,-8],[-9,-6,-4,9,-4],[6,2,6,-9,-5],[10,2,-10,-6,2],[-3,-8,-2,-3,8],[-7,-9,4,9,2],[-6,5,-10,2,-10],[-2,7,-6,-4,-1],[-6,9,-7,1,-8],[-9,-5,2,-9,-1]],[[-1,4,7,-7,6],[-3,6,8,-7,-9],[-1,-1,5,4,-8],[-3,-10,-6,-6,7],[-3,-6,2,-2,2],[6,-4,-4,10,4],[-2,6,-5,-10,7],[5,-8,7,-5,-1],[-4,4,3,8,-3],[1,9,-9,10,-3],[9,-5,9,6,-4],[-2,-3,-8,-4,8],[-9,5,6,10,7],[3,3,10,-1,-7],[5,-3,8,7,-10],[-9,3,6,-10,-7]],[[2,-3,-7,1,1],[-3,9,-9,9,-9],[10,-7,4,4,2],[10,-9,-10,-8,-4],[-1,7,3,9,9],[-3,5,-2,3,-2],[-7,-8,-7,-5,-1],[4,-6,-6,-9,2],[-2,-7,-5,8,6],[5,-4,2,-3,-6],[7,-8,5,3,8],[1,2,-9,-6,-7],[6,-6,4,4,6],[-4,2,-6,-8,10],[-6,-8,-9,-7,5],[-9,-7,3,-4,1]],[[-7,-3,-8,7,-7],[4,7,6,-10,-3],[9,7,-9,-7,5],[3,4,-2,-4,-8],[3,-6,5,-8,-5],[1,-3,9,-9,4],[-4,-8,4,1,-9],[9,-3,4,-9,5],[3,9,6,-7,2],[-1,-2,-5,8,-2],[-6,-9,-8,-9,5],[-2,-1,4,6,-2],[-5,-7,1,3,9],[-6,-8,6,-10,-4],[10,-5,6,-10,-1],[3,5,-4,5,6]],[[5,-10,1,-9,-2],[7,-7,-5,-2,-7],[5,-10,3,7,-3],[1,6,-9,9,7],[-8,-3,7,-2,-3],[3,-1,10,-8,2],[-9,9,6,2,5],[7,4,-2,10,-1],[3,10,-6,9,-7],[-5,-6,2,4,9],[3,-5,-8,9,3],[10,3,-1,10,3],[1,-2,4,-10,7],[-8,-9,-9,-1,4],[8,9,4,10,-10],[-9,-3,-9,-6,7]],[[-2,6,-9,-8,-1],[4,6,1,-5,-2],[-4,-9,4,5,-9],[-3,-7,-2,-4,-9],[-3,-6,-8,9,-6],[2,1,-8,-9,5],[3,-1,-9,-9,5],[9,10,-9,10,4],[8,-5,-7,-4,-6],[-6,-6,-1,2,-7],[-7,9,10,8,7],[-8,-9,-3,-8,3],[-7,2,8,10,5],[-10,-6,4,6,-7],[-5,7,-8,10,-1],[-9,-2,4,6,1]],[[-1,-8,8,2,3],[9,4,9,8,9],[2,8,9,-5,3],[-10,7,-3,9,2],[-7,-9,-7,-5,10],[4,2,-10,-1,-9],[3,1,9,-6,9],[2,9,7,4,2],[-5,-9,-6,9,-4],[-4,-10,-8,6,7],[3,1,3,-1,1],[-10,-8,5,-8,3],[-5,-10,9,3,-5],[3,10,-4,-4,-7],[-6,1,-7,-8,-1],[6,8,-10,-5,4]]], dtype = "int16")#candidate|8379|(12, 16, 5)|const|int16
bop_8380 = relay.greater_equal(var_8378.astype('bool'), relay.reshape(const_8379.astype('bool'), relay.shape_of(var_8378))) # shape=(12, 16, 5)
func_4164_call = mod.get_global_var('func_4164')
func_4168_call = mutated_mod.get_global_var('func_4168')
const_8384 = relay.const([-3,6,-7,-10,6,3,10,-7,-1,-2,1,3,-7,-10,-9,-10,-5,-4,-9,-9,10,9,9,6,-10,-10,-8,-6,-1,-2,9,-3,-8,-5,1,-2,-9,3,-8,7,-9,-10,-1,-2,7,3,7,10,-10,4,2,-4,-8,10,-10,-5,5,-8,4,-1,5,6,-7,-9,3,10,-1,6,-5,-5,-3,-4,6,7,1,10,1,9,-4,6,-6,-3,-3,4,5,-3,-10,9,10,-5,-5,8,-2,-5,-9,-2,-7,2,5,-10,-5,-3,3,-2,-9,5,-3,1,3,-10,4,7,-10,-5,-5,5,1,7,-1,6,-8,-5,5,-4,9,1,9,-9,9,2,-1,5,7,6,3,-8,-5,1,7,8,-1,-3,1,9,-6,-3,2,-8,2,-6,8,-7,7,2,-3,-3,-3,7,8,3,9,-2,-6,9,-6,6,-1,6,-10,3,1,8,-2,-8,-10,-6,-7,-9,1,-2,7,1,-10,7,7,3,-5,4,7,10,10,-8,2,-1,-7,10,-2,1,1,-2,-7,-8,8,-4,3,4,-7,2,10,-4,8,-3,6,4,4,-6,3,-5,-8,-7,2,6,-4,1,-4,2,-9,-4,-1,-2,6,-5,-4,1,-9,4,-10,3,9,-9,-8,-6,-6,-4,9,-9,4,4,-4,1,-5,-7,5,10,-5,-8,-8,2,5,2,-3,-8,4,-6,-9,6,-2,-9,-4,-1,-8,3,-3,1,-2,1,3,-2,-3,9,-5,-8,-7,-2,-7,-1,-1,-10,-1,2,3,9,-5,7,1,-2,9,5,-8,-9,1,-10,2,7,-1,7,2,-2,-10,5,-4,-10,-8,1,2,-10,9,5,10,-5,1,-4,1,-2,-6,-2,5,-3,7,-10,5,-9,-2,6,-6,-2,6,-4,4,7,2,-10,1,3,-9,-6,4,9,-2,7,-7,-9,-5,-9,6,8,-5,-8,-2,-6,-3,-5,10,3,10,-1,9,7,10,6,4,-5,-2,7,3,7,6,3,8,7,7,5,8,3,-10,4,-3,-2,2,-3,3,-1,3,-6,-3,9,4,10,-7,-10,2,-10,-2,3,2,-1,5,-7,-7,9,9,-9,-3,-5,-2,9,8,10,-2,6,-9,2,-8,-10,3,2,-9,-4,-10,3,3,-5,-1,-3,-7,8,5,-8,10,-9,-7,-4,-3,-9,9,-4,-5,-1,3,-9,2,-6,9,3,4,-2,-2,9,7,6,-1,-6,9,-3,3,3,-1,-6,7,-2,9,1,-2,-7,-10,5,-5,-8,-2,7,4,3,-2,-8,8,9,-5,1,3,-8,-10,4,8,10,-2,-5,10,2,9,-1,3,6,-2,-7,4,-8,10,2,4,8,-2,2], dtype = "int16")#candidate|8384|(512,)|const|int16
call_8383 = relay.TupleGetItem(func_4164_call(relay.reshape(const_8384.astype('int16'), [16, 2, 16]), relay.reshape(const_8384.astype('int16'), [16, 2, 16]), relay.reshape(const_8384.astype('float32'), [16, 2, 16]), ), 1)
call_8385 = relay.TupleGetItem(func_4168_call(relay.reshape(const_8384.astype('int16'), [16, 2, 16]), relay.reshape(const_8384.astype('int16'), [16, 2, 16]), relay.reshape(const_8384.astype('float32'), [16, 2, 16]), ), 1)
output = relay.Tuple([bop_8380,call_8383,const_8384,])
output2 = relay.Tuple([bop_8380,call_8385,const_8384,])
func_8393 = relay.Function([var_8378,], output)
mod['func_8393'] = func_8393
mod = relay.transform.InferType()(mod)
mutated_mod['func_8393'] = func_8393
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8394 = relay.var("var_8394", dtype = "int16", shape = (12, 16, 5))#candidate|8394|(12, 16, 5)|var|int16
func_8393_call = mutated_mod.get_global_var('func_8393')
call_8395 = func_8393_call(var_8394)
output = call_8395
func_8396 = relay.Function([var_8394], output)
mutated_mod['func_8396'] = func_8396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7609_call = mod.get_global_var('func_7609')
func_7611_call = mutated_mod.get_global_var('func_7611')
call_8412 = func_7609_call()
call_8413 = func_7609_call()
func_4481_call = mod.get_global_var('func_4481')
func_4483_call = mutated_mod.get_global_var('func_4483')
var_8442 = relay.var("var_8442", dtype = "int8", shape = (1800,))#candidate|8442|(1800,)|var|int8
call_8441 = relay.TupleGetItem(func_4481_call(relay.reshape(var_8442.astype('int8'), [1800,])), 0)
call_8443 = relay.TupleGetItem(func_4483_call(relay.reshape(var_8442.astype('int8'), [1800,])), 0)
output = relay.Tuple([call_8412,call_8441,var_8442,])
output2 = relay.Tuple([call_8413,call_8443,var_8442,])
func_8448 = relay.Function([var_8442,], output)
mod['func_8448'] = func_8448
mod = relay.transform.InferType()(mod)
var_8449 = relay.var("var_8449", dtype = "int8", shape = (1800,))#candidate|8449|(1800,)|var|int8
output = func_8448(var_8449)
func_8450 = relay.Function([var_8449], output)
mutated_mod['func_8450'] = func_8450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7790_call = mod.get_global_var('func_7790')
func_7792_call = mutated_mod.get_global_var('func_7792')
call_8468 = relay.TupleGetItem(func_7790_call(), 0)
call_8469 = relay.TupleGetItem(func_7792_call(), 0)
var_8471 = relay.var("var_8471", dtype = "float64", shape = (2, 16, 12))#candidate|8471|(2, 16, 12)|var|float64
bop_8472 = relay.divide(call_8468.astype('float64'), var_8471.astype('float64')) # shape=(2, 16, 12)
bop_8475 = relay.divide(call_8469.astype('float64'), var_8471.astype('float64')) # shape=(2, 16, 12)
func_7702_call = mod.get_global_var('func_7702')
func_7704_call = mutated_mod.get_global_var('func_7704')
call_8483 = relay.TupleGetItem(func_7702_call(), 0)
call_8484 = relay.TupleGetItem(func_7704_call(), 0)
output = relay.Tuple([bop_8472,call_8483,])
output2 = relay.Tuple([bop_8475,call_8484,])
func_8504 = relay.Function([var_8471,], output)
mod['func_8504'] = func_8504
mod = relay.transform.InferType()(mod)
var_8505 = relay.var("var_8505", dtype = "float64", shape = (2, 16, 12))#candidate|8505|(2, 16, 12)|var|float64
output = func_8504(var_8505)
func_8506 = relay.Function([var_8505], output)
mutated_mod['func_8506'] = func_8506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4972_call = mod.get_global_var('func_4972')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_8580 = func_4972_call()
call_8581 = func_4972_call()
output = call_8580
output2 = call_8581
func_8594 = relay.Function([], output)
mod['func_8594'] = func_8594
mod = relay.transform.InferType()(mod)
mutated_mod['func_8594'] = func_8594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8594_call = mutated_mod.get_global_var('func_8594')
call_8595 = func_8594_call()
output = call_8595
func_8596 = relay.Function([], output)
mutated_mod['func_8596'] = func_8596
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8602 = relay.var("var_8602", dtype = "float32", shape = (10, 6, 11))#candidate|8602|(10, 6, 11)|var|float32
uop_8603 = relay.cosh(var_8602.astype('float32')) # shape=(10, 6, 11)
func_7924_call = mod.get_global_var('func_7924')
func_7927_call = mutated_mod.get_global_var('func_7927')
const_8614 = relay.const([-1.925852,-4.311632,-5.399290,1.288321,4.054939,-7.486991,-5.860771,-8.152473,4.688519,-3.417973,4.022733,-9.316712,4.958425,-4.224087,5.053849,-4.997379,-1.764580,5.077538,4.282242,-8.095657,5.834311,-5.899025,2.208053,-3.792789,7.091394,-7.195823,-9.564083,0.461116,-8.547313,-6.036973,-8.852736,0.793588,-2.608323,9.998867,7.555479,-2.542659,1.512224,-8.181479,9.318591,7.773044,9.088155,9.924049,-7.219068,-9.289991,-4.376533,6.828475,8.545038,1.919698,6.456032,6.840466,0.604829,4.832041,2.786538,4.738275,-0.740561,0.597195,-9.124750,-0.240962,0.684187,7.686488,1.722194,-1.618820,-4.766047,-0.980511,6.285744,-3.790764,4.598922,0.410596,-2.029852,-6.222068,2.305841,-5.401901,-5.764472,-9.636486,7.559115,-1.416380,-5.626802,7.725531,-6.365736,-7.437665,-4.758862,-9.600716,3.281764,-3.445231,-2.046738,-3.728892,-2.739266,2.807135,2.354995,-7.689270,-2.941266,-1.240374,-3.298733,2.553180,8.070797,-0.979169,-9.454462,-4.974221,-3.826057,5.198747,2.882210,-5.558360,7.293582,-5.718162,8.124595,9.826707,7.857359,8.459818,-3.613442,7.630382,-6.736995,3.048949,-5.041725,-5.599545,-3.413483,-1.266900,-4.143332,2.692181,-6.499060,-8.433744,-8.404065,4.916060,7.692295,6.952620,4.369441,-4.110143,-5.747815,6.172313,0.200044,0.325414,0.167488,8.540693,-3.284621,0.668487,-3.411896,2.816492,-6.859230,6.357478,6.995146,5.062157,1.294829,-9.608668,4.360055,-4.033883,-1.284806,-7.148521,0.191168,1.576523,-8.056036,8.306029,-8.755300,7.978306,4.314695,4.124061,-0.006977,-0.900302,-3.738277,3.935914,-3.264623,-8.260472,-1.859317,-7.677839,-2.603785,0.999826,4.266357,5.279243,6.800542,-8.626847,2.058427,0.345613,-4.394389,9.262796,9.080121,-7.331983,4.916520,-1.603149,5.620702,8.562934,-8.633928,-6.459246,2.739868,4.814296,-6.016749,-5.061413,6.754401,6.692296,7.854929,-2.902295,-4.545277,-0.465202,2.295648,2.726325,6.459805,-6.851320,1.430821,0.509588,3.699629,-6.356411,-7.421005,4.065933,-3.336088,7.252587,-4.366644,-4.605008,-6.283374,-4.555516,8.246546,-2.860183,-7.308619,-8.299778,9.660800,8.542131,8.996446,5.650121,-3.467267,2.938518,9.368367,-5.570624,0.417369,-5.582290,4.558153,7.033218,-7.084519,1.297837,8.811980,6.891315,-1.000293,7.172212,-1.814935,4.410066,3.013890,5.956647,-6.288948,-3.719411,2.418346,3.378790,2.082535,6.001610,1.050862,2.979665,9.432228,7.452845,4.476875,4.169372,6.001742,-4.738752,6.298190,-0.798451,9.119858,1.304397,9.028030,0.790371,-1.414873,4.887453,4.186588,-7.318624,1.733185,-8.260761,-2.035874,-7.186006,6.776077,-8.603635,-1.690262,-6.053100,-9.181087,-9.053287,-8.191137,-0.754615,7.031535,-3.350035,-8.931005,4.781786,2.181115,-7.445570,1.813279,1.769852,6.953268,8.853698,-5.553936,3.791106,-6.198776,9.136310,9.564861,7.188555,2.819308,-1.379601,-9.662289,5.884666,2.638777,9.506848,-2.627718,9.256029,-6.137334,5.025502,-5.345433,5.731828,4.086347,-8.824490,1.836957,4.122052,7.639749,-9.908647,7.112678,4.150615,-6.995767,1.920800,-0.758395,-4.952874,7.650994,0.756517,7.329819,-1.796065,9.188192,0.222791,-9.078348,7.715936,-3.558380,5.787678,2.310426,8.730447,3.194939,-0.689786,2.650593,6.294433,7.705710,8.947116,4.680560,5.498869,-0.486873,4.087721], dtype = "float32")#candidate|8614|(330,)|const|float32
call_8613 = relay.TupleGetItem(func_7924_call(relay.reshape(const_8614.astype('float32'), [3, 10, 11]), relay.reshape(const_8614.astype('float32'), [3, 10, 11]), ), 0)
call_8615 = relay.TupleGetItem(func_7927_call(relay.reshape(const_8614.astype('float32'), [3, 10, 11]), relay.reshape(const_8614.astype('float32'), [3, 10, 11]), ), 0)
output = relay.Tuple([uop_8603,call_8613,const_8614,])
output2 = relay.Tuple([uop_8603,call_8615,const_8614,])
func_8643 = relay.Function([var_8602,], output)
mod['func_8643'] = func_8643
mod = relay.transform.InferType()(mod)
var_8644 = relay.var("var_8644", dtype = "float32", shape = (10, 6, 11))#candidate|8644|(10, 6, 11)|var|float32
output = func_8643(var_8644)
func_8645 = relay.Function([var_8644], output)
mutated_mod['func_8645'] = func_8645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6631_call = mod.get_global_var('func_6631')
func_6633_call = mutated_mod.get_global_var('func_6633')
call_8665 = relay.TupleGetItem(func_6631_call(), 1)
call_8666 = relay.TupleGetItem(func_6633_call(), 1)
output = call_8665
output2 = call_8666
func_8669 = relay.Function([], output)
mod['func_8669'] = func_8669
mod = relay.transform.InferType()(mod)
mutated_mod['func_8669'] = func_8669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8669_call = mutated_mod.get_global_var('func_8669')
call_8670 = func_8669_call()
output = call_8670
func_8671 = relay.Function([], output)
mutated_mod['func_8671'] = func_8671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5011_call = mod.get_global_var('func_5011')
func_5013_call = mutated_mod.get_global_var('func_5013')
call_8725 = relay.TupleGetItem(func_5011_call(), 0)
call_8726 = relay.TupleGetItem(func_5013_call(), 0)
output = relay.Tuple([call_8725,])
output2 = relay.Tuple([call_8726,])
func_8731 = relay.Function([], output)
mod['func_8731'] = func_8731
mod = relay.transform.InferType()(mod)
output = func_8731()
func_8732 = relay.Function([], output)
mutated_mod['func_8732'] = func_8732
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8792 = relay.var("var_8792", dtype = "float64", shape = (15, 13, 9))#candidate|8792|(15, 13, 9)|var|float64
uop_8793 = relay.asinh(var_8792.astype('float64')) # shape=(15, 13, 9)
bop_8802 = relay.subtract(var_8792.astype('int16'), relay.reshape(uop_8793.astype('int16'), relay.shape_of(var_8792))) # shape=(15, 13, 9)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_8814 = func_5425_call()
call_8815 = func_5425_call()
output = relay.Tuple([bop_8802,call_8814,])
output2 = relay.Tuple([bop_8802,call_8815,])
func_8819 = relay.Function([var_8792,], output)
mod['func_8819'] = func_8819
mod = relay.transform.InferType()(mod)
mutated_mod['func_8819'] = func_8819
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8820 = relay.var("var_8820", dtype = "float64", shape = (15, 13, 9))#candidate|8820|(15, 13, 9)|var|float64
func_8819_call = mutated_mod.get_global_var('func_8819')
call_8821 = func_8819_call(var_8820)
output = call_8821
func_8822 = relay.Function([var_8820], output)
mutated_mod['func_8822'] = func_8822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7061_call = mod.get_global_var('func_7061')
func_7062_call = mutated_mod.get_global_var('func_7062')
call_8830 = relay.TupleGetItem(func_7061_call(), 0)
call_8831 = relay.TupleGetItem(func_7062_call(), 0)
func_4530_call = mod.get_global_var('func_4530')
func_4531_call = mutated_mod.get_global_var('func_4531')
call_8846 = relay.TupleGetItem(func_4530_call(), 3)
call_8847 = relay.TupleGetItem(func_4531_call(), 3)
func_3477_call = mod.get_global_var('func_3477')
func_3480_call = mutated_mod.get_global_var('func_3480')
const_8864 = relay.const([[True,False,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,False,True,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False,False]], dtype = "bool")#candidate|8864|(1, 132)|const|bool
call_8863 = relay.TupleGetItem(func_3477_call(relay.reshape(const_8864.astype('bool'), [3, 11, 4]), relay.reshape(const_8864.astype('bool'), [3, 11, 4]), ), 0)
call_8865 = relay.TupleGetItem(func_3480_call(relay.reshape(const_8864.astype('bool'), [3, 11, 4]), relay.reshape(const_8864.astype('bool'), [3, 11, 4]), ), 0)
func_7924_call = mod.get_global_var('func_7924')
func_7927_call = mutated_mod.get_global_var('func_7927')
const_8867 = relay.const([3.128642,-9.472111,-3.741859,2.480324,-8.799883,9.390698,-9.415721,-4.854012,-4.850141,7.760687,4.562709,3.742166,1.074723,-1.561431,-9.958401,-1.984634,-1.865766,3.450294,4.901923,4.409880,-8.245706,1.457849,8.657858,-7.750473,-2.058608,6.271152,8.827804,5.471540,1.374484,0.909941,-7.221831,-0.854228,3.017768,-7.669842,-3.042198,-3.659234,-7.880456,4.625506,-5.454966,9.500245,3.480278,-4.861041,5.497088,-8.518117,1.096788,7.194380,8.008318,5.911617,8.601696,-8.611237,7.747541,-6.861114,-6.239890,-7.104625,6.372637,0.898892,-5.605124,8.346102,2.363436,5.741639,-1.776461,7.365073,-3.040269,-7.741637,-2.373666,7.157788,2.151555,5.229981,7.916162,-5.020758,-6.288711,0.793585,-7.154569,-8.578259,-6.682865,-9.858444,-7.674425,8.917864,-1.889806,-0.546417,-6.396915,6.333366,5.880782,4.903550,-4.035305,-8.875914,-8.637928,8.501458,-2.760840,-5.276429,9.959465,2.893228,-2.773649,-3.670472,-1.075958,6.642579,-1.409176,1.216970,-7.786672,-1.408689,-4.362612,5.276715,3.303652,7.676144,-7.731709,-2.885956,0.538674,-4.270184,-0.776030,-2.041004,2.565847,2.185796,-8.763074,-1.631593,-1.762328,2.721367,1.637994,7.500421,-7.710635,-6.715271,-4.884307,-9.597875,1.856722,-4.028279,-2.951463,-5.647662,-9.716493,5.992739,-1.956873,2.716047,5.425704,-4.408878,5.391412,7.186329,-6.360685,2.832216,-8.940344,-0.143890,-5.314107,-0.693116,-6.778954,-6.456510,-6.617175,1.937173,2.453332,4.089656,-6.029895,8.868044,8.826373,6.785844,5.619711,2.856021,-1.268988,5.799979,-0.281441,6.421825,-7.677568,5.074543,-6.019903,-2.288455,-0.828578,-6.979061,7.339893,-2.897403,-4.715749,-3.546055,-1.264165,7.059167,-3.541419,4.612703,-1.641469,4.411665,8.097937,-5.573220,8.752307,4.463561,-1.994505,-3.842772,-2.557264,6.037383,-9.691949,-8.023497,3.466756,-2.391956,-0.959590,-2.122791,-4.100643,6.224251,-6.278802,4.030881,-9.809877,5.630301,-9.205863,-6.985828,8.572377,2.047865,-0.648697,-2.061538,-1.180379,2.588318,5.827240,8.172097,1.993272,6.257166,-1.535987,3.522782,2.138853,-9.443990,2.735247,-2.165506,-8.332326,-5.402897,7.695879,-0.180294,5.613241,-4.398312,7.934529,5.308289,2.718758,-9.544472,3.775379,-5.398034,9.378182,3.169774,-8.596062,9.720031,0.217979,1.292762,-3.471511,-6.477533,8.301370,-7.374982,0.202379,8.779502,-1.785653,-4.587452,7.689895,7.359705,2.409525,4.976589,-2.825257,-6.138336,1.570718,6.308024,1.455921,3.882333,-4.676261,0.921676,8.408075,-6.628094,5.167763,-4.358252,-2.795250,0.434140,-8.876594,7.657166,3.004668,-9.895370,4.031515,-8.272335,-8.438305,2.259571,-1.930154,-8.698884,8.168586,4.819240,5.788254,2.190659,4.359465,-5.776868,-7.414035,6.948667,5.445021,-9.557974,9.907085,-5.121488,-6.151182,-8.819558,-7.108835,8.386762,-7.421308,-3.476830,-3.830504,5.391953,-6.015347,0.003201,9.346742,-4.485590,-8.988112,6.210221,-4.464726,9.315699,8.667167,5.775893,-7.637861,1.856755,9.381947,4.919132,6.562717,-3.943392,-7.871013,-7.049908,-5.125358,-9.204030,3.122888,-0.673561,4.874139,7.147039,5.082480,7.010843,5.781078,-7.173865,-8.118838,-4.644109,-9.895289,-6.318399,-5.213402,-5.177778,6.118671,0.253936,-7.343017,-8.477804,-9.007513,-4.349077,-1.383767,4.136105,-6.519113,3.319144,3.392900,7.100451], dtype = "float32")#candidate|8867|(330,)|const|float32
call_8866 = relay.TupleGetItem(func_7924_call(relay.reshape(const_8867.astype('float32'), [3, 10, 11]), relay.reshape(const_8867.astype('float32'), [3, 10, 11]), ), 0)
call_8868 = relay.TupleGetItem(func_7927_call(relay.reshape(const_8867.astype('float32'), [3, 10, 11]), relay.reshape(const_8867.astype('float32'), [3, 10, 11]), ), 0)
output = relay.Tuple([call_8830,call_8846,call_8863,const_8864,call_8866,const_8867,])
output2 = relay.Tuple([call_8831,call_8847,call_8865,const_8864,call_8868,const_8867,])
func_8871 = relay.Function([], output)
mod['func_8871'] = func_8871
mod = relay.transform.InferType()(mod)
mutated_mod['func_8871'] = func_8871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8871_call = mutated_mod.get_global_var('func_8871')
call_8872 = func_8871_call()
output = call_8872
func_8873 = relay.Function([], output)
mutated_mod['func_8873'] = func_8873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_8935 = func_4065_call()
call_8936 = func_4065_call()
func_6046_call = mod.get_global_var('func_6046')
func_6048_call = mutated_mod.get_global_var('func_6048')
const_8961 = relay.const([[9.197828,-9.368204,6.230414,-8.019770,-3.230482,-9.584986,8.326439,8.161937,7.135354,-4.002153,-1.987447,-9.568219,-0.817069,-2.268137,-2.104657,-4.038406,0.726018,-8.620725,5.700013,1.872602,0.934979,-2.760585,5.611086,-6.591259,-5.888436,-1.944871,-7.892710,-1.602690,-4.812836,-9.127701,-3.289689,8.635184,0.735395,-3.280692,-9.104556,-4.800818,0.603821,4.318680,-1.410295,5.111931,-2.599410,5.971516,-1.860377,7.170785,6.408430,-5.160041,-2.673542,7.800186,1.220016,-3.590642,2.064955,9.053847,-4.840600,5.783558,-1.851563,6.871382,-9.972686,-8.601253,-5.790820,-8.320478,2.923241,2.201738,-8.753760,2.948076,7.021806,7.846699,9.966809,1.612982,2.206084,-7.681257,-8.540417,-6.216459,1.346224,3.586254,4.960635,6.485078,-8.723794,-6.757790,7.547010,-5.173780,-2.828635,0.914637,-7.539236,5.925075,7.572584,-2.792438,2.258620,-5.632847,0.374125,-7.507842,6.821773,4.874487,8.610988,-6.331559,4.850595,1.959759,0.980213,0.371889,9.395883,0.349851,9.519516,-4.822623,1.447059,4.864487,4.065295,0.495295,4.664021,-5.520881,-3.121882,5.554274,-8.287591,7.654653,9.059171,0.893169,3.820038,4.991319,-3.420092,8.025169,-1.127724,-6.133800,1.055671,8.901809,-4.040022,2.739190,-6.368848,8.805163,6.134103,-6.422748,3.433718,0.894722,6.279561,5.949202,1.413505,1.883606,0.613914,0.922501,1.959686,9.186647,-7.063965,-6.571141,8.929131,2.718162,9.334284,6.504122,-0.066333,3.914269,8.200869,6.024576,-5.321423,0.634510,6.517421,-2.719703,1.647673,-3.500614,-5.904528,-8.506109,-1.145906,-4.212299,-9.007863,5.532282,-9.202050,-8.417548,7.024139,-7.895107,-1.705854,-0.958896,-6.787488,-5.472573,-9.840087,-7.546675,3.692020,7.392393,-3.373127,7.488711,7.654006,3.175645,-1.761484,-9.861080,-8.280392,1.337396,-7.689429,-3.363082,-0.112456,-7.134046,9.341677,1.619376,0.215691,6.792425,-0.518770,-4.567078,8.766627,6.961563,8.986424,3.937504,6.622941,-9.755370,-5.128969,-8.936949,7.929541,-4.220861,1.431843,-4.023247,-2.084696,8.212591,-9.705882,-7.831659,0.507313,2.526750,8.207076,-9.369006,7.882299,-3.896009,2.291624,-9.680937,4.583107,-4.243279,-3.942098,-4.976031,-0.262680,3.293568,0.176379,-0.746248,-5.843867,-7.904424,-6.927231,-3.796495,8.875042,-4.851480,9.491220,-2.224917,3.591017,-4.669203,0.546112,-9.760937,-9.134314,-5.313725,4.478163,-0.070710,1.289873,-1.575247,-5.965918,1.489721,6.710352,-8.252712,7.495388,-8.633009,5.859953,-6.805402,9.490596,-4.828798,9.791012,6.910893,8.550028,-4.862889,-7.641058,3.152705,2.230842,8.640111,-1.822294,8.350102,-5.880503,-2.744620,-2.455372,-2.897450,7.755705,2.667047,0.360178,1.124650,8.353673,8.813659,-7.586376,-3.700635,-0.775172,1.142509,0.522728,-0.995928,-1.439080,-9.131678,4.973368,-3.280868,7.009198,1.386352,-1.375349,-8.400636,-6.034806,-8.213802,-0.802953,-7.440976,-5.135630,0.673261,0.526703,8.091854,-2.089539,-6.063919,-4.646921,-1.702651,2.026377,-9.370945,-6.111721,0.617821,6.534142,-0.551039,-6.174667,-0.538356,-5.730868,-4.468054,0.156926,0.155267,3.049962,3.826978,-8.650672,-4.226761,-9.216109,8.780349,7.727623,1.171871,-8.376952,-8.899056,6.501174,0.196892,-1.412318,6.277146,3.976712,4.146911,-1.914231,-0.692104,-4.614846,-9.343811,-9.546133,0.348452,-4.424690,-3.699342,-3.587549,6.287287,0.728077,4.999352,4.589333,3.671894,9.564240,9.911944,2.037958,-6.409553,-8.522683,-0.988000,9.467629,-2.395584,2.237304,-1.999634,9.912479,7.372409,6.893266,-5.647467,2.042874,2.857660,-1.783017,-3.757114,1.692378,6.798455,-3.661041,-5.005655,-6.003470,9.560263,8.724019,9.162559,-8.079589,1.982012,-2.531594,-2.881591,7.362028,-4.392304,-4.159336,1.200947,-3.793181,-5.468886,6.767803,-1.968510,1.868363,9.072553,9.793445,-4.999187,0.892942,6.908576,6.912762,0.168601,-8.024513,5.026093,-2.330123,-8.464305,7.475172,9.082055,9.729179,-7.061110,-7.002992,3.677649,9.291094,0.606334,6.656497,-4.272844,-6.121116,2.491191,3.928332,7.806378,7.864975,-0.007080,-1.398660,3.525289,2.571103,3.330675,6.284894,-0.111548,-3.792878,0.588353,-8.097422,-7.652189,9.791634,4.803790,-7.806735,0.429946,-6.064831,3.656790,2.718085,-2.849525,-6.934493,-1.586430,-4.111102,-4.823771,-2.956990,-1.265287,6.022803,3.186377,-4.051985,-6.799459,-6.986533,2.092991,2.975078,2.686928,2.102038,-5.931798,2.516201,-5.490960,9.481689,-3.680966,-4.937050,-5.774942,-2.269413,9.601010,0.819660,7.422752,3.193351,-3.536940,7.894123,2.166716,-8.358177,7.996624,8.999532,1.514657,-8.367186,-6.539151,0.110872,8.561345,3.928881,-2.191598,-1.660136,-5.149903,-7.327187,-4.679397,-4.768634,7.859558,7.701838,8.616116,-6.655608,1.407884,-7.587999,6.168355,5.169855,3.053446,1.264883,4.130306,-7.810706,3.345022,-9.655679,-3.984632,-2.310444,9.492160,-2.984199,-5.524548,-9.053591,-7.472326,1.586221,-6.908651,-0.910579,1.359149,0.312678,1.865116,-3.735976,3.957424,-1.849602,-2.624262,3.823839,8.362852,-3.789988,-9.674021,5.579171,7.176310,-3.369970,8.642784,-4.975627,5.629708,7.075761,0.625637,2.632149,2.213358,-8.837621,-9.234325,3.221473,-1.368400,0.420255,-0.879330,5.865941,-7.320617,6.644739,-1.429613,-3.955574,-1.124122,-9.361115,-7.492958,-0.270382,6.267423,5.279472,-1.419105,7.944337,-5.656631,5.484441,-2.784876,-5.850018,-1.666853,-1.642978,0.578517,-8.742973,1.893928,6.187477,1.306259,5.047526,5.620836,-8.089454,9.447480,-6.211658,7.669372,6.211426,-6.197005,-8.054112,9.590830,7.017312,8.505859,-6.344117,-8.362440,-2.259991,7.857813,-8.297548,-0.984573,-1.098157,2.344804,2.818403,-3.494141,-8.457694,9.992335,-7.316596,6.468656,9.525303,3.181521,9.291413,-5.469824,8.975902,1.328562,-6.287639,7.299212,-3.004591,8.633696,5.258686,-4.102000,-3.826019,-3.701999,-8.949368,-3.119222,-4.938409,-3.458955,5.141455,-6.707202,-7.115019,-7.635257,6.344725,-9.010644,-4.386079,-7.270628,0.037197,8.392366,-0.048830,-6.805523,-6.026789,-0.570640,9.990420,-7.472791,8.259575,6.956838,7.262059,-8.061236,2.672184,-4.262478,-8.275685,1.533863,7.743053,4.381342,-7.116443,-3.508069,-7.168192,-8.779349,0.643933,-9.090905,9.879621,8.106979,-2.462982,6.283257,-6.681790,9.566012,-1.213541,-6.149989,-3.615579,2.017009,-8.959014,9.977762,2.974393,-8.297954,-7.686474,4.154678,-0.856907,-4.057303,2.769683,1.133866,6.727092,-4.555544,0.769518,5.678412,6.426688,6.067690,2.922822,-7.993881,-2.734721,5.604583,-0.032400,-2.878876,5.341734,0.666596,-5.786225,-7.639001,0.036976,-0.303290,-8.281327,-8.311895,-8.278229,5.277462,-3.708006,-4.687241,-8.028026,-8.651949,2.072081,7.171789,6.527013,5.559471,6.497693,-1.543779,-7.847849,-8.042016,-1.999752,-3.695642,-1.441488,-9.626967,-0.314305,0.102848,5.582092,0.304791,-8.001777,9.396030,7.954289,5.749657,3.842760,0.488327,-8.920278,-9.760818,8.274871,-1.463225,-9.096038,-1.139701,5.853620,0.384494,4.901990,7.273208,0.796194,-6.374051,4.716932,-9.619906,2.269063,3.262029,7.503055,-8.104936,-0.298351,-0.629955,-6.995061,2.720027,-9.732503,-0.879501,7.656799,0.435497,-0.809704,7.637256,2.667099,-9.205277,-0.991404,1.053333,4.935803,-3.170322,-3.609677,-7.716122,0.062384,-5.627983,-5.227843,-4.126818,3.844440,7.771719,4.398826,1.861523,-5.598778,0.768343,5.113369,-7.287493,-3.712943,2.617200,8.493109,3.357606,7.144261,-3.467650,-5.948980,-9.383474,-7.433761,-3.739954,-8.934566,-0.416871,6.716163,3.427112,-9.334418,-8.712490,-0.040813,5.163952,3.704038,9.407968,6.891873,5.038033,-3.050873,1.039157,1.406992,-0.491011,5.351889,-6.986553,-4.141978,-7.886911,4.224640,1.583417,-6.001157,7.118457,-7.640292,-6.572105,-3.928853,7.906585,1.291511,6.943245,-5.688348,6.846597,-3.445571,7.785910,2.830371,-0.320471,-4.024394,3.745510,-0.230670,-7.060351,6.107762,-6.249136,-5.456073,-9.154098,-1.756459,-2.147263,5.375942,8.655735,5.544557,-4.053280,-6.754751,0.419033,-4.443563,3.745699,9.974385,8.611660,-9.846361,-5.640535,-0.568122,7.595330,-0.405639,1.790042,7.284039,-3.065711,0.514811,5.595730,1.534999,-8.819853,0.361822,-6.332558,-5.478826,7.051582,-8.375266,1.571921,-1.226052,5.753672,2.189825,-2.332808,7.995479,8.755413,3.412780,-2.645990,-2.273468,9.050596,-1.921763,-2.140110,7.753156,-4.242079,-4.700745,-9.875219,-8.960385,6.126410,5.340334,-9.751200,-0.265811,4.216127,-1.373816,-9.064305,5.145334,2.111036,-6.627922,-3.237087,4.363278,0.381335,-9.455502,1.744788,6.729278,-1.827514,-5.252374,-2.215253,0.935944,0.079723,5.046475,-4.498031,3.453442,7.100912,7.215747,6.901485,-3.585626,-8.888608,3.670244,1.137522,9.029105,5.321369,-1.255305,-8.529029,9.222295,6.450180,-2.271912,5.477400,7.522428,6.416847,-1.509593,-6.182676,1.780457,-2.455592,-2.527317,9.823289,1.289533,2.430539,-1.262448,3.148487,8.315889,7.090963,-0.078741,4.833403,9.767399,8.714761,-3.415272,-6.017858,-6.899846,-5.516279,-1.172585,-0.541739,-3.491438,2.071179,-9.505429,-3.050592,9.276574,0.032511,0.528297,-9.466212,9.286170,-7.615954,3.033618,3.590598,5.117609,-1.181155,0.243020,-2.898033,-2.886855,9.216791,-8.253204,2.273150,3.846802,-8.790853,7.372058,5.379209,-4.911164,-0.517537,-0.976679,1.711950,4.718329,0.863901,1.374112,-2.659398,8.809643,-4.116717,-6.830732,4.688065,-0.541918,-2.773335,-5.398508,-0.950241,5.736971,-4.980783,-5.645266,-5.354065,4.646913,-2.386443,7.595061,5.876327,-6.344744,-8.053800,3.945847,-9.990832,8.760549,8.712666,-6.115948,-6.929020,9.832313,8.670210,2.614892,6.857474,3.236427,2.581844]], dtype = "float64")#candidate|8961|(1, 960)|const|float64
call_8960 = relay.TupleGetItem(func_6046_call(relay.reshape(const_8961.astype('float64'), [5, 16, 12])), 0)
call_8962 = relay.TupleGetItem(func_6048_call(relay.reshape(const_8961.astype('float64'), [5, 16, 12])), 0)
bop_8979 = relay.bitwise_and(const_8961.astype('int16'), relay.reshape(call_8960.astype('int16'), relay.shape_of(const_8961))) # shape=(1, 960)
bop_8982 = relay.bitwise_and(const_8961.astype('int16'), relay.reshape(call_8962.astype('int16'), relay.shape_of(const_8961))) # shape=(1, 960)
uop_8993 = relay.rsqrt(const_8961.astype('float32')) # shape=(1, 960)
func_7924_call = mod.get_global_var('func_7924')
func_7927_call = mutated_mod.get_global_var('func_7927')
const_8996 = relay.const([-6.133321,2.723046,-7.069883,-3.764438,-8.423084,6.222507,9.901368,4.980840,-2.985303,1.721147,5.086671,7.809104,-6.879665,3.161203,3.289251,4.079183,9.541669,-1.310270,6.773469,4.721076,-9.909546,4.719200,-6.975600,-1.904423,9.886070,0.597847,-2.238449,9.067737,-4.354799,-4.433601,9.989612,7.211652,-5.450005,-1.298741,7.784530,4.473711,-4.901370,7.108105,5.153162,-5.840433,6.637742,9.365396,-2.805522,6.940548,5.846112,7.068471,1.582239,4.792060,-3.981045,-9.360441,5.258846,-9.557651,-3.230311,8.351593,4.914857,-7.897728,4.658290,-5.323572,-2.751874,-2.400933,2.954885,-4.577999,-4.294829,-7.048978,-5.922076,-8.073838,-9.507166,5.872576,-3.975258,8.986546,-7.572319,0.522564,0.787990,-4.702553,9.099101,-1.547714,-3.070083,7.346063,-3.160031,7.799640,-4.802924,4.696201,-1.843768,-8.951483,9.385334,5.511014,8.727528,8.580336,-0.331786,3.948557,-8.935388,6.080756,-4.269943,5.779096,-6.211267,4.560378,3.378621,-8.171008,-8.568230,-4.270320,-6.175086,8.403144,-9.323617,-6.022579,-8.159347,-3.147940,7.569042,9.832158,3.062268,9.873928,-6.029491,-8.226352,7.681462,2.564633,7.164021,9.035208,3.600732,-7.846175,0.531356,6.487292,-8.076037,-1.527530,1.411941,5.879383,-6.039423,-0.684317,-1.901152,-4.590357,8.644966,3.414822,-8.252385,-8.078956,1.062702,7.018892,-2.117471,8.585281,7.152136,-6.532241,8.832602,4.416550,-7.722092,-8.547440,-5.935123,-4.327192,6.536367,2.350180,-8.012784,3.781633,-5.962726,-2.770402,1.280930,9.824230,3.372477,3.963957,0.999480,8.079445,5.430671,-0.799162,-6.444357,4.955862,-7.951132,2.259294,5.567031,7.300184,-5.197321,-0.221099,3.768063,-2.389544,2.173636,2.904986,-8.393742,9.433444,7.124796,5.448965,-6.914304,2.262255,1.358005,-7.258282,8.134864,-2.043648,9.760716,-0.600634,-8.460289,-3.415046,-5.310146,3.754316,-8.033125,-8.371265,-1.663977,4.246831,9.478600,-6.640375,-1.875671,3.568891,-6.350414,6.905547,-2.540042,-8.434492,-8.677902,-0.219123,-3.307849,9.273062,-1.840063,-3.924877,3.748986,-4.769779,-8.745356,-2.586438,3.913653,6.947846,0.665981,7.241376,-2.552579,8.095370,-0.013272,1.344657,8.146675,2.023474,8.639197,-2.504872,-1.749950,5.759747,5.207140,4.626710,5.869538,-6.231635,5.946521,-2.163597,2.367329,-2.558898,5.823506,4.867567,-4.589569,8.906272,-1.353466,-0.536291,-2.284799,-9.978600,4.533775,-8.546477,-3.391802,-6.817627,-6.668486,9.846505,-5.111991,-6.881074,0.142748,-3.030428,-3.926176,2.937655,4.315526,1.060314,7.507302,-1.230389,0.865969,7.518742,1.393054,4.231196,-7.870730,-7.320214,-1.351345,4.416493,-7.634412,0.793299,2.532077,9.208682,0.357047,-9.184192,-9.808672,6.644783,6.273547,0.256858,-1.755635,-6.457611,6.153366,2.562418,1.613232,-3.425555,-8.805878,0.417175,-9.640634,4.539026,3.000273,0.888988,-8.375630,-9.175490,0.313535,-2.956539,-3.618633,6.437274,7.730540,-2.748305,5.409732,-0.602650,-7.890229,0.775849,3.296632,-2.633021,-4.315657,-4.486663,6.492635,-9.656830,0.860353,-7.373719,0.484028,8.034612,8.387172,-3.775133,-5.726802,-7.866754,-5.406038,-1.132292,-9.455356,-7.632027,-0.214803,3.969509,9.152297,-8.180393,3.233580,4.743436,-2.892834,6.682833,-7.378866,-8.532065,9.094418,7.769191,-7.377015,4.474060,3.497192,8.311236], dtype = "float32")#candidate|8996|(330,)|const|float32
call_8995 = relay.TupleGetItem(func_7924_call(relay.reshape(const_8996.astype('float32'), [3, 10, 11]), relay.reshape(const_8996.astype('float32'), [3, 10, 11]), ), 1)
call_8997 = relay.TupleGetItem(func_7927_call(relay.reshape(const_8996.astype('float32'), [3, 10, 11]), relay.reshape(const_8996.astype('float32'), [3, 10, 11]), ), 1)
uop_8998 = relay.asin(uop_8993.astype('float32')) # shape=(1, 960)
bop_9005 = relay.equal(uop_8993.astype('bool'), relay.reshape(uop_8998.astype('bool'), relay.shape_of(uop_8993))) # shape=(1, 960)
bop_9009 = relay.power(uop_8998.astype('float64'), relay.reshape(uop_8993.astype('float64'), relay.shape_of(uop_8998))) # shape=(1, 960)
bop_9012 = relay.less(uop_8993.astype('bool'), relay.reshape(bop_9009.astype('bool'), relay.shape_of(uop_8993))) # shape=(1, 960)
func_6268_call = mod.get_global_var('func_6268')
func_6271_call = mutated_mod.get_global_var('func_6271')
const_9032 = relay.const(7, dtype = "int32")#candidate|9032|()|const|int32
call_9031 = relay.TupleGetItem(func_6268_call(relay.reshape(const_9032.astype('int32'), [])), 2)
call_9033 = relay.TupleGetItem(func_6271_call(relay.reshape(const_9032.astype('int32'), [])), 2)
output = relay.Tuple([call_8935,bop_8979,call_8995,const_8996,bop_9005,bop_9012,call_9031,const_9032,])
output2 = relay.Tuple([call_8936,bop_8982,call_8997,const_8996,bop_9005,bop_9012,call_9033,const_9032,])
func_9043 = relay.Function([], output)
mod['func_9043'] = func_9043
mod = relay.transform.InferType()(mod)
mutated_mod['func_9043'] = func_9043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9043_call = mutated_mod.get_global_var('func_9043')
call_9044 = func_9043_call()
output = call_9044
func_9045 = relay.Function([], output)
mutated_mod['func_9045'] = func_9045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3835_call = mod.get_global_var('func_3835')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_9086 = func_3835_call()
call_9087 = func_3835_call()
func_6631_call = mod.get_global_var('func_6631')
func_6633_call = mutated_mod.get_global_var('func_6633')
call_9103 = relay.TupleGetItem(func_6631_call(), 0)
call_9104 = relay.TupleGetItem(func_6633_call(), 0)
output = relay.Tuple([call_9086,call_9103,])
output2 = relay.Tuple([call_9087,call_9104,])
func_9111 = relay.Function([], output)
mod['func_9111'] = func_9111
mod = relay.transform.InferType()(mod)
output = func_9111()
func_9112 = relay.Function([], output)
mutated_mod['func_9112'] = func_9112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5840_call = mod.get_global_var('func_5840')
func_5842_call = mutated_mod.get_global_var('func_5842')
call_9201 = func_5840_call()
call_9202 = func_5840_call()
func_6429_call = mod.get_global_var('func_6429')
func_6433_call = mutated_mod.get_global_var('func_6433')
const_9204 = relay.const([9.280628,5.985253,-2.316008,6.139726,7.508485,7.864508,0.162170,8.715307,-2.816596,-5.213750,-0.125278,5.262913,0.804973,-5.026690,-0.852612,9.807023,-0.893257,7.217618,1.816793,8.924848,1.715920,-2.908101,-6.127647,-0.600405,-8.558839,7.270110,1.900245,2.282675,-2.770139,3.791895,1.850083,-3.934528,8.273519,-3.497287,-1.239098,0.146550,-5.275537,-7.053734,2.241321,7.087782,7.124307,2.643737,7.950673,-5.662408,-7.139047,-3.802332,-2.128092,5.785184,-0.541503,-1.140506,-8.390851,2.784227,0.545517,3.258960,-7.048058,-1.678643,4.817559,-6.697892,-0.996632,-3.595064,-0.982834,-5.241936,-4.894311,-9.985918,7.234943,6.421116,-1.160743,-3.703581,5.563113,7.344883,-4.947171,2.457496,2.949990,-8.061640,-8.732675,-8.532309,3.487417,7.878791,7.731274,7.819434,-6.483526,-0.774928,9.630444,-5.880974,-1.836105,-4.040228,2.467999,-9.587662,-0.990736,-6.957113,-5.702123,6.868111,3.712749,0.754554,2.939128,2.823682,3.570666,-2.097263,-3.391794,3.272208,-3.720694,1.130451,-4.383442,-3.625088,-0.799419,8.141465,-3.390814,9.335692,-3.111353,-8.216483,1.891429,4.318386,8.579345,7.781587,7.389589,-5.126840,-1.811999,2.088448,8.102128,5.187395,6.056241,-4.570652,-0.206037,5.902100,-4.946495,-1.077814,-2.688276,4.874781,1.004109,2.952046,1.830391,0.714653,-7.430429,-9.595142,-1.599197,3.758937,7.027949,8.475123,6.810118,-8.024008,-0.597979,9.157478,-7.141962,-4.662897,8.404611,-1.020756,3.165562,0.479025,9.764022,-7.233622,0.339870,9.726322,5.142655,-7.751884,9.720372,1.073698,0.351218,-5.817700,2.542093,-8.618662,2.618409,9.172365,-9.701824,-1.366440,1.008894,6.083670,-7.370619,1.296493,-3.912234,3.805073,-1.998109,0.227536,9.535748,4.167616,6.022970,-1.783640,3.223189,9.037149,-2.255245,7.870388,-3.877420,-2.132256,6.286213,7.082364,-3.399271,2.033653,8.274362,-2.242461,8.086682,6.831559,0.843831,2.101681,4.129721,-9.126102,-5.410559,8.022255,6.542033,7.926826,6.266758,-8.421797,8.440488,-5.917752,-3.304069,-2.941529,0.840146,-5.842077,6.373218,8.004151,2.483748,-0.734379,9.980727,-6.154077,9.894732,2.200591,-3.411152,-6.406594,9.426645,-8.479919,-2.622762,1.962138,-0.207047,-7.977011,1.165291,1.377512,-5.043645,-0.648528,6.253417,-4.653791,1.412356,-7.440744,1.872961,7.255805,4.210243,-4.060923,-7.778582,2.927160,-2.186403,-4.872786,7.013679,-6.609961,5.536616,6.223953,8.436048,-2.475055,5.521165,0.886717,0.196356,-1.824011,-1.842346,-2.422195,-7.066084,-4.253646,-8.778906,7.581161,-4.331626,3.959354], dtype = "float32")#candidate|9204|(256,)|const|float32
call_9203 = func_6429_call(relay.reshape(const_9204.astype('float32'), [4, 8, 8]), relay.reshape(const_9204.astype('float32'), [4, 8, 8]), )
call_9205 = func_6429_call(relay.reshape(const_9204.astype('float32'), [4, 8, 8]), relay.reshape(const_9204.astype('float32'), [4, 8, 8]), )
output = relay.Tuple([call_9201,call_9203,const_9204,])
output2 = relay.Tuple([call_9202,call_9205,const_9204,])
func_9213 = relay.Function([], output)
mod['func_9213'] = func_9213
mod = relay.transform.InferType()(mod)
mutated_mod['func_9213'] = func_9213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9213_call = mutated_mod.get_global_var('func_9213')
call_9214 = func_9213_call()
output = call_9214
func_9215 = relay.Function([], output)
mutated_mod['func_9215'] = func_9215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6631_call = mod.get_global_var('func_6631')
func_6633_call = mutated_mod.get_global_var('func_6633')
call_9225 = relay.TupleGetItem(func_6631_call(), 0)
call_9226 = relay.TupleGetItem(func_6633_call(), 0)
output = call_9225
output2 = call_9226
func_9227 = relay.Function([], output)
mod['func_9227'] = func_9227
mod = relay.transform.InferType()(mod)
mutated_mod['func_9227'] = func_9227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9227_call = mutated_mod.get_global_var('func_9227')
call_9228 = func_9227_call()
output = call_9228
func_9229 = relay.Function([], output)
mutated_mod['func_9229'] = func_9229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5741_call = mod.get_global_var('func_5741')
func_5742_call = mutated_mod.get_global_var('func_5742')
call_9238 = func_5741_call()
call_9239 = func_5741_call()
func_6631_call = mod.get_global_var('func_6631')
func_6633_call = mutated_mod.get_global_var('func_6633')
call_9247 = relay.TupleGetItem(func_6631_call(), 0)
call_9248 = relay.TupleGetItem(func_6633_call(), 0)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_9265 = func_5425_call()
call_9266 = func_5425_call()
func_5741_call = mod.get_global_var('func_5741')
func_5742_call = mutated_mod.get_global_var('func_5742')
call_9271 = func_5741_call()
call_9272 = func_5741_call()
output = relay.Tuple([call_9238,call_9247,call_9265,call_9271,])
output2 = relay.Tuple([call_9239,call_9248,call_9266,call_9272,])
func_9275 = relay.Function([], output)
mod['func_9275'] = func_9275
mod = relay.transform.InferType()(mod)
mutated_mod['func_9275'] = func_9275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9275_call = mutated_mod.get_global_var('func_9275')
call_9276 = func_9275_call()
output = call_9276
func_9277 = relay.Function([], output)
mutated_mod['func_9277'] = func_9277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_9289 = func_5463_call()
call_9290 = func_5463_call()
output = relay.Tuple([call_9289,])
output2 = relay.Tuple([call_9290,])
func_9295 = relay.Function([], output)
mod['func_9295'] = func_9295
mod = relay.transform.InferType()(mod)
output = func_9295()
func_9296 = relay.Function([], output)
mutated_mod['func_9296'] = func_9296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7790_call = mod.get_global_var('func_7790')
func_7792_call = mutated_mod.get_global_var('func_7792')
call_9318 = relay.TupleGetItem(func_7790_call(), 0)
call_9319 = relay.TupleGetItem(func_7792_call(), 0)
func_7790_call = mod.get_global_var('func_7790')
func_7792_call = mutated_mod.get_global_var('func_7792')
call_9335 = relay.TupleGetItem(func_7790_call(), 0)
call_9336 = relay.TupleGetItem(func_7792_call(), 0)
var_9382 = relay.var("var_9382", dtype = "float64", shape = (3, 16, 12))#candidate|9382|(3, 16, 12)|var|float64
bop_9383 = relay.multiply(call_9318.astype('float32'), var_9382.astype('float32')) # shape=(3, 16, 12)
bop_9386 = relay.multiply(call_9319.astype('float32'), var_9382.astype('float32')) # shape=(3, 16, 12)
output = relay.Tuple([call_9335,bop_9383,])
output2 = relay.Tuple([call_9336,bop_9386,])
func_9393 = relay.Function([var_9382,], output)
mod['func_9393'] = func_9393
mod = relay.transform.InferType()(mod)
mutated_mod['func_9393'] = func_9393
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9394 = relay.var("var_9394", dtype = "float64", shape = (3, 16, 12))#candidate|9394|(3, 16, 12)|var|float64
func_9393_call = mutated_mod.get_global_var('func_9393')
call_9395 = func_9393_call(var_9394)
output = call_9395
func_9396 = relay.Function([var_9394], output)
mutated_mod['func_9396'] = func_9396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6828_call = mod.get_global_var('func_6828')
func_6829_call = mutated_mod.get_global_var('func_6829')
call_9398 = func_6828_call()
call_9399 = func_6828_call()
output = call_9398
output2 = call_9399
func_9420 = relay.Function([], output)
mod['func_9420'] = func_9420
mod = relay.transform.InferType()(mod)
mutated_mod['func_9420'] = func_9420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9420_call = mutated_mod.get_global_var('func_9420')
call_9421 = func_9420_call()
output = call_9421
func_9422 = relay.Function([], output)
mutated_mod['func_9422'] = func_9422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3931_call = mod.get_global_var('func_3931')
func_3932_call = mutated_mod.get_global_var('func_3932')
call_9456 = relay.TupleGetItem(func_3931_call(), 1)
call_9457 = relay.TupleGetItem(func_3932_call(), 1)
output = relay.Tuple([call_9456,])
output2 = relay.Tuple([call_9457,])
func_9483 = relay.Function([], output)
mod['func_9483'] = func_9483
mod = relay.transform.InferType()(mod)
mutated_mod['func_9483'] = func_9483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9483_call = mutated_mod.get_global_var('func_9483')
call_9484 = func_9483_call()
output = call_9484
func_9485 = relay.Function([], output)
mutated_mod['func_9485'] = func_9485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7454_call = mod.get_global_var('func_7454')
func_7456_call = mutated_mod.get_global_var('func_7456')
call_9497 = func_7454_call()
call_9498 = func_7454_call()
uop_9505 = relay.atanh(call_9497.astype('float64')) # shape=(4, 16, 12)
uop_9507 = relay.atanh(call_9498.astype('float64')) # shape=(4, 16, 12)
output = uop_9505
output2 = uop_9507
func_9508 = relay.Function([], output)
mod['func_9508'] = func_9508
mod = relay.transform.InferType()(mod)
output = func_9508()
func_9509 = relay.Function([], output)
mutated_mod['func_9509'] = func_9509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_9533 = func_4065_call()
call_9534 = func_4065_call()
func_8393_call = mod.get_global_var('func_8393')
func_8396_call = mutated_mod.get_global_var('func_8396')
var_9552 = relay.var("var_9552", dtype = "int16", shape = (960,))#candidate|9552|(960,)|var|int16
call_9551 = relay.TupleGetItem(func_8393_call(relay.reshape(var_9552.astype('int16'), [12, 16, 5])), 1)
call_9553 = relay.TupleGetItem(func_8396_call(relay.reshape(var_9552.astype('int16'), [12, 16, 5])), 1)
output = relay.Tuple([call_9533,call_9551,var_9552,])
output2 = relay.Tuple([call_9534,call_9553,var_9552,])
func_9575 = relay.Function([var_9552,], output)
mod['func_9575'] = func_9575
mod = relay.transform.InferType()(mod)
mutated_mod['func_9575'] = func_9575
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9576 = relay.var("var_9576", dtype = "int16", shape = (960,))#candidate|9576|(960,)|var|int16
func_9575_call = mutated_mod.get_global_var('func_9575')
call_9577 = func_9575_call(var_9576)
output = call_9577
func_9578 = relay.Function([var_9576], output)
mutated_mod['func_9578'] = func_9578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8331_call = mod.get_global_var('func_8331')
func_8333_call = mutated_mod.get_global_var('func_8333')
call_9586 = func_8331_call()
call_9587 = func_8331_call()
func_7267_call = mod.get_global_var('func_7267')
func_7269_call = mutated_mod.get_global_var('func_7269')
call_9596 = relay.TupleGetItem(func_7267_call(), 0)
call_9597 = relay.TupleGetItem(func_7269_call(), 0)
output = relay.Tuple([call_9586,call_9596,])
output2 = relay.Tuple([call_9587,call_9597,])
func_9601 = relay.Function([], output)
mod['func_9601'] = func_9601
mod = relay.transform.InferType()(mod)
mutated_mod['func_9601'] = func_9601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9601_call = mutated_mod.get_global_var('func_9601')
call_9602 = func_9601_call()
output = call_9602
func_9603 = relay.Function([], output)
mutated_mod['func_9603'] = func_9603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6974_call = mod.get_global_var('func_6974')
func_6976_call = mutated_mod.get_global_var('func_6976')
call_9634 = func_6974_call()
call_9635 = func_6974_call()
func_5003_call = mod.get_global_var('func_5003')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_9654 = relay.TupleGetItem(func_5003_call(), 0)
call_9655 = relay.TupleGetItem(func_5005_call(), 0)
bop_9660 = relay.greater_equal(call_9654.astype('bool'), call_9634.astype('bool')) # shape=(13, 16, 12)
bop_9663 = relay.greater_equal(call_9655.astype('bool'), call_9635.astype('bool')) # shape=(13, 16, 12)
output = relay.Tuple([bop_9660,])
output2 = relay.Tuple([bop_9663,])
func_9674 = relay.Function([], output)
mod['func_9674'] = func_9674
mod = relay.transform.InferType()(mod)
output = func_9674()
func_9675 = relay.Function([], output)
mutated_mod['func_9675'] = func_9675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9688 = relay.var("var_9688", dtype = "float64", shape = (13, 15, 13))#candidate|9688|(13, 15, 13)|var|float64
uop_9689 = relay.erf(var_9688.astype('float64')) # shape=(13, 15, 13)
func_8731_call = mod.get_global_var('func_8731')
func_8732_call = mutated_mod.get_global_var('func_8732')
call_9694 = relay.TupleGetItem(func_8731_call(), 0)
call_9695 = relay.TupleGetItem(func_8732_call(), 0)
func_8231_call = mod.get_global_var('func_8231')
func_8233_call = mutated_mod.get_global_var('func_8233')
call_9701 = relay.TupleGetItem(func_8231_call(), 4)
call_9702 = relay.TupleGetItem(func_8233_call(), 4)
output = relay.Tuple([uop_9689,call_9694,call_9701,])
output2 = relay.Tuple([uop_9689,call_9695,call_9702,])
func_9713 = relay.Function([var_9688,], output)
mod['func_9713'] = func_9713
mod = relay.transform.InferType()(mod)
var_9714 = relay.var("var_9714", dtype = "float64", shape = (13, 15, 13))#candidate|9714|(13, 15, 13)|var|float64
output = func_9713(var_9714)
func_9715 = relay.Function([var_9714], output)
mutated_mod['func_9715'] = func_9715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7454_call = mod.get_global_var('func_7454')
func_7456_call = mutated_mod.get_global_var('func_7456')
call_9829 = func_7454_call()
call_9830 = func_7454_call()
func_5831_call = mod.get_global_var('func_5831')
func_5835_call = mutated_mod.get_global_var('func_5835')
const_9849 = relay.const([10,2,-2,-9,9,-5,-8,3,5,3,4,4,-4,-9,-10,-4,4,-6,3,7,3,3,9,1,-2,3,10,1,2,5,-2,-2,-5,5,6,-9,6,-10,10,10,-8,7,4,1,9,8,5,8,-8,9,6,3,-2,8,4,3,3,-1,-7,1,-10,-7,-8,-6,-1,10,-3,-1,6,4,-7,4,-8,-5,7,2,6,4,-6,2,-3,7,5,-10,7,-3,-2,4,-3,-4,-8,10,6,10,2,1,4,3,6,-10,-7,7,1,-9,2,-5,-10,4,6,-9,-6,8,-10,9,4,9,4,1,9,8,-5,-2,7,-10,2,3,-2,7,-10,10,-8,5,6,7,-8,-7,-9,8,4,9,9,-3,-3,-7,-7,-6,5,-8,1,-6,-2,4,1,9,1,-1,-2,-3,5,7,-4,-6,8,2,1,2,1,7,7,-9,-6,9,5,4,-2,1,-5,9,-2,7,-8,-7,3,3,1,-10,-4,-6,5,-8,-2,4,-7,3,3,3,8,-2,-5,3,-9,-5,-6,-2,3,-7,-1,2,-4,-9,6,-8,-3,7,5,6,-5,-9,-1,1,2,-9,-8,5,8,1,-6,-10,9,-9,-7,10,-5,2,-9,10,-10,-8,-9,-2,-5,-3,-2,-3,8,7,6,-7,6,7,-4,-9,-5,3,-10,-3,6,9,8,-8,4,2,-3,-3,2,-6,-8,-1,4,10,-8,10,-8,-3,8,3,-9,4,-7,2,-10,6,-5,-2,2,2,5,-8,-10,-9,6,-2,8,8,-6,7,-1,3,-1,-5,-7,4,1,-6,7,-9,9,8,9,5,8,-1,-4,-5,7,7,-8,-9,5,8,-1,4,2,7,8,7,3,-5,10,9,9,-5,-9,4,10,-7,-2,-10,3,-6,-9,-8,-2,-7,-2,-4,-4,-8,3,-6,-7,-3,4,-3,-9,1,-3,10,2,10,4,5,-2,1,-4,-8,2,9,-3,4,-1,-1,3,-10,9,-9,1,-2,-4,8,-10,8,-8,-7,-7,-4,-7,5,-8,-5,4,-3,7,-7,8,10,4,1,4,2,10,-2,-4,-7,1,-1,-3,1,2,10,5,-10,-7,-10,9,-4,1,8,-4,-8,-4,-9,5,-6,8,-7,-7,4,7,6,-8,-9,-8,-4,9,-7,-5,9,-6,9,4,-9,-4,-8,8,1,6,-5,-6,-7,5,7,10,-1,4,2,-7,-10,5,4,-1,9,4,4,-5,4,-2,-1,6,9,-10,-7,-4,-8,4,-2,8,6,7,1,-8,-5,3,-5,6,10,-8,4,3,-1,-5,-5,8,4,-9,1,-9,2,-10,2,2,3,8,-2,-1,-9,-9,9,4,-3,8,2,10,-9,10,6,5,4,7,6,10,-4,10,6,-7,-8,-3,-2,6,-3,5,10,9,3,9,-5,5,-8,3,2,3,4,-2,-10,8,-7,-3,2,1,1,7,9,-5,10,8,-7,1,6,-8,4,-10,-8,7,8,-9,10,-6,9,-5,-9,-10,4,10,7,-8,3,-5,2,2,2,10,-7,-10,-8,-7,7,-5,-3,3,-2,-2,-9,-5,8,3,-1,3,-9,-6,7,-6,-5,5,6,7,-9,5,7,-8,-9,7,4,-8,3,10,1,6,6,3,1,2,-2,-9,6,6,-10,5,-4,-9,-7,9,-6,4,-6,6,9,-7,-6,10,6,9,-10,10,-5,1,7,-2,4,-4,2,-8,-9,-2,3,-9,9,-3,-10,10,-1,9,-2,-2,6,-7,-6,-3,-1,-10,-8,-3,4,-3,10,-2,-6,-2,4,5,8,2,8,-8,10,-5,-6,-5,-8,-7,-2,1,3,-8,-5,-9,-6,8,-6,-5,4,-7,10,-1,8,7,10,-10,1,-10,-1,-1,3,1,6,8,-7,10,-6,-6,-2,6,2,5,-4,-4,-5,3,4,9,-9,-2,1,4,5,-2,4,9,4,1,-8,-6,-10,2,3,6,8,10,1,7,-5,-5,6,5,7,-9,-1,-1,-4,-4,4,-10,-9,-2,-4,8,-7,-8,-6,-3,9,1,1,-8,5,-3,-6,-1,-3,7,3,9,-8,-3,10,-7,-1,8,10,-6,-1,-4,-2,-4,-10,-2,-6,-3,10,9,3,10,6,-6,5,1,-1,-3,-10,7,9,10,-2,10,-10,-1,-4,-7,-8,-5,6,-9,1,-9,-10,-8,8,4,3,-2,-10,-6,-8,5,7,-1,7,10,-3,-8,7,-3,6,-5,-3,3,-3,-10,-5,9,4,-7,-9,9,-7,-8,-3,-1,10,9,6,9,-5,2,-1,-4,-8,-9,7,2,5,10,3,-10,-9,8,-2,-5,-3,9,-8,2,3,7,-9,5,9,5,-9,4,-3,3,7,-4,-9,-6,-5,4,-2,-7,-10,-7,10,-8,7,8,4,7,3,4,4,6,-10,9,-3,-1,1,-1,-1,3,-1,-8,-2,8,6,-5,10,4,-4,-10,-1,10,-2,-4,-10,-9,-8,7,1,5,-5,-10,6,5,-4,6,9,-7,7,-1,8,9,8,6,-1,-7,-5,-1,8,10,-4,-9,-4,-3,-10,9,6,-6,4,-4,-4,1,-7,-8,-10,-8,5,-7,-4,2,-3,-1,-1,-3,-10,-1,-7,4,7,-10,-2,-1,-6,8,9,3,2,-10,1,-9,-2,5,-5,3,3,-8,2,2,10,-7,1,-10,3,8,-5,7,9,7,3,5,5,-10,5,-4,-3,1,-2,9,-2,1,3,-5,10,-8,1,-8,9,3,2,-10,-10,-1,1,-8,-6,-10,-9,-1,6,3,-3,2,-10,7,-4,-1,7,7,-1,-4,-5,7,-9,4,-10,-3,-9,6,-1,3,1,10,-5,9,-3,4,5,-4,10,10,-7,2,9,7,-2,-3,-6,10,-9,9,1,-10,5,-3,-3,4,7,8,-5,-3,-5,9,-9,-3,1,10,7,8,-7,-8,5,10,9,9,-3,2,-1,9,3,10,-4,-4,2,3,-5,10,3,4,-10,-10,5,10,5,6,1,-2,6,-8,-9,10,1,6,9,-10,10,1,1,1,-9,4,5,-7,-1,3,-5,4,10,4,9,-8,3,6,9,8,8,-9,7,6,-10,-9,-10,3,-2,-9,8,-2,7,2,7,5,5,10,10,1,-5,-5,3,6,2,8,5,10,8,-9,6,-2,-9,-3,8,-9,2,9,1,-1,-3,4,9,-1,7,-3,5,4,-2,3,10,-5,5,10,-1,10,9,1,7,6,1,9,-9,-10,-9,-10,-4,-3,-9,8,3,-2,-1,2,-5,5,8,-4,6,-5,-8,6,-10,-4,4,-8,9,9,5,1,10,7,-10,6,-4,3,-5,-5,-9,-5,8,-2,-5,10,-4,9,-7,-3,-7,2,-9,-5,-5,-1,-9,9,-2,-8,-2,5,7,10,-10,10,-2,-3,9,-7,-10,9,7,-9,-7,-3,3,-4,4,6,-7,-3,3,9,-6,4,-5,5,9,8,-1,4,1,-6,-2,-8,1,7,1,-3,10,-3,10,-6,2,-4,7,6,-8,4,5,10,-5,-9,10,-3,9,5,4,8,-5,10,4,1,-8,-3,-7,8,-9,10,7,10,-1,-5,6,4,8,5,-10,4,-3,1,-2,-6,4,-8,1,-8,3,-9,1,-2,7,-10,8,-5,3,-1,-2,5,4,8,-1,8,-4,-5,-2,3,-6,4,-9,3,2,-8,-2,2,-4,1,-9,-1,8,7,5,-9,2,-3,2,-2,3,-3,-3,-10,5,4,2,8,-3,2,-4,-9,4,-9,1,3,3,8,10,5,-9,3,6,3,-8,-1,4,1,3,6,-1,-5,-6,-2,-3,4,-6,5,-8,-5,-1,-1,4,5,-1,-1,-2,9,-1,4,8,6,-5,-5,-9,-9,7,-7,3,-10,5,-9,10,-4,-10,3,-6,-1,-9,-4,-9,9,5,8,-10,-2,-2,3,-10,-10,-5,10,1,-2,8,-7,1,4,3,-3,4,7,6,-7,7,9,-2,5,8,6,-3,6,10,-9,-4,4,-8,6,-3,2,-10,-3,-10,8,6,-8,8,3,4,8,4,7,-5,6,6,9,9,-10,10,8,3,-5,10,8,-9,5,8,-5,-5,-2,-1,8,-5,-10,10,3,6,4,-5,1,9], dtype = "int8")#candidate|9849|(1560,)|const|int8
const_9850 = relay.const([[-2,3],[-7,5],[4,5],[-6,4],[-4,-10],[-4,4],[6,-7],[-5,-8],[9,-3],[4,6],[-2,3],[1,3],[-6,6],[-1,-7],[10,-7],[1,4],[-7,-6],[2,1],[2,4],[-1,1],[-2,-7],[-9,-2],[-10,-6],[6,-1],[-4,4],[-7,-2],[6,6],[-4,5],[4,-1],[-8,-4],[1,1],[7,-10],[9,8],[6,-6],[-5,2],[-9,-7],[8,-10],[10,9],[3,9],[-2,-10],[3,-6],[8,-3],[-6,2],[1,10],[7,8],[-3,9],[4,5],[-8,-6],[3,-10],[-6,3],[8,-7],[7,10],[9,-3],[2,-10],[1,4],[-10,-8],[4,5],[-3,-2],[-6,-3],[8,10],[9,10],[7,-10],[5,8],[8,-10],[6,-2],[4,3],[3,-4],[7,-8],[7,-10],[10,-3],[-5,2],[-6,6],[6,4],[-4,-9],[-3,7],[6,6],[3,-8],[-5,-8],[1,-6],[2,1],[-3,-7],[2,-3],[-10,-4],[-6,-2],[6,4],[2,-4],[1,1],[3,3],[-9,-3],[8,-5],[-6,9],[-9,1],[-2,7],[-6,-8],[-2,-2],[1,2],[-8,10],[-1,-6],[-1,-9],[5,-6],[-4,10],[7,-8],[-7,5],[-8,7],[-4,-1],[1,1],[10,4],[9,-4],[-4,-2],[-2,-1],[1,-8],[-5,-4],[-1,1],[10,-6],[2,-8],[10,2],[6,-5],[4,-9],[4,-5],[-2,5],[4,7],[-9,-6],[3,-2],[8,6],[-9,4],[9,-10],[3,-1],[6,10],[3,4],[10,-7],[-6,5],[2,-9],[2,-6],[-9,3],[2,8],[-9,8],[6,8],[-1,-1],[3,-10],[5,7],[3,10],[10,5],[-7,-9],[-9,-2],[8,3],[4,-6],[-9,-3],[-6,-4],[6,2],[-7,-7],[9,-3],[-5,-5],[5,-4],[-3,-8],[-9,-9],[-3,-7],[-6,2],[-7,8],[-7,4],[5,6],[-1,-9],[-3,9],[9,-10],[-2,1],[5,1],[-4,-7],[1,-4],[-3,6],[-5,8],[-3,-3],[-4,5],[9,4],[-1,5],[6,-8],[-3,1],[7,10],[2,1],[5,-8],[-6,-7],[-10,8],[-7,-9],[-4,8],[-3,5],[-6,-3],[3,6],[9,-8],[-8,7],[-7,-1],[9,7],[-1,3],[6,8],[-1,2],[7,3],[-1,-9],[8,-9],[3,9],[-2,-5],[1,-10],[4,-7],[-9,2],[-7,3],[5,-7],[10,-6],[-5,-6],[9,-3],[9,-5],[1,1],[-3,7],[-5,-7],[2,1],[-1,-8],[-2,-5],[-6,-3],[-10,-10],[-4,-3],[4,-8],[10,-9],[-1,-8],[-9,-9],[1,-6],[-10,3],[-9,3],[4,2],[-5,8],[6,-10],[2,-9],[4,-6],[2,1],[-2,4],[-7,-5],[-2,-10],[-7,-2],[8,2],[-10,2],[1,-9],[1,4],[4,5],[6,2],[-8,5],[-3,-8],[1,-2],[3,8],[-4,-6],[7,-8],[-10,2],[-2,-4],[-7,6],[7,2],[4,-2],[-9,-10],[7,10],[5,-5],[-9,-1],[-3,1],[-5,1],[-1,-4],[6,3],[-6,10],[8,-7],[8,-10],[-1,7],[-9,4],[-3,9],[-8,8],[-9,-3],[3,-10],[5,-8],[3,9],[-10,-8],[3,4],[-8,10],[4,-4],[-9,1],[2,7],[-1,8],[2,8],[4,-10],[1,-2],[4,9],[-10,-2],[9,4],[-5,7],[-5,-9],[-4,6],[4,-4],[-9,6],[-10,3],[5,10],[-9,5],[7,-1],[9,-9],[7,-3],[-3,-8],[3,10],[-6,-3],[8,-6],[2,-4],[-3,1],[-3,7],[8,-2],[6,5],[-3,-5],[8,1],[5,-7],[-9,6],[-4,-6],[-1,-10],[4,10],[-2,-3],[10,4],[-8,-5],[2,-2],[1,-3],[-8,5],[-3,-6],[6,8],[3,-3],[-9,-2],[-1,4],[9,4],[-3,-6],[-7,10],[-5,-6],[-4,-9],[6,-1],[-8,-6],[10,-4],[-3,10],[5,-8],[-8,-2],[-5,-1],[5,-6],[-1,-7],[-8,2],[10,-8],[4,10],[-5,-6],[5,5],[6,-8],[6,-1],[-9,-10],[1,8],[7,4],[-5,5],[-3,2],[-8,-7],[-2,7],[-9,9],[-9,8],[10,-1],[1,2],[-10,-7],[-7,10],[-7,-2],[-3,9],[9,1],[-6,8],[-4,-4],[-6,2],[-1,-10],[1,6],[8,9],[6,5],[-5,-3],[-7,8],[4,6],[-6,8],[9,-8],[10,8],[-1,-1],[-4,-4],[3,1],[-10,1],[1,-4],[8,-6],[9,-7],[7,9],[2,-7],[-6,-7],[-8,-1],[7,2],[9,-5],[-7,-6],[-5,5],[10,-4],[-4,9],[3,9],[4,10],[1,-9],[8,-9],[-5,1],[-10,3],[-10,2],[-9,-4],[-7,-4],[4,-2],[5,-9],[-5,8],[-5,-1],[-5,5],[-3,-1],[-6,-5],[-1,-1],[4,-4],[-5,4],[1,-2],[-10,1],[9,-5],[1,-7],[5,1],[2,3],[-7,4],[7,-2],[9,7],[6,9],[6,-8],[-1,5],[8,4],[-7,-5],[-3,6],[9,10],[-1,9],[7,-5],[-3,-1],[9,-4],[3,8],[-2,-6],[-3,5],[-2,2],[-4,-3],[1,7],[10,-2],[-3,5],[-2,-7],[7,1],[6,4],[3,-1],[6,-9],[1,-3],[-3,9],[9,3],[8,-8],[-3,-9],[-5,9],[8,4],[-6,-3],[10,-10],[-10,8],[-5,-3],[-2,2],[-9,6],[-3,-1],[-7,-6],[-9,-1],[-6,-9],[-10,-8],[-9,9],[-1,9],[-1,2],[-2,-6],[-8,-3],[5,4],[-7,-8],[2,-3],[6,-6],[-3,4],[2,10],[1,-4],[-2,5],[-2,-7],[-6,7],[10,10],[-2,-10],[3,-2],[4,-8],[10,5],[10,-9],[1,-3],[-10,4],[10,5],[-2,8],[-3,-10],[-4,1],[2,-8],[-7,5],[3,-6],[8,-5],[8,10],[-7,7],[3,-6],[-8,1],[-4,-10],[-5,1],[-5,-3],[9,-1],[9,6],[4,-5],[-1,-3],[7,-8],[-4,4],[-7,9],[3,5],[9,-8],[-1,-4],[10,-3],[-10,1],[-2,-10],[9,-6],[-8,8],[-7,3],[1,6],[-8,9],[2,10],[-10,-1],[9,-9],[-5,5],[-1,7],[6,-6],[3,-10],[-2,10],[1,-6],[-10,3],[8,10],[-10,9],[9,-9],[-7,-1],[9,-3],[10,-7],[-5,4],[-9,7],[-1,-1],[3,2],[7,7],[8,-4],[7,10],[-3,8],[9,3],[1,7],[8,-2],[-9,3],[8,8],[7,-3],[-1,4],[9,2],[-6,-7],[-3,-8],[2,4],[-6,5],[-8,-8],[-7,3],[-5,2],[3,-1],[6,-5],[-2,-2],[4,-6],[-2,2],[6,-6],[2,-2],[6,-10],[-5,7],[1,-4],[8,-7],[-1,-3],[-8,4],[-7,-8],[10,8],[2,-7],[9,10],[-8,2],[10,8],[-6,8],[-8,-7],[-5,-5],[-5,-2],[-1,5],[5,-1],[-2,2],[-6,-5],[3,-6],[6,-7],[-8,-5],[-5,9],[-8,-5],[10,9],[-1,-3],[-1,-9],[2,5],[-9,-6],[-5,10],[-9,-6],[-3,-3],[9,6],[3,6],[10,10],[1,9],[-10,-6],[7,4],[7,7],[5,5],[-2,-3],[-2,10],[-6,-5],[6,6],[-10,-10],[8,-7],[8,-5],[1,-6],[-2,-9],[1,8],[10,4],[-9,3],[-1,-10],[-10,4],[-10,10],[10,6],[6,6],[-5,-5],[-10,-4],[-7,10],[-9,-1],[-7,7],[-3,-9],[-5,-4],[-10,-8],[-5,-3],[-2,-3],[1,9],[2,-3],[4,-6],[-8,-1],[-10,4],[7,9],[5,-6],[9,5],[5,-4],[-5,-5],[6,9],[8,7],[-7,10],[-10,-4],[2,-1],[-3,1],[-2,4],[1,-8],[3,-10],[-7,9],[-5,6],[9,-2],[3,-2],[-2,4],[-9,3],[8,-6],[9,3],[3,10],[10,-5],[7,10],[5,-8],[-4,-10],[1,-2],[5,1],[3,9],[-6,6],[-4,-9],[-10,-5],[-10,1],[5,8],[5,4],[-7,5],[1,-6],[3,-6],[-2,-10],[-3,-7],[-9,-8],[10,-10],[-5,8],[-1,2],[4,-2],[-1,-4],[5,-7],[-2,-3],[5,-3],[9,-3],[-8,-6],[1,-5],[-7,4],[7,-3],[3,-3],[6,-3],[-9,-9],[2,5],[-2,-10],[-3,10],[2,-10],[-3,1],[4,-2],[-10,-3],[-3,-9],[4,-4],[-9,1],[-7,-1],[-6,-8],[-5,4],[1,-10],[-1,9],[-7,9],[-4,-10],[-7,-4],[4,3],[-10,9],[-10,-5],[-9,3],[1,-5],[2,-2],[7,1],[4,8],[3,-10],[-4,8],[-3,8],[-9,-3],[-3,-9],[-4,-1],[-2,5],[-8,-8],[6,-5],[8,-8],[-8,5],[5,8],[-8,-5],[7,-3],[8,8],[3,-8],[5,-1],[9,-4],[-4,-6],[10,-9],[2,-3],[9,9],[6,-5],[3,-7],[-9,1],[-6,8],[-7,2],[-10,-6],[-4,1],[-6,3],[8,-10],[3,1],[-6,3],[9,-3],[-6,2],[8,6],[8,7],[8,8],[10,-8],[5,-7],[2,-4],[-9,-5],[-4,1],[-8,3],[-6,2],[2,9],[7,-7],[9,-3],[3,-9],[-4,7],[5,7],[-7,-9],[-3,-7],[10,1],[5,10],[-1,4],[8,-8],[10,-8],[5,8],[8,-5],[8,-7],[7,-8],[5,6],[-8,-10],[4,7],[-3,-8],[-2,10],[-4,10],[6,2],[5,-6],[5,6],[2,10],[-6,-9],[3,9],[6,7],[6,-3],[7,8],[3,-4],[-5,2],[8,3],[-10,-5],[2,10],[5,9],[5,6],[5,-3],[5,9],[-10,9],[-2,4],[-7,-6],[-4,8],[-2,-1],[-8,8],[-10,-4],[-10,6],[3,-8],[10,-8],[2,7],[-8,5],[3,-6],[4,6],[7,-10],[-2,-7],[-4,1],[-8,4],[-3,-5],[-7,3],[-8,-4],[-5,6],[-10,-8],[-5,-9],[-9,-6],[1,6],[10,-7],[2,8],[2,-2],[-2,-8],[-7,7],[1,-2],[6,9],[5,-1],[1,-1],[-9,4],[-10,-8],[-7,5],[3,7],[-7,6],[8,-1],[5,9],[2,-8],[8,4],[-8,-10],[-9,8],[-4,5],[5,-5],[9,7],[1,-9],[-5,-6],[6,-1],[-10,-9],[6,10],[4,1],[1,4],[5,-3],[5,-9],[-8,3],[3,-8],[7,-4],[5,-2],[3,10],[-1,-3],[6,-1],[9,-1],[-5,1],[-10,-2],[8,-7],[2,-4],[3,9],[10,10],[-10,-9],[3,6],[-6,-5],[-9,3],[-3,-10],[10,-9],[2,8],[-10,10],[-1,8],[8,-9],[4,1],[1,1],[-4,8],[-7,-8],[-7,-10],[5,8],[8,-8],[-2,1],[5,1],[5,9],[-5,3],[5,10],[8,-10],[2,8],[4,8],[-5,3],[-2,5]], dtype = "int8")#candidate|9850|(900, 2)|const|int8
call_9848 = relay.TupleGetItem(func_5831_call(relay.reshape(const_9849.astype('int8'), [1560,]), relay.reshape(const_9850.astype('int8'), [1800,]), ), 4)
call_9851 = relay.TupleGetItem(func_5835_call(relay.reshape(const_9849.astype('int8'), [1560,]), relay.reshape(const_9850.astype('int8'), [1800,]), ), 4)
output = relay.Tuple([call_9829,call_9848,const_9849,const_9850,])
output2 = relay.Tuple([call_9830,call_9851,const_9849,const_9850,])
func_9863 = relay.Function([], output)
mod['func_9863'] = func_9863
mod = relay.transform.InferType()(mod)
mutated_mod['func_9863'] = func_9863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9863_call = mutated_mod.get_global_var('func_9863')
call_9864 = func_9863_call()
output = call_9864
func_9865 = relay.Function([], output)
mutated_mod['func_9865'] = func_9865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9863_call = mod.get_global_var('func_9863')
func_9865_call = mutated_mod.get_global_var('func_9865')
call_9890 = relay.TupleGetItem(func_9863_call(), 0)
call_9891 = relay.TupleGetItem(func_9865_call(), 0)
func_9420_call = mod.get_global_var('func_9420')
func_9422_call = mutated_mod.get_global_var('func_9422')
call_9906 = func_9420_call()
call_9907 = func_9420_call()
bop_9910 = relay.equal(call_9890.astype('bool'), call_9906.astype('bool')) # shape=(4, 16, 12)
bop_9913 = relay.equal(call_9891.astype('bool'), call_9907.astype('bool')) # shape=(4, 16, 12)
uop_9918 = relay.log(bop_9910.astype('float32')) # shape=(4, 16, 12)
uop_9920 = relay.log(bop_9913.astype('float32')) # shape=(4, 16, 12)
output = relay.Tuple([uop_9918,])
output2 = relay.Tuple([uop_9920,])
func_9924 = relay.Function([], output)
mod['func_9924'] = func_9924
mod = relay.transform.InferType()(mod)
mutated_mod['func_9924'] = func_9924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9924_call = mutated_mod.get_global_var('func_9924')
call_9925 = func_9924_call()
output = call_9925
func_9926 = relay.Function([], output)
mutated_mod['func_9926'] = func_9926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8331_call = mod.get_global_var('func_8331')
func_8333_call = mutated_mod.get_global_var('func_8333')
call_9957 = func_8331_call()
call_9958 = func_8331_call()
output = call_9957
output2 = call_9958
func_9959 = relay.Function([], output)
mod['func_9959'] = func_9959
mod = relay.transform.InferType()(mod)
mutated_mod['func_9959'] = func_9959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9959_call = mutated_mod.get_global_var('func_9959')
call_9960 = func_9959_call()
output = call_9960
func_9961 = relay.Function([], output)
mutated_mod['func_9961'] = func_9961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9227_call = mod.get_global_var('func_9227')
func_9229_call = mutated_mod.get_global_var('func_9229')
call_10020 = func_9227_call()
call_10021 = func_9227_call()
output = call_10020
output2 = call_10021
func_10025 = relay.Function([], output)
mod['func_10025'] = func_10025
mod = relay.transform.InferType()(mod)
mutated_mod['func_10025'] = func_10025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10025_call = mutated_mod.get_global_var('func_10025')
call_10026 = func_10025_call()
output = call_10026
func_10027 = relay.Function([], output)
mutated_mod['func_10027'] = func_10027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8594_call = mod.get_global_var('func_8594')
func_8596_call = mutated_mod.get_global_var('func_8596')
call_10057 = func_8594_call()
call_10058 = func_8594_call()
func_6429_call = mod.get_global_var('func_6429')
func_6433_call = mutated_mod.get_global_var('func_6433')
var_10062 = relay.var("var_10062", dtype = "float32", shape = (256, 1))#candidate|10062|(256, 1)|var|float32
call_10061 = func_6429_call(relay.reshape(var_10062.astype('float32'), [4, 8, 8]), relay.reshape(var_10062.astype('float32'), [4, 8, 8]), )
call_10063 = func_6429_call(relay.reshape(var_10062.astype('float32'), [4, 8, 8]), relay.reshape(var_10062.astype('float32'), [4, 8, 8]), )
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_10065 = func_5463_call()
call_10066 = func_5463_call()
func_7586_call = mod.get_global_var('func_7586')
func_7587_call = mutated_mod.get_global_var('func_7587')
call_10069 = func_7586_call()
call_10070 = func_7586_call()
uop_10071 = relay.log10(var_10062.astype('float32')) # shape=(256, 1)
output = relay.Tuple([call_10057,call_10061,call_10065,call_10069,uop_10071,])
output2 = relay.Tuple([call_10058,call_10063,call_10066,call_10070,uop_10071,])
func_10075 = relay.Function([var_10062,], output)
mod['func_10075'] = func_10075
mod = relay.transform.InferType()(mod)
var_10076 = relay.var("var_10076", dtype = "float32", shape = (256, 1))#candidate|10076|(256, 1)|var|float32
output = func_10075(var_10076)
func_10077 = relay.Function([var_10076], output)
mutated_mod['func_10077'] = func_10077
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10091 = relay.var("var_10091", dtype = "bool", shape = ())#candidate|10091|()|var|bool
var_10092 = relay.var("var_10092", dtype = "bool", shape = (16, 16, 10))#candidate|10092|(16, 16, 10)|var|bool
bop_10093 = relay.logical_or(var_10091.astype('bool'), var_10092.astype('bool')) # shape=(16, 16, 10)
func_5563_call = mod.get_global_var('func_5563')
func_5567_call = mutated_mod.get_global_var('func_5567')
var_10101 = relay.var("var_10101", dtype = "float64", shape = (384,))#candidate|10101|(384,)|var|float64
call_10100 = relay.TupleGetItem(func_5563_call(relay.reshape(var_10101.astype('float64'), [2, 16, 12]), relay.reshape(var_10101.astype('float64'), [2, 16, 12]), ), 2)
call_10102 = relay.TupleGetItem(func_5567_call(relay.reshape(var_10101.astype('float64'), [2, 16, 12]), relay.reshape(var_10101.astype('float64'), [2, 16, 12]), ), 2)
output = relay.Tuple([bop_10093,call_10100,var_10101,])
output2 = relay.Tuple([bop_10093,call_10102,var_10101,])
func_10106 = relay.Function([var_10091,var_10092,var_10101,], output)
mod['func_10106'] = func_10106
mod = relay.transform.InferType()(mod)
var_10107 = relay.var("var_10107", dtype = "bool", shape = ())#candidate|10107|()|var|bool
var_10108 = relay.var("var_10108", dtype = "bool", shape = (16, 16, 10))#candidate|10108|(16, 16, 10)|var|bool
var_10109 = relay.var("var_10109", dtype = "float64", shape = (384,))#candidate|10109|(384,)|var|float64
output = func_10106(var_10107,var_10108,var_10109,)
func_10110 = relay.Function([var_10107,var_10108,var_10109,], output)
mutated_mod['func_10110'] = func_10110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7404_call = mod.get_global_var('func_7404')
func_7406_call = mutated_mod.get_global_var('func_7406')
call_10121 = relay.TupleGetItem(func_7404_call(), 1)
call_10122 = relay.TupleGetItem(func_7406_call(), 1)
output = relay.Tuple([call_10121,])
output2 = relay.Tuple([call_10122,])
func_10131 = relay.Function([], output)
mod['func_10131'] = func_10131
mod = relay.transform.InferType()(mod)
mutated_mod['func_10131'] = func_10131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10131_call = mutated_mod.get_global_var('func_10131')
call_10132 = func_10131_call()
output = call_10132
func_10133 = relay.Function([], output)
mutated_mod['func_10133'] = func_10133
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10175 = relay.const([[[8.243128,-6.410680,4.363038,-5.731571],[6.106142,4.191316,-0.267091,-8.178007],[-6.352713,-6.025143,-2.441899,7.642994],[5.801869,-2.339755,-4.063424,-3.888069],[-8.971907,4.797580,-2.003442,-8.365157],[-9.877041,-8.404813,3.146566,4.380874],[-7.301500,6.293507,-0.374548,-3.963470],[-8.305012,5.502260,-4.196822,2.270292],[-3.003920,-0.603247,-3.955602,-0.829823],[-5.401217,2.398744,9.884428,-3.770752],[-7.974499,3.733624,-6.808584,-8.509438],[-6.601684,4.069011,-5.881487,9.786231]],[[9.700452,4.098924,-6.684055,3.726962],[9.048535,-8.954790,3.641903,-2.127667],[-8.975699,-9.913374,2.175954,-1.118011],[-4.150232,-4.777538,-0.099656,9.538104],[4.218517,5.458187,-2.017847,-7.331645],[7.021329,-3.756533,2.479281,3.319100],[-2.418931,-3.073691,-8.039436,3.899987],[-0.852314,4.064394,-3.315844,5.873817],[-5.976828,5.384503,9.690277,-9.561733],[0.697681,6.143819,4.889320,-5.466386],[-1.126832,3.128637,3.614988,0.844038],[-8.469349,-2.434436,1.039835,-4.220207]],[[-2.824222,-2.639760,6.339664,5.518231],[3.901842,-7.312335,0.419381,8.257989],[3.448687,-2.869756,6.031826,5.673888],[5.407907,-1.231655,8.922921,-0.413880],[9.092267,8.023050,8.697780,2.363948],[2.033950,8.899583,-1.432781,-6.592156],[0.173545,8.354747,-7.148858,-8.517977],[-9.782951,-7.885357,9.933830,-3.778514],[2.606364,8.000785,-2.749425,7.624874],[-6.183677,-9.356738,5.242860,8.606400],[7.473625,-0.679908,8.873195,3.656097],[6.591252,1.540065,-8.851346,6.149917]],[[1.140296,-5.166105,6.452021,3.694672],[-7.893944,6.527452,-3.376995,-3.898692],[3.041748,6.897192,0.684460,-4.379351],[-6.664931,8.423463,8.857137,-1.095644],[-1.303261,-0.349695,-3.422209,9.301513],[7.937995,8.887908,3.816393,-0.277119],[-8.731221,5.031317,-6.439519,-9.642266],[2.616418,-2.353019,5.520224,2.815796],[5.219598,6.300323,9.643869,8.714917],[6.292929,-1.679379,-8.912660,2.846321],[-3.837072,1.541224,2.171152,2.240656],[9.238045,7.445362,-9.505299,-1.605654]],[[8.820779,-9.287423,8.655470,1.961150],[-4.065106,4.964283,-3.797224,0.896625],[-1.135444,-5.608189,-5.629141,-9.045803],[9.232970,-0.667655,9.118953,2.739797],[8.383501,4.032508,4.461314,3.246019],[4.861673,4.591380,-3.945987,-6.597856],[3.277089,-5.784919,0.319081,0.984783],[-9.453040,-1.882880,2.067658,-1.193833],[1.153624,0.865989,3.404228,-6.861434],[8.421566,-7.249694,-9.947192,-6.039785],[5.454808,-7.109178,-5.931078,0.618880],[7.230817,-7.543949,-0.090557,1.959089]],[[-5.875971,-3.422730,-0.046919,-9.663696],[-9.183630,6.750187,-8.780191,-8.402161],[-2.895926,-7.637042,2.196612,2.956651],[2.192319,9.728366,5.606657,-5.184783],[0.520122,5.503960,3.161111,9.296806],[-7.002199,8.177913,2.185051,8.663078],[-9.830707,-4.267365,2.977853,-2.548968],[9.600916,-6.059662,8.182099,-3.072024],[-4.679583,-0.777530,-3.366501,6.987812],[-0.376848,9.164357,2.795887,4.236390],[-8.476996,4.248683,0.981759,-6.223184],[6.992840,7.907958,9.500970,1.123308]],[[0.343930,-3.111852,3.471800,7.281444],[-0.081580,3.563398,9.544918,0.249000],[-3.389749,5.671382,-2.242052,-4.372188],[3.162524,-3.884393,-1.778456,-1.073174],[4.971706,6.215474,-4.643816,-0.775046],[3.873381,-8.143529,-5.611145,-5.825214],[-6.665186,8.084635,9.696142,-4.137269],[5.490056,-9.383198,-7.360928,-9.827995],[5.112204,1.039274,-1.375717,-6.056276],[1.952554,-1.279431,-6.538013,4.610522],[-1.680085,2.186568,-7.092579,-9.655234],[5.157646,4.480211,1.363549,5.667631]],[[2.748022,0.436840,0.083032,8.094854],[-7.139214,-8.937029,-2.111744,-7.500703],[-0.481851,0.768141,7.852275,0.371178],[-5.915691,1.123355,-1.392893,-8.743161],[7.963597,2.357297,1.678591,6.436525],[-5.425050,-6.787314,3.406086,7.889452],[-0.453255,6.059067,2.871469,-3.320429],[0.766115,3.186038,8.223086,-2.684222],[7.005718,5.265188,-3.878032,9.026915],[-2.569310,-4.134981,-7.584851,-7.358992],[-5.478975,-6.586111,-4.022644,6.985158],[-4.607204,8.147997,-0.157392,-4.312020]],[[5.789684,-7.619251,5.734081,-1.418337],[2.949367,7.708960,-5.486226,-7.844112],[3.307541,-3.557207,-6.416128,-7.708017],[5.084831,-4.773175,6.086496,6.332948],[-7.450688,-8.495300,9.555131,7.041638],[3.465778,-2.827679,-4.149076,-8.574561],[-0.171396,5.907742,-7.301403,6.337117],[2.459005,4.342102,4.518327,8.361965],[-7.375793,5.916704,-0.171832,-1.068373],[6.618282,-3.117614,-4.280789,-9.807504],[8.449858,8.117116,2.690405,3.996566],[-9.398091,0.225676,-0.509310,5.633784]],[[-2.190472,-5.080364,6.028164,4.043358],[-9.672666,0.993221,-1.828703,6.997544],[4.933298,-6.715413,2.274229,-5.011699],[-3.214229,9.472104,-5.806885,-4.173561],[1.059697,-0.150703,9.169675,-1.299431],[0.981148,-7.358754,4.277168,0.079235],[-1.823776,5.364508,-9.029199,1.129634],[0.980474,0.308436,3.789461,-0.327900],[-2.494157,-2.208287,-6.542221,9.083706],[-3.115686,-6.185470,2.012081,-7.466328],[6.570066,-3.556482,4.273906,-1.111426],[-5.084455,3.281764,9.040330,2.732520]],[[-1.497770,-9.051149,-3.714645,-6.662866],[4.479967,-9.136048,-4.360727,2.371124],[-5.960685,2.598474,7.340484,-2.009860],[0.762784,-1.786592,0.819417,4.054673],[7.255347,2.102973,6.265014,-5.025826],[-2.553455,-7.357896,6.122989,-0.224193],[3.096015,-9.878259,0.814308,-5.368916],[-4.617137,-4.061040,-8.942845,8.856962],[0.465362,7.021516,-5.474979,1.693355],[-9.791997,4.421893,5.190682,7.384527],[-0.367468,-2.390142,-9.699880,-4.189088],[4.122387,2.351146,-2.476966,7.547026]],[[8.514615,9.699684,-9.962392,-2.530898],[-1.526043,-6.328450,8.385857,-6.036987],[2.748399,4.172467,7.154492,-9.016685],[-9.870160,3.278277,-1.333929,-9.377697],[7.605874,4.040613,3.798164,6.543392],[-3.367075,5.106425,7.508150,6.047786],[-6.315291,1.752245,-0.719410,-4.825820],[1.811223,-0.867493,-9.618893,5.796798],[-4.078239,4.661931,-6.648043,2.703666],[5.970506,-2.553877,-2.170754,0.006967],[-4.030252,-9.667509,4.960310,-5.630953],[-9.112638,-8.473042,2.466533,0.814172]],[[4.106757,8.671267,5.483497,-8.069941],[-1.969958,2.089091,-7.004558,6.717994],[6.364593,7.385199,1.860353,6.044906],[-0.216286,-8.298329,5.916091,0.981427],[3.996537,-5.698446,8.551705,8.062771],[7.928235,-3.745389,0.580857,5.949200],[-0.221362,9.165948,-9.923600,1.699978],[3.195941,-4.615363,0.362026,3.316047],[4.450635,1.840716,-1.505494,-5.602463],[-6.272323,7.531338,-2.833143,-2.477013],[2.409170,-3.157749,1.815772,6.418654],[-9.625417,3.608603,7.717868,-2.372249]]], dtype = "float64")#candidate|10175|(13, 12, 4)|const|float64
var_10176 = relay.var("var_10176", dtype = "float64", shape = (13, 12, 4))#candidate|10176|(13, 12, 4)|var|float64
bop_10177 = relay.minimum(const_10175.astype('float64'), relay.reshape(var_10176.astype('float64'), relay.shape_of(const_10175))) # shape=(13, 12, 4)
output = relay.Tuple([bop_10177,])
output2 = relay.Tuple([bop_10177,])
func_10194 = relay.Function([var_10176,], output)
mod['func_10194'] = func_10194
mod = relay.transform.InferType()(mod)
mutated_mod['func_10194'] = func_10194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10195 = relay.var("var_10195", dtype = "float64", shape = (13, 12, 4))#candidate|10195|(13, 12, 4)|var|float64
func_10194_call = mutated_mod.get_global_var('func_10194')
call_10196 = func_10194_call(var_10195)
output = call_10196
func_10197 = relay.Function([var_10195], output)
mutated_mod['func_10197'] = func_10197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6288_call = mod.get_global_var('func_6288')
func_6289_call = mutated_mod.get_global_var('func_6289')
call_10209 = func_6288_call()
call_10210 = func_6288_call()
output = call_10209
output2 = call_10210
func_10248 = relay.Function([], output)
mod['func_10248'] = func_10248
mod = relay.transform.InferType()(mod)
output = func_10248()
func_10249 = relay.Function([], output)
mutated_mod['func_10249'] = func_10249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9674_call = mod.get_global_var('func_9674')
func_9675_call = mutated_mod.get_global_var('func_9675')
call_10299 = relay.TupleGetItem(func_9674_call(), 0)
call_10300 = relay.TupleGetItem(func_9675_call(), 0)
func_9601_call = mod.get_global_var('func_9601')
func_9603_call = mutated_mod.get_global_var('func_9603')
call_10311 = relay.TupleGetItem(func_9601_call(), 1)
call_10312 = relay.TupleGetItem(func_9603_call(), 1)
func_10194_call = mod.get_global_var('func_10194')
func_10197_call = mutated_mod.get_global_var('func_10197')
const_10320 = relay.const([-1.101774,-7.722626,-3.460101,5.222574,-6.407662,-1.256772,-2.961527,-4.799728,-3.555414,-6.968266,8.837610,2.107238,-8.871046,-6.393208,-6.667389,7.021406,-7.238009,-2.830344,-1.417282,9.303499,1.204175,8.209455,-5.142215,2.290496,-2.898009,5.020022,6.553618,-5.437335,-8.088972,1.349274,-7.727923,1.816150,-6.184484,0.613917,1.730919,9.031794,-9.519991,-4.737273,9.640313,-9.745489,9.957375,1.337337,-1.769433,8.910568,-9.351943,8.477691,1.661179,-1.219502,5.949300,-4.684304,-2.286132,9.191797,-8.951681,0.199640,6.013651,-9.266795,7.161959,4.885578,5.825854,-1.387338,3.876653,1.034409,-9.626199,-1.391693,0.160408,6.130904,6.134897,3.272623,-7.419594,9.179095,-3.170828,6.456127,8.914860,4.998937,6.523199,-1.765335,3.014324,3.327526,5.848624,2.799999,8.517428,-9.583846,-5.145583,-7.263978,-1.866741,-1.896869,5.900532,-4.134000,3.094243,-0.638799,0.655397,8.423787,-5.084347,4.402796,9.520410,-9.334022,0.749039,2.475601,-4.072051,-7.108892,4.070921,2.500353,-3.602433,8.843287,9.909954,-8.414733,-2.607894,-8.679880,5.078534,4.894709,-2.653051,5.701043,-4.335143,8.025327,-7.552177,-8.170877,1.321719,0.218150,1.742252,9.973605,-8.425771,-8.578745,2.241504,1.015780,-3.682693,4.739976,-9.175748,-3.782121,0.601883,-1.168526,3.113959,8.658778,-6.093986,2.960430,9.628259,8.979208,-2.247226,3.760100,-9.936155,-6.800447,8.373413,8.515639,-1.147097,-8.056927,-9.271239,-2.075388,8.787286,-2.602080,-1.205391,-0.169898,-7.710971,5.229076,4.727313,-1.657976,7.499557,-5.385596,9.434898,-4.750517,0.915292,9.232403,5.044975,9.367661,-1.749876,4.802985,4.706199,-0.742820,4.698592,7.668447,-7.166319,-4.122230,-7.322184,-0.667812,-2.051477,-4.814027,-9.904670,8.191912,7.049535,-3.736954,-5.191450,-2.471156,4.892865,8.850002,-7.514353,7.660139,8.261269,-1.771759,-3.812394,7.294485,8.296191,-1.041079,0.499069,-7.598643,0.973564,-3.952071,-5.282803,7.861421,-8.159580,-0.526244,9.590243,3.639097,1.226857,3.486444,9.059363,-2.488343,-6.637926,-7.450843,1.647610,-9.311655,3.385561,-6.264195,1.790370,-4.123560,1.775147,-0.618951,-8.041038,6.279947,2.108267,-7.447253,6.936123,9.024146,3.872203,9.997745,-3.405904,5.731437,9.168604,4.588487,-1.342923,-9.985971,-2.398045,-3.256663,-6.100057,-7.286207,-1.235824,-9.133456,-9.193788,0.102811,5.434716,-8.478151,-6.653781,-9.538914,8.331373,-8.315583,2.946437,9.424271,8.519180,-2.832499,7.315836,1.163205,9.165702,9.605732,-4.537909,-8.930624,-8.566883,5.776438,-3.078589,-9.065051,-4.262282,9.153750,6.629706,0.812666,4.550311,-2.789682,4.754595,-6.775276,-8.684934,-7.187198,6.796197,-8.596839,6.217800,-9.192935,1.222101,1.734539,-9.149356,1.780982,-1.811374,-1.347561,2.146763,-5.055851,5.094876,3.734104,7.361135,-8.927913,-6.209656,-9.454901,-9.569455,-4.077737,5.384782,2.141927,-5.331875,4.265121,-3.658163,-5.670315,-3.192739,-3.008181,-6.079385,5.849122,6.602693,-5.120886,4.616524,4.662432,7.076100,7.185322,8.741685,-8.178837,-6.943389,-8.894045,-2.193555,-1.476387,-4.311964,-7.212201,-8.144086,-1.355990,7.056746,-1.506150,0.425365,-9.830149,0.014692,2.125127,0.150480,-8.578496,3.948895,-6.080666,-0.452670,-8.091341,6.790439,6.898092,8.000303,0.711356,-1.072148,2.404424,8.300048,-9.032615,6.392346,0.098025,-2.874264,-1.421255,1.320426,3.691740,7.179597,-0.036488,-6.217466,6.704860,3.220519,-2.662881,-6.124339,0.871000,7.358781,-0.801667,9.116130,9.170941,8.298086,0.131488,-9.997362,-4.675559,-8.647327,-9.459011,-0.046160,-6.077304,-2.380098,1.800902,-6.582076,-5.872956,0.157902,6.899785,4.332011,-3.997685,-1.259055,7.676156,-5.905021,6.957441,-6.806396,9.590609,2.061619,-2.427573,-0.323077,-4.980270,-1.659390,-0.817800,6.253584,-1.500331,2.174832,6.976900,-2.394547,-1.459371,0.498363,0.926008,-8.191841,-1.811307,5.157765,9.042702,4.785389,-6.246536,4.854542,3.187659,-6.184429,0.826268,-1.543571,-8.981083,1.945678,0.979800,-6.862712,-4.133095,1.050490,-7.922323,8.603526,-4.667122,5.096427,-4.574550,8.057972,9.780277,4.597022,6.729563,1.348500,-5.069551,6.095551,5.472167,-1.711787,-8.300244,6.302319,-4.342965,-9.997958,3.297323,-5.189006,-3.658597,4.320098,3.577887,-0.659285,-0.208243,-6.847707,-5.699950,-2.493101,8.056122,8.953640,-0.172920,-0.635992,6.254015,8.092874,-5.552187,-6.876350,0.267945,-9.512143,-5.851026,-3.585948,3.834304,8.529150,-3.777237,0.545805,5.014772,2.444585,7.685164,-4.330546,-8.542438,8.871692,9.832351,-8.869402,5.753928,-2.799632,7.043690,-9.782334,0.022386,3.871107,9.134346,-5.271421,5.565440,-6.953221,9.478081,-2.770602,-2.661653,0.742359,1.640518,2.088234,-0.956691,7.174396,-7.194162,-1.239772,6.219349,4.965997,2.797010,6.900375,7.570182,4.949787,3.193983,-7.386171,-9.140540,3.162236,2.150152,-1.009761,-6.872676,-1.341178,-9.033669,8.258037,-0.898760,-3.710718,-3.956481,-1.119384,-5.033534,-8.176259,7.292878,4.072582,-6.715248,-1.047560,2.308277,-9.641121,-8.324623,-3.554714,5.630166,-7.546814,-1.067459,0.322596,9.559792,-9.573018,-2.983131,5.436047,-7.043167,9.280258,5.959888,-0.933523,-2.221075,6.524049,6.483615,2.430486,8.750291,-3.023642,3.660406,-1.208786,-9.513900,-4.315378,8.105548,-8.174640,-0.303692,9.589553,3.848661,9.076111,-7.238199,-7.915934,-9.555339,-8.102065,-9.181838,-1.349943,9.603381,-8.455270,7.037354,-5.577143,-5.606374,-9.193811,-6.522412,-0.628684,-1.059547,3.006137,-5.319671,-7.922052,-8.181842,-0.957775,-6.255488,-0.792026,6.534949,6.536126,7.946293,-3.337321,-7.196813,-1.133847,-3.876873,7.922424,-6.436637,9.427067,-1.967106,-8.730973,-4.958677,4.775969,6.858354,-6.921131,-2.657677,5.724483,2.636641,9.888129,3.123065,-0.033787,2.919031,-4.936808,2.511438,-1.910931,1.422806,-8.329969,-0.524783,-1.548094,9.635038,-0.011022,-4.157233,3.279111,7.171288,-1.391161,-8.640964,-9.043186,-4.196385,-3.874139,-7.352870,3.585220,7.324083,-2.036795,-7.292405,4.203995,9.162687,8.947577,3.023428,-5.187499,-2.381112,7.544702,2.427134,-8.418741,-1.876595,9.307898,8.017125,0.709619,-2.633320,-2.717329,-6.166006,-6.778318,-4.560510,-1.292915,-7.790142,-7.911491,3.691748,-6.379310,-1.886739], dtype = "float64")#candidate|10320|(624,)|const|float64
call_10319 = relay.TupleGetItem(func_10194_call(relay.reshape(const_10320.astype('float64'), [13, 12, 4])), 0)
call_10321 = relay.TupleGetItem(func_10197_call(relay.reshape(const_10320.astype('float64'), [13, 12, 4])), 0)
func_5133_call = mod.get_global_var('func_5133')
func_5136_call = mutated_mod.get_global_var('func_5136')
const_10324 = relay.const([[4,-10],[8,-7],[-3,2],[10,2],[-2,6],[-7,-2],[8,-1],[-7,-1],[-8,4],[-6,4],[5,-7],[-3,3],[-9,1],[-4,2],[-1,3],[5,-1],[-6,10],[-7,3],[10,5],[10,-9],[8,4],[-1,4],[-3,-1],[2,3],[6,-1],[-8,5],[4,-3],[9,-3],[10,-9],[-8,-4],[-1,-9],[-5,-2],[-6,4],[-7,3],[-8,-8],[-8,3],[10,10],[4,-9],[7,9],[-2,4],[6,-3],[-8,6],[5,-4],[5,-3],[-9,3],[5,8],[9,7],[-8,1],[-9,-7],[-3,5],[-7,10],[-6,8],[-6,-9],[-4,4],[-4,-7],[1,8],[-2,-9],[8,-2],[-4,-8],[7,-4],[-1,-3],[-9,10],[-9,-8],[5,-2],[-1,-10],[6,-5],[-6,1],[-10,-4],[9,6],[8,3],[-3,10],[7,2],[5,-8],[-4,3],[7,-3],[10,-10],[7,-9],[1,4],[3,9],[6,-9],[-3,-3],[-9,9],[10,-2],[9,9],[7,-3],[-10,-2],[1,-4],[-3,1],[9,5],[8,-3],[-5,-9],[7,10],[-8,4],[-10,-2],[6,-1],[8,-6],[-5,4],[-6,4],[-3,6],[2,6],[9,-9],[-4,3],[8,10],[-7,2],[9,5],[-4,7],[-3,7],[-8,-7],[-1,-7],[1,7],[-5,5],[7,-4],[-5,2],[-10,-7],[1,-8],[7,6],[-6,-4],[-5,4],[2,-4],[9,5],[-8,3],[5,3],[-4,-7],[-10,10],[7,1],[-7,-2],[6,-5],[-5,-9],[7,-3],[4,10],[-8,-10],[9,-4],[-1,8],[2,6],[7,3],[2,-5],[3,-3],[5,-6],[2,3],[3,-10],[2,2],[-8,-2],[-2,5],[6,-4],[9,8],[5,-8],[10,-10],[1,-9],[6,9],[-2,8],[-3,-7],[-4,-9],[-2,-8],[-3,-4],[2,-7],[-4,5],[8,5],[-4,-3],[10,7],[-4,-9],[-5,3],[-7,-10],[3,-9],[-4,8],[-10,-1],[7,-3],[-7,-3],[9,7],[-10,4],[9,4],[1,-8],[2,6],[-8,10],[4,-2],[-6,-4],[-6,-10],[3,-4],[8,-4],[-3,-4],[8,-1],[-7,-2],[4,2],[9,-6],[-6,3],[-10,2],[5,7],[-10,-7],[2,-5],[-6,-10],[10,-10],[-9,-4],[-3,-4],[4,-3],[6,8],[-2,6],[-2,-3],[-7,1],[-6,-8],[7,9],[1,-5],[3,-5],[-7,-7],[-8,2],[-4,-2],[-7,-2],[-4,-7],[-4,-5],[2,-9],[7,4],[-7,-2],[3,-6],[-9,10],[1,-1],[2,-10],[-6,1],[-6,-3],[-4,-6],[9,5],[3,9],[-2,-2],[-2,-2],[10,-1],[8,4],[-2,-6],[5,7],[-1,6],[-8,10],[5,-6],[4,1],[1,-10],[-6,2],[3,-6],[1,2],[10,8],[2,-7],[-9,-4],[-1,6],[-9,-3],[-3,4],[-5,4],[-8,10],[4,-3],[7,1],[-4,-6],[2,-9],[10,-7],[-6,-9],[-5,-9],[-1,8],[-6,-10],[-4,-8],[8,5],[7,2],[-5,2],[-1,-4],[-6,-9],[9,-10],[2,-9],[-1,-5],[2,10],[6,-9],[-2,-2],[-2,1],[-7,-2],[-2,5],[-2,-10],[-3,3],[-7,-7],[6,3],[8,3],[4,-9],[6,9],[-6,2],[1,3],[7,9]], dtype = "uint16")#candidate|10324|(275, 2)|const|uint16
call_10323 = relay.TupleGetItem(func_5133_call(relay.reshape(const_10324.astype('uint16'), [11, 10, 5])), 2)
call_10325 = relay.TupleGetItem(func_5136_call(relay.reshape(const_10324.astype('uint16'), [11, 10, 5])), 2)
const_10331 = relay.const([[-3,-8],[-9,3],[6,5],[-3,4],[10,-10],[1,6],[-9,4],[6,-3],[-4,-1],[4,7],[5,-9],[-2,4],[4,-9],[-6,-7],[-1,-6],[-2,7],[10,8],[-9,-5],[-9,-3],[-9,1],[3,-8],[-4,-5],[-3,-3],[9,-4],[-5,4],[7,8],[-4,-5],[10,-6],[-5,-3],[7,-3],[8,-9],[3,6],[6,-3],[9,-9],[4,8],[1,8],[-6,4],[-10,8],[-4,-5],[-2,6],[-2,1],[2,-6],[7,10],[-6,3],[-3,9],[-7,-1],[6,7],[-8,-8],[-1,2],[10,-10],[10,6],[-2,9],[-7,9],[7,-4],[-6,3],[-5,4],[1,-1],[-2,9],[-3,-7],[3,10],[-6,5],[-1,-8],[-9,2],[-1,1],[-10,2],[-3,3],[5,1],[-10,9],[2,-1],[2,-9],[-10,6],[7,3],[8,-9],[-8,7],[4,3],[-2,2],[-8,-6],[-10,-3],[8,-2],[-7,-2],[4,-7],[6,10],[-3,6],[7,1],[8,-8],[-4,1],[-10,-9],[-1,3],[-4,8],[6,2],[10,5],[3,-5],[-5,3],[3,3],[6,2],[7,-3],[-8,1],[-10,3],[10,-9],[6,-7],[-8,10],[4,-7],[-7,8],[-6,5],[3,-6],[-10,4],[9,-4],[-9,3],[1,9],[7,6],[4,-6],[-6,-2],[6,3],[-9,5],[-2,2],[-1,-1],[10,-6],[3,-1],[-7,-7],[9,-3],[9,2],[-6,-7],[-7,2],[-4,8],[10,-1],[7,1],[-8,-6],[-8,-3],[-6,-7],[1,9],[-1,-5],[3,-10],[-9,-7],[2,10],[-4,8],[-3,9],[5,2],[-9,5],[-3,8],[-6,-8],[-9,3],[10,-1],[10,-6],[-8,2],[4,9],[-6,-5],[5,-4],[2,-7],[-4,-10],[6,1],[-1,-8],[-4,2],[6,-3],[-6,-1],[2,5],[5,4],[-4,6],[-8,-3],[3,-7],[2,7],[3,-10],[8,1],[7,3],[7,3],[-4,1],[-5,-2],[-6,7],[8,-7],[6,1],[1,4],[-7,-9],[-8,6],[-3,-5],[-1,-9],[6,6],[2,7],[3,3],[-8,-1],[8,1],[-4,8],[-4,-8],[-10,4],[2,9],[3,3],[-4,7],[5,-8],[10,9],[-6,1],[-9,-7],[-5,4],[8,3],[-9,-5],[-5,6],[-2,3],[4,4],[-8,-2],[-6,-6],[9,-10],[3,-8],[4,-7],[8,10],[-8,2],[6,3],[-4,1],[-3,3],[-6,1],[-10,4],[-4,2],[-6,2],[7,9],[-1,-5],[9,-5],[2,-6],[-2,-10],[6,6],[-6,-2],[1,10],[9,1],[-4,-4],[-4,-5],[6,-7],[-8,3],[-10,4],[7,10],[-9,8],[-10,7],[-7,6],[10,10],[-3,-8],[-1,-7],[-10,-6],[-4,-7],[-7,-10],[-7,-10],[7,-8],[7,5],[-2,-3],[4,3],[-10,2],[-3,8],[5,-6],[6,-7],[-2,-2],[-10,1],[1,-6],[-5,-10],[-7,-2],[1,-10],[-9,-1],[4,7],[-2,7],[7,-5],[-3,5],[9,6],[6,-6],[-7,5],[5,-8],[-3,-9],[6,-6],[-5,1],[-1,7],[-2,6],[10,-6],[10,-4],[9,-8],[-8,7],[2,-7],[6,6],[-4,9],[-7,-5],[9,-5],[-5,6],[2,6],[10,2],[-9,-8]], dtype = "uint16")#candidate|10331|(275, 2)|const|uint16
bop_10332 = relay.logical_xor(const_10324.astype('int8'), relay.reshape(const_10331.astype('int8'), relay.shape_of(const_10324))) # shape=(275, 2)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_10338 = func_5425_call()
call_10339 = func_5425_call()
func_5840_call = mod.get_global_var('func_5840')
func_5842_call = mutated_mod.get_global_var('func_5842')
call_10341 = func_5840_call()
call_10342 = func_5840_call()
func_7609_call = mod.get_global_var('func_7609')
func_7611_call = mutated_mod.get_global_var('func_7611')
call_10343 = func_7609_call()
call_10344 = func_7609_call()
func_1880_call = mod.get_global_var('func_1880')
func_1883_call = mutated_mod.get_global_var('func_1883')
const_10346 = relay.const([10,-1,-10,2,1,3,7,-1,-9,-8,-6,-8,-1,-4,-2,4,-10,4,3,10,-6,-7,1,7,-8,6,9,6,2,8,3,-6,6,-5,-6,4,-7,6,-10,8,7,1,-8,5,-7,4,4,6,-9,-2,5,-8,6,10,6,-3,2,10,-10,-9,-7,-10,-4,4,7,-10,-9,-5,-2,-2,-3,-3,10,-4,-10,1,8,10,-8,-9,2,7,10,8,-9,2,9,6,9,-4,-4,8,-6,6,-5,-9,4,10,-2,-8,1,2,5,1,-9,-5,-10,5,-1,2,-7,5,-8,7,-5,10,3,6,-3,4,-2,5,1,-9,-2,-10,-3,2,2,-3,6,-3,-9,-9,-5,-4,-9,10,10,4,-10,3,-1,-5,8,-10,-3,-3,1,3,-2,-5,-8,3,-4,-2,-1,-10,-3,5,-4,4,-7,10,-9,-6,-1,-4,-5,7,-5,-8,5,9,4,7,-1,7,-8,-8,9,-9,-4,-9,1,-2,4,-3,7,-7,9,1,7,-10,5,3,1,-4,3,7,9,2,-9,-4,-8,1,5,7,-10,-6,-4,-10,-8,-1,-8,-9,-10,-4,-6,7,-9,1,-2,5,-3,8,-9,4,3,-2,-6,9,2,4,2,-9,-2,3,9,6,1,1,10,-9,3,-3,-4,2,6,3,-9,-8,-5,3,-9,5,-10,-1,-4,-3,-4,5,-1,-4,-4,6,9,2,-5,7,-3,5,1,-6,-6,1,7,8,4,4,8,1,4,-3,-10,2,-3,7,-2,-8,-3,-6,4,6,-7,5,-2,7,10,4,8,-3,4,-4,4,3,-2,8,7,3,-6,-1,5,-6,-6,6,8,-7,-1,7,5,-5,-10,-3,4,-1,4,-1,-10,5,9,1,1,8,-3,7,4,6,-2,-3,7,-1,5,-2,-8,10,8,-5,-3,9,7,-5,10,6,-10,-2,-2,10,4,-2,-8,-2,-8,-3,7,7,10,6,5,3,1,-4,8,-10,-3,5,-7,-6,-3,5,3,-3,-6,-4,-2,-8,-2,-6,4,3,10,-9,-6,-9,-3,8,-8,8,1,-5,-9,-6,3,3,9,5,7,-4,10,-3,-10,9,-3,2,-1,7,-9,-2,4,-2,-5,-2,-2,7,-2,6,-1,-1,-4,-10,-9,-6,9,-5,-5,-8,5,-5,8,10,2,5,-1,-10,9,-1,-7,9,2,3,-10,-10,-2,-1,-6,-2,6,-4,4,-3,5,1], dtype = "int16")#candidate|10346|(462,)|const|int16
call_10345 = relay.TupleGetItem(func_1880_call(relay.reshape(const_10346.astype('int16'), [11, 7, 6]), relay.reshape(const_10346.astype('int16'), [11, 7, 6]), ), 0)
call_10347 = relay.TupleGetItem(func_1883_call(relay.reshape(const_10346.astype('int16'), [11, 7, 6]), relay.reshape(const_10346.astype('int16'), [11, 7, 6]), ), 0)
output = relay.Tuple([call_10299,call_10311,call_10319,const_10320,call_10323,bop_10332,call_10338,call_10341,call_10343,call_10345,const_10346,])
output2 = relay.Tuple([call_10300,call_10312,call_10321,const_10320,call_10325,bop_10332,call_10339,call_10342,call_10344,call_10347,const_10346,])
func_10362 = relay.Function([], output)
mod['func_10362'] = func_10362
mod = relay.transform.InferType()(mod)
output = func_10362()
func_10363 = relay.Function([], output)
mutated_mod['func_10363'] = func_10363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9483_call = mod.get_global_var('func_9483')
func_9485_call = mutated_mod.get_global_var('func_9485')
call_10401 = relay.TupleGetItem(func_9483_call(), 0)
call_10402 = relay.TupleGetItem(func_9485_call(), 0)
func_8006_call = mod.get_global_var('func_8006')
func_8008_call = mutated_mod.get_global_var('func_8008')
call_10419 = func_8006_call()
call_10420 = func_8006_call()
output = relay.Tuple([call_10401,call_10419,])
output2 = relay.Tuple([call_10402,call_10420,])
func_10423 = relay.Function([], output)
mod['func_10423'] = func_10423
mod = relay.transform.InferType()(mod)
mutated_mod['func_10423'] = func_10423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10423_call = mutated_mod.get_global_var('func_10423')
call_10424 = func_10423_call()
output = call_10424
func_10425 = relay.Function([], output)
mutated_mod['func_10425'] = func_10425
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10501 = relay.var("var_10501", dtype = "float64", shape = (2, 9, 10))#candidate|10501|(2, 9, 10)|var|float64
uop_10502 = relay.exp(var_10501.astype('float64')) # shape=(2, 9, 10)
output = relay.Tuple([uop_10502,])
output2 = relay.Tuple([uop_10502,])
func_10505 = relay.Function([var_10501,], output)
mod['func_10505'] = func_10505
mod = relay.transform.InferType()(mod)
mutated_mod['func_10505'] = func_10505
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10506 = relay.var("var_10506", dtype = "float64", shape = (2, 9, 10))#candidate|10506|(2, 9, 10)|var|float64
func_10505_call = mutated_mod.get_global_var('func_10505')
call_10507 = func_10505_call(var_10506)
output = call_10507
func_10508 = relay.Function([var_10506], output)
mutated_mod['func_10508'] = func_10508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10025_call = mod.get_global_var('func_10025')
func_10027_call = mutated_mod.get_global_var('func_10027')
call_10525 = func_10025_call()
call_10526 = func_10025_call()
var_10566 = relay.var("var_10566", dtype = "float32", shape = (13, 16, 12))#candidate|10566|(13, 16, 12)|var|float32
bop_10567 = relay.divide(call_10525.astype('float32'), var_10566.astype('float32')) # shape=(13, 16, 12)
bop_10570 = relay.divide(call_10526.astype('float32'), var_10566.astype('float32')) # shape=(13, 16, 12)
output = relay.Tuple([bop_10567,])
output2 = relay.Tuple([bop_10570,])
func_10574 = relay.Function([var_10566,], output)
mod['func_10574'] = func_10574
mod = relay.transform.InferType()(mod)
var_10575 = relay.var("var_10575", dtype = "float32", shape = (13, 16, 12))#candidate|10575|(13, 16, 12)|var|float32
output = func_10574(var_10575)
func_10576 = relay.Function([var_10575], output)
mutated_mod['func_10576'] = func_10576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10423_call = mod.get_global_var('func_10423')
func_10425_call = mutated_mod.get_global_var('func_10425')
call_10604 = relay.TupleGetItem(func_10423_call(), 0)
call_10605 = relay.TupleGetItem(func_10425_call(), 0)
func_6764_call = mod.get_global_var('func_6764')
func_6765_call = mutated_mod.get_global_var('func_6765')
call_10611 = relay.TupleGetItem(func_6764_call(), 1)
call_10612 = relay.TupleGetItem(func_6765_call(), 1)
func_10574_call = mod.get_global_var('func_10574')
func_10576_call = mutated_mod.get_global_var('func_10576')
call_10640 = relay.TupleGetItem(func_10574_call(relay.reshape(call_10611.astype('float32'), [13, 16, 12])), 0)
call_10641 = relay.TupleGetItem(func_10576_call(relay.reshape(call_10611.astype('float32'), [13, 16, 12])), 0)
uop_10642 = relay.tan(call_10640.astype('float64')) # shape=(13, 16, 12)
uop_10644 = relay.tan(call_10641.astype('float64')) # shape=(13, 16, 12)
output = relay.Tuple([call_10604,call_10611,uop_10642,])
output2 = relay.Tuple([call_10605,call_10612,uop_10644,])
func_10651 = relay.Function([], output)
mod['func_10651'] = func_10651
mod = relay.transform.InferType()(mod)
mutated_mod['func_10651'] = func_10651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10651_call = mutated_mod.get_global_var('func_10651')
call_10652 = func_10651_call()
output = call_10652
func_10653 = relay.Function([], output)
mutated_mod['func_10653'] = func_10653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7790_call = mod.get_global_var('func_7790')
func_7792_call = mutated_mod.get_global_var('func_7792')
call_10671 = relay.TupleGetItem(func_7790_call(), 0)
call_10672 = relay.TupleGetItem(func_7792_call(), 0)
func_8643_call = mod.get_global_var('func_8643')
func_8645_call = mutated_mod.get_global_var('func_8645')
var_10675 = relay.var("var_10675", dtype = "float32", shape = (660,))#candidate|10675|(660,)|var|float32
call_10674 = relay.TupleGetItem(func_8643_call(relay.reshape(var_10675.astype('float32'), [10, 6, 11])), 2)
call_10676 = relay.TupleGetItem(func_8645_call(relay.reshape(var_10675.astype('float32'), [10, 6, 11])), 2)
var_10691 = relay.var("var_10691", dtype = "float64", shape = (4, 16, 12))#candidate|10691|(4, 16, 12)|var|float64
bop_10692 = relay.floor_mod(call_10671.astype('float32'), var_10691.astype('float32')) # shape=(4, 16, 12)
bop_10695 = relay.floor_mod(call_10672.astype('float32'), var_10691.astype('float32')) # shape=(4, 16, 12)
func_7609_call = mod.get_global_var('func_7609')
func_7611_call = mutated_mod.get_global_var('func_7611')
call_10702 = func_7609_call()
call_10703 = func_7609_call()
output = relay.Tuple([call_10674,var_10675,bop_10692,call_10702,])
output2 = relay.Tuple([call_10676,var_10675,bop_10695,call_10703,])
func_10708 = relay.Function([var_10675,var_10691,], output)
mod['func_10708'] = func_10708
mod = relay.transform.InferType()(mod)
var_10709 = relay.var("var_10709", dtype = "float32", shape = (660,))#candidate|10709|(660,)|var|float32
var_10710 = relay.var("var_10710", dtype = "float64", shape = (4, 16, 12))#candidate|10710|(4, 16, 12)|var|float64
output = func_10708(var_10709,var_10710,)
func_10711 = relay.Function([var_10709,var_10710,], output)
mutated_mod['func_10711'] = func_10711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9483_call = mod.get_global_var('func_9483')
func_9485_call = mutated_mod.get_global_var('func_9485')
call_10720 = relay.TupleGetItem(func_9483_call(), 0)
call_10721 = relay.TupleGetItem(func_9485_call(), 0)
func_7702_call = mod.get_global_var('func_7702')
func_7704_call = mutated_mod.get_global_var('func_7704')
call_10723 = relay.TupleGetItem(func_7702_call(), 0)
call_10724 = relay.TupleGetItem(func_7704_call(), 0)
func_8331_call = mod.get_global_var('func_8331')
func_8333_call = mutated_mod.get_global_var('func_8333')
call_10726 = func_8331_call()
call_10727 = func_8331_call()
output = relay.Tuple([call_10720,call_10723,call_10726,])
output2 = relay.Tuple([call_10721,call_10724,call_10727,])
func_10728 = relay.Function([], output)
mod['func_10728'] = func_10728
mod = relay.transform.InferType()(mod)
mutated_mod['func_10728'] = func_10728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10728_call = mutated_mod.get_global_var('func_10728')
call_10729 = func_10728_call()
output = call_10729
func_10730 = relay.Function([], output)
mutated_mod['func_10730'] = func_10730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7267_call = mod.get_global_var('func_7267')
func_7269_call = mutated_mod.get_global_var('func_7269')
call_10758 = relay.TupleGetItem(func_7267_call(), 0)
call_10759 = relay.TupleGetItem(func_7269_call(), 0)
output = relay.Tuple([call_10758,])
output2 = relay.Tuple([call_10759,])
func_10764 = relay.Function([], output)
mod['func_10764'] = func_10764
mod = relay.transform.InferType()(mod)
output = func_10764()
func_10765 = relay.Function([], output)
mutated_mod['func_10765'] = func_10765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9227_call = mod.get_global_var('func_9227')
func_9229_call = mutated_mod.get_global_var('func_9229')
call_10766 = func_9227_call()
call_10767 = func_9227_call()
output = relay.Tuple([call_10766,])
output2 = relay.Tuple([call_10767,])
func_10771 = relay.Function([], output)
mod['func_10771'] = func_10771
mod = relay.transform.InferType()(mod)
mutated_mod['func_10771'] = func_10771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10771_call = mutated_mod.get_global_var('func_10771')
call_10772 = func_10771_call()
output = call_10772
func_10773 = relay.Function([], output)
mutated_mod['func_10773'] = func_10773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_10810 = func_5463_call()
call_10811 = func_5463_call()
func_5133_call = mod.get_global_var('func_5133')
func_5136_call = mutated_mod.get_global_var('func_5136')
const_10821 = relay.const([-2,-7,7,8,5,8,-2,6,-8,-6,-8,-2,-5,-3,9,-9,-1,10,6,9,-4,3,1,-6,10,-10,4,7,8,-4,8,-10,10,6,9,-7,-2,1,-10,6,8,10,8,3,7,-5,-1,-1,6,-6,3,-8,-6,2,-7,-7,4,8,7,10,-1,9,9,-4,7,9,-5,-9,-9,6,9,10,-3,7,-2,-3,1,6,2,-6,9,-3,4,5,4,9,9,9,8,1,3,4,8,8,9,2,-9,2,6,-9,3,4,-5,-3,8,-2,9,-7,-5,8,-8,4,5,3,5,4,9,-9,2,9,5,-3,9,-3,6,10,2,-3,2,-2,9,-5,3,-7,4,-5,9,-3,-9,-5,-8,8,1,-10,-7,-1,6,7,10,6,-9,-4,8,-7,4,1,10,-3,-1,5,-3,6,-2,3,-6,7,10,6,-9,-5,6,4,-9,9,7,-10,8,-2,-1,-2,3,-4,1,1,4,10,5,-6,-10,-4,8,-9,-2,-9,-7,-1,2,-3,5,2,1,-9,-7,-1,-1,4,-1,-8,-6,-5,9,1,-3,-4,-10,8,-10,6,-4,-6,1,4,5,-4,-8,1,-7,9,-9,-8,1,10,3,-1,-2,1,7,7,7,2,-2,-3,5,1,-6,5,-5,1,1,-6,-10,-8,2,10,9,-7,3,4,-3,-4,-3,8,-1,7,-2,-5,-10,9,10,-1,1,2,7,4,10,-9,-8,-1,6,3,9,-8,2,-10,9,3,-1,-4,10,10,-5,-3,8,1,9,1,1,8,-9,8,-4,-7,-8,5,8,-10,-8,5,-4,-7,-2,5,-8,-9,-3,-4,-9,-4,-2,7,-8,-3,7,-10,8,-5,8,6,-5,4,3,7,-10,1,1,2,-4,-6,4,-3,5,-3,-10,-10,5,2,-3,1,1,-7,-1,-4,5,7,7,-4,-2,5,7,6,1,-9,9,2,-4,-4,10,-4,-7,-8,3,-7,10,-4,9,-10,-9,7,-1,-10,7,-1,-2,-4,6,-5,4,1,-6,-3,-8,-7,10,-7,-2,7,2,8,3,-7,2,7,6,9,6,8,3,-2,-1,5,7,5,-9,5,3,-2,-6,10,-8,5,-1,7,2,8,-8,9,6,-7,8,-9,-6,7,-10,5,8,-2,-6,-2,8,-10,-6,4,-4,8,-4,3,10,3,7,-7,-9,3,-10,4,8,8,4,7,-4,-7,4,2,10,-5,5,-1,3,-2,10,4,-9,-1,6,-8,-2,1,-7,-1,8,5,10,-10,1,-9,-7,8,-5,6,4,2,-10,-4,-5,5,3,-7,-5,7,10,-6,8,10,10,5,-3,-2,9,10,-2,-7,5,9,4,8,3,8,8,7,7,6,8,-3,-3,-10,9,2,-5,6,7,1,9,-3,1,-9,-1,-8,-2,-7,3,-1,-9,8,4,-3,-1,-2,6,-9,7,-5], dtype = "uint16")#candidate|10821|(550,)|const|uint16
call_10820 = relay.TupleGetItem(func_5133_call(relay.reshape(const_10821.astype('uint16'), [11, 10, 5])), 1)
call_10822 = relay.TupleGetItem(func_5136_call(relay.reshape(const_10821.astype('uint16'), [11, 10, 5])), 1)
var_10827 = relay.var("var_10827", dtype = "float64", shape = (15, 16, 12))#candidate|10827|(15, 16, 12)|var|float64
bop_10828 = relay.divide(call_10810.astype('float64'), var_10827.astype('float64')) # shape=(15, 16, 12)
bop_10831 = relay.divide(call_10811.astype('float64'), var_10827.astype('float64')) # shape=(15, 16, 12)
output = relay.Tuple([call_10820,const_10821,bop_10828,])
output2 = relay.Tuple([call_10822,const_10821,bop_10831,])
func_10832 = relay.Function([var_10827,], output)
mod['func_10832'] = func_10832
mod = relay.transform.InferType()(mod)
var_10833 = relay.var("var_10833", dtype = "float64", shape = (15, 16, 12))#candidate|10833|(15, 16, 12)|var|float64
output = func_10832(var_10833)
func_10834 = relay.Function([var_10833], output)
mutated_mod['func_10834'] = func_10834
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10842 = relay.const([[[4.076724,-3.223177,-1.394210],[-3.280349,2.133175,-0.392889],[7.165960,-2.468700,3.111028],[-7.577932,5.769465,3.773593],[1.828706,-6.980912,5.872722],[8.033425,2.418591,3.379440],[1.235974,-3.949917,7.603169],[-9.684000,-5.587709,-7.278470]],[[-8.789525,4.962745,-1.452045],[2.073421,-7.065660,-6.209468],[2.227483,-3.022190,8.993694],[9.495293,2.336495,7.585224],[-4.198986,-9.596779,9.041771],[7.330007,6.550658,9.677996],[4.910413,-9.117029,-3.594538],[6.001431,-3.144118,-1.287692]],[[4.697782,-9.319732,-2.984409],[5.781614,-0.462997,9.543871],[5.687317,4.825608,9.167590],[-0.961623,-2.021187,-6.131946],[8.267113,-8.193109,1.654607],[-4.917116,-5.069331,-4.403570],[-7.456559,-0.952450,2.830083],[-4.321901,-3.511101,0.577020]],[[-1.282812,-2.128113,-0.362843],[7.558718,9.247530,8.408138],[9.987643,7.763158,7.291341],[-4.043756,-0.540730,-9.512464],[-4.937204,-7.239404,-8.884891],[-0.115480,1.447070,4.416460],[0.166604,7.828727,6.473400],[7.774846,-2.676034,-5.260642]],[[-2.370764,-9.108371,7.705594],[-9.291737,3.465046,-0.242347],[4.448743,7.180934,-3.648053],[-0.202379,2.890015,-3.968437],[7.324891,2.972042,-6.680148],[6.319850,-4.455005,5.135570],[-2.923332,4.130237,-0.577308],[6.683414,-3.557725,-0.934516]],[[-5.548716,-2.043644,1.405421],[-5.706282,0.014243,-6.445927],[9.060573,-3.197372,5.837999],[-9.305177,-4.287852,-8.807833],[0.204214,-6.681552,-8.314413],[-0.792801,4.735999,-0.535593],[0.649920,4.636624,0.642602],[9.783851,4.181765,-4.028948]],[[4.660085,-7.243548,1.743027],[0.756147,0.450787,-7.290896],[-3.442333,-5.524758,-3.379587],[-5.886672,0.199055,-9.433606],[-7.151650,9.447632,6.206935],[-5.124126,-7.208175,-0.127426],[7.571279,6.442400,2.349812],[-4.745757,-9.501530,-6.663624]],[[-5.216086,6.870924,-3.772381],[-2.267791,0.840806,6.588696],[1.515833,9.302021,-1.493219],[6.465183,5.847575,-2.412178],[8.135843,7.228250,8.382170],[-8.000347,-0.418450,0.354518],[4.350131,4.800529,-7.166559],[1.031182,4.173193,9.875225]],[[8.053549,8.354504,6.579901],[1.085624,3.924604,8.894203],[-3.151433,-9.347701,7.936400],[-4.441973,3.128084,8.212366],[-6.954820,5.601722,1.826996],[0.535768,-3.091612,-0.063038],[2.757807,-8.722902,-8.801233],[0.156060,7.704800,0.315567]],[[-6.422997,1.051971,-0.679721],[5.192332,3.400230,-8.155999],[8.748843,0.414782,-6.391365],[-8.318760,-9.181299,-1.634532],[-6.379206,6.169670,7.425435],[-1.821497,-2.518604,4.030940],[-2.130915,9.106834,-4.333736],[-4.891369,-5.297961,4.040198]],[[2.825112,-2.715759,-2.457973],[-5.663810,-5.780240,-8.190260],[5.694076,2.844772,-2.811330],[-7.849345,2.314805,-8.946337],[3.135394,-2.634109,9.711646],[-5.006705,5.351334,-7.929492],[-4.008097,-4.026282,-0.541122],[-1.288901,4.605356,-5.516701]],[[2.801083,-2.538975,-1.060027],[-0.035741,2.804579,9.245228],[-5.195747,-5.122073,-2.589978],[7.127999,7.576960,-4.784711],[-2.790655,1.006244,-6.788427],[6.913418,-3.227282,4.473668],[-3.097539,-0.487466,-3.280080],[-3.078658,-6.030161,-4.888298]]], dtype = "float32")#candidate|10842|(12, 8, 3)|const|float32
uop_10843 = relay.asinh(const_10842.astype('float32')) # shape=(12, 8, 3)
bop_10867 = relay.bitwise_xor(uop_10843.astype('uint16'), relay.reshape(const_10842.astype('uint16'), relay.shape_of(uop_10843))) # shape=(12, 8, 3)
bop_10884 = relay.less(uop_10843.astype('bool'), relay.reshape(bop_10867.astype('bool'), relay.shape_of(uop_10843))) # shape=(12, 8, 3)
output = relay.Tuple([bop_10884,])
output2 = relay.Tuple([bop_10884,])
func_10887 = relay.Function([], output)
mod['func_10887'] = func_10887
mod = relay.transform.InferType()(mod)
output = func_10887()
func_10888 = relay.Function([], output)
mutated_mod['func_10888'] = func_10888
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10892 = relay.const([[[8.832893,-4.768540,-3.837406,-2.740562,7.895326,-2.219401],[0.930514,-6.540162,-4.110061,-9.973473,6.015458,0.884508],[-7.828607,-8.073534,-3.968937,-8.376291,-3.654658,-8.447607],[-5.463735,9.710292,-6.510349,-7.238195,-0.250687,1.804172],[8.854325,-1.268351,-3.626925,8.824754,3.167898,-6.184272],[0.365514,0.969048,5.987563,-3.556821,4.685083,-1.619619],[0.865358,5.078597,0.742671,7.827995,-4.793125,4.529746],[6.720675,8.270721,-7.578500,-2.937826,-8.378348,3.724685],[4.437825,-1.447368,2.978534,-5.862777,2.504590,4.183209],[-6.598620,4.705672,-7.363117,-5.535364,9.279470,-5.833722]],[[1.949734,4.217828,-3.932944,8.908473,6.849317,-3.612811],[-3.936682,9.883933,-8.459572,-9.129255,0.698768,0.032780],[-1.360965,8.196754,0.943690,-4.478913,-4.533212,6.757997],[-8.266233,9.533044,-9.416008,6.756107,-4.115340,-3.375435],[6.273404,-6.466944,-1.871638,-4.879257,9.681166,4.893705],[3.268084,8.016966,7.803996,-5.702854,6.093974,5.108805],[-8.842623,4.462798,-5.613520,9.487192,-3.774741,-3.655225],[-0.650519,-6.974688,1.442460,-5.635672,0.500841,-9.189191],[-5.711744,-5.311744,-3.547445,0.563533,-1.800888,-5.866012],[-9.836543,-0.500188,9.094408,-7.247747,0.559816,0.594738]],[[-3.534772,0.085132,7.095679,-0.954610,8.072497,9.080765],[1.672091,-1.104697,6.712176,-9.868282,-0.805727,0.861120],[4.319593,6.726373,-4.321892,6.126432,4.850803,-1.545361],[8.535313,-2.651802,8.875156,-0.215206,0.318973,0.197848],[9.075189,-2.141777,-8.918748,4.924982,4.289089,4.343035],[5.769163,-4.956649,6.948781,9.686658,-6.959826,0.081452],[-4.150134,-0.262297,-2.591461,-7.864098,7.988614,-6.438758],[-9.576696,3.263115,-4.606183,4.053006,-9.675495,-7.015495],[-4.230546,-3.992487,-8.157056,3.962135,4.992380,-2.648130],[8.322526,-6.300571,4.807093,-3.643550,-5.009619,-1.526464]],[[-5.394709,9.115673,5.135613,2.933524,8.167362,-0.058461],[9.495323,-5.617963,7.652264,9.518618,-9.530612,1.906272],[-6.447603,9.221734,-6.962961,9.224713,-0.370705,5.485204],[1.968069,5.845065,-4.453621,-0.282389,7.677803,-5.305752],[6.319781,4.629245,3.133709,6.128582,8.672105,7.121779],[-0.714382,-2.046691,5.608048,5.292159,-8.215339,1.041466],[-9.581012,0.181477,3.734610,3.403318,1.418897,-8.898896],[5.723273,-5.280062,-4.904750,-9.200351,-3.137860,9.974112],[-9.697173,-4.637311,-1.563790,8.200818,2.570312,-4.391816],[1.690769,3.331966,7.377230,4.111097,-6.832583,2.415239]],[[0.965065,2.452105,-9.996080,2.573287,7.349695,-3.152643],[-4.665950,3.083721,-0.311490,-5.756717,3.864744,-6.005427],[7.697941,9.154346,4.195424,-3.167089,1.477915,-7.686519],[9.665782,-0.939226,-4.077818,-0.985914,5.634858,-5.045540],[7.738838,6.268199,4.017213,7.179017,6.050904,-9.779326],[1.598836,-4.941152,-0.997643,7.974579,-2.054648,8.075332],[-5.624668,5.008926,4.831550,5.500738,-0.508504,5.108673],[-1.295801,-5.328198,7.732913,-9.601561,-6.684922,3.918255],[9.398813,-6.747981,5.280017,-5.056966,9.728254,6.414979],[-1.851952,8.933449,6.894204,-2.282133,-0.986215,5.573175]],[[8.222206,-8.373258,-3.508584,-9.075608,-3.569475,-6.223856],[-1.787187,1.274140,-1.064132,-1.568683,0.711203,-6.823106],[-4.582119,-5.906631,2.733698,0.209156,1.093827,-1.147087],[6.663986,-8.347013,7.798652,0.362315,5.320144,0.957991],[8.935773,-7.252044,-7.322208,5.282187,5.847023,8.527730],[-7.754600,9.787002,-9.164682,2.491997,4.335438,-3.490415],[-8.856243,-0.295169,-6.457505,-4.494520,-5.166801,2.280541],[7.166367,7.128847,-7.916071,1.652936,7.834916,6.394571],[0.220666,-9.792663,-2.537970,1.152214,-4.112369,-9.779986],[-5.179139,9.016902,-2.681339,4.505367,7.844909,-5.591419]],[[2.989756,-5.913690,7.076202,-4.946835,4.360237,8.293210],[2.316042,-5.147153,-7.004032,4.732210,6.539808,7.918430],[7.984004,5.749648,-7.800611,-6.456303,-0.141470,-1.055407],[-0.167354,-2.479752,5.265073,1.808160,-5.846054,8.757749],[5.073183,1.305076,3.097655,-3.759188,3.492566,4.864365],[6.815848,5.328333,2.591699,6.824721,7.521679,9.515474],[3.345301,7.510260,-5.870976,6.376434,2.080601,2.623095],[2.336153,2.139126,8.923241,-0.610930,7.815228,-6.748706],[-2.501766,-9.824221,0.051345,-6.595959,6.220365,2.440249],[-4.126435,3.011120,3.864979,-4.546847,-2.144045,-3.895152]],[[8.331315,-8.644923,-3.349127,1.960917,6.279568,-4.236183],[5.417578,3.986230,4.742491,-2.141221,8.752474,4.609560],[-5.652179,-8.085058,-2.654575,1.933442,0.550049,-3.855472],[-7.499990,-2.819353,6.333937,2.191464,-3.712102,5.862205],[9.895596,0.697719,9.201007,0.594782,1.318944,-3.231404],[-9.724413,9.248195,-6.406699,-6.062205,5.728334,-7.060035],[7.141544,5.763857,-9.380359,3.888280,-0.872018,9.162547],[-9.870609,-7.621488,-3.118040,4.476684,-3.716471,-3.747717],[-2.411015,8.477331,-4.951717,-6.553802,1.464902,6.776226],[5.762941,0.988887,2.287838,5.548547,-5.076958,6.188881]],[[7.896032,5.662165,9.663540,-0.114592,-9.182304,7.519793],[8.989196,4.166899,3.418825,-6.778506,0.155964,9.225690],[-2.321056,-3.328851,-2.182264,8.530538,-0.140201,8.909846],[6.984330,1.564587,7.816902,-3.235794,1.546485,-1.506060],[-5.666135,7.602190,-8.516398,-3.248034,3.823714,3.562771],[5.562384,6.224931,-1.287679,6.167546,-7.191076,3.451848],[-4.366788,-0.871759,4.710716,-3.078168,-0.446079,-1.832878],[-5.108888,3.177212,5.798075,3.164174,-2.200784,6.151456],[1.590663,-9.844575,1.805240,-9.582194,0.441588,3.863333],[0.976790,-6.518872,2.976924,-0.033180,3.275232,-1.972308]],[[1.084122,7.687817,-8.674448,-8.022524,-8.985211,-4.558051],[-8.418142,4.261838,2.561830,6.597924,-5.542474,-1.386810],[-0.686341,-0.977538,2.452884,-4.256489,-6.737790,-3.893347],[-4.063403,2.364137,0.808003,1.295649,-0.320587,9.263908],[0.413811,-5.869254,-3.400340,-5.186480,8.703665,-7.283274],[9.469320,3.260484,2.914304,-6.762534,-8.818355,-8.078123],[4.900902,-4.680970,-3.450261,-0.039962,-8.501392,9.125097],[7.475090,4.292976,-1.694992,0.886121,-4.342186,-1.685820],[-5.645040,-4.715791,-6.405635,-5.993566,-0.385793,9.109079],[-4.482503,-4.886995,-8.716312,4.825258,6.191777,-6.663904]]], dtype = "float32")#candidate|10892|(10, 10, 6)|const|float32
var_10893 = relay.var("var_10893", dtype = "float32", shape = (10, 10, 6))#candidate|10893|(10, 10, 6)|var|float32
bop_10894 = relay.mod(const_10892.astype('float32'), relay.reshape(var_10893.astype('float32'), relay.shape_of(const_10892))) # shape=(10, 10, 6)
output = relay.Tuple([bop_10894,])
output2 = relay.Tuple([bop_10894,])
func_10926 = relay.Function([var_10893,], output)
mod['func_10926'] = func_10926
mod = relay.transform.InferType()(mod)
var_10927 = relay.var("var_10927", dtype = "float32", shape = (10, 10, 6))#candidate|10927|(10, 10, 6)|var|float32
output = func_10926(var_10927)
func_10928 = relay.Function([var_10927], output)
mutated_mod['func_10928'] = func_10928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10131_call = mod.get_global_var('func_10131')
func_10133_call = mutated_mod.get_global_var('func_10133')
call_10932 = relay.TupleGetItem(func_10131_call(), 0)
call_10933 = relay.TupleGetItem(func_10133_call(), 0)
func_4791_call = mod.get_global_var('func_4791')
func_4795_call = mutated_mod.get_global_var('func_4795')
var_10946 = relay.var("var_10946", dtype = "float64", shape = (1920,))#candidate|10946|(1920,)|var|float64
var_10947 = relay.var("var_10947", dtype = "float32", shape = (1536,))#candidate|10947|(1536,)|var|float32
call_10945 = relay.TupleGetItem(func_4791_call(relay.reshape(var_10946.astype('float64'), [10, 16, 12]), relay.reshape(var_10947.astype('float32'), [1536,]), ), 3)
call_10948 = relay.TupleGetItem(func_4795_call(relay.reshape(var_10946.astype('float64'), [10, 16, 12]), relay.reshape(var_10947.astype('float32'), [1536,]), ), 3)
output = relay.Tuple([call_10932,call_10945,var_10946,var_10947,])
output2 = relay.Tuple([call_10933,call_10948,var_10946,var_10947,])
func_10955 = relay.Function([var_10946,var_10947,], output)
mod['func_10955'] = func_10955
mod = relay.transform.InferType()(mod)
var_10956 = relay.var("var_10956", dtype = "float64", shape = (1920,))#candidate|10956|(1920,)|var|float64
var_10957 = relay.var("var_10957", dtype = "float32", shape = (1536,))#candidate|10957|(1536,)|var|float32
output = func_10955(var_10956,var_10957,)
func_10958 = relay.Function([var_10956,var_10957,], output)
mutated_mod['func_10958'] = func_10958
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10975 = relay.var("var_10975", dtype = "float32", shape = (12, 13, 1))#candidate|10975|(12, 13, 1)|var|float32
uop_10976 = relay.log10(var_10975.astype('float32')) # shape=(12, 13, 1)
output = uop_10976
output2 = uop_10976
func_10979 = relay.Function([var_10975,], output)
mod['func_10979'] = func_10979
mod = relay.transform.InferType()(mod)
mutated_mod['func_10979'] = func_10979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10980 = relay.var("var_10980", dtype = "float32", shape = (12, 13, 1))#candidate|10980|(12, 13, 1)|var|float32
func_10979_call = mutated_mod.get_global_var('func_10979')
call_10981 = func_10979_call(var_10980)
output = call_10981
func_10982 = relay.Function([var_10980], output)
mutated_mod['func_10982'] = func_10982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7523_call = mod.get_global_var('func_7523')
func_7524_call = mutated_mod.get_global_var('func_7524')
call_11019 = func_7523_call()
call_11020 = func_7523_call()
output = call_11019
output2 = call_11020
func_11025 = relay.Function([], output)
mod['func_11025'] = func_11025
mod = relay.transform.InferType()(mod)
output = func_11025()
func_11026 = relay.Function([], output)
mutated_mod['func_11026'] = func_11026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6337_call = mod.get_global_var('func_6337')
func_6339_call = mutated_mod.get_global_var('func_6339')
call_11027 = func_6337_call()
call_11028 = func_6337_call()
const_11073 = relay.const([[[False,True,True,True,True,False,True,True,False,True,True,True],[False,False,False,False,False,False,True,False,False,True,False,True],[False,True,True,False,True,False,False,True,False,True,False,True],[True,False,True,True,True,False,False,False,True,False,False,True],[True,True,True,True,True,True,True,True,False,False,True,True],[True,True,False,True,False,True,False,True,True,True,False,False],[False,True,False,True,True,False,False,False,False,True,False,True],[True,True,False,True,True,True,True,False,False,True,True,False],[False,False,True,True,True,True,False,True,False,False,False,False],[True,False,False,True,False,False,False,True,True,False,False,True],[True,True,True,True,True,True,True,True,True,False,True,False],[True,True,False,False,True,False,False,False,True,False,True,True],[True,True,False,False,True,False,True,False,False,True,True,True],[False,False,False,True,False,True,True,False,False,True,False,False],[False,False,False,True,False,False,False,True,True,False,False,True],[False,True,True,False,False,True,True,False,True,False,True,False]],[[True,True,False,False,False,False,False,False,False,False,True,False],[False,True,False,False,True,False,True,False,True,False,False,False],[True,False,False,True,False,False,True,True,True,True,True,True],[True,True,False,True,False,True,True,False,True,True,False,False],[True,True,False,True,False,True,True,True,True,True,False,True],[True,True,False,False,False,False,False,True,True,False,False,True],[True,False,False,False,True,False,True,True,False,True,False,False],[False,True,True,True,False,False,False,False,True,True,False,False],[True,False,True,False,False,False,False,False,False,False,False,True],[False,True,False,False,True,False,False,True,True,False,True,False],[False,True,False,True,False,False,True,True,True,True,False,True],[True,False,True,True,False,False,False,False,True,True,True,False],[True,True,False,True,True,True,True,True,False,True,True,True],[True,False,False,False,True,False,False,False,False,True,True,False],[True,False,True,True,True,False,True,False,True,True,True,True],[False,False,False,True,True,True,False,True,False,False,True,True]],[[True,True,False,True,True,True,False,False,True,True,True,False],[True,True,True,False,False,False,True,True,True,False,False,False],[True,False,True,True,False,True,True,True,False,True,True,True],[False,True,False,False,False,True,False,True,False,True,True,True],[False,True,False,True,True,False,True,False,False,True,False,False],[False,True,False,False,False,True,False,False,False,False,False,False],[True,True,True,False,False,False,True,False,True,True,True,False],[True,True,True,True,False,True,True,False,False,True,False,False],[False,False,False,False,False,True,False,False,False,True,False,False],[False,True,True,True,False,False,False,True,True,True,False,True],[False,True,True,False,True,False,False,True,False,False,False,True],[True,False,True,True,False,True,False,False,False,True,True,False],[True,True,True,True,False,True,False,False,False,False,False,True],[False,False,True,False,True,True,True,False,True,False,False,True],[True,False,True,True,True,True,True,False,False,False,True,True],[True,False,True,False,False,False,True,False,False,False,False,True]],[[True,False,False,True,False,False,False,False,False,False,True,True],[True,True,True,True,True,True,False,True,True,False,True,True],[False,False,True,False,True,True,False,False,True,False,True,False],[False,False,False,False,False,True,True,True,False,False,False,False],[True,True,True,False,True,False,True,True,False,False,True,True],[False,True,False,True,True,True,True,True,True,True,True,True],[True,False,False,True,True,True,True,False,False,False,True,True],[False,False,False,True,True,True,False,True,True,False,False,False],[False,False,False,True,True,True,True,False,False,True,False,True],[False,True,True,False,False,False,True,False,True,True,True,False],[True,False,True,False,False,True,False,False,True,False,False,True],[False,True,True,False,False,True,True,True,True,False,True,True],[True,True,True,False,False,True,False,True,True,True,True,True],[False,False,False,False,False,False,True,False,True,False,False,True],[False,True,False,True,False,False,False,True,True,True,True,True],[False,True,True,True,False,False,True,False,False,True,False,True]],[[True,True,True,False,False,False,True,False,True,False,True,True],[False,True,False,True,False,True,False,True,False,True,False,False],[False,True,True,False,False,True,True,True,True,True,True,True],[True,True,True,False,True,False,False,True,True,False,False,True],[False,False,False,False,False,True,True,False,False,False,False,True],[True,False,False,False,True,False,True,False,True,False,False,False],[False,False,True,True,True,True,True,True,True,True,True,True],[False,False,True,True,False,False,False,False,False,False,False,True],[False,False,True,True,False,True,True,True,False,False,False,True],[True,True,False,True,True,True,False,True,False,False,False,False],[False,False,False,False,True,True,True,True,True,False,True,True],[True,False,False,True,True,True,False,False,False,False,True,True],[False,False,True,False,False,True,False,False,False,True,False,True],[False,True,False,True,True,True,False,False,False,True,False,True],[False,False,True,False,True,True,False,True,True,True,True,True],[False,True,True,False,False,True,True,False,False,False,True,True]],[[True,False,True,True,True,True,False,True,False,False,True,True],[True,True,False,False,False,True,True,True,False,False,True,True],[True,True,True,True,True,True,False,False,True,True,False,False],[True,False,True,True,False,False,False,True,False,False,True,False],[True,False,True,True,False,True,False,True,False,False,False,True],[True,False,True,False,False,True,False,True,False,True,False,False],[True,False,False,True,False,True,False,True,False,True,False,False],[False,True,False,False,True,False,True,False,True,True,False,True],[False,False,False,False,True,False,True,False,False,True,False,False],[False,False,True,False,True,True,True,False,False,True,False,True],[True,False,True,False,True,True,True,True,True,True,False,False],[True,True,True,True,False,True,True,False,True,False,True,False],[False,False,False,False,True,True,False,False,True,True,True,False],[True,False,True,False,False,True,True,True,False,False,True,False],[True,False,True,False,True,False,False,True,False,True,True,True],[False,True,True,True,True,False,True,False,True,False,False,True]],[[False,True,False,False,True,True,True,False,False,False,False,True],[False,True,False,False,False,True,True,False,True,False,True,False],[True,False,False,False,False,False,True,False,False,True,True,True],[True,False,False,True,False,False,False,False,True,False,False,True],[True,True,True,False,True,False,False,False,False,False,False,True],[True,True,True,True,True,False,False,False,False,False,True,False],[True,True,False,False,True,False,False,False,True,True,True,True],[False,True,True,False,False,False,True,True,True,True,False,False],[True,False,False,False,True,True,False,False,False,True,False,True],[True,False,False,True,False,True,False,False,False,True,False,False],[True,False,True,True,True,True,True,False,False,False,False,True],[True,True,True,False,False,True,True,True,False,True,False,False],[False,False,False,True,False,False,True,True,False,True,False,True],[False,False,False,False,False,False,True,True,True,False,True,True],[False,True,True,False,False,True,False,True,False,False,False,False],[False,True,True,True,False,False,False,True,False,False,True,False]],[[True,True,True,False,True,True,False,True,False,True,True,False],[False,True,True,False,True,True,False,False,True,False,True,True],[False,True,False,False,False,False,False,True,True,True,True,False],[False,True,False,False,False,True,True,True,True,False,True,False],[False,False,False,True,False,True,False,False,True,True,False,True],[True,False,False,False,True,True,False,False,True,False,False,True],[False,True,False,True,False,False,True,False,False,False,True,False],[True,True,False,False,False,False,True,True,False,True,True,True],[True,False,True,False,False,False,True,False,True,False,True,True],[False,True,True,False,True,False,False,False,False,False,True,False],[False,False,False,False,False,True,True,True,True,True,True,False],[True,False,False,False,False,False,False,False,True,True,False,False],[False,False,False,False,False,True,False,False,False,False,False,False],[False,False,True,True,True,False,True,False,False,False,False,True],[False,False,True,True,False,False,True,False,False,True,False,True],[True,False,True,True,True,False,True,True,False,False,False,True]]], dtype = "bool")#candidate|11073|(8, 16, 12)|const|bool
bop_11074 = relay.power(call_11027.astype('float32'), const_11073.astype('float32')) # shape=(8, 16, 12)
bop_11077 = relay.power(call_11028.astype('float32'), const_11073.astype('float32')) # shape=(8, 16, 12)
func_7523_call = mod.get_global_var('func_7523')
func_7524_call = mutated_mod.get_global_var('func_7524')
call_11081 = func_7523_call()
call_11082 = func_7523_call()
func_5831_call = mod.get_global_var('func_5831')
func_5835_call = mutated_mod.get_global_var('func_5835')
var_11086 = relay.var("var_11086", dtype = "int8", shape = (1560,))#candidate|11086|(1560,)|var|int8
var_11087 = relay.var("var_11087", dtype = "int8", shape = (3, 600))#candidate|11087|(3, 600)|var|int8
call_11085 = relay.TupleGetItem(func_5831_call(relay.reshape(var_11086.astype('int8'), [1560,]), relay.reshape(var_11087.astype('int8'), [1800,]), ), 1)
call_11088 = relay.TupleGetItem(func_5835_call(relay.reshape(var_11086.astype('int8'), [1560,]), relay.reshape(var_11087.astype('int8'), [1800,]), ), 1)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_11090 = func_4065_call()
call_11091 = func_4065_call()
output = relay.Tuple([bop_11074,call_11081,call_11085,var_11086,var_11087,call_11090,])
output2 = relay.Tuple([bop_11077,call_11082,call_11088,var_11086,var_11087,call_11091,])
func_11092 = relay.Function([var_11086,var_11087,], output)
mod['func_11092'] = func_11092
mod = relay.transform.InferType()(mod)
var_11093 = relay.var("var_11093", dtype = "int8", shape = (1560,))#candidate|11093|(1560,)|var|int8
var_11094 = relay.var("var_11094", dtype = "int8", shape = (3, 600))#candidate|11094|(3, 600)|var|int8
output = func_11092(var_11093,var_11094,)
func_11095 = relay.Function([var_11093,var_11094,], output)
mutated_mod['func_11095'] = func_11095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10362_call = mod.get_global_var('func_10362')
func_10363_call = mutated_mod.get_global_var('func_10363')
call_11097 = relay.TupleGetItem(func_10362_call(), 10)
call_11098 = relay.TupleGetItem(func_10363_call(), 10)
func_10131_call = mod.get_global_var('func_10131')
func_10133_call = mutated_mod.get_global_var('func_10133')
call_11105 = relay.TupleGetItem(func_10131_call(), 0)
call_11106 = relay.TupleGetItem(func_10133_call(), 0)
output = relay.Tuple([call_11097,call_11105,])
output2 = relay.Tuple([call_11098,call_11106,])
func_11113 = relay.Function([], output)
mod['func_11113'] = func_11113
mod = relay.transform.InferType()(mod)
mutated_mod['func_11113'] = func_11113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11113_call = mutated_mod.get_global_var('func_11113')
call_11114 = func_11113_call()
output = call_11114
func_11115 = relay.Function([], output)
mutated_mod['func_11115'] = func_11115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3814_call = mod.get_global_var('func_3814')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_11194 = relay.TupleGetItem(func_3814_call(), 0)
call_11195 = relay.TupleGetItem(func_3816_call(), 0)
func_9713_call = mod.get_global_var('func_9713')
func_9715_call = mutated_mod.get_global_var('func_9715')
const_11211 = relay.const([5.277600,-5.534632,-0.628875,-0.343548,1.353983,4.383822,6.127582,-0.193929,-9.060837,5.534920,-1.522213,-3.971488,3.504660,-5.988164,-8.849053,-5.298152,-4.867532,-8.016833,6.607516,-2.560028,-7.655828,8.300100,0.793809,-1.469522,6.586095,6.718502,-8.543165,-5.643317,-9.526929,-8.499640,7.304736,-1.448395,8.449361,-0.138254,-0.410082,-3.711402,-7.218613,-7.344262,5.422444,1.756696,-3.946969,0.899612,-2.527550,-4.066158,-8.394528,8.061690,-0.558883,0.385368,0.877382,-7.721774,-4.223964,-5.637755,-1.565259,-3.953648,-1.967771,-0.074868,2.559043,6.241549,-6.066486,-0.741649,-0.706334,-2.648753,8.484448,-5.335356,3.994486,-1.900810,1.507975,9.944712,8.397599,-8.069450,1.864851,2.212133,-5.372142,1.119638,-7.428682,3.506338,0.225137,0.013190,-7.045241,5.187705,-3.384657,5.061661,6.342084,5.853658,5.791692,-5.084217,7.774976,6.380312,-8.431972,-6.829186,-0.765630,4.703460,4.512419,-2.525794,-7.563567,3.955953,-1.099080,9.048300,0.738747,-9.787737,-8.251552,-5.218219,-7.683029,6.039729,-2.443589,-1.287811,9.426150,-2.052260,-7.355273,-1.671056,0.720082,-6.140539,0.194774,8.860371,-4.445324,6.557137,-3.649378,-1.050126,5.580434,5.803645,0.208853,-7.120060,4.621477,5.412535,4.823778,-9.287680,-8.446040,-0.374979,-6.333771,-3.242703,-8.982591,2.735818,9.891834,9.421514,2.624666,-4.421323,-8.301485,-4.120472,-1.550349,-8.528094,3.455226,-4.889054,3.807045,8.592645,-8.131906,-9.367480,5.840991,3.098482,-5.669974,0.578448,2.938645,-5.864269,-6.344526,3.034519,3.141355,6.940526,-3.280344,-5.146304,-9.063993,-1.834133,6.768515,9.914950,-9.427958,-3.094398,-8.836910,2.450416,8.210626,3.290295,-0.004524,-7.389996,-3.625812,-7.091311,2.167352,-7.318380,3.581729,-4.973966,-1.145318,4.446996,-8.112880,5.070013,-0.773665,-0.842260,-2.846279,8.782721,-8.508443,-4.562251,5.142833,-0.305601,5.112129,6.381651,6.936945,-6.762684,3.627453,-3.038221,9.948980,-5.551387,-1.718373,0.816632,9.854151,8.192497,2.571965,-8.910113,3.089630,9.185885,-9.510062,2.806393,3.644949,9.591114,0.426696,-0.921426,9.702596,-5.357332,-6.961717,-5.014749,7.273713,8.656379,-1.874600,9.059669,-2.169101,-6.867104,4.782949,-5.017910,2.554845,-0.155119,-5.155768,7.843215,7.491675,5.567626,-9.621287,7.422076,-7.016466,-2.478891,1.635096,-5.190794,-0.491531,-3.587694,-5.963189,-1.074154,-8.831473,-5.759982,-5.185209,-4.444566,-2.530170,3.382591,8.532347,-9.922320,2.449092,-9.348224,-9.367723,5.385990,-1.987565,4.083624,-6.281483,-9.680886,-0.220718,1.462024,1.632732,-1.164156,-1.752389,-9.877745,2.422922,6.623776,2.369560,9.688759,-9.402092,-8.009680,-9.401369,1.508359,-2.235791,1.339350,-9.737977,9.655338,-4.956252,2.464832,6.237721,-1.257496,-6.897415,2.054666,-7.432223,-7.205796,4.614743,2.177975,-8.257502,5.569588,-5.357480,8.381083,0.294574,-5.644949,-9.445097,-0.689418,5.114676,-3.541801,-2.775280,4.932208,-1.586548,2.917630,5.308259,4.698850,9.676414,-4.864061,8.495991,4.762504,-8.415976,-6.301317,2.345807,-9.499484,-3.750579,3.179855,-6.261808,1.465852,-1.522691,0.601355,1.691867,5.314523,7.205640,-9.604548,9.000309,7.957779,-0.469663,-5.121473,0.587409,-7.176819,-7.284227,-5.262754,7.500686,9.665099,1.823108,6.512261,-5.757603,8.433401,-3.726301,-7.517144,6.298342,2.285077,-3.005291,-6.732783,-3.159988,1.886382,-4.376700,9.089185,5.209636,8.126580,1.190936,2.219058,0.471683,5.851373,-6.771337,8.189362,-6.406741,1.301048,-8.171262,-8.505372,0.321923,7.611876,6.918621,0.869294,-8.009325,7.739698,2.549547,1.850746,-3.743483,-6.952827,-6.503769,-6.895977,-3.093759,3.185538,2.889659,9.658056,3.469493,-8.707658,7.536896,3.014261,-6.725453,-3.696480,9.437505,-0.625222,-4.130381,0.516683,-4.457603,1.420161,1.152834,-4.405794,-9.093355,0.371925,-3.621830,8.282218,8.281649,7.803314,5.703461,9.515190,0.414786,-6.692612,-8.667137,7.252960,-0.533733,2.086341,2.845298,-0.627285,0.547152,-9.240199,-3.663400,-1.717756,-3.098122,2.571876,1.057669,1.137696,7.853538,-5.557644,3.366140,-2.976406,2.882087,3.887980,0.155774,-1.825782,-8.998981,1.854538,-6.188803,-4.793737,0.270625,7.155890,4.346671,-7.009940,-2.995347,-3.510871,-4.051674,6.826700,8.136398,-5.021683,5.837877,7.253336,6.939333,-3.715028,-8.701888,5.927942,-8.594703,-6.753369,2.946694,-7.479623,-0.719931,7.074356,-5.056171,-5.577936,7.831663,-6.152049,7.735478,-6.720448,-4.592466,4.407083,-7.642424,2.870465,7.898310,-4.321660,-0.394720,-1.555818,7.246291,9.943896,8.955169,0.633339,-7.842161,3.395341,-0.102722,3.978485,-1.966610,6.750201,0.552821,2.176838,6.315309,7.699635,1.280449,-5.879695,5.960632,-0.660845,0.861775,8.505330,1.115357,2.120397,3.179500,6.485817,9.343947,-6.756218,1.949707,9.755899,1.385724,-0.170913,5.583237,8.880384,-4.668316,0.199038,-8.463912,4.936836,0.959239,4.712733,5.836594,-9.341121,2.756133,5.543580,-7.373408,8.669335,6.554588,-9.524118,-1.564358,1.708593,3.539726,-3.418810,-1.311599,-7.429562,7.830345,-8.250058,-8.377196,4.719271,6.031511,-8.217370,-1.127021,9.222448,2.949601,-3.671578,9.485540,-3.852283,-9.690806,-4.456680,-3.483707,-3.624504,-9.922705,7.271397,1.781154,1.205465,1.191556,-2.446729,0.466107,-6.553721,-3.936045,3.248606,-7.057589,-0.511181,-1.985632,1.786372,9.551229,-8.716916,-4.208284,-8.082128,8.011982,-5.204658,4.484989,-3.651779,-5.845101,6.295233,1.779135,0.529096,-4.992001,-2.173273,-6.408526,-8.309495,5.661328,-6.086579,-7.308064,2.892752,-2.673934,-8.923433,-1.411694,-6.047224,3.560040,8.080052,-3.977550,7.443705,1.521487,-7.498647,9.062001,2.763185,4.075881,1.030400,8.675517,2.075195,-2.534205,4.021738,-3.822994,-5.325378,-3.160064,-3.753935,-5.692414,4.050727,8.642267,7.969280,-0.593396,2.594145,-2.882931,0.065527,5.038294,1.558690,4.083424,5.274648,4.822522,6.094233,8.507608,-5.732898,1.546305,7.922735,3.180155,-9.838249,-6.452006,-6.178285,-0.687952,-9.909792,-2.054406,9.323525,-9.151663,-0.439676,-5.058227,0.803652,2.808860,4.212752,-3.327769,-8.359410,-7.894975,1.998785,-0.540718,8.300284,-1.287904,1.973098,-3.457897,-1.553081,6.433818,-3.416433,-2.816028,8.776592,9.628918,8.151858,-6.745198,-4.365738,-5.633465,1.619392,0.477419,5.574977,-9.168877,-5.866247,9.022610,5.713633,8.555549,1.050896,-8.706699,-0.183995,5.780385,3.686406,5.915455,-9.702309,2.719593,-8.399334,8.574443,-9.492579,-7.274247,-6.896828,5.571521,-9.150358,3.134560,4.843642,0.200010,8.429059,3.029940,-4.262367,-3.071374,-4.562085,-4.212905,-0.466320,-1.150556,4.651696,-8.339011,-6.828091,7.199367,-9.709909,-2.634411,-0.154724,5.811567,0.238364,-8.739036,3.388576,-7.094396,6.779592,6.736097,-9.379051,-8.405063,-4.071374,7.849838,3.525064,-7.476541,7.481913,3.500403,-7.586288,-8.388921,4.519009,4.250303,5.236330,-7.143385,-9.874808,0.620368,2.792334,-3.317666,-1.467948,-5.790853,-6.922657,5.438015,-1.661582,-9.387531,-4.409378,-6.869689,8.018848,-5.697489,1.162375,4.580889,-0.185333,2.243443,6.286092,-2.351478,5.553941,4.941774,0.995632,-9.837593,4.859453,-9.469195,5.115860,4.644313,-7.319771,7.484477,-1.619767,6.957281,4.925816,-4.944654,-2.902556,-4.255527,9.748965,5.461983,1.805390,-8.631722,-8.689725,-4.775981,0.717413,5.697636,6.765408,-6.991891,1.254153,4.420799,-4.210536,5.423697,-9.284613,-1.781222,4.873638,-9.869572,9.459516,3.032402,8.394424,7.892223,2.403818,-6.644048,-7.480043,-8.159849,-7.724227,-9.296116,4.788395,0.811515,-9.586795,-6.455175,5.122993,-0.459504,6.422958,8.651153,0.753467,-3.566003,0.846359,3.905093,7.621886,0.049911,2.489020,-9.393889,-3.873223,-6.480531,9.981257,-0.324129,1.261496,-7.379065,7.696879,0.299744,-0.160486,5.753900,-5.149263,6.861334,6.605519,9.021698,2.032991,6.722027,9.805348,-8.295449,-3.587463,-3.578911,0.395533,1.222606,-9.298582,2.561879,-5.125971,-8.132954,6.281922,-6.541302,-1.981149,-9.653588,1.094591,5.046865,6.534818,4.837822,2.237042,-5.662496,-6.372833,5.709433,-5.601308,-1.225583,7.886614,-2.715743,-4.880036,2.011742,-4.620158,-3.480611,-7.620390,1.750097,2.651127,3.416946,-2.810997,5.935169,9.378196,4.717424,1.113378,-1.591716,-8.001435,-2.015390,3.769746,7.812273,1.880135,5.596430,-1.654107,5.627904,-5.484263,-0.422286,-7.349712,0.446684,-1.613078,-6.252338,-2.383017,-7.503271,1.162488,-8.017538,2.750471,-4.374345,2.503013,-1.012842,-4.221253,-7.802544,-6.280675,6.801498,-8.944481,1.669975,1.719764,2.355333,-3.508821,-7.376040,-5.945324,4.840846,1.580522,-3.766420,3.507348,-7.785675,-4.894903,-1.459956,0.111738,-9.599199,2.322584,-4.730592,8.448986,-8.056042,7.512939,7.756815,5.663680,2.439629,-0.464069,-7.005067,-7.460679,-2.119156,9.597397,-8.752530,-6.173041,-5.614798,-3.684853,9.060561,-9.970793,4.099331,-1.981959,8.829599,6.999625,-9.502512,-1.944770,-0.239646,4.907651,-5.053203,5.375804,7.268182,4.764383,9.929410,-7.555562,1.020354,3.393893,2.021719,3.189296,7.972988,0.248047,-6.185832,-2.169123,8.110340,4.662496,-5.098140,-0.004482,0.834740,-1.248783,2.912219,9.141369,5.217797,8.224844,-2.767941,-5.313500,-4.339243,-2.265095,5.108554,1.730815,-5.791045,-6.561524,0.650498,4.853725,-7.050262,-8.035418,-5.085617,-6.482721,-0.654202,-1.924785,-9.795260,-7.703208,6.361441,-4.799939,-9.091784,7.036969,-0.556569,7.106948,-5.565974,-8.640243,-9.930168,-2.381234,-0.632919,2.208706,-9.676638,-3.635634,-7.167265,5.443116,7.452532,-6.088816,1.590190,-4.935550,-2.966899,-2.970721,-8.711698,0.955863,4.138322,-1.003393,9.344425,-8.126668,0.342125,-5.686524,0.255496,0.368497,3.520401,-0.736869,7.191831,1.712992,5.870040,-9.200424,-9.453704,-6.322711,3.694932,-9.720349,-2.388600,5.371420,8.178323,3.235673,3.374402,6.334160,7.467878,-4.211781,-7.019042,-7.674175,3.364123,-7.672464,-7.210122,3.488265,2.109997,-9.324815,-9.819355,8.174959,-2.271748,-6.124395,-9.402816,-1.657766,-6.033985,-3.397657,-2.318978,-0.455123,-0.694504,-0.968505,7.013664,-6.823461,8.559550,3.566887,-1.120041,3.495711,5.523732,7.718352,5.875812,9.330978,-3.806338,-6.167769,-0.748344,-6.148502,4.997197,-8.975156,-4.951511,0.059415,9.429960,5.000254,-3.881253,-5.067436,-5.475298,9.647693,-9.877782,9.870704,-7.574898,3.608840,-7.401494,3.582633,-2.456353,1.038556,8.098585,-0.751726,3.658701,-7.565372,-6.603418,1.474096,-0.748854,-8.463363,-3.158318,2.826831,-6.154960,2.735171,-6.120141,-7.245671,-1.042427,1.270239,4.204791,1.804562,3.081902,-0.161945,-9.004231,4.080040,-3.276826,1.455105,8.784191,7.940246,-1.036259,1.890339,-2.680879,8.132263,1.962596,-7.190015,7.287364,0.320044,7.359542,-5.140401,2.310431,6.766794,-7.681559,-6.424359,8.689489,4.695506,8.489020,7.830379,-2.486206,-2.322685,7.530440,-6.522041,-8.067221,-1.833119,0.353039,-3.948168,-5.223027,-1.462748,-8.194449,-1.891131,5.954668,9.647410,-1.763330,-7.087931,-4.542979,-5.131624,1.169455,-6.433474,-3.176043,6.402309,1.698582,1.435745,4.729574,-3.687306,-0.032846,-5.857355,-8.394023,-4.734327,-8.401740,-2.330238,-8.918261,-5.912661,2.715768,8.035750,3.843462,-6.845097,-4.919108,-1.625448,2.532186,-3.742093,-3.842412,8.767092,-6.010080,3.057536,-8.621746,2.120737,6.961587,-9.238704,-4.903099,-4.213900,7.593682,6.372670,-9.676206,1.026024,-6.723819,-3.324578,-4.135217,-0.301916,7.501632,2.175318,0.410392,-4.756456,0.630751,6.303551,1.369313,1.461092,-2.247909,-7.948927,7.475676,4.993369,1.656547,-5.123632,2.820406,6.367286,-6.790403,5.484605,0.535276,-3.629450,-8.883344,5.087611,-7.545181,-6.795854,3.698244,8.366214,2.010156,-3.283324,-1.027978,-8.607259,1.802446,7.520669,0.325581,3.495967,-5.423277,4.711078,-1.303074,-9.557852,5.555579,2.980089,-1.912498,3.964143,2.586902,-9.227639,-2.849953,-0.480537,-3.701933,-2.901005,-5.232946,8.837822,5.643337,6.710982,2.745236,-8.341769,7.069075,6.922085,6.710536,8.727004,-0.395118,-4.226668,-1.726071,6.644883,-2.454426,-7.392665,1.863798,-8.049669,-6.269309,-4.434314,6.449691,3.776811,1.618402,-6.341566,3.801710,2.605929,-7.396930,6.164032,-1.621490,1.236743,-6.699789,2.910956,8.436572,-6.711422,-2.619440,7.975077,-8.391998,-8.176900,7.215456,-6.146202,-9.931623,4.607593,4.754895,3.201000,2.409299,1.846830,8.595005,3.433547,-6.384176,-2.451600,0.152507,-9.956539,-5.219123,7.301047,-0.575006,2.456874,4.643943,6.226450,2.779525,9.945951,9.304045,-6.132638,2.306674,-9.447048,2.412102,-0.455483,-4.190120,-2.883224,9.530920,1.013649,9.391758,-4.437309,7.543641,-5.185046,4.079138,3.322912,-2.884945,9.411973,9.996493,7.962252,-8.690038,7.275922,-7.943724,-3.643439,3.527587,0.522920,-3.284181,-5.027275,2.348793,-1.987427,-0.071206,-6.828913,5.718964,-6.910717,5.115948,1.590158,-3.235192,-7.330210,8.577845,-6.298397,-3.494055,5.170103,-9.869367,-0.385155,-1.179955,-0.798956,-9.136882,7.625633,-2.921977,1.354550,3.863446,2.152649,8.061341,8.212372,-3.804671,-1.377666,2.765914,0.426123,1.578110,-4.723270,-4.760330,-4.179263,0.668459,-6.118380,9.064150,9.607272,9.563432,-7.104196,-8.014312,1.665271,-8.285056,-0.711772,3.813027,9.425960,2.656727,6.521630,-0.584688,1.767329,7.068732,0.236604,4.293867,-4.752096,5.666438,9.215363,-8.591399,5.890140,-2.778349,-5.779043,2.250801,-8.572632,8.793487,2.388105,7.822992,9.288401,-2.968825,-6.519315,6.839599,-0.220945,1.957482,6.841313,-1.536959,-1.439603,-0.885641,5.644207,-9.345270,-7.791699,8.275141,1.997567,-3.883278,1.905604,1.524164,-8.416231,-0.168278,-4.497458,9.669119,2.877759,-5.532896,-8.950847,2.224148,-0.896506,-9.464646,8.029948,-7.025057,-2.907284,-5.604400,-4.770997,2.115155,-2.365581,6.360205,-4.665808,-3.854763,2.808264,5.632892,0.432329,1.497489,6.546517,6.493956,9.503433,2.504168,-3.001764,3.186986,-3.414820,-4.290881,2.520286,8.973386,-2.236902,8.481810,-2.026270,9.215502,3.634746,2.135236,-1.290829,-0.252180,7.435653,-7.932416,3.311665,-2.663392,-9.068619,-2.365094,-3.145252,2.488190,-3.920234,-8.312810,-8.586802,-5.896703,-6.954200,-8.022809,-5.872950,-2.001274,-4.052477,-1.005480,1.535472,1.941784,6.031429,3.868360,4.228665,-0.768421,6.359043,-1.544061,-5.047997,-7.752532,9.061597,-0.093531,7.334490,9.456577,2.948466,5.403767,-4.951738,-7.584754,-8.256857,4.329479,2.940885,2.956882,5.509950,-4.078244,2.188737,-4.702185,6.232112,-7.160471,-9.148416,-4.222256,3.791405,-9.508668,1.977565,7.525094,-6.053168,6.295328,-8.462433,-5.182544,3.811721,-0.866668,6.065487,3.493832,2.911183,1.876053,2.341085,2.811475,1.557267,-3.463147,-8.406036,8.016976,-1.444895,-8.057750,5.593064,-7.697402,1.728999,9.167457,-0.530686,9.568805,1.774727,4.598210,2.513426,9.461986,-2.310683,0.870236,-6.741105,2.407467,5.058809,0.359939,-3.305554,8.865650,-4.686199,5.635298,1.065784,-1.063526,7.350480,1.469759,-3.150750,-6.030473,-5.015352,-3.578455,-2.745730,-1.128431,0.120058,-7.505147,8.193648,-4.758754,7.583579,-5.922190,-8.269036,5.997201,-7.497894,-7.422573,9.276299,7.129650,-9.645215,-7.411032,3.353711,0.292004,7.844711,2.228217,9.754726,-7.055036,0.556337,-8.885104,-5.457586,2.849183,-7.443826,1.723735,-5.146706,-4.908948,-1.462154,7.158837,1.203401,9.943666,4.293603,2.204447,-6.451406,4.870299,5.874612,4.083361,7.487319,-8.058343,0.440609,3.893453,7.498016,-5.350961,5.522942,4.455520,-5.160572,0.315319,5.217448,9.800221,-7.470601,4.993562,-1.349637,3.270722,-6.364629,1.138765,-5.852634,2.594990,-3.419494,2.095498,-3.552992,-5.621673,6.049478,-3.961324,7.607556,-7.513385,-8.873144,6.443333,7.411968,-7.068207,-0.869120,4.165888,-0.894512,-6.780177,-8.705436,-9.054813,1.714401,-6.645999,-1.681370,0.930433,-4.440194,-9.811180,-1.701851,8.658947,-5.614577,5.130332,6.894086,4.895441,0.718837,3.141474,-6.944223,-8.647593,-8.133388,-8.492773,6.746757,-8.255162,-9.255654,-1.381681,-9.373536,-4.427912,4.828063,-5.087730,-0.580317,4.535622,8.888290,7.968288,-9.745671,4.896790,-3.731693,-8.158267,-4.261371,2.105935,6.522870,4.898241,1.981663,-0.678103,5.915068,-8.333520,0.818021,1.368967,-5.597853,-2.674385,4.880967,8.885375,1.439243,5.650836,1.315079,-2.690364,9.465672,-9.838951,9.083731,4.000318,4.638838,-0.512027,3.588558,-1.486898,5.703488,5.563367,-9.521863,-8.369301,-5.512368,5.662069,9.689641,-6.068374,4.264434,1.250482,0.141282,4.450083,-8.825292,0.762117,-7.832174,3.401207,-5.672920,-9.908827,-9.690216,4.332147,-6.180760,-9.750359,-9.839685,-4.550710,5.210099,5.922108,3.317774,-8.724431,-9.480140,6.349054,1.313306,-1.939018,9.721834,-7.402761,-2.352818,-8.012707,6.357498,-9.351233,5.114963,6.926189,-2.902723,-7.481545,-9.876486,-6.197470,-9.511109,0.686323,-8.432448,-5.899063,-7.035158,9.650730,-5.788108,3.249601,-0.225750,8.113651,6.777760,9.581164,0.868141,5.251053,-5.641302,6.834420,8.096706,-4.114624,-9.182980,-1.862564,1.788705,4.688830,5.119560,7.325268,-3.916653,-3.144394,-7.847275,-5.413708,7.469769,3.412071,9.032461,-7.374032,5.903627,-1.933814,3.089061,-8.512434,6.273611,-7.982577,-1.664758,-1.049539,3.915527,-9.586734,-0.422878,6.227246,-3.563675,4.483370,0.471793,9.842004,-0.933284,2.873458,-3.899983,1.954947,8.822228,-3.545561,0.512315,8.669855,0.438283,-2.691343,-6.429021,4.785700,-5.098544,-5.348497,9.413282,-3.157823,2.461820,7.583040,9.965392,7.458843,1.545663,7.845094,0.067892,6.097451,-9.594387,-5.989166,9.284522,-7.670669,8.023563,-4.988917,-7.351289,-0.476921,-0.008089,6.610706,-6.990154,-6.035522,-2.553034,9.540612,-5.863013,3.353746,-7.027556,3.406595,1.549323,-4.705267,-3.277483,1.596192,8.664235,2.263020,-7.095597,-1.474500,0.814467,-8.665817,-5.499304,1.207619,-5.219662,5.569107,7.505178,-7.912608,-4.398018,5.983614,6.006788,1.050650,-3.383758,-0.335062,3.079609,-1.391074,-9.584762,3.598467,-4.957300,8.974886,8.465457,9.128402,-7.177760,5.690993,-0.021953,4.286964,-0.591258,3.368538,6.102323,6.145522,-6.411982,-8.652973,-1.208389,0.039826,-0.766047,8.631259,2.574334,-2.416029,-4.385736,6.704679,-7.358458,6.579772,6.882852,-7.657266,-9.659037,-5.482665,7.627887,1.306673,-2.687586,-1.038968,-2.957683,-0.262274,-0.975408,8.127557,-0.228890,-6.635086,1.037703,5.017657,-1.711770,-3.531524,3.324440,1.927610,6.258799,-2.897454,5.700654,-1.472076,-3.079491,0.584088,-8.867324,-4.036492,4.005457,9.242783,-9.533926,-4.688034,-5.247217,5.496800,1.530506,-3.253682,-5.207317,-4.436116,1.503792,1.832734,8.634710,1.504524,1.658533,-0.683069,-0.868258,0.064078,1.844804,5.049786,-8.443376,9.206041,7.459821,-5.259449,4.571778,2.182313,-5.835233,-9.066703,5.721167,9.099594,8.410194,-6.004261,4.044440,-1.856094,1.539097,8.440478,2.792902,4.249408,-9.163542,-5.365765,-1.537170,0.840275,-2.324345,-0.615651,3.177754,-2.266880,4.731174,-4.840397,-2.699827,9.841006,-5.489720,-6.911384,-9.289242,-1.749916,8.433756,-0.614076,-3.160684,-0.278693,0.802883,-5.506162,-2.589742,-1.514215,4.243056,4.331320,7.460695,3.724661,0.841171,4.946837,6.969139,-1.109659,-3.013733,-5.856748,-8.696655,6.196549,5.441961,-9.164570,-1.253076,-4.734154,9.540737,-7.422193,-5.580744,-9.472879,2.601602,0.892568,9.242274,6.602433,-0.121163,-0.094102,8.363474,9.409754,-5.656394,-5.534674,-0.836432,-5.048119,-8.017135,-9.398739,4.081534,-9.075482,7.617532,5.459172,-9.468891,-6.595818,7.414815,8.300229,7.665166,0.485692,9.199337,-2.645988,-5.348334,7.762640,9.249703,-1.798117,5.876477,0.454767,-1.482169,2.759470,-7.570141,-4.536507,3.882981,-5.950730,-0.415648,-0.698301,2.404636,6.506023,5.283135,0.248125,-6.309516,3.315612,-0.822440,-7.313903,-8.617273,3.129714,-5.846038,-4.073125,-1.301113,-9.974146,-9.362216,-0.729238,9.928446,-3.589579,-3.980942,-1.148895,6.735069,-3.114622,-2.094173,-8.566329,7.587075,6.208572,9.146171,8.473613,-9.800642,-1.114966,-0.570570,7.857748,-5.960662,-2.193892,8.599749,-7.611249,9.200206,-6.137357,7.190934,-5.556142,6.292622,-7.558788,3.842145,-2.786967,2.173514,-9.329657,5.683166,-7.362411,3.692050,-7.727260,1.065402,4.447578,-9.327727,-7.047057,9.325136,-0.346795,7.652583,0.646489,-2.236031,-8.581161,1.033934,7.444374,-4.247339,-8.581195,-9.364254,-7.234226,2.053536,-0.177247,-8.482781,-2.808436,7.507056,-2.579390,8.099038,6.521714,0.210673,-6.808399,6.666938,4.188167,0.276372,7.397859,-9.584534,4.215095,-4.087573,1.170224,-0.799524,-3.221707,-4.027296,-7.749680,-7.782373,9.968038,-2.791636,-1.308530,5.263713,1.933251,-5.171393,9.862903,4.602121,-9.329085,-3.145122,-1.369005,9.357981,4.028795,3.269732,-7.437031,9.667478,2.614966,5.970478,1.594450,6.497649,6.657863,-8.153603,-7.260932,6.974511,5.184112,1.237748,-6.220677,-3.274313,-3.799227,-4.716698,0.750212,5.413682,1.918068,8.411996,9.732431,0.712724,-8.678717,5.635390,4.182862,7.498413,9.118232,-5.491954,-5.871549,3.045588,-9.502290,8.170022,9.726234,-0.147275,2.055617,-6.179055,-9.477399,4.308501,2.651408,-7.482028,6.240804,0.285606,-1.071747,-3.295316,-5.582148,8.110841,9.706619,-2.322175,3.430470,9.700396,-7.175837,-2.621570,-8.968904,5.367058,-8.285345,-5.296201,-1.654873,-8.497732,-8.237897,0.258393,-4.015101,9.619091,2.245931,8.711104,4.008972,5.794147,-8.518551,-0.649724,8.990008,-8.434685,4.319253,5.636247,-4.507369,-1.808644,-0.299073,7.550032,5.649425,0.793443,-4.549644,5.053271,7.253579,-3.510735,-1.671671,-5.689127,-6.825537,-9.725866,-0.077700,9.183909,6.963091,1.728641,8.139478,9.337218,5.793978,5.984111,8.991229,2.551173,3.835803,-6.526031,1.085859,4.464242,6.929892,1.106879,1.235164,-5.753652,3.343573,5.059703,-2.630298,2.012301,3.270687,2.565663,4.997247,7.536067,-3.037250,1.868343,1.552383,-1.667524,-4.235883,-1.568342,-2.686560,-3.635010,-5.884150,7.147432,-9.694157,-5.159641,6.781203,-9.557255,4.526074,-1.695305,6.033276,2.680563,-3.214173,1.838706,4.223162,9.987068,-9.365427,4.130647,8.802434,9.041606,4.700467,3.273169,-8.294847,-8.626821,9.513102,5.725970,-1.590691,8.160602,-3.513442,5.322447,-5.095094,-1.231671,-6.614790,1.897456,-3.177967,-5.227874,0.958954,-1.522582,8.482715,3.441809,5.242736,-9.134661,3.453804,9.206089,-1.105659,3.690131,9.302739,-9.638934,-2.100515,8.933664,-3.759443,-0.406729,7.959714,3.733686,8.924823,7.142881,-7.611559,-7.422595,-0.691238,6.120602,-4.981747,7.756464,-9.586452,-9.965594,-4.610297,3.128403,3.154126,-1.282985,7.190609,5.981447,-8.319948,1.598416,-5.303738,-3.978297,1.084200,-5.849868,-9.575208,2.044403,9.868020,3.284534,2.254704,-1.412975,9.082595,3.469692,4.532696,1.253141,-7.473078,-0.479239,0.915940,0.232900,-8.076349,-8.439893,7.607997,-2.881408,8.187037,-8.509305,-4.378832,8.374665,4.190620,-2.926204,-2.813200,-9.645419,3.887551,7.356683,3.472570,4.652918,-3.963571,0.403297,-0.088192,-2.915324,7.337455,-2.288221,-7.505447,9.746039,2.584002,-6.968529,-2.802242,-5.112209,5.413300,-7.945616,-0.152383,-0.699321,8.731457,-7.541125,8.634174,-6.085691,-3.969194,2.735397,-9.914185,-6.885614,-7.588527,1.766165,-2.420530,-2.133228,-9.804371,-0.286917,3.442355,0.677323,-0.147697,-2.939997,5.859498,3.189761,9.668282,-2.054396,6.594894,7.428503,2.214457,-8.665917,-5.405563,4.159419,5.320261,9.049807,-1.169668,-1.756210,6.774690,9.010342,5.933890,-7.283207,3.072041,-9.848300,8.781573,-6.626433,6.827668,-6.606086,-3.960834,-6.926206,-7.249159,-6.566729,-6.315172,4.920436,9.936454,-1.403622,0.825832,2.583792,0.817096,-6.743145,-2.130035,1.410583,9.447280,2.272979,4.292628,-6.986379,-0.766045,4.896279,3.590150,-9.735407,8.508545,8.731004,7.582272,3.833055,-7.847002,2.913498,-8.452737,-8.816202,0.368513,7.087042,7.204078,-2.991653,-3.609421,2.983700,-6.114900,-1.014510,-3.878457,1.580057,9.354506,0.244502,-1.532151,-7.411200,6.893650,-2.091610,-2.980966,-7.598187,7.733130,6.631789,-0.956392,8.778117,-0.006374,-2.835173,1.784924,-3.847347,-4.523141,3.197040,3.503757,8.562848,-7.441545,9.983336,-7.510883,7.413152,-4.018006,1.065566,1.281494,1.179433,9.865567,-2.440524,3.450535,9.935595,-8.152462,-8.434762,-5.075871,6.429674,-4.305706,7.979496,-1.084699,-0.125963,-0.890572,4.817208,4.285908,0.917585,-4.610813,6.425986,1.434026,5.367539,6.361364,7.596773,7.127536,7.457513,0.726316,-0.441989,0.472168,-6.423368,6.910737,6.621772,-8.518793,8.016640,-7.546631,7.134826,0.170798,-1.708470,-8.544079,-6.637996,-7.223569,3.570251,-8.274494,9.636654,3.546556,5.984564,0.197306,4.293856,-8.315065,-4.022084,2.134472,-1.051043,-0.368276,-1.060628,-3.363430,-7.697028,-6.771186,-5.613757,-9.019054,-8.386756,4.867647,-3.615150,-9.265555,-2.261892,-0.044561,8.123952,-2.825714,-9.517938,-9.680296,-5.886825,0.076759,2.489526,-3.361754,-0.975060,0.173775,-0.690297,4.156773,6.292455,-3.744491,-7.326058,-3.870209,3.643235,4.036043,9.798761,-4.521634,-0.624995,9.636003,9.071893,1.367597,-8.433243,-4.338241,4.517887,8.012976,3.448019,-3.990815,-3.181701,9.273026,-7.389626,6.132535,8.373731,9.954593,0.290609,2.718081,-8.657469,-4.584010,-2.229533,-3.565988,-0.033804,-6.354456], dtype = "float64")#candidate|11211|(2535,)|const|float64
call_11210 = relay.TupleGetItem(func_9713_call(relay.reshape(const_11211.astype('float64'), [13, 15, 13])), 2)
call_11212 = relay.TupleGetItem(func_9715_call(relay.reshape(const_11211.astype('float64'), [13, 15, 13])), 2)
var_11218 = relay.var("var_11218", dtype = "int16", shape = (11, 7, 6))#candidate|11218|(11, 7, 6)|var|int16
bop_11219 = relay.bitwise_xor(call_11210.astype('int64'), relay.reshape(var_11218.astype('int64'), relay.shape_of(call_11210))) # shape=(11, 7, 6)
bop_11222 = relay.bitwise_xor(call_11212.astype('int64'), relay.reshape(var_11218.astype('int64'), relay.shape_of(call_11212))) # shape=(11, 7, 6)
func_11025_call = mod.get_global_var('func_11025')
func_11026_call = mutated_mod.get_global_var('func_11026')
call_11225 = func_11025_call()
call_11226 = func_11025_call()
var_11231 = relay.var("var_11231", dtype = "float64", shape = (15, 16, 12))#candidate|11231|(15, 16, 12)|var|float64
bop_11232 = relay.floor_divide(call_11194.astype('float32'), var_11231.astype('float32')) # shape=(15, 16, 12)
bop_11235 = relay.floor_divide(call_11195.astype('float32'), var_11231.astype('float32')) # shape=(15, 16, 12)
output = relay.Tuple([const_11211,bop_11219,call_11225,bop_11232,])
output2 = relay.Tuple([const_11211,bop_11222,call_11226,bop_11235,])
F = relay.Function([var_11218,var_11231,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_11218,var_11231,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

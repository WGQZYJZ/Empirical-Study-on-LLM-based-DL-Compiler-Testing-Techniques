==========mod==========
#[version = "0.0.5"]
def @func_8188(%var_8173: Tensor[(768, 2), float32], %var_8176: Tensor[(2, 192), float64]) -> (Tensor[(1, 16, 12), float64], int32, int32, Tensor[(768, 2), float32], Tensor[(2, 16, 12), int32], Tensor[(2, 192), float32], Tensor[(1, 16, 12), float64]) {
  %0 = cast(-3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1 = cast(%var_8173, dtype="float32") /* ty=Tensor[(768, 2), float32] */;
  %2 = reshape(%0, newshape=[]) /* ty=int32 */;
  %3 = reshape(%1, newshape=[1536]) /* ty=Tensor[(1536), float32] */;
  %4 = @func_8153(%2, %3) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(512), int16], int32, Tensor[(13, 16, 12), uint32], int32, Tensor[(1920), float64], Tensor[(1536), float32]) */;
  %5 = cast(%var_8176, dtype="float64") /* ty=Tensor[(2, 192), float64] */;
  %6 = reshape(%5, newshape=[2, 16, 12]) /* ty=Tensor[(2, 16, 12), float64] */;
  %7 = @func_4865(%6) /* ty=(Tensor[(13, 16, 12), bool], Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), int32]) */;
  %8 = cast(%var_8176, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %9 = @func_7974() /* ty=Tensor[(1, 16, 12), float64] */;
  %10 = %4.5;
  %11 = %7.2;
  %12 = tan(%8) /* ty=Tensor[(2, 192), float32] */;
  %13 = @func_7974() /* ty=Tensor[(1, 16, 12), float64] */;
  (%9, %10, -3 /* ty=int32 */, %var_8173, %11, %12, %13)
}

def @func_10832(%var_10827: Tensor[(15, 16, 12), float64]) -> (Tensor[(168), int8], Tensor[(550), uint16], Tensor[(15, 16, 12), float64]) {
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(550), uint16] */, dtype="uint16") /* ty=Tensor[(550), uint16] */;
  %15 = reshape(%14, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), uint16] */;
  %16 = @func_5133(%15) /* ty=(Tensor[(11, 10, 5), uint16], Tensor[(168), int8], int32, Tensor[(16), int32], Tensor[(2496), uint32]) */;
  %17 = @func_5463() /* ty=Tensor[(1, 16, 12), float64] */;
  %18 = cast(%17, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %19 = cast(%var_10827, dtype="float64") /* ty=Tensor[(15, 16, 12), float64] */;
  %20 = %16.1;
  %21 = divide(%18, %19) /* ty=Tensor[(15, 16, 12), float64] */;
  (%20, meta[relay.Constant][0] /* ty=Tensor[(550), uint16] */, %21)
}

def @func_10106(%var_10091: bool, %var_10092: Tensor[(16, 16, 10), bool], %var_10101: Tensor[(384), float64]) -> (Tensor[(16, 16, 10), bool], Tensor[(2, 16, 12), uint32], Tensor[(384), float64]) {
  %22 = cast(%var_10091, dtype="bool") /* ty=bool */;
  %23 = cast(%var_10092, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %24 = cast(%var_10101, dtype="float64") /* ty=Tensor[(384), float64] */;
  %25 = cast(%var_10101, dtype="float64") /* ty=Tensor[(384), float64] */;
  %26 = reshape(%24, newshape=[2, 16, 12]) /* ty=Tensor[(2, 16, 12), float64] */;
  %27 = reshape(%25, newshape=[2, 16, 12]) /* ty=Tensor[(2, 16, 12), float64] */;
  %28 = @func_5563(%26, %27) /* ty=(Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), uint32], Tensor[(2, 16, 12), uint32], Tensor[(1, 16, 12), float64], Tensor[(2, 16, 12), float64]) */;
  %29 = logical_or(%22, %23) /* ty=Tensor[(16, 16, 10), bool] */;
  %30 = %28.2;
  (%29, %30, %var_10101)
}

def @func_8231() -> (Tensor[(13, 16, 12), float64], int32, Tensor[(24, 80), float64], Tensor[(1536), float32], Tensor[(11, 7, 6), int16]) {
  %31 = @func_7702() /* ty=(Tensor[(13, 16, 12), float64],) */;
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(24, 80), float64] */, dtype="float64") /* ty=Tensor[(24, 80), float64] */;
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(1536), float32] */, dtype="float32") /* ty=Tensor[(1536), float32] */;
  %34 = reshape(%32, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %35 = reshape(%33, newshape=[1536]) /* ty=Tensor[(1536), float32] */;
  %36 = @func_4791(%34, %35) /* ty=(Tensor[(10, 16, 12), int16], int32, Tensor[(1536), float32], int32) */;
  %37 = @func_4236() /* ty=(Tensor[(11, 7, 6), int16],) */;
  %38 = %31.0;
  %39 = %36.1;
  %40 = %37.0;
  (%38, %39, meta[relay.Constant][1] /* ty=Tensor[(24, 80), float64] */, meta[relay.Constant][2] /* ty=Tensor[(1536), float32] */, %40)
}

def @func_8643(%var_8602: Tensor[(10, 6, 11), float32]) -> (Tensor[(10, 6, 11), float32], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) {
  %41 = cast(%var_8602, dtype="float32") /* ty=Tensor[(10, 6, 11), float32] */;
  %42 = cast(meta[relay.Constant][3] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %43 = cast(meta[relay.Constant][3] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %44 = reshape(%42, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %45 = reshape(%43, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %46 = @func_7924(%44, %45) /* ty=(Tensor[(3, 10, 11), float32], Tensor[(1, 16, 12), float64]) */;
  %47 = cosh(%41) /* ty=Tensor[(10, 6, 11), float32] */;
  %48 = %46.0;
  (%47, %48, meta[relay.Constant][3] /* ty=Tensor[(330), float32] */)
}

def @func_10423() -> (Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), float32]) {
  %49 = @func_9483() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %50 = %49.0;
  %51 = @func_8006() /* ty=Tensor[(11, 7, 6), float32] */;
  (%50, %51)
}

def @func_8331() -> Tensor[(132), bool] {
  @func_5840() /* ty=Tensor[(132), bool] */
}

def @func_6974() -> Tensor[(13, 16, 12), float64] {
  %52 = @func_4209() /* ty=Tensor[(13, 16, 12), uint32] */;
  %53 = cast(%52, dtype="float64") /* ty=Tensor[(13, 16, 12), float64] */;
  sigmoid(%53) /* ty=Tensor[(13, 16, 12), float64] */
}

def @func_6421() -> (Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) {
  %54 = @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */;
  %55 = @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */;
  %56 = @func_4816() /* ty=(Tensor[(13, 16, 12), uint32],) */;
  %57 = @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */;
  %58 = %54.0;
  %59 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %60 = %55.1;
  %61 = %56.0;
  %62 = %57.1;
  (%58, %59, %60, %61, %62)
}

def @func_3754() -> Tensor[(1, 16, 12), float64] {
  %63 = @func_3719() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %63.0
}

def @func_9483() -> (Tensor[(1, 16, 12), float64],) {
  %64 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %65 = %64.1;
  (%65,)
}

def @func_6828() -> Tensor[(1, 16, 12), float64] {
  @func_3754() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_5831(%var_5770: Tensor[(1560), int8], %var_5796: Tensor[(1800), int8]) -> (Tensor[(13, 16, 12), uint32], Tensor[(15, 13, 8), float64], Tensor[(1560), int8], Tensor[(11, 7, 6), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) {
  %66 = cast(%var_5770, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %67 = cast(%var_5770, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %68 = reshape(%66, newshape=[15, 13, 8]) /* ty=Tensor[(15, 13, 8), int8] */;
  %69 = reshape(%67, newshape=[15, 13, 8]) /* ty=Tensor[(15, 13, 8), int8] */;
  %70 = @func_3983(%68, %69) /* ty=(Tensor[(15, 13, 8), int8], Tensor[(15, 13, 8), float64]) */;
  %71 = @func_5037() /* ty=Tensor[(11, 7, 6), int16] */;
  %72 = cast(%71, dtype="float64") /* ty=Tensor[(11, 7, 6), float64] */;
  %73 = cast(%var_5796, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %74 = cast(%var_5796, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %75 = reshape(%73, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
  %76 = reshape(%74, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
  %77 = @func_4209() /* ty=Tensor[(13, 16, 12), uint32] */;
  %78 = %70.1;
  %79 = cosh(%72) /* ty=Tensor[(11, 7, 6), float64] */;
  %80 = @func_3654(%75, %76) /* ty=Tensor[(8, 15, 15), uint8] */;
  (%77, %78, %var_5770, %79, %80, %var_5796)
}

def @func_5463() -> Tensor[(1, 16, 12), float64] {
  @func_3835() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_7358(%var_7324: Tensor[(1800), int8]) -> (Tensor[(11, 7, 6), float32], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8], Tensor[(1, 16, 12), float64]) {
  %81 = @func_6579() /* ty=(Tensor[(11, 7, 6), int16],) */;
  %82 = %81.0;
  %83 = cast(%82, dtype="float32") /* ty=Tensor[(11, 7, 6), float32] */;
  %84 = cast(%var_7324, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %85 = cast(%var_7324, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %86 = reshape(%84, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
  %87 = reshape(%85, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
  %88 = @func_5613() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %89 = sigmoid(%83) /* ty=Tensor[(11, 7, 6), float32] */;
  %90 = @func_3654(%86, %87) /* ty=Tensor[(8, 15, 15), uint8] */;
  %91 = %88.0;
  (%89, %90, %var_7324, %91)
}

def @func_6429(%var_6423: Tensor[(4, 8, 8), float32], %var_6424: Tensor[(4, 8, 8), float32]) -> Tensor[(4, 8, 8), float32] {
  %92 = cast(%var_6424, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %93 = shape_of(%var_6423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%var_6423, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  subtract(%94, %95) /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_9227() -> Tensor[(1, 16, 12), float32] {
  %96 = @func_6631() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(13, 16, 12), uint32]) */;
  %96.0
}

def @func_9420() -> Tensor[(1, 16, 12), float64] {
  @func_6828() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_9111() -> (Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float32]) {
  %97 = @func_6631() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(13, 16, 12), uint32]) */;
  %98 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
  %99 = %97.0;
  (%98, %99)
}

def @func_10955(%var_10946: Tensor[(1920), float64], %var_10947: Tensor[(1536), float32]) -> (Tensor[(?, 16, 12), bool], int32, Tensor[(1920), float64], Tensor[(1536), float32]) {
  %100 = @func_10131() /* ty=(Tensor[(?, 16, 12), bool],) */;
  %101 = cast(%var_10946, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %102 = cast(%var_10947, dtype="float32") /* ty=Tensor[(1536), float32] */;
  %103 = reshape(%101, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %104 = reshape(%102, newshape=[1536]) /* ty=Tensor[(1536), float32] */;
  %105 = @func_4791(%103, %104) /* ty=(Tensor[(10, 16, 12), int16], int32, Tensor[(1536), float32], int32) */;
  %106 = %100.0;
  %107 = %105.3;
  (%106, %107, %var_10946, %var_10947)
}

def @func_8006() -> Tensor[(11, 7, 6), float32] {
  %108 = @func_6764() /* ty=(Tensor[(11, 7, 6), float32], Tensor[(13, 16, 12), uint32], Tensor[(4, 16, 12), float64], Tensor[(1, 16, 12), float64]) */;
  %108.0
}

def @func_6579() -> (Tensor[(11, 7, 6), int16],) {
  %109 = @func_5037() /* ty=Tensor[(11, 7, 6), int16] */;
  (%109,)
}

def @func_4164(%var_4134: Tensor[(16, 2, 16), int16], %var_4135: Tensor[(16, 2, 16), int16], %var_4155: Tensor[(16, 2, 16), float32]) -> (Tensor[(16, 2, 16), int16], Tensor[(16, 2, 16), float64], Tensor[(16, 2, 16), int32]) {
  %110 = cast(%var_4135, dtype="int16") /* ty=Tensor[(16, 2, 16), int16] */;
  %111 = shape_of(%var_4134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%var_4134, dtype="int16") /* ty=Tensor[(16, 2, 16), int16] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %114 = cast(%var_4135, dtype="float32") /* ty=Tensor[(16, 2, 16), float32] */;
  %115 = acos(%114) /* ty=Tensor[(16, 2, 16), float32] */;
  %116 = cast(%115, dtype="float64") /* ty=Tensor[(16, 2, 16), float64] */;
  %117 = cast(%var_4155, dtype="int32") /* ty=Tensor[(16, 2, 16), int32] */;
  %118 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%115, dtype="int32") /* ty=Tensor[(16, 2, 16), int32] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %121 = bitwise_or(%112, %113) /* ty=Tensor[(16, 2, 16), int16] */;
  %122 = asinh(%116) /* ty=Tensor[(16, 2, 16), float64] */;
  %123 = right_shift(%119, %120) /* ty=Tensor[(16, 2, 16), int32] */;
  (%121, %122, %123)
}

def @func_9601() -> (Tensor[(132), bool], Tensor[(1, 16, 12), float64]) {
  %124 = @func_7267() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %125 = @func_8331() /* ty=Tensor[(132), bool] */;
  %126 = %124.0;
  (%125, %126)
}

def @func_4816() -> (Tensor[(13, 16, 12), uint32],) {
  %127 = @func_4209() /* ty=Tensor[(13, 16, 12), uint32] */;
  (%127,)
}

def @func_7635() -> Tensor[(11, 7, 6), int16] {
  %128 = @func_6579() /* ty=(Tensor[(11, 7, 6), int16],) */;
  %128.0
}

def @func_10887() -> (Tensor[(12, 8, 3), bool],) {
  %129 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 8, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 8, 3), float32] */;
  %130 = asinh(%129) /* ty=Tensor[(12, 8, 3), float32] */;
  %131 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 8, 3), float32] */, dtype="uint16") /* ty=Tensor[(12, 8, 3), uint16] */;
  %132 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%130, dtype="uint16") /* ty=Tensor[(12, 8, 3), uint16] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %135 = bitwise_xor(%133, %134) /* ty=Tensor[(12, 8, 3), uint16] */;
  %136 = cast(%135, dtype="bool") /* ty=Tensor[(12, 8, 3), bool] */;
  %137 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%130, dtype="bool") /* ty=Tensor[(12, 8, 3), bool] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %140 = less(%138, %139) /* ty=Tensor[(12, 8, 3), bool] */;
  (%140,)
}

def @func_6764() -> (Tensor[(11, 7, 6), float32], Tensor[(13, 16, 12), uint32], Tensor[(4, 16, 12), float64], Tensor[(1, 16, 12), float64]) {
  %141 = @func_4236() /* ty=(Tensor[(11, 7, 6), int16],) */;
  %142 = %141.0;
  %143 = cast(%142, dtype="float32") /* ty=Tensor[(11, 7, 6), float32] */;
  %144 = @func_4950() /* ty=(Tensor[(4, 16, 12), float64],) */;
  %145 = log10(%143) /* ty=Tensor[(11, 7, 6), float32] */;
  %146 = @func_5741() /* ty=Tensor[(13, 16, 12), uint32] */;
  %147 = %144.0;
  %148 = @func_3754() /* ty=Tensor[(1, 16, 12), float64] */;
  (%145, %146, %147, %148)
}

def @func_10362() -> (Tensor[(13, 16, 12), bool], Tensor[(1, 16, 12), float64], Tensor[(13, 12, 4), float64], Tensor[(624), float64], int32, Tensor[(275, 2), int8], Tensor[(132), bool], Tensor[(132), bool], Tensor[(13, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) {
  %149 = @func_9674() /* ty=(Tensor[(13, 16, 12), bool],) */;
  %150 = @func_9601() /* ty=(Tensor[(132), bool], Tensor[(1, 16, 12), float64]) */;
  %151 = cast(meta[relay.Constant][5] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %152 = reshape(%151, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), float64] */;
  %153 = @func_10194(%152) /* ty=(Tensor[(13, 12, 4), float64],) */;
  %154 = cast(meta[relay.Constant][6] /* ty=Tensor[(275, 2), uint16] */, dtype="uint16") /* ty=Tensor[(275, 2), uint16] */;
  %155 = reshape(%154, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), uint16] */;
  %156 = @func_5133(%155) /* ty=(Tensor[(11, 10, 5), uint16], Tensor[(168), int8], int32, Tensor[(16), int32], Tensor[(2496), uint32]) */;
  %157 = cast(meta[relay.Constant][7] /* ty=Tensor[(275, 2), uint16] */, dtype="int8") /* ty=Tensor[(275, 2), int8] */;
  %158 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(275, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %159 = cast(meta[relay.Constant][6] /* ty=Tensor[(275, 2), uint16] */, dtype="int8") /* ty=Tensor[(275, 2), int8] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %161 = cast(meta[relay.Constant][8] /* ty=Tensor[(462), int16] */, dtype="int16") /* ty=Tensor[(462), int16] */;
  %162 = cast(meta[relay.Constant][8] /* ty=Tensor[(462), int16] */, dtype="int16") /* ty=Tensor[(462), int16] */;
  %163 = reshape(%161, newshape=[11, 7, 6]) /* ty=Tensor[(11, 7, 6), int16] */;
  %164 = reshape(%162, newshape=[11, 7, 6]) /* ty=Tensor[(11, 7, 6), int16] */;
  %165 = @func_1880(%163, %164) /* ty=(Tensor[(11, 7, 6), int16],) */;
  %166 = %149.0;
  %167 = %150.1;
  %168 = %153.0;
  %169 = %156.2;
  %170 = logical_xor(%159, %160) /* ty=Tensor[(275, 2), int8] */;
  %171 = @func_5425() /* ty=Tensor[(132), bool] */;
  %172 = @func_5840() /* ty=Tensor[(132), bool] */;
  %173 = @func_7609() /* ty=Tensor[(13, 16, 12), float64] */;
  %174 = %165.0;
  (%166, %167, %168, meta[relay.Constant][5] /* ty=Tensor[(624), float64] */, %169, %170, %171, %172, %173, %174, meta[relay.Constant][8] /* ty=Tensor[(462), int16] */)
}

def @func_5133(%var_5088: Tensor[(11, 10, 5), uint16]) -> (Tensor[(11, 10, 5), uint16], Tensor[(168), int8], int32, Tensor[(16), int32], Tensor[(2496), uint32]) {
  %175 = cast(%var_5088, dtype="uint16") /* ty=Tensor[(11, 10, 5), uint16] */;
  %176 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(11, 10, 5), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 10, 5), uint16] */, dtype="uint16") /* ty=Tensor[(11, 10, 5), uint16] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %179 = cast(4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %180 = cast(meta[relay.Constant][10] /* ty=Tensor[(16), int32] */, dtype="int32") /* ty=Tensor[(16), int32] */;
  %181 = cast(meta[relay.Constant][11] /* ty=Tensor[(2496), uint32] */, dtype="uint32") /* ty=Tensor[(2496), uint32] */;
  %182 = reshape(%179, newshape=[]) /* ty=int32 */;
  %183 = reshape(%180, newshape=[16]) /* ty=Tensor[(16), int32] */;
  %184 = reshape(%181, newshape=[2496]) /* ty=Tensor[(2496), uint32] */;
  %185 = @func_4665(%182, %183, %184) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(2, 8, 1), float32], Tensor[(1800), int8], Tensor[(8, 15, 15), float32], Tensor[(13, 16, 12), float32], Tensor[(2496), uint32], Tensor[(4, 14, 3), int8], Tensor[(168), int8]) */;
  %186 = minimum(%177, %178) /* ty=Tensor[(11, 10, 5), uint16] */;
  %187 = %185.8;
  (%186, %187, 4 /* ty=int32 */, meta[relay.Constant][10] /* ty=Tensor[(16), int32] */, meta[relay.Constant][11] /* ty=Tensor[(2496), uint32] */)
}

def @func_4481(%var_4477: Tensor[(1800), int8]) -> (Tensor[(1, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) {
  %188 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %189 = %188.1;
  %190 = cast(%189, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %191 = cast(%var_4477, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %192 = cast(%var_4477, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %193 = reshape(%191, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
  %194 = reshape(%192, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
  %195 = atanh(%190) /* ty=Tensor[(1, 16, 12), float64] */;
  %196 = @func_3654(%193, %194) /* ty=Tensor[(8, 15, 15), uint8] */;
  (%195, %196, %var_4477)
}

def @func_5003() -> (Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool], Tensor[(11, 7, 6), int16]) {
  %197 = cast(meta[relay.Constant][12] /* ty=Tensor[(132), bool] */, dtype="bool") /* ty=Tensor[(132), bool] */;
  %198 = cast(meta[relay.Constant][12] /* ty=Tensor[(132), bool] */, dtype="bool") /* ty=Tensor[(132), bool] */;
  %199 = reshape(%197, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), bool] */;
  %200 = reshape(%198, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), bool] */;
  %201 = @func_3477(%199, %200) /* ty=(Tensor[(3, 11, 4), bool],) */;
  %202 = @func_4236() /* ty=(Tensor[(11, 7, 6), int16],) */;
  %203 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %204 = %201.0;
  %205 = %202.0;
  (%203, %204, meta[relay.Constant][12] /* ty=Tensor[(132), bool] */, %205)
}

def @func_9043() -> (Tensor[(1, 16, 12), float64], Tensor[(?, 960), int16], Tensor[(1, 16, 12), float64], Tensor[(330), float32], Tensor[(?, 960), bool], Tensor[(?, 960), bool], Tensor[(512), int16], int32) {
  %206 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 960), float64] */, dtype="float64") /* ty=Tensor[(1, 960), float64] */;
  %207 = reshape(%206, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), float64] */;
  %208 = @func_6046(%207) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(4, 16, 12), float64], Tensor[(5, 16, 12), float32]) */;
  %209 = %208.0;
  %210 = cast(%209, dtype="int16") /* ty=Tensor[(5, 16, 12), int16] */;
  %211 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(1, 960), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %212 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 960), float64] */, dtype="int16") /* ty=Tensor[(1, 960), int16] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %214 = cast(meta[relay.Constant][14] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %215 = cast(meta[relay.Constant][14] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %216 = reshape(%214, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %217 = reshape(%215, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %218 = @func_7924(%216, %217) /* ty=(Tensor[(3, 10, 11), float32], Tensor[(1, 16, 12), float64]) */;
  %219 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 960), float64] */, dtype="float32") /* ty=Tensor[(1, 960), float32] */;
  %220 = rsqrt(%219) /* ty=Tensor[(1, 960), float32] */;
  %221 = cast(%220, dtype="float32") /* ty=Tensor[(1, 960), float32] */;
  %222 = asin(%221) /* ty=Tensor[(1, 960), float32] */;
  %223 = cast(%222, dtype="bool") /* ty=Tensor[(1, 960), bool] */;
  %224 = shape_of(%220, dtype="int32") /* ty=Tensor[(2), int32] */;
  %225 = cast(%220, dtype="bool") /* ty=Tensor[(1, 960), bool] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %227 = cast(%220, dtype="float64") /* ty=Tensor[(1, 960), float64] */;
  %228 = shape_of(%222, dtype="int32") /* ty=Tensor[(2), int32] */;
  %229 = cast(%222, dtype="float64") /* ty=Tensor[(1, 960), float64] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %231 = power(%229, %230) /* ty=Tensor[(?, 960), float64] */;
  %232 = cast(%231, dtype="bool") /* ty=Tensor[(?, 960), bool] */;
  %233 = shape_of(%220, dtype="int32") /* ty=Tensor[(2), int32] */;
  %234 = cast(%220, dtype="bool") /* ty=Tensor[(1, 960), bool] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %236 = cast(7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %237 = reshape(%236, newshape=[]) /* ty=int32 */;
  %238 = @func_6268(%237) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(512), int16], int32, Tensor[(1, 16), int32]) */;
  %239 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %240 = bitwise_and(%212, %213) /* ty=Tensor[(?, 960), int16] */;
  %241 = %218.1;
  %242 = equal(%225, %226) /* ty=Tensor[(?, 960), bool] */;
  %243 = less(%234, %235) /* ty=Tensor[(?, 960), bool] */;
  %244 = %238.2;
  (%239, %240, %241, meta[relay.Constant][14] /* ty=Tensor[(330), float32] */, %242, %243, %244, 7 /* ty=int32 */)
}

def @func_5921() -> (Tensor[(?, 16, 12), int8],) {
  %245 = @func_3754() /* ty=Tensor[(1, 16, 12), float64] */;
  %246 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %247 = %246.0;
  %248 = cast(%247, dtype="int8") /* ty=Tensor[(1, 16, 12), int8] */;
  %249 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%245, dtype="int8") /* ty=Tensor[(1, 16, 12), int8] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %252 = bitwise_or(%250, %251) /* ty=Tensor[(?, 16, 12), int8] */;
  (%252,)
}

def @func_6853() -> (Tensor[(11, 7, 6), int16],) {
  %253 = @func_5037() /* ty=Tensor[(11, 7, 6), int16] */;
  (%253,)
}

def @func_5970(%var_5954: Tensor[(5, 16, 12), float64]) -> Tensor[(5, 16, 12), float64] {
  %254 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
  %255 = cast(%254, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %256 = cast(%var_5954, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
  floor_divide(%255, %256) /* ty=Tensor[(5, 16, 12), float64] */
}

def @func_7609() -> Tensor[(13, 16, 12), float64] {
  @func_6974() /* ty=Tensor[(13, 16, 12), float64] */
}

def @func_3983(%var_3959: Tensor[(15, 13, 8), int8], %var_3960: Tensor[(15, 13, 8), int8]) -> (Tensor[(15, 13, 8), int8], Tensor[(15, 13, 8), float64]) {
  %257 = cast(%var_3960, dtype="int8") /* ty=Tensor[(15, 13, 8), int8] */;
  %258 = shape_of(%var_3959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%var_3959, dtype="int8") /* ty=Tensor[(15, 13, 8), int8] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %261 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 13, 8), int8] */, dtype="float64") /* ty=Tensor[(15, 13, 8), float64] */;
  %262 = shape_of(%var_3960, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%var_3960, dtype="float64") /* ty=Tensor[(15, 13, 8), float64] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %265 = left_shift(%259, %260) /* ty=Tensor[(15, 13, 8), int8] */;
  %266 = floor_divide(%263, %264) /* ty=Tensor[(15, 13, 8), float64] */;
  (%265, %266)
}

def @func_5613() -> (Tensor[(1, 16, 12), float64],) {
  %267 = @func_3719() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %268 = %267.0;
  (%268,)
}

def @func_5252(%var_5245: Tensor[(512), int16], %var_5249: int32, %var_5250: Tensor[(16), int32]) -> (Tensor[(1, 16, 12), float32], Tensor[(16, 2, 16), int32], Tensor[(512), int16], Tensor[(2, 8, 1), int32], int32, Tensor[(16), int32]) {
  %269 = @func_5011() /* ty=(Tensor[(1, 16, 12), float32],) */;
  %270 = cast(%var_5245, dtype="int16") /* ty=Tensor[(512), int16] */;
  %271 = cast(%var_5245, dtype="int16") /* ty=Tensor[(512), int16] */;
  %272 = cast(%var_5245, dtype="float32") /* ty=Tensor[(512), float32] */;
  %273 = reshape(%270, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int16] */;
  %274 = reshape(%271, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int16] */;
  %275 = reshape(%272, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float32] */;
  %276 = @func_4164(%273, %274, %275) /* ty=(Tensor[(16, 2, 16), int16], Tensor[(16, 2, 16), float64], Tensor[(16, 2, 16), int32]) */;
  %277 = cast(%var_5249, dtype="int32") /* ty=int32 */;
  %278 = cast(%var_5250, dtype="int32") /* ty=Tensor[(16), int32] */;
  %279 = reshape(%277, newshape=[]) /* ty=int32 */;
  %280 = reshape(%278, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int32] */;
  %281 = %269.0;
  %282 = %276.2;
  %283 = @func_786(%279, %280) /* ty=Tensor[(2, 8, 1), int32] */;
  (%281, %282, %var_5245, %283, %var_5249, %var_5250)
}

def @func_10075(%var_10062: Tensor[(256, 1), float32]) -> (Tensor[(13, 16, 12), uint32], Tensor[(4, 8, 8), float32], Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(256, 1), float32]) {
  %284 = cast(%var_10062, dtype="float32") /* ty=Tensor[(256, 1), float32] */;
  %285 = cast(%var_10062, dtype="float32") /* ty=Tensor[(256, 1), float32] */;
  %286 = reshape(%284, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
  %287 = reshape(%285, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
  %288 = cast(%var_10062, dtype="float32") /* ty=Tensor[(256, 1), float32] */;
  %289 = @func_8594() /* ty=Tensor[(13, 16, 12), uint32] */;
  %290 = @func_6429(%286, %287) /* ty=Tensor[(4, 8, 8), float32] */;
  %291 = @func_5463() /* ty=Tensor[(1, 16, 12), float64] */;
  %292 = @func_7586() /* ty=Tensor[(1, 16, 12), float64] */;
  %293 = log10(%288) /* ty=Tensor[(256, 1), float32] */;
  (%289, %290, %291, %292, %293)
}

def @func_7061() -> (Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) {
  %294 = @func_4972() /* ty=Tensor[(13, 16, 12), uint32] */;
  %295 = @func_3754() /* ty=Tensor[(1, 16, 12), float64] */;
  (%294, %295)
}

def @func_3931() -> (Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) {
  %296 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %297 = %296.0;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
  %299 = cast(meta[relay.Constant][16] /* ty=Tensor[(462), int16] */, dtype="int16") /* ty=Tensor[(462), int16] */;
  %300 = cast(meta[relay.Constant][16] /* ty=Tensor[(462), int16] */, dtype="int16") /* ty=Tensor[(462), int16] */;
  %301 = reshape(%299, newshape=[11, 7, 6]) /* ty=Tensor[(11, 7, 6), int16] */;
  %302 = reshape(%300, newshape=[11, 7, 6]) /* ty=Tensor[(11, 7, 6), int16] */;
  %303 = @func_1880(%301, %302) /* ty=(Tensor[(11, 7, 6), int16],) */;
  %304 = sqrt(%298) /* ty=Tensor[(1, 16, 12), float32] */;
  %305 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
  %306 = %303.0;
  (%304, %305, %306, meta[relay.Constant][16] /* ty=Tensor[(462), int16] */)
}

def @func_8504(%var_8471: Tensor[(2, 16, 12), float64]) -> (Tensor[(2, 16, 12), float64], Tensor[(13, 16, 12), float64]) {
  %307 = @func_7790() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %308 = %307.0;
  %309 = cast(%308, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %310 = cast(%var_8471, dtype="float64") /* ty=Tensor[(2, 16, 12), float64] */;
  %311 = @func_7702() /* ty=(Tensor[(13, 16, 12), float64],) */;
  %312 = divide(%309, %310) /* ty=Tensor[(2, 16, 12), float64] */;
  %313 = %311.0;
  (%312, %313)
}

def @func_5489() -> (Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) {
  %314 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %315 = %314.2;
  %316 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
  (%315, %316)
}

def @func_9393(%var_9382: Tensor[(3, 16, 12), float64]) -> (Tensor[(1, 16, 12), float64], Tensor[(3, 16, 12), float32]) {
  %317 = @func_7790() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %318 = @func_7790() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %319 = %318.0;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
  %321 = cast(%var_9382, dtype="float32") /* ty=Tensor[(3, 16, 12), float32] */;
  %322 = %317.0;
  %323 = multiply(%320, %321) /* ty=Tensor[(3, 16, 12), float32] */;
  (%322, %323)
}

def @func_786(%var_764: int32, %var_765: Tensor[(2, 8, 1), int32]) -> Tensor[(2, 8, 1), int32] {
  %324 = cast(%var_764, dtype="int32") /* ty=int32 */;
  %325 = cast(%var_765, dtype="int32") /* ty=Tensor[(2, 8, 1), int32] */;
  logical_xor(%324, %325) /* ty=Tensor[(2, 8, 1), int32] */
}

def @func_7141(%var_7081: Tensor[(8, 5, 10), uint64], %var_7111: Tensor[(384), float64]) -> (Tensor[(8, 5, 10), bool], Tensor[(1536), float32], Tensor[(1536), float32], Tensor[(8, 5, 10), int16], Tensor[(9, 5, 6), float64], Tensor[(30, 9), float64], Tensor[(2, 16, 12), bool], Tensor[(384), float64], Tensor[(550), float32]) {
  %326 = cast(%var_7081, dtype="uint64") /* ty=Tensor[(8, 5, 10), uint64] */;
  %327 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(8, 5, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 5, 10), uint64] */, dtype="uint64") /* ty=Tensor[(8, 5, 10), uint64] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %330 = bitwise_and(%328, %329) /* ty=Tensor[(8, 5, 10), uint64] */;
  %331 = cast(%330, dtype="bool") /* ty=Tensor[(8, 5, 10), bool] */;
  %332 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(8, 5, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 5, 10), uint64] */, dtype="bool") /* ty=Tensor[(8, 5, 10), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = cast(meta[relay.Constant][18] /* ty=Tensor[(1536), float32] */, dtype="float32") /* ty=Tensor[(1536), float32] */;
  %336 = cast(-3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %337 = cast(meta[relay.Constant][19] /* ty=Tensor[(550), uint16] */, dtype="uint16") /* ty=Tensor[(550), uint16] */;
  %338 = reshape(%335, newshape=[1536]) /* ty=Tensor[(1536), float32] */;
  %339 = reshape(%336, newshape=[]) /* ty=int32 */;
  %340 = reshape(%337, newshape=[550]) /* ty=Tensor[(550), uint16] */;
  %341 = @func_6150(%338, %339, %340) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(5, 16, 12), float64], Tensor[(960), float64], Tensor[(12, 16, 8), float32], Tensor[(1536), float32], int32, Tensor[(132), bool], Tensor[(2496), uint32], Tensor[(550), uint16], Tensor[(550), uint16]) */;
  %342 = cast(-3 /* ty=int32 */, dtype="int16") /* ty=int16 */;
  %343 = cast(%var_7081, dtype="int16") /* ty=Tensor[(8, 5, 10), int16] */;
  %344 = cast(-3 /* ty=int32 */, dtype="float64") /* ty=float64 */;
  %345 = cast(meta[relay.Constant][20] /* ty=Tensor[(30, 9), float64] */, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %346 = reshape(%344, newshape=[]) /* ty=float64 */;
  %347 = reshape(%345, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), float64] */;
  %348 = cast(%var_7111, dtype="float64") /* ty=Tensor[(384), float64] */;
  %349 = reshape(%348, newshape=[2, 16, 12]) /* ty=Tensor[(2, 16, 12), float64] */;
  %350 = @func_4865(%349) /* ty=(Tensor[(13, 16, 12), bool], Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), int32]) */;
  %351 = cast(meta[relay.Constant][19] /* ty=Tensor[(550), uint16] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %352 = equal(%333, %334) /* ty=Tensor[(8, 5, 10), bool] */;
  %353 = %341.4;
  %354 = bitwise_xor(%342, %343) /* ty=Tensor[(8, 5, 10), int16] */;
  %355 = @func_1323(%346, %347) /* ty=Tensor[(9, 5, 6), float64] */;
  %356 = %350.1;
  %357 = log(%351) /* ty=Tensor[(550), float32] */;
  (%352, %353, meta[relay.Constant][18] /* ty=Tensor[(1536), float32] */, %354, %355, meta[relay.Constant][20] /* ty=Tensor[(30, 9), float64] */, %356, %var_7111, %357)
}

def @func_4209() -> Tensor[(13, 16, 12), uint32] {
  %358 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %359 = cast(%358, dtype="uint32") /* ty=Tensor[(1, 16, 12), uint32] */;
  %360 = cast(meta[relay.Constant][21] /* ty=Tensor[(13, 16, 12), float64] */, dtype="uint32") /* ty=Tensor[(13, 16, 12), uint32] */;
  logical_xor(%359, %360) /* ty=Tensor[(13, 16, 12), uint32] */
}

def @func_4384(%var_4369: Tensor[(1, 16, 12), float64]) -> (Tensor[(?, 16, 12), uint16],) {
  %361 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %362 = cast(%var_4369, dtype="uint16") /* ty=Tensor[(1, 16, 12), uint16] */;
  %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%361, dtype="uint16") /* ty=Tensor[(1, 16, 12), uint16] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %366 = multiply(%364, %365) /* ty=Tensor[(?, 16, 12), uint16] */;
  (%366,)
}

def @func_8669() -> Tensor[(13, 16, 12), uint32] {
  %367 = @func_6631() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(13, 16, 12), uint32]) */;
  %367.1
}

def @func_10194(%var_10176: Tensor[(13, 12, 4), float64]) -> (Tensor[(13, 12, 4), float64],) {
  %368 = cast(%var_10176, dtype="float64") /* ty=Tensor[(13, 12, 4), float64] */;
  %369 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(13, 12, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(13, 12, 4), float64] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %372 = minimum(%370, %371) /* ty=Tensor[(13, 12, 4), float64] */;
  (%372,)
}

def @func_1323(%var_1314: float64, %var_1315: Tensor[(9, 5, 6), float64]) -> Tensor[(9, 5, 6), float64] {
  %373 = cast(%var_1314, dtype="float64") /* ty=float64 */;
  %374 = cast(%var_1315, dtype="float64") /* ty=Tensor[(9, 5, 6), float64] */;
  power(%373, %374) /* ty=Tensor[(9, 5, 6), float64] */
}

def @func_6337() -> Tensor[(?, 16, 12), bool] {
  %375 = @func_5463() /* ty=Tensor[(1, 16, 12), float64] */;
  %376 = @func_5463() /* ty=Tensor[(1, 16, 12), float64] */;
  %377 = cast(%376, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %378 = shape_of(%375, dtype="int32") /* ty=Tensor[(3), int32] */;
  %379 = cast(%375, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%379, %380) /* ty=Tensor[(?, 16, 12), bool] */
}

def @func_11092(%var_11086: Tensor[(1560), int8], %var_11087: Tensor[(3, 600), int8]) -> (Tensor[(8, 16, 12), float32], Tensor[(11, 7, 6), int16], Tensor[(15, 13, 8), float64], Tensor[(1560), int8], Tensor[(3, 600), int8], Tensor[(1, 16, 12), float64]) {
  %381 = @func_6337() /* ty=Tensor[(?, 16, 12), bool] */;
  %382 = cast(%381, dtype="float32") /* ty=Tensor[(?, 16, 12), float32] */;
  %383 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 16, 12), bool] */, dtype="float32") /* ty=Tensor[(8, 16, 12), float32] */;
  %384 = cast(%var_11086, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %385 = cast(%var_11087, dtype="int8") /* ty=Tensor[(3, 600), int8] */;
  %386 = reshape(%384, newshape=[1560]) /* ty=Tensor[(1560), int8] */;
  %387 = reshape(%385, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %388 = @func_5831(%386, %387) /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(15, 13, 8), float64], Tensor[(1560), int8], Tensor[(11, 7, 6), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */;
  %389 = power(%382, %383) /* ty=Tensor[(8, 16, 12), float32] */;
  %390 = @func_7523() /* ty=Tensor[(11, 7, 6), int16] */;
  %391 = %388.1;
  %392 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  (%389, %390, %391, %var_11086, %var_11087, %392)
}

def @func_7523() -> Tensor[(11, 7, 6), int16] {
  @func_5037() /* ty=Tensor[(11, 7, 6), int16] */
}

def @func_9213() -> (Tensor[(132), bool], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) {
  %393 = cast(meta[relay.Constant][24] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %394 = cast(meta[relay.Constant][24] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %395 = reshape(%393, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
  %396 = reshape(%394, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
  %397 = @func_5840() /* ty=Tensor[(132), bool] */;
  %398 = @func_6429(%395, %396) /* ty=Tensor[(4, 8, 8), float32] */;
  (%397, %398, meta[relay.Constant][24] /* ty=Tensor[(256), float32] */)
}

def @func_10651() -> (Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), uint32], Tensor[(13, 16, 12), float64]) {
  %399 = @func_10423() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), float32]) */;
  %400 = @func_6764() /* ty=(Tensor[(11, 7, 6), float32], Tensor[(13, 16, 12), uint32], Tensor[(4, 16, 12), float64], Tensor[(1, 16, 12), float64]) */;
  %401 = %400.1;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(13, 16, 12), float32] */;
  %403 = reshape(%402, newshape=[13, 16, 12]) /* ty=Tensor[(13, 16, 12), float32] */;
  %404 = @func_10574(%403) /* ty=(Tensor[(13, 16, 12), float32],) */;
  %405 = %404.0;
  %406 = cast(%405, dtype="float64") /* ty=Tensor[(13, 16, 12), float64] */;
  %407 = %399.0;
  %408 = tan(%406) /* ty=Tensor[(13, 16, 12), float64] */;
  (%407, %401, %408)
}

def @func_6150(%var_6093: Tensor[(1536), float32], %var_6094: int32, %var_6100: Tensor[(550), uint16]) -> (Tensor[(1, 16, 12), float64], Tensor[(5, 16, 12), float64], Tensor[(960), float64], Tensor[(12, 16, 8), float32], Tensor[(1536), float32], int32, Tensor[(132), bool], Tensor[(2496), uint32], Tensor[(550), uint16], Tensor[(550), uint16]) {
  %409 = @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */;
  %410 = cast(meta[relay.Constant][25] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %411 = reshape(%410, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), float64] */;
  %412 = cast(%var_6093, dtype="float32") /* ty=Tensor[(1536), float32] */;
  %413 = cast(%var_6094, dtype="int32") /* ty=int32 */;
  %414 = reshape(%412, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), float32] */;
  %415 = reshape(%413, newshape=[]) /* ty=int32 */;
  %416 = @func_3050(%414, %415) /* ty=(Tensor[(12, 16, 8), float32], int32, Tensor[(2, 8), int32], Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(2, 8, 168), bool]) */;
  %417 = cast(%var_6100, dtype="uint16") /* ty=Tensor[(550), uint16] */;
  %418 = reshape(%417, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), uint16] */;
  %419 = @func_5133(%418) /* ty=(Tensor[(11, 10, 5), uint16], Tensor[(168), int8], int32, Tensor[(16), int32], Tensor[(2496), uint32]) */;
  %420 = cast(%var_6093, dtype="float32") /* ty=Tensor[(1536), float32] */;
  %421 = reshape(%420, newshape=[1536, 1]) /* ty=Tensor[(1536, 1), float32] */;
  %422 = @func_5322(%421) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(10, 16, 12), int16], Tensor[(1536, 1920), bool], Tensor[(1, 16, 12), float64], Tensor[(168), int8], Tensor[(550), uint16]) */;
  %423 = %409.1;
  %424 = @func_5970(%411) /* ty=Tensor[(5, 16, 12), float64] */;
  %425 = %416.0;
  %426 = @func_5840() /* ty=Tensor[(132), bool] */;
  %427 = %419.4;
  %428 = %422.5;
  (%423, %424, meta[relay.Constant][25] /* ty=Tensor[(960), float64] */, %425, %var_6093, %var_6094, %426, %427, %var_6100, %428)
}

def @func_9674() -> (Tensor[(13, 16, 12), bool],) {
  %429 = @func_5003() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool], Tensor[(11, 7, 6), int16]) */;
  %430 = %429.0;
  %431 = @func_6974() /* ty=Tensor[(13, 16, 12), float64] */;
  %432 = cast(%430, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %433 = cast(%431, dtype="bool") /* ty=Tensor[(13, 16, 12), bool] */;
  %434 = greater_equal(%432, %433) /* ty=Tensor[(13, 16, 12), bool] */;
  (%434,)
}

def @func_9924() -> (Tensor[(4, 16, 12), float32],) {
  %435 = @func_9863() /* ty=(Tensor[(4, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1560), int8], Tensor[(900, 2), int8]) */;
  %436 = %435.0;
  %437 = @func_9420() /* ty=Tensor[(1, 16, 12), float64] */;
  %438 = cast(%436, dtype="bool") /* ty=Tensor[(4, 16, 12), bool] */;
  %439 = cast(%437, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %440 = equal(%438, %439) /* ty=Tensor[(4, 16, 12), bool] */;
  %441 = cast(%440, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %442 = log(%441) /* ty=Tensor[(4, 16, 12), float32] */;
  (%442,)
}

def @main(%var_11218: Tensor[(11, 7, 6), int16], %var_11231: Tensor[(15, 16, 12), float64]) -> (Tensor[(2535), float64], Tensor[(11, 7, 6), int64], Tensor[(11, 7, 6), int16], Tensor[(15, 16, 12), float32]) {
  %443 = cast(meta[relay.Constant][26] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %444 = reshape(%443, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), float64] */;
  %445 = @func_9713(%444) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(1, 16, 12), float32], Tensor[(11, 7, 6), int16]) */;
  %446 = %445.2;
  %447 = cast(%var_11218, dtype="int64") /* ty=Tensor[(11, 7, 6), int64] */;
  %448 = shape_of(%446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%446, dtype="int64") /* ty=Tensor[(11, 7, 6), int64] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %451 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %452 = %451.0;
  %453 = cast(%452, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
  %454 = cast(%var_11231, dtype="float32") /* ty=Tensor[(15, 16, 12), float32] */;
  %455 = bitwise_xor(%449, %450) /* ty=Tensor[(11, 7, 6), int64] */;
  %456 = @func_11025() /* ty=Tensor[(11, 7, 6), int16] */;
  %457 = floor_divide(%453, %454) /* ty=Tensor[(15, 16, 12), float32] */;
  (meta[relay.Constant][26] /* ty=Tensor[(2535), float64] */, %455, %456, %457)
}

def @func_5698(%var_5674: Tensor[(256, 2), int16], %var_5675: int32) -> (Tensor[(462), int16], Tensor[(1, 16, 12), float32], Tensor[(16), int32], Tensor[(256, 2), int16], int32, Tensor[(16), int32], Tensor[(11, 7, 6), int16]) {
  %458 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %459 = @func_5011() /* ty=(Tensor[(1, 16, 12), float32],) */;
  %460 = cast(%var_5674, dtype="int16") /* ty=Tensor[(256, 2), int16] */;
  %461 = cast(%var_5675, dtype="int32") /* ty=int32 */;
  %462 = cast(meta[relay.Constant][27] /* ty=Tensor[(16), int32] */, dtype="int32") /* ty=Tensor[(16), int32] */;
  %463 = reshape(%460, newshape=[512]) /* ty=Tensor[(512), int16] */;
  %464 = reshape(%461, newshape=[]) /* ty=int32 */;
  %465 = reshape(%462, newshape=[16]) /* ty=Tensor[(16), int32] */;
  %466 = @func_5252(%463, %464, %465) /* ty=(Tensor[(1, 16, 12), float32], Tensor[(16, 2, 16), int32], Tensor[(512), int16], Tensor[(2, 8, 1), int32], int32, Tensor[(16), int32]) */;
  %467 = @func_4236() /* ty=(Tensor[(11, 7, 6), int16],) */;
  %468 = %458.3;
  %469 = %459.0;
  %470 = %466.5;
  %471 = %467.0;
  (%468, %469, %470, %var_5674, %var_5675, meta[relay.Constant][27] /* ty=Tensor[(16), int32] */, %471)
}

def @func_3835() -> Tensor[(1, 16, 12), float64] {
  %472 = @func_3719() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %472.0
}

def @func_10926(%var_10893: Tensor[(10, 10, 6), float32]) -> (Tensor[(10, 10, 6), float32],) {
  %473 = cast(%var_10893, dtype="float32") /* ty=Tensor[(10, 10, 6), float32] */;
  %474 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(10, 10, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %475 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 10, 6), float32] */, dtype="float32") /* ty=Tensor[(10, 10, 6), float32] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %477 = mod(%475, %476) /* ty=Tensor[(10, 10, 6), float32] */;
  (%477,)
}

def @func_8731() -> (Tensor[(1, 16, 12), float32],) {
  %478 = @func_5011() /* ty=(Tensor[(1, 16, 12), float32],) */;
  %479 = %478.0;
  (%479,)
}

def @func_5011() -> (Tensor[(1, 16, 12), float32],) {
  %480 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %481 = %480.0;
  (%481,)
}

def @func_2639(%var_2614: int8) -> (Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(5, 7, 3), bool], Tensor[(2, 8, 1), int32], Tensor[(4, 4), int32]) {
  %482 = cast(%var_2614, dtype="int8") /* ty=int8 */;
  %483 = cast(meta[relay.Constant][29] /* ty=Tensor[(168, 1), int8] */, dtype="int8") /* ty=Tensor[(168, 1), int8] */;
  %484 = reshape(%482, newshape=[]) /* ty=int8 */;
  %485 = reshape(%483, newshape=[4, 14, 3]) /* ty=Tensor[(4, 14, 3), int8] */;
  %486 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 3), float64] */;
  %487 = atanh(%486) /* ty=Tensor[(5, 7, 3), float64] */;
  %488 = cast(%487, dtype="bool") /* ty=Tensor[(5, 7, 3), bool] */;
  %489 = cast(%var_2614, dtype="bool") /* ty=bool */;
  %490 = cast(%var_2614, dtype="int32") /* ty=int32 */;
  %491 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 4), int32] */, dtype="int32") /* ty=Tensor[(4, 4), int32] */;
  %492 = reshape(%490, newshape=[]) /* ty=int32 */;
  %493 = reshape(%491, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int32] */;
  %494 = @func_1647(%484, %485) /* ty=Tensor[(4, 14, 3), int8] */;
  %495 = equal(%488, %489) /* ty=Tensor[(5, 7, 3), bool] */;
  %496 = @func_786(%492, %493) /* ty=Tensor[(2, 8, 1), int32] */;
  (%494, meta[relay.Constant][29] /* ty=Tensor[(168, 1), int8] */, %495, %496, meta[relay.Constant][31] /* ty=Tensor[(4, 4), int32] */)
}

def @func_10728() -> (Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), float64], Tensor[(132), bool]) {
  %497 = @func_9483() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %498 = @func_7702() /* ty=(Tensor[(13, 16, 12), float64],) */;
  %499 = %497.0;
  %500 = %498.0;
  %501 = @func_8331() /* ty=Tensor[(132), bool] */;
  (%499, %500, %501)
}

def @func_1880(%var_1874: Tensor[(11, 7, 6), int16], %var_1875: Tensor[(11, 7, 6), int16]) -> (Tensor[(11, 7, 6), int16],) {
  %502 = cast(%var_1875, dtype="int16") /* ty=Tensor[(11, 7, 6), int16] */;
  %503 = shape_of(%var_1874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(%var_1874, dtype="int16") /* ty=Tensor[(11, 7, 6), int16] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %506 = bitwise_and(%504, %505) /* ty=Tensor[(11, 7, 6), int16] */;
  (%506,)
}

def @func_4791(%var_4773: Tensor[(10, 16, 12), float64], %var_4784: Tensor[(1536), float32]) -> (Tensor[(10, 16, 12), int16], int32, Tensor[(1536), float32], int32) {
  %507 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %508 = %507.0;
  %509 = cast(%508, dtype="int16") /* ty=Tensor[(1, 16, 12), int16] */;
  %510 = cast(%var_4773, dtype="int16") /* ty=Tensor[(10, 16, 12), int16] */;
  %511 = cast(%var_4784, dtype="float32") /* ty=Tensor[(1536), float32] */;
  %512 = cast(10 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %513 = reshape(%511, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), float32] */;
  %514 = reshape(%512, newshape=[]) /* ty=int32 */;
  %515 = @func_3050(%513, %514) /* ty=(Tensor[(12, 16, 8), float32], int32, Tensor[(2, 8), int32], Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(2, 8, 168), bool]) */;
  %516 = logical_xor(%509, %510) /* ty=Tensor[(10, 16, 12), int16] */;
  %517 = %515.1;
  (%516, %517, %var_4784, 10 /* ty=int32 */)
}

def @func_8871() -> (Tensor[(13, 16, 12), uint32], Tensor[(270), float64], Tensor[(3, 11, 4), bool], Tensor[(1, 132), bool], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) {
  %518 = @func_7061() /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) */;
  %519 = @func_4530() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(9, 5, 6), float64], float64, Tensor[(270), float64]) */;
  %520 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 132), bool] */, dtype="bool") /* ty=Tensor[(1, 132), bool] */;
  %521 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 132), bool] */, dtype="bool") /* ty=Tensor[(1, 132), bool] */;
  %522 = reshape(%520, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), bool] */;
  %523 = reshape(%521, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), bool] */;
  %524 = @func_3477(%522, %523) /* ty=(Tensor[(3, 11, 4), bool],) */;
  %525 = cast(meta[relay.Constant][33] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %526 = cast(meta[relay.Constant][33] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %527 = reshape(%525, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %528 = reshape(%526, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %529 = @func_7924(%527, %528) /* ty=(Tensor[(3, 10, 11), float32], Tensor[(1, 16, 12), float64]) */;
  %530 = %518.0;
  %531 = %519.3;
  %532 = %524.0;
  %533 = %529.0;
  (%530, %531, %532, meta[relay.Constant][32] /* ty=Tensor[(1, 132), bool] */, %533, meta[relay.Constant][33] /* ty=Tensor[(330), float32] */)
}

def @func_8819(%var_8792: Tensor[(15, 13, 9), float64]) -> (Tensor[(15, 13, 9), int16], Tensor[(132), bool]) {
  %534 = cast(%var_8792, dtype="float64") /* ty=Tensor[(15, 13, 9), float64] */;
  %535 = asinh(%534) /* ty=Tensor[(15, 13, 9), float64] */;
  %536 = cast(%535, dtype="int16") /* ty=Tensor[(15, 13, 9), int16] */;
  %537 = shape_of(%var_8792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%var_8792, dtype="int16") /* ty=Tensor[(15, 13, 9), int16] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %540 = subtract(%538, %539) /* ty=Tensor[(15, 13, 9), int16] */;
  %541 = @func_5425() /* ty=Tensor[(132), bool] */;
  (%540, %541)
}

def @func_11025() -> Tensor[(11, 7, 6), int16] {
  @func_7523() /* ty=Tensor[(11, 7, 6), int16] */
}

def @func_9863() -> (Tensor[(4, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1560), int8], Tensor[(900, 2), int8]) {
  %542 = cast(meta[relay.Constant][34] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %543 = cast(meta[relay.Constant][35] /* ty=Tensor[(900, 2), int8] */, dtype="int8") /* ty=Tensor[(900, 2), int8] */;
  %544 = reshape(%542, newshape=[1560]) /* ty=Tensor[(1560), int8] */;
  %545 = reshape(%543, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %546 = @func_5831(%544, %545) /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(15, 13, 8), float64], Tensor[(1560), int8], Tensor[(11, 7, 6), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */;
  %547 = @func_7454() /* ty=Tensor[(4, 16, 12), float64] */;
  %548 = %546.4;
  (%547, %548, meta[relay.Constant][34] /* ty=Tensor[(1560), int8] */, meta[relay.Constant][35] /* ty=Tensor[(900, 2), int8] */)
}

def @func_6268(%var_6239: int32) -> (Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(512), int16], int32, Tensor[(1, 16), int32]) {
  %549 = cast(meta[relay.Constant][36] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %550 = cast(%var_6239, dtype="int32") /* ty=int32 */;
  %551 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 16), int32] */, dtype="int32") /* ty=Tensor[(1, 16), int32] */;
  %552 = reshape(%549, newshape=[512]) /* ty=Tensor[(512), int16] */;
  %553 = reshape(%550, newshape=[]) /* ty=int32 */;
  %554 = reshape(%551, newshape=[16]) /* ty=Tensor[(16), int32] */;
  %555 = @func_5252(%552, %553, %554) /* ty=(Tensor[(1, 16, 12), float32], Tensor[(16, 2, 16), int32], Tensor[(512), int16], Tensor[(2, 8, 1), int32], int32, Tensor[(16), int32]) */;
  %556 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %557 = %555.5;
  (%556, %557, meta[relay.Constant][36] /* ty=Tensor[(512), int16] */, %var_6239, meta[relay.Constant][37] /* ty=Tensor[(1, 16), int32] */)
}

def @func_7454() -> Tensor[(4, 16, 12), float64] {
  %558 = @func_4950() /* ty=(Tensor[(4, 16, 12), float64],) */;
  %558.0
}

def @func_4865(%var_4842: Tensor[(2, 16, 12), float64]) -> (Tensor[(13, 16, 12), bool], Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), int32]) {
  %559 = @func_4816() /* ty=(Tensor[(13, 16, 12), uint32],) */;
  %560 = %559.0;
  %561 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %562 = cast(%560, dtype="bool") /* ty=Tensor[(13, 16, 12), bool] */;
  %563 = cast(%561, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %564 = cast(%561, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %565 = cast(%var_4842, dtype="bool") /* ty=Tensor[(2, 16, 12), bool] */;
  %566 = cast(%561, dtype="int32") /* ty=Tensor[(1, 16, 12), int32] */;
  %567 = cast(%var_4842, dtype="int32") /* ty=Tensor[(2, 16, 12), int32] */;
  %568 = less(%562, %563) /* ty=Tensor[(13, 16, 12), bool] */;
  %569 = greater_equal(%564, %565) /* ty=Tensor[(2, 16, 12), bool] */;
  %570 = left_shift(%566, %567) /* ty=Tensor[(2, 16, 12), int32] */;
  (%568, %569, %570)
}

def @func_6631() -> (Tensor[(1, 16, 12), float32], Tensor[(13, 16, 12), uint32]) {
  %571 = @func_5011() /* ty=(Tensor[(1, 16, 12), float32],) */;
  %572 = %571.0;
  %573 = @func_4972() /* ty=Tensor[(13, 16, 12), uint32] */;
  (%572, %573)
}

def @func_8349() -> (Tensor[(1, 16, 12), float64],) {
  %574 = @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */;
  %575 = %574.1;
  (%575,)
}

def @func_4026(%var_4018: Tensor[(132), bool]) -> (Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool]) {
  %576 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %577 = cast(%var_4018, dtype="bool") /* ty=Tensor[(132), bool] */;
  %578 = cast(%var_4018, dtype="bool") /* ty=Tensor[(132), bool] */;
  %579 = reshape(%577, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), bool] */;
  %580 = reshape(%578, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), bool] */;
  %581 = @func_3477(%579, %580) /* ty=(Tensor[(3, 11, 4), bool],) */;
  %582 = %576.0;
  %583 = %581.0;
  (%582, %583, %var_4018)
}

def @func_7505(%var_7486: Tensor[(5, 6, 5), float64]) -> (Tensor[(5, 6, 5), float64], Tensor[(5, 6, 5), float64]) {
  %584 = cast(%var_7486, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %585 = cast(%var_7486, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %586 = exp(%585) /* ty=Tensor[(5, 6, 5), float64] */;
  %587 = cast(%586, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %588 = shape_of(%var_7486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%var_7486, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %591 = acosh(%584) /* ty=Tensor[(5, 6, 5), float64] */;
  %592 = power(%589, %590) /* ty=Tensor[(5, 6, 5), float64] */;
  (%591, %592)
}

def @func_9295() -> (Tensor[(1, 16, 12), float64],) {
  %593 = @func_5463() /* ty=Tensor[(1, 16, 12), float64] */;
  (%593,)
}

def @func_1647(%var_1636: int8, %var_1637: Tensor[(4, 14, 3), int8]) -> Tensor[(4, 14, 3), int8] {
  %594 = cast(%var_1636, dtype="int8") /* ty=int8 */;
  %595 = cast(%var_1637, dtype="int8") /* ty=Tensor[(4, 14, 3), int8] */;
  right_shift(%594, %595) /* ty=Tensor[(4, 14, 3), int8] */
}

def @func_3814() -> (Tensor[(1, 16, 12), float64],) {
  %596 = @func_3754() /* ty=Tensor[(1, 16, 12), float64] */;
  (%596,)
}

def @func_7974() -> Tensor[(1, 16, 12), float64] {
  %597 = @func_7790() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %597.0
}

def @func_10764() -> (Tensor[(1, 16, 12), float64],) {
  %598 = @func_7267() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %599 = %598.0;
  (%599,)
}

def @func_9959() -> Tensor[(132), bool] {
  @func_8331() /* ty=Tensor[(132), bool] */
}

def @func_5425() -> Tensor[(132), bool] {
  %600 = @func_5003() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool], Tensor[(11, 7, 6), int16]) */;
  %600.2
}

def @func_9275() -> (Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float32], Tensor[(132), bool], Tensor[(13, 16, 12), uint32]) {
  %601 = @func_6631() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(13, 16, 12), uint32]) */;
  %602 = @func_5741() /* ty=Tensor[(13, 16, 12), uint32] */;
  %603 = %601.0;
  %604 = @func_5425() /* ty=Tensor[(132), bool] */;
  %605 = @func_5741() /* ty=Tensor[(13, 16, 12), uint32] */;
  (%602, %603, %604, %605)
}

def @func_4950() -> (Tensor[(4, 16, 12), float64],) {
  %606 = @func_3754() /* ty=Tensor[(1, 16, 12), float64] */;
  %607 = cast(%606, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %608 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 16, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 16, 12), float64] */;
  %609 = floor_divide(%607, %608) /* ty=Tensor[(4, 16, 12), float64] */;
  (%609,)
}

def @func_7924(%var_7911: Tensor[(3, 10, 11), float32], %var_7912: Tensor[(3, 10, 11), float32]) -> (Tensor[(3, 10, 11), float32], Tensor[(1, 16, 12), float64]) {
  %610 = cast(%var_7912, dtype="float32") /* ty=Tensor[(3, 10, 11), float32] */;
  %611 = shape_of(%var_7911, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%var_7911, dtype="float32") /* ty=Tensor[(3, 10, 11), float32] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %614 = divide(%612, %613) /* ty=Tensor[(3, 10, 11), float32] */;
  %615 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  (%614, %615)
}

def @func_9508() -> Tensor[(4, 16, 12), float64] {
  %616 = @func_7454() /* ty=Tensor[(4, 16, 12), float64] */;
  %617 = cast(%616, dtype="float64") /* ty=Tensor[(4, 16, 12), float64] */;
  atanh(%617) /* ty=Tensor[(4, 16, 12), float64] */
}

def @func_10979(%var_10975: Tensor[(12, 13, 1), float32]) -> Tensor[(12, 13, 1), float32] {
  %618 = cast(%var_10975, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  log10(%618) /* ty=Tensor[(12, 13, 1), float32] */
}

def @func_8448(%var_8442: Tensor[(1800), int8]) -> (Tensor[(13, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(1800), int8]) {
  %619 = cast(%var_8442, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %620 = reshape(%619, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %621 = @func_4481(%620) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */;
  %622 = @func_7609() /* ty=Tensor[(13, 16, 12), float64] */;
  %623 = %621.0;
  (%622, %623, %var_8442)
}

def @func_7702() -> (Tensor[(13, 16, 12), float64],) {
  %624 = @func_7061() /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) */;
  %625 = %624.0;
  %626 = cast(%625, dtype="float64") /* ty=Tensor[(13, 16, 12), float64] */;
  %627 = log(%626) /* ty=Tensor[(13, 16, 12), float64] */;
  (%627,)
}

def @func_10131() -> (Tensor[(?, 16, 12), bool],) {
  %628 = @func_7404() /* ty=(Tensor[(?, 16, 12), float32], Tensor[(?, 16, 12), bool]) */;
  %629 = %628.1;
  (%629,)
}

def @func_8393(%var_8378: Tensor[(12, 16, 5), int16]) -> (Tensor[(12, 16, 5), bool], Tensor[(16, 2, 16), float64], Tensor[(512), int16]) {
  %630 = cast(meta[relay.Constant][39] /* ty=Tensor[(12, 16, 5), int16] */, dtype="bool") /* ty=Tensor[(12, 16, 5), bool] */;
  %631 = shape_of(%var_8378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%var_8378, dtype="bool") /* ty=Tensor[(12, 16, 5), bool] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %634 = cast(meta[relay.Constant][40] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %635 = cast(meta[relay.Constant][40] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %636 = cast(meta[relay.Constant][40] /* ty=Tensor[(512), int16] */, dtype="float32") /* ty=Tensor[(512), float32] */;
  %637 = reshape(%634, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int16] */;
  %638 = reshape(%635, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int16] */;
  %639 = reshape(%636, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float32] */;
  %640 = @func_4164(%637, %638, %639) /* ty=(Tensor[(16, 2, 16), int16], Tensor[(16, 2, 16), float64], Tensor[(16, 2, 16), int32]) */;
  %641 = greater_equal(%632, %633) /* ty=Tensor[(12, 16, 5), bool] */;
  %642 = %640.1;
  (%641, %642, meta[relay.Constant][40] /* ty=Tensor[(512), int16] */)
}

def @func_5840() -> Tensor[(132), bool] {
  @func_5425() /* ty=Tensor[(132), bool] */
}

def @func_3654(%var_3633: Tensor[(8, 15, 15), int8], %var_3638: Tensor[(8, 15, 15), int8]) -> Tensor[(8, 15, 15), uint8] {
  %643 = cast(%var_3633, dtype="int8") /* ty=Tensor[(8, 15, 15), int8] */;
  %644 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(8, 15, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 15, 15), int8] */, dtype="int8") /* ty=Tensor[(8, 15, 15), int8] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %647 = logical_xor(%645, %646) /* ty=Tensor[(8, 15, 15), int8] */;
  %648 = cast(%var_3638, dtype="uint8") /* ty=Tensor[(8, 15, 15), uint8] */;
  %649 = shape_of(%647, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%647, dtype="uint8") /* ty=Tensor[(8, 15, 15), uint8] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  left_shift(%650, %651) /* ty=Tensor[(8, 15, 15), uint8] */
}

def @func_4665(%var_4620: int32, %var_4621: Tensor[(16), int32], %var_4650: Tensor[(2496), uint32]) -> (Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(2, 8, 1), float32], Tensor[(1800), int8], Tensor[(8, 15, 15), float32], Tensor[(13, 16, 12), float32], Tensor[(2496), uint32], Tensor[(4, 14, 3), int8], Tensor[(168), int8]) {
  %652 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %653 = cast(%var_4620, dtype="int32") /* ty=int32 */;
  %654 = cast(%var_4621, dtype="int32") /* ty=Tensor[(16), int32] */;
  %655 = reshape(%653, newshape=[]) /* ty=int32 */;
  %656 = reshape(%654, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int32] */;
  %657 = @func_786(%655, %656) /* ty=Tensor[(2, 8, 1), int32] */;
  %658 = cast(%657, dtype="float32") /* ty=Tensor[(2, 8, 1), float32] */;
  %659 = cast(%var_4620, dtype="float32") /* ty=float32 */;
  %660 = cast(meta[relay.Constant][42] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %661 = cast(meta[relay.Constant][42] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %662 = reshape(%660, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
  %663 = reshape(%661, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
  %664 = @func_3654(%662, %663) /* ty=Tensor[(8, 15, 15), uint8] */;
  %665 = cast(%664, dtype="float32") /* ty=Tensor[(8, 15, 15), float32] */;
  %666 = cast(%var_4650, dtype="uint32") /* ty=Tensor[(2496), uint32] */;
  %667 = reshape(%666, newshape=[13, 16, 12]) /* ty=Tensor[(13, 16, 12), uint32] */;
  %668 = @func_4268(%667) /* ty=(Tensor[(13, 16, 12), float32],) */;
  %669 = cast(%var_4620, dtype="int8") /* ty=int8 */;
  %670 = cast(meta[relay.Constant][43] /* ty=Tensor[(168), int8] */, dtype="int8") /* ty=Tensor[(168), int8] */;
  %671 = reshape(%669, newshape=[]) /* ty=int8 */;
  %672 = reshape(%670, newshape=[4, 14, 3]) /* ty=Tensor[(4, 14, 3), int8] */;
  %673 = %652.0;
  %674 = floor_mod(%658, %659) /* ty=Tensor[(2, 8, 1), float32] */;
  %675 = erf(%665) /* ty=Tensor[(8, 15, 15), float32] */;
  %676 = %668.0;
  %677 = @func_1647(%671, %672) /* ty=Tensor[(4, 14, 3), int8] */;
  (%673, %var_4621, %674, meta[relay.Constant][42] /* ty=Tensor[(1800), int8] */, %675, %676, %var_4650, %677, meta[relay.Constant][43] /* ty=Tensor[(168), int8] */)
}

def @func_7404() -> (Tensor[(?, 16, 12), float32], Tensor[(?, 16, 12), bool]) {
  %678 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
  %679 = @func_7267() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %680 = %679.0;
  %681 = cast(%680, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
  %682 = shape_of(%678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%678, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %685 = cast(%678, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %686 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%680, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %689 = maximum(%683, %684) /* ty=Tensor[(?, 16, 12), float32] */;
  %690 = less_equal(%687, %688) /* ty=Tensor[(?, 16, 12), bool] */;
  (%689, %690)
}

def @func_4236() -> (Tensor[(11, 7, 6), int16],) {
  %691 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %692 = %691.2;
  (%692,)
}

def @func_3477(%var_3472: Tensor[(3, 11, 4), bool], %var_3473: Tensor[(3, 11, 4), bool]) -> (Tensor[(3, 11, 4), bool],) {
  %693 = cast(%var_3473, dtype="bool") /* ty=Tensor[(3, 11, 4), bool] */;
  %694 = shape_of(%var_3472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%var_3472, dtype="bool") /* ty=Tensor[(3, 11, 4), bool] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %697 = logical_or(%695, %696) /* ty=Tensor[(3, 11, 4), bool] */;
  (%697,)
}

def @func_7790() -> (Tensor[(1, 16, 12), float64],) {
  %698 = @func_3754() /* ty=Tensor[(1, 16, 12), float64] */;
  (%698,)
}

def @func_4972() -> Tensor[(13, 16, 12), uint32] {
  %699 = @func_4816() /* ty=(Tensor[(13, 16, 12), uint32],) */;
  %699.0
}

def @func_8153(%var_8129: int32, %var_8150: Tensor[(1536), float32]) -> (Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(512), int16], int32, Tensor[(13, 16, 12), uint32], int32, Tensor[(1920), float64], Tensor[(1536), float32]) {
  %700 = cast(meta[relay.Constant][44] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %701 = cast(%var_8129, dtype="int32") /* ty=int32 */;
  %702 = reshape(%700, newshape=[256, 2]) /* ty=Tensor[(256, 2), int16] */;
  %703 = reshape(%701, newshape=[]) /* ty=int32 */;
  %704 = @func_5698(%702, %703) /* ty=(Tensor[(462), int16], Tensor[(1, 16, 12), float32], Tensor[(16), int32], Tensor[(256, 2), int16], int32, Tensor[(16), int32], Tensor[(11, 7, 6), int16]) */;
  %705 = @func_4816() /* ty=(Tensor[(13, 16, 12), uint32],) */;
  %706 = cast(meta[relay.Constant][45] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %707 = cast(%var_8150, dtype="float32") /* ty=Tensor[(1536), float32] */;
  %708 = reshape(%706, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %709 = reshape(%707, newshape=[1536]) /* ty=Tensor[(1536), float32] */;
  %710 = @func_4791(%708, %709) /* ty=(Tensor[(10, 16, 12), int16], int32, Tensor[(1536), float32], int32) */;
  %711 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %712 = %704.5;
  %713 = %705.0;
  %714 = %710.3;
  (%711, %712, meta[relay.Constant][44] /* ty=Tensor[(512), int16] */, %var_8129, %713, %714, meta[relay.Constant][45] /* ty=Tensor[(1920), float64] */, %var_8150)
}

def @func_8106(%var_8099: int8) -> (Tensor[(13, 16, 12), uint32], Tensor[(2, 8, 1), int32], int8) {
  %715 = cast(%var_8099, dtype="int8") /* ty=int8 */;
  %716 = reshape(%715, newshape=[]) /* ty=int8 */;
  %717 = @func_2639(%716) /* ty=(Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(5, 7, 3), bool], Tensor[(2, 8, 1), int32], Tensor[(4, 4), int32]) */;
  %718 = @func_4209() /* ty=Tensor[(13, 16, 12), uint32] */;
  %719 = %717.3;
  (%718, %719, %var_8099)
}

def @func_10025() -> Tensor[(1, 16, 12), float32] {
  @func_9227() /* ty=Tensor[(1, 16, 12), float32] */
}

def @func_10708(%var_10675: Tensor[(660), float32], %var_10691: Tensor[(4, 16, 12), float64]) -> (Tensor[(330), float32], Tensor[(660), float32], Tensor[(4, 16, 12), float32], Tensor[(13, 16, 12), float64]) {
  %720 = cast(%var_10675, dtype="float32") /* ty=Tensor[(660), float32] */;
  %721 = reshape(%720, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), float32] */;
  %722 = @func_8643(%721) /* ty=(Tensor[(10, 6, 11), float32], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) */;
  %723 = @func_7790() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %724 = %723.0;
  %725 = cast(%724, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
  %726 = cast(%var_10691, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %727 = %722.2;
  %728 = floor_mod(%725, %726) /* ty=Tensor[(4, 16, 12), float32] */;
  %729 = @func_7609() /* ty=Tensor[(13, 16, 12), float64] */;
  (%727, %var_10675, %728, %729)
}

def @func_4455(%var_4424: Tensor[(6, 14, 11), uint16], %var_4425: Tensor[(6, 14, 11), uint16]) -> (Tensor[(6, 14, 11), uint16], Tensor[(6, 14, 11), float32]) {
  %730 = cast(%var_4425, dtype="uint16") /* ty=Tensor[(6, 14, 11), uint16] */;
  %731 = shape_of(%var_4424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(%var_4424, dtype="uint16") /* ty=Tensor[(6, 14, 11), uint16] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %734 = cast(%var_4425, dtype="float32") /* ty=Tensor[(6, 14, 11), float32] */;
  %735 = subtract(%732, %733) /* ty=Tensor[(6, 14, 11), uint16] */;
  %736 = exp(%734) /* ty=Tensor[(6, 14, 11), float32] */;
  (%735, %736)
}

def @func_10771() -> (Tensor[(1, 16, 12), float32],) {
  %737 = @func_9227() /* ty=Tensor[(1, 16, 12), float32] */;
  (%737,)
}

def @func_6046(%var_6003: Tensor[(5, 16, 12), float64]) -> (Tensor[(5, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(4, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  %738 = @func_5463() /* ty=Tensor[(1, 16, 12), float64] */;
  %739 = cast(%738, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
  %740 = cast(%var_6003, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
  %741 = @func_4950() /* ty=(Tensor[(4, 16, 12), float64],) */;
  %742 = cast(%738, dtype="int16") /* ty=Tensor[(1, 16, 12), int16] */;
  %743 = cast(%var_6003, dtype="int16") /* ty=Tensor[(5, 16, 12), int16] */;
  %744 = bitwise_xor(%742, %743) /* ty=Tensor[(5, 16, 12), int16] */;
  %745 = cast(%744, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
  %746 = floor_mod(%739, %740) /* ty=Tensor[(5, 16, 12), float32] */;
  %747 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
  %748 = %741.0;
  %749 = asinh(%745) /* ty=Tensor[(5, 16, 12), float32] */;
  (%746, %747, %748, %749)
}

def @func_6589() -> (Tensor[(11, 7, 6), int16],) {
  %750 = @func_4236() /* ty=(Tensor[(11, 7, 6), int16],) */;
  %751 = %750.0;
  (%751,)
}

def @func_4530() -> (Tensor[(1, 16, 12), float64], Tensor[(9, 5, 6), float64], float64, Tensor[(270), float64]) {
  %752 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
  %753 = cast(%752, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %754 = cast(-6.75912f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %755 = cast(meta[relay.Constant][46] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %756 = reshape(%754, newshape=[]) /* ty=float64 */;
  %757 = reshape(%755, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), float64] */;
  %758 = sigmoid(%753) /* ty=Tensor[(1, 16, 12), float64] */;
  %759 = @func_1323(%756, %757) /* ty=Tensor[(9, 5, 6), float64] */;
  (%758, %759, -6.75912f64 /* ty=float64 */, meta[relay.Constant][46] /* ty=Tensor[(270), float64] */)
}

def @func_4268(%var_4252: Tensor[(13, 16, 12), uint32]) -> (Tensor[(13, 16, 12), float32],) {
  %760 = @func_4209() /* ty=Tensor[(13, 16, 12), uint32] */;
  %761 = cast(%var_4252, dtype="float32") /* ty=Tensor[(13, 16, 12), float32] */;
  %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%760, dtype="float32") /* ty=Tensor[(13, 16, 12), float32] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %765 = subtract(%763, %764) /* ty=Tensor[(13, 16, 12), float32] */;
  (%765,)
}

def @func_10574(%var_10566: Tensor[(13, 16, 12), float32]) -> (Tensor[(13, 16, 12), float32],) {
  %766 = @func_10025() /* ty=Tensor[(1, 16, 12), float32] */;
  %767 = cast(%766, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
  %768 = cast(%var_10566, dtype="float32") /* ty=Tensor[(13, 16, 12), float32] */;
  %769 = divide(%767, %768) /* ty=Tensor[(13, 16, 12), float32] */;
  (%769,)
}

def @func_11113() -> (Tensor[(462), int16], Tensor[(?, 16, 12), bool]) {
  %770 = @func_10362() /* ty=(Tensor[(13, 16, 12), bool], Tensor[(1, 16, 12), float64], Tensor[(13, 12, 4), float64], Tensor[(624), float64], int32, Tensor[(275, 2), int8], Tensor[(132), bool], Tensor[(132), bool], Tensor[(13, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %771 = @func_10131() /* ty=(Tensor[(?, 16, 12), bool],) */;
  %772 = %770.10;
  %773 = %771.0;
  (%772, %773)
}

def @func_8594() -> Tensor[(13, 16, 12), uint32] {
  @func_4972() /* ty=Tensor[(13, 16, 12), uint32] */
}

def @func_9713(%var_9688: Tensor[(13, 15, 13), float64]) -> (Tensor[(13, 15, 13), float64], Tensor[(1, 16, 12), float32], Tensor[(11, 7, 6), int16]) {
  %774 = cast(%var_9688, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
  %775 = @func_8731() /* ty=(Tensor[(1, 16, 12), float32],) */;
  %776 = @func_8231() /* ty=(Tensor[(13, 16, 12), float64], int32, Tensor[(24, 80), float64], Tensor[(1536), float32], Tensor[(11, 7, 6), int16]) */;
  %777 = erf(%774) /* ty=Tensor[(13, 15, 13), float64] */;
  %778 = %775.0;
  %779 = %776.4;
  (%777, %778, %779)
}

def @func_5037() -> Tensor[(11, 7, 6), int16] {
  %780 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %780.2
}

def @func_9575(%var_9552: Tensor[(960), int16]) -> (Tensor[(1, 16, 12), float64], Tensor[(16, 2, 16), float64], Tensor[(960), int16]) {
  %781 = cast(%var_9552, dtype="int16") /* ty=Tensor[(960), int16] */;
  %782 = reshape(%781, newshape=[12, 16, 5]) /* ty=Tensor[(12, 16, 5), int16] */;
  %783 = @func_8393(%782) /* ty=(Tensor[(12, 16, 5), bool], Tensor[(16, 2, 16), float64], Tensor[(512), int16]) */;
  %784 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %785 = %783.1;
  (%784, %785, %var_9552)
}

def @func_7267() -> (Tensor[(1, 16, 12), float64],) {
  %786 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
  (%786,)
}

def @func_4065() -> Tensor[(1, 16, 12), float64] {
  %787 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %787.0
}

def @func_6288() -> Tensor[(1, 16, 12), float64] {
  %788 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %788.1
}

def @func_7038(%var_7009: Tensor[(1800), int8]) -> (Tensor[(11, 7, 6), int16], Tensor[(13, 16, 12), float32], Tensor[(2496), uint32], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) {
  %789 = @func_6421() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) */;
  %790 = cast(meta[relay.Constant][47] /* ty=Tensor[(2496), uint32] */, dtype="uint32") /* ty=Tensor[(2496), uint32] */;
  %791 = reshape(%790, newshape=[13, 16, 12]) /* ty=Tensor[(13, 16, 12), uint32] */;
  %792 = @func_4268(%791) /* ty=(Tensor[(13, 16, 12), float32],) */;
  %793 = cast(%var_7009, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %794 = reshape(%793, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %795 = @func_4481(%794) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */;
  %796 = %789.0;
  %797 = %792.0;
  %798 = %795.1;
  (%796, %797, meta[relay.Constant][47] /* ty=Tensor[(2496), uint32] */, %798, %var_7009)
}

def @func_5741() -> Tensor[(13, 16, 12), uint32] {
  @func_4972() /* ty=Tensor[(13, 16, 12), uint32] */
}

def @func_6677(%var_6661: Tensor[(3, 13, 9), float64]) -> (Tensor[(3, 13, 9), float64], Tensor[(13, 16, 12), uint32]) {
  %799 = cast(%var_6661, dtype="float64") /* ty=Tensor[(3, 13, 9), float64] */;
  %800 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(3, 13, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 13, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 13, 9), float64] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %803 = floor_divide(%801, %802) /* ty=Tensor[(3, 13, 9), float64] */;
  %804 = @func_4972() /* ty=Tensor[(13, 16, 12), uint32] */;
  (%803, %804)
}

def @func_5563(%var_5502: Tensor[(2, 16, 12), float64], %var_5556: Tensor[(2, 16, 12), float64]) -> (Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), uint32], Tensor[(2, 16, 12), uint32], Tensor[(1, 16, 12), float64], Tensor[(2, 16, 12), float64]) {
  %805 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %806 = %805.0;
  %807 = cast(%806, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %808 = cast(%var_5502, dtype="bool") /* ty=Tensor[(2, 16, 12), bool] */;
  %809 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 16, 12), float64] */, dtype="uint32") /* ty=Tensor[(2, 16, 12), uint32] */;
  %810 = shape_of(%var_5502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %811 = cast(%var_5502, dtype="uint32") /* ty=Tensor[(2, 16, 12), uint32] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %813 = cast(%806, dtype="uint32") /* ty=Tensor[(1, 16, 12), uint32] */;
  %814 = cast(%var_5502, dtype="uint32") /* ty=Tensor[(2, 16, 12), uint32] */;
  %815 = @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */;
  %816 = cast(%var_5556, dtype="float64") /* ty=Tensor[(2, 16, 12), float64] */;
  %817 = shape_of(%var_5502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%var_5502, dtype="float64") /* ty=Tensor[(2, 16, 12), float64] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %820 = greater(%807, %808) /* ty=Tensor[(2, 16, 12), bool] */;
  %821 = logical_xor(%811, %812) /* ty=Tensor[(2, 16, 12), uint32] */;
  %822 = bitwise_or(%813, %814) /* ty=Tensor[(2, 16, 12), uint32] */;
  %823 = %815.1;
  %824 = power(%818, %819) /* ty=Tensor[(2, 16, 12), float64] */;
  (%820, %821, %822, %823, %824)
}

def @func_10505(%var_10501: Tensor[(2, 9, 10), float64]) -> (Tensor[(2, 9, 10), float64],) {
  %825 = cast(%var_10501, dtype="float64") /* ty=Tensor[(2, 9, 10), float64] */;
  %826 = exp(%825) /* ty=Tensor[(2, 9, 10), float64] */;
  (%826,)
}

def @func_3050(%var_2988: Tensor[(12, 16, 8), float32], %var_3013: int32) -> (Tensor[(12, 16, 8), float32], int32, Tensor[(2, 8), int32], Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(2, 8, 168), bool]) {
  %827 = cast(%var_2988, dtype="float32") /* ty=Tensor[(12, 16, 8), float32] */;
  %828 = cast(%var_3013, dtype="int8") /* ty=int8 */;
  %829 = cast(meta[relay.Constant][51] /* ty=Tensor[(168), int8] */, dtype="int8") /* ty=Tensor[(168), int8] */;
  %830 = reshape(%828, newshape=[]) /* ty=int8 */;
  %831 = reshape(%829, newshape=[4, 14, 3]) /* ty=Tensor[(4, 14, 3), int8] */;
  %832 = cast(%var_3013, dtype="int8") /* ty=int8 */;
  %833 = reshape(%832, newshape=[]) /* ty=int8 */;
  %834 = @func_2639(%833) /* ty=(Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(5, 7, 3), bool], Tensor[(2, 8, 1), int32], Tensor[(4, 4), int32]) */;
  %835 = cast(%var_3013, dtype="int32") /* ty=int32 */;
  %836 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 8), int32] */, dtype="int32") /* ty=Tensor[(2, 8), int32] */;
  %837 = reshape(%835, newshape=[]) /* ty=int32 */;
  %838 = reshape(%836, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int32] */;
  %839 = @func_786(%837, %838) /* ty=Tensor[(2, 8, 1), int32] */;
  %840 = cast(%839, dtype="bool") /* ty=Tensor[(2, 8, 1), bool] */;
  %841 = cast(meta[relay.Constant][51] /* ty=Tensor[(168), int8] */, dtype="bool") /* ty=Tensor[(168), bool] */;
  %842 = rsqrt(%827) /* ty=Tensor[(12, 16, 8), float32] */;
  %843 = @func_1647(%830, %831) /* ty=Tensor[(4, 14, 3), int8] */;
  %844 = %834.1;
  %845 = not_equal(%840, %841) /* ty=Tensor[(2, 8, 168), bool] */;
  (%842, %var_3013, meta[relay.Constant][50] /* ty=Tensor[(2, 8), int32] */, %843, %844, %845)
}

def @func_5322(%var_5265: Tensor[(1536, 1), float32]) -> (Tensor[(4, 16, 12), float64], Tensor[(10, 16, 12), int16], Tensor[(1536, 1920), bool], Tensor[(1, 16, 12), float64], Tensor[(168), int8], Tensor[(550), uint16]) {
  %846 = @func_4950() /* ty=(Tensor[(4, 16, 12), float64],) */;
  %847 = cast(meta[relay.Constant][52] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %848 = cast(%var_5265, dtype="float32") /* ty=Tensor[(1536, 1), float32] */;
  %849 = reshape(%847, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %850 = reshape(%848, newshape=[1536]) /* ty=Tensor[(1536), float32] */;
  %851 = @func_4791(%849, %850) /* ty=(Tensor[(10, 16, 12), int16], int32, Tensor[(1536), float32], int32) */;
  %852 = cast(%var_5265, dtype="bool") /* ty=Tensor[(1536, 1), bool] */;
  %853 = cast(meta[relay.Constant][52] /* ty=Tensor[(1920), float64] */, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %854 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %855 = cast(meta[relay.Constant][53] /* ty=Tensor[(550), uint16] */, dtype="uint16") /* ty=Tensor[(550), uint16] */;
  %856 = reshape(%855, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), uint16] */;
  %857 = @func_5133(%856) /* ty=(Tensor[(11, 10, 5), uint16], Tensor[(168), int8], int32, Tensor[(16), int32], Tensor[(2496), uint32]) */;
  %858 = %846.0;
  %859 = %851.0;
  %860 = greater_equal(%852, %853) /* ty=Tensor[(1536, 1920), bool] */;
  %861 = %854.1;
  %862 = %857.1;
  (%858, %859, %860, %861, %862, meta[relay.Constant][53] /* ty=Tensor[(550), uint16] */)
}

def @func_3719() -> (Tensor[(1, 16, 12), float64],) {
  %863 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 16, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %864 = log10(%863) /* ty=Tensor[(1, 16, 12), float64] */;
  (%864,)
}

def @func_5401(%var_5349: Tensor[(14, 16, 12), float64], %var_5371: Tensor[(1800), int8], %var_5386: Tensor[(1536), float32], %var_5396: int8) -> (Tensor[(14, 16, 12), float64], Tensor[(6, 16, 12), uint32], Tensor[(1800), int8], Tensor[(1800), int8], Tensor[(1, 16, 12), float64], Tensor[(1536), float32], Tensor[(13, 16, 12), uint32], Tensor[(168, 1), int8], int8) {
  %865 = @func_3719() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %866 = %865.0;
  %867 = cast(%866, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %868 = cast(%var_5349, dtype="float64") /* ty=Tensor[(14, 16, 12), float64] */;
  %869 = cast(%866, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %870 = tan(%869) /* ty=Tensor[(1, 16, 12), float64] */;
  %871 = cast(%870, dtype="uint32") /* ty=Tensor[(1, 16, 12), uint32] */;
  %872 = cast(meta[relay.Constant][55] /* ty=Tensor[(6, 16, 12), float64] */, dtype="uint32") /* ty=Tensor[(6, 16, 12), uint32] */;
  %873 = cast(%var_5371, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %874 = reshape(%873, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %875 = @func_4481(%874) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */;
  %876 = cast(%var_5386, dtype="float32") /* ty=Tensor[(1536), float32] */;
  %877 = reshape(%876, newshape=[1536, 1]) /* ty=Tensor[(1536, 1), float32] */;
  %878 = @func_5322(%877) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(10, 16, 12), int16], Tensor[(1536, 1920), bool], Tensor[(1, 16, 12), float64], Tensor[(168), int8], Tensor[(550), uint16]) */;
  %879 = @func_4816() /* ty=(Tensor[(13, 16, 12), uint32],) */;
  %880 = cast(%var_5396, dtype="int8") /* ty=int8 */;
  %881 = reshape(%880, newshape=[]) /* ty=int8 */;
  %882 = @func_2639(%881) /* ty=(Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(5, 7, 3), bool], Tensor[(2, 8, 1), int32], Tensor[(4, 4), int32]) */;
  %883 = power(%867, %868) /* ty=Tensor[(14, 16, 12), float64] */;
  %884 = bitwise_xor(%871, %872) /* ty=Tensor[(6, 16, 12), uint32] */;
  %885 = %875.2;
  %886 = %878.3;
  %887 = %879.0;
  %888 = %882.1;
  (%883, %884, %885, %var_5371, %886, %var_5386, %887, %888, %var_5396)
}

def @func_10248() -> Tensor[(1, 16, 12), float64] {
  @func_6288() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_7586() -> Tensor[(1, 16, 12), float64] {
  %889 = @func_7267() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %889.0
}

def @func_7893(%var_7810: Tensor[(132), bool], %var_7826: Tensor[(1800, 1), int8], %var_7886: Tensor[(400), uint64]) -> (Tensor[(11, 7, 6), int16], Tensor[(3, 11, 4), bool], Tensor[(132), bool], Tensor[(1800), int8], Tensor[(1800, 1), int8], Tensor[(4, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(1536), float32], Tensor[(400), uint64], Tensor[(384), float64], Tensor[(132), bool]) {
  %890 = @func_4236() /* ty=(Tensor[(11, 7, 6), int16],) */;
  %891 = cast(%var_7810, dtype="bool") /* ty=Tensor[(132), bool] */;
  %892 = reshape(%891, newshape=[132]) /* ty=Tensor[(132), bool] */;
  %893 = @func_4026(%892) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool]) */;
  %894 = cast(%var_7826, dtype="int8") /* ty=Tensor[(1800, 1), int8] */;
  %895 = reshape(%894, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %896 = @func_4481(%895) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */;
  %897 = @func_7061() /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) */;
  %898 = cast(%var_7886, dtype="uint64") /* ty=Tensor[(400), uint64] */;
  %899 = cast(meta[relay.Constant][56] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %900 = reshape(%898, newshape=[8, 5, 10]) /* ty=Tensor[(8, 5, 10), uint64] */;
  %901 = reshape(%899, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %902 = @func_7141(%900, %901) /* ty=(Tensor[(8, 5, 10), bool], Tensor[(1536), float32], Tensor[(1536), float32], Tensor[(8, 5, 10), int16], Tensor[(9, 5, 6), float64], Tensor[(30, 9), float64], Tensor[(2, 16, 12), bool], Tensor[(384), float64], Tensor[(550), float32]) */;
  %903 = %890.0;
  %904 = %893.1;
  %905 = %896.2;
  %906 = @func_7454() /* ty=Tensor[(4, 16, 12), float64] */;
  %907 = %897.1;
  %908 = %902.1;
  %909 = @func_5425() /* ty=Tensor[(132), bool] */;
  (%903, %904, %var_7810, %905, %var_7826, %906, %907, %908, %var_7886, meta[relay.Constant][56] /* ty=Tensor[(384), float64] */, %909)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9043() -> (Tensor[(1, 16, 12), float64], Tensor[(?, 960), int16], Tensor[(1, 16, 12), float64], Tensor[(330), float32], Tensor[(?, 960), bool], Tensor[(?, 960), bool], Tensor[(512), int16], int32) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 960), float64] */, dtype="float64") /* ty=Tensor[(1, 960), float64] */;
  %1 = reshape(%0, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), float64] */;
  %2 = @func_6046(%1) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(4, 16, 12), float64], Tensor[(5, 16, 12), float32]) */;
  %3 = %2.0;
  %4 = cast(%3, dtype="int16") /* ty=Tensor[(5, 16, 12), int16] */;
  %5 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(1, 960), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 960), float64] */, dtype="int16") /* ty=Tensor[(1, 960), int16] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %10 = reshape(%8, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %11 = reshape(%9, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %12 = @func_7924(%10, %11) /* ty=(Tensor[(3, 10, 11), float32], Tensor[(1, 16, 12), float64]) */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 960), float64] */, dtype="float32") /* ty=Tensor[(1, 960), float32] */;
  %14 = rsqrt(%13) /* ty=Tensor[(1, 960), float32] */;
  %15 = cast(%14, dtype="float32") /* ty=Tensor[(1, 960), float32] */;
  %16 = asin(%15) /* ty=Tensor[(1, 960), float32] */;
  %17 = cast(%16, dtype="bool") /* ty=Tensor[(1, 960), bool] */;
  %18 = shape_of(%14, dtype="int32") /* ty=Tensor[(2), int32] */;
  %19 = cast(%14, dtype="bool") /* ty=Tensor[(1, 960), bool] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %21 = cast(%14, dtype="float64") /* ty=Tensor[(1, 960), float64] */;
  %22 = shape_of(%16, dtype="int32") /* ty=Tensor[(2), int32] */;
  %23 = cast(%16, dtype="float64") /* ty=Tensor[(1, 960), float64] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %25 = power(%23, %24) /* ty=Tensor[(?, 960), float64] */;
  %26 = cast(%25, dtype="bool") /* ty=Tensor[(?, 960), bool] */;
  %27 = shape_of(%14, dtype="int32") /* ty=Tensor[(2), int32] */;
  %28 = cast(%14, dtype="bool") /* ty=Tensor[(1, 960), bool] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %30 = cast(7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %31 = reshape(%30, newshape=[]) /* ty=int32 */;
  %32 = @func_6268(%31) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(512), int16], int32, Tensor[(1, 16), int32]) */;
  %33 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %34 = bitwise_and(%6, %7) /* ty=Tensor[(?, 960), int16] */;
  %35 = %12.1;
  %36 = equal(%19, %20) /* ty=Tensor[(?, 960), bool] */;
  %37 = less(%28, %29) /* ty=Tensor[(?, 960), bool] */;
  %38 = %32.2;
  (%33, %34, %35, meta[relay.Constant][1] /* ty=Tensor[(330), float32] */, %36, %37, %38, 7 /* ty=int32 */)
}

def @func_9229() -> Tensor[(1, 16, 12), float32] {
  @func_9227() /* ty=Tensor[(1, 16, 12), float32] */
}

def @func_10249() -> Tensor[(1, 16, 12), float64] {
  %39 = fn () -> Tensor[(1, 16, 12), float64] {
    @func_6288() /* ty=Tensor[(1, 16, 12), float64] */
  };
  %39() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_7893(%var_7810: Tensor[(132), bool], %var_7826: Tensor[(1800, 1), int8], %var_7886: Tensor[(400), uint64]) -> (Tensor[(11, 7, 6), int16], Tensor[(3, 11, 4), bool], Tensor[(132), bool], Tensor[(1800), int8], Tensor[(1800, 1), int8], Tensor[(4, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(1536), float32], Tensor[(400), uint64], Tensor[(384), float64], Tensor[(132), bool]) {
  %40 = @func_4236() /* ty=(Tensor[(11, 7, 6), int16],) */;
  %41 = cast(%var_7810, dtype="bool") /* ty=Tensor[(132), bool] */;
  %42 = reshape(%41, newshape=[132]) /* ty=Tensor[(132), bool] */;
  %43 = @func_4026(%42) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool]) */;
  %44 = cast(%var_7826, dtype="int8") /* ty=Tensor[(1800, 1), int8] */;
  %45 = reshape(%44, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %46 = @func_4481(%45) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */;
  %47 = @func_7061() /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) */;
  %48 = cast(%var_7886, dtype="uint64") /* ty=Tensor[(400), uint64] */;
  %49 = cast(meta[relay.Constant][2] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %50 = reshape(%48, newshape=[8, 5, 10]) /* ty=Tensor[(8, 5, 10), uint64] */;
  %51 = reshape(%49, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %52 = @func_7141(%50, %51) /* ty=(Tensor[(8, 5, 10), bool], Tensor[(1536), float32], Tensor[(1536), float32], Tensor[(8, 5, 10), int16], Tensor[(9, 5, 6), float64], Tensor[(30, 9), float64], Tensor[(2, 16, 12), bool], Tensor[(384), float64], Tensor[(550), float32]) */;
  %53 = %40.0;
  %54 = %43.1;
  %55 = %46.2;
  %56 = @func_7454() /* ty=Tensor[(4, 16, 12), float64] */;
  %57 = %47.1;
  %58 = %52.1;
  %59 = @func_5425() /* ty=Tensor[(132), bool] */;
  (%53, %54, %var_7810, %55, %var_7826, %56, %57, %58, %var_7886, meta[relay.Constant][2] /* ty=Tensor[(384), float64] */, %59)
}

def @func_8233() -> (Tensor[(13, 16, 12), float64], int32, Tensor[(24, 80), float64], Tensor[(1536), float32], Tensor[(11, 7, 6), int16]) {
  @func_8231() /* ty=(Tensor[(13, 16, 12), float64], int32, Tensor[(24, 80), float64], Tensor[(1536), float32], Tensor[(11, 7, 6), int16]) */
}

def @func_7404() -> (Tensor[(?, 16, 12), float32], Tensor[(?, 16, 12), bool]) {
  %60 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
  %61 = @func_7267() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %62 = %61.0;
  %63 = cast(%62, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
  %64 = shape_of(%60, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(%60, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %67 = cast(%60, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %68 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%62, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %71 = maximum(%65, %66) /* ty=Tensor[(?, 16, 12), float32] */;
  %72 = less_equal(%69, %70) /* ty=Tensor[(?, 16, 12), bool] */;
  (%71, %72)
}

def @func_3835() -> Tensor[(1, 16, 12), float64] {
  %73 = @func_3719() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %73.0
}

def @func_4669(%var_4666: int32, %var_4667: Tensor[(16), int32], %var_4668: Tensor[(2496), uint32]) -> (Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(2, 8, 1), float32], Tensor[(1800), int8], Tensor[(8, 15, 15), float32], Tensor[(13, 16, 12), float32], Tensor[(2496), uint32], Tensor[(4, 14, 3), int8], Tensor[(168), int8]) {
  %100 = fn (%var_4620: int32, %var_4621: Tensor[(16), int32], %var_4650: Tensor[(2496), uint32]) -> (Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(2, 8, 1), float32], Tensor[(1800), int8], Tensor[(8, 15, 15), float32], Tensor[(13, 16, 12), float32], Tensor[(2496), uint32], Tensor[(4, 14, 3), int8], Tensor[(168), int8]) {
    %74 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
    %75 = cast(%var_4620, dtype="int32") /* ty=int32 */;
    %76 = cast(%var_4621, dtype="int32") /* ty=Tensor[(16), int32] */;
    %77 = reshape(%75, newshape=[]) /* ty=int32 */;
    %78 = reshape(%76, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int32] */;
    %79 = @func_786(%77, %78) /* ty=Tensor[(2, 8, 1), int32] */;
    %80 = cast(%79, dtype="float32") /* ty=Tensor[(2, 8, 1), float32] */;
    %81 = cast(%var_4620, dtype="float32") /* ty=float32 */;
    %82 = cast(meta[relay.Constant][3] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
    %83 = cast(meta[relay.Constant][3] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
    %84 = reshape(%82, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
    %85 = reshape(%83, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
    %86 = @func_3654(%84, %85) /* ty=Tensor[(8, 15, 15), uint8] */;
    %87 = cast(%86, dtype="float32") /* ty=Tensor[(8, 15, 15), float32] */;
    %88 = cast(%var_4650, dtype="uint32") /* ty=Tensor[(2496), uint32] */;
    %89 = reshape(%88, newshape=[13, 16, 12]) /* ty=Tensor[(13, 16, 12), uint32] */;
    %90 = @func_4268(%89) /* ty=(Tensor[(13, 16, 12), float32],) */;
    %91 = cast(%var_4620, dtype="int8") /* ty=int8 */;
    %92 = cast(meta[relay.Constant][4] /* ty=Tensor[(168), int8] */, dtype="int8") /* ty=Tensor[(168), int8] */;
    %93 = reshape(%91, newshape=[]) /* ty=int8 */;
    %94 = reshape(%92, newshape=[4, 14, 3]) /* ty=Tensor[(4, 14, 3), int8] */;
    %95 = %74.0;
    %96 = floor_mod(%80, %81) /* ty=Tensor[(2, 8, 1), float32] */;
    %97 = erf(%87) /* ty=Tensor[(8, 15, 15), float32] */;
    %98 = %90.0;
    %99 = @func_1647(%93, %94) /* ty=Tensor[(4, 14, 3), int8] */;
    (%95, %var_4621, %96, meta[relay.Constant][3] /* ty=Tensor[(1800), int8] */, %97, %98, %var_4650, %99, meta[relay.Constant][4] /* ty=Tensor[(168), int8] */)
  };
  %100(%var_4666, %var_4667, %var_4668) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(2, 8, 1), float32], Tensor[(1800), int8], Tensor[(8, 15, 15), float32], Tensor[(13, 16, 12), float32], Tensor[(2496), uint32], Tensor[(4, 14, 3), int8], Tensor[(168), int8]) */
}

def @func_4386(%var_4385: Tensor[(1, 16, 12), float64]) -> (Tensor[(?, 16, 12), uint16],) {
  %107 = fn (%var_4369: Tensor[(1, 16, 12), float64]) -> (Tensor[(?, 16, 12), uint16],) {
    %101 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
    %102 = cast(%var_4369, dtype="uint16") /* ty=Tensor[(1, 16, 12), uint16] */;
    %103 = shape_of(%101, dtype="int32") /* ty=Tensor[(3), int32] */;
    %104 = cast(%101, dtype="uint16") /* ty=Tensor[(1, 16, 12), uint16] */;
    %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %106 = multiply(%104, %105) /* ty=Tensor[(?, 16, 12), uint16] */;
    (%106,)
  };
  %107(%var_4385) /* ty=(Tensor[(?, 16, 12), uint16],) */
}

def @func_9715(%var_9714: Tensor[(13, 15, 13), float64]) -> (Tensor[(13, 15, 13), float64], Tensor[(1, 16, 12), float32], Tensor[(11, 7, 6), int16]) {
  %114 = fn (%var_9688: Tensor[(13, 15, 13), float64]) -> (Tensor[(13, 15, 13), float64], Tensor[(1, 16, 12), float32], Tensor[(11, 7, 6), int16]) {
    %108 = cast(%var_9688, dtype="float64") /* ty=Tensor[(13, 15, 13), float64] */;
    %109 = @func_8731() /* ty=(Tensor[(1, 16, 12), float32],) */;
    %110 = @func_8231() /* ty=(Tensor[(13, 16, 12), float64], int32, Tensor[(24, 80), float64], Tensor[(1536), float32], Tensor[(11, 7, 6), int16]) */;
    %111 = erf(%108) /* ty=Tensor[(13, 15, 13), float64] */;
    %112 = %109.0;
    %113 = %110.4;
    (%111, %112, %113)
  };
  %114(%var_9714) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(1, 16, 12), float32], Tensor[(11, 7, 6), int16]) */
}

def @func_8645(%var_8644: Tensor[(10, 6, 11), float32]) -> (Tensor[(10, 6, 11), float32], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) {
  %123 = fn (%var_8602: Tensor[(10, 6, 11), float32]) -> (Tensor[(10, 6, 11), float32], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) {
    %115 = cast(%var_8602, dtype="float32") /* ty=Tensor[(10, 6, 11), float32] */;
    %116 = cast(meta[relay.Constant][5] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %117 = cast(meta[relay.Constant][5] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %118 = reshape(%116, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
    %119 = reshape(%117, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
    %120 = @func_7924(%118, %119) /* ty=(Tensor[(3, 10, 11), float32], Tensor[(1, 16, 12), float64]) */;
    %121 = cosh(%115) /* ty=Tensor[(10, 6, 11), float32] */;
    %122 = %120.0;
    (%121, %122, meta[relay.Constant][5] /* ty=Tensor[(330), float32] */)
  };
  %123(%var_8644) /* ty=(Tensor[(10, 6, 11), float32], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) */
}

def @func_3932() -> (Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) {
  %135 = fn () -> (Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) {
    %124 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
    %125 = %124.0;
    %126 = cast(%125, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
    %127 = cast(meta[relay.Constant][6] /* ty=Tensor[(462), int16] */, dtype="int16") /* ty=Tensor[(462), int16] */;
    %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(462), int16] */, dtype="int16") /* ty=Tensor[(462), int16] */;
    %129 = reshape(%127, newshape=[11, 7, 6]) /* ty=Tensor[(11, 7, 6), int16] */;
    %130 = reshape(%128, newshape=[11, 7, 6]) /* ty=Tensor[(11, 7, 6), int16] */;
    %131 = @func_1880(%129, %130) /* ty=(Tensor[(11, 7, 6), int16],) */;
    %132 = sqrt(%126) /* ty=Tensor[(1, 16, 12), float32] */;
    %133 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
    %134 = %131.0;
    (%132, %133, %134, meta[relay.Constant][6] /* ty=Tensor[(462), int16] */)
  };
  %135() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */
}

def @func_4952() -> (Tensor[(4, 16, 12), float64],) {
  @func_4950() /* ty=(Tensor[(4, 16, 12), float64],) */
}

def @func_790(%var_788: int32, %var_789: Tensor[(2, 8, 1), int32]) -> Tensor[(2, 8, 1), int32] {
  @func_786(%var_788, %var_789) /* ty=Tensor[(2, 8, 1), int32] */
}

def @func_7524() -> Tensor[(11, 7, 6), int16] {
  %136 = fn () -> Tensor[(11, 7, 6), int16] {
    @func_5037() /* ty=Tensor[(11, 7, 6), int16] */
  };
  %136() /* ty=Tensor[(11, 7, 6), int16] */
}

def @func_3657(%var_3655: Tensor[(8, 15, 15), int8], %var_3656: Tensor[(8, 15, 15), int8]) -> Tensor[(8, 15, 15), uint8] {
  %146 = fn (%var_3633: Tensor[(8, 15, 15), int8], %var_3638: Tensor[(8, 15, 15), int8]) -> Tensor[(8, 15, 15), uint8] {
    %137 = cast(%var_3633, dtype="int8") /* ty=Tensor[(8, 15, 15), int8] */;
    %138 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(8, 15, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %139 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 15, 15), int8] */, dtype="int8") /* ty=Tensor[(8, 15, 15), int8] */;
    %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %141 = logical_xor(%139, %140) /* ty=Tensor[(8, 15, 15), int8] */;
    %142 = cast(%var_3638, dtype="uint8") /* ty=Tensor[(8, 15, 15), uint8] */;
    %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
    %144 = cast(%141, dtype="uint8") /* ty=Tensor[(8, 15, 15), uint8] */;
    %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    left_shift(%144, %145) /* ty=Tensor[(8, 15, 15), uint8] */
  };
  %146(%var_3655, %var_3656) /* ty=Tensor[(8, 15, 15), uint8] */
}

def @func_5563(%var_5502: Tensor[(2, 16, 12), float64], %var_5556: Tensor[(2, 16, 12), float64]) -> (Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), uint32], Tensor[(2, 16, 12), uint32], Tensor[(1, 16, 12), float64], Tensor[(2, 16, 12), float64]) {
  %147 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %148 = %147.0;
  %149 = cast(%148, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %150 = cast(%var_5502, dtype="bool") /* ty=Tensor[(2, 16, 12), bool] */;
  %151 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 16, 12), float64] */, dtype="uint32") /* ty=Tensor[(2, 16, 12), uint32] */;
  %152 = shape_of(%var_5502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%var_5502, dtype="uint32") /* ty=Tensor[(2, 16, 12), uint32] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %155 = cast(%148, dtype="uint32") /* ty=Tensor[(1, 16, 12), uint32] */;
  %156 = cast(%var_5502, dtype="uint32") /* ty=Tensor[(2, 16, 12), uint32] */;
  %157 = @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */;
  %158 = cast(%var_5556, dtype="float64") /* ty=Tensor[(2, 16, 12), float64] */;
  %159 = shape_of(%var_5502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(%var_5502, dtype="float64") /* ty=Tensor[(2, 16, 12), float64] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %162 = greater(%149, %150) /* ty=Tensor[(2, 16, 12), bool] */;
  %163 = logical_xor(%153, %154) /* ty=Tensor[(2, 16, 12), uint32] */;
  %164 = bitwise_or(%155, %156) /* ty=Tensor[(2, 16, 12), uint32] */;
  %165 = %157.1;
  %166 = power(%160, %161) /* ty=Tensor[(2, 16, 12), float64] */;
  (%162, %163, %164, %165, %166)
}

def @func_5325(%var_5323: Tensor[(1536, 1), float32]) -> (Tensor[(4, 16, 12), float64], Tensor[(10, 16, 12), int16], Tensor[(1536, 1920), bool], Tensor[(1, 16, 12), float64], Tensor[(168), int8], Tensor[(550), uint16]) {
  @func_5322(%var_5323) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(10, 16, 12), int16], Tensor[(1536, 1920), bool], Tensor[(1, 16, 12), float64], Tensor[(168), int8], Tensor[(550), uint16]) */
}

def @func_8671() -> Tensor[(13, 16, 12), uint32] {
  @func_8669() /* ty=Tensor[(13, 16, 12), uint32] */
}

def @func_6580() -> (Tensor[(11, 7, 6), int16],) {
  %168 = fn () -> (Tensor[(11, 7, 6), int16],) {
    %167 = @func_5037() /* ty=Tensor[(11, 7, 6), int16] */;
    (%167,)
  };
  %168() /* ty=(Tensor[(11, 7, 6), int16],) */
}

def @func_6976() -> Tensor[(13, 16, 12), float64] {
  @func_6974() /* ty=Tensor[(13, 16, 12), float64] */
}

def @func_3053(%var_3051: Tensor[(12, 16, 8), float32], %var_3052: int32) -> (Tensor[(12, 16, 8), float32], int32, Tensor[(2, 8), int32], Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(2, 8, 168), bool]) {
  %188 = fn (%var_2988: Tensor[(12, 16, 8), float32], %var_3013: int32) -> (Tensor[(12, 16, 8), float32], int32, Tensor[(2, 8), int32], Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(2, 8, 168), bool]) {
    %169 = cast(%var_2988, dtype="float32") /* ty=Tensor[(12, 16, 8), float32] */;
    %170 = cast(%var_3013, dtype="int8") /* ty=int8 */;
    %171 = cast(meta[relay.Constant][10] /* ty=Tensor[(168), int8] */, dtype="int8") /* ty=Tensor[(168), int8] */;
    %172 = reshape(%170, newshape=[]) /* ty=int8 */;
    %173 = reshape(%171, newshape=[4, 14, 3]) /* ty=Tensor[(4, 14, 3), int8] */;
    %174 = cast(%var_3013, dtype="int8") /* ty=int8 */;
    %175 = reshape(%174, newshape=[]) /* ty=int8 */;
    %176 = @func_2639(%175) /* ty=(Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(5, 7, 3), bool], Tensor[(2, 8, 1), int32], Tensor[(4, 4), int32]) */;
    %177 = cast(%var_3013, dtype="int32") /* ty=int32 */;
    %178 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 8), int32] */, dtype="int32") /* ty=Tensor[(2, 8), int32] */;
    %179 = reshape(%177, newshape=[]) /* ty=int32 */;
    %180 = reshape(%178, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int32] */;
    %181 = @func_786(%179, %180) /* ty=Tensor[(2, 8, 1), int32] */;
    %182 = cast(%181, dtype="bool") /* ty=Tensor[(2, 8, 1), bool] */;
    %183 = cast(meta[relay.Constant][10] /* ty=Tensor[(168), int8] */, dtype="bool") /* ty=Tensor[(168), bool] */;
    %184 = rsqrt(%169) /* ty=Tensor[(12, 16, 8), float32] */;
    %185 = @func_1647(%172, %173) /* ty=Tensor[(4, 14, 3), int8] */;
    %186 = %176.1;
    %187 = not_equal(%182, %183) /* ty=Tensor[(2, 8, 168), bool] */;
    (%184, %var_3013, meta[relay.Constant][9] /* ty=Tensor[(2, 8), int32] */, %185, %186, %187)
  };
  %188(%var_3051, %var_3052) /* ty=(Tensor[(12, 16, 8), float32], int32, Tensor[(2, 8), int32], Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(2, 8, 168), bool]) */
}

def @func_5133(%var_5088: Tensor[(11, 10, 5), uint16]) -> (Tensor[(11, 10, 5), uint16], Tensor[(168), int8], int32, Tensor[(16), int32], Tensor[(2496), uint32]) {
  %189 = cast(%var_5088, dtype="uint16") /* ty=Tensor[(11, 10, 5), uint16] */;
  %190 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(11, 10, 5), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 10, 5), uint16] */, dtype="uint16") /* ty=Tensor[(11, 10, 5), uint16] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %193 = cast(4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %194 = cast(meta[relay.Constant][12] /* ty=Tensor[(16), int32] */, dtype="int32") /* ty=Tensor[(16), int32] */;
  %195 = cast(meta[relay.Constant][13] /* ty=Tensor[(2496), uint32] */, dtype="uint32") /* ty=Tensor[(2496), uint32] */;
  %196 = reshape(%193, newshape=[]) /* ty=int32 */;
  %197 = reshape(%194, newshape=[16]) /* ty=Tensor[(16), int32] */;
  %198 = reshape(%195, newshape=[2496]) /* ty=Tensor[(2496), uint32] */;
  %199 = @func_4665(%196, %197, %198) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(2, 8, 1), float32], Tensor[(1800), int8], Tensor[(8, 15, 15), float32], Tensor[(13, 16, 12), float32], Tensor[(2496), uint32], Tensor[(4, 14, 3), int8], Tensor[(168), int8]) */;
  %200 = minimum(%191, %192) /* ty=Tensor[(11, 10, 5), uint16] */;
  %201 = %199.8;
  (%200, %201, 4 /* ty=int32 */, meta[relay.Constant][12] /* ty=Tensor[(16), int32] */, meta[relay.Constant][13] /* ty=Tensor[(2496), uint32] */)
}

def @func_7792() -> (Tensor[(1, 16, 12), float64],) {
  @func_7790() /* ty=(Tensor[(1, 16, 12), float64],) */
}

def @func_5489() -> (Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) {
  %202 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %203 = %202.2;
  %204 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
  (%203, %204)
}

def @func_10576(%var_10575: Tensor[(13, 16, 12), float32]) -> (Tensor[(13, 16, 12), float32],) {
  %209 = fn (%var_10566: Tensor[(13, 16, 12), float32]) -> (Tensor[(13, 16, 12), float32],) {
    %205 = @func_10025() /* ty=Tensor[(1, 16, 12), float32] */;
    %206 = cast(%205, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
    %207 = cast(%var_10566, dtype="float32") /* ty=Tensor[(13, 16, 12), float32] */;
    %208 = divide(%206, %207) /* ty=Tensor[(13, 16, 12), float32] */;
    (%208,)
  };
  %209(%var_10575) /* ty=(Tensor[(13, 16, 12), float32],) */
}

def @main(%var_11218: Tensor[(11, 7, 6), int16], %var_11231: Tensor[(15, 16, 12), float64]) -> (Tensor[(2535), float64], Tensor[(11, 7, 6), int64], Tensor[(11, 7, 6), int16], Tensor[(15, 16, 12), float32]) {
  %210 = cast(meta[relay.Constant][14] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %211 = reshape(%210, newshape=[13, 15, 13]) /* ty=Tensor[(13, 15, 13), float64] */;
  %212 = @func_9715(%211) /* ty=(Tensor[(13, 15, 13), float64], Tensor[(1, 16, 12), float32], Tensor[(11, 7, 6), int16]) */;
  %213 = %212.2;
  %214 = cast(%var_11218, dtype="int64") /* ty=Tensor[(11, 7, 6), int64] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%213, dtype="int64") /* ty=Tensor[(11, 7, 6), int64] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %218 = @func_3816() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %219 = %218.0;
  %220 = cast(%219, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
  %221 = cast(%var_11231, dtype="float32") /* ty=Tensor[(15, 16, 12), float32] */;
  %222 = bitwise_xor(%216, %217) /* ty=Tensor[(11, 7, 6), int64] */;
  %223 = @func_11025() /* ty=Tensor[(11, 7, 6), int16] */;
  %224 = floor_divide(%220, %221) /* ty=Tensor[(15, 16, 12), float32] */;
  (meta[relay.Constant][14] /* ty=Tensor[(2535), float64] */, %222, %223, %224)
}

def @func_9227() -> Tensor[(1, 16, 12), float32] {
  %225 = @func_6631() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(13, 16, 12), uint32]) */;
  %225.0
}

def @func_9865() -> (Tensor[(4, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1560), int8], Tensor[(900, 2), int8]) {
  @func_9863() /* ty=(Tensor[(4, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1560), int8], Tensor[(900, 2), int8]) */
}

def @func_6679(%var_6678: Tensor[(3, 13, 9), float64]) -> (Tensor[(3, 13, 9), float64], Tensor[(13, 16, 12), uint32]) {
  %232 = fn (%var_6661: Tensor[(3, 13, 9), float64]) -> (Tensor[(3, 13, 9), float64], Tensor[(13, 16, 12), uint32]) {
    %226 = cast(%var_6661, dtype="float64") /* ty=Tensor[(3, 13, 9), float64] */;
    %227 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(3, 13, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %228 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 13, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 13, 9), float64] */;
    %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %230 = floor_divide(%228, %229) /* ty=Tensor[(3, 13, 9), float64] */;
    %231 = @func_4972() /* ty=Tensor[(13, 16, 12), uint32] */;
    (%230, %231)
  };
  %232(%var_6678) /* ty=(Tensor[(3, 13, 9), float64], Tensor[(13, 16, 12), uint32]) */
}

def @func_5322(%var_5265: Tensor[(1536, 1), float32]) -> (Tensor[(4, 16, 12), float64], Tensor[(10, 16, 12), int16], Tensor[(1536, 1920), bool], Tensor[(1, 16, 12), float64], Tensor[(168), int8], Tensor[(550), uint16]) {
  %233 = @func_4950() /* ty=(Tensor[(4, 16, 12), float64],) */;
  %234 = cast(meta[relay.Constant][16] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %235 = cast(%var_5265, dtype="float32") /* ty=Tensor[(1536, 1), float32] */;
  %236 = reshape(%234, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %237 = reshape(%235, newshape=[1536]) /* ty=Tensor[(1536), float32] */;
  %238 = @func_4791(%236, %237) /* ty=(Tensor[(10, 16, 12), int16], int32, Tensor[(1536), float32], int32) */;
  %239 = cast(%var_5265, dtype="bool") /* ty=Tensor[(1536, 1), bool] */;
  %240 = cast(meta[relay.Constant][16] /* ty=Tensor[(1920), float64] */, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %241 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %242 = cast(meta[relay.Constant][17] /* ty=Tensor[(550), uint16] */, dtype="uint16") /* ty=Tensor[(550), uint16] */;
  %243 = reshape(%242, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), uint16] */;
  %244 = @func_5133(%243) /* ty=(Tensor[(11, 10, 5), uint16], Tensor[(168), int8], int32, Tensor[(16), int32], Tensor[(2496), uint32]) */;
  %245 = %233.0;
  %246 = %238.0;
  %247 = greater_equal(%239, %240) /* ty=Tensor[(1536, 1920), bool] */;
  %248 = %241.1;
  %249 = %244.1;
  (%245, %246, %247, %248, %249, meta[relay.Constant][17] /* ty=Tensor[(550), uint16] */)
}

def @func_4795(%var_4793: Tensor[(10, 16, 12), float64], %var_4794: Tensor[(1536), float32]) -> (Tensor[(10, 16, 12), int16], int32, Tensor[(1536), float32], int32) {
  @func_4791(%var_4793, %var_4794) /* ty=(Tensor[(10, 16, 12), int16], int32, Tensor[(1536), float32], int32) */
}

def @func_9112() -> (Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float32]) {
  %253 = fn () -> (Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float32]) {
    %250 = @func_6631() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(13, 16, 12), uint32]) */;
    %251 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
    %252 = %250.0;
    (%251, %252)
  };
  %253() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float32]) */
}

def @func_9213() -> (Tensor[(132), bool], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) {
  %254 = cast(meta[relay.Constant][18] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %255 = cast(meta[relay.Constant][18] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %256 = reshape(%254, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
  %257 = reshape(%255, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
  %258 = @func_5840() /* ty=Tensor[(132), bool] */;
  %259 = @func_6429(%256, %257) /* ty=Tensor[(4, 8, 8), float32] */;
  (%258, %259, meta[relay.Constant][18] /* ty=Tensor[(256), float32] */)
}

def @func_10728() -> (Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), float64], Tensor[(132), bool]) {
  %260 = @func_9483() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %261 = @func_7702() /* ty=(Tensor[(13, 16, 12), float64],) */;
  %262 = %260.0;
  %263 = %261.0;
  %264 = @func_8331() /* ty=Tensor[(132), bool] */;
  (%262, %263, %264)
}

def @func_5425() -> Tensor[(132), bool] {
  %265 = @func_5003() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool], Tensor[(11, 7, 6), int16]) */;
  %265.2
}

def @func_7269() -> (Tensor[(1, 16, 12), float64],) {
  @func_7267() /* ty=(Tensor[(1, 16, 12), float64],) */
}

def @func_10131() -> (Tensor[(?, 16, 12), bool],) {
  %266 = @func_7404() /* ty=(Tensor[(?, 16, 12), float32], Tensor[(?, 16, 12), bool]) */;
  %267 = %266.1;
  (%267,)
}

def @func_4026(%var_4018: Tensor[(132), bool]) -> (Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool]) {
  %268 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %269 = cast(%var_4018, dtype="bool") /* ty=Tensor[(132), bool] */;
  %270 = cast(%var_4018, dtype="bool") /* ty=Tensor[(132), bool] */;
  %271 = reshape(%269, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), bool] */;
  %272 = reshape(%270, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), bool] */;
  %273 = @func_3477(%271, %272) /* ty=(Tensor[(3, 11, 4), bool],) */;
  %274 = %268.0;
  %275 = %273.0;
  (%274, %275, %var_4018)
}

def @func_5922() -> (Tensor[(?, 16, 12), int8],) {
  %284 = fn () -> (Tensor[(?, 16, 12), int8],) {
    %276 = @func_3754() /* ty=Tensor[(1, 16, 12), float64] */;
    %277 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
    %278 = %277.0;
    %279 = cast(%278, dtype="int8") /* ty=Tensor[(1, 16, 12), int8] */;
    %280 = shape_of(%276, dtype="int32") /* ty=Tensor[(3), int32] */;
    %281 = cast(%276, dtype="int8") /* ty=Tensor[(1, 16, 12), int8] */;
    %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %283 = bitwise_or(%281, %282) /* ty=Tensor[(?, 16, 12), int8] */;
    (%283,)
  };
  %284() /* ty=(Tensor[(?, 16, 12), int8],) */
}

def @func_7041(%var_7039: Tensor[(1800), int8]) -> (Tensor[(11, 7, 6), int16], Tensor[(13, 16, 12), float32], Tensor[(2496), uint32], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) {
  @func_7038(%var_7039) /* ty=(Tensor[(11, 7, 6), int16], Tensor[(13, 16, 12), float32], Tensor[(2496), uint32], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */
}

def @func_3720() -> (Tensor[(1, 16, 12), float64],) {
  %287 = fn () -> (Tensor[(1, 16, 12), float64],) {
    %285 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 16, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
    %286 = log10(%285) /* ty=Tensor[(1, 16, 12), float64] */;
    (%286,)
  };
  %287() /* ty=(Tensor[(1, 16, 12), float64],) */
}

def @func_10505(%var_10501: Tensor[(2, 9, 10), float64]) -> (Tensor[(2, 9, 10), float64],) {
  %288 = cast(%var_10501, dtype="float64") /* ty=Tensor[(2, 9, 10), float64] */;
  %289 = exp(%288) /* ty=Tensor[(2, 9, 10), float64] */;
  (%289,)
}

def @func_8006() -> Tensor[(11, 7, 6), float32] {
  %290 = @func_6764() /* ty=(Tensor[(11, 7, 6), float32], Tensor[(13, 16, 12), uint32], Tensor[(4, 16, 12), float64], Tensor[(1, 16, 12), float64]) */;
  %290.0
}

def @func_8596() -> Tensor[(13, 16, 12), uint32] {
  @func_8594() /* ty=Tensor[(13, 16, 12), uint32] */
}

def @func_10888() -> (Tensor[(12, 8, 3), bool],) {
  %303 = fn () -> (Tensor[(12, 8, 3), bool],) {
    %291 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 8, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 8, 3), float32] */;
    %292 = asinh(%291) /* ty=Tensor[(12, 8, 3), float32] */;
    %293 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 8, 3), float32] */, dtype="uint16") /* ty=Tensor[(12, 8, 3), uint16] */;
    %294 = shape_of(%292, dtype="int32") /* ty=Tensor[(3), int32] */;
    %295 = cast(%292, dtype="uint16") /* ty=Tensor[(12, 8, 3), uint16] */;
    %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %297 = bitwise_xor(%295, %296) /* ty=Tensor[(12, 8, 3), uint16] */;
    %298 = cast(%297, dtype="bool") /* ty=Tensor[(12, 8, 3), bool] */;
    %299 = shape_of(%292, dtype="int32") /* ty=Tensor[(3), int32] */;
    %300 = cast(%292, dtype="bool") /* ty=Tensor[(12, 8, 3), bool] */;
    %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %302 = less(%300, %301) /* ty=Tensor[(12, 8, 3), bool] */;
    (%302,)
  };
  %303() /* ty=(Tensor[(12, 8, 3), bool],) */
}

def @func_1647(%var_1636: int8, %var_1637: Tensor[(4, 14, 3), int8]) -> Tensor[(4, 14, 3), int8] {
  %304 = cast(%var_1636, dtype="int8") /* ty=int8 */;
  %305 = cast(%var_1637, dtype="int8") /* ty=Tensor[(4, 14, 3), int8] */;
  right_shift(%304, %305) /* ty=Tensor[(4, 14, 3), int8] */
}

def @func_5013() -> (Tensor[(1, 16, 12), float32],) {
  @func_5011() /* ty=(Tensor[(1, 16, 12), float32],) */
}

def @func_7702() -> (Tensor[(13, 16, 12), float64],) {
  %306 = @func_7061() /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) */;
  %307 = %306.0;
  %308 = cast(%307, dtype="float64") /* ty=Tensor[(13, 16, 12), float64] */;
  %309 = log(%308) /* ty=Tensor[(13, 16, 12), float64] */;
  (%309,)
}

def @func_6433(%var_6431: Tensor[(4, 8, 8), float32], %var_6432: Tensor[(4, 8, 8), float32]) -> Tensor[(4, 8, 8), float32] {
  @func_6429(%var_6431, %var_6432) /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_10133() -> (Tensor[(?, 16, 12), bool],) {
  @func_10131() /* ty=(Tensor[(?, 16, 12), bool],) */
}

def @func_7144(%var_7142: Tensor[(8, 5, 10), uint64], %var_7143: Tensor[(384), float64]) -> (Tensor[(8, 5, 10), bool], Tensor[(1536), float32], Tensor[(1536), float32], Tensor[(8, 5, 10), int16], Tensor[(9, 5, 6), float64], Tensor[(30, 9), float64], Tensor[(2, 16, 12), bool], Tensor[(384), float64], Tensor[(550), float32]) {
  %342 = fn (%var_7081: Tensor[(8, 5, 10), uint64], %var_7111: Tensor[(384), float64]) -> (Tensor[(8, 5, 10), bool], Tensor[(1536), float32], Tensor[(1536), float32], Tensor[(8, 5, 10), int16], Tensor[(9, 5, 6), float64], Tensor[(30, 9), float64], Tensor[(2, 16, 12), bool], Tensor[(384), float64], Tensor[(550), float32]) {
    %310 = cast(%var_7081, dtype="uint64") /* ty=Tensor[(8, 5, 10), uint64] */;
    %311 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(8, 5, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %312 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 5, 10), uint64] */, dtype="uint64") /* ty=Tensor[(8, 5, 10), uint64] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %314 = bitwise_and(%312, %313) /* ty=Tensor[(8, 5, 10), uint64] */;
    %315 = cast(%314, dtype="bool") /* ty=Tensor[(8, 5, 10), bool] */;
    %316 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(8, 5, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %317 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 5, 10), uint64] */, dtype="bool") /* ty=Tensor[(8, 5, 10), bool] */;
    %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %319 = cast(meta[relay.Constant][22] /* ty=Tensor[(1536), float32] */, dtype="float32") /* ty=Tensor[(1536), float32] */;
    %320 = cast(-3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %321 = cast(meta[relay.Constant][23] /* ty=Tensor[(550), uint16] */, dtype="uint16") /* ty=Tensor[(550), uint16] */;
    %322 = reshape(%319, newshape=[1536]) /* ty=Tensor[(1536), float32] */;
    %323 = reshape(%320, newshape=[]) /* ty=int32 */;
    %324 = reshape(%321, newshape=[550]) /* ty=Tensor[(550), uint16] */;
    %325 = @func_6150(%322, %323, %324) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(5, 16, 12), float64], Tensor[(960), float64], Tensor[(12, 16, 8), float32], Tensor[(1536), float32], int32, Tensor[(132), bool], Tensor[(2496), uint32], Tensor[(550), uint16], Tensor[(550), uint16]) */;
    %326 = cast(-3 /* ty=int32 */, dtype="int16") /* ty=int16 */;
    %327 = cast(%var_7081, dtype="int16") /* ty=Tensor[(8, 5, 10), int16] */;
    %328 = cast(-3 /* ty=int32 */, dtype="float64") /* ty=float64 */;
    %329 = cast(meta[relay.Constant][24] /* ty=Tensor[(30, 9), float64] */, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
    %330 = reshape(%328, newshape=[]) /* ty=float64 */;
    %331 = reshape(%329, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), float64] */;
    %332 = cast(%var_7111, dtype="float64") /* ty=Tensor[(384), float64] */;
    %333 = reshape(%332, newshape=[2, 16, 12]) /* ty=Tensor[(2, 16, 12), float64] */;
    %334 = @func_4865(%333) /* ty=(Tensor[(13, 16, 12), bool], Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), int32]) */;
    %335 = cast(meta[relay.Constant][23] /* ty=Tensor[(550), uint16] */, dtype="float32") /* ty=Tensor[(550), float32] */;
    %336 = equal(%317, %318) /* ty=Tensor[(8, 5, 10), bool] */;
    %337 = %325.4;
    %338 = bitwise_xor(%326, %327) /* ty=Tensor[(8, 5, 10), int16] */;
    %339 = @func_1323(%330, %331) /* ty=Tensor[(9, 5, 6), float64] */;
    %340 = %334.1;
    %341 = log(%335) /* ty=Tensor[(550), float32] */;
    (%336, %337, meta[relay.Constant][22] /* ty=Tensor[(1536), float32] */, %338, %339, meta[relay.Constant][24] /* ty=Tensor[(30, 9), float64] */, %340, %var_7111, %341)
  };
  %342(%var_7142, %var_7143) /* ty=(Tensor[(8, 5, 10), bool], Tensor[(1536), float32], Tensor[(1536), float32], Tensor[(8, 5, 10), int16], Tensor[(9, 5, 6), float64], Tensor[(30, 9), float64], Tensor[(2, 16, 12), bool], Tensor[(384), float64], Tensor[(550), float32]) */
}

def @func_10423() -> (Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), float32]) {
  %343 = @func_9483() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %344 = %343.0;
  %345 = @func_8006() /* ty=Tensor[(11, 7, 6), float32] */;
  (%344, %345)
}

def @func_2642(%var_2640: int8) -> (Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(5, 7, 3), bool], Tensor[(2, 8, 1), int32], Tensor[(4, 4), int32]) {
  @func_2639(%var_2640) /* ty=(Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(5, 7, 3), bool], Tensor[(2, 8, 1), int32], Tensor[(4, 4), int32]) */
}

def @func_4029(%var_4027: Tensor[(132), bool]) -> (Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool]) {
  @func_4026(%var_4027) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool]) */
}

def @func_6853() -> (Tensor[(11, 7, 6), int16],) {
  %346 = @func_5037() /* ty=Tensor[(11, 7, 6), int16] */;
  (%346,)
}

def @func_6268(%var_6239: int32) -> (Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(512), int16], int32, Tensor[(1, 16), int32]) {
  %347 = cast(meta[relay.Constant][25] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %348 = cast(%var_6239, dtype="int32") /* ty=int32 */;
  %349 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 16), int32] */, dtype="int32") /* ty=Tensor[(1, 16), int32] */;
  %350 = reshape(%347, newshape=[512]) /* ty=Tensor[(512), int16] */;
  %351 = reshape(%348, newshape=[]) /* ty=int32 */;
  %352 = reshape(%349, newshape=[16]) /* ty=Tensor[(16), int32] */;
  %353 = @func_5252(%350, %351, %352) /* ty=(Tensor[(1, 16, 12), float32], Tensor[(16, 2, 16), int32], Tensor[(512), int16], Tensor[(2, 8, 1), int32], int32, Tensor[(16), int32]) */;
  %354 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %355 = %353.5;
  (%354, %355, meta[relay.Constant][25] /* ty=Tensor[(512), int16] */, %var_6239, meta[relay.Constant][26] /* ty=Tensor[(1, 16), int32] */)
}

def @func_8871() -> (Tensor[(13, 16, 12), uint32], Tensor[(270), float64], Tensor[(3, 11, 4), bool], Tensor[(1, 132), bool], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) {
  %356 = @func_7061() /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) */;
  %357 = @func_4530() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(9, 5, 6), float64], float64, Tensor[(270), float64]) */;
  %358 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 132), bool] */, dtype="bool") /* ty=Tensor[(1, 132), bool] */;
  %359 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 132), bool] */, dtype="bool") /* ty=Tensor[(1, 132), bool] */;
  %360 = reshape(%358, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), bool] */;
  %361 = reshape(%359, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), bool] */;
  %362 = @func_3477(%360, %361) /* ty=(Tensor[(3, 11, 4), bool],) */;
  %363 = cast(meta[relay.Constant][28] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %364 = cast(meta[relay.Constant][28] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %365 = reshape(%363, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %366 = reshape(%364, newshape=[3, 10, 11]) /* ty=Tensor[(3, 10, 11), float32] */;
  %367 = @func_7924(%365, %366) /* ty=(Tensor[(3, 10, 11), float32], Tensor[(1, 16, 12), float64]) */;
  %368 = %356.0;
  %369 = %357.3;
  %370 = %362.0;
  %371 = %367.0;
  (%368, %369, %370, meta[relay.Constant][27] /* ty=Tensor[(1, 132), bool] */, %371, meta[relay.Constant][28] /* ty=Tensor[(330), float32] */)
}

def @func_4974() -> Tensor[(13, 16, 12), uint32] {
  @func_4972() /* ty=Tensor[(13, 16, 12), uint32] */
}

def @func_5831(%var_5770: Tensor[(1560), int8], %var_5796: Tensor[(1800), int8]) -> (Tensor[(13, 16, 12), uint32], Tensor[(15, 13, 8), float64], Tensor[(1560), int8], Tensor[(11, 7, 6), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) {
  %372 = cast(%var_5770, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %373 = cast(%var_5770, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %374 = reshape(%372, newshape=[15, 13, 8]) /* ty=Tensor[(15, 13, 8), int8] */;
  %375 = reshape(%373, newshape=[15, 13, 8]) /* ty=Tensor[(15, 13, 8), int8] */;
  %376 = @func_3983(%374, %375) /* ty=(Tensor[(15, 13, 8), int8], Tensor[(15, 13, 8), float64]) */;
  %377 = @func_5037() /* ty=Tensor[(11, 7, 6), int16] */;
  %378 = cast(%377, dtype="float64") /* ty=Tensor[(11, 7, 6), float64] */;
  %379 = cast(%var_5796, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %380 = cast(%var_5796, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %381 = reshape(%379, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
  %382 = reshape(%380, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
  %383 = @func_4209() /* ty=Tensor[(13, 16, 12), uint32] */;
  %384 = %376.1;
  %385 = cosh(%378) /* ty=Tensor[(11, 7, 6), float64] */;
  %386 = @func_3654(%381, %382) /* ty=Tensor[(8, 15, 15), uint8] */;
  (%383, %384, %var_5770, %385, %386, %var_5796)
}

def @func_10653() -> (Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), uint32], Tensor[(13, 16, 12), float64]) {
  @func_10651() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), uint32], Tensor[(13, 16, 12), float64]) */
}

def @func_7611() -> Tensor[(13, 16, 12), float64] {
  @func_7609() /* ty=Tensor[(13, 16, 12), float64] */
}

def @func_9509() -> Tensor[(4, 16, 12), float64] {
  %389 = fn () -> Tensor[(4, 16, 12), float64] {
    %387 = @func_7454() /* ty=Tensor[(4, 16, 12), float64] */;
    %388 = cast(%387, dtype="float64") /* ty=Tensor[(4, 16, 12), float64] */;
    atanh(%388) /* ty=Tensor[(4, 16, 12), float64] */
  };
  %389() /* ty=Tensor[(4, 16, 12), float64] */
}

def @func_11115() -> (Tensor[(462), int16], Tensor[(?, 16, 12), bool]) {
  @func_11113() /* ty=(Tensor[(462), int16], Tensor[(?, 16, 12), bool]) */
}

def @func_9926() -> (Tensor[(4, 16, 12), float32],) {
  @func_9924() /* ty=(Tensor[(4, 16, 12), float32],) */
}

def @func_4972() -> Tensor[(13, 16, 12), uint32] {
  %390 = @func_4816() /* ty=(Tensor[(13, 16, 12), uint32],) */;
  %390.0
}

def @func_7976() -> Tensor[(1, 16, 12), float64] {
  @func_7974() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_7927(%var_7925: Tensor[(3, 10, 11), float32], %var_7926: Tensor[(3, 10, 11), float32]) -> (Tensor[(3, 10, 11), float32], Tensor[(1, 16, 12), float64]) {
  %397 = fn (%var_7911: Tensor[(3, 10, 11), float32], %var_7912: Tensor[(3, 10, 11), float32]) -> (Tensor[(3, 10, 11), float32], Tensor[(1, 16, 12), float64]) {
    %391 = cast(%var_7912, dtype="float32") /* ty=Tensor[(3, 10, 11), float32] */;
    %392 = shape_of(%var_7911, dtype="int32") /* ty=Tensor[(3), int32] */;
    %393 = cast(%var_7911, dtype="float32") /* ty=Tensor[(3, 10, 11), float32] */;
    %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %395 = divide(%393, %394) /* ty=Tensor[(3, 10, 11), float32] */;
    %396 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
    (%395, %396)
  };
  %397(%var_7925, %var_7926) /* ty=(Tensor[(3, 10, 11), float32], Tensor[(1, 16, 12), float64]) */
}

def @func_6829() -> Tensor[(1, 16, 12), float64] {
  %398 = fn () -> Tensor[(1, 16, 12), float64] {
    @func_3754() /* ty=Tensor[(1, 16, 12), float64] */
  };
  %398() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_786(%var_764: int32, %var_765: Tensor[(2, 8, 1), int32]) -> Tensor[(2, 8, 1), int32] {
  %399 = cast(%var_764, dtype="int32") /* ty=int32 */;
  %400 = cast(%var_765, dtype="int32") /* ty=Tensor[(2, 8, 1), int32] */;
  logical_xor(%399, %400) /* ty=Tensor[(2, 8, 1), int32] */
}

def @func_7361(%var_7359: Tensor[(1800), int8]) -> (Tensor[(11, 7, 6), float32], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8], Tensor[(1, 16, 12), float64]) {
  @func_7358(%var_7359) /* ty=(Tensor[(11, 7, 6), float32], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8], Tensor[(1, 16, 12), float64]) */
}

def @func_3816() -> (Tensor[(1, 16, 12), float64],) {
  @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */
}

def @func_1326(%var_1324: float64, %var_1325: Tensor[(9, 5, 6), float64]) -> Tensor[(9, 5, 6), float64] {
  %403 = fn (%var_1314: float64, %var_1315: Tensor[(9, 5, 6), float64]) -> Tensor[(9, 5, 6), float64] {
    %401 = cast(%var_1314, dtype="float64") /* ty=float64 */;
    %402 = cast(%var_1315, dtype="float64") /* ty=Tensor[(9, 5, 6), float64] */;
    power(%401, %402) /* ty=Tensor[(9, 5, 6), float64] */
  };
  %403(%var_1324, %var_1325) /* ty=Tensor[(9, 5, 6), float64] */
}

def @func_7406() -> (Tensor[(?, 16, 12), float32], Tensor[(?, 16, 12), bool]) {
  @func_7404() /* ty=(Tensor[(?, 16, 12), float32], Tensor[(?, 16, 12), bool]) */
}

def @func_3837() -> Tensor[(1, 16, 12), float64] {
  @func_3835() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_4531() -> (Tensor[(1, 16, 12), float64], Tensor[(9, 5, 6), float64], float64, Tensor[(270), float64]) {
  %412 = fn () -> (Tensor[(1, 16, 12), float64], Tensor[(9, 5, 6), float64], float64, Tensor[(270), float64]) {
    %404 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
    %405 = cast(%404, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
    %406 = cast(-6.75912f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %407 = cast(meta[relay.Constant][29] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %408 = reshape(%406, newshape=[]) /* ty=float64 */;
    %409 = reshape(%407, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), float64] */;
    %410 = sigmoid(%405) /* ty=Tensor[(1, 16, 12), float64] */;
    %411 = @func_1323(%408, %409) /* ty=Tensor[(9, 5, 6), float64] */;
    (%410, %411, -6.75912f64 /* ty=float64 */, meta[relay.Constant][29] /* ty=Tensor[(270), float64] */)
  };
  %412() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(9, 5, 6), float64], float64, Tensor[(270), float64]) */
}

def @func_7038(%var_7009: Tensor[(1800), int8]) -> (Tensor[(11, 7, 6), int16], Tensor[(13, 16, 12), float32], Tensor[(2496), uint32], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) {
  %413 = @func_6421() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) */;
  %414 = cast(meta[relay.Constant][30] /* ty=Tensor[(2496), uint32] */, dtype="uint32") /* ty=Tensor[(2496), uint32] */;
  %415 = reshape(%414, newshape=[13, 16, 12]) /* ty=Tensor[(13, 16, 12), uint32] */;
  %416 = @func_4268(%415) /* ty=(Tensor[(13, 16, 12), float32],) */;
  %417 = cast(%var_7009, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %418 = reshape(%417, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %419 = @func_4481(%418) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */;
  %420 = %413.0;
  %421 = %416.0;
  %422 = %419.1;
  (%420, %421, meta[relay.Constant][30] /* ty=Tensor[(2496), uint32] */, %422, %var_7009)
}

def @func_7456() -> Tensor[(4, 16, 12), float64] {
  @func_7454() /* ty=Tensor[(4, 16, 12), float64] */
}

def @func_7062() -> (Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) {
  %425 = fn () -> (Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) {
    %423 = @func_4972() /* ty=Tensor[(13, 16, 12), uint32] */;
    %424 = @func_3754() /* ty=Tensor[(1, 16, 12), float64] */;
    (%423, %424)
  };
  %425() /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) */
}

def @func_8331() -> Tensor[(132), bool] {
  @func_5840() /* ty=Tensor[(132), bool] */
}

def @func_4270(%var_4269: Tensor[(13, 16, 12), uint32]) -> (Tensor[(13, 16, 12), float32],) {
  %432 = fn (%var_4252: Tensor[(13, 16, 12), uint32]) -> (Tensor[(13, 16, 12), float32],) {
    %426 = @func_4209() /* ty=Tensor[(13, 16, 12), uint32] */;
    %427 = cast(%var_4252, dtype="float32") /* ty=Tensor[(13, 16, 12), float32] */;
    %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
    %429 = cast(%426, dtype="float32") /* ty=Tensor[(13, 16, 12), float32] */;
    %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %431 = subtract(%429, %430) /* ty=Tensor[(13, 16, 12), float32] */;
    (%431,)
  };
  %432(%var_4269) /* ty=(Tensor[(13, 16, 12), float32],) */
}

def @func_6337() -> Tensor[(?, 16, 12), bool] {
  %433 = @func_5463() /* ty=Tensor[(1, 16, 12), float64] */;
  %434 = @func_5463() /* ty=Tensor[(1, 16, 12), float64] */;
  %435 = cast(%434, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %436 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%433, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%437, %438) /* ty=Tensor[(?, 16, 12), bool] */
}

def @func_8873() -> (Tensor[(13, 16, 12), uint32], Tensor[(270), float64], Tensor[(3, 11, 4), bool], Tensor[(1, 132), bool], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) {
  @func_8871() /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(270), float64], Tensor[(3, 11, 4), bool], Tensor[(1, 132), bool], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) */
}

def @func_8008() -> Tensor[(11, 7, 6), float32] {
  @func_8006() /* ty=Tensor[(11, 7, 6), float32] */
}

def @func_9045() -> (Tensor[(1, 16, 12), float64], Tensor[(?, 960), int16], Tensor[(1, 16, 12), float64], Tensor[(330), float32], Tensor[(?, 960), bool], Tensor[(?, 960), bool], Tensor[(512), int16], int32) {
  @func_9043() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(?, 960), int16], Tensor[(1, 16, 12), float64], Tensor[(330), float32], Tensor[(?, 960), bool], Tensor[(?, 960), bool], Tensor[(512), int16], int32) */
}

def @func_10928(%var_10927: Tensor[(10, 10, 6), float32]) -> (Tensor[(10, 10, 6), float32],) {
  %444 = fn (%var_10893: Tensor[(10, 10, 6), float32]) -> (Tensor[(10, 10, 6), float32],) {
    %439 = cast(%var_10893, dtype="float32") /* ty=Tensor[(10, 10, 6), float32] */;
    %440 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(10, 10, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %441 = cast(meta[relay.Constant][31] /* ty=Tensor[(10, 10, 6), float32] */, dtype="float32") /* ty=Tensor[(10, 10, 6), float32] */;
    %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %443 = mod(%441, %442) /* ty=Tensor[(10, 10, 6), float32] */;
    (%443,)
  };
  %444(%var_10927) /* ty=(Tensor[(10, 10, 6), float32],) */
}

def @func_10834(%var_10833: Tensor[(15, 16, 12), float64]) -> (Tensor[(168), int8], Tensor[(550), uint16], Tensor[(15, 16, 12), float64]) {
  %453 = fn (%var_10827: Tensor[(15, 16, 12), float64]) -> (Tensor[(168), int8], Tensor[(550), uint16], Tensor[(15, 16, 12), float64]) {
    %445 = cast(meta[relay.Constant][32] /* ty=Tensor[(550), uint16] */, dtype="uint16") /* ty=Tensor[(550), uint16] */;
    %446 = reshape(%445, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), uint16] */;
    %447 = @func_5133(%446) /* ty=(Tensor[(11, 10, 5), uint16], Tensor[(168), int8], int32, Tensor[(16), int32], Tensor[(2496), uint32]) */;
    %448 = @func_5463() /* ty=Tensor[(1, 16, 12), float64] */;
    %449 = cast(%448, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
    %450 = cast(%var_10827, dtype="float64") /* ty=Tensor[(15, 16, 12), float64] */;
    %451 = %447.1;
    %452 = divide(%449, %450) /* ty=Tensor[(15, 16, 12), float64] */;
    (%451, meta[relay.Constant][32] /* ty=Tensor[(550), uint16] */, %452)
  };
  %453(%var_10833) /* ty=(Tensor[(168), int8], Tensor[(550), uint16], Tensor[(15, 16, 12), float64]) */
}

def @func_4211() -> Tensor[(13, 16, 12), uint32] {
  @func_4209() /* ty=Tensor[(13, 16, 12), uint32] */
}

def @func_5136(%var_5134: Tensor[(11, 10, 5), uint16]) -> (Tensor[(11, 10, 5), uint16], Tensor[(168), int8], int32, Tensor[(16), int32], Tensor[(2496), uint32]) {
  @func_5133(%var_5134) /* ty=(Tensor[(11, 10, 5), uint16], Tensor[(168), int8], int32, Tensor[(16), int32], Tensor[(2496), uint32]) */
}

def @func_11113() -> (Tensor[(462), int16], Tensor[(?, 16, 12), bool]) {
  %454 = @func_10362() /* ty=(Tensor[(13, 16, 12), bool], Tensor[(1, 16, 12), float64], Tensor[(13, 12, 4), float64], Tensor[(624), float64], int32, Tensor[(275, 2), int8], Tensor[(132), bool], Tensor[(132), bool], Tensor[(13, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %455 = @func_10131() /* ty=(Tensor[(?, 16, 12), bool],) */;
  %456 = %454.10;
  %457 = %455.0;
  (%456, %457)
}

def @func_10197(%var_10195: Tensor[(13, 12, 4), float64]) -> (Tensor[(13, 12, 4), float64],) {
  @func_10194(%var_10195) /* ty=(Tensor[(13, 12, 4), float64],) */
}

def @func_7267() -> (Tensor[(1, 16, 12), float64],) {
  %458 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
  (%458,)
}

def @func_4950() -> (Tensor[(4, 16, 12), float64],) {
  %459 = @func_3754() /* ty=Tensor[(1, 16, 12), float64] */;
  %460 = cast(%459, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %461 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 16, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 16, 12), float64] */;
  %462 = floor_divide(%460, %461) /* ty=Tensor[(4, 16, 12), float64] */;
  (%462,)
}

def @func_7358(%var_7324: Tensor[(1800), int8]) -> (Tensor[(11, 7, 6), float32], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8], Tensor[(1, 16, 12), float64]) {
  %463 = @func_6579() /* ty=(Tensor[(11, 7, 6), int16],) */;
  %464 = %463.0;
  %465 = cast(%464, dtype="float32") /* ty=Tensor[(11, 7, 6), float32] */;
  %466 = cast(%var_7324, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %467 = cast(%var_7324, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %468 = reshape(%466, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
  %469 = reshape(%467, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
  %470 = @func_5613() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %471 = sigmoid(%465) /* ty=Tensor[(11, 7, 6), float32] */;
  %472 = @func_3654(%468, %469) /* ty=Tensor[(8, 15, 15), uint8] */;
  %473 = %470.0;
  (%471, %472, %var_7324, %473)
}

def @func_8396(%var_8394: Tensor[(12, 16, 5), int16]) -> (Tensor[(12, 16, 5), bool], Tensor[(16, 2, 16), float64], Tensor[(512), int16]) {
  @func_8393(%var_8394) /* ty=(Tensor[(12, 16, 5), bool], Tensor[(16, 2, 16), float64], Tensor[(512), int16]) */
}

def @func_8191(%var_8189: Tensor[(768, 2), float32], %var_8190: Tensor[(2, 192), float64]) -> (Tensor[(1, 16, 12), float64], int32, int32, Tensor[(768, 2), float32], Tensor[(2, 16, 12), int32], Tensor[(2, 192), float32], Tensor[(1, 16, 12), float64]) {
  %488 = fn (%var_8173: Tensor[(768, 2), float32], %var_8176: Tensor[(2, 192), float64]) -> (Tensor[(1, 16, 12), float64], int32, int32, Tensor[(768, 2), float32], Tensor[(2, 16, 12), int32], Tensor[(2, 192), float32], Tensor[(1, 16, 12), float64]) {
    %474 = cast(-3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %475 = cast(%var_8173, dtype="float32") /* ty=Tensor[(768, 2), float32] */;
    %476 = reshape(%474, newshape=[]) /* ty=int32 */;
    %477 = reshape(%475, newshape=[1536]) /* ty=Tensor[(1536), float32] */;
    %478 = @func_8153(%476, %477) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(512), int16], int32, Tensor[(13, 16, 12), uint32], int32, Tensor[(1920), float64], Tensor[(1536), float32]) */;
    %479 = cast(%var_8176, dtype="float64") /* ty=Tensor[(2, 192), float64] */;
    %480 = reshape(%479, newshape=[2, 16, 12]) /* ty=Tensor[(2, 16, 12), float64] */;
    %481 = @func_4865(%480) /* ty=(Tensor[(13, 16, 12), bool], Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), int32]) */;
    %482 = cast(%var_8176, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
    %483 = @func_7974() /* ty=Tensor[(1, 16, 12), float64] */;
    %484 = %478.5;
    %485 = %481.2;
    %486 = tan(%482) /* ty=Tensor[(2, 192), float32] */;
    %487 = @func_7974() /* ty=Tensor[(1, 16, 12), float64] */;
    (%483, %484, -3 /* ty=int32 */, %var_8173, %485, %486, %487)
  };
  %488(%var_8189, %var_8190) /* ty=(Tensor[(1, 16, 12), float64], int32, int32, Tensor[(768, 2), float32], Tensor[(2, 16, 12), int32], Tensor[(2, 192), float32], Tensor[(1, 16, 12), float64]) */
}

def @func_4065() -> Tensor[(1, 16, 12), float64] {
  %489 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %489.0
}

def @func_9277() -> (Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float32], Tensor[(132), bool], Tensor[(13, 16, 12), uint32]) {
  @func_9275() /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float32], Tensor[(132), bool], Tensor[(13, 16, 12), uint32]) */
}

def @func_5835(%var_5833: Tensor[(1560), int8], %var_5834: Tensor[(1800), int8]) -> (Tensor[(13, 16, 12), uint32], Tensor[(15, 13, 8), float64], Tensor[(1560), int8], Tensor[(11, 7, 6), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) {
  @func_5831(%var_5833, %var_5834) /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(15, 13, 8), float64], Tensor[(1560), int8], Tensor[(11, 7, 6), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */
}

def @func_10110(%var_10107: bool, %var_10108: Tensor[(16, 16, 10), bool], %var_10109: Tensor[(384), float64]) -> (Tensor[(16, 16, 10), bool], Tensor[(2, 16, 12), uint32], Tensor[(384), float64]) {
  %499 = fn (%var_10091: bool, %var_10092: Tensor[(16, 16, 10), bool], %var_10101: Tensor[(384), float64]) -> (Tensor[(16, 16, 10), bool], Tensor[(2, 16, 12), uint32], Tensor[(384), float64]) {
    %490 = cast(%var_10091, dtype="bool") /* ty=bool */;
    %491 = cast(%var_10092, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
    %492 = cast(%var_10101, dtype="float64") /* ty=Tensor[(384), float64] */;
    %493 = cast(%var_10101, dtype="float64") /* ty=Tensor[(384), float64] */;
    %494 = reshape(%492, newshape=[2, 16, 12]) /* ty=Tensor[(2, 16, 12), float64] */;
    %495 = reshape(%493, newshape=[2, 16, 12]) /* ty=Tensor[(2, 16, 12), float64] */;
    %496 = @func_5563(%494, %495) /* ty=(Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), uint32], Tensor[(2, 16, 12), uint32], Tensor[(1, 16, 12), float64], Tensor[(2, 16, 12), float64]) */;
    %497 = logical_or(%490, %491) /* ty=Tensor[(16, 16, 10), bool] */;
    %498 = %496.2;
    (%497, %498, %var_10101)
  };
  %499(%var_10107, %var_10108, %var_10109) /* ty=(Tensor[(16, 16, 10), bool], Tensor[(2, 16, 12), uint32], Tensor[(384), float64]) */
}

def @func_10508(%var_10506: Tensor[(2, 9, 10), float64]) -> (Tensor[(2, 9, 10), float64],) {
  @func_10505(%var_10506) /* ty=(Tensor[(2, 9, 10), float64],) */
}

def @func_10958(%var_10956: Tensor[(1920), float64], %var_10957: Tensor[(1536), float32]) -> (Tensor[(?, 16, 12), bool], int32, Tensor[(1920), float64], Tensor[(1536), float32]) {
  %508 = fn (%var_10946: Tensor[(1920), float64], %var_10947: Tensor[(1536), float32]) -> (Tensor[(?, 16, 12), bool], int32, Tensor[(1920), float64], Tensor[(1536), float32]) {
    %500 = @func_10131() /* ty=(Tensor[(?, 16, 12), bool],) */;
    %501 = cast(%var_10946, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %502 = cast(%var_10947, dtype="float32") /* ty=Tensor[(1536), float32] */;
    %503 = reshape(%501, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
    %504 = reshape(%502, newshape=[1536]) /* ty=Tensor[(1536), float32] */;
    %505 = @func_4791(%503, %504) /* ty=(Tensor[(10, 16, 12), int16], int32, Tensor[(1536), float32], int32) */;
    %506 = %500.0;
    %507 = %505.3;
    (%506, %507, %var_10946, %var_10947)
  };
  %508(%var_10956, %var_10957) /* ty=(Tensor[(?, 16, 12), bool], int32, Tensor[(1920), float64], Tensor[(1536), float32]) */
}

def @func_4209() -> Tensor[(13, 16, 12), uint32] {
  %509 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %510 = cast(%509, dtype="uint32") /* ty=Tensor[(1, 16, 12), uint32] */;
  %511 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 16, 12), float64] */, dtype="uint32") /* ty=Tensor[(13, 16, 12), uint32] */;
  logical_xor(%510, %511) /* ty=Tensor[(13, 16, 12), uint32] */
}

def @func_5252(%var_5245: Tensor[(512), int16], %var_5249: int32, %var_5250: Tensor[(16), int32]) -> (Tensor[(1, 16, 12), float32], Tensor[(16, 2, 16), int32], Tensor[(512), int16], Tensor[(2, 8, 1), int32], int32, Tensor[(16), int32]) {
  %512 = @func_5011() /* ty=(Tensor[(1, 16, 12), float32],) */;
  %513 = cast(%var_5245, dtype="int16") /* ty=Tensor[(512), int16] */;
  %514 = cast(%var_5245, dtype="int16") /* ty=Tensor[(512), int16] */;
  %515 = cast(%var_5245, dtype="float32") /* ty=Tensor[(512), float32] */;
  %516 = reshape(%513, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int16] */;
  %517 = reshape(%514, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int16] */;
  %518 = reshape(%515, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float32] */;
  %519 = @func_4164(%516, %517, %518) /* ty=(Tensor[(16, 2, 16), int16], Tensor[(16, 2, 16), float64], Tensor[(16, 2, 16), int32]) */;
  %520 = cast(%var_5249, dtype="int32") /* ty=int32 */;
  %521 = cast(%var_5250, dtype="int32") /* ty=Tensor[(16), int32] */;
  %522 = reshape(%520, newshape=[]) /* ty=int32 */;
  %523 = reshape(%521, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int32] */;
  %524 = %512.0;
  %525 = %519.2;
  %526 = @func_786(%522, %523) /* ty=Tensor[(2, 8, 1), int32] */;
  (%524, %525, %var_5245, %526, %var_5249, %var_5250)
}

def @func_9483() -> (Tensor[(1, 16, 12), float64],) {
  %527 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %528 = %527.1;
  (%528,)
}

def @func_7609() -> Tensor[(13, 16, 12), float64] {
  @func_6974() /* ty=Tensor[(13, 16, 12), float64] */
}

def @func_4237() -> (Tensor[(11, 7, 6), int16],) {
  %531 = fn () -> (Tensor[(11, 7, 6), int16],) {
    %529 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
    %530 = %529.2;
    (%530,)
  };
  %531() /* ty=(Tensor[(11, 7, 6), int16],) */
}

def @func_3480(%var_3478: Tensor[(3, 11, 4), bool], %var_3479: Tensor[(3, 11, 4), bool]) -> (Tensor[(3, 11, 4), bool],) {
  %537 = fn (%var_3472: Tensor[(3, 11, 4), bool], %var_3473: Tensor[(3, 11, 4), bool]) -> (Tensor[(3, 11, 4), bool],) {
    %532 = cast(%var_3473, dtype="bool") /* ty=Tensor[(3, 11, 4), bool] */;
    %533 = shape_of(%var_3472, dtype="int32") /* ty=Tensor[(3), int32] */;
    %534 = cast(%var_3472, dtype="bool") /* ty=Tensor[(3, 11, 4), bool] */;
    %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %536 = logical_or(%534, %535) /* ty=Tensor[(3, 11, 4), bool] */;
    (%536,)
  };
  %537(%var_3478, %var_3479) /* ty=(Tensor[(3, 11, 4), bool],) */
}

def @func_8153(%var_8129: int32, %var_8150: Tensor[(1536), float32]) -> (Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(512), int16], int32, Tensor[(13, 16, 12), uint32], int32, Tensor[(1920), float64], Tensor[(1536), float32]) {
  %538 = cast(meta[relay.Constant][35] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %539 = cast(%var_8129, dtype="int32") /* ty=int32 */;
  %540 = reshape(%538, newshape=[256, 2]) /* ty=Tensor[(256, 2), int16] */;
  %541 = reshape(%539, newshape=[]) /* ty=int32 */;
  %542 = @func_5698(%540, %541) /* ty=(Tensor[(462), int16], Tensor[(1, 16, 12), float32], Tensor[(16), int32], Tensor[(256, 2), int16], int32, Tensor[(16), int32], Tensor[(11, 7, 6), int16]) */;
  %543 = @func_4816() /* ty=(Tensor[(13, 16, 12), uint32],) */;
  %544 = cast(meta[relay.Constant][36] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %545 = cast(%var_8150, dtype="float32") /* ty=Tensor[(1536), float32] */;
  %546 = reshape(%544, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %547 = reshape(%545, newshape=[1536]) /* ty=Tensor[(1536), float32] */;
  %548 = @func_4791(%546, %547) /* ty=(Tensor[(10, 16, 12), int16], int32, Tensor[(1536), float32], int32) */;
  %549 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %550 = %542.5;
  %551 = %543.0;
  %552 = %548.3;
  (%549, %550, meta[relay.Constant][35] /* ty=Tensor[(512), int16] */, %var_8129, %551, %552, meta[relay.Constant][36] /* ty=Tensor[(1920), float64] */, %var_8150)
}

def @func_9275() -> (Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float32], Tensor[(132), bool], Tensor[(13, 16, 12), uint32]) {
  %553 = @func_6631() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(13, 16, 12), uint32]) */;
  %554 = @func_5741() /* ty=Tensor[(13, 16, 12), uint32] */;
  %555 = %553.0;
  %556 = @func_5425() /* ty=Tensor[(132), bool] */;
  %557 = @func_5741() /* ty=Tensor[(13, 16, 12), uint32] */;
  (%554, %555, %556, %557)
}

def @func_5567(%var_5565: Tensor[(2, 16, 12), float64], %var_5566: Tensor[(2, 16, 12), float64]) -> (Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), uint32], Tensor[(2, 16, 12), uint32], Tensor[(1, 16, 12), float64], Tensor[(2, 16, 12), float64]) {
  @func_5563(%var_5565, %var_5566) /* ty=(Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), uint32], Tensor[(2, 16, 12), uint32], Tensor[(1, 16, 12), float64], Tensor[(2, 16, 12), float64]) */
}

def @func_7508(%var_7506: Tensor[(5, 6, 5), float64]) -> (Tensor[(5, 6, 5), float64], Tensor[(5, 6, 5), float64]) {
  @func_7505(%var_7506) /* ty=(Tensor[(5, 6, 5), float64], Tensor[(5, 6, 5), float64]) */
}

def @func_9575(%var_9552: Tensor[(960), int16]) -> (Tensor[(1, 16, 12), float64], Tensor[(16, 2, 16), float64], Tensor[(960), int16]) {
  %558 = cast(%var_9552, dtype="int16") /* ty=Tensor[(960), int16] */;
  %559 = reshape(%558, newshape=[12, 16, 5]) /* ty=Tensor[(12, 16, 5), int16] */;
  %560 = @func_8393(%559) /* ty=(Tensor[(12, 16, 5), bool], Tensor[(16, 2, 16), float64], Tensor[(512), int16]) */;
  %561 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %562 = %560.1;
  (%561, %562, %var_9552)
}

def @func_10651() -> (Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), uint32], Tensor[(13, 16, 12), float64]) {
  %563 = @func_10423() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), float32]) */;
  %564 = @func_6764() /* ty=(Tensor[(11, 7, 6), float32], Tensor[(13, 16, 12), uint32], Tensor[(4, 16, 12), float64], Tensor[(1, 16, 12), float64]) */;
  %565 = %564.1;
  %566 = cast(%565, dtype="float32") /* ty=Tensor[(13, 16, 12), float32] */;
  %567 = reshape(%566, newshape=[13, 16, 12]) /* ty=Tensor[(13, 16, 12), float32] */;
  %568 = @func_10574(%567) /* ty=(Tensor[(13, 16, 12), float32],) */;
  %569 = %568.0;
  %570 = cast(%569, dtype="float64") /* ty=Tensor[(13, 16, 12), float64] */;
  %571 = %563.0;
  %572 = tan(%570) /* ty=Tensor[(13, 16, 12), float64] */;
  (%571, %565, %572)
}

def @func_5972(%var_5971: Tensor[(5, 16, 12), float64]) -> Tensor[(5, 16, 12), float64] {
  %576 = fn (%var_5954: Tensor[(5, 16, 12), float64]) -> Tensor[(5, 16, 12), float64] {
    %573 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
    %574 = cast(%573, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
    %575 = cast(%var_5954, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
    floor_divide(%574, %575) /* ty=Tensor[(5, 16, 12), float64] */
  };
  %576(%var_5971) /* ty=Tensor[(5, 16, 12), float64] */
}

def @func_10077(%var_10076: Tensor[(256, 1), float32]) -> (Tensor[(13, 16, 12), uint32], Tensor[(4, 8, 8), float32], Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(256, 1), float32]) {
  %587 = fn (%var_10062: Tensor[(256, 1), float32]) -> (Tensor[(13, 16, 12), uint32], Tensor[(4, 8, 8), float32], Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(256, 1), float32]) {
    %577 = cast(%var_10062, dtype="float32") /* ty=Tensor[(256, 1), float32] */;
    %578 = cast(%var_10062, dtype="float32") /* ty=Tensor[(256, 1), float32] */;
    %579 = reshape(%577, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
    %580 = reshape(%578, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
    %581 = cast(%var_10062, dtype="float32") /* ty=Tensor[(256, 1), float32] */;
    %582 = @func_8594() /* ty=Tensor[(13, 16, 12), uint32] */;
    %583 = @func_6429(%579, %580) /* ty=Tensor[(4, 8, 8), float32] */;
    %584 = @func_5463() /* ty=Tensor[(1, 16, 12), float64] */;
    %585 = @func_7586() /* ty=Tensor[(1, 16, 12), float64] */;
    %586 = log10(%581) /* ty=Tensor[(256, 1), float32] */;
    (%582, %583, %584, %585, %586)
  };
  %587(%var_10076) /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(4, 8, 8), float32], Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(256, 1), float32]) */
}

def @func_8231() -> (Tensor[(13, 16, 12), float64], int32, Tensor[(24, 80), float64], Tensor[(1536), float32], Tensor[(11, 7, 6), int16]) {
  %588 = @func_7702() /* ty=(Tensor[(13, 16, 12), float64],) */;
  %589 = cast(meta[relay.Constant][37] /* ty=Tensor[(24, 80), float64] */, dtype="float64") /* ty=Tensor[(24, 80), float64] */;
  %590 = cast(meta[relay.Constant][38] /* ty=Tensor[(1536), float32] */, dtype="float32") /* ty=Tensor[(1536), float32] */;
  %591 = reshape(%589, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %592 = reshape(%590, newshape=[1536]) /* ty=Tensor[(1536), float32] */;
  %593 = @func_4791(%591, %592) /* ty=(Tensor[(10, 16, 12), int16], int32, Tensor[(1536), float32], int32) */;
  %594 = @func_4236() /* ty=(Tensor[(11, 7, 6), int16],) */;
  %595 = %588.0;
  %596 = %593.1;
  %597 = %594.0;
  (%595, %596, meta[relay.Constant][37] /* ty=Tensor[(24, 80), float64] */, meta[relay.Constant][38] /* ty=Tensor[(1536), float32] */, %597)
}

def @func_10711(%var_10709: Tensor[(660), float32], %var_10710: Tensor[(4, 16, 12), float64]) -> (Tensor[(330), float32], Tensor[(660), float32], Tensor[(4, 16, 12), float32], Tensor[(13, 16, 12), float64]) {
  %608 = fn (%var_10675: Tensor[(660), float32], %var_10691: Tensor[(4, 16, 12), float64]) -> (Tensor[(330), float32], Tensor[(660), float32], Tensor[(4, 16, 12), float32], Tensor[(13, 16, 12), float64]) {
    %598 = cast(%var_10675, dtype="float32") /* ty=Tensor[(660), float32] */;
    %599 = reshape(%598, newshape=[10, 6, 11]) /* ty=Tensor[(10, 6, 11), float32] */;
    %600 = @func_8643(%599) /* ty=(Tensor[(10, 6, 11), float32], Tensor[(3, 10, 11), float32], Tensor[(330), float32]) */;
    %601 = @func_7790() /* ty=(Tensor[(1, 16, 12), float64],) */;
    %602 = %601.0;
    %603 = cast(%602, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
    %604 = cast(%var_10691, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
    %605 = %600.2;
    %606 = floor_mod(%603, %604) /* ty=Tensor[(4, 16, 12), float32] */;
    %607 = @func_7609() /* ty=Tensor[(13, 16, 12), float64] */;
    (%605, %var_10675, %606, %607)
  };
  %608(%var_10709, %var_10710) /* ty=(Tensor[(330), float32], Tensor[(660), float32], Tensor[(4, 16, 12), float32], Tensor[(13, 16, 12), float64]) */
}

def @func_1883(%var_1881: Tensor[(11, 7, 6), int16], %var_1882: Tensor[(11, 7, 6), int16]) -> (Tensor[(11, 7, 6), int16],) {
  %614 = fn (%var_1874: Tensor[(11, 7, 6), int16], %var_1875: Tensor[(11, 7, 6), int16]) -> (Tensor[(11, 7, 6), int16],) {
    %609 = cast(%var_1875, dtype="int16") /* ty=Tensor[(11, 7, 6), int16] */;
    %610 = shape_of(%var_1874, dtype="int32") /* ty=Tensor[(3), int32] */;
    %611 = cast(%var_1874, dtype="int16") /* ty=Tensor[(11, 7, 6), int16] */;
    %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %613 = bitwise_and(%611, %612) /* ty=Tensor[(11, 7, 6), int16] */;
    (%613,)
  };
  %614(%var_1881, %var_1882) /* ty=(Tensor[(11, 7, 6), int16],) */
}

def @func_8822(%var_8820: Tensor[(15, 13, 9), float64]) -> (Tensor[(15, 13, 9), int16], Tensor[(132), bool]) {
  @func_8819(%var_8820) /* ty=(Tensor[(15, 13, 9), int16], Tensor[(132), bool]) */
}

def @func_4483(%var_4482: Tensor[(1800), int8]) -> (Tensor[(1, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) {
  %624 = fn (%var_4477: Tensor[(1800), int8]) -> (Tensor[(1, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) {
    %615 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
    %616 = %615.1;
    %617 = cast(%616, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
    %618 = cast(%var_4477, dtype="int8") /* ty=Tensor[(1800), int8] */;
    %619 = cast(%var_4477, dtype="int8") /* ty=Tensor[(1800), int8] */;
    %620 = reshape(%618, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
    %621 = reshape(%619, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), int8] */;
    %622 = atanh(%617) /* ty=Tensor[(1, 16, 12), float64] */;
    %623 = @func_3654(%620, %621) /* ty=Tensor[(8, 15, 15), uint8] */;
    (%622, %623, %var_4477)
  };
  %624(%var_4482) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */
}

def @func_6422() -> (Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) {
  %634 = fn () -> (Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) {
    %625 = @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */;
    %626 = @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */;
    %627 = @func_4816() /* ty=(Tensor[(13, 16, 12), uint32],) */;
    %628 = @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */;
    %629 = %625.0;
    %630 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
    %631 = %626.1;
    %632 = %627.0;
    %633 = %628.1;
    (%629, %630, %631, %632, %633)
  };
  %634() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), uint32], Tensor[(1, 16, 12), float64]) */
}

def @func_6289() -> Tensor[(1, 16, 12), float64] {
  %636 = fn () -> Tensor[(1, 16, 12), float64] {
    %635 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
    %635.1
  };
  %636() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_9961() -> Tensor[(132), bool] {
  @func_9959() /* ty=Tensor[(132), bool] */
}

def @func_4867(%var_4866: Tensor[(2, 16, 12), float64]) -> (Tensor[(13, 16, 12), bool], Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), int32]) {
  %649 = fn (%var_4842: Tensor[(2, 16, 12), float64]) -> (Tensor[(13, 16, 12), bool], Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), int32]) {
    %637 = @func_4816() /* ty=(Tensor[(13, 16, 12), uint32],) */;
    %638 = %637.0;
    %639 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
    %640 = cast(%638, dtype="bool") /* ty=Tensor[(13, 16, 12), bool] */;
    %641 = cast(%639, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
    %642 = cast(%639, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
    %643 = cast(%var_4842, dtype="bool") /* ty=Tensor[(2, 16, 12), bool] */;
    %644 = cast(%639, dtype="int32") /* ty=Tensor[(1, 16, 12), int32] */;
    %645 = cast(%var_4842, dtype="int32") /* ty=Tensor[(2, 16, 12), int32] */;
    %646 = less(%640, %641) /* ty=Tensor[(13, 16, 12), bool] */;
    %647 = greater_equal(%642, %643) /* ty=Tensor[(2, 16, 12), bool] */;
    %648 = left_shift(%644, %645) /* ty=Tensor[(2, 16, 12), int32] */;
    (%646, %647, %648)
  };
  %649(%var_4866) /* ty=(Tensor[(13, 16, 12), bool], Tensor[(2, 16, 12), bool], Tensor[(2, 16, 12), int32]) */
}

def @func_7974() -> Tensor[(1, 16, 12), float64] {
  %650 = @func_7790() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %650.0
}

def @func_9603() -> (Tensor[(132), bool], Tensor[(1, 16, 12), float64]) {
  @func_9601() /* ty=(Tensor[(132), bool], Tensor[(1, 16, 12), float64]) */
}

def @func_9485() -> (Tensor[(1, 16, 12), float64],) {
  @func_9483() /* ty=(Tensor[(1, 16, 12), float64],) */
}

def @func_9675() -> (Tensor[(13, 16, 12), bool],) {
  %657 = fn () -> (Tensor[(13, 16, 12), bool],) {
    %651 = @func_5003() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool], Tensor[(11, 7, 6), int16]) */;
    %652 = %651.0;
    %653 = @func_6974() /* ty=Tensor[(13, 16, 12), float64] */;
    %654 = cast(%652, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
    %655 = cast(%653, dtype="bool") /* ty=Tensor[(13, 16, 12), bool] */;
    %656 = greater_equal(%654, %655) /* ty=Tensor[(13, 16, 12), bool] */;
    (%656,)
  };
  %657() /* ty=(Tensor[(13, 16, 12), bool],) */
}

def @func_6154(%var_6151: Tensor[(1536), float32], %var_6152: int32, %var_6153: Tensor[(550), uint16]) -> (Tensor[(1, 16, 12), float64], Tensor[(5, 16, 12), float64], Tensor[(960), float64], Tensor[(12, 16, 8), float32], Tensor[(1536), float32], int32, Tensor[(132), bool], Tensor[(2496), uint32], Tensor[(550), uint16], Tensor[(550), uint16]) {
  %678 = fn (%var_6093: Tensor[(1536), float32], %var_6094: int32, %var_6100: Tensor[(550), uint16]) -> (Tensor[(1, 16, 12), float64], Tensor[(5, 16, 12), float64], Tensor[(960), float64], Tensor[(12, 16, 8), float32], Tensor[(1536), float32], int32, Tensor[(132), bool], Tensor[(2496), uint32], Tensor[(550), uint16], Tensor[(550), uint16]) {
    %658 = @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */;
    %659 = cast(meta[relay.Constant][39] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %660 = reshape(%659, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), float64] */;
    %661 = cast(%var_6093, dtype="float32") /* ty=Tensor[(1536), float32] */;
    %662 = cast(%var_6094, dtype="int32") /* ty=int32 */;
    %663 = reshape(%661, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), float32] */;
    %664 = reshape(%662, newshape=[]) /* ty=int32 */;
    %665 = @func_3050(%663, %664) /* ty=(Tensor[(12, 16, 8), float32], int32, Tensor[(2, 8), int32], Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(2, 8, 168), bool]) */;
    %666 = cast(%var_6100, dtype="uint16") /* ty=Tensor[(550), uint16] */;
    %667 = reshape(%666, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), uint16] */;
    %668 = @func_5133(%667) /* ty=(Tensor[(11, 10, 5), uint16], Tensor[(168), int8], int32, Tensor[(16), int32], Tensor[(2496), uint32]) */;
    %669 = cast(%var_6093, dtype="float32") /* ty=Tensor[(1536), float32] */;
    %670 = reshape(%669, newshape=[1536, 1]) /* ty=Tensor[(1536, 1), float32] */;
    %671 = @func_5322(%670) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(10, 16, 12), int16], Tensor[(1536, 1920), bool], Tensor[(1, 16, 12), float64], Tensor[(168), int8], Tensor[(550), uint16]) */;
    %672 = %658.1;
    %673 = @func_5970(%660) /* ty=Tensor[(5, 16, 12), float64] */;
    %674 = %665.0;
    %675 = @func_5840() /* ty=Tensor[(132), bool] */;
    %676 = %668.4;
    %677 = %671.5;
    (%672, %673, meta[relay.Constant][39] /* ty=Tensor[(960), float64] */, %674, %var_6093, %var_6094, %675, %676, %var_6100, %677)
  };
  %678(%var_6151, %var_6152, %var_6153) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(5, 16, 12), float64], Tensor[(960), float64], Tensor[(12, 16, 8), float32], Tensor[(1536), float32], int32, Tensor[(132), bool], Tensor[(2496), uint32], Tensor[(550), uint16], Tensor[(550), uint16]) */
}

def @func_6631() -> (Tensor[(1, 16, 12), float32], Tensor[(13, 16, 12), uint32]) {
  %679 = @func_5011() /* ty=(Tensor[(1, 16, 12), float32],) */;
  %680 = %679.0;
  %681 = @func_4972() /* ty=Tensor[(13, 16, 12), uint32] */;
  (%680, %681)
}

def @func_10979(%var_10975: Tensor[(12, 13, 1), float32]) -> Tensor[(12, 13, 1), float32] {
  %682 = cast(%var_10975, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  log10(%682) /* ty=Tensor[(12, 13, 1), float32] */
}

def @func_6633() -> (Tensor[(1, 16, 12), float32], Tensor[(13, 16, 12), uint32]) {
  @func_6631() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(13, 16, 12), uint32]) */
}

def @func_7636() -> Tensor[(11, 7, 6), int16] {
  %684 = fn () -> Tensor[(11, 7, 6), int16] {
    %683 = @func_6579() /* ty=(Tensor[(11, 7, 6), int16],) */;
    %683.0
  };
  %684() /* ty=Tensor[(11, 7, 6), int16] */
}

def @func_6974() -> Tensor[(13, 16, 12), float64] {
  %685 = @func_4209() /* ty=Tensor[(13, 16, 12), uint32] */;
  %686 = cast(%685, dtype="float64") /* ty=Tensor[(13, 16, 12), float64] */;
  sigmoid(%686) /* ty=Tensor[(13, 16, 12), float64] */
}

def @func_8732() -> (Tensor[(1, 16, 12), float32],) {
  %689 = fn () -> (Tensor[(1, 16, 12), float32],) {
    %687 = @func_5011() /* ty=(Tensor[(1, 16, 12), float32],) */;
    %688 = %687.0;
    (%688,)
  };
  %689() /* ty=(Tensor[(1, 16, 12), float32],) */
}

def @func_10027() -> Tensor[(1, 16, 12), float32] {
  @func_10025() /* ty=Tensor[(1, 16, 12), float32] */
}

def @func_9924() -> (Tensor[(4, 16, 12), float32],) {
  %690 = @func_9863() /* ty=(Tensor[(4, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1560), int8], Tensor[(900, 2), int8]) */;
  %691 = %690.0;
  %692 = @func_9420() /* ty=Tensor[(1, 16, 12), float64] */;
  %693 = cast(%691, dtype="bool") /* ty=Tensor[(4, 16, 12), bool] */;
  %694 = cast(%692, dtype="bool") /* ty=Tensor[(1, 16, 12), bool] */;
  %695 = equal(%693, %694) /* ty=Tensor[(4, 16, 12), bool] */;
  %696 = cast(%695, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %697 = log(%696) /* ty=Tensor[(4, 16, 12), float32] */;
  (%697,)
}

def @func_3755() -> Tensor[(1, 16, 12), float64] {
  %699 = fn () -> Tensor[(1, 16, 12), float64] {
    %698 = @func_3719() /* ty=(Tensor[(1, 16, 12), float64],) */;
    %698.0
  };
  %699() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_5257(%var_5254: Tensor[(512), int16], %var_5255: int32, %var_5256: Tensor[(16), int32]) -> (Tensor[(1, 16, 12), float32], Tensor[(16, 2, 16), int32], Tensor[(512), int16], Tensor[(2, 8, 1), int32], int32, Tensor[(16), int32]) {
  @func_5252(%var_5254, %var_5255, %var_5256) /* ty=(Tensor[(1, 16, 12), float32], Tensor[(16, 2, 16), int32], Tensor[(512), int16], Tensor[(2, 8, 1), int32], int32, Tensor[(16), int32]) */
}

def @func_6590() -> (Tensor[(11, 7, 6), int16],) {
  %702 = fn () -> (Tensor[(11, 7, 6), int16],) {
    %700 = @func_4236() /* ty=(Tensor[(11, 7, 6), int16],) */;
    %701 = %700.0;
    (%701,)
  };
  %702() /* ty=(Tensor[(11, 7, 6), int16],) */
}

def @func_5613() -> (Tensor[(1, 16, 12), float64],) {
  %703 = @func_3719() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %704 = %703.0;
  (%704,)
}

def @func_10363() -> (Tensor[(13, 16, 12), bool], Tensor[(1, 16, 12), float64], Tensor[(13, 12, 4), float64], Tensor[(624), float64], int32, Tensor[(275, 2), int8], Tensor[(132), bool], Tensor[(132), bool], Tensor[(13, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) {
  %731 = fn () -> (Tensor[(13, 16, 12), bool], Tensor[(1, 16, 12), float64], Tensor[(13, 12, 4), float64], Tensor[(624), float64], int32, Tensor[(275, 2), int8], Tensor[(132), bool], Tensor[(132), bool], Tensor[(13, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) {
    %705 = @func_9674() /* ty=(Tensor[(13, 16, 12), bool],) */;
    %706 = @func_9601() /* ty=(Tensor[(132), bool], Tensor[(1, 16, 12), float64]) */;
    %707 = cast(meta[relay.Constant][40] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
    %708 = reshape(%707, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), float64] */;
    %709 = @func_10194(%708) /* ty=(Tensor[(13, 12, 4), float64],) */;
    %710 = cast(meta[relay.Constant][41] /* ty=Tensor[(275, 2), uint16] */, dtype="uint16") /* ty=Tensor[(275, 2), uint16] */;
    %711 = reshape(%710, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), uint16] */;
    %712 = @func_5133(%711) /* ty=(Tensor[(11, 10, 5), uint16], Tensor[(168), int8], int32, Tensor[(16), int32], Tensor[(2496), uint32]) */;
    %713 = cast(meta[relay.Constant][42] /* ty=Tensor[(275, 2), uint16] */, dtype="int8") /* ty=Tensor[(275, 2), int8] */;
    %714 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(275, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %715 = cast(meta[relay.Constant][41] /* ty=Tensor[(275, 2), uint16] */, dtype="int8") /* ty=Tensor[(275, 2), int8] */;
    %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %717 = cast(meta[relay.Constant][43] /* ty=Tensor[(462), int16] */, dtype="int16") /* ty=Tensor[(462), int16] */;
    %718 = cast(meta[relay.Constant][43] /* ty=Tensor[(462), int16] */, dtype="int16") /* ty=Tensor[(462), int16] */;
    %719 = reshape(%717, newshape=[11, 7, 6]) /* ty=Tensor[(11, 7, 6), int16] */;
    %720 = reshape(%718, newshape=[11, 7, 6]) /* ty=Tensor[(11, 7, 6), int16] */;
    %721 = @func_1880(%719, %720) /* ty=(Tensor[(11, 7, 6), int16],) */;
    %722 = %705.0;
    %723 = %706.1;
    %724 = %709.0;
    %725 = %712.2;
    %726 = logical_xor(%715, %716) /* ty=Tensor[(275, 2), int8] */;
    %727 = @func_5425() /* ty=Tensor[(132), bool] */;
    %728 = @func_5840() /* ty=Tensor[(132), bool] */;
    %729 = @func_7609() /* ty=Tensor[(13, 16, 12), float64] */;
    %730 = %721.0;
    (%722, %723, %724, meta[relay.Constant][40] /* ty=Tensor[(624), float64] */, %725, %726, %727, %728, %729, %730, meta[relay.Constant][43] /* ty=Tensor[(462), int16] */)
  };
  %731() /* ty=(Tensor[(13, 16, 12), bool], Tensor[(1, 16, 12), float64], Tensor[(13, 12, 4), float64], Tensor[(624), float64], int32, Tensor[(275, 2), int8], Tensor[(132), bool], Tensor[(132), bool], Tensor[(13, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */
}

def @func_6339() -> Tensor[(?, 16, 12), bool] {
  @func_6337() /* ty=Tensor[(?, 16, 12), bool] */
}

def @func_10982(%var_10980: Tensor[(12, 13, 1), float32]) -> Tensor[(12, 13, 1), float32] {
  @func_10979(%var_10980) /* ty=Tensor[(12, 13, 1), float32] */
}

def @func_8594() -> Tensor[(13, 16, 12), uint32] {
  @func_4972() /* ty=Tensor[(13, 16, 12), uint32] */
}

def @func_7587() -> Tensor[(1, 16, 12), float64] {
  %733 = fn () -> Tensor[(1, 16, 12), float64] {
    %732 = @func_7267() /* ty=(Tensor[(1, 16, 12), float64],) */;
    %732.0
  };
  %733() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_8450(%var_8449: Tensor[(1800), int8]) -> (Tensor[(13, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(1800), int8]) {
  %739 = fn (%var_8442: Tensor[(1800), int8]) -> (Tensor[(13, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(1800), int8]) {
    %734 = cast(%var_8442, dtype="int8") /* ty=Tensor[(1800), int8] */;
    %735 = reshape(%734, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
    %736 = @func_4481(%735) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */;
    %737 = @func_7609() /* ty=Tensor[(13, 16, 12), float64] */;
    %738 = %736.0;
    (%737, %738, %var_8442)
  };
  %739(%var_8449) /* ty=(Tensor[(13, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(1800), int8]) */
}

def @func_9393(%var_9382: Tensor[(3, 16, 12), float64]) -> (Tensor[(1, 16, 12), float64], Tensor[(3, 16, 12), float32]) {
  %740 = @func_7790() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %741 = @func_7790() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %742 = %741.0;
  %743 = cast(%742, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
  %744 = cast(%var_9382, dtype="float32") /* ty=Tensor[(3, 16, 12), float32] */;
  %745 = %740.0;
  %746 = multiply(%743, %744) /* ty=Tensor[(3, 16, 12), float32] */;
  (%745, %746)
}

def @func_9396(%var_9394: Tensor[(3, 16, 12), float64]) -> (Tensor[(1, 16, 12), float64], Tensor[(3, 16, 12), float32]) {
  @func_9393(%var_9394) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(3, 16, 12), float32]) */
}

def @func_5406(%var_5402: Tensor[(14, 16, 12), float64], %var_5403: Tensor[(1800), int8], %var_5404: Tensor[(1536), float32], %var_5405: int8) -> (Tensor[(14, 16, 12), float64], Tensor[(6, 16, 12), uint32], Tensor[(1800), int8], Tensor[(1800), int8], Tensor[(1, 16, 12), float64], Tensor[(1536), float32], Tensor[(13, 16, 12), uint32], Tensor[(168, 1), int8], int8) {
  %771 = fn (%var_5349: Tensor[(14, 16, 12), float64], %var_5371: Tensor[(1800), int8], %var_5386: Tensor[(1536), float32], %var_5396: int8) -> (Tensor[(14, 16, 12), float64], Tensor[(6, 16, 12), uint32], Tensor[(1800), int8], Tensor[(1800), int8], Tensor[(1, 16, 12), float64], Tensor[(1536), float32], Tensor[(13, 16, 12), uint32], Tensor[(168, 1), int8], int8) {
    %747 = @func_3719() /* ty=(Tensor[(1, 16, 12), float64],) */;
    %748 = %747.0;
    %749 = cast(%748, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
    %750 = cast(%var_5349, dtype="float64") /* ty=Tensor[(14, 16, 12), float64] */;
    %751 = cast(%748, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
    %752 = tan(%751) /* ty=Tensor[(1, 16, 12), float64] */;
    %753 = cast(%752, dtype="uint32") /* ty=Tensor[(1, 16, 12), uint32] */;
    %754 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 16, 12), float64] */, dtype="uint32") /* ty=Tensor[(6, 16, 12), uint32] */;
    %755 = cast(%var_5371, dtype="int8") /* ty=Tensor[(1800), int8] */;
    %756 = reshape(%755, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
    %757 = @func_4481(%756) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */;
    %758 = cast(%var_5386, dtype="float32") /* ty=Tensor[(1536), float32] */;
    %759 = reshape(%758, newshape=[1536, 1]) /* ty=Tensor[(1536, 1), float32] */;
    %760 = @func_5322(%759) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(10, 16, 12), int16], Tensor[(1536, 1920), bool], Tensor[(1, 16, 12), float64], Tensor[(168), int8], Tensor[(550), uint16]) */;
    %761 = @func_4816() /* ty=(Tensor[(13, 16, 12), uint32],) */;
    %762 = cast(%var_5396, dtype="int8") /* ty=int8 */;
    %763 = reshape(%762, newshape=[]) /* ty=int8 */;
    %764 = @func_2639(%763) /* ty=(Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(5, 7, 3), bool], Tensor[(2, 8, 1), int32], Tensor[(4, 4), int32]) */;
    %765 = power(%749, %750) /* ty=Tensor[(14, 16, 12), float64] */;
    %766 = bitwise_xor(%753, %754) /* ty=Tensor[(6, 16, 12), uint32] */;
    %767 = %757.2;
    %768 = %760.3;
    %769 = %761.0;
    %770 = %764.1;
    (%765, %766, %767, %var_5371, %768, %var_5386, %769, %770, %var_5396)
  };
  %771(%var_5402, %var_5403, %var_5404, %var_5405) /* ty=(Tensor[(14, 16, 12), float64], Tensor[(6, 16, 12), uint32], Tensor[(1800), int8], Tensor[(1800), int8], Tensor[(1, 16, 12), float64], Tensor[(1536), float32], Tensor[(13, 16, 12), uint32], Tensor[(168, 1), int8], int8) */
}

def @func_10771() -> (Tensor[(1, 16, 12), float32],) {
  %772 = @func_9227() /* ty=Tensor[(1, 16, 12), float32] */;
  (%772,)
}

def @func_6765() -> (Tensor[(11, 7, 6), float32], Tensor[(13, 16, 12), uint32], Tensor[(4, 16, 12), float64], Tensor[(1, 16, 12), float64]) {
  %781 = fn () -> (Tensor[(11, 7, 6), float32], Tensor[(13, 16, 12), uint32], Tensor[(4, 16, 12), float64], Tensor[(1, 16, 12), float64]) {
    %773 = @func_4236() /* ty=(Tensor[(11, 7, 6), int16],) */;
    %774 = %773.0;
    %775 = cast(%774, dtype="float32") /* ty=Tensor[(11, 7, 6), float32] */;
    %776 = @func_4950() /* ty=(Tensor[(4, 16, 12), float64],) */;
    %777 = log10(%775) /* ty=Tensor[(11, 7, 6), float32] */;
    %778 = @func_5741() /* ty=Tensor[(13, 16, 12), uint32] */;
    %779 = %776.0;
    %780 = @func_3754() /* ty=Tensor[(1, 16, 12), float64] */;
    (%777, %778, %779, %780)
  };
  %781() /* ty=(Tensor[(11, 7, 6), float32], Tensor[(13, 16, 12), uint32], Tensor[(4, 16, 12), float64], Tensor[(1, 16, 12), float64]) */
}

def @func_9863() -> (Tensor[(4, 16, 12), float64], Tensor[(8, 15, 15), uint8], Tensor[(1560), int8], Tensor[(900, 2), int8]) {
  %782 = cast(meta[relay.Constant][45] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %783 = cast(meta[relay.Constant][46] /* ty=Tensor[(900, 2), int8] */, dtype="int8") /* ty=Tensor[(900, 2), int8] */;
  %784 = reshape(%782, newshape=[1560]) /* ty=Tensor[(1560), int8] */;
  %785 = reshape(%783, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %786 = @func_5831(%784, %785) /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(15, 13, 8), float64], Tensor[(1560), int8], Tensor[(11, 7, 6), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */;
  %787 = @func_7454() /* ty=Tensor[(4, 16, 12), float64] */;
  %788 = %786.4;
  (%787, %788, meta[relay.Constant][45] /* ty=Tensor[(1560), int8] */, meta[relay.Constant][46] /* ty=Tensor[(900, 2), int8] */)
}

def @func_7790() -> (Tensor[(1, 16, 12), float64],) {
  %789 = @func_3754() /* ty=Tensor[(1, 16, 12), float64] */;
  (%789,)
}

def @func_6048(%var_6047: Tensor[(5, 16, 12), float64]) -> (Tensor[(5, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(4, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
  %802 = fn (%var_6003: Tensor[(5, 16, 12), float64]) -> (Tensor[(5, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(4, 16, 12), float64], Tensor[(5, 16, 12), float32]) {
    %790 = @func_5463() /* ty=Tensor[(1, 16, 12), float64] */;
    %791 = cast(%790, dtype="float32") /* ty=Tensor[(1, 16, 12), float32] */;
    %792 = cast(%var_6003, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
    %793 = @func_4950() /* ty=(Tensor[(4, 16, 12), float64],) */;
    %794 = cast(%790, dtype="int16") /* ty=Tensor[(1, 16, 12), int16] */;
    %795 = cast(%var_6003, dtype="int16") /* ty=Tensor[(5, 16, 12), int16] */;
    %796 = bitwise_xor(%794, %795) /* ty=Tensor[(5, 16, 12), int16] */;
    %797 = cast(%796, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
    %798 = floor_mod(%791, %792) /* ty=Tensor[(5, 16, 12), float32] */;
    %799 = @func_3835() /* ty=Tensor[(1, 16, 12), float64] */;
    %800 = %793.0;
    %801 = asinh(%797) /* ty=Tensor[(5, 16, 12), float32] */;
    (%798, %799, %800, %801)
  };
  %802(%var_6047) /* ty=(Tensor[(5, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(4, 16, 12), float64], Tensor[(5, 16, 12), float32]) */
}

def @func_5037() -> Tensor[(11, 7, 6), int16] {
  %803 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %803.2
}

def @func_7704() -> (Tensor[(13, 16, 12), float64],) {
  @func_7702() /* ty=(Tensor[(13, 16, 12), float64],) */
}

def @func_5615() -> (Tensor[(1, 16, 12), float64],) {
  @func_5613() /* ty=(Tensor[(1, 16, 12), float64],) */
}

def @func_3986(%var_3984: Tensor[(15, 13, 8), int8], %var_3985: Tensor[(15, 13, 8), int8]) -> (Tensor[(15, 13, 8), int8], Tensor[(15, 13, 8), float64]) {
  %814 = fn (%var_3959: Tensor[(15, 13, 8), int8], %var_3960: Tensor[(15, 13, 8), int8]) -> (Tensor[(15, 13, 8), int8], Tensor[(15, 13, 8), float64]) {
    %804 = cast(%var_3960, dtype="int8") /* ty=Tensor[(15, 13, 8), int8] */;
    %805 = shape_of(%var_3959, dtype="int32") /* ty=Tensor[(3), int32] */;
    %806 = cast(%var_3959, dtype="int8") /* ty=Tensor[(15, 13, 8), int8] */;
    %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %808 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 13, 8), int8] */, dtype="float64") /* ty=Tensor[(15, 13, 8), float64] */;
    %809 = shape_of(%var_3960, dtype="int32") /* ty=Tensor[(3), int32] */;
    %810 = cast(%var_3960, dtype="float64") /* ty=Tensor[(15, 13, 8), float64] */;
    %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %812 = left_shift(%806, %807) /* ty=Tensor[(15, 13, 8), int8] */;
    %813 = floor_divide(%810, %811) /* ty=Tensor[(15, 13, 8), float64] */;
    (%812, %813)
  };
  %814(%var_3984, %var_3985) /* ty=(Tensor[(15, 13, 8), int8], Tensor[(15, 13, 8), float64]) */
}

def @func_9296() -> (Tensor[(1, 16, 12), float64],) {
  %816 = fn () -> (Tensor[(1, 16, 12), float64],) {
    %815 = @func_5463() /* ty=Tensor[(1, 16, 12), float64] */;
    (%815,)
  };
  %816() /* ty=(Tensor[(1, 16, 12), float64],) */
}

def @func_8819(%var_8792: Tensor[(15, 13, 9), float64]) -> (Tensor[(15, 13, 9), int16], Tensor[(132), bool]) {
  %817 = cast(%var_8792, dtype="float64") /* ty=Tensor[(15, 13, 9), float64] */;
  %818 = asinh(%817) /* ty=Tensor[(15, 13, 9), float64] */;
  %819 = cast(%818, dtype="int16") /* ty=Tensor[(15, 13, 9), int16] */;
  %820 = shape_of(%var_8792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%var_8792, dtype="int16") /* ty=Tensor[(15, 13, 9), int16] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %823 = subtract(%821, %822) /* ty=Tensor[(15, 13, 9), int16] */;
  %824 = @func_5425() /* ty=Tensor[(132), bool] */;
  (%823, %824)
}

def @func_10194(%var_10176: Tensor[(13, 12, 4), float64]) -> (Tensor[(13, 12, 4), float64],) {
  %825 = cast(%var_10176, dtype="float64") /* ty=Tensor[(13, 12, 4), float64] */;
  %826 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(13, 12, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(meta[relay.Constant][48] /* ty=Tensor[(13, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(13, 12, 4), float64] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %829 = minimum(%827, %828) /* ty=Tensor[(13, 12, 4), float64] */;
  (%829,)
}

def @func_9578(%var_9576: Tensor[(960), int16]) -> (Tensor[(1, 16, 12), float64], Tensor[(16, 2, 16), float64], Tensor[(960), int16]) {
  @func_9575(%var_9576) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(16, 2, 16), float64], Tensor[(960), int16]) */
}

def @func_10773() -> (Tensor[(1, 16, 12), float32],) {
  @func_10771() /* ty=(Tensor[(1, 16, 12), float32],) */
}

def @func_5842() -> Tensor[(132), bool] {
  @func_5840() /* ty=Tensor[(132), bool] */
}

def @func_8108(%var_8107: int8) -> (Tensor[(13, 16, 12), uint32], Tensor[(2, 8, 1), int32], int8) {
  %835 = fn (%var_8099: int8) -> (Tensor[(13, 16, 12), uint32], Tensor[(2, 8, 1), int32], int8) {
    %830 = cast(%var_8099, dtype="int8") /* ty=int8 */;
    %831 = reshape(%830, newshape=[]) /* ty=int8 */;
    %832 = @func_2639(%831) /* ty=(Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(5, 7, 3), bool], Tensor[(2, 8, 1), int32], Tensor[(4, 4), int32]) */;
    %833 = @func_4209() /* ty=Tensor[(13, 16, 12), uint32] */;
    %834 = %832.3;
    (%833, %834, %var_8099)
  };
  %835(%var_8107) /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(2, 8, 1), int32], int8) */
}

def @func_7898(%var_7895: Tensor[(132), bool], %var_7896: Tensor[(1800, 1), int8], %var_7897: Tensor[(400), uint64]) -> (Tensor[(11, 7, 6), int16], Tensor[(3, 11, 4), bool], Tensor[(132), bool], Tensor[(1800), int8], Tensor[(1800, 1), int8], Tensor[(4, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(1536), float32], Tensor[(400), uint64], Tensor[(384), float64], Tensor[(132), bool]) {
  @func_7893(%var_7895, %var_7896, %var_7897) /* ty=(Tensor[(11, 7, 6), int16], Tensor[(3, 11, 4), bool], Tensor[(132), bool], Tensor[(1800), int8], Tensor[(1800, 1), int8], Tensor[(4, 16, 12), float64], Tensor[(1, 16, 12), float64], Tensor[(1536), float32], Tensor[(400), uint64], Tensor[(384), float64], Tensor[(132), bool]) */
}

def @func_11026() -> Tensor[(11, 7, 6), int16] {
  %836 = fn () -> Tensor[(11, 7, 6), int16] {
    @func_7523() /* ty=Tensor[(11, 7, 6), int16] */
  };
  %836() /* ty=Tensor[(11, 7, 6), int16] */
}

def @func_4817() -> (Tensor[(13, 16, 12), uint32],) {
  %838 = fn () -> (Tensor[(13, 16, 12), uint32],) {
    %837 = @func_4209() /* ty=Tensor[(13, 16, 12), uint32] */;
    (%837,)
  };
  %838() /* ty=(Tensor[(13, 16, 12), uint32],) */
}

def @func_5427() -> Tensor[(132), bool] {
  @func_5425() /* ty=Tensor[(132), bool] */
}

def @func_5701(%var_5699: Tensor[(256, 2), int16], %var_5700: int32) -> (Tensor[(462), int16], Tensor[(1, 16, 12), float32], Tensor[(16), int32], Tensor[(256, 2), int16], int32, Tensor[(16), int32], Tensor[(11, 7, 6), int16]) {
  %853 = fn (%var_5674: Tensor[(256, 2), int16], %var_5675: int32) -> (Tensor[(462), int16], Tensor[(1, 16, 12), float32], Tensor[(16), int32], Tensor[(256, 2), int16], int32, Tensor[(16), int32], Tensor[(11, 7, 6), int16]) {
    %839 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
    %840 = @func_5011() /* ty=(Tensor[(1, 16, 12), float32],) */;
    %841 = cast(%var_5674, dtype="int16") /* ty=Tensor[(256, 2), int16] */;
    %842 = cast(%var_5675, dtype="int32") /* ty=int32 */;
    %843 = cast(meta[relay.Constant][49] /* ty=Tensor[(16), int32] */, dtype="int32") /* ty=Tensor[(16), int32] */;
    %844 = reshape(%841, newshape=[512]) /* ty=Tensor[(512), int16] */;
    %845 = reshape(%842, newshape=[]) /* ty=int32 */;
    %846 = reshape(%843, newshape=[16]) /* ty=Tensor[(16), int32] */;
    %847 = @func_5252(%844, %845, %846) /* ty=(Tensor[(1, 16, 12), float32], Tensor[(16, 2, 16), int32], Tensor[(512), int16], Tensor[(2, 8, 1), int32], int32, Tensor[(16), int32]) */;
    %848 = @func_4236() /* ty=(Tensor[(11, 7, 6), int16],) */;
    %849 = %839.3;
    %850 = %840.0;
    %851 = %847.5;
    %852 = %848.0;
    (%849, %850, %851, %var_5674, %var_5675, meta[relay.Constant][49] /* ty=Tensor[(16), int32] */, %852)
  };
  %853(%var_5699, %var_5700) /* ty=(Tensor[(462), int16], Tensor[(1, 16, 12), float32], Tensor[(16), int32], Tensor[(256, 2), int16], int32, Tensor[(16), int32], Tensor[(11, 7, 6), int16]) */
}

def @func_4067() -> Tensor[(1, 16, 12), float64] {
  @func_4065() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_8669() -> Tensor[(13, 16, 12), uint32] {
  %854 = @func_6631() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(13, 16, 12), uint32]) */;
  %854.1
}

def @func_5003() -> (Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool], Tensor[(11, 7, 6), int16]) {
  %855 = cast(meta[relay.Constant][50] /* ty=Tensor[(132), bool] */, dtype="bool") /* ty=Tensor[(132), bool] */;
  %856 = cast(meta[relay.Constant][50] /* ty=Tensor[(132), bool] */, dtype="bool") /* ty=Tensor[(132), bool] */;
  %857 = reshape(%855, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), bool] */;
  %858 = reshape(%856, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), bool] */;
  %859 = @func_3477(%857, %858) /* ty=(Tensor[(3, 11, 4), bool],) */;
  %860 = @func_4236() /* ty=(Tensor[(11, 7, 6), int16],) */;
  %861 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
  %862 = %859.0;
  %863 = %860.0;
  (%861, %862, meta[relay.Constant][50] /* ty=Tensor[(132), bool] */, %863)
}

def @func_1651(%var_1649: int8, %var_1650: Tensor[(4, 14, 3), int8]) -> Tensor[(4, 14, 3), int8] {
  @func_1647(%var_1649, %var_1650) /* ty=Tensor[(4, 14, 3), int8] */
}

def @func_5005() -> (Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool], Tensor[(11, 7, 6), int16]) {
  @func_5003() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(3, 11, 4), bool], Tensor[(132), bool], Tensor[(11, 7, 6), int16]) */
}

def @func_4459(%var_4457: Tensor[(6, 14, 11), uint16], %var_4458: Tensor[(6, 14, 11), uint16]) -> (Tensor[(6, 14, 11), uint16], Tensor[(6, 14, 11), float32]) {
  @func_4455(%var_4457, %var_4458) /* ty=(Tensor[(6, 14, 11), uint16], Tensor[(6, 14, 11), float32]) */
}

def @func_5039() -> Tensor[(11, 7, 6), int16] {
  @func_5037() /* ty=Tensor[(11, 7, 6), int16] */
}

def @func_9601() -> (Tensor[(132), bool], Tensor[(1, 16, 12), float64]) {
  %864 = @func_7267() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %865 = @func_8331() /* ty=Tensor[(132), bool] */;
  %866 = %864.0;
  (%865, %866)
}

def @func_5011() -> (Tensor[(1, 16, 12), float32],) {
  %867 = @func_3931() /* ty=(Tensor[(1, 16, 12), float32], Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), int16], Tensor[(462), int16]) */;
  %868 = %867.0;
  (%868,)
}

def @func_10765() -> (Tensor[(1, 16, 12), float64],) {
  %871 = fn () -> (Tensor[(1, 16, 12), float64],) {
    %869 = @func_7267() /* ty=(Tensor[(1, 16, 12), float64],) */;
    %870 = %869.0;
    (%870,)
  };
  %871() /* ty=(Tensor[(1, 16, 12), float64],) */
}

def @func_8157(%var_8155: int32, %var_8156: Tensor[(1536), float32]) -> (Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(512), int16], int32, Tensor[(13, 16, 12), uint32], int32, Tensor[(1920), float64], Tensor[(1536), float32]) {
  @func_8153(%var_8155, %var_8156) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(512), int16], int32, Tensor[(13, 16, 12), uint32], int32, Tensor[(1920), float64], Tensor[(1536), float32]) */
}

def @func_9420() -> Tensor[(1, 16, 12), float64] {
  @func_6828() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_6855() -> (Tensor[(11, 7, 6), int16],) {
  @func_6853() /* ty=(Tensor[(11, 7, 6), int16],) */
}

def @func_4455(%var_4424: Tensor[(6, 14, 11), uint16], %var_4425: Tensor[(6, 14, 11), uint16]) -> (Tensor[(6, 14, 11), uint16], Tensor[(6, 14, 11), float32]) {
  %872 = cast(%var_4425, dtype="uint16") /* ty=Tensor[(6, 14, 11), uint16] */;
  %873 = shape_of(%var_4424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%var_4424, dtype="uint16") /* ty=Tensor[(6, 14, 11), uint16] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %876 = cast(%var_4425, dtype="float32") /* ty=Tensor[(6, 14, 11), float32] */;
  %877 = subtract(%874, %875) /* ty=Tensor[(6, 14, 11), uint16] */;
  %878 = exp(%876) /* ty=Tensor[(6, 14, 11), float32] */;
  (%877, %878)
}

def @func_5840() -> Tensor[(132), bool] {
  @func_5425() /* ty=Tensor[(132), bool] */
}

def @func_9422() -> Tensor[(1, 16, 12), float64] {
  @func_9420() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_10425() -> (Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), float32]) {
  @func_10423() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(11, 7, 6), float32]) */
}

def @func_11095(%var_11093: Tensor[(1560), int8], %var_11094: Tensor[(3, 600), int8]) -> (Tensor[(8, 16, 12), float32], Tensor[(11, 7, 6), int16], Tensor[(15, 13, 8), float64], Tensor[(1560), int8], Tensor[(3, 600), int8], Tensor[(1, 16, 12), float64]) {
  %891 = fn (%var_11086: Tensor[(1560), int8], %var_11087: Tensor[(3, 600), int8]) -> (Tensor[(8, 16, 12), float32], Tensor[(11, 7, 6), int16], Tensor[(15, 13, 8), float64], Tensor[(1560), int8], Tensor[(3, 600), int8], Tensor[(1, 16, 12), float64]) {
    %879 = @func_6337() /* ty=Tensor[(?, 16, 12), bool] */;
    %880 = cast(%879, dtype="float32") /* ty=Tensor[(?, 16, 12), float32] */;
    %881 = cast(meta[relay.Constant][51] /* ty=Tensor[(8, 16, 12), bool] */, dtype="float32") /* ty=Tensor[(8, 16, 12), float32] */;
    %882 = cast(%var_11086, dtype="int8") /* ty=Tensor[(1560), int8] */;
    %883 = cast(%var_11087, dtype="int8") /* ty=Tensor[(3, 600), int8] */;
    %884 = reshape(%882, newshape=[1560]) /* ty=Tensor[(1560), int8] */;
    %885 = reshape(%883, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
    %886 = @func_5831(%884, %885) /* ty=(Tensor[(13, 16, 12), uint32], Tensor[(15, 13, 8), float64], Tensor[(1560), int8], Tensor[(11, 7, 6), float64], Tensor[(8, 15, 15), uint8], Tensor[(1800), int8]) */;
    %887 = power(%880, %881) /* ty=Tensor[(8, 16, 12), float32] */;
    %888 = @func_7523() /* ty=Tensor[(11, 7, 6), int16] */;
    %889 = %886.1;
    %890 = @func_4065() /* ty=Tensor[(1, 16, 12), float64] */;
    (%887, %888, %889, %var_11086, %var_11087, %890)
  };
  %891(%var_11093, %var_11094) /* ty=(Tensor[(8, 16, 12), float32], Tensor[(11, 7, 6), int16], Tensor[(15, 13, 8), float64], Tensor[(1560), int8], Tensor[(3, 600), int8], Tensor[(1, 16, 12), float64]) */
}

def @func_8393(%var_8378: Tensor[(12, 16, 5), int16]) -> (Tensor[(12, 16, 5), bool], Tensor[(16, 2, 16), float64], Tensor[(512), int16]) {
  %892 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 16, 5), int16] */, dtype="bool") /* ty=Tensor[(12, 16, 5), bool] */;
  %893 = shape_of(%var_8378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %894 = cast(%var_8378, dtype="bool") /* ty=Tensor[(12, 16, 5), bool] */;
  %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %896 = cast(meta[relay.Constant][53] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %897 = cast(meta[relay.Constant][53] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %898 = cast(meta[relay.Constant][53] /* ty=Tensor[(512), int16] */, dtype="float32") /* ty=Tensor[(512), float32] */;
  %899 = reshape(%896, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int16] */;
  %900 = reshape(%897, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int16] */;
  %901 = reshape(%898, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float32] */;
  %902 = @func_4164(%899, %900, %901) /* ty=(Tensor[(16, 2, 16), int16], Tensor[(16, 2, 16), float64], Tensor[(16, 2, 16), int32]) */;
  %903 = greater_equal(%894, %895) /* ty=Tensor[(12, 16, 5), bool] */;
  %904 = %902.1;
  (%903, %904, meta[relay.Constant][53] /* ty=Tensor[(512), int16] */)
}

def @func_9215() -> (Tensor[(132), bool], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) {
  @func_9213() /* ty=(Tensor[(132), bool], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */
}

def @func_5742() -> Tensor[(13, 16, 12), uint32] {
  %905 = fn () -> Tensor[(13, 16, 12), uint32] {
    @func_4972() /* ty=Tensor[(13, 16, 12), uint32] */
  };
  %905() /* ty=Tensor[(13, 16, 12), uint32] */
}

def @func_5491() -> (Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) {
  @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */
}

def @func_8506(%var_8505: Tensor[(2, 16, 12), float64]) -> (Tensor[(2, 16, 12), float64], Tensor[(13, 16, 12), float64]) {
  %913 = fn (%var_8471: Tensor[(2, 16, 12), float64]) -> (Tensor[(2, 16, 12), float64], Tensor[(13, 16, 12), float64]) {
    %906 = @func_7790() /* ty=(Tensor[(1, 16, 12), float64],) */;
    %907 = %906.0;
    %908 = cast(%907, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
    %909 = cast(%var_8471, dtype="float64") /* ty=Tensor[(2, 16, 12), float64] */;
    %910 = @func_7702() /* ty=(Tensor[(13, 16, 12), float64],) */;
    %911 = divide(%908, %909) /* ty=Tensor[(2, 16, 12), float64] */;
    %912 = %910.0;
    (%911, %912)
  };
  %913(%var_8505) /* ty=(Tensor[(2, 16, 12), float64], Tensor[(13, 16, 12), float64]) */
}

def @func_4791(%var_4773: Tensor[(10, 16, 12), float64], %var_4784: Tensor[(1536), float32]) -> (Tensor[(10, 16, 12), int16], int32, Tensor[(1536), float32], int32) {
  %914 = @func_3814() /* ty=(Tensor[(1, 16, 12), float64],) */;
  %915 = %914.0;
  %916 = cast(%915, dtype="int16") /* ty=Tensor[(1, 16, 12), int16] */;
  %917 = cast(%var_4773, dtype="int16") /* ty=Tensor[(10, 16, 12), int16] */;
  %918 = cast(%var_4784, dtype="float32") /* ty=Tensor[(1536), float32] */;
  %919 = cast(10 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %920 = reshape(%918, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), float32] */;
  %921 = reshape(%919, newshape=[]) /* ty=int32 */;
  %922 = @func_3050(%920, %921) /* ty=(Tensor[(12, 16, 8), float32], int32, Tensor[(2, 8), int32], Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(2, 8, 168), bool]) */;
  %923 = logical_xor(%916, %917) /* ty=Tensor[(10, 16, 12), int16] */;
  %924 = %922.1;
  (%923, %924, %var_4784, 10 /* ty=int32 */)
}

def @func_4168(%var_4165: Tensor[(16, 2, 16), int16], %var_4166: Tensor[(16, 2, 16), int16], %var_4167: Tensor[(16, 2, 16), float32]) -> (Tensor[(16, 2, 16), int16], Tensor[(16, 2, 16), float64], Tensor[(16, 2, 16), int32]) {
  %939 = fn (%var_4134: Tensor[(16, 2, 16), int16], %var_4135: Tensor[(16, 2, 16), int16], %var_4155: Tensor[(16, 2, 16), float32]) -> (Tensor[(16, 2, 16), int16], Tensor[(16, 2, 16), float64], Tensor[(16, 2, 16), int32]) {
    %925 = cast(%var_4135, dtype="int16") /* ty=Tensor[(16, 2, 16), int16] */;
    %926 = shape_of(%var_4134, dtype="int32") /* ty=Tensor[(3), int32] */;
    %927 = cast(%var_4134, dtype="int16") /* ty=Tensor[(16, 2, 16), int16] */;
    %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %929 = cast(%var_4135, dtype="float32") /* ty=Tensor[(16, 2, 16), float32] */;
    %930 = acos(%929) /* ty=Tensor[(16, 2, 16), float32] */;
    %931 = cast(%930, dtype="float64") /* ty=Tensor[(16, 2, 16), float64] */;
    %932 = cast(%var_4155, dtype="int32") /* ty=Tensor[(16, 2, 16), int32] */;
    %933 = shape_of(%930, dtype="int32") /* ty=Tensor[(3), int32] */;
    %934 = cast(%930, dtype="int32") /* ty=Tensor[(16, 2, 16), int32] */;
    %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %936 = bitwise_or(%927, %928) /* ty=Tensor[(16, 2, 16), int16] */;
    %937 = asinh(%931) /* ty=Tensor[(16, 2, 16), float64] */;
    %938 = right_shift(%934, %935) /* ty=Tensor[(16, 2, 16), int32] */;
    (%936, %937, %938)
  };
  %939(%var_4165, %var_4166, %var_4167) /* ty=(Tensor[(16, 2, 16), int16], Tensor[(16, 2, 16), float64], Tensor[(16, 2, 16), int32]) */
}

def @func_6429(%var_6423: Tensor[(4, 8, 8), float32], %var_6424: Tensor[(4, 8, 8), float32]) -> Tensor[(4, 8, 8), float32] {
  %940 = cast(%var_6424, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %941 = shape_of(%var_6423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%var_6423, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  subtract(%942, %943) /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_6271(%var_6269: int32) -> (Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(512), int16], int32, Tensor[(1, 16), int32]) {
  @func_6268(%var_6269) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(16), int32], Tensor[(512), int16], int32, Tensor[(1, 16), int32]) */
}

def @func_2639(%var_2614: int8) -> (Tensor[(4, 14, 3), int8], Tensor[(168, 1), int8], Tensor[(5, 7, 3), bool], Tensor[(2, 8, 1), int32], Tensor[(4, 4), int32]) {
  %944 = cast(%var_2614, dtype="int8") /* ty=int8 */;
  %945 = cast(meta[relay.Constant][54] /* ty=Tensor[(168, 1), int8] */, dtype="int8") /* ty=Tensor[(168, 1), int8] */;
  %946 = reshape(%944, newshape=[]) /* ty=int8 */;
  %947 = reshape(%945, newshape=[4, 14, 3]) /* ty=Tensor[(4, 14, 3), int8] */;
  %948 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 3), float64] */;
  %949 = atanh(%948) /* ty=Tensor[(5, 7, 3), float64] */;
  %950 = cast(%949, dtype="bool") /* ty=Tensor[(5, 7, 3), bool] */;
  %951 = cast(%var_2614, dtype="bool") /* ty=bool */;
  %952 = cast(%var_2614, dtype="int32") /* ty=int32 */;
  %953 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 4), int32] */, dtype="int32") /* ty=Tensor[(4, 4), int32] */;
  %954 = reshape(%952, newshape=[]) /* ty=int32 */;
  %955 = reshape(%953, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), int32] */;
  %956 = @func_1647(%946, %947) /* ty=Tensor[(4, 14, 3), int8] */;
  %957 = equal(%950, %951) /* ty=Tensor[(5, 7, 3), bool] */;
  %958 = @func_786(%954, %955) /* ty=Tensor[(2, 8, 1), int32] */;
  (%956, meta[relay.Constant][54] /* ty=Tensor[(168, 1), int8] */, %957, %958, meta[relay.Constant][56] /* ty=Tensor[(4, 4), int32] */)
}

def @func_10025() -> Tensor[(1, 16, 12), float32] {
  @func_9227() /* ty=Tensor[(1, 16, 12), float32] */
}

def @func_5464() -> Tensor[(1, 16, 12), float64] {
  %959 = fn () -> Tensor[(1, 16, 12), float64] {
    @func_3835() /* ty=Tensor[(1, 16, 12), float64] */
  };
  %959() /* ty=Tensor[(1, 16, 12), float64] */
}

def @func_8350() -> (Tensor[(1, 16, 12), float64],) {
  %962 = fn () -> (Tensor[(1, 16, 12), float64],) {
    %960 = @func_5489() /* ty=(Tensor[(11, 7, 6), int16], Tensor[(1, 16, 12), float64]) */;
    %961 = %960.1;
    (%961,)
  };
  %962() /* ty=(Tensor[(1, 16, 12), float64],) */
}

def @func_9959() -> Tensor[(132), bool] {
  @func_8331() /* ty=Tensor[(132), bool] */
}

def @func_7505(%var_7486: Tensor[(5, 6, 5), float64]) -> (Tensor[(5, 6, 5), float64], Tensor[(5, 6, 5), float64]) {
  %963 = cast(%var_7486, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %964 = cast(%var_7486, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %965 = exp(%964) /* ty=Tensor[(5, 6, 5), float64] */;
  %966 = cast(%965, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %967 = shape_of(%var_7486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %968 = cast(%var_7486, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %970 = acosh(%963) /* ty=Tensor[(5, 6, 5), float64] */;
  %971 = power(%968, %969) /* ty=Tensor[(5, 6, 5), float64] */;
  (%970, %971)
}

def @func_7454() -> Tensor[(4, 16, 12), float64] {
  %972 = @func_4950() /* ty=(Tensor[(4, 16, 12), float64],) */;
  %972.0
}

def @func_3814() -> (Tensor[(1, 16, 12), float64],) {
  %973 = @func_3754() /* ty=Tensor[(1, 16, 12), float64] */;
  (%973,)
}

def @func_10730() -> (Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), float64], Tensor[(132), bool]) {
  @func_10728() /* ty=(Tensor[(1, 16, 12), float64], Tensor[(13, 16, 12), float64], Tensor[(132), bool]) */
}

def @func_8333() -> Tensor[(132), bool] {
  @func_8331() /* ty=Tensor[(132), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

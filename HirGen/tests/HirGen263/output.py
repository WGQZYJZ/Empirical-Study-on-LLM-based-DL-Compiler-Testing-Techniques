import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_186 = relay.var("var_186", dtype = "float64", shape = (6, 7, 6))#candidate|186|(6, 7, 6)|var|float64
uop_187 = relay.cos(var_186.astype('float64')) # shape=(6, 7, 6)
output = uop_187
output2 = uop_187
func_189 = relay.Function([var_186,], output)
mod['func_189'] = func_189
mod = relay.transform.InferType()(mod)
mutated_mod['func_189'] = func_189
mutated_mod = relay.transform.InferType()(mutated_mod)
var_190 = relay.var("var_190", dtype = "float64", shape = (6, 7, 6))#candidate|190|(6, 7, 6)|var|float64
func_189_call = mutated_mod.get_global_var('func_189')
call_191 = func_189_call(var_190)
output = call_191
func_192 = relay.Function([var_190], output)
mutated_mod['func_192'] = func_192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_392 = relay.var("var_392", dtype = "int8", shape = (11, 8, 16))#candidate|392|(11, 8, 16)|var|int8
var_393 = relay.var("var_393", dtype = "int8", shape = (11, 8, 16))#candidate|393|(11, 8, 16)|var|int8
bop_394 = relay.logical_xor(var_392.astype('int8'), relay.reshape(var_393.astype('int8'), relay.shape_of(var_392))) # shape=(11, 8, 16)
var_414 = relay.var("var_414", dtype = "int8", shape = (11, 8, 16))#candidate|414|(11, 8, 16)|var|int8
bop_415 = relay.right_shift(var_392.astype('uint32'), relay.reshape(var_414.astype('uint32'), relay.shape_of(var_392))) # shape=(11, 8, 16)
output = relay.Tuple([bop_394,bop_415,])
output2 = relay.Tuple([bop_394,bop_415,])
func_421 = relay.Function([var_392,var_393,var_414,], output)
mod['func_421'] = func_421
mod = relay.transform.InferType()(mod)
mutated_mod['func_421'] = func_421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_421_call = mutated_mod.get_global_var('func_421')
var_423 = relay.var("var_423", dtype = "int8", shape = (11, 8, 16))#candidate|423|(11, 8, 16)|var|int8
var_424 = relay.var("var_424", dtype = "int8", shape = (11, 8, 16))#candidate|424|(11, 8, 16)|var|int8
var_425 = relay.var("var_425", dtype = "int8", shape = (11, 8, 16))#candidate|425|(11, 8, 16)|var|int8
call_422 = func_421_call(var_423,var_424,var_425,)
output = call_422
func_426 = relay.Function([var_423,var_424,var_425,], output)
mutated_mod['func_426'] = func_426
mutated_mod = relay.transform.InferType()(mutated_mod)
var_480 = relay.var("var_480", dtype = "float64", shape = (3, 13, 9))#candidate|480|(3, 13, 9)|var|float64
const_481 = relay.const([[[-8.949362,-0.774054,4.145905,-4.028624,-1.072587,-8.178076,-9.103466,-6.676783,1.934188],[-0.011079,-5.100877,6.467336,-6.839902,3.542013,-7.268323,-4.360454,2.131005,4.857832],[-3.352213,8.217027,-1.810383,-7.074627,-8.965677,6.198076,9.897472,-3.468859,4.978258],[5.129103,-6.133649,8.624880,7.373763,5.169425,-0.113105,4.630521,-8.028081,0.373904],[4.567374,4.779160,-7.387525,2.855011,-1.591949,2.996521,8.457835,-0.210428,-8.977778],[8.257065,6.247004,-6.739248,2.813922,-6.876345,-2.937465,-4.757942,0.478494,9.369106],[-5.270087,3.422026,-7.947199,0.024253,-2.291134,5.116834,9.286435,-7.944123,-3.029756],[-4.882775,8.639065,3.255305,5.652343,8.917314,-3.341400,-3.672982,3.918849,8.111961],[3.099858,-8.712529,-7.870852,-2.960490,-5.123161,-6.399904,6.274204,-8.365566,9.154291],[-3.828317,-5.745117,-5.782355,-6.334570,4.903526,-5.386099,-5.123027,7.602078,7.078207],[-8.302195,9.457859,9.079337,8.112464,8.186246,6.476962,-0.197487,2.415485,9.154529],[8.804836,-6.901484,7.756308,0.424455,-2.337596,-1.459046,3.363298,9.175325,6.681752],[-6.253481,6.452895,4.382275,8.770795,-5.020381,-7.801762,-5.127911,-9.476789,-8.541435]],[[9.725040,5.933879,4.965545,-7.551499,-2.637228,8.880113,-4.687109,9.705812,7.902643],[-5.184602,-0.900391,1.947822,-6.441387,-4.347363,8.440136,-2.325509,-1.272014,-9.190859],[-7.500101,-2.680982,3.010591,-8.559104,-1.778227,5.897570,-7.322561,-3.231225,1.162696],[6.692933,6.404561,-4.315529,4.390142,7.556807,-5.548012,0.820815,-9.252563,6.235601],[3.507538,6.762935,7.436027,-3.898183,-3.170023,-3.098436,-4.378477,0.132143,4.105442],[-1.260994,8.391831,9.448389,-4.729017,-6.877632,-1.602025,-9.928388,1.246953,5.545724],[-3.172801,2.326484,-7.118735,-5.959969,1.520407,-3.612947,9.930280,1.556091,3.525335],[-3.009126,3.154164,-1.825245,8.353532,-9.547702,0.060060,2.546944,9.239005,-5.008072],[5.145862,-1.949979,8.043592,6.366716,-5.828070,0.271587,2.486672,9.250349,-4.115351],[1.925565,-8.431766,-9.643395,4.330165,4.764882,-3.110141,1.112918,3.876929,1.703218],[-7.022066,8.624273,2.494298,-0.198949,4.789116,-8.031472,-6.517944,0.240418,1.251833],[-4.826249,2.667811,0.319137,2.798267,5.225481,-7.730497,7.392298,-2.798632,8.519382],[3.901296,-1.015392,6.158263,-5.068041,-0.370654,-9.693546,-2.716437,6.327355,0.622181]],[[9.102242,8.470177,2.587197,2.377018,-5.841059,9.704401,-0.116839,-8.422614,4.050601],[3.941830,5.737426,7.745910,6.078004,-9.950586,-0.231796,8.784286,-7.153754,-8.101909],[-7.550679,0.492237,8.890070,6.242778,3.691831,8.561102,2.425048,5.312341,-0.767773],[5.386840,-3.606808,-3.030899,7.500052,-7.924042,-4.510636,6.709681,9.693183,-3.131254],[2.620020,-9.399438,9.065621,-5.217795,-9.591543,9.219317,-2.470285,-9.320412,-8.942683],[1.843525,-6.103242,8.676876,3.434210,6.302651,7.356485,3.167334,7.006868,-5.574232],[0.992829,-0.294940,-1.521379,0.415770,-6.450672,6.601768,-6.157808,-2.651618,-8.790873],[-4.897524,-5.250340,-2.820817,7.344961,-2.505051,8.071905,5.262286,9.289520,-2.673364],[9.557937,9.039354,2.901320,-1.364016,6.678271,-3.413419,-5.611079,0.894382,7.053487],[3.362141,-2.653370,0.202311,-5.011122,-4.044472,-6.383038,8.055809,-1.190428,5.059617],[7.479340,-1.676314,-0.448628,-7.425856,3.660420,4.735783,-5.925734,9.762533,9.565609],[-9.536674,5.196608,6.265058,-1.996930,5.108435,1.359615,-8.955804,-2.423434,-6.558095],[-5.998169,4.528732,-9.499450,-5.148596,4.880684,3.225274,-9.550195,-1.219191,6.821065]]], dtype = "float64")#candidate|481|(3, 13, 9)|const|float64
bop_482 = relay.not_equal(var_480.astype('bool'), relay.reshape(const_481.astype('bool'), relay.shape_of(var_480))) # shape=(3, 13, 9)
output = relay.Tuple([bop_482,])
output2 = relay.Tuple([bop_482,])
func_493 = relay.Function([var_480,], output)
mod['func_493'] = func_493
mod = relay.transform.InferType()(mod)
var_494 = relay.var("var_494", dtype = "float64", shape = (3, 13, 9))#candidate|494|(3, 13, 9)|var|float64
output = func_493(var_494)
func_495 = relay.Function([var_494], output)
mutated_mod['func_495'] = func_495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_538 = relay.var("var_538", dtype = "uint8", shape = (11, 2, 10))#candidate|538|(11, 2, 10)|var|uint8
var_539 = relay.var("var_539", dtype = "uint8", shape = (11, 2, 10))#candidate|539|(11, 2, 10)|var|uint8
bop_540 = relay.greater(var_538.astype('bool'), relay.reshape(var_539.astype('bool'), relay.shape_of(var_538))) # shape=(11, 2, 10)
output = relay.Tuple([bop_540,])
output2 = relay.Tuple([bop_540,])
func_549 = relay.Function([var_538,var_539,], output)
mod['func_549'] = func_549
mod = relay.transform.InferType()(mod)
var_550 = relay.var("var_550", dtype = "uint8", shape = (11, 2, 10))#candidate|550|(11, 2, 10)|var|uint8
var_551 = relay.var("var_551", dtype = "uint8", shape = (11, 2, 10))#candidate|551|(11, 2, 10)|var|uint8
output = func_549(var_550,var_551,)
func_552 = relay.Function([var_550,var_551,], output)
mutated_mod['func_552'] = func_552
mutated_mod = relay.transform.InferType()(mutated_mod)
const_647 = relay.const([[[-4.419776,-0.481393,-1.397893,-7.117177,0.179083,-7.002803,-2.860615],[5.220422,-0.257893,7.728308,3.623196,9.670254,7.117814,0.205951],[-6.303557,2.374346,0.525906,-4.848715,7.488052,7.382291,1.549785],[5.342632,4.866713,5.664110,-1.982202,8.890037,-3.489940,-3.718690]],[[1.610333,-0.275846,-0.291289,-7.365981,9.381341,3.406797,6.037512],[1.476153,0.219152,-1.068818,7.785925,-4.126434,-9.048373,7.655355],[4.798131,-2.043415,-7.671333,-0.880243,1.405501,-8.111043,0.135429],[9.948669,-9.952115,1.755501,9.628214,-9.308712,1.105181,6.954273]],[[7.650379,-1.150282,-4.765186,7.664511,4.231100,5.101271,-7.467382],[-8.391018,-8.144712,-3.502829,-9.280957,-5.449345,5.741355,5.368754],[7.556698,-6.976079,7.030345,3.411219,-0.545911,-1.867680,-7.169765],[-1.629613,4.038201,4.488366,-9.046991,-0.614091,3.842171,-5.440704]],[[-3.850984,-6.032948,-5.046443,-5.084059,1.590871,8.822507,-6.452766],[-5.217450,-3.424992,8.464231,0.282287,0.798055,-6.649961,-9.484167],[-2.690317,-3.175543,-7.540215,-8.459507,2.192399,7.884823,2.278880],[-4.480539,-6.917487,-0.213524,3.450515,4.166457,-4.038676,-9.845799]],[[-1.839463,8.751010,-6.273806,7.580094,-3.652434,5.549565,-1.886754],[-8.872014,-1.569027,9.994663,6.785329,1.387284,6.703900,6.554099],[3.835535,-6.754087,8.280575,-7.827692,0.680610,-3.669169,7.238216],[-5.524804,-4.503204,3.653304,7.829317,-3.178988,7.811623,-0.220863]],[[-9.004880,-7.517189,7.494128,6.978375,-4.642136,-5.834644,-1.313310],[2.333653,8.583505,3.896163,3.697685,-2.215976,-4.204804,5.535836],[-1.417705,-6.405755,-0.605707,-6.552531,-5.659893,-1.065038,0.667930],[-0.957608,3.541761,3.891396,3.852912,9.376015,-2.364651,-6.943969]],[[-9.435375,-4.257486,2.729625,3.862693,8.142919,5.229742,2.694843],[5.768022,9.965889,-2.397376,1.431037,9.113785,9.850211,4.865591],[-6.725151,-4.959643,-1.875513,4.844087,1.632511,4.883009,-1.694582],[-6.823698,-2.580303,-7.590969,-7.203472,-6.890773,-0.304818,-6.937573]],[[-4.580731,5.370231,3.571236,3.687575,-9.182242,2.598969,8.488802],[7.448104,-3.407123,-1.147893,6.914447,-6.017539,5.789745,9.406244],[-5.962763,9.376504,-2.869363,0.697842,-3.058129,3.353518,8.740350],[3.871628,8.290306,-0.292647,-8.773261,-3.166486,0.978385,2.359347]],[[2.785359,-1.259506,3.572787,2.689828,8.946619,0.670158,2.628980],[-3.266994,-5.026709,-9.475066,-3.411384,7.593310,6.931962,-5.818635],[-4.110719,5.994624,3.086806,0.100503,-8.046428,-4.385143,4.708690],[8.970216,-0.946206,3.494048,3.202334,-6.424695,-3.770251,1.224756]],[[4.621614,-4.441149,3.297233,3.983350,2.328182,5.200394,0.356077],[9.351668,-5.798028,-0.362383,5.190136,2.060776,2.468585,-7.388530],[4.403160,9.176141,-9.096993,-0.236459,6.449622,-6.947560,-5.391044],[-2.148263,8.676639,-6.685178,1.157175,-7.589046,-4.237820,1.536563]]], dtype = "float64")#candidate|647|(10, 4, 7)|const|float64
uop_648 = relay.atanh(const_647.astype('float64')) # shape=(10, 4, 7)
func_189_call = mod.get_global_var('func_189')
func_192_call = mutated_mod.get_global_var('func_192')
var_675 = relay.var("var_675", dtype = "float64", shape = (252,))#candidate|675|(252,)|var|float64
call_674 = func_189_call(relay.reshape(var_675.astype('float64'), [6, 7, 6]))
call_676 = func_189_call(relay.reshape(var_675.astype('float64'), [6, 7, 6]))
output = relay.Tuple([uop_648,call_674,var_675,])
output2 = relay.Tuple([uop_648,call_676,var_675,])
func_677 = relay.Function([var_675,], output)
mod['func_677'] = func_677
mod = relay.transform.InferType()(mod)
mutated_mod['func_677'] = func_677
mutated_mod = relay.transform.InferType()(mutated_mod)
var_678 = relay.var("var_678", dtype = "float64", shape = (252,))#candidate|678|(252,)|var|float64
func_677_call = mutated_mod.get_global_var('func_677')
call_679 = func_677_call(var_678)
output = call_679
func_680 = relay.Function([var_678], output)
mutated_mod['func_680'] = func_680
mutated_mod = relay.transform.InferType()(mutated_mod)
var_732 = relay.var("var_732", dtype = "float32", shape = (15, 9, 13))#candidate|732|(15, 9, 13)|var|float32
var_733 = relay.var("var_733", dtype = "float32", shape = (15, 9, 13))#candidate|733|(15, 9, 13)|var|float32
bop_734 = relay.subtract(var_732.astype('float32'), relay.reshape(var_733.astype('float32'), relay.shape_of(var_732))) # shape=(15, 9, 13)
func_421_call = mod.get_global_var('func_421')
func_426_call = mutated_mod.get_global_var('func_426')
var_741 = relay.var("var_741", dtype = "int8", shape = (1408,))#candidate|741|(1408,)|var|int8
call_740 = relay.TupleGetItem(func_421_call(relay.reshape(var_741.astype('int8'), [11, 8, 16]), relay.reshape(var_741.astype('int8'), [11, 8, 16]), relay.reshape(var_741.astype('int8'), [11, 8, 16]), ), 0)
call_742 = relay.TupleGetItem(func_426_call(relay.reshape(var_741.astype('int8'), [11, 8, 16]), relay.reshape(var_741.astype('int8'), [11, 8, 16]), relay.reshape(var_741.astype('int8'), [11, 8, 16]), ), 0)
output = relay.Tuple([bop_734,call_740,var_741,])
output2 = relay.Tuple([bop_734,call_742,var_741,])
func_743 = relay.Function([var_732,var_733,var_741,], output)
mod['func_743'] = func_743
mod = relay.transform.InferType()(mod)
mutated_mod['func_743'] = func_743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_743_call = mutated_mod.get_global_var('func_743')
var_745 = relay.var("var_745", dtype = "float32", shape = (15, 9, 13))#candidate|745|(15, 9, 13)|var|float32
var_746 = relay.var("var_746", dtype = "float32", shape = (15, 9, 13))#candidate|746|(15, 9, 13)|var|float32
var_747 = relay.var("var_747", dtype = "int8", shape = (1408,))#candidate|747|(1408,)|var|int8
call_744 = func_743_call(var_745,var_746,var_747,)
output = call_744
func_748 = relay.Function([var_745,var_746,var_747,], output)
mutated_mod['func_748'] = func_748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_756 = relay.var("var_756", dtype = "int32", shape = (15, 3, 1))#candidate|756|(15, 3, 1)|var|int32
var_757 = relay.var("var_757", dtype = "int32", shape = (15, 3, 16))#candidate|757|(15, 3, 16)|var|int32
bop_758 = relay.left_shift(var_756.astype('int32'), var_757.astype('int32')) # shape=(15, 3, 16)
output = relay.Tuple([bop_758,])
output2 = relay.Tuple([bop_758,])
func_765 = relay.Function([var_756,var_757,], output)
mod['func_765'] = func_765
mod = relay.transform.InferType()(mod)
mutated_mod['func_765'] = func_765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_765_call = mutated_mod.get_global_var('func_765')
var_767 = relay.var("var_767", dtype = "int32", shape = (15, 3, 1))#candidate|767|(15, 3, 1)|var|int32
var_768 = relay.var("var_768", dtype = "int32", shape = (15, 3, 16))#candidate|768|(15, 3, 16)|var|int32
call_766 = func_765_call(var_767,var_768,)
output = call_766
func_769 = relay.Function([var_767,var_768,], output)
mutated_mod['func_769'] = func_769
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1028 = relay.var("var_1028", dtype = "uint32", shape = ())#candidate|1028|()|var|uint32
const_1029 = relay.const([[[-3,4,7,1,7,-10,-2,3,-3,6,1],[9,-5,2,2,7,-10,-7,7,4,-9,9],[1,9,4,10,-5,1,2,6,-5,-3,4],[-4,8,-6,-4,-6,9,-1,-3,6,1,-9],[-1,9,8,2,2,2,4,4,-1,3,10],[-2,-6,-2,-6,-10,-4,4,2,3,-10,5],[10,-1,2,2,-9,-6,3,-2,8,7,-2],[5,4,10,-2,-9,-6,5,6,1,-2,-8],[4,-5,1,-6,2,7,-9,4,-3,4,-3],[7,-6,5,-5,4,-5,4,10,9,3,-10],[6,-6,6,8,8,-9,4,-4,-6,-10,9],[7,6,-1,-3,-3,-6,-7,8,-2,-9,-3],[-6,1,9,-3,5,-6,-5,10,-2,6,-2]],[[2,6,-6,-6,9,-10,-4,-2,-5,-6,-8],[2,8,2,1,8,-4,7,1,-3,-5,-1],[-9,-3,-9,-7,-9,-6,-2,4,-2,9,9],[8,-1,-10,-3,5,-3,-8,9,-9,6,-9],[6,4,-6,-6,10,4,-6,-10,-5,-2,-7],[-1,8,9,5,-2,1,-9,-10,-3,10,4],[4,-6,2,1,10,8,-2,-10,6,8,-8],[6,3,-10,1,-10,9,7,-5,3,-8,1],[-9,-7,-5,-4,-1,2,-2,-6,6,9,3],[7,4,-3,-2,-4,-7,5,5,6,-10,1],[-1,-6,-4,-2,-2,-7,10,3,-4,2,8],[-5,9,-1,2,-2,1,-3,6,6,-6,-6],[-2,-10,-6,2,-2,-6,-10,9,-3,8,10]],[[2,7,-3,10,-1,8,3,-4,7,9,6],[-4,-3,5,-10,-3,10,-10,-2,2,-7,7],[-6,2,-8,9,-2,10,-10,9,9,-4,-1],[-3,7,8,-8,3,-7,-7,5,10,1,-5],[2,-10,-5,3,-9,10,-2,1,5,-3,-6],[-9,8,-10,-7,9,8,-4,4,-8,-2,10],[-9,1,2,10,6,-10,-7,3,-3,5,2],[4,-5,-8,5,10,-8,9,6,-7,-9,7],[7,-1,-2,4,6,-9,-4,-9,-4,2,1],[-1,3,7,7,9,4,8,8,2,-2,6],[-8,5,-3,6,-10,-9,7,4,-2,1,5],[-3,-1,-7,-6,9,8,-7,-8,-3,8,-1],[1,-10,-10,-10,10,10,-10,2,-1,-9,-4]]], dtype = "uint32")#candidate|1029|(3, 13, 11)|const|uint32
bop_1030 = relay.less(var_1028.astype('bool'), const_1029.astype('bool')) # shape=(3, 13, 11)
uop_1047 = relay.acos(bop_1030.astype('float32')) # shape=(3, 13, 11)
func_493_call = mod.get_global_var('func_493')
func_495_call = mutated_mod.get_global_var('func_495')
const_1059 = relay.const([-1.260709,-4.715283,-2.906242,2.948012,8.606453,9.100147,-0.856100,-8.507081,-8.990888,9.743953,-5.813624,1.318044,7.299119,0.081066,1.162895,-4.993504,9.498951,9.695017,-8.282609,-4.512682,6.105986,-4.141202,-9.753315,3.872587,7.004052,3.053796,-4.227408,-7.853048,6.250066,2.880581,-6.563659,-1.901469,-3.626469,0.506517,-8.585714,0.376947,1.098072,5.236216,-9.790317,-9.365096,8.852004,7.210418,1.692433,4.833930,6.459944,9.324758,8.789612,-1.614302,2.649003,-5.264999,5.788912,1.390291,8.815063,-1.490794,5.223160,9.453345,8.727882,6.071540,-3.588625,5.285686,8.792623,0.917185,-5.996249,-6.840714,6.189579,7.230947,-5.604035,-9.641998,8.624212,-3.640696,0.245210,2.015380,-0.428395,9.339425,3.475383,4.245720,3.926852,5.726883,-9.267257,2.268592,-1.497711,-2.504122,1.190700,-9.717367,9.193882,-5.443999,-7.281582,1.642211,-5.499124,1.875886,1.432196,-7.952491,2.837075,-6.348438,1.352119,-2.346969,-4.175124,0.573705,7.499575,-7.742381,-4.565490,4.292532,-3.764287,5.044453,-1.594795,6.907121,7.540305,-0.016605,0.877545,-4.326916,9.010772,5.536389,6.166525,7.085829,-9.488088,-9.723842,-8.240312,-3.241661,-4.771409,8.296682,-5.597314,2.214416,-5.731922,1.167457,-3.994673,5.864480,-5.647941,-2.795827,1.820440,-5.369811,8.118670,-8.059628,-9.554918,6.685739,-7.770436,0.502040,6.017339,9.551707,0.815307,1.496403,-1.048179,4.202958,3.418034,3.440510,2.069967,5.072515,-0.806479,1.028183,-0.763460,0.508667,7.980535,3.875583,0.785032,3.577154,8.922329,6.702837,2.729978,-1.526802,-4.251497,6.141847,7.538740,-3.988291,-6.911046,1.537772,-6.371240,8.265880,3.746050,-4.089015,8.662864,3.325566,3.086054,9.437998,2.465564,6.329765,2.289628,-9.844640,8.895301,-3.980716,-2.264107,-2.464409,-3.074176,-9.657685,6.401306,2.713010,-2.993576,8.484307,9.473162,-1.665353,0.582174,-4.264228,-3.855005,6.864307,8.521191,1.353507,7.001014,9.017559,-6.558392,-7.214176,-7.176148,-0.984938,-9.439683,-0.058911,-5.835548,2.500116,7.872753,-1.247774,-0.951905,1.273663,1.093045,4.523158,7.702091,8.044920,-3.788455,8.954028,1.682791,-7.015877,0.645041,4.617290,7.683580,8.479549,-0.536987,6.181285,-1.767521,-1.657175,5.664283,-7.677317,-6.740119,-2.613321,3.422815,-8.632246,-4.746432,6.290982,7.751802,5.244743,3.197293,5.264393,7.221987,-4.880025,-6.705611,3.672812,-9.456753,-3.977643,4.734806,2.416767,-5.898086,6.534741,-4.664097,-1.782784,5.327856,8.951717,4.376007,-0.682164,9.936585,-0.398664,-3.136489,2.130911,6.301385,0.316869,5.184455,-0.822585,-4.057539,-1.696952,-5.823953,0.594536,-6.920235,-0.577498,9.668448,-3.080710,5.948146,-1.520257,2.182058,-1.203751,0.534718,6.257030,-7.929762,-1.381354,-4.889906,-1.074626,-9.915019,-8.537083,-9.970844,-6.531366,-3.146008,-6.936856,0.575148,4.706724,-9.848468,7.930034,8.698425,-3.474125,-5.870050,5.709488,7.875651,2.761274,3.914819,3.052012,-0.261820,7.468327,-2.337541,-9.428821,2.882170,-9.611647,4.399446,6.985926,9.841351,3.871476,9.861710,-5.462099,-6.203440,-2.105711,7.121824,7.091003,7.158947,-3.276967,-5.583007,8.296393,-4.081547,4.321149,9.101483,6.473373,9.109225,2.847735,9.095369,2.904190,1.580762,9.654599,1.010525,4.316211,2.450209,7.480582,-5.481532,3.242740,-4.968538,3.582266,-3.369839,-1.711826,0.436915,-1.460923,7.424586,-7.826695,8.616098,-8.725225,-6.135497,1.819702,7.620078,9.989489,2.337781,2.433857,1.057202,0.650765,3.986268], dtype = "float64")#candidate|1059|(351,)|const|float64
call_1058 = relay.TupleGetItem(func_493_call(relay.reshape(const_1059.astype('float64'), [3, 13, 9])), 0)
call_1060 = relay.TupleGetItem(func_495_call(relay.reshape(const_1059.astype('float64'), [3, 13, 9])), 0)
func_765_call = mod.get_global_var('func_765')
func_769_call = mutated_mod.get_global_var('func_769')
var_1062 = relay.var("var_1062", dtype = "int32", shape = (15, 3))#candidate|1062|(15, 3)|var|int32
var_1063 = relay.var("var_1063", dtype = "int32", shape = (1, 720))#candidate|1063|(1, 720)|var|int32
call_1061 = relay.TupleGetItem(func_765_call(relay.reshape(var_1062.astype('int32'), [15, 3, 1]), relay.reshape(var_1063.astype('int32'), [15, 3, 16]), ), 0)
call_1064 = relay.TupleGetItem(func_769_call(relay.reshape(var_1062.astype('int32'), [15, 3, 1]), relay.reshape(var_1063.astype('int32'), [15, 3, 16]), ), 0)
output = relay.Tuple([uop_1047,call_1058,const_1059,call_1061,var_1062,var_1063,])
output2 = relay.Tuple([uop_1047,call_1060,const_1059,call_1064,var_1062,var_1063,])
func_1067 = relay.Function([var_1028,var_1062,var_1063,], output)
mod['func_1067'] = func_1067
mod = relay.transform.InferType()(mod)
var_1068 = relay.var("var_1068", dtype = "uint32", shape = ())#candidate|1068|()|var|uint32
var_1069 = relay.var("var_1069", dtype = "int32", shape = (15, 3))#candidate|1069|(15, 3)|var|int32
var_1070 = relay.var("var_1070", dtype = "int32", shape = (1, 720))#candidate|1070|(1, 720)|var|int32
output = func_1067(var_1068,var_1069,var_1070,)
func_1071 = relay.Function([var_1068,var_1069,var_1070,], output)
mutated_mod['func_1071'] = func_1071
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1305 = relay.var("var_1305", dtype = "int8", shape = (1, 5, 6))#candidate|1305|(1, 5, 6)|var|int8
var_1306 = relay.var("var_1306", dtype = "int8", shape = (16, 5, 6))#candidate|1306|(16, 5, 6)|var|int8
bop_1307 = relay.right_shift(var_1305.astype('int8'), var_1306.astype('int8')) # shape=(16, 5, 6)
func_743_call = mod.get_global_var('func_743')
func_748_call = mutated_mod.get_global_var('func_748')
var_1312 = relay.var("var_1312", dtype = "float32", shape = (1755,))#candidate|1312|(1755,)|var|float32
const_1313 = relay.const([-10,-9,-9,-1,1,4,-3,-8,9,6,-10,-4,-1,-5,10,-2,1,5,6,5,-3,1,-6,-10,10,-9,-8,1,7,-4,8,-7,7,10,-9,3,6,7,2,-8,-3,3,9,3,-9,-1,4,7,2,-9,4,3,5,-3,9,-9,6,6,-7,-1,5,-5,-2,2,-2,6,-2,-6,-3,4,-10,-4,7,4,-8,-10,7,-4,10,6,7,-7,-3,6,4,7,2,-2,3,3,-1,6,10,8,6,-3,-5,3,-5,-5,-8,-3,-6,-3,1,2,-1,-9,-8,5,10,-6,8,3,8,-2,-10,9,8,-9,-8,-10,-9,3,5,-1,4,9,7,-7,2,1,2,10,-2,10,9,-8,-10,-8,-9,-1,-6,-6,4,6,-3,-8,5,-7,-6,-6,1,-5,-6,-8,-10,9,9,9,-1,7,-9,8,-2,2,4,-5,5,5,-3,-6,2,-8,-3,4,1,-5,-6,-8,-10,6,-10,10,-1,7,-10,8,10,-2,-3,6,-8,6,-4,10,-7,-9,-9,2,-3,-5,-4,4,-9,9,-3,-7,6,2,-10,-5,3,3,2,-4,-6,10,4,-6,-10,-8,-7,-3,10,2,-2,-6,10,6,3,-9,-3,-1,-2,-1,-1,9,-1,1,-10,3,2,6,7,6,-4,-10,-5,-3,7,3,-10,-6,-5,-4,3,-8,7,9,-7,-3,-1,9,4,-4,5,-9,-10,-6,3,1,-9,3,6,-9,8,-6,-7,-6,7,3,5,-7,-8,-9,4,9,10,1,-3,-9,-2,-9,-1,9,-4,10,-6,-6,9,-7,7,8,5,5,10,8,-10,1,1,7,-4,-7,-3,5,8,7,-6,-5,6,1,-4,6,-8,-3,-6,-6,-9,-1,6,6,-7,-3,8,8,-8,10,9,-5,-4,6,3,10,-7,-4,-8,10,3,-10,1,-5,-8,10,10,2,6,-5,2,-10,-8,-3,-5,2,4,9,2,4,-8,5,10,5,7,-4,5,7,8,-10,3,-1,5,-2,-5,-7,1,-4,-1,-6,6,9,-1,5,-8,-2,-4,-8,4,-8,-8,-3,-8,9,-5,10,-2,3,7,1,-2,6,8,6,8,9,8,-5,9,8,7,-5,8,2,-5,-1,-8,2,-3,-5,4,-6,-8,-1,-5,10,10,10,-3,-5,5,-7,5,8,10,10,1,-6,-9,7,7,-5,-5,7,7,-8,8,-7,7,-2,1,10,-9,3,7,-1,9,3,9,2,10,8,5,4,3,10,-9,7,1,8,-2,-2,5,5,-5,-1,6,4,5,5,3,3,8,-2,2,6,-8,-6,-6,-8,7,6,9,7,8,-3,9,-3,-5,-7,6,2,-6,9,-9,-10,6,-8,-6,8,-8,4,-6,6,5,-2,-1,-7,3,6,2,-8,4,3,2,-5,-2,-8,8,-2,7,6,-6,-2,10,3,-6,10,7,-1,5,-9,-4,3,-9,7,-9,-6,7,-6,-8,8,-9,5,4,-7,1,-3,-1,9,3,7,-10,-9,-1,-5,-5,4,-1,-2,-6,-3,-4,-3,5,4,9,-10,-6,-9,3,5,-5,3,-1,-3,3,5,-2,-2,-2,7,-2,4,5,3,5,7,1,10,-3,1,10,-5,6,-1,6,4,4,-5,9,-8,-8,-8,3,2,-10,-3,-9,-5,6,7,-4,1,9,7,-6,4,-10,-4,8,-8,-7,1,1,-4,1,-2,-2,-3,1,-9,-4,10,5,6,7,6,-7,1,2,-7,-7,-8,-2,-10,-10,7,-3,-10,8,-4,10,-1,6,4,-9,10,8,7,-10,2,-9,6,5,-10,1,-9,5,-7,6,-8,-4,5,8,-3,-10,-8,1,10,-1,-10,8,3,-1,-4,-6,4,-1,-2,-10,5,8,-10,9,-7,-4,-3,6,6,10,6,10,-4,8,8,-10,9,-8,9,9,-10,-2,-5,-10,-6,1,-6,2,2,7,8,-4,-7,6,-2,1,9,-6,10,7,8,-9,-9,-6,1,-4,1,7,-2,4,-9,-7,-6,5,9,-3,-10,-1,3,3,-9,4,6,-9,-6,4,6,6,-4,-10,-4,10,-7,-4,-8,-6,-5,8,6,10,8,9,-7,8,7,4,2,7,7,-2,2,2,10,9,-5,8,-2,9,-4,-1,-4,-6,3,10,7,-4,1,4,-6,-9,-1,6,6,5,2,-2,-4,-7,-2,-8,-10,-7,10,4,6,9,-10,3,10,-7,5,-1,10,6,4,2,-6,-4,-2,-2,-2,4,-6,10,-4,-2,-8,7,-2,1,-7,-1,4,9,4,2,2,1,-4,8,10,8,3,-10,-8,-1,6,10,-7,-3,2,-10,5,4,4,9,4,-4,5,-1,6,10,6,-9,-10,-8,10,-7,-9,6,5,-9,-7,5,8,-4,2,4,5,4,8,6,-8,-4,-5,2,10,-8,-4,-6,3,-5,-6,-4,4,4,8,9,4,6,-6,9,10,2,4,-6,-7,-1,-2,2,3,-6,-8,10,2,3,-4,5,-4,8,2,3,5,-2,9,2,2,4,5,-3,-7,7,1,-5,-7,-2,-7,8,-9,8,6,1,-10,-9,-6,-3,3,6,10,-10,4,-7,5,2,8,3,10,4,-8,6,-7,10,-7,-3,-10,5,3,7,-9,-5,9,-3,-3,-10,7,-8,4,-4,6,9,10,-10,-8,-2,-5,4,-4,-6,1,9,-3,4,-5,-8,6,7,-3,-9,-5,8,6,6,6,-9,8,-6,-5,8,-1,-10,-6,-2,-3,10,2,8,9,-1,5,-3,-6,-6,1,10,4,8,-7,1,-3,-10,10,-6,3,3,5,-1,-4,3,-4,-7,5,8,-10,-5,-1,-10,2,-9,3,-3,9,3,-2,9,1,2,-3,-9,-1,-6,7,5,-5,-6,-8,9,4,9,8,2,7,-5,-6,3,-7,2,-8,7,3,10,-4,-7,2,-2,7,10,-10,4,1,5,-8,-4,-6,-8,6,-10,-8,7,-4,-2,5,-3,-9,2,4,-8,6,9,-4,-3,-4,1,2,5,8,-7,9,9,8,-10,1,-7,3,-3,2,9,10,9,7,8,-1,-10,4,2,3,6,-3,10,-8,3,8,-5,10,-10,10,-4,-2,1,6,-10,5,-2,9,-4,-5,-7,9,-1,6,7,9,6,8,9,-1,4,5,6,-7,10,-7,3,7,-6,5,-10,7,-8,-3,2,6,-2,1,2,8,8,-9,1,6,10,3,8,7,-8,4,4,5,8,4,1,-4,-9,-1,10,10,-9,-1,2,6,8,-9,8,10,7,10,6,-9,8,5,-5,7,7,-4,5,10,-8,6,10,-5,-10,7,10,2,5,-3,4,6,-7,-2,-10,6,9,5,-9,-8,-5,6,-2,1,-10,10,6,5,6,-6,8,-4,7,8,-10,-7,-3,8,3,-1,-6,7,6,-5,-9,-1,-4,-6,6,7,10,1,-8,9,10,4,-2,8,-3,4,-4,1,-2,1,10,-4,-3,-6,-3,2,-4,9,-7,5,10,4,-4,1,1,-4,9,3,-2,-3,-3,-8,1,-4,4,8,7,-7,-6,-7,-2,10,-10,5,4,-8,-3,6,8,2,-9,8,-4,-9,5,9,-8,9,2,1,-10,-2,9,-6,-10,-1,-9,-7,3,-3,-3,-4,-1,-10,-4,8,-1,-8,-8,9,3,9,8,4,1,8,2,-4,4,6,4,-6,4,-9,-8,-2,-8,-2,-6,-8], dtype = "int8")#candidate|1313|(1408,)|const|int8
call_1311 = relay.TupleGetItem(func_743_call(relay.reshape(var_1312.astype('float32'), [15, 9, 13]), relay.reshape(var_1312.astype('float32'), [15, 9, 13]), relay.reshape(const_1313.astype('int8'), [1408,]), ), 1)
call_1314 = relay.TupleGetItem(func_748_call(relay.reshape(var_1312.astype('float32'), [15, 9, 13]), relay.reshape(var_1312.astype('float32'), [15, 9, 13]), relay.reshape(const_1313.astype('int8'), [1408,]), ), 1)
const_1319 = relay.const([[[6,7,-4,3,-1,6],[-10,-3,-6,-5,-7,-5],[-7,9,5,-5,1,7],[6,-5,8,2,-6,5],[3,-5,6,7,4,3]],[[5,-10,-2,10,-6,-5],[-6,-4,-6,-4,-8,-9],[9,-10,-3,-2,-10,5],[-9,10,-9,2,5,-8],[7,-10,-1,1,-7,2]],[[-3,10,-5,7,-1,-9],[-3,-6,7,7,-7,8],[6,-5,10,6,-2,-9],[3,-2,3,5,-2,-4],[8,-4,-10,1,2,10]],[[-5,-9,5,3,4,-2],[-7,-4,-9,-10,2,2],[-4,8,10,2,-6,-2],[7,-9,-9,1,-10,-4],[3,-6,8,7,-2,10]],[[4,-9,10,-3,7,1],[3,-3,-7,1,-3,-7],[8,2,2,4,-3,8],[6,-4,3,10,-7,8],[2,-6,-10,-3,-8,8]],[[9,5,7,-7,5,6],[9,6,7,-10,5,3],[10,4,2,-7,6,-5],[9,3,-5,2,5,8],[1,-2,-5,-4,2,2]],[[-9,-5,4,7,-3,-7],[-1,2,6,7,-9,8],[3,-8,9,9,10,-5],[5,8,-6,6,-4,3],[-8,1,-1,-1,10,-1]],[[1,9,5,8,7,8],[10,1,10,-6,-8,6],[-8,6,-8,7,9,1],[-1,4,4,3,3,10],[2,2,4,9,-4,-8]],[[-2,-2,-2,-6,1,-2],[1,-10,3,-10,5,3],[1,-9,-7,-9,-3,-1],[-3,9,7,2,-1,2],[2,9,5,9,3,3]],[[7,10,-3,7,6,-4],[9,10,-10,-6,-6,2],[-6,-7,8,-1,-2,-5],[2,2,9,-2,2,10],[4,-4,10,2,-6,-7]],[[1,-9,8,7,-5,-9],[-5,-5,-3,-8,-1,-7],[-8,-7,10,-9,1,-3],[2,-1,10,-5,1,9],[5,10,10,6,-8,2]],[[-6,-10,-1,-8,-4,-3],[-6,-9,-8,-10,-8,8],[-10,5,9,8,10,-4],[5,-5,-8,-3,-7,-1],[1,-8,4,6,-10,1]],[[-10,-5,-1,3,-9,-4],[9,3,-10,-2,8,9],[-4,3,5,5,7,8],[-9,1,-1,6,2,7],[4,2,-9,-3,5,-9]],[[1,6,6,-3,4,6],[1,-7,-3,-7,-4,-10],[-2,-6,-8,9,-10,5],[-8,-2,4,-10,-10,-2],[-1,-10,9,-8,1,-10]],[[-2,8,6,10,4,8],[10,5,-5,2,7,3],[-2,-9,-8,3,9,-3],[-5,-1,-5,-6,-9,4],[9,1,8,2,-4,4]],[[-9,1,-8,-3,9,1],[2,-8,10,4,10,5],[-7,1,-5,5,-1,2],[-3,2,6,6,1,-9],[-10,10,6,1,10,7]]], dtype = "int8")#candidate|1319|(16, 5, 6)|const|int8
bop_1320 = relay.add(var_1306.astype('uint64'), relay.reshape(const_1319.astype('uint64'), relay.shape_of(var_1306))) # shape=(16, 5, 6)
output = relay.Tuple([bop_1307,call_1311,var_1312,const_1313,bop_1320,])
output2 = relay.Tuple([bop_1307,call_1314,var_1312,const_1313,bop_1320,])
func_1326 = relay.Function([var_1305,var_1306,var_1312,], output)
mod['func_1326'] = func_1326
mod = relay.transform.InferType()(mod)
mutated_mod['func_1326'] = func_1326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1326_call = mutated_mod.get_global_var('func_1326')
var_1328 = relay.var("var_1328", dtype = "int8", shape = (1, 5, 6))#candidate|1328|(1, 5, 6)|var|int8
var_1329 = relay.var("var_1329", dtype = "int8", shape = (16, 5, 6))#candidate|1329|(16, 5, 6)|var|int8
var_1330 = relay.var("var_1330", dtype = "float32", shape = (1755,))#candidate|1330|(1755,)|var|float32
call_1327 = func_1326_call(var_1328,var_1329,var_1330,)
output = call_1327
func_1331 = relay.Function([var_1328,var_1329,var_1330,], output)
mutated_mod['func_1331'] = func_1331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1355 = relay.var("var_1355", dtype = "uint32", shape = (3, 7, 16))#candidate|1355|(3, 7, 16)|var|uint32
var_1356 = relay.var("var_1356", dtype = "uint32", shape = (3, 7, 16))#candidate|1356|(3, 7, 16)|var|uint32
bop_1357 = relay.left_shift(var_1355.astype('uint32'), relay.reshape(var_1356.astype('uint32'), relay.shape_of(var_1355))) # shape=(3, 7, 16)
func_421_call = mod.get_global_var('func_421')
func_426_call = mutated_mod.get_global_var('func_426')
var_1361 = relay.var("var_1361", dtype = "int8", shape = (1408,))#candidate|1361|(1408,)|var|int8
call_1360 = relay.TupleGetItem(func_421_call(relay.reshape(var_1361.astype('int8'), [11, 8, 16]), relay.reshape(var_1361.astype('int8'), [11, 8, 16]), relay.reshape(var_1361.astype('int8'), [11, 8, 16]), ), 1)
call_1362 = relay.TupleGetItem(func_426_call(relay.reshape(var_1361.astype('int8'), [11, 8, 16]), relay.reshape(var_1361.astype('int8'), [11, 8, 16]), relay.reshape(var_1361.astype('int8'), [11, 8, 16]), ), 1)
bop_1374 = relay.equal(var_1361.astype('bool'), relay.reshape(call_1360.astype('bool'), relay.shape_of(var_1361))) # shape=(1408,)
bop_1377 = relay.equal(var_1361.astype('bool'), relay.reshape(call_1362.astype('bool'), relay.shape_of(var_1361))) # shape=(1408,)
func_743_call = mod.get_global_var('func_743')
func_748_call = mutated_mod.get_global_var('func_748')
var_1379 = relay.var("var_1379", dtype = "float32", shape = (1755,))#candidate|1379|(1755,)|var|float32
call_1378 = relay.TupleGetItem(func_743_call(relay.reshape(var_1379.astype('float32'), [15, 9, 13]), relay.reshape(var_1379.astype('float32'), [15, 9, 13]), relay.reshape(bop_1374.astype('int8'), [1408,]), ), 0)
call_1380 = relay.TupleGetItem(func_748_call(relay.reshape(var_1379.astype('float32'), [15, 9, 13]), relay.reshape(var_1379.astype('float32'), [15, 9, 13]), relay.reshape(bop_1374.astype('int8'), [1408,]), ), 0)
output = relay.Tuple([bop_1357,bop_1374,call_1378,var_1379,])
output2 = relay.Tuple([bop_1357,bop_1377,call_1380,var_1379,])
func_1383 = relay.Function([var_1355,var_1356,var_1361,var_1379,], output)
mod['func_1383'] = func_1383
mod = relay.transform.InferType()(mod)
var_1384 = relay.var("var_1384", dtype = "uint32", shape = (3, 7, 16))#candidate|1384|(3, 7, 16)|var|uint32
var_1385 = relay.var("var_1385", dtype = "uint32", shape = (3, 7, 16))#candidate|1385|(3, 7, 16)|var|uint32
var_1386 = relay.var("var_1386", dtype = "int8", shape = (1408,))#candidate|1386|(1408,)|var|int8
var_1387 = relay.var("var_1387", dtype = "float32", shape = (1755,))#candidate|1387|(1755,)|var|float32
output = func_1383(var_1384,var_1385,var_1386,var_1387,)
func_1388 = relay.Function([var_1384,var_1385,var_1386,var_1387,], output)
mutated_mod['func_1388'] = func_1388
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1605 = relay.var("var_1605", dtype = "int32", shape = ())#candidate|1605|()|var|int32
var_1606 = relay.var("var_1606", dtype = "int32", shape = (1, 7))#candidate|1606|(1, 7)|var|int32
bop_1607 = relay.bitwise_xor(var_1605.astype('int32'), var_1606.astype('int32')) # shape=(1, 7)
output = relay.Tuple([bop_1607,])
output2 = relay.Tuple([bop_1607,])
func_1612 = relay.Function([var_1605,var_1606,], output)
mod['func_1612'] = func_1612
mod = relay.transform.InferType()(mod)
mutated_mod['func_1612'] = func_1612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1612_call = mutated_mod.get_global_var('func_1612')
var_1614 = relay.var("var_1614", dtype = "int32", shape = ())#candidate|1614|()|var|int32
var_1615 = relay.var("var_1615", dtype = "int32", shape = (1, 7))#candidate|1615|(1, 7)|var|int32
call_1613 = func_1612_call(var_1614,var_1615,)
output = call_1613
func_1616 = relay.Function([var_1614,var_1615,], output)
mutated_mod['func_1616'] = func_1616
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1624 = relay.var("var_1624", dtype = "float32", shape = (8, 6, 6))#candidate|1624|(8, 6, 6)|var|float32
uop_1625 = relay.acos(var_1624.astype('float32')) # shape=(8, 6, 6)
uop_1640 = relay.erf(uop_1625.astype('float64')) # shape=(8, 6, 6)
output = relay.Tuple([uop_1640,])
output2 = relay.Tuple([uop_1640,])
func_1645 = relay.Function([var_1624,], output)
mod['func_1645'] = func_1645
mod = relay.transform.InferType()(mod)
var_1646 = relay.var("var_1646", dtype = "float32", shape = (8, 6, 6))#candidate|1646|(8, 6, 6)|var|float32
output = func_1645(var_1646)
func_1647 = relay.Function([var_1646], output)
mutated_mod['func_1647'] = func_1647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1680 = relay.var("var_1680", dtype = "float32", shape = (15, 3, 7))#candidate|1680|(15, 3, 7)|var|float32
const_1681 = relay.const([[[-7.996304,-6.884980,2.914035,-5.087567,-2.053916,-5.431704,3.874731],[7.565127,-5.505470,0.472150,-1.950366,3.466507,3.686972,7.567193],[9.857967,2.674260,3.210944,4.799185,-3.666013,-6.911259,4.897305]],[[-5.781472,-8.822968,-8.145127,1.486238,-1.122784,-6.277421,9.753402],[-3.536054,-0.442928,9.766390,-9.877965,-3.367234,1.541699,8.894972],[6.406206,-9.546123,8.817869,6.792841,-0.429146,-8.666824,-8.403585]],[[-8.864771,-7.807397,-4.389407,-7.696010,-4.035756,4.844274,3.631443],[0.016011,-0.562578,2.884294,-9.732143,7.558117,-6.497398,-3.309027],[-3.623736,9.175992,9.478041,-2.610500,5.047849,1.104294,1.069988]],[[-4.441781,-7.924746,7.303323,-9.952710,4.568162,9.177599,-0.398505],[-3.111457,-5.033177,-5.675672,1.871713,-3.408451,3.135806,3.849870],[5.867905,9.041569,4.205640,-0.613075,-0.913350,3.459645,4.733229]],[[7.228311,0.702593,5.220475,-7.939310,0.878530,6.493633,8.849122],[4.229447,6.025969,0.586379,-3.239252,-6.724372,3.404953,7.209357],[1.482026,-3.252386,1.509126,-2.432635,3.318498,-4.291831,2.719584]],[[-0.239526,-1.715044,6.709854,8.732693,1.503019,3.847825,-3.906862],[-9.558083,9.446134,-8.752088,-5.202579,2.065697,-3.706619,-5.619054],[-1.795818,-9.464702,-9.175935,-0.772768,3.614514,4.688690,-1.795025]],[[-5.943782,2.562938,-8.921258,-6.482817,-2.477643,-4.331775,-1.648133],[1.129283,8.444403,-5.439182,-1.698979,6.149903,-0.066271,-6.722121],[8.442670,-5.645096,0.817936,-3.201080,-5.875488,7.298391,-8.196388]],[[8.704375,-6.021514,5.014346,-1.037152,-9.557390,-3.593502,8.478355],[-7.802153,-0.120755,-1.990817,0.698336,8.648942,-8.148567,6.202388],[-4.105545,7.901040,-9.279266,-7.200804,-6.388409,8.089792,-4.058986]],[[-4.675097,-1.336250,5.790411,-3.164731,9.927092,-1.585610,3.216457],[-6.541767,-8.741657,-1.251635,-0.310238,8.743745,-5.434616,6.587623],[-1.408291,-5.040488,-7.734245,8.734425,2.390563,4.010899,-1.444183]],[[8.702509,-0.448997,-6.372581,3.467211,8.155167,6.853004,-4.215531],[-3.671355,1.939366,9.694541,4.622093,-8.456473,-7.730924,-6.801972],[-5.726659,9.253634,-0.142312,3.046544,-0.391901,-3.897193,7.839469]],[[-6.137735,3.298117,2.872061,-7.062158,-1.875166,-7.809866,-2.244608],[7.467129,4.404716,5.752818,8.242709,-7.243704,-4.852715,1.459293],[-0.235695,-9.421201,2.885397,2.042509,-5.964359,0.685735,9.105090]],[[6.632660,-5.225897,-6.744579,-9.600547,-1.904069,-0.668128,4.292930],[2.584977,0.168502,1.997705,9.667663,3.915591,9.860837,-3.767429],[8.992091,4.539333,6.941819,5.140173,2.072898,-9.247860,4.725397]],[[-5.226245,9.120191,-1.474295,-3.864305,7.260835,-5.026312,-5.251553],[-0.091564,-1.348017,3.454642,0.156097,-4.536572,-9.983581,-1.250021],[5.139328,7.829461,-5.707822,-4.699820,9.195747,-7.744777,-5.488682]],[[-0.525120,9.704620,9.964850,-2.899311,4.674014,1.369991,-1.597674],[8.501717,-0.129656,-9.594894,-0.471497,3.100507,5.520421,2.968818],[7.144020,-7.468004,3.122024,-8.733699,-4.113090,5.990285,-4.571499]],[[1.252121,-2.869388,-1.165153,3.689901,4.796441,8.379626,-8.181388],[0.422316,1.320993,5.662519,-5.781371,2.379408,5.779156,4.886191],[7.096054,-4.277819,-9.082820,4.836341,5.587718,-0.617753,-1.895265]]], dtype = "float32")#candidate|1681|(15, 3, 7)|const|float32
bop_1682 = relay.floor_mod(var_1680.astype('float32'), relay.reshape(const_1681.astype('float32'), relay.shape_of(var_1680))) # shape=(15, 3, 7)
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
var_1690 = relay.var("var_1690", dtype = "float32", shape = (288,))#candidate|1690|(288,)|var|float32
call_1689 = relay.TupleGetItem(func_1645_call(relay.reshape(var_1690.astype('float32'), [8, 6, 6])), 0)
call_1691 = relay.TupleGetItem(func_1647_call(relay.reshape(var_1690.astype('float32'), [8, 6, 6])), 0)
func_743_call = mod.get_global_var('func_743')
func_748_call = mutated_mod.get_global_var('func_748')
const_1697 = relay.const([8.481674,-4.832681,-3.486918,-0.007784,-0.391609,9.601907,6.490343,-8.762617,-9.910404,-4.831944,8.984416,-2.100416,-1.859635,5.255401,4.424067,0.303966,-6.713646,-8.858747,2.898053,7.591514,6.987389,6.453147,3.362580,-8.557566,5.984539,5.452830,-9.645252,-7.726225,6.401921,-9.336356,6.027422,9.359962,5.832425,-1.375295,2.616921,-5.941939,9.053972,8.374545,9.823581,-5.265752,-6.982885,-5.150255,3.558556,-3.060350,-8.899603,7.675787,-4.526527,3.844734,-8.259999,-1.354626,-3.745703,-4.759528,9.973577,-4.853604,4.367115,1.572193,-0.668020,-0.613714,-9.259709,-6.524981,5.575179,5.635565,7.589758,9.923343,-7.437085,1.133027,-1.497489,-1.710286,4.056541,1.011654,8.337026,8.812094,-2.345826,3.726119,-8.454809,0.139521,9.751835,4.632141,7.951772,-4.424414,-5.543593,-2.384043,9.090123,-1.363168,9.546234,-4.027178,-8.681553,6.708497,1.566263,-4.500008,-8.770538,-9.990431,-3.345235,-4.193943,-4.128212,7.821794,-4.282997,-9.124459,8.497958,1.016720,-9.617056,2.566685,2.880330,0.201117,-8.082770,-2.906568,1.634489,-9.510929,-2.838355,3.680958,-1.589879,7.307368,3.012515,-5.565069,9.972476,9.079637,4.441513,-0.257215,2.734779,-1.529944,9.909513,6.400280,7.410325,-9.300339,-3.923287,-6.366988,8.348719,-4.561120,0.872987,5.113695,-9.084266,-6.531268,2.309933,-0.999087,-3.672847,-8.938698,4.910268,-4.113716,-4.926704,-4.362437,7.559418,9.472904,-8.444953,8.713206,-6.867341,-2.903293,3.788366,2.936482,-7.304936,-0.415830,-3.443838,-9.735620,-0.657028,-1.367858,-0.855195,8.722312,8.584028,-4.991279,-8.071355,-8.524373,-1.069611,5.142230,1.146873,-7.490407,-9.073227,9.962803,-8.488176,-5.256579,-5.549632,2.302115,8.574042,-8.550237,0.855267,0.324289,-8.013796,-4.503301,-4.753071,4.044116,-0.564058,2.617841,-3.818878,6.918632,2.125793,3.103194,-4.319101,-2.591406,4.493877,2.955056,6.992182,4.763837,-9.768812,-7.247691,7.942699,-5.516415,6.372081,3.106937,-5.127062,-0.008274,-8.152979,-5.953799,-2.753205,8.611654,8.859653,-9.606735,6.797800,8.028670,-2.944577,-6.994086,5.190248,2.589698,9.798121,-1.511106,-3.268789,9.560487,-3.055596,0.792260,-3.399262,-8.980566,1.966470,-4.521124,-5.960591,-2.161349,6.718760,9.645841,-2.139532,6.159053,4.620907,8.182307,5.177330,-5.089008,-2.048632,-1.967756,-3.281323,5.735624,-9.630980,-8.796804,8.778256,9.525165,-6.488047,8.967008,6.281905,-3.592571,-2.964049,-6.343031,-0.534475,3.168733,8.176476,9.792999,-9.472542,9.637028,-8.206473,-0.607317,3.792843,-0.307717,-9.127510,-8.246480,-9.057990,-2.706537,-9.643420,-0.674018,0.725503,-4.147619,-6.225924,2.277356,-0.769064,9.093420,-6.099348,-6.521185,9.912933,6.334884,-6.148428,4.338970,-7.019606,7.519910,9.248758,2.465135,5.790468,3.497492,1.746868,-7.678249,1.072589,-8.893037,5.995686,4.009504,0.463410,-7.988153,-1.232116,7.800570,1.000540,-5.499139,-3.535883,-3.202211,2.880522,6.683526,-9.884558,-7.352480,7.380043,2.047159,0.563032,3.695304,-3.643423,-1.558495,-8.225793,2.094127,-7.640601,-0.735143,-2.699865,-7.251257,-3.456621,-7.386361,1.971537,-3.981010,-1.307375,-2.332055,7.074401,-6.551184,8.886110,-9.422803,-3.818465,-0.330517,4.358309,-0.928360,9.653153,3.288181,-8.089170,-2.564696,-8.795223,2.896651,-7.428226,-6.119935,3.806618,1.261023,9.130347,-7.604225,-1.241894,-5.787000,2.525477,3.396413,9.503861,-4.000821,-1.661265,-0.052577,-3.135889,2.392425,5.262455,-8.621473,3.035041,0.179065,0.456570,-4.923192,-9.126608,-5.664383,9.621449,-1.036990,-8.847812,5.896691,2.210956,-5.051677,5.423267,0.190573,8.153162,8.255552,5.233956,-4.315826,0.882568,-4.049840,7.744928,1.511084,-7.053731,-6.042953,9.968924,-1.118682,5.195965,-3.991061,-1.683526,3.904472,1.430434,-0.084636,7.509444,2.745820,-6.949218,1.159921,-9.068415,-4.633820,-5.618728,-2.457934,-7.805710,8.007979,5.578352,-0.876179,7.162687,2.317755,9.260377,9.804413,-3.758802,9.648311,4.053512,3.812196,1.095058,-5.058105,-8.170767,6.285636,8.324329,-4.358524,-2.536064,3.964349,-8.751933,-2.787784,-3.337954,-5.857428,3.944977,8.037031,-8.907066,-1.653090,6.890738,-6.233385,4.439862,-1.604180,-3.915582,4.028167,-3.666202,-3.685141,-1.718302,-2.595709,-7.606425,9.709873,-2.485451,-9.298181,5.951710,-9.111519,-1.766777,-1.702575,9.432974,-0.543716,0.632926,-0.589137,-8.111488,-7.479437,-8.781380,-0.450590,-5.883933,-6.933302,-9.996922,7.688844,4.961805,-8.184594,-3.738752,-3.946598,-7.211688,6.193408,-1.691391,2.826548,-0.051893,0.652294,-9.925340,-9.805777,-8.727559,3.176669,1.553798,-3.136080,-5.660069,-7.732484,-4.045243,-7.366842,-5.889141,-8.586834,-8.803399,4.766586,-1.447690,9.939038,-6.491822,1.292717,-5.766395,-4.045154,9.065279,-8.828373,7.492634,2.800661,9.276784,-1.267561,9.323101,7.819023,-1.443301,0.043997,4.053145,3.001338,-6.387026,-1.813930,6.726241,-4.476980,-2.837607,1.947131,-1.717309,2.665693,-5.192401,2.695849,-7.608449,4.021723,9.487263,6.478812,8.491301,7.434080,4.626787,-5.765276,-0.429592,-6.385749,-9.410847,-6.255905,-6.343812,-7.669199,-4.021568,-5.850908,-6.732676,3.610674,-0.965752,2.717452,-1.801310,9.044999,-7.904115,-1.778027,8.756760,9.416745,-2.206089,-7.328700,5.815466,-4.087422,-9.207251,5.400942,-9.393990,-8.982979,5.463367,9.072779,-3.024013,-8.557860,-2.620021,7.091383,7.161810,4.801566,5.945743,-3.736190,1.739090,-4.370994,6.984802,-0.555553,-3.335904,8.323783,-3.576718,3.659729,7.212018,-6.798954,9.201946,0.056340,-4.788970,-7.510410,-6.166885,2.861780,9.302743,6.976042,0.496463,8.069942,6.224245,5.432223,0.503762,-5.463235,-5.080016,-2.333649,1.485836,-9.332511,0.954997,5.197574,3.045020,7.837339,-1.576492,-4.139064,-0.832448,5.241494,-2.676092,-4.651546,-9.117035,-3.823320,1.643837,-7.400279,7.567356,-4.519994,9.876510,-4.556134,-4.844326,-8.106869,3.792442,-9.966755,-3.155435,6.522183,1.901581,-3.729151,-4.262877,-9.562868,0.860530,-5.177186,-6.448326,2.917084,-7.600631,-9.403860,0.552764,2.320926,8.599719,8.597252,-0.866225,-7.382062,-6.505538,7.912033,-7.752342,-9.200451,-1.400101,-9.241462,1.203599,-6.395989,2.967766,6.845384,3.902312,7.383157,-5.752258,-5.774109,8.732172,-7.641090,6.298148,8.257539,-2.770574,-3.990244,-2.588687,4.767310,-8.658236,-1.452304,-4.137919,4.863601,-7.013870,3.976339,7.179503,7.290129,-7.215701,-6.125126,4.658464,2.948602,5.991221,-8.495076,-1.369782,7.913821,-6.288450,3.500798,2.204579,-4.846365,6.339251,4.669791,-1.299939,-5.611517,-2.660098,-2.063990,-9.019280,2.291780,4.800263,9.419845,8.938427,7.260164,-6.174603,6.385871,3.840718,-9.130625,4.051525,0.170444,-8.770742,-8.392106,-7.000006,8.040711,1.828332,-3.503567,-7.344328,-6.441771,-8.366655,7.894298,-6.617328,2.680231,0.011666,7.555408,1.161751,-1.694218,-6.344673,-3.977843,5.333150,5.636676,0.642970,-5.648962,1.157219,2.975431,-4.283788,4.607194,9.228262,-5.864850,-5.796644,4.465108,-6.566244,6.267470,5.222120,0.586638,7.350442,0.215749,-5.531791,2.655579,-6.152249,2.010892,1.648639,-7.837312,6.565771,3.279019,-9.426725,5.484177,-4.371553,1.472765,8.771547,9.292057,3.603778,3.753163,-6.611594,6.243407,3.499457,2.917010,5.514100,-0.320684,-4.715929,-9.652046,-6.176973,0.597366,8.861153,-2.509896,3.893650,3.594300,-4.786752,-4.280066,5.955201,-6.440638,-3.017229,-2.397672,6.306928,0.883855,-2.031547,-4.886779,3.974912,-9.194267,-8.855987,3.536427,-9.298337,-5.509116,6.915688,2.244215,-7.120022,-0.752328,7.307872,2.682528,0.779376,-2.802698,-7.743335,-6.995394,-5.631643,-8.230138,-7.088377,-7.485052,9.452052,1.110184,4.418812,5.787895,-0.938051,-2.341373,-8.307856,-5.244794,-2.186804,-2.201240,1.997929,0.613306,3.203899,-3.502948,2.446857,-4.503657,3.033447,-0.418147,-7.671956,5.448532,7.694128,-5.980636,6.278574,7.847598,2.556440,-7.645352,-0.591816,-3.568146,-6.236175,3.112958,4.371365,-7.731787,-2.684435,9.056850,-4.142985,5.376030,-0.113791,-6.657919,3.314873,-5.364628,6.496767,2.758787,-0.103438,7.326724,7.426889,-1.099909,-0.191109,2.959663,3.199383,2.203646,5.212862,1.697710,-4.440089,3.239769,1.142252,-1.664000,7.134360,8.544875,1.855787,-2.375049,6.416437,3.979555,3.716188,-1.196131,4.051050,-7.697757,0.046712,-8.626105,8.344928,6.344509,6.706408,6.081706,4.503684,-2.451438,9.890246,7.559434,-5.694937,-3.463913,-0.536868,-0.607142,-8.793527,-0.354624,0.003327,5.449817,0.812531,0.640522,-1.290876,2.214584,6.866777,-5.490910,-7.499507,-5.553206,-9.795328,-8.584372,1.707190,-5.245693,4.737426,3.697013,-4.290522,-8.526131,4.909411,-3.210418,-5.083212,-5.012921,-6.159501,1.916040,-6.427299,2.947610,-9.596439,2.372724,-3.901873,-0.434996,0.905360,-4.241618,-7.026318,1.591611,4.890410,-3.638558,0.743691,4.667482,6.086222,-8.104320,-0.745553,6.405597,5.938614,1.145669,-8.812093,7.838406,8.652081,7.411160,-7.247403,-5.233505,7.385234,-6.405805,1.393746,-1.709346,-9.246314,-6.572993,-2.543467,1.817647,7.780572,9.189616,-0.307637,0.867832,3.348740,-9.473099,6.841845,2.215598,4.839301,0.925032,7.513827,4.901554,-4.438947,2.973109,8.477448,-1.294023,6.871246,0.447709,-0.573589,4.880618,5.562019,-8.415120,-0.816699,1.432162,6.600829,-7.087875,-3.226071,-1.185334,-9.187385,5.012863,-3.399693,-5.935237,-5.351596,-3.132795,-2.724252,-9.889378,1.918661,-0.704451,-3.974249,9.574421,-1.602532,-4.640200,8.879730,1.479288,-2.138678,-8.570694,-4.494175,-5.903783,-1.751186,1.394947,8.318707,-2.438867,-9.031190,-8.362977,0.732406,-0.869639,-9.988980,-2.853940,4.031211,7.149416,9.937790,9.234200,-3.415960,-9.307216,-7.220569,6.202886,8.542629,-6.797796,-4.719290,-6.092651,-1.130345,8.660651,3.101712,-9.421451,9.030142,6.414092,8.697616,-8.221883,-9.181535,-9.202528,-9.877458,-0.732895,-9.148461,-5.107909,-2.317185,-1.230762,8.115936,0.612989,4.659558,-5.930826,7.764325,6.413807,-1.700698,-8.332013,-5.691850,6.484488,-5.396029,-0.253782,-3.361684,0.950721,0.381760,3.347071,8.222746,-5.753581,-2.265891,2.763261,-7.393336,3.876572,-5.389633,0.358595,-0.440314,4.692228,6.105456,9.913707,-3.386725,-7.708018,-4.118297,5.527590,-1.034838,1.200969,-8.166182,-2.254114,9.633316,3.469769,5.319424,3.624480,7.652880,-3.316098,-0.657179,-1.561017,-8.916050,2.314181,-2.028852,-5.301137,-3.553257,1.094753,-5.755034,2.631706,3.137291,6.308780,0.432736,3.514327,5.039109,1.400994,9.361970,4.546459,-0.888573,9.607312,9.286232,2.744907,2.432893,-6.409184,-6.611859,5.349019,-2.861292,-0.343972,9.705046,-0.655168,7.419403,0.184057,9.746486,-7.894505,3.357717,-4.837435,3.965137,-9.679048,-4.754188,-3.709954,-6.315065,1.320530,-9.047372,-6.545771,9.452004,5.651043,3.347121,2.252549,8.506991,-2.562214,7.535376,6.109045,7.366698,3.514226,-4.507415,-2.434624,-7.284980,4.683630,-1.996481,-4.840564,-2.542416,-9.579141,-1.290665,-2.660973,-2.311055,-9.156641,5.041432,-7.557410,0.046813,-8.074253,-0.743564,-1.717963,-6.058590,3.606503,-5.714853,-0.073670,0.311957,-7.392808,6.025759,2.393172,7.745517,3.913061,4.271013,2.800082,-8.959895,-2.395146,9.797462,9.845588,-6.766150,-0.199751,-4.600323,7.615317,3.644210,-6.290731,-3.471740,-1.923278,2.418573,-2.304388,-6.619413,-5.261469,-7.251057,6.587744,7.028750,6.909030,6.746788,-3.281509,1.433830,-5.715416,9.961681,6.196598,-0.827030,-8.768651,7.368704,8.968942,-6.350057,-3.384424,-2.253031,-8.118857,-6.651709,-9.245072,2.830039,-1.976339,-1.976942,-9.753550,7.335045,-6.108390,3.470369,4.066052,6.559282,-5.580096,-5.860150,-6.786406,-1.819330,2.398971,7.583277,1.506430,-8.528901,9.718873,-5.026934,3.309333,7.917048,5.191125,-8.850733,5.900691,9.895270,0.245613,1.096788,4.116898,4.149189,-1.510971,-7.453009,8.395355,8.490985,5.949489,-5.073468,2.015545,-0.434293,6.988605,-3.415198,9.450941,-3.754472,4.470467,-0.415383,-0.808626,2.463393,-2.449609,-7.508082,7.043061,-4.159615,2.520091,1.103392,-5.588139,5.296769,-4.479289,9.544391,-3.880453,-6.038744,4.256342,-9.323024,-2.624872,-9.628431,4.671995,6.351300,1.679624,0.685197,-5.450438,6.265840,1.487837,-7.531001,-7.573959,1.750564,-8.443886,4.730231,-0.616971,6.625288,1.304584,-2.976715,-6.324543,5.529543,5.252731,-5.583138,9.173659,4.044234,-2.398620,-5.909164,7.769157,2.991179,-6.262845,7.347035,-2.721887,9.828785,-4.021163,-7.010498,4.338870,-7.747306,1.397728,1.744373,4.219707,0.939675,-7.696197,-0.404437,4.244236,8.545484,-3.529236,-2.554108,3.054810,5.127053,4.772497,-3.147941,4.574419,-1.023662,0.600874,-0.779468,-8.656458,1.770480,5.915952,-2.308653,7.382682,-3.918361,-4.112722,4.722193,4.680527,9.670052,-3.514327,5.980391,9.932640,-1.036811,1.261378,4.815502,-3.527379,5.071517,-5.798615,-2.020628,9.984058,-9.255711,-8.442004,-2.410825,-3.350852,-1.725530,4.512151,-9.655514,6.002412,-0.123324,7.610807,-7.628117,-2.146224,-0.696057,4.762057,-5.815379,1.535598,-0.850826,-9.970074,9.717808,0.496066,-1.679847,-2.057363,3.404398,3.606239,-3.091166,8.329036,5.063592,-5.191884,-0.788264,-8.479513,5.629711,9.628404,6.712018,-1.689308,-9.373205,7.482557,-3.147251,-8.875197,7.480333,4.973130,-3.551660,3.748945,-9.232828,9.725817,7.545507,-4.368375,-6.696724,3.276242,5.200753,-1.363198,8.135095,-2.702560,0.182572,8.447274,3.861233,8.576952,7.237390,4.068817,-7.295680,-1.853311,-6.993891,-0.933286,1.278592,3.737191,2.709130,-2.728118,4.544001,7.025171,2.363867,7.048074,3.485951,3.601935,8.981815,8.871621,2.642022,-7.957769,-6.756751,-4.355415,-9.258319,-0.638379,-6.201372,-0.089477,-4.403840,-5.147856,-6.116111,-7.092532,-8.901744,-3.039896,-9.978457,-4.792557,8.828613,3.012778,8.623560,7.518832,1.728126,-0.500214,4.415629,9.618706,-5.135566,3.568405,-0.641646,-9.853208,8.266663,-8.332777,-4.350148,-5.360351,4.925514,4.005479,7.945614,-3.863556,5.282834,-9.392331,9.747448,-9.062143,-4.799089,-4.759406,2.087290,8.310199,2.331705,-8.889147,-1.723856,-9.989335,-1.859641,4.774245,-5.295699,0.251480,-5.891157,-4.787537,9.636093,6.407524,6.879729,-1.170116,-5.038641,1.238848,-3.760378,-2.160623,-7.820126,-2.474701,-1.456697,7.900433,-5.919553,-2.456791,-2.560124,-7.487584,7.833359,9.074768,-0.549920,5.674557,-9.271158,-7.760846,-5.203718,4.586717,7.605561,-9.738633,9.178992,5.124542,-6.643310,-1.909570,-9.966531,-1.694634,-2.287792,-1.695946,-2.716780,-4.056985,4.031421,8.074107,5.081381,-3.145816,-2.350335,-4.743445,-5.391264,0.875991,-1.756109,-9.516416,8.796486,-4.466166,-9.729602,-7.385550,6.479017,6.669992,2.032016,-4.904235,-4.228282,-4.171075,5.731113,-7.327448,-3.523451,-5.030349,-8.173126,3.319982,-0.297451,0.471143,1.907337,6.772367,-4.995133,7.811267,4.374992,-2.750607,-4.682953,-3.156846,-2.030620,-0.541516,0.610342,3.508624,9.219515,9.559689,-8.603823,-4.008244,-3.071122,-5.374133,8.548412,-5.851571,-7.975709,-5.845370,6.237524,-7.389768,8.243351,-1.982515,-1.237212,-6.134919,8.844166,6.784509,5.597280,9.661671,2.506775,-5.595863,1.527010,1.006535,-1.383364,-8.063819,-8.911142,5.545663,7.624443,-7.374046,8.464543,3.237531,-8.235895,-1.129292,1.456358,4.129185,-0.619201,6.771295,5.615341,5.816512,-6.785099,8.507529,-8.133498,-2.137244,2.687032,9.399451,-1.181972,1.988736,5.905821,-4.227945,6.603831,9.789744,1.809184,9.836484,3.257031,-0.886203,-2.398999,4.846431,-8.487154,8.779553,-1.514970,-1.936098,2.129917,-3.738420,-0.478658,2.406242,-1.713349,7.448774,0.441190,-6.920444,0.388187,-2.712098,7.837740,-7.053888,-5.227001,0.671450,3.963394,5.752997,3.227846,0.510163,-7.416893,4.650921,-1.051947,-5.442659,9.215610,-4.129077,-6.215468,-2.196974,-1.725168,1.625111,-4.057645,-5.647542,2.690023,6.010496,5.230026,-6.509979,4.679176,-6.188285,-4.846987,-0.900892,-0.223006,-9.042921,7.509061,-8.579188,4.208104,-4.904791,-6.284255,5.319080,-5.569476,-0.489862,-9.366250,7.001504,-5.916430,4.371486,3.933860,-1.884799,-4.006878,-3.749650,4.250338,-4.578170,-2.782345,9.048690,6.077778,-1.115651,4.998986,9.494637,9.059720,0.856018,-7.154369,-0.633388,-0.310667,9.429711,0.009370,5.214929,-7.927996,-8.194193,-7.402493,1.001167,-4.860988,-3.243659,-7.406212,1.008319,-1.628413,3.778428,9.174113,-6.980760,-8.486997,9.779953,5.523961,6.761384,-8.494325,6.085083,5.522712,-9.120627,-4.353521,4.942929,-4.228882,0.658040,7.853148,6.594233,-2.415107,3.966338,-2.644099,2.946912,8.012494,6.919810,-0.972447,-1.374617,-0.698502,7.325118,9.488845,5.730436,-4.656221,2.586736,-5.132326,-2.548165,-3.519509,9.395283,-0.341528,7.236963,5.101740,5.409776,0.011239,0.957360,-0.636399,-7.901892,9.653544,5.159180,-2.194588,-3.523205,-4.665605,-3.320603,-5.125882,6.536996,-0.013018,-8.379474,5.482669,2.154917,4.112492,-6.220978,6.176425,-8.028218,6.691705,-7.315518,-0.219919,-3.326793,-6.411112,7.889374,-7.352367,7.778140,1.278416,2.953122,-4.069696,0.819249,8.286782,7.729469,6.530456,-0.161643,-8.892546,-9.025483,2.834851,5.225555,2.847707,-5.566665,7.954135,-6.188432,2.559931,1.391823,-7.577290,3.081661,8.207559,5.179563,-6.586162,6.568856,-1.400508,7.011566,-1.551019,1.354341,-3.469082,6.294425,-8.421397,-1.108847,0.004774,9.301468,2.195044,-2.082349,1.047751,6.468461,3.311942,-3.660799,-1.904109,8.757728,-8.118819,4.565970,-9.037728,-2.715459,-6.633287,-3.186289,4.512773,-4.233799,-4.986008,8.241607,-4.660180,-9.251614,2.975842], dtype = "float32")#candidate|1697|(1755,)|const|float32
var_1698 = relay.var("var_1698", dtype = "int8", shape = (1408,))#candidate|1698|(1408,)|var|int8
call_1696 = relay.TupleGetItem(func_743_call(relay.reshape(const_1697.astype('float32'), [15, 9, 13]), relay.reshape(const_1697.astype('float32'), [15, 9, 13]), relay.reshape(var_1698.astype('int8'), [1408,]), ), 2)
call_1699 = relay.TupleGetItem(func_748_call(relay.reshape(const_1697.astype('float32'), [15, 9, 13]), relay.reshape(const_1697.astype('float32'), [15, 9, 13]), relay.reshape(var_1698.astype('int8'), [1408,]), ), 2)
output = relay.Tuple([bop_1682,call_1689,var_1690,call_1696,const_1697,var_1698,])
output2 = relay.Tuple([bop_1682,call_1691,var_1690,call_1699,const_1697,var_1698,])
func_1700 = relay.Function([var_1680,var_1690,var_1698,], output)
mod['func_1700'] = func_1700
mod = relay.transform.InferType()(mod)
mutated_mod['func_1700'] = func_1700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1700_call = mutated_mod.get_global_var('func_1700')
var_1702 = relay.var("var_1702", dtype = "float32", shape = (15, 3, 7))#candidate|1702|(15, 3, 7)|var|float32
var_1703 = relay.var("var_1703", dtype = "float32", shape = (288,))#candidate|1703|(288,)|var|float32
var_1704 = relay.var("var_1704", dtype = "int8", shape = (1408,))#candidate|1704|(1408,)|var|int8
call_1701 = func_1700_call(var_1702,var_1703,var_1704,)
output = call_1701
func_1705 = relay.Function([var_1702,var_1703,var_1704,], output)
mutated_mod['func_1705'] = func_1705
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1736 = relay.const(-7.724294, dtype = "float64")#candidate|1736|()|const|float64
var_1737 = relay.var("var_1737", dtype = "float64", shape = (4, 4, 8))#candidate|1737|(4, 4, 8)|var|float64
bop_1738 = relay.mod(const_1736.astype('float64'), var_1737.astype('float64')) # shape=(4, 4, 8)
uop_1771 = relay.log10(var_1737.astype('float32')) # shape=(4, 4, 8)
uop_1784 = relay.exp(uop_1771.astype('float32')) # shape=(4, 4, 8)
var_1789 = relay.var("var_1789", dtype = "float32", shape = (4, 4, 8))#candidate|1789|(4, 4, 8)|var|float32
bop_1790 = relay.greater_equal(uop_1784.astype('bool'), relay.reshape(var_1789.astype('bool'), relay.shape_of(uop_1784))) # shape=(4, 4, 8)
output = relay.Tuple([bop_1738,bop_1790,])
output2 = relay.Tuple([bop_1738,bop_1790,])
func_1793 = relay.Function([var_1737,var_1789,], output)
mod['func_1793'] = func_1793
mod = relay.transform.InferType()(mod)
var_1794 = relay.var("var_1794", dtype = "float64", shape = (4, 4, 8))#candidate|1794|(4, 4, 8)|var|float64
var_1795 = relay.var("var_1795", dtype = "float32", shape = (4, 4, 8))#candidate|1795|(4, 4, 8)|var|float32
output = func_1793(var_1794,var_1795,)
func_1796 = relay.Function([var_1794,var_1795,], output)
mutated_mod['func_1796'] = func_1796
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2071 = relay.const([[[-9.147046],[0.689552],[-2.614848],[-6.489469],[3.577012],[-5.505375],[-0.195077],[-6.448502],[7.428182],[2.485798],[0.894946],[-9.630282],[4.271597],[-7.306506],[-3.257293]],[[-4.979362],[4.401920],[-2.222789],[-6.631342],[-1.875241],[7.136587],[-6.214305],[-6.633615],[-1.080931],[-5.576629],[-2.189749],[8.121957],[-7.350344],[-6.245735],[-1.622531]],[[1.548694],[1.249242],[-3.250887],[-1.542973],[-5.723910],[-4.471443],[1.007264],[-9.774423],[2.930207],[2.507616],[-9.838902],[-5.295115],[4.059097],[-6.891904],[3.838428]],[[-8.609698],[-4.436384],[7.797906],[3.816140],[1.938482],[-8.535004],[6.023599],[3.125930],[-6.888800],[3.609801],[-0.737946],[3.880757],[4.300286],[-7.225903],[5.001639]],[[-2.480262],[-1.805483],[2.803233],[-2.811098],[7.545132],[1.491771],[4.866621],[6.897062],[-6.351766],[-1.746823],[2.164222],[6.094381],[7.160791],[2.758158],[-9.489196]],[[4.707150],[-2.654559],[3.296377],[-6.541614],[-1.868133],[-8.167686],[8.379458],[8.608019],[-1.016845],[-8.165712],[1.275424],[0.210459],[8.403328],[4.191740],[-1.592763]],[[5.692363],[4.604883],[8.151751],[8.708358],[-1.717469],[9.521529],[7.500326],[-5.958212],[9.874677],[-5.176039],[6.662431],[-6.913405],[-8.897831],[7.000085],[-6.847874]],[[-1.309232],[-9.648359],[-6.943187],[-9.437056],[4.467698],[9.308912],[3.664402],[3.211869],[3.251093],[-7.026016],[1.588091],[3.461809],[5.421111],[5.299879],[-6.536586]],[[-7.504235],[2.371191],[-8.564565],[8.883827],[7.966947],[7.873580],[7.392445],[-4.692480],[-2.926632],[-7.415348],[3.446657],[7.726101],[1.532200],[2.563787],[0.215531]],[[-3.036851],[-0.518920],[-1.533995],[9.642163],[0.674000],[-6.876536],[-2.217914],[-6.680228],[9.315305],[-5.414023],[7.427434],[0.238726],[7.402476],[5.982470],[1.091198]],[[-1.895786],[4.313559],[0.925044],[1.926873],[3.947950],[3.605097],[0.421566],[9.689069],[-9.621230],[-6.318280],[-2.023814],[6.306985],[-2.808464],[-4.170025],[9.190553]]], dtype = "float64")#candidate|2071|(11, 15, 1)|const|float64
var_2072 = relay.var("var_2072", dtype = "float64", shape = (11, 15, 1))#candidate|2072|(11, 15, 1)|var|float64
bop_2073 = relay.power(const_2071.astype('float64'), relay.reshape(var_2072.astype('float64'), relay.shape_of(const_2071))) # shape=(11, 15, 1)
bop_2080 = relay.logical_or(var_2072.astype('bool'), relay.reshape(const_2071.astype('bool'), relay.shape_of(var_2072))) # shape=(11, 15, 1)
uop_2093 = relay.sigmoid(bop_2073.astype('float64')) # shape=(11, 15, 1)
bop_2095 = relay.not_equal(uop_2093.astype('bool'), relay.reshape(var_2072.astype('bool'), relay.shape_of(uop_2093))) # shape=(11, 15, 1)
func_765_call = mod.get_global_var('func_765')
func_769_call = mutated_mod.get_global_var('func_769')
const_2102 = relay.const([-6,10,-7,10,8,-6,-2,9,10,2,5,-9,-6,1,3,4,-1,5,-3,7,-4,8,-1,-6,8,8,-6,6,-8,-5,2,-2,-6,-10,-4,10,1,-6,4,-5,9,-6,10,5,8], dtype = "int32")#candidate|2102|(45,)|const|int32
const_2103 = relay.const([-1,-5,-10,6,4,-3,-4,9,-2,2,8,8,-1,-8,-5,9,1,-5,-8,8,6,9,2,-10,2,8,4,-10,9,4,-8,-1,8,2,4,-10,-3,10,8,-10,6,10,3,2,7,-5,-10,4,10,-4,7,-5,-2,6,9,-10,-5,2,2,8,-2,6,9,8,7,-4,-5,-5,-7,6,-8,-10,1,-10,10,2,-1,3,-8,9,-2,-10,-5,-3,3,-8,-10,-3,-4,3,1,5,-4,1,-7,9,-5,-6,1,3,-9,-6,-1,9,2,-9,-7,-6,-1,5,9,-9,3,5,3,10,10,2,-7,-9,10,3,-2,-8,-5,-5,7,1,7,5,-5,-5,-5,10,-5,2,-9,-1,-3,8,-2,-4,-4,10,-10,-3,-4,-4,5,-10,3,4,-6,-4,5,-8,-2,-7,-5,10,-4,4,1,-6,10,-7,-7,-6,9,1,-10,3,1,-10,9,-6,3,2,8,2,-3,2,1,2,-5,-4,-3,-9,-6,-3,-7,9,-8,5,8,-3,-6,2,2,5,-8,4,-5,8,-2,-6,1,-8,-6,-5,10,-7,3,-4,-3,2,-10,-3,-9,-8,-3,9,-10,2,-2,2,5,10,7,4,-3,-1,3,9,8,-5,2,4,-5,-7,5,10,-9,1,2,-5,-10,-9,-4,-8,-8,1,7,1,6,-8,7,5,8,-3,-9,-7,-7,-3,7,-1,-4,-4,-2,2,2,10,-10,5,-9,8,9,7,2,-6,3,5,-4,8,-1,-5,-2,2,10,-8,8,-8,-1,-2,7,3,9,-7,6,-8,-6,2,8,10,3,-8,5,-9,-1,1,-1,7,-4,-3,-10,9,-4,5,-5,1,-4,9,2,-8,-9,10,3,1,4,8,-5,-3,6,-4,-3,-8,-3,-10,7,8,5,7,9,-5,-4,-10,-10,9,-9,8,7,2,-5,4,8,-9,4,-5,5,-8,3,-7,9,8,10,-1,-1,6,-5,7,4,10,-1,-1,-3,3,-4,-8,8,-2,-1,5,10,-6,-2,10,-9,4,-3,6,3,-3,-10,2,8,-6,1,-9,-3,-5,9,2,4,-8,10,-7,3,-10,5,-3,-9,10,-10,-10,5,7,9,-10,7,3,3,-10,2,-9,5,-7,-1,-2,-7,4,-8,-6,2,1,5,9,-4,2,1,2,-7,8,-10,-9,-5,-9,-7,9,10,-1,3,-10,-8,-4,8,-5,-9,-3,5,5,8,-2,-8,4,-10,2,-4,-2,-9,-3,4,-1,3,1,-9,-10,8,-10,1,-6,-9,-4,-3,7,-5,-10,-10,-2,-7,5,-9,3,-6,-6,6,-8,10,-10,-10,-6,1,2,9,6,-8,3,5,5,-8,-8,2,-1,-10,7,2,-3,-9,4,-10,5,-1,-5,4,-8,10,-7,4,7,1,-1,7,-5,10,6,10,-2,-10,9,-7,-6,-5,-3,3,2,-4,-6,-9,-9,10,3,-7,-3,1,2,-9,9,3,4,10,9,-8,-6,8,8,-1,8,-3,8,10,-4,-10,6,2,9,-3,7,7,-8,9,3,-6,-1,-9,-5,-8,-2,9,-2,-8,-7,1,-2,-9,3,6,-9,6,-1,8,-8,2,-5,-7,-6,-7,-6,6,1,8,-3,-2,5,4,-5,-10,9,4,-7,-10,-8,5,-9,1,8,4,4,-6,3,4,2,-2,10,-4,9,-1,1,10,-8,-8,2,8,7,6,-5,10,8,8,-10,-4,-6,-3,-10,-5,-3,5,-4,-1,8,-2,10,2,-8,6,5,-6,-5,-6,-3,3,5,-3,-8,1,-6,1,-7,-3,-5,2,9,1,-10,-6,7,10,7,2,-2,3,5,3,9,4,3,4,-5,-5,-1,9,2,1,-5,-5,3,4,-4,-8,2,-8,2,-8,-6,-2,-6,6,-2,-7,9,5,-2], dtype = "int32")#candidate|2103|(720,)|const|int32
call_2101 = relay.TupleGetItem(func_765_call(relay.reshape(const_2102.astype('int32'), [15, 3, 1]), relay.reshape(const_2103.astype('int32'), [15, 3, 16]), ), 0)
call_2104 = relay.TupleGetItem(func_769_call(relay.reshape(const_2102.astype('int32'), [15, 3, 1]), relay.reshape(const_2103.astype('int32'), [15, 3, 16]), ), 0)
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
var_2113 = relay.var("var_2113", dtype = "float32", shape = (288,))#candidate|2113|(288,)|var|float32
call_2112 = relay.TupleGetItem(func_1645_call(relay.reshape(var_2113.astype('float32'), [8, 6, 6])), 0)
call_2114 = relay.TupleGetItem(func_1647_call(relay.reshape(var_2113.astype('float32'), [8, 6, 6])), 0)
bop_2118 = relay.logical_or(uop_2093.astype('bool'), const_2103.astype('bool')) # shape=(11, 15, 720)
output = relay.Tuple([bop_2080,bop_2095,call_2101,const_2102,call_2112,var_2113,bop_2118,])
output2 = relay.Tuple([bop_2080,bop_2095,call_2104,const_2102,call_2114,var_2113,bop_2118,])
func_2121 = relay.Function([var_2072,var_2113,], output)
mod['func_2121'] = func_2121
mod = relay.transform.InferType()(mod)
var_2122 = relay.var("var_2122", dtype = "float64", shape = (11, 15, 1))#candidate|2122|(11, 15, 1)|var|float64
var_2123 = relay.var("var_2123", dtype = "float32", shape = (288,))#candidate|2123|(288,)|var|float32
output = func_2121(var_2122,var_2123,)
func_2124 = relay.Function([var_2122,var_2123,], output)
mutated_mod['func_2124'] = func_2124
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2241 = relay.var("var_2241", dtype = "float64", shape = (14, 10, 11))#candidate|2241|(14, 10, 11)|var|float64
uop_2242 = relay.cos(var_2241.astype('float64')) # shape=(14, 10, 11)
func_493_call = mod.get_global_var('func_493')
func_495_call = mutated_mod.get_global_var('func_495')
const_2247 = relay.const([2.203143,2.083343,-6.189274,5.274697,9.144305,-3.760973,-4.156380,-4.674287,1.915676,-6.563012,2.587692,-9.509826,-9.568569,-1.492177,0.067982,2.041785,-5.287779,0.373877,4.030435,8.669031,7.596349,9.133542,-8.430795,-2.843703,-2.048776,-6.866486,2.398391,2.452675,3.052177,9.058976,-3.927148,-9.109595,1.437337,9.936374,-8.522559,8.222075,-7.997956,-0.154218,5.902871,-0.954768,5.660931,8.224553,9.450792,-7.186084,-0.108137,8.197773,-1.080329,-3.843338,5.306976,-0.178042,-5.996417,9.723702,-3.267500,0.008656,-4.252338,-9.173524,-8.928076,-0.734818,-9.382141,0.257472,-4.063728,8.213151,-9.553995,0.226443,2.769536,4.132973,6.423887,-3.033543,-3.945203,4.797803,-0.207227,-3.703270,-9.093092,-4.625511,2.469922,4.576575,8.354291,-7.062259,-9.966969,2.327947,-9.441857,6.035483,-9.253375,0.592275,-8.632566,5.536050,-1.664298,8.697675,7.702597,9.121232,4.159660,-8.902441,0.687437,-5.639974,-3.727425,2.107464,6.891808,4.351033,1.744797,-9.257551,5.657807,-9.653683,-8.601463,-8.470954,0.992006,-4.285159,6.264498,2.241727,-3.367800,-2.882278,-7.838275,9.156192,8.028101,7.479691,5.512765,-0.047450,2.343638,0.128987,-9.660608,8.712843,7.466899,7.401550,8.649258,-3.724822,-6.647461,-4.842362,-0.183717,-3.900048,-2.977836,-9.850126,-0.682571,7.029255,7.136453,0.232606,-2.615921,-0.031272,-7.343929,-5.728039,-1.532936,2.300016,-4.146340,7.038284,8.111251,-7.648626,7.608397,-7.549446,3.862947,-8.809586,-2.271983,-1.139898,-6.385980,-3.106740,-5.317335,-4.334471,0.690611,-0.710266,-0.689214,7.416064,8.041756,6.961843,-8.797527,-4.707755,1.448756,2.154316,-5.250751,5.411618,-9.185439,-2.736304,-7.115394,5.789131,-0.906262,9.774709,-0.739594,3.727718,-9.910123,-0.224841,-2.696332,-7.998686,4.328053,2.731201,-0.205637,9.431311,-4.839771,9.420765,-9.843506,4.859570,-3.567283,2.519698,7.024990,7.664793,-7.066890,-5.332368,-7.404396,-9.463405,-2.521132,-9.795102,-4.029631,3.188836,3.387771,-9.443346,-9.932094,-1.144341,-5.143857,2.617388,-2.403073,-6.858744,-2.219948,6.250228,0.403232,0.499230,1.105223,-4.846258,7.806450,0.803785,4.759702,-6.948537,4.685720,-1.684863,6.307996,2.918721,-8.105108,-9.219615,-5.972970,-7.733054,6.761762,-9.136849,2.316253,5.542355,-0.990993,9.590889,-5.995492,9.288367,-4.631509,5.107621,2.879197,-7.516946,-3.323919,9.073656,-5.595769,9.156027,7.022373,0.370427,-3.667369,0.321421,3.943460,-8.156387,-2.411395,0.985928,-5.397179,-2.294058,9.523715,0.994087,6.898293,-0.522093,-1.221916,-4.413418,6.366321,-7.238697,-2.025783,2.285101,-3.102335,4.106033,2.193528,-1.201557,2.632175,-5.217022,9.946065,8.022107,-3.158447,-7.410545,9.538901,-5.226206,-6.170602,-6.683451,-7.167042,-4.041928,-2.514965,0.131462,-5.501094,4.887669,8.630922,-7.855687,5.615155,0.259238,-1.437373,8.547394,-1.230520,-8.499378,-1.974091,5.704125,-5.902303,-5.569930,4.881151,3.578179,8.565224,-0.358900,-3.448363,7.727951,-6.893773,5.462756,-4.519811,-7.106915,-8.853165,-6.088795,6.418472,8.221073,5.352409,-5.315057,9.716272,9.780534,-0.072257,1.164420,-4.659803,7.618667,-2.615808,1.396403,8.080256,5.163759,1.732419,-3.537734,-0.363251,-4.733418,8.702944,-2.884327,-4.277961,5.835197,8.614418,6.234253,2.669996,-9.835438,9.054741,3.300290,6.662195,-3.621613,-7.832086,-5.081150,-8.495109,-8.006362,5.555328,7.104434,-0.519095,8.989716,5.311249,-8.185657,3.341112,-6.220395,-6.804942,2.780549,5.096329,-7.275815,-4.220464], dtype = "float64")#candidate|2247|(351,)|const|float64
call_2246 = relay.TupleGetItem(func_493_call(relay.reshape(const_2247.astype('float64'), [3, 13, 9])), 0)
call_2248 = relay.TupleGetItem(func_495_call(relay.reshape(const_2247.astype('float64'), [3, 13, 9])), 0)
func_1067_call = mod.get_global_var('func_1067')
func_1071_call = mutated_mod.get_global_var('func_1071')
const_2254 = relay.const(7, dtype = "uint32")#candidate|2254|()|const|uint32
var_2255 = relay.var("var_2255", dtype = "int32", shape = (45,))#candidate|2255|(45,)|var|int32
const_2256 = relay.const([[2,1,7,-8,-6,6,3,1,7,-8,-4,-9],[9,7,-2,7,4,9,-4,2,6,-10,-1,-5],[-4,7,3,2,3,-4,-6,-9,9,-4,7,-4],[2,-1,3,-5,2,5,-7,-7,-8,-7,2,-5],[-6,-3,-4,7,1,1,6,2,-8,-3,-6,5],[-3,-8,-8,5,3,6,-7,3,1,-3,-2,6],[2,4,4,-1,4,2,-4,8,9,5,9,5],[4,10,2,7,-7,-3,-2,8,6,8,8,-7],[1,6,-2,1,-8,-3,7,6,8,-5,-6,6],[2,9,-1,-1,-8,6,8,5,8,-10,-7,9],[8,6,6,3,8,-9,10,-5,7,-10,9,-2],[-3,-2,-9,-6,4,8,-5,-7,4,-6,-8,-5],[-2,-1,-10,6,7,4,8,2,3,3,2,-5],[-9,-5,1,3,4,-2,1,10,7,-4,5,8],[-6,7,2,6,-2,8,10,-9,-9,3,-1,6],[6,-5,-5,-8,-6,1,-7,-1,8,6,-3,6],[-6,-2,9,-4,-7,5,-4,3,8,-7,-10,7],[8,-8,6,4,3,8,-1,9,3,-2,-7,-6],[8,1,4,8,9,4,1,9,2,-6,-2,-3],[-10,-4,9,-1,5,-4,8,-10,7,-4,2,2],[1,-10,-4,-9,-9,1,-3,4,-4,7,-10,1],[-3,-8,8,-10,10,1,-5,10,5,10,4,6],[-4,-10,-9,4,5,8,3,-2,10,-9,-8,-6],[10,1,-2,4,1,10,6,-4,7,-6,-10,3],[4,2,3,-2,-6,9,-1,5,8,2,1,-6],[-5,-9,1,-4,6,-6,6,1,1,1,4,4],[1,-5,9,1,4,-1,-3,-9,-1,-7,-2,-8],[-10,-7,-4,6,6,-10,-3,-10,-2,-1,6,-6],[-4,5,-3,1,3,-10,10,4,9,10,8,10],[-3,-7,-2,7,5,-4,-4,-2,4,3,9,-9],[-5,2,-10,-3,7,3,2,7,-1,-8,7,-3],[-1,6,-6,-10,-5,4,7,2,9,5,-5,-1],[-3,-3,-8,-5,3,-10,-6,1,5,9,-5,7],[-6,9,5,10,-8,10,9,8,-7,-2,1,6],[-1,1,8,1,-10,-7,-2,-5,-2,-8,-10,-5],[-7,2,2,-5,5,-2,5,6,6,2,-10,8],[-2,3,3,9,-6,-9,8,-3,9,5,9,-9],[3,-10,-8,5,5,2,-5,-9,3,-9,-1,6],[-8,-3,-2,-9,-6,10,-9,6,2,-1,10,-7],[-7,7,-1,-7,-4,3,5,-3,-4,6,5,-5],[-9,-5,6,5,-2,-1,-5,-9,9,7,7,6],[10,-3,4,-5,6,-4,-3,8,-1,-8,9,9],[1,-3,-5,-10,-3,-1,2,-1,-5,-3,-6,-6],[1,-5,-3,-8,10,3,-2,-10,7,-1,-9,-7],[9,-7,-2,4,-8,6,3,6,-5,1,-3,2],[4,8,10,-10,-7,6,9,-5,-10,8,4,9],[2,-1,-10,-6,-10,10,10,-1,-6,-8,-6,1],[5,9,1,1,7,2,-6,-4,1,-4,-3,-9],[1,-1,10,5,1,-5,4,-8,9,-10,8,-1],[7,1,-2,6,-8,4,-1,5,5,-4,9,3],[4,5,7,-1,3,4,-2,1,-9,10,-4,-2],[7,1,8,4,-7,-3,4,1,-6,3,7,-10],[8,6,6,-2,-4,7,-9,3,9,-10,-10,2],[-8,-5,-8,-1,4,-8,-5,-3,7,2,-2,-10],[1,-6,5,-8,-3,-7,-8,9,8,-6,10,-4],[9,3,-1,4,6,-4,10,-3,-6,5,-1,-10],[2,3,-5,-10,-1,8,7,3,-2,2,2,6],[-8,-4,5,-7,1,-8,-7,1,-1,-9,10,10],[2,5,-1,-3,-2,-9,2,4,6,-8,-10,2],[-7,-10,4,9,5,-1,5,-5,-1,-3,-10,6]], dtype = "int32")#candidate|2256|(60, 12)|const|int32
call_2253 = relay.TupleGetItem(func_1067_call(relay.reshape(const_2254.astype('uint32'), []), relay.reshape(var_2255.astype('int32'), [15, 3]), relay.reshape(const_2256.astype('int32'), [1, 720]), ), 5)
call_2257 = relay.TupleGetItem(func_1071_call(relay.reshape(const_2254.astype('uint32'), []), relay.reshape(var_2255.astype('int32'), [15, 3]), relay.reshape(const_2256.astype('int32'), [1, 720]), ), 5)
output = relay.Tuple([uop_2242,call_2246,const_2247,call_2253,const_2254,var_2255,const_2256,])
output2 = relay.Tuple([uop_2242,call_2248,const_2247,call_2257,const_2254,var_2255,const_2256,])
func_2259 = relay.Function([var_2241,var_2255,], output)
mod['func_2259'] = func_2259
mod = relay.transform.InferType()(mod)
mutated_mod['func_2259'] = func_2259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2259_call = mutated_mod.get_global_var('func_2259')
var_2261 = relay.var("var_2261", dtype = "float64", shape = (14, 10, 11))#candidate|2261|(14, 10, 11)|var|float64
var_2262 = relay.var("var_2262", dtype = "int32", shape = (45,))#candidate|2262|(45,)|var|int32
call_2260 = func_2259_call(var_2261,var_2262,)
output = call_2260
func_2263 = relay.Function([var_2261,var_2262,], output)
mutated_mod['func_2263'] = func_2263
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2309 = relay.const([[[False,False,True,True,True,False,False,True,True,True,False,True,True,True],[False,True,False,True,False,True,False,True,False,True,False,True,False,True],[True,False,False,True,False,True,False,True,True,False,False,True,True,False],[False,True,False,False,False,False,True,True,False,False,False,False,True,False],[True,True,False,False,True,False,False,False,True,False,True,True,True,False],[False,False,False,False,True,False,False,False,True,True,True,True,True,True],[True,False,True,True,False,True,True,True,True,True,True,True,False,True],[False,True,True,False,True,True,False,True,False,False,True,True,True,False],[False,True,True,True,True,False,False,True,False,False,True,True,True,False],[False,True,True,False,False,False,False,False,False,False,True,False,False,False],[True,False,False,True,True,True,False,False,True,True,False,True,True,True]],[[True,False,True,True,False,True,False,False,True,False,False,True,True,True],[True,True,True,False,True,True,True,False,False,False,True,False,True,True],[True,False,False,False,False,True,False,False,False,False,True,False,False,True],[True,True,True,True,True,False,True,False,False,True,True,False,True,False],[False,False,True,False,False,True,False,False,False,False,True,True,False,False],[True,True,True,False,False,False,True,True,True,True,False,True,False,True],[True,True,True,False,True,False,False,True,True,False,True,True,True,False],[False,True,False,True,False,False,False,True,False,True,False,True,False,False],[False,False,True,False,True,False,False,False,False,False,True,True,False,True],[True,True,True,True,True,False,True,True,False,True,False,False,False,True],[False,True,True,False,True,True,False,True,True,False,True,False,False,True]]], dtype = "bool")#candidate|2309|(2, 11, 14)|const|bool
var_2310 = relay.var("var_2310", dtype = "bool", shape = (2, 11, 14))#candidate|2310|(2, 11, 14)|var|bool
bop_2311 = relay.logical_or(const_2309.astype('bool'), relay.reshape(var_2310.astype('bool'), relay.shape_of(const_2309))) # shape=(2, 11, 14)
output = relay.Tuple([bop_2311,])
output2 = relay.Tuple([bop_2311,])
func_2315 = relay.Function([var_2310,], output)
mod['func_2315'] = func_2315
mod = relay.transform.InferType()(mod)
var_2316 = relay.var("var_2316", dtype = "bool", shape = (2, 11, 14))#candidate|2316|(2, 11, 14)|var|bool
output = func_2315(var_2316)
func_2317 = relay.Function([var_2316], output)
mutated_mod['func_2317'] = func_2317
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3480 = relay.var("var_3480", dtype = "float64", shape = (15, 1, 3))#candidate|3480|(15, 1, 3)|var|float64
uop_3481 = relay.sinh(var_3480.astype('float64')) # shape=(15, 1, 3)
func_189_call = mod.get_global_var('func_189')
func_192_call = mutated_mod.get_global_var('func_192')
var_3489 = relay.var("var_3489", dtype = "float64", shape = (6, 42))#candidate|3489|(6, 42)|var|float64
call_3488 = func_189_call(relay.reshape(var_3489.astype('float64'), [6, 7, 6]))
call_3490 = func_189_call(relay.reshape(var_3489.astype('float64'), [6, 7, 6]))
func_765_call = mod.get_global_var('func_765')
func_769_call = mutated_mod.get_global_var('func_769')
const_3515 = relay.const([[-10],[-5],[3],[-2],[10],[-4],[1],[1],[-7],[-8],[-5],[-4],[8],[1],[-9],[-4],[9],[-1],[-1],[-9],[-3],[9],[-10],[7],[-7],[6],[-4],[1],[4],[-3],[8],[-4],[-9],[1],[2],[-4],[1],[-8],[-4],[-10],[-4],[3],[7],[-1],[-9],[-3],[-4],[-5],[-4],[4],[4],[-8],[1],[-8],[2],[8],[-4],[-5],[-6],[-9],[-1],[-3],[9],[-7],[-4],[-8],[10],[5],[-3],[8],[1],[-3],[-6],[4],[-5],[8],[-7],[-10],[-9],[-1],[9],[-3],[-5],[-10],[-3],[6],[-4],[-9],[-7],[4],[-7],[-7],[-5],[1],[5],[9],[1],[-5],[-2],[9],[-5],[7],[3],[-10],[10],[4],[6],[2],[-2],[5],[6],[3],[6],[6],[-5],[3],[-9],[7],[-8],[-4],[-1],[-6],[2],[10],[10],[3],[-1],[-3],[-6],[-7],[3],[1],[10],[-4],[7],[7],[-8],[6],[-10],[6],[-6],[-7],[-5],[6],[-9],[-2],[-2],[-4],[3],[1],[6],[9],[-2],[4],[3],[-5],[8],[6],[2],[7],[-2],[6],[4],[-6],[-8],[8],[-6],[7],[-3],[-3],[10],[-5],[-10],[4],[-2],[5],[-1],[-10],[3],[-3],[-5],[-4],[-9],[-1],[2],[9],[2],[2],[5],[-3],[-6],[3],[-1],[4],[10],[-6],[10],[8],[-3],[-10],[-2],[6],[-2],[-5],[-4],[-6],[-9],[10],[3],[-6],[1],[8],[4],[-9],[-4],[9],[-7],[-2],[-5],[6],[5],[2],[2],[-4],[5],[-7],[-3],[-10],[-2],[1],[9],[4],[7],[4],[4],[1],[-1],[-3],[-4],[7],[-8],[8],[1],[8],[8],[-9],[-1],[2],[10],[-2],[-6],[-4],[-6],[10],[-6],[1],[-1],[-7],[6],[4],[-7],[2],[8],[8],[10],[10],[4],[4],[3],[-2],[-1],[6],[2],[4],[9],[4],[3],[-3],[-10],[8],[-2],[-7],[-2],[-6],[5],[5],[9],[-9],[5],[10],[3],[9],[8],[6],[-3],[-7],[3],[-9],[4],[-2],[-3],[6],[8],[-4],[-9],[6],[-6],[10],[7],[3],[10],[-4],[3],[10],[1],[8],[-8],[-6],[10],[-9],[4],[-2],[10],[-6],[8],[6],[-9],[-1],[-6],[-2],[2],[10],[4],[8],[10],[4],[-5],[-4],[-8],[4],[2],[-6],[-2],[5],[-7],[-6],[-7],[-10],[-6],[5],[-10],[-8],[7],[1],[-6],[3],[-9],[-9],[3],[1],[-3],[2],[-5],[10],[-3],[-7],[-6],[-7],[9],[-8],[7],[3],[8],[4],[-7],[5],[4],[-9],[10],[-10],[6],[5],[2],[-3],[-1],[6],[-10],[-3],[10],[-2],[-4],[7],[2],[7],[-7],[4],[-4],[-3],[10],[9],[-7],[-1],[-3],[-7],[-4],[2],[-6],[6],[-6],[10],[1],[5],[3],[-4],[-6],[-8],[8],[-1],[-6],[6],[7],[-7],[-6],[1],[-7],[-3],[6],[-6],[8],[4],[2],[8],[-3],[-1],[-7],[-8],[4],[9],[10],[9],[-4],[-8],[2],[9],[-5],[-3],[-5],[9],[10],[-7],[-8],[5],[-2],[-1],[6],[-2],[4],[-1],[7],[6],[1],[10],[-2],[5],[10],[3],[7],[-9],[2],[-3],[-2],[1],[6],[-2],[-9],[6],[-2],[9],[-5],[8],[-4],[-3],[-10],[-2],[-4],[3],[2],[2],[5],[1],[-4],[8],[-3],[-10],[9],[4],[-2],[6],[1],[4],[-5],[-1],[-4],[-4],[-1],[-7],[-4],[-1],[-1],[-7],[-2],[6],[8],[-3],[4],[-4],[8],[-5],[-2],[-3],[6],[8],[-2],[8],[1],[-6],[6],[6],[-5],[-3],[-10],[-7],[4],[-1],[3],[-7],[-2],[10],[3],[9],[-3],[6],[6],[5],[3],[-2],[7],[-1],[1],[7],[-6],[4],[1],[-5],[-4],[-10],[-1],[8],[10],[-1],[-1],[6],[-2],[9],[9],[-9],[2],[4],[-9],[-8],[3],[-2],[6],[-4],[-3],[-1],[-9],[2],[-4],[-7],[7],[-7],[-1],[-4],[9],[-5],[-2],[9],[-5],[6],[9],[4],[-2],[1],[7],[8],[-6],[-7],[-5],[-9],[-3],[-7],[1],[2],[-10],[-6],[6],[8],[6],[4],[9],[-1],[7],[4],[-7],[6],[-9],[-6],[10],[6],[6],[10],[-2],[10],[8],[-1],[-7],[2],[10],[-6],[10],[8],[7],[-10],[2],[9],[-8],[2],[7],[-7],[-5],[4],[3],[-8],[3],[-10],[7],[4],[2],[3],[2],[3],[-2],[9],[6],[-6],[6],[-5],[-9],[2],[6],[-7],[-3],[-7],[9],[-10],[3],[-8],[-8],[-4],[-4],[-5],[4],[1],[-4],[7],[8],[3],[7],[6],[-1],[4],[10],[8],[-2],[2],[5],[-8],[9],[4],[2],[-3],[5],[2],[5],[7],[-4],[9],[6],[10],[2],[-4],[1],[-7],[1],[4],[-1],[6],[3],[8],[-5],[6],[-8],[1],[-4],[10],[5],[2],[7],[-8]], dtype = "int32")#candidate|3515|(720, 1)|const|int32
call_3514 = relay.TupleGetItem(func_765_call(relay.reshape(var_3480.astype('int32'), [15, 3, 1]), relay.reshape(const_3515.astype('int32'), [15, 3, 16]), ), 0)
call_3516 = relay.TupleGetItem(func_769_call(relay.reshape(var_3480.astype('int32'), [15, 3, 1]), relay.reshape(const_3515.astype('int32'), [15, 3, 16]), ), 0)
output = relay.Tuple([uop_3481,call_3488,var_3489,call_3514,const_3515,])
output2 = relay.Tuple([uop_3481,call_3490,var_3489,call_3516,const_3515,])
func_3518 = relay.Function([var_3480,var_3489,], output)
mod['func_3518'] = func_3518
mod = relay.transform.InferType()(mod)
mutated_mod['func_3518'] = func_3518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3518_call = mutated_mod.get_global_var('func_3518')
var_3520 = relay.var("var_3520", dtype = "float64", shape = (15, 1, 3))#candidate|3520|(15, 1, 3)|var|float64
var_3521 = relay.var("var_3521", dtype = "float64", shape = (6, 42))#candidate|3521|(6, 42)|var|float64
call_3519 = func_3518_call(var_3520,var_3521,)
output = call_3519
func_3522 = relay.Function([var_3520,var_3521,], output)
mutated_mod['func_3522'] = func_3522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3720 = relay.var("var_3720", dtype = "float64", shape = (4, 6, 5))#candidate|3720|(4, 6, 5)|var|float64
uop_3721 = relay.rsqrt(var_3720.astype('float64')) # shape=(4, 6, 5)
output = relay.Tuple([uop_3721,])
output2 = relay.Tuple([uop_3721,])
func_3724 = relay.Function([var_3720,], output)
mod['func_3724'] = func_3724
mod = relay.transform.InferType()(mod)
mutated_mod['func_3724'] = func_3724
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3725 = relay.var("var_3725", dtype = "float64", shape = (4, 6, 5))#candidate|3725|(4, 6, 5)|var|float64
func_3724_call = mutated_mod.get_global_var('func_3724')
call_3726 = func_3724_call(var_3725)
output = call_3726
func_3727 = relay.Function([var_3725], output)
mutated_mod['func_3727'] = func_3727
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3798 = relay.var("var_3798", dtype = "float64", shape = (9, 13, 1))#candidate|3798|(9, 13, 1)|var|float64
uop_3799 = relay.sinh(var_3798.astype('float64')) # shape=(9, 13, 1)
uop_3804 = relay.sqrt(uop_3799.astype('float64')) # shape=(9, 13, 1)
bop_3813 = relay.less(uop_3804.astype('bool'), relay.reshape(uop_3799.astype('bool'), relay.shape_of(uop_3804))) # shape=(9, 13, 1)
output = bop_3813
output2 = bop_3813
func_3820 = relay.Function([var_3798,], output)
mod['func_3820'] = func_3820
mod = relay.transform.InferType()(mod)
var_3821 = relay.var("var_3821", dtype = "float64", shape = (9, 13, 1))#candidate|3821|(9, 13, 1)|var|float64
output = func_3820(var_3821)
func_3822 = relay.Function([var_3821], output)
mutated_mod['func_3822'] = func_3822
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3835 = relay.var("var_3835", dtype = "float32", shape = (10, 13, 9))#candidate|3835|(10, 13, 9)|var|float32
var_3836 = relay.var("var_3836", dtype = "float32", shape = (10, 13, 9))#candidate|3836|(10, 13, 9)|var|float32
bop_3837 = relay.maximum(var_3835.astype('float32'), relay.reshape(var_3836.astype('float32'), relay.shape_of(var_3835))) # shape=(10, 13, 9)
output = bop_3837
output2 = bop_3837
func_3841 = relay.Function([var_3835,var_3836,], output)
mod['func_3841'] = func_3841
mod = relay.transform.InferType()(mod)
mutated_mod['func_3841'] = func_3841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mutated_mod.get_global_var('func_3841')
var_3843 = relay.var("var_3843", dtype = "float32", shape = (10, 13, 9))#candidate|3843|(10, 13, 9)|var|float32
var_3844 = relay.var("var_3844", dtype = "float32", shape = (10, 13, 9))#candidate|3844|(10, 13, 9)|var|float32
call_3842 = func_3841_call(var_3843,var_3844,)
output = call_3842
func_3845 = relay.Function([var_3843,var_3844,], output)
mutated_mod['func_3845'] = func_3845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4109 = relay.var("var_4109", dtype = "float32", shape = (15, 13, 8))#candidate|4109|(15, 13, 8)|var|float32
var_4110 = relay.var("var_4110", dtype = "float32", shape = (15, 13, 8))#candidate|4110|(15, 13, 8)|var|float32
bop_4111 = relay.not_equal(var_4109.astype('bool'), relay.reshape(var_4110.astype('bool'), relay.shape_of(var_4109))) # shape=(15, 13, 8)
output = bop_4111
output2 = bop_4111
func_4114 = relay.Function([var_4109,var_4110,], output)
mod['func_4114'] = func_4114
mod = relay.transform.InferType()(mod)
var_4115 = relay.var("var_4115", dtype = "float32", shape = (15, 13, 8))#candidate|4115|(15, 13, 8)|var|float32
var_4116 = relay.var("var_4116", dtype = "float32", shape = (15, 13, 8))#candidate|4116|(15, 13, 8)|var|float32
output = func_4114(var_4115,var_4116,)
func_4117 = relay.Function([var_4115,var_4116,], output)
mutated_mod['func_4117'] = func_4117
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4290 = relay.var("var_4290", dtype = "int8", shape = (14, 4, 15))#candidate|4290|(14, 4, 15)|var|int8
var_4291 = relay.var("var_4291", dtype = "int8", shape = (14, 4, 15))#candidate|4291|(14, 4, 15)|var|int8
bop_4292 = relay.multiply(var_4290.astype('int8'), relay.reshape(var_4291.astype('int8'), relay.shape_of(var_4290))) # shape=(14, 4, 15)
output = bop_4292
output2 = bop_4292
func_4301 = relay.Function([var_4290,var_4291,], output)
mod['func_4301'] = func_4301
mod = relay.transform.InferType()(mod)
var_4302 = relay.var("var_4302", dtype = "int8", shape = (14, 4, 15))#candidate|4302|(14, 4, 15)|var|int8
var_4303 = relay.var("var_4303", dtype = "int8", shape = (14, 4, 15))#candidate|4303|(14, 4, 15)|var|int8
output = func_4301(var_4302,var_4303,)
func_4304 = relay.Function([var_4302,var_4303,], output)
mutated_mod['func_4304'] = func_4304
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4331 = relay.var("var_4331", dtype = "float32", shape = (12, 9, 16))#candidate|4331|(12, 9, 16)|var|float32
uop_4332 = relay.acosh(var_4331.astype('float32')) # shape=(12, 9, 16)
output = uop_4332
output2 = uop_4332
func_4344 = relay.Function([var_4331,], output)
mod['func_4344'] = func_4344
mod = relay.transform.InferType()(mod)
mutated_mod['func_4344'] = func_4344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4345 = relay.var("var_4345", dtype = "float32", shape = (12, 9, 16))#candidate|4345|(12, 9, 16)|var|float32
func_4344_call = mutated_mod.get_global_var('func_4344')
call_4346 = func_4344_call(var_4345)
output = call_4346
func_4347 = relay.Function([var_4345], output)
mutated_mod['func_4347'] = func_4347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4503 = relay.var("var_4503", dtype = "float32", shape = (9, 2, 5))#candidate|4503|(9, 2, 5)|var|float32
uop_4504 = relay.log10(var_4503.astype('float32')) # shape=(9, 2, 5)
output = uop_4504
output2 = uop_4504
func_4508 = relay.Function([var_4503,], output)
mod['func_4508'] = func_4508
mod = relay.transform.InferType()(mod)
mutated_mod['func_4508'] = func_4508
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4509 = relay.var("var_4509", dtype = "float32", shape = (9, 2, 5))#candidate|4509|(9, 2, 5)|var|float32
func_4508_call = mutated_mod.get_global_var('func_4508')
call_4510 = func_4508_call(var_4509)
output = call_4510
func_4511 = relay.Function([var_4509], output)
mutated_mod['func_4511'] = func_4511
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4562 = relay.var("var_4562", dtype = "bool", shape = (10, 6, 14))#candidate|4562|(10, 6, 14)|var|bool
var_4563 = relay.var("var_4563", dtype = "bool", shape = (10, 6, 14))#candidate|4563|(10, 6, 14)|var|bool
bop_4564 = relay.logical_and(var_4562.astype('bool'), relay.reshape(var_4563.astype('bool'), relay.shape_of(var_4562))) # shape=(10, 6, 14)
func_1067_call = mod.get_global_var('func_1067')
func_1071_call = mutated_mod.get_global_var('func_1071')
var_4570 = relay.var("var_4570", dtype = "uint32", shape = ())#candidate|4570|()|var|uint32
const_4571 = relay.const([6,-9,-10,6,7,-2,-8,3,-3,-7,2,10,5,3,-8,-3,8,5,-8,5,3,-6,-10,4,-5,-2,1,6,4,5,4,6,1,1,2,-7,-5,5,-1,-9,-10,-3,7,-6,9], dtype = "int32")#candidate|4571|(45,)|const|int32
var_4572 = relay.var("var_4572", dtype = "int32", shape = (720,))#candidate|4572|(720,)|var|int32
call_4569 = relay.TupleGetItem(func_1067_call(relay.reshape(var_4570.astype('uint32'), []), relay.reshape(const_4571.astype('int32'), [15, 3]), relay.reshape(var_4572.astype('int32'), [1, 720]), ), 3)
call_4573 = relay.TupleGetItem(func_1071_call(relay.reshape(var_4570.astype('uint32'), []), relay.reshape(const_4571.astype('int32'), [15, 3]), relay.reshape(var_4572.astype('int32'), [1, 720]), ), 3)
output = relay.Tuple([bop_4564,call_4569,var_4570,const_4571,var_4572,])
output2 = relay.Tuple([bop_4564,call_4573,var_4570,const_4571,var_4572,])
func_4580 = relay.Function([var_4562,var_4563,var_4570,var_4572,], output)
mod['func_4580'] = func_4580
mod = relay.transform.InferType()(mod)
mutated_mod['func_4580'] = func_4580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4580_call = mutated_mod.get_global_var('func_4580')
var_4582 = relay.var("var_4582", dtype = "bool", shape = (10, 6, 14))#candidate|4582|(10, 6, 14)|var|bool
var_4583 = relay.var("var_4583", dtype = "bool", shape = (10, 6, 14))#candidate|4583|(10, 6, 14)|var|bool
var_4584 = relay.var("var_4584", dtype = "uint32", shape = ())#candidate|4584|()|var|uint32
var_4585 = relay.var("var_4585", dtype = "int32", shape = (720,))#candidate|4585|(720,)|var|int32
call_4581 = func_4580_call(var_4582,var_4583,var_4584,var_4585,)
output = call_4581
func_4586 = relay.Function([var_4582,var_4583,var_4584,var_4585,], output)
mutated_mod['func_4586'] = func_4586
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4629 = relay.const([[[4.268521,6.459923,9.159858,-4.676380]],[[0.863127,5.933106,-1.562538,-8.698414]],[[6.321054,-3.813908,1.581697,-4.561375]],[[4.747509,3.223499,-4.448756,-3.559183]],[[4.183242,-3.792396,0.613282,6.268902]],[[-5.942334,-6.766932,4.376076,-3.209005]],[[1.753192,-0.519397,4.558346,-5.294195]],[[1.142524,-6.829197,2.320115,7.703635]],[[-2.619531,9.579524,-9.806682,8.598269]],[[3.655957,-8.611241,-0.957862,5.868120]]], dtype = "float32")#candidate|4629|(10, 1, 4)|const|float32
uop_4630 = relay.erf(const_4629.astype('float32')) # shape=(10, 1, 4)
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
var_4633 = relay.var("var_4633", dtype = "float32", shape = (288,))#candidate|4633|(288,)|var|float32
call_4632 = relay.TupleGetItem(func_1645_call(relay.reshape(var_4633.astype('float32'), [8, 6, 6])), 0)
call_4634 = relay.TupleGetItem(func_1647_call(relay.reshape(var_4633.astype('float32'), [8, 6, 6])), 0)
uop_4642 = relay.asin(uop_4630.astype('float32')) # shape=(10, 1, 4)
output = relay.Tuple([call_4632,var_4633,uop_4642,])
output2 = relay.Tuple([call_4634,var_4633,uop_4642,])
func_4647 = relay.Function([var_4633,], output)
mod['func_4647'] = func_4647
mod = relay.transform.InferType()(mod)
mutated_mod['func_4647'] = func_4647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4648 = relay.var("var_4648", dtype = "float32", shape = (288,))#candidate|4648|(288,)|var|float32
func_4647_call = mutated_mod.get_global_var('func_4647')
call_4649 = func_4647_call(var_4648)
output = call_4649
func_4650 = relay.Function([var_4648], output)
mutated_mod['func_4650'] = func_4650
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4778 = relay.var("var_4778", dtype = "float64", shape = (5, 6, 11))#candidate|4778|(5, 6, 11)|var|float64
uop_4779 = relay.acosh(var_4778.astype('float64')) # shape=(5, 6, 11)
output = relay.Tuple([uop_4779,])
output2 = relay.Tuple([uop_4779,])
func_4782 = relay.Function([var_4778,], output)
mod['func_4782'] = func_4782
mod = relay.transform.InferType()(mod)
mutated_mod['func_4782'] = func_4782
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4783 = relay.var("var_4783", dtype = "float64", shape = (5, 6, 11))#candidate|4783|(5, 6, 11)|var|float64
func_4782_call = mutated_mod.get_global_var('func_4782')
call_4784 = func_4782_call(var_4783)
output = call_4784
func_4785 = relay.Function([var_4783], output)
mutated_mod['func_4785'] = func_4785
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4830 = relay.var("var_4830", dtype = "float32", shape = (16, 11, 8))#candidate|4830|(16, 11, 8)|var|float32
uop_4831 = relay.sin(var_4830.astype('float32')) # shape=(16, 11, 8)
bop_4848 = relay.equal(uop_4831.astype('bool'), relay.reshape(var_4830.astype('bool'), relay.shape_of(uop_4831))) # shape=(16, 11, 8)
output = relay.Tuple([bop_4848,])
output2 = relay.Tuple([bop_4848,])
func_4854 = relay.Function([var_4830,], output)
mod['func_4854'] = func_4854
mod = relay.transform.InferType()(mod)
var_4855 = relay.var("var_4855", dtype = "float32", shape = (16, 11, 8))#candidate|4855|(16, 11, 8)|var|float32
output = func_4854(var_4855)
func_4856 = relay.Function([var_4855], output)
mutated_mod['func_4856'] = func_4856
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4929 = relay.var("var_4929", dtype = "int32", shape = (7, 5, 4))#candidate|4929|(7, 5, 4)|var|int32
var_4930 = relay.var("var_4930", dtype = "int32", shape = (7, 5, 4))#candidate|4930|(7, 5, 4)|var|int32
bop_4931 = relay.bitwise_and(var_4929.astype('int32'), relay.reshape(var_4930.astype('int32'), relay.shape_of(var_4929))) # shape=(7, 5, 4)
func_1326_call = mod.get_global_var('func_1326')
func_1331_call = mutated_mod.get_global_var('func_1331')
const_4957 = relay.const([4,7,-5,-6,1,-9,4,-5,-7,-5,4,5,-8,4,-9,-3,8,10,-6,8,-2,10,-1,9,1,-6,3,-7,-4,-1], dtype = "int8")#candidate|4957|(30,)|const|int8
const_4958 = relay.const([5,-8,9,-3,3,-3,9,9,1,3,-7,1,-9,4,-9,6,4,-10,9,-9,-7,5,-4,6,-6,-3,7,-8,10,-6,3,-2,7,-10,-5,9,9,8,8,-9,2,9,7,-6,9,7,-6,-1,-2,1,9,-7,-6,4,-10,-10,6,-4,5,1,1,-8,-6,4,-9,5,-7,-6,1,6,-4,6,6,-2,-9,6,10,9,-2,-6,-9,9,-7,-8,-7,-10,3,-1,-3,9,-6,3,1,-4,6,6,-4,3,1,8,10,-9,3,1,2,9,6,-4,6,2,1,-9,-2,-4,8,1,9,10,-7,-9,2,7,-10,7,-2,-9,-8,5,3,-2,-3,-8,10,-6,10,6,-5,-9,7,-2,6,9,10,-3,7,-3,-6,-5,-10,5,-8,1,5,10,-8,10,-4,8,-7,8,-6,-4,-3,-3,10,2,-1,1,2,10,4,2,1,3,-2,-9,3,5,2,8,5,10,-2,2,4,2,1,7,7,-7,-2,-1,2,10,3,-6,9,-4,10,-5,-7,-4,4,-10,1,1,-6,10,-8,1,-10,10,6,-2,-2,-1,-7,-7,6,1,-7,-3,-5,-10,-3,2,10,5,-8,2,-6,-10,8,2,-7,1,5,4,7,3,-6,5,9,-4,7,-8,1,-3,-5,4,10,-3,-9,7,2,-8,-4,-6,1,9,-8,-8,-5,7,-8,10,-6,4,-10,3,-10,-2,-2,-7,-6,10,5,2,-10,8,2,5,2,5,-10,-6,7,-5,4,-3,-8,6,-2,-5,-9,-10,2,-1,7,-8,2,7,2,10,4,8,-8,-7,-7,1,-7,9,10,-4,3,6,-4,7,-5,-3,2,-2,8,-9,4,-10,-4,-10,6,1,-6,7,10,-7,10,-7,-1,-3,10,5,5,-7,-4,-3,-3,-2,-1,-8,-2,9,4,4,-5,-8,10,-3,9,-4,-8,-5,-3,-7,-5,-7,-1,7,-2,-5,-2,4,-4,-9,-6,6,-1,-5,8,-1,9,8,-6,-7,9,-7,-3,-3,7,-10,4,-7,6,9,3,7,-10,2,-3,6,9,3,2,10,5,-4,-9,3,-2,9,4,9,-2,-2,10,-7,9,4,5,3,-6,-10,-6,10,7,7,-7,7,-7,-8,-5,7,-4,-5,5,-8,3,-5,3,10,5,3,-4,-5,9,8,-8,-8,-6,-3,3,1,1,8,9,4,-7,-10,-9,-2,10,-4,6,3,9,2,-7,-9,-9,2,6,6,5,4,2,-4,-9,1,2,-9,9,-2], dtype = "int8")#candidate|4958|(480,)|const|int8
var_4959 = relay.var("var_4959", dtype = "float32", shape = (1755,))#candidate|4959|(1755,)|var|float32
call_4956 = relay.TupleGetItem(func_1326_call(relay.reshape(const_4957.astype('int8'), [1, 5, 6]), relay.reshape(const_4958.astype('int8'), [16, 5, 6]), relay.reshape(var_4959.astype('float32'), [1755,]), ), 2)
call_4960 = relay.TupleGetItem(func_1331_call(relay.reshape(const_4957.astype('int8'), [1, 5, 6]), relay.reshape(const_4958.astype('int8'), [16, 5, 6]), relay.reshape(var_4959.astype('float32'), [1755,]), ), 2)
output = relay.Tuple([bop_4931,call_4956,const_4957,const_4958,var_4959,])
output2 = relay.Tuple([bop_4931,call_4960,const_4957,const_4958,var_4959,])
func_4966 = relay.Function([var_4929,var_4930,var_4959,], output)
mod['func_4966'] = func_4966
mod = relay.transform.InferType()(mod)
mutated_mod['func_4966'] = func_4966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4966_call = mutated_mod.get_global_var('func_4966')
var_4968 = relay.var("var_4968", dtype = "int32", shape = (7, 5, 4))#candidate|4968|(7, 5, 4)|var|int32
var_4969 = relay.var("var_4969", dtype = "int32", shape = (7, 5, 4))#candidate|4969|(7, 5, 4)|var|int32
var_4970 = relay.var("var_4970", dtype = "float32", shape = (1755,))#candidate|4970|(1755,)|var|float32
call_4967 = func_4966_call(var_4968,var_4969,var_4970,)
output = call_4967
func_4971 = relay.Function([var_4968,var_4969,var_4970,], output)
mutated_mod['func_4971'] = func_4971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5044 = relay.var("var_5044", dtype = "float64", shape = (10, 8, 10))#candidate|5044|(10, 8, 10)|var|float64
uop_5045 = relay.erf(var_5044.astype('float64')) # shape=(10, 8, 10)
func_4344_call = mod.get_global_var('func_4344')
func_4347_call = mutated_mod.get_global_var('func_4347')
var_5051 = relay.var("var_5051", dtype = "float32", shape = (1728,))#candidate|5051|(1728,)|var|float32
call_5050 = func_4344_call(relay.reshape(var_5051.astype('float32'), [12, 9, 16]))
call_5052 = func_4344_call(relay.reshape(var_5051.astype('float32'), [12, 9, 16]))
output = relay.Tuple([uop_5045,call_5050,var_5051,])
output2 = relay.Tuple([uop_5045,call_5052,var_5051,])
func_5056 = relay.Function([var_5044,var_5051,], output)
mod['func_5056'] = func_5056
mod = relay.transform.InferType()(mod)
var_5057 = relay.var("var_5057", dtype = "float64", shape = (10, 8, 10))#candidate|5057|(10, 8, 10)|var|float64
var_5058 = relay.var("var_5058", dtype = "float32", shape = (1728,))#candidate|5058|(1728,)|var|float32
output = func_5056(var_5057,var_5058,)
func_5059 = relay.Function([var_5057,var_5058,], output)
mutated_mod['func_5059'] = func_5059
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5478 = relay.var("var_5478", dtype = "int32", shape = (10, 9, 16))#candidate|5478|(10, 9, 16)|var|int32
var_5479 = relay.var("var_5479", dtype = "int32", shape = (10, 9, 16))#candidate|5479|(10, 9, 16)|var|int32
bop_5480 = relay.logical_xor(var_5478.astype('int32'), relay.reshape(var_5479.astype('int32'), relay.shape_of(var_5478))) # shape=(10, 9, 16)
func_5056_call = mod.get_global_var('func_5056')
func_5059_call = mutated_mod.get_global_var('func_5059')
const_5484 = relay.const([8.723649,-3.954928,7.197278,-6.438095,1.939167,-6.732902,3.137542,-9.083782,-2.220528,-7.024744,6.436121,-7.631067,-5.044430,8.526256,9.423312,-2.494961,1.204773,8.318766,-6.200795,-0.465783,-7.431707,-1.119771,3.233268,5.238212,-4.597826,3.566787,3.886330,-8.681487,-8.328035,7.560648,-2.929501,-2.719540,-6.081855,7.392360,-2.757107,-0.151424,-7.097895,-7.367949,6.506306,2.212403,4.101992,-1.051878,1.599257,2.272057,-0.454887,7.273760,-4.446522,-9.698990,2.123759,8.626983,4.740381,-5.655319,-3.489971,-2.337722,5.014704,4.903157,-9.023921,8.305548,8.583276,1.653774,1.466954,-1.803606,7.070474,-9.382122,-0.287605,-2.025650,-7.340413,2.448428,0.651777,-0.758327,-6.361206,-7.214813,3.758313,-6.458753,-8.955369,-1.968326,-7.155754,9.387874,7.004920,-5.526313,2.417149,-1.670972,8.493330,-7.790328,2.027151,1.167103,6.220900,-8.116687,7.900291,0.481704,-1.711137,9.433817,-0.343249,-4.683424,0.572133,-9.859126,9.509568,-5.353361,-8.948662,-6.914829,7.746089,5.092813,6.309345,-8.099891,-9.635389,-5.539676,6.046816,0.225467,-2.620961,-9.992199,-4.715101,-2.807266,8.470035,1.873182,2.241662,2.380798,3.791384,9.308489,-2.211683,-2.389798,5.564981,4.106444,-8.959936,7.684677,5.054384,-0.632759,-9.222305,9.898390,5.073711,0.012998,-4.925250,-6.090734,-3.082656,-4.933449,4.634211,6.696572,7.485032,6.664623,-4.359579,-8.600456,-3.037248,2.087447,2.182310,-8.790150,6.457929,-3.037631,-8.939305,-5.887472,-3.183171,4.025908,1.142108,2.378610,-6.422576,-5.013730,7.702774,-1.123489,-9.955118,-9.930955,-8.676385,-8.634988,-2.669370,-1.811799,2.722633,3.152551,8.562722,5.009087,-8.179903,-5.364818,-6.078601,5.651041,3.512346,3.958281,2.284021,-9.839661,2.523415,-0.808939,8.858378,-7.373902,0.253249,-8.095632,1.579767,0.612767,-7.961382,-1.501903,-8.866795,-6.940835,1.742513,6.893385,1.773287,-5.184740,9.382278,2.752117,2.391911,9.235065,6.761118,-9.482208,-7.127506,-5.730964,1.150920,0.576413,-7.185301,9.399820,8.876043,0.880164,-3.182304,3.167606,-6.858156,-1.314664,4.979805,-2.367167,-4.485050,7.976477,-9.762368,7.982583,-1.802905,7.707632,1.052209,-6.399678,-5.456790,7.540389,3.717067,-8.966579,8.022326,-2.613606,-3.008609,-7.930665,7.694334,4.329061,1.784748,9.624062,3.094248,1.388970,6.544614,-0.100018,0.075301,9.642052,-1.511203,-0.563706,-2.674572,-2.662175,8.794170,5.536923,-6.509135,-8.619714,-1.020770,6.627733,-8.242397,-8.629533,-6.114384,0.106777,-7.244930,1.174929,-6.667372,8.996030,-9.669069,-6.330289,-9.254432,-3.621015,-7.170006,-9.277449,-8.260946,7.123064,-9.177446,-5.982464,-0.587836,-4.775895,-8.821976,0.006872,9.226883,-0.590283,6.762804,5.679965,-3.857005,-4.236353,-8.915199,5.134263,7.208831,-5.070010,-2.396128,-8.422616,-9.112604,-0.096806,-7.064301,-9.093429,-1.671500,4.333598,2.769297,3.147911,-2.096025,-7.222224,-0.556845,5.768604,-7.786910,-4.835755,5.761779,2.144503,0.741957,-0.978554,-4.843169,-2.301593,0.972552,-4.201887,-8.180094,7.302118,4.138131,-1.288504,9.927020,0.152145,4.625651,1.637573,3.786144,-2.844434,-2.058444,-2.740586,8.262382,2.886515,0.206086,6.382721,4.021714,-7.300346,6.890993,-5.539830,6.707836,-7.149847,5.342907,7.989506,3.688784,-8.984162,-0.162732,-7.690865,1.442730,2.712487,3.420869,-2.585132,9.277131,5.549278,6.474667,2.316071,-6.009828,5.191606,3.120361,-0.744730,2.529159,-2.925489,5.154461,6.449850,-8.717267,9.387830,-7.466071,-2.290200,3.592015,-1.334130,-9.381383,3.013924,4.203916,-5.848235,9.449907,1.304147,2.886399,-3.700099,-8.532390,3.152769,-0.705765,-4.731678,2.492359,-9.337250,0.350163,9.431759,4.133305,-4.995474,-1.431794,8.405498,7.463670,-9.418974,5.765613,9.817926,-1.330556,-6.733962,-7.586175,9.881471,-4.488998,-5.604222,-0.747185,5.765154,-4.889437,6.617094,-0.563826,-6.805170,9.182656,7.063112,9.642089,1.068400,6.221704,8.993372,-2.620841,3.143866,-8.849986,-5.459559,-0.152953,-5.413236,5.167606,9.329114,2.774387,2.477946,-2.036704,5.201825,-8.266651,3.537851,-9.383398,4.964093,-5.195354,8.958830,-4.270743,9.823102,6.896657,3.215732,4.520242,7.317764,-6.241755,-1.952648,6.278542,-1.531752,-6.149933,4.742078,-7.406812,8.132434,-0.240867,-8.823754,4.767651,6.963745,7.779526,8.509509,3.720494,8.369368,-8.353189,-2.514254,1.752613,9.118428,-8.132989,3.459353,3.143043,8.855061,1.726754,-7.543786,-3.978346,-7.613759,-6.497167,-2.944265,-6.963720,3.137220,0.886443,-6.983707,-6.530593,-4.604979,-0.366985,-5.579412,3.541156,3.123973,4.050305,9.818866,6.627257,2.042156,6.850181,1.975667,-9.681237,-3.966392,-4.140867,-5.762180,-5.877135,-8.700259,-6.997061,-9.817461,-7.785216,3.453624,0.143821,6.025859,-1.424212,-8.068321,6.371089,5.948245,-8.216155,0.598717,-6.600697,-2.943642,8.462303,0.104927,2.073532,7.378435,-3.790067,1.866645,9.129765,-2.914294,9.813473,5.506755,7.895123,-3.601717,0.248824,-7.501299,-5.315379,-0.214329,6.299092,6.566573,-5.619467,0.633680,0.991929,-3.565687,4.613077,-2.958773,-6.525464,0.543788,-2.423974,9.805244,-2.118426,7.090146,-5.058938,-6.735299,-3.176648,-0.319308,-4.425539,9.566942,-9.186966,-5.890237,-8.246481,3.020274,-6.199939,-7.236038,-6.394572,-7.261606,-6.929765,4.490237,-5.152627,-4.918646,-0.022448,4.052652,-8.606982,-0.636418,-2.061585,4.339058,-9.881777,8.468953,0.179080,7.410017,-7.553679,-1.582864,-9.149400,4.245455,4.608171,0.258418,6.201222,-1.504890,7.527812,-7.821290,8.724590,-1.716748,-6.586035,3.893854,-8.424584,-8.208120,-7.651461,7.073893,-3.892763,2.626425,-1.585343,2.514709,2.662293,-0.707922,9.970202,5.749799,-2.812343,-8.697289,9.118139,-2.932515,-0.038075,-0.964480,-0.087349,8.411891,0.956953,-4.537194,6.026183,5.552442,-3.599545,4.726823,-9.892798,-0.016432,4.628860,-5.862319,-7.132518,-0.737968,2.607107,-1.275496,-0.078887,-9.783805,-8.631613,5.273023,7.356363,7.010577,-1.901186,0.396607,1.676151,6.192895,-6.324597,6.572300,1.711350,8.242217,1.500898,-2.564105,-0.949397,1.797363,0.321482,-4.106647,6.113980,-4.616377,7.239409,-0.042636,-3.218247,8.505034,7.983662,4.072255,-5.793667,5.012790,-8.169641,9.867287,2.373650,-4.638801,0.993896,5.415942,-7.024569,3.383460,2.852538,-8.518629,1.095028,-0.107170,-7.813272,0.121363,-1.233859,-4.441370,-9.400988,5.680882,-5.302337,4.550438,7.072896,-9.638011,-8.103010,7.574482,-7.709147,1.622413,4.480214,-0.761736,-3.882073,-7.084464,8.894638,3.300355,-3.659415,3.057477,-6.311819,-9.474311,2.266522,8.668253,-3.961078,4.843063,-0.475722,4.220312,-8.661784,-9.570927,9.647888,4.200324,5.955416,4.285695,-6.522442,1.478196,7.101144,-8.271337,-3.110369,-4.549208,-9.339160,4.342107,3.066307,-1.079523,8.660932,-5.295474,6.322502,1.461322,-7.341303,-0.534365,5.263187,-4.308804,4.552776,6.720283,-1.458995,1.014271,3.952673,-4.617056,2.651544,-5.121066,1.475876,1.907818,-6.171192,5.937225,4.256041,3.468889,1.157894,0.785591,-6.838693,0.561190,1.004435,6.711188,9.967375,2.501651,-6.357566,2.189264,-4.148081,-0.235694,5.898475,0.651922,7.022617,1.358083,-9.008240,-4.848363,6.461032,-4.762834,-0.854646,9.513147,8.197657,-2.320400,-5.367767,7.519305,-0.563142,-5.119568,8.569880,7.872727,-3.313489,-9.810508,4.163220,-0.642587,-0.457056,5.826795,-2.139616,-2.418524,7.835767,-0.974440,9.085426,-9.451794,6.456547,3.392315,6.828817,-8.763352,-3.079877,-9.257399,8.370369,-0.305559,0.763729,-6.553784,1.301863,8.968052,7.153432,-6.702181,9.137817,-3.495417,5.833706,-5.911356,-2.840723,2.317782,8.037938,7.381864,-4.736709,-6.952885,4.278872,0.692569,7.985993,-8.475340,-8.537813,4.755681,9.746518,1.656893,-7.656913,3.994965,-3.799999,1.939877,2.004897,-0.491971,-2.691391,4.496972,2.847683,-8.433657,-8.264802,1.830888,-2.031909,-2.045375,-1.919527,-0.953864,3.091878,-4.789136,-6.335568,5.935966,-4.083842,5.308457,-8.214176,-5.998637,-4.723119,0.922154], dtype = "float64")#candidate|5484|(800,)|const|float64
const_5485 = relay.const([8.564811,-6.880937,7.473261,-8.487302,-8.623822,-9.307191,-9.260649,-1.649800,1.455318,-5.253951,0.947859,8.800929,6.955051,-3.018199,2.875019,-2.390621,4.978428,7.083052,-0.973488,-5.001221,-6.465895,1.776537,-9.040802,7.190052,-7.808971,-4.658837,-7.131004,1.592437,-9.817275,4.421361,0.482936,-2.300880,-1.316863,-7.633285,-3.351669,5.789782,4.066341,0.964220,5.769933,-1.779421,-8.024585,5.269862,-8.978610,2.698648,-7.515151,8.496811,-8.701609,-5.002040,2.698286,6.833455,3.367380,-8.200363,-5.406550,3.763849,-3.507688,0.531279,-9.043288,1.623369,9.001787,5.840367,7.221114,1.859744,-9.377201,-2.176565,-1.481535,7.781566,9.268330,9.421824,-8.405671,4.244301,-5.512959,7.314227,1.544652,4.428698,8.265584,-7.441910,0.946168,5.063557,4.280420,9.687970,9.844513,-8.687484,-9.320168,-0.274113,-1.453876,9.447180,-0.749776,3.387103,-2.237139,-3.473356,1.774772,-0.852574,8.834330,-4.715650,-8.567873,-2.491079,2.230208,-7.880009,-6.780466,-4.982660,-0.200943,0.203072,-3.161096,-7.539086,-6.154088,5.798994,7.689249,-4.696867,5.901885,9.592709,5.143203,5.152299,-8.293985,-8.323746,5.819837,2.240319,5.780495,-2.053442,2.530513,-4.870539,-1.185123,1.676113,9.925656,-9.476081,5.404924,-8.862937,9.721825,2.213413,7.036446,2.349510,-1.084824,-8.417412,8.340468,7.664091,8.920512,-9.131982,3.311953,0.445177,-0.989156,0.157740,-4.405597,-3.261937,-3.037934,5.216537,6.049690,-1.833678,-2.867214,8.493939,9.758994,-1.008732,-0.397238,-7.798267,3.703355,5.645981,9.693505,5.887260,-9.161691,-1.259388,2.939212,4.404440,-6.175848,-5.667395,-6.103369,-5.741307,-5.262789,2.982965,-1.774975,1.394845,5.718983,5.687877,2.748127,-8.076048,-9.053455,-4.669104,6.562151,-1.340925,2.254272,-1.892668,2.152189,-4.132755,0.050401,-2.466291,3.075083,7.580636,-6.525878,-0.904479,5.239037,-0.124329,2.895158,4.765074,-2.457770,-3.527435,-3.870738,8.900314,7.683234,-5.814422,9.768674,-1.025367,-0.555941,-1.263198,-6.443781,-5.764280,9.593247,7.638328,-1.199348,1.437175,9.198947,-6.797148,-1.366197,1.154213,3.564743,8.102625,-3.247359,-0.984706,7.314924,-3.054644,1.038817,-7.262490,8.395054,3.414674,-5.737413,-5.266303,-5.888101,-9.192755,-0.742340,-7.835051,3.054825,4.680313,-6.709856,-0.238794,-9.555658,9.949613,6.758786,-0.375257,-0.566223,-6.676479,4.664337,-7.151109,-7.975333,-0.842448,-5.640714,-8.972238,-8.070264,4.390092,5.409219,5.371468,-2.413220,0.572327,-7.610960,-3.600492,9.842601,6.700880,7.967176,-8.565509,-6.141316,8.441457,-8.848247,-4.593305,9.645778,3.236327,8.999124,-6.077644,9.614271,-4.364980,6.306539,-6.827122,4.274234,0.602435,8.093373,-9.630310,8.880016,-7.852239,-3.541365,-2.704114,5.262515,-4.218879,-3.008704,-7.245335,8.808903,9.849443,-8.498667,1.612580,-8.622062,-5.062140,8.291568,1.576382,-2.876514,-2.708013,7.141397,-1.191550,-2.045981,0.225793,5.925510,-0.272822,-5.879849,-4.441943,-7.185668,7.239716,-8.674952,-4.088094,-5.253330,-3.647896,-3.600556,4.311272,-1.075064,-1.787662,9.340325,9.239024,5.319389,7.327650,-9.840765,-1.720778,3.276775,0.922655,-0.464657,7.849752,6.339208,4.859827,-4.672845,2.098323,3.418704,7.341657,-7.067251,5.616961,3.702677,9.125390,-9.627858,-2.323948,9.204902,-3.134183,3.071726,1.079572,8.515924,-8.229991,8.161602,-3.321952,7.619080,7.229572,6.003216,-3.384582,0.081058,-6.642049,5.412301,-3.640609,-8.675272,-5.107521,-2.210882,-6.456429,9.378127,-7.765574,4.335749,2.198314,-1.429325,-4.170924,3.627048,-5.560354,-9.335249,4.658420,5.529295,8.929278,-2.767259,-1.175546,9.890265,-6.636601,7.645527,5.907654,-2.953583,-6.418572,-1.044927,-2.924283,2.458660,-2.599053,7.111502,8.957427,7.634433,-1.412353,3.727513,2.525981,7.030648,0.246941,-4.776431,3.242909,8.204409,1.797922,-8.013581,1.889102,8.949040,-4.690360,9.187841,0.756146,-3.187341,-7.295502,-6.809767,-2.244114,-5.414870,9.476855,-0.912041,8.840511,-6.434655,9.350773,-8.717052,-5.466820,9.280601,-2.927474,-6.385312,4.164610,2.846767,-2.423526,8.482062,4.595219,-5.375970,-0.760633,-4.146094,-8.326171,1.502567,1.475811,1.569890,3.550544,-0.644895,0.670966,7.024427,1.637072,2.613436,5.915641,-2.897117,-5.406566,1.909827,-5.180882,-9.121868,-8.193325,-7.376791,1.636460,8.821350,-0.093883,-2.376099,-2.250314,4.304617,-4.473088,-2.826848,5.499719,-0.646527,2.586587,5.663290,1.809266,4.998925,1.017591,-7.575051,7.052410,2.594033,1.587543,2.520534,0.463913,-6.369510,7.173308,8.084191,3.517750,-5.182848,2.479083,-0.664251,6.766715,-2.768257,-6.295525,4.660618,-5.796265,3.633986,-2.586781,-4.355323,2.734245,4.008927,8.846974,-3.356903,2.582042,8.946921,-6.346442,7.650336,8.137123,-2.992126,-6.122461,5.315712,-9.699700,5.821195,-2.509743,-7.217572,-7.657118,-1.767027,0.314068,-8.226348,-2.768789,2.359678,-2.012154,-9.978218,8.779849,8.057326,4.989930,-7.535165,2.263371,-0.773218,5.803872,-4.653862,0.744947,4.754079,8.229650,3.486976,-2.580558,-9.564332,8.790234,-6.609165,4.369861,1.698221,1.840311,-9.613253,7.467374,-0.457816,3.882172,-0.367595,3.429066,3.293411,2.439939,-5.332105,-1.008417,-6.942401,-3.260380,-5.962338,-6.867081,-3.367543,3.586764,8.789007,7.515610,-9.562104,-5.358831,0.514523,-2.878551,-2.010011,3.648214,7.844947,0.038936,-4.764166,3.189240,2.325605,-7.027158,7.985628,-4.288368,-6.358027,-5.821545,-1.924910,3.894486,-8.662243,3.141278,7.556671,-7.558836,-7.610967,7.831646,7.102863,6.331664,-5.148696,-5.467519,2.209056,-4.776627,-6.415507,-4.344627,5.330579,2.516239,-3.692132,-8.821331,6.335494,-1.720184,-6.352613,-2.613327,-4.833556,-1.680215,3.028644,-1.865120,9.637382,-9.366182,7.588420,7.537554,-4.135398,9.999528,9.452176,9.383993,-7.046627,-5.075289,7.601310,-0.578043,-6.540279,-0.988010,1.747239,-0.856640,-6.783896,-7.064179,-8.081916,-4.638656,-0.810215,5.311048,-1.446692,8.400028,-7.384647,2.044280,-2.746611,-9.182869,7.205301,3.671937,9.158554,9.955141,-6.217397,-7.524828,3.966198,-9.413044,-5.654329,5.046524,-3.568536,2.625247,-6.405576,-0.216659,-7.421761,2.265207,6.135027,-8.342834,7.080190,-6.854859,3.990652,-9.031516,-0.288332,5.812814,-1.791592,3.435937,8.963112,9.114914,7.720041,-6.315956,-1.367163,7.046301,-3.645926,7.803565,-6.158494,-0.669267,-4.046724,-1.126384,8.651052,3.347122,5.911566,-4.130466,5.776811,-7.141201,1.964237,-8.960326,3.783133,8.593256,9.937472,7.093906,1.429972,9.449435,-0.209392,-9.407057,9.290905,0.329700,-0.809530,1.512034,5.850317,-4.405846,9.928341,9.094271,7.764455,-6.578968,6.144993,-3.063380,9.153977,-5.625210,8.093458,4.427276,-7.087907,2.140683,-1.132098,-9.322561,1.523942,-8.267989,8.096538,2.982571,9.588866,7.818545,8.323526,2.862496,0.498403,-1.612363,-7.031693,-4.801087,-2.468257,9.264355,-4.694371,-4.816811,-4.744415,-9.420275,-2.972293,-0.056936,-4.696986,-0.716385,2.343689,-3.766875,4.083360,-4.781371,2.277268,-7.725478,-9.520163,-2.801895,1.575777,-0.895030,-2.932372,3.658465,-5.363362,-5.166246,4.940787,-6.947042,-7.152629,-5.634825,2.656672,2.799250,0.046450,-9.260116,6.347586,-5.842056,-6.068376,-8.579383,-5.021076,7.075813,-5.942820,5.922463,5.423933,-6.780284,-1.076176,2.726949,0.264383,-9.562427,7.649525,4.941183,-4.398777,2.775008,-9.290383,8.517103,-3.704039,-3.080239,-7.581306,-0.428314,5.325794,5.057409,2.521804,-3.208015,6.056743,4.955926,7.506962,5.632506,2.277262,-6.592344,-0.696074,-2.303685,0.806339,3.295175,-6.259276,0.015374,4.305395,7.867248,7.775656,1.417461,7.388207,9.430188,1.159793,-7.958146,-4.584917,5.865946,-7.577608,2.243226,-2.329836,2.555455,-8.330383,-5.504643,7.658896,7.946986,1.698169,2.457167,8.009225,-5.891476,3.813327,2.413356,2.660045,-7.547198,-6.344535,6.318315,7.964453,9.699897,0.352419,1.097401,-8.002449,-8.552708,3.185218,-5.649297,-9.689489,-9.238999,7.705019,2.801104,-2.454297,-9.067771,7.973401,7.977281,-8.206355,5.545625,-2.847068,-3.889585,1.504503,1.345186,-9.030831,2.273238,-1.826323,-2.439812,-0.590672,-4.841775,8.820002,4.028043,3.496984,3.757433,-5.637307,2.407327,3.057830,6.640180,-0.696738,-8.678397,-7.178689,-4.592481,2.386957,-5.730668,-1.589795,-9.986194,1.451037,4.070521,-4.002394,-4.814820,6.560337,5.472352,8.610566,9.463034,7.413970,-7.551299,6.383999,-7.477486,8.431159,-6.509469,-9.160389,4.912598,2.141716,-9.621121,-1.248221,-6.792152,-9.367960,-8.708392,-2.767733,-9.962262,4.148593,6.323326,2.221227,9.762832,-3.890452,-9.137598,-5.394292,-2.010931,-8.744726,7.953829,1.199928,-1.697057,-7.665311,4.495208,-1.524646,-2.757691,-5.832441,2.619666,-0.196637,-4.745167,-5.141066,8.396750,-0.809008,-4.458911,-5.602473,1.484288,8.124080,8.399102,8.032834,-0.959939,-4.712167,1.626441,-9.999309,-9.450085,-1.163836,0.404768,-1.096115,4.756435,-7.364997,2.758157,-2.986912,-0.693001,1.779230,3.819441,-1.374416,-7.127232,-9.595907,1.466578,-9.680830,5.017408,-7.996855,-4.948903,4.179702,-3.496165,0.802409,-8.529773,-1.209742,-5.185783,8.851614,-0.188882,8.602296,-6.993189,0.836717,7.993761,-1.241006,-4.515620,1.694661,8.272913,-7.314224,3.192398,2.342283,8.084747,-0.903025,7.635038,4.762297,-2.894329,9.334470,4.483600,-2.280044,-4.557082,3.639885,-3.500712,8.269886,-1.571720,7.524152,-8.751454,4.668481,-8.532445,0.552384,7.850583,-4.406158,5.902128,7.973386,-9.992906,6.018159,-9.098481,9.411741,-5.261604,-7.227276,-5.461655,-7.155772,-8.619484,5.279331,2.541612,7.034028,4.407420,-4.338918,0.814655,8.074324,-2.715021,-0.409256,-7.416285,0.273925,7.401977,6.383802,8.354162,-2.617582,4.005185,-9.107255,-7.410593,-8.284188,6.033048,-9.966993,-4.155052,-0.486160,3.222142,3.228019,-1.401694,-6.963660,-0.148489,-3.625755,2.953904,9.490706,-8.551705,0.638136,0.301104,-9.663898,3.691642,3.155977,4.728918,-4.063845,7.737882,-2.717683,-3.657009,3.673743,-3.575044,-9.431991,-6.890839,-4.379268,8.911256,7.126632,1.068203,-1.230833,-7.211356,-4.985252,7.990947,-9.009832,-1.761261,5.934944,1.891272,2.996327,-9.142865,0.847138,-2.909176,7.501684,-9.955547,-2.461298,-2.290586,-9.350209,7.281516,-9.255174,5.405117,3.785266,9.939493,-8.988797,3.481223,-0.794128,7.240685,-1.309428,-4.616898,2.818706,-9.584810,-3.345268,-7.806575,4.174971,-2.770649,0.072924,7.971884,4.884672,3.414975,4.917577,-2.403467,-9.137878,-2.651351,5.887379,-4.867735,4.545020,-4.212113,6.394513,-5.384254,-2.329832,7.187557,-1.823229,-8.145215,8.415555,4.273893,-4.396806,0.146281,9.069176,8.618945,-0.272384,0.508062,-6.717311,3.824020,3.499789,4.098542,-7.687951,6.541251,1.371392,0.503141,9.124440,6.402913,-4.460721,-8.083665,-5.414919,-8.503949,0.590318,-3.174319,7.474843,0.446929,0.647512,5.857064,2.255355,-8.374705,-3.106709,-1.477276,-2.444756,-2.172225,-9.577970,-9.166972,-9.654291,1.371168,8.581482,-2.906249,2.309107,5.578576,-9.436110,3.733926,6.324727,-4.683732,4.266861,9.272713,-8.628709,-2.601944,-3.125426,-9.482377,1.806906,-0.543788,0.121373,4.456182,-0.230075,-8.262639,0.336314,2.009377,2.843275,4.242795,-4.135952,5.559726,-9.449504,2.254871,-7.527554,2.682583,6.594639,-3.373991,-3.299714,0.479363,-6.750867,2.723433,1.477047,-7.302760,-8.234798,6.299525,-6.118210,-2.432288,-8.314577,3.236150,3.464376,-7.459369,-3.445756,9.872991,6.063026,-9.526465,-8.274878,1.850174,-1.174645,7.477852,5.703188,2.837006,9.949891,-6.214574,4.149472,-2.241090,9.047724,6.562418,-1.263548,-8.288238,4.125318,6.420404,0.455944,-0.212049,4.903033,-4.363275,-7.848331,-4.724884,7.546663,-5.086040,3.311842,2.576512,8.527483,-5.172147,-8.885665,9.198273,3.663972,8.344279,-1.455657,-0.209067,8.138428,-4.822096,-8.807573,1.764498,-1.070675,-6.986851,6.388986,-0.020221,-2.712049,-5.857825,3.796230,8.711663,-4.908616,1.648774,-9.082909,-7.908239,1.122198,3.571405,-3.999268,6.055099,-8.094465,-5.275238,-4.676018,2.432853,0.865975,5.206898,1.941061,-5.223881,7.687895,-6.481287,1.509722,-7.785035,-6.061733,9.167760,-5.623696,1.191891,-3.812505,-8.256191,-9.275095,-8.815373,5.172910,-5.806374,-3.448646,8.519457,1.509725,9.179515,-3.909968,8.759860,9.832607,5.327366,1.576326,7.115586,-5.297981,-8.240349,5.645304,7.751284,-9.510152,6.798617,-2.088856,7.974236,8.148795,-1.475912,-5.296206,-5.041395,-3.375499,0.079523,-8.500941,-3.220566,6.472944,0.636567,8.999098,6.183228,-3.285686,-4.300665,8.672931,-9.260689,-9.177847,6.199222,-2.928078,-4.956445,5.935614,4.692743,-7.278197,3.755697,-1.883833,-8.335585,6.279485,-0.186012,1.493647,-9.332498,-2.662267,7.009640,9.069149,2.135873,-6.795892,9.617998,3.956975,1.533760,-8.495965,3.978785,9.785434,-2.987837,-4.322533,-4.652059,1.859249,-2.842284,-2.428461,-7.337238,-9.793718,7.418566,5.592122,2.212750,1.044648,7.230971,6.521538,6.786623,-3.804356,1.528791,-6.706852,-5.851237,-0.489758,1.569655,-3.171331,-0.531007,3.821092,5.174285,-2.324146,0.981677,3.514484,3.100725,-6.073484,6.779404,-9.214380,4.295899,0.554121,-3.480088,-3.520043,-7.975738,9.081411,-9.961136,-6.259618,-9.635551,-7.806759,5.126028,-1.010442,-9.543576,6.714320,3.896251,-2.129913,-5.463587,3.441834,3.169973,-0.444400,-5.718800,-4.545247,-1.294340,3.279388,-9.883668,-2.085806,3.063291,-3.375785,7.376923,-9.519769,-7.727297,2.454390,-2.379154,0.160873,6.326335,5.583147,-9.070452,-9.780683,-9.618252,6.662555,6.563952,-0.592936,-3.987094,-6.279226,-4.662623,-4.778242,8.008774,1.389562,-1.517307,3.535605,-0.344136,-6.214177,-8.870036,7.888687,-9.903694,6.010127,5.562604,-7.227845,1.184923,9.697307,0.864185,-6.795546,-5.049431,-0.307023,-3.947322,-4.616302,-1.254203,4.654327,4.152301,-5.332084,4.063634,1.865201,0.790801,-9.178046,-1.541253,8.183536,-9.740647,-5.873380,2.342584,2.546171,-0.056627,2.696603,-3.503938,8.500244,1.050549,8.803093,-7.438736,5.245981,1.849652,-0.023540,-1.878440,2.910236,8.412022,5.273132,2.984933,-3.064301,-5.702368,-5.926412,9.586606,-8.760296,3.628731,7.841158,-8.908060,-2.407141,5.916269,9.090555,-8.634536,-9.059998,-2.554127,-2.555519,-0.870347,9.678577,-0.443301,-5.943825,0.129459,4.588645,-5.410915,-1.248607,2.480084,-6.018852,2.961465,-8.722436,7.993167,3.499052,-2.604781,0.168937,5.796652,2.111238,-5.359716,3.716399,-9.543840,5.118502,5.763514,8.971420,-5.861267,0.890925,3.306531,2.592473,-2.111969,-1.809248,-5.962862,-7.379029,-0.901946,-3.308112,9.222692,9.156263,-3.210916,-4.103706,-1.998645,-3.094086,-9.363348,1.523162,-1.827911,-6.319520,3.661496,9.173799,-6.148812,6.473733,-9.831818,1.653290,7.017797,1.977597,4.360969,-4.015826,-3.082940,-9.889279,-0.286586,-4.721180,-8.095631,-5.969224,-0.985578,-2.457248,7.827811,6.348594,6.540230,8.495980,0.388025,-7.050063,-1.793670,4.265804,8.305002,7.928357,4.913313,-1.065835,-4.524363,8.042860,6.990361,9.224521,-8.924932,-3.360387,-1.279655,-5.001397,-2.024882,-5.034259,3.320244,3.065751,-9.870409,9.992994,1.385396,0.292687,-6.014444,-9.738879,-9.257523,-9.011154,-9.233861,-7.959021,-0.656691,9.107504,6.691889,2.528747,0.499481,-1.496351,-8.824858,5.843695,2.994241,1.312403,2.488601,9.734166,-3.514800,-2.288777,-5.316993,1.162066,-4.446270,-5.938572,-6.635056,-6.038742,-4.482396,1.111415,-9.031768,-5.013605,-9.738398,1.447903,3.966917,6.360208,-1.397184,3.549500,7.287100,0.845015,4.038540,6.683808,-1.247575,3.849798,-1.395942,7.997683,4.009825,5.091241,9.117459,3.094254,0.445283,-6.365834,5.560538,8.941379,-2.645150,-7.262786,-4.836640,-8.710740,6.978307,1.532353,-7.459971,1.207058,8.243932,2.546620,2.628966,3.957733,-2.945878,2.478663,5.398437,-7.918091,3.093461,4.426861,-8.109655,-7.363385,0.220734,-6.859749,-2.805226,2.620733,-6.702330,2.672063,-5.932315,-8.466538,-6.313315,-0.147766,-5.098110,-8.781171,7.230679,5.610760,4.955921,3.201576,-4.038332,-7.747587,6.318018,-7.422534,0.115387,-7.932506,-4.567057,-5.336481,-9.993971,7.331080,3.629885,-3.467170,8.902374,-9.799936,-9.085401,-5.682890,9.025361,4.826118,-7.306552,-2.208351,4.715001,2.691466,-7.965224,8.212977,-9.108975,0.112875,-8.215482,-5.547903,-2.320839,-3.783919,8.064266,0.773955,8.574900,5.017359,-2.071408,2.851192,-7.888911,3.302636,-0.480604,5.786506,4.762159,-8.422275,0.400373,-9.614615,-8.211870,-3.477663,6.370032,-2.493460,-8.988208,-4.730001,-7.234209,3.268757,5.823798,4.595096,3.134186,-3.358297,7.377729,-5.617422,-0.935456,-2.429737,7.609725,-9.631880,-9.760630,2.973924,-8.589670,1.974763,-8.270471,-3.878923,-3.550643,7.538700,-1.959161,-8.169451,8.014821,-9.085275,1.505927,-2.296886,3.620446,5.554103,0.368384,1.741203,4.353261,-1.546396,5.825917,2.302312,-7.886498,5.041635,-0.136632,3.758883,-8.270993,9.123058,-2.223183,-5.791471,-0.071242,-7.490832,-4.489592,-3.295005,-7.740085,0.445853,7.620464,9.181154,-7.244553,-3.495588,3.923754,-5.523805,-0.994496,4.048325,5.100107,-1.155490,-1.959055,0.198391,-2.432292,-4.154950,1.649807,-0.935392,-4.567611,-2.696916,-4.067323,0.331046,-9.192034,3.419028,-3.270163,-0.760879,-2.429061,7.900625,3.841757,-0.094658,-2.477117], dtype = "float32")#candidate|5485|(1728,)|const|float32
call_5483 = relay.TupleGetItem(func_5056_call(relay.reshape(const_5484.astype('float64'), [10, 8, 10]), relay.reshape(const_5485.astype('float32'), [1728,]), ), 1)
call_5486 = relay.TupleGetItem(func_5059_call(relay.reshape(const_5484.astype('float64'), [10, 8, 10]), relay.reshape(const_5485.astype('float32'), [1728,]), ), 1)
uop_5487 = relay.log2(bop_5480.astype('float32')) # shape=(10, 9, 16)
bop_5494 = relay.right_shift(uop_5487.astype('int16'), relay.reshape(var_5478.astype('int16'), relay.shape_of(uop_5487))) # shape=(10, 9, 16)
uop_5511 = relay.asin(var_5479.astype('float64')) # shape=(10, 9, 16)
bop_5513 = relay.mod(bop_5494.astype('float64'), relay.reshape(bop_5480.astype('float64'), relay.shape_of(bop_5494))) # shape=(10, 9, 16)
output = relay.Tuple([call_5483,const_5484,const_5485,uop_5511,bop_5513,])
output2 = relay.Tuple([call_5486,const_5484,const_5485,uop_5511,bop_5513,])
func_5536 = relay.Function([var_5478,var_5479,], output)
mod['func_5536'] = func_5536
mod = relay.transform.InferType()(mod)
var_5537 = relay.var("var_5537", dtype = "int32", shape = (10, 9, 16))#candidate|5537|(10, 9, 16)|var|int32
var_5538 = relay.var("var_5538", dtype = "int32", shape = (10, 9, 16))#candidate|5538|(10, 9, 16)|var|int32
output = func_5536(var_5537,var_5538,)
func_5539 = relay.Function([var_5537,var_5538,], output)
mutated_mod['func_5539'] = func_5539
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6106 = relay.const(-6, dtype = "uint16")#candidate|6106|()|const|uint16
var_6107 = relay.var("var_6107", dtype = "uint16", shape = (15, 7, 4))#candidate|6107|(15, 7, 4)|var|uint16
bop_6108 = relay.less(const_6106.astype('bool'), var_6107.astype('bool')) # shape=(15, 7, 4)
output = bop_6108
output2 = bop_6108
func_6120 = relay.Function([var_6107,], output)
mod['func_6120'] = func_6120
mod = relay.transform.InferType()(mod)
var_6121 = relay.var("var_6121", dtype = "uint16", shape = (15, 7, 4))#candidate|6121|(15, 7, 4)|var|uint16
output = func_6120(var_6121)
func_6122 = relay.Function([var_6121], output)
mutated_mod['func_6122'] = func_6122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6358 = relay.var("var_6358", dtype = "float32", shape = (6, 2, 1))#candidate|6358|(6, 2, 1)|var|float32
uop_6359 = relay.tan(var_6358.astype('float32')) # shape=(6, 2, 1)
uop_6368 = relay.sqrt(uop_6359.astype('float64')) # shape=(6, 2, 1)
uop_6378 = relay.log(uop_6368.astype('float32')) # shape=(6, 2, 1)
uop_6384 = relay.asinh(uop_6378.astype('float64')) # shape=(6, 2, 1)
func_189_call = mod.get_global_var('func_189')
func_192_call = mutated_mod.get_global_var('func_192')
const_6389 = relay.const([[3.799357,6.651005,8.007107,6.262484,1.319449,4.333377,1.520587,-7.017038,8.071067,-8.296729,-2.893075,8.170289,-3.344104,-0.255435,-1.358852,-0.394436,0.113343,-3.278700,-3.265677,-9.460360,6.663486,-6.518951,6.440074,9.242366,0.527412,-7.456522,6.940246,-5.824987,-2.846646,-3.628666,5.367680,6.298319,2.313715,5.287319,5.488146,3.895448,7.351747,9.363319,7.576406,3.384025,-6.985596,-1.480712,2.959887,5.536457,6.887626,-7.757125,4.845857,6.784973,-0.516806,-0.209515,-4.018090,-7.076929,4.037769,-6.053752,1.635988,2.499925,8.014596,9.426099,-9.409226,5.999672,-3.890844,-3.428728,7.562008,-3.642315,-3.772418,6.824518,8.728125,-5.472359,-3.752611,4.455703,3.079326,1.059782,-1.191685,5.946390,-9.963589,4.013071,4.955284,-4.298692,9.310532,-2.356769,8.879145,0.126618,1.079838,2.570728],[-5.577932,9.980646,0.720005,4.716548,3.834768,3.649703,5.497385,5.826039,-5.221912,1.379924,-7.577572,-8.026049,5.863352,-0.548755,7.214623,-3.106383,-9.630250,5.858598,8.640748,-7.581888,-4.018224,-7.918973,-6.474343,-0.369491,6.151379,-3.677508,9.760232,3.274419,-1.950125,3.852662,2.682986,-0.459668,-3.104425,9.904213,-7.529163,-2.074854,5.706694,-5.875693,-8.510663,5.289100,-6.096154,-3.165916,-3.043730,-2.715173,2.743794,-4.567327,-2.437294,7.003908,2.590902,-5.682360,-9.874617,-4.335905,3.286611,7.995855,9.874584,3.293201,-8.699068,1.603812,8.155320,-9.868849,6.385041,8.217946,8.654260,-0.229797,8.713438,-1.786647,-9.896941,-7.662149,1.947280,1.572372,-9.646503,-9.021952,-4.017251,8.422732,4.258774,9.806296,-4.255276,-4.763588,6.351003,-8.651569,1.695649,-0.896912,2.047849,8.545692],[-9.279680,9.414424,1.371970,1.096218,2.523018,1.388317,-7.697891,-2.391668,2.864423,-0.902569,7.837697,-4.104366,1.496161,-2.245022,0.724446,0.322438,8.170015,-3.329292,-6.078152,-2.405364,-4.613151,1.481759,-3.122200,8.552038,-4.082911,-4.356336,1.122221,3.115148,5.170873,7.219015,8.615065,-7.847206,-7.183317,-6.342408,9.007924,-7.712350,-7.020442,-4.912419,5.704016,1.912989,-2.450149,-7.226527,-5.985030,-1.300388,5.542122,-0.335669,8.220091,6.933868,0.596378,-1.083297,3.107261,-3.410912,-1.100671,-5.435048,-4.749770,-4.995823,-0.260374,-1.868583,-4.035246,-1.693947,4.696676,-0.601511,-0.044890,-2.905383,3.596234,-0.177534,9.417277,2.221002,7.391889,-4.948578,8.723271,-9.759116,0.572914,-3.020116,-4.440095,0.413745,9.979489,-1.883321,-1.585139,4.471248,3.175953,-2.769724,-2.444520,5.838842]], dtype = "float64")#candidate|6389|(3, 84)|const|float64
call_6388 = func_189_call(relay.reshape(const_6389.astype('float64'), [6, 7, 6]))
call_6390 = func_189_call(relay.reshape(const_6389.astype('float64'), [6, 7, 6]))
output = relay.Tuple([uop_6384,call_6388,const_6389,])
output2 = relay.Tuple([uop_6384,call_6390,const_6389,])
func_6405 = relay.Function([var_6358,], output)
mod['func_6405'] = func_6405
mod = relay.transform.InferType()(mod)
var_6406 = relay.var("var_6406", dtype = "float32", shape = (6, 2, 1))#candidate|6406|(6, 2, 1)|var|float32
output = func_6405(var_6406)
func_6407 = relay.Function([var_6406], output)
mutated_mod['func_6407'] = func_6407
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6426 = relay.const([[[-5.058748,-7.626925,5.016067,6.149907,4.043490,9.394266,7.244584],[4.410770,-7.726239,5.005556,2.618070,-8.790119,7.619304,8.522041],[1.037095,9.630516,5.917210,-6.565393,9.551776,-4.997051,9.746712],[-2.115448,0.419848,7.493956,1.757309,6.755472,-2.718540,0.588343],[-0.412170,-4.819647,-9.943145,5.752898,-8.330402,-1.370013,4.441027],[-5.745587,-9.202152,-4.278230,-6.923452,-4.032248,-5.614608,-4.547574],[7.567093,-0.794602,-8.945335,-6.497552,9.771696,-6.743054,4.461676],[1.080716,9.629913,4.099169,6.057281,-1.841173,0.252243,8.859566],[-3.862170,2.482154,6.934973,9.275657,-7.400904,-6.940213,2.304980],[4.018502,-8.405232,-9.695171,1.092331,7.098030,7.845209,-6.204900]],[[-8.114742,-3.845072,-1.672922,4.980661,5.495196,3.600732,-7.060942],[9.388624,2.024584,-4.577652,-4.814133,1.484933,-6.292499,-1.016174],[-5.142870,8.171697,-7.567044,5.570305,1.588614,-5.472674,8.244530],[-3.353817,-8.720612,-8.376718,1.078429,3.386293,8.376476,2.764844],[0.053870,5.830867,-0.987024,9.011397,-7.967809,6.128688,6.240217],[-9.881966,-8.746850,-1.015865,7.576325,-2.910699,7.702111,-1.676684],[-3.105488,-2.640181,8.947422,-8.049416,-6.832973,-9.148997,-2.716709],[-4.138198,2.660248,4.263872,-7.960551,-2.234851,-4.409373,-1.535903],[-8.517350,-7.276343,-7.045059,9.525042,-2.890848,9.485464,4.927485],[7.219409,-9.331000,4.467870,-3.494388,5.434972,-5.847953,-6.216390]],[[-7.548628,-7.153954,3.061734,0.142136,4.537475,2.369854,-0.152856],[1.636867,-8.521759,-8.599733,-4.256488,9.868862,-1.953616,1.058976],[-1.756723,2.862844,-1.793123,-4.167001,-9.951655,7.559582,-7.602498],[2.716112,-3.083241,-6.419336,9.693108,1.923318,-4.625361,-8.522039],[2.853865,9.819343,-3.035229,-5.737356,-5.278108,-0.626965,-3.305131],[-0.120127,7.478847,-9.869218,-8.180998,-1.171190,3.968684,-2.398503],[-1.542589,-7.803780,-2.613611,-0.944795,-0.084797,-1.785104,1.719143],[8.329411,-0.871272,-6.148161,7.139101,9.634094,1.598547,1.068717],[4.354561,-9.587703,-3.372951,0.140925,-7.798112,0.791287,-8.520601],[3.263412,4.554922,-6.550550,-4.383350,1.270585,7.839064,-8.194518]]], dtype = "float32")#candidate|6426|(3, 10, 7)|const|float32
var_6427 = relay.var("var_6427", dtype = "float32", shape = (3, 10, 7))#candidate|6427|(3, 10, 7)|var|float32
bop_6428 = relay.divide(const_6426.astype('float32'), relay.reshape(var_6427.astype('float32'), relay.shape_of(const_6426))) # shape=(3, 10, 7)
uop_6437 = relay.sinh(var_6427.astype('float32')) # shape=(3, 10, 7)
output = relay.Tuple([bop_6428,uop_6437,])
output2 = relay.Tuple([bop_6428,uop_6437,])
func_6446 = relay.Function([var_6427,], output)
mod['func_6446'] = func_6446
mod = relay.transform.InferType()(mod)
mutated_mod['func_6446'] = func_6446
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6447 = relay.var("var_6447", dtype = "float32", shape = (3, 10, 7))#candidate|6447|(3, 10, 7)|var|float32
func_6446_call = mutated_mod.get_global_var('func_6446')
call_6448 = func_6446_call(var_6447)
output = call_6448
func_6449 = relay.Function([var_6447], output)
mutated_mod['func_6449'] = func_6449
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6462 = relay.var("var_6462", dtype = "float64", shape = (6, 1, 15))#candidate|6462|(6, 1, 15)|var|float64
uop_6463 = relay.rsqrt(var_6462.astype('float64')) # shape=(6, 1, 15)
uop_6473 = relay.atanh(uop_6463.astype('float64')) # shape=(6, 1, 15)
output = relay.Tuple([uop_6473,])
output2 = relay.Tuple([uop_6473,])
func_6478 = relay.Function([var_6462,], output)
mod['func_6478'] = func_6478
mod = relay.transform.InferType()(mod)
mutated_mod['func_6478'] = func_6478
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6479 = relay.var("var_6479", dtype = "float64", shape = (6, 1, 15))#candidate|6479|(6, 1, 15)|var|float64
func_6478_call = mutated_mod.get_global_var('func_6478')
call_6480 = func_6478_call(var_6479)
output = call_6480
func_6481 = relay.Function([var_6479], output)
mutated_mod['func_6481'] = func_6481
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6776 = relay.var("var_6776", dtype = "uint64", shape = (16, 1, 5))#candidate|6776|(16, 1, 5)|var|uint64
const_6777 = relay.const([[[-6,-3,4,3,8],[8,3,7,-10,9],[8,9,-8,-4,-9],[-10,-4,3,-2,-7],[2,-6,-1,-4,-7],[-6,10,-6,4,7],[7,-10,10,-10,-2]],[[3,-2,10,3,4],[-6,-4,8,5,10],[-5,1,9,-9,-6],[-7,6,1,5,-1],[-1,-1,-3,6,1],[4,-4,-1,8,1],[-2,6,-2,-5,8]],[[-7,-3,5,7,8],[9,4,-6,-6,5],[-2,-8,5,3,6],[-8,-10,1,-8,1],[8,7,3,5,2],[7,-6,-10,4,3],[-5,-2,3,-2,-2]],[[7,3,2,-1,-5],[6,5,-6,5,8],[-9,8,-8,5,-1],[5,8,4,-5,-8],[8,-2,-8,-7,8],[10,8,9,10,-6],[-2,9,-10,-10,9]],[[-5,4,9,-6,4],[4,1,3,-6,5],[-3,4,7,-8,8],[4,6,1,-1,-4],[10,10,-7,-3,-5],[-6,5,2,-5,8],[-8,9,2,9,-8]],[[8,-10,1,-1,-2],[-5,5,-10,10,7],[-3,2,-9,3,-10],[3,-10,6,2,-8],[-4,-3,-10,7,-10],[-10,1,4,-8,2],[-1,6,9,3,-9]],[[-6,-3,-5,-3,3],[-9,6,-6,-2,1],[-2,10,-2,-10,-10],[7,2,-4,2,-9],[1,-9,10,9,-2],[7,-1,-4,5,1],[10,3,7,-1,5]],[[4,-10,2,10,5],[2,-6,10,-7,3],[-2,5,9,3,8],[1,-5,-5,-2,-10],[7,-8,4,-2,-3],[-10,-9,2,-4,-7],[-4,-4,-9,8,4]],[[-8,-2,3,-6,-9],[-3,6,4,10,-3],[-2,-5,-10,7,-6],[7,-3,4,-7,2],[-9,-4,7,-3,6],[3,-6,4,3,-5],[-4,6,-3,3,1]],[[5,2,-7,7,-5],[-9,-1,-9,1,8],[-4,10,10,-10,-3],[-10,-5,8,-1,-3],[8,-7,6,-7,1],[-5,-10,4,-10,2],[-7,10,3,3,2]],[[2,-7,10,8,-2],[-3,-3,6,10,2],[-7,-6,-1,4,-5],[-10,-8,-6,2,-4],[-3,3,-9,-1,-3],[2,-4,-9,-7,10],[1,9,-9,-8,10]],[[-5,-8,-9,7,5],[-5,-2,-7,-5,-5],[-8,-7,6,3,8],[5,-6,-2,-9,7],[1,-4,2,-5,6],[1,6,1,5,5],[5,7,-4,-6,-9]],[[10,-4,4,-6,2],[9,-5,3,-7,10],[-2,-6,6,-7,5],[-7,8,9,-7,3],[6,5,6,-9,-6],[7,-4,6,-2,-4],[1,-10,-3,4,-4]],[[1,8,-3,-2,7],[1,-8,8,-7,-9],[7,-4,-10,6,1],[9,-1,-6,1,-1],[9,-4,-9,1,3],[10,-1,-7,-3,2],[-6,-6,10,-3,1]],[[1,6,-7,10,-2],[9,4,-6,10,7],[-5,-5,-10,-4,-5],[-7,-5,4,9,-3],[8,2,-3,-5,2],[-4,-3,-10,3,-5],[9,5,-4,-7,2]],[[3,3,1,6,6],[8,-6,1,3,10],[-2,-10,4,-7,-9],[10,-8,9,-8,7],[-4,-5,7,6,8],[8,4,9,3,8],[3,-4,-10,4,10]]], dtype = "uint64")#candidate|6777|(16, 7, 5)|const|uint64
bop_6778 = relay.greater(var_6776.astype('bool'), const_6777.astype('bool')) # shape=(16, 7, 5)
const_6785 = relay.const([[[-5,7,-3,-5,3],[-7,-2,-8,1,9],[-6,10,-3,3,1],[4,-10,-7,9,9],[1,3,-2,4,-6],[1,-8,-4,-5,1],[-4,3,7,6,4]],[[-7,9,10,-4,5],[7,-4,8,-4,-2],[9,1,9,-4,7],[8,2,-8,1,5],[2,3,-7,-3,-3],[9,10,-6,1,3],[9,-1,-1,3,1]],[[-1,2,-8,-4,-3],[5,-1,-1,5,8],[-9,9,9,-9,3],[2,2,7,-6,-2],[-8,-10,-3,5,-2],[-7,-1,1,8,4],[-9,-5,-10,-10,5]],[[-5,8,-3,6,-10],[-2,-1,3,5,-1],[3,5,10,2,2],[-9,-2,2,-9,-5],[7,4,-4,-10,-8],[-8,-3,-9,-10,1],[8,-9,-9,8,-9]],[[7,-2,-6,9,5],[-8,-6,-8,4,-6],[10,-8,-8,1,-7],[9,-10,6,-9,-3],[2,-7,-4,3,-3],[-4,-5,-3,9,9],[6,-1,-10,10,2]],[[4,-7,-4,8,-9],[-8,-5,5,-6,-1],[2,4,4,10,5],[-9,8,10,7,9],[10,-8,10,2,-8],[2,2,3,2,-2],[-7,-6,7,5,3]],[[-7,-3,7,-6,3],[3,6,-3,-1,-4],[4,2,-4,-5,10],[-5,10,-1,3,-5],[5,-2,-3,-2,2],[7,-5,5,7,-10],[-7,-5,-5,5,8]],[[-4,9,-4,3,-7],[9,-2,-3,6,6],[-9,3,1,2,7],[7,3,-1,8,-10],[-10,1,5,-8,5],[7,8,-2,9,6],[-6,-1,-1,-5,-8]],[[-8,-5,-10,-4,-1],[4,-7,-1,5,4],[10,-6,-6,-5,8],[5,-4,4,3,4],[-8,-6,-5,3,7],[-1,5,9,-6,4],[8,9,-10,-5,10]],[[-8,2,-3,-1,6],[2,-6,-7,-10,-9],[-7,4,8,9,-8],[7,-7,-10,-5,-7],[-8,8,-7,8,8],[-2,4,-10,-9,-10],[-8,-10,5,7,10]],[[10,-6,1,3,-1],[-5,-5,6,-3,-2],[9,-9,9,1,-3],[2,9,10,-1,9],[4,-4,3,2,-6],[-9,8,-6,-2,-3],[-1,6,4,2,-9]],[[-1,3,1,7,1],[2,8,8,5,4],[2,-4,7,-6,-5],[-8,-9,-2,-10,-6],[2,-3,-7,6,-10],[9,-8,-2,-3,4],[5,-6,4,7,-9]],[[-4,-2,-3,9,-1],[2,3,-5,4,5],[-7,9,-5,1,8],[-4,1,1,-2,-3],[-1,5,6,-9,7],[8,4,-9,-4,-10],[2,-7,7,7,10]],[[4,-7,-5,6,-1],[10,1,9,-3,-2],[-7,7,7,4,5],[6,-7,-6,-3,-8],[9,6,-4,-2,9],[-1,8,2,2,-3],[-4,-8,-9,-5,9]],[[9,-3,-10,1,3],[-5,8,-10,3,10],[3,-3,5,5,6],[-5,-4,9,3,-5],[2,9,-7,4,-3],[6,-6,-6,2,-3],[5,-5,-6,2,-6]],[[6,-1,10,3,8],[6,-3,4,7,1],[6,8,7,-6,3],[-8,-10,3,-8,3],[4,1,-6,-9,3],[-3,-7,10,6,3],[-10,10,1,-1,10]]], dtype = "uint64")#candidate|6785|(16, 7, 5)|const|uint64
bop_6786 = relay.bitwise_or(const_6777.astype('uint64'), relay.reshape(const_6785.astype('uint64'), relay.shape_of(const_6777))) # shape=(16, 7, 5)
bop_6794 = relay.mod(bop_6778.astype('float64'), relay.reshape(const_6785.astype('float64'), relay.shape_of(bop_6778))) # shape=(16, 7, 5)
func_2121_call = mod.get_global_var('func_2121')
func_2124_call = mutated_mod.get_global_var('func_2124')
var_6800 = relay.var("var_6800", dtype = "float64", shape = (165,))#candidate|6800|(165,)|var|float64
var_6801 = relay.var("var_6801", dtype = "float32", shape = (288,))#candidate|6801|(288,)|var|float32
call_6799 = relay.TupleGetItem(func_2121_call(relay.reshape(var_6800.astype('float64'), [11, 15, 1]), relay.reshape(var_6801.astype('float32'), [288,]), ), 3)
call_6802 = relay.TupleGetItem(func_2124_call(relay.reshape(var_6800.astype('float64'), [11, 15, 1]), relay.reshape(var_6801.astype('float32'), [288,]), ), 3)
output = relay.Tuple([bop_6786,bop_6794,call_6799,var_6800,var_6801,])
output2 = relay.Tuple([bop_6786,bop_6794,call_6802,var_6800,var_6801,])
func_6807 = relay.Function([var_6776,var_6800,var_6801,], output)
mod['func_6807'] = func_6807
mod = relay.transform.InferType()(mod)
mutated_mod['func_6807'] = func_6807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6807_call = mutated_mod.get_global_var('func_6807')
var_6809 = relay.var("var_6809", dtype = "uint64", shape = (16, 1, 5))#candidate|6809|(16, 1, 5)|var|uint64
var_6810 = relay.var("var_6810", dtype = "float64", shape = (165,))#candidate|6810|(165,)|var|float64
var_6811 = relay.var("var_6811", dtype = "float32", shape = (288,))#candidate|6811|(288,)|var|float32
call_6808 = func_6807_call(var_6809,var_6810,var_6811,)
output = call_6808
func_6812 = relay.Function([var_6809,var_6810,var_6811,], output)
mutated_mod['func_6812'] = func_6812
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7199 = relay.var("var_7199", dtype = "int8", shape = (12, 13, 16))#candidate|7199|(12, 13, 16)|var|int8
var_7200 = relay.var("var_7200", dtype = "int8", shape = (12, 13, 16))#candidate|7200|(12, 13, 16)|var|int8
bop_7201 = relay.bitwise_and(var_7199.astype('int8'), relay.reshape(var_7200.astype('int8'), relay.shape_of(var_7199))) # shape=(12, 13, 16)
output = relay.Tuple([bop_7201,])
output2 = relay.Tuple([bop_7201,])
func_7205 = relay.Function([var_7199,var_7200,], output)
mod['func_7205'] = func_7205
mod = relay.transform.InferType()(mod)
var_7206 = relay.var("var_7206", dtype = "int8", shape = (12, 13, 16))#candidate|7206|(12, 13, 16)|var|int8
var_7207 = relay.var("var_7207", dtype = "int8", shape = (12, 13, 16))#candidate|7207|(12, 13, 16)|var|int8
output = func_7205(var_7206,var_7207,)
func_7208 = relay.Function([var_7206,var_7207,], output)
mutated_mod['func_7208'] = func_7208
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7215 = relay.var("var_7215", dtype = "int8", shape = (8, 4, 6))#candidate|7215|(8, 4, 6)|var|int8
var_7216 = relay.var("var_7216", dtype = "int8", shape = (8, 4, 6))#candidate|7216|(8, 4, 6)|var|int8
bop_7217 = relay.left_shift(var_7215.astype('int8'), relay.reshape(var_7216.astype('int8'), relay.shape_of(var_7215))) # shape=(8, 4, 6)
func_1326_call = mod.get_global_var('func_1326')
func_1331_call = mutated_mod.get_global_var('func_1331')
var_7243 = relay.var("var_7243", dtype = "int8", shape = (30,))#candidate|7243|(30,)|var|int8
var_7244 = relay.var("var_7244", dtype = "int8", shape = (480,))#candidate|7244|(480,)|var|int8
const_7245 = relay.const([[7.680867],[5.567453],[-6.216024],[-6.549838],[-4.352364],[8.282098],[3.532388],[-1.099918],[-2.844165],[-3.000113],[1.828482],[-8.679542],[-8.386529],[6.926297],[2.026381],[3.876793],[-2.344678],[-4.132144],[-8.820755],[-7.759620],[5.147827],[-0.337816],[-0.588012],[5.706568],[4.118475],[6.792265],[-6.248831],[9.208990],[-5.690087],[9.503579],[-5.420063],[-5.995014],[-8.383637],[8.403694],[-6.278061],[7.347748],[4.825457],[-6.034942],[-2.408254],[-9.684100],[6.006301],[-9.391961],[9.733427],[-1.803266],[-6.697089],[6.275407],[-0.535996],[3.613687],[1.490325],[9.966141],[-2.718862],[8.236210],[-2.612429],[2.064191],[-1.535778],[-1.908345],[-8.383402],[5.987178],[-0.735702],[8.548188],[-6.672707],[4.575709],[-2.814334],[5.001101],[-2.397675],[8.524325],[6.115759],[-9.987141],[-9.153389],[5.999693],[-7.699999],[-9.834449],[-1.862426],[-2.227199],[-3.621959],[-9.818596],[3.189306],[7.296036],[-1.406137],[8.319236],[-4.440499],[-1.127654],[6.602556],[8.430770],[-5.239303],[-2.496019],[9.927393],[2.929615],[1.189046],[-3.923643],[1.828024],[-7.112344],[7.577491],[5.631975],[-1.199409],[-3.136114],[0.431192],[-0.019466],[0.928773],[4.773108],[-3.405583],[-7.785444],[-2.298753],[-5.927390],[-7.048474],[1.406787],[8.780438],[-4.540751],[-3.561314],[-7.870065],[-7.004851],[4.605969],[4.972323],[-9.506562],[1.372492],[9.158766],[-4.278717],[4.308533],[7.987185],[-9.456070],[3.235546],[-1.036182],[0.990076],[4.884819],[-8.910095],[-5.109268],[-1.248345],[-1.096648],[2.006844],[-9.431611],[-0.230386],[2.225869],[-9.076816],[-7.679341],[-5.422501],[8.493668],[-2.291966],[-5.155935],[-8.221220],[0.342309],[8.631644],[8.024372],[3.480263],[-1.171154],[-8.500450],[-1.369004],[-3.798517],[1.720697],[-5.331675],[-9.746704],[-9.637202],[-9.198458],[0.348136],[-9.132827],[-7.323156],[-7.358512],[4.345821],[2.531691],[-1.556832],[-7.628184],[5.331234],[8.196271],[-9.425007],[-6.527015],[-3.776234],[8.349238],[-0.004809],[-2.273202],[-9.436470],[9.946634],[-1.647758],[-1.091671],[8.539822],[3.583560],[0.662938],[-4.160950],[-1.206342],[-4.932737],[9.673820],[2.544520],[-5.972316],[-7.360764],[7.371667],[-3.817147],[-8.360196],[-2.873282],[-9.096194],[-5.511260],[3.462352],[7.794069],[7.651714],[0.027650],[7.485353],[-0.325249],[-4.660486],[2.348252],[-4.075061],[7.913294],[-3.817685],[4.831328],[5.333206],[8.057421],[6.449174],[9.048176],[1.964581],[7.659703],[-5.139300],[-6.808534],[3.808594],[-0.765325],[3.925933],[-3.492399],[-2.296960],[4.030643],[0.505619],[5.339362],[-0.719892],[-0.304481],[-9.909864],[-3.634724],[-7.851864],[8.805224],[-2.396862],[4.646558],[-5.272513],[1.160063],[7.524352],[-6.670848],[7.756705],[-0.621247],[-0.390911],[5.326218],[-7.784582],[-1.372198],[9.863392],[3.297021],[4.183135],[5.825413],[-9.717173],[9.761315],[-8.128264],[-1.025999],[-5.644980],[6.255385],[-0.077558],[-8.311162],[0.959419],[-0.926161],[-3.111660],[2.848688],[7.284452],[9.382898],[6.631345],[8.468353],[5.207343],[-5.537657],[4.173763],[6.662017],[0.992885],[-2.921124],[-5.885757],[5.210080],[-3.846837],[-0.823511],[-7.383806],[7.388793],[-8.990641],[-8.800750],[4.389163],[1.004694],[-9.947459],[-4.981512],[8.657616],[1.814720],[7.550297],[-2.033092],[1.539301],[7.642421],[9.330821],[-6.025914],[2.384908],[-6.743621],[-3.155381],[9.064349],[-3.732346],[6.333295],[2.005462],[-0.740244],[7.087534],[7.326648],[4.817358],[4.000120],[7.192507],[3.125456],[-6.962586],[6.952127],[0.697707],[9.053299],[-1.683758],[5.560870],[5.435137],[-2.388883],[-0.074099],[8.799201],[-6.652644],[-8.545582],[9.191812],[-9.834345],[3.646976],[5.694087],[6.030801],[2.941684],[-2.008889],[7.415433],[-5.958405],[1.615674],[3.219174],[-5.064931],[3.594922],[4.372912],[-0.012364],[0.472728],[1.802672],[2.851408],[6.287162],[-1.512156],[8.305603],[3.111391],[-9.326150],[-7.541657],[8.177417],[6.120614],[2.110136],[0.371868],[9.029454],[7.939745],[-2.130757],[8.784668],[-7.417021],[-9.436835],[-5.126730],[3.946562],[7.647678],[3.450286],[8.629851],[-5.585242],[-8.284397],[0.322016],[3.733433],[-2.744891],[3.256084],[-6.012996],[-5.894569],[-4.589999],[-4.386577],[1.210517],[5.017112],[-5.833099],[4.508107],[3.494824],[-7.681576],[-5.615138],[5.198176],[-5.304321],[-6.590400],[7.791826],[-3.052850],[2.846166],[-0.679674],[-6.555245],[2.882637],[1.115748],[-0.717195],[7.962986],[4.656906],[-9.821036],[-5.434703],[-2.094467],[-9.286051],[-0.060770],[4.545311],[-6.343641],[7.808471],[8.829262],[1.923887],[3.398234],[5.739414],[-0.850097],[-3.889547],[2.907784],[-4.558426],[3.123732],[-2.948898],[-0.660554],[5.005710],[2.911046],[-3.788990],[-0.780586],[-0.752930],[9.503230],[9.648791],[-6.034282],[5.118266],[-8.318825],[-5.628276],[-2.920723],[6.977482],[4.763428],[8.511460],[-3.648119],[-3.787831],[-9.581501],[-6.200265],[-7.600926],[-6.394489],[-8.310193],[-5.763799],[-5.252011],[5.304960],[-4.199156],[-0.113090],[-0.469862],[-0.575614],[-1.157740],[2.566492],[-5.610669],[-2.633136],[8.006686],[-5.298833],[1.069391],[4.642949],[-6.485981],[-4.181022],[-4.097524],[-2.453140],[6.163302],[8.337556],[-0.541457],[9.744152],[8.408665],[-5.111008],[-7.104174],[-3.432792],[6.135746],[-2.854323],[7.187705],[-2.615430],[7.842659],[-7.864882],[6.359684],[-1.545101],[-4.279166],[-5.752410],[-6.575937],[3.792699],[3.554721],[2.275372],[-1.268030],[3.787680],[-7.820561],[8.847108],[0.170830],[-0.766216],[-8.064603],[-2.218018],[5.204912],[2.111679],[-2.063968],[-8.147400],[4.258990],[8.816947],[3.977344],[5.625597],[-3.267275],[0.038594],[-4.875605],[0.493365],[4.435119],[-4.451534],[-8.805426],[5.364709],[-7.689952],[2.451570],[-7.530020],[9.693508],[4.573687],[-3.177951],[5.005061],[3.924495],[-8.534035],[8.263167],[4.030241],[9.819184],[-7.710509],[-9.304644],[-1.005333],[-6.015334],[-8.226950],[-3.904149],[2.194364],[6.178731],[-5.822416],[-3.462031],[4.451490],[8.745820],[-8.877847],[-3.511766],[7.939641],[-8.215876],[6.614916],[7.465758],[-5.082388],[-4.161372],[1.702931],[-9.241431],[-4.788492],[-8.804243],[8.884363],[4.843755],[-5.666892],[8.393516],[7.768916],[-8.010644],[6.634257],[-3.790792],[2.780400],[-9.041626],[4.854591],[8.729026],[0.091466],[3.198037],[7.067728],[-4.402271],[-3.202070],[2.337536],[7.943881],[-7.361729],[-5.269609],[8.416038],[3.724972],[-2.775241],[3.694684],[0.404064],[-3.089561],[-2.925812],[-8.949057],[4.785030],[6.650173],[-3.801886],[9.031575],[-1.900923],[-4.936935],[5.887036],[1.565426],[-3.746301],[-7.507697],[1.732854],[-2.514757],[-6.798942],[2.356303],[-1.406542],[4.770947],[0.982887],[-3.364934],[-0.289528],[5.336778],[-7.618683],[5.153865],[-4.673474],[-1.707754],[-8.595211],[-5.006479],[3.396498],[-2.373485],[6.307374],[-7.666334],[7.710013],[8.915630],[-5.971958],[-7.177867],[-9.019188],[6.145479],[-5.419266],[-0.082993],[0.839674],[1.977237],[-6.011895],[6.124158],[-4.024040],[7.297207],[-4.380750],[-0.934092],[5.873496],[-4.638882],[1.465964],[7.793995],[6.781967],[-8.327451],[3.626146],[-3.723366],[9.458688],[-2.863699],[4.980680],[0.381547],[4.344074],[1.319392],[-5.112935],[3.025464],[-1.566931],[9.380582],[3.896603],[9.522699],[9.274095],[-8.076963],[-2.083656],[8.940816],[-5.295746],[1.196159],[-9.530728],[-4.834815],[-4.099033],[0.222828],[9.559912],[-8.981016],[-5.214545],[1.778696],[-6.753107],[-9.041104],[-6.887083],[0.260996],[-0.013228],[-1.245322],[-2.084291],[-6.613197],[2.318930],[5.841875],[2.826152],[-4.657380],[0.372812],[-4.465155],[8.580062],[8.398212],[-7.244530],[0.223179],[-5.567110],[8.784009],[-4.386939],[-7.972746],[-4.911069],[8.128523],[3.590314],[9.140624],[5.851819],[0.221374],[-0.168420],[-7.604156],[6.502862],[-3.778833],[-4.505594],[-1.840453],[-2.184330],[3.888276],[3.342655],[7.923063],[-3.131696],[2.705343],[5.774857],[-3.763347],[6.330978],[-8.440940],[6.981978],[6.268046],[-5.056213],[-1.052445],[3.275998],[-8.764787],[2.758867],[-2.938806],[9.527048],[-6.475978],[-8.502477],[2.020717],[-7.691905],[-6.556095],[5.877327],[7.908983],[-4.042738],[6.610176],[-4.713893],[1.398804],[-6.527720],[3.783403],[8.924388],[-4.740625],[-3.122117],[-3.179910],[0.760103],[-2.941845],[-5.421734],[1.865639],[7.607323],[-3.009289],[2.782135],[2.044165],[-9.848797],[0.411696],[-3.105472],[-7.644588],[5.167499],[-3.355893],[3.824846],[-1.788904],[-6.922714],[-9.412077],[-2.091097],[-4.889263],[-9.326965],[0.809609],[-1.957516],[-5.168141],[0.064279],[5.158143],[-0.431708],[1.575450],[-5.171360],[4.232419],[-7.458528],[-0.314661],[7.158927],[7.092901],[-2.893182],[9.738918],[4.494032],[-0.858661],[7.683976],[-7.693819],[9.040603],[-2.807726],[8.530713],[5.476707],[5.473261],[9.829551],[-4.799830],[-8.467558],[-2.659589],[5.695878],[2.695211],[2.382738],[6.784100],[-8.421386],[-6.884633],[5.117331],[-0.335244],[-4.189946],[5.800955],[-2.983838],[-3.227858],[2.356252],[3.674266],[-5.059887],[9.711773],[2.402128],[7.480747],[0.207708],[-5.219439],[5.107674],[-2.492862],[-1.115129],[7.195898],[-7.088618],[-0.969436],[1.111732],[-4.486246],[-6.273656],[5.789144],[9.480444],[-0.357194],[9.101745],[-6.462621],[1.738179],[8.952549],[3.162846],[0.022072],[-1.853525],[-4.705748],[-0.365356],[1.780608],[-6.725208],[-3.654496],[-6.671072],[8.018221],[-0.638693],[-0.619957],[0.662972],[8.231479],[6.528275],[-8.644085],[-5.877642],[1.308967],[-8.096418],[-4.046739],[-3.959601],[-7.292721],[4.956169],[1.744881],[-0.562522],[-2.441360],[3.032144],[5.899313],[3.015935],[4.538125],[8.185042],[4.136723],[7.384601],[-0.518024],[9.659364],[-4.468702],[2.617740],[-0.457428],[0.168939],[-6.052273],[-0.652170],[3.527571],[7.472320],[9.256866],[1.508027],[2.302488],[-9.444986],[-3.642240],[9.200506],[5.496327],[0.604636],[4.775698],[-3.690577],[-1.963671],[6.329438],[-5.274499],[2.954258],[5.319330],[-4.571875],[2.652552],[5.315840],[-0.347888],[6.037814],[-0.683492],[2.604259],[5.451981],[5.309563],[2.369667],[-1.122977],[-5.363924],[-9.683503],[-3.762807],[-1.485714],[-3.668046],[-2.872235],[-8.030586],[9.636969],[1.133824],[5.945942],[9.827767],[8.530114],[-0.823661],[3.491037],[-5.004146],[1.884599],[-6.078143],[6.714852],[7.576198],[-4.771314],[-7.253997],[1.648106],[7.509233],[8.488044],[4.515765],[-9.715660],[-4.074822],[-3.967605],[-3.044410],[-3.023861],[2.990831],[4.213685],[-6.532365],[-6.876176],[-1.420107],[8.047962],[1.868331],[4.355029],[5.568071],[9.902153],[-3.189776],[-1.190334],[6.224215],[6.603272],[-4.192017],[4.751427],[1.561722],[2.103162],[2.851548],[4.678296],[3.987457],[4.111741],[5.201272],[9.547998],[3.136989],[3.723503],[-0.210415],[-7.152297],[-6.027299],[5.131365],[-3.873851],[4.978479],[-1.949778],[7.599265],[-6.684812],[1.965742],[3.141228],[1.882638],[-3.426463],[-7.719514],[7.220298],[7.780710],[0.759288],[-8.887843],[3.339084],[-5.693820],[-3.466409],[2.221754],[1.760780],[-4.956647],[3.742357],[2.480644],[-4.650782],[4.329745],[3.733719],[2.208797],[1.700181],[-4.960779],[-5.669439],[1.328676],[-7.314052],[6.365362],[1.924062],[3.071468],[7.348463],[-2.411550],[-1.383946],[-9.558020],[-6.572235],[7.816114],[6.704698],[3.244422],[9.016679],[4.155542],[-7.488044],[6.286762],[-4.495453],[5.650281],[0.840830],[-3.898568],[-3.377830],[8.455836],[-2.247408],[-6.380362],[3.291188],[-4.156391],[-6.851158],[6.312948],[2.435385],[2.334638],[0.624763],[8.606485],[-5.700590],[9.624880],[2.516844],[-9.600053],[4.702768],[-8.525266],[9.495910],[-3.639959],[-8.808246],[0.169784],[-8.770546],[-3.152644],[3.045080],[6.509551],[-0.417633],[8.816749],[3.657143],[-1.814773],[-4.688114],[6.924217],[-8.534267],[-6.402691],[-1.938341],[-4.066352],[6.323558],[0.118699],[2.620045],[-1.973657],[5.844350],[3.907955],[-1.683775],[-4.196906],[-5.667121],[-6.980264],[-6.751944],[-8.225429],[-0.087434],[-7.611665],[8.838374],[1.062911],[2.256774],[8.956250],[6.887367],[9.366588],[3.792482],[-4.227611],[3.392532],[-8.019009],[-7.433992],[6.822050],[-7.850105],[7.850159],[-6.992176],[2.847792],[3.648431],[-0.701421],[0.617376],[0.072570],[7.194155],[8.129635],[9.580710],[-1.803222],[0.835154],[-3.598292],[-7.576312],[-9.983665],[9.652223],[7.354535],[6.746092],[-8.327827],[0.382836],[1.298187],[-8.113957],[7.938529],[-2.488963],[-9.847981],[1.423273],[-6.601184],[2.640575],[-0.723664],[-1.518392],[-8.556158],[-4.312493],[6.003731],[-2.192097],[-4.917988],[2.146820],[-8.088381],[-4.757974],[1.898428],[0.658026],[9.179510],[8.432243],[3.089896],[-0.828279],[-6.271147],[-1.654454],[1.050720],[-4.949638],[-9.575255],[-5.329376],[-6.819094],[5.986858],[5.828943],[8.055326],[-2.255446],[-9.471024],[1.470361],[6.338414],[9.970882],[-5.919013],[7.172552],[-3.443022],[4.736812],[0.805558],[-2.785516],[8.691819],[4.973515],[3.232974],[-0.968907],[-7.461926],[7.286603],[-8.375726],[-6.459092],[6.688373],[-6.099492],[8.990255],[-5.914700],[-0.038132],[-0.064962],[-1.424724],[5.445776],[6.034102],[-3.757212],[2.267352],[9.214505],[3.261913],[-4.755113],[3.355601],[1.344843],[-1.566973],[-9.171499],[1.247779],[-5.875116],[5.466147],[-0.972215],[7.957851],[8.356734],[-7.485479],[6.760285],[-9.500537],[6.296966],[-1.375708],[-8.376897],[-1.524068],[-2.052222],[4.792634],[-6.347661],[-2.006824],[-1.498750],[6.067082],[6.444497],[-2.300997],[-3.895342],[-9.178152],[-8.790298],[-4.999864],[-5.360546],[0.216568],[2.924386],[-7.490372],[3.348356],[-0.856257],[8.738535],[-2.288582],[-4.795029],[-6.625577],[-1.982937],[-3.816916],[7.477249],[-1.577342],[-8.112939],[-0.898000],[6.392871],[0.449872],[5.503864],[9.326354],[3.112113],[8.295108],[-2.981022],[-6.250440],[1.340988],[-2.572924],[0.570115],[-3.086696],[0.553569],[-7.737862],[-4.619395],[-4.243177],[-0.310043],[-5.101882],[1.850380],[-4.206410],[0.425815],[6.048065],[1.024435],[9.336146],[-6.182347],[-7.236915],[-4.356642],[7.937194],[-6.491490],[1.914755],[-4.080320],[-3.182815],[6.225882],[-6.128900],[-1.628209],[3.113684],[-3.494858],[6.844588],[-6.716856],[1.334705],[-7.207836],[-3.194309],[-3.669319],[-1.122771],[2.990278],[8.988078],[3.092960],[1.161902],[-3.569694],[-3.918640],[-8.291424],[8.330580],[-4.401925],[2.068181],[4.464346],[-5.748748],[-3.916369],[-2.697437],[-4.731666],[7.570294],[1.341630],[8.108886],[2.355920],[3.851223],[-7.443266],[-1.593324],[-5.832219],[-5.946071],[2.715185],[8.999600],[-9.832235],[-5.045762],[1.364167],[0.143245],[-6.574874],[6.034233],[-1.975995],[-8.853165],[9.201056],[4.536561],[9.401261],[9.309262],[9.603080],[0.501956],[2.476252],[4.869591],[-8.350633],[-7.061118],[3.999050],[4.236438],[4.342461],[3.213161],[3.444784],[2.458330],[7.851353],[-5.001903],[-8.675119],[-8.571902],[6.758150],[-7.705047],[5.365945],[-8.039300],[-2.080783],[1.112695],[2.533616],[1.271214],[6.600050],[-6.326170],[-2.767006],[-5.694359],[-6.589111],[9.167323],[-2.063132],[7.077980],[7.363629],[-4.486149],[2.677074],[-0.158105],[3.311268],[4.201482],[-5.173239],[8.205684],[9.490310],[-7.337504],[3.341117],[-8.996596],[0.918456],[9.696756],[5.099881],[-1.509395],[-1.147442],[1.218129],[4.851665],[1.164302],[0.458147],[7.679915],[2.607545],[-3.879325],[-8.196409],[8.276449],[4.140858],[-3.834283],[8.218929],[-0.531059],[-4.201376],[8.086066],[3.590426],[-0.714127],[-1.604299],[6.359786],[7.505367],[2.770322],[-0.820356],[2.162053],[-4.610043],[-0.906269],[-4.958040],[-2.770256],[-2.400111],[0.994170],[9.150138],[-3.150379],[0.190485],[-1.623959],[-7.783093],[-5.274036],[-1.821085],[9.332877],[4.186487],[-6.814246],[2.124189],[3.613268],[7.369103],[0.337571],[-8.709514],[-5.870557],[3.112994],[-1.572744],[5.699490],[-6.283655],[-2.135650],[9.974829],[-5.401206],[1.639665],[-7.127743],[5.506141],[5.104601],[6.336917],[-1.757013],[-5.130296],[4.220938],[1.371922],[3.708548],[-7.061882],[-9.129407],[0.027978],[8.651136],[6.758892],[2.324501],[5.438350],[-1.648710],[8.894479],[0.623850],[-8.856234],[6.886731],[-1.592780],[0.427760],[4.665390],[1.254332],[-2.931234],[-7.712899],[-4.756703],[-4.875845],[9.718092],[0.727610],[7.614220],[1.794758],[5.578731],[-0.050339],[-4.435088],[-8.893367],[-5.370032],[-2.337092],[8.540094],[4.366941],[2.384650],[6.013032],[4.643729],[-5.321186],[2.292237],[5.532308],[7.769493],[3.360438],[6.726220],[2.694964],[3.423630],[-4.646084],[8.523578],[5.766339],[-1.585219],[-8.669448],[-7.335419],[-5.147055],[-3.982475],[-8.293765],[-3.384839],[-2.666142],[-2.931035],[-5.463053],[4.748845],[8.245829],[6.392801],[9.356740],[5.142969],[2.831338],[4.591091],[0.498163],[3.966607],[-0.450138],[-0.650352],[4.693476],[-3.926472],[6.546721],[4.488901],[6.039565],[8.899119],[6.775398],[-3.884448],[9.668511],[5.216999],[-6.801105],[0.272477],[-4.845074],[1.284735],[-4.191162],[4.768868],[-9.465768],[3.184871],[-7.063212],[3.892385],[-8.868165],[3.556818],[4.638321],[-4.430430],[3.657113],[-4.916715],[-7.417720],[9.709484],[-6.265904],[2.179282],[5.519757],[7.537740],[4.772911],[4.713475],[8.772376],[0.616629],[4.804061],[-3.176639],[-5.545810],[7.149172],[-9.570436],[8.502325],[2.004780],[-0.081830],[6.473034],[-4.059682],[-6.746209],[-0.657323],[5.927532],[-3.136066],[-1.369101],[-6.514259],[-6.567049],[5.794863],[7.790775],[-2.895601],[-1.276153],[-1.517922],[-4.136039],[8.664113],[5.041410],[-5.887761],[8.890611],[0.864335],[-5.533275],[-1.442871],[8.588795],[-1.226369],[3.701904],[-2.231653],[1.462496],[-6.495716],[1.871308],[3.264693],[9.851057],[6.387209],[0.862198],[8.127685],[2.170677],[8.154089],[-0.374099],[-7.905494],[-8.008144],[6.400221],[-9.387003],[-5.262519],[-9.002916],[3.147713],[9.623275],[6.376473],[-8.559537],[2.803240],[0.674079],[-9.011188],[5.246793],[-0.801303],[0.284451],[8.151287],[-3.200494],[0.762187],[0.793031],[-1.286783],[9.073551],[6.715543],[-1.516111],[9.587870],[1.904950],[-6.757965],[7.234195],[6.551535],[-5.063941],[-4.387063],[0.472922],[4.596309],[-6.294296],[-4.487029],[-0.187286],[0.783873],[3.907213],[7.695307],[-6.502876],[-0.660133],[4.270115],[-5.237623],[7.046534],[-2.829225],[7.494590],[-3.381420],[-9.622701],[-9.471831],[-7.766811],[-4.454973],[9.898997],[-2.830237],[-6.482481],[2.880325],[5.326890],[5.521040],[-3.564821],[4.735831],[0.058887],[-9.920309],[8.785862],[6.099178],[-6.337431],[-9.038865],[0.711573],[-4.619304],[0.007419],[2.066064],[-5.362283],[-2.308563],[-1.788070],[-6.678374],[5.147294],[-9.750360],[1.610709],[2.557679],[5.995953],[8.603778],[3.983443],[4.714123],[-9.075008],[9.009137],[-7.962505],[-7.401994],[7.886230],[-9.668904],[-0.234205],[1.752021],[6.201153],[-6.889465],[-2.925504],[5.964500],[9.535030],[2.396825],[-7.231667],[9.192866],[-6.774224],[-8.233733],[9.440036],[8.244845],[4.506451],[-3.735514],[8.061094],[7.554072],[5.733670],[5.564581],[-3.857193],[-4.576927],[4.319611],[-4.374565],[-6.681858],[1.485926],[-7.265728],[3.993358],[-5.855888],[1.886236],[7.379136],[2.899632],[5.970356],[9.775263],[-6.714485],[-8.968004],[2.424458],[-2.550253],[-6.506577],[-1.540928],[-0.041842],[-4.302792],[-4.646774],[-1.002441],[-2.721456],[-3.075295],[6.717293],[-4.097059],[8.487333],[-2.068070],[2.122631],[-7.398280],[7.722041],[2.410591],[6.697706],[-2.731377],[8.459096],[-7.773491],[-5.092530],[-3.763875],[-1.991463],[-1.897719],[-1.994044],[-2.412812],[-5.454756],[-9.547384],[2.224127],[-5.420289],[0.298020],[2.436527],[-3.528531],[1.759999],[-3.062804],[2.035032],[-0.547749],[6.851196],[-7.651111],[7.547669],[0.628442],[-5.353634],[-2.391993],[1.991401],[0.871540],[-7.458611],[7.203532],[7.141526],[6.961079],[-7.669853],[2.354114],[-0.586310],[9.871721],[-6.251240],[-4.306822],[9.972242],[-2.404410],[9.341593],[-8.044903],[-0.794934],[6.190928],[-0.493502],[-7.757594],[-3.850904],[-2.818977],[8.533469],[-0.927665],[-5.672023],[-4.990265],[8.058288],[-7.913260],[-2.583530],[4.840162],[4.057199],[-8.539219],[5.608819],[-5.539971],[-3.052770],[-7.124339],[-7.470449],[9.852250],[-2.018761],[5.551815],[-5.522520],[3.854806],[-5.740630],[-0.734146],[-8.283208],[0.316158],[3.531804],[-5.302974],[0.300880],[-4.677426],[3.606093],[-0.305332],[-2.735655],[-2.190931],[1.830184],[5.303105],[0.682012],[5.336041],[-0.257332],[-8.639481],[8.778904],[-6.174182],[5.839618],[-9.046830],[7.571154],[-6.335496],[6.636841],[-7.001879],[9.475074],[-9.150152],[-7.092594],[-2.939079],[-5.497268],[-5.976391],[8.722881],[-4.180541],[-1.877182],[3.331010],[8.590360],[-2.707343],[-9.765307],[7.073784],[6.409211],[2.233167],[-4.259126],[4.704963],[8.644648],[-2.496119],[0.079293],[-6.569847],[0.196570]], dtype = "float32")#candidate|7245|(1755, 1)|const|float32
call_7242 = relay.TupleGetItem(func_1326_call(relay.reshape(var_7243.astype('int8'), [1, 5, 6]), relay.reshape(var_7244.astype('int8'), [16, 5, 6]), relay.reshape(const_7245.astype('float32'), [1755,]), ), 3)
call_7246 = relay.TupleGetItem(func_1331_call(relay.reshape(var_7243.astype('int8'), [1, 5, 6]), relay.reshape(var_7244.astype('int8'), [16, 5, 6]), relay.reshape(const_7245.astype('float32'), [1755,]), ), 3)
output = relay.Tuple([bop_7217,call_7242,var_7243,var_7244,const_7245,])
output2 = relay.Tuple([bop_7217,call_7246,var_7243,var_7244,const_7245,])
func_7251 = relay.Function([var_7215,var_7216,var_7243,var_7244,], output)
mod['func_7251'] = func_7251
mod = relay.transform.InferType()(mod)
var_7252 = relay.var("var_7252", dtype = "int8", shape = (8, 4, 6))#candidate|7252|(8, 4, 6)|var|int8
var_7253 = relay.var("var_7253", dtype = "int8", shape = (8, 4, 6))#candidate|7253|(8, 4, 6)|var|int8
var_7254 = relay.var("var_7254", dtype = "int8", shape = (30,))#candidate|7254|(30,)|var|int8
var_7255 = relay.var("var_7255", dtype = "int8", shape = (480,))#candidate|7255|(480,)|var|int8
output = func_7251(var_7252,var_7253,var_7254,var_7255,)
func_7256 = relay.Function([var_7252,var_7253,var_7254,var_7255,], output)
mutated_mod['func_7256'] = func_7256
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7261 = relay.var("var_7261", dtype = "int8", shape = (16, 8, 16))#candidate|7261|(16, 8, 16)|var|int8
var_7262 = relay.var("var_7262", dtype = "int8", shape = (16, 8, 16))#candidate|7262|(16, 8, 16)|var|int8
bop_7263 = relay.less_equal(var_7261.astype('bool'), relay.reshape(var_7262.astype('bool'), relay.shape_of(var_7261))) # shape=(16, 8, 16)
func_7205_call = mod.get_global_var('func_7205')
func_7208_call = mutated_mod.get_global_var('func_7208')
var_7269 = relay.var("var_7269", dtype = "int8", shape = (2496,))#candidate|7269|(2496,)|var|int8
call_7268 = relay.TupleGetItem(func_7205_call(relay.reshape(var_7269.astype('int8'), [12, 13, 16]), relay.reshape(var_7269.astype('int8'), [12, 13, 16]), ), 0)
call_7270 = relay.TupleGetItem(func_7208_call(relay.reshape(var_7269.astype('int8'), [12, 13, 16]), relay.reshape(var_7269.astype('int8'), [12, 13, 16]), ), 0)
func_189_call = mod.get_global_var('func_189')
func_192_call = mutated_mod.get_global_var('func_192')
var_7272 = relay.var("var_7272", dtype = "float64", shape = (252,))#candidate|7272|(252,)|var|float64
call_7271 = func_189_call(relay.reshape(var_7272.astype('float64'), [6, 7, 6]))
call_7273 = func_189_call(relay.reshape(var_7272.astype('float64'), [6, 7, 6]))
func_6807_call = mod.get_global_var('func_6807')
func_6812_call = mutated_mod.get_global_var('func_6812')
const_7293 = relay.const([-1,-3,-6,2,-9,4,-6,8,-7,6,3,1,-9,-8,10,-3,6,1,-10,-7,-2,7,-6,-1,-1,-6,4,6,2,8,-3,-2,-7,-9,8,10,-7,-5,1,-7,-6,9,-2,5,2,3,-6,-2,-10,2,7,5,8,-8,-7,-1,7,2,6,-3,-1,-2,3,-10,5,8,-5,-7,-2,-9,-9,3,10,-7,-5,3,-7,2,8,-3], dtype = "uint64")#candidate|7293|(80,)|const|uint64
const_7294 = relay.const([-6.789778,4.518708,-2.525668,-4.776839,-5.041634,9.899432,3.987047,7.625588,3.601792,7.742900,-9.824149,2.278471,-7.326309,2.852806,8.711014,-8.010819,-9.822414,2.132355,2.079491,-0.079640,6.508134,6.984459,5.557677,8.406103,-6.882308,2.766929,4.152503,-3.300262,-9.652314,-8.752946,5.723799,-5.973365,-7.809914,-5.277601,0.704549,-0.479193,2.018528,-6.489148,-7.528105,2.726001,-4.726050,4.567394,7.065803,4.187950,7.350740,-0.403225,5.394270,4.507125,-8.364450,7.624510,-7.491346,5.821919,-6.860413,3.547244,7.039882,9.486073,5.344348,6.414973,-5.031155,-0.280100,-0.696749,-1.293354,2.238201,-1.905011,-6.381254,-9.051081,3.096345,-3.506889,0.323723,-5.035406,-6.795681,-4.733201,-1.294487,-5.801154,3.546735,-4.690662,6.351513,7.714070,-3.081508,1.435875,2.341386,-4.972256,3.448056,-6.059785,-9.650893,9.903024,-7.154450,-4.714828,0.361939,3.601053,8.711574,8.417494,6.348832,-4.735322,-1.515824,-8.305078,7.132517,-0.947106,8.978965,2.747744,2.274058,-1.908989,-4.003220,-4.192871,5.927643,-3.982714,1.193973,-2.643529,-7.046630,3.693030,-4.428173,0.717314,-6.596119,-0.981332,-3.439924,3.362342,-5.989062,-1.499578,-6.614653,-6.667470,-1.459192,-9.634484,-5.707860,-8.560959,3.090889,2.373116,2.942689,1.835938,-4.804001,5.031820,8.421973,-9.289701,-4.484114,4.082422,6.500698,7.439781,-2.684140,-1.401166,-7.814760,-1.117104,-6.379770,5.806636,-7.165002,7.813387,-0.931637,3.579055,4.820576,2.492651,-7.199519,-3.630909,-0.564584,-6.783655,1.783007,-9.962159,8.111371,-9.545750,-7.035846,-9.302924,-5.310045,-9.025661,-4.635849,5.352216,2.618508,-6.856101,1.726328], dtype = "float64")#candidate|7294|(165,)|const|float64
var_7295 = relay.var("var_7295", dtype = "float32", shape = (2, 144))#candidate|7295|(2, 144)|var|float32
call_7292 = relay.TupleGetItem(func_6807_call(relay.reshape(const_7293.astype('uint64'), [16, 1, 5]), relay.reshape(const_7294.astype('float64'), [165,]), relay.reshape(var_7295.astype('float32'), [288,]), ), 1)
call_7296 = relay.TupleGetItem(func_6812_call(relay.reshape(const_7293.astype('uint64'), [16, 1, 5]), relay.reshape(const_7294.astype('float64'), [165,]), relay.reshape(var_7295.astype('float32'), [288,]), ), 1)
func_1612_call = mod.get_global_var('func_1612')
func_1616_call = mutated_mod.get_global_var('func_1616')
var_7303 = relay.var("var_7303", dtype = "int32", shape = ())#candidate|7303|()|var|int32
const_7304 = relay.const([[5],[-8],[8],[-10],[2],[10],[4]], dtype = "int32")#candidate|7304|(7, 1)|const|int32
call_7302 = relay.TupleGetItem(func_1612_call(relay.reshape(var_7303.astype('int32'), []), relay.reshape(const_7304.astype('int32'), [1, 7]), ), 0)
call_7305 = relay.TupleGetItem(func_1616_call(relay.reshape(var_7303.astype('int32'), []), relay.reshape(const_7304.astype('int32'), [1, 7]), ), 0)
output = relay.Tuple([bop_7263,call_7268,var_7269,call_7271,var_7272,call_7292,const_7293,const_7294,var_7295,call_7302,var_7303,const_7304,])
output2 = relay.Tuple([bop_7263,call_7270,var_7269,call_7273,var_7272,call_7296,const_7293,const_7294,var_7295,call_7305,var_7303,const_7304,])
func_7311 = relay.Function([var_7261,var_7262,var_7269,var_7272,var_7295,var_7303,], output)
mod['func_7311'] = func_7311
mod = relay.transform.InferType()(mod)
mutated_mod['func_7311'] = func_7311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7311_call = mutated_mod.get_global_var('func_7311')
var_7313 = relay.var("var_7313", dtype = "int8", shape = (16, 8, 16))#candidate|7313|(16, 8, 16)|var|int8
var_7314 = relay.var("var_7314", dtype = "int8", shape = (16, 8, 16))#candidate|7314|(16, 8, 16)|var|int8
var_7315 = relay.var("var_7315", dtype = "int8", shape = (2496,))#candidate|7315|(2496,)|var|int8
var_7316 = relay.var("var_7316", dtype = "float64", shape = (252,))#candidate|7316|(252,)|var|float64
var_7317 = relay.var("var_7317", dtype = "float32", shape = (2, 144))#candidate|7317|(2, 144)|var|float32
var_7318 = relay.var("var_7318", dtype = "int32", shape = ())#candidate|7318|()|var|int32
call_7312 = func_7311_call(var_7313,var_7314,var_7315,var_7316,var_7317,var_7318,)
output = call_7312
func_7319 = relay.Function([var_7313,var_7314,var_7315,var_7316,var_7317,var_7318,], output)
mutated_mod['func_7319'] = func_7319
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7378 = relay.var("var_7378", dtype = "float64", shape = (4, 7, 7))#candidate|7378|(4, 7, 7)|var|float64
var_7379 = relay.var("var_7379", dtype = "float64", shape = (4, 7, 7))#candidate|7379|(4, 7, 7)|var|float64
bop_7380 = relay.subtract(var_7378.astype('float64'), relay.reshape(var_7379.astype('float64'), relay.shape_of(var_7378))) # shape=(4, 7, 7)
func_5536_call = mod.get_global_var('func_5536')
func_5539_call = mutated_mod.get_global_var('func_5539')
var_7387 = relay.var("var_7387", dtype = "int32", shape = (1440,))#candidate|7387|(1440,)|var|int32
call_7386 = relay.TupleGetItem(func_5536_call(relay.reshape(var_7387.astype('int32'), [10, 9, 16]), relay.reshape(var_7387.astype('int32'), [10, 9, 16]), ), 1)
call_7388 = relay.TupleGetItem(func_5539_call(relay.reshape(var_7387.astype('int32'), [10, 9, 16]), relay.reshape(var_7387.astype('int32'), [10, 9, 16]), ), 1)
func_6478_call = mod.get_global_var('func_6478')
func_6481_call = mutated_mod.get_global_var('func_6481')
var_7393 = relay.var("var_7393", dtype = "float64", shape = (90,))#candidate|7393|(90,)|var|float64
call_7392 = relay.TupleGetItem(func_6478_call(relay.reshape(var_7393.astype('float64'), [6, 1, 15])), 0)
call_7394 = relay.TupleGetItem(func_6481_call(relay.reshape(var_7393.astype('float64'), [6, 1, 15])), 0)
bop_7399 = relay.greater_equal(call_7392.astype('bool'), relay.reshape(var_7393.astype('bool'), relay.shape_of(call_7392))) # shape=(6, 1, 15)
bop_7402 = relay.greater_equal(call_7394.astype('bool'), relay.reshape(var_7393.astype('bool'), relay.shape_of(call_7394))) # shape=(6, 1, 15)
output = relay.Tuple([bop_7380,call_7386,var_7387,bop_7399,])
output2 = relay.Tuple([bop_7380,call_7388,var_7387,bop_7402,])
func_7405 = relay.Function([var_7378,var_7379,var_7387,var_7393,], output)
mod['func_7405'] = func_7405
mod = relay.transform.InferType()(mod)
var_7406 = relay.var("var_7406", dtype = "float64", shape = (4, 7, 7))#candidate|7406|(4, 7, 7)|var|float64
var_7407 = relay.var("var_7407", dtype = "float64", shape = (4, 7, 7))#candidate|7407|(4, 7, 7)|var|float64
var_7408 = relay.var("var_7408", dtype = "int32", shape = (1440,))#candidate|7408|(1440,)|var|int32
var_7409 = relay.var("var_7409", dtype = "float64", shape = (90,))#candidate|7409|(90,)|var|float64
output = func_7405(var_7406,var_7407,var_7408,var_7409,)
func_7410 = relay.Function([var_7406,var_7407,var_7408,var_7409,], output)
mutated_mod['func_7410'] = func_7410
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7520 = relay.var("var_7520", dtype = "uint64", shape = (2, 11, 15))#candidate|7520|(2, 11, 15)|var|uint64
var_7521 = relay.var("var_7521", dtype = "uint64", shape = (2, 11, 15))#candidate|7521|(2, 11, 15)|var|uint64
bop_7522 = relay.not_equal(var_7520.astype('bool'), relay.reshape(var_7521.astype('bool'), relay.shape_of(var_7520))) # shape=(2, 11, 15)
func_743_call = mod.get_global_var('func_743')
func_748_call = mutated_mod.get_global_var('func_748')
var_7527 = relay.var("var_7527", dtype = "float32", shape = (1755,))#candidate|7527|(1755,)|var|float32
const_7528 = relay.const([-4,2,-5,4,-10,-4,2,-3,9,-8,7,8,-8,-6,-2,3,-5,-10,4,2,-6,-6,-2,-1,-10,5,-6,9,1,2,-10,1,-2,8,3,-9,-8,-7,8,3,-8,7,-3,-9,2,10,-6,1,-2,-3,1,-5,-9,-3,-2,-6,7,4,2,4,5,-7,-5,-1,9,3,8,-1,10,-5,-10,-3,-4,7,-10,-1,-3,6,-9,4,-2,6,-6,-6,-10,-1,2,7,10,-4,-5,5,-3,5,-9,10,9,-1,2,3,8,4,7,8,5,10,-4,7,8,-1,-4,-8,6,8,-9,-2,5,9,-9,-1,-6,6,6,9,-7,10,-9,4,10,-3,-3,7,3,9,-10,6,-9,-8,-6,-10,-7,-4,-1,-4,-2,-1,4,-2,4,6,-2,-10,3,-8,6,1,8,-2,8,1,2,5,-10,2,-10,7,-1,5,-8,-2,-10,-8,2,7,-7,-10,-10,7,-3,5,-7,7,1,1,-2,-4,8,1,3,8,6,-8,-2,-8,2,-10,8,-7,7,8,1,-4,-3,8,2,-5,3,-7,-8,2,8,1,9,-5,-3,8,7,2,-8,6,-6,10,-6,-6,2,6,-2,-6,-4,9,-5,3,2,2,8,10,2,-5,7,-3,-1,-10,8,8,-8,1,-6,5,-4,8,6,-7,-9,7,6,-8,-8,2,4,-8,-8,4,-7,-2,8,2,9,4,-2,8,8,-6,2,-4,9,9,-3,9,-3,-1,-4,-7,-4,3,-10,3,8,-8,-9,-7,6,-4,-10,-9,8,4,-4,-5,1,-4,10,1,-9,8,-1,6,2,6,-3,-5,-6,-2,-9,9,-4,9,2,-2,10,1,-9,-1,-7,3,2,2,6,-8,-1,-2,-2,9,-4,-9,2,-6,-6,-2,-3,-4,4,5,-2,-2,4,7,7,-1,8,-5,-1,3,-9,-2,-3,-9,4,4,9,-6,2,-8,-9,1,-1,10,-9,-9,10,-1,10,8,4,-10,2,5,-1,-4,-1,10,1,-4,-4,9,4,7,-9,-8,10,7,7,-5,-6,1,-6,-1,-2,9,8,2,-7,-8,5,-3,-5,7,4,-10,-3,-2,-1,-5,-8,1,-10,9,-3,8,-2,-4,-1,9,-3,8,2,-4,-4,8,-1,9,-3,3,-5,5,-9,-6,-10,-8,6,8,7,-10,10,3,8,-5,2,8,-6,-7,-10,5,-10,2,10,-5,-3,-8,-5,-6,-4,-8,10,6,-7,-3,7,-8,3,-4,-1,10,4,-10,-10,3,-9,2,7,7,4,2,10,-10,-1,5,-5,-9,-2,9,-5,-8,3,6,-10,5,-3,-5,8,-7,2,-10,-7,-6,-8,-3,-9,-9,-10,4,8,-2,-6,-5,2,3,3,1,-2,3,1,-3,8,3,-7,-8,6,-7,8,-5,3,6,-1,8,-3,-5,8,5,2,-3,-6,-5,10,-5,3,1,-9,-3,-2,-8,-3,-9,3,-4,5,5,8,-6,-9,9,10,-9,4,1,-3,1,2,-7,-8,-1,8,-8,3,5,2,5,1,-3,3,3,3,-4,-5,-9,1,10,5,6,-10,1,4,-8,-9,3,4,-10,9,-3,4,-9,-1,4,5,-3,10,8,9,2,6,-10,9,-1,-3,-5,6,1,3,3,-5,4,2,1,8,7,-9,8,8,-8,-2,9,-5,5,-6,-7,-7,-6,4,8,1,8,4,-7,3,-5,-6,-3,5,-2,-8,-1,9,2,3,5,-9,3,9,8,-7,9,7,6,-3,4,7,-4,1,2,-10,-7,2,-2,1,-4,-3,4,8,4,8,3,-3,4,5,-7,2,3,5,-6,-5,7,-5,2,10,-7,5,-6,6,-10,5,-5,-1,-1,-4,-7,7,-7,-4,10,-6,-4,6,7,1,3,5,3,8,6,-2,9,6,4,6,4,2,10,8,-9,7,5,2,9,3,-10,-8,-6,8,4,3,-7,-6,2,6,-4,-3,-4,8,-5,-9,-8,5,-1,4,-6,-3,-4,1,6,-7,-10,-1,5,8,-2,4,-3,-6,9,-10,-8,9,-4,10,-8,10,7,-2,3,-2,-6,9,-5,-6,4,3,-10,6,3,-4,10,8,-7,2,10,-5,2,8,8,4,-9,-5,-9,3,-4,-4,-10,4,5,-7,1,3,-7,-3,-2,-8,3,-8,-2,-6,-7,-5,-3,4,4,-2,7,-10,-6,-9,9,-7,-1,-7,-7,3,3,1,-6,3,8,7,-1,-10,-2,-5,-8,-5,9,-6,-7,8,-5,-6,-6,3,4,-1,-8,4,-2,1,9,-1,-10,-5,-5,6,2,3,1,-1,-5,-2,3,-1,2,7,7,-2,-6,-5,9,-1,5,8,9,3,-2,-8,-8,2,-2,3,-6,8,3,-2,-7,3,8,-10,-3,-4,-5,-1,-1,6,1,-5,-6,10,-6,-10,-7,7,-6,-6,-7,3,-3,8,7,-7,3,5,5,-9,-8,-6,-3,2,-7,8,7,7,-6,-5,-6,9,-6,-1,8,4,8,-10,-2,-2,-1,4,-2,9,3,-10,6,-2,-4,3,-2,9,-8,3,-3,8,5,-9,10,-6,-2,6,6,10,1,-5,2,-5,2,10,-2,9,-10,-6,-6,5,-9,-8,1,6,-3,4,-4,6,6,-3,-4,-8,1,-5,4,-7,-1,9,-2,3,-5,-1,-8,5,4,-4,10,-3,4,8,-7,3,1,-1,7,8,-3,-1,9,8,-3,2,-4,6,10,-8,-10,-5,2,-4,2,-1,3,9,-7,3,-7,5,9,-9,-5,6,-7,4,10,10,-10,-6,-10,-2,2,-7,2,2,3,-10,8,4,10,-7,-8,2,-8,10,5,-5,1,6,3,-7,-9,5,-5,-7,8,7,2,3,-10,-6,-9,2,2,-3,7,-3,7,6,-6,-10,8,10,9,-8,10,-3,-6,7,4,4,2,-10,3,4,10,6,3,5,-3,10,8,10,-10,-1,1,-10,1,1,-7,-5,-8,4,-1,3,4,5,9,-6,-6,-7,-2,-9,6,-9,4,-9,-7,6,-4,1,-2,-9,-4,2,-2,7,6,7,6,5,1,4,9,-7,-1,-8,-7,-6,2,2,-8,9,3,-8,-3,-10,-8,-4,6,-9,-2,-10,6,1,-3,-3,2,-7,-10,-3,-9,-9,7,4,-9,-10,2,1,7,7,4,3,5,-10,-4,-10,-6,-1,-6,-8,-10,5,10,1,7,7,1,7,1,-1,-10,9,-1,1,-5,-4,1,6,-7,-9,6,-8,-8,-3,2,-4,-6,-10,-1,-6,-2,-9,10,-4,-4,-3,-9,-7,6,5,-5,-10,-10,-8,1,-7,-4,6,4,5,5,10,9,-2,-9,-4,-6,5,-5,8,9,-3,-2,1,10,-5,3,8,3,6,-7,-4,7,8,2,-9,9,-6,-2,-10,10,-7,1,5,-5,3,3,4,9,-1,-8,-4,4,-2,4,9,7,6,-3,-9,-2,-2,-4,-3,10,5,-4,-7,-8,3,8,5,9,-3,-10,1,-7,-5,9,5,1,7,9,-2,-2,-9,10,-6,-3,9,1,5,5,10,-7,-3,-5,4,4,-10,-4,7,-1,10,1,-7,-1,2,-2,10,-5,10,5,3,1,-8,-2,-10,7,7,1,-4,-6,-10,9,8,5,6,-1,1,-4,-8,3,9,9,-10,2,5,-10,-6,7,5,-1,3,-1,3,-3,-2,-10,6,9,-10,-2,10,-1,5,10,1,-10,-1,-1,6,9,2,-9], dtype = "int8")#candidate|7528|(1408,)|const|int8
call_7526 = relay.TupleGetItem(func_743_call(relay.reshape(var_7527.astype('float32'), [15, 9, 13]), relay.reshape(var_7527.astype('float32'), [15, 9, 13]), relay.reshape(const_7528.astype('int8'), [1408,]), ), 2)
call_7529 = relay.TupleGetItem(func_748_call(relay.reshape(var_7527.astype('float32'), [15, 9, 13]), relay.reshape(var_7527.astype('float32'), [15, 9, 13]), relay.reshape(const_7528.astype('int8'), [1408,]), ), 2)
var_7537 = relay.var("var_7537", dtype = "int8", shape = (1408,))#candidate|7537|(1408,)|var|int8
bop_7538 = relay.bitwise_and(call_7526.astype('uint16'), relay.reshape(var_7537.astype('uint16'), relay.shape_of(call_7526))) # shape=(1408,)
bop_7541 = relay.bitwise_and(call_7529.astype('uint16'), relay.reshape(var_7537.astype('uint16'), relay.shape_of(call_7529))) # shape=(1408,)
uop_7560 = relay.sigmoid(var_7520.astype('float64')) # shape=(2, 11, 15)
func_677_call = mod.get_global_var('func_677')
func_680_call = mutated_mod.get_global_var('func_680')
var_7563 = relay.var("var_7563", dtype = "float64", shape = (252,))#candidate|7563|(252,)|var|float64
call_7562 = relay.TupleGetItem(func_677_call(relay.reshape(var_7563.astype('float64'), [252,])), 2)
call_7564 = relay.TupleGetItem(func_680_call(relay.reshape(var_7563.astype('float64'), [252,])), 2)
func_3724_call = mod.get_global_var('func_3724')
func_3727_call = mutated_mod.get_global_var('func_3727')
var_7566 = relay.var("var_7566", dtype = "float64", shape = (120,))#candidate|7566|(120,)|var|float64
call_7565 = relay.TupleGetItem(func_3724_call(relay.reshape(var_7566.astype('float64'), [4, 6, 5])), 0)
call_7567 = relay.TupleGetItem(func_3727_call(relay.reshape(var_7566.astype('float64'), [4, 6, 5])), 0)
func_2259_call = mod.get_global_var('func_2259')
func_2263_call = mutated_mod.get_global_var('func_2263')
const_7570 = relay.const([7.567775,8.989466,-9.160284,9.242865,-4.246129,-3.863910,8.758946,-5.957542,7.570351,8.312250,-4.342489,-7.686086,-1.788868,-6.678532,-8.511885,6.226019,-6.304751,4.481198,6.081819,-1.168240,-1.492209,-2.554158,1.297434,-7.786531,-0.571531,-6.283261,8.118457,-9.023377,3.835400,-4.640172,2.455689,6.922552,-4.156529,-6.908374,-4.872051,6.580700,-4.974857,-1.389384,-7.594101,-0.396886,6.625816,-0.314840,1.197381,-2.158899,7.544792,0.252870,-2.638910,5.819489,8.143176,5.514356,-0.444140,-1.230525,-4.477349,4.623941,-4.187544,-5.932224,-8.657061,-9.923070,1.042491,-8.597346,6.251558,-6.527433,4.646592,-1.756443,7.129823,-6.775445,-7.047574,-4.314475,3.397232,-5.892963,9.228014,0.602794,9.049866,-3.890224,-3.837567,8.363089,-8.328611,-1.652279,4.568744,-8.310015,-0.207891,2.242987,4.346617,7.419134,6.850247,-9.277050,-2.339453,-8.491252,-7.977269,2.977192,0.650981,-8.202845,-4.273532,6.154663,-9.000758,-6.492439,-6.689935,9.048534,-7.618971,4.198140,-1.113473,-5.101239,1.721722,-3.085511,6.128015,3.669053,8.655793,-1.971966,-6.008664,0.899522,4.606717,3.105422,7.526135,-5.189800,8.599901,2.673652,3.368426,5.204017,-8.581889,-0.980298,4.751684,5.786948,-1.556890,-4.760243,3.336519,4.435974,9.276561,9.692522,2.767325,-6.642591,6.903676,2.214488,-4.050251,9.774604,-3.100837,-2.027845,8.516793,-0.328447,-7.112939,-5.321712,9.658552,-5.559843,-0.280696,5.939601,1.013487,9.000838,-0.210667,-1.959016,9.198883,4.596891,2.971813,5.412001,4.467654,-3.115420,-3.564740,-1.373240,-8.836645,-1.983736,-2.469336,9.150621,-2.554800,-8.414071,6.153927,0.986912,-0.576567,-4.306608,-5.372382,7.705405,-2.626527,9.772308,-6.094190,-3.640956,4.541058,-1.347634,-4.604859,9.659943,-2.903761,4.879897,-0.045063,-7.800751,-9.931488,1.127154,-9.468850,-9.239072,-8.727943,4.873187,5.243263,-9.658497,-7.909657,-0.678018,-5.298301,0.773996,7.677409,-4.801416,8.296211,2.256338,5.019906,0.587137,8.325939,-1.473676,6.735366,-3.135408,0.799977,3.975062,1.776947,4.396370,-1.376874,-6.156094,0.520596,8.480188,3.380871,-9.214135,2.717533,-1.303810,-8.704899,6.240752,-4.549754,-4.020778,-9.226065,-0.296756,-5.987161,6.363768,-5.168303,-6.275201,-7.482463,6.437727,-7.286223,-6.924682,6.420067,-2.805685,-3.461095,9.173751,-5.646332,-2.896222,-1.180107,-3.105947,-7.449129,9.059118,-1.318117,6.873033,0.683171,-3.775046,-8.749075,-5.163080,-3.800070,5.225999,-0.436497,8.354484,2.941438,7.019325,-4.616907,-4.074489,3.855731,-0.470228,4.260852,-8.355022,-0.047634,0.480914,3.047563,-3.580072,-5.524490,-0.125779,-6.039809,8.026362,-9.640342,5.216307,8.999238,5.059439,5.861589,-6.593246,2.753109,-6.294495,9.398231,8.678174,5.391806,-5.696090,1.352988,-4.669744,7.069475,4.071653,-2.717221,-8.708384,-3.981140,-4.971163,3.225006,9.367016,7.719755,-3.744023,9.346442,3.791991,6.773167,-2.725937,0.332745,1.471019,5.022404,-1.721829,8.804177,4.064849,-8.070185,-6.071367,-7.489502,4.237336,0.416357,-5.688214,9.494687,8.659184,-6.474396,5.644497,-1.394406,-6.657392,-4.694122,1.917162,7.444997,1.383191,-9.674725,-1.321990,8.774014,-8.520820,0.689850,1.305118,-4.066733,-4.442442,9.888292,-3.730153,-6.281421,4.393163,3.771702,-0.759158,6.199676,4.251926,0.256405,-9.237052,2.307488,6.469035,0.930890,3.425268,9.621622,-4.958051,6.735197,-0.411898,6.725069,-1.319255,-2.183643,-9.122910,4.179398,8.558493,1.283163,1.145389,-3.431928,0.639332,-2.722402,-7.951244,-0.825188,-6.473774,3.003891,2.667710,-0.641294,-2.992521,9.012125,-8.446870,-5.789543,9.719149,7.394954,-4.840046,-6.398851,6.930044,-8.982489,-8.561792,6.982027,-3.518617,-1.900991,5.206767,-2.752212,5.168951,-0.976329,-9.184633,-9.991664,-2.794013,-3.750407,6.734994,6.174058,1.884342,-9.939015,-5.213281,-4.603394,9.345973,6.400276,6.635906,-3.840028,6.302942,-6.559276,5.164130,3.036211,-1.864979,-5.277935,-5.731338,6.693581,4.765781,-9.828915,6.097873,-5.723236,2.465760,0.530218,5.790947,0.130823,6.176362,-5.995215,-4.374227,-9.122574,-2.468032,5.166533,-9.173740,-8.812877,-4.813594,-2.413745,-6.150561,-1.472455,-2.176626,-7.506319,1.822813,-0.135506,-7.631191,7.991575,-1.588042,9.422404,-4.794289,-7.433472,9.808748,-5.417026,9.948172,1.537222,-6.473497,4.647195,-7.827734,-8.808569,2.084745,-4.967943,-7.864743,4.403207,3.483467,8.879640,7.827054,8.742756,-2.212464,-4.635328,-8.099951,7.815053,-3.197185,7.469755,8.366841,-2.774011,-7.686419,-6.414088,4.307890,8.443641,-8.559459,-2.655613,-3.624340,8.222577,-8.108977,-7.932530,9.813696,3.893033,-9.205688,-4.634751,-2.808944,9.206030,3.887239,7.510624,9.918653,-0.904724,4.689889,0.326938,-3.725892,8.360107,-2.974002,9.189075,1.209069,7.890354,1.341233,1.939259,4.568992,-4.547198,-5.497555,0.213998,-8.781589,-3.660623,-6.528858,-4.229108,-1.501951,5.935591,4.429833,-2.727077,3.870809,5.270047,-4.533311,6.139662,3.241244,-1.060680,9.136920,9.478839,3.361082,-7.529607,9.100999,-9.732908,-2.099881,-1.515772,-9.969214,-7.891322,4.978531,-9.853152,1.613909,4.490118,1.811527,-3.240411,0.499003,6.532315,9.350856,-6.265033,-7.591115,-9.235713,2.244207,-8.363720,-8.243441,7.734000,-9.137737,1.745361,0.369236,-9.419124,-3.571311,-5.891948,-9.092025,0.229515,1.021320,-4.444486,-2.780639,-3.748408,-4.798424,-1.394739,6.697361,-1.308130,2.943227,2.952446,-9.901175,-5.849577,4.833567,-7.771190,-4.439881,5.178919,1.099469,6.112074,9.459098,5.255925,-6.899034,-8.618282,-7.223894,-8.021886,-6.315838,-5.685974,5.314035,8.546495,2.016165,8.646376,0.652720,9.944896,-1.224961,5.693155,-7.615055,6.612509,-5.837272,9.046649,-6.742293,-2.572036,0.874373,6.433969,4.728784,2.093186,-7.239236,-9.753509,-3.215230,9.010729,-8.804528,-6.721538,3.145166,-1.451597,1.422898,-8.545953,8.681579,-3.992113,-7.833140,9.340306,-8.610352,-4.889863,6.447219,5.379253,9.300553,8.837112,8.501276,-4.119616,2.880900,-2.515135,-9.701717,1.085372,6.458288,9.827972,6.631188,-1.740276,9.224748,3.262922,2.917394,-1.814504,4.547667,9.458957,0.948412,4.984585,-7.059963,2.565577,6.232212,-1.764866,-3.363809,-4.875676,-3.022917,-3.281672,5.099015,2.396276,-8.404259,7.333805,9.764381,-8.764568,6.855347,1.679826,1.600521,-6.613579,2.855011,9.355752,-0.529806,-4.419965,-9.530413,9.345880,-4.563489,2.927014,-2.149719,-2.709976,4.151459,5.083371,-7.820045,-3.018429,7.404785,-9.683339,3.683752,3.847757,7.336047,-5.189731,-8.588219,-7.239815,-7.798955,0.765181,-1.947120,-9.561732,-6.742037,-6.774768,5.157407,-7.072090,-5.063763,7.889211,-2.692308,6.668692,-9.618773,-8.731612,1.104521,9.926616,-2.199251,0.997714,-4.350342,-5.695050,3.711667,-7.678632,8.814412,2.958016,3.889684,4.498521,7.227664,-5.596508,-1.855288,-5.284611,9.574869,-2.939066,-5.375648,-7.338969,2.277102,0.198267,-1.016073,6.544997,-6.970129,8.652174,-3.219778,-4.345169,4.558468,5.808097,5.747940,-8.503974,-8.054646,-7.340883,-1.664302,0.267487,1.339399,-4.957973,-8.758828,3.590837,-3.874793,1.941459,7.233728,3.984235,-9.074575,-5.412373,-4.524712,-9.478567,2.413604,-0.104151,5.301149,-2.476905,-4.786707,-6.924203,-7.887251,-8.949960,-8.865440,9.833440,4.982493,4.349537,-7.484310,1.058173,-0.963516,0.467988,-2.046164,6.640429,0.092732,-3.213789,-7.800060,6.624858,-1.605591,3.388250,4.771745,-7.704096,1.897485,-7.815312,5.415548,9.789892,7.792426,-5.392585,-2.118311,9.334536,9.925924,4.867294,7.238214,-7.516060,-7.929464,-3.369603,1.303469,-7.476018,-7.682410,-1.891426,-1.245895,0.766817,-1.707404,4.123743,6.941638,-1.286458,-2.419001,-8.499685,-9.450972,7.575153,6.219907,-1.850615,-1.046741,4.808071,6.403801,3.600642,6.179954,1.029259,-9.426800,-6.683493,-4.813542,-2.380350,4.355564,-6.641699,6.923196,-4.802106,3.089388,1.502105,-5.206538,4.951150,-7.998359,3.580024,6.370936,2.206272,-3.483350,-3.754672,9.708327,1.576707,9.826667,-0.579710,-7.418531,7.147689,-2.994888,2.063330,-0.877283,-5.880259,7.856146,-6.587044,6.598887,-4.511754,-2.220026,-8.867840,3.796251,-9.749706,7.393655,-9.667209,9.248541,4.236292,-3.019468,-2.787925,6.978820,-6.280005,2.403232,-3.935356,-6.792360,-3.969025,2.118201,-0.596638,-8.586081,1.904515,-2.082210,7.611248,-0.927480,3.928681,-4.203911,9.501780,-6.635216,-6.243074,-9.987814,-7.852430,-7.408583,2.493460,4.314459,-5.850291,-5.651760,2.396658,4.900641,6.403791,-7.049177,6.325188,-6.225378,-1.986948,-4.286541,-1.450563,1.646034,4.121041,5.911165,8.888224,7.877444,1.059075,-9.573789,-4.444531,1.838318,7.571633,-9.320595,-7.613247,6.755681,6.760412,-5.161532,-0.936686,2.362754,8.202096,8.061480,7.434950,-1.546705,-3.896260,-6.292239,7.091377,-6.377053,9.989834,8.581092,-6.035147,-4.552324,-9.845785,7.359790,3.522964,-6.834139,-7.158453,1.980716,-7.333888,-0.030097,-2.397361,0.819139,-7.951750,-4.298174,-5.340600,-5.330921,-6.022619,0.261286,1.413469,-0.720312,1.016133,2.326631,-4.911917,0.758194,-1.949806,5.827839,-1.923007,-8.211009,5.229965,-9.323846,-5.114402,-8.324804,-5.900930,7.156108,-5.621783,-1.532142,0.455324,0.581162,-5.080215,-9.418716,-6.229960,-4.930739,5.641071,-0.159835,2.900127,-5.629234,6.002821,5.497313,-8.438173,6.724626,-5.867905,-2.695463,3.074675,0.671886,7.766088,-9.039671,3.440165,-1.256035,-4.149048,9.363211,-3.716330,0.724202,-3.551554,6.849114,-4.304218,-1.158653,-7.409248,-1.170464,-0.214333,1.511440,1.024399,-7.449982,-2.189629,5.013975,9.128732,1.032266,4.320754,9.621236,8.506986,-1.114370,3.967531,-2.422237,-2.279426,3.540696,-9.473549,-2.912668,-3.197661,-7.750228,7.928319,3.730476,5.093884,-9.921212,-0.709557,-8.355554,-3.824275,4.691213,0.198640,5.626514,-9.240143,2.574652,-9.741362,-7.667998,-6.875142,1.402200,4.761749,-9.543954,4.583619,7.830668,-1.785125,3.263006,-4.427117,-2.037359,-1.884226,4.349902,-3.128946,5.661939,-7.450858,7.328288,1.213245,7.263955,-5.749948,0.204396,-1.565720,2.054933,-6.277984,-7.580957,1.773831,9.005791,-0.228889,-7.837675,0.259996,8.918162,7.346369,-4.082505,-2.429370,2.861468,1.570405,-8.370235,0.987168,-2.945713,2.210371,5.015904,6.479802,-0.655497,0.179973,-1.139248,1.571382,1.110932,-8.085820,9.348599,3.939763,3.059083,1.083876,-1.162331,7.263082,-8.761486,2.699805,7.926454,-7.776127,4.305191,-9.978310,-2.685053,8.814742,9.078980,3.181979,-6.812104,4.333563,4.627912,-9.396350,-0.863626,-3.733706,-7.059760,-5.560746,-2.873968,3.475376,-4.538704,5.721815,0.455353,-9.403894,6.003400,6.844686,-4.495276,6.290551,5.951717,-8.245551,-5.240554,3.239700,-5.362584,-1.365603,-6.508529,-5.483040,-6.329035,-3.315664,7.607352,-9.494929,-9.545012,-5.259420,-1.582871,5.757993,5.183889,6.328795,-0.292097,-8.192134,-5.328108,-6.202056,9.499231,-7.457464,-4.312380,8.909238,4.888811,-2.576292,-6.403446,9.675958,1.494181,-1.514185,-4.061713,-3.698296,-7.163339,8.620962,3.549225,-7.714253,3.241044,-5.780236,9.281448,6.072225,3.071978,-6.932358,-8.795422,6.806235,-0.823484,4.604611,9.571473,-0.574557,-2.227286,7.652475,0.521263,-1.279207,-9.131882,-5.260674,1.998494,-1.903974,-6.265702,-8.580949,-7.584350,-4.542990,3.616416,0.218767,9.493157,3.483955,-3.707937,5.582655,-7.366097,-4.542731,3.765816,-7.325267,-6.693609,1.971785,1.890691,0.643019,7.202141,3.609034,6.361342,-0.917836,-0.715258,2.421010,-0.889650,-1.899104,-0.078200,4.056261,8.752850,-3.180975,-7.712051,-7.882662,7.838504,-0.345373,4.621405,-8.616810,-4.175767,3.722580,-3.726315,3.217400,-7.616933,5.009604,-6.509341,-2.684598,-6.263491,4.099522,-5.171236,-6.600246,-5.905967,3.613899,-9.580848,-8.999196,-8.725463,0.929117,-5.316058,3.499492,-5.226104,-1.834691,3.147722,1.126536,1.789931,-2.695202,-3.794408,-6.262064,3.547189,7.727625,6.049377,1.327579,7.656781,-7.319062,8.689152,-4.641203,-7.776636,6.191011,1.296974,5.059027,0.065708,0.164716,-6.741468,-1.811617,0.858495,-4.706959,-4.646554,-8.092599,-1.618426,1.926602,-3.387058,-8.714439,-4.119660,-6.029688,-2.959796,5.662800,7.280044,8.764417,-1.965340,-1.597881,7.790823,-0.614845,-7.640499,-4.553680,5.452005,-1.657355,5.637354,-7.320582,-4.982104,-7.065608,-6.138302,9.412750,-2.858036,2.619529,-5.577953,-6.123020,-6.277752,5.820082,0.490924,-6.117759,-6.285156,-7.104611,6.353434,8.468459,9.537904,-3.893878,8.066776,9.492549,-7.022560,-5.727762,-9.008987,3.641011,8.578780,3.613826,-8.801722,5.751622,8.116639,-0.083379,-0.926167,-3.841545,1.291530,8.599357,-6.445614,-3.570466,-8.861682,-1.896585,3.179116,5.682247,-9.810153,6.654751,-8.428311,4.041871,-4.320973,-6.922953,-7.899795,-7.598553,8.904165,-7.170280,1.140112,8.933087,-1.867283,-8.850358,1.641602,-0.686354,7.239613,-2.431609,9.574630,4.398924,5.248462,-9.449966,-4.423978,-9.932678,7.903324,-4.116701,0.926224,-6.158665,1.319995,-4.726389,-5.907097,-0.252753,-8.524290,-6.683494,3.330336,-7.476116,1.209285,-0.393806,6.024947,-9.611251,4.969233,4.424064,-8.267384,-4.161168,0.261559,-9.196063,-7.868482,9.797301,2.555425,-3.000344,6.263872,4.141732,1.306994,-3.364770,-4.586690,0.759091,6.791204,9.130474,-3.660030,5.234889,-1.946119,-1.815306,8.772452,6.816179,6.086350,0.447457,-9.766279,9.678922,-3.194708,1.492946,-7.114620,-3.539479,8.715025,2.656533,-3.599320,4.717616,-6.363981,4.600983,0.764719,-3.675809,-0.177143,1.065754,7.294682,-1.272042,4.106933,-4.877324,0.644372,8.150857,-2.370388,-1.182223,-6.439224,1.337222,2.210403,-2.938616,-7.388245,4.355236,-0.089930,4.707971,-4.631821,6.569156,9.892146,5.417110,-3.010984,-1.575360,-3.849812,2.638838,-4.559804,0.390601,0.070069,7.404913,1.511934,-2.574714,8.564433,1.992638,-0.677883,3.584813,-8.303444,-0.390297,-7.971513,-8.947448,2.335666,0.731342,-0.548790,-1.285385,-2.790749,6.663470,-1.720579,1.782879,-1.744590,3.766525,2.779658,-7.320976,-4.490379,-6.361464,1.555066,1.639028,7.825815,1.453017,5.034521,5.953833,8.310218,2.136660,1.672392,9.870998,1.960402,-9.057742,-4.868228,2.886281,3.864621,6.544985,-2.126309,4.130070,9.585304,1.780243,-0.491677,-1.403896,-9.100631,-2.648921,-0.573712,8.578571,-4.664369,-2.780301,-8.121543,7.143815,5.891992,4.912952,4.370771,4.011545,5.191266,-1.854281,-4.871078,3.901130,-0.993654,-8.470235,7.457334,4.572438,0.849135,-9.888947,0.321841,6.779125,-7.289999,-7.367506,5.650433,-7.632330,-1.725832,0.208637,0.054591,0.798242,-7.716410,-9.675432,4.467928,9.207014,1.962589,8.530838,-3.999065,-8.951746,3.029801,-8.398599,-7.205799,1.336023,9.891307,7.973456,0.335778,0.906098,-0.408526,5.871765,1.669589,-9.624733,1.734900,0.710112,-9.635661,-0.455985,-4.764131,3.906880,-2.478623,3.959140,8.530730,-8.861030,-0.167944,-1.760897,-4.095883,-4.922784,-2.698131,-7.030858,-6.827871,4.778249,1.642846,-7.930699,4.649071,9.414250,-3.668817,0.902277,4.235926,-6.012422,4.507229,8.250678,6.727697,0.858316,-3.450974,8.103130,6.996385,-1.087684,-3.396800,-7.121130,-9.200511,4.326274,3.165628,-2.879138,4.946743,-8.916886,0.222488,-1.356961,7.832450,-0.837567,6.079961,5.882787,6.784992,-0.387302,-2.425548,4.889909,-2.364721,-0.305260,2.830642,-2.859205,3.485420,-4.461094,-5.159140,1.737911,-0.653676,-2.051852,3.849703,6.024283,1.548346], dtype = "float64")#candidate|7570|(1540,)|const|float64
const_7571 = relay.const([[-5,9,9,-10,2,-4,2,6,10],[2,-10,3,-3,5,6,-6,-6,9],[-6,10,2,3,-1,5,4,1,8],[-10,-10,2,8,-9,2,2,8,-7],[3,6,9,-7,9,-7,-2,7,-3]], dtype = "int32")#candidate|7571|(5, 9)|const|int32
call_7569 = relay.TupleGetItem(func_2259_call(relay.reshape(const_7570.astype('float64'), [14, 10, 11]), relay.reshape(const_7571.astype('int32'), [45,]), ), 4)
call_7572 = relay.TupleGetItem(func_2263_call(relay.reshape(const_7570.astype('float64'), [14, 10, 11]), relay.reshape(const_7571.astype('int32'), [45,]), ), 4)
output = relay.Tuple([bop_7522,var_7527,const_7528,bop_7538,uop_7560,call_7562,var_7563,call_7565,var_7566,call_7569,const_7570,const_7571,])
output2 = relay.Tuple([bop_7522,var_7527,const_7528,bop_7541,uop_7560,call_7564,var_7563,call_7567,var_7566,call_7572,const_7570,const_7571,])
func_7579 = relay.Function([var_7520,var_7521,var_7527,var_7537,var_7563,var_7566,], output)
mod['func_7579'] = func_7579
mod = relay.transform.InferType()(mod)
mutated_mod['func_7579'] = func_7579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7579_call = mutated_mod.get_global_var('func_7579')
var_7581 = relay.var("var_7581", dtype = "uint64", shape = (2, 11, 15))#candidate|7581|(2, 11, 15)|var|uint64
var_7582 = relay.var("var_7582", dtype = "uint64", shape = (2, 11, 15))#candidate|7582|(2, 11, 15)|var|uint64
var_7583 = relay.var("var_7583", dtype = "float32", shape = (1755,))#candidate|7583|(1755,)|var|float32
var_7584 = relay.var("var_7584", dtype = "int8", shape = (1408,))#candidate|7584|(1408,)|var|int8
var_7585 = relay.var("var_7585", dtype = "float64", shape = (252,))#candidate|7585|(252,)|var|float64
var_7586 = relay.var("var_7586", dtype = "float64", shape = (120,))#candidate|7586|(120,)|var|float64
call_7580 = func_7579_call(var_7581,var_7582,var_7583,var_7584,var_7585,var_7586,)
output = call_7580
func_7587 = relay.Function([var_7581,var_7582,var_7583,var_7584,var_7585,var_7586,], output)
mutated_mod['func_7587'] = func_7587
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7753 = relay.const([[[7.173969,8.743489,-9.674393,6.596112,-8.963367,-4.144171,-4.084928,-7.257748,-4.020588,-1.629997,8.651029,-9.403055,-6.899949,-5.996932,-5.850308],[-7.766308,-6.914856,-4.738586,-9.474462,7.006737,-3.294396,-0.890918,-7.589973,4.200827,7.517369,-9.170653,-3.841882,-2.494038,-4.286694,-9.102283],[-2.529562,-2.267258,5.587467,2.570930,2.729156,-3.781655,3.492210,-0.374212,3.119256,-1.740461,-3.789680,4.779522,1.713552,7.357412,9.502226],[0.591818,-7.898203,-0.365995,-9.013091,6.881757,6.833887,8.682630,1.470508,-7.581080,6.547790,8.045550,5.925454,-0.111236,-4.058403,3.608890],[-7.718664,7.980554,-8.848860,-3.924455,-0.073433,-6.388252,2.851190,-4.914980,-1.886038,2.768250,9.075771,3.706705,6.636387,7.867531,7.176264],[9.227230,4.201546,-1.810399,4.231008,-4.751255,3.921694,7.728462,6.258870,2.995122,-4.041934,4.494086,2.003667,0.291170,8.277164,0.496758],[8.946587,-5.581541,7.736129,-6.092481,2.844939,-7.428755,-4.851554,0.685176,1.924313,8.819011,3.718717,5.051178,6.808090,9.935715,-2.285804],[8.887054,-7.916568,-7.267369,-1.570288,-5.373965,-1.658751,-3.463586,-7.699306,-6.268586,-5.269111,3.726261,-7.603503,3.111397,5.070507,-6.233533],[3.331753,0.134836,2.774284,7.516633,5.679934,6.913884,9.573411,-0.108495,8.741268,3.539177,-7.852914,3.051109,-6.767086,-0.181238,-0.162344],[1.401666,-0.532875,5.706478,-2.590279,1.968054,-4.083693,0.181286,1.018753,7.740381,-0.244407,-6.194644,4.476954,-7.966336,-6.923846,-8.253346],[5.311477,-4.072813,-7.515931,-5.908719,3.878133,-4.018951,-9.914081,9.985081,8.914780,5.336050,4.417973,-5.217019,2.797993,-9.282219,2.671358],[-7.408821,-5.085008,-6.937656,-8.706825,-8.619679,1.068614,2.340482,-9.428787,7.593343,2.572914,-2.254781,-5.147524,-8.818983,1.011622,-9.482397],[3.094502,3.621455,3.446620,-2.582826,-8.123856,6.263598,-4.359240,-3.703638,4.670556,-8.588053,-2.122332,-1.849954,-6.909881,-2.591686,2.876803],[-5.521357,-8.350106,0.435211,-6.397025,7.932078,-3.162248,-4.652932,-8.940309,6.079869,-4.240593,-1.176647,-4.704360,7.403812,6.848793,-5.466992],[-5.889964,2.556371,9.258365,2.365357,3.044982,-4.366378,7.995657,-6.052103,0.812594,-4.309300,2.846657,-8.815632,2.906501,-7.739250,-9.652499]],[[8.471728,-3.158162,5.611656,3.447025,0.978909,5.016792,-2.165342,-6.955442,-9.263867,1.101875,6.197751,-2.400200,-4.286492,8.462225,-9.628090],[-4.730360,5.364231,1.624376,-0.027466,1.416460,4.586619,0.666296,0.433547,-3.513678,-6.579716,-7.618921,-3.882757,7.217186,-3.281881,-2.625878],[-8.223096,1.322468,9.090379,-0.326188,8.731013,2.341332,5.905484,9.906990,-3.902387,-7.491652,8.837507,-4.827298,4.037296,-2.632689,-5.453916],[0.354370,1.770743,-7.386308,5.498487,-5.883374,-7.184830,1.966590,8.135512,9.377480,-4.055122,-2.547652,-1.753032,1.210865,-0.669415,-1.362050],[-6.595726,-4.653128,-2.736767,-7.553519,5.798647,-5.163495,-7.227487,1.885656,-5.502974,4.753455,1.703603,-7.029970,-9.488475,6.652867,-3.521049],[-1.738049,5.592377,-9.405397,4.456323,4.375810,-5.070914,5.175623,8.556031,-2.959918,5.787079,-4.558068,3.133767,-9.770506,1.733280,-7.472438],[8.298143,-3.416594,5.592392,-7.948680,-7.834778,-9.205759,-6.854239,6.236602,-2.408364,0.281990,-7.753916,-8.775591,1.121663,3.199312,3.838226],[-6.275860,-0.950639,2.410168,9.766518,4.675728,-8.274624,-6.437061,0.318217,-3.944670,9.622997,8.884950,-8.851973,1.471528,-6.251744,-3.267952],[7.983999,6.455139,8.213866,1.833731,-6.670340,-1.762081,-4.590576,1.177363,9.677224,-1.948008,-6.351577,-9.901388,1.825003,-7.501086,-4.744151],[5.552606,9.741669,-8.529308,-2.797602,8.008931,-7.688163,7.180718,3.446581,-0.678245,-2.788337,9.828802,-9.276069,9.495311,-4.595486,5.090896],[-0.829349,-6.936476,1.163989,7.744887,-0.123196,5.056070,-7.329507,-0.530665,6.322388,-8.656830,3.385390,-5.212851,2.063395,7.719301,7.481341],[1.253496,-9.089565,4.848720,-9.789581,9.451313,-2.230255,2.670100,0.543463,-5.739765,-2.076545,-1.001751,-4.519853,1.735755,5.441652,4.019574],[8.984036,-3.132850,-3.803462,-4.121706,-8.239580,-6.103419,-3.572654,-2.346262,6.437640,-7.479683,2.909749,5.064778,-0.969547,-0.065931,2.741861],[-1.232942,-0.887822,-9.182035,8.175994,3.198852,-6.887117,-5.528586,5.955558,-7.401475,9.091914,-4.079202,-6.494969,-7.478122,-7.935889,-0.578948],[7.306737,-3.885605,0.447263,-8.164586,0.251489,8.256187,0.737223,-5.121635,-4.859184,2.605045,-7.734486,-8.490374,8.369143,7.640097,7.551934]],[[-6.707239,-3.094248,-5.394435,8.367920,-4.968458,-3.238699,9.386364,6.310628,-3.298276,-5.770816,2.196331,7.191633,2.945978,0.943580,-7.954789],[-0.821067,8.146250,-7.838245,8.193388,-4.040207,-5.522390,2.513377,5.466918,-8.171744,-0.787824,9.029198,6.057034,0.452649,-0.618479,2.792865],[-9.143139,9.093034,-7.523503,9.296393,7.416279,-4.712232,3.313433,3.611239,-3.663942,-7.307311,0.830264,7.607194,0.832346,6.431810,6.041751],[-8.927057,8.011053,0.593938,6.365026,5.807558,-9.298105,5.945267,8.666675,-5.772000,-7.629496,-9.562261,4.063686,-8.413541,-7.923703,-7.173065],[-1.440753,5.467319,-3.905090,2.082496,-8.457546,-4.895343,-9.026812,-8.842162,4.154249,-5.386845,6.257608,7.662672,-7.642767,4.959260,4.611502],[-5.407417,3.963359,6.204375,-9.836433,3.046343,0.186387,7.747895,4.029080,0.354206,7.509016,-0.870486,-4.897939,9.758160,2.106454,-8.108315],[-0.782948,-8.024591,-6.962655,2.852645,1.804145,5.546754,-9.096120,-2.447508,-7.245238,-6.598231,5.828010,6.406808,-2.050635,-8.975839,4.910798],[4.596274,4.075973,3.190207,7.022423,-2.533640,-3.469731,-6.226845,9.795166,-5.726002,-3.446777,2.824636,-1.814522,-4.468632,4.233006,-2.825763],[3.377043,-6.850464,-5.153536,-5.695351,-7.118626,-9.691792,3.166514,3.206547,3.367824,-7.930377,2.316027,-7.341763,-2.176076,-8.971775,4.823958],[3.498503,-4.197179,-2.830218,7.619697,3.548982,7.913337,-3.952609,-5.423009,9.777747,-0.727155,8.616703,6.221024,2.726157,-6.952998,0.519754],[-2.914184,-7.935917,-7.337036,4.568893,-4.580494,0.956037,-3.837471,-3.022950,-9.140435,8.863102,0.109381,-1.478694,-5.662605,6.371196,2.376845],[-2.660129,0.216619,1.729048,3.664756,5.519070,7.301715,-0.789956,0.831811,-5.006374,-2.712963,-7.333250,-4.672695,6.540914,-6.894540,-7.970813],[2.215818,3.779864,2.428025,6.441283,-7.348775,-0.008146,9.553639,5.790363,4.925457,-3.894065,1.836133,-8.245566,1.665988,-3.608844,-1.003073],[-4.323595,-1.771005,-6.454515,-1.183124,-4.624689,-3.106106,-9.307627,7.888896,-7.839819,0.168888,7.947142,8.706173,-6.679196,0.594889,-4.760281],[6.396728,7.211297,5.335566,-7.918520,0.306987,-7.325899,9.816581,-5.025560,-0.014724,-4.323912,8.528695,2.016958,7.245206,-1.477216,-0.136305]],[[-5.705018,9.795304,6.347542,1.351294,-1.202876,1.081021,-6.467601,7.712054,7.557591,-2.371862,8.184392,0.984706,-7.414164,-7.019778,5.670210],[-6.189195,6.970420,-2.053619,-7.697258,-0.066396,-3.536036,6.355300,-7.210047,9.378011,-9.074428,1.721128,-5.809327,-4.177412,8.318175,2.743062],[-0.798670,-7.868499,4.831534,-2.378552,-5.511190,-9.961014,-3.413879,-8.867821,-2.564625,1.962486,4.468546,-3.800498,3.083126,-2.689913,5.871463],[-8.581473,2.256505,1.372217,0.215077,-8.334796,-6.213345,-7.489040,-9.334769,-2.815409,4.273436,-1.906699,-4.619770,-8.583848,9.012959,4.422995],[-9.659648,-8.011544,-3.565299,-5.757567,-9.705345,-6.886127,1.873776,1.831229,2.761134,-5.413857,5.581041,9.993266,4.952601,-1.077617,-3.095709],[9.646160,7.576313,9.641505,-5.476284,4.924468,-0.409843,4.748527,-9.894203,-5.511971,-8.629302,-3.112969,1.869937,-4.561728,3.947248,9.172903],[-5.255159,-0.711611,4.029108,2.180743,6.358129,-7.492996,-6.289573,1.286026,-9.617357,-0.189905,-6.211397,8.595030,-2.136596,-0.359904,-9.689369],[-1.905737,1.152460,-3.503347,-5.140004,-9.966369,-2.842886,6.882893,-9.378018,1.761838,-7.493954,-3.516140,4.081970,-9.517234,2.471171,7.480676],[1.028372,-0.760216,5.290642,5.943614,-2.856795,7.722234,-0.087130,-0.191535,-5.439275,0.289573,5.372561,4.129124,4.916334,8.388493,8.607642],[-7.234235,-8.739066,2.668225,8.549050,3.446385,-8.227313,-7.568852,6.291159,1.932511,5.448988,8.766330,-5.039588,6.726637,-4.716863,-9.059364],[1.007781,-8.958820,2.782896,9.904789,-6.875166,7.438615,-7.619524,9.332349,-7.880121,5.232195,-5.166151,-7.652474,1.001788,-7.068037,-0.172068],[0.735929,-1.504450,8.799142,4.920940,-2.834487,3.739359,-9.719432,-8.283720,-4.573963,4.745138,-7.559907,-9.414476,-2.082230,-4.299643,3.558436],[-4.767515,-4.171143,6.025076,-0.192987,4.159305,-4.683282,-9.535712,-6.932265,2.949411,0.251902,-0.722450,-6.833278,8.114080,-1.701485,3.354401],[-7.230355,6.414454,-0.631202,9.659381,2.574043,-1.578661,6.446853,0.282486,8.491778,-2.348814,3.706933,-7.716011,7.787445,-6.582198,0.571448],[-9.788951,4.917312,-5.264840,-7.398396,0.385110,-4.558691,3.539583,-3.458953,1.888486,9.018327,6.881836,-7.164391,-6.676915,8.261474,-1.724790]],[[6.169617,-1.300475,-2.912539,-3.771174,-1.343110,-4.003356,9.853538,4.908525,-9.011956,1.458517,-6.299838,-0.304549,-9.861545,9.842565,-1.574481],[-5.577989,-4.911818,-3.241335,-8.288288,2.768956,-0.819563,0.461793,4.858551,-1.896302,-8.802126,-6.619053,-0.486138,1.945711,6.394687,-8.692683],[-2.353436,4.459273,6.769250,3.690889,8.080444,5.066439,4.457367,2.453660,3.405003,-4.375270,-0.646941,-2.108849,-1.746623,8.350012,-8.249155],[8.168084,4.094018,9.445374,-9.935855,-3.698546,8.383538,-0.475079,-5.295416,-6.548585,3.340902,5.712629,8.573777,-0.543439,-0.654623,0.360215],[5.850777,2.484677,-2.856782,0.501828,-8.757549,-9.112154,4.443946,-9.741792,-8.608841,7.755597,3.453053,9.628440,5.648532,-4.252304,-0.253603],[-8.152988,-6.830231,-1.858431,4.667611,-1.475283,1.457434,2.812908,7.825487,-0.213925,-1.515127,5.535807,8.932079,-3.476881,-3.050186,-7.538998],[2.801697,-1.894678,-6.107410,-7.702208,-6.554399,4.429690,5.255177,9.363380,-5.430277,-1.848389,9.329551,8.371338,1.068824,9.268359,-9.908335],[-0.730630,8.799417,-5.732838,3.184165,8.601195,6.082756,8.765831,6.910610,1.261718,-5.136003,4.100853,5.032397,-1.887787,-3.442829,-3.267398],[0.133798,-7.574220,5.072479,6.358662,7.082972,-9.941194,8.090754,1.010250,-2.121806,0.069464,7.788457,9.196227,5.106013,2.216563,1.338380],[-2.461202,-1.562276,9.083071,9.202206,-3.859816,8.309839,5.834691,-1.702853,-2.368153,9.954396,7.156354,-2.889164,1.459829,7.751093,7.426616],[-5.121846,6.152162,1.378089,-0.616379,8.842164,4.906421,-4.847200,-4.281230,-8.173895,6.464428,-2.309633,-3.505777,7.550973,-1.333170,-3.685065],[-7.209251,6.490485,8.702779,-6.832458,-2.380222,-2.939260,0.919068,-2.934471,6.927284,-6.543094,4.555653,5.038963,6.914287,0.970502,8.147084],[2.869668,5.898229,-6.840021,5.173783,-5.951599,-1.839705,-3.968024,5.572694,7.258123,7.669439,-1.911002,-1.963019,-2.097731,-0.204988,0.551178],[5.477163,6.387992,-3.607871,9.036369,3.464055,1.752566,-6.375587,5.646967,-1.417739,-2.022252,-1.872589,-3.325095,-1.344521,-1.492668,9.477183],[0.835862,-5.084786,7.411260,-1.751850,1.170356,-8.776692,6.015993,-3.624909,1.874478,-1.132957,-2.177266,-4.855157,4.925092,9.440353,6.676924]],[[-3.840694,5.346561,-6.568425,8.785289,7.366665,-6.953189,2.154828,-4.603138,-6.340821,-2.417864,8.787185,2.960304,-1.682423,-0.881104,-5.929844],[-3.578361,-0.663576,2.993414,-4.275064,0.521521,4.178561,0.445580,-5.070352,-0.911009,0.947682,1.349462,0.307694,-1.821252,1.822713,9.813904],[3.805086,-6.894213,4.740093,-1.565853,-3.950906,4.667688,7.820134,-3.598016,-0.410729,-4.191180,-0.035927,-5.220748,-9.921702,7.246562,-8.533473],[4.598876,-2.972206,7.188159,3.560798,1.358954,-9.294366,-8.343879,5.089778,8.613836,7.009038,-1.060504,5.776497,-6.062882,9.072959,5.785117],[-5.625350,3.573164,7.057781,9.436027,-2.833577,-9.889083,7.383503,-4.976324,-3.274002,6.229312,7.908903,7.185158,-2.832120,-9.809709,3.481427],[7.402630,-1.239372,-8.106628,-1.088586,5.516585,-9.376215,0.002908,-0.625239,-3.934905,5.732271,-8.125510,6.707008,6.257903,0.249181,-2.866975],[1.607728,1.098789,-2.978716,3.879298,4.125796,-9.760867,9.626251,0.573175,9.339841,-7.274974,0.494694,-3.230414,-6.201878,5.774624,3.384194],[-8.194291,4.491420,1.482939,5.499005,-2.128321,7.871483,-2.472610,-1.843169,-2.814176,9.380769,-8.995486,4.335041,-3.635410,-8.178440,-3.145344],[3.204992,8.117954,-1.384206,-4.488945,0.303585,-6.862986,3.185254,6.263411,-1.885997,-8.681632,-0.205615,8.371274,0.081775,2.596697,6.134036],[1.909251,-5.663024,8.537374,0.268623,-8.894959,3.930403,5.518546,4.387809,-8.671386,-8.653318,-2.425310,-5.551701,2.189588,3.232989,5.151757],[-3.980828,2.559480,2.111077,9.196411,-8.691322,-5.178322,-4.924461,2.985387,-2.795085,8.633912,-4.002112,-5.777947,7.770121,-6.500710,-3.743510],[4.349806,-9.823770,-3.477492,-4.791645,3.760830,5.065624,-2.426816,6.435480,-4.579780,7.768021,3.834686,4.519686,-5.857461,8.028371,9.624751],[5.347826,-5.326866,9.263669,7.643529,-2.265599,-4.459941,-2.169391,3.731199,-4.716428,-7.626806,9.887404,5.602006,9.780274,-8.483432,-8.290249],[-0.165182,-3.787717,-3.434671,7.824741,3.702375,-7.269942,-9.009643,-0.682111,-1.731857,4.885881,6.954994,-2.596119,4.322834,-1.345417,-7.547186],[7.463560,-7.279525,0.890826,7.328019,3.987305,-7.085242,-5.829157,-1.566109,-4.640719,-1.596979,6.817969,4.489036,-5.302807,0.758799,-4.725202]],[[-1.047989,9.071462,9.862054,1.955989,5.158206,-7.727107,-6.254265,-5.103686,4.744007,4.900334,-1.854540,4.908378,7.455594,-0.795857,4.157792],[-2.215023,-5.307998,-4.993014,2.757464,-6.910250,-7.670167,-8.188517,-5.976512,-6.085615,-4.575596,7.624416,-3.773632,-1.382579,-7.684979,0.062788],[3.567903,6.140716,2.801939,2.399949,7.615649,2.236000,-9.927487,-8.821291,0.988256,3.660272,1.810593,-9.342206,9.906590,1.141438,-1.490650],[3.913091,-1.520152,4.995283,1.576680,-8.644194,2.085480,-3.247967,-5.440984,-8.392479,4.674691,0.547300,-6.756357,1.455650,-2.592389,8.279333],[5.804417,-0.248119,-4.085179,2.125810,-2.991768,-1.658044,2.630080,-5.381093,-2.544004,3.044581,-3.509205,-4.329405,9.737385,-5.365142,-8.730700],[-3.089911,4.838499,4.282929,-5.180915,5.855498,0.532690,-7.455729,-3.138414,-4.693261,7.171136,5.636480,-6.838449,-9.375856,3.958593,1.992969],[1.891628,4.382306,-6.909313,-5.175140,2.697793,4.031395,3.085106,1.045699,-0.703139,-0.186974,-2.482854,0.024043,1.116838,-5.855362,0.720528],[-1.293174,4.881544,0.437576,2.258641,-8.752509,2.686983,8.314197,-4.620807,-2.918290,-2.889986,-4.182147,-9.292978,4.821735,-9.130468,-9.021871],[7.101632,-1.238891,-3.062568,-7.798856,1.055656,-4.149624,-9.936309,5.049098,0.377847,-1.677100,5.961240,-1.485952,-1.751416,1.286085,0.028511],[-6.117670,3.352192,3.253364,-0.473357,0.794440,-7.223130,-1.802479,3.248067,9.632370,-9.920072,-1.327762,6.696215,2.440339,-2.352046,-2.460683],[3.062982,-6.552282,7.495216,-1.152538,7.711223,6.413657,-1.874379,-9.597014,9.349109,-2.255757,3.953532,1.924058,1.787039,8.634184,-7.679630],[9.646834,-3.030281,-9.418891,0.740713,-7.251011,-4.766678,-4.119867,6.641859,-5.695388,5.563109,-5.700743,8.358126,7.220250,1.965318,-0.343132],[-4.455130,8.311014,6.699585,-9.824986,-0.667848,8.091442,-3.612894,6.141295,-1.382295,-4.571550,-1.050982,1.394095,7.952440,-1.052010,6.154521],[-6.353369,-4.288241,-6.564300,8.210219,-0.345622,5.446987,-8.509590,-5.497621,-0.479917,8.408272,-8.095846,5.701833,1.955453,-0.769407,7.061268],[-9.342130,1.893396,4.008685,-4.498507,-0.801176,8.733854,-3.752829,7.853967,4.672213,9.302158,-7.439908,8.515285,5.634262,-1.835090,-5.353563]],[[4.730723,7.590843,-1.724760,3.874636,8.144985,4.111118,3.129354,-3.934640,-7.018118,-0.130704,-8.855484,4.115201,4.360551,-0.719071,-7.060838],[2.588040,7.105187,-5.840174,-4.083230,-3.398129,7.549181,-0.743391,5.453702,1.285888,-1.388134,-8.951480,0.019293,-1.231365,-8.060340,-7.674564],[-7.630922,6.673403,7.801968,8.330113,2.214855,8.476696,8.756817,9.436138,2.623496,4.392812,9.407154,-5.085563,7.823502,1.557524,-9.626617],[2.890114,9.077448,-8.164712,-6.324562,-0.205460,-1.754159,9.540246,7.144677,-2.022141,7.079853,1.702962,3.542376,8.983427,-9.114471,5.193662],[7.125209,1.631115,2.019533,0.158204,5.883487,2.837504,1.426315,-4.541536,6.372028,5.365260,-6.616248,8.718122,8.682411,-0.640599,7.219995],[-8.144229,-7.755099,-4.074300,1.533272,-8.667357,3.245000,-5.946685,-5.553355,-6.074273,-2.071557,-8.613445,-5.287185,-3.067981,6.655305,2.039863],[-1.408641,8.013592,-5.860137,-3.290475,7.198402,-6.239819,-5.041783,6.873445,4.102865,1.244256,-8.396712,-3.641650,6.586227,-3.165051,-2.306251],[-2.895614,5.691232,6.100099,1.255279,0.160397,-7.495820,6.034168,3.358007,7.234828,-4.707951,-2.288294,6.785133,8.771434,4.278126,3.865075],[-9.122825,1.476979,4.496370,5.573854,-4.451201,4.942161,-3.025014,-9.282827,9.356038,3.385976,-4.038028,-9.119374,-8.232000,-1.555228,5.605927],[8.872674,9.120168,5.415185,-8.708303,8.167023,-6.033935,1.079035,-5.895191,-1.702845,-7.558447,8.013919,4.202888,-5.866858,-3.513877,4.211197],[-0.817681,1.545368,4.361066,-9.220726,7.648272,8.062678,-1.594204,-4.553573,-1.520251,-1.552826,-8.139150,5.289962,-9.247152,-9.553793,-2.296707],[-7.342098,-6.313837,1.125246,5.874395,3.497685,6.359066,-3.849458,-6.103284,-8.458788,5.846418,1.458801,3.776269,6.182177,-9.421717,-8.374830],[0.849329,5.242625,-6.941745,-4.082677,-5.568183,-4.825509,-9.650655,4.421684,1.678493,1.008177,-7.000907,6.911237,2.128605,8.237778,-9.399327],[-6.082882,9.636534,4.556293,-4.464767,5.341528,-2.856739,5.156275,-7.624312,6.058127,-3.799958,-0.330734,6.687491,-7.014181,-0.005868,-7.237714],[5.756696,-8.903068,-1.074914,-5.628526,8.334074,4.927817,8.966683,-7.175371,0.707503,-6.646070,-2.544521,-7.305763,-3.975325,-6.686357,0.302830]],[[6.850734,-3.439590,3.136362,4.948598,3.482311,0.041252,-1.363858,8.260272,-2.090025,-6.944004,6.079762,1.781790,-7.584467,-3.205097,-7.333392],[9.729637,4.814717,5.073140,-9.450055,-4.581351,-1.729389,-2.658422,8.908768,0.014766,-0.825795,-5.472438,2.369942,-7.219506,9.637887,-1.158454],[-5.322302,6.135339,9.606793,-2.131429,0.512373,-5.393872,-6.056094,1.346126,-7.387141,6.750799,-3.106137,-3.440563,5.912973,-8.534085,-3.226848],[-7.219451,-8.077852,-0.950941,-4.113722,-4.900921,7.920041,7.383606,9.215514,7.847248,-9.171224,1.617564,-8.333187,-3.035102,-5.402918,-6.056239],[8.427589,7.096318,-1.750494,-7.349985,-5.669583,9.919546,7.173031,2.621117,3.264467,-6.450534,6.342106,-5.486469,-5.788715,6.921747,8.930563],[1.817769,-3.349884,8.614899,-7.223786,1.421743,-8.974517,-1.031053,-4.072665,-4.510250,1.631780,6.463655,-4.666023,-7.352047,-1.961384,2.171937],[-6.615747,-0.354566,4.253943,3.076313,1.022906,-4.547153,2.637774,0.122549,-4.960139,2.978398,3.307775,-8.580082,3.278202,-7.166827,-6.537671],[5.947183,-1.886516,6.471847,2.491295,9.075344,-8.727318,-9.960717,-9.901147,8.145887,-6.850228,-4.622440,7.484124,1.302166,-0.869016,-7.809692],[-6.495803,9.287365,7.992964,-8.842248,5.698170,-5.091504,-6.820908,-3.892996,-3.482260,2.217556,-2.365703,-6.392116,8.920237,-0.849419,2.943458],[-8.479978,5.155818,-6.553043,2.870538,4.406700,-8.889687,-0.442073,5.584426,-6.081393,-7.754059,-3.875770,3.767331,-4.174395,-7.222908,-0.332935],[2.237107,2.968163,-2.149942,4.294551,4.193178,1.191325,-9.480046,-3.183993,-5.664896,-9.416253,-9.032001,5.060155,8.386116,-3.981190,4.635780],[-1.228255,-9.867363,5.272295,4.605004,-3.571137,9.144692,9.408332,1.745775,0.164506,-3.990823,-5.041502,-3.105218,-8.562973,2.511590,-7.333797],[-0.198821,4.441875,-3.720872,6.346176,4.330334,-5.435338,9.400214,7.725347,4.064018,-0.451848,-0.962525,7.170734,3.709068,-3.323789,-6.087085],[6.753422,7.705640,7.280429,4.000875,-0.934787,-9.426234,6.107558,-2.388101,-9.174234,-1.692979,7.356385,4.554115,3.357750,-4.458070,7.346901],[-8.239031,0.666799,0.297323,-1.226280,-7.495497,-0.930148,6.902865,-7.375065,-3.077353,-8.530742,-7.670372,7.244103,-0.379172,-7.403756,-3.259137]],[[9.480096,-3.085398,6.986170,-8.929227,-8.531745,-0.375601,4.155120,-8.528921,2.525337,4.101085,8.891606,2.589395,5.285892,-6.875959,-7.501121],[-5.510716,7.036931,1.495690,-8.069207,-0.677734,-7.981071,8.868751,6.930816,5.954470,-1.140047,-1.673072,-4.907129,-5.061922,1.653803,4.956604],[-1.273835,9.332774,-5.820676,-2.930349,-9.010503,2.186950,4.924804,8.775513,6.311865,0.786634,5.970893,6.451207,5.685204,3.628690,-1.654073],[-4.379908,-9.101990,7.313191,-3.466568,-5.355504,-6.995933,5.828820,-9.339446,-7.252060,-8.237100,-3.021124,2.498045,0.765769,2.724052,3.537570],[-5.666802,-7.691879,-7.624612,8.412857,3.209237,7.796239,-0.556266,1.378859,2.606385,-1.775632,8.329322,7.655812,-4.823293,8.368232,-2.852919],[-2.540370,7.612647,6.547392,-3.183180,-0.393244,-9.049221,3.341341,4.377136,-1.785302,7.942776,-0.273101,8.388532,5.924218,-1.228412,8.485554],[-6.874356,6.112246,2.547348,1.535956,-0.044085,4.372730,3.801911,9.629083,-8.602544,-6.885345,-4.513903,-4.081833,-3.427352,6.700791,3.417658],[7.170657,-9.667004,7.752340,-1.669525,4.081038,-3.907719,7.415469,-3.046954,-1.649354,-9.149041,-3.031731,3.440517,-3.011605,-5.284442,4.919162],[1.526524,0.940360,2.747059,0.103188,9.376560,-3.074832,5.488917,-6.281968,-2.274593,-4.718913,6.652240,4.840427,-8.330154,-1.671334,-1.799825],[-9.863264,0.645577,3.024904,-6.008292,-2.554398,-0.655417,1.899220,-0.890585,7.582691,7.199173,-5.768437,-5.393458,5.951478,4.190232,3.528782],[0.440917,6.777317,-9.491947,-4.581366,2.341131,-8.744290,1.815354,-8.471152,6.564328,9.041600,4.463631,0.444126,8.039007,-2.320294,5.989100],[-3.371034,6.678705,5.235849,9.249051,-3.846128,-9.909620,-5.655695,3.222188,1.150374,-8.752927,4.461093,-8.065647,3.750437,7.914895,2.556471],[0.636493,-0.737068,5.006450,-2.485864,2.126197,-6.239077,-9.821788,2.948649,4.414768,-5.743578,0.755586,6.455564,5.289264,-6.607413,0.198524],[9.613046,5.511412,9.034280,2.649120,9.791942,9.563019,-3.280640,-8.887583,4.445091,-5.695013,9.947795,4.047604,-1.044400,5.882808,0.921320],[-5.945848,-4.109670,-7.745081,-4.149831,3.315540,-8.347271,6.675907,-7.758246,6.140373,9.897526,-1.858353,8.332346,-2.734069,-5.114211,-6.033575]],[[-6.246379,-1.930865,6.114575,-0.997271,-9.326555,6.766625,-4.525750,8.330329,6.589282,-0.728810,-6.058706,7.301630,-4.918856,5.454991,-7.818112],[6.263886,-7.220537,7.714451,-5.093152,-7.912935,2.759630,-4.710921,-6.667952,4.322117,-8.013462,7.007384,-6.885397,-0.112433,-3.474867,4.638170],[-9.823543,7.965884,-8.423946,-9.699412,-3.068633,2.570344,-5.963280,-7.140498,5.441939,-7.634735,3.136773,-9.019840,8.038641,0.433100,4.286944],[-0.060633,0.062417,-6.570587,-7.075834,-9.880464,4.286380,-9.007432,7.672571,0.629351,-5.577569,-4.202091,8.460510,7.352223,-1.222846,-6.692760],[1.039794,0.885479,-4.725183,-1.707831,-5.175536,6.190027,-2.536542,5.208470,-5.469198,-0.468707,1.583837,6.508842,-3.989458,8.672332,5.990989],[-8.135464,-7.074853,1.255243,9.102661,6.260767,-7.549765,-4.384306,-9.619859,6.392692,-0.692632,-3.169189,-7.586222,-3.966294,-5.796533,4.408798],[8.599134,2.411862,0.299994,-3.335848,-2.491910,-2.615849,-6.141606,-5.660489,9.722955,-5.471088,1.391718,5.568976,-4.807888,-1.998263,8.194283],[-5.235975,9.315702,-1.718520,-7.633414,-0.643958,-2.473389,5.650309,0.425595,0.203214,3.434055,-2.943086,-0.735350,5.128212,2.340698,-4.040696],[0.462676,0.142930,-8.306602,-8.774068,-0.136820,7.304040,3.102003,1.945134,-4.356027,5.651929,-2.951858,6.867583,4.665881,7.079310,-8.603189],[3.458699,-8.106231,8.488839,-3.070841,1.671064,-5.147424,6.790972,-1.773960,-9.457425,-3.922319,-3.530039,6.278851,4.466061,-1.460766,9.990767],[-1.329043,8.552637,8.490328,8.431286,-6.272458,-3.272398,-9.917250,-2.698521,-3.938325,1.342689,6.185033,-4.749424,6.601048,2.734920,-3.604963],[5.988437,-7.922342,-1.409395,4.983526,3.982678,-0.941656,-3.832726,-7.226264,6.971130,0.396414,3.736392,3.183564,2.675522,0.098848,-9.609479],[3.158144,7.183287,-1.201304,2.386361,8.408968,4.579365,-2.072432,-0.067522,2.552321,0.775830,1.688770,2.157214,-8.752355,7.926372,6.898595],[-5.242166,6.246443,-0.110443,8.939743,0.095951,8.039901,-2.414306,-5.994509,-9.230804,6.398168,-2.434780,-8.741392,2.576920,-8.129107,-3.537242],[-5.510372,-9.659236,-5.464885,-4.848388,-4.644112,1.612258,-7.010035,3.450976,-3.583951,-5.532251,-3.900606,-5.756455,-0.661642,9.353950,7.913057]],[[0.719321,-7.781450,3.691591,-1.828367,-7.070272,-4.893121,-1.706747,-7.549783,9.856299,6.254811,-7.945463,0.962584,-1.660535,-0.154835,-4.545055],[-4.172696,9.900297,-6.256939,6.938031,-2.318188,7.828988,1.339191,-5.141769,-1.409445,2.082242,3.379079,0.313086,-0.808840,6.724333,7.850721],[-8.453965,7.248133,2.093747,8.642021,-3.313185,-0.190210,-7.776283,-9.900091,2.022378,-3.624686,-9.829167,-2.184537,-7.655851,-4.885671,1.999789],[-1.143082,0.918841,-9.914480,4.107528,1.454955,5.953644,9.934452,-4.776613,-7.828980,-4.704654,-6.100061,1.063539,-2.027414,9.002235,8.410747],[5.230979,3.663726,1.793880,7.961318,9.637682,-4.401822,-8.347052,-6.899833,0.468114,8.414298,0.117099,1.697050,-4.066040,9.955455,-7.826745],[3.705982,-2.478672,-1.516558,-2.029805,-6.856593,-4.882795,-9.384077,-5.006294,8.283718,-8.748806,-9.197309,-0.483702,-9.689964,2.747213,2.491516],[-2.852288,5.243851,8.311677,-1.348768,9.842894,6.436687,8.525480,6.818453,-3.580048,-9.691933,0.789894,-3.933071,-4.380244,-5.462247,-3.290826],[4.620452,-7.781955,3.301550,-2.680671,2.815447,-0.717736,8.782421,8.846277,-0.685709,-1.538705,-3.058228,0.543976,7.114152,7.222522,5.387844],[6.211166,-1.189397,-2.319124,9.931333,2.888561,-5.560885,9.092788,8.770270,-5.716964,-1.091134,-2.048809,-8.434653,-8.619139,1.412784,-5.761432],[3.530118,4.738708,6.605349,-7.298314,-3.211219,-2.910025,4.228821,5.795752,-2.059277,-5.145365,-8.659651,7.563486,-6.275117,-8.982860,5.166430],[9.337079,2.269165,-1.241587,-6.268866,9.867904,-2.867695,3.591403,-5.412026,-3.438605,4.273668,2.663435,-9.485708,-0.695268,-2.944571,-6.712905],[0.371158,6.602525,4.107950,-8.784977,-6.960549,-8.248456,5.471047,-3.407483,-8.194515,-0.099585,-2.053682,7.833372,-8.624685,6.814234,3.689960],[-6.442876,9.931028,6.392212,5.066352,-2.950598,0.358927,-4.897886,3.182657,-9.599148,7.954521,5.989458,4.413224,-2.045105,-3.010461,-4.473461],[-1.142824,5.250207,-7.521687,-8.162765,-6.720878,3.212535,8.418969,-0.952252,1.911912,0.379456,0.972652,-0.844797,2.796786,-5.887519,-5.650738],[9.688642,1.808480,4.344267,9.047894,9.079886,-9.020614,-8.617550,-4.637505,-4.965789,4.719428,-0.481884,-4.684483,5.194360,-2.991837,-7.845915]],[[8.600257,4.586959,-2.386664,-1.239959,-3.922376,6.385656,0.578794,-6.363078,-4.281030,7.412616,-7.131269,-8.651682,-7.122781,8.312953,3.282315],[5.973389,8.144780,2.009401,5.495525,-8.168299,6.361531,3.270350,2.413078,-7.608974,-6.552286,3.898738,9.281041,-2.141236,-7.503239,-9.907591],[3.837120,-2.511928,-9.610111,-4.288350,3.385925,8.027119,-6.095680,6.426883,0.754240,3.949516,2.231605,-2.102960,-7.275235,-2.336824,-8.008524],[-0.432222,6.050855,7.127742,-3.031631,3.391615,-1.569946,-3.747323,0.682779,-3.246475,6.596594,5.465017,-4.090387,2.155657,-8.912161,5.156055],[9.867425,-2.195573,-5.982312,-5.454785,0.536327,2.687780,9.417573,-6.282895,2.279615,1.492758,-7.950080,-0.374704,-9.013576,4.015525,2.818968],[-4.491466,-5.379892,8.530498,-1.371475,3.439336,-9.500745,5.049739,-4.920241,-4.839977,-6.607001,-1.790429,-5.758390,0.194208,-7.874775,0.843223],[-5.896351,-8.761513,-6.965368,7.838420,-0.043681,-8.658234,6.636184,-9.022879,8.120454,-8.350290,-7.882546,-8.750630,7.936319,3.502020,-7.119845],[8.425191,-4.953763,4.083400,-7.486016,2.820906,3.046791,6.992307,5.077224,-1.357893,-5.569902,-5.095302,2.248962,-0.199489,7.911080,7.858703],[-9.982344,-7.299065,-6.220582,-6.489781,-6.258212,0.172170,1.286512,4.098234,-3.083751,-0.252292,-0.953468,5.447349,7.474571,-2.173134,-0.233931],[3.047691,-6.722575,9.012430,3.212367,0.666898,-5.245981,-0.949830,4.570247,-9.436786,6.441858,2.565818,-9.659350,-8.427744,-1.886984,-4.878316],[-8.703477,7.014326,7.222587,7.191495,-6.854293,-6.212170,-7.129222,2.920356,-9.041448,8.936724,-0.674693,0.309683,-4.333990,-6.199698,-2.477203],[1.059975,-8.110873,-7.831906,3.653546,8.905200,-8.214713,-0.323553,-6.830185,6.111318,-4.924170,-9.259151,7.936895,3.510069,5.173104,-0.952138],[-2.224046,-5.300769,-9.623573,-7.724122,0.024188,-0.332497,5.485031,-3.376262,-3.026951,5.635831,-2.422088,5.556148,3.006504,5.604157,-1.040569],[6.429221,5.117175,-7.129399,-9.653174,-0.719786,-0.555880,1.857563,5.694825,2.052442,4.574260,-1.389896,-6.437194,6.185345,-0.177648,6.420628],[-9.424539,6.638855,-4.517334,-6.088729,-3.518774,-1.567049,2.185089,4.626146,4.073464,-4.967894,8.347331,1.954889,-0.444215,4.150708,5.592324]],[[9.930534,8.735790,-1.495756,-0.809934,-5.504623,7.795174,9.667777,7.696709,2.290289,2.556122,0.816437,8.132305,0.886579,-2.062209,-4.136047],[0.503475,4.620028,4.994917,-7.372403,-8.065871,-5.508909,-8.428182,-1.241494,-9.371482,-2.677507,4.969546,-6.086306,-1.039298,-0.339565,3.473610],[8.451134,5.693542,8.588567,-9.707559,-0.291412,5.751502,-5.546830,6.950714,6.093990,-6.423579,7.542590,8.725489,-5.524405,5.306896,-3.968849],[-7.769684,0.840928,8.593171,-0.983387,2.663706,-1.800549,3.545557,-4.277629,-8.193563,2.232469,2.424802,-3.287402,-4.073116,7.235671,-0.455869],[-0.319204,5.665047,-2.411643,0.465345,-8.908349,1.921540,2.266419,7.061230,8.058277,6.894925,-5.779600,-0.384232,8.880593,-6.323793,-6.637875],[1.875585,1.060722,3.957326,5.456158,-5.641492,5.156568,-3.418723,-2.761253,-3.731380,6.333179,-0.112181,-4.720941,4.774476,-2.618719,-6.700283],[-5.016116,4.759526,-1.774931,4.352646,2.260346,5.111082,8.801771,7.869670,7.408598,-2.772218,9.945427,0.805481,3.478269,-5.345248,-7.261251],[-8.816208,-9.100876,-4.329470,-1.248383,-7.594211,6.337104,-7.480347,1.845268,-7.249427,4.150733,-9.489970,-9.823005,9.910581,-3.067436,7.293778],[-4.918760,0.431660,7.774791,-4.240195,5.324765,-5.745978,-7.787599,8.201566,-3.475178,1.424471,-1.578492,7.293600,6.497886,-4.211388,-6.942819],[-6.602696,-2.001123,1.301064,4.989053,3.040605,-8.804106,4.268652,9.341204,-3.600772,-8.311068,9.389329,2.756923,5.225316,6.496437,-4.800930],[5.221821,0.548415,-3.029205,-0.506104,-6.106246,-2.324014,9.627191,1.923683,0.112582,-0.128239,8.993902,-3.053827,-5.883978,9.935819,-0.039106],[2.620637,-2.716384,2.342715,6.338514,-0.383733,5.587364,-2.369788,-0.448868,8.514272,-0.129499,-1.205451,-7.787244,-9.033904,-6.507696,-5.377621],[-9.699644,7.371256,-9.136768,2.188761,-2.247235,4.902929,0.608218,-4.878758,-3.364495,4.128771,5.540840,-5.384365,-7.324509,7.456443,1.267430],[8.781761,4.231427,-5.349684,3.718839,-0.477019,-6.137389,-2.750390,9.254356,1.138341,-9.174840,-5.257959,-4.259789,1.185317,-6.075687,-3.695397],[8.923831,5.172760,-5.511843,-6.601845,8.252379,6.235466,3.621536,7.456421,-5.773470,-0.708622,1.766821,-6.651531,6.587421,1.982536,-7.249087]],[[4.154951,3.515682,2.422842,5.814148,-9.462816,-1.009500,-4.060682,6.743817,-8.692230,-7.714419,-2.970806,-7.702653,-1.251033,9.892996,8.167849],[4.054585,2.211595,3.811662,-3.271849,-2.399445,9.919479,-9.287919,-9.776419,-5.341327,3.855395,0.553916,-3.485593,-6.360736,-1.238451,-1.600468],[-0.180782,-4.645385,6.592926,-5.451507,-3.265511,-4.287099,7.347454,5.827023,-1.697880,-0.555917,6.013273,1.873104,9.141690,-2.128113,4.394672],[8.573189,-0.686970,2.050626,2.455199,2.918853,9.889348,-5.614711,-2.339407,-4.888102,9.096137,-4.592782,8.185211,-2.250928,8.023329,-2.911276],[-0.783309,-5.638625,2.369691,-7.065926,9.726763,4.282513,4.456837,9.592582,8.870785,-7.687043,7.890671,5.129071,-5.839706,6.387753,-8.203501],[6.684152,-0.221713,9.420707,5.827940,-8.329790,2.970288,5.910087,4.541400,-3.025918,3.457543,4.216634,9.653089,6.504008,7.161850,-0.980831],[-3.508494,-8.411296,5.776245,-2.320950,1.316814,-3.796242,-4.914513,8.795407,-4.076731,1.722475,-8.392539,-0.767698,4.697212,3.351685,3.796449],[8.292982,4.647041,-9.442366,3.217184,-2.891599,0.113787,-6.609165,-9.887496,-9.754253,8.692161,-6.329279,-6.063620,-2.078922,-1.766746,-9.155283],[8.101832,4.351668,2.872778,9.893472,5.430294,3.718625,-4.515663,-7.842527,0.502546,-0.601979,-7.171834,-1.339291,1.438026,2.154496,5.501081],[1.477574,8.590723,7.629493,-4.454235,6.197214,-8.990967,5.573298,-2.559411,-6.911292,-6.590097,8.631399,5.894735,0.177809,-5.850371,9.111537],[6.648252,-0.374599,8.514028,9.890612,-7.135792,6.203985,-5.671149,-9.419332,5.671173,-3.752536,3.800465,-4.305075,-3.515585,9.912658,-0.680169],[-1.023042,-8.274701,-1.345909,-6.900174,7.951074,2.314252,-8.914366,2.877882,-9.361088,8.036447,-9.164240,-3.291936,7.860133,9.590710,8.496898],[7.670702,3.010892,-8.926917,-5.150789,0.351539,-1.901911,-2.168811,-1.527369,2.932653,-4.109448,-0.007408,0.481234,-0.122957,6.113259,7.938801],[2.670898,-4.958605,-0.044265,2.855969,7.410170,9.780774,1.394292,-7.768475,6.334794,-6.250891,-5.413488,9.428321,-1.927447,3.559689,7.816562],[-1.935885,2.760780,1.705434,-8.394978,-7.799443,0.091325,0.023237,-0.457754,0.574817,2.351160,2.263998,-7.968185,8.224154,-1.358561,-2.658852]]], dtype = "float32")#candidate|7753|(15, 15, 15)|const|float32
const_7754 = relay.const([[[2.071954,7.691676,9.228777,1.641437,7.330684,8.544888,9.572566,5.814637,8.175251,-7.648439,-5.149450,9.682952,0.810570,-5.364037,0.488530],[8.344589,0.068093,2.104517,-0.592018,-4.817170,-0.344351,-3.177576,4.704232,-0.932384,-1.292908,-6.170283,4.868379,-5.237730,0.527289,-2.871503],[-6.854958,6.773828,-3.485634,-7.683883,0.685440,-7.306509,-8.218446,9.027465,-2.323451,0.361877,3.095552,-4.232582,0.131873,2.006380,4.847526],[-2.613404,5.177179,6.562660,-8.804497,-7.810077,2.487463,8.018978,1.105260,4.361668,-2.190211,-1.701346,-9.451641,-1.383769,8.081082,8.580447],[4.217942,0.264714,7.899586,-0.380674,-7.650812,-5.991901,-4.894539,-4.653801,-5.243956,5.694803,-2.253075,-0.354819,-7.178827,-3.487436,7.981428],[1.334753,9.742218,4.660799,7.341418,6.126373,8.984354,3.203645,6.745904,9.613024,-0.662620,1.454938,1.409907,8.393961,-1.199942,8.894836],[7.207887,2.039557,7.615100,-1.868801,-0.788079,5.282837,7.787616,1.518918,-8.655720,-8.830625,-8.275181,6.688059,-2.247813,0.736878,-5.546409],[-9.355036,1.498415,5.777248,-4.115762,-9.790559,8.572570,-5.003869,-9.540682,4.794765,9.427087,8.280076,1.263498,6.970170,-6.638845,7.366892],[9.232742,-0.349280,3.753767,-4.978429,5.376152,-6.578661,-7.156532,5.146234,6.005545,2.523296,9.977541,-7.535195,4.285512,-3.903732,-5.456980],[-4.092634,9.847614,4.036681,-1.793246,-9.462287,-0.341244,-6.024376,-1.304894,3.956424,6.176700,-6.355431,-8.199861,9.595950,-2.513691,4.235062],[4.810229,-4.720852,-0.203684,8.630749,8.896604,9.391107,5.231076,-3.422297,7.166354,1.243181,-4.429441,0.176096,-5.687542,-0.203400,-6.914873],[5.978797,-1.159486,-3.714202,0.366384,1.689677,-5.292345,-8.027348,6.272465,8.655795,0.819176,8.793716,-6.923930,-1.357664,8.262317,1.538461],[-8.157338,-7.945183,-3.569716,8.213183,-9.603192,7.215282,7.554290,-1.552951,-7.039202,-7.535699,-2.916631,-1.839353,-0.686325,6.021079,5.087124],[-0.752169,-2.441494,-1.344500,3.695733,-9.827990,8.532253,-9.482422,-8.147595,8.956212,-3.434262,-2.414063,8.073180,0.502511,0.150414,1.734365],[2.674465,-2.592339,-4.487402,3.408906,-1.157661,-5.991081,6.770564,5.898453,2.531105,-9.813009,-9.380749,6.803406,5.131866,2.765681,4.428218]],[[-8.646643,-3.933743,-6.902675,6.382074,0.719949,-5.182314,7.627128,-0.526117,7.164835,1.996300,-7.904719,-8.795749,6.140315,-9.781057,-9.675162],[-0.370341,0.582199,4.354012,5.208055,7.545092,-0.100650,-4.042431,2.015606,-9.934416,7.014770,-5.746103,3.839656,2.051478,0.833427,-1.472389],[0.336207,-1.023589,3.949064,8.903629,-4.447776,3.522366,-8.087245,9.985114,0.052933,-0.361820,6.705236,-1.816541,9.364487,-5.605113,1.838236],[-3.658753,0.565376,8.913270,-7.980949,2.597887,6.597893,6.217712,7.077683,2.762133,2.420242,7.006716,5.664110,5.043554,5.382015,9.389208],[-8.977782,7.392397,-8.397820,5.846216,2.038043,9.324363,1.186724,-0.305064,9.144576,2.599407,2.625264,-8.900327,-8.872538,0.988821,1.588092],[8.540374,-5.293248,7.019738,9.804087,6.964091,4.491624,-2.603473,-0.906069,3.910864,-3.819864,-2.011806,0.469392,-4.502789,-2.284377,3.883874],[-4.126213,-2.556386,-6.055490,5.895577,-8.270971,-3.531297,-6.123241,-6.338341,-3.028064,-8.165412,4.271445,-1.273144,1.452819,-8.099251,3.363293],[5.953906,-2.803556,-5.892571,7.103062,9.914238,7.027863,-0.422597,-8.209756,-2.637226,-0.981193,1.599443,5.400028,8.507628,0.686749,-0.633462],[4.857885,-7.346788,5.965097,-6.309953,7.655016,-8.153020,-4.742484,-1.855615,-4.365622,6.779743,3.233198,-6.070617,-1.937106,-6.939777,9.377297],[-7.272035,-9.231359,2.600887,-9.712509,8.670682,8.794025,-6.137375,-4.312415,-8.702854,4.121553,3.562547,-4.967043,7.821188,3.027573,-6.423562],[-9.208783,-8.380914,-1.246905,1.062319,2.908018,-6.761179,-8.497955,-0.956114,0.556906,7.727714,-1.273903,1.711874,-9.773700,-1.984982,-1.417195],[1.845697,7.289181,-7.395643,4.464773,-5.559701,-7.001899,6.135560,6.880779,7.412779,-5.350566,3.969999,7.906761,1.508240,6.940669,-0.223938],[7.294935,2.721824,0.271656,-1.622118,8.486702,9.514122,2.932837,-6.218979,5.975126,9.318155,2.782624,-1.145406,1.504970,-6.842086,6.802636],[7.079315,-9.517989,-7.005797,-3.323247,-6.784093,5.252098,1.385992,-5.869713,-9.919978,0.530153,4.289129,-5.977393,4.278226,-1.347126,2.734740],[-8.658357,-9.884692,4.454417,-0.012523,1.388991,9.499775,3.709839,7.997873,-9.193529,5.441509,0.520835,-3.137125,-4.283089,4.467303,-9.201638]],[[3.680290,5.233665,8.794577,-8.125697,-2.510879,9.592732,-8.331012,-3.579026,-5.593424,8.909657,-7.105424,6.613637,3.359315,1.091724,-3.746450],[4.507165,-6.371991,1.671522,4.870459,-2.356602,0.501230,0.609274,-4.550489,6.635857,-1.011982,-9.644696,0.047571,-5.863170,5.449514,8.512788],[5.168115,8.058488,-4.924757,4.881908,-7.882579,5.410519,1.081715,-6.662696,0.812777,8.239961,-4.592370,-3.187170,4.462686,-8.671041,-1.436390],[-4.511013,-4.604359,-0.015153,-8.327779,-8.854659,2.500103,-3.131530,-5.630438,-9.161182,-7.909079,-1.206316,9.046243,-7.295171,1.169520,9.663098],[-1.000360,1.412549,-9.413180,7.028070,6.752297,4.515664,-9.677096,-3.940938,-8.186488,-5.089289,-3.278062,-1.883539,8.466679,-0.085117,4.409633],[9.883298,9.122937,6.189232,-8.465986,-0.148744,-5.650381,-6.741406,1.567102,-0.416991,0.481294,-4.445711,7.786057,2.703267,7.541741,5.906700],[3.977600,-5.138575,2.138609,-9.010728,0.092495,4.263494,4.758461,-2.788770,-1.721947,-0.985075,9.411362,4.020859,1.710290,3.133923,-5.574631],[-5.353610,7.711292,-3.129016,-1.711875,-0.570313,4.675325,4.535315,3.819819,7.819936,-9.042879,0.138765,-3.661326,-0.346592,2.320367,-0.789570],[-7.148378,-6.417193,-0.880115,-3.278826,0.492461,-7.474210,3.951385,7.610438,7.144020,-1.667317,6.326107,2.464376,2.251450,6.991434,9.053480],[-6.908128,-3.488803,-2.327432,-1.303792,3.734579,6.903820,-1.140482,-9.865120,-1.701885,1.494678,6.674038,-2.646428,-0.274637,7.826490,1.109392],[-3.616407,-0.866694,-5.799238,4.565765,-0.075510,-8.086016,-7.521687,-5.883072,8.417824,-6.916182,3.876254,7.999630,-8.349393,9.404999,3.212003],[-6.676171,8.788330,7.603475,5.942374,-7.944382,2.180204,-9.530639,5.728158,-6.584260,6.635235,9.761661,9.946991,-5.378631,5.612921,2.979471],[-0.949205,-9.901233,-8.245703,7.688299,-7.906541,9.125046,6.048271,7.910745,-2.812740,7.590289,-4.213200,8.498457,3.834401,8.923961,9.410068],[1.275776,-3.162497,5.971637,6.376845,5.581784,-9.696201,-8.270327,-2.475897,3.603390,3.906598,-5.560022,1.454015,4.804617,1.789722,3.733261],[9.291872,9.910971,-6.326887,8.829473,4.902750,5.186708,7.572697,8.900285,8.364643,3.873732,8.621265,-9.428926,9.256564,8.242434,-3.362684]],[[9.653875,-7.913270,-9.201580,-6.949442,-3.750929,-6.351278,2.729952,5.135982,8.733783,9.737798,-3.762241,-9.713764,-1.699192,-6.614619,-1.588076],[-8.908844,8.583095,-7.529465,-1.654779,1.622763,4.823537,-7.927434,8.696655,5.614201,2.165772,2.226364,-6.782625,-0.378081,0.216936,-9.501761],[-1.424511,-0.089145,8.640624,5.318738,5.450229,4.924851,-9.963836,7.144731,2.121860,-1.179131,-4.911548,-7.885163,0.907029,6.687723,-4.012198],[-9.406899,-4.002187,-0.169806,-9.307418,7.135997,-1.751146,-2.158509,4.287595,-5.226133,-6.327060,4.083794,8.780154,8.715205,-7.717314,4.379358],[8.096194,7.734225,-3.604745,7.704109,3.128590,-5.366927,9.423854,-0.567733,0.724082,-8.813142,1.970788,-4.054946,5.481484,4.485575,-3.649938],[-3.866768,3.133084,4.821203,5.385525,-5.647679,-4.469890,-6.653759,7.582151,-8.479493,-6.642472,-6.584075,-3.497764,-2.294436,9.237515,9.142944],[-2.693031,4.606681,-2.219939,-1.179085,0.310215,-8.987579,2.959465,-8.832009,-2.441487,6.689461,6.616534,-3.327801,-4.054903,3.099230,3.533838],[8.218270,7.525589,9.459252,-8.552263,7.675863,-2.471276,1.435469,9.965934,-7.616531,-7.975286,-3.585927,4.823386,6.144145,4.638060,4.351246],[2.635758,-1.074109,0.076368,-0.472652,9.711156,-0.305338,-4.172783,-8.148080,8.114101,9.058915,-5.858507,7.385091,-2.531006,-2.305449,2.674104],[-1.405171,-2.256287,4.834134,-5.888383,5.663556,-3.142385,1.757497,5.147868,-1.264064,-4.809183,-7.464754,3.587476,8.610794,-8.034297,9.670968],[5.428095,0.577944,-6.771148,-8.529197,-9.140590,5.823642,4.585880,6.694919,-0.235778,4.671625,8.048093,4.681320,4.548876,6.692060,-1.643367],[9.413638,-9.872607,-9.390860,-9.418029,-7.539013,-4.481698,3.564517,-9.407246,4.825118,-9.706842,-6.465377,-9.299336,-5.398150,-3.650716,-6.789717],[-4.418138,-3.649347,-9.342727,6.700081,5.710658,6.513452,6.540533,9.843469,-7.235449,-0.907808,5.674660,-1.683953,5.079187,6.083164,-9.770030],[-6.210522,-3.286763,-4.197273,5.719289,9.075094,5.622727,5.331137,2.712674,-9.323025,1.988312,-8.382439,2.648818,-3.916125,6.984145,-2.847139],[5.991145,-5.682523,-8.834721,-5.974339,-5.818573,-5.894589,6.340529,3.769161,6.322201,-8.657538,-7.563024,1.929266,4.952140,-5.571191,-5.373921]],[[3.276365,-4.251817,2.950353,-2.592761,-7.292439,7.227361,-4.201125,-8.918245,8.810136,8.896155,-9.167365,-8.371108,-6.347984,-5.120256,-1.096897],[2.091757,-8.675633,9.737257,-3.322742,-4.245095,-2.448387,-9.528113,-6.499056,-2.822843,-1.233846,2.939348,-2.122869,-9.795800,3.006183,2.787064],[8.495681,9.987823,-0.474546,8.889991,-5.726222,-8.735946,1.657273,7.231281,1.996828,1.865970,-7.499351,1.040345,-6.234833,2.236547,-6.542972],[7.000084,8.151583,6.237051,7.226409,6.208281,-9.515350,9.254863,-6.049034,4.738185,-2.991498,7.221359,7.623556,3.262594,-5.821498,-8.816469],[-2.729695,6.037008,-5.763163,2.869585,4.460763,-3.558721,-4.910882,-6.673827,-8.381688,2.255520,-5.013441,9.965522,3.500372,-2.607488,2.429913],[-4.157753,-8.108598,-5.236672,-3.311896,1.458674,-2.673795,-8.463778,7.234088,2.353474,-1.754499,-5.513550,6.877420,5.320250,2.048022,-6.008755],[-3.031581,-1.979170,-3.227076,8.728311,-9.650597,9.350491,-3.562651,-4.598064,-9.034638,-3.041834,-1.650451,2.827911,-4.379365,-3.240558,-3.488612],[6.609511,9.527604,-6.463060,-1.249660,-9.619288,-2.526525,9.114388,7.480660,-7.046559,9.286251,0.152884,1.496842,9.801939,2.366771,9.369975],[-2.360776,-3.283584,-8.479619,-4.708958,-2.043892,-8.160050,-6.986705,-0.209835,1.085753,9.706741,0.272645,-2.271156,1.681337,-6.842599,6.549866],[2.285212,-4.186623,5.027956,-4.677809,2.831458,-3.165688,7.882232,0.099161,2.658156,-8.639190,3.714114,3.100047,-4.480210,4.729719,7.754890],[6.133227,9.758784,-2.355122,-9.698066,-6.039882,8.970162,8.129732,6.302914,-0.339752,7.631907,1.630976,-5.412933,-9.810436,8.861037,-0.015145],[-0.865602,5.567602,7.456242,-8.817282,-3.242682,-5.715903,-8.551254,-4.683591,-9.696936,-0.714052,5.613025,5.041443,-0.401463,5.595184,5.278005],[-6.314109,2.939427,2.056114,2.177586,-6.724499,-6.511461,1.861492,6.879891,-6.066261,8.150129,0.569322,-3.566810,-9.007150,7.691799,9.746868],[5.653164,-1.281653,9.329531,-9.856802,-0.631542,9.119473,5.155945,5.292846,-9.528722,-3.720418,-4.312714,4.429945,-4.447432,7.286392,5.105120],[7.356162,-2.131679,8.969804,3.354976,-6.907711,-9.932826,8.911519,-2.598262,-6.789338,-9.248670,-5.407792,6.340971,-6.363209,-9.623675,3.422020]],[[-4.742836,-2.087601,-9.132718,-5.653997,9.905953,8.519684,-6.636436,0.256524,0.343387,-3.602710,7.834150,-5.256982,-7.648995,-8.631515,-5.527659],[-0.611693,-3.678554,1.349959,-6.046543,5.473694,-2.567718,2.716233,6.692462,-4.590995,8.747137,-4.681294,0.847204,3.434233,4.621046,-1.641576],[0.413076,-2.254911,-1.638282,-5.949819,-4.793484,-6.360691,4.071018,1.733312,9.428508,5.546661,-7.685304,7.432070,6.894416,2.922648,-3.489587],[-2.498775,-3.154381,-1.227497,0.169906,1.738875,-9.575805,-0.111304,-6.017834,-6.439854,4.625189,-8.275818,5.086717,-4.636234,-7.656745,-0.033163],[9.685887,-0.537936,2.658880,-0.749340,1.454259,-2.667629,-6.874509,4.938258,1.954376,-1.746482,-1.913791,-3.129701,-2.286676,-5.265839,3.372523],[1.459515,2.160478,-0.058643,-4.301560,1.165365,7.607320,2.616883,9.367418,-6.586729,-3.575371,8.100279,2.805499,6.022717,-3.347085,-5.423421],[-0.486917,7.186932,4.461295,-8.639218,-5.801645,7.252915,-8.334677,3.506864,-7.007619,-7.923770,-0.859890,9.337954,7.150714,8.141856,-0.224760],[2.722189,-8.358233,-4.304873,8.494846,3.430846,3.642713,5.054448,-2.128265,3.699936,-3.035683,5.062612,3.364254,-4.811585,6.210974,5.121606],[4.307225,-5.425881,2.594163,5.141996,-5.363220,-3.797374,8.045914,5.371969,0.030195,-2.320130,-9.108960,-9.352514,-5.025778,-9.281100,5.337032],[8.210990,3.356142,-7.067227,2.166701,8.209305,-3.500998,7.360327,0.632144,5.821309,7.830923,-9.102882,-3.777339,6.524949,3.786268,-8.308097],[1.711867,0.737829,-2.809792,3.163155,2.266938,3.679196,4.232483,2.538672,1.936826,0.761589,2.960418,-4.089305,-2.536057,-3.522325,7.041875],[-8.785659,6.898560,2.241996,0.457957,6.506111,9.811575,1.356264,2.334211,1.733826,4.891505,9.852186,-0.508741,-8.709862,6.605285,-9.952458],[-0.673302,-7.025808,-5.721622,0.567997,-7.127091,-8.585707,2.331168,-1.522634,6.190456,9.828839,-0.657242,8.581008,-2.909420,-4.609259,-0.256308],[-0.570677,5.364172,-9.390459,4.448280,-2.139094,-6.420227,0.928561,-3.840700,-2.134482,-5.124210,-9.090264,-9.781219,0.148728,-7.850345,2.126540],[1.295198,0.871609,-3.692279,-4.435144,3.465798,5.946937,-3.452396,4.366326,4.239626,-0.344195,5.853607,-9.247252,-5.493563,-4.264268,6.663528]],[[6.005136,7.711692,-3.889302,3.692549,5.182597,7.151586,-8.107326,-1.012463,-4.787624,-7.952243,5.566329,6.478176,7.691119,0.979148,-2.159339],[9.469240,2.920964,-1.998518,-0.121980,0.480212,-6.843249,8.139727,-8.386637,-1.649695,7.742481,5.825127,-2.474888,-0.188979,-2.484645,7.795083],[4.707737,-7.317453,-2.130668,-4.537315,-4.287295,-2.830517,-3.167129,-0.053387,1.616932,4.268844,0.416048,0.849693,9.832020,1.804250,-3.677945],[0.398341,-4.343097,-6.125472,-3.941327,4.144191,-2.132062,-1.061278,2.374575,3.286949,3.088951,6.887383,0.444744,4.965360,9.661833,-2.806286],[5.327634,1.394484,-2.407454,-9.684638,-9.655727,8.160384,-7.561184,5.537472,-8.503566,-7.725290,6.317616,-3.142874,0.583692,9.550017,4.979080],[-2.829718,1.698114,-1.557884,2.459803,6.465643,-5.692441,5.305021,-7.550991,1.981331,5.263740,-2.768644,4.735224,-1.173100,-7.757784,1.910122],[5.136659,8.416345,9.824079,-6.336204,-7.931472,-0.392132,3.634377,4.653584,-4.916668,-2.215565,5.581355,-3.482043,-3.474782,5.898809,3.416050],[-3.023419,-3.047747,7.029748,3.702586,-6.170923,8.125082,-6.338611,-1.800350,-5.235108,-2.100531,2.712032,-7.268041,0.773498,-4.136717,7.700328],[7.643531,-8.625751,7.332479,-0.429852,-4.449849,4.003229,8.118606,-7.760752,0.234640,3.866009,3.324553,0.434752,-6.892231,-1.209372,0.891640],[-8.838975,0.133539,-0.175868,9.113103,1.818149,-3.250950,3.416097,5.710151,1.029370,6.625850,-6.998721,5.866320,-3.136500,-1.224001,-1.364305],[-5.938110,9.280639,-0.052147,5.640875,-4.844696,9.128071,4.490183,-1.202717,-8.555070,1.690197,-7.979422,-6.681404,-6.257767,-5.170885,-8.246071],[-1.070383,1.786095,-1.615223,-4.371625,9.063120,4.026660,5.339504,-9.004749,4.665789,8.168120,-2.818707,-5.537219,-2.222398,9.775335,-7.961046],[1.387253,-5.158469,-2.714785,-7.230873,-4.476307,9.450000,-9.911264,-3.398775,-2.543258,9.293095,3.906071,-0.968924,6.984536,-3.647497,6.369681],[-6.841046,3.731403,0.826042,2.553998,-7.608621,-4.615449,0.701649,-3.341096,2.664658,8.327320,6.983219,-0.921801,4.732445,-1.026406,-8.683642],[-8.231794,-4.009003,1.544635,2.484247,-4.013413,7.285118,5.946275,4.105985,-0.440677,-3.220405,-2.274826,-2.631355,1.437322,-1.760123,9.251417]],[[4.418162,0.951533,-6.361926,-2.130972,1.820470,6.418900,1.398991,-8.343600,3.118728,9.795206,-4.017339,0.304394,-6.318568,-2.503795,-8.837255],[6.017500,8.636381,4.451766,5.623687,9.906955,-7.885059,2.498750,0.892244,1.902256,8.970542,9.061485,-8.502348,-3.280671,4.048200,5.473930],[7.175344,-2.533542,2.356034,-2.794216,5.896654,7.958152,-8.747793,7.543975,-9.257899,-3.136176,8.357010,-5.176486,-8.368772,-3.867299,3.240795],[8.958633,-6.299259,-5.200795,-8.444048,-2.011573,-0.474182,0.016074,0.196883,4.599191,4.072929,1.506107,1.892409,-9.365129,-0.421721,6.145976],[-5.977915,-8.388810,-7.774344,-6.108566,2.758177,-8.270102,0.681316,7.299134,-8.115419,-8.631878,-6.609071,-4.321271,9.550610,-5.729795,8.132497],[-1.345821,-0.641833,-7.072436,4.349355,9.326635,-4.497419,-6.483511,-4.667337,-8.957066,-5.110042,-0.902703,-5.463995,-0.768024,-9.893906,0.347859],[6.042315,2.853796,1.916910,-1.127587,5.460692,1.673198,-4.446581,7.985742,9.803975,7.351085,-0.189403,0.738118,2.805759,7.497903,-7.312132],[9.734532,-1.192837,4.291292,0.998528,-5.860117,-3.659885,-6.532391,1.219523,1.783015,5.713458,1.390991,-9.589964,-3.407268,-0.484348,0.484290],[-7.397900,-1.039458,-4.708676,-6.174154,-0.489464,-1.545198,1.566991,6.750274,-1.475980,0.777511,3.475807,1.555480,3.613091,5.210932,5.432707],[-0.837086,-0.121635,-9.373442,1.329769,-6.108664,6.946426,-4.965261,0.712330,-3.382512,-8.855542,5.719066,-6.474001,5.953615,-2.290435,3.498499],[-0.771076,9.191297,0.758294,4.292765,3.309449,-5.388337,-9.530090,9.008727,-8.035454,8.528102,3.245973,-7.620821,4.339169,-6.786978,2.437588],[-2.531798,9.569907,-7.483038,0.293566,3.497907,3.428864,-0.127029,-2.253676,8.320809,7.550877,9.274005,0.697242,-9.947624,-8.135568,-0.392257],[-8.266056,7.671748,-0.646585,-6.970905,2.461437,-9.613061,8.336390,-4.490449,-1.202876,-8.831498,-9.462442,5.255695,-1.961326,-3.491923,-0.139562],[-6.968173,8.049093,-3.268243,7.487813,-5.120653,1.301528,9.613860,0.405261,-1.441593,3.517554,7.759560,1.229358,4.627340,-6.896461,-8.400232],[-4.651213,9.351321,-1.369058,6.702098,3.158430,-6.793751,5.849107,1.636712,7.595544,-8.129685,6.180445,-3.567391,-6.361069,-5.499164,4.086654]],[[7.163555,1.759730,-9.684590,2.631249,6.337682,7.122538,0.588741,1.185164,6.535327,-3.436621,0.925231,0.091683,-2.348444,7.636062,-3.943215],[2.425893,-2.989882,-2.521908,-7.554591,-7.231053,-5.995518,6.648831,-4.197032,3.009228,5.836552,-1.696033,6.690655,-7.548651,3.065110,-5.423931],[1.247514,-6.978246,-0.164754,-2.853272,-3.220394,-5.231725,-1.706028,-8.821230,-2.777053,-0.967265,2.055403,-6.709290,-4.150930,3.355125,-4.588101],[2.071110,0.107434,4.657797,-9.870156,8.944611,-3.186655,-4.195943,2.629290,-7.637858,-3.417209,-8.081466,4.200727,-1.618419,9.261546,7.642969],[9.014611,5.018053,-8.279895,-7.450263,-2.176477,6.951014,6.172609,9.457168,-2.049108,-9.335163,-8.895193,8.435406,0.450201,6.583373,8.582251],[-4.491775,8.108877,2.036565,-8.881026,2.449157,6.686924,1.348366,-9.379683,-2.306214,-6.793263,9.645835,9.957580,-2.288797,-1.342120,8.712694],[1.391335,-5.395548,-9.566616,-9.077644,0.550839,9.446516,5.258712,2.302396,-0.659937,-8.252218,-0.329310,4.938557,-4.611301,-7.027615,-0.461730],[-1.795803,9.192103,-2.684524,0.675233,-5.229208,-6.481836,2.978293,-2.048356,2.170222,-1.833526,-2.579238,1.735500,-6.825337,8.744749,-5.816574],[3.367806,6.321709,6.614069,-1.327521,6.568515,3.623840,-1.030771,7.904536,2.189696,4.854902,-6.516526,-0.364441,-6.612616,-1.161481,5.747543],[5.360249,2.418401,9.144640,-1.973576,5.226732,-8.732410,-2.172925,-3.655415,-0.477584,-5.543689,9.056462,0.543747,6.360353,7.028037,1.677731],[-3.376868,0.375413,-0.938362,3.852278,-9.143545,-4.748123,6.726934,1.150508,-9.547745,-2.876355,-9.264777,4.526224,9.019082,7.763912,-7.467147],[-8.659222,3.742405,1.911740,-2.401518,-5.420142,3.139514,-4.475459,2.856421,-7.239408,4.992228,4.454384,8.559311,2.242452,4.364945,8.447306],[9.160538,-5.142271,8.450943,-8.677683,-7.279554,-0.039219,0.128252,0.942881,-3.336158,-9.519289,-1.603277,5.928653,1.338515,-0.893456,9.744936],[-5.574085,0.811754,9.341835,-4.442445,6.426271,3.506588,2.717232,-2.925083,2.480988,-1.278470,-6.133415,0.521030,-7.304797,-9.459386,3.601826],[-4.469828,-1.628140,9.865965,-2.421171,-2.060195,-2.645873,4.247970,-5.957077,-5.022091,2.118397,-2.865282,1.891900,6.814480,-6.748410,6.480436]],[[-3.179124,7.576778,5.375559,-8.009922,8.690930,2.514459,-3.693238,6.223739,-4.224388,7.722824,-9.485224,9.415868,4.378485,-0.805212,-2.606952],[-0.997141,4.830141,-8.697230,-5.912295,8.048472,6.917433,1.152447,2.111439,-4.090774,4.153153,2.099154,8.506728,6.106782,-2.047730,-7.043090],[6.556901,3.142394,5.070117,-6.337943,-1.160602,8.405046,-7.765827,-6.853775,3.807069,-7.983032,-5.833478,-6.381448,-6.422079,-9.575843,3.534109],[-0.565246,8.323075,-2.630126,4.063940,-9.032529,-6.308258,2.199691,9.520227,-6.525539,-6.950734,1.966103,1.865114,8.494540,9.578712,-3.233057],[-6.874430,-9.929871,-7.514520,-6.877285,8.216410,4.510502,-7.976455,-9.210618,-3.796957,-1.388993,5.212721,5.320927,-4.710957,4.639718,0.068055],[-4.832786,-7.953827,2.963039,2.683575,-3.080023,6.068281,-3.756278,-0.468148,0.169809,-9.034203,8.259374,8.415092,-0.641084,7.017238,2.468994],[5.652628,1.957610,-6.760577,-6.592030,-2.821441,-5.753714,-8.355952,-4.804417,-3.404694,-4.346916,0.053547,-2.988444,-9.908807,-9.813105,-8.362095],[-3.305784,-6.344959,6.987463,5.080579,-7.815251,-1.735137,0.172085,-0.286226,8.203626,7.359338,9.497256,-0.312765,6.595066,-2.723677,-4.310680],[7.538974,-4.488770,-7.477144,5.928015,4.370745,-5.633314,-8.807802,-2.819098,6.300653,3.630118,2.188865,2.149037,8.083147,0.236324,5.150494],[-9.409437,-7.827998,-0.123240,0.379116,-0.966482,0.528191,-5.055663,-0.350152,-6.446073,8.596745,-5.289346,-9.166487,-3.026029,-0.467779,6.488667],[0.985453,1.033148,-6.919248,6.579659,1.027171,-7.758252,-7.551835,-3.988023,-4.722089,-2.343165,3.543566,-2.058344,-2.001469,1.995577,-0.919737],[-6.218019,-0.775864,-0.136495,3.178180,-5.736047,6.355847,-0.413116,-2.789732,9.307701,9.614776,-0.298122,-3.449772,3.063205,6.445556,-1.735423],[7.213530,4.668307,-4.474166,2.398667,0.837775,-1.958381,-5.559147,-0.604680,6.276086,1.822970,9.579838,8.769043,6.461554,3.484315,6.052645],[-4.021251,-9.619427,2.749829,7.893777,2.265486,-3.544863,-0.917424,-9.941596,6.471940,-9.383567,-8.608629,-2.628486,5.001343,-3.273370,-4.648698],[-4.246905,7.471030,4.350469,1.711701,2.056506,0.622971,-9.216163,-0.244734,1.978466,5.314314,2.173968,4.080038,7.137288,0.443570,2.418385]],[[-7.268604,-7.639177,2.210598,-4.484710,0.145995,8.906588,0.476315,-9.600681,-4.751951,-8.836371,7.681963,1.115447,5.559492,0.899116,9.246631],[4.664029,1.217674,6.423838,5.300737,8.145090,7.144800,2.981299,3.104734,-4.814868,3.967257,6.234719,-3.572045,-0.198711,3.814267,-6.116809],[-5.316078,-0.680795,-5.739910,-6.698630,2.668164,-6.214805,-3.472095,-5.807965,8.523868,0.200117,5.899290,8.712433,-4.943940,5.986809,9.457160],[-5.483672,3.903607,7.172594,-7.132857,4.359096,-7.696531,-2.385381,-2.901157,-4.083957,4.627146,-8.004875,-8.025512,4.679860,7.399173,-0.174946],[-8.699444,0.412762,-3.912418,1.318063,-4.786930,-8.794119,-1.945962,-8.039046,1.687751,-0.673908,-6.687626,5.308930,-5.956828,0.347087,-4.634267],[9.634342,-4.458642,-9.482197,6.820216,6.263187,6.983952,-3.443275,-1.878327,-7.994948,1.023275,0.234235,3.440208,-5.138361,0.911034,-7.672808],[-5.537681,-2.797691,-0.838322,6.309783,9.828329,2.552015,-0.259892,-9.780152,-6.965864,1.770031,-1.394562,-0.750822,0.052969,1.830402,-7.527571],[-0.733898,8.483050,-8.238622,-2.305595,-7.998094,-4.491358,-1.874727,0.844123,-7.103478,7.263338,-4.486618,-1.871400,4.466339,6.362691,-9.664139],[-2.724725,-6.084650,8.358713,3.294946,-0.337904,4.672407,-7.837729,-2.033281,7.105915,2.424123,-1.594657,-5.996616,-9.574987,-0.453973,-8.547031],[-2.487075,-7.968249,4.303462,8.055748,6.305800,-7.508913,-2.853754,-8.850816,-4.626677,2.813562,-0.006920,3.732708,-6.153147,-1.684713,-8.669509],[4.405546,-7.699332,2.150641,-4.951593,-5.080178,6.142023,-4.316100,4.584907,-7.592717,-1.372390,-1.941813,0.684523,0.062439,9.330668,-0.504404],[7.316991,-9.177555,4.195487,7.357599,-1.894125,2.723115,-2.120134,-0.091121,-3.226361,7.328691,-8.387359,1.801250,-6.679866,-4.977821,5.446702],[5.422199,-9.331535,-3.271797,9.555025,4.520929,4.904420,4.171819,1.629207,-7.393830,-0.745597,-7.384431,6.774009,-7.982927,0.814854,3.105923],[-6.536219,2.776773,9.663337,-0.120441,4.587709,-8.438730,2.360627,-0.026896,6.241786,-5.050974,-0.214103,2.049976,5.975582,5.194977,-6.894749],[5.246549,8.313150,6.002286,-8.371090,-0.513522,-7.754474,-6.454492,-9.409079,-9.566094,1.999395,-5.759365,5.424217,4.610701,5.482492,6.300141]],[[-8.663202,-5.194794,3.867711,-1.836921,-5.104302,2.492450,0.171651,-8.540092,-5.495745,-5.838781,2.407460,-9.011549,-6.860512,0.926030,-9.439431],[7.541822,1.423438,2.800537,6.489078,-5.772775,-1.283120,-1.459039,-7.041518,7.291667,6.483804,-5.206299,-8.570221,-6.895815,6.928341,5.576041],[-2.502369,-6.101077,-6.024819,6.123444,7.492799,7.512639,0.311238,2.090421,-9.932776,4.485233,-2.307494,2.161993,-4.328679,2.771806,9.759482],[1.260848,7.295351,-1.779073,4.589121,-0.425779,1.449561,-8.296111,9.229994,-4.488166,1.665015,-0.138121,-9.988856,-9.698047,6.417895,-5.789286],[-3.026223,-5.864758,7.649011,-7.172944,-0.876823,4.331456,-5.397858,5.616776,8.807390,-6.854461,4.049766,2.165304,-2.696343,-1.226900,2.716330],[-6.748636,-1.525853,-4.506735,5.606436,6.350786,7.993571,-9.124812,-1.580654,4.517556,7.891677,-8.492009,-8.107463,-7.201601,-8.711945,-3.530562],[4.318269,3.918313,-1.830894,2.284806,-1.395094,7.394083,6.305214,-0.869635,0.746862,-8.543603,3.584176,5.608414,-2.594577,-8.213368,-3.622728],[-8.654492,3.921526,-1.271261,1.324365,-7.395525,-0.172389,5.320991,8.287956,2.314756,-6.108343,7.566388,6.699413,8.978174,2.615278,-2.596911],[6.776844,1.271207,-7.287339,-5.731162,-4.190602,-4.771744,-8.845970,-1.052545,2.150807,7.552785,2.877420,3.744549,8.895908,-4.604626,-7.579202],[0.986689,-5.517592,-6.457636,-0.790220,-9.610411,1.869354,5.733883,3.514513,4.841479,6.083755,-0.294630,-7.630821,9.091095,-2.488219,-0.045590],[-8.531946,-4.876292,-5.760360,-8.088063,2.101587,3.765467,3.716148,2.953089,0.859444,3.566641,7.321401,7.599565,4.247888,8.188161,1.637522],[-2.570188,3.089913,-0.554563,0.906850,-0.335414,5.270033,-5.240448,-4.162968,7.307794,-3.528060,5.813584,-8.248746,3.279043,5.543360,-1.875557],[-9.081176,7.130324,4.353686,-3.838217,-6.040426,-1.450546,-2.073602,-0.255885,-0.536112,-5.038315,-3.745703,-3.854901,2.146551,-1.127423,-4.030953],[9.794692,3.691059,6.711888,-9.430263,0.599532,-4.541062,-5.680177,-0.542202,-3.639346,2.092883,-2.997269,-5.720979,-2.340527,-3.319877,-4.635359],[5.574905,-9.325486,-0.985490,-7.179079,2.450926,1.445934,1.599752,-8.846832,-4.420395,-9.181061,-5.700706,2.824530,9.722892,-5.672696,-4.968593]],[[-8.913032,-2.627072,-2.988434,-0.792995,7.085720,4.540332,-9.970993,-5.894656,-1.779013,9.749784,-5.372111,6.770475,-3.932299,-1.915329,9.032535],[8.314776,-6.906582,-2.121463,3.603194,4.943891,-6.068095,6.187307,8.466959,3.040695,3.689921,-4.593983,-7.156907,5.333884,-1.732219,7.015960],[7.955102,-0.062237,-5.771106,-6.508783,0.590277,-9.001711,-8.941366,-5.797574,-8.182624,-0.133081,-7.266031,7.127279,-0.460299,7.128673,-6.219548],[-7.022728,-2.366904,-6.030812,5.486451,-4.872206,-1.312871,-5.514005,-2.598593,8.522057,2.455558,-0.483249,-2.324245,-5.294072,6.962006,-9.052544],[7.388434,7.174979,9.628614,-1.053905,-0.051572,0.136280,-6.102217,-5.971213,1.601784,9.932590,7.209297,-4.891503,0.025830,-4.402624,2.624326],[0.564564,-0.072273,-1.235061,-7.323492,-7.371347,1.969198,9.057693,-3.400989,-8.042151,4.732623,-5.508038,-5.368812,8.588071,0.691593,-3.652460],[-0.134268,8.608735,-6.725571,-5.597484,6.335076,6.066794,-9.385101,-3.335735,-7.843879,-6.186165,-6.534235,-7.427832,-3.708339,-4.923816,-4.679671],[-5.357042,-8.867137,4.175397,6.571632,6.065195,-0.401453,9.469515,-4.076719,0.389568,-8.854599,-7.319982,-6.003428,6.232334,-0.272054,5.729431],[-8.560674,5.570587,0.591331,6.644765,-1.074445,4.585499,-4.977879,-6.995996,-9.473865,0.234841,7.783212,8.053178,7.381891,-6.621225,2.546630],[-6.003979,6.170622,-1.076162,-4.298375,2.563155,1.122903,1.465411,8.084684,-2.707752,-7.216368,3.205091,9.048369,2.224242,8.857383,6.017449],[1.127665,4.669676,8.134718,-7.412930,6.875231,5.513469,-1.744684,-0.921518,-7.521425,-5.540980,8.019396,-6.501541,-5.026969,4.129184,-1.124156],[-8.507044,-5.801170,-6.437498,-5.990320,8.881380,1.135364,-6.291345,5.496353,3.505073,5.456704,-6.090612,1.589292,4.930912,9.722462,-8.330110],[0.419853,8.318668,-7.153830,-0.822991,-6.653505,-3.630866,-1.066132,-3.554966,-9.754660,8.133917,2.584216,-3.142728,-7.986402,-3.536877,-9.082261],[5.134672,-8.182756,0.922160,4.382334,8.424917,6.364708,3.312479,-2.394130,2.785286,8.800512,-8.634944,8.512120,-1.121691,-0.368176,4.663043],[1.764458,9.421696,4.999032,-5.929206,-0.337709,9.964816,2.988450,5.449715,-6.144491,-1.672641,2.796699,-3.045427,0.053877,-9.615177,1.438761]],[[-3.708486,2.306186,-7.977988,-0.631974,3.735728,-4.908334,-7.914480,5.518388,3.889253,1.185408,9.936613,-9.237837,8.841853,-7.665346,-0.526304],[6.494331,-3.079989,-1.951859,7.576989,0.447834,1.676501,4.170198,-2.572267,7.113863,-0.595740,7.665457,7.823084,5.501793,-3.407397,-5.925736],[-4.800181,0.500010,-5.970759,5.591045,1.694220,-8.350575,8.492318,-3.004731,-0.097094,7.982293,-7.874212,6.932705,4.748893,-2.479357,-9.454575],[-9.794639,-7.599486,-2.813446,4.012878,3.709562,-3.781830,8.900195,2.215583,6.202139,1.655441,0.743627,-4.368508,8.843929,7.934532,8.458673],[-4.183901,-4.702992,2.429034,-2.468631,2.811497,4.109476,3.820261,5.721133,7.120526,3.541325,0.830261,-4.548723,6.789152,0.923252,-9.856295],[-3.185586,-1.707314,6.806827,5.180001,-4.294880,9.240949,6.206514,-9.991540,-4.795620,4.326741,-2.053780,-7.693514,-1.651241,-0.618769,-1.423407],[-5.428249,-1.572512,-3.983876,4.987190,4.434566,-7.269986,6.591358,6.942365,-8.230354,1.818519,8.765165,-5.614307,1.349174,4.939111,6.082461],[-1.571910,5.825834,-5.977590,-3.363044,4.520048,-1.450835,3.949685,4.133088,3.477588,-2.824966,-6.426105,7.608096,0.947717,7.773156,-2.648654],[-7.810827,2.581906,6.637744,1.282082,9.758111,9.798538,-0.568876,2.143371,-2.371847,2.026831,-9.194130,-5.850091,0.374294,-5.982161,3.221286],[9.300372,3.514588,8.731995,-2.820715,-6.829355,6.759864,4.024934,-8.065152,-4.313484,-2.543942,7.374000,5.555080,-7.728963,6.300632,4.745595],[9.678673,2.567923,0.757557,-4.904846,2.473036,3.213128,-5.361425,9.004289,-7.197576,2.234331,1.810823,7.371389,0.234922,7.405669,-8.059184],[6.928212,9.867293,-0.336077,6.331090,9.597443,2.556256,0.606901,4.874302,3.164784,-5.138914,-8.824933,9.391602,-0.598543,0.972608,-0.733215],[5.709275,-9.951901,-9.575005,9.349984,7.417597,-7.939455,-2.716978,-5.326545,-5.729189,0.474961,2.975242,9.570855,0.727844,8.458996,6.399637],[-7.619865,5.462852,-7.048319,6.965634,7.556058,-7.115359,3.372446,1.698437,-4.341030,8.059648,8.441577,-7.078895,-4.026585,-4.135900,-3.359051],[3.003142,-1.394284,4.913268,-3.653664,7.053201,3.837036,7.993028,-1.206661,2.267321,9.225360,-6.995794,5.989874,0.403785,-7.191746,6.337869]],[[6.372909,6.499226,6.457228,-1.794031,7.101826,4.626991,6.230984,9.429825,1.600468,0.624370,-0.725094,8.744099,-3.054791,4.531372,3.630663],[8.706516,6.222680,-3.608645,-4.747276,-6.717781,-1.521255,-6.107131,-1.325551,9.099003,-3.480111,-3.430832,-1.510656,-7.818538,-0.182327,9.795352],[-3.270631,4.384736,4.220262,-5.346657,-7.956186,7.139920,-4.629859,9.631086,-5.403697,4.178834,3.368158,2.723292,8.244139,-9.469254,2.677334],[6.731928,-5.477889,2.600795,1.312961,6.739559,-7.189941,-7.649694,2.930233,1.328697,0.779097,-1.247744,3.099170,-6.933873,-8.322767,-0.906437],[9.260421,9.416113,-8.547037,9.771584,6.318246,-9.577536,-7.401056,-7.489672,-8.895604,8.773817,-0.116808,-9.724797,5.223753,9.128344,5.173943],[8.166835,6.293785,-9.539832,2.430081,0.694481,9.734039,-8.785449,1.091621,2.806013,-1.463334,0.691802,-3.453872,-4.240108,-2.394793,9.381397],[-2.431957,-9.964222,-7.999209,2.566779,5.052794,-0.394624,-2.181891,-0.241745,6.116741,6.526810,-1.330534,0.759574,-0.890872,-7.368127,5.186698],[-8.265527,-3.122494,8.403046,-1.939939,-8.380875,-9.888461,-0.833238,1.245369,-0.045895,-3.801939,-6.696821,-1.673839,0.448954,-6.770825,9.600174],[-1.978420,9.106869,7.611795,3.044825,6.978349,9.753837,-8.368478,4.181374,-8.730574,-1.238530,5.730643,4.210854,-1.007159,5.138982,-6.069914],[-6.349285,-0.275584,0.084343,8.734148,6.085911,-3.294543,-7.241816,-6.255253,-9.934471,3.057968,0.589163,5.274767,-6.079847,-6.232004,-7.823974],[-4.387168,1.303613,-8.698152,-5.668437,9.559312,0.357396,-3.176685,-2.534219,5.578269,1.322624,6.281567,2.266543,6.377573,5.016997,8.876747],[-6.547752,-1.850718,1.189528,-4.476687,-5.673911,1.531367,0.669994,0.780422,0.115444,-6.702130,1.660330,5.093226,4.338454,-3.983392,-4.243516],[-6.330089,-6.365744,-8.089591,-0.405874,8.672000,-6.375890,-1.749439,6.332289,7.152118,-6.252716,7.272953,-4.864294,-5.123903,-9.130026,-3.595474],[4.428332,7.023371,2.257332,7.499345,7.512699,5.649534,5.912596,3.433106,2.601667,6.727929,3.687145,-1.126941,-4.320154,2.938187,1.279652],[9.543658,-0.195017,-0.248275,6.211231,9.475957,0.437391,-7.554161,-4.979372,5.286573,7.636406,4.192780,8.911740,-7.024375,2.049210,-0.105999]]], dtype = "float32")#candidate|7754|(15, 15, 15)|const|float32
bop_7755 = relay.divide(const_7753.astype('float32'), relay.reshape(const_7754.astype('float32'), relay.shape_of(const_7753))) # shape=(15, 15, 15)
func_7579_call = mod.get_global_var('func_7579')
func_7587_call = mutated_mod.get_global_var('func_7587')
const_7765 = relay.const([[-7,-5],[9,4],[-3,-8],[10,2],[-7,-2],[2,-8],[9,8],[1,7],[2,-6],[9,-10],[6,1],[9,9],[-10,10],[1,1],[-1,7],[-4,9],[-6,6],[6,10],[-8,-9],[4,-3],[-9,6],[-1,9],[-5,-6],[-3,-4],[2,6],[10,10],[-7,-4],[-9,5],[10,-7],[8,6],[4,-4],[-7,-6],[2,4],[8,-1],[7,5],[-2,1],[10,4],[-5,3],[2,-4],[8,7],[4,4],[-7,6],[-8,-9],[9,-4],[-9,-9],[1,-4],[3,-2],[-10,3],[-10,5],[-9,3],[-1,-10],[4,1],[6,-10],[6,-10],[1,-10],[-10,-4],[-9,10],[-9,-5],[-9,3],[3,-9],[-6,4],[2,-2],[5,-4],[6,-7],[-7,3],[2,-8],[-5,6],[-5,-4],[3,-6],[3,8],[2,3],[3,3],[9,-8],[3,3],[7,3],[4,6],[7,-2],[9,-8],[-5,-9],[5,8],[5,4],[-4,-6],[-6,-6],[8,6],[3,8],[10,-5],[1,3],[5,7],[-9,-9],[-7,5],[-6,2],[2,-3],[-7,-9],[9,4],[-9,7],[8,3],[6,-10],[9,-6],[6,-10],[9,-5],[6,-5],[-9,6],[-6,1],[6,1],[8,-3],[-9,-3],[-9,5],[-6,-4],[6,7],[8,5],[-6,-8],[-2,2],[-2,-8],[-8,-8],[-4,4],[-5,4],[8,9],[5,-2],[10,-3],[10,-4],[-2,7],[-5,-6],[-10,-1],[-9,-8],[-6,-6],[9,-4],[-9,5],[4,-6],[-4,-8],[-10,8],[-5,6],[-5,4],[9,4],[8,-1],[9,-8],[5,-1],[9,-8],[2,-8],[6,-2],[6,2],[-5,-7],[6,-2],[2,-8],[-6,-6],[6,3],[-9,-8],[4,-5],[5,-8],[-4,5],[-3,-7],[-9,-1],[-1,9],[2,-7],[2,7],[-5,-6],[10,3],[9,7],[7,6],[-6,2],[-8,7],[4,1],[9,-9],[2,9],[9,7],[-1,1]], dtype = "uint64")#candidate|7765|(165, 2)|const|uint64
var_7766 = relay.var("var_7766", dtype = "float32", shape = (1755,))#candidate|7766|(1755,)|var|float32
var_7767 = relay.var("var_7767", dtype = "int8", shape = (22, 64))#candidate|7767|(22, 64)|var|int8
var_7768 = relay.var("var_7768", dtype = "float64", shape = (252,))#candidate|7768|(252,)|var|float64
const_7769 = relay.const([[-9.172667,-2.238897],[0.218195,-4.391382],[8.158928,-3.786183],[1.836050,-8.879542],[1.473489,8.460239],[-6.091011,-0.795881],[5.212675,-1.850354],[-8.353363,-2.728975],[-9.438533,5.866429],[-5.463671,6.691997],[0.512103,-9.681485],[5.026478,-6.923334],[8.452685,6.378679],[3.965674,2.308156],[5.581154,-8.338020],[7.043086,4.204928],[5.121450,-3.097874],[-2.307158,8.274871],[5.097826,-0.384431],[-0.895185,6.511507],[-9.721037,4.875818],[-6.643683,9.303288],[-1.983252,-3.476285],[-4.525839,-4.297328],[-0.676117,4.831290],[-8.235575,-6.825351],[-8.370042,-1.837509],[2.355353,-7.727098],[-8.971368,7.523548],[-2.666961,4.117538],[-3.027592,3.990692],[4.023065,9.664394],[-3.686135,-0.680740],[4.673791,-9.893959],[-2.529167,4.241433],[-9.893946,3.987789],[3.718010,-8.921225],[2.851182,1.238134],[2.865123,-6.795792],[-3.836527,-6.945534],[9.527103,8.686472],[-3.615751,-7.285647],[-3.027138,-9.369265],[-1.952293,-3.509599],[9.233084,2.792161],[-1.703722,-3.532826],[6.171085,-4.532827],[-6.073177,-2.216430],[5.202116,7.860637],[1.135467,-3.360013],[3.980595,1.731936],[9.105734,3.057838],[-2.863991,9.788174],[0.964064,-6.070266],[3.790151,-0.554987],[8.455743,3.910139],[-5.415430,-0.104603],[-4.394103,-8.105052],[-1.306967,9.051186],[3.952860,-5.792734]], dtype = "float64")#candidate|7769|(60, 2)|const|float64
call_7764 = relay.TupleGetItem(func_7579_call(relay.reshape(const_7765.astype('uint64'), [2, 11, 15]), relay.reshape(const_7765.astype('uint64'), [2, 11, 15]), relay.reshape(var_7766.astype('float32'), [1755,]), relay.reshape(var_7767.astype('int8'), [1408,]), relay.reshape(var_7768.astype('float64'), [252,]), relay.reshape(const_7769.astype('float64'), [120,]), ), 7)
call_7770 = relay.TupleGetItem(func_7587_call(relay.reshape(const_7765.astype('uint64'), [2, 11, 15]), relay.reshape(const_7765.astype('uint64'), [2, 11, 15]), relay.reshape(var_7766.astype('float32'), [1755,]), relay.reshape(var_7767.astype('int8'), [1408,]), relay.reshape(var_7768.astype('float64'), [252,]), relay.reshape(const_7769.astype('float64'), [120,]), ), 7)
func_1383_call = mod.get_global_var('func_1383')
func_1388_call = mutated_mod.get_global_var('func_1388')
var_7782 = relay.var("var_7782", dtype = "uint32", shape = (336,))#candidate|7782|(336,)|var|uint32
call_7781 = relay.TupleGetItem(func_1383_call(relay.reshape(var_7782.astype('uint32'), [3, 7, 16]), relay.reshape(var_7782.astype('uint32'), [3, 7, 16]), relay.reshape(var_7767.astype('int8'), [1408,]), relay.reshape(var_7766.astype('float32'), [1755,]), ), 2)
call_7783 = relay.TupleGetItem(func_1388_call(relay.reshape(var_7782.astype('uint32'), [3, 7, 16]), relay.reshape(var_7782.astype('uint32'), [3, 7, 16]), relay.reshape(var_7767.astype('int8'), [1408,]), relay.reshape(var_7766.astype('float32'), [1755,]), ), 2)
func_3518_call = mod.get_global_var('func_3518')
func_3522_call = mutated_mod.get_global_var('func_3522')
const_7802 = relay.const([[6.319330,-5.095727,-0.834362],[-1.627980,-1.986610,-6.228321],[1.572069,-9.544827,-6.398373],[-9.810002,-1.475641,-0.856173],[2.974991,-0.153687,-3.278073],[-2.869250,-0.608768,-2.865867],[-5.494076,3.971878,9.868805],[-6.933932,8.229870,-6.479427],[-6.458488,1.176532,2.814029],[-1.795090,8.241110,-1.154419],[-5.019513,3.086314,4.990257],[2.422188,-2.143717,5.456802],[-8.327717,-0.359965,-2.396515],[8.905455,2.552876,3.195100],[-8.499479,-5.297786,5.648137]], dtype = "float64")#candidate|7802|(15, 3)|const|float64
call_7801 = relay.TupleGetItem(func_3518_call(relay.reshape(const_7802.astype('float64'), [15, 1, 3]), relay.reshape(var_7768.astype('float64'), [6, 42]), ), 4)
call_7803 = relay.TupleGetItem(func_3522_call(relay.reshape(const_7802.astype('float64'), [15, 1, 3]), relay.reshape(var_7768.astype('float64'), [6, 42]), ), 4)
output = relay.Tuple([bop_7755,call_7764,const_7765,var_7766,var_7767,var_7768,const_7769,call_7781,var_7782,call_7801,const_7802,])
output2 = relay.Tuple([bop_7755,call_7770,const_7765,var_7766,var_7767,var_7768,const_7769,call_7783,var_7782,call_7803,const_7802,])
func_7813 = relay.Function([var_7766,var_7767,var_7768,var_7782,], output)
mod['func_7813'] = func_7813
mod = relay.transform.InferType()(mod)
mutated_mod['func_7813'] = func_7813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7813_call = mutated_mod.get_global_var('func_7813')
var_7815 = relay.var("var_7815", dtype = "float32", shape = (1755,))#candidate|7815|(1755,)|var|float32
var_7816 = relay.var("var_7816", dtype = "int8", shape = (22, 64))#candidate|7816|(22, 64)|var|int8
var_7817 = relay.var("var_7817", dtype = "float64", shape = (252,))#candidate|7817|(252,)|var|float64
var_7818 = relay.var("var_7818", dtype = "uint32", shape = (336,))#candidate|7818|(336,)|var|uint32
call_7814 = func_7813_call(var_7815,var_7816,var_7817,var_7818,)
output = call_7814
func_7819 = relay.Function([var_7815,var_7816,var_7817,var_7818,], output)
mutated_mod['func_7819'] = func_7819
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7860 = relay.var("var_7860", dtype = "float64", shape = (15, 3, 11))#candidate|7860|(15, 3, 11)|var|float64
const_7861 = relay.const([[[8.074793,-6.923526,-8.030028,0.294675,-4.138272,8.062095,-9.773146,5.804078,-3.773774,-0.029998,-1.916097],[9.016176,-6.996261,-3.854382,2.116653,9.978369,4.583592,-6.823269,-2.773941,-3.754450,5.884988,-6.567639],[-6.827165,-2.436199,-6.061734,8.607234,1.777719,-6.923003,9.482887,-1.068488,-6.501763,0.612957,5.670233]],[[8.021223,2.590920,-0.042855,1.021314,-8.923998,-2.601163,-1.644005,-2.245205,7.191195,-7.617513,8.096897],[-8.900299,-8.322484,0.716133,-4.747582,-7.550805,-3.673413,-0.433833,-4.220130,9.349456,1.948083,-8.016253],[-0.477844,0.701073,-6.827449,0.532932,-4.247475,3.678325,-5.108806,-9.143187,5.198194,8.278942,4.322026]],[[-4.851137,3.987540,-6.435397,-9.523305,4.745016,1.838619,-7.487708,-9.535449,5.394066,-9.366991,-7.354401],[0.217584,0.908762,9.529016,2.135354,-9.999097,-7.376100,1.441547,-4.415587,8.618106,5.811074,2.159506],[-9.402812,6.428504,-0.755343,-2.414136,9.029487,7.669860,-7.241572,1.305987,0.963651,-8.670983,2.236564]],[[1.145116,6.287299,0.369829,1.336376,-7.795450,6.256839,-1.183887,4.227042,-0.544152,-8.737284,-1.229656],[-3.818827,-7.659253,4.330846,2.207740,3.790036,9.035723,-4.845022,8.789745,9.602737,2.471757,2.753349],[-1.711704,6.927275,7.585002,-4.403665,-6.784535,9.725147,5.162402,5.959327,-7.321816,4.677374,6.442165]],[[-0.798427,7.208307,2.594764,-8.567601,-3.157852,2.132258,8.818562,-9.861827,-7.998126,-0.132526,0.486460],[6.208549,9.242946,1.996947,0.880275,-9.960640,8.844643,0.181986,-9.064809,-7.921297,-1.365448,-7.734506],[-2.934402,2.555455,-8.890695,1.066863,6.544191,-2.987620,-2.367283,1.163447,6.330982,4.905521,-6.497966]],[[1.889787,8.283085,4.888582,6.487424,8.516683,-0.072528,3.036771,0.520428,4.298712,6.735944,3.627186],[2.629915,2.100460,-9.558671,-7.184892,0.045470,1.682407,5.475084,-8.017995,7.265588,-7.482279,-9.693614],[-2.559194,-8.250532,4.121738,6.747961,1.705117,2.500328,0.600108,-0.579311,-1.880006,1.096609,-8.186174]],[[5.781308,-8.402447,-2.215205,-5.912285,-2.434233,-3.560153,-8.131850,-8.334949,-2.504594,4.550235,-4.732822],[4.622236,-4.811282,-3.676933,-8.371645,-8.276463,2.941566,-5.315457,0.371843,-9.282790,0.478045,0.851846],[-3.347092,2.847924,8.827865,4.946341,-9.811322,-0.338448,-4.874115,-1.660226,1.209747,-0.361904,8.754890]],[[4.223134,-0.226869,-8.121027,-2.788056,8.136303,1.705472,-3.041798,6.696546,-4.340161,-0.470267,-3.534589],[9.738154,0.422865,6.330903,7.525577,-1.029341,-3.942882,7.635568,-8.510875,-3.987192,-9.277292,3.938037],[-9.208049,-4.231932,-6.779319,-7.815214,-9.745797,7.056340,-1.411601,8.734011,-0.555880,-6.975795,-4.584491]],[[3.390488,-3.367538,4.795172,-7.560181,7.893082,4.551993,7.030060,-2.162836,1.291992,-0.172239,4.158136],[2.344594,-1.921585,-2.222367,-9.778130,-8.951329,-7.422269,6.196725,-7.796045,-7.905182,1.094334,3.004785],[0.453477,-1.594017,-4.678120,9.231272,4.869080,8.030410,-5.864614,5.815855,-8.156636,4.184373,-6.811899]],[[-5.357079,-2.630241,-9.659307,8.421921,-4.910493,5.425982,9.756023,9.607597,2.284108,4.154525,6.392550],[4.486380,1.538673,-5.896730,-7.087642,0.994593,2.578912,8.741339,7.196109,-5.779025,3.853453,-2.798234],[6.108464,6.015142,4.724757,4.625639,5.867049,2.100199,8.752212,8.460660,-9.706274,-9.684290,-0.439062]],[[3.942268,-3.486600,1.319935,9.055057,-0.753997,-2.605198,-7.105790,0.675098,-2.963606,-8.252110,5.183464],[9.279248,0.629843,9.946524,-4.563842,2.318800,-4.191313,6.390071,5.790715,5.038652,0.120654,9.696664],[3.577931,-4.338973,9.517981,0.291080,-7.668337,8.237371,-8.851384,0.289031,-9.701905,-9.606893,6.865672]],[[5.410794,1.107238,-1.450856,-5.653509,-1.409862,-4.491491,0.012461,0.241293,-0.203873,0.069620,9.005242],[0.359107,-4.643004,2.009699,-3.962933,-7.494676,7.845378,-3.258413,8.284181,5.230094,1.980060,-4.849346],[-1.693108,1.407279,6.613601,-3.583412,9.273210,0.694144,-8.656139,-1.840196,2.057773,-0.432500,-6.822883]],[[8.244287,6.448081,9.213656,-6.904178,4.235865,3.501833,-1.488617,3.966284,0.824674,-8.233344,2.549457],[3.807275,1.002953,-9.207914,2.967347,-9.653914,-7.032741,-3.245571,-2.243625,7.721258,5.055115,7.335799],[0.899490,-5.563663,5.274021,-8.200175,2.421822,-9.121775,-0.244799,-1.628211,-4.649744,-4.810720,-9.069273]],[[-5.922942,-5.528853,-1.551387,1.049126,2.905914,1.245659,1.183612,-2.932817,9.139765,-0.628953,-3.030047],[-4.520246,-5.149819,7.065120,-0.948100,3.513727,0.439983,-3.347053,9.734208,8.764131,3.579509,7.545003],[3.233711,-9.808975,0.585837,-5.081018,8.315346,8.806002,0.084005,7.028441,-1.882876,5.897276,-2.527597]],[[-3.767189,0.596061,-7.140775,-4.675611,1.031059,0.194624,-1.052682,-1.944023,-4.758863,4.932896,-4.688747],[-6.330284,-6.645956,-2.460847,-9.403792,-3.315718,2.487694,-9.565659,-2.877508,5.062682,-3.038209,5.041731],[6.562996,-0.553800,9.499992,7.344201,-4.972370,2.860949,8.780825,-4.454400,-1.461284,-0.898422,-3.699400]]], dtype = "float64")#candidate|7861|(15, 3, 11)|const|float64
bop_7862 = relay.equal(var_7860.astype('bool'), relay.reshape(const_7861.astype('bool'), relay.shape_of(var_7860))) # shape=(15, 3, 11)
output = bop_7862
output2 = bop_7862
func_7867 = relay.Function([var_7860,], output)
mod['func_7867'] = func_7867
mod = relay.transform.InferType()(mod)
mutated_mod['func_7867'] = func_7867
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7868 = relay.var("var_7868", dtype = "float64", shape = (15, 3, 11))#candidate|7868|(15, 3, 11)|var|float64
func_7867_call = mutated_mod.get_global_var('func_7867')
call_7869 = func_7867_call(var_7868)
output = call_7869
func_7870 = relay.Function([var_7868], output)
mutated_mod['func_7870'] = func_7870
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8096 = relay.const(9, dtype = "int32")#candidate|8096|()|const|int32
var_8097 = relay.var("var_8097", dtype = "int32", shape = (8, 12, 8))#candidate|8097|(8, 12, 8)|var|int32
bop_8098 = relay.less_equal(const_8096.astype('bool'), var_8097.astype('bool')) # shape=(8, 12, 8)
func_3724_call = mod.get_global_var('func_3724')
func_3727_call = mutated_mod.get_global_var('func_3727')
const_8109 = relay.const([2.434037,8.002152,0.399925,5.312732,-0.816541,2.902630,-1.305482,-0.374960,3.783040,8.690847,-9.255454,9.075542,4.833941,2.715500,-8.798726,-4.481319,5.087139,4.780272,-0.749630,-0.465545,-7.566552,-1.866165,-2.754143,5.161787,-9.637672,-7.390033,-0.339652,-3.513337,5.769306,-8.462621,2.551247,5.254268,6.155572,2.352394,-9.142872,-0.972060,4.657384,9.239096,4.766703,2.732876,-9.152208,2.949190,2.715526,-1.714570,3.507449,7.797732,8.116206,4.408101,6.569302,-7.050788,-5.553666,-8.966348,6.569722,0.962697,-3.822367,3.262311,-6.314730,-9.276006,-9.756679,-3.851412,9.954614,-2.453061,9.688203,9.739610,-6.873391,-2.304660,2.862547,-8.250333,-2.682565,1.920020,-7.623833,4.174049,4.481809,1.802296,-8.328900,1.442815,4.364962,-6.472644,3.825826,7.172912,-9.067204,-5.242596,-2.056134,-9.477879,-2.878392,-9.756363,-8.209183,-6.882750,2.969255,-5.839301,0.784932,9.021671,2.379177,2.854844,-5.471272,4.873247,-6.856958,-6.867540,-8.480480,-3.228185,-1.208939,-7.029301,-9.260585,6.620938,-1.147722,-0.786118,2.982960,-6.039482,4.849281,-8.092676,-0.732316,-1.120363,2.000606,8.343957,-2.890966,8.640826,-2.792161,1.701224,-2.856416,-6.559823], dtype = "float64")#candidate|8109|(120,)|const|float64
call_8108 = relay.TupleGetItem(func_3724_call(relay.reshape(const_8109.astype('float64'), [4, 6, 5])), 0)
call_8110 = relay.TupleGetItem(func_3727_call(relay.reshape(const_8109.astype('float64'), [4, 6, 5])), 0)
output = relay.Tuple([bop_8098,call_8108,const_8109,])
output2 = relay.Tuple([bop_8098,call_8110,const_8109,])
func_8112 = relay.Function([var_8097,], output)
mod['func_8112'] = func_8112
mod = relay.transform.InferType()(mod)
var_8113 = relay.var("var_8113", dtype = "int32", shape = (8, 12, 8))#candidate|8113|(8, 12, 8)|var|int32
output = func_8112(var_8113)
func_8114 = relay.Function([var_8113], output)
mutated_mod['func_8114'] = func_8114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8407 = relay.var("var_8407", dtype = "uint16", shape = (8, 4, 8))#candidate|8407|(8, 4, 8)|var|uint16
const_8408 = relay.const([[[-8,-8,-2,5,4,5,2,-7],[-8,-5,-6,-8,2,10,4,9],[10,6,-4,3,4,7,5,-2],[10,3,10,1,-7,5,-2,5]],[[2,1,2,-5,3,2,-9,-8],[-4,5,2,8,-8,3,9,-1],[9,8,-5,8,6,-5,-6,4],[-3,4,4,7,4,1,7,-6]],[[-3,8,9,7,9,2,4,-5],[-4,4,-10,-1,10,10,1,4],[2,3,1,7,-9,-5,-5,-10],[9,9,5,-6,2,-2,3,9]],[[1,7,10,-2,-2,-4,7,-6],[-9,6,4,7,-9,9,5,7],[9,-8,7,10,6,6,1,8],[8,-2,-7,8,-7,9,-4,10]],[[2,2,7,-9,-9,4,9,-8],[7,9,10,-1,-6,-1,-9,-6],[8,-2,-2,-7,8,-9,-5,-3],[-8,6,2,4,-10,-8,7,-1]],[[2,1,-6,4,-2,-10,1,-7],[8,4,-3,-5,7,-3,7,-1],[-7,2,-3,-9,9,-1,-3,-9],[4,-10,-4,-1,8,5,-7,-6]],[[-3,10,-5,2,-6,-4,1,-1],[-7,-3,6,3,-7,-9,7,9],[-4,-5,-5,4,-1,-4,4,-9],[-6,3,6,8,-4,-8,-2,10]],[[-3,6,-5,-1,1,-9,3,-5],[10,-3,-1,2,7,8,-6,-7],[5,-8,6,-7,7,9,1,8],[-9,10,9,-7,1,-8,-4,-5]]], dtype = "uint16")#candidate|8408|(8, 4, 8)|const|uint16
bop_8409 = relay.equal(var_8407.astype('bool'), relay.reshape(const_8408.astype('bool'), relay.shape_of(var_8407))) # shape=(8, 4, 8)
uop_8413 = relay.sinh(bop_8409.astype('float32')) # shape=(8, 4, 8)
var_8423 = relay.var("var_8423", dtype = "float32", shape = (8, 4, 8))#candidate|8423|(8, 4, 8)|var|float32
bop_8424 = relay.maximum(uop_8413.astype('int64'), relay.reshape(var_8423.astype('int64'), relay.shape_of(uop_8413))) # shape=(8, 4, 8)
uop_8431 = relay.rsqrt(bop_8424.astype('float32')) # shape=(8, 4, 8)
output = relay.Tuple([uop_8431,])
output2 = relay.Tuple([uop_8431,])
func_8439 = relay.Function([var_8407,var_8423,], output)
mod['func_8439'] = func_8439
mod = relay.transform.InferType()(mod)
mutated_mod['func_8439'] = func_8439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8439_call = mutated_mod.get_global_var('func_8439')
var_8441 = relay.var("var_8441", dtype = "uint16", shape = (8, 4, 8))#candidate|8441|(8, 4, 8)|var|uint16
var_8442 = relay.var("var_8442", dtype = "float32", shape = (8, 4, 8))#candidate|8442|(8, 4, 8)|var|float32
call_8440 = func_8439_call(var_8441,var_8442,)
output = call_8440
func_8443 = relay.Function([var_8441,var_8442,], output)
mutated_mod['func_8443'] = func_8443
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8563 = relay.var("var_8563", dtype = "float64", shape = (4, 7, 2))#candidate|8563|(4, 7, 2)|var|float64
uop_8564 = relay.exp(var_8563.astype('float64')) # shape=(4, 7, 2)
func_6120_call = mod.get_global_var('func_6120')
func_6122_call = mutated_mod.get_global_var('func_6122')
var_8568 = relay.var("var_8568", dtype = "uint16", shape = (420,))#candidate|8568|(420,)|var|uint16
call_8567 = func_6120_call(relay.reshape(var_8568.astype('uint16'), [15, 7, 4]))
call_8569 = func_6120_call(relay.reshape(var_8568.astype('uint16'), [15, 7, 4]))
output = relay.Tuple([uop_8564,call_8567,var_8568,])
output2 = relay.Tuple([uop_8564,call_8569,var_8568,])
func_8579 = relay.Function([var_8563,var_8568,], output)
mod['func_8579'] = func_8579
mod = relay.transform.InferType()(mod)
var_8580 = relay.var("var_8580", dtype = "float64", shape = (4, 7, 2))#candidate|8580|(4, 7, 2)|var|float64
var_8581 = relay.var("var_8581", dtype = "uint16", shape = (420,))#candidate|8581|(420,)|var|uint16
output = func_8579(var_8580,var_8581,)
func_8582 = relay.Function([var_8580,var_8581,], output)
mutated_mod['func_8582'] = func_8582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8605 = relay.var("var_8605", dtype = "int16", shape = (14, 11, 8))#candidate|8605|(14, 11, 8)|var|int16
var_8606 = relay.var("var_8606", dtype = "int16", shape = (14, 11, 8))#candidate|8606|(14, 11, 8)|var|int16
bop_8607 = relay.subtract(var_8605.astype('int16'), relay.reshape(var_8606.astype('int16'), relay.shape_of(var_8605))) # shape=(14, 11, 8)
func_5056_call = mod.get_global_var('func_5056')
func_5059_call = mutated_mod.get_global_var('func_5059')
var_8612 = relay.var("var_8612", dtype = "float64", shape = (800,))#candidate|8612|(800,)|var|float64
const_8613 = relay.const([-3.998125,-8.219993,5.626715,8.398582,8.566293,2.741223,1.141719,-3.445153,2.565062,9.018784,2.632626,-7.016112,-0.734688,9.906899,6.849082,6.996552,2.641779,9.428988,7.423104,2.673778,8.145908,-8.081265,-8.434596,7.191906,-6.964996,9.124428,4.198825,-3.259835,7.338156,7.376615,-5.360239,-4.840240,2.312623,-3.309237,-0.067576,8.361114,-1.614105,-2.528174,-2.650708,7.804822,9.368639,-1.136735,-8.945352,-8.764762,3.753799,0.821650,1.927041,2.111494,3.357377,2.960223,6.966219,7.878391,-1.890966,1.729033,-1.902455,-1.744590,6.092066,-7.512211,7.002878,6.422556,2.353117,-7.047097,-8.287452,5.880087,0.359511,-1.194462,2.215170,-1.169909,4.781160,-8.500387,-1.246385,9.814318,-6.722295,-4.661687,1.414361,-3.799094,-4.929536,1.490893,-9.650285,-5.897025,6.687674,-5.616386,3.456681,1.296793,-1.730722,-3.529671,-8.906120,-8.263392,5.631738,-5.101535,-7.438154,8.316832,1.183451,-7.973329,0.449457,0.218612,4.445207,4.558896,-1.798615,1.804382,9.952385,-0.031817,-0.967219,-7.753113,8.451719,-8.601016,2.840504,-6.668273,-4.134301,-5.616196,6.067445,-1.932897,8.432237,5.043582,-3.074885,1.419105,-3.524998,6.775462,-2.786870,7.343845,-5.650364,-8.907679,6.508413,-6.089493,8.196101,-9.771952,-1.849039,5.085534,-1.883847,-3.245510,7.859542,-4.340616,1.314142,-5.232630,7.795688,6.506469,3.797465,2.437854,-4.493376,-6.503401,-5.825849,-2.085946,-9.302248,3.089727,3.851364,3.808177,7.239079,-1.419057,-6.377010,-2.506586,-8.451746,3.898564,4.863937,5.757400,8.008833,6.499524,-8.476602,-2.371827,4.280906,6.349438,0.080645,-8.631907,4.720299,0.512259,1.747437,2.269781,3.351041,-2.743779,-6.759830,-6.819519,5.546513,9.522929,-9.601107,-0.848870,6.299319,-3.997627,0.462981,5.106950,5.647426,-0.519425,5.162023,8.428056,-4.848276,8.796959,7.250360,-3.739451,-6.411726,-2.623524,-3.545112,-7.022462,-1.033015,-5.579481,5.108945,-4.045547,5.801721,-5.252575,0.056837,4.539957,6.736552,-5.766557,8.522814,6.760239,-3.661610,-7.271607,1.196484,1.656597,5.183985,2.961189,9.019140,7.016883,-2.555717,7.654648,1.230466,8.209651,-9.566385,8.577361,4.143497,9.867822,-3.364714,-9.314355,-6.100701,-7.893626,5.630777,6.494501,8.723727,1.478218,-0.969646,9.399802,-5.126461,-1.216260,-0.986399,-7.713166,-2.824961,-0.479049,6.767436,-7.363067,-4.257396,1.841748,-9.249205,-0.809782,6.290861,0.657950,1.016434,-2.897304,-1.955391,-5.151919,-4.401669,-0.532428,-1.356139,-8.875649,4.014957,9.616089,2.653584,4.255928,2.465086,4.396982,-7.739368,-9.323948,-0.692611,9.060133,7.101578,6.350135,-4.251337,4.441392,-8.167755,-9.674937,-9.602848,4.184029,-9.609710,-7.580736,2.923968,-2.411225,-9.967492,1.550427,3.259907,5.929913,-2.338264,7.659658,-9.738478,9.865771,-9.156101,-4.624066,3.700504,-4.401278,0.320183,-7.756701,-6.173880,-4.864104,3.907829,9.391871,-2.442191,-4.296983,-0.756259,4.338555,-9.574466,5.447289,-1.117768,2.460888,-5.727258,1.782774,-8.328971,-3.699336,-2.789355,-0.215203,-0.512034,6.936739,-6.934875,7.224316,2.099800,-7.367844,7.985310,-8.335201,4.908422,4.764135,1.180468,7.217171,-8.743175,-3.876271,-3.860787,9.988784,0.098958,5.823710,-4.818674,-8.201808,2.293452,7.233862,-3.120055,-7.892295,0.349636,8.901512,-6.595324,6.158263,-9.998280,-1.849183,-2.249757,0.659980,-3.058118,2.649557,9.049994,-2.838889,-6.376437,8.473045,3.043916,1.325000,-3.368098,4.771507,8.062153,0.652584,-9.800789,0.079416,1.604707,-2.808934,9.988689,-8.689403,2.686475,-7.492620,-0.295417,0.449796,8.915709,4.926893,1.510553,5.313545,8.551674,7.129969,-6.052023,-1.770373,3.972691,5.603930,-2.126697,-7.060429,-9.248461,-8.056668,-4.980133,-4.108273,-2.439521,0.863298,-6.914883,-8.669961,-1.702148,2.603144,-7.569593,-2.940901,9.348773,6.400095,-5.256493,9.351700,-4.318679,0.119059,8.016318,-9.620744,4.354136,-5.876297,-3.308871,6.302713,-3.800943,4.352002,-0.181870,-1.930366,5.049417,-8.072588,2.458067,-5.298100,5.136283,9.104179,0.935163,-6.011480,5.454602,-9.481245,6.969505,-6.763647,4.860274,5.146211,-5.479611,8.168033,8.317018,1.236973,5.394459,-9.888778,6.435058,-8.958560,4.853857,-5.350378,2.619474,8.656589,-0.193129,-1.256514,8.205407,-3.584530,8.467898,-9.714673,7.680325,-4.597519,1.396770,1.337026,-6.633134,-8.747705,-3.354173,-8.799607,4.194985,-2.639597,-0.051529,7.687604,-7.398582,7.754008,8.238172,-3.214144,0.290394,-4.019681,9.457193,6.855422,2.102282,-7.155084,-3.564966,5.478306,-0.357162,-8.889733,-1.771256,-5.794930,7.674842,-8.212920,0.519016,0.273851,4.613343,-4.878231,7.716661,-1.482924,3.301105,-4.350725,-8.940486,2.644644,7.953273,2.059817,-3.505520,6.591249,1.600428,-8.379851,-0.160961,7.550451,4.864589,0.026201,7.309982,7.973639,-4.446434,2.726235,1.133040,3.630110,-0.633015,-3.466369,-8.618373,-0.840954,-0.042344,1.921488,-3.552645,-7.481861,-8.196044,-3.307849,-4.110596,-7.107180,9.812630,2.309716,-7.022826,7.951504,2.529381,4.816127,9.613897,2.148270,8.962855,1.432231,1.446133,0.068778,9.981291,2.117297,-9.469430,-0.158140,8.570753,-5.573062,-1.503369,-3.594957,-3.566140,9.075331,8.794686,4.540479,0.763836,-6.640006,-8.087496,-6.035193,7.196681,4.008207,5.550347,9.957649,6.005814,6.560021,-0.156793,9.733206,0.813560,-6.480559,2.898212,4.456866,-3.964537,4.581680,-2.804579,-0.554923,-4.309858,8.251743,8.720636,-6.854078,-3.616200,-5.378578,-1.345738,9.141517,5.702652,-3.719327,3.279801,8.412657,-5.511488,0.262769,0.196331,-8.227846,4.517204,6.957884,1.706192,-9.466323,7.770498,-0.509270,-4.546724,-4.012739,5.134724,2.497893,-2.490318,0.315450,2.873603,8.424044,-6.533517,-4.957494,3.369103,2.344114,-6.813853,9.583909,-2.776499,1.488673,7.501015,-1.074199,-0.684572,-0.621403,4.021726,6.429603,-0.147124,8.805646,7.911470,-5.353937,3.916228,5.097801,1.900493,-4.845488,-3.554878,2.032493,1.028206,-6.098141,4.684374,-5.832965,-7.533700,9.565749,4.687817,-6.363931,4.509688,3.051409,-5.023055,-2.987313,9.778732,9.764551,-4.626758,-8.055831,6.608122,8.484495,5.205164,1.464219,-8.014369,-9.057252,6.237857,-4.298207,3.658407,7.277108,-8.119916,-5.687820,-3.230883,1.934434,-1.455696,-9.997191,-3.762486,-9.483184,-9.966765,-8.047500,-0.957096,-3.647829,5.136973,-5.372112,-3.561386,-6.623624,1.693547,8.331262,-3.671001,-9.848365,-9.942911,-7.423719,7.798789,-3.006898,-1.901664,-6.566177,1.118214,-7.855802,7.530628,5.272196,6.588287,-8.329777,-7.689565,-7.381285,-2.814577,6.560037,-9.776681,4.102161,-5.900331,9.829417,-2.682853,-5.164545,-7.799175,-4.773818,2.840277,6.771740,4.019187,-4.799308,2.521218,4.128629,6.422749,-8.826030,-7.846178,3.297873,0.709684,-3.367522,-1.089194,3.182314,1.035137,-2.747427,-9.280872,4.651484,0.279494,9.829093,3.379651,-9.835162,-0.394435,-0.078815,3.562917,0.885911,-8.896976,-2.590172,-0.032855,6.799405,-8.560002,6.956206,3.135348,-0.521261,-2.502128,-3.739181,-1.366146,-0.113522,2.957131,-9.110224,1.750631,-7.193053,1.169639,-5.174419,-0.326303,4.889182,-5.195321,9.360333,-7.525901,-7.810262,-0.883561,-1.010053,-6.067924,6.359738,8.341563,-9.028189,9.595759,-2.458742,9.421765,3.523606,-4.159436,-7.306017,9.288385,-3.921880,-1.951213,-2.681909,3.275307,8.625321,6.420331,-4.772099,-5.237084,7.088901,1.911396,-0.533374,5.978154,-6.877596,6.898735,-3.588697,8.986827,-5.494130,7.438354,-4.258588,5.524345,-9.464521,-1.915954,9.596934,3.542746,-8.865434,-6.963469,-8.591937,-8.072367,1.395503,2.951423,-7.818333,-3.992598,-6.207810,6.019613,7.060235,4.796484,-1.225052,-0.391215,-4.732991,-8.299942,-4.199803,-6.284559,-7.221236,0.667724,-2.671217,1.452045,0.397217,4.498570,-0.894603,-0.939559,6.087925,3.758293,2.823938,1.479609,-4.548844,3.055700,-4.440738,5.819189,-9.689752,-4.766974,8.501366,-6.103150,0.470423,4.581762,-8.382770,5.561509,8.721992,0.886932,-8.704038,-3.899602,9.306921,6.473685,0.995453,-6.944026,-9.490537,-4.363422,7.723240,-8.450069,-2.502083,-4.017126,-2.963032,-3.301236,-9.252774,-7.074893,-3.748399,3.776146,-9.418594,2.291874,8.815587,-4.489502,-7.567483,-2.410083,6.667016,0.170777,-5.756565,-0.974790,2.727727,-1.437381,8.267927,2.727339,7.371898,7.449496,6.783513,-3.244955,-8.166441,-1.498701,8.487238,-1.050783,-5.912977,9.707704,7.436244,5.822991,-4.812109,9.108766,-3.415151,-3.551826,2.228346,-0.156737,-4.435964,-0.253462,6.701688,-9.631233,2.739425,9.672488,-4.732424,-3.317589,-6.844128,-7.672365,1.527334,-2.351559,-8.149792,9.446176,-8.795279,2.565369,-1.791185,-7.267856,-8.804996,0.206123,0.377694,0.077114,7.670765,-4.464411,4.562329,-8.686811,-2.023700,4.439385,6.689834,-8.103375,-1.395320,1.139766,3.744042,-2.780918,-8.812993,2.016232,-7.352500,6.546857,-2.743535,9.501694,-2.767509,-0.755892,7.270044,-0.045702,2.638576,-9.023769,-8.648136,-8.543365,6.137286,7.973485,-6.874724,-9.862514,-0.664603,-1.303605,9.336923,-9.794081,-1.763811,-6.319390,-5.854077,-9.422581,9.117543,5.638655,-1.995064,-8.248361,-4.419149,0.069532,-7.307725,5.050520,3.709187,-1.187080,-4.862065,0.588882,3.135378,-9.228159,-2.534025,0.093843,9.650795,4.234185,8.703048,-9.218235,7.210373,-8.769854,5.529204,-4.353065,-0.394413,4.764283,-0.687757,1.754995,-1.644508,0.493933,-3.383757,-6.886874,-7.070335,-8.312643,5.273884,9.028638,-9.829185,6.306774,-0.153998,8.290203,-6.582238,5.675085,2.447804,-6.626234,-0.158025,-0.843513,0.663936,-8.439468,-6.163726,7.226368,9.654125,-3.060982,-2.096711,6.153781,-5.006882,0.975116,5.997696,4.899990,3.224862,-7.105968,7.297519,7.432908,-3.056495,-8.421400,-4.503761,-0.132820,8.711286,0.067193,-7.619828,-9.037474,3.772633,5.140250,-1.612723,5.313711,9.889639,5.988482,-8.701421,5.893093,-9.176035,4.066971,5.067955,5.259382,7.256947,-3.112898,5.694940,-8.195253,2.509102,-0.270339,-3.413132,6.106416,0.068120,-3.792864,6.808685,-4.836102,-7.114390,-9.393420,-0.777122,-6.641317,5.045621,7.175649,5.985662,5.870532,-8.213576,-4.796827,-5.083655,-1.831825,-4.060404,1.680098,-9.782366,8.878123,-0.129007,-8.962962,7.652564,-1.458336,8.603567,-0.319605,9.412150,4.904098,7.096399,-4.267688,-7.035224,5.646971,9.353677,-1.108443,5.720274,-0.463562,-9.977662,-2.741479,6.493735,-6.465694,-3.394585,1.429343,-9.678703,2.310929,-7.405049,5.546683,-0.880478,7.755348,-4.670196,1.254006,-6.084775,8.648926,-2.677270,-4.337742,-7.818875,2.140860,0.165042,-4.900537,7.243620,7.017760,6.725721,-1.472434,-8.331528,4.340319,-7.049488,-8.068202,8.206609,5.914301,0.230202,9.146813,-8.919743,-9.410777,-1.277380,5.328784,9.818990,9.769641,-3.207179,-7.392398,-0.510786,3.047429,8.021724,7.205445,0.201911,-6.428335,-5.409287,-4.948440,-8.552794,6.758712,2.143629,3.703693,5.493471,2.444158,-5.690734,-9.404500,4.316470,0.317298,2.803910,8.062702,3.514954,0.641315,-7.741007,-8.151378,7.808380,3.411259,9.874714,1.131343,4.524884,-0.016747,-3.021622,-7.600606,-7.793562,-1.076747,-3.394785,-7.054038,-4.118236,-7.656692,0.271960,3.141332,-7.725114,8.013403,8.316922,-8.495015,6.118723,4.793946,-0.667211,7.294468,5.661733,-0.950578,-7.262431,-7.103147,2.568828,4.340069,4.437659,9.736678,1.508732,7.921679,4.239841,0.484458,-8.824873,-0.051036,6.976203,8.107938,-8.838434,-4.385686,-1.292884,8.423172,2.390204,-3.214943,5.905749,-7.159862,-9.507084,-2.149424,-9.769944,-6.326887,-8.759647,1.864812,6.991842,-8.665980,-4.817752,-3.043659,9.935682,-1.852761,-9.095795,-8.407728,-4.619951,-5.004395,-7.454274,-9.318088,-0.821930,-2.466573,-2.903957,-6.091965,-4.687215,8.495240,-0.993243,-3.942625,7.942059,-0.773753,5.837577,9.039240,-7.694751,2.589067,-1.845870,2.751625,-2.582029,2.403470,7.034684,-3.866909,1.165888,-9.794274,1.973126,8.630553,-6.280662,-5.530044,-6.207034,9.150400,8.783507,-9.156700,9.885609,7.748572,5.389326,-1.850978,-3.931807,-1.828120,-8.251413,2.773802,5.535473,-6.369847,1.870289,-0.716050,-0.133053,-7.394681,-2.936419,-8.643431,-6.210880,6.286401,-0.731616,-5.593312,3.138270,-2.511769,9.833662,5.759461,9.452503,-5.460867,3.568314,-4.420642,4.751028,9.008805,6.634632,9.239666,7.613065,3.387284,-4.174531,8.292253,4.811355,9.517895,7.184046,1.128920,-8.720274,9.276585,-4.646882,3.178975,-7.782501,9.676340,-8.672249,9.053210,-5.197120,-0.610949,-4.279042,-6.901025,1.271190,8.241736,-0.292117,7.435682,-7.585127,-4.348894,4.947440,-7.591226,8.448963,3.945227,-6.595548,1.741782,-0.719550,6.740988,3.063510,-6.392739,6.701672,-2.161340,-2.539665,-8.728705,-4.786321,-3.239764,1.267787,-9.837657,-7.171190,-3.601943,-4.761421,8.771153,9.691453,-1.189500,-0.267817,-3.385608,-2.099492,-7.644751,-2.553126,2.725318,4.506382,-2.073005,0.202089,2.864835,8.535829,-8.994611,-9.466564,-9.260927,7.899110,-9.282973,0.160277,3.426820,5.731009,-8.689978,5.666368,0.768488,1.097421,6.009578,-6.832135,3.919933,-6.857429,7.493766,6.387679,5.504443,-9.557479,5.164547,-8.389623,5.074102,-3.676446,3.991598,-0.198237,-1.880923,1.991113,-0.824638,6.431400,7.864542,7.372152,-5.501533,-9.329592,2.481610,0.143844,-2.300917,-9.721554,-5.701206,6.038770,-7.037050,-5.999455,-2.990096,-0.973119,0.664929,-5.369033,1.711417,6.522534,-3.694609,7.137050,1.074655,-7.190111,-6.095140,3.098406,7.107393,3.041455,-2.983946,7.157080,0.989970,0.649370,7.967756,8.355478,-0.126645,-0.657531,-5.573521,-1.535337,-4.810469,2.819176,1.845379,4.678210,1.677861,-7.329278,-3.119582,-1.628698,4.309183,-6.348677,1.230082,-5.285502,3.410815,6.162661,-0.620480,1.690010,-1.017555,-8.283682,9.426673,4.951300,-4.664711,8.154561,2.343872,-8.098992,6.845025,8.853485,-6.830729,-8.839030,-9.914796,1.173783,-5.776440,8.087489,3.467499,-5.581299,-6.689401,5.054645,-1.263804,2.093464,1.050964,-6.938663,8.001851,7.582264,6.672378,3.701319,4.001563,7.068679,5.800387,5.231922,-1.057958,4.247150,2.545534,9.423264,1.487464,5.962139,-7.111369,-8.973943,5.194091,7.308540,7.488052,-6.194599,7.969717,-4.121150,-6.756433,7.267800,-7.721952,2.800115,6.246062,0.234686,-3.773794,8.120143,-1.759163,-5.487964,-6.606879,4.518835,-1.889422,-0.028578,2.364282,-0.938535,-3.136360,-9.237414,-6.787919,-5.345010,-8.486187,2.923696,-4.378551,4.412292,-7.034304,-6.619058,4.297479,-8.661809,3.961472,5.818744,-8.737353,1.707862,5.602884,8.987238,7.743139,7.370195,7.382619,-4.393330,-1.924546,-2.721707,6.011411,9.295730,-5.666198,-6.025085,-6.459219,-9.418386,4.243572,-1.919420,7.459499,3.014917,6.361455,-5.132842,7.464301,4.774753,-3.570922,-9.859407,-3.395219,-9.553346,8.777616,3.419030,-9.062095,-5.307255,4.458277,-9.872413,-4.136155,6.057183,4.368054,-5.203246,8.556712,-5.629219,-2.516137,5.059531,-3.333640,6.985213,9.082140,9.927609,6.019232,9.862564,-0.592433,2.840927,1.432949,1.745631,3.832979,6.551525,8.606923,-0.444985,-8.712905,-5.175373,-4.392362,3.719811,-3.909930,8.553169,-0.180127,-9.205107,2.744990,-8.681494,6.524394,0.790660,7.330313,4.260911,-5.818026,-0.474906,6.563760,8.870804,8.541692,3.107359,5.589089,0.720446,-6.403795,2.343128,7.319737,-0.088251,9.280205,6.332855,2.530511,4.423793,0.754280,-9.107728,-4.096284,-5.723173,-4.757777,-9.501285,-2.060975,-8.103976,7.962663,-9.387086,7.462626,2.434226,-7.711574,6.475301,1.666684,8.339750,6.595929,-8.344589,1.181184,9.848353,-7.481102,-1.692221,0.923022,4.861147,-1.738688,2.956371,1.530119,-7.136507,-8.456365,3.725326,-3.515295,-0.967086,-1.624798,7.689660,0.513273,-7.041584,-8.525141,-4.062640,5.902095,7.377516,-3.714683,9.939792,7.466187,4.905551,0.573901,-5.725599,-0.753756,8.203975,0.814287,-6.708903,5.996343,-4.394437,3.767762,4.301527,4.869837,-6.045241,-2.613929,8.898883,1.237216,2.373078,5.934807,-0.247218,-0.501375,-0.576209,3.909503,-2.569931,6.094591,-0.494033,2.110773,4.711725,-9.593895,-9.635590,8.867879,8.964986,3.396672,-0.784153,-5.832587,-3.263342,-2.705568,-3.956190,8.012525,3.604421,5.303008,-4.325192,6.064900,3.683713,5.969823,-8.656712,3.164286,-1.967258,-4.336925,7.860861,2.650782,4.825874,2.623489,6.613162,-8.193330,0.201154,8.856240,8.998044,-1.909204,-7.933366,-6.469171,-4.623379,-5.644648,-7.685896,8.601006,0.201364,1.271299,7.501376,-1.146336,-8.471900,3.434982,3.258546,3.086936,6.578253,8.018656,3.345310,9.373459,-6.370818,-1.352183,-3.237183,-7.491692,2.654751,7.684918,-2.142604,6.265296,-4.813085,8.186907,9.223651,-0.780752,-4.144722,6.031183,-7.349153,5.321105,-8.384833,2.301615,-4.604051,9.428140,-8.565654,-3.849331,-1.502709,5.376340,-3.485194,-3.298880,5.459704,-4.942349,2.309204,8.344285,-5.176090,-1.040260,0.816692,-6.716956,0.492250,0.829378,-4.342638,7.216849,3.412004,0.458651,5.712420,-7.537923,6.674797,-8.192880,-3.890552,-5.931974,-0.829910,7.024225,-2.847243,3.823125,8.089963,4.100867,-3.408900,3.701704,4.185229,0.027039,-0.775313,9.966430,8.216375,-2.774570,-1.804594,-0.619988,5.459997,-9.881567,1.162881,-3.091664,-4.799505,-1.837307,-5.738795,-9.125386,6.618932,-2.085886,7.294398,3.969729,4.956483,-4.749263,-0.469556], dtype = "float32")#candidate|8613|(1728,)|const|float32
call_8611 = relay.TupleGetItem(func_5056_call(relay.reshape(var_8612.astype('float64'), [10, 8, 10]), relay.reshape(const_8613.astype('float32'), [1728,]), ), 1)
call_8614 = relay.TupleGetItem(func_5059_call(relay.reshape(var_8612.astype('float64'), [10, 8, 10]), relay.reshape(const_8613.astype('float32'), [1728,]), ), 1)
bop_8617 = relay.bitwise_and(var_8605.astype('int64'), relay.reshape(var_8606.astype('int64'), relay.shape_of(var_8605))) # shape=(14, 11, 8)
uop_8628 = relay.asinh(bop_8607.astype('float64')) # shape=(14, 11, 8)
func_4647_call = mod.get_global_var('func_4647')
func_4650_call = mutated_mod.get_global_var('func_4650')
var_8632 = relay.var("var_8632", dtype = "float32", shape = (8, 36))#candidate|8632|(8, 36)|var|float32
call_8631 = relay.TupleGetItem(func_4647_call(relay.reshape(var_8632.astype('float32'), [288,])), 1)
call_8633 = relay.TupleGetItem(func_4650_call(relay.reshape(var_8632.astype('float32'), [288,])), 1)
uop_8635 = relay.log2(uop_8628.astype('float32')) # shape=(14, 11, 8)
func_7867_call = mod.get_global_var('func_7867')
func_7870_call = mutated_mod.get_global_var('func_7870')
const_8655 = relay.const([6.031195,-5.528220,1.357998,-8.012884,-4.539751,-2.402594,0.574221,0.622425,9.471037,7.133350,1.528056,-3.412143,6.407243,-6.206905,1.582490,0.489078,-4.807172,6.135676,6.089620,-2.249281,-6.580843,4.880642,7.220465,-2.701612,1.394743,-7.080723,4.078774,7.886663,-6.313464,-3.308758,8.343500,-9.370008,8.320806,2.629554,-4.291584,-9.867767,6.352619,-0.320152,-8.804081,7.399078,-9.174051,-6.394948,-5.860934,-7.372532,8.119097,-3.768081,-0.772866,-2.120872,-5.797997,-4.632549,-6.629072,-5.579751,0.369219,-6.126912,6.776297,3.227778,4.470947,-7.314190,-8.091528,6.342348,4.180660,-8.080870,-7.344009,8.556290,-3.601576,2.384698,9.470195,-8.741888,1.042293,-5.230875,-5.262111,-3.037171,-5.201287,-5.579946,-1.753249,-0.794509,7.410262,4.746213,-3.524336,8.035235,6.324503,5.282700,-4.760628,6.928832,-3.297567,-6.056331,0.614306,1.698113,1.741627,-1.091276,4.857774,0.210625,5.628644,-7.809707,-7.696699,2.683298,2.458087,-3.723606,-0.657446,5.027565,4.738638,-4.430897,-6.569478,-5.702139,5.180333,0.002638,-9.977741,5.145491,-5.910976,0.450213,9.802648,-8.525011,5.033074,-0.049291,-0.677524,-3.775058,-8.845231,-9.506988,-7.828866,-3.156149,-9.048345,-8.740922,7.874993,-8.781477,-5.240521,-8.097830,-1.865387,-5.507799,6.947538,-3.064968,-7.472492,0.459987,8.585445,1.802050,5.055759,1.468307,-7.618382,-9.499286,8.724908,4.216222,-7.339776,-8.676112,-3.525146,-3.511410,7.987791,5.511959,0.388758,-1.252847,-3.328436,0.452577,-6.618669,6.942845,-0.152003,-6.256070,8.999735,6.544791,2.297061,-8.758300,-1.641250,3.321519,1.489028,9.185400,7.222437,1.767638,-1.589265,2.683684,3.664178,6.444208,-1.089689,-2.555788,5.579532,8.226138,8.247846,-3.981705,-8.111284,7.520937,-9.385262,8.488264,9.865423,8.076145,7.945162,-0.689966,-8.633865,-0.986752,7.040833,-5.553483,0.022633,7.192370,8.757657,-5.567976,0.394417,-4.482342,3.890829,0.702090,-0.021511,-5.753467,-3.703703,5.604468,-0.182225,6.519584,-1.887912,-7.178487,-7.022892,-8.450622,5.308487,6.791392,-8.037841,-3.631275,0.530627,-7.354624,-8.472302,6.803462,2.322712,6.261876,3.536915,3.417790,-9.994628,1.038385,2.818969,9.181633,-8.969124,0.011988,-2.781783,-2.543624,-5.031086,1.285211,2.278462,6.050863,1.818772,-9.794988,4.096603,-9.159857,1.814598,-7.135199,8.153371,2.354307,3.325904,7.608197,-6.241681,9.739635,-9.493443,-1.342091,-6.705114,6.628308,-2.738088,-3.134440,8.540506,-5.011107,-4.271008,-3.035599,-5.513231,7.987237,-0.393800,6.874438,6.259490,7.894073,7.839739,8.836493,7.516741,-0.071140,8.110512,-3.958471,9.042335,6.188571,0.879269,-0.278188,-1.805106,7.010230,-8.029130,9.991237,-2.315215,3.765421,-5.896673,9.320339,5.666348,-4.802575,-9.476280,-3.215888,4.381139,6.701154,8.503095,-5.292466,9.416406,-1.622339,-7.377909,5.116324,0.113074,-6.397560,-1.653975,8.442105,6.116229,-2.203081,-4.295393,-4.686359,-1.139645,7.312449,6.497962,9.827266,8.717327,-8.222661,-4.089075,-1.934260,-0.120697,4.216164,-9.559791,9.543935,-7.082257,7.512362,-9.397666,-1.199841,2.708587,-6.643243,3.082791,-1.217162,6.282515,-1.049925,-8.038370,0.131753,-1.981963,9.744410,-0.818080,-3.058776,-5.302737,0.842714,5.656584,-4.784653,6.320753,4.821529,-4.101372,-4.338143,-0.431123,5.934648,6.032527,-0.732687,-6.760218,1.778710,-9.853393,9.737955,5.473236,2.174645,7.285552,-7.241672,-6.319051,9.324466,1.224581,-7.554396,2.017409,-5.698467,3.394048,-7.625460,9.375659,-2.234290,6.255319,-8.547915,-4.637183,-1.105150,4.694179,5.661002,-2.075269,0.248465,-9.253541,-7.137579,4.651152,-7.220216,4.508565,-1.181474,-7.852635,-6.308898,1.417485,8.963029,-9.147140,1.296995,-8.161571,2.355206,8.181912,-3.984062,-8.543184,7.987247,2.873501,-2.489356,-9.395199,3.212700,7.608965,7.982239,8.156140,8.441938,-2.306134,4.596234,7.946379,8.977564,4.126129,-8.548528,-7.363839,-3.321340,0.515365,-7.816078,2.185771,6.245526,7.126861,8.565609,3.268069,-2.923806,4.424876,-6.730391,-5.543802,-7.384976,9.027726,-7.061576,-8.647782,5.365377,4.230123,-2.117637,-5.863299,-3.581134,-3.509790,-5.860690,-8.342402,1.778922,-0.584057,-3.037794,9.258424,3.867277,0.331782,9.896103,-0.262712,0.208664,-6.438226,-0.360955,3.149646,6.699623,9.785884,7.266793,-1.018470,5.256548,-3.666680,-2.966575,-1.709449,-8.036692,6.268174,-2.130772,6.333472,9.279925,8.065317,-4.377249,-9.531550,-5.686761,3.608045,4.274919,-7.817634,-3.189671,-9.013711,-9.476002,-1.437840,-0.470160,-0.169608,7.796721,3.782322,-5.979870,7.342184,2.965833,-8.002596,4.059130,-9.410696,2.666817,3.978989,4.497400,-0.352312,4.122661,0.078719,-9.409191,-4.636344,3.360221,8.757687,-7.959512,-0.705843,-7.574174,5.146255,-8.349736,0.507699,-9.139775,4.406406,-2.708117,6.908006,5.362221,-7.986880,9.596391,7.127943,-3.704115,-0.893377,3.841388,-4.842812,1.753644,1.696578,3.635448,3.111450], dtype = "float64")#candidate|8655|(495,)|const|float64
call_8654 = func_7867_call(relay.reshape(const_8655.astype('float64'), [15, 3, 11]))
call_8656 = func_7867_call(relay.reshape(const_8655.astype('float64'), [15, 3, 11]))
output = relay.Tuple([call_8611,var_8612,const_8613,bop_8617,call_8631,var_8632,uop_8635,call_8654,const_8655,])
output2 = relay.Tuple([call_8614,var_8612,const_8613,bop_8617,call_8633,var_8632,uop_8635,call_8656,const_8655,])
func_8658 = relay.Function([var_8605,var_8606,var_8612,var_8632,], output)
mod['func_8658'] = func_8658
mod = relay.transform.InferType()(mod)
var_8659 = relay.var("var_8659", dtype = "int16", shape = (14, 11, 8))#candidate|8659|(14, 11, 8)|var|int16
var_8660 = relay.var("var_8660", dtype = "int16", shape = (14, 11, 8))#candidate|8660|(14, 11, 8)|var|int16
var_8661 = relay.var("var_8661", dtype = "float64", shape = (800,))#candidate|8661|(800,)|var|float64
var_8662 = relay.var("var_8662", dtype = "float32", shape = (8, 36))#candidate|8662|(8, 36)|var|float32
output = func_8658(var_8659,var_8660,var_8661,var_8662,)
func_8663 = relay.Function([var_8659,var_8660,var_8661,var_8662,], output)
mutated_mod['func_8663'] = func_8663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8822 = relay.var("var_8822", dtype = "float32", shape = (9, 2, 11))#candidate|8822|(9, 2, 11)|var|float32
const_8823 = relay.const([[[-5.072716,8.087040,1.884155,6.723392,-0.604207,-4.843519,-1.596440,-2.878280,1.471043,-7.257426,-3.277383],[-0.430001,-9.476498,4.718692,7.442251,5.246478,-5.858341,-5.187642,7.829137,-0.825624,-5.715887,-7.082381]],[[9.813030,3.057163,9.121218,-6.645483,7.044395,-7.858765,-3.672244,7.754495,1.493920,8.428136,-7.300452],[7.553300,1.014732,9.941079,-4.540833,2.311869,-8.278882,-8.277479,-9.685773,8.374601,8.235519,5.623968]],[[-0.797062,-7.464220,2.084926,3.000446,3.504801,0.414266,6.309455,-2.128903,-5.621893,7.931298,-5.338948],[6.516100,-6.075640,-7.262414,-2.677893,-7.685660,3.415504,-9.221287,-5.660610,-8.803188,-3.706311,2.187349]],[[-9.174081,0.921677,8.759587,-5.747339,-0.286970,-2.645408,-2.290992,8.091593,-9.050344,5.005368,-2.223999],[-0.822611,-5.624257,-6.030672,-4.533907,-6.188573,-1.732780,4.028637,-6.001493,7.784693,9.493797,1.741585]],[[1.112848,0.899640,-6.516084,3.012132,-5.767108,-9.236651,-6.531478,-2.402044,-8.985491,5.829973,-5.645676],[-7.377432,-6.613055,-6.204855,1.174083,-8.377656,-9.891003,-8.663310,-7.358160,5.254767,8.127768,5.967088]],[[-3.137254,-6.585081,-3.689471,1.240344,-3.607186,2.026841,-3.522966,2.035759,-9.449373,-1.849526,8.728706],[5.970781,-8.446222,-4.592778,-4.833893,0.983990,6.094285,0.803581,4.295604,1.874200,-5.479788,0.286520]],[[-5.040957,-6.006300,-6.013640,6.392589,2.606271,1.031112,4.640593,9.299761,-6.452463,-5.891424,-3.351698],[6.493988,0.210047,-8.843149,-3.568860,-1.247666,-4.348620,7.171273,1.019548,-3.709315,6.318725,-7.863441]],[[9.701990,8.033844,-1.743280,-0.006486,8.349968,-7.877311,-7.935448,6.064285,-9.203117,5.778961,-9.033322],[6.730710,8.207926,5.336371,-0.425417,2.363346,7.662420,0.465404,-0.349430,1.353364,4.793651,-5.122358]],[[-1.803268,-6.657122,7.177291,2.060167,-6.350797,0.373113,-6.932528,9.842807,-9.351831,-7.723558,8.811436],[5.831989,1.450959,5.869586,7.524197,-4.273160,0.915944,-8.447005,-0.468194,4.257708,3.635249,-1.439109]]], dtype = "float32")#candidate|8823|(9, 2, 11)|const|float32
bop_8824 = relay.floor_mod(var_8822.astype('float32'), relay.reshape(const_8823.astype('float32'), relay.shape_of(var_8822))) # shape=(9, 2, 11)
func_7405_call = mod.get_global_var('func_7405')
func_7410_call = mutated_mod.get_global_var('func_7410')
var_8831 = relay.var("var_8831", dtype = "float64", shape = (196,))#candidate|8831|(196,)|var|float64
var_8832 = relay.var("var_8832", dtype = "int32", shape = (1440,))#candidate|8832|(1440,)|var|int32
var_8833 = relay.var("var_8833", dtype = "float64", shape = (90,))#candidate|8833|(90,)|var|float64
call_8830 = relay.TupleGetItem(func_7405_call(relay.reshape(var_8831.astype('float64'), [4, 7, 7]), relay.reshape(var_8831.astype('float64'), [4, 7, 7]), relay.reshape(var_8832.astype('int32'), [1440,]), relay.reshape(var_8833.astype('float64'), [90,]), ), 2)
call_8834 = relay.TupleGetItem(func_7410_call(relay.reshape(var_8831.astype('float64'), [4, 7, 7]), relay.reshape(var_8831.astype('float64'), [4, 7, 7]), relay.reshape(var_8832.astype('int32'), [1440,]), relay.reshape(var_8833.astype('float64'), [90,]), ), 2)
func_8658_call = mod.get_global_var('func_8658')
func_8663_call = mutated_mod.get_global_var('func_8663')
const_8838 = relay.const([-4,9,5,-10,4,7,-1,-9,2,1,-3,10,10,4,-5,-3,-2,-7,-4,9,8,1,9,-8,-6,-10,-7,-6,6,1,1,-2,-6,1,6,6,-5,5,-7,-4,-1,-3,3,-5,1,2,-8,4,-3,-6,4,5,10,-5,1,9,-4,-2,4,-7,3,-5,-4,-7,-8,8,-4,3,-10,-1,10,5,-4,2,-4,1,2,8,-8,5,-7,-8,-3,-5,1,-4,-7,8,5,7,1,-7,-7,9,10,-9,-6,-10,-10,-1,-2,-6,5,-10,4,-2,-7,-9,3,-8,-3,-2,6,9,-6,10,5,-6,-8,1,-4,-8,-3,5,-7,3,-2,1,6,7,-8,1,-1,-6,-5,-2,1,10,-8,-9,10,5,6,1,5,7,2,-9,-7,3,-1,1,-4,-5,7,-7,8,8,-9,-8,-4,-10,-3,1,-5,1,9,7,4,8,-7,-8,-9,1,-5,4,5,10,-4,-7,-5,-2,-2,-10,4,2,4,-8,-8,1,-9,-5,-1,-2,5,-2,2,5,-5,-2,4,2,-4,1,9,-7,8,-3,-6,4,6,2,-9,4,3,-5,-10,4,-7,-7,-8,-5,6,-5,-4,-4,4,10,2,-9,10,1,-3,5,2,4,-8,-8,10,-5,-4,-7,-4,4,-1,-10,-9,2,-7,-9,10,-3,-4,-3,6,-9,8,1,-4,-5,-7,9,-5,5,-9,5,10,8,-8,-10,-8,9,6,-7,4,-9,-6,-9,7,-6,-10,6,6,-6,4,3,7,-7,9,-5,-5,-5,1,3,-8,6,10,8,5,-4,-1,2,-6,-1,4,-7,-10,-1,6,1,-5,-4,9,2,-7,5,-1,4,-6,2,2,-1,4,5,8,-8,3,9,-3,7,9,-7,-7,-8,7,6,-1,-4,-9,-7,-5,3,6,-1,4,10,-8,-4,10,-1,-1,-8,2,-9,1,1,2,5,7,-8,1,-4,5,-5,9,-5,3,-5,7,7,2,5,3,2,3,-10,-8,-5,-10,1,6,-2,-1,-5,2,6,1,6,1,-3,9,-3,6,3,8,-9,-10,-5,-9,9,2,3,-9,9,-6,6,-6,4,7,-1,-1,-1,-1,-2,-7,-10,-6,-6,2,5,-10,7,2,-1,9,5,-2,1,-3,4,1,2,-8,2,-6,2,-2,3,8,-4,-5,7,5,3,-8,-1,2,8,-4,4,1,-5,2,-8,1,9,1,7,3,-6,-6,2,2,2,2,5,9,-8,-7,5,-10,-8,-10,9,-3,-4,3,1,-6,1,-6,-3,8,7,-10,5,-7,-1,8,-2,-6,-1,2,6,4,10,-6,6,8,9,-6,-8,-9,-3,10,9,-4,6,-4,-6,10,8,-10,-1,-8,6,7,10,-4,5,8,9,4,-8,8,5,-3,-7,7,-3,8,-10,5,3,3,-3,-1,3,-8,4,-8,-5,3,-5,-9,7,8,-4,-7,2,6,1,8,3,-8,1,7,6,-7,10,1,-3,7,2,6,-2,-9,-10,-8,2,-1,1,-10,-5,9,-5,7,9,-7,5,-7,6,1,-1,-2,-4,-6,8,-3,-5,2,-3,7,-10,5,8,2,7,3,-4,-1,-5,-3,-4,-9,9,6,10,-5,10,6,1,-3,3,8,-8,-6,-7,9,5,10,-9,7,-2,10,2,9,5,-4,5,-6,3,9,2,1,5,-1,-8,4,1,-1,1,8,1,6,6,-10,-5,10,6,-5,3,-7,-4,-2,-4,-10,2,-3,-2,8,1,10,8,3,1,6,4,6,4,-5,-10,5,4,6,7,7,-5,-3,-5,6,-4,10,6,8,-4,10,9,-8,5,1,2,-9,-3,10,3,-3,-10,7,-7,-8,9,4,7,-10,-10,4,7,10,10,-9,6,9,5,4,10,-2,1,-4,-2,1,-5,5,-10,3,3,-2,4,-6,5,10,9,-4,-1,-9,3,6,-4,-4,-6,-6,-1,-9,-10,-5,-3,10,-8,-6,-3,2,4,-7,-9,-7,-8,-3,1,-5,8,-6,4,7,-2,-10,8,4,10,-4,-10,1,4,-8,-9,-6,10,10,-7,5,9,-6,-7,-1,-10,5,6,2,1,6,3,-9,-1,-9,5,10,1,-3,4,5,-8,8,6,3,9,1,1,-7,10,-3,-1,-1,8,-3,5,-8,8,-7,5,-6,-1,-8,-9,-3,2,4,-8,10,-8,-10,-10,-7,4,5,-6,-6,9,7,1,-5,-7,-10,5,-3,-2,-7,1,1,8,9,-8,-10,10,-3,9,-8,8,-3,8,5,1,10,-5,-9,8,8,-4,-3,8,-7,-5,-5,-3,-5,8,-2,-9,1,5,7,-10,9,5,-8,7,2,-2,-4,-9,7,8,-6,-4,-1,9,-2,4,4,-3,-4,10,6,-7,9,1,5,7,-6,-10,-10,6,-9,3,-10,6,1,-2,-9,7,-6,4,-8,1,-2,3,-10,-1,-9,-2,5,5,-5,-2,7,-2,10,2,-7,-3,6,8,-3,6,-5,3,8,3,8,-10,7,-7,6,-4,-6,1,-3,7,7,-9,4,2,1,-7,-3,5,-7,-4,4,7,4,-2,-6,-2,2,5,5,-10,-3,7,-4,-5,-3,-5,8,6,1,-9,-7,-9,-4,7,-4,-8,-3,-4,-5,9,7,-8,-7,6,-2,-6,8,10,-4,3,-5,6,6,-7,6,-3,-10,-7,-5,7,-10,8,2,1,-6,-3,-9,-9,6,10,-1,-6,-3,-10,-8,6,1,5,4,9,-4,9,9,8,5,9,10,5,-8,2,3,3,3,-9,-6,5,9,3,5,5,-1,3,10,5,-4,-4,-6,-3,5,-8,-8,-2,8,-7,9,2,-8,1,5,-8,4,6,-10,-3,-10,-7,3,-7,5,5,-8,5,-1,4,4,-5,-5,-10,-1,-10,-5,9,-8,-2,-2,8,5,-6,8,2,-3,2,-9,2,7,-3,9,-2,-8,-10,1,-10,1,-3,-9,3,-4,-9,9,-5,5,9,-9,3,-5,-10,2,3,6,-4,-10,9,2,-9,1,-7,3,10,-9,1,-7,2,-1,-3,-10,-3,4,6,-10,-8,10,-7,3,7,10,10,9,7,7,-6,-6,7,1,-5,8,-9,-9,1,4,8,6,-3,9,2,9,3,8,-5,-1,7,-6,-8,-5,-10,7,-6,5,-7,-9,-10,-10,6,-3,7,1,-5,-2,-3,4,-9,1,-5,7,3,-4,6,6,-9,3,2,10,3,2,3,9,-8,-7,9,6,10,4,3,-8,-6,-10,6], dtype = "int16")#candidate|8838|(1232,)|const|int16
var_8839 = relay.var("var_8839", dtype = "float64", shape = (800,))#candidate|8839|(800,)|var|float64
const_8840 = relay.const([-4.544523,-4.480755,4.716492,-5.548786,7.600267,-1.359217,3.551591,0.165187,-9.162328,6.002269,-5.859754,-4.698443,-6.109763,6.629590,-1.603621,7.201148,0.278710,-2.999438,-5.389305,-1.838756,-8.320088,8.205387,-6.739562,1.501338,-7.371024,-1.688131,-4.833848,-4.924669,9.499055,-9.496978,-0.257720,-0.796773,4.203724,-2.638173,-5.716284,-3.144553,-5.067821,-8.158116,-7.307296,0.130240,-0.502300,6.629658,5.977875,-9.232569,9.655214,-9.704544,-2.008394,-0.981000,8.213675,0.883891,3.051752,-7.492063,2.702621,-9.887307,-1.874457,-4.521920,-7.314539,9.434753,4.643902,-7.728897,9.690715,-8.265450,-6.714775,1.799961,-4.155931,0.160920,-2.135763,2.139811,-8.545812,9.015895,5.195615,2.596151,-9.473709,0.089175,-8.466250,-0.331297,-2.091585,6.644082,8.461031,9.943970,4.684165,-1.214389,-1.510796,0.663656,8.876912,-3.049309,5.682844,-6.839877,-8.881779,9.891662,-9.095730,-1.332752,0.086317,9.913760,4.779031,-8.469496,4.822895,-6.415673,-4.826757,-3.863422,2.241792,-1.828934,-7.692107,-2.608742,5.917875,-8.310013,4.788599,-2.965785,-0.863928,-4.497698,-0.857750,6.080254,6.026409,-8.945797,8.086061,6.747744,2.760614,2.515763,2.222440,-6.538040,-8.018616,-0.508669,-6.860248,-2.312165,-0.968702,-2.977970,7.884464,-6.651135,9.982458,-3.700332,9.787779,9.445624,8.441138,-6.052487,-0.411908,5.013098,7.919552,9.938790,7.658303,7.544900,-5.375689,-4.900287,8.765147,-1.618076,1.639400,2.800739,-3.033472,7.301423,-1.455726,-8.876738,4.514705,1.103231,2.062837,-8.806514,-3.741308,-1.035834,3.171694,-1.461248,2.658344,6.849219,0.991821,1.632549,-0.007268,4.294829,7.364194,9.319700,-1.012299,4.782731,6.151476,-7.904838,5.911639,-2.490491,4.735472,5.878607,4.210786,-9.587992,-9.404857,2.229896,-7.067089,1.305241,-4.425199,-8.320878,7.375750,4.640876,1.010723,-5.018123,-1.969249,1.193752,1.222217,1.283814,-1.380092,8.275616,4.691232,9.241875,0.399844,2.701130,4.385688,-0.693170,-7.612849,-0.088470,5.953993,-3.915353,4.042872,-3.220040,1.650920,-4.407466,1.238951,-6.790300,-8.664491,-6.701813,-6.559276,6.645817,-0.293673,-6.816098,7.957279,-2.757150,7.519804,6.911414,0.981272,5.303235,4.009753,-2.600697,1.326896,3.090213,-6.515729,5.287966,-5.348054,-3.156070,8.483055,4.587989,4.886799,4.239926,-1.961251,-0.553612,-0.868612,-2.135761,4.617585,-9.605069,7.079309,-6.728998,-9.243685,-3.847207,-3.673943,9.468889,2.292867,0.082209,-1.798172,6.683766,1.335185,-1.934755,9.373699,8.956900,1.667298,5.273230,9.204786,-5.340316,-6.031035,-9.173630,-7.749955,-8.749402,-3.965661,-8.427260,-9.026480,-1.119556,9.833262,-6.525032,0.101093,1.319445,4.239452,-4.576351,-0.182819,-6.248450,8.346881,-6.572490,-8.977346,-1.348288,-6.496380,-5.097645,-7.623133,-0.394007,6.603619,0.882782,-7.593447,-5.128223,0.471966,-0.080985,6.360157,-8.095468], dtype = "float32")#candidate|8840|(288,)|const|float32
call_8837 = relay.TupleGetItem(func_8658_call(relay.reshape(const_8838.astype('int16'), [14, 11, 8]), relay.reshape(const_8838.astype('int16'), [14, 11, 8]), relay.reshape(var_8839.astype('float64'), [800,]), relay.reshape(const_8840.astype('float32'), [8, 36]), ), 3)
call_8841 = relay.TupleGetItem(func_8663_call(relay.reshape(const_8838.astype('int16'), [14, 11, 8]), relay.reshape(const_8838.astype('int16'), [14, 11, 8]), relay.reshape(var_8839.astype('float64'), [800,]), relay.reshape(const_8840.astype('float32'), [8, 36]), ), 3)
output = relay.Tuple([bop_8824,call_8830,var_8831,var_8832,var_8833,call_8837,const_8838,var_8839,const_8840,])
output2 = relay.Tuple([bop_8824,call_8834,var_8831,var_8832,var_8833,call_8841,const_8838,var_8839,const_8840,])
func_8842 = relay.Function([var_8822,var_8831,var_8832,var_8833,var_8839,], output)
mod['func_8842'] = func_8842
mod = relay.transform.InferType()(mod)
var_8843 = relay.var("var_8843", dtype = "float32", shape = (9, 2, 11))#candidate|8843|(9, 2, 11)|var|float32
var_8844 = relay.var("var_8844", dtype = "float64", shape = (196,))#candidate|8844|(196,)|var|float64
var_8845 = relay.var("var_8845", dtype = "int32", shape = (1440,))#candidate|8845|(1440,)|var|int32
var_8846 = relay.var("var_8846", dtype = "float64", shape = (90,))#candidate|8846|(90,)|var|float64
var_8847 = relay.var("var_8847", dtype = "float64", shape = (800,))#candidate|8847|(800,)|var|float64
output = func_8842(var_8843,var_8844,var_8845,var_8846,var_8847,)
func_8848 = relay.Function([var_8843,var_8844,var_8845,var_8846,var_8847,], output)
mutated_mod['func_8848'] = func_8848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8877 = relay.var("var_8877", dtype = "float32", shape = (1, 5, 15))#candidate|8877|(1, 5, 15)|var|float32
uop_8878 = relay.erf(var_8877.astype('float32')) # shape=(1, 5, 15)
output = relay.Tuple([uop_8878,])
output2 = relay.Tuple([uop_8878,])
func_8880 = relay.Function([var_8877,], output)
mod['func_8880'] = func_8880
mod = relay.transform.InferType()(mod)
var_8881 = relay.var("var_8881", dtype = "float32", shape = (1, 5, 15))#candidate|8881|(1, 5, 15)|var|float32
output = func_8880(var_8881)
func_8882 = relay.Function([var_8881], output)
mutated_mod['func_8882'] = func_8882
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8950 = relay.var("var_8950", dtype = "float32", shape = (15, 4, 11))#candidate|8950|(15, 4, 11)|var|float32
uop_8951 = relay.atanh(var_8950.astype('float32')) # shape=(15, 4, 11)
func_5536_call = mod.get_global_var('func_5536')
func_5539_call = mutated_mod.get_global_var('func_5539')
var_8954 = relay.var("var_8954", dtype = "int32", shape = (1440, 1))#candidate|8954|(1440, 1)|var|int32
call_8953 = relay.TupleGetItem(func_5536_call(relay.reshape(var_8954.astype('int32'), [10, 9, 16]), relay.reshape(var_8954.astype('int32'), [10, 9, 16]), ), 4)
call_8955 = relay.TupleGetItem(func_5539_call(relay.reshape(var_8954.astype('int32'), [10, 9, 16]), relay.reshape(var_8954.astype('int32'), [10, 9, 16]), ), 4)
uop_8964 = relay.sin(var_8950.astype('float64')) # shape=(15, 4, 11)
func_8880_call = mod.get_global_var('func_8880')
func_8882_call = mutated_mod.get_global_var('func_8882')
const_8973 = relay.const([-5.420121,-9.026235,-8.710959,-9.659346,-1.130383,3.862329,7.316288,6.727600,6.341282,-0.294222,-0.157768,-7.840630,-0.511594,1.858539,-4.227728,0.125804,8.604803,4.292284,-3.823134,9.375877,-9.303179,-6.010529,-3.588440,-3.492801,6.328320,9.463075,-4.438968,0.709753,8.902317,-6.752697,0.851817,-1.330741,1.657540,-0.225873,4.747920,7.364765,2.100786,3.207166,4.144799,1.910943,-2.377015,-6.040058,-6.595222,1.278724,-7.864358,-8.767206,6.652425,-0.617525,-6.086424,-8.075685,-7.109519,7.325499,-7.052797,-7.258870,3.753711,-7.430395,-7.353752,-9.201942,-1.720208,-5.972412,-5.224467,6.481918,9.462345,-1.094904,-6.936488,0.066010,-9.324123,-6.807751,2.716631,2.573271,-3.615366,-9.336990,-9.128368,-4.277713,9.832333], dtype = "float32")#candidate|8973|(75,)|const|float32
call_8972 = relay.TupleGetItem(func_8880_call(relay.reshape(const_8973.astype('float32'), [1, 5, 15])), 0)
call_8974 = relay.TupleGetItem(func_8882_call(relay.reshape(const_8973.astype('float32'), [1, 5, 15])), 0)
func_4508_call = mod.get_global_var('func_4508')
func_4511_call = mutated_mod.get_global_var('func_4511')
var_8985 = relay.var("var_8985", dtype = "float32", shape = (90,))#candidate|8985|(90,)|var|float32
call_8984 = func_4508_call(relay.reshape(var_8985.astype('float32'), [9, 2, 5]))
call_8986 = func_4508_call(relay.reshape(var_8985.astype('float32'), [9, 2, 5]))
output = relay.Tuple([uop_8951,call_8953,var_8954,uop_8964,call_8972,const_8973,call_8984,var_8985,])
output2 = relay.Tuple([uop_8951,call_8955,var_8954,uop_8964,call_8974,const_8973,call_8986,var_8985,])
func_8990 = relay.Function([var_8950,var_8954,var_8985,], output)
mod['func_8990'] = func_8990
mod = relay.transform.InferType()(mod)
var_8991 = relay.var("var_8991", dtype = "float32", shape = (15, 4, 11))#candidate|8991|(15, 4, 11)|var|float32
var_8992 = relay.var("var_8992", dtype = "int32", shape = (1440, 1))#candidate|8992|(1440, 1)|var|int32
var_8993 = relay.var("var_8993", dtype = "float32", shape = (90,))#candidate|8993|(90,)|var|float32
output = func_8990(var_8991,var_8992,var_8993,)
func_8994 = relay.Function([var_8991,var_8992,var_8993,], output)
mutated_mod['func_8994'] = func_8994
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9013 = relay.const([[[-3.647952,6.749400,8.852934,7.497095,-6.797486,-4.204633,-6.149238,-8.729363,-5.640001,-2.760374,-9.838058,1.857603,-9.445408,7.209942,-1.653503],[1.100161,-8.113848,-7.038094,-8.868823,-5.164333,0.842654,3.605319,9.372537,-5.866323,-8.402576,4.145439,3.580674,-7.414633,-4.070562,2.687716],[-9.370640,5.914100,-2.707304,-1.847332,2.522999,4.786699,-4.758408,-9.425989,1.593430,6.799862,7.925301,-5.831366,-0.443786,-4.272644,-7.042016],[4.250420,-3.540331,9.298500,7.849876,-3.669172,-0.784314,4.298428,-9.820331,1.555664,0.632874,-2.285606,1.818367,9.912620,3.517348,-9.030716],[-6.689991,8.207353,0.642395,8.941835,-9.972642,6.036426,2.146684,6.833123,1.401586,1.117748,-4.928519,2.182827,-6.821687,9.818141,6.767040],[-7.132667,9.480683,-6.062681,-4.486587,6.736528,0.126127,-5.785835,-9.313234,7.498476,-1.743106,-8.901796,-2.265212,-2.973336,-7.181011,-6.966935],[6.450701,6.527675,-5.775155,0.229887,3.972212,-3.440734,-6.864767,-3.243358,-1.797791,-5.994734,-9.885198,3.660011,-3.248589,-5.299220,4.924218],[-5.943437,8.650287,-7.386568,-8.654995,-3.528683,-5.170222,-3.681970,3.748456,3.908700,-4.761636,-3.574717,-3.362502,9.837438,5.580126,-4.965236],[8.976731,-0.347795,-8.142527,-0.203043,-6.581789,8.059394,1.534748,7.732484,-2.056102,7.834934,-9.494713,5.647558,0.145233,-4.312011,-7.805524],[-7.896905,9.879217,-2.614245,8.944242,-9.552141,-8.988762,-6.186388,-6.989031,-3.756293,8.349521,5.187671,-6.726833,-4.591796,-9.143436,-5.061777],[1.946309,-5.573977,2.329700,7.639422,4.573016,1.217247,3.807208,-1.174991,5.295172,-0.302009,-7.643590,4.375833,-9.168298,-8.033837,-5.149548],[-2.473637,8.805973,-0.744228,2.092933,3.116950,-9.886484,-8.605261,2.483543,2.062044,-7.049176,6.317038,4.409716,9.891502,-6.466518,-8.423330],[-8.073284,5.181922,8.413398,9.965935,0.024100,-3.442570,9.134036,1.065641,2.949686,9.864819,-3.684862,-4.395337,2.387727,4.703664,2.584656],[-7.384768,-2.463917,-8.232767,-8.641657,3.586714,-0.263250,8.427537,-2.455916,-6.680926,8.550169,0.940215,-7.574260,6.411266,3.737407,-0.896449]],[[8.179429,8.669196,-8.106094,0.241304,6.814504,-7.779409,-1.329740,9.810694,-8.514874,-6.474862,0.670003,7.514673,8.410315,-3.306391,7.884202],[-1.385540,5.620755,1.954260,8.701058,-6.542830,4.290943,-5.955514,-5.558198,-7.537242,-7.396871,-6.859056,6.640705,2.629298,8.782741,9.809633],[-7.467911,8.229872,0.443988,0.399428,1.938992,3.498956,-3.300312,2.945552,7.379292,8.743041,-5.484482,-9.992904,2.929197,5.510253,5.320054],[-2.926812,-3.219169,5.161530,-1.831158,-8.877101,0.345933,-2.172794,4.759135,-2.553046,8.981683,-5.738286,-3.924068,0.199661,8.956458,-0.204901],[-6.098721,-9.750644,-1.556290,-1.564669,3.788475,-8.727548,3.734622,-0.292907,-3.943491,9.007335,5.006673,-4.527709,-2.155165,5.886204,-1.499612],[-6.283898,-1.745340,3.785563,2.908294,6.267693,-9.994039,5.764167,-1.645989,-0.815312,-5.432499,2.774760,-5.361707,3.669695,8.773068,-0.731875],[-0.273682,-1.781657,0.001801,0.587681,-2.754965,0.513071,1.217276,-9.145023,3.208636,-5.104173,-5.716275,9.241097,2.095749,-4.416602,7.512348],[-8.490634,5.106534,3.867879,-8.184356,0.401482,2.020553,3.153902,2.509204,3.618316,6.672628,0.756427,0.459245,-2.161754,3.367137,6.953811],[9.377941,0.619774,8.520093,5.823580,6.156279,-1.993115,-9.556938,2.667702,2.870736,-1.349586,3.602757,-1.715223,-6.300211,3.914243,5.513748],[-3.272845,9.586170,-6.696849,-7.933859,-7.462863,-9.337025,1.009923,7.379565,0.957335,5.374235,5.608297,4.457035,0.312512,-5.669708,2.461927],[4.096210,-5.124831,4.201580,9.104963,-7.320837,-8.969174,-7.519423,4.118275,-1.249222,-6.686167,-0.821532,-3.671716,-2.612730,9.587050,8.578505],[-8.091428,6.693952,6.164014,3.294245,-7.500058,-4.411476,5.574581,-1.380917,-3.005052,1.046367,-9.932986,-5.049168,1.616966,-5.536690,3.769079],[0.516351,2.130882,-1.108339,-0.625724,3.855154,-3.096274,8.650406,0.919746,-8.051387,-9.944711,-7.783998,-2.133677,-1.634470,5.136426,-5.649219],[-1.263384,0.860836,-7.388577,-7.922196,1.276166,-5.772505,6.064691,6.384155,7.389961,1.091738,3.367395,6.165453,-9.173642,8.856710,-9.027445]],[[3.207487,-8.649001,-2.332918,-9.010274,2.908628,5.385723,9.218954,1.648122,0.422812,1.218447,-8.962139,-2.155570,-5.736860,6.133969,8.108284],[2.908053,-3.587532,8.669521,8.826813,2.931359,9.136682,-7.886084,-6.309178,-7.033847,-9.020570,-9.550066,-9.878543,-5.352490,2.496491,7.234121],[-1.929926,0.161043,-5.453939,1.327550,9.203021,-6.785818,6.640544,8.093071,-1.921637,2.813695,2.733773,0.604673,6.011448,-8.878877,-5.384584],[3.990154,9.958432,2.855952,7.876775,8.391801,-2.472104,1.880399,-8.591597,1.756109,-0.948889,6.965754,-6.301395,-2.921801,5.636996,-5.073280],[-2.024758,-2.980942,3.249517,7.509561,-5.734137,3.636044,-9.043314,5.425170,4.518655,1.548282,0.967807,-5.733732,5.329067,1.348542,4.004434],[-5.690574,0.975349,8.169819,7.761217,6.347394,5.503002,-7.084702,-8.145064,-0.713799,-1.088622,0.895334,8.718138,3.428749,-8.608133,8.359755],[-0.937585,7.645737,-8.400632,-1.257071,3.555935,8.983302,-8.735457,-5.522245,5.313492,0.676045,-9.659865,-6.654024,-1.857543,8.955075,-5.652104],[-8.819585,-9.564161,6.012836,3.229672,-1.327439,2.831178,0.661281,8.870523,-3.695836,4.921716,-8.557978,3.637776,7.157287,-7.299376,-4.882327],[6.226506,-6.343110,1.077851,-8.054300,2.722835,7.587518,-8.246240,0.239064,6.693141,0.238325,8.658303,-0.152240,-1.937919,-0.192149,-4.436956],[2.495073,1.169844,-8.549479,9.120938,0.079731,7.945035,-3.010012,-3.849284,-0.699353,5.205063,-5.511301,9.238676,2.230778,-8.918402,2.325115],[6.039581,-9.585538,-7.055910,8.614069,5.830140,-4.825075,1.582310,-6.555572,-2.568525,4.519372,-5.535310,-0.192978,8.400229,4.080903,7.394359],[-4.488123,-2.476032,-0.936022,5.998750,-2.955263,-2.285703,-3.998488,0.897174,4.884116,8.043295,-5.230853,-1.311074,3.273903,-3.880797,1.032169],[3.720824,-7.996843,-6.968346,-7.308627,-6.936822,-4.237918,-7.314631,4.259589,-1.908412,0.076895,0.297840,1.584943,9.208144,4.852156,-6.187522],[0.037553,3.857023,0.248476,-6.334766,9.878000,-7.120726,-4.967444,-3.394676,8.009436,-3.763422,-8.050366,-6.845043,-4.305628,4.662800,6.719528]]], dtype = "float32")#candidate|9013|(3, 14, 15)|const|float32
uop_9014 = relay.sigmoid(const_9013.astype('float32')) # shape=(3, 14, 15)
var_9032 = relay.var("var_9032", dtype = "float32", shape = (3, 14, 15))#candidate|9032|(3, 14, 15)|var|float32
bop_9033 = relay.logical_xor(uop_9014.astype('int32'), relay.reshape(var_9032.astype('int32'), relay.shape_of(uop_9014))) # shape=(3, 14, 15)
func_3841_call = mod.get_global_var('func_3841')
func_3845_call = mutated_mod.get_global_var('func_3845')
const_9061 = relay.const([8.552515,-1.350065,3.514506,-6.371781,-1.186083,-3.559476,2.703394,-1.508959,8.303372,-8.814925,1.914820,0.916555,5.435295,6.995477,-6.734899,0.388712,8.933869,3.733095,-5.986216,-2.535797,-9.768301,2.441642,-0.489298,-3.875291,-2.024127,-8.682713,-3.139261,-7.401413,3.000672,-4.960547,-9.515672,-8.809016,3.105465,-4.518789,3.619693,-2.594802,8.705199,4.828079,6.315229,-6.170387,4.397725,6.184619,-2.717853,6.931466,3.636686,1.988271,1.197145,-7.126977,4.759625,3.072982,0.378584,-0.971154,3.813050,3.137203,-2.719145,-6.891132,-3.417834,9.928609,8.136064,-0.226572,-2.001710,-2.438982,2.488333,-9.650062,-0.765336,7.948493,9.424475,-4.604610,-6.595577,8.630658,6.890009,-0.928853,0.105428,-9.473044,-4.755925,-0.709614,9.838215,-7.315653,0.473877,6.023181,-6.216955,0.882908,1.772337,-3.755823,5.252258,-7.056022,-8.392684,-9.319743,-7.202739,-6.279723,-3.725346,8.238227,-5.700465,-7.814243,-5.876380,2.738893,7.566869,-1.638721,-3.274653,-6.027419,-1.791119,1.635011,9.428594,-2.257411,-5.086770,-8.025121,3.414319,-1.616439,6.884905,8.962844,8.136109,2.294211,-6.364959,5.033796,-3.183710,-9.942224,-1.903296,5.759234,-0.391311,4.666751,6.584983,9.708808,7.536320,-2.957073,-7.512893,-5.873932,-9.418673,-6.445197,0.338212,3.570193,1.374212,-1.287073,8.716051,1.750406,4.904075,6.663308,-2.587337,-7.343711,-7.374287,2.097456,-5.183133,-1.162064,6.086548,3.162022,-9.186116,-9.067193,5.319850,8.831722,6.760656,-6.162384,4.335822,3.828740,-7.466574,0.767753,-8.007977,1.603921,-1.226926,6.359613,8.206273,-9.166103,0.336928,3.882857,1.890987,-1.824605,-4.196030,-4.911201,-3.898341,7.006665,4.351551,0.782066,2.070880,-9.895869,8.997085,9.679264,4.106878,-5.986039,8.742215,3.235225,1.072425,9.739524,-7.663229,7.892409,5.663490,7.605923,-9.993381,-0.215281,7.825752,7.462364,-3.330679,2.756246,7.612767,-3.340738,-5.512194,1.115199,8.545455,6.959574,-4.705732,-5.442758,9.670932,-4.627190,2.733149,-3.405985,-4.898047,4.242664,-6.895793,-2.433028,-0.469709,-9.183705,-6.313263,-4.801854,-8.793653,7.249456,3.199766,-1.852498,8.125748,-0.826106,2.041266,1.687327,-8.492302,-5.778922,-0.347546,-7.538932,-9.411212,8.205886,3.531106,-6.606524,4.758756,-1.131586,-8.313479,3.553450,-5.715443,-1.912953,-2.519335,0.580217,-9.971191,-4.325056,-8.280865,0.345677,5.463999,2.487567,9.604464,0.628714,7.888529,0.543340,-1.770041,7.283128,-7.369683,8.571656,1.042263,4.976464,-4.970898,-4.724740,1.162153,0.384936,-4.677157,0.233007,7.424767,-2.618033,-7.039804,-4.856823,8.040616,4.276057,5.988166,-6.113452,7.307659,-3.976155,7.845386,-0.260089,-5.434946,-7.308053,-8.077475,-1.171598,-0.670903,-9.476824,-5.591383,9.233049,-4.188306,3.883808,7.769484,5.382076,-0.399085,5.751024,-2.801277,-4.864023,2.744137,-5.044641,-5.251849,9.441464,3.213836,6.349877,-8.271822,3.515972,-6.734483,-0.534302,6.893576,-0.331236,9.911663,6.503557,-4.951436,8.187871,-2.016259,0.168484,-4.937175,5.053499,0.815368,-3.680570,-2.686379,-0.629228,-5.190539,-2.316436,-2.103387,1.534321,-0.795735,-4.233952,-0.929133,0.336781,6.370698,9.577621,4.659785,8.727866,-0.863846,2.799229,-6.338159,2.992921,-2.247624,-6.263204,-2.116991,1.033768,-6.769492,0.275458,2.928032,-3.003985,-1.396493,-7.255051,-2.913974,-2.577774,6.057293,3.142305,8.354072,6.492587,5.647789,5.298648,8.776488,-6.845114,-2.610073,4.296935,-8.065690,-2.080684,0.495241,8.589286,-7.669910,-4.331413,6.362146,7.146210,-8.386224,-9.369260,-0.991980,-1.212466,-7.179514,-7.266159,-7.354701,-6.755912,3.324551,5.000945,-9.606794,-1.906409,-4.002301,-1.563782,1.489614,2.451336,-5.099304,9.890947,7.791998,1.469690,-1.763236,-3.182051,8.149691,-4.468682,1.415592,1.519503,-8.372047,-0.196850,0.316877,-9.475370,5.144136,-6.770318,9.080119,-4.027320,6.368548,0.899569,8.845258,5.394515,-8.075816,9.661952,5.577893,1.880679,5.128193,7.005942,4.743340,4.423330,8.518157,-5.217650,8.897015,9.955485,-9.965802,-3.028089,-2.673406,-4.044950,5.838096,-6.967437,8.486204,-4.852963,7.792896,8.536026,1.014217,9.768719,-6.998074,-1.582398,4.155221,7.826894,-0.349502,6.303403,0.315077,3.613173,-4.665795,4.447432,-9.707387,-9.343747,3.144851,-1.110237,-9.569306,5.699200,0.687292,-5.589318,2.163437,6.220287,8.449349,-7.279768,-0.394442,-7.518390,9.744757,-8.670026,7.889357,-1.527824,-9.266105,-4.224463,-1.845335,-7.049367,4.373202,-8.867808,-9.306542,-0.955655,8.810276,-6.868646,-0.701438,-6.100109,-3.723008,6.229866,5.386702,8.376878,-3.814655,-7.902236,0.779475,3.784379,0.074176,-2.539068,7.202387,9.175739,7.754046,-5.404508,-9.741762,-0.241472,-1.137592,9.490073,9.226099,9.745756,-4.852158,-5.358374,-3.419070,-1.754774,-6.606541,9.668157,1.003988,-3.813116,-4.648206,-0.678079,0.578338,-6.349568,6.557762,8.746436,-8.107111,-0.414954,-8.156481,-6.535649,-2.876670,-9.716589,2.533740,-3.755500,-1.646766,-7.530233,-6.043373,-0.478247,0.718922,0.818953,-1.577869,0.428640,8.925347,9.401188,-5.446566,5.373337,-7.894045,1.138724,9.748461,-0.178626,-8.121372,6.676966,1.196830,-0.810912,-3.752791,4.739363,-6.472337,3.583027,0.915453,4.910898,-9.914123,-4.226297,-1.310349,0.261280,-4.260567,-2.958860,-2.899209,9.906065,8.744702,-5.910668,9.072736,-5.253529,-6.537359,0.651306,-4.109330,9.872201,5.305855,6.899092,-2.525568,-3.292602,-9.236375,7.970969,-3.235916,-6.930140,3.278592,1.786876,2.425004,-8.606101,4.523434,5.091921,4.366296,-9.998355,-8.406571,-7.305523,-2.356327,2.083281,8.268924,7.168216,9.384188,0.226303,-7.738334,2.118439,-7.872364,4.575804,-7.318246,3.798848,-7.241068,-2.086411,5.388177,8.138492,6.539799,-4.854057,8.942640,-3.507360,-5.525310,8.247906,-5.075228,-6.756351,5.851499,-4.816188,-4.582229,3.976696,-4.614034,8.335932,-4.566771,7.217692,-2.762294,0.713428,-4.496694,-3.370244,2.650091,4.056446,2.255116,4.566258,-2.617195,-7.901105,3.802855,4.048582,1.851650,-6.375364,6.909369,-6.835368,2.325146,4.346888,9.708018,-0.683843,-6.253298,0.538580,0.226262,-6.342365,-9.161852,-3.312109,-4.384777,2.301249,7.246656,2.589247,-1.948773,-8.307676,0.210979,8.201571,8.049821,-0.315078,8.405200,8.585199,-8.777442,-5.250374,-4.222609,-8.606634,-6.320596,0.863980,0.994636,-5.981707,-3.728871,-3.020264,3.419613,-3.532902,0.665100,-5.963604,-3.581012,-7.995872,8.414237,-2.598110,9.197932,-4.205700,-1.748071,9.326482,-4.867255,6.784396,-1.243711,2.207920,2.077979,9.616200,-1.411969,-5.909883,0.821327,0.605956,6.322019,0.390452,-9.591825,6.766293,8.039112,7.873231,-1.730541,-6.147087,-6.156312,-2.754990,1.210294,-9.832746,6.562723,2.864527,4.905013,1.424048,-4.831913,-4.281815,-5.292683,6.379640,-1.901134,-1.614559,-8.627725,-3.205556,-6.614838,-2.693772,-5.416047,5.562618,4.709361,-1.146430,7.808109,-6.864913,-1.773218,-2.877920,-4.034457,-7.005074,-8.648450,7.363070,2.385866,3.218624,6.741604,-6.955660,1.495702,0.962334,-4.398783,2.447374,-1.783541,9.099536,-5.679336,2.988223,7.928483,-8.846478,-4.704286,-3.302110,2.688627,1.887281,-3.580762,-5.242540,1.493405,-5.931312,8.229073,0.652103,7.797552,3.320958,7.363708,-1.756993,-9.352127,-9.261276,2.269313,3.146569,5.387660,1.621436,-3.714768,0.644526,2.823029,9.379977,7.090027,-9.156513,7.201266,3.020341,8.148714,5.399663,-0.983964,-1.496460,9.956673,-5.579527,0.639081,-1.732515,4.988240,6.927148,7.967757,7.372222,-5.355979,-5.435958,2.426583,-1.916320,0.737967,1.797225,4.400763,7.680927,4.215681,5.799530,7.946631,-7.127993,0.487821,-2.925905,-1.999183,-9.980754,8.676446,-3.753612,-9.214911,4.224731,-3.840104,5.433664,9.731640,-8.182984,-2.661180,3.183922,9.310481,-4.381732,1.228808,-9.317324,-4.877976,-9.896651,1.553138,0.292101,2.362739,6.763920,5.847368,-9.102126,-7.521345,3.777220,-3.326281,-3.604859,-1.130972,6.822112,4.051909,5.670177,-2.415445,-8.581208,-3.344594,3.077740,-3.610325,6.090707,7.272876,-4.636915,2.078193,-2.427640,-2.622915,7.353618,0.881376,7.432967,-5.886855,-0.499758,-2.589972,-8.580767,-0.331323,8.564476,4.073527,-2.100491,-4.414467,-2.286733,-0.268729,3.291461,4.962230,9.873887,7.198969,-8.667500,4.108604,-6.413086,0.446039,-9.816414,-8.203164,-9.980246,9.162406,-9.109003,-1.084503,0.532764,6.196485,6.302454,6.874015,5.840021,7.227410,8.567851,2.947775,4.216074,-4.944391,-8.091682,7.847786,-2.624619,-9.665950,-2.573903,5.743626,6.387934,-2.880009,-5.948467,-2.226531,1.031857,6.520449,-1.258461,-8.674538,6.858199,-6.974314,-6.116890,-7.938764,-1.646447,9.955391,7.294097,-6.561813,-5.606666,-4.620485,-4.844875,-1.961769,-4.717657,-4.519268,-5.256317,-2.260688,-3.525320,-5.024590,-9.602433,9.971420,3.555306,4.203445,-0.905495,9.375306,7.626036,1.037553,-7.969764,8.765620,9.084911,-9.708270,-9.369203,6.986096,9.992131,1.702148,-7.460407,-6.179990,-5.564509,6.250611,9.498118,2.550593,-4.585961,-4.706876,-4.616243,5.228969,-4.977979,-2.864951,5.555014,5.144670,1.681219,-5.555315,2.567667,1.648837,7.635387,-1.166626,4.755788,6.249214,-1.002679,2.444003,7.069945,-7.859989,-8.552425,-0.812022,-9.070932,-5.550443,9.175340,-8.951066,2.061075,-6.387475,-4.724154,5.854285,-0.133956,6.057395,-8.505071,4.302177,5.834999,8.148951,-8.784710,6.062292,3.545321,-6.144386,7.356188,-1.700466,-8.148250,0.521624,8.976536,9.169347,6.808067,1.941876,2.103332,0.580593,-0.594621,-4.667138,-6.637332,-3.310115,3.664680,-9.607596,6.056488,9.950892,2.006990,-6.893879,7.848022,-6.327524,-9.418451,-3.462497,8.262698,-1.059017,9.191435,-5.341964,0.782536,2.095312,-2.966456,0.028726,-5.303178,6.557410,7.751014,0.128866,4.466903,5.358052,5.447678,2.584762,7.810554,-3.875986,-4.446477,-1.599184,4.028306,-0.545808,-7.107086,3.480349,-7.239789,-8.689784,-8.753227,-6.575948,-3.348517,1.151141,-6.011516,-4.997088,1.233222,-5.486693,1.944524,6.102985,-7.344767,-2.709325,8.725832,-7.926535,7.731847,9.899755,-5.463666,7.060871,2.335433,-9.794460,-7.310285,2.743923,7.718787,6.078983,-2.871319,-4.241440,3.526967,5.946569,-1.651395,-4.583232,2.487157,-2.182700,-8.852866,-5.098658,-8.156134,2.956871,3.892791,-4.127055,-0.583206,3.805411,-4.648205,2.286197,8.970428,-9.196803,-2.834594,9.799505,-5.069602,6.479924,5.232803,-1.691458,-6.472778,-8.639931,-9.988406,4.609780,5.261390,-2.004333,-4.912208,5.600501,-4.820211,6.056885,-8.044816,-6.683274,-6.058665,9.266388,0.943973,-8.938856,9.691031,8.807224,0.149267,-3.813881,-2.823408,3.647820,8.246825,-7.768807,-5.492388,-4.235681,-2.218207,-1.256466,3.518840,-8.776142,7.903635,-4.093900,-1.283306,0.009786,-2.726303,-2.593499,-5.564552,6.095111,-8.716496,9.233509,-6.596758,8.319213,8.852948,0.837471,-7.571298,7.605777,-6.629515,-4.226183,-7.301626,2.807002,-0.495247,4.318314,5.798037,-3.997314,-9.710959,-1.832809,3.259271,5.920546,2.103811,4.591227,-4.299992,-6.784351,1.667608,3.842157,-0.178722,-6.812434,-5.731919,5.583746,3.321207,5.568625,9.048397,-4.845755,-2.188515,6.979083,-1.119960,3.075490,-1.997714,-0.951381,-7.574107,5.261118,-4.893727,9.285481,9.176869,-8.681983,-2.038888,-6.588129,5.971069,7.639501,-5.026302,-5.796235,6.629945,5.780632,2.404764,9.214407,-4.409307,-2.699704,6.456204,7.295344,-2.784037,6.747319,-5.751937,-5.519342,-5.373239,3.873553,7.083205,6.268290,2.556986,-1.112379,-1.727292,-6.647362,-4.387189,7.211010,4.388572,-1.341374,-0.778382,-0.351724,0.647080,6.868908,-7.612024,-8.303609,-9.922002,3.585422,-8.186213,-0.070204,2.708057,4.428399,8.231928,5.444139,-5.206669], dtype = "float32")#candidate|9061|(1170,)|const|float32
call_9060 = func_3841_call(relay.reshape(const_9061.astype('float32'), [10, 13, 9]), relay.reshape(const_9061.astype('float32'), [10, 13, 9]), )
call_9062 = func_3841_call(relay.reshape(const_9061.astype('float32'), [10, 13, 9]), relay.reshape(const_9061.astype('float32'), [10, 13, 9]), )
bop_9070 = relay.equal(uop_9014.astype('bool'), relay.reshape(var_9032.astype('bool'), relay.shape_of(uop_9014))) # shape=(3, 14, 15)
func_1700_call = mod.get_global_var('func_1700')
func_1705_call = mutated_mod.get_global_var('func_1705')
const_9076 = relay.const([8.310057,-2.920320,0.772784,-6.715309,5.850784,-4.639212,-6.508798,5.020879,1.047941,1.871401,8.410451,-7.059447,8.051728,-4.653180,-1.930281,1.428686,6.510420,3.508426,0.484901,-4.923607,-2.819325,7.958714,2.688257,-0.145195,-6.590849,-5.845805,-1.903843,-8.517862,5.260745,-1.870660,8.307328,5.489146,-8.095560,8.401449,7.656890,-1.825072,-6.811994,-8.071350,4.099720,-6.719002,-8.806000,8.233699,3.220862,-3.325171,-5.627257,-1.459444,-0.594001,6.709852,-7.854528,9.960221,-8.594540,-5.264856,5.253667,-7.540215,2.726710,2.231603,7.149588,4.059600,-2.610267,-8.483541,-2.053501,-3.745869,-0.340275,5.866095,-9.670274,-7.440595,8.393962,4.708069,-7.264770,6.578294,-0.281400,3.122969,7.977541,-8.430480,7.530662,8.486116,1.155963,-8.388503,5.623086,6.712071,-6.095989,-3.367838,-2.203073,9.781503,8.273768,-9.681903,2.819593,-7.738604,-9.141890,-1.358233,9.497309,-8.690936,-0.959874,-8.226409,-1.913448,7.700512,-4.217417,-1.197329,-7.603503,1.644692,-9.694257,1.046733,1.376836,4.847024,5.495136,7.288653,5.988218,1.394448,1.576727,4.224087,6.689705,-2.093135,-3.017738,-9.294938,-3.200111,-1.181257,-7.238260,-0.204711,2.271559,8.444345,-1.650454,6.450406,-6.195076,7.015045,0.067328,-1.704478,9.982123,-6.357587,5.066887,-2.992809,-8.989378,7.179248,4.278950,-9.102715,2.568648,4.815084,8.721057,2.075466,7.864633,9.301386,3.851436,-6.276855,-9.975060,-4.819916,7.629543,-0.786305,5.132333,-8.237680,6.990027,-1.402063,2.465174,-6.854445,-0.819569,-1.494886,-9.409697,-1.109592,4.742228,9.456290,0.603457,-0.406324,-6.434979,-4.389020,-7.020413,-2.233747,-6.164004,-2.452217,-6.941099,-1.057589,-5.850674,7.604843,-2.005572,-6.401196,-1.209441,9.569251,8.139587,-5.947098,-1.958961,0.586357,-8.844011,5.977762,-1.672202,-0.503384,-7.636175,-4.566998,0.227302,-5.263228,6.471846,-2.346092,-5.233598,-4.872907,4.030052,1.297108,4.634949,-7.793060,9.110652,-4.487314,7.134797,-3.548335,0.247288,-4.065948,-9.954431,-5.716766,0.642668,6.503713,5.379904,6.196428,2.086596,-8.454753,1.766742,-3.472893,-0.268047,8.530122,1.158453,-2.830818,-5.797455,1.438003,0.773481,-7.693781,-9.522386,-9.124483,9.472825,-6.601155,-5.451098,-1.142047,4.984512,-2.918347,4.538463,3.021557,-0.417568,-3.480188,-8.764793,6.821071,2.462289,-2.145195,-1.791472,9.916548,-2.361990,-5.496172,0.449088,3.494848,1.830349,-2.154777,5.114480,6.115788,9.255893,-2.089503,7.419024,1.658089,6.135093,2.664969,-6.537012,-9.692460,-7.401917,-7.238035,6.323379,1.804438,2.953664,1.649038,2.198829,-7.611285,-0.810664,4.719130,6.847025,7.832754,-3.307271,-5.426283,4.939120,-5.773216,5.959415,6.044381,-9.415910,5.270881,2.675573,-3.942659,9.193152,5.598662,2.981991,8.001729,-2.168340,9.153242,0.670431,2.892445,-9.701941,1.336828,-6.181283,-6.733027,6.853156,2.583308,5.661523,0.816322,-7.654817,-9.580339,4.180020,-5.472776,-6.738380,8.534583,9.917006,9.294914,-1.496520,3.921774,5.417115,0.418668,6.485418,9.812351,-8.728040,5.781240,-2.237564,-7.636715,-4.301383,3.987035,-0.011906,-6.391094,2.802396,-9.438728,-0.854866], dtype = "float32")#candidate|9076|(315,)|const|float32
const_9077 = relay.const([-2.756796,5.367078,4.054499,8.340167,-6.541626,2.833922,6.921091,-8.180880,-8.571083,6.789928,-0.589408,-2.478688,-0.806738,2.985775,0.373205,-0.726367,9.404867,3.502224,8.415385,-1.547286,-3.625979,-4.609360,1.028958,-7.435261,-9.989943,-9.638067,4.825489,4.988985,-8.827380,7.047751,0.765661,8.235227,1.575435,-1.482985,0.302597,-9.362678,-7.158457,-0.886654,2.048298,7.500814,-6.782738,4.389476,4.501480,-7.908083,6.266506,0.237249,5.053726,3.976270,6.974473,-9.030620,-8.498402,9.013452,4.400158,-5.754721,-0.358157,-8.460566,-8.967316,-5.102681,-6.845956,6.762685,-2.991584,9.008675,9.067136,-3.115237,-0.250869,-9.373199,-1.935968,3.242335,5.648290,-0.273082,0.273526,-4.106649,-8.072575,2.036304,2.588711,-6.597486,2.426956,-6.421684,7.293303,-2.513657,7.302934,-3.036171,-0.914058,7.440006,-0.281037,3.555889,5.017276,9.028240,8.614286,-5.395980,1.977309,-7.535006,-1.624951,5.878246,-7.400338,0.162729,-5.311814,3.467064,5.598116,-9.753793,-1.663639,-1.913406,-7.876831,-1.317324,-6.334174,-4.404680,4.177280,3.273624,6.737678,4.616773,-3.885981,7.970417,4.325403,5.681947,-3.014142,-3.283650,8.134476,-7.890763,-4.087162,0.336744,9.844942,-5.368957,5.811480,2.176726,-9.973057,-7.120046,7.806702,-4.675604,-1.257637,-7.950025,9.550671,1.252249,8.868697,-2.103703,-4.579913,-6.315453,-4.305299,5.211703,-5.533685,-8.454457,2.294173,4.415946,9.196138,3.066857,8.648333,-7.466324,-9.568001,-0.955929,8.300776,7.751576,-6.846470,9.287060,-8.743279,-5.921525,0.155225,-4.538104,1.842319,-2.042377,7.823163,-1.653262,1.172271,9.897253,9.621913,8.718880,2.695949,-3.541271,-9.795687,-7.536078,-9.586700,-4.733799,0.713437,1.693640,-9.955587,1.493168,4.722384,7.308909,-7.840656,9.451078,-6.015545,-0.580057,7.217710,9.611211,5.795163,7.986893,7.821555,2.276541,-0.407633,5.409117,-6.224138,-9.329766,6.994940,-1.061000,-9.485431,6.189021,-5.935072,-5.918597,-8.484706,-0.865428,0.322816,-0.748420,9.052056,-2.310855,-9.937279,-9.237843,-4.288858,-1.773077,-4.907997,-5.823663,-2.647476,8.425728,0.909888,7.425107,-9.486342,7.626630,7.528030,-0.327418,-9.200246,-9.186278,-8.354902,9.753630,5.795053,-5.810504,1.058465,-3.538611,-4.888913,-7.293986,-0.993921,-0.381593,3.896090,-9.140589,8.312900,8.802762,2.696436,-6.085193,2.383126,1.460645,0.236725,-7.703414,-5.658952,1.923641,9.192296,-8.760293,4.100989,-5.432499,3.411754,1.230348,5.152708,-8.411355,-4.238190,-2.399029,-0.840587,-4.813947,-6.669648,-1.987774,3.832190,0.587594,-2.856587,-1.675026,-6.553537,-8.392233,-4.557744,-7.599574,2.078516,-9.640865,2.018906,6.944062,-9.862682,-8.408996,-5.128596,0.550817,-1.444677,-1.682600,1.480901,-2.923397,5.386306,0.254811,-6.473027,2.801111,-2.442494,1.161077,6.890195,8.919184,-5.456401,-6.056878,5.980888,-2.878346,-3.991908,-3.212996], dtype = "float32")#candidate|9077|(288,)|const|float32
var_9078 = relay.var("var_9078", dtype = "int8", shape = (1, 1408))#candidate|9078|(1, 1408)|var|int8
call_9075 = relay.TupleGetItem(func_1700_call(relay.reshape(const_9076.astype('float32'), [15, 3, 7]), relay.reshape(const_9077.astype('float32'), [288,]), relay.reshape(var_9078.astype('int8'), [1408,]), ), 3)
call_9079 = relay.TupleGetItem(func_1705_call(relay.reshape(const_9076.astype('float32'), [15, 3, 7]), relay.reshape(const_9077.astype('float32'), [288,]), relay.reshape(var_9078.astype('int8'), [1408,]), ), 3)
output = relay.Tuple([bop_9033,call_9060,const_9061,bop_9070,call_9075,const_9076,const_9077,var_9078,])
output2 = relay.Tuple([bop_9033,call_9062,const_9061,bop_9070,call_9079,const_9076,const_9077,var_9078,])
func_9083 = relay.Function([var_9032,var_9078,], output)
mod['func_9083'] = func_9083
mod = relay.transform.InferType()(mod)
var_9084 = relay.var("var_9084", dtype = "float32", shape = (3, 14, 15))#candidate|9084|(3, 14, 15)|var|float32
var_9085 = relay.var("var_9085", dtype = "int8", shape = (1, 1408))#candidate|9085|(1, 1408)|var|int8
output = func_9083(var_9084,var_9085,)
func_9086 = relay.Function([var_9084,var_9085,], output)
mutated_mod['func_9086'] = func_9086
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9389 = relay.var("var_9389", dtype = "float32", shape = (15, 2, 5))#candidate|9389|(15, 2, 5)|var|float32
var_9390 = relay.var("var_9390", dtype = "float32", shape = (15, 2, 5))#candidate|9390|(15, 2, 5)|var|float32
bop_9391 = relay.greater(var_9389.astype('bool'), relay.reshape(var_9390.astype('bool'), relay.shape_of(var_9389))) # shape=(15, 2, 5)
output = bop_9391
output2 = bop_9391
func_9401 = relay.Function([var_9389,var_9390,], output)
mod['func_9401'] = func_9401
mod = relay.transform.InferType()(mod)
var_9402 = relay.var("var_9402", dtype = "float32", shape = (15, 2, 5))#candidate|9402|(15, 2, 5)|var|float32
var_9403 = relay.var("var_9403", dtype = "float32", shape = (15, 2, 5))#candidate|9403|(15, 2, 5)|var|float32
output = func_9401(var_9402,var_9403,)
func_9404 = relay.Function([var_9402,var_9403,], output)
mutated_mod['func_9404'] = func_9404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9420 = relay.var("var_9420", dtype = "uint16", shape = (5, 16, 7))#candidate|9420|(5, 16, 7)|var|uint16
var_9421 = relay.var("var_9421", dtype = "uint16", shape = (5, 16, 7))#candidate|9421|(5, 16, 7)|var|uint16
bop_9422 = relay.right_shift(var_9420.astype('uint16'), relay.reshape(var_9421.astype('uint16'), relay.shape_of(var_9420))) # shape=(5, 16, 7)
output = bop_9422
output2 = bop_9422
func_9433 = relay.Function([var_9420,var_9421,], output)
mod['func_9433'] = func_9433
mod = relay.transform.InferType()(mod)
mutated_mod['func_9433'] = func_9433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9433_call = mutated_mod.get_global_var('func_9433')
var_9435 = relay.var("var_9435", dtype = "uint16", shape = (5, 16, 7))#candidate|9435|(5, 16, 7)|var|uint16
var_9436 = relay.var("var_9436", dtype = "uint16", shape = (5, 16, 7))#candidate|9436|(5, 16, 7)|var|uint16
call_9434 = func_9433_call(var_9435,var_9436,)
output = call_9434
func_9437 = relay.Function([var_9435,var_9436,], output)
mutated_mod['func_9437'] = func_9437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9581 = relay.var("var_9581", dtype = "float64", shape = (4, 1, 7))#candidate|9581|(4, 1, 7)|var|float64
uop_9582 = relay.atan(var_9581.astype('float64')) # shape=(4, 1, 7)
output = uop_9582
output2 = uop_9582
func_9588 = relay.Function([var_9581,], output)
mod['func_9588'] = func_9588
mod = relay.transform.InferType()(mod)
var_9589 = relay.var("var_9589", dtype = "float64", shape = (4, 1, 7))#candidate|9589|(4, 1, 7)|var|float64
output = func_9588(var_9589)
func_9590 = relay.Function([var_9589], output)
mutated_mod['func_9590'] = func_9590
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9605 = relay.const([[[-6,4,-8,3,-10,-7,-3]],[[-10,-2,7,-1,2,5,7]],[[9,1,8,9,8,1,10]],[[-2,4,10,-3,5,-1,-7]],[[10,4,5,-9,3,-8,1]],[[8,7,4,3,1,-2,9]],[[-3,10,2,5,3,10,-1]],[[8,10,-1,7,-10,9,6]],[[8,-5,-2,6,-2,3,4]],[[-3,6,9,7,-2,-5,-7]],[[-6,8,-8,6,-1,-8,-5]],[[8,6,6,-3,7,5,8]],[[-4,6,8,7,-8,-10,7]],[[-2,8,-2,3,6,3,10]],[[5,-7,3,-10,-9,8,1]]], dtype = "uint32")#candidate|9605|(15, 1, 7)|const|uint32
var_9606 = relay.var("var_9606", dtype = "uint32", shape = (15, 4, 7))#candidate|9606|(15, 4, 7)|var|uint32
bop_9607 = relay.bitwise_xor(const_9605.astype('uint32'), var_9606.astype('uint32')) # shape=(15, 4, 7)
bop_9619 = relay.greater_equal(const_9605.astype('bool'), bop_9607.astype('bool')) # shape=(15, 4, 7)
bop_9625 = relay.divide(bop_9607.astype('float32'), const_9605.astype('float32')) # shape=(15, 4, 7)
func_5536_call = mod.get_global_var('func_5536')
func_5539_call = mutated_mod.get_global_var('func_5539')
var_9656 = relay.var("var_9656", dtype = "int32", shape = (1440,))#candidate|9656|(1440,)|var|int32
call_9655 = relay.TupleGetItem(func_5536_call(relay.reshape(var_9656.astype('int32'), [10, 9, 16]), relay.reshape(var_9656.astype('int32'), [10, 9, 16]), ), 0)
call_9657 = relay.TupleGetItem(func_5539_call(relay.reshape(var_9656.astype('int32'), [10, 9, 16]), relay.reshape(var_9656.astype('int32'), [10, 9, 16]), ), 0)
func_5536_call = mod.get_global_var('func_5536')
func_5539_call = mutated_mod.get_global_var('func_5539')
call_9671 = relay.TupleGetItem(func_5536_call(relay.reshape(var_9656.astype('int32'), [10, 9, 16]), relay.reshape(var_9656.astype('int32'), [10, 9, 16]), ), 2)
call_9672 = relay.TupleGetItem(func_5539_call(relay.reshape(var_9656.astype('int32'), [10, 9, 16]), relay.reshape(var_9656.astype('int32'), [10, 9, 16]), ), 2)
func_7867_call = mod.get_global_var('func_7867')
func_7870_call = mutated_mod.get_global_var('func_7870')
const_9674 = relay.const([4.039671,-9.407513,-8.061794,0.677100,-9.382532,-2.989261,6.461020,0.981392,4.985917,-7.386364,9.990159,9.544599,-4.682500,-3.272303,-7.891734,2.880779,7.066602,-6.444796,6.506885,-9.925793,-1.561372,-5.778933,1.079970,-5.202746,-1.903586,4.261058,-8.802859,1.088294,9.637168,-4.452307,9.128277,7.493434,1.465485,-6.965798,4.186049,3.673450,-5.703443,-3.163388,2.388636,-4.645373,1.545134,3.027165,-0.420751,-9.524657,-7.621411,0.485612,5.219341,3.764993,9.915874,8.151982,-1.982532,-5.266723,3.457252,-0.272317,4.586305,-0.054382,-7.482148,-5.484963,-2.901169,-2.163788,-6.533267,5.677326,1.130027,-9.054029,-9.454776,0.171994,-7.788910,9.336693,-5.051381,-8.939925,-7.450802,9.497987,-4.140874,7.549869,-0.915059,-6.383047,-5.723627,-9.020921,-0.643330,-2.782094,1.892949,3.867180,0.133170,6.098135,6.159980,-3.884895,-9.671016,-7.130760,5.305067,-1.837045,-9.875640,-8.151299,-3.161557,-8.786736,-0.958116,2.003492,-3.643437,8.067179,-3.270797,-6.975273,1.733477,7.715336,-1.912598,-5.734584,-2.540952,5.116791,9.796680,2.747538,9.241403,-2.146491,-8.204994,7.271340,2.058296,-7.615786,4.989153,3.247489,0.088393,-1.920519,-7.561105,-2.294085,6.122815,4.295602,5.185755,-6.581606,-5.444534,-4.306779,7.615851,-6.159286,3.780376,-5.230058,4.141971,0.265146,-7.519193,-0.142851,-4.543272,0.345370,-6.257297,4.836002,2.878801,-8.645691,-0.604014,-7.949137,-7.491499,-5.888809,-5.262739,-7.179948,-6.516403,-5.033998,-3.764003,-6.342053,3.341605,-5.542143,-2.127283,-8.743814,-1.508234,-4.380772,9.990625,-1.870831,3.486223,2.344613,2.275118,2.002532,2.324458,-6.467667,-7.099368,8.709387,7.121821,9.707202,9.155108,8.140466,1.606051,-1.855281,8.663120,-1.223867,-3.144154,-7.925667,-7.141189,7.018045,0.802961,8.799937,-4.893328,-5.799342,-3.857764,-0.521717,5.485953,5.018829,8.651251,6.028047,-2.437301,7.645013,-6.602549,-8.296173,6.670824,-9.451694,-7.412596,-3.032026,-0.470889,-5.790444,-0.957341,-5.523968,-1.124109,-6.807264,-5.675576,-9.357761,-1.139010,6.398015,9.827486,5.071207,8.971468,-5.150454,3.623497,4.340135,2.763994,-0.658374,-6.740309,9.975563,4.703863,-9.535219,6.103327,-5.581109,-5.152363,-7.915687,-9.418609,-4.680001,-1.401485,7.759814,7.955871,6.657639,-0.493282,-1.513911,8.997638,7.149145,-9.224044,-3.496758,3.803943,1.887063,-9.492461,1.638546,6.204130,-6.164404,-0.245905,1.441259,-7.611746,-1.615730,-0.426985,4.477391,-0.511357,-4.299597,-0.661370,4.324214,-6.432091,7.912661,-4.673446,4.745498,-2.266172,2.226207,4.040354,-9.870059,-7.573634,-3.805063,-7.553017,-0.616825,-6.995674,4.917375,3.264345,-4.374897,2.671048,-2.935676,1.590019,5.553381,8.808286,-2.427733,2.047897,9.612467,-8.785557,-1.854144,1.205243,7.655868,-5.039527,4.772979,7.625843,4.261630,0.959958,9.170824,4.167754,6.227497,6.934232,2.302625,-2.785285,-8.107108,-5.468823,3.759330,3.019537,8.152099,0.874371,7.168555,4.551070,4.854089,-2.794316,1.179604,6.118061,2.839144,-9.786838,3.489474,4.241888,5.978690,5.054321,5.650886,-4.783974,-6.166260,0.253800,-9.353238,-0.703076,-0.734963,-2.896851,-6.839586,-0.658742,7.848798,-3.372468,6.963055,-8.648822,7.472476,-6.190166,9.194580,9.197850,-9.791767,5.209034,9.976100,7.885454,1.933323,2.795202,2.604185,6.324447,7.953297,-3.883864,0.306217,4.052334,-8.851181,7.158650,-9.129418,5.572580,-2.687328,-1.676841,-6.862509,5.079620,2.002487,2.023959,-0.747168,0.077772,-9.947514,-3.751549,0.379486,-5.656670,1.253212,3.053773,-1.932493,7.320183,4.896642,9.242580,6.389121,8.644385,7.911126,5.774444,6.948438,6.299994,-2.296163,7.712173,-3.860813,4.809991,-2.297166,1.669349,2.638821,8.558537,-7.926432,-1.928202,6.839809,5.255118,-1.009523,-3.894262,1.731896,7.577899,0.901099,5.769554,-3.291573,-7.381040,9.698370,-0.801456,-9.690092,-9.161782,-3.721133,-4.458910,-3.741772,-7.051264,-4.719527,0.970062,0.372832,-9.761209,2.495795,-2.106990,-8.203956,-7.420226,-8.312321,2.365912,-7.124069,-8.899836,-0.549262,-0.026904,-5.830110,-8.082197,5.454771,-8.361298,-6.623421,-6.494417,6.651974,-3.774065,0.390916,7.816236,0.774116,-6.274755,-6.906694,-8.912328,8.895486,-2.028152,0.600254,-8.582776,-2.276093,5.782413,7.835650,-6.229314,-4.884097,1.079710,-4.204954,-4.066704,3.243441,5.891575,3.761000,-7.837181,6.794246,-1.194668,2.254610,2.772147,8.335423,9.560679,-5.934289,8.214640,-2.125127,-5.281981,-5.785001,-0.267601,7.073448,5.465726,4.519710,7.320924,-9.210753,8.079047,9.801266,5.769428,-1.383090,9.453180,0.214742,5.334574,9.920843,-7.496812,-4.963220,3.654622,-5.547966,-8.602050,3.797149,-4.253851,6.807438,1.469479,6.805821,-1.035769,2.477238,-9.964577,-7.126893,-2.309044,-8.842511,2.934039,6.237753,-4.643144,-9.482878,2.272528,6.584664,6.074856,-3.230257,8.559365,-1.170901,1.752960,6.206498,-4.595948,0.161701,-9.810777,5.829171,2.037145], dtype = "float64")#candidate|9674|(495,)|const|float64
call_9673 = func_7867_call(relay.reshape(const_9674.astype('float64'), [15, 3, 11]))
call_9675 = func_7867_call(relay.reshape(const_9674.astype('float64'), [15, 3, 11]))
output = relay.Tuple([bop_9619,bop_9625,call_9655,var_9656,call_9671,call_9673,const_9674,])
output2 = relay.Tuple([bop_9619,bop_9625,call_9657,var_9656,call_9672,call_9675,const_9674,])
func_9685 = relay.Function([var_9606,var_9656,], output)
mod['func_9685'] = func_9685
mod = relay.transform.InferType()(mod)
var_9686 = relay.var("var_9686", dtype = "uint32", shape = (15, 4, 7))#candidate|9686|(15, 4, 7)|var|uint32
var_9687 = relay.var("var_9687", dtype = "int32", shape = (1440,))#candidate|9687|(1440,)|var|int32
output = func_9685(var_9686,var_9687,)
func_9688 = relay.Function([var_9686,var_9687,], output)
mutated_mod['func_9688'] = func_9688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10101 = relay.var("var_10101", dtype = "float64", shape = (11, 5, 8))#candidate|10101|(11, 5, 8)|var|float64
uop_10102 = relay.asinh(var_10101.astype('float64')) # shape=(11, 5, 8)
func_3724_call = mod.get_global_var('func_3724')
func_3727_call = mutated_mod.get_global_var('func_3727')
var_10117 = relay.var("var_10117", dtype = "float64", shape = (120,))#candidate|10117|(120,)|var|float64
call_10116 = relay.TupleGetItem(func_3724_call(relay.reshape(var_10117.astype('float64'), [4, 6, 5])), 0)
call_10118 = relay.TupleGetItem(func_3727_call(relay.reshape(var_10117.astype('float64'), [4, 6, 5])), 0)
uop_10135 = relay.sin(uop_10102.astype('float64')) # shape=(11, 5, 8)
func_1326_call = mod.get_global_var('func_1326')
func_1331_call = mutated_mod.get_global_var('func_1331')
const_10138 = relay.const([-2,-10,4,-5,4,-1,-5,-9,3,3,3,-1,6,-8,-7,-2,7,9,5,-4,-9,-1,3,-3,1,-10,-1,3,-6,-6], dtype = "int8")#candidate|10138|(30,)|const|int8
const_10139 = relay.const([5,2,-3,-8,-6,-1,-1,7,3,-8,-4,-3,6,-9,4,10,4,-3,-9,-4,-8,-3,1,5,-8,10,3,1,3,-2,4,6,4,-6,10,9,7,1,4,6,10,-5,7,2,8,9,-8,9,-4,-8,-5,4,-10,1,-10,5,-1,3,-8,10,-1,-5,5,4,1,2,8,7,1,-10,-3,9,7,3,-8,-9,-3,-9,-10,-6,4,6,-5,8,9,7,4,7,9,-7,5,8,-10,-6,2,1,3,-6,8,-6,-3,-2,-8,-10,-1,4,1,-3,10,1,-1,-6,10,3,-7,7,-2,8,-8,-9,-3,4,-6,7,6,6,2,4,-5,10,-7,-1,-5,-1,7,-3,-2,6,-6,3,-3,-1,-10,-5,-3,-6,-1,1,8,-1,1,-7,3,-2,8,-10,4,-6,-6,9,7,2,-2,5,7,7,10,-3,-1,1,-2,-2,2,-3,10,-2,9,6,8,-3,7,-3,6,-1,4,-8,-3,-7,10,-7,-3,-9,4,-6,-5,7,1,-1,9,7,4,-2,-6,3,-6,-6,1,3,-9,8,-10,-7,7,1,10,9,-1,-10,-7,-3,-5,-4,-2,-2,8,6,6,-10,-3,-9,8,6,7,10,-1,9,-2,6,1,-7,-9,8,10,8,-10,-6,-5,2,8,-7,3,-9,-10,10,-3,2,-4,7,8,-5,2,-9,-4,8,2,-3,1,1,4,-1,-10,9,3,8,-1,2,-4,10,-3,-10,-4,-10,-2,4,-4,-3,10,-10,5,-6,1,-10,8,-3,-8,6,5,-7,-8,-4,-8,1,-8,10,-9,2,4,-6,-1,3,-3,5,4,-6,-3,-7,5,10,10,-7,-8,-10,-10,-5,5,-4,9,-6,-1,7,3,6,3,1,8,2,-8,8,-9,1,-5,2,-6,6,3,3,1,-3,-5,-8,6,-1,-4,-4,-4,-5,-2,10,7,5,-1,-5,-8,-7,-5,-8,-8,-5,7,-3,4,7,-9,4,-5,6,-7,-10,-1,8,3,9,2,-2,-3,10,-5,5,-6,-9,-10,-8,-10,-10,3,-7,3,-8,9,-5,-6,-2,-2,6,8,10,2,4,4,3,1,6,5,10,5,-8,2,2,7,-3,-5,2,1,-9,10,-4,3,9,-7,4,6,-3,-2,-2,4,5,-8,-7,2,4,10,-7,2,-1,-4,-1,6,9,-8,6,-6,-1,7,5,-4,3,9,-6,-5,9,1,2,-1,-3,1,3,10,4,-2,5,8,-1,-10,-9,4,-4,8,-2,6,2], dtype = "int8")#candidate|10139|(480,)|const|int8
const_10140 = relay.const([[-4.933741,-3.477745,-2.404120],[-3.849977,2.892658,6.161751],[-4.938142,5.202570,-3.660375],[5.446927,4.744938,0.860335],[-2.152590,9.942326,7.656051],[8.710088,-2.697802,-4.532179],[7.335874,7.461801,5.556283],[5.319714,3.631178,-0.111018],[2.995984,3.185227,0.749198],[5.058462,4.195283,-3.291364],[5.000400,-5.853189,-9.393967],[-3.611694,-9.054749,-8.768536],[-6.905978,4.231986,4.430781],[-1.541127,3.567227,4.262598],[-7.215646,-2.932227,7.029069],[9.359528,9.886986,-8.861319],[-0.586117,0.722402,6.471473],[-2.330072,9.264225,0.715585],[6.080709,5.181680,8.272547],[-5.798976,3.844271,3.230178],[6.230166,9.157586,-6.800260],[-4.695064,-0.959788,8.854666],[-3.369458,-1.780570,-7.702954],[-3.176918,7.245403,-1.317205],[-5.125565,-6.794342,-3.401389],[0.792826,-6.659544,-6.937389],[-6.867938,1.677643,-0.736050],[-4.006312,-6.074056,-9.349398],[-4.361870,2.826359,4.304179],[-8.525477,-9.487385,3.161752],[-4.771849,-5.911192,-9.207251],[-4.208107,-9.585237,8.043082],[-0.194834,2.494292,-3.352026],[0.009081,-9.126835,-6.281790],[4.254388,5.536369,-0.208620],[-4.853114,0.792061,1.126297],[3.019733,1.816128,-0.626679],[-2.170069,-4.416531,4.133085],[1.424220,-5.122235,5.182903],[4.920190,0.768802,-9.533419],[-6.418145,7.219540,-7.686758],[3.584917,-1.367551,2.211632],[3.856759,1.434179,7.251058],[7.134706,-7.464382,-2.330934],[-7.923895,-8.481178,-4.111343],[0.577639,4.932185,7.582477],[-8.219698,0.062260,7.170106],[9.219259,-9.194801,-8.599607],[6.973768,-1.621383,6.301635],[-9.570065,9.533503,-5.083019],[8.728600,-8.292768,-1.142765],[-3.672561,-8.739700,3.755527],[-6.057388,-1.553683,0.762792],[-2.024048,-5.059085,-6.133747],[4.408294,-8.621875,8.060476],[8.167065,-2.449553,3.805742],[9.289297,4.894274,5.505844],[6.622828,5.638788,-6.929798],[-8.815455,-6.566104,-7.703981],[4.083275,6.381762,-5.628506],[-2.963423,9.605940,1.462141],[9.754471,6.374227,-8.777517],[4.322075,-2.567179,9.475812],[7.499505,-5.802580,6.091947],[6.405863,-8.461490,-6.965737],[9.662716,-3.338064,6.285842],[-2.179651,-5.410235,-6.516693],[-3.550967,-8.229718,-5.216004],[-0.871070,-5.231696,0.328833],[3.336599,-3.298193,4.660836],[-3.789812,8.718035,-8.317616],[-7.427721,5.331261,-6.356512],[4.413028,4.302125,1.046888],[5.869134,4.706887,-0.896253],[4.074353,7.608244,-8.838654],[-3.677374,-3.725957,0.015841],[6.209551,4.105531,2.246496],[-3.286685,-9.300040,-5.705418],[2.935028,3.421185,6.827149],[-4.030182,9.252427,-5.426095],[-4.609696,-9.504372,-8.988367],[7.900377,7.741620,-4.925186],[-3.166634,7.907513,-7.605834],[5.335809,-3.205724,7.117321],[-4.272811,-9.483753,1.061775],[0.831970,-4.735735,-9.339918],[-8.677892,-1.200853,-8.606726],[-1.527246,0.492965,-2.202840],[6.706657,9.002945,-4.963946],[-3.897243,-9.398592,5.503168],[5.764786,-3.009375,-5.749611],[8.256527,-2.659372,7.293863],[-8.870279,-4.845609,3.860043],[-6.732894,-5.341753,-7.957317],[-4.198034,6.786561,-3.701809],[-3.772649,-6.556399,2.543865],[-2.658744,4.342521,-5.788329],[4.462661,-9.700818,-2.002179],[-5.641122,-6.539560,-2.145854],[-4.096023,1.424947,-8.177096],[-7.255214,-7.186547,7.106941],[2.995093,-9.061271,-5.382064],[4.112894,1.177849,3.368917],[-2.635918,-6.331815,-5.615856],[1.365824,4.907637,6.862499],[-6.928208,1.042422,-7.404478],[-5.809976,-0.777708,-6.933113],[8.980249,-6.269211,0.889394],[-6.279249,-7.326800,-4.379833],[-9.580887,5.735579,2.424675],[3.592505,-9.458749,-0.103049],[5.288118,-7.963194,4.508830],[-6.650663,4.512484,6.072591],[9.610945,-1.019865,4.772613],[-1.824720,-7.710824,7.566701],[-0.760757,-8.972065,6.859432],[5.463170,9.067232,-4.653344],[-7.305266,-8.524123,-2.197928],[-6.797697,9.866412,7.092031],[-9.083025,-3.433136,4.055050],[-6.235484,-0.931779,-5.937065],[3.168663,-2.464626,6.671775],[1.943716,-4.867256,3.187388],[2.345778,-0.455658,-9.299173],[1.553323,7.664069,-7.610124],[-6.958173,7.162903,3.331664],[-9.061240,3.335101,0.907071],[-9.169559,9.575373,-3.530512],[5.135759,-8.982204,4.364238],[9.389792,5.649847,-0.537716],[7.991565,-8.789966,-6.386000],[-9.505159,-6.341365,6.246916],[-1.202271,-5.393914,-8.905452],[3.317694,5.926745,4.438276],[-1.806364,1.901041,-5.467747],[0.158020,-3.036477,-4.982638],[3.315125,-8.890554,-6.824289],[-7.016531,4.691364,-9.536769],[9.701680,0.064412,-8.409127],[5.866120,3.884362,-8.135550],[2.922978,6.719664,-2.726743],[-4.940145,-9.339739,4.227128],[-7.318540,4.117620,2.565811],[-0.610575,3.112491,8.581914],[-3.813222,8.517871,5.650221],[7.306462,5.032409,3.457418],[-5.584226,-6.281718,-4.555667],[-1.977162,1.609330,-9.651575],[2.157346,5.269399,-7.797634],[-3.833419,-4.648321,-3.748339],[-3.622502,-4.297029,-0.658924],[4.803487,4.470466,1.317683],[3.818201,-9.018123,5.077843],[4.655870,5.951890,-9.401729],[9.424105,3.202729,-4.696910],[-0.677720,5.427228,-7.001492],[-0.305588,4.641687,2.483704],[0.558228,-9.576335,9.228086],[-6.976591,-6.124130,-5.322108],[1.460019,-8.539531,5.857886],[-1.933349,0.559393,-0.997151],[2.043776,0.176627,-3.279830],[6.896870,8.746617,9.424436],[7.097973,-9.337069,-5.755967],[-6.845319,-9.896036,-7.078227],[2.214757,7.416357,-3.994792],[2.561963,-4.128350,-7.941164],[5.251229,-6.718614,8.327748],[-8.966914,9.645033,9.078851],[2.635373,4.082086,-9.032734],[1.450939,-0.411723,-4.809860],[-6.366727,-2.993757,-1.699279],[3.866406,-2.009095,-0.757236],[5.881297,3.074894,4.678504],[-2.437626,-4.313653,2.616143],[3.947549,3.984970,7.513792],[3.368383,6.314739,4.964751],[-4.032682,5.697956,-9.088701],[3.063629,-5.994048,1.037653],[1.904021,-1.471542,6.841451],[-9.526885,-2.894346,8.223819],[0.330118,4.518029,-2.411130],[-4.805014,3.020220,-5.137253],[7.228064,-6.204701,-7.190111],[-3.134080,0.275076,9.371373],[-6.328639,-3.764453,9.979914],[-6.980052,-0.544325,6.021668],[-2.005803,3.628276,-5.286958],[-2.847256,2.541904,3.753723],[-3.849392,4.553211,3.511449],[-3.443410,-8.416314,-9.499704],[-3.001143,-9.944445,1.617656],[-0.475357,3.682576,6.483254],[4.614172,-6.474186,-6.777961],[-6.254400,1.705927,5.499528],[-6.437446,-9.447056,-8.267895],[4.583163,3.616441,1.288204],[9.761814,8.976473,3.360260],[-7.805553,-1.903248,-1.515258],[0.373325,8.215180,-5.364216],[6.339363,-9.337003,-2.550242],[-7.521294,-5.467012,2.448121],[-3.353455,1.968442,-0.909684],[7.334370,2.007893,2.591437],[-0.221876,-8.795134,9.073211],[-7.596901,3.850080,-6.410339],[2.192159,5.721346,-5.848424],[3.395545,-5.925836,-5.958041],[-2.183250,0.486492,9.387648],[6.775620,3.724518,4.735786],[-3.003254,7.109357,7.711059],[7.502438,0.846790,-1.382631],[-7.419859,-9.491859,-8.307922],[9.344405,-9.394434,-6.020391],[5.359076,-4.812718,5.925507],[0.368599,0.247802,4.910893],[-4.257973,-6.406488,-3.906336],[5.168032,-1.733053,9.470756],[7.243404,1.015918,7.894934],[8.215823,3.337151,-8.709049],[-7.206057,0.568567,-7.891234],[-1.250610,1.131661,-3.759588],[9.411350,-4.318048,-3.753836],[-6.928660,-5.983325,6.162076],[9.506017,-3.836921,-1.655603],[4.275916,-7.435594,8.809971],[0.099448,6.892586,-2.702231],[-6.710082,-5.830436,8.154512],[-0.887175,-2.671331,-8.763109],[9.007756,-3.431284,-2.546823],[-6.891798,1.918628,-9.970370],[1.517635,-6.509820,5.245041],[8.947357,-4.347972,-2.276576],[-5.333479,8.214896,-1.046552],[-9.631640,1.093319,4.375012],[-3.651161,8.567982,9.068120],[-3.061786,-3.545767,5.415870],[5.253009,0.082740,-4.896064],[0.250609,4.098450,8.907259],[-1.108155,9.097503,8.893424],[-5.811393,-3.930546,8.876566],[8.066145,-7.005330,2.336559],[4.277204,-5.684300,-0.518748],[0.881201,0.249319,0.121141],[-5.506622,1.623124,8.576005],[-8.562802,-8.926127,-4.419021],[-1.513777,0.741218,7.825810],[8.074957,4.010226,0.973965],[-0.143305,6.317079,2.303068],[0.879398,4.560551,0.290893],[7.217530,-4.426158,-5.610234],[6.172215,-5.557294,-8.622166],[7.467222,2.892478,0.972588],[9.893194,4.216297,-5.281469],[5.950226,-1.652507,-0.509642],[1.193154,5.568278,2.502542],[-9.242154,0.809136,1.520283],[-0.252655,0.654179,6.891058],[3.936551,-6.454809,1.609469],[6.452299,-2.525004,2.036920],[-4.276345,-2.865572,-5.300360],[2.108211,4.337498,-3.074760],[-5.377149,7.145206,-2.898297],[7.725176,6.460546,-1.283001],[-8.325216,0.356811,7.566535],[9.138960,-9.153387,9.233496],[8.210781,1.438862,6.533916],[5.861199,1.253376,5.807493],[5.887914,2.823563,7.933669],[9.936409,1.407628,-2.505758],[-6.671913,-7.456588,-4.240253],[1.339014,4.987336,-3.949548],[-3.240082,-7.776686,-1.520193],[0.619093,-0.048165,5.816658],[-3.254315,8.113013,4.329856],[-9.497827,2.616394,-1.471166],[7.306988,7.895167,4.927078],[2.516678,0.416370,7.409757],[-1.121759,5.888966,1.092263],[-8.239884,-3.456204,0.753739],[0.871890,7.550436,5.685427],[-1.104297,8.776136,8.222063],[2.542908,9.023613,-3.921560],[9.092977,3.044805,-9.068965],[5.655536,1.455563,-7.887704],[7.187058,-2.953102,6.392398],[0.179133,-5.321412,4.883977],[8.553118,1.955563,-8.979895],[9.544592,-2.167787,-2.690143],[2.275329,9.547589,3.729828],[3.068673,5.920321,5.289876],[9.361853,2.909247,-8.173254],[0.954937,6.540055,-3.831761],[1.858188,6.208740,-7.882692],[-2.172962,5.193814,-9.722535],[0.914448,-0.417559,-7.165078],[4.921911,-5.878597,8.028499],[-8.324922,-0.168570,4.877998],[9.304939,-0.848425,-4.239948],[-3.155477,-4.050945,-9.289147],[7.576964,-8.183323,4.675545],[3.748676,6.926946,6.813816],[-1.710565,2.291194,0.274305],[7.141787,7.040181,-1.061728],[4.165819,-6.576090,-0.486194],[-0.435154,6.786759,0.535956],[6.813375,5.195024,-3.593468],[-3.938971,-2.021780,5.119149],[-7.073538,-0.492164,-4.761177],[-9.759855,-6.840654,2.154731],[2.816991,-4.889108,1.983004],[9.646937,-2.961455,5.336577],[3.349620,-0.679470,3.605594],[-2.873305,-4.254986,-5.550445],[0.230868,-4.402994,7.701014],[-1.523917,-3.323887,2.316725],[3.632630,-4.005563,-6.037047],[-2.235584,2.741713,3.990247],[2.419518,6.116013,5.138597],[-8.282699,-1.093597,-6.747146],[7.696939,-1.778951,1.614390],[4.507128,3.840977,-6.545249],[3.345576,0.464890,3.468291],[5.906379,-7.008144,8.500249],[-3.322103,-5.085359,-7.802641],[9.162622,-5.460681,7.577476],[9.233506,-1.935626,6.211772],[-0.378285,8.639485,1.585982],[1.090219,0.363433,4.762030],[9.541360,4.029058,-0.912450],[-5.740632,4.178229,-2.384617],[-4.704293,6.698317,-5.785972],[2.633037,4.848729,-9.660936],[-8.930247,5.751979,-9.674333],[-4.453167,3.249534,2.837505],[4.347573,0.186129,-9.036615],[-8.787406,3.983276,7.937122],[-5.896600,3.514970,-5.521731],[-4.875721,2.364611,-9.645431],[8.542475,2.213063,-4.850849],[-4.353884,-2.588085,-6.051416],[1.244195,8.394451,-7.049318],[-2.024342,4.218736,-5.777401],[-0.476370,-9.304008,4.551390],[6.250884,3.323578,9.642187],[2.906220,-1.413988,7.752185],[7.908088,4.532175,2.600051],[1.774964,-5.805385,3.860201],[-8.814781,1.855954,7.736496],[-7.917465,8.514693,0.196334],[5.478485,7.331762,-9.207364],[8.876679,0.646416,-3.978104],[-6.939998,7.711412,4.308700],[-8.107742,-4.915453,-5.500955],[-2.975018,-9.645120,5.742169],[-7.353516,-1.009155,-7.475946],[-5.610748,-3.590299,-7.215861],[-3.781428,5.753488,1.589771],[0.190293,-8.473624,4.742861],[1.030234,3.028723,-3.586976],[-2.353068,-5.452797,-6.112693],[8.091437,-9.467290,-8.775090],[3.272359,2.397345,-8.877925],[3.472246,-0.770998,2.863089],[-5.646357,9.664602,-0.275089],[-8.929446,-3.313353,-6.657343],[8.261395,6.772882,1.495578],[-7.109045,7.541597,9.505132],[-8.649920,3.416182,0.342774],[6.269738,2.164783,3.943592],[-4.609279,-1.985024,-3.935334],[5.433446,5.530567,8.679455],[-5.667651,0.709332,-7.971335],[-3.676015,1.272469,1.802689],[-0.734690,-4.267488,-6.715926],[-9.606974,-5.438004,1.697653],[1.258870,-4.793795,-8.134532],[3.166473,-5.689202,-4.792741],[-4.971498,6.240691,-9.891381],[-7.245636,6.806391,-9.171477],[-9.964066,-8.305438,-1.069235],[-2.146023,-1.930363,-2.113004],[-3.311133,-9.071929,-5.565494],[3.802620,0.945002,-5.590702],[-3.129306,-6.256143,3.355781],[5.568815,0.846732,-1.739208],[6.479243,7.694096,-4.882824],[-9.201350,-7.829958,0.532499],[7.751438,2.876912,6.451233],[-6.741642,-4.396938,-0.321986],[-4.733298,9.630457,3.233496],[9.844305,-7.023890,1.061475],[-8.397911,-1.859748,-4.244505],[4.079157,-2.491210,-4.360207],[-6.221154,5.672192,5.356575],[-7.999558,8.531477,-4.207377],[-4.045087,-1.887588,-9.302937],[8.121534,4.691717,6.536352],[4.620637,-6.669563,8.904112],[1.370626,7.897153,-2.321395],[-6.184147,-3.962493,1.906494],[5.563267,-6.460299,-8.226464],[0.272234,0.784251,2.735263],[-1.297426,0.486898,9.318086],[6.682778,-5.371242,9.904275],[5.238982,-0.479451,-3.499566],[-7.306779,3.201530,2.456975],[-6.764359,6.957853,6.857983],[-8.667146,2.228442,-3.491382],[0.155246,5.898720,3.345067],[-2.606980,1.614244,-8.579324],[-4.742055,8.918809,-0.368309],[-1.102920,3.275946,-0.435590],[-9.136267,-3.430671,9.657303],[-0.226829,-5.533119,-2.517105],[0.178216,-8.574296,7.298096],[-0.690530,-0.798100,2.035273],[-1.594466,0.447444,2.868511],[-2.042405,-8.266414,6.490662],[-9.911946,-6.543821,-9.239591],[-5.904485,-8.786910,-0.060974],[5.864815,8.084921,-5.215566],[-8.172961,-6.532442,-7.833723],[-7.511017,-1.847100,6.123733],[-6.913110,8.230648,-5.828440],[9.728829,4.556144,2.805856],[-0.448669,-6.035288,-1.726057],[-0.810563,0.571279,-7.486345],[3.062732,9.023801,-6.784308],[8.250890,-1.004984,6.390152],[-7.607154,4.857112,-2.501542],[2.539204,2.683624,9.573744],[-6.790591,8.851735,-4.635380],[8.287990,-5.088052,0.126598],[9.403280,2.213894,-0.827345],[-2.997895,6.799862,-8.816289],[7.252143,-7.117351,-3.743028],[-8.683219,-9.592726,-4.227717],[-4.264892,-8.708211,-5.034694],[2.729145,-8.018369,4.586578],[3.479055,-6.600075,8.978734],[1.429746,-7.505717,-5.908002],[5.830981,-3.334291,-0.327264],[-5.522136,-8.506133,7.104254],[2.408675,9.834536,4.114602],[-8.278078,-2.762013,3.431565],[1.492008,-7.515506,9.115518],[-9.584905,-3.633745,-6.082977],[-4.482864,2.160811,4.800658],[2.016772,0.888027,-6.195124],[-4.874788,6.038509,0.162727],[-1.577965,4.555749,3.001938],[4.883313,4.135018,-0.355289],[-0.880870,0.103350,3.496638],[-6.206285,7.900330,2.675542],[-0.600101,-3.723882,1.461365],[2.169019,-3.453188,-5.526617],[6.093988,-6.859554,1.687043],[-6.334644,1.033429,2.500984],[-3.173875,8.350791,4.641312],[9.441085,-0.514988,-5.095870],[-2.239540,-2.117139,-2.331162],[-9.480126,-5.980789,7.207955],[0.945009,-5.857263,0.608351],[0.622989,9.821581,3.231735],[-3.652392,5.959255,-1.202233],[-7.333813,4.447526,6.251609],[7.228952,9.336783,-1.245903],[-5.233159,-0.290160,-9.294701],[-8.442523,8.532034,1.806402],[7.590015,1.771443,-0.508010],[-8.661831,-9.278257,1.284835],[6.591702,9.080032,2.291004],[3.118057,1.008359,-6.850009],[0.086635,-2.684141,-6.523164],[0.296305,0.102520,-5.097332],[-5.038363,-3.959227,-8.591941],[6.337569,-0.432744,-8.638544],[-0.250499,8.609854,0.046547],[-8.164552,3.256173,9.821310],[-4.114574,1.425468,-7.626416],[6.778436,-4.233955,3.735032],[-7.218463,-0.001204,-2.670607],[-6.246696,8.965710,-3.043709],[1.511991,2.206725,1.184005],[-4.653473,-7.473318,4.638172],[-0.656652,6.297977,-5.400782],[0.571707,5.068488,-3.055144],[8.522634,3.557620,-2.690556],[4.339904,-5.284660,-7.936199],[-9.723359,6.214187,-9.010758],[6.904192,3.132620,2.688395],[5.964718,-6.805859,0.673273],[-1.748084,0.701613,0.292478],[-2.338621,4.841114,7.451302],[-6.147570,5.024288,-2.292876],[2.508114,-9.026357,3.704114],[-9.377918,-2.622585,7.535939],[8.739590,-8.789138,4.687618],[4.066077,5.279586,-4.626555],[-7.621806,-5.747942,-2.093086],[-7.153721,-3.999379,7.934401],[-4.506372,-6.759173,-9.114478],[-5.352918,-5.997755,7.085686],[-6.010519,9.208302,4.377913],[0.411872,-8.311783,5.395257],[-3.355826,-8.704546,-5.918951],[-6.947709,-0.227088,-2.512628],[5.984093,-1.254207,1.338201],[1.008391,-7.941622,5.191321],[2.463654,-9.047413,-4.244782],[-4.846644,0.481334,2.749376],[-0.790130,-1.546570,3.449210],[-0.465267,-3.199818,-4.957990],[-9.515930,0.768907,-7.588854],[-2.845083,0.144287,0.886704],[3.015881,5.765071,1.683597],[-5.715724,-9.338105,-9.304136],[5.733976,-3.189120,0.560521],[-3.763595,1.763095,8.847667],[-1.549660,9.347134,-3.184139],[-5.796378,-9.703031,-0.295956],[-3.203828,-7.504500,7.323778],[-2.332977,9.895776,-9.650366],[5.575672,-0.172003,5.326816],[-4.464593,2.317364,9.585069],[4.850456,8.247013,3.564117],[5.356219,8.427014,9.202032],[-2.390266,8.577654,-6.097031],[-9.836331,-9.541624,-5.041541],[-8.072699,-6.214831,-4.445018],[7.961770,9.949016,-9.523346],[-6.168267,-3.811931,8.204511],[3.879902,-0.135863,4.342133],[-6.527160,-9.961289,-7.651628],[-9.825735,-2.273833,-2.689050],[4.189729,-1.295950,4.171347],[5.042885,-7.756219,2.264020],[8.792434,7.268373,7.728937],[2.625711,-3.798865,8.976462],[-7.526238,-3.448780,-8.324063],[-1.288886,-2.633845,-2.865419],[4.380045,-2.426844,6.951494],[4.190610,-1.852736,-8.351248],[3.988207,7.815756,-2.488360],[-1.753637,8.436142,2.478463],[8.700310,3.486492,-7.540475],[4.059000,5.274559,5.722185],[1.897900,-2.221317,8.858575],[-0.040827,-9.021268,-0.965639],[-3.997124,6.902163,9.945393],[6.324122,-4.141654,9.081694],[-5.322690,-3.944868,-7.139422],[-3.280514,-8.844500,4.019923],[-1.626889,-1.981066,7.483936],[8.970753,7.198107,8.994466],[2.310267,-8.989948,5.455195],[-5.821517,-7.390020,-7.360035],[-3.607539,1.352843,8.877076],[-6.196276,-4.542493,-1.349371],[1.619686,0.081661,-6.756568],[-2.858698,8.818418,-7.174881],[-8.891922,-4.897499,7.267491],[3.698610,3.439597,5.725094],[3.305299,-0.510114,-8.399166],[7.776649,-4.633524,5.303993],[-4.435260,-7.400441,-7.902398],[-0.735562,1.002654,3.341927],[9.339118,-1.721449,9.917298],[8.569863,1.608048,-6.904325],[-4.405490,-8.283239,-2.282650],[-7.489805,6.054195,-5.090070],[3.466240,-4.573927,2.921601],[8.624369,-5.197204,-8.260900],[6.619313,-3.345350,8.799592],[0.819476,-0.201206,4.033780],[9.196286,6.332051,-7.247742],[-3.600300,7.499821,0.929278],[-6.516032,1.620023,-8.677389],[8.971141,-0.377790,3.596350],[-8.730571,9.306560,-8.983343],[-1.275797,-1.676537,-7.475696],[1.304997,-8.405887,1.686329],[-1.187481,3.765902,-2.902330],[6.075635,8.512394,1.434775]], dtype = "float32")#candidate|10140|(585, 3)|const|float32
call_10137 = relay.TupleGetItem(func_1326_call(relay.reshape(const_10138.astype('int8'), [1, 5, 6]), relay.reshape(const_10139.astype('int8'), [16, 5, 6]), relay.reshape(const_10140.astype('float32'), [1755,]), ), 2)
call_10141 = relay.TupleGetItem(func_1331_call(relay.reshape(const_10138.astype('int8'), [1, 5, 6]), relay.reshape(const_10139.astype('int8'), [16, 5, 6]), relay.reshape(const_10140.astype('float32'), [1755,]), ), 2)
bop_10144 = relay.divide(uop_10135.astype('float32'), relay.reshape(var_10101.astype('float32'), relay.shape_of(uop_10135))) # shape=(11, 5, 8)
output = relay.Tuple([call_10116,var_10117,call_10137,const_10138,const_10139,const_10140,bop_10144,])
output2 = relay.Tuple([call_10118,var_10117,call_10141,const_10138,const_10139,const_10140,bop_10144,])
F = relay.Function([var_10101,var_10117,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10101,var_10117,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

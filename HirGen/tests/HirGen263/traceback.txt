==========mod==========
#[version = "0.0.5"]
def @func_7311(%var_7261: Tensor[(16, 8, 16), int8], %var_7262: Tensor[(16, 8, 16), int8], %var_7269: Tensor[(2496), int8], %var_7272: Tensor[(252), float64], %var_7295: Tensor[(2, 144), float32], %var_7303: int32) -> (Tensor[(16, 8, 16), bool], Tensor[(12, 13, 16), int8], Tensor[(2496), int8], Tensor[(6, 7, 6), float64], Tensor[(252), float64], Tensor[(16, 7, 5), float64], Tensor[(80), uint64], Tensor[(165), float64], Tensor[(2, 144), float32], Tensor[(1, 7), int32], int32, Tensor[(7, 1), int32]) {
  %0 = cast(%var_7262, dtype="bool") /* ty=Tensor[(16, 8, 16), bool] */;
  %1 = shape_of(%var_7261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_7261, dtype="bool") /* ty=Tensor[(16, 8, 16), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = cast(%var_7269, dtype="int8") /* ty=Tensor[(2496), int8] */;
  %5 = cast(%var_7269, dtype="int8") /* ty=Tensor[(2496), int8] */;
  %6 = reshape(%4, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), int8] */;
  %7 = reshape(%5, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), int8] */;
  %8 = @func_7205(%6, %7) /* ty=(Tensor[(12, 13, 16), int8],) */;
  %9 = cast(%var_7272, dtype="float64") /* ty=Tensor[(252), float64] */;
  %10 = reshape(%9, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), float64] */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(165), float64] */, dtype="float64") /* ty=Tensor[(165), float64] */;
  %13 = cast(%var_7295, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %14 = reshape(%11, newshape=[16, 1, 5]) /* ty=Tensor[(16, 1, 5), uint64] */;
  %15 = reshape(%12, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %16 = reshape(%13, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %17 = @func_6807(%14, %15, %16) /* ty=(Tensor[(16, 7, 5), uint64], Tensor[(16, 7, 5), float64], Tensor[(45), int32], Tensor[(165), float64], Tensor[(288), float32]) */;
  %18 = cast(%var_7303, dtype="int32") /* ty=int32 */;
  %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 1), int32] */, dtype="int32") /* ty=Tensor[(7, 1), int32] */;
  %20 = reshape(%18, newshape=[]) /* ty=int32 */;
  %21 = reshape(%19, newshape=[1, 7]) /* ty=Tensor[(1, 7), int32] */;
  %22 = @func_1612(%20, %21) /* ty=(Tensor[(1, 7), int32],) */;
  %23 = less_equal(%2, %3) /* ty=Tensor[(16, 8, 16), bool] */;
  %24 = %8.0;
  %25 = @func_189(%10) /* ty=Tensor[(6, 7, 6), float64] */;
  %26 = %17.1;
  %27 = %22.0;
  (%23, %24, %var_7269, %25, %var_7272, %26, meta[relay.Constant][0] /* ty=Tensor[(80), uint64] */, meta[relay.Constant][1] /* ty=Tensor[(165), float64] */, %var_7295, %27, %var_7303, meta[relay.Constant][2] /* ty=Tensor[(7, 1), int32] */)
}

def @func_8439(%var_8407: Tensor[(8, 4, 8), uint16], %var_8423: Tensor[(8, 4, 8), float32]) -> (Tensor[(8, 4, 8), float32],) {
  %28 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 4, 8), uint16] */, dtype="bool") /* ty=Tensor[(8, 4, 8), bool] */;
  %29 = shape_of(%var_8407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %30 = cast(%var_8407, dtype="bool") /* ty=Tensor[(8, 4, 8), bool] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %32 = equal(%30, %31) /* ty=Tensor[(8, 4, 8), bool] */;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(8, 4, 8), float32] */;
  %34 = sinh(%33) /* ty=Tensor[(8, 4, 8), float32] */;
  %35 = cast(%var_8423, dtype="int64") /* ty=Tensor[(8, 4, 8), int64] */;
  %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%34, dtype="int64") /* ty=Tensor[(8, 4, 8), int64] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %39 = maximum(%37, %38) /* ty=Tensor[(8, 4, 8), int64] */;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(8, 4, 8), float32] */;
  %41 = rsqrt(%40) /* ty=Tensor[(8, 4, 8), float32] */;
  (%41,)
}

def @func_1700(%var_1680: Tensor[(15, 3, 7), float32], %var_1690: Tensor[(288), float32], %var_1698: Tensor[(1408), int8]) -> (Tensor[(15, 3, 7), float32], Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(1408), int8], Tensor[(1755), float32], Tensor[(1408), int8]) {
  %42 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(15, 3, 7), float32] */;
  %43 = shape_of(%var_1680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %44 = cast(%var_1680, dtype="float32") /* ty=Tensor[(15, 3, 7), float32] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %46 = cast(%var_1690, dtype="float32") /* ty=Tensor[(288), float32] */;
  %47 = reshape(%46, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), float32] */;
  %48 = @func_1645(%47) /* ty=(Tensor[(8, 6, 6), float64],) */;
  %49 = cast(meta[relay.Constant][5] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %50 = cast(meta[relay.Constant][5] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %51 = cast(%var_1698, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %52 = reshape(%49, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %53 = reshape(%50, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %54 = reshape(%51, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %55 = @func_743(%52, %53, %54) /* ty=(Tensor[(15, 9, 13), float32], Tensor[(11, 8, 16), int8], Tensor[(1408), int8]) */;
  %56 = floor_mod(%44, %45) /* ty=Tensor[(15, 3, 7), float32] */;
  %57 = %48.0;
  %58 = %55.2;
  (%56, %57, %var_1690, %58, meta[relay.Constant][5] /* ty=Tensor[(1755), float32] */, %var_1698)
}

def @func_1383(%var_1355: Tensor[(3, 7, 16), uint32], %var_1356: Tensor[(3, 7, 16), uint32], %var_1361: Tensor[(1408), int8], %var_1379: Tensor[(1755), float32]) -> (Tensor[(3, 7, 16), uint32], Tensor[(1408), bool], Tensor[(15, 9, 13), float32], Tensor[(1755), float32]) {
  %59 = cast(%var_1356, dtype="uint32") /* ty=Tensor[(3, 7, 16), uint32] */;
  %60 = shape_of(%var_1355, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%var_1355, dtype="uint32") /* ty=Tensor[(3, 7, 16), uint32] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %63 = cast(%var_1361, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %64 = cast(%var_1361, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %65 = cast(%var_1361, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %66 = reshape(%63, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %67 = reshape(%64, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %68 = reshape(%65, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %69 = @func_421(%66, %67, %68) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), uint32]) */;
  %70 = %69.1;
  %71 = cast(%70, dtype="bool") /* ty=Tensor[(11, 8, 16), bool] */;
  %72 = shape_of(%var_1361, dtype="int32") /* ty=Tensor[(1), int32] */;
  %73 = cast(%var_1361, dtype="bool") /* ty=Tensor[(1408), bool] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?), bool] */;
  %75 = cast(%var_1379, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %76 = cast(%var_1379, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %77 = equal(%73, %74) /* ty=Tensor[(1408), bool] */;
  %78 = cast(%77, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %79 = reshape(%75, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %80 = reshape(%76, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %81 = reshape(%78, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %82 = @func_743(%79, %80, %81) /* ty=(Tensor[(15, 9, 13), float32], Tensor[(11, 8, 16), int8], Tensor[(1408), int8]) */;
  %83 = left_shift(%61, %62) /* ty=Tensor[(3, 7, 16), uint32] */;
  %84 = %82.0;
  (%83, %77, %84, %var_1379)
}

def @func_2315(%var_2310: Tensor[(2, 11, 14), bool]) -> (Tensor[(2, 11, 14), bool],) {
  %85 = cast(%var_2310, dtype="bool") /* ty=Tensor[(2, 11, 14), bool] */;
  %86 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(2, 11, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 11, 14), bool] */, dtype="bool") /* ty=Tensor[(2, 11, 14), bool] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %89 = logical_or(%87, %88) /* ty=Tensor[(2, 11, 14), bool] */;
  (%89,)
}

def @func_9588(%var_9581: Tensor[(4, 1, 7), float64]) -> Tensor[(4, 1, 7), float64] {
  %90 = cast(%var_9581, dtype="float64") /* ty=Tensor[(4, 1, 7), float64] */;
  atan(%90) /* ty=Tensor[(4, 1, 7), float64] */
}

def @func_9083(%var_9032: Tensor[(3, 14, 15), float32], %var_9078: Tensor[(1, 1408), int8]) -> (Tensor[(3, 14, 15), int32], Tensor[(10, 13, 9), float32], Tensor[(1170), float32], Tensor[(3, 14, 15), bool], Tensor[(1408), int8], Tensor[(315), float32], Tensor[(288), float32], Tensor[(1, 1408), int8]) {
  %91 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 14, 15), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 15), float32] */;
  %92 = sigmoid(%91) /* ty=Tensor[(3, 14, 15), float32] */;
  %93 = cast(%var_9032, dtype="int32") /* ty=Tensor[(3, 14, 15), int32] */;
  %94 = shape_of(%92, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%92, dtype="int32") /* ty=Tensor[(3, 14, 15), int32] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %97 = cast(meta[relay.Constant][8] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %98 = cast(meta[relay.Constant][8] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %99 = reshape(%97, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), float32] */;
  %100 = reshape(%98, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), float32] */;
  %101 = cast(%var_9032, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %102 = shape_of(%92, dtype="int32") /* ty=Tensor[(3), int32] */;
  %103 = cast(%92, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %105 = cast(meta[relay.Constant][9] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %106 = cast(meta[relay.Constant][10] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %107 = cast(%var_9078, dtype="int8") /* ty=Tensor[(1, 1408), int8] */;
  %108 = reshape(%105, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), float32] */;
  %109 = reshape(%106, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %110 = reshape(%107, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %111 = @func_1700(%108, %109, %110) /* ty=(Tensor[(15, 3, 7), float32], Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(1408), int8], Tensor[(1755), float32], Tensor[(1408), int8]) */;
  %112 = logical_xor(%95, %96) /* ty=Tensor[(3, 14, 15), int32] */;
  %113 = @func_3841(%99, %100) /* ty=Tensor[(10, 13, 9), float32] */;
  %114 = equal(%103, %104) /* ty=Tensor[(3, 14, 15), bool] */;
  %115 = %111.3;
  (%112, %113, meta[relay.Constant][8] /* ty=Tensor[(1170), float32] */, %114, %115, meta[relay.Constant][9] /* ty=Tensor[(315), float32] */, meta[relay.Constant][10] /* ty=Tensor[(288), float32] */, %var_9078)
}

def @func_1645(%var_1624: Tensor[(8, 6, 6), float32]) -> (Tensor[(8, 6, 6), float64],) {
  %116 = cast(%var_1624, dtype="float32") /* ty=Tensor[(8, 6, 6), float32] */;
  %117 = acos(%116) /* ty=Tensor[(8, 6, 6), float32] */;
  %118 = cast(%117, dtype="float64") /* ty=Tensor[(8, 6, 6), float64] */;
  %119 = erf(%118) /* ty=Tensor[(8, 6, 6), float64] */;
  (%119,)
}

def @func_4508(%var_4503: Tensor[(9, 2, 5), float32]) -> Tensor[(9, 2, 5), float32] {
  %120 = cast(%var_4503, dtype="float32") /* ty=Tensor[(9, 2, 5), float32] */;
  log10(%120) /* ty=Tensor[(9, 2, 5), float32] */
}

def @func_7579(%var_7520: Tensor[(2, 11, 15), uint64], %var_7521: Tensor[(2, 11, 15), uint64], %var_7527: Tensor[(1755), float32], %var_7537: Tensor[(1408), int8], %var_7563: Tensor[(252), float64], %var_7566: Tensor[(120), float64]) -> (Tensor[(2, 11, 15), bool], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(1408), uint16], Tensor[(2, 11, 15), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(4, 6, 5), float64], Tensor[(120), float64], uint32, Tensor[(1540), float64], Tensor[(5, 9), int32]) {
  %121 = cast(%var_7521, dtype="bool") /* ty=Tensor[(2, 11, 15), bool] */;
  %122 = shape_of(%var_7520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_7520, dtype="bool") /* ty=Tensor[(2, 11, 15), bool] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %125 = cast(%var_7527, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %126 = cast(%var_7527, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %127 = cast(meta[relay.Constant][11] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %128 = reshape(%125, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %129 = reshape(%126, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %130 = reshape(%127, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %131 = @func_743(%128, %129, %130) /* ty=(Tensor[(15, 9, 13), float32], Tensor[(11, 8, 16), int8], Tensor[(1408), int8]) */;
  %132 = %131.2;
  %133 = cast(%var_7537, dtype="uint16") /* ty=Tensor[(1408), uint16] */;
  %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(1), int32] */;
  %135 = cast(%132, dtype="uint16") /* ty=Tensor[(1408), uint16] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %137 = cast(%var_7520, dtype="float64") /* ty=Tensor[(2, 11, 15), float64] */;
  %138 = cast(%var_7563, dtype="float64") /* ty=Tensor[(252), float64] */;
  %139 = reshape(%138, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %140 = @func_677(%139) /* ty=(Tensor[(10, 4, 7), float64], Tensor[(6, 7, 6), float64], Tensor[(252), float64]) */;
  %141 = cast(%var_7566, dtype="float64") /* ty=Tensor[(120), float64] */;
  %142 = reshape(%141, newshape=[4, 6, 5]) /* ty=Tensor[(4, 6, 5), float64] */;
  %143 = @func_3724(%142) /* ty=(Tensor[(4, 6, 5), float64],) */;
  %144 = cast(meta[relay.Constant][12] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %145 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 9), int32] */, dtype="int32") /* ty=Tensor[(5, 9), int32] */;
  %146 = reshape(%144, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float64] */;
  %147 = reshape(%145, newshape=[45]) /* ty=Tensor[(45), int32] */;
  %148 = @func_2259(%146, %147) /* ty=(Tensor[(14, 10, 11), float64], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(1, 720), int32], uint32, Tensor[(45), int32], Tensor[(60, 12), int32]) */;
  %149 = not_equal(%123, %124) /* ty=Tensor[(2, 11, 15), bool] */;
  %150 = bitwise_and(%135, %136) /* ty=Tensor[(1408), uint16] */;
  %151 = sigmoid(%137) /* ty=Tensor[(2, 11, 15), float64] */;
  %152 = %140.2;
  %153 = %143.0;
  %154 = %148.4;
  (%149, %var_7527, meta[relay.Constant][11] /* ty=Tensor[(1408), int8] */, %150, %151, %152, %var_7563, %153, %var_7566, %154, meta[relay.Constant][12] /* ty=Tensor[(1540), float64] */, meta[relay.Constant][13] /* ty=Tensor[(5, 9), int32] */)
}

def @func_1612(%var_1605: int32, %var_1606: Tensor[(1, 7), int32]) -> (Tensor[(1, 7), int32],) {
  %155 = cast(%var_1605, dtype="int32") /* ty=int32 */;
  %156 = cast(%var_1606, dtype="int32") /* ty=Tensor[(1, 7), int32] */;
  %157 = bitwise_xor(%155, %156) /* ty=Tensor[(1, 7), int32] */;
  (%157,)
}

def @func_7813(%var_7766: Tensor[(1755), float32], %var_7767: Tensor[(22, 64), int8], %var_7768: Tensor[(252), float64], %var_7782: Tensor[(336), uint32]) -> (Tensor[(15, 15, 15), float32], Tensor[(4, 6, 5), float64], Tensor[(165, 2), uint64], Tensor[(1755), float32], Tensor[(22, 64), int8], Tensor[(252), float64], Tensor[(60, 2), float64], Tensor[(15, 9, 13), float32], Tensor[(336), uint32], Tensor[(720, 1), int32], Tensor[(15, 3), float64]) {
  %158 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 15, 15), float32] */;
  %159 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(15, 15, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 15, 15), float32] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %162 = cast(meta[relay.Constant][16] /* ty=Tensor[(165, 2), uint64] */, dtype="uint64") /* ty=Tensor[(165, 2), uint64] */;
  %163 = cast(meta[relay.Constant][16] /* ty=Tensor[(165, 2), uint64] */, dtype="uint64") /* ty=Tensor[(165, 2), uint64] */;
  %164 = cast(%var_7766, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %165 = cast(%var_7767, dtype="int8") /* ty=Tensor[(22, 64), int8] */;
  %166 = cast(%var_7768, dtype="float64") /* ty=Tensor[(252), float64] */;
  %167 = cast(meta[relay.Constant][17] /* ty=Tensor[(60, 2), float64] */, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %168 = reshape(%162, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), uint64] */;
  %169 = reshape(%163, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), uint64] */;
  %170 = reshape(%164, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %171 = reshape(%165, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %172 = reshape(%166, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %173 = reshape(%167, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %174 = @func_7579(%168, %169, %170, %171, %172, %173) /* ty=(Tensor[(2, 11, 15), bool], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(1408), uint16], Tensor[(2, 11, 15), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(4, 6, 5), float64], Tensor[(120), float64], uint32, Tensor[(1540), float64], Tensor[(5, 9), int32]) */;
  %175 = cast(%var_7782, dtype="uint32") /* ty=Tensor[(336), uint32] */;
  %176 = cast(%var_7782, dtype="uint32") /* ty=Tensor[(336), uint32] */;
  %177 = cast(%var_7767, dtype="int8") /* ty=Tensor[(22, 64), int8] */;
  %178 = cast(%var_7766, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %179 = reshape(%175, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), uint32] */;
  %180 = reshape(%176, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), uint32] */;
  %181 = reshape(%177, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %182 = reshape(%178, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %183 = @func_1383(%179, %180, %181, %182) /* ty=(Tensor[(3, 7, 16), uint32], Tensor[(1408), bool], Tensor[(15, 9, 13), float32], Tensor[(1755), float32]) */;
  %184 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 3), float64] */;
  %185 = cast(%var_7768, dtype="float64") /* ty=Tensor[(252), float64] */;
  %186 = reshape(%184, newshape=[15, 1, 3]) /* ty=Tensor[(15, 1, 3), float64] */;
  %187 = reshape(%185, newshape=[6, 42]) /* ty=Tensor[(6, 42), float64] */;
  %188 = @func_3518(%186, %187) /* ty=(Tensor[(15, 1, 3), float64], Tensor[(6, 7, 6), float64], Tensor[(6, 42), float64], Tensor[(15, 3, 16), int32], Tensor[(720, 1), int32]) */;
  %189 = divide(%160, %161) /* ty=Tensor[(15, 15, 15), float32] */;
  %190 = %174.7;
  %191 = %183.2;
  %192 = %188.4;
  (%189, %190, meta[relay.Constant][16] /* ty=Tensor[(165, 2), uint64] */, %var_7766, %var_7767, %var_7768, meta[relay.Constant][17] /* ty=Tensor[(60, 2), float64] */, %191, %var_7782, %192, meta[relay.Constant][18] /* ty=Tensor[(15, 3), float64] */)
}

def @func_8658(%var_8605: Tensor[(14, 11, 8), int16], %var_8606: Tensor[(14, 11, 8), int16], %var_8612: Tensor[(800), float64], %var_8632: Tensor[(8, 36), float32]) -> (Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(14, 11, 8), int64], Tensor[(288), float32], Tensor[(8, 36), float32], Tensor[(14, 11, 8), float32], Tensor[(15, 3, 11), bool], Tensor[(495), float64]) {
  %193 = cast(%var_8612, dtype="float64") /* ty=Tensor[(800), float64] */;
  %194 = cast(meta[relay.Constant][19] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %195 = reshape(%193, newshape=[10, 8, 10]) /* ty=Tensor[(10, 8, 10), float64] */;
  %196 = reshape(%194, newshape=[1728]) /* ty=Tensor[(1728), float32] */;
  %197 = @func_5056(%195, %196) /* ty=(Tensor[(10, 8, 10), float64], Tensor[(12, 9, 16), float32], Tensor[(1728), float32]) */;
  %198 = cast(%var_8606, dtype="int64") /* ty=Tensor[(14, 11, 8), int64] */;
  %199 = shape_of(%var_8605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(%var_8605, dtype="int64") /* ty=Tensor[(14, 11, 8), int64] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %202 = cast(%var_8632, dtype="float32") /* ty=Tensor[(8, 36), float32] */;
  %203 = reshape(%202, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %204 = @func_4647(%203) /* ty=(Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(10, 1, 4), float32]) */;
  %205 = cast(%var_8606, dtype="int16") /* ty=Tensor[(14, 11, 8), int16] */;
  %206 = shape_of(%var_8605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%var_8605, dtype="int16") /* ty=Tensor[(14, 11, 8), int16] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %209 = subtract(%207, %208) /* ty=Tensor[(14, 11, 8), int16] */;
  %210 = cast(%209, dtype="float64") /* ty=Tensor[(14, 11, 8), float64] */;
  %211 = asinh(%210) /* ty=Tensor[(14, 11, 8), float64] */;
  %212 = cast(%211, dtype="float32") /* ty=Tensor[(14, 11, 8), float32] */;
  %213 = cast(meta[relay.Constant][20] /* ty=Tensor[(495), float64] */, dtype="float64") /* ty=Tensor[(495), float64] */;
  %214 = reshape(%213, newshape=[15, 3, 11]) /* ty=Tensor[(15, 3, 11), float64] */;
  %215 = %197.1;
  %216 = bitwise_and(%200, %201) /* ty=Tensor[(14, 11, 8), int64] */;
  %217 = %204.1;
  %218 = log2(%212) /* ty=Tensor[(14, 11, 8), float32] */;
  %219 = @func_7867(%214) /* ty=Tensor[(15, 3, 11), bool] */;
  (%215, %var_8612, meta[relay.Constant][19] /* ty=Tensor[(1728), float32] */, %216, %217, %var_8632, %218, %219, meta[relay.Constant][20] /* ty=Tensor[(495), float64] */)
}

def @func_8880(%var_8877: Tensor[(1, 5, 15), float32]) -> (Tensor[(1, 5, 15), float32],) {
  %220 = cast(%var_8877, dtype="float32") /* ty=Tensor[(1, 5, 15), float32] */;
  %221 = erf(%220) /* ty=Tensor[(1, 5, 15), float32] */;
  (%221,)
}

def @func_5536(%var_5478: Tensor[(10, 9, 16), int32], %var_5479: Tensor[(10, 9, 16), int32]) -> (Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(10, 9, 16), float64], Tensor[(10, 9, 16), float64]) {
  %222 = cast(meta[relay.Constant][21] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %223 = cast(meta[relay.Constant][22] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %224 = reshape(%222, newshape=[10, 8, 10]) /* ty=Tensor[(10, 8, 10), float64] */;
  %225 = reshape(%223, newshape=[1728]) /* ty=Tensor[(1728), float32] */;
  %226 = @func_5056(%224, %225) /* ty=(Tensor[(10, 8, 10), float64], Tensor[(12, 9, 16), float32], Tensor[(1728), float32]) */;
  %227 = cast(%var_5479, dtype="float64") /* ty=Tensor[(10, 9, 16), float64] */;
  %228 = cast(%var_5479, dtype="int32") /* ty=Tensor[(10, 9, 16), int32] */;
  %229 = shape_of(%var_5478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%var_5478, dtype="int32") /* ty=Tensor[(10, 9, 16), int32] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %232 = logical_xor(%230, %231) /* ty=Tensor[(10, 9, 16), int32] */;
  %233 = cast(%232, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
  %234 = log2(%233) /* ty=Tensor[(10, 9, 16), float32] */;
  %235 = cast(%var_5478, dtype="int16") /* ty=Tensor[(10, 9, 16), int16] */;
  %236 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%234, dtype="int16") /* ty=Tensor[(10, 9, 16), int16] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %239 = right_shift(%237, %238) /* ty=Tensor[(10, 9, 16), int16] */;
  %240 = cast(%232, dtype="float64") /* ty=Tensor[(10, 9, 16), float64] */;
  %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(%239, dtype="float64") /* ty=Tensor[(10, 9, 16), float64] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %244 = %226.1;
  %245 = asin(%227) /* ty=Tensor[(10, 9, 16), float64] */;
  %246 = mod(%242, %243) /* ty=Tensor[(10, 9, 16), float64] */;
  (%244, meta[relay.Constant][21] /* ty=Tensor[(800), float64] */, meta[relay.Constant][22] /* ty=Tensor[(1728), float32] */, %245, %246)
}

def @func_6446(%var_6427: Tensor[(3, 10, 7), float32]) -> (Tensor[(3, 10, 7), float32], Tensor[(3, 10, 7), float32]) {
  %247 = cast(%var_6427, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
  %248 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(3, 10, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %249 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 10, 7), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %251 = cast(%var_6427, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
  %252 = divide(%249, %250) /* ty=Tensor[(3, 10, 7), float32] */;
  %253 = sinh(%251) /* ty=Tensor[(3, 10, 7), float32] */;
  (%252, %253)
}

def @func_2121(%var_2072: Tensor[(11, 15, 1), float64], %var_2113: Tensor[(288), float32]) -> (Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), bool], Tensor[(15, 3, 16), int32], Tensor[(45), int32], Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(11, 15, 720), bool]) {
  %254 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 15, 1), float64] */, dtype="bool") /* ty=Tensor[(11, 15, 1), bool] */;
  %255 = shape_of(%var_2072, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%var_2072, dtype="bool") /* ty=Tensor[(11, 15, 1), bool] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %258 = cast(%var_2072, dtype="float64") /* ty=Tensor[(11, 15, 1), float64] */;
  %259 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(11, 15, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 15, 1), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 1), float64] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %262 = power(%260, %261) /* ty=Tensor[(11, 15, ?), float64] */;
  %263 = cast(%262, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
  %264 = sigmoid(%263) /* ty=Tensor[(11, 15, ?), float64] */;
  %265 = cast(%var_2072, dtype="bool") /* ty=Tensor[(11, 15, 1), bool] */;
  %266 = shape_of(%264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%264, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %269 = cast(meta[relay.Constant][25] /* ty=Tensor[(45), int32] */, dtype="int32") /* ty=Tensor[(45), int32] */;
  %270 = cast(meta[relay.Constant][26] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %271 = reshape(%269, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), int32] */;
  %272 = reshape(%270, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), int32] */;
  %273 = @func_765(%271, %272) /* ty=(Tensor[(15, 3, 16), int32],) */;
  %274 = cast(%var_2113, dtype="float32") /* ty=Tensor[(288), float32] */;
  %275 = reshape(%274, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), float32] */;
  %276 = @func_1645(%275) /* ty=(Tensor[(8, 6, 6), float64],) */;
  %277 = cast(%264, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
  %278 = cast(meta[relay.Constant][26] /* ty=Tensor[(720), int32] */, dtype="bool") /* ty=Tensor[(720), bool] */;
  %279 = logical_or(%256, %257) /* ty=Tensor[(11, 15, ?), bool] */;
  %280 = not_equal(%267, %268) /* ty=Tensor[(11, 15, ?), bool] */;
  %281 = %273.0;
  %282 = %276.0;
  %283 = logical_or(%277, %278) /* ty=Tensor[(11, 15, 720), bool] */;
  (%279, %280, %281, meta[relay.Constant][25] /* ty=Tensor[(45), int32] */, %282, %var_2113, %283)
}

def @func_3518(%var_3480: Tensor[(15, 1, 3), float64], %var_3489: Tensor[(6, 42), float64]) -> (Tensor[(15, 1, 3), float64], Tensor[(6, 7, 6), float64], Tensor[(6, 42), float64], Tensor[(15, 3, 16), int32], Tensor[(720, 1), int32]) {
  %284 = cast(%var_3480, dtype="float64") /* ty=Tensor[(15, 1, 3), float64] */;
  %285 = cast(%var_3489, dtype="float64") /* ty=Tensor[(6, 42), float64] */;
  %286 = reshape(%285, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), float64] */;
  %287 = cast(%var_3480, dtype="int32") /* ty=Tensor[(15, 1, 3), int32] */;
  %288 = cast(meta[relay.Constant][27] /* ty=Tensor[(720, 1), int32] */, dtype="int32") /* ty=Tensor[(720, 1), int32] */;
  %289 = reshape(%287, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), int32] */;
  %290 = reshape(%288, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), int32] */;
  %291 = @func_765(%289, %290) /* ty=(Tensor[(15, 3, 16), int32],) */;
  %292 = sinh(%284) /* ty=Tensor[(15, 1, 3), float64] */;
  %293 = @func_189(%286) /* ty=Tensor[(6, 7, 6), float64] */;
  %294 = %291.0;
  (%292, %293, %var_3489, %294, meta[relay.Constant][27] /* ty=Tensor[(720, 1), int32] */)
}

def @func_4301(%var_4290: Tensor[(14, 4, 15), int8], %var_4291: Tensor[(14, 4, 15), int8]) -> Tensor[(14, 4, 15), int8] {
  %295 = cast(%var_4291, dtype="int8") /* ty=Tensor[(14, 4, 15), int8] */;
  %296 = shape_of(%var_4290, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%var_4290, dtype="int8") /* ty=Tensor[(14, 4, 15), int8] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%297, %298) /* ty=Tensor[(14, 4, 15), int8] */
}

def @func_7205(%var_7199: Tensor[(12, 13, 16), int8], %var_7200: Tensor[(12, 13, 16), int8]) -> (Tensor[(12, 13, 16), int8],) {
  %299 = cast(%var_7200, dtype="int8") /* ty=Tensor[(12, 13, 16), int8] */;
  %300 = shape_of(%var_7199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%var_7199, dtype="int8") /* ty=Tensor[(12, 13, 16), int8] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %303 = bitwise_and(%301, %302) /* ty=Tensor[(12, 13, 16), int8] */;
  (%303,)
}

def @func_1067(%var_1028: uint32, %var_1062: Tensor[(15, 3), int32], %var_1063: Tensor[(1, 720), int32]) -> (Tensor[(3, 13, 11), float32], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(15, 3, 16), int32], Tensor[(15, 3), int32], Tensor[(1, 720), int32]) {
  %304 = cast(%var_1028, dtype="bool") /* ty=bool */;
  %305 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 13, 11), uint32] */, dtype="bool") /* ty=Tensor[(3, 13, 11), bool] */;
  %306 = less(%304, %305) /* ty=Tensor[(3, 13, 11), bool] */;
  %307 = cast(%306, dtype="float32") /* ty=Tensor[(3, 13, 11), float32] */;
  %308 = cast(meta[relay.Constant][29] /* ty=Tensor[(351), float64] */, dtype="float64") /* ty=Tensor[(351), float64] */;
  %309 = reshape(%308, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float64] */;
  %310 = @func_493(%309) /* ty=(Tensor[(3, 13, 9), bool],) */;
  %311 = cast(%var_1062, dtype="int32") /* ty=Tensor[(15, 3), int32] */;
  %312 = cast(%var_1063, dtype="int32") /* ty=Tensor[(1, 720), int32] */;
  %313 = reshape(%311, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), int32] */;
  %314 = reshape(%312, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), int32] */;
  %315 = @func_765(%313, %314) /* ty=(Tensor[(15, 3, 16), int32],) */;
  %316 = acos(%307) /* ty=Tensor[(3, 13, 11), float32] */;
  %317 = %310.0;
  %318 = %315.0;
  (%316, %317, meta[relay.Constant][29] /* ty=Tensor[(351), float64] */, %318, %var_1062, %var_1063)
}

def @func_4344(%var_4331: Tensor[(12, 9, 16), float32]) -> Tensor[(12, 9, 16), float32] {
  %319 = cast(%var_4331, dtype="float32") /* ty=Tensor[(12, 9, 16), float32] */;
  acosh(%319) /* ty=Tensor[(12, 9, 16), float32] */
}

def @func_1326(%var_1305: Tensor[(1, 5, 6), int8], %var_1306: Tensor[(16, 5, 6), int8], %var_1312: Tensor[(1755), float32]) -> (Tensor[(16, 5, 6), int8], Tensor[(11, 8, 16), int8], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(16, 5, 6), uint64]) {
  %320 = cast(%var_1305, dtype="int8") /* ty=Tensor[(1, 5, 6), int8] */;
  %321 = cast(%var_1306, dtype="int8") /* ty=Tensor[(16, 5, 6), int8] */;
  %322 = cast(%var_1312, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %323 = cast(%var_1312, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %324 = cast(meta[relay.Constant][30] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %325 = reshape(%322, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %326 = reshape(%323, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %327 = reshape(%324, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %328 = @func_743(%325, %326, %327) /* ty=(Tensor[(15, 9, 13), float32], Tensor[(11, 8, 16), int8], Tensor[(1408), int8]) */;
  %329 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 5, 6), int8] */, dtype="uint64") /* ty=Tensor[(16, 5, 6), uint64] */;
  %330 = shape_of(%var_1306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%var_1306, dtype="uint64") /* ty=Tensor[(16, 5, 6), uint64] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %333 = right_shift(%320, %321) /* ty=Tensor[(16, 5, 6), int8] */;
  %334 = %328.1;
  %335 = add(%331, %332) /* ty=Tensor[(16, 5, 6), uint64] */;
  (%333, %334, %var_1312, meta[relay.Constant][30] /* ty=Tensor[(1408), int8] */, %335)
}

def @func_7251(%var_7215: Tensor[(8, 4, 6), int8], %var_7216: Tensor[(8, 4, 6), int8], %var_7243: Tensor[(30), int8], %var_7244: Tensor[(480), int8]) -> (Tensor[(8, 4, 6), int8], Tensor[(1408), int8], Tensor[(30), int8], Tensor[(480), int8], Tensor[(1755, 1), float32]) {
  %336 = cast(%var_7216, dtype="int8") /* ty=Tensor[(8, 4, 6), int8] */;
  %337 = shape_of(%var_7215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(%var_7215, dtype="int8") /* ty=Tensor[(8, 4, 6), int8] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %340 = cast(%var_7243, dtype="int8") /* ty=Tensor[(30), int8] */;
  %341 = cast(%var_7244, dtype="int8") /* ty=Tensor[(480), int8] */;
  %342 = cast(meta[relay.Constant][32] /* ty=Tensor[(1755, 1), float32] */, dtype="float32") /* ty=Tensor[(1755, 1), float32] */;
  %343 = reshape(%340, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), int8] */;
  %344 = reshape(%341, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int8] */;
  %345 = reshape(%342, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %346 = @func_1326(%343, %344, %345) /* ty=(Tensor[(16, 5, 6), int8], Tensor[(11, 8, 16), int8], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(16, 5, 6), uint64]) */;
  %347 = left_shift(%338, %339) /* ty=Tensor[(8, 4, 6), int8] */;
  %348 = %346.3;
  (%347, %348, %var_7243, %var_7244, meta[relay.Constant][32] /* ty=Tensor[(1755, 1), float32] */)
}

def @func_6807(%var_6776: Tensor[(16, 1, 5), uint64], %var_6800: Tensor[(165), float64], %var_6801: Tensor[(288), float32]) -> (Tensor[(16, 7, 5), uint64], Tensor[(16, 7, 5), float64], Tensor[(45), int32], Tensor[(165), float64], Tensor[(288), float32]) {
  %349 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 7, 5), uint64] */, dtype="uint64") /* ty=Tensor[(16, 7, 5), uint64] */;
  %350 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(16, 7, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(meta[relay.Constant][33] /* ty=Tensor[(16, 7, 5), uint64] */, dtype="uint64") /* ty=Tensor[(16, 7, 5), uint64] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %353 = cast(%var_6776, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
  %354 = cast(meta[relay.Constant][33] /* ty=Tensor[(16, 7, 5), uint64] */, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
  %355 = greater(%353, %354) /* ty=Tensor[(16, 7, 5), bool] */;
  %356 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 7, 5), uint64] */, dtype="float64") /* ty=Tensor[(16, 7, 5), float64] */;
  %357 = shape_of(%355, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(%355, dtype="float64") /* ty=Tensor[(16, 7, 5), float64] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %360 = cast(%var_6800, dtype="float64") /* ty=Tensor[(165), float64] */;
  %361 = cast(%var_6801, dtype="float32") /* ty=Tensor[(288), float32] */;
  %362 = reshape(%360, newshape=[11, 15, 1]) /* ty=Tensor[(11, 15, 1), float64] */;
  %363 = reshape(%361, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %364 = @func_2121(%362, %363) /* ty=(Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), bool], Tensor[(15, 3, 16), int32], Tensor[(45), int32], Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(11, 15, 720), bool]) */;
  %365 = bitwise_or(%351, %352) /* ty=Tensor[(16, 7, 5), uint64] */;
  %366 = mod(%358, %359) /* ty=Tensor[(16, 7, 5), float64] */;
  %367 = %364.3;
  (%365, %366, %367, %var_6800, %var_6801)
}

def @func_677(%var_675: Tensor[(252), float64]) -> (Tensor[(10, 4, 7), float64], Tensor[(6, 7, 6), float64], Tensor[(252), float64]) {
  %368 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 4, 7), float64] */, dtype="float64") /* ty=Tensor[(10, 4, 7), float64] */;
  %369 = cast(%var_675, dtype="float64") /* ty=Tensor[(252), float64] */;
  %370 = reshape(%369, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), float64] */;
  %371 = atanh(%368) /* ty=Tensor[(10, 4, 7), float64] */;
  %372 = @func_189(%370) /* ty=Tensor[(6, 7, 6), float64] */;
  (%371, %372, %var_675)
}

def @func_743(%var_732: Tensor[(15, 9, 13), float32], %var_733: Tensor[(15, 9, 13), float32], %var_741: Tensor[(1408), int8]) -> (Tensor[(15, 9, 13), float32], Tensor[(11, 8, 16), int8], Tensor[(1408), int8]) {
  %373 = cast(%var_733, dtype="float32") /* ty=Tensor[(15, 9, 13), float32] */;
  %374 = shape_of(%var_732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%var_732, dtype="float32") /* ty=Tensor[(15, 9, 13), float32] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %377 = cast(%var_741, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %378 = cast(%var_741, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %379 = cast(%var_741, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %380 = reshape(%377, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %381 = reshape(%378, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %382 = reshape(%379, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %383 = @func_421(%380, %381, %382) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), uint32]) */;
  %384 = subtract(%375, %376) /* ty=Tensor[(15, 9, 13), float32] */;
  %385 = %383.0;
  (%384, %385, %var_741)
}

def @func_2259(%var_2241: Tensor[(14, 10, 11), float64], %var_2255: Tensor[(45), int32]) -> (Tensor[(14, 10, 11), float64], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(1, 720), int32], uint32, Tensor[(45), int32], Tensor[(60, 12), int32]) {
  %386 = cast(%var_2241, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
  %387 = cast(meta[relay.Constant][36] /* ty=Tensor[(351), float64] */, dtype="float64") /* ty=Tensor[(351), float64] */;
  %388 = reshape(%387, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float64] */;
  %389 = @func_493(%388) /* ty=(Tensor[(3, 13, 9), bool],) */;
  %390 = cast(meta[relay.Constant][37] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %391 = cast(%var_2255, dtype="int32") /* ty=Tensor[(45), int32] */;
  %392 = cast(meta[relay.Constant][38] /* ty=Tensor[(60, 12), int32] */, dtype="int32") /* ty=Tensor[(60, 12), int32] */;
  %393 = reshape(%390, newshape=[]) /* ty=uint32 */;
  %394 = reshape(%391, newshape=[15, 3]) /* ty=Tensor[(15, 3), int32] */;
  %395 = reshape(%392, newshape=[1, 720]) /* ty=Tensor[(1, 720), int32] */;
  %396 = @func_1067(%393, %394, %395) /* ty=(Tensor[(3, 13, 11), float32], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(15, 3, 16), int32], Tensor[(15, 3), int32], Tensor[(1, 720), int32]) */;
  %397 = cos(%386) /* ty=Tensor[(14, 10, 11), float64] */;
  %398 = %389.0;
  %399 = %396.5;
  (%397, %398, meta[relay.Constant][36] /* ty=Tensor[(351), float64] */, %399, meta[relay.Constant][37] /* ty=uint32 */, %var_2255, meta[relay.Constant][38] /* ty=Tensor[(60, 12), int32] */)
}

def @func_765(%var_756: Tensor[(15, 3, 1), int32], %var_757: Tensor[(15, 3, 16), int32]) -> (Tensor[(15, 3, 16), int32],) {
  %400 = cast(%var_756, dtype="int32") /* ty=Tensor[(15, 3, 1), int32] */;
  %401 = cast(%var_757, dtype="int32") /* ty=Tensor[(15, 3, 16), int32] */;
  %402 = left_shift(%400, %401) /* ty=Tensor[(15, 3, 16), int32] */;
  (%402,)
}

def @func_3724(%var_3720: Tensor[(4, 6, 5), float64]) -> (Tensor[(4, 6, 5), float64],) {
  %403 = cast(%var_3720, dtype="float64") /* ty=Tensor[(4, 6, 5), float64] */;
  %404 = rsqrt(%403) /* ty=Tensor[(4, 6, 5), float64] */;
  (%404,)
}

def @func_4647(%var_4633: Tensor[(288), float32]) -> (Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(10, 1, 4), float32]) {
  %405 = cast(%var_4633, dtype="float32") /* ty=Tensor[(288), float32] */;
  %406 = reshape(%405, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), float32] */;
  %407 = @func_1645(%406) /* ty=(Tensor[(8, 6, 6), float64],) */;
  %408 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 1, 4), float32] */, dtype="float32") /* ty=Tensor[(10, 1, 4), float32] */;
  %409 = erf(%408) /* ty=Tensor[(10, 1, 4), float32] */;
  %410 = cast(%409, dtype="float32") /* ty=Tensor[(10, 1, 4), float32] */;
  %411 = %407.0;
  %412 = asin(%410) /* ty=Tensor[(10, 1, 4), float32] */;
  (%411, %var_4633, %412)
}

def @func_4580(%var_4562: Tensor[(10, 6, 14), bool], %var_4563: Tensor[(10, 6, 14), bool], %var_4570: uint32, %var_4572: Tensor[(720), int32]) -> (Tensor[(10, 6, 14), bool], Tensor[(15, 3, 16), int32], uint32, Tensor[(45), int32], Tensor[(720), int32]) {
  %413 = cast(%var_4563, dtype="bool") /* ty=Tensor[(10, 6, 14), bool] */;
  %414 = shape_of(%var_4562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%var_4562, dtype="bool") /* ty=Tensor[(10, 6, 14), bool] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %417 = cast(%var_4570, dtype="uint32") /* ty=uint32 */;
  %418 = cast(meta[relay.Constant][40] /* ty=Tensor[(45), int32] */, dtype="int32") /* ty=Tensor[(45), int32] */;
  %419 = cast(%var_4572, dtype="int32") /* ty=Tensor[(720), int32] */;
  %420 = reshape(%417, newshape=[]) /* ty=uint32 */;
  %421 = reshape(%418, newshape=[15, 3]) /* ty=Tensor[(15, 3), int32] */;
  %422 = reshape(%419, newshape=[1, 720]) /* ty=Tensor[(1, 720), int32] */;
  %423 = @func_1067(%420, %421, %422) /* ty=(Tensor[(3, 13, 11), float32], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(15, 3, 16), int32], Tensor[(15, 3), int32], Tensor[(1, 720), int32]) */;
  %424 = logical_and(%415, %416) /* ty=Tensor[(10, 6, 14), bool] */;
  %425 = %423.3;
  (%424, %425, %var_4570, meta[relay.Constant][40] /* ty=Tensor[(45), int32] */, %var_4572)
}

def @func_421(%var_392: Tensor[(11, 8, 16), int8], %var_393: Tensor[(11, 8, 16), int8], %var_414: Tensor[(11, 8, 16), int8]) -> (Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), uint32]) {
  %426 = cast(%var_393, dtype="int8") /* ty=Tensor[(11, 8, 16), int8] */;
  %427 = shape_of(%var_392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%var_392, dtype="int8") /* ty=Tensor[(11, 8, 16), int8] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %430 = cast(%var_414, dtype="uint32") /* ty=Tensor[(11, 8, 16), uint32] */;
  %431 = shape_of(%var_392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%var_392, dtype="uint32") /* ty=Tensor[(11, 8, 16), uint32] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %434 = logical_xor(%428, %429) /* ty=Tensor[(11, 8, 16), int8] */;
  %435 = right_shift(%432, %433) /* ty=Tensor[(11, 8, 16), uint32] */;
  (%434, %435)
}

def @func_4966(%var_4929: Tensor[(7, 5, 4), int32], %var_4930: Tensor[(7, 5, 4), int32], %var_4959: Tensor[(1755), float32]) -> (Tensor[(7, 5, 4), int32], Tensor[(1755), float32], Tensor[(30), int8], Tensor[(480), int8], Tensor[(1755), float32]) {
  %436 = cast(%var_4930, dtype="int32") /* ty=Tensor[(7, 5, 4), int32] */;
  %437 = shape_of(%var_4929, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%var_4929, dtype="int32") /* ty=Tensor[(7, 5, 4), int32] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %440 = cast(meta[relay.Constant][41] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %441 = cast(meta[relay.Constant][42] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %442 = cast(%var_4959, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %443 = reshape(%440, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), int8] */;
  %444 = reshape(%441, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int8] */;
  %445 = reshape(%442, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %446 = @func_1326(%443, %444, %445) /* ty=(Tensor[(16, 5, 6), int8], Tensor[(11, 8, 16), int8], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(16, 5, 6), uint64]) */;
  %447 = bitwise_and(%438, %439) /* ty=Tensor[(7, 5, 4), int32] */;
  %448 = %446.2;
  (%447, %448, meta[relay.Constant][41] /* ty=Tensor[(30), int8] */, meta[relay.Constant][42] /* ty=Tensor[(480), int8] */, %var_4959)
}

def @func_549(%var_538: Tensor[(11, 2, 10), uint8], %var_539: Tensor[(11, 2, 10), uint8]) -> (Tensor[(11, 2, 10), bool],) {
  %449 = cast(%var_539, dtype="bool") /* ty=Tensor[(11, 2, 10), bool] */;
  %450 = shape_of(%var_538, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(%var_538, dtype="bool") /* ty=Tensor[(11, 2, 10), bool] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %453 = greater(%451, %452) /* ty=Tensor[(11, 2, 10), bool] */;
  (%453,)
}

def @func_1793(%var_1737: Tensor[(4, 4, 8), float64], %var_1789: Tensor[(4, 4, 8), float32]) -> (Tensor[(4, 4, 8), float64], Tensor[(4, 4, 8), bool]) {
  %454 = cast(-7.72429f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %455 = cast(%var_1737, dtype="float64") /* ty=Tensor[(4, 4, 8), float64] */;
  %456 = cast(%var_1737, dtype="float32") /* ty=Tensor[(4, 4, 8), float32] */;
  %457 = log10(%456) /* ty=Tensor[(4, 4, 8), float32] */;
  %458 = cast(%457, dtype="float32") /* ty=Tensor[(4, 4, 8), float32] */;
  %459 = exp(%458) /* ty=Tensor[(4, 4, 8), float32] */;
  %460 = cast(%var_1789, dtype="bool") /* ty=Tensor[(4, 4, 8), bool] */;
  %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%459, dtype="bool") /* ty=Tensor[(4, 4, 8), bool] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %464 = mod(%454, %455) /* ty=Tensor[(4, 4, 8), float64] */;
  %465 = greater_equal(%462, %463) /* ty=Tensor[(4, 4, 8), bool] */;
  (%464, %465)
}

def @func_8842(%var_8822: Tensor[(9, 2, 11), float32], %var_8831: Tensor[(196), float64], %var_8832: Tensor[(1440), int32], %var_8833: Tensor[(90), float64], %var_8839: Tensor[(800), float64]) -> (Tensor[(9, 2, 11), float32], Tensor[(1440), int32], Tensor[(196), float64], Tensor[(1440), int32], Tensor[(90), float64], Tensor[(14, 11, 8), int64], Tensor[(1232), int16], Tensor[(800), float64], Tensor[(288), float32]) {
  %466 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 2, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 2, 11), float32] */;
  %467 = shape_of(%var_8822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%var_8822, dtype="float32") /* ty=Tensor[(9, 2, 11), float32] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %470 = cast(%var_8831, dtype="float64") /* ty=Tensor[(196), float64] */;
  %471 = cast(%var_8831, dtype="float64") /* ty=Tensor[(196), float64] */;
  %472 = cast(%var_8832, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %473 = cast(%var_8833, dtype="float64") /* ty=Tensor[(90), float64] */;
  %474 = reshape(%470, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), float64] */;
  %475 = reshape(%471, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), float64] */;
  %476 = reshape(%472, newshape=[1440]) /* ty=Tensor[(1440), int32] */;
  %477 = reshape(%473, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %478 = @func_7405(%474, %475, %476, %477) /* ty=(Tensor[(4, 7, 7), float64], Tensor[(800), float64], Tensor[(1440), int32], Tensor[(6, ?, 15), bool]) */;
  %479 = cast(meta[relay.Constant][44] /* ty=Tensor[(1232), int16] */, dtype="int16") /* ty=Tensor[(1232), int16] */;
  %480 = cast(meta[relay.Constant][44] /* ty=Tensor[(1232), int16] */, dtype="int16") /* ty=Tensor[(1232), int16] */;
  %481 = cast(%var_8839, dtype="float64") /* ty=Tensor[(800), float64] */;
  %482 = cast(meta[relay.Constant][45] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %483 = reshape(%479, newshape=[14, 11, 8]) /* ty=Tensor[(14, 11, 8), int16] */;
  %484 = reshape(%480, newshape=[14, 11, 8]) /* ty=Tensor[(14, 11, 8), int16] */;
  %485 = reshape(%481, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %486 = reshape(%482, newshape=[8, 36]) /* ty=Tensor[(8, 36), float32] */;
  %487 = @func_8658(%483, %484, %485, %486) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(14, 11, 8), int64], Tensor[(288), float32], Tensor[(8, 36), float32], Tensor[(14, 11, 8), float32], Tensor[(15, 3, 11), bool], Tensor[(495), float64]) */;
  %488 = floor_mod(%468, %469) /* ty=Tensor[(9, 2, 11), float32] */;
  %489 = %478.2;
  %490 = %487.3;
  (%488, %489, %var_8831, %var_8832, %var_8833, %490, meta[relay.Constant][44] /* ty=Tensor[(1232), int16] */, %var_8839, meta[relay.Constant][45] /* ty=Tensor[(288), float32] */)
}

def @func_493(%var_480: Tensor[(3, 13, 9), float64]) -> (Tensor[(3, 13, 9), bool],) {
  %491 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 13, 9), float64] */, dtype="bool") /* ty=Tensor[(3, 13, 9), bool] */;
  %492 = shape_of(%var_480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(%var_480, dtype="bool") /* ty=Tensor[(3, 13, 9), bool] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %495 = not_equal(%493, %494) /* ty=Tensor[(3, 13, 9), bool] */;
  (%495,)
}

def @func_6120(%var_6107: Tensor[(15, 7, 4), uint16]) -> Tensor[(15, 7, 4), bool] {
  %496 = cast(meta[relay.Constant][47] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %497 = cast(%var_6107, dtype="bool") /* ty=Tensor[(15, 7, 4), bool] */;
  less(%496, %497) /* ty=Tensor[(15, 7, 4), bool] */
}

def @func_7405(%var_7378: Tensor[(4, 7, 7), float64], %var_7379: Tensor[(4, 7, 7), float64], %var_7387: Tensor[(1440), int32], %var_7393: Tensor[(90), float64]) -> (Tensor[(4, 7, 7), float64], Tensor[(800), float64], Tensor[(1440), int32], Tensor[(6, ?, 15), bool]) {
  %498 = cast(%var_7379, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %499 = shape_of(%var_7378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%var_7378, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %502 = cast(%var_7387, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %503 = cast(%var_7387, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %504 = reshape(%502, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
  %505 = reshape(%503, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
  %506 = @func_5536(%504, %505) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(10, 9, 16), float64], Tensor[(10, 9, 16), float64]) */;
  %507 = cast(%var_7393, dtype="float64") /* ty=Tensor[(90), float64] */;
  %508 = reshape(%507, newshape=[6, 1, 15]) /* ty=Tensor[(6, 1, 15), float64] */;
  %509 = @func_6478(%508) /* ty=(Tensor[(6, 1, 15), float64],) */;
  %510 = %509.0;
  %511 = cast(%var_7393, dtype="bool") /* ty=Tensor[(90), bool] */;
  %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%510, dtype="bool") /* ty=Tensor[(6, 1, 15), bool] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %515 = subtract(%500, %501) /* ty=Tensor[(4, 7, 7), float64] */;
  %516 = %506.1;
  %517 = greater_equal(%513, %514) /* ty=Tensor[(6, ?, 15), bool] */;
  (%515, %516, %var_7387, %517)
}

def @func_7867(%var_7860: Tensor[(15, 3, 11), float64]) -> Tensor[(15, 3, 11), bool] {
  %518 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 3, 11), float64] */, dtype="bool") /* ty=Tensor[(15, 3, 11), bool] */;
  %519 = shape_of(%var_7860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%var_7860, dtype="bool") /* ty=Tensor[(15, 3, 11), bool] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%520, %521) /* ty=Tensor[(15, 3, 11), bool] */
}

def @func_4854(%var_4830: Tensor[(16, 11, 8), float32]) -> (Tensor[(16, 11, 8), bool],) {
  %522 = cast(%var_4830, dtype="float32") /* ty=Tensor[(16, 11, 8), float32] */;
  %523 = sin(%522) /* ty=Tensor[(16, 11, 8), float32] */;
  %524 = cast(%var_4830, dtype="bool") /* ty=Tensor[(16, 11, 8), bool] */;
  %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%523, dtype="bool") /* ty=Tensor[(16, 11, 8), bool] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %528 = equal(%526, %527) /* ty=Tensor[(16, 11, 8), bool] */;
  (%528,)
}

def @func_8990(%var_8950: Tensor[(15, 4, 11), float32], %var_8954: Tensor[(1440, 1), int32], %var_8985: Tensor[(90), float32]) -> (Tensor[(15, 4, 11), float32], Tensor[(10, 9, 16), float64], Tensor[(1440, 1), int32], Tensor[(15, 4, 11), float64], Tensor[(1, 5, 15), float32], Tensor[(75), float32], Tensor[(9, 2, 5), float32], Tensor[(90), float32]) {
  %529 = cast(%var_8950, dtype="float32") /* ty=Tensor[(15, 4, 11), float32] */;
  %530 = cast(%var_8954, dtype="int32") /* ty=Tensor[(1440, 1), int32] */;
  %531 = cast(%var_8954, dtype="int32") /* ty=Tensor[(1440, 1), int32] */;
  %532 = reshape(%530, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
  %533 = reshape(%531, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
  %534 = @func_5536(%532, %533) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(10, 9, 16), float64], Tensor[(10, 9, 16), float64]) */;
  %535 = cast(%var_8950, dtype="float64") /* ty=Tensor[(15, 4, 11), float64] */;
  %536 = cast(meta[relay.Constant][49] /* ty=Tensor[(75), float32] */, dtype="float32") /* ty=Tensor[(75), float32] */;
  %537 = reshape(%536, newshape=[1, 5, 15]) /* ty=Tensor[(1, 5, 15), float32] */;
  %538 = @func_8880(%537) /* ty=(Tensor[(1, 5, 15), float32],) */;
  %539 = cast(%var_8985, dtype="float32") /* ty=Tensor[(90), float32] */;
  %540 = reshape(%539, newshape=[9, 2, 5]) /* ty=Tensor[(9, 2, 5), float32] */;
  %541 = atanh(%529) /* ty=Tensor[(15, 4, 11), float32] */;
  %542 = %534.4;
  %543 = sin(%535) /* ty=Tensor[(15, 4, 11), float64] */;
  %544 = %538.0;
  %545 = @func_4508(%540) /* ty=Tensor[(9, 2, 5), float32] */;
  (%541, %542, %var_8954, %543, %544, meta[relay.Constant][49] /* ty=Tensor[(75), float32] */, %545, %var_8985)
}

def @func_4782(%var_4778: Tensor[(5, 6, 11), float64]) -> (Tensor[(5, 6, 11), float64],) {
  %546 = cast(%var_4778, dtype="float64") /* ty=Tensor[(5, 6, 11), float64] */;
  %547 = acosh(%546) /* ty=Tensor[(5, 6, 11), float64] */;
  (%547,)
}

def @func_9685(%var_9606: Tensor[(15, 4, 7), uint32], %var_9656: Tensor[(1440), int32]) -> (Tensor[(15, 4, 7), bool], Tensor[(15, 4, 7), float32], Tensor[(12, 9, 16), float32], Tensor[(1440), int32], Tensor[(1728), float32], Tensor[(15, 3, 11), bool], Tensor[(495), float64]) {
  %548 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 1, 7), uint32] */, dtype="uint32") /* ty=Tensor[(15, 1, 7), uint32] */;
  %549 = cast(%var_9606, dtype="uint32") /* ty=Tensor[(15, 4, 7), uint32] */;
  %550 = bitwise_xor(%548, %549) /* ty=Tensor[(15, 4, 7), uint32] */;
  %551 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 1, 7), uint32] */, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %552 = cast(%550, dtype="bool") /* ty=Tensor[(15, 4, 7), bool] */;
  %553 = cast(%550, dtype="float32") /* ty=Tensor[(15, 4, 7), float32] */;
  %554 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 1, 7), uint32] */, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
  %555 = cast(%var_9656, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %556 = cast(%var_9656, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %557 = reshape(%555, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
  %558 = reshape(%556, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
  %559 = @func_5536(%557, %558) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(10, 9, 16), float64], Tensor[(10, 9, 16), float64]) */;
  %560 = cast(%var_9656, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %561 = cast(%var_9656, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %562 = reshape(%560, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
  %563 = reshape(%561, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
  %564 = @func_5536(%562, %563) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(10, 9, 16), float64], Tensor[(10, 9, 16), float64]) */;
  %565 = cast(meta[relay.Constant][51] /* ty=Tensor[(495), float64] */, dtype="float64") /* ty=Tensor[(495), float64] */;
  %566 = reshape(%565, newshape=[15, 3, 11]) /* ty=Tensor[(15, 3, 11), float64] */;
  %567 = greater_equal(%551, %552) /* ty=Tensor[(15, 4, 7), bool] */;
  %568 = divide(%553, %554) /* ty=Tensor[(15, 4, 7), float32] */;
  %569 = %559.0;
  %570 = %564.2;
  %571 = @func_7867(%566) /* ty=Tensor[(15, 3, 11), bool] */;
  (%567, %568, %569, %var_9656, %570, %571, meta[relay.Constant][51] /* ty=Tensor[(495), float64] */)
}

def @func_9433(%var_9420: Tensor[(5, 16, 7), uint16], %var_9421: Tensor[(5, 16, 7), uint16]) -> Tensor[(5, 16, 7), uint16] {
  %572 = cast(%var_9421, dtype="uint16") /* ty=Tensor[(5, 16, 7), uint16] */;
  %573 = shape_of(%var_9420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_9420, dtype="uint16") /* ty=Tensor[(5, 16, 7), uint16] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%574, %575) /* ty=Tensor[(5, 16, 7), uint16] */
}

def @main(%var_10101: Tensor[(11, 5, 8), float64], %var_10117: Tensor[(120), float64]) -> (Tensor[(4, 6, 5), float64], Tensor[(120), float64], Tensor[(1755), float32], Tensor[(30), int8], Tensor[(480), int8], Tensor[(585, 3), float32], Tensor[(11, 5, 8), float32]) {
  %576 = cast(%var_10117, dtype="float64") /* ty=Tensor[(120), float64] */;
  %577 = reshape(%576, newshape=[4, 6, 5]) /* ty=Tensor[(4, 6, 5), float64] */;
  %578 = @func_3724(%577) /* ty=(Tensor[(4, 6, 5), float64],) */;
  %579 = cast(meta[relay.Constant][52] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %580 = cast(meta[relay.Constant][53] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %581 = cast(meta[relay.Constant][54] /* ty=Tensor[(585, 3), float32] */, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %582 = reshape(%579, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), int8] */;
  %583 = reshape(%580, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int8] */;
  %584 = reshape(%581, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %585 = @func_1326(%582, %583, %584) /* ty=(Tensor[(16, 5, 6), int8], Tensor[(11, 8, 16), int8], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(16, 5, 6), uint64]) */;
  %586 = cast(%var_10101, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
  %587 = asinh(%586) /* ty=Tensor[(11, 5, 8), float64] */;
  %588 = cast(%587, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
  %589 = sin(%588) /* ty=Tensor[(11, 5, 8), float64] */;
  %590 = cast(%var_10101, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%589, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %594 = %578.0;
  %595 = %585.2;
  %596 = divide(%592, %593) /* ty=Tensor[(11, 5, 8), float32] */;
  (%594, %var_10117, %595, meta[relay.Constant][52] /* ty=Tensor[(30), int8] */, meta[relay.Constant][53] /* ty=Tensor[(480), int8] */, meta[relay.Constant][54] /* ty=Tensor[(585, 3), float32] */, %596)
}

def @func_3820(%var_3798: Tensor[(9, 13, 1), float64]) -> Tensor[(9, 13, ?), bool] {
  %597 = cast(%var_3798, dtype="float64") /* ty=Tensor[(9, 13, 1), float64] */;
  %598 = sinh(%597) /* ty=Tensor[(9, 13, 1), float64] */;
  %599 = cast(%598, dtype="float64") /* ty=Tensor[(9, 13, 1), float64] */;
  %600 = sqrt(%599) /* ty=Tensor[(9, 13, 1), float64] */;
  %601 = cast(%598, dtype="bool") /* ty=Tensor[(9, 13, 1), bool] */;
  %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%600, dtype="bool") /* ty=Tensor[(9, 13, 1), bool] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%603, %604) /* ty=Tensor[(9, 13, ?), bool] */
}

def @func_6405(%var_6358: Tensor[(6, 2, 1), float32]) -> (Tensor[(6, 2, 1), float64], Tensor[(6, 7, 6), float64], Tensor[(3, 84), float64]) {
  %605 = cast(%var_6358, dtype="float32") /* ty=Tensor[(6, 2, 1), float32] */;
  %606 = tan(%605) /* ty=Tensor[(6, 2, 1), float32] */;
  %607 = cast(%606, dtype="float64") /* ty=Tensor[(6, 2, 1), float64] */;
  %608 = sqrt(%607) /* ty=Tensor[(6, 2, 1), float64] */;
  %609 = cast(%608, dtype="float32") /* ty=Tensor[(6, 2, 1), float32] */;
  %610 = log(%609) /* ty=Tensor[(6, 2, 1), float32] */;
  %611 = cast(%610, dtype="float64") /* ty=Tensor[(6, 2, 1), float64] */;
  %612 = cast(meta[relay.Constant][55] /* ty=Tensor[(3, 84), float64] */, dtype="float64") /* ty=Tensor[(3, 84), float64] */;
  %613 = reshape(%612, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), float64] */;
  %614 = asinh(%611) /* ty=Tensor[(6, 2, 1), float64] */;
  %615 = @func_189(%613) /* ty=Tensor[(6, 7, 6), float64] */;
  (%614, %615, meta[relay.Constant][55] /* ty=Tensor[(3, 84), float64] */)
}

def @func_8112(%var_8097: Tensor[(8, 12, 8), int32]) -> (Tensor[(8, 12, 8), bool], Tensor[(4, 6, 5), float64], Tensor[(120), float64]) {
  %616 = cast(9 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %617 = cast(%var_8097, dtype="bool") /* ty=Tensor[(8, 12, 8), bool] */;
  %618 = cast(meta[relay.Constant][56] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %619 = reshape(%618, newshape=[4, 6, 5]) /* ty=Tensor[(4, 6, 5), float64] */;
  %620 = @func_3724(%619) /* ty=(Tensor[(4, 6, 5), float64],) */;
  %621 = less_equal(%616, %617) /* ty=Tensor[(8, 12, 8), bool] */;
  %622 = %620.0;
  (%621, %622, meta[relay.Constant][56] /* ty=Tensor[(120), float64] */)
}

def @func_189(%var_186: Tensor[(6, 7, 6), float64]) -> Tensor[(6, 7, 6), float64] {
  %623 = cast(%var_186, dtype="float64") /* ty=Tensor[(6, 7, 6), float64] */;
  cos(%623) /* ty=Tensor[(6, 7, 6), float64] */
}

def @func_4114(%var_4109: Tensor[(15, 13, 8), float32], %var_4110: Tensor[(15, 13, 8), float32]) -> Tensor[(15, 13, 8), bool] {
  %624 = cast(%var_4110, dtype="bool") /* ty=Tensor[(15, 13, 8), bool] */;
  %625 = shape_of(%var_4109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%var_4109, dtype="bool") /* ty=Tensor[(15, 13, 8), bool] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%626, %627) /* ty=Tensor[(15, 13, 8), bool] */
}

def @func_6478(%var_6462: Tensor[(6, 1, 15), float64]) -> (Tensor[(6, 1, 15), float64],) {
  %628 = cast(%var_6462, dtype="float64") /* ty=Tensor[(6, 1, 15), float64] */;
  %629 = rsqrt(%628) /* ty=Tensor[(6, 1, 15), float64] */;
  %630 = cast(%629, dtype="float64") /* ty=Tensor[(6, 1, 15), float64] */;
  %631 = atanh(%630) /* ty=Tensor[(6, 1, 15), float64] */;
  (%631,)
}

def @func_3841(%var_3835: Tensor[(10, 13, 9), float32], %var_3836: Tensor[(10, 13, 9), float32]) -> Tensor[(10, 13, 9), float32] {
  %632 = cast(%var_3836, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %633 = shape_of(%var_3835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(%var_3835, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  maximum(%634, %635) /* ty=Tensor[(10, 13, 9), float32] */
}

def @func_8579(%var_8563: Tensor[(4, 7, 2), float64], %var_8568: Tensor[(420), uint16]) -> (Tensor[(4, 7, 2), float64], Tensor[(15, 7, 4), bool], Tensor[(420), uint16]) {
  %636 = cast(%var_8563, dtype="float64") /* ty=Tensor[(4, 7, 2), float64] */;
  %637 = cast(%var_8568, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %638 = reshape(%637, newshape=[15, 7, 4]) /* ty=Tensor[(15, 7, 4), uint16] */;
  %639 = exp(%636) /* ty=Tensor[(4, 7, 2), float64] */;
  %640 = @func_6120(%638) /* ty=Tensor[(15, 7, 4), bool] */;
  (%639, %640, %var_8568)
}

def @func_5056(%var_5044: Tensor[(10, 8, 10), float64], %var_5051: Tensor[(1728), float32]) -> (Tensor[(10, 8, 10), float64], Tensor[(12, 9, 16), float32], Tensor[(1728), float32]) {
  %641 = cast(%var_5044, dtype="float64") /* ty=Tensor[(10, 8, 10), float64] */;
  %642 = cast(%var_5051, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %643 = reshape(%642, newshape=[12, 9, 16]) /* ty=Tensor[(12, 9, 16), float32] */;
  %644 = erf(%641) /* ty=Tensor[(10, 8, 10), float64] */;
  %645 = @func_4344(%643) /* ty=Tensor[(12, 9, 16), float32] */;
  (%644, %645, %var_5051)
}

def @func_9401(%var_9389: Tensor[(15, 2, 5), float32], %var_9390: Tensor[(15, 2, 5), float32]) -> Tensor[(15, 2, 5), bool] {
  %646 = cast(%var_9390, dtype="bool") /* ty=Tensor[(15, 2, 5), bool] */;
  %647 = shape_of(%var_9389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%var_9389, dtype="bool") /* ty=Tensor[(15, 2, 5), bool] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%648, %649) /* ty=Tensor[(15, 2, 5), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4117(%var_4115: Tensor[(15, 13, 8), float32], %var_4116: Tensor[(15, 13, 8), float32]) -> Tensor[(15, 13, 8), bool] {
  %4 = fn (%var_4109: Tensor[(15, 13, 8), float32], %var_4110: Tensor[(15, 13, 8), float32]) -> Tensor[(15, 13, 8), bool] {
    %0 = cast(%var_4110, dtype="bool") /* ty=Tensor[(15, 13, 8), bool] */;
    %1 = shape_of(%var_4109, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(%var_4109, dtype="bool") /* ty=Tensor[(15, 13, 8), bool] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%2, %3) /* ty=Tensor[(15, 13, 8), bool] */
  };
  %4(%var_4115, %var_4116) /* ty=Tensor[(15, 13, 8), bool] */
}

def @func_4511(%var_4509: Tensor[(9, 2, 5), float32]) -> Tensor[(9, 2, 5), float32] {
  @func_4508(%var_4509) /* ty=Tensor[(9, 2, 5), float32] */
}

def @func_7319(%var_7313: Tensor[(16, 8, 16), int8], %var_7314: Tensor[(16, 8, 16), int8], %var_7315: Tensor[(2496), int8], %var_7316: Tensor[(252), float64], %var_7317: Tensor[(2, 144), float32], %var_7318: int32) -> (Tensor[(16, 8, 16), bool], Tensor[(12, 13, 16), int8], Tensor[(2496), int8], Tensor[(6, 7, 6), float64], Tensor[(252), float64], Tensor[(16, 7, 5), float64], Tensor[(80), uint64], Tensor[(165), float64], Tensor[(2, 144), float32], Tensor[(1, 7), int32], int32, Tensor[(7, 1), int32]) {
  @func_7311(%var_7313, %var_7314, %var_7315, %var_7316, %var_7317, %var_7318) /* ty=(Tensor[(16, 8, 16), bool], Tensor[(12, 13, 16), int8], Tensor[(2496), int8], Tensor[(6, 7, 6), float64], Tensor[(252), float64], Tensor[(16, 7, 5), float64], Tensor[(80), uint64], Tensor[(165), float64], Tensor[(2, 144), float32], Tensor[(1, 7), int32], int32, Tensor[(7, 1), int32]) */
}

def @func_426(%var_423: Tensor[(11, 8, 16), int8], %var_424: Tensor[(11, 8, 16), int8], %var_425: Tensor[(11, 8, 16), int8]) -> (Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), uint32]) {
  @func_421(%var_423, %var_424, %var_425) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), uint32]) */
}

def @func_4971(%var_4968: Tensor[(7, 5, 4), int32], %var_4969: Tensor[(7, 5, 4), int32], %var_4970: Tensor[(1755), float32]) -> (Tensor[(7, 5, 4), int32], Tensor[(1755), float32], Tensor[(30), int8], Tensor[(480), int8], Tensor[(1755), float32]) {
  @func_4966(%var_4968, %var_4969, %var_4970) /* ty=(Tensor[(7, 5, 4), int32], Tensor[(1755), float32], Tensor[(30), int8], Tensor[(480), int8], Tensor[(1755), float32]) */
}

def @func_189(%var_186: Tensor[(6, 7, 6), float64]) -> Tensor[(6, 7, 6), float64] {
  %5 = cast(%var_186, dtype="float64") /* ty=Tensor[(6, 7, 6), float64] */;
  cos(%5) /* ty=Tensor[(6, 7, 6), float64] */
}

def @func_680(%var_678: Tensor[(252), float64]) -> (Tensor[(10, 4, 7), float64], Tensor[(6, 7, 6), float64], Tensor[(252), float64]) {
  @func_677(%var_678) /* ty=(Tensor[(10, 4, 7), float64], Tensor[(6, 7, 6), float64], Tensor[(252), float64]) */
}

def @func_7579(%var_7520: Tensor[(2, 11, 15), uint64], %var_7521: Tensor[(2, 11, 15), uint64], %var_7527: Tensor[(1755), float32], %var_7537: Tensor[(1408), int8], %var_7563: Tensor[(252), float64], %var_7566: Tensor[(120), float64]) -> (Tensor[(2, 11, 15), bool], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(1408), uint16], Tensor[(2, 11, 15), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(4, 6, 5), float64], Tensor[(120), float64], uint32, Tensor[(1540), float64], Tensor[(5, 9), int32]) {
  %6 = cast(%var_7521, dtype="bool") /* ty=Tensor[(2, 11, 15), bool] */;
  %7 = shape_of(%var_7520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%var_7520, dtype="bool") /* ty=Tensor[(2, 11, 15), bool] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %10 = cast(%var_7527, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %11 = cast(%var_7527, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %13 = reshape(%10, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %14 = reshape(%11, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %15 = reshape(%12, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %16 = @func_743(%13, %14, %15) /* ty=(Tensor[(15, 9, 13), float32], Tensor[(11, 8, 16), int8], Tensor[(1408), int8]) */;
  %17 = %16.2;
  %18 = cast(%var_7537, dtype="uint16") /* ty=Tensor[(1408), uint16] */;
  %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(1), int32] */;
  %20 = cast(%17, dtype="uint16") /* ty=Tensor[(1408), uint16] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %22 = cast(%var_7520, dtype="float64") /* ty=Tensor[(2, 11, 15), float64] */;
  %23 = cast(%var_7563, dtype="float64") /* ty=Tensor[(252), float64] */;
  %24 = reshape(%23, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %25 = @func_677(%24) /* ty=(Tensor[(10, 4, 7), float64], Tensor[(6, 7, 6), float64], Tensor[(252), float64]) */;
  %26 = cast(%var_7566, dtype="float64") /* ty=Tensor[(120), float64] */;
  %27 = reshape(%26, newshape=[4, 6, 5]) /* ty=Tensor[(4, 6, 5), float64] */;
  %28 = @func_3724(%27) /* ty=(Tensor[(4, 6, 5), float64],) */;
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 9), int32] */, dtype="int32") /* ty=Tensor[(5, 9), int32] */;
  %31 = reshape(%29, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float64] */;
  %32 = reshape(%30, newshape=[45]) /* ty=Tensor[(45), int32] */;
  %33 = @func_2259(%31, %32) /* ty=(Tensor[(14, 10, 11), float64], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(1, 720), int32], uint32, Tensor[(45), int32], Tensor[(60, 12), int32]) */;
  %34 = not_equal(%8, %9) /* ty=Tensor[(2, 11, 15), bool] */;
  %35 = bitwise_and(%20, %21) /* ty=Tensor[(1408), uint16] */;
  %36 = sigmoid(%22) /* ty=Tensor[(2, 11, 15), float64] */;
  %37 = %25.2;
  %38 = %28.0;
  %39 = %33.4;
  (%34, %var_7527, meta[relay.Constant][0] /* ty=Tensor[(1408), int8] */, %35, %36, %37, %var_7563, %38, %var_7566, %39, meta[relay.Constant][1] /* ty=Tensor[(1540), float64] */, meta[relay.Constant][2] /* ty=Tensor[(5, 9), int32] */)
}

def @func_6407(%var_6406: Tensor[(6, 2, 1), float32]) -> (Tensor[(6, 2, 1), float64], Tensor[(6, 7, 6), float64], Tensor[(3, 84), float64]) {
  %51 = fn (%var_6358: Tensor[(6, 2, 1), float32]) -> (Tensor[(6, 2, 1), float64], Tensor[(6, 7, 6), float64], Tensor[(3, 84), float64]) {
    %40 = cast(%var_6358, dtype="float32") /* ty=Tensor[(6, 2, 1), float32] */;
    %41 = tan(%40) /* ty=Tensor[(6, 2, 1), float32] */;
    %42 = cast(%41, dtype="float64") /* ty=Tensor[(6, 2, 1), float64] */;
    %43 = sqrt(%42) /* ty=Tensor[(6, 2, 1), float64] */;
    %44 = cast(%43, dtype="float32") /* ty=Tensor[(6, 2, 1), float32] */;
    %45 = log(%44) /* ty=Tensor[(6, 2, 1), float32] */;
    %46 = cast(%45, dtype="float64") /* ty=Tensor[(6, 2, 1), float64] */;
    %47 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 84), float64] */, dtype="float64") /* ty=Tensor[(3, 84), float64] */;
    %48 = reshape(%47, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), float64] */;
    %49 = asinh(%46) /* ty=Tensor[(6, 2, 1), float64] */;
    %50 = @func_189(%48) /* ty=Tensor[(6, 7, 6), float64] */;
    (%49, %50, meta[relay.Constant][3] /* ty=Tensor[(3, 84), float64] */)
  };
  %51(%var_6406) /* ty=(Tensor[(6, 2, 1), float64], Tensor[(6, 7, 6), float64], Tensor[(3, 84), float64]) */
}

def @func_4580(%var_4562: Tensor[(10, 6, 14), bool], %var_4563: Tensor[(10, 6, 14), bool], %var_4570: uint32, %var_4572: Tensor[(720), int32]) -> (Tensor[(10, 6, 14), bool], Tensor[(15, 3, 16), int32], uint32, Tensor[(45), int32], Tensor[(720), int32]) {
  %52 = cast(%var_4563, dtype="bool") /* ty=Tensor[(10, 6, 14), bool] */;
  %53 = shape_of(%var_4562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(%var_4562, dtype="bool") /* ty=Tensor[(10, 6, 14), bool] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %56 = cast(%var_4570, dtype="uint32") /* ty=uint32 */;
  %57 = cast(meta[relay.Constant][4] /* ty=Tensor[(45), int32] */, dtype="int32") /* ty=Tensor[(45), int32] */;
  %58 = cast(%var_4572, dtype="int32") /* ty=Tensor[(720), int32] */;
  %59 = reshape(%56, newshape=[]) /* ty=uint32 */;
  %60 = reshape(%57, newshape=[15, 3]) /* ty=Tensor[(15, 3), int32] */;
  %61 = reshape(%58, newshape=[1, 720]) /* ty=Tensor[(1, 720), int32] */;
  %62 = @func_1067(%59, %60, %61) /* ty=(Tensor[(3, 13, 11), float32], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(15, 3, 16), int32], Tensor[(15, 3), int32], Tensor[(1, 720), int32]) */;
  %63 = logical_and(%54, %55) /* ty=Tensor[(10, 6, 14), bool] */;
  %64 = %62.3;
  (%63, %64, %var_4570, meta[relay.Constant][4] /* ty=Tensor[(45), int32] */, %var_4572)
}

def @func_192(%var_190: Tensor[(6, 7, 6), float64]) -> Tensor[(6, 7, 6), float64] {
  @func_189(%var_190) /* ty=Tensor[(6, 7, 6), float64] */
}

def @func_4647(%var_4633: Tensor[(288), float32]) -> (Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(10, 1, 4), float32]) {
  %65 = cast(%var_4633, dtype="float32") /* ty=Tensor[(288), float32] */;
  %66 = reshape(%65, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), float32] */;
  %67 = @func_1645(%66) /* ty=(Tensor[(8, 6, 6), float64],) */;
  %68 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 1, 4), float32] */, dtype="float32") /* ty=Tensor[(10, 1, 4), float32] */;
  %69 = erf(%68) /* ty=Tensor[(10, 1, 4), float32] */;
  %70 = cast(%69, dtype="float32") /* ty=Tensor[(10, 1, 4), float32] */;
  %71 = %67.0;
  %72 = asin(%70) /* ty=Tensor[(10, 1, 4), float32] */;
  (%71, %var_4633, %72)
}

def @func_7208(%var_7206: Tensor[(12, 13, 16), int8], %var_7207: Tensor[(12, 13, 16), int8]) -> (Tensor[(12, 13, 16), int8],) {
  %78 = fn (%var_7199: Tensor[(12, 13, 16), int8], %var_7200: Tensor[(12, 13, 16), int8]) -> (Tensor[(12, 13, 16), int8],) {
    %73 = cast(%var_7200, dtype="int8") /* ty=Tensor[(12, 13, 16), int8] */;
    %74 = shape_of(%var_7199, dtype="int32") /* ty=Tensor[(3), int32] */;
    %75 = cast(%var_7199, dtype="int8") /* ty=Tensor[(12, 13, 16), int8] */;
    %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %77 = bitwise_and(%75, %76) /* ty=Tensor[(12, 13, 16), int8] */;
    (%77,)
  };
  %78(%var_7206, %var_7207) /* ty=(Tensor[(12, 13, 16), int8],) */
}

def @func_1616(%var_1614: int32, %var_1615: Tensor[(1, 7), int32]) -> (Tensor[(1, 7), int32],) {
  @func_1612(%var_1614, %var_1615) /* ty=(Tensor[(1, 7), int32],) */
}

def @func_4586(%var_4582: Tensor[(10, 6, 14), bool], %var_4583: Tensor[(10, 6, 14), bool], %var_4584: uint32, %var_4585: Tensor[(720), int32]) -> (Tensor[(10, 6, 14), bool], Tensor[(15, 3, 16), int32], uint32, Tensor[(45), int32], Tensor[(720), int32]) {
  @func_4580(%var_4582, %var_4583, %var_4584, %var_4585) /* ty=(Tensor[(10, 6, 14), bool], Tensor[(15, 3, 16), int32], uint32, Tensor[(45), int32], Tensor[(720), int32]) */
}

def @func_1796(%var_1794: Tensor[(4, 4, 8), float64], %var_1795: Tensor[(4, 4, 8), float32]) -> (Tensor[(4, 4, 8), float64], Tensor[(4, 4, 8), bool]) {
  %91 = fn (%var_1737: Tensor[(4, 4, 8), float64], %var_1789: Tensor[(4, 4, 8), float32]) -> (Tensor[(4, 4, 8), float64], Tensor[(4, 4, 8), bool]) {
    %79 = cast(-7.72429f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %80 = cast(%var_1737, dtype="float64") /* ty=Tensor[(4, 4, 8), float64] */;
    %81 = cast(%var_1737, dtype="float32") /* ty=Tensor[(4, 4, 8), float32] */;
    %82 = log10(%81) /* ty=Tensor[(4, 4, 8), float32] */;
    %83 = cast(%82, dtype="float32") /* ty=Tensor[(4, 4, 8), float32] */;
    %84 = exp(%83) /* ty=Tensor[(4, 4, 8), float32] */;
    %85 = cast(%var_1789, dtype="bool") /* ty=Tensor[(4, 4, 8), bool] */;
    %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
    %87 = cast(%84, dtype="bool") /* ty=Tensor[(4, 4, 8), bool] */;
    %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %89 = mod(%79, %80) /* ty=Tensor[(4, 4, 8), float64] */;
    %90 = greater_equal(%87, %88) /* ty=Tensor[(4, 4, 8), bool] */;
    (%89, %90)
  };
  %91(%var_1794, %var_1795) /* ty=(Tensor[(4, 4, 8), float64], Tensor[(4, 4, 8), bool]) */
}

def @func_5539(%var_5537: Tensor[(10, 9, 16), int32], %var_5538: Tensor[(10, 9, 16), int32]) -> (Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(10, 9, 16), float64], Tensor[(10, 9, 16), float64]) {
  %117 = fn (%var_5478: Tensor[(10, 9, 16), int32], %var_5479: Tensor[(10, 9, 16), int32]) -> (Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(10, 9, 16), float64], Tensor[(10, 9, 16), float64]) {
    %92 = cast(meta[relay.Constant][6] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
    %93 = cast(meta[relay.Constant][7] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %94 = reshape(%92, newshape=[10, 8, 10]) /* ty=Tensor[(10, 8, 10), float64] */;
    %95 = reshape(%93, newshape=[1728]) /* ty=Tensor[(1728), float32] */;
    %96 = @func_5056(%94, %95) /* ty=(Tensor[(10, 8, 10), float64], Tensor[(12, 9, 16), float32], Tensor[(1728), float32]) */;
    %97 = cast(%var_5479, dtype="float64") /* ty=Tensor[(10, 9, 16), float64] */;
    %98 = cast(%var_5479, dtype="int32") /* ty=Tensor[(10, 9, 16), int32] */;
    %99 = shape_of(%var_5478, dtype="int32") /* ty=Tensor[(3), int32] */;
    %100 = cast(%var_5478, dtype="int32") /* ty=Tensor[(10, 9, 16), int32] */;
    %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %102 = logical_xor(%100, %101) /* ty=Tensor[(10, 9, 16), int32] */;
    %103 = cast(%102, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
    %104 = log2(%103) /* ty=Tensor[(10, 9, 16), float32] */;
    %105 = cast(%var_5478, dtype="int16") /* ty=Tensor[(10, 9, 16), int16] */;
    %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
    %107 = cast(%104, dtype="int16") /* ty=Tensor[(10, 9, 16), int16] */;
    %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %109 = right_shift(%107, %108) /* ty=Tensor[(10, 9, 16), int16] */;
    %110 = cast(%102, dtype="float64") /* ty=Tensor[(10, 9, 16), float64] */;
    %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
    %112 = cast(%109, dtype="float64") /* ty=Tensor[(10, 9, 16), float64] */;
    %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %114 = %96.1;
    %115 = asin(%97) /* ty=Tensor[(10, 9, 16), float64] */;
    %116 = mod(%112, %113) /* ty=Tensor[(10, 9, 16), float64] */;
    (%114, meta[relay.Constant][6] /* ty=Tensor[(800), float64] */, meta[relay.Constant][7] /* ty=Tensor[(1728), float32] */, %115, %116)
  };
  %117(%var_5537, %var_5538) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(10, 9, 16), float64], Tensor[(10, 9, 16), float64]) */
}

def @func_6478(%var_6462: Tensor[(6, 1, 15), float64]) -> (Tensor[(6, 1, 15), float64],) {
  %118 = cast(%var_6462, dtype="float64") /* ty=Tensor[(6, 1, 15), float64] */;
  %119 = rsqrt(%118) /* ty=Tensor[(6, 1, 15), float64] */;
  %120 = cast(%119, dtype="float64") /* ty=Tensor[(6, 1, 15), float64] */;
  %121 = atanh(%120) /* ty=Tensor[(6, 1, 15), float64] */;
  (%121,)
}

def @func_2259(%var_2241: Tensor[(14, 10, 11), float64], %var_2255: Tensor[(45), int32]) -> (Tensor[(14, 10, 11), float64], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(1, 720), int32], uint32, Tensor[(45), int32], Tensor[(60, 12), int32]) {
  %122 = cast(%var_2241, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
  %123 = cast(meta[relay.Constant][8] /* ty=Tensor[(351), float64] */, dtype="float64") /* ty=Tensor[(351), float64] */;
  %124 = reshape(%123, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float64] */;
  %125 = @func_493(%124) /* ty=(Tensor[(3, 13, 9), bool],) */;
  %126 = cast(meta[relay.Constant][9] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %127 = cast(%var_2255, dtype="int32") /* ty=Tensor[(45), int32] */;
  %128 = cast(meta[relay.Constant][10] /* ty=Tensor[(60, 12), int32] */, dtype="int32") /* ty=Tensor[(60, 12), int32] */;
  %129 = reshape(%126, newshape=[]) /* ty=uint32 */;
  %130 = reshape(%127, newshape=[15, 3]) /* ty=Tensor[(15, 3), int32] */;
  %131 = reshape(%128, newshape=[1, 720]) /* ty=Tensor[(1, 720), int32] */;
  %132 = @func_1067(%129, %130, %131) /* ty=(Tensor[(3, 13, 11), float32], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(15, 3, 16), int32], Tensor[(15, 3), int32], Tensor[(1, 720), int32]) */;
  %133 = cos(%122) /* ty=Tensor[(14, 10, 11), float64] */;
  %134 = %125.0;
  %135 = %132.5;
  (%133, %134, meta[relay.Constant][8] /* ty=Tensor[(351), float64] */, %135, meta[relay.Constant][9] /* ty=uint32 */, %var_2255, meta[relay.Constant][10] /* ty=Tensor[(60, 12), int32] */)
}

def @func_7813(%var_7766: Tensor[(1755), float32], %var_7767: Tensor[(22, 64), int8], %var_7768: Tensor[(252), float64], %var_7782: Tensor[(336), uint32]) -> (Tensor[(15, 15, 15), float32], Tensor[(4, 6, 5), float64], Tensor[(165, 2), uint64], Tensor[(1755), float32], Tensor[(22, 64), int8], Tensor[(252), float64], Tensor[(60, 2), float64], Tensor[(15, 9, 13), float32], Tensor[(336), uint32], Tensor[(720, 1), int32], Tensor[(15, 3), float64]) {
  %136 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 15, 15), float32] */;
  %137 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(15, 15, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 15, 15), float32] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %140 = cast(meta[relay.Constant][13] /* ty=Tensor[(165, 2), uint64] */, dtype="uint64") /* ty=Tensor[(165, 2), uint64] */;
  %141 = cast(meta[relay.Constant][13] /* ty=Tensor[(165, 2), uint64] */, dtype="uint64") /* ty=Tensor[(165, 2), uint64] */;
  %142 = cast(%var_7766, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %143 = cast(%var_7767, dtype="int8") /* ty=Tensor[(22, 64), int8] */;
  %144 = cast(%var_7768, dtype="float64") /* ty=Tensor[(252), float64] */;
  %145 = cast(meta[relay.Constant][14] /* ty=Tensor[(60, 2), float64] */, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %146 = reshape(%140, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), uint64] */;
  %147 = reshape(%141, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), uint64] */;
  %148 = reshape(%142, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %149 = reshape(%143, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %150 = reshape(%144, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %151 = reshape(%145, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %152 = @func_7579(%146, %147, %148, %149, %150, %151) /* ty=(Tensor[(2, 11, 15), bool], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(1408), uint16], Tensor[(2, 11, 15), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(4, 6, 5), float64], Tensor[(120), float64], uint32, Tensor[(1540), float64], Tensor[(5, 9), int32]) */;
  %153 = cast(%var_7782, dtype="uint32") /* ty=Tensor[(336), uint32] */;
  %154 = cast(%var_7782, dtype="uint32") /* ty=Tensor[(336), uint32] */;
  %155 = cast(%var_7767, dtype="int8") /* ty=Tensor[(22, 64), int8] */;
  %156 = cast(%var_7766, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %157 = reshape(%153, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), uint32] */;
  %158 = reshape(%154, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), uint32] */;
  %159 = reshape(%155, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %160 = reshape(%156, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %161 = @func_1383(%157, %158, %159, %160) /* ty=(Tensor[(3, 7, 16), uint32], Tensor[(1408), bool], Tensor[(15, 9, 13), float32], Tensor[(1755), float32]) */;
  %162 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 3), float64] */;
  %163 = cast(%var_7768, dtype="float64") /* ty=Tensor[(252), float64] */;
  %164 = reshape(%162, newshape=[15, 1, 3]) /* ty=Tensor[(15, 1, 3), float64] */;
  %165 = reshape(%163, newshape=[6, 42]) /* ty=Tensor[(6, 42), float64] */;
  %166 = @func_3518(%164, %165) /* ty=(Tensor[(15, 1, 3), float64], Tensor[(6, 7, 6), float64], Tensor[(6, 42), float64], Tensor[(15, 3, 16), int32], Tensor[(720, 1), int32]) */;
  %167 = divide(%138, %139) /* ty=Tensor[(15, 15, 15), float32] */;
  %168 = %152.7;
  %169 = %161.2;
  %170 = %166.4;
  (%167, %168, meta[relay.Constant][13] /* ty=Tensor[(165, 2), uint64] */, %var_7766, %var_7767, %var_7768, meta[relay.Constant][14] /* ty=Tensor[(60, 2), float64] */, %169, %var_7782, %170, meta[relay.Constant][15] /* ty=Tensor[(15, 3), float64] */)
}

def @func_8439(%var_8407: Tensor[(8, 4, 8), uint16], %var_8423: Tensor[(8, 4, 8), float32]) -> (Tensor[(8, 4, 8), float32],) {
  %171 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 4, 8), uint16] */, dtype="bool") /* ty=Tensor[(8, 4, 8), bool] */;
  %172 = shape_of(%var_8407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%var_8407, dtype="bool") /* ty=Tensor[(8, 4, 8), bool] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %175 = equal(%173, %174) /* ty=Tensor[(8, 4, 8), bool] */;
  %176 = cast(%175, dtype="float32") /* ty=Tensor[(8, 4, 8), float32] */;
  %177 = sinh(%176) /* ty=Tensor[(8, 4, 8), float32] */;
  %178 = cast(%var_8423, dtype="int64") /* ty=Tensor[(8, 4, 8), int64] */;
  %179 = shape_of(%177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(%177, dtype="int64") /* ty=Tensor[(8, 4, 8), int64] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %182 = maximum(%180, %181) /* ty=Tensor[(8, 4, 8), int64] */;
  %183 = cast(%182, dtype="float32") /* ty=Tensor[(8, 4, 8), float32] */;
  %184 = rsqrt(%183) /* ty=Tensor[(8, 4, 8), float32] */;
  (%184,)
}

def @func_8582(%var_8580: Tensor[(4, 7, 2), float64], %var_8581: Tensor[(420), uint16]) -> (Tensor[(4, 7, 2), float64], Tensor[(15, 7, 4), bool], Tensor[(420), uint16]) {
  %190 = fn (%var_8563: Tensor[(4, 7, 2), float64], %var_8568: Tensor[(420), uint16]) -> (Tensor[(4, 7, 2), float64], Tensor[(15, 7, 4), bool], Tensor[(420), uint16]) {
    %185 = cast(%var_8563, dtype="float64") /* ty=Tensor[(4, 7, 2), float64] */;
    %186 = cast(%var_8568, dtype="uint16") /* ty=Tensor[(420), uint16] */;
    %187 = reshape(%186, newshape=[15, 7, 4]) /* ty=Tensor[(15, 7, 4), uint16] */;
    %188 = exp(%185) /* ty=Tensor[(4, 7, 2), float64] */;
    %189 = @func_6120(%187) /* ty=Tensor[(15, 7, 4), bool] */;
    (%188, %189, %var_8568)
  };
  %190(%var_8580, %var_8581) /* ty=(Tensor[(4, 7, 2), float64], Tensor[(15, 7, 4), bool], Tensor[(420), uint16]) */
}

def @func_748(%var_745: Tensor[(15, 9, 13), float32], %var_746: Tensor[(15, 9, 13), float32], %var_747: Tensor[(1408), int8]) -> (Tensor[(15, 9, 13), float32], Tensor[(11, 8, 16), int8], Tensor[(1408), int8]) {
  @func_743(%var_745, %var_746, %var_747) /* ty=(Tensor[(15, 9, 13), float32], Tensor[(11, 8, 16), int8], Tensor[(1408), int8]) */
}

def @func_1388(%var_1384: Tensor[(3, 7, 16), uint32], %var_1385: Tensor[(3, 7, 16), uint32], %var_1386: Tensor[(1408), int8], %var_1387: Tensor[(1755), float32]) -> (Tensor[(3, 7, 16), uint32], Tensor[(1408), bool], Tensor[(15, 9, 13), float32], Tensor[(1755), float32]) {
  %217 = fn (%var_1355: Tensor[(3, 7, 16), uint32], %var_1356: Tensor[(3, 7, 16), uint32], %var_1361: Tensor[(1408), int8], %var_1379: Tensor[(1755), float32]) -> (Tensor[(3, 7, 16), uint32], Tensor[(1408), bool], Tensor[(15, 9, 13), float32], Tensor[(1755), float32]) {
    %191 = cast(%var_1356, dtype="uint32") /* ty=Tensor[(3, 7, 16), uint32] */;
    %192 = shape_of(%var_1355, dtype="int32") /* ty=Tensor[(3), int32] */;
    %193 = cast(%var_1355, dtype="uint32") /* ty=Tensor[(3, 7, 16), uint32] */;
    %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %195 = cast(%var_1361, dtype="int8") /* ty=Tensor[(1408), int8] */;
    %196 = cast(%var_1361, dtype="int8") /* ty=Tensor[(1408), int8] */;
    %197 = cast(%var_1361, dtype="int8") /* ty=Tensor[(1408), int8] */;
    %198 = reshape(%195, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
    %199 = reshape(%196, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
    %200 = reshape(%197, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
    %201 = @func_421(%198, %199, %200) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), uint32]) */;
    %202 = %201.1;
    %203 = cast(%202, dtype="bool") /* ty=Tensor[(11, 8, 16), bool] */;
    %204 = shape_of(%var_1361, dtype="int32") /* ty=Tensor[(1), int32] */;
    %205 = cast(%var_1361, dtype="bool") /* ty=Tensor[(1408), bool] */;
    %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?), bool] */;
    %207 = cast(%var_1379, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %208 = cast(%var_1379, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %209 = equal(%205, %206) /* ty=Tensor[(1408), bool] */;
    %210 = cast(%209, dtype="int8") /* ty=Tensor[(1408), int8] */;
    %211 = reshape(%207, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
    %212 = reshape(%208, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
    %213 = reshape(%210, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
    %214 = @func_743(%211, %212, %213) /* ty=(Tensor[(15, 9, 13), float32], Tensor[(11, 8, 16), int8], Tensor[(1408), int8]) */;
    %215 = left_shift(%193, %194) /* ty=Tensor[(3, 7, 16), uint32] */;
    %216 = %214.0;
    (%215, %209, %216, %var_1379)
  };
  %217(%var_1384, %var_1385, %var_1386, %var_1387) /* ty=(Tensor[(3, 7, 16), uint32], Tensor[(1408), bool], Tensor[(15, 9, 13), float32], Tensor[(1755), float32]) */
}

def @func_2263(%var_2261: Tensor[(14, 10, 11), float64], %var_2262: Tensor[(45), int32]) -> (Tensor[(14, 10, 11), float64], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(1, 720), int32], uint32, Tensor[(45), int32], Tensor[(60, 12), int32]) {
  @func_2259(%var_2261, %var_2262) /* ty=(Tensor[(14, 10, 11), float64], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(1, 720), int32], uint32, Tensor[(45), int32], Tensor[(60, 12), int32]) */
}

def @func_1612(%var_1605: int32, %var_1606: Tensor[(1, 7), int32]) -> (Tensor[(1, 7), int32],) {
  %218 = cast(%var_1605, dtype="int32") /* ty=int32 */;
  %219 = cast(%var_1606, dtype="int32") /* ty=Tensor[(1, 7), int32] */;
  %220 = bitwise_xor(%218, %219) /* ty=Tensor[(1, 7), int32] */;
  (%220,)
}

def @func_9086(%var_9084: Tensor[(3, 14, 15), float32], %var_9085: Tensor[(1, 1408), int8]) -> (Tensor[(3, 14, 15), int32], Tensor[(10, 13, 9), float32], Tensor[(1170), float32], Tensor[(3, 14, 15), bool], Tensor[(1408), int8], Tensor[(315), float32], Tensor[(288), float32], Tensor[(1, 1408), int8]) {
  %246 = fn (%var_9032: Tensor[(3, 14, 15), float32], %var_9078: Tensor[(1, 1408), int8]) -> (Tensor[(3, 14, 15), int32], Tensor[(10, 13, 9), float32], Tensor[(1170), float32], Tensor[(3, 14, 15), bool], Tensor[(1408), int8], Tensor[(315), float32], Tensor[(288), float32], Tensor[(1, 1408), int8]) {
    %221 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 14, 15), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 15), float32] */;
    %222 = sigmoid(%221) /* ty=Tensor[(3, 14, 15), float32] */;
    %223 = cast(%var_9032, dtype="int32") /* ty=Tensor[(3, 14, 15), int32] */;
    %224 = shape_of(%222, dtype="int32") /* ty=Tensor[(3), int32] */;
    %225 = cast(%222, dtype="int32") /* ty=Tensor[(3, 14, 15), int32] */;
    %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %227 = cast(meta[relay.Constant][18] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %228 = cast(meta[relay.Constant][18] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %229 = reshape(%227, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), float32] */;
    %230 = reshape(%228, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), float32] */;
    %231 = cast(%var_9032, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
    %232 = shape_of(%222, dtype="int32") /* ty=Tensor[(3), int32] */;
    %233 = cast(%222, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
    %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %235 = cast(meta[relay.Constant][19] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %236 = cast(meta[relay.Constant][20] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %237 = cast(%var_9078, dtype="int8") /* ty=Tensor[(1, 1408), int8] */;
    %238 = reshape(%235, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), float32] */;
    %239 = reshape(%236, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %240 = reshape(%237, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
    %241 = @func_1700(%238, %239, %240) /* ty=(Tensor[(15, 3, 7), float32], Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(1408), int8], Tensor[(1755), float32], Tensor[(1408), int8]) */;
    %242 = logical_xor(%225, %226) /* ty=Tensor[(3, 14, 15), int32] */;
    %243 = @func_3841(%229, %230) /* ty=Tensor[(10, 13, 9), float32] */;
    %244 = equal(%233, %234) /* ty=Tensor[(3, 14, 15), bool] */;
    %245 = %241.3;
    (%242, %243, meta[relay.Constant][18] /* ty=Tensor[(1170), float32] */, %244, %245, meta[relay.Constant][19] /* ty=Tensor[(315), float32] */, meta[relay.Constant][20] /* ty=Tensor[(288), float32] */, %var_9078)
  };
  %246(%var_9084, %var_9085) /* ty=(Tensor[(3, 14, 15), int32], Tensor[(10, 13, 9), float32], Tensor[(1170), float32], Tensor[(3, 14, 15), bool], Tensor[(1408), int8], Tensor[(315), float32], Tensor[(288), float32], Tensor[(1, 1408), int8]) */
}

def @main(%var_10101: Tensor[(11, 5, 8), float64], %var_10117: Tensor[(120), float64]) -> (Tensor[(4, 6, 5), float64], Tensor[(120), float64], Tensor[(1755), float32], Tensor[(30), int8], Tensor[(480), int8], Tensor[(585, 3), float32], Tensor[(11, 5, 8), float32]) {
  %247 = cast(%var_10117, dtype="float64") /* ty=Tensor[(120), float64] */;
  %248 = reshape(%247, newshape=[4, 6, 5]) /* ty=Tensor[(4, 6, 5), float64] */;
  %249 = @func_3727(%248) /* ty=(Tensor[(4, 6, 5), float64],) */;
  %250 = cast(meta[relay.Constant][21] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %251 = cast(meta[relay.Constant][22] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %252 = cast(meta[relay.Constant][23] /* ty=Tensor[(585, 3), float32] */, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %253 = reshape(%250, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), int8] */;
  %254 = reshape(%251, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int8] */;
  %255 = reshape(%252, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %256 = @func_1331(%253, %254, %255) /* ty=(Tensor[(16, 5, 6), int8], Tensor[(11, 8, 16), int8], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(16, 5, 6), uint64]) */;
  %257 = cast(%var_10101, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
  %258 = asinh(%257) /* ty=Tensor[(11, 5, 8), float64] */;
  %259 = cast(%258, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
  %260 = sin(%259) /* ty=Tensor[(11, 5, 8), float64] */;
  %261 = cast(%var_10101, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%260, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %265 = %249.0;
  %266 = %256.2;
  %267 = divide(%263, %264) /* ty=Tensor[(11, 5, 8), float32] */;
  (%265, %var_10117, %266, meta[relay.Constant][21] /* ty=Tensor[(30), int8] */, meta[relay.Constant][22] /* ty=Tensor[(480), int8] */, meta[relay.Constant][23] /* ty=Tensor[(585, 3), float32] */, %267)
}

def @func_1071(%var_1068: uint32, %var_1069: Tensor[(15, 3), int32], %var_1070: Tensor[(1, 720), int32]) -> (Tensor[(3, 13, 11), float32], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(15, 3, 16), int32], Tensor[(15, 3), int32], Tensor[(1, 720), int32]) {
  %283 = fn (%var_1028: uint32, %var_1062: Tensor[(15, 3), int32], %var_1063: Tensor[(1, 720), int32]) -> (Tensor[(3, 13, 11), float32], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(15, 3, 16), int32], Tensor[(15, 3), int32], Tensor[(1, 720), int32]) {
    %268 = cast(%var_1028, dtype="bool") /* ty=bool */;
    %269 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 13, 11), uint32] */, dtype="bool") /* ty=Tensor[(3, 13, 11), bool] */;
    %270 = less(%268, %269) /* ty=Tensor[(3, 13, 11), bool] */;
    %271 = cast(%270, dtype="float32") /* ty=Tensor[(3, 13, 11), float32] */;
    %272 = cast(meta[relay.Constant][25] /* ty=Tensor[(351), float64] */, dtype="float64") /* ty=Tensor[(351), float64] */;
    %273 = reshape(%272, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float64] */;
    %274 = @func_493(%273) /* ty=(Tensor[(3, 13, 9), bool],) */;
    %275 = cast(%var_1062, dtype="int32") /* ty=Tensor[(15, 3), int32] */;
    %276 = cast(%var_1063, dtype="int32") /* ty=Tensor[(1, 720), int32] */;
    %277 = reshape(%275, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), int32] */;
    %278 = reshape(%276, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), int32] */;
    %279 = @func_765(%277, %278) /* ty=(Tensor[(15, 3, 16), int32],) */;
    %280 = acos(%271) /* ty=Tensor[(3, 13, 11), float32] */;
    %281 = %274.0;
    %282 = %279.0;
    (%280, %281, meta[relay.Constant][25] /* ty=Tensor[(351), float64] */, %282, %var_1062, %var_1063)
  };
  %283(%var_1068, %var_1069, %var_1070) /* ty=(Tensor[(3, 13, 11), float32], Tensor[(3, 13, 9), bool], Tensor[(351), float64], Tensor[(15, 3, 16), int32], Tensor[(15, 3), int32], Tensor[(1, 720), int32]) */
}

def @func_3724(%var_3720: Tensor[(4, 6, 5), float64]) -> (Tensor[(4, 6, 5), float64],) {
  %284 = cast(%var_3720, dtype="float64") /* ty=Tensor[(4, 6, 5), float64] */;
  %285 = rsqrt(%284) /* ty=Tensor[(4, 6, 5), float64] */;
  (%285,)
}

def @func_4966(%var_4929: Tensor[(7, 5, 4), int32], %var_4930: Tensor[(7, 5, 4), int32], %var_4959: Tensor[(1755), float32]) -> (Tensor[(7, 5, 4), int32], Tensor[(1755), float32], Tensor[(30), int8], Tensor[(480), int8], Tensor[(1755), float32]) {
  %286 = cast(%var_4930, dtype="int32") /* ty=Tensor[(7, 5, 4), int32] */;
  %287 = shape_of(%var_4929, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%var_4929, dtype="int32") /* ty=Tensor[(7, 5, 4), int32] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %290 = cast(meta[relay.Constant][26] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %291 = cast(meta[relay.Constant][27] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %292 = cast(%var_4959, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %293 = reshape(%290, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), int8] */;
  %294 = reshape(%291, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int8] */;
  %295 = reshape(%292, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %296 = @func_1326(%293, %294, %295) /* ty=(Tensor[(16, 5, 6), int8], Tensor[(11, 8, 16), int8], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(16, 5, 6), uint64]) */;
  %297 = bitwise_and(%288, %289) /* ty=Tensor[(7, 5, 4), int32] */;
  %298 = %296.2;
  (%297, %298, meta[relay.Constant][26] /* ty=Tensor[(30), int8] */, meta[relay.Constant][27] /* ty=Tensor[(480), int8] */, %var_4959)
}

def @func_8663(%var_8659: Tensor[(14, 11, 8), int16], %var_8660: Tensor[(14, 11, 8), int16], %var_8661: Tensor[(800), float64], %var_8662: Tensor[(8, 36), float32]) -> (Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(14, 11, 8), int64], Tensor[(288), float32], Tensor[(8, 36), float32], Tensor[(14, 11, 8), float32], Tensor[(15, 3, 11), bool], Tensor[(495), float64]) {
  %326 = fn (%var_8605: Tensor[(14, 11, 8), int16], %var_8606: Tensor[(14, 11, 8), int16], %var_8612: Tensor[(800), float64], %var_8632: Tensor[(8, 36), float32]) -> (Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(14, 11, 8), int64], Tensor[(288), float32], Tensor[(8, 36), float32], Tensor[(14, 11, 8), float32], Tensor[(15, 3, 11), bool], Tensor[(495), float64]) {
    %299 = cast(%var_8612, dtype="float64") /* ty=Tensor[(800), float64] */;
    %300 = cast(meta[relay.Constant][28] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %301 = reshape(%299, newshape=[10, 8, 10]) /* ty=Tensor[(10, 8, 10), float64] */;
    %302 = reshape(%300, newshape=[1728]) /* ty=Tensor[(1728), float32] */;
    %303 = @func_5056(%301, %302) /* ty=(Tensor[(10, 8, 10), float64], Tensor[(12, 9, 16), float32], Tensor[(1728), float32]) */;
    %304 = cast(%var_8606, dtype="int64") /* ty=Tensor[(14, 11, 8), int64] */;
    %305 = shape_of(%var_8605, dtype="int32") /* ty=Tensor[(3), int32] */;
    %306 = cast(%var_8605, dtype="int64") /* ty=Tensor[(14, 11, 8), int64] */;
    %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %308 = cast(%var_8632, dtype="float32") /* ty=Tensor[(8, 36), float32] */;
    %309 = reshape(%308, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %310 = @func_4647(%309) /* ty=(Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(10, 1, 4), float32]) */;
    %311 = cast(%var_8606, dtype="int16") /* ty=Tensor[(14, 11, 8), int16] */;
    %312 = shape_of(%var_8605, dtype="int32") /* ty=Tensor[(3), int32] */;
    %313 = cast(%var_8605, dtype="int16") /* ty=Tensor[(14, 11, 8), int16] */;
    %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %315 = subtract(%313, %314) /* ty=Tensor[(14, 11, 8), int16] */;
    %316 = cast(%315, dtype="float64") /* ty=Tensor[(14, 11, 8), float64] */;
    %317 = asinh(%316) /* ty=Tensor[(14, 11, 8), float64] */;
    %318 = cast(%317, dtype="float32") /* ty=Tensor[(14, 11, 8), float32] */;
    %319 = cast(meta[relay.Constant][29] /* ty=Tensor[(495), float64] */, dtype="float64") /* ty=Tensor[(495), float64] */;
    %320 = reshape(%319, newshape=[15, 3, 11]) /* ty=Tensor[(15, 3, 11), float64] */;
    %321 = %303.1;
    %322 = bitwise_and(%306, %307) /* ty=Tensor[(14, 11, 8), int64] */;
    %323 = %310.1;
    %324 = log2(%318) /* ty=Tensor[(14, 11, 8), float32] */;
    %325 = @func_7867(%320) /* ty=Tensor[(15, 3, 11), bool] */;
    (%321, %var_8612, meta[relay.Constant][28] /* ty=Tensor[(1728), float32] */, %322, %323, %var_8632, %324, %325, meta[relay.Constant][29] /* ty=Tensor[(495), float64] */)
  };
  %326(%var_8659, %var_8660, %var_8661, %var_8662) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(14, 11, 8), int64], Tensor[(288), float32], Tensor[(8, 36), float32], Tensor[(14, 11, 8), float32], Tensor[(15, 3, 11), bool], Tensor[(495), float64]) */
}

def @func_7410(%var_7406: Tensor[(4, 7, 7), float64], %var_7407: Tensor[(4, 7, 7), float64], %var_7408: Tensor[(1440), int32], %var_7409: Tensor[(90), float64]) -> (Tensor[(4, 7, 7), float64], Tensor[(800), float64], Tensor[(1440), int32], Tensor[(6, ?, 15), bool]) {
  %347 = fn (%var_7378: Tensor[(4, 7, 7), float64], %var_7379: Tensor[(4, 7, 7), float64], %var_7387: Tensor[(1440), int32], %var_7393: Tensor[(90), float64]) -> (Tensor[(4, 7, 7), float64], Tensor[(800), float64], Tensor[(1440), int32], Tensor[(6, ?, 15), bool]) {
    %327 = cast(%var_7379, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
    %328 = shape_of(%var_7378, dtype="int32") /* ty=Tensor[(3), int32] */;
    %329 = cast(%var_7378, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
    %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %331 = cast(%var_7387, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %332 = cast(%var_7387, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %333 = reshape(%331, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
    %334 = reshape(%332, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
    %335 = @func_5536(%333, %334) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(10, 9, 16), float64], Tensor[(10, 9, 16), float64]) */;
    %336 = cast(%var_7393, dtype="float64") /* ty=Tensor[(90), float64] */;
    %337 = reshape(%336, newshape=[6, 1, 15]) /* ty=Tensor[(6, 1, 15), float64] */;
    %338 = @func_6478(%337) /* ty=(Tensor[(6, 1, 15), float64],) */;
    %339 = %338.0;
    %340 = cast(%var_7393, dtype="bool") /* ty=Tensor[(90), bool] */;
    %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
    %342 = cast(%339, dtype="bool") /* ty=Tensor[(6, 1, 15), bool] */;
    %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %344 = subtract(%329, %330) /* ty=Tensor[(4, 7, 7), float64] */;
    %345 = %335.1;
    %346 = greater_equal(%342, %343) /* ty=Tensor[(6, ?, 15), bool] */;
    (%344, %345, %var_7387, %346)
  };
  %347(%var_7406, %var_7407, %var_7408, %var_7409) /* ty=(Tensor[(4, 7, 7), float64], Tensor[(800), float64], Tensor[(1440), int32], Tensor[(6, ?, 15), bool]) */
}

def @func_9688(%var_9686: Tensor[(15, 4, 7), uint32], %var_9687: Tensor[(1440), int32]) -> (Tensor[(15, 4, 7), bool], Tensor[(15, 4, 7), float32], Tensor[(12, 9, 16), float32], Tensor[(1440), int32], Tensor[(1728), float32], Tensor[(15, 3, 11), bool], Tensor[(495), float64]) {
  %372 = fn (%var_9606: Tensor[(15, 4, 7), uint32], %var_9656: Tensor[(1440), int32]) -> (Tensor[(15, 4, 7), bool], Tensor[(15, 4, 7), float32], Tensor[(12, 9, 16), float32], Tensor[(1440), int32], Tensor[(1728), float32], Tensor[(15, 3, 11), bool], Tensor[(495), float64]) {
    %348 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 1, 7), uint32] */, dtype="uint32") /* ty=Tensor[(15, 1, 7), uint32] */;
    %349 = cast(%var_9606, dtype="uint32") /* ty=Tensor[(15, 4, 7), uint32] */;
    %350 = bitwise_xor(%348, %349) /* ty=Tensor[(15, 4, 7), uint32] */;
    %351 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 1, 7), uint32] */, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
    %352 = cast(%350, dtype="bool") /* ty=Tensor[(15, 4, 7), bool] */;
    %353 = cast(%350, dtype="float32") /* ty=Tensor[(15, 4, 7), float32] */;
    %354 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 1, 7), uint32] */, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
    %355 = cast(%var_9656, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %356 = cast(%var_9656, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %357 = reshape(%355, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
    %358 = reshape(%356, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
    %359 = @func_5536(%357, %358) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(10, 9, 16), float64], Tensor[(10, 9, 16), float64]) */;
    %360 = cast(%var_9656, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %361 = cast(%var_9656, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %362 = reshape(%360, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
    %363 = reshape(%361, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
    %364 = @func_5536(%362, %363) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(10, 9, 16), float64], Tensor[(10, 9, 16), float64]) */;
    %365 = cast(meta[relay.Constant][31] /* ty=Tensor[(495), float64] */, dtype="float64") /* ty=Tensor[(495), float64] */;
    %366 = reshape(%365, newshape=[15, 3, 11]) /* ty=Tensor[(15, 3, 11), float64] */;
    %367 = greater_equal(%351, %352) /* ty=Tensor[(15, 4, 7), bool] */;
    %368 = divide(%353, %354) /* ty=Tensor[(15, 4, 7), float32] */;
    %369 = %359.0;
    %370 = %364.2;
    %371 = @func_7867(%366) /* ty=Tensor[(15, 3, 11), bool] */;
    (%367, %368, %369, %var_9656, %370, %371, meta[relay.Constant][31] /* ty=Tensor[(495), float64] */)
  };
  %372(%var_9686, %var_9687) /* ty=(Tensor[(15, 4, 7), bool], Tensor[(15, 4, 7), float32], Tensor[(12, 9, 16), float32], Tensor[(1440), int32], Tensor[(1728), float32], Tensor[(15, 3, 11), bool], Tensor[(495), float64]) */
}

def @func_1647(%var_1646: Tensor[(8, 6, 6), float32]) -> (Tensor[(8, 6, 6), float64],) {
  %377 = fn (%var_1624: Tensor[(8, 6, 6), float32]) -> (Tensor[(8, 6, 6), float64],) {
    %373 = cast(%var_1624, dtype="float32") /* ty=Tensor[(8, 6, 6), float32] */;
    %374 = acos(%373) /* ty=Tensor[(8, 6, 6), float32] */;
    %375 = cast(%374, dtype="float64") /* ty=Tensor[(8, 6, 6), float64] */;
    %376 = erf(%375) /* ty=Tensor[(8, 6, 6), float64] */;
    (%376,)
  };
  %377(%var_1646) /* ty=(Tensor[(8, 6, 6), float64],) */
}

def @func_3727(%var_3725: Tensor[(4, 6, 5), float64]) -> (Tensor[(4, 6, 5), float64],) {
  @func_3724(%var_3725) /* ty=(Tensor[(4, 6, 5), float64],) */
}

def @func_1705(%var_1702: Tensor[(15, 3, 7), float32], %var_1703: Tensor[(288), float32], %var_1704: Tensor[(1408), int8]) -> (Tensor[(15, 3, 7), float32], Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(1408), int8], Tensor[(1755), float32], Tensor[(1408), int8]) {
  @func_1700(%var_1702, %var_1703, %var_1704) /* ty=(Tensor[(15, 3, 7), float32], Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(1408), int8], Tensor[(1755), float32], Tensor[(1408), int8]) */
}

def @func_1326(%var_1305: Tensor[(1, 5, 6), int8], %var_1306: Tensor[(16, 5, 6), int8], %var_1312: Tensor[(1755), float32]) -> (Tensor[(16, 5, 6), int8], Tensor[(11, 8, 16), int8], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(16, 5, 6), uint64]) {
  %378 = cast(%var_1305, dtype="int8") /* ty=Tensor[(1, 5, 6), int8] */;
  %379 = cast(%var_1306, dtype="int8") /* ty=Tensor[(16, 5, 6), int8] */;
  %380 = cast(%var_1312, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %381 = cast(%var_1312, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %382 = cast(meta[relay.Constant][32] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %383 = reshape(%380, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %384 = reshape(%381, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %385 = reshape(%382, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %386 = @func_743(%383, %384, %385) /* ty=(Tensor[(15, 9, 13), float32], Tensor[(11, 8, 16), int8], Tensor[(1408), int8]) */;
  %387 = cast(meta[relay.Constant][33] /* ty=Tensor[(16, 5, 6), int8] */, dtype="uint64") /* ty=Tensor[(16, 5, 6), uint64] */;
  %388 = shape_of(%var_1306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%var_1306, dtype="uint64") /* ty=Tensor[(16, 5, 6), uint64] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %391 = right_shift(%378, %379) /* ty=Tensor[(16, 5, 6), int8] */;
  %392 = %386.1;
  %393 = add(%389, %390) /* ty=Tensor[(16, 5, 6), uint64] */;
  (%391, %392, %var_1312, meta[relay.Constant][32] /* ty=Tensor[(1408), int8] */, %393)
}

def @func_3522(%var_3520: Tensor[(15, 1, 3), float64], %var_3521: Tensor[(6, 42), float64]) -> (Tensor[(15, 1, 3), float64], Tensor[(6, 7, 6), float64], Tensor[(6, 42), float64], Tensor[(15, 3, 16), int32], Tensor[(720, 1), int32]) {
  @func_3518(%var_3520, %var_3521) /* ty=(Tensor[(15, 1, 3), float64], Tensor[(6, 7, 6), float64], Tensor[(6, 42), float64], Tensor[(15, 3, 16), int32], Tensor[(720, 1), int32]) */
}

def @func_6449(%var_6447: Tensor[(3, 10, 7), float32]) -> (Tensor[(3, 10, 7), float32], Tensor[(3, 10, 7), float32]) {
  @func_6446(%var_6447) /* ty=(Tensor[(3, 10, 7), float32], Tensor[(3, 10, 7), float32]) */
}

def @func_7587(%var_7581: Tensor[(2, 11, 15), uint64], %var_7582: Tensor[(2, 11, 15), uint64], %var_7583: Tensor[(1755), float32], %var_7584: Tensor[(1408), int8], %var_7585: Tensor[(252), float64], %var_7586: Tensor[(120), float64]) -> (Tensor[(2, 11, 15), bool], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(1408), uint16], Tensor[(2, 11, 15), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(4, 6, 5), float64], Tensor[(120), float64], uint32, Tensor[(1540), float64], Tensor[(5, 9), int32]) {
  @func_7579(%var_7581, %var_7582, %var_7583, %var_7584, %var_7585, %var_7586) /* ty=(Tensor[(2, 11, 15), bool], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(1408), uint16], Tensor[(2, 11, 15), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(4, 6, 5), float64], Tensor[(120), float64], uint32, Tensor[(1540), float64], Tensor[(5, 9), int32]) */
}

def @func_9433(%var_9420: Tensor[(5, 16, 7), uint16], %var_9421: Tensor[(5, 16, 7), uint16]) -> Tensor[(5, 16, 7), uint16] {
  %394 = cast(%var_9421, dtype="uint16") /* ty=Tensor[(5, 16, 7), uint16] */;
  %395 = shape_of(%var_9420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%var_9420, dtype="uint16") /* ty=Tensor[(5, 16, 7), uint16] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%396, %397) /* ty=Tensor[(5, 16, 7), uint16] */
}

def @func_4347(%var_4345: Tensor[(12, 9, 16), float32]) -> Tensor[(12, 9, 16), float32] {
  @func_4344(%var_4345) /* ty=Tensor[(12, 9, 16), float32] */
}

def @func_6812(%var_6809: Tensor[(16, 1, 5), uint64], %var_6810: Tensor[(165), float64], %var_6811: Tensor[(288), float32]) -> (Tensor[(16, 7, 5), uint64], Tensor[(16, 7, 5), float64], Tensor[(45), int32], Tensor[(165), float64], Tensor[(288), float32]) {
  @func_6807(%var_6809, %var_6810, %var_6811) /* ty=(Tensor[(16, 7, 5), uint64], Tensor[(16, 7, 5), float64], Tensor[(45), int32], Tensor[(165), float64], Tensor[(288), float32]) */
}

def @func_4856(%var_4855: Tensor[(16, 11, 8), float32]) -> (Tensor[(16, 11, 8), bool],) {
  %405 = fn (%var_4830: Tensor[(16, 11, 8), float32]) -> (Tensor[(16, 11, 8), bool],) {
    %398 = cast(%var_4830, dtype="float32") /* ty=Tensor[(16, 11, 8), float32] */;
    %399 = sin(%398) /* ty=Tensor[(16, 11, 8), float32] */;
    %400 = cast(%var_4830, dtype="bool") /* ty=Tensor[(16, 11, 8), bool] */;
    %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
    %402 = cast(%399, dtype="bool") /* ty=Tensor[(16, 11, 8), bool] */;
    %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %404 = equal(%402, %403) /* ty=Tensor[(16, 11, 8), bool] */;
    (%404,)
  };
  %405(%var_4855) /* ty=(Tensor[(16, 11, 8), bool],) */
}

def @func_1700(%var_1680: Tensor[(15, 3, 7), float32], %var_1690: Tensor[(288), float32], %var_1698: Tensor[(1408), int8]) -> (Tensor[(15, 3, 7), float32], Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(1408), int8], Tensor[(1755), float32], Tensor[(1408), int8]) {
  %406 = cast(meta[relay.Constant][34] /* ty=Tensor[(15, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(15, 3, 7), float32] */;
  %407 = shape_of(%var_1680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%var_1680, dtype="float32") /* ty=Tensor[(15, 3, 7), float32] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %410 = cast(%var_1690, dtype="float32") /* ty=Tensor[(288), float32] */;
  %411 = reshape(%410, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), float32] */;
  %412 = @func_1645(%411) /* ty=(Tensor[(8, 6, 6), float64],) */;
  %413 = cast(meta[relay.Constant][35] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %414 = cast(meta[relay.Constant][35] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %415 = cast(%var_1698, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %416 = reshape(%413, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %417 = reshape(%414, newshape=[15, 9, 13]) /* ty=Tensor[(15, 9, 13), float32] */;
  %418 = reshape(%415, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %419 = @func_743(%416, %417, %418) /* ty=(Tensor[(15, 9, 13), float32], Tensor[(11, 8, 16), int8], Tensor[(1408), int8]) */;
  %420 = floor_mod(%408, %409) /* ty=Tensor[(15, 3, 7), float32] */;
  %421 = %412.0;
  %422 = %419.2;
  (%420, %421, %var_1690, %422, meta[relay.Constant][35] /* ty=Tensor[(1755), float32] */, %var_1698)
}

def @func_6807(%var_6776: Tensor[(16, 1, 5), uint64], %var_6800: Tensor[(165), float64], %var_6801: Tensor[(288), float32]) -> (Tensor[(16, 7, 5), uint64], Tensor[(16, 7, 5), float64], Tensor[(45), int32], Tensor[(165), float64], Tensor[(288), float32]) {
  %423 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 7, 5), uint64] */, dtype="uint64") /* ty=Tensor[(16, 7, 5), uint64] */;
  %424 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(16, 7, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %425 = cast(meta[relay.Constant][36] /* ty=Tensor[(16, 7, 5), uint64] */, dtype="uint64") /* ty=Tensor[(16, 7, 5), uint64] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %427 = cast(%var_6776, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
  %428 = cast(meta[relay.Constant][36] /* ty=Tensor[(16, 7, 5), uint64] */, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
  %429 = greater(%427, %428) /* ty=Tensor[(16, 7, 5), bool] */;
  %430 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 7, 5), uint64] */, dtype="float64") /* ty=Tensor[(16, 7, 5), float64] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%429, dtype="float64") /* ty=Tensor[(16, 7, 5), float64] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %434 = cast(%var_6800, dtype="float64") /* ty=Tensor[(165), float64] */;
  %435 = cast(%var_6801, dtype="float32") /* ty=Tensor[(288), float32] */;
  %436 = reshape(%434, newshape=[11, 15, 1]) /* ty=Tensor[(11, 15, 1), float64] */;
  %437 = reshape(%435, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %438 = @func_2121(%436, %437) /* ty=(Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), bool], Tensor[(15, 3, 16), int32], Tensor[(45), int32], Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(11, 15, 720), bool]) */;
  %439 = bitwise_or(%425, %426) /* ty=Tensor[(16, 7, 5), uint64] */;
  %440 = mod(%432, %433) /* ty=Tensor[(16, 7, 5), float64] */;
  %441 = %438.3;
  (%439, %440, %441, %var_6800, %var_6801)
}

def @func_1331(%var_1328: Tensor[(1, 5, 6), int8], %var_1329: Tensor[(16, 5, 6), int8], %var_1330: Tensor[(1755), float32]) -> (Tensor[(16, 5, 6), int8], Tensor[(11, 8, 16), int8], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(16, 5, 6), uint64]) {
  @func_1326(%var_1328, %var_1329, %var_1330) /* ty=(Tensor[(16, 5, 6), int8], Tensor[(11, 8, 16), int8], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(16, 5, 6), uint64]) */
}

def @func_8848(%var_8843: Tensor[(9, 2, 11), float32], %var_8844: Tensor[(196), float64], %var_8845: Tensor[(1440), int32], %var_8846: Tensor[(90), float64], %var_8847: Tensor[(800), float64]) -> (Tensor[(9, 2, 11), float32], Tensor[(1440), int32], Tensor[(196), float64], Tensor[(1440), int32], Tensor[(90), float64], Tensor[(14, 11, 8), int64], Tensor[(1232), int16], Tensor[(800), float64], Tensor[(288), float32]) {
  %467 = fn (%var_8822: Tensor[(9, 2, 11), float32], %var_8831: Tensor[(196), float64], %var_8832: Tensor[(1440), int32], %var_8833: Tensor[(90), float64], %var_8839: Tensor[(800), float64]) -> (Tensor[(9, 2, 11), float32], Tensor[(1440), int32], Tensor[(196), float64], Tensor[(1440), int32], Tensor[(90), float64], Tensor[(14, 11, 8), int64], Tensor[(1232), int16], Tensor[(800), float64], Tensor[(288), float32]) {
    %442 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 2, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 2, 11), float32] */;
    %443 = shape_of(%var_8822, dtype="int32") /* ty=Tensor[(3), int32] */;
    %444 = cast(%var_8822, dtype="float32") /* ty=Tensor[(9, 2, 11), float32] */;
    %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %446 = cast(%var_8831, dtype="float64") /* ty=Tensor[(196), float64] */;
    %447 = cast(%var_8831, dtype="float64") /* ty=Tensor[(196), float64] */;
    %448 = cast(%var_8832, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %449 = cast(%var_8833, dtype="float64") /* ty=Tensor[(90), float64] */;
    %450 = reshape(%446, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), float64] */;
    %451 = reshape(%447, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), float64] */;
    %452 = reshape(%448, newshape=[1440]) /* ty=Tensor[(1440), int32] */;
    %453 = reshape(%449, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %454 = @func_7405(%450, %451, %452, %453) /* ty=(Tensor[(4, 7, 7), float64], Tensor[(800), float64], Tensor[(1440), int32], Tensor[(6, ?, 15), bool]) */;
    %455 = cast(meta[relay.Constant][39] /* ty=Tensor[(1232), int16] */, dtype="int16") /* ty=Tensor[(1232), int16] */;
    %456 = cast(meta[relay.Constant][39] /* ty=Tensor[(1232), int16] */, dtype="int16") /* ty=Tensor[(1232), int16] */;
    %457 = cast(%var_8839, dtype="float64") /* ty=Tensor[(800), float64] */;
    %458 = cast(meta[relay.Constant][40] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %459 = reshape(%455, newshape=[14, 11, 8]) /* ty=Tensor[(14, 11, 8), int16] */;
    %460 = reshape(%456, newshape=[14, 11, 8]) /* ty=Tensor[(14, 11, 8), int16] */;
    %461 = reshape(%457, newshape=[800]) /* ty=Tensor[(800), float64] */;
    %462 = reshape(%458, newshape=[8, 36]) /* ty=Tensor[(8, 36), float32] */;
    %463 = @func_8658(%459, %460, %461, %462) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(14, 11, 8), int64], Tensor[(288), float32], Tensor[(8, 36), float32], Tensor[(14, 11, 8), float32], Tensor[(15, 3, 11), bool], Tensor[(495), float64]) */;
    %464 = floor_mod(%444, %445) /* ty=Tensor[(9, 2, 11), float32] */;
    %465 = %454.2;
    %466 = %463.3;
    (%464, %465, %var_8831, %var_8832, %var_8833, %466, meta[relay.Constant][39] /* ty=Tensor[(1232), int16] */, %var_8839, meta[relay.Constant][40] /* ty=Tensor[(288), float32] */)
  };
  %467(%var_8843, %var_8844, %var_8845, %var_8846, %var_8847) /* ty=(Tensor[(9, 2, 11), float32], Tensor[(1440), int32], Tensor[(196), float64], Tensor[(1440), int32], Tensor[(90), float64], Tensor[(14, 11, 8), int64], Tensor[(1232), int16], Tensor[(800), float64], Tensor[(288), float32]) */
}

def @func_7819(%var_7815: Tensor[(1755), float32], %var_7816: Tensor[(22, 64), int8], %var_7817: Tensor[(252), float64], %var_7818: Tensor[(336), uint32]) -> (Tensor[(15, 15, 15), float32], Tensor[(4, 6, 5), float64], Tensor[(165, 2), uint64], Tensor[(1755), float32], Tensor[(22, 64), int8], Tensor[(252), float64], Tensor[(60, 2), float64], Tensor[(15, 9, 13), float32], Tensor[(336), uint32], Tensor[(720, 1), int32], Tensor[(15, 3), float64]) {
  @func_7813(%var_7815, %var_7816, %var_7817, %var_7818) /* ty=(Tensor[(15, 15, 15), float32], Tensor[(4, 6, 5), float64], Tensor[(165, 2), uint64], Tensor[(1755), float32], Tensor[(22, 64), int8], Tensor[(252), float64], Tensor[(60, 2), float64], Tensor[(15, 9, 13), float32], Tensor[(336), uint32], Tensor[(720, 1), int32], Tensor[(15, 3), float64]) */
}

def @func_8994(%var_8991: Tensor[(15, 4, 11), float32], %var_8992: Tensor[(1440, 1), int32], %var_8993: Tensor[(90), float32]) -> (Tensor[(15, 4, 11), float32], Tensor[(10, 9, 16), float64], Tensor[(1440, 1), int32], Tensor[(15, 4, 11), float64], Tensor[(1, 5, 15), float32], Tensor[(75), float32], Tensor[(9, 2, 5), float32], Tensor[(90), float32]) {
  %485 = fn (%var_8950: Tensor[(15, 4, 11), float32], %var_8954: Tensor[(1440, 1), int32], %var_8985: Tensor[(90), float32]) -> (Tensor[(15, 4, 11), float32], Tensor[(10, 9, 16), float64], Tensor[(1440, 1), int32], Tensor[(15, 4, 11), float64], Tensor[(1, 5, 15), float32], Tensor[(75), float32], Tensor[(9, 2, 5), float32], Tensor[(90), float32]) {
    %468 = cast(%var_8950, dtype="float32") /* ty=Tensor[(15, 4, 11), float32] */;
    %469 = cast(%var_8954, dtype="int32") /* ty=Tensor[(1440, 1), int32] */;
    %470 = cast(%var_8954, dtype="int32") /* ty=Tensor[(1440, 1), int32] */;
    %471 = reshape(%469, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
    %472 = reshape(%470, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int32] */;
    %473 = @func_5536(%471, %472) /* ty=(Tensor[(12, 9, 16), float32], Tensor[(800), float64], Tensor[(1728), float32], Tensor[(10, 9, 16), float64], Tensor[(10, 9, 16), float64]) */;
    %474 = cast(%var_8950, dtype="float64") /* ty=Tensor[(15, 4, 11), float64] */;
    %475 = cast(meta[relay.Constant][41] /* ty=Tensor[(75), float32] */, dtype="float32") /* ty=Tensor[(75), float32] */;
    %476 = reshape(%475, newshape=[1, 5, 15]) /* ty=Tensor[(1, 5, 15), float32] */;
    %477 = @func_8880(%476) /* ty=(Tensor[(1, 5, 15), float32],) */;
    %478 = cast(%var_8985, dtype="float32") /* ty=Tensor[(90), float32] */;
    %479 = reshape(%478, newshape=[9, 2, 5]) /* ty=Tensor[(9, 2, 5), float32] */;
    %480 = atanh(%468) /* ty=Tensor[(15, 4, 11), float32] */;
    %481 = %473.4;
    %482 = sin(%474) /* ty=Tensor[(15, 4, 11), float64] */;
    %483 = %477.0;
    %484 = @func_4508(%479) /* ty=Tensor[(9, 2, 5), float32] */;
    (%480, %481, %var_8954, %482, %483, meta[relay.Constant][41] /* ty=Tensor[(75), float32] */, %484, %var_8985)
  };
  %485(%var_8991, %var_8992, %var_8993) /* ty=(Tensor[(15, 4, 11), float32], Tensor[(10, 9, 16), float64], Tensor[(1440, 1), int32], Tensor[(15, 4, 11), float64], Tensor[(1, 5, 15), float32], Tensor[(75), float32], Tensor[(9, 2, 5), float32], Tensor[(90), float32]) */
}

def @func_4785(%var_4783: Tensor[(5, 6, 11), float64]) -> (Tensor[(5, 6, 11), float64],) {
  @func_4782(%var_4783) /* ty=(Tensor[(5, 6, 11), float64],) */
}

def @func_2124(%var_2122: Tensor[(11, 15, 1), float64], %var_2123: Tensor[(288), float32]) -> (Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), bool], Tensor[(15, 3, 16), int32], Tensor[(45), int32], Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(11, 15, 720), bool]) {
  %516 = fn (%var_2072: Tensor[(11, 15, 1), float64], %var_2113: Tensor[(288), float32]) -> (Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), bool], Tensor[(15, 3, 16), int32], Tensor[(45), int32], Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(11, 15, 720), bool]) {
    %486 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 15, 1), float64] */, dtype="bool") /* ty=Tensor[(11, 15, 1), bool] */;
    %487 = shape_of(%var_2072, dtype="int32") /* ty=Tensor[(3), int32] */;
    %488 = cast(%var_2072, dtype="bool") /* ty=Tensor[(11, 15, 1), bool] */;
    %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %490 = cast(%var_2072, dtype="float64") /* ty=Tensor[(11, 15, 1), float64] */;
    %491 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(11, 15, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %492 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 15, 1), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 1), float64] */;
    %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %494 = power(%492, %493) /* ty=Tensor[(11, 15, ?), float64] */;
    %495 = cast(%494, dtype="float64") /* ty=Tensor[(11, 15, ?), float64] */;
    %496 = sigmoid(%495) /* ty=Tensor[(11, 15, ?), float64] */;
    %497 = cast(%var_2072, dtype="bool") /* ty=Tensor[(11, 15, 1), bool] */;
    %498 = shape_of(%496, dtype="int32") /* ty=Tensor[(3), int32] */;
    %499 = cast(%496, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
    %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %501 = cast(meta[relay.Constant][43] /* ty=Tensor[(45), int32] */, dtype="int32") /* ty=Tensor[(45), int32] */;
    %502 = cast(meta[relay.Constant][44] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
    %503 = reshape(%501, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), int32] */;
    %504 = reshape(%502, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), int32] */;
    %505 = @func_765(%503, %504) /* ty=(Tensor[(15, 3, 16), int32],) */;
    %506 = cast(%var_2113, dtype="float32") /* ty=Tensor[(288), float32] */;
    %507 = reshape(%506, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), float32] */;
    %508 = @func_1645(%507) /* ty=(Tensor[(8, 6, 6), float64],) */;
    %509 = cast(%496, dtype="bool") /* ty=Tensor[(11, 15, ?), bool] */;
    %510 = cast(meta[relay.Constant][44] /* ty=Tensor[(720), int32] */, dtype="bool") /* ty=Tensor[(720), bool] */;
    %511 = logical_or(%488, %489) /* ty=Tensor[(11, 15, ?), bool] */;
    %512 = not_equal(%499, %500) /* ty=Tensor[(11, 15, ?), bool] */;
    %513 = %505.0;
    %514 = %508.0;
    %515 = logical_or(%509, %510) /* ty=Tensor[(11, 15, 720), bool] */;
    (%511, %512, %513, meta[relay.Constant][43] /* ty=Tensor[(45), int32] */, %514, %var_2113, %515)
  };
  %516(%var_2122, %var_2123) /* ty=(Tensor[(11, 15, ?), bool], Tensor[(11, 15, ?), bool], Tensor[(15, 3, 16), int32], Tensor[(45), int32], Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(11, 15, 720), bool]) */
}

def @func_3518(%var_3480: Tensor[(15, 1, 3), float64], %var_3489: Tensor[(6, 42), float64]) -> (Tensor[(15, 1, 3), float64], Tensor[(6, 7, 6), float64], Tensor[(6, 42), float64], Tensor[(15, 3, 16), int32], Tensor[(720, 1), int32]) {
  %517 = cast(%var_3480, dtype="float64") /* ty=Tensor[(15, 1, 3), float64] */;
  %518 = cast(%var_3489, dtype="float64") /* ty=Tensor[(6, 42), float64] */;
  %519 = reshape(%518, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), float64] */;
  %520 = cast(%var_3480, dtype="int32") /* ty=Tensor[(15, 1, 3), int32] */;
  %521 = cast(meta[relay.Constant][45] /* ty=Tensor[(720, 1), int32] */, dtype="int32") /* ty=Tensor[(720, 1), int32] */;
  %522 = reshape(%520, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), int32] */;
  %523 = reshape(%521, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), int32] */;
  %524 = @func_765(%522, %523) /* ty=(Tensor[(15, 3, 16), int32],) */;
  %525 = sinh(%517) /* ty=Tensor[(15, 1, 3), float64] */;
  %526 = @func_189(%519) /* ty=Tensor[(6, 7, 6), float64] */;
  %527 = %524.0;
  (%525, %526, %var_3489, %527, meta[relay.Constant][45] /* ty=Tensor[(720, 1), int32] */)
}

def @func_8443(%var_8441: Tensor[(8, 4, 8), uint16], %var_8442: Tensor[(8, 4, 8), float32]) -> (Tensor[(8, 4, 8), float32],) {
  @func_8439(%var_8441, %var_8442) /* ty=(Tensor[(8, 4, 8), float32],) */
}

def @func_6481(%var_6479: Tensor[(6, 1, 15), float64]) -> (Tensor[(6, 1, 15), float64],) {
  @func_6478(%var_6479) /* ty=(Tensor[(6, 1, 15), float64],) */
}

def @func_7256(%var_7252: Tensor[(8, 4, 6), int8], %var_7253: Tensor[(8, 4, 6), int8], %var_7254: Tensor[(30), int8], %var_7255: Tensor[(480), int8]) -> (Tensor[(8, 4, 6), int8], Tensor[(1408), int8], Tensor[(30), int8], Tensor[(480), int8], Tensor[(1755, 1), float32]) {
  %541 = fn (%var_7215: Tensor[(8, 4, 6), int8], %var_7216: Tensor[(8, 4, 6), int8], %var_7243: Tensor[(30), int8], %var_7244: Tensor[(480), int8]) -> (Tensor[(8, 4, 6), int8], Tensor[(1408), int8], Tensor[(30), int8], Tensor[(480), int8], Tensor[(1755, 1), float32]) {
    %528 = cast(%var_7216, dtype="int8") /* ty=Tensor[(8, 4, 6), int8] */;
    %529 = shape_of(%var_7215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %530 = cast(%var_7215, dtype="int8") /* ty=Tensor[(8, 4, 6), int8] */;
    %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %532 = cast(%var_7243, dtype="int8") /* ty=Tensor[(30), int8] */;
    %533 = cast(%var_7244, dtype="int8") /* ty=Tensor[(480), int8] */;
    %534 = cast(meta[relay.Constant][46] /* ty=Tensor[(1755, 1), float32] */, dtype="float32") /* ty=Tensor[(1755, 1), float32] */;
    %535 = reshape(%532, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), int8] */;
    %536 = reshape(%533, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), int8] */;
    %537 = reshape(%534, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %538 = @func_1326(%535, %536, %537) /* ty=(Tensor[(16, 5, 6), int8], Tensor[(11, 8, 16), int8], Tensor[(1755), float32], Tensor[(1408), int8], Tensor[(16, 5, 6), uint64]) */;
    %539 = left_shift(%530, %531) /* ty=Tensor[(8, 4, 6), int8] */;
    %540 = %538.3;
    (%539, %540, %var_7243, %var_7244, meta[relay.Constant][46] /* ty=Tensor[(1755, 1), float32] */)
  };
  %541(%var_7252, %var_7253, %var_7254, %var_7255) /* ty=(Tensor[(8, 4, 6), int8], Tensor[(1408), int8], Tensor[(30), int8], Tensor[(480), int8], Tensor[(1755, 1), float32]) */
}

def @func_8114(%var_8113: Tensor[(8, 12, 8), int32]) -> (Tensor[(8, 12, 8), bool], Tensor[(4, 6, 5), float64], Tensor[(120), float64]) {
  %549 = fn (%var_8097: Tensor[(8, 12, 8), int32]) -> (Tensor[(8, 12, 8), bool], Tensor[(4, 6, 5), float64], Tensor[(120), float64]) {
    %542 = cast(9 /* ty=int32 */, dtype="bool") /* ty=bool */;
    %543 = cast(%var_8097, dtype="bool") /* ty=Tensor[(8, 12, 8), bool] */;
    %544 = cast(meta[relay.Constant][47] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %545 = reshape(%544, newshape=[4, 6, 5]) /* ty=Tensor[(4, 6, 5), float64] */;
    %546 = @func_3724(%545) /* ty=(Tensor[(4, 6, 5), float64],) */;
    %547 = less_equal(%542, %543) /* ty=Tensor[(8, 12, 8), bool] */;
    %548 = %546.0;
    (%547, %548, meta[relay.Constant][47] /* ty=Tensor[(120), float64] */)
  };
  %549(%var_8113) /* ty=(Tensor[(8, 12, 8), bool], Tensor[(4, 6, 5), float64], Tensor[(120), float64]) */
}

def @func_3845(%var_3843: Tensor[(10, 13, 9), float32], %var_3844: Tensor[(10, 13, 9), float32]) -> Tensor[(10, 13, 9), float32] {
  @func_3841(%var_3843, %var_3844) /* ty=Tensor[(10, 13, 9), float32] */
}

def @func_5059(%var_5057: Tensor[(10, 8, 10), float64], %var_5058: Tensor[(1728), float32]) -> (Tensor[(10, 8, 10), float64], Tensor[(12, 9, 16), float32], Tensor[(1728), float32]) {
  %555 = fn (%var_5044: Tensor[(10, 8, 10), float64], %var_5051: Tensor[(1728), float32]) -> (Tensor[(10, 8, 10), float64], Tensor[(12, 9, 16), float32], Tensor[(1728), float32]) {
    %550 = cast(%var_5044, dtype="float64") /* ty=Tensor[(10, 8, 10), float64] */;
    %551 = cast(%var_5051, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %552 = reshape(%551, newshape=[12, 9, 16]) /* ty=Tensor[(12, 9, 16), float32] */;
    %553 = erf(%550) /* ty=Tensor[(10, 8, 10), float64] */;
    %554 = @func_4344(%552) /* ty=Tensor[(12, 9, 16), float32] */;
    (%553, %554, %var_5051)
  };
  %555(%var_5057, %var_5058) /* ty=(Tensor[(10, 8, 10), float64], Tensor[(12, 9, 16), float32], Tensor[(1728), float32]) */
}

def @func_4344(%var_4331: Tensor[(12, 9, 16), float32]) -> Tensor[(12, 9, 16), float32] {
  %556 = cast(%var_4331, dtype="float32") /* ty=Tensor[(12, 9, 16), float32] */;
  acosh(%556) /* ty=Tensor[(12, 9, 16), float32] */
}

def @func_743(%var_732: Tensor[(15, 9, 13), float32], %var_733: Tensor[(15, 9, 13), float32], %var_741: Tensor[(1408), int8]) -> (Tensor[(15, 9, 13), float32], Tensor[(11, 8, 16), int8], Tensor[(1408), int8]) {
  %557 = cast(%var_733, dtype="float32") /* ty=Tensor[(15, 9, 13), float32] */;
  %558 = shape_of(%var_732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%var_732, dtype="float32") /* ty=Tensor[(15, 9, 13), float32] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %561 = cast(%var_741, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %562 = cast(%var_741, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %563 = cast(%var_741, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %564 = reshape(%561, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %565 = reshape(%562, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %566 = reshape(%563, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %567 = @func_421(%564, %565, %566) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), uint32]) */;
  %568 = subtract(%559, %560) /* ty=Tensor[(15, 9, 13), float32] */;
  %569 = %567.0;
  (%568, %569, %var_741)
}

def @func_769(%var_767: Tensor[(15, 3, 1), int32], %var_768: Tensor[(15, 3, 16), int32]) -> (Tensor[(15, 3, 16), int32],) {
  @func_765(%var_767, %var_768) /* ty=(Tensor[(15, 3, 16), int32],) */
}

def @func_4304(%var_4302: Tensor[(14, 4, 15), int8], %var_4303: Tensor[(14, 4, 15), int8]) -> Tensor[(14, 4, 15), int8] {
  %574 = fn (%var_4290: Tensor[(14, 4, 15), int8], %var_4291: Tensor[(14, 4, 15), int8]) -> Tensor[(14, 4, 15), int8] {
    %570 = cast(%var_4291, dtype="int8") /* ty=Tensor[(14, 4, 15), int8] */;
    %571 = shape_of(%var_4290, dtype="int32") /* ty=Tensor[(3), int32] */;
    %572 = cast(%var_4290, dtype="int8") /* ty=Tensor[(14, 4, 15), int8] */;
    %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    multiply(%572, %573) /* ty=Tensor[(14, 4, 15), int8] */
  };
  %574(%var_4302, %var_4303) /* ty=Tensor[(14, 4, 15), int8] */
}

def @func_2317(%var_2316: Tensor[(2, 11, 14), bool]) -> (Tensor[(2, 11, 14), bool],) {
  %580 = fn (%var_2310: Tensor[(2, 11, 14), bool]) -> (Tensor[(2, 11, 14), bool],) {
    %575 = cast(%var_2310, dtype="bool") /* ty=Tensor[(2, 11, 14), bool] */;
    %576 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(2, 11, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %577 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 11, 14), bool] */, dtype="bool") /* ty=Tensor[(2, 11, 14), bool] */;
    %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %579 = logical_or(%577, %578) /* ty=Tensor[(2, 11, 14), bool] */;
    (%579,)
  };
  %580(%var_2316) /* ty=(Tensor[(2, 11, 14), bool],) */
}

def @func_6122(%var_6121: Tensor[(15, 7, 4), uint16]) -> Tensor[(15, 7, 4), bool] {
  %583 = fn (%var_6107: Tensor[(15, 7, 4), uint16]) -> Tensor[(15, 7, 4), bool] {
    %581 = cast(meta[relay.Constant][49] /* ty=uint16 */, dtype="bool") /* ty=bool */;
    %582 = cast(%var_6107, dtype="bool") /* ty=Tensor[(15, 7, 4), bool] */;
    less(%581, %582) /* ty=Tensor[(15, 7, 4), bool] */
  };
  %583(%var_6121) /* ty=Tensor[(15, 7, 4), bool] */
}

def @func_3841(%var_3835: Tensor[(10, 13, 9), float32], %var_3836: Tensor[(10, 13, 9), float32]) -> Tensor[(10, 13, 9), float32] {
  %584 = cast(%var_3836, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %585 = shape_of(%var_3835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%var_3835, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  maximum(%586, %587) /* ty=Tensor[(10, 13, 9), float32] */
}

def @func_4782(%var_4778: Tensor[(5, 6, 11), float64]) -> (Tensor[(5, 6, 11), float64],) {
  %588 = cast(%var_4778, dtype="float64") /* ty=Tensor[(5, 6, 11), float64] */;
  %589 = acosh(%588) /* ty=Tensor[(5, 6, 11), float64] */;
  (%589,)
}

def @func_7867(%var_7860: Tensor[(15, 3, 11), float64]) -> Tensor[(15, 3, 11), bool] {
  %590 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 3, 11), float64] */, dtype="bool") /* ty=Tensor[(15, 3, 11), bool] */;
  %591 = shape_of(%var_7860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%var_7860, dtype="bool") /* ty=Tensor[(15, 3, 11), bool] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%592, %593) /* ty=Tensor[(15, 3, 11), bool] */
}

def @func_765(%var_756: Tensor[(15, 3, 1), int32], %var_757: Tensor[(15, 3, 16), int32]) -> (Tensor[(15, 3, 16), int32],) {
  %594 = cast(%var_756, dtype="int32") /* ty=Tensor[(15, 3, 1), int32] */;
  %595 = cast(%var_757, dtype="int32") /* ty=Tensor[(15, 3, 16), int32] */;
  %596 = left_shift(%594, %595) /* ty=Tensor[(15, 3, 16), int32] */;
  (%596,)
}

def @func_3822(%var_3821: Tensor[(9, 13, 1), float64]) -> Tensor[(9, 13, ?), bool] {
  %605 = fn (%var_3798: Tensor[(9, 13, 1), float64]) -> Tensor[(9, 13, ?), bool] {
    %597 = cast(%var_3798, dtype="float64") /* ty=Tensor[(9, 13, 1), float64] */;
    %598 = sinh(%597) /* ty=Tensor[(9, 13, 1), float64] */;
    %599 = cast(%598, dtype="float64") /* ty=Tensor[(9, 13, 1), float64] */;
    %600 = sqrt(%599) /* ty=Tensor[(9, 13, 1), float64] */;
    %601 = cast(%598, dtype="bool") /* ty=Tensor[(9, 13, 1), bool] */;
    %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
    %603 = cast(%600, dtype="bool") /* ty=Tensor[(9, 13, 1), bool] */;
    %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%603, %604) /* ty=Tensor[(9, 13, ?), bool] */
  };
  %605(%var_3821) /* ty=Tensor[(9, 13, ?), bool] */
}

def @func_495(%var_494: Tensor[(3, 13, 9), float64]) -> (Tensor[(3, 13, 9), bool],) {
  %611 = fn (%var_480: Tensor[(3, 13, 9), float64]) -> (Tensor[(3, 13, 9), bool],) {
    %606 = cast(meta[relay.Constant][51] /* ty=Tensor[(3, 13, 9), float64] */, dtype="bool") /* ty=Tensor[(3, 13, 9), bool] */;
    %607 = shape_of(%var_480, dtype="int32") /* ty=Tensor[(3), int32] */;
    %608 = cast(%var_480, dtype="bool") /* ty=Tensor[(3, 13, 9), bool] */;
    %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %610 = not_equal(%608, %609) /* ty=Tensor[(3, 13, 9), bool] */;
    (%610,)
  };
  %611(%var_494) /* ty=(Tensor[(3, 13, 9), bool],) */
}

def @func_7311(%var_7261: Tensor[(16, 8, 16), int8], %var_7262: Tensor[(16, 8, 16), int8], %var_7269: Tensor[(2496), int8], %var_7272: Tensor[(252), float64], %var_7295: Tensor[(2, 144), float32], %var_7303: int32) -> (Tensor[(16, 8, 16), bool], Tensor[(12, 13, 16), int8], Tensor[(2496), int8], Tensor[(6, 7, 6), float64], Tensor[(252), float64], Tensor[(16, 7, 5), float64], Tensor[(80), uint64], Tensor[(165), float64], Tensor[(2, 144), float32], Tensor[(1, 7), int32], int32, Tensor[(7, 1), int32]) {
  %612 = cast(%var_7262, dtype="bool") /* ty=Tensor[(16, 8, 16), bool] */;
  %613 = shape_of(%var_7261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%var_7261, dtype="bool") /* ty=Tensor[(16, 8, 16), bool] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %616 = cast(%var_7269, dtype="int8") /* ty=Tensor[(2496), int8] */;
  %617 = cast(%var_7269, dtype="int8") /* ty=Tensor[(2496), int8] */;
  %618 = reshape(%616, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), int8] */;
  %619 = reshape(%617, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), int8] */;
  %620 = @func_7205(%618, %619) /* ty=(Tensor[(12, 13, 16), int8],) */;
  %621 = cast(%var_7272, dtype="float64") /* ty=Tensor[(252), float64] */;
  %622 = reshape(%621, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), float64] */;
  %623 = cast(meta[relay.Constant][52] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %624 = cast(meta[relay.Constant][53] /* ty=Tensor[(165), float64] */, dtype="float64") /* ty=Tensor[(165), float64] */;
  %625 = cast(%var_7295, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %626 = reshape(%623, newshape=[16, 1, 5]) /* ty=Tensor[(16, 1, 5), uint64] */;
  %627 = reshape(%624, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %628 = reshape(%625, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %629 = @func_6807(%626, %627, %628) /* ty=(Tensor[(16, 7, 5), uint64], Tensor[(16, 7, 5), float64], Tensor[(45), int32], Tensor[(165), float64], Tensor[(288), float32]) */;
  %630 = cast(%var_7303, dtype="int32") /* ty=int32 */;
  %631 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 1), int32] */, dtype="int32") /* ty=Tensor[(7, 1), int32] */;
  %632 = reshape(%630, newshape=[]) /* ty=int32 */;
  %633 = reshape(%631, newshape=[1, 7]) /* ty=Tensor[(1, 7), int32] */;
  %634 = @func_1612(%632, %633) /* ty=(Tensor[(1, 7), int32],) */;
  %635 = less_equal(%614, %615) /* ty=Tensor[(16, 8, 16), bool] */;
  %636 = %620.0;
  %637 = @func_189(%622) /* ty=Tensor[(6, 7, 6), float64] */;
  %638 = %629.1;
  %639 = %634.0;
  (%635, %636, %var_7269, %637, %var_7272, %638, meta[relay.Constant][52] /* ty=Tensor[(80), uint64] */, meta[relay.Constant][53] /* ty=Tensor[(165), float64] */, %var_7295, %639, %var_7303, meta[relay.Constant][54] /* ty=Tensor[(7, 1), int32] */)
}

def @func_9404(%var_9402: Tensor[(15, 2, 5), float32], %var_9403: Tensor[(15, 2, 5), float32]) -> Tensor[(15, 2, 5), bool] {
  %644 = fn (%var_9389: Tensor[(15, 2, 5), float32], %var_9390: Tensor[(15, 2, 5), float32]) -> Tensor[(15, 2, 5), bool] {
    %640 = cast(%var_9390, dtype="bool") /* ty=Tensor[(15, 2, 5), bool] */;
    %641 = shape_of(%var_9389, dtype="int32") /* ty=Tensor[(3), int32] */;
    %642 = cast(%var_9389, dtype="bool") /* ty=Tensor[(15, 2, 5), bool] */;
    %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%642, %643) /* ty=Tensor[(15, 2, 5), bool] */
  };
  %644(%var_9402, %var_9403) /* ty=Tensor[(15, 2, 5), bool] */
}

def @func_8882(%var_8881: Tensor[(1, 5, 15), float32]) -> (Tensor[(1, 5, 15), float32],) {
  %647 = fn (%var_8877: Tensor[(1, 5, 15), float32]) -> (Tensor[(1, 5, 15), float32],) {
    %645 = cast(%var_8877, dtype="float32") /* ty=Tensor[(1, 5, 15), float32] */;
    %646 = erf(%645) /* ty=Tensor[(1, 5, 15), float32] */;
    (%646,)
  };
  %647(%var_8881) /* ty=(Tensor[(1, 5, 15), float32],) */
}

def @func_9590(%var_9589: Tensor[(4, 1, 7), float64]) -> Tensor[(4, 1, 7), float64] {
  %649 = fn (%var_9581: Tensor[(4, 1, 7), float64]) -> Tensor[(4, 1, 7), float64] {
    %648 = cast(%var_9581, dtype="float64") /* ty=Tensor[(4, 1, 7), float64] */;
    atan(%648) /* ty=Tensor[(4, 1, 7), float64] */
  };
  %649(%var_9589) /* ty=Tensor[(4, 1, 7), float64] */
}

def @func_4508(%var_4503: Tensor[(9, 2, 5), float32]) -> Tensor[(9, 2, 5), float32] {
  %650 = cast(%var_4503, dtype="float32") /* ty=Tensor[(9, 2, 5), float32] */;
  log10(%650) /* ty=Tensor[(9, 2, 5), float32] */
}

def @func_6446(%var_6427: Tensor[(3, 10, 7), float32]) -> (Tensor[(3, 10, 7), float32], Tensor[(3, 10, 7), float32]) {
  %651 = cast(%var_6427, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
  %652 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(3, 10, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(meta[relay.Constant][55] /* ty=Tensor[(3, 10, 7), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %655 = cast(%var_6427, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
  %656 = divide(%653, %654) /* ty=Tensor[(3, 10, 7), float32] */;
  %657 = sinh(%655) /* ty=Tensor[(3, 10, 7), float32] */;
  (%656, %657)
}

def @func_552(%var_550: Tensor[(11, 2, 10), uint8], %var_551: Tensor[(11, 2, 10), uint8]) -> (Tensor[(11, 2, 10), bool],) {
  %663 = fn (%var_538: Tensor[(11, 2, 10), uint8], %var_539: Tensor[(11, 2, 10), uint8]) -> (Tensor[(11, 2, 10), bool],) {
    %658 = cast(%var_539, dtype="bool") /* ty=Tensor[(11, 2, 10), bool] */;
    %659 = shape_of(%var_538, dtype="int32") /* ty=Tensor[(3), int32] */;
    %660 = cast(%var_538, dtype="bool") /* ty=Tensor[(11, 2, 10), bool] */;
    %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %662 = greater(%660, %661) /* ty=Tensor[(11, 2, 10), bool] */;
    (%662,)
  };
  %663(%var_550, %var_551) /* ty=(Tensor[(11, 2, 10), bool],) */
}

def @func_4650(%var_4648: Tensor[(288), float32]) -> (Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(10, 1, 4), float32]) {
  @func_4647(%var_4648) /* ty=(Tensor[(8, 6, 6), float64], Tensor[(288), float32], Tensor[(10, 1, 4), float32]) */
}

def @func_677(%var_675: Tensor[(252), float64]) -> (Tensor[(10, 4, 7), float64], Tensor[(6, 7, 6), float64], Tensor[(252), float64]) {
  %664 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 4, 7), float64] */, dtype="float64") /* ty=Tensor[(10, 4, 7), float64] */;
  %665 = cast(%var_675, dtype="float64") /* ty=Tensor[(252), float64] */;
  %666 = reshape(%665, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), float64] */;
  %667 = atanh(%664) /* ty=Tensor[(10, 4, 7), float64] */;
  %668 = @func_189(%666) /* ty=Tensor[(6, 7, 6), float64] */;
  (%667, %668, %var_675)
}

def @func_421(%var_392: Tensor[(11, 8, 16), int8], %var_393: Tensor[(11, 8, 16), int8], %var_414: Tensor[(11, 8, 16), int8]) -> (Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), uint32]) {
  %669 = cast(%var_393, dtype="int8") /* ty=Tensor[(11, 8, 16), int8] */;
  %670 = shape_of(%var_392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%var_392, dtype="int8") /* ty=Tensor[(11, 8, 16), int8] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %673 = cast(%var_414, dtype="uint32") /* ty=Tensor[(11, 8, 16), uint32] */;
  %674 = shape_of(%var_392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(%var_392, dtype="uint32") /* ty=Tensor[(11, 8, 16), uint32] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %677 = logical_xor(%671, %672) /* ty=Tensor[(11, 8, 16), int8] */;
  %678 = right_shift(%675, %676) /* ty=Tensor[(11, 8, 16), uint32] */;
  (%677, %678)
}

def @func_9437(%var_9435: Tensor[(5, 16, 7), uint16], %var_9436: Tensor[(5, 16, 7), uint16]) -> Tensor[(5, 16, 7), uint16] {
  @func_9433(%var_9435, %var_9436) /* ty=Tensor[(5, 16, 7), uint16] */
}

def @func_7870(%var_7868: Tensor[(15, 3, 11), float64]) -> Tensor[(15, 3, 11), bool] {
  @func_7867(%var_7868) /* ty=Tensor[(15, 3, 11), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 0, found 3

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

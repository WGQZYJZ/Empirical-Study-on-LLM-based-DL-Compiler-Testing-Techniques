==========mod==========
#[version = "0.0.5"]
def @func_10974() -> Tensor[(216), float32] {
  %0 = @func_8594() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(216), float32]) */;
  %0.1
}

def @func_1127(%var_1123: Tensor[(8, 2, 8), uint8]) -> (Tensor[(8, 2, 8), bool],) {
  %1 = cast(meta[relay.Constant][0] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %2 = cast(%var_1123, dtype="bool") /* ty=Tensor[(8, 2, 8), bool] */;
  %3 = greater_equal(%1, %2) /* ty=Tensor[(8, 2, 8), bool] */;
  (%3,)
}

def @func_11024() -> (Tensor[(30), int8],) {
  %4 = @func_8663() /* ty=(Tensor[(75), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1, 1050), float64]) */;
  %5 = %4.3;
  (%5,)
}

def @func_11251() -> (Tensor[(5, 9, 16), float32], Tensor[(5, 9, 16), float32]) {
  %6 = @func_8042() /* ty=(Tensor[(5, 9, 16), float32],) */;
  %7 = @func_10313() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(1152), float64], Tensor[(5, 9, 16), float32]) */;
  %8 = %6.0;
  %9 = %7.2;
  (%8, %9)
}

def @func_9094() -> (Tensor[(5, 8, 8), float32],) {
  %10 = @func_8726() /* ty=(Tensor[(8, 3, 9), float32], Tensor[(5, 8, 8), float32]) */;
  %11 = %10.1;
  (%11,)
}

def @func_1257(%var_1186: Tensor[(5, 1, 14), uint16], %var_1187: Tensor[(5, 11, 14), uint16], %var_1196: Tensor[(5, 11, 14), uint16], %var_1210: Tensor[(364), uint8]) -> (Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) {
  %12 = cast(%var_1186, dtype="uint16") /* ty=Tensor[(5, 1, 14), uint16] */;
  %13 = cast(%var_1187, dtype="uint16") /* ty=Tensor[(5, 11, 14), uint16] */;
  %14 = left_shift(%12, %13) /* ty=Tensor[(5, 11, 14), uint16] */;
  %15 = cast(%var_1196, dtype="float64") /* ty=Tensor[(5, 11, 14), float64] */;
  %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%14, dtype="float64") /* ty=Tensor[(5, 11, 14), float64] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %19 = cast(%var_1210, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %20 = cast(%var_1210, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %21 = reshape(%19, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %22 = reshape(%20, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %23 = @func_881(%21, %22) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %24 = cast(%14, dtype="float64") /* ty=Tensor[(5, 11, 14), float64] */;
  %25 = %23.2;
  %26 = cast(%25, dtype="int8") /* ty=Tensor[(5, 6), int8] */;
  %27 = reshape(%26, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %28 = cast(%var_1210, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %29 = cast(%var_1210, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %30 = reshape(%28, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %31 = reshape(%29, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %32 = @func_881(%30, %31) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %33 = cast(%25, dtype="int8") /* ty=Tensor[(5, 6), int8] */;
  %34 = reshape(%33, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %35 = cast(%25, dtype="int8") /* ty=Tensor[(5, 6), int8] */;
  %36 = reshape(%35, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %37 = @func_306(%36) /* ty=Tensor[(10, ?, 3), int8] */;
  %38 = cast(%37, dtype="float32") /* ty=Tensor[(10, ?, 3), float32] */;
  %39 = floor_mod(%17, %18) /* ty=Tensor[(5, 11, 14), float64] */;
  %40 = sinh(%24) /* ty=Tensor[(5, 11, 14), float64] */;
  %41 = @func_306(%27) /* ty=Tensor[(10, ?, 3), int8] */;
  %42 = %32.1;
  %43 = @func_306(%34) /* ty=Tensor[(10, ?, 3), int8] */;
  %44 = sigmoid(%38) /* ty=Tensor[(10, ?, 3), float32] */;
  (%39, %25, %var_1210, %40, %41, %42, %43, %44)
}

def @func_8383() -> (Tensor[(320), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(1152), float64], Tensor[(588), uint8]) {
  %45 = @func_7133() /* ty=(Tensor[(320), float64],) */;
  %46 = cast(meta[relay.Constant][1] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %47 = reshape(%46, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %48 = cast(meta[relay.Constant][2] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %49 = reshape(%48, newshape=[588, 1]) /* ty=Tensor[(588, 1), uint8] */;
  %50 = @func_8014(%49) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(7, 6, 14), uint8], Tensor[(588, 1), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
  %51 = %45.0;
  %52 = @func_1612(%47) /* ty=Tensor[(5, 14, 15), float64] */;
  %53 = %50.4;
  (%51, %52, meta[relay.Constant][1] /* ty=Tensor[(1050), float64] */, %53, meta[relay.Constant][2] /* ty=Tensor[(588), uint8] */)
}

def @func_10928() -> Tensor[(5, 14, 15), float64] {
  %54 = @func_9206() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %54.0
}

def @func_6462() -> Tensor[(5, 9, 16), float64] {
  %55 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %55.0
}

def @func_10831() -> (Tensor[(75), float32], Tensor[(5, 9, 16), float64]) {
  %56 = @func_6671() /* ty=Tensor[(75), float32] */;
  %57 = @func_10123() /* ty=Tensor[(5, 9, 16), float64] */;
  (%56, %57)
}

def @func_9401() -> (Tensor[(5, 9, 16), float64], Tensor[(216), float32]) {
  %58 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %59 = @func_8594() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(216), float32]) */;
  %60 = %58.0;
  %61 = %59.1;
  (%60, %61)
}

def @func_6947(%var_6939: Tensor[(5, 6), int8]) -> (Tensor[(5, 9, 16), float64], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) {
  %62 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %63 = cast(%var_6939, dtype="int8") /* ty=Tensor[(5, 6), int8] */;
  %64 = reshape(%63, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %65 = %62.0;
  %66 = @func_306(%64) /* ty=Tensor[(10, ?, 3), int8] */;
  (%65, %66, %var_6939)
}

def @func_8671() -> Tensor[(5, 9, 16), float64] {
  @func_6462() /* ty=Tensor[(5, 9, 16), float64] */
}

def @func_1612(%var_1605: Tensor[(5, 14, 15), float64]) -> Tensor[(5, 14, 15), float64] {
  %67 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 15), float64] */;
  %68 = shape_of(%var_1605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%var_1605, dtype="float64") /* ty=Tensor[(5, 14, 15), float64] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  maximum(%69, %70) /* ty=Tensor[(5, 14, 15), float64] */
}

def @func_7312(%var_7306: Tensor[(728), float64], %var_7307: Tensor[(2340), float32]) -> (Tensor[(320), float64], Tensor[(12, 13, 15), float32], Tensor[(728), float64], Tensor[(2340), float32]) {
  %71 = @func_7133() /* ty=(Tensor[(320), float64],) */;
  %72 = cast(%var_7306, dtype="float64") /* ty=Tensor[(728), float64] */;
  %73 = cast(%var_7307, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %74 = reshape(%72, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
  %75 = reshape(%73, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %76 = @func_3611(%74, %75) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) */;
  %77 = %71.0;
  %78 = %76.1;
  (%77, %78, %var_7306, %var_7307)
}

def @func_8165() -> (Tensor[(320), float64], Tensor[(5, 14, 15), float64], Tensor[(5, 210), float64], Tensor[(1152), float64]) {
  %79 = @func_7133() /* ty=(Tensor[(320), float64],) */;
  %80 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 210), float64] */, dtype="float64") /* ty=Tensor[(5, 210), float64] */;
  %81 = reshape(%80, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %82 = @func_7538() /* ty=(Tensor[(1152), float64],) */;
  %83 = %79.0;
  %84 = @func_1612(%81) /* ty=Tensor[(5, 14, 15), float64] */;
  %85 = %82.0;
  (%83, %84, meta[relay.Constant][4] /* ty=Tensor[(5, 210), float64] */, %85)
}

def @func_5777(%var_5746: Tensor[(14, 6, 4), float32], %var_5764: Tensor[(320), float64]) -> (Tensor[(14, 6, 4), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) {
  %86 = cast(%var_5746, dtype="float32") /* ty=Tensor[(14, 6, 4), float32] */;
  %87 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(14, 6, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 6, 4), float32] */, dtype="float32") /* ty=Tensor[(14, 6, 4), float32] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %90 = mod(%88, %89) /* ty=Tensor[(14, 6, 4), float32] */;
  %91 = cast(%90, dtype="bool") /* ty=Tensor[(14, 6, 4), bool] */;
  %92 = shape_of(%var_5746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%var_5746, dtype="bool") /* ty=Tensor[(14, 6, 4), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %95 = cast(%var_5764, dtype="float64") /* ty=Tensor[(320), float64] */;
  %96 = cast(%var_5764, dtype="float64") /* ty=Tensor[(320), float64] */;
  %97 = reshape(%95, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %98 = reshape(%96, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %99 = less_equal(%93, %94) /* ty=Tensor[(14, 6, 4), bool] */;
  %100 = @func_3818(%97, %98) /* ty=Tensor[(5, 8, 8), float64] */;
  (%99, %100, %var_5764)
}

def @func_7874(%var_7863: Tensor[(30, 1), int8]) -> (Tensor[(1050), float64], Tensor[(1120), float32], Tensor[(10, ?, 3), int8], Tensor[(30, 1), int8]) {
  %101 = @func_6843() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
  %102 = @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */;
  %103 = %102.3;
  %104 = cast(%103, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %105 = cast(%103, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %106 = cast(%103, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %107 = cast(%var_7863, dtype="int8") /* ty=Tensor[(30, 1), int8] */;
  %108 = %101.3;
  %109 = cast(%108, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %110 = reshape(%104, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %111 = reshape(%105, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %112 = reshape(%106, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
  %113 = reshape(%107, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %114 = reshape(%109, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %115 = @func_1834(%110, %111, %112, %113, %114) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
  %116 = %115.3;
  (%108, %103, %116, %var_7863)
}

def @func_6677() -> Tensor[(75), float32] {
  @func_6240() /* ty=Tensor[(75), float32] */
}

def @func_881(%var_865: Tensor[(13, 4, 7), uint8], %var_866: Tensor[(13, 4, 7), uint8]) -> (Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) {
  %117 = cast(%var_866, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
  %118 = shape_of(%var_865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%var_865, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %121 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 6), int8] */, dtype="int8") /* ty=Tensor[(5, 6), int8] */;
  %122 = reshape(%121, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %123 = less_equal(%119, %120) /* ty=Tensor[(13, 4, 7), bool] */;
  %124 = @func_306(%122) /* ty=Tensor[(10, ?, 3), int8] */;
  (%123, %124, meta[relay.Constant][6] /* ty=Tensor[(5, 6), int8] */)
}

def @func_6200() -> (Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) {
  %125 = cast(meta[relay.Constant][7] /* ty=Tensor[(75), float32] */, dtype="float32") /* ty=Tensor[(75), float32] */;
  %126 = reshape(%125, newshape=[5, 15, 1]) /* ty=Tensor[(5, 15, 1), float32] */;
  %127 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 9, 16), float32] */, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %128 = sin(%127) /* ty=Tensor[(5, 9, 16), float32] */;
  %129 = cast(%128, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %130 = cast(meta[relay.Constant][9] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %131 = reshape(%130, newshape=[8, 3, 9]) /* ty=Tensor[(8, 3, 9), float32] */;
  %132 = @func_4779(%131) /* ty=(Tensor[(8, 3, 9), float32],) */;
  %133 = @func_5825(%126) /* ty=Tensor[(5, 15, 1), float32] */;
  %134 = sqrt(%129) /* ty=Tensor[(5, 9, 16), float64] */;
  %135 = %132.0;
  (%133, meta[relay.Constant][7] /* ty=Tensor[(75), float32] */, %134, %135, meta[relay.Constant][9] /* ty=Tensor[(216), float32] */)
}

def @func_7179() -> (Tensor[(5, 14, 15), float64],) {
  %136 = @func_6843() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
  %137 = %136.2;
  (%137,)
}

def @func_8637(%var_8624: Tensor[(1152), float64]) -> (Tensor[(5, 9, 16), float64], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(1152), float64], Tensor[(75), float32]) {
  %138 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %139 = %138.0;
  %140 = cast(%139, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %141 = cast(meta[relay.Constant][10] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %142 = cast(%var_8624, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %143 = reshape(%140, newshape=[12, 60]) /* ty=Tensor[(12, 60), float64] */;
  %144 = reshape(%141, newshape=[320]) /* ty=Tensor[(320), float64] */;
  %145 = reshape(%142, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %146 = @func_7273(%143, %144, %145) /* ty=(Tensor[(75), float32], Tensor[(5, 9, 16), bool], Tensor[(12, 60), float64], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(12, 6, 16), bool]) */;
  %147 = %146.3;
  %148 = @func_6671() /* ty=Tensor[(75), float32] */;
  (%139, %147, meta[relay.Constant][10] /* ty=Tensor[(320), float64] */, %var_8624, %148)
}

def @func_4779(%var_4759: Tensor[(8, 3, 9), float32]) -> (Tensor[(8, 3, 9), float32],) {
  %149 = cast(%var_4759, dtype="float32") /* ty=Tensor[(8, 3, 9), float32] */;
  %150 = log2(%149) /* ty=Tensor[(8, 3, 9), float32] */;
  (%150,)
}

def @func_6653() -> (Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) {
  %151 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %152 = cast(meta[relay.Constant][11] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %153 = cast(meta[relay.Constant][12] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %154 = reshape(%152, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), float64] */;
  %155 = reshape(%153, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %156 = @func_2680(%154, %155) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(1120), float32], Tensor[(30, 1), int8], Tensor[(1050, 1), float64], Tensor[(10, 16, 8), uint8], Tensor[(5, 14, 15), float64]) */;
  %157 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %158 = %151.0;
  %159 = %156.3;
  %160 = %157.1;
  (%158, %159, meta[relay.Constant][11] /* ty=Tensor[(1280), float64] */, meta[relay.Constant][12] /* ty=Tensor[(1120), float32] */, %160)
}

def @func_7034(%var_6987: Tensor[(364), uint8], %var_6991: Tensor[(320), float64], %var_6999: Tensor[(2340), float32]) -> (Tensor[(5, 9, 16), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) {
  %161 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %162 = cast(%var_6987, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %163 = cast(%var_6987, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %164 = reshape(%162, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %165 = reshape(%163, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %166 = @func_881(%164, %165) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %167 = cast(%var_6991, dtype="float64") /* ty=Tensor[(320), float64] */;
  %168 = cast(%var_6991, dtype="float64") /* ty=Tensor[(320), float64] */;
  %169 = reshape(%167, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %170 = reshape(%168, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %171 = cast(%var_6999, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %172 = cast(%var_6999, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %173 = reshape(%171, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %174 = reshape(%172, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %175 = @func_2109(%173, %174) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */;
  %176 = %161.0;
  %177 = %166.2;
  %178 = @func_3818(%169, %170) /* ty=Tensor[(5, 8, 8), float64] */;
  %179 = %175.0;
  (%176, %177, %var_6987, %178, %var_6991, %179, %var_6999)
}

def @func_11204(%var_11192: Tensor[(6, 13, 9), float64], %var_11200: Tensor[(720), float64]) -> (Tensor[(6, 13, 9), float64], Tensor[(5, 9, 16), uint8], Tensor[(720), float64]) {
  %180 = cast(%var_11192, dtype="float64") /* ty=Tensor[(6, 13, 9), float64] */;
  %181 = cast(%var_11200, dtype="float64") /* ty=Tensor[(720), float64] */;
  %182 = cast(%var_11200, dtype="int16") /* ty=Tensor[(720), int16] */;
  %183 = reshape(%181, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float64] */;
  %184 = reshape(%182, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), int16] */;
  %185 = @func_6336(%183, %184) /* ty=(Tensor[(5, 9, 16), bool], Tensor[(5, 9, 16), uint8], Tensor[(?, 75), float64]) */;
  %186 = log10(%180) /* ty=Tensor[(6, 13, 9), float64] */;
  %187 = %185.1;
  (%186, %187, %var_11200)
}

def @func_7273(%var_7244: Tensor[(12, 60), float64], %var_7263: Tensor[(320), float64], %var_7266: Tensor[(12, 6, 16), float64]) -> (Tensor[(75), float32], Tensor[(5, 9, 16), bool], Tensor[(12, 60), float64], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(12, 6, 16), bool]) {
  %188 = cast(%var_7244, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
  %189 = cast(%var_7244, dtype="int16") /* ty=Tensor[(12, 60), int16] */;
  %190 = reshape(%188, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float64] */;
  %191 = reshape(%189, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), int16] */;
  %192 = @func_6336(%190, %191) /* ty=(Tensor[(5, 9, 16), bool], Tensor[(5, 9, 16), uint8], Tensor[(?, 75), float64]) */;
  %193 = cast(%var_7263, dtype="float64") /* ty=Tensor[(320), float64] */;
  %194 = cast(%var_7263, dtype="float64") /* ty=Tensor[(320), float64] */;
  %195 = reshape(%193, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %196 = reshape(%194, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %197 = @func_6433() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
  %198 = %197.1;
  %199 = cast(%var_7266, dtype="bool") /* ty=Tensor[(12, 6, 16), bool] */;
  %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%198, dtype="bool") /* ty=Tensor[(12, 6, 16), bool] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %203 = @func_6677() /* ty=Tensor[(75), float32] */;
  %204 = %192.0;
  %205 = @func_3818(%195, %196) /* ty=Tensor[(5, 8, 8), float64] */;
  %206 = not_equal(%201, %202) /* ty=Tensor[(12, 6, 16), bool] */;
  (%203, %204, %var_7244, %205, %var_7263, %206)
}

def @func_4244(%var_4223: Tensor[(8, 11, 5), float32]) -> (Tensor[(8, 11, 5), float32], Tensor[(2340), float32], Tensor[(14, 52), float64], Tensor[(2340), float32]) {
  %207 = cast(%var_4223, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
  %208 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 52), float64] */, dtype="float64") /* ty=Tensor[(14, 52), float64] */;
  %209 = cast(meta[relay.Constant][14] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %210 = reshape(%208, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
  %211 = reshape(%209, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %212 = @func_3611(%210, %211) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) */;
  %213 = cosh(%207) /* ty=Tensor[(8, 11, 5), float32] */;
  %214 = %212.2;
  (%213, %214, meta[relay.Constant][13] /* ty=Tensor[(14, 52), float64] */, meta[relay.Constant][14] /* ty=Tensor[(2340), float32] */)
}

def @func_6240() -> Tensor[(75), float32] {
  %215 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %215.1
}

def @func_7778() -> (Tensor[(5, 14, 15), float64],) {
  %216 = @func_7179() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %217 = %216.0;
  (%217,)
}

def @func_4900(%var_4879: int32) -> (Tensor[(13, 16, 10), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) {
  %218 = cast(%var_4879, dtype="bool") /* ty=bool */;
  %219 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 16, 10), int32] */, dtype="bool") /* ty=Tensor[(13, 16, 10), bool] */;
  %220 = cast(meta[relay.Constant][16] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %221 = cast(meta[relay.Constant][16] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %222 = reshape(%220, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %223 = reshape(%221, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %224 = less(%218, %219) /* ty=Tensor[(13, 16, 10), bool] */;
  %225 = @func_3818(%222, %223) /* ty=Tensor[(5, 8, 8), float64] */;
  (%224, %225, meta[relay.Constant][16] /* ty=Tensor[(320), float64] */)
}

def @func_8340() -> (Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(320), float64], Tensor[(336), float32], Tensor[(320), float64]) {
  %226 = @func_6843() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
  %227 = cast(meta[relay.Constant][17] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %228 = cast(meta[relay.Constant][18] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %229 = reshape(%227, newshape=[14, 6, 4]) /* ty=Tensor[(14, 6, 4), float32] */;
  %230 = reshape(%228, newshape=[320]) /* ty=Tensor[(320), float64] */;
  %231 = @func_5777(%229, %230) /* ty=(Tensor[(14, 6, 4), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */;
  %232 = @func_6390() /* ty=Tensor[(5, 9, 16), float64] */;
  %233 = %226.1;
  %234 = %231.2;
  (%232, %233, %234, meta[relay.Constant][17] /* ty=Tensor[(336), float32] */, meta[relay.Constant][18] /* ty=Tensor[(320), float64] */)
}

def @func_9523() -> Tensor[(320), float64] {
  %235 = @func_8841() /* ty=(Tensor[(320), float64],) */;
  %235.0
}

def @func_10746(%var_10740: Tensor[(2340), float32]) -> (Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(2340), float32]) {
  %236 = cast(%var_10740, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %237 = cast(%var_10740, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %238 = reshape(%236, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %239 = reshape(%237, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %240 = @func_2109(%238, %239) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */;
  %241 = @func_6256() /* ty=Tensor[(5, 9, 16), float64] */;
  %242 = %240.1;
  (%241, %242, %var_10740)
}

def @func_3611(%var_3592: Tensor[(8, 13, 7), float64], %var_3603: Tensor[(2340), float32]) -> (Tensor[(8, 13, 7), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) {
  %243 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 13, 7), float64] */, dtype="float64") /* ty=Tensor[(8, 13, 7), float64] */;
  %244 = shape_of(%var_3592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%var_3592, dtype="float64") /* ty=Tensor[(8, 13, 7), float64] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %247 = cast(%var_3603, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %248 = cast(%var_3603, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %249 = reshape(%247, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %250 = reshape(%248, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %251 = @func_2109(%249, %250) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */;
  %252 = cast(%var_3603, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %253 = floor_mod(%245, %246) /* ty=Tensor[(8, 13, 7), float64] */;
  %254 = %251.0;
  %255 = sinh(%252) /* ty=Tensor[(2340), float32] */;
  (%253, %254, %255)
}

def @func_10540(%var_10519: Tensor[(1152), float64], %var_10531: int32) -> (Tensor[(8, 3, 9), float32], Tensor[(5, 8, 8), float64], Tensor[(1152), float64], int32, Tensor[(5, 8, 8), float64], Tensor[(5, 8, 8), float32]) {
  %256 = @func_8920() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %257 = cast(%var_10519, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %258 = reshape(%257, newshape=[1152]) /* ty=Tensor[(1152), float64] */;
  %259 = @func_8637(%258) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(1152), float64], Tensor[(75), float32]) */;
  %260 = cast(%var_10531, dtype="int32") /* ty=int32 */;
  %261 = reshape(%260, newshape=[]) /* ty=int32 */;
  %262 = @func_4900(%261) /* ty=(Tensor[(13, 16, 10), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */;
  %263 = %262.1;
  %264 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
  %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%263, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %268 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 8, 8), float64] */, dtype="float32") /* ty=Tensor[(5, 8, 8), float32] */;
  %269 = %256.2;
  %270 = %259.1;
  %271 = add(%266, %267) /* ty=Tensor[(5, 8, 8), float64] */;
  %272 = sigmoid(%268) /* ty=Tensor[(5, 8, 8), float32] */;
  (%269, %270, %var_10519, %var_10531, %271, %272)
}

def @func_8920() -> (Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) {
  %273 = cast(meta[relay.Constant][21] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %274 = reshape(%273, newshape=[8, 3, 9]) /* ty=Tensor[(8, 3, 9), float32] */;
  %275 = @func_4779(%274) /* ty=(Tensor[(8, 3, 9), float32],) */;
  %276 = @func_6462() /* ty=Tensor[(5, 9, 16), float64] */;
  %277 = @func_6256() /* ty=Tensor[(5, 9, 16), float64] */;
  %278 = %275.0;
  (%276, %277, %278, meta[relay.Constant][21] /* ty=Tensor[(216), float32] */)
}

def @func_9206() -> (Tensor[(5, 14, 15), float64],) {
  %279 = @func_7179() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %280 = %279.0;
  (%280,)
}

def @func_8841() -> (Tensor[(320), float64],) {
  %281 = @func_7133() /* ty=(Tensor[(320), float64],) */;
  %282 = %281.0;
  (%282,)
}

def @func_10733() -> Tensor[(320), float64] {
  %283 = @func_8340() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(320), float64], Tensor[(336), float32], Tensor[(320), float64]) */;
  %283.2
}

def @func_11013() -> Tensor[(?, 75), float64] {
  %284 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %284.1
}

def @func_7076() -> Tensor[(5, 9, 16), float32] {
  %285 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %286 = %285.0;
  %287 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 9, 16), float64] */, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%286, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%289, %290) /* ty=Tensor[(5, 9, 16), float32] */
}

def @func_9422() -> Tensor[(5, 9, 16), float32] {
  %291 = @func_9401() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(216), float32]) */;
  %292 = %291.0;
  %293 = cast(%292, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  sinh(%293) /* ty=Tensor[(5, 9, 16), float32] */
}

def @func_7597() -> (Tensor[(5, 14, 15), float64],) {
  %294 = @func_7350() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %295 = %294.0;
  (%295,)
}

def @func_9188() -> (Tensor[(5, 8, 8), float32], Tensor[(5, 9, 16), float32]) {
  %296 = @func_9094() /* ty=(Tensor[(5, 8, 8), float32],) */;
  %297 = %296.0;
  %298 = @func_7076() /* ty=Tensor[(5, 9, 16), float32] */;
  (%297, %298)
}

def @func_8014(%var_8005: Tensor[(588, 1), uint8]) -> (Tensor[(5, 9, 16), float64], Tensor[(7, 6, 14), uint8], Tensor[(588, 1), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) {
  %299 = cast(%var_8005, dtype="uint8") /* ty=Tensor[(588, 1), uint8] */;
  %300 = reshape(%299, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), uint8] */;
  %301 = cast(meta[relay.Constant][23] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %302 = reshape(%301, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %303 = @func_6390() /* ty=Tensor[(5, 9, 16), float64] */;
  %304 = @func_7491(%300) /* ty=Tensor[(7, 6, 14), uint8] */;
  %305 = @func_2336(%302) /* ty=Tensor[(12, 6, 16), float64] */;
  (%303, %304, %var_8005, %305, meta[relay.Constant][23] /* ty=Tensor[(1152), float64] */)
}

def @func_10313() -> (Tensor[(5, 14, 15), float64], Tensor[(1152), float64], Tensor[(5, 9, 16), float32]) {
  %306 = @func_8453() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(12, 6, 16), float64]) */;
  %307 = @func_8165() /* ty=(Tensor[(320), float64], Tensor[(5, 14, 15), float64], Tensor[(5, 210), float64], Tensor[(1152), float64]) */;
  %308 = @func_8042() /* ty=(Tensor[(5, 9, 16), float32],) */;
  %309 = %306.1;
  %310 = %307.3;
  %311 = %308.0;
  (%309, %310, %311)
}

def @func_9774(%var_9759: Tensor[(1050), float64]) -> (Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) {
  %312 = @func_8920() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %313 = cast(%var_9759, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %314 = reshape(%313, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %315 = %312.2;
  %316 = @func_1612(%314) /* ty=Tensor[(5, 14, 15), float64] */;
  (%315, %316, %var_9759)
}

def @func_5674(%var_5598: Tensor[(10, 5, 7), uint32], %var_5599: Tensor[(10, 5, 7), uint32], %var_5641: Tensor[(30), int8]) -> (Tensor[(10, 5, 7), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) {
  %317 = cast(%var_5599, dtype="uint32") /* ty=Tensor[(10, 5, 7), uint32] */;
  %318 = shape_of(%var_5598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%var_5598, dtype="uint32") /* ty=Tensor[(10, 5, 7), uint32] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %321 = right_shift(%319, %320) /* ty=Tensor[(10, 5, 7), uint32] */;
  %322 = cast(%var_5598, dtype="float64") /* ty=Tensor[(10, 5, 7), float64] */;
  %323 = log10(%322) /* ty=Tensor[(10, 5, 7), float64] */;
  %324 = cast(%323, dtype="float64") /* ty=Tensor[(10, 5, 7), float64] */;
  %325 = shape_of(%321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%321, dtype="float64") /* ty=Tensor[(10, 5, 7), float64] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %328 = cast(%var_5641, dtype="int8") /* ty=Tensor[(30), int8] */;
  %329 = reshape(%328, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %330 = mod(%326, %327) /* ty=Tensor[(10, 5, 7), float64] */;
  %331 = @func_306(%329) /* ty=Tensor[(10, ?, 3), int8] */;
  (%330, %331, %var_5641)
}

def @func_2792(%var_2717: Tensor[(8, 6, 11), uint8], %var_2718: Tensor[(8, 6, 11), uint8], %var_2753: Tensor[(1120), float32], %var_2774: Tensor[(7, 52), uint8]) -> (Tensor[(8, 6, 11), bool], Tensor[(30), int8], Tensor[(2340), float32], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(10, ?, 3), int8], Tensor[(7, 52), uint8], Tensor[(30), int8], Tensor[(1050), float64], Tensor[(5, 14, 15), float64], Tensor[(10, 16, 7), float32]) {
  %332 = cast(%var_2718, dtype="bool") /* ty=Tensor[(8, 6, 11), bool] */;
  %333 = shape_of(%var_2717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%var_2717, dtype="bool") /* ty=Tensor[(8, 6, 11), bool] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %336 = cast(meta[relay.Constant][24] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %337 = cast(meta[relay.Constant][24] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %338 = reshape(%336, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %339 = reshape(%337, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %340 = @func_2109(%338, %339) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */;
  %341 = cast(meta[relay.Constant][24] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %342 = cast(meta[relay.Constant][24] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %343 = reshape(%341, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %344 = reshape(%342, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %345 = @func_2109(%343, %344) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */;
  %346 = cast(meta[relay.Constant][26] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %347 = reshape(%346, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %348 = cast(%var_2774, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %349 = cast(%var_2774, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %350 = reshape(%348, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %351 = reshape(%349, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %352 = @func_881(%350, %351) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %353 = %345.2;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %355 = cast(%var_2753, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %356 = cast(%var_2753, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %357 = %340.3;
  %358 = cast(%357, dtype="int8") /* ty=Tensor[(30), int8] */;
  %359 = cast(meta[relay.Constant][27] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %360 = reshape(%354, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %361 = reshape(%355, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %362 = reshape(%356, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
  %363 = reshape(%358, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %364 = reshape(%359, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %365 = @func_1834(%360, %361, %362, %363, %364) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
  %366 = cast(meta[relay.Constant][27] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %367 = reshape(%366, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %368 = cast(meta[relay.Constant][25] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %369 = cast(%var_2753, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %370 = reshape(%368, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), float64] */;
  %371 = reshape(%369, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %372 = @func_2680(%370, %371) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(1120), float32], Tensor[(30, 1), int8], Tensor[(1050, 1), float64], Tensor[(10, 16, 8), uint8], Tensor[(5, 14, 15), float64]) */;
  %373 = %372.0;
  %374 = cast(%373, dtype="float32") /* ty=Tensor[(10, 16, 7), float32] */;
  %375 = greater(%334, %335) /* ty=Tensor[(8, 6, 11), bool] */;
  %376 = @func_2336(%347) /* ty=Tensor[(12, 6, 16), float64] */;
  %377 = %352.1;
  %378 = %365.4;
  %379 = @func_1612(%367) /* ty=Tensor[(5, 14, 15), float64] */;
  %380 = sinh(%374) /* ty=Tensor[(10, 16, 7), float32] */;
  (%375, %357, meta[relay.Constant][24] /* ty=Tensor[(2340), float32] */, meta[relay.Constant][25] /* ty=Tensor[(1280), float64] */, %var_2753, %353, %376, meta[relay.Constant][26] /* ty=Tensor[(1152), float64] */, %377, %var_2774, %378, meta[relay.Constant][27] /* ty=Tensor[(1050), float64] */, %379, %380)
}

def @func_3383(%var_3363: Tensor[(2340), float32]) -> (Tensor[(5, 12, 7), float32], Tensor[(1120), float32], Tensor[(2340), float32], Tensor[(10, ?, 3), int8], Tensor[(364), uint8], Tensor[(5, 6), int8]) {
  %381 = cast(meta[relay.Constant][28] /* ty=Tensor[(5, 12, 7), float32] */, dtype="float32") /* ty=Tensor[(5, 12, 7), float32] */;
  %382 = cast(%var_3363, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %383 = cast(%var_3363, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %384 = reshape(%382, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %385 = reshape(%383, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %386 = @func_2109(%384, %385) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */;
  %387 = cast(meta[relay.Constant][29] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %388 = cast(meta[relay.Constant][29] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %389 = reshape(%387, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %390 = reshape(%388, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %391 = @func_881(%389, %390) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %392 = cast(meta[relay.Constant][29] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %393 = cast(meta[relay.Constant][29] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %394 = reshape(%392, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %395 = reshape(%393, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %396 = @func_881(%394, %395) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %397 = acosh(%381) /* ty=Tensor[(5, 12, 7), float32] */;
  %398 = %386.2;
  %399 = %391.1;
  %400 = %396.2;
  (%397, %398, %var_3363, %399, meta[relay.Constant][29] /* ty=Tensor[(364), uint8] */, %400)
}

def @func_9606() -> (Tensor[(5, 9, 16), float64], Tensor[(12, 6, 16), float64], Tensor[(5, 9, 16), float64]) {
  %401 = @func_8453() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(12, 6, 16), float64]) */;
  %402 = @func_6462() /* ty=Tensor[(5, 9, 16), float64] */;
  %403 = %401.4;
  %404 = @func_6390() /* ty=Tensor[(5, 9, 16), float64] */;
  (%402, %403, %404)
}

def @func_3818(%var_3807: Tensor[(5, 8, 8), float64], %var_3808: Tensor[(5, 8, 8), float64]) -> Tensor[(5, 8, 8), float64] {
  %405 = cast(%var_3808, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
  %406 = shape_of(%var_3807, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(%var_3807, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %409 = floor_divide(%407, %408) /* ty=Tensor[(5, 8, 8), float64] */;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
  log2(%410) /* ty=Tensor[(5, 8, 8), float64] */
}

def @func_8871() -> (Tensor[(8, 3, 9), float32], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) {
  %411 = @func_8340() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(320), float64], Tensor[(336), float32], Tensor[(320), float64]) */;
  %412 = cast(meta[relay.Constant][30] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %413 = reshape(%412, newshape=[30, 1]) /* ty=Tensor[(30, 1), int8] */;
  %414 = @func_7874(%413) /* ty=(Tensor[(1050), float64], Tensor[(1120), float32], Tensor[(10, ?, 3), int8], Tensor[(30, 1), int8]) */;
  %415 = %411.1;
  %416 = %414.2;
  (%415, %416, meta[relay.Constant][30] /* ty=Tensor[(30), int8] */)
}

def @func_7538() -> (Tensor[(1152), float64],) {
  %417 = @func_6433() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
  %418 = %417.2;
  (%418,)
}

def @func_10242() -> (Tensor[(30), int8], Tensor[(5, 9, 16), float64]) {
  %419 = @func_8663() /* ty=(Tensor[(75), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1, 1050), float64]) */;
  %420 = %419.3;
  %421 = @func_6462() /* ty=Tensor[(5, 9, 16), float64] */;
  (%420, %421)
}

def @func_10678() -> Tensor[(5, 9, 16), float64] {
  @func_10645() /* ty=Tensor[(5, 9, 16), float64] */
}

def @func_5511(%var_5498: Tensor[(6, 8, 8), float64], %var_5499: Tensor[(6, 8, 8), float64], %var_5507: Tensor[(7, 10), uint16], %var_5508: Tensor[(770), uint16], %var_5509: Tensor[(7, 52), uint8]) -> (Tensor[(6, 8, 8), float64], Tensor[(5, 11, 14), float64], Tensor[(7, 10), uint16], Tensor[(770), uint16], Tensor[(7, 52), uint8]) {
  %422 = cast(%var_5499, dtype="float64") /* ty=Tensor[(6, 8, 8), float64] */;
  %423 = shape_of(%var_5498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%var_5498, dtype="float64") /* ty=Tensor[(6, 8, 8), float64] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %426 = cast(%var_5507, dtype="uint16") /* ty=Tensor[(7, 10), uint16] */;
  %427 = cast(%var_5508, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %428 = cast(%var_5508, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %429 = cast(%var_5509, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %430 = reshape(%426, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %431 = reshape(%427, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %432 = reshape(%428, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %433 = reshape(%429, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %434 = @func_1257(%430, %431, %432, %433) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %435 = floor_mod(%424, %425) /* ty=Tensor[(6, 8, 8), float64] */;
  %436 = %434.3;
  (%435, %436, %var_5507, %var_5508, %var_5509)
}

def @func_10371(%var_10325: Tensor[(75), float32], %var_10366: Tensor[(650), bool]) -> (Tensor[(75), float32], Tensor[(5, 9, 16), bool], Tensor[(1050), float64], Tensor[(5, 15, 320), float32], Tensor[(5, 9, 16), float64], Tensor[(770), uint16], Tensor[(650), bool], Tensor[(770, 1), uint16], Tensor[(1120), float32]) {
  %437 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %438 = %437.0;
  %439 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 9, 16), float64] */, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%438, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %443 = @func_9080() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
  %444 = @func_6750() /* ty=(Tensor[(75), float32], Tensor[(320), float64], Tensor[(5, 8, 8), float64]) */;
  %445 = %444.1;
  %446 = cast(%var_10325, dtype="float32") /* ty=Tensor[(75), float32] */;
  %447 = reshape(%446, newshape=[5, 15, 1]) /* ty=Tensor[(5, 15, 1), float32] */;
  %448 = @func_5825(%447) /* ty=Tensor[(5, 15, 1), float32] */;
  %449 = cast(%445, dtype="float32") /* ty=Tensor[(320), float32] */;
  %450 = cast(%448, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %451 = @func_8453() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(12, 6, 16), float64]) */;
  %452 = cast(%var_10366, dtype="bool") /* ty=Tensor[(650), bool] */;
  %453 = cast(meta[relay.Constant][32] /* ty=Tensor[(770, 1), uint16] */, dtype="uint16") /* ty=Tensor[(770, 1), uint16] */;
  %454 = cast(%448, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %455 = cast(meta[relay.Constant][33] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %456 = %443.2;
  %457 = cast(%456, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %458 = reshape(%452, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), bool] */;
  %459 = reshape(%453, newshape=[770]) /* ty=Tensor[(770), uint16] */;
  %460 = reshape(%454, newshape=[5, 15]) /* ty=Tensor[(5, 15), float32] */;
  %461 = reshape(%455, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %462 = reshape(%457, newshape=[10, 105]) /* ty=Tensor[(10, 105), float64] */;
  %463 = @func_7684(%458, %459, %460, %461, %462) /* ty=(Tensor[(13, 10, 5), bool], Tensor[(10, ?, 3), float32], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(576, 2), float64], Tensor[(5, 15, 1), float32], Tensor[(5, 15), float32], Tensor[(5, 15, 1), float32], Tensor[(30), int8], Tensor[(1120), float32], Tensor[(10, 105), float64]) */;
  %464 = logical_or(%441, %442) /* ty=Tensor[(5, 9, 16), bool] */;
  %465 = mod(%449, %450) /* ty=Tensor[(5, 15, 320), float32] */;
  %466 = %451.0;
  %467 = %463.3;
  (%var_10325, %464, %456, %465, %466, %467, %var_10366, meta[relay.Constant][32] /* ty=Tensor[(770, 1), uint16] */, meta[relay.Constant][33] /* ty=Tensor[(1120), float32] */)
}

def @func_11119(%var_11090: int32, %var_11112: Tensor[(2, 560), float32], %var_11114: Tensor[(1050), float64]) -> (Tensor[(216), float32], Tensor[(5, 8, 8), float64], int32, Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(2, 560), float32], Tensor[(30), int8], Tensor[(1050), float64]) {
  %468 = @func_9661() /* ty=(Tensor[(216), float32], Tensor[(1, 168), float32], Tensor[(8, 3, 9), float64], Tensor[(5, 9, 16), float64], Tensor[(588), uint8], Tensor[(5, 14, 15), float64], Tensor[(1050, 1), float64]) */;
  %469 = cast(%var_11090, dtype="int32") /* ty=int32 */;
  %470 = reshape(%469, newshape=[]) /* ty=int32 */;
  %471 = @func_4900(%470) /* ty=(Tensor[(13, 16, 10), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */;
  %472 = @func_10831() /* ty=(Tensor[(75), float32], Tensor[(5, 9, 16), float64]) */;
  %473 = cast(%var_11112, dtype="float32") /* ty=Tensor[(2, 560), float32] */;
  %474 = cast(%var_11112, dtype="float32") /* ty=Tensor[(2, 560), float32] */;
  %475 = cast(%var_11112, dtype="bool") /* ty=Tensor[(2, 560), bool] */;
  %476 = cast(meta[relay.Constant][34] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %477 = cast(%var_11114, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %478 = reshape(%473, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %479 = reshape(%474, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %480 = reshape(%475, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
  %481 = reshape(%476, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %482 = reshape(%477, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %483 = @func_1834(%478, %479, %480, %481, %482) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
  %484 = %468.0;
  %485 = %471.1;
  %486 = %472.1;
  %487 = %483.17;
  (%484, %485, %var_11090, %486, %487, %var_11112, meta[relay.Constant][34] /* ty=Tensor[(30), int8] */, %var_11114)
}

def @func_8823(%var_8792: Tensor[(728), float64], %var_8793: Tensor[(2340), float32]) -> (Tensor[(320), float64], Tensor[(2340), float32], Tensor[(728), float64], Tensor[(2340), float32], Tensor[(1120), float32], Tensor[(75), float32]) {
  %488 = @func_7133() /* ty=(Tensor[(320), float64],) */;
  %489 = cast(%var_8792, dtype="float64") /* ty=Tensor[(728), float64] */;
  %490 = cast(%var_8793, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %491 = reshape(%489, newshape=[728]) /* ty=Tensor[(728), float64] */;
  %492 = reshape(%490, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %493 = @func_7312(%491, %492) /* ty=(Tensor[(320), float64], Tensor[(12, 13, 15), float32], Tensor[(728), float64], Tensor[(2340), float32]) */;
  %494 = @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */;
  %495 = @func_8663() /* ty=(Tensor[(75), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1, 1050), float64]) */;
  %496 = %488.0;
  %497 = %493.3;
  %498 = %494.3;
  %499 = %495.0;
  (%496, %497, %var_8792, %var_8793, %498, %499)
}

def @func_9893() -> (Tensor[(5, 14, 15), float64], Tensor[(5, 9, 16), float64]) {
  %500 = @func_9080() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
  %501 = %500.1;
  %502 = @func_6462() /* ty=Tensor[(5, 9, 16), float64] */;
  (%501, %502)
}

def @func_11459(%var_11396: uint16, %var_11397: Tensor[(2, 2, 13), uint16], %var_11442: Tensor[(5, 130), bool], %var_11444: Tensor[(75), float32]) -> (Tensor[(2, 2, 13), float32], Tensor[(2, 2, 13), uint32], Tensor[(1120), float32], Tensor[(5, 130), bool], Tensor[(1, 770), uint16], Tensor[(75), float32], Tensor[(1120), float32], Tensor[(364), uint8], Tensor[(?, 75), float64], Tensor[(10, 105), float64]) {
  %503 = cast(%var_11397, dtype="float32") /* ty=Tensor[(2, 2, 13), float32] */;
  %504 = cast(%var_11396, dtype="bool") /* ty=bool */;
  %505 = cast(%var_11397, dtype="bool") /* ty=Tensor[(2, 2, 13), bool] */;
  %506 = equal(%504, %505) /* ty=Tensor[(2, 2, 13), bool] */;
  %507 = cast(%506, dtype="uint32") /* ty=Tensor[(2, 2, 13), uint32] */;
  %508 = cast(%var_11396, dtype="uint32") /* ty=uint32 */;
  %509 = cast(%var_11442, dtype="bool") /* ty=Tensor[(5, 130), bool] */;
  %510 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 770), uint16] */, dtype="uint16") /* ty=Tensor[(1, 770), uint16] */;
  %511 = cast(%var_11444, dtype="float32") /* ty=Tensor[(75), float32] */;
  %512 = cast(meta[relay.Constant][36] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %513 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 105), float64] */, dtype="float64") /* ty=Tensor[(10, 105), float64] */;
  %514 = reshape(%509, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), bool] */;
  %515 = reshape(%510, newshape=[770]) /* ty=Tensor[(770), uint16] */;
  %516 = reshape(%511, newshape=[5, 15]) /* ty=Tensor[(5, 15), float32] */;
  %517 = reshape(%512, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %518 = reshape(%513, newshape=[10, 105]) /* ty=Tensor[(10, 105), float64] */;
  %519 = @func_7684(%514, %515, %516, %517, %518) /* ty=(Tensor[(13, 10, 5), bool], Tensor[(10, ?, 3), float32], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(576, 2), float64], Tensor[(5, 15, 1), float32], Tensor[(5, 15), float32], Tensor[(5, 15, 1), float32], Tensor[(30), int8], Tensor[(1120), float32], Tensor[(10, 105), float64]) */;
  %520 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 770), uint16] */, dtype="uint16") /* ty=Tensor[(1, 770), uint16] */;
  %521 = reshape(%520, newshape=[1, 770]) /* ty=Tensor[(1, 770), uint16] */;
  %522 = @func_9738(%521) /* ty=(Tensor[(1050), float32], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(1, 770), uint16], Tensor[(364), uint8]) */;
  %523 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %524 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 105), float64] */, dtype="float64") /* ty=Tensor[(10, 105), float64] */;
  %525 = cosh(%503) /* ty=Tensor[(2, 2, 13), float32] */;
  %526 = logical_xor(%507, %508) /* ty=Tensor[(2, 2, 13), uint32] */;
  %527 = %519.11;
  %528 = %522.1;
  %529 = %523.1;
  %530 = tan(%524) /* ty=Tensor[(10, 105), float64] */;
  (%525, %526, %527, %var_11442, meta[relay.Constant][35] /* ty=Tensor[(1, 770), uint16] */, %var_11444, meta[relay.Constant][36] /* ty=Tensor[(1120), float32] */, %528, %529, %530)
}

def @func_9873(%var_9848: Tensor[(336), float32], %var_9849: Tensor[(320), float64]) -> (Tensor[(5, 8, 8), float64], Tensor[(336), float32], Tensor[(320), float64], Tensor[(1152), bool], Tensor[(?, 75), uint8]) {
  %531 = cast(%var_9848, dtype="float32") /* ty=Tensor[(336), float32] */;
  %532 = cast(%var_9849, dtype="float64") /* ty=Tensor[(320), float64] */;
  %533 = reshape(%531, newshape=[14, 6, 4]) /* ty=Tensor[(14, 6, 4), float32] */;
  %534 = reshape(%532, newshape=[320]) /* ty=Tensor[(320), float64] */;
  %535 = @func_5777(%533, %534) /* ty=(Tensor[(14, 6, 4), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */;
  %536 = @func_7538() /* ty=(Tensor[(1152), float64],) */;
  %537 = %536.0;
  %538 = cast(meta[relay.Constant][38] /* ty=Tensor[(1152), float64] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %539 = shape_of(%537, dtype="int32") /* ty=Tensor[(1), int32] */;
  %540 = cast(%537, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?), bool] */;
  %542 = @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */;
  %543 = %542.4;
  %544 = cast(%543, dtype="float64") /* ty=Tensor[(?, 75), float64] */;
  %545 = acos(%544) /* ty=Tensor[(?, 75), float64] */;
  %546 = cast(%543, dtype="uint8") /* ty=Tensor[(?, 75), uint8] */;
  %547 = shape_of(%545, dtype="int32") /* ty=Tensor[(2), int32] */;
  %548 = cast(%545, dtype="uint8") /* ty=Tensor[(?, 75), uint8] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %550 = %535.1;
  %551 = equal(%540, %541) /* ty=Tensor[(1152), bool] */;
  %552 = left_shift(%548, %549) /* ty=Tensor[(?, 75), uint8] */;
  (%550, %var_9848, %var_9849, %551, %552)
}

def @func_7491(%var_7470: Tensor[(7, 6, 14), uint8]) -> Tensor[(7, 6, 14), uint8] {
  %553 = cast(%var_7470, dtype="uint8") /* ty=Tensor[(7, 6, 14), uint8] */;
  %554 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(7, 6, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 6, 14), uint8] */, dtype="uint8") /* ty=Tensor[(7, 6, 14), uint8] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_and(%555, %556) /* ty=Tensor[(7, 6, 14), uint8] */
}

def @func_9004(%var_9000: Tensor[(7, 84), uint8]) -> (Tensor[(320), float64], Tensor[(1050), float64], Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(7, 84), uint8], Tensor[(320), float64]) {
  %557 = @func_8841() /* ty=(Tensor[(320), float64],) */;
  %558 = @func_8787() /* ty=(Tensor[(1050), float64],) */;
  %559 = cast(%var_9000, dtype="uint8") /* ty=Tensor[(7, 84), uint8] */;
  %560 = reshape(%559, newshape=[588, 1]) /* ty=Tensor[(588, 1), uint8] */;
  %561 = @func_8014(%560) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(7, 6, 14), uint8], Tensor[(588, 1), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
  %562 = @func_8340() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(320), float64], Tensor[(336), float32], Tensor[(320), float64]) */;
  %563 = %557.0;
  %564 = %558.0;
  %565 = @func_6462() /* ty=Tensor[(5, 9, 16), float64] */;
  %566 = %561.0;
  %567 = %562.4;
  (%563, %564, %565, %566, %var_9000, %567)
}

def @func_10446(%var_10408: Tensor[(30), int8]) -> (Tensor[(1152), float64], Tensor[(5, 9, 16), float64], Tensor[(10, ?, 3), int8], Tensor[(648), float32], Tensor[(30), int8], Tensor[(320), float64], Tensor[(5, 8, 8), bool], Tensor[(5, 9, 16), float32]) {
  %568 = @func_7538() /* ty=(Tensor[(1152), float64],) */;
  %569 = @func_6256() /* ty=Tensor[(5, 9, 16), float64] */;
  %570 = cast(%569, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %571 = cast(meta[relay.Constant][40] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %572 = cast(%var_10408, dtype="int8") /* ty=Tensor[(30), int8] */;
  %573 = reshape(%571, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %574 = reshape(%572, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %575 = @func_7751(%573, %574) /* ty=(Tensor[(9, 12, 6), float32], Tensor[(5, 14, 15), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */;
  %576 = cast(meta[relay.Constant][41] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %577 = reshape(%576, newshape=[320]) /* ty=Tensor[(320), float64] */;
  %578 = @func_10273(%577) /* ty=(Tensor[(5, 9, 16), float32], Tensor[(5, 9, 16), float64], Tensor[(5, 8, 8), float64], Tensor[(336), float32], Tensor[(320), float64]) */;
  %579 = %578.2;
  %580 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 8, 8), float64] */, dtype="bool") /* ty=Tensor[(5, 8, 8), bool] */;
  %581 = shape_of(%579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %582 = cast(%579, dtype="bool") /* ty=Tensor[(5, 8, 8), bool] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %584 = @func_8042() /* ty=(Tensor[(5, 9, 16), float32],) */;
  %585 = %568.0;
  %586 = cos(%570) /* ty=Tensor[(5, 9, 16), float64] */;
  %587 = %575.2;
  %588 = equal(%582, %583) /* ty=Tensor[(5, 8, 8), bool] */;
  %589 = %584.0;
  (%585, %586, %587, meta[relay.Constant][40] /* ty=Tensor[(648), float32] */, %var_10408, meta[relay.Constant][41] /* ty=Tensor[(320), float64] */, %588, %589)
}

def @func_3984(%var_3961: Tensor[(1, 9, 11), uint32], %var_3962: Tensor[(4, 9, 11), uint32], %var_3967: Tensor[(182, 4), float64], %var_3968: Tensor[(2340), float32]) -> (Tensor[(4, 9, 11), uint32], Tensor[(12, 13, 15), float32], Tensor[(182, 4), float64], Tensor[(2340), float32]) {
  %590 = cast(%var_3961, dtype="uint32") /* ty=Tensor[(1, 9, 11), uint32] */;
  %591 = cast(%var_3962, dtype="uint32") /* ty=Tensor[(4, 9, 11), uint32] */;
  %592 = cast(%var_3967, dtype="float64") /* ty=Tensor[(182, 4), float64] */;
  %593 = cast(%var_3968, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %594 = reshape(%592, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
  %595 = reshape(%593, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %596 = @func_3611(%594, %595) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) */;
  %597 = multiply(%590, %591) /* ty=Tensor[(4, 9, 11), uint32] */;
  %598 = %596.1;
  (%597, %598, %var_3967, %var_3968)
}

def @func_9054() -> (Tensor[(75), float32], Tensor[(5, 15, 1), float32]) {
  %599 = @func_6433() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
  %600 = @func_6677() /* ty=Tensor[(75), float32] */;
  %601 = %599.0;
  (%600, %601)
}

def @func_11234() -> (Tensor[(75), float32], Tensor[(5, 14, 15), float64]) {
  %602 = @func_9206() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %603 = @func_6671() /* ty=Tensor[(75), float32] */;
  %604 = %602.0;
  (%603, %604)
}

def @func_11154() -> (Tensor[(216), float32], Tensor[(216), float32]) {
  %605 = @func_9401() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(216), float32]) */;
  %606 = @func_10974() /* ty=Tensor[(216), float32] */;
  %607 = %605.1;
  (%606, %607)
}

def @func_11598(%var_11548: Tensor[(8, 3, 9), float32], %var_11573: Tensor[(528), uint8], %var_11575: Tensor[(364), uint8]) -> (Tensor[(216), float32], Tensor[(320), float64], Tensor[(10, ?, 3), int8], Tensor[(528), uint8], Tensor[(1120), float32], Tensor[(364), uint8], Tensor[(8, 3, 9), int64]) {
  %608 = cast(%var_11573, dtype="uint8") /* ty=Tensor[(528), uint8] */;
  %609 = cast(%var_11573, dtype="uint8") /* ty=Tensor[(528), uint8] */;
  %610 = cast(meta[relay.Constant][43] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %611 = cast(%var_11575, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %612 = reshape(%608, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), uint8] */;
  %613 = reshape(%609, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), uint8] */;
  %614 = reshape(%610, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %615 = reshape(%611, newshape=[7, 52]) /* ty=Tensor[(7, 52), uint8] */;
  %616 = @func_2792(%612, %613, %614, %615) /* ty=(Tensor[(8, 6, 11), bool], Tensor[(30), int8], Tensor[(2340), float32], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(10, ?, 3), int8], Tensor[(7, 52), uint8], Tensor[(30), int8], Tensor[(1050), float64], Tensor[(5, 14, 15), float64], Tensor[(10, 16, 7), float32]) */;
  %617 = @func_8871() /* ty=(Tensor[(8, 3, 9), float32], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */;
  %618 = %617.0;
  %619 = cast(%var_11548, dtype="float64") /* ty=Tensor[(8, 3, 9), float64] */;
  %620 = shape_of(%618, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(%618, dtype="float64") /* ty=Tensor[(8, 3, 9), float64] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %623 = power(%621, %622) /* ty=Tensor[(8, 3, 9), float64] */;
  %624 = cast(%623, dtype="float64") /* ty=Tensor[(8, 3, 9), float64] */;
  %625 = acosh(%624) /* ty=Tensor[(8, 3, 9), float64] */;
  %626 = cast(%623, dtype="int64") /* ty=Tensor[(8, 3, 9), int64] */;
  %627 = shape_of(%625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(%625, dtype="int64") /* ty=Tensor[(8, 3, 9), int64] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %630 = @func_10974() /* ty=Tensor[(216), float32] */;
  %631 = @func_9523() /* ty=Tensor[(320), float64] */;
  %632 = %616.8;
  %633 = bitwise_or(%628, %629) /* ty=Tensor[(8, 3, 9), int64] */;
  (%630, %631, %632, %var_11573, meta[relay.Constant][43] /* ty=Tensor[(1120), float32] */, %var_11575, %633)
}

def @func_2680(%var_2624: Tensor[(10, 16, 8), float64], %var_2639: Tensor[(1120), float32]) -> (Tensor[(10, 16, 7), bool], Tensor[(1120), float32], Tensor[(30, 1), int8], Tensor[(1050, 1), float64], Tensor[(10, 16, 8), uint8], Tensor[(5, 14, 15), float64]) {
  %634 = cast(%var_2639, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %635 = cast(%var_2639, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %636 = cast(%var_2639, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %637 = cast(meta[relay.Constant][44] /* ty=Tensor[(30, 1), int8] */, dtype="int8") /* ty=Tensor[(30, 1), int8] */;
  %638 = cast(meta[relay.Constant][45] /* ty=Tensor[(1050, 1), float64] */, dtype="float64") /* ty=Tensor[(1050, 1), float64] */;
  %639 = reshape(%634, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %640 = reshape(%635, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %641 = reshape(%636, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
  %642 = reshape(%637, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %643 = reshape(%638, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %644 = @func_1834(%639, %640, %641, %642, %643) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
  %645 = cast(%var_2624, dtype="float64") /* ty=Tensor[(10, 16, 8), float64] */;
  %646 = sinh(%645) /* ty=Tensor[(10, 16, 8), float64] */;
  %647 = cast(%var_2624, dtype="uint8") /* ty=Tensor[(10, 16, 8), uint8] */;
  %648 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%646, dtype="uint8") /* ty=Tensor[(10, 16, 8), uint8] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %651 = cast(meta[relay.Constant][45] /* ty=Tensor[(1050, 1), float64] */, dtype="float64") /* ty=Tensor[(1050, 1), float64] */;
  %652 = reshape(%651, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %653 = %644.1;
  %654 = add(%649, %650) /* ty=Tensor[(10, 16, 8), uint8] */;
  %655 = @func_1612(%652) /* ty=Tensor[(5, 14, 15), float64] */;
  (%653, %var_2639, meta[relay.Constant][44] /* ty=Tensor[(30, 1), int8] */, meta[relay.Constant][45] /* ty=Tensor[(1050, 1), float64] */, %654, %655)
}

def @func_2970(%var_2955: Tensor[(11, 16, 7), float64]) -> (Tensor[(11, 16, 7), float64],) {
  %656 = cast(meta[relay.Constant][46] /* ty=Tensor[(11, 16, 7), float64] */, dtype="bool") /* ty=Tensor[(11, 16, 7), bool] */;
  %657 = shape_of(%var_2955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%var_2955, dtype="bool") /* ty=Tensor[(11, 16, 7), bool] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %660 = greater_equal(%658, %659) /* ty=Tensor[(11, 16, 7), bool] */;
  %661 = cast(meta[relay.Constant][46] /* ty=Tensor[(11, 16, 7), float64] */, dtype="uint64") /* ty=Tensor[(11, 16, 7), uint64] */;
  %662 = shape_of(%660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%660, dtype="uint64") /* ty=Tensor[(11, 16, 7), uint64] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %665 = right_shift(%663, %664) /* ty=Tensor[(11, 16, 7), uint64] */;
  %666 = cast(%var_2955, dtype="float64") /* ty=Tensor[(11, 16, 7), float64] */;
  %667 = shape_of(%665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%665, dtype="float64") /* ty=Tensor[(11, 16, 7), float64] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %670 = floor_mod(%668, %669) /* ty=Tensor[(11, 16, 7), float64] */;
  (%670,)
}

def @func_6750() -> (Tensor[(75), float32], Tensor[(320), float64], Tensor[(5, 8, 8), float64]) {
  %671 = cast(meta[relay.Constant][47] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %672 = cast(meta[relay.Constant][47] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %673 = reshape(%671, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %674 = reshape(%672, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %675 = @func_3818(%673, %674) /* ty=Tensor[(5, 8, 8), float64] */;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
  %677 = @func_6677() /* ty=Tensor[(75), float32] */;
  %678 = log10(%676) /* ty=Tensor[(5, 8, 8), float64] */;
  (%677, meta[relay.Constant][47] /* ty=Tensor[(320), float64] */, %678)
}

def @func_10273(%var_10270: Tensor[(320), float64]) -> (Tensor[(5, 9, 16), float32], Tensor[(5, 9, 16), float64], Tensor[(5, 8, 8), float64], Tensor[(336), float32], Tensor[(320), float64]) {
  %679 = cast(meta[relay.Constant][48] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %680 = cast(%var_10270, dtype="float64") /* ty=Tensor[(320), float64] */;
  %681 = reshape(%679, newshape=[14, 6, 4]) /* ty=Tensor[(14, 6, 4), float32] */;
  %682 = reshape(%680, newshape=[320]) /* ty=Tensor[(320), float64] */;
  %683 = @func_5777(%681, %682) /* ty=(Tensor[(14, 6, 4), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */;
  %684 = @func_9422() /* ty=Tensor[(5, 9, 16), float32] */;
  %685 = @func_6390() /* ty=Tensor[(5, 9, 16), float64] */;
  %686 = %683.1;
  (%684, %685, %686, meta[relay.Constant][48] /* ty=Tensor[(336), float32] */, %var_10270)
}

def @func_9147(%var_9114: Tensor[(1280), float64]) -> (Tensor[(1280), int16], Tensor[(8, 2, 8), bool], Tensor[(64, 2), uint8], Tensor[(320), float64], Tensor[(588, 1), uint8]) {
  %687 = @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */;
  %688 = %687.2;
  %689 = cast(%var_9114, dtype="int16") /* ty=Tensor[(1280), int16] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(1), int32] */;
  %691 = cast(%688, dtype="int16") /* ty=Tensor[(1280), int16] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?), int16] */;
  %693 = cast(meta[relay.Constant][49] /* ty=Tensor[(64, 2), uint8] */, dtype="uint8") /* ty=Tensor[(64, 2), uint8] */;
  %694 = reshape(%693, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), uint8] */;
  %695 = @func_1127(%694) /* ty=(Tensor[(8, 2, 8), bool],) */;
  %696 = cast(meta[relay.Constant][50] /* ty=Tensor[(588, 1), uint8] */, dtype="uint8") /* ty=Tensor[(588, 1), uint8] */;
  %697 = reshape(%696, newshape=[7, 84]) /* ty=Tensor[(7, 84), uint8] */;
  %698 = @func_9004(%697) /* ty=(Tensor[(320), float64], Tensor[(1050), float64], Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(7, 84), uint8], Tensor[(320), float64]) */;
  %699 = bitwise_or(%691, %692) /* ty=Tensor[(1280), int16] */;
  %700 = %695.0;
  %701 = %698.5;
  (%699, %700, meta[relay.Constant][49] /* ty=Tensor[(64, 2), uint8] */, %701, meta[relay.Constant][50] /* ty=Tensor[(588, 1), uint8] */)
}

def @func_2109(%var_2083: Tensor[(12, 13, 15), float32], %var_2084: Tensor[(12, 13, 15), float32]) -> (Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) {
  %702 = cast(%var_2084, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
  %703 = shape_of(%var_2083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%var_2083, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %706 = cast(meta[relay.Constant][51] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %707 = cast(meta[relay.Constant][51] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %708 = cast(meta[relay.Constant][51] /* ty=Tensor[(1120), float32] */, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %709 = cast(meta[relay.Constant][52] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %710 = cast(meta[relay.Constant][53] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %711 = reshape(%706, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %712 = reshape(%707, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %713 = reshape(%708, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
  %714 = reshape(%709, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %715 = reshape(%710, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %716 = @func_1834(%711, %712, %713, %714, %715) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
  %717 = divide(%704, %705) /* ty=Tensor[(12, 13, 15), float32] */;
  %718 = %716.17;
  (%717, %718, meta[relay.Constant][51] /* ty=Tensor[(1120), float32] */, meta[relay.Constant][52] /* ty=Tensor[(30), int8] */, meta[relay.Constant][53] /* ty=Tensor[(1050), float64] */)
}

def @func_306(%var_293: Tensor[(10, 1, 3), int8]) -> Tensor[(10, ?, 3), int8] {
  %719 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 1, 3), int8] */, dtype="int8") /* ty=Tensor[(10, 1, 3), int8] */;
  %720 = shape_of(%var_293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %721 = cast(%var_293, dtype="int8") /* ty=Tensor[(10, 1, 3), int8] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  subtract(%721, %722) /* ty=Tensor[(10, ?, 3), int8] */
}

def @func_7968(%var_7948: Tensor[(770), uint16], %var_7962: Tensor[(1152), float64]) -> (Tensor[(5, 14, 15), float64], Tensor[(5, 6), int8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) {
  %723 = @func_7597() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %724 = cast(meta[relay.Constant][55] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %725 = cast(%var_7948, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %726 = cast(%var_7948, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %727 = cast(meta[relay.Constant][56] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %728 = reshape(%724, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %729 = reshape(%725, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %730 = reshape(%726, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %731 = reshape(%727, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %732 = @func_1257(%728, %729, %730, %731) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %733 = cast(%var_7962, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %734 = reshape(%733, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %735 = %723.0;
  %736 = %732.1;
  %737 = @func_2336(%734) /* ty=Tensor[(12, 6, 16), float64] */;
  (%735, %736, meta[relay.Constant][55] /* ty=Tensor[(70), uint16] */, %var_7948, meta[relay.Constant][56] /* ty=Tensor[(364), uint8] */, %737, %var_7962)
}

def @func_9950() -> (Tensor[(5, 14, 15), float64], Tensor[(5, 9, 16), float64]) {
  %738 = @func_8594() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(216), float32]) */;
  %739 = @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */;
  %740 = %738.0;
  %741 = %739.0;
  (%740, %741)
}

def @func_9231(%var_9213: Tensor[(8, 3, 9), float32]) -> (Tensor[(8, 3, 9), bool], Tensor[(5, 14, 15), float64]) {
  %742 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %743 = %742.3;
  %744 = cast(%var_9213, dtype="bool") /* ty=Tensor[(8, 3, 9), bool] */;
  %745 = shape_of(%743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%743, dtype="bool") /* ty=Tensor[(8, 3, 9), bool] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %748 = @func_9206() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %749 = greater(%746, %747) /* ty=Tensor[(8, 3, 9), bool] */;
  %750 = %748.0;
  (%749, %750)
}

def @func_6256() -> Tensor[(5, 9, 16), float64] {
  %751 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %751.0
}

def @func_6219() -> (Tensor[(5, 9, 16), float64],) {
  %752 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %753 = %752.2;
  %754 = cast(%753, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %755 = sigmoid(%754) /* ty=Tensor[(5, 9, 16), float64] */;
  (%755,)
}

def @func_8663() -> (Tensor[(75), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1, 1050), float64]) {
  %756 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %757 = cast(meta[relay.Constant][57] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %758 = cast(meta[relay.Constant][57] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %759 = cast(meta[relay.Constant][57] /* ty=Tensor[(1120), float32] */, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %760 = cast(meta[relay.Constant][58] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %761 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 1050), float64] */, dtype="float64") /* ty=Tensor[(1, 1050), float64] */;
  %762 = reshape(%757, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %763 = reshape(%758, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %764 = reshape(%759, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
  %765 = reshape(%760, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %766 = reshape(%761, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %767 = @func_1834(%762, %763, %764, %765, %766) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
  %768 = %756.1;
  %769 = %767.17;
  (%768, %769, meta[relay.Constant][57] /* ty=Tensor[(1120), float32] */, meta[relay.Constant][58] /* ty=Tensor[(30), int8] */, meta[relay.Constant][59] /* ty=Tensor[(1, 1050), float64] */)
}

def @func_9292(%var_9256: Tensor[(16, 10, 11), float64], %var_9257: Tensor[(16, 10, 11), float64], %var_9266: Tensor[(30), int8], %var_9276: Tensor[(728), float64]) -> (Tensor[(16, 10, 11), float64], Tensor[(5, 6), int8], Tensor[(30), int8], Tensor[(12, 13, 15), float32], Tensor[(99), uint32], Tensor[(396), uint32], Tensor[(728), float64], Tensor[(2340, 1), float32]) {
  %770 = cast(%var_9257, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
  %771 = shape_of(%var_9256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(%var_9256, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %774 = cast(%var_9266, dtype="int8") /* ty=Tensor[(30), int8] */;
  %775 = reshape(%774, newshape=[5, 6]) /* ty=Tensor[(5, 6), int8] */;
  %776 = @func_6947(%775) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %777 = cast(meta[relay.Constant][60] /* ty=Tensor[(99), uint32] */, dtype="uint32") /* ty=Tensor[(99), uint32] */;
  %778 = cast(meta[relay.Constant][61] /* ty=Tensor[(396), uint32] */, dtype="uint32") /* ty=Tensor[(396), uint32] */;
  %779 = cast(%var_9276, dtype="float64") /* ty=Tensor[(728), float64] */;
  %780 = cast(meta[relay.Constant][62] /* ty=Tensor[(2340, 1), float32] */, dtype="float32") /* ty=Tensor[(2340, 1), float32] */;
  %781 = reshape(%777, newshape=[1, 9, 11]) /* ty=Tensor[(1, 9, 11), uint32] */;
  %782 = reshape(%778, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), uint32] */;
  %783 = reshape(%779, newshape=[182, 4]) /* ty=Tensor[(182, 4), float64] */;
  %784 = reshape(%780, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %785 = @func_3984(%781, %782, %783, %784) /* ty=(Tensor[(4, 9, 11), uint32], Tensor[(12, 13, 15), float32], Tensor[(182, 4), float64], Tensor[(2340), float32]) */;
  %786 = power(%772, %773) /* ty=Tensor[(16, 10, 11), float64] */;
  %787 = %776.2;
  %788 = %785.1;
  (%786, %787, %var_9266, %788, meta[relay.Constant][60] /* ty=Tensor[(99), uint32] */, meta[relay.Constant][61] /* ty=Tensor[(396), uint32] */, %var_9276, meta[relay.Constant][62] /* ty=Tensor[(2340, 1), float32] */)
}

def @func_2336(%var_2322: Tensor[(12, 6, 16), float64]) -> Tensor[(12, 6, 16), float64] {
  %789 = cast(%var_2322, dtype="float64") /* ty=Tensor[(12, 6, 16), float64] */;
  sigmoid(%789) /* ty=Tensor[(12, 6, 16), float64] */
}

def @func_10891() -> (Tensor[(216), float32], Tensor[(?, 75), float64], Tensor[(8, 3, 9), float32]) {
  %790 = @func_9661() /* ty=(Tensor[(216), float32], Tensor[(1, 168), float32], Tensor[(8, 3, 9), float64], Tensor[(5, 9, 16), float64], Tensor[(588), uint8], Tensor[(5, 14, 15), float64], Tensor[(1050, 1), float64]) */;
  %791 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %792 = @func_8920() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %793 = %790.0;
  %794 = %791.1;
  %795 = %792.2;
  (%793, %794, %795)
}

def @func_6843() -> (Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) {
  %796 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %797 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %798 = cast(meta[relay.Constant][63] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %799 = reshape(%798, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %800 = %796.0;
  %801 = %797.3;
  %802 = @func_1612(%799) /* ty=Tensor[(5, 14, 15), float64] */;
  (%800, %801, %802, meta[relay.Constant][63] /* ty=Tensor[(1050), float64] */)
}

def @func_9080() -> (Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) {
  %803 = @func_7350() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %804 = @func_8787() /* ty=(Tensor[(1050), float64],) */;
  %805 = @func_6462() /* ty=Tensor[(5, 9, 16), float64] */;
  %806 = %803.0;
  %807 = %804.0;
  (%805, %806, %807)
}

def @func_7903(%var_7887: Tensor[(7, 2, 12), float32]) -> (Tensor[(216), float32], Tensor[(7, 2, 12), float32]) {
  %808 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %809 = cast(%var_7887, dtype="float32") /* ty=Tensor[(7, 2, 12), float32] */;
  %810 = asinh(%809) /* ty=Tensor[(7, 2, 12), float32] */;
  %811 = cast(%810, dtype="float32") /* ty=Tensor[(7, 2, 12), float32] */;
  %812 = %808.4;
  %813 = acosh(%811) /* ty=Tensor[(7, 2, 12), float32] */;
  (%812, %813)
}

def @func_7684(%var_7620: Tensor[(13, 10, 5), bool], %var_7642: Tensor[(770), uint16], %var_7658: Tensor[(5, 15), float32], %var_7677: Tensor[(1120), float32], %var_7678: Tensor[(10, 105), float64]) -> (Tensor[(13, 10, 5), bool], Tensor[(10, ?, 3), float32], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(576, 2), float64], Tensor[(5, 15, 1), float32], Tensor[(5, 15), float32], Tensor[(5, 15, 1), float32], Tensor[(30), int8], Tensor[(1120), float32], Tensor[(10, 105), float64]) {
  %814 = cast(meta[relay.Constant][64] /* ty=Tensor[(13, 10, 5), bool] */, dtype="bool") /* ty=Tensor[(13, 10, 5), bool] */;
  %815 = shape_of(%var_7620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(%var_7620, dtype="bool") /* ty=Tensor[(13, 10, 5), bool] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %818 = logical_and(%816, %817) /* ty=Tensor[(13, 10, 5), bool] */;
  %819 = cast(meta[relay.Constant][64] /* ty=Tensor[(13, 10, 5), bool] */, dtype="bool") /* ty=Tensor[(13, 10, 5), bool] */;
  %820 = shape_of(%818, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%818, dtype="bool") /* ty=Tensor[(13, 10, 5), bool] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %823 = cast(meta[relay.Constant][65] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %824 = cast(%var_7642, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %825 = cast(%var_7642, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %826 = cast(meta[relay.Constant][66] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %827 = reshape(%823, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %828 = reshape(%824, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %829 = reshape(%825, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %830 = reshape(%826, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %831 = @func_1257(%827, %828, %829, %830) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %832 = cast(meta[relay.Constant][67] /* ty=Tensor[(576, 2), float64] */, dtype="float64") /* ty=Tensor[(576, 2), float64] */;
  %833 = reshape(%832, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %834 = cast(%var_7658, dtype="float32") /* ty=Tensor[(5, 15), float32] */;
  %835 = reshape(%834, newshape=[5, 15, 1]) /* ty=Tensor[(5, 15, 1), float32] */;
  %836 = @func_5825(%835) /* ty=Tensor[(5, 15, 1), float32] */;
  %837 = cast(%836, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %838 = reshape(%837, newshape=[5, 15, 1]) /* ty=Tensor[(5, 15, 1), float32] */;
  %839 = cast(%var_7677, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %840 = cast(%var_7677, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %841 = cast(%var_7677, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %842 = %831.7;
  %843 = cast(%842, dtype="int8") /* ty=Tensor[(10, ?, 3), int8] */;
  %844 = cast(%var_7678, dtype="float64") /* ty=Tensor[(10, 105), float64] */;
  %845 = reshape(%839, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %846 = reshape(%840, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %847 = reshape(%841, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
  %848 = reshape(%843, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %849 = reshape(%844, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %850 = @func_1834(%845, %846, %847, %848, %849) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
  %851 = greater_equal(%821, %822) /* ty=Tensor[(13, 10, 5), bool] */;
  %852 = @func_2336(%833) /* ty=Tensor[(12, 6, 16), float64] */;
  %853 = @func_5825(%838) /* ty=Tensor[(5, 15, 1), float32] */;
  %854 = %850.4;
  (%851, %842, meta[relay.Constant][65] /* ty=Tensor[(70), uint16] */, %var_7642, meta[relay.Constant][66] /* ty=Tensor[(364), uint8] */, %852, meta[relay.Constant][67] /* ty=Tensor[(576, 2), float64] */, %836, %var_7658, %853, %854, %var_7677, %var_7678)
}

def @func_8453() -> (Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(12, 6, 16), float64]) {
  %855 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %856 = @func_7350() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %857 = cast(meta[relay.Constant][68] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %858 = reshape(%857, newshape=[11, 16, 7]) /* ty=Tensor[(11, 16, 7), float64] */;
  %859 = @func_2970(%858) /* ty=(Tensor[(11, 16, 7), float64],) */;
  %860 = @func_6433() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
  %861 = %855.0;
  %862 = %856.0;
  %863 = %859.0;
  %864 = %860.1;
  (%861, %862, %863, meta[relay.Constant][68] /* ty=Tensor[(1232), float64] */, %864)
}

def @func_1834(%var_1649: Tensor[(10, 16, 7), float32], %var_1650: Tensor[(10, 16, 7), float32], %var_1664: Tensor[(10, 16, 7), bool], %var_1696: Tensor[(30), int8], %var_1820: Tensor[(1050), float64]) -> (Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) {
  %865 = cast(%var_1650, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
  %866 = shape_of(%var_1649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%var_1649, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %869 = greater(%867, %868) /* ty=Tensor[(10, 16, 7), bool] */;
  %870 = cast(%var_1664, dtype="float32") /* ty=Tensor[(10, 16, 7), float32] */;
  %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%869, dtype="float32") /* ty=Tensor[(10, 16, 7), float32] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %874 = cast(%869, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
  %875 = shape_of(%var_1649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%var_1649, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %878 = cast(%var_1696, dtype="int8") /* ty=Tensor[(30), int8] */;
  %879 = reshape(%878, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %880 = cast(meta[relay.Constant][69] /* ty=Tensor[(7, 52), uint8] */, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %881 = cast(meta[relay.Constant][69] /* ty=Tensor[(7, 52), uint8] */, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %882 = reshape(%880, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %883 = reshape(%881, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %884 = @func_881(%882, %883) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %885 = %884.0;
  %886 = cast(%885, dtype="uint8") /* ty=Tensor[(13, 4, 7), uint8] */;
  %887 = cast(meta[relay.Constant][69] /* ty=Tensor[(7, 52), uint8] */, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %888 = reshape(%886, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %889 = reshape(%887, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %890 = @func_881(%888, %889) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %891 = cast(meta[relay.Constant][70] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %892 = cast(meta[relay.Constant][71] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %893 = cast(meta[relay.Constant][71] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %894 = cast(%885, dtype="uint8") /* ty=Tensor[(13, 4, 7), uint8] */;
  %895 = reshape(%891, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %896 = reshape(%892, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %897 = reshape(%893, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %898 = reshape(%894, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %899 = @func_1257(%895, %896, %897, %898) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %900 = cast(meta[relay.Constant][72] /* ty=Tensor[(128), uint8] */, dtype="uint8") /* ty=Tensor[(128), uint8] */;
  %901 = reshape(%900, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), uint8] */;
  %902 = @func_1127(%901) /* ty=(Tensor[(8, 2, 8), bool],) */;
  %903 = cast(%885, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %904 = log(%903) /* ty=Tensor[(13, 4, 7), float64] */;
  %905 = cast(%885, dtype="float32") /* ty=Tensor[(13, 4, 7), float32] */;
  %906 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
  %907 = cast(%904, dtype="float32") /* ty=Tensor[(13, 4, 7), float32] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %909 = divide(%907, %908) /* ty=Tensor[(13, 4, 7), float32] */;
  %910 = cast(meta[relay.Constant][73] /* ty=Tensor[(13, 4, 7), float32] */, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
  %911 = shape_of(%909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %912 = cast(%909, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %914 = %902.0;
  %915 = cast(%914, dtype="uint8") /* ty=Tensor[(8, 2, 8), uint8] */;
  %916 = reshape(%915, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), uint8] */;
  %917 = @func_1127(%916) /* ty=(Tensor[(8, 2, 8), bool],) */;
  %918 = cast(%914, dtype="uint8") /* ty=Tensor[(8, 2, 8), uint8] */;
  %919 = reshape(%918, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), uint8] */;
  %920 = @func_1127(%919) /* ty=(Tensor[(8, 2, 8), bool],) */;
  %921 = cast(meta[relay.Constant][70] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %922 = cast(meta[relay.Constant][71] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %923 = cast(meta[relay.Constant][71] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %924 = cast(%904, dtype="uint8") /* ty=Tensor[(13, 4, 7), uint8] */;
  %925 = reshape(%921, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %926 = reshape(%922, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %927 = reshape(%923, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %928 = reshape(%924, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %929 = @func_1257(%925, %926, %927, %928) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %930 = cast(%909, dtype="float32") /* ty=Tensor[(13, 4, 7), float32] */;
  %931 = %929.7;
  %932 = cast(%931, dtype="int8") /* ty=Tensor[(10, ?, 3), int8] */;
  %933 = reshape(%932, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %934 = cast(%var_1820, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %935 = reshape(%934, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %936 = cast(meta[relay.Constant][70] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %937 = cast(meta[relay.Constant][71] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %938 = cast(meta[relay.Constant][71] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %939 = cast(meta[relay.Constant][69] /* ty=Tensor[(7, 52), uint8] */, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %940 = reshape(%936, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %941 = reshape(%937, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %942 = reshape(%938, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %943 = reshape(%939, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %944 = @func_1257(%940, %941, %942, %943) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %945 = floor_mod(%872, %873) /* ty=Tensor[(10, 16, 7), float32] */;
  %946 = logical_or(%876, %877) /* ty=Tensor[(10, 16, 7), bool] */;
  %947 = @func_306(%879) /* ty=Tensor[(10, ?, 3), int8] */;
  %948 = %890.0;
  %949 = %899.2;
  %950 = not_equal(%912, %913) /* ty=Tensor[(13, 4, 7), bool] */;
  %951 = %917.0;
  %952 = %920.0;
  %953 = exp(%930) /* ty=Tensor[(13, 4, 7), float32] */;
  %954 = @func_306(%933) /* ty=Tensor[(10, ?, 3), int8] */;
  %955 = @func_1612(%935) /* ty=Tensor[(5, 14, 15), float64] */;
  %956 = %944.6;
  (%945, %946, meta[relay.Constant][69] /* ty=Tensor[(7, 52), uint8] */, %947, %var_1696, %948, %949, meta[relay.Constant][70] /* ty=Tensor[(70), uint16] */, meta[relay.Constant][71] /* ty=Tensor[(770), uint16] */, %914, meta[relay.Constant][72] /* ty=Tensor[(128), uint8] */, %950, %951, %952, %931, %953, %954, %955, %var_1820, %956)
}

def @func_8042() -> (Tensor[(5, 9, 16), float32],) {
  %957 = @func_7076() /* ty=Tensor[(5, 9, 16), float32] */;
  (%957,)
}

def @func_6390() -> Tensor[(5, 9, 16), float64] {
  %958 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %958.0
}

def @func_3712(%var_3677: Tensor[(16, 2, 12), int8], %var_3678: Tensor[(16, 2, 12), int8], %var_3699: Tensor[(728), float64], %var_3700: Tensor[(2340), float32]) -> (Tensor[(16, 2, 12), bool], Tensor[(10, 16, 7), float32], Tensor[(1120), float32], Tensor[(5, 6), int8], Tensor[(70, 15), float64], Tensor[(8, 13, 7), float64], Tensor[(728), float64], Tensor[(2340), float32]) {
  %959 = cast(%var_3678, dtype="bool") /* ty=Tensor[(16, 2, 12), bool] */;
  %960 = shape_of(%var_3677, dtype="int32") /* ty=Tensor[(3), int32] */;
  %961 = cast(%var_3677, dtype="bool") /* ty=Tensor[(16, 2, 12), bool] */;
  %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %963 = cast(meta[relay.Constant][74] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %964 = cast(meta[relay.Constant][74] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %965 = cast(meta[relay.Constant][74] /* ty=Tensor[(1120), float32] */, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %966 = cast(meta[relay.Constant][75] /* ty=Tensor[(5, 6), int8] */, dtype="int8") /* ty=Tensor[(5, 6), int8] */;
  %967 = cast(meta[relay.Constant][76] /* ty=Tensor[(70, 15), float64] */, dtype="float64") /* ty=Tensor[(70, 15), float64] */;
  %968 = reshape(%963, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %969 = reshape(%964, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %970 = reshape(%965, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
  %971 = reshape(%966, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %972 = reshape(%967, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %973 = @func_1834(%968, %969, %970, %971, %972) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
  %974 = cast(%var_3699, dtype="float64") /* ty=Tensor[(728), float64] */;
  %975 = cast(%var_3700, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %976 = reshape(%974, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
  %977 = reshape(%975, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %978 = @func_3611(%976, %977) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) */;
  %979 = not_equal(%961, %962) /* ty=Tensor[(16, 2, 12), bool] */;
  %980 = %973.0;
  %981 = %978.0;
  (%979, %980, meta[relay.Constant][74] /* ty=Tensor[(1120), float32] */, meta[relay.Constant][75] /* ty=Tensor[(5, 6), int8] */, meta[relay.Constant][76] /* ty=Tensor[(70, 15), float64] */, %981, %var_3699, %var_3700)
}

def @func_8255(%var_8237: Tensor[(770), uint16]) -> (Tensor[(5, 9, 16), float64], Tensor[(770), uint16], Tensor[(770), uint16], Tensor[(1152), float64]) {
  %982 = cast(%var_8237, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %983 = cast(meta[relay.Constant][77] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %984 = reshape(%982, newshape=[770]) /* ty=Tensor[(770), uint16] */;
  %985 = reshape(%983, newshape=[1152]) /* ty=Tensor[(1152), float64] */;
  %986 = @func_7968(%984, %985) /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 6), int8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
  %987 = @func_6390() /* ty=Tensor[(5, 9, 16), float64] */;
  %988 = %986.3;
  (%987, %988, %var_8237, meta[relay.Constant][77] /* ty=Tensor[(1152), float64] */)
}

def @func_6671() -> Tensor[(75), float32] {
  @func_6240() /* ty=Tensor[(75), float32] */
}

def @func_9454() -> Tensor[(5, 14, 15), float64] {
  %989 = @func_8769() /* ty=(Tensor[(1050), float64], Tensor[(375), float64], Tensor[(5, 14, 15), float64], Tensor[(5, 75), float32]) */;
  %989.2
}

def @func_7350() -> (Tensor[(5, 14, 15), float64],) {
  %990 = @func_7179() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %991 = %990.0;
  (%991,)
}

def @func_8514(%var_8482: Tensor[(1120), float32], %var_8508: Tensor[(90, 26), float32]) -> (Tensor[(75), float32], Tensor[(528), uint8], Tensor[(350), uint32], Tensor[(528), uint8], Tensor[(1120), float32], Tensor[(364), uint8], Tensor[(5824, 1), uint8], Tensor[(5, 75), float32], Tensor[(375), float64], Tensor[(728), float64], Tensor[(728), float64], Tensor[(90, 26), float32]) {
  %992 = cast(meta[relay.Constant][78] /* ty=Tensor[(350), uint32] */, dtype="uint32") /* ty=Tensor[(350), uint32] */;
  %993 = cast(meta[relay.Constant][79] /* ty=Tensor[(528), uint8] */, dtype="uint8") /* ty=Tensor[(528), uint8] */;
  %994 = cast(%var_8482, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %995 = cast(meta[relay.Constant][80] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %996 = cast(meta[relay.Constant][81] /* ty=Tensor[(5824, 1), uint8] */, dtype="uint8") /* ty=Tensor[(5824, 1), uint8] */;
  %997 = cast(meta[relay.Constant][81] /* ty=Tensor[(5824, 1), uint8] */, dtype="uint32") /* ty=Tensor[(5824, 1), uint32] */;
  %998 = reshape(%992, newshape=[1, 350]) /* ty=Tensor[(1, 350), uint32] */;
  %999 = reshape(%993, newshape=[528]) /* ty=Tensor[(528), uint8] */;
  %1000 = reshape(%994, newshape=[4, 280]) /* ty=Tensor[(4, 280), float32] */;
  %1001 = reshape(%995, newshape=[1, 364]) /* ty=Tensor[(1, 364), uint8] */;
  %1002 = reshape(%996, newshape=[16, 364]) /* ty=Tensor[(16, 364), uint8] */;
  %1003 = reshape(%997, newshape=[16, 364]) /* ty=Tensor[(16, 364), uint32] */;
  %1004 = @func_6596(%998, %999, %1000, %1001, %1002, %1003) /* ty=(Tensor[(5, 9, 16), uint64], Tensor[(182, 4), float64], Tensor[(99), uint32], Tensor[(396), uint32], Tensor[(728), float64], Tensor[(2340), float32], Tensor[(10, ?, 3), int8], Tensor[(1, 350), uint32], Tensor[(30), int8], Tensor[(5, 14, 15), float64], Tensor[(528), uint8], Tensor[(4, 280), float32], Tensor[(16, 364), bool]) */;
  %1005 = cast(meta[relay.Constant][82] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %1006 = reshape(%1005, newshape=[5, 75]) /* ty=Tensor[(5, 75), float64] */;
  %1007 = @func_7770(%1006) /* ty=(Tensor[(5, 75), float32],) */;
  %1008 = cast(meta[relay.Constant][83] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
  %1009 = cast(%var_8508, dtype="float32") /* ty=Tensor[(90, 26), float32] */;
  %1010 = reshape(%1008, newshape=[728]) /* ty=Tensor[(728), float64] */;
  %1011 = reshape(%1009, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1012 = @func_7312(%1010, %1011) /* ty=(Tensor[(320), float64], Tensor[(12, 13, 15), float32], Tensor[(728), float64], Tensor[(2340), float32]) */;
  %1013 = @func_6240() /* ty=Tensor[(75), float32] */;
  %1014 = %1004.10;
  %1015 = %1007.0;
  %1016 = %1012.2;
  (%1013, %1014, meta[relay.Constant][78] /* ty=Tensor[(350), uint32] */, meta[relay.Constant][79] /* ty=Tensor[(528), uint8] */, %var_8482, meta[relay.Constant][80] /* ty=Tensor[(364), uint8] */, meta[relay.Constant][81] /* ty=Tensor[(5824, 1), uint8] */, %1015, meta[relay.Constant][82] /* ty=Tensor[(375), float64] */, %1016, meta[relay.Constant][83] /* ty=Tensor[(728), float64] */, %var_8508)
}

def @func_8594() -> (Tensor[(5, 14, 15), float64], Tensor[(216), float32]) {
  %1017 = @func_8383() /* ty=(Tensor[(320), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(1152), float64], Tensor[(588), uint8]) */;
  %1018 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %1019 = %1017.1;
  %1020 = %1018.4;
  (%1019, %1020)
}

def @main(%var_11725: Tensor[(7, 84), uint8], %var_11762: Tensor[(5, 14, 15), float32]) -> (Tensor[(5, 14, 15), float64], Tensor[(2340), float32], Tensor[(7, 6, 14), uint8], Tensor[(7, 84), uint8], Tensor[(5, 14, 15), bool], Tensor[(5, 14, 15), bool]) {
  %1021 = cast(meta[relay.Constant][84] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1022 = reshape(%1021, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1023 = @func_10746(%1022) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(2340), float32]) */;
  %1024 = cast(%var_11725, dtype="uint8") /* ty=Tensor[(7, 84), uint8] */;
  %1025 = reshape(%1024, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), uint8] */;
  %1026 = @func_10928() /* ty=Tensor[(5, 14, 15), float64] */;
  %1027 = cast(%1026, dtype="float32") /* ty=Tensor[(5, 14, 15), float32] */;
  %1028 = acos(%1027) /* ty=Tensor[(5, 14, 15), float32] */;
  %1029 = cast(%var_11762, dtype="bool") /* ty=Tensor[(5, 14, 15), bool] */;
  %1030 = shape_of(%1028, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1031 = cast(%1028, dtype="bool") /* ty=Tensor[(5, 14, 15), bool] */;
  %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1033 = cast(%1028, dtype="bool") /* ty=Tensor[(5, 14, 15), bool] */;
  %1034 = shape_of(%var_11762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1035 = cast(%var_11762, dtype="bool") /* ty=Tensor[(5, 14, 15), bool] */;
  %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1037 = %1023.1;
  %1038 = @func_7491(%1025) /* ty=Tensor[(7, 6, 14), uint8] */;
  %1039 = greater(%1031, %1032) /* ty=Tensor[(5, 14, 15), bool] */;
  %1040 = not_equal(%1035, %1036) /* ty=Tensor[(5, 14, 15), bool] */;
  (%1037, meta[relay.Constant][84] /* ty=Tensor[(2340), float32] */, %1038, %var_11725, %1039, %1040)
}

def @func_10209(%var_10161: Tensor[(1, 10, 9), int64], %var_10175: Tensor[(720), float64]) -> (Tensor[(?, 75), float64], Tensor[(720), float64], Tensor[(364), uint8], Tensor[(770), uint16], Tensor[(5, 9, 16), float64], Tensor[(7, 10, 9), bool]) {
  %1041 = cast(%var_10175, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1042 = cast(%var_10175, dtype="int16") /* ty=Tensor[(720), int16] */;
  %1043 = reshape(%1041, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float64] */;
  %1044 = reshape(%1042, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), int16] */;
  %1045 = @func_6336(%1043, %1044) /* ty=(Tensor[(5, 9, 16), bool], Tensor[(5, 9, 16), uint8], Tensor[(?, 75), float64]) */;
  %1046 = cast(meta[relay.Constant][85] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %1047 = reshape(%1046, newshape=[1, 770]) /* ty=Tensor[(1, 770), uint16] */;
  %1048 = @func_9738(%1047) /* ty=(Tensor[(1050), float32], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(1, 770), uint16], Tensor[(364), uint8]) */;
  %1049 = cast(%var_10161, dtype="int64") /* ty=Tensor[(1, 10, 9), int64] */;
  %1050 = cast(meta[relay.Constant][86] /* ty=Tensor[(7, 10, 9), int64] */, dtype="int64") /* ty=Tensor[(7, 10, 9), int64] */;
  %1051 = add(%1049, %1050) /* ty=Tensor[(7, 10, 9), int64] */;
  %1052 = cast(%1051, dtype="bool") /* ty=Tensor[(7, 10, 9), bool] */;
  %1053 = shape_of(meta[relay.Constant][86] /* ty=Tensor[(7, 10, 9), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1054 = cast(meta[relay.Constant][86] /* ty=Tensor[(7, 10, 9), int64] */, dtype="bool") /* ty=Tensor[(7, 10, 9), bool] */;
  %1055 = dyn.reshape(%1052, %1053, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1056 = %1045.2;
  %1057 = %1048.4;
  %1058 = @func_10123() /* ty=Tensor[(5, 9, 16), float64] */;
  %1059 = greater(%1054, %1055) /* ty=Tensor[(7, 10, 9), bool] */;
  (%1056, %var_10175, %1057, meta[relay.Constant][85] /* ty=Tensor[(770), uint16] */, %1058, %1059)
}

def @func_10151(%var_10125: Tensor[(1, 6, 14), float32], %var_10135: Tensor[(7, 6, 14), float32]) -> (Tensor[(?, 6, 14), float32], Tensor[(7, 6, 14), float64], Tensor[(?, 6, 14), float32]) {
  %1060 = cast(meta[relay.Constant][87] /* ty=Tensor[(1, 6, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 6, 14), float32] */;
  %1061 = shape_of(%var_10125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1062 = cast(%var_10125, dtype="float32") /* ty=Tensor[(1, 6, 14), float32] */;
  %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1064 = cast(meta[relay.Constant][87] /* ty=Tensor[(1, 6, 14), float32] */, dtype="float64") /* ty=Tensor[(1, 6, 14), float64] */;
  %1065 = cast(%var_10135, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
  %1066 = cast(%var_10125, dtype="float32") /* ty=Tensor[(1, 6, 14), float32] */;
  %1067 = shape_of(meta[relay.Constant][87] /* ty=Tensor[(1, 6, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1068 = cast(meta[relay.Constant][87] /* ty=Tensor[(1, 6, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 6, 14), float32] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1070 = mod(%1062, %1063) /* ty=Tensor[(?, 6, 14), float32] */;
  %1071 = floor_mod(%1064, %1065) /* ty=Tensor[(7, 6, 14), float64] */;
  %1072 = subtract(%1068, %1069) /* ty=Tensor[(?, 6, 14), float32] */;
  (%1070, %1071, %1072)
}

def @func_10645() -> Tensor[(5, 9, 16), float64] {
  %1073 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %1073.0
}

def @func_10806(%var_10796: Tensor[(2, 160), float64]) -> (Tensor[(5, 9, 16), float64], Tensor[(14, 6, 4), bool], Tensor[(24, 14), float32], Tensor[(2, 160), float64]) {
  %1074 = cast(meta[relay.Constant][88] /* ty=Tensor[(24, 14), float32] */, dtype="float32") /* ty=Tensor[(24, 14), float32] */;
  %1075 = cast(%var_10796, dtype="float64") /* ty=Tensor[(2, 160), float64] */;
  %1076 = reshape(%1074, newshape=[14, 6, 4]) /* ty=Tensor[(14, 6, 4), float32] */;
  %1077 = reshape(%1075, newshape=[320]) /* ty=Tensor[(320), float64] */;
  %1078 = @func_5777(%1076, %1077) /* ty=(Tensor[(14, 6, 4), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */;
  %1079 = @func_10678() /* ty=Tensor[(5, 9, 16), float64] */;
  %1080 = %1078.0;
  (%1079, %1080, meta[relay.Constant][88] /* ty=Tensor[(24, 14), float32] */, %var_10796)
}

def @func_7770(%var_7764: Tensor[(5, 75), float64]) -> (Tensor[(5, 75), float32],) {
  %1081 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %1082 = %1081.1;
  %1083 = cast(%1082, dtype="float32") /* ty=Tensor[(?, 75), float32] */;
  %1084 = cast(%var_7764, dtype="float32") /* ty=Tensor[(5, 75), float32] */;
  %1085 = floor_mod(%1083, %1084) /* ty=Tensor[(5, 75), float32] */;
  (%1085,)
}

def @func_9661() -> (Tensor[(216), float32], Tensor[(1, 168), float32], Tensor[(8, 3, 9), float64], Tensor[(5, 9, 16), float64], Tensor[(588), uint8], Tensor[(5, 14, 15), float64], Tensor[(1050, 1), float64]) {
  %1086 = cast(meta[relay.Constant][89] /* ty=Tensor[(1, 168), float32] */, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
  %1087 = reshape(%1086, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), float32] */;
  %1088 = @func_7903(%1087) /* ty=(Tensor[(216), float32], Tensor[(7, 2, 12), float32]) */;
  %1089 = @func_8920() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %1090 = %1089.2;
  %1091 = cast(%1090, dtype="float64") /* ty=Tensor[(8, 3, 9), float64] */;
  %1092 = cast(meta[relay.Constant][90] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %1093 = reshape(%1092, newshape=[588, 1]) /* ty=Tensor[(588, 1), uint8] */;
  %1094 = @func_8014(%1093) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(7, 6, 14), uint8], Tensor[(588, 1), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
  %1095 = cast(meta[relay.Constant][91] /* ty=Tensor[(1050, 1), float64] */, dtype="float64") /* ty=Tensor[(1050, 1), float64] */;
  %1096 = reshape(%1095, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %1097 = %1088.0;
  %1098 = tan(%1091) /* ty=Tensor[(8, 3, 9), float64] */;
  %1099 = %1094.0;
  %1100 = @func_1612(%1096) /* ty=Tensor[(5, 14, 15), float64] */;
  (%1097, meta[relay.Constant][89] /* ty=Tensor[(1, 168), float32] */, %1098, %1099, meta[relay.Constant][90] /* ty=Tensor[(588), uint8] */, %1100, meta[relay.Constant][91] /* ty=Tensor[(1050, 1), float64] */)
}

def @func_11085() -> (Tensor[(5, 14, 15), float64],) {
  %1101 = @func_9950() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 9, 16), float64]) */;
  %1102 = %1101.0;
  (%1102,)
}

def @func_11696(%var_11626: bool, %var_11627: Tensor[(1, 5, 14), bool], %var_11656: Tensor[(720), float64]) -> (Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(6, 13, 9), float64], Tensor[(702), float64], Tensor[(720), float64], Tensor[(8, 3, 9), float32], Tensor[(?, 5, 14), uint64], Tensor[(6, 13, 9), float64]) {
  %1103 = cast(meta[relay.Constant][92] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %1104 = reshape(%1103, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %1105 = @func_9561(%1104) /* ty=(Tensor[(?, 75), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */;
  %1106 = cast(meta[relay.Constant][93] /* ty=Tensor[(702), float64] */, dtype="float64") /* ty=Tensor[(702), float64] */;
  %1107 = cast(%var_11656, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1108 = reshape(%1106, newshape=[6, 13, 9]) /* ty=Tensor[(6, 13, 9), float64] */;
  %1109 = reshape(%1107, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1110 = @func_11204(%1108, %1109) /* ty=(Tensor[(6, 13, 9), float64], Tensor[(5, 9, 16), uint8], Tensor[(720), float64]) */;
  %1111 = @func_8871() /* ty=(Tensor[(8, 3, 9), float32], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */;
  %1112 = cast(%var_11626, dtype="bool") /* ty=bool */;
  %1113 = cast(%var_11627, dtype="bool") /* ty=Tensor[(1, 5, 14), bool] */;
  %1114 = logical_and(%1112, %1113) /* ty=Tensor[(1, 5, 14), bool] */;
  %1115 = cast(%var_11627, dtype="int64") /* ty=Tensor[(1, 5, 14), int64] */;
  %1116 = cast(%var_11626, dtype="int64") /* ty=int64 */;
  %1117 = multiply(%1115, %1116) /* ty=Tensor[(1, 5, 14), int64] */;
  %1118 = cast(%1117, dtype="uint64") /* ty=Tensor[(1, 5, 14), uint64] */;
  %1119 = shape_of(%1114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1120 = cast(%1114, dtype="uint64") /* ty=Tensor[(1, 5, 14), uint64] */;
  %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1122 = %1110.0;
  %1123 = cast(%1122, dtype="float64") /* ty=Tensor[(6, 13, 9), float64] */;
  %1124 = cast(%var_11656, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1125 = reshape(%1123, newshape=[6, 13, 9]) /* ty=Tensor[(6, 13, 9), float64] */;
  %1126 = reshape(%1124, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1127 = @func_11204(%1125, %1126) /* ty=(Tensor[(6, 13, 9), float64], Tensor[(5, 9, 16), uint8], Tensor[(720), float64]) */;
  %1128 = %1105.1;
  %1129 = %1111.0;
  %1130 = bitwise_or(%1120, %1121) /* ty=Tensor[(?, 5, 14), uint64] */;
  %1131 = %1127.0;
  (%1128, meta[relay.Constant][92] /* ty=Tensor[(30), int8] */, %1122, meta[relay.Constant][93] /* ty=Tensor[(702), float64] */, %var_11656, %1129, %1130, %1131)
}

def @func_10123() -> Tensor[(5, 9, 16), float64] {
  @func_6256() /* ty=Tensor[(5, 9, 16), float64] */
}

def @func_6349() -> (Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) {
  %1132 = @func_6256() /* ty=Tensor[(5, 9, 16), float64] */;
  %1133 = cast(%1132, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %1134 = cast(%1132, dtype="int16") /* ty=Tensor[(5, 9, 16), int16] */;
  %1135 = reshape(%1133, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float64] */;
  %1136 = reshape(%1134, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), int16] */;
  %1137 = @func_6336(%1135, %1136) /* ty=(Tensor[(5, 9, 16), bool], Tensor[(5, 9, 16), uint8], Tensor[(?, 75), float64]) */;
  %1138 = %1137.2;
  (%1132, %1138)
}

def @func_11503(%var_11494: Tensor[(75), float32]) -> (Tensor[(5, 9, 16), float32], Tensor[(10, ?, 3), float32], Tensor[(65, 10), bool], Tensor[(770), uint16], Tensor[(75), float32], Tensor[(1120), float32], Tensor[(1050), float64]) {
  %1139 = @func_8042() /* ty=(Tensor[(5, 9, 16), float32],) */;
  %1140 = cast(meta[relay.Constant][94] /* ty=Tensor[(65, 10), bool] */, dtype="bool") /* ty=Tensor[(65, 10), bool] */;
  %1141 = cast(meta[relay.Constant][95] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %1142 = cast(%var_11494, dtype="float32") /* ty=Tensor[(75), float32] */;
  %1143 = cast(meta[relay.Constant][96] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1144 = cast(meta[relay.Constant][97] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1145 = reshape(%1140, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), bool] */;
  %1146 = reshape(%1141, newshape=[770]) /* ty=Tensor[(770), uint16] */;
  %1147 = reshape(%1142, newshape=[5, 15]) /* ty=Tensor[(5, 15), float32] */;
  %1148 = reshape(%1143, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %1149 = reshape(%1144, newshape=[10, 105]) /* ty=Tensor[(10, 105), float64] */;
  %1150 = @func_7684(%1145, %1146, %1147, %1148, %1149) /* ty=(Tensor[(13, 10, 5), bool], Tensor[(10, ?, 3), float32], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(576, 2), float64], Tensor[(5, 15, 1), float32], Tensor[(5, 15), float32], Tensor[(5, 15, 1), float32], Tensor[(30), int8], Tensor[(1120), float32], Tensor[(10, 105), float64]) */;
  %1151 = %1139.0;
  %1152 = %1150.1;
  (%1151, %1152, meta[relay.Constant][94] /* ty=Tensor[(65, 10), bool] */, meta[relay.Constant][95] /* ty=Tensor[(770), uint16] */, %var_11494, meta[relay.Constant][96] /* ty=Tensor[(1120), float32] */, meta[relay.Constant][97] /* ty=Tensor[(1050), float64] */)
}

def @func_7122(%var_7119: Tensor[(364), uint8]) -> (Tensor[(75), float32], Tensor[(5, 6), int8], Tensor[(70), uint16], Tensor[(7, 110), uint16], Tensor[(364), uint8]) {
  %1153 = cast(meta[relay.Constant][98] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %1154 = cast(meta[relay.Constant][99] /* ty=Tensor[(7, 110), uint16] */, dtype="uint16") /* ty=Tensor[(7, 110), uint16] */;
  %1155 = cast(meta[relay.Constant][99] /* ty=Tensor[(7, 110), uint16] */, dtype="uint16") /* ty=Tensor[(7, 110), uint16] */;
  %1156 = cast(%var_7119, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %1157 = reshape(%1153, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %1158 = reshape(%1154, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %1159 = reshape(%1155, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %1160 = reshape(%1156, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %1161 = @func_1257(%1157, %1158, %1159, %1160) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %1162 = @func_6671() /* ty=Tensor[(75), float32] */;
  %1163 = %1161.1;
  (%1162, %1163, meta[relay.Constant][98] /* ty=Tensor[(70), uint16] */, meta[relay.Constant][99] /* ty=Tensor[(7, 110), uint16] */, %var_7119)
}

def @func_7133() -> (Tensor[(320), float64],) {
  %1164 = @func_6750() /* ty=(Tensor[(75), float32], Tensor[(320), float64], Tensor[(5, 8, 8), float64]) */;
  %1165 = %1164.1;
  (%1165,)
}

def @func_6885(%var_6868: Tensor[(12, 7, 14), uint8], %var_6869: Tensor[(12, 7, 14), uint8]) -> (Tensor[(12, 7, 14), uint8], Tensor[(8, 3, 9), float32]) {
  %1166 = cast(%var_6869, dtype="uint8") /* ty=Tensor[(12, 7, 14), uint8] */;
  %1167 = shape_of(%var_6868, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1168 = cast(%var_6868, dtype="uint8") /* ty=Tensor[(12, 7, 14), uint8] */;
  %1169 = dyn.reshape(%1166, %1167, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1170 = @func_6843() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
  %1171 = add(%1168, %1169) /* ty=Tensor[(12, 7, 14), uint8] */;
  %1172 = %1170.1;
  (%1171, %1172)
}

def @func_8561(%var_8548: Tensor[(10, 44), float32]) -> (Tensor[(320), float64], Tensor[(2340), float32], Tensor[(10, 44), float32], Tensor[(1152), float64], Tensor[(770), uint16]) {
  %1173 = @func_7133() /* ty=(Tensor[(320), float64],) */;
  %1174 = cast(%var_8548, dtype="float32") /* ty=Tensor[(10, 44), float32] */;
  %1175 = reshape(%1174, newshape=[8, 11, 5]) /* ty=Tensor[(8, 11, 5), float32] */;
  %1176 = @func_4244(%1175) /* ty=(Tensor[(8, 11, 5), float32], Tensor[(2340), float32], Tensor[(14, 52), float64], Tensor[(2340), float32]) */;
  %1177 = cast(meta[relay.Constant][100] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %1178 = reshape(%1177, newshape=[770]) /* ty=Tensor[(770), uint16] */;
  %1179 = @func_8255(%1178) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(770), uint16], Tensor[(770), uint16], Tensor[(1152), float64]) */;
  %1180 = %1173.0;
  %1181 = %1176.1;
  %1182 = %1179.3;
  (%1180, %1181, %var_8548, %1182, meta[relay.Constant][100] /* ty=Tensor[(770), uint16] */)
}

def @func_5825(%var_5814: Tensor[(5, 15, 1), float32]) -> Tensor[(5, 15, 1), float32] {
  %1183 = cast(%var_5814, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  erf(%1183) /* ty=Tensor[(5, 15, 1), float32] */
}

def @func_8769() -> (Tensor[(1050), float64], Tensor[(375), float64], Tensor[(5, 14, 15), float64], Tensor[(5, 75), float32]) {
  %1184 = @func_6843() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
  %1185 = @func_7350() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %1186 = cast(meta[relay.Constant][101] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %1187 = reshape(%1186, newshape=[5, 75]) /* ty=Tensor[(5, 75), float64] */;
  %1188 = @func_7770(%1187) /* ty=(Tensor[(5, 75), float32],) */;
  %1189 = %1188.0;
  %1190 = cast(%1189, dtype="float32") /* ty=Tensor[(5, 75), float32] */;
  %1191 = %1184.3;
  %1192 = %1185.0;
  %1193 = atanh(%1190) /* ty=Tensor[(5, 75), float32] */;
  (%1191, meta[relay.Constant][101] /* ty=Tensor[(375), float64] */, %1192, %1193)
}

def @func_9738(%var_9730: Tensor[(1, 770), uint16]) -> (Tensor[(1050), float32], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(1, 770), uint16], Tensor[(364), uint8]) {
  %1194 = @func_8787() /* ty=(Tensor[(1050), float64],) */;
  %1195 = %1194.0;
  %1196 = cast(%1195, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %1197 = cast(meta[relay.Constant][102] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %1198 = cast(%var_9730, dtype="uint16") /* ty=Tensor[(1, 770), uint16] */;
  %1199 = cast(%var_9730, dtype="uint16") /* ty=Tensor[(1, 770), uint16] */;
  %1200 = cast(meta[relay.Constant][103] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %1201 = reshape(%1197, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %1202 = reshape(%1198, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %1203 = reshape(%1199, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %1204 = reshape(%1200, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %1205 = @func_1257(%1201, %1202, %1203, %1204) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %1206 = cosh(%1196) /* ty=Tensor[(1050), float32] */;
  %1207 = %1205.2;
  (%1206, %1207, meta[relay.Constant][102] /* ty=Tensor[(70), uint16] */, %var_9730, meta[relay.Constant][103] /* ty=Tensor[(364), uint8] */)
}

def @func_8726() -> (Tensor[(8, 3, 9), float32], Tensor[(5, 8, 8), float32]) {
  %1208 = @func_8340() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(320), float64], Tensor[(336), float32], Tensor[(320), float64]) */;
  %1209 = @func_6750() /* ty=(Tensor[(75), float32], Tensor[(320), float64], Tensor[(5, 8, 8), float64]) */;
  %1210 = %1209.2;
  %1211 = cast(meta[relay.Constant][104] /* ty=Tensor[(5, 8, 8), float64] */, dtype="uint8") /* ty=Tensor[(5, 8, 8), uint8] */;
  %1212 = shape_of(%1210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1213 = cast(%1210, dtype="uint8") /* ty=Tensor[(5, 8, 8), uint8] */;
  %1214 = dyn.reshape(%1211, %1212, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1215 = bitwise_and(%1213, %1214) /* ty=Tensor[(5, 8, 8), uint8] */;
  %1216 = cast(%1215, dtype="float32") /* ty=Tensor[(5, 8, 8), float32] */;
  %1217 = %1208.1;
  %1218 = asinh(%1216) /* ty=Tensor[(5, 8, 8), float32] */;
  (%1217, %1218)
}

def @func_6336(%var_6293: Tensor[(5, 9, 16), float64], %var_6316: Tensor[(5, 9, 16), int16]) -> (Tensor[(5, 9, 16), bool], Tensor[(5, 9, 16), uint8], Tensor[(?, 75), float64]) {
  %1219 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %1220 = %1219.2;
  %1221 = cast(%var_6293, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %1222 = shape_of(%1220, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1223 = cast(%1220, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %1224 = dyn.reshape(%1221, %1222, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1225 = cast(meta[relay.Constant][105] /* ty=Tensor[(5, 9, 16), float64] */, dtype="int16") /* ty=Tensor[(5, 9, 16), int16] */;
  %1226 = shape_of(%var_6293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1227 = cast(%var_6293, dtype="int16") /* ty=Tensor[(5, 9, 16), int16] */;
  %1228 = dyn.reshape(%1225, %1226, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1229 = add(%1227, %1228) /* ty=Tensor[(5, 9, 16), int16] */;
  %1230 = cast(%var_6316, dtype="uint8") /* ty=Tensor[(5, 9, 16), uint8] */;
  %1231 = shape_of(%1229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1232 = cast(%1229, dtype="uint8") /* ty=Tensor[(5, 9, 16), uint8] */;
  %1233 = dyn.reshape(%1230, %1231, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1234 = cast(meta[relay.Constant][106] /* ty=Tensor[(1, 75), float32] */, dtype="float32") /* ty=Tensor[(1, 75), float32] */;
  %1235 = reshape(%1234, newshape=[5, 15, 1]) /* ty=Tensor[(5, 15, 1), float32] */;
  %1236 = @func_5825(%1235) /* ty=Tensor[(5, 15, 1), float32] */;
  %1237 = cast(%1236, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %1238 = shape_of(meta[relay.Constant][106] /* ty=Tensor[(1, 75), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1239 = cast(meta[relay.Constant][106] /* ty=Tensor[(1, 75), float32] */, dtype="float64") /* ty=Tensor[(1, 75), float64] */;
  %1240 = dyn.reshape(%1237, %1238, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1241 = less(%1223, %1224) /* ty=Tensor[(5, 9, 16), bool] */;
  %1242 = subtract(%1232, %1233) /* ty=Tensor[(5, 9, 16), uint8] */;
  %1243 = floor_divide(%1239, %1240) /* ty=Tensor[(?, 75), float64] */;
  (%1241, %1242, %1243)
}

def @func_6433() -> (Tensor[(5, 15, 1), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) {
  %1244 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %1245 = cast(meta[relay.Constant][107] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %1246 = reshape(%1245, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %1247 = %1244.0;
  %1248 = @func_2336(%1246) /* ty=Tensor[(12, 6, 16), float64] */;
  (%1247, %1248, meta[relay.Constant][107] /* ty=Tensor[(1152), float64] */)
}

def @func_7751(%var_7726: Tensor[(9, 12, 6), float32], %var_7746: Tensor[(30), int8]) -> (Tensor[(9, 12, 6), float32], Tensor[(5, 14, 15), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) {
  %1249 = cast(%var_7726, dtype="float32") /* ty=Tensor[(9, 12, 6), float32] */;
  %1250 = @func_7597() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %1251 = cast(%var_7746, dtype="int8") /* ty=Tensor[(30), int8] */;
  %1252 = reshape(%1251, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %1253 = asin(%1249) /* ty=Tensor[(9, 12, 6), float32] */;
  %1254 = %1250.0;
  %1255 = @func_306(%1252) /* ty=Tensor[(10, ?, 3), int8] */;
  (%1253, %1254, %1255, %var_7746)
}

def @func_9561(%var_9538: Tensor[(30), int8]) -> (Tensor[(?, 75), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) {
  %1256 = @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */;
  %1257 = cast(%var_9538, dtype="int8") /* ty=Tensor[(30), int8] */;
  %1258 = reshape(%1257, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %1259 = %1256.4;
  %1260 = @func_306(%1258) /* ty=Tensor[(10, ?, 3), int8] */;
  (%1259, %1260, %var_9538)
}

def @func_8787() -> (Tensor[(1050), float64],) {
  %1261 = @func_6843() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
  %1262 = %1261.3;
  (%1262,)
}

def @func_9698() -> Tensor[(75), int32] {
  %1263 = @func_9054() /* ty=(Tensor[(75), float32], Tensor[(5, 15, 1), float32]) */;
  %1264 = %1263.0;
  %1265 = cast(meta[relay.Constant][108] /* ty=Tensor[(75), float32] */, dtype="int32") /* ty=Tensor[(75), int32] */;
  %1266 = shape_of(%1264, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1267 = cast(%1264, dtype="int32") /* ty=Tensor[(75), int32] */;
  %1268 = dyn.reshape(%1265, %1266, newshape=[]) /* ty=Tensor[(?), int32] */;
  minimum(%1267, %1268) /* ty=Tensor[(75), int32] */
}

def @func_6596(%var_6561: Tensor[(1, 350), uint32], %var_6568: Tensor[(528), uint8], %var_6569: Tensor[(4, 280), float32], %var_6570: Tensor[(1, 364), uint8], %var_6573: Tensor[(16, 364), uint8], %var_6590: Tensor[(16, 364), uint32]) -> (Tensor[(5, 9, 16), uint64], Tensor[(182, 4), float64], Tensor[(99), uint32], Tensor[(396), uint32], Tensor[(728), float64], Tensor[(2340), float32], Tensor[(10, ?, 3), int8], Tensor[(1, 350), uint32], Tensor[(30), int8], Tensor[(5, 14, 15), float64], Tensor[(528), uint8], Tensor[(4, 280), float32], Tensor[(16, 364), bool]) {
  %1269 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %1270 = %1269.0;
  %1271 = cast(meta[relay.Constant][109] /* ty=Tensor[(5, 9, 16), float64] */, dtype="uint64") /* ty=Tensor[(5, 9, 16), uint64] */;
  %1272 = shape_of(%1270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1273 = cast(%1270, dtype="uint64") /* ty=Tensor[(5, 9, 16), uint64] */;
  %1274 = dyn.reshape(%1271, %1272, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1275 = cast(meta[relay.Constant][110] /* ty=Tensor[(99), uint32] */, dtype="uint32") /* ty=Tensor[(99), uint32] */;
  %1276 = cast(meta[relay.Constant][111] /* ty=Tensor[(396), uint32] */, dtype="uint32") /* ty=Tensor[(396), uint32] */;
  %1277 = cast(meta[relay.Constant][112] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
  %1278 = cast(meta[relay.Constant][113] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1279 = reshape(%1275, newshape=[1, 9, 11]) /* ty=Tensor[(1, 9, 11), uint32] */;
  %1280 = reshape(%1276, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), uint32] */;
  %1281 = reshape(%1277, newshape=[182, 4]) /* ty=Tensor[(182, 4), float64] */;
  %1282 = reshape(%1278, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1283 = @func_3984(%1279, %1280, %1281, %1282) /* ty=(Tensor[(4, 9, 11), uint32], Tensor[(12, 13, 15), float32], Tensor[(182, 4), float64], Tensor[(2340), float32]) */;
  %1284 = cast(%var_6561, dtype="uint32") /* ty=Tensor[(1, 350), uint32] */;
  %1285 = cast(%var_6561, dtype="uint32") /* ty=Tensor[(1, 350), uint32] */;
  %1286 = cast(meta[relay.Constant][114] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
  %1287 = reshape(%1284, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), uint32] */;
  %1288 = reshape(%1285, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), uint32] */;
  %1289 = reshape(%1286, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %1290 = @func_5674(%1287, %1288, %1289) /* ty=(Tensor[(10, 5, 7), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */;
  %1291 = cast(%var_6568, dtype="uint8") /* ty=Tensor[(528), uint8] */;
  %1292 = cast(%var_6568, dtype="uint8") /* ty=Tensor[(528), uint8] */;
  %1293 = cast(%var_6569, dtype="float32") /* ty=Tensor[(4, 280), float32] */;
  %1294 = cast(%var_6570, dtype="uint8") /* ty=Tensor[(1, 364), uint8] */;
  %1295 = reshape(%1291, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), uint8] */;
  %1296 = reshape(%1292, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), uint8] */;
  %1297 = reshape(%1293, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %1298 = reshape(%1294, newshape=[7, 52]) /* ty=Tensor[(7, 52), uint8] */;
  %1299 = @func_2792(%1295, %1296, %1297, %1298) /* ty=(Tensor[(8, 6, 11), bool], Tensor[(30), int8], Tensor[(2340), float32], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(10, ?, 3), int8], Tensor[(7, 52), uint8], Tensor[(30), int8], Tensor[(1050), float64], Tensor[(5, 14, 15), float64], Tensor[(10, 16, 7), float32]) */;
  %1300 = cast(%var_6570, dtype="uint32") /* ty=Tensor[(1, 364), uint32] */;
  %1301 = cast(%var_6573, dtype="uint32") /* ty=Tensor[(16, 364), uint32] */;
  %1302 = right_shift(%1300, %1301) /* ty=Tensor[(16, 364), uint32] */;
  %1303 = cast(%var_6590, dtype="bool") /* ty=Tensor[(16, 364), bool] */;
  %1304 = shape_of(%1302, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1305 = cast(%1302, dtype="bool") /* ty=Tensor[(16, 364), bool] */;
  %1306 = dyn.reshape(%1303, %1304, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1307 = maximum(%1273, %1274) /* ty=Tensor[(5, 9, 16), uint64] */;
  %1308 = %1283.2;
  %1309 = %1290.1;
  %1310 = %1299.12;
  %1311 = less(%1305, %1306) /* ty=Tensor[(16, 364), bool] */;
  (%1307, %1308, meta[relay.Constant][110] /* ty=Tensor[(99), uint32] */, meta[relay.Constant][111] /* ty=Tensor[(396), uint32] */, meta[relay.Constant][112] /* ty=Tensor[(728), float64] */, meta[relay.Constant][113] /* ty=Tensor[(2340), float32] */, %1309, %var_6561, meta[relay.Constant][114] /* ty=Tensor[(30), int8] */, %1310, %var_6568, %var_6569, %1311)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8769() -> (Tensor[(1050), float64], Tensor[(375), float64], Tensor[(5, 14, 15), float64], Tensor[(5, 75), float32]) {
  %0 = @func_6843() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
  %1 = @func_7350() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %3 = reshape(%2, newshape=[5, 75]) /* ty=Tensor[(5, 75), float64] */;
  %4 = @func_7770(%3) /* ty=(Tensor[(5, 75), float32],) */;
  %5 = %4.0;
  %6 = cast(%5, dtype="float32") /* ty=Tensor[(5, 75), float32] */;
  %7 = %0.3;
  %8 = %1.0;
  %9 = atanh(%6) /* ty=Tensor[(5, 75), float32] */;
  (%7, meta[relay.Constant][0] /* ty=Tensor[(375), float64] */, %8, %9)
}

def @func_10928() -> Tensor[(5, 14, 15), float64] {
  %10 = @func_9206() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %10.0
}

def @func_2798(%var_2794: Tensor[(8, 6, 11), uint8], %var_2795: Tensor[(8, 6, 11), uint8], %var_2796: Tensor[(1120), float32], %var_2797: Tensor[(7, 52), uint8]) -> (Tensor[(8, 6, 11), bool], Tensor[(30), int8], Tensor[(2340), float32], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(10, ?, 3), int8], Tensor[(7, 52), uint8], Tensor[(30), int8], Tensor[(1050), float64], Tensor[(5, 14, 15), float64], Tensor[(10, 16, 7), float32]) {
  @func_2792(%var_2794, %var_2795, %var_2796, %var_2797) /* ty=(Tensor[(8, 6, 11), bool], Tensor[(30), int8], Tensor[(2340), float32], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(10, ?, 3), int8], Tensor[(7, 52), uint8], Tensor[(30), int8], Tensor[(1050), float64], Tensor[(5, 14, 15), float64], Tensor[(10, 16, 7), float32]) */
}

def @func_6220() -> (Tensor[(5, 9, 16), float64],) {
  %15 = fn () -> (Tensor[(5, 9, 16), float64],) {
    %11 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
    %12 = %11.2;
    %13 = cast(%12, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
    %14 = sigmoid(%13) /* ty=Tensor[(5, 9, 16), float64] */;
    (%14,)
  };
  %15() /* ty=(Tensor[(5, 9, 16), float64],) */
}

def @func_9423() -> Tensor[(5, 9, 16), float32] {
  %19 = fn () -> Tensor[(5, 9, 16), float32] {
    %16 = @func_9401() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(216), float32]) */;
    %17 = %16.0;
    %18 = cast(%17, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
    sinh(%18) /* ty=Tensor[(5, 9, 16), float32] */
  };
  %19() /* ty=Tensor[(5, 9, 16), float32] */
}

def @func_10276(%var_10274: Tensor[(320), float64]) -> (Tensor[(5, 9, 16), float32], Tensor[(5, 9, 16), float64], Tensor[(5, 8, 8), float64], Tensor[(336), float32], Tensor[(320), float64]) {
  @func_10273(%var_10274) /* ty=(Tensor[(5, 9, 16), float32], Tensor[(5, 9, 16), float64], Tensor[(5, 8, 8), float64], Tensor[(336), float32], Tensor[(320), float64]) */
}

def @func_11506(%var_11504: Tensor[(75), float32]) -> (Tensor[(5, 9, 16), float32], Tensor[(10, ?, 3), float32], Tensor[(65, 10), bool], Tensor[(770), uint16], Tensor[(75), float32], Tensor[(1120), float32], Tensor[(1050), float64]) {
  @func_11503(%var_11504) /* ty=(Tensor[(5, 9, 16), float32], Tensor[(10, ?, 3), float32], Tensor[(65, 10), bool], Tensor[(770), uint16], Tensor[(75), float32], Tensor[(1120), float32], Tensor[(1050), float64]) */
}

def @func_10734() -> Tensor[(320), float64] {
  %21 = fn () -> Tensor[(320), float64] {
    %20 = @func_8340() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(320), float64], Tensor[(336), float32], Tensor[(320), float64]) */;
    %20.2
  };
  %21() /* ty=Tensor[(320), float64] */
}

def @func_11155() -> (Tensor[(216), float32], Tensor[(216), float32]) {
  %25 = fn () -> (Tensor[(216), float32], Tensor[(216), float32]) {
    %22 = @func_9401() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(216), float32]) */;
    %23 = @func_10974() /* ty=Tensor[(216), float32] */;
    %24 = %22.1;
    (%23, %24)
  };
  %25() /* ty=(Tensor[(216), float32], Tensor[(216), float32]) */
}

def @func_7972(%var_7970: Tensor[(770), uint16], %var_7971: Tensor[(1152), float64]) -> (Tensor[(5, 14, 15), float64], Tensor[(5, 6), int8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) {
  @func_7968(%var_7970, %var_7971) /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 6), int8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */
}

def @func_9006(%var_9005: Tensor[(7, 84), uint8]) -> (Tensor[(320), float64], Tensor[(1050), float64], Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(7, 84), uint8], Tensor[(320), float64]) {
  %37 = fn (%var_9000: Tensor[(7, 84), uint8]) -> (Tensor[(320), float64], Tensor[(1050), float64], Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(7, 84), uint8], Tensor[(320), float64]) {
    %26 = @func_8841() /* ty=(Tensor[(320), float64],) */;
    %27 = @func_8787() /* ty=(Tensor[(1050), float64],) */;
    %28 = cast(%var_9000, dtype="uint8") /* ty=Tensor[(7, 84), uint8] */;
    %29 = reshape(%28, newshape=[588, 1]) /* ty=Tensor[(588, 1), uint8] */;
    %30 = @func_8014(%29) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(7, 6, 14), uint8], Tensor[(588, 1), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
    %31 = @func_8340() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(320), float64], Tensor[(336), float32], Tensor[(320), float64]) */;
    %32 = %26.0;
    %33 = %27.0;
    %34 = @func_6462() /* ty=Tensor[(5, 9, 16), float64] */;
    %35 = %30.0;
    %36 = %31.4;
    (%32, %33, %34, %35, %var_9000, %36)
  };
  %37(%var_9005) /* ty=(Tensor[(320), float64], Tensor[(1050), float64], Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(7, 84), uint8], Tensor[(320), float64]) */
}

def @func_9700() -> Tensor[(75), int32] {
  @func_9698() /* ty=Tensor[(75), int32] */
}

def @func_7691(%var_7686: Tensor[(13, 10, 5), bool], %var_7687: Tensor[(770), uint16], %var_7688: Tensor[(5, 15), float32], %var_7689: Tensor[(1120), float32], %var_7690: Tensor[(10, 105), float64]) -> (Tensor[(13, 10, 5), bool], Tensor[(10, ?, 3), float32], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(576, 2), float64], Tensor[(5, 15, 1), float32], Tensor[(5, 15), float32], Tensor[(5, 15, 1), float32], Tensor[(30), int8], Tensor[(1120), float32], Tensor[(10, 105), float64]) {
  @func_7684(%var_7686, %var_7687, %var_7688, %var_7689, %var_7690) /* ty=(Tensor[(13, 10, 5), bool], Tensor[(10, ?, 3), float32], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(576, 2), float64], Tensor[(5, 15, 1), float32], Tensor[(5, 15), float32], Tensor[(5, 15, 1), float32], Tensor[(30), int8], Tensor[(1120), float32], Tensor[(10, 105), float64]) */
}

def @func_8594() -> (Tensor[(5, 14, 15), float64], Tensor[(216), float32]) {
  %38 = @func_8383() /* ty=(Tensor[(320), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(1152), float64], Tensor[(588), uint8]) */;
  %39 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %40 = %38.1;
  %41 = %39.4;
  (%40, %41)
}

def @func_7315(%var_7313: Tensor[(728), float64], %var_7314: Tensor[(2340), float32]) -> (Tensor[(320), float64], Tensor[(12, 13, 15), float32], Tensor[(728), float64], Tensor[(2340), float32]) {
  %50 = fn (%var_7306: Tensor[(728), float64], %var_7307: Tensor[(2340), float32]) -> (Tensor[(320), float64], Tensor[(12, 13, 15), float32], Tensor[(728), float64], Tensor[(2340), float32]) {
    %42 = @func_7133() /* ty=(Tensor[(320), float64],) */;
    %43 = cast(%var_7306, dtype="float64") /* ty=Tensor[(728), float64] */;
    %44 = cast(%var_7307, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %45 = reshape(%43, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
    %46 = reshape(%44, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
    %47 = @func_3611(%45, %46) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) */;
    %48 = %42.0;
    %49 = %47.1;
    (%48, %49, %var_7306, %var_7307)
  };
  %50(%var_7313, %var_7314) /* ty=(Tensor[(320), float64], Tensor[(12, 13, 15), float32], Tensor[(728), float64], Tensor[(2340), float32]) */
}

def @func_7751(%var_7726: Tensor[(9, 12, 6), float32], %var_7746: Tensor[(30), int8]) -> (Tensor[(9, 12, 6), float32], Tensor[(5, 14, 15), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) {
  %51 = cast(%var_7726, dtype="float32") /* ty=Tensor[(9, 12, 6), float32] */;
  %52 = @func_7597() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %53 = cast(%var_7746, dtype="int8") /* ty=Tensor[(30), int8] */;
  %54 = reshape(%53, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %55 = asin(%51) /* ty=Tensor[(9, 12, 6), float32] */;
  %56 = %52.0;
  %57 = @func_306(%54) /* ty=Tensor[(10, ?, 3), int8] */;
  (%55, %56, %57, %var_7746)
}

def @func_3984(%var_3961: Tensor[(1, 9, 11), uint32], %var_3962: Tensor[(4, 9, 11), uint32], %var_3967: Tensor[(182, 4), float64], %var_3968: Tensor[(2340), float32]) -> (Tensor[(4, 9, 11), uint32], Tensor[(12, 13, 15), float32], Tensor[(182, 4), float64], Tensor[(2340), float32]) {
  %58 = cast(%var_3961, dtype="uint32") /* ty=Tensor[(1, 9, 11), uint32] */;
  %59 = cast(%var_3962, dtype="uint32") /* ty=Tensor[(4, 9, 11), uint32] */;
  %60 = cast(%var_3967, dtype="float64") /* ty=Tensor[(182, 4), float64] */;
  %61 = cast(%var_3968, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %62 = reshape(%60, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
  %63 = reshape(%61, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %64 = @func_3611(%62, %63) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) */;
  %65 = multiply(%58, %59) /* ty=Tensor[(4, 9, 11), uint32] */;
  %66 = %64.1;
  (%65, %66, %var_3967, %var_3968)
}

def @func_7968(%var_7948: Tensor[(770), uint16], %var_7962: Tensor[(1152), float64]) -> (Tensor[(5, 14, 15), float64], Tensor[(5, 6), int8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) {
  %67 = @func_7597() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %68 = cast(meta[relay.Constant][1] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %69 = cast(%var_7948, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %70 = cast(%var_7948, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %71 = cast(meta[relay.Constant][2] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %72 = reshape(%68, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %73 = reshape(%69, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %74 = reshape(%70, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %75 = reshape(%71, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %76 = @func_1257(%72, %73, %74, %75) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %77 = cast(%var_7962, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %78 = reshape(%77, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %79 = %67.0;
  %80 = %76.1;
  %81 = @func_2336(%78) /* ty=Tensor[(12, 6, 16), float64] */;
  (%79, %80, meta[relay.Constant][1] /* ty=Tensor[(70), uint16] */, %var_7948, meta[relay.Constant][2] /* ty=Tensor[(364), uint8] */, %81, %var_7962)
}

def @func_7539() -> (Tensor[(1152), float64],) {
  %84 = fn () -> (Tensor[(1152), float64],) {
    %82 = @func_6433() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
    %83 = %82.2;
    (%83,)
  };
  %84() /* ty=(Tensor[(1152), float64],) */
}

def @func_11024() -> (Tensor[(30), int8],) {
  %85 = @func_8663() /* ty=(Tensor[(75), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1, 1050), float64]) */;
  %86 = %85.3;
  (%86,)
}

def @func_7494(%var_7492: Tensor[(7, 6, 14), uint8]) -> Tensor[(7, 6, 14), uint8] {
  @func_7491(%var_7492) /* ty=Tensor[(7, 6, 14), uint8] */
}

def @func_11208(%var_11206: Tensor[(6, 13, 9), float64], %var_11207: Tensor[(720), float64]) -> (Tensor[(6, 13, 9), float64], Tensor[(5, 9, 16), uint8], Tensor[(720), float64]) {
  @func_11204(%var_11206, %var_11207) /* ty=(Tensor[(6, 13, 9), float64], Tensor[(5, 9, 16), uint8], Tensor[(720), float64]) */
}

def @func_8639(%var_8638: Tensor[(1152), float64]) -> (Tensor[(5, 9, 16), float64], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(1152), float64], Tensor[(75), float32]) {
  %98 = fn (%var_8624: Tensor[(1152), float64]) -> (Tensor[(5, 9, 16), float64], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(1152), float64], Tensor[(75), float32]) {
    %87 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
    %88 = %87.0;
    %89 = cast(%88, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
    %90 = cast(meta[relay.Constant][3] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
    %91 = cast(%var_8624, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %92 = reshape(%89, newshape=[12, 60]) /* ty=Tensor[(12, 60), float64] */;
    %93 = reshape(%90, newshape=[320]) /* ty=Tensor[(320), float64] */;
    %94 = reshape(%91, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
    %95 = @func_7273(%92, %93, %94) /* ty=(Tensor[(75), float32], Tensor[(5, 9, 16), bool], Tensor[(12, 60), float64], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(12, 6, 16), bool]) */;
    %96 = %95.3;
    %97 = @func_6671() /* ty=Tensor[(75), float32] */;
    (%88, %96, meta[relay.Constant][3] /* ty=Tensor[(320), float64] */, %var_8624, %97)
  };
  %98(%var_8638) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(1152), float64], Tensor[(75), float32]) */
}

def @func_7034(%var_6987: Tensor[(364), uint8], %var_6991: Tensor[(320), float64], %var_6999: Tensor[(2340), float32]) -> (Tensor[(5, 9, 16), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) {
  %99 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %100 = cast(%var_6987, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %101 = cast(%var_6987, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %102 = reshape(%100, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %103 = reshape(%101, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %104 = @func_881(%102, %103) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %105 = cast(%var_6991, dtype="float64") /* ty=Tensor[(320), float64] */;
  %106 = cast(%var_6991, dtype="float64") /* ty=Tensor[(320), float64] */;
  %107 = reshape(%105, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %108 = reshape(%106, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %109 = cast(%var_6999, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %110 = cast(%var_6999, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %111 = reshape(%109, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %112 = reshape(%110, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %113 = @func_2109(%111, %112) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */;
  %114 = %99.0;
  %115 = %104.2;
  %116 = @func_3818(%107, %108) /* ty=Tensor[(5, 8, 8), float64] */;
  %117 = %113.0;
  (%114, %115, %var_6987, %116, %var_6991, %117, %var_6999)
}

def @func_8843() -> (Tensor[(320), float64],) {
  @func_8841() /* ty=(Tensor[(320), float64],) */
}

def @func_1841(%var_1836: Tensor[(10, 16, 7), float32], %var_1837: Tensor[(10, 16, 7), float32], %var_1838: Tensor[(10, 16, 7), bool], %var_1839: Tensor[(30), int8], %var_1840: Tensor[(1050), float64]) -> (Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) {
  @func_1834(%var_1836, %var_1837, %var_1838, %var_1839, %var_1840) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */
}

def @func_8872() -> (Tensor[(8, 3, 9), float32], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) {
  %124 = fn () -> (Tensor[(8, 3, 9), float32], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) {
    %118 = @func_8340() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(320), float64], Tensor[(336), float32], Tensor[(320), float64]) */;
    %119 = cast(meta[relay.Constant][4] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
    %120 = reshape(%119, newshape=[30, 1]) /* ty=Tensor[(30, 1), int8] */;
    %121 = @func_7874(%120) /* ty=(Tensor[(1050), float64], Tensor[(1120), float32], Tensor[(10, ?, 3), int8], Tensor[(30, 1), int8]) */;
    %122 = %118.1;
    %123 = %121.2;
    (%122, %123, meta[relay.Constant][4] /* ty=Tensor[(30), int8] */)
  };
  %124() /* ty=(Tensor[(8, 3, 9), float32], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */
}

def @func_9740(%var_9739: Tensor[(1, 770), uint16]) -> (Tensor[(1050), float32], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(1, 770), uint16], Tensor[(364), uint8]) {
  %139 = fn (%var_9730: Tensor[(1, 770), uint16]) -> (Tensor[(1050), float32], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(1, 770), uint16], Tensor[(364), uint8]) {
    %125 = @func_8787() /* ty=(Tensor[(1050), float64],) */;
    %126 = %125.0;
    %127 = cast(%126, dtype="float32") /* ty=Tensor[(1050), float32] */;
    %128 = cast(meta[relay.Constant][5] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
    %129 = cast(%var_9730, dtype="uint16") /* ty=Tensor[(1, 770), uint16] */;
    %130 = cast(%var_9730, dtype="uint16") /* ty=Tensor[(1, 770), uint16] */;
    %131 = cast(meta[relay.Constant][6] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
    %132 = reshape(%128, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
    %133 = reshape(%129, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
    %134 = reshape(%130, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
    %135 = reshape(%131, newshape=[364]) /* ty=Tensor[(364), uint8] */;
    %136 = @func_1257(%132, %133, %134, %135) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
    %137 = cosh(%127) /* ty=Tensor[(1050), float32] */;
    %138 = %136.2;
    (%137, %138, meta[relay.Constant][5] /* ty=Tensor[(70), uint16] */, %var_9730, meta[relay.Constant][6] /* ty=Tensor[(364), uint8] */)
  };
  %139(%var_9739) /* ty=(Tensor[(1050), float32], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(1, 770), uint16], Tensor[(364), uint8]) */
}

def @func_8788() -> (Tensor[(1050), float64],) {
  %142 = fn () -> (Tensor[(1050), float64],) {
    %140 = @func_6843() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
    %141 = %140.3;
    (%141,)
  };
  %142() /* ty=(Tensor[(1050), float64],) */
}

def @func_9774(%var_9759: Tensor[(1050), float64]) -> (Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) {
  %143 = @func_8920() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %144 = cast(%var_9759, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %145 = reshape(%144, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %146 = %143.2;
  %147 = @func_1612(%145) /* ty=Tensor[(5, 14, 15), float64] */;
  (%146, %147, %var_9759)
}

def @func_6679() -> Tensor[(75), float32] {
  @func_6677() /* ty=Tensor[(75), float32] */
}

def @func_4247(%var_4245: Tensor[(8, 11, 5), float32]) -> (Tensor[(8, 11, 5), float32], Tensor[(2340), float32], Tensor[(14, 52), float64], Tensor[(2340), float32]) {
  @func_4244(%var_4245) /* ty=(Tensor[(8, 11, 5), float32], Tensor[(2340), float32], Tensor[(14, 52), float64], Tensor[(2340), float32]) */
}

def @func_6339(%var_6337: Tensor[(5, 9, 16), float64], %var_6338: Tensor[(5, 9, 16), int16]) -> (Tensor[(5, 9, 16), bool], Tensor[(5, 9, 16), uint8], Tensor[(?, 75), float64]) {
  %173 = fn (%var_6293: Tensor[(5, 9, 16), float64], %var_6316: Tensor[(5, 9, 16), int16]) -> (Tensor[(5, 9, 16), bool], Tensor[(5, 9, 16), uint8], Tensor[(?, 75), float64]) {
    %148 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
    %149 = %148.2;
    %150 = cast(%var_6293, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
    %151 = shape_of(%149, dtype="int32") /* ty=Tensor[(3), int32] */;
    %152 = cast(%149, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
    %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %154 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 9, 16), float64] */, dtype="int16") /* ty=Tensor[(5, 9, 16), int16] */;
    %155 = shape_of(%var_6293, dtype="int32") /* ty=Tensor[(3), int32] */;
    %156 = cast(%var_6293, dtype="int16") /* ty=Tensor[(5, 9, 16), int16] */;
    %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %158 = add(%156, %157) /* ty=Tensor[(5, 9, 16), int16] */;
    %159 = cast(%var_6316, dtype="uint8") /* ty=Tensor[(5, 9, 16), uint8] */;
    %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
    %161 = cast(%158, dtype="uint8") /* ty=Tensor[(5, 9, 16), uint8] */;
    %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %163 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 75), float32] */, dtype="float32") /* ty=Tensor[(1, 75), float32] */;
    %164 = reshape(%163, newshape=[5, 15, 1]) /* ty=Tensor[(5, 15, 1), float32] */;
    %165 = @func_5825(%164) /* ty=Tensor[(5, 15, 1), float32] */;
    %166 = cast(%165, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
    %167 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(1, 75), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %168 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 75), float32] */, dtype="float64") /* ty=Tensor[(1, 75), float64] */;
    %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %170 = less(%152, %153) /* ty=Tensor[(5, 9, 16), bool] */;
    %171 = subtract(%161, %162) /* ty=Tensor[(5, 9, 16), uint8] */;
    %172 = floor_divide(%168, %169) /* ty=Tensor[(?, 75), float64] */;
    (%170, %171, %172)
  };
  %173(%var_6337, %var_6338) /* ty=(Tensor[(5, 9, 16), bool], Tensor[(5, 9, 16), uint8], Tensor[(?, 75), float64]) */
}

def @func_9190() -> (Tensor[(5, 8, 8), float32], Tensor[(5, 9, 16), float32]) {
  @func_9188() /* ty=(Tensor[(5, 8, 8), float32], Tensor[(5, 9, 16), float32]) */
}

def @func_10809(%var_10807: Tensor[(2, 160), float64]) -> (Tensor[(5, 9, 16), float64], Tensor[(14, 6, 4), bool], Tensor[(24, 14), float32], Tensor[(2, 160), float64]) {
  @func_10806(%var_10807) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(14, 6, 4), bool], Tensor[(24, 14), float32], Tensor[(2, 160), float64]) */
}

def @func_9150(%var_9148: Tensor[(1280), float64]) -> (Tensor[(1280), int16], Tensor[(8, 2, 8), bool], Tensor[(64, 2), uint8], Tensor[(320), float64], Tensor[(588, 1), uint8]) {
  @func_9147(%var_9148) /* ty=(Tensor[(1280), int16], Tensor[(8, 2, 8), bool], Tensor[(64, 2), uint8], Tensor[(320), float64], Tensor[(588, 1), uint8]) */
}

def @func_11234() -> (Tensor[(75), float32], Tensor[(5, 14, 15), float64]) {
  %174 = @func_9206() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %175 = @func_6671() /* ty=Tensor[(75), float32] */;
  %176 = %174.0;
  (%175, %176)
}

def @func_10679() -> Tensor[(5, 9, 16), float64] {
  %177 = fn () -> Tensor[(5, 9, 16), float64] {
    @func_10645() /* ty=Tensor[(5, 9, 16), float64] */
  };
  %177() /* ty=Tensor[(5, 9, 16), float64] */
}

def @func_10124() -> Tensor[(5, 9, 16), float64] {
  %178 = fn () -> Tensor[(5, 9, 16), float64] {
    @func_6256() /* ty=Tensor[(5, 9, 16), float64] */
  };
  %178() /* ty=Tensor[(5, 9, 16), float64] */
}

def @func_10154(%var_10152: Tensor[(1, 6, 14), float32], %var_10153: Tensor[(7, 6, 14), float32]) -> (Tensor[(?, 6, 14), float32], Tensor[(7, 6, 14), float64], Tensor[(?, 6, 14), float32]) {
  %192 = fn (%var_10125: Tensor[(1, 6, 14), float32], %var_10135: Tensor[(7, 6, 14), float32]) -> (Tensor[(?, 6, 14), float32], Tensor[(7, 6, 14), float64], Tensor[(?, 6, 14), float32]) {
    %179 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 6, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 6, 14), float32] */;
    %180 = shape_of(%var_10125, dtype="int32") /* ty=Tensor[(3), int32] */;
    %181 = cast(%var_10125, dtype="float32") /* ty=Tensor[(1, 6, 14), float32] */;
    %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %183 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 6, 14), float32] */, dtype="float64") /* ty=Tensor[(1, 6, 14), float64] */;
    %184 = cast(%var_10135, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
    %185 = cast(%var_10125, dtype="float32") /* ty=Tensor[(1, 6, 14), float32] */;
    %186 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(1, 6, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %187 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 6, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 6, 14), float32] */;
    %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %189 = mod(%181, %182) /* ty=Tensor[(?, 6, 14), float32] */;
    %190 = floor_mod(%183, %184) /* ty=Tensor[(7, 6, 14), float64] */;
    %191 = subtract(%187, %188) /* ty=Tensor[(?, 6, 14), float32] */;
    (%189, %190, %191)
  };
  %192(%var_10152, %var_10153) /* ty=(Tensor[(?, 6, 14), float32], Tensor[(7, 6, 14), float64], Tensor[(?, 6, 14), float32]) */
}

def @func_7134() -> (Tensor[(320), float64],) {
  %195 = fn () -> (Tensor[(320), float64],) {
    %193 = @func_6750() /* ty=(Tensor[(75), float32], Tensor[(320), float64], Tensor[(5, 8, 8), float64]) */;
    %194 = %193.1;
    (%194,)
  };
  %195() /* ty=(Tensor[(320), float64],) */
}

def @func_6434() -> (Tensor[(5, 15, 1), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) {
  %201 = fn () -> (Tensor[(5, 15, 1), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) {
    %196 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
    %197 = cast(meta[relay.Constant][10] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %198 = reshape(%197, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
    %199 = %196.0;
    %200 = @func_2336(%198) /* ty=Tensor[(12, 6, 16), float64] */;
    (%199, %200, meta[relay.Constant][10] /* ty=Tensor[(1152), float64] */)
  };
  %201() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */
}

def @func_3717(%var_3713: Tensor[(16, 2, 12), int8], %var_3714: Tensor[(16, 2, 12), int8], %var_3715: Tensor[(728), float64], %var_3716: Tensor[(2340), float32]) -> (Tensor[(16, 2, 12), bool], Tensor[(10, 16, 7), float32], Tensor[(1120), float32], Tensor[(5, 6), int8], Tensor[(70, 15), float64], Tensor[(8, 13, 7), float64], Tensor[(728), float64], Tensor[(2340), float32]) {
  %225 = fn (%var_3677: Tensor[(16, 2, 12), int8], %var_3678: Tensor[(16, 2, 12), int8], %var_3699: Tensor[(728), float64], %var_3700: Tensor[(2340), float32]) -> (Tensor[(16, 2, 12), bool], Tensor[(10, 16, 7), float32], Tensor[(1120), float32], Tensor[(5, 6), int8], Tensor[(70, 15), float64], Tensor[(8, 13, 7), float64], Tensor[(728), float64], Tensor[(2340), float32]) {
    %202 = cast(%var_3678, dtype="bool") /* ty=Tensor[(16, 2, 12), bool] */;
    %203 = shape_of(%var_3677, dtype="int32") /* ty=Tensor[(3), int32] */;
    %204 = cast(%var_3677, dtype="bool") /* ty=Tensor[(16, 2, 12), bool] */;
    %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %206 = cast(meta[relay.Constant][11] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %207 = cast(meta[relay.Constant][11] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %208 = cast(meta[relay.Constant][11] /* ty=Tensor[(1120), float32] */, dtype="bool") /* ty=Tensor[(1120), bool] */;
    %209 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 6), int8] */, dtype="int8") /* ty=Tensor[(5, 6), int8] */;
    %210 = cast(meta[relay.Constant][13] /* ty=Tensor[(70, 15), float64] */, dtype="float64") /* ty=Tensor[(70, 15), float64] */;
    %211 = reshape(%206, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
    %212 = reshape(%207, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
    %213 = reshape(%208, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
    %214 = reshape(%209, newshape=[30]) /* ty=Tensor[(30), int8] */;
    %215 = reshape(%210, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
    %216 = @func_1834(%211, %212, %213, %214, %215) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
    %217 = cast(%var_3699, dtype="float64") /* ty=Tensor[(728), float64] */;
    %218 = cast(%var_3700, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %219 = reshape(%217, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
    %220 = reshape(%218, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
    %221 = @func_3611(%219, %220) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) */;
    %222 = not_equal(%204, %205) /* ty=Tensor[(16, 2, 12), bool] */;
    %223 = %216.0;
    %224 = %221.0;
    (%222, %223, meta[relay.Constant][11] /* ty=Tensor[(1120), float32] */, meta[relay.Constant][12] /* ty=Tensor[(5, 6), int8] */, meta[relay.Constant][13] /* ty=Tensor[(70, 15), float64] */, %224, %var_3699, %var_3700)
  };
  %225(%var_3713, %var_3714, %var_3715, %var_3716) /* ty=(Tensor[(16, 2, 12), bool], Tensor[(10, 16, 7), float32], Tensor[(1120), float32], Tensor[(5, 6), int8], Tensor[(70, 15), float64], Tensor[(8, 13, 7), float64], Tensor[(728), float64], Tensor[(2340), float32]) */
}

def @func_10930() -> Tensor[(5, 14, 15), float64] {
  @func_10928() /* ty=Tensor[(5, 14, 15), float64] */
}

def @func_10646() -> Tensor[(5, 9, 16), float64] {
  %227 = fn () -> Tensor[(5, 9, 16), float64] {
    %226 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
    %226.0
  };
  %227() /* ty=Tensor[(5, 9, 16), float64] */
}

def @func_1834(%var_1649: Tensor[(10, 16, 7), float32], %var_1650: Tensor[(10, 16, 7), float32], %var_1664: Tensor[(10, 16, 7), bool], %var_1696: Tensor[(30), int8], %var_1820: Tensor[(1050), float64]) -> (Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) {
  %228 = cast(%var_1650, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
  %229 = shape_of(%var_1649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%var_1649, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %232 = greater(%230, %231) /* ty=Tensor[(10, 16, 7), bool] */;
  %233 = cast(%var_1664, dtype="float32") /* ty=Tensor[(10, 16, 7), float32] */;
  %234 = shape_of(%232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%232, dtype="float32") /* ty=Tensor[(10, 16, 7), float32] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %237 = cast(%232, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
  %238 = shape_of(%var_1649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%var_1649, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %241 = cast(%var_1696, dtype="int8") /* ty=Tensor[(30), int8] */;
  %242 = reshape(%241, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %243 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 52), uint8] */, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %244 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 52), uint8] */, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %245 = reshape(%243, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %246 = reshape(%244, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %247 = @func_881(%245, %246) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %248 = %247.0;
  %249 = cast(%248, dtype="uint8") /* ty=Tensor[(13, 4, 7), uint8] */;
  %250 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 52), uint8] */, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %251 = reshape(%249, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %252 = reshape(%250, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %253 = @func_881(%251, %252) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %254 = cast(meta[relay.Constant][15] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %255 = cast(meta[relay.Constant][16] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %256 = cast(meta[relay.Constant][16] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %257 = cast(%248, dtype="uint8") /* ty=Tensor[(13, 4, 7), uint8] */;
  %258 = reshape(%254, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %259 = reshape(%255, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %260 = reshape(%256, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %261 = reshape(%257, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %262 = @func_1257(%258, %259, %260, %261) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %263 = cast(meta[relay.Constant][17] /* ty=Tensor[(128), uint8] */, dtype="uint8") /* ty=Tensor[(128), uint8] */;
  %264 = reshape(%263, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), uint8] */;
  %265 = @func_1127(%264) /* ty=(Tensor[(8, 2, 8), bool],) */;
  %266 = cast(%248, dtype="float64") /* ty=Tensor[(13, 4, 7), float64] */;
  %267 = log(%266) /* ty=Tensor[(13, 4, 7), float64] */;
  %268 = cast(%248, dtype="float32") /* ty=Tensor[(13, 4, 7), float32] */;
  %269 = shape_of(%267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%267, dtype="float32") /* ty=Tensor[(13, 4, 7), float32] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %272 = divide(%270, %271) /* ty=Tensor[(13, 4, 7), float32] */;
  %273 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 4, 7), float32] */, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
  %274 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%272, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %277 = %265.0;
  %278 = cast(%277, dtype="uint8") /* ty=Tensor[(8, 2, 8), uint8] */;
  %279 = reshape(%278, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), uint8] */;
  %280 = @func_1127(%279) /* ty=(Tensor[(8, 2, 8), bool],) */;
  %281 = cast(%277, dtype="uint8") /* ty=Tensor[(8, 2, 8), uint8] */;
  %282 = reshape(%281, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), uint8] */;
  %283 = @func_1127(%282) /* ty=(Tensor[(8, 2, 8), bool],) */;
  %284 = cast(meta[relay.Constant][15] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %285 = cast(meta[relay.Constant][16] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %286 = cast(meta[relay.Constant][16] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %287 = cast(%267, dtype="uint8") /* ty=Tensor[(13, 4, 7), uint8] */;
  %288 = reshape(%284, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %289 = reshape(%285, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %290 = reshape(%286, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %291 = reshape(%287, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %292 = @func_1257(%288, %289, %290, %291) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %293 = cast(%272, dtype="float32") /* ty=Tensor[(13, 4, 7), float32] */;
  %294 = %292.7;
  %295 = cast(%294, dtype="int8") /* ty=Tensor[(10, ?, 3), int8] */;
  %296 = reshape(%295, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %297 = cast(%var_1820, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %298 = reshape(%297, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %299 = cast(meta[relay.Constant][15] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %300 = cast(meta[relay.Constant][16] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %301 = cast(meta[relay.Constant][16] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %302 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 52), uint8] */, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %303 = reshape(%299, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %304 = reshape(%300, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %305 = reshape(%301, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %306 = reshape(%302, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %307 = @func_1257(%303, %304, %305, %306) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %308 = floor_mod(%235, %236) /* ty=Tensor[(10, 16, 7), float32] */;
  %309 = logical_or(%239, %240) /* ty=Tensor[(10, 16, 7), bool] */;
  %310 = @func_306(%242) /* ty=Tensor[(10, ?, 3), int8] */;
  %311 = %253.0;
  %312 = %262.2;
  %313 = not_equal(%275, %276) /* ty=Tensor[(13, 4, 7), bool] */;
  %314 = %280.0;
  %315 = %283.0;
  %316 = exp(%293) /* ty=Tensor[(13, 4, 7), float32] */;
  %317 = @func_306(%296) /* ty=Tensor[(10, ?, 3), int8] */;
  %318 = @func_1612(%298) /* ty=Tensor[(5, 14, 15), float64] */;
  %319 = %307.6;
  (%308, %309, meta[relay.Constant][14] /* ty=Tensor[(7, 52), uint8] */, %310, %var_1696, %311, %312, meta[relay.Constant][15] /* ty=Tensor[(70), uint16] */, meta[relay.Constant][16] /* ty=Tensor[(770), uint16] */, %277, meta[relay.Constant][17] /* ty=Tensor[(128), uint8] */, %313, %314, %315, %294, %316, %317, %318, %var_1820, %319)
}

def @func_11026() -> (Tensor[(30), int8],) {
  @func_11024() /* ty=(Tensor[(30), int8],) */
}

def @func_10891() -> (Tensor[(216), float32], Tensor[(?, 75), float64], Tensor[(8, 3, 9), float32]) {
  %320 = @func_9661() /* ty=(Tensor[(216), float32], Tensor[(1, 168), float32], Tensor[(8, 3, 9), float64], Tensor[(5, 9, 16), float64], Tensor[(588), uint8], Tensor[(5, 14, 15), float64], Tensor[(1050, 1), float64]) */;
  %321 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %322 = @func_8920() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %323 = %320.0;
  %324 = %321.1;
  %325 = %322.2;
  (%323, %324, %325)
}

def @func_6888(%var_6886: Tensor[(12, 7, 14), uint8], %var_6887: Tensor[(12, 7, 14), uint8]) -> (Tensor[(12, 7, 14), uint8], Tensor[(8, 3, 9), float32]) {
  %333 = fn (%var_6868: Tensor[(12, 7, 14), uint8], %var_6869: Tensor[(12, 7, 14), uint8]) -> (Tensor[(12, 7, 14), uint8], Tensor[(8, 3, 9), float32]) {
    %326 = cast(%var_6869, dtype="uint8") /* ty=Tensor[(12, 7, 14), uint8] */;
    %327 = shape_of(%var_6868, dtype="int32") /* ty=Tensor[(3), int32] */;
    %328 = cast(%var_6868, dtype="uint8") /* ty=Tensor[(12, 7, 14), uint8] */;
    %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %330 = @func_6843() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
    %331 = add(%328, %329) /* ty=Tensor[(12, 7, 14), uint8] */;
    %332 = %330.1;
    (%331, %332)
  };
  %333(%var_6886, %var_6887) /* ty=(Tensor[(12, 7, 14), uint8], Tensor[(8, 3, 9), float32]) */
}

def @func_2970(%var_2955: Tensor[(11, 16, 7), float64]) -> (Tensor[(11, 16, 7), float64],) {
  %334 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 16, 7), float64] */, dtype="bool") /* ty=Tensor[(11, 16, 7), bool] */;
  %335 = shape_of(%var_2955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %336 = cast(%var_2955, dtype="bool") /* ty=Tensor[(11, 16, 7), bool] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %338 = greater_equal(%336, %337) /* ty=Tensor[(11, 16, 7), bool] */;
  %339 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 16, 7), float64] */, dtype="uint64") /* ty=Tensor[(11, 16, 7), uint64] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%338, dtype="uint64") /* ty=Tensor[(11, 16, 7), uint64] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %343 = right_shift(%341, %342) /* ty=Tensor[(11, 16, 7), uint64] */;
  %344 = cast(%var_2955, dtype="float64") /* ty=Tensor[(11, 16, 7), float64] */;
  %345 = shape_of(%343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%343, dtype="float64") /* ty=Tensor[(11, 16, 7), float64] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %348 = floor_mod(%346, %347) /* ty=Tensor[(11, 16, 7), float64] */;
  (%348,)
}

def @func_5827(%var_5826: Tensor[(5, 15, 1), float32]) -> Tensor[(5, 15, 1), float32] {
  %350 = fn (%var_5814: Tensor[(5, 15, 1), float32]) -> Tensor[(5, 15, 1), float32] {
    %349 = cast(%var_5814, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
    erf(%349) /* ty=Tensor[(5, 15, 1), float32] */
  };
  %350(%var_5826) /* ty=Tensor[(5, 15, 1), float32] */
}

def @func_7905(%var_7904: Tensor[(7, 2, 12), float32]) -> (Tensor[(216), float32], Tensor[(7, 2, 12), float32]) {
  %357 = fn (%var_7887: Tensor[(7, 2, 12), float32]) -> (Tensor[(216), float32], Tensor[(7, 2, 12), float32]) {
    %351 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
    %352 = cast(%var_7887, dtype="float32") /* ty=Tensor[(7, 2, 12), float32] */;
    %353 = asinh(%352) /* ty=Tensor[(7, 2, 12), float32] */;
    %354 = cast(%353, dtype="float32") /* ty=Tensor[(7, 2, 12), float32] */;
    %355 = %351.4;
    %356 = acosh(%354) /* ty=Tensor[(7, 2, 12), float32] */;
    (%355, %356)
  };
  %357(%var_7904) /* ty=(Tensor[(216), float32], Tensor[(7, 2, 12), float32]) */
}

def @func_7277(%var_7274: Tensor[(12, 60), float64], %var_7275: Tensor[(320), float64], %var_7276: Tensor[(12, 6, 16), float64]) -> (Tensor[(75), float32], Tensor[(5, 9, 16), bool], Tensor[(12, 60), float64], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(12, 6, 16), bool]) {
  %377 = fn (%var_7244: Tensor[(12, 60), float64], %var_7263: Tensor[(320), float64], %var_7266: Tensor[(12, 6, 16), float64]) -> (Tensor[(75), float32], Tensor[(5, 9, 16), bool], Tensor[(12, 60), float64], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(12, 6, 16), bool]) {
    %358 = cast(%var_7244, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
    %359 = cast(%var_7244, dtype="int16") /* ty=Tensor[(12, 60), int16] */;
    %360 = reshape(%358, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float64] */;
    %361 = reshape(%359, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), int16] */;
    %362 = @func_6336(%360, %361) /* ty=(Tensor[(5, 9, 16), bool], Tensor[(5, 9, 16), uint8], Tensor[(?, 75), float64]) */;
    %363 = cast(%var_7263, dtype="float64") /* ty=Tensor[(320), float64] */;
    %364 = cast(%var_7263, dtype="float64") /* ty=Tensor[(320), float64] */;
    %365 = reshape(%363, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
    %366 = reshape(%364, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
    %367 = @func_6433() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
    %368 = %367.1;
    %369 = cast(%var_7266, dtype="bool") /* ty=Tensor[(12, 6, 16), bool] */;
    %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
    %371 = cast(%368, dtype="bool") /* ty=Tensor[(12, 6, 16), bool] */;
    %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %373 = @func_6677() /* ty=Tensor[(75), float32] */;
    %374 = %362.0;
    %375 = @func_3818(%365, %366) /* ty=Tensor[(5, 8, 8), float64] */;
    %376 = not_equal(%371, %372) /* ty=Tensor[(12, 6, 16), bool] */;
    (%373, %374, %var_7244, %375, %var_7263, %376)
  };
  %377(%var_7274, %var_7275, %var_7276) /* ty=(Tensor[(75), float32], Tensor[(5, 9, 16), bool], Tensor[(12, 60), float64], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(12, 6, 16), bool]) */
}

def @func_1129(%var_1128: Tensor[(8, 2, 8), uint8]) -> (Tensor[(8, 2, 8), bool],) {
  %381 = fn (%var_1123: Tensor[(8, 2, 8), uint8]) -> (Tensor[(8, 2, 8), bool],) {
    %378 = cast(meta[relay.Constant][20] /* ty=uint8 */, dtype="bool") /* ty=bool */;
    %379 = cast(%var_1123, dtype="bool") /* ty=Tensor[(8, 2, 8), bool] */;
    %380 = greater_equal(%378, %379) /* ty=Tensor[(8, 2, 8), bool] */;
    (%380,)
  };
  %381(%var_1128) /* ty=(Tensor[(8, 2, 8), bool],) */
}

def @func_3386(%var_3384: Tensor[(2340), float32]) -> (Tensor[(5, 12, 7), float32], Tensor[(1120), float32], Tensor[(2340), float32], Tensor[(10, ?, 3), int8], Tensor[(364), uint8], Tensor[(5, 6), int8]) {
  @func_3383(%var_3384) /* ty=(Tensor[(5, 12, 7), float32], Tensor[(1120), float32], Tensor[(2340), float32], Tensor[(10, ?, 3), int8], Tensor[(364), uint8], Tensor[(5, 6), int8]) */
}

def @func_7491(%var_7470: Tensor[(7, 6, 14), uint8]) -> Tensor[(7, 6, 14), uint8] {
  %382 = cast(%var_7470, dtype="uint8") /* ty=Tensor[(7, 6, 14), uint8] */;
  %383 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(7, 6, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 6, 14), uint8] */, dtype="uint8") /* ty=Tensor[(7, 6, 14), uint8] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_and(%384, %385) /* ty=Tensor[(7, 6, 14), uint8] */
}

def @func_11086() -> (Tensor[(5, 14, 15), float64],) {
  %388 = fn () -> (Tensor[(5, 14, 15), float64],) {
    %386 = @func_9950() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 9, 16), float64]) */;
    %387 = %386.0;
    (%387,)
  };
  %388() /* ty=(Tensor[(5, 14, 15), float64],) */
}

def @func_8823(%var_8792: Tensor[(728), float64], %var_8793: Tensor[(2340), float32]) -> (Tensor[(320), float64], Tensor[(2340), float32], Tensor[(728), float64], Tensor[(2340), float32], Tensor[(1120), float32], Tensor[(75), float32]) {
  %389 = @func_7133() /* ty=(Tensor[(320), float64],) */;
  %390 = cast(%var_8792, dtype="float64") /* ty=Tensor[(728), float64] */;
  %391 = cast(%var_8793, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %392 = reshape(%390, newshape=[728]) /* ty=Tensor[(728), float64] */;
  %393 = reshape(%391, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %394 = @func_7312(%392, %393) /* ty=(Tensor[(320), float64], Tensor[(12, 13, 15), float32], Tensor[(728), float64], Tensor[(2340), float32]) */;
  %395 = @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */;
  %396 = @func_8663() /* ty=(Tensor[(75), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1, 1050), float64]) */;
  %397 = %389.0;
  %398 = %394.3;
  %399 = %395.3;
  %400 = %396.0;
  (%397, %398, %var_8792, %var_8793, %399, %400)
}

def @func_1262(%var_1258: Tensor[(5, 1, 14), uint16], %var_1259: Tensor[(5, 11, 14), uint16], %var_1260: Tensor[(5, 11, 14), uint16], %var_1261: Tensor[(364), uint8]) -> (Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) {
  %434 = fn (%var_1186: Tensor[(5, 1, 14), uint16], %var_1187: Tensor[(5, 11, 14), uint16], %var_1196: Tensor[(5, 11, 14), uint16], %var_1210: Tensor[(364), uint8]) -> (Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) {
    %401 = cast(%var_1186, dtype="uint16") /* ty=Tensor[(5, 1, 14), uint16] */;
    %402 = cast(%var_1187, dtype="uint16") /* ty=Tensor[(5, 11, 14), uint16] */;
    %403 = left_shift(%401, %402) /* ty=Tensor[(5, 11, 14), uint16] */;
    %404 = cast(%var_1196, dtype="float64") /* ty=Tensor[(5, 11, 14), float64] */;
    %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
    %406 = cast(%403, dtype="float64") /* ty=Tensor[(5, 11, 14), float64] */;
    %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %408 = cast(%var_1210, dtype="uint8") /* ty=Tensor[(364), uint8] */;
    %409 = cast(%var_1210, dtype="uint8") /* ty=Tensor[(364), uint8] */;
    %410 = reshape(%408, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
    %411 = reshape(%409, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
    %412 = @func_881(%410, %411) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
    %413 = cast(%403, dtype="float64") /* ty=Tensor[(5, 11, 14), float64] */;
    %414 = %412.2;
    %415 = cast(%414, dtype="int8") /* ty=Tensor[(5, 6), int8] */;
    %416 = reshape(%415, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
    %417 = cast(%var_1210, dtype="uint8") /* ty=Tensor[(364), uint8] */;
    %418 = cast(%var_1210, dtype="uint8") /* ty=Tensor[(364), uint8] */;
    %419 = reshape(%417, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
    %420 = reshape(%418, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
    %421 = @func_881(%419, %420) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
    %422 = cast(%414, dtype="int8") /* ty=Tensor[(5, 6), int8] */;
    %423 = reshape(%422, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
    %424 = cast(%414, dtype="int8") /* ty=Tensor[(5, 6), int8] */;
    %425 = reshape(%424, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
    %426 = @func_306(%425) /* ty=Tensor[(10, ?, 3), int8] */;
    %427 = cast(%426, dtype="float32") /* ty=Tensor[(10, ?, 3), float32] */;
    %428 = floor_mod(%406, %407) /* ty=Tensor[(5, 11, 14), float64] */;
    %429 = sinh(%413) /* ty=Tensor[(5, 11, 14), float64] */;
    %430 = @func_306(%416) /* ty=Tensor[(10, ?, 3), int8] */;
    %431 = %421.1;
    %432 = @func_306(%423) /* ty=Tensor[(10, ?, 3), int8] */;
    %433 = sigmoid(%427) /* ty=Tensor[(10, ?, 3), float32] */;
    (%428, %414, %var_1210, %429, %430, %431, %432, %433)
  };
  %434(%var_1258, %var_1259, %var_1260, %var_1261) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */
}

def @func_7779() -> (Tensor[(5, 14, 15), float64],) {
  %437 = fn () -> (Tensor[(5, 14, 15), float64],) {
    %435 = @func_7179() /* ty=(Tensor[(5, 14, 15), float64],) */;
    %436 = %435.0;
    (%436,)
  };
  %437() /* ty=(Tensor[(5, 14, 15), float64],) */
}

def @func_11013() -> Tensor[(?, 75), float64] {
  %438 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %438.1
}

def @func_8771() -> (Tensor[(1050), float64], Tensor[(375), float64], Tensor[(5, 14, 15), float64], Tensor[(5, 75), float32]) {
  @func_8769() /* ty=(Tensor[(1050), float64], Tensor[(375), float64], Tensor[(5, 14, 15), float64], Tensor[(5, 75), float32]) */
}

def @func_11603(%var_11600: Tensor[(8, 3, 9), float32], %var_11601: Tensor[(528), uint8], %var_11602: Tensor[(364), uint8]) -> (Tensor[(216), float32], Tensor[(320), float64], Tensor[(10, ?, 3), int8], Tensor[(528), uint8], Tensor[(1120), float32], Tensor[(364), uint8], Tensor[(8, 3, 9), int64]) {
  @func_11598(%var_11600, %var_11601, %var_11602) /* ty=(Tensor[(216), float32], Tensor[(320), float64], Tensor[(10, ?, 3), int8], Tensor[(528), uint8], Tensor[(1120), float32], Tensor[(364), uint8], Tensor[(8, 3, 9), int64]) */
}

def @func_11464(%var_11460: uint16, %var_11461: Tensor[(2, 2, 13), uint16], %var_11462: Tensor[(5, 130), bool], %var_11463: Tensor[(75), float32]) -> (Tensor[(2, 2, 13), float32], Tensor[(2, 2, 13), uint32], Tensor[(1120), float32], Tensor[(5, 130), bool], Tensor[(1, 770), uint16], Tensor[(75), float32], Tensor[(1120), float32], Tensor[(364), uint8], Tensor[(?, 75), float64], Tensor[(10, 105), float64]) {
  %467 = fn (%var_11396: uint16, %var_11397: Tensor[(2, 2, 13), uint16], %var_11442: Tensor[(5, 130), bool], %var_11444: Tensor[(75), float32]) -> (Tensor[(2, 2, 13), float32], Tensor[(2, 2, 13), uint32], Tensor[(1120), float32], Tensor[(5, 130), bool], Tensor[(1, 770), uint16], Tensor[(75), float32], Tensor[(1120), float32], Tensor[(364), uint8], Tensor[(?, 75), float64], Tensor[(10, 105), float64]) {
    %439 = cast(%var_11397, dtype="float32") /* ty=Tensor[(2, 2, 13), float32] */;
    %440 = cast(%var_11396, dtype="bool") /* ty=bool */;
    %441 = cast(%var_11397, dtype="bool") /* ty=Tensor[(2, 2, 13), bool] */;
    %442 = equal(%440, %441) /* ty=Tensor[(2, 2, 13), bool] */;
    %443 = cast(%442, dtype="uint32") /* ty=Tensor[(2, 2, 13), uint32] */;
    %444 = cast(%var_11396, dtype="uint32") /* ty=uint32 */;
    %445 = cast(%var_11442, dtype="bool") /* ty=Tensor[(5, 130), bool] */;
    %446 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 770), uint16] */, dtype="uint16") /* ty=Tensor[(1, 770), uint16] */;
    %447 = cast(%var_11444, dtype="float32") /* ty=Tensor[(75), float32] */;
    %448 = cast(meta[relay.Constant][23] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %449 = cast(meta[relay.Constant][24] /* ty=Tensor[(10, 105), float64] */, dtype="float64") /* ty=Tensor[(10, 105), float64] */;
    %450 = reshape(%445, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), bool] */;
    %451 = reshape(%446, newshape=[770]) /* ty=Tensor[(770), uint16] */;
    %452 = reshape(%447, newshape=[5, 15]) /* ty=Tensor[(5, 15), float32] */;
    %453 = reshape(%448, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %454 = reshape(%449, newshape=[10, 105]) /* ty=Tensor[(10, 105), float64] */;
    %455 = @func_7684(%450, %451, %452, %453, %454) /* ty=(Tensor[(13, 10, 5), bool], Tensor[(10, ?, 3), float32], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(576, 2), float64], Tensor[(5, 15, 1), float32], Tensor[(5, 15), float32], Tensor[(5, 15, 1), float32], Tensor[(30), int8], Tensor[(1120), float32], Tensor[(10, 105), float64]) */;
    %456 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 770), uint16] */, dtype="uint16") /* ty=Tensor[(1, 770), uint16] */;
    %457 = reshape(%456, newshape=[1, 770]) /* ty=Tensor[(1, 770), uint16] */;
    %458 = @func_9738(%457) /* ty=(Tensor[(1050), float32], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(1, 770), uint16], Tensor[(364), uint8]) */;
    %459 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
    %460 = cast(meta[relay.Constant][24] /* ty=Tensor[(10, 105), float64] */, dtype="float64") /* ty=Tensor[(10, 105), float64] */;
    %461 = cosh(%439) /* ty=Tensor[(2, 2, 13), float32] */;
    %462 = logical_xor(%443, %444) /* ty=Tensor[(2, 2, 13), uint32] */;
    %463 = %455.11;
    %464 = %458.1;
    %465 = %459.1;
    %466 = tan(%460) /* ty=Tensor[(10, 105), float64] */;
    (%461, %462, %463, %var_11442, meta[relay.Constant][22] /* ty=Tensor[(1, 770), uint16] */, %var_11444, meta[relay.Constant][23] /* ty=Tensor[(1120), float32] */, %464, %465, %466)
  };
  %467(%var_11460, %var_11461, %var_11462, %var_11463) /* ty=(Tensor[(2, 2, 13), float32], Tensor[(2, 2, 13), uint32], Tensor[(1120), float32], Tensor[(5, 130), bool], Tensor[(1, 770), uint16], Tensor[(75), float32], Tensor[(1120), float32], Tensor[(364), uint8], Tensor[(?, 75), float64], Tensor[(10, 105), float64]) */
}

def @func_9208() -> (Tensor[(5, 14, 15), float64],) {
  @func_9206() /* ty=(Tensor[(5, 14, 15), float64],) */
}

def @func_8167() -> (Tensor[(320), float64], Tensor[(5, 14, 15), float64], Tensor[(5, 210), float64], Tensor[(1152), float64]) {
  @func_8165() /* ty=(Tensor[(320), float64], Tensor[(5, 14, 15), float64], Tensor[(5, 210), float64], Tensor[(1152), float64]) */
}

def @func_7125(%var_7123: Tensor[(364), uint8]) -> (Tensor[(75), float32], Tensor[(5, 6), int8], Tensor[(70), uint16], Tensor[(7, 110), uint16], Tensor[(364), uint8]) {
  @func_7122(%var_7123) /* ty=(Tensor[(75), float32], Tensor[(5, 6), int8], Tensor[(70), uint16], Tensor[(7, 110), uint16], Tensor[(364), uint8]) */
}

def @func_9081() -> (Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) {
  %473 = fn () -> (Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) {
    %468 = @func_7350() /* ty=(Tensor[(5, 14, 15), float64],) */;
    %469 = @func_8787() /* ty=(Tensor[(1050), float64],) */;
    %470 = @func_6462() /* ty=Tensor[(5, 9, 16), float64] */;
    %471 = %468.0;
    %472 = %469.0;
    (%470, %471, %472)
  };
  %473() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */
}

def @func_5517(%var_5512: Tensor[(6, 8, 8), float64], %var_5513: Tensor[(6, 8, 8), float64], %var_5514: Tensor[(7, 10), uint16], %var_5515: Tensor[(770), uint16], %var_5516: Tensor[(7, 52), uint8]) -> (Tensor[(6, 8, 8), float64], Tensor[(5, 11, 14), float64], Tensor[(7, 10), uint16], Tensor[(770), uint16], Tensor[(7, 52), uint8]) {
  %489 = fn (%var_5498: Tensor[(6, 8, 8), float64], %var_5499: Tensor[(6, 8, 8), float64], %var_5507: Tensor[(7, 10), uint16], %var_5508: Tensor[(770), uint16], %var_5509: Tensor[(7, 52), uint8]) -> (Tensor[(6, 8, 8), float64], Tensor[(5, 11, 14), float64], Tensor[(7, 10), uint16], Tensor[(770), uint16], Tensor[(7, 52), uint8]) {
    %474 = cast(%var_5499, dtype="float64") /* ty=Tensor[(6, 8, 8), float64] */;
    %475 = shape_of(%var_5498, dtype="int32") /* ty=Tensor[(3), int32] */;
    %476 = cast(%var_5498, dtype="float64") /* ty=Tensor[(6, 8, 8), float64] */;
    %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %478 = cast(%var_5507, dtype="uint16") /* ty=Tensor[(7, 10), uint16] */;
    %479 = cast(%var_5508, dtype="uint16") /* ty=Tensor[(770), uint16] */;
    %480 = cast(%var_5508, dtype="uint16") /* ty=Tensor[(770), uint16] */;
    %481 = cast(%var_5509, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
    %482 = reshape(%478, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
    %483 = reshape(%479, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
    %484 = reshape(%480, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
    %485 = reshape(%481, newshape=[364]) /* ty=Tensor[(364), uint8] */;
    %486 = @func_1257(%482, %483, %484, %485) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
    %487 = floor_mod(%476, %477) /* ty=Tensor[(6, 8, 8), float64] */;
    %488 = %486.3;
    (%487, %488, %var_5507, %var_5508, %var_5509)
  };
  %489(%var_5512, %var_5513, %var_5514, %var_5515, %var_5516) /* ty=(Tensor[(6, 8, 8), float64], Tensor[(5, 11, 14), float64], Tensor[(7, 10), uint16], Tensor[(770), uint16], Tensor[(7, 52), uint8]) */
}

def @func_7770(%var_7764: Tensor[(5, 75), float64]) -> (Tensor[(5, 75), float32],) {
  %490 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %491 = %490.1;
  %492 = cast(%491, dtype="float32") /* ty=Tensor[(?, 75), float32] */;
  %493 = cast(%var_7764, dtype="float32") /* ty=Tensor[(5, 75), float32] */;
  %494 = floor_mod(%492, %493) /* ty=Tensor[(5, 75), float32] */;
  (%494,)
}

def @func_8043() -> (Tensor[(5, 9, 16), float32],) {
  %496 = fn () -> (Tensor[(5, 9, 16), float32],) {
    %495 = @func_7076() /* ty=Tensor[(5, 9, 16), float32] */;
    (%495,)
  };
  %496() /* ty=(Tensor[(5, 9, 16), float32],) */
}

def @func_8921() -> (Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) {
  %503 = fn () -> (Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) {
    %497 = cast(meta[relay.Constant][25] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
    %498 = reshape(%497, newshape=[8, 3, 9]) /* ty=Tensor[(8, 3, 9), float32] */;
    %499 = @func_4779(%498) /* ty=(Tensor[(8, 3, 9), float32],) */;
    %500 = @func_6462() /* ty=Tensor[(5, 9, 16), float64] */;
    %501 = @func_6256() /* ty=Tensor[(5, 9, 16), float64] */;
    %502 = %499.0;
    (%500, %501, %502, meta[relay.Constant][25] /* ty=Tensor[(216), float32] */)
  };
  %503() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */
}

def @func_10893() -> (Tensor[(216), float32], Tensor[(?, 75), float64], Tensor[(8, 3, 9), float32]) {
  @func_10891() /* ty=(Tensor[(216), float32], Tensor[(?, 75), float64], Tensor[(8, 3, 9), float32]) */
}

def @func_6844() -> (Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) {
  %511 = fn () -> (Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) {
    %504 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
    %505 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
    %506 = cast(meta[relay.Constant][26] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %507 = reshape(%506, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
    %508 = %504.0;
    %509 = %505.3;
    %510 = @func_1612(%507) /* ty=Tensor[(5, 14, 15), float64] */;
    (%508, %509, %510, meta[relay.Constant][26] /* ty=Tensor[(1050), float64] */)
  };
  %511() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */
}

def @func_2973(%var_2971: Tensor[(11, 16, 7), float64]) -> (Tensor[(11, 16, 7), float64],) {
  @func_2970(%var_2971) /* ty=(Tensor[(11, 16, 7), float64],) */
}

def @func_8454() -> (Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(12, 6, 16), float64]) {
  %522 = fn () -> (Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(12, 6, 16), float64]) {
    %512 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
    %513 = @func_7350() /* ty=(Tensor[(5, 14, 15), float64],) */;
    %514 = cast(meta[relay.Constant][27] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %515 = reshape(%514, newshape=[11, 16, 7]) /* ty=Tensor[(11, 16, 7), float64] */;
    %516 = @func_2970(%515) /* ty=(Tensor[(11, 16, 7), float64],) */;
    %517 = @func_6433() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
    %518 = %512.0;
    %519 = %513.0;
    %520 = %516.0;
    %521 = %517.1;
    (%518, %519, %520, meta[relay.Constant][27] /* ty=Tensor[(1232), float64] */, %521)
  };
  %522() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(12, 6, 16), float64]) */
}

def @func_8016(%var_8015: Tensor[(588, 1), uint8]) -> (Tensor[(5, 9, 16), float64], Tensor[(7, 6, 14), uint8], Tensor[(588, 1), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) {
  %530 = fn (%var_8005: Tensor[(588, 1), uint8]) -> (Tensor[(5, 9, 16), float64], Tensor[(7, 6, 14), uint8], Tensor[(588, 1), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) {
    %523 = cast(%var_8005, dtype="uint8") /* ty=Tensor[(588, 1), uint8] */;
    %524 = reshape(%523, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), uint8] */;
    %525 = cast(meta[relay.Constant][28] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %526 = reshape(%525, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
    %527 = @func_6390() /* ty=Tensor[(5, 9, 16), float64] */;
    %528 = @func_7491(%524) /* ty=Tensor[(7, 6, 14), uint8] */;
    %529 = @func_2336(%526) /* ty=Tensor[(12, 6, 16), float64] */;
    (%527, %528, %var_8005, %529, meta[relay.Constant][28] /* ty=Tensor[(1152), float64] */)
  };
  %530(%var_8015) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(7, 6, 14), uint8], Tensor[(588, 1), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */
}

def @func_10371(%var_10325: Tensor[(75), float32], %var_10366: Tensor[(650), bool]) -> (Tensor[(75), float32], Tensor[(5, 9, 16), bool], Tensor[(1050), float64], Tensor[(5, 15, 320), float32], Tensor[(5, 9, 16), float64], Tensor[(770), uint16], Tensor[(650), bool], Tensor[(770, 1), uint16], Tensor[(1120), float32]) {
  %531 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %532 = %531.0;
  %533 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 9, 16), float64] */, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %534 = shape_of(%532, dtype="int32") /* ty=Tensor[(3), int32] */;
  %535 = cast(%532, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %537 = @func_9080() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
  %538 = @func_6750() /* ty=(Tensor[(75), float32], Tensor[(320), float64], Tensor[(5, 8, 8), float64]) */;
  %539 = %538.1;
  %540 = cast(%var_10325, dtype="float32") /* ty=Tensor[(75), float32] */;
  %541 = reshape(%540, newshape=[5, 15, 1]) /* ty=Tensor[(5, 15, 1), float32] */;
  %542 = @func_5825(%541) /* ty=Tensor[(5, 15, 1), float32] */;
  %543 = cast(%539, dtype="float32") /* ty=Tensor[(320), float32] */;
  %544 = cast(%542, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %545 = @func_8453() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(12, 6, 16), float64]) */;
  %546 = cast(%var_10366, dtype="bool") /* ty=Tensor[(650), bool] */;
  %547 = cast(meta[relay.Constant][30] /* ty=Tensor[(770, 1), uint16] */, dtype="uint16") /* ty=Tensor[(770, 1), uint16] */;
  %548 = cast(%542, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %549 = cast(meta[relay.Constant][31] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %550 = %537.2;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %552 = reshape(%546, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), bool] */;
  %553 = reshape(%547, newshape=[770]) /* ty=Tensor[(770), uint16] */;
  %554 = reshape(%548, newshape=[5, 15]) /* ty=Tensor[(5, 15), float32] */;
  %555 = reshape(%549, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %556 = reshape(%551, newshape=[10, 105]) /* ty=Tensor[(10, 105), float64] */;
  %557 = @func_7684(%552, %553, %554, %555, %556) /* ty=(Tensor[(13, 10, 5), bool], Tensor[(10, ?, 3), float32], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(576, 2), float64], Tensor[(5, 15, 1), float32], Tensor[(5, 15), float32], Tensor[(5, 15, 1), float32], Tensor[(30), int8], Tensor[(1120), float32], Tensor[(10, 105), float64]) */;
  %558 = logical_or(%535, %536) /* ty=Tensor[(5, 9, 16), bool] */;
  %559 = mod(%543, %544) /* ty=Tensor[(5, 15, 320), float32] */;
  %560 = %545.0;
  %561 = %557.3;
  (%var_10325, %558, %550, %559, %560, %561, %var_10366, meta[relay.Constant][30] /* ty=Tensor[(770, 1), uint16] */, meta[relay.Constant][31] /* ty=Tensor[(1120), float32] */)
}

def @func_10543(%var_10541: Tensor[(1152), float64], %var_10542: int32) -> (Tensor[(8, 3, 9), float32], Tensor[(5, 8, 8), float64], Tensor[(1152), float64], int32, Tensor[(5, 8, 8), float64], Tensor[(5, 8, 8), float32]) {
  %579 = fn (%var_10519: Tensor[(1152), float64], %var_10531: int32) -> (Tensor[(8, 3, 9), float32], Tensor[(5, 8, 8), float64], Tensor[(1152), float64], int32, Tensor[(5, 8, 8), float64], Tensor[(5, 8, 8), float32]) {
    %562 = @func_8920() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
    %563 = cast(%var_10519, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %564 = reshape(%563, newshape=[1152]) /* ty=Tensor[(1152), float64] */;
    %565 = @func_8637(%564) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(1152), float64], Tensor[(75), float32]) */;
    %566 = cast(%var_10531, dtype="int32") /* ty=int32 */;
    %567 = reshape(%566, newshape=[]) /* ty=int32 */;
    %568 = @func_4900(%567) /* ty=(Tensor[(13, 16, 10), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */;
    %569 = %568.1;
    %570 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
    %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
    %572 = cast(%569, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
    %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %574 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 8, 8), float64] */, dtype="float32") /* ty=Tensor[(5, 8, 8), float32] */;
    %575 = %562.2;
    %576 = %565.1;
    %577 = add(%572, %573) /* ty=Tensor[(5, 8, 8), float64] */;
    %578 = sigmoid(%574) /* ty=Tensor[(5, 8, 8), float32] */;
    (%575, %576, %var_10519, %var_10531, %577, %578)
  };
  %579(%var_10541, %var_10542) /* ty=(Tensor[(8, 3, 9), float32], Tensor[(5, 8, 8), float64], Tensor[(1152), float64], int32, Tensor[(5, 8, 8), float64], Tensor[(5, 8, 8), float32]) */
}

def @func_1612(%var_1605: Tensor[(5, 14, 15), float64]) -> Tensor[(5, 14, 15), float64] {
  %580 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 15), float64] */;
  %581 = shape_of(%var_1605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %582 = cast(%var_1605, dtype="float64") /* ty=Tensor[(5, 14, 15), float64] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  maximum(%582, %583) /* ty=Tensor[(5, 14, 15), float64] */
}

def @func_9523() -> Tensor[(320), float64] {
  %584 = @func_8841() /* ty=(Tensor[(320), float64],) */;
  %584.0
}

def @func_9561(%var_9538: Tensor[(30), int8]) -> (Tensor[(?, 75), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) {
  %585 = @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */;
  %586 = cast(%var_9538, dtype="int8") /* ty=Tensor[(30), int8] */;
  %587 = reshape(%586, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %588 = %585.4;
  %589 = @func_306(%587) /* ty=Tensor[(10, ?, 3), int8] */;
  (%588, %589, %var_9538)
}

def @func_7076() -> Tensor[(5, 9, 16), float32] {
  %590 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %591 = %590.0;
  %592 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 9, 16), float64] */, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%591, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%594, %595) /* ty=Tensor[(5, 9, 16), float32] */
}

def @func_9525() -> Tensor[(320), float64] {
  @func_9523() /* ty=Tensor[(320), float64] */
}

def @func_9894() -> (Tensor[(5, 14, 15), float64], Tensor[(5, 9, 16), float64]) {
  %599 = fn () -> (Tensor[(5, 14, 15), float64], Tensor[(5, 9, 16), float64]) {
    %596 = @func_9080() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
    %597 = %596.1;
    %598 = @func_6462() /* ty=Tensor[(5, 9, 16), float64] */;
    (%597, %598)
  };
  %599() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 9, 16), float64]) */
}

def @func_6464() -> Tensor[(5, 9, 16), float64] {
  @func_6462() /* ty=Tensor[(5, 9, 16), float64] */
}

def @func_6391() -> Tensor[(5, 9, 16), float64] {
  %601 = fn () -> Tensor[(5, 9, 16), float64] {
    %600 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
    %600.0
  };
  %601() /* ty=Tensor[(5, 9, 16), float64] */
}

def @func_8727() -> (Tensor[(8, 3, 9), float32], Tensor[(5, 8, 8), float32]) {
  %613 = fn () -> (Tensor[(8, 3, 9), float32], Tensor[(5, 8, 8), float32]) {
    %602 = @func_8340() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(320), float64], Tensor[(336), float32], Tensor[(320), float64]) */;
    %603 = @func_6750() /* ty=(Tensor[(75), float32], Tensor[(320), float64], Tensor[(5, 8, 8), float64]) */;
    %604 = %603.2;
    %605 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 8, 8), float64] */, dtype="uint8") /* ty=Tensor[(5, 8, 8), uint8] */;
    %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
    %607 = cast(%604, dtype="uint8") /* ty=Tensor[(5, 8, 8), uint8] */;
    %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %609 = bitwise_and(%607, %608) /* ty=Tensor[(5, 8, 8), uint8] */;
    %610 = cast(%609, dtype="float32") /* ty=Tensor[(5, 8, 8), float32] */;
    %611 = %602.1;
    %612 = asinh(%610) /* ty=Tensor[(5, 8, 8), float32] */;
    (%611, %612)
  };
  %613() /* ty=(Tensor[(8, 3, 9), float32], Tensor[(5, 8, 8), float32]) */
}

def @func_6257() -> Tensor[(5, 9, 16), float64] {
  %615 = fn () -> Tensor[(5, 9, 16), float64] {
    %614 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
    %614.0
  };
  %615() /* ty=Tensor[(5, 9, 16), float64] */
}

def @func_7597() -> (Tensor[(5, 14, 15), float64],) {
  %616 = @func_7350() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %617 = %616.0;
  (%617,)
}

def @func_6750() -> (Tensor[(75), float32], Tensor[(320), float64], Tensor[(5, 8, 8), float64]) {
  %618 = cast(meta[relay.Constant][36] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %619 = cast(meta[relay.Constant][36] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %620 = reshape(%618, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %621 = reshape(%619, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %622 = @func_3818(%620, %621) /* ty=Tensor[(5, 8, 8), float64] */;
  %623 = cast(%622, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
  %624 = @func_6677() /* ty=Tensor[(75), float32] */;
  %625 = log10(%623) /* ty=Tensor[(5, 8, 8), float64] */;
  (%624, meta[relay.Constant][36] /* ty=Tensor[(320), float64] */, %625)
}

def @func_3614(%var_3612: Tensor[(8, 13, 7), float64], %var_3613: Tensor[(2340), float32]) -> (Tensor[(8, 13, 7), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) {
  %639 = fn (%var_3592: Tensor[(8, 13, 7), float64], %var_3603: Tensor[(2340), float32]) -> (Tensor[(8, 13, 7), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) {
    %626 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 13, 7), float64] */, dtype="float64") /* ty=Tensor[(8, 13, 7), float64] */;
    %627 = shape_of(%var_3592, dtype="int32") /* ty=Tensor[(3), int32] */;
    %628 = cast(%var_3592, dtype="float64") /* ty=Tensor[(8, 13, 7), float64] */;
    %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %630 = cast(%var_3603, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %631 = cast(%var_3603, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %632 = reshape(%630, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
    %633 = reshape(%631, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
    %634 = @func_2109(%632, %633) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */;
    %635 = cast(%var_3603, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %636 = floor_mod(%628, %629) /* ty=Tensor[(8, 13, 7), float64] */;
    %637 = %634.0;
    %638 = sinh(%635) /* ty=Tensor[(2340), float32] */;
    (%636, %637, %638)
  };
  %639(%var_3612, %var_3613) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) */
}

def @func_4900(%var_4879: int32) -> (Tensor[(13, 16, 10), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) {
  %640 = cast(%var_4879, dtype="bool") /* ty=bool */;
  %641 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 16, 10), int32] */, dtype="bool") /* ty=Tensor[(13, 16, 10), bool] */;
  %642 = cast(meta[relay.Constant][39] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %643 = cast(meta[relay.Constant][39] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %644 = reshape(%642, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %645 = reshape(%643, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
  %646 = less(%640, %641) /* ty=Tensor[(13, 16, 10), bool] */;
  %647 = @func_3818(%644, %645) /* ty=Tensor[(5, 8, 8), float64] */;
  (%646, %647, meta[relay.Constant][39] /* ty=Tensor[(320), float64] */)
}

def @func_8384() -> (Tensor[(320), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(1152), float64], Tensor[(588), uint8]) {
  %657 = fn () -> (Tensor[(320), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(1152), float64], Tensor[(588), uint8]) {
    %648 = @func_7133() /* ty=(Tensor[(320), float64],) */;
    %649 = cast(meta[relay.Constant][40] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %650 = reshape(%649, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
    %651 = cast(meta[relay.Constant][41] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %652 = reshape(%651, newshape=[588, 1]) /* ty=Tensor[(588, 1), uint8] */;
    %653 = @func_8014(%652) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(7, 6, 14), uint8], Tensor[(588, 1), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
    %654 = %648.0;
    %655 = @func_1612(%650) /* ty=Tensor[(5, 14, 15), float64] */;
    %656 = %653.4;
    (%654, %655, meta[relay.Constant][40] /* ty=Tensor[(1050), float64] */, %656, meta[relay.Constant][41] /* ty=Tensor[(588), uint8] */)
  };
  %657() /* ty=(Tensor[(320), float64], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(1152), float64], Tensor[(588), uint8]) */
}

def @func_881(%var_865: Tensor[(13, 4, 7), uint8], %var_866: Tensor[(13, 4, 7), uint8]) -> (Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) {
  %658 = cast(%var_866, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
  %659 = shape_of(%var_865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%var_865, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %662 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 6), int8] */, dtype="int8") /* ty=Tensor[(5, 6), int8] */;
  %663 = reshape(%662, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %664 = less_equal(%660, %661) /* ty=Tensor[(13, 4, 7), bool] */;
  %665 = @func_306(%663) /* ty=Tensor[(10, ?, 3), int8] */;
  (%664, %665, meta[relay.Constant][42] /* ty=Tensor[(5, 6), int8] */)
}

def @func_9698() -> Tensor[(75), int32] {
  %666 = @func_9054() /* ty=(Tensor[(75), float32], Tensor[(5, 15, 1), float32]) */;
  %667 = %666.0;
  %668 = cast(meta[relay.Constant][43] /* ty=Tensor[(75), float32] */, dtype="int32") /* ty=Tensor[(75), int32] */;
  %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(1), int32] */;
  %670 = cast(%667, dtype="int32") /* ty=Tensor[(75), int32] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?), int32] */;
  minimum(%670, %671) /* ty=Tensor[(75), int32] */
}

def @func_10314() -> (Tensor[(5, 14, 15), float64], Tensor[(1152), float64], Tensor[(5, 9, 16), float32]) {
  %678 = fn () -> (Tensor[(5, 14, 15), float64], Tensor[(1152), float64], Tensor[(5, 9, 16), float32]) {
    %672 = @func_8453() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(12, 6, 16), float64]) */;
    %673 = @func_8165() /* ty=(Tensor[(320), float64], Tensor[(5, 14, 15), float64], Tensor[(5, 210), float64], Tensor[(1152), float64]) */;
    %674 = @func_8042() /* ty=(Tensor[(5, 9, 16), float32],) */;
    %675 = %672.1;
    %676 = %673.3;
    %677 = %674.0;
    (%675, %676, %677)
  };
  %678() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(1152), float64], Tensor[(5, 9, 16), float32]) */
}

def @func_10213(%var_10211: Tensor[(1, 10, 9), int64], %var_10212: Tensor[(720), float64]) -> (Tensor[(?, 75), float64], Tensor[(720), float64], Tensor[(364), uint8], Tensor[(770), uint16], Tensor[(5, 9, 16), float64], Tensor[(7, 10, 9), bool]) {
  @func_10209(%var_10211, %var_10212) /* ty=(Tensor[(?, 75), float64], Tensor[(720), float64], Tensor[(364), uint8], Tensor[(770), uint16], Tensor[(5, 9, 16), float64], Tensor[(7, 10, 9), bool]) */
}

def @func_9607() -> (Tensor[(5, 9, 16), float64], Tensor[(12, 6, 16), float64], Tensor[(5, 9, 16), float64]) {
  %683 = fn () -> (Tensor[(5, 9, 16), float64], Tensor[(12, 6, 16), float64], Tensor[(5, 9, 16), float64]) {
    %679 = @func_8453() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(12, 6, 16), float64]) */;
    %680 = @func_6462() /* ty=Tensor[(5, 9, 16), float64] */;
    %681 = %679.4;
    %682 = @func_6390() /* ty=Tensor[(5, 9, 16), float64] */;
    (%680, %681, %682)
  };
  %683() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(12, 6, 16), float64], Tensor[(5, 9, 16), float64]) */
}

def @func_308(%var_307: Tensor[(10, 1, 3), int8]) -> Tensor[(10, ?, 3), int8] {
  %688 = fn (%var_293: Tensor[(10, 1, 3), int8]) -> Tensor[(10, ?, 3), int8] {
    %684 = cast(meta[relay.Constant][44] /* ty=Tensor[(10, 1, 3), int8] */, dtype="int8") /* ty=Tensor[(10, 1, 3), int8] */;
    %685 = shape_of(%var_293, dtype="int32") /* ty=Tensor[(3), int32] */;
    %686 = cast(%var_293, dtype="int8") /* ty=Tensor[(10, 1, 3), int8] */;
    %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    subtract(%686, %687) /* ty=Tensor[(10, ?, 3), int8] */
  };
  %688(%var_307) /* ty=Tensor[(10, ?, 3), int8] */
}

def @func_9456() -> Tensor[(5, 14, 15), float64] {
  @func_9454() /* ty=Tensor[(5, 14, 15), float64] */
}

def @func_8563(%var_8562: Tensor[(10, 44), float32]) -> (Tensor[(320), float64], Tensor[(2340), float32], Tensor[(10, 44), float32], Tensor[(1152), float64], Tensor[(770), uint16]) {
  %699 = fn (%var_8548: Tensor[(10, 44), float32]) -> (Tensor[(320), float64], Tensor[(2340), float32], Tensor[(10, 44), float32], Tensor[(1152), float64], Tensor[(770), uint16]) {
    %689 = @func_7133() /* ty=(Tensor[(320), float64],) */;
    %690 = cast(%var_8548, dtype="float32") /* ty=Tensor[(10, 44), float32] */;
    %691 = reshape(%690, newshape=[8, 11, 5]) /* ty=Tensor[(8, 11, 5), float32] */;
    %692 = @func_4244(%691) /* ty=(Tensor[(8, 11, 5), float32], Tensor[(2340), float32], Tensor[(14, 52), float64], Tensor[(2340), float32]) */;
    %693 = cast(meta[relay.Constant][45] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
    %694 = reshape(%693, newshape=[770]) /* ty=Tensor[(770), uint16] */;
    %695 = @func_8255(%694) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(770), uint16], Tensor[(770), uint16], Tensor[(1152), float64]) */;
    %696 = %689.0;
    %697 = %692.1;
    %698 = %695.3;
    (%696, %697, %var_8548, %698, meta[relay.Constant][45] /* ty=Tensor[(770), uint16] */)
  };
  %699(%var_8562) /* ty=(Tensor[(320), float64], Tensor[(2340), float32], Tensor[(10, 44), float32], Tensor[(1152), float64], Tensor[(770), uint16]) */
}

def @func_6752() -> (Tensor[(75), float32], Tensor[(320), float64], Tensor[(5, 8, 8), float64]) {
  @func_6750() /* ty=(Tensor[(75), float32], Tensor[(320), float64], Tensor[(5, 8, 8), float64]) */
}

def @func_11252() -> (Tensor[(5, 9, 16), float32], Tensor[(5, 9, 16), float32]) {
  %704 = fn () -> (Tensor[(5, 9, 16), float32], Tensor[(5, 9, 16), float32]) {
    %700 = @func_8042() /* ty=(Tensor[(5, 9, 16), float32],) */;
    %701 = @func_10313() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(1152), float64], Tensor[(5, 9, 16), float32]) */;
    %702 = %700.0;
    %703 = %701.2;
    (%702, %703)
  };
  %704() /* ty=(Tensor[(5, 9, 16), float32], Tensor[(5, 9, 16), float32]) */
}

def @func_8827(%var_8825: Tensor[(728), float64], %var_8826: Tensor[(2340), float32]) -> (Tensor[(320), float64], Tensor[(2340), float32], Tensor[(728), float64], Tensor[(2340), float32], Tensor[(1120), float32], Tensor[(75), float32]) {
  @func_8823(%var_8825, %var_8826) /* ty=(Tensor[(320), float64], Tensor[(2340), float32], Tensor[(728), float64], Tensor[(2340), float32], Tensor[(1120), float32], Tensor[(75), float32]) */
}

def @func_10832() -> (Tensor[(75), float32], Tensor[(5, 9, 16), float64]) {
  %707 = fn () -> (Tensor[(75), float32], Tensor[(5, 9, 16), float64]) {
    %705 = @func_6671() /* ty=Tensor[(75), float32] */;
    %706 = @func_10123() /* ty=Tensor[(5, 9, 16), float64] */;
    (%705, %706)
  };
  %707() /* ty=(Tensor[(75), float32], Tensor[(5, 9, 16), float64]) */
}

def @func_10975() -> Tensor[(216), float32] {
  %709 = fn () -> Tensor[(216), float32] {
    %708 = @func_8594() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(216), float32]) */;
    %708.1
  };
  %709() /* ty=Tensor[(216), float32] */
}

def @func_10209(%var_10161: Tensor[(1, 10, 9), int64], %var_10175: Tensor[(720), float64]) -> (Tensor[(?, 75), float64], Tensor[(720), float64], Tensor[(364), uint8], Tensor[(770), uint16], Tensor[(5, 9, 16), float64], Tensor[(7, 10, 9), bool]) {
  %710 = cast(%var_10175, dtype="float64") /* ty=Tensor[(720), float64] */;
  %711 = cast(%var_10175, dtype="int16") /* ty=Tensor[(720), int16] */;
  %712 = reshape(%710, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float64] */;
  %713 = reshape(%711, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), int16] */;
  %714 = @func_6336(%712, %713) /* ty=(Tensor[(5, 9, 16), bool], Tensor[(5, 9, 16), uint8], Tensor[(?, 75), float64]) */;
  %715 = cast(meta[relay.Constant][46] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %716 = reshape(%715, newshape=[1, 770]) /* ty=Tensor[(1, 770), uint16] */;
  %717 = @func_9738(%716) /* ty=(Tensor[(1050), float32], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(1, 770), uint16], Tensor[(364), uint8]) */;
  %718 = cast(%var_10161, dtype="int64") /* ty=Tensor[(1, 10, 9), int64] */;
  %719 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 10, 9), int64] */, dtype="int64") /* ty=Tensor[(7, 10, 9), int64] */;
  %720 = add(%718, %719) /* ty=Tensor[(7, 10, 9), int64] */;
  %721 = cast(%720, dtype="bool") /* ty=Tensor[(7, 10, 9), bool] */;
  %722 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(7, 10, 9), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 10, 9), int64] */, dtype="bool") /* ty=Tensor[(7, 10, 9), bool] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %725 = %714.2;
  %726 = %717.4;
  %727 = @func_10123() /* ty=Tensor[(5, 9, 16), float64] */;
  %728 = greater(%723, %724) /* ty=Tensor[(7, 10, 9), bool] */;
  (%725, %var_10175, %726, meta[relay.Constant][46] /* ty=Tensor[(770), uint16] */, %727, %728)
}

def @func_2684(%var_2682: Tensor[(10, 16, 8), float64], %var_2683: Tensor[(1120), float32]) -> (Tensor[(10, 16, 7), bool], Tensor[(1120), float32], Tensor[(30, 1), int8], Tensor[(1050, 1), float64], Tensor[(10, 16, 8), uint8], Tensor[(5, 14, 15), float64]) {
  @func_2680(%var_2682, %var_2683) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(1120), float32], Tensor[(30, 1), int8], Tensor[(1050, 1), float64], Tensor[(10, 16, 8), uint8], Tensor[(5, 14, 15), float64]) */
}

def @func_6673() -> Tensor[(75), float32] {
  @func_6671() /* ty=Tensor[(75), float32] */
}

def @func_8596() -> (Tensor[(5, 14, 15), float64], Tensor[(216), float32]) {
  @func_8594() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(216), float32]) */
}

def @func_6677() -> Tensor[(75), float32] {
  @func_6240() /* ty=Tensor[(75), float32] */
}

def @func_9055() -> (Tensor[(75), float32], Tensor[(5, 15, 1), float32]) {
  %732 = fn () -> (Tensor[(75), float32], Tensor[(5, 15, 1), float32]) {
    %729 = @func_6433() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
    %730 = @func_6677() /* ty=Tensor[(75), float32] */;
    %731 = %729.0;
    (%730, %731)
  };
  %732() /* ty=(Tensor[(75), float32], Tensor[(5, 15, 1), float32]) */
}

def @func_2338(%var_2337: Tensor[(12, 6, 16), float64]) -> Tensor[(12, 6, 16), float64] {
  %734 = fn (%var_2322: Tensor[(12, 6, 16), float64]) -> Tensor[(12, 6, 16), float64] {
    %733 = cast(%var_2322, dtype="float64") /* ty=Tensor[(12, 6, 16), float64] */;
    sigmoid(%733) /* ty=Tensor[(12, 6, 16), float64] */
  };
  %734(%var_2337) /* ty=Tensor[(12, 6, 16), float64] */
}

def @func_7877(%var_7875: Tensor[(30, 1), int8]) -> (Tensor[(1050), float64], Tensor[(1120), float32], Tensor[(10, ?, 3), int8], Tensor[(30, 1), int8]) {
  @func_7874(%var_7875) /* ty=(Tensor[(1050), float64], Tensor[(1120), float32], Tensor[(10, ?, 3), int8], Tensor[(30, 1), int8]) */
}

def @func_6671() -> Tensor[(75), float32] {
  @func_6240() /* ty=Tensor[(75), float32] */
}

def @func_9147(%var_9114: Tensor[(1280), float64]) -> (Tensor[(1280), int16], Tensor[(8, 2, 8), bool], Tensor[(64, 2), uint8], Tensor[(320), float64], Tensor[(588, 1), uint8]) {
  %735 = @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */;
  %736 = %735.2;
  %737 = cast(%var_9114, dtype="int16") /* ty=Tensor[(1280), int16] */;
  %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(1), int32] */;
  %739 = cast(%736, dtype="int16") /* ty=Tensor[(1280), int16] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?), int16] */;
  %741 = cast(meta[relay.Constant][48] /* ty=Tensor[(64, 2), uint8] */, dtype="uint8") /* ty=Tensor[(64, 2), uint8] */;
  %742 = reshape(%741, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), uint8] */;
  %743 = @func_1127(%742) /* ty=(Tensor[(8, 2, 8), bool],) */;
  %744 = cast(meta[relay.Constant][49] /* ty=Tensor[(588, 1), uint8] */, dtype="uint8") /* ty=Tensor[(588, 1), uint8] */;
  %745 = reshape(%744, newshape=[7, 84]) /* ty=Tensor[(7, 84), uint8] */;
  %746 = @func_9004(%745) /* ty=(Tensor[(320), float64], Tensor[(1050), float64], Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(7, 84), uint8], Tensor[(320), float64]) */;
  %747 = bitwise_or(%739, %740) /* ty=Tensor[(1280), int16] */;
  %748 = %743.0;
  %749 = %746.5;
  (%747, %748, meta[relay.Constant][48] /* ty=Tensor[(64, 2), uint8] */, %749, meta[relay.Constant][49] /* ty=Tensor[(588, 1), uint8] */)
}

def @func_6242() -> Tensor[(75), float32] {
  @func_6240() /* ty=Tensor[(75), float32] */
}

def @func_8340() -> (Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(320), float64], Tensor[(336), float32], Tensor[(320), float64]) {
  %750 = @func_6843() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
  %751 = cast(meta[relay.Constant][50] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %752 = cast(meta[relay.Constant][51] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %753 = reshape(%751, newshape=[14, 6, 4]) /* ty=Tensor[(14, 6, 4), float32] */;
  %754 = reshape(%752, newshape=[320]) /* ty=Tensor[(320), float64] */;
  %755 = @func_5777(%753, %754) /* ty=(Tensor[(14, 6, 4), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */;
  %756 = @func_6390() /* ty=Tensor[(5, 9, 16), float64] */;
  %757 = %750.1;
  %758 = %755.2;
  (%756, %757, %758, meta[relay.Constant][50] /* ty=Tensor[(336), float32] */, meta[relay.Constant][51] /* ty=Tensor[(320), float64] */)
}

def @func_6462() -> Tensor[(5, 9, 16), float64] {
  %759 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %759.0
}

def @func_7599() -> (Tensor[(5, 14, 15), float64],) {
  @func_7597() /* ty=(Tensor[(5, 14, 15), float64],) */
}

def @func_8664() -> (Tensor[(75), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1, 1050), float64]) {
  %774 = fn () -> (Tensor[(75), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1, 1050), float64]) {
    %760 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
    %761 = cast(meta[relay.Constant][52] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %762 = cast(meta[relay.Constant][52] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %763 = cast(meta[relay.Constant][52] /* ty=Tensor[(1120), float32] */, dtype="bool") /* ty=Tensor[(1120), bool] */;
    %764 = cast(meta[relay.Constant][53] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
    %765 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 1050), float64] */, dtype="float64") /* ty=Tensor[(1, 1050), float64] */;
    %766 = reshape(%761, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
    %767 = reshape(%762, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
    %768 = reshape(%763, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
    %769 = reshape(%764, newshape=[30]) /* ty=Tensor[(30), int8] */;
    %770 = reshape(%765, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
    %771 = @func_1834(%766, %767, %768, %769, %770) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
    %772 = %760.1;
    %773 = %771.17;
    (%772, %773, meta[relay.Constant][52] /* ty=Tensor[(1120), float32] */, meta[relay.Constant][53] /* ty=Tensor[(30), int8] */, meta[relay.Constant][54] /* ty=Tensor[(1, 1050), float64] */)
  };
  %774() /* ty=(Tensor[(75), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1, 1050), float64]) */
}

def @func_6603(%var_6597: Tensor[(1, 350), uint32], %var_6598: Tensor[(528), uint8], %var_6599: Tensor[(4, 280), float32], %var_6600: Tensor[(1, 364), uint8], %var_6601: Tensor[(16, 364), uint8], %var_6602: Tensor[(16, 364), uint32]) -> (Tensor[(5, 9, 16), uint64], Tensor[(182, 4), float64], Tensor[(99), uint32], Tensor[(396), uint32], Tensor[(728), float64], Tensor[(2340), float32], Tensor[(10, ?, 3), int8], Tensor[(1, 350), uint32], Tensor[(30), int8], Tensor[(5, 14, 15), float64], Tensor[(528), uint8], Tensor[(4, 280), float32], Tensor[(16, 364), bool]) {
  %818 = fn (%var_6561: Tensor[(1, 350), uint32], %var_6568: Tensor[(528), uint8], %var_6569: Tensor[(4, 280), float32], %var_6570: Tensor[(1, 364), uint8], %var_6573: Tensor[(16, 364), uint8], %var_6590: Tensor[(16, 364), uint32]) -> (Tensor[(5, 9, 16), uint64], Tensor[(182, 4), float64], Tensor[(99), uint32], Tensor[(396), uint32], Tensor[(728), float64], Tensor[(2340), float32], Tensor[(10, ?, 3), int8], Tensor[(1, 350), uint32], Tensor[(30), int8], Tensor[(5, 14, 15), float64], Tensor[(528), uint8], Tensor[(4, 280), float32], Tensor[(16, 364), bool]) {
    %775 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
    %776 = %775.0;
    %777 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 9, 16), float64] */, dtype="uint64") /* ty=Tensor[(5, 9, 16), uint64] */;
    %778 = shape_of(%776, dtype="int32") /* ty=Tensor[(3), int32] */;
    %779 = cast(%776, dtype="uint64") /* ty=Tensor[(5, 9, 16), uint64] */;
    %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %781 = cast(meta[relay.Constant][56] /* ty=Tensor[(99), uint32] */, dtype="uint32") /* ty=Tensor[(99), uint32] */;
    %782 = cast(meta[relay.Constant][57] /* ty=Tensor[(396), uint32] */, dtype="uint32") /* ty=Tensor[(396), uint32] */;
    %783 = cast(meta[relay.Constant][58] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
    %784 = cast(meta[relay.Constant][59] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %785 = reshape(%781, newshape=[1, 9, 11]) /* ty=Tensor[(1, 9, 11), uint32] */;
    %786 = reshape(%782, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), uint32] */;
    %787 = reshape(%783, newshape=[182, 4]) /* ty=Tensor[(182, 4), float64] */;
    %788 = reshape(%784, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
    %789 = @func_3984(%785, %786, %787, %788) /* ty=(Tensor[(4, 9, 11), uint32], Tensor[(12, 13, 15), float32], Tensor[(182, 4), float64], Tensor[(2340), float32]) */;
    %790 = cast(%var_6561, dtype="uint32") /* ty=Tensor[(1, 350), uint32] */;
    %791 = cast(%var_6561, dtype="uint32") /* ty=Tensor[(1, 350), uint32] */;
    %792 = cast(meta[relay.Constant][60] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
    %793 = reshape(%790, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), uint32] */;
    %794 = reshape(%791, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), uint32] */;
    %795 = reshape(%792, newshape=[30]) /* ty=Tensor[(30), int8] */;
    %796 = @func_5674(%793, %794, %795) /* ty=(Tensor[(10, 5, 7), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */;
    %797 = cast(%var_6568, dtype="uint8") /* ty=Tensor[(528), uint8] */;
    %798 = cast(%var_6568, dtype="uint8") /* ty=Tensor[(528), uint8] */;
    %799 = cast(%var_6569, dtype="float32") /* ty=Tensor[(4, 280), float32] */;
    %800 = cast(%var_6570, dtype="uint8") /* ty=Tensor[(1, 364), uint8] */;
    %801 = reshape(%797, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), uint8] */;
    %802 = reshape(%798, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), uint8] */;
    %803 = reshape(%799, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %804 = reshape(%800, newshape=[7, 52]) /* ty=Tensor[(7, 52), uint8] */;
    %805 = @func_2792(%801, %802, %803, %804) /* ty=(Tensor[(8, 6, 11), bool], Tensor[(30), int8], Tensor[(2340), float32], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(10, ?, 3), int8], Tensor[(7, 52), uint8], Tensor[(30), int8], Tensor[(1050), float64], Tensor[(5, 14, 15), float64], Tensor[(10, 16, 7), float32]) */;
    %806 = cast(%var_6570, dtype="uint32") /* ty=Tensor[(1, 364), uint32] */;
    %807 = cast(%var_6573, dtype="uint32") /* ty=Tensor[(16, 364), uint32] */;
    %808 = right_shift(%806, %807) /* ty=Tensor[(16, 364), uint32] */;
    %809 = cast(%var_6590, dtype="bool") /* ty=Tensor[(16, 364), bool] */;
    %810 = shape_of(%808, dtype="int32") /* ty=Tensor[(2), int32] */;
    %811 = cast(%808, dtype="bool") /* ty=Tensor[(16, 364), bool] */;
    %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %813 = maximum(%779, %780) /* ty=Tensor[(5, 9, 16), uint64] */;
    %814 = %789.2;
    %815 = %796.1;
    %816 = %805.12;
    %817 = less(%811, %812) /* ty=Tensor[(16, 364), bool] */;
    (%813, %814, meta[relay.Constant][56] /* ty=Tensor[(99), uint32] */, meta[relay.Constant][57] /* ty=Tensor[(396), uint32] */, meta[relay.Constant][58] /* ty=Tensor[(728), float64] */, meta[relay.Constant][59] /* ty=Tensor[(2340), float32] */, %815, %var_6561, meta[relay.Constant][60] /* ty=Tensor[(30), int8] */, %816, %var_6568, %var_6569, %817)
  };
  %818(%var_6597, %var_6598, %var_6599, %var_6600, %var_6601, %var_6602) /* ty=(Tensor[(5, 9, 16), uint64], Tensor[(182, 4), float64], Tensor[(99), uint32], Tensor[(396), uint32], Tensor[(728), float64], Tensor[(2340), float32], Tensor[(10, ?, 3), int8], Tensor[(1, 350), uint32], Tensor[(30), int8], Tensor[(5, 14, 15), float64], Tensor[(528), uint8], Tensor[(4, 280), float32], Tensor[(16, 364), bool]) */
}

def @func_6201() -> (Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) {
  %830 = fn () -> (Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) {
    %819 = cast(meta[relay.Constant][61] /* ty=Tensor[(75), float32] */, dtype="float32") /* ty=Tensor[(75), float32] */;
    %820 = reshape(%819, newshape=[5, 15, 1]) /* ty=Tensor[(5, 15, 1), float32] */;
    %821 = cast(meta[relay.Constant][62] /* ty=Tensor[(5, 9, 16), float32] */, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
    %822 = sin(%821) /* ty=Tensor[(5, 9, 16), float32] */;
    %823 = cast(%822, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
    %824 = cast(meta[relay.Constant][63] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
    %825 = reshape(%824, newshape=[8, 3, 9]) /* ty=Tensor[(8, 3, 9), float32] */;
    %826 = @func_4779(%825) /* ty=(Tensor[(8, 3, 9), float32],) */;
    %827 = @func_5825(%820) /* ty=Tensor[(5, 15, 1), float32] */;
    %828 = sqrt(%823) /* ty=Tensor[(5, 9, 16), float64] */;
    %829 = %826.0;
    (%827, meta[relay.Constant][61] /* ty=Tensor[(75), float32] */, %828, %829, meta[relay.Constant][63] /* ty=Tensor[(216), float32] */)
  };
  %830() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */
}

def @func_6350() -> (Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) {
  %838 = fn () -> (Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) {
    %831 = @func_6256() /* ty=Tensor[(5, 9, 16), float64] */;
    %832 = cast(%831, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
    %833 = cast(%831, dtype="int16") /* ty=Tensor[(5, 9, 16), int16] */;
    %834 = reshape(%832, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float64] */;
    %835 = reshape(%833, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), int16] */;
    %836 = @func_6336(%834, %835) /* ty=(Tensor[(5, 9, 16), bool], Tensor[(5, 9, 16), uint8], Tensor[(?, 75), float64]) */;
    %837 = %836.2;
    (%831, %837)
  };
  %838() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */
}

def @func_9403() -> (Tensor[(5, 9, 16), float64], Tensor[(216), float32]) {
  @func_9401() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(216), float32]) */
}

def @func_8165() -> (Tensor[(320), float64], Tensor[(5, 14, 15), float64], Tensor[(5, 210), float64], Tensor[(1152), float64]) {
  %839 = @func_7133() /* ty=(Tensor[(320), float64],) */;
  %840 = cast(meta[relay.Constant][64] /* ty=Tensor[(5, 210), float64] */, dtype="float64") /* ty=Tensor[(5, 210), float64] */;
  %841 = reshape(%840, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %842 = @func_7538() /* ty=(Tensor[(1152), float64],) */;
  %843 = %839.0;
  %844 = @func_1612(%841) /* ty=Tensor[(5, 14, 15), float64] */;
  %845 = %842.0;
  (%843, %844, meta[relay.Constant][64] /* ty=Tensor[(5, 210), float64] */, %845)
}

def @func_6653() -> (Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) {
  %846 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %847 = cast(meta[relay.Constant][65] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %848 = cast(meta[relay.Constant][66] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %849 = reshape(%847, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), float64] */;
  %850 = reshape(%848, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %851 = @func_2680(%849, %850) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(1120), float32], Tensor[(30, 1), int8], Tensor[(1050, 1), float64], Tensor[(10, 16, 8), uint8], Tensor[(5, 14, 15), float64]) */;
  %852 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
  %853 = %846.0;
  %854 = %851.3;
  %855 = %852.1;
  (%853, %854, meta[relay.Constant][65] /* ty=Tensor[(1280), float64] */, meta[relay.Constant][66] /* ty=Tensor[(1120), float32] */, %855)
}

def @func_8514(%var_8482: Tensor[(1120), float32], %var_8508: Tensor[(90, 26), float32]) -> (Tensor[(75), float32], Tensor[(528), uint8], Tensor[(350), uint32], Tensor[(528), uint8], Tensor[(1120), float32], Tensor[(364), uint8], Tensor[(5824, 1), uint8], Tensor[(5, 75), float32], Tensor[(375), float64], Tensor[(728), float64], Tensor[(728), float64], Tensor[(90, 26), float32]) {
  %856 = cast(meta[relay.Constant][67] /* ty=Tensor[(350), uint32] */, dtype="uint32") /* ty=Tensor[(350), uint32] */;
  %857 = cast(meta[relay.Constant][68] /* ty=Tensor[(528), uint8] */, dtype="uint8") /* ty=Tensor[(528), uint8] */;
  %858 = cast(%var_8482, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %859 = cast(meta[relay.Constant][69] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %860 = cast(meta[relay.Constant][70] /* ty=Tensor[(5824, 1), uint8] */, dtype="uint8") /* ty=Tensor[(5824, 1), uint8] */;
  %861 = cast(meta[relay.Constant][70] /* ty=Tensor[(5824, 1), uint8] */, dtype="uint32") /* ty=Tensor[(5824, 1), uint32] */;
  %862 = reshape(%856, newshape=[1, 350]) /* ty=Tensor[(1, 350), uint32] */;
  %863 = reshape(%857, newshape=[528]) /* ty=Tensor[(528), uint8] */;
  %864 = reshape(%858, newshape=[4, 280]) /* ty=Tensor[(4, 280), float32] */;
  %865 = reshape(%859, newshape=[1, 364]) /* ty=Tensor[(1, 364), uint8] */;
  %866 = reshape(%860, newshape=[16, 364]) /* ty=Tensor[(16, 364), uint8] */;
  %867 = reshape(%861, newshape=[16, 364]) /* ty=Tensor[(16, 364), uint32] */;
  %868 = @func_6596(%862, %863, %864, %865, %866, %867) /* ty=(Tensor[(5, 9, 16), uint64], Tensor[(182, 4), float64], Tensor[(99), uint32], Tensor[(396), uint32], Tensor[(728), float64], Tensor[(2340), float32], Tensor[(10, ?, 3), int8], Tensor[(1, 350), uint32], Tensor[(30), int8], Tensor[(5, 14, 15), float64], Tensor[(528), uint8], Tensor[(4, 280), float32], Tensor[(16, 364), bool]) */;
  %869 = cast(meta[relay.Constant][71] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %870 = reshape(%869, newshape=[5, 75]) /* ty=Tensor[(5, 75), float64] */;
  %871 = @func_7770(%870) /* ty=(Tensor[(5, 75), float32],) */;
  %872 = cast(meta[relay.Constant][72] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
  %873 = cast(%var_8508, dtype="float32") /* ty=Tensor[(90, 26), float32] */;
  %874 = reshape(%872, newshape=[728]) /* ty=Tensor[(728), float64] */;
  %875 = reshape(%873, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %876 = @func_7312(%874, %875) /* ty=(Tensor[(320), float64], Tensor[(12, 13, 15), float32], Tensor[(728), float64], Tensor[(2340), float32]) */;
  %877 = @func_6240() /* ty=Tensor[(75), float32] */;
  %878 = %868.10;
  %879 = %871.0;
  %880 = %876.2;
  (%877, %878, meta[relay.Constant][67] /* ty=Tensor[(350), uint32] */, meta[relay.Constant][68] /* ty=Tensor[(528), uint8] */, %var_8482, meta[relay.Constant][69] /* ty=Tensor[(364), uint8] */, meta[relay.Constant][70] /* ty=Tensor[(5824, 1), uint8] */, %879, meta[relay.Constant][71] /* ty=Tensor[(375), float64] */, %880, meta[relay.Constant][72] /* ty=Tensor[(728), float64] */, %var_8508)
}

def @func_11503(%var_11494: Tensor[(75), float32]) -> (Tensor[(5, 9, 16), float32], Tensor[(10, ?, 3), float32], Tensor[(65, 10), bool], Tensor[(770), uint16], Tensor[(75), float32], Tensor[(1120), float32], Tensor[(1050), float64]) {
  %881 = @func_8042() /* ty=(Tensor[(5, 9, 16), float32],) */;
  %882 = cast(meta[relay.Constant][73] /* ty=Tensor[(65, 10), bool] */, dtype="bool") /* ty=Tensor[(65, 10), bool] */;
  %883 = cast(meta[relay.Constant][74] /* ty=Tensor[(770), uint16] */, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %884 = cast(%var_11494, dtype="float32") /* ty=Tensor[(75), float32] */;
  %885 = cast(meta[relay.Constant][75] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %886 = cast(meta[relay.Constant][76] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %887 = reshape(%882, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), bool] */;
  %888 = reshape(%883, newshape=[770]) /* ty=Tensor[(770), uint16] */;
  %889 = reshape(%884, newshape=[5, 15]) /* ty=Tensor[(5, 15), float32] */;
  %890 = reshape(%885, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %891 = reshape(%886, newshape=[10, 105]) /* ty=Tensor[(10, 105), float64] */;
  %892 = @func_7684(%887, %888, %889, %890, %891) /* ty=(Tensor[(13, 10, 5), bool], Tensor[(10, ?, 3), float32], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(576, 2), float64], Tensor[(5, 15, 1), float32], Tensor[(5, 15), float32], Tensor[(5, 15, 1), float32], Tensor[(30), int8], Tensor[(1120), float32], Tensor[(10, 105), float64]) */;
  %893 = %881.0;
  %894 = %892.1;
  (%893, %894, meta[relay.Constant][73] /* ty=Tensor[(65, 10), bool] */, meta[relay.Constant][74] /* ty=Tensor[(770), uint16] */, %var_11494, meta[relay.Constant][75] /* ty=Tensor[(1120), float32] */, meta[relay.Constant][76] /* ty=Tensor[(1050), float64] */)
}

def @func_885(%var_883: Tensor[(13, 4, 7), uint8], %var_884: Tensor[(13, 4, 7), uint8]) -> (Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) {
  @func_881(%var_883, %var_884) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */
}

def @func_9206() -> (Tensor[(5, 14, 15), float64],) {
  %895 = @func_7179() /* ty=(Tensor[(5, 14, 15), float64],) */;
  %896 = %895.0;
  (%896,)
}

def @func_5674(%var_5598: Tensor[(10, 5, 7), uint32], %var_5599: Tensor[(10, 5, 7), uint32], %var_5641: Tensor[(30), int8]) -> (Tensor[(10, 5, 7), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) {
  %897 = cast(%var_5599, dtype="uint32") /* ty=Tensor[(10, 5, 7), uint32] */;
  %898 = shape_of(%var_5598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%var_5598, dtype="uint32") /* ty=Tensor[(10, 5, 7), uint32] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %901 = right_shift(%899, %900) /* ty=Tensor[(10, 5, 7), uint32] */;
  %902 = cast(%var_5598, dtype="float64") /* ty=Tensor[(10, 5, 7), float64] */;
  %903 = log10(%902) /* ty=Tensor[(10, 5, 7), float64] */;
  %904 = cast(%903, dtype="float64") /* ty=Tensor[(10, 5, 7), float64] */;
  %905 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%901, dtype="float64") /* ty=Tensor[(10, 5, 7), float64] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %908 = cast(%var_5641, dtype="int8") /* ty=Tensor[(30), int8] */;
  %909 = reshape(%908, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
  %910 = mod(%906, %907) /* ty=Tensor[(10, 5, 7), float64] */;
  %911 = @func_306(%909) /* ty=Tensor[(10, ?, 3), int8] */;
  (%910, %911, %var_5641)
}

def @func_11204(%var_11192: Tensor[(6, 13, 9), float64], %var_11200: Tensor[(720), float64]) -> (Tensor[(6, 13, 9), float64], Tensor[(5, 9, 16), uint8], Tensor[(720), float64]) {
  %912 = cast(%var_11192, dtype="float64") /* ty=Tensor[(6, 13, 9), float64] */;
  %913 = cast(%var_11200, dtype="float64") /* ty=Tensor[(720), float64] */;
  %914 = cast(%var_11200, dtype="int16") /* ty=Tensor[(720), int16] */;
  %915 = reshape(%913, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float64] */;
  %916 = reshape(%914, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), int16] */;
  %917 = @func_6336(%915, %916) /* ty=(Tensor[(5, 9, 16), bool], Tensor[(5, 9, 16), uint8], Tensor[(?, 75), float64]) */;
  %918 = log10(%912) /* ty=Tensor[(6, 13, 9), float64] */;
  %919 = %917.1;
  (%918, %919, %var_11200)
}

def @func_10748(%var_10747: Tensor[(2340), float32]) -> (Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(2340), float32]) {
  %927 = fn (%var_10740: Tensor[(2340), float32]) -> (Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(2340), float32]) {
    %920 = cast(%var_10740, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %921 = cast(%var_10740, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %922 = reshape(%920, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
    %923 = reshape(%921, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
    %924 = @func_2109(%922, %923) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */;
    %925 = @func_6256() /* ty=Tensor[(5, 9, 16), float64] */;
    %926 = %924.1;
    (%925, %926, %var_10740)
  };
  %927(%var_10747) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(2340), float32]) */
}

def @func_9297(%var_9293: Tensor[(16, 10, 11), float64], %var_9294: Tensor[(16, 10, 11), float64], %var_9295: Tensor[(30), int8], %var_9296: Tensor[(728), float64]) -> (Tensor[(16, 10, 11), float64], Tensor[(5, 6), int8], Tensor[(30), int8], Tensor[(12, 13, 15), float32], Tensor[(99), uint32], Tensor[(396), uint32], Tensor[(728), float64], Tensor[(2340, 1), float32]) {
  %947 = fn (%var_9256: Tensor[(16, 10, 11), float64], %var_9257: Tensor[(16, 10, 11), float64], %var_9266: Tensor[(30), int8], %var_9276: Tensor[(728), float64]) -> (Tensor[(16, 10, 11), float64], Tensor[(5, 6), int8], Tensor[(30), int8], Tensor[(12, 13, 15), float32], Tensor[(99), uint32], Tensor[(396), uint32], Tensor[(728), float64], Tensor[(2340, 1), float32]) {
    %928 = cast(%var_9257, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
    %929 = shape_of(%var_9256, dtype="int32") /* ty=Tensor[(3), int32] */;
    %930 = cast(%var_9256, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
    %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %932 = cast(%var_9266, dtype="int8") /* ty=Tensor[(30), int8] */;
    %933 = reshape(%932, newshape=[5, 6]) /* ty=Tensor[(5, 6), int8] */;
    %934 = @func_6947(%933) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
    %935 = cast(meta[relay.Constant][77] /* ty=Tensor[(99), uint32] */, dtype="uint32") /* ty=Tensor[(99), uint32] */;
    %936 = cast(meta[relay.Constant][78] /* ty=Tensor[(396), uint32] */, dtype="uint32") /* ty=Tensor[(396), uint32] */;
    %937 = cast(%var_9276, dtype="float64") /* ty=Tensor[(728), float64] */;
    %938 = cast(meta[relay.Constant][79] /* ty=Tensor[(2340, 1), float32] */, dtype="float32") /* ty=Tensor[(2340, 1), float32] */;
    %939 = reshape(%935, newshape=[1, 9, 11]) /* ty=Tensor[(1, 9, 11), uint32] */;
    %940 = reshape(%936, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), uint32] */;
    %941 = reshape(%937, newshape=[182, 4]) /* ty=Tensor[(182, 4), float64] */;
    %942 = reshape(%938, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
    %943 = @func_3984(%939, %940, %941, %942) /* ty=(Tensor[(4, 9, 11), uint32], Tensor[(12, 13, 15), float32], Tensor[(182, 4), float64], Tensor[(2340), float32]) */;
    %944 = power(%930, %931) /* ty=Tensor[(16, 10, 11), float64] */;
    %945 = %934.2;
    %946 = %943.1;
    (%944, %945, %var_9266, %946, meta[relay.Constant][77] /* ty=Tensor[(99), uint32] */, meta[relay.Constant][78] /* ty=Tensor[(396), uint32] */, %var_9276, meta[relay.Constant][79] /* ty=Tensor[(2340, 1), float32] */)
  };
  %947(%var_9293, %var_9294, %var_9295, %var_9296) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(5, 6), int8], Tensor[(30), int8], Tensor[(12, 13, 15), float32], Tensor[(99), uint32], Tensor[(396), uint32], Tensor[(728), float64], Tensor[(2340, 1), float32]) */
}

def @func_5679(%var_5676: Tensor[(10, 5, 7), uint32], %var_5677: Tensor[(10, 5, 7), uint32], %var_5678: Tensor[(30), int8]) -> (Tensor[(10, 5, 7), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) {
  @func_5674(%var_5676, %var_5677, %var_5678) /* ty=(Tensor[(10, 5, 7), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */
}

def @func_2680(%var_2624: Tensor[(10, 16, 8), float64], %var_2639: Tensor[(1120), float32]) -> (Tensor[(10, 16, 7), bool], Tensor[(1120), float32], Tensor[(30, 1), int8], Tensor[(1050, 1), float64], Tensor[(10, 16, 8), uint8], Tensor[(5, 14, 15), float64]) {
  %948 = cast(%var_2639, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %949 = cast(%var_2639, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %950 = cast(%var_2639, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %951 = cast(meta[relay.Constant][80] /* ty=Tensor[(30, 1), int8] */, dtype="int8") /* ty=Tensor[(30, 1), int8] */;
  %952 = cast(meta[relay.Constant][81] /* ty=Tensor[(1050, 1), float64] */, dtype="float64") /* ty=Tensor[(1050, 1), float64] */;
  %953 = reshape(%948, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %954 = reshape(%949, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %955 = reshape(%950, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
  %956 = reshape(%951, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %957 = reshape(%952, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %958 = @func_1834(%953, %954, %955, %956, %957) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
  %959 = cast(%var_2624, dtype="float64") /* ty=Tensor[(10, 16, 8), float64] */;
  %960 = sinh(%959) /* ty=Tensor[(10, 16, 8), float64] */;
  %961 = cast(%var_2624, dtype="uint8") /* ty=Tensor[(10, 16, 8), uint8] */;
  %962 = shape_of(%960, dtype="int32") /* ty=Tensor[(3), int32] */;
  %963 = cast(%960, dtype="uint8") /* ty=Tensor[(10, 16, 8), uint8] */;
  %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %965 = cast(meta[relay.Constant][81] /* ty=Tensor[(1050, 1), float64] */, dtype="float64") /* ty=Tensor[(1050, 1), float64] */;
  %966 = reshape(%965, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %967 = %958.1;
  %968 = add(%963, %964) /* ty=Tensor[(10, 16, 8), uint8] */;
  %969 = @func_1612(%966) /* ty=Tensor[(5, 14, 15), float64] */;
  (%967, %var_2639, meta[relay.Constant][80] /* ty=Tensor[(30, 1), int8] */, meta[relay.Constant][81] /* ty=Tensor[(1050, 1), float64] */, %968, %969)
}

def @func_7122(%var_7119: Tensor[(364), uint8]) -> (Tensor[(75), float32], Tensor[(5, 6), int8], Tensor[(70), uint16], Tensor[(7, 110), uint16], Tensor[(364), uint8]) {
  %970 = cast(meta[relay.Constant][82] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %971 = cast(meta[relay.Constant][83] /* ty=Tensor[(7, 110), uint16] */, dtype="uint16") /* ty=Tensor[(7, 110), uint16] */;
  %972 = cast(meta[relay.Constant][83] /* ty=Tensor[(7, 110), uint16] */, dtype="uint16") /* ty=Tensor[(7, 110), uint16] */;
  %973 = cast(%var_7119, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %974 = reshape(%970, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %975 = reshape(%971, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %976 = reshape(%972, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %977 = reshape(%973, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %978 = @func_1257(%974, %975, %976, %977) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %979 = @func_6671() /* ty=Tensor[(75), float32] */;
  %980 = %978.1;
  (%979, %980, meta[relay.Constant][82] /* ty=Tensor[(70), uint16] */, meta[relay.Constant][83] /* ty=Tensor[(7, 110), uint16] */, %var_7119)
}

def @func_1615(%var_1613: Tensor[(5, 14, 15), float64]) -> Tensor[(5, 14, 15), float64] {
  @func_1612(%var_1613) /* ty=Tensor[(5, 14, 15), float64] */
}

def @func_9777(%var_9775: Tensor[(1050), float64]) -> (Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) {
  @func_9774(%var_9775) /* ty=(Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */
}

def @func_3821(%var_3819: Tensor[(5, 8, 8), float64], %var_3820: Tensor[(5, 8, 8), float64]) -> Tensor[(5, 8, 8), float64] {
  %987 = fn (%var_3807: Tensor[(5, 8, 8), float64], %var_3808: Tensor[(5, 8, 8), float64]) -> Tensor[(5, 8, 8), float64] {
    %981 = cast(%var_3808, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
    %982 = shape_of(%var_3807, dtype="int32") /* ty=Tensor[(3), int32] */;
    %983 = cast(%var_3807, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
    %984 = dyn.reshape(%981, %982, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %985 = floor_divide(%983, %984) /* ty=Tensor[(5, 8, 8), float64] */;
    %986 = cast(%985, dtype="float64") /* ty=Tensor[(5, 8, 8), float64] */;
    log2(%986) /* ty=Tensor[(5, 8, 8), float64] */
  };
  %987(%var_3819, %var_3820) /* ty=Tensor[(5, 8, 8), float64] */
}

def @func_9951() -> (Tensor[(5, 14, 15), float64], Tensor[(5, 9, 16), float64]) {
  %992 = fn () -> (Tensor[(5, 14, 15), float64], Tensor[(5, 9, 16), float64]) {
    %988 = @func_8594() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(216), float32]) */;
    %989 = @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */;
    %990 = %988.0;
    %991 = %989.0;
    (%990, %991)
  };
  %992() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 9, 16), float64]) */
}

def @func_7180() -> (Tensor[(5, 14, 15), float64],) {
  %995 = fn () -> (Tensor[(5, 14, 15), float64],) {
    %993 = @func_6843() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
    %994 = %993.2;
    (%994,)
  };
  %995() /* ty=(Tensor[(5, 14, 15), float64],) */
}

def @func_7078() -> Tensor[(5, 9, 16), float32] {
  @func_7076() /* ty=Tensor[(5, 9, 16), float32] */
}

def @func_9188() -> (Tensor[(5, 8, 8), float32], Tensor[(5, 9, 16), float32]) {
  %996 = @func_9094() /* ty=(Tensor[(5, 8, 8), float32],) */;
  %997 = %996.0;
  %998 = @func_7076() /* ty=Tensor[(5, 9, 16), float32] */;
  (%997, %998)
}

def @func_9564(%var_9562: Tensor[(30), int8]) -> (Tensor[(?, 75), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) {
  @func_9561(%var_9562) /* ty=(Tensor[(?, 75), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */
}

def @func_7755(%var_7753: Tensor[(9, 12, 6), float32], %var_7754: Tensor[(30), int8]) -> (Tensor[(9, 12, 6), float32], Tensor[(5, 14, 15), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) {
  @func_7751(%var_7753, %var_7754) /* ty=(Tensor[(9, 12, 6), float32], Tensor[(5, 14, 15), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */
}

def @func_10375(%var_10373: Tensor[(75), float32], %var_10374: Tensor[(650), bool]) -> (Tensor[(75), float32], Tensor[(5, 9, 16), bool], Tensor[(1050), float64], Tensor[(5, 15, 320), float32], Tensor[(5, 9, 16), float64], Tensor[(770), uint16], Tensor[(650), bool], Tensor[(770, 1), uint16], Tensor[(1120), float32]) {
  @func_10371(%var_10373, %var_10374) /* ty=(Tensor[(75), float32], Tensor[(5, 9, 16), bool], Tensor[(1050), float64], Tensor[(5, 15, 320), float32], Tensor[(5, 9, 16), float64], Tensor[(770), uint16], Tensor[(650), bool], Tensor[(770, 1), uint16], Tensor[(1120), float32]) */
}

def @func_6240() -> Tensor[(75), float32] {
  %999 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
  %999.1
}

def @func_10273(%var_10270: Tensor[(320), float64]) -> (Tensor[(5, 9, 16), float32], Tensor[(5, 9, 16), float64], Tensor[(5, 8, 8), float64], Tensor[(336), float32], Tensor[(320), float64]) {
  %1000 = cast(meta[relay.Constant][84] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1001 = cast(%var_10270, dtype="float64") /* ty=Tensor[(320), float64] */;
  %1002 = reshape(%1000, newshape=[14, 6, 4]) /* ty=Tensor[(14, 6, 4), float32] */;
  %1003 = reshape(%1001, newshape=[320]) /* ty=Tensor[(320), float64] */;
  %1004 = @func_5777(%1002, %1003) /* ty=(Tensor[(14, 6, 4), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */;
  %1005 = @func_9422() /* ty=Tensor[(5, 9, 16), float32] */;
  %1006 = @func_6390() /* ty=Tensor[(5, 9, 16), float64] */;
  %1007 = %1004.1;
  (%1005, %1006, %1007, meta[relay.Constant][84] /* ty=Tensor[(336), float32] */, %var_10270)
}

def @func_9401() -> (Tensor[(5, 9, 16), float64], Tensor[(216), float32]) {
  %1008 = @func_6219() /* ty=(Tensor[(5, 9, 16), float64],) */;
  %1009 = @func_8594() /* ty=(Tensor[(5, 14, 15), float64], Tensor[(216), float32]) */;
  %1010 = %1008.0;
  %1011 = %1009.1;
  (%1010, %1011)
}

def @func_8518(%var_8516: Tensor[(1120), float32], %var_8517: Tensor[(90, 26), float32]) -> (Tensor[(75), float32], Tensor[(528), uint8], Tensor[(350), uint32], Tensor[(528), uint8], Tensor[(1120), float32], Tensor[(364), uint8], Tensor[(5824, 1), uint8], Tensor[(5, 75), float32], Tensor[(375), float64], Tensor[(728), float64], Tensor[(728), float64], Tensor[(90, 26), float32]) {
  @func_8514(%var_8516, %var_8517) /* ty=(Tensor[(75), float32], Tensor[(528), uint8], Tensor[(350), uint32], Tensor[(528), uint8], Tensor[(1120), float32], Tensor[(364), uint8], Tensor[(5824, 1), uint8], Tensor[(5, 75), float32], Tensor[(375), float64], Tensor[(728), float64], Tensor[(728), float64], Tensor[(90, 26), float32]) */
}

def @func_7684(%var_7620: Tensor[(13, 10, 5), bool], %var_7642: Tensor[(770), uint16], %var_7658: Tensor[(5, 15), float32], %var_7677: Tensor[(1120), float32], %var_7678: Tensor[(10, 105), float64]) -> (Tensor[(13, 10, 5), bool], Tensor[(10, ?, 3), float32], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(576, 2), float64], Tensor[(5, 15, 1), float32], Tensor[(5, 15), float32], Tensor[(5, 15, 1), float32], Tensor[(30), int8], Tensor[(1120), float32], Tensor[(10, 105), float64]) {
  %1012 = cast(meta[relay.Constant][85] /* ty=Tensor[(13, 10, 5), bool] */, dtype="bool") /* ty=Tensor[(13, 10, 5), bool] */;
  %1013 = shape_of(%var_7620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1014 = cast(%var_7620, dtype="bool") /* ty=Tensor[(13, 10, 5), bool] */;
  %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1016 = logical_and(%1014, %1015) /* ty=Tensor[(13, 10, 5), bool] */;
  %1017 = cast(meta[relay.Constant][85] /* ty=Tensor[(13, 10, 5), bool] */, dtype="bool") /* ty=Tensor[(13, 10, 5), bool] */;
  %1018 = shape_of(%1016, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(%1016, dtype="bool") /* ty=Tensor[(13, 10, 5), bool] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1021 = cast(meta[relay.Constant][86] /* ty=Tensor[(70), uint16] */, dtype="uint16") /* ty=Tensor[(70), uint16] */;
  %1022 = cast(%var_7642, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %1023 = cast(%var_7642, dtype="uint16") /* ty=Tensor[(770), uint16] */;
  %1024 = cast(meta[relay.Constant][87] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %1025 = reshape(%1021, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), uint16] */;
  %1026 = reshape(%1022, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %1027 = reshape(%1023, newshape=[5, 11, 14]) /* ty=Tensor[(5, 11, 14), uint16] */;
  %1028 = reshape(%1024, newshape=[364]) /* ty=Tensor[(364), uint8] */;
  %1029 = @func_1257(%1025, %1026, %1027, %1028) /* ty=(Tensor[(5, 11, 14), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 11, 14), float64], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), int8], Tensor[(10, ?, 3), float32]) */;
  %1030 = cast(meta[relay.Constant][88] /* ty=Tensor[(576, 2), float64] */, dtype="float64") /* ty=Tensor[(576, 2), float64] */;
  %1031 = reshape(%1030, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %1032 = cast(%var_7658, dtype="float32") /* ty=Tensor[(5, 15), float32] */;
  %1033 = reshape(%1032, newshape=[5, 15, 1]) /* ty=Tensor[(5, 15, 1), float32] */;
  %1034 = @func_5825(%1033) /* ty=Tensor[(5, 15, 1), float32] */;
  %1035 = cast(%1034, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %1036 = reshape(%1035, newshape=[5, 15, 1]) /* ty=Tensor[(5, 15, 1), float32] */;
  %1037 = cast(%var_7677, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1038 = cast(%var_7677, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1039 = cast(%var_7677, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %1040 = %1029.7;
  %1041 = cast(%1040, dtype="int8") /* ty=Tensor[(10, ?, 3), int8] */;
  %1042 = cast(%var_7678, dtype="float64") /* ty=Tensor[(10, 105), float64] */;
  %1043 = reshape(%1037, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %1044 = reshape(%1038, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %1045 = reshape(%1039, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
  %1046 = reshape(%1041, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %1047 = reshape(%1042, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %1048 = @func_1834(%1043, %1044, %1045, %1046, %1047) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
  %1049 = greater_equal(%1019, %1020) /* ty=Tensor[(13, 10, 5), bool] */;
  %1050 = @func_2336(%1031) /* ty=Tensor[(12, 6, 16), float64] */;
  %1051 = @func_5825(%1036) /* ty=Tensor[(5, 15, 1), float32] */;
  %1052 = %1048.4;
  (%1049, %1040, meta[relay.Constant][86] /* ty=Tensor[(70), uint16] */, %var_7642, meta[relay.Constant][87] /* ty=Tensor[(364), uint8] */, %1050, meta[relay.Constant][88] /* ty=Tensor[(576, 2), float64] */, %1034, %var_7658, %1051, %1052, %var_7677, %var_7678)
}

def @func_11015() -> Tensor[(?, 75), float64] {
  @func_11013() /* ty=Tensor[(?, 75), float64] */
}

def @func_3990(%var_3986: Tensor[(1, 9, 11), uint32], %var_3987: Tensor[(4, 9, 11), uint32], %var_3988: Tensor[(182, 4), float64], %var_3989: Tensor[(2340), float32]) -> (Tensor[(4, 9, 11), uint32], Tensor[(12, 13, 15), float32], Tensor[(182, 4), float64], Tensor[(2340), float32]) {
  @func_3984(%var_3986, %var_3987, %var_3988, %var_3989) /* ty=(Tensor[(4, 9, 11), uint32], Tensor[(12, 13, 15), float32], Tensor[(182, 4), float64], Tensor[(2340), float32]) */
}

def @func_8257(%var_8256: Tensor[(770), uint16]) -> (Tensor[(5, 9, 16), float64], Tensor[(770), uint16], Tensor[(770), uint16], Tensor[(1152), float64]) {
  %1060 = fn (%var_8237: Tensor[(770), uint16]) -> (Tensor[(5, 9, 16), float64], Tensor[(770), uint16], Tensor[(770), uint16], Tensor[(1152), float64]) {
    %1053 = cast(%var_8237, dtype="uint16") /* ty=Tensor[(770), uint16] */;
    %1054 = cast(meta[relay.Constant][89] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %1055 = reshape(%1053, newshape=[770]) /* ty=Tensor[(770), uint16] */;
    %1056 = reshape(%1054, newshape=[1152]) /* ty=Tensor[(1152), float64] */;
    %1057 = @func_7968(%1055, %1056) /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 6), int8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(364), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
    %1058 = @func_6390() /* ty=Tensor[(5, 9, 16), float64] */;
    %1059 = %1057.3;
    (%1058, %1059, %var_8237, meta[relay.Constant][89] /* ty=Tensor[(1152), float64] */)
  };
  %1060(%var_8256) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(770), uint16], Tensor[(770), uint16], Tensor[(1152), float64]) */
}

def @main(%var_11725: Tensor[(7, 84), uint8], %var_11762: Tensor[(5, 14, 15), float32]) -> (Tensor[(5, 14, 15), float64], Tensor[(2340), float32], Tensor[(7, 6, 14), uint8], Tensor[(7, 84), uint8], Tensor[(5, 14, 15), bool], Tensor[(5, 14, 15), bool]) {
  %1061 = cast(meta[relay.Constant][90] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1062 = reshape(%1061, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1063 = @func_10748(%1062) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(2340), float32]) */;
  %1064 = cast(%var_11725, dtype="uint8") /* ty=Tensor[(7, 84), uint8] */;
  %1065 = reshape(%1064, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), uint8] */;
  %1066 = @func_10928() /* ty=Tensor[(5, 14, 15), float64] */;
  %1067 = cast(%1066, dtype="float32") /* ty=Tensor[(5, 14, 15), float32] */;
  %1068 = acos(%1067) /* ty=Tensor[(5, 14, 15), float32] */;
  %1069 = cast(%var_11762, dtype="bool") /* ty=Tensor[(5, 14, 15), bool] */;
  %1070 = shape_of(%1068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1071 = cast(%1068, dtype="bool") /* ty=Tensor[(5, 14, 15), bool] */;
  %1072 = dyn.reshape(%1069, %1070, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1073 = cast(%1068, dtype="bool") /* ty=Tensor[(5, 14, 15), bool] */;
  %1074 = shape_of(%var_11762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1075 = cast(%var_11762, dtype="bool") /* ty=Tensor[(5, 14, 15), bool] */;
  %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1077 = %1063.1;
  %1078 = @func_7491(%1065) /* ty=Tensor[(7, 6, 14), uint8] */;
  %1079 = greater(%1071, %1072) /* ty=Tensor[(5, 14, 15), bool] */;
  %1080 = not_equal(%1075, %1076) /* ty=Tensor[(5, 14, 15), bool] */;
  (%1077, meta[relay.Constant][90] /* ty=Tensor[(2340), float32] */, %1078, %var_11725, %1079, %1080)
}

def @func_11598(%var_11548: Tensor[(8, 3, 9), float32], %var_11573: Tensor[(528), uint8], %var_11575: Tensor[(364), uint8]) -> (Tensor[(216), float32], Tensor[(320), float64], Tensor[(10, ?, 3), int8], Tensor[(528), uint8], Tensor[(1120), float32], Tensor[(364), uint8], Tensor[(8, 3, 9), int64]) {
  %1081 = cast(%var_11573, dtype="uint8") /* ty=Tensor[(528), uint8] */;
  %1082 = cast(%var_11573, dtype="uint8") /* ty=Tensor[(528), uint8] */;
  %1083 = cast(meta[relay.Constant][91] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1084 = cast(%var_11575, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %1085 = reshape(%1081, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), uint8] */;
  %1086 = reshape(%1082, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), uint8] */;
  %1087 = reshape(%1083, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %1088 = reshape(%1084, newshape=[7, 52]) /* ty=Tensor[(7, 52), uint8] */;
  %1089 = @func_2792(%1085, %1086, %1087, %1088) /* ty=(Tensor[(8, 6, 11), bool], Tensor[(30), int8], Tensor[(2340), float32], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(10, ?, 3), int8], Tensor[(7, 52), uint8], Tensor[(30), int8], Tensor[(1050), float64], Tensor[(5, 14, 15), float64], Tensor[(10, 16, 7), float32]) */;
  %1090 = @func_8871() /* ty=(Tensor[(8, 3, 9), float32], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */;
  %1091 = %1090.0;
  %1092 = cast(%var_11548, dtype="float64") /* ty=Tensor[(8, 3, 9), float64] */;
  %1093 = shape_of(%1091, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1094 = cast(%1091, dtype="float64") /* ty=Tensor[(8, 3, 9), float64] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1096 = power(%1094, %1095) /* ty=Tensor[(8, 3, 9), float64] */;
  %1097 = cast(%1096, dtype="float64") /* ty=Tensor[(8, 3, 9), float64] */;
  %1098 = acosh(%1097) /* ty=Tensor[(8, 3, 9), float64] */;
  %1099 = cast(%1096, dtype="int64") /* ty=Tensor[(8, 3, 9), int64] */;
  %1100 = shape_of(%1098, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1101 = cast(%1098, dtype="int64") /* ty=Tensor[(8, 3, 9), int64] */;
  %1102 = dyn.reshape(%1099, %1100, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1103 = @func_10974() /* ty=Tensor[(216), float32] */;
  %1104 = @func_9523() /* ty=Tensor[(320), float64] */;
  %1105 = %1089.8;
  %1106 = bitwise_or(%1101, %1102) /* ty=Tensor[(8, 3, 9), int64] */;
  (%1103, %1104, %1105, %var_11573, meta[relay.Constant][91] /* ty=Tensor[(1120), float32] */, %var_11575, %1106)
}

def @func_8342() -> (Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(320), float64], Tensor[(336), float32], Tensor[(320), float64]) {
  @func_8340() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(320), float64], Tensor[(336), float32], Tensor[(320), float64]) */
}

def @func_11236() -> (Tensor[(75), float32], Tensor[(5, 14, 15), float64]) {
  @func_11234() /* ty=(Tensor[(75), float32], Tensor[(5, 14, 15), float64]) */
}

def @func_6655() -> (Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) {
  @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */
}

def @func_2112(%var_2110: Tensor[(12, 13, 15), float32], %var_2111: Tensor[(12, 13, 15), float32]) -> (Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) {
  %1124 = fn (%var_2083: Tensor[(12, 13, 15), float32], %var_2084: Tensor[(12, 13, 15), float32]) -> (Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) {
    %1107 = cast(%var_2084, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
    %1108 = shape_of(%var_2083, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1109 = cast(%var_2083, dtype="float32") /* ty=Tensor[(12, 13, 15), float32] */;
    %1110 = dyn.reshape(%1107, %1108, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1111 = cast(meta[relay.Constant][92] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %1112 = cast(meta[relay.Constant][92] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %1113 = cast(meta[relay.Constant][92] /* ty=Tensor[(1120), float32] */, dtype="bool") /* ty=Tensor[(1120), bool] */;
    %1114 = cast(meta[relay.Constant][93] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
    %1115 = cast(meta[relay.Constant][94] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %1116 = reshape(%1111, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
    %1117 = reshape(%1112, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
    %1118 = reshape(%1113, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
    %1119 = reshape(%1114, newshape=[30]) /* ty=Tensor[(30), int8] */;
    %1120 = reshape(%1115, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
    %1121 = @func_1834(%1116, %1117, %1118, %1119, %1120) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
    %1122 = divide(%1109, %1110) /* ty=Tensor[(12, 13, 15), float32] */;
    %1123 = %1121.17;
    (%1122, %1123, meta[relay.Constant][92] /* ty=Tensor[(1120), float32] */, meta[relay.Constant][93] /* ty=Tensor[(30), int8] */, meta[relay.Constant][94] /* ty=Tensor[(1050), float64] */)
  };
  %1124(%var_2110, %var_2111) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */
}

def @func_9662() -> (Tensor[(216), float32], Tensor[(1, 168), float32], Tensor[(8, 3, 9), float64], Tensor[(5, 9, 16), float64], Tensor[(588), uint8], Tensor[(5, 14, 15), float64], Tensor[(1050, 1), float64]) {
  %1140 = fn () -> (Tensor[(216), float32], Tensor[(1, 168), float32], Tensor[(8, 3, 9), float64], Tensor[(5, 9, 16), float64], Tensor[(588), uint8], Tensor[(5, 14, 15), float64], Tensor[(1050, 1), float64]) {
    %1125 = cast(meta[relay.Constant][95] /* ty=Tensor[(1, 168), float32] */, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
    %1126 = reshape(%1125, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), float32] */;
    %1127 = @func_7903(%1126) /* ty=(Tensor[(216), float32], Tensor[(7, 2, 12), float32]) */;
    %1128 = @func_8920() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
    %1129 = %1128.2;
    %1130 = cast(%1129, dtype="float64") /* ty=Tensor[(8, 3, 9), float64] */;
    %1131 = cast(meta[relay.Constant][96] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %1132 = reshape(%1131, newshape=[588, 1]) /* ty=Tensor[(588, 1), uint8] */;
    %1133 = @func_8014(%1132) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(7, 6, 14), uint8], Tensor[(588, 1), uint8], Tensor[(12, 6, 16), float64], Tensor[(1152), float64]) */;
    %1134 = cast(meta[relay.Constant][97] /* ty=Tensor[(1050, 1), float64] */, dtype="float64") /* ty=Tensor[(1050, 1), float64] */;
    %1135 = reshape(%1134, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
    %1136 = %1127.0;
    %1137 = tan(%1130) /* ty=Tensor[(8, 3, 9), float64] */;
    %1138 = %1133.0;
    %1139 = @func_1612(%1135) /* ty=Tensor[(5, 14, 15), float64] */;
    (%1136, meta[relay.Constant][95] /* ty=Tensor[(1, 168), float32] */, %1137, %1138, meta[relay.Constant][96] /* ty=Tensor[(588), uint8] */, %1139, meta[relay.Constant][97] /* ty=Tensor[(1050, 1), float64] */)
  };
  %1140() /* ty=(Tensor[(216), float32], Tensor[(1, 168), float32], Tensor[(8, 3, 9), float64], Tensor[(5, 9, 16), float64], Tensor[(588), uint8], Tensor[(5, 14, 15), float64], Tensor[(1050, 1), float64]) */
}

def @func_8672() -> Tensor[(5, 9, 16), float64] {
  %1141 = fn () -> Tensor[(5, 9, 16), float64] {
    @func_6462() /* ty=Tensor[(5, 9, 16), float64] */
  };
  %1141() /* ty=Tensor[(5, 9, 16), float64] */
}

def @func_7874(%var_7863: Tensor[(30, 1), int8]) -> (Tensor[(1050), float64], Tensor[(1120), float32], Tensor[(10, ?, 3), int8], Tensor[(30, 1), int8]) {
  %1142 = @func_6843() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(5, 14, 15), float64], Tensor[(1050), float64]) */;
  %1143 = @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */;
  %1144 = %1143.3;
  %1145 = cast(%1144, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1146 = cast(%1144, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1147 = cast(%1144, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %1148 = cast(%var_7863, dtype="int8") /* ty=Tensor[(30, 1), int8] */;
  %1149 = %1142.3;
  %1150 = cast(%1149, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1151 = reshape(%1145, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %1152 = reshape(%1146, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %1153 = reshape(%1147, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
  %1154 = reshape(%1148, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %1155 = reshape(%1150, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %1156 = @func_1834(%1151, %1152, %1153, %1154, %1155) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
  %1157 = %1156.3;
  (%1149, %1144, %1157, %var_7863)
}

def @func_3383(%var_3363: Tensor[(2340), float32]) -> (Tensor[(5, 12, 7), float32], Tensor[(1120), float32], Tensor[(2340), float32], Tensor[(10, ?, 3), int8], Tensor[(364), uint8], Tensor[(5, 6), int8]) {
  %1158 = cast(meta[relay.Constant][98] /* ty=Tensor[(5, 12, 7), float32] */, dtype="float32") /* ty=Tensor[(5, 12, 7), float32] */;
  %1159 = cast(%var_3363, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1160 = cast(%var_3363, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1161 = reshape(%1159, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %1162 = reshape(%1160, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %1163 = @func_2109(%1161, %1162) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */;
  %1164 = cast(meta[relay.Constant][99] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %1165 = cast(meta[relay.Constant][99] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %1166 = reshape(%1164, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %1167 = reshape(%1165, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %1168 = @func_881(%1166, %1167) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %1169 = cast(meta[relay.Constant][99] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %1170 = cast(meta[relay.Constant][99] /* ty=Tensor[(364), uint8] */, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %1171 = reshape(%1169, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %1172 = reshape(%1170, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %1173 = @func_881(%1171, %1172) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %1174 = acosh(%1158) /* ty=Tensor[(5, 12, 7), float32] */;
  %1175 = %1163.2;
  %1176 = %1168.1;
  %1177 = %1173.2;
  (%1174, %1175, %var_3363, %1176, meta[relay.Constant][99] /* ty=Tensor[(364), uint8] */, %1177)
}

def @func_7351() -> (Tensor[(5, 14, 15), float64],) {
  %1180 = fn () -> (Tensor[(5, 14, 15), float64],) {
    %1178 = @func_7179() /* ty=(Tensor[(5, 14, 15), float64],) */;
    %1179 = %1178.0;
    (%1179,)
  };
  %1180() /* ty=(Tensor[(5, 14, 15), float64],) */
}

def @func_7039(%var_7036: Tensor[(364), uint8], %var_7037: Tensor[(320), float64], %var_7038: Tensor[(2340), float32]) -> (Tensor[(5, 9, 16), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) {
  @func_7034(%var_7036, %var_7037, %var_7038) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(5, 6), int8], Tensor[(364), uint8], Tensor[(5, 8, 8), float64], Tensor[(320), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) */
}

def @func_8841() -> (Tensor[(320), float64],) {
  %1181 = @func_7133() /* ty=(Tensor[(320), float64],) */;
  %1182 = %1181.0;
  (%1182,)
}

def @func_9454() -> Tensor[(5, 14, 15), float64] {
  %1183 = @func_8769() /* ty=(Tensor[(1050), float64], Tensor[(375), float64], Tensor[(5, 14, 15), float64], Tensor[(5, 75), float32]) */;
  %1183.2
}

def @func_10446(%var_10408: Tensor[(30), int8]) -> (Tensor[(1152), float64], Tensor[(5, 9, 16), float64], Tensor[(10, ?, 3), int8], Tensor[(648), float32], Tensor[(30), int8], Tensor[(320), float64], Tensor[(5, 8, 8), bool], Tensor[(5, 9, 16), float32]) {
  %1184 = @func_7538() /* ty=(Tensor[(1152), float64],) */;
  %1185 = @func_6256() /* ty=Tensor[(5, 9, 16), float64] */;
  %1186 = cast(%1185, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %1187 = cast(meta[relay.Constant][100] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %1188 = cast(%var_10408, dtype="int8") /* ty=Tensor[(30), int8] */;
  %1189 = reshape(%1187, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %1190 = reshape(%1188, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %1191 = @func_7751(%1189, %1190) /* ty=(Tensor[(9, 12, 6), float32], Tensor[(5, 14, 15), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */;
  %1192 = cast(meta[relay.Constant][101] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %1193 = reshape(%1192, newshape=[320]) /* ty=Tensor[(320), float64] */;
  %1194 = @func_10273(%1193) /* ty=(Tensor[(5, 9, 16), float32], Tensor[(5, 9, 16), float64], Tensor[(5, 8, 8), float64], Tensor[(336), float32], Tensor[(320), float64]) */;
  %1195 = %1194.2;
  %1196 = cast(meta[relay.Constant][102] /* ty=Tensor[(5, 8, 8), float64] */, dtype="bool") /* ty=Tensor[(5, 8, 8), bool] */;
  %1197 = shape_of(%1195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1198 = cast(%1195, dtype="bool") /* ty=Tensor[(5, 8, 8), bool] */;
  %1199 = dyn.reshape(%1196, %1197, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1200 = @func_8042() /* ty=(Tensor[(5, 9, 16), float32],) */;
  %1201 = %1184.0;
  %1202 = cos(%1186) /* ty=Tensor[(5, 9, 16), float64] */;
  %1203 = %1191.2;
  %1204 = equal(%1198, %1199) /* ty=Tensor[(5, 8, 8), bool] */;
  %1205 = %1200.0;
  (%1201, %1202, %1203, meta[relay.Constant][100] /* ty=Tensor[(648), float32] */, %var_10408, meta[relay.Constant][101] /* ty=Tensor[(320), float64] */, %1204, %1205)
}

def @func_11123(%var_11120: int32, %var_11121: Tensor[(2, 560), float32], %var_11122: Tensor[(1050), float64]) -> (Tensor[(216), float32], Tensor[(5, 8, 8), float64], int32, Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(2, 560), float32], Tensor[(30), int8], Tensor[(1050), float64]) {
  %1226 = fn (%var_11090: int32, %var_11112: Tensor[(2, 560), float32], %var_11114: Tensor[(1050), float64]) -> (Tensor[(216), float32], Tensor[(5, 8, 8), float64], int32, Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(2, 560), float32], Tensor[(30), int8], Tensor[(1050), float64]) {
    %1206 = @func_9661() /* ty=(Tensor[(216), float32], Tensor[(1, 168), float32], Tensor[(8, 3, 9), float64], Tensor[(5, 9, 16), float64], Tensor[(588), uint8], Tensor[(5, 14, 15), float64], Tensor[(1050, 1), float64]) */;
    %1207 = cast(%var_11090, dtype="int32") /* ty=int32 */;
    %1208 = reshape(%1207, newshape=[]) /* ty=int32 */;
    %1209 = @func_4900(%1208) /* ty=(Tensor[(13, 16, 10), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */;
    %1210 = @func_10831() /* ty=(Tensor[(75), float32], Tensor[(5, 9, 16), float64]) */;
    %1211 = cast(%var_11112, dtype="float32") /* ty=Tensor[(2, 560), float32] */;
    %1212 = cast(%var_11112, dtype="float32") /* ty=Tensor[(2, 560), float32] */;
    %1213 = cast(%var_11112, dtype="bool") /* ty=Tensor[(2, 560), bool] */;
    %1214 = cast(meta[relay.Constant][103] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
    %1215 = cast(%var_11114, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %1216 = reshape(%1211, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
    %1217 = reshape(%1212, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
    %1218 = reshape(%1213, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
    %1219 = reshape(%1214, newshape=[30]) /* ty=Tensor[(30), int8] */;
    %1220 = reshape(%1215, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
    %1221 = @func_1834(%1216, %1217, %1218, %1219, %1220) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
    %1222 = %1206.0;
    %1223 = %1209.1;
    %1224 = %1210.1;
    %1225 = %1221.17;
    (%1222, %1223, %var_11090, %1224, %1225, %var_11112, meta[relay.Constant][103] /* ty=Tensor[(30), int8] */, %var_11114)
  };
  %1226(%var_11120, %var_11121, %var_11122) /* ty=(Tensor[(216), float32], Tensor[(5, 8, 8), float64], int32, Tensor[(5, 9, 16), float64], Tensor[(5, 14, 15), float64], Tensor[(2, 560), float32], Tensor[(30), int8], Tensor[(1050), float64]) */
}

def @func_9094() -> (Tensor[(5, 8, 8), float32],) {
  %1227 = @func_8726() /* ty=(Tensor[(8, 3, 9), float32], Tensor[(5, 8, 8), float32]) */;
  %1228 = %1227.1;
  (%1228,)
}

def @func_4779(%var_4759: Tensor[(8, 3, 9), float32]) -> (Tensor[(8, 3, 9), float32],) {
  %1229 = cast(%var_4759, dtype="float32") /* ty=Tensor[(8, 3, 9), float32] */;
  %1230 = log2(%1229) /* ty=Tensor[(8, 3, 9), float32] */;
  (%1230,)
}

def @func_6949(%var_6948: Tensor[(5, 6), int8]) -> (Tensor[(5, 9, 16), float64], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) {
  %1236 = fn (%var_6939: Tensor[(5, 6), int8]) -> (Tensor[(5, 9, 16), float64], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) {
    %1231 = @func_6349() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(?, 75), float64]) */;
    %1232 = cast(%var_6939, dtype="int8") /* ty=Tensor[(5, 6), int8] */;
    %1233 = reshape(%1232, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int8] */;
    %1234 = %1231.0;
    %1235 = @func_306(%1233) /* ty=Tensor[(10, ?, 3), int8] */;
    (%1234, %1235, %var_6939)
  };
  %1236(%var_6948) /* ty=(Tensor[(5, 9, 16), float64], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */
}

def @func_9096() -> (Tensor[(5, 8, 8), float32],) {
  @func_9094() /* ty=(Tensor[(5, 8, 8), float32],) */
}

def @func_10449(%var_10447: Tensor[(30), int8]) -> (Tensor[(1152), float64], Tensor[(5, 9, 16), float64], Tensor[(10, ?, 3), int8], Tensor[(648), float32], Tensor[(30), int8], Tensor[(320), float64], Tensor[(5, 8, 8), bool], Tensor[(5, 9, 16), float32]) {
  @func_10446(%var_10447) /* ty=(Tensor[(1152), float64], Tensor[(5, 9, 16), float64], Tensor[(10, ?, 3), int8], Tensor[(648), float32], Tensor[(30), int8], Tensor[(320), float64], Tensor[(5, 8, 8), bool], Tensor[(5, 9, 16), float32]) */
}

def @func_9233(%var_9232: Tensor[(8, 3, 9), float32]) -> (Tensor[(8, 3, 9), bool], Tensor[(5, 14, 15), float64]) {
  %1246 = fn (%var_9213: Tensor[(8, 3, 9), float32]) -> (Tensor[(8, 3, 9), bool], Tensor[(5, 14, 15), float64]) {
    %1237 = @func_6200() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(75), float32], Tensor[(5, 9, 16), float64], Tensor[(8, 3, 9), float32], Tensor[(216), float32]) */;
    %1238 = %1237.3;
    %1239 = cast(%var_9213, dtype="bool") /* ty=Tensor[(8, 3, 9), bool] */;
    %1240 = shape_of(%1238, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1241 = cast(%1238, dtype="bool") /* ty=Tensor[(8, 3, 9), bool] */;
    %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1243 = @func_9206() /* ty=(Tensor[(5, 14, 15), float64],) */;
    %1244 = greater(%1241, %1242) /* ty=Tensor[(8, 3, 9), bool] */;
    %1245 = %1243.0;
    (%1244, %1245)
  };
  %1246(%var_9232) /* ty=(Tensor[(8, 3, 9), bool], Tensor[(5, 14, 15), float64]) */
}

def @func_5780(%var_5778: Tensor[(14, 6, 4), float32], %var_5779: Tensor[(320), float64]) -> (Tensor[(14, 6, 4), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) {
  %1262 = fn (%var_5746: Tensor[(14, 6, 4), float32], %var_5764: Tensor[(320), float64]) -> (Tensor[(14, 6, 4), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) {
    %1247 = cast(%var_5746, dtype="float32") /* ty=Tensor[(14, 6, 4), float32] */;
    %1248 = shape_of(meta[relay.Constant][104] /* ty=Tensor[(14, 6, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1249 = cast(meta[relay.Constant][104] /* ty=Tensor[(14, 6, 4), float32] */, dtype="float32") /* ty=Tensor[(14, 6, 4), float32] */;
    %1250 = dyn.reshape(%1247, %1248, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1251 = mod(%1249, %1250) /* ty=Tensor[(14, 6, 4), float32] */;
    %1252 = cast(%1251, dtype="bool") /* ty=Tensor[(14, 6, 4), bool] */;
    %1253 = shape_of(%var_5746, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1254 = cast(%var_5746, dtype="bool") /* ty=Tensor[(14, 6, 4), bool] */;
    %1255 = dyn.reshape(%1252, %1253, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1256 = cast(%var_5764, dtype="float64") /* ty=Tensor[(320), float64] */;
    %1257 = cast(%var_5764, dtype="float64") /* ty=Tensor[(320), float64] */;
    %1258 = reshape(%1256, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
    %1259 = reshape(%1257, newshape=[5, 8, 8]) /* ty=Tensor[(5, 8, 8), float64] */;
    %1260 = less_equal(%1254, %1255) /* ty=Tensor[(14, 6, 4), bool] */;
    %1261 = @func_3818(%1258, %1259) /* ty=Tensor[(5, 8, 8), float64] */;
    (%1260, %1261, %var_5764)
  };
  %1262(%var_5778, %var_5779) /* ty=(Tensor[(14, 6, 4), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */
}

def @func_4903(%var_4901: int32) -> (Tensor[(13, 16, 10), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) {
  @func_4900(%var_4901) /* ty=(Tensor[(13, 16, 10), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */
}

def @func_4782(%var_4780: Tensor[(8, 3, 9), float32]) -> (Tensor[(8, 3, 9), float32],) {
  @func_4779(%var_4780) /* ty=(Tensor[(8, 3, 9), float32],) */
}

def @func_7773(%var_7771: Tensor[(5, 75), float64]) -> (Tensor[(5, 75), float32],) {
  @func_7770(%var_7771) /* ty=(Tensor[(5, 75), float32],) */
}

def @func_10806(%var_10796: Tensor[(2, 160), float64]) -> (Tensor[(5, 9, 16), float64], Tensor[(14, 6, 4), bool], Tensor[(24, 14), float32], Tensor[(2, 160), float64]) {
  %1263 = cast(meta[relay.Constant][105] /* ty=Tensor[(24, 14), float32] */, dtype="float32") /* ty=Tensor[(24, 14), float32] */;
  %1264 = cast(%var_10796, dtype="float64") /* ty=Tensor[(2, 160), float64] */;
  %1265 = reshape(%1263, newshape=[14, 6, 4]) /* ty=Tensor[(14, 6, 4), float32] */;
  %1266 = reshape(%1264, newshape=[320]) /* ty=Tensor[(320), float64] */;
  %1267 = @func_5777(%1265, %1266) /* ty=(Tensor[(14, 6, 4), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */;
  %1268 = @func_10678() /* ty=Tensor[(5, 9, 16), float64] */;
  %1269 = %1267.0;
  (%1268, %1269, meta[relay.Constant][105] /* ty=Tensor[(24, 14), float32] */, %var_10796)
}

def @func_11700(%var_11697: bool, %var_11698: Tensor[(1, 5, 14), bool], %var_11699: Tensor[(720), float64]) -> (Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(6, 13, 9), float64], Tensor[(702), float64], Tensor[(720), float64], Tensor[(8, 3, 9), float32], Tensor[(?, 5, 14), uint64], Tensor[(6, 13, 9), float64]) {
  %1299 = fn (%var_11626: bool, %var_11627: Tensor[(1, 5, 14), bool], %var_11656: Tensor[(720), float64]) -> (Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(6, 13, 9), float64], Tensor[(702), float64], Tensor[(720), float64], Tensor[(8, 3, 9), float32], Tensor[(?, 5, 14), uint64], Tensor[(6, 13, 9), float64]) {
    %1270 = cast(meta[relay.Constant][106] /* ty=Tensor[(30), int8] */, dtype="int8") /* ty=Tensor[(30), int8] */;
    %1271 = reshape(%1270, newshape=[30]) /* ty=Tensor[(30), int8] */;
    %1272 = @func_9561(%1271) /* ty=(Tensor[(?, 75), float64], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */;
    %1273 = cast(meta[relay.Constant][107] /* ty=Tensor[(702), float64] */, dtype="float64") /* ty=Tensor[(702), float64] */;
    %1274 = cast(%var_11656, dtype="float64") /* ty=Tensor[(720), float64] */;
    %1275 = reshape(%1273, newshape=[6, 13, 9]) /* ty=Tensor[(6, 13, 9), float64] */;
    %1276 = reshape(%1274, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %1277 = @func_11204(%1275, %1276) /* ty=(Tensor[(6, 13, 9), float64], Tensor[(5, 9, 16), uint8], Tensor[(720), float64]) */;
    %1278 = @func_8871() /* ty=(Tensor[(8, 3, 9), float32], Tensor[(10, ?, 3), int8], Tensor[(30), int8]) */;
    %1279 = cast(%var_11626, dtype="bool") /* ty=bool */;
    %1280 = cast(%var_11627, dtype="bool") /* ty=Tensor[(1, 5, 14), bool] */;
    %1281 = logical_and(%1279, %1280) /* ty=Tensor[(1, 5, 14), bool] */;
    %1282 = cast(%var_11627, dtype="int64") /* ty=Tensor[(1, 5, 14), int64] */;
    %1283 = cast(%var_11626, dtype="int64") /* ty=int64 */;
    %1284 = multiply(%1282, %1283) /* ty=Tensor[(1, 5, 14), int64] */;
    %1285 = cast(%1284, dtype="uint64") /* ty=Tensor[(1, 5, 14), uint64] */;
    %1286 = shape_of(%1281, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1287 = cast(%1281, dtype="uint64") /* ty=Tensor[(1, 5, 14), uint64] */;
    %1288 = dyn.reshape(%1285, %1286, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1289 = %1277.0;
    %1290 = cast(%1289, dtype="float64") /* ty=Tensor[(6, 13, 9), float64] */;
    %1291 = cast(%var_11656, dtype="float64") /* ty=Tensor[(720), float64] */;
    %1292 = reshape(%1290, newshape=[6, 13, 9]) /* ty=Tensor[(6, 13, 9), float64] */;
    %1293 = reshape(%1291, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %1294 = @func_11204(%1292, %1293) /* ty=(Tensor[(6, 13, 9), float64], Tensor[(5, 9, 16), uint8], Tensor[(720), float64]) */;
    %1295 = %1272.1;
    %1296 = %1278.0;
    %1297 = bitwise_or(%1287, %1288) /* ty=Tensor[(?, 5, 14), uint64] */;
    %1298 = %1294.0;
    (%1295, meta[relay.Constant][106] /* ty=Tensor[(30), int8] */, %1289, meta[relay.Constant][107] /* ty=Tensor[(702), float64] */, %var_11656, %1296, %1297, %1298)
  };
  %1299(%var_11697, %var_11698, %var_11699) /* ty=(Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(6, 13, 9), float64], Tensor[(702), float64], Tensor[(720), float64], Tensor[(8, 3, 9), float32], Tensor[(?, 5, 14), uint64], Tensor[(6, 13, 9), float64]) */
}

def @func_4244(%var_4223: Tensor[(8, 11, 5), float32]) -> (Tensor[(8, 11, 5), float32], Tensor[(2340), float32], Tensor[(14, 52), float64], Tensor[(2340), float32]) {
  %1300 = cast(%var_4223, dtype="float32") /* ty=Tensor[(8, 11, 5), float32] */;
  %1301 = cast(meta[relay.Constant][108] /* ty=Tensor[(14, 52), float64] */, dtype="float64") /* ty=Tensor[(14, 52), float64] */;
  %1302 = cast(meta[relay.Constant][109] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1303 = reshape(%1301, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), float64] */;
  %1304 = reshape(%1302, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1305 = @func_3611(%1303, %1304) /* ty=(Tensor[(8, 13, 7), float64], Tensor[(12, 13, 15), float32], Tensor[(2340), float32]) */;
  %1306 = cosh(%1300) /* ty=Tensor[(8, 11, 5), float32] */;
  %1307 = %1305.2;
  (%1306, %1307, meta[relay.Constant][108] /* ty=Tensor[(14, 52), float64] */, meta[relay.Constant][109] /* ty=Tensor[(2340), float32] */)
}

def @func_2792(%var_2717: Tensor[(8, 6, 11), uint8], %var_2718: Tensor[(8, 6, 11), uint8], %var_2753: Tensor[(1120), float32], %var_2774: Tensor[(7, 52), uint8]) -> (Tensor[(8, 6, 11), bool], Tensor[(30), int8], Tensor[(2340), float32], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(10, ?, 3), int8], Tensor[(7, 52), uint8], Tensor[(30), int8], Tensor[(1050), float64], Tensor[(5, 14, 15), float64], Tensor[(10, 16, 7), float32]) {
  %1308 = cast(%var_2718, dtype="bool") /* ty=Tensor[(8, 6, 11), bool] */;
  %1309 = shape_of(%var_2717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1310 = cast(%var_2717, dtype="bool") /* ty=Tensor[(8, 6, 11), bool] */;
  %1311 = dyn.reshape(%1308, %1309, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1312 = cast(meta[relay.Constant][110] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1313 = cast(meta[relay.Constant][110] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1314 = reshape(%1312, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %1315 = reshape(%1313, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %1316 = @func_2109(%1314, %1315) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */;
  %1317 = cast(meta[relay.Constant][110] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1318 = cast(meta[relay.Constant][110] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1319 = reshape(%1317, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %1320 = reshape(%1318, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float32] */;
  %1321 = @func_2109(%1319, %1320) /* ty=(Tensor[(12, 13, 15), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1050), float64]) */;
  %1322 = cast(meta[relay.Constant][112] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %1323 = reshape(%1322, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %1324 = cast(%var_2774, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %1325 = cast(%var_2774, dtype="uint8") /* ty=Tensor[(7, 52), uint8] */;
  %1326 = reshape(%1324, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %1327 = reshape(%1325, newshape=[13, 4, 7]) /* ty=Tensor[(13, 4, 7), uint8] */;
  %1328 = @func_881(%1326, %1327) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, ?, 3), int8], Tensor[(5, 6), int8]) */;
  %1329 = %1321.2;
  %1330 = cast(%1329, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1331 = cast(%var_2753, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1332 = cast(%var_2753, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %1333 = %1316.3;
  %1334 = cast(%1333, dtype="int8") /* ty=Tensor[(30), int8] */;
  %1335 = cast(meta[relay.Constant][113] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1336 = reshape(%1330, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %1337 = reshape(%1331, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float32] */;
  %1338 = reshape(%1332, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), bool] */;
  %1339 = reshape(%1334, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %1340 = reshape(%1335, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %1341 = @func_1834(%1336, %1337, %1338, %1339, %1340) /* ty=(Tensor[(10, 16, 7), float32], Tensor[(10, 16, 7), bool], Tensor[(7, 52), uint8], Tensor[(10, ?, 3), int8], Tensor[(30), int8], Tensor[(13, 4, 7), bool], Tensor[(364), uint8], Tensor[(70), uint16], Tensor[(770), uint16], Tensor[(8, 2, 8), bool], Tensor[(128), uint8], Tensor[(13, 4, 7), bool], Tensor[(8, 2, 8), bool], Tensor[(8, 2, 8), bool], Tensor[(10, ?, 3), float32], Tensor[(13, 4, 7), float32], Tensor[(10, ?, 3), int8], Tensor[(5, 14, 15), float64], Tensor[(1050), float64], Tensor[(10, ?, 3), int8]) */;
  %1342 = cast(meta[relay.Constant][113] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1343 = reshape(%1342, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %1344 = cast(meta[relay.Constant][111] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %1345 = cast(%var_2753, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1346 = reshape(%1344, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), float64] */;
  %1347 = reshape(%1345, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %1348 = @func_2680(%1346, %1347) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(1120), float32], Tensor[(30, 1), int8], Tensor[(1050, 1), float64], Tensor[(10, 16, 8), uint8], Tensor[(5, 14, 15), float64]) */;
  %1349 = %1348.0;
  %1350 = cast(%1349, dtype="float32") /* ty=Tensor[(10, 16, 7), float32] */;
  %1351 = greater(%1310, %1311) /* ty=Tensor[(8, 6, 11), bool] */;
  %1352 = @func_2336(%1323) /* ty=Tensor[(12, 6, 16), float64] */;
  %1353 = %1328.1;
  %1354 = %1341.4;
  %1355 = @func_1612(%1343) /* ty=Tensor[(5, 14, 15), float64] */;
  %1356 = sinh(%1350) /* ty=Tensor[(10, 16, 7), float32] */;
  (%1351, %1333, meta[relay.Constant][110] /* ty=Tensor[(2340), float32] */, meta[relay.Constant][111] /* ty=Tensor[(1280), float64] */, %var_2753, %1329, %1352, meta[relay.Constant][112] /* ty=Tensor[(1152), float64] */, %1353, %var_2774, %1354, meta[relay.Constant][113] /* ty=Tensor[(1050), float64] */, %1355, %1356)
}

def @func_10243() -> (Tensor[(30), int8], Tensor[(5, 9, 16), float64]) {
  %1360 = fn () -> (Tensor[(30), int8], Tensor[(5, 9, 16), float64]) {
    %1357 = @func_8663() /* ty=(Tensor[(75), float32], Tensor[(5, 14, 15), float64], Tensor[(1120), float32], Tensor[(30), int8], Tensor[(1, 1050), float64]) */;
    %1358 = %1357.3;
    %1359 = @func_6462() /* ty=Tensor[(5, 9, 16), float64] */;
    (%1358, %1359)
  };
  %1360() /* ty=(Tensor[(30), int8], Tensor[(5, 9, 16), float64]) */
}

def @func_9876(%var_9874: Tensor[(336), float32], %var_9875: Tensor[(320), float64]) -> (Tensor[(5, 8, 8), float64], Tensor[(336), float32], Tensor[(320), float64], Tensor[(1152), bool], Tensor[(?, 75), uint8]) {
  %1383 = fn (%var_9848: Tensor[(336), float32], %var_9849: Tensor[(320), float64]) -> (Tensor[(5, 8, 8), float64], Tensor[(336), float32], Tensor[(320), float64], Tensor[(1152), bool], Tensor[(?, 75), uint8]) {
    %1361 = cast(%var_9848, dtype="float32") /* ty=Tensor[(336), float32] */;
    %1362 = cast(%var_9849, dtype="float64") /* ty=Tensor[(320), float64] */;
    %1363 = reshape(%1361, newshape=[14, 6, 4]) /* ty=Tensor[(14, 6, 4), float32] */;
    %1364 = reshape(%1362, newshape=[320]) /* ty=Tensor[(320), float64] */;
    %1365 = @func_5777(%1363, %1364) /* ty=(Tensor[(14, 6, 4), bool], Tensor[(5, 8, 8), float64], Tensor[(320), float64]) */;
    %1366 = @func_7538() /* ty=(Tensor[(1152), float64],) */;
    %1367 = %1366.0;
    %1368 = cast(meta[relay.Constant][114] /* ty=Tensor[(1152), float64] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
    %1369 = shape_of(%1367, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1370 = cast(%1367, dtype="bool") /* ty=Tensor[(1152), bool] */;
    %1371 = dyn.reshape(%1368, %1369, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1372 = @func_6653() /* ty=(Tensor[(5, 9, 16), float64], Tensor[(1050, 1), float64], Tensor[(1280), float64], Tensor[(1120), float32], Tensor[(?, 75), float64]) */;
    %1373 = %1372.4;
    %1374 = cast(%1373, dtype="float64") /* ty=Tensor[(?, 75), float64] */;
    %1375 = acos(%1374) /* ty=Tensor[(?, 75), float64] */;
    %1376 = cast(%1373, dtype="uint8") /* ty=Tensor[(?, 75), uint8] */;
    %1377 = shape_of(%1375, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1378 = cast(%1375, dtype="uint8") /* ty=Tensor[(?, 75), uint8] */;
    %1379 = dyn.reshape(%1376, %1377, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %1380 = %1365.1;
    %1381 = equal(%1370, %1371) /* ty=Tensor[(1152), bool] */;
    %1382 = left_shift(%1378, %1379) /* ty=Tensor[(?, 75), uint8] */;
    (%1380, %var_9848, %var_9849, %1381, %1382)
  };
  %1383(%var_9874, %var_9875) /* ty=(Tensor[(5, 8, 8), float64], Tensor[(336), float32], Tensor[(320), float64], Tensor[(1152), bool], Tensor[(?, 75), uint8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen624/build/output.py", line 3022, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:41:31] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


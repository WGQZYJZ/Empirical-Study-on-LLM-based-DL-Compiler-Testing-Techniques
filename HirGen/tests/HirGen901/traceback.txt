==========mod==========
#[version = "0.0.5"]
def @func_2340() -> (Tensor[(11, 5, 8), float32],) {
  %0 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  (%0,)
}

def @func_19702() -> (Tensor[(11, 5, 8), float32],) {
  %1 = @func_9040() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %2 = %1.1;
  (%2,)
}

def @func_4783() -> (Tensor[(11, 5, 8), float32],) {
  %3 = @func_2433() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %4 = %3.2;
  (%4,)
}

def @func_20249() -> Tensor[(110, 4), float32] {
  %5 = @func_11842() /* ty=(Tensor[(110, 4), float32],) */;
  %5.0
}

def @func_16134() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
  %6 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %7 = @func_13872() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %8 = %6.0;
  %9 = %7.1;
  (%8, %9)
}

def @func_16559() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) {
  %10 = @func_6727() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(273), int64] */, dtype="int64") /* ty=Tensor[(273), int64] */;
  %12 = reshape(%11, newshape=[273]) /* ty=Tensor[(273), int64] */;
  %13 = @func_6524(%12) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 7, 3), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %14 = %10.0;
  %15 = %13.2;
  (%14, %15, meta[relay.Constant][0] /* ty=Tensor[(273), int64] */)
}

def @func_19520() -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %16 = @func_4687() /* ty=(Tensor[(440), float32],) */;
  %17 = %16.0;
  %18 = @func_9232() /* ty=Tensor[(11, 5, 8), float32] */;
  (%17, %18)
}

def @func_16713(%var_16705: Tensor[(6, 2, 16), float64]) -> (Tensor[(6, 2, 16), float64],) {
  %19 = cast(%var_16705, dtype="float64") /* ty=Tensor[(6, 2, 16), float64] */;
  %20 = erf(%19) /* ty=Tensor[(6, 2, 16), float64] */;
  (%20,)
}

def @func_13260(%var_13239: Tensor[(10, 15, 7), float64]) -> (Tensor[(10, 15, 7), bool], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %21 = cast(%var_13239, dtype="bool") /* ty=Tensor[(10, 15, 7), bool] */;
  %22 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(10, 15, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 15, 7), float64] */, dtype="bool") /* ty=Tensor[(10, 15, 7), bool] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %25 = @func_3831() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %26 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %27 = greater_equal(%23, %24) /* ty=Tensor[(10, 15, 7), bool] */;
  %28 = %25.0;
  %29 = %26.0;
  (%27, %28, %29)
}

def @func_4038() -> (Tensor[(6, 10, 13), float32],) {
  %30 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  (%30,)
}

def @func_9956() -> Tensor[(11, 5, 8), float32] {
  %31 = @func_7855() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(8, 52), bool], Tensor[(440), float32], Tensor[(297), float64]) */;
  %31.0
}

def @func_17868() -> (Tensor[(440), float32], Tensor[(3, 99), float64], Tensor[(3, 99), float64]) {
  %32 = @func_4687() /* ty=(Tensor[(440), float32],) */;
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 99), float64] */, dtype="float64") /* ty=Tensor[(3, 99), float64] */;
  %34 = reshape(%33, newshape=[3, 99]) /* ty=Tensor[(3, 99), float64] */;
  %35 = @func_8374(%34) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(3, 99), float64]) */;
  %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 99), float64] */, dtype="float64") /* ty=Tensor[(3, 99), float64] */;
  %37 = %32.0;
  %38 = %35.5;
  %39 = sinh(%36) /* ty=Tensor[(3, 99), float64] */;
  (%37, %38, %39)
}

def @func_18221() -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %40 = @func_14216() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %41 = @func_6960() /* ty=Tensor[(440), float32] */;
  %42 = %40.0;
  (%41, %42)
}

def @func_15410(%var_15399: uint8, %var_15400: Tensor[(1, 16, 10), uint8]) -> (Tensor[(1, 16, 10), uint8], Tensor[(11, 5, 8), float32]) {
  %43 = cast(%var_15399, dtype="uint8") /* ty=uint8 */;
  %44 = cast(%var_15400, dtype="uint8") /* ty=Tensor[(1, 16, 10), uint8] */;
  %45 = @func_9091() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %46 = bitwise_xor(%43, %44) /* ty=Tensor[(1, 16, 10), uint8] */;
  %47 = %45.1;
  (%46, %47)
}

def @func_16628(%var_16625: Tensor[(1, 1170), float32]) -> (Tensor[(6, 10, 13), float32], Tensor[(15, 13, 6), float32], Tensor[(1, 1170), float32]) {
  %48 = cast(%var_16625, dtype="float32") /* ty=Tensor[(1, 1170), float32] */;
  %49 = cast(%var_16625, dtype="float32") /* ty=Tensor[(1, 1170), float32] */;
  %50 = reshape(%48, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), float32] */;
  %51 = reshape(%49, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), float32] */;
  %52 = @func_8705(%50, %51) /* ty=(Tensor[(15, 13, 6), float32],) */;
  %53 = @func_14760() /* ty=Tensor[(6, 10, 13), float32] */;
  %54 = %52.0;
  (%53, %54, %var_16625)
}

def @func_15830(%var_15783: Tensor[(338), float64]) -> (Tensor[(9, 12, 11), bool], Tensor[(840), int64], Tensor[(338), float64], Tensor[(840), int64], Tensor[(440), float32], Tensor[(2, 3, 6), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %55 = cast(meta[relay.Constant][4] /* ty=Tensor[(9, 12, 11), uint16] */, dtype="bool") /* ty=Tensor[(9, 12, 11), bool] */;
  %56 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(9, 12, 11), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 12, 11), uint16] */, dtype="bool") /* ty=Tensor[(9, 12, 11), bool] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %59 = cast(%var_15783, dtype="float64") /* ty=Tensor[(338), float64] */;
  %60 = cast(meta[relay.Constant][5] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
  %61 = reshape(%59, newshape=[338, 1]) /* ty=Tensor[(338, 1), float64] */;
  %62 = reshape(%60, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %63 = @func_14590(%61, %62) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 13, 13), float64], Tensor[(338, 1), float64], Tensor[(840), int64]) */;
  %64 = @func_5540() /* ty=(Tensor[(440), float32],) */;
  %65 = @func_11550() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64]) */;
  %66 = @func_13163() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %67 = @func_13163() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %68 = @func_12141() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %69 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %70 = greater_equal(%57, %58) /* ty=Tensor[(9, 12, 11), bool] */;
  %71 = %63.3;
  %72 = %64.0;
  %73 = %65.1;
  %74 = %66.1;
  %75 = %67.0;
  %76 = %68.3;
  %77 = %69.2;
  (%70, %71, %var_15783, meta[relay.Constant][5] /* ty=Tensor[(840), int64] */, %72, %73, %74, %75, %76, %77)
}

def @func_14263() -> Tensor[(440), float32] {
  %78 = @func_13611() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(440), float32]) */;
  %79 = %78.3;
  %80 = cast(%79, dtype="float32") /* ty=Tensor[(440), float32] */;
  log2(%80) /* ty=Tensor[(440), float32] */
}

def @func_13970() -> Tensor[(6, 10, 13), float64] {
  %81 = @func_8892() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(110, 4), float32]) */;
  %81.0
}

def @func_2023(%var_2014: Tensor[(39, 7), int64]) -> (Tensor[(11, 5, 8), int64], Tensor[(440), float32], Tensor[(39, 7), int64]) {
  %82 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %83 = %82.1;
  %84 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 5, 8), float32] */, dtype="int64") /* ty=Tensor[(11, 5, 8), int64] */;
  %85 = shape_of(%83, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%83, dtype="int64") /* ty=Tensor[(11, 5, 8), int64] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %88 = cast(%var_2014, dtype="int64") /* ty=Tensor[(39, 7), int64] */;
  %89 = reshape(%88, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), int64] */;
  %90 = @func_1948(%89) /* ty=(Tensor[(13, 7, 3), int8], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(6, 10, 13), float32]) */;
  %91 = multiply(%86, %87) /* ty=Tensor[(11, 5, 8), int64] */;
  %92 = %90.2;
  (%91, %92, %var_2014)
}

def @func_10776() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float64]) {
  %93 = @func_8737() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %94 = @func_6545() /* ty=Tensor[(440), float32] */;
  %95 = %93.0;
  (%94, %95)
}

def @func_4767() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %96 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %97 = @func_3931() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %98 = %96.2;
  %99 = @func_3597() /* ty=Tensor[(11, 5, 8), float32] */;
  %100 = %97.0;
  (%98, %99, %100)
}

def @func_9664() -> (Tensor[(6, 10, 13), float32],) {
  %101 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %102 = %101.2;
  (%102,)
}

def @func_14984() -> Tensor[(6, 10, 13), float64] {
  @func_7537() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_18071(%var_18055: Tensor[(1573), float32], %var_18059: Tensor[(1573), float32]) -> (Tensor[(440), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float64], Tensor[(1573), uint16], Tensor[(6, 10, 13), float64]) {
  %103 = cast(%var_18055, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %104 = reshape(%103, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %105 = @func_9614(%104) /* ty=(Tensor[(13, 11, 11), uint16], Tensor[(440), float32]) */;
  %106 = @func_14517() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64], Tensor[(11, 5, 8), float32]) */;
  %107 = cast(%var_18059, dtype="uint16") /* ty=Tensor[(1573), uint16] */;
  %108 = shape_of(%var_18055, dtype="int32") /* ty=Tensor[(1), int32] */;
  %109 = cast(%var_18055, dtype="uint16") /* ty=Tensor[(1573), uint16] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %111 = @func_14946() /* ty=Tensor[(440), float32] */;
  %112 = %105.1;
  %113 = %106.0;
  %114 = left_shift(%109, %110) /* ty=Tensor[(1573), uint16] */;
  %115 = @func_15615() /* ty=Tensor[(6, 10, 13), float64] */;
  (%111, %112, %113, %114, %115)
}

def @func_20119() -> (Tensor[(2, 3, 6), int32], Tensor[(440), float32], Tensor[(672), bool], Tensor[(11, 5, 8), float32]) {
  %116 = @func_13833() /* ty=(Tensor[(440), uint8], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(110, 4), float32]) */;
  %117 = cast(meta[relay.Constant][7] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %118 = cast(meta[relay.Constant][7] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %119 = reshape(%117, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), bool] */;
  %120 = reshape(%118, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), bool] */;
  %121 = @func_3103(%119, %120) /* ty=(Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), int16], Tensor[(440), float32]) */;
  %122 = @func_5925() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %123 = %116.6;
  %124 = %121.2;
  %125 = %122.0;
  (%123, %124, meta[relay.Constant][7] /* ty=Tensor[(672), bool] */, %125)
}

def @func_3283(%var_3253: Tensor[(1, 13, 2), float64], %var_3273: Tensor[(16, 13, 2), float64]) -> (Tensor[(1, 13, 2), float32], Tensor[(16, 13, 2), float64]) {
  %126 = cast(%var_3253, dtype="float32") /* ty=Tensor[(1, 13, 2), float32] */;
  %127 = cast(%var_3253, dtype="float64") /* ty=Tensor[(1, 13, 2), float64] */;
  %128 = log10(%127) /* ty=Tensor[(1, 13, 2), float64] */;
  %129 = cast(%128, dtype="float64") /* ty=Tensor[(1, 13, 2), float64] */;
  %130 = cast(%var_3273, dtype="float64") /* ty=Tensor[(16, 13, 2), float64] */;
  %131 = tan(%126) /* ty=Tensor[(1, 13, 2), float32] */;
  %132 = floor_divide(%129, %130) /* ty=Tensor[(16, 13, 2), float64] */;
  (%131, %132)
}

def @func_890(%var_887: Tensor[(11, 5, 8), float32]) -> Tensor[(11, 5, 8), float32] {
  %133 = cast(%var_887, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  sqrt(%133) /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_11925() -> Tensor[(6, 10, 13), float32] {
  %134 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %134.0
}

def @func_6794(%var_6769: Tensor[(5, 1, 13), float64]) -> (Tensor[(5, 1, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %135 = cast(%var_6769, dtype="float64") /* ty=Tensor[(5, 1, 13), float64] */;
  %136 = rsqrt(%135) /* ty=Tensor[(5, 1, 13), float64] */;
  %137 = @func_4186() /* ty=Tensor[(11, 5, 8), float32] */;
  %138 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
  %139 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  (%136, %137, %138, %139)
}

def @func_7056(%var_7042: uint32, %var_7043: Tensor[(1728), uint32]) -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(16, 12, 9), uint32], uint32, Tensor[(1728), uint32]) {
  %140 = @func_4783() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %141 = @func_5925() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %142 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %143 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %144 = @func_3831() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %145 = cast(%var_7042, dtype="uint32") /* ty=uint32 */;
  %146 = cast(%var_7043, dtype="uint32") /* ty=Tensor[(1728), uint32] */;
  %147 = reshape(%145, newshape=[]) /* ty=uint32 */;
  %148 = reshape(%146, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint32] */;
  %149 = @func_3125(%147, %148) /* ty=(Tensor[(16, 12, 9), uint32],) */;
  %150 = %140.0;
  %151 = %141.0;
  %152 = %142.0;
  %153 = @func_4992() /* ty=Tensor[(6, 10, 13), float32] */;
  %154 = @func_6166() /* ty=Tensor[(11, 5, 8), float32] */;
  %155 = @func_5487() /* ty=Tensor[(110, 4), float32] */;
  %156 = %143.0;
  %157 = %144.0;
  %158 = %149.0;
  (%150, %151, %152, %153, %154, %155, %156, %157, %158, %var_7042, %var_7043)
}

def @func_9416(%var_9395: Tensor[(416), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(1, 13, 2), float32], Tensor[(26), float64], Tensor[(416), float64]) {
  %159 = @func_7184() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float64]) */;
  %160 = cast(meta[relay.Constant][8] /* ty=Tensor[(26), float64] */, dtype="float64") /* ty=Tensor[(26), float64] */;
  %161 = cast(%var_9395, dtype="float64") /* ty=Tensor[(416), float64] */;
  %162 = reshape(%160, newshape=[1, 13, 2]) /* ty=Tensor[(1, 13, 2), float64] */;
  %163 = reshape(%161, newshape=[16, 13, 2]) /* ty=Tensor[(16, 13, 2), float64] */;
  %164 = @func_3283(%162, %163) /* ty=(Tensor[(1, 13, 2), float32], Tensor[(16, 13, 2), float64]) */;
  %165 = %159.0;
  %166 = %164.0;
  (%165, %166, meta[relay.Constant][8] /* ty=Tensor[(26), float64] */, %var_9395)
}

def @func_9517() -> Tensor[(6, 10, 13), float64] {
  %167 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %167.0
}

def @func_17383(%var_17360: Tensor[(9, 1, 4), float32], %var_17361: Tensor[(9, 6, 4), float32]) -> (Tensor[(9, 6, 4), float32], Tensor[(9, 6, 4), float64]) {
  %168 = cast(%var_17360, dtype="float32") /* ty=Tensor[(9, 1, 4), float32] */;
  %169 = cast(%var_17361, dtype="float32") /* ty=Tensor[(9, 6, 4), float32] */;
  %170 = cast(%var_17361, dtype="float64") /* ty=Tensor[(9, 6, 4), float64] */;
  %171 = floor_divide(%168, %169) /* ty=Tensor[(9, 6, 4), float32] */;
  %172 = atan(%170) /* ty=Tensor[(9, 6, 4), float64] */;
  (%171, %172)
}

def @func_7184() -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float64]) {
  %173 = @func_4151() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) */;
  %174 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %175 = %174.1;
  %176 = cast(%175, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %177 = %173.0;
  %178 = acosh(%176) /* ty=Tensor[(110, 4), float64] */;
  (%177, %178)
}

def @func_1948(%var_1906: Tensor[(13, 7, 3), int64]) -> (Tensor[(13, 7, 3), int8], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(6, 10, 13), float32]) {
  %179 = cast(meta[relay.Constant][9] /* ty=Tensor[(13, 7, 3), int64] */, dtype="bool") /* ty=Tensor[(13, 7, 3), bool] */;
  %180 = shape_of(%var_1906, dtype="int32") /* ty=Tensor[(3), int32] */;
  %181 = cast(%var_1906, dtype="bool") /* ty=Tensor[(13, 7, 3), bool] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %183 = greater_equal(%181, %182) /* ty=Tensor[(13, 7, 3), bool] */;
  %184 = cast(%183, dtype="int8") /* ty=Tensor[(13, 7, 3), int8] */;
  %185 = shape_of(%var_1906, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%var_1906, dtype="int8") /* ty=Tensor[(13, 7, 3), int8] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %188 = cast(meta[relay.Constant][10] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %189 = reshape(%188, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %190 = cast(%var_1906, dtype="float32") /* ty=Tensor[(13, 7, 3), float32] */;
  %191 = acosh(%190) /* ty=Tensor[(13, 7, 3), float32] */;
  %192 = cast(%191, dtype="float32") /* ty=Tensor[(13, 7, 3), float32] */;
  %193 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %194 = bitwise_or(%186, %187) /* ty=Tensor[(13, 7, 3), int8] */;
  %195 = @func_890(%189) /* ty=Tensor[(11, 5, 8), float32] */;
  %196 = sinh(%192) /* ty=Tensor[(13, 7, 3), float32] */;
  %197 = %193.2;
  (%194, %195, meta[relay.Constant][10] /* ty=Tensor[(440), float32] */, %196, %197)
}

def @func_12321() -> (Tensor[(110, 4), float32],) {
  %198 = @func_5487() /* ty=Tensor[(110, 4), float32] */;
  (%198,)
}

def @func_6434() -> (Tensor[(11, 5, 8), float32],) {
  %199 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %200 = %199.0;
  (%200,)
}

def @func_18030() -> Tensor[(11, 5, 8), float32] {
  %201 = @func_8695() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %201.2
}

def @func_2250() -> Tensor[(11, 5, 8), float32] {
  %202 = @func_1639() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %202.1
}

def @func_1885() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %203 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %204 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %205 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %206 = %203.1;
  %207 = cast(%206, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %208 = reshape(%207, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %209 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  %210 = %204.0;
  %211 = %205.2;
  %212 = @func_890(%208) /* ty=Tensor[(11, 5, 8), float32] */;
  (%206, %209, %210, %211, %212)
}

def @func_7102() -> (Tensor[(6, 10, 13), float32],) {
  %213 = @func_5342() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %214 = %213.0;
  (%214,)
}

def @func_12226() -> (Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(15, 7, 8), int64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) {
  %215 = @func_5342() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %216 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 70), int64] */, dtype="int64") /* ty=Tensor[(12, 70), int64] */;
  %217 = reshape(%216, newshape=[15, 7, 8]) /* ty=Tensor[(15, 7, 8), int64] */;
  %218 = @func_5487() /* ty=Tensor[(110, 4), float32] */;
  %219 = %215.0;
  %220 = @func_3839(%217) /* ty=Tensor[(15, 7, 8), int64] */;
  %221 = @func_10077() /* ty=Tensor[(11, 5, 8), float32] */;
  (%218, %219, %220, meta[relay.Constant][11] /* ty=Tensor[(12, 70), int64] */, %221)
}

def @func_19010() -> Tensor[(11, 5, 8), float32] {
  %222 = @func_8695() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %222.2
}

def @func_14946() -> Tensor[(440), float32] {
  %223 = @func_5289() /* ty=(Tensor[(440), float32],) */;
  %223.0
}

def @func_6166() -> Tensor[(11, 5, 8), float32] {
  %224 = @func_3831() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %224.0
}

def @func_4151() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) {
  %225 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %226 = %225.0;
  %227 = @func_2927() /* ty=Tensor[(6, 10, 13), float64] */;
  (%226, %227)
}

def @func_12833() -> (Tensor[(6, 10, 13), float64],) {
  %228 = @func_5036() /* ty=Tensor[(6, 10, 13), float64] */;
  (%228,)
}

def @func_9563() -> (Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64], Tensor[(11, 5, 8), float64]) {
  %229 = @func_8695() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %230 = @func_6337() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float64]) */;
  %231 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  %232 = %229.0;
  %233 = %230.2;
  (%231, %232, %233)
}

def @func_10867() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %234 = @func_6727() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %235 = @func_10391() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) */;
  %236 = %234.0;
  %237 = %235.0;
  (%236, %237)
}

def @func_2433() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
  %238 = @func_2207() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %239 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %240 = %238.0;
  %241 = %239.1;
  %242 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  (%240, %241, %242)
}

def @func_12967() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64]) {
  %243 = @func_3931() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %244 = @func_10776() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %245 = %243.2;
  %246 = @func_11819() /* ty=Tensor[(6, 10, 13), float32] */;
  %247 = %244.1;
  (%245, %246, %247)
}

def @func_5036() -> Tensor[(6, 10, 13), float64] {
  %248 = @func_2827() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %248.0
}

def @func_7352() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32]) {
  %249 = @func_4038() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %250 = @func_4767() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %251 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %252 = @func_5540() /* ty=(Tensor[(440), float32],) */;
  %253 = %249.0;
  %254 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  %255 = %250.0;
  %256 = %251.0;
  %257 = %252.0;
  (%253, %254, %255, %256, %257)
}

def @func_9176(%var_9109: Tensor[(4, 9, 12), float64], %var_9158: Tensor[(4, 9, 12), float32]) -> (Tensor[(4, 9, 12), int16], Tensor[(11, 5, 8), float32], Tensor[(4, 9, 12), float64], Tensor[(4, 9, 12), bool]) {
  %258 = cast(%var_9109, dtype="float64") /* ty=Tensor[(4, 9, 12), float64] */;
  %259 = log(%258) /* ty=Tensor[(4, 9, 12), float64] */;
  %260 = cast(%var_9109, dtype="float32") /* ty=Tensor[(4, 9, 12), float32] */;
  %261 = sin(%260) /* ty=Tensor[(4, 9, 12), float32] */;
  %262 = cast(%261, dtype="int16") /* ty=Tensor[(4, 9, 12), int16] */;
  %263 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%259, dtype="int16") /* ty=Tensor[(4, 9, 12), int16] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %266 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %267 = cast(%259, dtype="float32") /* ty=Tensor[(4, 9, 12), float32] */;
  %268 = log10(%267) /* ty=Tensor[(4, 9, 12), float32] */;
  %269 = cast(%261, dtype="float64") /* ty=Tensor[(4, 9, 12), float64] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%268, dtype="float64") /* ty=Tensor[(4, 9, 12), float64] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %273 = cast(%var_9158, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
  %274 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%268, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %277 = logical_xor(%264, %265) /* ty=Tensor[(4, 9, 12), int16] */;
  %278 = %266.0;
  %279 = floor_mod(%271, %272) /* ty=Tensor[(4, 9, 12), float64] */;
  %280 = less(%275, %276) /* ty=Tensor[(4, 9, 12), bool] */;
  (%277, %278, %279, %280)
}

def @func_10654(%var_10649: Tensor[(10, 5, 8), uint64], %var_10650: Tensor[(10, 5, 8), uint64]) -> (Tensor[(10, 5, 8), uint64],) {
  %281 = cast(%var_10650, dtype="uint64") /* ty=Tensor[(10, 5, 8), uint64] */;
  %282 = shape_of(%var_10649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(%var_10649, dtype="uint64") /* ty=Tensor[(10, 5, 8), uint64] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %285 = bitwise_and(%283, %284) /* ty=Tensor[(10, 5, 8), uint64] */;
  (%285,)
}

def @func_14858() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float64]) {
  %286 = @func_14263() /* ty=Tensor[(440), float32] */;
  %287 = @func_7537() /* ty=Tensor[(6, 10, 13), float64] */;
  (%286, %287)
}

def @func_2326() -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %288 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %289 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %291 = reshape(%290, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %292 = %288.2;
  %293 = @func_890(%291) /* ty=Tensor[(11, 5, 8), float32] */;
  (%292, %289, %293)
}

def @func_3125(%var_3117: uint32, %var_3118: Tensor[(16, 12, 9), uint32]) -> (Tensor[(16, 12, 9), uint32],) {
  %294 = cast(%var_3117, dtype="uint32") /* ty=uint32 */;
  %295 = cast(%var_3118, dtype="uint32") /* ty=Tensor[(16, 12, 9), uint32] */;
  %296 = subtract(%294, %295) /* ty=Tensor[(16, 12, 9), uint32] */;
  (%296,)
}

def @func_1700() -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) {
  %297 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %298 = %297.0;
  %299 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  %300 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  (%298, %299, %300)
}

def @func_4372() -> (Tensor[(11, 5, 8), float32],) {
  %301 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %302 = %301.0;
  (%302,)
}

def @func_4687() -> (Tensor[(440), float32],) {
  %303 = @func_3809() /* ty=(Tensor[(440), float32],) */;
  %304 = %303.0;
  (%304,)
}

def @func_4166() -> Tensor[(110, 4), float32] {
  %305 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %305.2
}

def @func_17256() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32], Tensor[(440), float32]) {
  %306 = @func_12932() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %307 = @func_8892() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(110, 4), float32]) */;
  %308 = @func_13398() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(1050), float64], Tensor[(11, 5, 8), float32]) */;
  %309 = @func_7537() /* ty=Tensor[(6, 10, 13), float64] */;
  %310 = %306.0;
  %311 = %307.4;
  %312 = %308.0;
  (%309, %310, %311, %312)
}

def @func_12749() -> (Tensor[(11, 5, 8), float32],) {
  %313 = @func_6827() /* ty=Tensor[(11, 5, 8), float32] */;
  (%313,)
}

def @func_4592() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %314 = @func_2433() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %315 = %314.2;
  %316 = @func_3597() /* ty=Tensor[(11, 5, 8), float32] */;
  (%315, %316)
}

def @func_3777() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) {
  %317 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %318 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %319 = %317.3;
  %320 = @func_2490() /* ty=Tensor[(11, 5, 8), float32] */;
  %321 = %318.0;
  %322 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  (%319, %320, %321, %322)
}

def @func_6602() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float64]) {
  %323 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %324 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %325 = @func_4687() /* ty=(Tensor[(440), float32],) */;
  %326 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
  %327 = %323.2;
  %328 = @func_2692() /* ty=Tensor[(11, 5, 8), float32] */;
  %329 = %324.0;
  %330 = %325.0;
  %331 = @func_5036() /* ty=Tensor[(6, 10, 13), float64] */;
  (%326, %327, %328, %329, %330, %331)
}

def @func_17522() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64]) {
  %332 = @func_10776() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %333 = %332.1;
  %334 = @func_16472() /* ty=Tensor[(6, 10, 13), float64] */;
  (%333, %334)
}

def @func_15342() -> Tensor[(11, 5, 8), float32] {
  %335 = @func_8957() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %335.0
}

def @func_10339() -> (Tensor[(6, 10, 13), float32], Tensor[(440), uint8]) {
  %336 = @func_1639() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %337 = @func_5254() /* ty=Tensor[(440), float32] */;
  %338 = @func_8126() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %339 = %338.0;
  %340 = cast(%339, dtype="uint8") /* ty=Tensor[(11, 5, 8), uint8] */;
  %341 = shape_of(%337, dtype="int32") /* ty=Tensor[(1), int32] */;
  %342 = cast(%337, dtype="uint8") /* ty=Tensor[(440), uint8] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %344 = %336.0;
  %345 = minimum(%342, %343) /* ty=Tensor[(440), uint8] */;
  (%344, %345)
}

def @func_19368() -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(297), float64]) {
  %346 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %347 = cast(meta[relay.Constant][12] /* ty=Tensor[(297), float64] */, dtype="float64") /* ty=Tensor[(297), float64] */;
  %348 = reshape(%347, newshape=[297]) /* ty=Tensor[(297), float64] */;
  %349 = @func_17221(%348) /* ty=(Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(440), float32], Tensor[(297), float64]) */;
  %350 = %346.0;
  %351 = %349.0;
  (%350, %351, meta[relay.Constant][12] /* ty=Tensor[(297), float64] */)
}

def @func_8215() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) {
  %352 = @func_2619() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %353 = @func_7184() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float64]) */;
  %354 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %355 = %352.1;
  %356 = %353.0;
  %357 = %354.0;
  %358 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  (%355, %356, %357, %358)
}

def @func_19483() -> Tensor[(11, 5, 8), float32] {
  %359 = @func_12749() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %359.0
}

def @func_2619() -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %360 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %361 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %362 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %363 = %362.0;
  %364 = cast(%363, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %365 = tan(%364) /* ty=Tensor[(11, 5, 8), float32] */;
  %366 = cast(%365, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %367 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %368 = %360.0;
  %369 = %361.0;
  %370 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  %371 = asin(%366) /* ty=Tensor[(11, 5, 8), float32] */;
  %372 = %367.0;
  (%368, %369, %370, %371, %372)
}

def @func_11962() -> (Tensor[(6, 10, 13), float32],) {
  %373 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  (%373,)
}

def @func_3158() -> Tensor[(11, 5, 8), float32] {
  @func_2659() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_18160() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float32]) {
  %374 = @func_10776() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %375 = %374.0;
  %376 = @func_16053() /* ty=Tensor[(6, 10, 13), float32] */;
  (%375, %376)
}

def @func_18326() -> (Tensor[(6, 10, 13), float32],) {
  %377 = @func_4902() /* ty=Tensor[(6, 10, 13), float32] */;
  (%377,)
}

def @func_18839(%var_18827: Tensor[(110, 4), float32]) -> Tensor[(110, 4), int8] {
  %378 = @func_17026() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %379 = %378.1;
  %380 = cast(%var_18827, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %381 = shape_of(%379, dtype="int32") /* ty=Tensor[(2), int32] */;
  %382 = cast(%379, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %384 = floor_divide(%382, %383) /* ty=Tensor[(110, 4), float64] */;
  %385 = cast(%384, dtype="int8") /* ty=Tensor[(110, 4), int8] */;
  %386 = shape_of(%var_18827, dtype="int32") /* ty=Tensor[(2), int32] */;
  %387 = cast(%var_18827, dtype="int8") /* ty=Tensor[(110, 4), int8] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  bitwise_and(%387, %388) /* ty=Tensor[(110, 4), int8] */
}

def @func_18405() -> Tensor[(9, 1, 15), float32] {
  %389 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 1, 15), float32] */;
  atanh(%389) /* ty=Tensor[(9, 1, 15), float32] */
}

def @func_16053() -> Tensor[(6, 10, 13), float32] {
  %390 = @func_10776() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %391 = %390.1;
  %392 = cast(%391, dtype="float32") /* ty=Tensor[(6, 10, 13), float32] */;
  %393 = atanh(%392) /* ty=Tensor[(6, 10, 13), float32] */;
  %394 = cast(%393, dtype="float32") /* ty=Tensor[(6, 10, 13), float32] */;
  erf(%394) /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_1639() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %395 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %396 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %397 = %396.1;
  %398 = cast(%397, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %399 = reshape(%398, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %400 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %401 = %395.0;
  %402 = @func_890(%399) /* ty=Tensor[(11, 5, 8), float32] */;
  %403 = %400.0;
  (%401, %397, %402, %403)
}

def @func_13163() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %404 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %405 = %404.0;
  %406 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
  (%405, %406)
}

def @func_7677(%var_7657: Tensor[(2535), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64]) {
  %407 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %408 = @func_6434() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %409 = cast(-9.10323f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %410 = cast(%var_7657, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %411 = reshape(%409, newshape=[]) /* ty=float64 */;
  %412 = reshape(%410, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
  %413 = @func_4055(%411, %412) /* ty=(Tensor[(13, 13, 15), bool],) */;
  %414 = %407.0;
  %415 = %408.0;
  %416 = %413.0;
  (%414, %415, %416, -9.10323f64 /* ty=float64 */, %var_7657)
}

def @func_13502() -> (Tensor[(11, 5, 8), float32],) {
  %417 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %418 = %417.0;
  (%418,)
}

def @func_6004(%var_5977: Tensor[(8, 13, 6), float64]) -> (Tensor[(8, 13, 6), float64], Tensor[(440), float32]) {
  %419 = cast(%var_5977, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %420 = @func_4687() /* ty=(Tensor[(440), float32],) */;
  %421 = asin(%419) /* ty=Tensor[(8, 13, 6), float64] */;
  %422 = %420.0;
  (%421, %422)
}

def @func_13872() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %423 = @func_9805() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %424 = @func_8892() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(110, 4), float32]) */;
  %425 = %423.0;
  %426 = %424.2;
  (%425, %426)
}

def @func_9232() -> Tensor[(11, 5, 8), float32] {
  @func_2659() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_4273(%var_4203: int8, %var_4204: Tensor[(10, 3, 7), int8]) -> (Tensor[(10, 3, 7), bool], Tensor[(6, 10, 13), float32], Tensor[(440), float32]) {
  %427 = cast(%var_4203, dtype="bool") /* ty=bool */;
  %428 = cast(%var_4204, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %429 = @func_4038() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %430 = equal(%427, %428) /* ty=Tensor[(10, 3, 7), bool] */;
  %431 = %429.0;
  %432 = @func_3516() /* ty=Tensor[(440), float32] */;
  (%430, %431, %432)
}

def @func_7537() -> Tensor[(6, 10, 13), float64] {
  %433 = @func_2827() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %433.0
}

def @func_13453() -> Tensor[(6, 10, 13), float32] {
  @func_4992() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_13109() -> (Tensor[(11, 5, 8), float32], Tensor[(8, 13, 6), float64], Tensor[(624), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32]) {
  %434 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %435 = cast(meta[relay.Constant][14] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %436 = reshape(%435, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %437 = @func_6004(%436) /* ty=(Tensor[(8, 13, 6), float64], Tensor[(440), float32]) */;
  %438 = @func_9740() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %439 = @func_2128() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */;
  %440 = @func_9805() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %441 = %434.1;
  %442 = %437.0;
  %443 = %438.1;
  %444 = %439.0;
  %445 = %440.0;
  (%441, %442, meta[relay.Constant][14] /* ty=Tensor[(624), float64] */, %443, %444, %445)
}

def @func_14618() -> (Tensor[(6, 10, 13), float32],) {
  %446 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %447 = %446.2;
  (%447,)
}

def @func_5342() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
  %448 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %449 = %448.0;
  %450 = @func_4521() /* ty=Tensor[(11, 5, 8), float32] */;
  (%449, %450)
}

def @func_17784(%var_17756: Tensor[(440), float32]) -> (Tensor[(440), int64], Tensor[(6, 10, 13), float64], Tensor[(440), float64]) {
  %451 = @func_8590() /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %452 = %451.0;
  %453 = cast(%var_17756, dtype="int64") /* ty=Tensor[(440), int64] */;
  %454 = shape_of(%452, dtype="int32") /* ty=Tensor[(1), int32] */;
  %455 = cast(%452, dtype="int64") /* ty=Tensor[(440), int64] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?), int64] */;
  %457 = cast(%452, dtype="float64") /* ty=Tensor[(440), float64] */;
  %458 = add(%455, %456) /* ty=Tensor[(440), int64] */;
  %459 = @func_5036() /* ty=Tensor[(6, 10, 13), float64] */;
  %460 = cosh(%457) /* ty=Tensor[(440), float64] */;
  (%458, %459, %460)
}

def @func_17576() -> (Tensor[(11, 5, 8), float32],) {
  %461 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
  (%461,)
}

def @func_5540() -> (Tensor[(440), float32],) {
  %462 = @func_5254() /* ty=Tensor[(440), float32] */;
  (%462,)
}

def @func_2463() -> (Tensor[(11, 5, 8), float32],) {
  %463 = @func_2326() /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %464 = %463.2;
  (%464,)
}

def @func_16404() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float32]) {
  %465 = @func_9318() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %466 = @func_11702() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %467 = %465.2;
  %468 = %466.1;
  (%467, %468)
}

def @func_17485() -> Tensor[(11, 5, 8), float32] {
  %469 = @func_17434() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(24, 26), float64]) */;
  %469.0
}

def @func_15287() -> (Tensor[(9, 7, 9), float64], Tensor[(11, 5, 8), float32]) {
  %470 = @func_9641() /* ty=(Tensor[(9, 7, 9), bool],) */;
  %471 = %470.0;
  %472 = cast(%471, dtype="float64") /* ty=Tensor[(9, 7, 9), float64] */;
  %473 = @func_13163() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %474 = sinh(%472) /* ty=Tensor[(9, 7, 9), float64] */;
  %475 = %473.1;
  (%474, %475)
}

def @func_9614(%var_9566: Tensor[(13, 11, 11), float32]) -> (Tensor[(13, 11, 11), uint16], Tensor[(440), float32]) {
  %476 = cast(%var_9566, dtype="float32") /* ty=Tensor[(13, 11, 11), float32] */;
  %477 = sqrt(%476) /* ty=Tensor[(13, 11, 11), float32] */;
  %478 = cast(%477, dtype="bool") /* ty=Tensor[(13, 11, 11), bool] */;
  %479 = shape_of(%var_9566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(%var_9566, dtype="bool") /* ty=Tensor[(13, 11, 11), bool] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %482 = not_equal(%480, %481) /* ty=Tensor[(13, 11, 11), bool] */;
  %483 = cast(%477, dtype="uint16") /* ty=Tensor[(13, 11, 11), uint16] */;
  %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%482, dtype="uint16") /* ty=Tensor[(13, 11, 11), uint16] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %487 = add(%485, %486) /* ty=Tensor[(13, 11, 11), uint16] */;
  %488 = @func_5254() /* ty=Tensor[(440), float32] */;
  (%487, %488)
}

def @func_5289() -> (Tensor[(440), float32],) {
  %489 = @func_2207() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %490 = %489.0;
  (%490,)
}

def @func_4186() -> Tensor[(11, 5, 8), float32] {
  %491 = @func_1639() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %491.1
}

def @func_5254() -> Tensor[(440), float32] {
  %492 = @func_3809() /* ty=(Tensor[(440), float32],) */;
  %492.0
}

def @func_15382() -> Tensor[(11, 5, 8), float32] {
  @func_15342() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_19792(%var_19777: Tensor[(3, 7, 10), float64]) -> Tensor[(3, 7, 10), float64] {
  %493 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 7, 10), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 10), float64] */;
  %494 = shape_of(%var_19777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%var_19777, dtype="float64") /* ty=Tensor[(3, 7, 10), float64] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%495, %496) /* ty=Tensor[(3, 7, 10), float64] */
}

def @func_9740() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %497 = @func_4592() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %498 = @func_6827() /* ty=Tensor[(11, 5, 8), float32] */;
  %499 = %497.0;
  (%498, %499)
}

def @func_2659() -> Tensor[(11, 5, 8), float32] {
  %500 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %500.0
}

def @func_19997() -> (Tensor[(110, 4), float64], Tensor[(11, 5, 8), float32]) {
  %501 = @func_11842() /* ty=(Tensor[(110, 4), float32],) */;
  %502 = %501.0;
  %503 = cast(%502, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %504 = @func_9795() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %505 = cosh(%503) /* ty=Tensor[(110, 4), float64] */;
  %506 = %504.0;
  (%505, %506)
}

def @func_14297() -> Tensor[(6, 10, 13), float32] {
  %507 = @func_13925() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */;
  %507.1
}

def @func_3931() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %508 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
  %509 = @func_2692() /* ty=Tensor[(11, 5, 8), float32] */;
  %510 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  (%508, %509, %510)
}

def @func_2128() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) {
  %511 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %512 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %513 = %511.0;
  %514 = %512.0;
  (%513, %514)
}

def @func_10555() -> (Tensor[(9, 7, 9), bool], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(624), float64]) {
  %515 = @func_9641() /* ty=(Tensor[(9, 7, 9), bool],) */;
  %516 = cast(meta[relay.Constant][16] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %517 = reshape(%516, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %518 = @func_6004(%517) /* ty=(Tensor[(8, 13, 6), float64], Tensor[(440), float32]) */;
  %519 = %515.0;
  %520 = @func_2927() /* ty=Tensor[(6, 10, 13), float64] */;
  %521 = %518.1;
  (%519, %520, %521, meta[relay.Constant][16] /* ty=Tensor[(624), float64] */)
}

def @func_16678() -> (Tensor[(11, 5, 8), float32],) {
  %522 = @func_6434() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %523 = %522.0;
  (%523,)
}

def @func_8374(%var_8368: Tensor[(3, 99), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(3, 99), float64]) {
  %524 = @func_7165() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(8, 52), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %525 = @func_6602() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %526 = @func_3309() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %527 = cast(%var_8368, dtype="float64") /* ty=Tensor[(3, 99), float64] */;
  %528 = reshape(%527, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float64] */;
  %529 = @func_5480(%528) /* ty=(Tensor[(440), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(6, 10, 13), float32]) */;
  %530 = %524.0;
  %531 = %525.5;
  %532 = @func_7537() /* ty=Tensor[(6, 10, 13), float64] */;
  %533 = %526.0;
  %534 = %529.3;
  (%530, %531, %532, %533, %534, %var_8368)
}

def @func_12403() -> Tensor[(440), float32] {
  %535 = @func_9318() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %535.2
}

def @func_9091() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %536 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %537 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
  %538 = %536.0;
  (%537, %538)
}

def @func_11329() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32]) {
  %539 = @func_5342() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %540 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %541 = @func_4687() /* ty=(Tensor[(440), float32],) */;
  %542 = @func_2433() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %543 = %539.1;
  %544 = %540.1;
  %545 = %541.0;
  %546 = @func_3516() /* ty=Tensor[(440), float32] */;
  %547 = %542.1;
  (%543, %544, %545, %546, %547)
}

def @func_9749() -> Tensor[(440), float32] {
  %548 = @func_7855() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(8, 52), bool], Tensor[(440), float32], Tensor[(297), float64]) */;
  %548.3
}

def @func_8298() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], int8, Tensor[(210), int8]) {
  %549 = @func_4592() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %550 = cast(meta[relay.Constant][17] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %551 = cast(meta[relay.Constant][18] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %552 = reshape(%550, newshape=[]) /* ty=int8 */;
  %553 = reshape(%551, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), int8] */;
  %554 = @func_4273(%552, %553) /* ty=(Tensor[(10, 3, 7), bool], Tensor[(6, 10, 13), float32], Tensor[(440), float32]) */;
  %555 = %549.0;
  %556 = %554.2;
  (%555, %556, meta[relay.Constant][17] /* ty=int8 */, meta[relay.Constant][18] /* ty=Tensor[(210), int8] */)
}

def @func_11842() -> (Tensor[(110, 4), float32],) {
  %557 = @func_8233() /* ty=Tensor[(110, 4), float32] */;
  (%557,)
}

def @func_3103(%var_3079: Tensor[(16, 7, 6), bool], %var_3080: Tensor[(16, 7, 6), bool]) -> (Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), int16], Tensor[(440), float32]) {
  %558 = cast(%var_3080, dtype="bool") /* ty=Tensor[(16, 7, 6), bool] */;
  %559 = shape_of(%var_3079, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%var_3079, dtype="bool") /* ty=Tensor[(16, 7, 6), bool] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %562 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 7, 6), bool] */, dtype="int16") /* ty=Tensor[(16, 7, 6), int16] */;
  %563 = shape_of(%var_3079, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%var_3079, dtype="int16") /* ty=Tensor[(16, 7, 6), int16] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %566 = @func_2326() /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %567 = logical_or(%560, %561) /* ty=Tensor[(16, 7, 6), bool] */;
  %568 = bitwise_xor(%564, %565) /* ty=Tensor[(16, 7, 6), int16] */;
  %569 = %566.0;
  (%567, %568, %569)
}

def @func_4977() -> (Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) {
  %570 = @func_4902() /* ty=Tensor[(6, 10, 13), float32] */;
  %571 = @func_4166() /* ty=Tensor[(110, 4), float32] */;
  (%570, %571)
}

def @func_11893() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %572 = @func_3831() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %573 = @func_7700() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %574 = %572.0;
  %575 = %573.0;
  (%574, %575)
}

def @func_17080(%var_17066: Tensor[(12, 4), float64], %var_17067: Tensor[(288), float64]) -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(16, 6, 3), float64], Tensor[(12, 4), float64], Tensor[(288), float64]) {
  %576 = @func_14618() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %577 = cast(%var_17066, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %578 = cast(%var_17067, dtype="float64") /* ty=Tensor[(288), float64] */;
  %579 = reshape(%577, newshape=[16, 1, 3]) /* ty=Tensor[(16, 1, 3), float64] */;
  %580 = reshape(%578, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), float64] */;
  %581 = @func_13453() /* ty=Tensor[(6, 10, 13), float32] */;
  %582 = %576.0;
  %583 = @func_6647(%579, %580) /* ty=Tensor[(16, 6, 3), float64] */;
  (%581, %582, %583, %var_17066, %var_17067)
}

def @func_19060() -> Tensor[(11, 5, 8), float32] {
  @func_17485() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_9641() -> (Tensor[(9, 7, 9), bool],) {
  %584 = cast(meta[relay.Constant][20] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %585 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 7, 9), int8] */, dtype="bool") /* ty=Tensor[(9, 7, 9), bool] */;
  %586 = less_equal(%584, %585) /* ty=Tensor[(9, 7, 9), bool] */;
  (%586,)
}

def @func_15615() -> Tensor[(6, 10, 13), float64] {
  %587 = @func_8737() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %587.0
}

def @func_17221(%var_17199: Tensor[(297), float64]) -> (Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(440), float32], Tensor[(297), float64]) {
  %588 = @func_3777() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %589 = @func_13833() /* ty=(Tensor[(440), uint8], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(110, 4), float32]) */;
  %590 = cast(%var_17199, dtype="float64") /* ty=Tensor[(297), float64] */;
  %591 = reshape(%590, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float64] */;
  %592 = @func_5480(%591) /* ty=(Tensor[(440), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(6, 10, 13), float32]) */;
  %593 = %588.0;
  %594 = %589.6;
  %595 = %592.0;
  (%593, %594, %595, %var_17199)
}

def @func_13654() -> Tensor[(11, 5, 8), float32] {
  @func_10077() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_5758(%var_5754: Tensor[(273), int64]) -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) {
  %596 = cast(%var_5754, dtype="int64") /* ty=Tensor[(273), int64] */;
  %597 = reshape(%596, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), int64] */;
  %598 = @func_1948(%597) /* ty=(Tensor[(13, 7, 3), int8], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(6, 10, 13), float32]) */;
  %599 = @func_2490() /* ty=Tensor[(11, 5, 8), float32] */;
  %600 = %598.1;
  (%599, %600, %var_5754)
}

def @func_4473(%var_4443: Tensor[(2, 13, 13), float64], %var_4468: Tensor[(840), int64]) -> (Tensor[(2, 13, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(15, 7, 8), int64], Tensor[(840), int64]) {
  %601 = cast(%var_4443, dtype="float64") /* ty=Tensor[(2, 13, 13), float64] */;
  %602 = acos(%601) /* ty=Tensor[(2, 13, 13), float64] */;
  %603 = cast(%602, dtype="float64") /* ty=Tensor[(2, 13, 13), float64] */;
  %604 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %605 = cast(%var_4468, dtype="int64") /* ty=Tensor[(840), int64] */;
  %606 = reshape(%605, newshape=[15, 7, 8]) /* ty=Tensor[(15, 7, 8), int64] */;
  %607 = cos(%603) /* ty=Tensor[(2, 13, 13), float64] */;
  %608 = %604.0;
  %609 = @func_3839(%606) /* ty=Tensor[(15, 7, 8), int64] */;
  (%607, %608, %609, %var_4468)
}

def @func_13029() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %610 = @func_11893() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %611 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
  %612 = %610.1;
  (%611, %612)
}

def @func_14931(%var_14871: Tensor[(48), float64], %var_14912: Tensor[(504), uint16]) -> (Tensor[(11, 5, 8), float32], Tensor[(16, 6, 3), float64], Tensor[(48), float64], Tensor[(288), float64], Tensor[(6, 6, 14), uint16], Tensor[(504), uint16], Tensor[(6, 10, 13), float64]) {
  %613 = @func_9040() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %614 = cast(%var_14871, dtype="float64") /* ty=Tensor[(48), float64] */;
  %615 = cast(meta[relay.Constant][22] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %616 = reshape(%614, newshape=[16, 1, 3]) /* ty=Tensor[(16, 1, 3), float64] */;
  %617 = reshape(%615, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), float64] */;
  %618 = cast(%var_14912, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %619 = reshape(%618, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), uint16] */;
  %620 = @func_12384() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64]) */;
  %621 = %613.1;
  %622 = @func_6647(%616, %617) /* ty=Tensor[(16, 6, 3), float64] */;
  %623 = @func_5604(%619) /* ty=Tensor[(6, 6, 14), uint16] */;
  %624 = %620.1;
  (%621, %622, %var_14871, meta[relay.Constant][22] /* ty=Tensor[(288), float64] */, %623, %var_14912, %624)
}

def @func_18610() -> (Tensor[(11, 5, 8), float32],) {
  %625 = @func_3597() /* ty=Tensor[(11, 5, 8), float32] */;
  (%625,)
}

def @func_15454() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32]) {
  %626 = @func_15031() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32]) */;
  %627 = cast(meta[relay.Constant][23] /* ty=Tensor[(273), int64] */, dtype="int64") /* ty=Tensor[(273), int64] */;
  %628 = reshape(%627, newshape=[273]) /* ty=Tensor[(273), int64] */;
  %629 = @func_5758(%628) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) */;
  %630 = %626.0;
  %631 = %629.0;
  %632 = @func_15182() /* ty=Tensor[(11, 5, 8), float32] */;
  (%630, %631, meta[relay.Constant][23] /* ty=Tensor[(273), int64] */, %632)
}

def @func_9805() -> (Tensor[(11, 5, 8), float32],) {
  %633 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
  (%633,)
}

def @func_15690() -> (Tensor[(11, 5, 8), float32],) {
  %634 = @func_10018() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %635 = %634.0;
  (%635,)
}

def @func_19772() -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32]) {
  %636 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %637 = @func_8815() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %638 = %636.0;
  %639 = %637.0;
  (%638, %639)
}

def @func_7593() -> (Tensor[(11, 5, 8), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %640 = @func_6337() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float64]) */;
  %641 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %642 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %643 = %640.2;
  %644 = %641.0;
  %645 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
  %646 = %642.0;
  (%643, %644, %645, %646)
}

def @func_10391() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) {
  %647 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %648 = @func_8815() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %649 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %650 = %647.0;
  %651 = %648.0;
  %652 = %649.0;
  (%650, %651, %652)
}

def @func_6272() -> Tensor[(6, 10, 13), float64] {
  %653 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %653.0
}

def @func_8892() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(110, 4), float32]) {
  %654 = @func_8737() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %655 = @func_2207() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %656 = @func_4783() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %657 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %658 = %654.0;
  %659 = %655.1;
  %660 = %656.0;
  %661 = %657.0;
  %662 = @func_4166() /* ty=Tensor[(110, 4), float32] */;
  (%658, %659, %660, %661, %662)
}

def @func_8590() -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %663 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %664 = @func_7271() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %665 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %666 = %663.3;
  %667 = %664.0;
  %668 = %665.0;
  (%666, %667, %668)
}

def @func_7750(%var_7721: float64, %var_7722: Tensor[(1, 10, 9), float64], %var_7740: Tensor[(2, 10, 9), bool]) -> (Tensor[(1, 10, 9), float64], Tensor[(2, 10, 9), int16], Tensor[(1, 10, 9), float64]) {
  %669 = cast(%var_7721, dtype="float64") /* ty=float64 */;
  %670 = cast(%var_7722, dtype="float64") /* ty=Tensor[(1, 10, 9), float64] */;
  %671 = cast(%var_7722, dtype="bool") /* ty=Tensor[(1, 10, 9), bool] */;
  %672 = cast(%var_7721, dtype="bool") /* ty=bool */;
  %673 = logical_and(%671, %672) /* ty=Tensor[(1, 10, 9), bool] */;
  %674 = cast(%673, dtype="int16") /* ty=Tensor[(1, 10, 9), int16] */;
  %675 = cast(%var_7740, dtype="int16") /* ty=Tensor[(2, 10, 9), int16] */;
  %676 = cast(%var_7722, dtype="float64") /* ty=Tensor[(1, 10, 9), float64] */;
  %677 = mod(%669, %670) /* ty=Tensor[(1, 10, 9), float64] */;
  %678 = maximum(%674, %675) /* ty=Tensor[(2, 10, 9), int16] */;
  %679 = erf(%676) /* ty=Tensor[(1, 10, 9), float64] */;
  (%677, %678, %679)
}

def @func_10497(%var_10495: Tensor[(273), int64]) -> (Tensor[(6, 10, 13), float64], uint32, Tensor[(16, 12, 9), uint32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) {
  %680 = cast(meta[relay.Constant][24] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %681 = cast(meta[relay.Constant][25] /* ty=Tensor[(1728), uint32] */, dtype="uint32") /* ty=Tensor[(1728), uint32] */;
  %682 = reshape(%680, newshape=[]) /* ty=uint32 */;
  %683 = reshape(%681, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint32] */;
  %684 = @func_3125(%682, %683) /* ty=(Tensor[(16, 12, 9), uint32],) */;
  %685 = %684.0;
  %686 = cast(meta[relay.Constant][25] /* ty=Tensor[(1728), uint32] */, dtype="uint32") /* ty=Tensor[(1728), uint32] */;
  %687 = shape_of(%685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(%685, dtype="uint32") /* ty=Tensor[(16, 12, 9), uint32] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %690 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %691 = @func_5342() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %692 = cast(%var_10495, dtype="int64") /* ty=Tensor[(273), int64] */;
  %693 = reshape(%692, newshape=[273]) /* ty=Tensor[(273), int64] */;
  %694 = @func_5758(%693) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) */;
  %695 = @func_5036() /* ty=Tensor[(6, 10, 13), float64] */;
  %696 = right_shift(%688, %689) /* ty=Tensor[(16, 12, 9), uint32] */;
  %697 = %690.0;
  %698 = %691.1;
  %699 = @func_7383() /* ty=Tensor[(11, 5, 8), float32] */;
  %700 = %694.0;
  (%695, meta[relay.Constant][24] /* ty=uint32 */, %696, %697, %698, %699, %700, %var_10495)
}

def @func_16472() -> Tensor[(6, 10, 13), float64] {
  %701 = @func_2827() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %701.0
}

def @func_8737() -> (Tensor[(6, 10, 13), float64],) {
  %702 = @func_2927() /* ty=Tensor[(6, 10, 13), float64] */;
  (%702,)
}

def @func_8987() -> Tensor[(6, 10, 13), float64] {
  @func_6272() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_4902() -> Tensor[(6, 10, 13), float32] {
  %703 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %703.0
}

def @func_11185(%var_11131: Tensor[(6, 10, 13), float32]) -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), bool], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %704 = @func_8590() /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %705 = @func_3777() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %706 = %705.2;
  %707 = cast(%var_11131, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
  %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%706, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %711 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %712 = %704.2;
  %713 = not_equal(%709, %710) /* ty=Tensor[(6, 10, 13), bool] */;
  %714 = @func_6166() /* ty=Tensor[(11, 5, 8), float32] */;
  %715 = %711.3;
  (%712, %713, %714, %715)
}

def @func_17026() -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) {
  %716 = @func_8298() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], int8, Tensor[(210), int8]) */;
  %717 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %718 = %716.0;
  %719 = %717.2;
  (%718, %719)
}

def @func_14760() -> Tensor[(6, 10, 13), float32] {
  @func_13558() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_14785() -> (Tensor[(110, 4), float32],) {
  %720 = @func_12077() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %721 = %720.1;
  (%721,)
}

def @func_13197() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32]) {
  %722 = @func_12384() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64]) */;
  %723 = @func_10986() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), uint8], Tensor[(6, 10, 13), float64]) */;
  %724 = %722.1;
  %725 = @func_2927() /* ty=Tensor[(6, 10, 13), float64] */;
  %726 = %723.0;
  (%724, %725, %726)
}

def @func_2827() -> (Tensor[(6, 10, 13), float64],) {
  %727 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %728 = %727.0;
  (%728,)
}

def @func_7700() -> (Tensor[(11, 5, 8), float32],) {
  %729 = @func_2490() /* ty=Tensor[(11, 5, 8), float32] */;
  (%729,)
}

def @func_6743() -> (Tensor[(6, 10, 13), float64],) {
  %730 = @func_6272() /* ty=Tensor[(6, 10, 13), float64] */;
  (%730,)
}

def @func_3516() -> Tensor[(440), float32] {
  %731 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %731.2
}

def @func_20353() -> (Tensor[(11, 5, 8), float64], Tensor[(440), float32]) {
  %732 = @func_6337() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float64]) */;
  %733 = @func_8695() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %734 = %732.2;
  %735 = %733.1;
  (%734, %735)
}

def @func_7855() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(8, 52), bool], Tensor[(440), float32], Tensor[(297), float64]) {
  %736 = @func_7165() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(8, 52), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %737 = %736.2;
  %738 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 52), float32] */, dtype="bool") /* ty=Tensor[(8, 52), bool] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(2), int32] */;
  %740 = cast(%737, dtype="bool") /* ty=Tensor[(8, 52), bool] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %742 = cast(meta[relay.Constant][27] /* ty=Tensor[(297), float64] */, dtype="float64") /* ty=Tensor[(297), float64] */;
  %743 = reshape(%742, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float64] */;
  %744 = @func_5480(%743) /* ty=(Tensor[(440), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(6, 10, 13), float32]) */;
  %745 = @func_7383() /* ty=Tensor[(11, 5, 8), float32] */;
  %746 = @func_5254() /* ty=Tensor[(440), float32] */;
  %747 = greater_equal(%740, %741) /* ty=Tensor[(8, 52), bool] */;
  %748 = %744.0;
  (%745, %746, %747, %748, meta[relay.Constant][27] /* ty=Tensor[(297), float64] */)
}

def @func_18764() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %749 = @func_11550() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64]) */;
  %750 = @func_2490() /* ty=Tensor[(11, 5, 8), float32] */;
  %751 = %749.0;
  (%750, %751)
}

def @func_16766() -> (Tensor[(440), uint8],) {
  %752 = @func_10986() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), uint8], Tensor[(6, 10, 13), float64]) */;
  %753 = %752.1;
  (%753,)
}

def @func_4992() -> Tensor[(6, 10, 13), float32] {
  %754 = @func_4038() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %754.0
}

def @func_8126() -> (Tensor[(11, 5, 8), float32],) {
  %755 = @func_4521() /* ty=Tensor[(11, 5, 8), float32] */;
  (%755,)
}

def @func_16278(%var_16267: Tensor[(1, 5, 8), float64], %var_16268: Tensor[(16, 5, 8), float64], %var_16275: Tensor[(252, 2), uint16]) -> (Tensor[(16, 5, 8), float64], Tensor[(288), float64], Tensor[(24, 2), float64], Tensor[(252, 2), uint16]) {
  %756 = cast(%var_16267, dtype="float64") /* ty=Tensor[(1, 5, 8), float64] */;
  %757 = cast(%var_16268, dtype="float64") /* ty=Tensor[(16, 5, 8), float64] */;
  %758 = cast(meta[relay.Constant][28] /* ty=Tensor[(24, 2), float64] */, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
  %759 = cast(%var_16275, dtype="uint16") /* ty=Tensor[(252, 2), uint16] */;
  %760 = reshape(%758, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %761 = reshape(%759, newshape=[504]) /* ty=Tensor[(504), uint16] */;
  %762 = @func_14931(%760, %761) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 6, 3), float64], Tensor[(48), float64], Tensor[(288), float64], Tensor[(6, 6, 14), uint16], Tensor[(504), uint16], Tensor[(6, 10, 13), float64]) */;
  %763 = floor_divide(%756, %757) /* ty=Tensor[(16, 5, 8), float64] */;
  %764 = %762.3;
  (%763, %764, meta[relay.Constant][28] /* ty=Tensor[(24, 2), float64] */, %var_16275)
}

def @func_11398(%var_11357: Tensor[(13, 121), float32], %var_11380: Tensor[(6, 10, 13), float64]) -> (Tensor[(11, 5, 8), float64], Tensor[(6, 10, 13), float64], Tensor[(13, 11, 11), uint16], Tensor[(13, 121), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 11, 11), uint16], Tensor[(6, 10, 13), bool]) {
  %765 = @func_7593() /* ty=(Tensor[(11, 5, 8), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %766 = @func_2207() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %767 = cast(%var_11357, dtype="float32") /* ty=Tensor[(13, 121), float32] */;
  %768 = reshape(%767, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %769 = @func_9614(%768) /* ty=(Tensor[(13, 11, 11), uint16], Tensor[(440), float32]) */;
  %770 = @func_4687() /* ty=(Tensor[(440), float32],) */;
  %771 = cast(%var_11357, dtype="float32") /* ty=Tensor[(13, 121), float32] */;
  %772 = reshape(%771, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %773 = @func_9614(%772) /* ty=(Tensor[(13, 11, 11), uint16], Tensor[(440), float32]) */;
  %774 = @func_5036() /* ty=Tensor[(6, 10, 13), float64] */;
  %775 = cast(%var_11380, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
  %776 = shape_of(%774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%774, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %779 = %765.0;
  %780 = %766.1;
  %781 = %769.0;
  %782 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
  %783 = %770.0;
  %784 = %773.0;
  %785 = logical_or(%777, %778) /* ty=Tensor[(6, 10, 13), bool] */;
  (%779, %780, %781, %var_11357, %782, %783, %784, %785)
}

def @func_12024() -> Tensor[(6, 10, 13), float32] {
  %786 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %786.3
}

def @main(%var_20479: Tensor[(1, 14, 12), float32]) -> Tensor[(1, 14, 12), float32] {
  %787 = cast(%var_20479, dtype="float32") /* ty=Tensor[(1, 14, 12), float32] */;
  log2(%787) /* ty=Tensor[(1, 14, 12), float32] */
}

def @func_11819() -> Tensor[(6, 10, 13), float32] {
  %788 = @func_3777() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %788.0
}

def @func_2207() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float64]) {
  %789 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %790 = @func_2128() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */;
  %791 = %789.3;
  %792 = %790.0;
  (%791, %792)
}

def @func_2692() -> Tensor[(11, 5, 8), float32] {
  %793 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %793.1
}

def @func_6545() -> Tensor[(440), float32] {
  @func_5254() /* ty=Tensor[(440), float32] */
}

def @func_17819() -> Tensor[(440), float32] {
  @func_6960() /* ty=Tensor[(440), float32] */
}

def @func_19267(%var_19261: Tensor[(12, 8, 6), float64], %var_19262: Tensor[(12, 8, 6), float64]) -> Tensor[(12, 8, 6), bool] {
  %794 = cast(%var_19262, dtype="bool") /* ty=Tensor[(12, 8, 6), bool] */;
  %795 = shape_of(%var_19261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %796 = cast(%var_19261, dtype="bool") /* ty=Tensor[(12, 8, 6), bool] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%796, %797) /* ty=Tensor[(12, 8, 6), bool] */
}

def @func_19441() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %798 = @func_10867() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %799 = %798.0;
  %800 = @func_9232() /* ty=Tensor[(11, 5, 8), float32] */;
  (%799, %800)
}

def @func_8705(%var_8699: Tensor[(15, 13, 6), float32], %var_8700: Tensor[(15, 13, 6), float32]) -> (Tensor[(15, 13, 6), float32],) {
  %801 = cast(%var_8700, dtype="float32") /* ty=Tensor[(15, 13, 6), float32] */;
  %802 = shape_of(%var_8699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%var_8699, dtype="float32") /* ty=Tensor[(15, 13, 6), float32] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %805 = divide(%803, %804) /* ty=Tensor[(15, 13, 6), float32] */;
  (%805,)
}

def @func_18491() -> Tensor[(6, 10, 13), float32] {
  %806 = @func_12424() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %806.1
}

def @func_2905(%var_2896: Tensor[(4, 1, 4), float32]) -> (Tensor[(4, 1, 4), float32], Tensor[(11, 5, 8), float32]) {
  %807 = cast(%var_2896, dtype="float32") /* ty=Tensor[(4, 1, 4), float32] */;
  %808 = asinh(%807) /* ty=Tensor[(4, 1, 4), float32] */;
  %809 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
  (%808, %809)
}

def @func_14517() -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64], Tensor[(11, 5, 8), float32]) {
  %810 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %811 = @func_2827() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %812 = cast(5.76805f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %813 = cast(meta[relay.Constant][29] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %814 = reshape(%812, newshape=[]) /* ty=float64 */;
  %815 = reshape(%813, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
  %816 = @func_4055(%814, %815) /* ty=(Tensor[(13, 13, 15), bool],) */;
  %817 = @func_10998() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %818 = @func_5036() /* ty=Tensor[(6, 10, 13), float64] */;
  %819 = %810.0;
  %820 = %811.0;
  %821 = %816.0;
  %822 = %817.0;
  (%818, %819, %820, %821, 5.76805f64 /* ty=float64 */, meta[relay.Constant][29] /* ty=Tensor[(2535), float64] */, %822)
}

def @func_11625() -> Tensor[(11, 5, 8), float32] {
  @func_7469() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_2490() -> Tensor[(11, 5, 8), float32] {
  %823 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %823.0
}

def @func_7469() -> Tensor[(11, 5, 8), float32] {
  %824 = @func_7271() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %824.2
}

def @func_12141() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %825 = @func_8737() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %826 = @func_11329() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32]) */;
  %827 = @func_3158() /* ty=Tensor[(11, 5, 8), float32] */;
  %828 = %825.0;
  %829 = %826.3;
  %830 = @func_9875() /* ty=Tensor[(11, 5, 8), float32] */;
  (%827, %828, %829, %830)
}

def @func_5133(%var_5131: Tensor[(416), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(26), float64], Tensor[(416), float64]) {
  %831 = @func_1639() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %832 = cast(meta[relay.Constant][30] /* ty=Tensor[(26), float64] */, dtype="float64") /* ty=Tensor[(26), float64] */;
  %833 = cast(%var_5131, dtype="float64") /* ty=Tensor[(416), float64] */;
  %834 = reshape(%832, newshape=[1, 13, 2]) /* ty=Tensor[(1, 13, 2), float64] */;
  %835 = reshape(%833, newshape=[16, 13, 2]) /* ty=Tensor[(16, 13, 2), float64] */;
  %836 = @func_3283(%834, %835) /* ty=(Tensor[(1, 13, 2), float32], Tensor[(16, 13, 2), float64]) */;
  %837 = %831.2;
  %838 = %836.1;
  (%837, %838, meta[relay.Constant][30] /* ty=Tensor[(26), float64] */, %var_5131)
}

def @func_16834() -> (Tensor[(11, 5, 8), float32],) {
  %839 = @func_15454() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32]) */;
  %840 = %839.3;
  (%840,)
}

def @func_10077() -> Tensor[(11, 5, 8), float32] {
  @func_6827() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_13558() -> Tensor[(6, 10, 13), float32] {
  %841 = @func_9318() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %841.0
}

def @func_5925() -> (Tensor[(11, 5, 8), float32],) {
  %842 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
  (%842,)
}

def @func_10998() -> (Tensor[(11, 5, 8), float32],) {
  %843 = @func_2692() /* ty=Tensor[(11, 5, 8), float32] */;
  (%843,)
}

def @func_1662() -> Tensor[(6, 10, 13), float32] {
  %844 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %844.0
}

def @func_11789() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %845 = @func_10018() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %846 = @func_7700() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %847 = @func_7271() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %848 = @func_4902() /* ty=Tensor[(6, 10, 13), float32] */;
  %849 = %845.0;
  %850 = %846.0;
  %851 = %847.4;
  (%848, %849, %850, %851)
}

def @func_4521() -> Tensor[(11, 5, 8), float32] {
  @func_2250() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_17471() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %852 = @func_11550() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64]) */;
  %853 = @func_9664() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %854 = %852.0;
  %855 = %853.0;
  (%854, %855)
}

def @func_17315() -> (Tensor[(6, 10, 13), float64], Tensor[(4, 9, 12), bool], Tensor[(432), float64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) {
  %856 = @func_14858() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %857 = cast(meta[relay.Constant][31] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %858 = cast(meta[relay.Constant][31] /* ty=Tensor[(432), float64] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %859 = reshape(%857, newshape=[4, 9, 12]) /* ty=Tensor[(4, 9, 12), float64] */;
  %860 = reshape(%858, newshape=[4, 9, 12]) /* ty=Tensor[(4, 9, 12), float32] */;
  %861 = @func_9176(%859, %860) /* ty=(Tensor[(4, 9, 12), int16], Tensor[(11, 5, 8), float32], Tensor[(4, 9, 12), float64], Tensor[(4, 9, 12), bool]) */;
  %862 = @func_12226() /* ty=(Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(15, 7, 8), int64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) */;
  %863 = @func_16678() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %864 = %856.1;
  %865 = %861.3;
  %866 = %862.3;
  %867 = %863.0;
  (%864, %865, meta[relay.Constant][31] /* ty=Tensor[(432), float64] */, %866, %867)
}

def @func_9795() -> (Tensor[(11, 5, 8), float32],) {
  %868 = @func_7593() /* ty=(Tensor[(11, 5, 8), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %869 = %868.3;
  (%869,)
}

def @func_1818() -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) {
  %870 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %871 = cast(meta[relay.Constant][32] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %872 = reshape(%871, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %873 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %874 = %870.0;
  %875 = @func_890(%872) /* ty=Tensor[(11, 5, 8), float32] */;
  %876 = %873.0;
  %877 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  (%874, %875, meta[relay.Constant][32] /* ty=Tensor[(440), float32] */, %876, %877)
}

def @func_20163() -> (Tensor[(11, 5, 8), float32],) {
  %878 = @func_12982() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %879 = %878.0;
  (%879,)
}

def @func_17652() -> Tensor[(11, 5, 8), float32] {
  @func_2692() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_17434() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(24, 26), float64]) {
  %880 = cast(meta[relay.Constant][33] /* ty=Tensor[(24, 26), float64] */, dtype="float64") /* ty=Tensor[(24, 26), float64] */;
  %881 = reshape(%880, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %882 = @func_6004(%881) /* ty=(Tensor[(8, 13, 6), float64], Tensor[(440), float32]) */;
  %883 = @func_6166() /* ty=Tensor[(11, 5, 8), float32] */;
  %884 = %882.1;
  (%883, %884, meta[relay.Constant][33] /* ty=Tensor[(24, 26), float64] */)
}

def @func_6647(%var_6639: Tensor[(16, 1, 3), float64], %var_6640: Tensor[(16, 6, 3), float64]) -> Tensor[(16, 6, 3), float64] {
  %885 = cast(%var_6639, dtype="float64") /* ty=Tensor[(16, 1, 3), float64] */;
  %886 = cast(%var_6640, dtype="float64") /* ty=Tensor[(16, 6, 3), float64] */;
  mod(%885, %886) /* ty=Tensor[(16, 6, 3), float64] */
}

def @func_7271() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %887 = @func_4592() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %888 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %889 = @func_3309() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %890 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %891 = %887.1;
  %892 = @func_6545() /* ty=Tensor[(440), float32] */;
  %893 = %888.0;
  %894 = %889.0;
  %895 = %890.2;
  (%891, %892, %893, %894, %895)
}

def @func_16149() -> Tensor[(110, 4), float32] {
  %896 = @func_12321() /* ty=(Tensor[(110, 4), float32],) */;
  %896.0
}

def @func_12077() -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) {
  %897 = @func_8957() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %898 = %897.0;
  %899 = @func_5487() /* ty=Tensor[(110, 4), float32] */;
  (%898, %899)
}

def @func_18697(%var_18690: float64, %var_18691: Tensor[(2535), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64]) {
  %900 = @func_12982() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %901 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %902 = @func_8695() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %903 = cast(%var_18690, dtype="float64") /* ty=float64 */;
  %904 = cast(%var_18691, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %905 = reshape(%903, newshape=[]) /* ty=float64 */;
  %906 = reshape(%904, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
  %907 = @func_4055(%905, %906) /* ty=(Tensor[(13, 13, 15), bool],) */;
  %908 = %900.0;
  %909 = %901.0;
  %910 = %902.2;
  %911 = %907.0;
  (%908, %909, %910, %911, %var_18690, %var_18691)
}

def @func_19664(%var_19598: Tensor[(65), float64]) -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(65), float64], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
  %912 = cast(%var_19598, dtype="float64") /* ty=Tensor[(65), float64] */;
  %913 = reshape(%912, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), float64] */;
  %914 = @func_6794(%913) /* ty=(Tensor[(5, 1, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %915 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %916 = @func_13502() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %917 = @func_12045() /* ty=Tensor[(6, 10, 13), float32] */;
  %918 = %914.2;
  %919 = %915.0;
  %920 = %916.0;
  (%917, %918, %var_19598, %919, %920)
}

def @func_6337() -> (Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float64]) {
  %921 = @func_2827() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %922 = %921.0;
  %923 = cast(%922, dtype="float32") /* ty=Tensor[(6, 10, 13), float32] */;
  %924 = @func_4151() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) */;
  %925 = %924.0;
  %926 = @func_6166() /* ty=Tensor[(11, 5, 8), float32] */;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
  %928 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%925, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %931 = sin(%923) /* ty=Tensor[(6, 10, 13), float32] */;
  %932 = @func_5254() /* ty=Tensor[(440), float32] */;
  %933 = power(%929, %930) /* ty=Tensor[(11, 5, 8), float64] */;
  (%931, %932, %933)
}

def @func_14216() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %934 = @func_12932() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %935 = @func_3597() /* ty=Tensor[(11, 5, 8), float32] */;
  %936 = %934.0;
  (%935, %936)
}

def @func_12982() -> (Tensor[(11, 5, 8), float32],) {
  %937 = @func_9740() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %938 = %937.1;
  (%938,)
}

def @func_19575() -> (Tensor[(6, 10, 13), float64],) {
  %939 = @func_6272() /* ty=Tensor[(6, 10, 13), float64] */;
  (%939,)
}

def @func_9875() -> Tensor[(11, 5, 8), float32] {
  @func_2490() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_18856() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) {
  %940 = @func_2619() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %941 = %940.4;
  %942 = @func_14984() /* ty=Tensor[(6, 10, 13), float64] */;
  (%941, %942)
}

def @func_6524(%var_6495: Tensor[(273), int64]) -> (Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 7, 3), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %943 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %944 = @func_5925() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %945 = cast(%var_6495, dtype="int64") /* ty=Tensor[(273), int64] */;
  %946 = reshape(%945, newshape=[273]) /* ty=Tensor[(273), int64] */;
  %947 = @func_4932(%946) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(13, 7, 3), float32], Tensor[(273), int64]) */;
  %948 = %947.1;
  %949 = cast(%948, dtype="float64") /* ty=Tensor[(13, 7, 3), float64] */;
  %950 = @func_6434() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %951 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %952 = %943.0;
  %953 = %944.0;
  %954 = @func_6272() /* ty=Tensor[(6, 10, 13), float64] */;
  %955 = tan(%949) /* ty=Tensor[(13, 7, 3), float64] */;
  %956 = %950.0;
  %957 = %951.1;
  (%952, %var_6495, %953, %954, %955, %956, %957)
}

def @func_5189() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %958 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %959 = @func_4592() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %960 = %958.0;
  %961 = %959.1;
  (%960, %961)
}

def @func_12932() -> (Tensor[(6, 10, 13), float32],) {
  %962 = @func_4038() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %963 = %962.0;
  (%963,)
}

def @func_17931() -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(24, 26), float64]) {
  %964 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %965 = @func_12226() /* ty=(Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(15, 7, 8), int64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) */;
  %966 = @func_17434() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(24, 26), float64]) */;
  %967 = %966.2;
  %968 = cast(%967, dtype="float64") /* ty=Tensor[(24, 26), float64] */;
  %969 = %964.0;
  %970 = %965.0;
  %971 = atan(%968) /* ty=Tensor[(24, 26), float64] */;
  (%969, %970, %971)
}

def @func_5970(%var_5956: Tensor[(273), int64]) -> (Tensor[(440), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(273), int64]) {
  %972 = @func_5540() /* ty=(Tensor[(440), float32],) */;
  %973 = @func_4687() /* ty=(Tensor[(440), float32],) */;
  %974 = cast(%var_5956, dtype="int64") /* ty=Tensor[(273), int64] */;
  %975 = reshape(%974, newshape=[273]) /* ty=Tensor[(273), int64] */;
  %976 = @func_4932(%975) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(13, 7, 3), float32], Tensor[(273), int64]) */;
  %977 = %972.0;
  %978 = %973.0;
  %979 = %976.1;
  (%977, %978, %979, %var_5956)
}

def @func_16815() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) {
  %980 = @func_11893() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %981 = @func_14858() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %982 = %980.1;
  %983 = %981.1;
  (%982, %983)
}

def @func_20475(%var_20458: Tensor[(12, 70), int64]) -> (Tensor[(12, 70), bool], Tensor[(11, 5, 8), float32]) {
  %984 = @func_18389() /* ty=(Tensor[(12, 70), int64], Tensor[(6, 10, 13), float64]) */;
  %985 = %984.0;
  %986 = cast(%var_20458, dtype="bool") /* ty=Tensor[(12, 70), bool] */;
  %987 = shape_of(%985, dtype="int32") /* ty=Tensor[(2), int32] */;
  %988 = cast(%985, dtype="bool") /* ty=Tensor[(12, 70), bool] */;
  %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %990 = @func_15287() /* ty=(Tensor[(9, 7, 9), float64], Tensor[(11, 5, 8), float32]) */;
  %991 = less_equal(%988, %989) /* ty=Tensor[(12, 70), bool] */;
  %992 = %990.1;
  (%991, %992)
}

def @func_3809() -> (Tensor[(440), float32],) {
  %993 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %994 = %993.2;
  (%994,)
}

def @func_14044() -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(26), float64], Tensor[(416), float64], Tensor[(6, 10, 13), float32]) {
  %995 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %996 = cast(meta[relay.Constant][34] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %997 = reshape(%996, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %998 = @func_5133(%997) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(26), float64], Tensor[(416), float64]) */;
  %999 = @func_12932() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %1000 = @func_10039() /* ty=Tensor[(6, 10, 13), float64] */;
  %1001 = %995.0;
  %1002 = %998.2;
  %1003 = %999.0;
  (%1000, %1001, %1002, meta[relay.Constant][34] /* ty=Tensor[(416), float64] */, %1003)
}

def @func_6727() -> (Tensor[(11, 5, 8), float32],) {
  %1004 = @func_1639() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %1005 = %1004.1;
  (%1005,)
}

def @func_8957() -> (Tensor[(11, 5, 8), float32],) {
  %1006 = @func_4783() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1007 = %1006.0;
  (%1007,)
}

def @func_3839(%var_3833: Tensor[(15, 7, 8), int64]) -> Tensor[(15, 7, 8), int64] {
  %1008 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 7, 8), int64] */, dtype="int64") /* ty=Tensor[(15, 7, 8), int64] */;
  %1009 = shape_of(%var_3833, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1010 = cast(%var_3833, dtype="int64") /* ty=Tensor[(15, 7, 8), int64] */;
  %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%1010, %1011) /* ty=Tensor[(15, 7, 8), int64] */
}

def @func_5480(%var_5367: Tensor[(11, 9, 3), float64]) -> (Tensor[(440), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(6, 10, 13), float32]) {
  %1012 = cast(meta[relay.Constant][36] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %1013 = reshape(%1012, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %1014 = @func_3246(%1013) /* ty=(Tensor[(11, 5, 8), float64], Tensor[(440), float32]) */;
  %1015 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1016 = cast(%var_5367, dtype="float64") /* ty=Tensor[(11, 9, 3), float64] */;
  %1017 = asinh(%1016) /* ty=Tensor[(11, 9, 3), float64] */;
  %1018 = cast(%1017, dtype="float64") /* ty=Tensor[(11, 9, 3), float64] */;
  %1019 = tan(%1018) /* ty=Tensor[(11, 9, 3), float64] */;
  %1020 = cast(%1019, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
  %1021 = shape_of(%1017, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1022 = cast(%1017, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1024 = @func_4977() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */;
  %1025 = %1014.1;
  %1026 = %1015.0;
  %1027 = floor_divide(%1022, %1023) /* ty=Tensor[(11, 9, 3), float32] */;
  %1028 = %1024.0;
  (%1025, meta[relay.Constant][36] /* ty=Tensor[(440), float32] */, %1026, %1027, %1028)
}

def @func_13925() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) {
  %1029 = @func_12833() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %1030 = %1029.0;
  %1031 = @func_11925() /* ty=Tensor[(6, 10, 13), float32] */;
  (%1030, %1031)
}

def @func_9318() -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %1032 = @func_4038() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %1033 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1034 = %1032.0;
  %1035 = @func_6272() /* ty=Tensor[(6, 10, 13), float64] */;
  %1036 = @func_3516() /* ty=Tensor[(440), float32] */;
  %1037 = %1033.0;
  (%1034, %1035, %1036, %1037)
}

def @func_18900(%var_18867: float64, %var_18868: Tensor[(1, 6, 8), float64]) -> (Tensor[(1, 6, 8), float64], Tensor[(1, 6, 8), float32], Tensor[(6, 10, 13), float32]) {
  %1038 = cast(%var_18867, dtype="float64") /* ty=float64 */;
  %1039 = cast(%var_18868, dtype="float64") /* ty=Tensor[(1, 6, 8), float64] */;
  %1040 = cast(%var_18868, dtype="float32") /* ty=Tensor[(1, 6, 8), float32] */;
  %1041 = cast(%var_18867, dtype="float32") /* ty=float32 */;
  %1042 = @func_7352() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32]) */;
  %1043 = minimum(%1038, %1039) /* ty=Tensor[(1, 6, 8), float64] */;
  %1044 = floor_divide(%1040, %1041) /* ty=Tensor[(1, 6, 8), float32] */;
  %1045 = %1042.0;
  (%1043, %1044, %1045)
}

def @func_10039() -> Tensor[(6, 10, 13), float64] {
  @func_2927() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_8815() -> (Tensor[(11, 5, 8), float32],) {
  %1046 = @func_6166() /* ty=Tensor[(11, 5, 8), float32] */;
  (%1046,)
}

def @func_3597() -> Tensor[(11, 5, 8), float32] {
  %1047 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %1047.0
}

def @func_10018() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %1048 = @func_2619() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1049 = @func_7165() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(8, 52), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1050 = %1048.4;
  %1051 = %1049.0;
  (%1050, %1051)
}

def @func_19152() -> (Tensor[(11, 5, 8), float32], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64], Tensor[(10, 5, 8), uint64], Tensor[(40, 10), uint64]) {
  %1052 = cast(8.47462f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1053 = cast(meta[relay.Constant][37] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %1054 = reshape(%1052, newshape=[]) /* ty=float64 */;
  %1055 = reshape(%1053, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
  %1056 = @func_4055(%1054, %1055) /* ty=(Tensor[(13, 13, 15), bool],) */;
  %1057 = cast(meta[relay.Constant][38] /* ty=Tensor[(40, 10), uint64] */, dtype="uint64") /* ty=Tensor[(40, 10), uint64] */;
  %1058 = cast(meta[relay.Constant][38] /* ty=Tensor[(40, 10), uint64] */, dtype="uint64") /* ty=Tensor[(40, 10), uint64] */;
  %1059 = reshape(%1057, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint64] */;
  %1060 = reshape(%1058, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint64] */;
  %1061 = @func_10654(%1059, %1060) /* ty=(Tensor[(10, 5, 8), uint64],) */;
  %1062 = @func_9956() /* ty=Tensor[(11, 5, 8), float32] */;
  %1063 = %1056.0;
  %1064 = %1061.0;
  (%1062, %1063, 8.47462f64 /* ty=float64 */, meta[relay.Constant][37] /* ty=Tensor[(2535), float64] */, %1064, meta[relay.Constant][38] /* ty=Tensor[(40, 10), uint64] */)
}

def @func_14590(%var_14587: Tensor[(338, 1), float64], %var_14588: Tensor[(840), int64]) -> (Tensor[(11, 5, 8), float32], Tensor[(2, 13, 13), float64], Tensor[(338, 1), float64], Tensor[(840), int64]) {
  %1065 = cast(%var_14587, dtype="float64") /* ty=Tensor[(338, 1), float64] */;
  %1066 = cast(%var_14588, dtype="int64") /* ty=Tensor[(840), int64] */;
  %1067 = reshape(%1065, newshape=[2, 13, 13]) /* ty=Tensor[(2, 13, 13), float64] */;
  %1068 = reshape(%1066, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %1069 = @func_4473(%1067, %1068) /* ty=(Tensor[(2, 13, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(15, 7, 8), int64], Tensor[(840), int64]) */;
  %1070 = @func_9232() /* ty=Tensor[(11, 5, 8), float32] */;
  %1071 = %1069.0;
  (%1070, %1071, %var_14587, %var_14588)
}

def @func_13529() -> (Tensor[(?, 16, 10), int8],) {
  %1072 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 10), float32] */;
  %1073 = sigmoid(%1072) /* ty=Tensor[(1, 16, 10), float32] */;
  %1074 = cast(%1073, dtype="int8") /* ty=Tensor[(1, 16, 10), int8] */;
  %1075 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(1, 16, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1076 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 16, 10), float32] */, dtype="int8") /* ty=Tensor[(1, 16, 10), int8] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1078 = left_shift(%1076, %1077) /* ty=Tensor[(?, 16, 10), int8] */;
  (%1078,)
}

def @func_20328() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) {
  %1079 = @func_2619() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1080 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1081 = @func_17485() /* ty=Tensor[(11, 5, 8), float32] */;
  %1082 = %1079.0;
  %1083 = %1080.2;
  (%1081, %1082, %1083)
}

def @func_5851(%var_5826: Tensor[(273), int64]) -> (Tensor[(440), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32], Tensor[(273), uint32], Tensor[(11, 5, 8), float32]) {
  %1084 = @func_5540() /* ty=(Tensor[(440), float32],) */;
  %1085 = @func_2128() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */;
  %1086 = cast(meta[relay.Constant][40] /* ty=Tensor[(273), int64] */, dtype="int64") /* ty=Tensor[(273), int64] */;
  %1087 = reshape(%1086, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), int64] */;
  %1088 = @func_1948(%1087) /* ty=(Tensor[(13, 7, 3), int8], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(6, 10, 13), float32]) */;
  %1089 = cast(%var_5826, dtype="uint32") /* ty=Tensor[(273), uint32] */;
  %1090 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(273), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1091 = cast(meta[relay.Constant][40] /* ty=Tensor[(273), int64] */, dtype="uint32") /* ty=Tensor[(273), uint32] */;
  %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %1093 = %1084.0;
  %1094 = %1085.0;
  %1095 = %1088.4;
  %1096 = multiply(%1091, %1092) /* ty=Tensor[(273), uint32] */;
  %1097 = @func_4521() /* ty=Tensor[(11, 5, 8), float32] */;
  (%1093, %1094, %1095, %1096, %1097)
}

def @func_8049() -> (Tensor[(110, 4), bool], Tensor[(110, 4), float64]) {
  %1098 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %1099 = %1098.1;
  %1100 = cast(%1099, dtype="float32") /* ty=Tensor[(110, 4), float32] */;
  %1101 = sin(%1100) /* ty=Tensor[(110, 4), float32] */;
  %1102 = cast(%1101, dtype="float32") /* ty=Tensor[(110, 4), float32] */;
  %1103 = sinh(%1102) /* ty=Tensor[(110, 4), float32] */;
  %1104 = cast(meta[relay.Constant][41] /* ty=Tensor[(110, 4), float32] */, dtype="bool") /* ty=Tensor[(110, 4), bool] */;
  %1105 = shape_of(%1103, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1106 = cast(%1103, dtype="bool") /* ty=Tensor[(110, 4), bool] */;
  %1107 = dyn.reshape(%1104, %1105, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1108 = cast(%1101, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %1109 = less_equal(%1106, %1107) /* ty=Tensor[(110, 4), bool] */;
  %1110 = log2(%1108) /* ty=Tensor[(110, 4), float64] */;
  (%1109, %1110)
}

def @func_1559() -> (Tensor[(6, 10, 13), float64],) {
  %1111 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %1112 = %1111.0;
  %1113 = cast(%1112, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
  %1114 = tan(%1113) /* ty=Tensor[(6, 10, 13), float64] */;
  (%1114,)
}

def @func_6827() -> Tensor[(11, 5, 8), float32] {
  %1115 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1115.0
}

def @func_5487() -> Tensor[(110, 4), float32] {
  %1116 = @func_4977() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */;
  %1116.1
}

def @func_11599() -> Tensor[(440), float32] {
  @func_5254() /* ty=Tensor[(440), float32] */
}

def @func_11550() -> (Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64]) {
  %1117 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %1118 = @func_8695() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %1119 = %1117.1;
  %1120 = %1118.0;
  (%1119, %1120)
}

def @func_13857() -> (Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(297), float64]) {
  %1121 = @func_9805() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1122 = @func_9563() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64], Tensor[(11, 5, 8), float64]) */;
  %1123 = cast(meta[relay.Constant][42] /* ty=Tensor[(297), float64] */, dtype="float64") /* ty=Tensor[(297), float64] */;
  %1124 = reshape(%1123, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float64] */;
  %1125 = @func_5480(%1124) /* ty=(Tensor[(440), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(6, 10, 13), float32]) */;
  %1126 = %1121.0;
  %1127 = %1122.1;
  %1128 = %1125.1;
  (%1126, %1127, %1128, meta[relay.Constant][42] /* ty=Tensor[(297), float64] */)
}

def @func_14558(%var_14523: Tensor[(14, 5, 4), float32], %var_14524: Tensor[(14, 5, 4), float32]) -> Tensor[(14, 5, 4), float32] {
  %1129 = cast(%var_14524, dtype="float32") /* ty=Tensor[(14, 5, 4), float32] */;
  %1130 = shape_of(%var_14523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1131 = cast(%var_14523, dtype="float32") /* ty=Tensor[(14, 5, 4), float32] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%1131, %1132) /* ty=Tensor[(14, 5, 4), float32] */
}

def @func_12518() -> (Tensor[(6, 10, 13), float64], Tensor[(39, 7), int64], Tensor[(273, 1), int64]) {
  %1133 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %1134 = %1133.0;
  %1135 = cast(%1134, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
  %1136 = cast(meta[relay.Constant][43] /* ty=Tensor[(273, 1), int64] */, dtype="int64") /* ty=Tensor[(273, 1), int64] */;
  %1137 = reshape(%1136, newshape=[39, 7]) /* ty=Tensor[(39, 7), int64] */;
  %1138 = @func_2023(%1137) /* ty=(Tensor[(11, 5, 8), int64], Tensor[(440), float32], Tensor[(39, 7), int64]) */;
  %1139 = asin(%1135) /* ty=Tensor[(6, 10, 13), float64] */;
  %1140 = %1138.2;
  (%1139, %1140, meta[relay.Constant][43] /* ty=Tensor[(273, 1), int64] */)
}

def @func_13611() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(440), float32]) {
  %1141 = @func_11893() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1142 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1143 = @func_11702() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %1144 = @func_2433() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %1145 = %1141.1;
  %1146 = %1142.1;
  %1147 = %1143.1;
  %1148 = %1144.0;
  (%1145, %1146, %1147, %1148)
}

def @func_18389() -> (Tensor[(12, 70), int64], Tensor[(6, 10, 13), float64]) {
  %1149 = @func_12226() /* ty=(Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(15, 7, 8), int64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) */;
  %1150 = @func_10555() /* ty=(Tensor[(9, 7, 9), bool], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(624), float64]) */;
  %1151 = %1149.3;
  %1152 = %1150.1;
  (%1151, %1152)
}

def @func_5774() -> Tensor[(11, 5, 8), float32] {
  @func_3597() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_19214() -> (Tensor[(440), float32],) {
  %1153 = @func_17819() /* ty=Tensor[(440), float32] */;
  (%1153,)
}

def @func_4055(%var_4049: float64, %var_4050: Tensor[(13, 13, 15), float64]) -> (Tensor[(13, 13, 15), bool],) {
  %1154 = cast(%var_4049, dtype="bool") /* ty=bool */;
  %1155 = cast(%var_4050, dtype="bool") /* ty=Tensor[(13, 13, 15), bool] */;
  %1156 = less_equal(%1154, %1155) /* ty=Tensor[(13, 13, 15), bool] */;
  (%1156,)
}

def @func_10986() -> (Tensor[(11, 5, 8), float32], Tensor[(440), uint8], Tensor[(6, 10, 13), float64]) {
  %1157 = @func_10339() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(440), uint8]) */;
  %1158 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %1159 = @func_3158() /* ty=Tensor[(11, 5, 8), float32] */;
  %1160 = %1157.1;
  %1161 = %1158.0;
  (%1159, %1160, %1161)
}

def @func_15031() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32]) {
  %1162 = @func_5289() /* ty=(Tensor[(440), float32],) */;
  %1163 = @func_7469() /* ty=Tensor[(11, 5, 8), float32] */;
  %1164 = %1162.0;
  (%1163, %1164)
}

def @func_16931() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %1165 = @func_15031() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32]) */;
  %1166 = @func_5289() /* ty=(Tensor[(440), float32],) */;
  %1167 = %1165.0;
  %1168 = %1166.0;
  %1169 = @func_11625() /* ty=Tensor[(11, 5, 8), float32] */;
  (%1167, %1168, %1169)
}

def @func_14390(%var_14382: Tensor[(252, 2), uint16]) -> (Tensor[(110, 4), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 6, 14), uint16], Tensor[(252, 2), uint16]) {
  %1170 = @func_11842() /* ty=(Tensor[(110, 4), float32],) */;
  %1171 = @func_9740() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1172 = cast(%var_14382, dtype="uint16") /* ty=Tensor[(252, 2), uint16] */;
  %1173 = reshape(%1172, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), uint16] */;
  %1174 = %1170.0;
  %1175 = %1171.1;
  %1176 = @func_5604(%1173) /* ty=Tensor[(6, 6, 14), uint16] */;
  (%1174, %1175, %1176, %var_14382)
}

def @func_19094() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(16), float32]) {
  %1177 = @func_11893() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1178 = cast(meta[relay.Constant][44] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %1179 = reshape(%1178, newshape=[4, 1, 4]) /* ty=Tensor[(4, 1, 4), float32] */;
  %1180 = @func_2905(%1179) /* ty=(Tensor[(4, 1, 4), float32], Tensor[(11, 5, 8), float32]) */;
  %1181 = %1177.0;
  %1182 = %1180.1;
  (%1181, %1182, meta[relay.Constant][44] /* ty=Tensor[(16), float32] */)
}

def @func_15887() -> Tensor[(6, 10, 13), float64] {
  %1183 = @func_2128() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */;
  %1183.0
}

def @func_19303() -> (Tensor[(11, 5, 8), float32],) {
  %1184 = @func_9740() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1185 = %1184.0;
  (%1185,)
}

def @func_3309() -> (Tensor[(11, 5, 8), float32],) {
  %1186 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  (%1186,)
}

def @func_10253(%var_10211: Tensor[(16, 26), float64], %var_10248: Tensor[(16, 26), float64]) -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(26), float32], Tensor[(11, 5, 8), float32], Tensor[(?, 13, 2), uint32], Tensor[(16, 26), uint8]) {
  %1187 = @func_4151() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) */;
  %1188 = @func_9664() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %1189 = cast(meta[relay.Constant][45] /* ty=Tensor[(26), float64] */, dtype="float64") /* ty=Tensor[(26), float64] */;
  %1190 = cast(%var_10211, dtype="float64") /* ty=Tensor[(16, 26), float64] */;
  %1191 = reshape(%1189, newshape=[1, 13, 2]) /* ty=Tensor[(1, 13, 2), float64] */;
  %1192 = reshape(%1190, newshape=[16, 13, 2]) /* ty=Tensor[(16, 13, 2), float64] */;
  %1193 = @func_3283(%1191, %1192) /* ty=(Tensor[(1, 13, 2), float32], Tensor[(16, 13, 2), float64]) */;
  %1194 = %1193.0;
  %1195 = cast(%1194, dtype="float32") /* ty=Tensor[(1, 13, 2), float32] */;
  %1196 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(26), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1197 = cast(meta[relay.Constant][45] /* ty=Tensor[(26), float64] */, dtype="float32") /* ty=Tensor[(26), float32] */;
  %1198 = dyn.reshape(%1195, %1196, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1199 = @func_7855() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(8, 52), bool], Tensor[(440), float32], Tensor[(297), float64]) */;
  %1200 = cast(meta[relay.Constant][45] /* ty=Tensor[(26), float64] */, dtype="uint32") /* ty=Tensor[(26), uint32] */;
  %1201 = shape_of(%1194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1202 = cast(%1194, dtype="uint32") /* ty=Tensor[(1, 13, 2), uint32] */;
  %1203 = dyn.reshape(%1200, %1201, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1204 = cast(%var_10248, dtype="uint8") /* ty=Tensor[(16, 26), uint8] */;
  %1205 = shape_of(%var_10211, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1206 = cast(%var_10211, dtype="uint8") /* ty=Tensor[(16, 26), uint8] */;
  %1207 = dyn.reshape(%1204, %1205, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1208 = @func_6960() /* ty=Tensor[(440), float32] */;
  %1209 = %1187.0;
  %1210 = %1188.0;
  %1211 = mod(%1197, %1198) /* ty=Tensor[(26), float32] */;
  %1212 = %1199.0;
  %1213 = bitwise_xor(%1202, %1203) /* ty=Tensor[(?, 13, 2), uint32] */;
  %1214 = logical_xor(%1206, %1207) /* ty=Tensor[(16, 26), uint8] */;
  (%1208, %1209, %1210, %1211, %1212, %1213, %1214)
}

def @func_3246(%var_3226: Tensor[(11, 5, 8), float32]) -> (Tensor[(11, 5, 8), float64], Tensor[(440), float32]) {
  %1215 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
  %1216 = cast(%var_3226, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
  %1217 = shape_of(%1215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1218 = cast(%1215, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
  %1219 = dyn.reshape(%1216, %1217, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1220 = @func_2207() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %1221 = floor_mod(%1218, %1219) /* ty=Tensor[(11, 5, 8), float64] */;
  %1222 = %1220.0;
  (%1221, %1222)
}

def @func_13398() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(1050), float64], Tensor[(11, 5, 8), float32]) {
  %1223 = cast(meta[relay.Constant][46] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1224 = reshape(%1223, newshape=[10, 15, 7]) /* ty=Tensor[(10, 15, 7), float64] */;
  %1225 = @func_13260(%1224) /* ty=(Tensor[(10, 15, 7), bool], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %1226 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1227 = @func_6545() /* ty=Tensor[(440), float32] */;
  %1228 = %1225.2;
  %1229 = %1226.1;
  (%1227, %1228, meta[relay.Constant][46] /* ty=Tensor[(1050), float64] */, %1229)
}

def @func_12258() -> (Tensor[(6, 10, 13), float32],) {
  %1230 = @func_4902() /* ty=Tensor[(6, 10, 13), float32] */;
  (%1230,)
}

def @func_8233() -> Tensor[(110, 4), float32] {
  %1231 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %1231.2
}

def @func_7220() -> Tensor[(440), float32] {
  %1232 = @func_3809() /* ty=(Tensor[(440), float32],) */;
  %1232.0
}

def @func_7165() -> (Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(8, 52), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) {
  %1233 = @func_5342() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %1234 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 52), float64] */, dtype="float64") /* ty=Tensor[(8, 52), float64] */;
  %1235 = reshape(%1234, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %1236 = @func_5133(%1235) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(26), float64], Tensor[(416), float64]) */;
  %1237 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 52), float64] */, dtype="float32") /* ty=Tensor[(8, 52), float32] */;
  %1238 = asin(%1237) /* ty=Tensor[(8, 52), float32] */;
  %1239 = cast(%1238, dtype="float32") /* ty=Tensor[(8, 52), float32] */;
  %1240 = @func_4977() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */;
  %1241 = @func_4977() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */;
  %1242 = %1233.1;
  %1243 = %1236.1;
  %1244 = acos(%1239) /* ty=Tensor[(8, 52), float32] */;
  %1245 = %1240.0;
  %1246 = %1241.0;
  (%1242, %1243, %1244, %1245, %1246)
}

def @func_15199() -> (Tensor[(6, 10, 13), float32],) {
  %1247 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1248 = %1247.1;
  (%1248,)
}

def @func_3503() -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
  %1249 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %1250 = @func_2128() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */;
  %1251 = @func_2433() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %1252 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
  %1253 = %1249.2;
  %1254 = %1250.1;
  %1255 = %1251.1;
  %1256 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
  (%1252, %1253, %1254, %1255, %1256)
}

def @func_15182() -> Tensor[(11, 5, 8), float32] {
  %1257 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1257.0
}

def @func_17093() -> Tensor[(440), float32] {
  %1258 = @func_7271() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %1258.1
}

def @func_6960() -> Tensor[(440), float32] {
  @func_5254() /* ty=Tensor[(440), float32] */
}

def @func_8695() -> (Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %1259 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %1260 = @func_3809() /* ty=(Tensor[(440), float32],) */;
  %1261 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1262 = sin(%1259) /* ty=Tensor[(2, 3, 6), float64] */;
  %1263 = %1260.0;
  %1264 = %1261.0;
  (%1262, %1263, %1264)
}

def @func_7383() -> Tensor[(11, 5, 8), float32] {
  %1265 = @func_3309() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1265.0
}

def @func_12045() -> Tensor[(6, 10, 13), float32] {
  %1266 = @func_2433() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %1266.1
}

def @func_3831() -> (Tensor[(11, 5, 8), float32],) {
  %1267 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  (%1267,)
}

def @func_12886(%var_12862: Tensor[(110, 4), float32]) -> Tensor[(110, 4), int64] {
  %1268 = @func_4977() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */;
  %1269 = %1268.1;
  %1270 = cast(%var_12862, dtype="int64") /* ty=Tensor[(110, 4), int64] */;
  %1271 = shape_of(%1269, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1272 = cast(%1269, dtype="int64") /* ty=Tensor[(110, 4), int64] */;
  %1273 = dyn.reshape(%1270, %1271, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  bitwise_xor(%1272, %1273) /* ty=Tensor[(110, 4), int64] */
}

def @func_12384() -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64]) {
  %1274 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %1275 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %1276 = %1274.0;
  %1277 = %1275.0;
  (%1276, %1277)
}

def @func_5604(%var_5581: Tensor[(6, 6, 14), uint16]) -> Tensor[(6, 6, 14), uint16] {
  %1278 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 6, 14), uint16] */, dtype="uint16") /* ty=Tensor[(1, 6, 14), uint16] */;
  %1279 = cast(%var_5581, dtype="uint16") /* ty=Tensor[(6, 6, 14), uint16] */;
  multiply(%1278, %1279) /* ty=Tensor[(6, 6, 14), uint16] */
}

def @func_8474() -> (Tensor[(11, 5, 8), float32],) {
  %1280 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %1281 = %1280.1;
  (%1281,)
}

def @func_19894() -> (Tensor[(11, 5, 8), float32],) {
  %1282 = @func_2490() /* ty=Tensor[(11, 5, 8), float32] */;
  (%1282,)
}

def @func_1538() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) {
  %1283 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 13), float32] */;
  %1284 = cast(meta[relay.Constant][51] /* ty=Tensor[(110, 4), float32] */, dtype="float32") /* ty=Tensor[(110, 4), float32] */;
  %1285 = reshape(%1284, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %1286 = asinh(%1283) /* ty=Tensor[(6, 10, 13), float32] */;
  %1287 = @func_890(%1285) /* ty=Tensor[(11, 5, 8), float32] */;
  (%1286, %1287, meta[relay.Constant][51] /* ty=Tensor[(110, 4), float32] */)
}

def @func_16598() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(1, 273), int64]) {
  %1288 = @func_13029() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1289 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 273), int64] */, dtype="int64") /* ty=Tensor[(1, 273), int64] */;
  %1290 = reshape(%1289, newshape=[273]) /* ty=Tensor[(273), int64] */;
  %1291 = @func_6524(%1290) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 7, 3), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1292 = %1288.0;
  %1293 = %1291.6;
  (%1292, %1293, meta[relay.Constant][52] /* ty=Tensor[(1, 273), int64] */)
}

def @func_4932(%var_4917: Tensor[(273), int64]) -> (Tensor[(11, 5, 8), float32], Tensor[(13, 7, 3), float32], Tensor[(273), int64]) {
  %1294 = cast(%var_4917, dtype="int64") /* ty=Tensor[(273), int64] */;
  %1295 = reshape(%1294, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), int64] */;
  %1296 = @func_1948(%1295) /* ty=(Tensor[(13, 7, 3), int8], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(6, 10, 13), float32]) */;
  %1297 = @func_3597() /* ty=Tensor[(11, 5, 8), float32] */;
  %1298 = %1296.3;
  (%1297, %1298, %var_4917)
}

def @func_9040() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %1299 = @func_6602() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %1300 = @func_7184() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float64]) */;
  %1301 = %1299.1;
  %1302 = @func_3597() /* ty=Tensor[(11, 5, 8), float32] */;
  %1303 = %1300.0;
  (%1301, %1302, %1303)
}

def @func_19541() -> (Tensor[(6, 10, 13), float32],) {
  %1304 = @func_13833() /* ty=(Tensor[(440), uint8], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(110, 4), float32]) */;
  %1305 = %1304.3;
  (%1305,)
}

def @func_12424() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %1306 = @func_9740() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1307 = @func_3777() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1308 = %1306.1;
  %1309 = %1307.2;
  (%1308, %1309)
}

def @func_13833() -> (Tensor[(440), uint8], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(110, 4), float32]) {
  %1310 = @func_10339() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(440), uint8]) */;
  %1311 = @func_12077() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %1312 = @func_7165() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(8, 52), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1313 = @func_13029() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1314 = @func_11789() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %1315 = @func_11550() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64]) */;
  %1316 = %1315.1;
  %1317 = cast(%1316, dtype="float32") /* ty=Tensor[(2, 3, 6), float32] */;
  %1318 = log2(%1317) /* ty=Tensor[(2, 3, 6), float32] */;
  %1319 = cast(%1318, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %1320 = tan(%1319) /* ty=Tensor[(2, 3, 6), float64] */;
  %1321 = cast(%1318, dtype="int32") /* ty=Tensor[(2, 3, 6), int32] */;
  %1322 = shape_of(%1320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1323 = cast(%1320, dtype="int32") /* ty=Tensor[(2, 3, 6), int32] */;
  %1324 = dyn.reshape(%1321, %1322, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1325 = @func_4977() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */;
  %1326 = %1310.1;
  %1327 = @func_11925() /* ty=Tensor[(6, 10, 13), float32] */;
  %1328 = %1311.0;
  %1329 = %1312.4;
  %1330 = %1313.0;
  %1331 = %1314.3;
  %1332 = logical_xor(%1323, %1324) /* ty=Tensor[(2, 3, 6), int32] */;
  %1333 = %1325.1;
  (%1326, %1327, %1328, %1329, %1330, %1331, %1332, %1333)
}

def @func_2927() -> Tensor[(6, 10, 13), float64] {
  %1334 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %1334.0
}

def @func_11702() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %1335 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %1336 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1337 = %1335.0;
  %1338 = %1336.4;
  (%1337, %1338)
}

def @func_8117() -> (Tensor[(6, 10, 13), float32],) {
  %1339 = @func_7352() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32]) */;
  %1340 = %1339.0;
  (%1340,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_19214() -> (Tensor[(440), float32],) {
  %0 = @func_17819() /* ty=Tensor[(440), float32] */;
  (%0,)
}

def @func_7354() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32]) {
  @func_7352() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32]) */
}

def @func_16815() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) {
  %1 = @func_11893() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %2 = @func_14858() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %3 = %1.1;
  %4 = %2.1;
  (%3, %4)
}

def @func_5540() -> (Tensor[(440), float32],) {
  %5 = @func_5254() /* ty=Tensor[(440), float32] */;
  (%5,)
}

def @func_2342() -> (Tensor[(11, 5, 8), float32],) {
  @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_7594() -> (Tensor[(11, 5, 8), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %13 = fn () -> (Tensor[(11, 5, 8), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
    %6 = @func_6337() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float64]) */;
    %7 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %8 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %9 = %6.2;
    %10 = %7.0;
    %11 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
    %12 = %8.0;
    (%9, %10, %11, %12)
  };
  %13() /* ty=(Tensor[(11, 5, 8), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_1948(%var_1906: Tensor[(13, 7, 3), int64]) -> (Tensor[(13, 7, 3), int8], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(6, 10, 13), float32]) {
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 7, 3), int64] */, dtype="bool") /* ty=Tensor[(13, 7, 3), bool] */;
  %15 = shape_of(%var_1906, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%var_1906, dtype="bool") /* ty=Tensor[(13, 7, 3), bool] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %18 = greater_equal(%16, %17) /* ty=Tensor[(13, 7, 3), bool] */;
  %19 = cast(%18, dtype="int8") /* ty=Tensor[(13, 7, 3), int8] */;
  %20 = shape_of(%var_1906, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(%var_1906, dtype="int8") /* ty=Tensor[(13, 7, 3), int8] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %24 = reshape(%23, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %25 = cast(%var_1906, dtype="float32") /* ty=Tensor[(13, 7, 3), float32] */;
  %26 = acosh(%25) /* ty=Tensor[(13, 7, 3), float32] */;
  %27 = cast(%26, dtype="float32") /* ty=Tensor[(13, 7, 3), float32] */;
  %28 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %29 = bitwise_or(%21, %22) /* ty=Tensor[(13, 7, 3), int8] */;
  %30 = @func_890(%24) /* ty=Tensor[(11, 5, 8), float32] */;
  %31 = sinh(%27) /* ty=Tensor[(13, 7, 3), float32] */;
  %32 = %28.2;
  (%29, %30, meta[relay.Constant][1] /* ty=Tensor[(440), float32] */, %31, %32)
}

def @func_18407() -> Tensor[(9, 1, 15), float32] {
  @func_18405() /* ty=Tensor[(9, 1, 15), float32] */
}

def @func_17093() -> Tensor[(440), float32] {
  %33 = @func_7271() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %33.1
}

def @func_12078() -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) {
  %37 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) {
    %34 = @func_8957() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %35 = %34.0;
    %36 = @func_5487() /* ty=Tensor[(110, 4), float32] */;
    (%35, %36)
  };
  %37() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */
}

def @func_17028() -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) {
  @func_17026() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */
}

def @func_19520() -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %38 = @func_4687() /* ty=(Tensor[(440), float32],) */;
  %39 = %38.0;
  %40 = @func_9232() /* ty=Tensor[(11, 5, 8), float32] */;
  (%39, %40)
}

def @func_15889() -> Tensor[(6, 10, 13), float64] {
  @func_15887() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_7702() -> (Tensor[(11, 5, 8), float32],) {
  @func_7700() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_18839(%var_18827: Tensor[(110, 4), float32]) -> Tensor[(110, 4), int8] {
  %41 = @func_17026() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %42 = %41.1;
  %43 = cast(%var_18827, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %44 = shape_of(%42, dtype="int32") /* ty=Tensor[(2), int32] */;
  %45 = cast(%42, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %47 = floor_divide(%45, %46) /* ty=Tensor[(110, 4), float64] */;
  %48 = cast(%47, dtype="int8") /* ty=Tensor[(110, 4), int8] */;
  %49 = shape_of(%var_18827, dtype="int32") /* ty=Tensor[(2), int32] */;
  %50 = cast(%var_18827, dtype="int8") /* ty=Tensor[(110, 4), int8] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  bitwise_and(%50, %51) /* ty=Tensor[(110, 4), int8] */
}

def @func_20249() -> Tensor[(110, 4), float32] {
  %52 = @func_11842() /* ty=(Tensor[(110, 4), float32],) */;
  %52.0
}

def @func_17256() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32], Tensor[(440), float32]) {
  %53 = @func_12932() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %54 = @func_8892() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(110, 4), float32]) */;
  %55 = @func_13398() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(1050), float64], Tensor[(11, 5, 8), float32]) */;
  %56 = @func_7537() /* ty=Tensor[(6, 10, 13), float64] */;
  %57 = %53.0;
  %58 = %54.4;
  %59 = %55.0;
  (%56, %57, %58, %59)
}

def @func_18075(%var_18073: Tensor[(1573), float32], %var_18074: Tensor[(1573), float32]) -> (Tensor[(440), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float64], Tensor[(1573), uint16], Tensor[(6, 10, 13), float64]) {
  @func_18071(%var_18073, %var_18074) /* ty=(Tensor[(440), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float64], Tensor[(1573), uint16], Tensor[(6, 10, 13), float64]) */
}

def @func_14562(%var_14560: Tensor[(14, 5, 4), float32], %var_14561: Tensor[(14, 5, 4), float32]) -> Tensor[(14, 5, 4), float32] {
  @func_14558(%var_14560, %var_14561) /* ty=Tensor[(14, 5, 4), float32] */
}

def @func_12046() -> Tensor[(6, 10, 13), float32] {
  %61 = fn () -> Tensor[(6, 10, 13), float32] {
    %60 = @func_2433() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
    %60.1
  };
  %61() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_6547() -> Tensor[(440), float32] {
  @func_6545() /* ty=Tensor[(440), float32] */
}

def @func_18697(%var_18690: float64, %var_18691: Tensor[(2535), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64]) {
  %62 = @func_12982() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %63 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %64 = @func_8695() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %65 = cast(%var_18690, dtype="float64") /* ty=float64 */;
  %66 = cast(%var_18691, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %67 = reshape(%65, newshape=[]) /* ty=float64 */;
  %68 = reshape(%66, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
  %69 = @func_4055(%67, %68) /* ty=(Tensor[(13, 13, 15), bool],) */;
  %70 = %62.0;
  %71 = %63.0;
  %72 = %64.2;
  %73 = %69.0;
  (%70, %71, %72, %73, %var_18690, %var_18691)
}

def @func_8739() -> (Tensor[(6, 10, 13), float64],) {
  @func_8737() /* ty=(Tensor[(6, 10, 13), float64],) */
}

def @func_9797() -> (Tensor[(11, 5, 8), float32],) {
  @func_9795() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_18161() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float32]) {
  %77 = fn () -> (Tensor[(440), float32], Tensor[(6, 10, 13), float32]) {
    %74 = @func_10776() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
    %75 = %74.0;
    %76 = @func_16053() /* ty=Tensor[(6, 10, 13), float32] */;
    (%75, %76)
  };
  %77() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_9957() -> Tensor[(11, 5, 8), float32] {
  %79 = fn () -> Tensor[(11, 5, 8), float32] {
    %78 = @func_7855() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(8, 52), bool], Tensor[(440), float32], Tensor[(297), float64]) */;
    %78.0
  };
  %79() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_12834() -> (Tensor[(6, 10, 13), float64],) {
  %81 = fn () -> (Tensor[(6, 10, 13), float64],) {
    %80 = @func_5036() /* ty=Tensor[(6, 10, 13), float64] */;
    (%80,)
  };
  %81() /* ty=(Tensor[(6, 10, 13), float64],) */
}

def @func_10020() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  @func_10018() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_5606(%var_5605: Tensor[(6, 6, 14), uint16]) -> Tensor[(6, 6, 14), uint16] {
  %84 = fn (%var_5581: Tensor[(6, 6, 14), uint16]) -> Tensor[(6, 6, 14), uint16] {
    %82 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 6, 14), uint16] */, dtype="uint16") /* ty=Tensor[(1, 6, 14), uint16] */;
    %83 = cast(%var_5581, dtype="uint16") /* ty=Tensor[(6, 6, 14), uint16] */;
    multiply(%82, %83) /* ty=Tensor[(6, 6, 14), uint16] */
  };
  %84(%var_5605) /* ty=Tensor[(6, 6, 14), uint16] */
}

def @func_13260(%var_13239: Tensor[(10, 15, 7), float64]) -> (Tensor[(10, 15, 7), bool], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %85 = cast(%var_13239, dtype="bool") /* ty=Tensor[(10, 15, 7), bool] */;
  %86 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(10, 15, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 15, 7), float64] */, dtype="bool") /* ty=Tensor[(10, 15, 7), bool] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %89 = @func_3831() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %90 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %91 = greater_equal(%87, %88) /* ty=Tensor[(10, 15, 7), bool] */;
  %92 = %89.0;
  %93 = %90.0;
  (%91, %92, %93)
}

def @func_8817() -> (Tensor[(11, 5, 8), float32],) {
  @func_8815() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_6651(%var_6649: Tensor[(16, 1, 3), float64], %var_6650: Tensor[(16, 6, 3), float64]) -> Tensor[(16, 6, 3), float64] {
  @func_6647(%var_6649, %var_6650) /* ty=Tensor[(16, 6, 3), float64] */
}

def @func_16678() -> (Tensor[(11, 5, 8), float32],) {
  %94 = @func_6434() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %95 = %94.0;
  (%95,)
}

def @func_11601() -> Tensor[(440), float32] {
  @func_11599() /* ty=Tensor[(440), float32] */
}

def @func_13835() -> (Tensor[(440), uint8], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(110, 4), float32]) {
  @func_13833() /* ty=(Tensor[(440), uint8], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(110, 4), float32]) */
}

def @func_12426() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  @func_12424() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_19216() -> (Tensor[(440), float32],) {
  @func_19214() /* ty=(Tensor[(440), float32],) */
}

def @func_19305() -> (Tensor[(11, 5, 8), float32],) {
  @func_19303() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_5973(%var_5971: Tensor[(273), int64]) -> (Tensor[(440), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(273), int64]) {
  @func_5970(%var_5971) /* ty=(Tensor[(440), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(273), int64]) */
}

def @func_17221(%var_17199: Tensor[(297), float64]) -> (Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(440), float32], Tensor[(297), float64]) {
  %96 = @func_3777() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %97 = @func_13833() /* ty=(Tensor[(440), uint8], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(110, 4), float32]) */;
  %98 = cast(%var_17199, dtype="float64") /* ty=Tensor[(297), float64] */;
  %99 = reshape(%98, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float64] */;
  %100 = @func_5480(%99) /* ty=(Tensor[(440), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(6, 10, 13), float32]) */;
  %101 = %96.0;
  %102 = %97.6;
  %103 = %100.0;
  (%101, %102, %103, %var_17199)
}

def @func_14785() -> (Tensor[(110, 4), float32],) {
  %104 = @func_12077() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %105 = %104.1;
  (%105,)
}

def @func_16766() -> (Tensor[(440), uint8],) {
  %106 = @func_10986() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), uint8], Tensor[(6, 10, 13), float64]) */;
  %107 = %106.1;
  (%107,)
}

def @func_12258() -> (Tensor[(6, 10, 13), float32],) {
  %108 = @func_4902() /* ty=Tensor[(6, 10, 13), float32] */;
  (%108,)
}

def @func_8049() -> (Tensor[(110, 4), bool], Tensor[(110, 4), float64]) {
  %109 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %110 = %109.1;
  %111 = cast(%110, dtype="float32") /* ty=Tensor[(110, 4), float32] */;
  %112 = sin(%111) /* ty=Tensor[(110, 4), float32] */;
  %113 = cast(%112, dtype="float32") /* ty=Tensor[(110, 4), float32] */;
  %114 = sinh(%113) /* ty=Tensor[(110, 4), float32] */;
  %115 = cast(meta[relay.Constant][4] /* ty=Tensor[(110, 4), float32] */, dtype="bool") /* ty=Tensor[(110, 4), bool] */;
  %116 = shape_of(%114, dtype="int32") /* ty=Tensor[(2), int32] */;
  %117 = cast(%114, dtype="bool") /* ty=Tensor[(110, 4), bool] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %119 = cast(%112, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
  %120 = less_equal(%117, %118) /* ty=Tensor[(110, 4), bool] */;
  %121 = log2(%119) /* ty=Tensor[(110, 4), float64] */;
  (%120, %121)
}

def @func_13399() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(1050), float64], Tensor[(11, 5, 8), float32]) {
  %129 = fn () -> (Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(1050), float64], Tensor[(11, 5, 8), float32]) {
    %122 = cast(meta[relay.Constant][5] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %123 = reshape(%122, newshape=[10, 15, 7]) /* ty=Tensor[(10, 15, 7), float64] */;
    %124 = @func_13260(%123) /* ty=(Tensor[(10, 15, 7), bool], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
    %125 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %126 = @func_6545() /* ty=Tensor[(440), float32] */;
    %127 = %124.2;
    %128 = %125.1;
    (%126, %127, meta[relay.Constant][5] /* ty=Tensor[(1050), float64] */, %128)
  };
  %129() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(1050), float64], Tensor[(11, 5, 8), float32]) */
}

def @func_3832() -> (Tensor[(11, 5, 8), float32],) {
  %131 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %130 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
    (%130,)
  };
  %131() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_7059(%var_7057: uint32, %var_7058: Tensor[(1728), uint32]) -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(16, 12, 9), uint32], uint32, Tensor[(1728), uint32]) {
  %151 = fn (%var_7042: uint32, %var_7043: Tensor[(1728), uint32]) -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(16, 12, 9), uint32], uint32, Tensor[(1728), uint32]) {
    %132 = @func_4783() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %133 = @func_5925() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %134 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %135 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
    %136 = @func_3831() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %137 = cast(%var_7042, dtype="uint32") /* ty=uint32 */;
    %138 = cast(%var_7043, dtype="uint32") /* ty=Tensor[(1728), uint32] */;
    %139 = reshape(%137, newshape=[]) /* ty=uint32 */;
    %140 = reshape(%138, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint32] */;
    %141 = @func_3125(%139, %140) /* ty=(Tensor[(16, 12, 9), uint32],) */;
    %142 = %132.0;
    %143 = %133.0;
    %144 = %134.0;
    %145 = @func_4992() /* ty=Tensor[(6, 10, 13), float32] */;
    %146 = @func_6166() /* ty=Tensor[(11, 5, 8), float32] */;
    %147 = @func_5487() /* ty=Tensor[(110, 4), float32] */;
    %148 = %135.0;
    %149 = %136.0;
    %150 = %141.0;
    (%142, %143, %144, %145, %146, %147, %148, %149, %150, %var_7042, %var_7043)
  };
  %151(%var_7057, %var_7058) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(16, 12, 9), uint32], uint32, Tensor[(1728), uint32]) */
}

def @func_10869() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  @func_10867() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_13030() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %155 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
    %152 = @func_11893() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %153 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
    %154 = %152.1;
    (%153, %154)
  };
  %155() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_2492() -> Tensor[(11, 5, 8), float32] {
  @func_2490() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_11962() -> (Tensor[(6, 10, 13), float32],) {
  %156 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  (%156,)
}

def @func_893(%var_891: Tensor[(11, 5, 8), float32]) -> Tensor[(11, 5, 8), float32] {
  @func_890(%var_891) /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_17258() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32], Tensor[(440), float32]) {
  @func_17256() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32], Tensor[(440), float32]) */
}

def @func_5775() -> Tensor[(11, 5, 8), float32] {
  %157 = fn () -> Tensor[(11, 5, 8), float32] {
    @func_3597() /* ty=Tensor[(11, 5, 8), float32] */
  };
  %157() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_13163() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %158 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %159 = %158.0;
  %160 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
  (%159, %160)
}

def @func_2692() -> Tensor[(11, 5, 8), float32] {
  %161 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %161.1
}

def @func_9233() -> Tensor[(11, 5, 8), float32] {
  %162 = fn () -> Tensor[(11, 5, 8), float32] {
    @func_2659() /* ty=Tensor[(11, 5, 8), float32] */
  };
  %162() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_13198() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32]) {
  %168 = fn () -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32]) {
    %163 = @func_12384() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64]) */;
    %164 = @func_10986() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), uint8], Tensor[(6, 10, 13), float64]) */;
    %165 = %163.1;
    %166 = @func_2927() /* ty=Tensor[(6, 10, 13), float64] */;
    %167 = %164.0;
    (%165, %166, %167)
  };
  %168() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32]) */
}

def @func_16135() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
  %173 = fn () -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
    %169 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %170 = @func_13872() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %171 = %169.0;
    %172 = %170.1;
    (%171, %172)
  };
  %173() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_15184() -> Tensor[(11, 5, 8), float32] {
  @func_15182() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_19543() -> (Tensor[(6, 10, 13), float32],) {
  @func_19541() /* ty=(Tensor[(6, 10, 13), float32],) */
}

def @func_11626() -> Tensor[(11, 5, 8), float32] {
  %174 = fn () -> Tensor[(11, 5, 8), float32] {
    @func_7469() /* ty=Tensor[(11, 5, 8), float32] */
  };
  %174() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_14593(%var_14591: Tensor[(338, 1), float64], %var_14592: Tensor[(840), int64]) -> (Tensor[(11, 5, 8), float32], Tensor[(2, 13, 13), float64], Tensor[(338, 1), float64], Tensor[(840), int64]) {
  %182 = fn (%var_14587: Tensor[(338, 1), float64], %var_14588: Tensor[(840), int64]) -> (Tensor[(11, 5, 8), float32], Tensor[(2, 13, 13), float64], Tensor[(338, 1), float64], Tensor[(840), int64]) {
    %175 = cast(%var_14587, dtype="float64") /* ty=Tensor[(338, 1), float64] */;
    %176 = cast(%var_14588, dtype="int64") /* ty=Tensor[(840), int64] */;
    %177 = reshape(%175, newshape=[2, 13, 13]) /* ty=Tensor[(2, 13, 13), float64] */;
    %178 = reshape(%176, newshape=[840]) /* ty=Tensor[(840), int64] */;
    %179 = @func_4473(%177, %178) /* ty=(Tensor[(2, 13, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(15, 7, 8), int64], Tensor[(840), int64]) */;
    %180 = @func_9232() /* ty=Tensor[(11, 5, 8), float32] */;
    %181 = %179.0;
    (%180, %181, %var_14587, %var_14588)
  };
  %182(%var_14591, %var_14592) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 13, 13), float64], Tensor[(338, 1), float64], Tensor[(840), int64]) */
}

def @func_9749() -> Tensor[(440), float32] {
  %183 = @func_7855() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(8, 52), bool], Tensor[(440), float32], Tensor[(297), float64]) */;
  %183.3
}

def @func_8958() -> (Tensor[(11, 5, 8), float32],) {
  %186 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %184 = @func_4783() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %185 = %184.0;
    (%185,)
  };
  %186() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_14518() -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64], Tensor[(11, 5, 8), float32]) {
  %200 = fn () -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64], Tensor[(11, 5, 8), float32]) {
    %187 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %188 = @func_2827() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %189 = cast(5.76805f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %190 = cast(meta[relay.Constant][6] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %191 = reshape(%189, newshape=[]) /* ty=float64 */;
    %192 = reshape(%190, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
    %193 = @func_4055(%191, %192) /* ty=(Tensor[(13, 13, 15), bool],) */;
    %194 = @func_10998() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %195 = @func_5036() /* ty=Tensor[(6, 10, 13), float64] */;
    %196 = %187.0;
    %197 = %188.0;
    %198 = %193.0;
    %199 = %194.0;
    (%195, %196, %197, %198, 5.76805f64 /* ty=float64 */, meta[relay.Constant][6] /* ty=Tensor[(2535), float64] */, %199)
  };
  %200() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64], Tensor[(11, 5, 8), float32]) */
}

def @func_11599() -> Tensor[(440), float32] {
  @func_5254() /* ty=Tensor[(440), float32] */
}

def @func_9795() -> (Tensor[(11, 5, 8), float32],) {
  %201 = @func_7593() /* ty=(Tensor[(11, 5, 8), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %202 = %201.3;
  (%202,)
}

def @func_2694() -> Tensor[(11, 5, 8), float32] {
  @func_2692() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_14046() -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(26), float64], Tensor[(416), float64], Tensor[(6, 10, 13), float32]) {
  @func_14044() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(26), float64], Tensor[(416), float64], Tensor[(6, 10, 13), float32]) */
}

def @func_14935(%var_14933: Tensor[(48), float64], %var_14934: Tensor[(504), uint16]) -> (Tensor[(11, 5, 8), float32], Tensor[(16, 6, 3), float64], Tensor[(48), float64], Tensor[(288), float64], Tensor[(6, 6, 14), uint16], Tensor[(504), uint16], Tensor[(6, 10, 13), float64]) {
  @func_14931(%var_14933, %var_14934) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 6, 3), float64], Tensor[(48), float64], Tensor[(288), float64], Tensor[(6, 6, 14), uint16], Tensor[(504), uint16], Tensor[(6, 10, 13), float64]) */
}

def @func_19270(%var_19268: Tensor[(12, 8, 6), float64], %var_19269: Tensor[(12, 8, 6), float64]) -> Tensor[(12, 8, 6), bool] {
  %207 = fn (%var_19261: Tensor[(12, 8, 6), float64], %var_19262: Tensor[(12, 8, 6), float64]) -> Tensor[(12, 8, 6), bool] {
    %203 = cast(%var_19262, dtype="bool") /* ty=Tensor[(12, 8, 6), bool] */;
    %204 = shape_of(%var_19261, dtype="int32") /* ty=Tensor[(3), int32] */;
    %205 = cast(%var_19261, dtype="bool") /* ty=Tensor[(12, 8, 6), bool] */;
    %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%205, %206) /* ty=Tensor[(12, 8, 6), bool] */
  };
  %207(%var_19268, %var_19269) /* ty=Tensor[(12, 8, 6), bool] */
}

def @func_17787(%var_17785: Tensor[(440), float32]) -> (Tensor[(440), int64], Tensor[(6, 10, 13), float64], Tensor[(440), float64]) {
  @func_17784(%var_17785) /* ty=(Tensor[(440), int64], Tensor[(6, 10, 13), float64], Tensor[(440), float64]) */
}

def @func_5191() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_4058(%var_4056: float64, %var_4057: Tensor[(13, 13, 15), float64]) -> (Tensor[(13, 13, 15), bool],) {
  %211 = fn (%var_4049: float64, %var_4050: Tensor[(13, 13, 15), float64]) -> (Tensor[(13, 13, 15), bool],) {
    %208 = cast(%var_4049, dtype="bool") /* ty=bool */;
    %209 = cast(%var_4050, dtype="bool") /* ty=Tensor[(13, 13, 15), bool] */;
    %210 = less_equal(%208, %209) /* ty=Tensor[(13, 13, 15), bool] */;
    (%210,)
  };
  %211(%var_4056, %var_4057) /* ty=(Tensor[(13, 13, 15), bool],) */
}

def @func_8118() -> (Tensor[(6, 10, 13), float32],) {
  %214 = fn () -> (Tensor[(6, 10, 13), float32],) {
    %212 = @func_7352() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32]) */;
    %213 = %212.0;
    (%213,)
  };
  %214() /* ty=(Tensor[(6, 10, 13), float32],) */
}

def @func_13873() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %219 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
    %215 = @func_9805() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %216 = @func_8892() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(110, 4), float32]) */;
    %217 = %215.0;
    %218 = %216.2;
    (%217, %218)
  };
  %219() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_15182() -> Tensor[(11, 5, 8), float32] {
  %220 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %220.0
}

def @func_13655() -> Tensor[(11, 5, 8), float32] {
  %221 = fn () -> Tensor[(11, 5, 8), float32] {
    @func_10077() /* ty=Tensor[(11, 5, 8), float32] */
  };
  %221() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_2252() -> Tensor[(11, 5, 8), float32] {
  @func_2250() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_6743() -> (Tensor[(6, 10, 13), float64],) {
  %222 = @func_6272() /* ty=Tensor[(6, 10, 13), float64] */;
  (%222,)
}

def @func_4978() -> (Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) {
  %225 = fn () -> (Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) {
    %223 = @func_4902() /* ty=Tensor[(6, 10, 13), float32] */;
    %224 = @func_4166() /* ty=Tensor[(110, 4), float32] */;
    (%223, %224)
  };
  %225() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */
}

def @func_6272() -> Tensor[(6, 10, 13), float64] {
  %226 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %226.0
}

def @func_7271() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %227 = @func_4592() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %228 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %229 = @func_3309() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %230 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %231 = %227.1;
  %232 = @func_6545() /* ty=Tensor[(440), float32] */;
  %233 = %228.0;
  %234 = %229.0;
  %235 = %230.2;
  (%231, %232, %233, %234, %235)
}

def @func_11925() -> Tensor[(6, 10, 13), float32] {
  %236 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %236.0
}

def @func_17386(%var_17384: Tensor[(9, 1, 4), float32], %var_17385: Tensor[(9, 6, 4), float32]) -> (Tensor[(9, 6, 4), float32], Tensor[(9, 6, 4), float64]) {
  %242 = fn (%var_17360: Tensor[(9, 1, 4), float32], %var_17361: Tensor[(9, 6, 4), float32]) -> (Tensor[(9, 6, 4), float32], Tensor[(9, 6, 4), float64]) {
    %237 = cast(%var_17360, dtype="float32") /* ty=Tensor[(9, 1, 4), float32] */;
    %238 = cast(%var_17361, dtype="float32") /* ty=Tensor[(9, 6, 4), float32] */;
    %239 = cast(%var_17361, dtype="float64") /* ty=Tensor[(9, 6, 4), float64] */;
    %240 = floor_divide(%237, %238) /* ty=Tensor[(9, 6, 4), float32] */;
    %241 = atan(%239) /* ty=Tensor[(9, 6, 4), float64] */;
    (%240, %241)
  };
  %242(%var_17384, %var_17385) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(9, 6, 4), float64]) */
}

def @func_4594() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  @func_4592() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_12969() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64]) {
  @func_12967() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64]) */
}

def @func_5256() -> Tensor[(440), float32] {
  @func_5254() /* ty=Tensor[(440), float32] */
}

def @func_10253(%var_10211: Tensor[(16, 26), float64], %var_10248: Tensor[(16, 26), float64]) -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(26), float32], Tensor[(11, 5, 8), float32], Tensor[(?, 13, 2), uint32], Tensor[(16, 26), uint8]) {
  %243 = @func_4151() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) */;
  %244 = @func_9664() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %245 = cast(meta[relay.Constant][7] /* ty=Tensor[(26), float64] */, dtype="float64") /* ty=Tensor[(26), float64] */;
  %246 = cast(%var_10211, dtype="float64") /* ty=Tensor[(16, 26), float64] */;
  %247 = reshape(%245, newshape=[1, 13, 2]) /* ty=Tensor[(1, 13, 2), float64] */;
  %248 = reshape(%246, newshape=[16, 13, 2]) /* ty=Tensor[(16, 13, 2), float64] */;
  %249 = @func_3283(%247, %248) /* ty=(Tensor[(1, 13, 2), float32], Tensor[(16, 13, 2), float64]) */;
  %250 = %249.0;
  %251 = cast(%250, dtype="float32") /* ty=Tensor[(1, 13, 2), float32] */;
  %252 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(26), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %253 = cast(meta[relay.Constant][7] /* ty=Tensor[(26), float64] */, dtype="float32") /* ty=Tensor[(26), float32] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?), float32] */;
  %255 = @func_7855() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(8, 52), bool], Tensor[(440), float32], Tensor[(297), float64]) */;
  %256 = cast(meta[relay.Constant][7] /* ty=Tensor[(26), float64] */, dtype="uint32") /* ty=Tensor[(26), uint32] */;
  %257 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%250, dtype="uint32") /* ty=Tensor[(1, 13, 2), uint32] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %260 = cast(%var_10248, dtype="uint8") /* ty=Tensor[(16, 26), uint8] */;
  %261 = shape_of(%var_10211, dtype="int32") /* ty=Tensor[(2), int32] */;
  %262 = cast(%var_10211, dtype="uint8") /* ty=Tensor[(16, 26), uint8] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %264 = @func_6960() /* ty=Tensor[(440), float32] */;
  %265 = %243.0;
  %266 = %244.0;
  %267 = mod(%253, %254) /* ty=Tensor[(26), float32] */;
  %268 = %255.0;
  %269 = bitwise_xor(%258, %259) /* ty=Tensor[(?, 13, 2), uint32] */;
  %270 = logical_xor(%262, %263) /* ty=Tensor[(16, 26), uint8] */;
  (%264, %265, %266, %267, %268, %269, %270)
}

def @func_16713(%var_16705: Tensor[(6, 2, 16), float64]) -> (Tensor[(6, 2, 16), float64],) {
  %271 = cast(%var_16705, dtype="float64") /* ty=Tensor[(6, 2, 16), float64] */;
  %272 = erf(%271) /* ty=Tensor[(6, 2, 16), float64] */;
  (%272,)
}

def @func_16150() -> Tensor[(110, 4), float32] {
  %274 = fn () -> Tensor[(110, 4), float32] {
    %273 = @func_12321() /* ty=(Tensor[(110, 4), float32],) */;
    %273.0
  };
  %274() /* ty=Tensor[(110, 4), float32] */
}

def @func_17083(%var_17081: Tensor[(12, 4), float64], %var_17082: Tensor[(288), float64]) -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(16, 6, 3), float64], Tensor[(12, 4), float64], Tensor[(288), float64]) {
  %283 = fn (%var_17066: Tensor[(12, 4), float64], %var_17067: Tensor[(288), float64]) -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(16, 6, 3), float64], Tensor[(12, 4), float64], Tensor[(288), float64]) {
    %275 = @func_14618() /* ty=(Tensor[(6, 10, 13), float32],) */;
    %276 = cast(%var_17066, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
    %277 = cast(%var_17067, dtype="float64") /* ty=Tensor[(288), float64] */;
    %278 = reshape(%276, newshape=[16, 1, 3]) /* ty=Tensor[(16, 1, 3), float64] */;
    %279 = reshape(%277, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), float64] */;
    %280 = @func_13453() /* ty=Tensor[(6, 10, 13), float32] */;
    %281 = %275.0;
    %282 = @func_6647(%278, %279) /* ty=Tensor[(16, 6, 3), float64] */;
    (%280, %281, %282, %var_17066, %var_17067)
  };
  %283(%var_17081, %var_17082) /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(16, 6, 3), float64], Tensor[(12, 4), float64], Tensor[(288), float64]) */
}

def @func_1640() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %293 = fn () -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
    %284 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %285 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %286 = %285.1;
    %287 = cast(%286, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
    %288 = reshape(%287, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
    %289 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %290 = %284.0;
    %291 = @func_890(%288) /* ty=Tensor[(11, 5, 8), float32] */;
    %292 = %289.0;
    (%290, %286, %291, %292)
  };
  %293() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_9614(%var_9566: Tensor[(13, 11, 11), float32]) -> (Tensor[(13, 11, 11), uint16], Tensor[(440), float32]) {
  %294 = cast(%var_9566, dtype="float32") /* ty=Tensor[(13, 11, 11), float32] */;
  %295 = sqrt(%294) /* ty=Tensor[(13, 11, 11), float32] */;
  %296 = cast(%295, dtype="bool") /* ty=Tensor[(13, 11, 11), bool] */;
  %297 = shape_of(%var_9566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%var_9566, dtype="bool") /* ty=Tensor[(13, 11, 11), bool] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %300 = not_equal(%298, %299) /* ty=Tensor[(13, 11, 11), bool] */;
  %301 = cast(%295, dtype="uint16") /* ty=Tensor[(13, 11, 11), uint16] */;
  %302 = shape_of(%300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(%300, dtype="uint16") /* ty=Tensor[(13, 11, 11), uint16] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %305 = add(%303, %304) /* ty=Tensor[(13, 11, 11), uint16] */;
  %306 = @func_5254() /* ty=Tensor[(440), float32] */;
  (%305, %306)
}

def @func_9666() -> (Tensor[(6, 10, 13), float32],) {
  @func_9664() /* ty=(Tensor[(6, 10, 13), float32],) */
}

def @func_3249(%var_3247: Tensor[(11, 5, 8), float32]) -> (Tensor[(11, 5, 8), float64], Tensor[(440), float32]) {
  @func_3246(%var_3247) /* ty=(Tensor[(11, 5, 8), float64], Tensor[(440), float32]) */
}

def @func_18842(%var_18840: Tensor[(110, 4), float32]) -> Tensor[(110, 4), int8] {
  @func_18839(%var_18840) /* ty=Tensor[(110, 4), int8] */
}

def @func_19541() -> (Tensor[(6, 10, 13), float32],) {
  %307 = @func_13833() /* ty=(Tensor[(440), uint8], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(110, 4), float32]) */;
  %308 = %307.3;
  (%308,)
}

def @func_5133(%var_5131: Tensor[(416), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(26), float64], Tensor[(416), float64]) {
  %309 = @func_1639() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %310 = cast(meta[relay.Constant][8] /* ty=Tensor[(26), float64] */, dtype="float64") /* ty=Tensor[(26), float64] */;
  %311 = cast(%var_5131, dtype="float64") /* ty=Tensor[(416), float64] */;
  %312 = reshape(%310, newshape=[1, 13, 2]) /* ty=Tensor[(1, 13, 2), float64] */;
  %313 = reshape(%311, newshape=[16, 13, 2]) /* ty=Tensor[(16, 13, 2), float64] */;
  %314 = @func_3283(%312, %313) /* ty=(Tensor[(1, 13, 2), float32], Tensor[(16, 13, 2), float64]) */;
  %315 = %309.2;
  %316 = %314.1;
  (%315, %316, meta[relay.Constant][8] /* ty=Tensor[(26), float64] */, %var_5131)
}

def @func_16054() -> Tensor[(6, 10, 13), float32] {
  %322 = fn () -> Tensor[(6, 10, 13), float32] {
    %317 = @func_10776() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
    %318 = %317.1;
    %319 = cast(%318, dtype="float32") /* ty=Tensor[(6, 10, 13), float32] */;
    %320 = atanh(%319) /* ty=Tensor[(6, 10, 13), float32] */;
    %321 = cast(%320, dtype="float32") /* ty=Tensor[(6, 10, 13), float32] */;
    erf(%321) /* ty=Tensor[(6, 10, 13), float32] */
  };
  %322() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_4372() -> (Tensor[(11, 5, 8), float32],) {
  %323 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %324 = %323.0;
  (%324,)
}

def @func_6166() -> Tensor[(11, 5, 8), float32] {
  %325 = @func_3831() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %325.0
}

def @func_12982() -> (Tensor[(11, 5, 8), float32],) {
  %326 = @func_9740() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %327 = %326.1;
  (%327,)
}

def @func_14947() -> Tensor[(440), float32] {
  %329 = fn () -> Tensor[(440), float32] {
    %328 = @func_5289() /* ty=(Tensor[(440), float32],) */;
    %328.0
  };
  %329() /* ty=Tensor[(440), float32] */
}

def @func_19368() -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(297), float64]) {
  %330 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %331 = cast(meta[relay.Constant][9] /* ty=Tensor[(297), float64] */, dtype="float64") /* ty=Tensor[(297), float64] */;
  %332 = reshape(%331, newshape=[297]) /* ty=Tensor[(297), float64] */;
  %333 = @func_17221(%332) /* ty=(Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(440), float32], Tensor[(297), float64]) */;
  %334 = %330.0;
  %335 = %333.0;
  (%334, %335, meta[relay.Constant][9] /* ty=Tensor[(297), float64] */)
}

def @func_19303() -> (Tensor[(11, 5, 8), float32],) {
  %336 = @func_9740() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %337 = %336.0;
  (%337,)
}

def @func_6545() -> Tensor[(440), float32] {
  @func_5254() /* ty=Tensor[(440), float32] */
}

def @func_7185() -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float64]) {
  %344 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float64]) {
    %338 = @func_4151() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) */;
    %339 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
    %340 = %339.1;
    %341 = cast(%340, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
    %342 = %338.0;
    %343 = acosh(%341) /* ty=Tensor[(110, 4), float64] */;
    (%342, %343)
  };
  %344() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float64]) */
}

def @func_13530() -> (Tensor[(?, 16, 10), int8],) {
  %352 = fn () -> (Tensor[(?, 16, 10), int8],) {
    %345 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 10), float32] */;
    %346 = sigmoid(%345) /* ty=Tensor[(1, 16, 10), float32] */;
    %347 = cast(%346, dtype="int8") /* ty=Tensor[(1, 16, 10), int8] */;
    %348 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(1, 16, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %349 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 16, 10), float32] */, dtype="int8") /* ty=Tensor[(1, 16, 10), int8] */;
    %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %351 = left_shift(%349, %350) /* ty=Tensor[(?, 16, 10), int8] */;
    (%351,)
  };
  %352() /* ty=(Tensor[(?, 16, 10), int8],) */
}

def @func_4167() -> Tensor[(110, 4), float32] {
  %354 = fn () -> Tensor[(110, 4), float32] {
    %353 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %353.2
  };
  %354() /* ty=Tensor[(110, 4), float32] */
}

def @func_11964() -> (Tensor[(6, 10, 13), float32],) {
  @func_11962() /* ty=(Tensor[(6, 10, 13), float32],) */
}

def @func_7750(%var_7721: float64, %var_7722: Tensor[(1, 10, 9), float64], %var_7740: Tensor[(2, 10, 9), bool]) -> (Tensor[(1, 10, 9), float64], Tensor[(2, 10, 9), int16], Tensor[(1, 10, 9), float64]) {
  %355 = cast(%var_7721, dtype="float64") /* ty=float64 */;
  %356 = cast(%var_7722, dtype="float64") /* ty=Tensor[(1, 10, 9), float64] */;
  %357 = cast(%var_7722, dtype="bool") /* ty=Tensor[(1, 10, 9), bool] */;
  %358 = cast(%var_7721, dtype="bool") /* ty=bool */;
  %359 = logical_and(%357, %358) /* ty=Tensor[(1, 10, 9), bool] */;
  %360 = cast(%359, dtype="int16") /* ty=Tensor[(1, 10, 9), int16] */;
  %361 = cast(%var_7740, dtype="int16") /* ty=Tensor[(2, 10, 9), int16] */;
  %362 = cast(%var_7722, dtype="float64") /* ty=Tensor[(1, 10, 9), float64] */;
  %363 = mod(%355, %356) /* ty=Tensor[(1, 10, 9), float64] */;
  %364 = maximum(%360, %361) /* ty=Tensor[(2, 10, 9), int16] */;
  %365 = erf(%362) /* ty=Tensor[(1, 10, 9), float64] */;
  (%363, %364, %365)
}

def @func_12025() -> Tensor[(6, 10, 13), float32] {
  %367 = fn () -> Tensor[(6, 10, 13), float32] {
    %366 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
    %366.3
  };
  %367() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_17522() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64]) {
  %368 = @func_10776() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %369 = %368.1;
  %370 = @func_16472() /* ty=Tensor[(6, 10, 13), float64] */;
  (%369, %370)
}

def @func_7166() -> (Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(8, 52), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) {
  %385 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(8, 52), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) {
    %371 = @func_5342() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
    %372 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 52), float64] */, dtype="float64") /* ty=Tensor[(8, 52), float64] */;
    %373 = reshape(%372, newshape=[416]) /* ty=Tensor[(416), float64] */;
    %374 = @func_5133(%373) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(26), float64], Tensor[(416), float64]) */;
    %375 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 52), float64] */, dtype="float32") /* ty=Tensor[(8, 52), float32] */;
    %376 = asin(%375) /* ty=Tensor[(8, 52), float32] */;
    %377 = cast(%376, dtype="float32") /* ty=Tensor[(8, 52), float32] */;
    %378 = @func_4977() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */;
    %379 = @func_4977() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */;
    %380 = %371.1;
    %381 = %374.1;
    %382 = acos(%377) /* ty=Tensor[(8, 52), float32] */;
    %383 = %378.0;
    %384 = %379.0;
    (%380, %381, %382, %383, %384)
  };
  %385() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(8, 52), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_8737() -> (Tensor[(6, 10, 13), float64],) {
  %386 = @func_2927() /* ty=Tensor[(6, 10, 13), float64] */;
  (%386,)
}

def @func_7539() -> Tensor[(6, 10, 13), float64] {
  @func_7537() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_1559() -> (Tensor[(6, 10, 13), float64],) {
  %387 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %388 = %387.0;
  %389 = cast(%388, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
  %390 = tan(%389) /* ty=Tensor[(6, 10, 13), float64] */;
  (%390,)
}

def @func_8705(%var_8699: Tensor[(15, 13, 6), float32], %var_8700: Tensor[(15, 13, 6), float32]) -> (Tensor[(15, 13, 6), float32],) {
  %391 = cast(%var_8700, dtype="float32") /* ty=Tensor[(15, 13, 6), float32] */;
  %392 = shape_of(%var_8699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%var_8699, dtype="float32") /* ty=Tensor[(15, 13, 6), float32] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %395 = divide(%393, %394) /* ty=Tensor[(15, 13, 6), float32] */;
  (%395,)
}

def @func_10867() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %396 = @func_6727() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %397 = @func_10391() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) */;
  %398 = %396.0;
  %399 = %397.0;
  (%398, %399)
}

def @func_9876() -> Tensor[(11, 5, 8), float32] {
  %400 = fn () -> Tensor[(11, 5, 8), float32] {
    @func_2490() /* ty=Tensor[(11, 5, 8), float32] */
  };
  %400() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_11185(%var_11131: Tensor[(6, 10, 13), float32]) -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), bool], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %401 = @func_8590() /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %402 = @func_3777() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %403 = %402.2;
  %404 = cast(%var_11131, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
  %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(%403, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %408 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %409 = %401.2;
  %410 = not_equal(%406, %407) /* ty=Tensor[(6, 10, 13), bool] */;
  %411 = @func_6166() /* ty=Tensor[(11, 5, 8), float32] */;
  %412 = %408.3;
  (%409, %410, %411, %412)
}

def @func_2025(%var_2024: Tensor[(39, 7), int64]) -> (Tensor[(11, 5, 8), int64], Tensor[(440), float32], Tensor[(39, 7), int64]) {
  %424 = fn (%var_2014: Tensor[(39, 7), int64]) -> (Tensor[(11, 5, 8), int64], Tensor[(440), float32], Tensor[(39, 7), int64]) {
    %413 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %414 = %413.1;
    %415 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 5, 8), float32] */, dtype="int64") /* ty=Tensor[(11, 5, 8), int64] */;
    %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
    %417 = cast(%414, dtype="int64") /* ty=Tensor[(11, 5, 8), int64] */;
    %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %419 = cast(%var_2014, dtype="int64") /* ty=Tensor[(39, 7), int64] */;
    %420 = reshape(%419, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), int64] */;
    %421 = @func_1948(%420) /* ty=(Tensor[(13, 7, 3), int8], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(6, 10, 13), float32]) */;
    %422 = multiply(%417, %418) /* ty=Tensor[(11, 5, 8), int64] */;
    %423 = %421.2;
    (%422, %423, %var_2014)
  };
  %424(%var_2024) /* ty=(Tensor[(11, 5, 8), int64], Tensor[(440), float32], Tensor[(39, 7), int64]) */
}

def @func_17577() -> (Tensor[(11, 5, 8), float32],) {
  %426 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %425 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
    (%425,)
  };
  %426() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_18327() -> (Tensor[(6, 10, 13), float32],) {
  %428 = fn () -> (Tensor[(6, 10, 13), float32],) {
    %427 = @func_4902() /* ty=Tensor[(6, 10, 13), float32] */;
    (%427,)
  };
  %428() /* ty=(Tensor[(6, 10, 13), float32],) */
}

def @func_3159() -> Tensor[(11, 5, 8), float32] {
  %429 = fn () -> Tensor[(11, 5, 8), float32] {
    @func_2659() /* ty=Tensor[(11, 5, 8), float32] */
  };
  %429() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_5254() -> Tensor[(440), float32] {
  %430 = @func_3809() /* ty=(Tensor[(440), float32],) */;
  %430.0
}

def @func_1540() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) {
  @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */
}

def @func_12384() -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64]) {
  %431 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %432 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %433 = %431.0;
  %434 = %432.0;
  (%433, %434)
}

def @func_18492() -> Tensor[(6, 10, 13), float32] {
  %436 = fn () -> Tensor[(6, 10, 13), float32] {
    %435 = @func_12424() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
    %435.1
  };
  %436() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_7679(%var_7678: Tensor[(2535), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64]) {
  %447 = fn (%var_7657: Tensor[(2535), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64]) {
    %437 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %438 = @func_6434() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %439 = cast(-9.10323f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %440 = cast(%var_7657, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %441 = reshape(%439, newshape=[]) /* ty=float64 */;
    %442 = reshape(%440, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
    %443 = @func_4055(%441, %442) /* ty=(Tensor[(13, 13, 15), bool],) */;
    %444 = %437.0;
    %445 = %438.0;
    %446 = %443.0;
    (%444, %445, %446, -9.10323f64 /* ty=float64 */, %var_7657)
  };
  %447(%var_7678) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64]) */
}

def @func_13972() -> Tensor[(6, 10, 13), float64] {
  @func_13970() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_7273() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  @func_7271() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_12424() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %448 = @func_9740() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %449 = @func_3777() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %450 = %448.1;
  %451 = %449.2;
  (%450, %451)
}

def @func_1702() -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) {
  @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_19011() -> Tensor[(11, 5, 8), float32] {
  %453 = fn () -> Tensor[(11, 5, 8), float32] {
    %452 = @func_8695() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
    %452.2
  };
  %453() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_10499(%var_10498: Tensor[(273), int64]) -> (Tensor[(6, 10, 13), float64], uint32, Tensor[(16, 12, 9), uint32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) {
  %475 = fn (%var_10495: Tensor[(273), int64]) -> (Tensor[(6, 10, 13), float64], uint32, Tensor[(16, 12, 9), uint32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) {
    %454 = cast(meta[relay.Constant][13] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %455 = cast(meta[relay.Constant][14] /* ty=Tensor[(1728), uint32] */, dtype="uint32") /* ty=Tensor[(1728), uint32] */;
    %456 = reshape(%454, newshape=[]) /* ty=uint32 */;
    %457 = reshape(%455, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint32] */;
    %458 = @func_3125(%456, %457) /* ty=(Tensor[(16, 12, 9), uint32],) */;
    %459 = %458.0;
    %460 = cast(meta[relay.Constant][14] /* ty=Tensor[(1728), uint32] */, dtype="uint32") /* ty=Tensor[(1728), uint32] */;
    %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
    %462 = cast(%459, dtype="uint32") /* ty=Tensor[(16, 12, 9), uint32] */;
    %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %464 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %465 = @func_5342() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
    %466 = cast(%var_10495, dtype="int64") /* ty=Tensor[(273), int64] */;
    %467 = reshape(%466, newshape=[273]) /* ty=Tensor[(273), int64] */;
    %468 = @func_5758(%467) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) */;
    %469 = @func_5036() /* ty=Tensor[(6, 10, 13), float64] */;
    %470 = right_shift(%462, %463) /* ty=Tensor[(16, 12, 9), uint32] */;
    %471 = %464.0;
    %472 = %465.1;
    %473 = @func_7383() /* ty=Tensor[(11, 5, 8), float32] */;
    %474 = %468.0;
    (%469, meta[relay.Constant][13] /* ty=uint32 */, %470, %471, %472, %473, %474, %var_10495)
  };
  %475(%var_10498) /* ty=(Tensor[(6, 10, 13), float64], uint32, Tensor[(16, 12, 9), uint32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) */
}

def @func_16559() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) {
  %476 = @func_6727() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %477 = cast(meta[relay.Constant][15] /* ty=Tensor[(273), int64] */, dtype="int64") /* ty=Tensor[(273), int64] */;
  %478 = reshape(%477, newshape=[273]) /* ty=Tensor[(273), int64] */;
  %479 = @func_6524(%478) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 7, 3), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %480 = %476.0;
  %481 = %479.2;
  (%480, %481, meta[relay.Constant][15] /* ty=Tensor[(273), int64] */)
}

def @func_14044() -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(26), float64], Tensor[(416), float64], Tensor[(6, 10, 13), float32]) {
  %482 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %483 = cast(meta[relay.Constant][16] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %484 = reshape(%483, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %485 = @func_5133(%484) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(26), float64], Tensor[(416), float64]) */;
  %486 = @func_12932() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %487 = @func_10039() /* ty=Tensor[(6, 10, 13), float64] */;
  %488 = %482.0;
  %489 = %485.2;
  %490 = %486.0;
  (%487, %488, %489, meta[relay.Constant][16] /* ty=Tensor[(416), float64] */, %490)
}

def @func_14393(%var_14391: Tensor[(252, 2), uint16]) -> (Tensor[(110, 4), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 6, 14), uint16], Tensor[(252, 2), uint16]) {
  @func_14390(%var_14391) /* ty=(Tensor[(110, 4), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 6, 14), uint16], Tensor[(252, 2), uint16]) */
}

def @func_3107(%var_3105: Tensor[(16, 7, 6), bool], %var_3106: Tensor[(16, 7, 6), bool]) -> (Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), int16], Tensor[(440), float32]) {
  @func_3103(%var_3105, %var_3106) /* ty=(Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), int16], Tensor[(440), float32]) */
}

def @func_13558() -> Tensor[(6, 10, 13), float32] {
  %491 = @func_9318() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %491.0
}

def @func_5760(%var_5759: Tensor[(273), int64]) -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) {
  %497 = fn (%var_5754: Tensor[(273), int64]) -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) {
    %492 = cast(%var_5754, dtype="int64") /* ty=Tensor[(273), int64] */;
    %493 = reshape(%492, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), int64] */;
    %494 = @func_1948(%493) /* ty=(Tensor[(13, 7, 3), int8], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(6, 10, 13), float32]) */;
    %495 = @func_2490() /* ty=Tensor[(11, 5, 8), float32] */;
    %496 = %494.1;
    (%495, %496, %var_5754)
  };
  %497(%var_5759) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) */
}

def @func_15342() -> Tensor[(11, 5, 8), float32] {
  %498 = @func_8957() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %498.0
}

def @func_4523() -> Tensor[(11, 5, 8), float32] {
  @func_4521() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_15287() -> (Tensor[(9, 7, 9), float64], Tensor[(11, 5, 8), float32]) {
  %499 = @func_9641() /* ty=(Tensor[(9, 7, 9), bool],) */;
  %500 = %499.0;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(9, 7, 9), float64] */;
  %502 = @func_13163() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %503 = sinh(%501) /* ty=Tensor[(9, 7, 9), float64] */;
  %504 = %502.1;
  (%503, %504)
}

def @func_17315() -> (Tensor[(6, 10, 13), float64], Tensor[(4, 9, 12), bool], Tensor[(432), float64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) {
  %505 = @func_14858() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %506 = cast(meta[relay.Constant][17] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %507 = cast(meta[relay.Constant][17] /* ty=Tensor[(432), float64] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %508 = reshape(%506, newshape=[4, 9, 12]) /* ty=Tensor[(4, 9, 12), float64] */;
  %509 = reshape(%507, newshape=[4, 9, 12]) /* ty=Tensor[(4, 9, 12), float32] */;
  %510 = @func_9176(%508, %509) /* ty=(Tensor[(4, 9, 12), int16], Tensor[(11, 5, 8), float32], Tensor[(4, 9, 12), float64], Tensor[(4, 9, 12), bool]) */;
  %511 = @func_12226() /* ty=(Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(15, 7, 8), int64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) */;
  %512 = @func_16678() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %513 = %505.1;
  %514 = %510.3;
  %515 = %511.3;
  %516 = %512.0;
  (%513, %514, meta[relay.Constant][17] /* ty=Tensor[(432), float64] */, %515, %516)
}

def @func_9641() -> (Tensor[(9, 7, 9), bool],) {
  %517 = cast(meta[relay.Constant][18] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %518 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 7, 9), int8] */, dtype="bool") /* ty=Tensor[(9, 7, 9), bool] */;
  %519 = less_equal(%517, %518) /* ty=Tensor[(9, 7, 9), bool] */;
  (%519,)
}

def @func_11552() -> (Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64]) {
  @func_11550() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64]) */
}

def @func_16473() -> Tensor[(6, 10, 13), float64] {
  %521 = fn () -> Tensor[(6, 10, 13), float64] {
    %520 = @func_2827() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %520.0
  };
  %521() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_17026() -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) {
  %522 = @func_8298() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], int8, Tensor[(210), int8]) */;
  %523 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %524 = %522.0;
  %525 = %523.2;
  (%524, %525)
}

def @func_4993() -> Tensor[(6, 10, 13), float32] {
  %527 = fn () -> Tensor[(6, 10, 13), float32] {
    %526 = @func_4038() /* ty=(Tensor[(6, 10, 13), float32],) */;
    %526.0
  };
  %527() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_9563() -> (Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64], Tensor[(11, 5, 8), float64]) {
  %528 = @func_8695() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %529 = @func_6337() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float64]) */;
  %530 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  %531 = %528.0;
  %532 = %529.2;
  (%530, %531, %532)
}

def @func_17869() -> (Tensor[(440), float32], Tensor[(3, 99), float64], Tensor[(3, 99), float64]) {
  %541 = fn () -> (Tensor[(440), float32], Tensor[(3, 99), float64], Tensor[(3, 99), float64]) {
    %533 = @func_4687() /* ty=(Tensor[(440), float32],) */;
    %534 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 99), float64] */, dtype="float64") /* ty=Tensor[(3, 99), float64] */;
    %535 = reshape(%534, newshape=[3, 99]) /* ty=Tensor[(3, 99), float64] */;
    %536 = @func_8374(%535) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(3, 99), float64]) */;
    %537 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 99), float64] */, dtype="float64") /* ty=Tensor[(3, 99), float64] */;
    %538 = %533.0;
    %539 = %536.5;
    %540 = sinh(%537) /* ty=Tensor[(3, 99), float64] */;
    (%538, %539, %540)
  };
  %541() /* ty=(Tensor[(440), float32], Tensor[(3, 99), float64], Tensor[(3, 99), float64]) */
}

def @func_4935(%var_4933: Tensor[(273), int64]) -> (Tensor[(11, 5, 8), float32], Tensor[(13, 7, 3), float32], Tensor[(273), int64]) {
  @func_4932(%var_4933) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(13, 7, 3), float32], Tensor[(273), int64]) */
}

def @func_18765() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %545 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
    %542 = @func_11550() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64]) */;
    %543 = @func_2490() /* ty=Tensor[(11, 5, 8), float32] */;
    %544 = %542.0;
    (%543, %544)
  };
  %545() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_2434() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
  %551 = fn () -> (Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
    %546 = @func_2207() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
    %547 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
    %548 = %546.0;
    %549 = %547.1;
    %550 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
    (%548, %549, %550)
  };
  %551() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_5136(%var_5134: Tensor[(416), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(26), float64], Tensor[(416), float64]) {
  @func_5133(%var_5134) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(26), float64], Tensor[(416), float64]) */
}

def @func_15413(%var_15411: uint8, %var_15412: Tensor[(1, 16, 10), uint8]) -> (Tensor[(1, 16, 10), uint8], Tensor[(11, 5, 8), float32]) {
  %557 = fn (%var_15399: uint8, %var_15400: Tensor[(1, 16, 10), uint8]) -> (Tensor[(1, 16, 10), uint8], Tensor[(11, 5, 8), float32]) {
    %552 = cast(%var_15399, dtype="uint8") /* ty=uint8 */;
    %553 = cast(%var_15400, dtype="uint8") /* ty=Tensor[(1, 16, 10), uint8] */;
    %554 = @func_9091() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %555 = bitwise_xor(%552, %553) /* ty=Tensor[(1, 16, 10), uint8] */;
    %556 = %554.1;
    (%555, %556)
  };
  %557(%var_15411, %var_15412) /* ty=(Tensor[(1, 16, 10), uint8], Tensor[(11, 5, 8), float32]) */
}

def @func_7221() -> Tensor[(440), float32] {
  %559 = fn () -> Tensor[(440), float32] {
    %558 = @func_3809() /* ty=(Tensor[(440), float32],) */;
    %558.0
  };
  %559() /* ty=Tensor[(440), float32] */
}

def @func_4152() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) {
  %563 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) {
    %560 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %561 = %560.0;
    %562 = @func_2927() /* ty=Tensor[(6, 10, 13), float64] */;
    (%561, %562)
  };
  %563() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) */
}

def @func_6435() -> (Tensor[(11, 5, 8), float32],) {
  %566 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %564 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %565 = %564.0;
    (%565,)
  };
  %566() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_14985() -> Tensor[(6, 10, 13), float64] {
  %567 = fn () -> Tensor[(6, 10, 13), float64] {
    @func_7537() /* ty=Tensor[(6, 10, 13), float64] */
  };
  %567() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_3841(%var_3840: Tensor[(15, 7, 8), int64]) -> Tensor[(15, 7, 8), int64] {
  %572 = fn (%var_3833: Tensor[(15, 7, 8), int64]) -> Tensor[(15, 7, 8), int64] {
    %568 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 7, 8), int64] */, dtype="int64") /* ty=Tensor[(15, 7, 8), int64] */;
    %569 = shape_of(%var_3833, dtype="int32") /* ty=Tensor[(3), int32] */;
    %570 = cast(%var_3833, dtype="int64") /* ty=Tensor[(15, 7, 8), int64] */;
    %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    left_shift(%570, %571) /* ty=Tensor[(15, 7, 8), int64] */
  };
  %572(%var_3840) /* ty=Tensor[(15, 7, 8), int64] */
}

def @func_3103(%var_3079: Tensor[(16, 7, 6), bool], %var_3080: Tensor[(16, 7, 6), bool]) -> (Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), int16], Tensor[(440), float32]) {
  %573 = cast(%var_3080, dtype="bool") /* ty=Tensor[(16, 7, 6), bool] */;
  %574 = shape_of(%var_3079, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%var_3079, dtype="bool") /* ty=Tensor[(16, 7, 6), bool] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %577 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 7, 6), bool] */, dtype="int16") /* ty=Tensor[(16, 7, 6), int16] */;
  %578 = shape_of(%var_3079, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%var_3079, dtype="int16") /* ty=Tensor[(16, 7, 6), int16] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %581 = @func_2326() /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %582 = logical_or(%575, %576) /* ty=Tensor[(16, 7, 6), bool] */;
  %583 = bitwise_xor(%579, %580) /* ty=Tensor[(16, 7, 6), int16] */;
  %584 = %581.0;
  (%582, %583, %584)
}

def @func_3932() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %588 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
    %585 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
    %586 = @func_2692() /* ty=Tensor[(11, 5, 8), float32] */;
    %587 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
    (%585, %586, %587)
  };
  %588() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_14620() -> (Tensor[(6, 10, 13), float32],) {
  @func_14618() /* ty=(Tensor[(6, 10, 13), float32],) */
}

def @func_12984() -> (Tensor[(11, 5, 8), float32],) {
  @func_12982() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @main(%var_20479: Tensor[(1, 14, 12), float32]) -> Tensor[(1, 14, 12), float32] {
  %589 = cast(%var_20479, dtype="float32") /* ty=Tensor[(1, 14, 12), float32] */;
  log2(%589) /* ty=Tensor[(1, 14, 12), float32] */
}

def @func_9320() -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  @func_9318() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_6602() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float64]) {
  %590 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %591 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %592 = @func_4687() /* ty=(Tensor[(440), float32],) */;
  %593 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
  %594 = %590.2;
  %595 = @func_2692() /* ty=Tensor[(11, 5, 8), float32] */;
  %596 = %591.0;
  %597 = %592.0;
  %598 = @func_5036() /* ty=Tensor[(6, 10, 13), float64] */;
  (%593, %594, %595, %596, %597, %598)
}

def @func_5970(%var_5956: Tensor[(273), int64]) -> (Tensor[(440), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(273), int64]) {
  %599 = @func_5540() /* ty=(Tensor[(440), float32],) */;
  %600 = @func_4687() /* ty=(Tensor[(440), float32],) */;
  %601 = cast(%var_5956, dtype="int64") /* ty=Tensor[(273), int64] */;
  %602 = reshape(%601, newshape=[273]) /* ty=Tensor[(273), int64] */;
  %603 = @func_4932(%602) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(13, 7, 3), float32], Tensor[(273), int64]) */;
  %604 = %599.0;
  %605 = %600.0;
  %606 = %603.1;
  (%604, %605, %606, %var_5956)
}

def @func_16406() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float32]) {
  @func_16404() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_6527(%var_6525: Tensor[(273), int64]) -> (Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 7, 3), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  @func_6524(%var_6525) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 7, 3), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_10987() -> (Tensor[(11, 5, 8), float32], Tensor[(440), uint8], Tensor[(6, 10, 13), float64]) {
  %612 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(440), uint8], Tensor[(6, 10, 13), float64]) {
    %607 = @func_10339() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(440), uint8]) */;
    %608 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %609 = @func_3158() /* ty=Tensor[(11, 5, 8), float32] */;
    %610 = %607.1;
    %611 = %608.0;
    (%609, %610, %611)
  };
  %612() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), uint8], Tensor[(6, 10, 13), float64]) */
}

def @func_2620() -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %626 = fn () -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
    %613 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %614 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %615 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
    %616 = %615.0;
    %617 = cast(%616, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
    %618 = tan(%617) /* ty=Tensor[(11, 5, 8), float32] */;
    %619 = cast(%618, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
    %620 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %621 = %613.0;
    %622 = %614.0;
    %623 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
    %624 = asin(%619) /* ty=Tensor[(11, 5, 8), float32] */;
    %625 = %620.0;
    (%621, %622, %623, %624, %625)
  };
  %626() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_14297() -> Tensor[(6, 10, 13), float32] {
  %627 = @func_13925() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */;
  %627.1
}

def @func_19576() -> (Tensor[(6, 10, 13), float64],) {
  %629 = fn () -> (Tensor[(6, 10, 13), float64],) {
    %628 = @func_6272() /* ty=Tensor[(6, 10, 13), float64] */;
    (%628,)
  };
  %629() /* ty=(Tensor[(6, 10, 13), float64],) */
}

def @func_1538() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) {
  %630 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 13), float32] */;
  %631 = cast(meta[relay.Constant][24] /* ty=Tensor[(110, 4), float32] */, dtype="float32") /* ty=Tensor[(110, 4), float32] */;
  %632 = reshape(%631, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %633 = asinh(%630) /* ty=Tensor[(6, 10, 13), float32] */;
  %634 = @func_890(%632) /* ty=Tensor[(11, 5, 8), float32] */;
  (%633, %634, meta[relay.Constant][24] /* ty=Tensor[(110, 4), float32] */)
}

def @func_18390() -> (Tensor[(12, 70), int64], Tensor[(6, 10, 13), float64]) {
  %639 = fn () -> (Tensor[(12, 70), int64], Tensor[(6, 10, 13), float64]) {
    %635 = @func_12226() /* ty=(Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(15, 7, 8), int64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) */;
    %636 = @func_10555() /* ty=(Tensor[(9, 7, 9), bool], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(624), float64]) */;
    %637 = %635.3;
    %638 = %636.1;
    (%637, %638)
  };
  %639() /* ty=(Tensor[(12, 70), int64], Tensor[(6, 10, 13), float64]) */
}

def @func_20354() -> (Tensor[(11, 5, 8), float64], Tensor[(440), float32]) {
  %644 = fn () -> (Tensor[(11, 5, 8), float64], Tensor[(440), float32]) {
    %640 = @func_6337() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float64]) */;
    %641 = @func_8695() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
    %642 = %640.2;
    %643 = %641.1;
    (%642, %643)
  };
  %644() /* ty=(Tensor[(11, 5, 8), float64], Tensor[(440), float32]) */
}

def @func_4186() -> Tensor[(11, 5, 8), float32] {
  %645 = @func_1639() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %645.1
}

def @func_3286(%var_3284: Tensor[(1, 13, 2), float64], %var_3285: Tensor[(16, 13, 2), float64]) -> (Tensor[(1, 13, 2), float32], Tensor[(16, 13, 2), float64]) {
  %653 = fn (%var_3253: Tensor[(1, 13, 2), float64], %var_3273: Tensor[(16, 13, 2), float64]) -> (Tensor[(1, 13, 2), float32], Tensor[(16, 13, 2), float64]) {
    %646 = cast(%var_3253, dtype="float32") /* ty=Tensor[(1, 13, 2), float32] */;
    %647 = cast(%var_3253, dtype="float64") /* ty=Tensor[(1, 13, 2), float64] */;
    %648 = log10(%647) /* ty=Tensor[(1, 13, 2), float64] */;
    %649 = cast(%648, dtype="float64") /* ty=Tensor[(1, 13, 2), float64] */;
    %650 = cast(%var_3273, dtype="float64") /* ty=Tensor[(16, 13, 2), float64] */;
    %651 = tan(%646) /* ty=Tensor[(1, 13, 2), float32] */;
    %652 = floor_divide(%649, %650) /* ty=Tensor[(16, 13, 2), float64] */;
    (%651, %652)
  };
  %653(%var_3284, %var_3285) /* ty=(Tensor[(1, 13, 2), float32], Tensor[(16, 13, 2), float64]) */
}

def @func_19792(%var_19777: Tensor[(3, 7, 10), float64]) -> Tensor[(3, 7, 10), float64] {
  %654 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 7, 10), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 10), float64] */;
  %655 = shape_of(%var_19777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%var_19777, dtype="float64") /* ty=Tensor[(3, 7, 10), float64] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%656, %657) /* ty=Tensor[(3, 7, 10), float64] */
}

def @func_2907(%var_2906: Tensor[(4, 1, 4), float32]) -> (Tensor[(4, 1, 4), float32], Tensor[(11, 5, 8), float32]) {
  %661 = fn (%var_2896: Tensor[(4, 1, 4), float32]) -> (Tensor[(4, 1, 4), float32], Tensor[(11, 5, 8), float32]) {
    %658 = cast(%var_2896, dtype="float32") /* ty=Tensor[(4, 1, 4), float32] */;
    %659 = asinh(%658) /* ty=Tensor[(4, 1, 4), float32] */;
    %660 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
    (%659, %660)
  };
  %661(%var_2906) /* ty=(Tensor[(4, 1, 4), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_18405() -> Tensor[(9, 1, 15), float32] {
  %662 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 1, 15), float32] */;
  atanh(%662) /* ty=Tensor[(9, 1, 15), float32] */
}

def @func_19666(%var_19665: Tensor[(65), float64]) -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(65), float64], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
  %672 = fn (%var_19598: Tensor[(65), float64]) -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(65), float64], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
    %663 = cast(%var_19598, dtype="float64") /* ty=Tensor[(65), float64] */;
    %664 = reshape(%663, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), float64] */;
    %665 = @func_6794(%664) /* ty=(Tensor[(5, 1, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %666 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
    %667 = @func_13502() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %668 = @func_12045() /* ty=Tensor[(6, 10, 13), float32] */;
    %669 = %665.2;
    %670 = %666.0;
    %671 = %667.0;
    (%668, %669, %var_19598, %670, %671)
  };
  %672(%var_19665) /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(65), float64], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_5925() -> (Tensor[(11, 5, 8), float32],) {
  %673 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
  (%673,)
}

def @func_11819() -> Tensor[(6, 10, 13), float32] {
  %674 = @func_3777() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %674.0
}

def @func_9751() -> Tensor[(440), float32] {
  @func_9749() /* ty=Tensor[(440), float32] */
}

def @func_4273(%var_4203: int8, %var_4204: Tensor[(10, 3, 7), int8]) -> (Tensor[(10, 3, 7), bool], Tensor[(6, 10, 13), float32], Tensor[(440), float32]) {
  %675 = cast(%var_4203, dtype="bool") /* ty=bool */;
  %676 = cast(%var_4204, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %677 = @func_4038() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %678 = equal(%675, %676) /* ty=Tensor[(10, 3, 7), bool] */;
  %679 = %677.0;
  %680 = @func_3516() /* ty=Tensor[(440), float32] */;
  (%678, %679, %680)
}

def @func_7103() -> (Tensor[(6, 10, 13), float32],) {
  %683 = fn () -> (Tensor[(6, 10, 13), float32],) {
    %681 = @func_5342() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
    %682 = %681.0;
    (%682,)
  };
  %683() /* ty=(Tensor[(6, 10, 13), float32],) */
}

def @func_19370() -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(297), float64]) {
  @func_19368() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(297), float64]) */
}

def @func_18612() -> (Tensor[(11, 5, 8), float32],) {
  @func_18610() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_6168() -> Tensor[(11, 5, 8), float32] {
  @func_6166() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_19060() -> Tensor[(11, 5, 8), float32] {
  @func_17485() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_1885() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %684 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %685 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %686 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %687 = %684.1;
  %688 = cast(%687, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %689 = reshape(%688, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %690 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  %691 = %685.0;
  %692 = %686.2;
  %693 = @func_890(%689) /* ty=Tensor[(11, 5, 8), float32] */;
  (%687, %690, %691, %692, %693)
}

def @func_6647(%var_6639: Tensor[(16, 1, 3), float64], %var_6640: Tensor[(16, 6, 3), float64]) -> Tensor[(16, 6, 3), float64] {
  %694 = cast(%var_6639, dtype="float64") /* ty=Tensor[(16, 1, 3), float64] */;
  %695 = cast(%var_6640, dtype="float64") /* ty=Tensor[(16, 6, 3), float64] */;
  mod(%694, %695) /* ty=Tensor[(16, 6, 3), float64] */
}

def @func_17095() -> Tensor[(440), float32] {
  @func_17093() /* ty=Tensor[(440), float32] */
}

def @func_8234() -> Tensor[(110, 4), float32] {
  %697 = fn () -> Tensor[(110, 4), float32] {
    %696 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %696.2
  };
  %697() /* ty=Tensor[(110, 4), float32] */
}

def @func_11893() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %698 = @func_3831() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %699 = @func_7700() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %700 = %698.0;
  %701 = %699.0;
  (%700, %701)
}

def @func_13833() -> (Tensor[(440), uint8], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(110, 4), float32]) {
  %702 = @func_10339() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(440), uint8]) */;
  %703 = @func_12077() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %704 = @func_7165() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(8, 52), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %705 = @func_13029() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %706 = @func_11789() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %707 = @func_11550() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64]) */;
  %708 = %707.1;
  %709 = cast(%708, dtype="float32") /* ty=Tensor[(2, 3, 6), float32] */;
  %710 = log2(%709) /* ty=Tensor[(2, 3, 6), float32] */;
  %711 = cast(%710, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %712 = tan(%711) /* ty=Tensor[(2, 3, 6), float64] */;
  %713 = cast(%710, dtype="int32") /* ty=Tensor[(2, 3, 6), int32] */;
  %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(%712, dtype="int32") /* ty=Tensor[(2, 3, 6), int32] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %717 = @func_4977() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */;
  %718 = %702.1;
  %719 = @func_11925() /* ty=Tensor[(6, 10, 13), float32] */;
  %720 = %703.0;
  %721 = %704.4;
  %722 = %705.0;
  %723 = %706.3;
  %724 = logical_xor(%715, %716) /* ty=Tensor[(2, 3, 6), int32] */;
  %725 = %717.1;
  (%718, %719, %720, %721, %722, %723, %724, %725)
}

def @func_17224(%var_17222: Tensor[(297), float64]) -> (Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(440), float32], Tensor[(297), float64]) {
  @func_17221(%var_17222) /* ty=(Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(440), float32], Tensor[(297), float64]) */
}

def @func_2326() -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %726 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %727 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  %728 = cast(%727, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  %729 = reshape(%728, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %730 = %726.2;
  %731 = @func_890(%729) /* ty=Tensor[(11, 5, 8), float32] */;
  (%730, %727, %731)
}

def @func_12141() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %732 = @func_8737() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %733 = @func_11329() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32]) */;
  %734 = @func_3158() /* ty=Tensor[(11, 5, 8), float32] */;
  %735 = %732.0;
  %736 = %733.3;
  %737 = @func_9875() /* ty=Tensor[(11, 5, 8), float32] */;
  (%734, %735, %736, %737)
}

def @func_7383() -> Tensor[(11, 5, 8), float32] {
  %738 = @func_3309() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %738.0
}

def @func_8709(%var_8707: Tensor[(15, 13, 6), float32], %var_8708: Tensor[(15, 13, 6), float32]) -> (Tensor[(15, 13, 6), float32],) {
  @func_8705(%var_8707, %var_8708) /* ty=(Tensor[(15, 13, 6), float32],) */
}

def @func_6796(%var_6795: Tensor[(5, 1, 13), float64]) -> (Tensor[(5, 1, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %744 = fn (%var_6769: Tensor[(5, 1, 13), float64]) -> (Tensor[(5, 1, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
    %739 = cast(%var_6769, dtype="float64") /* ty=Tensor[(5, 1, 13), float64] */;
    %740 = rsqrt(%739) /* ty=Tensor[(5, 1, 13), float64] */;
    %741 = @func_4186() /* ty=Tensor[(11, 5, 8), float32] */;
    %742 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
    %743 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
    (%740, %741, %742, %743)
  };
  %744(%var_6795) /* ty=(Tensor[(5, 1, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_15832(%var_15831: Tensor[(338), float64]) -> (Tensor[(9, 12, 11), bool], Tensor[(840), int64], Tensor[(338), float64], Tensor[(840), int64], Tensor[(440), float32], Tensor[(2, 3, 6), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %768 = fn (%var_15783: Tensor[(338), float64]) -> (Tensor[(9, 12, 11), bool], Tensor[(840), int64], Tensor[(338), float64], Tensor[(840), int64], Tensor[(440), float32], Tensor[(2, 3, 6), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
    %745 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 12, 11), uint16] */, dtype="bool") /* ty=Tensor[(9, 12, 11), bool] */;
    %746 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(9, 12, 11), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %747 = cast(meta[relay.Constant][27] /* ty=Tensor[(9, 12, 11), uint16] */, dtype="bool") /* ty=Tensor[(9, 12, 11), bool] */;
    %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %749 = cast(%var_15783, dtype="float64") /* ty=Tensor[(338), float64] */;
    %750 = cast(meta[relay.Constant][29] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
    %751 = reshape(%749, newshape=[338, 1]) /* ty=Tensor[(338, 1), float64] */;
    %752 = reshape(%750, newshape=[840]) /* ty=Tensor[(840), int64] */;
    %753 = @func_14590(%751, %752) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 13, 13), float64], Tensor[(338, 1), float64], Tensor[(840), int64]) */;
    %754 = @func_5540() /* ty=(Tensor[(440), float32],) */;
    %755 = @func_11550() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64]) */;
    %756 = @func_13163() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %757 = @func_13163() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %758 = @func_12141() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
    %759 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
    %760 = greater_equal(%747, %748) /* ty=Tensor[(9, 12, 11), bool] */;
    %761 = %753.3;
    %762 = %754.0;
    %763 = %755.1;
    %764 = %756.1;
    %765 = %757.0;
    %766 = %758.3;
    %767 = %759.2;
    (%760, %761, %var_15783, meta[relay.Constant][29] /* ty=Tensor[(840), int64] */, %762, %763, %764, %765, %766, %767)
  };
  %768(%var_15831) /* ty=(Tensor[(9, 12, 11), bool], Tensor[(840), int64], Tensor[(338), float64], Tensor[(840), int64], Tensor[(440), float32], Tensor[(2, 3, 6), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_7352() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32]) {
  %769 = @func_4038() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %770 = @func_4767() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %771 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %772 = @func_5540() /* ty=(Tensor[(440), float32],) */;
  %773 = %769.0;
  %774 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  %775 = %770.0;
  %776 = %771.0;
  %777 = %772.0;
  (%773, %774, %775, %776, %777)
}

def @func_4188() -> Tensor[(11, 5, 8), float32] {
  @func_4186() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_13454() -> Tensor[(6, 10, 13), float32] {
  %778 = fn () -> Tensor[(6, 10, 13), float32] {
    @func_4992() /* ty=Tensor[(6, 10, 13), float32] */
  };
  %778() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_7700() -> (Tensor[(11, 5, 8), float32],) {
  %779 = @func_2490() /* ty=Tensor[(11, 5, 8), float32] */;
  (%779,)
}

def @func_12932() -> (Tensor[(6, 10, 13), float32],) {
  %780 = @func_4038() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %781 = %780.0;
  (%781,)
}

def @func_3811() -> (Tensor[(440), float32],) {
  @func_3809() /* ty=(Tensor[(440), float32],) */
}

def @func_11188(%var_11186: Tensor[(6, 10, 13), float32]) -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), bool], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  @func_11185(%var_11186) /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), bool], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_17820() -> Tensor[(440), float32] {
  %782 = fn () -> Tensor[(440), float32] {
    @func_6960() /* ty=Tensor[(440), float32] */
  };
  %782() /* ty=Tensor[(440), float32] */
}

def @func_12386() -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64]) {
  @func_12384() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64]) */
}

def @func_3598() -> Tensor[(11, 5, 8), float32] {
  %784 = fn () -> Tensor[(11, 5, 8), float32] {
    %783 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
    %783.0
  };
  %784() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_14558(%var_14523: Tensor[(14, 5, 4), float32], %var_14524: Tensor[(14, 5, 4), float32]) -> Tensor[(14, 5, 4), float32] {
  %785 = cast(%var_14524, dtype="float32") /* ty=Tensor[(14, 5, 4), float32] */;
  %786 = shape_of(%var_14523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%var_14523, dtype="float32") /* ty=Tensor[(14, 5, 4), float32] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%787, %788) /* ty=Tensor[(14, 5, 4), float32] */
}

def @func_10018() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %789 = @func_2619() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %790 = @func_7165() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(8, 52), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %791 = %789.4;
  %792 = %790.0;
  (%791, %792)
}

def @func_19484() -> Tensor[(11, 5, 8), float32] {
  %794 = fn () -> Tensor[(11, 5, 8), float32] {
    %793 = @func_12749() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %793.0
  };
  %794() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_12888(%var_12887: Tensor[(110, 4), float32]) -> Tensor[(110, 4), int64] {
  %801 = fn (%var_12862: Tensor[(110, 4), float32]) -> Tensor[(110, 4), int64] {
    %795 = @func_4977() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */;
    %796 = %795.1;
    %797 = cast(%var_12862, dtype="int64") /* ty=Tensor[(110, 4), int64] */;
    %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(2), int32] */;
    %799 = cast(%796, dtype="int64") /* ty=Tensor[(110, 4), int64] */;
    %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    bitwise_xor(%799, %800) /* ty=Tensor[(110, 4), int64] */
  };
  %801(%var_12887) /* ty=Tensor[(110, 4), int64] */
}

def @func_4374() -> (Tensor[(11, 5, 8), float32],) {
  @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_20164() -> (Tensor[(11, 5, 8), float32],) {
  %804 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %802 = @func_12982() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %803 = %802.0;
    (%803,)
  };
  %804() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_20329() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) {
  %810 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) {
    %805 = @func_2619() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %806 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
    %807 = @func_17485() /* ty=Tensor[(11, 5, 8), float32] */;
    %808 = %805.0;
    %809 = %806.2;
    (%807, %808, %809)
  };
  %810() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */
}

def @func_13165() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  @func_13163() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_8217() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) {
  @func_8215() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */
}

def @func_12750() -> (Tensor[(11, 5, 8), float32],) {
  %812 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %811 = @func_6827() /* ty=Tensor[(11, 5, 8), float32] */;
    (%811,)
  };
  %812() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_3125(%var_3117: uint32, %var_3118: Tensor[(16, 12, 9), uint32]) -> (Tensor[(16, 12, 9), uint32],) {
  %813 = cast(%var_3117, dtype="uint32") /* ty=uint32 */;
  %814 = cast(%var_3118, dtype="uint32") /* ty=Tensor[(16, 12, 9), uint32] */;
  %815 = subtract(%813, %814) /* ty=Tensor[(16, 12, 9), uint32] */;
  (%815,)
}

def @func_13109() -> (Tensor[(11, 5, 8), float32], Tensor[(8, 13, 6), float64], Tensor[(624), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32]) {
  %816 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %817 = cast(meta[relay.Constant][30] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %818 = reshape(%817, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
  %819 = @func_6004(%818) /* ty=(Tensor[(8, 13, 6), float64], Tensor[(440), float32]) */;
  %820 = @func_9740() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %821 = @func_2128() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */;
  %822 = @func_9805() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %823 = %816.1;
  %824 = %819.0;
  %825 = %820.1;
  %826 = %821.0;
  %827 = %822.0;
  (%823, %824, meta[relay.Constant][30] /* ty=Tensor[(624), float64] */, %825, %826, %827)
}

def @func_17317() -> (Tensor[(6, 10, 13), float64], Tensor[(4, 9, 12), bool], Tensor[(432), float64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) {
  @func_17315() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(4, 9, 12), bool], Tensor[(432), float64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) */
}

def @func_4688() -> (Tensor[(440), float32],) {
  %830 = fn () -> (Tensor[(440), float32],) {
    %828 = @func_3809() /* ty=(Tensor[(440), float32],) */;
    %829 = %828.0;
    (%829,)
  };
  %830() /* ty=(Tensor[(440), float32],) */
}

def @func_10040() -> Tensor[(6, 10, 13), float64] {
  %831 = fn () -> Tensor[(6, 10, 13), float64] {
    @func_2927() /* ty=Tensor[(6, 10, 13), float64] */
  };
  %831() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_5480(%var_5367: Tensor[(11, 9, 3), float64]) -> (Tensor[(440), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(6, 10, 13), float32]) {
  %832 = cast(meta[relay.Constant][31] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %833 = reshape(%832, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %834 = @func_3246(%833) /* ty=(Tensor[(11, 5, 8), float64], Tensor[(440), float32]) */;
  %835 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %836 = cast(%var_5367, dtype="float64") /* ty=Tensor[(11, 9, 3), float64] */;
  %837 = asinh(%836) /* ty=Tensor[(11, 9, 3), float64] */;
  %838 = cast(%837, dtype="float64") /* ty=Tensor[(11, 9, 3), float64] */;
  %839 = tan(%838) /* ty=Tensor[(11, 9, 3), float64] */;
  %840 = cast(%839, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
  %841 = shape_of(%837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(%837, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %844 = @func_4977() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */;
  %845 = %834.1;
  %846 = %835.0;
  %847 = floor_divide(%842, %843) /* ty=Tensor[(11, 9, 3), float32] */;
  %848 = %844.0;
  (%845, meta[relay.Constant][31] /* ty=Tensor[(440), float32] */, %846, %847, %848)
}

def @func_5036() -> Tensor[(6, 10, 13), float64] {
  %849 = @func_2827() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %849.0
}

def @func_8299() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], int8, Tensor[(210), int8]) {
  %858 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], int8, Tensor[(210), int8]) {
    %850 = @func_4592() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %851 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %852 = cast(meta[relay.Constant][33] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
    %853 = reshape(%851, newshape=[]) /* ty=int8 */;
    %854 = reshape(%852, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), int8] */;
    %855 = @func_4273(%853, %854) /* ty=(Tensor[(10, 3, 7), bool], Tensor[(6, 10, 13), float32], Tensor[(440), float32]) */;
    %856 = %850.0;
    %857 = %855.2;
    (%856, %857, meta[relay.Constant][32] /* ty=int8 */, meta[relay.Constant][33] /* ty=Tensor[(210), int8] */)
  };
  %858() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], int8, Tensor[(210), int8]) */
}

def @func_16817() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) {
  @func_16815() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) */
}

def @func_1819() -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) {
  %867 = fn () -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) {
    %859 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %860 = cast(meta[relay.Constant][34] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
    %861 = reshape(%860, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
    %862 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %863 = %859.0;
    %864 = @func_890(%861) /* ty=Tensor[(11, 5, 8), float32] */;
    %865 = %862.0;
    %866 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
    (%863, %864, meta[relay.Constant][34] /* ty=Tensor[(440), float32] */, %865, %866)
  };
  %867() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_3129(%var_3127: uint32, %var_3128: Tensor[(16, 12, 9), uint32]) -> (Tensor[(16, 12, 9), uint32],) {
  @func_3125(%var_3127, %var_3128) /* ty=(Tensor[(16, 12, 9), uint32],) */
}

def @func_19095() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(16), float32]) {
  %874 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(16), float32]) {
    %868 = @func_11893() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %869 = cast(meta[relay.Constant][35] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %870 = reshape(%869, newshape=[4, 1, 4]) /* ty=Tensor[(4, 1, 4), float32] */;
    %871 = @func_2905(%870) /* ty=(Tensor[(4, 1, 4), float32], Tensor[(11, 5, 8), float32]) */;
    %872 = %868.0;
    %873 = %871.1;
    (%872, %873, meta[relay.Constant][35] /* ty=Tensor[(16), float32] */)
  };
  %874() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(16), float32]) */
}

def @func_16680() -> (Tensor[(11, 5, 8), float32],) {
  @func_16678() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_16768() -> (Tensor[(440), uint8],) {
  @func_16766() /* ty=(Tensor[(440), uint8],) */
}

def @func_4277(%var_4275: int8, %var_4276: Tensor[(10, 3, 7), int8]) -> (Tensor[(10, 3, 7), bool], Tensor[(6, 10, 13), float32], Tensor[(440), float32]) {
  @func_4273(%var_4275, %var_4276) /* ty=(Tensor[(10, 3, 7), bool], Tensor[(6, 10, 13), float32], Tensor[(440), float32]) */
}

def @func_4040() -> (Tensor[(6, 10, 13), float32],) {
  @func_4038() /* ty=(Tensor[(6, 10, 13), float32],) */
}

def @func_20120() -> (Tensor[(2, 3, 6), int32], Tensor[(440), float32], Tensor[(672), bool], Tensor[(11, 5, 8), float32]) {
  %885 = fn () -> (Tensor[(2, 3, 6), int32], Tensor[(440), float32], Tensor[(672), bool], Tensor[(11, 5, 8), float32]) {
    %875 = @func_13833() /* ty=(Tensor[(440), uint8], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(2, 3, 6), int32], Tensor[(110, 4), float32]) */;
    %876 = cast(meta[relay.Constant][36] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
    %877 = cast(meta[relay.Constant][36] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
    %878 = reshape(%876, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), bool] */;
    %879 = reshape(%877, newshape=[16, 7, 6]) /* ty=Tensor[(16, 7, 6), bool] */;
    %880 = @func_3103(%878, %879) /* ty=(Tensor[(16, 7, 6), bool], Tensor[(16, 7, 6), int16], Tensor[(440), float32]) */;
    %881 = @func_5925() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %882 = %875.6;
    %883 = %880.2;
    %884 = %881.0;
    (%882, %883, meta[relay.Constant][36] /* ty=Tensor[(672), bool] */, %884)
  };
  %885() /* ty=(Tensor[(2, 3, 6), int32], Tensor[(440), float32], Tensor[(672), bool], Tensor[(11, 5, 8), float32]) */
}

def @func_10339() -> (Tensor[(6, 10, 13), float32], Tensor[(440), uint8]) {
  %886 = @func_1639() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %887 = @func_5254() /* ty=Tensor[(440), float32] */;
  %888 = @func_8126() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %889 = %888.0;
  %890 = cast(%889, dtype="uint8") /* ty=Tensor[(11, 5, 8), uint8] */;
  %891 = shape_of(%887, dtype="int32") /* ty=Tensor[(1), int32] */;
  %892 = cast(%887, dtype="uint8") /* ty=Tensor[(440), uint8] */;
  %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %894 = %886.0;
  %895 = minimum(%892, %893) /* ty=Tensor[(440), uint8] */;
  (%894, %895)
}

def @func_16599() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(1, 273), int64]) {
  %902 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(1, 273), int64]) {
    %896 = @func_13029() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %897 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 273), int64] */, dtype="int64") /* ty=Tensor[(1, 273), int64] */;
    %898 = reshape(%897, newshape=[273]) /* ty=Tensor[(273), int64] */;
    %899 = @func_6524(%898) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 7, 3), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %900 = %896.0;
    %901 = %899.6;
    (%900, %901, meta[relay.Constant][37] /* ty=Tensor[(1, 273), int64] */)
  };
  %902() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(1, 273), int64]) */
}

def @func_15383() -> Tensor[(11, 5, 8), float32] {
  %903 = fn () -> Tensor[(11, 5, 8), float32] {
    @func_15342() /* ty=Tensor[(11, 5, 8), float32] */
  };
  %903() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_2463() -> (Tensor[(11, 5, 8), float32],) {
  %904 = @func_2326() /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %905 = %904.2;
  (%905,)
}

def @func_11895() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  @func_11893() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_18610() -> (Tensor[(11, 5, 8), float32],) {
  %906 = @func_3597() /* ty=Tensor[(11, 5, 8), float32] */;
  (%906,)
}

def @func_19442() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %910 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
    %907 = @func_10867() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %908 = %907.0;
    %909 = @func_9232() /* ty=Tensor[(11, 5, 8), float32] */;
    (%908, %909)
  };
  %910() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_10999() -> (Tensor[(11, 5, 8), float32],) {
  %912 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %911 = @func_2692() /* ty=Tensor[(11, 5, 8), float32] */;
    (%911,)
  };
  %912() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_11790() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %920 = fn () -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
    %913 = @func_10018() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %914 = @func_7700() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %915 = @func_7271() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
    %916 = @func_4902() /* ty=Tensor[(6, 10, 13), float32] */;
    %917 = %913.0;
    %918 = %914.0;
    %919 = %915.4;
    (%916, %917, %918, %919)
  };
  %920() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_12404() -> Tensor[(440), float32] {
  %922 = fn () -> Tensor[(440), float32] {
    %921 = @func_9318() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
    %921.2
  };
  %922() /* ty=Tensor[(440), float32] */
}

def @func_2250() -> Tensor[(11, 5, 8), float32] {
  %923 = @func_1639() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %923.1
}

def @func_15455() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32]) {
  %931 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32]) {
    %924 = @func_15031() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32]) */;
    %925 = cast(meta[relay.Constant][38] /* ty=Tensor[(273), int64] */, dtype="int64") /* ty=Tensor[(273), int64] */;
    %926 = reshape(%925, newshape=[273]) /* ty=Tensor[(273), int64] */;
    %927 = @func_5758(%926) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) */;
    %928 = %924.0;
    %929 = %927.0;
    %930 = @func_15182() /* ty=Tensor[(11, 5, 8), float32] */;
    (%928, %929, meta[relay.Constant][38] /* ty=Tensor[(273), int64] */, %930)
  };
  %931() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32]) */
}

def @func_1561() -> (Tensor[(6, 10, 13), float64],) {
  @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */
}

def @func_5483(%var_5481: Tensor[(11, 9, 3), float64]) -> (Tensor[(440), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(6, 10, 13), float32]) {
  @func_5480(%var_5481) /* ty=(Tensor[(440), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_14263() -> Tensor[(440), float32] {
  %932 = @func_13611() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(440), float32]) */;
  %933 = %932.3;
  %934 = cast(%933, dtype="float32") /* ty=Tensor[(440), float32] */;
  log2(%934) /* ty=Tensor[(440), float32] */
}

def @func_8127() -> (Tensor[(11, 5, 8), float32],) {
  %936 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %935 = @func_4521() /* ty=Tensor[(11, 5, 8), float32] */;
    (%935,)
  };
  %936() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_9806() -> (Tensor[(11, 5, 8), float32],) {
  %938 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %937 = @func_5774() /* ty=Tensor[(11, 5, 8), float32] */;
    (%937,)
  };
  %938() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_14299() -> Tensor[(6, 10, 13), float32] {
  @func_14297() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_18031() -> Tensor[(11, 5, 8), float32] {
  %940 = fn () -> Tensor[(11, 5, 8), float32] {
    %939 = @func_8695() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
    %939.2
  };
  %940() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_16931() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %941 = @func_15031() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32]) */;
  %942 = @func_5289() /* ty=(Tensor[(440), float32],) */;
  %943 = %941.0;
  %944 = %942.0;
  %945 = @func_11625() /* ty=Tensor[(11, 5, 8), float32] */;
  (%943, %944, %945)
}

def @func_4769() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  @func_4767() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_14761() -> Tensor[(6, 10, 13), float32] {
  %946 = fn () -> Tensor[(6, 10, 13), float32] {
    @func_13558() /* ty=Tensor[(6, 10, 13), float32] */
  };
  %946() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_1951(%var_1949: Tensor[(13, 7, 3), int64]) -> (Tensor[(13, 7, 3), int8], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(6, 10, 13), float32]) {
  @func_1948(%var_1949) /* ty=(Tensor[(13, 7, 3), int8], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_5853(%var_5852: Tensor[(273), int64]) -> (Tensor[(440), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32], Tensor[(273), uint32], Tensor[(11, 5, 8), float32]) {
  %961 = fn (%var_5826: Tensor[(273), int64]) -> (Tensor[(440), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32], Tensor[(273), uint32], Tensor[(11, 5, 8), float32]) {
    %947 = @func_5540() /* ty=(Tensor[(440), float32],) */;
    %948 = @func_2128() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */;
    %949 = cast(meta[relay.Constant][39] /* ty=Tensor[(273), int64] */, dtype="int64") /* ty=Tensor[(273), int64] */;
    %950 = reshape(%949, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), int64] */;
    %951 = @func_1948(%950) /* ty=(Tensor[(13, 7, 3), int8], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(6, 10, 13), float32]) */;
    %952 = cast(%var_5826, dtype="uint32") /* ty=Tensor[(273), uint32] */;
    %953 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(273), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %954 = cast(meta[relay.Constant][39] /* ty=Tensor[(273), int64] */, dtype="uint32") /* ty=Tensor[(273), uint32] */;
    %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %956 = %947.0;
    %957 = %948.0;
    %958 = %951.4;
    %959 = multiply(%954, %955) /* ty=Tensor[(273), uint32] */;
    %960 = @func_4521() /* ty=Tensor[(11, 5, 8), float32] */;
    (%956, %957, %958, %959, %960)
  };
  %961(%var_5852) /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32], Tensor[(273), uint32], Tensor[(11, 5, 8), float32]) */
}

def @func_12967() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64]) {
  %962 = @func_3931() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %963 = @func_10776() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %964 = %962.2;
  %965 = @func_11819() /* ty=Tensor[(6, 10, 13), float32] */;
  %966 = %963.1;
  (%964, %965, %966)
}

def @func_6745() -> (Tensor[(6, 10, 13), float64],) {
  @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */
}

def @func_9741() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %970 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
    %967 = @func_4592() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %968 = @func_6827() /* ty=Tensor[(11, 5, 8), float32] */;
    %969 = %967.0;
    (%968, %969)
  };
  %970() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_4932(%var_4917: Tensor[(273), int64]) -> (Tensor[(11, 5, 8), float32], Tensor[(13, 7, 3), float32], Tensor[(273), int64]) {
  %971 = cast(%var_4917, dtype="int64") /* ty=Tensor[(273), int64] */;
  %972 = reshape(%971, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), int64] */;
  %973 = @func_1948(%972) /* ty=(Tensor[(13, 7, 3), int8], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 7, 3), float32], Tensor[(6, 10, 13), float32]) */;
  %974 = @func_3597() /* ty=Tensor[(11, 5, 8), float32] */;
  %975 = %973.3;
  (%974, %975, %var_4917)
}

def @func_17931() -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(24, 26), float64]) {
  %976 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %977 = @func_12226() /* ty=(Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(15, 7, 8), int64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) */;
  %978 = @func_17434() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(24, 26), float64]) */;
  %979 = %978.2;
  %980 = cast(%979, dtype="float64") /* ty=Tensor[(24, 26), float64] */;
  %981 = %976.0;
  %982 = %977.0;
  %983 = atan(%980) /* ty=Tensor[(24, 26), float64] */;
  (%981, %982, %983)
}

def @func_19703() -> (Tensor[(11, 5, 8), float32],) {
  %986 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %984 = @func_9040() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %985 = %984.1;
    (%985,)
  };
  %986() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_8987() -> Tensor[(6, 10, 13), float64] {
  @func_6272() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_6604() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float64]) {
  @func_6602() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */
}

def @func_4038() -> (Tensor[(6, 10, 13), float32],) {
  %987 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  (%987,)
}

def @func_2928() -> Tensor[(6, 10, 13), float64] {
  %989 = fn () -> Tensor[(6, 10, 13), float64] {
    %988 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %988.0
  };
  %989() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_14931(%var_14871: Tensor[(48), float64], %var_14912: Tensor[(504), uint16]) -> (Tensor[(11, 5, 8), float32], Tensor[(16, 6, 3), float64], Tensor[(48), float64], Tensor[(288), float64], Tensor[(6, 6, 14), uint16], Tensor[(504), uint16], Tensor[(6, 10, 13), float64]) {
  %990 = @func_9040() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %991 = cast(%var_14871, dtype="float64") /* ty=Tensor[(48), float64] */;
  %992 = cast(meta[relay.Constant][40] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %993 = reshape(%991, newshape=[16, 1, 3]) /* ty=Tensor[(16, 1, 3), float64] */;
  %994 = reshape(%992, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), float64] */;
  %995 = cast(%var_14912, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %996 = reshape(%995, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), uint16] */;
  %997 = @func_12384() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64]) */;
  %998 = %990.1;
  %999 = @func_6647(%993, %994) /* ty=Tensor[(16, 6, 3), float64] */;
  %1000 = @func_5604(%996) /* ty=Tensor[(6, 6, 14), uint16] */;
  %1001 = %997.1;
  (%998, %999, %var_14871, meta[relay.Constant][40] /* ty=Tensor[(288), float64] */, %1000, %var_14912, %1001)
}

def @func_2659() -> Tensor[(11, 5, 8), float32] {
  %1002 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1002.0
}

def @func_4904() -> Tensor[(6, 10, 13), float32] {
  @func_4902() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_8696() -> (Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %1009 = fn () -> (Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
    %1003 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
    %1004 = @func_3809() /* ty=(Tensor[(440), float32],) */;
    %1005 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %1006 = sin(%1003) /* ty=Tensor[(2, 3, 6), float64] */;
    %1007 = %1004.0;
    %1008 = %1005.0;
    (%1006, %1007, %1008)
  };
  %1009() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_9664() -> (Tensor[(6, 10, 13), float32],) {
  %1010 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1011 = %1010.2;
  (%1011,)
}

def @func_18857() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) {
  %1015 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) {
    %1012 = @func_2619() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %1013 = %1012.4;
    %1014 = @func_14984() /* ty=Tensor[(6, 10, 13), float64] */;
    (%1013, %1014)
  };
  %1015() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) */
}

def @func_15692() -> (Tensor[(11, 5, 8), float32],) {
  @func_15690() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_10392() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) {
  %1022 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) {
    %1016 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %1017 = @func_8815() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %1018 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %1019 = %1016.0;
    %1020 = %1017.0;
    %1021 = %1018.0;
    (%1019, %1020, %1021)
  };
  %1022() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) */
}

def @func_16933() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  @func_16931() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_17653() -> Tensor[(11, 5, 8), float32] {
  %1023 = fn () -> Tensor[(11, 5, 8), float32] {
    @func_2692() /* ty=Tensor[(11, 5, 8), float32] */
  };
  %1023() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_17435() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(24, 26), float64]) {
  %1029 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(24, 26), float64]) {
    %1024 = cast(meta[relay.Constant][42] /* ty=Tensor[(24, 26), float64] */, dtype="float64") /* ty=Tensor[(24, 26), float64] */;
    %1025 = reshape(%1024, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
    %1026 = @func_6004(%1025) /* ty=(Tensor[(8, 13, 6), float64], Tensor[(440), float32]) */;
    %1027 = @func_6166() /* ty=Tensor[(11, 5, 8), float32] */;
    %1028 = %1026.1;
    (%1027, %1028, meta[relay.Constant][42] /* ty=Tensor[(24, 26), float64] */)
  };
  %1029() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(24, 26), float64]) */
}

def @func_9418(%var_9417: Tensor[(416), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(1, 13, 2), float32], Tensor[(26), float64], Tensor[(416), float64]) {
  %1038 = fn (%var_9395: Tensor[(416), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(1, 13, 2), float32], Tensor[(26), float64], Tensor[(416), float64]) {
    %1030 = @func_7184() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float64]) */;
    %1031 = cast(meta[relay.Constant][43] /* ty=Tensor[(26), float64] */, dtype="float64") /* ty=Tensor[(26), float64] */;
    %1032 = cast(%var_9395, dtype="float64") /* ty=Tensor[(416), float64] */;
    %1033 = reshape(%1031, newshape=[1, 13, 2]) /* ty=Tensor[(1, 13, 2), float64] */;
    %1034 = reshape(%1032, newshape=[16, 13, 2]) /* ty=Tensor[(16, 13, 2), float64] */;
    %1035 = @func_3283(%1033, %1034) /* ty=(Tensor[(1, 13, 2), float32], Tensor[(16, 13, 2), float64]) */;
    %1036 = %1030.0;
    %1037 = %1035.0;
    (%1036, %1037, meta[relay.Constant][43] /* ty=Tensor[(26), float64] */, %var_9395)
  };
  %1038(%var_9417) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(1, 13, 2), float32], Tensor[(26), float64], Tensor[(416), float64]) */
}

def @func_18903(%var_18901: float64, %var_18902: Tensor[(1, 6, 8), float64]) -> (Tensor[(1, 6, 8), float64], Tensor[(1, 6, 8), float32], Tensor[(6, 10, 13), float32]) {
  %1047 = fn (%var_18867: float64, %var_18868: Tensor[(1, 6, 8), float64]) -> (Tensor[(1, 6, 8), float64], Tensor[(1, 6, 8), float32], Tensor[(6, 10, 13), float32]) {
    %1039 = cast(%var_18867, dtype="float64") /* ty=float64 */;
    %1040 = cast(%var_18868, dtype="float64") /* ty=Tensor[(1, 6, 8), float64] */;
    %1041 = cast(%var_18868, dtype="float32") /* ty=Tensor[(1, 6, 8), float32] */;
    %1042 = cast(%var_18867, dtype="float32") /* ty=float32 */;
    %1043 = @func_7352() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32]) */;
    %1044 = minimum(%1039, %1040) /* ty=Tensor[(1, 6, 8), float64] */;
    %1045 = floor_divide(%1041, %1042) /* ty=Tensor[(1, 6, 8), float32] */;
    %1046 = %1043.0;
    (%1044, %1045, %1046)
  };
  %1047(%var_18901, %var_18902) /* ty=(Tensor[(1, 6, 8), float64], Tensor[(1, 6, 8), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_19896() -> (Tensor[(11, 5, 8), float32],) {
  @func_19894() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_2490() -> Tensor[(11, 5, 8), float32] {
  %1048 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1048.0
}

def @func_11330() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32]) {
  %1058 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32]) {
    %1049 = @func_5342() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
    %1050 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
    %1051 = @func_4687() /* ty=(Tensor[(440), float32],) */;
    %1052 = @func_2433() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
    %1053 = %1049.1;
    %1054 = %1050.1;
    %1055 = %1051.0;
    %1056 = @func_3516() /* ty=Tensor[(440), float32] */;
    %1057 = %1052.1;
    (%1053, %1054, %1055, %1056, %1057)
  };
  %1058() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_4592() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %1059 = @func_2433() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %1060 = %1059.2;
  %1061 = @func_3597() /* ty=Tensor[(11, 5, 8), float32] */;
  (%1060, %1061)
}

def @func_17784(%var_17756: Tensor[(440), float32]) -> (Tensor[(440), int64], Tensor[(6, 10, 13), float64], Tensor[(440), float64]) {
  %1062 = @func_8590() /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %1063 = %1062.0;
  %1064 = cast(%var_17756, dtype="int64") /* ty=Tensor[(440), int64] */;
  %1065 = shape_of(%1063, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1066 = cast(%1063, dtype="int64") /* ty=Tensor[(440), int64] */;
  %1067 = dyn.reshape(%1064, %1065, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1068 = cast(%1063, dtype="float64") /* ty=Tensor[(440), float64] */;
  %1069 = add(%1066, %1067) /* ty=Tensor[(440), int64] */;
  %1070 = @func_5036() /* ty=Tensor[(6, 10, 13), float64] */;
  %1071 = cosh(%1068) /* ty=Tensor[(440), float64] */;
  (%1069, %1070, %1071)
}

def @func_3778() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) {
  %1078 = fn () -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) {
    %1072 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
    %1073 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
    %1074 = %1072.3;
    %1075 = @func_2490() /* ty=Tensor[(11, 5, 8), float32] */;
    %1076 = %1073.0;
    %1077 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
    (%1074, %1075, %1076, %1077)
  };
  %1078() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_6524(%var_6495: Tensor[(273), int64]) -> (Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 7, 3), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %1079 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1080 = @func_5925() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1081 = cast(%var_6495, dtype="int64") /* ty=Tensor[(273), int64] */;
  %1082 = reshape(%1081, newshape=[273]) /* ty=Tensor[(273), int64] */;
  %1083 = @func_4932(%1082) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(13, 7, 3), float32], Tensor[(273), int64]) */;
  %1084 = %1083.1;
  %1085 = cast(%1084, dtype="float64") /* ty=Tensor[(13, 7, 3), float64] */;
  %1086 = @func_6434() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1087 = @func_5189() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1088 = %1079.0;
  %1089 = %1080.0;
  %1090 = @func_6272() /* ty=Tensor[(6, 10, 13), float64] */;
  %1091 = tan(%1085) /* ty=Tensor[(13, 7, 3), float64] */;
  %1092 = %1086.0;
  %1093 = %1087.1;
  (%1088, %var_6495, %1089, %1090, %1091, %1092, %1093)
}

def @func_2328() -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  @func_2326() /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_19894() -> (Tensor[(11, 5, 8), float32],) {
  %1094 = @func_2490() /* ty=Tensor[(11, 5, 8), float32] */;
  (%1094,)
}

def @func_8051() -> (Tensor[(110, 4), bool], Tensor[(110, 4), float64]) {
  @func_8049() /* ty=(Tensor[(110, 4), bool], Tensor[(110, 4), float64]) */
}

def @func_8592() -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  @func_8590() /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_19773() -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32]) {
  %1099 = fn () -> (Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32]) {
    %1095 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %1096 = @func_8815() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %1097 = %1095.0;
    %1098 = %1096.0;
    (%1097, %1098)
  };
  %1099() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32]) */
}

def @func_7471() -> Tensor[(11, 5, 8), float32] {
  @func_7469() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_12520() -> (Tensor[(6, 10, 13), float64], Tensor[(39, 7), int64], Tensor[(273, 1), int64]) {
  @func_12518() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(39, 7), int64], Tensor[(273, 1), int64]) */
}

def @func_14618() -> (Tensor[(6, 10, 13), float32],) {
  %1100 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1101 = %1100.2;
  (%1101,)
}

def @func_11401(%var_11399: Tensor[(13, 121), float32], %var_11400: Tensor[(6, 10, 13), float64]) -> (Tensor[(11, 5, 8), float64], Tensor[(6, 10, 13), float64], Tensor[(13, 11, 11), uint16], Tensor[(13, 121), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 11, 11), uint16], Tensor[(6, 10, 13), bool]) {
  %1123 = fn (%var_11357: Tensor[(13, 121), float32], %var_11380: Tensor[(6, 10, 13), float64]) -> (Tensor[(11, 5, 8), float64], Tensor[(6, 10, 13), float64], Tensor[(13, 11, 11), uint16], Tensor[(13, 121), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 11, 11), uint16], Tensor[(6, 10, 13), bool]) {
    %1102 = @func_7593() /* ty=(Tensor[(11, 5, 8), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %1103 = @func_2207() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
    %1104 = cast(%var_11357, dtype="float32") /* ty=Tensor[(13, 121), float32] */;
    %1105 = reshape(%1104, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
    %1106 = @func_9614(%1105) /* ty=(Tensor[(13, 11, 11), uint16], Tensor[(440), float32]) */;
    %1107 = @func_4687() /* ty=(Tensor[(440), float32],) */;
    %1108 = cast(%var_11357, dtype="float32") /* ty=Tensor[(13, 121), float32] */;
    %1109 = reshape(%1108, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
    %1110 = @func_9614(%1109) /* ty=(Tensor[(13, 11, 11), uint16], Tensor[(440), float32]) */;
    %1111 = @func_5036() /* ty=Tensor[(6, 10, 13), float64] */;
    %1112 = cast(%var_11380, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
    %1113 = shape_of(%1111, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1114 = cast(%1111, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
    %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1116 = %1102.0;
    %1117 = %1103.1;
    %1118 = %1106.0;
    %1119 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
    %1120 = %1107.0;
    %1121 = %1110.0;
    %1122 = logical_or(%1114, %1115) /* ty=Tensor[(6, 10, 13), bool] */;
    (%1116, %1117, %1118, %var_11357, %1119, %1120, %1121, %1122)
  };
  %1123(%var_11399, %var_11400) /* ty=(Tensor[(11, 5, 8), float64], Tensor[(6, 10, 13), float64], Tensor[(13, 11, 11), uint16], Tensor[(13, 121), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(13, 11, 11), uint16], Tensor[(6, 10, 13), bool]) */
}

def @func_5489() -> Tensor[(110, 4), float32] {
  @func_5487() /* ty=Tensor[(110, 4), float32] */
}

def @func_12322() -> (Tensor[(110, 4), float32],) {
  %1125 = fn () -> (Tensor[(110, 4), float32],) {
    %1124 = @func_5487() /* ty=Tensor[(110, 4), float32] */;
    (%1124,)
  };
  %1125() /* ty=(Tensor[(110, 4), float32],) */
}

def @func_2340() -> (Tensor[(11, 5, 8), float32],) {
  %1126 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
  (%1126,)
}

def @func_8215() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) {
  %1127 = @func_2619() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1128 = @func_7184() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float64]) */;
  %1129 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %1130 = %1127.1;
  %1131 = %1128.0;
  %1132 = %1129.0;
  %1133 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  (%1130, %1131, %1132, %1133)
}

def @func_10556() -> (Tensor[(9, 7, 9), bool], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(624), float64]) {
  %1141 = fn () -> (Tensor[(9, 7, 9), bool], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(624), float64]) {
    %1134 = @func_9641() /* ty=(Tensor[(9, 7, 9), bool],) */;
    %1135 = cast(meta[relay.Constant][44] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
    %1136 = reshape(%1135, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float64] */;
    %1137 = @func_6004(%1136) /* ty=(Tensor[(8, 13, 6), float64], Tensor[(440), float32]) */;
    %1138 = %1134.0;
    %1139 = @func_2927() /* ty=Tensor[(6, 10, 13), float64] */;
    %1140 = %1137.1;
    (%1138, %1139, %1140, meta[relay.Constant][44] /* ty=Tensor[(624), float64] */)
  };
  %1141() /* ty=(Tensor[(9, 7, 9), bool], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(624), float64]) */
}

def @func_14859() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float64]) {
  %1144 = fn () -> (Tensor[(440), float32], Tensor[(6, 10, 13), float64]) {
    %1142 = @func_14263() /* ty=Tensor[(440), float32] */;
    %1143 = @func_7537() /* ty=Tensor[(6, 10, 13), float64] */;
    (%1142, %1143)
  };
  %1144() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */
}

def @func_12260() -> (Tensor[(6, 10, 13), float32],) {
  @func_12258() /* ty=(Tensor[(6, 10, 13), float32],) */
}

def @func_17473() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  @func_17471() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_2828() -> (Tensor[(6, 10, 13), float64],) {
  %1147 = fn () -> (Tensor[(6, 10, 13), float64],) {
    %1145 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
    %1146 = %1145.0;
    (%1146,)
  };
  %1147() /* ty=(Tensor[(6, 10, 13), float64],) */
}

def @func_9643() -> (Tensor[(9, 7, 9), bool],) {
  @func_9641() /* ty=(Tensor[(9, 7, 9), bool],) */
}

def @func_1887() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_10654(%var_10649: Tensor[(10, 5, 8), uint64], %var_10650: Tensor[(10, 5, 8), uint64]) -> (Tensor[(10, 5, 8), uint64],) {
  %1148 = cast(%var_10650, dtype="uint64") /* ty=Tensor[(10, 5, 8), uint64] */;
  %1149 = shape_of(%var_10649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1150 = cast(%var_10649, dtype="uint64") /* ty=Tensor[(10, 5, 8), uint64] */;
  %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1152 = bitwise_and(%1150, %1151) /* ty=Tensor[(10, 5, 8), uint64] */;
  (%1152,)
}

def @func_4767() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %1153 = @func_3503() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %1154 = @func_3931() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1155 = %1153.2;
  %1156 = @func_3597() /* ty=Tensor[(11, 5, 8), float32] */;
  %1157 = %1154.0;
  (%1155, %1156, %1157)
}

def @func_7469() -> Tensor[(11, 5, 8), float32] {
  %1158 = @func_7271() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %1158.2
}

def @func_2465() -> (Tensor[(11, 5, 8), float32],) {
  @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_2129() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) {
  %1163 = fn () -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) {
    %1159 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %1160 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
    %1161 = %1159.0;
    %1162 = %1160.0;
    (%1161, %1162)
  };
  %1163() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */
}

def @func_13504() -> (Tensor[(11, 5, 8), float32],) {
  @func_13502() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_4476(%var_4474: Tensor[(2, 13, 13), float64], %var_4475: Tensor[(840), int64]) -> (Tensor[(2, 13, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(15, 7, 8), int64], Tensor[(840), int64]) {
  %1173 = fn (%var_4443: Tensor[(2, 13, 13), float64], %var_4468: Tensor[(840), int64]) -> (Tensor[(2, 13, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(15, 7, 8), int64], Tensor[(840), int64]) {
    %1164 = cast(%var_4443, dtype="float64") /* ty=Tensor[(2, 13, 13), float64] */;
    %1165 = acos(%1164) /* ty=Tensor[(2, 13, 13), float64] */;
    %1166 = cast(%1165, dtype="float64") /* ty=Tensor[(2, 13, 13), float64] */;
    %1167 = @func_1559() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %1168 = cast(%var_4468, dtype="int64") /* ty=Tensor[(840), int64] */;
    %1169 = reshape(%1168, newshape=[15, 7, 8]) /* ty=Tensor[(15, 7, 8), int64] */;
    %1170 = cos(%1166) /* ty=Tensor[(2, 13, 13), float64] */;
    %1171 = %1167.0;
    %1172 = @func_3839(%1169) /* ty=Tensor[(15, 7, 8), int64] */;
    (%1170, %1171, %1172, %var_4468)
  };
  %1173(%var_4474, %var_4475) /* ty=(Tensor[(2, 13, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(15, 7, 8), int64], Tensor[(840), int64]) */
}

def @func_4783() -> (Tensor[(11, 5, 8), float32],) {
  %1174 = @func_2433() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
  %1175 = %1174.2;
  (%1175,)
}

def @func_20251() -> Tensor[(110, 4), float32] {
  @func_20249() /* ty=Tensor[(110, 4), float32] */
}

def @func_15887() -> Tensor[(6, 10, 13), float64] {
  %1176 = @func_2128() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */;
  %1176.0
}

def @func_12518() -> (Tensor[(6, 10, 13), float64], Tensor[(39, 7), int64], Tensor[(273, 1), int64]) {
  %1177 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %1178 = %1177.0;
  %1179 = cast(%1178, dtype="float64") /* ty=Tensor[(6, 10, 13), float64] */;
  %1180 = cast(meta[relay.Constant][45] /* ty=Tensor[(273, 1), int64] */, dtype="int64") /* ty=Tensor[(273, 1), int64] */;
  %1181 = reshape(%1180, newshape=[39, 7]) /* ty=Tensor[(39, 7), int64] */;
  %1182 = @func_2023(%1181) /* ty=(Tensor[(11, 5, 8), int64], Tensor[(440), float32], Tensor[(39, 7), int64]) */;
  %1183 = asin(%1179) /* ty=Tensor[(6, 10, 13), float64] */;
  %1184 = %1182.2;
  (%1183, %1184, meta[relay.Constant][45] /* ty=Tensor[(273, 1), int64] */)
}

def @func_9092() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %1188 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
    %1185 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %1186 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
    %1187 = %1185.0;
    (%1186, %1187)
  };
  %1188() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_9179(%var_9177: Tensor[(4, 9, 12), float64], %var_9178: Tensor[(4, 9, 12), float32]) -> (Tensor[(4, 9, 12), int16], Tensor[(11, 5, 8), float32], Tensor[(4, 9, 12), float64], Tensor[(4, 9, 12), bool]) {
  %1212 = fn (%var_9109: Tensor[(4, 9, 12), float64], %var_9158: Tensor[(4, 9, 12), float32]) -> (Tensor[(4, 9, 12), int16], Tensor[(11, 5, 8), float32], Tensor[(4, 9, 12), float64], Tensor[(4, 9, 12), bool]) {
    %1189 = cast(%var_9109, dtype="float64") /* ty=Tensor[(4, 9, 12), float64] */;
    %1190 = log(%1189) /* ty=Tensor[(4, 9, 12), float64] */;
    %1191 = cast(%var_9109, dtype="float32") /* ty=Tensor[(4, 9, 12), float32] */;
    %1192 = sin(%1191) /* ty=Tensor[(4, 9, 12), float32] */;
    %1193 = cast(%1192, dtype="int16") /* ty=Tensor[(4, 9, 12), int16] */;
    %1194 = shape_of(%1190, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1195 = cast(%1190, dtype="int16") /* ty=Tensor[(4, 9, 12), int16] */;
    %1196 = dyn.reshape(%1193, %1194, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1197 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %1198 = cast(%1190, dtype="float32") /* ty=Tensor[(4, 9, 12), float32] */;
    %1199 = log10(%1198) /* ty=Tensor[(4, 9, 12), float32] */;
    %1200 = cast(%1192, dtype="float64") /* ty=Tensor[(4, 9, 12), float64] */;
    %1201 = shape_of(%1199, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1202 = cast(%1199, dtype="float64") /* ty=Tensor[(4, 9, 12), float64] */;
    %1203 = dyn.reshape(%1200, %1201, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1204 = cast(%var_9158, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
    %1205 = shape_of(%1199, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1206 = cast(%1199, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
    %1207 = dyn.reshape(%1204, %1205, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1208 = logical_xor(%1195, %1196) /* ty=Tensor[(4, 9, 12), int16] */;
    %1209 = %1197.0;
    %1210 = floor_mod(%1202, %1203) /* ty=Tensor[(4, 9, 12), float64] */;
    %1211 = less(%1206, %1207) /* ty=Tensor[(4, 9, 12), bool] */;
    (%1208, %1209, %1210, %1211)
  };
  %1212(%var_9177, %var_9178) /* ty=(Tensor[(4, 9, 12), int16], Tensor[(11, 5, 8), float32], Tensor[(4, 9, 12), float64], Tensor[(4, 9, 12), bool]) */
}

def @func_18222() -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %1216 = fn () -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
    %1213 = @func_14216() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
    %1214 = @func_6960() /* ty=Tensor[(440), float32] */;
    %1215 = %1213.0;
    (%1214, %1215)
  };
  %1216() /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_16561() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) {
  @func_16559() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64]) */
}

def @func_16631(%var_16629: Tensor[(1, 1170), float32]) -> (Tensor[(6, 10, 13), float32], Tensor[(15, 13, 6), float32], Tensor[(1, 1170), float32]) {
  @func_16628(%var_16629) /* ty=(Tensor[(6, 10, 13), float32], Tensor[(15, 13, 6), float32], Tensor[(1, 1170), float32]) */
}

def @func_12143() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  @func_12141() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_11843() -> (Tensor[(110, 4), float32],) {
  %1218 = fn () -> (Tensor[(110, 4), float32],) {
    %1217 = @func_8233() /* ty=Tensor[(110, 4), float32] */;
    (%1217,)
  };
  %1218() /* ty=(Tensor[(110, 4), float32],) */
}

def @func_3310() -> (Tensor[(11, 5, 8), float32],) {
  %1220 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %1219 = @func_2250() /* ty=Tensor[(11, 5, 8), float32] */;
    (%1219,)
  };
  %1220() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_5038() -> Tensor[(6, 10, 13), float64] {
  @func_5036() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_3518() -> Tensor[(440), float32] {
  @func_3516() /* ty=Tensor[(440), float32] */
}

def @func_5189() -> (Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %1221 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1222 = @func_4592() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1223 = %1221.0;
  %1224 = %1222.1;
  (%1223, %1224)
}

def @func_10777() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float64]) {
  %1228 = fn () -> (Tensor[(440), float32], Tensor[(6, 10, 13), float64]) {
    %1225 = @func_8737() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %1226 = @func_6545() /* ty=Tensor[(440), float32] */;
    %1227 = %1225.0;
    (%1226, %1227)
  };
  %1228() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */
}

def @func_9617(%var_9615: Tensor[(13, 11, 11), float32]) -> (Tensor[(13, 11, 11), uint16], Tensor[(440), float32]) {
  @func_9614(%var_9615) /* ty=(Tensor[(13, 11, 11), uint16], Tensor[(440), float32]) */
}

def @func_13263(%var_13261: Tensor[(10, 15, 7), float64]) -> (Tensor[(10, 15, 7), bool], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  @func_13260(%var_13261) /* ty=(Tensor[(10, 15, 7), bool], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_9518() -> Tensor[(6, 10, 13), float64] {
  %1230 = fn () -> Tensor[(6, 10, 13), float64] {
    %1229 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %1229.0
  };
  %1230() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_15289() -> (Tensor[(9, 7, 9), float64], Tensor[(11, 5, 8), float32]) {
  @func_15287() /* ty=(Tensor[(9, 7, 9), float64], Tensor[(11, 5, 8), float32]) */
}

def @func_7755(%var_7752: float64, %var_7753: Tensor[(1, 10, 9), float64], %var_7754: Tensor[(2, 10, 9), bool]) -> (Tensor[(1, 10, 9), float64], Tensor[(2, 10, 9), int16], Tensor[(1, 10, 9), float64]) {
  @func_7750(%var_7752, %var_7753, %var_7754) /* ty=(Tensor[(1, 10, 9), float64], Tensor[(2, 10, 9), int16], Tensor[(1, 10, 9), float64]) */
}

def @func_17486() -> Tensor[(11, 5, 8), float32] {
  %1232 = fn () -> Tensor[(11, 5, 8), float32] {
    %1231 = @func_17434() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(24, 26), float64]) */;
    %1231.0
  };
  %1232() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_4521() -> Tensor[(11, 5, 8), float32] {
  @func_2250() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_14787() -> (Tensor[(110, 4), float32],) {
  @func_14785() /* ty=(Tensor[(110, 4), float32],) */
}

def @func_17524() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64]) {
  @func_17522() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64]) */
}

def @func_19062() -> Tensor[(11, 5, 8), float32] {
  @func_19060() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_10078() -> Tensor[(11, 5, 8), float32] {
  %1233 = fn () -> Tensor[(11, 5, 8), float32] {
    @func_6827() /* ty=Tensor[(11, 5, 8), float32] */
  };
  %1233() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_12227() -> (Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(15, 7, 8), int64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) {
  %1241 = fn () -> (Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(15, 7, 8), int64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) {
    %1234 = @func_5342() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
    %1235 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 70), int64] */, dtype="int64") /* ty=Tensor[(12, 70), int64] */;
    %1236 = reshape(%1235, newshape=[15, 7, 8]) /* ty=Tensor[(15, 7, 8), int64] */;
    %1237 = @func_5487() /* ty=Tensor[(110, 4), float32] */;
    %1238 = %1234.0;
    %1239 = @func_3839(%1236) /* ty=Tensor[(15, 7, 8), int64] */;
    %1240 = @func_10077() /* ty=Tensor[(11, 5, 8), float32] */;
    (%1237, %1238, %1239, meta[relay.Constant][46] /* ty=Tensor[(12, 70), int64] */, %1240)
  };
  %1241() /* ty=(Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(15, 7, 8), int64], Tensor[(12, 70), int64], Tensor[(11, 5, 8), float32]) */
}

def @func_16282(%var_16279: Tensor[(1, 5, 8), float64], %var_16280: Tensor[(16, 5, 8), float64], %var_16281: Tensor[(252, 2), uint16]) -> (Tensor[(16, 5, 8), float64], Tensor[(288), float64], Tensor[(24, 2), float64], Tensor[(252, 2), uint16]) {
  %1251 = fn (%var_16267: Tensor[(1, 5, 8), float64], %var_16268: Tensor[(16, 5, 8), float64], %var_16275: Tensor[(252, 2), uint16]) -> (Tensor[(16, 5, 8), float64], Tensor[(288), float64], Tensor[(24, 2), float64], Tensor[(252, 2), uint16]) {
    %1242 = cast(%var_16267, dtype="float64") /* ty=Tensor[(1, 5, 8), float64] */;
    %1243 = cast(%var_16268, dtype="float64") /* ty=Tensor[(16, 5, 8), float64] */;
    %1244 = cast(meta[relay.Constant][47] /* ty=Tensor[(24, 2), float64] */, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
    %1245 = cast(%var_16275, dtype="uint16") /* ty=Tensor[(252, 2), uint16] */;
    %1246 = reshape(%1244, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %1247 = reshape(%1245, newshape=[504]) /* ty=Tensor[(504), uint16] */;
    %1248 = @func_14931(%1246, %1247) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 6, 3), float64], Tensor[(48), float64], Tensor[(288), float64], Tensor[(6, 6, 14), uint16], Tensor[(504), uint16], Tensor[(6, 10, 13), float64]) */;
    %1249 = floor_divide(%1242, %1243) /* ty=Tensor[(16, 5, 8), float64] */;
    %1250 = %1248.3;
    (%1249, %1250, meta[relay.Constant][47] /* ty=Tensor[(24, 2), float64] */, %var_16275)
  };
  %1251(%var_16279, %var_16280, %var_16281) /* ty=(Tensor[(16, 5, 8), float64], Tensor[(288), float64], Tensor[(24, 2), float64], Tensor[(252, 2), uint16]) */
}

def @func_7857() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(8, 52), bool], Tensor[(440), float32], Tensor[(297), float64]) {
  @func_7855() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(8, 52), bool], Tensor[(440), float32], Tensor[(297), float64]) */
}

def @func_12934() -> (Tensor[(6, 10, 13), float32],) {
  @func_12932() /* ty=(Tensor[(6, 10, 13), float32],) */
}

def @func_10341() -> (Tensor[(6, 10, 13), float32], Tensor[(440), uint8]) {
  @func_10339() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(440), uint8]) */
}

def @func_11821() -> Tensor[(6, 10, 13), float32] {
  @func_11819() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_9318() -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  %1252 = @func_4038() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %1253 = @func_2463() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1254 = %1252.0;
  %1255 = @func_6272() /* ty=Tensor[(6, 10, 13), float64] */;
  %1256 = @func_3516() /* ty=Tensor[(440), float32] */;
  %1257 = %1253.0;
  (%1254, %1255, %1256, %1257)
}

def @func_13111() -> (Tensor[(11, 5, 8), float32], Tensor[(8, 13, 6), float64], Tensor[(624), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32]) {
  @func_13109() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(8, 13, 6), float64], Tensor[(624), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32]) */
}

def @func_8376(%var_8375: Tensor[(3, 99), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(3, 99), float64]) {
  %1269 = fn (%var_8368: Tensor[(3, 99), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(3, 99), float64]) {
    %1258 = @func_7165() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(8, 52), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
    %1259 = @func_6602() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
    %1260 = @func_3309() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %1261 = cast(%var_8368, dtype="float64") /* ty=Tensor[(3, 99), float64] */;
    %1262 = reshape(%1261, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float64] */;
    %1263 = @func_5480(%1262) /* ty=(Tensor[(440), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(6, 10, 13), float32]) */;
    %1264 = %1258.0;
    %1265 = %1259.5;
    %1266 = @func_7537() /* ty=Tensor[(6, 10, 13), float64] */;
    %1267 = %1260.0;
    %1268 = %1263.3;
    (%1264, %1265, %1266, %1267, %1268, %var_8368)
  };
  %1269(%var_8375) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(3, 99), float64]) */
}

def @func_15033() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32]) {
  @func_15031() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32]) */
}

def @func_11927() -> Tensor[(6, 10, 13), float32] {
  @func_11925() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_14217() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %1273 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
    %1270 = @func_12932() /* ty=(Tensor[(6, 10, 13), float32],) */;
    %1271 = @func_3597() /* ty=Tensor[(11, 5, 8), float32] */;
    %1272 = %1270.0;
    (%1271, %1272)
  };
  %1273() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_16404() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float32]) {
  %1274 = @func_9318() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %1275 = @func_11702() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %1276 = %1274.2;
  %1277 = %1275.1;
  (%1276, %1277)
}

def @func_6961() -> Tensor[(440), float32] {
  %1278 = fn () -> Tensor[(440), float32] {
    @func_5254() /* ty=Tensor[(440), float32] */
  };
  %1278() /* ty=Tensor[(440), float32] */
}

def @func_7855() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(8, 52), bool], Tensor[(440), float32], Tensor[(297), float64]) {
  %1279 = @func_7165() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(16, 13, 2), float64], Tensor[(8, 52), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1280 = %1279.2;
  %1281 = cast(meta[relay.Constant][48] /* ty=Tensor[(8, 52), float32] */, dtype="bool") /* ty=Tensor[(8, 52), bool] */;
  %1282 = shape_of(%1280, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1283 = cast(%1280, dtype="bool") /* ty=Tensor[(8, 52), bool] */;
  %1284 = dyn.reshape(%1281, %1282, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1285 = cast(meta[relay.Constant][49] /* ty=Tensor[(297), float64] */, dtype="float64") /* ty=Tensor[(297), float64] */;
  %1286 = reshape(%1285, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float64] */;
  %1287 = @func_5480(%1286) /* ty=(Tensor[(440), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(6, 10, 13), float32]) */;
  %1288 = @func_7383() /* ty=Tensor[(11, 5, 8), float32] */;
  %1289 = @func_5254() /* ty=Tensor[(440), float32] */;
  %1290 = greater_equal(%1283, %1284) /* ty=Tensor[(8, 52), bool] */;
  %1291 = %1287.0;
  (%1288, %1289, %1290, %1291, meta[relay.Constant][49] /* ty=Tensor[(297), float64] */)
}

def @func_13502() -> (Tensor[(11, 5, 8), float32],) {
  %1292 = @func_4372() /* ty=(Tensor[(11, 5, 8), float32],) */;
  %1293 = %1292.0;
  (%1293,)
}

def @func_8590() -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %1294 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %1295 = @func_7271() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
  %1296 = @func_8117() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %1297 = %1294.3;
  %1298 = %1295.0;
  %1299 = %1296.0;
  (%1297, %1298, %1299)
}

def @func_8475() -> (Tensor[(11, 5, 8), float32],) {
  %1302 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %1300 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %1301 = %1300.1;
    (%1301,)
  };
  %1302() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_6338() -> (Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float64]) {
  %1316 = fn () -> (Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float64]) {
    %1303 = @func_2827() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %1304 = %1303.0;
    %1305 = cast(%1304, dtype="float32") /* ty=Tensor[(6, 10, 13), float32] */;
    %1306 = @func_4151() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64]) */;
    %1307 = %1306.0;
    %1308 = @func_6166() /* ty=Tensor[(11, 5, 8), float32] */;
    %1309 = cast(%1308, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
    %1310 = shape_of(%1307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1311 = cast(%1307, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
    %1312 = dyn.reshape(%1309, %1310, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1313 = sin(%1305) /* ty=Tensor[(6, 10, 13), float32] */;
    %1314 = @func_5254() /* ty=Tensor[(440), float32] */;
    %1315 = power(%1311, %1312) /* ty=Tensor[(11, 5, 8), float64] */;
    (%1313, %1314, %1315)
  };
  %1316() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float64]) */
}

def @func_13926() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) {
  %1320 = fn () -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) {
    %1317 = @func_12833() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %1318 = %1317.0;
    %1319 = @func_11925() /* ty=Tensor[(6, 10, 13), float32] */;
    (%1318, %1319)
  };
  %1320() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */
}

def @func_6728() -> (Tensor[(11, 5, 8), float32],) {
  %1323 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %1321 = @func_1639() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
    %1322 = %1321.1;
    (%1322,)
  };
  %1323() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_16835() -> (Tensor[(11, 5, 8), float32],) {
  %1326 = fn () -> (Tensor[(11, 5, 8), float32],) {
    %1324 = @func_15454() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(273), int64], Tensor[(11, 5, 8), float32]) */;
    %1325 = %1324.3;
    (%1325,)
  };
  %1326() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_5927() -> (Tensor[(11, 5, 8), float32],) {
  @func_5925() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_18701(%var_18699: float64, %var_18700: Tensor[(2535), float64]) -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64]) {
  @func_18697(%var_18699, %var_18700) /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64]) */
}

def @func_11703() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %1331 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
    %1327 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
    %1328 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
    %1329 = %1327.0;
    %1330 = %1328.4;
    (%1329, %1330)
  };
  %1331() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */
}

def @func_6274() -> Tensor[(6, 10, 13), float64] {
  @func_6272() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_6006(%var_6005: Tensor[(8, 13, 6), float64]) -> (Tensor[(8, 13, 6), float64], Tensor[(440), float32]) {
  %1336 = fn (%var_5977: Tensor[(8, 13, 6), float64]) -> (Tensor[(8, 13, 6), float64], Tensor[(440), float32]) {
    %1332 = cast(%var_5977, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
    %1333 = @func_4687() /* ty=(Tensor[(440), float32],) */;
    %1334 = asin(%1332) /* ty=Tensor[(8, 13, 6), float64] */;
    %1335 = %1333.0;
    (%1334, %1335)
  };
  %1336(%var_6005) /* ty=(Tensor[(8, 13, 6), float64], Tensor[(440), float32]) */
}

def @func_4902() -> Tensor[(6, 10, 13), float32] {
  %1337 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1337.0
}

def @func_5542() -> (Tensor[(440), float32],) {
  @func_5540() /* ty=(Tensor[(440), float32],) */
}

def @func_13560() -> Tensor[(6, 10, 13), float32] {
  @func_13558() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_13858() -> (Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(297), float64]) {
  %1346 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(297), float64]) {
    %1338 = @func_9805() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %1339 = @func_9563() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64], Tensor[(11, 5, 8), float64]) */;
    %1340 = cast(meta[relay.Constant][50] /* ty=Tensor[(297), float64] */, dtype="float64") /* ty=Tensor[(297), float64] */;
    %1341 = reshape(%1340, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float64] */;
    %1342 = @func_5480(%1341) /* ty=(Tensor[(440), float32], Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 9, 3), float32], Tensor[(6, 10, 13), float32]) */;
    %1343 = %1338.0;
    %1344 = %1339.1;
    %1345 = %1342.1;
    (%1343, %1344, %1345, meta[relay.Constant][50] /* ty=Tensor[(297), float64] */)
  };
  %1346() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(297), float64]) */
}

def @func_15616() -> Tensor[(6, 10, 13), float64] {
  %1348 = fn () -> Tensor[(6, 10, 13), float64] {
    %1347 = @func_8737() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %1347.0
  };
  %1348() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_3246(%var_3226: Tensor[(11, 5, 8), float32]) -> (Tensor[(11, 5, 8), float64], Tensor[(440), float32]) {
  %1349 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
  %1350 = cast(%var_3226, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
  %1351 = shape_of(%1349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1352 = cast(%1349, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
  %1353 = dyn.reshape(%1350, %1351, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1354 = @func_2207() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
  %1355 = floor_mod(%1352, %1353) /* ty=Tensor[(11, 5, 8), float64] */;
  %1356 = %1354.0;
  (%1355, %1356)
}

def @func_10257(%var_10255: Tensor[(16, 26), float64], %var_10256: Tensor[(16, 26), float64]) -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(26), float32], Tensor[(11, 5, 8), float32], Tensor[(?, 13, 2), uint32], Tensor[(16, 26), uint8]) {
  @func_10253(%var_10255, %var_10256) /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(26), float32], Tensor[(11, 5, 8), float32], Tensor[(?, 13, 2), uint32], Tensor[(16, 26), uint8]) */
}

def @func_10658(%var_10656: Tensor[(10, 5, 8), uint64], %var_10657: Tensor[(10, 5, 8), uint64]) -> (Tensor[(10, 5, 8), uint64],) {
  @func_10654(%var_10656, %var_10657) /* ty=(Tensor[(10, 5, 8), uint64],) */
}

def @func_14390(%var_14382: Tensor[(252, 2), uint16]) -> (Tensor[(110, 4), float32], Tensor[(11, 5, 8), float32], Tensor[(6, 6, 14), uint16], Tensor[(252, 2), uint16]) {
  %1357 = @func_11842() /* ty=(Tensor[(110, 4), float32],) */;
  %1358 = @func_9740() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1359 = cast(%var_14382, dtype="uint16") /* ty=Tensor[(252, 2), uint16] */;
  %1360 = reshape(%1359, newshape=[6, 6, 14]) /* ty=Tensor[(6, 6, 14), uint16] */;
  %1361 = %1357.0;
  %1362 = %1358.1;
  %1363 = @func_5604(%1360) /* ty=Tensor[(6, 6, 14), uint16] */;
  (%1361, %1362, %1363, %var_14382)
}

def @func_16628(%var_16625: Tensor[(1, 1170), float32]) -> (Tensor[(6, 10, 13), float32], Tensor[(15, 13, 6), float32], Tensor[(1, 1170), float32]) {
  %1364 = cast(%var_16625, dtype="float32") /* ty=Tensor[(1, 1170), float32] */;
  %1365 = cast(%var_16625, dtype="float32") /* ty=Tensor[(1, 1170), float32] */;
  %1366 = reshape(%1364, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), float32] */;
  %1367 = reshape(%1365, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), float32] */;
  %1368 = @func_8705(%1366, %1367) /* ty=(Tensor[(15, 13, 6), float32],) */;
  %1369 = @func_14760() /* ty=Tensor[(6, 10, 13), float32] */;
  %1370 = %1368.0;
  (%1369, %1370, %var_16625)
}

def @func_8893() -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(110, 4), float32]) {
  %1380 = fn () -> (Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(110, 4), float32]) {
    %1371 = @func_8737() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %1372 = @func_2207() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
    %1373 = @func_4783() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %1374 = @func_6743() /* ty=(Tensor[(6, 10, 13), float64],) */;
    %1375 = %1371.0;
    %1376 = %1372.1;
    %1377 = %1373.0;
    %1378 = %1374.0;
    %1379 = @func_4166() /* ty=Tensor[(110, 4), float32] */;
    (%1375, %1376, %1377, %1378, %1379)
  };
  %1380() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(110, 4), float32]) */
}

def @func_3504() -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
  %1389 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
    %1381 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %1382 = @func_2128() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */;
    %1383 = @func_2433() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
    %1384 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
    %1385 = %1381.2;
    %1386 = %1382.1;
    %1387 = %1383.1;
    %1388 = @func_2659() /* ty=Tensor[(11, 5, 8), float32] */;
    (%1384, %1385, %1386, %1387, %1388)
  };
  %1389() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_2208() -> (Tensor[(440), float32], Tensor[(6, 10, 13), float64]) {
  %1394 = fn () -> (Tensor[(440), float32], Tensor[(6, 10, 13), float64]) {
    %1390 = @func_1885() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
    %1391 = @func_2128() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float32]) */;
    %1392 = %1390.3;
    %1393 = %1391.0;
    (%1392, %1393)
  };
  %1394() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */
}

def @func_4785() -> (Tensor[(11, 5, 8), float32],) {
  @func_4783() /* ty=(Tensor[(11, 5, 8), float32],) */
}

def @func_7385() -> Tensor[(11, 5, 8), float32] {
  @func_7383() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_14265() -> Tensor[(440), float32] {
  @func_14263() /* ty=Tensor[(440), float32] */
}

def @func_9565() -> (Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64], Tensor[(11, 5, 8), float64]) {
  @func_9563() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64], Tensor[(11, 5, 8), float64]) */
}

def @func_16716(%var_16714: Tensor[(6, 2, 16), float64]) -> (Tensor[(6, 2, 16), float64],) {
  @func_16713(%var_16714) /* ty=(Tensor[(6, 2, 16), float64],) */
}

def @func_2661() -> Tensor[(11, 5, 8), float32] {
  @func_2659() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_8815() -> (Tensor[(11, 5, 8), float32],) {
  %1395 = @func_6166() /* ty=Tensor[(11, 5, 8), float32] */;
  (%1395,)
}

def @func_6828() -> Tensor[(11, 5, 8), float32] {
  %1397 = fn () -> Tensor[(11, 5, 8), float32] {
    %1396 = @func_2340() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %1396.0
  };
  %1397() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_8989() -> Tensor[(6, 10, 13), float64] {
  @func_8987() /* ty=Tensor[(6, 10, 13), float64] */
}

def @func_9041() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
  %1403 = fn () -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) {
    %1398 = @func_6602() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
    %1399 = @func_7184() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float64]) */;
    %1400 = %1398.1;
    %1401 = @func_3597() /* ty=Tensor[(11, 5, 8), float32] */;
    %1402 = %1399.0;
    (%1400, %1401, %1402)
  };
  %1403() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_18071(%var_18055: Tensor[(1573), float32], %var_18059: Tensor[(1573), float32]) -> (Tensor[(440), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float64], Tensor[(1573), uint16], Tensor[(6, 10, 13), float64]) {
  %1404 = cast(%var_18055, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %1405 = reshape(%1404, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float32] */;
  %1406 = @func_9614(%1405) /* ty=(Tensor[(13, 11, 11), uint16], Tensor[(440), float32]) */;
  %1407 = @func_14517() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64], Tensor[(11, 5, 8), float32]) */;
  %1408 = cast(%var_18059, dtype="uint16") /* ty=Tensor[(1573), uint16] */;
  %1409 = shape_of(%var_18055, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1410 = cast(%var_18055, dtype="uint16") /* ty=Tensor[(1573), uint16] */;
  %1411 = dyn.reshape(%1408, %1409, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1412 = @func_14946() /* ty=Tensor[(440), float32] */;
  %1413 = %1406.1;
  %1414 = %1407.0;
  %1415 = left_shift(%1410, %1411) /* ty=Tensor[(1573), uint16] */;
  %1416 = @func_15615() /* ty=Tensor[(6, 10, 13), float64] */;
  (%1412, %1413, %1414, %1415, %1416)
}

def @func_15690() -> (Tensor[(11, 5, 8), float32],) {
  %1417 = @func_10018() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
  %1418 = %1417.0;
  (%1418,)
}

def @func_19998() -> (Tensor[(110, 4), float64], Tensor[(11, 5, 8), float32]) {
  %1425 = fn () -> (Tensor[(110, 4), float64], Tensor[(11, 5, 8), float32]) {
    %1419 = @func_11842() /* ty=(Tensor[(110, 4), float32],) */;
    %1420 = %1419.0;
    %1421 = cast(%1420, dtype="float64") /* ty=Tensor[(110, 4), float64] */;
    %1422 = @func_9795() /* ty=(Tensor[(11, 5, 8), float32],) */;
    %1423 = cosh(%1421) /* ty=Tensor[(110, 4), float64] */;
    %1424 = %1422.0;
    (%1423, %1424)
  };
  %1425() /* ty=(Tensor[(110, 4), float64], Tensor[(11, 5, 8), float32]) */
}

def @func_890(%var_887: Tensor[(11, 5, 8), float32]) -> Tensor[(11, 5, 8), float32] {
  %1426 = cast(%var_887, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  sqrt(%1426) /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_1700() -> (Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) {
  %1427 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %1428 = %1427.0;
  %1429 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  %1430 = @func_1662() /* ty=Tensor[(6, 10, 13), float32] */;
  (%1428, %1429, %1430)
}

def @func_19153() -> (Tensor[(11, 5, 8), float32], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64], Tensor[(10, 5, 8), uint64], Tensor[(40, 10), uint64]) {
  %1444 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64], Tensor[(10, 5, 8), uint64], Tensor[(40, 10), uint64]) {
    %1431 = cast(8.47462f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1432 = cast(meta[relay.Constant][51] /* ty=Tensor[(2535), float64] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %1433 = reshape(%1431, newshape=[]) /* ty=float64 */;
    %1434 = reshape(%1432, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float64] */;
    %1435 = @func_4055(%1433, %1434) /* ty=(Tensor[(13, 13, 15), bool],) */;
    %1436 = cast(meta[relay.Constant][52] /* ty=Tensor[(40, 10), uint64] */, dtype="uint64") /* ty=Tensor[(40, 10), uint64] */;
    %1437 = cast(meta[relay.Constant][52] /* ty=Tensor[(40, 10), uint64] */, dtype="uint64") /* ty=Tensor[(40, 10), uint64] */;
    %1438 = reshape(%1436, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint64] */;
    %1439 = reshape(%1437, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint64] */;
    %1440 = @func_10654(%1438, %1439) /* ty=(Tensor[(10, 5, 8), uint64],) */;
    %1441 = @func_9956() /* ty=Tensor[(11, 5, 8), float32] */;
    %1442 = %1435.0;
    %1443 = %1440.0;
    (%1441, %1442, 8.47462f64 /* ty=float64 */, meta[relay.Constant][51] /* ty=Tensor[(2535), float64] */, %1443, meta[relay.Constant][52] /* ty=Tensor[(40, 10), uint64] */)
  };
  %1444() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(13, 13, 15), bool], float64, Tensor[(2535), float64], Tensor[(10, 5, 8), uint64], Tensor[(40, 10), uint64]) */
}

def @func_19522() -> (Tensor[(440), float32], Tensor[(11, 5, 8), float32]) {
  @func_19520() /* ty=(Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_15200() -> (Tensor[(6, 10, 13), float32],) {
  %1447 = fn () -> (Tensor[(6, 10, 13), float32],) {
    %1445 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
    %1446 = %1445.1;
    (%1446,)
  };
  %1447() /* ty=(Tensor[(6, 10, 13), float32],) */
}

def @func_3516() -> Tensor[(440), float32] {
  %1448 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1448.2
}

def @func_13612() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(440), float32]) {
  %1457 = fn () -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(440), float32]) {
    %1449 = @func_11893() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(11, 5, 8), float32]) */;
    %1450 = @func_1700() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
    %1451 = @func_11702() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) */;
    %1452 = @func_2433() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */;
    %1453 = %1449.1;
    %1454 = %1450.1;
    %1455 = %1451.1;
    %1456 = %1452.0;
    (%1453, %1454, %1455, %1456)
  };
  %1457() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32], Tensor[(440), float32]) */
}

def @func_17471() -> (Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float32]) {
  %1458 = @func_11550() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64]) */;
  %1459 = @func_9664() /* ty=(Tensor[(6, 10, 13), float32],) */;
  %1460 = %1458.0;
  %1461 = %1459.0;
  (%1460, %1461)
}

def @func_1663() -> Tensor[(6, 10, 13), float32] {
  %1463 = fn () -> Tensor[(6, 10, 13), float32] {
    %1462 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %1462.0
  };
  %1463() /* ty=Tensor[(6, 10, 13), float32] */
}

def @func_5343() -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
  %1467 = fn () -> (Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) {
    %1464 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
    %1465 = %1464.0;
    %1466 = @func_4521() /* ty=Tensor[(11, 5, 8), float32] */;
    (%1465, %1466)
  };
  %1467() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32]) */
}

def @func_7537() -> Tensor[(6, 10, 13), float64] {
  %1468 = @func_2827() /* ty=(Tensor[(6, 10, 13), float64],) */;
  %1468.0
}

def @func_15344() -> Tensor[(11, 5, 8), float32] {
  @func_15342() /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_11550() -> (Tensor[(11, 5, 8), float32], Tensor[(2, 3, 6), float64]) {
  %1469 = @func_1538() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32]) */;
  %1470 = @func_8695() /* ty=(Tensor[(2, 3, 6), float64], Tensor[(440), float32], Tensor[(11, 5, 8), float32]) */;
  %1471 = %1469.1;
  %1472 = %1470.0;
  (%1471, %1472)
}

def @func_5487() -> Tensor[(110, 4), float32] {
  %1473 = @func_4977() /* ty=(Tensor[(6, 10, 13), float32], Tensor[(110, 4), float32]) */;
  %1473.1
}

def @func_17933() -> (Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(24, 26), float64]) {
  @func_17931() /* ty=(Tensor[(11, 5, 8), float32], Tensor[(110, 4), float32], Tensor[(24, 26), float64]) */
}

def @func_15031() -> (Tensor[(11, 5, 8), float32], Tensor[(440), float32]) {
  %1474 = @func_5289() /* ty=(Tensor[(440), float32],) */;
  %1475 = @func_7469() /* ty=Tensor[(11, 5, 8), float32] */;
  %1476 = %1474.0;
  (%1475, %1476)
}

def @func_20477(%var_20476: Tensor[(12, 70), int64]) -> (Tensor[(12, 70), bool], Tensor[(11, 5, 8), float32]) {
  %1486 = fn (%var_20458: Tensor[(12, 70), int64]) -> (Tensor[(12, 70), bool], Tensor[(11, 5, 8), float32]) {
    %1477 = @func_18389() /* ty=(Tensor[(12, 70), int64], Tensor[(6, 10, 13), float64]) */;
    %1478 = %1477.0;
    %1479 = cast(%var_20458, dtype="bool") /* ty=Tensor[(12, 70), bool] */;
    %1480 = shape_of(%1478, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1481 = cast(%1478, dtype="bool") /* ty=Tensor[(12, 70), bool] */;
    %1482 = dyn.reshape(%1479, %1480, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1483 = @func_15287() /* ty=(Tensor[(9, 7, 9), float64], Tensor[(11, 5, 8), float32]) */;
    %1484 = less_equal(%1481, %1482) /* ty=Tensor[(12, 70), bool] */;
    %1485 = %1483.1;
    (%1484, %1485)
  };
  %1486(%var_20476) /* ty=(Tensor[(12, 70), bool], Tensor[(11, 5, 8), float32]) */
}

def @func_19795(%var_19793: Tensor[(3, 7, 10), float64]) -> Tensor[(3, 7, 10), float64] {
  @func_19792(%var_19793) /* ty=Tensor[(3, 7, 10), float64] */
}

def @func_3809() -> (Tensor[(440), float32],) {
  %1487 = @func_1818() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(440), float32], Tensor[(6, 10, 13), float32], Tensor[(6, 10, 13), float32]) */;
  %1488 = %1487.2;
  (%1488,)
}

def @func_5290() -> (Tensor[(440), float32],) {
  %1491 = fn () -> (Tensor[(440), float32],) {
    %1489 = @func_2207() /* ty=(Tensor[(440), float32], Tensor[(6, 10, 13), float64]) */;
    %1490 = %1489.0;
    (%1490,)
  };
  %1491() /* ty=(Tensor[(440), float32],) */
}

def @func_13970() -> Tensor[(6, 10, 13), float64] {
  %1492 = @func_8892() /* ty=(Tensor[(6, 10, 13), float64], Tensor[(6, 10, 13), float64], Tensor[(11, 5, 8), float32], Tensor[(6, 10, 13), float64], Tensor[(110, 4), float32]) */;
  %1492.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen901/build/output.py:5741: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen901/build/output.py", line 5746, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(168) tvmgen_default_fused_log2_kernel0(float* __restrict__ T_log2, float* __restrict__ placeholder) {
  T_log2[(((int)threadIdx.x))] = __log2f(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


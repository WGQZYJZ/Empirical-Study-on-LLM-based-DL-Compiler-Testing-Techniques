import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_205 = relay.var("var_205", dtype = "uint32", shape = (1, 7, 11))#candidate|205|(1, 7, 11)|var|uint32
var_206 = relay.var("var_206", dtype = "uint32", shape = (14, 7, 11))#candidate|206|(14, 7, 11)|var|uint32
bop_207 = relay.greater(var_205.astype('bool'), var_206.astype('bool')) # shape=(14, 7, 11)
bop_210 = relay.logical_xor(var_206.astype('uint32'), relay.reshape(bop_207.astype('uint32'), relay.shape_of(var_206))) # shape=(14, 7, 11)
uop_217 = relay.exp(bop_207.astype('float32')) # shape=(14, 7, 11)
output = relay.Tuple([bop_210,uop_217,])
output2 = relay.Tuple([bop_210,uop_217,])
func_239 = relay.Function([var_205,var_206,], output)
mod['func_239'] = func_239
mod = relay.transform.InferType()(mod)
mutated_mod['func_239'] = func_239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_239_call = mutated_mod.get_global_var('func_239')
var_241 = relay.var("var_241", dtype = "uint32", shape = (1, 7, 11))#candidate|241|(1, 7, 11)|var|uint32
var_242 = relay.var("var_242", dtype = "uint32", shape = (14, 7, 11))#candidate|242|(14, 7, 11)|var|uint32
call_240 = func_239_call(var_241,var_242,)
output = call_240
func_243 = relay.Function([var_241,var_242,], output)
mutated_mod['func_243'] = func_243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_351 = relay.var("var_351", dtype = "float32", shape = (14, 14, 12))#candidate|351|(14, 14, 12)|var|float32
uop_352 = relay.exp(var_351.astype('float32')) # shape=(14, 14, 12)
func_239_call = mod.get_global_var('func_239')
func_243_call = mutated_mod.get_global_var('func_243')
var_357 = relay.var("var_357", dtype = "uint32", shape = (77,))#candidate|357|(77,)|var|uint32
var_358 = relay.var("var_358", dtype = "uint32", shape = (1, 1078))#candidate|358|(1, 1078)|var|uint32
call_356 = relay.TupleGetItem(func_239_call(relay.reshape(var_357.astype('uint32'), [1, 7, 11]), relay.reshape(var_358.astype('uint32'), [14, 7, 11]), ), 0)
call_359 = relay.TupleGetItem(func_243_call(relay.reshape(var_357.astype('uint32'), [1, 7, 11]), relay.reshape(var_358.astype('uint32'), [14, 7, 11]), ), 0)
bop_365 = relay.right_shift(var_358.astype('int16'), relay.reshape(call_356.astype('int16'), relay.shape_of(var_358))) # shape=(1, 1078)
bop_368 = relay.right_shift(var_358.astype('int16'), relay.reshape(call_359.astype('int16'), relay.shape_of(var_358))) # shape=(1, 1078)
output = relay.Tuple([uop_352,var_357,bop_365,])
output2 = relay.Tuple([uop_352,var_357,bop_368,])
func_382 = relay.Function([var_351,var_357,var_358,], output)
mod['func_382'] = func_382
mod = relay.transform.InferType()(mod)
var_383 = relay.var("var_383", dtype = "float32", shape = (14, 14, 12))#candidate|383|(14, 14, 12)|var|float32
var_384 = relay.var("var_384", dtype = "uint32", shape = (77,))#candidate|384|(77,)|var|uint32
var_385 = relay.var("var_385", dtype = "uint32", shape = (1, 1078))#candidate|385|(1, 1078)|var|uint32
output = func_382(var_383,var_384,var_385,)
func_386 = relay.Function([var_383,var_384,var_385,], output)
mutated_mod['func_386'] = func_386
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1304 = relay.const([[[-1.168959,6.913537,-8.578417,2.426520,3.809996]]], dtype = "float64")#candidate|1304|(1, 1, 5)|const|float64
uop_1305 = relay.log2(const_1304.astype('float64')) # shape=(1, 1, 5)
uop_1309 = relay.cosh(const_1304.astype('float64')) # shape=(1, 1, 5)
const_1312 = relay.const([[[-0.316946,-0.194196,-3.457214,2.748181,-5.022545],[-9.717190,-5.616489,3.150545,-8.365157,6.168599],[9.312395,-0.192026,4.780763,7.625049,1.779269],[1.821563,0.393275,3.601985,2.943959,-4.137558],[-7.697151,4.881236,-1.268241,4.294142,3.486675],[0.495542,6.431808,8.295476,4.807651,-2.227348],[3.523642,-8.235541,1.209664,-7.003861,-9.659791],[-1.962828,4.700073,-3.203407,-4.704768,-0.472180],[-3.538492,-0.852998,-3.281309,-3.619998,9.387692],[-8.604669,2.201250,4.545875,-7.075528,2.095536]],[[-9.743290,-4.656858,-9.100484,2.008397,-6.063352],[-2.259915,0.098847,-4.968684,5.318904,-8.530732],[5.766784,5.061687,3.600298,-9.182835,9.660747],[9.559299,9.968902,0.117165,-2.945403,4.962232],[9.631061,9.040279,-9.282290,-4.935118,3.577521],[-8.650876,7.812919,8.811876,-7.232268,6.541848],[2.949468,-1.077378,-4.926610,-4.914258,-6.537245],[2.766469,-3.893388,8.378214,6.853266,-1.736130],[-7.894361,5.805745,-7.779423,-1.209454,-2.716120],[-2.436666,-6.199174,2.602417,2.046620,4.253168]],[[5.993643,1.674424,-9.587509,-2.185515,-8.229189],[-2.787973,-4.796629,-2.552700,-5.129298,1.530540],[-7.351324,-8.119993,-1.556202,2.826499,-6.949763],[-0.196748,-9.999272,0.560493,-0.435304,-0.675807],[-7.534231,9.173987,-0.393336,3.590842,-0.317611],[-0.462043,0.017333,-5.166078,-4.996091,3.172928],[-4.732567,-1.472390,2.102758,2.208147,4.746227],[-5.982565,-5.782166,-2.800311,6.441508,1.151754],[1.950406,7.396536,0.986946,-4.014807,8.597805],[-0.810315,3.959166,-7.339175,-0.850234,-8.206046]],[[9.256823,5.592938,-0.264234,5.603804,7.154820],[-7.353814,-3.981466,9.876760,8.146471,2.522889],[4.111861,-1.827365,-6.678537,7.605173,3.852616],[-6.847952,-2.999850,-6.038484,-2.411215,8.754578],[2.784765,-9.977923,3.005244,8.462849,3.050444],[2.534404,-6.117830,-5.292934,6.058045,4.618578],[4.537089,7.284182,6.532570,5.074497,5.353179],[6.386730,-5.027095,-1.794188,-0.119002,-5.517058],[-7.233302,-9.170299,9.162057,4.507557,4.874019],[4.897264,2.020483,-2.619050,4.350134,-1.714722]],[[-8.725415,3.974074,9.386493,-2.956726,6.882024],[7.554328,5.942926,-6.908566,-7.955762,4.874344],[-4.185351,4.921955,6.261442,-1.386296,6.786521],[-3.927506,-9.459776,-0.095936,0.239009,5.893404],[3.153205,0.850914,3.986413,6.024046,3.546971],[8.287859,-4.589219,7.614682,-8.895811,-0.230931],[-3.674410,-1.752351,-4.003064,-8.095322,3.940899],[-7.733255,4.353303,3.796671,4.899178,-8.198044],[6.174411,-9.347414,-2.617967,-9.970199,9.381258],[-1.195215,7.416696,-7.517093,4.689547,3.185282]],[[3.149653,3.391886,6.191876,3.539149,-9.927618],[-4.097962,2.905360,5.475224,-4.407465,-7.480519],[-0.425540,-8.209323,5.301245,6.899415,0.114128],[-1.901794,-3.724069,3.455647,-4.614604,-8.068059],[8.399757,9.843916,6.244010,-2.557498,-2.881276],[8.393187,-7.833375,-7.812491,-0.320829,-8.507633],[-5.582109,-5.676236,9.121200,9.943495,-5.350526],[-2.728073,-4.366603,-6.069971,-5.452395,9.439789],[-7.553126,1.535905,-0.236940,-6.241031,4.096091],[7.749341,6.910651,-8.078509,7.313578,8.841061]],[[8.439122,4.849968,1.709079,3.787368,3.885285],[-1.354275,5.541910,-4.751359,9.361648,-5.872352],[8.367174,-5.142011,-6.642084,1.063321,-3.272174],[6.669025,-4.461869,8.452373,3.174652,9.934223],[-8.277624,-0.468126,6.137222,3.649856,6.699794],[8.128790,3.840694,-0.736975,-1.082698,-9.714317],[-5.104439,-6.767248,-1.474922,-0.798098,-8.139089],[-7.980290,6.376176,-1.976000,0.717122,6.359678],[-2.338107,-4.759940,-2.531980,5.984101,-0.877206],[-9.943724,7.927059,-9.292928,-5.336109,2.305284]],[[-2.528244,3.561752,-2.253215,1.238663,-0.380223],[8.650803,5.444265,-8.322316,-3.295122,2.284514],[5.476083,1.883732,-1.906947,9.565938,-8.848922],[-9.373263,-5.183391,-9.051491,5.357424,6.870673],[-6.598965,-7.339567,-1.022674,2.556774,-8.989761],[9.868572,-2.708041,0.621825,-4.637217,-7.648121],[1.214158,-8.612575,-1.066736,2.081651,-1.140982],[4.940444,7.138829,-4.262351,1.935725,-7.593084],[-4.135764,3.971086,-3.245333,-4.192925,1.482672],[0.934487,2.419350,6.614064,-9.204000,0.243614]],[[5.755016,0.345357,5.284716,-2.567150,5.151422],[-3.445960,-3.197195,5.979701,-5.483796,-6.050120],[-0.719013,6.895901,2.943285,2.342940,5.359360],[-0.176535,-1.139640,6.859062,3.338738,-2.548160],[-9.557844,9.838094,-0.852691,2.036427,-5.148080],[8.747831,0.173523,-0.787183,0.108335,-4.632888],[-0.944301,1.100921,-0.708469,-9.384387,-1.073688],[-3.069425,-7.864385,7.942054,-0.436362,1.321174],[-6.222381,1.154915,6.383298,-9.284027,-0.629140],[2.696687,5.610690,8.067704,4.351459,-5.428213]],[[-5.764614,-3.715030,-2.246942,4.286889,-4.654915],[0.291763,3.516078,-1.894438,-7.497386,7.092963],[5.587201,3.679023,4.594852,-1.014552,9.293141],[-0.146966,-9.586627,-1.770929,9.584047,4.214610],[-0.798737,-8.916499,-7.463440,6.726270,-2.899681],[5.914157,0.883026,-3.971854,2.205202,-7.688996],[4.868746,-1.024175,5.457486,-4.204464,-1.338459],[6.888527,-6.147602,6.492680,-9.298806,6.997756],[6.525590,9.473517,-2.653799,-0.390489,-8.967516],[-3.443756,7.964526,8.549468,7.833008,3.767939]],[[-7.536055,-5.767292,3.403947,9.656931,-1.021778],[-4.712540,3.135579,8.775014,6.365818,8.887043],[-1.334168,-3.767154,-5.063458,-9.248462,3.347370],[4.160705,-4.021067,1.597389,9.015776,-9.697027],[5.455019,-2.445663,-8.246736,-3.797364,0.128865],[0.641774,9.772925,4.345579,-3.688535,4.301214],[-7.253295,7.690549,1.656640,-7.386146,0.273271],[-7.005492,5.479638,6.430266,-7.158012,9.904227],[2.400929,0.022615,-5.738177,-2.105415,9.701780],[9.268022,-8.469930,-5.840231,9.235919,9.208818]]], dtype = "float64")#candidate|1312|(11, 10, 5)|const|float64
bop_1313 = relay.add(uop_1309.astype('int64'), const_1312.astype('int64')) # shape=(11, 10, 5)
func_239_call = mod.get_global_var('func_239')
func_243_call = mutated_mod.get_global_var('func_243')
var_1318 = relay.var("var_1318", dtype = "uint32", shape = (11, 7))#candidate|1318|(11, 7)|var|uint32
var_1319 = relay.var("var_1319", dtype = "uint32", shape = (1078, 1))#candidate|1319|(1078, 1)|var|uint32
call_1317 = relay.TupleGetItem(func_239_call(relay.reshape(var_1318.astype('uint32'), [1, 7, 11]), relay.reshape(var_1319.astype('uint32'), [14, 7, 11]), ), 1)
call_1320 = relay.TupleGetItem(func_243_call(relay.reshape(var_1318.astype('uint32'), [1, 7, 11]), relay.reshape(var_1319.astype('uint32'), [14, 7, 11]), ), 1)
func_382_call = mod.get_global_var('func_382')
func_386_call = mutated_mod.get_global_var('func_386')
var_1328 = relay.var("var_1328", dtype = "float32", shape = (4, 588))#candidate|1328|(4, 588)|var|float32
call_1327 = relay.TupleGetItem(func_382_call(relay.reshape(var_1328.astype('float32'), [14, 14, 12]), relay.reshape(var_1318.astype('uint32'), [77,]), relay.reshape(var_1319.astype('uint32'), [1, 1078]), ), 2)
call_1329 = relay.TupleGetItem(func_386_call(relay.reshape(var_1328.astype('float32'), [14, 14, 12]), relay.reshape(var_1318.astype('uint32'), [77,]), relay.reshape(var_1319.astype('uint32'), [1, 1078]), ), 2)
uop_1331 = relay.log10(uop_1309.astype('float64')) # shape=(1, 1, 5)
output = relay.Tuple([uop_1305,bop_1313,call_1317,var_1318,var_1319,call_1327,var_1328,uop_1331,])
output2 = relay.Tuple([uop_1305,bop_1313,call_1320,var_1318,var_1319,call_1329,var_1328,uop_1331,])
func_1335 = relay.Function([var_1318,var_1319,var_1328,], output)
mod['func_1335'] = func_1335
mod = relay.transform.InferType()(mod)
mutated_mod['func_1335'] = func_1335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1335_call = mutated_mod.get_global_var('func_1335')
var_1337 = relay.var("var_1337", dtype = "uint32", shape = (11, 7))#candidate|1337|(11, 7)|var|uint32
var_1338 = relay.var("var_1338", dtype = "uint32", shape = (1078, 1))#candidate|1338|(1078, 1)|var|uint32
var_1339 = relay.var("var_1339", dtype = "float32", shape = (4, 588))#candidate|1339|(4, 588)|var|float32
call_1336 = func_1335_call(var_1337,var_1338,var_1339,)
output = call_1336
func_1340 = relay.Function([var_1337,var_1338,var_1339,], output)
mutated_mod['func_1340'] = func_1340
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1677 = relay.var("var_1677", dtype = "int64", shape = ())#candidate|1677|()|var|int64
var_1678 = relay.var("var_1678", dtype = "int64", shape = (13, 4, 1))#candidate|1678|(13, 4, 1)|var|int64
bop_1679 = relay.greater_equal(var_1677.astype('bool'), var_1678.astype('bool')) # shape=(13, 4, 1)
func_1335_call = mod.get_global_var('func_1335')
func_1340_call = mutated_mod.get_global_var('func_1340')
const_1690 = relay.const([[-7,-2,10,-10,10,7,-9],[4,4,6,-10,9,-4,9],[6,-8,-4,3,10,5,7],[-1,-6,6,6,-2,-6,-2],[-7,6,-2,8,5,-10,-3],[6,-8,8,-4,5,-6,-8],[7,-3,-1,-8,5,1,-7],[6,5,-2,3,-6,-4,-6],[-8,-3,4,-9,-4,10,-5],[9,1,4,1,8,5,10],[-6,10,-1,-1,8,2,9]], dtype = "uint32")#candidate|1690|(11, 7)|const|uint32
const_1691 = relay.const([-4,-7,-10,-2,6,5,-5,-3,-1,9,7,-9,-1,8,4,5,-2,2,5,4,-3,5,4,-2,-10,-9,10,3,-8,1,-10,9,-3,5,4,-9,8,8,1,-7,1,-9,1,-2,3,-10,-4,-7,1,-4,1,3,-9,-1,10,-3,-3,2,6,-4,9,-4,-4,-9,4,9,9,7,2,-8,8,-3,-6,7,-9,1,-7,-3,7,-6,-5,8,-7,-2,5,-1,-3,-3,9,1,5,8,-8,-4,2,5,5,3,-8,-10,7,5,-10,-9,10,-7,-3,-6,-5,-5,8,-6,3,4,-6,-2,10,3,6,8,-1,1,-1,2,-7,5,-6,10,-2,-9,-3,-9,10,2,3,4,-7,5,-3,-6,-5,8,3,9,4,-2,-10,-9,-5,8,5,2,-6,1,-8,-10,9,-4,-5,8,2,-8,4,-5,-10,-7,-3,-6,9,-8,4,10,7,-6,7,-4,7,-1,9,10,-7,4,-7,10,-8,3,-8,5,-4,-8,8,-10,-3,-4,9,2,2,-9,-6,4,-7,6,-9,1,-4,6,10,-9,-9,3,-6,7,1,-6,2,9,-9,7,5,-3,6,5,5,10,6,5,8,-1,-5,6,-8,-9,9,7,5,-5,7,-8,3,-8,1,10,-5,-10,7,-10,-2,-4,-6,-5,8,3,-1,10,10,10,3,-3,-10,-9,-1,-1,-9,-2,-5,5,10,-1,-8,4,10,9,5,-2,-7,9,1,10,7,4,-10,7,4,2,6,-1,-9,10,4,-8,-4,-8,-9,6,10,-9,-6,4,-2,-5,10,7,-6,-5,10,1,2,-10,8,8,3,-2,-4,10,-1,-8,-10,-4,3,-9,3,-6,9,-8,9,5,-5,-10,3,9,-8,-7,-2,-7,8,-8,3,-10,8,-7,5,-1,-1,3,3,-8,-9,-9,3,5,-1,-6,5,-7,1,-1,8,-9,5,4,4,-10,6,1,7,-3,-9,1,3,10,-1,-4,-5,1,5,-7,-7,9,8,3,7,2,-4,-1,-10,-5,-2,-4,-2,-6,-10,5,1,3,7,3,-3,-2,-9,-6,-4,3,-9,-4,2,9,4,-1,9,2,-1,10,1,1,-6,10,9,7,-10,3,10,8,-6,-9,-5,1,-8,-8,-4,1,-9,10,-4,-7,8,8,2,2,-7,4,-1,-7,-7,-10,-5,9,-3,1,-5,-4,10,1,-10,-1,3,8,-10,5,-10,-6,-7,7,5,-7,-8,-3,3,-2,6,-9,-9,-3,9,-4,-4,-4,-7,-10,10,-3,10,-9,-10,7,6,-5,2,4,7,-10,10,1,-4,-10,-10,-5,8,3,-8,-4,-6,-9,-8,-10,3,-7,4,8,10,-4,-2,-1,4,-8,6,-7,2,1,-9,6,-8,2,-10,-10,2,-9,3,-5,-5,1,7,-6,-4,-9,-5,-4,8,7,-10,-6,-2,-7,6,6,-4,-5,-3,-10,-5,1,-5,-6,-2,-1,-1,7,4,10,5,-1,3,2,6,-4,-2,-4,-9,-2,-3,-5,9,-10,5,3,8,-9,-4,8,2,3,-8,-2,7,-1,-8,5,-8,2,-6,3,1,-6,4,4,-7,-1,6,-5,-9,5,3,-7,-6,-4,4,-8,-1,9,-8,1,-2,4,6,-10,6,-2,-5,7,8,6,1,6,-6,-7,-7,-4,9,-6,-7,-9,4,-9,-2,2,2,-9,-2,4,9,-4,8,-5,8,-3,10,8,-3,4,-7,-5,-4,1,9,-4,7,-5,8,3,3,-10,7,-8,-7,8,-9,-3,7,-9,-9,9,10,10,-5,-3,8,3,1,8,2,-2,-8,3,8,6,-4,-1,10,-2,6,-3,-9,4,8,8,9,-2,-4,4,7,-7,-6,7,4,1,5,8,2,3,-3,1,-2,9,-10,-8,-5,-9,-7,-7,6,-3,-1,4,-1,3,-2,6,-9,-10,9,5,-6,5,1,-4,-9,7,-6,-3,-1,-4,3,7,-6,1,6,9,10,-5,9,7,6,10,-4,10,-1,6,-6,-8,-1,-8,-4,-1,5,7,-5,2,6,-5,4,6,2,1,-7,8,9,5,5,10,-1,-3,-1,10,-6,-10,10,8,-7,8,10,-2,-6,-4,2,-10,-3,1,-10,3,-6,8,8,8,7,-9,-5,-7,7,-1,-5,4,-6,4,-8,3,2,1,-9,5,-8,2,5,-4,9,3,-8,6,6,1,-8,1,6,-10,-3,-1,-3,-6,-2,-3,6,9,-7,-8,-4,8,-3,-2,2,-6,-10,8,1,2,-4,4,-2,-6,5,-3,-4,1,-1,8,6,10,2,9,-2,5,-7,6,4,-10,7,-10,-4,8,-5,-1,-2,-8,9,-8,-8,6,3,-7,-5,6,8,-5,-6,-2,-1,1,-3,8,6,-4,-6,-4,-4,6,5,5,7,-10,1,3,4,-5,-4,-3,-6,7,-9,3,-1,5,10,-1,-8,-1,2,2,9,-5,2,-5,4,2,-2,-7,5,-1,3,-3,3,-3,9,3,5,-1,5,-5,8,4,-4,5,4,8,7,10,7,-7,9,4,-7,10,1,-4,-3,-2,-1,10,-4,3,-2,-5,6,-5,1,8,-6,-3,2,-7,6,-5,8,-2,-4,6,-10,6,3,1,-3,-6,-5,-6,-6,3,-4,-1,-4,5,-10,5,-3,7,4,-2,9,4,6,-3,4,-6,-6,1,10,1,8,-3,9,-9,-10,-8,8,4,-3,-6,-5,-3,9,-5,9,-10,-4,-10,-5,-5,-9,-3,-6,-10,-4,-6,-1,3,3,3,-4,1,-6,-10,-9,5,8,6,6,5,-4,-10,9,9,1,-6,-2,2,7,10,-5,-7,-4,-8,-8,-2,-3,-9,8,-4,7,4,6,-1,6,-2], dtype = "uint32")#candidate|1691|(1078,)|const|uint32
var_1692 = relay.var("var_1692", dtype = "float32", shape = (84, 28))#candidate|1692|(84, 28)|var|float32
call_1689 = relay.TupleGetItem(func_1335_call(relay.reshape(const_1690.astype('uint32'), [11, 7]), relay.reshape(const_1691.astype('uint32'), [1078, 1]), relay.reshape(var_1692.astype('float32'), [4, 588]), ), 1)
call_1693 = relay.TupleGetItem(func_1340_call(relay.reshape(const_1690.astype('uint32'), [11, 7]), relay.reshape(const_1691.astype('uint32'), [1078, 1]), relay.reshape(var_1692.astype('float32'), [4, 588]), ), 1)
output = relay.Tuple([bop_1679,call_1689,const_1690,const_1691,var_1692,])
output2 = relay.Tuple([bop_1679,call_1693,const_1690,const_1691,var_1692,])
func_1698 = relay.Function([var_1677,var_1678,var_1692,], output)
mod['func_1698'] = func_1698
mod = relay.transform.InferType()(mod)
var_1699 = relay.var("var_1699", dtype = "int64", shape = ())#candidate|1699|()|var|int64
var_1700 = relay.var("var_1700", dtype = "int64", shape = (13, 4, 1))#candidate|1700|(13, 4, 1)|var|int64
var_1701 = relay.var("var_1701", dtype = "float32", shape = (84, 28))#candidate|1701|(84, 28)|var|float32
output = func_1698(var_1699,var_1700,var_1701,)
func_1702 = relay.Function([var_1699,var_1700,var_1701,], output)
mutated_mod['func_1702'] = func_1702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2096 = relay.var("var_2096", dtype = "float32", shape = (5, 4, 8))#candidate|2096|(5, 4, 8)|var|float32
uop_2097 = relay.log(var_2096.astype('float32')) # shape=(5, 4, 8)
func_1335_call = mod.get_global_var('func_1335')
func_1340_call = mutated_mod.get_global_var('func_1340')
var_2101 = relay.var("var_2101", dtype = "uint32", shape = (77,))#candidate|2101|(77,)|var|uint32
const_2102 = relay.const([[4,6,-3,-9,-8,7,3,-8,8,-9,5,-1,3,-3,-5,-10,10,-4,-10,1,-9,6,4,4,1,8,-1,2,-6,-4,6,1,-2,1,10,-10,10,1,-1,5,-10,-1,2,7,-8,3,7,-2,-9,-2,4,-7,9,8,5,-3,-6,8,-8,10,-5,2,6,-2,-6,1,-6,2,-8,-7,-6,2,7,-2,2,-2,6,1,-7,-5,7,3,-6,-1,5,-1,-2,-3,-10,3,10,3,9,-5,6,9,6,9,7,10,1,3,2,-2,4,8,-1,7,4,-6,2,6,-5,1,8,-4,-3,-4,-6,9,4,-3,8,-4,-3,-5,-6,-2,7,-3,-5,5,5,-2,6,2,-9,-4,6,-9,10,2,4,-9,9,9,-10,-1,6,7,-7,1,-3,-4,6,-5,-9,2,-3,6,4,6,-10,10,-10,-7,5,4,-6,6,2,-8,-8,-4,-3,3,-6,1,5,1,8,4,-7,-1,5,-4,-9,-9,3,10,-6,5,-3,7,8,5,7,1,-8,-6,10,-1,2,-7,-5,-3,1,2,-2,4,-8,-10,-8,8,3,-8,-4,1,-1,1,7,-5,-9,2,6,5,-5,-9,-4,-7,-1,-10,-4,-10,-1,-8,-6,7,-2,1,5,1,1,-2,-7,3,-4,4,6,-2,7,-7,5,-10,-5,4,-7,9,-7,2,-10,3,-10,1,-10,-4,10,-10,7,1,-1,1,2,-5,-1,-4,-3,-4,-1,-8,-7,-8,6,-4,-9,5,2,9,6,-2,2,9,-2,-10,-9,5,-5,-2,2,5,1,-3,-6,4,8,-2,-3,-10,3,9,10,-7,-1,-5,-5,6,2,6,4,1,-9,4,3,8,-4,9,2,-7,5,6,4,-5,-3,-6,2,-9,-2,2,7,-5,-6,4,-2,-3,-5,-6,-2,9,1,-2,-3,-5,-8,-2,6,5,-2,2,-10,-1,-3,-5,-10,-10,-10,-8,-7,-9,10,7,9,-8,1,-6,-4,-5,8,1,6,10,6,-8,1,-6,-1,6,7,2,3,-8,-7,-3,-4,-2,6,6,-2,-2,4,-3,-1,4,3,7,-5,3,9,-4,8,5,2,3,8,8,-3,6,1,5,5,10,-6,-2,8,-8,-4,10,4,1,-3,3,-1,2,-6,-6,9,-3,-10,10,10,4,-10,-1,2,-8,2,-10,8,-5,-1,9,10,6,6,-7,3,2,8,2,9,2,1,4,-6,-6,-1,-6,9,-10,8,-3,9,-8,3,4,10,-1,9,-10,4,1,-3,6,-3,-8,4,-3,7,9,-9,-1,-10,-10,8,6,-8,-7,8,-4,2,1,3,8,-5,-1,-9,-5,-3,-9,-7,-4,4,7,-7,-4,-4,4,8,9,-6,-8,-1,5,10,-6,1,-9,1,8,6,6,6,7,-9,-7,-7,1,10,1,-10,-6,-6,7,-10,5,8,7,-1,-9,-3,7,-3,-7,4,4,6,6,-4,1,-9,-1,-10,-2,7,1,-10,-9,9,-8,5,-9,-2,6,2,-2,-8,10,3,8,5,-9,2,-8,5,3,7,-2,-1,-5,-6,3,-1,-1,-7,4,2,7,-3,-2,8,-6,-9,6,-7,-10,9,8,-8,-4,-9,7,4,-5,6,3,5,10,10,-4,8,-1,-9,7,-9,2,-1,-9,-2,2,-2,-3,6,8,1,4,-8,-6,-3,4,-6,-10,-5,4,3,-5,-2,-1,4,-6,-3,-4,-5,-8,5,-2,8,8,1,1,9,-1,6,9,1,-5,-8,-5,-1,-3,5,-7,-7,6,-8,-4,-3,-8,-6,1,4,4,-6,5,4,-4,-3,-1,8,10,4,-5,-10,-10,-9,6,6,5,10,9,-8,-4,4,3,7,-1,9,2,8,8,10,1,3,-9,-6,1,-9,-4,4,-8,3,2,5,1,-3,-3,2,-2,-1,-10,-7,-10,-5,1,2,-8,9,6,3,9,6,-10,5,-3,-3,3,3,-6,8,10,9,4,10,-1,-7,9,-2,4,-3,6,-2,-5,10,5,-1,9,-5,-7,3,5,10,-7,-5,2,8,3,4,-6,9,4,8,-9,6,-7,-6,1,8,-8,9,-10,-5,8,9,6,9,8,-5,2,3,-2,-4,4,-3,3,-4,10,6,-1,-5,-4,10,4,7,9,-7,-8,6,-3,6,-2,10,10,-1,2,-9,-2,6,-4,-4,-4,4,4,-4,10,2,10,5,10,10,-3,8,-6,3,-9,3,-2,5,-8,2,1,-1,7,-3,-3,9,-4,3,-1,-1,5,-4,-10,2,10,-5,7,-5,3,1,3,-2,-7,8,-1,-8,3,-1,3,-3,5,-5,6,-1,8,-3,-4,-7,-9,-8,-3,5,8,-1,7,-5,1,-9,10,4,-3,-8,-1,7,1,10,-2,4,-9,3,8,-2,-8,8,2,3,-10,-2,7,10,-3,-5,-3,6,-3,-2,7,-4,5,-10,-3,-2,-5,1,-4,-3,3,-1,-7,2,6,-5,-6,-5,-8,-9,9,1,8,5,6,8,-5,8,5,-4,-2,3,7,-2,-4,-5,4,6,-1,-3,-10,6,9,-9,-4,7,-3,5,-2,-6,-9,1,8,-7,-8,-6,3,-4,-8,9,8,-7,8,-1,-10,-7,10,4,5,7,-4,-2,8,9,10,7,4,1,7,-10,-10,8,5,8,-5,-3,-1,-8,-4,-3,7,-4,-6,-2,-8,-2,1,8,1,-6,-2,-7,-6,2,-2,-6,-6,9,-5,5,-3,-2,6,-2,6,3,-9,-3,-5,-6,-9,-7,3,7,9,1,-10,8,-3,-2,8,-8,-8,-3,5,4,-2,-9,9,4,1,-1,8,-6,8,1,3,-3,10,6,7,-9,10,-5,5]], dtype = "uint32")#candidate|2102|(1, 1078)|const|uint32
var_2103 = relay.var("var_2103", dtype = "float32", shape = (2352,))#candidate|2103|(2352,)|var|float32
call_2100 = relay.TupleGetItem(func_1335_call(relay.reshape(var_2101.astype('uint32'), [11, 7]), relay.reshape(const_2102.astype('uint32'), [1078, 1]), relay.reshape(var_2103.astype('float32'), [4, 588]), ), 1)
call_2104 = relay.TupleGetItem(func_1340_call(relay.reshape(var_2101.astype('uint32'), [11, 7]), relay.reshape(const_2102.astype('uint32'), [1078, 1]), relay.reshape(var_2103.astype('float32'), [4, 588]), ), 1)
func_1335_call = mod.get_global_var('func_1335')
func_1340_call = mutated_mod.get_global_var('func_1340')
call_2119 = relay.TupleGetItem(func_1335_call(relay.reshape(var_2101.astype('uint32'), [11, 7]), relay.reshape(const_2102.astype('uint32'), [1078, 1]), relay.reshape(var_2103.astype('float32'), [4, 588]), ), 2)
call_2120 = relay.TupleGetItem(func_1340_call(relay.reshape(var_2101.astype('uint32'), [11, 7]), relay.reshape(const_2102.astype('uint32'), [1078, 1]), relay.reshape(var_2103.astype('float32'), [4, 588]), ), 2)
bop_2124 = relay.bitwise_xor(uop_2097.astype('int32'), relay.reshape(var_2096.astype('int32'), relay.shape_of(uop_2097))) # shape=(5, 4, 8)
var_2129 = relay.var("var_2129", dtype = "int32", shape = (5, 4, 8))#candidate|2129|(5, 4, 8)|var|int32
bop_2130 = relay.less_equal(bop_2124.astype('bool'), relay.reshape(var_2129.astype('bool'), relay.shape_of(bop_2124))) # shape=(5, 4, 8)
uop_2133 = relay.tan(bop_2124.astype('float64')) # shape=(5, 4, 8)
output = relay.Tuple([call_2100,var_2101,const_2102,var_2103,call_2119,bop_2130,uop_2133,])
output2 = relay.Tuple([call_2104,var_2101,const_2102,var_2103,call_2120,bop_2130,uop_2133,])
func_2148 = relay.Function([var_2096,var_2101,var_2103,var_2129,], output)
mod['func_2148'] = func_2148
mod = relay.transform.InferType()(mod)
var_2149 = relay.var("var_2149", dtype = "float32", shape = (5, 4, 8))#candidate|2149|(5, 4, 8)|var|float32
var_2150 = relay.var("var_2150", dtype = "uint32", shape = (77,))#candidate|2150|(77,)|var|uint32
var_2151 = relay.var("var_2151", dtype = "float32", shape = (2352,))#candidate|2151|(2352,)|var|float32
var_2152 = relay.var("var_2152", dtype = "int32", shape = (5, 4, 8))#candidate|2152|(5, 4, 8)|var|int32
output = func_2148(var_2149,var_2150,var_2151,var_2152,)
func_2153 = relay.Function([var_2149,var_2150,var_2151,var_2152,], output)
mutated_mod['func_2153'] = func_2153
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2606 = relay.var("var_2606", dtype = "int8", shape = (15, 7, 2))#candidate|2606|(15, 7, 2)|var|int8
var_2607 = relay.var("var_2607", dtype = "int8", shape = (15, 7, 2))#candidate|2607|(15, 7, 2)|var|int8
bop_2608 = relay.less_equal(var_2606.astype('bool'), relay.reshape(var_2607.astype('bool'), relay.shape_of(var_2606))) # shape=(15, 7, 2)
output = bop_2608
output2 = bop_2608
func_2618 = relay.Function([var_2606,var_2607,], output)
mod['func_2618'] = func_2618
mod = relay.transform.InferType()(mod)
mutated_mod['func_2618'] = func_2618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2618_call = mutated_mod.get_global_var('func_2618')
var_2620 = relay.var("var_2620", dtype = "int8", shape = (15, 7, 2))#candidate|2620|(15, 7, 2)|var|int8
var_2621 = relay.var("var_2621", dtype = "int8", shape = (15, 7, 2))#candidate|2621|(15, 7, 2)|var|int8
call_2619 = func_2618_call(var_2620,var_2621,)
output = call_2619
func_2622 = relay.Function([var_2620,var_2621,], output)
mutated_mod['func_2622'] = func_2622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2738 = relay.var("var_2738", dtype = "float64", shape = (2, 11, 12))#candidate|2738|(2, 11, 12)|var|float64
uop_2739 = relay.exp(var_2738.astype('float64')) # shape=(2, 11, 12)
func_239_call = mod.get_global_var('func_239')
func_243_call = mutated_mod.get_global_var('func_243')
const_2767 = relay.const([-6,-6,6,-10,1,8,-8,10,9,-7,4,4,1,-8,-6,-10,2,5,-8,-8,-2,2,5,-5,3,-9,-7,6,10,-8,-9,-9,4,8,-8,8,-5,1,2,4,-7,4,-10,3,4,-8,-10,5,10,6,4,-9,6,-10,-5,6,1,-5,-2,-3,-10,1,-6,5,-2,4,-7,-8,3,3,-4,8,-1,-6,-1,-9,-8], dtype = "uint32")#candidate|2767|(77,)|const|uint32
var_2768 = relay.var("var_2768", dtype = "uint32", shape = (1078,))#candidate|2768|(1078,)|var|uint32
call_2766 = relay.TupleGetItem(func_239_call(relay.reshape(const_2767.astype('uint32'), [1, 7, 11]), relay.reshape(var_2768.astype('uint32'), [14, 7, 11]), ), 1)
call_2769 = relay.TupleGetItem(func_243_call(relay.reshape(const_2767.astype('uint32'), [1, 7, 11]), relay.reshape(var_2768.astype('uint32'), [14, 7, 11]), ), 1)
func_382_call = mod.get_global_var('func_382')
func_386_call = mutated_mod.get_global_var('func_386')
const_2772 = relay.const([[3.056545,-1.300025,-0.243289,0.218224],[-4.003732,0.375901,2.076928,-0.333763],[0.244212,-5.235417,8.476044,4.723350],[-5.130220,-3.138658,5.545060,2.775371],[8.061912,-1.143888,2.376601,2.710147],[-8.150837,5.754920,-2.179653,-1.327410],[5.562536,5.418265,9.689293,-1.293795],[7.655907,-5.652296,7.511371,9.157379],[-1.669328,-3.430687,4.103250,3.078081],[8.766613,0.908366,-9.929003,3.499496],[3.021346,-7.505709,4.752292,-6.606964],[9.147482,0.237159,-3.075033,4.417476],[8.124517,-5.570092,9.150513,-9.637355],[-9.080133,-5.318153,1.363131,-7.044412],[-7.318858,-7.428963,3.312901,-8.865605],[4.883322,4.812389,5.735725,-3.829137],[4.766743,8.457715,-2.228803,8.749035],[-6.142251,7.517910,6.769517,-7.183420],[9.074220,0.593119,0.746436,4.606832],[-5.254782,-4.827826,-1.808633,-7.699898],[1.761866,-4.774982,9.743104,-8.517122],[-2.981289,-4.105206,-6.073694,4.695800],[2.749914,-4.984388,9.931935,6.865817],[1.980245,1.250168,8.452759,9.005619],[2.209980,-2.692014,2.563808,-5.081769],[8.425519,8.318211,3.969387,5.187757],[9.835461,3.991122,3.152766,-3.358392],[-0.478490,-9.356971,7.026080,-1.660212],[-0.951887,-8.866951,-6.600166,5.466820],[4.922354,3.941927,0.528586,1.093210],[-5.486169,1.554904,2.902972,-6.303143],[6.755957,5.202715,-6.520487,-9.442150],[6.691779,-8.556709,0.701427,5.704323],[-3.738346,-1.965784,4.829961,8.374389],[-0.974232,6.520083,-8.476049,-0.425494],[7.206457,7.040057,9.651859,-5.696263],[-5.600022,-6.098111,-1.128609,-3.657491],[-6.811011,-4.523117,-5.669040,-8.863615],[1.312874,-8.631043,3.322599,1.270938],[7.524211,7.656904,-0.839162,2.540286],[-9.996989,0.063865,1.460798,-5.771672],[-5.490731,9.085269,-9.361193,0.443805],[9.817069,3.215305,-5.064107,4.606258],[7.612796,7.653640,-1.784370,-1.461470],[-7.335201,3.292610,7.435802,-1.317688],[9.821497,-5.549206,0.629881,6.233474],[-7.564059,7.843879,2.101499,-3.768051],[1.860544,4.835805,-1.635585,8.065253],[5.425880,-6.539043,-2.272737,-9.168116],[-8.693416,2.596102,-8.968652,-2.797582],[3.266289,-7.823410,7.887005,-6.155830],[-3.694369,-9.227849,4.769333,9.225438],[3.582419,-3.570677,-1.377648,6.458191],[4.380526,-1.990873,4.304731,-2.187798],[3.565475,7.481434,8.433221,3.696496],[0.524332,-0.218266,0.326628,0.930333],[2.541074,-4.653717,-5.606115,-0.516766],[-5.208593,-9.549454,-5.137996,5.142691],[5.733261,-5.363473,-8.890606,-9.864577],[9.156162,-5.257978,-8.950656,2.259936],[3.784142,-0.584473,5.785838,-8.373096],[7.662569,8.128183,4.401969,7.459325],[-4.248574,-8.779593,-1.542635,-4.481529],[9.077126,-5.153925,1.241125,-5.029825],[-7.410928,-9.416788,9.187771,9.335809],[8.103444,-7.114444,7.090027,5.557544],[2.794387,-1.719830,-6.153455,-9.115138],[-8.137568,-4.609417,-1.091013,-3.182396],[6.478774,7.894122,7.547272,0.546858],[7.866358,-1.722512,-0.221806,-0.407227],[9.507137,3.277607,-5.296203,0.080155],[-4.055148,-8.811639,-2.824583,4.321501],[4.698645,7.816233,-9.485232,-6.598350],[-1.634923,-5.433841,-0.898153,0.809164],[-6.303793,-5.597468,-2.096229,2.770225],[8.770278,9.695530,-6.646300,6.097456],[7.633291,2.276289,6.212227,-6.221779],[-2.526492,-8.988827,8.958237,-5.040103],[-4.644693,-2.112154,-4.420708,-5.621199],[6.895664,-5.886513,-9.533778,-4.960763],[-9.675715,0.609664,6.183120,7.463098],[6.761290,-2.957886,4.428595,-8.339258],[4.507590,-2.174872,-2.687574,5.402820],[6.209569,8.330686,6.785374,1.746680],[8.448216,-9.000134,-3.035018,-6.791993],[2.415565,2.582652,1.462822,7.883420],[-8.407504,0.851117,-1.842574,7.623045],[-5.916789,3.416515,-1.508878,4.102853],[-2.317904,-1.912162,5.993225,-3.335112],[8.725493,-8.055478,4.256689,-2.077000],[7.901639,-9.148210,-2.691392,6.515281],[-3.642877,0.916549,-7.399293,8.658664],[-9.276345,2.725702,-0.276023,-1.704809],[7.774479,7.634725,-8.919327,9.513654],[9.539937,6.473123,7.512409,-8.750457],[-7.509774,-8.218068,-5.906222,9.874447],[5.214331,-3.761609,-7.639660,1.177858],[7.434720,-3.366523,-1.050429,-6.476299],[8.881647,-3.609301,-6.948703,-4.381597],[-1.158969,2.134052,-2.175043,7.883788],[-2.748937,-7.873046,-8.116669,-8.435751],[-1.244911,-4.647583,-1.955552,-8.294888],[-3.649209,-5.898334,3.509735,2.119708],[6.857628,-0.290588,0.656307,7.875519],[9.726555,-3.412611,-5.655654,-4.297113],[6.857454,0.883381,7.765759,2.879126],[-0.980031,-9.092412,9.910649,3.322817],[7.283469,-8.357094,8.954436,-0.687528],[2.540859,2.564179,4.383252,-2.408830],[-6.094138,0.866724,6.116976,2.108759],[-7.595113,7.221941,-1.705417,8.837350],[-3.064246,-5.562155,7.385270,7.185364],[-6.003365,-4.921422,-2.042933,-8.403356],[6.067362,-2.336868,1.971987,-4.315865],[5.265079,9.028543,2.289413,0.982972],[-7.574681,7.427852,-0.933678,8.895307],[5.260827,9.602559,-4.743169,-2.475804],[0.431271,7.199612,8.119578,-6.431578],[1.843615,-7.139714,-6.538438,9.990144],[4.030383,4.793938,1.275130,-7.156951],[-4.943917,-0.965517,-7.644970,-8.716707],[5.936402,-3.209452,-8.975422,6.294013],[-2.971088,-7.488118,-7.462394,5.446603],[-8.285636,3.519512,0.487623,6.060398],[4.931519,9.237048,-3.169342,1.834178],[1.116614,-3.878159,9.622536,5.795514],[3.047205,-0.275158,6.068002,-4.583091],[-7.986036,5.690749,4.476234,-7.540155],[-7.852794,-1.327965,8.368413,-0.949052],[3.755276,-9.773257,2.805983,-0.377800],[8.737519,-9.672972,1.952179,5.780857],[-1.824056,6.134020,8.293266,2.424131],[3.338820,-3.921208,3.596484,3.445031],[-4.039261,9.925359,-9.103124,-1.196754],[7.817656,-4.989162,8.266296,-0.071503],[6.526463,-3.247123,1.054973,-9.345852],[7.434753,-3.180732,-9.287314,-3.610979],[1.956657,-4.214037,0.950335,-6.284952],[8.581230,1.337376,-4.004443,-4.838979],[-2.527621,-9.256460,-8.257106,-7.527496],[7.012029,5.108609,7.791373,-7.566891],[6.570074,-0.131916,-3.226638,3.780810],[3.948592,-6.563121,7.039750,0.816203],[8.983966,9.585413,0.377621,-8.511283],[-0.214050,-7.797788,4.666143,9.383594],[6.212317,3.204751,-7.812044,2.391592],[-6.851600,0.494549,-8.788727,2.235898],[-0.437079,-1.946126,-9.332192,-0.912382],[-1.659068,-6.376146,-1.611675,-9.623397],[3.182506,1.494036,5.273632,-0.310130],[-8.873550,1.937580,-5.492986,4.997092],[1.522568,-2.523990,-4.801409,7.368086],[6.044162,-8.531538,6.140391,5.559099],[-9.632900,-5.821295,8.171622,3.347864],[-7.313012,6.482364,4.255747,3.241200],[-8.717666,6.471108,-7.591018,6.899631],[-8.152495,2.067266,-6.670685,9.676611],[0.822154,-2.705868,-6.162416,9.627733],[-3.624516,0.664003,9.596450,8.780479],[2.566538,-1.524660,6.397954,8.927097],[8.321049,8.707657,-3.901699,-1.588110],[-3.565561,-9.609377,3.942491,1.767276],[-0.801068,9.312798,0.175559,2.231476],[8.064802,-7.008248,0.540145,7.811351],[8.794887,2.559928,5.936951,9.585495],[-7.219469,-0.629496,3.277070,-3.102348],[-0.978783,5.913091,-1.785653,-4.591325],[-5.042640,-1.090162,1.485126,-6.804630],[-8.236239,-0.105254,-9.160241,9.470269],[6.083378,-6.724593,7.102383,2.000290],[-2.645231,5.473710,5.032722,1.762379],[-9.839223,-9.463782,9.921580,-6.765106],[-7.679641,0.632189,4.345726,1.194105],[-6.555393,0.851122,-7.247582,4.715937],[-5.202878,2.434993,2.399803,1.675915],[-7.240000,2.925706,4.273087,2.297666],[-8.584006,-1.278734,8.495638,-0.953722],[7.453541,6.349800,-9.027640,-2.154542],[2.246094,4.416947,-1.723035,2.345478],[-5.158401,-3.464043,-0.126897,6.089503],[-8.498972,-3.496509,3.956801,0.980405],[6.778436,7.295933,-1.443048,-4.550980],[0.186343,-5.142142,-8.845850,9.890668],[-0.336522,-6.374805,4.541712,7.306076],[4.689945,-8.113666,-9.880761,2.163727],[-5.361955,-1.840477,7.434747,8.211354],[-7.159029,-7.822135,7.157124,3.128608],[-2.045570,-4.597206,3.424303,8.787436],[-3.932881,4.978179,-7.753107,-4.495206],[8.351747,1.591347,1.328805,-7.026345],[-8.490608,-4.334356,-8.159691,3.763046],[-6.031256,-3.659428,9.779568,-5.259408],[2.521872,-1.709864,1.113809,8.215850],[5.972622,3.481774,7.822390,-3.239316],[-8.584542,2.282724,-2.539226,1.994668],[-7.889710,-7.532227,-9.023285,5.046512],[4.621052,9.673737,-9.061025,3.002541],[1.114907,-2.731052,-3.671323,-6.307065],[-5.531852,5.948553,-1.660101,5.627839],[7.280855,-4.553117,-3.886529,5.663251],[4.613860,-2.089463,8.095726,-5.552315],[-2.497729,8.252024,9.327592,-9.143440],[6.480831,2.886457,-3.369745,5.957605],[-1.141199,1.203643,2.249139,-6.313895],[3.746897,6.295301,7.626811,2.388668],[-1.892085,-2.204841,-6.210389,7.522961],[5.267705,0.584964,4.177797,8.663372],[-9.162253,4.925853,8.597508,8.075546],[-6.934037,-7.211160,-6.981492,-4.263401],[-2.903647,-8.139061,2.003703,4.314942],[-3.800525,-9.934926,1.418179,-2.148502],[4.389260,3.751019,6.889286,6.948865],[5.344258,4.687569,-2.356906,2.044383],[7.777666,6.203244,6.225344,7.085769],[-0.426251,-2.282797,8.989235,1.881929],[-6.560056,6.548172,0.057151,4.955920],[-3.515417,-9.146940,-5.365733,-0.579817],[-5.519510,-3.136724,-8.790187,6.849544],[-0.611566,-0.167711,-4.450672,-6.502390],[-8.982225,9.925509,-5.343651,9.959837],[9.511757,5.127275,1.202452,2.052237],[-4.806271,6.146167,5.227186,0.235417],[-2.415610,2.463563,9.503454,6.705958],[-9.659806,-8.804308,-6.324147,1.371508],[8.586138,4.829212,-2.994324,-9.948890],[1.456305,1.107386,2.702781,-7.321751],[-3.321946,-1.860097,5.621501,-0.591584],[-8.026825,-9.616972,-4.362578,1.344371],[0.304060,-3.000026,2.442270,-7.009690],[-8.284108,-7.689115,-4.708743,-5.405765],[-4.002330,-7.995266,-5.903525,1.372360],[1.225747,3.888243,-5.607331,-9.187077],[-2.601266,5.055671,7.453326,-2.246751],[-5.574996,0.044443,4.219885,0.659621],[9.940054,2.836066,-1.624374,-9.485847],[-0.913368,9.310844,-2.119510,-4.274761],[-7.330497,4.215877,1.135684,-4.281160],[-1.087978,-2.969916,1.432659,9.282045],[-2.030758,-2.533578,-7.900951,-9.410930],[2.928992,0.888718,2.210710,-2.921308],[3.980418,-6.841858,7.486423,-4.401972],[-3.967429,2.458961,4.174703,-7.965226],[2.636689,-5.427077,-3.767622,-1.569279],[0.572156,6.795771,-0.816141,-5.408342],[8.294849,-1.459408,4.174672,-6.874595],[-8.271482,7.365619,9.177103,9.160541],[3.773208,-4.420438,-0.007848,4.953930],[-9.332073,1.416153,-6.775693,-2.116286],[-9.790238,-4.346146,-4.655918,1.475367],[-6.678132,-0.385400,5.234203,-3.428702],[3.084975,-5.272417,8.505556,6.912821],[-3.361783,-7.935245,6.675906,1.510620],[-0.446313,7.610360,-0.657586,1.102616],[-8.416084,-2.866965,3.764565,-9.667070],[5.067148,-0.764034,-2.688168,-3.527217],[-1.584885,2.243658,-7.994380,2.645101],[-6.799652,7.158914,-2.625209,6.595808],[-7.538409,-1.807309,-0.290800,-5.341743],[1.537993,-5.540827,5.203158,-6.884804],[-2.139367,2.296601,-0.844261,2.613642],[9.188343,-0.368041,2.602337,-7.549109],[3.871716,3.209548,5.753642,-2.643856],[-5.001947,-6.659835,7.172192,-6.038671],[-1.811855,-2.198669,-0.193296,6.913077],[-3.051847,5.151715,0.163925,4.541508],[-9.670028,-3.731138,0.442023,-7.355158],[-1.629617,7.881580,-7.831587,5.740404],[3.735510,2.412974,2.267948,5.913947],[-6.901956,2.745305,3.142892,3.407473],[4.718152,1.325068,-0.597286,-8.865669],[8.819020,-5.295009,0.156449,-7.916820],[-0.498590,0.367817,8.852780,5.208279],[7.736253,7.899122,-3.480199,1.774954],[2.280299,-0.445176,-4.931638,-6.322829],[-4.032671,5.757660,-9.068201,-3.749523],[-0.279470,-6.850392,-5.630330,3.624701],[-7.664155,-4.027938,6.998984,-6.521890],[4.960905,-0.913060,8.749119,2.068214],[-1.727501,-6.909678,-7.493410,2.038721],[-3.708230,-3.212446,6.009872,-3.974983],[5.484291,-2.354491,-9.323084,1.426495],[4.640567,-6.189958,-2.160234,-0.897873],[-6.078009,1.209472,9.816127,1.832910],[-2.900212,4.950874,-0.069973,5.151084],[-8.347496,-1.398814,-8.503510,-5.866599],[-9.594710,-6.578227,-1.084503,5.790835],[1.864538,-2.091783,3.935771,-0.191760],[0.736916,8.934186,-0.279429,5.810594],[5.376721,9.942887,9.446111,7.204775],[-6.006341,-1.608136,0.796567,-2.642852],[-1.831267,8.700458,-2.083237,1.542590],[7.138898,3.520974,5.014721,8.656983],[8.689444,-0.109645,-3.878678,-9.395690],[-6.024472,-2.160415,-5.568356,-4.596715],[6.444412,-6.446745,-6.534812,5.870537],[-2.076316,7.137476,-5.181740,-6.597005],[9.980077,-6.642232,7.759247,5.332344],[-4.970885,4.158390,-9.807255,5.007618],[7.962369,3.940484,-2.348954,-3.196027],[-2.894737,-4.141896,-8.058754,-4.564853],[-2.484515,1.874592,2.219507,7.342734],[-2.085100,-0.128977,-2.782172,-4.685440],[5.965187,5.352475,0.220891,-9.524526],[9.411853,-5.442842,-6.704232,-1.781662],[7.000328,-9.625273,-2.844006,-3.607273],[-3.609386,4.056218,9.412258,-7.924361],[6.796794,-9.143608,5.855416,-2.221636],[2.508676,-4.155457,8.326259,-4.343918],[8.910833,5.519422,-6.491092,-6.060531],[-4.340854,-5.859608,-5.330464,-1.072103],[-7.687083,-0.008550,-6.308894,9.042117],[7.192067,8.531897,-1.769647,8.136214],[-4.385275,2.543886,3.120331,8.378279],[0.791104,1.346090,-5.222793,5.983348],[-4.262609,3.978227,7.956445,-3.134020],[-0.517530,3.918753,-0.030537,-2.597385],[-4.468460,1.882229,-0.945273,0.257430],[-7.988291,4.666634,2.172825,-1.225519],[-6.213917,-2.370899,-6.447692,-5.313576],[-6.864535,1.800380,-6.861833,5.754449],[8.360348,-2.929242,8.977507,9.259848],[-7.620343,-4.095968,6.211131,9.488780],[-0.564840,2.122482,4.248452,-6.072824],[-9.726523,-9.928054,9.234787,4.135693],[-1.557903,-2.095042,0.444330,-7.204171],[-2.909173,4.375348,0.564354,8.481842],[-8.573856,-8.822049,-7.332077,2.367402],[-6.648554,-1.032316,2.937385,-2.673041],[0.739680,4.986988,-2.115814,5.111051],[7.902224,-4.189839,5.303758,-1.982191],[2.052818,1.795014,2.218502,-8.383602],[-0.906918,-2.977547,-6.721026,-5.088742],[9.904426,-4.213598,3.373235,1.270416],[3.705265,7.289146,1.661938,-7.927204],[-3.523006,3.825946,0.176100,2.439227],[-0.389753,4.554554,-5.922821,-1.320520],[-2.206364,6.869785,-9.532903,-7.696847],[-6.234261,2.200232,5.771405,-2.379333],[3.992177,-0.797950,9.859318,6.780738],[8.210977,-5.405534,-0.939664,1.337767],[-7.657741,-2.640892,0.243668,-7.396922],[-5.501424,-3.785588,8.612197,4.738930],[-6.483010,8.583987,2.958921,2.274311],[-0.768920,-2.152299,-4.757247,0.226793],[-7.576752,-3.650324,-4.303046,3.119120],[-8.551131,-5.810715,5.072222,-5.804553],[5.746192,5.865223,-3.752982,9.580751],[5.139932,9.392665,-7.027339,-7.376957],[-2.708568,-1.268915,4.117638,5.425639],[1.356489,4.692650,0.722470,-5.152550],[-2.969238,7.838805,-0.641695,7.005728],[-0.059183,-2.239782,5.403717,0.395764],[0.741069,-4.736330,-1.311201,-3.620477],[2.977777,-6.854278,1.521636,-2.231267],[-8.163374,8.280157,-5.855688,-1.446410],[1.420861,1.281842,3.238239,1.766356],[6.961873,4.349977,1.876550,5.421245],[-7.688611,-8.211710,1.330463,9.284334],[-3.329588,-4.115714,9.033242,-4.704501],[3.887568,5.435867,-7.698963,2.804189],[-1.834586,5.654589,-9.313372,-2.082148],[-7.562059,2.251723,0.499056,-1.527015],[9.142689,6.917654,2.508074,7.070858],[2.052622,-5.754971,1.809461,8.401304],[-9.210182,-0.544200,-1.620193,7.600795],[8.486602,-0.230162,4.277624,-7.428157],[3.832369,5.669630,2.018655,-7.780417],[1.647401,1.640628,-7.959032,-9.126984],[5.801580,-2.465084,-4.214652,7.441606],[-1.909234,-3.626305,-0.608838,-8.929775],[-9.790449,-0.535680,-1.023903,4.363327],[9.312055,4.208863,9.652506,4.561696],[-7.579796,-3.781318,0.301803,-5.548194],[9.722830,-0.443750,0.149105,-5.637268],[-2.187242,-0.542948,7.176247,9.663359],[-4.827158,-9.171207,-4.360148,-9.320450],[5.586761,9.958202,-2.452250,-7.396413],[3.532963,4.901214,8.789061,-4.960333],[1.852993,2.573330,-3.276234,2.334925],[6.885105,8.814703,9.018858,-6.337995],[-6.582878,-6.196514,1.153730,5.638500],[4.846665,9.554019,-4.890654,-5.619879],[-4.732870,-2.083007,-2.860023,8.280984],[6.733726,-0.514372,4.878971,-4.279660],[-5.774682,-2.500134,0.490543,-3.303170],[7.918493,-2.349229,-0.208916,7.748295],[-4.130916,6.719337,9.232149,-9.832209],[0.588150,-1.315966,4.849465,1.209887],[3.567376,2.136464,0.805515,4.065473],[9.274646,-3.674627,-0.045353,5.754838],[4.958252,-3.792153,7.916051,1.703682],[1.547822,6.891965,-0.127185,-1.867279],[3.580511,2.198542,-0.632031,7.327433],[-4.526007,6.233877,0.752742,3.628082],[8.997854,6.237391,-7.496377,-9.119888],[-2.414495,-7.721645,-4.251471,-2.203095],[-8.745997,-4.546127,-3.844794,-6.340756],[9.358498,-5.184919,-4.699850,4.921950],[4.611221,4.338284,9.337126,0.943890],[2.754252,7.723276,-8.540850,9.280100],[2.758885,7.921097,3.098931,-4.326372],[6.138701,2.832961,-4.797383,-1.125855],[-3.148562,0.747099,4.664086,9.903552],[-3.074754,-0.327809,0.017517,7.093006],[0.294556,-0.969465,-8.257944,4.222642],[9.115871,-3.803603,7.410530,1.600816],[-3.731311,9.557007,8.217180,-5.264633],[1.041704,0.467745,2.100900,7.403118],[3.217713,1.132175,-0.387346,-8.595443],[-2.593238,3.557121,9.773006,7.058200],[9.385820,3.071749,3.632234,-4.953971],[-5.984531,6.004760,-3.451758,-5.624201],[8.367890,-8.916142,-4.617542,4.012401],[3.900552,-6.274141,-9.376730,-0.563953],[-8.569075,-7.676790,4.913981,9.685206],[-9.669222,9.253462,7.862377,3.762387],[-6.108189,9.662415,-1.687633,8.082660],[3.310377,-9.353869,7.283979,-6.701303],[-8.309975,5.600012,4.074992,8.451919],[-1.694237,1.884819,-2.842114,-3.046266],[-4.668511,4.265905,-6.552994,-0.925952],[-8.566346,1.782767,7.478961,2.263972],[8.253581,9.150936,7.780647,-0.153293],[-3.431495,-5.584885,-3.760184,3.231705],[-3.498977,1.761809,1.686772,-5.160488],[-3.112575,5.225495,2.025548,6.666373],[9.020002,-5.465404,2.199018,-1.754207],[-6.714382,-6.864171,9.632644,1.017968],[-2.740819,2.815128,-1.598472,1.889014],[0.042016,-2.084064,-6.986854,9.506938],[-7.014218,-0.899035,0.258935,3.578146],[1.888446,-5.614109,7.196074,-2.730246],[7.530731,3.293362,-6.631244,-8.918126],[9.551187,-3.999454,3.069625,-3.967122],[1.921740,6.630647,3.408233,-7.160613],[7.726178,-6.874368,-8.436624,-9.811050],[-1.795694,1.282614,5.622912,-3.975973],[-0.983285,-7.240534,3.238300,-4.659354],[4.334866,4.543934,-4.345921,-3.012071],[-7.164164,0.301852,4.992498,-6.561817],[0.624425,-2.046981,-0.105368,-3.536730],[-7.376054,-1.070405,1.845014,-3.666372],[-5.289409,7.322628,-8.031783,-2.671278],[-6.046390,3.947910,-5.945411,6.354268],[-3.151123,-7.831807,7.395903,3.976948],[1.901291,2.725004,-3.891877,8.005498],[0.091225,-6.929631,-8.965690,-8.711565],[-9.277305,3.495374,-8.457346,-0.154604],[-3.689275,2.486981,3.568311,7.111461],[-2.116561,6.731244,7.589433,8.056847],[-5.514155,-0.670714,7.994234,9.054619],[-6.329585,-5.731174,-1.263923,7.512487],[2.712551,-1.978261,-4.838356,5.032742],[-5.176441,6.693125,2.576215,-4.340872],[-6.161774,0.814620,0.835393,3.932068],[3.117516,-8.875588,8.138078,-4.009553],[-9.457540,2.076629,3.207741,1.282143],[-7.198664,4.625817,-2.871982,4.367601],[-0.452991,-2.792972,1.238670,8.731619],[6.811379,-1.235544,-8.349122,3.428759],[7.756536,8.681784,4.759420,-1.725451],[1.910497,2.516183,3.286523,2.737609],[3.601255,-6.647478,3.892493,2.238101],[3.247734,8.000580,4.629165,4.882093],[-1.270154,3.944192,2.685244,5.933412],[5.382703,-1.133465,6.811743,-8.997283],[6.376769,6.570207,-8.910619,9.085499],[4.662297,7.713059,0.307666,9.417144],[4.515180,4.461929,6.870131,-0.197991],[-4.580482,1.073091,-5.411050,-0.006981],[-1.423331,-9.630051,5.067340,0.779177],[3.262109,0.223365,6.890996,-0.450260],[6.608052,7.062273,-2.182099,4.358753],[1.145053,-9.635047,-2.668509,4.539417],[-7.252247,9.056104,-3.910471,-1.951168],[-0.565515,-1.793157,4.867189,-2.960358],[6.502148,1.709274,8.148156,-2.042896],[1.630845,-6.169121,0.898917,4.495669],[-4.806130,3.997102,5.421021,-3.928478],[8.337808,3.180408,4.586495,7.118971],[7.050996,-1.403778,4.292016,7.072724],[6.895994,-7.680653,-8.857972,-3.953152],[5.423589,8.561095,-1.354617,-4.502861],[-8.237403,-4.951477,9.700019,-0.573397],[-5.959562,-5.320236,0.723762,-6.528901],[1.189316,-6.547823,-0.214266,-9.188392],[-7.293120,-9.393240,8.059137,7.441479],[-6.358101,7.011253,1.239222,7.529542],[-9.747747,-9.995990,3.261212,-4.170809],[6.385142,-0.361972,-9.633618,5.334135],[-9.810088,3.630933,-5.040775,-8.593430],[-0.445968,8.585513,6.042951,3.754756],[-1.271020,-4.844887,-7.724681,-0.489408],[5.904481,-9.204337,-7.162574,-2.597452],[7.347727,-8.342319,-0.341574,6.400718],[3.253334,5.953831,8.133198,-7.235533],[-3.836955,0.597609,-7.780998,-4.586540],[8.371381,0.495757,5.890751,-1.980870],[2.283164,-7.612406,9.408462,-1.181683],[-8.201309,-8.106183,-6.551097,9.984708],[8.652363,8.004330,9.788647,2.418296],[-7.396502,-0.897328,-4.908644,7.855901],[9.409310,-1.593640,3.347979,8.142972],[-2.915315,0.277926,0.049657,4.877199],[4.807916,-6.559599,-6.182768,1.042115],[-3.478437,-4.698541,5.050394,-1.453797],[-0.122542,7.682685,3.539943,1.589175],[-6.508957,-7.212343,-1.209670,-0.271870],[-8.507944,-1.395008,-4.513252,-6.618997],[8.863857,-0.419441,-1.521553,2.268296],[1.651828,-0.831789,-7.037488,-7.464703],[-7.370509,-0.563696,-5.849466,-7.413177],[1.902152,3.570260,0.470513,-5.121359],[2.617068,8.973579,5.462471,-6.713020],[3.606645,2.376890,-4.545827,0.093301],[-1.200639,4.175761,-7.628020,3.197239],[-6.907217,-9.547844,-7.579037,-8.597951],[2.805194,5.522011,4.522280,7.776536],[-1.009305,-2.477756,-8.517112,8.926518],[2.986678,2.391961,8.014141,1.553999],[0.984134,2.018674,-7.923421,9.111050],[4.343539,-8.973751,-4.244324,6.198772],[-2.326098,-9.790107,8.589700,2.959145],[-9.382981,4.399116,6.502353,-0.327712],[-8.596731,4.802729,3.138596,-9.591781],[7.987443,6.673806,-1.855153,3.962170],[-9.248744,3.062343,5.148140,-4.014410],[2.480084,8.657592,-3.707900,7.334644],[5.919979,1.646919,-6.373295,0.843531],[-7.013917,6.760334,-4.073118,3.551761],[-9.193178,-8.292173,6.108716,-6.060209],[-3.743693,-1.864280,7.024000,0.506320],[-8.030999,9.567151,-2.518825,-4.551081],[-1.057794,7.967521,-9.825962,6.464606],[8.364347,3.145866,9.198137,9.610892],[2.361314,-3.263187,-3.506169,-2.440568],[0.855690,1.181114,-3.496815,-9.002552],[3.843017,1.679286,0.613126,1.003118],[0.092585,2.739998,-0.390104,-8.373742],[-5.463056,-3.020326,5.771658,5.265634],[-9.083943,-4.034123,9.762563,5.620018],[5.425431,-6.106413,-9.866825,3.965637],[-7.762418,-6.678290,-7.926189,5.325820],[8.406343,3.432348,-4.186268,8.532097],[0.169565,0.188899,6.243856,2.228808],[-2.112978,0.296735,5.932376,-8.188344],[7.780260,-9.208362,3.896243,6.306582],[5.409189,9.492409,9.507876,3.140969],[1.281304,0.377856,0.156711,3.806369],[1.563853,-1.456749,8.393884,-9.479623],[2.153491,-1.398249,-3.775418,-3.882724],[-0.603650,1.397985,-6.385196,-2.026442],[-0.599314,-8.501987,2.704364,4.679881],[-2.852949,2.156273,-9.514011,8.733622],[9.173259,-1.405898,3.230357,1.153997],[7.948200,3.790663,9.733934,2.349899],[-0.879594,-1.105440,5.896407,-5.786582],[9.156124,6.032710,8.858690,-4.834695],[5.156723,5.686113,9.527557,-9.408030],[8.942312,-7.870191,-7.767048,-9.151154],[-0.703903,-1.386440,-1.391200,7.887726],[-5.504976,7.549871,4.661367,-3.376334],[9.709653,9.290517,1.208928,9.858807],[-1.175458,6.800235,3.089630,0.541146],[-4.260295,9.021642,-4.317332,7.343155],[9.736179,-1.449101,-4.785658,6.916007],[-0.969658,-2.524370,4.198418,5.890884],[2.865086,-8.415673,-0.256283,-5.924482],[9.187020,-0.181225,0.061874,-6.655210],[-5.604797,5.081929,-6.450728,-5.973671],[-4.308332,-0.161361,-0.418215,0.185060],[-8.379283,-2.683470,4.917173,-6.167504],[-1.345327,-0.842709,-7.395053,5.252901],[8.347462,3.416145,7.215830,6.575738],[-8.769934,1.550081,6.226045,-3.730885],[-5.954030,-8.837751,-5.637847,-9.888222],[7.054831,-9.537885,-6.316349,2.489458],[-1.856888,7.748809,-8.600893,5.190916],[-1.736365,-3.601314,6.692988,4.079933],[3.142681,8.600325,-8.685578,3.692232],[-0.335615,2.346807,1.418431,7.305032],[1.786333,8.879226,9.477187,-6.546650],[-3.229027,4.153268,-6.744823,1.430865],[-6.250731,5.160535,4.523285,9.339737],[-0.813211,-5.488442,1.423700,6.148889],[-1.866065,-6.722596,-8.242812,5.602885],[3.980060,-3.056856,6.959579,-2.269420],[5.102200,6.119932,-9.328037,-6.059913]], dtype = "float32")#candidate|2772|(588, 4)|const|float32
call_2771 = relay.TupleGetItem(func_382_call(relay.reshape(const_2772.astype('float32'), [14, 14, 12]), relay.reshape(const_2767.astype('uint32'), [77,]), relay.reshape(call_2766.astype('uint32'), [1, 1078]), ), 2)
call_2773 = relay.TupleGetItem(func_386_call(relay.reshape(const_2772.astype('float32'), [14, 14, 12]), relay.reshape(const_2767.astype('uint32'), [77,]), relay.reshape(call_2766.astype('uint32'), [1, 1078]), ), 2)
output = relay.Tuple([uop_2739,call_2766,const_2767,var_2768,call_2771,const_2772,])
output2 = relay.Tuple([uop_2739,call_2769,const_2767,var_2768,call_2773,const_2772,])
func_2775 = relay.Function([var_2738,var_2768,], output)
mod['func_2775'] = func_2775
mod = relay.transform.InferType()(mod)
var_2776 = relay.var("var_2776", dtype = "float64", shape = (2, 11, 12))#candidate|2776|(2, 11, 12)|var|float64
var_2777 = relay.var("var_2777", dtype = "uint32", shape = (1078,))#candidate|2777|(1078,)|var|uint32
output = func_2775(var_2776,var_2777,)
func_2778 = relay.Function([var_2776,var_2777,], output)
mutated_mod['func_2778'] = func_2778
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4071 = relay.var("var_4071", dtype = "float64", shape = (2, 3, 11))#candidate|4071|(2, 3, 11)|var|float64
uop_4072 = relay.asinh(var_4071.astype('float64')) # shape=(2, 3, 11)
func_2618_call = mod.get_global_var('func_2618')
func_2622_call = mutated_mod.get_global_var('func_2622')
var_4075 = relay.var("var_4075", dtype = "int8", shape = (210,))#candidate|4075|(210,)|var|int8
call_4074 = func_2618_call(relay.reshape(var_4075.astype('int8'), [15, 7, 2]), relay.reshape(var_4075.astype('int8'), [15, 7, 2]), )
call_4076 = func_2618_call(relay.reshape(var_4075.astype('int8'), [15, 7, 2]), relay.reshape(var_4075.astype('int8'), [15, 7, 2]), )
output = relay.Tuple([uop_4072,call_4074,var_4075,])
output2 = relay.Tuple([uop_4072,call_4076,var_4075,])
func_4078 = relay.Function([var_4071,var_4075,], output)
mod['func_4078'] = func_4078
mod = relay.transform.InferType()(mod)
var_4079 = relay.var("var_4079", dtype = "float64", shape = (2, 3, 11))#candidate|4079|(2, 3, 11)|var|float64
var_4080 = relay.var("var_4080", dtype = "int8", shape = (210,))#candidate|4080|(210,)|var|int8
output = func_4078(var_4079,var_4080,)
func_4081 = relay.Function([var_4079,var_4080,], output)
mutated_mod['func_4081'] = func_4081
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4340 = relay.var("var_4340", dtype = "float32", shape = (15, 6, 5))#candidate|4340|(15, 6, 5)|var|float32
uop_4341 = relay.acosh(var_4340.astype('float32')) # shape=(15, 6, 5)
func_1335_call = mod.get_global_var('func_1335')
func_1340_call = mutated_mod.get_global_var('func_1340')
const_4361 = relay.const([8,-9,7,-4,9,5,3,3,10,-5,-2,-9,-2,5,-9,6,-2,-10,6,-10,-1,6,-6,1,5,-4,-1,-1,-1,-10,-5,-2,1,3,-5,-2,-7,-10,7,9,-7,8,10,-1,-6,-3,-5,-7,8,6,5,8,6,5,7,-7,10,2,-5,-1,2,-1,3,-5,-9,2,9,-4,-8,-10,6,9,3,6,-4,10,-2], dtype = "uint32")#candidate|4361|(77,)|const|uint32
const_4362 = relay.const([10,-4,3,1,-6,10,-7,-8,10,-6,9,-2,8,-1,4,5,-7,10,-5,-5,7,4,6,4,-9,8,2,-1,3,-3,9,8,7,8,-9,2,6,10,5,-7,-4,-2,-6,-9,8,-5,-9,3,-1,7,-1,5,-4,1,-9,-6,3,1,3,-10,3,-8,-8,-8,9,8,4,-1,-10,-8,9,2,-1,3,5,7,-9,-2,-3,6,6,5,-9,8,7,10,7,-9,-7,4,-8,-1,3,3,-6,1,-5,3,3,3,5,-7,5,3,-10,5,-8,-6,10,9,10,-7,8,-7,1,-10,-5,-1,3,-4,2,5,-6,1,10,-1,3,5,9,-10,-4,-7,7,1,3,-7,5,-5,2,-6,-9,3,6,-3,10,5,4,-6,1,5,5,1,3,-2,5,9,6,5,-2,6,2,7,-3,-10,-10,-10,-6,-6,8,-8,-7,-4,9,-4,-8,2,-2,-7,-1,1,2,8,-2,-9,-6,1,3,6,-7,-10,1,-4,-2,7,-7,-7,-10,7,3,10,4,-1,-7,7,-7,10,1,-10,6,-6,-8,2,-10,-7,6,10,-1,6,-8,-3,-4,-3,-6,7,2,4,8,7,-6,9,-4,-1,10,4,-4,10,-7,-2,8,6,5,-2,-8,9,3,-6,-4,3,-6,-1,1,8,-6,4,10,-8,10,5,8,1,-1,10,4,9,-10,2,-4,3,9,-6,7,-3,3,-4,10,-4,-2,6,8,8,8,3,-10,-3,-4,-9,4,-10,8,8,9,10,-6,7,-4,4,-5,-7,3,-4,-1,-8,3,-2,1,-10,1,2,-8,3,-4,-5,6,-3,-4,-6,10,-9,-3,5,-10,6,6,-1,9,-6,1,-1,5,-5,-1,-3,-8,-3,3,7,-4,7,3,2,-1,4,-2,-8,8,-6,-6,-9,1,-5,1,-8,-7,5,-2,-3,-7,-5,-3,-8,8,-2,-2,9,5,8,8,-3,10,6,-8,6,-5,6,8,10,9,10,-3,5,-5,-7,8,9,-9,1,-5,5,-2,9,-7,5,1,7,4,-3,4,3,2,-9,8,-10,-9,-4,-8,-10,-2,-10,8,-8,-9,3,-10,3,-10,-3,-2,-1,8,3,-8,10,8,4,7,-10,2,-10,-2,4,-7,10,8,2,7,-1,-8,9,-8,2,5,-4,7,-9,8,1,-10,7,-10,-5,6,-6,-4,-2,9,2,6,-1,9,-2,-3,4,-3,1,-4,2,10,-8,-4,1,-2,7,8,-5,-8,-7,1,2,6,7,10,2,9,8,-8,-9,3,-2,-4,9,-3,2,-8,6,-10,4,4,1,5,9,8,6,5,-4,5,2,-10,2,1,-3,-2,-2,-4,10,-2,-3,-8,-2,6,-2,9,-1,-8,-8,2,9,-10,-10,4,4,-2,6,5,-3,-4,-4,-6,-4,7,-3,-3,4,-5,-8,6,-3,-8,-8,-9,-7,-5,7,-7,8,-3,4,-5,-1,-3,-7,2,9,1,6,8,2,-4,5,-2,-5,3,-2,8,-9,6,-1,-10,-8,-10,10,8,3,4,3,-2,10,-10,6,-10,10,-10,4,-3,-10,5,-3,5,4,8,5,10,5,-2,9,-5,7,9,-7,4,-5,9,-3,-8,6,-8,5,-8,7,3,-1,-2,6,-2,4,-10,6,-9,-8,5,2,-4,-1,-7,-2,4,-9,-6,10,7,3,-4,-1,-7,1,-2,7,-8,-6,-7,-5,2,1,-10,5,8,-7,6,-5,-8,6,9,-3,2,-2,-8,1,-3,-9,7,2,-3,-6,-8,3,-9,-5,-2,5,-8,4,8,-7,10,-3,1,2,6,-2,-1,10,5,10,4,3,4,9,3,-2,3,1,3,-7,-1,3,5,4,1,-7,-1,10,-8,-7,6,-7,7,2,-1,-10,9,6,9,3,-6,-8,3,-2,6,3,9,10,7,-7,-2,-3,-10,-4,-1,-10,7,5,3,-10,-7,2,2,5,5,-8,-8,-9,-1,9,10,-10,7,-9,-5,1,4,1,7,-7,-7,-1,-7,-3,-3,-10,-4,-2,-8,-3,-9,-6,-8,-9,2,-7,-1,3,-7,6,-1,-3,-7,-5,-5,9,-3,-7,5,-7,-1,5,3,2,8,-1,4,-3,-10,-9,9,9,6,-2,-1,7,5,6,2,7,-5,9,4,-2,2,-9,1,2,3,8,5,4,7,-6,-7,1,3,1,3,2,-9,8,-9,7,6,-4,1,1,-9,9,1,-7,-1,4,6,-9,6,-4,8,9,-7,5,2,-7,2,-6,-7,9,-1,-10,-8,-1,10,1,7,2,-4,3,4,8,8,-10,7,3,-2,-7,5,5,3,3,-8,7,3,-10,2,2,-2,-6,-2,10,-3,-2,-7,4,-7,-2,-2,-6,9,-4,6,2,8,10,9,2,7,2,5,3,-3,-4,4,-1,-8,5,-1,-3,-6,-7,-2,-7,-4,-2,5,8,2,4,-4,8,-10,-9,9,7,4,10,-2,-3,-8,-5,10,-2,7,-8,-10,6,-1,-10,4,8,1,4,-7,-2,-1,9,-2,6,6,2,-2,6,3,4,5,-7,-1,2,9,-2,-2,-4,1,-6,5,5,-8,1,-8,1,8,-10,1,7,-5,-10,2,-3,-5,-4,-9,-10,-1,-8,-7,-4,1,5,5,1,3,-9,9,-1,-1,7,-3,6,-7,3,-7,10,-1,9,-9,10,-6,-8,-2,-9,2,-2,-2,-9,5,2,8,-10,-7,7,-1,-7,-7,-2,-3,-2,5,-2,-4,-6,4,3,-10,-3,5,-4,-8,-5,-7,3,-6,-7,-1,-7,-1,-8,-1,-6,-5,1,-2,8,5,4,8,1,4,-4,6,-2,6,-1,10,-1,8,-6], dtype = "uint32")#candidate|4362|(1078,)|const|uint32
var_4363 = relay.var("var_4363", dtype = "float32", shape = (2352,))#candidate|4363|(2352,)|var|float32
call_4360 = relay.TupleGetItem(func_1335_call(relay.reshape(const_4361.astype('uint32'), [11, 7]), relay.reshape(const_4362.astype('uint32'), [1078, 1]), relay.reshape(var_4363.astype('float32'), [4, 588]), ), 5)
call_4364 = relay.TupleGetItem(func_1340_call(relay.reshape(const_4361.astype('uint32'), [11, 7]), relay.reshape(const_4362.astype('uint32'), [1078, 1]), relay.reshape(var_4363.astype('float32'), [4, 588]), ), 5)
output = relay.Tuple([uop_4341,call_4360,const_4361,const_4362,var_4363,])
output2 = relay.Tuple([uop_4341,call_4364,const_4361,const_4362,var_4363,])
func_4375 = relay.Function([var_4340,var_4363,], output)
mod['func_4375'] = func_4375
mod = relay.transform.InferType()(mod)
mutated_mod['func_4375'] = func_4375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4375_call = mutated_mod.get_global_var('func_4375')
var_4377 = relay.var("var_4377", dtype = "float32", shape = (15, 6, 5))#candidate|4377|(15, 6, 5)|var|float32
var_4378 = relay.var("var_4378", dtype = "float32", shape = (2352,))#candidate|4378|(2352,)|var|float32
call_4376 = func_4375_call(var_4377,var_4378,)
output = call_4376
func_4379 = relay.Function([var_4377,var_4378,], output)
mutated_mod['func_4379'] = func_4379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4643 = relay.var("var_4643", dtype = "float64", shape = (9, 7, 16))#candidate|4643|(9, 7, 16)|var|float64
uop_4644 = relay.exp(var_4643.astype('float64')) # shape=(9, 7, 16)
output = uop_4644
output2 = uop_4644
func_4654 = relay.Function([var_4643,], output)
mod['func_4654'] = func_4654
mod = relay.transform.InferType()(mod)
var_4655 = relay.var("var_4655", dtype = "float64", shape = (9, 7, 16))#candidate|4655|(9, 7, 16)|var|float64
output = func_4654(var_4655)
func_4656 = relay.Function([var_4655], output)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4686 = relay.var("var_4686", dtype = "int64", shape = (3, 10, 9))#candidate|4686|(3, 10, 9)|var|int64
const_4687 = relay.const([[[-7,5,-3,-8,-7,9,-4,2,-2],[7,-1,2,-3,-9,-2,-2,-7,-10],[9,-7,5,-4,4,8,-6,-1,6],[-10,-8,9,-2,-8,10,-9,8,-7],[-4,3,-4,6,-3,-9,-10,7,8],[9,-9,-8,7,-7,-3,-9,3,7],[-2,-9,9,4,-9,-9,-1,8,5],[8,-5,-8,-9,-7,8,4,-8,5],[-3,9,1,2,8,1,-7,-5,4],[-3,10,-9,-6,10,-8,-3,3,-4]],[[2,6,7,3,-8,6,-4,7,9],[-4,-9,-8,9,-7,-5,-7,-8,-9],[2,-8,-2,4,-3,2,7,6,-10],[4,-8,-2,-3,-2,-3,5,-4,-6],[7,-4,1,4,-2,5,-7,-3,-9],[9,-3,-2,-3,2,9,-4,9,1],[-4,9,5,9,-4,-8,9,-6,10],[1,-6,3,-2,-6,-4,3,9,-5],[-8,6,-9,7,-4,2,-1,-1,5],[-4,10,-10,-6,4,6,10,6,-6]],[[-2,4,-5,4,-9,-5,-9,-3,-1],[-5,7,2,1,-5,-10,3,-3,-2],[5,-4,-8,-1,2,-6,-9,1,2],[-7,-7,-1,5,-1,-3,7,-8,4],[-4,5,-1,8,-3,5,-2,8,7],[8,-3,10,-1,-6,10,9,9,9],[-4,-1,7,2,-10,-9,-10,-9,-6],[-1,-6,10,-8,-1,10,6,-6,-10],[-3,-2,-3,-8,-10,5,5,-6,2],[-8,-4,7,8,9,10,-7,-4,-4]]], dtype = "int64")#candidate|4687|(3, 10, 9)|const|int64
bop_4688 = relay.logical_xor(var_4686.astype('int64'), relay.reshape(const_4687.astype('int64'), relay.shape_of(var_4686))) # shape=(3, 10, 9)
func_4078_call = mod.get_global_var('func_4078')
func_4081_call = mutated_mod.get_global_var('func_4081')
var_4713 = relay.var("var_4713", dtype = "float64", shape = (11, 6))#candidate|4713|(11, 6)|var|float64
const_4714 = relay.const([7,-9,-4,-6,4,-6,8,1,-7,-4,9,1,4,9,8,-10,5,-10,4,8,2,4,-7,-6,3,-9,7,-6,-5,6,-6,-6,8,2,10,9,5,-5,-6,7,1,4,6,-9,-5,-4,-1,-4,8,2,7,3,-5,-4,-9,4,9,-8,-8,-7,9,-7,-6,1,8,-4,-7,7,-3,-6,-6,-2,8,1,4,10,1,-6,-10,-1,-2,-3,1,-2,-3,-7,-7,-3,9,-3,-1,-8,4,-1,1,-3,8,10,6,-4,-10,-7,1,4,-5,5,-3,8,5,10,-3,6,6,1,-10,2,-7,7,-10,-8,-9,9,-5,7,-10,5,9,5,9,-1,10,-9,10,-4,8,-5,6,10,3,-1,-6,6,-10,-5,8,10,-7,4,-6,10,-4,-2,9,4,-9,6,-3,-3,5,4,1,-1,2,8,6,3,-2,-2,6,4,-3,1,5,1,-1,3,-8,2,2,7,9,9,4,4,-7,7,1,6,-3,7,-1,-8,7,-8,-4,-8,-4,4,-6,9,-7,3,-4,5,7,1,-4,-6,3,-9], dtype = "int8")#candidate|4714|(210,)|const|int8
call_4712 = relay.TupleGetItem(func_4078_call(relay.reshape(var_4713.astype('float64'), [2, 3, 11]), relay.reshape(const_4714.astype('int8'), [210,]), ), 2)
call_4715 = relay.TupleGetItem(func_4081_call(relay.reshape(var_4713.astype('float64'), [2, 3, 11]), relay.reshape(const_4714.astype('int8'), [210,]), ), 2)
output = relay.Tuple([bop_4688,call_4712,var_4713,const_4714,])
output2 = relay.Tuple([bop_4688,call_4715,var_4713,const_4714,])
func_4732 = relay.Function([var_4686,var_4713,], output)
mod['func_4732'] = func_4732
mod = relay.transform.InferType()(mod)
var_4733 = relay.var("var_4733", dtype = "int64", shape = (3, 10, 9))#candidate|4733|(3, 10, 9)|var|int64
var_4734 = relay.var("var_4734", dtype = "float64", shape = (11, 6))#candidate|4734|(11, 6)|var|float64
output = func_4732(var_4733,var_4734,)
func_4735 = relay.Function([var_4733,var_4734,], output)
mutated_mod['func_4735'] = func_4735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5191 = relay.var("var_5191", dtype = "float32", shape = (6, 1, 16))#candidate|5191|(6, 1, 16)|var|float32
uop_5192 = relay.atan(var_5191.astype('float32')) # shape=(6, 1, 16)
bop_5201 = relay.bitwise_xor(uop_5192.astype('int64'), relay.reshape(var_5191.astype('int64'), relay.shape_of(uop_5192))) # shape=(6, 1, 16)
bop_5210 = relay.floor_divide(uop_5192.astype('float32'), relay.reshape(bop_5201.astype('float32'), relay.shape_of(uop_5192))) # shape=(6, 1, 16)
output = bop_5210
output2 = bop_5210
func_5216 = relay.Function([var_5191,], output)
mod['func_5216'] = func_5216
mod = relay.transform.InferType()(mod)
mutated_mod['func_5216'] = func_5216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5217 = relay.var("var_5217", dtype = "float32", shape = (6, 1, 16))#candidate|5217|(6, 1, 16)|var|float32
func_5216_call = mutated_mod.get_global_var('func_5216')
call_5218 = func_5216_call(var_5217)
output = call_5218
func_5219 = relay.Function([var_5217], output)
mutated_mod['func_5219'] = func_5219
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5939 = relay.const(2.491291, dtype = "float32")#candidate|5939|()|const|float32
var_5940 = relay.var("var_5940", dtype = "float32", shape = (6, 9, 9))#candidate|5940|(6, 9, 9)|var|float32
bop_5941 = relay.mod(const_5939.astype('float32'), var_5940.astype('float32')) # shape=(6, 9, 9)
uop_5952 = relay.tan(var_5940.astype('float64')) # shape=(6, 9, 9)
func_1335_call = mod.get_global_var('func_1335')
func_1340_call = mutated_mod.get_global_var('func_1340')
var_5962 = relay.var("var_5962", dtype = "uint32", shape = (77,))#candidate|5962|(77,)|var|uint32
var_5963 = relay.var("var_5963", dtype = "uint32", shape = (1078,))#candidate|5963|(1078,)|var|uint32
var_5964 = relay.var("var_5964", dtype = "float32", shape = (84, 28))#candidate|5964|(84, 28)|var|float32
call_5961 = relay.TupleGetItem(func_1335_call(relay.reshape(var_5962.astype('uint32'), [11, 7]), relay.reshape(var_5963.astype('uint32'), [1078, 1]), relay.reshape(var_5964.astype('float32'), [4, 588]), ), 3)
call_5965 = relay.TupleGetItem(func_1340_call(relay.reshape(var_5962.astype('uint32'), [11, 7]), relay.reshape(var_5963.astype('uint32'), [1078, 1]), relay.reshape(var_5964.astype('float32'), [4, 588]), ), 3)
output = relay.Tuple([bop_5941,uop_5952,call_5961,var_5962,var_5963,var_5964,])
output2 = relay.Tuple([bop_5941,uop_5952,call_5965,var_5962,var_5963,var_5964,])
func_5968 = relay.Function([var_5940,var_5962,var_5963,var_5964,], output)
mod['func_5968'] = func_5968
mod = relay.transform.InferType()(mod)
var_5969 = relay.var("var_5969", dtype = "float32", shape = (6, 9, 9))#candidate|5969|(6, 9, 9)|var|float32
var_5970 = relay.var("var_5970", dtype = "uint32", shape = (77,))#candidate|5970|(77,)|var|uint32
var_5971 = relay.var("var_5971", dtype = "uint32", shape = (1078,))#candidate|5971|(1078,)|var|uint32
var_5972 = relay.var("var_5972", dtype = "float32", shape = (84, 28))#candidate|5972|(84, 28)|var|float32
output = func_5968(var_5969,var_5970,var_5971,var_5972,)
func_5973 = relay.Function([var_5969,var_5970,var_5971,var_5972,], output)
mutated_mod['func_5973'] = func_5973
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6104 = relay.var("var_6104", dtype = "float32", shape = (2, 6, 6))#candidate|6104|(2, 6, 6)|var|float32
uop_6105 = relay.log(var_6104.astype('float32')) # shape=(2, 6, 6)
func_1698_call = mod.get_global_var('func_1698')
func_1702_call = mutated_mod.get_global_var('func_1702')
var_6112 = relay.var("var_6112", dtype = "int64", shape = ())#candidate|6112|()|var|int64
var_6113 = relay.var("var_6113", dtype = "int64", shape = (52,))#candidate|6113|(52,)|var|int64
const_6114 = relay.const([9.168319,-2.819721,9.354786,-6.612351,-6.093762,-2.525956,-4.335396,-2.734931,-9.684874,4.248168,-7.350591,0.989206,-0.845018,-3.807861,6.444580,3.575127,-6.434490,7.777017,8.111441,-7.948641,7.738592,-5.651542,-8.283403,-3.000835,5.990598,-3.471633,8.159545,-7.681959,3.080229,-9.840021,3.976376,3.186831,2.888215,6.174664,-1.007407,3.042228,-0.557916,-5.459738,-8.957284,8.949056,-0.362505,2.790269,3.274767,-3.459666,0.523199,-7.130847,-3.151449,-8.929497,-9.292339,-3.126108,9.072685,-7.466901,-4.871755,-9.091903,-0.360277,-4.764882,-4.808985,-0.301341,-9.451307,-7.018240,6.316639,-1.424668,3.612599,-0.674285,-6.575598,-0.552526,-7.217646,6.009461,7.143722,2.824348,-3.586692,1.910054,6.534489,-8.075300,-5.490320,5.001025,5.072357,5.254592,-3.248360,3.251788,2.901372,1.917710,-0.234661,-8.694720,-2.495012,8.580707,2.738559,3.767140,5.394097,-0.208586,1.601763,5.672662,5.859054,0.856132,-7.591105,-2.482519,-6.103945,0.824912,5.865724,4.689938,6.617992,-1.365268,2.067179,-8.760586,6.230450,-6.118198,-2.144956,-8.769112,-7.627248,-4.371031,-9.230343,-0.896594,-7.954713,9.147623,2.615396,7.724851,-9.270989,-1.874322,-7.650153,-7.526964,2.832959,-9.693895,-1.497506,-0.895907,-2.452481,-4.651612,7.679413,5.775595,-7.137098,4.448149,2.630232,0.486288,-6.397068,0.802003,-5.429099,4.682091,-5.440040,2.797320,-4.297782,-1.808306,-5.946924,8.800391,7.581412,5.448972,0.550409,-0.570690,-5.894230,-5.022960,6.673318,2.690169,6.954104,0.241909,-7.471788,7.138974,-2.315545,0.693015,-9.482923,0.513524,4.741256,6.273980,0.229544,-6.268641,6.838468,4.455120,-6.842452,-4.459080,1.510792,-5.977521,0.755465,-9.660144,1.100533,-9.354894,-7.298063,7.037013,5.317205,-9.287298,-1.195065,-4.667720,-6.647096,-8.586000,-1.167358,-9.847169,3.739533,4.978550,-1.167298,-9.792110,3.162355,1.228327,-8.188890,4.092396,-0.373228,4.650128,-1.157724,-1.841513,8.432245,-4.383515,-3.024499,5.785146,5.361087,-4.761452,-8.846553,9.735003,8.479075,5.635219,0.478258,6.849042,-5.283977,3.140029,-9.513741,3.501740,-1.508186,4.262782,9.399764,-5.561423,6.017463,-7.207156,-9.990154,5.154096,1.815298,1.324033,-8.831539,-9.822570,7.773356,6.191237,2.445769,1.328189,-2.489989,-4.594861,9.528184,-2.716882,0.780121,-8.905189,-0.005523,-1.431288,-4.448396,3.009896,-4.522653,-0.289179,1.795372,-0.448766,-6.852752,-2.537621,-7.684448,-1.928627,-6.544882,6.493240,-9.265639,1.498133,4.560659,-3.395063,0.035209,-0.150928,7.354223,-5.305725,7.983409,1.834047,-9.539802,-2.974600,7.550323,2.167993,-0.394851,1.683795,-0.150579,5.316076,-2.182629,-3.858250,2.648262,-5.918193,6.118809,6.182601,9.625306,-6.863583,6.782581,-0.287316,-3.767789,-3.666162,-9.686667,9.730202,-8.327235,2.712917,-9.137912,-6.328146,-2.895421,-3.166202,4.728294,-2.741179,-6.675342,7.689469,-7.735344,-0.677458,1.998543,2.533492,3.788921,-2.358660,3.527176,-3.210520,8.753538,-7.517798,6.634777,7.914058,-0.659868,8.252124,0.236642,-6.965563,6.646586,-6.443642,1.584197,-8.905664,-4.232148,-7.675705,-5.796833,8.238451,-9.024780,-7.132123,-8.880951,-7.345688,1.493299,4.802944,-4.409524,-1.335666,4.752784,-1.821502,-9.266057,5.445194,-7.798281,1.263592,-1.249240,-6.320845,-2.028433,1.567421,2.592377,1.242306,2.447354,3.432875,9.612639,7.246947,-5.639606,1.081006,7.688608,0.704752,0.299016,-7.363197,5.369348,-9.079242,3.054891,-6.269393,1.243335,-9.215156,-4.935625,6.798567,3.633160,-7.442179,-5.951669,1.208942,-7.528903,3.438968,3.877122,-3.506540,2.381245,-4.869555,-0.537683,2.348814,-7.688222,-7.956274,1.312029,-0.108269,8.500534,-8.788501,5.466953,5.829558,-5.104612,0.373712,-1.579340,-2.968744,-4.894797,8.751538,2.374644,-9.331664,-9.944418,-6.653037,-9.264716,-8.906752,-6.985288,-7.183199,-2.297623,9.570097,-4.335878,-7.591878,-4.923713,-4.564083,2.221167,8.206388,-7.894601,4.027199,5.184501,-7.656878,-3.889462,5.846011,9.758648,-8.604846,9.591690,-5.849387,-0.589460,-0.922935,3.473752,5.280927,-1.834966,2.956356,7.499942,8.863228,3.766882,-5.901450,0.109842,-4.895729,7.205511,-5.688583,-7.916207,0.379402,-6.608752,-5.851792,-6.316742,-4.523393,-0.397723,-9.298272,-0.832833,-5.541510,7.736309,-2.699165,-8.822436,-7.994789,4.149063,-7.940705,0.537060,5.734665,-0.366689,-4.009256,8.619550,1.462587,-5.690561,1.131080,-3.261113,-4.046464,0.079429,-9.216663,3.505164,8.933872,1.354179,5.858312,9.457321,-4.364467,-4.950973,7.535674,-3.933371,5.097935,-0.135107,6.778478,6.758041,-0.540681,-7.907433,-8.357489,3.358219,5.431723,-4.627503,-5.267819,2.366647,4.692863,5.422069,3.112163,1.622485,-2.562402,-3.954867,-6.873154,-4.457839,-8.039346,1.497063,-4.937733,-1.983551,-9.004030,-9.694159,1.275294,9.093835,2.190120,9.443713,-8.323666,-7.597928,-5.395519,1.107572,-2.409913,5.954001,-0.019180,3.476247,-1.135313,-3.298775,-1.770923,3.365544,-0.230938,-5.892908,2.982358,1.873150,1.318623,-0.178178,-4.012653,-0.301783,0.971769,4.563368,6.026521,2.914356,-7.959100,-2.988339,-4.898712,-2.535390,-6.843357,8.106489,-0.640756,-4.548876,-7.558307,7.751918,-9.397230,5.796986,-3.066300,7.694064,3.342853,8.971572,5.927155,6.104759,7.093728,-2.792452,-9.566139,5.641602,-8.461128,-2.836088,-1.575411,5.730768,-5.373140,8.577398,2.523299,-2.707626,3.569135,5.517853,3.336567,-4.515421,-3.281941,-8.356165,-6.446548,-1.871996,4.999450,4.954526,-6.216952,-0.641683,9.663716,7.434819,8.276337,-9.828396,1.778382,3.948561,-5.523151,6.973263,-3.969427,4.306491,6.292226,-0.531455,2.899500,6.256298,-3.323128,-3.354626,7.754943,6.517041,7.867363,8.326066,2.169148,8.839728,-5.095092,-2.484005,-0.923999,-9.320262,7.538393,3.080446,-3.861280,2.867475,-7.079209,9.274318,3.893230,-7.186698,-6.096693,-1.638084,-9.543950,2.138584,-3.383262,-0.597737,6.248917,6.432621,1.183526,5.608117,4.434925,-8.645070,-6.181052,1.195776,-3.439414,-8.349158,5.111899,-0.056319,-0.180064,-7.352882,-0.798315,-2.158709,4.887911,-3.057160,-5.258677,8.655395,-0.274427,8.518069,4.108593,4.927875,6.346665,-5.643656,-2.983172,-1.047684,-9.748442,3.304310,7.297209,-7.850159,0.971594,3.241439,3.059482,0.558547,1.186249,-4.421894,8.127319,-0.179227,-8.245956,7.581751,-5.253781,2.856931,9.041937,4.342324,-5.886703,6.008237,-3.392858,1.252477,4.679250,-5.675090,-3.993779,8.557438,-0.887920,-3.102028,-9.618793,9.439456,4.901400,5.386704,5.749965,-2.952907,6.241015,-5.872954,-3.497070,8.964285,-9.039778,-5.061252,-8.613578,8.518738,-3.523106,8.022938,5.009409,8.222167,-2.185691,7.956030,1.326919,1.072741,-0.303578,-8.893772,-7.715631,-6.921457,4.887802,0.470417,5.647439,-8.749373,-5.791314,-2.754659,-2.764047,-0.974988,7.078846,1.755511,5.619557,6.353983,-4.919736,9.099702,8.721891,2.471791,-3.936113,-2.737982,9.847054,8.181304,5.990079,-4.971150,7.586563,-2.678345,-4.020782,6.693805,-9.196683,5.538881,2.162461,0.709321,9.908244,8.117460,5.421281,6.819601,7.256309,-7.322090,-6.108871,-7.693327,-0.478061,-8.196096,-7.173470,-3.642847,-2.134532,7.609461,-5.472740,-1.836870,-1.490217,-5.887049,-4.301345,-7.406077,-8.450452,-7.708821,3.748051,9.832577,4.742446,2.259877,5.327781,-9.642168,1.422954,8.596983,3.580158,9.108640,-7.813439,6.911383,2.204376,-1.379344,1.567882,1.907601,9.274370,-9.681883,-8.261657,2.510297,8.548036,-6.911449,0.977310,0.017137,6.046060,-3.137012,-2.594346,-6.755815,-3.761824,4.255322,1.189099,-9.036253,4.430343,2.924733,-4.798225,-8.567056,3.831893,1.322221,-6.507542,8.240444,9.616258,4.836275,1.010071,-4.926954,-9.404993,8.186125,-9.602171,5.229519,-5.158839,7.325316,1.192425,9.743850,-7.560122,4.138480,0.020928,6.595415,0.447529,-3.306163,-6.061594,-1.410392,-8.285289,2.361509,8.585813,9.618367,8.104075,4.053191,-2.358820,9.942538,2.453002,8.687261,7.062042,5.418744,-5.700405,-9.118325,-5.951036,9.581311,-7.779014,7.748699,8.682743,-3.676243,-4.832737,7.859246,-1.945202,1.210490,-9.265872,-3.676454,5.040986,-5.838770,1.034076,7.549755,5.013412,-2.687797,5.481569,1.260922,-5.202773,8.135268,7.419239,7.684842,-2.176135,8.271784,-7.247904,-7.222698,-6.261214,4.143847,7.846217,3.256655,7.227720,2.105116,-0.275868,-1.136552,-4.627917,5.445066,-9.867663,2.291634,8.999573,4.238240,-4.006807,-8.374301,-8.521832,-6.221003,-8.028966,-4.068028,2.276679,-8.577438,4.562314,7.416995,-5.355142,7.680232,4.439888,2.299498,-9.241141,-3.654580,2.827278,2.710324,-4.804255,3.126719,2.275254,4.279332,4.015109,-7.968193,-9.123264,-8.579077,-6.774142,6.547292,-5.268995,1.855460,-6.936084,7.896626,-7.611655,5.893939,-9.506633,4.054279,3.383141,5.582311,-4.626890,0.790654,1.840936,3.898747,5.035707,8.098609,-7.666413,-4.519825,2.867472,-2.560212,-8.190140,-0.747472,-3.719510,2.024059,-7.057975,5.797963,-5.449650,5.335081,-7.964892,-9.532639,-9.691630,-4.298430,-0.138830,2.931850,-8.908741,2.320149,3.305336,-4.938242,2.936542,5.652958,-1.267800,-4.145695,7.498994,-0.396141,-2.718721,-3.417863,-4.294564,3.243467,0.307366,-5.766043,-0.822538,0.472365,-9.256736,-4.481310,2.187817,9.947987,-4.410888,-5.101975,-8.273157,1.296186,5.357049,7.748266,-7.850659,-8.207986,1.204752,-5.688036,-6.423484,6.924477,1.492527,-0.251038,-7.474375,-4.071261,8.305615,-2.590849,6.546384,4.663991,7.486899,-3.100069,3.649435,-4.502090,-9.596495,1.169502,-4.533561,9.497131,-8.789098,-0.346615,0.886254,2.248726,1.218730,-3.557898,2.446671,-0.869466,-0.890690,5.506498,0.368313,-0.441726,-8.861707,1.839035,7.863682,-5.177851,-7.225827,-2.985378,2.131564,7.372567,2.624912,0.173077,0.109370,-7.109784,-5.636840,1.645664,1.181491,6.927219,5.317900,-1.500793,4.275329,-1.583336,4.688422,-9.840457,-3.781574,8.447501,5.717659,7.665461,-9.669567,5.750611,6.730255,1.358816,-3.107048,-8.653319,5.575155,-3.399602,6.773968,-2.796629,1.775432,1.498814,-8.616681,-9.862876,0.636522,-9.196734,9.878549,-0.941486,3.102271,6.462244,7.543186,1.196506,-2.322113,3.730140,7.918631,-3.628640,-2.923052,-7.997538,-1.355244,1.143005,-6.003187,-4.854644,5.112600,-3.498885,-6.530988,-4.482939,8.753148,-7.258330,-2.262135,7.719008,7.443507,-0.484424,2.903498,6.150003,6.837879,7.164357,-7.574866,4.958140,2.463662,-1.213219,7.998222,3.138145,4.543324,-4.542316,4.185313,0.394494,2.189662,9.897049,-2.408027,1.055072,7.804637,-2.449343,-4.665780,9.985957,9.420669,1.532066,-8.109969,-6.306055,-1.721555,8.343585,-9.824555,-6.473192,7.172986,3.465032,-1.258206,0.424354,7.274134,-6.298529,-5.746794,2.718642,7.882633,-8.356601,1.000321,1.866398,-7.948330,-0.012463,0.274571,-7.009883,-9.216545,3.008381,-0.366385,-1.307536,-1.837279,9.925570,-4.724263,-6.977767,1.494030,6.576725,7.952608,-6.166741,-7.212711,1.691142,-3.051536,-9.969642,4.609388,6.742362,-0.731472,5.974980,-4.744279,3.910908,-3.092548,9.309924,0.227816,-3.286740,1.598487,-5.910055,5.767821,-0.810127,0.999464,-4.089125,-7.850087,1.979033,0.936861,0.706696,8.773146,-8.368328,-1.014739,-7.168753,6.776427,3.868001,4.035936,-4.048809,1.621003,-1.711898,7.024359,1.442030,9.843299,-0.493247,7.810304,-0.603267,6.114492,-3.991985,-2.832379,9.301961,-1.066210,3.557876,-1.095252,-7.923568,-9.956573,-9.718921,-2.043046,5.425520,-4.636669,-6.928227,9.643923,6.799089,-5.728471,-2.171317,-5.938803,-3.895541,-5.077690,-3.272153,2.822526,-0.841292,-4.906481,8.951172,-6.548844,-6.386565,-4.839508,4.650010,4.778268,-0.672251,-6.164516,4.146848,-2.069660,0.066377,9.256507,9.333716,6.819903,-9.716319,4.275677,-6.220729,-8.287753,-9.339714,0.123022,-7.634205,-8.960819,-3.448189,3.794345,7.194917,0.157350,5.262317,1.376689,4.573335,-0.252026,-4.835037,8.059439,-5.897950,6.565553,3.965474,-9.034893,5.189967,-5.100370,1.070081,9.087042,-1.905530,-9.120762,9.367525,-0.324466,-3.412295,-0.493850,-5.284480,4.402958,7.576780,-6.191031,8.638905,-6.680432,7.166345,9.661155,1.071406,-5.363906,2.123258,5.761637,-9.132470,-0.515277,-0.261281,7.240162,-0.424784,5.502746,3.345468,-8.169474,-5.807851,6.038973,-5.749137,6.865825,-4.596741,7.168638,-7.215574,-0.180818,-0.995880,3.631888,-1.749327,-4.479859,6.857738,-3.828757,4.889936,8.465986,-3.458593,5.710927,8.523057,-0.231617,-2.759181,-8.644971,-8.096383,5.251169,7.251527,1.538269,0.107901,-8.541886,-8.222227,9.262204,-5.120921,6.325915,-3.648060,6.233416,0.489991,9.089739,5.282514,-7.216342,-2.689631,-4.193240,-5.438916,0.617090,7.159567,-3.343148,3.618944,7.619013,6.001922,-1.758167,-9.543926,5.522064,3.843238,1.735059,-4.373859,-8.825199,-6.485941,-8.007938,-7.732043,-4.586180,-9.488613,7.557120,0.820163,3.494553,-2.142331,-1.147386,1.467176,-0.746106,-8.555996,3.451155,-0.843986,4.272493,-5.879047,1.921265,-9.373031,3.607413,1.491043,-2.253744,3.427970,1.225932,5.632041,-4.624848,8.160691,0.723658,8.178915,2.331361,-1.515741,-9.568275,-4.506165,2.583228,2.439566,5.079210,-7.633107,8.916598,1.339727,3.733791,-4.934034,3.829023,-4.526046,7.912384,9.625897,4.948117,-5.425399,6.607402,-2.977871,4.142393,3.275089,-2.323001,-9.396146,0.925157,-1.664915,-7.020897,5.119831,-5.334022,-4.826179,8.848282,-7.003193,8.575948,-2.541054,-4.997076,0.213351,-9.177986,-8.709953,-3.510901,8.287505,3.455450,-0.908186,-9.252171,9.421955,-1.121361,7.785543,-4.654466,-3.978314,-6.292058,-6.895182,0.912993,-9.184569,-5.398444,-4.915074,5.489067,-0.477224,0.951618,-4.030821,-0.615297,8.850461,1.725466,-0.188918,-7.494607,8.871293,7.502584,8.159343,5.376852,2.058923,0.999240,3.715640,5.114008,9.271009,-5.814921,-7.672864,4.482516,5.572583,-3.089780,-8.226528,2.411702,4.287578,3.833427,1.795037,-5.029492,-2.388009,7.710013,-0.809521,-0.543418,3.640132,3.906239,3.758244,6.538389,1.956358,4.042665,5.247206,1.076608,0.247547,7.695491,-5.826266,2.777502,6.544423,-5.887824,2.771065,4.458754,8.595331,8.869953,-7.187901,-5.767504,-1.333646,9.683983,-1.847439,3.579770,-7.140443,-4.395495,-8.942778,1.566808,-2.755278,-6.865643,-9.010299,0.638246,-7.236128,4.580513,4.929778,6.936278,7.107669,8.472103,7.664217,4.487969,-6.515768,-1.791061,-2.080189,-7.614129,5.047613,-7.427889,2.512270,-3.802518,-5.227182,-1.341711,3.509648,-9.065613,-4.863956,-0.705805,-9.586343,7.109207,0.559643,7.913236,-9.430692,5.665606,-2.942671,6.204525,3.043128,-3.175503,2.969492,0.491232,-7.965326,3.360067,-1.273062,-1.451974,-3.459367,0.046052,-9.240959,6.686182,-8.516026,-2.652468,-8.274939,-1.971373,4.046368,-5.282707,5.543551,7.015406,6.537281,1.327245,-9.353417,-6.390595,4.005452,7.658703,-1.048138,-7.426403,9.857802,-8.336571,2.887590,3.654316,6.126675,4.964904,6.633274,-0.051763,-4.095201,-4.126715,9.098343,7.461508,-8.452958,-0.800616,3.849260,-7.672950,-1.203328,-1.623112,9.110470,-9.058569,2.329477,-1.095410,3.621825,0.294678,-3.276627,-7.440992,-4.736389,-7.451342,-6.532891,-2.607632,-1.562038,-6.665197,3.612650,-5.301116,-8.474258,2.823831,-7.360147,3.332367,-9.543380,5.885027,-4.791216,-4.508246,6.646474,-4.946697,-0.052440,4.459712,7.255797,0.580036,6.602607,9.297918,-0.189008,2.295834,-2.363866,-1.184989,-7.702894,5.250843,-5.980484,7.788675,7.717479,2.536253,-5.774906,-5.686003,4.132455,-3.155324,8.875151,-9.298741,-6.222985,-4.969665,-9.308580,9.776173,7.768346,-5.545923,7.653081,6.314556,6.018720,-0.620448,-7.880677,4.346767,-1.400423,-3.297661,0.431405,2.420501,-1.612964,8.230731,5.545311,3.299174,6.805561,-1.756732,-2.156228,7.639048,-2.123248,6.259902,-8.292659,-7.217449,1.407907,-9.293773,-2.031492,-1.735291,-0.698505,1.287571,6.316536,-5.961638,-7.386296,5.636918,-3.988007,-8.848375,-2.822465,1.219077,-1.029507,9.643710,-0.192420,4.231558,3.648558,-6.705243,3.659311,8.299493,-8.878419,7.642116,-9.211227,4.623177,-7.715635,-6.356831,-3.998806,2.861899,2.565713,-4.973126,5.591084,-7.972660,9.593501,-0.958840,5.859686,0.932893,3.926184,-9.911478,1.919443,-8.915711,-9.504207,-4.550794,9.293913,4.380976,-0.634898,-6.380118,4.865693,7.069462,3.526684,3.865459,2.460671,2.118084,-4.328751,4.707046,5.774899,8.509049,-2.738301,-5.612933,1.968293,-3.163849,7.522663,5.978782,-3.990149,-3.329871,-4.797583,-2.147806,-5.423874,-0.069641,7.844102,5.742085,-9.824722,-6.987744,-9.126211,-3.761321,7.689250,-8.073030,2.995245,3.170020,-9.841192,-3.247287,-9.289121,-1.664565,-3.430868,2.077092,-1.005621,-9.342333,0.606169,1.827297,-5.888676,6.597326,1.352405,-9.316628,-7.233371,-1.731175,0.904453,6.605843,9.849970,4.795825,7.809005,2.351425,6.106123,-0.645326,0.078010,-1.166006,2.939376,1.091417,9.127719,3.836469,8.345725,-2.880962,-3.410086,-7.560982,-8.139314,7.719408,-8.417155,0.511892,5.508008,-4.876320,-0.457394,-8.383530,1.803404,-6.145861,8.235509,-1.246880,7.318772,-4.184935,-9.202637,6.126514,-4.121209,-0.931531,0.967624,-2.486686,2.290064,4.928978,4.541175,8.409698,7.004391,-8.805382,-0.897789,-5.651412,8.428410,3.411062,6.816206,-1.006426,-8.914572,3.508083,5.703461,-5.882504,-8.254839,-2.329412,1.431303,-8.714700,6.565486,6.371546,5.583372,7.870017,-7.052088,2.263088,5.037167,3.907255,-1.658498,2.188811,-4.678047,1.748521,-8.498392,4.614761,3.126334,-6.174771,-0.386590,-3.011874,0.969640,-1.246594,7.022635,-2.191210,-6.531377,-1.166445,-7.984010,-5.803061,3.999081,8.835647,4.369837,1.682542,7.370783,8.776018,8.561422,1.935051,0.051811,9.535006,7.111980,0.740815,6.094019,9.704854,1.892689,8.667923,8.553055,-2.566533,9.045741,6.123458,-6.431972,-0.340704,2.728362,-4.045556,8.454810,4.672305,5.726579,-4.269767,-2.629802,-6.310584,4.455078,-3.030297,7.510989,4.847109,-1.382639,9.956034,5.099042,-6.812446,7.289520,9.663724,-5.283838,-7.764091,6.118671,9.552656,-0.034426,-5.313557,0.616925,-4.733906,7.721871,6.000438,-1.464265,-6.888727,-8.260460,-5.595040,-5.109419,-4.755415,-6.218947,-0.420231,-5.237248,6.483406,-1.989464,-4.240552,-9.317225,-5.440847,1.137712,5.402084,-9.798489,3.915446,5.175779,-0.652297,-1.545279,-3.060013,5.720271,-5.335308,-6.873910,-7.611254,6.858521,-3.609409,0.706055,-4.295339,-8.531707,9.704061,2.231591,0.256328,-2.779608,-7.423738,9.280773,-9.102304,-7.810737,-1.661426,-1.822846,3.976943,0.508563,-0.300778,-7.727419,8.993013,-5.542591,3.830974,-3.066338,-5.764558,-4.029357,4.119621,-3.135646,7.758725,-8.129267,6.346775,-8.414169,7.590048,8.793488,3.787956,-9.251159,-9.218078,6.360815,-7.485123,3.007268,-1.279957,-6.817012,5.179913,5.155406,9.891594,-0.984183,6.638664,6.351667,-7.186345,-5.272867,-6.219727,4.593500,3.753946,-0.806728,-4.739732,3.190804,2.397971,-7.298141,-8.504861,6.797853,4.985507,-0.443663,1.820742,1.008003,-4.910174,5.625733,-7.435110,-3.403495,3.718523,-9.929940,-4.620175,-8.922098,4.553624,-1.985967,1.170914,9.525800,0.188467,2.615584,5.145365,-7.005046,-9.649019,-4.952225,-5.416349,-5.137280,0.263571,3.797273,-4.508324,5.492414,-0.807956,5.387322,-1.031628,0.400559,3.482717,-6.292179,9.637294,-5.119287,-2.932428,8.570079,8.477545,-5.144902,-3.058436,-1.659997,6.373288,-5.073815,4.501574,3.699106,-7.733346,1.908078,2.821637,-3.946622,1.899177,-5.195288,0.175740,-8.913893,-7.180011,0.989186,9.608734,3.903513,1.461243,-7.628201,-0.617230,-8.263004,-0.057374,-3.697293,4.605081,9.707207,2.296050,-0.301379,9.482508,-4.823235,1.950414,-4.101174,3.754496,-5.104107,9.988191,-6.096613,-4.216411,-4.827344,-0.432587,7.198900,6.754815,-0.604562,-1.357348,8.708461,-8.806513,0.852035,8.197391,-8.550921,-2.493035,7.344508,0.081921,3.111421,2.792125,5.944754,-7.604013,5.772109,9.508593,-3.287463,2.666651,6.933118,5.220822,8.906802,-4.107531,-1.268758,-9.506860,-2.976780,9.404407,-8.767136,4.067617,-3.128844,-5.617942,3.333257,-3.677533,9.324495,6.224669,9.143720,-1.935731,3.343498,-6.376773,5.465124,9.914283,-6.783184,9.433695,3.195931,-1.553681,-6.051722,-9.209273,-5.943379,8.953578,-6.515403,-5.486942,-7.091424,-8.922409,0.180265,7.548550,-4.649917,-9.687798,9.339196,4.467689,-3.038564,-6.903439,-9.425481,-2.443336,3.954383,-4.081018,-9.926666,0.639013,5.183724,-3.868754,-8.523559,4.740131,0.664469,-2.244805,1.232731,9.240130,2.213067,-5.224252,-6.556090,0.095266,9.537103,6.354612,-8.576636,-1.766750,2.423654,8.437720,-7.665003,-2.480648,-8.008306,-1.950139,-0.139713,-0.961277,4.783601,4.400692,0.939682,-6.519686,-6.759711,9.249719,-7.626859,5.307627,-3.482003,-8.342695,7.851275,-5.799565,7.374530,-8.797171,9.001036,2.535418,1.190391,-0.768823,8.752235,7.070049,7.222707,8.642705,-8.561754,5.354451,9.412581,4.879334,-4.533688,-8.858905,-8.921492,7.755380,5.934508,8.064411,6.938530,-0.892543,-9.861628,-9.092307,-4.284486,7.117004,-5.960243,5.725588,-6.420452,4.283261,9.825368,-0.800690,-3.057366,1.848455,8.417508,-5.249781,-4.973521,8.145187,8.630904,-5.511385,6.668398,-2.053630,-5.927017,0.385294,0.966701,9.980989,5.307104,-2.721100,8.329251,6.840210,-0.918934,9.881083,-3.713764,1.371200,5.599172,9.399259,-2.081184,-6.080295,-0.992242,5.620236,-2.992093,-4.934883,9.464706,0.213223,-3.842904,8.237985,6.190114,1.937511,6.657023,8.595552,2.450693,-2.856261,-1.753393,-4.374086,-8.694282,-3.860964,9.547629,-6.395270,-1.106939,7.704963,8.400825,8.220133,-9.288654,-0.806230,-4.528409,-2.174703,3.191946,1.576113,9.880716,-9.130804,8.817184,3.160371,5.203651,7.479774,5.843951,-9.236597,5.138828,2.789880,-1.347271,-1.623797,6.699939,-2.651236,3.439541,0.382316,-9.031270,-0.629033,-8.808760,-8.227635,-9.162091,5.776327,-7.241881,-5.963158,-7.475722,6.803098,6.122685,6.280088,-4.369790,1.300040,4.784987,5.583333,-7.132288,8.987722,1.744028,-1.112419,-5.170358,1.563906,6.490150,-0.517679,-0.748148,5.360469,0.807358,-8.033247,-0.277072,4.742904,-5.161127,4.773895,6.046161,-1.266504,-5.435920,-7.428002,-3.416411,-9.063561,2.947017,7.577096,-2.539657,5.148916,0.103611,-7.752288,-2.452892,2.180117,-4.828789,8.419907,-8.881850,-8.039146,9.014863,1.973730,-9.545446,5.843749,-9.768557,1.927853,3.005175,6.591595,0.528362,6.419622,5.891059,-8.610974,6.547241,3.096504,4.607793,4.334384,-7.734030,9.643824,-9.626780,-0.988495,4.665022,4.139758,4.205832,-5.912078,-4.343015,-1.379596,-7.263724,0.517672,-4.760978,2.329886,-1.412624,-5.071293,3.784783,-6.180054,0.776983,8.230160,-7.357967,6.926031,1.364374,-1.935120,4.507324,7.605475,-5.286203,-7.458515,-4.691204,-6.275291,-7.019468,2.630052,-2.719875,9.684648,4.285717,3.765846,7.445105,6.494554,-7.752004,2.126741,-7.964568,7.835670,0.689959,2.586555,-3.352971,4.671175,9.881032,-4.965620,-6.041517,9.980359,-6.384623,3.641455,3.647595,-0.735160,9.185567,-3.769642,7.157388,-0.686728,4.104984,-1.528027,2.178841,-6.237086,-8.769299,7.387369,-9.014571,-2.524760,2.571208,-7.026049,-7.205390,-2.011820,-4.580563,7.412271,-5.404303,9.607025,-6.875213,5.803270,5.294704,-6.577959,0.532610,-2.605276,-1.924955,-1.371506,-2.464341,-8.599744,-1.393695,-0.316517,8.280659,-8.559038,8.407576,5.033581,6.415067,-0.782517,-7.409615,-9.207595,-3.636708,0.134141,-5.850307,-0.598253,3.490062,3.396849,3.466231,-0.846012,-9.438335,-3.657727,-4.488472,9.422439,9.552159,-1.026748,-8.976633,7.652674], dtype = "float32")#candidate|6114|(2352,)|const|float32
call_6111 = relay.TupleGetItem(func_1698_call(relay.reshape(var_6112.astype('int64'), []), relay.reshape(var_6113.astype('int64'), [13, 4, 1]), relay.reshape(const_6114.astype('float32'), [84, 28]), ), 0)
call_6115 = relay.TupleGetItem(func_1702_call(relay.reshape(var_6112.astype('int64'), []), relay.reshape(var_6113.astype('int64'), [13, 4, 1]), relay.reshape(const_6114.astype('float32'), [84, 28]), ), 0)
func_2775_call = mod.get_global_var('func_2775')
func_2778_call = mutated_mod.get_global_var('func_2778')
const_6118 = relay.const([[9.565013,-0.609062,-5.209192,3.008871,-8.184995,8.701320,6.055217,0.509089,-0.306509,1.758974,6.554210,-4.867339,9.233546,-8.918706,4.426515,-6.355465,-1.860835,6.206435,-7.062812,9.617425,8.682427,-6.797250,5.129872,9.129333,-3.546474,8.713885,9.233807,-6.685490,6.998828,1.065228,-4.726181,8.967136,-5.203239,3.916686,4.387548,4.397421,2.415449,-2.737705,6.367117,-8.050410,-8.844948,-0.252719,7.576356,-7.095208],[3.733673,6.674575,-6.849619,1.488811,-1.231575,1.901129,3.046991,-3.388139,-1.219256,-3.434709,-7.987979,-8.475450,-8.782847,5.429755,1.406289,-8.831459,2.958655,-0.871725,-1.504799,-6.325541,-2.113078,6.153589,1.427140,-4.283343,-0.642949,1.941745,0.151517,6.500767,-4.245349,9.842551,1.292095,1.195675,0.478582,-6.216952,1.060052,-7.790137,-6.312462,5.438564,-0.871224,0.745188,-2.793628,0.031705,-9.714813,5.274584],[2.741496,-4.338569,-6.185114,8.821352,0.859466,-0.289833,1.019044,-8.998283,-4.525282,7.119163,9.792244,2.342024,4.639643,6.730918,5.484770,9.850140,5.415466,1.690611,1.437505,-5.966376,-6.374926,3.238419,4.383968,2.964390,6.816920,-5.887400,-6.508733,3.984861,5.270262,7.821774,1.105277,0.945683,0.725134,0.654056,-6.249522,9.888579,-6.777307,-6.565090,2.615859,4.778601,-5.237052,8.584674,4.484053,-8.205232],[-1.552243,4.772242,-3.704692,-2.080792,-2.726181,-0.155052,6.832542,5.933893,-9.563696,-3.365904,-1.814878,4.206265,2.231462,6.658014,2.845807,1.357370,5.309767,7.629677,-4.358312,3.886407,4.878662,0.547342,-8.659497,-1.070515,-0.087770,-2.786943,-5.823361,8.894820,-1.335605,-7.412814,-5.524116,1.383350,8.645541,-7.505331,6.974006,-4.547789,9.088344,8.642541,-4.067823,6.199456,-8.472294,2.276701,9.431481,5.219325],[5.703718,4.690625,5.162372,-0.496726,9.414494,-3.842674,-0.325846,-7.255251,-1.574074,4.616270,8.334114,5.960349,-7.722101,4.069387,2.358769,-4.912324,-3.764417,5.309451,-7.749803,-0.103335,-7.867847,-0.632948,0.987052,-6.591954,6.793600,8.355724,-5.637902,-2.126900,4.325626,-1.914747,-4.329560,-8.986597,-7.403616,5.772329,3.384467,1.770035,-2.703435,-9.311102,-9.767789,-3.515468,4.263975,-8.731846,-7.833932,-5.596920],[-4.350123,1.551103,7.611109,-9.564175,3.090436,7.533499,3.919633,-7.648377,-1.790415,-5.906857,6.481276,-8.985763,-1.423392,5.522307,-1.358862,-6.053460,-2.749194,6.249536,7.259692,-4.971362,0.051961,4.192424,-9.308932,2.454095,4.597218,8.187753,-4.198686,9.591206,-2.838188,3.629118,-5.894083,-2.830834,6.296275,3.366877,9.940797,8.341264,8.489677,2.575453,-1.845160,-4.583457,-2.149654,4.418851,-4.411941,5.742039]], dtype = "float64")#candidate|6118|(6, 44)|const|float64
const_6119 = relay.const([-1,1,-1,-10,-2,2,-2,1,-9,9,4,-7,3,-2,-3,2,-5,-8,1,-5,8,10,8,-5,-2,8,-4,-4,10,1,-8,7,-8,-10,-4,4,4,5,-9,-10,7,-7,-3,-8,-7,-6,6,8,10,-4,5,-10,4,-1,-4,-4,-7,1,-1,2,-10,5,-2,9,-1,8,-1,-4,-2,9,-6,-8,-1,-2,10,10,-10,7,8,-4,10,-6,10,7,-5,-1,-7,-3,-10,3,-8,-3,8,2,9,-6,10,10,-3,4,-3,-8,-6,3,7,7,8,8,1,3,-8,8,2,9,-5,3,2,10,-4,3,8,-9,-1,2,8,3,-6,-5,-9,4,-1,-3,10,-8,-8,-8,-4,-3,-3,-8,-10,-7,2,-5,-8,6,-7,10,-2,-2,3,7,6,-2,-4,-9,5,-1,8,7,-6,-5,2,10,6,-6,-3,-6,-2,-1,-1,3,8,3,1,-2,-5,-1,2,2,-7,-7,-1,1,-1,2,-3,-8,-10,-7,-4,-9,7,7,1,-9,8,-1,7,2,4,-10,2,8,-2,4,-5,5,5,3,-1,-6,-8,-8,9,-3,-8,10,2,2,4,-9,1,4,10,-3,10,10,4,-3,9,-6,10,5,-5,-7,4,-9,-4,10,10,4,3,-10,-3,-10,10,9,1,3,4,-4,-9,-3,7,6,-9,9,-6,8,3,-4,-3,2,-9,-7,-8,1,-5,-10,-2,-8,-9,-2,8,-8,8,-2,5,5,3,-8,3,6,-4,10,5,6,7,-10,-9,-3,-10,-10,-3,10,-6,-6,-6,9,-1,7,-7,1,-2,-6,-1,10,6,-6,-4,6,5,-9,4,-4,-6,-2,-5,-4,4,-9,-1,-8,-8,9,-3,4,-4,-2,10,5,6,-9,-10,9,5,1,-9,-6,-3,1,-7,-5,-7,-1,-2,4,-4,2,-8,-10,-1,8,9,-8,-8,-2,3,5,-6,-10,-5,-8,-9,-6,1,7,-6,3,10,2,10,2,3,5,8,-8,10,-5,-8,4,-5,-3,-10,8,6,10,4,-1,-9,-6,2,1,2,2,5,9,-9,-2,-9,-10,2,10,2,-5,-10,10,-7,-3,-5,8,3,1,-2,-2,5,5,-2,3,8,4,1,9,5,6,9,3,3,-3,-6,7,8,9,9,-3,2,-7,3,8,10,-9,7,-2,-5,5,-1,-3,4,-9,3,-4,-1,-5,-6,2,4,6,3,-2,-2,-10,-1,2,-2,-2,2,8,-4,-6,6,8,-9,-3,-2,-3,-4,-7,-3,-2,-9,9,-8,-5,-2,5,-10,9,-9,4,-7,-6,-7,8,4,-6,-4,-6,-4,9,3,5,8,3,-4,7,-3,4,9,-3,-4,8,3,-2,-7,2,-6,-3,1,-10,-4,-8,-3,8,-6,7,-9,-8,10,-9,3,-7,10,-3,-6,6,1,7,-8,-6,-8,-2,7,-9,-2,-6,-10,3,-2,1,-9,-10,-10,-6,3,-3,-4,-8,-5,-10,5,-1,8,7,10,10,4,2,6,-4,-10,10,2,-7,-4,3,2,6,-7,1,-8,7,-2,6,8,9,-7,-4,-8,5,9,-3,3,2,-10,-9,8,2,6,-10,-8,-2,1,-3,8,-2,9,9,-7,-1,-8,7,6,-5,-7,-7,-3,9,7,-4,-1,4,-4,-1,-8,7,-5,-9,4,-5,9,6,-3,8,9,6,8,10,-7,-2,5,10,-6,1,4,-2,10,-7,-5,2,4,-3,-2,-6,-6,-3,-10,9,5,-9,-7,-2,-1,1,-1,-1,3,-1,1,-3,6,5,2,-3,7,-3,-2,-3,-3,10,-9,3,7,6,-1,-4,-8,2,-5,4,4,-8,6,9,8,-5,10,-9,-4,-6,6,10,1,4,7,-7,9,7,-9,-7,6,1,2,5,-7,-10,1,8,2,-7,2,-9,-1,8,-3,-8,7,-4,-1,6,10,-10,-6,4,-2,8,-6,7,-5,9,10,-6,-7,9,-9,-6,10,1,-6,-7,-5,2,-4,-1,6,9,-7,4,-7,-4,9,-7,-7,7,5,-10,9,-2,-3,-5,4,6,1,9,-4,-8,2,1,6,-3,-2,-1,-8,-7,7,9,-8,-5,4,8,-7,-10,4,10,-1,-8,7,7,4,6,6,5,8,-2,3,2,-8,9,-4,-9,2,-10,-1,-6,-9,-6,-6,8,10,10,-9,1,3,-9,-1,-3,-10,-3,10,-5,10,7,-4,-3,4,-8,-6,-2,1,7,2,4,-5,-2,-6,7,10,-3,-8,9,-2,6,-7,8,-10,9,-6,-3,-10,9,1,4,-1,-4,-5,-10,-1,6,3,-6,-8,-4,-10,5,-9,5,-2,1,-6,-2,-9,10,9,8,10,6,8,2,6,-7,-4,4,3,-9,2,2,4,-3,-9,-6,2,-7,-3,-8,6,3,-8,-6,-4,-10,6,10,-5,2,2,3,1,6,-8,-10,-10,6,2,8,9,-2,9,3,-5,-8,-5,4,-10,10,5,-4,-5,-10,6,-2,-6,-10,-8,-1,-9,3,9,-2,6,-6,-3,5,-5,-6,-4,8,5,-7,2,-10,-6,-7,-8,3,-2,-6,-3,5,-5,1,-1,9,6,1,-3,-10,-1,5,7,-7,9,6,-4,2,-3,-9,1,-10,-6,-4,1,-10,-1,6,-5,9,-8,-5,-5,4,-9,10,-2,8,3,-9,-8,-9,-5,8,-7,1,-9,8,5,-2,6,8,-6,6,-8,4,-3,6,-9,6,-1,-3,-5,-6,4,9,-2,8,1,7,-8,-7,5,6,8,-4,-1,1,2,8,-7,-6,4,-7,7,-6,5,5,-9,-8,3,7,-10,1,10,-8,8,6,-9,9,-8,-2,-10,-5,-7,5,-4,5,-5,-6,8,1], dtype = "uint32")#candidate|6119|(1078,)|const|uint32
call_6117 = relay.TupleGetItem(func_2775_call(relay.reshape(const_6118.astype('float64'), [2, 11, 12]), relay.reshape(const_6119.astype('uint32'), [1078,]), ), 5)
call_6120 = relay.TupleGetItem(func_2778_call(relay.reshape(const_6118.astype('float64'), [2, 11, 12]), relay.reshape(const_6119.astype('uint32'), [1078,]), ), 5)
var_6121 = relay.var("var_6121", dtype = "float32", shape = (2, 6, 6))#candidate|6121|(2, 6, 6)|var|float32
bop_6122 = relay.equal(uop_6105.astype('bool'), relay.reshape(var_6121.astype('bool'), relay.shape_of(uop_6105))) # shape=(2, 6, 6)
uop_6127 = relay.sin(uop_6105.astype('float32')) # shape=(2, 6, 6)
output = relay.Tuple([call_6111,var_6112,var_6113,const_6114,call_6117,const_6118,const_6119,bop_6122,uop_6127,])
output2 = relay.Tuple([call_6115,var_6112,var_6113,const_6114,call_6120,const_6118,const_6119,bop_6122,uop_6127,])
func_6139 = relay.Function([var_6104,var_6112,var_6113,var_6121,], output)
mod['func_6139'] = func_6139
mod = relay.transform.InferType()(mod)
var_6140 = relay.var("var_6140", dtype = "float32", shape = (2, 6, 6))#candidate|6140|(2, 6, 6)|var|float32
var_6141 = relay.var("var_6141", dtype = "int64", shape = ())#candidate|6141|()|var|int64
var_6142 = relay.var("var_6142", dtype = "int64", shape = (52,))#candidate|6142|(52,)|var|int64
var_6143 = relay.var("var_6143", dtype = "float32", shape = (2, 6, 6))#candidate|6143|(2, 6, 6)|var|float32
output = func_6139(var_6140,var_6141,var_6142,var_6143,)
func_6144 = relay.Function([var_6140,var_6141,var_6142,var_6143,], output)
mutated_mod['func_6144'] = func_6144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6870 = relay.var("var_6870", dtype = "float32", shape = ())#candidate|6870|()|var|float32
var_6871 = relay.var("var_6871", dtype = "float32", shape = (7, 10, 4))#candidate|6871|(7, 10, 4)|var|float32
bop_6872 = relay.floor_mod(var_6870.astype('float32'), var_6871.astype('float32')) # shape=(7, 10, 4)
output = bop_6872
output2 = bop_6872
func_6881 = relay.Function([var_6870,var_6871,], output)
mod['func_6881'] = func_6881
mod = relay.transform.InferType()(mod)
mutated_mod['func_6881'] = func_6881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6881_call = mutated_mod.get_global_var('func_6881')
var_6883 = relay.var("var_6883", dtype = "float32", shape = ())#candidate|6883|()|var|float32
var_6884 = relay.var("var_6884", dtype = "float32", shape = (7, 10, 4))#candidate|6884|(7, 10, 4)|var|float32
call_6882 = func_6881_call(var_6883,var_6884,)
output = call_6882
func_6885 = relay.Function([var_6883,var_6884,], output)
mutated_mod['func_6885'] = func_6885
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7034 = relay.const([[[-4,7,-2,-8,-9,-8,3,-5,-8],[6,10,-9,5,8,-7,2,-1,-9],[1,7,-4,-9,9,-1,-2,-2,-8]],[[5,-9,3,-7,-7,-5,3,-4,6],[-7,4,-8,-3,-10,5,6,-5,-3],[10,5,-8,4,6,4,-3,-4,-7]],[[1,-7,4,3,9,8,-6,2,4],[2,3,-5,10,2,-6,-8,-8,10],[-6,6,10,-9,-10,10,5,3,9]],[[-7,-7,-3,-7,-2,8,8,6,1],[-8,2,3,6,-3,-6,-9,3,3],[1,-1,-6,6,2,10,7,4,-7]],[[-3,-5,-4,-1,7,10,-2,-9,-3],[-1,-10,10,6,7,-9,9,7,-8],[-6,-3,5,-2,-4,9,7,-8,-2]]], dtype = "int64")#candidate|7034|(5, 3, 9)|const|int64
const_7035 = relay.const([[[-10,-1,-6,-10,-5,-6,1,-9,3],[-5,-8,-8,-2,-8,10,4,-6,10],[-2,-10,5,-1,4,-9,-5,6,1]],[[2,3,-2,7,-4,10,4,-4,8],[2,6,-1,-3,-7,-2,6,-2,6],[-3,-9,-4,3,-1,-4,-6,10,2]],[[-5,10,5,2,7,-10,9,4,10],[-9,9,10,10,-10,8,-2,7,8],[-5,1,6,5,-5,-7,8,-8,9]],[[10,3,-10,2,-5,5,8,4,9],[3,9,-2,4,4,9,-9,-1,-1],[-5,-4,-3,-4,8,-2,-9,-3,-4]],[[-5,-7,10,10,-8,-4,-5,-3,1],[-7,-9,-4,4,-8,2,-1,10,-5],[5,10,8,2,6,4,1,4,-8]]], dtype = "int64")#candidate|7035|(5, 3, 9)|const|int64
bop_7036 = relay.bitwise_xor(const_7034.astype('int64'), relay.reshape(const_7035.astype('int64'), relay.shape_of(const_7034))) # shape=(5, 3, 9)
output = relay.Tuple([bop_7036,])
output2 = relay.Tuple([bop_7036,])
func_7042 = relay.Function([], output)
mod['func_7042'] = func_7042
mod = relay.transform.InferType()(mod)
mutated_mod['func_7042'] = func_7042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mutated_mod.get_global_var('func_7042')
call_7043 = func_7042_call()
output = call_7043
func_7044 = relay.Function([], output)
mutated_mod['func_7044'] = func_7044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_7056 = relay.TupleGetItem(func_7042_call(), 0)
call_7057 = relay.TupleGetItem(func_7044_call(), 0)
output = call_7056
output2 = call_7057
func_7088 = relay.Function([], output)
mod['func_7088'] = func_7088
mod = relay.transform.InferType()(mod)
output = func_7088()
func_7089 = relay.Function([], output)
mutated_mod['func_7089'] = func_7089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7088_call = mod.get_global_var('func_7088')
func_7089_call = mutated_mod.get_global_var('func_7089')
call_7169 = func_7088_call()
call_7170 = func_7088_call()
output = relay.Tuple([call_7169,])
output2 = relay.Tuple([call_7170,])
func_7191 = relay.Function([], output)
mod['func_7191'] = func_7191
mod = relay.transform.InferType()(mod)
output = func_7191()
func_7192 = relay.Function([], output)
mutated_mod['func_7192'] = func_7192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7191_call = mod.get_global_var('func_7191')
func_7192_call = mutated_mod.get_global_var('func_7192')
call_7208 = relay.TupleGetItem(func_7191_call(), 0)
call_7209 = relay.TupleGetItem(func_7192_call(), 0)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_7256 = relay.TupleGetItem(func_7042_call(), 0)
call_7257 = relay.TupleGetItem(func_7044_call(), 0)
func_4732_call = mod.get_global_var('func_4732')
func_4735_call = mutated_mod.get_global_var('func_4735')
const_7275 = relay.const([-8,10,2,4,-7,-8,-2,3,5,-7,-3,7,7,1,10,-7,-4,6,6,-9,4,10,-8,-4,-4,-9,5,-10,-3,6,-10,4,1,-1,-7,-2,8,8,2,-8,7,5,3,-4,-10,-10,5,-4,1,3,-6,10,6,-9,-2,-7,6,8,-9,6,3,8,9,4,7,-9,-4,-8,-6,9,6,4,-5,-9,-5,2,10,-5,3,-8,-9,-5,3,1,10,5,3,-8,-2,-5,-2,6,-8,-1,-10,-5,-6,-2,-4,8,5,2,5,-8,-6,5,-1,-10,-1,4,-9,-10,9,-4,5,9,-5,7,10,8,-10,2,3,-2,2,-6,5,6,8,-7,9,-2,-6,6,-8,-1,-9,-2,4,7,-2,-9,-8,10,-2,-8,2,7,1,-5,-10,-9,-9,1,7,-1,2,-5,-4,4,-2,9,2,-4,-1,-4,-5,-2,-4,-10,-3,-7,5,-5,6,7,10,2,3,-7,-4,7,-3,-6,4,-5,10,-3,-5,4,-6,9,-6,-9,6,-5,-4,2,1,-4,7,-5,-5,-2,7,-4,-8,10,-4,4,5,-10,2,-8,-1,10,-4,-7,-3,9,-6,2,8,7,-1,3,10,6,-7,-7,-7,-8,-1,-9,-3,-2,-3,-10,-8,-2,10,6,-1,4,-9,8,-7,8,-1,-2,-5,-3,9,-1,4,8,1,6,6,-9,10,-2,4,-6,-7,1,-3,4,10,10], dtype = "int64")#candidate|7275|(270,)|const|int64
const_7276 = relay.const([-2.405028,8.466422,-2.067666,2.362045,8.934510,9.830582,7.227182,0.535238,7.233482,-2.604458,6.767980,-3.869111,7.199074,-7.025745,5.490574,-1.847348,-3.923937,7.659251,1.765695,-0.188707,7.571185,8.871582,8.651209,7.251165,3.629316,-6.985752,1.581296,4.375377,0.685384,7.112557,5.910667,-8.016619,0.123649,-2.254312,-5.552311,9.774889,2.447732,-7.732590,8.757718,4.617253,5.816875,-9.347904,-3.269535,0.326476,5.578421,-5.890780,-0.736782,-8.539496,-4.821538,4.428980,-7.427974,9.065882,9.470901,-2.390175,2.410341,-0.921251,-2.123523,3.214429,-2.356196,-7.332288,5.216660,-6.032145,1.923341,7.817259,-9.505361,-2.358943], dtype = "float64")#candidate|7276|(66,)|const|float64
call_7274 = relay.TupleGetItem(func_4732_call(relay.reshape(const_7275.astype('int64'), [3, 10, 9]), relay.reshape(const_7276.astype('float64'), [11, 6]), ), 1)
call_7277 = relay.TupleGetItem(func_4735_call(relay.reshape(const_7275.astype('int64'), [3, 10, 9]), relay.reshape(const_7276.astype('float64'), [11, 6]), ), 1)
output = relay.Tuple([call_7208,call_7256,call_7274,const_7275,const_7276,])
output2 = relay.Tuple([call_7209,call_7257,call_7277,const_7275,const_7276,])
func_7278 = relay.Function([], output)
mod['func_7278'] = func_7278
mod = relay.transform.InferType()(mod)
output = func_7278()
func_7279 = relay.Function([], output)
mutated_mod['func_7279'] = func_7279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_7280 = relay.TupleGetItem(func_7042_call(), 0)
call_7281 = relay.TupleGetItem(func_7044_call(), 0)
func_1335_call = mod.get_global_var('func_1335')
func_1340_call = mutated_mod.get_global_var('func_1340')
var_7296 = relay.var("var_7296", dtype = "uint32", shape = (77,))#candidate|7296|(77,)|var|uint32
var_7297 = relay.var("var_7297", dtype = "uint32", shape = (1078,))#candidate|7297|(1078,)|var|uint32
var_7298 = relay.var("var_7298", dtype = "float32", shape = (588, 4))#candidate|7298|(588, 4)|var|float32
call_7295 = relay.TupleGetItem(func_1335_call(relay.reshape(var_7296.astype('uint32'), [11, 7]), relay.reshape(var_7297.astype('uint32'), [1078, 1]), relay.reshape(var_7298.astype('float32'), [4, 588]), ), 2)
call_7299 = relay.TupleGetItem(func_1340_call(relay.reshape(var_7296.astype('uint32'), [11, 7]), relay.reshape(var_7297.astype('uint32'), [1078, 1]), relay.reshape(var_7298.astype('float32'), [4, 588]), ), 2)
uop_7300 = relay.atan(var_7297.astype('float32')) # shape=(1078,)
func_7191_call = mod.get_global_var('func_7191')
func_7192_call = mutated_mod.get_global_var('func_7192')
call_7345 = relay.TupleGetItem(func_7191_call(), 0)
call_7346 = relay.TupleGetItem(func_7192_call(), 0)
output = relay.Tuple([call_7280,call_7295,var_7296,var_7298,uop_7300,call_7345,])
output2 = relay.Tuple([call_7281,call_7299,var_7296,var_7298,uop_7300,call_7346,])
func_7350 = relay.Function([var_7296,var_7297,var_7298,], output)
mod['func_7350'] = func_7350
mod = relay.transform.InferType()(mod)
var_7351 = relay.var("var_7351", dtype = "uint32", shape = (77,))#candidate|7351|(77,)|var|uint32
var_7352 = relay.var("var_7352", dtype = "uint32", shape = (1078,))#candidate|7352|(1078,)|var|uint32
var_7353 = relay.var("var_7353", dtype = "float32", shape = (588, 4))#candidate|7353|(588, 4)|var|float32
output = func_7350(var_7351,var_7352,var_7353,)
func_7354 = relay.Function([var_7351,var_7352,var_7353,], output)
mutated_mod['func_7354'] = func_7354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7088_call = mod.get_global_var('func_7088')
func_7089_call = mutated_mod.get_global_var('func_7089')
call_7394 = func_7088_call()
call_7395 = func_7088_call()
uop_7407 = relay.exp(call_7394.astype('float64')) # shape=(5, 3, 9)
uop_7409 = relay.exp(call_7395.astype('float64')) # shape=(5, 3, 9)
func_239_call = mod.get_global_var('func_239')
func_243_call = mutated_mod.get_global_var('func_243')
var_7413 = relay.var("var_7413", dtype = "uint32", shape = (77, 1))#candidate|7413|(77, 1)|var|uint32
var_7414 = relay.var("var_7414", dtype = "uint32", shape = (7, 154))#candidate|7414|(7, 154)|var|uint32
call_7412 = relay.TupleGetItem(func_239_call(relay.reshape(var_7413.astype('uint32'), [1, 7, 11]), relay.reshape(var_7414.astype('uint32'), [14, 7, 11]), ), 0)
call_7415 = relay.TupleGetItem(func_243_call(relay.reshape(var_7413.astype('uint32'), [1, 7, 11]), relay.reshape(var_7414.astype('uint32'), [14, 7, 11]), ), 0)
func_1335_call = mod.get_global_var('func_1335')
func_1340_call = mutated_mod.get_global_var('func_1340')
const_7418 = relay.const([5.735173,5.678315,-9.154395,8.120028,-2.501001,3.356501,-3.185678,-8.549816,-6.925783,2.791118,-5.016048,9.118789,-9.193137,4.441143,-2.591172,8.007524,-0.770981,9.681907,8.249297,7.276892,9.715490,1.848025,4.235499,0.006768,-2.409684,6.203617,-1.877827,9.229807,-7.728189,-0.467111,8.940991,-2.469483,-1.041120,-3.944751,-9.357900,3.986302,-0.372107,-6.931593,2.793305,-5.112644,-1.002014,-3.615485,-7.773022,6.955450,-3.321963,5.703839,0.844810,8.107475,-5.374215,1.370367,2.787802,-2.655233,7.181369,5.237636,-2.294824,4.329625,0.142452,-1.945283,6.318364,-7.458162,0.521330,3.820501,-6.297775,6.627124,-5.477637,3.062399,4.433956,-5.274012,-0.043432,0.782261,9.038656,-0.174689,-0.541797,-6.452748,-2.640105,7.739214,-7.619401,1.246895,6.023139,0.926961,6.332668,9.700358,-4.120965,-6.437471,2.199737,-4.848725,-4.359205,0.962259,5.547126,-1.577642,5.880685,9.882250,6.243691,-8.073761,9.846493,-5.116893,-0.821294,-4.408927,2.244960,-7.052463,-5.152173,4.589588,7.555945,-4.939159,-9.998600,-9.748686,-8.498043,-9.765856,-1.177055,9.435264,-6.665150,3.972995,7.500264,-7.298548,-3.784930,-5.283475,4.479545,3.205881,-2.468650,6.339223,-8.790835,-7.769767,1.212817,-1.640634,3.007277,-8.812368,-3.401931,7.625424,4.959355,-7.770322,-4.217494,-9.367524,9.344096,-3.983608,9.278928,-6.178025,7.768746,4.348592,9.443616,4.076661,0.298189,2.559931,1.183525,3.836052,-1.039135,-9.498343,-9.151629,-5.788376,-0.506793,-5.158854,-1.681654,7.520380,4.753892,-8.620489,1.257006,-1.486573,5.855304,-3.820111,-6.780734,7.700326,1.311088,7.043135,4.128964,7.464250,-1.897332,3.737612,6.447092,-2.151256,5.996429,8.261470,-2.130708,3.154270,9.603357,-0.445430,-3.332493,-8.001650,3.349210,5.074698,5.146606,-7.773229,-3.202917,-7.498774,1.940764,8.004051,-0.901334,5.283174,-3.502090,-8.790952,-6.111012,6.756650,1.854962,-7.204797,9.667644,9.566592,7.755823,-0.454061,0.125019,5.915222,6.468397,-7.432657,0.258605,2.140774,-8.092073,-5.143048,-9.300155,6.981431,3.166560,4.893362,-1.066042,-9.826065,-9.998295,0.015641,2.152529,-5.580108,1.356986,-9.215938,-3.852623,-9.468574,-2.114987,6.756917,-0.238491,-9.641915,9.483352,-8.361936,-6.617674,7.379491,3.558114,-5.901256,6.418716,-4.249678,7.248104,2.375451,-3.162450,7.758228,-9.414956,9.616596,2.049025,7.036199,7.706985,-6.921916,-8.644369,6.099625,3.957598,-4.405385,-8.259301,0.403778,-7.744016,-6.467888,6.139520,2.238890,-8.007465,-3.209644,-1.388614,-1.306154,-2.335452,4.934924,-1.556447,-3.287763,-6.750227,-6.581540,0.196043,6.987258,8.874061,-4.756977,6.328540,-4.029269,1.669341,1.925376,-0.423391,5.265140,3.248525,9.788774,4.246956,7.722319,2.823880,2.528815,3.991266,-4.990171,-7.937844,1.898500,-4.305808,8.772451,6.631819,1.802243,1.582145,-0.875913,4.345954,-7.273189,0.161181,-5.537215,-0.060966,-6.996739,-2.167880,-2.871158,6.724717,-2.845144,4.110038,6.182795,2.790103,8.414535,-2.535357,2.522346,4.103410,-1.814916,9.688381,6.505038,-8.298857,1.481610,-1.181800,3.654084,-3.694103,9.804188,-7.296376,-9.011886,7.228304,-8.254638,6.413443,5.759330,8.906768,5.778502,4.739962,-5.559451,-5.385857,-7.074318,2.206783,8.406736,-4.825999,-5.735601,7.941380,-2.620389,-5.945992,-8.378720,-4.263395,-4.882931,-1.625024,-1.704740,1.250147,3.166681,-2.790997,-3.497245,-7.401309,0.631785,0.042415,7.969243,-4.772712,2.741191,-3.617446,-7.633511,-9.558832,-7.733843,8.187401,-0.744827,-0.500673,-6.896850,2.062827,-1.410889,-9.166677,-0.629362,3.818376,0.360843,9.477841,-6.649654,-8.353425,-7.702910,-1.054046,7.851629,2.977079,-4.147567,-1.564206,7.602147,3.217318,9.375880,5.555744,5.220367,0.009967,5.466665,-2.762125,-3.364046,-9.212427,0.648126,5.409450,-6.541354,-8.317546,-0.641881,-9.496387,-8.331664,-5.187712,2.856526,-3.094818,-6.343547,8.243643,-8.646875,-9.548529,2.823523,-8.513145,8.059861,6.743443,-7.128870,-7.463565,-2.088319,-1.870680,-2.105610,-5.706350,4.064893,7.959448,-5.267042,6.430464,-2.495812,1.683008,-7.030152,-0.242043,-8.069226,-9.404332,5.910566,0.549043,8.295938,-3.275850,-2.130855,6.523036,3.551934,-1.629423,-9.453575,9.892212,8.711326,-4.762283,-6.024931,1.738905,-0.297615,4.020206,-8.357174,-9.020777,9.006994,2.802277,8.550840,9.404469,2.117786,2.907104,3.878407,-2.679165,2.312930,-3.976375,7.748222,-1.198085,0.775276,6.758057,9.488603,1.449356,1.355995,-1.477355,-8.826568,7.139963,6.280514,4.655568,2.644619,0.027365,-9.778474,-7.781781,8.232999,9.987521,1.768276,-4.776776,-6.121054,9.445656,7.237815,5.578390,4.513125,4.919330,3.146121,0.786811,8.903109,0.844853,-0.215026,0.823487,5.244914,8.048605,-2.409091,5.010374,8.666182,-2.643081,-3.603617,-6.574119,-0.848894,9.792464,-6.141681,3.518995,5.863904,0.752627,-7.109725,-2.071452,-2.182167,-5.569350,1.004331,7.720971,-6.119761,0.643351,4.968928,-8.551507,-4.100983,6.832524,-3.363737,-5.397894,-4.621729,-1.747568,-7.505904,-3.215340,-2.314366,3.485572,-2.637605,-9.723656,-4.505629,7.692608,-0.867032,-7.684947,9.826102,3.690652,-7.027631,-5.806598,-7.379666,1.926408,1.214072,4.389708,8.926194,0.884084,3.889290,-1.682691,-1.868264,-5.110219,-5.166967,2.410561,-7.019943,2.081885,-1.570335,1.361031,-1.751555,2.647046,-1.088633,8.634848,-0.959935,3.902417,5.295571,9.707677,-2.285704,-3.605474,-4.421707,-2.436506,-8.259397,1.590655,3.828756,7.887792,-0.923703,5.739898,8.429312,-6.534380,-8.883592,-9.849360,8.623731,0.060047,6.499420,-0.243603,3.574081,-1.510765,3.155076,-4.738499,3.970172,-7.841468,-9.667467,-6.395487,5.432594,9.215264,7.087892,4.529696,-0.858137,-0.299015,-7.052973,2.390608,4.578123,0.730020,-4.037717,-0.146957,-6.805591,5.804441,-4.167056,-0.364027,-4.984893,2.747800,6.937921,-6.044712,1.298480,7.273104,-5.447290,6.268813,8.154022,-7.127694,-1.229092,7.122965,5.085254,-3.272410,-9.201231,2.439933,-7.767206,-4.557202,0.822842,8.529934,9.645219,-5.360516,-0.611995,-3.382232,3.956361,2.194209,0.159757,-8.874976,4.543200,-7.911358,7.547600,-4.233757,6.196431,-4.184310,5.167785,1.979424,-3.032727,-1.038813,-8.565612,-9.786566,5.378164,8.970958,-8.580689,-7.581654,-8.273896,-8.206455,-7.252872,-5.963340,7.372649,9.076534,-1.279530,-9.987545,-9.201792,5.956780,0.637866,-9.230998,9.702273,7.427752,7.005430,3.512741,-7.663781,-7.400134,-0.223409,-9.304429,7.627058,8.687041,4.407539,-6.370255,-5.806613,-2.375488,-2.446774,8.401545,-7.912650,6.687289,-5.596934,-2.393966,-7.698922,0.015163,6.957096,4.560745,4.891358,-0.001168,-8.299716,5.688401,9.341338,-5.304038,-6.357542,8.669383,-1.106735,5.798910,-7.653460,7.923100,-9.564060,8.470804,0.724034,-8.525684,7.576298,6.066287,0.533586,9.685980,-1.888900,-6.779001,9.056133,4.865560,7.884811,-9.750793,-0.944362,-7.909602,-4.626828,-1.489849,-8.994097,8.347374,-2.514319,9.248099,3.671683,-4.732424,-3.271040,-7.398877,-9.088737,3.089461,-8.816988,7.479737,-2.156215,6.099546,-3.938430,-0.446397,-6.105944,-8.037837,-6.061667,8.038414,-3.384519,1.532899,-4.609466,-9.796657,0.237474,-2.394176,4.295498,6.761831,-6.242998,9.798130,-6.560410,0.842870,0.634972,3.379395,-7.506831,6.787511,-4.596177,0.908983,-6.116542,-3.844564,-1.426735,-4.120296,-8.598258,6.110432,-1.685468,0.582357,-0.899778,-6.337432,7.593589,9.043497,-2.351493,-2.759788,9.917101,7.393718,-7.697379,0.225664,8.432261,-3.418252,4.704056,-4.246165,-3.181836,9.573744,-4.251111,-0.488073,1.193351,1.602951,-2.290751,5.033933,-6.850257,-3.262635,-2.367025,1.282696,5.514529,9.851133,7.939275,-1.167442,-1.009443,-8.998287,5.434352,-7.201525,-4.418204,-8.715534,4.002432,-0.929942,8.139923,-6.812862,-9.176717,8.354803,-9.241743,3.261295,-2.761034,3.179772,6.474621,1.447999,0.100720,7.251806,-0.333907,-2.911947,8.854777,9.187903,3.703709,-6.492082,2.104625,7.563419,5.856004,5.486355,9.530788,-1.030385,-6.486659,9.563316,9.791206,1.124891,4.844764,1.553337,-0.587013,7.608319,4.931060,0.130969,8.310562,-6.119592,7.436852,-0.571209,-2.897621,4.517287,-7.472786,-7.715524,-2.908181,2.488757,-8.755007,-0.729377,0.712732,-2.729493,-9.297529,8.545331,8.573741,-8.355076,1.574034,2.325504,4.592424,-5.561922,0.616104,7.066382,-1.623852,2.901700,3.312744,5.998362,0.524892,4.661909,-0.803950,1.757069,-4.140619,-5.998489,-6.223400,-4.943341,9.379099,-7.336750,3.010550,-1.436055,-4.481435,-9.893409,2.225551,8.542165,-3.823936,-0.981782,2.961283,-3.009873,1.320088,-5.741346,-6.412170,0.632962,9.998894,-5.015407,6.131825,2.669137,5.607116,-6.362097,3.910447,2.986733,-9.100068,-7.716990,-7.016590,-6.730184,-5.665130,4.663333,5.188676,-7.469801,-1.481524,0.849265,9.827454,-9.521317,6.250608,2.619699,-3.739469,-0.758081,5.697039,-2.333038,9.143169,7.006055,7.821732,-9.208214,-3.602829,-9.779182,9.872231,-3.818949,-5.390562,0.393553,2.915482,-4.175109,-2.067070,5.377855,-7.352619,8.945305,-5.243470,5.755280,1.269266,-6.602584,-3.980969,7.893697,-3.799725,-3.365780,-3.798944,-6.563824,-6.132594,4.773200,9.587613,-9.604593,-1.386497,7.185269,6.756513,0.886465,-1.446185,-7.750074,-9.073551,4.797379,0.359109,7.915342,2.849255,-3.551918,-7.554006,-3.734136,-0.272263,8.271586,-3.177515,7.533397,8.308029,9.219522,-7.073477,-0.817136,6.726485,2.753862,0.499395,-5.601657,8.317929,0.817220,-8.679343,2.227687,-9.875010,2.963091,-3.943082,-6.842840,0.761114,1.779588,9.644119,-0.047802,4.051279,-1.724279,-0.788740,-5.816296,3.534669,-5.317418,2.077674,-1.474115,-4.752886,1.462828,-3.526477,1.367947,0.774935,4.770710,-8.919111,9.558046,2.585006,0.438722,-1.999870,3.715477,9.808098,0.786244,-6.745696,-5.451039,9.196287,6.754339,-0.087824,-8.211826,3.416485,-9.629718,4.003881,-7.084572,3.877434,4.797034,8.946112,0.368907,-0.778801,4.951983,-6.610078,3.823681,4.402389,1.447316,8.935024,7.159867,2.410482,7.358313,3.732805,-5.323003,8.066992,-0.872563,-2.489026,9.630234,-2.135544,8.923944,-3.527715,8.078773,4.297635,3.604558,-8.146104,-3.208985,8.834718,-0.942560,0.438671,9.274018,-0.556332,3.883960,-1.227647,5.123882,0.286606,9.076880,-4.782080,-5.914839,-7.650747,-4.465218,-8.001057,-7.940088,-3.315621,0.470588,7.087509,-5.297199,-1.604781,7.056903,-8.767894,-7.096177,5.171460,-7.750117,-1.596933,-5.439013,-4.477158,2.223117,6.531527,-9.427510,-6.972888,4.163517,5.504150,-9.628732,6.699182,-3.949331,-5.991321,1.370377,-0.284954,6.060440,-5.251264,4.723286,5.761784,-3.710328,4.464440,-1.197898,-1.436436,0.322945,-5.707531,1.761962,9.113136,9.756063,-4.319660,-5.034048,-6.186096,4.691414,0.290705,-0.442495,0.325508,2.876525,9.367275,4.323923,9.565484,3.392986,-7.403902,1.813027,-1.442692,1.315517,9.343497,-5.829453,-7.977062,6.154430,-8.859998,-2.919530,-7.163757,-9.159556,3.580242,5.934817,9.436575,-3.212185,0.906807,9.501411,4.747092,7.010368,-6.112590,-0.161572,3.757819,-5.420376,5.913636,-4.620432,-5.977916,-6.905280,-1.038689,-1.227367,-9.306106,6.057241,-6.665060,-5.918294,4.105068,0.755133,1.435239,-6.038383,6.666936,-1.256997,5.712298,-8.406460,-5.317480,-3.670441,-0.284156,-5.930939,8.963735,-6.127468,-3.179237,0.487651,-2.001137,-5.530817,7.631886,0.824968,9.561260,7.386714,-9.751130,1.745392,-9.065362,1.086034,-8.106740,-2.496067,5.550858,-9.716152,5.419629,9.472851,-9.971807,8.017195,0.172228,-8.396861,-3.702316,4.098968,3.063015,1.991272,-4.751694,-9.372210,-0.827584,9.166674,9.869979,-6.374097,9.578701,8.361945,4.646404,5.776474,4.380653,0.182337,-4.666859,-6.434400,6.476080,0.845849,-5.084825,7.927483,-1.355713,-5.029816,-2.711968,-4.530193,-2.239656,1.947031,-5.183439,-8.035786,-8.382111,-3.236267,7.397506,-8.928541,-1.026144,-2.006634,4.978833,-5.807434,-4.575172,4.199928,4.025035,7.490743,4.599167,2.434134,4.332335,1.720382,1.223953,-3.931429,-4.656192,-1.118047,7.277554,2.717609,-0.875030,-3.538120,-8.801632,7.313856,-1.019815,-1.949678,1.534011,9.807457,7.436833,-2.864927,-4.170159,2.632796,3.468266,-8.895905,2.060717,7.963084,3.844705,-5.013614,6.147340,9.710541,-8.872339,-3.126344,5.630694,3.257994,-8.411075,5.696846,-7.265740,-2.788019,-2.721677,-5.672899,-4.982937,3.200333,-2.202514,-8.113322,0.776695,9.306817,6.757478,0.202669,9.434643,1.664579,-1.491041,1.209612,-0.411751,-2.404345,-8.596897,-5.961511,-6.173083,-9.266277,5.259990,3.283254,-8.279497,1.030434,-4.271629,-3.568833,0.539811,5.528382,-0.502058,-7.906051,-3.682162,-1.870254,-3.439905,-8.352449,-0.570492,3.602817,3.338585,7.252053,9.283395,6.639833,2.976477,2.841152,5.689084,4.414856,6.956157,-2.043389,-2.307123,-0.787131,8.962748,-3.906506,9.105054,-5.593806,-0.013544,-0.209707,-0.005563,2.642893,9.550807,-8.505787,6.953034,3.285165,2.269094,3.009915,-8.856173,-8.143513,-7.490720,2.680226,-0.222430,-2.062629,8.521509,-7.963960,-4.805677,-2.746339,2.607830,-1.319616,-0.105405,5.758180,-8.242585,0.361937,2.678831,-9.835865,-7.554219,5.775825,2.706227,4.359774,6.449559,-1.035824,9.674382,3.900789,9.476058,-9.089177,2.294849,-9.462856,-6.743378,-4.545667,0.612355,9.229993,1.837355,5.966397,-8.722680,7.100735,-0.592222,3.971754,-9.450904,-4.279166,-5.036680,2.464894,3.822282,2.064283,-2.271473,4.225705,7.769795,8.757730,7.529681,3.735577,-7.377987,1.527135,6.212918,-1.192517,-8.526049,8.022807,0.277918,-2.171759,-3.627948,-1.883168,-0.622631,7.254935,-5.867986,-8.520710,5.268008,1.885996,-0.363299,-5.309555,7.424428,-2.515715,-6.222767,7.214974,-6.871842,-2.622187,0.981484,0.593473,-4.559695,2.946329,-4.044123,-3.560676,-9.610869,4.900214,4.668105,-7.539279,-7.467866,-5.606978,-5.978669,8.679128,9.148288,-3.262397,-2.036780,-7.856613,-9.115011,-5.827415,3.019429,-0.306497,-3.772693,3.214927,7.106259,3.937867,-9.090743,-2.568413,2.458625,3.303662,9.257233,5.055233,-9.618745,-8.954971,-2.950220,1.097342,-2.405156,2.529089,6.190071,-7.683554,-6.829740,-6.948657,5.081383,5.368533,-9.019569,0.713688,-6.014183,-8.435208,5.225881,8.828332,2.422323,6.005032,-7.040600,-9.910849,9.412917,4.580654,-5.476567,-0.154061,-8.731873,-1.284375,1.006298,7.334726,4.828943,-6.979584,-3.382237,-2.072562,-0.333516,0.584978,-7.345756,-6.375974,-1.358642,6.554510,2.027885,-1.508833,6.575612,1.647133,8.328399,1.761108,-3.708613,7.368110,6.378096,-2.767323,8.612833,4.443823,3.944393,-1.077135,0.798212,8.073533,1.650596,-5.496255,-0.498130,5.355423,-6.635654,-9.770578,-4.303806,-2.037371,2.878107,8.083053,-9.287098,-3.822639,-9.591515,-2.640928,-5.922872,5.557332,0.047317,8.877856,8.304311,7.960780,5.294070,-2.986209,3.207413,0.294192,1.449968,-3.063623,6.172058,0.118912,6.111971,1.969125,3.542728,5.596123,4.634276,1.290956,-8.175094,-0.228920,-0.653948,9.442378,6.375968,5.498182,-3.377648,8.848981,-4.494902,2.276166,-1.998130,-9.986781,7.846925,-1.957736,-9.987521,9.393291,3.017250,-4.520795,-2.220412,7.402840,-0.755438,-9.115890,-9.968685,9.075362,5.970857,-1.199516,2.208553,4.234107,0.739274,2.532444,0.059091,-2.102922,3.694574,0.624977,-2.704284,4.961629,5.921105,0.866279,3.596247,-9.452089,-6.494846,-8.730438,4.784642,-2.725345,-0.052441,-3.153199,7.064251,-2.101782,4.809725,-4.925176,-3.787287,9.205154,-3.390645,-7.147395,2.416373,-1.602187,7.625113,3.701399,-3.652959,5.514332,-7.842782,8.850355,-9.086460,-4.176647,2.941023,-6.509906,-1.940833,7.077838,-5.541072,9.373708,-7.078712,5.935935,-1.582245,4.756904,3.284501,3.832337,-2.995666,1.232910,-4.348866,2.392513,-5.361364,-5.462593,5.216946,3.368639,7.462015,3.185077,-3.639653,2.409531,5.853530,-2.678180,-2.278837,-7.181638,-8.610685,3.526665,7.652135,-2.673146,-7.116042,6.918011,-2.562245,-7.095730,8.620987,2.554526,-9.245058,-6.126175,7.435371,-4.665781,7.270299,0.366943,-4.810463,-2.726069,6.613793,-8.087651,3.471082,3.018569,-0.033649,6.957928,6.100137,-5.661407,-3.475239,3.731306,3.350359,4.385102,6.617463,-6.799881,2.900284,6.483788,4.802818,9.872299,8.728034,-5.157838,-6.222920,8.635974,-8.449382,9.964818,6.064642,5.509976,4.136346,4.021545,4.176268,-7.658285,-7.428086,8.313550,0.804956,8.420290,5.258155,1.131939,2.556106,7.208550,-1.168003,-0.425956,3.087070,-8.828096,-7.399926,1.378477,3.663291,2.690285,-8.109492,7.778534,7.829756,-1.538014,-8.444268,-1.833295,3.043917,1.634109,-3.566675,0.252470,9.325657,-0.491342,0.261661,8.281950,-7.768836,-7.211220,1.637406,-1.699383,-7.880402,2.780221,-9.071789,3.460856,5.818990,7.380944,-7.886757,-9.057587,-7.907168,-5.362779,-2.713750,-2.943580,-4.322975,5.230403,-5.914429,-9.582571,4.701177,4.059164,8.993932,1.886857,-6.323473,-7.954070,0.429052,-6.220704,-2.399468,3.778985,1.799609,8.279561,-0.186743,3.574535,-3.482238,-7.458011,-8.287025,-4.012624,-9.568501,-3.110714,-4.339172,6.960619,1.827121,-2.734515,-9.814828,1.215361,9.418945,1.425923,0.096586,3.584993,-1.339036,6.455197,3.953025,-3.509777,5.538392,-2.834063,-6.017221,9.654119,-7.126776,7.380861,5.679080,-0.912865,2.724212,6.535750,-9.930580,-6.891130,-4.813656,5.030151,0.826899,1.648992,0.517503,3.987503,4.127046,1.273678,-8.125551,4.068468,5.728049,-1.615041,6.988624,-4.732298,-7.080628,6.487717,-7.326541,0.443056,-8.566514,7.718016,-0.332534,5.565383,0.070150,5.551585,2.360392,-0.246730,-3.151214,5.279611,-2.129089,-6.472709,2.128372,3.480676,-4.163939,6.767899,0.398169,-0.979220,9.909150,4.692023,8.936441,-2.286177,5.219208,4.622966,-1.774616,-8.766081,-0.322972,7.724992,-3.286187,-7.806403,1.885332,1.404077,-2.682097,8.879111,-6.732512,-9.144775,1.587277,-6.286359,8.592766,4.856098,5.499937,-2.739144,-7.027361,8.598571,-9.837570,7.302986,7.310083,-2.261506,2.089208,-2.084520,1.934866,9.456585,0.595070,6.267431,9.948818,-4.582621,-2.153588,2.364287,0.453615,1.617950,-1.024112,0.829511,-1.550524,2.634696,4.116141,8.716185,-3.227535,-9.319070,-2.156625,7.902918,-3.868353,-8.297360,-5.313291,4.034197,-0.161447,-8.844359,3.300924,9.695526,9.567114,4.450182,-5.073072,7.847309,8.596868,-7.491970,-7.880689,-1.705923,-4.082287,2.767052,-9.175606,-7.764046,-4.587881,4.153599,-9.720260,6.967751,4.656410,1.175770,3.684929,-2.211077,-4.262298,-4.548960,-6.283854,3.801598,-1.494350,-7.988823,9.193731,9.916230,7.911467,9.356787,9.963107,8.507070,-6.747603,-6.558664,-0.379843,-3.871302,-7.707132,2.494427,9.499950,1.408211,1.238723,-0.190348,-8.795023,-8.404004,-4.682186,9.796916,-5.941585,-5.893165,2.956463,-8.913136,-4.754344,-5.407966,-7.350774,5.366938,-0.654203,6.231555,-6.283935,-7.883494,6.709961,-6.921080,0.145448,-0.311100,3.100245,-2.918721,6.091339,-0.826668,2.851478,-5.427907,-6.338923,-8.811962,-9.032406,-4.426651,7.521796,4.156219,-7.971704,7.472087,-1.329468,1.430279,-5.847511,-0.475088,8.879464,0.926420,-3.223065,-0.857285,-0.368149,2.173033,-2.820751,0.635726,3.713176,-6.728708,8.677913,8.458221,7.369449,5.722635,-0.030862,-5.531046,-5.083487,-0.104686,0.649251,0.136010,9.238019,8.030611,-7.041725,-7.025039,9.442108,5.470287,-4.998672,-0.811463,-9.767826,7.803502,-4.913076,-1.937465,-9.178209,3.406688,5.099745,4.067421,5.137762,-9.547870,2.364124,1.216651,4.082261,9.995420,8.141570,-4.999340,4.189106,-8.357606,7.852016,-3.035939,-0.072721,5.191072,-6.140204,-4.109881,0.549683,-7.851626,7.694501,-2.604762,-6.347606,-9.379763,5.893091,4.233609,9.373208,-7.886935,-3.049087,-6.597607,-9.996447,-6.754776,-8.081178,3.688591,7.893045,-2.553926,4.285676,-4.061046,4.799556,-5.084471,9.380323,8.139762,8.371574,5.076464,2.073023,-1.104827,9.201201,-8.198809,-1.458909,-8.696934,9.545753,-0.217194,0.792449,3.901337,-6.410270,2.260856,1.918420,-6.403454,6.037721,7.519476,3.643385,-1.438225,-9.389277,-1.073091,-7.651650,5.856067,2.728838,6.616261,-5.608651,4.868224,-0.668957,-9.416255,-5.786833,-5.428164,-2.139379,-6.348025,-3.328036,-5.342694,3.954367,4.577642,7.366564,-1.077984,-7.940951,3.085465,-8.965564,8.452546,-1.498093,-9.144839,-3.517726,-1.723228,-3.014731,-3.285169,0.752049,-3.245073,8.229967,9.755896,-3.348237,-0.793790,5.866491,3.320150,-6.667182,-3.957011,-3.313169,6.525970,8.845914,5.251642,-0.010417,-3.362855,-7.431473,3.568956,-4.762387,1.131431,-6.119551,-1.989030,9.111295,8.145096,-2.180273,-0.432611,-6.066893,-1.597650,9.768507,-0.832036,3.442236,-3.521785,4.857179,-0.670482,-4.314951,-0.638567,8.812581,-4.641873,-1.878658,-3.001199,2.385224,1.380392,3.927142,8.137295,5.056068,-6.135392,1.501113,-2.282660,-5.612848,-9.024108,-4.816316,2.631624,0.743930,2.629130,8.662695,8.453037,-8.575773,4.803911,-3.354123,5.307106,-9.287648,-4.558111,-1.648297,-7.532893,1.177435,2.610692,9.508608,0.146581,-3.350876,-4.349239,6.360681,-7.303766,-4.909049,9.195024,-9.399111,-1.658915,-9.096974,-4.803860,0.494366,-9.733774,-6.301075,9.000897,-5.059567,-0.893556,6.978768,1.197401,-4.092687,-0.779617,8.016295,7.374282,-5.865684,-4.340434,1.003703,7.510555,9.388333,2.010961,2.475722,5.971641,-2.375477,-4.361302,-6.162301,-3.541010,3.863368,4.194093,-6.782534,3.647433,-0.957176,1.576263,-4.782018,-3.365336,-0.231394,8.461459,-9.466585,-8.139104,1.720523,-0.039774,-6.664184,-5.265688,-2.680748,-4.751713,8.209623,8.202363,5.046352,7.852649,-0.731447,8.059647,4.098148,-3.550159,6.077740,-0.120914,-9.049737,-3.837192,8.379447,-4.288682,-9.728193,-5.458425,-3.551471,5.106594,1.588613,-2.930883,-9.659127,-8.525724,-5.295959,-0.620737,5.324925,-2.769298,1.690049,-6.254694,-3.885547,-8.052965,9.513005,-9.639913,1.300281,6.432514,-0.205110,-2.143979,1.865606,-3.146918,6.826464,0.714305,-3.741464,-7.758715,-6.638527,-2.085272,-7.419793,1.769792,-1.267747,8.583230,7.475159,-8.195030,-2.864115,3.835062,8.234680,-9.029367,-1.587076,-7.202470,9.887570,-9.562849,8.949064,-1.880354,-1.038597,-8.948833,3.995461,-3.474674,-0.049108,-6.543407,1.003361,4.995607,-2.137490,3.507741,4.287880,8.127307,2.873518,0.724001,-8.701819,-5.855454,0.861682,7.782133,-6.828254,-9.991106,-8.879592,-6.561948,-9.471733,8.086025,7.371956,3.236610,-4.452711,7.098518,-6.134450,-7.055323,9.221547,1.203681,4.468125,5.083058,-2.678903,1.476322,5.746619,-7.715684,3.515903,-8.156450,2.041767,9.507568,-9.355169,2.718948,8.266975,8.087443,-2.870045,-2.383875,-6.276028,1.095469,7.285843,0.366074,-8.994645,-2.670219,7.272065,-0.719929,-5.397967,-5.229809,2.465564,7.601492,-8.191703,6.238390,-3.411754,-3.857862,4.178633,2.966236,-4.929040,7.341409,4.542929,-1.255500,-0.551455,2.683406,8.711656,9.691603,0.550812,6.289296,-6.211400,-3.063618,-0.185227,2.555617,-9.656378,-3.883140,3.258342,-0.780569,5.913371,-6.963935,7.507491,-9.545679,8.882096,6.176206,5.283846,-6.123746,3.955371,-2.843683,-1.943009,-1.599618,-8.769146,7.049007,-5.282920,-2.048136,6.451381,-5.371236,-3.705111,2.227321,-1.103437,-2.089139,8.425379,4.290383,0.659580,8.056503,8.420859,4.062779,-9.922358,-3.989019,-4.266615,3.905485,4.466605,-9.153569,-2.791294,6.081380,1.974447,-2.313450,3.221690,2.892261,1.542169,-9.116130,-2.493788,1.036748,-4.244448,-0.095135,-6.500868,-1.073882,0.548062,-5.485202,-8.034554,-4.925215,9.762697,8.058588,4.678242,-8.101129,3.755168], dtype = "float32")#candidate|7418|(2352,)|const|float32
call_7417 = relay.TupleGetItem(func_1335_call(relay.reshape(var_7413.astype('uint32'), [11, 7]), relay.reshape(call_7412.astype('uint32'), [1078, 1]), relay.reshape(const_7418.astype('float32'), [4, 588]), ), 7)
call_7419 = relay.TupleGetItem(func_1340_call(relay.reshape(var_7413.astype('uint32'), [11, 7]), relay.reshape(call_7412.astype('uint32'), [1078, 1]), relay.reshape(const_7418.astype('float32'), [4, 588]), ), 7)
output = relay.Tuple([uop_7407,call_7412,var_7413,var_7414,call_7417,const_7418,])
output2 = relay.Tuple([uop_7409,call_7415,var_7413,var_7414,call_7419,const_7418,])
func_7424 = relay.Function([var_7413,var_7414,], output)
mod['func_7424'] = func_7424
mod = relay.transform.InferType()(mod)
var_7425 = relay.var("var_7425", dtype = "uint32", shape = (77, 1))#candidate|7425|(77, 1)|var|uint32
var_7426 = relay.var("var_7426", dtype = "uint32", shape = (7, 154))#candidate|7426|(7, 154)|var|uint32
output = func_7424(var_7425,var_7426,)
func_7427 = relay.Function([var_7425,var_7426,], output)
mutated_mod['func_7427'] = func_7427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_7429 = relay.TupleGetItem(func_7042_call(), 0)
call_7430 = relay.TupleGetItem(func_7044_call(), 0)
var_7432 = relay.var("var_7432", dtype = "int64", shape = (5, 3, 9))#candidate|7432|(5, 3, 9)|var|int64
bop_7433 = relay.logical_xor(call_7429.astype('int8'), relay.reshape(var_7432.astype('int8'), relay.shape_of(call_7429))) # shape=(5, 3, 9)
bop_7436 = relay.logical_xor(call_7430.astype('int8'), relay.reshape(var_7432.astype('int8'), relay.shape_of(call_7430))) # shape=(5, 3, 9)
func_4375_call = mod.get_global_var('func_4375')
func_4379_call = mutated_mod.get_global_var('func_4379')
var_7445 = relay.var("var_7445", dtype = "float32", shape = (150, 3))#candidate|7445|(150, 3)|var|float32
const_7446 = relay.const([-4.760787,0.098788,4.609089,5.765648,-7.144486,-4.265078,-2.579370,-2.811481,4.050508,8.488829,1.570395,-7.654677,-2.477642,8.165361,-2.488713,-8.049369,5.988232,-4.544856,2.251948,-1.993636,-3.337816,7.218482,1.004860,-9.019415,8.086169,-3.361692,1.105658,6.315210,-1.000678,-6.806988,-2.663370,-1.806339,-4.275706,-6.587680,-6.191004,-0.818855,5.826827,5.707494,6.530181,7.391724,1.162619,7.248008,-9.017043,8.877683,3.499876,-1.243939,-9.488110,1.998627,1.087294,-2.759941,-4.919846,-6.873153,6.035498,-5.246088,-5.681065,2.788192,4.679109,-5.039609,5.780222,2.222896,7.725327,-7.436971,-3.798206,0.272265,-4.900056,7.096233,-8.707580,-1.310560,-2.243157,-8.936048,0.903940,-5.525760,7.885719,-9.426477,-2.151724,6.349533,2.369849,3.925940,-3.799488,-1.415291,2.809461,6.541443,2.327978,7.256776,2.811593,-9.203887,9.135336,3.820383,-2.789787,-8.524372,6.323874,-2.540805,3.526054,-5.301364,-5.149220,-0.035424,2.319385,0.307246,-2.239594,-4.021336,8.802494,-4.585792,7.348671,1.524589,7.773658,2.119662,4.485345,-3.428865,6.613999,-6.304789,6.593658,0.323660,3.703554,0.301891,5.163304,2.937804,0.606568,-6.430098,5.610169,-4.140729,9.876549,-0.303989,6.279832,8.994935,4.845108,8.671982,1.485870,0.633393,7.763541,-9.120904,-7.478192,9.056871,9.640460,6.029952,1.042466,1.484207,8.236335,-4.432266,-0.931698,7.728768,0.457865,-5.707200,-1.945633,5.354400,1.344274,-9.589364,0.926785,8.510673,0.038998,-1.321151,-5.241198,8.872513,5.239482,-9.372600,-3.400026,1.741555,-8.568275,-9.944410,-4.481400,4.671345,0.691950,6.503262,4.255146,9.172048,8.936491,-0.591498,1.085025,6.929784,0.818387,5.590252,-6.729774,0.456289,-4.667603,9.675662,-2.722998,-9.741698,-0.278772,-9.357826,-8.066077,4.067354,8.370182,6.429621,4.406228,9.337916,3.851578,-8.035098,-9.349873,-8.765774,6.509678,3.096033,-6.780718,4.627062,8.495809,7.984086,6.277006,-3.509678,-5.481831,-6.873887,-2.587814,-1.472741,-8.235349,6.035186,-0.729060,8.376788,3.528663,7.722305,6.919437,2.037898,2.915858,-8.367056,4.067652,5.176730,8.947327,5.929320,-4.008493,2.354698,0.228530,9.291010,-6.896079,7.122699,4.102467,-5.532260,-0.015068,3.536332,-2.997243,-8.027971,-6.539993,9.633399,1.719915,-9.080917,-8.225319,-0.295295,-1.721372,5.130317,8.067166,9.806573,-0.605360,0.451747,4.786293,-9.708634,-2.733540,4.990814,-1.030681,-4.674041,3.877711,8.897615,-8.643294,2.153153,2.635032,-7.125142,-4.186919,9.610088,5.640877,8.980243,-5.510386,-5.756272,-6.044189,1.039476,-4.151032,2.284849,-8.961888,1.803030,-0.085723,-5.080992,0.108580,-3.748201,-9.962759,-5.467550,-2.737414,-0.190116,4.955339,-4.445989,-9.150594,7.390360,1.916153,-9.613720,4.579718,4.444219,8.944026,-8.585894,-7.575137,-6.378120,-2.675007,-4.304322,-1.525250,8.543838,7.751669,7.595668,-5.900285,-6.679413,3.634679,0.594087,-0.810427,8.123140,-3.165844,-5.195377,-4.541159,6.025615,-6.727637,-1.309083,-1.280015,-5.905580,6.517238,7.448696,-9.336045,9.043833,8.468295,4.902845,4.322747,6.555099,-1.655564,-6.093853,-1.623617,4.585610,4.379934,0.096722,-2.925171,8.251519,6.599017,0.255079,-4.557024,-4.898124,7.878730,9.371876,-4.422788,4.501843,2.376977,5.213743,6.640898,-7.261160,-1.104405,8.014975,8.278901,-1.194775,2.959227,2.039353,7.706758,7.565273,1.903847,5.705482,9.469326,-0.359663,5.153712,-4.045803,-3.484901,2.455418,-9.841356,2.616786,-7.039196,6.359159,0.769890,9.301186,-2.966364,-7.653852,-7.076238,1.177402,-8.782656,-6.103106,4.782038,-5.791141,1.507048,9.032888,-1.719495,0.207229,-6.338489,9.003785,1.167316,-4.427644,2.981303,6.692113,8.806663,-1.115265,-8.157554,2.213610,6.712209,-8.752788,5.952374,4.838115,-3.723189,-8.777407,2.109760,3.486704,3.780049,-4.604703,-5.656275,-7.734623,-8.967480,6.533753,5.835872,-4.096368,-6.729512,9.978020,-5.077495,-7.152609,0.513962,-9.147834,-3.069895,-8.338819,8.696175,-7.557943,-4.644233,2.003171,9.146245,-1.448381,1.968724,-7.345943,6.659937,-5.354870,-6.121113,-8.562300,6.528645,-8.897681,-4.592037,0.963056,5.150611,1.676966,-8.635891,-5.818641,5.603775,-7.340742,8.553281,2.871286,-1.413367,6.136089,-9.933075,0.273776,-1.467619,2.225495,-1.133326,-0.943738,-9.595597,6.192865,0.074748,6.443016,-0.839331,9.034785,-9.830129,-4.354723,-7.715292,7.797514,-9.051092,0.894607,-8.660837,6.707121,0.540387,-4.420676,-6.651780,4.989237,2.508539,-1.834199,-7.616142,8.621227,-5.365514,-2.960214,4.566582,5.395653,-6.951205,-1.339254,6.247317,3.737350,-9.558948,8.630156,1.398617,-2.969555,2.978393,4.474236,-4.026148,-8.177831,-3.320514,-3.645065,-4.961889,6.583508,-6.166621,8.791071,-1.104246,-3.527664,-3.179039,9.253512,-9.815402,-3.573748,-3.173487,-2.806631,-5.055888,-8.234491,0.835855,2.651754,-1.975687,-2.841401,-1.219839,5.968512,-7.103837,0.223558,2.667002,-6.488773,-8.247903,2.392790,-3.298038,-6.813829,-1.920159,-9.966798,7.169440,0.666072,-6.372718,-3.585251,9.525083,1.681269,3.319205,-3.174561,5.852356,8.150119,5.159997,9.304975,-2.035177,-5.531106,-4.855672,-9.372095,-9.460201,6.996183,4.044713,-4.366362,1.886841,-7.770135,-4.898803,8.740048,2.861132,-7.768765,0.048243,4.673907,1.057610,-8.170445,-1.724155,4.949398,-3.658971,6.142087,-0.789026,-0.684831,-4.658834,-8.374373,1.110485,-5.359963,-2.706377,3.694181,-2.929488,1.919105,8.406927,9.368996,-7.125743,-3.353208,-2.317842,-1.808959,0.433150,-0.457839,5.369904,7.883878,4.884659,-3.279073,-4.221634,4.943158,-8.835058,-0.843732,5.384531,3.072683,-6.565025,-6.651321,9.531750,9.563048,-1.268741,-0.962865,-4.667740,-5.008573,-6.767051,-4.305875,3.160977,6.235429,-9.240615,5.376496,-8.860204,-1.910862,-6.837603,8.875421,3.915789,9.181714,-0.507723,-0.073082,1.083953,-2.207393,2.561314,-9.723733,3.210133,-6.666662,7.438808,3.773612,-8.747003,-0.135130,-2.381134,-6.646810,-3.736821,0.118280,-7.426069,1.403675,3.410121,9.952712,-4.738210,4.790571,6.847445,-2.278940,9.742397,-6.390796,6.580390,-4.541447,-9.891051,8.553324,-9.600710,-9.601372,-0.702243,-0.309013,6.850239,-1.501204,3.673427,3.246231,2.740430,7.602438,6.511831,-1.477793,-7.245043,5.430373,-6.099087,7.390276,6.155470,5.888611,-3.199482,4.136435,3.810112,8.985619,2.576874,0.632468,-7.540929,9.194243,4.071349,-7.169776,1.885003,-7.282239,5.353946,-3.004306,6.705040,-5.416292,-7.003921,-9.524130,-9.982171,-8.917160,-8.340823,-8.732915,1.670719,9.874077,-1.380432,-4.733505,8.757003,6.360461,1.509026,2.539904,0.462698,-4.527198,-7.389487,6.564985,-1.526014,-4.412322,2.500824,-6.487558,3.858306,6.732204,8.648917,8.803196,8.499713,0.392606,-6.510999,3.289272,3.242789,9.368815,-2.380570,-7.849169,4.913607,-0.390154,1.884127,8.913822,-6.812379,-1.271102,-7.067431,-0.855174,-6.939764,-8.652551,-0.524469,-3.090470,6.800305,8.838952,-5.066124,6.241378,8.725312,6.051915,-6.211804,4.865273,6.190186,-3.177102,3.745657,7.835748,4.708688,-9.457225,-4.021852,3.908896,7.648577,6.468137,-9.997406,2.657509,-2.759251,-4.481482,0.501953,9.938730,-4.867707,-0.263789,-3.327244,1.004174,-4.564743,-7.823764,1.270233,-1.402484,-8.561568,-8.133385,-0.310127,-4.197096,-6.170939,4.597750,-4.266814,4.128110,6.037559,-8.159033,7.454473,4.105655,-4.865507,-1.113818,0.133121,-3.386921,7.452443,-1.052584,-0.037087,-8.796651,1.193728,-6.693260,6.731641,-7.983552,1.647097,-8.845584,5.959036,-5.847595,7.351014,7.911366,-9.801051,8.815005,-5.115507,1.059960,-2.270476,-7.057685,-9.385139,-1.982146,-4.861162,-1.609924,3.189440,-0.694165,-3.877383,-5.210337,-4.787737,-7.235842,0.599245,-0.120239,5.383011,-6.727429,6.354863,1.266621,0.965152,4.036607,4.337115,-4.544984,6.571372,1.757319,4.028804,6.220304,3.504757,-4.354221,1.421401,-9.895522,2.003824,2.143389,8.502894,-5.697168,-9.927400,-8.126998,1.092967,-4.406259,-6.031675,-0.580635,-0.737607,7.651257,7.475679,-7.857392,-4.820777,0.311514,-8.853444,-8.321399,0.615378,-8.721759,6.620702,3.302756,8.562536,8.834923,5.952108,-4.059814,5.314618,0.619680,2.870852,-1.944470,5.686907,4.030270,-9.228627,9.579224,-8.714940,5.467659,7.983886,-6.192309,-8.128020,-9.150285,8.558107,5.859535,-9.254446,5.315350,3.547645,5.726220,3.227120,-8.289120,-2.106808,-2.054873,5.276650,-5.025851,-1.427396,-2.811617,-0.003637,5.319379,8.565818,3.978249,2.932693,8.856569,-5.498796,9.916835,-8.794046,7.242879,-3.912419,8.879560,0.182094,-2.169353,7.461100,-9.082238,2.345788,0.805180,7.190842,-9.663852,-3.287548,3.469056,-6.508392,-1.219888,-1.333058,1.090031,1.304685,-6.987390,4.831494,9.451001,8.119379,-9.991248,8.271357,7.069491,-6.056697,3.963539,-1.188116,1.127278,-8.611430,2.496341,0.717373,9.273936,5.886389,2.153219,-6.608061,2.634402,8.052050,-6.856077,-7.714623,8.204147,8.776252,7.664831,3.076257,-7.774881,-4.364995,-3.581421,-8.755401,0.173001,6.008691,-7.661607,2.116747,-7.194735,-3.066919,5.142758,-7.779176,3.154586,5.318351,9.542391,-4.840867,-9.754420,6.947940,-9.084004,-8.475583,-5.662855,5.300873,4.026291,-8.946933,0.092315,-4.504744,1.520972,4.635879,-6.310598,0.894002,3.440381,8.499353,3.731579,-1.090535,4.482384,6.627196,-3.754302,-7.991023,3.093793,8.056807,1.260150,7.007995,4.439053,-9.234084,9.940649,4.802737,0.071846,4.456780,-7.820554,-7.860123,-7.119489,7.958611,-7.499799,0.225931,-4.752670,-5.845609,-8.093533,4.731732,-9.752685,-3.011065,8.579956,-7.698644,-8.871109,5.026038,8.226520,-7.936262,6.055540,7.371689,-7.150885,1.273611,4.125665,-6.538814,1.417308,2.351864,8.028423,-6.508567,-9.015168,3.610683,-1.049849,0.368894,0.140556,0.666053,5.125100,-7.274548,4.150632,-4.229539,-0.026135,3.991350,-3.982049,1.580973,-8.915096,1.430969,5.816427,7.225474,8.647728,0.933305,9.256391,-7.569310,4.262368,-8.517405,-6.036614,-6.954306,3.114225,7.198137,-9.989227,-1.708080,-1.724114,3.879630,-7.623354,9.129362,3.444716,-4.028666,2.362962,2.363428,-5.473025,-4.492260,2.350558,4.342995,-8.343155,-0.289823,6.771768,2.836860,-0.874162,1.294773,8.011005,3.065682,-1.431761,7.857636,-0.091435,-6.045635,-6.311496,4.867904,3.121735,4.368960,2.339637,3.115024,-1.760452,-1.265515,1.674134,5.886906,-4.428822,-8.875976,2.775402,2.916391,-2.572727,-1.525040,-7.810522,-4.838506,-6.666741,8.932370,-4.790666,-6.798119,7.280602,8.181582,5.710361,5.762710,1.363345,-2.028691,-1.183982,-5.156104,5.336279,0.224452,5.299658,-7.679505,5.925561,9.888229,-3.904952,-7.219307,7.790464,-2.515187,3.612273,-3.698675,1.707278,9.460844,-0.621669,3.377036,-1.899470,9.033727,-3.956130,0.823890,7.578532,2.296214,-0.915897,0.292055,-7.992423,-2.787654,-1.934657,-5.741699,5.195474,0.648121,-4.490568,-0.784309,0.591595,-6.431640,5.108448,-8.769349,-3.906420,-0.498940,7.318099,-7.851745,4.751668,4.054310,-1.533026,-2.276763,1.349351,4.122255,-8.618203,-2.813628,-9.172552,0.490316,-6.788094,-3.957935,-6.838908,-9.056296,7.962426,4.796689,0.067762,-5.149293,-1.654382,-4.773636,-1.596392,1.909843,5.674606,-3.024594,-0.170041,6.605472,9.542704,-0.156376,-9.576537,-2.434028,4.731613,-1.783145,-2.650269,-1.478214,9.061207,2.468085,7.796645,-1.619181,-5.651528,-4.073150,9.000013,-8.283649,8.645203,-9.268407,0.935060,4.882166,-0.147593,4.391849,-1.957385,4.652529,-1.990177,0.871379,-5.887279,-2.753447,6.061247,9.000701,-7.929074,7.725789,-2.020313,2.437000,-5.573586,4.863343,1.135844,-0.709453,-0.134565,7.999590,-5.488619,-5.739872,9.566513,4.595965,1.202446,1.088435,-1.266024,-3.208397,-3.574417,-6.951635,-2.570048,9.586984,3.354779,-4.137665,6.340737,-5.022893,-3.931413,-5.656602,-0.023954,-5.921984,0.660375,4.329956,7.102037,-9.492798,-2.339988,-5.101064,-8.436490,-9.710271,0.325816,-6.785070,-4.649173,-3.329613,0.055643,-2.771120,1.649516,-3.497604,-1.447923,-6.934842,9.562853,3.275365,-0.046961,-3.268076,0.724402,-5.178318,1.993353,-6.668557,0.095510,6.780060,7.215830,-1.654780,-9.259413,3.385701,1.101548,-1.521304,2.416636,-1.458662,-0.188174,-5.952606,9.170043,-6.856841,1.606575,-9.698998,-4.938555,-4.031092,-6.982635,-0.173827,9.595540,2.226440,9.621817,8.695794,-6.818229,-7.290676,-0.239736,-2.011251,1.433410,3.782053,0.388474,-7.848314,5.768130,-6.201097,9.899217,-1.197878,-0.532491,1.258162,-4.454701,-6.557713,-7.947814,5.906382,-3.994367,-6.340840,-1.038279,-5.129515,-5.731934,6.673115,8.383535,6.462754,-6.282353,7.701529,9.046321,1.582758,1.689166,-5.977301,-9.909426,5.515207,-3.279451,1.542572,7.022332,-7.860554,-3.924801,9.649510,4.340535,-1.650662,-2.186960,5.726426,3.860010,7.810982,-1.998273,-4.155705,5.862411,1.039590,-3.190235,0.421200,9.707529,3.910646,2.528564,0.881172,9.394509,8.364388,-7.012085,5.052637,8.173466,-1.205323,4.760103,-7.605390,-2.945679,-6.370572,-7.485625,-3.080581,4.464510,6.789221,-9.051114,-6.584832,4.841148,-9.381381,-5.440869,7.123523,-1.242937,1.983984,-7.700395,5.151691,-0.938460,9.641495,9.648616,-8.268362,5.880409,0.768417,-5.131270,0.918435,8.332379,2.759865,-7.982019,1.841711,3.350640,-5.944712,7.068122,-6.351365,3.975649,-6.732245,-9.298370,7.250997,9.344609,8.622292,-7.645986,0.686979,-1.312162,1.605484,5.124242,-6.291729,-1.549404,-9.820535,-0.825682,2.981779,2.613753,-3.410088,-2.012136,8.937122,-6.855498,9.668831,-2.558052,4.733954,-9.299381,6.352083,5.646945,-8.514491,-6.563999,3.009786,2.362908,-3.302670,7.242576,-9.898913,-0.367747,3.179412,1.951333,-7.642954,3.747043,-5.493509,-0.102457,5.917700,3.117064,0.554788,-5.068107,-1.255822,7.072537,-3.465274,6.217066,-6.522019,1.388700,4.290273,9.925794,-4.909868,5.219439,-4.215100,-2.722491,0.459267,1.457355,9.018537,-9.603765,6.528297,-7.696198,-0.291960,7.353930,5.375121,-0.292462,1.749910,-9.095520,-7.146263,-1.101884,-6.245843,-3.873453,2.302709,-6.723640,8.802379,-7.601197,0.534293,6.452095,2.458416,-7.494664,8.114125,1.488600,-3.421418,-8.588034,4.244064,7.176393,9.316373,3.173502,0.006156,1.980581,-9.549230,-5.436269,-1.400378,7.861325,-0.152121,-5.097709,-2.088729,-9.073131,-1.808037,7.850357,0.396791,4.640450,-8.764879,0.937852,-4.873999,6.267855,3.681686,-3.408589,0.063486,4.936389,-4.528553,3.205132,0.306359,1.947322,-0.251067,8.377993,-7.865523,-9.550803,6.991144,-8.891503,-0.311013,9.783451,2.708783,1.884974,1.434823,-7.295542,-1.676909,3.541894,3.722497,4.253368,6.944102,-7.607934,7.749047,0.100375,-0.995476,7.932872,6.794353,-9.023184,-8.059539,5.284849,-9.516467,2.105961,2.523104,-0.355966,-9.100758,-4.922060,-4.876259,2.282350,2.664293,4.115423,-2.029414,-1.717078,7.948711,2.673441,-2.952679,9.593806,-9.637288,3.445104,0.857473,2.972273,-9.073140,-0.955140,-3.823928,-1.664955,-7.295628,7.504853,-1.043383,-9.940555,2.350190,-5.632712,-2.254425,-6.644948,-6.146205,-7.205246,-5.038980,2.908883,5.021163,9.730272,3.607565,6.037356,6.506420,5.714367,-0.293038,8.542579,5.460532,2.105057,-2.945111,-3.461232,7.851884,-1.578625,-2.438270,-3.740448,6.421157,3.278470,-6.036579,-4.272158,-3.479790,1.606254,0.331114,-9.508915,-9.081141,-4.015114,4.728336,-6.344683,9.279235,-3.200681,-1.164823,5.555466,7.098493,6.277967,7.291941,3.814244,7.489785,-7.188904,-7.001416,9.950499,-2.784405,1.783878,-5.533064,7.794247,-8.309182,-7.663749,-2.154023,4.539788,-3.412040,5.516377,-8.737243,8.683110,-1.325400,6.493034,-2.938155,8.527211,-5.402457,6.362554,-3.814122,6.549220,-4.062782,-9.168284,0.149964,-7.598698,-6.012340,-1.744281,6.829718,-5.102768,4.784740,-2.623902,-9.985428,9.817514,-6.195042,0.988997,7.707845,4.431330,-3.499868,-6.035969,1.363331,-8.535124,1.057605,3.409437,-6.170593,-5.907019,3.178999,-9.138487,-8.841522,-3.639242,-3.223949,-1.784748,-2.790999,9.605887,4.079548,0.534138,4.333586,-1.648931,-2.582635,2.526022,1.871280,-0.392384,-2.297637,-1.901987,-7.838332,2.950248,-4.895399,-2.949250,3.374336,-1.125355,-2.792735,-3.548020,6.858641,-2.966581,-0.545531,-7.087492,8.682606,-4.347386,7.170874,-8.625633,3.368814,-1.245312,8.607901,3.063263,5.420825,8.061192,8.754870,7.001660,-3.227420,-7.063724,6.690594,-2.104041,4.817456,-1.185860,4.635174,4.883630,-2.342729,8.464511,-9.896357,-0.171096,-4.534145,6.367111,8.834191,-8.383718,-0.064066,-1.708495,3.258918,-0.747570,0.544675,-0.547481,-4.083876,-5.667480,2.800971,-6.291341,-3.867412,0.711408,6.064288,-1.783733,1.168634,-6.319856,1.368781,8.329941,-5.280676,7.294478,-5.731931,-1.450626,6.859939,3.790932,-2.778822,1.899842,7.529371,8.776483,4.904823,8.644578,-6.685679,8.261183,0.463655,4.023364,-1.888983,7.997869,-5.997910,6.990132,-2.603493,-0.321174,9.342614,7.190801,5.205390,7.892316,-4.576536,3.769165,-3.232597,-8.409347,-2.228630,8.067706,1.125782,6.944697,5.275145,3.934022,-0.480109,-5.479142,9.210475,-7.507443,7.858615,-5.061600,-0.850630,-8.325758,-0.833250,-7.779642,-6.776564,2.109361,1.739357,0.803094,-8.549027,-2.825006,3.153775,-4.881510,1.574016,8.366963,-9.109395,-0.893125,8.226194,8.238022,-2.804713,-4.069601,-6.245396,-3.990275,7.920093,-7.099397,-6.378177,-8.817567,6.097996,7.380437,6.815076,6.096203,-1.638243,-8.772408,0.774647,4.080853,-2.251298,-5.448147,6.541665,-7.806109,6.662812,-1.545434,5.774929,0.213202,0.005538,0.918018,3.173388,-5.124109,4.571094,7.015841,6.904596,-6.299845,1.233752,-6.341265,0.775852,2.536259,3.153562,-7.879858,-3.150450,6.916320,-9.138399,-0.621162,-5.925980,9.631626,5.776518,-4.483036,5.070112,-1.725145,6.072853,-7.594887,0.725577,6.425163,1.322697,-0.384635,3.008959,-5.610488,-1.964586,3.112247,9.326243,-8.388859,-1.221164,9.211075,6.970223,-2.546276,-7.201978,2.220322,-0.452945,-5.782652,2.367755,6.631812,1.604707,-4.751643,-3.225140,-5.473832,9.490598,-8.167466,2.729568,5.368845,-9.420503,6.772595,-1.101385,-8.507829,-2.250989,1.713140,3.458402,-7.738805,-1.249012,8.899944,1.123798,-4.355248,-4.079034,-8.255741,2.522971,2.981373,4.855970,-9.726160,1.873476,-7.107649,-9.160703,5.746449,-3.146733,-2.218687,2.308007,2.449844,9.588441,6.241753,-0.086237,0.925291,2.321700,9.673819,2.319275,5.289549,2.501995,-8.022446,1.177012,0.490095,-3.673431,-4.683293,4.992917,-4.895454,3.456156,9.566987,9.350622,2.605571,7.298159,2.335281,0.246556,9.508316,-8.784738,-2.919078,-4.905034,6.467500,8.250370,-5.112384,1.527523,6.682552,-2.060232,-8.128104,8.657696,-4.033930,8.478044,9.892837,-0.231525,2.057541,7.028704,-4.682500,8.600729,-5.332143,4.693328,-7.828388,6.385092,-6.814601,-4.132527,1.744063,-4.493871,-0.540111,0.570255,-1.433352,-9.403543,-4.734083,3.877685,7.127867,-1.298129,5.690155,-6.453994,-0.425584,3.858396,6.171206,2.923804,9.707851,7.004387,1.524483,-6.801163,-0.725999,5.795476,-3.322577,-7.969310,-1.278090,2.387314,-7.426486,4.753071,0.927910,6.773453,-6.084913,9.506206,1.069272,8.155035,0.343725,-3.410953,-2.057255,-2.843638,7.950340,6.495642,8.624724,5.413735,-2.761015,-1.160717,-7.421446,2.507054,-1.017357,-3.259385,6.972581,8.789346,3.493996,-1.057656,9.854346,-4.307295,1.219494,-2.855420,-8.979076,9.910250,-0.008543,-4.757457,3.585008,2.693383,-7.968068,5.989512,9.298054,-7.092860,3.773123,9.703744,2.027619,0.064819,6.011557,5.490289,1.496098,-1.174363,-1.649998,-6.231271,-2.887482,-0.016433,-8.211360,-3.948581,-2.379315,-8.560308,-9.243730,-2.657913,-6.451723,-5.720127,-7.962206,1.199905,-4.588149,5.074089,8.845731,9.170239,-6.163427,-7.566253,6.790003,-1.093298,-6.266270,2.194114,-4.463746,-2.685617,3.649021,-2.888457,9.854251,-5.037258,-9.864077,-3.737886,4.812775,5.527614,4.032363,-0.005180,9.168557,-1.683685,-3.419100,-9.262711,-3.574048,0.327409,2.177515,7.437007,1.749910,6.773733,4.276177,1.454906,9.555187,-0.771555,1.963904,0.263311,-5.363487,-9.338567,-9.362219,1.647077,6.567652,-0.807283,0.588523,9.406075,5.527050,-1.439331,6.696879,-7.003275,-4.573386,0.223773,3.866683,-8.740407,7.222556,-5.452081,8.695416,-4.418142,-0.689525,-5.799336,-9.025900,9.335045,-0.760061,-5.265654,3.293711,-0.447078,-1.936086,0.691074,-5.440860,7.773499,-4.959650,2.539338,8.527707,7.382346,7.871201,4.617846,4.468585,4.843578,-7.932717,5.359426,-6.092700,-0.622818,-5.323958,6.474213,2.916431,-9.687424,-8.635513,-3.367213,0.686259,-0.510168,9.698696,-3.181154,-0.882816,-2.778298,4.655428,-2.797938,1.783376,-0.494211,0.660182,-3.107490,-0.032758,-2.411501,6.897948,2.764578,-1.030932,4.963791,8.179264,4.535610,6.711223,1.288356,2.353014,0.467377,-1.098081,-0.895275,3.384036,-4.873536,1.791686,-4.177831,9.429874,1.103841,3.037754,7.399577,-2.112805,-7.944166,-4.015075,0.699575,-8.046514,-5.110717,-4.418666,-3.656594,-9.105309,-0.801414,8.159429,-0.280029,-0.055161,7.589989,-1.058710,-9.855429,2.410135,-4.323756,-0.928531,2.091018,-3.075586,7.873765,4.784985,-6.290881,5.205484,0.955049,-2.323738,5.616463,-8.598533,-4.489399,-5.130334,2.134927,-8.436555,4.266142,4.965132,6.394388,0.664496,6.891370,-9.895303,-2.003035,-0.740844,-6.123897,6.563748,9.904381,-0.038533,-4.516594,-4.315367,-4.299084,4.707480,-4.203731,0.725828,3.853928,-3.763724,5.638171,-5.749850,-2.803351,2.044377,0.562118,7.675452,-6.551648,8.031321,-2.293665,4.038014,-6.628759,-4.103000,4.972936,-9.031451,-5.287313,3.271493,4.582882,9.360576,-1.299379,-1.158802,6.044330,-7.930804,-0.250483,-4.389934,-5.839240,5.763488,2.969344,3.015183,8.557092,2.176066,-5.757956,3.023102,-4.870296,-1.158340,-1.353676,8.185476,-5.970786,6.120829,3.441689,8.199487,9.051367,-3.918880,-9.192684,-4.343407,4.853549,-1.576203,-9.320985,0.439405,-3.577121,-7.897439,-9.172651,0.078577,6.721992,7.403860,-3.467718,-3.205486,-1.625911,-6.260237,-2.263030,-2.477142,-6.116047,-2.876938,4.326238,-7.003338,0.777113,-7.619645,-6.133601,-7.300296,-6.009736,-3.486860,-4.788725,6.206132,2.083827,2.151422,-9.840941,1.300706,-4.544359,8.057961,1.517535,-2.721716,-2.205856,-8.454066,-1.652869,0.019461,4.400825,7.686160,-1.330329,-8.959816,2.667010,-8.003501,9.724673,-4.862186,1.627210,6.528257,0.954846,4.083179,-7.346458,-8.587805,-9.110054,-7.759133,7.014901,9.493346,-3.953232,3.047889,8.551370,3.259902,3.999283,4.692911,0.216392,9.552701,-6.920615,0.672298,3.514343,0.007879,6.519589,7.540230,1.385302,-2.106605,-8.793769,8.564228,8.308688,-1.346083,9.568633,0.528079,2.072409,4.183506,1.996775,-6.553364,1.072653,-5.819451,1.162209,3.867537,-4.938414,-5.678934,-4.389531,3.401481,-5.729524,-0.968004,5.782717,9.767084,9.447708,-8.269880,7.615177,2.068718,-1.312382,0.801161,6.101921,-0.451921,-4.125926,-2.729401,8.158927,4.492816,6.391706,5.778643,9.424284,8.594974,9.142762,-4.915319,5.154045,1.239968,3.596471,9.920260,-5.547937,0.730689,4.679963,3.562142,1.877220,-6.428069,-7.270026,0.552352,-0.332508,-5.369625,-6.159066,-6.909570,-2.739591,6.290280,-0.176999,-9.002164,-3.956828,-5.939095,5.197945,-5.523870,-7.001332,-7.848334,-8.798931,-9.107147,-1.709753,3.764691,3.003025,-9.193348,5.034537,-3.532740,3.989465,-4.806203,-1.996381,4.163056,-8.573031,-1.385579,-5.356063,-0.351252,-7.012074,-4.829425,8.900209,1.857798,2.893888,8.893404,5.989293,4.921667,-4.877173,-4.612912,-0.666651,5.323534], dtype = "float32")#candidate|7446|(2352,)|const|float32
call_7444 = relay.TupleGetItem(func_4375_call(relay.reshape(var_7445.astype('float32'), [15, 6, 5]), relay.reshape(const_7446.astype('float32'), [2352,]), ), 4)
call_7447 = relay.TupleGetItem(func_4379_call(relay.reshape(var_7445.astype('float32'), [15, 6, 5]), relay.reshape(const_7446.astype('float32'), [2352,]), ), 4)
output = relay.Tuple([bop_7433,call_7444,var_7445,const_7446,])
output2 = relay.Tuple([bop_7436,call_7447,var_7445,const_7446,])
func_7450 = relay.Function([var_7432,var_7445,], output)
mod['func_7450'] = func_7450
mod = relay.transform.InferType()(mod)
var_7451 = relay.var("var_7451", dtype = "int64", shape = (5, 3, 9))#candidate|7451|(5, 3, 9)|var|int64
var_7452 = relay.var("var_7452", dtype = "float32", shape = (150, 3))#candidate|7452|(150, 3)|var|float32
output = func_7450(var_7451,var_7452,)
func_7453 = relay.Function([var_7451,var_7452,], output)
mutated_mod['func_7453'] = func_7453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7278_call = mod.get_global_var('func_7278')
func_7279_call = mutated_mod.get_global_var('func_7279')
call_7466 = relay.TupleGetItem(func_7278_call(), 0)
call_7467 = relay.TupleGetItem(func_7279_call(), 0)
func_7350_call = mod.get_global_var('func_7350')
func_7354_call = mutated_mod.get_global_var('func_7354')
const_7472 = relay.const([-5,7,-5,-10,-9,-2,-9,-5,9,-8,10,-2,-3,-10,-5,2,7,-5,-8,-1,4,-7,-8,-1,6,3,7,1,-4,-10,-7,-1,2,9,3,-8,5,-1,10,10,-1,6,-10,-7,9,5,8,10,-4,-1,-1,3,4,9,-5,-10,5,6,2,-10,-9,-6,-3,-8,-7,3,5,4,-1,3,-5,6,-10,3,-6,-4,-10], dtype = "uint32")#candidate|7472|(77,)|const|uint32
const_7473 = relay.const([[2,5,-5,5,7,-3,10,4,-5,-5,7,-3,-1,-1,-10,10,-6,-1,7,2,-2,6,5,5,5,8,-8,-2,7,-3,-10,-8,-7,-7,4,10,-4,-9,-6,-8,4,2,-4,-2,-10,7,-7,-6,3,9,-3,-7,-5,4,1,-2,-8,9,-1,-5,6,-2,-9,9,2,-1,-9,9,-5,5,7,-10,-4,-8,-10,5,-5,10,5,-5,-7,1,-5,10,-3,5,-2,4,-2,10,-5,9,-4,-1,-10,6,-3,3,-7,-9,10,2,-6,8,9,1,5,-4,-9,-7,-1,6,10,-5,6,7,7,8,6,-3,-5,10,4,-8,9,2,10,6,-1,5,5,1,-3,-7,-6,5,5,-3,7,2,9,-6,5,-7,2,-4,-7,-1,6,9,-8,-3,-8,-2],[8,-3,-1,5,10,4,5,-1,7,-3,1,6,6,2,6,3,1,10,-2,10,7,5,6,-6,-9,-7,-1,-10,2,3,10,-1,-1,-5,-8,-6,-2,10,-9,2,-5,10,4,3,6,4,-3,6,-10,8,5,4,4,-7,8,3,-8,9,5,-8,9,6,8,7,-3,5,-8,-7,-3,-7,4,6,5,6,7,-10,7,-2,7,1,4,-10,-5,7,3,-10,-4,-9,-10,-8,10,-5,5,9,9,-4,8,-7,2,2,8,2,-6,10,7,-5,5,1,-9,3,-4,3,10,-6,4,10,10,5,-3,4,-2,-7,8,8,-2,-7,8,8,-10,2,4,9,4,-2,8,8,-2,8,5,-1,-8,3,8,4,8,5,6,6,5,-6,3,-4,9,6],[9,2,6,3,-9,-2,-1,-10,1,6,3,1,-7,10,-9,1,4,5,-3,3,-3,10,4,-2,6,-10,-1,-5,-6,-4,1,-2,1,4,8,-7,-2,7,-6,10,-7,1,3,-6,-10,5,8,-8,-7,-4,-10,7,9,-10,3,9,2,9,7,-6,6,10,-9,4,1,-2,-10,-4,3,5,4,5,5,3,9,-1,-1,10,1,7,-3,-2,-9,3,-10,7,2,2,-6,-1,4,-2,5,4,-6,-8,1,-4,-6,-2,5,2,1,-9,9,-4,2,-8,5,-2,5,2,10,6,-4,4,-6,-1,2,-4,7,-6,3,7,5,1,-9,-6,10,9,-8,3,1,3,-1,-8,6,-1,-7,-6,-10,-4,9,-10,-4,1,3,-8,-8,-10,9,-1,-2,-1],[-3,-3,4,-1,-1,-2,-1,-7,-8,1,-7,7,8,10,-2,-1,7,-5,-3,-4,1,-9,8,9,2,-2,-10,6,8,-10,-6,5,-4,6,9,4,-3,-4,-1,-7,-10,4,9,-10,6,9,-10,5,7,3,-1,-7,2,-7,2,-7,-4,-6,3,-2,-5,-2,7,9,1,1,-1,-6,8,7,7,6,-9,6,6,2,3,6,-1,4,-7,4,1,-2,-3,-1,-4,-6,7,6,2,-7,-2,-2,8,-5,-3,6,8,5,6,6,4,5,-3,-7,9,-7,6,3,7,2,8,-6,-5,-10,8,3,9,5,8,-5,5,7,-3,-9,2,-2,9,-9,-2,5,6,-2,-3,6,-9,8,3,7,-8,8,-8,-10,-2,-1,-7,-4,2,7,3,7,-4,-7],[-10,5,-1,-8,5,7,-5,10,3,-7,10,-10,-7,8,-2,10,-1,10,10,-2,5,2,6,-4,-8,3,4,4,10,5,-6,4,2,9,1,6,-1,-8,4,7,2,1,-3,1,8,-5,-3,-4,-2,-6,6,-1,-2,-5,10,10,2,-9,-8,-8,6,-3,-2,-3,-9,1,3,-4,2,1,3,-5,-5,-10,5,-9,3,2,-6,4,-6,-3,-7,-3,-8,1,8,-6,2,-5,-6,-10,6,-6,10,10,-3,4,9,10,-4,9,-9,-4,-1,-8,3,7,3,-2,1,7,-4,-5,8,10,-8,-5,-4,-6,8,-5,3,10,5,-6,-3,-2,6,2,5,-8,-3,-8,2,3,9,2,-1,-5,-8,5,-6,10,6,-5,-4,-6,8,3,9,1,-5,9],[7,2,-6,7,-6,5,-9,-5,-5,-9,4,-2,-7,2,-6,-9,4,8,-10,4,-4,-10,-1,-5,5,-9,5,3,-4,7,5,-3,-9,10,8,7,-5,6,-1,4,6,-6,-7,-4,-5,1,6,8,-6,7,4,-7,-3,7,-3,-2,4,-9,-9,2,-1,4,8,5,2,-10,-7,7,10,-2,5,-2,-1,10,4,-6,8,4,-5,9,-10,6,-8,7,-7,10,4,10,5,-7,-3,-5,4,6,10,-7,-6,10,-5,1,6,3,5,5,-5,-10,7,9,7,-1,5,-9,-10,-7,4,7,1,-9,-3,-8,-9,9,6,-7,5,9,-5,-1,7,-2,-5,-2,10,3,-10,-4,-9,-4,10,9,-7,-5,9,9,-1,-9,-1,3,6,9,-6,4,-5,-2],[8,-10,10,-9,-1,-6,-3,-1,8,8,-7,-8,9,8,-8,8,-2,3,6,-4,2,1,5,-10,5,4,6,-5,-6,10,5,-2,-8,2,8,-3,6,-6,6,-3,-7,-3,1,-7,-4,2,6,-8,-10,-10,-6,7,-7,-2,-10,-5,2,-9,9,1,-4,3,-9,-4,-3,7,7,3,8,8,10,6,-1,-8,-2,4,-4,-6,9,-3,-4,4,-6,-5,4,-4,-7,10,-7,8,7,-7,-8,5,-5,-2,1,-10,4,-1,9,5,-8,-3,3,-6,3,1,-8,-1,-7,2,8,4,7,2,-3,-3,-4,-5,10,-7,-7,-6,-7,8,9,-3,-1,-3,-2,-8,4,5,-8,4,2,-2,-10,-5,-7,-10,-2,7,9,6,5,-8,3,-8,4,10,-5,-4]], dtype = "uint32")#candidate|7473|(7, 154)|const|uint32
const_7474 = relay.const([1.568412,8.457118,-4.159136,-9.957785,-1.810072,2.269052,3.046581,3.414288,2.015017,-2.997578,7.948464,-6.783485,-6.321157,0.021383,9.530344,0.942859,-4.552412,3.918143,0.432620,5.095038,6.150709,-8.549596,-5.606777,-8.685027,-8.355569,-4.849789,6.076665,0.881669,-1.232415,3.216369,1.985901,-2.567139,-7.070194,-9.213099,-2.475891,7.448725,-0.025214,-6.116568,8.802030,6.366618,8.499684,-3.504479,-8.923194,-7.969751,-7.721787,-2.527634,1.875541,-5.149502,0.818777,1.794618,-0.088330,2.034489,0.383759,0.512296,-3.991613,-0.763865,6.480739,7.647788,0.853549,-3.225859,2.892376,3.863340,3.413986,-7.268042,-8.982216,-0.263865,7.751478,1.441219,-3.647833,4.780287,5.722646,-8.593789,-7.345420,8.502778,-0.042663,-6.097721,-2.576847,-3.684899,4.793706,-6.827783,-3.611553,-3.604193,-2.926972,-4.567690,2.365844,-3.612006,-6.451139,0.606183,-2.277591,-6.159505,-4.038995,-4.219206,-8.088737,-7.674936,-9.499441,2.339577,-6.150330,-6.547854,8.211880,8.925931,-2.050789,-1.959978,-4.026964,-8.358114,-3.411919,0.486778,0.437404,4.711411,-1.920058,7.967303,6.474313,-4.747234,-6.325991,-5.085597,6.173211,-7.399767,0.106310,-9.689800,-1.814582,-8.636800,1.952549,8.195197,-9.940539,-3.404889,1.813821,6.417037,-9.311966,-7.487772,-2.529107,8.046446,-7.476825,7.510337,-9.109932,2.050260,-8.948904,4.214294,-8.474305,-1.943378,3.413348,4.774480,-0.595372,5.627226,-4.707760,-4.456218,9.802872,3.190852,9.033223,1.692237,-0.984517,9.766599,6.716984,8.333856,4.674689,-2.976030,-6.258078,8.375090,-5.507847,-5.894187,-1.953315,9.534123,-6.084781,8.678905,7.683782,0.903393,-7.686942,4.368045,2.722205,0.595989,-6.438731,5.777399,1.485236,-6.312105,-3.765995,8.778371,0.868395,-2.087310,5.539951,5.725788,-2.240750,-5.422785,4.906039,-3.461975,-7.521808,-5.980479,4.620664,-6.482491,-6.610141,-5.352014,5.645314,-3.512476,-8.230432,-5.448029,-8.093947,4.278548,-3.597226,3.889978,8.511519,-5.741383,8.568019,-7.534319,-7.154474,-3.529652,6.670220,7.800995,-8.929100,3.557639,-3.112360,-8.734473,-2.025092,-7.757235,2.926977,-6.342372,1.130598,5.746760,9.886250,-8.811991,-2.638317,5.433317,4.492543,-5.132762,-9.086321,5.488095,0.376379,4.207822,5.569453,-0.795292,-9.623011,5.635920,0.826053,-3.912069,-0.851164,-5.385157,5.767627,1.520040,4.617712,-0.311463,9.223238,-7.997751,6.013673,-7.061027,8.537177,-1.771374,-1.326880,-8.081600,-2.608085,-7.011166,3.489380,2.895267,-8.972908,6.752896,-6.343526,9.982208,1.126673,-6.607286,-2.166222,5.275098,4.872782,5.567456,0.120212,6.576831,-5.935850,6.284004,-2.744521,2.075145,1.488296,-9.528325,-8.404139,0.995293,-5.151470,2.841982,4.942329,-5.008301,-3.894158,-6.918799,8.129549,7.609074,2.605849,0.930061,0.874717,1.168349,-0.117144,-6.070980,0.111196,-2.131951,1.449312,-6.889166,5.880857,3.670120,-2.280480,8.643039,4.652598,-5.070933,7.922566,-3.109005,-0.754076,0.778842,-5.323501,6.942915,-6.223708,0.028446,5.452714,-5.899545,-5.281600,-7.326901,2.284389,0.867579,-1.305513,5.736180,2.436549,-8.821310,1.905565,-4.771693,7.113292,-5.356956,-7.851376,5.671712,8.455280,-4.166748,1.107652,2.978004,-8.734193,9.767410,-3.442370,4.930002,7.344368,3.480862,8.727644,-1.565462,2.779542,-2.730341,-8.649918,-5.570925,9.090148,3.807836,9.740795,7.253922,4.390215,2.440776,-9.477995,-6.783423,-4.911034,-7.530592,2.763367,6.238043,1.401835,-9.711282,2.800227,-6.621293,2.177368,-8.556144,-8.996787,3.962174,-9.101054,7.602701,6.225893,-8.442999,9.288406,3.947611,7.307135,1.938508,1.555237,-9.313527,-0.641588,5.463048,0.873528,3.748619,-4.400450,1.572893,7.275148,7.623868,-4.260281,-8.149867,-4.182014,4.846929,-9.261004,2.186913,-9.538420,9.703415,-9.326577,5.570323,-1.805517,4.405726,8.064291,5.494337,3.350132,4.953648,3.575132,2.739015,4.161351,7.773998,8.868078,5.360502,1.832672,2.356291,-8.838846,7.441507,3.887198,6.472980,0.133269,9.973060,9.070712,6.161483,-1.984835,-4.395836,0.620161,-7.067974,-4.609726,-7.591311,-2.286118,5.477138,-9.480821,4.412074,0.768103,-3.482509,9.057448,8.311724,-0.865506,6.620560,1.545716,3.708012,-7.138488,-2.139554,9.663884,-7.339229,-3.460359,-2.632659,-7.697769,-6.639296,-9.166304,-0.904039,-0.405074,-8.580582,-9.201635,4.683245,-2.216733,-0.173320,-1.637743,9.885495,-8.465191,4.000279,-1.351097,5.801408,8.601153,-6.923622,9.032941,-0.264185,1.401179,-0.527676,-0.966367,6.122655,-6.582162,8.654860,-7.552419,8.778618,-8.120927,9.264078,-7.989327,2.304385,-7.410006,-7.824132,2.102677,6.085294,6.689035,-9.637188,-6.697633,-6.679909,-5.491918,6.184122,6.272736,6.484737,-4.081434,-6.177968,3.353480,-0.121744,5.872046,3.326053,6.974243,3.863397,9.829780,1.204391,-1.936036,-6.932118,2.669455,6.088708,-8.910641,4.568657,-2.251621,-3.358865,9.156174,9.127495,7.265625,1.071601,-6.265526,3.818547,3.478653,2.729288,8.211229,-4.768606,6.300472,5.114173,-9.900846,-0.474601,-8.139327,-5.489939,-8.069547,-4.612702,9.034538,-2.197910,7.091156,7.386599,-4.554009,-1.363458,-0.549405,3.727519,-0.285462,-5.535036,8.972412,7.764038,9.795398,9.552739,-3.695703,4.931396,-0.593324,3.486932,3.350328,-3.519482,8.828488,9.976915,8.138295,4.323835,3.493435,-7.887362,8.402346,-9.898907,9.933166,-4.460039,-0.666442,7.603186,0.599922,-1.160915,2.100684,2.182567,1.874918,9.889328,4.518948,-7.919905,-7.362798,7.370284,6.559813,-1.699761,5.285458,-4.848438,-2.124285,-6.500355,-8.787118,-6.885473,4.795643,-5.926045,0.410444,3.302447,-0.350161,7.849604,-8.783805,-8.644904,4.815070,4.504178,4.974780,-6.162624,1.221118,-7.042042,1.413626,-5.183622,-2.709882,8.737698,-2.197109,-4.769463,-7.626603,5.981394,-9.659536,-3.278508,-7.410115,-5.227055,3.722933,8.737437,-2.894142,-3.073786,-4.929126,-2.127550,6.909613,-2.423839,4.888789,6.546756,3.517632,-1.456060,-3.192724,9.028628,-5.572078,6.436549,-5.376905,4.209545,-2.417505,-3.846055,-4.164014,7.177235,-1.050832,8.459533,-8.056761,9.650478,2.978884,6.294264,6.719864,-0.965136,-5.944538,6.991438,-8.757860,4.201035,4.214375,7.264449,0.566542,1.681671,9.905627,0.199383,9.217569,1.859740,-1.019524,1.833549,1.148156,-8.713330,6.867384,-4.681180,-7.070392,-4.085973,0.797040,3.936966,-2.589632,-1.956310,4.924700,6.409949,-0.098220,0.292616,3.949097,-5.776861,-5.894218,-7.797799,9.556632,7.472585,3.699262,9.947368,8.634865,7.327931,8.192771,3.728877,4.980349,-7.990414,1.362425,-7.460819,-1.278125,9.590769,7.792807,-1.565522,-4.836711,-7.239991,7.138609,-9.337897,-3.362707,-1.134622,9.550903,-0.819326,-0.181000,0.696152,-3.719924,-3.452858,-1.440116,5.200052,0.853411,-5.281900,6.737253,3.694834,-1.294481,-0.010125,7.909467,2.685505,-0.571394,6.183227,-0.539582,4.715301,1.710924,5.855565,8.862515,9.371012,-5.607942,1.801509,1.618262,-1.533338,-9.410706,-7.518564,3.892099,1.974294,-1.366790,-3.386651,7.546856,0.788563,2.983867,-0.866244,-4.401906,3.912033,-6.042180,-5.872624,-5.490675,2.380068,2.876884,-1.037362,3.132513,5.909404,6.481070,-8.793548,9.339576,0.843917,-7.998867,2.159263,7.118948,6.007472,9.001322,1.578571,-1.531364,0.026280,0.073371,-8.891000,4.899795,-1.496953,6.986017,4.987091,-0.549397,8.520017,-0.553800,6.442559,-6.358792,6.790909,6.666415,5.467474,-5.603519,6.856740,-0.914991,-1.725194,8.325042,-9.012738,-2.545496,2.657628,-9.913144,5.648635,-3.948470,7.226558,-7.121933,-6.222572,7.108705,5.374891,-3.329939,3.065588,0.770833,-5.944592,-8.658793,0.814165,-5.444931,-6.906531,-5.764984,-7.452535,-3.748156,5.387584,-0.291147,-7.992028,7.023575,7.651920,0.301866,-2.998031,4.299324,3.157672,-9.914696,-9.967965,-5.795552,5.954350,-5.908760,7.008843,7.602903,6.706629,-1.771046,-1.567970,-7.065649,-7.234498,-6.144630,-7.944100,5.267998,-5.916350,-5.614713,4.688287,0.287375,0.628022,-7.489308,-7.489136,3.151897,6.205933,-3.566058,1.196921,-5.550269,-5.825244,6.094106,-3.736535,-8.214802,-5.163599,1.178918,2.554340,-9.250889,-2.385806,1.848631,0.127307,1.005493,7.331003,-0.470196,-9.779007,-7.892583,3.018779,8.097462,-9.640676,-8.336449,-3.565608,-8.418053,-1.257536,1.758638,7.167914,-8.117133,3.704339,-9.172089,9.625814,-4.745769,3.674128,-1.012546,-1.939414,-5.795419,3.956114,3.976153,-0.497895,-8.410581,-9.228969,8.882157,-4.712571,-5.919539,8.145760,-9.824359,2.193828,-1.471939,0.873409,-5.733912,-2.683123,2.777256,5.077794,-1.929268,-3.632418,3.082355,-0.118602,7.337980,-6.586739,-6.689106,-6.501061,-9.639145,6.020485,-8.091678,1.971062,-2.145310,8.234504,5.428894,-7.616406,-3.023248,-9.066646,-9.045201,-1.939329,-3.619450,0.482973,6.133573,0.982025,-5.006277,-0.031770,-6.662525,2.029243,-9.813017,-7.336193,6.071181,3.295329,4.157670,1.016185,-3.204637,3.149697,-2.314412,6.175423,-4.536561,3.538697,-8.388951,2.043935,3.558227,8.323194,2.747486,-3.905936,9.310777,-6.650156,6.046577,-6.395973,-9.245111,-9.745809,-7.166277,-9.995166,5.449529,3.268223,7.177681,-4.927142,8.837504,-7.398845,9.684482,-1.167726,-6.889549,0.353660,-8.715351,7.802514,-7.457671,-7.392693,-1.961049,3.608571,-8.053169,9.595983,-7.519593,1.723371,8.306061,-5.173761,-0.848216,3.363279,-2.234589,-1.070552,-2.367673,5.475734,-8.135853,-4.506325,-6.509528,-5.371211,-8.254617,-2.343371,8.912174,5.649130,-9.948675,5.009242,-1.840544,5.216025,7.256645,9.330318,-5.386176,-7.821848,-6.518053,8.163178,2.671912,-6.202531,0.908206,-5.709934,-8.776118,4.930331,3.018124,5.473925,-9.011986,-3.562237,-3.510843,6.570469,-5.534089,8.293643,-6.044815,0.804550,-2.480439,-8.021080,2.232767,-5.105780,-0.089464,-7.997289,-7.724427,8.049798,-8.773331,7.796627,8.616862,4.463173,-2.789086,0.559263,3.952166,-5.730383,-5.582460,1.921067,8.001688,7.936684,-2.450646,-8.461471,6.292587,3.235624,1.418192,-5.555536,3.399255,1.640553,1.847631,2.230843,1.811313,-9.233660,-8.303233,9.613818,-8.286918,6.698252,-9.209085,7.622805,2.633751,-4.250426,9.739585,2.045149,-2.570739,8.356292,7.045049,5.090173,-7.794452,-0.269734,3.718104,0.257269,-0.377681,-4.960498,-2.409049,-5.723385,-2.278742,-0.334428,-6.016309,7.201283,-2.864189,-3.603712,0.850941,8.924268,3.058588,-0.299957,6.907661,-5.159117,-8.774072,7.256651,0.762448,-9.126867,-7.421176,6.357513,-0.845881,7.957229,3.963762,6.462603,8.001089,6.324520,-4.885238,-4.398324,6.697790,-3.028122,5.868795,-1.609490,2.796607,9.378264,5.112629,-0.638624,2.251983,8.900802,3.082926,6.807525,6.720694,-9.322795,-2.692714,5.284107,5.272081,9.420495,0.874753,9.503835,-4.502200,-5.655626,-9.710787,4.773108,1.330692,-6.793564,0.341863,1.339669,-9.164842,1.830679,-6.181242,-5.532807,-4.836611,9.377033,7.303353,-2.018477,4.136084,-4.976890,-6.079310,2.860827,-7.880224,-0.882055,9.792301,-1.592741,3.266217,-7.230799,-5.001584,-5.099334,-7.698844,3.144615,-4.739081,9.234614,-5.338048,1.902308,5.314191,-4.642530,3.430831,-2.256509,5.762161,-5.352188,-4.266867,-4.695019,-7.441974,3.376400,-3.026028,-0.654917,-3.017049,-6.926695,8.755551,3.346175,-6.645392,-1.709397,1.283567,-8.262017,5.773518,0.182914,7.776907,3.384342,-9.324748,-7.803620,8.508437,-6.341489,-8.549111,-5.387382,-8.914173,8.235843,-3.082465,-5.439261,-0.504133,-4.841674,-5.847436,1.017879,9.117116,2.565288,0.635294,1.063077,-2.028465,-7.192421,-6.206445,4.424794,6.662209,-1.309703,-8.665920,2.544137,0.718035,1.695938,2.177736,-8.793457,9.655632,5.052825,2.904636,4.911182,-6.102676,7.842851,-8.742093,4.758128,9.331933,3.562353,1.510815,-0.962400,-9.937585,-2.944483,-9.653281,4.599498,-8.000619,-4.212934,3.337827,7.217479,0.123704,-6.780626,0.137504,8.343794,0.066176,0.439874,5.421427,-7.734077,4.896095,-7.158854,4.524836,4.722278,-2.788320,8.997518,8.756089,7.095991,0.681108,-4.282849,6.432095,1.616118,8.048259,7.587658,-3.986206,-2.055891,-0.352580,3.063182,-1.447355,0.226614,-4.648796,-3.280026,-7.485808,9.075686,-1.522770,-6.003520,6.964512,-0.683319,-5.034890,-4.233112,7.234049,-0.703806,3.931940,0.190269,-5.458256,-2.897002,-1.604093,-2.801659,-2.413678,-6.288547,-3.487074,-1.257440,9.492422,-2.371702,6.690063,-0.563627,0.313464,-0.908159,4.691877,4.654981,6.772814,-9.360994,-2.240790,-3.013670,-3.807286,5.312550,3.092207,7.552025,7.471006,5.651889,-1.424939,6.483449,-0.136604,-1.755339,-5.465118,-4.432106,3.997186,8.488836,4.548159,-7.423319,-1.764662,-4.535269,9.373143,-6.429177,5.159632,7.063393,-9.715660,-3.665447,2.928690,-6.283794,-7.093135,7.760164,4.603239,2.085004,-0.464848,8.372002,-3.811812,-5.875265,8.527605,-0.771714,-4.116153,-3.619133,-8.548670,-6.001444,6.960136,1.561380,9.083530,7.328176,6.015060,9.587061,-4.440458,6.061932,9.266471,-2.728120,-8.727380,6.403356,1.339135,3.679580,-5.423678,0.665574,-5.107653,2.275673,9.790434,7.843557,-5.368595,-4.246343,3.043215,4.586537,8.424381,3.563215,-2.162203,3.969305,-5.561196,4.415184,-1.304286,-6.238888,-6.597343,-6.989429,-3.518933,-3.748834,-5.513056,2.401989,-8.763192,-5.109508,-0.217922,-8.713518,3.737514,-6.512183,-5.410546,-9.034805,-9.056130,-3.518988,6.851933,-8.895470,-1.296106,-4.454621,6.047554,-5.561731,-8.062665,-2.138133,-7.258280,7.826210,-0.798066,1.116011,7.254716,2.330835,-2.490769,-7.634239,-8.108773,2.489628,-6.513203,9.526226,7.558014,4.270013,4.909375,-7.630117,-0.618533,8.186634,-8.880823,-9.914711,-3.961557,6.490268,4.155379,-3.798386,0.957688,-0.303385,5.476933,4.719549,0.991187,-1.021888,-4.789410,-3.076708,-7.546516,7.091879,-7.212041,1.333825,1.535429,3.978305,-2.555518,-4.597397,6.990823,4.104433,1.854182,2.176259,-2.828944,7.591877,-8.187283,8.822132,6.002201,4.713678,-9.928162,-7.801083,-2.155710,-5.209344,-3.412089,-5.305986,4.939237,-7.208457,-9.344310,9.846386,-1.936640,-9.355722,-0.866528,4.168000,-8.932442,9.146545,8.687457,9.240485,1.044897,5.817165,-8.365644,1.206044,7.791242,-3.745940,6.527236,-2.508758,-2.817611,1.252264,9.170527,-2.033320,3.768381,-2.289555,-5.499908,-3.375126,-1.422629,0.263791,0.881882,-4.720087,-6.311477,2.847327,6.757926,5.418672,-5.791810,-1.271691,-8.451878,4.063080,4.451584,-1.226084,3.458014,7.842474,-6.967245,4.485149,-5.764074,6.669594,-3.688617,-5.071205,-3.641150,-0.757054,-4.393973,-8.683370,7.975550,0.773357,-2.538280,-2.001678,-1.457131,2.446517,-3.640735,5.326686,-6.983655,-1.136761,8.974553,-3.167121,-9.379365,-1.935808,-4.225850,9.112902,-6.311590,-0.013946,7.318455,0.089827,-1.551626,-9.452836,3.634402,1.467263,-7.853611,-6.673803,9.664554,-1.666752,8.321754,-0.206117,3.107607,-7.319601,-3.494702,-8.732632,3.692384,-4.688988,-7.879530,5.259096,-5.041545,-1.286974,-8.567300,-0.928456,9.944541,9.059416,5.814877,-5.081887,-4.616786,-5.185308,6.490741,-0.185772,-5.804255,9.590506,5.651973,-9.061358,9.152517,0.446166,-0.463635,2.375789,-4.063295,-7.627163,5.382380,-2.765769,2.846058,-8.536499,-3.178807,-7.295711,8.584330,8.793908,-5.129625,-6.248150,-3.170214,6.201031,9.392567,5.309642,1.998165,1.670405,-8.454715,-4.755140,7.390030,6.241615,3.206447,-5.952652,0.840487,-1.222669,-1.117307,6.847403,-5.427719,6.893040,-8.647455,1.419779,-5.837605,-3.105734,-9.332170,0.125152,1.183765,4.817687,-1.539734,-7.570706,-1.285360,6.309406,6.462671,9.454199,3.332734,-5.707341,7.939888,9.700163,-8.847106,0.540693,7.590830,-7.606115,4.136709,8.729397,-7.514846,7.492660,-2.555412,9.578374,2.893537,5.147838,0.054961,-2.083557,8.498403,-9.356690,9.288540,0.168109,-0.036589,-5.673335,2.013006,5.701653,8.329582,-7.669278,9.937350,0.028148,5.320989,6.934040,-0.043449,4.026110,-4.231546,-6.905758,0.325648,-6.280963,7.358875,9.098986,-9.418622,-1.002216,1.599483,-8.752119,-0.255495,-3.589686,-7.245776,-5.486229,0.663014,8.122094,-6.793144,-9.729347,2.812605,9.555717,5.592163,2.414822,-8.692252,7.891256,8.694033,-9.097429,9.223630,5.857848,3.300436,6.304370,3.176912,-2.857305,-1.150428,-8.733482,6.002553,-1.556497,-1.036628,-4.927995,-4.161279,4.130521,3.039209,1.421298,-0.702429,4.567329,0.323348,-6.486983,1.482663,-3.872859,4.842258,7.009484,-1.135720,0.579147,7.879653,8.801685,1.728377,6.729663,9.611302,-1.039254,0.010487,6.665963,-7.477399,-2.587664,-8.546208,8.981667,0.165398,-3.355772,-4.122529,-2.159245,2.892301,8.962244,-7.000015,-4.150398,-3.482527,0.345957,-3.893307,-0.126123,9.627601,-8.036664,1.727140,8.034001,-3.515834,-5.371849,-6.737088,-7.914150,2.779496,-9.041157,3.255384,9.490330,6.668690,4.073737,2.060029,-5.878726,-1.422084,-7.567643,-1.618596,-0.681690,1.371465,-1.920901,-4.705357,3.878247,-3.704459,0.431190,-2.998970,7.946643,-4.866460,4.892236,-9.260906,-7.610312,-9.241456,-0.779626,-8.073994,0.683381,-5.113633,1.365006,1.857543,-1.467057,4.908981,0.100706,-3.461194,7.142572,3.852421,-8.125787,3.775765,4.263333,6.929731,-6.490834,-5.725799,3.313909,3.294885,9.402406,4.445111,0.468125,-9.219441,3.426606,3.772168,3.904200,5.703092,3.872468,-9.631686,4.001011,-7.619785,7.208081,5.487278,3.878636,-7.356000,2.215314,-4.639641,-6.923166,3.871587,6.108133,-6.485155,-6.529284,-3.066473,-1.518415,-0.616479,-1.666257,-6.974997,3.020440,-0.136610,-3.296101,-3.715546,8.328875,-1.775788,8.319944,2.900281,7.998959,8.152143,9.941554,2.721211,-7.817197,5.261117,-4.556835,-7.302040,-1.148077,7.558767,6.772579,-9.645910,-2.672602,-5.992126,0.677764,9.665326,-6.831940,-4.078428,-5.010087,1.456929,2.983354,-0.802695,-5.160675,8.559602,9.600790,-6.784598,-8.136063,0.676964,2.413933,-2.548248,7.364651,7.599721,-3.466229,-0.593888,3.251864,8.091226,-5.728552,4.425852,7.373610,6.502912,8.060183,8.201899,3.004206,-8.668807,7.230079,6.251708,-5.496487,-5.373413,-5.925589,-3.547760,-0.680279,-0.669028,2.851916,-1.151894,-9.738181,6.064762,6.834799,-8.748240,-8.416260,1.158781,1.392726,-7.602266,-9.788737,5.821133,2.781817,-7.230723,6.950830,9.580156,-3.355530,6.234041,4.407398,-3.146308,-3.927817,6.939598,-4.101068,-4.188429,0.627818,8.257020,6.065598,-5.197948,-6.455098,-9.693835,9.089595,-3.245609,5.637764,1.732165,6.526359,8.030606,-6.497147,-5.477686,-7.012157,-6.359712,4.789576,0.519783,-9.550606,-6.467666,-2.958875,5.581148,-3.422508,-3.838676,6.707664,-8.034915,9.258704,-7.235697,2.599034,-2.414237,0.881315,6.465685,5.155284,0.746124,8.480890,-3.992659,0.818776,0.043324,-2.016986,5.125037,1.912560,-7.954243,-9.741196,-0.662952,1.821257,0.541799,-1.542336,5.640073,1.372652,9.194301,-6.985971,-0.955255,5.888198,9.421359,0.680319,-7.281917,4.014120,-7.265207,7.812299,9.027895,0.342036,-9.236380,3.517371,0.056951,-9.431267,3.025627,7.201954,-8.114975,-9.808731,-9.945047,6.459595,-5.018698,1.683481,-9.555695,-4.360048,8.776150,-6.085442,2.490072,2.771430,-4.421276,2.339311,7.117267,8.947797,-5.005260,6.083781,-0.980869,3.678816,9.052325,2.149686,8.103750,3.991146,0.761585,-0.888902,-6.627992,-6.464273,-5.948487,-7.007790,-5.122206,1.317632,2.398349,9.551854,4.427734,7.577299,5.429014,-1.056989,-7.787694,0.957163,8.238818,-4.679577,8.656552,-4.261834,-2.302786,3.771695,4.321029,6.499734,-0.438733,-9.150266,2.134168,-2.152041,-9.817543,-0.944204,1.353114,-1.387144,7.785145,-7.493995,9.790354,-5.725278,7.659547,-8.552984,2.278555,-8.722908,-3.138215,6.418925,-6.705865,-6.231796,2.189353,1.139752,-9.097045,4.085463,-7.957129,8.499710,5.857769,2.162431,3.567072,2.196383,-1.675343,-5.579668,-4.930086,-0.761858,-1.397837,2.379049,2.698059,-7.664608,-5.901044,-1.775661,1.909370,7.668132,7.681160,5.679965,-1.141713,4.993558,-0.506653,-6.295429,-8.667597,6.301762,1.056073,-6.222526,8.611965,8.640347,-4.534242,-5.319776,6.491282,-4.302620,7.266920,2.950600,-5.786065,-6.212655,9.393865,0.650706,4.498776,-2.080177,9.523339,-3.433466,7.755381,4.795031,8.393637,4.449597,4.944588,2.773778,9.721657,-3.023022,-7.545140,0.325030,2.663886,8.132021,9.717826,-0.942630,-1.064616,-6.419850,-1.406779,8.348924,3.867161,-0.442342,0.010121,7.048565,-1.936698,-9.230651,-2.401180,-5.293183,0.081048,8.674479,8.189186,7.590355,-4.631532,5.311362,6.941350,-3.570250,3.430594,4.076330,-8.583990,-1.430001,0.265425,8.654209,-5.395666,7.022284,5.879610,-3.836673,-4.204612,-2.481462,2.225885,1.369480,8.399897,-1.427217,-4.508955,5.425926,-8.799344,-7.715622,-1.089490,-2.271321,3.757820,-6.605735,-1.491874,-3.109140,4.015790,8.343248,-6.551895,9.742557,-4.279483,1.983410,-4.716393,9.612440,-9.834528,-7.199112,-8.531767,4.159457,-8.125388,-5.195195,-4.844453,-1.645541,-7.486130,9.525678,-4.195408,-2.846677,-1.834446,-8.267501,-7.892655,2.969686,0.599258,2.161335,-5.037271,0.956614,3.809817,6.532483,-1.695328,5.857632,4.716103,-8.590339,3.964123,-6.726939,-1.481524,-1.340311,1.448689,1.856095,4.777538,-4.176784,1.044639,8.746081,3.291175,-3.114099,-8.718885,-2.317489,-0.228836,9.783294,8.796954,1.932095,-8.950107,-9.545475,-6.438676,-4.744009,0.667995,7.693335,0.884772,8.618558,-9.031209,-1.217396,7.031031,-3.291471,4.508432,4.585563,-2.888659,-8.837048,8.903900,-5.656069,-8.069121,9.734725,9.187703,-8.143920,5.049554,2.960967,-4.222176,-0.783720,0.855382,4.815733,5.277683,0.891427,-7.914748,-2.754353,1.107729,7.004408,-8.754281,9.303898,7.984054,-7.829880,9.750345,-9.437804,4.997881,9.927952,-1.332198,-5.701410,6.185407,2.180160,7.503900,3.860239,-9.071316,8.554676,-1.532954,-2.079360,-0.162294,-1.452303,-7.286339,0.274486,-7.450254,-6.433060,-5.911472,-7.239359,1.065259,6.362138,4.318202,4.100814,0.621409,-4.881829,4.502344,3.067191,9.632724,5.529681,6.672048,-4.632146,7.583834,-8.491023,1.000019,4.165200,-2.393723,1.859519,-4.664264,4.117728,5.873835,2.111110,-1.966838,5.428214,-8.910103,1.797925,8.671815,8.892481,0.640039,-9.248960,-4.833899,7.633954,-6.194285,6.193792,9.626264,-3.962092,-4.573777,5.191000,5.297346,9.764323,5.759932,9.601000,-8.073031,6.797800,-9.391192,-2.743362,4.362667,5.606708,-3.891908,-5.567385,6.053734,5.538731,-6.470198,-5.186188,5.587727,-5.619476,-1.386768,0.363422,-0.548819,-1.175598,8.305366,-6.546222,-1.757973,-4.958387,-7.649951,-4.576190,-2.266033,4.224341,-5.490577,-9.797040,9.390837,-3.012844,-5.923868,-1.180259,-8.656577,1.960037,7.863286,2.537143,6.164409,0.693884,-2.320504,4.352529,6.097080,-5.320700,-3.574895,4.362409,2.825529,0.767205,4.552447,-5.162890,2.933846,3.790289,7.358832,-3.200596,1.593559,-0.478180,-9.841141,-9.287245,3.103529,3.595905,8.546470,7.992417,8.679106,-9.368759,1.758894,-5.104453,-4.966957,4.088031,-9.859776,-3.093305,1.951975,-8.123366,-0.111251,2.880523,0.788775,1.020542,3.461015,1.607158,0.672226,-2.722658,-3.104034,9.536123,-7.296268,6.578273,6.544889,-8.881399,-8.310710,-3.207005,4.083758,-0.061484,-7.227046,6.627896,8.771746,-0.848759,-2.006171,7.234159,-9.702551,9.096980,1.435629,9.118667,-1.973639,-6.407551,-3.336425,3.926078,-9.796408,-7.926765,0.812952,8.395338,-1.701348,-0.570797,-8.161439,-1.563378,-3.440562,6.276406,-5.061310,-1.028598,9.303902,8.257393,0.237086,6.473747,7.630508,5.420449,-4.233284,3.287195,-5.272033,1.403290,1.472847,1.249503,-1.732345,4.173568,-7.378453,6.186108,-8.318965,7.678687], dtype = "float32")#candidate|7474|(2352,)|const|float32
call_7471 = relay.TupleGetItem(func_7350_call(relay.reshape(const_7472.astype('uint32'), [77,]), relay.reshape(const_7473.astype('uint32'), [1078,]), relay.reshape(const_7474.astype('float32'), [588, 4]), ), 4)
call_7475 = relay.TupleGetItem(func_7354_call(relay.reshape(const_7472.astype('uint32'), [77,]), relay.reshape(const_7473.astype('uint32'), [1078,]), relay.reshape(const_7474.astype('float32'), [588, 4]), ), 4)
var_7495 = relay.var("var_7495", dtype = "uint32", shape = (7, 154))#candidate|7495|(7, 154)|var|uint32
bop_7496 = relay.not_equal(const_7473.astype('bool'), relay.reshape(var_7495.astype('bool'), relay.shape_of(const_7473))) # shape=(7, 154)
var_7502 = relay.var("var_7502", dtype = "uint32", shape = (77,))#candidate|7502|(77,)|var|uint32
bop_7503 = relay.floor_divide(const_7472.astype('float32'), relay.reshape(var_7502.astype('float32'), relay.shape_of(const_7472))) # shape=(77,)
output = relay.Tuple([call_7466,call_7471,const_7474,bop_7496,bop_7503,])
output2 = relay.Tuple([call_7467,call_7475,const_7474,bop_7496,bop_7503,])
func_7508 = relay.Function([var_7495,var_7502,], output)
mod['func_7508'] = func_7508
mod = relay.transform.InferType()(mod)
var_7509 = relay.var("var_7509", dtype = "uint32", shape = (7, 154))#candidate|7509|(7, 154)|var|uint32
var_7510 = relay.var("var_7510", dtype = "uint32", shape = (77,))#candidate|7510|(77,)|var|uint32
output = func_7508(var_7509,var_7510,)
func_7511 = relay.Function([var_7509,var_7510,], output)
mutated_mod['func_7511'] = func_7511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_7520 = relay.TupleGetItem(func_7042_call(), 0)
call_7521 = relay.TupleGetItem(func_7044_call(), 0)
func_7450_call = mod.get_global_var('func_7450')
func_7453_call = mutated_mod.get_global_var('func_7453')
const_7525 = relay.const([-9.642200,4.957415,8.339477,6.795469,4.995387,-1.005523,-9.804208,-0.756000,-8.035786,-2.704777,-3.974909,-5.826804,6.902282,-6.793151,-2.969192,-3.444510,-1.218155,-4.923072,-2.131440,0.242057,4.674714,-5.968840,-1.729453,-3.535476,8.311458,-4.462965,-9.069016,-6.808795,7.001987,5.164517,-8.931211,-6.469638,3.586961,-1.178162,-1.165480,1.370689,6.277116,7.261571,2.696334,-5.566884,5.171720,-2.518956,-3.318038,3.732653,-6.399528,8.264806,-1.718702,5.285880,5.386857,-3.869349,4.858087,9.261140,1.791334,-8.303215,-1.937541,7.220058,3.398289,-7.202088,-9.533744,-5.071697,-4.106552,-6.427977,9.669324,-9.296854,5.773800,1.791369,-1.593936,-2.668056,4.669914,-3.542862,9.963466,6.165428,-8.459079,-2.909949,-3.145498,4.165820,5.822710,2.956703,7.816574,9.258109,-7.913483,-4.240113,4.917720,-2.639132,3.993944,-9.050658,-6.085748,-6.301115,1.584952,-0.418811,7.033390,-2.259420,6.193992,8.934132,5.723998,7.661828,4.873682,1.860232,-4.678633,-5.825734,-2.613264,7.665002,-5.559355,5.289557,-1.421651,3.087644,3.623357,-8.545278,-5.316889,-4.046857,-0.814341,2.657312,4.241707,-9.708331,9.240613,5.803726,-5.230153,-7.615492,-6.512574,-1.485276,2.775899,-4.124974,-5.664274,9.712321,7.426034,-7.176232,-3.759546,8.742617,-2.945980,2.877846,-5.220045,-0.696404,8.731975,-1.977527,-2.191030,1.591959,-8.454003,8.943749,-2.421205,6.749321,-6.843104,-3.340914,-2.827229,-3.386955,4.965541,-8.690038,-4.756527,-4.260307,0.254470,-1.915488,-9.571925,-4.955595,3.290342,5.534202,-2.481060,7.661072,-4.176879,9.341648,-9.877912,-6.821797,-9.073420,6.827236,4.418346,-1.519138,-0.896684,-7.343885,-5.346329,-3.583062,-8.166107,-9.601938,-0.010144,6.880803,4.972068,5.212490,-0.080905,6.223602,-3.091906,-6.411331,1.322975,0.309527,8.417435,-9.992738,-6.925025,9.596765,-6.565143,1.398539,-5.234819,7.093448,-9.938493,3.835489,-1.665185,0.827778,6.388819,-0.520266,-8.541310,1.969420,-2.700637,-7.389202,-4.310117,5.433977,7.708296,9.718682,-4.076735,6.081427,-5.760598,9.994282,3.727513,2.040344,-8.872036,7.664186,8.555752,-3.980857,-5.305940,-5.733861,0.645536,1.084899,5.923453,-9.012527,-6.560803,-1.628535,-0.444774,9.708899,-9.480244,-2.843673,0.562655,8.950376,-2.989355,-2.548341,-3.316538,2.968482,-2.140855,-4.709853,-1.273086,4.819370,-0.930769,3.414747,-4.541446,6.948973,7.730015,2.876995,2.765788,-4.052986,0.793459,9.144692,5.717532,1.460789,3.204995,3.042997,-3.913978,-8.196309,-4.438512,7.873064,7.814324,9.248010,-3.426653,5.493566,-6.927310,-9.852525,-1.746323,5.632631,-0.171662,0.147520,5.279979,3.421514,-0.470234,-0.072175,1.275296,1.952712,-5.233509,-1.815280,5.116026,3.641542,5.803713,0.691156,0.353921,9.581918,1.181278,9.251772,-7.846332,-2.073948,5.800196,9.782817,-6.784153,7.703308,-6.672396,-5.777005,3.676024,7.722927,2.451354,-0.154358,9.523726,-1.465539,-8.234165,4.688487,0.169131,1.169234,7.321723,8.689151,9.482271,-9.729037,-6.059648,-3.455653,-4.418110,-3.844209,-4.351487,-4.140192,1.126538,3.139020,3.708852,-9.931508,-1.377265,3.403525,-7.678360,-1.101057,5.864135,8.599807,0.071668,5.386094,8.310823,4.806489,-1.391191,-4.982814,-4.663321,4.086883,-1.840799,-2.407075,-8.518349,-6.836593,7.590181,-1.899409,-2.821461,-4.518138,3.631885,8.399264,-9.563544,4.498026,1.755515,-6.606653,9.431683,6.777865,3.736164,-6.869059,2.315125,-2.338730,6.253009,3.900524,0.302938,1.824274,2.378993,0.791815,1.847962,-9.644733,-6.191045,4.982695,-3.407930,-7.972765,-9.408545,1.752416,1.173880,-2.509510,0.434956,-5.887380,-4.399801,0.585116,3.574057,8.594182,8.293985,0.638968,-1.565298,0.090475,6.527235,-5.939840,0.737159,3.699920,5.347134,0.624775,6.062417,7.802207,-2.706422,1.949725,-0.605033,-9.792479,-1.989866,9.181062,-8.682384,1.760348,-7.243080,-3.427196,-8.690180,4.106503,2.418917,-1.809376,-0.959695,-6.882445,-4.403243,-1.751215,-1.057720,4.273183,-9.221419,7.508949,0.195587,-0.423537,-1.956431,7.997455,-4.078495,7.217130,-8.098755,-2.532011,4.050363,7.728023,-9.349333,-9.267824,-4.126074,8.727554,5.034390,-4.680315,-6.943157,-7.747867,8.889432,6.716657,-7.343271,2.325826,-8.954387,-7.674236,8.343354,9.648183,1.584227,-2.089291,4.571846,9.217387,3.957882,-1.201856,-4.610180,-5.797069,-3.587699,-6.191782,-8.469095,4.297472,0.943877,6.718000,0.979997,9.919319,-7.752830,0.316573,3.149569,-4.509327,-7.614052,-5.016452,-8.940409,-6.268906], dtype = "float32")#candidate|7525|(450,)|const|float32
call_7524 = relay.TupleGetItem(func_7450_call(relay.reshape(call_7520.astype('int64'), [5, 3, 9]), relay.reshape(const_7525.astype('float32'), [150, 3]), ), 1)
call_7526 = relay.TupleGetItem(func_7453_call(relay.reshape(call_7520.astype('int64'), [5, 3, 9]), relay.reshape(const_7525.astype('float32'), [150, 3]), ), 1)
func_7424_call = mod.get_global_var('func_7424')
func_7427_call = mutated_mod.get_global_var('func_7427')
const_7528 = relay.const([-2,-3,2,4,10,7,5,10,-6,-2,-8,-7,-3,1,-1,3,3,-10,1,-9,3,5,-5,-5,9,-5,8,-3,-4,6,-7,1,-8,-4,-6,-8,-10,9,9,6,1,-6,1,9,6,-1,6,-2,2,1,-1,-8,-5,4,-1,1,10,-3,5,-6,-1,3,-10,2,-2,-9,6,-2,4,-5,6,9,1,9,-7,-6,-4], dtype = "uint32")#candidate|7528|(77,)|const|uint32
var_7529 = relay.var("var_7529", dtype = "uint32", shape = (1078,))#candidate|7529|(1078,)|var|uint32
call_7527 = relay.TupleGetItem(func_7424_call(relay.reshape(const_7528.astype('uint32'), [77, 1]), relay.reshape(var_7529.astype('uint32'), [7, 154]), ), 3)
call_7530 = relay.TupleGetItem(func_7427_call(relay.reshape(const_7528.astype('uint32'), [77, 1]), relay.reshape(var_7529.astype('uint32'), [7, 154]), ), 3)
output = relay.Tuple([call_7520,call_7524,const_7525,call_7527,const_7528,var_7529,])
output2 = relay.Tuple([call_7521,call_7526,const_7525,call_7530,const_7528,var_7529,])
func_7534 = relay.Function([var_7529,], output)
mod['func_7534'] = func_7534
mod = relay.transform.InferType()(mod)
mutated_mod['func_7534'] = func_7534
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7535 = relay.var("var_7535", dtype = "uint32", shape = (1078,))#candidate|7535|(1078,)|var|uint32
func_7534_call = mutated_mod.get_global_var('func_7534')
call_7536 = func_7534_call(var_7535)
output = call_7536
func_7537 = relay.Function([var_7535], output)
mutated_mod['func_7537'] = func_7537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7088_call = mod.get_global_var('func_7088')
func_7089_call = mutated_mod.get_global_var('func_7089')
call_7561 = func_7088_call()
call_7562 = func_7088_call()
func_6881_call = mod.get_global_var('func_6881')
func_6885_call = mutated_mod.get_global_var('func_6885')
const_7584 = relay.const(-1.294906, dtype = "float32")#candidate|7584|()|const|float32
const_7585 = relay.const([[5.175497,1.863695,3.078782,4.162120],[2.575614,4.079622,2.925847,1.158515],[-9.170073,7.247792,7.229822,3.476797],[-9.936754,9.593659,-4.756630,-8.353993],[9.812738,-1.032174,8.393344,9.761705],[-7.311921,6.974747,7.206911,-2.886438],[-9.073176,9.810532,-7.680873,7.230518],[6.629573,-6.314283,-7.335433,6.442466],[-8.351680,-3.944313,3.132630,2.678209],[6.235929,7.861165,0.913080,-2.051824],[-4.601545,8.244630,3.853673,6.765258],[4.815046,-3.785900,3.862226,3.623412],[3.848460,7.423463,3.090338,-2.069278],[-8.241827,5.246522,4.905183,5.003898],[4.047926,-1.689438,-4.025682,1.229381],[2.965289,7.682336,6.424493,1.007200],[8.192786,6.925156,3.363695,3.463777],[-8.647383,0.763226,-8.031950,8.723108],[4.511036,-4.499414,3.526159,6.230317],[9.591327,5.656041,-4.298003,6.490151],[-5.761489,-1.021092,-1.480403,6.427548],[7.572749,-4.964674,6.774621,7.200805],[-9.393774,-8.181695,-0.403506,-0.126465],[4.174972,-2.627780,-6.234442,8.748159],[2.330135,-7.008424,7.604987,-4.967096],[-4.465624,-4.776635,-5.732737,-2.527956],[-5.471671,-9.527231,0.982198,-2.057078],[3.433761,-2.411454,9.234589,-9.854957],[6.967111,-9.858489,-7.213221,8.791489],[-5.225297,-7.623072,-9.466361,3.136567],[-9.779769,6.012014,-4.590227,-0.505014],[-7.060114,-4.692669,-6.984383,-0.158131],[4.593626,-0.378731,4.145398,5.099087],[2.391701,-0.396456,-7.547794,-8.314365],[-6.762429,-1.249376,-2.969347,-4.114842],[4.013416,-1.127132,4.542891,-3.777042],[9.682295,-5.948040,-7.609924,-7.425998],[3.753644,5.990632,-0.760169,-5.699633],[9.402708,-1.067299,8.813102,6.118670],[0.456729,-3.956905,-2.201686,3.989975],[5.183416,6.873139,0.852755,-1.983906],[-3.626234,9.832797,8.323622,8.390900],[-6.321849,-4.074459,-4.822936,2.439154],[5.160797,-7.719223,-2.132502,-4.784624],[8.127508,3.419495,0.429110,-7.099935],[-0.794857,9.758271,5.066699,-4.877048],[-2.269974,-1.370969,-3.266679,-7.934234],[7.135596,-2.647270,-1.087803,-2.209502],[-5.609681,3.503836,2.139630,5.117313],[7.697345,2.296752,-6.854998,-4.467999],[7.342621,5.235336,-7.893017,3.709556],[9.317670,5.616327,-8.377690,7.181250],[-6.068961,6.981382,-8.785009,4.244278],[9.253991,1.025094,-5.249015,-7.582943],[-2.756375,-5.802418,2.950885,-8.249249],[2.698357,-3.953780,3.304893,-9.349088],[-2.334680,4.026490,-2.708867,-1.588214],[-0.399339,9.183516,-7.234736,-3.651204],[-8.989273,9.376738,-7.089291,-0.011973],[-2.585878,-6.842567,-8.858084,4.494859],[-3.096213,-3.571627,8.163126,-4.440779],[-8.898377,-0.007220,8.347531,1.425175],[8.077176,3.585324,-6.226570,0.075917],[-8.936278,3.054418,-6.275521,-2.964569],[9.078590,-5.269403,7.899441,-0.087497],[-1.282641,-0.873276,6.224742,5.800084],[7.223026,0.052081,-1.541984,-8.581485],[-2.766132,-9.697174,-2.272711,5.468944],[4.046532,-3.073862,-7.933424,-2.007905],[4.546726,-2.877659,-9.635057,-4.346152]], dtype = "float32")#candidate|7585|(70, 4)|const|float32
call_7583 = func_6881_call(relay.reshape(const_7584.astype('float32'), []), relay.reshape(const_7585.astype('float32'), [7, 10, 4]), )
call_7586 = func_6881_call(relay.reshape(const_7584.astype('float32'), []), relay.reshape(const_7585.astype('float32'), [7, 10, 4]), )
output = relay.Tuple([call_7561,call_7583,const_7584,const_7585,])
output2 = relay.Tuple([call_7562,call_7586,const_7584,const_7585,])
func_7605 = relay.Function([], output)
mod['func_7605'] = func_7605
mod = relay.transform.InferType()(mod)
output = func_7605()
func_7606 = relay.Function([], output)
mutated_mod['func_7606'] = func_7606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7278_call = mod.get_global_var('func_7278')
func_7279_call = mutated_mod.get_global_var('func_7279')
call_7631 = relay.TupleGetItem(func_7278_call(), 1)
call_7632 = relay.TupleGetItem(func_7279_call(), 1)
func_7534_call = mod.get_global_var('func_7534')
func_7537_call = mutated_mod.get_global_var('func_7537')
const_7642 = relay.const([-8,4,2,-3,-3,-5,-6,1,-8,-7,-4,1,-4,4,8,8,8,1,6,-6,4,-3,-10,8,-5,-6,5,-9,-6,8,-6,-9,8,4,-6,2,4,2,2,-1,4,7,5,-10,-3,-5,5,-3,6,9,-8,1,6,7,3,8,3,9,-3,9,9,7,7,-1,7,-4,10,-8,-9,8,-3,1,4,-6,-1,5,10,-8,-1,-10,8,5,9,6,-10,-2,-1,-1,-3,1,3,-7,-5,-9,-5,-5,5,1,-3,6,1,6,-8,-4,3,8,1,-8,2,3,8,-2,-5,-1,-2,-10,2,5,-5,5,-4,6,10,-2,-3,2,10,-8,-7,-5,-5,-1,3,1,5,-5,-8,-4,5,3,-10,1,10,-9,10,7,-9,4,-2,-9,10,-8,5,9,10,9,-10,4,-2,7,6,-7,2,-6,-4,-3,-9,3,3,-5,5,-4,6,4,-10,-10,-5,-1,8,-3,-4,-7,7,8,-3,6,-7,-4,8,-3,-9,7,9,4,7,10,-4,-4,-8,-3,-5,10,9,7,1,8,-2,-7,4,8,7,-3,-2,1,9,-10,3,8,-3,-1,-6,4,5,1,-3,1,5,-10,-10,9,-7,6,1,3,-1,-6,-3,-9,4,-8,-8,-6,2,2,-8,-1,-3,4,1,6,2,-2,-6,5,-10,-6,3,-1,-7,7,7,-10,-7,4,4,1,-6,4,6,4,2,4,4,-10,-2,6,-7,10,3,-3,4,4,8,1,-7,2,5,-7,-3,9,6,-5,-4,-8,-6,5,-4,9,-8,8,3,7,5,-6,10,8,-1,-8,7,-1,6,5,4,2,6,7,7,9,5,4,9,1,4,-4,-7,6,-8,3,-6,-1,-2,-2,-2,3,-6,-3,9,-4,7,-2,4,10,-8,3,-6,6,5,-7,9,-4,-6,-10,5,6,6,6,7,-10,-9,-10,-9,10,-6,-1,-6,-2,4,-5,-9,-10,-10,-3,-4,-1,9,-7,10,4,-4,-3,-2,3,10,-6,1,-4,-6,-8,-3,3,-2,10,-8,10,-1,-4,-1,-2,7,9,-8,10,9,4,1,-4,8,7,-10,7,1,6,-10,-10,-8,6,-2,-8,6,-5,-9,-10,-4,-2,3,8,3,-3,-2,-10,5,-6,4,-10,-8,-9,-5,-6,5,5,-1,1,7,-7,-10,9,4,-2,1,-1,8,-8,1,6,-5,-6,-4,-10,-3,-9,-7,8,-8,-2,-2,-10,4,-7,-5,1,-2,6,-3,8,-7,-1,-7,-6,9,6,10,6,-5,7,4,9,6,-3,-4,-7,9,-5,-8,3,-8,1,-4,-4,-7,-10,10,8,-7,-4,-3,-3,-10,-1,9,6,-3,-7,-3,8,1,-5,-9,8,-6,-8,5,3,10,-4,8,-6,8,-7,-6,4,-7,10,-2,2,3,8,1,-3,-3,-10,10,1,-1,10,-7,7,-1,-10,7,2,-1,-8,-10,-3,-2,6,-1,10,7,-1,4,8,9,10,-9,-8,3,-5,8,7,-3,2,2,-5,-3,5,4,-3,-9,-9,-5,9,2,10,3,2,4,9,-7,7,9,-7,5,-6,-1,5,3,-6,9,6,5,10,-1,7,3,10,-8,-7,-5,9,9,3,-9,6,5,2,10,-1,-10,1,-4,7,5,7,6,-9,-2,-6,3,9,-6,10,-4,4,-1,9,-5,-9,10,-4,4,1,6,-6,-3,-9,-7,-2,-1,-7,3,-10,-2,-3,-7,-9,8,6,1,-5,1,3,2,-9,6,-5,-3,1,4,-8,-1,-1,-10,5,2,-8,-3,-9,10,7,-5,7,7,-3,-2,-1,1,1,10,-5,-5,5,5,4,3,1,6,-8,-6,6,-4,-8,-1,-6,-5,5,-3,-2,4,4,-9,-7,-3,-10,6,6,4,-2,-4,-8,-9,-1,-3,1,-10,5,1,6,7,-2,3,10,3,2,2,6,-3,4,-9,1,3,9,-10,-8,3,1,-10,-1,4,-10,-3,8,5,-10,-10,-4,-1,-4,9,9,4,6,-10,6,-2,10,5,9,-1,-4,4,-5,10,5,3,-1,-3,-10,-4,6,-5,1,-6,9,3,-2,1,9,7,3,9,5,-1,-6,-1,2,1,-5,-6,-8,-10,-4,-8,-4,-9,4,-3,2,4,-10,10,-3,7,-10,6,2,8,7,-10,-10,-8,-9,-3,-4,8,-6,-7,-7,-8,-9,-5,-10,-8,-1,-8,1,7,-6,2,-9,-5,7,5,8,3,10,10,-4,-7,-9,8,-10,2,5,-5,4,-1,-1,7,2,9,-9,-1,7,8,10,8,10,5,3,2,-1,-10,-9,-4,-8,-2,9,-2,1,2,5,-3,-9,-8,10,2,3,4,1,-5,-10,-8,10,5,9,3,7,-6,-6,-1,-4,-8,6,-1,1,-8,2,-7,-5,6,-2,-7,-6,-7,9,9,-10,-2,-10,-3,-8,-1,8,-7,-2,8,-1,-5,10,-9,8,2,-6,6,5,8,-2,-8,-7,-5,5,5,10,2,1,-7,-1,9,-3,-3,6,-4,8,-1,4,-8,-9,6,2,-9,1,-4,-7,8,-9,10,2,-6,-5,-7,-2,9,-9,-3,5,6,10,-8,2,-8,-7,-6,2,1,-6,-6,5,-10,-2,-7,-6,3,-2,4,-7,5,-3,-4,1,-2,-6,-5,-8,7,-9,7,7,1,10,-3,10,-2,-9,9,4,6,4,10,8,1,2,-3,9,10,1,-6,-3,7,-7,-1,10,10,1,-5,7,-8,-6,-2,7,4,-9,-1,1,6,4,8,5,7,9,-6,-8,9,-7,8,-5,2,-3,6,-8,-1,-10,-6,10,-2,5,-5,-4,8,-5,3,-7,4,7,3,4,10,6], dtype = "uint32")#candidate|7642|(1078,)|const|uint32
call_7641 = relay.TupleGetItem(func_7534_call(relay.reshape(const_7642.astype('uint32'), [1078,])), 3)
call_7643 = relay.TupleGetItem(func_7537_call(relay.reshape(const_7642.astype('uint32'), [1078,])), 3)
func_239_call = mod.get_global_var('func_239')
func_243_call = mutated_mod.get_global_var('func_243')
var_7654 = relay.var("var_7654", dtype = "uint32", shape = (77,))#candidate|7654|(77,)|var|uint32
call_7653 = relay.TupleGetItem(func_239_call(relay.reshape(var_7654.astype('uint32'), [1, 7, 11]), relay.reshape(call_7641.astype('uint32'), [14, 7, 11]), ), 0)
call_7655 = relay.TupleGetItem(func_243_call(relay.reshape(var_7654.astype('uint32'), [1, 7, 11]), relay.reshape(call_7641.astype('uint32'), [14, 7, 11]), ), 0)
output = relay.Tuple([call_7631,call_7641,const_7642,call_7653,var_7654,])
output2 = relay.Tuple([call_7632,call_7643,const_7642,call_7655,var_7654,])
func_7661 = relay.Function([var_7654,], output)
mod['func_7661'] = func_7661
mod = relay.transform.InferType()(mod)
mutated_mod['func_7661'] = func_7661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7662 = relay.var("var_7662", dtype = "uint32", shape = (77,))#candidate|7662|(77,)|var|uint32
func_7661_call = mutated_mod.get_global_var('func_7661')
call_7663 = func_7661_call(var_7662)
output = call_7663
func_7664 = relay.Function([var_7662], output)
mutated_mod['func_7664'] = func_7664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_7706 = relay.TupleGetItem(func_7042_call(), 0)
call_7707 = relay.TupleGetItem(func_7044_call(), 0)
output = relay.Tuple([call_7706,])
output2 = relay.Tuple([call_7707,])
func_7724 = relay.Function([], output)
mod['func_7724'] = func_7724
mod = relay.transform.InferType()(mod)
mutated_mod['func_7724'] = func_7724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7724_call = mutated_mod.get_global_var('func_7724')
call_7725 = func_7724_call()
output = call_7725
func_7726 = relay.Function([], output)
mutated_mod['func_7726'] = func_7726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7191_call = mod.get_global_var('func_7191')
func_7192_call = mutated_mod.get_global_var('func_7192')
call_7733 = relay.TupleGetItem(func_7191_call(), 0)
call_7734 = relay.TupleGetItem(func_7192_call(), 0)
func_7605_call = mod.get_global_var('func_7605')
func_7606_call = mutated_mod.get_global_var('func_7606')
call_7736 = relay.TupleGetItem(func_7605_call(), 0)
call_7737 = relay.TupleGetItem(func_7606_call(), 0)
output = relay.Tuple([call_7733,call_7736,])
output2 = relay.Tuple([call_7734,call_7737,])
func_7747 = relay.Function([], output)
mod['func_7747'] = func_7747
mod = relay.transform.InferType()(mod)
mutated_mod['func_7747'] = func_7747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7747_call = mutated_mod.get_global_var('func_7747')
call_7748 = func_7747_call()
output = call_7748
func_7749 = relay.Function([], output)
mutated_mod['func_7749'] = func_7749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7088_call = mod.get_global_var('func_7088')
func_7089_call = mutated_mod.get_global_var('func_7089')
call_7792 = func_7088_call()
call_7793 = func_7088_call()
output = relay.Tuple([call_7792,])
output2 = relay.Tuple([call_7793,])
func_7799 = relay.Function([], output)
mod['func_7799'] = func_7799
mod = relay.transform.InferType()(mod)
output = func_7799()
func_7800 = relay.Function([], output)
mutated_mod['func_7800'] = func_7800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7191_call = mod.get_global_var('func_7191')
func_7192_call = mutated_mod.get_global_var('func_7192')
call_7867 = relay.TupleGetItem(func_7191_call(), 0)
call_7868 = relay.TupleGetItem(func_7192_call(), 0)
func_4375_call = mod.get_global_var('func_4375')
func_4379_call = mutated_mod.get_global_var('func_4379')
const_7893 = relay.const([[-6.101742,4.087487,-9.539702,4.240757,-7.129128,-8.831243,0.326310,-5.152000,-4.700122,-7.440052,-5.639062,8.307776,-0.932155,5.009004,5.512988,-5.885003,-6.006431,-7.637204,-8.690574,-7.095450,5.919089,3.365288,3.759645,-5.051567,-9.993380,2.822714,-3.829338,-5.672130,9.948643,-0.048158,-3.342453,1.700084,-5.976013,-6.878766,6.090225,-9.283078,7.018972,1.015499,6.887086,-0.682621,-6.063256,-9.889368,-4.147244,-0.021839,4.202547,-0.725790,0.713243,-1.424498,5.410333,-4.759586,-8.890903,0.782616,-6.609301,-8.803363,9.434183,-2.391574,9.215165,-2.370663,5.332406,9.490395,8.116426,8.948028,7.441315,2.950702,-7.091480,3.946844,-2.545141,-9.957763,1.316684,-9.430679,-6.741359,4.487336,-4.530708,4.777444,-8.327354,-5.710242,3.288336,-8.263769,8.803820,2.356353,0.237141,-4.795523,-3.531760,8.397104,-7.124859,-1.367540,-1.471503,-1.863084,5.336018,-1.628629,-4.882243,-1.669418,-0.608203,3.859237,-1.759063,1.544683,7.549371,5.038601,3.214188,-4.907478,-5.265694,-9.925907,-9.015211,9.779103,-0.080826,5.475784,-4.052260,-6.117523,-2.740001,0.198103,6.788937,-3.581279,-5.266720,-6.983966,-6.061076,4.917299,4.769890,6.370400,-3.893911,5.471220,4.072534,-3.501652,-5.709028,-9.469261,-3.098160,9.587778,8.821510,-4.101758,4.251173,7.568542,7.262038,8.214909,-2.899941,-8.222051,0.916193,0.940571,-0.458293,9.556150,0.459185,6.267455,7.982579,5.650413,7.840965,-9.432464,-4.557767,-2.045718,4.910339,-7.460439,8.199176,-8.919683,-5.423512,3.252908,7.134916,-9.886318,-6.242251,-0.448616,-6.370542,-8.524522,-2.766647,4.154569,-0.132989,-3.924940,2.067798,6.113102,-3.764054,9.298671,-7.491923,5.320164,1.172395,-7.337990,-8.116789,4.858409,-7.098461,-5.341460,2.380934,9.541059,7.512295,9.635423,-6.209809,4.551614,-1.784815,6.099940,5.927219,3.376449,-9.989148,7.963037,-7.417343,-1.757285,-7.857956,6.160320,-6.868026,-9.506102,4.181559,-0.100993,-2.727180,-8.019687,-1.048967,9.412255,-2.314705,1.642977,-1.085847,5.929504,6.300366,0.384569,-9.237565,8.235064,6.329503,5.504703,9.947436,-7.042102,1.418805,4.104618,8.794394,-6.620174,4.303017,-9.733547,-7.135509,-7.251424,7.670786,9.301305,5.053641,-7.331642,-7.763888,4.416711,7.349624,-4.057814,-6.379956,0.611493,-1.482167,9.553235,4.850276,-1.911998,-6.387015,2.762256,-6.512958,2.239026,-6.010455,4.827496,6.199655,-2.213899,-0.339180,-5.915125,-9.896738,-5.413511,7.412775,-4.530850,-0.754603,-8.173101,-8.587923,-4.991002,-4.744912,-4.828605,-0.352979,-1.538262,-6.252845,-4.288150,5.757549,0.454520,-0.836671,-3.107115,2.752416,-1.208153,4.843299,-6.303720,4.857807,1.417075,1.484392,-7.878363,8.253716,7.321571,9.031631,-1.461155,-9.855542,1.147716,-7.019091,-7.173497,-1.076344,4.197839,8.490868,9.997060,-7.401412,6.803177,-1.986239,9.767037,-9.643391,2.020589,2.021148,-8.811179,2.172183,-6.193634,7.323035,-2.005290,-9.837759,-4.047945,9.344377,-6.360007,-5.773595,6.674563,9.004827,-5.548442,-3.482579,9.876385,3.565044,5.825187,4.133983,-6.152662,8.592233,6.552888,-0.856284,5.345448,7.546722,-8.838414,5.993835,4.831334,-9.131932,-4.470454,3.308245,-8.403424,0.457190,-9.447965,-8.888642,-6.036292,8.795580,6.059233,0.525281,4.076391,-8.469052,-2.847576,-0.469385,-9.848661,2.327032,9.868462,-4.344827,2.757090,7.807490,0.053838,3.332126,1.162346,5.045694,-5.487607,-9.973497,9.295025,7.038834,-9.787141,2.365343,0.116667,-8.545317,-0.643970,-4.883913,-4.055678,2.579690,4.457331,1.759830,5.761902,1.485406,8.520091,5.465812,-6.004015,-9.216078,-2.408829,4.467392,-9.913280,-4.227532,2.229927,3.358191,7.706845,9.393092,8.706883,4.011382,8.757622,-6.098470,-1.024172,6.272889,9.123617,-2.045603,-3.503324,8.551639,3.422334,8.111891,-6.499110,-2.937919,7.868418,8.855709,2.608592,7.386697,6.183535,2.227475,3.577170,1.736242,6.294675,1.429344,9.689783,-1.324279,-2.917597,5.083156,-3.382989,-0.078029,8.189628,-6.384737,6.923138,6.458086,-7.274535,-5.115119,-6.851036,-8.945378,0.729149,0.768065,-3.695656,7.315221,2.611872,6.949723,4.013174,6.687902,0.602165,2.435481,2.680242,-1.408422,7.405282,2.646941,-1.998446,6.794571,0.753676,-0.974747,9.369390,9.485155,0.212372,-0.589750,-3.620698,6.966220,-2.871695,-7.060123,-9.861099,5.032334,-6.752118,7.411774,-7.144204,-3.595786,2.069329,5.721418,0.121391,1.214402,9.772557,4.431380,2.593195,-7.733121,9.673173,4.449993,8.268372,5.337374,7.336174]], dtype = "float32")#candidate|7893|(1, 450)|const|float32
var_7894 = relay.var("var_7894", dtype = "float32", shape = (2352,))#candidate|7894|(2352,)|var|float32
call_7892 = relay.TupleGetItem(func_4375_call(relay.reshape(const_7893.astype('float32'), [15, 6, 5]), relay.reshape(var_7894.astype('float32'), [2352,]), ), 4)
call_7895 = relay.TupleGetItem(func_4379_call(relay.reshape(const_7893.astype('float32'), [15, 6, 5]), relay.reshape(var_7894.astype('float32'), [2352,]), ), 4)
const_7898 = relay.const([[8.181865,8.975664,2.238335,2.583714,7.595066,-4.372046,1.037102,7.477522,8.150135,5.930054,5.290027,7.395469,-5.314646,1.697807,-6.053325,9.393544,-0.188643,-0.813306,-8.538719,0.332610,0.264611,-0.102476,-6.003574,-4.892492,-1.576869,-2.133630,-0.710334,4.248860,7.191662,-0.273939,-2.457232,1.940513,-0.699846,-4.553219,-1.562971,-2.279544,1.257417,-6.320114,-0.507554,8.565362,3.579421,-4.332549,4.941042,-8.406663,-7.652903,-1.672228,-9.590829,-4.091876,-7.623591,1.914826,-0.209281,-9.233056,-7.826272,2.098457,1.700279,2.908460,-0.252110,-2.483783,-1.127914,-6.579346,6.406638,5.083886,9.822061,-2.861361,-0.160217,-8.402095,5.898117,1.800314,0.923504,-4.848940,4.514128,4.984119,3.871965,-2.126588,-0.735333,-4.187563,2.829335,9.812202,9.428983,-9.287418,3.860453,9.035583,3.454381,7.610665,0.557876,3.805485,3.741327,0.168294,-0.082139,-5.139437,-8.427027,-1.753955,-4.318028,-9.313900,6.198987,-1.517247,9.843216,9.826545,-3.147317,-3.124269,-5.910833,-8.483073,-5.559834,-3.079664,4.386677,-5.186170,-1.112864,-2.809359,-0.979512,-0.102520,6.383982,4.645130,-2.908933,-0.786510,2.750133,5.885421,-6.324565,6.469734,1.579099,-9.916700,7.763981,-7.644084,3.437390,-6.969687,-1.052612,-0.763966,4.802004,-3.863892,-5.561351,-3.799430,6.356999,-4.226061,-4.167370,8.783067,8.136778,-6.506869,-4.187423,-0.416325,2.957084,9.103492,-0.351302,-6.662732,2.886240,7.166881,4.981703,0.805517,5.095681,-2.700937,-4.043095,3.628031,2.323936,-3.863154,0.541055,-3.841098,7.368182,-6.597504,9.244913,-0.629076,1.900605,-0.488231,9.669892,-6.465983,7.134212,-2.872182,-1.781302,-6.097910,-7.376268,2.785607,1.034171,-2.286012,8.046266,-5.849103,6.603362,-8.331308,8.938377,5.927980,-1.093384,1.981727,7.016268,8.108832,-6.156173,7.094354,-3.334712,-2.038540,-7.248496,5.371763,2.275399,-3.006760,-0.737205,8.551993,-6.875743,-9.071552,-8.583399,-6.452120,-2.442660,8.400840,8.535768,6.551767,4.800656,-6.346767,-1.207320,-2.022092,2.772461,4.737290,0.757311,6.918116,4.668062,-1.864363,-6.136181,0.391118,1.817620,2.250261,-5.896833,-1.824420,-3.557020,3.586308,-9.132283,-3.706238,6.966844,1.439216,-6.696082,-3.706428,2.031759,-8.726119,1.377659,-3.691994,-2.711579,-5.830771,-2.278705,0.950113,9.047244,4.420608,-6.858145,0.004286,5.386051,-0.237521,-4.092821,-9.028653,0.780315,4.918054,-0.770995,0.963715,0.770119,8.056644,4.809602,-2.516696,-1.593755,-5.936196,2.339723,-0.946779,5.734285,-6.522889,6.048645,8.395974,8.065237,5.338378,-7.313909,7.503734,-6.829156,5.172350,4.347544,-8.495330,5.112554,-1.770021,7.632095,-9.183402,9.854319,-0.249157,2.493645,6.669782,-5.007340,-9.798038,-1.452522,-5.424149,6.804252,-5.052596,0.643494,-9.999918,3.210652,2.295277,6.729880,8.579284,-1.240602,8.043465,2.868725,5.869083,3.406556,-1.095967,3.537205,9.243192,-4.479087,4.923456,-1.137977,9.593565,-5.566994,-1.298377,-8.568554,-8.351394,5.977014,-6.324241,-4.465897,-2.259520,1.486221,8.300686,9.556649,7.305444,-9.690754,8.585678,-5.571585,0.865509,9.762087,-4.468756,1.501153,9.472111,-7.880943,-7.876048,1.102473,8.557790,3.528508,6.275018,1.568279,5.534793,5.631689,-9.637586,0.196008,-7.597140,-1.660808,-3.028050,0.203024,-4.267806,1.872728,-8.524059,-6.735863,4.066668,0.291213,-8.857640,-4.884829,-6.674457,2.502906,3.840559,-1.635343,5.874907,0.193825,4.459970,5.560777,-0.869594,-5.552491,9.490262,-9.067298,-2.799042,4.573771,-3.121181,-9.917033,7.345859,-4.939823,-2.839470,-3.108812,0.054592,3.746694,-1.618205,-1.076010,2.990744,-4.325759,2.613600,-6.162252,-0.336273,1.242960,9.387103,6.955444,4.101991,0.416354,0.548825,7.993985,3.478051,5.688297,-0.571159,3.190139,-9.377615,-9.340929,-4.027593,0.174462,5.679003,-6.779617,2.065667,5.233297,8.739697,-7.952333,7.847373,3.343647,4.470387,-0.938540,-2.680800,6.707676,1.908935,9.629478,-5.765709,-9.101147,3.704754,-8.377400,6.472381,0.848876,9.955903,9.285162,9.408214,1.324369,7.545716,-1.317055,3.592341,-7.174849,-7.740305,5.483325,-6.852126,-8.620283,-7.479641,-1.299549,-7.198007,-6.107180,-6.115257,-3.337157,-0.860050,-7.696375,-5.348038,2.309108,-8.655990,-3.136581,6.548937,-6.622377,-0.337938,6.321686,0.357485,-3.560165,7.566233,7.101409,-3.662285,-3.443825,-6.350049,-0.522112,7.260933,-7.025021,2.266435,-7.701123,-6.796537,-2.646072,9.411727,6.541779,-6.870031,2.768445,-2.968127,5.717360,-3.168313],[9.191951,-0.692415,7.522786,-8.019856,9.924285,0.368442,-6.160271,-4.881203,-6.790216,5.189813,8.012856,4.507449,7.562122,1.405032,-1.139232,-2.002516,-6.718981,5.285360,7.567541,-3.168017,8.449336,-8.037588,5.190673,-4.990010,6.454917,-9.187284,9.882553,6.243863,0.077236,3.969998,-7.572395,-1.646120,-2.960480,8.641849,8.926470,1.268772,8.929284,-4.767203,-5.981803,-1.371235,-3.076671,-2.153674,-9.480198,9.150045,4.547745,7.406679,-8.415084,-5.320059,6.927344,-7.520476,2.527984,8.966389,-0.209494,-7.906994,-4.277954,-0.709318,6.871689,0.834432,-8.656194,2.068550,7.597909,3.617882,-0.180461,6.001882,5.208501,-8.040766,5.978709,8.070298,-4.055967,-8.509539,-3.216762,1.271935,-0.629886,4.178632,0.945187,-9.661552,1.394176,5.490278,0.192471,0.763274,-1.638953,-0.698338,1.308071,8.908828,3.303344,9.882643,-4.349204,8.273720,8.160795,8.929467,7.371629,4.681703,-5.477916,1.320004,9.034902,-2.834133,-3.073616,8.455707,6.965879,8.916642,0.491386,-6.088598,-9.639805,-1.827031,5.684736,-8.492697,9.915662,7.635589,-6.795425,3.649953,-6.476728,-5.291775,-3.551980,-4.054138,-1.008828,-7.095729,-4.028992,-7.191911,-8.491152,-9.120265,-9.942036,8.519242,2.649428,2.592841,8.839412,5.240046,5.141198,-5.891184,-1.129772,2.099869,8.632964,-7.176841,-5.233991,-3.427050,2.798466,-7.660062,6.390381,0.440399,9.722520,0.421183,4.294553,-4.775478,-3.671202,8.799735,4.972830,9.744527,-8.439367,2.607275,-3.841406,-1.501411,-0.963488,-7.892018,-9.779467,-0.881165,-9.122662,-0.603559,7.284717,-2.452838,4.693213,-6.089097,-3.915937,9.955096,9.629762,-3.941167,-8.623697,1.674879,3.163700,9.645732,0.965416,8.715508,0.220420,9.634040,-0.937666,-6.042402,9.679997,6.913572,-8.479755,2.078637,6.816371,-6.546236,-0.795108,-7.017794,6.845328,5.736262,-7.687538,-9.708952,-6.535733,-0.914247,-0.768588,-9.938306,3.434576,3.985864,4.548377,5.412717,-7.921715,-0.823528,9.747616,1.549629,-3.622090,2.978869,9.270611,-3.900527,7.112553,0.488654,9.788100,-5.897128,9.215148,5.880502,-9.978169,5.797924,-4.487406,0.337303,-6.974712,-8.981490,4.670354,6.818082,5.347026,-6.586441,-3.464906,-6.668456,8.004717,-7.044403,4.283024,1.119592,-9.685964,-9.969118,8.135408,-9.461074,-6.170680,-2.418436,-6.807791,9.104178,-6.467465,4.191161,6.848497,-0.582194,-1.722922,4.231499,-4.314300,4.376184,2.077543,6.446364,0.052367,-8.099580,-0.507645,8.752676,6.994539,3.432502,-0.413428,-4.159149,-7.458567,-8.667460,-4.305993,-7.494840,8.850387,9.931316,-7.761490,1.442425,8.249961,0.181634,-4.486682,-5.667047,5.514869,1.319469,-3.397738,9.989510,7.225788,9.721278,1.956364,-0.305043,6.503738,8.941567,4.196160,2.547261,4.671693,-6.371396,7.892087,3.909537,-1.835191,-8.256210,-6.582501,-1.996933,-3.993693,1.205788,3.680106,-0.492997,-8.476342,-2.361016,-2.416758,-2.703296,2.582466,8.248633,0.658091,9.788920,-8.261572,9.234194,-7.373625,-7.597614,4.042965,-5.273507,8.883641,-3.511776,3.092061,9.718101,-7.679708,9.451699,6.702612,7.507556,4.014414,-1.203191,-6.772410,-9.013304,0.038307,9.963747,2.135597,-4.199003,-3.947374,-8.311322,1.578008,9.608389,3.802398,4.487927,-2.047920,9.650559,-0.132372,7.062495,6.468914,4.726131,-5.906416,-7.053297,-1.857950,-9.001237,7.939696,-5.695110,6.632773,-5.119897,-3.917354,3.221987,-1.771932,-1.371494,-5.045486,-2.669206,-7.435934,7.772229,-8.644733,-1.771384,-7.472682,-3.316021,7.168053,-7.803714,-1.259116,4.562811,0.241307,0.438159,6.614907,-8.913297,1.814528,-7.026731,-1.183603,-1.643614,5.283220,3.748136,-8.642889,2.478791,8.589735,-9.426188,-0.055330,-6.185900,-5.815236,-9.016445,-3.054950,7.638927,6.226637,5.886076,2.042653,-9.003583,-1.649697,-1.362806,4.127151,-9.088967,-9.760090,2.672902,-9.468336,-2.394661,2.317013,-5.473488,2.327478,-0.423589,3.745084,-3.378761,5.057835,9.100836,-2.708036,-2.781582,5.674368,-9.763731,2.228863,4.955281,-6.413418,-2.093422,-3.096835,1.318864,3.018254,-3.029764,7.346873,6.900544,3.920392,-5.612187,3.825641,-7.020865,2.316826,-9.500692,-9.213326,-4.514307,9.757963,-3.947780,5.427235,1.342471,7.669585,-2.184290,-6.420211,-7.551647,-1.677406,6.349760,4.422173,0.349895,1.158644,-5.057381,1.502335,-1.610279,9.354825,-8.205667,-4.822751,7.932204,6.787172,-5.595852,-5.111912,9.617436,0.382817,-5.256745,-3.333213,2.077514,0.750588,2.256760,-3.123464,0.694364,7.485873,-1.184793,4.568721,7.847681],[9.698336,-0.441008,-4.704837,2.625200,-1.995545,3.033650,7.963947,-0.923851,-6.403271,2.671313,6.995476,-1.521724,-3.984410,-4.681310,9.589620,-7.671975,1.536588,-6.596352,-7.225762,1.023199,3.126568,-8.792469,2.602600,8.840399,-9.371952,-1.156621,1.539374,-9.789577,-5.625240,2.283435,3.297020,-0.141489,-4.682941,-0.404916,-0.652932,4.084284,-2.769979,-5.628673,8.988733,6.281953,-7.978464,4.199919,0.180809,8.225851,1.291366,5.521095,-4.075806,0.099774,-6.917003,-4.331673,-8.591103,-0.528647,2.648318,-7.617946,-6.332618,-6.026329,-3.639851,-2.693852,-5.858247,5.285253,-2.207149,-0.621985,-1.933485,4.365511,9.288063,-6.752695,7.609979,5.400093,6.500147,5.457262,6.938270,4.711102,-8.927605,2.934129,6.310861,-2.976675,6.237580,5.150961,-2.950640,-3.920986,-8.301609,0.915150,5.553909,-6.060685,4.402833,-4.061862,1.479112,-4.254331,3.760067,-6.041494,-0.329647,-0.261319,8.269181,7.350108,-8.316482,-9.396566,-9.725026,3.884162,-0.796510,6.458151,8.038129,-1.021326,1.174002,-8.190130,6.439023,0.546926,4.033838,4.729964,4.934875,9.839780,5.653740,-0.285339,2.502907,2.280964,6.975760,9.172310,8.408296,-8.504874,-7.541315,2.826552,2.209392,5.797256,1.872271,-4.160431,-2.657784,-2.627158,1.834688,8.956688,-0.074001,-3.610764,7.927741,4.907359,0.606511,8.812199,-9.685578,6.486179,-8.979168,9.266092,-8.133231,-8.215951,6.549445,-7.851244,-0.896154,3.928480,-0.608583,-3.679229,-8.467440,-6.574563,3.740227,0.577533,0.083052,-6.579007,-5.726704,6.547102,7.176778,8.774935,-4.556138,3.546984,5.912656,-5.342852,-5.234383,-4.442459,-5.288311,-8.623599,-5.680971,0.744790,7.380613,6.669267,9.882562,-5.068953,0.996114,9.429011,5.452429,-1.512675,-8.964266,-0.778116,3.320254,8.721227,-8.245307,-4.757361,5.676847,-1.605440,4.501957,-4.037403,-2.715979,4.380471,-7.061280,0.898290,2.902294,4.368270,-3.279196,-7.851808,-6.844682,4.696429,2.047084,5.712563,-7.570175,9.022049,-5.044661,-2.094152,-1.030495,-3.818385,3.090833,-2.023887,6.159766,-3.452676,-5.896547,3.048248,-4.239019,8.613927,-3.624942,-4.962190,-7.258180,-8.493559,-9.500445,2.498843,-9.970282,0.396002,7.152559,-5.839067,5.202698,7.465099,0.838020,-1.589907,6.444890,-1.042325,4.431283,-0.637772,-7.299272,-6.739852,-6.782886,-7.242049,2.978832,-3.241497,7.474632,6.948951,6.916909,-4.611788,3.257240,-8.343870,-3.144716,3.959509,1.702483,7.780475,-7.004048,-8.008881,4.670810,-1.964887,8.859553,-0.711801,1.165036,3.838480,-2.011786,-0.030052,1.889096,-2.074658,7.838134,8.868053,-9.496903,-6.041561,-9.849571,4.009228,4.716049,-1.260508,-5.140001,-8.119524,-1.545390,-9.063319,5.655565,-2.262005,1.054112,0.262138,-0.543465,6.362554,7.390490,-3.463054,1.904064,-0.236036,2.547959,1.234517,0.938819,1.747395,4.953711,-3.610907,-0.214645,0.602710,5.573400,-7.769910,8.260123,-2.979076,-5.652758,-1.104608,-9.005584,-3.985303,8.682254,4.650725,6.963812,-7.889795,-5.751918,-8.748339,-4.988865,-9.332622,-5.857930,9.094147,8.380801,-9.035281,-7.315926,6.384490,4.619139,-5.589347,2.922419,0.264039,9.242293,6.636119,-0.522018,-7.119721,-2.435432,8.918974,-6.406085,-7.296757,-1.225812,3.803511,-8.807042,-0.845042,-6.968077,-4.655171,-4.902908,4.918825,-0.225416,-2.502337,-0.686429,7.003004,5.676403,6.733525,8.132618,7.981157,-8.906370,1.767354,2.216630,3.274249,-0.286744,7.806088,6.102781,-1.640510,-1.661306,6.459096,-2.901874,0.578026,8.089696,7.610197,-3.824792,-0.398755,5.934185,9.812663,1.037021,-8.416393,4.500450,3.564941,-0.296346,-9.436901,-0.451578,6.959423,-6.412884,-5.301927,1.369238,-9.717646,7.164458,3.722941,-9.375841,4.333416,4.528429,-6.379666,-0.976217,6.583464,0.347143,0.021670,3.668522,-4.914404,2.156648,7.492670,-1.924714,-7.681726,6.206799,-1.836812,1.765008,0.469041,-7.997033,9.758230,8.755777,4.624272,-1.224334,-2.348625,-9.372232,0.219203,-9.125653,-0.498735,-7.116434,-7.340436,-4.734797,-9.877256,-8.278925,-2.658497,6.940786,7.534301,6.433256,5.137931,4.713195,8.404378,4.578644,1.174719,-9.308230,-7.247347,3.339914,-9.555929,-8.590626,0.079588,-3.538064,0.251161,2.457116,0.728945,7.050918,-2.328060,-4.588551,-8.585464,-6.888276,5.114778,-5.242625,6.499539,-1.737306,8.423528,-6.322220,-7.885805,2.129336,-1.708391,-0.987449,2.957360,4.983167,0.784714,8.576654,4.836955,5.891606,-9.556742,-7.666006,2.551245,5.001171,3.917134,4.650785,4.550390,5.316358,8.590563],[4.237347,-9.922997,-9.751470,-9.642698,8.871196,7.405340,8.317629,-6.230282,-8.262490,-4.253637,1.707135,2.168653,2.847847,2.923032,7.789615,4.011609,7.461682,8.061854,1.041335,5.177942,8.025233,3.568656,8.465531,-7.555226,-9.005146,6.534185,4.148555,-7.485925,9.306651,5.983162,8.694038,9.237295,-6.300277,-4.705438,4.615005,7.445988,3.970041,8.499513,-6.530604,-1.897335,-7.283033,-7.119969,-9.623920,5.242517,-1.589583,-6.718955,2.624744,-8.114271,-6.629634,6.776406,9.067866,-3.773397,4.051308,7.024246,-2.369943,-2.221301,7.184022,-1.155628,-5.403338,-0.445447,-6.537748,-1.799607,-7.904904,-2.741981,8.451687,-8.807744,-2.267216,7.735422,-5.616449,2.312550,-3.250972,-0.615581,8.136992,-0.231629,-3.178731,-6.374024,9.239410,-2.999522,-4.783022,6.053396,-9.520287,-9.444370,-6.373844,-9.168410,-3.774119,6.397418,-3.686841,-8.495346,-5.812359,4.663564,2.315766,-2.403882,-6.369993,6.329486,6.761897,-6.907961,-8.052083,-5.382010,0.257027,-5.851674,-5.194957,-5.588120,7.596324,-6.363496,9.332241,-9.143924,-9.106917,-2.825109,1.817379,6.262519,-4.889355,-1.109901,-0.674488,6.757944,6.474239,9.357967,-7.322202,-4.236830,-5.109484,4.993163,-6.637228,7.332395,-4.663916,4.007388,5.732925,-9.033994,2.670262,-2.246577,2.475171,9.836226,4.223492,1.719118,-2.368083,0.665039,-1.538421,2.308761,-6.875535,8.408512,-6.180282,-8.676934,8.269180,8.058110,8.835553,-1.976791,3.138921,-2.513025,-5.537364,-1.950114,0.482414,-1.410930,6.666234,2.744671,-7.926704,-0.952989,4.347312,-1.773795,-6.022430,1.839136,4.197455,-5.615567,6.409988,-9.389237,-3.842666,1.086493,-8.518441,-4.776526,6.003996,-1.379706,-9.469040,-8.429018,1.202952,4.409665,-8.706033,-2.086805,-3.714190,-3.939174,8.071393,-8.595523,-8.665032,7.821318,2.776666,-4.165045,0.009393,-2.174448,7.030927,-8.654235,7.353984,-3.161957,-3.368924,9.533421,-8.143281,7.434262,-8.653672,5.550903,8.306708,-8.522855,-8.721838,8.864207,3.706165,-8.356755,-9.168503,1.918557,-0.982603,9.046806,-9.920537,6.304024,-4.212289,-3.066388,-6.942550,5.985675,2.626485,-6.793892,-7.534774,4.054532,2.827737,3.429651,-7.268891,5.689402,-6.050558,-5.719705,-4.102836,9.317738,-7.655312,2.897750,-5.957147,-9.026955,-0.131033,4.537966,-6.228619,-5.211622,-1.315082,3.194570,3.696521,4.708251,6.516316,-8.080463,-8.841034,-5.001691,-9.775145,3.499325,4.322027,-5.321754,0.996706,-6.737902,-2.938611,1.094216,-7.000292,-7.201168,-9.987534,-9.473250,5.162181,8.251408,-5.057895,-8.736662,3.606797,2.872016,1.254087,7.205796,-1.003752,-5.153627,-9.481733,5.391770,-7.550697,-7.600953,-1.049593,-1.103100,-3.632706,7.279510,7.386534,5.130415,1.479495,2.888914,-7.267175,4.076908,4.449810,0.003938,-2.269568,-4.273836,-6.008996,8.660591,9.525668,-1.328437,7.554313,7.080546,2.461952,6.177825,1.834212,9.872242,8.070366,-7.268319,-8.812331,5.609622,9.867915,0.905424,-7.359735,-7.121027,-1.749042,3.478645,-9.802785,1.952045,0.223886,-4.833258,0.147898,-5.361896,0.462975,4.995751,3.560912,-6.035179,1.296810,-7.959841,-3.802286,4.254289,-1.563550,-1.329304,3.068281,-5.789321,-0.047041,-9.102088,8.582591,9.139554,7.709493,-3.266395,8.553975,6.354592,2.992459,-4.863269,-9.439190,-1.402228,1.399543,5.391360,-7.854113,5.921254,6.880617,6.983399,8.448242,0.149960,6.482444,3.073382,-2.645570,4.668182,-6.679395,0.319126,-1.824053,8.749740,-3.944201,-4.122390,8.474881,9.610867,3.897239,0.057163,2.033806,-9.953400,-6.125745,8.069015,-2.898281,-8.150739,6.352111,-6.337247,-8.574373,6.418609,-5.144029,3.548843,9.417735,-9.885377,6.441921,1.481547,-2.124322,-0.783580,1.603972,5.691605,-7.916075,9.502448,5.399044,0.094627,7.520333,-5.303565,4.126968,4.169189,0.027740,0.876568,9.916361,2.129698,-5.578344,4.605104,-2.616040,-6.694792,-2.580590,-5.933278,3.277861,9.438407,-3.268298,-7.753786,-9.868171,-5.106674,-5.074405,-0.696073,9.535877,7.978566,8.462654,1.928293,-5.219501,5.875258,8.642927,-3.077861,8.471428,-3.915621,-4.150218,4.013529,-9.113948,-9.692619,-9.207324,1.940722,-2.691058,7.226329,4.997714,1.360879,-1.154722,-5.440357,-5.390799,-3.165231,5.709946,3.090427,-6.384977,-3.971875,1.234694,4.943423,3.404091,5.082880,8.898740,-8.676949,1.414740,-4.087844,-7.688701,-8.269962,-5.328968,-9.444633,6.266536,3.408883,4.487584,-2.164578,-3.599704,-5.190119,-3.600766,0.129368,-9.063498,-0.708735,-8.733447,-0.540658,-9.268183,0.525164],[3.291358,-0.017982,-0.749686,-3.932096,4.721218,-1.467767,-1.292092,2.613444,-9.526475,5.950952,-7.345229,-3.667491,-3.639779,8.723928,3.061411,2.334172,0.971469,4.807247,5.304507,0.689886,3.879242,-4.727761,-3.741257,-4.004505,4.995332,0.557593,-6.929299,-8.260498,-7.097604,5.249968,-9.763983,9.718638,-5.111917,2.658608,-1.836900,-8.746404,-6.664934,-0.866709,-8.667696,5.909190,-8.179952,-3.142327,2.707893,8.515664,-7.676118,0.736134,-9.739072,-8.080337,-5.653214,-0.900817,-6.504539,-1.930112,-2.114694,0.278773,3.236390,-3.360930,-5.601631,-1.798683,9.779771,1.772389,-3.798109,-8.634264,6.911198,2.529827,4.101260,8.948561,-6.390310,-8.137808,-3.876577,-9.999799,5.482735,5.003502,1.921021,8.874143,5.614282,-6.493835,2.001054,-5.648972,-9.022414,-7.353220,-9.573175,2.289263,7.423323,1.860613,-9.136440,-3.757505,-7.979076,3.037754,0.658447,-0.053744,8.549000,5.552303,1.607271,-9.125559,3.395518,4.410878,-5.450182,7.413987,8.756006,4.362709,-0.234284,7.779469,3.195479,-7.068153,3.173610,6.121468,0.109331,4.395750,2.585781,-9.754321,2.135407,-0.447258,7.459101,5.892092,-6.868795,-0.159772,-7.423968,6.670367,-7.960064,4.285928,-6.798795,-4.378882,8.042755,-4.701384,0.278385,4.270120,3.748297,-9.820413,2.859004,5.949537,-5.589454,-3.098055,3.044560,-9.213318,9.729665,0.201342,2.485979,-0.192741,0.059823,3.225865,7.463497,6.281426,-9.839823,0.757780,-7.829219,1.290929,-4.365517,8.013934,2.479328,9.083110,7.167159,-6.713975,1.322082,9.267382,8.844321,7.749942,-4.162869,3.097416,9.644640,-2.265035,4.288130,-4.170553,-2.582335,0.150982,-9.953800,-4.236279,9.322432,-7.917943,3.670413,-4.330162,-9.043777,-0.779325,-9.222989,8.624309,-6.184447,3.516166,9.487498,-4.676956,-4.480655,4.192470,-3.506467,-2.878650,-7.522454,-0.889280,6.438449,-4.126455,3.906035,-5.461027,4.680253,9.047352,0.712008,1.711562,-8.728553,-1.048461,-1.442409,7.430311,-1.706803,-9.574910,-3.956932,-7.944041,9.580099,9.956928,5.529770,3.973335,0.548308,8.727893,5.784293,5.480828,-2.063201,-7.832591,0.183753,5.780425,-8.483893,-3.915759,6.870308,-7.123746,-2.788244,6.032730,1.105566,-0.142437,1.193043,4.740100,-0.002796,-4.730809,9.785148,7.532562,8.137826,-2.329236,4.281834,-4.366779,8.293659,3.341271,6.493067,-1.701378,5.076820,8.669122,-3.850108,-4.528367,-5.307372,8.425583,5.544019,-5.089449,9.080304,-2.258490,-1.541786,3.104011,0.258239,6.029531,8.490029,7.298447,-0.513342,3.919006,-6.769458,5.265040,2.078250,-3.521754,-1.880270,9.188995,6.338175,-9.493832,-2.612905,3.414872,-6.189590,-5.278157,-4.478306,4.254291,3.764955,3.017939,-6.652860,-1.894879,9.061013,-2.112837,1.113419,-5.510667,-5.971376,-1.333501,-1.688473,-7.806123,-5.393311,9.686043,2.661484,7.492237,2.562960,-0.652732,-1.770112,6.964606,1.250197,3.197513,9.793215,1.897134,-8.914946,8.835084,0.371418,0.913855,-8.269723,2.635476,1.719457,-7.072780,1.899311,-2.651362,7.974969,-8.457626,-7.303748,-3.746285,5.717023,7.201561,6.772407,-4.084517,-2.962250,7.030732,-6.143499,-1.777963,2.725524,7.562825,3.087997,-4.300032,5.302557,8.068385,-0.359942,-9.995627,3.546898,6.623192,-1.499054,-6.857956,-7.928097,7.154082,-2.581963,-8.765702,8.200789,-3.950604,-8.331555,2.482409,0.532815,4.160251,-2.277393,6.814587,3.556759,7.661159,7.318754,-1.072004,8.521873,-7.993011,-9.813563,2.870933,-4.914611,-0.314249,7.865585,9.350054,9.584990,-2.412273,-1.951856,4.879878,2.288959,5.337483,-9.338409,-2.311517,0.354107,4.999038,6.427091,3.313385,6.797033,-1.381991,-5.960325,1.638964,-4.325129,5.532302,-9.994078,-4.836411,4.411299,-9.476316,-5.690077,2.656744,3.390134,9.371358,-4.336541,6.208445,-0.653944,-8.327144,8.304301,-8.062060,6.626393,-9.313026,1.408918,6.672205,-6.271273,-1.460719,-5.199372,-3.040963,5.775070,9.781101,3.844179,3.320761,-9.349887,-0.787279,2.026057,-4.747265,-2.629852,-3.700463,3.575495,7.362437,4.201804,-6.494724,0.764205,-5.360934,-2.085896,-0.187089,-5.053608,-6.674218,4.407965,-1.941593,9.151743,-4.733102,7.268649,0.303658,-9.989835,-1.070760,6.050672,-3.920392,1.984143,3.854866,-8.013863,4.417715,5.247955,0.442596,-7.625612,1.749500,-9.437244,-2.595701,9.642891,5.773111,-2.926126,7.031629,-2.854178,-2.034273,-7.359215,-1.550502,-4.626557,2.528720,4.624618,-0.886233,-7.783744,5.236006,6.555704,-4.079577,-3.798772,3.877524,2.494088,-3.135452,-2.596261,-9.088241],[-6.782076,8.521527,-6.209841,-4.813330,4.578491,-6.588783,-5.962215,5.787421,2.693647,-1.872053,5.340408,-4.239471,2.994426,-8.667939,8.412686,-4.163593,0.399947,-1.675955,4.784998,9.434854,-0.218846,-2.250421,-8.342681,-0.753050,-9.610365,9.230502,-7.655638,-2.528479,-4.865575,2.798727,0.524211,8.347129,9.626284,6.902857,-4.417747,-8.420974,-7.129946,8.779382,-2.979415,-9.224661,6.321351,-4.933256,4.196155,6.195482,9.506422,9.669176,-6.790343,-5.836036,7.484766,-7.503659,-6.653217,-5.984349,-8.821043,3.332102,2.195764,5.557421,5.839524,3.132355,-6.064962,-7.742529,0.765846,3.950799,-2.254502,-8.879940,0.983106,5.172834,9.474840,-1.084991,-5.884664,-5.431705,9.085823,-4.756314,2.945554,5.068035,-9.162197,6.519569,2.832286,8.546780,-8.355698,6.799058,6.218410,-3.457853,-1.347414,-4.084054,-2.973024,2.334325,-5.302892,6.222313,3.464037,2.439629,-2.325112,4.279961,8.903752,-7.734160,-5.636512,5.166522,-5.799674,-8.206334,-5.470138,4.989669,1.079187,-8.467615,-4.467548,2.395695,-1.296972,5.682012,-3.992411,3.604158,-9.682931,3.743825,7.544549,-1.669715,-2.709723,0.409677,8.397521,-9.722876,6.610717,-4.829056,-2.159701,0.685183,-7.274829,7.022142,6.856480,5.219154,-6.163375,6.671040,3.172057,-2.141648,-0.814247,4.354000,-6.223870,3.700396,-2.284187,-8.466702,3.447969,-9.623707,-8.939486,-7.043940,-1.809320,4.476271,1.192466,-2.313955,-1.154776,-0.456313,-4.429598,-8.112866,8.091684,-1.944967,8.678162,-8.391588,-4.469009,8.828599,7.783142,9.246747,2.895887,-1.595082,1.146879,6.244605,7.373820,-8.796359,9.315735,3.377340,-4.112042,0.651085,-3.509895,3.492399,-1.744765,3.210201,-0.517051,9.492581,-9.179958,-1.919423,-3.987667,7.015681,-1.692569,-2.413792,9.093597,-5.226175,2.257154,9.913784,-8.103253,8.823140,4.548977,-5.720856,7.474513,6.216132,0.793636,4.685844,-4.913820,-4.015136,-5.804500,-7.121543,-7.013202,-0.372136,-4.593601,5.176436,-1.967088,8.682750,1.982180,9.931080,1.144362,-0.479319,0.023037,8.839436,6.185534,-7.687349,-6.159427,7.196866,5.017031,-1.670115,7.150516,-7.526964,-3.338037,-6.213073,3.098686,-7.040771,-6.890585,-9.709278,-9.668087,1.684335,6.087368,-7.886120,8.338502,-7.204584,2.619039,-9.119243,-7.154131,-5.973302,4.143974,-1.054820,-2.727621,1.729069,-2.017353,-5.490213,4.416592,-5.942304,2.796719,-2.657285,-6.495818,-6.947219,-0.358348,-5.889770,1.926723,9.991730,8.147263,-7.951310,5.404213,4.169020,2.368799,-6.337536,5.617357,9.695804,2.821417,9.026409,-7.165237,0.185420,7.299651,0.081173,-4.923158,7.016687,-1.768793,-9.125430,6.141388,8.585242,9.779426,-8.442881,-9.741111,-4.861891,9.716034,8.700641,2.237492,-2.102990,8.860120,2.187887,9.797618,9.070248,-5.308047,1.034248,7.885981,-9.662011,-1.279728,-5.485102,-5.179521,0.127923,-1.052827,8.563247,3.362071,-5.431502,8.488302,7.554847,-1.145798,0.561155,-5.986332,6.405011,0.862493,-4.897861,-9.725735,1.217167,7.972898,-8.585503,9.288437,9.512593,-9.569665,4.721641,-8.858646,-5.175110,-6.607386,1.390427,-2.580210,-8.763665,9.585310,5.251845,1.936384,-6.963703,9.687451,4.367312,0.311518,-9.889188,-2.522210,7.604985,-2.154228,-5.232760,8.260603,2.048211,-1.107319,-9.377683,-1.597529,0.712778,-7.858447,1.574447,-4.834598,-1.849232,2.449938,2.026940,8.384954,-8.616064,-9.548574,-7.791111,1.272704,0.324796,7.787017,4.557451,-6.456189,-1.685308,-9.435455,-7.763986,-0.907926,-5.614828,9.804921,5.281312,9.120966,-1.995868,-4.823179,3.285910,-3.394174,7.637773,-9.673030,-7.248681,9.324257,7.885401,-2.392112,2.869961,5.215753,-4.758681,0.831927,7.315689,-5.118113,6.692025,-3.889668,-8.618540,6.770081,-1.035418,-4.597197,-1.402985,8.173889,1.350334,-9.457139,-2.793631,9.010152,-0.859424,2.195257,2.460201,-1.507396,-4.646832,0.167083,3.150237,7.940012,5.460527,-2.567674,3.676574,4.429225,4.854053,6.388041,0.195447,5.447139,-9.145434,5.194102,-7.362128,-9.288306,-3.085410,7.868412,-6.180126,-0.096303,-5.383903,-4.322780,-2.253440,-3.562103,2.432024,-0.434511,-5.895181,-6.526923,-5.671504,-8.636893,6.468435,8.708126,2.115594,-7.401555,9.270578,2.622085,9.225795,-2.152094,2.668304,-4.526639,-0.560746,-1.087641,-1.601945,7.813073,-9.656569,4.012923,-1.845614,-9.469196,2.211044,-5.702718,1.415769,-2.078930,9.407765,-1.614510,2.640942,3.400535,6.639382,1.421493,-1.330496,-4.253380,-3.358586,3.266950,8.882375,-9.725743,-3.027011,8.272586,-5.562283],[-2.939581,-4.612153,4.312431,5.276726,-8.164605,-2.751168,-0.493541,-2.858638,5.823458,-5.999039,-6.079253,-1.822227,-8.602008,8.521159,-2.917153,9.087214,4.008233,-7.933931,-8.790013,0.146340,-7.623909,-9.287673,-4.162650,-4.531478,2.476542,-9.246661,-8.656931,5.745508,9.054527,-1.500407,-6.277588,1.040057,-3.099360,-2.590227,7.271800,1.761484,9.027516,8.852719,-3.841817,-4.342770,-1.516510,4.966386,6.880674,-4.510329,6.157465,9.886120,-1.159925,1.653945,-1.405975,9.815350,0.273508,6.934553,-5.632788,7.857781,-2.336745,8.215958,-9.399526,4.858958,9.576095,8.230029,7.836995,-6.574380,1.435312,-3.220240,-9.837628,8.480962,-1.833729,-9.787040,7.839226,9.840334,4.713315,6.470866,-9.970919,-5.709876,-4.214734,-6.248766,-1.516607,1.423156,0.314617,8.251182,-2.583488,9.362996,0.214881,3.125569,2.208941,3.775783,0.685504,8.893895,8.691957,0.895760,8.639233,7.986867,2.206581,3.484083,-4.492230,-3.460024,7.074305,1.903327,9.599824,-4.387684,-9.502809,-1.286254,-5.094693,6.669677,9.869695,8.100547,-5.373193,-4.977168,4.872232,-6.196464,-8.820479,-4.555769,5.443442,-2.990748,5.814034,2.870483,-4.360552,5.380012,8.225191,8.167192,-9.927766,1.242887,6.636081,-8.732053,2.806186,1.159923,0.883722,-8.357838,6.528312,2.123686,5.417620,-4.937212,-4.007233,-9.796275,-4.554323,-8.743550,-7.047368,-1.037751,6.993762,-9.753842,7.479970,-3.104275,-9.507583,4.874209,-1.063095,-2.998597,-8.118753,9.527196,-7.547390,-3.765505,4.748718,1.959033,3.682460,-5.412334,-1.333318,9.930828,-4.677766,-9.864415,-9.661416,-2.176007,1.868828,-4.788438,-0.521654,-8.684051,0.041260,3.591371,-2.406103,-4.336318,-9.203259,-7.619816,-0.074086,2.356317,-4.046364,2.197479,5.878726,6.945040,-5.525038,-7.648292,3.360010,1.027136,-8.482152,-5.591938,-8.413403,-7.918244,5.671425,3.525057,-9.846155,-1.658271,4.047563,-8.381730,7.718925,0.506050,1.556829,-1.285551,-1.558074,-7.906142,7.619403,4.924060,5.601741,-4.739368,2.571027,-4.907230,-5.973499,-2.969023,-8.768445,6.164861,-9.840719,4.204462,-1.576130,-3.553926,-1.279476,2.123680,7.932227,1.912824,-9.609381,7.493297,4.071246,-6.408479,-5.863637,1.357266,6.851797,1.177733,2.948446,3.967226,-4.061184,4.507693,-5.267751,-5.523146,7.888503,0.234261,-3.669833,1.959576,-1.203026,2.260986,-6.053446,-6.823284,3.972139,1.308135,-5.497809,2.262608,6.133011,5.893381,2.239464,1.799158,3.510348,3.285031,-1.266208,-3.201966,-2.205002,7.200087,-1.580275,-4.264005,7.197390,3.320863,-1.472159,7.788603,2.917971,-8.998227,-1.855878,9.883802,-7.288833,7.776322,-0.469898,3.628564,-6.810946,7.781194,-6.188363,-7.578351,-1.311899,-5.420114,-2.060280,-2.582480,-1.716953,3.430808,-3.981852,3.410351,1.790094,7.000439,-3.855177,-6.319301,-8.509798,3.965798,1.560903,-9.158026,7.704187,-0.480069,-9.814546,8.310542,2.189774,-7.047435,-4.943003,-0.889325,-0.027227,1.079777,6.679165,8.184109,9.889046,-0.854313,4.621911,-3.552167,1.516990,-7.696424,2.619729,5.304456,-1.718623,2.487025,7.631604,-0.988476,6.436091,-4.870523,3.108222,-4.862852,-0.328100,0.389362,-7.884435,9.165505,9.918325,5.988250,5.746830,3.098260,-1.813532,-7.514913,0.782665,-4.686277,-6.233482,1.283163,-3.718509,9.403062,-7.039210,-9.844131,-6.760194,5.475242,-4.589246,1.119318,3.870878,4.829974,1.121953,4.906972,3.912868,2.652028,-6.731016,2.774840,3.540856,2.805429,-5.675191,-6.273261,2.097014,-4.251164,-5.623064,-9.217413,-1.769458,-3.734268,7.238215,-6.169215,8.623292,6.164826,-5.821306,-6.907878,1.397568,-4.200991,-3.385298,-3.834357,-6.604714,5.028704,-0.551348,-8.236201,5.436140,-7.637993,-4.218312,6.953154,1.998451,3.527633,-9.956159,4.005388,7.541580,4.339409,-4.523395,-9.927403,-8.820709,2.685880,4.830252,8.372288,-0.587022,7.415112,9.034661,-6.093282,1.490770,-5.569845,-9.827219,8.662136,2.829927,7.181720,9.868361,-8.557112,8.041932,-3.932517,4.856123,6.580425,-3.980304,-6.905186,-1.645529,-0.046111,-0.645755,6.994093,-7.989597,3.045198,7.574789,8.561354,-4.032217,-5.960590,2.304103,-6.807476,-1.257462,8.885349,-8.885120,-8.880058,-3.920385,7.526671,-9.889868,7.686978,9.124988,-7.641906,0.948198,9.862156,-6.802767,8.404221,1.507836,-9.762289,-2.182743,-9.729399,-1.386166,0.875404,7.706447,4.224628,3.263524,-8.319882,9.463437,6.699481,-3.235796,-1.185410,-8.184071,-0.827721,5.306372,6.297994,-9.131965,1.007463,8.986038,-4.408762,6.094735,-9.469921],[-4.487239,0.870829,2.110552,8.325858,-6.350527,-7.041153,8.851287,-2.524178,-2.015723,-6.283425,3.795758,7.992563,-1.972008,0.721536,3.552500,-5.306236,-7.112852,-1.421421,-6.891456,5.985168,8.842623,3.577985,-8.315831,-5.673330,-3.480413,-0.533593,-0.649616,-9.561591,9.904742,-3.711815,4.414437,-6.505169,-9.698924,3.230829,-8.199370,4.690025,7.780757,9.286729,-4.057971,-9.730786,-8.481652,-3.936301,-9.475946,-9.872496,-2.233889,-9.473225,8.337727,6.271728,3.928753,1.659536,0.610519,-8.876986,9.610883,4.961967,3.656393,-3.140847,-4.224931,-5.319639,8.535128,-6.720785,7.056719,5.323559,2.240500,-7.564295,-8.201575,8.925940,5.291565,-6.702248,2.610123,-4.130042,5.591989,-1.203985,-7.644209,-7.223292,0.855848,7.752079,2.299912,-8.378773,-5.421740,-8.094055,-3.000459,-1.216720,2.491913,-0.781435,-3.846422,8.594109,-0.026879,7.004198,-3.663761,-4.243883,-0.371158,-3.616931,0.017872,1.007579,6.104176,-1.733546,3.662739,3.284972,0.496719,2.513379,5.073491,5.477276,-5.260822,-9.834250,-9.299022,2.581406,-2.896349,-8.622541,-8.725884,1.132332,3.887582,4.662401,4.269440,7.504052,-5.587655,-4.203750,9.554811,8.560747,3.628671,-4.417003,9.582220,-9.628985,9.236640,9.664262,-3.138771,-1.137422,-0.829214,-4.416365,-9.715801,-2.838729,-4.110758,-1.977973,-4.333614,-0.856342,1.674104,7.754767,-0.094673,9.919201,-4.419537,5.433693,1.088412,9.985950,9.311089,5.152964,9.425905,-4.437849,1.203476,-3.841347,5.268855,5.668772,9.478578,0.629872,-5.122286,-2.205601,2.756817,-8.914907,1.163093,-8.820874,3.839797,-7.811319,9.893197,4.532904,-7.020808,-3.548747,-8.195472,-6.480398,-7.128093,1.970229,-4.523897,9.794648,4.419867,1.790218,7.230259,7.457646,8.242863,-4.880023,-0.988362,3.896368,0.013346,-1.335337,8.799072,8.103402,-6.109327,8.192937,-1.100233,-6.009634,-7.771714,-6.115081,1.778343,-9.984343,-8.338731,7.510183,-5.681350,0.880120,-8.676634,2.483941,-0.463407,5.718540,8.679700,-9.384356,-4.032223,7.882902,-2.784611,-9.544863,9.787124,-5.137133,7.607236,2.388927,4.370012,8.099081,-9.798633,4.442089,-6.945034,-3.492910,2.850216,1.401296,1.764228,-8.996749,0.133752,-6.113354,-6.867006,-9.850830,-8.215877,9.744055,-0.420028,-2.530113,-5.622272,7.403488,-1.329793,-7.148332,-6.867448,5.301765,2.398825,5.189243,2.258140,7.863239,8.502680,1.542310,0.550558,1.030370,-4.589717,4.642863,6.472073,7.613516,-0.587971,-7.364908,4.748312,-9.598403,3.626704,6.479757,0.538623,-5.927521,-1.909143,0.767297,9.218300,3.677613,-6.615499,-0.523890,-7.881661,7.400746,5.011585,4.534265,-6.459154,6.149732,-8.510503,-0.088912,-7.440641,-6.064752,-9.673971,-0.283152,-2.521438,0.972314,-4.162731,-9.639143,8.935037,0.195967,0.506153,-0.371405,3.481946,-6.124075,-6.318333,8.312511,1.305118,-9.852610,0.834170,3.226136,-3.284471,-0.349295,-2.074762,1.691873,1.205930,2.946539,-5.807352,-2.971267,0.876193,8.033496,8.607765,-7.968744,-1.054379,-3.744947,-9.121502,2.906649,3.133114,9.132391,-9.683815,7.125487,-9.003491,5.096404,-3.640523,-6.803396,-8.722716,-5.367890,-8.884989,-0.792881,5.643241,9.700147,8.570842,-8.511280,-8.343623,-8.904892,3.352566,-1.835473,-9.360220,-0.840397,3.613670,8.953387,-9.684954,0.413113,-7.002318,8.084379,4.319969,4.083192,6.903617,2.405259,-7.831878,-3.704923,8.598818,9.747296,-0.198205,7.798062,-6.022603,0.931646,-2.503773,2.579546,6.188621,-1.478966,0.356557,1.863498,3.039474,4.987547,-8.839236,7.550560,-3.560810,-8.461508,-5.032023,5.977707,-3.270436,5.514627,2.266173,3.849467,5.982583,5.361298,-0.058176,8.581327,4.897688,9.492540,5.054845,-3.055926,8.657702,-1.515679,-8.588668,-2.478023,3.997173,9.918901,-5.950366,4.332605,-1.955540,8.250904,2.978410,-7.452974,9.648709,-6.430357,7.573576,-1.453319,6.227613,-5.833885,-0.977425,-3.845602,2.694681,9.899679,4.113953,3.777391,7.373068,-1.026493,-2.137204,-5.153336,-3.122492,-1.765157,9.412235,-6.484252,3.270485,-8.385452,0.384448,9.605043,-6.333758,-7.949042,5.077418,1.764004,-5.846815,8.938746,-1.400082,-1.710829,7.904231,-4.515054,-9.977061,6.770970,-5.523162,8.230869,8.979858,-8.750689,3.245372,3.241916,-9.044029,-7.547819,-9.278866,8.846259,0.949845,2.606868,-1.116562,0.821284,-1.565874,3.332470,-5.281880,-4.543241,9.183050,9.106827,1.409265,-5.592139,9.852411,4.928002,-7.250931,-6.962004,-7.520841,-8.055186,-5.243358,7.298779,1.843840,7.064972,-6.700389,3.333882],[-4.609191,-0.462468,6.122002,1.705031,5.631588,-8.626740,-6.491407,6.990510,-8.355571,4.584015,5.521068,9.579290,4.892794,-8.641747,-8.427812,-8.262650,-3.331437,-5.443750,3.920786,-4.598372,-4.672301,-6.575334,-8.922594,-1.635610,-0.084126,9.808873,-4.741450,-0.469977,4.113998,0.813209,-8.908156,-5.828559,7.308634,-7.134992,-2.095017,7.198410,4.171769,4.969892,-0.786348,-1.461273,-0.331230,-3.919996,-9.890258,-8.233196,-9.057124,9.911522,6.266112,0.564077,-6.399101,4.947828,1.657954,-1.991950,8.385350,-2.040288,9.726273,-6.663674,-5.866402,-8.124468,1.315498,-1.709030,8.788431,-0.956860,5.545666,7.971232,0.166007,-9.892629,5.020099,4.481083,3.885922,-0.236939,-7.410635,-4.947052,-9.637513,8.666229,7.671442,3.673751,2.907650,-7.233870,7.140156,-7.982230,-7.099185,3.618328,5.273377,-1.112741,-3.691014,9.007285,4.054131,3.963937,9.585955,5.763638,-9.424202,3.471024,-0.123143,-9.387853,6.500482,-5.098798,-9.842630,0.964832,-4.396933,-9.247135,8.425527,9.634035,7.516329,-6.961931,6.581672,5.218566,-3.465972,1.681177,-0.825745,-8.380452,6.070237,-7.652259,5.408111,9.256654,1.512187,-0.887752,-1.983430,-3.677384,8.526397,-6.622235,-4.387870,-8.486311,-0.787358,-7.569061,-1.372536,-6.100827,2.874318,3.429269,-1.396385,1.614085,-1.927334,-8.432560,3.658700,-0.532365,9.230008,-2.218577,-4.109087,-7.613050,-6.400175,-1.570861,-1.140208,-8.312544,2.332110,-3.491006,7.578511,2.528135,4.393583,-2.659343,-3.028796,7.161171,9.000516,-7.801312,0.182875,-1.101449,6.646527,-1.319791,0.487563,9.122884,-9.887016,-3.609726,1.838815,9.601447,-6.078379,-7.801920,-7.483159,-0.916911,3.548644,2.605714,-1.436068,-5.406050,-7.951394,4.342052,-2.674403,-5.017050,-7.474750,-4.579631,7.292696,-3.877992,6.474451,-6.025025,1.091092,1.730675,5.986961,1.425036,-9.006956,9.820915,-6.274341,-3.588647,-4.815180,4.262569,6.467826,-8.298282,2.773048,-8.790782,4.360210,-4.652661,-9.397342,1.465450,-6.281437,3.834853,6.653211,-5.456722,0.115525,-2.859973,5.204071,-7.540156,8.302278,5.625291,8.506426,8.383793,8.030178,7.189656,5.609983,3.527894,7.639473,-0.504132,-6.420873,-2.040282,2.020703,3.814654,-7.862365,3.153640,-6.142205,-8.951089,8.122348,8.349874,9.376987,-6.070356,4.964165,8.985742,-2.487662,1.291395,-1.226919,-5.549243,-2.949421,-7.873053,0.644132,-5.383232,3.829454,4.630137,-1.808863,6.922603,-9.783064,-3.145622,6.031589,-8.622463,1.900542,-5.520192,-0.822196,8.197397,-2.449166,8.103730,-4.446966,-2.496974,0.877357,-0.953878,-7.460585,3.640174,6.957568,-5.865682,1.575491,-7.080513,1.763120,-6.487652,5.612101,-5.104813,-9.890709,6.774199,-9.629751,-5.745661,0.140162,1.897180,-2.552253,-2.704889,6.957287,-3.249097,-2.663010,5.988606,-9.801622,1.431723,-0.336414,2.456712,5.528404,0.244862,-0.278500,0.628396,-5.504412,3.033889,-5.294813,-4.774911,8.110513,-7.310740,0.862374,9.582230,-3.800411,6.845866,-1.386559,9.798397,7.078962,9.358943,-5.877226,3.991938,-7.097865,0.877339,6.730177,-8.166580,-6.195700,-8.968616,-4.400620,4.154968,-8.223506,5.699984,-4.590899,-5.471728,8.135352,1.366947,5.685495,-9.545434,-0.727386,-4.515268,0.575805,-4.462216,7.124916,4.724498,-1.066866,-5.320614,5.271650,5.861242,-0.596834,7.028714,-5.442512,5.715403,-3.213596,9.410488,5.170373,-0.440479,-6.652620,1.854770,2.777622,0.576411,8.195512,-1.335836,-9.951934,-7.279891,0.929162,-2.128648,3.556131,9.440402,-0.717698,-2.585099,-6.025500,-1.482316,8.618773,0.540033,0.776812,-1.465548,-9.370190,2.818865,-6.301427,-1.817203,-9.959686,6.887665,-4.931324,4.111531,1.154509,8.381561,-4.144309,-9.813865,4.656144,-3.954913,5.396095,4.188684,9.438033,-8.181203,5.360216,8.464447,2.242121,9.855950,-0.472235,-0.688688,-7.195003,2.368253,-0.468474,-8.212691,4.429986,-7.987418,0.728516,9.866726,-5.409406,-4.826455,-4.646259,9.276732,0.664221,2.433948,9.613966,5.459358,0.754143,-4.326464,7.343008,3.594936,8.207377,7.608842,-3.359579,3.700612,-2.647397,-0.797526,-3.323787,-5.452486,-6.387102,1.601456,-8.325741,0.838955,2.597087,1.720890,-6.006700,-4.430178,-6.301743,-9.221800,-9.718484,4.176952,5.790981,5.145349,-4.726449,4.804282,3.644707,-6.106870,-5.095657,-0.063691,-8.619711,-0.517082,-9.494753,-0.226795,-6.224739,8.992505,5.776673,5.725616,-8.458227,-8.446627,-4.873351,6.042901,-5.183690,3.020024,6.973457,-1.143196,1.208165,-8.300197,3.957569,-0.216973,7.054853,-2.805895],[9.471035,-8.402270,-0.724052,-8.394294,-5.722573,9.945776,3.563676,2.686718,-4.821891,-4.949284,-1.874780,8.360637,-4.033817,5.962107,-9.449598,-5.654305,1.411657,6.492747,0.889170,7.315670,-4.492066,-4.080651,5.545604,-6.781087,5.172545,-5.893567,-2.390168,-9.805468,3.948685,-1.722838,7.829211,2.283419,5.414930,6.194063,-2.647899,1.064591,4.564254,5.215344,8.937011,-8.987221,-1.236851,6.255997,-1.979782,7.987414,8.822010,3.929809,-5.906032,-6.996216,-7.460906,-0.840557,-3.204342,9.432297,4.504314,-4.998079,-5.771614,-8.338382,0.666705,6.453057,7.199553,-4.372058,7.311355,3.390596,-7.527991,4.476723,9.562530,-3.214771,4.257448,0.722212,-8.448828,-0.422010,-8.955535,2.998675,-8.510927,-5.121902,-4.681428,-7.185988,-7.025184,6.123109,9.226108,8.753849,5.939291,-4.723097,9.766536,2.019269,-0.928815,7.235584,-1.823269,-2.921269,0.257893,-0.172411,0.947084,3.551539,6.818613,8.693416,-6.806712,4.473762,-6.929684,-1.136038,-8.340247,5.163635,3.175460,2.331156,7.539138,-9.224056,-9.552586,-2.142989,-4.519068,-4.389745,4.628270,-3.865172,-5.775397,1.256029,-3.540856,8.874556,5.612800,3.707854,7.137129,5.572419,-4.555306,4.176492,-2.847171,8.956735,-2.200270,-6.666325,5.736993,9.129592,4.378141,-6.713476,-0.216436,-5.037757,-4.195069,3.701330,-9.759221,-4.685892,-6.885689,-3.655676,-7.758571,4.506657,2.461814,-9.909730,2.451732,-1.435982,-0.008949,-3.667810,-8.877782,-0.476808,-6.616121,-2.327601,-5.782270,6.917010,0.015363,-6.814379,0.613550,-5.714505,9.318681,1.524118,-2.439672,6.118357,-8.593930,9.217544,-9.286681,4.946269,7.378833,-2.069285,8.972513,7.560503,1.189295,-7.366518,7.262853,5.679888,3.203272,0.381105,-5.262890,-8.027302,-5.847667,-6.967833,5.212803,6.334848,0.607919,8.431383,-2.747277,4.765239,-0.650675,-7.962720,-9.003137,-6.447530,2.646218,5.074709,1.023002,-1.126598,-5.427903,-4.766087,3.611734,-4.140258,0.505312,2.840568,-9.722069,8.424960,-2.225499,2.883618,3.662755,-1.848192,3.339176,2.607168,7.213413,5.969247,-7.979916,0.850094,6.194435,-7.842180,7.469144,-3.878776,6.575574,-3.244582,-5.735791,-0.710861,-0.862251,-8.732307,2.283929,-6.580097,2.735092,-2.770142,0.061403,4.884991,9.406293,-9.725812,8.565688,4.212732,-8.568177,-6.615977,7.236664,1.381145,7.727673,6.036001,7.930272,6.680787,6.042280,-8.872264,-4.052200,-4.046283,3.015832,-9.994681,7.940131,4.988893,-1.774366,-0.629848,0.087289,7.755530,5.873811,1.190037,-8.358359,-1.050430,-6.267112,-1.850629,-6.481016,-4.730870,5.893775,8.487275,-7.829974,4.583879,-5.812832,-1.537505,5.803746,0.513702,2.713460,3.247536,2.318091,6.355776,-7.272723,-7.641389,-3.332137,-4.707693,-8.096389,3.588642,0.456948,4.621414,-9.497846,7.436099,0.929514,6.378741,1.605250,-9.246086,-5.910483,-5.691843,3.133000,6.672921,5.032323,-8.943355,9.587792,3.271957,-8.713679,1.484929,-0.955869,-9.626975,6.220715,-8.937820,-5.979649,5.046011,9.178548,7.970078,1.079663,-1.900043,-5.864169,-5.385614,-4.859332,-9.263570,-5.835961,-0.821110,-9.140245,-7.323379,-3.251100,-7.374186,5.379043,6.446855,8.699513,1.722770,1.248148,-4.550157,-7.465388,-6.471503,-6.283665,8.676148,-2.940323,1.245254,-0.750067,-8.513775,5.556678,9.264210,-4.859453,0.902133,9.314629,-1.292159,-7.924039,9.566282,5.778156,-8.766399,-4.552486,-4.847012,3.968694,-4.087047,5.611811,-0.924303,6.238394,5.374079,-4.136489,-6.903746,-2.100369,-1.740531,6.865031,6.998260,8.029067,-8.132429,-3.090709,-5.183013,-6.183681,8.765635,7.019675,-8.067039,-4.530729,4.412825,-7.612132,-5.760401,-5.307510,-0.683214,-1.451690,8.003292,6.367969,-0.807052,-3.383825,0.110787,3.400672,1.615110,-9.249200,6.249463,1.689147,2.866754,-9.389128,-0.716957,-0.994129,-1.482544,5.567872,3.147410,5.379017,-5.076922,-7.107141,9.697044,-2.171429,8.532821,-7.967574,2.146798,3.857719,-2.139754,0.824792,-2.639187,5.720532,-3.355250,-8.688374,9.138880,3.214349,-6.167706,6.890942,4.797412,-0.918726,-2.616901,-4.665419,-1.595019,-5.270869,2.219028,-2.699317,4.903018,4.453163,-1.318932,8.331650,1.283828,3.138636,9.977691,2.743267,-4.836412,7.324579,1.276117,3.605821,0.004153,-3.961877,5.262796,-9.931138,-3.607509,-4.434833,-7.522300,-8.910032,4.129477,8.859802,-0.451857,1.242863,-9.611203,7.298793,-1.829289,1.609739,-2.542994,6.060863,-2.908350,-2.250284,1.650805,5.634972,9.089204,1.291277,9.502956,3.786525,-1.908027,7.620092,7.266902],[-8.755877,1.900743,1.614666,6.505007,0.767108,-1.714893,-1.984241,-0.297821,0.263204,5.526939,-5.567657,1.036751,-7.925851,6.392878,-0.992246,-6.673484,-1.673381,6.206647,0.942546,-8.010766,-8.955148,-2.443096,-8.957571,3.282824,-9.191580,9.618145,7.495474,-7.014275,-7.563980,5.282021,-9.365052,3.053102,7.602197,-7.656263,8.880481,1.835982,-7.794465,-1.325003,8.576034,-7.859594,-7.742133,-0.093527,0.055913,6.866368,-0.474104,-2.444422,-9.182395,-1.440040,-3.381056,-4.343644,8.237322,-0.184734,5.599673,4.273229,-0.154136,4.191704,3.703271,-8.088871,-7.178563,-4.723797,5.073945,-3.682281,-7.868825,9.569470,1.589910,-2.456595,-4.694380,-9.299957,7.013571,-7.008455,-4.340157,-2.150163,9.362858,-3.076742,-3.232060,1.159662,0.614489,2.460699,-7.700706,8.813728,-6.536955,-3.362986,-0.552730,-4.097257,-1.223310,3.039178,-6.731269,-7.846558,-6.134458,-0.303365,6.507875,-0.926289,6.377152,-9.807752,3.314017,7.810994,1.483744,-5.326524,1.070501,6.482215,6.743338,-4.855457,-2.171387,6.997639,0.671907,0.040364,7.551087,5.738081,9.647458,-6.724005,3.453126,-7.849068,-7.182624,-9.228104,-3.845393,8.089973,-2.291314,8.322070,5.932589,-4.211146,-4.916800,1.107974,3.622705,-5.994826,4.113266,1.567845,2.889221,8.047213,-3.346378,4.591756,-0.537765,-5.590360,-0.506836,9.090772,3.278957,-9.549536,-8.710192,4.543495,-2.981706,-7.216456,4.512878,8.603595,-9.058325,-8.420848,-9.415169,2.754124,-7.842418,-7.376837,1.384048,-5.924824,1.284984,2.755314,2.845806,2.431853,-0.633286,2.128221,-7.676173,-7.013596,5.809908,9.092212,-8.202398,-5.753237,6.913782,1.197351,4.094379,4.720742,-9.881606,-6.640429,4.115024,-3.370895,5.395373,8.491761,-6.827923,-6.460186,-3.952225,3.001515,-3.883772,-3.120497,-9.559782,9.699414,4.310336,-0.458850,1.922248,5.236154,1.266365,-6.917569,7.219735,-4.355357,-3.507857,-2.275838,-0.094568,8.230199,0.700712,-3.744906,-1.296586,3.221720,-9.733379,2.509652,-9.263775,1.183843,-8.461881,0.856048,3.024592,4.539470,-4.709877,4.123287,-2.070173,-9.327536,-6.247179,1.953894,-6.578119,-7.959435,5.795617,-6.164713,1.585493,6.703086,8.516324,4.919631,-0.335937,-4.474569,-5.475646,3.191012,8.201708,7.369491,6.226456,-3.791783,4.085879,-6.692519,-6.248238,0.800235,-5.991330,-4.763532,9.046137,3.111939,-1.440366,-0.194868,0.564764,7.984423,9.003331,-1.882464,-0.383725,-5.909158,8.550796,-3.103607,1.136621,8.945845,-0.708842,-7.416820,-8.873485,5.296485,0.045445,3.032688,6.175557,6.489752,1.451024,4.373522,-8.586945,-8.187276,9.991896,-1.858401,-4.342611,-5.292744,8.712774,-0.441360,-7.527601,-7.654390,1.139023,-9.324670,3.636391,-1.737463,0.908875,-9.233459,6.001338,-3.303915,0.064365,-2.032839,-9.298269,-8.152448,7.429104,1.665644,-1.074790,4.313380,-1.168054,-6.646113,-0.867756,-1.609364,9.166270,4.068440,8.152286,6.536376,-2.234813,-8.284448,-7.973199,-8.623808,1.197490,-4.974203,-2.849660,-4.605705,7.857071,-0.463415,7.133599,-3.759259,7.423208,3.159846,1.020068,8.938836,-6.480447,-8.125304,-7.662999,-1.652993,7.910500,4.499558,0.964329,-1.921189,-9.674664,-7.186868,8.278546,-5.421286,-1.528302,-9.941578,-9.723546,-9.767530,2.713873,-4.867647,6.463295,-7.092321,7.667263,-1.976763,0.091471,3.983551,6.483352,2.745122,-9.115824,1.407010,5.328750,-9.148579,7.622931,6.004519,-3.029817,-8.704193,-1.882381,-2.208012,-9.624487,-6.085152,9.624358,-5.222046,0.933661,5.874994,4.945899,8.934856,-7.372933,8.525967,-3.542380,3.195040,-8.950496,-9.088469,-1.368170,-9.954273,-5.157582,-4.417813,-7.943765,-2.443242,-2.662476,-7.204494,6.475029,-8.301202,6.880854,3.249238,-2.633214,-0.652161,3.666437,-5.648847,6.446793,-7.975098,5.806305,7.540679,7.532660,-7.900566,-8.068630,-7.077248,-9.077972,2.492130,-6.307067,4.715992,8.312669,2.619519,-9.180716,-6.604404,-8.781535,4.354445,7.094449,5.661678,7.197198,-2.692944,-2.301061,7.073090,-3.508800,2.030254,0.412324,6.493851,-7.991191,7.586504,-5.347316,4.885309,2.855729,1.512064,0.444989,8.618815,-7.203781,-1.696950,-9.200334,7.209528,2.580631,4.581444,2.609258,1.777230,4.247095,-6.595418,2.737447,-0.279395,2.082232,4.335208,8.384833,3.235782,3.003478,-7.789302,6.252286,-1.881475,-9.861704,9.948307,-1.025904,-0.570231,-7.051592,-4.745804,-9.650311,-8.686985,-5.096819,-0.201587,-2.380251,9.585701,-1.708275,-4.905094,1.821150,-2.797851,-5.778120,3.338053,-1.312003,5.638401,-5.917017,-8.449255],[-1.387939,-2.877382,4.409609,-6.741409,-0.067480,6.789427,-5.001253,-1.363697,-9.718592,7.213330,6.829496,1.475603,-1.687295,-4.527701,-1.629926,2.837304,7.240607,0.049803,1.286428,-7.572305,1.504550,-6.879667,6.096527,9.332378,4.721369,2.230922,5.853378,-9.759802,2.488363,2.815195,-9.645975,-8.780468,-0.253844,-0.585896,-1.857731,-1.904538,-0.332798,3.518387,1.420090,3.962421,2.344581,0.223406,0.979036,0.626463,-1.797365,6.761538,8.555875,-8.068533,0.482903,6.374912,-5.022911,-6.766705,-9.833693,-6.831870,-6.995717,-8.817836,-1.826285,8.267153,-0.570562,-3.640852,5.651650,9.224126,-2.696803,-5.285724,-9.407569,9.128186,2.522409,0.633703,1.853256,-3.448248,7.990090,5.294143,-2.278248,0.307912,3.322996,-5.948728,6.368101,-0.120989,7.929588,-6.436867,-8.527851,-4.356928,1.859247,-5.760983,-4.256252,-7.576076,5.620811,5.834956,-6.401234,-0.656171,2.064631,-4.276985,-4.125651,-2.430479,-8.561968,0.133903,-4.668206,-4.182121,5.985770,-5.462425,8.562536,2.239894,-8.758429,6.901554,-8.821175,8.460633,-3.052186,-3.140767,-6.914114,-1.316900,5.402827,1.759498,-5.892653,0.729291,-3.245597,2.966748,1.600198,2.124050,6.276393,-8.445446,-6.119483,3.523518,-2.455079,-1.379781,-6.405223,5.336545,-8.699484,6.159159,-4.239891,3.488232,-6.472257,8.899503,5.053160,-3.054602,1.613521,-1.394450,-5.351384,-2.652230,-2.548477,0.169474,4.638318,-4.301516,0.162217,-3.792948,2.849473,0.142181,-0.188917,2.090809,6.670204,0.816017,-8.379540,-2.246111,0.215592,1.163782,1.670001,3.959919,3.264624,4.735855,5.830136,4.404868,7.923218,1.551831,1.028980,8.249017,-3.527145,2.691106,1.524554,2.823679,-3.101650,-8.645118,6.020066,-1.539192,0.046843,2.206925,-8.388981,5.511571,7.495124,3.703263,5.583531,6.443174,4.251526,6.423883,1.714476,-2.454483,1.619985,7.506508,-9.430439,-3.404254,5.737074,-4.095733,-7.091293,9.493677,-5.246764,-6.826702,-1.468602,3.737888,-4.841655,-6.622595,1.344347,0.394347,0.777666,2.145180,-0.715269,8.260164,-8.483948,0.900870,-8.052789,-7.226794,-3.700769,-2.906514,5.710920,-0.996108,-8.682804,8.325726,8.618889,2.227956,4.813702,-9.366191,-9.954900,-1.055174,-2.293356,9.682204,-0.851662,4.719300,-3.149740,9.172345,-0.448668,1.701506,-2.926508,-5.786473,1.609939,-5.583605,1.222719,-1.504484,7.466224,-1.799270,0.284384,-5.978283,1.186108,-5.179435,5.040197,2.743568,7.547367,8.866006,0.527363,-5.311959,6.727869,-2.611583,1.765876,-0.146161,5.365860,-8.361325,-2.869242,-0.797645,6.411229,9.992262,7.391119,-7.454936,2.972196,-5.839990,2.691270,0.796519,-7.148039,1.282454,-0.396663,-2.715784,-3.202732,-8.623957,5.056445,1.671840,5.082700,4.235736,0.525135,-7.731073,3.393344,-9.013573,9.054738,3.342706,0.873090,9.183413,-4.414811,4.295622,1.293135,2.467797,-2.621974,0.078760,4.696240,-3.291315,-5.965903,0.056038,-9.075989,-0.276253,1.598442,0.199872,6.246777,7.849785,-3.777987,-1.098519,-5.544852,-2.359297,-1.926222,5.326365,-6.429340,9.564654,-2.763817,0.398773,-9.839363,-1.009855,9.317655,-5.114054,-3.310437,6.995172,-2.769630,-3.637744,7.401950,3.037829,-6.063378,-4.342701,4.000017,0.973363,-8.402329,-3.249952,2.152411,0.134813,-5.169197,8.699763,1.465211,6.740803,-0.482182,-2.707874,-7.978690,-6.735973,-7.494625,8.561227,-9.643212,3.745680,5.809965,3.262096,-0.682913,-5.837674,-2.158373,-8.922421,-9.646672,4.614428,0.319898,-0.336983,1.151975,5.403211,6.452451,6.347958,6.975323,2.532627,-6.899022,1.169860,8.242459,0.792506,0.213046,8.108047,8.315576,7.286768,-9.092858,-1.262796,-7.550523,-9.224941,0.414638,8.070462,-8.563864,1.830800,6.838185,-0.514511,-7.880463,-0.598130,1.888684,2.528974,-5.367863,6.423412,6.221437,-6.933306,8.236189,0.797194,1.911359,-5.360566,0.165507,-6.414295,-1.753944,4.913739,3.696704,4.700559,7.157731,2.747293,5.849224,3.556837,3.252898,-4.379429,-2.639859,6.653834,-0.271192,9.233286,7.510181,-4.260310,-1.427717,2.645940,2.216833,-7.249846,8.627597,-2.285140,4.596225,2.436916,1.827063,6.817116,-7.605707,1.841497,-2.360779,-9.101064,7.349569,-3.578957,5.202445,3.635008,-1.050100,3.695263,8.554812,-1.097740,4.989536,0.568844,8.274197,-5.113487,3.030525,-6.718873,8.620139,-7.816199,0.103864,-0.371907,-0.575994,0.454519,-9.808738,-5.995134,-5.976439,-2.041525,9.235040,-9.950439,-9.156144,-7.879560,0.478735,-3.271060,8.595208,4.307053,1.723735,2.062175,9.710543,-9.820161],[-0.031392,3.750590,4.998682,-6.961426,-5.308191,4.210537,-5.634158,-3.376479,-4.426299,-4.722323,5.774799,-8.399331,3.893334,-5.403701,-3.435229,-4.809819,-5.653436,9.984058,8.023998,-3.970294,-2.869875,6.279293,3.110575,-1.999497,-3.430259,8.578085,-1.419102,-0.685421,-7.555043,-3.403443,4.011802,0.947264,4.347119,1.547139,-4.417326,-2.477192,5.487309,1.701237,9.303222,-9.418262,-7.689551,-2.826941,1.277741,9.642868,2.354972,-2.857435,-2.045729,-4.954315,-9.738446,0.108553,2.326303,7.217314,5.121937,3.827069,7.400848,-3.717599,-9.641692,-4.877844,1.712836,2.724621,-5.329250,6.779444,9.886683,-5.161142,6.082791,-6.523369,9.627754,7.762586,4.407981,0.139971,-3.641545,-8.140029,-5.273533,-7.521552,-0.525486,2.486560,9.848462,-7.366190,-4.158188,-4.566628,-3.398573,9.839281,-5.706158,-1.733830,1.858505,-4.200688,5.174672,-5.664091,-3.881996,9.653328,-2.236144,8.263426,8.219160,-9.874229,-2.383822,3.666109,-0.372900,-2.325955,5.377915,-1.312522,-5.155831,-6.041743,4.964432,-8.703562,7.517406,7.327518,-4.520501,6.251937,-2.198100,8.837725,-6.122097,1.594908,1.545512,9.590661,-2.685956,-9.634994,9.333495,-0.917877,5.541678,-8.605517,-2.408479,4.649578,-5.005796,-6.724564,-5.203811,3.705947,-7.572738,4.219061,-3.726749,-4.192032,-2.177534,4.547883,4.320590,1.069066,-4.614671,1.035255,8.307993,3.679858,5.488012,-0.212062,-8.157383,-8.581835,-1.315469,-3.255238,-1.683696,2.509235,2.226581,-7.370014,-1.715431,-6.261802,0.492244,8.893695,-9.409660,-8.967925,-7.270814,3.666766,-9.308631,3.919586,-9.954729,4.931237,-4.344594,8.561684,-6.770367,-8.379616,0.621773,4.914897,-8.294153,9.309828,-9.940245,-8.696439,-0.351672,5.507416,1.784876,5.821043,-9.885363,-9.950095,6.747722,8.141782,-7.854389,-0.120676,-4.897934,-4.154711,-7.740668,4.441163,-0.922748,9.367343,1.304208,4.752073,4.798225,-4.159074,-3.976721,-8.467953,2.087857,4.360109,9.007106,9.845573,3.447803,-4.685338,-3.526902,-3.079289,0.379590,7.964829,-4.223313,7.506870,-7.729795,-6.783965,2.538791,-5.800120,-4.870258,-9.837077,-0.969734,3.210950,7.496821,6.202853,7.467170,-4.200247,-8.098033,0.873526,6.466055,-4.771665,9.634082,-7.758900,-5.167476,8.425788,-5.001868,-7.398022,7.961113,-4.177336,-9.168618,-8.138075,-0.200477,-9.861918,4.586607,2.456199,7.699587,-3.243140,-4.941745,9.683633,4.365004,4.081448,-0.306833,-6.452287,8.475010,-5.185892,9.995422,5.893218,-3.925116,-8.340914,-7.059047,-4.950264,1.166305,-6.894657,9.625066,-0.196161,-7.097682,-3.385989,-8.289910,-2.106099,2.277419,5.133427,-1.695881,-8.314881,-6.291166,-6.372123,2.842866,-0.502161,9.057337,-8.130559,-5.700127,8.116300,2.870029,9.216127,2.413484,2.826418,4.467490,4.214109,-1.755023,-5.634364,-3.281326,0.075324,7.435725,-0.582266,-5.549510,6.741758,-6.951078,6.822847,-9.660722,1.302035,-7.258187,-5.921445,3.875579,7.944465,-8.154129,-7.894382,-2.363021,-6.808905,-7.767635,-0.473339,6.494000,2.751852,3.090078,6.991970,-4.020235,5.870765,-9.967691,-9.815619,9.177196,7.460716,5.871653,-9.812401,8.594356,6.610877,0.908008,-1.806859,4.045938,-9.635334,-4.357689,-1.571969,-8.867024,6.728746,9.317985,-6.954017,-3.234065,-8.400688,-8.612980,0.987846,0.810573,9.174907,1.375212,-9.568569,3.379293,3.283340,-9.064227,-3.629244,4.439641,9.568238,3.574161,2.152879,4.700948,1.228873,-6.601627,1.698488,2.352326,-6.158909,-6.903683,5.506027,-8.867933,3.905139,-5.203061,2.068357,-4.752145,3.409957,7.880456,1.393962,-1.651188,-1.724493,9.500520,9.261101,-3.856051,4.918674,-3.151447,-2.115339,2.949214,7.820735,-4.781760,8.582814,-3.546100,-5.627027,9.781920,-7.234408,7.812553,-3.116419,3.677363,2.164227,-1.624890,-4.790144,-6.276611,1.111281,0.847002,5.022509,8.296265,-2.515264,2.500010,6.903469,-3.692067,5.438648,-3.477217,-8.966123,9.641712,5.848922,8.475390,-1.038108,5.739523,3.019501,-1.579152,-8.261316,-8.597645,1.649206,4.636808,-4.008251,6.406797,7.061817,-8.158243,9.424610,-2.910333,0.273319,-9.166920,0.730753,3.413965,-2.779676,3.725657,0.816469,1.623953,-8.010070,-9.889667,-6.709033,-3.030447,7.981050,-1.640957,-4.442228,-9.693050,-2.678024,8.656444,-7.539894,-6.983870,-7.485463,3.169590,4.638365,3.489421,9.478389,7.804651,9.649940,-0.063443,-0.668023,2.402252,0.774829,-4.770215,-5.390580,4.205882,-0.645900,-8.962795,3.472679,-7.787520,-0.320259,-1.808137,0.788445,-7.947082,6.519341,-9.551418,9.510400]], dtype = "float32")#candidate|7898|(13, 450)|const|float32
bop_7899 = relay.logical_xor(const_7893.astype('int32'), const_7898.astype('int32')) # shape=(13, 450)
func_2618_call = mod.get_global_var('func_2618')
func_2622_call = mutated_mod.get_global_var('func_2622')
var_7904 = relay.var("var_7904", dtype = "int8", shape = (210,))#candidate|7904|(210,)|var|int8
call_7903 = func_2618_call(relay.reshape(var_7904.astype('int8'), [15, 7, 2]), relay.reshape(var_7904.astype('int8'), [15, 7, 2]), )
call_7905 = func_2618_call(relay.reshape(var_7904.astype('int8'), [15, 7, 2]), relay.reshape(var_7904.astype('int8'), [15, 7, 2]), )
func_239_call = mod.get_global_var('func_239')
func_243_call = mutated_mod.get_global_var('func_243')
var_7909 = relay.var("var_7909", dtype = "uint32", shape = (11, 7))#candidate|7909|(11, 7)|var|uint32
const_7910 = relay.const([[7,-4],[6,7],[-4,-8],[-7,5],[9,-9],[-3,6],[8,-6],[8,-3],[-1,-3],[5,-10],[4,-4],[-7,2],[-5,10],[9,-9],[-6,7],[4,-8],[-9,5],[-10,4],[3,4],[9,7],[-1,3],[2,9],[6,1],[-8,-8],[-7,-10],[7,10],[4,-9],[4,-6],[-4,-4],[-10,4],[9,-7],[-2,5],[-5,8],[-10,2],[-6,6],[9,-4],[-10,9],[9,5],[7,-8],[-4,-2],[-7,3],[-1,-1],[5,7],[-9,7],[7,-9],[-9,8],[-6,-7],[-9,-1],[9,6],[-10,9],[2,1],[6,1],[6,-4],[4,-1],[10,3],[6,8],[2,7],[8,-7],[-3,4],[-6,5],[-4,-7],[2,-1],[5,-4],[1,-8],[5,-3],[3,-5],[-8,-6],[-1,8],[-1,-6],[-2,-7],[-2,-8],[4,-4],[-1,-2],[-8,-1],[-4,-1],[-9,2],[6,4],[6,5],[-4,-1],[-10,7],[-5,-8],[-6,9],[5,6],[-1,-3],[-8,-4],[-8,-4],[-3,3],[3,5],[-1,-1],[1,8],[10,-9],[6,-7],[-8,-1],[-10,-3],[10,-6],[-7,1],[5,4],[9,-3],[8,1],[5,8],[-9,-4],[-4,3],[2,-6],[-10,7],[-8,3],[-5,-10],[10,8],[-9,1],[-5,-10],[1,-2],[-1,-1],[7,10],[1,7],[-2,10],[8,9],[6,7],[6,-2],[-1,9],[-5,4],[-10,-1],[8,8],[3,-1],[-8,8],[10,-5],[5,3],[-2,-5],[-3,-10],[3,-4],[9,10],[10,3],[-2,9],[-6,-8],[2,6],[-4,-2],[2,-9],[-5,-6],[5,-4],[-7,-10],[-8,1],[-5,-7],[-2,10],[4,4],[4,-2],[8,-1],[4,-7],[-4,8],[-8,-8],[-9,8],[7,-9],[10,8],[-9,-2],[8,10],[-3,-3],[-4,1],[-1,2],[5,1],[-10,7],[-4,-3],[-5,9],[-2,-7],[4,2],[-4,-7],[-3,5],[1,-1],[6,2],[-5,2],[1,5],[-8,8],[2,-9],[4,-1],[9,6],[4,2],[7,2],[8,-2],[-5,4],[-9,7],[-4,-8],[-6,-7],[7,-4],[1,2],[9,-10],[8,-8],[10,6],[6,-3],[-2,1],[1,1],[-9,10],[-3,10],[6,9],[-3,-7],[-10,-4],[-6,9],[7,-6],[-5,-6],[-3,6],[3,-6],[-7,5],[1,-5],[-2,-9],[4,-6],[5,-9],[8,7],[-6,-7],[-1,7],[7,8],[-1,3],[1,-4],[8,-8],[-2,5],[4,1],[-7,6],[3,-5],[-5,-2],[-7,-2],[5,-5],[-7,-5],[-10,9],[4,-4],[10,10],[5,-6],[2,7],[-1,10],[-6,-8],[-8,2],[-5,1],[-2,-2],[-5,6],[2,10],[-9,5],[-7,-5],[-10,6],[8,-5],[8,2],[-1,2],[1,-5],[9,-8],[2,8],[8,4],[8,5],[7,-9],[-8,-3],[-7,6],[-3,2],[-8,-2],[-4,4],[6,10],[-8,-10],[-5,-10],[-1,-5],[-9,8],[-3,6],[3,-6],[10,8],[5,-10],[5,8],[10,-4],[-10,-9],[9,1],[-10,-7],[-4,-1],[-2,10],[9,2],[1,-3],[-7,-2],[-5,8],[-10,7],[-7,-6],[-7,5],[6,-9],[-7,-10],[-3,9],[-1,9],[-6,3],[7,10],[6,4],[1,-5],[5,3],[-6,-10],[7,9],[4,5],[6,-6],[9,4],[1,9],[7,8],[-9,-6],[7,6],[-7,3],[4,1],[-5,-2],[4,10],[-3,-7],[4,-4],[8,9],[-6,-9],[-9,-4],[10,4],[6,-2],[3,-6],[-2,9],[-8,-6],[-3,-4],[-10,-1],[5,4],[5,-5],[-6,-1],[-10,5],[8,5],[-7,2],[7,-10],[-9,8],[10,-1],[1,-6],[-2,6],[-2,3],[5,5],[10,5],[-5,4],[5,10],[-5,-10],[7,-5],[-1,-1],[4,-2],[-2,4],[-6,9],[1,7],[-5,-3],[8,-1],[9,3],[9,-2],[10,3],[-5,-3],[-5,4],[6,-3],[-8,3],[10,-8],[10,-7],[-7,-1],[7,8],[2,-4],[-4,2],[-10,10],[1,-2],[7,-8],[-3,-5],[7,9],[1,-5],[9,-7],[-6,2],[6,-3],[-5,-8],[7,7],[-2,-2],[10,1],[9,4],[5,-2],[2,8],[3,-5],[-8,-1],[8,9],[-2,-6],[-4,-4],[5,4],[9,1],[-9,-1],[2,-3],[8,7],[1,5],[7,-8],[10,-6],[9,-5],[6,-2],[-4,-7],[1,-7],[3,-7],[10,-10],[7,9],[-9,2],[-7,-6],[10,-7],[-3,1],[6,4],[-1,-4],[5,7],[-1,9],[3,5],[8,-2],[3,7],[4,9],[5,7],[-6,-5],[4,-5],[8,4],[7,1],[3,8],[-3,-2],[-10,-4],[6,-10],[-4,-5],[9,-5],[6,-10],[9,10],[5,7],[-10,2],[2,6],[-9,2],[3,4],[-1,-9],[-6,-10],[10,-6],[8,2],[2,10],[2,-4],[4,6],[7,-7],[1,-5],[-5,-4],[5,-10],[3,10],[6,9],[-8,10],[-1,7],[-10,-6],[2,-8],[6,-2],[1,-5],[1,-10],[-7,-6],[-4,-7],[5,-4],[-2,-6],[4,1],[-5,1],[2,8],[1,-2],[-9,-5],[5,9],[-6,6],[7,-2],[7,1],[4,-8],[9,-2],[4,-1],[2,-7],[8,10],[-10,3],[10,8],[-9,-9],[-2,3],[-3,-2],[-9,-1],[10,10],[3,-3],[-8,-2],[-2,-8],[-9,5],[-4,-3],[-3,7],[9,-5],[-7,9],[6,-4],[-8,5],[-5,2],[1,-5],[8,-3],[4,-5],[9,4],[-6,5],[4,-8],[-4,-4],[-7,-4],[8,5],[-9,8],[-10,6],[2,5],[-2,-2],[8,9],[-5,2],[1,-2],[9,-4],[-8,2],[5,9],[-8,7],[-3,-8],[-1,2],[2,-9],[3,-4],[9,-1],[-10,6],[10,5],[10,-10],[5,3],[-7,-1],[2,-1],[-9,5],[3,-6],[-8,-10],[-10,6],[1,2],[-4,-1],[1,-9],[9,-7],[-7,10],[-8,-4],[-1,-5],[-3,2],[7,-9],[10,-3],[9,-5],[3,1],[-6,-1],[7,1],[2,-8],[6,-9],[3,-5],[6,-5],[9,-7],[4,2],[9,4],[-9,-4],[10,-5],[4,-9],[-10,4],[-10,2],[1,-4],[7,4],[-9,2],[3,8],[1,-8],[-7,-4],[1,2],[-6,-3],[-6,-1],[10,9],[-2,-7],[8,-8],[9,4],[3,3],[-5,-5],[1,-8]], dtype = "uint32")#candidate|7910|(539, 2)|const|uint32
call_7908 = relay.TupleGetItem(func_239_call(relay.reshape(var_7909.astype('uint32'), [1, 7, 11]), relay.reshape(const_7910.astype('uint32'), [14, 7, 11]), ), 0)
call_7911 = relay.TupleGetItem(func_243_call(relay.reshape(var_7909.astype('uint32'), [1, 7, 11]), relay.reshape(const_7910.astype('uint32'), [14, 7, 11]), ), 0)
func_2775_call = mod.get_global_var('func_2775')
func_2778_call = mutated_mod.get_global_var('func_2778')
const_7918 = relay.const([[-7.568707,-5.900244,9.267586,-4.509885,9.706846,-1.270223,-1.442448,-1.320711,5.176392,0.933670,-3.145392,-3.839902,-4.168587,-6.896342,-3.626759,9.974819,-2.923266,2.972446,3.269353,-4.512028,-0.654628,-3.664132,-2.198519,7.712524,-8.999968,-2.646597,0.754025,-7.747652,-3.002055,-1.992231,-4.677572,5.623456,9.173393,-6.270759,6.833488,1.203626,8.585940,-3.697839,5.318385,-3.086219,-1.979648,-5.842055,4.374973,0.849447,1.714211,6.421749,8.012498,4.399354,4.886325,6.016914,-2.919768,-9.740778,9.945734,1.024709,4.971110,-3.043890,-5.456796,6.360393,-1.120300,6.716356,-7.906054,4.030613,-0.667867,5.859541,-0.521039,-8.086361,1.123641,-3.267323,3.459614,7.843753,9.436101,-8.244877,-8.467156,-7.759084,-5.379355,8.420361,-9.973373,-1.552966,2.876775,-6.586861,3.145952,-1.820784,-7.293391,8.852806,-3.791089,-9.999118,-2.449691,1.578419],[-7.285053,2.397103,4.910429,0.612227,7.372876,-1.262417,6.979836,-2.534037,8.578084,-3.845775,-7.333388,2.406330,-1.433374,-3.072944,-4.985911,-5.320309,4.438395,2.209059,-0.568714,-5.986430,2.351417,-4.950441,-5.938361,8.516003,2.665992,3.107462,5.642054,-3.938995,-0.481413,-1.871233,-9.621675,1.349699,3.628862,-1.255265,1.785033,9.739249,-1.876902,-3.059293,2.269442,-3.204262,7.337196,-7.729813,6.319734,-6.768978,1.813534,-3.416984,9.518461,-9.115952,2.923467,-3.871553,8.091998,9.493219,1.277849,-2.218902,9.226619,2.915630,-0.602863,7.704490,-4.134997,9.095368,-9.048338,8.598901,7.234405,-5.941282,3.057875,-0.140236,8.801605,-1.525313,8.998003,3.324072,1.456177,3.979872,-1.720301,3.559222,-4.217073,-0.246995,3.690828,4.513324,3.274973,7.384260,-9.435937,-3.106522,2.264700,7.773513,8.412933,1.115962,8.344739,8.992356],[9.431171,5.627356,1.507214,-4.317149,9.243465,-8.060817,-4.736144,0.757703,1.864941,-4.182178,-3.444440,5.069949,-3.454873,4.724836,8.715364,3.917857,9.045956,-4.588797,-1.575772,2.595133,-1.193962,3.594760,8.807008,-0.401785,-6.834449,6.229055,-0.375934,-1.354325,3.581340,-9.444198,-7.730001,8.489850,-5.161477,5.405279,3.103754,9.932719,-4.356209,-8.685315,0.316451,-5.770579,7.915983,7.119903,-9.550132,-0.480264,5.461228,-9.260190,-0.154620,6.313808,6.401952,5.797726,-3.911130,1.849897,3.571737,-1.715260,-2.910523,-3.622407,5.985829,9.984973,-4.717827,3.163925,-4.872694,4.884924,-7.161508,-6.697828,5.792622,-2.521041,-7.413372,-9.297797,1.163361,-3.097081,3.198854,2.046080,-2.845278,-3.736132,-1.369346,-8.567701,8.195065,8.873797,2.611418,-9.048090,6.997112,-0.771541,-9.530180,-3.440239,5.636279,6.123535,6.056616,9.422579]], dtype = "float64")#candidate|7918|(3, 88)|const|float64
call_7917 = relay.TupleGetItem(func_2775_call(relay.reshape(const_7918.astype('float64'), [2, 11, 12]), relay.reshape(const_7910.astype('uint32'), [1078,]), ), 0)
call_7919 = relay.TupleGetItem(func_2778_call(relay.reshape(const_7918.astype('float64'), [2, 11, 12]), relay.reshape(const_7910.astype('uint32'), [1078,]), ), 0)
output = relay.Tuple([call_7867,call_7892,var_7894,bop_7899,call_7903,var_7904,call_7908,var_7909,const_7910,call_7917,const_7918,])
output2 = relay.Tuple([call_7868,call_7895,var_7894,bop_7899,call_7905,var_7904,call_7911,var_7909,const_7910,call_7919,const_7918,])
func_7923 = relay.Function([var_7894,var_7904,var_7909,], output)
mod['func_7923'] = func_7923
mod = relay.transform.InferType()(mod)
var_7924 = relay.var("var_7924", dtype = "float32", shape = (2352,))#candidate|7924|(2352,)|var|float32
var_7925 = relay.var("var_7925", dtype = "int8", shape = (210,))#candidate|7925|(210,)|var|int8
var_7926 = relay.var("var_7926", dtype = "uint32", shape = (11, 7))#candidate|7926|(11, 7)|var|uint32
output = func_7923(var_7924,var_7925,var_7926,)
func_7927 = relay.Function([var_7924,var_7925,var_7926,], output)
mutated_mod['func_7927'] = func_7927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7724_call = mod.get_global_var('func_7724')
func_7726_call = mutated_mod.get_global_var('func_7726')
call_7942 = relay.TupleGetItem(func_7724_call(), 0)
call_7943 = relay.TupleGetItem(func_7726_call(), 0)
output = relay.Tuple([call_7942,])
output2 = relay.Tuple([call_7943,])
func_7954 = relay.Function([], output)
mod['func_7954'] = func_7954
mod = relay.transform.InferType()(mod)
mutated_mod['func_7954'] = func_7954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7954_call = mutated_mod.get_global_var('func_7954')
call_7955 = func_7954_call()
output = call_7955
func_7956 = relay.Function([], output)
mutated_mod['func_7956'] = func_7956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_7959 = relay.TupleGetItem(func_7042_call(), 0)
call_7960 = relay.TupleGetItem(func_7044_call(), 0)
var_7974 = relay.var("var_7974", dtype = "int64", shape = (5, 3, 9))#candidate|7974|(5, 3, 9)|var|int64
bop_7975 = relay.left_shift(call_7959.astype('int8'), relay.reshape(var_7974.astype('int8'), relay.shape_of(call_7959))) # shape=(5, 3, 9)
bop_7978 = relay.left_shift(call_7960.astype('int8'), relay.reshape(var_7974.astype('int8'), relay.shape_of(call_7960))) # shape=(5, 3, 9)
uop_7985 = relay.erf(call_7959.astype('float32')) # shape=(5, 3, 9)
uop_7987 = relay.erf(call_7960.astype('float32')) # shape=(5, 3, 9)
output = relay.Tuple([bop_7975,uop_7985,])
output2 = relay.Tuple([bop_7978,uop_7987,])
func_7992 = relay.Function([var_7974,], output)
mod['func_7992'] = func_7992
mod = relay.transform.InferType()(mod)
mutated_mod['func_7992'] = func_7992
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7993 = relay.var("var_7993", dtype = "int64", shape = (5, 3, 9))#candidate|7993|(5, 3, 9)|var|int64
func_7992_call = mutated_mod.get_global_var('func_7992')
call_7994 = func_7992_call(var_7993)
output = call_7994
func_7995 = relay.Function([var_7993], output)
mutated_mod['func_7995'] = func_7995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7799_call = mod.get_global_var('func_7799')
func_7800_call = mutated_mod.get_global_var('func_7800')
call_8026 = relay.TupleGetItem(func_7799_call(), 0)
call_8027 = relay.TupleGetItem(func_7800_call(), 0)
output = call_8026
output2 = call_8027
func_8028 = relay.Function([], output)
mod['func_8028'] = func_8028
mod = relay.transform.InferType()(mod)
output = func_8028()
func_8029 = relay.Function([], output)
mutated_mod['func_8029'] = func_8029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7799_call = mod.get_global_var('func_7799')
func_7800_call = mutated_mod.get_global_var('func_7800')
call_8042 = relay.TupleGetItem(func_7799_call(), 0)
call_8043 = relay.TupleGetItem(func_7800_call(), 0)
output = relay.Tuple([call_8042,])
output2 = relay.Tuple([call_8043,])
func_8052 = relay.Function([], output)
mod['func_8052'] = func_8052
mod = relay.transform.InferType()(mod)
output = func_8052()
func_8053 = relay.Function([], output)
mutated_mod['func_8053'] = func_8053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7605_call = mod.get_global_var('func_7605')
func_7606_call = mutated_mod.get_global_var('func_7606')
call_8077 = relay.TupleGetItem(func_7605_call(), 0)
call_8078 = relay.TupleGetItem(func_7606_call(), 0)
output = call_8077
output2 = call_8078
func_8090 = relay.Function([], output)
mod['func_8090'] = func_8090
mod = relay.transform.InferType()(mod)
mutated_mod['func_8090'] = func_8090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8090_call = mutated_mod.get_global_var('func_8090')
call_8091 = func_8090_call()
output = call_8091
func_8092 = relay.Function([], output)
mutated_mod['func_8092'] = func_8092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7747_call = mod.get_global_var('func_7747')
func_7749_call = mutated_mod.get_global_var('func_7749')
call_8106 = relay.TupleGetItem(func_7747_call(), 1)
call_8107 = relay.TupleGetItem(func_7749_call(), 1)
output = relay.Tuple([call_8106,])
output2 = relay.Tuple([call_8107,])
func_8121 = relay.Function([], output)
mod['func_8121'] = func_8121
mod = relay.transform.InferType()(mod)
output = func_8121()
func_8122 = relay.Function([], output)
mutated_mod['func_8122'] = func_8122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8121_call = mod.get_global_var('func_8121')
func_8122_call = mutated_mod.get_global_var('func_8122')
call_8153 = relay.TupleGetItem(func_8121_call(), 0)
call_8154 = relay.TupleGetItem(func_8122_call(), 0)
func_6139_call = mod.get_global_var('func_6139')
func_6144_call = mutated_mod.get_global_var('func_6144')
var_8159 = relay.var("var_8159", dtype = "float32", shape = (36, 2))#candidate|8159|(36, 2)|var|float32
const_8160 = relay.const(-2, dtype = "int64")#candidate|8160|()|const|int64
const_8161 = relay.const([[-9],[-3],[-7],[-10],[3],[1],[-5],[4],[6],[-3],[7],[-5],[9],[5],[-4],[-8],[-5],[2],[9],[-1],[7],[-10],[10],[4],[-8],[-6],[-10],[-9],[2],[8],[10],[1],[-8],[7],[4],[-10],[1],[-5],[-6],[10],[7],[-10],[-4],[-6],[4],[4],[-4],[9],[-7],[-9],[-8],[6]], dtype = "int64")#candidate|8161|(52, 1)|const|int64
call_8158 = relay.TupleGetItem(func_6139_call(relay.reshape(var_8159.astype('float32'), [2, 6, 6]), relay.reshape(const_8160.astype('int64'), []), relay.reshape(const_8161.astype('int64'), [52,]), relay.reshape(var_8159.astype('float32'), [2, 6, 6]), ), 0)
call_8162 = relay.TupleGetItem(func_6144_call(relay.reshape(var_8159.astype('float32'), [2, 6, 6]), relay.reshape(const_8160.astype('int64'), []), relay.reshape(const_8161.astype('int64'), [52,]), relay.reshape(var_8159.astype('float32'), [2, 6, 6]), ), 0)
output = relay.Tuple([call_8153,call_8158,var_8159,const_8160,const_8161,])
output2 = relay.Tuple([call_8154,call_8162,var_8159,const_8160,const_8161,])
func_8171 = relay.Function([var_8159,], output)
mod['func_8171'] = func_8171
mod = relay.transform.InferType()(mod)
mutated_mod['func_8171'] = func_8171
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8172 = relay.var("var_8172", dtype = "float32", shape = (36, 2))#candidate|8172|(36, 2)|var|float32
func_8171_call = mutated_mod.get_global_var('func_8171')
call_8173 = func_8171_call(var_8172)
output = call_8173
func_8174 = relay.Function([var_8172], output)
mutated_mod['func_8174'] = func_8174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_8242 = relay.TupleGetItem(func_7042_call(), 0)
call_8243 = relay.TupleGetItem(func_7044_call(), 0)
output = call_8242
output2 = call_8243
func_8244 = relay.Function([], output)
mod['func_8244'] = func_8244
mod = relay.transform.InferType()(mod)
output = func_8244()
func_8245 = relay.Function([], output)
mutated_mod['func_8245'] = func_8245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_8278 = relay.TupleGetItem(func_7042_call(), 0)
call_8279 = relay.TupleGetItem(func_7044_call(), 0)
output = call_8278
output2 = call_8279
func_8289 = relay.Function([], output)
mod['func_8289'] = func_8289
mod = relay.transform.InferType()(mod)
output = func_8289()
func_8290 = relay.Function([], output)
mutated_mod['func_8290'] = func_8290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_8303 = relay.TupleGetItem(func_7042_call(), 0)
call_8304 = relay.TupleGetItem(func_7044_call(), 0)
func_1335_call = mod.get_global_var('func_1335')
func_1340_call = mutated_mod.get_global_var('func_1340')
const_8331 = relay.const([-6,-1,6,-2,9,-2,-10,1,9,3,-5,3,-9,-3,-10,2,-1,6,5,10,1,10,-1,3,10,2,-1,9,7,-2,2,4,-7,3,-10,9,7,3,4,-9,-9,2,-8,-9,-10,-4,7,8,-2,-9,5,6,-9,1,-2,-8,1,-5,8,6,7,2,1,9,2,6,3,-1,-10,6,3,6,-3,-7,-5,10,-4], dtype = "uint32")#candidate|8331|(77,)|const|uint32
const_8332 = relay.const([[-5,6,-3,5,-6,4,-5,3,-4,3,-6,9,4,2,7,8,3,5,-10,-2,7,-6,7,-2,10,4,8,3,-7,-9,10,-8,5,1,-2,-2,10,-5,7,-7,1,-4,-7,5,1,8,-3,-4,-10,2,7,4,1,-6,5,9,7,8,-10,9,7,3,-4,8,10,-9,-5,-6,-10,-9,8,-4,-9,10,-7,9,6,6,8,7,6,-7,-7,-9,7,-6,4,-9,-2,2,-10,5,-4,-8,-5,-2,-1,3,-4,-4,10,6,-10,9,-8,3,-6,3,-9,4,-6,-6,5,-4,4,2,10,10,-4,5,-1,-9,-9,7,-3,-4,7,-7,-1,-5,-1,-9,-4,-4,-7,10,7,5,2,-2,4,6,-5,-8,-6,-1,10,1,-8,-4,-1,-3,4,2],[3,-8,1,-2,9,-5,3,-1,6,10,-6,-9,7,-3,3,4,1,-2,-10,-1,4,-1,1,-3,5,-1,6,-7,-5,5,-8,-1,-2,3,9,10,-9,-2,4,-7,9,-1,-1,9,3,-1,2,1,-9,8,8,1,9,-8,-1,6,-7,4,-7,4,-4,10,9,1,-6,5,-7,1,-2,-10,4,-2,5,8,6,4,9,7,7,-7,9,7,8,3,-5,-2,1,1,-9,-9,-5,8,-7,1,5,7,1,9,9,1,4,-4,-7,-10,6,-3,2,-4,-6,-3,4,-6,-1,4,6,-4,9,7,5,-6,7,-1,-1,-6,-1,-10,8,-9,1,-10,9,9,-4,-7,4,-9,3,7,-4,-4,3,-9,10,-1,1,9,-7,-9,-5,-9,2,-7,7,-10],[9,5,8,3,2,-10,-7,-3,7,5,-10,2,-10,6,5,10,10,5,1,-7,-4,-6,-5,-7,-4,-6,-5,-6,-7,2,-10,3,-10,-9,8,2,10,5,8,8,2,-6,-10,4,7,-9,-10,9,3,-9,-4,3,10,9,-1,1,1,-2,10,-8,4,7,2,-4,-4,5,5,-1,-9,-4,-7,6,2,1,-4,2,8,3,-5,-4,1,8,9,-10,2,-7,-1,-9,10,5,-8,-5,-6,4,-5,-10,-8,-2,-8,3,8,-8,-4,-2,-4,-10,5,7,-4,-1,-1,-5,9,-6,-10,6,-3,-9,-9,1,9,6,-7,-5,5,-9,-9,5,-2,5,-2,-1,3,-9,-2,-8,4,-7,6,-3,10,-7,-8,6,-5,-3,-10,-1,-6,-7,-3,-3,6,9],[4,5,5,2,6,5,-7,-8,5,-9,-10,-1,-1,9,4,1,9,1,-10,7,-9,9,1,4,-7,-8,1,-9,4,10,-5,6,-9,-9,-8,-6,9,4,5,7,-10,10,-4,2,8,-4,2,-8,-4,9,3,10,3,3,9,9,-5,-9,-7,-5,-4,9,-10,7,3,-8,3,8,10,-1,3,8,-8,-7,1,-9,2,1,2,5,-5,-4,1,-2,5,-1,5,6,-10,8,6,6,-3,1,-4,3,-1,8,8,4,7,-2,9,-6,3,-2,-1,-9,5,2,-6,1,-3,-1,2,6,3,2,10,-2,-3,-3,3,9,-2,1,7,7,-2,-2,-2,-6,8,8,7,10,6,-4,-7,-7,5,7,2,1,2,10,2,10,3,6,2,10,1,-5],[9,7,1,-6,-10,9,-2,6,3,4,6,6,9,-3,9,9,3,-2,2,9,8,-1,-7,6,3,-5,-3,-6,-6,5,1,3,-9,-10,6,-10,9,7,-10,-5,-5,3,-1,2,-2,-3,8,8,-3,-8,-10,-3,4,5,3,7,10,7,3,-1,6,-7,-9,4,5,-1,2,4,-4,-10,-8,-6,-10,-2,-4,-7,6,-5,-1,7,2,-1,-1,-2,3,-3,-10,-3,-4,3,-9,-6,-4,-10,-1,1,4,-2,8,-2,-8,5,-4,8,3,-5,2,7,-4,3,3,-1,-9,-2,6,7,8,2,10,1,-3,-8,-8,3,2,-9,3,2,2,-6,-7,-4,6,-9,6,-10,8,6,-2,10,-6,-9,-9,-8,2,-1,8,5,1,-10,4,8,7,10],[2,5,6,-4,2,8,-5,-4,4,6,-3,-2,6,3,-3,-7,10,10,4,1,-7,4,7,6,-9,-7,-1,-3,9,4,-6,7,-1,-2,-3,4,3,4,8,-3,4,-1,-9,4,10,-1,7,2,5,6,8,-1,-8,1,7,-2,6,-6,8,4,-5,4,-3,1,-10,-7,7,-9,3,2,6,10,7,-6,7,-5,-4,-6,5,4,-4,-4,-1,7,-3,-5,-3,10,5,9,7,-4,-2,8,10,3,-7,7,9,5,5,10,8,-9,7,5,-1,7,-1,-1,8,-5,10,-4,-7,1,-10,-9,-3,9,6,6,-5,3,7,-7,9,-2,5,7,7,-4,-1,5,-1,5,-10,-7,1,1,5,5,-9,4,-4,-3,-1,10,-10,-5,1,8,-1,6],[-6,-2,-2,-4,3,-2,9,8,4,1,2,5,-7,5,-10,10,8,7,-10,-1,-9,9,-2,-9,4,-2,-7,10,-2,2,5,-7,7,-3,5,7,8,-1,5,-9,-1,7,-8,3,-3,-9,10,-1,10,-3,9,8,-6,-10,-10,-9,-7,-10,-5,-4,-10,7,9,-9,4,-1,-2,2,9,-10,-10,9,-7,-4,-3,-1,9,5,5,-6,-3,-4,7,2,8,2,-3,5,1,-10,-6,-7,8,5,-5,-4,10,-5,2,3,-9,7,-8,-10,2,3,-3,-4,-4,6,-2,10,-6,8,-2,9,-8,3,-9,-6,7,8,2,2,-1,-7,-7,-4,2,5,7,-5,-10,-10,5,9,-5,-1,9,5,2,-2,9,-3,9,4,2,10,10,-3,6,-7,9,10]], dtype = "uint32")#candidate|8332|(7, 154)|const|uint32
const_8333 = relay.const([8.101851,-7.149764,-0.355838,-1.622932,9.902007,-5.482315,-0.268656,-8.973155,7.440987,-0.993979,-5.234887,0.457788,0.647762,1.020878,1.828279,-6.683712,-7.501715,-4.875623,1.574426,-1.546657,8.423276,-5.453705,-1.044901,4.969232,0.613058,-9.707117,-1.446040,-1.792097,-3.122744,-9.173860,8.388760,-7.030722,-9.061074,2.708008,8.710449,-2.395970,-9.000238,-2.916394,2.685267,3.344211,-2.738906,5.095136,1.430661,-4.580613,7.243316,6.778159,4.204511,-1.265499,-8.920528,6.288430,5.674288,-5.082311,-7.761839,2.853539,2.449559,9.233142,-8.680419,-9.344940,-9.223736,-4.012607,4.068185,0.213055,5.533951,-7.970613,8.864654,-9.461565,-6.976753,-3.739333,5.525661,-2.297459,-4.521228,-2.081896,-0.636725,-8.233588,3.667257,0.557572,-1.634833,-2.503462,-4.726299,4.061562,-3.228277,7.937950,5.385575,-3.844004,9.657068,2.490848,-1.896252,-8.439325,-0.660375,8.126571,6.431001,-9.066276,1.118203,-7.936939,-3.725188,4.164436,1.865287,8.259766,6.889622,5.451322,-7.467197,-1.763035,2.361389,-9.378496,-8.239964,4.010077,-4.593147,6.887952,-4.368340,5.758896,-1.027961,-1.810300,0.851331,-9.047599,0.468335,5.107974,-3.989089,-1.916700,6.018557,5.216265,-0.515952,5.543938,-9.681539,7.699462,-4.858440,4.508370,1.396441,-6.449693,4.485533,8.693618,7.935254,1.127305,3.024293,1.894075,-8.312688,-9.080466,5.978714,5.784616,-0.081455,3.545507,9.628857,2.708150,-1.224028,-9.492135,-3.489228,-7.281073,-6.952090,4.819898,6.728316,-9.165516,4.878130,-7.959616,6.642014,2.156443,-2.106332,-2.258398,4.748597,9.944409,-4.911259,-1.101995,0.897958,-9.047682,-0.758896,4.532305,-1.695760,2.084492,-3.670389,-8.027708,2.186130,-5.956608,-8.537164,9.883173,-1.166282,3.649489,-9.648235,-8.977807,-3.706116,-9.415330,-3.443822,-9.558111,6.126858,5.928101,-4.743777,3.114002,6.265343,9.338880,0.276131,0.506875,0.525891,-8.792619,-1.983116,-8.956490,4.628207,3.014250,-3.101217,-0.252399,7.101081,-4.226174,6.583086,0.993404,2.306891,5.986765,-4.582802,-5.265645,1.419772,3.008197,5.020823,3.122407,-2.577108,3.634918,-9.771241,1.898217,3.461990,2.638297,3.752976,4.381286,-7.828933,4.344398,7.423282,-7.226898,-5.039778,9.695341,0.381347,-7.475629,4.991140,3.144346,9.235248,-2.800587,-6.523152,-4.919968,-0.570285,-4.635500,-4.806498,1.457396,1.577734,-9.832339,-5.582171,-6.500917,-7.622445,5.935761,-6.001734,-4.573779,2.377734,-9.135027,-9.368751,-1.544545,-3.070880,1.947739,-5.319175,-7.236845,1.213137,-0.876968,-2.288170,9.203745,0.560550,4.556345,6.568937,-9.031529,-1.940337,-8.621028,4.694473,2.967791,1.284060,-7.639239,-7.446735,-7.681820,8.010777,9.160427,9.945814,0.067994,8.431929,-1.945661,-0.701059,-2.780685,9.636374,2.133401,5.946644,-3.910061,-1.714307,-8.805203,1.905191,-1.160984,0.448315,5.074054,-2.429069,-8.434422,9.261869,2.765280,1.443368,-1.745615,-5.470476,3.825769,-9.880463,3.860577,-0.928292,9.589513,-2.448197,-3.972843,5.900479,-5.317654,-7.584640,-4.370859,9.487892,1.684514,7.303037,6.655515,-1.984962,5.028112,-9.837809,8.642140,-2.336343,-0.495837,-8.384646,2.527356,-2.014608,1.891157,-3.156025,-9.289281,8.831209,-5.083111,4.034640,3.808331,-6.390706,6.903515,4.043264,0.256194,3.546184,-8.900770,-2.752702,-6.014882,0.950477,-3.953701,9.291210,5.355453,-1.396065,0.311453,3.265475,0.410214,2.124217,-3.065450,9.738968,-6.767512,3.262676,-6.977173,-4.670400,4.826705,3.424119,9.374536,-5.515879,2.006371,-0.928916,3.350842,5.973764,4.211578,1.439571,4.567499,7.498628,6.251878,-0.803135,3.830898,-2.832447,-0.779632,-1.515573,-9.088760,-0.425524,5.692027,-6.774000,-1.384230,-2.495061,-8.453546,2.007320,-2.382082,-6.895127,-2.791734,-3.593963,6.756517,-1.598343,-3.968414,-3.557975,1.373640,-9.950248,3.549826,9.997981,7.142739,-4.253220,2.766984,5.009933,-2.610611,-6.719508,7.139279,-3.541303,0.344849,-7.400711,8.492261,5.596542,-3.348868,-3.514241,-4.073380,1.944998,0.127704,-0.663816,-0.805967,-5.898143,2.716301,4.232319,7.729824,5.965345,-0.596483,-4.626734,-2.668406,-0.056461,-8.510110,8.684699,3.102357,-0.013373,-3.652882,1.768437,-8.551104,0.815192,-1.965785,-1.629240,8.391117,1.800328,-5.270341,0.513124,3.083817,0.191872,-9.430540,-7.908636,9.516978,-0.282775,5.694100,-9.106244,-1.572228,5.343088,-8.485393,-3.401115,-9.021374,7.554553,-6.223948,4.079784,0.721520,8.749915,0.799952,1.431857,-5.038104,-3.916866,0.205515,2.822840,8.413344,7.758507,3.430695,1.928993,7.083936,-8.909138,3.818497,5.894144,-6.439394,3.599088,-7.044210,-5.960640,-3.620562,4.844279,-5.780348,8.384381,4.410037,0.790653,3.814748,-9.496919,-7.116308,-3.635240,2.047529,-1.339585,-8.816519,5.175476,-7.702920,1.544889,1.416285,-2.495512,3.790875,8.040903,-7.878637,0.805999,0.396470,-5.410360,-1.233339,2.839950,-3.115145,1.751130,8.415290,-6.923730,5.291287,4.502127,-5.415983,-0.835790,1.228894,-7.585275,-5.201532,2.391922,-7.774735,9.525755,-9.138417,-5.072409,-6.915965,7.762952,-2.472032,9.594649,5.728605,-2.006696,2.837608,-9.272598,-7.189241,-2.172118,-8.675297,-8.348659,-3.100790,-1.021734,3.064582,3.975763,-0.532407,5.973774,-0.937358,-9.859887,6.487296,9.095526,3.349532,-5.168256,8.819403,3.504086,-0.617134,-3.218858,5.748226,-4.484511,4.967583,0.395546,-0.447567,-3.370742,5.880501,1.816094,-2.720919,1.534724,-1.917288,2.393725,7.049369,1.284304,5.460919,-8.345058,-9.295892,7.036706,-6.005720,-7.711390,5.272812,-6.613540,3.422018,-7.108790,-3.773304,-1.528921,7.039271,-1.468922,-7.498517,-1.601740,1.137323,-6.407317,8.523475,6.782226,-9.306505,2.908318,9.091230,4.221338,1.369179,-8.368501,0.694306,-3.811885,-3.397547,6.072371,-3.247976,-9.629449,-4.727380,-3.926375,-9.622751,-6.467573,7.367179,3.320317,3.177301,0.554380,-0.389446,-4.206055,-0.185058,-1.556993,-0.896427,0.667938,3.866006,-5.786642,4.055144,-7.126038,6.965675,-4.446606,-0.112705,7.544224,-7.807296,-7.922467,-8.588208,5.170979,4.163613,5.107927,7.026599,-7.873628,7.182916,0.986024,2.999014,-2.565328,-9.481532,8.705925,-5.104842,-0.389230,-1.351367,6.302986,1.970289,3.165941,-0.655639,-8.923466,-7.433281,0.185937,-0.224324,-6.284572,-9.199731,-6.564359,1.499346,9.493127,-1.943283,5.537248,-1.639699,4.110478,1.127518,-3.098719,3.849766,1.429432,9.210584,2.294822,0.405040,-0.878097,2.256412,-0.931814,-4.562047,-3.553566,7.940118,0.427729,3.481465,-7.715117,-1.766368,-2.479540,1.001149,5.362924,-4.366620,-6.442019,-6.691299,0.327457,7.796560,-3.385086,9.361027,-1.742796,-9.239875,-3.872920,-2.584100,-1.400971,6.377028,0.105386,4.720628,-4.847861,6.119145,9.603333,5.972682,5.471681,4.284425,-3.476183,3.678540,1.509039,9.910986,0.576660,-1.158734,-0.041187,-6.393520,5.678525,-4.663908,-3.336525,-1.991742,1.676366,-1.441242,2.284629,-3.640354,0.755006,-2.001009,-4.344746,-4.751024,-5.615328,6.710268,5.602621,-5.948902,4.838154,-0.730189,-5.331698,-7.604632,-3.263022,5.957211,-6.542310,5.873345,4.618257,-5.905200,4.602550,9.173558,-1.925129,-9.507142,-3.158433,-6.464860,5.863915,2.858500,2.756679,3.913038,3.210573,4.131734,6.540061,9.026352,7.079484,-9.642946,-0.196264,-9.033589,-4.986025,-3.739316,7.164657,9.353005,3.904600,-2.264482,-8.328150,-1.250308,-3.879158,0.961352,1.042055,-1.919854,-9.001068,3.651723,-6.435895,4.226301,1.617987,-5.148000,-5.046402,3.047853,-2.468153,7.353346,-1.723656,-7.352300,3.677450,-6.780333,-2.590268,0.616386,4.414038,-6.484067,-2.430305,-3.615142,8.677582,-6.401120,-8.975694,-8.735263,-0.252137,0.382900,2.371754,5.074788,5.518723,5.686214,6.835879,4.119881,-3.108424,-3.875001,4.111171,-5.256086,9.949070,4.368265,-2.512942,3.390279,7.164627,6.152635,-7.271408,6.207294,-8.011332,-1.268579,-5.383185,-6.619231,9.739776,0.404277,-0.758784,1.628430,8.592330,5.179784,-2.110538,-3.139861,-8.141512,2.184505,-6.082807,-0.456081,9.855398,-1.059538,-9.206290,-8.091356,-4.384845,2.326661,7.969992,-9.742298,6.823010,5.654047,-5.678226,2.480419,8.489141,-5.573981,2.726871,1.849808,6.374229,-0.305213,-9.742774,1.811762,4.398213,5.327119,8.855135,6.610546,-4.154059,2.927678,-4.810479,1.630248,3.968563,7.158670,-9.176880,7.679057,4.311536,-8.134015,4.915038,-0.870698,-9.855444,3.959905,1.047161,-6.996552,0.487010,8.455774,-6.998500,-4.643917,-5.993689,-2.157244,-2.957825,-1.947853,-0.011213,9.522826,-7.232484,-7.314353,-7.334595,-9.872053,-7.146129,2.297686,-3.854446,3.143327,0.861085,-1.390283,5.580607,-9.973729,9.882794,3.929482,8.751748,1.750503,-0.476611,-5.813749,7.093813,0.508468,8.573882,-0.866868,4.379109,-6.447331,6.761882,-6.576981,-0.990468,-3.779340,8.241543,5.977747,-1.138056,-4.973575,-5.887948,4.912198,2.903800,4.564719,1.345181,6.298851,8.487951,5.551861,-2.430498,4.295245,0.143586,-9.582677,-3.160799,0.563289,-8.622992,5.332509,0.077049,3.371710,7.489875,8.934128,-8.725580,4.221481,6.938567,-2.222283,-3.759730,-2.368566,5.754825,-1.210957,-4.669022,-6.462591,7.114631,2.828298,1.715077,-9.668487,9.468570,5.053174,-1.055239,9.903563,-8.092398,9.300694,0.496214,-8.197915,7.015604,-6.305916,-9.535147,-2.475799,6.883143,-9.949947,-6.605387,0.327849,2.345876,7.153990,-4.285537,9.700932,-7.587231,8.908383,-8.134220,-7.257308,4.411656,5.327717,-5.129975,6.868731,0.033350,-5.322444,-9.330400,4.118818,-8.007184,3.845138,7.796433,9.532141,-8.045791,8.261833,-8.972163,-7.652810,9.314188,-3.213569,2.501360,1.415431,0.685202,3.451403,5.239025,2.671119,5.236329,-3.054507,7.744331,3.919575,6.524793,-3.215073,-1.894495,7.294521,-3.944216,0.803238,2.970997,-1.980680,-6.314684,5.442308,-8.258638,-5.007776,3.636466,-3.623639,-2.416543,-6.648399,8.584709,-9.545332,1.709317,3.222348,7.150961,-2.311343,1.949492,3.277318,-5.074625,7.458201,-8.816650,-8.469163,4.009622,-3.666427,-7.787457,5.558931,-4.939181,-1.612582,3.265362,3.320894,-8.587938,0.590386,1.672177,-7.861888,6.192679,-3.742770,3.011212,-2.640208,-6.287716,-8.544740,7.456766,-4.077099,5.278586,-3.093350,-1.447532,7.701980,8.118346,-2.911309,-3.204223,-3.435358,-5.385150,1.599103,5.520475,-9.915703,-7.213874,2.753623,-5.860665,1.750366,-4.010981,-6.074285,-2.569688,1.776647,4.435448,-2.709152,-7.602539,6.374267,2.526958,-7.959584,-8.996200,-6.360521,-2.415538,8.458645,8.108272,-1.812184,-6.816512,-3.816093,8.905206,-8.800649,8.977711,-5.835433,9.396721,8.450456,-4.092457,2.071632,-7.781720,3.985624,1.050196,-0.858479,-2.482462,-7.763657,9.897150,8.554343,7.863369,4.749262,-0.888011,-4.603273,-7.208884,-6.419417,-4.584837,2.910221,-9.453837,5.215297,6.447746,-7.755287,-2.261381,-2.520384,-7.078543,-0.981789,3.248846,-0.756563,9.750625,9.884472,-9.664731,-3.418365,-0.707411,-4.775855,2.660305,-7.050409,8.982839,-6.449870,-6.138685,5.000840,-3.048320,-4.553151,-5.172368,3.937946,0.584022,7.414484,-2.366066,-9.861924,3.710257,8.238809,-6.442248,-4.718359,0.482383,-3.230861,8.802678,-2.672376,1.142336,-2.045911,4.631517,-6.082651,-4.012062,3.900899,6.531509,0.093800,-7.676149,8.338219,5.899249,-6.943118,-7.405649,-1.909489,-4.514743,2.139810,7.894503,1.661401,4.037031,4.279523,6.605208,6.870164,6.266449,-1.074258,3.744169,-4.657514,6.952388,4.315989,0.844734,2.962382,-7.951058,-5.879882,-5.714357,2.169962,1.672796,-4.815993,9.267270,2.229657,-6.027083,-9.618838,-9.033887,-1.556374,6.931979,5.003783,7.913781,-6.047236,-3.928096,8.021679,7.430535,-8.963785,-0.998566,5.122560,-7.405605,-1.230498,-5.911567,0.306580,4.388206,-8.367142,0.867616,-5.984051,8.428410,3.175893,7.245187,-3.638153,0.803811,7.658551,9.180983,7.576910,7.618321,8.518529,-6.617187,-3.961606,-8.934792,-3.588789,3.575193,6.055770,2.035659,-7.891887,3.963946,3.414730,9.270214,-5.442869,-0.719491,0.760024,0.627237,3.598319,6.407166,-5.910342,2.132683,3.667900,5.195179,7.195827,5.958904,2.523035,-4.908682,6.046451,1.125068,3.209648,9.575098,1.281729,8.568420,-8.335030,8.307577,-1.006370,8.124683,4.597438,-6.290441,-9.310251,-0.124392,4.051897,-7.044263,-8.809042,-3.457056,8.903671,-8.841063,5.372129,-4.050500,-6.035413,-6.214635,-5.760991,8.067872,-7.748668,-1.392108,7.766793,-1.181085,5.188862,-3.196366,-9.096732,4.178961,-3.140831,-4.526328,1.900493,-0.931695,-5.222782,6.856287,-3.442790,-0.698556,-2.159833,4.910573,2.969927,-4.795578,5.824206,5.643564,-2.902321,3.376400,-2.089569,-0.233030,-9.712673,-8.270889,3.864641,0.573419,-3.463472,-7.117810,-2.353984,-3.289241,6.084753,5.436427,7.383705,-6.812545,4.121608,9.433880,7.771398,-7.772170,-5.547156,0.549985,-2.354270,4.702776,-5.135875,5.530653,-8.646809,5.750188,9.594445,-6.372725,7.946087,-4.619317,-8.993184,-5.267043,4.900101,-6.310313,7.508426,5.162700,-0.584266,-8.842179,-8.988400,-1.745556,-4.473997,-4.825092,-8.302351,-5.946380,2.089449,-0.825029,-8.202058,9.887353,3.857427,1.010178,6.212193,-3.742515,-0.639456,4.545691,0.215423,2.874151,1.510159,2.817950,-3.662679,5.860800,-8.693457,9.545502,-4.868735,-1.419834,-6.466311,4.182263,-8.040821,-8.348799,-5.113503,9.630440,8.617957,2.526340,-3.634842,-0.984355,5.546735,-3.507911,9.170502,-6.158110,-5.509482,-8.682581,1.878909,3.219803,2.195659,-5.826024,6.543410,8.266003,-0.837270,0.162985,7.894340,3.616851,1.388256,-8.270565,4.657121,-0.680329,6.430713,0.379166,-3.043948,-4.740538,-6.117421,-7.125639,-0.123685,-0.261506,-3.922493,2.634692,4.436301,-7.628584,-1.254827,3.593158,-4.536251,-2.267667,-6.307422,-1.434224,-1.253438,9.978816,0.434831,-6.244880,9.028642,-3.888858,-3.864535,-9.687377,-0.154553,-2.738532,1.636172,-0.273508,3.581923,-5.038999,-5.341391,0.139519,2.808729,1.407827,-2.009452,1.998514,-2.004733,8.380871,2.476995,-8.743776,2.537007,8.978535,6.757482,-6.242831,-3.019463,-5.573792,1.066516,4.005141,-4.868919,7.757050,-9.714030,6.339953,-9.810497,1.649485,-6.283791,2.048119,-1.996273,-3.161757,-2.734824,-8.252417,0.480046,-2.579720,-7.783218,-1.842517,-9.028152,9.675852,-4.851945,-4.206819,-7.836548,-6.512320,1.516953,-3.975150,-3.782033,6.332665,0.775939,0.698209,1.872999,9.417397,0.920585,-4.187185,0.511401,-1.911675,-0.672200,-3.682695,-8.590280,1.955097,-1.138940,5.333238,3.125865,1.940984,5.303440,5.736560,-9.828707,-1.081174,-6.038625,-5.300956,8.989925,5.384328,9.708546,-8.989041,3.059060,4.682040,1.777664,-8.643974,-7.863043,8.233704,0.307235,-2.845358,8.318628,3.385271,3.433312,0.783105,2.564864,7.682993,-9.456762,-3.874741,5.525470,2.286263,7.218852,5.968226,6.376505,3.613564,-5.440711,4.984620,-2.780933,9.213377,-0.229277,-7.337604,-9.610026,-7.208845,1.641452,-0.692494,-0.938836,4.596853,6.849288,0.945737,4.542177,6.853633,-0.720136,5.828005,-7.362308,7.162786,9.758182,-1.763415,6.867628,-0.375937,4.117164,6.489716,-9.957002,7.167028,-8.371276,9.072740,5.130285,7.379079,9.805559,7.239869,8.687471,-2.649114,-7.789944,-9.356911,6.154069,1.577494,1.355811,-1.974536,8.508333,-0.606190,9.181881,-7.400573,-2.791915,-8.458036,-5.071486,7.820009,-0.556868,5.845277,-6.756380,-2.230015,-1.969127,6.513933,7.705068,-2.403530,5.471344,-6.140432,-7.560072,-8.871467,-6.154545,-9.687394,-4.682405,-3.660455,3.568486,7.382840,-2.606234,4.125330,6.844219,-5.151737,-7.158029,-7.024838,4.872711,-9.435017,1.418405,8.202177,-0.171120,-5.885800,8.326095,3.251319,-2.568827,7.230336,6.308858,-4.288277,7.916983,4.683915,3.197565,7.243552,-7.086321,-1.066490,-2.684134,7.551138,8.171580,5.582790,-7.423745,0.338584,-9.794999,0.769235,0.315165,-2.229335,2.180786,-9.946591,3.492276,5.065564,-3.964416,4.215387,7.708309,5.969573,1.752831,-7.345021,4.761587,-1.151400,-2.610500,0.814501,3.616494,-4.504133,9.748203,4.957383,-8.526022,-8.038193,-9.870427,-2.115546,-7.429135,-6.888250,-7.260753,-6.354315,-2.434048,8.164713,-7.592197,-3.108885,9.407878,-8.203530,-8.310083,0.400826,6.456849,7.872192,-4.872833,8.805650,5.396767,-0.121456,-5.342388,1.597349,9.134413,3.010813,-0.203965,-2.982877,-4.502433,-1.211938,-8.500234,-6.513713,-7.386888,-6.172375,7.425926,5.316367,9.403453,-3.391827,-2.545498,0.708941,9.128155,-4.877567,-0.277330,3.506430,6.396755,9.110308,0.314674,2.511624,2.257123,-9.035687,-9.326361,2.831099,4.339215,9.912931,-8.508113,-6.206275,-6.537615,2.108086,4.930125,3.459208,-2.681588,-7.117571,-4.723014,1.697502,5.466345,-4.020169,-1.729351,-5.861014,-8.147030,1.161861,-7.501984,-9.589491,-3.860998,7.461876,-5.736427,0.277277,-9.349196,-0.517506,5.069597,-8.064556,-5.497210,-5.926654,3.819713,-7.331090,0.562199,-2.117244,4.891341,-5.948840,-8.419663,5.990291,-1.305355,8.232986,7.029513,-7.778450,-0.670339,0.328351,3.646011,6.365968,-7.246587,-6.923425,3.180269,0.882838,9.695825,2.629649,-0.546356,-3.713054,9.067820,5.171892,-2.204334,4.478602,-2.552250,0.396797,8.076810,-3.896691,-5.170706,8.566431,8.959817,4.116568,-4.831910,-0.734918,7.713597,9.496326,9.514692,1.165464,-6.336954,-0.288475,-7.930113,0.907881,-9.540062,1.279800,-9.271796,-3.492853,-9.574767,5.497482,-6.201926,4.014803,-2.231633,-0.709495,0.055802,3.974381,4.126554,-8.465196,3.691249,1.111922,-3.503620,8.831274,3.207729,-6.917380,9.420861,-5.712740,-8.827773,1.844803,-1.225707,-0.844849,-0.327302,-3.197412,4.791423,5.541746,-3.963282,-5.063110,4.178633,7.255709,0.978711,-3.278431,7.106794,4.978790,-5.639708,6.476785,-4.285394,-2.024952,1.403253,-7.002438,-3.845864,-9.043762,-5.207606,2.138736,-4.085361,-6.923840,-9.012573,-5.649476,4.375868,9.253576,-7.397232,1.833164,-0.483510,6.519954,-5.035382,-1.899302,8.976202,6.820846,8.047496,-1.623188,2.171156,-4.247669,4.367190,-4.630177,-7.040736,3.238453,-0.304214,8.651565,-0.441107,-6.680880,1.238306,3.065464,1.528897,-6.564853,1.027102,-5.016816,-1.518257,7.310603,7.823508,-5.415491,8.653595,6.649735,-7.286364,9.058289,6.924673,6.958634,-6.843034,-1.498511,0.012273,1.883860,5.820983,-9.830413,-4.646690,4.287804,5.825036,4.210888,7.991759,-7.182700,2.764768,1.900812,1.383614,6.696570,5.190075,-1.185782,8.871353,-4.337208,4.571499,-2.478105,-0.350283,-3.873833,4.786203,-0.565922,-8.920825,3.643748,-5.382730,-3.664857,1.278138,-4.428128,7.321477,-8.830941,-3.227107,1.233464,8.556891,3.182750,-3.216437,6.471817,3.166344,-8.100918,-1.504222,7.679976,-0.023886,-5.121261,-8.643583,3.836534,9.189014,-6.811618,-6.309262,-6.283460,2.683706,5.538684,7.251424,6.955164,-2.841067,-3.121142,1.902530,-1.801710,4.579874,-4.769163,5.695107,-5.367213,2.171623,-2.466632,-6.557424,1.720711,-5.489035,9.410587,8.682063,-6.093566,8.281457,-9.653612,-9.039615,-8.276613,8.753572,3.969419,-1.651660,-9.649560,-1.234660,4.464427,2.609039,-6.731901,2.698426,4.638577,6.207970,9.963528,-8.159024,0.599296,-1.642857,-4.147562,-5.772118,-7.204812,5.124042,-6.139727,2.080931,6.144787,-0.237417,-9.205025,4.819049,-4.278024,9.085505,6.670682,2.731673,-2.263043,7.081994,-5.315731,9.065039,-3.637720,3.368955,-9.476383,6.109381,2.029213,-9.058783,8.653553,6.556453,-4.362034,1.273704,-5.486198,-4.072251,-9.040736,5.686967,-3.008325,6.881551,-9.916660,3.547046,4.979124,-0.479275,5.915927,-9.388599,-8.342393,-9.617000,-1.474099,3.429459,6.564981,-7.005647,0.675837,-5.444673,-9.681951,-6.695444,-1.037495,0.881536,-4.348246,-6.637277,-5.182882,7.865093,-6.512528,7.781911,7.252884,4.956505,8.838239,7.479554,9.043340,-6.109871,9.985366,-4.384518,-7.570841,-0.788004,1.028049,-2.340678,9.835369,7.801777,-9.911238,8.154061,8.613857,-6.911537,-7.559781,4.266160,2.909782,3.152796,-2.249499,-9.997972,5.091542,-6.159586,4.013356,2.071935,-9.611472,-9.156272,9.110131,-6.382189,-6.378175,2.433385,-6.449902,-1.674761,-2.531047,9.713343,-1.051012,-6.517892,-5.318873,-6.318108,1.238957,-3.082846,-9.823639,-5.734218,-5.476203,-9.454505,4.256158,2.098407,-1.461805,2.228601,1.569551,-0.228873,-3.510033,-2.374610,5.762348,-0.331397,-8.253280,-5.348161,3.141832,-3.297437,5.535269,-9.379102,8.102857,2.959081,-8.064983,-2.438205,4.566324,7.613697,8.640806,-7.525452,-5.415948,-0.624920,8.620443,-4.058005,8.471494,7.188096,9.075671,-5.457939,7.900096,6.084015,-4.534827,-5.587501,-2.188385,-8.319406,3.288575,-3.302676,9.095623,-2.690541,7.751801,-3.171993,7.198357,6.918758,2.606416,9.474840,3.363761,-2.980046,7.804315,9.038541,-2.681798,8.321950,-7.691452,-0.719007,-9.935828,0.806149,8.257306,5.087169,8.452764,9.216814,-5.002818,1.679405,5.041833,7.109133,-1.242004,-4.488925,-4.671285,-6.110940,0.156930,8.330926,8.721858,4.282148,-8.780818,-9.460392,-8.266053,-3.446755,-6.396661,-8.021781,-8.173698,-9.033480,7.122747,8.259759,6.993816,-0.562022,-0.598137,-7.492696,-1.901375,-3.090967,-9.624591,-7.821104,7.547272,2.140138,7.789814,1.986287,-2.226798,-5.439168,3.842439,4.018420,-6.390672,6.915850,5.969977,-3.033133,-0.385106,-0.330664,0.529232,5.413759,-8.082688,5.379682,-1.991851,0.021578,-6.407792,-4.166694,4.369291,-5.417690,-1.242131,3.025444,-9.992934,5.893161,-8.479077,1.222014,2.709174,-4.427874,-5.892225,5.817659,2.305432,7.685213,-4.080377,7.253745,9.957778,8.872877,6.510692,-5.170966,2.265167,-5.900033,0.460743,1.856131,-4.770405,-4.149645,9.370100,-0.037764,-6.508752,4.519630,4.859634,4.875404,-5.887090,-6.835179,3.205760,2.823076,7.282897,-1.722190,-3.285601,9.381462,-6.693800,3.587838,1.490952,-0.410742,0.363397,-3.009785,-8.896326,5.302721,3.681230,-3.260720,-7.543826,1.629161,-5.717956,9.072748,8.393831,8.153087,-5.209602,-4.517964,-6.929537,-5.466204,-1.595768,2.397734,-9.631288,3.146763,-3.983803,-5.804985,-3.543277,-0.231540,2.365769,4.207531,-2.155242,-0.312855,4.188483,-3.210264,6.005080,4.632807,-6.967606,-0.616757,1.440342,-1.465440,-5.829062,5.528927,-1.740136,2.548949,8.876911,-7.934643,5.175753,-9.727162,5.766153,9.289127,0.623272,-3.423194,3.674498,-6.615750,2.269094,-8.565627,1.942495,-1.827583,-4.987352,-7.295742,-0.511912,8.322434,2.800772,-3.909253,6.676772,-7.430867,-2.139602,-3.901841,8.637641,-8.438330,6.615704,-8.458021,-6.576652,-9.036527,-9.389349,-7.500697,9.211399,0.988803,-1.408350,-5.951477,4.883770,-4.671291,1.779924,1.894712,-0.152790,2.897038,-9.319783,-0.159926,-6.035576,2.448385,3.475351,7.644364,-7.739081,-0.629496,-3.216880,-4.124158,7.714289,9.416946,1.904702,1.542887,3.338890,6.066773,4.256669,-5.727514,-7.575241,-7.653543,-9.879305,-8.127747,-7.860222,4.689519,9.148165,-8.028878,-6.639231,-1.127484,-1.608444,0.511434,-0.888252,-0.532962,0.336240,-7.024535,-8.188951,1.330075,-2.234483,6.567279,-1.929191,-5.921879,-4.144488,-0.886251,-3.540207,-7.370984,9.927518,-0.589358,-3.997243,8.538863,-6.202858,2.922374,-5.218409,2.611511,5.514252,-3.026542,4.876833,7.627219,7.308343,-8.465332,-2.863414,3.575061,1.545101,-7.862208,-5.789576,9.644623,8.900298,7.590171,2.739888,-1.642117,-9.603062,9.182760,1.442159,0.840035,-5.432952,7.120642,9.326081,-5.974357,-6.274360,-5.846768,-8.969064,3.021736,8.007995,-2.365326,9.576812,5.087555,0.167744,4.796939,6.109160,7.853351,4.150822,7.453320,9.272251,3.606189,-4.607669,-4.669184,0.880962,-6.791704,1.081703,4.386828,2.122392,-4.141285,9.793482,-8.670648,-2.800770,4.301107], dtype = "float32")#candidate|8333|(2352,)|const|float32
call_8330 = relay.TupleGetItem(func_1335_call(relay.reshape(const_8331.astype('uint32'), [11, 7]), relay.reshape(const_8332.astype('uint32'), [1078, 1]), relay.reshape(const_8333.astype('float32'), [4, 588]), ), 4)
call_8334 = relay.TupleGetItem(func_1340_call(relay.reshape(const_8331.astype('uint32'), [11, 7]), relay.reshape(const_8332.astype('uint32'), [1078, 1]), relay.reshape(const_8333.astype('float32'), [4, 588]), ), 4)
bop_8335 = relay.add(const_8333.astype('uint16'), call_8330.astype('uint16')) # shape=(1078, 2352)
bop_8338 = relay.add(const_8333.astype('uint16'), call_8334.astype('uint16')) # shape=(1078, 2352)
uop_8340 = relay.exp(const_8331.astype('float64')) # shape=(77,)
bop_8342 = relay.floor_mod(const_8333.astype('float64'), call_8330.astype('float64')) # shape=(1078, 2352)
bop_8345 = relay.floor_mod(const_8333.astype('float64'), call_8334.astype('float64')) # shape=(1078, 2352)
const_8363 = relay.const([-4.299762,2.820726,-7.265147,-6.326534,7.926355,-4.102152,-1.249821,-5.577969,9.891434,-7.019597,2.344903,6.900565,-2.872120,-9.942340,-9.360933,-6.163370,1.445356,3.178273,-3.224465,-7.151600,0.264549,1.140964,-2.312265,4.981227,2.765669,9.389048,-5.593578,-1.360895,-2.368476,0.019955,-0.940591,0.274519,9.685211,3.181056,-5.391197,4.807292,-7.438316,4.342467,-2.294153,0.046169,0.817396,1.725233,1.150509,-9.506066,-0.896183,-3.818052,5.753574,-4.109843,6.066404,6.911012,6.666678,7.843698,6.801396,9.297737,1.294891,7.148705,0.400034,7.115944,-8.296784,-1.035803,3.591297,9.946684,-2.836484,6.635437,7.132635,9.072822,1.032421,5.301928,-1.957416,-3.166414,7.372052,-8.899413,-2.281969,6.095160,0.441127,-7.370258,0.521312], dtype = "float64")#candidate|8363|(77,)|const|float64
bop_8364 = relay.bitwise_or(uop_8340.astype('uint64'), relay.reshape(const_8363.astype('uint64'), relay.shape_of(uop_8340))) # shape=(77,)
func_4375_call = mod.get_global_var('func_4375')
func_4379_call = mutated_mod.get_global_var('func_4379')
var_8382 = relay.var("var_8382", dtype = "float32", shape = (150, 3))#candidate|8382|(150, 3)|var|float32
call_8381 = relay.TupleGetItem(func_4375_call(relay.reshape(var_8382.astype('float32'), [15, 6, 5]), relay.reshape(const_8333.astype('float32'), [2352,]), ), 4)
call_8383 = relay.TupleGetItem(func_4379_call(relay.reshape(var_8382.astype('float32'), [15, 6, 5]), relay.reshape(const_8333.astype('float32'), [2352,]), ), 4)
output = relay.Tuple([call_8303,const_8332,bop_8335,bop_8342,bop_8364,call_8381,var_8382,])
output2 = relay.Tuple([call_8304,const_8332,bop_8338,bop_8345,bop_8364,call_8383,var_8382,])
func_8400 = relay.Function([var_8382,], output)
mod['func_8400'] = func_8400
mod = relay.transform.InferType()(mod)
var_8401 = relay.var("var_8401", dtype = "float32", shape = (150, 3))#candidate|8401|(150, 3)|var|float32
output = func_8400(var_8401)
func_8402 = relay.Function([var_8401], output)
mutated_mod['func_8402'] = func_8402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8457 = relay.var("var_8457", dtype = "float64", shape = (6, 14, 13))#candidate|8457|(6, 14, 13)|var|float64
uop_8458 = relay.sin(var_8457.astype('float64')) # shape=(6, 14, 13)
output = relay.Tuple([uop_8458,])
output2 = relay.Tuple([uop_8458,])
func_8469 = relay.Function([var_8457,], output)
mod['func_8469'] = func_8469
mod = relay.transform.InferType()(mod)
mutated_mod['func_8469'] = func_8469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8470 = relay.var("var_8470", dtype = "float64", shape = (6, 14, 13))#candidate|8470|(6, 14, 13)|var|float64
func_8469_call = mutated_mod.get_global_var('func_8469')
call_8471 = func_8469_call(var_8470)
output = call_8471
func_8472 = relay.Function([var_8470], output)
mutated_mod['func_8472'] = func_8472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7605_call = mod.get_global_var('func_7605')
func_7606_call = mutated_mod.get_global_var('func_7606')
call_8557 = relay.TupleGetItem(func_7605_call(), 3)
call_8558 = relay.TupleGetItem(func_7606_call(), 3)
var_8563 = relay.var("var_8563", dtype = "float32", shape = (70, 4))#candidate|8563|(70, 4)|var|float32
bop_8564 = relay.multiply(call_8557.astype('uint16'), relay.reshape(var_8563.astype('uint16'), relay.shape_of(call_8557))) # shape=(70, 4)
bop_8567 = relay.multiply(call_8558.astype('uint16'), relay.reshape(var_8563.astype('uint16'), relay.shape_of(call_8558))) # shape=(70, 4)
func_7191_call = mod.get_global_var('func_7191')
func_7192_call = mutated_mod.get_global_var('func_7192')
call_8584 = relay.TupleGetItem(func_7191_call(), 0)
call_8585 = relay.TupleGetItem(func_7192_call(), 0)
output = relay.Tuple([bop_8564,call_8584,])
output2 = relay.Tuple([bop_8567,call_8585,])
func_8588 = relay.Function([var_8563,], output)
mod['func_8588'] = func_8588
mod = relay.transform.InferType()(mod)
mutated_mod['func_8588'] = func_8588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8589 = relay.var("var_8589", dtype = "float32", shape = (70, 4))#candidate|8589|(70, 4)|var|float32
func_8588_call = mutated_mod.get_global_var('func_8588')
call_8590 = func_8588_call(var_8589)
output = call_8590
func_8591 = relay.Function([var_8589], output)
mutated_mod['func_8591'] = func_8591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8052_call = mod.get_global_var('func_8052')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_8616 = relay.TupleGetItem(func_8052_call(), 0)
call_8617 = relay.TupleGetItem(func_8053_call(), 0)
func_8588_call = mod.get_global_var('func_8588')
func_8591_call = mutated_mod.get_global_var('func_8591')
const_8622 = relay.const([-5.664658,-7.300970,-0.331869,-2.282359,6.453625,-1.811182,6.296386,4.240553,-8.455646,-7.076290,-5.866632,-9.946122,-9.048011,3.380253,-2.011893,-4.299108,-3.690325,2.309533,-1.900198,-3.006963,5.250180,-6.673431,-0.449210,7.695084,5.167428,7.366148,8.931255,7.124352,-7.133690,6.367046,-3.150039,-0.764263,-1.022589,2.249189,0.344087,-9.372064,7.370863,-2.275482,-7.523383,-8.429157,1.045771,-2.637715,-3.913371,-2.479768,-9.628770,6.002807,5.975335,6.669261,4.221797,-2.490145,-1.031305,-5.582309,1.078345,8.670373,-1.176996,-0.865784,-1.744059,-4.399676,-5.602038,2.952949,-6.497389,0.965605,-8.262011,2.682206,0.351911,5.364646,3.274567,5.804600,-5.731060,-9.664538,9.671603,-7.612818,1.752882,-1.145667,7.552993,-6.985094,-3.849575,9.181972,9.726652,6.868611,-1.541818,-4.633128,-2.447565,-8.915741,2.299704,4.897508,2.081028,-5.867045,3.390777,-3.887627,-3.221549,-8.586513,-8.321408,-4.495660,7.727417,5.786846,-2.604854,5.377791,0.029807,2.680700,-9.005433,6.736768,-8.599934,0.324966,-8.452699,-6.289464,-2.503105,-1.822398,-0.641033,-5.200413,-0.583014,2.488655,-9.784819,1.420304,-0.069668,-9.085802,0.191724,4.490335,0.773436,7.750109,-2.852917,-0.744495,4.773839,-9.311587,4.718253,9.706824,-0.537793,-8.499149,4.309295,-2.383604,-9.670825,-5.885246,9.051055,3.169333,-9.360073,-5.180987,-0.330707,-2.616025,2.315175,6.632116,2.840898,-1.083327,3.946050,-8.502620,-1.811949,2.272062,0.260252,7.313302,0.429924,8.814499,2.542885,-4.229514,8.626391,5.710335,2.885755,1.470916,2.163299,-9.308212,2.556576,9.799353,-9.601615,-9.182351,1.633249,-2.739184,1.938899,-1.590919,6.182801,-7.025125,5.316261,-4.254743,1.858294,-6.780968,4.786643,5.359303,5.787336,9.203006,9.952920,-4.706959,3.133965,1.366286,-7.281389,4.789539,4.885939,-1.971875,-9.630223,9.696662,8.596460,-3.938214,3.429603,4.757444,9.710834,-0.641245,-4.563108,7.350054,6.919563,-7.283194,-9.577121,6.518152,-7.281397,1.460725,-8.678905,-1.132587,-1.204126,6.522837,-8.971666,-9.108411,8.891108,3.045472,2.516095,6.116387,1.329425,5.401022,7.855544,6.619592,-3.040459,-2.702441,-7.687480,-8.736930,-7.138384,-1.696888,-1.332146,-1.138651,3.091031,-6.516809,-5.308257,7.717777,7.266903,6.758867,2.413159,-6.869968,4.460295,6.044501,4.059607,-6.906846,6.263686,3.060301,-5.897225,4.826067,4.616567,-5.668634,7.435666,2.533124,-5.053406,7.778087,-4.811148,-4.412970,9.325784,3.204416,7.784244,-9.960507,-9.208748,7.600635,9.652524,-1.282658,-3.293600,-2.507811,-3.789779,-9.210165,-1.836366,-0.059438,-7.412532,0.857693,-3.538220,-4.512685,-3.737433,-8.892895,-9.377420,3.230679,-5.548552,-9.203907,5.335847,-6.128027,5.386225,-4.624412,7.262091,-7.130346,9.418462,9.092512,-0.306723,-8.715347], dtype = "float32")#candidate|8622|(280,)|const|float32
call_8621 = relay.TupleGetItem(func_8588_call(relay.reshape(const_8622.astype('float32'), [70, 4])), 1)
call_8623 = relay.TupleGetItem(func_8591_call(relay.reshape(const_8622.astype('float32'), [70, 4])), 1)
func_1698_call = mod.get_global_var('func_1698')
func_1702_call = mutated_mod.get_global_var('func_1702')
var_8638 = relay.var("var_8638", dtype = "int64", shape = ())#candidate|8638|()|var|int64
const_8639 = relay.const([8,2,9,5,1,10,1,-2,-10,1,-7,-10,10,-1,6,3,-4,-6,-9,6,-10,-9,-2,2,-5,-3,9,-1,3,-10,-3,-5,-7,9,9,-5,2,2,8,5,6,-8,-3,3,-10,-5,3,-10,-10,-8,4,9], dtype = "int64")#candidate|8639|(52,)|const|int64
const_8640 = relay.const([7.103768,3.142645,-2.368778,4.599349,1.535386,1.955504,-2.112143,-6.468352,-2.938018,-9.592176,0.025009,4.164433,0.379881,-5.616424,-0.177947,4.402788,5.654516,9.020526,1.385948,-3.476058,-5.256532,-6.351468,-4.242110,8.788432,0.523893,9.117083,7.148299,3.443782,-2.592146,-9.007152,3.727158,-8.165631,-9.753628,-9.897691,7.939242,-5.945716,0.944625,-5.438519,8.490727,-7.932287,0.448866,4.338217,-0.140529,6.413266,-1.556399,-3.426138,5.047759,-6.845775,-0.393615,1.884427,-3.803945,9.690548,-0.452349,7.594812,8.064330,-6.566814,1.384456,-2.075370,8.674361,-5.471994,4.594570,0.831006,-0.180944,-3.289815,-8.034306,-1.878603,8.941369,-2.105944,1.884450,8.245025,-9.344172,6.856929,7.245343,4.689828,-9.334053,-8.787429,-0.972855,-6.055347,6.514868,0.531943,6.877843,-0.502080,3.003682,-6.404149,-8.019685,-0.671796,-7.658889,0.804642,5.575582,-0.122132,-2.353755,0.540312,-1.370965,0.210061,-6.799274,7.620151,-9.205964,-4.340549,5.530929,-7.715815,-0.841175,-3.928814,1.238319,-6.383449,-1.434209,-9.031813,5.842753,-2.311462,6.961821,6.264486,-8.350508,8.895004,9.948214,6.599829,6.378005,-3.346035,-3.199996,-1.853671,-6.775719,-6.177514,8.519039,-8.590411,-9.274842,-6.975116,-4.459307,3.482841,-8.249189,-1.795142,-8.355573,-0.989990,5.027795,7.906039,8.193884,5.317519,-6.224088,5.700321,-4.257644,-7.707523,-7.479796,6.214085,-7.155840,8.560333,4.502951,-0.972447,8.911688,6.126058,-4.102682,-6.559012,-8.245799,7.329359,5.639613,-2.202509,-3.869281,-7.135455,4.330188,-5.939423,-0.355041,3.863928,2.685411,8.324195,-2.782504,1.252473,7.320758,0.698809,-5.313090,-6.388364,6.245785,9.126147,4.561204,-3.097569,0.782658,2.872422,-3.074382,-9.902154,-1.374689,8.215414,-4.586221,9.496335,-1.681492,-5.136986,-3.721616,4.720320,1.332286,3.078237,-7.949883,-7.498557,-2.682008,-4.594806,-9.375770,-8.353760,-6.463453,6.566265,8.912947,6.520873,0.699589,-2.989195,-3.052585,3.108582,-1.716812,6.477048,-8.343696,6.360288,1.547817,-6.333257,-1.926409,-8.799052,-3.444670,6.293259,8.169409,1.786161,-5.378897,-7.166634,4.970089,1.777217,-8.586905,8.192115,-2.914248,-3.165509,-3.432252,4.594371,1.690088,2.115933,7.613303,2.779774,0.121326,-1.597645,-8.599631,0.778865,-6.428899,-5.097471,2.241210,-5.844327,-1.307886,2.072799,5.937821,4.194798,-7.619688,-7.243279,7.643837,-1.057867,-8.192625,1.517397,5.321724,0.542391,4.639517,8.935930,2.941067,-6.738172,-8.319918,-2.848686,-8.375641,-2.475457,-8.132238,-7.240710,4.045112,2.984591,9.881191,-0.322172,7.747132,9.976202,4.319155,7.059114,-9.865483,-5.032493,4.309051,-2.487478,-7.491526,-2.860749,6.038109,6.509279,-7.739055,-5.665583,2.134337,-9.620414,-4.011953,3.779928,-8.157468,-9.552789,-9.629670,8.520826,6.664699,4.745351,2.542946,3.974921,-1.400113,0.795134,9.746466,6.636357,-2.199833,2.765114,0.510319,3.621970,8.930039,-4.627398,-2.280008,1.634764,3.707444,-6.471165,-7.088393,1.935530,-6.742892,0.531987,-8.940101,-2.467022,2.193880,-2.915082,-2.233705,-8.304022,7.188175,8.082431,7.732112,-3.660123,6.687445,5.579375,-2.002921,-8.861345,9.751937,-3.872632,-5.527304,-4.665865,-8.517758,-1.919954,-1.566550,-9.349406,7.284115,-1.313452,-0.332689,8.960762,5.285570,9.412323,3.523551,-8.111616,-0.521243,1.540525,4.998654,-4.085838,-1.939859,-9.135239,8.477669,-5.621488,-5.804441,1.867459,0.585588,-6.125347,0.228770,-9.969085,4.387467,3.357534,6.290728,8.695352,6.035360,-0.236387,-4.472765,-5.905126,5.173215,8.527377,1.324605,-3.337809,5.680989,4.474951,1.926854,-5.470356,-0.845821,-7.469054,-8.936641,-6.033545,1.655797,2.000546,1.882663,6.537189,-5.466028,-5.256763,-0.322639,6.336890,6.683884,-3.194955,-6.621343,-7.686487,0.692671,4.350295,-5.470037,3.029666,-6.755868,7.452820,-5.011102,9.729321,8.486023,0.184422,-5.423119,-5.730457,3.894150,-6.381349,0.529008,7.846387,3.853647,-8.075948,-1.298328,2.428161,-9.581812,2.520768,-7.842547,7.624083,-3.200550,0.634701,0.296362,2.093831,-0.648587,2.464757,-9.838751,-2.486944,6.695393,5.571883,-6.395442,-2.059986,7.617552,-7.635342,-4.376202,-1.786577,-4.998385,-8.909381,4.112272,-3.348780,1.490729,6.441057,-5.389882,-6.715519,-8.639994,-5.999987,-8.365034,2.495085,-5.316826,8.179455,2.114564,5.254606,4.693819,-1.280158,2.692998,3.388259,-0.260144,-7.182522,-4.400325,-6.992183,-7.999683,-7.744797,4.634726,5.609567,7.576477,5.046543,-2.175376,-4.877494,-7.210920,-5.867239,9.868571,-5.772270,-4.501105,2.642694,5.171825,2.033607,-4.739177,3.402434,7.539767,7.326404,1.348979,1.929332,6.791344,-6.173128,-5.267938,-7.896349,-6.235371,7.208526,0.115827,8.220027,-5.187350,8.957223,-3.054549,7.715578,7.565064,-7.639108,7.214058,-4.959689,9.074203,-4.225819,0.040803,-7.661075,4.408532,-1.179647,-9.806117,-9.580715,-0.838786,5.961222,-0.711787,-0.347250,4.392044,-3.067483,-6.807049,9.247559,8.707327,-1.090524,-6.862040,-9.376091,-7.077521,2.622066,0.351550,-8.373963,7.951576,-6.367734,-6.793015,4.140240,-1.400576,-5.169954,-4.151783,-6.756915,1.761284,-9.904249,9.992458,2.769221,1.412468,-2.014337,-6.022697,-3.924115,-4.340568,4.788556,1.206189,-4.563059,4.316795,-4.927046,0.914422,1.026677,7.030278,-6.431360,9.839269,5.655351,-6.758415,9.646918,-5.005311,-9.300761,-8.194017,3.589031,-5.386582,7.725199,-1.609592,5.137984,6.174905,-8.129250,-9.595284,2.523861,-8.665091,-7.533936,7.543802,-1.675723,6.564477,-5.778791,-0.117011,2.459313,-2.470501,-2.401577,1.682475,-9.624152,4.629266,8.607159,0.425929,9.842077,6.509968,1.320648,5.712308,-5.693538,-9.619013,-1.067452,-9.060126,-3.173035,4.395964,9.915112,-4.781381,6.978584,-9.301546,-9.730147,8.545603,-9.189493,2.633132,4.526508,0.326163,-5.800555,8.678330,-7.924265,-2.887473,-8.290410,-9.396955,-2.558359,9.807537,-9.453952,3.085245,3.579487,-0.118087,2.822572,2.811421,-3.836592,7.442295,0.377808,6.829772,-5.002385,-9.263756,3.206968,0.898204,0.132687,0.713116,-3.251353,-2.815311,-4.272799,4.894562,6.892752,-2.973025,9.027175,-6.647491,-9.167769,9.137860,6.613775,8.929197,-6.880039,8.559911,0.196545,3.393525,6.216154,-8.189540,-0.654252,8.868797,-8.046948,5.526557,1.708777,-3.179426,4.658675,9.098986,7.600354,-7.284560,0.931039,-4.005016,-6.764123,-7.658012,0.541596,9.842953,1.691712,8.529595,4.051107,2.774727,-1.240704,-1.810756,7.176856,2.183412,9.000417,-8.841370,3.492137,6.016856,-6.173975,3.367447,-2.765236,9.464771,6.725476,-3.110501,0.906472,-6.062224,8.833695,-5.435693,-8.532543,-7.318715,3.042626,-9.785403,8.223074,-5.788516,9.266041,6.298078,0.768665,5.424509,-8.508499,7.341433,-5.110047,6.522001,-3.258999,-2.830140,1.806347,-1.012160,-1.732552,3.490909,5.584470,5.760580,4.009515,-5.929901,-0.495800,-9.206164,0.919457,-5.856439,4.195198,-4.443028,0.225063,-3.187289,7.637747,4.310229,3.323379,5.860885,7.051011,3.487059,4.185748,8.467472,-6.637230,-8.259579,5.546752,8.183239,1.038822,-2.156570,-3.063250,9.983603,-7.078018,4.831104,-1.090524,-6.158037,-6.350936,-3.835529,2.203610,9.250750,6.633996,-5.423963,-9.706801,8.008427,0.212789,5.962480,-5.506205,3.279308,5.190432,-3.878387,3.095572,8.368436,0.088223,9.340237,3.613181,-6.990481,0.815933,2.017270,-5.114285,3.701587,8.064953,9.608230,3.430541,-5.296364,-9.802686,-0.404222,0.056056,4.746872,-2.852818,1.450651,1.081340,-5.979637,-8.508605,-9.301236,9.152662,-1.280596,-3.408981,-8.884916,-5.526539,4.142893,-1.504083,-3.870620,8.291540,-9.445043,3.430017,-3.286376,8.474140,7.236727,-5.064219,-3.592374,0.862028,-3.476451,-3.045228,9.392375,1.907984,1.299074,7.906994,5.309480,5.576014,-1.834048,-7.411099,3.617071,9.657322,6.930908,3.984077,5.444220,8.959574,-7.074548,2.802400,-4.817467,-4.933753,-2.782809,-0.148942,8.815735,9.826167,-5.380849,-5.589478,8.649512,-9.010139,4.507095,-1.726761,-5.264808,6.593463,1.543736,-8.857740,7.410827,-2.848324,-5.289154,-5.859661,-3.102571,3.736060,2.861984,1.320300,-3.549856,0.730149,7.239180,-7.882534,4.241325,-4.528926,-0.556934,4.378314,-7.108269,4.222052,-3.335395,-5.583750,4.997391,9.958372,0.505721,9.751221,-1.781364,7.869574,-0.038919,7.284051,7.276853,6.416632,-4.762167,-6.588622,-6.806607,-9.364076,4.488166,5.834465,-4.670965,5.158084,7.322921,2.705374,1.921581,8.543548,6.137094,-4.344488,8.699849,-6.461032,-0.887819,-4.046822,8.340217,9.870859,5.000709,8.942902,5.201594,5.715682,-7.029918,-4.177285,5.748070,8.407931,-4.780771,-6.700904,1.930815,1.874511,3.493745,-5.687046,-2.022904,9.329889,5.890401,-2.342177,2.617148,4.707194,-2.167203,0.828005,-9.729685,-6.242307,-4.396500,-1.439241,-4.191994,7.231574,2.039034,-9.728068,9.387521,8.251052,-7.101355,9.202654,0.740674,8.690593,-9.276166,7.418394,-5.317600,7.135964,-8.294184,-6.530620,-4.554107,-1.429004,-5.567992,0.300464,-5.260559,-6.255019,-2.443503,-1.607908,-4.368243,-6.812721,0.424095,4.744864,4.068492,-4.659444,-2.948673,-9.396712,3.184297,-5.464246,1.664584,4.303345,-6.374264,8.474961,-2.452758,-8.527161,7.908975,6.119416,5.770853,-1.086473,-1.028456,-8.287858,-9.044570,1.857171,-6.618440,6.033479,2.497380,7.576259,-0.982149,8.834482,8.936751,7.210632,-0.224627,2.225888,-1.465306,-9.045475,-6.098049,7.799326,-8.169665,-1.474326,0.979295,-2.846737,1.395578,-6.146386,-8.160097,-4.891258,-7.158864,4.371266,-1.291301,-0.241467,-1.496209,1.297082,5.433236,0.543385,0.673650,-9.942712,1.938039,-0.414958,6.630369,-2.417975,-3.789446,9.890354,8.224229,4.034848,8.004740,-2.381757,-5.406692,-0.693213,-8.624638,2.527961,-2.668110,-4.524485,5.002264,-4.423700,-4.919019,-2.630007,5.863346,5.721521,-1.629892,-4.946896,-3.061250,-8.051844,5.390711,-2.792866,-2.943991,6.754484,-5.147630,9.499667,-1.985157,-6.407113,-7.126281,6.742414,-0.073900,-5.406579,1.138461,-6.535880,5.725476,0.651734,0.482733,5.366503,0.484914,-1.425770,-3.278798,1.778902,6.210679,8.011463,9.585223,2.912577,7.076317,-9.073434,3.322941,-6.400664,3.374753,6.128218,-7.313284,8.747181,1.748559,6.807603,9.747638,6.795041,-6.427413,-5.096212,9.426206,3.099874,-2.393774,-9.372668,-8.159566,-7.847841,-4.491262,-1.708309,-2.019805,-9.258027,-2.629041,-5.462340,9.590244,-8.256187,-2.340831,3.345550,7.603649,5.434547,-9.331206,2.351090,-0.807651,5.057857,7.451081,0.494132,7.529161,4.053688,2.437318,4.664525,5.582835,-7.486895,-2.556762,-2.494630,-7.969337,6.378330,0.775772,9.213441,2.014597,-8.799605,0.511925,-2.404362,8.873071,-8.768065,9.514846,3.329878,8.969063,0.607293,6.630109,1.746120,8.481484,5.513105,0.165786,-1.056514,2.007593,0.150214,4.381861,0.069801,-0.399651,6.816010,9.413826,-5.389171,9.938202,-9.096378,9.497379,-6.294070,1.830799,5.913962,5.505845,6.690336,-7.888439,3.871912,-6.401283,5.683907,-9.789392,3.743715,4.531486,-7.631076,9.555818,-2.962311,9.984852,4.223100,-3.127424,1.191713,-0.606626,-5.086817,-1.884359,-0.902503,-5.627763,4.189092,9.814616,-1.511168,-0.009373,9.999771,2.175198,5.293172,-5.126281,7.994033,6.998827,-5.913420,1.184817,6.849406,-6.071806,2.761261,8.827542,6.377988,4.327214,4.112207,1.180799,3.209972,-3.543911,8.546337,3.390209,8.060974,6.938081,-0.758657,-1.612274,-0.131295,-3.046948,5.553370,-6.377683,-5.487236,-6.143153,-1.983619,-2.632110,9.143959,-1.343696,4.222079,0.289846,-9.049424,4.064700,-8.572549,-1.990800,-7.751615,-1.580464,-0.329555,3.464650,-6.883570,8.798580,9.371055,-5.275153,-1.650227,2.992062,-4.111799,0.276496,8.426387,2.066017,-9.446385,9.574183,-3.422723,3.763770,-0.771212,5.955853,-1.340326,2.690211,-8.368560,-2.943272,-0.644290,5.777511,7.301075,-3.975837,2.438913,-4.837904,7.156495,-9.318301,4.641630,8.190079,-5.640973,-1.235638,9.664521,-3.280855,6.049092,-2.395715,-1.062646,-2.062363,-0.037207,0.048404,-8.713477,-9.755243,9.928374,-4.053254,-1.778064,-0.322268,-2.060988,6.570864,0.772214,-8.624117,4.465179,-6.293350,-5.534091,1.128937,4.233402,-1.723967,-6.639395,-1.028907,9.637006,-8.908622,-2.103391,3.878823,1.256684,-8.238551,-2.054373,1.581276,8.469768,-2.889186,-1.867769,9.587089,-6.554892,4.735011,-3.484734,-1.606008,-0.139472,8.551025,1.125223,-0.661327,1.200753,2.562674,5.543708,9.114181,2.922463,-1.194416,1.699837,7.268244,0.822464,-3.820960,-7.290917,7.760069,1.254118,3.354424,1.395347,3.759800,-0.127041,6.314954,5.668682,1.395743,-9.562821,-4.582341,4.897526,8.268841,8.193091,-1.617732,-8.870759,-4.665538,-8.650495,-0.313168,3.966100,-7.321084,0.957850,2.616525,1.139811,4.597314,-5.804837,1.673723,2.594036,-4.683581,1.825566,0.799422,5.057421,9.907289,3.523190,1.250809,-4.881074,5.532334,2.468958,-6.016448,9.156639,-6.528200,-1.744817,0.029422,-1.235576,-3.996404,-8.211309,1.546908,8.322093,3.222248,7.716775,-9.094582,-7.921468,7.994147,-3.590927,-0.066067,1.843187,-7.450031,6.867925,5.495199,3.068948,6.154368,2.321739,1.122620,5.494554,-3.922573,-4.337494,-1.971968,-8.026823,-5.263946,-7.939764,-9.398711,-3.470411,1.905195,-2.416121,1.585407,-1.431500,1.983900,-5.509396,-7.865832,7.382848,-0.814324,1.321057,-7.880422,-7.775406,7.172237,-8.597632,-2.686095,-9.926192,-1.055177,-3.052601,-0.851659,-7.054235,1.941311,8.611121,-4.629370,-5.575000,-8.320928,-9.218535,2.106457,0.744900,8.989690,-4.209416,-5.831598,6.001874,1.508780,1.728222,-3.749306,1.736064,-9.236753,4.412713,4.324013,3.511569,-7.345375,-0.093276,-7.969670,-0.972392,9.219911,3.512764,9.851162,-7.628476,-3.504350,-3.917312,3.062853,-1.138177,-8.808197,1.072213,1.041183,5.399139,-3.983949,7.960924,-5.942292,-1.358257,-0.569523,8.036313,-6.450313,-1.880088,7.033766,4.694321,-2.761075,-8.119214,8.677160,-7.477065,-7.644381,-7.987840,-4.211835,5.221505,8.856013,-0.640325,0.529151,0.366144,-5.403974,2.148647,5.478158,-5.425247,-9.410505,-2.824255,-0.355573,2.464471,6.418019,2.752112,0.828415,-2.888702,-8.379271,4.138787,-6.488771,8.848937,-5.976181,3.737365,8.467046,-9.491107,-3.099534,-2.821992,5.740673,-6.931020,6.022731,-5.614082,-7.990399,-5.504105,-5.264926,5.774771,-0.408526,8.076646,0.436058,-1.476471,-3.292932,-2.324621,-7.886002,-3.011929,-0.273988,-3.573735,-3.220315,5.494377,1.586107,-2.312205,4.039386,-3.080241,-7.436681,-6.081653,-5.380135,5.927865,9.498019,-1.854148,-9.183189,-9.013670,0.464896,-0.774784,6.840040,-3.313354,5.445663,-9.443204,-4.411791,3.322200,-7.535296,-8.942894,-0.563122,-9.134023,-3.705717,1.674649,8.209433,4.585737,-9.616009,-9.270452,8.236917,-1.787018,4.225291,0.706115,-8.296857,5.543576,2.830800,1.937028,4.532033,8.109269,-6.207922,-4.500750,-5.269691,-0.865357,9.938537,0.742652,-2.734343,-9.369926,-8.195690,4.376250,-1.534842,-8.104676,1.464362,3.236608,5.307164,-7.586217,-3.274555,5.699627,-3.063159,0.056179,-9.662262,4.805274,7.612825,5.785874,4.928540,-5.948417,9.357680,2.135990,-2.071877,8.574249,-8.616712,-4.998382,-0.391484,5.480510,4.003045,-0.621705,5.695037,-1.517699,3.307884,2.087164,2.323202,-1.403630,-4.583642,6.832452,7.165854,-8.696601,-3.971925,-0.714457,-0.211904,4.276588,-2.358543,3.006042,9.641824,-9.725014,5.996375,-7.129942,9.264306,9.932670,-9.146468,7.974642,7.710904,1.577443,-8.623950,-0.691649,-0.634993,-1.674032,-1.681799,-2.668563,-0.512829,-0.594684,-3.442545,-4.846654,-1.080912,6.272796,-5.950365,-2.175633,-7.958867,6.970480,4.687450,8.279803,5.325906,-2.464272,-5.368269,-7.570957,-2.641918,-4.980188,1.360433,-0.921829,8.495420,-8.057188,-3.914361,6.146296,0.778966,4.452428,8.079761,-6.535329,0.516632,-9.030381,3.095188,-9.785339,6.729836,0.056943,2.512358,-5.105856,1.458112,-0.216090,1.917398,7.669777,-1.102310,0.892060,8.449520,-8.285205,5.515908,-1.507620,8.080957,-8.543956,-3.938966,7.805442,4.991159,-6.628700,7.563957,2.861805,-6.662355,3.604286,6.387046,-8.151937,-8.095970,2.502300,9.771132,-0.588973,-9.050860,-6.156825,-4.772918,-7.419290,2.844171,9.267042,5.794269,-7.503733,5.246195,-1.513381,-6.131719,3.127250,-2.050480,-5.962679,8.582435,-9.753333,4.542977,-8.546442,1.849009,-6.418431,5.244592,0.650074,-7.194218,-8.573126,0.694729,-0.582655,-6.899005,-0.832141,7.475636,-3.356572,1.997598,-6.075721,5.682408,9.525895,-8.692614,-2.944209,8.438454,-1.044282,6.224387,4.299370,-5.563257,-4.121180,2.475242,1.428401,-9.731000,4.451540,-8.889244,-9.198030,-6.640123,-0.070515,6.722566,-1.856783,-4.420917,-3.863284,-5.000521,-5.114047,-7.239056,2.481509,2.310250,-3.107083,-5.585716,-7.853214,9.192580,4.498980,-6.740522,-8.056793,-1.491119,-4.478959,-2.086416,-9.240850,-7.026017,4.895362,2.745755,-6.340619,6.598152,-1.934021,6.157409,-9.394328,-5.584833,-3.127228,-9.765793,-2.953773,-5.991455,3.206530,-6.573698,5.354625,3.350966,9.901388,8.370054,7.246133,-3.679751,-5.262006,-3.325066,-0.416259,-5.376551,9.425260,-8.445932,0.332120,-2.706780,9.172720,-4.726871,1.583289,7.960971,3.748674,7.396348,2.894681,-9.311613,8.695846,-0.710745,3.460486,-0.902313,3.593006,9.194613,1.734160,-7.085990,-8.072188,4.270419,-2.876670,-3.176837,6.150873,-2.789106,5.124251,2.089069,-4.166521,-8.428985,-9.015047,-7.903680,4.552696,6.860213,-6.570065,8.952299,-5.841681,-2.207443,6.467849,-4.155263,-0.597272,6.004649,-8.057623,-3.483973,8.897789,-9.106191,-5.368032,6.279082,-8.885013,-1.647167,-5.006779,1.136032,9.410531,4.822963,-4.851748,5.388638,5.156080,-6.779283,8.805367,-9.374271,-8.613543,5.975733,0.954255,-5.893290,7.961849,-4.052093,8.494912,-7.650919,-7.703951,6.746056,-5.563204,9.022559,-4.007267,3.543599,2.973634,-3.618329,-7.339150,-3.736982,-9.447344,-2.154850,4.330164,-3.550768,-5.168105,9.854682,-8.995867,-0.802585,-5.875901,-2.112585,5.995682,-2.308999,0.474368,-5.460752,-5.053491,-3.240273,-7.400911,-3.014859,9.460092,-8.418732,-5.125181,-4.562403,-8.900017,2.021435,2.515108,3.108627,7.810182,1.700176,-1.498813,-5.162965,-0.508804,-9.546339,8.527935,-7.877902,5.615792,0.091389,5.620235,-5.594239,-3.856943,-2.921032,-3.315583,-4.251476,4.047739,-9.507701,-8.270510,1.676827,3.836690,3.409130,-4.161144,-7.407918,-4.767097,8.703221,6.772310,8.472020,4.822936,4.295013,-4.059401,8.857276,0.034191,6.143460,7.617458,-5.914925,-1.006991,3.157168,-0.223672,-9.012365,0.672748,-6.269651,-9.194581,-5.697492,9.312100,2.242855,-7.729562,2.125206,-4.144526,4.599188,7.559364,6.453934,9.549689,6.272272,-9.112073,-8.022866,0.120852,-7.754892,-3.129907,-7.864032,6.565102,3.964146,-7.255859,0.637487,-7.781572,-5.651100,1.570181,9.461146,9.517098,-3.307395,5.350042,6.370843,1.898929,-1.700152,1.534281,6.541652,-1.644125,-7.824285,5.454624,3.243295,-6.853505,-7.708298,8.604199,-7.761237,-8.761244,-0.033102,6.041323,-1.946435,-7.537294,-4.665630,2.461755,-6.814249,7.564959,1.672677,-9.059342,-3.053539,-6.942012,-2.506872,-0.787285,-9.702915,8.446497,-1.309585,6.273481,2.858492,8.601994,0.870135,9.114268,-5.014571,-2.431093,-7.056442,6.495560,8.937649,5.701849,7.922563,-1.783500,-1.614142,9.405441,-2.816193,3.013018,-7.341241,8.545898,-7.381613,7.205619,5.280071,-1.603945,-5.268871,-9.300933,5.793236,-5.216639,-5.772115,9.227125,-5.452792,1.801480,0.658848,2.554421,-1.746467,4.505794,7.936922,0.932511,-6.734140,-6.711768,3.522693,-7.271525,-3.783384,-1.318478,2.949675,9.512997,-4.003518,-9.644101,-0.867135,5.283405,-4.389047,1.885778,2.059960,5.241185,-9.494168,-9.125044,-4.498649,-2.859454,1.504900,1.309601,-7.062820,3.736177,-1.257884,-4.769608,1.425457,1.515504,-1.975202,8.377715,2.897039,3.840473,1.527992,-0.944797,-7.750117,-7.333146,3.181369,-4.773780,0.258633,-5.361368,4.257287,-2.786427,-5.676693,7.317613,-6.844163,-8.830007,8.619495,7.187656,9.708994,-6.550465,-9.705025,-9.944942,0.677570,-8.922618,-3.251803,-9.552837,2.434239,-3.002596,-0.568445,4.944129,-4.744219,-2.972759,9.801619,-7.860751,2.538297,0.758881,-2.830144,6.576994,-8.476839,-4.492886,-4.347161,5.285095,0.436675,1.016194,6.024049,-0.091147,-9.137866,7.999389,-2.730019,2.434388,-2.113147,2.292214,-1.958378,-0.050002,-4.747118,4.105665,9.785605,1.898075,-3.807937,-7.446091,1.663213,9.746830,-3.627310,6.055004,1.632444,-7.112897,6.038228,-3.972170,4.392288,3.750826,1.345851,-9.414417,0.266039,8.156471,6.280205,5.297715,-4.538012,-4.796672,3.965976,6.846063,-0.762569,-4.425302,9.258275,0.311279,-5.198017,3.142411,2.821494,-7.053915,5.618428,-2.362646,-2.583532,3.631009,3.021111,4.436785,2.161179,0.133153,-2.384610,-9.444884,-6.607567,-1.098968,-3.076045,-8.933754,-2.263668,-4.784123,-4.791846,-9.999258,-3.687103,0.129587,2.583852,-5.337037,3.442548,2.062041,7.150010,5.320428,1.380299,-4.057595,4.809463,-8.363561,-2.038432,6.170497,4.754648,7.290647,0.514174,3.273769,3.947032,-6.647430,3.198358,-3.016605,5.524617,-1.685737,-5.233040,-6.430426,6.654141,8.970950,3.541774,-3.458692,-8.001589,-3.392461,-0.365385,-4.813780,2.750953,-5.794864,-2.210150,7.950570,7.318938,4.686137,4.735134,9.834264,-8.131831,-3.259019,-3.770952,-3.983517,-5.067295,-7.269165,8.494375,-6.013625,1.441726,8.519141,0.066545,0.216227,2.543854,-0.693592,-2.900750,8.030197,-7.449396,-5.500059,9.051564,6.814998,4.908672,-5.495844,2.246530,8.676143,-9.739759,-5.408224,-9.549869,-0.731850,-1.061313,-9.663216,-1.946676,4.467735,6.266707,7.805372,3.613397,-9.381536,8.113004,6.208390,8.699577,2.068851,0.604776,6.715985,-0.060296,7.291288,5.797416,2.353215,-0.229529,-1.992573,6.588801,-8.476630,9.780575,0.455189,8.415493,9.790068,-7.853654,-1.880163,-8.903288,2.428449,8.127159,-7.207662,-9.917960,5.375463,-0.763802,-5.186775,9.934610,-6.382858,0.020746,7.829643,-0.228224,5.354772,-6.239038,1.547713,0.025909,9.020081,4.352305,6.026135,3.039068,-1.077690,6.784947,1.020338,1.925809,4.962660,-1.744854,-4.065014,5.444025,9.623912,6.067081,-4.704184,9.355652,-4.721103,2.114259,-7.835759,-1.239677,8.794477,0.621880,-9.923436,-8.010447,5.504949,4.347321,-5.618588,0.269266,-2.333055,-1.103322,9.594550,-0.219300,-3.654567,-7.631077,-4.915808,-4.234295,-7.972406,8.241045,-2.352347,-8.942621,-8.841331,5.828050,-1.192548,-8.460928,-9.400352,2.591719,-8.827278,2.731562,-6.583455,7.902846,-8.988561,-8.453663,5.512260,4.774875,3.333373,0.757740,6.094475,-9.682329,1.241256,-3.178623,3.517728,2.523962,2.152007,4.962651,-1.624099,6.736183,-8.130075,4.646092,0.552228,5.192644,-9.210118,-3.713017,-8.034330,1.559184,2.757603,3.412442,-8.835213,-0.916110,3.376240,4.546800,-2.837571,-8.325059,-2.830925,-1.341212,-3.014897,-0.891391,-2.723997,1.924907,-2.606712,-0.116593,-2.754876,-5.870532,-4.130597,7.199279,-2.705707,-9.498555,1.400498,7.247618,-0.548126,4.292860,-9.753303,-2.669390,-3.408163,6.554515,-7.090144,-2.684018,4.805831,3.071343,4.788049,4.397178,8.949606,-1.225128,-2.697190,-8.357545,7.348493,4.871068,-3.796147,-5.686316,9.801848,4.902901,7.602147,8.227105,-3.693124,-6.101819,8.397802,-8.681169,9.528132,1.886571,-8.343892,8.833361,1.382057,0.002085,-2.032477,-6.031371,3.255380,3.548991,0.864265,0.755090,-9.592189,5.161908,7.530545,-4.326718,-8.701659,-0.144202,-7.494679,-2.888699,2.695116,4.257534,6.508273,1.147765,2.232442,1.312143,1.099523], dtype = "float32")#candidate|8640|(2352,)|const|float32
call_8637 = relay.TupleGetItem(func_1698_call(relay.reshape(var_8638.astype('int64'), []), relay.reshape(const_8639.astype('int64'), [13, 4, 1]), relay.reshape(const_8640.astype('float32'), [84, 28]), ), 0)
call_8641 = relay.TupleGetItem(func_1702_call(relay.reshape(var_8638.astype('int64'), []), relay.reshape(const_8639.astype('int64'), [13, 4, 1]), relay.reshape(const_8640.astype('float32'), [84, 28]), ), 0)
func_7992_call = mod.get_global_var('func_7992')
func_7995_call = mutated_mod.get_global_var('func_7995')
call_8656 = relay.TupleGetItem(func_7992_call(relay.reshape(call_8616.astype('int64'), [5, 3, 9])), 0)
call_8657 = relay.TupleGetItem(func_7995_call(relay.reshape(call_8616.astype('int64'), [5, 3, 9])), 0)
func_7534_call = mod.get_global_var('func_7534')
func_7537_call = mutated_mod.get_global_var('func_7537')
var_8679 = relay.var("var_8679", dtype = "uint32", shape = (1078,))#candidate|8679|(1078,)|var|uint32
call_8678 = relay.TupleGetItem(func_7534_call(relay.reshape(var_8679.astype('uint32'), [1078,])), 1)
call_8680 = relay.TupleGetItem(func_7537_call(relay.reshape(var_8679.astype('uint32'), [1078,])), 1)
output = relay.Tuple([call_8616,call_8621,const_8622,call_8637,var_8638,const_8639,const_8640,call_8656,call_8678,var_8679,])
output2 = relay.Tuple([call_8617,call_8623,const_8622,call_8641,var_8638,const_8639,const_8640,call_8657,call_8680,var_8679,])
func_8697 = relay.Function([var_8638,var_8679,], output)
mod['func_8697'] = func_8697
mod = relay.transform.InferType()(mod)
mutated_mod['func_8697'] = func_8697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8697_call = mutated_mod.get_global_var('func_8697')
var_8699 = relay.var("var_8699", dtype = "int64", shape = ())#candidate|8699|()|var|int64
var_8700 = relay.var("var_8700", dtype = "uint32", shape = (1078,))#candidate|8700|(1078,)|var|uint32
call_8698 = func_8697_call(var_8699,var_8700,)
output = call_8698
func_8701 = relay.Function([var_8699,var_8700,], output)
mutated_mod['func_8701'] = func_8701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8052_call = mod.get_global_var('func_8052')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_8706 = relay.TupleGetItem(func_8052_call(), 0)
call_8707 = relay.TupleGetItem(func_8053_call(), 0)
func_8171_call = mod.get_global_var('func_8171')
func_8174_call = mutated_mod.get_global_var('func_8174')
var_8717 = relay.var("var_8717", dtype = "float32", shape = (72,))#candidate|8717|(72,)|var|float32
call_8716 = relay.TupleGetItem(func_8171_call(relay.reshape(var_8717.astype('float32'), [36, 2])), 2)
call_8718 = relay.TupleGetItem(func_8174_call(relay.reshape(var_8717.astype('float32'), [36, 2])), 2)
bop_8733 = relay.left_shift(call_8716.astype('int32'), relay.reshape(var_8717.astype('int32'), relay.shape_of(call_8716))) # shape=(36, 2)
bop_8736 = relay.left_shift(call_8718.astype('int32'), relay.reshape(var_8717.astype('int32'), relay.shape_of(call_8718))) # shape=(36, 2)
output = relay.Tuple([call_8706,bop_8733,])
output2 = relay.Tuple([call_8707,bop_8736,])
func_8748 = relay.Function([var_8717,], output)
mod['func_8748'] = func_8748
mod = relay.transform.InferType()(mod)
var_8749 = relay.var("var_8749", dtype = "float32", shape = (72,))#candidate|8749|(72,)|var|float32
output = func_8748(var_8749)
func_8750 = relay.Function([var_8749], output)
mutated_mod['func_8750'] = func_8750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7747_call = mod.get_global_var('func_7747')
func_7749_call = mutated_mod.get_global_var('func_7749')
call_8872 = relay.TupleGetItem(func_7747_call(), 0)
call_8873 = relay.TupleGetItem(func_7749_call(), 0)
func_4078_call = mod.get_global_var('func_4078')
func_4081_call = mutated_mod.get_global_var('func_4081')
var_8925 = relay.var("var_8925", dtype = "float64", shape = (1, 66))#candidate|8925|(1, 66)|var|float64
var_8926 = relay.var("var_8926", dtype = "int8", shape = (210,))#candidate|8926|(210,)|var|int8
call_8924 = relay.TupleGetItem(func_4078_call(relay.reshape(var_8925.astype('float64'), [2, 3, 11]), relay.reshape(var_8926.astype('int8'), [210,]), ), 1)
call_8927 = relay.TupleGetItem(func_4081_call(relay.reshape(var_8925.astype('float64'), [2, 3, 11]), relay.reshape(var_8926.astype('int8'), [210,]), ), 1)
func_7424_call = mod.get_global_var('func_7424')
func_7427_call = mutated_mod.get_global_var('func_7427')
var_8932 = relay.var("var_8932", dtype = "uint32", shape = (77,))#candidate|8932|(77,)|var|uint32
const_8933 = relay.const([[7,-2,1,5,2,9,-6,3,-6,-1,-8,-1,-6,10,4,-10,5,6,-1,-10,-8,-7,5,8,1,-10,-6,6,5,-7,-9,2,10,-10,6,-4,-10,9,-10,-1,-10,2,10,-8,-3,6,2,7,-7,-1,-8,-9,7,-6,-9,-10,7,-5,-9,6,5,-7,1,9,3,-2,6,-1,-1,1,-7,-1,2,-3,-6,-4,-2,-10,-7,2,-10,2,8,-10,-4,1,4,6,-5,-9,-8,3,-4,-5,-3,-10,1,-8,5,8,-3,-1,-8,-2,-5,-5,4,5,3,8,4,7,-9,-4,7,6,-10,4,1,2,-9,-1,5,2,5,-3,9,4,-7,4,10,-3,-6,-8,-6,-3,9,9,-1,3,-10,-4,-6,-9,-9,-10,-5,-9,1,6,-10,-2,6,-5,2,-10,2,-3,2,-5,7,10,-8,2,8,7,-8,9,2,-10,1,7,4,6,-4,-9,-8,-4,9,8,-4,9,5,10,1,-2,-10,8,10,3,4,-8,10,1,-8,7,3,7,-4,-7,-7,-9,-9,2,-2,-5,7,-1,7,-4,-8,-10,7,-10,4,-7,-8,7,-5,9,6,-4,-9,-7,6,3,4,-4,1,-3,-5,4,-9,3,2,3,-7,-10,-3,-5,10,-10,1,9,-2,-7,-5,2,-3,-9,-6,2,1,-2,-9,-1,4,7,-7,-9,9,8,6,7,5,-4,-10,4,8,-4,-2,-8,-8,6,-1,6,1,-3,4,-8,-6,9,9,-7,-9,6,6,10,8,1,10,-9,-3,-2,2,7,-2,-6,-10,-8,4,2,7,-5,-9,6,6,-2,10,8,-2,4,3,-5,-2,4,8,-9,-10,-9,3,-8,-3,-1,-4,8,6,-2,-1,2,1,-3,-3,-3,9,2,9,2,-10,-6,-2,2,4,6,10,-1,5,-1,6,-3,-6,-6,7,-7,-1,-3,7,10,7,9,4,-10,3,9,-5,-2,-7,6,-6,-1,7,-9,-7,-8,-5,-4,8,-9,-5,-10,-9,1,-1,-10,-9,-6,-2,1,-4,-4,5,-9,1,-3,6,-7,6,-3,-7,7,-1,-2,-6,2,3,8,-3,-10,6,-1,7,-9,7,3,4,-2,1,-8,9,8,6,-10,4,3,3,2,3,-4,-3,6,5,2,2,-6,2,2,1,-8,10,-4,-7,-5,-8,-3,-6,-10,-7,-8,4,9,-7,5,3,-2,5,7,4,2,-1,-5,-2,-7,-7,9,8,-7,-10,-4,6,-7,-1,2,-8,-9,7,-5,1,9,8,1,-7,2,3,-10,1,-9,-4,10,-3,-9,5,1,-8,5,-10,2,7,7,-10,-8,-6,5,-5,-10,-6,-1,4,8,-4,-8,9,4,-5,-7,-7,10,-9,-1,-2,7,1,10,9,7,-10,8,6,9,-4,-10,9,-4,5,-7,8,4,1,3,3,-1,-7,-4,4,6,-10,-9,-6,-1,8,-7,-1,6,-6,-2,-10,-2,4,2,1,-6,-4,-2,-7,1,-3,4,9,8,10,4,2,9,-4,-6,8,-6,8,-3,2,-10,2,1,-5,-1,-6,9,1,-6,10,9,-5,-2,-6,-5,1,-3,3,-8,-2,7,4,-8,5,-1,7,5,-9,-4,-6,-1,-6,1,10,-10,-10,4,3,10,-7,5,3,5,-10,4,6,2,4,3,-7,-10,-2,-1,-6,4,-2,-5,-10,-4,7,-6,-7,-9,6,-7,-7,-9,9,5,-9,-7,10,3,-2,2,-8,4,-1,-6,-5,9,8,-2,-6,-10,-7,-5,1,-9,-8,2,-1,1,1,8,-8,9,-7,-3,-9,-9,2,-3,3,-3,3,6,4,-6,3,-1,3,7,3,2,-2,8,4,-6,3,7,-7,-2,10,-5,3,6,-8,-7,-2,2,-1,-10,4,-3,5,5,-5,-4,4,-8,9,-5,4,9,3,3,-4,1,1,4,-4,-10,3,-1,-5,-6,-2,1,-4,-3,-2,1,1,3,-5,-8,6,-7,-3,-10,9,3,8,7,-6,7,9,5,9,4,7,-3,1,5,-10,2,-10,1,3,-10,-10,-7,6,-1,-2,-8,-6,-5,3,-10,-7,-2,-9,5,-1,-1,3,-10,-1,-3,-5,-5,4,-7,-10,-9,9,-3,2,-10,-4,-4,8,5,4,-4,1,-3,9,-3,6,7,-3,6,2,-8,7,-5,-5,-6,-10,-1,10,-5,3,8,-10,-9,-5,8,-10,-6,-10,4,1,8,10,10,5,-9,-7,-10,-1,-10,3,-6,8,-2,2,8,5,3,-7,-5,2,1,-10,6,9,2,6,4,9,-4,1,-2,-8,-2,-10,7,1,-1,8,-6,3,-8,-5,3,-8,5,-9,-6,4,3,-4,-7,-8,-10,6,-3,2,-8,-2,1,9,9,-4,6,2,-1,-10,3,-9,-4,9,-3,-9,-9,1,-2,5,8,-6,-7,-4,5,9,3,1,10,-5,10,-4,-4,9,5,7,3,-8,2,-9,5,4,-3,-5,2,5,-3,-1,4,-5,3,-4,5,-7,3,3,3,8,-10,-10,-5,8,-4,7,10,8,-1,-2,-6,3,-6,-9,-4,6,2,-8,-10,4,-7,3,10,3,-6,10,-5,-1,-1,-1,-9,-9,-10,5,5,-4,-10,-10,-8,4,7,6,-10,2,-9,-4,-7,-9,-2,-6,6,1,-7,-8,3,9,-7,9,-1,-9,-1,9,8,6,-4,8,4,-6,10,8,-6,-1,-3,10,-1,-6,-2,4,-5,-9,-5,-7,-6,-2,4,8,-8,-3,-1,-8,-2,9,-9,3,3,3,10,-7,-2,3,-10,6,-3,-10,1,-9,2,8,-10,7,6,-1,9,-5,6,5,-10,-3,-1,9,3,-7,-7,8,10,3,3,-2,-2]], dtype = "uint32")#candidate|8933|(1, 1078)|const|uint32
call_8931 = relay.TupleGetItem(func_7424_call(relay.reshape(var_8932.astype('uint32'), [77, 1]), relay.reshape(const_8933.astype('uint32'), [7, 154]), ), 1)
call_8934 = relay.TupleGetItem(func_7427_call(relay.reshape(var_8932.astype('uint32'), [77, 1]), relay.reshape(const_8933.astype('uint32'), [7, 154]), ), 1)
func_7724_call = mod.get_global_var('func_7724')
func_7726_call = mutated_mod.get_global_var('func_7726')
call_8940 = relay.TupleGetItem(func_7724_call(), 0)
call_8941 = relay.TupleGetItem(func_7726_call(), 0)
func_8289_call = mod.get_global_var('func_8289')
func_8290_call = mutated_mod.get_global_var('func_8290')
call_8942 = func_8289_call()
call_8943 = func_8289_call()
output = relay.Tuple([call_8872,call_8924,var_8925,var_8926,call_8931,var_8932,const_8933,call_8940,call_8942,])
output2 = relay.Tuple([call_8873,call_8927,var_8925,var_8926,call_8934,var_8932,const_8933,call_8941,call_8943,])
func_8948 = relay.Function([var_8925,var_8926,var_8932,], output)
mod['func_8948'] = func_8948
mod = relay.transform.InferType()(mod)
mutated_mod['func_8948'] = func_8948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8948_call = mutated_mod.get_global_var('func_8948')
var_8950 = relay.var("var_8950", dtype = "float64", shape = (1, 66))#candidate|8950|(1, 66)|var|float64
var_8951 = relay.var("var_8951", dtype = "int8", shape = (210,))#candidate|8951|(210,)|var|int8
var_8952 = relay.var("var_8952", dtype = "uint32", shape = (77,))#candidate|8952|(77,)|var|uint32
call_8949 = func_8948_call(var_8950,var_8951,var_8952,)
output = call_8949
func_8953 = relay.Function([var_8950,var_8951,var_8952,], output)
mutated_mod['func_8953'] = func_8953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7747_call = mod.get_global_var('func_7747')
func_7749_call = mutated_mod.get_global_var('func_7749')
call_8976 = relay.TupleGetItem(func_7747_call(), 0)
call_8977 = relay.TupleGetItem(func_7749_call(), 0)
func_7278_call = mod.get_global_var('func_7278')
func_7279_call = mutated_mod.get_global_var('func_7279')
call_8980 = relay.TupleGetItem(func_7278_call(), 4)
call_8981 = relay.TupleGetItem(func_7279_call(), 4)
output = relay.Tuple([call_8976,call_8980,])
output2 = relay.Tuple([call_8977,call_8981,])
func_8992 = relay.Function([], output)
mod['func_8992'] = func_8992
mod = relay.transform.InferType()(mod)
output = func_8992()
func_8993 = relay.Function([], output)
mutated_mod['func_8993'] = func_8993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8121_call = mod.get_global_var('func_8121')
func_8122_call = mutated_mod.get_global_var('func_8122')
call_9012 = relay.TupleGetItem(func_8121_call(), 0)
call_9013 = relay.TupleGetItem(func_8122_call(), 0)
func_5968_call = mod.get_global_var('func_5968')
func_5973_call = mutated_mod.get_global_var('func_5973')
const_9024 = relay.const([-3.987374,0.157839,-4.183526,6.370633,-5.770645,-2.168889,1.633516,-9.038514,5.662524,-5.804218,8.635052,5.218513,4.210440,8.670841,3.661686,6.213515,-7.927423,-2.929676,4.177192,4.550048,-5.182732,0.738222,9.198567,-6.614377,6.776830,-8.061085,3.605137,-0.445632,-7.212282,5.138977,9.590876,1.709102,-8.167910,-6.659448,7.690726,3.178901,2.561353,8.996756,-0.651551,-9.389124,-9.754663,-1.626017,-9.513963,0.839149,1.855003,-8.281003,4.849240,-5.244445,-6.952574,8.441685,-2.785395,5.321933,3.604228,-5.111905,-7.154031,-2.884594,-6.105943,-1.331587,8.316957,5.793025,2.704962,4.130517,9.206983,-7.784122,-4.325497,3.580925,-8.253062,-4.711975,6.022773,8.064076,8.484258,-7.194741,-3.029043,6.910472,-7.123050,-1.913016,-9.664843,7.085584,5.518194,6.011391,2.345446,-5.053101,-9.799349,-6.265410,-5.404160,3.993403,0.543068,6.937914,4.180642,0.307866,1.531640,5.512581,0.142870,8.031642,-0.955095,-2.956686,7.968586,9.786284,1.474442,3.289866,0.508986,-5.111527,-2.969599,-0.178230,-1.713296,-3.505312,-5.984495,3.882462,-5.204139,-7.748854,-0.809209,-6.391126,-8.767223,6.937322,3.717897,3.573239,8.361227,4.259409,2.471277,1.732409,4.023637,7.119602,2.500188,9.635466,6.772522,-5.942775,-3.927663,7.896710,-7.128837,0.547980,0.486040,-1.148182,-2.872759,-9.718534,-8.722479,6.183752,7.663049,8.115291,6.624615,-3.899940,-7.852097,-9.879867,-8.345452,2.797823,-2.923513,-5.553889,9.434237,6.853067,9.355394,3.694581,5.045620,4.245477,8.582669,-4.292150,-2.011565,2.730951,4.596467,5.884732,9.914646,2.941945,7.154390,4.465904,-8.125822,-0.012595,7.801889,0.878946,-6.766315,4.815599,1.399004,4.505572,1.426885,2.333532,-0.034775,-8.285251,0.219699,-2.335685,0.975038,-3.735824,-3.893062,1.118579,-5.282202,-0.158643,-8.213735,0.848005,0.973694,2.021165,5.608152,-3.343234,3.079701,-8.085985,-5.798028,-8.646861,-1.358405,9.468535,3.779369,-5.395022,-8.709769,6.856575,9.281357,-4.223902,1.797359,0.335224,-0.349454,-1.221002,-1.382815,1.444109,5.610720,-0.664282,-0.367839,-0.144213,7.517052,4.555239,-4.639760,-4.837601,5.827436,-7.381824,-7.917767,-7.368796,0.747466,-1.477963,9.491000,-2.155983,2.878698,-2.271534,0.403597,-4.595195,-7.976741,-9.691732,-0.925016,-2.660266,6.617002,-6.689608,-8.802275,2.081571,8.972281,3.819997,2.801185,-8.479097,-7.492194,-1.307103,6.820627,-5.290149,-2.285263,-0.657845,6.326032,8.482355,-6.796103,-4.077231,-4.769909,-1.859898,-7.217255,-2.872447,-3.613876,-2.897479,4.637936,-2.626725,2.439555,-2.388195,6.451941,-3.311380,1.102265,9.937096,5.672079,-2.475676,6.730518,-6.950583,-5.938307,5.481937,6.155291,-0.843190,-9.736288,4.082040,9.373095,-4.443176,2.763381,-3.768634,-1.980839,-8.817566,3.845157,8.725296,0.076648,-6.216413,-2.763413,-4.295717,-6.316144,-3.634056,6.635129,-7.770328,-2.908219,6.717945,-5.195252,-4.230396,-8.348449,-2.359424,-3.481826,-7.750434,8.058929,0.605253,1.400194,2.742754,-9.472349,-0.651629,-3.331847,3.642317,0.832627,-7.434608,-4.334868,-6.586511,0.748029,-2.397615,-6.775644,7.193998,-8.048441,3.359571,2.334264,4.396988,2.535625,9.709339,-3.719459,-8.825263,-1.022192,6.695109,2.658824,4.941559,3.268121,-0.086104,-5.939096,0.484100,6.241061,-8.257501,-2.559983,-5.010566,-3.603743,8.077522,-3.383067,-6.048352,-3.869090,1.919589,-3.139081,-7.538888,6.543524,4.856593,-3.904215,-8.345045,-7.661617,-9.213248,-9.455788,-0.227572,2.435497,8.279814,6.709970,-0.153685,-7.648565,7.359055,-7.846147,-8.066121,5.844341,2.807678,-7.797830,2.714382,0.193336,5.123724,-1.937192,-2.872649,3.832946,-8.943028,6.142012,-2.648281,-4.500531,-7.641928,6.830021,-0.357045,0.488070,2.375541,6.324213,-6.297851,-0.845904,-5.533474,1.545548,-4.813168,9.843488,3.720136,1.203350,-9.215378,4.686519,-6.782660,7.262778,8.250551,0.554750,-5.786977,9.167643,6.797094,9.868905,7.711245,-9.158143,6.065777,-1.099542,-0.152115,3.710291,8.385506,-4.985873,8.086060,5.560640,-9.339244,0.325130,5.639697,6.813923,4.747887,3.711672,1.556027,-9.824239,7.627969,7.427664,7.448180,-0.203720,4.419169,-5.224276,-8.070224,-0.849044,-3.499892,5.096257,-2.179862,-3.296997,4.325810,-4.561041,6.049966,-6.387698,8.930906,5.706533,-9.866066,-2.900035,-6.091611,-5.593591,-3.106120,1.945454,1.064298,-8.459710,3.923257,2.550931,-2.372208,2.869031,-7.322580,-6.317641,4.512921,-6.287531,6.542170,5.120235,-9.082606,-8.362801,-4.217645,8.873851,8.673581,-0.046629,9.479252,4.709543,4.356376,6.503892,-9.438671,-4.792518,4.692749,1.859210,3.654283,-5.106987,2.922071,-7.267583,-2.212280,2.019800,8.876679,-7.494202,1.452190,9.399206,-0.862639,-7.750499,-4.958334,-7.539295,-5.658686,9.570945,1.581520,2.336956,-9.543597,-3.543510,6.659490,-8.154847,8.577413,8.296580,5.612531], dtype = "float32")#candidate|9024|(486,)|const|float32
var_9025 = relay.var("var_9025", dtype = "uint32", shape = (1, 77))#candidate|9025|(1, 77)|var|uint32
const_9026 = relay.const([5,8,2,-1,9,-10,-10,10,-6,5,-1,-1,2,7,10,-5,-5,-2,-4,-3,6,-6,10,6,2,-1,4,3,1,4,-1,10,-1,-2,3,8,9,-8,9,-4,-9,-3,-7,1,-6,3,5,5,4,-2,5,10,3,2,4,-2,2,-8,-4,7,5,7,-3,-5,-10,-6,7,8,6,2,9,-4,1,-10,-2,-5,6,6,-4,8,8,-10,10,4,1,5,-4,-9,-3,-2,-5,-4,8,-2,-3,-8,-6,5,-8,3,7,-7,9,7,-4,-10,3,2,6,-4,6,-9,2,-8,2,-2,-9,9,-7,-1,5,-4,7,-10,1,1,9,2,3,4,1,-6,6,-2,4,-6,7,7,-5,7,4,5,-10,-7,-7,10,-6,2,-2,7,-8,-2,2,-6,-8,-4,3,-6,-8,-7,3,-5,-2,2,-1,-9,-3,-1,10,-3,4,-1,-1,-1,-9,4,-4,10,5,-9,1,5,-8,-9,8,9,1,9,6,-1,-6,4,3,5,5,6,9,10,-2,6,-2,1,4,7,10,6,2,-8,-3,7,-7,6,6,5,-4,9,-7,-1,-2,2,6,-10,7,5,2,-10,5,-7,1,-3,3,2,2,-1,-4,8,1,8,7,10,5,8,-3,3,7,10,7,9,7,-4,5,9,-10,-5,-10,6,-2,-7,1,10,5,-7,-4,-4,6,-10,-9,-8,7,8,6,-7,10,5,4,-9,-7,-3,-1,-2,4,10,4,-4,1,10,-8,6,-1,-1,-8,5,-7,8,5,6,3,-5,-6,-8,1,-4,5,8,1,-10,-10,-6,-3,-4,6,2,-8,4,5,10,-2,-8,-4,-2,6,6,8,2,8,-2,7,-2,10,-8,-2,3,-5,-10,7,-4,5,-8,3,4,5,-6,9,-7,7,-4,-6,-2,7,-7,-5,7,2,5,-3,-9,-7,1,2,-5,-5,-8,5,1,-2,-6,3,9,7,3,4,-10,-4,7,3,8,8,-9,6,6,-10,6,-6,-9,10,-4,-1,-3,9,4,1,-8,-8,3,8,-3,-10,2,-4,8,10,-8,8,9,-3,-9,-2,5,-5,5,6,2,7,-3,-2,6,-4,-4,-6,-2,-5,-5,-8,-9,9,-4,10,-2,-9,-7,-9,-2,7,-7,-10,-6,-10,2,-1,8,-4,4,8,2,-4,-8,-4,-6,-8,-8,4,3,-2,9,-7,3,1,9,7,9,-2,4,7,9,-5,-6,-8,2,-6,-7,-7,-6,10,-10,-7,-6,-3,-7,2,-8,2,7,-4,3,-1,-5,-1,-9,-8,-7,5,6,-6,10,10,7,5,5,5,1,8,-6,-9,-1,-3,4,2,8,4,7,8,-7,10,-2,9,2,-9,10,3,-5,-8,6,10,9,10,7,10,10,-5,4,6,-3,4,3,5,-4,8,4,-2,9,8,1,-9,7,-5,-9,-7,-4,-6,-6,6,3,-2,1,1,-7,7,7,2,1,5,6,2,2,-10,8,-10,1,9,5,3,9,3,7,9,1,-6,7,9,-6,8,5,9,10,-8,-8,-9,1,4,-7,6,9,5,1,-5,-2,-3,5,-3,-9,-1,1,5,-4,-10,2,-1,7,8,1,-7,10,-2,-1,9,-7,9,4,2,5,-1,7,9,-7,3,2,-10,9,7,-6,-4,-9,-1,-8,-3,4,-9,3,6,-7,-5,-9,3,-7,-10,9,6,-6,2,-1,-7,6,-7,-6,-8,-1,1,-8,-8,5,7,-9,-3,-3,10,-10,10,-5,-7,-1,-3,10,2,8,-4,-5,6,-6,-10,-4,3,-9,9,10,-6,-1,-3,5,-8,5,-4,2,6,-9,-7,9,4,-2,6,9,5,3,2,5,-8,1,-1,-4,-5,5,3,-1,-4,9,9,3,9,-3,-1,10,-7,3,-8,-4,7,4,-5,-8,1,10,7,-5,-9,-9,7,2,-4,3,-2,-4,8,1,-4,2,-8,7,-6,-4,-1,7,-4,-1,4,10,-10,-6,-6,-2,6,8,-6,9,-5,9,8,3,5,-10,-9,6,9,-10,9,-5,-5,10,6,-5,4,9,10,-6,8,-5,-8,-8,4,-2,-9,-9,10,6,-1,-8,-5,-9,-1,-9,10,-7,6,7,-3,-5,8,5,-3,5,-1,1,2,-10,-4,3,4,4,3,-2,-4,9,10,1,6,-9,1,-3,-9,-7,4,7,-7,-2,4,-9,10,10,1,-5,-7,3,4,2,-1,-6,-6,4,6,8,-9,-10,-4,-9,4,-1,8,-1,-2,-8,10,7,-1,-3,-5,10,-5,-3,3,-3,7,9,10,2,3,-4,-5,10,1,4,-2,2,-5,8,8,-4,-9,-2,3,10,3,-8,6,6,-9,7,-7,3,-3,-9,-6,8,7,2,-2,-5,-6,-5,9,2,-2,-1,8,-10,-7,-4,5,6,-1,-2,-3,-10,-8,-3,-6,6,4,6,3,4,8,-3,-1,-3,-9,7,-1,-3,2,5,1,-6,9,10,10,2,-2,-1,5,-5,-8,-6,-9,-8,-5,7,-2,-4,4,3,-5,-4,-9,2,-8,8,-1,-6,5,1,7,-7,-2,-10,-2,2,9,6,10,1,9,5,6,-2,5,1,5,1,-7,-4,5,6,-4,1,2,-2,-3,-3,-8,10,-2,5,10,-5,-8,-6,6,6,-6,-4,1,1,4,-3,-3,-8,-5,-2,-9,-2,5,2,3,1,-5,10,-2,-9,9,9,-4,-6,-9,6,5,-7,-7,2,-6,-9,-2,8,2,-10,-7,10,5,-2,4,6,-7,10,3,4,-8,4,-2,2,10,-4,3,10,-9,4,-2,3,-5,-3,-6,8,2,2,4,9,-7,1,-6,-10,5,10], dtype = "uint32")#candidate|9026|(1078,)|const|uint32
var_9027 = relay.var("var_9027", dtype = "float32", shape = (2352,))#candidate|9027|(2352,)|var|float32
call_9023 = relay.TupleGetItem(func_5968_call(relay.reshape(const_9024.astype('float32'), [6, 9, 9]), relay.reshape(var_9025.astype('uint32'), [77,]), relay.reshape(const_9026.astype('uint32'), [1078,]), relay.reshape(var_9027.astype('float32'), [84, 28]), ), 1)
call_9028 = relay.TupleGetItem(func_5973_call(relay.reshape(const_9024.astype('float32'), [6, 9, 9]), relay.reshape(var_9025.astype('uint32'), [77,]), relay.reshape(const_9026.astype('uint32'), [1078,]), relay.reshape(var_9027.astype('float32'), [84, 28]), ), 1)
var_9031 = relay.var("var_9031", dtype = "float32", shape = (2352,))#candidate|9031|(2352,)|var|float32
bop_9032 = relay.add(var_9027.astype('uint32'), relay.reshape(var_9031.astype('uint32'), relay.shape_of(var_9027))) # shape=(2352,)
func_2148_call = mod.get_global_var('func_2148')
func_2153_call = mutated_mod.get_global_var('func_2153')
var_9037 = relay.var("var_9037", dtype = "float32", shape = (160,))#candidate|9037|(160,)|var|float32
call_9036 = relay.TupleGetItem(func_2148_call(relay.reshape(var_9037.astype('float32'), [5, 4, 8]), relay.reshape(var_9025.astype('uint32'), [77,]), relay.reshape(bop_9032.astype('float32'), [2352,]), relay.reshape(var_9037.astype('int32'), [5, 4, 8]), ), 4)
call_9038 = relay.TupleGetItem(func_2153_call(relay.reshape(var_9037.astype('float32'), [5, 4, 8]), relay.reshape(var_9025.astype('uint32'), [77,]), relay.reshape(bop_9032.astype('float32'), [2352,]), relay.reshape(var_9037.astype('int32'), [5, 4, 8]), ), 4)
output = relay.Tuple([call_9012,call_9023,const_9024,var_9025,const_9026,bop_9032,call_9036,var_9037,])
output2 = relay.Tuple([call_9013,call_9028,const_9024,var_9025,const_9026,bop_9032,call_9038,var_9037,])
func_9043 = relay.Function([var_9025,var_9027,var_9031,var_9037,], output)
mod['func_9043'] = func_9043
mod = relay.transform.InferType()(mod)
var_9044 = relay.var("var_9044", dtype = "uint32", shape = (1, 77))#candidate|9044|(1, 77)|var|uint32
var_9045 = relay.var("var_9045", dtype = "float32", shape = (2352,))#candidate|9045|(2352,)|var|float32
var_9046 = relay.var("var_9046", dtype = "float32", shape = (2352,))#candidate|9046|(2352,)|var|float32
var_9047 = relay.var("var_9047", dtype = "float32", shape = (160,))#candidate|9047|(160,)|var|float32
output = func_9043(var_9044,var_9045,var_9046,var_9047,)
func_9048 = relay.Function([var_9044,var_9045,var_9046,var_9047,], output)
mutated_mod['func_9048'] = func_9048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8090_call = mod.get_global_var('func_8090')
func_8092_call = mutated_mod.get_global_var('func_8092')
call_9055 = func_8090_call()
call_9056 = func_8090_call()
func_1335_call = mod.get_global_var('func_1335')
func_1340_call = mutated_mod.get_global_var('func_1340')
var_9065 = relay.var("var_9065", dtype = "uint32", shape = (77,))#candidate|9065|(77,)|var|uint32
const_9066 = relay.const([[5,-8,-2,-2,-4,-7,8,6,4,1,6,10,10,-3,-3,6,-6,-3,-5,-3,-3,-10,4,6,-7,-3,6,10,-3,3,-8,3,3,-4,10,-9,-6,5,-6,-9,-9,5,6,-5,8,4,-5,2,3,-8,3,-8,-6,-8,8,-5,-2,4,8,10,5,4,10,-10,3,-8,3,3,10,4,-3,-7,-1,-6,10,7,-7,-7,-10,-4,5,9,-9,-9,-8,-9,4,-5,-4,-6,-6,-10,-7,-1,-6,-9,-6,-8,3,-6,-2,9,8,1,-6,8,1,6,-7,-4,-4,3,-3,5,-2,-4,-5,-2,-10,6,-1,9,-6,-9,-2,7,8,-7,3,-7,-4,-9,6,3,6,2,-6,1,-6,7,5,-7,2,-6,-6,9,-3,-9,2,5,-3,-5,-9,-1,9,6,-1,-9,-7,-7,-7,2,-7,-1,5,6,6,-7,10,-2,7,2,-3,1,7,10,4,-6,-5,9,2,7,7,-2,1,5,-6,-4,-2,-6,2,-3,-9,7,-5,-3,-2,-6,4,5,4,3,-10,8,1,1,1,10,-2,-6,-5,-5,-9,5,8,9,1,3,-9,3,4,-5,-7,-5,-4,-5,9,-6,-8,-4,-1,10,4,-5,-4,-5,4,3,7,-10,6,9,-5,6,4,-2,2,8,7,1,4,2,-7,9,5,-4,5,8,8,5,-1,-8,-1,1,10,3,-1,1,-2,-2,10,-7,1,4,9,-3,8,-5,8,9,9,3,7,-8,4,7,7,-8,-9,-8,-4,9,4,1,10,-1,3,9,-8,10,-6,-8,1,9,-10,10,-10,6,-5,-6,-8,-5,3,-1,-8,4,8,-5,8,10,-3,-2,9,8,6,8,3,4,-7,6,8,9,4,6,10,-1,-6,9,-2,9,1,1,3,9,-2,7,-8,5,-2,5,-7,-8,-9,8,4,-9,-9,8,-6,3,-3,-8,-7,-3,4,-3,-4,3,6,5,1,4,6,3,10,-2,8,-3,2,4,-4,4,7,-1,9,2,2,1,9,-10,1,1,-1,-4,10,7,-6,10,-10,-6,-7,-8,-6,6,4,4,7,5,-10,1,7,-4,10,-6,-4,-9,1,-1,8,-2,-5,-8,-2,2,-1,3,-2,-1,-10,-3,9,7,-9,5,-8,-10,3,-9,10,-8,6,-1,10,-1,10,5,7,-7,2,6,9,7,5,-9,-9,7,10,-6,-9,1,4,-7,9,7,-8,-3,8,-10,-6,-9,-6,2,4,6,-6,3,2,9,5,-3,9,-1,4,2,-2,4,-7,4,6,-5,7,-4,-7,10,-1,7,9,-6,1,2,9,3,-4,-5,9,5,-7,4,-4,-6,-7,4,10,6,8,-5,8,2,7,4,-9,-9,-10,8,7,-8,4,-10,-1,-6,-6,7,10,-6,7,2,-1,-2,-6,-6,4,-9,3,5,-6,5,5,-8,1,2,5,6,7,-10,8,-7,-7,5,4,6,-2,-3,-4,1,-6,3,-9,9,7,-8,-5,-9,1,-4,5,-4,2,-3,-10,-10,-7,8,-2,-1,-8,3,-6,-6,8,2,10,10,5,8,8,-2,3,-1,10,-5,5,-2,2,-7,-5,-6,5,7,-9,-5,-5,2,-8,-4,-8,-7,-6,-3,-6,-3,-9,8,-4,4,-9,2,8,3,-8,-4,-3,9,-1,-10,-3,8,1,-6,10,-8,-8,5,4,-2,3,1,9,7,-2,-5,-1,7,-8,7,-10,8,-7,4,1,6,-1,1,-4,-10,-9,-1,9,-2,-10,4,6,-2,5,4,1,9,4,-4,2,7,10,-2,8,5,-7,-10,10,-5,7,8,-1,3,-9,-6,-2,2,2,8,-2,-10,1,1,1,6,-9,-7,3,6,7,-5,-8,1,-5,-2,4,-5,1,6,-3,-1,7,3,-9,4,-4,7,5,3,-6,6,-4,-7,-8,8,-7,6,-8,6,9,-3,6,-4,-7,1,-2,5,8,1,-7,7,-10,10,1,5,-7,-2,8,5,3,-1,5,-10,-10,-10,2,2,2,9,-9,3,1,-8,3,6,-1,2,-3,-10,-5,-9,-10,10,5,5,-2,-2,4,-3,7,-5,-6,-6,-9,-3,7,-3,5,8,3,-5,-2,9,9,4,-3,4,-4,-10,7,9,-7,2,8,-1,-5,-5,5,4,-7,-2,5,-2,8,-6,-7,-10,9,-6,4,-7,6,-6,7,-9,-6,5,-8,-4,2,3,5,6,7,-3,9,-2,2,-8,-7,3,7,-9,-6,-3,-3,8,10,-3,5,-10,6,1,-9,8,7,9,9,9,1,4,8,3,7,5,-4,6,4,-1,-8,8,8,9,5,5,-10,1,2,-6,-4,8,-5,-9,4,3,-6,-9,-8,6,-6,1,-9,-6,6,9,-2,-7,3,-5,5,1,8,-10,8,-10,-6,-2,3,7,9,-9,-2,7,4,6,-9,5,-9,-4,10,1,4,10,-3,-7,4,3,-4,-3,2,10,-6,-9,-9,-2,-8,4,8,9,2,2,-4,1,-5,10,6,9,4,-7,-2,3,-1,3,-10,1,-2,9,-9,-6,7,-4,-6,4,-2,7,9,-5,5,-2,-4,-9,7,2,10,-2,6,1,8,3,6,5,8,-8,10,9,2,-10,-8,6,-2,7,4,-9,-3,4,4,7,-9,-6,4,5,-5,-8,9,5,4,-1,-9,-3,-5,-4,-6,1,-5,-6,-4,6,8,-4,-7,10,10,2,-2,-4,9,7,6,-1,-7,-9,-2,10,-10,-8,-5,10,2,7,-4,2,-8,1,9,6,-2,6,-1,-3,5,9,2,7,1,7,-6,3,1,9,-7,-5,9,1,10,-2,5,-4,1,10]], dtype = "uint32")#candidate|9066|(1, 1078)|const|uint32
const_9067 = relay.const([6.753245,7.100929,7.789505,3.625013,9.312363,-2.702756,2.279838,-1.346758,-7.355275,5.820081,4.394505,2.354485,9.000964,-7.569352,8.278844,5.243345,-8.412655,-0.971706,5.033071,-1.634043,8.917481,-7.016940,-1.488742,-4.916510,5.361113,-3.565026,-7.951936,5.957397,-0.799400,3.380573,-3.014212,3.430173,9.840567,3.274887,4.324195,3.000273,-7.388420,-8.630082,-9.934714,1.243826,-5.397307,5.815540,1.511786,-2.079040,-3.731277,8.470927,-5.989373,5.022700,-5.622145,7.191562,-3.767077,-5.136750,-3.818445,2.276368,-5.433030,-3.672853,-7.258212,3.998929,-1.404868,-1.017710,5.543640,-5.932245,-2.984284,5.869982,-0.618534,-6.927339,-1.560039,9.440047,8.504224,1.011648,5.312733,4.448074,4.153711,-0.686063,-7.990654,-6.828070,-2.019510,-2.418313,8.276086,-5.560882,-2.627974,-4.005283,2.379539,2.841521,6.073055,-1.984049,-0.404509,-6.502198,8.017931,-5.830172,9.445971,0.333284,9.047682,-3.326474,-6.631420,-6.477146,-8.381362,1.566816,-1.852609,-6.122239,8.850251,-3.302775,-0.479336,-6.412108,4.660585,-9.970711,1.160319,9.756472,4.431038,6.778902,-3.931208,-7.813477,0.288690,-4.131779,-6.089126,3.010614,-7.564191,1.703741,-0.798763,-2.097789,-5.570001,6.714821,-2.133888,-5.221723,-8.065568,4.748839,6.300978,9.425864,0.262525,-1.351947,1.710044,-5.801003,-7.513688,-1.007152,9.071559,-4.625690,0.011778,6.830297,-9.444361,6.377455,-7.805652,1.552515,-7.813366,-5.592903,5.357877,7.577332,-2.302143,-3.415447,-1.957528,0.329080,9.909462,2.750280,8.373737,-2.582964,5.926776,0.557692,6.639490,7.576909,4.956552,6.081651,7.669547,6.048588,-3.374357,-0.111070,9.471451,-0.393473,4.654380,0.997010,7.597951,1.039458,-8.968785,-1.715118,2.279868,8.222217,6.025518,8.160615,-3.793596,-0.113914,-6.254869,7.782021,-2.866025,-9.833251,5.547456,3.525133,-1.686862,5.553172,1.268294,-9.138502,-5.201052,7.864530,-3.440733,-3.807622,-3.365015,-9.202412,6.761959,-1.682111,7.747743,4.787425,-2.596786,6.966575,1.233731,7.875217,-4.234337,-5.167529,-0.202063,-0.414019,-3.659845,8.445791,3.595908,-4.858821,7.726261,6.014206,6.340279,5.556936,0.085716,-2.176643,-9.030090,9.793406,9.687520,9.767608,6.558555,8.484935,-4.708191,-0.410814,-8.742597,-0.636778,9.663980,-9.184499,-6.475171,2.265875,5.384646,8.611258,0.230098,-5.474834,-9.407010,-7.845896,-6.396739,3.641187,-5.295454,-3.480558,-5.446289,-8.531457,-4.106885,7.465378,2.655092,-4.564664,-7.554012,-7.460810,-2.101993,6.074325,-2.736900,8.168424,5.702381,6.236292,-4.298443,-1.668679,-0.607993,7.049128,9.418785,5.043065,8.698812,4.770394,2.328784,3.426322,7.648590,-5.765393,6.535014,-3.552081,2.835872,-6.752492,8.018498,-3.275697,-1.300549,2.555820,-3.452817,-7.388126,-8.357563,-9.357453,4.714234,-0.970340,-5.207327,-2.850934,-4.321266,-6.637056,-4.239981,9.917865,4.328396,1.646253,8.858813,2.163075,5.591823,7.998527,-3.075969,-5.069473,-7.207110,-1.415249,9.622830,-9.626651,0.918605,7.143426,8.795161,3.480077,8.610956,-2.418413,5.351266,-8.467456,9.116962,8.464667,1.192924,4.138768,-1.563625,-6.779114,-0.178858,8.949611,0.116974,6.109902,2.151834,8.801204,7.870945,-7.332803,-6.798219,-6.852208,-3.252224,3.320981,1.199460,9.623434,-9.151353,0.895554,-5.251072,-2.464171,-2.215223,2.715055,-8.285912,-8.788453,-2.185596,2.878226,0.180940,2.614957,7.396750,-6.817070,3.246374,-3.942267,3.126135,5.369683,-3.817147,-1.728083,8.234317,-4.145204,-2.074173,-5.972322,9.429443,6.464486,7.466271,4.887118,4.583075,9.048779,8.225398,-9.055647,7.205869,9.272428,1.232441,-0.797859,6.539622,4.504870,8.229385,-1.070573,7.290090,-1.317432,-5.140901,7.254242,0.792341,8.128631,-1.687311,9.068954,5.064771,7.440897,-7.885625,6.259107,-8.038818,-4.982258,-0.322595,7.757564,-0.829314,-0.093743,0.241248,9.307352,-8.172197,6.531517,-4.550400,1.027996,1.682329,0.184530,-6.425221,0.171603,0.817117,7.307281,1.795372,7.354051,-9.130946,-6.791565,4.000751,-6.155743,-0.016712,-1.188816,-2.402384,-6.469367,-9.116668,-8.115449,6.065551,7.637665,3.061468,-6.677391,7.805890,-9.338435,-6.278518,5.612529,-6.778644,5.663740,-4.478456,-4.325357,6.754492,-9.192113,-6.512163,1.806044,7.702003,-2.961008,3.352267,0.936353,-5.741800,-1.742090,-6.084995,-0.948261,5.746838,-4.932221,9.538662,-1.411465,1.785024,-6.019664,7.457407,1.373758,-5.861001,3.304551,0.550154,7.988780,5.792584,-8.688214,8.009785,-0.247722,-2.466644,-0.135491,9.408413,3.321430,-0.550602,-8.209144,0.415613,-8.166840,4.449530,0.963092,-4.441514,-5.914041,-2.932226,5.735454,8.121310,-6.629230,-1.965380,8.520392,4.548396,7.515225,-7.568651,-4.116398,9.719372,-3.632687,-8.478294,0.989549,-1.373018,-1.309344,-6.076103,-9.144642,-3.089919,-7.016179,-4.575662,-2.720582,-1.909316,5.715275,-8.556338,-5.021325,-2.744370,-5.855919,-0.726534,6.676359,-1.422181,0.305300,9.012376,-8.910043,-2.229576,1.709936,4.973581,-2.952913,1.846379,-9.840667,8.289196,1.662302,0.386693,8.653247,-5.423353,-7.723438,-7.699717,6.519307,-7.422070,2.126389,-1.054484,4.415161,4.390959,2.357729,0.425556,-7.858314,-9.052809,-7.901755,0.382905,9.871490,-7.487253,-5.185864,2.878514,-6.756683,-8.980845,-7.628001,-5.462223,-6.709934,-2.996615,-0.156568,8.488874,-7.145648,0.875128,-9.629662,-5.932279,-1.586735,6.076039,-3.835490,-4.974007,-9.070777,-9.764443,-0.030500,-5.816790,-9.576409,-4.075859,-9.846920,2.968581,-7.522837,2.671136,-9.906853,-4.012255,-5.332658,2.570593,8.358448,-9.908060,-9.048339,-0.542479,5.467142,5.015941,6.919559,1.545786,-5.179775,0.757990,7.628329,5.527391,-0.835137,-4.637084,3.090064,5.215268,1.310215,2.940752,9.188823,-4.306786,-4.750958,-3.995926,-0.878122,-8.177555,8.336856,6.539459,-5.258999,-1.058356,-0.309963,-2.480680,-3.712729,-2.686665,8.535433,-7.678959,-1.634896,1.003962,-9.928293,-7.457210,0.053010,0.131024,-0.548035,4.411686,6.700984,-6.081575,-9.416689,-8.289252,-8.663165,4.651591,-7.671033,-4.704410,-7.336837,2.718822,-4.651227,2.106725,-2.169657,-3.245285,3.218813,-2.992834,2.077242,3.384822,8.701583,-3.733724,-2.755088,7.664710,9.135777,3.933167,3.485904,3.220157,5.092795,-4.589208,2.774062,-1.149142,-5.536334,-9.037887,2.376596,-4.276728,4.889770,5.490107,-8.599524,-6.814414,-3.455235,6.793206,-2.114470,7.788281,-1.466739,-1.398180,-8.135700,-6.497999,7.182085,-7.062358,-6.980563,1.158464,-3.741651,-6.181286,9.876636,-8.069717,-0.507029,9.354345,-1.639106,-8.301977,-0.088901,8.664621,-4.662650,-1.903919,-1.999143,-2.144476,9.929869,-9.309658,-1.796589,-9.744872,7.823641,-2.988554,-6.917008,-9.004514,-5.908390,8.727737,6.578898,-1.679505,0.222648,7.960301,5.961380,-6.104994,4.067691,-1.972448,9.538235,9.782754,-2.229714,5.012112,-5.584332,7.343278,-6.146781,2.647295,6.696561,3.315333,-3.768561,-6.100959,7.905662,-8.383754,9.504704,-7.531464,8.837655,5.807238,2.117359,4.107666,0.432796,6.134185,7.187273,6.760167,-1.617232,1.276358,-7.487891,-0.774596,7.300630,-0.908483,-5.306112,6.099159,6.232359,6.162379,6.457020,-8.002138,2.014049,7.586014,-7.811367,-8.620795,0.312395,-6.147339,1.691157,6.270409,1.679283,-0.778943,9.491215,-8.697780,-9.511812,4.787040,-5.678225,-7.751947,2.758349,-7.467332,1.313911,-9.135002,6.627386,-3.169911,-8.464162,8.948974,8.022722,5.682761,2.187982,6.484643,9.870866,-1.729049,-7.123097,7.339964,-8.173547,-6.818857,-2.496020,-7.208780,2.851024,8.279443,4.302297,5.572253,-7.369874,1.753926,-2.380780,3.464472,0.078625,0.851227,0.138506,-6.904160,4.218302,4.966063,4.185481,7.751696,-4.225132,-3.037874,2.812996,-1.575689,-7.822754,4.361491,3.261910,-0.288343,-1.707484,-7.271880,9.391486,0.060460,4.055022,-4.305001,4.007863,0.998108,-3.382486,9.069619,-7.145061,0.961806,6.534706,2.919089,-5.221302,0.880944,-1.058985,-7.654694,-2.654472,-5.941175,-3.966383,9.552997,-1.127599,4.233588,-9.607525,-5.794479,-5.605114,-1.840535,-3.195511,-1.896280,4.795825,-4.022012,-0.818527,0.007319,-3.952733,-8.143065,5.364146,-3.626346,0.687262,-5.129571,-9.705810,-2.550788,0.435726,-6.620077,-2.149604,-6.504719,7.578150,6.530910,0.162336,-8.572130,-6.609268,-5.639575,-2.879690,4.609519,-5.573990,-3.989204,-8.824582,6.864751,6.301448,-7.943230,0.083375,6.989575,2.295091,-3.960439,-4.819244,-9.613133,4.262977,-5.436859,-7.764877,9.015572,8.914338,9.400891,-0.376464,6.342006,8.046588,-1.517933,-9.359638,4.908019,-9.001377,-9.951517,-5.841650,-9.897793,1.694774,-4.108912,-4.688901,-2.907538,8.716369,-5.745817,5.563919,5.625922,1.178461,6.686033,1.725940,6.704638,-3.276456,-2.121826,-2.301734,-6.838531,5.105262,2.762448,7.549793,-3.624806,-4.890934,-4.480470,-6.660973,-6.716738,0.705913,-5.536155,-4.811840,4.478056,0.756545,3.595122,-2.882324,-4.830561,-2.615336,9.602225,4.694197,-8.288701,-5.063999,1.224802,-3.435280,-2.152110,4.721874,2.447701,-8.412324,-5.832206,-8.414545,-0.204971,-7.597608,1.895848,-7.406206,-9.824592,-3.902457,3.906887,5.168675,7.830946,-6.542138,-7.567660,-1.081674,2.433749,-8.729075,7.469880,-5.086964,1.813782,-2.328238,9.197045,3.017662,-2.523052,7.239660,2.709911,7.117037,-3.857743,-4.187465,8.328496,-4.479697,-8.522624,7.738674,-2.882907,9.403583,-9.919285,-9.051800,-6.000911,0.407560,6.069716,4.382025,4.899348,7.586446,-2.964760,-4.192805,5.814700,2.849912,0.260237,2.249618,-3.033915,3.939473,-4.579384,-3.752788,-2.235325,4.827323,-3.928862,-3.979826,0.613193,-7.205035,2.690594,-4.601018,9.267754,-1.844042,-5.446695,-6.211744,-3.746626,5.586905,7.263865,-9.045260,0.674025,9.917935,-2.594459,6.397632,-6.380249,9.249017,2.441031,-5.250303,8.400032,8.601897,-8.665930,-6.353669,-1.165997,7.708225,-1.472411,1.754364,6.784090,0.242598,-2.827461,-5.465375,-0.820467,-8.744844,7.746817,4.794715,-5.116023,-7.429507,-4.869479,4.250578,-1.215045,3.081658,-0.094489,-3.978544,5.245940,8.479155,-5.115669,-2.222491,-0.901270,-9.037069,2.499927,-1.597785,2.254985,-1.689604,-6.327157,-3.721380,-0.950848,2.822563,-5.766674,4.666229,2.495218,6.679683,-6.676588,6.948651,-7.581541,-9.737257,9.771664,3.383775,1.559061,-0.819991,-1.530495,-1.006818,-7.263232,2.866886,1.445345,1.845254,-7.834978,-6.426564,-4.015281,2.079211,-8.320789,7.297881,-0.548287,-6.464354,-3.772240,3.729754,8.607172,-5.318694,5.768752,-1.206494,-1.996328,-6.501214,-7.869697,5.510361,-3.783175,0.062899,-9.422901,-3.417840,-3.476132,-5.692889,4.963274,9.425436,8.990784,1.531372,0.609396,2.224315,1.537409,-5.677434,-9.441770,-5.911879,-7.384214,1.320290,-0.737398,-6.833354,-7.297152,-0.135053,-7.348051,-4.793036,9.224838,1.321531,5.996209,-2.543465,-6.999269,-6.922881,-6.508957,1.748235,0.067404,1.989177,-5.948836,-6.468960,-2.048414,-6.047546,-6.933500,-2.139630,-6.766264,-2.771938,-6.621952,-8.359859,-3.146488,5.330039,-7.833857,0.122552,-7.275770,8.151922,-5.723933,8.124626,-6.402992,-3.325957,9.883105,-9.937333,-1.154411,7.959584,0.402308,9.950538,6.345491,-7.837464,2.923670,3.591274,-9.573422,-5.745199,-7.435839,8.409802,6.776684,9.659506,-4.118072,9.586991,-3.678578,9.790694,-5.327556,0.422945,-5.608217,0.178861,-2.112197,5.730378,-2.432551,1.980566,6.339049,0.794763,-6.436043,9.097460,9.919020,3.832096,-9.284580,0.679240,0.152972,-9.339240,5.187548,9.319042,-4.272067,-3.165379,-8.379007,0.092919,4.648916,4.042008,9.743427,-4.396904,2.066660,-9.933527,7.947561,-8.604532,7.247178,-7.008736,0.392099,-1.927281,-0.219435,-7.529407,-5.295507,-9.170042,-1.423490,-3.303048,2.474176,-7.950345,-8.608305,-1.254418,1.330184,2.878137,0.001933,7.214709,5.551186,-2.876923,-1.497817,7.425846,-8.633667,-9.830598,6.515578,-1.034868,-0.939972,9.691135,9.379352,-2.914263,-7.432280,6.766105,4.447611,-5.625964,-1.593598,-1.886926,0.457796,-0.926183,0.519781,4.029327,6.764668,3.226879,-3.536430,-4.497316,-1.763884,-2.133961,-5.973005,-4.200178,-8.644986,2.684470,4.245149,-7.973625,7.304815,-4.827928,5.433217,9.096416,7.296222,-4.042935,8.485090,-7.927056,9.660376,-3.926662,-3.324095,8.729603,-7.626003,-1.270321,-8.100885,-1.528256,5.448222,2.089385,-8.513632,9.638855,8.817621,-0.923966,-4.367266,0.117545,8.938322,-9.764896,-3.354482,0.045918,-5.883870,4.183799,-1.263899,-7.735135,-9.965862,-4.668787,-9.382470,2.900797,-7.652427,-3.064003,-5.705970,-8.354228,0.103303,9.416115,7.031936,-9.179432,-7.010102,-9.729449,-4.159131,-7.269853,-7.690021,0.796554,-1.747742,1.623807,-2.360771,-6.689602,4.977838,9.662968,6.069808,-2.997623,3.625899,-0.367772,-7.478968,-0.613950,6.326167,-7.265342,7.130091,-3.762575,-1.443345,-4.705035,6.825114,4.806880,-1.802701,1.833870,9.941738,-6.912898,4.169792,5.772626,8.481096,-2.765674,-3.384406,3.010054,-7.143953,-2.177193,9.948841,-0.925870,6.309164,9.199016,-7.399834,3.429098,-7.952458,-2.347292,-4.654948,-0.127951,1.018568,-2.686024,3.505248,2.921631,0.058051,-9.692664,3.839846,3.694518,-7.584010,-1.978107,2.185681,-4.653507,3.963183,1.666851,-5.193605,5.155689,-6.432491,-9.447207,8.879961,-0.095779,3.944885,9.166891,0.934704,9.353508,1.410508,-9.611204,6.035827,2.950345,3.395030,-0.745570,-5.172225,6.419052,2.493394,-0.347599,1.001121,2.649811,3.560703,5.856313,5.451631,-9.765991,-1.292087,8.636427,9.242057,-9.990053,-5.788085,5.516935,6.048794,8.410007,-3.117426,3.309357,-5.244024,-0.697918,-0.201467,-4.052253,-0.383320,-5.612453,0.466724,-3.803431,-5.011897,7.226631,8.314110,7.935910,3.280248,2.246119,-7.676305,-6.698428,7.714255,-5.310182,-2.955644,9.212202,7.764205,-7.917447,8.882380,-3.388857,8.964802,-6.161408,-6.611247,7.273561,4.474455,9.704302,-3.438682,-8.214854,-7.133303,5.403109,-8.786251,4.618693,-4.274209,-3.290640,-4.936493,-2.585933,5.149222,-0.394006,-1.624286,6.417688,-0.930104,-0.822198,-9.089666,-3.307488,5.364343,-8.743235,-9.030807,-5.913715,7.655817,-9.181436,2.195676,8.764932,-9.872590,-0.857303,-9.120564,-4.204486,-1.359366,2.537351,1.284481,5.954608,7.964667,-4.959727,9.404778,-7.221122,-6.897222,-1.783696,9.284204,-4.869079,4.374907,4.890311,-0.320077,-2.216329,-1.949249,-4.901056,3.549526,-0.777479,8.128747,-0.169111,1.887610,2.098549,8.716705,1.073522,5.668691,-4.152231,-5.749980,-6.809284,4.745647,4.446151,-3.778168,-0.667956,3.468625,-9.544035,2.218946,3.091422,-0.579885,-6.727399,-6.835473,-4.846479,5.298799,-6.919750,-2.150269,5.848990,8.305826,9.421495,-4.954627,4.720373,1.603063,-2.909905,-1.503784,6.911401,-2.860945,8.555459,-7.510639,-7.595896,-9.463720,3.215899,-5.952536,8.487986,-8.554863,8.899381,-2.124366,-9.484933,9.797375,-8.756641,0.362387,-6.976983,-2.567058,-3.869783,6.328266,-1.015934,-0.241287,5.990008,-4.156339,-7.089720,9.541808,4.960361,9.071147,6.514222,-9.688682,-1.828123,-0.899718,6.980028,-8.966938,6.637585,2.876709,-9.121978,6.327328,-0.954709,-7.464047,-6.723348,-5.607151,3.713120,-7.025756,-8.418441,-2.156838,-9.325738,2.854415,6.100254,7.258589,-4.012313,6.034304,-0.250787,-4.576508,-2.981529,-3.365729,-7.430771,7.227654,-5.723911,6.174345,-4.534070,2.902514,-9.862853,2.806670,4.840855,-9.317016,7.980006,-0.191355,-0.673842,-9.638783,2.155618,-6.855524,2.249963,4.715312,8.458597,2.527325,-8.614636,-1.687173,7.676618,9.937495,-6.286213,-8.382187,7.375124,-6.266754,0.384856,-6.129366,4.258310,0.533480,-5.356711,-1.186388,1.571079,-0.013335,-3.725473,-0.480277,-3.429714,-8.668394,7.045811,-2.228203,9.352794,-2.846391,7.394004,8.962783,3.509721,9.632607,3.569809,2.510990,0.288551,0.246354,-2.379029,-8.864601,7.186474,-6.593895,4.500265,5.226173,4.596872,-7.266626,-4.821522,0.414239,-0.144077,-9.601905,-3.796795,-5.113489,0.449830,6.978666,2.486900,-5.929477,5.474564,3.121400,6.441681,8.563394,-3.499591,6.224308,-1.993565,7.417272,1.001755,-4.358311,3.058146,-8.516103,-6.000727,0.510598,6.725347,-3.893230,-8.228076,2.798810,-8.911673,-6.609360,-9.428509,-4.849008,-4.051292,9.607149,5.865780,2.116259,-6.966313,8.675481,1.222295,-9.694784,-5.373107,2.991418,-8.896297,-4.389777,-8.113556,-3.418009,-9.065028,5.466488,-6.333075,-4.007696,-6.703494,-9.840186,5.314020,-3.767772,-2.151052,2.275646,8.905980,7.957200,-6.413201,6.254593,-8.310755,8.924546,-7.106043,1.418351,-7.995152,-9.685933,3.734572,3.679776,-2.312158,-0.487930,1.117220,0.401047,-1.815127,-3.531536,-2.079660,5.839114,3.604277,0.394831,8.336844,-7.003954,-7.717016,6.101051,-6.448689,1.801702,-7.379936,2.339144,4.709632,-1.897278,-6.296763,-8.033807,-8.499056,8.785780,1.671837,3.671520,-6.921969,-1.163058,-2.684096,-4.827824,-0.322329,8.936934,4.198874,-9.207532,6.705929,9.194715,-3.662345,-6.352358,5.516476,-1.224857,-1.931070,-8.085244,-9.071778,-3.536451,-4.510429,7.790001,-5.358821,2.812303,6.422075,-1.613133,-6.280971,-2.183084,-1.872731,-2.239103,6.466034,-0.976608,-3.439714,-1.728962,0.130229,-1.159879,6.632226,-4.482127,-7.413388,-7.540079,-0.599899,2.530295,-8.235013,5.442363,-6.008783,-6.680137,-4.414880,-9.625274,8.211210,0.239622,5.721055,-0.697526,2.955158,-7.690023,-8.385947,-1.396408,0.503540,-4.866489,0.399525,-9.207620,8.844172,4.423994,6.324242,-1.620918,-5.965201,5.865923,3.904041,8.833048,8.621928,1.040148,-2.359885,-7.914066,4.209936,6.933162,-6.082955,-9.118248,-7.444643,4.461644,8.692775,7.974804,-1.670113,7.140860,-0.709078,-0.994582,-4.437312,-0.229893,0.422153,6.418861,6.642284,-7.700614,-6.851775,2.219101,-0.072128,3.614994,-9.899276,-7.041357,9.005277,4.068271,-9.468377,6.782466,5.298986,7.258865,-0.904675,0.472587,1.835194,7.102421,-9.262129,-5.337898,-0.223557,6.184154,-2.241648,6.976689,2.363499,-8.894573,-2.171557,3.506229,3.463746,6.459036,3.850632,8.423944,-4.674700,-8.545823,7.172688,5.880800,-3.251282,-2.018027,-1.722021,3.305668,-6.672245,8.537512,4.572800,-5.227125,0.719058,4.753341,-9.789294,1.018506,6.534249,-0.453116,7.575051,-0.958947,-8.046842,-8.904506,-8.365274,-7.285511,7.953342,-2.415502,-3.808502,5.000756,-1.828471,-6.726374,8.225543,4.747165,-8.483130,4.601514,9.245007,3.304451,3.830716,1.647395,7.982186,-6.417344,0.308404,-8.529956,-6.569403,-0.591268,-8.295128,7.957209,-0.815916,-0.172755,-8.821585,-7.039535,-4.604105,5.373380,-0.332609,7.913662,5.668599,-6.592906,-8.513567,-2.807396,5.403687,9.722523,-8.634195,0.704424,8.936236,6.325801,-4.134158,-8.428184,1.130557,-0.266915,-9.165330,-8.948802,3.104263,-3.126699,1.945133,-1.075748,7.153225,-6.096624,4.267929,9.848332,5.856783,-2.212662,-4.848274,-2.713737,5.828055,9.689290,3.120278,0.638751,4.510825,-7.208198,-2.652318,4.242718,8.219735,5.803604,9.945792,2.062340,6.287935,-3.897593,-6.529801,-7.312416,9.003601,1.563390,2.348431,-3.207780,7.703943,1.923233,8.142906,1.428830,-1.190063,2.466040,0.266419,-4.222174,8.595456,5.397840,-1.007277,4.185512,3.644452,-4.774273,4.673152,3.626906,6.292245,-1.861633,2.704349,1.795761,9.812965,-4.417709,-6.155922,7.877790,9.494778,6.993782,-1.204520,-8.324053,-0.088238,-8.827237,6.014071,-5.945100,-4.396256,1.161613,-1.674813,8.111200,-2.744409,0.588744,1.388738,-8.044281,4.037970,-2.769584,-5.251030,7.049892,3.799127,-6.606908,-3.580506,2.994111,1.917375,-5.905602,-1.985511,2.936007,4.788330,3.146250,-5.987860,-6.833060,9.598697,6.921993,3.558069,-7.215963,2.599922,8.295346,4.203014,-4.932503,8.376865,5.582189,6.317045,-0.083134,9.578064,7.841949,7.061353,2.332582,-4.205120,-1.405945,9.724479,-4.101619,4.711067,-4.209200,-6.882872,-7.067324,-2.173355,4.776959,-2.620264,-0.505388,1.438247,6.434131,8.558285,-4.954796,-0.574935,2.840070,2.689969,-6.989271,0.410748,-1.264752,4.343867,-7.359865,-6.232543,4.430139,5.145028,-6.361109,2.565909,-3.295636,-7.282112,-4.249995,0.243432,-3.217224,2.703350,-7.452764,-3.203201,2.638555,3.054096,0.797903,9.908663,-6.514466,-6.345227,-7.473042,6.825228,6.727906,2.335018,-0.417721,5.404492,5.266189,1.713226,-7.229461,-9.647502,5.813434,9.569860,0.259731,-9.253150,6.779085,-7.904590,-8.706672,-5.523504,4.170669,-2.436765,5.932768,0.454397,-7.000796,-7.350604,-1.047880,-8.980410,-1.497982,-9.349958,6.932381,8.106143,3.124355,-8.082943,1.136354,3.413904,-1.186122,-4.170469,-8.591185,-6.994237,-6.307524,1.838525,-0.950982,0.506342,9.798794,-1.980192,-9.553139,5.571471,-2.045580,6.213930,5.148890,-4.943817,-1.621733,9.428254,-7.737953,-3.511337,-5.222117,2.504187,0.681542,4.441340,-1.977117,2.269380,9.900964,5.655109,-9.650271,-9.284021,3.824450,8.892886,3.261354,-7.490632,8.908215,9.149397,-3.629510,-9.198005,7.263243,-1.241577,8.884185,-7.238657,3.345552,-2.355980,-5.636626,2.645744,-1.600027,-1.527623,3.914271,6.811613,2.610592,-9.270472,-4.962517,8.128454,-2.182065,6.742002,-3.516030,-2.370897,2.811224,6.268454,8.045695,-3.778794,-1.137208,-7.657039,8.529614,-0.903213,-7.103672,3.744930,6.294107,-3.073692,-2.334028,8.017329,4.380205,-0.978809,7.979131,-3.982858,-0.041156,-2.380739,5.832587,-8.825046,-0.881810,7.502853,0.959107,1.686502,-2.671379,-3.362113,-7.055537,9.422549,-3.402923,-9.783635,5.147700,-7.164858,2.437634,-4.228592,2.344809,-9.269086,2.326956,-4.035456,-3.454832,5.354216,2.745188,1.880084,-7.838160,9.748200,1.173801,-3.033220,5.262003,-5.867355,0.522944,3.009229,-7.251789,-5.511330,-0.695663,-2.517166,5.749213,7.750805,-3.068324,-3.840447,1.760340,9.005666,4.729892,7.082900,-0.256900,-8.577458,2.356902,7.974744,6.495934,3.715885,-8.686689,-6.222666,-4.549252,0.539442,-9.499508,1.070135,7.149467,-6.982860,-7.267242,7.192737,-7.664730,-5.349575,-7.960963,2.778609,6.317388,1.227097,-0.542397,9.723261,3.427256,7.799641,-9.552230,2.225005,8.676724,8.638511,0.296972,5.458121,-4.255081,8.774809,6.057619,-3.998453,-6.667522,-0.094602,5.701440,8.653920,-0.411149,-8.911338,8.313562,4.637898,-1.531437,-9.028298,4.270105,5.936083,5.982051,-8.846820,0.204550,0.185472,-6.893696,-9.259933,-3.889365,-4.880681,9.164264,6.579260,-4.219061,4.331696,1.219102,3.961604,1.228225,-1.518308,2.170456,3.333561,2.900520,-7.432805,2.812720,9.204360,-0.971897,-3.296302,6.588428,-6.041949,-0.794185,-1.191105,7.202462,3.949335,-5.771463,8.449574,-1.029712,-6.283823,-3.588119,-7.758286,2.889975,0.309284,2.574846,3.502912,4.945264,6.101403,-9.811154,-2.005784,4.041942,-5.777357,6.926836,9.116805,0.579253,-4.257576,8.513661,5.312364,-1.098973,-8.189897,-0.582384,-8.272671,-0.182625,-3.836581,2.149123,-8.657211,-0.907953,-1.210493,1.927082,9.561794,3.564570,-4.517961,-3.307750,-2.766469,-2.805103,1.355279,-4.118206,-5.991680,1.599741,8.613449,6.106553,6.633757,0.165942,-7.424594,7.459559,2.137794,2.819754,2.286651,8.852914,-8.563006,0.245657,-0.761272,-2.764300,-8.028930,0.318820,-4.331075,7.125320,-5.544274,-0.925027,8.969514,4.240087,-5.450654,-9.482195,-2.660488,8.260648,6.055931,-8.689073,3.349416,0.436766,-8.990581,7.793960,1.873949,-1.819533,4.570924,-6.539133,0.028428,7.425123,-7.170837,3.538074,9.405384,-7.624200,3.687559,0.786946,3.784552,-5.618532,8.873296,-2.244666,2.658601,7.987032,7.985958,5.140775,9.592297,8.364995,6.930942,-3.641781,7.274770,2.892324,-2.932606,1.231089,0.178224,2.521689,-1.644272,-0.393029,0.383768,-7.881306,9.352462,0.200237,6.125397], dtype = "float32")#candidate|9067|(2352,)|const|float32
call_9064 = relay.TupleGetItem(func_1335_call(relay.reshape(var_9065.astype('uint32'), [11, 7]), relay.reshape(const_9066.astype('uint32'), [1078, 1]), relay.reshape(const_9067.astype('float32'), [4, 588]), ), 2)
call_9068 = relay.TupleGetItem(func_1340_call(relay.reshape(var_9065.astype('uint32'), [11, 7]), relay.reshape(const_9066.astype('uint32'), [1078, 1]), relay.reshape(const_9067.astype('float32'), [4, 588]), ), 2)
func_8052_call = mod.get_global_var('func_8052')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_9078 = relay.TupleGetItem(func_8052_call(), 0)
call_9079 = relay.TupleGetItem(func_8053_call(), 0)
func_7534_call = mod.get_global_var('func_7534')
func_7537_call = mutated_mod.get_global_var('func_7537')
call_9085 = relay.TupleGetItem(func_7534_call(relay.reshape(const_9066.astype('uint32'), [1078,])), 3)
call_9086 = relay.TupleGetItem(func_7537_call(relay.reshape(const_9066.astype('uint32'), [1078,])), 3)
output = relay.Tuple([call_9055,call_9064,var_9065,const_9066,const_9067,call_9078,call_9085,])
output2 = relay.Tuple([call_9056,call_9068,var_9065,const_9066,const_9067,call_9079,call_9086,])
func_9088 = relay.Function([var_9065,], output)
mod['func_9088'] = func_9088
mod = relay.transform.InferType()(mod)
mutated_mod['func_9088'] = func_9088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9089 = relay.var("var_9089", dtype = "uint32", shape = (77,))#candidate|9089|(77,)|var|uint32
func_9088_call = mutated_mod.get_global_var('func_9088')
call_9090 = func_9088_call(var_9089)
output = call_9090
func_9091 = relay.Function([var_9089], output)
mutated_mod['func_9091'] = func_9091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7278_call = mod.get_global_var('func_7278')
func_7279_call = mutated_mod.get_global_var('func_7279')
call_9096 = relay.TupleGetItem(func_7278_call(), 0)
call_9097 = relay.TupleGetItem(func_7279_call(), 0)
output = relay.Tuple([call_9096,])
output2 = relay.Tuple([call_9097,])
func_9099 = relay.Function([], output)
mod['func_9099'] = func_9099
mod = relay.transform.InferType()(mod)
output = func_9099()
func_9100 = relay.Function([], output)
mutated_mod['func_9100'] = func_9100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8121_call = mod.get_global_var('func_8121')
func_8122_call = mutated_mod.get_global_var('func_8122')
call_9111 = relay.TupleGetItem(func_8121_call(), 0)
call_9112 = relay.TupleGetItem(func_8122_call(), 0)
func_7191_call = mod.get_global_var('func_7191')
func_7192_call = mutated_mod.get_global_var('func_7192')
call_9126 = relay.TupleGetItem(func_7191_call(), 0)
call_9127 = relay.TupleGetItem(func_7192_call(), 0)
output = relay.Tuple([call_9111,call_9126,])
output2 = relay.Tuple([call_9112,call_9127,])
func_9128 = relay.Function([], output)
mod['func_9128'] = func_9128
mod = relay.transform.InferType()(mod)
mutated_mod['func_9128'] = func_9128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9128_call = mutated_mod.get_global_var('func_9128')
call_9129 = func_9128_call()
output = call_9129
func_9130 = relay.Function([], output)
mutated_mod['func_9130'] = func_9130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7605_call = mod.get_global_var('func_7605')
func_7606_call = mutated_mod.get_global_var('func_7606')
call_9195 = relay.TupleGetItem(func_7605_call(), 0)
call_9196 = relay.TupleGetItem(func_7606_call(), 0)
output = call_9195
output2 = call_9196
func_9199 = relay.Function([], output)
mod['func_9199'] = func_9199
mod = relay.transform.InferType()(mod)
mutated_mod['func_9199'] = func_9199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9199_call = mutated_mod.get_global_var('func_9199')
call_9200 = func_9199_call()
output = call_9200
func_9201 = relay.Function([], output)
mutated_mod['func_9201'] = func_9201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9128_call = mod.get_global_var('func_9128')
func_9130_call = mutated_mod.get_global_var('func_9130')
call_9295 = relay.TupleGetItem(func_9128_call(), 1)
call_9296 = relay.TupleGetItem(func_9130_call(), 1)
output = call_9295
output2 = call_9296
func_9299 = relay.Function([], output)
mod['func_9299'] = func_9299
mod = relay.transform.InferType()(mod)
mutated_mod['func_9299'] = func_9299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9299_call = mutated_mod.get_global_var('func_9299')
call_9300 = func_9299_call()
output = call_9300
func_9301 = relay.Function([], output)
mutated_mod['func_9301'] = func_9301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8090_call = mod.get_global_var('func_8090')
func_8092_call = mutated_mod.get_global_var('func_8092')
call_9350 = func_8090_call()
call_9351 = func_8090_call()
func_7923_call = mod.get_global_var('func_7923')
func_7927_call = mutated_mod.get_global_var('func_7927')
var_9358 = relay.var("var_9358", dtype = "float32", shape = (2352,))#candidate|9358|(2352,)|var|float32
var_9359 = relay.var("var_9359", dtype = "int8", shape = (1, 210))#candidate|9359|(1, 210)|var|int8
const_9360 = relay.const([[2,8,7,-9,10,-4,-6,-9,-9,7,-7,-10,2,-9,6,5,5,-10,-7,-9,-8,-5,3,9,4,-1,6,5,3,-10,7,-9,-9,7,7,-10,-1,1,2,4,-7,6,-8,9,2,2,-3,2,-9,7,-4,-3,5,-7,-4,-2,9,2,6,9,-3,9,-2,-9,1,7,6,-10,-3,-7,-1,-8,6,6,-5,3,-5]], dtype = "uint32")#candidate|9360|(1, 77)|const|uint32
call_9357 = relay.TupleGetItem(func_7923_call(relay.reshape(var_9358.astype('float32'), [2352,]), relay.reshape(var_9359.astype('int8'), [210,]), relay.reshape(const_9360.astype('uint32'), [11, 7]), ), 8)
call_9361 = relay.TupleGetItem(func_7927_call(relay.reshape(var_9358.astype('float32'), [2352,]), relay.reshape(var_9359.astype('int8'), [210,]), relay.reshape(const_9360.astype('uint32'), [11, 7]), ), 8)
func_7450_call = mod.get_global_var('func_7450')
func_7453_call = mutated_mod.get_global_var('func_7453')
var_9363 = relay.var("var_9363", dtype = "float32", shape = (450,))#candidate|9363|(450,)|var|float32
call_9362 = relay.TupleGetItem(func_7450_call(relay.reshape(call_9350.astype('int64'), [5, 3, 9]), relay.reshape(var_9363.astype('float32'), [150, 3]), ), 2)
call_9364 = relay.TupleGetItem(func_7453_call(relay.reshape(call_9350.astype('int64'), [5, 3, 9]), relay.reshape(var_9363.astype('float32'), [150, 3]), ), 2)
func_8052_call = mod.get_global_var('func_8052')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_9367 = relay.TupleGetItem(func_8052_call(), 0)
call_9368 = relay.TupleGetItem(func_8053_call(), 0)
const_9369 = relay.const([[-1,-4],[8,7],[6,7],[-8,10],[3,-4],[-7,-4],[-8,-8],[-6,10],[-5,2],[-2,9],[10,-4],[2,8],[2,-6],[8,-1],[-8,-7],[-1,-2],[9,-2],[-10,1],[-4,-8],[-10,2],[10,-10],[-9,5],[9,-2],[8,7],[-7,-10],[-9,-8],[-7,1],[-3,-1],[4,9],[2,1],[-5,2],[-6,-1],[-9,9],[-2,-2],[3,8],[10,-9],[9,-6],[-4,-2],[9,-2],[-4,-9],[4,2],[-6,6],[-10,5],[2,-4],[2,5],[8,-4],[-3,3],[7,-10],[-9,6],[-9,-5],[7,-10],[-2,3],[4,-1],[-5,-7],[-9,-6],[4,7],[10,-9],[8,-9],[3,-5],[2,10],[-5,-6],[6,-9],[-6,1],[-2,-3],[2,3],[-7,-4],[-10,5],[6,-7],[8,1],[9,-9],[6,-6],[8,3],[3,-1],[-8,1],[3,-9],[-5,10],[-2,-7],[3,-7],[-6,9],[2,6],[-10,8],[-10,-6],[-4,4],[3,-3],[6,-5],[8,10],[-5,-9],[-5,-6],[10,2],[10,-6],[5,6],[-3,3],[2,10],[2,-5],[-3,7],[9,-2],[5,2],[-2,-4],[6,4],[-10,3],[-7,-4],[-5,7],[5,-5],[-5,-5],[2,10],[4,10],[-3,-1],[1,6],[9,6],[-9,3],[7,10],[6,4],[3,-2],[7,8],[6,4],[-3,5],[10,-7],[6,-5],[-7,-5],[-10,-3],[-5,9],[6,-2],[5,10],[-4,-2],[-8,-5],[9,5],[5,-1],[1,6],[-8,7],[-10,-6],[5,-7],[-1,-5],[-9,1],[-10,-6],[-10,-8],[2,8],[8,-3],[4,-5],[5,10],[-10,5],[3,7],[-4,-6],[1,-5],[7,2],[1,-6],[-7,6],[1,-8],[-8,10],[10,-5],[-2,9],[7,6],[-9,1],[-8,-5],[-8,-6],[6,9],[8,-7],[1,-1],[5,6],[-5,-7],[-3,-6],[-5,-5],[-1,-1],[-7,-3],[4,-1],[2,-5],[3,-10],[-6,-5],[-7,-9],[2,-5],[-6,-2],[-1,-8],[-6,9],[3,6],[7,-8],[-5,1],[6,4],[5,2],[10,-6],[10,-5],[7,6],[-7,-7],[10,-5],[-8,7],[-6,1],[2,5],[-9,2],[-7,8],[8,3],[6,-10],[-7,9],[3,1],[-7,-3],[8,-3],[-10,-8],[2,10],[-2,7],[-5,2],[4,-7],[-9,8],[-3,-7],[8,-7],[4,5],[5,-8],[-2,-3],[-4,1],[8,4],[-8,-3],[3,1],[-9,10],[-6,-9],[-4,-8],[-4,5],[7,7],[-6,3],[3,-5],[6,-10],[6,8],[8,-5],[-8,1],[3,1],[4,5],[9,5],[4,10],[8,6],[-9,6],[-6,10],[-1,6],[-8,5],[-5,1],[-8,7],[8,3],[7,-10],[6,6],[4,-3],[-8,2],[-8,-8],[-7,6],[-5,7],[-2,9],[-10,6],[4,7],[7,-6],[1,-10],[5,1],[-5,5],[-1,7],[-3,-1],[-7,10],[-8,-1],[8,-9],[-5,5],[7,2],[-4,3],[-1,7],[9,10],[6,7],[-8,-10],[-6,-3],[-9,3],[-6,-7],[-3,-6],[-3,10],[-2,5],[-10,-3],[-1,-5],[3,9],[8,-6],[-6,7],[-3,2],[5,-7],[-2,-6],[-7,1],[1,6],[-3,5],[-7,-8],[-6,-2],[7,7],[8,8],[6,-4],[-2,-2],[2,8],[-7,9],[-6,8],[-3,2],[-6,1],[-3,-6],[2,4],[7,-10],[8,-4],[-10,8],[1,9],[8,-1],[10,-10],[10,2],[8,-7],[-3,-3],[4,-7],[-10,2],[3,-3],[-3,-7],[8,-6],[5,-10],[5,7],[-6,-1],[10,7],[-5,1],[-2,-8],[3,-10],[3,7],[5,1],[9,-9],[10,7],[10,-10],[-5,-10],[7,4],[3,1],[1,4],[-7,5],[4,-1],[4,6],[2,-8],[9,3],[-5,-8],[-4,-2],[6,10],[-10,-9],[9,-3],[-6,8],[5,6],[-1,1],[-8,4],[-9,7],[-4,-9],[2,-3],[6,5],[-4,-1],[-6,-4],[5,-4],[-6,7],[9,-1],[10,9],[7,-4],[-7,6],[-9,-10],[-3,-3],[2,3],[8,-5],[5,9],[-7,-9],[2,7],[2,1],[-8,8],[7,-2],[-1,-9],[7,5],[10,-9],[-2,-1],[-2,4],[-10,7],[7,-3],[-9,3],[2,-10],[-6,2],[8,-2],[10,7],[-2,9],[-7,3],[-4,-10],[1,-4],[5,-1],[10,6],[-5,-10],[-4,8],[-1,9],[3,-4],[8,1],[-7,-2],[10,1],[7,10],[6,6],[1,7],[2,10],[9,2],[9,-9],[-10,-9],[4,-10],[9,-2],[2,-6],[-3,2],[8,1],[-7,-7],[8,-3],[4,-9],[-1,-9],[1,-7],[1,-5],[-6,-10],[-1,6],[-5,6],[-6,10],[-10,10],[7,4],[-3,2],[-6,-10],[6,-9],[-2,6],[-7,-9],[-1,4],[-7,3],[-6,-4],[7,2],[-3,-6],[-4,-7],[-1,2],[-7,-10],[1,10],[-8,3],[-1,2],[-3,3],[-9,-6],[-5,9],[-5,-3],[-3,3],[-7,-1],[-5,9],[-3,5],[-7,3],[-7,-9],[9,-8],[9,9],[6,-6],[-4,-10],[-3,-6],[-9,-2],[7,-2],[-2,7],[-1,10],[-10,-1],[-10,1],[-6,-4],[9,-3],[10,9],[-1,-4],[-4,-6],[9,4],[-4,6],[-4,9],[-8,-8],[4,-9],[9,4],[9,-2],[-2,-7],[-6,-10],[5,-6],[3,-10],[-2,-1],[-4,-3],[-10,-4],[6,1],[6,-10],[-8,3],[-6,-4],[-8,-3],[-5,-7],[7,-1],[-6,6],[-10,-1],[-7,-1],[1,10],[-4,-8],[9,1],[6,-2],[-7,-7],[-9,-4],[-2,-7],[5,-3],[3,4],[8,-10],[-1,-2],[8,-7],[-8,-7],[-9,-7],[-7,7],[-2,8],[4,3],[-2,-10],[3,-10],[-5,-7],[5,-1],[6,-3],[-2,-2],[-3,-2],[-2,8],[9,1],[-9,6],[-9,-8],[-6,9],[8,-2],[4,-7],[-6,-1],[-5,6],[-6,-7],[-7,-8],[3,-3],[6,-2],[1,7],[1,2],[2,-8],[4,-10],[-1,5],[7,4],[-1,2],[6,4],[-9,5],[-4,7],[-10,-4],[9,5],[2,-7],[5,-10],[8,-6],[7,6],[-2,7],[-7,3],[-9,2],[-10,7],[-6,10],[6,8],[5,10],[3,-9],[6,2],[-10,1],[-9,-9],[-9,-2],[3,-4],[3,4],[-5,9],[10,-4],[3,10],[-10,-3]], dtype = "uint32")#candidate|9369|(539, 2)|const|uint32
bop_9370 = relay.not_equal(call_9357.astype('bool'), relay.reshape(const_9369.astype('bool'), relay.shape_of(call_9357))) # shape=(539, 2)
bop_9373 = relay.not_equal(call_9361.astype('bool'), relay.reshape(const_9369.astype('bool'), relay.shape_of(call_9361))) # shape=(539, 2)
output = relay.Tuple([call_9350,var_9358,var_9359,const_9360,call_9362,var_9363,call_9367,bop_9370,])
output2 = relay.Tuple([call_9351,var_9358,var_9359,const_9360,call_9364,var_9363,call_9368,bop_9373,])
func_9381 = relay.Function([var_9358,var_9359,var_9363,], output)
mod['func_9381'] = func_9381
mod = relay.transform.InferType()(mod)
var_9382 = relay.var("var_9382", dtype = "float32", shape = (2352,))#candidate|9382|(2352,)|var|float32
var_9383 = relay.var("var_9383", dtype = "int8", shape = (1, 210))#candidate|9383|(1, 210)|var|int8
var_9384 = relay.var("var_9384", dtype = "float32", shape = (450,))#candidate|9384|(450,)|var|float32
output = func_9381(var_9382,var_9383,var_9384,)
func_9385 = relay.Function([var_9382,var_9383,var_9384,], output)
mutated_mod['func_9385'] = func_9385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7278_call = mod.get_global_var('func_7278')
func_7279_call = mutated_mod.get_global_var('func_7279')
call_9468 = relay.TupleGetItem(func_7278_call(), 0)
call_9469 = relay.TupleGetItem(func_7279_call(), 0)
uop_9470 = relay.log10(call_9468.astype('float64')) # shape=(5, 3, 9)
uop_9472 = relay.log10(call_9469.astype('float64')) # shape=(5, 3, 9)
output = relay.Tuple([uop_9470,])
output2 = relay.Tuple([uop_9472,])
func_9479 = relay.Function([], output)
mod['func_9479'] = func_9479
mod = relay.transform.InferType()(mod)
output = func_9479()
func_9480 = relay.Function([], output)
mutated_mod['func_9480'] = func_9480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8244_call = mod.get_global_var('func_8244')
func_8245_call = mutated_mod.get_global_var('func_8245')
call_9510 = func_8244_call()
call_9511 = func_8244_call()
output = relay.Tuple([call_9510,])
output2 = relay.Tuple([call_9511,])
func_9512 = relay.Function([], output)
mod['func_9512'] = func_9512
mod = relay.transform.InferType()(mod)
output = func_9512()
func_9513 = relay.Function([], output)
mutated_mod['func_9513'] = func_9513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8052_call = mod.get_global_var('func_8052')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_9591 = relay.TupleGetItem(func_8052_call(), 0)
call_9592 = relay.TupleGetItem(func_8053_call(), 0)
output = relay.Tuple([call_9591,])
output2 = relay.Tuple([call_9592,])
func_9617 = relay.Function([], output)
mod['func_9617'] = func_9617
mod = relay.transform.InferType()(mod)
output = func_9617()
func_9618 = relay.Function([], output)
mutated_mod['func_9618'] = func_9618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7605_call = mod.get_global_var('func_7605')
func_7606_call = mutated_mod.get_global_var('func_7606')
call_9631 = relay.TupleGetItem(func_7605_call(), 0)
call_9632 = relay.TupleGetItem(func_7606_call(), 0)
output = relay.Tuple([call_9631,])
output2 = relay.Tuple([call_9632,])
func_9634 = relay.Function([], output)
mod['func_9634'] = func_9634
mod = relay.transform.InferType()(mod)
mutated_mod['func_9634'] = func_9634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9634_call = mutated_mod.get_global_var('func_9634')
call_9635 = func_9634_call()
output = call_9635
func_9636 = relay.Function([], output)
mutated_mod['func_9636'] = func_9636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8090_call = mod.get_global_var('func_8090')
func_8092_call = mutated_mod.get_global_var('func_8092')
call_9682 = func_8090_call()
call_9683 = func_8090_call()
output = relay.Tuple([call_9682,])
output2 = relay.Tuple([call_9683,])
func_9685 = relay.Function([], output)
mod['func_9685'] = func_9685
mod = relay.transform.InferType()(mod)
output = func_9685()
func_9686 = relay.Function([], output)
mutated_mod['func_9686'] = func_9686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8090_call = mod.get_global_var('func_8090')
func_8092_call = mutated_mod.get_global_var('func_8092')
call_9773 = func_8090_call()
call_9774 = func_8090_call()
func_9099_call = mod.get_global_var('func_9099')
func_9100_call = mutated_mod.get_global_var('func_9100')
call_9777 = relay.TupleGetItem(func_9099_call(), 0)
call_9778 = relay.TupleGetItem(func_9100_call(), 0)
func_7424_call = mod.get_global_var('func_7424')
func_7427_call = mutated_mod.get_global_var('func_7427')
const_9783 = relay.const([-6,-3,-2,9,7,-1,3,-1,1,-9,-10,-7,-3,3,9,-8,-3,-1,-3,-4,-8,-5,10,-9,-6,4,-7,8,-5,6,1,7,4,10,2,-8,-6,-1,-1,-7,-9,6,-3,9,-7,2,-6,-1,-8,-8,2,-1,10,-7,2,-9,5,10,10,-8,4,-5,10,1,-7,-8,-6,9,1,-1,8,-6,5,-10,5,4,-7], dtype = "uint32")#candidate|9783|(77,)|const|uint32
var_9784 = relay.var("var_9784", dtype = "uint32", shape = (1, 1078))#candidate|9784|(1, 1078)|var|uint32
call_9782 = relay.TupleGetItem(func_7424_call(relay.reshape(const_9783.astype('uint32'), [77, 1]), relay.reshape(var_9784.astype('uint32'), [7, 154]), ), 3)
call_9785 = relay.TupleGetItem(func_7427_call(relay.reshape(const_9783.astype('uint32'), [77, 1]), relay.reshape(var_9784.astype('uint32'), [7, 154]), ), 3)
output = relay.Tuple([call_9773,call_9777,call_9782,const_9783,var_9784,])
output2 = relay.Tuple([call_9774,call_9778,call_9785,const_9783,var_9784,])
func_9803 = relay.Function([var_9784,], output)
mod['func_9803'] = func_9803
mod = relay.transform.InferType()(mod)
var_9804 = relay.var("var_9804", dtype = "uint32", shape = (1, 1078))#candidate|9804|(1, 1078)|var|uint32
output = func_9803(var_9804)
func_9805 = relay.Function([var_9804], output)
mutated_mod['func_9805'] = func_9805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8121_call = mod.get_global_var('func_8121')
func_8122_call = mutated_mod.get_global_var('func_8122')
call_9826 = relay.TupleGetItem(func_8121_call(), 0)
call_9827 = relay.TupleGetItem(func_8122_call(), 0)
output = relay.Tuple([call_9826,])
output2 = relay.Tuple([call_9827,])
func_9828 = relay.Function([], output)
mod['func_9828'] = func_9828
mod = relay.transform.InferType()(mod)
mutated_mod['func_9828'] = func_9828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9828_call = mutated_mod.get_global_var('func_9828')
call_9829 = func_9828_call()
output = call_9829
func_9830 = relay.Function([], output)
mutated_mod['func_9830'] = func_9830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9512_call = mod.get_global_var('func_9512')
func_9513_call = mutated_mod.get_global_var('func_9513')
call_9845 = relay.TupleGetItem(func_9512_call(), 0)
call_9846 = relay.TupleGetItem(func_9513_call(), 0)
func_4732_call = mod.get_global_var('func_4732')
func_4735_call = mutated_mod.get_global_var('func_4735')
var_9864 = relay.var("var_9864", dtype = "int64", shape = (270, 1))#candidate|9864|(270, 1)|var|int64
const_9865 = relay.const([-8.433673,1.026329,-2.844919,-6.667795,8.162291,-4.604905,2.619696,-1.791287,7.615601,0.224135,8.034512,-1.149527,1.081330,7.132452,-9.341377,-6.251906,-5.883326,-5.947083,3.977210,0.501155,1.751107,1.068956,-6.429890,-7.601920,3.425917,-9.004276,0.736409,-1.121103,0.692282,8.879514,-2.503000,-5.908838,1.093864,1.010495,9.844689,5.337971,1.229137,-2.618039,9.544176,3.176161,-4.535698,8.627834,4.758496,-1.602884,-6.865635,-4.826561,2.853326,5.587126,2.087476,0.385818,5.236609,-2.772435,5.169539,-4.273183,7.980223,9.889015,5.076938,5.182432,5.088995,6.412028,0.057561,-4.939185,5.245377,5.050276,7.453719,4.630458], dtype = "float64")#candidate|9865|(66,)|const|float64
call_9863 = relay.TupleGetItem(func_4732_call(relay.reshape(var_9864.astype('int64'), [3, 10, 9]), relay.reshape(const_9865.astype('float64'), [11, 6]), ), 0)
call_9866 = relay.TupleGetItem(func_4735_call(relay.reshape(var_9864.astype('int64'), [3, 10, 9]), relay.reshape(const_9865.astype('float64'), [11, 6]), ), 0)
output = relay.Tuple([call_9845,call_9863,var_9864,const_9865,])
output2 = relay.Tuple([call_9846,call_9866,var_9864,const_9865,])
func_9872 = relay.Function([var_9864,], output)
mod['func_9872'] = func_9872
mod = relay.transform.InferType()(mod)
mutated_mod['func_9872'] = func_9872
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9873 = relay.var("var_9873", dtype = "int64", shape = (270, 1))#candidate|9873|(270, 1)|var|int64
func_9872_call = mutated_mod.get_global_var('func_9872')
call_9874 = func_9872_call(var_9873)
output = call_9874
func_9875 = relay.Function([var_9873], output)
mutated_mod['func_9875'] = func_9875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7088_call = mod.get_global_var('func_7088')
func_7089_call = mutated_mod.get_global_var('func_7089')
call_9897 = func_7088_call()
call_9898 = func_7088_call()
uop_9911 = relay.sigmoid(call_9897.astype('float64')) # shape=(5, 3, 9)
uop_9913 = relay.sigmoid(call_9898.astype('float64')) # shape=(5, 3, 9)
output = uop_9911
output2 = uop_9913
func_9914 = relay.Function([], output)
mod['func_9914'] = func_9914
mod = relay.transform.InferType()(mod)
output = func_9914()
func_9915 = relay.Function([], output)
mutated_mod['func_9915'] = func_9915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9828_call = mod.get_global_var('func_9828')
func_9830_call = mutated_mod.get_global_var('func_9830')
call_9916 = relay.TupleGetItem(func_9828_call(), 0)
call_9917 = relay.TupleGetItem(func_9830_call(), 0)
output = relay.Tuple([call_9916,])
output2 = relay.Tuple([call_9917,])
func_9930 = relay.Function([], output)
mod['func_9930'] = func_9930
mod = relay.transform.InferType()(mod)
output = func_9930()
func_9931 = relay.Function([], output)
mutated_mod['func_9931'] = func_9931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7724_call = mod.get_global_var('func_7724')
func_7726_call = mutated_mod.get_global_var('func_7726')
call_9955 = relay.TupleGetItem(func_7724_call(), 0)
call_9956 = relay.TupleGetItem(func_7726_call(), 0)
output = call_9955
output2 = call_9956
func_9959 = relay.Function([], output)
mod['func_9959'] = func_9959
mod = relay.transform.InferType()(mod)
output = func_9959()
func_9960 = relay.Function([], output)
mutated_mod['func_9960'] = func_9960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8289_call = mod.get_global_var('func_8289')
func_8290_call = mutated_mod.get_global_var('func_8290')
call_10003 = func_8289_call()
call_10004 = func_8289_call()
output = call_10003
output2 = call_10004
func_10005 = relay.Function([], output)
mod['func_10005'] = func_10005
mod = relay.transform.InferType()(mod)
mutated_mod['func_10005'] = func_10005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10005_call = mutated_mod.get_global_var('func_10005')
call_10006 = func_10005_call()
output = call_10006
func_10007 = relay.Function([], output)
mutated_mod['func_10007'] = func_10007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7191_call = mod.get_global_var('func_7191')
func_7192_call = mutated_mod.get_global_var('func_7192')
call_10018 = relay.TupleGetItem(func_7191_call(), 0)
call_10019 = relay.TupleGetItem(func_7192_call(), 0)
func_9634_call = mod.get_global_var('func_9634')
func_9636_call = mutated_mod.get_global_var('func_9636')
call_10035 = relay.TupleGetItem(func_9634_call(), 0)
call_10036 = relay.TupleGetItem(func_9636_call(), 0)
output = relay.Tuple([call_10018,call_10035,])
output2 = relay.Tuple([call_10019,call_10036,])
func_10037 = relay.Function([], output)
mod['func_10037'] = func_10037
mod = relay.transform.InferType()(mod)
mutated_mod['func_10037'] = func_10037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10037_call = mutated_mod.get_global_var('func_10037')
call_10038 = func_10037_call()
output = call_10038
func_10039 = relay.Function([], output)
mutated_mod['func_10039'] = func_10039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10086 = relay.var("var_10086", dtype = "int16", shape = ())#candidate|10086|()|var|int16
var_10087 = relay.var("var_10087", dtype = "int16", shape = (1, 13, 14))#candidate|10087|(1, 13, 14)|var|int16
bop_10088 = relay.greater_equal(var_10086.astype('bool'), var_10087.astype('bool')) # shape=(1, 13, 14)
func_2618_call = mod.get_global_var('func_2618')
func_2622_call = mutated_mod.get_global_var('func_2622')
var_10096 = relay.var("var_10096", dtype = "int8", shape = (1, 210))#candidate|10096|(1, 210)|var|int8
call_10095 = func_2618_call(relay.reshape(var_10096.astype('int8'), [15, 7, 2]), relay.reshape(var_10096.astype('int8'), [15, 7, 2]), )
call_10097 = func_2618_call(relay.reshape(var_10096.astype('int8'), [15, 7, 2]), relay.reshape(var_10096.astype('int8'), [15, 7, 2]), )
bop_10100 = relay.bitwise_or(bop_10088.astype('int32'), relay.reshape(var_10087.astype('int32'), relay.shape_of(bop_10088))) # shape=(1, 13, 14)
output = relay.Tuple([call_10095,var_10096,bop_10100,])
output2 = relay.Tuple([call_10097,var_10096,bop_10100,])
func_10107 = relay.Function([var_10086,var_10087,var_10096,], output)
mod['func_10107'] = func_10107
mod = relay.transform.InferType()(mod)
mutated_mod['func_10107'] = func_10107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10107_call = mutated_mod.get_global_var('func_10107')
var_10109 = relay.var("var_10109", dtype = "int16", shape = ())#candidate|10109|()|var|int16
var_10110 = relay.var("var_10110", dtype = "int16", shape = (1, 13, 14))#candidate|10110|(1, 13, 14)|var|int16
var_10111 = relay.var("var_10111", dtype = "int8", shape = (1, 210))#candidate|10111|(1, 210)|var|int8
call_10108 = func_10107_call(var_10109,var_10110,var_10111,)
output = call_10108
func_10112 = relay.Function([var_10109,var_10110,var_10111,], output)
mutated_mod['func_10112'] = func_10112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7724_call = mod.get_global_var('func_7724')
func_7726_call = mutated_mod.get_global_var('func_7726')
call_10146 = relay.TupleGetItem(func_7724_call(), 0)
call_10147 = relay.TupleGetItem(func_7726_call(), 0)
func_8289_call = mod.get_global_var('func_8289')
func_8290_call = mutated_mod.get_global_var('func_8290')
call_10151 = func_8289_call()
call_10152 = func_8289_call()
func_2775_call = mod.get_global_var('func_2775')
func_2778_call = mutated_mod.get_global_var('func_2778')
var_10186 = relay.var("var_10186", dtype = "float64", shape = (3, 88))#candidate|10186|(3, 88)|var|float64
const_10187 = relay.const([[1,-6,7,8,-4,-7,-6,5,-5,4,9,4,2,10],[-1,10,2,-4,-8,2,-7,-5,6,-2,2,6,2,5],[-1,7,-3,-3,-10,4,1,2,-7,-1,-6,5,-1,-9],[10,-6,-1,4,-9,-9,-5,-9,-10,-6,-7,-1,2,-2],[6,3,-7,10,3,4,-2,10,-7,-6,7,6,-9,-6],[-5,-3,10,-1,-6,-7,-5,-8,3,4,7,10,2,-6],[5,3,2,2,-3,-1,4,-9,-8,-5,6,-2,1,-5],[-8,-5,6,-4,5,2,-9,-8,-10,3,5,8,9,-4],[-2,3,-1,4,6,8,3,9,3,-6,-6,3,-7,3],[-3,-6,8,-6,8,8,5,3,-6,-10,10,3,5,7],[7,9,9,-4,5,-5,9,4,9,-3,-10,3,-9,7],[-2,-5,6,-8,9,9,-1,8,-8,-5,-2,2,-1,5],[1,5,6,-2,-4,-7,-4,1,-3,-7,-3,-7,-3,10],[-4,-6,-7,-10,-1,-7,-5,-9,3,4,1,6,-4,-1],[-10,2,6,-10,-9,7,-5,6,-3,6,-7,1,-2,1],[7,-2,3,-2,-2,-3,5,10,8,-7,-10,-6,-3,-4],[1,-10,9,7,8,10,-4,-2,5,-8,-7,-2,9,-6],[5,9,9,-4,3,-10,-3,-2,5,7,-7,1,-9,3],[-2,-2,2,3,-1,10,10,-9,-10,1,7,5,2,-8],[-10,-1,-1,-9,2,-4,1,-9,4,4,-8,-1,-5,-9],[-2,-8,-9,9,9,2,-2,-8,-10,1,-4,-10,-4,-9],[7,5,-6,-4,-1,-4,-10,6,3,-4,1,-9,-2,9],[-1,-4,8,-8,2,9,6,8,10,-10,5,7,9,1],[8,9,10,-8,3,-5,9,-2,7,-4,3,-1,-6,-4],[-6,-8,7,-2,9,5,7,10,-4,-4,2,2,-10,2],[1,2,-5,2,6,-8,5,8,3,-9,-8,-2,8,6],[4,5,5,3,-6,1,8,-6,3,6,-1,5,-5,-2],[10,3,5,1,3,-2,-10,2,4,-4,3,-5,2,-6],[8,4,-7,5,-2,5,-4,-6,-2,4,-6,5,8,-4],[1,-9,-9,10,-9,9,1,7,-1,-2,3,8,-4,-9],[-2,-3,4,-3,-7,10,-8,-7,10,-6,9,3,4,1],[6,-2,-2,5,-9,10,3,-1,-6,-2,4,-7,-6,5],[6,7,6,4,4,-6,8,-10,4,2,2,8,1,-1],[8,4,1,-7,1,-7,-9,-10,8,7,-5,-4,2,5],[9,-10,-1,10,6,-3,7,3,-2,4,-5,4,2,7],[1,-7,7,7,2,3,7,6,-3,-1,-4,-7,-5,-8],[-2,-3,8,-5,-7,-4,2,-6,1,-2,-3,-1,9,5],[-2,3,10,9,5,-3,-8,1,2,8,3,10,-6,-2],[-1,-9,2,9,7,1,3,4,1,-3,7,8,3,6],[9,2,-7,-4,-4,-4,-2,3,-7,9,4,-10,-3,-1],[-6,-6,6,-6,-3,-3,-7,8,-2,-7,9,6,9,-6],[-6,-1,-5,9,6,-4,8,-6,6,6,-6,-6,10,10],[-10,2,-7,-8,9,-4,5,-6,9,9,5,-3,8,-3],[3,-8,2,-9,-4,-1,-4,-1,-5,1,-6,-9,-4,9],[-4,-2,10,8,-1,-10,3,1,-8,-6,7,9,8,6],[10,5,10,1,-7,-3,-5,7,-6,-7,9,9,1,-3],[6,4,-5,-2,-6,6,-1,6,-1,5,-1,4,-8,-8],[-9,-9,-10,-10,1,1,-2,-5,-7,-10,3,-8,10,4],[4,-8,-5,-5,1,10,-7,1,2,-4,-8,1,-4,8],[10,-3,-6,-7,-7,7,-10,-9,-10,8,-10,-2,1,-2],[2,-8,-3,-9,1,1,-10,7,5,-7,-10,-10,-1,9],[-6,6,10,-4,-6,-2,-9,-8,-3,-9,5,-5,4,5],[8,7,4,3,9,7,-8,-4,-3,-8,-9,5,4,9],[3,-3,-8,4,4,-6,-3,-10,-1,2,9,10,-6,2],[-5,9,-6,1,-3,-6,2,-9,2,-8,6,-8,-9,-4],[5,6,-8,-10,-7,8,5,6,5,-2,7,-1,9,9],[-10,-2,9,-7,-3,3,7,10,5,-9,1,7,-3,-2],[-10,2,-4,-6,-4,-1,-1,9,-6,-10,-6,1,-10,7],[9,-10,2,10,8,-8,3,3,4,10,2,-10,8,-8],[-2,-6,6,-1,-7,2,-10,-10,-10,5,-5,-1,-4,7],[-4,2,10,6,-1,-2,-7,4,5,-8,-4,-6,-7,-10],[-9,3,-2,9,3,7,10,2,6,-5,-7,5,-8,-2],[9,6,-9,-3,-5,4,-8,10,2,7,8,-8,-7,-6],[-3,9,-2,-2,-5,-3,-9,-8,8,5,2,8,4,-2],[-9,5,9,-6,1,4,-4,8,-2,8,-6,9,-5,-7],[3,9,10,-3,-9,1,-6,-10,2,4,6,-5,7,10],[3,2,-7,-5,6,-5,7,-7,-1,-3,-6,-6,-1,7],[-6,-1,-6,-4,-3,-9,7,5,2,-4,10,-7,-6,-1],[5,-8,-6,-10,3,5,-3,6,2,3,-5,8,-8,-6],[-9,3,6,5,-2,4,10,-1,8,4,-1,6,6,3],[-1,8,7,-4,-5,-7,-7,-10,2,2,1,4,3,-9],[-5,4,-3,-8,8,-5,2,-9,3,-5,-3,7,-3,7],[10,-8,10,3,-8,4,-4,8,1,6,-9,8,-10,-7],[7,-2,9,4,-3,3,-9,-9,7,8,7,1,6,7],[6,8,9,10,9,-7,2,-6,-6,1,-2,-1,-4,-4],[-2,6,-6,-1,4,3,7,8,10,8,8,-1,-2,-9],[5,-7,-8,-6,7,9,9,9,-2,3,10,7,-5,-10]], dtype = "uint32")#candidate|10187|(77, 14)|const|uint32
call_10185 = relay.TupleGetItem(func_2775_call(relay.reshape(var_10186.astype('float64'), [2, 11, 12]), relay.reshape(const_10187.astype('uint32'), [1078,]), ), 0)
call_10188 = relay.TupleGetItem(func_2778_call(relay.reshape(var_10186.astype('float64'), [2, 11, 12]), relay.reshape(const_10187.astype('uint32'), [1078,]), ), 0)
var_10190 = relay.var("var_10190", dtype = "uint32", shape = (77, 14))#candidate|10190|(77, 14)|var|uint32
bop_10191 = relay.less(const_10187.astype('bool'), relay.reshape(var_10190.astype('bool'), relay.shape_of(const_10187))) # shape=(77, 14)
output = relay.Tuple([call_10146,call_10151,call_10185,var_10186,bop_10191,])
output2 = relay.Tuple([call_10147,call_10152,call_10188,var_10186,bop_10191,])
func_10195 = relay.Function([var_10186,var_10190,], output)
mod['func_10195'] = func_10195
mod = relay.transform.InferType()(mod)
var_10196 = relay.var("var_10196", dtype = "float64", shape = (3, 88))#candidate|10196|(3, 88)|var|float64
var_10197 = relay.var("var_10197", dtype = "uint32", shape = (77, 14))#candidate|10197|(77, 14)|var|uint32
output = func_10195(var_10196,var_10197,)
func_10198 = relay.Function([var_10196,var_10197,], output)
mutated_mod['func_10198'] = func_10198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9479_call = mod.get_global_var('func_9479')
func_9480_call = mutated_mod.get_global_var('func_9480')
call_10269 = relay.TupleGetItem(func_9479_call(), 0)
call_10270 = relay.TupleGetItem(func_9480_call(), 0)
func_8244_call = mod.get_global_var('func_8244')
func_8245_call = mutated_mod.get_global_var('func_8245')
call_10300 = func_8244_call()
call_10301 = func_8244_call()
output = relay.Tuple([call_10269,call_10300,])
output2 = relay.Tuple([call_10270,call_10301,])
func_10311 = relay.Function([], output)
mod['func_10311'] = func_10311
mod = relay.transform.InferType()(mod)
output = func_10311()
func_10312 = relay.Function([], output)
mutated_mod['func_10312'] = func_10312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7799_call = mod.get_global_var('func_7799')
func_7800_call = mutated_mod.get_global_var('func_7800')
call_10313 = relay.TupleGetItem(func_7799_call(), 0)
call_10314 = relay.TupleGetItem(func_7800_call(), 0)
uop_10405 = relay.acosh(call_10313.astype('float64')) # shape=(5, 3, 9)
uop_10407 = relay.acosh(call_10314.astype('float64')) # shape=(5, 3, 9)
output = uop_10405
output2 = uop_10407
func_10419 = relay.Function([], output)
mod['func_10419'] = func_10419
mod = relay.transform.InferType()(mod)
mutated_mod['func_10419'] = func_10419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10419_call = mutated_mod.get_global_var('func_10419')
call_10420 = func_10419_call()
output = call_10420
func_10421 = relay.Function([], output)
mutated_mod['func_10421'] = func_10421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9199_call = mod.get_global_var('func_9199')
func_9201_call = mutated_mod.get_global_var('func_9201')
call_10445 = func_9199_call()
call_10446 = func_9199_call()
func_7508_call = mod.get_global_var('func_7508')
func_7511_call = mutated_mod.get_global_var('func_7511')
const_10452 = relay.const([1,-7,9,-7,-2,-3,-5,4,5,4,-10,7,9,4,7,4,-3,4,-6,8,-7,6,3,-7,4,4,4,6,3,7,-5,9,-3,-3,-5,-8,3,-6,6,5,-5,-3,-2,-2,9,8,-2,4,-1,-4,-8,-9,-8,7,8,-5,-1,-2,7,10,5,10,5,1,-2,2,-9,3,6,1,-2,-7,-7,7,-2,10,3,5,7,-3,2,9,6,7,1,-4,-8,-7,-9,-9,-1,8,-2,-1,-10,-7,10,2,-9,-8,10,-7,-2,-3,9,1,2,4,-4,-2,1,-7,-7,-7,-1,-1,6,9,-2,-8,-6,-1,-2,-4,-7,-3,8,-9,10,-5,10,1,-4,5,-5,-7,4,9,10,-2,-2,7,-4,8,4,-4,9,-2,6,-9,2,1,-3,-2,6,1,-1,-9,-7,-1,-10,5,10,4,-7,-8,10,-5,-2,7,-2,-7,7,10,-2,-4,7,4,9,3,3,-2,-1,-6,-3,10,-1,2,2,1,4,6,7,9,8,-9,-3,3,-10,-8,2,-10,-6,3,6,-4,1,2,-2,3,2,2,-5,-3,4,9,1,2,-4,7,-1,10,1,-2,-2,-2,9,2,-8,8,-6,9,8,5,6,-10,3,1,-4,6,9,10,1,-1,-7,-3,8,10,-5,6,9,10,-7,-5,-5,-7,-8,-2,1,9,2,10,-4,-6,7,10,-9,7,3,-9,10,3,-6,-6,8,-6,-7,-2,9,2,1,2,-4,8,-1,-6,-4,1,-3,9,-4,2,1,2,2,-6,6,3,-8,-7,-9,-2,-1,-2,-9,4,6,-5,-7,-7,-3,-2,-4,8,5,1,-8,6,3,2,1,-7,1,3,9,9,-6,2,5,10,-7,5,-3,5,-10,-9,-2,-9,-8,-2,-4,-10,3,10,2,-1,2,-4,-6,-2,5,-9,-10,1,1,-7,-8,7,1,-9,-9,3,6,-6,-6,1,2,10,10,-1,7,-8,-7,6,6,2,-8,7,-2,-6,-5,-2,9,-8,3,2,7,7,-8,-1,-10,8,-8,10,1,-8,7,3,2,-6,1,7,7,4,-6,-8,8,4,4,-5,4,-1,-5,-6,6,-2,-8,-6,2,2,5,-6,-7,-10,-8,8,-10,2,1,-2,10,5,2,4,-1,4,6,10,2,-8,5,-4,-3,10,-4,3,8,-9,9,-6,2,8,-10,5,8,-6,-7,8,5,-4,-2,-3,4,1,-7,-4,7,-7,8,-10,-5,-9,-7,2,7,-2,-4,-7,7,10,5,3,3,8,3,-10,-6,-1,-8,-6,-9,-1,-3,9,-8,-6,-2,4,10,-1,-2,1,9,-3,-3,1,-9,-6,1,-4,6,-2,8,6,-10,1,7,1,2,-3,5,8,6,-8,-1,8,2,-6,7,-8,-10,-8,9,-4,-3,7,-3,-4,10,8,4,-9,-5,9,-8,9,-6,-6,6,7,7,9,-10,8,7,-1,1,9,4,10,-7,-1,-5,9,7,3,1,-3,-7,10,9,6,3,8,5,3,-4,-6,-1,2,-2,-3,9,3,9,1,-7,9,-4,1,-4,5,9,9,-8,-10,-6,-3,-9,2,-10,-7,1,10,3,-7,6,-7,3,8,6,2,-1,8,1,-1,4,9,5,5,1,-7,3,-3,-9,-10,9,7,-8,1,7,-10,1,10,-9,6,-6,6,-6,-8,7,9,9,-7,3,6,-1,4,-8,-8,7,6,8,5,-10,-10,-10,-5,7,7,10,-3,-2,3,-1,-6,6,4,-5,-7,-9,-1,5,9,8,3,9,-8,-3,10,1,-2,9,10,-4,-8,5,-1,5,-4,6,-10,-5,8,9,-2,6,-9,2,1,-8,9,8,4,2,8,-5,-2,7,10,10,6,10,2,-5,-5,2,6,6,5,8,-5,-4,-5,9,-8,-9,-4,2,-10,9,-1,1,-8,9,-4,-9,-4,-8,-3,-6,7,-7,-4,-6,-7,-10,-3,8,-8,7,4,3,-8,-6,-1,3,-8,8,1,-6,9,7,-9,-7,9,-10,-9,-2,-7,9,-3,-5,-3,4,-9,2,-10,-1,-1,-7,4,7,2,10,10,-5,-2,-3,-3,10,-1,1,-9,-8,3,-3,3,-10,-9,-4,2,1,2,-10,3,9,2,3,4,-2,-9,4,4,6,-6,10,2,5,-5,8,-5,-2,-7,-8,8,-8,4,-8,-7,2,7,-5,-5,-2,5,10,9,9,-9,-6,7,-6,9,-1,-10,-2,-7,7,-5,-4,-1,2,-6,-5,-8,-4,7,5,-3,2,9,2,1,10,8,-8,-8,-6,-3,-1,-4,-5,-4,8,-9,1,-4,-6,2,-3,-9,9,3,-4,-8,7,-10,4,-3,1,3,-9,-5,-4,-2,9,-7,-9,-8,9,7,-10,8,-3,6,-4,6,-6,10,-1,-4,-4,-1,-5,7,4,10,3,10,1,-9,-3,-8,-7,-8,3,-9,4,1,8,5,-3,10,5,9,-3,2,-3,-4,1,1,3,10,-1,-9,8,-2,9,7,1,-1,-4,10,-3,10,-6,7,-2,-9,7,-3,-1,8,-7,5,10,-2,-9,6,7,-6,-8,2,-10,-2,-10,2,9,1,-4,6,2,-10,10,-5,-1,-10,3,-6,5,-8,2,6,9,-9,-6,6,-3,-1,2,10,4,-10,-3,10,8,-3,-9,4,-6,2,10,-10,-6,-5,-4,2,4,6,10,-5,5,1,-5,-3,-7,-1,-5,-9,-1,-9,-9,4,5,-1,6,-5,2,-5,10,7,3,4,10,-8,8,-7,-10,-2,-1,-10,-1,-9,1,-1,4,-8,-10,6,6,1,3,2,-9,8,9,8,-5,2,-1,-6,-3,-1,-9,-2,-10,10], dtype = "uint32")#candidate|10452|(1078,)|const|uint32
const_10453 = relay.const([9,-8,1,-9,7,5,1,-2,-10,-3,7,9,6,4,-5,8,8,-2,-5,-9,-4,-2,2,-4,-1,5,-9,-9,4,-3,-2,-2,8,1,-5,-4,7,-4,1,3,-6,-4,-3,-4,-8,-5,-7,-3,8,-8,6,-2,9,-2,-5,-4,3,10,3,-2,-10,-3,1,1,10,2,3,-1,-1,3,-9,-1,-5,8,-4,8,7], dtype = "uint32")#candidate|10453|(77,)|const|uint32
call_10451 = relay.TupleGetItem(func_7508_call(relay.reshape(const_10452.astype('uint32'), [7, 154]), relay.reshape(const_10453.astype('uint32'), [77,]), ), 1)
call_10454 = relay.TupleGetItem(func_7511_call(relay.reshape(const_10452.astype('uint32'), [7, 154]), relay.reshape(const_10453.astype('uint32'), [77,]), ), 1)
output = relay.Tuple([call_10445,call_10451,const_10452,const_10453,])
output2 = relay.Tuple([call_10446,call_10454,const_10452,const_10453,])
func_10464 = relay.Function([], output)
mod['func_10464'] = func_10464
mod = relay.transform.InferType()(mod)
output = func_10464()
func_10465 = relay.Function([], output)
mutated_mod['func_10465'] = func_10465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8052_call = mod.get_global_var('func_8052')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_10481 = relay.TupleGetItem(func_8052_call(), 0)
call_10482 = relay.TupleGetItem(func_8053_call(), 0)
output = call_10481
output2 = call_10482
func_10500 = relay.Function([], output)
mod['func_10500'] = func_10500
mod = relay.transform.InferType()(mod)
mutated_mod['func_10500'] = func_10500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10500_call = mutated_mod.get_global_var('func_10500')
call_10501 = func_10500_call()
output = call_10501
func_10502 = relay.Function([], output)
mutated_mod['func_10502'] = func_10502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8090_call = mod.get_global_var('func_8090')
func_8092_call = mutated_mod.get_global_var('func_8092')
call_10566 = func_8090_call()
call_10567 = func_8090_call()
output = relay.Tuple([call_10566,])
output2 = relay.Tuple([call_10567,])
func_10585 = relay.Function([], output)
mod['func_10585'] = func_10585
mod = relay.transform.InferType()(mod)
output = func_10585()
func_10586 = relay.Function([], output)
mutated_mod['func_10586'] = func_10586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9930_call = mod.get_global_var('func_9930')
func_9931_call = mutated_mod.get_global_var('func_9931')
call_10592 = relay.TupleGetItem(func_9930_call(), 0)
call_10593 = relay.TupleGetItem(func_9931_call(), 0)
output = relay.Tuple([call_10592,])
output2 = relay.Tuple([call_10593,])
func_10596 = relay.Function([], output)
mod['func_10596'] = func_10596
mod = relay.transform.InferType()(mod)
output = func_10596()
func_10597 = relay.Function([], output)
mutated_mod['func_10597'] = func_10597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7605_call = mod.get_global_var('func_7605')
func_7606_call = mutated_mod.get_global_var('func_7606')
call_10611 = relay.TupleGetItem(func_7605_call(), 3)
call_10612 = relay.TupleGetItem(func_7606_call(), 3)
output = call_10611
output2 = call_10612
func_10613 = relay.Function([], output)
mod['func_10613'] = func_10613
mod = relay.transform.InferType()(mod)
mutated_mod['func_10613'] = func_10613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10613_call = mutated_mod.get_global_var('func_10613')
call_10614 = func_10613_call()
output = call_10614
func_10615 = relay.Function([], output)
mutated_mod['func_10615'] = func_10615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8289_call = mod.get_global_var('func_8289')
func_8290_call = mutated_mod.get_global_var('func_8290')
call_10688 = func_8289_call()
call_10689 = func_8289_call()
output = call_10688
output2 = call_10689
func_10703 = relay.Function([], output)
mod['func_10703'] = func_10703
mod = relay.transform.InferType()(mod)
mutated_mod['func_10703'] = func_10703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10703_call = mutated_mod.get_global_var('func_10703')
call_10704 = func_10703_call()
output = call_10704
func_10705 = relay.Function([], output)
mutated_mod['func_10705'] = func_10705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9930_call = mod.get_global_var('func_9930')
func_9931_call = mutated_mod.get_global_var('func_9931')
call_10758 = relay.TupleGetItem(func_9930_call(), 0)
call_10759 = relay.TupleGetItem(func_9931_call(), 0)
func_7508_call = mod.get_global_var('func_7508')
func_7511_call = mutated_mod.get_global_var('func_7511')
const_10773 = relay.const([-3,9,-8,10,7,-8,-2,6,-6,1,-9,2,4,-8,8,7,8,-9,-4,6,10,-8,-7,-8,-9,9,-1,-5,4,-7,-9,-8,-10,-3,-5,-8,3,5,-2,-2,-4,-9,9,10,-1,8,3,7,2,-10,9,9,-5,9,-9,-10,-2,-10,5,6,8,6,-1,-7,-4,-9,-8,-4,-5,10,-6,9,-1,8,-8,2,10,9,4,4,6,3,-4,-7,-2,4,-9,-5,-3,-6,9,9,9,-1,-8,1,10,8,-10,4,-3,-1,3,-5,-1,9,1,1,10,3,1,-3,-9,-5,-7,-3,7,-5,10,-1,10,-4,10,1,9,1,7,1,5,6,-4,4,-3,-4,-8,-5,-4,1,4,7,5,5,2,-9,1,8,-2,-9,-1,9,7,-10,-3,-9,3,2,4,10,-3,-10,4,-10,-10,3,-1,3,-6,-10,-3,8,5,-2,9,-4,2,-7,-3,3,5,7,8,-3,-2,-7,-10,-9,-7,3,-4,8,-10,-2,-1,8,-1,-1,4,5,-5,-1,7,1,2,2,10,3,5,4,-10,-4,-9,2,-7,9,9,-8,-9,-10,4,8,4,-5,-7,-6,3,-10,5,6,-6,5,-5,2,3,-7,-8,2,-8,-10,5,-6,6,-1,-5,-2,-3,8,1,4,-6,2,7,5,-10,-4,10,5,3,8,4,3,-8,-5,-3,-6,1,-4,-3,-6,3,-8,-10,-1,-1,-3,1,-10,6,-8,4,9,-2,-6,3,8,1,-1,10,-4,-2,-6,10,2,3,5,5,-5,-9,4,2,-10,-9,-4,4,2,4,1,-3,-9,2,-6,-2,-6,9,-4,1,5,-4,8,6,8,-7,-5,-1,-9,-10,1,-3,2,-4,-4,-10,-4,-8,6,2,6,-2,-2,-7,5,-5,1,3,1,-2,2,-5,-8,-9,-9,-8,-2,7,-3,-4,-4,-5,6,-10,3,3,-4,4,-1,8,-5,6,9,1,2,8,-4,-2,-9,7,-2,1,-9,10,9,-2,4,-6,-3,-5,-4,-10,-6,-7,3,-10,4,-3,-8,5,-10,-4,4,7,6,-2,-5,-7,5,9,-9,6,-10,-8,-3,6,7,10,-9,-1,-1,3,5,8,-5,-9,5,10,6,4,1,3,-9,1,9,2,3,7,-5,-10,-1,-7,-6,-4,6,-10,-9,5,5,5,-6,-6,-2,10,8,-10,-9,-7,-7,-7,-10,-8,-1,6,-8,2,10,6,-2,9,-6,-1,9,2,-1,-7,-6,-10,7,-3,-9,-1,-2,10,3,6,-10,4,4,-5,3,-8,8,-5,5,2,-2,4,-9,-10,4,2,10,5,-2,-1,-4,-5,8,-7,-8,9,-1,-4,5,-5,-9,-5,10,4,-2,-6,-5,-9,1,-6,-5,6,7,-10,-5,3,9,2,-8,1,5,-6,-8,-5,-1,5,7,-5,3,-7,8,10,-8,7,3,7,5,10,8,-10,8,6,9,2,-5,-8,-10,2,-5,7,-7,7,8,5,3,-5,-3,10,2,-1,2,-2,2,-2,3,6,-4,1,-10,-9,4,-8,7,-6,-10,8,10,6,-5,10,10,9,-9,-7,9,-4,2,-9,-1,-9,-3,5,-8,7,1,-5,-5,4,-9,7,-7,-10,-4,-9,5,6,-5,-3,-3,-10,10,-5,2,-3,2,-8,10,9,8,-10,6,-2,8,5,8,8,-3,-6,-4,-5,-8,7,-2,3,4,4,1,2,1,-1,-5,8,-5,2,-1,8,-9,-9,-3,2,8,-9,1,-8,-1,3,9,-5,-4,-4,1,6,8,2,2,9,9,8,-9,6,7,-7,1,-1,-8,-1,8,10,7,-5,5,10,2,-8,6,3,1,10,-4,8,7,-3,-1,8,7,8,7,-8,5,2,-9,-5,-8,4,-5,6,-4,-4,5,4,7,-6,9,5,-1,5,3,10,-2,-5,-7,-8,3,-7,-4,-10,2,-5,-1,6,7,-2,1,4,-6,-2,-2,-5,2,3,4,5,3,-8,-10,8,6,-10,2,4,-4,3,7,-3,10,5,3,-10,1,1,-2,1,-1,-9,-8,2,-9,10,-1,-7,10,4,3,10,-4,5,1,8,-10,4,-7,-10,1,6,-4,4,-4,-7,-4,9,7,-6,4,10,-8,-2,3,5,3,-8,2,-2,10,-3,6,4,8,4,3,-7,-10,-8,-2,-9,-2,-3,6,-3,7,-5,-8,8,9,9,6,3,-5,-9,3,4,-2,2,-4,-8,-2,4,2,-7,2,2,-4,-3,3,-5,-9,-2,6,3,-10,1,-6,4,-6,8,9,-5,-5,1,2,6,5,-4,-5,-2,-10,9,-9,3,-5,3,-2,-6,-9,-7,-1,2,-3,8,5,-5,3,10,-6,-7,-5,3,-1,4,-6,-2,-8,-4,3,10,-1,5,-6,8,-10,-3,5,4,-6,7,1,-10,6,-1,5,-8,-6,-2,10,6,-5,6,-6,-8,-9,6,-6,1,10,8,-3,4,1,-4,6,-2,-9,-10,9,7,5,-1,10,3,-6,-5,-9,-8,7,-1,2,-1,-2,-5,-1,10,-6,8,-3,-5,-2,-7,1,1,-9,-8,-6,9,-2,-10,7,-10,10,-8,-9,-1,-3,-3,-6,-2,-9,-6,-1,-4,1,7,-1,-2,7,4,-3,10,-5,-10,-7,8,3,2,8,7,7,7,3,1,-9,7,-1,-8,9,-9,-10,-4,-8,-5,2,6,-5,9,2,7,4,1,-10,2,-7,-8,10,10,-10,-6,6,-4,-7,-9,1,-10,10,10,2,-3,-7,-6,5,-4,-10,9,-4,-4,-4,-10,9,-1,1,2,7,2,6,-10,-5,-8,-7,-10,-8,2,7,8,-1,-6,-2,6,4,3,10], dtype = "uint32")#candidate|10773|(1078,)|const|uint32
const_10774 = relay.const([[-10],[6],[1],[-6],[-8],[-5],[7],[3],[-9],[-10],[-3],[3],[5],[2],[-9],[-6],[1],[7],[-7],[7],[2],[-8],[-3],[8],[-7],[2],[-1],[4],[1],[1],[-6],[-1],[10],[7],[10],[5],[-7],[3],[-6],[-4],[1],[-5],[-3],[8],[4],[-3],[8],[-5],[1],[6],[-7],[5],[5],[-4],[1],[6],[-3],[6],[-9],[-9],[-4],[3],[-8],[10],[2],[3],[8],[1],[-6],[-6],[2],[10],[-4],[-1],[-1],[-6],[-5]], dtype = "uint32")#candidate|10774|(77, 1)|const|uint32
call_10772 = relay.TupleGetItem(func_7508_call(relay.reshape(const_10773.astype('uint32'), [7, 154]), relay.reshape(const_10774.astype('uint32'), [77,]), ), 3)
call_10775 = relay.TupleGetItem(func_7511_call(relay.reshape(const_10773.astype('uint32'), [7, 154]), relay.reshape(const_10774.astype('uint32'), [77,]), ), 3)
func_8948_call = mod.get_global_var('func_8948')
func_8953_call = mutated_mod.get_global_var('func_8953')
const_10783 = relay.const([-2.942831,-0.520407,-2.836237,-3.150988,1.550703,-2.235258,-8.457621,-2.787988,2.549869,-9.178297,2.575725,8.288476,-0.734531,-0.889090,9.392572,3.118354,-1.675392,8.525415,1.447838,-4.652563,-3.381374,-3.836788,0.034512,3.179005,2.394059,-9.218951,-0.233267,-0.505788,1.939602,-6.899274,-2.230989,-0.537549,-5.077183,3.650618,8.316398,-6.958823,7.175982,-6.200519,-5.094178,4.284792,-6.509113,-2.382234,-2.758795,4.773258,8.986764,-6.561917,8.233608,-8.065826,-7.908447,-4.112266,-3.953279,9.704516,7.255823,-0.321711,-2.416980,-0.295112,8.348366,3.354729,2.972423,3.818976,7.156101,-5.539606,-2.158562,-7.308881,-7.102584,-5.361031], dtype = "float64")#candidate|10783|(66,)|const|float64
const_10784 = relay.const([-10,7,-3,3,5,-1,-2,3,-9,-4,-10,-10,-9,-9,-3,-8,-1,-6,-3,4,-3,-4,-3,-8,3,5,-10,-10,1,-6,2,-7,10,-7,4,-10,8,2,1,2,-4,7,3,-5,-9,-1,4,3,-1,8,6,4,1,5,-8,8,-5,-5,2,-5,10,3,-1,-7,-9,-2,2,8,2,7,-10,1,10,6,-6,5,6,-10,-6,-3,-4,9,1,-3,-3,-2,-7,-10,8,1,8,10,5,5,10,6,3,2,-5,6,5,-2,-2,1,10,-6,7,-6,-7,-4,9,3,-5,3,-9,-9,8,9,6,9,-2,-6,-10,-3,-3,6,-7,1,5,4,-4,10,-6,9,-7,-10,3,7,-8,4,7,1,-10,-8,8,-9,-6,-2,6,-6,2,-3,10,2,-2,9,-6,-5,-3,-3,4,-3,1,-5,-9,-1,7,-7,3,6,6,5,4,-10,3,-7,-5,9,6,-2,-7,7,6,2,5,-7,3,-5,-3,5,-10,3,5,-3,8,-7,8,-10,7,-6,-9,-3,6,-1,-5,-3,1,2,9,-6], dtype = "int8")#candidate|10784|(210,)|const|int8
call_10782 = relay.TupleGetItem(func_8948_call(relay.reshape(const_10783.astype('float64'), [1, 66]), relay.reshape(const_10784.astype('int8'), [210,]), relay.reshape(const_10774.astype('uint32'), [77,]), ), 3)
call_10785 = relay.TupleGetItem(func_8953_call(relay.reshape(const_10783.astype('float64'), [1, 66]), relay.reshape(const_10784.astype('int8'), [210,]), relay.reshape(const_10774.astype('uint32'), [77,]), ), 3)
func_7088_call = mod.get_global_var('func_7088')
func_7089_call = mutated_mod.get_global_var('func_7089')
call_10807 = func_7088_call()
call_10808 = func_7088_call()
output = relay.Tuple([call_10758,call_10772,const_10773,const_10774,call_10782,const_10783,const_10784,call_10807,])
output2 = relay.Tuple([call_10759,call_10775,const_10773,const_10774,call_10785,const_10783,const_10784,call_10808,])
func_10813 = relay.Function([], output)
mod['func_10813'] = func_10813
mod = relay.transform.InferType()(mod)
mutated_mod['func_10813'] = func_10813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10813_call = mutated_mod.get_global_var('func_10813')
call_10814 = func_10813_call()
output = call_10814
func_10815 = relay.Function([], output)
mutated_mod['func_10815'] = func_10815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10585_call = mod.get_global_var('func_10585')
func_10586_call = mutated_mod.get_global_var('func_10586')
call_10821 = relay.TupleGetItem(func_10585_call(), 0)
call_10822 = relay.TupleGetItem(func_10586_call(), 0)
output = relay.Tuple([call_10821,])
output2 = relay.Tuple([call_10822,])
func_10854 = relay.Function([], output)
mod['func_10854'] = func_10854
mod = relay.transform.InferType()(mod)
output = func_10854()
func_10855 = relay.Function([], output)
mutated_mod['func_10855'] = func_10855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7278_call = mod.get_global_var('func_7278')
func_7279_call = mutated_mod.get_global_var('func_7279')
call_10871 = relay.TupleGetItem(func_7278_call(), 4)
call_10872 = relay.TupleGetItem(func_7279_call(), 4)
output = relay.Tuple([call_10871,])
output2 = relay.Tuple([call_10872,])
func_10873 = relay.Function([], output)
mod['func_10873'] = func_10873
mod = relay.transform.InferType()(mod)
output = func_10873()
func_10874 = relay.Function([], output)
mutated_mod['func_10874'] = func_10874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9959_call = mod.get_global_var('func_9959')
func_9960_call = mutated_mod.get_global_var('func_9960')
call_10883 = func_9959_call()
call_10884 = func_9959_call()
func_10813_call = mod.get_global_var('func_10813')
func_10815_call = mutated_mod.get_global_var('func_10815')
call_10908 = relay.TupleGetItem(func_10813_call(), 2)
call_10909 = relay.TupleGetItem(func_10815_call(), 2)
func_10107_call = mod.get_global_var('func_10107')
func_10112_call = mutated_mod.get_global_var('func_10112')
var_10916 = relay.var("var_10916", dtype = "int16", shape = ())#candidate|10916|()|var|int16
var_10917 = relay.var("var_10917", dtype = "int16", shape = (182,))#candidate|10917|(182,)|var|int16
var_10918 = relay.var("var_10918", dtype = "int8", shape = (210,))#candidate|10918|(210,)|var|int8
call_10915 = relay.TupleGetItem(func_10107_call(relay.reshape(var_10916.astype('int16'), []), relay.reshape(var_10917.astype('int16'), [1, 13, 14]), relay.reshape(var_10918.astype('int8'), [1, 210]), ), 0)
call_10919 = relay.TupleGetItem(func_10112_call(relay.reshape(var_10916.astype('int16'), []), relay.reshape(var_10917.astype('int16'), [1, 13, 14]), relay.reshape(var_10918.astype('int8'), [1, 210]), ), 0)
output = relay.Tuple([call_10883,call_10908,call_10915,var_10916,var_10917,var_10918,])
output2 = relay.Tuple([call_10884,call_10909,call_10919,var_10916,var_10917,var_10918,])
func_10953 = relay.Function([var_10916,var_10917,var_10918,], output)
mod['func_10953'] = func_10953
mod = relay.transform.InferType()(mod)
var_10954 = relay.var("var_10954", dtype = "int16", shape = ())#candidate|10954|()|var|int16
var_10955 = relay.var("var_10955", dtype = "int16", shape = (182,))#candidate|10955|(182,)|var|int16
var_10956 = relay.var("var_10956", dtype = "int8", shape = (210,))#candidate|10956|(210,)|var|int8
output = func_10953(var_10954,var_10955,var_10956,)
func_10957 = relay.Function([var_10954,var_10955,var_10956,], output)
mutated_mod['func_10957'] = func_10957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8992_call = mod.get_global_var('func_8992')
func_8993_call = mutated_mod.get_global_var('func_8993')
call_10992 = relay.TupleGetItem(func_8992_call(), 1)
call_10993 = relay.TupleGetItem(func_8993_call(), 1)
func_10464_call = mod.get_global_var('func_10464')
func_10465_call = mutated_mod.get_global_var('func_10465')
call_11004 = relay.TupleGetItem(func_10464_call(), 0)
call_11005 = relay.TupleGetItem(func_10465_call(), 0)
func_9128_call = mod.get_global_var('func_9128')
func_9130_call = mutated_mod.get_global_var('func_9130')
call_11008 = relay.TupleGetItem(func_9128_call(), 0)
call_11009 = relay.TupleGetItem(func_9130_call(), 0)
func_8992_call = mod.get_global_var('func_8992')
func_8993_call = mutated_mod.get_global_var('func_8993')
call_11016 = relay.TupleGetItem(func_8992_call(), 0)
call_11017 = relay.TupleGetItem(func_8993_call(), 0)
func_9828_call = mod.get_global_var('func_9828')
func_9830_call = mutated_mod.get_global_var('func_9830')
call_11018 = relay.TupleGetItem(func_9828_call(), 0)
call_11019 = relay.TupleGetItem(func_9830_call(), 0)
func_9914_call = mod.get_global_var('func_9914')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_11020 = func_9914_call()
call_11021 = func_9914_call()
func_7992_call = mod.get_global_var('func_7992')
func_7995_call = mutated_mod.get_global_var('func_7995')
call_11026 = relay.TupleGetItem(func_7992_call(relay.reshape(call_11008.astype('int64'), [5, 3, 9])), 1)
call_11027 = relay.TupleGetItem(func_7995_call(relay.reshape(call_11008.astype('int64'), [5, 3, 9])), 1)
output = relay.Tuple([call_10992,call_11004,call_11008,call_11016,call_11018,call_11020,call_11026,])
output2 = relay.Tuple([call_10993,call_11005,call_11009,call_11017,call_11019,call_11021,call_11027,])
func_11028 = relay.Function([], output)
mod['func_11028'] = func_11028
mod = relay.transform.InferType()(mod)
output = func_11028()
func_11029 = relay.Function([], output)
mutated_mod['func_11029'] = func_11029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10419_call = mod.get_global_var('func_10419')
func_10421_call = mutated_mod.get_global_var('func_10421')
call_11033 = func_10419_call()
call_11034 = func_10419_call()
output = call_11033
output2 = call_11034
func_11040 = relay.Function([], output)
mod['func_11040'] = func_11040
mod = relay.transform.InferType()(mod)
mutated_mod['func_11040'] = func_11040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11040_call = mutated_mod.get_global_var('func_11040')
call_11041 = func_11040_call()
output = call_11041
func_11042 = relay.Function([], output)
mutated_mod['func_11042'] = func_11042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10311_call = mod.get_global_var('func_10311')
func_10312_call = mutated_mod.get_global_var('func_10312')
call_11043 = relay.TupleGetItem(func_10311_call(), 0)
call_11044 = relay.TupleGetItem(func_10312_call(), 0)
func_9828_call = mod.get_global_var('func_9828')
func_9830_call = mutated_mod.get_global_var('func_9830')
call_11052 = relay.TupleGetItem(func_9828_call(), 0)
call_11053 = relay.TupleGetItem(func_9830_call(), 0)
func_4078_call = mod.get_global_var('func_4078')
func_4081_call = mutated_mod.get_global_var('func_4081')
var_11055 = relay.var("var_11055", dtype = "float64", shape = (66,))#candidate|11055|(66,)|var|float64
var_11056 = relay.var("var_11056", dtype = "int8", shape = (210, 1))#candidate|11056|(210, 1)|var|int8
call_11054 = relay.TupleGetItem(func_4078_call(relay.reshape(var_11055.astype('float64'), [2, 3, 11]), relay.reshape(var_11056.astype('int8'), [210,]), ), 1)
call_11057 = relay.TupleGetItem(func_4081_call(relay.reshape(var_11055.astype('float64'), [2, 3, 11]), relay.reshape(var_11056.astype('int8'), [210,]), ), 1)
func_9088_call = mod.get_global_var('func_9088')
func_9091_call = mutated_mod.get_global_var('func_9091')
const_11064 = relay.const([[10],[3],[1],[8],[-1],[-3],[-3],[-4],[6],[10],[8],[6],[6],[-6],[1],[-4],[-8],[-8],[8],[-8],[6],[10],[8],[6],[2],[1],[7],[5],[9],[4],[5],[-10],[-7],[-1],[6],[-6],[1],[-2],[9],[-2],[-5],[1],[2],[-5],[9],[-4],[-9],[7],[-3],[-1],[-8],[-1],[-2],[-7],[-10],[-2],[-1],[7],[8],[8],[-5],[-2],[-7],[2],[-7],[-8],[1],[-5],[2],[-4],[10],[9],[6],[7],[-2],[-1],[-7]], dtype = "uint32")#candidate|11064|(77, 1)|const|uint32
call_11063 = relay.TupleGetItem(func_9088_call(relay.reshape(const_11064.astype('uint32'), [77,])), 4)
call_11065 = relay.TupleGetItem(func_9091_call(relay.reshape(const_11064.astype('uint32'), [77,])), 4)
uop_11068 = relay.sinh(var_11056.astype('float64')) # shape=(210, 1)
output = relay.Tuple([call_11043,call_11052,call_11054,var_11055,call_11063,const_11064,uop_11068,])
output2 = relay.Tuple([call_11044,call_11053,call_11057,var_11055,call_11065,const_11064,uop_11068,])
func_11073 = relay.Function([var_11055,var_11056,], output)
mod['func_11073'] = func_11073
mod = relay.transform.InferType()(mod)
mutated_mod['func_11073'] = func_11073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11073_call = mutated_mod.get_global_var('func_11073')
var_11075 = relay.var("var_11075", dtype = "float64", shape = (66,))#candidate|11075|(66,)|var|float64
var_11076 = relay.var("var_11076", dtype = "int8", shape = (210, 1))#candidate|11076|(210, 1)|var|int8
call_11074 = func_11073_call(var_11075,var_11076,)
output = call_11074
func_11077 = relay.Function([var_11075,var_11076,], output)
mutated_mod['func_11077'] = func_11077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10005_call = mod.get_global_var('func_10005')
func_10007_call = mutated_mod.get_global_var('func_10007')
call_11086 = func_10005_call()
call_11087 = func_10005_call()
func_10037_call = mod.get_global_var('func_10037')
func_10039_call = mutated_mod.get_global_var('func_10039')
call_11089 = relay.TupleGetItem(func_10037_call(), 1)
call_11090 = relay.TupleGetItem(func_10039_call(), 1)
func_7424_call = mod.get_global_var('func_7424')
func_7427_call = mutated_mod.get_global_var('func_7427')
const_11095 = relay.const([[-10,-9,4,-4,-8,-4,-4,1,3,3,2,-5,3,-1,1,-10,-4,9,-6,6,-7,-8,-7,7,4,9,10,-6,-9,3,-6,10,-1,-6,1,-8,2,3,4,1,-8,5,-8,10,-8,9,4,-4,8,2,3,10,-8,7,3,-4,-10,-8,10,6,-2,3,-4,-3,-10,4,6,1,6,-6,7,9,-8,8,6,-7,-10]], dtype = "uint32")#candidate|11095|(1, 77)|const|uint32
var_11096 = relay.var("var_11096", dtype = "uint32", shape = (539, 2))#candidate|11096|(539, 2)|var|uint32
call_11094 = relay.TupleGetItem(func_7424_call(relay.reshape(const_11095.astype('uint32'), [77, 1]), relay.reshape(var_11096.astype('uint32'), [7, 154]), ), 1)
call_11097 = relay.TupleGetItem(func_7427_call(relay.reshape(const_11095.astype('uint32'), [77, 1]), relay.reshape(var_11096.astype('uint32'), [7, 154]), ), 1)
output = relay.Tuple([call_11086,call_11089,call_11094,const_11095,var_11096,])
output2 = relay.Tuple([call_11087,call_11090,call_11097,const_11095,var_11096,])
func_11107 = relay.Function([var_11096,], output)
mod['func_11107'] = func_11107
mod = relay.transform.InferType()(mod)
var_11108 = relay.var("var_11108", dtype = "uint32", shape = (539, 2))#candidate|11108|(539, 2)|var|uint32
output = func_11107(var_11108)
func_11109 = relay.Function([var_11108], output)
mutated_mod['func_11109'] = func_11109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9634_call = mod.get_global_var('func_9634')
func_9636_call = mutated_mod.get_global_var('func_9636')
call_11111 = relay.TupleGetItem(func_9634_call(), 0)
call_11112 = relay.TupleGetItem(func_9636_call(), 0)
output = call_11111
output2 = call_11112
func_11115 = relay.Function([], output)
mod['func_11115'] = func_11115
mod = relay.transform.InferType()(mod)
output = func_11115()
func_11116 = relay.Function([], output)
mutated_mod['func_11116'] = func_11116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10419_call = mod.get_global_var('func_10419')
func_10421_call = mutated_mod.get_global_var('func_10421')
call_11117 = func_10419_call()
call_11118 = func_10419_call()
func_8121_call = mod.get_global_var('func_8121')
func_8122_call = mutated_mod.get_global_var('func_8122')
call_11127 = relay.TupleGetItem(func_8121_call(), 0)
call_11128 = relay.TupleGetItem(func_8122_call(), 0)
func_10419_call = mod.get_global_var('func_10419')
func_10421_call = mutated_mod.get_global_var('func_10421')
call_11129 = func_10419_call()
call_11130 = func_10419_call()
output = relay.Tuple([call_11117,call_11127,call_11129,])
output2 = relay.Tuple([call_11118,call_11128,call_11130,])
func_11132 = relay.Function([], output)
mod['func_11132'] = func_11132
mod = relay.transform.InferType()(mod)
mutated_mod['func_11132'] = func_11132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11132_call = mutated_mod.get_global_var('func_11132')
call_11133 = func_11132_call()
output = call_11133
func_11134 = relay.Function([], output)
mutated_mod['func_11134'] = func_11134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10613_call = mod.get_global_var('func_10613')
func_10615_call = mutated_mod.get_global_var('func_10615')
call_11161 = func_10613_call()
call_11162 = func_10613_call()
output = call_11161
output2 = call_11162
func_11163 = relay.Function([], output)
mod['func_11163'] = func_11163
mod = relay.transform.InferType()(mod)
output = func_11163()
func_11164 = relay.Function([], output)
mutated_mod['func_11164'] = func_11164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9634_call = mod.get_global_var('func_9634')
func_9636_call = mutated_mod.get_global_var('func_9636')
call_11165 = relay.TupleGetItem(func_9634_call(), 0)
call_11166 = relay.TupleGetItem(func_9636_call(), 0)
func_8588_call = mod.get_global_var('func_8588')
func_8591_call = mutated_mod.get_global_var('func_8591')
const_11173 = relay.const([0.142381,-2.378185,2.563085,5.676624,0.141861,8.577443,-4.759399,7.319534,-0.404353,4.359036,-1.075582,4.208278,0.039181,5.501894,-4.144329,-6.574229,-8.716215,6.081534,2.070694,-3.440535,8.831477,7.730825,6.999679,8.703380,-0.426243,-9.421814,-4.031050,6.327659,5.401417,-9.809179,0.977095,-1.799909,5.141462,6.153169,-0.454036,-1.579146,9.353654,7.881754,-8.354343,-7.645801,-0.979832,0.083936,4.907192,-4.917437,6.341011,-6.252693,0.651236,4.301080,-7.514252,-7.215308,-1.312727,-5.013718,-4.565659,7.783906,-6.054613,7.678628,-4.770137,-6.925381,-8.220841,-5.695317,3.302199,-2.675702,3.502745,-8.759136,-6.637210,-2.816605,8.384209,-7.950250,8.021946,-6.572529,-0.053365,-5.716663,5.771085,-4.412944,6.704614,2.783660,9.431292,0.682909,9.995150,-8.478597,-7.492907,3.914101,-3.171456,9.835270,6.910762,1.972404,-3.058078,-6.556936,-1.251660,4.886055,3.827474,2.802849,-1.107167,-0.084949,-4.044425,3.326335,2.423530,-0.687784,-5.180962,2.898847,1.856712,1.447540,-8.365322,4.039730,-3.915760,-2.352270,-6.273480,-9.334877,5.042154,-7.341286,-4.285913,-9.535287,-4.213750,2.548340,4.011089,-0.134076,9.402903,-9.667337,4.725611,4.974920,-9.470415,-1.720908,7.776400,4.706236,8.967623,-9.355483,5.853819,1.297143,8.884111,-7.357391,-9.802318,7.295762,0.627642,8.857453,-1.602431,-9.364929,8.772120,5.163782,-0.725936,4.746616,-4.121087,0.609771,-7.804257,-1.863901,4.439858,-2.175555,3.882114,9.923153,5.614050,-3.028887,3.595847,-2.390556,5.331243,5.145039,-6.790603,6.329715,-4.849448,-2.305930,2.637695,-0.007704,-5.553807,-2.626832,0.105331,-7.480801,9.814538,-2.657843,1.277772,8.876172,-1.047918,-3.446284,3.801827,1.888650,-3.244989,-2.540285,-9.664670,-1.867876,-4.191312,5.320999,5.805385,-3.839752,-9.386944,9.549518,-6.362918,-3.029274,-2.387938,5.427716,-2.992196,3.176875,5.974758,-1.997843,8.687473,-9.215324,-7.389323,5.940253,5.895427,-9.406562,-0.159638,5.372129,-7.399918,5.032785,2.150185,-6.580503,5.419544,-5.023823,3.296852,5.016079,-5.647266,-2.103837,3.060768,-6.220889,-1.195891,-0.140284,-3.234371,6.481077,0.242236,7.510499,4.938291,-5.312885,-9.134668,1.323596,4.027816,-5.490610,-0.199452,-1.094889,-7.114758,-5.889873,0.635801,1.279975,3.365667,-4.464389,0.057686,9.908774,4.812296,0.183814,-3.338549,-1.672481,9.637122,9.150628,5.553000,7.923329,-0.642081,-4.436681,-8.562373,-1.977337,-4.837311,-9.580340,-0.368870,0.369915,9.442642,2.432444,6.163420,-3.261199,-7.731067,2.465032,6.435958,3.667824,-8.616447,-5.585622,1.620889,-1.788432,1.872687,0.173230,-7.830866,-9.946939,-5.362230,-9.649566,9.602287,-4.840518,-2.851983,2.053935,0.823440,-0.480454,9.774257,-3.399660,7.605905,-5.086923,-3.329283,-3.217545,-6.648961,-3.668230], dtype = "float32")#candidate|11173|(280,)|const|float32
call_11172 = relay.TupleGetItem(func_8588_call(relay.reshape(const_11173.astype('float32'), [70, 4])), 1)
call_11174 = relay.TupleGetItem(func_8591_call(relay.reshape(const_11173.astype('float32'), [70, 4])), 1)
output = relay.Tuple([call_11165,call_11172,const_11173,])
output2 = relay.Tuple([call_11166,call_11174,const_11173,])
func_11175 = relay.Function([], output)
mod['func_11175'] = func_11175
mod = relay.transform.InferType()(mod)
mutated_mod['func_11175'] = func_11175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11175_call = mutated_mod.get_global_var('func_11175')
call_11176 = func_11175_call()
output = call_11176
func_11177 = relay.Function([], output)
mutated_mod['func_11177'] = func_11177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7088_call = mod.get_global_var('func_7088')
func_7089_call = mutated_mod.get_global_var('func_7089')
call_11184 = func_7088_call()
call_11185 = func_7088_call()
output = call_11184
output2 = call_11185
func_11203 = relay.Function([], output)
mod['func_11203'] = func_11203
mod = relay.transform.InferType()(mod)
mutated_mod['func_11203'] = func_11203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11203_call = mutated_mod.get_global_var('func_11203')
call_11204 = func_11203_call()
output = call_11204
func_11205 = relay.Function([], output)
mutated_mod['func_11205'] = func_11205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11163_call = mod.get_global_var('func_11163')
func_11164_call = mutated_mod.get_global_var('func_11164')
call_11273 = func_11163_call()
call_11274 = func_11163_call()
var_11282 = relay.var("var_11282", dtype = "float32", shape = (70, 4))#candidate|11282|(70, 4)|var|float32
bop_11283 = relay.not_equal(call_11273.astype('bool'), relay.reshape(var_11282.astype('bool'), relay.shape_of(call_11273))) # shape=(70, 4)
bop_11286 = relay.not_equal(call_11274.astype('bool'), relay.reshape(var_11282.astype('bool'), relay.shape_of(call_11274))) # shape=(70, 4)
func_5216_call = mod.get_global_var('func_5216')
func_5219_call = mutated_mod.get_global_var('func_5219')
const_11288 = relay.const([-6.470784,0.685564,-9.002215,-0.006101,-2.221201,2.543463,-3.013520,-8.187974,-7.446896,7.296365,0.742430,-3.352424,9.907751,-1.349457,-8.849166,0.029051,3.952572,-2.218207,6.176164,3.728037,-4.957630,5.321690,9.131557,-5.965219,-5.825053,-9.366194,8.898210,-8.023845,6.599860,2.403190,-3.561702,8.314649,-6.632975,9.658610,-1.428723,2.085750,2.217751,3.891967,-4.132420,-4.219208,5.176381,-3.884255,3.892762,7.404649,8.178376,1.480410,-0.343686,-4.669783,-0.335450,-5.897912,-6.954777,9.635258,8.177557,-0.530028,2.021678,-4.161210,3.605698,3.119019,6.488783,0.521548,4.637731,-6.579081,0.799178,-9.272411,-7.511984,-2.344537,8.923551,-0.580934,-8.188861,-7.464442,4.951512,-4.625864,-4.347591,-5.343691,1.667750,-2.153047,-3.791999,-2.005384,6.680839,3.197934,9.431702,-8.456791,3.824442,2.150411,0.546553,4.464115,-7.764645,0.963798,6.246322,-1.221563,-7.199554,-6.141409,0.151418,-1.882731,9.421395,-6.341980], dtype = "float32")#candidate|11288|(96,)|const|float32
call_11287 = func_5216_call(relay.reshape(const_11288.astype('float32'), [6, 1, 16]))
call_11289 = func_5216_call(relay.reshape(const_11288.astype('float32'), [6, 1, 16]))
func_10813_call = mod.get_global_var('func_10813')
func_10815_call = mutated_mod.get_global_var('func_10815')
call_11290 = relay.TupleGetItem(func_10813_call(), 0)
call_11291 = relay.TupleGetItem(func_10815_call(), 0)
output = relay.Tuple([bop_11283,call_11287,const_11288,call_11290,])
output2 = relay.Tuple([bop_11286,call_11289,const_11288,call_11291,])
func_11294 = relay.Function([var_11282,], output)
mod['func_11294'] = func_11294
mod = relay.transform.InferType()(mod)
var_11295 = relay.var("var_11295", dtype = "float32", shape = (70, 4))#candidate|11295|(70, 4)|var|float32
output = func_11294(var_11295)
func_11296 = relay.Function([var_11295], output)
mutated_mod['func_11296'] = func_11296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11175_call = mod.get_global_var('func_11175')
func_11177_call = mutated_mod.get_global_var('func_11177')
call_11298 = relay.TupleGetItem(func_11175_call(), 1)
call_11299 = relay.TupleGetItem(func_11177_call(), 1)
output = relay.Tuple([call_11298,])
output2 = relay.Tuple([call_11299,])
func_11313 = relay.Function([], output)
mod['func_11313'] = func_11313
mod = relay.transform.InferType()(mod)
output = func_11313()
func_11314 = relay.Function([], output)
mutated_mod['func_11314'] = func_11314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9828_call = mod.get_global_var('func_9828')
func_9830_call = mutated_mod.get_global_var('func_9830')
call_11321 = relay.TupleGetItem(func_9828_call(), 0)
call_11322 = relay.TupleGetItem(func_9830_call(), 0)
func_10613_call = mod.get_global_var('func_10613')
func_10615_call = mutated_mod.get_global_var('func_10615')
call_11326 = func_10613_call()
call_11327 = func_10613_call()
output = relay.Tuple([call_11321,call_11326,])
output2 = relay.Tuple([call_11322,call_11327,])
func_11334 = relay.Function([], output)
mod['func_11334'] = func_11334
mod = relay.transform.InferType()(mod)
mutated_mod['func_11334'] = func_11334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11334_call = mutated_mod.get_global_var('func_11334')
call_11335 = func_11334_call()
output = call_11335
func_11336 = relay.Function([], output)
mutated_mod['func_11336'] = func_11336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10813_call = mod.get_global_var('func_10813')
func_10815_call = mutated_mod.get_global_var('func_10815')
call_11339 = relay.TupleGetItem(func_10813_call(), 1)
call_11340 = relay.TupleGetItem(func_10815_call(), 1)
var_11348 = relay.var("var_11348", dtype = "bool", shape = (7, 154))#candidate|11348|(7, 154)|var|bool
bop_11349 = relay.bitwise_or(call_11339.astype('int32'), relay.reshape(var_11348.astype('int32'), relay.shape_of(call_11339))) # shape=(7, 154)
bop_11352 = relay.bitwise_or(call_11340.astype('int32'), relay.reshape(var_11348.astype('int32'), relay.shape_of(call_11340))) # shape=(7, 154)
uop_11356 = relay.cos(var_11348.astype('float32')) # shape=(7, 154)
bop_11361 = relay.less_equal(uop_11356.astype('bool'), relay.reshape(var_11348.astype('bool'), relay.shape_of(uop_11356))) # shape=(7, 154)
bop_11375 = relay.greater(bop_11361.astype('bool'), relay.reshape(uop_11356.astype('bool'), relay.shape_of(bop_11361))) # shape=(7, 154)
uop_11382 = relay.acosh(var_11348.astype('float32')) # shape=(7, 154)
output = relay.Tuple([bop_11349,bop_11375,uop_11382,])
output2 = relay.Tuple([bop_11352,bop_11375,uop_11382,])
func_11384 = relay.Function([var_11348,], output)
mod['func_11384'] = func_11384
mod = relay.transform.InferType()(mod)
var_11385 = relay.var("var_11385", dtype = "bool", shape = (7, 154))#candidate|11385|(7, 154)|var|bool
output = func_11384(var_11385)
func_11386 = relay.Function([var_11385], output)
mutated_mod['func_11386'] = func_11386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11334_call = mod.get_global_var('func_11334')
func_11336_call = mutated_mod.get_global_var('func_11336')
call_11399 = relay.TupleGetItem(func_11334_call(), 1)
call_11400 = relay.TupleGetItem(func_11336_call(), 1)
output = relay.Tuple([call_11399,])
output2 = relay.Tuple([call_11400,])
func_11404 = relay.Function([], output)
mod['func_11404'] = func_11404
mod = relay.transform.InferType()(mod)
output = func_11404()
func_11405 = relay.Function([], output)
mutated_mod['func_11405'] = func_11405
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11488 = relay.var("var_11488", dtype = "int64", shape = (7, 6, 14))#candidate|11488|(7, 6, 14)|var|int64
var_11489 = relay.var("var_11489", dtype = "int64", shape = (7, 6, 14))#candidate|11489|(7, 6, 14)|var|int64
bop_11490 = relay.right_shift(var_11488.astype('int64'), relay.reshape(var_11489.astype('int64'), relay.shape_of(var_11488))) # shape=(7, 6, 14)
output = relay.Tuple([bop_11490,])
output2 = relay.Tuple([bop_11490,])
func_11498 = relay.Function([var_11488,var_11489,], output)
mod['func_11498'] = func_11498
mod = relay.transform.InferType()(mod)
mutated_mod['func_11498'] = func_11498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11498_call = mutated_mod.get_global_var('func_11498')
var_11500 = relay.var("var_11500", dtype = "int64", shape = (7, 6, 14))#candidate|11500|(7, 6, 14)|var|int64
var_11501 = relay.var("var_11501", dtype = "int64", shape = (7, 6, 14))#candidate|11501|(7, 6, 14)|var|int64
call_11499 = func_11498_call(var_11500,var_11501,)
output = call_11499
func_11502 = relay.Function([var_11500,var_11501,], output)
mutated_mod['func_11502'] = func_11502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9099_call = mod.get_global_var('func_9099')
func_9100_call = mutated_mod.get_global_var('func_9100')
call_11527 = relay.TupleGetItem(func_9099_call(), 0)
call_11528 = relay.TupleGetItem(func_9100_call(), 0)
uop_11544 = relay.cosh(call_11527.astype('float64')) # shape=(5, 3, 9)
uop_11546 = relay.cosh(call_11528.astype('float64')) # shape=(5, 3, 9)
func_10585_call = mod.get_global_var('func_10585')
func_10586_call = mutated_mod.get_global_var('func_10586')
call_11552 = relay.TupleGetItem(func_10585_call(), 0)
call_11553 = relay.TupleGetItem(func_10586_call(), 0)
output = relay.Tuple([uop_11544,call_11552,])
output2 = relay.Tuple([uop_11546,call_11553,])
func_11579 = relay.Function([], output)
mod['func_11579'] = func_11579
mod = relay.transform.InferType()(mod)
mutated_mod['func_11579'] = func_11579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11579_call = mutated_mod.get_global_var('func_11579')
call_11580 = func_11579_call()
output = call_11580
func_11581 = relay.Function([], output)
mutated_mod['func_11581'] = func_11581
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11599 = relay.var("var_11599", dtype = "float32", shape = ())#candidate|11599|()|var|float32
var_11600 = relay.var("var_11600", dtype = "float32", shape = (4, 4, 13))#candidate|11600|(4, 4, 13)|var|float32
bop_11601 = relay.mod(var_11599.astype('float32'), var_11600.astype('float32')) # shape=(4, 4, 13)
func_9088_call = mod.get_global_var('func_9088')
func_9091_call = mutated_mod.get_global_var('func_9091')
var_11616 = relay.var("var_11616", dtype = "uint32", shape = (1, 77))#candidate|11616|(1, 77)|var|uint32
call_11615 = relay.TupleGetItem(func_9088_call(relay.reshape(var_11616.astype('uint32'), [77,])), 0)
call_11617 = relay.TupleGetItem(func_9091_call(relay.reshape(var_11616.astype('uint32'), [77,])), 0)
bop_11618 = relay.floor_mod(var_11599.astype('float64'), bop_11601.astype('float64')) # shape=(4, 4, 13)
bop_11623 = relay.less(var_11616.astype('bool'), var_11599.astype('bool')) # shape=(1, 77)
func_1698_call = mod.get_global_var('func_1698')
func_1702_call = mutated_mod.get_global_var('func_1702')
var_11632 = relay.var("var_11632", dtype = "int64", shape = (13, 4))#candidate|11632|(13, 4)|var|int64
var_11633 = relay.var("var_11633", dtype = "float32", shape = (2352,))#candidate|11633|(2352,)|var|float32
call_11631 = relay.TupleGetItem(func_1698_call(relay.reshape(var_11599.astype('int64'), []), relay.reshape(var_11632.astype('int64'), [13, 4, 1]), relay.reshape(var_11633.astype('float32'), [84, 28]), ), 2)
call_11634 = relay.TupleGetItem(func_1702_call(relay.reshape(var_11599.astype('int64'), []), relay.reshape(var_11632.astype('int64'), [13, 4, 1]), relay.reshape(var_11633.astype('float32'), [84, 28]), ), 2)
output = relay.Tuple([call_11615,bop_11618,bop_11623,call_11631,var_11632,var_11633,])
output2 = relay.Tuple([call_11617,bop_11618,bop_11623,call_11634,var_11632,var_11633,])
func_11639 = relay.Function([var_11599,var_11600,var_11616,var_11632,var_11633,], output)
mod['func_11639'] = func_11639
mod = relay.transform.InferType()(mod)
var_11640 = relay.var("var_11640", dtype = "float32", shape = ())#candidate|11640|()|var|float32
var_11641 = relay.var("var_11641", dtype = "float32", shape = (4, 4, 13))#candidate|11641|(4, 4, 13)|var|float32
var_11642 = relay.var("var_11642", dtype = "uint32", shape = (1, 77))#candidate|11642|(1, 77)|var|uint32
var_11643 = relay.var("var_11643", dtype = "int64", shape = (13, 4))#candidate|11643|(13, 4)|var|int64
var_11644 = relay.var("var_11644", dtype = "float32", shape = (2352,))#candidate|11644|(2352,)|var|float32
output = func_11639(var_11640,var_11641,var_11642,var_11643,var_11644,)
func_11645 = relay.Function([var_11640,var_11641,var_11642,var_11643,var_11644,], output)
mutated_mod['func_11645'] = func_11645
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11670 = relay.var("var_11670", dtype = "float64", shape = (8, 14, 3))#candidate|11670|(8, 14, 3)|var|float64
uop_11671 = relay.log(var_11670.astype('float64')) # shape=(8, 14, 3)
func_9634_call = mod.get_global_var('func_9634')
func_9636_call = mutated_mod.get_global_var('func_9636')
call_11682 = relay.TupleGetItem(func_9634_call(), 0)
call_11683 = relay.TupleGetItem(func_9636_call(), 0)
func_9512_call = mod.get_global_var('func_9512')
func_9513_call = mutated_mod.get_global_var('func_9513')
call_11691 = relay.TupleGetItem(func_9512_call(), 0)
call_11692 = relay.TupleGetItem(func_9513_call(), 0)
uop_11706 = relay.cos(uop_11671.astype('float32')) # shape=(8, 14, 3)
output = relay.Tuple([call_11682,call_11691,uop_11706,])
output2 = relay.Tuple([call_11683,call_11692,uop_11706,])
func_11714 = relay.Function([var_11670,], output)
mod['func_11714'] = func_11714
mod = relay.transform.InferType()(mod)
mutated_mod['func_11714'] = func_11714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11715 = relay.var("var_11715", dtype = "float64", shape = (8, 14, 3))#candidate|11715|(8, 14, 3)|var|float64
func_11714_call = mutated_mod.get_global_var('func_11714')
call_11716 = func_11714_call(var_11715)
output = call_11716
func_11717 = relay.Function([var_11715], output)
mutated_mod['func_11717'] = func_11717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11175_call = mod.get_global_var('func_11175')
func_11177_call = mutated_mod.get_global_var('func_11177')
call_11730 = relay.TupleGetItem(func_11175_call(), 0)
call_11731 = relay.TupleGetItem(func_11177_call(), 0)
output = relay.Tuple([call_11730,])
output2 = relay.Tuple([call_11731,])
func_11747 = relay.Function([], output)
mod['func_11747'] = func_11747
mod = relay.transform.InferType()(mod)
output = func_11747()
func_11748 = relay.Function([], output)
mutated_mod['func_11748'] = func_11748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11163_call = mod.get_global_var('func_11163')
func_11164_call = mutated_mod.get_global_var('func_11164')
call_11805 = func_11163_call()
call_11806 = func_11163_call()
var_11809 = relay.var("var_11809", dtype = "float32", shape = (70, 4))#candidate|11809|(70, 4)|var|float32
bop_11810 = relay.bitwise_and(call_11805.astype('int8'), relay.reshape(var_11809.astype('int8'), relay.shape_of(call_11805))) # shape=(70, 4)
bop_11813 = relay.bitwise_and(call_11806.astype('int8'), relay.reshape(var_11809.astype('int8'), relay.shape_of(call_11806))) # shape=(70, 4)
func_6881_call = mod.get_global_var('func_6881')
func_6885_call = mutated_mod.get_global_var('func_6885')
const_11827 = relay.const(4.030091, dtype = "float32")#candidate|11827|()|const|float32
call_11826 = func_6881_call(relay.reshape(const_11827.astype('float32'), []), relay.reshape(var_11809.astype('float32'), [7, 10, 4]), )
call_11828 = func_6881_call(relay.reshape(const_11827.astype('float32'), []), relay.reshape(var_11809.astype('float32'), [7, 10, 4]), )
bop_11833 = relay.add(call_11805.astype('float64'), relay.reshape(var_11809.astype('float64'), relay.shape_of(call_11805))) # shape=(70, 4)
bop_11836 = relay.add(call_11806.astype('float64'), relay.reshape(var_11809.astype('float64'), relay.shape_of(call_11806))) # shape=(70, 4)
uop_11838 = relay.log(bop_11810.astype('float64')) # shape=(70, 4)
uop_11840 = relay.log(bop_11813.astype('float64')) # shape=(70, 4)
output = relay.Tuple([call_11826,const_11827,bop_11833,uop_11838,])
output2 = relay.Tuple([call_11828,const_11827,bop_11836,uop_11840,])
func_11841 = relay.Function([var_11809,], output)
mod['func_11841'] = func_11841
mod = relay.transform.InferType()(mod)
var_11842 = relay.var("var_11842", dtype = "float32", shape = (70, 4))#candidate|11842|(70, 4)|var|float32
output = func_11841(var_11842)
func_11843 = relay.Function([var_11842], output)
mutated_mod['func_11843'] = func_11843
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11849 = relay.var("var_11849", dtype = "int16", shape = (6, 12, 13))#candidate|11849|(6, 12, 13)|var|int16
var_11850 = relay.var("var_11850", dtype = "int16", shape = (6, 12, 13))#candidate|11850|(6, 12, 13)|var|int16
bop_11851 = relay.less_equal(var_11849.astype('bool'), relay.reshape(var_11850.astype('bool'), relay.shape_of(var_11849))) # shape=(6, 12, 13)
func_7450_call = mod.get_global_var('func_7450')
func_7453_call = mutated_mod.get_global_var('func_7453')
const_11859 = relay.const([-6,-2,-9,-9,-6,6,3,-8,3,-7,-3,6,9,-5,7,-8,-6,-9,-7,-5,3,-9,-5,9,6,-3,-6,-8,-2,-5,10,2,-6,-4,1,-3,3,1,10,-5,7,-7,7,-10,-10,-8,8,8,-2,6,2,-8,-3,2,-10,-2,-5,1,-4,-2,4,5,-9,8,5,-5,-3,-1,-3,-2,10,-9,2,-8,1,-1,10,-8,8,2,-10,-8,9,1,-2,4,-8,-8,3,9,8,10,5,-8,-6,6,-5,-10,6,6,-6,-2,3,7,8,1,-5,3,-9,-4,-9,-10,7,-1,-1,2,7,-2,-6,8,4,-9,8,-10,2,1,-4,-8,-9,3,7,-9,-9,-7,-1], dtype = "int64")#candidate|11859|(135,)|const|int64
var_11860 = relay.var("var_11860", dtype = "float32", shape = (450,))#candidate|11860|(450,)|var|float32
call_11858 = relay.TupleGetItem(func_7450_call(relay.reshape(const_11859.astype('int64'), [5, 3, 9]), relay.reshape(var_11860.astype('float32'), [150, 3]), ), 2)
call_11861 = relay.TupleGetItem(func_7453_call(relay.reshape(const_11859.astype('int64'), [5, 3, 9]), relay.reshape(var_11860.astype('float32'), [150, 3]), ), 2)
uop_11863 = relay.tan(call_11858.astype('float32')) # shape=(150, 3)
uop_11865 = relay.tan(call_11861.astype('float32')) # shape=(150, 3)
var_11866 = relay.var("var_11866", dtype = "float32", shape = (150, 3))#candidate|11866|(150, 3)|var|float32
bop_11867 = relay.divide(uop_11863.astype('float64'), relay.reshape(var_11866.astype('float64'), relay.shape_of(uop_11863))) # shape=(150, 3)
bop_11870 = relay.divide(uop_11865.astype('float64'), relay.reshape(var_11866.astype('float64'), relay.shape_of(uop_11865))) # shape=(150, 3)
output = relay.Tuple([bop_11851,const_11859,var_11860,bop_11867,])
output2 = relay.Tuple([bop_11851,const_11859,var_11860,bop_11870,])
func_11875 = relay.Function([var_11849,var_11850,var_11860,var_11866,], output)
mod['func_11875'] = func_11875
mod = relay.transform.InferType()(mod)
var_11876 = relay.var("var_11876", dtype = "int16", shape = (6, 12, 13))#candidate|11876|(6, 12, 13)|var|int16
var_11877 = relay.var("var_11877", dtype = "int16", shape = (6, 12, 13))#candidate|11877|(6, 12, 13)|var|int16
var_11878 = relay.var("var_11878", dtype = "float32", shape = (450,))#candidate|11878|(450,)|var|float32
var_11879 = relay.var("var_11879", dtype = "float32", shape = (150, 3))#candidate|11879|(150, 3)|var|float32
output = func_11875(var_11876,var_11877,var_11878,var_11879,)
func_11880 = relay.Function([var_11876,var_11877,var_11878,var_11879,], output)
mutated_mod['func_11880'] = func_11880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9685_call = mod.get_global_var('func_9685')
func_9686_call = mutated_mod.get_global_var('func_9686')
call_11895 = relay.TupleGetItem(func_9685_call(), 0)
call_11896 = relay.TupleGetItem(func_9686_call(), 0)
func_9803_call = mod.get_global_var('func_9803')
func_9805_call = mutated_mod.get_global_var('func_9805')
const_11899 = relay.const([-6,8,3,8,1,-2,8,-9,-4,3,1,8,10,10,-7,2,7,9,3,-2,3,-1,-5,-4,-7,2,-1,-4,2,-6,2,-10,7,-2,9,7,9,5,-10,3,-5,5,-5,-8,-2,4,10,4,-5,8,-2,6,-2,-3,9,10,-1,2,4,1,-4,-2,8,4,6,-7,-6,8,-3,10,9,6,7,-5,7,8,10,-6,10,4,-1,-2,6,-4,-3,9,-8,-1,2,-7,2,10,7,-4,7,1,-1,-4,-5,3,5,-1,8,8,-7,-9,-10,3,-7,4,-5,2,10,-10,-4,-4,-7,-2,6,-5,4,-4,-6,-4,1,7,-3,-1,-4,-1,-6,-9,-9,-7,2,-7,-7,3,-5,-6,-4,-4,3,1,8,6,-6,-6,6,7,-5,-6,-5,-8,5,1,-9,6,2,-9,-9,6,-10,10,6,-5,4,-5,-10,3,5,3,-1,-5,-6,5,9,-3,-6,4,2,2,1,-7,8,-4,-4,-8,8,9,-10,-1,10,6,9,-7,-1,7,6,-3,-5,-9,6,5,-3,-7,-3,-1,-6,-6,-9,6,-1,2,-10,-2,-1,-6,-10,-8,7,7,-8,2,5,9,-10,6,9,-9,-4,-1,-3,2,10,-10,7,-9,-6,-9,9,-9,-2,-2,-4,7,3,-2,7,-4,4,-5,1,-8,-7,2,-4,4,-5,-6,-9,-4,10,-1,-10,5,-6,6,6,-8,10,8,-8,-1,-1,1,-9,2,-3,-6,5,8,4,1,-10,3,-9,-6,-7,2,-4,-8,10,-2,-3,7,-2,9,10,7,1,10,3,8,4,8,5,-1,-5,9,3,-6,-2,2,9,2,9,9,-7,-2,9,1,7,8,-6,2,2,8,-4,-5,-10,-2,-8,-3,-10,-8,-8,-2,10,8,6,7,7,3,6,4,-5,-6,-9,-10,7,-9,-4,9,2,1,-7,-7,4,8,10,-7,-10,9,-4,-10,6,4,-2,-5,-10,4,7,-6,3,-2,-7,9,-3,-1,-9,6,2,-5,-4,-1,-9,6,6,10,5,2,2,-1,2,-2,5,-6,9,-3,4,-1,-9,-2,8,-4,-5,-7,2,1,-2,-6,-10,-3,-6,6,-8,-6,6,2,9,9,4,10,-3,-9,4,1,-8,5,-9,-7,-7,-4,10,-9,1,4,3,1,-4,3,8,2,-8,-1,7,4,10,9,5,10,5,5,-7,-3,9,-1,-10,4,-1,5,-4,3,10,-3,-9,4,6,-1,-6,-5,2,1,-10,-2,-9,-8,7,-6,-3,-3,-3,-8,6,3,8,6,-6,4,1,7,-2,-4,4,9,10,-2,8,-1,3,-6,-2,1,-9,-3,10,2,-5,-2,-8,-8,2,1,-2,-8,-6,6,-9,5,-1,-10,-10,-4,1,-4,8,1,-2,3,7,-10,6,-1,4,-2,-8,-9,-7,1,-8,10,7,-7,-4,-6,10,3,4,10,2,7,6,-8,9,-2,-6,-3,4,3,-10,10,-5,-7,-7,-10,-1,-2,-3,10,10,8,-4,1,3,-7,-3,5,8,-10,9,7,-9,6,9,-3,-8,7,4,-2,-1,3,4,3,-10,-10,-3,10,7,-3,10,5,6,9,-9,-10,10,4,1,-7,-10,-1,-3,2,-5,-6,10,-2,-5,-10,-4,5,-4,-7,8,-8,-8,-1,10,-2,-10,-9,-10,-1,-3,-1,3,-10,-7,-4,10,3,-10,10,-8,4,-1,-10,-5,-9,-2,-7,6,-2,6,-10,-9,-4,-7,-1,-7,7,-10,-2,-8,5,-9,4,4,10,3,6,-5,3,5,1,8,1,-2,3,1,-9,2,8,1,-6,10,-6,-10,-6,-2,-8,-2,-8,-1,-6,9,-5,-1,7,-10,6,-2,-2,-3,9,7,6,6,6,5,10,-9,2,-7,-10,1,7,-8,8,-9,-7,-6,-6,6,-8,5,-2,-2,-2,5,-5,8,2,1,7,8,-8,6,-7,-5,-3,4,3,-2,-4,-9,-5,-9,4,8,-1,7,1,3,-8,-4,1,6,3,-10,-5,5,7,9,-5,-3,3,8,-5,-3,-3,4,6,-9,8,-7,-10,4,-8,9,8,-4,5,-7,6,3,-9,-5,-7,-8,-6,5,-9,5,2,5,-9,-10,-2,5,7,7,-5,4,7,-4,-9,2,9,-7,5,-10,-10,7,7,10,-9,1,9,3,-7,2,-7,-4,-4,-7,5,-1,6,-9,-1,-9,7,-4,7,-4,-6,2,3,-2,-1,3,-4,2,-4,5,9,-8,7,-3,-3,3,-5,5,-3,4,3,9,-2,9,10,-3,-9,-5,5,3,7,7,10,-2,8,6,-5,-1,6,5,6,-6,9,3,1,1,-1,4,10,-4,-3,-2,-5,-5,2,8,-8,-5,6,-2,-4,-9,-1,8,-2,-2,5,5,-6,3,-2,8,-3,-8,10,10,-1,1,-3,-5,-1,1,-10,8,-9,-6,9,-1,-6,5,-7,8,-3,1,-7,-4,3,6,2,-1,-4,1,10,10,-1,10,10,-7,8,-3,-2,7,10,9,9,4,7,-1,-7,3,-5,-7,4,10,-10,8,7,7,1,3,6,-7,3,9,8,10,-6,10,1,-3,10,4,9,7,9,-3,-7,9,-8,-2,4,-2,10,-2,2,3,7,1,1,7,10,-7,10,-9,-6,-7,-6,3,-2,7,8,-6,-7,2,-9,-8,-3,-7,2,-3,8,9,8,-10,-6,-4,8,1,9,5,-6,-6,-9,2,-1,-10,-5,-3,-10,3,1,-10,7,6,7,-5,-4,2,6,-5,-10,-5,3,-8,-10,-8,-8,2,10,-1,-1,9,-9,-1,6,-1,-10,-1,-4,-5,-8,7,-1,-1,-1,7,-1,9,1,5,5], dtype = "uint32")#candidate|11899|(1078,)|const|uint32
call_11898 = relay.TupleGetItem(func_9803_call(relay.reshape(const_11899.astype('uint32'), [1, 1078])), 1)
call_11900 = relay.TupleGetItem(func_9805_call(relay.reshape(const_11899.astype('uint32'), [1, 1078])), 1)
uop_11905 = relay.log(call_11898.astype('float64')) # shape=(5, 3, 9)
uop_11907 = relay.log(call_11900.astype('float64')) # shape=(5, 3, 9)
func_9685_call = mod.get_global_var('func_9685')
func_9686_call = mutated_mod.get_global_var('func_9686')
call_11928 = relay.TupleGetItem(func_9685_call(), 0)
call_11929 = relay.TupleGetItem(func_9686_call(), 0)
output = relay.Tuple([call_11895,const_11899,uop_11905,call_11928,])
output2 = relay.Tuple([call_11896,const_11899,uop_11907,call_11929,])
func_11930 = relay.Function([], output)
mod['func_11930'] = func_11930
mod = relay.transform.InferType()(mod)
output = func_11930()
func_11931 = relay.Function([], output)
mutated_mod['func_11931'] = func_11931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11203_call = mod.get_global_var('func_11203')
func_11205_call = mutated_mod.get_global_var('func_11205')
call_11955 = func_11203_call()
call_11956 = func_11203_call()
output = call_11955
output2 = call_11956
func_11980 = relay.Function([], output)
mod['func_11980'] = func_11980
mod = relay.transform.InferType()(mod)
mutated_mod['func_11980'] = func_11980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11980_call = mutated_mod.get_global_var('func_11980')
call_11981 = func_11980_call()
output = call_11981
func_11982 = relay.Function([], output)
mutated_mod['func_11982'] = func_11982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7278_call = mod.get_global_var('func_7278')
func_7279_call = mutated_mod.get_global_var('func_7279')
call_12045 = relay.TupleGetItem(func_7278_call(), 4)
call_12046 = relay.TupleGetItem(func_7279_call(), 4)
var_12059 = relay.var("var_12059", dtype = "float64", shape = (66,))#candidate|12059|(66,)|var|float64
bop_12060 = relay.bitwise_or(call_12045.astype('uint8'), relay.reshape(var_12059.astype('uint8'), relay.shape_of(call_12045))) # shape=(66,)
bop_12063 = relay.bitwise_or(call_12046.astype('uint8'), relay.reshape(var_12059.astype('uint8'), relay.shape_of(call_12046))) # shape=(66,)
var_12069 = relay.var("var_12069", dtype = "float64", shape = (66,))#candidate|12069|(66,)|var|float64
bop_12070 = relay.logical_and(var_12059.astype('bool'), relay.reshape(var_12069.astype('bool'), relay.shape_of(var_12059))) # shape=(66,)
output = relay.Tuple([bop_12060,bop_12070,])
output2 = relay.Tuple([bop_12063,bop_12070,])
func_12075 = relay.Function([var_12059,var_12069,], output)
mod['func_12075'] = func_12075
mod = relay.transform.InferType()(mod)
mutated_mod['func_12075'] = func_12075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12075_call = mutated_mod.get_global_var('func_12075')
var_12077 = relay.var("var_12077", dtype = "float64", shape = (66,))#candidate|12077|(66,)|var|float64
var_12078 = relay.var("var_12078", dtype = "float64", shape = (66,))#candidate|12078|(66,)|var|float64
call_12076 = func_12075_call(var_12077,var_12078,)
output = call_12076
func_12079 = relay.Function([var_12077,var_12078,], output)
mutated_mod['func_12079'] = func_12079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11579_call = mod.get_global_var('func_11579')
func_11581_call = mutated_mod.get_global_var('func_11581')
call_12127 = relay.TupleGetItem(func_11579_call(), 0)
call_12128 = relay.TupleGetItem(func_11581_call(), 0)
output = call_12127
output2 = call_12128
func_12173 = relay.Function([], output)
mod['func_12173'] = func_12173
mod = relay.transform.InferType()(mod)
mutated_mod['func_12173'] = func_12173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12173_call = mutated_mod.get_global_var('func_12173')
call_12174 = func_12173_call()
output = call_12174
func_12175 = relay.Function([], output)
mutated_mod['func_12175'] = func_12175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12296 = relay.var("var_12296", dtype = "float32", shape = ())#candidate|12296|()|var|float32
var_12297 = relay.var("var_12297", dtype = "float32", shape = (2, 15, 3))#candidate|12297|(2, 15, 3)|var|float32
bop_12298 = relay.mod(var_12296.astype('float32'), var_12297.astype('float32')) # shape=(2, 15, 3)
var_12320 = relay.var("var_12320", dtype = "float32", shape = (2, 15, 3))#candidate|12320|(2, 15, 3)|var|float32
bop_12321 = relay.logical_and(bop_12298.astype('bool'), relay.reshape(var_12320.astype('bool'), relay.shape_of(bop_12298))) # shape=(2, 15, 3)
func_11115_call = mod.get_global_var('func_11115')
func_11116_call = mutated_mod.get_global_var('func_11116')
call_12327 = func_11115_call()
call_12328 = func_11115_call()
func_10953_call = mod.get_global_var('func_10953')
func_10957_call = mutated_mod.get_global_var('func_10957')
const_12337 = relay.const([[-6,-8,-9,-1,5,7,-7,3,-6,9,-10,8,-5,-10,-2,10,3,1,3,2,5,10,-6,3,3,-9,-3,6,-4,2,1,6,-2,-7,-10,2,8,-9,-5,10,8,-3,-8,9,-5,10,5,-1,2,3,-7,-1,-9,3,5,-3,3,-4,-7,3,-5,8,-8,8,-7,3,-8,-10,5,2,-7,2,1,10,-8,9,-5,-5,6,-2,6,8,2,-10,3,6,7,9,2,7,2,3,-3,-10,-4,5,-10,4,4,8,8,-9,-1,-2,-8,5,4,-7,8,9,2,2,8,-3,-9,-10,-6,-1,-7,-2,-1,3,6,-4,9,-8,9,4,-3,-8,9,-9,-6,2,3,-6,-2,2,3,6,-3,-5,-2,10,6,-8,-7,-2,9,-6,-9,-9,-5,2,-10,10,-1,-6,1,-10,3,4,7,2,-9,8,-3,10,7,6,10,-9,-10,-6,10,-10,4,-2,9,4,-2,-7]], dtype = "int16")#candidate|12337|(1, 182)|const|int16
const_12338 = relay.const([-5,-8,-2,-4,9,-7,-6,9,-9,-9,3,-6,-7,1,-5,10,-7,-8,9,1,7,3,6,-9,-6,-7,-8,9,-3,-9,1,8,-10,-6,-2,8,-6,5,4,8,-4,-10,7,-8,-10,-9,-8,6,5,10,-8,9,7,5,-7,3,7,4,5,-6,-10,-5,-2,-10,-4,6,-7,5,6,9,-2,-7,-8,-4,-6,9,5,-6,-6,6,7,1,5,-9,-5,-8,-1,-7,-7,-5,3,-9,-7,-7,-3,4,-5,5,-10,-2,-3,3,5,-4,-2,3,2,-4,-9,3,-4,-4,-9,-8,1,3,10,9,-7,-6,-3,-6,5,3,3,-7,-2,-5,-8,-1,2,-5,3,6,9,1,-2,-7,9,10,8,8,-8,5,5,-5,2,-9,-5,5,8,-6,-2,-9,2,2,9,-10,-2,-3,10,6,-9,7,2,8,7,-4,6,10,5,8,4,10,-4,5,-2,-6,-7,-7,-8,-3,-10,5,-10,-5,-9,-10,-2,10,-3,8,7,-8,-10,7,9,-2,-7,-6,2,-4,4,-5,-4,2,10,-5,-5,-3], dtype = "int8")#candidate|12338|(210,)|const|int8
call_12336 = relay.TupleGetItem(func_10953_call(relay.reshape(var_12296.astype('int16'), []), relay.reshape(const_12337.astype('int16'), [182,]), relay.reshape(const_12338.astype('int8'), [210,]), ), 5)
call_12339 = relay.TupleGetItem(func_10957_call(relay.reshape(var_12296.astype('int16'), []), relay.reshape(const_12337.astype('int16'), [182,]), relay.reshape(const_12338.astype('int8'), [210,]), ), 5)
output = relay.Tuple([bop_12321,call_12327,call_12336,const_12337,const_12338,])
output2 = relay.Tuple([bop_12321,call_12328,call_12339,const_12337,const_12338,])
func_12349 = relay.Function([var_12296,var_12297,var_12320,], output)
mod['func_12349'] = func_12349
mod = relay.transform.InferType()(mod)
var_12350 = relay.var("var_12350", dtype = "float32", shape = ())#candidate|12350|()|var|float32
var_12351 = relay.var("var_12351", dtype = "float32", shape = (2, 15, 3))#candidate|12351|(2, 15, 3)|var|float32
var_12352 = relay.var("var_12352", dtype = "float32", shape = (2, 15, 3))#candidate|12352|(2, 15, 3)|var|float32
output = func_12349(var_12350,var_12351,var_12352,)
func_12353 = relay.Function([var_12350,var_12351,var_12352,], output)
mutated_mod['func_12353'] = func_12353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_12376 = relay.TupleGetItem(func_7042_call(), 0)
call_12377 = relay.TupleGetItem(func_7044_call(), 0)
output = relay.Tuple([call_12376,])
output2 = relay.Tuple([call_12377,])
func_12384 = relay.Function([], output)
mod['func_12384'] = func_12384
mod = relay.transform.InferType()(mod)
output = func_12384()
func_12385 = relay.Function([], output)
mutated_mod['func_12385'] = func_12385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8289_call = mod.get_global_var('func_8289')
func_8290_call = mutated_mod.get_global_var('func_8290')
call_12400 = func_8289_call()
call_12401 = func_8289_call()
output = call_12400
output2 = call_12401
func_12402 = relay.Function([], output)
mod['func_12402'] = func_12402
mod = relay.transform.InferType()(mod)
output = func_12402()
func_12403 = relay.Function([], output)
mutated_mod['func_12403'] = func_12403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11404_call = mod.get_global_var('func_11404')
func_11405_call = mutated_mod.get_global_var('func_11405')
call_12407 = relay.TupleGetItem(func_11404_call(), 0)
call_12408 = relay.TupleGetItem(func_11405_call(), 0)
output = call_12407
output2 = call_12408
func_12410 = relay.Function([], output)
mod['func_12410'] = func_12410
mod = relay.transform.InferType()(mod)
output = func_12410()
func_12411 = relay.Function([], output)
mutated_mod['func_12411'] = func_12411
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12554 = relay.var("var_12554", dtype = "float64", shape = (6, 3, 7))#candidate|12554|(6, 3, 7)|var|float64
uop_12555 = relay.atan(var_12554.astype('float64')) # shape=(6, 3, 7)
uop_12559 = relay.atanh(uop_12555.astype('float64')) # shape=(6, 3, 7)
output = uop_12559
output2 = uop_12559
func_12565 = relay.Function([var_12554,], output)
mod['func_12565'] = func_12565
mod = relay.transform.InferType()(mod)
mutated_mod['func_12565'] = func_12565
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12566 = relay.var("var_12566", dtype = "float64", shape = (6, 3, 7))#candidate|12566|(6, 3, 7)|var|float64
func_12565_call = mutated_mod.get_global_var('func_12565')
call_12567 = func_12565_call(var_12566)
output = call_12567
func_12568 = relay.Function([var_12566], output)
mutated_mod['func_12568'] = func_12568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10037_call = mod.get_global_var('func_10037')
func_10039_call = mutated_mod.get_global_var('func_10039')
call_12583 = relay.TupleGetItem(func_10037_call(), 1)
call_12584 = relay.TupleGetItem(func_10039_call(), 1)
func_10107_call = mod.get_global_var('func_10107')
func_10112_call = mutated_mod.get_global_var('func_10112')
var_12586 = relay.var("var_12586", dtype = "int16", shape = ())#candidate|12586|()|var|int16
var_12587 = relay.var("var_12587", dtype = "int16", shape = (182,))#candidate|12587|(182,)|var|int16
const_12588 = relay.const([-1,3,-1,6,-9,8,-1,-2,-9,-8,7,8,7,-2,-10,-7,5,10,2,4,3,5,6,2,2,-6,9,-7,-1,-9,4,-3,-5,5,-9,7,2,-5,-9,-6,6,2,-6,-2,-7,-10,-7,2,-6,-9,5,-10,-10,-7,-3,-10,7,-4,10,-9,-9,2,2,9,-10,-6,6,3,-10,-3,-5,1,4,2,3,2,10,1,-7,-9,-1,-3,-10,1,7,10,6,6,9,5,-9,6,-3,1,-9,7,7,5,6,-7,9,-7,-1,8,-10,1,-1,1,4,-4,-6,3,10,-3,5,9,9,10,10,-9,-10,-2,-9,-3,-8,-8,-7,-8,-10,-3,-10,10,10,-9,-7,-1,-3,7,9,-7,-8,-1,-9,-2,-9,3,-9,9,2,-10,-10,-7,7,7,8,2,10,-1,-2,7,9,-1,2,8,7,4,-8,-10,-8,10,10,2,-5,10,-9,9,8,8,7,7,-3,-3,3,7,-10,-9,-9,2,-5,3,1,4,1,1,-6,-4,-9,-2,-10,-8,-6,-3,-6,-10,1,-7,-5,-4,-10,6], dtype = "int8")#candidate|12588|(210,)|const|int8
call_12585 = relay.TupleGetItem(func_10107_call(relay.reshape(var_12586.astype('int16'), []), relay.reshape(var_12587.astype('int16'), [1, 13, 14]), relay.reshape(const_12588.astype('int8'), [1, 210]), ), 0)
call_12589 = relay.TupleGetItem(func_10112_call(relay.reshape(var_12586.astype('int16'), []), relay.reshape(var_12587.astype('int16'), [1, 13, 14]), relay.reshape(const_12588.astype('int8'), [1, 210]), ), 0)
func_11747_call = mod.get_global_var('func_11747')
func_11748_call = mutated_mod.get_global_var('func_11748')
call_12590 = relay.TupleGetItem(func_11747_call(), 0)
call_12591 = relay.TupleGetItem(func_11748_call(), 0)
func_12349_call = mod.get_global_var('func_12349')
func_12353_call = mutated_mod.get_global_var('func_12353')
const_12594 = relay.const([1.921950,-1.694284,5.307277,2.333592,-2.418874,9.177023,5.805300,-8.445924,-0.578424,8.251526,5.027067,2.709502,-4.750122,-8.851097,1.297665,-4.156262,7.306255,4.753921,-5.054811,7.982641,-0.531297,-1.705530,-6.731102,-2.034829,-3.472805,-3.833008,8.649362,-3.682477,-2.459521,-0.299298,9.671065,-4.636297,6.304167,9.711305,-4.377986,-4.509438,1.428311,-1.981938,9.945928,1.958993,4.818327,4.412462,7.003717,-3.662148,1.132973,0.563387,3.623398,5.364337,-3.787440,5.082955,5.331699,0.096671,-4.632540,-5.422463,6.863609,0.253860,0.985206,6.187649,5.705348,-7.400171,-2.955809,2.064071,-9.434692,0.837174,9.687989,8.192056,-9.466033,1.945703,4.746569,2.932408,7.989318,8.549192,6.761839,-6.987782,-9.969646,7.662489,-8.791829,8.747510,9.412201,6.022505,2.631516,1.746404,-8.120100,-8.788000,-7.980490,-7.884585,6.390218,6.400387,-5.544967,0.888618], dtype = "float32")#candidate|12594|(90,)|const|float32
call_12593 = relay.TupleGetItem(func_12349_call(relay.reshape(var_12586.astype('float32'), []), relay.reshape(const_12594.astype('float32'), [2, 15, 3]), relay.reshape(const_12594.astype('float32'), [2, 15, 3]), ), 3)
call_12595 = relay.TupleGetItem(func_12353_call(relay.reshape(var_12586.astype('float32'), []), relay.reshape(const_12594.astype('float32'), [2, 15, 3]), relay.reshape(const_12594.astype('float32'), [2, 15, 3]), ), 3)
func_4078_call = mod.get_global_var('func_4078')
func_4081_call = mutated_mod.get_global_var('func_4081')
var_12598 = relay.var("var_12598", dtype = "float64", shape = (11, 6))#candidate|12598|(11, 6)|var|float64
call_12597 = relay.TupleGetItem(func_4078_call(relay.reshape(var_12598.astype('float64'), [2, 3, 11]), relay.reshape(const_12588.astype('int8'), [210,]), ), 2)
call_12599 = relay.TupleGetItem(func_4081_call(relay.reshape(var_12598.astype('float64'), [2, 3, 11]), relay.reshape(const_12588.astype('int8'), [210,]), ), 2)
output = relay.Tuple([call_12583,call_12585,var_12586,var_12587,const_12588,call_12590,call_12593,const_12594,call_12597,var_12598,])
output2 = relay.Tuple([call_12584,call_12589,var_12586,var_12587,const_12588,call_12591,call_12595,const_12594,call_12599,var_12598,])
func_12633 = relay.Function([var_12586,var_12587,var_12598,], output)
mod['func_12633'] = func_12633
mod = relay.transform.InferType()(mod)
mutated_mod['func_12633'] = func_12633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12633_call = mutated_mod.get_global_var('func_12633')
var_12635 = relay.var("var_12635", dtype = "int16", shape = ())#candidate|12635|()|var|int16
var_12636 = relay.var("var_12636", dtype = "int16", shape = (182,))#candidate|12636|(182,)|var|int16
var_12637 = relay.var("var_12637", dtype = "float64", shape = (11, 6))#candidate|12637|(11, 6)|var|float64
call_12634 = func_12633_call(var_12635,var_12636,var_12637,)
output = call_12634
func_12638 = relay.Function([var_12635,var_12636,var_12637,], output)
mutated_mod['func_12638'] = func_12638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9685_call = mod.get_global_var('func_9685')
func_9686_call = mutated_mod.get_global_var('func_9686')
call_12749 = relay.TupleGetItem(func_9685_call(), 0)
call_12750 = relay.TupleGetItem(func_9686_call(), 0)
output = relay.Tuple([call_12749,])
output2 = relay.Tuple([call_12750,])
func_12756 = relay.Function([], output)
mod['func_12756'] = func_12756
mod = relay.transform.InferType()(mod)
output = func_12756()
func_12757 = relay.Function([], output)
mutated_mod['func_12757'] = func_12757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12772 = relay.var("var_12772", dtype = "float32", shape = (16, 15, 9))#candidate|12772|(16, 15, 9)|var|float32
uop_12773 = relay.atan(var_12772.astype('float32')) # shape=(16, 15, 9)
bop_12776 = relay.power(uop_12773.astype('float64'), relay.reshape(var_12772.astype('float64'), relay.shape_of(uop_12773))) # shape=(16, 15, 9)
uop_12817 = relay.sinh(uop_12773.astype('float32')) # shape=(16, 15, 9)
output = relay.Tuple([bop_12776,uop_12817,])
output2 = relay.Tuple([bop_12776,uop_12817,])
func_12830 = relay.Function([var_12772,], output)
mod['func_12830'] = func_12830
mod = relay.transform.InferType()(mod)
mutated_mod['func_12830'] = func_12830
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12831 = relay.var("var_12831", dtype = "float32", shape = (16, 15, 9))#candidate|12831|(16, 15, 9)|var|float32
func_12830_call = mutated_mod.get_global_var('func_12830')
call_12832 = func_12830_call(var_12831)
output = call_12832
func_12833 = relay.Function([var_12831], output)
mutated_mod['func_12833'] = func_12833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9479_call = mod.get_global_var('func_9479')
func_9480_call = mutated_mod.get_global_var('func_9480')
call_12837 = relay.TupleGetItem(func_9479_call(), 0)
call_12838 = relay.TupleGetItem(func_9480_call(), 0)
func_7799_call = mod.get_global_var('func_7799')
func_7800_call = mutated_mod.get_global_var('func_7800')
call_12839 = relay.TupleGetItem(func_7799_call(), 0)
call_12840 = relay.TupleGetItem(func_7800_call(), 0)
func_7042_call = mod.get_global_var('func_7042')
func_7044_call = mutated_mod.get_global_var('func_7044')
call_12850 = relay.TupleGetItem(func_7042_call(), 0)
call_12851 = relay.TupleGetItem(func_7044_call(), 0)
func_10419_call = mod.get_global_var('func_10419')
func_10421_call = mutated_mod.get_global_var('func_10421')
call_12853 = func_10419_call()
call_12854 = func_10419_call()
func_11498_call = mod.get_global_var('func_11498')
func_11502_call = mutated_mod.get_global_var('func_11502')
const_12868 = relay.const([7,4,-1,-2,-7,7,7,5,-2,-10,-3,-7,-6,5,6,-7,4,-5,-6,9,7,-9,8,6,6,-3,2,6,-4,1,-10,2,-10,1,5,-9,8,9,-1,5,2,6,7,-3,10,-2,-2,6,-1,-8,-7,-9,5,10,-4,1,5,9,9,7,-3,2,3,-9,-5,9,4,-6,7,-4,4,-6,-5,3,6,-5,-8,6,3,4,-2,9,-2,-6,-2,9,-8,-7,9,-6,1,-3,8,-8,5,-10,-6,5,-5,-8,-1,-5,3,1,3,8,1,-2,-3,4,4,-6,-3,10,-4,-7,7,-6,-5,2,-8,-3,-4,-10,9,6,7,6,5,-2,-6,7,-2,-4,2,8,-8,1,-7,-8,6,-10,8,-7,-3,3,7,-5,-3,-5,-6,-6,-3,6,-9,-8,10,2,-3,-10,-5,8,-3,10,-3,-4,7,3,9,3,8,5,-7,-6,3,1,-3,9,-3,3,-3,4,6,-1,7,-3,5,-2,6,-5,8,-8,-6,-8,-7,6,7,-1,5,10,-7,-6,-4,5,8,8,7,-6,4,-5,-6,-10,-8,8,4,-7,2,1,2,5,-7,8,8,8,-10,4,3,9,-4,7,6,8,7,-5,7,-1,-2,10,-4,3,-3,-10,-10,10,-7,-1,-8,2,-10,4,-4,2,5,5,10,3,-4,10,1,7,6,10,8,-1,6,6,2,7,9,5,1,-5,-3,6,-6,2,2,-5,-4,9,-2,4,-2,-1,3,2,-6,-9,-3,-2,10,2,8,2,-6,3,-3,-3,-8,-6,2,6,-7,6,-10,1,-4,1,2,3,-4,5,-5,-2,3,-5,8,-3,-6,6,-9,5,-2,5,-2,2,-7,3,7,7,5,-7,3,9,10,5,-4,5,1,-4,8,-8,4,7,9,3,5,-7,9,8,-3,1,5,7,-5,8,-4,-10,-2,-2,-2,4,-7,8,9,7,10,9,-5,-1,5,6,8,2,3,-10,10,-4,7,3,7,7,-10,-3,3,5,-3,-1,-7,2,6,-6,-8,-3,10,10,-6,5,5,2,1,-8,-10,-9,2,8,-5,-8,5,-1,-7,-4,-10,-2,-10,1,-2,8,-9,-9,-10,1,-3,10,10,5,-2,4,-2,7,9,-3,-8,-2,-10,8,-8,-5,9,1,7,-1,-8,3,9,2,-7,-6,-8,1,-9,-5,-1,-10,-6,-2,-8,3,7,-6,3,2,-4,6,7,9,-8,5,-5,-2,7,-5,8,-8,4,-9,1,1,-10,-7,-4,-4,-1,2,5,8,-7,-4,-4,7,-8,7,8,7,4,-6,10,-9,-9,6,4,-6,10,-5,2,-2,-8,2,-8,-3,-2,-1,9,1,2,3,-5,8,-9,-10,6,-3,-3,-2,3,5,4,-6,-7,-2,6,8,6,-7,-8,-8,-10,-9,-6,-6,-6,-4,9,5,1,-9,-5,-8,-1,-6,3,3,4,6,1,-1,-5,9,-9,1,2,-6,-5,7,-1,-6,6,-8,1,2,-4,-1,8,-2,-4,6,3,2,8,7,-4,-6,4,3,-5,-9,8,9], dtype = "int64")#candidate|12868|(588,)|const|int64
call_12867 = relay.TupleGetItem(func_11498_call(relay.reshape(const_12868.astype('int64'), [7, 6, 14]), relay.reshape(const_12868.astype('int64'), [7, 6, 14]), ), 0)
call_12869 = relay.TupleGetItem(func_11502_call(relay.reshape(const_12868.astype('int64'), [7, 6, 14]), relay.reshape(const_12868.astype('int64'), [7, 6, 14]), ), 0)
output = relay.Tuple([call_12837,call_12839,call_12850,call_12853,call_12867,const_12868,])
output2 = relay.Tuple([call_12838,call_12840,call_12851,call_12854,call_12869,const_12868,])
func_12884 = relay.Function([], output)
mod['func_12884'] = func_12884
mod = relay.transform.InferType()(mod)
output = func_12884()
func_12885 = relay.Function([], output)
mutated_mod['func_12885'] = func_12885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12894 = relay.var("var_12894", dtype = "float64", shape = (13, 3, 7))#candidate|12894|(13, 3, 7)|var|float64
var_12895 = relay.var("var_12895", dtype = "float64", shape = (13, 3, 7))#candidate|12895|(13, 3, 7)|var|float64
bop_12896 = relay.floor_divide(var_12894.astype('float64'), relay.reshape(var_12895.astype('float64'), relay.shape_of(var_12894))) # shape=(13, 3, 7)
output = bop_12896
output2 = bop_12896
func_12912 = relay.Function([var_12894,var_12895,], output)
mod['func_12912'] = func_12912
mod = relay.transform.InferType()(mod)
mutated_mod['func_12912'] = func_12912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12912_call = mutated_mod.get_global_var('func_12912')
var_12914 = relay.var("var_12914", dtype = "float64", shape = (13, 3, 7))#candidate|12914|(13, 3, 7)|var|float64
var_12915 = relay.var("var_12915", dtype = "float64", shape = (13, 3, 7))#candidate|12915|(13, 3, 7)|var|float64
call_12913 = func_12912_call(var_12914,var_12915,)
output = call_12913
func_12916 = relay.Function([var_12914,var_12915,], output)
mutated_mod['func_12916'] = func_12916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12410_call = mod.get_global_var('func_12410')
func_12411_call = mutated_mod.get_global_var('func_12411')
call_12953 = func_12410_call()
call_12954 = func_12410_call()
uop_12961 = relay.tan(call_12953.astype('float32')) # shape=(70, 4)
uop_12963 = relay.tan(call_12954.astype('float32')) # shape=(70, 4)
uop_12968 = relay.rsqrt(call_12953.astype('float32')) # shape=(70, 4)
uop_12970 = relay.rsqrt(call_12954.astype('float32')) # shape=(70, 4)
bop_12971 = relay.maximum(uop_12968.astype('uint16'), relay.reshape(uop_12961.astype('uint16'), relay.shape_of(uop_12968))) # shape=(70, 4)
bop_12974 = relay.maximum(uop_12970.astype('uint16'), relay.reshape(uop_12963.astype('uint16'), relay.shape_of(uop_12970))) # shape=(70, 4)
bop_12977 = relay.floor_divide(uop_12961.astype('float32'), relay.reshape(uop_12968.astype('float32'), relay.shape_of(uop_12961))) # shape=(70, 4)
bop_12980 = relay.floor_divide(uop_12963.astype('float32'), relay.reshape(uop_12970.astype('float32'), relay.shape_of(uop_12963))) # shape=(70, 4)
output = relay.Tuple([bop_12971,bop_12977,])
output2 = relay.Tuple([bop_12974,bop_12980,])
func_12981 = relay.Function([], output)
mod['func_12981'] = func_12981
mod = relay.transform.InferType()(mod)
mutated_mod['func_12981'] = func_12981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12981_call = mutated_mod.get_global_var('func_12981')
call_12982 = func_12981_call()
output = call_12982
func_12983 = relay.Function([], output)
mutated_mod['func_12983'] = func_12983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9959_call = mod.get_global_var('func_9959')
func_9960_call = mutated_mod.get_global_var('func_9960')
call_12987 = func_9959_call()
call_12988 = func_9959_call()
func_239_call = mod.get_global_var('func_239')
func_243_call = mutated_mod.get_global_var('func_243')
var_12992 = relay.var("var_12992", dtype = "uint32", shape = (77,))#candidate|12992|(77,)|var|uint32
var_12993 = relay.var("var_12993", dtype = "uint32", shape = (1078,))#candidate|12993|(1078,)|var|uint32
call_12991 = relay.TupleGetItem(func_239_call(relay.reshape(var_12992.astype('uint32'), [1, 7, 11]), relay.reshape(var_12993.astype('uint32'), [14, 7, 11]), ), 1)
call_12994 = relay.TupleGetItem(func_243_call(relay.reshape(var_12992.astype('uint32'), [1, 7, 11]), relay.reshape(var_12993.astype('uint32'), [14, 7, 11]), ), 1)
const_13001 = relay.const([6,-8,5,10,-10,4,4,8,6,9,-1,2,-5,-2,-5,8,6,-8,-1,-10,7,-8,9,-10,-5,1,-7,-5,-1,-7,6,10,3,-5,-10,-5,9,6,1,-3,5,2,8,-4,6,7,-9,8,-7,-8,9,2,9,8,-5,6,-6,2,8,2,7,10,6,-10,2,-8,3,1,-7,2,1,-2,8,10,9,-2,1], dtype = "uint32")#candidate|13001|(77,)|const|uint32
bop_13002 = relay.bitwise_and(var_12992.astype('uint8'), relay.reshape(const_13001.astype('uint8'), relay.shape_of(var_12992))) # shape=(77,)
output = relay.Tuple([call_12987,call_12991,var_12993,bop_13002,])
output2 = relay.Tuple([call_12988,call_12994,var_12993,bop_13002,])
func_13014 = relay.Function([var_12992,var_12993,], output)
mod['func_13014'] = func_13014
mod = relay.transform.InferType()(mod)
mutated_mod['func_13014'] = func_13014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13014_call = mutated_mod.get_global_var('func_13014')
var_13016 = relay.var("var_13016", dtype = "uint32", shape = (77,))#candidate|13016|(77,)|var|uint32
var_13017 = relay.var("var_13017", dtype = "uint32", shape = (1078,))#candidate|13017|(1078,)|var|uint32
call_13015 = func_13014_call(var_13016,var_13017,)
output = call_13015
func_13018 = relay.Function([var_13016,var_13017,], output)
mutated_mod['func_13018'] = func_13018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8052_call = mod.get_global_var('func_8052')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_13112 = relay.TupleGetItem(func_8052_call(), 0)
call_13113 = relay.TupleGetItem(func_8053_call(), 0)
output = relay.Tuple([call_13112,])
output2 = relay.Tuple([call_13113,])
func_13136 = relay.Function([], output)
mod['func_13136'] = func_13136
mod = relay.transform.InferType()(mod)
output = func_13136()
func_13137 = relay.Function([], output)
mutated_mod['func_13137'] = func_13137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13136_call = mod.get_global_var('func_13136')
func_13137_call = mutated_mod.get_global_var('func_13137')
call_13141 = relay.TupleGetItem(func_13136_call(), 0)
call_13142 = relay.TupleGetItem(func_13137_call(), 0)
func_8697_call = mod.get_global_var('func_8697')
func_8701_call = mutated_mod.get_global_var('func_8701')
const_13161 = relay.const(6, dtype = "int64")#candidate|13161|()|const|int64
const_13162 = relay.const([-8,-6,1,-2,-7,-7,3,-2,2,-7,-2,-4,-8,-2,8,-6,2,-7,8,-5,8,-1,-2,9,4,1,-4,8,4,6,-9,-10,6,4,-9,-8,-5,-5,3,-8,-9,-2,6,4,-10,-3,1,-2,1,1,-6,-6,-10,-5,4,-10,4,7,-4,1,-9,4,8,-9,1,10,8,10,6,9,-1,-6,-2,7,1,-9,2,10,-7,-10,8,-8,7,-4,-3,4,3,1,10,1,-5,2,2,-9,3,-1,-3,-9,7,1,6,6,-5,5,4,-9,-6,6,4,-9,9,10,-9,10,10,-7,-9,6,-9,-1,6,-2,10,-10,-7,3,-1,6,2,7,7,10,7,10,-8,-1,-1,-9,-2,9,-2,-3,-7,-4,-5,3,-4,-10,3,-1,10,-7,4,6,-9,-5,-7,-1,-9,3,5,-6,3,4,-5,-8,8,8,3,7,-8,10,-3,8,-7,6,1,5,-7,9,-5,-8,2,4,-1,9,7,5,-2,2,5,5,1,9,10,-1,-5,-7,-7,4,4,-9,3,-1,-8,6,2,-1,-3,10,-8,-8,1,2,8,8,-1,5,3,-9,-10,4,8,4,6,3,-4,-9,-10,-5,-8,4,-9,1,6,1,-7,-7,-10,6,-6,10,-2,7,1,-2,-2,-8,5,5,1,7,-2,-5,-5,10,2,1,10,-7,9,-10,6,-4,-7,-2,4,10,-4,-8,-6,2,8,-3,3,-9,-9,-3,-7,8,5,-4,-9,-5,-1,-6,3,6,-3,-2,-9,1,10,-5,-3,2,-10,9,3,4,10,1,-8,-7,-6,-9,1,-2,-6,-9,7,8,-10,-1,-2,-6,-5,-8,-4,7,-5,4,8,9,5,6,-9,-1,3,1,7,8,4,8,-10,-9,-3,10,-3,9,7,9,-10,-7,2,-8,7,4,3,-1,-9,7,5,5,-8,-3,-10,5,5,-2,-1,-8,8,10,-4,-2,1,-4,1,-6,6,6,-2,-7,-2,-5,-1,9,-5,-9,-2,-1,-4,-1,8,4,7,-3,2,7,1,6,3,1,6,8,-5,-1,5,4,1,9,-1,-6,-2,-6,5,7,9,7,-10,-3,3,5,-10,-3,-8,-7,-7,-1,-8,-4,-9,2,-8,3,-3,4,4,7,-10,-3,5,7,-4,2,5,4,4,-4,-4,-2,-5,4,10,1,4,-8,3,2,4,-9,8,5,-9,6,-7,-10,-9,-10,-6,6,-7,8,10,9,-1,-4,-2,-3,-9,-4,-7,7,-1,-4,-1,8,5,-10,-7,10,7,-9,3,10,10,8,-10,-5,3,-9,-10,-2,4,-3,-9,1,6,-5,-1,-1,-10,-8,4,-3,-3,-3,1,1,7,8,-4,4,-10,-1,5,-2,2,5,-5,5,3,2,-1,-1,6,6,10,-2,-8,-9,-4,8,-5,2,-3,10,2,2,-5,-4,2,-1,-8,1,5,-9,-5,2,9,-9,-10,-10,1,10,3,-8,-3,-7,3,9,2,-4,-4,-8,-10,-7,6,-5,-7,2,10,-7,9,6,-6,10,6,6,10,-4,10,3,9,2,4,8,-6,-8,10,8,2,5,-2,7,8,-4,-3,6,-8,9,-6,7,5,8,-9,3,-2,9,-3,6,8,-10,9,-6,-6,-9,4,-4,-1,-4,9,-6,-8,-7,-1,-2,4,-3,-2,2,-4,10,-8,6,-7,4,10,8,-4,10,-7,6,8,6,8,8,8,-1,4,-8,10,8,-1,-1,-1,-10,-7,10,8,5,-4,8,-3,-8,6,2,7,9,6,3,-1,6,9,-3,-1,-3,-3,7,-9,7,-3,3,-8,-8,-2,-2,3,-1,3,9,2,9,2,3,10,-7,8,-5,-4,-1,-3,9,2,-10,2,8,-9,1,-2,-3,6,-7,3,1,4,-4,-6,5,-1,-10,4,8,7,-5,6,3,-9,4,-2,-9,-6,5,4,-7,-5,-9,-7,2,-6,2,6,-2,8,7,1,-6,9,-9,1,7,5,7,-10,-7,-10,8,6,3,8,-2,7,7,9,-6,-2,-10,-8,-10,-8,7,-5,3,7,-5,-7,-5,7,10,-10,10,-1,10,7,-10,-6,-2,3,4,3,-6,-8,-7,-5,-3,-5,-6,3,-8,5,-5,6,-9,7,3,-3,-2,-2,-8,-8,-1,-3,-9,-10,-7,6,5,1,5,7,8,6,3,-1,-2,-1,1,-7,-2,-1,3,3,1,2,-4,3,1,5,5,6,-4,10,2,-10,-8,5,10,1,-4,9,-4,-3,2,-2,4,6,-2,7,-6,8,8,7,-1,-1,-3,-6,-3,-3,-5,-3,10,6,6,8,10,5,-9,-8,-3,7,1,3,2,-10,3,-5,3,-7,-7,-10,-10,7,-9,10,-5,-10,-2,-10,-10,-9,-4,-8,-8,-3,-9,-3,9,-8,6,2,7,-8,4,-1,-8,9,-9,-6,-1,3,3,-1,-8,1,-9,5,-3,-4,1,-3,-10,-1,-1,-5,8,-4,-3,-1,6,-5,5,10,5,6,3,-6,-4,-1,6,9,3,-2,2,7,7,2,6,-9,8,-10,5,-6,-5,-3,-1,2,10,10,1,-8,1,-10,4,9,-5,4,5,8,-7,10,7,-1,9,-9,-9,1,-8,9,2,-5,7,6,9,5,-7,3,-8,-1,6,-9,6,6,-1,-6,-5,8,10,7,10,-7,-6,10,-5,-10,8,7,-7,8,10,-1,-2,-6,-4,4,-4,8,-1,3,-9,8,-2,1,-8,9,10,-2,10,-5,-2,6,-9,-5,5,8,-10,-1,-3,-4,-9,10,5,-4,-9,-7,7,8,-2,-8,-10,-10,3,5,-4,-7,-3,2,9,3,4,-1,-7,-9,-2,3,3,4,-5], dtype = "uint32")#candidate|13162|(1078,)|const|uint32
call_13160 = relay.TupleGetItem(func_8697_call(relay.reshape(const_13161.astype('int64'), []), relay.reshape(const_13162.astype('uint32'), [1078,]), ), 2)
call_13163 = relay.TupleGetItem(func_8701_call(relay.reshape(const_13161.astype('int64'), []), relay.reshape(const_13162.astype('uint32'), [1078,]), ), 2)
uop_13190 = relay.acos(const_13162.astype('float64')) # shape=(1078,)
uop_13195 = relay.log10(uop_13190.astype('float64')) # shape=(1078,)
output = relay.Tuple([call_13141,call_13160,const_13161,uop_13195,])
output2 = relay.Tuple([call_13142,call_13163,const_13161,uop_13195,])
func_13198 = relay.Function([], output)
mod['func_13198'] = func_13198
mod = relay.transform.InferType()(mod)
mutated_mod['func_13198'] = func_13198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13198_call = mutated_mod.get_global_var('func_13198')
call_13199 = func_13198_call()
output = call_13199
func_13200 = relay.Function([], output)
mutated_mod['func_13200'] = func_13200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9199_call = mod.get_global_var('func_9199')
func_9201_call = mutated_mod.get_global_var('func_9201')
call_13280 = func_9199_call()
call_13281 = func_9199_call()
func_10585_call = mod.get_global_var('func_10585')
func_10586_call = mutated_mod.get_global_var('func_10586')
call_13301 = relay.TupleGetItem(func_10585_call(), 0)
call_13302 = relay.TupleGetItem(func_10586_call(), 0)
output = relay.Tuple([call_13280,call_13301,])
output2 = relay.Tuple([call_13281,call_13302,])
func_13303 = relay.Function([], output)
mod['func_13303'] = func_13303
mod = relay.transform.InferType()(mod)
mutated_mod['func_13303'] = func_13303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13303_call = mutated_mod.get_global_var('func_13303')
call_13304 = func_13303_call()
output = call_13304
func_13305 = relay.Function([], output)
mutated_mod['func_13305'] = func_13305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10596_call = mod.get_global_var('func_10596')
func_10597_call = mutated_mod.get_global_var('func_10597')
call_13318 = relay.TupleGetItem(func_10596_call(), 0)
call_13319 = relay.TupleGetItem(func_10597_call(), 0)
func_9959_call = mod.get_global_var('func_9959')
func_9960_call = mutated_mod.get_global_var('func_9960')
call_13340 = func_9959_call()
call_13341 = func_9959_call()
output = relay.Tuple([call_13318,call_13340,])
output2 = relay.Tuple([call_13319,call_13341,])
func_13347 = relay.Function([], output)
mod['func_13347'] = func_13347
mod = relay.transform.InferType()(mod)
output = func_13347()
func_13348 = relay.Function([], output)
mutated_mod['func_13348'] = func_13348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12756_call = mod.get_global_var('func_12756')
func_12757_call = mutated_mod.get_global_var('func_12757')
call_13349 = relay.TupleGetItem(func_12756_call(), 0)
call_13350 = relay.TupleGetItem(func_12757_call(), 0)
output = relay.Tuple([call_13349,])
output2 = relay.Tuple([call_13350,])
func_13355 = relay.Function([], output)
mod['func_13355'] = func_13355
mod = relay.transform.InferType()(mod)
mutated_mod['func_13355'] = func_13355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13355_call = mutated_mod.get_global_var('func_13355')
call_13356 = func_13355_call()
output = call_13356
func_13357 = relay.Function([], output)
mutated_mod['func_13357'] = func_13357
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13417 = relay.const(8, dtype = "int8")#candidate|13417|()|const|int8
var_13418 = relay.var("var_13418", dtype = "int8", shape = (1, 8, 4))#candidate|13418|(1, 8, 4)|var|int8
bop_13419 = relay.minimum(const_13417.astype('int8'), var_13418.astype('int8')) # shape=(1, 8, 4)
func_12384_call = mod.get_global_var('func_12384')
func_12385_call = mutated_mod.get_global_var('func_12385')
call_13427 = relay.TupleGetItem(func_12384_call(), 0)
call_13428 = relay.TupleGetItem(func_12385_call(), 0)
output = relay.Tuple([bop_13419,call_13427,])
output2 = relay.Tuple([bop_13419,call_13428,])
func_13447 = relay.Function([var_13418,], output)
mod['func_13447'] = func_13447
mod = relay.transform.InferType()(mod)
var_13448 = relay.var("var_13448", dtype = "int8", shape = (1, 8, 4))#candidate|13448|(1, 8, 4)|var|int8
output = func_13447(var_13448)
func_13449 = relay.Function([var_13448], output)
mutated_mod['func_13449'] = func_13449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7088_call = mod.get_global_var('func_7088')
func_7089_call = mutated_mod.get_global_var('func_7089')
call_13489 = func_7088_call()
call_13490 = func_7088_call()
output = call_13489
output2 = call_13490
func_13500 = relay.Function([], output)
mod['func_13500'] = func_13500
mod = relay.transform.InferType()(mod)
mutated_mod['func_13500'] = func_13500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13500_call = mutated_mod.get_global_var('func_13500')
call_13501 = func_13500_call()
output = call_13501
func_13502 = relay.Function([], output)
mutated_mod['func_13502'] = func_13502
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13506 = relay.var("var_13506", dtype = "int32", shape = (8, 14, 6))#candidate|13506|(8, 14, 6)|var|int32
var_13507 = relay.var("var_13507", dtype = "int32", shape = (8, 14, 6))#candidate|13507|(8, 14, 6)|var|int32
bop_13508 = relay.bitwise_xor(var_13506.astype('int32'), relay.reshape(var_13507.astype('int32'), relay.shape_of(var_13506))) # shape=(8, 14, 6)
output = relay.Tuple([bop_13508,])
output2 = relay.Tuple([bop_13508,])
func_13513 = relay.Function([var_13506,var_13507,], output)
mod['func_13513'] = func_13513
mod = relay.transform.InferType()(mod)
var_13514 = relay.var("var_13514", dtype = "int32", shape = (8, 14, 6))#candidate|13514|(8, 14, 6)|var|int32
var_13515 = relay.var("var_13515", dtype = "int32", shape = (8, 14, 6))#candidate|13515|(8, 14, 6)|var|int32
output = func_13513(var_13514,var_13515,)
func_13516 = relay.Function([var_13514,var_13515,], output)
mutated_mod['func_13516'] = func_13516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12884_call = mod.get_global_var('func_12884')
func_12885_call = mutated_mod.get_global_var('func_12885')
call_13614 = relay.TupleGetItem(func_12884_call(), 2)
call_13615 = relay.TupleGetItem(func_12885_call(), 2)
output = relay.Tuple([call_13614,])
output2 = relay.Tuple([call_13615,])
func_13633 = relay.Function([], output)
mod['func_13633'] = func_13633
mod = relay.transform.InferType()(mod)
mutated_mod['func_13633'] = func_13633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13633_call = mutated_mod.get_global_var('func_13633')
call_13634 = func_13633_call()
output = call_13634
func_13635 = relay.Function([], output)
mutated_mod['func_13635'] = func_13635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9199_call = mod.get_global_var('func_9199')
func_9201_call = mutated_mod.get_global_var('func_9201')
call_13651 = func_9199_call()
call_13652 = func_9199_call()
output = call_13651
output2 = call_13652
func_13657 = relay.Function([], output)
mod['func_13657'] = func_13657
mod = relay.transform.InferType()(mod)
output = func_13657()
func_13658 = relay.Function([], output)
mutated_mod['func_13658'] = func_13658
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13686 = relay.const([[[10,-9,2,9],[-1,-2,9,7],[1,7,7,-2],[-10,-1,7,-7],[1,10,-5,7],[-7,8,4,-7],[-7,2,-10,9],[3,-3,7,-9]],[[-7,2,-8,-10],[8,3,3,7],[-4,-2,-5,-4],[-10,9,8,-4],[7,-9,-4,3],[4,6,-6,5],[-3,-4,-7,5],[7,3,-1,2]],[[-4,6,7,4],[5,-1,2,-1],[-5,3,5,-9],[1,-10,10,4],[-1,6,10,-1],[7,-8,-8,-3],[-5,-4,4,5],[-5,2,4,-1]],[[-8,5,6,-5],[-10,1,-1,2],[1,-8,-9,-2],[9,10,-10,10],[-10,6,-3,-9],[3,2,6,-1],[7,-4,6,1],[-2,9,-5,-9]],[[-6,-1,5,3],[-1,3,-6,-4],[8,3,6,7],[6,9,5,-8],[-3,9,10,8],[-6,7,-7,-8],[1,-9,5,4],[-2,-5,-10,-9]],[[4,3,-9,-3],[5,-8,3,9],[7,-10,2,4],[-6,2,-3,-9],[10,-9,4,-5],[-4,-3,-8,2],[8,8,7,-7],[-10,-8,-1,-10]],[[-10,9,2,5],[6,-6,8,-10],[1,8,9,-10],[-4,1,-7,4],[9,1,7,9],[6,10,3,-2],[-7,2,-8,6],[-3,7,10,-5]],[[-7,10,6,9],[-7,6,8,-4],[-10,2,9,10],[-7,-1,-2,-3],[5,-5,7,3],[-1,-3,6,-4],[4,-2,4,-4],[-1,-5,3,2]],[[-5,9,8,-5],[-10,6,6,2],[-5,-2,6,-9],[2,10,2,-3],[8,9,5,-5],[-10,1,-10,-5],[-7,4,-6,-4],[5,-4,-7,-5]]], dtype = "uint32")#candidate|13686|(9, 8, 4)|const|uint32
var_13687 = relay.var("var_13687", dtype = "uint32", shape = (9, 8, 4))#candidate|13687|(9, 8, 4)|var|uint32
bop_13688 = relay.less_equal(const_13686.astype('bool'), relay.reshape(var_13687.astype('bool'), relay.shape_of(const_13686))) # shape=(9, 8, 4)
func_2618_call = mod.get_global_var('func_2618')
func_2622_call = mutated_mod.get_global_var('func_2622')
const_13698 = relay.const([-5,-8,4,-1,1,5,-9,-1,7,-6,7,6,1,-4,-6,-5,-5,9,8,-2,-4,-10,-5,-7,-8,9,-4,-7,-2,7,9,-8,7,-4,7,-4,2,-3,5,-1,-4,8,-5,2,-3,-5,1,9,-1,2,8,7,2,-8,2,1,10,-4,4,4,5,4,-3,5,-3,-9,7,-10,10,5,7,-5,-5,4,5,9,-7,9,5,1,-2,-10,10,9,9,-9,-2,-5,-5,8,-9,3,9,6,-7,3,-9,10,2,7,-3,-8,-3,2,4,-8,-7,10,3,2,-1,9,8,9,-9,9,-3,7,-2,3,-6,-2,4,-1,-6,-8,7,-8,9,5,4,-9,3,-4,-4,-4,2,5,7,-4,10,1,1,2,-9,-9,-3,1,-4,-4,5,-9,3,2,10,3,10,-7,5,3,10,-6,-2,-10,5,-5,1,7,9,-4,-7,-9,2,8,-7,1,4,-10,-8,3,6,4,-5,1,-2,3,3,4,9,-5,4,-6,5,7,8,-7,-9,2,-3,7,2,-5,-3,-2,-3,-1,-3,7,4,-1], dtype = "int8")#candidate|13698|(210,)|const|int8
call_13697 = func_2618_call(relay.reshape(const_13698.astype('int8'), [15, 7, 2]), relay.reshape(const_13698.astype('int8'), [15, 7, 2]), )
call_13699 = func_2618_call(relay.reshape(const_13698.astype('int8'), [15, 7, 2]), relay.reshape(const_13698.astype('int8'), [15, 7, 2]), )
func_13347_call = mod.get_global_var('func_13347')
func_13348_call = mutated_mod.get_global_var('func_13348')
call_13709 = relay.TupleGetItem(func_13347_call(), 0)
call_13710 = relay.TupleGetItem(func_13348_call(), 0)
output = relay.Tuple([bop_13688,call_13697,const_13698,call_13709,])
output2 = relay.Tuple([bop_13688,call_13699,const_13698,call_13710,])
func_13715 = relay.Function([var_13687,], output)
mod['func_13715'] = func_13715
mod = relay.transform.InferType()(mod)
mutated_mod['func_13715'] = func_13715
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13716 = relay.var("var_13716", dtype = "uint32", shape = (9, 8, 4))#candidate|13716|(9, 8, 4)|var|uint32
func_13715_call = mutated_mod.get_global_var('func_13715')
call_13717 = func_13715_call(var_13716)
output = call_13717
func_13718 = relay.Function([var_13716], output)
mutated_mod['func_13718'] = func_13718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13198_call = mod.get_global_var('func_13198')
func_13200_call = mutated_mod.get_global_var('func_13200')
call_13722 = relay.TupleGetItem(func_13198_call(), 2)
call_13723 = relay.TupleGetItem(func_13200_call(), 2)
output = call_13722
output2 = call_13723
func_13726 = relay.Function([], output)
mod['func_13726'] = func_13726
mod = relay.transform.InferType()(mod)
mutated_mod['func_13726'] = func_13726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13726_call = mutated_mod.get_global_var('func_13726')
call_13727 = func_13726_call()
output = call_13727
func_13728 = relay.Function([], output)
mutated_mod['func_13728'] = func_13728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13780 = relay.var("var_13780", dtype = "float32", shape = (10, 5, 15))#candidate|13780|(10, 5, 15)|var|float32
var_13781 = relay.var("var_13781", dtype = "float32", shape = (10, 5, 15))#candidate|13781|(10, 5, 15)|var|float32
bop_13782 = relay.power(var_13780.astype('float32'), relay.reshape(var_13781.astype('float32'), relay.shape_of(var_13780))) # shape=(10, 5, 15)
func_7954_call = mod.get_global_var('func_7954')
func_7956_call = mutated_mod.get_global_var('func_7956')
call_13787 = relay.TupleGetItem(func_7954_call(), 0)
call_13788 = relay.TupleGetItem(func_7956_call(), 0)
func_8028_call = mod.get_global_var('func_8028')
func_8029_call = mutated_mod.get_global_var('func_8029')
call_13794 = func_8028_call()
call_13795 = func_8028_call()
output = relay.Tuple([bop_13782,call_13787,call_13794,])
output2 = relay.Tuple([bop_13782,call_13788,call_13795,])
func_13802 = relay.Function([var_13780,var_13781,], output)
mod['func_13802'] = func_13802
mod = relay.transform.InferType()(mod)
var_13803 = relay.var("var_13803", dtype = "float32", shape = (10, 5, 15))#candidate|13803|(10, 5, 15)|var|float32
var_13804 = relay.var("var_13804", dtype = "float32", shape = (10, 5, 15))#candidate|13804|(10, 5, 15)|var|float32
output = func_13802(var_13803,var_13804,)
func_13805 = relay.Function([var_13803,var_13804,], output)
mutated_mod['func_13805'] = func_13805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11203_call = mod.get_global_var('func_11203')
func_11205_call = mutated_mod.get_global_var('func_11205')
call_13826 = func_11203_call()
call_13827 = func_11203_call()
output = relay.Tuple([call_13826,])
output2 = relay.Tuple([call_13827,])
func_13828 = relay.Function([], output)
mod['func_13828'] = func_13828
mod = relay.transform.InferType()(mod)
mutated_mod['func_13828'] = func_13828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13828_call = mutated_mod.get_global_var('func_13828')
call_13829 = func_13828_call()
output = call_13829
func_13830 = relay.Function([], output)
mutated_mod['func_13830'] = func_13830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7191_call = mod.get_global_var('func_7191')
func_7192_call = mutated_mod.get_global_var('func_7192')
call_13857 = relay.TupleGetItem(func_7191_call(), 0)
call_13858 = relay.TupleGetItem(func_7192_call(), 0)
output = relay.Tuple([call_13857,])
output2 = relay.Tuple([call_13858,])
func_13864 = relay.Function([], output)
mod['func_13864'] = func_13864
mod = relay.transform.InferType()(mod)
output = func_13864()
func_13865 = relay.Function([], output)
mutated_mod['func_13865'] = func_13865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10585_call = mod.get_global_var('func_10585')
func_10586_call = mutated_mod.get_global_var('func_10586')
call_13866 = relay.TupleGetItem(func_10585_call(), 0)
call_13867 = relay.TupleGetItem(func_10586_call(), 0)
func_2775_call = mod.get_global_var('func_2775')
func_2778_call = mutated_mod.get_global_var('func_2778')
const_13888 = relay.const([2.715552,0.033758,4.069542,7.533866,-6.954107,6.685884,7.794730,4.356443,8.232895,9.073623,-0.702864,-4.032841,9.447173,-3.585327,9.139586,1.191616,3.377757,-4.571688,-7.534097,8.159409,-7.170127,-4.952500,-8.298614,-7.788213,-3.657822,-3.021066,-6.753136,-7.760204,-8.844869,6.033903,-7.470321,5.324310,6.370253,-6.800866,4.196192,-8.920503,8.826782,-1.788727,-8.766070,9.937084,-6.235598,-0.950320,-4.919864,-6.789421,0.400289,-5.490551,0.325565,4.317041,-9.840992,-7.223677,-5.313307,8.309001,5.729586,2.658093,-4.780526,-1.817816,0.560843,9.211921,-6.369956,-3.600426,1.599684,4.159051,-6.006185,9.086972,-5.835605,4.244903,8.059883,-4.848484,-6.144790,-6.989345,9.869568,8.902312,3.742372,-8.695036,-9.554182,-6.888463,-2.601007,-4.472605,-7.571551,3.689705,-2.566350,5.218081,4.573865,-9.295526,-8.770053,-4.350953,-6.716791,-3.245736,-9.079066,9.813484,4.614853,8.411785,0.467437,7.228549,3.122352,-1.155145,3.425771,0.897719,-9.118628,-4.095727,0.290417,-1.423650,-2.276652,0.257172,4.329113,4.322245,-0.793256,-4.327152,1.113610,-5.023117,-8.596244,-1.118072,-5.900877,-5.097204,7.944996,2.891053,0.694094,-2.533517,-5.932577,6.192851,-5.622455,3.809980,2.851684,-2.977817,9.976703,7.143276,-8.588648,3.093485,-6.991330,5.376638,-4.356562,-1.960836,-2.576849,4.673464,-3.791671,-8.879714,0.731089,-0.898298,-2.480570,5.419878,0.929983,3.145816,-3.828347,-7.674202,2.061928,8.398209,3.178224,4.554519,-6.262770,-1.411328,0.724526,-6.873659,-4.770750,5.351368,5.098754,-2.016273,-7.068108,-0.159170,-0.834032,4.291548,-4.037933,4.900047,-8.875575,9.283750,9.876057,6.322535,6.818852,-8.750264,-8.627359,-0.571385,-0.143763,-3.235006,-3.844274,-2.494820,-6.100334,-5.441582,-7.939271,-4.314440,5.351763,3.781120,6.633512,0.436887,-2.445279,2.399518,-6.010496,9.724594,-9.034693,9.287801,-4.158821,-3.124597,6.670664,-8.610249,-9.162821,-8.400483,-6.987799,2.452798,-0.408023,-8.246394,-1.322723,-0.837077,0.747467,4.886605,7.258215,7.284391,-2.496423,-9.234510,-0.681732,3.722882,0.285297,-4.415784,-2.570946,-8.211605,3.024909,1.219495,-8.477789,-0.916137,4.263624,9.508725,-2.091415,1.599025,-6.077981,-5.590748,-3.167646,-4.927788,5.036022,3.255763,-5.157464,-1.288305,6.428986,5.749120,8.963846,4.870356,6.188578,-0.221782,1.785324,3.495440,0.756757,5.538793,2.424024,-4.626301,-1.740538,-7.633190,9.719520,-7.425216,6.472418,-5.973591,4.812571,9.097085,-2.016005,-4.876673,5.333744,-2.184570,6.047014,-2.149989,3.504963,6.451602,7.942229,-2.472834,2.514339,2.669269,-6.534760,1.601027,2.667240,-7.822431], dtype = "float64")#candidate|13888|(264,)|const|float64
var_13889 = relay.var("var_13889", dtype = "uint32", shape = (539, 2))#candidate|13889|(539, 2)|var|uint32
call_13887 = relay.TupleGetItem(func_2775_call(relay.reshape(const_13888.astype('float64'), [2, 11, 12]), relay.reshape(var_13889.astype('uint32'), [1078,]), ), 0)
call_13890 = relay.TupleGetItem(func_2778_call(relay.reshape(const_13888.astype('float64'), [2, 11, 12]), relay.reshape(var_13889.astype('uint32'), [1078,]), ), 0)
output = relay.Tuple([call_13866,call_13887,const_13888,var_13889,])
output2 = relay.Tuple([call_13867,call_13890,const_13888,var_13889,])
func_13926 = relay.Function([var_13889,], output)
mod['func_13926'] = func_13926
mod = relay.transform.InferType()(mod)
mutated_mod['func_13926'] = func_13926
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13927 = relay.var("var_13927", dtype = "uint32", shape = (539, 2))#candidate|13927|(539, 2)|var|uint32
func_13926_call = mutated_mod.get_global_var('func_13926')
call_13928 = func_13926_call(var_13927)
output = call_13928
func_13929 = relay.Function([var_13927], output)
mutated_mod['func_13929'] = func_13929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11747_call = mod.get_global_var('func_11747')
func_11748_call = mutated_mod.get_global_var('func_11748')
call_13958 = relay.TupleGetItem(func_11747_call(), 0)
call_13959 = relay.TupleGetItem(func_11748_call(), 0)
output = relay.Tuple([call_13958,])
output2 = relay.Tuple([call_13959,])
func_13977 = relay.Function([], output)
mod['func_13977'] = func_13977
mod = relay.transform.InferType()(mod)
output = func_13977()
func_13978 = relay.Function([], output)
mutated_mod['func_13978'] = func_13978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7747_call = mod.get_global_var('func_7747')
func_7749_call = mutated_mod.get_global_var('func_7749')
call_14011 = relay.TupleGetItem(func_7747_call(), 1)
call_14012 = relay.TupleGetItem(func_7749_call(), 1)
func_7724_call = mod.get_global_var('func_7724')
func_7726_call = mutated_mod.get_global_var('func_7726')
call_14031 = relay.TupleGetItem(func_7724_call(), 0)
call_14032 = relay.TupleGetItem(func_7726_call(), 0)
func_8090_call = mod.get_global_var('func_8090')
func_8092_call = mutated_mod.get_global_var('func_8092')
call_14048 = func_8090_call()
call_14049 = func_8090_call()
func_9914_call = mod.get_global_var('func_9914')
func_9915_call = mutated_mod.get_global_var('func_9915')
call_14052 = func_9914_call()
call_14053 = func_9914_call()
func_7350_call = mod.get_global_var('func_7350')
func_7354_call = mutated_mod.get_global_var('func_7354')
var_14074 = relay.var("var_14074", dtype = "uint32", shape = (77,))#candidate|14074|(77,)|var|uint32
var_14075 = relay.var("var_14075", dtype = "uint32", shape = (7, 154))#candidate|14075|(7, 154)|var|uint32
var_14076 = relay.var("var_14076", dtype = "float32", shape = (2352,))#candidate|14076|(2352,)|var|float32
call_14073 = relay.TupleGetItem(func_7350_call(relay.reshape(var_14074.astype('uint32'), [77,]), relay.reshape(var_14075.astype('uint32'), [1078,]), relay.reshape(var_14076.astype('float32'), [588, 4]), ), 2)
call_14077 = relay.TupleGetItem(func_7354_call(relay.reshape(var_14074.astype('uint32'), [77,]), relay.reshape(var_14075.astype('uint32'), [1078,]), relay.reshape(var_14076.astype('float32'), [588, 4]), ), 2)
bop_14079 = relay.minimum(var_14074.astype('int8'), relay.reshape(call_14073.astype('int8'), relay.shape_of(var_14074))) # shape=(77,)
bop_14082 = relay.minimum(var_14074.astype('int8'), relay.reshape(call_14077.astype('int8'), relay.shape_of(var_14074))) # shape=(77,)
output = relay.Tuple([call_14011,call_14031,call_14048,call_14052,var_14075,var_14076,bop_14079,])
output2 = relay.Tuple([call_14012,call_14032,call_14049,call_14053,var_14075,var_14076,bop_14082,])
func_14084 = relay.Function([var_14074,var_14075,var_14076,], output)
mod['func_14084'] = func_14084
mod = relay.transform.InferType()(mod)
mutated_mod['func_14084'] = func_14084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14084_call = mutated_mod.get_global_var('func_14084')
var_14086 = relay.var("var_14086", dtype = "uint32", shape = (77,))#candidate|14086|(77,)|var|uint32
var_14087 = relay.var("var_14087", dtype = "uint32", shape = (7, 154))#candidate|14087|(7, 154)|var|uint32
var_14088 = relay.var("var_14088", dtype = "float32", shape = (2352,))#candidate|14088|(2352,)|var|float32
call_14085 = func_14084_call(var_14086,var_14087,var_14088,)
output = call_14085
func_14089 = relay.Function([var_14086,var_14087,var_14088,], output)
mutated_mod['func_14089'] = func_14089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12756_call = mod.get_global_var('func_12756')
func_12757_call = mutated_mod.get_global_var('func_12757')
call_14114 = relay.TupleGetItem(func_12756_call(), 0)
call_14115 = relay.TupleGetItem(func_12757_call(), 0)
func_12384_call = mod.get_global_var('func_12384')
func_12385_call = mutated_mod.get_global_var('func_12385')
call_14130 = relay.TupleGetItem(func_12384_call(), 0)
call_14131 = relay.TupleGetItem(func_12385_call(), 0)
output = relay.Tuple([call_14114,call_14130,])
output2 = relay.Tuple([call_14115,call_14131,])
func_14145 = relay.Function([], output)
mod['func_14145'] = func_14145
mod = relay.transform.InferType()(mod)
mutated_mod['func_14145'] = func_14145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14145_call = mutated_mod.get_global_var('func_14145')
call_14146 = func_14145_call()
output = call_14146
func_14147 = relay.Function([], output)
mutated_mod['func_14147'] = func_14147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10585_call = mod.get_global_var('func_10585')
func_10586_call = mutated_mod.get_global_var('func_10586')
call_14239 = relay.TupleGetItem(func_10585_call(), 0)
call_14240 = relay.TupleGetItem(func_10586_call(), 0)
output = relay.Tuple([call_14239,])
output2 = relay.Tuple([call_14240,])
func_14244 = relay.Function([], output)
mod['func_14244'] = func_14244
mod = relay.transform.InferType()(mod)
mutated_mod['func_14244'] = func_14244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14244_call = mutated_mod.get_global_var('func_14244')
call_14245 = func_14244_call()
output = call_14245
func_14246 = relay.Function([], output)
mutated_mod['func_14246'] = func_14246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10464_call = mod.get_global_var('func_10464')
func_10465_call = mutated_mod.get_global_var('func_10465')
call_14362 = relay.TupleGetItem(func_10464_call(), 1)
call_14363 = relay.TupleGetItem(func_10465_call(), 1)
var_14366 = relay.var("var_14366", dtype = "float32", shape = (1078,))#candidate|14366|(1078,)|var|float32
bop_14367 = relay.bitwise_and(call_14362.astype('int8'), relay.reshape(var_14366.astype('int8'), relay.shape_of(call_14362))) # shape=(1078,)
bop_14370 = relay.bitwise_and(call_14363.astype('int8'), relay.reshape(var_14366.astype('int8'), relay.shape_of(call_14363))) # shape=(1078,)
func_12633_call = mod.get_global_var('func_12633')
func_12638_call = mutated_mod.get_global_var('func_12638')
var_14373 = relay.var("var_14373", dtype = "int16", shape = ())#candidate|14373|()|var|int16
var_14374 = relay.var("var_14374", dtype = "int16", shape = (182,))#candidate|14374|(182,)|var|int16
var_14375 = relay.var("var_14375", dtype = "float64", shape = (66,))#candidate|14375|(66,)|var|float64
call_14372 = relay.TupleGetItem(func_12633_call(relay.reshape(var_14373.astype('int16'), []), relay.reshape(var_14374.astype('int16'), [182,]), relay.reshape(var_14375.astype('float64'), [11, 6]), ), 8)
call_14376 = relay.TupleGetItem(func_12638_call(relay.reshape(var_14373.astype('int16'), []), relay.reshape(var_14374.astype('int16'), [182,]), relay.reshape(var_14375.astype('float64'), [11, 6]), ), 8)
output = relay.Tuple([bop_14367,call_14372,var_14373,var_14374,var_14375,])
output2 = relay.Tuple([bop_14370,call_14376,var_14373,var_14374,var_14375,])
func_14388 = relay.Function([var_14366,var_14373,var_14374,var_14375,], output)
mod['func_14388'] = func_14388
mod = relay.transform.InferType()(mod)
mutated_mod['func_14388'] = func_14388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14388_call = mutated_mod.get_global_var('func_14388')
var_14390 = relay.var("var_14390", dtype = "float32", shape = (1078,))#candidate|14390|(1078,)|var|float32
var_14391 = relay.var("var_14391", dtype = "int16", shape = ())#candidate|14391|()|var|int16
var_14392 = relay.var("var_14392", dtype = "int16", shape = (182,))#candidate|14392|(182,)|var|int16
var_14393 = relay.var("var_14393", dtype = "float64", shape = (66,))#candidate|14393|(66,)|var|float64
call_14389 = func_14388_call(var_14390,var_14391,var_14392,var_14393,)
output = call_14389
func_14394 = relay.Function([var_14390,var_14391,var_14392,var_14393,], output)
mutated_mod['func_14394'] = func_14394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9299_call = mod.get_global_var('func_9299')
func_9301_call = mutated_mod.get_global_var('func_9301')
call_14441 = func_9299_call()
call_14442 = func_9299_call()
output = relay.Tuple([call_14441,])
output2 = relay.Tuple([call_14442,])
func_14445 = relay.Function([], output)
mod['func_14445'] = func_14445
mod = relay.transform.InferType()(mod)
mutated_mod['func_14445'] = func_14445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14445_call = mutated_mod.get_global_var('func_14445')
call_14446 = func_14445_call()
output = call_14446
func_14447 = relay.Function([], output)
mutated_mod['func_14447'] = func_14447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11040_call = mod.get_global_var('func_11040')
func_11042_call = mutated_mod.get_global_var('func_11042')
call_14507 = func_11040_call()
call_14508 = func_11040_call()
output = relay.Tuple([call_14507,])
output2 = relay.Tuple([call_14508,])
func_14520 = relay.Function([], output)
mod['func_14520'] = func_14520
mod = relay.transform.InferType()(mod)
mutated_mod['func_14520'] = func_14520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14520_call = mutated_mod.get_global_var('func_14520')
call_14521 = func_14520_call()
output = call_14521
func_14522 = relay.Function([], output)
mutated_mod['func_14522'] = func_14522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9099_call = mod.get_global_var('func_9099')
func_9100_call = mutated_mod.get_global_var('func_9100')
call_14570 = relay.TupleGetItem(func_9099_call(), 0)
call_14571 = relay.TupleGetItem(func_9100_call(), 0)
output = call_14570
output2 = call_14571
func_14574 = relay.Function([], output)
mod['func_14574'] = func_14574
mod = relay.transform.InferType()(mod)
output = func_14574()
func_14575 = relay.Function([], output)
mutated_mod['func_14575'] = func_14575
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14641 = relay.var("var_14641", dtype = "float64", shape = (6, 7, 1))#candidate|14641|(6, 7, 1)|var|float64
uop_14642 = relay.sin(var_14641.astype('float64')) # shape=(6, 7, 1)
uop_14648 = relay.atan(uop_14642.astype('float64')) # shape=(6, 7, 1)
func_6881_call = mod.get_global_var('func_6881')
func_6885_call = mutated_mod.get_global_var('func_6885')
var_14654 = relay.var("var_14654", dtype = "float32", shape = ())#candidate|14654|()|var|float32
const_14655 = relay.const([[-6.200625,-4.949970,-8.659919,3.849528,0.941715,-0.234303,2.433282,1.197861,-7.325984,8.839371,0.898448,-9.036959,-0.103505,-5.779475,-3.467932,3.889008,-5.181147,4.841862,5.558888,5.350286,4.737413,6.239148,-0.478100,-9.599058,9.437106,-4.433092,-9.541104,-9.915341],[-6.103416,4.303493,-4.817418,8.041509,6.181583,6.652588,9.153367,3.077587,1.654277,0.716762,7.244298,-5.159657,-3.191210,-0.693408,3.806196,7.724536,8.161635,4.691996,3.633842,-4.793080,8.805782,9.013787,7.146972,9.508288,-0.576997,-2.410079,-9.267073,-3.594566],[5.910533,8.091359,2.726642,-3.825511,-6.014087,-0.269555,-7.093731,-7.549546,-2.513066,4.215195,-6.781385,-7.618212,1.752051,1.927414,-8.696726,-0.390642,-7.991786,-6.325778,4.246576,-3.863854,-3.791376,6.173903,-2.535123,-8.419522,-1.560558,-5.566404,-3.273498,9.454791],[0.085978,3.978452,-1.485458,-2.417402,-4.483007,-7.146224,1.302461,1.920299,2.097284,9.820995,-3.216021,-7.645714,4.761470,2.267417,-6.408216,6.784474,2.504444,5.675429,7.443770,-6.282509,-0.689451,4.400054,-5.468035,-6.919670,9.689229,9.919354,3.838531,-7.389282],[-9.500029,4.692846,-9.911903,-7.018000,5.294393,4.000041,0.889736,-6.273490,-6.211528,-1.852026,-1.584748,-9.734084,-2.178638,7.548774,-7.633482,-3.573430,-1.812860,8.894127,-0.466669,-1.661701,0.323610,-4.449070,-7.142085,-9.641512,-2.139116,4.705235,8.564182,3.748445],[2.666565,-8.733127,-9.622352,-8.113961,-1.201665,-9.428533,7.612314,-6.717322,-1.434824,-8.581838,-0.233657,-3.723954,7.488302,5.926247,2.186396,-9.989593,-8.367315,-6.160697,7.107949,6.460009,-5.908764,-1.929240,-5.236856,-7.289327,-4.591960,0.184431,-1.129251,6.971460],[9.901249,-1.781963,3.355160,5.488678,8.715863,2.253533,-4.581986,-8.544162,-0.215804,8.967617,-5.105220,1.537323,-6.089718,2.929494,-1.312996,-2.767824,8.522718,1.913304,5.134738,-1.852372,-9.506321,7.215331,-5.392292,-1.075943,-7.124425,-4.839377,4.475261,2.987249],[-0.072390,-6.649359,-3.089543,2.125497,-3.365232,-8.602824,9.098085,-7.225144,-3.468241,0.276581,-2.113371,6.331814,2.640797,1.884866,-9.481333,-6.540959,0.129796,7.127705,8.679924,3.326431,8.439501,3.395518,6.623447,7.996291,4.322351,-3.616216,-0.143240,-8.738766],[7.635530,-8.407229,0.248306,9.406782,-5.736900,-4.431342,1.021829,9.993432,6.787963,4.596113,-3.432550,1.231662,8.298918,5.768959,9.412624,6.121986,7.338389,-4.195048,-8.738678,3.881792,7.975302,-3.512786,-6.051094,6.287495,-4.694725,-5.553266,3.400315,-4.935696],[6.821894,-8.073025,-6.515009,-1.475255,-0.277076,-9.971166,-2.987447,2.066630,8.131807,-6.526507,2.839293,2.328980,-0.023579,-7.915761,6.289749,9.859293,0.636423,-5.114567,3.706898,3.394692,1.877778,9.471536,-5.929375,4.698694,-5.366332,1.746372,-5.479221,-0.436874]], dtype = "float32")#candidate|14655|(10, 28)|const|float32
call_14653 = func_6881_call(relay.reshape(var_14654.astype('float32'), []), relay.reshape(const_14655.astype('float32'), [7, 10, 4]), )
call_14656 = func_6881_call(relay.reshape(var_14654.astype('float32'), []), relay.reshape(const_14655.astype('float32'), [7, 10, 4]), )
output = relay.Tuple([uop_14648,call_14653,var_14654,const_14655,])
output2 = relay.Tuple([uop_14648,call_14656,var_14654,const_14655,])
func_14664 = relay.Function([var_14641,var_14654,], output)
mod['func_14664'] = func_14664
mod = relay.transform.InferType()(mod)
var_14665 = relay.var("var_14665", dtype = "float64", shape = (6, 7, 1))#candidate|14665|(6, 7, 1)|var|float64
var_14666 = relay.var("var_14666", dtype = "float32", shape = ())#candidate|14666|()|var|float32
output = func_14664(var_14665,var_14666,)
func_14667 = relay.Function([var_14665,var_14666,], output)
mutated_mod['func_14667'] = func_14667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14697 = relay.var("var_14697", dtype = "float64", shape = (10, 16, 9))#candidate|14697|(10, 16, 9)|var|float64
var_14698 = relay.var("var_14698", dtype = "float64", shape = (10, 16, 9))#candidate|14698|(10, 16, 9)|var|float64
bop_14699 = relay.divide(var_14697.astype('float64'), relay.reshape(var_14698.astype('float64'), relay.shape_of(var_14697))) # shape=(10, 16, 9)
output = relay.Tuple([bop_14699,])
output2 = relay.Tuple([bop_14699,])
F = relay.Function([var_14697,var_14698,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_14697,var_14698,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

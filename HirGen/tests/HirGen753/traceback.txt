==========mod==========
#[version = "0.0.5"]
def @func_14445() -> (Tensor[(5, 3, 9), int64],) {
  %0 = @func_9299() /* ty=Tensor[(5, 3, 9), int64] */;
  (%0,)
}

def @func_8090() -> Tensor[(5, 3, 9), int64] {
  %1 = @func_7605() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */;
  %1.0
}

def @func_10005() -> Tensor[(5, 3, 9), int64] {
  @func_8289() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_8588(%var_8563: Tensor[(70, 4), float32]) -> (Tensor[(70, 4), uint16], Tensor[(5, 3, 9), int64]) {
  %2 = @func_7605() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */;
  %3 = %2.3;
  %4 = cast(%var_8563, dtype="uint16") /* ty=Tensor[(70, 4), uint16] */;
  %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(2), int32] */;
  %6 = cast(%3, dtype="uint16") /* ty=Tensor[(70, 4), uint16] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %8 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %9 = multiply(%6, %7) /* ty=Tensor[(70, 4), uint16] */;
  %10 = %8.0;
  (%9, %10)
}

def @func_13136() -> (Tensor[(5, 3, 9), int64],) {
  %11 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %12 = %11.0;
  (%12,)
}

def @main(%var_14697: Tensor[(10, 16, 9), float64], %var_14698: Tensor[(10, 16, 9), float64]) -> (Tensor[(10, 16, 9), float64],) {
  %13 = cast(%var_14698, dtype="float64") /* ty=Tensor[(10, 16, 9), float64] */;
  %14 = shape_of(%var_14697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%var_14697, dtype="float64") /* ty=Tensor[(10, 16, 9), float64] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %17 = divide(%15, %16) /* ty=Tensor[(10, 16, 9), float64] */;
  (%17,)
}

def @func_1335(%var_1318: Tensor[(11, 7), uint32], %var_1319: Tensor[(1078, 1), uint32], %var_1328: Tensor[(4, 588), float32]) -> (Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) {
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 1, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 1, 5), float64] */;
  %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 1, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 1, 5), float64] */;
  %20 = cosh(%19) /* ty=Tensor[(1, 1, 5), float64] */;
  %21 = cast(%20, dtype="int64") /* ty=Tensor[(1, 1, 5), int64] */;
  %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 10, 5), float64] */, dtype="int64") /* ty=Tensor[(11, 10, 5), int64] */;
  %23 = cast(%var_1318, dtype="uint32") /* ty=Tensor[(11, 7), uint32] */;
  %24 = cast(%var_1319, dtype="uint32") /* ty=Tensor[(1078, 1), uint32] */;
  %25 = reshape(%23, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
  %26 = reshape(%24, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
  %27 = @func_239(%25, %26) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
  %28 = cast(%var_1328, dtype="float32") /* ty=Tensor[(4, 588), float32] */;
  %29 = cast(%var_1318, dtype="uint32") /* ty=Tensor[(11, 7), uint32] */;
  %30 = cast(%var_1319, dtype="uint32") /* ty=Tensor[(1078, 1), uint32] */;
  %31 = reshape(%28, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float32] */;
  %32 = reshape(%29, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %33 = reshape(%30, newshape=[1, 1078]) /* ty=Tensor[(1, 1078), uint32] */;
  %34 = @func_382(%31, %32, %33) /* ty=(Tensor[(14, 14, 12), float32], Tensor[(77), uint32], Tensor[(?, 1078), int16]) */;
  %35 = cast(%20, dtype="float64") /* ty=Tensor[(1, 1, 5), float64] */;
  %36 = log2(%18) /* ty=Tensor[(1, 1, 5), float64] */;
  %37 = add(%21, %22) /* ty=Tensor[(11, 10, 5), int64] */;
  %38 = %27.1;
  %39 = %34.2;
  %40 = log10(%35) /* ty=Tensor[(1, 1, 5), float64] */;
  (%36, %37, %38, %var_1318, %var_1319, %39, %var_1328, %40)
}

def @func_2148(%var_2096: Tensor[(5, 4, 8), float32], %var_2101: Tensor[(77), uint32], %var_2103: Tensor[(2352), float32], %var_2129: Tensor[(5, 4, 8), int32]) -> (Tensor[(11, 10, 5), int64], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(14, 7, 11), float32], Tensor[(5, 4, 8), bool], Tensor[(5, 4, 8), float64]) {
  %41 = cast(%var_2101, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 1078), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
  %43 = cast(%var_2103, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %44 = reshape(%41, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
  %45 = reshape(%42, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
  %46 = reshape(%43, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
  %47 = @func_1335(%44, %45, %46) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
  %48 = cast(%var_2101, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %49 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 1078), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
  %50 = cast(%var_2103, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %51 = reshape(%48, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
  %52 = reshape(%49, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
  %53 = reshape(%50, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
  %54 = @func_1335(%51, %52, %53) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
  %55 = cast(%var_2096, dtype="float32") /* ty=Tensor[(5, 4, 8), float32] */;
  %56 = log(%55) /* ty=Tensor[(5, 4, 8), float32] */;
  %57 = cast(%var_2096, dtype="int32") /* ty=Tensor[(5, 4, 8), int32] */;
  %58 = shape_of(%56, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%56, dtype="int32") /* ty=Tensor[(5, 4, 8), int32] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %61 = bitwise_xor(%59, %60) /* ty=Tensor[(5, 4, 8), int32] */;
  %62 = cast(%var_2129, dtype="bool") /* ty=Tensor[(5, 4, 8), bool] */;
  %63 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%61, dtype="bool") /* ty=Tensor[(5, 4, 8), bool] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %66 = cast(%61, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
  %67 = %47.1;
  %68 = %54.2;
  %69 = less_equal(%64, %65) /* ty=Tensor[(5, 4, 8), bool] */;
  %70 = tan(%66) /* ty=Tensor[(5, 4, 8), float64] */;
  (%67, %var_2101, meta[relay.Constant][2] /* ty=Tensor[(1, 1078), uint32] */, %var_2103, %68, %69, %70)
}

def @func_6139(%var_6104: Tensor[(2, 6, 6), float32], %var_6112: int64, %var_6113: Tensor[(52), int64], %var_6121: Tensor[(2, 6, 6), float32]) -> (Tensor[(13, 4, 1), bool], int64, Tensor[(52), int64], Tensor[(2352), float32], Tensor[(588, 4), float32], Tensor[(6, 44), float64], Tensor[(1078), uint32], Tensor[(2, 6, 6), bool], Tensor[(2, 6, 6), float32]) {
  %71 = cast(%var_6112, dtype="int64") /* ty=int64 */;
  %72 = cast(%var_6113, dtype="int64") /* ty=Tensor[(52), int64] */;
  %73 = cast(meta[relay.Constant][3] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %74 = reshape(%71, newshape=[]) /* ty=int64 */;
  %75 = reshape(%72, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), int64] */;
  %76 = reshape(%73, newshape=[84, 28]) /* ty=Tensor[(84, 28), float32] */;
  %77 = @func_1698(%74, %75, %76) /* ty=(Tensor[(13, 4, 1), bool], Tensor[(11, 10, 5), int64], Tensor[(11, 7), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) */;
  %78 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 44), float64] */, dtype="float64") /* ty=Tensor[(6, 44), float64] */;
  %79 = cast(meta[relay.Constant][5] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %80 = reshape(%78, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), float64] */;
  %81 = reshape(%79, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %82 = @func_2775(%80, %81) /* ty=(Tensor[(2, 11, 12), float64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(?, 1078), int16], Tensor[(588, 4), float32]) */;
  %83 = cast(%var_6104, dtype="float32") /* ty=Tensor[(2, 6, 6), float32] */;
  %84 = log(%83) /* ty=Tensor[(2, 6, 6), float32] */;
  %85 = cast(%var_6121, dtype="bool") /* ty=Tensor[(2, 6, 6), bool] */;
  %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%84, dtype="bool") /* ty=Tensor[(2, 6, 6), bool] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %89 = cast(%84, dtype="float32") /* ty=Tensor[(2, 6, 6), float32] */;
  %90 = %77.0;
  %91 = %82.5;
  %92 = equal(%87, %88) /* ty=Tensor[(2, 6, 6), bool] */;
  %93 = sin(%89) /* ty=Tensor[(2, 6, 6), float32] */;
  (%90, %var_6112, %var_6113, meta[relay.Constant][3] /* ty=Tensor[(2352), float32] */, %91, meta[relay.Constant][4] /* ty=Tensor[(6, 44), float64] */, meta[relay.Constant][5] /* ty=Tensor[(1078), uint32] */, %92, %93)
}

def @func_9381(%var_9358: Tensor[(2352), float32], %var_9359: Tensor[(1, 210), int8], %var_9363: Tensor[(450), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(1, 210), int8], Tensor[(1, 77), uint32], Tensor[(150, 3), float32], Tensor[(450), float32], Tensor[(5, 3, 9), int64], Tensor[(539, 2), bool]) {
  %94 = @func_8090() /* ty=Tensor[(5, 3, 9), int64] */;
  %95 = cast(%94, dtype="int64") /* ty=Tensor[(5, 3, 9), int64] */;
  %96 = cast(%var_9363, dtype="float32") /* ty=Tensor[(450), float32] */;
  %97 = reshape(%95, newshape=[5, 3, 9]) /* ty=Tensor[(5, 3, 9), int64] */;
  %98 = reshape(%96, newshape=[150, 3]) /* ty=Tensor[(150, 3), float32] */;
  %99 = @func_7450(%97, %98) /* ty=(Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(150, 3), float32], Tensor[(2352), float32]) */;
  %100 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %101 = cast(%var_9358, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %102 = cast(%var_9359, dtype="int8") /* ty=Tensor[(1, 210), int8] */;
  %103 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 77), uint32] */, dtype="uint32") /* ty=Tensor[(1, 77), uint32] */;
  %104 = reshape(%101, newshape=[2352]) /* ty=Tensor[(2352), float32] */;
  %105 = reshape(%102, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %106 = reshape(%103, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
  %107 = @func_7923(%104, %105, %106) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(2352), float32], Tensor[(13, 450), int32], Tensor[(15, 7, 2), bool], Tensor[(210), int8], Tensor[(14, 7, 11), uint32], Tensor[(11, 7), uint32], Tensor[(539, 2), uint32], Tensor[(2, 11, 12), float64], Tensor[(3, 88), float64]) */;
  %108 = %107.8;
  %109 = cast(meta[relay.Constant][7] /* ty=Tensor[(539, 2), uint32] */, dtype="bool") /* ty=Tensor[(539, 2), bool] */;
  %110 = shape_of(%108, dtype="int32") /* ty=Tensor[(2), int32] */;
  %111 = cast(%108, dtype="bool") /* ty=Tensor[(539, 2), bool] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %113 = %99.2;
  %114 = %100.0;
  %115 = not_equal(%111, %112) /* ty=Tensor[(539, 2), bool] */;
  (%94, %var_9358, %var_9359, meta[relay.Constant][6] /* ty=Tensor[(1, 77), uint32] */, %113, %var_9363, %114, %115)
}

def @func_11107(%var_11096: Tensor[(539, 2), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), uint32], Tensor[(1, 77), uint32], Tensor[(539, 2), uint32]) {
  %116 = @func_10037() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %117 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 77), uint32] */, dtype="uint32") /* ty=Tensor[(1, 77), uint32] */;
  %118 = cast(%var_11096, dtype="uint32") /* ty=Tensor[(539, 2), uint32] */;
  %119 = reshape(%117, newshape=[77, 1]) /* ty=Tensor[(77, 1), uint32] */;
  %120 = reshape(%118, newshape=[7, 154]) /* ty=Tensor[(7, 154), uint32] */;
  %121 = @func_7424(%119, %120) /* ty=(Tensor[(5, 3, 9), float64], Tensor[(14, 7, 11), uint32], Tensor[(77, 1), uint32], Tensor[(7, 154), uint32], Tensor[(1, 1, 5), float64], Tensor[(2352), float32]) */;
  %122 = @func_10005() /* ty=Tensor[(5, 3, 9), int64] */;
  %123 = %116.1;
  %124 = %121.1;
  (%122, %123, %124, meta[relay.Constant][8] /* ty=Tensor[(1, 77), uint32] */, %var_11096)
}

def @func_10195(%var_10186: Tensor[(3, 88), float64], %var_10190: Tensor[(77, 14), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(2, 11, 12), float64], Tensor[(3, 88), float64], Tensor[(77, 14), bool]) {
  %125 = @func_7724() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %126 = cast(%var_10186, dtype="float64") /* ty=Tensor[(3, 88), float64] */;
  %127 = cast(meta[relay.Constant][9] /* ty=Tensor[(77, 14), uint32] */, dtype="uint32") /* ty=Tensor[(77, 14), uint32] */;
  %128 = reshape(%126, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), float64] */;
  %129 = reshape(%127, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %130 = @func_2775(%128, %129) /* ty=(Tensor[(2, 11, 12), float64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(?, 1078), int16], Tensor[(588, 4), float32]) */;
  %131 = cast(%var_10190, dtype="bool") /* ty=Tensor[(77, 14), bool] */;
  %132 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(77, 14), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %133 = cast(meta[relay.Constant][9] /* ty=Tensor[(77, 14), uint32] */, dtype="bool") /* ty=Tensor[(77, 14), bool] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %135 = %125.0;
  %136 = @func_8289() /* ty=Tensor[(5, 3, 9), int64] */;
  %137 = %130.0;
  %138 = less(%133, %134) /* ty=Tensor[(77, 14), bool] */;
  (%135, %136, %137, %var_10186, %138)
}

def @func_13926(%var_13889: Tensor[(539, 2), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(2, 11, 12), float64], Tensor[(264), float64], Tensor[(539, 2), uint32]) {
  %139 = @func_10585() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %140 = cast(meta[relay.Constant][10] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %141 = cast(%var_13889, dtype="uint32") /* ty=Tensor[(539, 2), uint32] */;
  %142 = reshape(%140, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), float64] */;
  %143 = reshape(%141, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %144 = @func_2775(%142, %143) /* ty=(Tensor[(2, 11, 12), float64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(?, 1078), int16], Tensor[(588, 4), float32]) */;
  %145 = %139.0;
  %146 = %144.0;
  (%145, %146, meta[relay.Constant][10] /* ty=Tensor[(264), float64] */, %var_13889)
}

def @func_10596() -> (Tensor[(5, 3, 9), int64],) {
  %147 = @func_9930() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %148 = %147.0;
  (%148,)
}

def @func_1698(%var_1677: int64, %var_1678: Tensor[(13, 4, 1), int64], %var_1692: Tensor[(84, 28), float32]) -> (Tensor[(13, 4, 1), bool], Tensor[(11, 10, 5), int64], Tensor[(11, 7), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) {
  %149 = cast(%var_1677, dtype="bool") /* ty=bool */;
  %150 = cast(%var_1678, dtype="bool") /* ty=Tensor[(13, 4, 1), bool] */;
  %151 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 7), uint32] */, dtype="uint32") /* ty=Tensor[(11, 7), uint32] */;
  %152 = cast(meta[relay.Constant][12] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %153 = cast(%var_1692, dtype="float32") /* ty=Tensor[(84, 28), float32] */;
  %154 = reshape(%151, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
  %155 = reshape(%152, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
  %156 = reshape(%153, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
  %157 = @func_1335(%154, %155, %156) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
  %158 = greater_equal(%149, %150) /* ty=Tensor[(13, 4, 1), bool] */;
  %159 = %157.1;
  (%158, %159, meta[relay.Constant][11] /* ty=Tensor[(11, 7), uint32] */, meta[relay.Constant][12] /* ty=Tensor[(1078), uint32] */, %var_1692)
}

def @func_9479() -> (Tensor[(5, 3, 9), float64],) {
  %160 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
  %161 = %160.0;
  %162 = cast(%161, dtype="float64") /* ty=Tensor[(5, 3, 9), float64] */;
  %163 = log10(%162) /* ty=Tensor[(5, 3, 9), float64] */;
  (%163,)
}

def @func_7350(%var_7296: Tensor[(77), uint32], %var_7297: Tensor[(1078), uint32], %var_7298: Tensor[(588, 4), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(588, 4), float32], Tensor[(1078), float32], Tensor[(5, 3, 9), int64]) {
  %164 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %165 = cast(%var_7296, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %166 = cast(%var_7297, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %167 = cast(%var_7298, dtype="float32") /* ty=Tensor[(588, 4), float32] */;
  %168 = reshape(%165, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
  %169 = reshape(%166, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
  %170 = reshape(%167, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
  %171 = @func_1335(%168, %169, %170) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
  %172 = cast(%var_7297, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %173 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %174 = %164.0;
  %175 = %171.2;
  %176 = atan(%172) /* ty=Tensor[(1078), float32] */;
  %177 = %173.0;
  (%174, %175, %var_7296, %var_7298, %176, %177)
}

def @func_10703() -> Tensor[(5, 3, 9), int64] {
  @func_8289() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_11579() -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) {
  %178 = @func_9099() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %179 = %178.0;
  %180 = cast(%179, dtype="float64") /* ty=Tensor[(5, 3, 9), float64] */;
  %181 = @func_10585() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %182 = cosh(%180) /* ty=Tensor[(5, 3, 9), float64] */;
  %183 = %181.0;
  (%182, %183)
}

def @func_13633() -> (Tensor[(5, 3, 9), int64],) {
  %184 = @func_12884() /* ty=(Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(7, 6, 14), int64], Tensor[(588), int64]) */;
  %185 = %184.2;
  (%185,)
}

def @func_13828() -> (Tensor[(5, 3, 9), int64],) {
  %186 = @func_11203() /* ty=Tensor[(5, 3, 9), int64] */;
  (%186,)
}

def @func_12912(%var_12894: Tensor[(13, 3, 7), float64], %var_12895: Tensor[(13, 3, 7), float64]) -> Tensor[(13, 3, 7), float64] {
  %187 = cast(%var_12895, dtype="float64") /* ty=Tensor[(13, 3, 7), float64] */;
  %188 = shape_of(%var_12894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%var_12894, dtype="float64") /* ty=Tensor[(13, 3, 7), float64] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%189, %190) /* ty=Tensor[(13, 3, 7), float64] */
}

def @func_11404() -> (Tensor[(70, 4), float32],) {
  %191 = @func_11334() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(70, 4), float32]) */;
  %192 = %191.1;
  (%192,)
}

def @func_10037() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %193 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %194 = @func_9634() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %195 = %193.0;
  %196 = %194.0;
  (%195, %196)
}

def @func_14574() -> Tensor[(5, 3, 9), int64] {
  %197 = @func_9099() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %197.0
}

def @func_11714(%var_11670: Tensor[(8, 14, 3), float64]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(8, 14, 3), float32]) {
  %198 = @func_9634() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %199 = @func_9512() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %200 = cast(%var_11670, dtype="float64") /* ty=Tensor[(8, 14, 3), float64] */;
  %201 = log(%200) /* ty=Tensor[(8, 14, 3), float64] */;
  %202 = cast(%201, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
  %203 = %198.0;
  %204 = %199.0;
  %205 = cos(%202) /* ty=Tensor[(8, 14, 3), float32] */;
  (%203, %204, %205)
}

def @func_9099() -> (Tensor[(5, 3, 9), int64],) {
  %206 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
  %207 = %206.0;
  (%207,)
}

def @func_10953(%var_10916: int16, %var_10917: Tensor[(182), int16], %var_10918: Tensor[(210), int8]) -> (Tensor[(5, 3, 9), int64], Tensor[(1078), uint32], Tensor[(15, 7, 2), bool], int16, Tensor[(182), int16], Tensor[(210), int8]) {
  %208 = @func_10813() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 154), bool], Tensor[(1078), uint32], Tensor[(77, 1), uint32], Tensor[(210), int8], Tensor[(66), float64], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) */;
  %209 = cast(%var_10916, dtype="int16") /* ty=int16 */;
  %210 = cast(%var_10917, dtype="int16") /* ty=Tensor[(182), int16] */;
  %211 = cast(%var_10918, dtype="int8") /* ty=Tensor[(210), int8] */;
  %212 = reshape(%209, newshape=[]) /* ty=int16 */;
  %213 = reshape(%210, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), int16] */;
  %214 = reshape(%211, newshape=[1, 210]) /* ty=Tensor[(1, 210), int8] */;
  %215 = @func_10107(%212, %213, %214) /* ty=(Tensor[(15, 7, 2), bool], Tensor[(1, 210), int8], Tensor[(?, 13, 14), int32]) */;
  %216 = @func_9959() /* ty=Tensor[(5, 3, 9), int64] */;
  %217 = %208.2;
  %218 = %215.0;
  (%216, %217, %218, %var_10916, %var_10917, %var_10918)
}

def @func_7450(%var_7432: Tensor[(5, 3, 9), int64], %var_7445: Tensor[(150, 3), float32]) -> (Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(150, 3), float32], Tensor[(2352), float32]) {
  %219 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %220 = %219.0;
  %221 = cast(%var_7432, dtype="int8") /* ty=Tensor[(5, 3, 9), int8] */;
  %222 = shape_of(%220, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%220, dtype="int8") /* ty=Tensor[(5, 3, 9), int8] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %225 = cast(%var_7445, dtype="float32") /* ty=Tensor[(150, 3), float32] */;
  %226 = cast(meta[relay.Constant][13] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %227 = reshape(%225, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), float32] */;
  %228 = reshape(%226, newshape=[2352]) /* ty=Tensor[(2352), float32] */;
  %229 = @func_4375(%227, %228) /* ty=(Tensor[(15, 6, 5), float32], Tensor[(?, 1078), int16], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(2352), float32]) */;
  %230 = logical_xor(%223, %224) /* ty=Tensor[(5, 3, 9), int8] */;
  %231 = %229.4;
  (%230, %231, %var_7445, meta[relay.Constant][13] /* ty=Tensor[(2352), float32] */)
}

def @func_8748(%var_8717: Tensor[(72), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(36, 2), int32]) {
  %232 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %233 = cast(%var_8717, dtype="float32") /* ty=Tensor[(72), float32] */;
  %234 = reshape(%233, newshape=[36, 2]) /* ty=Tensor[(36, 2), float32] */;
  %235 = @func_8171(%234) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(13, 4, 1), bool], Tensor[(36, 2), float32], int64, Tensor[(52, 1), int64]) */;
  %236 = %235.2;
  %237 = cast(%var_8717, dtype="int32") /* ty=Tensor[(72), int32] */;
  %238 = shape_of(%236, dtype="int32") /* ty=Tensor[(2), int32] */;
  %239 = cast(%236, dtype="int32") /* ty=Tensor[(36, 2), int32] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %241 = %232.0;
  %242 = left_shift(%239, %240) /* ty=Tensor[(36, 2), int32] */;
  (%241, %242)
}

def @func_9512() -> (Tensor[(5, 3, 9), int64],) {
  %243 = @func_8244() /* ty=Tensor[(5, 3, 9), int64] */;
  (%243,)
}

def @func_9872(%var_9864: Tensor[(270, 1), int64]) -> (Tensor[(5, 3, 9), int64], Tensor[(3, 10, 9), int64], Tensor[(270, 1), int64], Tensor[(66), float64]) {
  %244 = @func_9512() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %245 = cast(%var_9864, dtype="int64") /* ty=Tensor[(270, 1), int64] */;
  %246 = cast(meta[relay.Constant][14] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
  %247 = reshape(%245, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), int64] */;
  %248 = reshape(%246, newshape=[11, 6]) /* ty=Tensor[(11, 6), float64] */;
  %249 = @func_4732(%247, %248) /* ty=(Tensor[(3, 10, 9), int64], Tensor[(210), int8], Tensor[(11, 6), float64], Tensor[(210), int8]) */;
  %250 = %244.0;
  %251 = %249.0;
  (%250, %251, %var_9864, meta[relay.Constant][14] /* ty=Tensor[(66), float64] */)
}

def @func_12384() -> (Tensor[(5, 3, 9), int64],) {
  %252 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %253 = %252.0;
  (%253,)
}

def @func_13977() -> (Tensor[(5, 3, 9), int64],) {
  %254 = @func_11747() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %255 = %254.0;
  (%255,)
}

def @func_13657() -> Tensor[(5, 3, 9), int64] {
  @func_9199() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_9299() -> Tensor[(5, 3, 9), int64] {
  %256 = @func_9128() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %256.1
}

def @func_8052() -> (Tensor[(5, 3, 9), int64],) {
  %257 = @func_7799() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %258 = %257.0;
  (%258,)
}

def @func_5216(%var_5191: Tensor[(6, 1, 16), float32]) -> Tensor[(6, ?, 16), float32] {
  %259 = cast(%var_5191, dtype="float32") /* ty=Tensor[(6, 1, 16), float32] */;
  %260 = atan(%259) /* ty=Tensor[(6, 1, 16), float32] */;
  %261 = cast(%var_5191, dtype="int64") /* ty=Tensor[(6, 1, 16), int64] */;
  %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%260, dtype="int64") /* ty=Tensor[(6, 1, 16), int64] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %265 = bitwise_xor(%263, %264) /* ty=Tensor[(6, ?, 16), int64] */;
  %266 = cast(%265, dtype="float32") /* ty=Tensor[(6, ?, 16), float32] */;
  %267 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%260, dtype="float32") /* ty=Tensor[(6, 1, 16), float32] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%268, %269) /* ty=Tensor[(6, ?, 16), float32] */
}

def @func_8697(%var_8638: int64, %var_8679: Tensor[(1078), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32], Tensor[(13, 4, 1), bool], int64, Tensor[(52), int64], Tensor[(2352), float32], Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(1078), uint32]) {
  %270 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %271 = cast(meta[relay.Constant][15] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %272 = reshape(%271, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %273 = @func_8588(%272) /* ty=(Tensor[(70, 4), uint16], Tensor[(5, 3, 9), int64]) */;
  %274 = cast(%var_8638, dtype="int64") /* ty=int64 */;
  %275 = cast(meta[relay.Constant][16] /* ty=Tensor[(52), int64] */, dtype="int64") /* ty=Tensor[(52), int64] */;
  %276 = cast(meta[relay.Constant][17] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %277 = reshape(%274, newshape=[]) /* ty=int64 */;
  %278 = reshape(%275, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), int64] */;
  %279 = reshape(%276, newshape=[84, 28]) /* ty=Tensor[(84, 28), float32] */;
  %280 = @func_1698(%277, %278, %279) /* ty=(Tensor[(13, 4, 1), bool], Tensor[(11, 10, 5), int64], Tensor[(11, 7), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) */;
  %281 = %270.0;
  %282 = cast(%281, dtype="int64") /* ty=Tensor[(5, 3, 9), int64] */;
  %283 = reshape(%282, newshape=[5, 3, 9]) /* ty=Tensor[(5, 3, 9), int64] */;
  %284 = @func_7992(%283) /* ty=(Tensor[(5, 3, 9), int8], Tensor[(5, 3, 9), float32]) */;
  %285 = cast(%var_8679, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %286 = reshape(%285, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %287 = @func_7534(%286) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(450), float32], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1078), uint32]) */;
  %288 = %273.1;
  %289 = %280.0;
  %290 = %284.0;
  %291 = %287.1;
  (%281, %288, meta[relay.Constant][15] /* ty=Tensor[(280), float32] */, %289, %var_8638, meta[relay.Constant][16] /* ty=Tensor[(52), int64] */, meta[relay.Constant][17] /* ty=Tensor[(2352), float32] */, %290, %291, %var_8679)
}

def @func_12349(%var_12296: float32, %var_12297: Tensor[(2, 15, 3), float32], %var_12320: Tensor[(2, 15, 3), float32]) -> (Tensor[(2, 15, 3), bool], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(1, 182), int16], Tensor[(210), int8]) {
  %292 = cast(%var_12296, dtype="float32") /* ty=float32 */;
  %293 = cast(%var_12297, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
  %294 = mod(%292, %293) /* ty=Tensor[(2, 15, 3), float32] */;
  %295 = cast(%var_12320, dtype="bool") /* ty=Tensor[(2, 15, 3), bool] */;
  %296 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%294, dtype="bool") /* ty=Tensor[(2, 15, 3), bool] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %299 = cast(%var_12296, dtype="int16") /* ty=int16 */;
  %300 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 182), int16] */, dtype="int16") /* ty=Tensor[(1, 182), int16] */;
  %301 = cast(meta[relay.Constant][19] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %302 = reshape(%299, newshape=[]) /* ty=int16 */;
  %303 = reshape(%300, newshape=[182]) /* ty=Tensor[(182), int16] */;
  %304 = reshape(%301, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %305 = @func_10953(%302, %303, %304) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), uint32], Tensor[(15, 7, 2), bool], int16, Tensor[(182), int16], Tensor[(210), int8]) */;
  %306 = logical_and(%297, %298) /* ty=Tensor[(2, 15, 3), bool] */;
  %307 = @func_11115() /* ty=Tensor[(5, 3, 9), int64] */;
  %308 = %305.5;
  (%306, %307, %308, meta[relay.Constant][18] /* ty=Tensor[(1, 182), int16] */, meta[relay.Constant][19] /* ty=Tensor[(210), int8] */)
}

def @func_13864() -> (Tensor[(5, 3, 9), int64],) {
  %309 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %310 = %309.0;
  (%310,)
}

def @func_7534(%var_7529: Tensor[(1078), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(450), float32], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1078), uint32]) {
  %311 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %312 = %311.0;
  %313 = cast(%312, dtype="int64") /* ty=Tensor[(5, 3, 9), int64] */;
  %314 = cast(meta[relay.Constant][20] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %315 = reshape(%313, newshape=[5, 3, 9]) /* ty=Tensor[(5, 3, 9), int64] */;
  %316 = reshape(%314, newshape=[150, 3]) /* ty=Tensor[(150, 3), float32] */;
  %317 = @func_7450(%315, %316) /* ty=(Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(150, 3), float32], Tensor[(2352), float32]) */;
  %318 = cast(meta[relay.Constant][21] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %319 = cast(%var_7529, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %320 = reshape(%318, newshape=[77, 1]) /* ty=Tensor[(77, 1), uint32] */;
  %321 = reshape(%319, newshape=[7, 154]) /* ty=Tensor[(7, 154), uint32] */;
  %322 = @func_7424(%320, %321) /* ty=(Tensor[(5, 3, 9), float64], Tensor[(14, 7, 11), uint32], Tensor[(77, 1), uint32], Tensor[(7, 154), uint32], Tensor[(1, 1, 5), float64], Tensor[(2352), float32]) */;
  %323 = %317.1;
  %324 = %322.3;
  (%312, %323, meta[relay.Constant][20] /* ty=Tensor[(450), float32] */, %324, meta[relay.Constant][21] /* ty=Tensor[(77), uint32] */, %var_7529)
}

def @func_11980() -> Tensor[(5, 3, 9), int64] {
  @func_11203() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_8289() -> Tensor[(5, 3, 9), int64] {
  %325 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %325.0
}

def @func_2775(%var_2738: Tensor[(2, 11, 12), float64], %var_2768: Tensor[(1078), uint32]) -> (Tensor[(2, 11, 12), float64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(?, 1078), int16], Tensor[(588, 4), float32]) {
  %326 = cast(%var_2738, dtype="float64") /* ty=Tensor[(2, 11, 12), float64] */;
  %327 = cast(meta[relay.Constant][22] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %328 = cast(%var_2768, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %329 = reshape(%327, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
  %330 = reshape(%328, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
  %331 = @func_239(%329, %330) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
  %332 = cast(meta[relay.Constant][23] /* ty=Tensor[(588, 4), float32] */, dtype="float32") /* ty=Tensor[(588, 4), float32] */;
  %333 = cast(meta[relay.Constant][22] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %334 = %331.1;
  %335 = cast(%334, dtype="uint32") /* ty=Tensor[(14, 7, 11), uint32] */;
  %336 = reshape(%332, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float32] */;
  %337 = reshape(%333, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %338 = reshape(%335, newshape=[1, 1078]) /* ty=Tensor[(1, 1078), uint32] */;
  %339 = @func_382(%336, %337, %338) /* ty=(Tensor[(14, 14, 12), float32], Tensor[(77), uint32], Tensor[(?, 1078), int16]) */;
  %340 = exp(%326) /* ty=Tensor[(2, 11, 12), float64] */;
  %341 = %339.2;
  (%340, %334, meta[relay.Constant][22] /* ty=Tensor[(77), uint32] */, %var_2768, %341, meta[relay.Constant][23] /* ty=Tensor[(588, 4), float32] */)
}

def @func_2618(%var_2606: Tensor[(15, 7, 2), int8], %var_2607: Tensor[(15, 7, 2), int8]) -> Tensor[(15, 7, 2), bool] {
  %342 = cast(%var_2607, dtype="bool") /* ty=Tensor[(15, 7, 2), bool] */;
  %343 = shape_of(%var_2606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(%var_2606, dtype="bool") /* ty=Tensor[(15, 7, 2), bool] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%344, %345) /* ty=Tensor[(15, 7, 2), bool] */
}

def @func_11175() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32]) {
  %346 = @func_9634() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %347 = cast(meta[relay.Constant][24] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %348 = reshape(%347, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %349 = @func_8588(%348) /* ty=(Tensor[(70, 4), uint16], Tensor[(5, 3, 9), int64]) */;
  %350 = %346.0;
  %351 = %349.1;
  (%350, %351, meta[relay.Constant][24] /* ty=Tensor[(280), float32] */)
}

def @func_11384(%var_11348: Tensor[(7, 154), bool]) -> (Tensor[(7, 154), int32], Tensor[(7, 154), bool], Tensor[(7, 154), float32]) {
  %352 = @func_10813() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 154), bool], Tensor[(1078), uint32], Tensor[(77, 1), uint32], Tensor[(210), int8], Tensor[(66), float64], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) */;
  %353 = %352.1;
  %354 = cast(%var_11348, dtype="int32") /* ty=Tensor[(7, 154), int32] */;
  %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(2), int32] */;
  %356 = cast(%353, dtype="int32") /* ty=Tensor[(7, 154), int32] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %358 = cast(%var_11348, dtype="float32") /* ty=Tensor[(7, 154), float32] */;
  %359 = cos(%358) /* ty=Tensor[(7, 154), float32] */;
  %360 = cast(%var_11348, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(2), int32] */;
  %362 = cast(%359, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %364 = less_equal(%362, %363) /* ty=Tensor[(7, 154), bool] */;
  %365 = cast(%359, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
  %366 = shape_of(%364, dtype="int32") /* ty=Tensor[(2), int32] */;
  %367 = cast(%364, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %369 = cast(%var_11348, dtype="float32") /* ty=Tensor[(7, 154), float32] */;
  %370 = bitwise_or(%356, %357) /* ty=Tensor[(7, 154), int32] */;
  %371 = greater(%367, %368) /* ty=Tensor[(7, 154), bool] */;
  %372 = acosh(%369) /* ty=Tensor[(7, 154), float32] */;
  (%370, %371, %372)
}

def @func_7923(%var_7894: Tensor[(2352), float32], %var_7904: Tensor[(210), int8], %var_7909: Tensor[(11, 7), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(2352), float32], Tensor[(13, 450), int32], Tensor[(15, 7, 2), bool], Tensor[(210), int8], Tensor[(14, 7, 11), uint32], Tensor[(11, 7), uint32], Tensor[(539, 2), uint32], Tensor[(2, 11, 12), float64], Tensor[(3, 88), float64]) {
  %373 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %374 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 450), float32] */, dtype="float32") /* ty=Tensor[(1, 450), float32] */;
  %375 = cast(%var_7894, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %376 = reshape(%374, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), float32] */;
  %377 = reshape(%375, newshape=[2352]) /* ty=Tensor[(2352), float32] */;
  %378 = @func_4375(%376, %377) /* ty=(Tensor[(15, 6, 5), float32], Tensor[(?, 1078), int16], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(2352), float32]) */;
  %379 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 450), float32] */, dtype="int32") /* ty=Tensor[(1, 450), int32] */;
  %380 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 450), float32] */, dtype="int32") /* ty=Tensor[(13, 450), int32] */;
  %381 = cast(%var_7904, dtype="int8") /* ty=Tensor[(210), int8] */;
  %382 = cast(%var_7904, dtype="int8") /* ty=Tensor[(210), int8] */;
  %383 = reshape(%381, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
  %384 = reshape(%382, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
  %385 = cast(%var_7909, dtype="uint32") /* ty=Tensor[(11, 7), uint32] */;
  %386 = cast(meta[relay.Constant][27] /* ty=Tensor[(539, 2), uint32] */, dtype="uint32") /* ty=Tensor[(539, 2), uint32] */;
  %387 = reshape(%385, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
  %388 = reshape(%386, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
  %389 = @func_239(%387, %388) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
  %390 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 88), float64] */, dtype="float64") /* ty=Tensor[(3, 88), float64] */;
  %391 = cast(meta[relay.Constant][27] /* ty=Tensor[(539, 2), uint32] */, dtype="uint32") /* ty=Tensor[(539, 2), uint32] */;
  %392 = reshape(%390, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), float64] */;
  %393 = reshape(%391, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %394 = @func_2775(%392, %393) /* ty=(Tensor[(2, 11, 12), float64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(?, 1078), int16], Tensor[(588, 4), float32]) */;
  %395 = %373.0;
  %396 = %378.4;
  %397 = logical_xor(%379, %380) /* ty=Tensor[(13, 450), int32] */;
  %398 = @func_2618(%383, %384) /* ty=Tensor[(15, 7, 2), bool] */;
  %399 = %389.0;
  %400 = %394.0;
  (%395, %396, %var_7894, %397, %398, %var_7904, %399, %var_7909, meta[relay.Constant][27] /* ty=Tensor[(539, 2), uint32] */, %400, meta[relay.Constant][28] /* ty=Tensor[(3, 88), float64] */)
}

def @func_9685() -> (Tensor[(5, 3, 9), int64],) {
  %401 = @func_8090() /* ty=Tensor[(5, 3, 9), int64] */;
  (%401,)
}

def @func_9199() -> Tensor[(5, 3, 9), int64] {
  %402 = @func_7605() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */;
  %402.0
}

def @func_8121() -> (Tensor[(5, 3, 9), int64],) {
  %403 = @func_7747() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %404 = %403.1;
  (%404,)
}

def @func_8028() -> Tensor[(5, 3, 9), int64] {
  %405 = @func_7799() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %405.0
}

def @func_11747() -> (Tensor[(5, 3, 9), int64],) {
  %406 = @func_11175() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32]) */;
  %407 = %406.0;
  (%407,)
}

def @func_11132() -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64]) {
  %408 = @func_8121() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %409 = @func_10419() /* ty=Tensor[(5, 3, 9), float64] */;
  %410 = %408.0;
  %411 = @func_10419() /* ty=Tensor[(5, 3, 9), float64] */;
  (%409, %410, %411)
}

def @func_11930() -> (Tensor[(5, 3, 9), int64], Tensor[(1078), uint32], Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) {
  %412 = @func_9685() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %413 = cast(meta[relay.Constant][29] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %414 = reshape(%413, newshape=[1, 1078]) /* ty=Tensor[(1, 1078), uint32] */;
  %415 = @func_9803(%414) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1, 1078), uint32]) */;
  %416 = %415.1;
  %417 = cast(%416, dtype="float64") /* ty=Tensor[(5, 3, 9), float64] */;
  %418 = @func_9685() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %419 = %412.0;
  %420 = log(%417) /* ty=Tensor[(5, 3, 9), float64] */;
  %421 = %418.0;
  (%419, meta[relay.Constant][29] /* ty=Tensor[(1078), uint32] */, %420, %421)
}

def @func_7661(%var_7654: Tensor[(77), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(1078), uint32], Tensor[(14, 7, 11), uint32], Tensor[(77), uint32]) {
  %422 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
  %423 = cast(meta[relay.Constant][30] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %424 = reshape(%423, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %425 = @func_7534(%424) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(450), float32], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1078), uint32]) */;
  %426 = cast(%var_7654, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %427 = %425.3;
  %428 = cast(%427, dtype="uint32") /* ty=Tensor[(7, 154), uint32] */;
  %429 = reshape(%426, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
  %430 = reshape(%428, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
  %431 = @func_239(%429, %430) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
  %432 = %422.1;
  %433 = %431.0;
  (%432, %427, meta[relay.Constant][30] /* ty=Tensor[(1078), uint32] */, %433, %var_7654)
}

def @func_6881(%var_6870: float32, %var_6871: Tensor[(7, 10, 4), float32]) -> Tensor[(7, 10, 4), float32] {
  %434 = cast(%var_6870, dtype="float32") /* ty=float32 */;
  %435 = cast(%var_6871, dtype="float32") /* ty=Tensor[(7, 10, 4), float32] */;
  floor_mod(%434, %435) /* ty=Tensor[(7, 10, 4), float32] */
}

def @func_11841(%var_11809: Tensor[(70, 4), float32]) -> (Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float64], Tensor[(70, 4), float64]) {
  %436 = cast(4.03009f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %437 = cast(%var_11809, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %438 = reshape(%436, newshape=[]) /* ty=float32 */;
  %439 = reshape(%437, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
  %440 = @func_11163() /* ty=Tensor[(70, 4), float32] */;
  %441 = cast(%var_11809, dtype="float64") /* ty=Tensor[(70, 4), float64] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(2), int32] */;
  %443 = cast(%440, dtype="float64") /* ty=Tensor[(70, 4), float64] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %445 = cast(%var_11809, dtype="int8") /* ty=Tensor[(70, 4), int8] */;
  %446 = shape_of(%440, dtype="int32") /* ty=Tensor[(2), int32] */;
  %447 = cast(%440, dtype="int8") /* ty=Tensor[(70, 4), int8] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %449 = bitwise_and(%447, %448) /* ty=Tensor[(70, 4), int8] */;
  %450 = cast(%449, dtype="float64") /* ty=Tensor[(70, 4), float64] */;
  %451 = @func_6881(%438, %439) /* ty=Tensor[(7, 10, 4), float32] */;
  %452 = add(%443, %444) /* ty=Tensor[(70, 4), float64] */;
  %453 = log(%450) /* ty=Tensor[(70, 4), float64] */;
  (%451, 4.03009f /* ty=float32 */, %452, %453)
}

def @func_7992(%var_7974: Tensor[(5, 3, 9), int64]) -> (Tensor[(5, 3, 9), int8], Tensor[(5, 3, 9), float32]) {
  %454 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %455 = %454.0;
  %456 = cast(%var_7974, dtype="int8") /* ty=Tensor[(5, 3, 9), int8] */;
  %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%455, dtype="int8") /* ty=Tensor[(5, 3, 9), int8] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %460 = cast(%455, dtype="float32") /* ty=Tensor[(5, 3, 9), float32] */;
  %461 = left_shift(%458, %459) /* ty=Tensor[(5, 3, 9), int8] */;
  %462 = erf(%460) /* ty=Tensor[(5, 3, 9), float32] */;
  (%461, %462)
}

def @func_239(%var_205: Tensor[(1, 7, 11), uint32], %var_206: Tensor[(14, 7, 11), uint32]) -> (Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) {
  %463 = cast(%var_205, dtype="bool") /* ty=Tensor[(1, 7, 11), bool] */;
  %464 = cast(%var_206, dtype="bool") /* ty=Tensor[(14, 7, 11), bool] */;
  %465 = greater(%463, %464) /* ty=Tensor[(14, 7, 11), bool] */;
  %466 = cast(%465, dtype="uint32") /* ty=Tensor[(14, 7, 11), uint32] */;
  %467 = shape_of(%var_206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%var_206, dtype="uint32") /* ty=Tensor[(14, 7, 11), uint32] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %470 = cast(%465, dtype="float32") /* ty=Tensor[(14, 7, 11), float32] */;
  %471 = logical_xor(%468, %469) /* ty=Tensor[(14, 7, 11), uint32] */;
  %472 = exp(%470) /* ty=Tensor[(14, 7, 11), float32] */;
  (%471, %472)
}

def @func_4654(%var_4643: Tensor[(9, 7, 16), float64]) -> Tensor[(9, 7, 16), float64] {
  %473 = cast(%var_4643, dtype="float64") /* ty=Tensor[(9, 7, 16), float64] */;
  exp(%473) /* ty=Tensor[(9, 7, 16), float64] */
}

def @func_8469(%var_8457: Tensor[(6, 14, 13), float64]) -> (Tensor[(6, 14, 13), float64],) {
  %474 = cast(%var_8457, dtype="float64") /* ty=Tensor[(6, 14, 13), float64] */;
  %475 = sin(%474) /* ty=Tensor[(6, 14, 13), float64] */;
  (%475,)
}

def @func_5968(%var_5940: Tensor[(6, 9, 9), float32], %var_5962: Tensor[(77), uint32], %var_5963: Tensor[(1078), uint32], %var_5964: Tensor[(84, 28), float32]) -> (Tensor[(6, 9, 9), float32], Tensor[(6, 9, 9), float64], Tensor[(11, 7), uint32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) {
  %476 = cast(2.49129f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %477 = cast(%var_5940, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
  %478 = cast(%var_5940, dtype="float64") /* ty=Tensor[(6, 9, 9), float64] */;
  %479 = cast(%var_5962, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %480 = cast(%var_5963, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %481 = cast(%var_5964, dtype="float32") /* ty=Tensor[(84, 28), float32] */;
  %482 = reshape(%479, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
  %483 = reshape(%480, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
  %484 = reshape(%481, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
  %485 = @func_1335(%482, %483, %484) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
  %486 = mod(%476, %477) /* ty=Tensor[(6, 9, 9), float32] */;
  %487 = tan(%478) /* ty=Tensor[(6, 9, 9), float64] */;
  %488 = %485.3;
  (%486, %487, %488, %var_5962, %var_5963, %var_5964)
}

def @func_9634() -> (Tensor[(5, 3, 9), int64],) {
  %489 = @func_7605() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */;
  %490 = %489.0;
  (%490,)
}

def @func_9828() -> (Tensor[(5, 3, 9), int64],) {
  %491 = @func_8121() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %492 = %491.0;
  (%492,)
}

def @func_12402() -> Tensor[(5, 3, 9), int64] {
  @func_8289() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_11294(%var_11282: Tensor[(70, 4), float32]) -> (Tensor[(70, 4), bool], Tensor[(6, ?, 16), float32], Tensor[(96), float32], Tensor[(5, 3, 9), int64]) {
  %493 = @func_11163() /* ty=Tensor[(70, 4), float32] */;
  %494 = cast(%var_11282, dtype="bool") /* ty=Tensor[(70, 4), bool] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(2), int32] */;
  %496 = cast(%493, dtype="bool") /* ty=Tensor[(70, 4), bool] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %498 = cast(meta[relay.Constant][31] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %499 = reshape(%498, newshape=[6, 1, 16]) /* ty=Tensor[(6, 1, 16), float32] */;
  %500 = @func_10813() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 154), bool], Tensor[(1078), uint32], Tensor[(77, 1), uint32], Tensor[(210), int8], Tensor[(66), float64], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) */;
  %501 = not_equal(%496, %497) /* ty=Tensor[(70, 4), bool] */;
  %502 = @func_5216(%499) /* ty=Tensor[(6, ?, 16), float32] */;
  %503 = %500.0;
  (%501, %502, meta[relay.Constant][31] /* ty=Tensor[(96), float32] */, %503)
}

def @func_14388(%var_14366: Tensor[(1078), float32], %var_14373: int16, %var_14374: Tensor[(182), int16], %var_14375: Tensor[(66), float64]) -> (Tensor[(1078), int8], Tensor[(210), int8], int16, Tensor[(182), int16], Tensor[(66), float64]) {
  %504 = @func_10464() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(1078), uint32], Tensor[(77), uint32]) */;
  %505 = %504.1;
  %506 = cast(%var_14366, dtype="int8") /* ty=Tensor[(1078), int8] */;
  %507 = shape_of(%505, dtype="int32") /* ty=Tensor[(1), int32] */;
  %508 = cast(%505, dtype="int8") /* ty=Tensor[(1078), int8] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?), int8] */;
  %510 = cast(%var_14373, dtype="int16") /* ty=int16 */;
  %511 = cast(%var_14374, dtype="int16") /* ty=Tensor[(182), int16] */;
  %512 = cast(%var_14375, dtype="float64") /* ty=Tensor[(66), float64] */;
  %513 = reshape(%510, newshape=[]) /* ty=int16 */;
  %514 = reshape(%511, newshape=[182]) /* ty=Tensor[(182), int16] */;
  %515 = reshape(%512, newshape=[11, 6]) /* ty=Tensor[(11, 6), float64] */;
  %516 = @func_12633(%513, %514, %515) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], int16, Tensor[(182), int16], Tensor[(210), int8], Tensor[(5, 3, 9), int64], Tensor[(1, 182), int16], Tensor[(90), float32], Tensor[(210), int8], Tensor[(11, 6), float64]) */;
  %517 = bitwise_and(%508, %509) /* ty=Tensor[(1078), int8] */;
  %518 = %516.8;
  (%517, %518, %var_14373, %var_14374, %var_14375)
}

def @func_13447(%var_13418: Tensor[(1, 8, 4), int8]) -> (Tensor[(1, 8, 4), int8], Tensor[(5, 3, 9), int64]) {
  %519 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %520 = cast(%var_13418, dtype="int8") /* ty=Tensor[(1, 8, 4), int8] */;
  %521 = @func_12384() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %522 = minimum(%519, %520) /* ty=Tensor[(1, 8, 4), int8] */;
  %523 = %521.0;
  (%522, %523)
}

def @func_12173() -> Tensor[(5, 3, 9), float64] {
  %524 = @func_11579() /* ty=(Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) */;
  %524.0
}

def @func_8948(%var_8925: Tensor[(1, 66), float64], %var_8926: Tensor[(210), int8], %var_8932: Tensor[(77), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], Tensor[(1, 66), float64], Tensor[(210), int8], Tensor[(14, 7, 11), uint32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %525 = @func_7747() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %526 = cast(%var_8925, dtype="float64") /* ty=Tensor[(1, 66), float64] */;
  %527 = cast(%var_8926, dtype="int8") /* ty=Tensor[(210), int8] */;
  %528 = reshape(%526, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %529 = reshape(%527, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %530 = @func_4078(%528, %529) /* ty=(Tensor[(2, 3, 11), float64], Tensor[(15, 7, 2), bool], Tensor[(210), int8]) */;
  %531 = cast(%var_8932, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %532 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 1078), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
  %533 = reshape(%531, newshape=[77, 1]) /* ty=Tensor[(77, 1), uint32] */;
  %534 = reshape(%532, newshape=[7, 154]) /* ty=Tensor[(7, 154), uint32] */;
  %535 = @func_7424(%533, %534) /* ty=(Tensor[(5, 3, 9), float64], Tensor[(14, 7, 11), uint32], Tensor[(77, 1), uint32], Tensor[(7, 154), uint32], Tensor[(1, 1, 5), float64], Tensor[(2352), float32]) */;
  %536 = @func_7724() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %537 = %525.0;
  %538 = %530.1;
  %539 = %535.1;
  %540 = %536.0;
  %541 = @func_8289() /* ty=Tensor[(5, 3, 9), int64] */;
  (%537, %538, %var_8925, %var_8926, %539, %var_8932, meta[relay.Constant][33] /* ty=Tensor[(1, 1078), uint32] */, %540, %541)
}

def @func_9803(%var_9784: Tensor[(1, 1078), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1, 1078), uint32]) {
  %542 = @func_9099() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %543 = cast(meta[relay.Constant][34] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %544 = cast(%var_9784, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
  %545 = reshape(%543, newshape=[77, 1]) /* ty=Tensor[(77, 1), uint32] */;
  %546 = reshape(%544, newshape=[7, 154]) /* ty=Tensor[(7, 154), uint32] */;
  %547 = @func_7424(%545, %546) /* ty=(Tensor[(5, 3, 9), float64], Tensor[(14, 7, 11), uint32], Tensor[(77, 1), uint32], Tensor[(7, 154), uint32], Tensor[(1, 1, 5), float64], Tensor[(2352), float32]) */;
  %548 = @func_8090() /* ty=Tensor[(5, 3, 9), int64] */;
  %549 = %542.0;
  %550 = %547.3;
  (%548, %549, %550, meta[relay.Constant][34] /* ty=Tensor[(77), uint32] */, %var_9784)
}

def @func_12756() -> (Tensor[(5, 3, 9), int64],) {
  %551 = @func_9685() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %552 = %551.0;
  (%552,)
}

def @func_14520() -> (Tensor[(5, 3, 9), float64],) {
  %553 = @func_11040() /* ty=Tensor[(5, 3, 9), float64] */;
  (%553,)
}

def @func_13500() -> Tensor[(5, 3, 9), int64] {
  @func_7088() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_10419() -> Tensor[(5, 3, 9), float64] {
  %554 = @func_7799() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %555 = %554.0;
  %556 = cast(%555, dtype="float64") /* ty=Tensor[(5, 3, 9), float64] */;
  acosh(%556) /* ty=Tensor[(5, 3, 9), float64] */
}

def @func_7042() -> (Tensor[(5, 3, 9), int64],) {
  %557 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 3, 9), int64] */, dtype="int64") /* ty=Tensor[(5, 3, 9), int64] */;
  %558 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(5, 3, 9), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 3, 9), int64] */, dtype="int64") /* ty=Tensor[(5, 3, 9), int64] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %561 = bitwise_xor(%559, %560) /* ty=Tensor[(5, 3, 9), int64] */;
  (%561,)
}

def @func_7747() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %562 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %563 = @func_7605() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */;
  %564 = %562.0;
  %565 = %563.0;
  (%564, %565)
}

def @func_11875(%var_11849: Tensor[(6, 12, 13), int16], %var_11850: Tensor[(6, 12, 13), int16], %var_11860: Tensor[(450), float32], %var_11866: Tensor[(150, 3), float32]) -> (Tensor[(6, 12, 13), bool], Tensor[(135), int64], Tensor[(450), float32], Tensor[(150, 3), float64]) {
  %566 = cast(%var_11850, dtype="bool") /* ty=Tensor[(6, 12, 13), bool] */;
  %567 = shape_of(%var_11849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %568 = cast(%var_11849, dtype="bool") /* ty=Tensor[(6, 12, 13), bool] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %570 = cast(meta[relay.Constant][37] /* ty=Tensor[(135), int64] */, dtype="int64") /* ty=Tensor[(135), int64] */;
  %571 = cast(%var_11860, dtype="float32") /* ty=Tensor[(450), float32] */;
  %572 = reshape(%570, newshape=[5, 3, 9]) /* ty=Tensor[(5, 3, 9), int64] */;
  %573 = reshape(%571, newshape=[150, 3]) /* ty=Tensor[(150, 3), float32] */;
  %574 = @func_7450(%572, %573) /* ty=(Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(150, 3), float32], Tensor[(2352), float32]) */;
  %575 = %574.2;
  %576 = cast(%575, dtype="float32") /* ty=Tensor[(150, 3), float32] */;
  %577 = tan(%576) /* ty=Tensor[(150, 3), float32] */;
  %578 = cast(%var_11866, dtype="float64") /* ty=Tensor[(150, 3), float64] */;
  %579 = shape_of(%577, dtype="int32") /* ty=Tensor[(2), int32] */;
  %580 = cast(%577, dtype="float64") /* ty=Tensor[(150, 3), float64] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %582 = less_equal(%568, %569) /* ty=Tensor[(6, 12, 13), bool] */;
  %583 = divide(%580, %581) /* ty=Tensor[(150, 3), float64] */;
  (%582, meta[relay.Constant][37] /* ty=Tensor[(135), int64] */, %var_11860, %583)
}

def @func_8400(%var_8382: Tensor[(150, 3), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(1078, 2352), uint16], Tensor[(1078, 2352), float64], Tensor[(77), uint64], Tensor[(2352), float32], Tensor[(150, 3), float32]) {
  %584 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %585 = cast(meta[relay.Constant][40] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %586 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 154), uint32] */, dtype="uint32") /* ty=Tensor[(7, 154), uint32] */;
  %587 = cast(meta[relay.Constant][39] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %588 = reshape(%585, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
  %589 = reshape(%586, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
  %590 = reshape(%587, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
  %591 = @func_1335(%588, %589, %590) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
  %592 = %591.4;
  %593 = cast(meta[relay.Constant][39] /* ty=Tensor[(2352), float32] */, dtype="uint16") /* ty=Tensor[(2352), uint16] */;
  %594 = cast(%592, dtype="uint16") /* ty=Tensor[(1078, 1), uint16] */;
  %595 = cast(meta[relay.Constant][39] /* ty=Tensor[(2352), float32] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %596 = cast(%592, dtype="float64") /* ty=Tensor[(1078, 1), float64] */;
  %597 = cast(meta[relay.Constant][40] /* ty=Tensor[(77), uint32] */, dtype="float64") /* ty=Tensor[(77), float64] */;
  %598 = exp(%597) /* ty=Tensor[(77), float64] */;
  %599 = cast(meta[relay.Constant][41] /* ty=Tensor[(77), float64] */, dtype="uint64") /* ty=Tensor[(77), uint64] */;
  %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(1), int32] */;
  %601 = cast(%598, dtype="uint64") /* ty=Tensor[(77), uint64] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %603 = cast(%var_8382, dtype="float32") /* ty=Tensor[(150, 3), float32] */;
  %604 = cast(meta[relay.Constant][39] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %605 = reshape(%603, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), float32] */;
  %606 = reshape(%604, newshape=[2352]) /* ty=Tensor[(2352), float32] */;
  %607 = @func_4375(%605, %606) /* ty=(Tensor[(15, 6, 5), float32], Tensor[(?, 1078), int16], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(2352), float32]) */;
  %608 = %584.0;
  %609 = add(%593, %594) /* ty=Tensor[(1078, 2352), uint16] */;
  %610 = floor_mod(%595, %596) /* ty=Tensor[(1078, 2352), float64] */;
  %611 = bitwise_or(%601, %602) /* ty=Tensor[(77), uint64] */;
  %612 = %607.4;
  (%608, meta[relay.Constant][38] /* ty=Tensor[(7, 154), uint32] */, %609, %610, %611, %612, %var_8382)
}

def @func_11334() -> (Tensor[(5, 3, 9), int64], Tensor[(70, 4), float32]) {
  %613 = @func_9828() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %614 = %613.0;
  %615 = @func_10613() /* ty=Tensor[(70, 4), float32] */;
  (%614, %615)
}

def @func_12981() -> (Tensor[(70, 4), uint16], Tensor[(70, 4), float32]) {
  %616 = @func_12410() /* ty=Tensor[(70, 4), float32] */;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %618 = rsqrt(%617) /* ty=Tensor[(70, 4), float32] */;
  %619 = cast(%616, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %620 = tan(%619) /* ty=Tensor[(70, 4), float32] */;
  %621 = cast(%620, dtype="uint16") /* ty=Tensor[(70, 4), uint16] */;
  %622 = shape_of(%618, dtype="int32") /* ty=Tensor[(2), int32] */;
  %623 = cast(%618, dtype="uint16") /* ty=Tensor[(70, 4), uint16] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %625 = cast(%618, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %626 = shape_of(%620, dtype="int32") /* ty=Tensor[(2), int32] */;
  %627 = cast(%620, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %629 = maximum(%623, %624) /* ty=Tensor[(70, 4), uint16] */;
  %630 = floor_divide(%627, %628) /* ty=Tensor[(70, 4), float32] */;
  (%629, %630)
}

def @func_7605() -> (Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) {
  %631 = cast(-1.29491f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %632 = cast(meta[relay.Constant][42] /* ty=Tensor[(70, 4), float32] */, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %633 = reshape(%631, newshape=[]) /* ty=float32 */;
  %634 = reshape(%632, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
  %635 = @func_7088() /* ty=Tensor[(5, 3, 9), int64] */;
  %636 = @func_6881(%633, %634) /* ty=Tensor[(7, 10, 4), float32] */;
  (%635, %636, -1.29491f /* ty=float32 */, meta[relay.Constant][42] /* ty=Tensor[(70, 4), float32] */)
}

def @func_13198() -> (Tensor[(5, 3, 9), int64], Tensor[(280), float32], int64, Tensor[(1078), float64]) {
  %637 = @func_13136() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %638 = cast(6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %639 = cast(meta[relay.Constant][43] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %640 = reshape(%638, newshape=[]) /* ty=int64 */;
  %641 = reshape(%639, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %642 = @func_8697(%640, %641) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32], Tensor[(13, 4, 1), bool], int64, Tensor[(52), int64], Tensor[(2352), float32], Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(1078), uint32]) */;
  %643 = cast(meta[relay.Constant][43] /* ty=Tensor[(1078), uint32] */, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %644 = acos(%643) /* ty=Tensor[(1078), float64] */;
  %645 = cast(%644, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %646 = %637.0;
  %647 = %642.2;
  %648 = log10(%645) /* ty=Tensor[(1078), float64] */;
  (%646, %647, 6 /* ty=int64 */, %648)
}

def @func_10107(%var_10086: int16, %var_10087: Tensor[(1, 13, 14), int16], %var_10096: Tensor[(1, 210), int8]) -> (Tensor[(15, 7, 2), bool], Tensor[(1, 210), int8], Tensor[(?, 13, 14), int32]) {
  %649 = cast(%var_10096, dtype="int8") /* ty=Tensor[(1, 210), int8] */;
  %650 = cast(%var_10096, dtype="int8") /* ty=Tensor[(1, 210), int8] */;
  %651 = reshape(%649, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
  %652 = reshape(%650, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
  %653 = cast(%var_10086, dtype="bool") /* ty=bool */;
  %654 = cast(%var_10087, dtype="bool") /* ty=Tensor[(1, 13, 14), bool] */;
  %655 = greater_equal(%653, %654) /* ty=Tensor[(1, 13, 14), bool] */;
  %656 = cast(%var_10087, dtype="int32") /* ty=Tensor[(1, 13, 14), int32] */;
  %657 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%655, dtype="int32") /* ty=Tensor[(1, 13, 14), int32] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %660 = @func_2618(%651, %652) /* ty=Tensor[(15, 7, 2), bool] */;
  %661 = bitwise_or(%658, %659) /* ty=Tensor[(?, 13, 14), int32] */;
  (%660, %var_10096, %661)
}

def @func_13014(%var_12992: Tensor[(77), uint32], %var_12993: Tensor[(1078), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(1078), uint32], Tensor[(77), uint8]) {
  %662 = cast(%var_12992, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %663 = cast(%var_12993, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %664 = reshape(%662, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
  %665 = reshape(%663, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
  %666 = @func_239(%664, %665) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
  %667 = cast(meta[relay.Constant][44] /* ty=Tensor[(77), uint32] */, dtype="uint8") /* ty=Tensor[(77), uint8] */;
  %668 = shape_of(%var_12992, dtype="int32") /* ty=Tensor[(1), int32] */;
  %669 = cast(%var_12992, dtype="uint8") /* ty=Tensor[(77), uint8] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %671 = @func_9959() /* ty=Tensor[(5, 3, 9), int64] */;
  %672 = %666.1;
  %673 = bitwise_and(%669, %670) /* ty=Tensor[(77), uint8] */;
  (%671, %672, %var_12993, %673)
}

def @func_13802(%var_13780: Tensor[(10, 5, 15), float32], %var_13781: Tensor[(10, 5, 15), float32]) -> (Tensor[(10, 5, 15), float32], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %674 = cast(%var_13781, dtype="float32") /* ty=Tensor[(10, 5, 15), float32] */;
  %675 = shape_of(%var_13780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%var_13780, dtype="float32") /* ty=Tensor[(10, 5, 15), float32] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %678 = @func_7954() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %679 = power(%676, %677) /* ty=Tensor[(10, 5, 15), float32] */;
  %680 = %678.0;
  %681 = @func_8028() /* ty=Tensor[(5, 3, 9), int64] */;
  (%679, %680, %681)
}

def @func_7191() -> (Tensor[(5, 3, 9), int64],) {
  %682 = @func_7088() /* ty=Tensor[(5, 3, 9), int64] */;
  (%682,)
}

def @func_11313() -> (Tensor[(5, 3, 9), int64],) {
  %683 = @func_11175() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32]) */;
  %684 = %683.1;
  (%684,)
}

def @func_10311() -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) {
  %685 = @func_9479() /* ty=(Tensor[(5, 3, 9), float64],) */;
  %686 = %685.0;
  %687 = @func_8244() /* ty=Tensor[(5, 3, 9), int64] */;
  (%686, %687)
}

def @func_8992() -> (Tensor[(5, 3, 9), int64], Tensor[(66), float64]) {
  %688 = @func_7747() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %689 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
  %690 = %688.0;
  %691 = %689.4;
  (%690, %691)
}

def @func_9088(%var_9065: Tensor[(77), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32]) {
  %692 = cast(%var_9065, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %693 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 1078), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
  %694 = cast(meta[relay.Constant][46] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %695 = reshape(%692, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
  %696 = reshape(%693, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
  %697 = reshape(%694, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
  %698 = @func_1335(%695, %696, %697) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
  %699 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %700 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 1078), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
  %701 = reshape(%700, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %702 = @func_7534(%701) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(450), float32], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1078), uint32]) */;
  %703 = @func_8090() /* ty=Tensor[(5, 3, 9), int64] */;
  %704 = %698.2;
  %705 = %699.0;
  %706 = %702.3;
  (%703, %704, %var_9065, meta[relay.Constant][45] /* ty=Tensor[(1, 1078), uint32] */, meta[relay.Constant][46] /* ty=Tensor[(2352), float32] */, %705, %706)
}

def @func_12633(%var_12586: int16, %var_12587: Tensor[(182), int16], %var_12598: Tensor[(11, 6), float64]) -> (Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], int16, Tensor[(182), int16], Tensor[(210), int8], Tensor[(5, 3, 9), int64], Tensor[(1, 182), int16], Tensor[(90), float32], Tensor[(210), int8], Tensor[(11, 6), float64]) {
  %707 = @func_10037() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %708 = cast(%var_12586, dtype="int16") /* ty=int16 */;
  %709 = cast(%var_12587, dtype="int16") /* ty=Tensor[(182), int16] */;
  %710 = cast(meta[relay.Constant][47] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %711 = reshape(%708, newshape=[]) /* ty=int16 */;
  %712 = reshape(%709, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), int16] */;
  %713 = reshape(%710, newshape=[1, 210]) /* ty=Tensor[(1, 210), int8] */;
  %714 = @func_10107(%711, %712, %713) /* ty=(Tensor[(15, 7, 2), bool], Tensor[(1, 210), int8], Tensor[(?, 13, 14), int32]) */;
  %715 = @func_11747() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %716 = cast(%var_12586, dtype="float32") /* ty=float32 */;
  %717 = cast(meta[relay.Constant][48] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %718 = cast(meta[relay.Constant][48] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %719 = reshape(%716, newshape=[]) /* ty=float32 */;
  %720 = reshape(%717, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float32] */;
  %721 = reshape(%718, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float32] */;
  %722 = @func_12349(%719, %720, %721) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(1, 182), int16], Tensor[(210), int8]) */;
  %723 = cast(%var_12598, dtype="float64") /* ty=Tensor[(11, 6), float64] */;
  %724 = cast(meta[relay.Constant][47] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %725 = reshape(%723, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %726 = reshape(%724, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %727 = @func_4078(%725, %726) /* ty=(Tensor[(2, 3, 11), float64], Tensor[(15, 7, 2), bool], Tensor[(210), int8]) */;
  %728 = %707.1;
  %729 = %714.0;
  %730 = %715.0;
  %731 = %722.3;
  %732 = %727.2;
  (%728, %729, %var_12586, %var_12587, meta[relay.Constant][47] /* ty=Tensor[(210), int8] */, %730, %731, meta[relay.Constant][48] /* ty=Tensor[(90), float32] */, %732, %var_12598)
}

def @func_10873() -> (Tensor[(66), float64],) {
  %733 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
  %734 = %733.4;
  (%734,)
}

def @func_13513(%var_13506: Tensor[(8, 14, 6), int32], %var_13507: Tensor[(8, 14, 6), int32]) -> (Tensor[(8, 14, 6), int32],) {
  %735 = cast(%var_13507, dtype="int32") /* ty=Tensor[(8, 14, 6), int32] */;
  %736 = shape_of(%var_13506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%var_13506, dtype="int32") /* ty=Tensor[(8, 14, 6), int32] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %739 = bitwise_xor(%737, %738) /* ty=Tensor[(8, 14, 6), int32] */;
  (%739,)
}

def @func_11203() -> Tensor[(5, 3, 9), int64] {
  @func_7088() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_9128() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %740 = @func_8121() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %741 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %742 = %740.0;
  %743 = %741.0;
  (%742, %743)
}

def @func_7724() -> (Tensor[(5, 3, 9), int64],) {
  %744 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %745 = %744.0;
  (%745,)
}

def @func_14145() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %746 = @func_12756() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %747 = @func_12384() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %748 = %746.0;
  %749 = %747.0;
  (%748, %749)
}

def @func_12565(%var_12554: Tensor[(6, 3, 7), float64]) -> Tensor[(6, 3, 7), float64] {
  %750 = cast(%var_12554, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  %751 = atan(%750) /* ty=Tensor[(6, 3, 7), float64] */;
  %752 = cast(%751, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  atanh(%752) /* ty=Tensor[(6, 3, 7), float64] */
}

def @func_13303() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %753 = @func_10585() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %754 = @func_9199() /* ty=Tensor[(5, 3, 9), int64] */;
  %755 = %753.0;
  (%754, %755)
}

def @func_4078(%var_4071: Tensor[(2, 3, 11), float64], %var_4075: Tensor[(210), int8]) -> (Tensor[(2, 3, 11), float64], Tensor[(15, 7, 2), bool], Tensor[(210), int8]) {
  %756 = cast(%var_4071, dtype="float64") /* ty=Tensor[(2, 3, 11), float64] */;
  %757 = cast(%var_4075, dtype="int8") /* ty=Tensor[(210), int8] */;
  %758 = cast(%var_4075, dtype="int8") /* ty=Tensor[(210), int8] */;
  %759 = reshape(%757, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
  %760 = reshape(%758, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
  %761 = asinh(%756) /* ty=Tensor[(2, 3, 11), float64] */;
  %762 = @func_2618(%759, %760) /* ty=Tensor[(15, 7, 2), bool] */;
  (%761, %762, %var_4075)
}

def @func_9043(%var_9025: Tensor[(1, 77), uint32], %var_9027: Tensor[(2352), float32], %var_9031: Tensor[(2352), float32], %var_9037: Tensor[(160), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(6, 9, 9), float64], Tensor[(486), float32], Tensor[(1, 77), uint32], Tensor[(1078), uint32], Tensor[(2352), uint32], Tensor[(14, 7, 11), float32], Tensor[(160), float32]) {
  %763 = @func_8121() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %764 = cast(meta[relay.Constant][49] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %765 = cast(%var_9025, dtype="uint32") /* ty=Tensor[(1, 77), uint32] */;
  %766 = cast(meta[relay.Constant][50] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %767 = cast(%var_9027, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %768 = reshape(%764, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %769 = reshape(%765, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %770 = reshape(%766, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %771 = reshape(%767, newshape=[84, 28]) /* ty=Tensor[(84, 28), float32] */;
  %772 = @func_5968(%768, %769, %770, %771) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(6, 9, 9), float64], Tensor[(11, 7), uint32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) */;
  %773 = cast(%var_9031, dtype="uint32") /* ty=Tensor[(2352), uint32] */;
  %774 = shape_of(%var_9027, dtype="int32") /* ty=Tensor[(1), int32] */;
  %775 = cast(%var_9027, dtype="uint32") /* ty=Tensor[(2352), uint32] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %777 = cast(%var_9037, dtype="float32") /* ty=Tensor[(160), float32] */;
  %778 = cast(%var_9025, dtype="uint32") /* ty=Tensor[(1, 77), uint32] */;
  %779 = add(%775, %776) /* ty=Tensor[(2352), uint32] */;
  %780 = cast(%779, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %781 = cast(%var_9037, dtype="int32") /* ty=Tensor[(160), int32] */;
  %782 = reshape(%777, newshape=[5, 4, 8]) /* ty=Tensor[(5, 4, 8), float32] */;
  %783 = reshape(%778, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %784 = reshape(%780, newshape=[2352]) /* ty=Tensor[(2352), float32] */;
  %785 = reshape(%781, newshape=[5, 4, 8]) /* ty=Tensor[(5, 4, 8), int32] */;
  %786 = @func_2148(%782, %783, %784, %785) /* ty=(Tensor[(11, 10, 5), int64], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(14, 7, 11), float32], Tensor[(5, 4, 8), bool], Tensor[(5, 4, 8), float64]) */;
  %787 = %763.0;
  %788 = %772.1;
  %789 = %786.4;
  (%787, %788, meta[relay.Constant][49] /* ty=Tensor[(486), float32] */, %var_9025, meta[relay.Constant][50] /* ty=Tensor[(1078), uint32] */, %779, %789, %var_9037)
}

def @func_10813() -> (Tensor[(5, 3, 9), int64], Tensor[(7, 154), bool], Tensor[(1078), uint32], Tensor[(77, 1), uint32], Tensor[(210), int8], Tensor[(66), float64], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) {
  %790 = @func_9930() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %791 = cast(meta[relay.Constant][51] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %792 = cast(meta[relay.Constant][52] /* ty=Tensor[(77, 1), uint32] */, dtype="uint32") /* ty=Tensor[(77, 1), uint32] */;
  %793 = reshape(%791, newshape=[7, 154]) /* ty=Tensor[(7, 154), uint32] */;
  %794 = reshape(%792, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %795 = @func_7508(%793, %794) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(2352), float32], Tensor[(7, 154), bool], Tensor[(77), float32]) */;
  %796 = cast(meta[relay.Constant][53] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
  %797 = cast(meta[relay.Constant][54] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %798 = cast(meta[relay.Constant][52] /* ty=Tensor[(77, 1), uint32] */, dtype="uint32") /* ty=Tensor[(77, 1), uint32] */;
  %799 = reshape(%796, newshape=[1, 66]) /* ty=Tensor[(1, 66), float64] */;
  %800 = reshape(%797, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %801 = reshape(%798, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %802 = @func_8948(%799, %800, %801) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], Tensor[(1, 66), float64], Tensor[(210), int8], Tensor[(14, 7, 11), uint32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %803 = %790.0;
  %804 = %795.3;
  %805 = %802.3;
  %806 = @func_7088() /* ty=Tensor[(5, 3, 9), int64] */;
  (%803, %804, meta[relay.Constant][51] /* ty=Tensor[(1078), uint32] */, meta[relay.Constant][52] /* ty=Tensor[(77, 1), uint32] */, %805, meta[relay.Constant][53] /* ty=Tensor[(66), float64] */, meta[relay.Constant][54] /* ty=Tensor[(210), int8] */, %806)
}

def @func_12830(%var_12772: Tensor[(16, 15, 9), float32]) -> (Tensor[(16, 15, 9), float64], Tensor[(16, 15, 9), float32]) {
  %807 = cast(%var_12772, dtype="float32") /* ty=Tensor[(16, 15, 9), float32] */;
  %808 = atan(%807) /* ty=Tensor[(16, 15, 9), float32] */;
  %809 = cast(%var_12772, dtype="float64") /* ty=Tensor[(16, 15, 9), float64] */;
  %810 = shape_of(%808, dtype="int32") /* ty=Tensor[(3), int32] */;
  %811 = cast(%808, dtype="float64") /* ty=Tensor[(16, 15, 9), float64] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %813 = cast(%808, dtype="float32") /* ty=Tensor[(16, 15, 9), float32] */;
  %814 = power(%811, %812) /* ty=Tensor[(16, 15, 9), float64] */;
  %815 = sinh(%813) /* ty=Tensor[(16, 15, 9), float32] */;
  (%814, %815)
}

def @func_13715(%var_13687: Tensor[(9, 8, 4), uint32]) -> (Tensor[(9, 8, 4), bool], Tensor[(15, 7, 2), bool], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) {
  %816 = cast(%var_13687, dtype="bool") /* ty=Tensor[(9, 8, 4), bool] */;
  %817 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(9, 8, 4), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(meta[relay.Constant][55] /* ty=Tensor[(9, 8, 4), uint32] */, dtype="bool") /* ty=Tensor[(9, 8, 4), bool] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %820 = cast(meta[relay.Constant][56] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %821 = cast(meta[relay.Constant][56] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %822 = reshape(%820, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
  %823 = reshape(%821, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
  %824 = @func_13347() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %825 = less_equal(%818, %819) /* ty=Tensor[(9, 8, 4), bool] */;
  %826 = @func_2618(%822, %823) /* ty=Tensor[(15, 7, 2), bool] */;
  %827 = %824.0;
  (%825, %826, meta[relay.Constant][56] /* ty=Tensor[(210), int8] */, %827)
}

def @func_9959() -> Tensor[(5, 3, 9), int64] {
  %828 = @func_7724() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %828.0
}

def @func_13355() -> (Tensor[(5, 3, 9), int64],) {
  %829 = @func_12756() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %830 = %829.0;
  (%830,)
}

def @func_7278() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) {
  %831 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %832 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %833 = cast(meta[relay.Constant][57] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %834 = cast(meta[relay.Constant][58] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
  %835 = reshape(%833, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), int64] */;
  %836 = reshape(%834, newshape=[11, 6]) /* ty=Tensor[(11, 6), float64] */;
  %837 = @func_4732(%835, %836) /* ty=(Tensor[(3, 10, 9), int64], Tensor[(210), int8], Tensor[(11, 6), float64], Tensor[(210), int8]) */;
  %838 = %831.0;
  %839 = %832.0;
  %840 = %837.1;
  (%838, %839, %840, meta[relay.Constant][57] /* ty=Tensor[(270), int64] */, meta[relay.Constant][58] /* ty=Tensor[(66), float64] */)
}

def @func_10500() -> Tensor[(5, 3, 9), int64] {
  %841 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %841.0
}

def @func_12410() -> Tensor[(70, 4), float32] {
  %842 = @func_11404() /* ty=(Tensor[(70, 4), float32],) */;
  %842.0
}

def @func_12884() -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(7, 6, 14), int64], Tensor[(588), int64]) {
  %843 = @func_9479() /* ty=(Tensor[(5, 3, 9), float64],) */;
  %844 = @func_7799() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %845 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %846 = cast(meta[relay.Constant][59] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %847 = cast(meta[relay.Constant][59] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
  %848 = reshape(%846, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), int64] */;
  %849 = reshape(%847, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), int64] */;
  %850 = @func_11498(%848, %849) /* ty=(Tensor[(7, 6, 14), int64],) */;
  %851 = %843.0;
  %852 = %844.0;
  %853 = %845.0;
  %854 = @func_10419() /* ty=Tensor[(5, 3, 9), float64] */;
  %855 = %850.0;
  (%851, %852, %853, %854, %855, meta[relay.Constant][59] /* ty=Tensor[(588), int64] */)
}

def @func_4375(%var_4340: Tensor[(15, 6, 5), float32], %var_4363: Tensor[(2352), float32]) -> (Tensor[(15, 6, 5), float32], Tensor[(?, 1078), int16], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(2352), float32]) {
  %856 = cast(%var_4340, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
  %857 = cast(meta[relay.Constant][60] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %858 = cast(meta[relay.Constant][61] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %859 = cast(%var_4363, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %860 = reshape(%857, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
  %861 = reshape(%858, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
  %862 = reshape(%859, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
  %863 = @func_1335(%860, %861, %862) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
  %864 = acosh(%856) /* ty=Tensor[(15, 6, 5), float32] */;
  %865 = %863.5;
  (%864, %865, meta[relay.Constant][60] /* ty=Tensor[(77), uint32] */, meta[relay.Constant][61] /* ty=Tensor[(1078), uint32] */, %var_4363)
}

def @func_11028() -> (Tensor[(66), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), float32]) {
  %866 = @func_8992() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(66), float64]) */;
  %867 = @func_10464() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(1078), uint32], Tensor[(77), uint32]) */;
  %868 = @func_9128() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %869 = @func_8992() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(66), float64]) */;
  %870 = @func_9828() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %871 = %868.0;
  %872 = cast(%871, dtype="int64") /* ty=Tensor[(5, 3, 9), int64] */;
  %873 = reshape(%872, newshape=[5, 3, 9]) /* ty=Tensor[(5, 3, 9), int64] */;
  %874 = @func_7992(%873) /* ty=(Tensor[(5, 3, 9), int8], Tensor[(5, 3, 9), float32]) */;
  %875 = %866.1;
  %876 = %867.0;
  %877 = %869.0;
  %878 = %870.0;
  %879 = @func_9914() /* ty=Tensor[(5, 3, 9), float64] */;
  %880 = %874.1;
  (%875, %876, %871, %877, %878, %879, %880)
}

def @func_13347() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %881 = @func_10596() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %882 = %881.0;
  %883 = @func_9959() /* ty=Tensor[(5, 3, 9), int64] */;
  (%882, %883)
}

def @func_8171(%var_8159: Tensor[(36, 2), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(13, 4, 1), bool], Tensor[(36, 2), float32], int64, Tensor[(52, 1), int64]) {
  %884 = @func_8121() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %885 = cast(%var_8159, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %886 = cast(-2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %887 = cast(meta[relay.Constant][62] /* ty=Tensor[(52, 1), int64] */, dtype="int64") /* ty=Tensor[(52, 1), int64] */;
  %888 = cast(%var_8159, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %889 = reshape(%885, newshape=[2, 6, 6]) /* ty=Tensor[(2, 6, 6), float32] */;
  %890 = reshape(%886, newshape=[]) /* ty=int64 */;
  %891 = reshape(%887, newshape=[52]) /* ty=Tensor[(52), int64] */;
  %892 = reshape(%888, newshape=[2, 6, 6]) /* ty=Tensor[(2, 6, 6), float32] */;
  %893 = @func_6139(%889, %890, %891, %892) /* ty=(Tensor[(13, 4, 1), bool], int64, Tensor[(52), int64], Tensor[(2352), float32], Tensor[(588, 4), float32], Tensor[(6, 44), float64], Tensor[(1078), uint32], Tensor[(2, 6, 6), bool], Tensor[(2, 6, 6), float32]) */;
  %894 = %884.0;
  %895 = %893.0;
  (%894, %895, %var_8159, -2 /* ty=int64 */, meta[relay.Constant][62] /* ty=Tensor[(52, 1), int64] */)
}

def @func_14244() -> (Tensor[(5, 3, 9), int64],) {
  %896 = @func_10585() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %897 = %896.0;
  (%897,)
}

def @func_4732(%var_4686: Tensor[(3, 10, 9), int64], %var_4713: Tensor[(11, 6), float64]) -> (Tensor[(3, 10, 9), int64], Tensor[(210), int8], Tensor[(11, 6), float64], Tensor[(210), int8]) {
  %898 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 10, 9), int64] */, dtype="int64") /* ty=Tensor[(3, 10, 9), int64] */;
  %899 = shape_of(%var_4686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%var_4686, dtype="int64") /* ty=Tensor[(3, 10, 9), int64] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %902 = cast(%var_4713, dtype="float64") /* ty=Tensor[(11, 6), float64] */;
  %903 = cast(meta[relay.Constant][64] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %904 = reshape(%902, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %905 = reshape(%903, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %906 = @func_4078(%904, %905) /* ty=(Tensor[(2, 3, 11), float64], Tensor[(15, 7, 2), bool], Tensor[(210), int8]) */;
  %907 = logical_xor(%900, %901) /* ty=Tensor[(3, 10, 9), int64] */;
  %908 = %906.2;
  (%907, %908, %var_4713, meta[relay.Constant][64] /* ty=Tensor[(210), int8] */)
}

def @func_10464() -> (Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(1078), uint32], Tensor[(77), uint32]) {
  %909 = cast(meta[relay.Constant][65] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %910 = cast(meta[relay.Constant][66] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %911 = reshape(%909, newshape=[7, 154]) /* ty=Tensor[(7, 154), uint32] */;
  %912 = reshape(%910, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %913 = @func_7508(%911, %912) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(2352), float32], Tensor[(7, 154), bool], Tensor[(77), float32]) */;
  %914 = @func_9199() /* ty=Tensor[(5, 3, 9), int64] */;
  %915 = %913.1;
  (%914, %915, meta[relay.Constant][65] /* ty=Tensor[(1078), uint32] */, meta[relay.Constant][66] /* ty=Tensor[(77), uint32] */)
}

def @func_14084(%var_14074: Tensor[(77), uint32], %var_14075: Tensor[(7, 154), uint32], %var_14076: Tensor[(2352), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(7, 154), uint32], Tensor[(2352), float32], Tensor[(77), int8]) {
  %916 = @func_7747() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %917 = @func_7724() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %918 = cast(%var_14074, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %919 = cast(%var_14075, dtype="uint32") /* ty=Tensor[(7, 154), uint32] */;
  %920 = cast(%var_14076, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %921 = reshape(%918, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %922 = reshape(%919, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %923 = reshape(%920, newshape=[588, 4]) /* ty=Tensor[(588, 4), float32] */;
  %924 = @func_7350(%921, %922, %923) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(588, 4), float32], Tensor[(1078), float32], Tensor[(5, 3, 9), int64]) */;
  %925 = %924.2;
  %926 = cast(%925, dtype="int8") /* ty=Tensor[(77), int8] */;
  %927 = shape_of(%var_14074, dtype="int32") /* ty=Tensor[(1), int32] */;
  %928 = cast(%var_14074, dtype="int8") /* ty=Tensor[(77), int8] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?), int8] */;
  %930 = %916.1;
  %931 = %917.0;
  %932 = @func_8090() /* ty=Tensor[(5, 3, 9), int64] */;
  %933 = @func_9914() /* ty=Tensor[(5, 3, 9), float64] */;
  %934 = minimum(%928, %929) /* ty=Tensor[(77), int8] */;
  (%930, %931, %932, %933, %var_14075, %var_14076, %934)
}

def @func_7508(%var_7495: Tensor[(7, 154), uint32], %var_7502: Tensor[(77), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(2352), float32], Tensor[(7, 154), bool], Tensor[(77), float32]) {
  %935 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
  %936 = cast(meta[relay.Constant][67] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %937 = cast(meta[relay.Constant][68] /* ty=Tensor[(7, 154), uint32] */, dtype="uint32") /* ty=Tensor[(7, 154), uint32] */;
  %938 = cast(meta[relay.Constant][69] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %939 = reshape(%936, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %940 = reshape(%937, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %941 = reshape(%938, newshape=[588, 4]) /* ty=Tensor[(588, 4), float32] */;
  %942 = @func_7350(%939, %940, %941) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(588, 4), float32], Tensor[(1078), float32], Tensor[(5, 3, 9), int64]) */;
  %943 = cast(%var_7495, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
  %944 = shape_of(meta[relay.Constant][68] /* ty=Tensor[(7, 154), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %945 = cast(meta[relay.Constant][68] /* ty=Tensor[(7, 154), uint32] */, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %947 = cast(%var_7502, dtype="float32") /* ty=Tensor[(77), float32] */;
  %948 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(77), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %949 = cast(meta[relay.Constant][67] /* ty=Tensor[(77), uint32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?), float32] */;
  %951 = %935.0;
  %952 = %942.4;
  %953 = not_equal(%945, %946) /* ty=Tensor[(7, 154), bool] */;
  %954 = floor_divide(%949, %950) /* ty=Tensor[(77), float32] */;
  (%951, %952, meta[relay.Constant][69] /* ty=Tensor[(2352), float32] */, %953, %954)
}

def @func_9617() -> (Tensor[(5, 3, 9), int64],) {
  %955 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %956 = %955.0;
  (%956,)
}

def @func_7424(%var_7413: Tensor[(77, 1), uint32], %var_7414: Tensor[(7, 154), uint32]) -> (Tensor[(5, 3, 9), float64], Tensor[(14, 7, 11), uint32], Tensor[(77, 1), uint32], Tensor[(7, 154), uint32], Tensor[(1, 1, 5), float64], Tensor[(2352), float32]) {
  %957 = @func_7088() /* ty=Tensor[(5, 3, 9), int64] */;
  %958 = cast(%957, dtype="float64") /* ty=Tensor[(5, 3, 9), float64] */;
  %959 = cast(%var_7413, dtype="uint32") /* ty=Tensor[(77, 1), uint32] */;
  %960 = cast(%var_7414, dtype="uint32") /* ty=Tensor[(7, 154), uint32] */;
  %961 = reshape(%959, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
  %962 = reshape(%960, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
  %963 = @func_239(%961, %962) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
  %964 = cast(%var_7413, dtype="uint32") /* ty=Tensor[(77, 1), uint32] */;
  %965 = %963.0;
  %966 = cast(%965, dtype="uint32") /* ty=Tensor[(14, 7, 11), uint32] */;
  %967 = cast(meta[relay.Constant][70] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %968 = reshape(%964, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
  %969 = reshape(%966, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
  %970 = reshape(%967, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
  %971 = @func_1335(%968, %969, %970) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
  %972 = exp(%958) /* ty=Tensor[(5, 3, 9), float64] */;
  %973 = %971.7;
  (%972, %965, %var_7413, %var_7414, %973, meta[relay.Constant][70] /* ty=Tensor[(2352), float32] */)
}

def @func_11163() -> Tensor[(70, 4), float32] {
  @func_10613() /* ty=Tensor[(70, 4), float32] */
}

def @func_11073(%var_11055: Tensor[(66), float64], %var_11056: Tensor[(210, 1), int8]) -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], Tensor[(66), float64], Tensor[(2352), float32], Tensor[(77, 1), uint32], Tensor[(210, 1), float64]) {
  %974 = @func_10311() /* ty=(Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) */;
  %975 = @func_9828() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %976 = cast(%var_11055, dtype="float64") /* ty=Tensor[(66), float64] */;
  %977 = cast(%var_11056, dtype="int8") /* ty=Tensor[(210, 1), int8] */;
  %978 = reshape(%976, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %979 = reshape(%977, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %980 = @func_4078(%978, %979) /* ty=(Tensor[(2, 3, 11), float64], Tensor[(15, 7, 2), bool], Tensor[(210), int8]) */;
  %981 = cast(meta[relay.Constant][71] /* ty=Tensor[(77, 1), uint32] */, dtype="uint32") /* ty=Tensor[(77, 1), uint32] */;
  %982 = reshape(%981, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %983 = @func_9088(%982) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32]) */;
  %984 = cast(%var_11056, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %985 = %974.0;
  %986 = %975.0;
  %987 = %980.1;
  %988 = %983.4;
  %989 = sinh(%984) /* ty=Tensor[(210, 1), float64] */;
  (%985, %986, %987, %var_11055, %988, meta[relay.Constant][71] /* ty=Tensor[(77, 1), uint32] */, %989)
}

def @func_7088() -> Tensor[(5, 3, 9), int64] {
  %990 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %990.0
}

def @func_7954() -> (Tensor[(5, 3, 9), int64],) {
  %991 = @func_7724() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %992 = %991.0;
  (%992,)
}

def @func_11498(%var_11488: Tensor[(7, 6, 14), int64], %var_11489: Tensor[(7, 6, 14), int64]) -> (Tensor[(7, 6, 14), int64],) {
  %993 = cast(%var_11489, dtype="int64") /* ty=Tensor[(7, 6, 14), int64] */;
  %994 = shape_of(%var_11488, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(%var_11488, dtype="int64") /* ty=Tensor[(7, 6, 14), int64] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %997 = right_shift(%995, %996) /* ty=Tensor[(7, 6, 14), int64] */;
  (%997,)
}

def @func_10854() -> (Tensor[(5, 3, 9), int64],) {
  %998 = @func_10585() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %999 = %998.0;
  (%999,)
}

def @func_13726() -> int64 {
  %1000 = @func_13198() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(280), float32], int64, Tensor[(1078), float64]) */;
  %1000.2
}

def @func_14664(%var_14641: Tensor[(6, 7, 1), float64], %var_14654: float32) -> (Tensor[(6, 7, 1), float64], Tensor[(7, 10, 4), float32], float32, Tensor[(10, 28), float32]) {
  %1001 = cast(%var_14641, dtype="float64") /* ty=Tensor[(6, 7, 1), float64] */;
  %1002 = sin(%1001) /* ty=Tensor[(6, 7, 1), float64] */;
  %1003 = cast(%1002, dtype="float64") /* ty=Tensor[(6, 7, 1), float64] */;
  %1004 = cast(%var_14654, dtype="float32") /* ty=float32 */;
  %1005 = cast(meta[relay.Constant][72] /* ty=Tensor[(10, 28), float32] */, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
  %1006 = reshape(%1004, newshape=[]) /* ty=float32 */;
  %1007 = reshape(%1005, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
  %1008 = atan(%1003) /* ty=Tensor[(6, 7, 1), float64] */;
  %1009 = @func_6881(%1006, %1007) /* ty=Tensor[(7, 10, 4), float32] */;
  (%1008, %1009, %var_14654, meta[relay.Constant][72] /* ty=Tensor[(10, 28), float32] */)
}

def @func_7799() -> (Tensor[(5, 3, 9), int64],) {
  %1010 = @func_7088() /* ty=Tensor[(5, 3, 9), int64] */;
  (%1010,)
}

def @func_11040() -> Tensor[(5, 3, 9), float64] {
  @func_10419() /* ty=Tensor[(5, 3, 9), float64] */
}

def @func_382(%var_351: Tensor[(14, 14, 12), float32], %var_357: Tensor[(77), uint32], %var_358: Tensor[(1, 1078), uint32]) -> (Tensor[(14, 14, 12), float32], Tensor[(77), uint32], Tensor[(?, 1078), int16]) {
  %1011 = cast(%var_351, dtype="float32") /* ty=Tensor[(14, 14, 12), float32] */;
  %1012 = cast(%var_357, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %1013 = cast(%var_358, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
  %1014 = reshape(%1012, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
  %1015 = reshape(%1013, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
  %1016 = @func_239(%1014, %1015) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
  %1017 = %1016.0;
  %1018 = cast(%1017, dtype="int16") /* ty=Tensor[(14, 7, 11), int16] */;
  %1019 = shape_of(%var_358, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1020 = cast(%var_358, dtype="int16") /* ty=Tensor[(1, 1078), int16] */;
  %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1022 = exp(%1011) /* ty=Tensor[(14, 14, 12), float32] */;
  %1023 = right_shift(%1020, %1021) /* ty=Tensor[(?, 1078), int16] */;
  (%1022, %var_357, %1023)
}

def @func_9930() -> (Tensor[(5, 3, 9), int64],) {
  %1024 = @func_9828() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %1025 = %1024.0;
  (%1025,)
}

def @func_12075(%var_12059: Tensor[(66), float64], %var_12069: Tensor[(66), float64]) -> (Tensor[(66), uint8], Tensor[(66), bool]) {
  %1026 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
  %1027 = %1026.4;
  %1028 = cast(%var_12059, dtype="uint8") /* ty=Tensor[(66), uint8] */;
  %1029 = shape_of(%1027, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1030 = cast(%1027, dtype="uint8") /* ty=Tensor[(66), uint8] */;
  %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1032 = cast(%var_12069, dtype="bool") /* ty=Tensor[(66), bool] */;
  %1033 = shape_of(%var_12059, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1034 = cast(%var_12059, dtype="bool") /* ty=Tensor[(66), bool] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1036 = bitwise_or(%1030, %1031) /* ty=Tensor[(66), uint8] */;
  %1037 = logical_and(%1034, %1035) /* ty=Tensor[(66), bool] */;
  (%1036, %1037)
}

def @func_11639(%var_11599: float32, %var_11600: Tensor[(4, 4, 13), float32], %var_11616: Tensor[(1, 77), uint32], %var_11632: Tensor[(13, 4), int64], %var_11633: Tensor[(2352), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(4, 4, 13), float64], Tensor[(1, 77), bool], Tensor[(11, 7), uint32], Tensor[(13, 4), int64], Tensor[(2352), float32]) {
  %1038 = cast(%var_11616, dtype="uint32") /* ty=Tensor[(1, 77), uint32] */;
  %1039 = reshape(%1038, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %1040 = @func_9088(%1039) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32]) */;
  %1041 = cast(%var_11599, dtype="float32") /* ty=float32 */;
  %1042 = cast(%var_11600, dtype="float32") /* ty=Tensor[(4, 4, 13), float32] */;
  %1043 = mod(%1041, %1042) /* ty=Tensor[(4, 4, 13), float32] */;
  %1044 = cast(%var_11599, dtype="float64") /* ty=float64 */;
  %1045 = cast(%1043, dtype="float64") /* ty=Tensor[(4, 4, 13), float64] */;
  %1046 = cast(%var_11616, dtype="bool") /* ty=Tensor[(1, 77), bool] */;
  %1047 = cast(%var_11599, dtype="bool") /* ty=bool */;
  %1048 = cast(%var_11599, dtype="int64") /* ty=int64 */;
  %1049 = cast(%var_11632, dtype="int64") /* ty=Tensor[(13, 4), int64] */;
  %1050 = cast(%var_11633, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %1051 = reshape(%1048, newshape=[]) /* ty=int64 */;
  %1052 = reshape(%1049, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), int64] */;
  %1053 = reshape(%1050, newshape=[84, 28]) /* ty=Tensor[(84, 28), float32] */;
  %1054 = @func_1698(%1051, %1052, %1053) /* ty=(Tensor[(13, 4, 1), bool], Tensor[(11, 10, 5), int64], Tensor[(11, 7), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) */;
  %1055 = %1040.0;
  %1056 = floor_mod(%1044, %1045) /* ty=Tensor[(4, 4, 13), float64] */;
  %1057 = less(%1046, %1047) /* ty=Tensor[(1, 77), bool] */;
  %1058 = %1054.2;
  (%1055, %1056, %1057, %1058, %var_11632, %var_11633)
}

def @func_10585() -> (Tensor[(5, 3, 9), int64],) {
  %1059 = @func_8090() /* ty=Tensor[(5, 3, 9), int64] */;
  (%1059,)
}

def @func_10613() -> Tensor[(70, 4), float32] {
  %1060 = @func_7605() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */;
  %1060.3
}

def @func_8244() -> Tensor[(5, 3, 9), int64] {
  %1061 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %1061.0
}

def @func_11115() -> Tensor[(5, 3, 9), int64] {
  %1062 = @func_9634() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %1062.0
}

def @func_9914() -> Tensor[(5, 3, 9), float64] {
  %1063 = @func_7088() /* ty=Tensor[(5, 3, 9), int64] */;
  %1064 = cast(%1063, dtype="float64") /* ty=Tensor[(5, 3, 9), float64] */;
  sigmoid(%1064) /* ty=Tensor[(5, 3, 9), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9301() -> Tensor[(5, 3, 9), int64] {
  @func_9299() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_7511(%var_7509: Tensor[(7, 154), uint32], %var_7510: Tensor[(77), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(2352), float32], Tensor[(7, 154), bool], Tensor[(77), float32]) {
  %20 = fn (%var_7495: Tensor[(7, 154), uint32], %var_7502: Tensor[(77), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(2352), float32], Tensor[(7, 154), bool], Tensor[(77), float32]) {
    %0 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
    %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 154), uint32] */, dtype="uint32") /* ty=Tensor[(7, 154), uint32] */;
    %3 = cast(meta[relay.Constant][2] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %4 = reshape(%1, newshape=[77]) /* ty=Tensor[(77), uint32] */;
    %5 = reshape(%2, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
    %6 = reshape(%3, newshape=[588, 4]) /* ty=Tensor[(588, 4), float32] */;
    %7 = @func_7350(%4, %5, %6) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(588, 4), float32], Tensor[(1078), float32], Tensor[(5, 3, 9), int64]) */;
    %8 = cast(%var_7495, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
    %9 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(7, 154), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 154), uint32] */, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
    %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %12 = cast(%var_7502, dtype="float32") /* ty=Tensor[(77), float32] */;
    %13 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(77), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(77), uint32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
    %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?), float32] */;
    %16 = %0.0;
    %17 = %7.4;
    %18 = not_equal(%10, %11) /* ty=Tensor[(7, 154), bool] */;
    %19 = floor_divide(%14, %15) /* ty=Tensor[(77), float32] */;
    (%16, %17, meta[relay.Constant][2] /* ty=Tensor[(2352), float32] */, %18, %19)
  };
  %20(%var_7509, %var_7510) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(2352), float32], Tensor[(7, 154), bool], Tensor[(77), float32]) */
}

def @func_386(%var_383: Tensor[(14, 14, 12), float32], %var_384: Tensor[(77), uint32], %var_385: Tensor[(1, 1078), uint32]) -> (Tensor[(14, 14, 12), float32], Tensor[(77), uint32], Tensor[(?, 1078), int16]) {
  %34 = fn (%var_351: Tensor[(14, 14, 12), float32], %var_357: Tensor[(77), uint32], %var_358: Tensor[(1, 1078), uint32]) -> (Tensor[(14, 14, 12), float32], Tensor[(77), uint32], Tensor[(?, 1078), int16]) {
    %21 = cast(%var_351, dtype="float32") /* ty=Tensor[(14, 14, 12), float32] */;
    %22 = cast(%var_357, dtype="uint32") /* ty=Tensor[(77), uint32] */;
    %23 = cast(%var_358, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
    %24 = reshape(%22, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
    %25 = reshape(%23, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
    %26 = @func_239(%24, %25) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
    %27 = %26.0;
    %28 = cast(%27, dtype="int16") /* ty=Tensor[(14, 7, 11), int16] */;
    %29 = shape_of(%var_358, dtype="int32") /* ty=Tensor[(2), int32] */;
    %30 = cast(%var_358, dtype="int16") /* ty=Tensor[(1, 1078), int16] */;
    %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %32 = exp(%21) /* ty=Tensor[(14, 14, 12), float32] */;
    %33 = right_shift(%30, %31) /* ty=Tensor[(?, 1078), int16] */;
    (%32, %var_357, %33)
  };
  %34(%var_383, %var_384, %var_385) /* ty=(Tensor[(14, 14, 12), float32], Tensor[(77), uint32], Tensor[(?, 1078), int16]) */
}

def @func_2778(%var_2776: Tensor[(2, 11, 12), float64], %var_2777: Tensor[(1078), uint32]) -> (Tensor[(2, 11, 12), float64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(?, 1078), int16], Tensor[(588, 4), float32]) {
  %51 = fn (%var_2738: Tensor[(2, 11, 12), float64], %var_2768: Tensor[(1078), uint32]) -> (Tensor[(2, 11, 12), float64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(?, 1078), int16], Tensor[(588, 4), float32]) {
    %35 = cast(%var_2738, dtype="float64") /* ty=Tensor[(2, 11, 12), float64] */;
    %36 = cast(meta[relay.Constant][3] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
    %37 = cast(%var_2768, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
    %38 = reshape(%36, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
    %39 = reshape(%37, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
    %40 = @func_239(%38, %39) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
    %41 = cast(meta[relay.Constant][4] /* ty=Tensor[(588, 4), float32] */, dtype="float32") /* ty=Tensor[(588, 4), float32] */;
    %42 = cast(meta[relay.Constant][3] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
    %43 = %40.1;
    %44 = cast(%43, dtype="uint32") /* ty=Tensor[(14, 7, 11), uint32] */;
    %45 = reshape(%41, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float32] */;
    %46 = reshape(%42, newshape=[77]) /* ty=Tensor[(77), uint32] */;
    %47 = reshape(%44, newshape=[1, 1078]) /* ty=Tensor[(1, 1078), uint32] */;
    %48 = @func_382(%45, %46, %47) /* ty=(Tensor[(14, 14, 12), float32], Tensor[(77), uint32], Tensor[(?, 1078), int16]) */;
    %49 = exp(%35) /* ty=Tensor[(2, 11, 12), float64] */;
    %50 = %48.2;
    (%49, %43, meta[relay.Constant][3] /* ty=Tensor[(77), uint32] */, %var_2768, %50, meta[relay.Constant][4] /* ty=Tensor[(588, 4), float32] */)
  };
  %51(%var_2776, %var_2777) /* ty=(Tensor[(2, 11, 12), float64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(?, 1078), int16], Tensor[(588, 4), float32]) */
}

def @func_4375(%var_4340: Tensor[(15, 6, 5), float32], %var_4363: Tensor[(2352), float32]) -> (Tensor[(15, 6, 5), float32], Tensor[(?, 1078), int16], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(2352), float32]) {
  %52 = cast(%var_4340, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
  %53 = cast(meta[relay.Constant][5] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %54 = cast(meta[relay.Constant][6] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %55 = cast(%var_4363, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %56 = reshape(%53, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
  %57 = reshape(%54, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
  %58 = reshape(%55, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
  %59 = @func_1335(%56, %57, %58) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
  %60 = acosh(%52) /* ty=Tensor[(15, 6, 5), float32] */;
  %61 = %59.5;
  (%60, %61, meta[relay.Constant][5] /* ty=Tensor[(77), uint32] */, meta[relay.Constant][6] /* ty=Tensor[(1078), uint32] */, %var_4363)
}

def @func_9128() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %62 = @func_8121() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %63 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %64 = %62.0;
  %65 = %63.0;
  (%64, %65)
}

def @func_13658() -> Tensor[(5, 3, 9), int64] {
  %66 = fn () -> Tensor[(5, 3, 9), int64] {
    @func_9199() /* ty=Tensor[(5, 3, 9), int64] */
  };
  %66() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_8174(%var_8172: Tensor[(36, 2), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(13, 4, 1), bool], Tensor[(36, 2), float32], int64, Tensor[(52, 1), int64]) {
  @func_8171(%var_8172) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(13, 4, 1), bool], Tensor[(36, 2), float32], int64, Tensor[(52, 1), int64]) */
}

def @func_8472(%var_8470: Tensor[(6, 14, 13), float64]) -> (Tensor[(6, 14, 13), float64],) {
  @func_8469(%var_8470) /* ty=(Tensor[(6, 14, 13), float64],) */
}

def @func_11073(%var_11055: Tensor[(66), float64], %var_11056: Tensor[(210, 1), int8]) -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], Tensor[(66), float64], Tensor[(2352), float32], Tensor[(77, 1), uint32], Tensor[(210, 1), float64]) {
  %67 = @func_10311() /* ty=(Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) */;
  %68 = @func_9828() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %69 = cast(%var_11055, dtype="float64") /* ty=Tensor[(66), float64] */;
  %70 = cast(%var_11056, dtype="int8") /* ty=Tensor[(210, 1), int8] */;
  %71 = reshape(%69, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %72 = reshape(%70, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %73 = @func_4078(%71, %72) /* ty=(Tensor[(2, 3, 11), float64], Tensor[(15, 7, 2), bool], Tensor[(210), int8]) */;
  %74 = cast(meta[relay.Constant][7] /* ty=Tensor[(77, 1), uint32] */, dtype="uint32") /* ty=Tensor[(77, 1), uint32] */;
  %75 = reshape(%74, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %76 = @func_9088(%75) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32]) */;
  %77 = cast(%var_11056, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %78 = %67.0;
  %79 = %68.0;
  %80 = %73.1;
  %81 = %76.4;
  %82 = sinh(%77) /* ty=Tensor[(210, 1), float64] */;
  (%78, %79, %80, %var_11055, %81, meta[relay.Constant][7] /* ty=Tensor[(77, 1), uint32] */, %82)
}

def @func_11177() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32]) {
  @func_11175() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32]) */
}

def @func_7995(%var_7993: Tensor[(5, 3, 9), int64]) -> (Tensor[(5, 3, 9), int8], Tensor[(5, 3, 9), float32]) {
  @func_7992(%var_7993) /* ty=(Tensor[(5, 3, 9), int8], Tensor[(5, 3, 9), float32]) */
}

def @func_9480() -> (Tensor[(5, 3, 9), float64],) {
  %87 = fn () -> (Tensor[(5, 3, 9), float64],) {
    %83 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
    %84 = %83.0;
    %85 = cast(%84, dtype="float64") /* ty=Tensor[(5, 3, 9), float64] */;
    %86 = log10(%85) /* ty=Tensor[(5, 3, 9), float64] */;
    (%86,)
  };
  %87() /* ty=(Tensor[(5, 3, 9), float64],) */
}

def @func_7956() -> (Tensor[(5, 3, 9), int64],) {
  @func_7954() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_13633() -> (Tensor[(5, 3, 9), int64],) {
  %88 = @func_12884() /* ty=(Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(7, 6, 14), int64], Tensor[(588), int64]) */;
  %89 = %88.2;
  (%89,)
}

def @func_10107(%var_10086: int16, %var_10087: Tensor[(1, 13, 14), int16], %var_10096: Tensor[(1, 210), int8]) -> (Tensor[(15, 7, 2), bool], Tensor[(1, 210), int8], Tensor[(?, 13, 14), int32]) {
  %90 = cast(%var_10096, dtype="int8") /* ty=Tensor[(1, 210), int8] */;
  %91 = cast(%var_10096, dtype="int8") /* ty=Tensor[(1, 210), int8] */;
  %92 = reshape(%90, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
  %93 = reshape(%91, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
  %94 = cast(%var_10086, dtype="bool") /* ty=bool */;
  %95 = cast(%var_10087, dtype="bool") /* ty=Tensor[(1, 13, 14), bool] */;
  %96 = greater_equal(%94, %95) /* ty=Tensor[(1, 13, 14), bool] */;
  %97 = cast(%var_10087, dtype="int32") /* ty=Tensor[(1, 13, 14), int32] */;
  %98 = shape_of(%96, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%96, dtype="int32") /* ty=Tensor[(1, 13, 14), int32] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %101 = @func_2618(%92, %93) /* ty=Tensor[(15, 7, 2), bool] */;
  %102 = bitwise_or(%99, %100) /* ty=Tensor[(?, 13, 14), int32] */;
  (%101, %var_10096, %102)
}

def @func_13355() -> (Tensor[(5, 3, 9), int64],) {
  %103 = @func_12756() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %104 = %103.0;
  (%104,)
}

def @func_14445() -> (Tensor[(5, 3, 9), int64],) {
  %105 = @func_9299() /* ty=Tensor[(5, 3, 9), int64] */;
  (%105,)
}

def @func_1340(%var_1337: Tensor[(11, 7), uint32], %var_1338: Tensor[(1078, 1), uint32], %var_1339: Tensor[(4, 588), float32]) -> (Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) {
  @func_1335(%var_1337, %var_1338, %var_1339) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */
}

def @func_11109(%var_11108: Tensor[(539, 2), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), uint32], Tensor[(1, 77), uint32], Tensor[(539, 2), uint32]) {
  %115 = fn (%var_11096: Tensor[(539, 2), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), uint32], Tensor[(1, 77), uint32], Tensor[(539, 2), uint32]) {
    %106 = @func_10037() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
    %107 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 77), uint32] */, dtype="uint32") /* ty=Tensor[(1, 77), uint32] */;
    %108 = cast(%var_11096, dtype="uint32") /* ty=Tensor[(539, 2), uint32] */;
    %109 = reshape(%107, newshape=[77, 1]) /* ty=Tensor[(77, 1), uint32] */;
    %110 = reshape(%108, newshape=[7, 154]) /* ty=Tensor[(7, 154), uint32] */;
    %111 = @func_7424(%109, %110) /* ty=(Tensor[(5, 3, 9), float64], Tensor[(14, 7, 11), uint32], Tensor[(77, 1), uint32], Tensor[(7, 154), uint32], Tensor[(1, 1, 5), float64], Tensor[(2352), float32]) */;
    %112 = @func_10005() /* ty=Tensor[(5, 3, 9), int64] */;
    %113 = %106.1;
    %114 = %111.1;
    (%112, %113, %114, meta[relay.Constant][8] /* ty=Tensor[(1, 77), uint32] */, %var_11096)
  };
  %115(%var_11108) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), uint32], Tensor[(1, 77), uint32], Tensor[(539, 2), uint32]) */
}

def @func_1335(%var_1318: Tensor[(11, 7), uint32], %var_1319: Tensor[(1078, 1), uint32], %var_1328: Tensor[(4, 588), float32]) -> (Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) {
  %116 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 1, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 1, 5), float64] */;
  %117 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 1, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 1, 5), float64] */;
  %118 = cosh(%117) /* ty=Tensor[(1, 1, 5), float64] */;
  %119 = cast(%118, dtype="int64") /* ty=Tensor[(1, 1, 5), int64] */;
  %120 = cast(meta[relay.Constant][10] /* ty=Tensor[(11, 10, 5), float64] */, dtype="int64") /* ty=Tensor[(11, 10, 5), int64] */;
  %121 = cast(%var_1318, dtype="uint32") /* ty=Tensor[(11, 7), uint32] */;
  %122 = cast(%var_1319, dtype="uint32") /* ty=Tensor[(1078, 1), uint32] */;
  %123 = reshape(%121, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
  %124 = reshape(%122, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
  %125 = @func_239(%123, %124) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
  %126 = cast(%var_1328, dtype="float32") /* ty=Tensor[(4, 588), float32] */;
  %127 = cast(%var_1318, dtype="uint32") /* ty=Tensor[(11, 7), uint32] */;
  %128 = cast(%var_1319, dtype="uint32") /* ty=Tensor[(1078, 1), uint32] */;
  %129 = reshape(%126, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float32] */;
  %130 = reshape(%127, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %131 = reshape(%128, newshape=[1, 1078]) /* ty=Tensor[(1, 1078), uint32] */;
  %132 = @func_382(%129, %130, %131) /* ty=(Tensor[(14, 14, 12), float32], Tensor[(77), uint32], Tensor[(?, 1078), int16]) */;
  %133 = cast(%118, dtype="float64") /* ty=Tensor[(1, 1, 5), float64] */;
  %134 = log2(%116) /* ty=Tensor[(1, 1, 5), float64] */;
  %135 = add(%119, %120) /* ty=Tensor[(11, 10, 5), int64] */;
  %136 = %125.1;
  %137 = %132.2;
  %138 = log10(%133) /* ty=Tensor[(1, 1, 5), float64] */;
  (%134, %135, %136, %var_1318, %var_1319, %137, %var_1328, %138)
}

def @func_11386(%var_11385: Tensor[(7, 154), bool]) -> (Tensor[(7, 154), int32], Tensor[(7, 154), bool], Tensor[(7, 154), float32]) {
  %160 = fn (%var_11348: Tensor[(7, 154), bool]) -> (Tensor[(7, 154), int32], Tensor[(7, 154), bool], Tensor[(7, 154), float32]) {
    %139 = @func_10813() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 154), bool], Tensor[(1078), uint32], Tensor[(77, 1), uint32], Tensor[(210), int8], Tensor[(66), float64], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) */;
    %140 = %139.1;
    %141 = cast(%var_11348, dtype="int32") /* ty=Tensor[(7, 154), int32] */;
    %142 = shape_of(%140, dtype="int32") /* ty=Tensor[(2), int32] */;
    %143 = cast(%140, dtype="int32") /* ty=Tensor[(7, 154), int32] */;
    %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %145 = cast(%var_11348, dtype="float32") /* ty=Tensor[(7, 154), float32] */;
    %146 = cos(%145) /* ty=Tensor[(7, 154), float32] */;
    %147 = cast(%var_11348, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
    %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(2), int32] */;
    %149 = cast(%146, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
    %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %151 = less_equal(%149, %150) /* ty=Tensor[(7, 154), bool] */;
    %152 = cast(%146, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
    %153 = shape_of(%151, dtype="int32") /* ty=Tensor[(2), int32] */;
    %154 = cast(%151, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
    %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %156 = cast(%var_11348, dtype="float32") /* ty=Tensor[(7, 154), float32] */;
    %157 = bitwise_or(%143, %144) /* ty=Tensor[(7, 154), int32] */;
    %158 = greater(%154, %155) /* ty=Tensor[(7, 154), bool] */;
    %159 = acosh(%156) /* ty=Tensor[(7, 154), float32] */;
    (%157, %158, %159)
  };
  %160(%var_11385) /* ty=(Tensor[(7, 154), int32], Tensor[(7, 154), bool], Tensor[(7, 154), float32]) */
}

def @func_8953(%var_8950: Tensor[(1, 66), float64], %var_8951: Tensor[(210), int8], %var_8952: Tensor[(77), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], Tensor[(1, 66), float64], Tensor[(210), int8], Tensor[(14, 7, 11), uint32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  @func_8948(%var_8950, %var_8951, %var_8952) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], Tensor[(1, 66), float64], Tensor[(210), int8], Tensor[(14, 7, 11), uint32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */
}

def @func_13726() -> int64 {
  %161 = @func_13198() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(280), float32], int64, Tensor[(1078), float64]) */;
  %161.2
}

def @func_14575() -> Tensor[(5, 3, 9), int64] {
  %163 = fn () -> Tensor[(5, 3, 9), int64] {
    %162 = @func_9099() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %162.0
  };
  %163() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_4379(%var_4377: Tensor[(15, 6, 5), float32], %var_4378: Tensor[(2352), float32]) -> (Tensor[(15, 6, 5), float32], Tensor[(?, 1078), int16], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(2352), float32]) {
  @func_4375(%var_4377, %var_4378) /* ty=(Tensor[(15, 6, 5), float32], Tensor[(?, 1078), int16], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(2352), float32]) */
}

def @func_12633(%var_12586: int16, %var_12587: Tensor[(182), int16], %var_12598: Tensor[(11, 6), float64]) -> (Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], int16, Tensor[(182), int16], Tensor[(210), int8], Tensor[(5, 3, 9), int64], Tensor[(1, 182), int16], Tensor[(90), float32], Tensor[(210), int8], Tensor[(11, 6), float64]) {
  %164 = @func_10037() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %165 = cast(%var_12586, dtype="int16") /* ty=int16 */;
  %166 = cast(%var_12587, dtype="int16") /* ty=Tensor[(182), int16] */;
  %167 = cast(meta[relay.Constant][11] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %168 = reshape(%165, newshape=[]) /* ty=int16 */;
  %169 = reshape(%166, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), int16] */;
  %170 = reshape(%167, newshape=[1, 210]) /* ty=Tensor[(1, 210), int8] */;
  %171 = @func_10107(%168, %169, %170) /* ty=(Tensor[(15, 7, 2), bool], Tensor[(1, 210), int8], Tensor[(?, 13, 14), int32]) */;
  %172 = @func_11747() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %173 = cast(%var_12586, dtype="float32") /* ty=float32 */;
  %174 = cast(meta[relay.Constant][12] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %175 = cast(meta[relay.Constant][12] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %176 = reshape(%173, newshape=[]) /* ty=float32 */;
  %177 = reshape(%174, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float32] */;
  %178 = reshape(%175, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float32] */;
  %179 = @func_12349(%176, %177, %178) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(1, 182), int16], Tensor[(210), int8]) */;
  %180 = cast(%var_12598, dtype="float64") /* ty=Tensor[(11, 6), float64] */;
  %181 = cast(meta[relay.Constant][11] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %182 = reshape(%180, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %183 = reshape(%181, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %184 = @func_4078(%182, %183) /* ty=(Tensor[(2, 3, 11), float64], Tensor[(15, 7, 2), bool], Tensor[(210), int8]) */;
  %185 = %164.1;
  %186 = %171.0;
  %187 = %172.0;
  %188 = %179.3;
  %189 = %184.2;
  (%185, %186, %var_12586, %var_12587, meta[relay.Constant][11] /* ty=Tensor[(210), int8] */, %187, %188, meta[relay.Constant][12] /* ty=Tensor[(90), float32] */, %189, %var_12598)
}

def @func_5973(%var_5969: Tensor[(6, 9, 9), float32], %var_5970: Tensor[(77), uint32], %var_5971: Tensor[(1078), uint32], %var_5972: Tensor[(84, 28), float32]) -> (Tensor[(6, 9, 9), float32], Tensor[(6, 9, 9), float64], Tensor[(11, 7), uint32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) {
  %203 = fn (%var_5940: Tensor[(6, 9, 9), float32], %var_5962: Tensor[(77), uint32], %var_5963: Tensor[(1078), uint32], %var_5964: Tensor[(84, 28), float32]) -> (Tensor[(6, 9, 9), float32], Tensor[(6, 9, 9), float64], Tensor[(11, 7), uint32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) {
    %190 = cast(2.49129f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %191 = cast(%var_5940, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
    %192 = cast(%var_5940, dtype="float64") /* ty=Tensor[(6, 9, 9), float64] */;
    %193 = cast(%var_5962, dtype="uint32") /* ty=Tensor[(77), uint32] */;
    %194 = cast(%var_5963, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
    %195 = cast(%var_5964, dtype="float32") /* ty=Tensor[(84, 28), float32] */;
    %196 = reshape(%193, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
    %197 = reshape(%194, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
    %198 = reshape(%195, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
    %199 = @func_1335(%196, %197, %198) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
    %200 = mod(%190, %191) /* ty=Tensor[(6, 9, 9), float32] */;
    %201 = tan(%192) /* ty=Tensor[(6, 9, 9), float64] */;
    %202 = %199.3;
    (%200, %201, %202, %var_5962, %var_5963, %var_5964)
  };
  %203(%var_5969, %var_5970, %var_5971, %var_5972) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(6, 9, 9), float64], Tensor[(11, 7), uint32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) */
}

def @func_13348() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %207 = fn () -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
    %204 = @func_10596() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %205 = %204.0;
    %206 = @func_9959() /* ty=Tensor[(5, 3, 9), int64] */;
    (%205, %206)
  };
  %207() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */
}

def @func_10500() -> Tensor[(5, 3, 9), int64] {
  %208 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %208.0
}

def @func_11748() -> (Tensor[(5, 3, 9), int64],) {
  %211 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %209 = @func_11175() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32]) */;
    %210 = %209.0;
    (%210,)
  };
  %211() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_11040() -> Tensor[(5, 3, 9), float64] {
  @func_10419() /* ty=Tensor[(5, 3, 9), float64] */
}

def @func_13718(%var_13716: Tensor[(9, 8, 4), uint32]) -> (Tensor[(9, 8, 4), bool], Tensor[(15, 7, 2), bool], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) {
  @func_13715(%var_13716) /* ty=(Tensor[(9, 8, 4), bool], Tensor[(15, 7, 2), bool], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) */
}

def @func_12830(%var_12772: Tensor[(16, 15, 9), float32]) -> (Tensor[(16, 15, 9), float64], Tensor[(16, 15, 9), float32]) {
  %212 = cast(%var_12772, dtype="float32") /* ty=Tensor[(16, 15, 9), float32] */;
  %213 = atan(%212) /* ty=Tensor[(16, 15, 9), float32] */;
  %214 = cast(%var_12772, dtype="float64") /* ty=Tensor[(16, 15, 9), float64] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%213, dtype="float64") /* ty=Tensor[(16, 15, 9), float64] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %218 = cast(%213, dtype="float32") /* ty=Tensor[(16, 15, 9), float32] */;
  %219 = power(%216, %217) /* ty=Tensor[(16, 15, 9), float64] */;
  %220 = sinh(%218) /* ty=Tensor[(16, 15, 9), float32] */;
  (%219, %220)
}

def @func_11042() -> Tensor[(5, 3, 9), float64] {
  @func_11040() /* ty=Tensor[(5, 3, 9), float64] */
}

def @func_10198(%var_10196: Tensor[(3, 88), float64], %var_10197: Tensor[(77, 14), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(2, 11, 12), float64], Tensor[(3, 88), float64], Tensor[(77, 14), bool]) {
  %235 = fn (%var_10186: Tensor[(3, 88), float64], %var_10190: Tensor[(77, 14), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(2, 11, 12), float64], Tensor[(3, 88), float64], Tensor[(77, 14), bool]) {
    %221 = @func_7724() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %222 = cast(%var_10186, dtype="float64") /* ty=Tensor[(3, 88), float64] */;
    %223 = cast(meta[relay.Constant][13] /* ty=Tensor[(77, 14), uint32] */, dtype="uint32") /* ty=Tensor[(77, 14), uint32] */;
    %224 = reshape(%222, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), float64] */;
    %225 = reshape(%223, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
    %226 = @func_2775(%224, %225) /* ty=(Tensor[(2, 11, 12), float64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(?, 1078), int16], Tensor[(588, 4), float32]) */;
    %227 = cast(%var_10190, dtype="bool") /* ty=Tensor[(77, 14), bool] */;
    %228 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(77, 14), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %229 = cast(meta[relay.Constant][13] /* ty=Tensor[(77, 14), uint32] */, dtype="bool") /* ty=Tensor[(77, 14), bool] */;
    %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %231 = %221.0;
    %232 = @func_8289() /* ty=Tensor[(5, 3, 9), int64] */;
    %233 = %226.0;
    %234 = less(%229, %230) /* ty=Tensor[(77, 14), bool] */;
    (%231, %232, %233, %var_10186, %234)
  };
  %235(%var_10196, %var_10197) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(2, 11, 12), float64], Tensor[(3, 88), float64], Tensor[(77, 14), bool]) */
}

def @func_12075(%var_12059: Tensor[(66), float64], %var_12069: Tensor[(66), float64]) -> (Tensor[(66), uint8], Tensor[(66), bool]) {
  %236 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
  %237 = %236.4;
  %238 = cast(%var_12059, dtype="uint8") /* ty=Tensor[(66), uint8] */;
  %239 = shape_of(%237, dtype="int32") /* ty=Tensor[(1), int32] */;
  %240 = cast(%237, dtype="uint8") /* ty=Tensor[(66), uint8] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %242 = cast(%var_12069, dtype="bool") /* ty=Tensor[(66), bool] */;
  %243 = shape_of(%var_12059, dtype="int32") /* ty=Tensor[(1), int32] */;
  %244 = cast(%var_12059, dtype="bool") /* ty=Tensor[(66), bool] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?), bool] */;
  %246 = bitwise_or(%240, %241) /* ty=Tensor[(66), uint8] */;
  %247 = logical_and(%244, %245) /* ty=Tensor[(66), bool] */;
  (%246, %247)
}

def @func_9088(%var_9065: Tensor[(77), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32]) {
  %248 = cast(%var_9065, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %249 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 1078), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
  %250 = cast(meta[relay.Constant][15] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %251 = reshape(%248, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
  %252 = reshape(%249, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
  %253 = reshape(%250, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
  %254 = @func_1335(%251, %252, %253) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
  %255 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %256 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 1078), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
  %257 = reshape(%256, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %258 = @func_7534(%257) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(450), float32], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1078), uint32]) */;
  %259 = @func_8090() /* ty=Tensor[(5, 3, 9), int64] */;
  %260 = %254.2;
  %261 = %255.0;
  %262 = %258.3;
  (%259, %260, %var_9065, meta[relay.Constant][14] /* ty=Tensor[(1, 1078), uint32] */, meta[relay.Constant][15] /* ty=Tensor[(2352), float32] */, %261, %262)
}

def @func_9048(%var_9044: Tensor[(1, 77), uint32], %var_9045: Tensor[(2352), float32], %var_9046: Tensor[(2352), float32], %var_9047: Tensor[(160), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(6, 9, 9), float64], Tensor[(486), float32], Tensor[(1, 77), uint32], Tensor[(1078), uint32], Tensor[(2352), uint32], Tensor[(14, 7, 11), float32], Tensor[(160), float32]) {
  %290 = fn (%var_9025: Tensor[(1, 77), uint32], %var_9027: Tensor[(2352), float32], %var_9031: Tensor[(2352), float32], %var_9037: Tensor[(160), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(6, 9, 9), float64], Tensor[(486), float32], Tensor[(1, 77), uint32], Tensor[(1078), uint32], Tensor[(2352), uint32], Tensor[(14, 7, 11), float32], Tensor[(160), float32]) {
    %263 = @func_8121() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %264 = cast(meta[relay.Constant][16] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
    %265 = cast(%var_9025, dtype="uint32") /* ty=Tensor[(1, 77), uint32] */;
    %266 = cast(meta[relay.Constant][17] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
    %267 = cast(%var_9027, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %268 = reshape(%264, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %269 = reshape(%265, newshape=[77]) /* ty=Tensor[(77), uint32] */;
    %270 = reshape(%266, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
    %271 = reshape(%267, newshape=[84, 28]) /* ty=Tensor[(84, 28), float32] */;
    %272 = @func_5968(%268, %269, %270, %271) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(6, 9, 9), float64], Tensor[(11, 7), uint32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) */;
    %273 = cast(%var_9031, dtype="uint32") /* ty=Tensor[(2352), uint32] */;
    %274 = shape_of(%var_9027, dtype="int32") /* ty=Tensor[(1), int32] */;
    %275 = cast(%var_9027, dtype="uint32") /* ty=Tensor[(2352), uint32] */;
    %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %277 = cast(%var_9037, dtype="float32") /* ty=Tensor[(160), float32] */;
    %278 = cast(%var_9025, dtype="uint32") /* ty=Tensor[(1, 77), uint32] */;
    %279 = add(%275, %276) /* ty=Tensor[(2352), uint32] */;
    %280 = cast(%279, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %281 = cast(%var_9037, dtype="int32") /* ty=Tensor[(160), int32] */;
    %282 = reshape(%277, newshape=[5, 4, 8]) /* ty=Tensor[(5, 4, 8), float32] */;
    %283 = reshape(%278, newshape=[77]) /* ty=Tensor[(77), uint32] */;
    %284 = reshape(%280, newshape=[2352]) /* ty=Tensor[(2352), float32] */;
    %285 = reshape(%281, newshape=[5, 4, 8]) /* ty=Tensor[(5, 4, 8), int32] */;
    %286 = @func_2148(%282, %283, %284, %285) /* ty=(Tensor[(11, 10, 5), int64], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(14, 7, 11), float32], Tensor[(5, 4, 8), bool], Tensor[(5, 4, 8), float64]) */;
    %287 = %263.0;
    %288 = %272.1;
    %289 = %286.4;
    (%287, %288, meta[relay.Constant][16] /* ty=Tensor[(486), float32] */, %var_9025, meta[relay.Constant][17] /* ty=Tensor[(1078), uint32] */, %279, %289, %var_9037)
  };
  %290(%var_9044, %var_9045, %var_9046, %var_9047) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(6, 9, 9), float64], Tensor[(486), float32], Tensor[(1, 77), uint32], Tensor[(1078), uint32], Tensor[(2352), uint32], Tensor[(14, 7, 11), float32], Tensor[(160), float32]) */
}

def @func_7354(%var_7351: Tensor[(77), uint32], %var_7352: Tensor[(1078), uint32], %var_7353: Tensor[(588, 4), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(588, 4), float32], Tensor[(1078), float32], Tensor[(5, 3, 9), int64]) {
  %305 = fn (%var_7296: Tensor[(77), uint32], %var_7297: Tensor[(1078), uint32], %var_7298: Tensor[(588, 4), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(588, 4), float32], Tensor[(1078), float32], Tensor[(5, 3, 9), int64]) {
    %291 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %292 = cast(%var_7296, dtype="uint32") /* ty=Tensor[(77), uint32] */;
    %293 = cast(%var_7297, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
    %294 = cast(%var_7298, dtype="float32") /* ty=Tensor[(588, 4), float32] */;
    %295 = reshape(%292, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
    %296 = reshape(%293, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
    %297 = reshape(%294, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
    %298 = @func_1335(%295, %296, %297) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
    %299 = cast(%var_7297, dtype="float32") /* ty=Tensor[(1078), float32] */;
    %300 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %301 = %291.0;
    %302 = %298.2;
    %303 = atan(%299) /* ty=Tensor[(1078), float32] */;
    %304 = %300.0;
    (%301, %302, %var_7296, %var_7298, %303, %304)
  };
  %305(%var_7351, %var_7352, %var_7353) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(588, 4), float32], Tensor[(1078), float32], Tensor[(5, 3, 9), int64]) */
}

def @func_11980() -> Tensor[(5, 3, 9), int64] {
  @func_11203() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_10586() -> (Tensor[(5, 3, 9), int64],) {
  %307 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %306 = @func_8090() /* ty=Tensor[(5, 3, 9), int64] */;
    (%306,)
  };
  %307() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_8591(%var_8589: Tensor[(70, 4), float32]) -> (Tensor[(70, 4), uint16], Tensor[(5, 3, 9), int64]) {
  @func_8588(%var_8589) /* ty=(Tensor[(70, 4), uint16], Tensor[(5, 3, 9), int64]) */
}

def @func_11502(%var_11500: Tensor[(7, 6, 14), int64], %var_11501: Tensor[(7, 6, 14), int64]) -> (Tensor[(7, 6, 14), int64],) {
  @func_11498(%var_11500, %var_11501) /* ty=(Tensor[(7, 6, 14), int64],) */
}

def @func_9875(%var_9873: Tensor[(270, 1), int64]) -> (Tensor[(5, 3, 9), int64], Tensor[(3, 10, 9), int64], Tensor[(270, 1), int64], Tensor[(66), float64]) {
  @func_9872(%var_9873) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(3, 10, 9), int64], Tensor[(270, 1), int64], Tensor[(66), float64]) */
}

def @func_11498(%var_11488: Tensor[(7, 6, 14), int64], %var_11489: Tensor[(7, 6, 14), int64]) -> (Tensor[(7, 6, 14), int64],) {
  %308 = cast(%var_11489, dtype="int64") /* ty=Tensor[(7, 6, 14), int64] */;
  %309 = shape_of(%var_11488, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%var_11488, dtype="int64") /* ty=Tensor[(7, 6, 14), int64] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %312 = right_shift(%310, %311) /* ty=Tensor[(7, 6, 14), int64] */;
  (%312,)
}

def @func_11405() -> (Tensor[(70, 4), float32],) {
  %315 = fn () -> (Tensor[(70, 4), float32],) {
    %313 = @func_11334() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(70, 4), float32]) */;
    %314 = %313.1;
    (%314,)
  };
  %315() /* ty=(Tensor[(70, 4), float32],) */
}

def @func_10613() -> Tensor[(70, 4), float32] {
  %316 = @func_7605() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */;
  %316.3
}

def @func_13828() -> (Tensor[(5, 3, 9), int64],) {
  %317 = @func_11203() /* ty=Tensor[(5, 3, 9), int64] */;
  (%317,)
}

def @func_13303() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %318 = @func_10585() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %319 = @func_9199() /* ty=Tensor[(5, 3, 9), int64] */;
  %320 = %318.0;
  (%319, %320)
}

def @func_13449(%var_13448: Tensor[(1, 8, 4), int8]) -> (Tensor[(1, 8, 4), int8], Tensor[(5, 3, 9), int64]) {
  %326 = fn (%var_13418: Tensor[(1, 8, 4), int8]) -> (Tensor[(1, 8, 4), int8], Tensor[(5, 3, 9), int64]) {
    %321 = cast(meta[relay.Constant][18] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %322 = cast(%var_13418, dtype="int8") /* ty=Tensor[(1, 8, 4), int8] */;
    %323 = @func_12384() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %324 = minimum(%321, %322) /* ty=Tensor[(1, 8, 4), int8] */;
    %325 = %323.0;
    (%324, %325)
  };
  %326(%var_13448) /* ty=(Tensor[(1, 8, 4), int8], Tensor[(5, 3, 9), int64]) */
}

def @func_13830() -> (Tensor[(5, 3, 9), int64],) {
  @func_13828() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_8171(%var_8159: Tensor[(36, 2), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(13, 4, 1), bool], Tensor[(36, 2), float32], int64, Tensor[(52, 1), int64]) {
  %327 = @func_8121() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %328 = cast(%var_8159, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %329 = cast(-2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %330 = cast(meta[relay.Constant][19] /* ty=Tensor[(52, 1), int64] */, dtype="int64") /* ty=Tensor[(52, 1), int64] */;
  %331 = cast(%var_8159, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %332 = reshape(%328, newshape=[2, 6, 6]) /* ty=Tensor[(2, 6, 6), float32] */;
  %333 = reshape(%329, newshape=[]) /* ty=int64 */;
  %334 = reshape(%330, newshape=[52]) /* ty=Tensor[(52), int64] */;
  %335 = reshape(%331, newshape=[2, 6, 6]) /* ty=Tensor[(2, 6, 6), float32] */;
  %336 = @func_6139(%332, %333, %334, %335) /* ty=(Tensor[(13, 4, 1), bool], int64, Tensor[(52), int64], Tensor[(2352), float32], Tensor[(588, 4), float32], Tensor[(6, 44), float64], Tensor[(1078), uint32], Tensor[(2, 6, 6), bool], Tensor[(2, 6, 6), float32]) */;
  %337 = %327.0;
  %338 = %336.0;
  (%337, %338, %var_8159, -2 /* ty=int64 */, meta[relay.Constant][19] /* ty=Tensor[(52, 1), int64] */)
}

def @func_11175() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32]) {
  %339 = @func_9634() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %340 = cast(meta[relay.Constant][20] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %341 = reshape(%340, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %342 = @func_8588(%341) /* ty=(Tensor[(70, 4), uint16], Tensor[(5, 3, 9), int64]) */;
  %343 = %339.0;
  %344 = %342.1;
  (%343, %344, meta[relay.Constant][20] /* ty=Tensor[(280), float32] */)
}

def @func_13305() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  @func_13303() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */
}

def @func_11579() -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) {
  %345 = @func_9099() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %346 = %345.0;
  %347 = cast(%346, dtype="float64") /* ty=Tensor[(5, 3, 9), float64] */;
  %348 = @func_10585() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %349 = cosh(%347) /* ty=Tensor[(5, 3, 9), float64] */;
  %350 = %348.0;
  (%349, %350)
}

def @func_8402(%var_8401: Tensor[(150, 3), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(1078, 2352), uint16], Tensor[(1078, 2352), float64], Tensor[(77), uint64], Tensor[(2352), float32], Tensor[(150, 3), float32]) {
  %380 = fn (%var_8382: Tensor[(150, 3), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(1078, 2352), uint16], Tensor[(1078, 2352), float64], Tensor[(77), uint64], Tensor[(2352), float32], Tensor[(150, 3), float32]) {
    %351 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %352 = cast(meta[relay.Constant][23] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
    %353 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 154), uint32] */, dtype="uint32") /* ty=Tensor[(7, 154), uint32] */;
    %354 = cast(meta[relay.Constant][22] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %355 = reshape(%352, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
    %356 = reshape(%353, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
    %357 = reshape(%354, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
    %358 = @func_1335(%355, %356, %357) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
    %359 = %358.4;
    %360 = cast(meta[relay.Constant][22] /* ty=Tensor[(2352), float32] */, dtype="uint16") /* ty=Tensor[(2352), uint16] */;
    %361 = cast(%359, dtype="uint16") /* ty=Tensor[(1078, 1), uint16] */;
    %362 = cast(meta[relay.Constant][22] /* ty=Tensor[(2352), float32] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
    %363 = cast(%359, dtype="float64") /* ty=Tensor[(1078, 1), float64] */;
    %364 = cast(meta[relay.Constant][23] /* ty=Tensor[(77), uint32] */, dtype="float64") /* ty=Tensor[(77), float64] */;
    %365 = exp(%364) /* ty=Tensor[(77), float64] */;
    %366 = cast(meta[relay.Constant][24] /* ty=Tensor[(77), float64] */, dtype="uint64") /* ty=Tensor[(77), uint64] */;
    %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(1), int32] */;
    %368 = cast(%365, dtype="uint64") /* ty=Tensor[(77), uint64] */;
    %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %370 = cast(%var_8382, dtype="float32") /* ty=Tensor[(150, 3), float32] */;
    %371 = cast(meta[relay.Constant][22] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %372 = reshape(%370, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), float32] */;
    %373 = reshape(%371, newshape=[2352]) /* ty=Tensor[(2352), float32] */;
    %374 = @func_4375(%372, %373) /* ty=(Tensor[(15, 6, 5), float32], Tensor[(?, 1078), int16], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(2352), float32]) */;
    %375 = %351.0;
    %376 = add(%360, %361) /* ty=Tensor[(1078, 2352), uint16] */;
    %377 = floor_mod(%362, %363) /* ty=Tensor[(1078, 2352), float64] */;
    %378 = bitwise_or(%368, %369) /* ty=Tensor[(77), uint64] */;
    %379 = %374.4;
    (%375, meta[relay.Constant][21] /* ty=Tensor[(7, 154), uint32] */, %376, %377, %378, %379, %var_8382)
  };
  %380(%var_8401) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(1078, 2352), uint16], Tensor[(1078, 2352), float64], Tensor[(77), uint64], Tensor[(2352), float32], Tensor[(150, 3), float32]) */
}

def @func_5219(%var_5217: Tensor[(6, 1, 16), float32]) -> Tensor[(6, ?, 16), float32] {
  @func_5216(%var_5217) /* ty=Tensor[(6, ?, 16), float32] */
}

def @func_7954() -> (Tensor[(5, 3, 9), int64],) {
  %381 = @func_7724() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %382 = %381.0;
  (%382,)
}

def @func_11880(%var_11876: Tensor[(6, 12, 13), int16], %var_11877: Tensor[(6, 12, 13), int16], %var_11878: Tensor[(450), float32], %var_11879: Tensor[(150, 3), float32]) -> (Tensor[(6, 12, 13), bool], Tensor[(135), int64], Tensor[(450), float32], Tensor[(150, 3), float64]) {
  %401 = fn (%var_11849: Tensor[(6, 12, 13), int16], %var_11850: Tensor[(6, 12, 13), int16], %var_11860: Tensor[(450), float32], %var_11866: Tensor[(150, 3), float32]) -> (Tensor[(6, 12, 13), bool], Tensor[(135), int64], Tensor[(450), float32], Tensor[(150, 3), float64]) {
    %383 = cast(%var_11850, dtype="bool") /* ty=Tensor[(6, 12, 13), bool] */;
    %384 = shape_of(%var_11849, dtype="int32") /* ty=Tensor[(3), int32] */;
    %385 = cast(%var_11849, dtype="bool") /* ty=Tensor[(6, 12, 13), bool] */;
    %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %387 = cast(meta[relay.Constant][25] /* ty=Tensor[(135), int64] */, dtype="int64") /* ty=Tensor[(135), int64] */;
    %388 = cast(%var_11860, dtype="float32") /* ty=Tensor[(450), float32] */;
    %389 = reshape(%387, newshape=[5, 3, 9]) /* ty=Tensor[(5, 3, 9), int64] */;
    %390 = reshape(%388, newshape=[150, 3]) /* ty=Tensor[(150, 3), float32] */;
    %391 = @func_7450(%389, %390) /* ty=(Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(150, 3), float32], Tensor[(2352), float32]) */;
    %392 = %391.2;
    %393 = cast(%392, dtype="float32") /* ty=Tensor[(150, 3), float32] */;
    %394 = tan(%393) /* ty=Tensor[(150, 3), float32] */;
    %395 = cast(%var_11866, dtype="float64") /* ty=Tensor[(150, 3), float64] */;
    %396 = shape_of(%394, dtype="int32") /* ty=Tensor[(2), int32] */;
    %397 = cast(%394, dtype="float64") /* ty=Tensor[(150, 3), float64] */;
    %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %399 = less_equal(%385, %386) /* ty=Tensor[(6, 12, 13), bool] */;
    %400 = divide(%397, %398) /* ty=Tensor[(150, 3), float64] */;
    (%399, meta[relay.Constant][25] /* ty=Tensor[(135), int64] */, %var_11860, %400)
  };
  %401(%var_11876, %var_11877, %var_11878, %var_11879) /* ty=(Tensor[(6, 12, 13), bool], Tensor[(135), int64], Tensor[(450), float32], Tensor[(150, 3), float64]) */
}

def @func_10703() -> Tensor[(5, 3, 9), int64] {
  @func_8289() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_14145() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %402 = @func_12756() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %403 = @func_12384() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %404 = %402.0;
  %405 = %403.0;
  (%404, %405)
}

def @func_10502() -> Tensor[(5, 3, 9), int64] {
  @func_10500() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_12916(%var_12914: Tensor[(13, 3, 7), float64], %var_12915: Tensor[(13, 3, 7), float64]) -> Tensor[(13, 3, 7), float64] {
  @func_12912(%var_12914, %var_12915) /* ty=Tensor[(13, 3, 7), float64] */
}

def @func_14244() -> (Tensor[(5, 3, 9), int64],) {
  %406 = @func_10585() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %407 = %406.0;
  (%407,)
}

def @func_10419() -> Tensor[(5, 3, 9), float64] {
  %408 = @func_7799() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %409 = %408.0;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(5, 3, 9), float64] */;
  acosh(%410) /* ty=Tensor[(5, 3, 9), float64] */
}

def @func_8053() -> (Tensor[(5, 3, 9), int64],) {
  %413 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %411 = @func_7799() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %412 = %411.0;
    (%412,)
  };
  %413() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_12885() -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(7, 6, 14), int64], Tensor[(588), int64]) {
  %427 = fn () -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(7, 6, 14), int64], Tensor[(588), int64]) {
    %414 = @func_9479() /* ty=(Tensor[(5, 3, 9), float64],) */;
    %415 = @func_7799() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %416 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %417 = cast(meta[relay.Constant][26] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
    %418 = cast(meta[relay.Constant][26] /* ty=Tensor[(588), int64] */, dtype="int64") /* ty=Tensor[(588), int64] */;
    %419 = reshape(%417, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), int64] */;
    %420 = reshape(%418, newshape=[7, 6, 14]) /* ty=Tensor[(7, 6, 14), int64] */;
    %421 = @func_11498(%419, %420) /* ty=(Tensor[(7, 6, 14), int64],) */;
    %422 = %414.0;
    %423 = %415.0;
    %424 = %416.0;
    %425 = @func_10419() /* ty=Tensor[(5, 3, 9), float64] */;
    %426 = %421.0;
    (%422, %423, %424, %425, %426, meta[relay.Constant][26] /* ty=Tensor[(588), int64] */)
  };
  %427() /* ty=(Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(7, 6, 14), int64], Tensor[(588), int64]) */
}

def @func_13865() -> (Tensor[(5, 3, 9), int64],) {
  %430 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %428 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %429 = %428.0;
    (%429,)
  };
  %430() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_5216(%var_5191: Tensor[(6, 1, 16), float32]) -> Tensor[(6, ?, 16), float32] {
  %431 = cast(%var_5191, dtype="float32") /* ty=Tensor[(6, 1, 16), float32] */;
  %432 = atan(%431) /* ty=Tensor[(6, 1, 16), float32] */;
  %433 = cast(%var_5191, dtype="int64") /* ty=Tensor[(6, 1, 16), int64] */;
  %434 = shape_of(%432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%432, dtype="int64") /* ty=Tensor[(6, 1, 16), int64] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %437 = bitwise_xor(%435, %436) /* ty=Tensor[(6, ?, 16), int64] */;
  %438 = cast(%437, dtype="float32") /* ty=Tensor[(6, ?, 16), float32] */;
  %439 = shape_of(%432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%432, dtype="float32") /* ty=Tensor[(6, 1, 16), float32] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%440, %441) /* ty=Tensor[(6, ?, 16), float32] */
}

def @func_4081(%var_4079: Tensor[(2, 3, 11), float64], %var_4080: Tensor[(210), int8]) -> (Tensor[(2, 3, 11), float64], Tensor[(15, 7, 2), bool], Tensor[(210), int8]) {
  %449 = fn (%var_4071: Tensor[(2, 3, 11), float64], %var_4075: Tensor[(210), int8]) -> (Tensor[(2, 3, 11), float64], Tensor[(15, 7, 2), bool], Tensor[(210), int8]) {
    %442 = cast(%var_4071, dtype="float64") /* ty=Tensor[(2, 3, 11), float64] */;
    %443 = cast(%var_4075, dtype="int8") /* ty=Tensor[(210), int8] */;
    %444 = cast(%var_4075, dtype="int8") /* ty=Tensor[(210), int8] */;
    %445 = reshape(%443, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
    %446 = reshape(%444, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
    %447 = asinh(%442) /* ty=Tensor[(2, 3, 11), float64] */;
    %448 = @func_2618(%445, %446) /* ty=Tensor[(15, 7, 2), bool] */;
    (%447, %448, %var_4075)
  };
  %449(%var_4079, %var_4080) /* ty=(Tensor[(2, 3, 11), float64], Tensor[(15, 7, 2), bool], Tensor[(210), int8]) */
}

def @func_12385() -> (Tensor[(5, 3, 9), int64],) {
  %452 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %450 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %451 = %450.0;
    (%451,)
  };
  %452() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_10615() -> Tensor[(70, 4), float32] {
  @func_10613() /* ty=Tensor[(70, 4), float32] */
}

def @func_13200() -> (Tensor[(5, 3, 9), int64], Tensor[(280), float32], int64, Tensor[(1078), float64]) {
  @func_13198() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(280), float32], int64, Tensor[(1078), float64]) */
}

def @func_11134() -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64]) {
  @func_11132() /* ty=(Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64]) */
}

def @func_10813() -> (Tensor[(5, 3, 9), int64], Tensor[(7, 154), bool], Tensor[(1078), uint32], Tensor[(77, 1), uint32], Tensor[(210), int8], Tensor[(66), float64], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) {
  %453 = @func_9930() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %454 = cast(meta[relay.Constant][27] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %455 = cast(meta[relay.Constant][28] /* ty=Tensor[(77, 1), uint32] */, dtype="uint32") /* ty=Tensor[(77, 1), uint32] */;
  %456 = reshape(%454, newshape=[7, 154]) /* ty=Tensor[(7, 154), uint32] */;
  %457 = reshape(%455, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %458 = @func_7508(%456, %457) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(2352), float32], Tensor[(7, 154), bool], Tensor[(77), float32]) */;
  %459 = cast(meta[relay.Constant][29] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
  %460 = cast(meta[relay.Constant][30] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %461 = cast(meta[relay.Constant][28] /* ty=Tensor[(77, 1), uint32] */, dtype="uint32") /* ty=Tensor[(77, 1), uint32] */;
  %462 = reshape(%459, newshape=[1, 66]) /* ty=Tensor[(1, 66), float64] */;
  %463 = reshape(%460, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %464 = reshape(%461, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %465 = @func_8948(%462, %463, %464) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], Tensor[(1, 66), float64], Tensor[(210), int8], Tensor[(14, 7, 11), uint32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %466 = %453.0;
  %467 = %458.3;
  %468 = %465.3;
  %469 = @func_7088() /* ty=Tensor[(5, 3, 9), int64] */;
  (%466, %467, meta[relay.Constant][27] /* ty=Tensor[(1078), uint32] */, meta[relay.Constant][28] /* ty=Tensor[(77, 1), uint32] */, %468, meta[relay.Constant][29] /* ty=Tensor[(66), float64] */, meta[relay.Constant][30] /* ty=Tensor[(210), int8] */, %469)
}

def @func_10465() -> (Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(1078), uint32], Tensor[(77), uint32]) {
  %477 = fn () -> (Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(1078), uint32], Tensor[(77), uint32]) {
    %470 = cast(meta[relay.Constant][31] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
    %471 = cast(meta[relay.Constant][32] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
    %472 = reshape(%470, newshape=[7, 154]) /* ty=Tensor[(7, 154), uint32] */;
    %473 = reshape(%471, newshape=[77]) /* ty=Tensor[(77), uint32] */;
    %474 = @func_7508(%472, %473) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(2352), float32], Tensor[(7, 154), bool], Tensor[(77), float32]) */;
    %475 = @func_9199() /* ty=Tensor[(5, 3, 9), int64] */;
    %476 = %474.1;
    (%475, %476, meta[relay.Constant][31] /* ty=Tensor[(1078), uint32] */, meta[relay.Constant][32] /* ty=Tensor[(77), uint32] */)
  };
  %477() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(1078), uint32], Tensor[(77), uint32]) */
}

def @func_13728() -> int64 {
  @func_13726() /* ty=int64 */
}

def @func_7992(%var_7974: Tensor[(5, 3, 9), int64]) -> (Tensor[(5, 3, 9), int8], Tensor[(5, 3, 9), float32]) {
  %478 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %479 = %478.0;
  %480 = cast(%var_7974, dtype="int8") /* ty=Tensor[(5, 3, 9), int8] */;
  %481 = shape_of(%479, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%479, dtype="int8") /* ty=Tensor[(5, 3, 9), int8] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %484 = cast(%479, dtype="float32") /* ty=Tensor[(5, 3, 9), float32] */;
  %485 = left_shift(%482, %483) /* ty=Tensor[(5, 3, 9), int8] */;
  %486 = erf(%484) /* ty=Tensor[(5, 3, 9), float32] */;
  (%485, %486)
}

def @func_12912(%var_12894: Tensor[(13, 3, 7), float64], %var_12895: Tensor[(13, 3, 7), float64]) -> Tensor[(13, 3, 7), float64] {
  %487 = cast(%var_12895, dtype="float64") /* ty=Tensor[(13, 3, 7), float64] */;
  %488 = shape_of(%var_12894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%var_12894, dtype="float64") /* ty=Tensor[(13, 3, 7), float64] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%489, %490) /* ty=Tensor[(13, 3, 7), float64] */
}

def @func_7747() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %491 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %492 = @func_7605() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */;
  %493 = %491.0;
  %494 = %492.0;
  (%493, %494)
}

def @func_11077(%var_11075: Tensor[(66), float64], %var_11076: Tensor[(210, 1), int8]) -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], Tensor[(66), float64], Tensor[(2352), float32], Tensor[(77, 1), uint32], Tensor[(210, 1), float64]) {
  @func_11073(%var_11075, %var_11076) /* ty=(Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], Tensor[(66), float64], Tensor[(2352), float32], Tensor[(77, 1), uint32], Tensor[(210, 1), float64]) */
}

def @func_9960() -> Tensor[(5, 3, 9), int64] {
  %496 = fn () -> Tensor[(5, 3, 9), int64] {
    %495 = @func_7724() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %495.0
  };
  %496() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_239(%var_205: Tensor[(1, 7, 11), uint32], %var_206: Tensor[(14, 7, 11), uint32]) -> (Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) {
  %497 = cast(%var_205, dtype="bool") /* ty=Tensor[(1, 7, 11), bool] */;
  %498 = cast(%var_206, dtype="bool") /* ty=Tensor[(14, 7, 11), bool] */;
  %499 = greater(%497, %498) /* ty=Tensor[(14, 7, 11), bool] */;
  %500 = cast(%499, dtype="uint32") /* ty=Tensor[(14, 7, 11), uint32] */;
  %501 = shape_of(%var_206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(%var_206, dtype="uint32") /* ty=Tensor[(14, 7, 11), uint32] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %504 = cast(%499, dtype="float32") /* ty=Tensor[(14, 7, 11), float32] */;
  %505 = logical_xor(%502, %503) /* ty=Tensor[(14, 7, 11), uint32] */;
  %506 = exp(%504) /* ty=Tensor[(14, 7, 11), float32] */;
  (%505, %506)
}

def @func_9634() -> (Tensor[(5, 3, 9), int64],) {
  %507 = @func_7605() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */;
  %508 = %507.0;
  (%508,)
}

def @func_11205() -> Tensor[(5, 3, 9), int64] {
  @func_11203() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_10037() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %509 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %510 = @func_9634() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %511 = %509.0;
  %512 = %510.0;
  (%511, %512)
}

def @func_10312() -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) {
  %516 = fn () -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) {
    %513 = @func_9479() /* ty=(Tensor[(5, 3, 9), float64],) */;
    %514 = %513.0;
    %515 = @func_8244() /* ty=Tensor[(5, 3, 9), int64] */;
    (%514, %515)
  };
  %516() /* ty=(Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) */
}

def @func_7800() -> (Tensor[(5, 3, 9), int64],) {
  %518 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %517 = @func_7088() /* ty=Tensor[(5, 3, 9), int64] */;
    (%517,)
  };
  %518() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_13715(%var_13687: Tensor[(9, 8, 4), uint32]) -> (Tensor[(9, 8, 4), bool], Tensor[(15, 7, 2), bool], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) {
  %519 = cast(%var_13687, dtype="bool") /* ty=Tensor[(9, 8, 4), bool] */;
  %520 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(9, 8, 4), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 8, 4), uint32] */, dtype="bool") /* ty=Tensor[(9, 8, 4), bool] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %523 = cast(meta[relay.Constant][34] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %524 = cast(meta[relay.Constant][34] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %525 = reshape(%523, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
  %526 = reshape(%524, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
  %527 = @func_13347() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %528 = less_equal(%521, %522) /* ty=Tensor[(9, 8, 4), bool] */;
  %529 = @func_2618(%525, %526) /* ty=Tensor[(15, 7, 2), bool] */;
  %530 = %527.0;
  (%528, %529, meta[relay.Constant][34] /* ty=Tensor[(210), int8] */, %530)
}

def @func_6144(%var_6140: Tensor[(2, 6, 6), float32], %var_6141: int64, %var_6142: Tensor[(52), int64], %var_6143: Tensor[(2, 6, 6), float32]) -> (Tensor[(13, 4, 1), bool], int64, Tensor[(52), int64], Tensor[(2352), float32], Tensor[(588, 4), float32], Tensor[(6, 44), float64], Tensor[(1078), uint32], Tensor[(2, 6, 6), bool], Tensor[(2, 6, 6), float32]) {
  %554 = fn (%var_6104: Tensor[(2, 6, 6), float32], %var_6112: int64, %var_6113: Tensor[(52), int64], %var_6121: Tensor[(2, 6, 6), float32]) -> (Tensor[(13, 4, 1), bool], int64, Tensor[(52), int64], Tensor[(2352), float32], Tensor[(588, 4), float32], Tensor[(6, 44), float64], Tensor[(1078), uint32], Tensor[(2, 6, 6), bool], Tensor[(2, 6, 6), float32]) {
    %531 = cast(%var_6112, dtype="int64") /* ty=int64 */;
    %532 = cast(%var_6113, dtype="int64") /* ty=Tensor[(52), int64] */;
    %533 = cast(meta[relay.Constant][35] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %534 = reshape(%531, newshape=[]) /* ty=int64 */;
    %535 = reshape(%532, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), int64] */;
    %536 = reshape(%533, newshape=[84, 28]) /* ty=Tensor[(84, 28), float32] */;
    %537 = @func_1698(%534, %535, %536) /* ty=(Tensor[(13, 4, 1), bool], Tensor[(11, 10, 5), int64], Tensor[(11, 7), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) */;
    %538 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 44), float64] */, dtype="float64") /* ty=Tensor[(6, 44), float64] */;
    %539 = cast(meta[relay.Constant][37] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
    %540 = reshape(%538, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), float64] */;
    %541 = reshape(%539, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
    %542 = @func_2775(%540, %541) /* ty=(Tensor[(2, 11, 12), float64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(?, 1078), int16], Tensor[(588, 4), float32]) */;
    %543 = cast(%var_6104, dtype="float32") /* ty=Tensor[(2, 6, 6), float32] */;
    %544 = log(%543) /* ty=Tensor[(2, 6, 6), float32] */;
    %545 = cast(%var_6121, dtype="bool") /* ty=Tensor[(2, 6, 6), bool] */;
    %546 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
    %547 = cast(%544, dtype="bool") /* ty=Tensor[(2, 6, 6), bool] */;
    %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %549 = cast(%544, dtype="float32") /* ty=Tensor[(2, 6, 6), float32] */;
    %550 = %537.0;
    %551 = %542.5;
    %552 = equal(%547, %548) /* ty=Tensor[(2, 6, 6), bool] */;
    %553 = sin(%549) /* ty=Tensor[(2, 6, 6), float32] */;
    (%550, %var_6112, %var_6113, meta[relay.Constant][35] /* ty=Tensor[(2352), float32] */, %551, meta[relay.Constant][36] /* ty=Tensor[(6, 44), float64] */, meta[relay.Constant][37] /* ty=Tensor[(1078), uint32] */, %552, %553)
  };
  %554(%var_6140, %var_6141, %var_6142, %var_6143) /* ty=(Tensor[(13, 4, 1), bool], int64, Tensor[(52), int64], Tensor[(2352), float32], Tensor[(588, 4), float32], Tensor[(6, 44), float64], Tensor[(1078), uint32], Tensor[(2, 6, 6), bool], Tensor[(2, 6, 6), float32]) */
}

def @func_12403() -> Tensor[(5, 3, 9), int64] {
  %555 = fn () -> Tensor[(5, 3, 9), int64] {
    @func_8289() /* ty=Tensor[(5, 3, 9), int64] */
  };
  %555() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_13198() -> (Tensor[(5, 3, 9), int64], Tensor[(280), float32], int64, Tensor[(1078), float64]) {
  %556 = @func_13136() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %557 = cast(6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %558 = cast(meta[relay.Constant][38] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %559 = reshape(%557, newshape=[]) /* ty=int64 */;
  %560 = reshape(%558, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %561 = @func_8697(%559, %560) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32], Tensor[(13, 4, 1), bool], int64, Tensor[(52), int64], Tensor[(2352), float32], Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(1078), uint32]) */;
  %562 = cast(meta[relay.Constant][38] /* ty=Tensor[(1078), uint32] */, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %563 = acos(%562) /* ty=Tensor[(1078), float64] */;
  %564 = cast(%563, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %565 = %556.0;
  %566 = %561.2;
  %567 = log10(%564) /* ty=Tensor[(1078), float64] */;
  (%565, %566, 6 /* ty=int64 */, %567)
}

def @func_8701(%var_8699: int64, %var_8700: Tensor[(1078), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32], Tensor[(13, 4, 1), bool], int64, Tensor[(52), int64], Tensor[(2352), float32], Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(1078), uint32]) {
  @func_8697(%var_8699, %var_8700) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32], Tensor[(13, 4, 1), bool], int64, Tensor[(52), int64], Tensor[(2352), float32], Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(1078), uint32]) */
}

def @func_11714(%var_11670: Tensor[(8, 14, 3), float64]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(8, 14, 3), float32]) {
  %568 = @func_9634() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %569 = @func_9512() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %570 = cast(%var_11670, dtype="float64") /* ty=Tensor[(8, 14, 3), float64] */;
  %571 = log(%570) /* ty=Tensor[(8, 14, 3), float64] */;
  %572 = cast(%571, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
  %573 = %568.0;
  %574 = %569.0;
  %575 = cos(%572) /* ty=Tensor[(8, 14, 3), float32] */;
  (%573, %574, %575)
}

def @func_11334() -> (Tensor[(5, 3, 9), int64], Tensor[(70, 4), float32]) {
  %576 = @func_9828() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %577 = %576.0;
  %578 = @func_10613() /* ty=Tensor[(70, 4), float32] */;
  (%577, %578)
}

def @func_12079(%var_12077: Tensor[(66), float64], %var_12078: Tensor[(66), float64]) -> (Tensor[(66), uint8], Tensor[(66), bool]) {
  @func_12075(%var_12077, %var_12078) /* ty=(Tensor[(66), uint8], Tensor[(66), bool]) */
}

def @func_13635() -> (Tensor[(5, 3, 9), int64],) {
  @func_13633() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_11336() -> (Tensor[(5, 3, 9), int64], Tensor[(70, 4), float32]) {
  @func_11334() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(70, 4), float32]) */
}

def @func_12173() -> Tensor[(5, 3, 9), float64] {
  %579 = @func_11579() /* ty=(Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) */;
  %579.0
}

def @func_11717(%var_11715: Tensor[(8, 14, 3), float64]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(8, 14, 3), float32]) {
  @func_11714(%var_11715) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(8, 14, 3), float32]) */
}

def @func_9091(%var_9089: Tensor[(77), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32]) {
  @func_9088(%var_9089) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32]) */
}

def @func_8122() -> (Tensor[(5, 3, 9), int64],) {
  %582 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %580 = @func_7747() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
    %581 = %580.1;
    (%581,)
  };
  %582() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_7044() -> (Tensor[(5, 3, 9), int64],) {
  @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_10421() -> Tensor[(5, 3, 9), float64] {
  @func_10419() /* ty=Tensor[(5, 3, 9), float64] */
}

def @func_11931() -> (Tensor[(5, 3, 9), int64], Tensor[(1078), uint32], Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) {
  %593 = fn () -> (Tensor[(5, 3, 9), int64], Tensor[(1078), uint32], Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) {
    %583 = @func_9685() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %584 = cast(meta[relay.Constant][39] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
    %585 = reshape(%584, newshape=[1, 1078]) /* ty=Tensor[(1, 1078), uint32] */;
    %586 = @func_9803(%585) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1, 1078), uint32]) */;
    %587 = %586.1;
    %588 = cast(%587, dtype="float64") /* ty=Tensor[(5, 3, 9), float64] */;
    %589 = @func_9685() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %590 = %583.0;
    %591 = log(%588) /* ty=Tensor[(5, 3, 9), float64] */;
    %592 = %589.0;
    (%590, meta[relay.Constant][39] /* ty=Tensor[(1078), uint32] */, %591, %592)
  };
  %593() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), uint32], Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) */
}

def @func_7606() -> (Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) {
  %600 = fn () -> (Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) {
    %594 = cast(-1.29491f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %595 = cast(meta[relay.Constant][40] /* ty=Tensor[(70, 4), float32] */, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
    %596 = reshape(%594, newshape=[]) /* ty=float32 */;
    %597 = reshape(%595, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
    %598 = @func_7088() /* ty=Tensor[(5, 3, 9), int64] */;
    %599 = @func_6881(%596, %597) /* ty=Tensor[(7, 10, 4), float32] */;
    (%598, %599, -1.29491f /* ty=float32 */, meta[relay.Constant][40] /* ty=Tensor[(70, 4), float32] */)
  };
  %600() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */
}

def @func_7537(%var_7535: Tensor[(1078), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(450), float32], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1078), uint32]) {
  @func_7534(%var_7535) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(450), float32], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1078), uint32]) */
}

def @func_11982() -> Tensor[(5, 3, 9), int64] {
  @func_11980() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_11164() -> Tensor[(70, 4), float32] {
  %601 = fn () -> Tensor[(70, 4), float32] {
    @func_10613() /* ty=Tensor[(70, 4), float32] */
  };
  %601() /* ty=Tensor[(70, 4), float32] */
}

def @func_14084(%var_14074: Tensor[(77), uint32], %var_14075: Tensor[(7, 154), uint32], %var_14076: Tensor[(2352), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(7, 154), uint32], Tensor[(2352), float32], Tensor[(77), int8]) {
  %602 = @func_7747() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %603 = @func_7724() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %604 = cast(%var_14074, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %605 = cast(%var_14075, dtype="uint32") /* ty=Tensor[(7, 154), uint32] */;
  %606 = cast(%var_14076, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %607 = reshape(%604, newshape=[77]) /* ty=Tensor[(77), uint32] */;
  %608 = reshape(%605, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %609 = reshape(%606, newshape=[588, 4]) /* ty=Tensor[(588, 4), float32] */;
  %610 = @func_7350(%607, %608, %609) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(588, 4), float32], Tensor[(1078), float32], Tensor[(5, 3, 9), int64]) */;
  %611 = %610.2;
  %612 = cast(%611, dtype="int8") /* ty=Tensor[(77), int8] */;
  %613 = shape_of(%var_14074, dtype="int32") /* ty=Tensor[(1), int32] */;
  %614 = cast(%var_14074, dtype="int8") /* ty=Tensor[(77), int8] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?), int8] */;
  %616 = %602.1;
  %617 = %603.0;
  %618 = @func_8090() /* ty=Tensor[(5, 3, 9), int64] */;
  %619 = @func_9914() /* ty=Tensor[(5, 3, 9), float64] */;
  %620 = minimum(%614, %615) /* ty=Tensor[(77), int8] */;
  (%616, %617, %618, %619, %var_14075, %var_14076, %620)
}

def @func_14522() -> (Tensor[(5, 3, 9), float64],) {
  @func_14520() /* ty=(Tensor[(5, 3, 9), float64],) */
}

def @func_14667(%var_14665: Tensor[(6, 7, 1), float64], %var_14666: float32) -> (Tensor[(6, 7, 1), float64], Tensor[(7, 10, 4), float32], float32, Tensor[(10, 28), float32]) {
  %630 = fn (%var_14641: Tensor[(6, 7, 1), float64], %var_14654: float32) -> (Tensor[(6, 7, 1), float64], Tensor[(7, 10, 4), float32], float32, Tensor[(10, 28), float32]) {
    %621 = cast(%var_14641, dtype="float64") /* ty=Tensor[(6, 7, 1), float64] */;
    %622 = sin(%621) /* ty=Tensor[(6, 7, 1), float64] */;
    %623 = cast(%622, dtype="float64") /* ty=Tensor[(6, 7, 1), float64] */;
    %624 = cast(%var_14654, dtype="float32") /* ty=float32 */;
    %625 = cast(meta[relay.Constant][41] /* ty=Tensor[(10, 28), float32] */, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
    %626 = reshape(%624, newshape=[]) /* ty=float32 */;
    %627 = reshape(%625, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
    %628 = atan(%623) /* ty=Tensor[(6, 7, 1), float64] */;
    %629 = @func_6881(%626, %627) /* ty=Tensor[(7, 10, 4), float32] */;
    (%628, %629, %var_14654, meta[relay.Constant][41] /* ty=Tensor[(10, 28), float32] */)
  };
  %630(%var_14665, %var_14666) /* ty=(Tensor[(6, 7, 1), float64], Tensor[(7, 10, 4), float32], float32, Tensor[(10, 28), float32]) */
}

def @func_7927(%var_7924: Tensor[(2352), float32], %var_7925: Tensor[(210), int8], %var_7926: Tensor[(11, 7), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(2352), float32], Tensor[(13, 450), int32], Tensor[(15, 7, 2), bool], Tensor[(210), int8], Tensor[(14, 7, 11), uint32], Tensor[(11, 7), uint32], Tensor[(539, 2), uint32], Tensor[(2, 11, 12), float64], Tensor[(3, 88), float64]) {
  %659 = fn (%var_7894: Tensor[(2352), float32], %var_7904: Tensor[(210), int8], %var_7909: Tensor[(11, 7), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(2352), float32], Tensor[(13, 450), int32], Tensor[(15, 7, 2), bool], Tensor[(210), int8], Tensor[(14, 7, 11), uint32], Tensor[(11, 7), uint32], Tensor[(539, 2), uint32], Tensor[(2, 11, 12), float64], Tensor[(3, 88), float64]) {
    %631 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %632 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 450), float32] */, dtype="float32") /* ty=Tensor[(1, 450), float32] */;
    %633 = cast(%var_7894, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %634 = reshape(%632, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), float32] */;
    %635 = reshape(%633, newshape=[2352]) /* ty=Tensor[(2352), float32] */;
    %636 = @func_4375(%634, %635) /* ty=(Tensor[(15, 6, 5), float32], Tensor[(?, 1078), int16], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(2352), float32]) */;
    %637 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 450), float32] */, dtype="int32") /* ty=Tensor[(1, 450), int32] */;
    %638 = cast(meta[relay.Constant][43] /* ty=Tensor[(13, 450), float32] */, dtype="int32") /* ty=Tensor[(13, 450), int32] */;
    %639 = cast(%var_7904, dtype="int8") /* ty=Tensor[(210), int8] */;
    %640 = cast(%var_7904, dtype="int8") /* ty=Tensor[(210), int8] */;
    %641 = reshape(%639, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
    %642 = reshape(%640, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), int8] */;
    %643 = cast(%var_7909, dtype="uint32") /* ty=Tensor[(11, 7), uint32] */;
    %644 = cast(meta[relay.Constant][44] /* ty=Tensor[(539, 2), uint32] */, dtype="uint32") /* ty=Tensor[(539, 2), uint32] */;
    %645 = reshape(%643, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
    %646 = reshape(%644, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
    %647 = @func_239(%645, %646) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
    %648 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 88), float64] */, dtype="float64") /* ty=Tensor[(3, 88), float64] */;
    %649 = cast(meta[relay.Constant][44] /* ty=Tensor[(539, 2), uint32] */, dtype="uint32") /* ty=Tensor[(539, 2), uint32] */;
    %650 = reshape(%648, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), float64] */;
    %651 = reshape(%649, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
    %652 = @func_2775(%650, %651) /* ty=(Tensor[(2, 11, 12), float64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(?, 1078), int16], Tensor[(588, 4), float32]) */;
    %653 = %631.0;
    %654 = %636.4;
    %655 = logical_xor(%637, %638) /* ty=Tensor[(13, 450), int32] */;
    %656 = @func_2618(%641, %642) /* ty=Tensor[(15, 7, 2), bool] */;
    %657 = %647.0;
    %658 = %652.0;
    (%653, %654, %var_7894, %655, %656, %var_7904, %657, %var_7909, meta[relay.Constant][44] /* ty=Tensor[(539, 2), uint32] */, %658, meta[relay.Constant][45] /* ty=Tensor[(3, 88), float64] */)
  };
  %659(%var_7924, %var_7925, %var_7926) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(2352), float32], Tensor[(13, 450), int32], Tensor[(15, 7, 2), bool], Tensor[(210), int8], Tensor[(14, 7, 11), uint32], Tensor[(11, 7), uint32], Tensor[(539, 2), uint32], Tensor[(2, 11, 12), float64], Tensor[(3, 88), float64]) */
}

def @func_8092() -> Tensor[(5, 3, 9), int64] {
  @func_8090() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_8697(%var_8638: int64, %var_8679: Tensor[(1078), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32], Tensor[(13, 4, 1), bool], int64, Tensor[(52), int64], Tensor[(2352), float32], Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(1078), uint32]) {
  %660 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %661 = cast(meta[relay.Constant][46] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %662 = reshape(%661, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %663 = @func_8588(%662) /* ty=(Tensor[(70, 4), uint16], Tensor[(5, 3, 9), int64]) */;
  %664 = cast(%var_8638, dtype="int64") /* ty=int64 */;
  %665 = cast(meta[relay.Constant][47] /* ty=Tensor[(52), int64] */, dtype="int64") /* ty=Tensor[(52), int64] */;
  %666 = cast(meta[relay.Constant][48] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %667 = reshape(%664, newshape=[]) /* ty=int64 */;
  %668 = reshape(%665, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), int64] */;
  %669 = reshape(%666, newshape=[84, 28]) /* ty=Tensor[(84, 28), float32] */;
  %670 = @func_1698(%667, %668, %669) /* ty=(Tensor[(13, 4, 1), bool], Tensor[(11, 10, 5), int64], Tensor[(11, 7), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) */;
  %671 = %660.0;
  %672 = cast(%671, dtype="int64") /* ty=Tensor[(5, 3, 9), int64] */;
  %673 = reshape(%672, newshape=[5, 3, 9]) /* ty=Tensor[(5, 3, 9), int64] */;
  %674 = @func_7992(%673) /* ty=(Tensor[(5, 3, 9), int8], Tensor[(5, 3, 9), float32]) */;
  %675 = cast(%var_8679, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %676 = reshape(%675, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %677 = @func_7534(%676) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(450), float32], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1078), uint32]) */;
  %678 = %663.1;
  %679 = %670.0;
  %680 = %674.0;
  %681 = %677.1;
  (%671, %678, meta[relay.Constant][46] /* ty=Tensor[(280), float32] */, %679, %var_8638, meta[relay.Constant][47] /* ty=Tensor[(52), int64] */, meta[relay.Constant][48] /* ty=Tensor[(2352), float32] */, %680, %681, %var_8679)
}

def @func_11645(%var_11640: float32, %var_11641: Tensor[(4, 4, 13), float32], %var_11642: Tensor[(1, 77), uint32], %var_11643: Tensor[(13, 4), int64], %var_11644: Tensor[(2352), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(4, 4, 13), float64], Tensor[(1, 77), bool], Tensor[(11, 7), uint32], Tensor[(13, 4), int64], Tensor[(2352), float32]) {
  %703 = fn (%var_11599: float32, %var_11600: Tensor[(4, 4, 13), float32], %var_11616: Tensor[(1, 77), uint32], %var_11632: Tensor[(13, 4), int64], %var_11633: Tensor[(2352), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(4, 4, 13), float64], Tensor[(1, 77), bool], Tensor[(11, 7), uint32], Tensor[(13, 4), int64], Tensor[(2352), float32]) {
    %682 = cast(%var_11616, dtype="uint32") /* ty=Tensor[(1, 77), uint32] */;
    %683 = reshape(%682, newshape=[77]) /* ty=Tensor[(77), uint32] */;
    %684 = @func_9088(%683) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32]) */;
    %685 = cast(%var_11599, dtype="float32") /* ty=float32 */;
    %686 = cast(%var_11600, dtype="float32") /* ty=Tensor[(4, 4, 13), float32] */;
    %687 = mod(%685, %686) /* ty=Tensor[(4, 4, 13), float32] */;
    %688 = cast(%var_11599, dtype="float64") /* ty=float64 */;
    %689 = cast(%687, dtype="float64") /* ty=Tensor[(4, 4, 13), float64] */;
    %690 = cast(%var_11616, dtype="bool") /* ty=Tensor[(1, 77), bool] */;
    %691 = cast(%var_11599, dtype="bool") /* ty=bool */;
    %692 = cast(%var_11599, dtype="int64") /* ty=int64 */;
    %693 = cast(%var_11632, dtype="int64") /* ty=Tensor[(13, 4), int64] */;
    %694 = cast(%var_11633, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %695 = reshape(%692, newshape=[]) /* ty=int64 */;
    %696 = reshape(%693, newshape=[13, 4, 1]) /* ty=Tensor[(13, 4, 1), int64] */;
    %697 = reshape(%694, newshape=[84, 28]) /* ty=Tensor[(84, 28), float32] */;
    %698 = @func_1698(%695, %696, %697) /* ty=(Tensor[(13, 4, 1), bool], Tensor[(11, 10, 5), int64], Tensor[(11, 7), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) */;
    %699 = %684.0;
    %700 = floor_mod(%688, %689) /* ty=Tensor[(4, 4, 13), float64] */;
    %701 = less(%690, %691) /* ty=Tensor[(1, 77), bool] */;
    %702 = %698.2;
    (%699, %700, %701, %702, %var_11632, %var_11633)
  };
  %703(%var_11640, %var_11641, %var_11642, %var_11643, %var_11644) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(4, 4, 13), float64], Tensor[(1, 77), bool], Tensor[(11, 7), uint32], Tensor[(13, 4), int64], Tensor[(2352), float32]) */
}

def @func_9618() -> (Tensor[(5, 3, 9), int64],) {
  %706 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %704 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %705 = %704.0;
    (%705,)
  };
  %706() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_2618(%var_2606: Tensor[(15, 7, 2), int8], %var_2607: Tensor[(15, 7, 2), int8]) -> Tensor[(15, 7, 2), bool] {
  %707 = cast(%var_2607, dtype="bool") /* ty=Tensor[(15, 7, 2), bool] */;
  %708 = shape_of(%var_2606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%var_2606, dtype="bool") /* ty=Tensor[(15, 7, 2), bool] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%709, %710) /* ty=Tensor[(15, 7, 2), bool] */
}

def @func_11029() -> (Tensor[(66), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), float32]) {
  %726 = fn () -> (Tensor[(66), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), float32]) {
    %711 = @func_8992() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(66), float64]) */;
    %712 = @func_10464() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(1078), uint32], Tensor[(77), uint32]) */;
    %713 = @func_9128() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
    %714 = @func_8992() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(66), float64]) */;
    %715 = @func_9828() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %716 = %713.0;
    %717 = cast(%716, dtype="int64") /* ty=Tensor[(5, 3, 9), int64] */;
    %718 = reshape(%717, newshape=[5, 3, 9]) /* ty=Tensor[(5, 3, 9), int64] */;
    %719 = @func_7992(%718) /* ty=(Tensor[(5, 3, 9), int8], Tensor[(5, 3, 9), float32]) */;
    %720 = %711.1;
    %721 = %712.0;
    %722 = %714.0;
    %723 = %715.0;
    %724 = @func_9914() /* ty=Tensor[(5, 3, 9), float64] */;
    %725 = %719.1;
    (%720, %721, %716, %722, %723, %724, %725)
  };
  %726() /* ty=(Tensor[(66), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), float32]) */
}

def @func_11132() -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64]) {
  %727 = @func_8121() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %728 = @func_10419() /* ty=Tensor[(5, 3, 9), float64] */;
  %729 = %727.0;
  %730 = @func_10419() /* ty=Tensor[(5, 3, 9), float64] */;
  (%728, %729, %730)
}

def @func_12833(%var_12831: Tensor[(16, 15, 9), float32]) -> (Tensor[(16, 15, 9), float64], Tensor[(16, 15, 9), float32]) {
  @func_12830(%var_12831) /* ty=(Tensor[(16, 15, 9), float64], Tensor[(16, 15, 9), float32]) */
}

def @func_9872(%var_9864: Tensor[(270, 1), int64]) -> (Tensor[(5, 3, 9), int64], Tensor[(3, 10, 9), int64], Tensor[(270, 1), int64], Tensor[(66), float64]) {
  %731 = @func_9512() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %732 = cast(%var_9864, dtype="int64") /* ty=Tensor[(270, 1), int64] */;
  %733 = cast(meta[relay.Constant][49] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
  %734 = reshape(%732, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), int64] */;
  %735 = reshape(%733, newshape=[11, 6]) /* ty=Tensor[(11, 6), float64] */;
  %736 = @func_4732(%734, %735) /* ty=(Tensor[(3, 10, 9), int64], Tensor[(210), int8], Tensor[(11, 6), float64], Tensor[(210), int8]) */;
  %737 = %731.0;
  %738 = %736.0;
  (%737, %738, %var_9864, meta[relay.Constant][49] /* ty=Tensor[(66), float64] */)
}

def @func_11843(%var_11842: Tensor[(70, 4), float32]) -> (Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float64], Tensor[(70, 4), float64]) {
  %757 = fn (%var_11809: Tensor[(70, 4), float32]) -> (Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float64], Tensor[(70, 4), float64]) {
    %739 = cast(4.03009f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %740 = cast(%var_11809, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
    %741 = reshape(%739, newshape=[]) /* ty=float32 */;
    %742 = reshape(%740, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
    %743 = @func_11163() /* ty=Tensor[(70, 4), float32] */;
    %744 = cast(%var_11809, dtype="float64") /* ty=Tensor[(70, 4), float64] */;
    %745 = shape_of(%743, dtype="int32") /* ty=Tensor[(2), int32] */;
    %746 = cast(%743, dtype="float64") /* ty=Tensor[(70, 4), float64] */;
    %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %748 = cast(%var_11809, dtype="int8") /* ty=Tensor[(70, 4), int8] */;
    %749 = shape_of(%743, dtype="int32") /* ty=Tensor[(2), int32] */;
    %750 = cast(%743, dtype="int8") /* ty=Tensor[(70, 4), int8] */;
    %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %752 = bitwise_and(%750, %751) /* ty=Tensor[(70, 4), int8] */;
    %753 = cast(%752, dtype="float64") /* ty=Tensor[(70, 4), float64] */;
    %754 = @func_6881(%741, %742) /* ty=Tensor[(7, 10, 4), float32] */;
    %755 = add(%746, %747) /* ty=Tensor[(70, 4), float64] */;
    %756 = log(%753) /* ty=Tensor[(70, 4), float64] */;
    (%754, 4.03009f /* ty=float32 */, %755, %756)
  };
  %757(%var_11842) /* ty=(Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float64], Tensor[(70, 4), float64]) */
}

def @func_6881(%var_6870: float32, %var_6871: Tensor[(7, 10, 4), float32]) -> Tensor[(7, 10, 4), float32] {
  %758 = cast(%var_6870, dtype="float32") /* ty=float32 */;
  %759 = cast(%var_6871, dtype="float32") /* ty=Tensor[(7, 10, 4), float32] */;
  floor_mod(%758, %759) /* ty=Tensor[(7, 10, 4), float32] */
}

def @func_7724() -> (Tensor[(5, 3, 9), int64],) {
  %760 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %761 = %760.0;
  (%761,)
}

def @main(%var_14697: Tensor[(10, 16, 9), float64], %var_14698: Tensor[(10, 16, 9), float64]) -> (Tensor[(10, 16, 9), float64],) {
  %762 = cast(%var_14698, dtype="float64") /* ty=Tensor[(10, 16, 9), float64] */;
  %763 = shape_of(%var_14697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %764 = cast(%var_14697, dtype="float64") /* ty=Tensor[(10, 16, 9), float64] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %766 = divide(%764, %765) /* ty=Tensor[(10, 16, 9), float64] */;
  (%766,)
}

def @func_8750(%var_8749: Tensor[(72), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(36, 2), int32]) {
  %778 = fn (%var_8717: Tensor[(72), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(36, 2), int32]) {
    %767 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %768 = cast(%var_8717, dtype="float32") /* ty=Tensor[(72), float32] */;
    %769 = reshape(%768, newshape=[36, 2]) /* ty=Tensor[(36, 2), float32] */;
    %770 = @func_8171(%769) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(13, 4, 1), bool], Tensor[(36, 2), float32], int64, Tensor[(52, 1), int64]) */;
    %771 = %770.2;
    %772 = cast(%var_8717, dtype="int32") /* ty=Tensor[(72), int32] */;
    %773 = shape_of(%771, dtype="int32") /* ty=Tensor[(2), int32] */;
    %774 = cast(%771, dtype="int32") /* ty=Tensor[(36, 2), int32] */;
    %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %776 = %767.0;
    %777 = left_shift(%774, %775) /* ty=Tensor[(36, 2), int32] */;
    (%776, %777)
  };
  %778(%var_8749) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(36, 2), int32]) */
}

def @func_14394(%var_14390: Tensor[(1078), float32], %var_14391: int16, %var_14392: Tensor[(182), int16], %var_14393: Tensor[(66), float64]) -> (Tensor[(1078), int8], Tensor[(210), int8], int16, Tensor[(182), int16], Tensor[(66), float64]) {
  @func_14388(%var_14390, %var_14391, %var_14392, %var_14393) /* ty=(Tensor[(1078), int8], Tensor[(210), int8], int16, Tensor[(182), int16], Tensor[(66), float64]) */
}

def @func_14520() -> (Tensor[(5, 3, 9), float64],) {
  %779 = @func_11040() /* ty=Tensor[(5, 3, 9), float64] */;
  (%779,)
}

def @func_8993() -> (Tensor[(5, 3, 9), int64], Tensor[(66), float64]) {
  %784 = fn () -> (Tensor[(5, 3, 9), int64], Tensor[(66), float64]) {
    %780 = @func_7747() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
    %781 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
    %782 = %780.0;
    %783 = %781.4;
    (%782, %783)
  };
  %784() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(66), float64]) */
}

def @func_7427(%var_7425: Tensor[(77, 1), uint32], %var_7426: Tensor[(7, 154), uint32]) -> (Tensor[(5, 3, 9), float64], Tensor[(14, 7, 11), uint32], Tensor[(77, 1), uint32], Tensor[(7, 154), uint32], Tensor[(1, 1, 5), float64], Tensor[(2352), float32]) {
  %802 = fn (%var_7413: Tensor[(77, 1), uint32], %var_7414: Tensor[(7, 154), uint32]) -> (Tensor[(5, 3, 9), float64], Tensor[(14, 7, 11), uint32], Tensor[(77, 1), uint32], Tensor[(7, 154), uint32], Tensor[(1, 1, 5), float64], Tensor[(2352), float32]) {
    %785 = @func_7088() /* ty=Tensor[(5, 3, 9), int64] */;
    %786 = cast(%785, dtype="float64") /* ty=Tensor[(5, 3, 9), float64] */;
    %787 = cast(%var_7413, dtype="uint32") /* ty=Tensor[(77, 1), uint32] */;
    %788 = cast(%var_7414, dtype="uint32") /* ty=Tensor[(7, 154), uint32] */;
    %789 = reshape(%787, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
    %790 = reshape(%788, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
    %791 = @func_239(%789, %790) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
    %792 = cast(%var_7413, dtype="uint32") /* ty=Tensor[(77, 1), uint32] */;
    %793 = %791.0;
    %794 = cast(%793, dtype="uint32") /* ty=Tensor[(14, 7, 11), uint32] */;
    %795 = cast(meta[relay.Constant][50] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %796 = reshape(%792, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
    %797 = reshape(%794, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
    %798 = reshape(%795, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
    %799 = @func_1335(%796, %797, %798) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
    %800 = exp(%786) /* ty=Tensor[(5, 3, 9), float64] */;
    %801 = %799.7;
    (%800, %793, %var_7413, %var_7414, %801, meta[relay.Constant][50] /* ty=Tensor[(2352), float32] */)
  };
  %802(%var_7425, %var_7426) /* ty=(Tensor[(5, 3, 9), float64], Tensor[(14, 7, 11), uint32], Tensor[(77, 1), uint32], Tensor[(7, 154), uint32], Tensor[(1, 1, 5), float64], Tensor[(2352), float32]) */
}

def @func_9513() -> (Tensor[(5, 3, 9), int64],) {
  %804 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %803 = @func_8244() /* ty=Tensor[(5, 3, 9), int64] */;
    (%803,)
  };
  %804() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_7453(%var_7451: Tensor[(5, 3, 9), int64], %var_7452: Tensor[(150, 3), float32]) -> (Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(150, 3), float32], Tensor[(2352), float32]) {
  %818 = fn (%var_7432: Tensor[(5, 3, 9), int64], %var_7445: Tensor[(150, 3), float32]) -> (Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(150, 3), float32], Tensor[(2352), float32]) {
    %805 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %806 = %805.0;
    %807 = cast(%var_7432, dtype="int8") /* ty=Tensor[(5, 3, 9), int8] */;
    %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
    %809 = cast(%806, dtype="int8") /* ty=Tensor[(5, 3, 9), int8] */;
    %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %811 = cast(%var_7445, dtype="float32") /* ty=Tensor[(150, 3), float32] */;
    %812 = cast(meta[relay.Constant][51] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %813 = reshape(%811, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), float32] */;
    %814 = reshape(%812, newshape=[2352]) /* ty=Tensor[(2352), float32] */;
    %815 = @func_4375(%813, %814) /* ty=(Tensor[(15, 6, 5), float32], Tensor[(?, 1078), int16], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(2352), float32]) */;
    %816 = logical_xor(%809, %810) /* ty=Tensor[(5, 3, 9), int8] */;
    %817 = %815.4;
    (%816, %817, %var_7445, meta[relay.Constant][51] /* ty=Tensor[(2352), float32] */)
  };
  %818(%var_7451, %var_7452) /* ty=(Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(150, 3), float32], Tensor[(2352), float32]) */
}

def @func_12981() -> (Tensor[(70, 4), uint16], Tensor[(70, 4), float32]) {
  %819 = @func_12410() /* ty=Tensor[(70, 4), float32] */;
  %820 = cast(%819, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %821 = rsqrt(%820) /* ty=Tensor[(70, 4), float32] */;
  %822 = cast(%819, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %823 = tan(%822) /* ty=Tensor[(70, 4), float32] */;
  %824 = cast(%823, dtype="uint16") /* ty=Tensor[(70, 4), uint16] */;
  %825 = shape_of(%821, dtype="int32") /* ty=Tensor[(2), int32] */;
  %826 = cast(%821, dtype="uint16") /* ty=Tensor[(70, 4), uint16] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %828 = cast(%821, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %829 = shape_of(%823, dtype="int32") /* ty=Tensor[(2), int32] */;
  %830 = cast(%823, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %832 = maximum(%826, %827) /* ty=Tensor[(70, 4), uint16] */;
  %833 = floor_divide(%830, %831) /* ty=Tensor[(70, 4), float32] */;
  (%832, %833)
}

def @func_12353(%var_12350: float32, %var_12351: Tensor[(2, 15, 3), float32], %var_12352: Tensor[(2, 15, 3), float32]) -> (Tensor[(2, 15, 3), bool], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(1, 182), int16], Tensor[(210), int8]) {
  %851 = fn (%var_12296: float32, %var_12297: Tensor[(2, 15, 3), float32], %var_12320: Tensor[(2, 15, 3), float32]) -> (Tensor[(2, 15, 3), bool], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(1, 182), int16], Tensor[(210), int8]) {
    %834 = cast(%var_12296, dtype="float32") /* ty=float32 */;
    %835 = cast(%var_12297, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
    %836 = mod(%834, %835) /* ty=Tensor[(2, 15, 3), float32] */;
    %837 = cast(%var_12320, dtype="bool") /* ty=Tensor[(2, 15, 3), bool] */;
    %838 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
    %839 = cast(%836, dtype="bool") /* ty=Tensor[(2, 15, 3), bool] */;
    %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %841 = cast(%var_12296, dtype="int16") /* ty=int16 */;
    %842 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 182), int16] */, dtype="int16") /* ty=Tensor[(1, 182), int16] */;
    %843 = cast(meta[relay.Constant][53] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
    %844 = reshape(%841, newshape=[]) /* ty=int16 */;
    %845 = reshape(%842, newshape=[182]) /* ty=Tensor[(182), int16] */;
    %846 = reshape(%843, newshape=[210]) /* ty=Tensor[(210), int8] */;
    %847 = @func_10953(%844, %845, %846) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), uint32], Tensor[(15, 7, 2), bool], int16, Tensor[(182), int16], Tensor[(210), int8]) */;
    %848 = logical_and(%839, %840) /* ty=Tensor[(2, 15, 3), bool] */;
    %849 = @func_11115() /* ty=Tensor[(5, 3, 9), int64] */;
    %850 = %847.5;
    (%848, %849, %850, meta[relay.Constant][52] /* ty=Tensor[(1, 182), int16] */, meta[relay.Constant][53] /* ty=Tensor[(210), int8] */)
  };
  %851(%var_12350, %var_12351, %var_12352) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(1, 182), int16], Tensor[(210), int8]) */
}

def @func_9828() -> (Tensor[(5, 3, 9), int64],) {
  %852 = @func_8121() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %853 = %852.0;
  (%853,)
}

def @func_8090() -> Tensor[(5, 3, 9), int64] {
  %854 = @func_7605() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */;
  %854.0
}

def @func_7089() -> Tensor[(5, 3, 9), int64] {
  %856 = fn () -> Tensor[(5, 3, 9), int64] {
    %855 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %855.0
  };
  %856() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_10597() -> (Tensor[(5, 3, 9), int64],) {
  %859 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %857 = @func_9930() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %858 = %857.0;
    (%858,)
  };
  %859() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_13357() -> (Tensor[(5, 3, 9), int64],) {
  @func_13355() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_14388(%var_14366: Tensor[(1078), float32], %var_14373: int16, %var_14374: Tensor[(182), int16], %var_14375: Tensor[(66), float64]) -> (Tensor[(1078), int8], Tensor[(210), int8], int16, Tensor[(182), int16], Tensor[(66), float64]) {
  %860 = @func_10464() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), float32], Tensor[(1078), uint32], Tensor[(77), uint32]) */;
  %861 = %860.1;
  %862 = cast(%var_14366, dtype="int8") /* ty=Tensor[(1078), int8] */;
  %863 = shape_of(%861, dtype="int32") /* ty=Tensor[(1), int32] */;
  %864 = cast(%861, dtype="int8") /* ty=Tensor[(1078), int8] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?), int8] */;
  %866 = cast(%var_14373, dtype="int16") /* ty=int16 */;
  %867 = cast(%var_14374, dtype="int16") /* ty=Tensor[(182), int16] */;
  %868 = cast(%var_14375, dtype="float64") /* ty=Tensor[(66), float64] */;
  %869 = reshape(%866, newshape=[]) /* ty=int16 */;
  %870 = reshape(%867, newshape=[182]) /* ty=Tensor[(182), int16] */;
  %871 = reshape(%868, newshape=[11, 6]) /* ty=Tensor[(11, 6), float64] */;
  %872 = @func_12633(%869, %870, %871) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], int16, Tensor[(182), int16], Tensor[(210), int8], Tensor[(5, 3, 9), int64], Tensor[(1, 182), int16], Tensor[(90), float32], Tensor[(210), int8], Tensor[(11, 6), float64]) */;
  %873 = bitwise_and(%864, %865) /* ty=Tensor[(1078), int8] */;
  %874 = %872.8;
  (%873, %874, %var_14373, %var_14374, %var_14375)
}

def @func_4735(%var_4733: Tensor[(3, 10, 9), int64], %var_4734: Tensor[(11, 6), float64]) -> (Tensor[(3, 10, 9), int64], Tensor[(210), int8], Tensor[(11, 6), float64], Tensor[(210), int8]) {
  %886 = fn (%var_4686: Tensor[(3, 10, 9), int64], %var_4713: Tensor[(11, 6), float64]) -> (Tensor[(3, 10, 9), int64], Tensor[(210), int8], Tensor[(11, 6), float64], Tensor[(210), int8]) {
    %875 = cast(meta[relay.Constant][54] /* ty=Tensor[(3, 10, 9), int64] */, dtype="int64") /* ty=Tensor[(3, 10, 9), int64] */;
    %876 = shape_of(%var_4686, dtype="int32") /* ty=Tensor[(3), int32] */;
    %877 = cast(%var_4686, dtype="int64") /* ty=Tensor[(3, 10, 9), int64] */;
    %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %879 = cast(%var_4713, dtype="float64") /* ty=Tensor[(11, 6), float64] */;
    %880 = cast(meta[relay.Constant][55] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
    %881 = reshape(%879, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
    %882 = reshape(%880, newshape=[210]) /* ty=Tensor[(210), int8] */;
    %883 = @func_4078(%881, %882) /* ty=(Tensor[(2, 3, 11), float64], Tensor[(15, 7, 2), bool], Tensor[(210), int8]) */;
    %884 = logical_xor(%877, %878) /* ty=Tensor[(3, 10, 9), int64] */;
    %885 = %883.2;
    (%884, %885, %var_4713, meta[relay.Constant][55] /* ty=Tensor[(210), int8] */)
  };
  %886(%var_4733, %var_4734) /* ty=(Tensor[(3, 10, 9), int64], Tensor[(210), int8], Tensor[(11, 6), float64], Tensor[(210), int8]) */
}

def @func_10005() -> Tensor[(5, 3, 9), int64] {
  @func_8289() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_14147() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  @func_14145() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */
}

def @func_7661(%var_7654: Tensor[(77), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(1078), uint32], Tensor[(14, 7, 11), uint32], Tensor[(77), uint32]) {
  %887 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
  %888 = cast(meta[relay.Constant][56] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %889 = reshape(%888, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %890 = @func_7534(%889) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(450), float32], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1078), uint32]) */;
  %891 = cast(%var_7654, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %892 = %890.3;
  %893 = cast(%892, dtype="uint32") /* ty=Tensor[(7, 154), uint32] */;
  %894 = reshape(%891, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
  %895 = reshape(%893, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
  %896 = @func_239(%894, %895) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
  %897 = %887.1;
  %898 = %896.0;
  (%897, %892, meta[relay.Constant][56] /* ty=Tensor[(1078), uint32] */, %898, %var_7654)
}

def @func_14246() -> (Tensor[(5, 3, 9), int64],) {
  @func_14244() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_13926(%var_13889: Tensor[(539, 2), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(2, 11, 12), float64], Tensor[(264), float64], Tensor[(539, 2), uint32]) {
  %899 = @func_10585() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %900 = cast(meta[relay.Constant][57] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %901 = cast(%var_13889, dtype="uint32") /* ty=Tensor[(539, 2), uint32] */;
  %902 = reshape(%900, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), float64] */;
  %903 = reshape(%901, newshape=[1078]) /* ty=Tensor[(1078), uint32] */;
  %904 = @func_2775(%902, %903) /* ty=(Tensor[(2, 11, 12), float64], Tensor[(14, 7, 11), float32], Tensor[(77), uint32], Tensor[(1078), uint32], Tensor[(?, 1078), int16], Tensor[(588, 4), float32]) */;
  %905 = %899.0;
  %906 = %904.0;
  (%905, %906, meta[relay.Constant][57] /* ty=Tensor[(264), float64] */, %var_13889)
}

def @func_10007() -> Tensor[(5, 3, 9), int64] {
  @func_10005() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_11581() -> (Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) {
  @func_11579() /* ty=(Tensor[(5, 3, 9), float64], Tensor[(5, 3, 9), int64]) */
}

def @func_10112(%var_10109: int16, %var_10110: Tensor[(1, 13, 14), int16], %var_10111: Tensor[(1, 210), int8]) -> (Tensor[(15, 7, 2), bool], Tensor[(1, 210), int8], Tensor[(?, 13, 14), int32]) {
  @func_10107(%var_10109, %var_10110, %var_10111) /* ty=(Tensor[(15, 7, 2), bool], Tensor[(1, 210), int8], Tensor[(?, 13, 14), int32]) */
}

def @func_9100() -> (Tensor[(5, 3, 9), int64],) {
  %909 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %907 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
    %908 = %907.0;
    (%908,)
  };
  %909() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_9931() -> (Tensor[(5, 3, 9), int64],) {
  %912 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %910 = @func_9828() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %911 = %910.0;
    (%911,)
  };
  %912() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_7534(%var_7529: Tensor[(1078), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(450), float32], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1078), uint32]) {
  %913 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %914 = %913.0;
  %915 = cast(%914, dtype="int64") /* ty=Tensor[(5, 3, 9), int64] */;
  %916 = cast(meta[relay.Constant][58] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %917 = reshape(%915, newshape=[5, 3, 9]) /* ty=Tensor[(5, 3, 9), int64] */;
  %918 = reshape(%916, newshape=[150, 3]) /* ty=Tensor[(150, 3), float32] */;
  %919 = @func_7450(%917, %918) /* ty=(Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(150, 3), float32], Tensor[(2352), float32]) */;
  %920 = cast(meta[relay.Constant][59] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %921 = cast(%var_7529, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %922 = reshape(%920, newshape=[77, 1]) /* ty=Tensor[(77, 1), uint32] */;
  %923 = reshape(%921, newshape=[7, 154]) /* ty=Tensor[(7, 154), uint32] */;
  %924 = @func_7424(%922, %923) /* ty=(Tensor[(5, 3, 9), float64], Tensor[(14, 7, 11), uint32], Tensor[(77, 1), uint32], Tensor[(7, 154), uint32], Tensor[(1, 1, 5), float64], Tensor[(2352), float32]) */;
  %925 = %919.1;
  %926 = %924.3;
  (%914, %925, meta[relay.Constant][58] /* ty=Tensor[(450), float32] */, %926, meta[relay.Constant][59] /* ty=Tensor[(77), uint32] */, %var_7529)
}

def @func_10039() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  @func_10037() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */
}

def @func_9915() -> Tensor[(5, 3, 9), float64] {
  %929 = fn () -> Tensor[(5, 3, 9), float64] {
    %927 = @func_7088() /* ty=Tensor[(5, 3, 9), int64] */;
    %928 = cast(%927, dtype="float64") /* ty=Tensor[(5, 3, 9), float64] */;
    sigmoid(%928) /* ty=Tensor[(5, 3, 9), float64] */
  };
  %929() /* ty=Tensor[(5, 3, 9), float64] */
}

def @func_9299() -> Tensor[(5, 3, 9), int64] {
  %930 = @func_9128() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %930.1
}

def @func_7192() -> (Tensor[(5, 3, 9), int64],) {
  %932 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %931 = @func_7088() /* ty=Tensor[(5, 3, 9), int64] */;
    (%931,)
  };
  %932() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_9636() -> (Tensor[(5, 3, 9), int64],) {
  @func_9634() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_6885(%var_6883: float32, %var_6884: Tensor[(7, 10, 4), float32]) -> Tensor[(7, 10, 4), float32] {
  @func_6881(%var_6883, %var_6884) /* ty=Tensor[(7, 10, 4), float32] */
}

def @func_11314() -> (Tensor[(5, 3, 9), int64],) {
  %935 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %933 = @func_11175() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(280), float32]) */;
    %934 = %933.1;
    (%934,)
  };
  %935() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_9686() -> (Tensor[(5, 3, 9), int64],) {
  %937 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %936 = @func_8090() /* ty=Tensor[(5, 3, 9), int64] */;
    (%936,)
  };
  %937() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_12175() -> Tensor[(5, 3, 9), float64] {
  @func_12173() /* ty=Tensor[(5, 3, 9), float64] */
}

def @func_7726() -> (Tensor[(5, 3, 9), int64],) {
  @func_7724() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_9805(%var_9804: Tensor[(1, 1078), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1, 1078), uint32]) {
  %947 = fn (%var_9784: Tensor[(1, 1078), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1, 1078), uint32]) {
    %938 = @func_9099() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %939 = cast(meta[relay.Constant][60] /* ty=Tensor[(77), uint32] */, dtype="uint32") /* ty=Tensor[(77), uint32] */;
    %940 = cast(%var_9784, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
    %941 = reshape(%939, newshape=[77, 1]) /* ty=Tensor[(77, 1), uint32] */;
    %942 = reshape(%940, newshape=[7, 154]) /* ty=Tensor[(7, 154), uint32] */;
    %943 = @func_7424(%941, %942) /* ty=(Tensor[(5, 3, 9), float64], Tensor[(14, 7, 11), uint32], Tensor[(77, 1), uint32], Tensor[(7, 154), uint32], Tensor[(1, 1, 5), float64], Tensor[(2352), float32]) */;
    %944 = @func_8090() /* ty=Tensor[(5, 3, 9), int64] */;
    %945 = %938.0;
    %946 = %943.3;
    (%944, %945, %946, meta[relay.Constant][60] /* ty=Tensor[(77), uint32] */, %var_9784)
  };
  %947(%var_9804) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(77), uint32], Tensor[(1, 1078), uint32]) */
}

def @func_13978() -> (Tensor[(5, 3, 9), int64],) {
  %950 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %948 = @func_11747() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %949 = %948.0;
    (%949,)
  };
  %950() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_10874() -> (Tensor[(66), float64],) {
  %953 = fn () -> (Tensor[(66), float64],) {
    %951 = @func_7278() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */;
    %952 = %951.4;
    (%952,)
  };
  %953() /* ty=(Tensor[(66), float64],) */
}

def @func_10957(%var_10954: int16, %var_10955: Tensor[(182), int16], %var_10956: Tensor[(210), int8]) -> (Tensor[(5, 3, 9), int64], Tensor[(1078), uint32], Tensor[(15, 7, 2), bool], int16, Tensor[(182), int16], Tensor[(210), int8]) {
  %965 = fn (%var_10916: int16, %var_10917: Tensor[(182), int16], %var_10918: Tensor[(210), int8]) -> (Tensor[(5, 3, 9), int64], Tensor[(1078), uint32], Tensor[(15, 7, 2), bool], int16, Tensor[(182), int16], Tensor[(210), int8]) {
    %954 = @func_10813() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 154), bool], Tensor[(1078), uint32], Tensor[(77, 1), uint32], Tensor[(210), int8], Tensor[(66), float64], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) */;
    %955 = cast(%var_10916, dtype="int16") /* ty=int16 */;
    %956 = cast(%var_10917, dtype="int16") /* ty=Tensor[(182), int16] */;
    %957 = cast(%var_10918, dtype="int8") /* ty=Tensor[(210), int8] */;
    %958 = reshape(%955, newshape=[]) /* ty=int16 */;
    %959 = reshape(%956, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), int16] */;
    %960 = reshape(%957, newshape=[1, 210]) /* ty=Tensor[(1, 210), int8] */;
    %961 = @func_10107(%958, %959, %960) /* ty=(Tensor[(15, 7, 2), bool], Tensor[(1, 210), int8], Tensor[(?, 13, 14), int32]) */;
    %962 = @func_9959() /* ty=Tensor[(5, 3, 9), int64] */;
    %963 = %954.2;
    %964 = %961.0;
    (%962, %963, %964, %var_10916, %var_10917, %var_10918)
  };
  %965(%var_10954, %var_10955, %var_10956) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(1078), uint32], Tensor[(15, 7, 2), bool], int16, Tensor[(182), int16], Tensor[(210), int8]) */
}

def @func_7042() -> (Tensor[(5, 3, 9), int64],) {
  %966 = cast(meta[relay.Constant][62] /* ty=Tensor[(5, 3, 9), int64] */, dtype="int64") /* ty=Tensor[(5, 3, 9), int64] */;
  %967 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(5, 3, 9), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %968 = cast(meta[relay.Constant][61] /* ty=Tensor[(5, 3, 9), int64] */, dtype="int64") /* ty=Tensor[(5, 3, 9), int64] */;
  %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %970 = bitwise_xor(%968, %969) /* ty=Tensor[(5, 3, 9), int64] */;
  (%970,)
}

def @func_14089(%var_14086: Tensor[(77), uint32], %var_14087: Tensor[(7, 154), uint32], %var_14088: Tensor[(2352), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(7, 154), uint32], Tensor[(2352), float32], Tensor[(77), int8]) {
  @func_14084(%var_14086, %var_14087, %var_14088) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), float64], Tensor[(7, 154), uint32], Tensor[(2352), float32], Tensor[(77), int8]) */
}

def @func_8948(%var_8925: Tensor[(1, 66), float64], %var_8926: Tensor[(210), int8], %var_8932: Tensor[(77), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], Tensor[(1, 66), float64], Tensor[(210), int8], Tensor[(14, 7, 11), uint32], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %971 = @func_7747() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */;
  %972 = cast(%var_8925, dtype="float64") /* ty=Tensor[(1, 66), float64] */;
  %973 = cast(%var_8926, dtype="int8") /* ty=Tensor[(210), int8] */;
  %974 = reshape(%972, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %975 = reshape(%973, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %976 = @func_4078(%974, %975) /* ty=(Tensor[(2, 3, 11), float64], Tensor[(15, 7, 2), bool], Tensor[(210), int8]) */;
  %977 = cast(%var_8932, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %978 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 1078), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
  %979 = reshape(%977, newshape=[77, 1]) /* ty=Tensor[(77, 1), uint32] */;
  %980 = reshape(%978, newshape=[7, 154]) /* ty=Tensor[(7, 154), uint32] */;
  %981 = @func_7424(%979, %980) /* ty=(Tensor[(5, 3, 9), float64], Tensor[(14, 7, 11), uint32], Tensor[(77, 1), uint32], Tensor[(7, 154), uint32], Tensor[(1, 1, 5), float64], Tensor[(2352), float32]) */;
  %982 = @func_7724() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %983 = %971.0;
  %984 = %976.1;
  %985 = %981.1;
  %986 = %982.0;
  %987 = @func_8289() /* ty=Tensor[(5, 3, 9), int64] */;
  (%983, %984, %var_8925, %var_8926, %985, %var_8932, meta[relay.Constant][63] /* ty=Tensor[(1, 1078), uint32] */, %986, %987)
}

def @func_8290() -> Tensor[(5, 3, 9), int64] {
  %989 = fn () -> Tensor[(5, 3, 9), int64] {
    %988 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %988.0
  };
  %989() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_13014(%var_12992: Tensor[(77), uint32], %var_12993: Tensor[(1078), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(1078), uint32], Tensor[(77), uint8]) {
  %990 = cast(%var_12992, dtype="uint32") /* ty=Tensor[(77), uint32] */;
  %991 = cast(%var_12993, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
  %992 = reshape(%990, newshape=[1, 7, 11]) /* ty=Tensor[(1, 7, 11), uint32] */;
  %993 = reshape(%991, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), uint32] */;
  %994 = @func_239(%992, %993) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */;
  %995 = cast(meta[relay.Constant][64] /* ty=Tensor[(77), uint32] */, dtype="uint8") /* ty=Tensor[(77), uint8] */;
  %996 = shape_of(%var_12992, dtype="int32") /* ty=Tensor[(1), int32] */;
  %997 = cast(%var_12992, dtype="uint8") /* ty=Tensor[(77), uint8] */;
  %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %999 = @func_9959() /* ty=Tensor[(5, 3, 9), int64] */;
  %1000 = %994.1;
  %1001 = bitwise_and(%997, %998) /* ty=Tensor[(77), uint8] */;
  (%999, %1000, %var_12993, %1001)
}

def @func_9385(%var_9382: Tensor[(2352), float32], %var_9383: Tensor[(1, 210), int8], %var_9384: Tensor[(450), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(1, 210), int8], Tensor[(1, 77), uint32], Tensor[(150, 3), float32], Tensor[(450), float32], Tensor[(5, 3, 9), int64], Tensor[(539, 2), bool]) {
  %1024 = fn (%var_9358: Tensor[(2352), float32], %var_9359: Tensor[(1, 210), int8], %var_9363: Tensor[(450), float32]) -> (Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(1, 210), int8], Tensor[(1, 77), uint32], Tensor[(150, 3), float32], Tensor[(450), float32], Tensor[(5, 3, 9), int64], Tensor[(539, 2), bool]) {
    %1002 = @func_8090() /* ty=Tensor[(5, 3, 9), int64] */;
    %1003 = cast(%1002, dtype="int64") /* ty=Tensor[(5, 3, 9), int64] */;
    %1004 = cast(%var_9363, dtype="float32") /* ty=Tensor[(450), float32] */;
    %1005 = reshape(%1003, newshape=[5, 3, 9]) /* ty=Tensor[(5, 3, 9), int64] */;
    %1006 = reshape(%1004, newshape=[150, 3]) /* ty=Tensor[(150, 3), float32] */;
    %1007 = @func_7450(%1005, %1006) /* ty=(Tensor[(5, 3, 9), int8], Tensor[(2352), float32], Tensor[(150, 3), float32], Tensor[(2352), float32]) */;
    %1008 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %1009 = cast(%var_9358, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %1010 = cast(%var_9359, dtype="int8") /* ty=Tensor[(1, 210), int8] */;
    %1011 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 77), uint32] */, dtype="uint32") /* ty=Tensor[(1, 77), uint32] */;
    %1012 = reshape(%1009, newshape=[2352]) /* ty=Tensor[(2352), float32] */;
    %1013 = reshape(%1010, newshape=[210]) /* ty=Tensor[(210), int8] */;
    %1014 = reshape(%1011, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
    %1015 = @func_7923(%1012, %1013, %1014) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(2352), float32], Tensor[(13, 450), int32], Tensor[(15, 7, 2), bool], Tensor[(210), int8], Tensor[(14, 7, 11), uint32], Tensor[(11, 7), uint32], Tensor[(539, 2), uint32], Tensor[(2, 11, 12), float64], Tensor[(3, 88), float64]) */;
    %1016 = %1015.8;
    %1017 = cast(meta[relay.Constant][66] /* ty=Tensor[(539, 2), uint32] */, dtype="bool") /* ty=Tensor[(539, 2), bool] */;
    %1018 = shape_of(%1016, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1019 = cast(%1016, dtype="bool") /* ty=Tensor[(539, 2), bool] */;
    %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1021 = %1007.2;
    %1022 = %1008.0;
    %1023 = not_equal(%1019, %1020) /* ty=Tensor[(539, 2), bool] */;
    (%1002, %var_9358, %var_9359, meta[relay.Constant][65] /* ty=Tensor[(1, 77), uint32] */, %1021, %var_9363, %1022, %1023)
  };
  %1024(%var_9382, %var_9383, %var_9384) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(2352), float32], Tensor[(1, 210), int8], Tensor[(1, 77), uint32], Tensor[(150, 3), float32], Tensor[(450), float32], Tensor[(5, 3, 9), int64], Tensor[(539, 2), bool]) */
}

def @func_13502() -> Tensor[(5, 3, 9), int64] {
  @func_13500() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_11203() -> Tensor[(5, 3, 9), int64] {
  @func_7088() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_4656(%var_4655: Tensor[(9, 7, 16), float64]) -> Tensor[(9, 7, 16), float64] {
  %1026 = fn (%var_4643: Tensor[(9, 7, 16), float64]) -> Tensor[(9, 7, 16), float64] {
    %1025 = cast(%var_4643, dtype="float64") /* ty=Tensor[(9, 7, 16), float64] */;
    exp(%1025) /* ty=Tensor[(9, 7, 16), float64] */
  };
  %1026(%var_4655) /* ty=Tensor[(9, 7, 16), float64] */
}

def @func_7749() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  @func_7747() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */
}

def @func_10855() -> (Tensor[(5, 3, 9), int64],) {
  %1029 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %1027 = @func_10585() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %1028 = %1027.0;
    (%1028,)
  };
  %1029() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_12411() -> Tensor[(70, 4), float32] {
  %1031 = fn () -> Tensor[(70, 4), float32] {
    %1030 = @func_11404() /* ty=(Tensor[(70, 4), float32],) */;
    %1030.0
  };
  %1031() /* ty=Tensor[(70, 4), float32] */
}

def @func_13018(%var_13016: Tensor[(77), uint32], %var_13017: Tensor[(1078), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(1078), uint32], Tensor[(77), uint8]) {
  @func_13014(%var_13016, %var_13017) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(14, 7, 11), float32], Tensor[(1078), uint32], Tensor[(77), uint8]) */
}

def @func_13500() -> Tensor[(5, 3, 9), int64] {
  @func_7088() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_11116() -> Tensor[(5, 3, 9), int64] {
  %1033 = fn () -> Tensor[(5, 3, 9), int64] {
    %1032 = @func_9634() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %1032.0
  };
  %1033() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_7279() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) {
  %1044 = fn () -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) {
    %1034 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %1035 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %1036 = cast(meta[relay.Constant][67] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
    %1037 = cast(meta[relay.Constant][68] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
    %1038 = reshape(%1036, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), int64] */;
    %1039 = reshape(%1037, newshape=[11, 6]) /* ty=Tensor[(11, 6), float64] */;
    %1040 = @func_4732(%1038, %1039) /* ty=(Tensor[(3, 10, 9), int64], Tensor[(210), int8], Tensor[(11, 6), float64], Tensor[(210), int8]) */;
    %1041 = %1034.0;
    %1042 = %1035.0;
    %1043 = %1040.1;
    (%1041, %1042, %1043, meta[relay.Constant][67] /* ty=Tensor[(270), int64] */, meta[relay.Constant][68] /* ty=Tensor[(66), float64] */)
  };
  %1044() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64], Tensor[(210), int8], Tensor[(270), int64], Tensor[(66), float64]) */
}

def @func_11296(%var_11295: Tensor[(70, 4), float32]) -> (Tensor[(70, 4), bool], Tensor[(6, ?, 16), float32], Tensor[(96), float32], Tensor[(5, 3, 9), int64]) {
  %1056 = fn (%var_11282: Tensor[(70, 4), float32]) -> (Tensor[(70, 4), bool], Tensor[(6, ?, 16), float32], Tensor[(96), float32], Tensor[(5, 3, 9), int64]) {
    %1045 = @func_11163() /* ty=Tensor[(70, 4), float32] */;
    %1046 = cast(%var_11282, dtype="bool") /* ty=Tensor[(70, 4), bool] */;
    %1047 = shape_of(%1045, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1048 = cast(%1045, dtype="bool") /* ty=Tensor[(70, 4), bool] */;
    %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1050 = cast(meta[relay.Constant][69] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %1051 = reshape(%1050, newshape=[6, 1, 16]) /* ty=Tensor[(6, 1, 16), float32] */;
    %1052 = @func_10813() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 154), bool], Tensor[(1078), uint32], Tensor[(77, 1), uint32], Tensor[(210), int8], Tensor[(66), float64], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) */;
    %1053 = not_equal(%1048, %1049) /* ty=Tensor[(70, 4), bool] */;
    %1054 = @func_5216(%1051) /* ty=Tensor[(6, ?, 16), float32] */;
    %1055 = %1052.0;
    (%1053, %1054, meta[relay.Constant][69] /* ty=Tensor[(96), float32] */, %1055)
  };
  %1056(%var_11295) /* ty=(Tensor[(70, 4), bool], Tensor[(6, ?, 16), float32], Tensor[(96), float32], Tensor[(5, 3, 9), int64]) */
}

def @func_12565(%var_12554: Tensor[(6, 3, 7), float64]) -> Tensor[(6, 3, 7), float64] {
  %1057 = cast(%var_12554, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  %1058 = atan(%1057) /* ty=Tensor[(6, 3, 7), float64] */;
  %1059 = cast(%1058, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  atanh(%1059) /* ty=Tensor[(6, 3, 7), float64] */
}

def @func_1702(%var_1699: int64, %var_1700: Tensor[(13, 4, 1), int64], %var_1701: Tensor[(84, 28), float32]) -> (Tensor[(13, 4, 1), bool], Tensor[(11, 10, 5), int64], Tensor[(11, 7), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) {
  %1071 = fn (%var_1677: int64, %var_1678: Tensor[(13, 4, 1), int64], %var_1692: Tensor[(84, 28), float32]) -> (Tensor[(13, 4, 1), bool], Tensor[(11, 10, 5), int64], Tensor[(11, 7), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) {
    %1060 = cast(%var_1677, dtype="bool") /* ty=bool */;
    %1061 = cast(%var_1678, dtype="bool") /* ty=Tensor[(13, 4, 1), bool] */;
    %1062 = cast(meta[relay.Constant][70] /* ty=Tensor[(11, 7), uint32] */, dtype="uint32") /* ty=Tensor[(11, 7), uint32] */;
    %1063 = cast(meta[relay.Constant][71] /* ty=Tensor[(1078), uint32] */, dtype="uint32") /* ty=Tensor[(1078), uint32] */;
    %1064 = cast(%var_1692, dtype="float32") /* ty=Tensor[(84, 28), float32] */;
    %1065 = reshape(%1062, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
    %1066 = reshape(%1063, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
    %1067 = reshape(%1064, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
    %1068 = @func_1335(%1065, %1066, %1067) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
    %1069 = greater_equal(%1060, %1061) /* ty=Tensor[(13, 4, 1), bool] */;
    %1070 = %1068.1;
    (%1069, %1070, meta[relay.Constant][70] /* ty=Tensor[(11, 7), uint32] */, meta[relay.Constant][71] /* ty=Tensor[(1078), uint32] */, %var_1692)
  };
  %1071(%var_1699, %var_1700, %var_1701) /* ty=(Tensor[(13, 4, 1), bool], Tensor[(11, 10, 5), int64], Tensor[(11, 7), uint32], Tensor[(1078), uint32], Tensor[(84, 28), float32]) */
}

def @func_8469(%var_8457: Tensor[(6, 14, 13), float64]) -> (Tensor[(6, 14, 13), float64],) {
  %1072 = cast(%var_8457, dtype="float64") /* ty=Tensor[(6, 14, 13), float64] */;
  %1073 = sin(%1072) /* ty=Tensor[(6, 14, 13), float64] */;
  (%1073,)
}

def @func_9199() -> Tensor[(5, 3, 9), int64] {
  %1074 = @func_7605() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */;
  %1074.0
}

def @func_12757() -> (Tensor[(5, 3, 9), int64],) {
  %1077 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %1075 = @func_9685() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %1076 = %1075.0;
    (%1076,)
  };
  %1077() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_9830() -> (Tensor[(5, 3, 9), int64],) {
  @func_9828() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_10705() -> Tensor[(5, 3, 9), int64] {
  @func_10703() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_2153(%var_2149: Tensor[(5, 4, 8), float32], %var_2150: Tensor[(77), uint32], %var_2151: Tensor[(2352), float32], %var_2152: Tensor[(5, 4, 8), int32]) -> (Tensor[(11, 10, 5), int64], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(14, 7, 11), float32], Tensor[(5, 4, 8), bool], Tensor[(5, 4, 8), float64]) {
  %1108 = fn (%var_2096: Tensor[(5, 4, 8), float32], %var_2101: Tensor[(77), uint32], %var_2103: Tensor[(2352), float32], %var_2129: Tensor[(5, 4, 8), int32]) -> (Tensor[(11, 10, 5), int64], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(14, 7, 11), float32], Tensor[(5, 4, 8), bool], Tensor[(5, 4, 8), float64]) {
    %1078 = cast(%var_2101, dtype="uint32") /* ty=Tensor[(77), uint32] */;
    %1079 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 1078), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
    %1080 = cast(%var_2103, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %1081 = reshape(%1078, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
    %1082 = reshape(%1079, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
    %1083 = reshape(%1080, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
    %1084 = @func_1335(%1081, %1082, %1083) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
    %1085 = cast(%var_2101, dtype="uint32") /* ty=Tensor[(77), uint32] */;
    %1086 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 1078), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1078), uint32] */;
    %1087 = cast(%var_2103, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %1088 = reshape(%1085, newshape=[11, 7]) /* ty=Tensor[(11, 7), uint32] */;
    %1089 = reshape(%1086, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), uint32] */;
    %1090 = reshape(%1087, newshape=[4, 588]) /* ty=Tensor[(4, 588), float32] */;
    %1091 = @func_1335(%1088, %1089, %1090) /* ty=(Tensor[(1, 1, 5), float64], Tensor[(11, 10, 5), int64], Tensor[(14, 7, 11), float32], Tensor[(11, 7), uint32], Tensor[(1078, 1), uint32], Tensor[(?, 1078), int16], Tensor[(4, 588), float32], Tensor[(1, 1, 5), float64]) */;
    %1092 = cast(%var_2096, dtype="float32") /* ty=Tensor[(5, 4, 8), float32] */;
    %1093 = log(%1092) /* ty=Tensor[(5, 4, 8), float32] */;
    %1094 = cast(%var_2096, dtype="int32") /* ty=Tensor[(5, 4, 8), int32] */;
    %1095 = shape_of(%1093, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1096 = cast(%1093, dtype="int32") /* ty=Tensor[(5, 4, 8), int32] */;
    %1097 = dyn.reshape(%1094, %1095, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1098 = bitwise_xor(%1096, %1097) /* ty=Tensor[(5, 4, 8), int32] */;
    %1099 = cast(%var_2129, dtype="bool") /* ty=Tensor[(5, 4, 8), bool] */;
    %1100 = shape_of(%1098, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1101 = cast(%1098, dtype="bool") /* ty=Tensor[(5, 4, 8), bool] */;
    %1102 = dyn.reshape(%1099, %1100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1103 = cast(%1098, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
    %1104 = %1084.1;
    %1105 = %1091.2;
    %1106 = less_equal(%1101, %1102) /* ty=Tensor[(5, 4, 8), bool] */;
    %1107 = tan(%1103) /* ty=Tensor[(5, 4, 8), float64] */;
    (%1104, %var_2101, meta[relay.Constant][72] /* ty=Tensor[(1, 1078), uint32] */, %var_2103, %1105, %1106, %1107)
  };
  %1108(%var_2149, %var_2150, %var_2151, %var_2152) /* ty=(Tensor[(11, 10, 5), int64], Tensor[(77), uint32], Tensor[(1, 1078), uint32], Tensor[(2352), float32], Tensor[(14, 7, 11), float32], Tensor[(5, 4, 8), bool], Tensor[(5, 4, 8), float64]) */
}

def @func_8588(%var_8563: Tensor[(70, 4), float32]) -> (Tensor[(70, 4), uint16], Tensor[(5, 3, 9), int64]) {
  %1109 = @func_7605() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 10, 4), float32], float32, Tensor[(70, 4), float32]) */;
  %1110 = %1109.3;
  %1111 = cast(%var_8563, dtype="uint16") /* ty=Tensor[(70, 4), uint16] */;
  %1112 = shape_of(%1110, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1113 = cast(%1110, dtype="uint16") /* ty=Tensor[(70, 4), uint16] */;
  %1114 = dyn.reshape(%1111, %1112, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1115 = @func_7191() /* ty=(Tensor[(5, 3, 9), int64],) */;
  %1116 = multiply(%1113, %1114) /* ty=Tensor[(70, 4), uint16] */;
  %1117 = %1115.0;
  (%1116, %1117)
}

def @func_9130() -> (Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  @func_9128() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */
}

def @func_13516(%var_13514: Tensor[(8, 14, 6), int32], %var_13515: Tensor[(8, 14, 6), int32]) -> (Tensor[(8, 14, 6), int32],) {
  %1123 = fn (%var_13506: Tensor[(8, 14, 6), int32], %var_13507: Tensor[(8, 14, 6), int32]) -> (Tensor[(8, 14, 6), int32],) {
    %1118 = cast(%var_13507, dtype="int32") /* ty=Tensor[(8, 14, 6), int32] */;
    %1119 = shape_of(%var_13506, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1120 = cast(%var_13506, dtype="int32") /* ty=Tensor[(8, 14, 6), int32] */;
    %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1122 = bitwise_xor(%1120, %1121) /* ty=Tensor[(8, 14, 6), int32] */;
    (%1122,)
  };
  %1123(%var_13514, %var_13515) /* ty=(Tensor[(8, 14, 6), int32],) */
}

def @func_12983() -> (Tensor[(70, 4), uint16], Tensor[(70, 4), float32]) {
  @func_12981() /* ty=(Tensor[(70, 4), uint16], Tensor[(70, 4), float32]) */
}

def @func_12638(%var_12635: int16, %var_12636: Tensor[(182), int16], %var_12637: Tensor[(11, 6), float64]) -> (Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], int16, Tensor[(182), int16], Tensor[(210), int8], Tensor[(5, 3, 9), int64], Tensor[(1, 182), int16], Tensor[(90), float32], Tensor[(210), int8], Tensor[(11, 6), float64]) {
  @func_12633(%var_12635, %var_12636, %var_12637) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(15, 7, 2), bool], int16, Tensor[(182), int16], Tensor[(210), int8], Tensor[(5, 3, 9), int64], Tensor[(1, 182), int16], Tensor[(90), float32], Tensor[(210), int8], Tensor[(11, 6), float64]) */
}

def @func_13805(%var_13803: Tensor[(10, 5, 15), float32], %var_13804: Tensor[(10, 5, 15), float32]) -> (Tensor[(10, 5, 15), float32], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
  %1132 = fn (%var_13780: Tensor[(10, 5, 15), float32], %var_13781: Tensor[(10, 5, 15), float32]) -> (Tensor[(10, 5, 15), float32], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) {
    %1124 = cast(%var_13781, dtype="float32") /* ty=Tensor[(10, 5, 15), float32] */;
    %1125 = shape_of(%var_13780, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1126 = cast(%var_13780, dtype="float32") /* ty=Tensor[(10, 5, 15), float32] */;
    %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1128 = @func_7954() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %1129 = power(%1126, %1127) /* ty=Tensor[(10, 5, 15), float32] */;
    %1130 = %1128.0;
    %1131 = @func_8028() /* ty=Tensor[(5, 3, 9), int64] */;
    (%1129, %1130, %1131)
  };
  %1132(%var_13803, %var_13804) /* ty=(Tensor[(10, 5, 15), float32], Tensor[(5, 3, 9), int64], Tensor[(5, 3, 9), int64]) */
}

def @func_243(%var_241: Tensor[(1, 7, 11), uint32], %var_242: Tensor[(14, 7, 11), uint32]) -> (Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) {
  @func_239(%var_241, %var_242) /* ty=(Tensor[(14, 7, 11), uint32], Tensor[(14, 7, 11), float32]) */
}

def @func_12568(%var_12566: Tensor[(6, 3, 7), float64]) -> Tensor[(6, 3, 7), float64] {
  @func_12565(%var_12566) /* ty=Tensor[(6, 3, 7), float64] */
}

def @func_7664(%var_7662: Tensor[(77), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(1078), uint32], Tensor[(14, 7, 11), uint32], Tensor[(77), uint32]) {
  @func_7661(%var_7662) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 154), uint32], Tensor[(1078), uint32], Tensor[(14, 7, 11), uint32], Tensor[(77), uint32]) */
}

def @func_13929(%var_13927: Tensor[(539, 2), uint32]) -> (Tensor[(5, 3, 9), int64], Tensor[(2, 11, 12), float64], Tensor[(264), float64], Tensor[(539, 2), uint32]) {
  @func_13926(%var_13927) /* ty=(Tensor[(5, 3, 9), int64], Tensor[(2, 11, 12), float64], Tensor[(264), float64], Tensor[(539, 2), uint32]) */
}

def @func_13137() -> (Tensor[(5, 3, 9), int64],) {
  %1135 = fn () -> (Tensor[(5, 3, 9), int64],) {
    %1133 = @func_8052() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %1134 = %1133.0;
    (%1134,)
  };
  %1135() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_9201() -> Tensor[(5, 3, 9), int64] {
  @func_9199() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_10815() -> (Tensor[(5, 3, 9), int64], Tensor[(7, 154), bool], Tensor[(1078), uint32], Tensor[(77, 1), uint32], Tensor[(210), int8], Tensor[(66), float64], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) {
  @func_10813() /* ty=(Tensor[(5, 3, 9), int64], Tensor[(7, 154), bool], Tensor[(1078), uint32], Tensor[(77, 1), uint32], Tensor[(210), int8], Tensor[(66), float64], Tensor[(210), int8], Tensor[(5, 3, 9), int64]) */
}

def @func_14447() -> (Tensor[(5, 3, 9), int64],) {
  @func_14445() /* ty=(Tensor[(5, 3, 9), int64],) */
}

def @func_8029() -> Tensor[(5, 3, 9), int64] {
  %1137 = fn () -> Tensor[(5, 3, 9), int64] {
    %1136 = @func_7799() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %1136.0
  };
  %1137() /* ty=Tensor[(5, 3, 9), int64] */
}

def @func_2622(%var_2620: Tensor[(15, 7, 2), int8], %var_2621: Tensor[(15, 7, 2), int8]) -> Tensor[(15, 7, 2), bool] {
  @func_2618(%var_2620, %var_2621) /* ty=Tensor[(15, 7, 2), bool] */
}

def @func_8245() -> Tensor[(5, 3, 9), int64] {
  %1139 = fn () -> Tensor[(5, 3, 9), int64] {
    %1138 = @func_7042() /* ty=(Tensor[(5, 3, 9), int64],) */;
    %1138.0
  };
  %1139() /* ty=Tensor[(5, 3, 9), int64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen753/build/output.py:2965: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen753/build/output.py", line 2970, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_reshape_divide_kernel0(double* __restrict__ T_divide, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1440) {
    T_divide[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = (placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] / placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


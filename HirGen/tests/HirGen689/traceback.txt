==========mod==========
#[version = "0.0.5"]
def @func_15152() -> (Tensor[(4, 8, 11), float64], Tensor[(1536, 2), int16]) {
  %0 = @func_11278() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96, 1), int32]) */;
  %1 = @func_1979() /* ty=(Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) */;
  %2 = %1.2;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(1536, 2), float64] */, dtype="int16") /* ty=Tensor[(1536, 2), int16] */;
  %4 = shape_of(%2, dtype="int32") /* ty=Tensor[(2), int32] */;
  %5 = cast(%2, dtype="int16") /* ty=Tensor[(1536, 2), int16] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %7 = %0.2;
  %8 = multiply(%5, %6) /* ty=Tensor[(1536, 2), int16] */;
  (%7, %8)
}

def @func_17424() -> (Tensor[(4, 8, 11), float64],) {
  %9 = @func_12013() /* ty=Tensor[(4, 8, 11), float64] */;
  (%9,)
}

def @func_3105() -> (Tensor[(4, 8, 11), bool],) {
  %10 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %11 = %10.0;
  (%11,)
}

def @func_15227() -> (Tensor[(4, 8, 11), float64], Tensor[(6, 3), float32], Tensor[(231), int16]) {
  %12 = @func_14846() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %13 = @func_4236() /* ty=(Tensor[(6, 3), float32],) */;
  %14 = %12.0;
  %15 = %13.0;
  %16 = @func_7774() /* ty=Tensor[(231), int16] */;
  (%14, %15, %16)
}

def @func_6446(%var_6430: Tensor[(1, 16, 9), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64]) {
  %17 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %18 = cast(%var_6430, dtype="float64") /* ty=Tensor[(1, 16, 9), float64] */;
  %19 = exp(%18) /* ty=Tensor[(1, 16, 9), float64] */;
  %20 = cast(%19, dtype="float64") /* ty=Tensor[(1, 16, 9), float64] */;
  %21 = %17.0;
  %22 = sqrt(%20) /* ty=Tensor[(1, 16, 9), float64] */;
  (%21, %22)
}

def @func_5263() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %23 = @func_1619() /* ty=(Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) */;
  %24 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %25 = %23.6;
  %26 = %24.0;
  (%25, %26)
}

def @func_12796() -> (Tensor[(4, 8, 11), float64],) {
  %27 = @func_7371() /* ty=Tensor[(4, 8, 11), float64] */;
  (%27,)
}

def @func_9511(%var_9506: Tensor[(2, 12, 1), float64]) -> (Tensor[(2, 12, 1), float64], Tensor[(4, 8, 11), float64]) {
  %28 = cast(%var_9506, dtype="float64") /* ty=Tensor[(2, 12, 1), float64] */;
  %29 = asinh(%28) /* ty=Tensor[(2, 12, 1), float64] */;
  %30 = @func_3736() /* ty=Tensor[(4, 8, 11), float64] */;
  (%29, %30)
}

def @func_16499(%var_16439: Tensor[(13, 14, 15), float32]) -> (Tensor[(13, 14, 15), int16], Tensor[(13, 14, 15), float64], Tensor[(7, 3, 4), float64], Tensor[(84), uint32]) {
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 14, 15), float32] */, dtype="int16") /* ty=Tensor[(13, 14, 15), int16] */;
  %32 = shape_of(%var_16439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%var_16439, dtype="int16") /* ty=Tensor[(13, 14, 15), int16] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %35 = cast(%var_16439, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  %36 = atan(%35) /* ty=Tensor[(13, 14, 15), float32] */;
  %37 = cast(%36, dtype="float64") /* ty=Tensor[(13, 14, 15), float64] */;
  %38 = cosh(%37) /* ty=Tensor[(13, 14, 15), float64] */;
  %39 = cast(%38, dtype="float64") /* ty=Tensor[(13, 14, 15), float64] */;
  %40 = cast(meta[relay.Constant][2] /* ty=Tensor[(84), uint32] */, dtype="uint32") /* ty=Tensor[(84), uint32] */;
  %41 = reshape(%40, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), uint32] */;
  %42 = subtract(%33, %34) /* ty=Tensor[(13, 14, 15), int16] */;
  %43 = sqrt(%39) /* ty=Tensor[(13, 14, 15), float64] */;
  %44 = @func_2463(%41) /* ty=Tensor[(7, 3, 4), float64] */;
  (%42, %43, %44, meta[relay.Constant][2] /* ty=Tensor[(84), uint32] */)
}

def @func_5203() -> Tensor[(4, 8, 11), bool] {
  %45 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %45.0
}

def @func_6329() -> Tensor[(4, 8, 11), bool] {
  %46 = @func_2349() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(6, 2, 8), bool]) */;
  %46.1
}

def @func_13392(%var_13379: int8) -> (Tensor[(4, 8, 11), float64], Tensor[(3, 12, 9), bool], int8) {
  %47 = @func_3100() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %48 = cast(%var_13379, dtype="int8") /* ty=int8 */;
  %49 = reshape(%48, newshape=[]) /* ty=int8 */;
  %50 = %47.0;
  %51 = @func_5299(%49) /* ty=Tensor[(3, 12, 9), bool] */;
  (%50, %51, %var_13379)
}

def @func_12776() -> Tensor[(4, 8, 11), float64] {
  %52 = @func_8016() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %52.1
}

def @func_8408() -> Tensor[(4, 8, 11), float64] {
  @func_3425() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_9050(%var_9000: Tensor[(8, 384), float64], %var_9021: Tensor[(84), float32], %var_9042: Tensor[(21, 6), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(8, 384), float64], Tensor[(4, 8, 11), float64], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(21, 6), float32]) {
  %53 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %54 = @func_8016() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %55 = cast(%var_9000, dtype="float64") /* ty=Tensor[(8, 384), float64] */;
  %56 = reshape(%55, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %57 = @func_144(%56) /* ty=(Tensor[(12, 16, 16), float64],) */;
  %58 = cast(%var_9021, dtype="float32") /* ty=Tensor[(84), float32] */;
  %59 = reshape(%58, newshape=[7, 4, 3]) /* ty=Tensor[(7, 4, 3), float32] */;
  %60 = @func_7766() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %61 = cast(%var_9042, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
  %62 = reshape(%61, newshape=[7, 18]) /* ty=Tensor[(7, 18), float32] */;
  %63 = @func_3186(%62) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) */;
  %64 = %53.0;
  %65 = %54.1;
  %66 = %57.0;
  %67 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
  %68 = @func_2327(%59) /* ty=Tensor[(7, 4, 3), float32] */;
  %69 = %60.0;
  %70 = %63.0;
  (%64, %65, %66, %var_9000, %67, %68, %var_9021, %69, %70, %var_9042)
}

def @func_7371() -> Tensor[(4, 8, 11), float64] {
  %71 = @func_7223() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %71.0
}

def @func_13893(%var_13886: Tensor[(11, 9, 7), uint32]) -> (Tensor[(11, 9, 7), uint32],) {
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(11, 9, 7), uint32] */, dtype="uint32") /* ty=Tensor[(11, 9, 7), uint32] */;
  %73 = shape_of(%var_13886, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%var_13886, dtype="uint32") /* ty=Tensor[(11, 9, 7), uint32] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %76 = multiply(%74, %75) /* ty=Tensor[(11, 9, 7), uint32] */;
  (%76,)
}

def @func_12579() -> (Tensor[(231), int16],) {
  %77 = @func_7774() /* ty=Tensor[(231), int16] */;
  (%77,)
}

def @func_17715() -> (uint32,) {
  %78 = @func_13983() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(16, 15, 11), uint32], uint32) */;
  %79 = %78.2;
  (%79,)
}

def @func_12176() -> (Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) {
  %80 = @func_2261() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %81 = @func_11541() /* ty=(Tensor[(11, 13, 6), float64],) */;
  %82 = %80.0;
  %83 = %81.0;
  %84 = @func_8408() /* ty=Tensor[(4, 8, 11), float64] */;
  (%82, %83, %84)
}

def @func_3736() -> Tensor[(4, 8, 11), float64] {
  %85 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %85.0
}

def @func_10568() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %86 = @func_1896() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %87 = @func_5023() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %88 = @func_8801() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %89 = %86.0;
  %90 = %87.0;
  %91 = %88.0;
  (%89, %90, %91)
}

def @func_11803() -> (Tensor[(4, 8, 11), float64],) {
  %92 = @func_1310() /* ty=Tensor[(4, 8, 11), float64] */;
  (%92,)
}

def @func_7710() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) {
  %93 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %94 = %93.0;
  %95 = @func_5919() /* ty=Tensor[(4, 8, 11), bool] */;
  (%94, %95)
}

def @func_14723() -> Tensor[(3072), float64] {
  %96 = @func_5105() /* ty=(Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %97 = %96.0;
  %98 = cast(%97, dtype="float64") /* ty=Tensor[(3072), float64] */;
  log10(%98) /* ty=Tensor[(3072), float64] */
}

def @func_7738() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) {
  %99 = @func_5820() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %100 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %101 = %99.0;
  %102 = %100.0;
  (%101, %102)
}

def @func_5105() -> (Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %103 = @func_3808() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32]) */;
  %104 = @func_3736() /* ty=Tensor[(4, 8, 11), float64] */;
  %105 = cast(%104, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %106 = reshape(%105, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %107 = @func_1376(%106) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */;
  %108 = %103.1;
  %109 = %107.0;
  (%108, %104, %109)
}

def @func_5489(%var_5479: uint32) -> (Tensor[(16, 15, 11), uint32], Tensor[(4, 8, 11), bool]) {
  %110 = cast(%var_5479, dtype="uint32") /* ty=uint32 */;
  %111 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 15, 11), uint32] */, dtype="uint32") /* ty=Tensor[(16, 15, 11), uint32] */;
  %112 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %113 = subtract(%110, %111) /* ty=Tensor[(16, 15, 11), uint32] */;
  %114 = %112.0;
  (%113, %114)
}

def @func_10832() -> Tensor[(4, 8, 11), float64] {
  %115 = @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %115.2
}

def @func_15679() -> Tensor[(4, 8, 11), float64] {
  %116 = @func_7507() /* ty=(Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(3072), float64]) */;
  %116.1
}

def @func_10609() -> Tensor[(4, 8, 11), float64] {
  %117 = @func_8257() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %117.0
}

def @func_2927(%var_2916: int64, %var_2917: Tensor[(14, 4, 15), int64]) -> Tensor[(14, 4, 15), int64] {
  %118 = cast(%var_2916, dtype="int64") /* ty=int64 */;
  %119 = cast(%var_2917, dtype="int64") /* ty=Tensor[(14, 4, 15), int64] */;
  subtract(%118, %119) /* ty=Tensor[(14, 4, 15), int64] */
}

def @func_18025() -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), bool], Tensor[(1386), float64], Tensor[(4, 8, 11), float64], Tensor[(18), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %120 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %121 = cast(meta[relay.Constant][5] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %122 = reshape(%121, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %123 = @func_11759(%122) /* ty=(Tensor[(432), float32], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) */;
  %124 = cast(meta[relay.Constant][6] /* ty=Tensor[(1386), float64] */, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %125 = reshape(%124, newshape=[1386]) /* ty=Tensor[(1386), float64] */;
  %126 = @func_15955(%125) /* ty=(Tensor[(4, 8, 11), bool], Tensor[(7, 18), float64], Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64], Tensor[(1386), float64]) */;
  %127 = cast(meta[relay.Constant][7] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %128 = reshape(%127, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %129 = @func_17930(%128) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(?, 3, 6), int8], Tensor[(18), float32], Tensor[(4, 8, 11), float64], Tensor[(126), float32]) */;
  %130 = @func_6794() /* ty=(Tensor[(96), int32], Tensor[(5, 14, 5), float32], Tensor[(4, 8, 11), float64]) */;
  %131 = @func_5934() /* ty=Tensor[(4, 8, 11), float64] */;
  %132 = %120.1;
  %133 = %123.1;
  %134 = %126.0;
  %135 = %129.0;
  %136 = %130.2;
  %137 = @func_3425() /* ty=Tensor[(4, 8, 11), float64] */;
  (%131, %132, %133, meta[relay.Constant][5] /* ty=Tensor[(378), float32] */, %134, meta[relay.Constant][6] /* ty=Tensor[(1386), float64] */, %135, meta[relay.Constant][7] /* ty=Tensor[(18), float32] */, %136, %137)
}

def @func_15561() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %138 = @func_10494() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %139 = @func_9389() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %140 = %138.1;
  %141 = %139.0;
  (%140, %141)
}

def @func_17149() -> (Tensor[(4, 8, 11), float64],) {
  %142 = @func_13122() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %143 = %142.0;
  (%143,)
}

def @func_2261() -> (Tensor[(4, 8, 11), float64],) {
  %144 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %145 = %144.0;
  (%145,)
}

def @func_8828() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %146 = @func_7223() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %147 = @func_5263() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %148 = %146.0;
  %149 = %147.1;
  (%148, %149)
}

def @func_12282() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %150 = @func_5565() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %151 = %150.1;
  %152 = @func_8655() /* ty=Tensor[(4, 8, 11), float64] */;
  (%151, %152)
}

def @func_1297() -> Tensor[(4, 8, 11), float64] {
  %153 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %154 = %153.0;
  %155 = cast(%154, dtype="float32") /* ty=Tensor[(4, 8, 11), float32] */;
  %156 = tan(%155) /* ty=Tensor[(4, 8, 11), float32] */;
  %157 = cast(%156, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  erf(%157) /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_7223() -> (Tensor[(4, 8, 11), float64],) {
  %158 = @func_5615() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %159 = %158.0;
  (%159,)
}

def @func_3584() -> (Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) {
  %160 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %161 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
  %162 = reshape(%161, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
  %163 = @func_2592(%162) /* ty=(Tensor[(?, 3, 6), int8],) */;
  %164 = %160.0;
  %165 = %163.0;
  (%164, %165, meta[relay.Constant][8] /* ty=Tensor[(6, 3), float32] */)
}

def @func_7197() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %166 = @func_5263() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %167 = @func_1896() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %168 = @func_3326() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %169 = %166.0;
  %170 = %167.0;
  %171 = %168.0;
  (%169, %170, %171)
}

def @func_2906(%var_2897: Tensor[(84), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), bool], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64]) {
  %172 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %173 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %174 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %175 = cast(%var_2897, dtype="float32") /* ty=Tensor[(84), float32] */;
  %176 = reshape(%175, newshape=[7, 4, 3]) /* ty=Tensor[(7, 4, 3), float32] */;
  %177 = %172.0;
  %178 = %173.2;
  %179 = %174.0;
  %180 = @func_2327(%176) /* ty=Tensor[(7, 4, 3), float32] */;
  %181 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
  (%177, %178, %179, %180, %var_2897, %181)
}

def @func_2420(%var_2415: Tensor[(96), int32]) -> (Tensor[(432), float32], Tensor[(6, 2, 8), bool], Tensor[(96), int32]) {
  %182 = @func_1979() /* ty=(Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) */;
  %183 = cast(%var_2415, dtype="int32") /* ty=Tensor[(96), int32] */;
  %184 = reshape(%183, newshape=[6, 2, 8]) /* ty=Tensor[(6, 2, 8), int32] */;
  %185 = %182.0;
  %186 = @func_997(%184) /* ty=Tensor[(6, 2, 8), bool] */;
  (%185, %186, %var_2415)
}

def @func_6644(%var_6608: Tensor[(3072), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64]) {
  %187 = @func_5820() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %188 = @func_2261() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %189 = cast(%var_6608, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %190 = reshape(%189, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %191 = @func_144(%190) /* ty=(Tensor[(12, 16, 16), float64],) */;
  %192 = %187.0;
  %193 = cast(%192, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %194 = reshape(%193, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %195 = @func_1376(%194) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */;
  %196 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %197 = @func_6008() /* ty=(Tensor[(11, 13, 6), float64],) */;
  %198 = %188.0;
  %199 = %191.0;
  %200 = %195.1;
  %201 = %196.0;
  %202 = %197.0;
  (%192, %198, %199, %var_6608, %200, %201, %202)
}

def @func_15106() -> Tensor[(4, 8, 11), float64] {
  @func_1297() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_4341(%var_4338: Tensor[(1, 13, 14), float64]) -> Tensor[(1, 13, 14), float64] {
  %203 = cast(%var_4338, dtype="float64") /* ty=Tensor[(1, 13, 14), float64] */;
  sqrt(%203) /* ty=Tensor[(1, 13, 14), float64] */
}

def @func_15469(%var_15442: Tensor[(8, 30), uint16]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(350), float32], Tensor[(8, 30), uint16], Tensor[(4, 8, 11), float64]) {
  %204 = @func_10494() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %205 = @func_7766() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %206 = cast(%var_15442, dtype="uint16") /* ty=Tensor[(8, 30), uint16] */;
  %207 = reshape(%206, newshape=[8, 6, 5]) /* ty=Tensor[(8, 6, 5), uint16] */;
  %208 = @func_2211(%207) /* ty=(Tensor[(8, 6, 5), float32], Tensor[(350), float32]) */;
  %209 = %204.1;
  %210 = %205.0;
  %211 = %208.1;
  %212 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
  (%209, %210, %211, %var_15442, %212)
}

def @func_4195() -> (Tensor[(?, 3, 6), int8], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %213 = @func_3584() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) */;
  %214 = @func_1647() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) */;
  %215 = @func_3584() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) */;
  %216 = %213.1;
  %217 = %214.0;
  %218 = %215.0;
  (%216, %217, %218)
}

def @func_14138(%var_14131: uint32, %var_14132: Tensor[(9, 5, 6), uint32]) -> Tensor[(9, 5, 6), uint32] {
  %219 = cast(%var_14131, dtype="uint32") /* ty=uint32 */;
  %220 = cast(%var_14132, dtype="uint32") /* ty=Tensor[(9, 5, 6), uint32] */;
  bitwise_xor(%219, %220) /* ty=Tensor[(9, 5, 6), uint32] */
}

def @func_1896() -> (Tensor[(4, 8, 11), float64],) {
  %221 = @func_1619() /* ty=(Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) */;
  %222 = %221.6;
  (%222,)
}

def @func_7551() -> (Tensor[(4, 8, 11), float64],) {
  %223 = @func_5105() /* ty=(Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %224 = %223.2;
  (%224,)
}

def @func_1211() -> (Tensor[(4, 8, 11), float64],) {
  %225 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %226 = rsqrt(%225) /* ty=Tensor[(4, 8, 11), float64] */;
  (%226,)
}

def @func_6891(%var_6867: Tensor[(18), float32], %var_6872: Tensor[(96), int32]) -> (Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(18), float32], Tensor[(96), int32], Tensor[(96), int32], Tensor[(4, 8, 11), float64]) {
  %227 = cast(%var_6867, dtype="float32") /* ty=Tensor[(18), float32] */;
  %228 = reshape(%227, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %229 = @func_4656(%228) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), bool]) */;
  %230 = cast(%var_6872, dtype="int32") /* ty=Tensor[(96), int32] */;
  %231 = reshape(%230, newshape=[96]) /* ty=Tensor[(96), int32] */;
  %232 = @func_2420(%231) /* ty=(Tensor[(432), float32], Tensor[(6, 2, 8), bool], Tensor[(96), int32]) */;
  %233 = @func_6184() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %234 = @func_5203() /* ty=Tensor[(4, 8, 11), bool] */;
  %235 = %229.1;
  %236 = %232.2;
  %237 = %233.0;
  (%234, %235, %var_6867, %236, %var_6872, %237)
}

def @func_12564(%var_12535: Tensor[(9, 13, 1), float64]) -> (Tensor[(9, 13, 1), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) {
  %238 = cast(%var_12535, dtype="float64") /* ty=Tensor[(9, 13, 1), float64] */;
  %239 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %240 = @func_2349() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(6, 2, 8), bool]) */;
  %241 = cos(%238) /* ty=Tensor[(9, 13, 1), float64] */;
  %242 = %239.0;
  %243 = %240.1;
  (%241, %242, %243)
}

def @func_11759(%var_11753: Tensor[(378), float32]) -> (Tensor[(432), float32], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) {
  %244 = @func_10520() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %245 = cast(%var_11753, dtype="float32") /* ty=Tensor[(378), float32] */;
  %246 = reshape(%245, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), float32] */;
  %247 = @func_9454(%246) /* ty=(Tensor[(6, 9, 7), float32],) */;
  %248 = %244.1;
  %249 = %247.0;
  %250 = @func_5475() /* ty=Tensor[(4, 8, 11), float64] */;
  (%248, %249, %var_11753, %250)
}

def @func_8147(%var_8103: Tensor[(4, 15, 2), int64], %var_8117: Tensor[(13, 14), float64]) -> (Tensor[(4, 15, 2), int64], Tensor[(4, 15, 2), bool], Tensor[(1, 13, 14), float64], Tensor[(13, 14), float64], Tensor[(4, 15, 2), float32], Tensor[(4, 8, 11), bool]) {
  %251 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 15, 2), int64] */, dtype="int64") /* ty=Tensor[(4, 15, 2), int64] */;
  %252 = shape_of(%var_8103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%var_8103, dtype="int64") /* ty=Tensor[(4, 15, 2), int64] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %255 = cast(%var_8103, dtype="bool") /* ty=Tensor[(4, 15, 2), bool] */;
  %256 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(4, 15, 2), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 15, 2), int64] */, dtype="bool") /* ty=Tensor[(4, 15, 2), bool] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %259 = cast(%var_8117, dtype="float64") /* ty=Tensor[(13, 14), float64] */;
  %260 = reshape(%259, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
  %261 = cast(%var_8103, dtype="float32") /* ty=Tensor[(4, 15, 2), float32] */;
  %262 = bitwise_and(%253, %254) /* ty=Tensor[(4, 15, 2), int64] */;
  %263 = not_equal(%257, %258) /* ty=Tensor[(4, 15, 2), bool] */;
  %264 = @func_4341(%260) /* ty=Tensor[(1, 13, 14), float64] */;
  %265 = sinh(%261) /* ty=Tensor[(4, 15, 2), float32] */;
  %266 = @func_5919() /* ty=Tensor[(4, 8, 11), bool] */;
  (%262, %263, %264, %var_8117, %265, %266)
}

def @func_6184() -> (Tensor[(4, 8, 11), float64],) {
  %267 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %268 = %267.0;
  (%268,)
}

def @func_9446(%var_9438: Tensor[(13, 9, 11), float32]) -> (Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), float32]) {
  %269 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 9, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %270 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 9, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %271 = cast(%var_9438, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %272 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(13, 9, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 9, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %275 = exp(%269) /* ty=Tensor[(13, 9, 11), float32] */;
  %276 = log(%270) /* ty=Tensor[(13, 9, 11), float32] */;
  %277 = floor_mod(%273, %274) /* ty=Tensor[(13, 9, 11), float32] */;
  (%275, %276, %277)
}

def @func_10890(%var_10877: Tensor[(312), float32]) -> (Tensor[(11, 13, 6), float64], Tensor[(312), float32], Tensor[(1, 312), float32]) {
  %278 = @func_9485() /* ty=(Tensor[(11, 13, 6), float64],) */;
  %279 = cast(%var_10877, dtype="float32") /* ty=Tensor[(312), float32] */;
  %280 = reshape(%279, newshape=[1, 312]) /* ty=Tensor[(1, 312), float32] */;
  %281 = @func_9708(%280) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(13, 12, 2), float32], Tensor[(1, 312), float32]) */;
  %282 = %281.2;
  %283 = cast(%282, dtype="float32") /* ty=Tensor[(1, 312), float32] */;
  %284 = %278.0;
  %285 = sin(%283) /* ty=Tensor[(1, 312), float32] */;
  (%284, %var_10877, %285)
}

def @func_11153(%var_11149: Tensor[(312), float32]) -> (Tensor[(12, 16, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) {
  %286 = @func_1647() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) */;
  %287 = cast(%var_11149, dtype="float32") /* ty=Tensor[(312), float32] */;
  %288 = reshape(%287, newshape=[13, 12, 2]) /* ty=Tensor[(13, 12, 2), float32] */;
  %289 = @func_2080(%288) /* ty=(Tensor[(13, 12, 2), float32],) */;
  %290 = %286.1;
  %291 = %289.0;
  (%290, %291, %var_11149)
}

def @func_5299(%var_5290: int8) -> Tensor[(3, 12, 9), bool] {
  %292 = cast(%var_5290, dtype="int8") /* ty=int8 */;
  %293 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 12, 9), int8] */, dtype="int8") /* ty=Tensor[(3, 12, 9), int8] */;
  %294 = right_shift(%292, %293) /* ty=Tensor[(3, 12, 9), int8] */;
  %295 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 12, 9), int8] */, dtype="bool") /* ty=Tensor[(3, 12, 9), bool] */;
  %296 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%294, dtype="bool") /* ty=Tensor[(3, 12, 9), bool] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%297, %298) /* ty=Tensor[(3, 12, 9), bool] */
}

def @func_1647() -> (Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) {
  %299 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %300 = cast(meta[relay.Constant][13] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %301 = reshape(%300, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %302 = @func_144(%301) /* ty=(Tensor[(12, 16, 16), float64],) */;
  %303 = %299.0;
  %304 = %302.0;
  (%303, %304, meta[relay.Constant][13] /* ty=Tensor[(3072), float64] */)
}

def @func_13288(%var_13281: Tensor[(4, 10, 4), float32]) -> (Tensor[(4, 10, 4), float32],) {
  %305 = cast(%var_13281, dtype="float32") /* ty=Tensor[(4, 10, 4), float32] */;
  %306 = log10(%305) /* ty=Tensor[(4, 10, 4), float32] */;
  (%306,)
}

def @func_5668(%var_5633: Tensor[(432), float32]) -> (Tensor[(4, 8, 11), bool], Tensor[(7, 18), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) {
  %307 = @func_3808() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32]) */;
  %308 = cast(%var_5633, dtype="float32") /* ty=Tensor[(432), float32] */;
  %309 = reshape(%308, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %310 = @func_1456(%309) /* ty=(Tensor[(3, 12, 12), float32],) */;
  %311 = @func_5565() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %312 = @func_3105() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %313 = @func_2557() /* ty=Tensor[(4, 8, 11), bool] */;
  %314 = %307.4;
  %315 = %310.0;
  %316 = %311.0;
  %317 = %312.0;
  %318 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
  (%313, %314, %315, %var_5633, %316, %317, %318)
}

def @func_17539() -> Tensor[(4, 8, 11), float64] {
  @func_16418() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_144(%var_138: Tensor[(12, 16, 16), float64]) -> (Tensor[(12, 16, 16), float64],) {
  %319 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 16, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 16, 16), float64] */;
  %320 = shape_of(%var_138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%var_138, dtype="float64") /* ty=Tensor[(12, 16, 16), float64] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %323 = floor_mod(%321, %322) /* ty=Tensor[(12, 16, 16), float64] */;
  (%323,)
}

def @func_7766() -> (Tensor[(4, 8, 11), float64],) {
  %324 = @func_4739() /* ty=Tensor[(4, 8, 11), float64] */;
  (%324,)
}

def @func_11019() -> (Tensor[(4, 8, 11), bool],) {
  %325 = @func_6329() /* ty=Tensor[(4, 8, 11), bool] */;
  (%325,)
}

def @func_10713(%var_10702: Tensor[(8, 7, 11), float32]) -> (Tensor[(8, 7, 11), float32], Tensor[(4, 8, 11), float64]) {
  %326 = cast(%var_10702, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
  %327 = @func_1647() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) */;
  %328 = log(%326) /* ty=Tensor[(8, 7, 11), float32] */;
  %329 = %327.0;
  (%328, %329)
}

def @func_9883() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %330 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %331 = @func_7223() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %332 = %330.0;
  %333 = %331.0;
  (%332, %333)
}

def @func_11070(%var_11051: Tensor[(3, 28), float32], %var_11066: Tensor[(26, 7), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 4, 3), float32], Tensor[(3, 28), float32], Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(26, 7), float64]) {
  %334 = @func_3916() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(1, 126), float32]) */;
  %335 = cast(%var_11051, dtype="float32") /* ty=Tensor[(3, 28), float32] */;
  %336 = reshape(%335, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %337 = @func_2906(%336) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), bool], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64]) */;
  %338 = @func_10164() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64]) */;
  %339 = cast(%var_11066, dtype="float64") /* ty=Tensor[(26, 7), float64] */;
  %340 = reshape(%339, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
  %341 = %334.0;
  %342 = %337.3;
  %343 = %338.0;
  %344 = @func_4341(%340) /* ty=Tensor[(1, 13, 14), float64] */;
  (%341, %342, %var_11051, %343, %344, %var_11066)
}

def @func_5919() -> Tensor[(4, 8, 11), bool] {
  @func_5203() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_16385() -> (Tensor[(231), float64], Tensor[(4, 8, 11), float64]) {
  %345 = @func_12302() /* ty=(Tensor[(231), int32],) */;
  %346 = %345.0;
  %347 = cast(%346, dtype="float64") /* ty=Tensor[(231), float64] */;
  %348 = log(%347) /* ty=Tensor[(231), float64] */;
  %349 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
  (%348, %349)
}

def @func_17839() -> (Tensor[(4, 8, 11), float64],) {
  %350 = @func_8327() /* ty=Tensor[(4, 8, 11), float64] */;
  (%350,)
}

def @func_15852() -> Tensor[(4, 8, 11), float64] {
  %351 = @func_12233() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %351.0
}

def @func_11034() -> Tensor[(4, 8, 11), float64] {
  @func_8048() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_11688(%var_11641: Tensor[(840), int64], %var_11652: uint32) -> (Tensor[(4, 8, 11), float64], Tensor[(840), int64], Tensor[(840), int64], Tensor[(4, 8, 11), float64], uint32, Tensor[(4, 8, 11), bool]) {
  %352 = @func_8801() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %353 = cast(%var_11641, dtype="int64") /* ty=Tensor[(840), int64] */;
  %354 = reshape(%353, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %355 = @func_10258(%354) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) */;
  %356 = cast(%var_11652, dtype="uint32") /* ty=uint32 */;
  %357 = reshape(%356, newshape=[]) /* ty=uint32 */;
  %358 = @func_5743(%357) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], uint32, Tensor[(16, 15, 11), float64]) */;
  %359 = %352.0;
  %360 = %355.3;
  %361 = %358.2;
  %362 = @func_2557() /* ty=Tensor[(4, 8, 11), bool] */;
  (%359, %360, %var_11641, %361, %var_11652, %362)
}

def @func_10494() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %363 = @func_6084() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %364 = @func_9932() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(182), float64]) */;
  %365 = %363.0;
  %366 = %364.0;
  (%365, %366)
}

def @func_17217() -> (Tensor[(4, 8, 11), float64], Tensor[(378), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) {
  %367 = @func_16958() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %368 = cast(meta[relay.Constant][15] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %369 = reshape(%368, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %370 = @func_11759(%369) /* ty=(Tensor[(432), float32], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) */;
  %371 = @func_14619() /* ty=(Tensor[(96), int32], Tensor[(4, 8, 11), float64]) */;
  %372 = %367.0;
  %373 = %370.2;
  %374 = %371.1;
  (%372, %373, meta[relay.Constant][15] /* ty=Tensor[(378), float32] */, %374)
}

def @func_9956() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %375 = @func_7586() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %376 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
  %377 = %375.0;
  (%376, %377)
}

def @func_4080(%var_4064: Tensor[(126), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32], Tensor[(4, 8, 11), float64], Tensor[(84), float32]) {
  %378 = cast(%var_4064, dtype="float32") /* ty=Tensor[(126), float32] */;
  %379 = reshape(%378, newshape=[7, 18]) /* ty=Tensor[(7, 18), float32] */;
  %380 = @func_3186(%379) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) */;
  %381 = cast(meta[relay.Constant][16] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %382 = reshape(%381, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %383 = @func_2906(%382) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), bool], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64]) */;
  %384 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
  %385 = %380.1;
  %386 = %383.5;
  (%384, %385, %var_4064, %386, meta[relay.Constant][16] /* ty=Tensor[(84), float32] */)
}

def @func_677(%var_672: Tensor[(16, 2, 12), uint16]) -> Tensor[(16, 2, 12), uint16] {
  %387 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 2, 12), uint16] */, dtype="uint16") /* ty=Tensor[(16, 2, 12), uint16] */;
  %388 = shape_of(%var_672, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%var_672, dtype="uint16") /* ty=Tensor[(16, 2, 12), uint16] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  left_shift(%389, %390) /* ty=Tensor[(16, 2, 12), uint16] */
}

def @func_2408() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %391 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %392 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %393 = %391.1;
  %394 = %392.0;
  (%393, %394)
}

def @func_14846() -> (Tensor[(4, 8, 11), float64],) {
  %395 = @func_8048() /* ty=Tensor[(4, 8, 11), float64] */;
  (%395,)
}

def @func_8458() -> (Tensor[(96), int32],) {
  %396 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %397 = %396.2;
  (%397,)
}

def @func_11250() -> (Tensor[(4, 8, 11), float64],) {
  %398 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %399 = %398.0;
  (%399,)
}

def @func_1456(%var_1427: Tensor[(3, 12, 12), float32]) -> (Tensor[(3, 12, 12), float32],) {
  %400 = cast(%var_1427, dtype="float32") /* ty=Tensor[(3, 12, 12), float32] */;
  %401 = log2(%400) /* ty=Tensor[(3, 12, 12), float32] */;
  (%401,)
}

def @func_15041(%var_14988: Tensor[(3072), float64], %var_15028: Tensor[(364, 2), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(6, 2, 8), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32], Tensor[(364, 2), float32], Tensor[(4, 8, 11), float64], Tensor[(3, 12, 12), float32], Tensor[(96), int32]) {
  %402 = @func_8801() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %403 = @func_10398() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) */;
  %404 = @func_10398() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) */;
  %405 = @func_7710() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) */;
  %406 = cast(%var_14988, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %407 = reshape(%406, newshape=[3072]) /* ty=Tensor[(3072), float64] */;
  %408 = @func_13101(%407) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), float64]) */;
  %409 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %410 = @func_10089() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */;
  %411 = cast(%var_15028, dtype="float32") /* ty=Tensor[(364, 2), float32] */;
  %412 = %408.1;
  %413 = cast(%412, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %414 = reshape(%411, newshape=[4, 14, 13]) /* ty=Tensor[(4, 14, 13), float32] */;
  %415 = reshape(%413, newshape=[16, 22]) /* ty=Tensor[(16, 22), float64] */;
  %416 = @func_7964(%414, %415) /* ty=(Tensor[(4, 14, 13), float32], Tensor[(432), float32], Tensor[(16, 22), float64], Tensor[(432), float32], Tensor[(4, 14, 13), float32]) */;
  %417 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %418 = %405.0;
  %419 = cast(%418, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %420 = %416.1;
  %421 = cast(%420, dtype="float32") /* ty=Tensor[(432), float32] */;
  %422 = reshape(%419, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %423 = reshape(%421, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %424 = @func_2665(%422, %423) /* ty=(Tensor[(4, 8, 11), int8], Tensor[(3, 12, 12), float32], Tensor[(432), float32]) */;
  %425 = @func_4169() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) */;
  %426 = %402.0;
  %427 = %403.0;
  %428 = %404.1;
  %429 = %409.1;
  %430 = %410.2;
  %431 = %417.0;
  %432 = %424.1;
  %433 = %425.2;
  (%426, %427, %428, %418, %412, %var_14988, %429, %430, %420, %var_15028, %431, %432, %433)
}

def @func_2211(%var_2190: Tensor[(8, 6, 5), uint16]) -> (Tensor[(8, 6, 5), float32], Tensor[(350), float32]) {
  %434 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 6, 5), uint16] */, dtype="uint16") /* ty=Tensor[(8, 6, 5), uint16] */;
  %435 = shape_of(%var_2190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%var_2190, dtype="uint16") /* ty=Tensor[(8, 6, 5), uint16] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %438 = right_shift(%436, %437) /* ty=Tensor[(8, 6, 5), uint16] */;
  %439 = cast(%var_2190, dtype="float32") /* ty=Tensor[(8, 6, 5), float32] */;
  %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%438, dtype="float32") /* ty=Tensor[(8, 6, 5), float32] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %443 = @func_1619() /* ty=(Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) */;
  %444 = floor_divide(%441, %442) /* ty=Tensor[(8, 6, 5), float32] */;
  %445 = %443.5;
  (%444, %445)
}

def @func_6428() -> (Tensor[(4, 8, 11), bool],) {
  %446 = @func_5919() /* ty=Tensor[(4, 8, 11), bool] */;
  (%446,)
}

def @func_9454(%var_9451: Tensor[(6, 9, 7), float32]) -> (Tensor[(6, 9, 7), float32],) {
  %447 = cast(%var_9451, dtype="float32") /* ty=Tensor[(6, 9, 7), float32] */;
  %448 = sigmoid(%447) /* ty=Tensor[(6, 9, 7), float32] */;
  (%448,)
}

def @func_13632() -> (Tensor[(4, 8, 11), float64],) {
  %449 = @func_10164() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64]) */;
  %450 = %449.0;
  (%450,)
}

def @func_17666() -> (Tensor[(1, 16, 9), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32]) {
  %451 = @func_9553() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %452 = cast(meta[relay.Constant][19] /* ty=Tensor[(96), int32] */, dtype="int32") /* ty=Tensor[(96), int32] */;
  %453 = reshape(%452, newshape=[6, 2, 8]) /* ty=Tensor[(6, 2, 8), int32] */;
  %454 = %451.1;
  %455 = @func_997(%453) /* ty=Tensor[(6, 2, 8), bool] */;
  (%454, %455, meta[relay.Constant][19] /* ty=Tensor[(96), int32] */)
}

def @func_1376(%var_1358: Tensor[(4, 8, 11), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) {
  %456 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %457 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %458 = %457.0;
  %459 = cast(%458, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %460 = sigmoid(%459) /* ty=Tensor[(4, 8, 11), float64] */;
  %461 = cast(%var_1358, dtype="bool") /* ty=Tensor[(4, 8, 11), bool] */;
  %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%460, dtype="bool") /* ty=Tensor[(4, 8, 11), bool] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %465 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %466 = %456.0;
  %467 = equal(%463, %464) /* ty=Tensor[(4, 8, 11), bool] */;
  %468 = %465.0;
  (%466, %467, %468)
}

def @func_3425() -> Tensor[(4, 8, 11), float64] {
  %469 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %469.0
}

def @func_10258(%var_10251: Tensor[(840), int64]) -> (Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) {
  %470 = @func_9956() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %471 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %472 = cast(%var_10251, dtype="int64") /* ty=Tensor[(840), int64] */;
  %473 = reshape(%471, newshape=[]) /* ty=int64 */;
  %474 = reshape(%472, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %475 = @func_6986(%473, %474) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) */;
  %476 = %470.0;
  %477 = %475.1;
  (%476, %477, 8 /* ty=int64 */, %var_10251)
}

def @func_7774() -> Tensor[(231), int16] {
  %478 = @func_4423() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) */;
  %478.3
}

def @func_17101(%var_17094: Tensor[(1, 728), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), float64], Tensor[(4, 8, 11), float64], Tensor[(432), float32], Tensor[(768, 4), float64], Tensor[(1, 728), float32]) {
  %479 = @func_8257() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %480 = @func_16189() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool]) */;
  %481 = %480.1;
  %482 = cast(%481, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %483 = exp(%482) /* ty=Tensor[(6, 2, 8), float64] */;
  %484 = cast(%483, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %485 = @func_6141() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %486 = cast(meta[relay.Constant][20] /* ty=Tensor[(768, 4), float64] */, dtype="float64") /* ty=Tensor[(768, 4), float64] */;
  %487 = cast(%var_17094, dtype="float32") /* ty=Tensor[(1, 728), float32] */;
  %488 = reshape(%486, newshape=[3072]) /* ty=Tensor[(3072), float64] */;
  %489 = reshape(%487, newshape=[364, 2]) /* ty=Tensor[(364, 2), float32] */;
  %490 = @func_15041(%488, %489) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(6, 2, 8), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32], Tensor[(364, 2), float32], Tensor[(4, 8, 11), float64], Tensor[(3, 12, 12), float32], Tensor[(96), int32]) */;
  %491 = %479.0;
  %492 = log10(%484) /* ty=Tensor[(6, 2, 8), float64] */;
  %493 = %485.0;
  %494 = %490.8;
  (%491, %492, %493, %494, meta[relay.Constant][20] /* ty=Tensor[(768, 4), float64] */, %var_17094)
}

def @func_6008() -> (Tensor[(11, 13, 6), float64],) {
  %495 = @func_4264() /* ty=(Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) */;
  %496 = %495.0;
  (%496,)
}

def @func_3283() -> (Tensor[(4, 8, 11), float64],) {
  %497 = @func_3100() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %498 = %497.0;
  (%498,)
}

def @func_5615() -> (Tensor[(4, 8, 11), float64],) {
  %499 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %500 = %499.0;
  (%500,)
}

def @func_8867() -> (Tensor[(4, 8, 11), float64],) {
  %501 = @func_5934() /* ty=Tensor[(4, 8, 11), float64] */;
  (%501,)
}

def @func_17463() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 10, 4), float32], Tensor[(16, 10), float32], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) {
  %502 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 10), float32] */, dtype="float32") /* ty=Tensor[(16, 10), float32] */;
  %503 = reshape(%502, newshape=[4, 10, 4]) /* ty=Tensor[(4, 10, 4), float32] */;
  %504 = @func_13288(%503) /* ty=(Tensor[(4, 10, 4), float32],) */;
  %505 = @func_11019() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %506 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %507 = @func_4016() /* ty=Tensor[(4, 8, 11), float64] */;
  %508 = %504.0;
  %509 = %505.0;
  %510 = %506.0;
  (%507, %508, meta[relay.Constant][21] /* ty=Tensor[(16, 10), float32] */, %509, %510)
}

def @func_17813() -> (Tensor[(4, 8, 11), float64],) {
  %511 = @func_4692() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %512 = %511.0;
  (%512,)
}

def @func_14034() -> Tensor[(4, 8, 11), float64] {
  %513 = @func_5615() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %513.0
}

def @func_2557() -> Tensor[(4, 8, 11), bool] {
  %514 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %514.0
}

def @func_9904() -> (Tensor[(4, 8, 11), float64],) {
  %515 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
  (%515,)
}

def @func_13586(%var_13530: Tensor[(126), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(2, 12, ?), float64], Tensor[(4, 8, 11), float64], Tensor[(126), float32]) {
  %516 = cast(meta[relay.Constant][22] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %517 = reshape(%516, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), float64] */;
  %518 = @func_9511(%517) /* ty=(Tensor[(2, 12, 1), float64], Tensor[(4, 8, 11), float64]) */;
  %519 = %518.0;
  %520 = cast(meta[relay.Constant][22] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%519, dtype="float64") /* ty=Tensor[(2, 12, 1), float64] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %524 = cast(%var_13530, dtype="float32") /* ty=Tensor[(126), float32] */;
  %525 = reshape(%524, newshape=[7, 18]) /* ty=Tensor[(7, 18), float32] */;
  %526 = @func_3186(%525) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) */;
  %527 = @func_12923() /* ty=Tensor[(4, 8, 11), float64] */;
  %528 = power(%522, %523) /* ty=Tensor[(2, 12, ?), float64] */;
  %529 = %526.0;
  (%527, %528, %529, %var_13530)
}

def @func_14619() -> (Tensor[(96), int32], Tensor[(4, 8, 11), float64]) {
  %530 = @func_10398() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) */;
  %531 = %530.1;
  %532 = @func_14228() /* ty=Tensor[(4, 8, 11), float64] */;
  (%531, %532)
}

def @func_12674(%var_12667: Tensor[(1, 1287), float32]) -> (Tensor[(96), int32], Tensor[(13, 9, 11), float32], Tensor[(1, 1287), float32]) {
  %533 = @func_10398() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) */;
  %534 = cast(%var_12667, dtype="float32") /* ty=Tensor[(1, 1287), float32] */;
  %535 = reshape(%534, newshape=[1287]) /* ty=Tensor[(1287), float32] */;
  %536 = @func_11447(%535) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(13, 9, 11), float32], Tensor[(1287), float32]) */;
  %537 = %533.1;
  %538 = %536.1;
  (%537, %538, %var_12667)
}

def @func_14228() -> Tensor[(4, 8, 11), float64] {
  %539 = @func_2843() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %539.0
}

def @func_12013() -> Tensor[(4, 8, 11), float64] {
  %540 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %540.0
}

def @func_15075(%var_15071: Tensor[(10, 2, 8), float64]) -> Tensor[(10, 2, 8), float64] {
  %541 = cast(%var_15071, dtype="float64") /* ty=Tensor[(10, 2, 8), float64] */;
  log10(%541) /* ty=Tensor[(10, 2, 8), float64] */
}

def @func_9627(%var_9618: Tensor[(231), int16]) -> (Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(7, 11, 3), int32], Tensor[(231), uint16]) {
  %542 = @func_4169() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) */;
  %543 = cast(meta[relay.Constant][23] /* ty=Tensor[(231), int16] */, dtype="int16") /* ty=Tensor[(231), int16] */;
  %544 = reshape(%543, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), int16] */;
  %545 = @func_571(%544) /* ty=(Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), int32]) */;
  %546 = cast(%var_9618, dtype="uint16") /* ty=Tensor[(231), uint16] */;
  %547 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(231), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %548 = cast(meta[relay.Constant][23] /* ty=Tensor[(231), int16] */, dtype="uint16") /* ty=Tensor[(231), uint16] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %550 = @func_2557() /* ty=Tensor[(4, 8, 11), bool] */;
  %551 = @func_3425() /* ty=Tensor[(4, 8, 11), float64] */;
  %552 = %542.2;
  %553 = %545.1;
  %554 = left_shift(%548, %549) /* ty=Tensor[(231), uint16] */;
  (%550, %551, %552, %553, %554)
}

def @func_5023() -> (Tensor[(4, 8, 11), float64],) {
  %555 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %556 = %555.0;
  (%556,)
}

def @func_8525() -> Tensor[(4, 8, 11), float64] {
  @func_1699() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_11278() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96, 1), int32]) {
  %557 = @func_7738() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) */;
  %558 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %559 = @func_7507() /* ty=(Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(3072), float64]) */;
  %560 = cast(meta[relay.Constant][24] /* ty=Tensor[(96, 1), int32] */, dtype="int32") /* ty=Tensor[(96, 1), int32] */;
  %561 = reshape(%560, newshape=[6, 2, 8]) /* ty=Tensor[(6, 2, 8), int32] */;
  %562 = %557.0;
  %563 = %558.0;
  %564 = %559.1;
  %565 = @func_997(%561) /* ty=Tensor[(6, 2, 8), bool] */;
  (%562, %563, %564, %565, meta[relay.Constant][24] /* ty=Tensor[(96, 1), int32] */)
}

def @func_4423() -> (Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) {
  %566 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 1, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %567 = @func_2761() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %568 = cast(meta[relay.Constant][26] /* ty=Tensor[(231), int16] */, dtype="int16") /* ty=Tensor[(231), int16] */;
  %569 = reshape(%568, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), int16] */;
  %570 = @func_571(%569) /* ty=(Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), int32]) */;
  %571 = acosh(%566) /* ty=Tensor[(9, 1, 11), float32] */;
  %572 = %567.0;
  %573 = %570.1;
  (%571, %572, %573, meta[relay.Constant][26] /* ty=Tensor[(231), int16] */)
}

def @func_15337(%var_15313: Tensor[(182), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(182), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), float64]) {
  %574 = cast(%var_15313, dtype="float64") /* ty=Tensor[(182), float64] */;
  %575 = reshape(%574, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
  %576 = @func_5963() /* ty=(Tensor[(?, 3, 6), int8],) */;
  %577 = %576.0;
  %578 = cast(%577, dtype="float64") /* ty=Tensor[(?, 3, 6), float64] */;
  %579 = @func_1949() /* ty=Tensor[(4, 8, 11), float64] */;
  %580 = @func_15106() /* ty=Tensor[(4, 8, 11), float64] */;
  %581 = @func_4341(%575) /* ty=Tensor[(1, 13, 14), float64] */;
  %582 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
  %583 = asin(%578) /* ty=Tensor[(?, 3, 6), float64] */;
  (%579, %580, %581, %var_15313, %582, %583)
}

def @func_4016() -> Tensor[(4, 8, 11), float64] {
  @func_2724() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_11918(%var_11902: Tensor[(1386), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(1386), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %584 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %585 = cast(%var_11902, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %586 = reshape(%585, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float64] */;
  %587 = @func_9774(%586) /* ty=(Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64]) */;
  %588 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %589 = @func_11250() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %590 = @func_10832() /* ty=Tensor[(4, 8, 11), float64] */;
  %591 = %584.0;
  %592 = %587.1;
  %593 = %588.1;
  %594 = %589.0;
  (%590, %591, %592, %var_11902, %593, %594)
}

def @func_1310() -> Tensor[(4, 8, 11), float64] {
  @func_1297() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_17180() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %595 = @func_13172() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %596 = @func_10089() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */;
  %597 = @func_4692() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %598 = %595.1;
  %599 = %596.2;
  %600 = %597.0;
  (%598, %599, %600)
}

def @func_17784() -> Tensor[(1, 16, 9), float64] {
  %601 = @func_17666() /* ty=(Tensor[(1, 16, 9), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32]) */;
  %601.0
}

def @func_11447(%var_11428: Tensor[(1287), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(13, 9, 11), float32], Tensor[(1287), float32]) {
  %602 = cast(%var_11428, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %603 = reshape(%602, newshape=[13, 9, 11]) /* ty=Tensor[(13, 9, 11), float32] */;
  %604 = @func_9446(%603) /* ty=(Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), float32]) */;
  %605 = @func_8327() /* ty=Tensor[(4, 8, 11), float64] */;
  %606 = %604.0;
  (%605, %606, %var_11428)
}

def @func_13478() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %607 = @func_10771() /* ty=Tensor[(4, 8, 11), float64] */;
  %608 = @func_3736() /* ty=Tensor[(4, 8, 11), float64] */;
  (%607, %608)
}

def @func_8655() -> Tensor[(4, 8, 11), float64] {
  @func_4016() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_8327() -> Tensor[(4, 8, 11), float64] {
  %609 = @func_2261() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %609.0
}

def @func_10865() -> (Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), bool]) {
  %610 = @func_8626() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %611 = %610.0;
  %612 = @func_8445() /* ty=Tensor[(4, 8, 11), bool] */;
  (%611, %612)
}

def @func_17342() -> Tensor[(4, 8, 11), bool] {
  %613 = @func_3105() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %613.0
}

def @func_9932() -> (Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(182), float64]) {
  %614 = cast(meta[relay.Constant][27] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %615 = reshape(%614, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
  %616 = @func_8525() /* ty=Tensor[(4, 8, 11), float64] */;
  %617 = @func_4341(%615) /* ty=Tensor[(1, 13, 14), float64] */;
  (%616, %617, meta[relay.Constant][27] /* ty=Tensor[(182), float64] */)
}

def @func_9852(%var_9841: Tensor[(20), float64]) -> (Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, ?, 5), int8], Tensor[(20), float64]) {
  %618 = @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %619 = @func_7539() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %620 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %621 = cast(%var_9841, dtype="float64") /* ty=Tensor[(20), float64] */;
  %622 = reshape(%621, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float64] */;
  %623 = @func_3408(%622) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, ?, 5), int8]) */;
  %624 = %618.3;
  %625 = %619.1;
  %626 = %620.1;
  %627 = %623.1;
  (%624, %625, %626, %627, %var_9841)
}

def @func_4264() -> (Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) {
  %628 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 13, 6), float64] */, dtype="float64") /* ty=Tensor[(11, 13, 6), float64] */;
  %629 = log2(%628) /* ty=Tensor[(11, 13, 6), float64] */;
  %630 = @func_1949() /* ty=Tensor[(4, 8, 11), float64] */;
  (%629, %630)
}

def @func_16249(%var_16221: Tensor[(840), int64], %var_16222: uint32) -> (Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(840), int64], uint32, Tensor[(4, 8, 11), float64]) {
  %631 = @func_4264() /* ty=(Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) */;
  %632 = cast(meta[relay.Constant][29] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %633 = reshape(%632, newshape=[3072]) /* ty=Tensor[(3072), float64] */;
  %634 = @func_13101(%633) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), float64]) */;
  %635 = cast(%var_16221, dtype="int64") /* ty=Tensor[(840), int64] */;
  %636 = cast(%var_16222, dtype="uint32") /* ty=uint32 */;
  %637 = reshape(%635, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %638 = reshape(%636, newshape=[]) /* ty=uint32 */;
  %639 = @func_11688(%637, %638) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(840), int64], Tensor[(840), int64], Tensor[(4, 8, 11), float64], uint32, Tensor[(4, 8, 11), bool]) */;
  %640 = @func_14483() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %641 = %631.0;
  %642 = %634.0;
  %643 = %639.0;
  %644 = %640.0;
  (%641, %642, meta[relay.Constant][29] /* ty=Tensor[(3072), float64] */, %643, %var_16221, %var_16222, %644)
}

def @func_16958() -> (Tensor[(4, 8, 11), float64],) {
  %645 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %646 = %645.0;
  (%646,)
}

def @func_16683() -> (Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64], Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 3, 4), float64], Tensor[(1, 84), uint32], Tensor[(4, 8, 11), float64]) {
  %647 = @func_6184() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %648 = @func_6008() /* ty=(Tensor[(11, 13, 6), float64],) */;
  %649 = @func_15765() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64]) */;
  %650 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 84), uint32] */, dtype="uint32") /* ty=Tensor[(1, 84), uint32] */;
  %651 = reshape(%650, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), uint32] */;
  %652 = @func_7766() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %653 = %647.0;
  %654 = %648.0;
  %655 = %649.1;
  %656 = @func_6122() /* ty=Tensor[(4, 8, 11), float64] */;
  %657 = @func_2463(%651) /* ty=Tensor[(7, 3, 4), float64] */;
  %658 = %652.0;
  (%653, %654, %655, %656, %657, meta[relay.Constant][30] /* ty=Tensor[(1, 84), uint32] */, %658)
}

def @func_12625() -> Tensor[(96), int32] {
  %659 = @func_8458() /* ty=(Tensor[(96), int32],) */;
  %659.0
}

def @func_9553() -> (Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %660 = @func_8566() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %661 = cast(meta[relay.Constant][31] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %662 = reshape(%661, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
  %663 = @func_6446(%662) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64]) */;
  %664 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %665 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %666 = %660.0;
  %667 = %663.1;
  %668 = %664.0;
  %669 = %665.0;
  (%666, %667, meta[relay.Constant][31] /* ty=Tensor[(144), float64] */, %668, %669)
}

def @func_8566() -> (Tensor[(4, 8, 11), float64],) {
  %670 = @func_8501() /* ty=Tensor[(4, 8, 11), float64] */;
  (%670,)
}

def @func_8172() -> (Tensor[(4, 8, 11), float64],) {
  %671 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %672 = %671.0;
  (%672,)
}

def @func_16697() -> (Tensor[(96), int32], Tensor[(9, 5, 6), uint32], uint32, Tensor[(270), uint32]) {
  %673 = @func_16135() /* ty=(Tensor[(96), int32], uint32) */;
  %674 = cast(meta[relay.Constant][32] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %675 = cast(meta[relay.Constant][33] /* ty=Tensor[(270), uint32] */, dtype="uint32") /* ty=Tensor[(270), uint32] */;
  %676 = reshape(%674, newshape=[]) /* ty=uint32 */;
  %677 = reshape(%675, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), uint32] */;
  %678 = %673.0;
  %679 = @func_14138(%676, %677) /* ty=Tensor[(9, 5, 6), uint32] */;
  (%678, %679, meta[relay.Constant][32] /* ty=uint32 */, meta[relay.Constant][33] /* ty=Tensor[(270), uint32] */)
}

def @func_7507() -> (Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(3072), float64]) {
  %680 = @func_6794() /* ty=(Tensor[(96), int32], Tensor[(5, 14, 5), float32], Tensor[(4, 8, 11), float64]) */;
  %681 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %682 = @func_1647() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) */;
  %683 = %680.0;
  %684 = %681.0;
  %685 = %682.2;
  (%683, %684, %685)
}

def @func_13334() -> (Tensor[(4, 8, 11), bool], Tensor[(1, 13, 14), float64], Tensor[(182), float64], Tensor[(14, 4, 15), int64], Tensor[(126), float32], Tensor[(4, 8, 11), float64]) {
  %686 = cast(meta[relay.Constant][34] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %687 = reshape(%686, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
  %688 = cast(meta[relay.Constant][35] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %689 = reshape(%688, newshape=[3, 42]) /* ty=Tensor[(3, 42), float32] */;
  %690 = @func_13035(%689) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], Tensor[(840, 1), int64], Tensor[(4, 8, 11), float64], Tensor[(3, 42), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %691 = @func_10164() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64]) */;
  %692 = @func_11117() /* ty=Tensor[(4, 8, 11), bool] */;
  %693 = @func_4341(%687) /* ty=Tensor[(1, 13, 14), float64] */;
  %694 = %690.1;
  %695 = %691.0;
  (%692, %693, meta[relay.Constant][34] /* ty=Tensor[(182), float64] */, %694, meta[relay.Constant][35] /* ty=Tensor[(126), float32] */, %695)
}

def @func_10164() -> (Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64]) {
  %696 = @func_3916() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(1, 126), float32]) */;
  %697 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
  %698 = %696.1;
  (%697, %698)
}

def @func_14407() -> Tensor[(7, 8, 7), float64] {
  %699 = @func_12453() /* ty=(Tensor[(7, 8, 7), float64],) */;
  %699.0
}

def @func_7247() -> Tensor[(4, 8, 11), float64] {
  %700 = @func_6184() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %700.0
}

def @func_9303(%var_9284: Tensor[(2, 72), float64]) -> (Tensor[(6, 2, 8), bool], Tensor[(1, 16, 9), float64], Tensor[(2, 72), float64]) {
  %701 = @func_5169() /* ty=(Tensor[(6, 2, 8), bool],) */;
  %702 = cast(%var_9284, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %703 = reshape(%702, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
  %704 = @func_6446(%703) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64]) */;
  %705 = %701.0;
  %706 = %704.1;
  (%705, %706, %var_9284)
}

def @func_8591() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %707 = @func_8172() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %708 = @func_4016() /* ty=Tensor[(4, 8, 11), float64] */;
  %709 = %707.0;
  (%708, %709)
}

def @func_14483() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %710 = @func_5615() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %711 = @func_5263() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %712 = %710.0;
  %713 = %711.1;
  (%712, %713)
}

def @func_3808() -> (Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32]) {
  %714 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %715 = @func_1647() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) */;
  %716 = %715.2;
  %717 = cast(%716, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %718 = @func_3584() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) */;
  %719 = %718.0;
  %720 = cast(%719, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %721 = cast(meta[relay.Constant][36] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %722 = reshape(%721, newshape=[7, 18]) /* ty=Tensor[(7, 18), float32] */;
  %723 = @func_3186(%722) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) */;
  %724 = %714.0;
  %725 = atanh(%717) /* ty=Tensor[(3072), float64] */;
  %726 = @func_2557() /* ty=Tensor[(4, 8, 11), bool] */;
  %727 = atan(%720) /* ty=Tensor[(4, 8, 11), float64] */;
  %728 = %723.1;
  (%724, %725, %726, %727, %728, meta[relay.Constant][36] /* ty=Tensor[(126), float32] */)
}

def @func_4852() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %729 = @func_3425() /* ty=Tensor[(4, 8, 11), float64] */;
  %730 = @func_3736() /* ty=Tensor[(4, 8, 11), float64] */;
  (%729, %730)
}

def @func_13101(%var_13097: Tensor[(3072), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), float64]) {
  %731 = @func_8591() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %732 = @func_11278() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96, 1), int32]) */;
  %733 = cast(meta[relay.Constant][37] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %734 = reshape(%733, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
  %735 = @func_2592(%734) /* ty=(Tensor[(?, 3, 6), int8],) */;
  %736 = %735.0;
  %737 = cast(meta[relay.Constant][37] /* ty=Tensor[(18), float32] */, dtype="int8") /* ty=Tensor[(18), int8] */;
  %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%736, dtype="int8") /* ty=Tensor[(?, 3, 6), int8] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %741 = cast(%var_13097, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %742 = reshape(%741, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %743 = @func_144(%742) /* ty=(Tensor[(12, 16, 16), float64],) */;
  %744 = @func_8016() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %745 = %731.1;
  %746 = %732.2;
  %747 = add(%739, %740) /* ty=Tensor[(?, 3, 6), int8] */;
  %748 = %743.0;
  %749 = %744.1;
  (%745, %746, %747, %748, %var_13097, %749)
}

def @func_11117() -> Tensor[(4, 8, 11), bool] {
  %750 = @func_10865() /* ty=(Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), bool]) */;
  %750.0
}

def @func_12961() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %751 = @func_5820() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %752 = @func_10494() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %753 = %751.0;
  %754 = %752.0;
  (%753, %754)
}

def @func_8501() -> Tensor[(4, 8, 11), float64] {
  %755 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %755.2
}

def @func_6986(%var_6963: int64, %var_6964: Tensor[(840), int64]) -> (Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) {
  %756 = @func_4852() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %757 = cast(%var_6963, dtype="int64") /* ty=int64 */;
  %758 = cast(%var_6964, dtype="int64") /* ty=Tensor[(840), int64] */;
  %759 = reshape(%757, newshape=[]) /* ty=int64 */;
  %760 = reshape(%758, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), int64] */;
  %761 = %756.1;
  %762 = @func_2927(%759, %760) /* ty=Tensor[(14, 4, 15), int64] */;
  (%761, %762, %var_6963, %var_6964)
}

def @func_9274() -> (Tensor[(4, 8, 11), float64],) {
  %763 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
  (%763,)
}

def @func_4692() -> (Tensor[(4, 8, 11), float64],) {
  %764 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
  (%764,)
}

def @func_8801() -> (Tensor[(4, 8, 11), float64],) {
  %765 = @func_2761() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %766 = %765.0;
  (%766,)
}

def @func_14750() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %767 = @func_12827() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %768 = @func_3326() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %769 = %767.0;
  %770 = %768.3;
  (%769, %770)
}

def @func_14546() -> Tensor[(4, 8, 11), float64] {
  @func_12013() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_13122() -> (Tensor[(4, 8, 11), float64],) {
  %771 = @func_12827() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %772 = %771.0;
  (%772,)
}

def @func_8899() -> (Tensor[(4, 8, 11), float64],) {
  %773 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %774 = %773.1;
  (%774,)
}

def @func_8048() -> Tensor[(4, 8, 11), float64] {
  %775 = @func_3326() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %775.2
}

def @func_11613() -> (Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(231), int32], Tensor[(4, 8, 11), bool]) {
  %776 = @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %777 = cast(meta[relay.Constant][38] /* ty=Tensor[(231), int32] */, dtype="int32") /* ty=Tensor[(231), int32] */;
  %778 = reshape(%777, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), int32] */;
  %779 = @func_7441(%778) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), float64]) */;
  %780 = %776.3;
  %781 = %779.0;
  %782 = @func_11117() /* ty=Tensor[(4, 8, 11), bool] */;
  (%780, %781, meta[relay.Constant][38] /* ty=Tensor[(231), int32] */, %782)
}

def @func_2592(%var_2582: Tensor[(1, 3, 6), float32]) -> (Tensor[(?, 3, 6), int8],) {
  %783 = cast(%var_2582, dtype="float32") /* ty=Tensor[(1, 3, 6), float32] */;
  %784 = sqrt(%783) /* ty=Tensor[(1, 3, 6), float32] */;
  %785 = cast(%var_2582, dtype="int8") /* ty=Tensor[(1, 3, 6), int8] */;
  %786 = shape_of(%784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%784, dtype="int8") /* ty=Tensor[(1, 3, 6), int8] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %789 = right_shift(%787, %788) /* ty=Tensor[(?, 3, 6), int8] */;
  (%789,)
}

def @func_2463(%var_2439: Tensor[(7, 3, 4), uint32]) -> Tensor[(7, 3, 4), float64] {
  %790 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 3, 4), uint32] */, dtype="uint32") /* ty=Tensor[(7, 3, 4), uint32] */;
  %791 = shape_of(%var_2439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%var_2439, dtype="uint32") /* ty=Tensor[(7, 3, 4), uint32] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %794 = add(%792, %793) /* ty=Tensor[(7, 3, 4), uint32] */;
  %795 = cast(%794, dtype="float64") /* ty=Tensor[(7, 3, 4), float64] */;
  tan(%795) /* ty=Tensor[(7, 3, 4), float64] */
}

def @func_2761() -> (Tensor[(4, 8, 11), float64],) {
  %796 = @func_1949() /* ty=Tensor[(4, 8, 11), float64] */;
  (%796,)
}

def @func_4894(%var_4874: Tensor[(4, 8, 11), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %797 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %798 = %797.0;
  %799 = cast(%var_4874, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%798, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %803 = cast(%var_4874, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %804 = divide(%801, %802) /* ty=Tensor[(4, 8, 11), float64] */;
  %805 = asinh(%803) /* ty=Tensor[(4, 8, 11), float64] */;
  (%804, %805)
}

def @func_7964(%var_7926: Tensor[(4, 14, 13), float32], %var_7933: Tensor[(16, 22), float64]) -> (Tensor[(4, 14, 13), float32], Tensor[(432), float32], Tensor[(16, 22), float64], Tensor[(432), float32], Tensor[(4, 14, 13), float32]) {
  %806 = cast(%var_7926, dtype="float32") /* ty=Tensor[(4, 14, 13), float32] */;
  %807 = log10(%806) /* ty=Tensor[(4, 14, 13), float32] */;
  %808 = cast(%807, dtype="float32") /* ty=Tensor[(4, 14, 13), float32] */;
  %809 = cast(%var_7933, dtype="float64") /* ty=Tensor[(16, 22), float64] */;
  %810 = cast(meta[relay.Constant][40] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %811 = reshape(%809, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %812 = reshape(%810, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %813 = @func_2665(%811, %812) /* ty=(Tensor[(4, 8, 11), int8], Tensor[(3, 12, 12), float32], Tensor[(432), float32]) */;
  %814 = cast(%807, dtype="float32") /* ty=Tensor[(4, 14, 13), float32] */;
  %815 = rsqrt(%808) /* ty=Tensor[(4, 14, 13), float32] */;
  %816 = %813.2;
  %817 = atan(%814) /* ty=Tensor[(4, 14, 13), float32] */;
  (%815, %816, %var_7933, meta[relay.Constant][40] /* ty=Tensor[(432), float32] */, %817)
}

def @func_2080(%var_2071: Tensor[(13, 12, 2), float32]) -> (Tensor[(13, 12, 2), float32],) {
  %818 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 12, 2), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 2), float32] */;
  %819 = shape_of(%var_2071, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(%var_2071, dtype="float32") /* ty=Tensor[(13, 12, 2), float32] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %822 = floor_mod(%820, %821) /* ty=Tensor[(13, 12, 2), float32] */;
  (%822,)
}

def @func_2665(%var_2609: Tensor[(4, 8, 11), float64], %var_2615: Tensor[(432), float32]) -> (Tensor[(4, 8, 11), int8], Tensor[(3, 12, 12), float32], Tensor[(432), float32]) {
  %823 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
  %824 = cast(%var_2609, dtype="int8") /* ty=Tensor[(4, 8, 11), int8] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="int8") /* ty=Tensor[(4, 8, 11), int8] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %828 = cast(%var_2615, dtype="float32") /* ty=Tensor[(432), float32] */;
  %829 = reshape(%828, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %830 = @func_1456(%829) /* ty=(Tensor[(3, 12, 12), float32],) */;
  %831 = add(%826, %827) /* ty=Tensor[(4, 8, 11), int8] */;
  %832 = %830.0;
  (%831, %832, %var_2615)
}

def @func_1699() -> Tensor[(4, 8, 11), float64] {
  @func_1297() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_6828(%var_6806: Tensor[(432), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64]) {
  %833 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %834 = cast(%var_6806, dtype="float32") /* ty=Tensor[(432), float32] */;
  %835 = reshape(%834, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %836 = @func_1456(%835) /* ty=(Tensor[(3, 12, 12), float32],) */;
  %837 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %838 = %837.0;
  %839 = cast(%838, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %840 = %833.0;
  %841 = %836.0;
  %842 = asin(%839) /* ty=Tensor[(4, 8, 11), float64] */;
  (%840, %841, %var_6806, %842)
}

def @func_1865() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %843 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %844 = @func_1310() /* ty=Tensor[(4, 8, 11), float64] */;
  %845 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
  %846 = %843.0;
  (%844, %845, %846)
}

def @func_2301() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %847 = @func_1949() /* ty=Tensor[(4, 8, 11), float64] */;
  %848 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
  (%847, %848)
}

def @func_3100() -> (Tensor[(4, 8, 11), float64],) {
  %849 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
  (%849,)
}

def @func_17497() -> (Tensor[(4, 8, 11), float64],) {
  %850 = @func_8801() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %851 = %850.0;
  (%851,)
}

def @func_16433(%var_16423: Tensor[(3, 10, 14), float32]) -> Tensor[(3, 10, 14), float32] {
  %852 = cast(%var_16423, dtype="float32") /* ty=Tensor[(3, 10, 14), float32] */;
  erf(%852) /* ty=Tensor[(3, 10, 14), float32] */
}

def @func_4656(%var_4612: Tensor[(18), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), bool]) {
  %853 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %854 = cast(%var_4612, dtype="float32") /* ty=Tensor[(18), float32] */;
  %855 = reshape(%854, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
  %856 = @func_2592(%855) /* ty=(Tensor[(?, 3, 6), int8],) */;
  %857 = %856.0;
  %858 = cast(%var_4612, dtype="bool") /* ty=Tensor[(18), bool] */;
  %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%857, dtype="bool") /* ty=Tensor[(?, 3, 6), bool] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %862 = @func_3736() /* ty=Tensor[(4, 8, 11), float64] */;
  %863 = %853.1;
  %864 = not_equal(%860, %861) /* ty=Tensor[(?, 3, 6), bool] */;
  (%862, %863, %864)
}

def @func_1467() -> (Tensor[(4, 8, 11), float64],) {
  %865 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %866 = %865.0;
  (%866,)
}

def @func_16282(%var_16275: uint16, %var_16276: Tensor[(3, 14, 4), uint16]) -> Tensor[(3, 14, 4), bool] {
  %867 = cast(%var_16275, dtype="bool") /* ty=bool */;
  %868 = cast(%var_16276, dtype="bool") /* ty=Tensor[(3, 14, 4), bool] */;
  equal(%867, %868) /* ty=Tensor[(3, 14, 4), bool] */
}

def @func_5743(%var_5729: uint32) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], uint32, Tensor[(16, 15, 11), float64]) {
  %869 = @func_5263() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %870 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %871 = @func_3100() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %872 = cast(%var_5729, dtype="uint32") /* ty=uint32 */;
  %873 = reshape(%872, newshape=[]) /* ty=uint32 */;
  %874 = @func_5489(%873) /* ty=(Tensor[(16, 15, 11), uint32], Tensor[(4, 8, 11), bool]) */;
  %875 = %874.0;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(16, 15, 11), float64] */;
  %877 = %869.1;
  %878 = %870.0;
  %879 = %871.0;
  %880 = asinh(%876) /* ty=Tensor[(16, 15, 11), float64] */;
  (%877, %878, %879, %var_5729, %880)
}

def @func_3408(%var_3353: Tensor[(4, 1, 5), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, ?, 5), int8]) {
  %881 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %882 = cast(%var_3353, dtype="float64") /* ty=Tensor[(4, 1, 5), float64] */;
  %883 = sinh(%882) /* ty=Tensor[(4, 1, 5), float64] */;
  %884 = cast(%883, dtype="int8") /* ty=Tensor[(4, 1, 5), int8] */;
  %885 = shape_of(%var_3353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %886 = cast(%var_3353, dtype="int8") /* ty=Tensor[(4, 1, 5), int8] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %888 = %881.0;
  %889 = bitwise_and(%886, %887) /* ty=Tensor[(4, ?, 5), int8] */;
  (%888, %889)
}

def @func_13714(%var_13668: Tensor[(10, 14, 14), int8]) -> (Tensor[(10, 14, 14), int8], Tensor[(4, 8, 11), float64], Tensor[(6, 3), float32], Tensor[(96), int32]) {
  %890 = cast(%var_13668, dtype="int8") /* ty=Tensor[(10, 14, 14), int8] */;
  %891 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(10, 14, 14), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %892 = cast(meta[relay.Constant][42] /* ty=Tensor[(10, 14, 14), int8] */, dtype="int8") /* ty=Tensor[(10, 14, 14), int8] */;
  %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %894 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
  %895 = reshape(%894, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %896 = @func_4656(%895) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), bool]) */;
  %897 = multiply(%892, %893) /* ty=Tensor[(10, 14, 14), int8] */;
  %898 = %896.1;
  %899 = @func_12625() /* ty=Tensor[(96), int32] */;
  (%897, %898, meta[relay.Constant][43] /* ty=Tensor[(6, 3), float32] */, %899)
}

def @func_12923() -> Tensor[(4, 8, 11), float64] {
  %900 = @func_7539() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %900.0
}

def @func_12066() -> (Tensor[(4, 8, 11), float64],) {
  %901 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %902 = %901.0;
  (%902,)
}

def @func_5963() -> (Tensor[(?, 3, 6), int8],) {
  %903 = @func_4195() /* ty=(Tensor[(?, 3, 6), int8], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %904 = %903.0;
  (%904,)
}

def @func_8626() -> (Tensor[(4, 8, 11), bool],) {
  %905 = @func_6428() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %906 = %905.0;
  (%906,)
}

def @func_6510() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  %907 = @func_4692() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %908 = @func_4169() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) */;
  %909 = %908.0;
  %910 = cast(%909, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %911 = @func_1979() /* ty=(Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) */;
  %912 = %907.0;
  %913 = @func_5203() /* ty=Tensor[(4, 8, 11), bool] */;
  %914 = acosh(%910) /* ty=Tensor[(4, 8, 11), float64] */;
  %915 = %911.0;
  (%912, %913, %914, %915)
}

def @func_15955(%var_15929: Tensor[(1386), float64]) -> (Tensor[(4, 8, 11), bool], Tensor[(7, 18), float64], Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64], Tensor[(1386), float64]) {
  %916 = @func_3105() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %917 = @func_3916() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(1, 126), float32]) */;
  %918 = cast(%var_15929, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %919 = reshape(%918, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float64] */;
  %920 = @func_9774(%919) /* ty=(Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64]) */;
  %921 = cast(%var_15929, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %922 = %916.0;
  %923 = %917.1;
  %924 = %920.0;
  %925 = @func_12776() /* ty=Tensor[(4, 8, 11), float64] */;
  %926 = atan(%921) /* ty=Tensor[(1386), float64] */;
  (%922, %923, %924, %925, %926)
}

def @func_2427() -> (Tensor[(4, 8, 11), float64],) {
  %927 = @func_1467() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %928 = %927.0;
  (%928,)
}

def @func_8016() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %929 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %930 = %929.0;
  %931 = @func_3736() /* ty=Tensor[(4, 8, 11), float64] */;
  (%930, %931)
}

def @func_16616() -> Tensor[(4, 8, 11), float64] {
  %932 = @func_8899() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %932.0
}

def @func_7051() -> (Tensor[(4, 8, 11), bool],) {
  %933 = @func_3105() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %934 = %933.0;
  (%934,)
}

def @func_16859() -> (Tensor[(4, 8, 11), float64], Tensor[(231), int16]) {
  %935 = @func_7766() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %936 = %935.0;
  %937 = @func_7774() /* ty=Tensor[(231), int16] */;
  (%936, %937)
}

def @func_2327(%var_2323: Tensor[(7, 4, 3), float32]) -> Tensor[(7, 4, 3), float32] {
  %938 = cast(%var_2323, dtype="float32") /* ty=Tensor[(7, 4, 3), float32] */;
  acos(%938) /* ty=Tensor[(7, 4, 3), float32] */
}

def @func_15362() -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool]) {
  %939 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %940 = @func_2724() /* ty=Tensor[(4, 8, 11), float64] */;
  %941 = %939.1;
  (%940, %941)
}

def @func_17269(%var_17262: Tensor[(16, 7, 1), float32], %var_17263: Tensor[(16, 7, 6), float32]) -> (Tensor[(16, 7, 6), bool],) {
  %942 = cast(%var_17262, dtype="bool") /* ty=Tensor[(16, 7, 1), bool] */;
  %943 = cast(%var_17263, dtype="bool") /* ty=Tensor[(16, 7, 6), bool] */;
  %944 = less(%942, %943) /* ty=Tensor[(16, 7, 6), bool] */;
  (%944,)
}

def @func_13999() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(126, 3), float32]) {
  %945 = @func_8801() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %946 = cast(meta[relay.Constant][44] /* ty=Tensor[(126, 3), float32] */, dtype="float32") /* ty=Tensor[(126, 3), float32] */;
  %947 = reshape(%946, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %948 = @func_11759(%947) /* ty=(Tensor[(432), float32], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) */;
  %949 = %945.0;
  %950 = %948.3;
  (%949, %950, meta[relay.Constant][44] /* ty=Tensor[(126, 3), float32] */)
}

def @func_10398() -> (Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) {
  %951 = @func_7551() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %952 = @func_8458() /* ty=(Tensor[(96), int32],) */;
  %953 = cast(meta[relay.Constant][45] /* ty=Tensor[(231), int32] */, dtype="int32") /* ty=Tensor[(231), int32] */;
  %954 = reshape(%953, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), int32] */;
  %955 = @func_7441(%954) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), float64]) */;
  %956 = %955.1;
  %957 = cast(%956, dtype="int8") /* ty=Tensor[(7, 11, 3), int8] */;
  %958 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(231), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %959 = cast(meta[relay.Constant][45] /* ty=Tensor[(231), int32] */, dtype="int8") /* ty=Tensor[(231), int8] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?), int8] */;
  %961 = %951.0;
  %962 = %952.0;
  %963 = minimum(%959, %960) /* ty=Tensor[(231), int8] */;
  (%961, %962, %963)
}

def @func_3186(%var_3161: Tensor[(7, 18), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) {
  %964 = @func_2843() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %965 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 18), float32] */, dtype="float64") /* ty=Tensor[(1, 18), float64] */;
  %966 = cast(%var_3161, dtype="float64") /* ty=Tensor[(7, 18), float64] */;
  %967 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 18), float32] */, dtype="float32") /* ty=Tensor[(1, 18), float32] */;
  %968 = reshape(%967, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
  %969 = @func_2592(%968) /* ty=(Tensor[(?, 3, 6), int8],) */;
  %970 = %969.0;
  %971 = cast(%970, dtype="float32") /* ty=Tensor[(?, 3, 6), float32] */;
  %972 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(1, 18), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %973 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 18), float32] */, dtype="float32") /* ty=Tensor[(1, 18), float32] */;
  %974 = dyn.reshape(%971, %972, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %975 = subtract(%973, %974) /* ty=Tensor[(?, 18), float32] */;
  %976 = cast(%var_3161, dtype="bool") /* ty=Tensor[(7, 18), bool] */;
  %977 = cast(%975, dtype="bool") /* ty=Tensor[(?, 18), bool] */;
  %978 = %964.0;
  %979 = power(%965, %966) /* ty=Tensor[(7, 18), float64] */;
  %980 = not_equal(%976, %977) /* ty=Tensor[(7, 18), bool] */;
  (%978, %979, %980)
}

def @func_1979() -> (Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) {
  %981 = @func_1619() /* ty=(Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) */;
  %982 = cast(meta[relay.Constant][47] /* ty=Tensor[(1536, 2), float64] */, dtype="float64") /* ty=Tensor[(1536, 2), float64] */;
  %983 = reshape(%982, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %984 = @func_144(%983) /* ty=(Tensor[(12, 16, 16), float64],) */;
  %985 = %981.1;
  %986 = %984.0;
  (%985, %986, meta[relay.Constant][47] /* ty=Tensor[(1536, 2), float64] */)
}

def @func_1949() -> Tensor[(4, 8, 11), float64] {
  @func_1310() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_16000() -> Tensor[(4, 8, 11), float64] {
  %987 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %987.1
}

def @func_12453() -> (Tensor[(7, 8, 7), float64],) {
  %988 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 7), float64] */;
  %989 = log10(%988) /* ty=Tensor[(7, 8, 7), float64] */;
  (%989,)
}

def @func_2053() -> (Tensor[(4, 8, 11), bool],) {
  %990 = @func_1896() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %991 = %990.0;
  %992 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 8, 11), float64] */, dtype="bool") /* ty=Tensor[(4, 8, 11), bool] */;
  %993 = shape_of(%991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %994 = cast(%991, dtype="bool") /* ty=Tensor[(4, 8, 11), bool] */;
  %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %996 = less(%994, %995) /* ty=Tensor[(4, 8, 11), bool] */;
  (%996,)
}

def @func_10771() -> Tensor[(4, 8, 11), float64] {
  @func_8048() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_6794() -> (Tensor[(96), int32], Tensor[(5, 14, 5), float32], Tensor[(4, 8, 11), float64]) {
  %997 = @func_4169() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) */;
  %998 = @func_1619() /* ty=(Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) */;
  %999 = @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %1000 = %997.2;
  %1001 = %998.7;
  %1002 = %999.0;
  (%1000, %1001, %1002)
}

def @func_17525() -> (Tensor[(4, 8, 11), float64],) {
  %1003 = @func_8591() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1004 = %1003.1;
  (%1004,)
}

def @func_14368() -> (Tensor[(4, 8, 11), float64],) {
  %1005 = @func_7551() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1006 = %1005.0;
  (%1006,)
}

def @func_15658() -> (Tensor[(4, 8, 11), float64],) {
  %1007 = @func_10832() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1007,)
}

def @func_18051() -> (Tensor[(7, 11, 3), int32],) {
  %1008 = @func_14691() /* ty=(Tensor[(7, 11, 3), int32],) */;
  %1009 = %1008.0;
  (%1009,)
}

def @func_1836() -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) {
  %1010 = @func_1467() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1011 = cast(meta[relay.Constant][50] /* ty=Tensor[(96), int32] */, dtype="int32") /* ty=Tensor[(96), int32] */;
  %1012 = reshape(%1011, newshape=[6, 2, 8]) /* ty=Tensor[(6, 2, 8), int32] */;
  %1013 = @func_997(%1012) /* ty=Tensor[(6, 2, 8), bool] */;
  %1014 = cast(%1013, dtype="int32") /* ty=Tensor[(6, 2, 8), int32] */;
  %1015 = reshape(%1014, newshape=[6, 2, 8]) /* ty=Tensor[(6, 2, 8), int32] */;
  %1016 = %1010.0;
  %1017 = @func_997(%1015) /* ty=Tensor[(6, 2, 8), bool] */;
  (%1016, %1013, meta[relay.Constant][50] /* ty=Tensor[(96), int32] */, %1017)
}

def @func_5934() -> Tensor[(4, 8, 11), float64] {
  %1018 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1018.0
}

def @func_6398(%var_6384: Tensor[(3072), float64]) -> (Tensor[(6, 2, 8), bool], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) {
  %1019 = @func_5169() /* ty=(Tensor[(6, 2, 8), bool],) */;
  %1020 = cast(%var_6384, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %1021 = reshape(%1020, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %1022 = @func_144(%1021) /* ty=(Tensor[(12, 16, 16), float64],) */;
  %1023 = %1019.0;
  %1024 = @func_4016() /* ty=Tensor[(4, 8, 11), float64] */;
  %1025 = %1022.0;
  (%1023, %1024, %1025, %var_6384)
}

def @func_9708(%var_9698: Tensor[(1, 312), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(13, 12, 2), float32], Tensor[(1, 312), float32]) {
  %1026 = @func_7766() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1027 = cast(%var_9698, dtype="float32") /* ty=Tensor[(1, 312), float32] */;
  %1028 = reshape(%1027, newshape=[13, 12, 2]) /* ty=Tensor[(13, 12, 2), float32] */;
  %1029 = @func_2080(%1028) /* ty=(Tensor[(13, 12, 2), float32],) */;
  %1030 = %1026.0;
  %1031 = %1029.0;
  (%1030, %1031, %var_9698)
}

def @func_18161() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 3), float32], Tensor[(11, 13, 6), float64]) {
  %1032 = @func_8828() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1033 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
  %1034 = reshape(%1033, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %1035 = @func_17930(%1034) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(?, 3, 6), int8], Tensor[(18), float32], Tensor[(4, 8, 11), float64], Tensor[(126), float32]) */;
  %1036 = @func_9485() /* ty=(Tensor[(11, 13, 6), float64],) */;
  %1037 = %1032.0;
  %1038 = %1035.0;
  %1039 = %1036.0;
  (%1037, %1038, meta[relay.Constant][51] /* ty=Tensor[(6, 3), float32] */, %1039)
}

def @func_997(%var_992: Tensor[(6, 2, 8), int32]) -> Tensor[(6, 2, 8), bool] {
  %1040 = cast(meta[relay.Constant][52] /* ty=Tensor[(6, 2, 8), int32] */, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %1041 = shape_of(%var_992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1042 = cast(%var_992, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1042, %1043) /* ty=Tensor[(6, 2, 8), bool] */
}

def @func_2526() -> Tensor[(4, 8, 11), float64] {
  %1044 = @func_2261() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1044.0
}

def @func_571(%var_544: Tensor[(7, 11, 3), int16]) -> (Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), int32]) {
  %1045 = cast(%var_544, dtype="int16") /* ty=Tensor[(7, 11, 3), int16] */;
  %1046 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(7, 11, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1047 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 11, 3), int16] */, dtype="int16") /* ty=Tensor[(7, 11, 3), int16] */;
  %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1049 = left_shift(%1047, %1048) /* ty=Tensor[(7, 11, 3), int16] */;
  %1050 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 11, 3), int16] */, dtype="int8") /* ty=Tensor[(7, 11, 3), int8] */;
  %1051 = shape_of(%1049, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1052 = cast(%1049, dtype="int8") /* ty=Tensor[(7, 11, 3), int8] */;
  %1053 = dyn.reshape(%1050, %1051, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1054 = cast(%1049, dtype="int32") /* ty=Tensor[(7, 11, 3), int32] */;
  %1055 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(7, 11, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1056 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 11, 3), int16] */, dtype="int32") /* ty=Tensor[(7, 11, 3), int32] */;
  %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1058 = subtract(%1052, %1053) /* ty=Tensor[(7, 11, 3), int8] */;
  %1059 = add(%1056, %1057) /* ty=Tensor[(7, 11, 3), int32] */;
  (%1058, %1059)
}

def @func_4169() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) {
  %1060 = @func_3326() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1061 = @func_4016() /* ty=Tensor[(4, 8, 11), float64] */;
  %1062 = @func_1949() /* ty=Tensor[(4, 8, 11), float64] */;
  %1063 = %1060.1;
  (%1061, %1062, %1063)
}

def @func_11406() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), uint32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1064 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1065 = cast(meta[relay.Constant][54] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %1066 = reshape(%1065, newshape=[3072]) /* ty=Tensor[(3072), float64] */;
  %1067 = @func_6644(%1066) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64]) */;
  %1068 = %1067.3;
  %1069 = cast(meta[relay.Constant][54] /* ty=Tensor[(3072), float64] */, dtype="uint32") /* ty=Tensor[(3072), uint32] */;
  %1070 = shape_of(%1068, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1071 = cast(%1068, dtype="uint32") /* ty=Tensor[(3072), uint32] */;
  %1072 = dyn.reshape(%1069, %1070, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %1073 = @func_5105() /* ty=(Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1074 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1075 = @func_2261() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1076 = %1064.0;
  %1077 = @func_8048() /* ty=Tensor[(4, 8, 11), float64] */;
  %1078 = bitwise_xor(%1071, %1072) /* ty=Tensor[(3072), uint32] */;
  %1079 = %1073.2;
  %1080 = %1074.1;
  %1081 = %1075.0;
  (%1076, %1077, %1078, %1079, %1080, %1081)
}

def @func_13874() -> (Tensor[(4, 8, 11), float64],) {
  %1082 = @func_9389() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1083 = %1082.0;
  (%1083,)
}

def @func_12302() -> (Tensor[(231), int32],) {
  %1084 = @func_11613() /* ty=(Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(231), int32], Tensor[(4, 8, 11), bool]) */;
  %1085 = %1084.2;
  (%1085,)
}

def @func_8938(%var_8920: Tensor[(231), int16], %var_8932: Tensor[(432), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(352), float64], Tensor[(231), int8], Tensor[(3, 12, 12), float32], Tensor[(432), float32]) {
  %1086 = cast(meta[relay.Constant][55] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %1087 = reshape(%1086, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %1088 = @func_4894(%1087) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1089 = @func_7774() /* ty=Tensor[(231), int16] */;
  %1090 = cast(%var_8920, dtype="int8") /* ty=Tensor[(231), int8] */;
  %1091 = shape_of(%1089, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1092 = cast(%1089, dtype="int8") /* ty=Tensor[(231), int8] */;
  %1093 = dyn.reshape(%1090, %1091, newshape=[]) /* ty=Tensor[(?), int8] */;
  %1094 = cast(%var_8932, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1095 = reshape(%1094, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %1096 = @func_1456(%1095) /* ty=(Tensor[(3, 12, 12), float32],) */;
  %1097 = %1088.0;
  %1098 = logical_xor(%1092, %1093) /* ty=Tensor[(231), int8] */;
  %1099 = %1096.0;
  (%1097, meta[relay.Constant][55] /* ty=Tensor[(352), float64] */, %1098, %1099, %var_8932)
}

def @func_4739() -> Tensor[(4, 8, 11), float64] {
  @func_1699() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_17025(%var_16982: Tensor[(13, 4, 12), float64], %var_17017: Tensor[(21, 6), float32]) -> (Tensor[(13, 4, 12), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(84), float32], Tensor[(21, 6), float32]) {
  %1100 = cast(%var_16982, dtype="float64") /* ty=Tensor[(13, 4, 12), float64] */;
  %1101 = @func_8566() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1102 = @func_7197() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1103 = cast(%var_17017, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
  %1104 = reshape(%1103, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %1105 = @func_4080(%1104) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32], Tensor[(4, 8, 11), float64], Tensor[(84), float32]) */;
  %1106 = tan(%1100) /* ty=Tensor[(13, 4, 12), float64] */;
  %1107 = %1101.0;
  %1108 = @func_13255() /* ty=Tensor[(4, 8, 11), float64] */;
  %1109 = %1102.0;
  %1110 = %1105.4;
  (%1106, %1107, %1108, %1109, %1110, %var_17017)
}

def @func_7595(%var_7589: Tensor[(12, 16, 5), float64]) -> Tensor[(12, 16, 5), float64] {
  %1111 = cast(%var_7589, dtype="float64") /* ty=Tensor[(12, 16, 5), float64] */;
  cos(%1111) /* ty=Tensor[(12, 16, 5), float64] */
}

def @func_15536() -> (Tensor[(7, 11, 3), int32],) {
  %1112 = @func_14691() /* ty=(Tensor[(7, 11, 3), int32],) */;
  %1113 = %1112.0;
  (%1113,)
}

def @func_2843() -> (Tensor[(4, 8, 11), float64],) {
  %1114 = @func_2761() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1115 = %1114.0;
  (%1115,)
}

def @func_16135() -> (Tensor[(96), int32], uint32) {
  %1116 = @func_10398() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) */;
  %1117 = @func_13983() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(16, 15, 11), uint32], uint32) */;
  %1118 = %1116.1;
  %1119 = %1117.2;
  (%1118, %1119)
}

def @func_9485() -> (Tensor[(11, 13, 6), float64],) {
  %1120 = @func_6008() /* ty=(Tensor[(11, 13, 6), float64],) */;
  %1121 = %1120.0;
  (%1121,)
}

def @func_11541() -> (Tensor[(11, 13, 6), float64],) {
  %1122 = @func_9485() /* ty=(Tensor[(11, 13, 6), float64],) */;
  %1123 = %1122.0;
  (%1123,)
}

def @func_1619() -> (Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) {
  %1124 = cast(meta[relay.Constant][56] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1125 = reshape(%1124, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %1126 = @func_1456(%1125) /* ty=(Tensor[(3, 12, 12), float32],) */;
  %1127 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1128 = %1127.0;
  %1129 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
  %1130 = cast(%1129, dtype="bool") /* ty=Tensor[(4, 8, 11), bool] */;
  %1131 = shape_of(%1128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1132 = cast(%1128, dtype="bool") /* ty=Tensor[(4, 8, 11), bool] */;
  %1133 = dyn.reshape(%1130, %1131, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1134 = cast(meta[relay.Constant][57] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %1135 = reshape(%1134, newshape=[5, 14, 5]) /* ty=Tensor[(5, 14, 5), float32] */;
  %1136 = @func_1467() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1137 = @func_1101(%1135) /* ty=Tensor[(5, 14, 5), float32] */;
  %1138 = cast(%1137, dtype="float32") /* ty=Tensor[(5, 14, 5), float32] */;
  %1139 = reshape(%1138, newshape=[5, 14, 5]) /* ty=Tensor[(5, 14, 5), float32] */;
  %1140 = %1126.0;
  %1141 = @func_1310() /* ty=Tensor[(4, 8, 11), float64] */;
  %1142 = logical_or(%1132, %1133) /* ty=Tensor[(4, 8, 11), bool] */;
  %1143 = %1136.0;
  %1144 = @func_1101(%1139) /* ty=Tensor[(5, 14, 5), float32] */;
  (%1140, meta[relay.Constant][56] /* ty=Tensor[(432), float32] */, %1141, %1142, %1137, meta[relay.Constant][57] /* ty=Tensor[(350), float32] */, %1143, %1144)
}

def @func_16189() -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool]) {
  %1145 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1146 = @func_2349() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(6, 2, 8), bool]) */;
  %1147 = %1145.1;
  %1148 = %1146.2;
  (%1147, %1148)
}

def @func_13983() -> (Tensor[(4, 8, 11), float64], Tensor[(16, 15, 11), uint32], uint32) {
  %1149 = @func_8867() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1150 = cast(meta[relay.Constant][58] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1151 = reshape(%1150, newshape=[]) /* ty=uint32 */;
  %1152 = @func_5489(%1151) /* ty=(Tensor[(16, 15, 11), uint32], Tensor[(4, 8, 11), bool]) */;
  %1153 = %1149.0;
  %1154 = %1152.0;
  (%1153, %1154, meta[relay.Constant][58] /* ty=uint32 */)
}

def @func_3206() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1155 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1156 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
  %1157 = %1155.0;
  (%1156, %1157)
}

def @func_15765() -> (Tensor[(4, 8, 11), float64], Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64]) {
  %1158 = @func_11278() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96, 1), int32]) */;
  %1159 = @func_4423() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) */;
  %1160 = @func_8566() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1161 = %1158.1;
  %1162 = %1159.0;
  %1163 = %1160.0;
  (%1161, %1162, %1163)
}

def @func_12233() -> (Tensor[(4, 8, 11), float64],) {
  %1164 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1165 = %1164.1;
  (%1165,)
}

def @func_9420() -> (Tensor[(4, 8, 11), float64],) {
  %1166 = @func_5475() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1166,)
}

def @func_7586() -> (Tensor[(4, 8, 11), float64],) {
  %1167 = @func_5565() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1168 = %1167.0;
  (%1168,)
}

def @func_18084() -> Tensor[(4, 8, 11), float64] {
  @func_12013() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_3916() -> (Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(1, 126), float32]) {
  %1169 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 126), float32] */, dtype="float32") /* ty=Tensor[(1, 126), float32] */;
  %1170 = reshape(%1169, newshape=[7, 18]) /* ty=Tensor[(7, 18), float32] */;
  %1171 = @func_3186(%1170) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) */;
  %1172 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
  %1173 = %1171.1;
  (%1172, %1173, meta[relay.Constant][59] /* ty=Tensor[(1, 126), float32] */)
}

def @func_3841() -> (Tensor[(432), float32], Tensor[(4, 8, 11), bool]) {
  %1174 = @func_1979() /* ty=(Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) */;
  %1175 = %1174.0;
  %1176 = @func_2557() /* ty=Tensor[(4, 8, 11), bool] */;
  (%1175, %1176)
}

def @func_10051(%var_10047: Tensor[(3072), float64], %var_10049: Tensor[(1, 126), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(24), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(84), float32], Tensor[(1, 126), float32]) {
  %1177 = @func_1467() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1178 = cast(meta[relay.Constant][60] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %1179 = reshape(%1178, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), float64] */;
  %1180 = @func_9511(%1179) /* ty=(Tensor[(2, 12, 1), float64], Tensor[(4, 8, 11), float64]) */;
  %1181 = cast(%var_10047, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %1182 = cast(meta[relay.Constant][61] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1183 = cast(%var_10049, dtype="float32") /* ty=Tensor[(1, 126), float32] */;
  %1184 = reshape(%1181, newshape=[8, 384]) /* ty=Tensor[(8, 384), float64] */;
  %1185 = reshape(%1182, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %1186 = reshape(%1183, newshape=[21, 6]) /* ty=Tensor[(21, 6), float32] */;
  %1187 = @func_9050(%1184, %1185, %1186) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(8, 384), float64], Tensor[(4, 8, 11), float64], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(21, 6), float32]) */;
  %1188 = %1177.0;
  %1189 = %1180.1;
  %1190 = %1187.8;
  (%1188, %1189, meta[relay.Constant][60] /* ty=Tensor[(24), float64] */, %1190, %var_10047, meta[relay.Constant][61] /* ty=Tensor[(84), float32] */, %var_10049)
}

def @func_6141() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1191 = @func_2843() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1192 = %1191.0;
  %1193 = @func_4016() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1192, %1193)
}

def @func_9389() -> (Tensor[(4, 8, 11), float64],) {
  %1194 = @func_2761() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1195 = %1194.0;
  (%1195,)
}

def @func_13255() -> Tensor[(4, 8, 11), float64] {
  %1196 = @func_10089() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */;
  %1196.0
}

def @func_17632() -> (Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  %1197 = @func_13172() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1198 = @func_8257() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %1199 = %1197.2;
  %1200 = %1198.1;
  (%1199, %1200)
}

def @func_4236() -> (Tensor[(6, 3), float32],) {
  %1201 = @func_3584() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) */;
  %1202 = %1201.2;
  (%1202,)
}

def @func_14571() -> (Tensor[(4, 8, 11), float64],) {
  %1203 = @func_12282() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1204 = %1203.1;
  (%1204,)
}

def @func_11849(%var_11831: Tensor[(3072), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(11, 13, 6), float64]) {
  %1205 = @func_11250() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1206 = cast(%var_11831, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %1207 = reshape(%1206, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %1208 = @func_144(%1207) /* ty=(Tensor[(12, 16, 16), float64],) */;
  %1209 = @func_11541() /* ty=(Tensor[(11, 13, 6), float64],) */;
  %1210 = %1205.0;
  %1211 = %1208.0;
  %1212 = %1209.0;
  (%1210, %1211, %var_11831, %1212)
}

def @func_5475() -> Tensor[(4, 8, 11), float64] {
  @func_2724() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_4287() -> (Tensor[(4, 8, 11), float64],) {
  %1213 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1214 = %1213.0;
  (%1214,)
}

def @func_6084() -> (Tensor[(4, 8, 11), float64],) {
  %1215 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1216 = %1215.0;
  (%1216,)
}

def @func_16418() -> Tensor[(4, 8, 11), float64] {
  @func_10832() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_12349() -> (Tensor[(4, 8, 11), float64],) {
  %1217 = @func_7551() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1218 = %1217.0;
  (%1218,)
}

def @func_3326() -> (Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1219 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1220 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %1221 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1222 = %1219.0;
  %1223 = %1220.2;
  %1224 = @func_1310() /* ty=Tensor[(4, 8, 11), float64] */;
  %1225 = %1221.0;
  (%1222, %1223, %1224, %1225)
}

def @func_8445() -> Tensor[(4, 8, 11), bool] {
  @func_5203() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_3714(%var_3636: Tensor[(84, 1), uint32], %var_3671: Tensor[(84, 15), uint32]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 3, 4), float64], Tensor[(84, 15), float32], Tensor[(84, 15), float64]) {
  %1226 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1227 = cast(%var_3636, dtype="uint32") /* ty=Tensor[(84, 1), uint32] */;
  %1228 = reshape(%1227, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), uint32] */;
  %1229 = cast(%var_3636, dtype="int8") /* ty=Tensor[(84, 1), int8] */;
  %1230 = cast(%var_3671, dtype="int8") /* ty=Tensor[(84, 15), int8] */;
  %1231 = left_shift(%1229, %1230) /* ty=Tensor[(84, 15), int8] */;
  %1232 = cast(%1231, dtype="bool") /* ty=Tensor[(84, 15), bool] */;
  %1233 = cast(%var_3636, dtype="bool") /* ty=Tensor[(84, 1), bool] */;
  %1234 = greater_equal(%1232, %1233) /* ty=Tensor[(84, 15), bool] */;
  %1235 = cast(%1234, dtype="float32") /* ty=Tensor[(84, 15), float32] */;
  %1236 = cast(%var_3636, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %1237 = cast(%1234, dtype="float64") /* ty=Tensor[(84, 15), float64] */;
  %1238 = shape_of(%1231, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1239 = cast(%1231, dtype="float64") /* ty=Tensor[(84, 15), float64] */;
  %1240 = dyn.reshape(%1237, %1238, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1241 = %1226.0;
  %1242 = @func_2463(%1228) /* ty=Tensor[(7, 3, 4), float64] */;
  %1243 = power(%1235, %1236) /* ty=Tensor[(84, 15), float32] */;
  %1244 = maximum(%1239, %1240) /* ty=Tensor[(84, 15), float64] */;
  (%1241, %1242, %1243, %1244)
}

def @func_13035(%var_13013: Tensor[(3, 42), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], Tensor[(840, 1), int64], Tensor[(4, 8, 11), float64], Tensor[(3, 42), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1245 = cast(meta[relay.Constant][62] /* ty=Tensor[(840, 1), int64] */, dtype="int64") /* ty=Tensor[(840, 1), int64] */;
  %1246 = reshape(%1245, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %1247 = @func_10258(%1246) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) */;
  %1248 = cast(%var_13013, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %1249 = reshape(%1248, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %1250 = @func_4080(%1249) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32], Tensor[(4, 8, 11), float64], Tensor[(84), float32]) */;
  %1251 = @func_7539() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1252 = @func_8408() /* ty=Tensor[(4, 8, 11), float64] */;
  %1253 = %1247.1;
  %1254 = %1250.3;
  %1255 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
  %1256 = %1251.1;
  (%1252, %1253, meta[relay.Constant][62] /* ty=Tensor[(840, 1), int64] */, %1254, %var_13013, %1255, %1256)
}

def @func_10089() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) {
  %1257 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1258 = @func_3105() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %1259 = %1257.0;
  %1260 = cast(%1259, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %1261 = reshape(%1260, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %1262 = @func_4894(%1261) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1263 = %1258.0;
  %1264 = %1262.0;
  (%1259, %1263, %1264)
}

def @func_7004() -> Tensor[(4, 8, 11), bool] {
  @func_5919() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_13433() -> Tensor[(4, 8, 11), float64] {
  %1265 = @func_12282() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1265.1
}

def @func_13951(%var_13911: Tensor[(117, 1), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(117, 1), float64], Tensor[(9, 13, 1), float32], Tensor[(4, 8, 11), float64], Tensor[(20), float64], Tensor[(4, 8, 11), float64]) {
  %1266 = @func_13874() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1267 = cast(%var_13911, dtype="float64") /* ty=Tensor[(117, 1), float64] */;
  %1268 = reshape(%1267, newshape=[9, 13, 1]) /* ty=Tensor[(9, 13, 1), float64] */;
  %1269 = @func_12564(%1268) /* ty=(Tensor[(9, 13, 1), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) */;
  %1270 = %1269.0;
  %1271 = cast(%1270, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
  %1272 = cast(meta[relay.Constant][63] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %1273 = reshape(%1272, newshape=[20]) /* ty=Tensor[(20), float64] */;
  %1274 = @func_9852(%1273) /* ty=(Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, ?, 5), int8], Tensor[(20), float64]) */;
  %1275 = @func_13122() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1276 = %1266.0;
  %1277 = atan(%1271) /* ty=Tensor[(9, 13, 1), float32] */;
  %1278 = %1274.1;
  %1279 = %1275.0;
  (%1276, %var_13911, %1277, %1278, meta[relay.Constant][63] /* ty=Tensor[(20), float64] */, %1279)
}

def @func_14282() -> (Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  %1280 = @func_7766() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1281 = @func_3841() /* ty=(Tensor[(432), float32], Tensor[(4, 8, 11), bool]) */;
  %1282 = %1280.0;
  %1283 = %1281.0;
  (%1282, %1283)
}

def @func_5169() -> (Tensor[(6, 2, 8), bool],) {
  %1284 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %1285 = %1284.1;
  (%1285,)
}

def @func_9774(%var_9749: Tensor[(9, 11, 14), float64]) -> (Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64]) {
  %1286 = cast(%var_9749, dtype="float64") /* ty=Tensor[(9, 11, 14), float64] */;
  %1287 = @func_5615() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1288 = log2(%1286) /* ty=Tensor[(9, 11, 14), float64] */;
  %1289 = %1287.0;
  (%1288, %1289)
}

def @func_8359() -> (Tensor[(4, 8, 11), float64],) {
  %1290 = @func_3425() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1290,)
}

def @func_5565() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1291 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1292 = @func_4423() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) */;
  %1293 = %1291.0;
  %1294 = %1292.1;
  (%1293, %1294)
}

def @func_7441(%var_7436: Tensor[(7, 11, 3), int32]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), float64]) {
  %1295 = @func_4169() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) */;
  %1296 = @func_4423() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) */;
  %1297 = %1296.2;
  %1298 = cast(%var_7436, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %1299 = shape_of(%1297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1300 = cast(%1297, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %1301 = dyn.reshape(%1298, %1299, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1302 = %1295.0;
  %1303 = divide(%1300, %1301) /* ty=Tensor[(7, 11, 3), float64] */;
  (%1302, %1303)
}

def @func_6466(%var_6454: Tensor[(13, 16, 16), float32], %var_6458: Tensor[(13, 16, 16), float32]) -> (Tensor[(13, 16, 16), bool], Tensor[(4, 8, 11), float64]) {
  %1304 = cast(%var_6454, dtype="float32") /* ty=Tensor[(13, 16, 16), float32] */;
  %1305 = acosh(%1304) /* ty=Tensor[(13, 16, 16), float32] */;
  %1306 = cast(%var_6458, dtype="bool") /* ty=Tensor[(13, 16, 16), bool] */;
  %1307 = shape_of(%1305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1308 = cast(%1305, dtype="bool") /* ty=Tensor[(13, 16, 16), bool] */;
  %1309 = dyn.reshape(%1306, %1307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1310 = @func_2843() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1311 = equal(%1308, %1309) /* ty=Tensor[(13, 16, 16), bool] */;
  %1312 = %1310.0;
  (%1311, %1312)
}

def @func_13172() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1313 = @func_4264() /* ty=(Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) */;
  %1314 = @func_2761() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1315 = %1313.1;
  %1316 = @func_5934() /* ty=Tensor[(4, 8, 11), float64] */;
  %1317 = %1314.0;
  (%1315, %1316, %1317)
}

def @func_10520() -> (Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  %1318 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1319 = @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %1320 = %1318.1;
  %1321 = %1319.3;
  (%1320, %1321)
}

def @func_6122() -> Tensor[(4, 8, 11), float64] {
  %1322 = @func_4852() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1322.0
}

def @func_17380(%var_17368: Tensor[(84), float32]) -> (Tensor[(231), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(84), float32], Tensor[(126), float32]) {
  %1323 = @func_12302() /* ty=(Tensor[(231), int32],) */;
  %1324 = @func_14483() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1325 = cast(meta[relay.Constant][64] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %1326 = cast(%var_17368, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1327 = cast(meta[relay.Constant][65] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1328 = reshape(%1325, newshape=[8, 384]) /* ty=Tensor[(8, 384), float64] */;
  %1329 = reshape(%1326, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %1330 = reshape(%1327, newshape=[21, 6]) /* ty=Tensor[(21, 6), float32] */;
  %1331 = @func_9050(%1328, %1329, %1330) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(8, 384), float64], Tensor[(4, 8, 11), float64], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(21, 6), float32]) */;
  %1332 = %1323.0;
  %1333 = %1324.1;
  %1334 = %1331.4;
  (%1332, %1333, %1334, meta[relay.Constant][64] /* ty=Tensor[(3072), float64] */, %var_17368, meta[relay.Constant][65] /* ty=Tensor[(126), float32] */)
}

def @func_16065() -> (Tensor[(11, 14, 9), float64], Tensor[(96), int32]) {
  %1335 = cast(meta[relay.Constant][66] /* ty=Tensor[(11, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(11, 14, 9), float64] */;
  %1336 = @func_6794() /* ty=(Tensor[(96), int32], Tensor[(5, 14, 5), float32], Tensor[(4, 8, 11), float64]) */;
  %1337 = sqrt(%1335) /* ty=Tensor[(11, 14, 9), float64] */;
  %1338 = %1336.0;
  (%1337, %1338)
}

def @func_17930(%var_17888: Tensor[(18), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(?, 3, 6), int8], Tensor[(18), float32], Tensor[(4, 8, 11), float64], Tensor[(126), float32]) {
  %1339 = @func_10568() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1340 = @func_16065() /* ty=(Tensor[(11, 14, 9), float64], Tensor[(96), int32]) */;
  %1341 = cast(%var_17888, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1342 = reshape(%1341, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
  %1343 = @func_2592(%1342) /* ty=(Tensor[(?, 3, 6), int8],) */;
  %1344 = @func_7223() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1345 = @func_13334() /* ty=(Tensor[(4, 8, 11), bool], Tensor[(1, 13, 14), float64], Tensor[(182), float64], Tensor[(14, 4, 15), int64], Tensor[(126), float32], Tensor[(4, 8, 11), float64]) */;
  %1346 = %1339.1;
  %1347 = %1340.1;
  %1348 = %1343.0;
  %1349 = %1344.0;
  %1350 = %1345.4;
  (%1346, %1347, %1348, %var_17888, %1349, %1350)
}

def @func_1101(%var_1093: Tensor[(5, 14, 5), float32]) -> Tensor[(5, 14, 5), float32] {
  %1351 = cast(%var_1093, dtype="float32") /* ty=Tensor[(5, 14, 5), float32] */;
  cosh(%1351) /* ty=Tensor[(5, 14, 5), float32] */
}

def @func_2349() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(6, 2, 8), bool]) {
  %1352 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %1353 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %1354 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
  %1355 = %1352.0;
  %1356 = %1353.1;
  (%1354, %1355, %1356)
}

def @func_8257() -> (Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  %1357 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1358 = @func_1979() /* ty=(Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) */;
  %1359 = %1358.0;
  %1360 = cast(%1359, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1361 = %1357.0;
  %1362 = log(%1360) /* ty=Tensor[(432), float32] */;
  (%1361, %1362)
}

def @func_12827() -> (Tensor[(4, 8, 11), float64],) {
  %1363 = @func_7197() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1364 = %1363.2;
  (%1364,)
}

def @func_12895(%var_12876: Tensor[(18), float32], %var_12877: Tensor[(96), int32], %var_12887: uint32) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(18), float32], Tensor[(96), int32], Tensor[(4, 8, 11), bool], uint32, Tensor[(4, 8, 11), float64]) {
  %1365 = @func_7710() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) */;
  %1366 = cast(%var_12876, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1367 = cast(%var_12877, dtype="int32") /* ty=Tensor[(96), int32] */;
  %1368 = reshape(%1366, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %1369 = reshape(%1367, newshape=[96]) /* ty=Tensor[(96), int32] */;
  %1370 = @func_6891(%1368, %1369) /* ty=(Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(18), float32], Tensor[(96), int32], Tensor[(96), int32], Tensor[(4, 8, 11), float64]) */;
  %1371 = cast(%var_12887, dtype="uint32") /* ty=uint32 */;
  %1372 = reshape(%1371, newshape=[]) /* ty=uint32 */;
  %1373 = @func_5489(%1372) /* ty=(Tensor[(16, 15, 11), uint32], Tensor[(4, 8, 11), bool]) */;
  %1374 = @func_9274() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1375 = %1365.0;
  %1376 = @func_1310() /* ty=Tensor[(4, 8, 11), float64] */;
  %1377 = %1370.4;
  %1378 = %1373.1;
  %1379 = %1374.0;
  (%1375, %1376, %1377, %var_12876, %var_12877, %1378, %var_12887, %1379)
}

def @func_5820() -> (Tensor[(4, 8, 11), float64],) {
  %1380 = @func_4195() /* ty=(Tensor[(?, 3, 6), int8], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1381 = %1380.1;
  (%1381,)
}

def @func_2724() -> Tensor[(4, 8, 11), float64] {
  @func_1949() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_16527() -> (Tensor[(6, 3), float32],) {
  %1382 = @func_3584() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) */;
  %1383 = %1382.2;
  (%1383,)
}

def @func_13845() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1384 = @func_11406() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), uint32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1385 = @func_8172() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1386 = %1384.1;
  %1387 = %1385.0;
  (%1386, %1387)
}

def @main(%var_18366: Tensor[(1, 616), float32], %var_18379: Tensor[(126), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(84), float32], Tensor[(126), float32], Tensor[(1, 616), float64]) {
  %1388 = @func_2261() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1389 = cast(%var_18366, dtype="float32") /* ty=Tensor[(1, 616), float32] */;
  %1390 = reshape(%1389, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), float32] */;
  %1391 = @func_10713(%1390) /* ty=(Tensor[(8, 7, 11), float32], Tensor[(4, 8, 11), float64]) */;
  %1392 = cast(%var_18379, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1393 = reshape(%1392, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %1394 = @func_4080(%1393) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32], Tensor[(4, 8, 11), float64], Tensor[(84), float32]) */;
  %1395 = cast(%var_18366, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
  %1396 = %1388.0;
  %1397 = %1391.1;
  %1398 = %1394.4;
  %1399 = acos(%1395) /* ty=Tensor[(1, 616), float64] */;
  (%1396, %1397, %1398, %var_18379, %1399)
}

def @func_16796() -> (Tensor[(432), float32],) {
  %1400 = @func_11613() /* ty=(Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(231), int32], Tensor[(4, 8, 11), bool]) */;
  %1401 = %1400.0;
  (%1401,)
}

def @func_14691() -> (Tensor[(7, 11, 3), int32],) {
  %1402 = @func_4423() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) */;
  %1403 = %1402.2;
  (%1403,)
}

def @func_7539() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1404 = @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %1405 = %1404.2;
  %1406 = @func_2724() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1405, %1406)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4853() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %2 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %0 = @func_3425() /* ty=Tensor[(4, 8, 11), float64] */;
    %1 = @func_3736() /* ty=Tensor[(4, 8, 11), float64] */;
    (%0, %1)
  };
  %2() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_7551() -> (Tensor[(4, 8, 11), float64],) {
  %3 = @func_5105() /* ty=(Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %4 = %3.2;
  (%4,)
}

def @func_4894(%var_4874: Tensor[(4, 8, 11), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %5 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %6 = %5.0;
  %7 = cast(%var_4874, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%6, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %11 = cast(%var_4874, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %12 = divide(%9, %10) /* ty=Tensor[(4, 8, 11), float64] */;
  %13 = asinh(%11) /* ty=Tensor[(4, 8, 11), float64] */;
  (%12, %13)
}

def @func_13394(%var_13393: int8) -> (Tensor[(4, 8, 11), float64], Tensor[(3, 12, 9), bool], int8) {
  %19 = fn (%var_13379: int8) -> (Tensor[(4, 8, 11), float64], Tensor[(3, 12, 9), bool], int8) {
    %14 = @func_3100() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %15 = cast(%var_13379, dtype="int8") /* ty=int8 */;
    %16 = reshape(%15, newshape=[]) /* ty=int8 */;
    %17 = %14.0;
    %18 = @func_5299(%16) /* ty=Tensor[(3, 12, 9), bool] */;
    (%17, %18, %var_13379)
  };
  %19(%var_13393) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(3, 12, 9), bool], int8) */
}

def @func_3586() -> (Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) {
  @func_3584() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) */
}

def @func_5301(%var_5300: int8) -> Tensor[(3, 12, 9), bool] {
  %27 = fn (%var_5290: int8) -> Tensor[(3, 12, 9), bool] {
    %20 = cast(%var_5290, dtype="int8") /* ty=int8 */;
    %21 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 12, 9), int8] */, dtype="int8") /* ty=Tensor[(3, 12, 9), int8] */;
    %22 = right_shift(%20, %21) /* ty=Tensor[(3, 12, 9), int8] */;
    %23 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 12, 9), int8] */, dtype="bool") /* ty=Tensor[(3, 12, 9), bool] */;
    %24 = shape_of(%22, dtype="int32") /* ty=Tensor[(3), int32] */;
    %25 = cast(%22, dtype="bool") /* ty=Tensor[(3, 12, 9), bool] */;
    %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%25, %26) /* ty=Tensor[(3, 12, 9), bool] */
  };
  %27(%var_5300) /* ty=Tensor[(3, 12, 9), bool] */
}

def @func_10166() -> (Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64]) {
  @func_10164() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64]) */
}

def @func_12235() -> (Tensor[(4, 8, 11), float64],) {
  @func_12233() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_14484() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %32 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %28 = @func_5615() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %29 = @func_5263() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %30 = %28.0;
    %31 = %29.1;
    (%30, %31)
  };
  %32() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_2466(%var_2464: Tensor[(7, 3, 4), uint32]) -> Tensor[(7, 3, 4), float64] {
  @func_2463(%var_2464) /* ty=Tensor[(7, 3, 4), float64] */
}

def @func_1212() -> (Tensor[(4, 8, 11), float64],) {
  %35 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
    %34 = rsqrt(%33) /* ty=Tensor[(4, 8, 11), float64] */;
    (%34,)
  };
  %35() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_3842() -> (Tensor[(432), float32], Tensor[(4, 8, 11), bool]) {
  %39 = fn () -> (Tensor[(432), float32], Tensor[(4, 8, 11), bool]) {
    %36 = @func_1979() /* ty=(Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) */;
    %37 = %36.0;
    %38 = @func_2557() /* ty=Tensor[(4, 8, 11), bool] */;
    (%37, %38)
  };
  %39() /* ty=(Tensor[(432), float32], Tensor[(4, 8, 11), bool]) */
}

def @func_12176() -> (Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) {
  %40 = @func_2261() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %41 = @func_11541() /* ty=(Tensor[(11, 13, 6), float64],) */;
  %42 = %40.0;
  %43 = %41.0;
  %44 = @func_8408() /* ty=Tensor[(4, 8, 11), float64] */;
  (%42, %43, %44)
}

def @func_5171() -> (Tensor[(6, 2, 8), bool],) {
  @func_5169() /* ty=(Tensor[(6, 2, 8), bool],) */
}

def @func_2528() -> Tensor[(4, 8, 11), float64] {
  @func_2526() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_4264() -> (Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) {
  %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 13, 6), float64] */, dtype="float64") /* ty=Tensor[(11, 13, 6), float64] */;
  %46 = log2(%45) /* ty=Tensor[(11, 13, 6), float64] */;
  %47 = @func_1949() /* ty=Tensor[(4, 8, 11), float64] */;
  (%46, %47)
}

def @func_12828() -> (Tensor[(4, 8, 11), float64],) {
  %50 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %48 = @func_7197() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %49 = %48.2;
    (%49,)
  };
  %50() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_18086() -> Tensor[(4, 8, 11), float64] {
  @func_18084() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_6828(%var_6806: Tensor[(432), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64]) {
  %51 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %52 = cast(%var_6806, dtype="float32") /* ty=Tensor[(432), float32] */;
  %53 = reshape(%52, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %54 = @func_1456(%53) /* ty=(Tensor[(3, 12, 12), float32],) */;
  %55 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %56 = %55.0;
  %57 = cast(%56, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %58 = %51.0;
  %59 = %54.0;
  %60 = asin(%57) /* ty=Tensor[(4, 8, 11), float64] */;
  (%58, %59, %var_6806, %60)
}

def @func_6989(%var_6987: int64, %var_6988: Tensor[(840), int64]) -> (Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) {
  %68 = fn (%var_6963: int64, %var_6964: Tensor[(840), int64]) -> (Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) {
    %61 = @func_4852() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %62 = cast(%var_6963, dtype="int64") /* ty=int64 */;
    %63 = cast(%var_6964, dtype="int64") /* ty=Tensor[(840), int64] */;
    %64 = reshape(%62, newshape=[]) /* ty=int64 */;
    %65 = reshape(%63, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), int64] */;
    %66 = %61.1;
    %67 = @func_2927(%64, %65) /* ty=Tensor[(14, 4, 15), int64] */;
    (%66, %67, %var_6963, %var_6964)
  };
  %68(%var_6987, %var_6988) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) */
}

def @func_17841() -> (Tensor[(4, 8, 11), float64],) {
  @func_17839() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_8568() -> (Tensor[(4, 8, 11), float64],) {
  @func_8566() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_8591() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %69 = @func_8172() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %70 = @func_4016() /* ty=Tensor[(4, 8, 11), float64] */;
  %71 = %69.0;
  (%70, %71)
}

def @func_9627(%var_9618: Tensor[(231), int16]) -> (Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(7, 11, 3), int32], Tensor[(231), uint16]) {
  %72 = @func_4169() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) */;
  %73 = cast(meta[relay.Constant][3] /* ty=Tensor[(231), int16] */, dtype="int16") /* ty=Tensor[(231), int16] */;
  %74 = reshape(%73, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), int16] */;
  %75 = @func_571(%74) /* ty=(Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), int32]) */;
  %76 = cast(%var_9618, dtype="uint16") /* ty=Tensor[(231), uint16] */;
  %77 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(231), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %78 = cast(meta[relay.Constant][3] /* ty=Tensor[(231), int16] */, dtype="uint16") /* ty=Tensor[(231), uint16] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %80 = @func_2557() /* ty=Tensor[(4, 8, 11), bool] */;
  %81 = @func_3425() /* ty=Tensor[(4, 8, 11), float64] */;
  %82 = %72.2;
  %83 = %75.1;
  %84 = left_shift(%78, %79) /* ty=Tensor[(231), uint16] */;
  (%80, %81, %82, %83, %84)
}

def @func_12178() -> (Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) {
  @func_12176() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_15154() -> (Tensor[(4, 8, 11), float64], Tensor[(1536, 2), int16]) {
  @func_15152() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(1536, 2), int16]) */
}

def @func_17342() -> Tensor[(4, 8, 11), bool] {
  %85 = @func_3105() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %85.0
}

def @func_6009() -> (Tensor[(11, 13, 6), float64],) {
  %88 = fn () -> (Tensor[(11, 13, 6), float64],) {
    %86 = @func_4264() /* ty=(Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) */;
    %87 = %86.0;
    (%87,)
  };
  %88() /* ty=(Tensor[(11, 13, 6), float64],) */
}

def @func_6894(%var_6892: Tensor[(18), float32], %var_6893: Tensor[(96), int32]) -> (Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(18), float32], Tensor[(96), int32], Tensor[(96), int32], Tensor[(4, 8, 11), float64]) {
  %100 = fn (%var_6867: Tensor[(18), float32], %var_6872: Tensor[(96), int32]) -> (Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(18), float32], Tensor[(96), int32], Tensor[(96), int32], Tensor[(4, 8, 11), float64]) {
    %89 = cast(%var_6867, dtype="float32") /* ty=Tensor[(18), float32] */;
    %90 = reshape(%89, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %91 = @func_4656(%90) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), bool]) */;
    %92 = cast(%var_6872, dtype="int32") /* ty=Tensor[(96), int32] */;
    %93 = reshape(%92, newshape=[96]) /* ty=Tensor[(96), int32] */;
    %94 = @func_2420(%93) /* ty=(Tensor[(432), float32], Tensor[(6, 2, 8), bool], Tensor[(96), int32]) */;
    %95 = @func_6184() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %96 = @func_5203() /* ty=Tensor[(4, 8, 11), bool] */;
    %97 = %91.1;
    %98 = %94.2;
    %99 = %95.0;
    (%96, %97, %var_6867, %98, %var_6872, %99)
  };
  %100(%var_6892, %var_6893) /* ty=(Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(18), float32], Tensor[(96), int32], Tensor[(96), int32], Tensor[(4, 8, 11), float64]) */
}

def @func_12581() -> (Tensor[(231), int16],) {
  @func_12579() /* ty=(Tensor[(231), int16],) */
}

def @func_8018() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_8016() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_3285() -> (Tensor[(4, 8, 11), float64],) {
  @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_6122() -> Tensor[(4, 8, 11), float64] {
  %101 = @func_4852() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %101.0
}

def @func_13716(%var_13715: Tensor[(10, 14, 14), int8]) -> (Tensor[(10, 14, 14), int8], Tensor[(4, 8, 11), float64], Tensor[(6, 3), float32], Tensor[(96), int32]) {
  %112 = fn (%var_13668: Tensor[(10, 14, 14), int8]) -> (Tensor[(10, 14, 14), int8], Tensor[(4, 8, 11), float64], Tensor[(6, 3), float32], Tensor[(96), int32]) {
    %102 = cast(%var_13668, dtype="int8") /* ty=Tensor[(10, 14, 14), int8] */;
    %103 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(10, 14, 14), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %104 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 14, 14), int8] */, dtype="int8") /* ty=Tensor[(10, 14, 14), int8] */;
    %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %106 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
    %107 = reshape(%106, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %108 = @func_4656(%107) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), bool]) */;
    %109 = multiply(%104, %105) /* ty=Tensor[(10, 14, 14), int8] */;
    %110 = %108.1;
    %111 = @func_12625() /* ty=Tensor[(96), int32] */;
    (%109, %110, meta[relay.Constant][5] /* ty=Tensor[(6, 3), float32] */, %111)
  };
  %112(%var_13715) /* ty=(Tensor[(10, 14, 14), int8], Tensor[(4, 8, 11), float64], Tensor[(6, 3), float32], Tensor[(96), int32]) */
}

def @func_16419() -> Tensor[(4, 8, 11), float64] {
  %113 = fn () -> Tensor[(4, 8, 11), float64] {
    @func_10832() /* ty=Tensor[(4, 8, 11), float64] */
  };
  %113() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_13875() -> (Tensor[(4, 8, 11), float64],) {
  %116 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %114 = @func_9389() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %115 = %114.0;
    (%115,)
  };
  %116() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_10091() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) {
  @func_10089() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */
}

def @func_3918() -> (Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(1, 126), float32]) {
  @func_3916() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(1, 126), float32]) */
}

def @func_14571() -> (Tensor[(4, 8, 11), float64],) {
  %117 = @func_12282() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %118 = %117.1;
  (%118,)
}

def @func_15075(%var_15071: Tensor[(10, 2, 8), float64]) -> Tensor[(10, 2, 8), float64] {
  %119 = cast(%var_15071, dtype="float64") /* ty=Tensor[(10, 2, 8), float64] */;
  log10(%119) /* ty=Tensor[(10, 2, 8), float64] */
}

def @func_17104(%var_17102: Tensor[(1, 728), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), float64], Tensor[(4, 8, 11), float64], Tensor[(432), float32], Tensor[(768, 4), float64], Tensor[(1, 728), float32]) {
  @func_17101(%var_17102) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), float64], Tensor[(4, 8, 11), float64], Tensor[(432), float32], Tensor[(768, 4), float64], Tensor[(1, 728), float32]) */
}

def @func_2410() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_13335() -> (Tensor[(4, 8, 11), bool], Tensor[(1, 13, 14), float64], Tensor[(182), float64], Tensor[(14, 4, 15), int64], Tensor[(126), float32], Tensor[(4, 8, 11), float64]) {
  %130 = fn () -> (Tensor[(4, 8, 11), bool], Tensor[(1, 13, 14), float64], Tensor[(182), float64], Tensor[(14, 4, 15), int64], Tensor[(126), float32], Tensor[(4, 8, 11), float64]) {
    %120 = cast(meta[relay.Constant][6] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
    %121 = reshape(%120, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
    %122 = cast(meta[relay.Constant][7] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %123 = reshape(%122, newshape=[3, 42]) /* ty=Tensor[(3, 42), float32] */;
    %124 = @func_13035(%123) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], Tensor[(840, 1), int64], Tensor[(4, 8, 11), float64], Tensor[(3, 42), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %125 = @func_10164() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64]) */;
    %126 = @func_11117() /* ty=Tensor[(4, 8, 11), bool] */;
    %127 = @func_4341(%121) /* ty=Tensor[(1, 13, 14), float64] */;
    %128 = %124.1;
    %129 = %125.0;
    (%126, %127, meta[relay.Constant][6] /* ty=Tensor[(182), float64] */, %128, meta[relay.Constant][7] /* ty=Tensor[(126), float32] */, %129)
  };
  %130() /* ty=(Tensor[(4, 8, 11), bool], Tensor[(1, 13, 14), float64], Tensor[(182), float64], Tensor[(14, 4, 15), int64], Tensor[(126), float32], Tensor[(4, 8, 11), float64]) */
}

def @func_3916() -> (Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(1, 126), float32]) {
  %131 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 126), float32] */, dtype="float32") /* ty=Tensor[(1, 126), float32] */;
  %132 = reshape(%131, newshape=[7, 18]) /* ty=Tensor[(7, 18), float32] */;
  %133 = @func_3186(%132) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) */;
  %134 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
  %135 = %133.1;
  (%134, %135, meta[relay.Constant][8] /* ty=Tensor[(1, 126), float32] */)
}

def @func_12776() -> Tensor[(4, 8, 11), float64] {
  %136 = @func_8016() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %136.1
}

def @func_3717(%var_3715: Tensor[(84, 1), uint32], %var_3716: Tensor[(84, 15), uint32]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 3, 4), float64], Tensor[(84, 15), float32], Tensor[(84, 15), float64]) {
  %156 = fn (%var_3636: Tensor[(84, 1), uint32], %var_3671: Tensor[(84, 15), uint32]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 3, 4), float64], Tensor[(84, 15), float32], Tensor[(84, 15), float64]) {
    %137 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %138 = cast(%var_3636, dtype="uint32") /* ty=Tensor[(84, 1), uint32] */;
    %139 = reshape(%138, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), uint32] */;
    %140 = cast(%var_3636, dtype="int8") /* ty=Tensor[(84, 1), int8] */;
    %141 = cast(%var_3671, dtype="int8") /* ty=Tensor[(84, 15), int8] */;
    %142 = left_shift(%140, %141) /* ty=Tensor[(84, 15), int8] */;
    %143 = cast(%142, dtype="bool") /* ty=Tensor[(84, 15), bool] */;
    %144 = cast(%var_3636, dtype="bool") /* ty=Tensor[(84, 1), bool] */;
    %145 = greater_equal(%143, %144) /* ty=Tensor[(84, 15), bool] */;
    %146 = cast(%145, dtype="float32") /* ty=Tensor[(84, 15), float32] */;
    %147 = cast(%var_3636, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
    %148 = cast(%145, dtype="float64") /* ty=Tensor[(84, 15), float64] */;
    %149 = shape_of(%142, dtype="int32") /* ty=Tensor[(2), int32] */;
    %150 = cast(%142, dtype="float64") /* ty=Tensor[(84, 15), float64] */;
    %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %152 = %137.0;
    %153 = @func_2463(%139) /* ty=Tensor[(7, 3, 4), float64] */;
    %154 = power(%146, %147) /* ty=Tensor[(84, 15), float32] */;
    %155 = maximum(%150, %151) /* ty=Tensor[(84, 15), float64] */;
    (%152, %153, %154, %155)
  };
  %156(%var_3715, %var_3716) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 3, 4), float64], Tensor[(84, 15), float32], Tensor[(84, 15), float64]) */
}

def @func_1379(%var_1377: Tensor[(4, 8, 11), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) {
  @func_1376(%var_1377) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */
}

def @func_15339(%var_15338: Tensor[(182), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(182), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), float64]) {
  %167 = fn (%var_15313: Tensor[(182), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(182), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), float64]) {
    %157 = cast(%var_15313, dtype="float64") /* ty=Tensor[(182), float64] */;
    %158 = reshape(%157, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
    %159 = @func_5963() /* ty=(Tensor[(?, 3, 6), int8],) */;
    %160 = %159.0;
    %161 = cast(%160, dtype="float64") /* ty=Tensor[(?, 3, 6), float64] */;
    %162 = @func_1949() /* ty=Tensor[(4, 8, 11), float64] */;
    %163 = @func_15106() /* ty=Tensor[(4, 8, 11), float64] */;
    %164 = @func_4341(%158) /* ty=Tensor[(1, 13, 14), float64] */;
    %165 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
    %166 = asin(%161) /* ty=Tensor[(?, 3, 6), float64] */;
    (%162, %163, %164, %var_15313, %165, %166)
  };
  %167(%var_15338) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(182), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), float64]) */
}

def @func_16190() -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool]) {
  %172 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool]) {
    %168 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %169 = @func_2349() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(6, 2, 8), bool]) */;
    %170 = %168.1;
    %171 = %169.2;
    (%170, %171)
  };
  %172() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool]) */
}

def @func_8258() -> (Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  %179 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
    %173 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %174 = @func_1979() /* ty=(Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) */;
    %175 = %174.0;
    %176 = cast(%175, dtype="float32") /* ty=Tensor[(432), float32] */;
    %177 = %173.0;
    %178 = log(%176) /* ty=Tensor[(432), float32] */;
    (%177, %178)
  };
  %179() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */
}

def @func_12579() -> (Tensor[(231), int16],) {
  %180 = @func_7774() /* ty=Tensor[(231), int16] */;
  (%180,)
}

def @func_8566() -> (Tensor[(4, 8, 11), float64],) {
  %181 = @func_8501() /* ty=Tensor[(4, 8, 11), float64] */;
  (%181,)
}

def @func_4169() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) {
  %182 = @func_3326() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %183 = @func_4016() /* ty=Tensor[(4, 8, 11), float64] */;
  %184 = @func_1949() /* ty=Tensor[(4, 8, 11), float64] */;
  %185 = %182.1;
  (%183, %184, %185)
}

def @func_7372() -> Tensor[(4, 8, 11), float64] {
  %187 = fn () -> Tensor[(4, 8, 11), float64] {
    %186 = @func_7223() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %186.0
  };
  %187() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_2592(%var_2582: Tensor[(1, 3, 6), float32]) -> (Tensor[(?, 3, 6), int8],) {
  %188 = cast(%var_2582, dtype="float32") /* ty=Tensor[(1, 3, 6), float32] */;
  %189 = sqrt(%188) /* ty=Tensor[(1, 3, 6), float32] */;
  %190 = cast(%var_2582, dtype="int8") /* ty=Tensor[(1, 3, 6), int8] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%189, dtype="int8") /* ty=Tensor[(1, 3, 6), int8] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %194 = right_shift(%192, %193) /* ty=Tensor[(?, 3, 6), int8] */;
  (%194,)
}

def @func_16527() -> (Tensor[(6, 3), float32],) {
  %195 = @func_3584() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) */;
  %196 = %195.2;
  (%196,)
}

def @func_6510() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  %197 = @func_4692() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %198 = @func_4169() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) */;
  %199 = %198.0;
  %200 = cast(%199, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %201 = @func_1979() /* ty=(Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) */;
  %202 = %197.0;
  %203 = @func_5203() /* ty=Tensor[(4, 8, 11), bool] */;
  %204 = acosh(%200) /* ty=Tensor[(4, 8, 11), float64] */;
  %205 = %201.0;
  (%202, %203, %204, %205)
}

def @func_15078(%var_15076: Tensor[(10, 2, 8), float64]) -> Tensor[(10, 2, 8), float64] {
  @func_15075(%var_15076) /* ty=Tensor[(10, 2, 8), float64] */
}

def @func_16386() -> (Tensor[(231), float64], Tensor[(4, 8, 11), float64]) {
  %211 = fn () -> (Tensor[(231), float64], Tensor[(4, 8, 11), float64]) {
    %206 = @func_12302() /* ty=(Tensor[(231), int32],) */;
    %207 = %206.0;
    %208 = cast(%207, dtype="float64") /* ty=Tensor[(231), float64] */;
    %209 = log(%208) /* ty=Tensor[(231), float64] */;
    %210 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
    (%209, %210)
  };
  %211() /* ty=(Tensor[(231), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_10051(%var_10047: Tensor[(3072), float64], %var_10049: Tensor[(1, 126), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(24), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(84), float32], Tensor[(1, 126), float32]) {
  %212 = @func_1467() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %213 = cast(meta[relay.Constant][9] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %214 = reshape(%213, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), float64] */;
  %215 = @func_9511(%214) /* ty=(Tensor[(2, 12, 1), float64], Tensor[(4, 8, 11), float64]) */;
  %216 = cast(%var_10047, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %217 = cast(meta[relay.Constant][10] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %218 = cast(%var_10049, dtype="float32") /* ty=Tensor[(1, 126), float32] */;
  %219 = reshape(%216, newshape=[8, 384]) /* ty=Tensor[(8, 384), float64] */;
  %220 = reshape(%217, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %221 = reshape(%218, newshape=[21, 6]) /* ty=Tensor[(21, 6), float32] */;
  %222 = @func_9050(%219, %220, %221) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(8, 384), float64], Tensor[(4, 8, 11), float64], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(21, 6), float32]) */;
  %223 = %212.0;
  %224 = %215.1;
  %225 = %222.8;
  (%223, %224, meta[relay.Constant][9] /* ty=Tensor[(24), float64] */, %225, %var_10047, meta[relay.Constant][10] /* ty=Tensor[(84), float32] */, %var_10049)
}

def @func_1468() -> (Tensor[(4, 8, 11), float64],) {
  %228 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %226 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %227 = %226.0;
    (%227,)
  };
  %228() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_4237() -> (Tensor[(6, 3), float32],) {
  %231 = fn () -> (Tensor[(6, 3), float32],) {
    %229 = @func_3584() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) */;
    %230 = %229.2;
    (%230,)
  };
  %231() /* ty=(Tensor[(6, 3), float32],) */
}

def @func_14621() -> (Tensor[(96), int32], Tensor[(4, 8, 11), float64]) {
  @func_14619() /* ty=(Tensor[(96), int32], Tensor[(4, 8, 11), float64]) */
}

def @func_17498() -> (Tensor[(4, 8, 11), float64],) {
  %234 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %232 = @func_8801() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %233 = %232.0;
    (%233,)
  };
  %234() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_7004() -> Tensor[(4, 8, 11), bool] {
  @func_5919() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_4693() -> (Tensor[(4, 8, 11), float64],) {
  %236 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %235 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
    (%235,)
  };
  %236() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_12455() -> (Tensor[(7, 8, 7), float64],) {
  @func_12453() /* ty=(Tensor[(7, 8, 7), float64],) */
}

def @func_15537() -> (Tensor[(7, 11, 3), int32],) {
  %239 = fn () -> (Tensor[(7, 11, 3), int32],) {
    %237 = @func_14691() /* ty=(Tensor[(7, 11, 3), int32],) */;
    %238 = %237.0;
    (%238,)
  };
  %239() /* ty=(Tensor[(7, 11, 3), int32],) */
}

def @func_12350() -> (Tensor[(4, 8, 11), float64],) {
  %242 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %240 = @func_7551() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %241 = %240.0;
    (%241,)
  };
  %242() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_1896() -> (Tensor[(4, 8, 11), float64],) {
  %243 = @func_1619() /* ty=(Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) */;
  %244 = %243.6;
  (%244,)
}

def @func_1898() -> (Tensor[(4, 8, 11), float64],) {
  @func_1896() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_3102() -> (Tensor[(4, 8, 11), float64],) {
  @func_3100() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_15045(%var_15043: Tensor[(3072), float64], %var_15044: Tensor[(364, 2), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(6, 2, 8), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32], Tensor[(364, 2), float32], Tensor[(4, 8, 11), float64], Tensor[(3, 12, 12), float32], Tensor[(96), int32]) {
  @func_15041(%var_15043, %var_15044) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(6, 2, 8), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32], Tensor[(364, 2), float32], Tensor[(4, 8, 11), float64], Tensor[(3, 12, 12), float32], Tensor[(96), int32]) */
}

def @func_14229() -> Tensor[(4, 8, 11), float64] {
  %246 = fn () -> Tensor[(4, 8, 11), float64] {
    %245 = @func_2843() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %245.0
  };
  %246() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_7738() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) {
  %247 = @func_5820() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %248 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %249 = %247.0;
  %250 = %248.0;
  (%249, %250)
}

def @func_4341(%var_4338: Tensor[(1, 13, 14), float64]) -> Tensor[(1, 13, 14), float64] {
  %251 = cast(%var_4338, dtype="float64") /* ty=Tensor[(1, 13, 14), float64] */;
  sqrt(%251) /* ty=Tensor[(1, 13, 14), float64] */
}

def @func_16136() -> (Tensor[(96), int32], uint32) {
  %256 = fn () -> (Tensor[(96), int32], uint32) {
    %252 = @func_10398() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) */;
    %253 = @func_13983() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(16, 15, 11), uint32], uint32) */;
    %254 = %252.1;
    %255 = %253.2;
    (%254, %255)
  };
  %256() /* ty=(Tensor[(96), int32], uint32) */
}

def @func_1951() -> Tensor[(4, 8, 11), float64] {
  @func_1949() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_16861() -> (Tensor[(4, 8, 11), float64], Tensor[(231), int16]) {
  @func_16859() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(231), int16]) */
}

def @func_17465() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 10, 4), float32], Tensor[(16, 10), float32], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) {
  @func_17463() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 10, 4), float32], Tensor[(16, 10), float32], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */
}

def @func_2350() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(6, 2, 8), bool]) {
  %262 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(6, 2, 8), bool]) {
    %257 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
    %258 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
    %259 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
    %260 = %257.0;
    %261 = %258.1;
    (%259, %260, %261)
  };
  %262() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(6, 2, 8), bool]) */
}

def @func_1459(%var_1457: Tensor[(3, 12, 12), float32]) -> (Tensor[(3, 12, 12), float32],) {
  @func_1456(%var_1457) /* ty=(Tensor[(3, 12, 12), float32],) */
}

def @func_8147(%var_8103: Tensor[(4, 15, 2), int64], %var_8117: Tensor[(13, 14), float64]) -> (Tensor[(4, 15, 2), int64], Tensor[(4, 15, 2), bool], Tensor[(1, 13, 14), float64], Tensor[(13, 14), float64], Tensor[(4, 15, 2), float32], Tensor[(4, 8, 11), bool]) {
  %263 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 15, 2), int64] */, dtype="int64") /* ty=Tensor[(4, 15, 2), int64] */;
  %264 = shape_of(%var_8103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%var_8103, dtype="int64") /* ty=Tensor[(4, 15, 2), int64] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %267 = cast(%var_8103, dtype="bool") /* ty=Tensor[(4, 15, 2), bool] */;
  %268 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(4, 15, 2), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 15, 2), int64] */, dtype="bool") /* ty=Tensor[(4, 15, 2), bool] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %271 = cast(%var_8117, dtype="float64") /* ty=Tensor[(13, 14), float64] */;
  %272 = reshape(%271, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
  %273 = cast(%var_8103, dtype="float32") /* ty=Tensor[(4, 15, 2), float32] */;
  %274 = bitwise_and(%265, %266) /* ty=Tensor[(4, 15, 2), int64] */;
  %275 = not_equal(%269, %270) /* ty=Tensor[(4, 15, 2), bool] */;
  %276 = @func_4341(%272) /* ty=Tensor[(1, 13, 14), float64] */;
  %277 = sinh(%273) /* ty=Tensor[(4, 15, 2), float32] */;
  %278 = @func_5919() /* ty=Tensor[(4, 8, 11), bool] */;
  (%274, %275, %276, %var_8117, %277, %278)
}

def @func_2906(%var_2897: Tensor[(84), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), bool], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64]) {
  %279 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %280 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %281 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %282 = cast(%var_2897, dtype="float32") /* ty=Tensor[(84), float32] */;
  %283 = reshape(%282, newshape=[7, 4, 3]) /* ty=Tensor[(7, 4, 3), float32] */;
  %284 = %279.0;
  %285 = %280.2;
  %286 = %281.0;
  %287 = @func_2327(%283) /* ty=Tensor[(7, 4, 3), float32] */;
  %288 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
  (%284, %285, %286, %287, %var_2897, %288)
}

def @func_6086() -> (Tensor[(4, 8, 11), float64],) {
  @func_6084() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_5566() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %293 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %289 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %290 = @func_4423() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) */;
    %291 = %289.0;
    %292 = %290.1;
    (%291, %292)
  };
  %293() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_679(%var_678: Tensor[(16, 2, 12), uint16]) -> Tensor[(16, 2, 12), uint16] {
  %298 = fn (%var_672: Tensor[(16, 2, 12), uint16]) -> Tensor[(16, 2, 12), uint16] {
    %294 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 2, 12), uint16] */, dtype="uint16") /* ty=Tensor[(16, 2, 12), uint16] */;
    %295 = shape_of(%var_672, dtype="int32") /* ty=Tensor[(3), int32] */;
    %296 = cast(%var_672, dtype="uint16") /* ty=Tensor[(16, 2, 12), uint16] */;
    %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    left_shift(%296, %297) /* ty=Tensor[(16, 2, 12), uint16] */
  };
  %298(%var_678) /* ty=Tensor[(16, 2, 12), uint16] */
}

def @func_3105() -> (Tensor[(4, 8, 11), bool],) {
  %299 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %300 = %299.0;
  (%300,)
}

def @func_4083(%var_4081: Tensor[(126), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32], Tensor[(4, 8, 11), float64], Tensor[(84), float32]) {
  @func_4080(%var_4081) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32], Tensor[(4, 8, 11), float64], Tensor[(84), float32]) */
}

def @func_6794() -> (Tensor[(96), int32], Tensor[(5, 14, 5), float32], Tensor[(4, 8, 11), float64]) {
  %301 = @func_4169() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) */;
  %302 = @func_1619() /* ty=(Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) */;
  %303 = @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %304 = %301.2;
  %305 = %302.7;
  %306 = %303.0;
  (%304, %305, %306)
}

def @func_8050() -> Tensor[(4, 8, 11), float64] {
  @func_8048() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_9306(%var_9304: Tensor[(2, 72), float64]) -> (Tensor[(6, 2, 8), bool], Tensor[(1, 16, 9), float64], Tensor[(2, 72), float64]) {
  @func_9303(%var_9304) /* ty=(Tensor[(6, 2, 8), bool], Tensor[(1, 16, 9), float64], Tensor[(2, 72), float64]) */
}

def @func_5203() -> Tensor[(4, 8, 11), bool] {
  %307 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %307.0
}

def @func_6470(%var_6468: Tensor[(13, 16, 16), float32], %var_6469: Tensor[(13, 16, 16), float32]) -> (Tensor[(13, 16, 16), bool], Tensor[(4, 8, 11), float64]) {
  @func_6466(%var_6468, %var_6469) /* ty=(Tensor[(13, 16, 16), bool], Tensor[(4, 8, 11), float64]) */
}

def @func_17632() -> (Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  %308 = @func_13172() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %309 = @func_8257() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %310 = %308.2;
  %311 = %309.1;
  (%310, %311)
}

def @func_12303() -> (Tensor[(231), int32],) {
  %314 = fn () -> (Tensor[(231), int32],) {
    %312 = @func_11613() /* ty=(Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(231), int32], Tensor[(4, 8, 11), bool]) */;
    %313 = %312.2;
    (%313,)
  };
  %314() /* ty=(Tensor[(231), int32],) */
}

def @func_10055(%var_10053: Tensor[(3072), float64], %var_10054: Tensor[(1, 126), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(24), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(84), float32], Tensor[(1, 126), float32]) {
  @func_10051(%var_10053, %var_10054) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(24), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(84), float32], Tensor[(1, 126), float32]) */
}

def @func_2261() -> (Tensor[(4, 8, 11), float64],) {
  %315 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %316 = %315.0;
  (%316,)
}

def @func_7767() -> (Tensor[(4, 8, 11), float64],) {
  %318 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %317 = @func_4739() /* ty=Tensor[(4, 8, 11), float64] */;
    (%317,)
  };
  %318() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_10609() -> Tensor[(4, 8, 11), float64] {
  %319 = @func_8257() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %319.0
}

def @func_2726() -> Tensor[(4, 8, 11), float64] {
  @func_2724() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_1297() -> Tensor[(4, 8, 11), float64] {
  %320 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %321 = %320.0;
  %322 = cast(%321, dtype="float32") /* ty=Tensor[(4, 8, 11), float32] */;
  %323 = tan(%322) /* ty=Tensor[(4, 8, 11), float32] */;
  %324 = cast(%323, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  erf(%324) /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_9630(%var_9628: Tensor[(231), int16]) -> (Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(7, 11, 3), int32], Tensor[(231), uint16]) {
  @func_9627(%var_9628) /* ty=(Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(7, 11, 3), int32], Tensor[(231), uint16]) */
}

def @func_2845() -> (Tensor[(4, 8, 11), float64],) {
  @func_2843() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_11851(%var_11850: Tensor[(3072), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(11, 13, 6), float64]) {
  %333 = fn (%var_11831: Tensor[(3072), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(11, 13, 6), float64]) {
    %325 = @func_11250() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %326 = cast(%var_11831, dtype="float64") /* ty=Tensor[(3072), float64] */;
    %327 = reshape(%326, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
    %328 = @func_144(%327) /* ty=(Tensor[(12, 16, 16), float64],) */;
    %329 = @func_11541() /* ty=(Tensor[(11, 13, 6), float64],) */;
    %330 = %325.0;
    %331 = %328.0;
    %332 = %329.0;
    (%330, %331, %var_11831, %332)
  };
  %333(%var_11850) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(11, 13, 6), float64]) */
}

def @func_7553() -> (Tensor[(4, 8, 11), float64],) {
  @func_7551() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_5821() -> (Tensor[(4, 8, 11), float64],) {
  %336 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %334 = @func_4195() /* ty=(Tensor[(?, 3, 6), int8], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %335 = %334.1;
    (%335,)
  };
  %336() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_11279() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96, 1), int32]) {
  %346 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96, 1), int32]) {
    %337 = @func_7738() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) */;
    %338 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %339 = @func_7507() /* ty=(Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(3072), float64]) */;
    %340 = cast(meta[relay.Constant][13] /* ty=Tensor[(96, 1), int32] */, dtype="int32") /* ty=Tensor[(96, 1), int32] */;
    %341 = reshape(%340, newshape=[6, 2, 8]) /* ty=Tensor[(6, 2, 8), int32] */;
    %342 = %337.0;
    %343 = %338.0;
    %344 = %339.1;
    %345 = @func_997(%341) /* ty=Tensor[(6, 2, 8), bool] */;
    (%342, %343, %344, %345, meta[relay.Constant][13] /* ty=Tensor[(96, 1), int32] */)
  };
  %346() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96, 1), int32]) */
}

def @func_2302() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %349 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %347 = @func_1949() /* ty=Tensor[(4, 8, 11), float64] */;
    %348 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
    (%347, %348)
  };
  %349() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_10089() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) {
  %350 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %351 = @func_3105() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %352 = %350.0;
  %353 = cast(%352, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %354 = reshape(%353, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %355 = @func_4894(%354) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %356 = %351.0;
  %357 = %355.0;
  (%352, %356, %357)
}

def @func_8361() -> (Tensor[(4, 8, 11), float64],) {
  @func_8359() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_10569() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %364 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %358 = @func_1896() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %359 = @func_5023() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %360 = @func_8801() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %361 = %358.0;
    %362 = %359.0;
    %363 = %360.0;
    (%361, %362, %363)
  };
  %364() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_2665(%var_2609: Tensor[(4, 8, 11), float64], %var_2615: Tensor[(432), float32]) -> (Tensor[(4, 8, 11), int8], Tensor[(3, 12, 12), float32], Tensor[(432), float32]) {
  %365 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
  %366 = cast(%var_2609, dtype="int8") /* ty=Tensor[(4, 8, 11), int8] */;
  %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%365, dtype="int8") /* ty=Tensor[(4, 8, 11), int8] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %370 = cast(%var_2615, dtype="float32") /* ty=Tensor[(432), float32] */;
  %371 = reshape(%370, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %372 = @func_1456(%371) /* ty=(Tensor[(3, 12, 12), float32],) */;
  %373 = add(%368, %369) /* ty=Tensor[(4, 8, 11), int8] */;
  %374 = %372.0;
  (%373, %374, %var_2615)
}

def @func_3189(%var_3187: Tensor[(7, 18), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) {
  @func_3186(%var_3187) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) */
}

def @func_3207() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %378 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %375 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %376 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
    %377 = %375.0;
    (%376, %377)
  };
  %378() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_10400() -> (Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) {
  @func_10398() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) */
}

def @func_11073(%var_11071: Tensor[(3, 28), float32], %var_11072: Tensor[(26, 7), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 4, 3), float32], Tensor[(3, 28), float32], Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(26, 7), float64]) {
  %390 = fn (%var_11051: Tensor[(3, 28), float32], %var_11066: Tensor[(26, 7), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 4, 3), float32], Tensor[(3, 28), float32], Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(26, 7), float64]) {
    %379 = @func_3916() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(1, 126), float32]) */;
    %380 = cast(%var_11051, dtype="float32") /* ty=Tensor[(3, 28), float32] */;
    %381 = reshape(%380, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %382 = @func_2906(%381) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), bool], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64]) */;
    %383 = @func_10164() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64]) */;
    %384 = cast(%var_11066, dtype="float64") /* ty=Tensor[(26, 7), float64] */;
    %385 = reshape(%384, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
    %386 = %379.0;
    %387 = %382.3;
    %388 = %383.0;
    %389 = @func_4341(%385) /* ty=Tensor[(1, 13, 14), float64] */;
    (%386, %387, %var_11051, %388, %389, %var_11066)
  };
  %390(%var_11071, %var_11072) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 4, 3), float32], Tensor[(3, 28), float32], Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(26, 7), float64]) */
}

def @func_2724() -> Tensor[(4, 8, 11), float64] {
  @func_1949() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_9054(%var_9051: Tensor[(8, 384), float64], %var_9052: Tensor[(84), float32], %var_9053: Tensor[(21, 6), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(8, 384), float64], Tensor[(4, 8, 11), float64], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(21, 6), float32]) {
  %409 = fn (%var_9000: Tensor[(8, 384), float64], %var_9021: Tensor[(84), float32], %var_9042: Tensor[(21, 6), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(8, 384), float64], Tensor[(4, 8, 11), float64], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(21, 6), float32]) {
    %391 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %392 = @func_8016() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %393 = cast(%var_9000, dtype="float64") /* ty=Tensor[(8, 384), float64] */;
    %394 = reshape(%393, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
    %395 = @func_144(%394) /* ty=(Tensor[(12, 16, 16), float64],) */;
    %396 = cast(%var_9021, dtype="float32") /* ty=Tensor[(84), float32] */;
    %397 = reshape(%396, newshape=[7, 4, 3]) /* ty=Tensor[(7, 4, 3), float32] */;
    %398 = @func_7766() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %399 = cast(%var_9042, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
    %400 = reshape(%399, newshape=[7, 18]) /* ty=Tensor[(7, 18), float32] */;
    %401 = @func_3186(%400) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) */;
    %402 = %391.0;
    %403 = %392.1;
    %404 = %395.0;
    %405 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
    %406 = @func_2327(%397) /* ty=Tensor[(7, 4, 3), float32] */;
    %407 = %398.0;
    %408 = %401.0;
    (%402, %403, %404, %var_9000, %405, %406, %var_9021, %407, %408, %var_9042)
  };
  %409(%var_9051, %var_9052, %var_9053) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(8, 384), float64], Tensor[(4, 8, 11), float64], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(21, 6), float32]) */
}

def @func_12233() -> (Tensor[(4, 8, 11), float64],) {
  %410 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %411 = %410.1;
  (%411,)
}

def @func_2408() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %412 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %413 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %414 = %412.1;
  %415 = %413.0;
  (%414, %415)
}

def @func_12567(%var_12565: Tensor[(9, 13, 1), float64]) -> (Tensor[(9, 13, 1), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) {
  @func_12564(%var_12565) /* ty=(Tensor[(9, 13, 1), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) */
}

def @func_16959() -> (Tensor[(4, 8, 11), float64],) {
  %418 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %416 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %417 = %416.0;
    (%417,)
  };
  %418() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_2557() -> Tensor[(4, 8, 11), bool] {
  %419 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %419.0
}

def @func_5491(%var_5490: uint32) -> (Tensor[(16, 15, 11), uint32], Tensor[(4, 8, 11), bool]) {
  %425 = fn (%var_5479: uint32) -> (Tensor[(16, 15, 11), uint32], Tensor[(4, 8, 11), bool]) {
    %420 = cast(%var_5479, dtype="uint32") /* ty=uint32 */;
    %421 = cast(meta[relay.Constant][14] /* ty=Tensor[(16, 15, 11), uint32] */, dtype="uint32") /* ty=Tensor[(16, 15, 11), uint32] */;
    %422 = @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */;
    %423 = subtract(%420, %421) /* ty=Tensor[(16, 15, 11), uint32] */;
    %424 = %422.0;
    (%423, %424)
  };
  %425(%var_5490) /* ty=(Tensor[(16, 15, 11), uint32], Tensor[(4, 8, 11), bool]) */
}

def @func_1949() -> Tensor[(4, 8, 11), float64] {
  @func_1310() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_10258(%var_10251: Tensor[(840), int64]) -> (Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) {
  %426 = @func_9956() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %427 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %428 = cast(%var_10251, dtype="int64") /* ty=Tensor[(840), int64] */;
  %429 = reshape(%427, newshape=[]) /* ty=int64 */;
  %430 = reshape(%428, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %431 = @func_6986(%429, %430) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) */;
  %432 = %426.0;
  %433 = %431.1;
  (%432, %433, 8 /* ty=int64 */, %var_10251)
}

def @func_2083(%var_2081: Tensor[(13, 12, 2), float32]) -> (Tensor[(13, 12, 2), float32],) {
  @func_2080(%var_2081) /* ty=(Tensor[(13, 12, 2), float32],) */
}

def @func_6796() -> (Tensor[(96), int32], Tensor[(5, 14, 5), float32], Tensor[(4, 8, 11), float64]) {
  @func_6794() /* ty=(Tensor[(96), int32], Tensor[(5, 14, 5), float32], Tensor[(4, 8, 11), float64]) */
}

def @func_4740() -> Tensor[(4, 8, 11), float64] {
  %434 = fn () -> Tensor[(4, 8, 11), float64] {
    @func_1699() /* ty=Tensor[(4, 8, 11), float64] */
  };
  %434() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_4080(%var_4064: Tensor[(126), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32], Tensor[(4, 8, 11), float64], Tensor[(84), float32]) {
  %435 = cast(%var_4064, dtype="float32") /* ty=Tensor[(126), float32] */;
  %436 = reshape(%435, newshape=[7, 18]) /* ty=Tensor[(7, 18), float32] */;
  %437 = @func_3186(%436) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) */;
  %438 = cast(meta[relay.Constant][15] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %439 = reshape(%438, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %440 = @func_2906(%439) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), bool], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64]) */;
  %441 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
  %442 = %437.1;
  %443 = %440.5;
  (%441, %442, %var_4064, %443, meta[relay.Constant][15] /* ty=Tensor[(84), float32] */)
}

def @func_5920() -> Tensor[(4, 8, 11), bool] {
  %444 = fn () -> Tensor[(4, 8, 11), bool] {
    @func_5203() /* ty=Tensor[(4, 8, 11), bool] */
  };
  %444() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_5963() -> (Tensor[(?, 3, 6), int8],) {
  %445 = @func_4195() /* ty=(Tensor[(?, 3, 6), int8], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %446 = %445.0;
  (%446,)
}

def @func_9457(%var_9455: Tensor[(6, 9, 7), float32]) -> (Tensor[(6, 9, 7), float32],) {
  @func_9454(%var_9455) /* ty=(Tensor[(6, 9, 7), float32],) */
}

def @func_8173() -> (Tensor[(4, 8, 11), float64],) {
  %449 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %447 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %448 = %447.0;
    (%448,)
  };
  %449() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_10398() -> (Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) {
  %450 = @func_7551() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %451 = @func_8458() /* ty=(Tensor[(96), int32],) */;
  %452 = cast(meta[relay.Constant][16] /* ty=Tensor[(231), int32] */, dtype="int32") /* ty=Tensor[(231), int32] */;
  %453 = reshape(%452, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), int32] */;
  %454 = @func_7441(%453) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), float64]) */;
  %455 = %454.1;
  %456 = cast(%455, dtype="int8") /* ty=Tensor[(7, 11, 3), int8] */;
  %457 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(231), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %458 = cast(meta[relay.Constant][16] /* ty=Tensor[(231), int32] */, dtype="int8") /* ty=Tensor[(231), int8] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?), int8] */;
  %460 = %450.0;
  %461 = %451.0;
  %462 = minimum(%458, %459) /* ty=Tensor[(231), int8] */;
  (%460, %461, %462)
}

def @func_14141(%var_14139: uint32, %var_14140: Tensor[(9, 5, 6), uint32]) -> Tensor[(9, 5, 6), uint32] {
  %465 = fn (%var_14131: uint32, %var_14132: Tensor[(9, 5, 6), uint32]) -> Tensor[(9, 5, 6), uint32] {
    %463 = cast(%var_14131, dtype="uint32") /* ty=uint32 */;
    %464 = cast(%var_14132, dtype="uint32") /* ty=Tensor[(9, 5, 6), uint32] */;
    bitwise_xor(%463, %464) /* ty=Tensor[(9, 5, 6), uint32] */
  };
  %465(%var_14139, %var_14140) /* ty=Tensor[(9, 5, 6), uint32] */
}

def @func_2463(%var_2439: Tensor[(7, 3, 4), uint32]) -> Tensor[(7, 3, 4), float64] {
  %466 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 3, 4), uint32] */, dtype="uint32") /* ty=Tensor[(7, 3, 4), uint32] */;
  %467 = shape_of(%var_2439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%var_2439, dtype="uint32") /* ty=Tensor[(7, 3, 4), uint32] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %470 = add(%468, %469) /* ty=Tensor[(7, 3, 4), uint32] */;
  %471 = cast(%470, dtype="float64") /* ty=Tensor[(7, 3, 4), float64] */;
  tan(%471) /* ty=Tensor[(7, 3, 4), float64] */
}

def @func_571(%var_544: Tensor[(7, 11, 3), int16]) -> (Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), int32]) {
  %472 = cast(%var_544, dtype="int16") /* ty=Tensor[(7, 11, 3), int16] */;
  %473 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(7, 11, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 11, 3), int16] */, dtype="int16") /* ty=Tensor[(7, 11, 3), int16] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %476 = left_shift(%474, %475) /* ty=Tensor[(7, 11, 3), int16] */;
  %477 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 11, 3), int16] */, dtype="int8") /* ty=Tensor[(7, 11, 3), int8] */;
  %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%476, dtype="int8") /* ty=Tensor[(7, 11, 3), int8] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %481 = cast(%476, dtype="int32") /* ty=Tensor[(7, 11, 3), int32] */;
  %482 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(7, 11, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 11, 3), int16] */, dtype="int32") /* ty=Tensor[(7, 11, 3), int32] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %485 = subtract(%479, %480) /* ty=Tensor[(7, 11, 3), int8] */;
  %486 = add(%483, %484) /* ty=Tensor[(7, 11, 3), int32] */;
  (%485, %486)
}

def @func_5205() -> Tensor[(4, 8, 11), bool] {
  @func_5203() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_5934() -> Tensor[(4, 8, 11), float64] {
  %487 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %487.0
}

def @func_7776() -> Tensor[(231), int16] {
  @func_7774() /* ty=Tensor[(231), int16] */
}

def @func_10867() -> (Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), bool]) {
  @func_10865() /* ty=(Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), bool]) */
}

def @func_8900() -> (Tensor[(4, 8, 11), float64],) {
  %490 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %488 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %489 = %488.1;
    (%489,)
  };
  %490() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_9446(%var_9438: Tensor[(13, 9, 11), float32]) -> (Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), float32]) {
  %491 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 9, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %492 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 9, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %493 = cast(%var_9438, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %494 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(13, 9, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 9, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %497 = exp(%491) /* ty=Tensor[(13, 9, 11), float32] */;
  %498 = log(%492) /* ty=Tensor[(13, 9, 11), float32] */;
  %499 = floor_mod(%495, %496) /* ty=Tensor[(13, 9, 11), float32] */;
  (%497, %498, %499)
}

def @func_11613() -> (Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(231), int32], Tensor[(4, 8, 11), bool]) {
  %500 = @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %501 = cast(meta[relay.Constant][20] /* ty=Tensor[(231), int32] */, dtype="int32") /* ty=Tensor[(231), int32] */;
  %502 = reshape(%501, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), int32] */;
  %503 = @func_7441(%502) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), float64]) */;
  %504 = %500.3;
  %505 = %503.0;
  %506 = @func_11117() /* ty=Tensor[(4, 8, 11), bool] */;
  (%504, %505, meta[relay.Constant][20] /* ty=Tensor[(231), int32] */, %506)
}

def @func_14693() -> (Tensor[(7, 11, 3), int32],) {
  @func_14691() /* ty=(Tensor[(7, 11, 3), int32],) */
}

def @func_15108() -> Tensor[(4, 8, 11), float64] {
  @func_15106() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_10494() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %507 = @func_6084() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %508 = @func_9932() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(182), float64]) */;
  %509 = %507.0;
  %510 = %508.0;
  (%509, %510)
}

def @func_5616() -> (Tensor[(4, 8, 11), float64],) {
  %513 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %511 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %512 = %511.0;
    (%512,)
  };
  %513() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_15852() -> Tensor[(4, 8, 11), float64] {
  %514 = @func_12233() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %514.0
}

def @main(%var_18366: Tensor[(1, 616), float32], %var_18379: Tensor[(126), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(84), float32], Tensor[(126), float32], Tensor[(1, 616), float64]) {
  %515 = @func_2263() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %516 = cast(%var_18366, dtype="float32") /* ty=Tensor[(1, 616), float32] */;
  %517 = reshape(%516, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), float32] */;
  %518 = @func_10715(%517) /* ty=(Tensor[(8, 7, 11), float32], Tensor[(4, 8, 11), float64]) */;
  %519 = cast(%var_18379, dtype="float32") /* ty=Tensor[(126), float32] */;
  %520 = reshape(%519, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %521 = @func_4083(%520) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32], Tensor[(4, 8, 11), float64], Tensor[(84), float32]) */;
  %522 = cast(%var_18366, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
  %523 = %515.0;
  %524 = %518.1;
  %525 = %521.4;
  %526 = acos(%522) /* ty=Tensor[(1, 616), float64] */;
  (%523, %524, %525, %var_18379, %526)
}

def @func_1311() -> Tensor[(4, 8, 11), float64] {
  %527 = fn () -> Tensor[(4, 8, 11), float64] {
    @func_1297() /* ty=Tensor[(4, 8, 11), float64] */
  };
  %527() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_2053() -> (Tensor[(4, 8, 11), bool],) {
  %528 = @func_1896() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %529 = %528.0;
  %530 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 8, 11), float64] */, dtype="bool") /* ty=Tensor[(4, 8, 11), bool] */;
  %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%529, dtype="bool") /* ty=Tensor[(4, 8, 11), bool] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %534 = less(%532, %533) /* ty=Tensor[(4, 8, 11), bool] */;
  (%534,)
}

def @func_14035() -> Tensor[(4, 8, 11), float64] {
  %536 = fn () -> Tensor[(4, 8, 11), float64] {
    %535 = @func_5615() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %535.0
  };
  %536() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_11805() -> (Tensor[(4, 8, 11), float64],) {
  @func_11803() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_10611() -> Tensor[(4, 8, 11), float64] {
  @func_10609() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_12676(%var_12675: Tensor[(1, 1287), float32]) -> (Tensor[(96), int32], Tensor[(13, 9, 11), float32], Tensor[(1, 1287), float32]) {
  %543 = fn (%var_12667: Tensor[(1, 1287), float32]) -> (Tensor[(96), int32], Tensor[(13, 9, 11), float32], Tensor[(1, 1287), float32]) {
    %537 = @func_10398() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) */;
    %538 = cast(%var_12667, dtype="float32") /* ty=Tensor[(1, 1287), float32] */;
    %539 = reshape(%538, newshape=[1287]) /* ty=Tensor[(1287), float32] */;
    %540 = @func_11447(%539) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(13, 9, 11), float32], Tensor[(1287), float32]) */;
    %541 = %537.1;
    %542 = %540.1;
    (%541, %542, %var_12667)
  };
  %543(%var_12675) /* ty=(Tensor[(96), int32], Tensor[(13, 9, 11), float32], Tensor[(1, 1287), float32]) */
}

def @func_10520() -> (Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  %544 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %545 = @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %546 = %544.1;
  %547 = %545.3;
  (%546, %547)
}

def @func_14752() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_14750() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_17634() -> (Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  @func_17632() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */
}

def @func_17933(%var_17931: Tensor[(18), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(?, 3, 6), int8], Tensor[(18), float32], Tensor[(4, 8, 11), float64], Tensor[(126), float32]) {
  @func_17930(%var_17931) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(?, 3, 6), int8], Tensor[(18), float32], Tensor[(4, 8, 11), float64], Tensor[(126), float32]) */
}

def @func_18162() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 3), float32], Tensor[(11, 13, 6), float64]) {
  %556 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 3), float32], Tensor[(11, 13, 6), float64]) {
    %548 = @func_8828() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %549 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
    %550 = reshape(%549, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %551 = @func_17930(%550) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(?, 3, 6), int8], Tensor[(18), float32], Tensor[(4, 8, 11), float64], Tensor[(126), float32]) */;
    %552 = @func_9485() /* ty=(Tensor[(11, 13, 6), float64],) */;
    %553 = %548.0;
    %554 = %551.0;
    %555 = %552.0;
    (%553, %554, meta[relay.Constant][22] /* ty=Tensor[(6, 3), float32] */, %555)
  };
  %556() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 3), float32], Tensor[(11, 13, 6), float64]) */
}

def @func_10865() -> (Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), bool]) {
  %557 = @func_8626() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %558 = %557.0;
  %559 = @func_8445() /* ty=Tensor[(4, 8, 11), bool] */;
  (%558, %559)
}

def @func_13478() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %560 = @func_10771() /* ty=Tensor[(4, 8, 11), float64] */;
  %561 = @func_3736() /* ty=Tensor[(4, 8, 11), float64] */;
  (%560, %561)
}

def @func_2762() -> (Tensor[(4, 8, 11), float64],) {
  %563 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %562 = @func_1949() /* ty=Tensor[(4, 8, 11), float64] */;
    (%562,)
  };
  %563() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_15766() -> (Tensor[(4, 8, 11), float64], Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64]) {
  %570 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64]) {
    %564 = @func_11278() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96, 1), int32]) */;
    %565 = @func_4423() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) */;
    %566 = @func_8566() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %567 = %564.1;
    %568 = %565.0;
    %569 = %566.0;
    (%567, %568, %569)
  };
  %570() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64]) */
}

def @func_8527() -> Tensor[(4, 8, 11), float64] {
  @func_8525() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_7967(%var_7965: Tensor[(4, 14, 13), float32], %var_7966: Tensor[(16, 22), float64]) -> (Tensor[(4, 14, 13), float32], Tensor[(432), float32], Tensor[(16, 22), float64], Tensor[(432), float32], Tensor[(4, 14, 13), float32]) {
  %583 = fn (%var_7926: Tensor[(4, 14, 13), float32], %var_7933: Tensor[(16, 22), float64]) -> (Tensor[(4, 14, 13), float32], Tensor[(432), float32], Tensor[(16, 22), float64], Tensor[(432), float32], Tensor[(4, 14, 13), float32]) {
    %571 = cast(%var_7926, dtype="float32") /* ty=Tensor[(4, 14, 13), float32] */;
    %572 = log10(%571) /* ty=Tensor[(4, 14, 13), float32] */;
    %573 = cast(%572, dtype="float32") /* ty=Tensor[(4, 14, 13), float32] */;
    %574 = cast(%var_7933, dtype="float64") /* ty=Tensor[(16, 22), float64] */;
    %575 = cast(meta[relay.Constant][23] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %576 = reshape(%574, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
    %577 = reshape(%575, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %578 = @func_2665(%576, %577) /* ty=(Tensor[(4, 8, 11), int8], Tensor[(3, 12, 12), float32], Tensor[(432), float32]) */;
    %579 = cast(%572, dtype="float32") /* ty=Tensor[(4, 14, 13), float32] */;
    %580 = rsqrt(%573) /* ty=Tensor[(4, 14, 13), float32] */;
    %581 = %578.2;
    %582 = atan(%579) /* ty=Tensor[(4, 14, 13), float32] */;
    (%580, %581, %var_7933, meta[relay.Constant][23] /* ty=Tensor[(432), float32] */, %582)
  };
  %583(%var_7965, %var_7966) /* ty=(Tensor[(4, 14, 13), float32], Tensor[(432), float32], Tensor[(16, 22), float64], Tensor[(432), float32], Tensor[(4, 14, 13), float32]) */
}

def @func_12627() -> Tensor[(96), int32] {
  @func_12625() /* ty=Tensor[(96), int32] */
}

def @func_9555() -> (Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_9553() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_14691() -> (Tensor[(7, 11, 3), int32],) {
  %584 = @func_4423() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) */;
  %585 = %584.2;
  (%585,)
}

def @func_3186(%var_3161: Tensor[(7, 18), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) {
  %586 = @func_2843() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %587 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 18), float32] */, dtype="float64") /* ty=Tensor[(1, 18), float64] */;
  %588 = cast(%var_3161, dtype="float64") /* ty=Tensor[(7, 18), float64] */;
  %589 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 18), float32] */, dtype="float32") /* ty=Tensor[(1, 18), float32] */;
  %590 = reshape(%589, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
  %591 = @func_2592(%590) /* ty=(Tensor[(?, 3, 6), int8],) */;
  %592 = %591.0;
  %593 = cast(%592, dtype="float32") /* ty=Tensor[(?, 3, 6), float32] */;
  %594 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(1, 18), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %595 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 18), float32] */, dtype="float32") /* ty=Tensor[(1, 18), float32] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %597 = subtract(%595, %596) /* ty=Tensor[(?, 18), float32] */;
  %598 = cast(%var_3161, dtype="bool") /* ty=Tensor[(7, 18), bool] */;
  %599 = cast(%597, dtype="bool") /* ty=Tensor[(?, 18), bool] */;
  %600 = %586.0;
  %601 = power(%587, %588) /* ty=Tensor[(7, 18), float64] */;
  %602 = not_equal(%598, %599) /* ty=Tensor[(7, 18), bool] */;
  (%600, %601, %602)
}

def @func_4897(%var_4895: Tensor[(4, 8, 11), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_4894(%var_4895) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_2329(%var_2328: Tensor[(7, 4, 3), float32]) -> Tensor[(7, 4, 3), float32] {
  %604 = fn (%var_2323: Tensor[(7, 4, 3), float32]) -> Tensor[(7, 4, 3), float32] {
    %603 = cast(%var_2323, dtype="float32") /* ty=Tensor[(7, 4, 3), float32] */;
    acos(%603) /* ty=Tensor[(7, 4, 3), float32] */
  };
  %604(%var_2328) /* ty=Tensor[(7, 4, 3), float32] */
}

def @func_11803() -> (Tensor[(4, 8, 11), float64],) {
  %605 = @func_1310() /* ty=Tensor[(4, 8, 11), float64] */;
  (%605,)
}

def @func_15106() -> Tensor[(4, 8, 11), float64] {
  @func_1297() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_14725() -> Tensor[(3072), float64] {
  @func_14723() /* ty=Tensor[(3072), float64] */
}

def @func_16285(%var_16283: uint16, %var_16284: Tensor[(3, 14, 4), uint16]) -> Tensor[(3, 14, 4), bool] {
  %608 = fn (%var_16275: uint16, %var_16276: Tensor[(3, 14, 4), uint16]) -> Tensor[(3, 14, 4), bool] {
    %606 = cast(%var_16275, dtype="bool") /* ty=bool */;
    %607 = cast(%var_16276, dtype="bool") /* ty=Tensor[(3, 14, 4), bool] */;
    equal(%606, %607) /* ty=Tensor[(3, 14, 4), bool] */
  };
  %608(%var_16283, %var_16284) /* ty=Tensor[(3, 14, 4), bool] */
}

def @func_2428() -> (Tensor[(4, 8, 11), float64],) {
  %611 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %609 = @func_1467() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %610 = %609.0;
    (%610,)
  };
  %611() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_5169() -> (Tensor[(6, 2, 8), bool],) {
  %612 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %613 = %612.1;
  (%613,)
}

def @func_15958(%var_15956: Tensor[(1386), float64]) -> (Tensor[(4, 8, 11), bool], Tensor[(7, 18), float64], Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64], Tensor[(1386), float64]) {
  @func_15955(%var_15956) /* ty=(Tensor[(4, 8, 11), bool], Tensor[(7, 18), float64], Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64], Tensor[(1386), float64]) */
}

def @func_7053() -> (Tensor[(4, 8, 11), bool],) {
  @func_7051() /* ty=(Tensor[(4, 8, 11), bool],) */
}

def @func_4287() -> (Tensor[(4, 8, 11), float64],) {
  %614 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %615 = %614.0;
  (%615,)
}

def @func_13290(%var_13289: Tensor[(4, 10, 4), float32]) -> (Tensor[(4, 10, 4), float32],) {
  %618 = fn (%var_13281: Tensor[(4, 10, 4), float32]) -> (Tensor[(4, 10, 4), float32],) {
    %616 = cast(%var_13281, dtype="float32") /* ty=Tensor[(4, 10, 4), float32] */;
    %617 = log10(%616) /* ty=Tensor[(4, 10, 4), float32] */;
    (%617,)
  };
  %618(%var_13289) /* ty=(Tensor[(4, 10, 4), float32],) */
}

def @func_7595(%var_7589: Tensor[(12, 16, 5), float64]) -> Tensor[(12, 16, 5), float64] {
  %619 = cast(%var_7589, dtype="float64") /* ty=Tensor[(12, 16, 5), float64] */;
  cos(%619) /* ty=Tensor[(12, 16, 5), float64] */
}

def @func_7199() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_7197() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_7586() -> (Tensor[(4, 8, 11), float64],) {
  %620 = @func_5565() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %621 = %620.0;
  (%621,)
}

def @func_17028(%var_17026: Tensor[(13, 4, 12), float64], %var_17027: Tensor[(21, 6), float32]) -> (Tensor[(13, 4, 12), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(84), float32], Tensor[(21, 6), float32]) {
  %633 = fn (%var_16982: Tensor[(13, 4, 12), float64], %var_17017: Tensor[(21, 6), float32]) -> (Tensor[(13, 4, 12), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(84), float32], Tensor[(21, 6), float32]) {
    %622 = cast(%var_16982, dtype="float64") /* ty=Tensor[(13, 4, 12), float64] */;
    %623 = @func_8566() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %624 = @func_7197() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %625 = cast(%var_17017, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
    %626 = reshape(%625, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %627 = @func_4080(%626) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32], Tensor[(4, 8, 11), float64], Tensor[(84), float32]) */;
    %628 = tan(%622) /* ty=Tensor[(13, 4, 12), float64] */;
    %629 = %623.0;
    %630 = @func_13255() /* ty=Tensor[(4, 8, 11), float64] */;
    %631 = %624.0;
    %632 = %627.4;
    (%628, %629, %630, %631, %632, %var_17017)
  };
  %633(%var_17026, %var_17027) /* ty=(Tensor[(13, 4, 12), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(84), float32], Tensor[(21, 6), float32]) */
}

def @func_16617() -> Tensor[(4, 8, 11), float64] {
  %635 = fn () -> Tensor[(4, 8, 11), float64] {
    %634 = @func_8899() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %634.0
  };
  %635() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_17667() -> (Tensor[(1, 16, 9), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32]) {
  %641 = fn () -> (Tensor[(1, 16, 9), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32]) {
    %636 = @func_9553() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %637 = cast(meta[relay.Constant][25] /* ty=Tensor[(96), int32] */, dtype="int32") /* ty=Tensor[(96), int32] */;
    %638 = reshape(%637, newshape=[6, 2, 8]) /* ty=Tensor[(6, 2, 8), int32] */;
    %639 = %636.1;
    %640 = @func_997(%638) /* ty=Tensor[(6, 2, 8), bool] */;
    (%639, %640, meta[relay.Constant][25] /* ty=Tensor[(96), int32] */)
  };
  %641() /* ty=(Tensor[(1, 16, 9), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32]) */
}

def @func_2526() -> Tensor[(4, 8, 11), float64] {
  %642 = @func_2261() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %642.0
}

def @func_11761(%var_11760: Tensor[(378), float32]) -> (Tensor[(432), float32], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) {
  %650 = fn (%var_11753: Tensor[(378), float32]) -> (Tensor[(432), float32], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) {
    %643 = @func_10520() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
    %644 = cast(%var_11753, dtype="float32") /* ty=Tensor[(378), float32] */;
    %645 = reshape(%644, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), float32] */;
    %646 = @func_9454(%645) /* ty=(Tensor[(6, 9, 7), float32],) */;
    %647 = %643.1;
    %648 = %646.0;
    %649 = @func_5475() /* ty=Tensor[(4, 8, 11), float64] */;
    (%647, %648, %var_11753, %649)
  };
  %650(%var_11760) /* ty=(Tensor[(432), float32], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) */
}

def @func_15469(%var_15442: Tensor[(8, 30), uint16]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(350), float32], Tensor[(8, 30), uint16], Tensor[(4, 8, 11), float64]) {
  %651 = @func_10494() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %652 = @func_7766() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %653 = cast(%var_15442, dtype="uint16") /* ty=Tensor[(8, 30), uint16] */;
  %654 = reshape(%653, newshape=[8, 6, 5]) /* ty=Tensor[(8, 6, 5), uint16] */;
  %655 = @func_2211(%654) /* ty=(Tensor[(8, 6, 5), float32], Tensor[(350), float32]) */;
  %656 = %651.1;
  %657 = %652.0;
  %658 = %655.1;
  %659 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
  (%656, %657, %658, %var_15442, %659)
}

def @func_15228() -> (Tensor[(4, 8, 11), float64], Tensor[(6, 3), float32], Tensor[(231), int16]) {
  %665 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(6, 3), float32], Tensor[(231), int16]) {
    %660 = @func_14846() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %661 = @func_4236() /* ty=(Tensor[(6, 3), float32],) */;
    %662 = %660.0;
    %663 = %661.0;
    %664 = @func_7774() /* ty=Tensor[(231), int16] */;
    (%662, %663, %664)
  };
  %665() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 3), float32], Tensor[(231), int16]) */
}

def @func_5264() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %670 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %666 = @func_1619() /* ty=(Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) */;
    %667 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %668 = %666.6;
    %669 = %667.0;
    (%668, %669)
  };
  %670() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_17813() -> (Tensor[(4, 8, 11), float64],) {
  %671 = @func_4692() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %672 = %671.0;
  (%672,)
}

def @func_17151() -> (Tensor[(4, 8, 11), float64],) {
  @func_17149() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_3327() -> (Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %680 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %673 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %674 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
    %675 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %676 = %673.0;
    %677 = %674.2;
    %678 = @func_1310() /* ty=Tensor[(4, 8, 11), float64] */;
    %679 = %675.0;
    (%676, %677, %678, %679)
  };
  %680() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_6329() -> Tensor[(4, 8, 11), bool] {
  %681 = @func_2349() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(6, 2, 8), bool]) */;
  %681.1
}

def @func_17344() -> Tensor[(4, 8, 11), bool] {
  @func_17342() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_17930(%var_17888: Tensor[(18), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(?, 3, 6), int8], Tensor[(18), float32], Tensor[(4, 8, 11), float64], Tensor[(126), float32]) {
  %682 = @func_10568() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %683 = @func_16065() /* ty=(Tensor[(11, 14, 9), float64], Tensor[(96), int32]) */;
  %684 = cast(%var_17888, dtype="float32") /* ty=Tensor[(18), float32] */;
  %685 = reshape(%684, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
  %686 = @func_2592(%685) /* ty=(Tensor[(?, 3, 6), int8],) */;
  %687 = @func_7223() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %688 = @func_13334() /* ty=(Tensor[(4, 8, 11), bool], Tensor[(1, 13, 14), float64], Tensor[(182), float64], Tensor[(14, 4, 15), int64], Tensor[(126), float32], Tensor[(4, 8, 11), float64]) */;
  %689 = %682.1;
  %690 = %683.1;
  %691 = %686.0;
  %692 = %687.0;
  %693 = %688.4;
  (%689, %690, %691, %var_17888, %692, %693)
}

def @func_15854() -> Tensor[(4, 8, 11), float64] {
  @func_15852() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_17180() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %694 = @func_13172() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %695 = @func_10089() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */;
  %696 = @func_4692() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %697 = %694.1;
  %698 = %695.2;
  %699 = %696.0;
  (%697, %698, %699)
}

def @func_1456(%var_1427: Tensor[(3, 12, 12), float32]) -> (Tensor[(3, 12, 12), float32],) {
  %700 = cast(%var_1427, dtype="float32") /* ty=Tensor[(3, 12, 12), float32] */;
  %701 = log2(%700) /* ty=Tensor[(3, 12, 12), float32] */;
  (%701,)
}

def @func_7443(%var_7442: Tensor[(7, 11, 3), int32]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), float64]) {
  %711 = fn (%var_7436: Tensor[(7, 11, 3), int32]) -> (Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), float64]) {
    %702 = @func_4169() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) */;
    %703 = @func_4423() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) */;
    %704 = %703.2;
    %705 = cast(%var_7436, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
    %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
    %707 = cast(%704, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
    %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %709 = %702.0;
    %710 = divide(%707, %708) /* ty=Tensor[(7, 11, 3), float64] */;
    (%709, %710)
  };
  %711(%var_7442) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), float64]) */
}

def @func_8657() -> Tensor[(4, 8, 11), float64] {
  @func_8655() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_6446(%var_6430: Tensor[(1, 16, 9), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64]) {
  %712 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %713 = cast(%var_6430, dtype="float64") /* ty=Tensor[(1, 16, 9), float64] */;
  %714 = exp(%713) /* ty=Tensor[(1, 16, 9), float64] */;
  %715 = cast(%714, dtype="float64") /* ty=Tensor[(1, 16, 9), float64] */;
  %716 = %712.0;
  %717 = sqrt(%715) /* ty=Tensor[(1, 16, 9), float64] */;
  (%716, %717)
}

def @func_12067() -> (Tensor[(4, 8, 11), float64],) {
  %720 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %718 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %719 = %718.0;
    (%719,)
  };
  %720() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_3107() -> (Tensor[(4, 8, 11), bool],) {
  @func_3105() /* ty=(Tensor[(4, 8, 11), bool],) */
}

def @func_12925() -> Tensor[(4, 8, 11), float64] {
  @func_12923() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_9884() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %725 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %721 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %722 = @func_7223() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %723 = %721.0;
    %724 = %722.0;
    (%723, %724)
  };
  %725() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_10890(%var_10877: Tensor[(312), float32]) -> (Tensor[(11, 13, 6), float64], Tensor[(312), float32], Tensor[(1, 312), float32]) {
  %726 = @func_9485() /* ty=(Tensor[(11, 13, 6), float64],) */;
  %727 = cast(%var_10877, dtype="float32") /* ty=Tensor[(312), float32] */;
  %728 = reshape(%727, newshape=[1, 312]) /* ty=Tensor[(1, 312), float32] */;
  %729 = @func_9708(%728) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(13, 12, 2), float32], Tensor[(1, 312), float32]) */;
  %730 = %729.2;
  %731 = cast(%730, dtype="float32") /* ty=Tensor[(1, 312), float32] */;
  %732 = %726.0;
  %733 = sin(%731) /* ty=Tensor[(1, 312), float32] */;
  (%732, %var_10877, %733)
}

def @func_10715(%var_10714: Tensor[(8, 7, 11), float32]) -> (Tensor[(8, 7, 11), float32], Tensor[(4, 8, 11), float64]) {
  %738 = fn (%var_10702: Tensor[(8, 7, 11), float32]) -> (Tensor[(8, 7, 11), float32], Tensor[(4, 8, 11), float64]) {
    %734 = cast(%var_10702, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
    %735 = @func_1647() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) */;
    %736 = log(%734) /* ty=Tensor[(8, 7, 11), float32] */;
    %737 = %735.0;
    (%736, %737)
  };
  %738(%var_10714) /* ty=(Tensor[(8, 7, 11), float32], Tensor[(4, 8, 11), float64]) */
}

def @func_7051() -> (Tensor[(4, 8, 11), bool],) {
  %739 = @func_3105() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %740 = %739.0;
  (%740,)
}

def @func_8503() -> Tensor[(4, 8, 11), float64] {
  @func_8501() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_11153(%var_11149: Tensor[(312), float32]) -> (Tensor[(12, 16, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) {
  %741 = @func_1647() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) */;
  %742 = cast(%var_11149, dtype="float32") /* ty=Tensor[(312), float32] */;
  %743 = reshape(%742, newshape=[13, 12, 2]) /* ty=Tensor[(13, 12, 2), float32] */;
  %744 = @func_2080(%743) /* ty=(Tensor[(13, 12, 2), float32],) */;
  %745 = %741.1;
  %746 = %744.0;
  (%745, %746, %var_11149)
}

def @func_11449(%var_11448: Tensor[(1287), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(13, 9, 11), float32], Tensor[(1287), float32]) {
  %752 = fn (%var_11428: Tensor[(1287), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(13, 9, 11), float32], Tensor[(1287), float32]) {
    %747 = cast(%var_11428, dtype="float32") /* ty=Tensor[(1287), float32] */;
    %748 = reshape(%747, newshape=[13, 9, 11]) /* ty=Tensor[(13, 9, 11), float32] */;
    %749 = @func_9446(%748) /* ty=(Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), float32]) */;
    %750 = @func_8327() /* ty=Tensor[(4, 8, 11), float64] */;
    %751 = %749.0;
    (%750, %751, %var_11428)
  };
  %752(%var_11448) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(13, 9, 11), float32], Tensor[(1287), float32]) */
}

def @func_12899(%var_12896: Tensor[(18), float32], %var_12897: Tensor[(96), int32], %var_12898: uint32) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(18), float32], Tensor[(96), int32], Tensor[(4, 8, 11), bool], uint32, Tensor[(4, 8, 11), float64]) {
  %768 = fn (%var_12876: Tensor[(18), float32], %var_12877: Tensor[(96), int32], %var_12887: uint32) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(18), float32], Tensor[(96), int32], Tensor[(4, 8, 11), bool], uint32, Tensor[(4, 8, 11), float64]) {
    %753 = @func_7710() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) */;
    %754 = cast(%var_12876, dtype="float32") /* ty=Tensor[(18), float32] */;
    %755 = cast(%var_12877, dtype="int32") /* ty=Tensor[(96), int32] */;
    %756 = reshape(%754, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %757 = reshape(%755, newshape=[96]) /* ty=Tensor[(96), int32] */;
    %758 = @func_6891(%756, %757) /* ty=(Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(18), float32], Tensor[(96), int32], Tensor[(96), int32], Tensor[(4, 8, 11), float64]) */;
    %759 = cast(%var_12887, dtype="uint32") /* ty=uint32 */;
    %760 = reshape(%759, newshape=[]) /* ty=uint32 */;
    %761 = @func_5489(%760) /* ty=(Tensor[(16, 15, 11), uint32], Tensor[(4, 8, 11), bool]) */;
    %762 = @func_9274() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %763 = %753.0;
    %764 = @func_1310() /* ty=Tensor[(4, 8, 11), float64] */;
    %765 = %758.4;
    %766 = %761.1;
    %767 = %762.0;
    (%763, %764, %765, %var_12876, %var_12877, %766, %var_12887, %767)
  };
  %768(%var_12896, %var_12897, %var_12898) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(18), float32], Tensor[(96), int32], Tensor[(4, 8, 11), bool], uint32, Tensor[(4, 8, 11), float64]) */
}

def @func_14723() -> Tensor[(3072), float64] {
  %769 = @func_5105() /* ty=(Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %770 = %769.0;
  %771 = cast(%770, dtype="float64") /* ty=Tensor[(3072), float64] */;
  log10(%771) /* ty=Tensor[(3072), float64] */
}

def @func_9934() -> (Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(182), float64]) {
  @func_9932() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(182), float64]) */
}

def @func_16501(%var_16500: Tensor[(13, 14, 15), float32]) -> (Tensor[(13, 14, 15), int16], Tensor[(13, 14, 15), float64], Tensor[(7, 3, 4), float64], Tensor[(84), uint32]) {
  %786 = fn (%var_16439: Tensor[(13, 14, 15), float32]) -> (Tensor[(13, 14, 15), int16], Tensor[(13, 14, 15), float64], Tensor[(7, 3, 4), float64], Tensor[(84), uint32]) {
    %772 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 14, 15), float32] */, dtype="int16") /* ty=Tensor[(13, 14, 15), int16] */;
    %773 = shape_of(%var_16439, dtype="int32") /* ty=Tensor[(3), int32] */;
    %774 = cast(%var_16439, dtype="int16") /* ty=Tensor[(13, 14, 15), int16] */;
    %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %776 = cast(%var_16439, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
    %777 = atan(%776) /* ty=Tensor[(13, 14, 15), float32] */;
    %778 = cast(%777, dtype="float64") /* ty=Tensor[(13, 14, 15), float64] */;
    %779 = cosh(%778) /* ty=Tensor[(13, 14, 15), float64] */;
    %780 = cast(%779, dtype="float64") /* ty=Tensor[(13, 14, 15), float64] */;
    %781 = cast(meta[relay.Constant][27] /* ty=Tensor[(84), uint32] */, dtype="uint32") /* ty=Tensor[(84), uint32] */;
    %782 = reshape(%781, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), uint32] */;
    %783 = subtract(%774, %775) /* ty=Tensor[(13, 14, 15), int16] */;
    %784 = sqrt(%780) /* ty=Tensor[(13, 14, 15), float64] */;
    %785 = @func_2463(%782) /* ty=Tensor[(7, 3, 4), float64] */;
    (%783, %784, %785, meta[relay.Constant][27] /* ty=Tensor[(84), uint32] */)
  };
  %786(%var_16500) /* ty=(Tensor[(13, 14, 15), int16], Tensor[(13, 14, 15), float64], Tensor[(7, 3, 4), float64], Tensor[(84), uint32]) */
}

def @func_8626() -> (Tensor[(4, 8, 11), bool],) {
  %787 = @func_6428() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %788 = %787.0;
  (%788,)
}

def @func_6646(%var_6645: Tensor[(3072), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64]) {
  %805 = fn (%var_6608: Tensor[(3072), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64]) {
    %789 = @func_5820() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %790 = @func_2261() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %791 = cast(%var_6608, dtype="float64") /* ty=Tensor[(3072), float64] */;
    %792 = reshape(%791, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
    %793 = @func_144(%792) /* ty=(Tensor[(12, 16, 16), float64],) */;
    %794 = %789.0;
    %795 = cast(%794, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
    %796 = reshape(%795, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
    %797 = @func_1376(%796) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */;
    %798 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %799 = @func_6008() /* ty=(Tensor[(11, 13, 6), float64],) */;
    %800 = %790.0;
    %801 = %793.0;
    %802 = %797.1;
    %803 = %798.0;
    %804 = %799.0;
    (%794, %800, %801, %var_6608, %802, %803, %804)
  };
  %805(%var_6645) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64]) */
}

def @func_16683() -> (Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64], Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 3, 4), float64], Tensor[(1, 84), uint32], Tensor[(4, 8, 11), float64]) {
  %806 = @func_6184() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %807 = @func_6008() /* ty=(Tensor[(11, 13, 6), float64],) */;
  %808 = @func_15765() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64]) */;
  %809 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 84), uint32] */, dtype="uint32") /* ty=Tensor[(1, 84), uint32] */;
  %810 = reshape(%809, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), uint32] */;
  %811 = @func_7766() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %812 = %806.0;
  %813 = %807.0;
  %814 = %808.1;
  %815 = @func_6122() /* ty=Tensor[(4, 8, 11), float64] */;
  %816 = @func_2463(%810) /* ty=Tensor[(7, 3, 4), float64] */;
  %817 = %811.0;
  (%812, %813, %814, %815, %816, meta[relay.Constant][28] /* ty=Tensor[(1, 84), uint32] */, %817)
}

def @func_18027() -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), bool], Tensor[(1386), float64], Tensor[(4, 8, 11), float64], Tensor[(18), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_18025() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), bool], Tensor[(1386), float64], Tensor[(4, 8, 11), float64], Tensor[(18), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_16796() -> (Tensor[(432), float32],) {
  %818 = @func_11613() /* ty=(Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(231), int32], Tensor[(4, 8, 11), bool]) */;
  %819 = %818.0;
  (%819,)
}

def @func_16435(%var_16434: Tensor[(3, 10, 14), float32]) -> Tensor[(3, 10, 14), float32] {
  %821 = fn (%var_16423: Tensor[(3, 10, 14), float32]) -> Tensor[(3, 10, 14), float32] {
    %820 = cast(%var_16423, dtype="float32") /* ty=Tensor[(3, 10, 14), float32] */;
    erf(%820) /* ty=Tensor[(3, 10, 14), float32] */
  };
  %821(%var_16434) /* ty=Tensor[(3, 10, 14), float32] */
}

def @func_15152() -> (Tensor[(4, 8, 11), float64], Tensor[(1536, 2), int16]) {
  %822 = @func_11278() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96, 1), int32]) */;
  %823 = @func_1979() /* ty=(Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) */;
  %824 = %823.2;
  %825 = cast(meta[relay.Constant][29] /* ty=Tensor[(1536, 2), float64] */, dtype="int16") /* ty=Tensor[(1536, 2), int16] */;
  %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(2), int32] */;
  %827 = cast(%824, dtype="int16") /* ty=Tensor[(1536, 2), int16] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %829 = %822.2;
  %830 = multiply(%827, %828) /* ty=Tensor[(1536, 2), int16] */;
  (%829, %830)
}

def @func_17273(%var_17271: Tensor[(16, 7, 1), float32], %var_17272: Tensor[(16, 7, 6), float32]) -> (Tensor[(16, 7, 6), bool],) {
  @func_17269(%var_17271, %var_17272) /* ty=(Tensor[(16, 7, 6), bool],) */
}

def @func_13845() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %831 = @func_11406() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), uint32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %832 = @func_8172() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %833 = %831.1;
  %834 = %832.0;
  (%833, %834)
}

def @func_8655() -> Tensor[(4, 8, 11), float64] {
  @func_4016() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_8458() -> (Tensor[(96), int32],) {
  %835 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %836 = %835.2;
  (%836,)
}

def @func_8409() -> Tensor[(4, 8, 11), float64] {
  %837 = fn () -> Tensor[(4, 8, 11), float64] {
    @func_3425() /* ty=Tensor[(4, 8, 11), float64] */
  };
  %837() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_7247() -> Tensor[(4, 8, 11), float64] {
  %838 = @func_6184() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %838.0
}

def @func_5024() -> (Tensor[(4, 8, 11), float64],) {
  %841 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %839 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %840 = %839.0;
    (%840,)
  };
  %841() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_3100() -> (Tensor[(4, 8, 11), float64],) {
  %842 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
  (%842,)
}

def @func_8016() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %843 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %844 = %843.0;
  %845 = @func_3736() /* ty=Tensor[(4, 8, 11), float64] */;
  (%844, %845)
}

def @func_9513(%var_9512: Tensor[(2, 12, 1), float64]) -> (Tensor[(2, 12, 1), float64], Tensor[(4, 8, 11), float64]) {
  %849 = fn (%var_9506: Tensor[(2, 12, 1), float64]) -> (Tensor[(2, 12, 1), float64], Tensor[(4, 8, 11), float64]) {
    %846 = cast(%var_9506, dtype="float64") /* ty=Tensor[(2, 12, 1), float64] */;
    %847 = asinh(%846) /* ty=Tensor[(2, 12, 1), float64] */;
    %848 = @func_3736() /* ty=Tensor[(4, 8, 11), float64] */;
    (%847, %848)
  };
  %849(%var_9512) /* ty=(Tensor[(2, 12, 1), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_5965() -> (Tensor[(?, 3, 6), int8],) {
  @func_5963() /* ty=(Tensor[(?, 3, 6), int8],) */
}

def @func_17218() -> (Tensor[(4, 8, 11), float64], Tensor[(378), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) {
  %858 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(378), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) {
    %850 = @func_16958() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %851 = cast(meta[relay.Constant][30] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
    %852 = reshape(%851, newshape=[378]) /* ty=Tensor[(378), float32] */;
    %853 = @func_11759(%852) /* ty=(Tensor[(432), float32], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) */;
    %854 = @func_14619() /* ty=(Tensor[(96), int32], Tensor[(4, 8, 11), float64]) */;
    %855 = %850.0;
    %856 = %853.2;
    %857 = %854.1;
    (%855, %856, meta[relay.Constant][30] /* ty=Tensor[(378), float32] */, %857)
  };
  %858() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(378), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) */
}

def @func_11691(%var_11689: Tensor[(840), int64], %var_11690: uint32) -> (Tensor[(4, 8, 11), float64], Tensor[(840), int64], Tensor[(840), int64], Tensor[(4, 8, 11), float64], uint32, Tensor[(4, 8, 11), bool]) {
  %870 = fn (%var_11641: Tensor[(840), int64], %var_11652: uint32) -> (Tensor[(4, 8, 11), float64], Tensor[(840), int64], Tensor[(840), int64], Tensor[(4, 8, 11), float64], uint32, Tensor[(4, 8, 11), bool]) {
    %859 = @func_8801() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %860 = cast(%var_11641, dtype="int64") /* ty=Tensor[(840), int64] */;
    %861 = reshape(%860, newshape=[840]) /* ty=Tensor[(840), int64] */;
    %862 = @func_10258(%861) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) */;
    %863 = cast(%var_11652, dtype="uint32") /* ty=uint32 */;
    %864 = reshape(%863, newshape=[]) /* ty=uint32 */;
    %865 = @func_5743(%864) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], uint32, Tensor[(16, 15, 11), float64]) */;
    %866 = %859.0;
    %867 = %862.3;
    %868 = %865.2;
    %869 = @func_2557() /* ty=Tensor[(4, 8, 11), bool] */;
    (%866, %867, %var_11641, %868, %var_11652, %869)
  };
  %870(%var_11689, %var_11690) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(840), int64], Tensor[(840), int64], Tensor[(4, 8, 11), float64], uint32, Tensor[(4, 8, 11), bool]) */
}

def @func_4425() -> (Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) {
  @func_4423() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) */
}

def @func_12961() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %871 = @func_5820() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %872 = @func_10494() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %873 = %871.0;
  %874 = %872.0;
  (%873, %874)
}

def @func_1701() -> Tensor[(4, 8, 11), float64] {
  @func_1699() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_6400(%var_6399: Tensor[(3072), float64]) -> (Tensor[(6, 2, 8), bool], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) {
  %882 = fn (%var_6384: Tensor[(3072), float64]) -> (Tensor[(6, 2, 8), bool], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) {
    %875 = @func_5169() /* ty=(Tensor[(6, 2, 8), bool],) */;
    %876 = cast(%var_6384, dtype="float64") /* ty=Tensor[(3072), float64] */;
    %877 = reshape(%876, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
    %878 = @func_144(%877) /* ty=(Tensor[(12, 16, 16), float64],) */;
    %879 = %875.0;
    %880 = @func_4016() /* ty=Tensor[(4, 8, 11), float64] */;
    %881 = %878.0;
    (%879, %880, %881, %var_6384)
  };
  %882(%var_6399) /* ty=(Tensor[(6, 2, 8), bool], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) */
}

def @func_3408(%var_3353: Tensor[(4, 1, 5), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, ?, 5), int8]) {
  %883 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %884 = cast(%var_3353, dtype="float64") /* ty=Tensor[(4, 1, 5), float64] */;
  %885 = sinh(%884) /* ty=Tensor[(4, 1, 5), float64] */;
  %886 = cast(%885, dtype="int8") /* ty=Tensor[(4, 1, 5), int8] */;
  %887 = shape_of(%var_3353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %888 = cast(%var_3353, dtype="int8") /* ty=Tensor[(4, 1, 5), int8] */;
  %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %890 = %883.0;
  %891 = bitwise_and(%888, %889) /* ty=Tensor[(4, ?, 5), int8] */;
  (%890, %891)
}

def @func_13999() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(126, 3), float32]) {
  %892 = @func_8801() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %893 = cast(meta[relay.Constant][31] /* ty=Tensor[(126, 3), float32] */, dtype="float32") /* ty=Tensor[(126, 3), float32] */;
  %894 = reshape(%893, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %895 = @func_11759(%894) /* ty=(Tensor[(432), float32], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) */;
  %896 = %892.0;
  %897 = %895.3;
  (%896, %897, meta[relay.Constant][31] /* ty=Tensor[(126, 3), float32] */)
}

def @func_10772() -> Tensor[(4, 8, 11), float64] {
  %898 = fn () -> Tensor[(4, 8, 11), float64] {
    @func_8048() /* ty=Tensor[(4, 8, 11), float64] */
  };
  %898() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_8445() -> Tensor[(4, 8, 11), bool] {
  @func_5203() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_8628() -> (Tensor[(4, 8, 11), bool],) {
  @func_8626() /* ty=(Tensor[(4, 8, 11), bool],) */
}

def @func_14409() -> Tensor[(7, 8, 7), float64] {
  @func_14407() /* ty=Tensor[(7, 8, 7), float64] */
}

def @func_12564(%var_12535: Tensor[(9, 13, 1), float64]) -> (Tensor[(9, 13, 1), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) {
  %899 = cast(%var_12535, dtype="float64") /* ty=Tensor[(9, 13, 1), float64] */;
  %900 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %901 = @func_2349() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(6, 2, 8), bool]) */;
  %902 = cos(%899) /* ty=Tensor[(9, 13, 1), float64] */;
  %903 = %900.0;
  %904 = %901.1;
  (%902, %903, %904)
}

def @func_15680() -> Tensor[(4, 8, 11), float64] {
  %906 = fn () -> Tensor[(4, 8, 11), float64] {
    %905 = @func_7507() /* ty=(Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(3072), float64]) */;
    %905.1
  };
  %906() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_2843() -> (Tensor[(4, 8, 11), float64],) {
  %907 = @func_2761() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %908 = %907.0;
  (%908,)
}

def @func_12798() -> (Tensor[(4, 8, 11), float64],) {
  @func_12796() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_5936() -> Tensor[(4, 8, 11), float64] {
  @func_5934() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_14546() -> Tensor[(4, 8, 11), float64] {
  @func_12013() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_3737() -> Tensor[(4, 8, 11), float64] {
  %910 = fn () -> Tensor[(4, 8, 11), float64] {
    %909 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %909.0
  };
  %910() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_6084() -> (Tensor[(4, 8, 11), float64],) {
  %911 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %912 = %911.0;
  (%912,)
}

def @func_6185() -> (Tensor[(4, 8, 11), float64],) {
  %915 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %913 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %914 = %913.0;
    (%914,)
  };
  %915() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_15472(%var_15470: Tensor[(8, 30), uint16]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(350), float32], Tensor[(8, 30), uint16], Tensor[(4, 8, 11), float64]) {
  @func_15469(%var_15470) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(350), float32], Tensor[(8, 30), uint16], Tensor[(4, 8, 11), float64]) */
}

def @func_8501() -> Tensor[(4, 8, 11), float64] {
  %916 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %916.2
}

def @func_15363() -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool]) {
  %920 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool]) {
    %917 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
    %918 = @func_2724() /* ty=Tensor[(4, 8, 11), float64] */;
    %919 = %917.1;
    (%918, %919)
  };
  %920() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool]) */
}

def @func_16697() -> (Tensor[(96), int32], Tensor[(9, 5, 6), uint32], uint32, Tensor[(270), uint32]) {
  %921 = @func_16135() /* ty=(Tensor[(96), int32], uint32) */;
  %922 = cast(meta[relay.Constant][32] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %923 = cast(meta[relay.Constant][33] /* ty=Tensor[(270), uint32] */, dtype="uint32") /* ty=Tensor[(270), uint32] */;
  %924 = reshape(%922, newshape=[]) /* ty=uint32 */;
  %925 = reshape(%923, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), uint32] */;
  %926 = %921.0;
  %927 = @func_14138(%924, %925) /* ty=Tensor[(9, 5, 6), uint32] */;
  (%926, %927, meta[relay.Constant][32] /* ty=uint32 */, meta[relay.Constant][33] /* ty=Tensor[(270), uint32] */)
}

def @func_9956() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %928 = @func_7586() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %929 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
  %930 = %928.0;
  (%929, %930)
}

def @func_4017() -> Tensor[(4, 8, 11), float64] {
  %931 = fn () -> Tensor[(4, 8, 11), float64] {
    @func_2724() /* ty=Tensor[(4, 8, 11), float64] */
  };
  %931() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_17382(%var_17381: Tensor[(84), float32]) -> (Tensor[(231), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(84), float32], Tensor[(126), float32]) {
  %944 = fn (%var_17368: Tensor[(84), float32]) -> (Tensor[(231), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(84), float32], Tensor[(126), float32]) {
    %932 = @func_12302() /* ty=(Tensor[(231), int32],) */;
    %933 = @func_14483() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %934 = cast(meta[relay.Constant][34] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
    %935 = cast(%var_17368, dtype="float32") /* ty=Tensor[(84), float32] */;
    %936 = cast(meta[relay.Constant][35] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %937 = reshape(%934, newshape=[8, 384]) /* ty=Tensor[(8, 384), float64] */;
    %938 = reshape(%935, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %939 = reshape(%936, newshape=[21, 6]) /* ty=Tensor[(21, 6), float32] */;
    %940 = @func_9050(%937, %938, %939) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(8, 384), float64], Tensor[(4, 8, 11), float64], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(21, 6), float32]) */;
    %941 = %932.0;
    %942 = %933.1;
    %943 = %940.4;
    (%941, %942, %943, meta[relay.Constant][34] /* ty=Tensor[(3072), float64] */, %var_17368, meta[relay.Constant][35] /* ty=Tensor[(126), float32] */)
  };
  %944(%var_17381) /* ty=(Tensor[(231), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(84), float32], Tensor[(126), float32]) */
}

def @func_11407() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), uint32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %963 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), uint32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %945 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %946 = cast(meta[relay.Constant][36] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
    %947 = reshape(%946, newshape=[3072]) /* ty=Tensor[(3072), float64] */;
    %948 = @func_6644(%947) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64]) */;
    %949 = %948.3;
    %950 = cast(meta[relay.Constant][36] /* ty=Tensor[(3072), float64] */, dtype="uint32") /* ty=Tensor[(3072), uint32] */;
    %951 = shape_of(%949, dtype="int32") /* ty=Tensor[(1), int32] */;
    %952 = cast(%949, dtype="uint32") /* ty=Tensor[(3072), uint32] */;
    %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %954 = @func_5105() /* ty=(Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %955 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %956 = @func_2261() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %957 = %945.0;
    %958 = @func_8048() /* ty=Tensor[(4, 8, 11), float64] */;
    %959 = bitwise_xor(%952, %953) /* ty=Tensor[(3072), uint32] */;
    %960 = %954.2;
    %961 = %955.1;
    %962 = %956.0;
    (%957, %958, %959, %960, %961, %962)
  };
  %963() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), uint32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_13588(%var_13587: Tensor[(126), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(2, 12, ?), float64], Tensor[(4, 8, 11), float64], Tensor[(126), float32]) {
  %978 = fn (%var_13530: Tensor[(126), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(2, 12, ?), float64], Tensor[(4, 8, 11), float64], Tensor[(126), float32]) {
    %964 = cast(meta[relay.Constant][37] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
    %965 = reshape(%964, newshape=[2, 12, 1]) /* ty=Tensor[(2, 12, 1), float64] */;
    %966 = @func_9511(%965) /* ty=(Tensor[(2, 12, 1), float64], Tensor[(4, 8, 11), float64]) */;
    %967 = %966.0;
    %968 = cast(meta[relay.Constant][37] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
    %969 = shape_of(%967, dtype="int32") /* ty=Tensor[(3), int32] */;
    %970 = cast(%967, dtype="float64") /* ty=Tensor[(2, 12, 1), float64] */;
    %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %972 = cast(%var_13530, dtype="float32") /* ty=Tensor[(126), float32] */;
    %973 = reshape(%972, newshape=[7, 18]) /* ty=Tensor[(7, 18), float32] */;
    %974 = @func_3186(%973) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) */;
    %975 = @func_12923() /* ty=Tensor[(4, 8, 11), float64] */;
    %976 = power(%970, %971) /* ty=Tensor[(2, 12, ?), float64] */;
    %977 = %974.0;
    (%975, %976, %977, %var_13530)
  };
  %978(%var_13587) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(2, 12, ?), float64], Tensor[(4, 8, 11), float64], Tensor[(126), float32]) */
}

def @func_9449(%var_9447: Tensor[(13, 9, 11), float32]) -> (Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), float32]) {
  @func_9446(%var_9447) /* ty=(Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), float32]) */
}

def @func_9275() -> (Tensor[(4, 8, 11), float64],) {
  %980 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %979 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
    (%979,)
  };
  %980() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_8151(%var_8149: Tensor[(4, 15, 2), int64], %var_8150: Tensor[(13, 14), float64]) -> (Tensor[(4, 15, 2), int64], Tensor[(4, 15, 2), bool], Tensor[(1, 13, 14), float64], Tensor[(13, 14), float64], Tensor[(4, 15, 2), float32], Tensor[(4, 8, 11), bool]) {
  @func_8147(%var_8149, %var_8150) /* ty=(Tensor[(4, 15, 2), int64], Tensor[(4, 15, 2), bool], Tensor[(1, 13, 14), float64], Tensor[(13, 14), float64], Tensor[(4, 15, 2), float32], Tensor[(4, 8, 11), bool]) */
}

def @func_6449(%var_6447: Tensor[(1, 16, 9), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64]) {
  @func_6446(%var_6447) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64]) */
}

def @func_1376(%var_1358: Tensor[(4, 8, 11), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) {
  %981 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %982 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %983 = %982.0;
  %984 = cast(%983, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %985 = sigmoid(%984) /* ty=Tensor[(4, 8, 11), float64] */;
  %986 = cast(%var_1358, dtype="bool") /* ty=Tensor[(4, 8, 11), bool] */;
  %987 = shape_of(%985, dtype="int32") /* ty=Tensor[(3), int32] */;
  %988 = cast(%985, dtype="bool") /* ty=Tensor[(4, 8, 11), bool] */;
  %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %990 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %991 = %981.0;
  %992 = equal(%988, %989) /* ty=Tensor[(4, 8, 11), bool] */;
  %993 = %990.0;
  (%991, %992, %993)
}

def @func_8447() -> Tensor[(4, 8, 11), bool] {
  @func_8445() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_3427() -> Tensor[(4, 8, 11), float64] {
  @func_3425() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_2559() -> Tensor[(4, 8, 11), bool] {
  @func_2557() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_11034() -> Tensor[(4, 8, 11), float64] {
  @func_8048() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_574(%var_572: Tensor[(7, 11, 3), int16]) -> (Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), int32]) {
  @func_571(%var_572) /* ty=(Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), int32]) */
}

def @func_7225() -> (Tensor[(4, 8, 11), float64],) {
  @func_7223() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_15561() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %994 = @func_10494() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %995 = @func_9389() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %996 = %994.1;
  %997 = %995.0;
  (%996, %997)
}

def @func_8048() -> Tensor[(4, 8, 11), float64] {
  %998 = @func_3326() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %998.2
}

def @func_10164() -> (Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64]) {
  %999 = @func_3916() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(1, 126), float32]) */;
  %1000 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
  %1001 = %999.1;
  (%1000, %1001)
}

def @func_16529() -> (Tensor[(6, 3), float32],) {
  @func_16527() /* ty=(Tensor[(6, 3), float32],) */
}

def @func_17269(%var_17262: Tensor[(16, 7, 1), float32], %var_17263: Tensor[(16, 7, 6), float32]) -> (Tensor[(16, 7, 6), bool],) {
  %1002 = cast(%var_17262, dtype="bool") /* ty=Tensor[(16, 7, 1), bool] */;
  %1003 = cast(%var_17263, dtype="bool") /* ty=Tensor[(16, 7, 6), bool] */;
  %1004 = less(%1002, %1003) /* ty=Tensor[(16, 7, 6), bool] */;
  (%1004,)
}

def @func_1867() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_3411(%var_3409: Tensor[(4, 1, 5), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, ?, 5), int8]) {
  @func_3408(%var_3409) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, ?, 5), int8]) */
}

def @func_16859() -> (Tensor[(4, 8, 11), float64], Tensor[(231), int16]) {
  %1005 = @func_7766() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1006 = %1005.0;
  %1007 = @func_7774() /* ty=Tensor[(231), int16] */;
  (%1006, %1007)
}

def @func_16065() -> (Tensor[(11, 14, 9), float64], Tensor[(96), int32]) {
  %1008 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(11, 14, 9), float64] */;
  %1009 = @func_6794() /* ty=(Tensor[(96), int32], Tensor[(5, 14, 5), float32], Tensor[(4, 8, 11), float64]) */;
  %1010 = sqrt(%1008) /* ty=Tensor[(11, 14, 9), float64] */;
  %1011 = %1009.0;
  (%1010, %1011)
}

def @func_5106() -> (Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1019 = fn () -> (Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %1012 = @func_3808() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32]) */;
    %1013 = @func_3736() /* ty=Tensor[(4, 8, 11), float64] */;
    %1014 = cast(%1013, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
    %1015 = reshape(%1014, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
    %1016 = @func_1376(%1015) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */;
    %1017 = %1012.1;
    %1018 = %1016.0;
    (%1017, %1013, %1018)
  };
  %1019() /* ty=(Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_9932() -> (Tensor[(4, 8, 11), float64], Tensor[(1, 13, 14), float64], Tensor[(182), float64]) {
  %1020 = cast(meta[relay.Constant][39] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %1021 = reshape(%1020, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), float64] */;
  %1022 = @func_8525() /* ty=Tensor[(4, 8, 11), float64] */;
  %1023 = @func_4341(%1021) /* ty=Tensor[(1, 13, 14), float64] */;
  (%1022, %1023, meta[relay.Constant][39] /* ty=Tensor[(182), float64] */)
}

def @func_11251() -> (Tensor[(4, 8, 11), float64],) {
  %1026 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %1024 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %1025 = %1024.0;
    (%1025,)
  };
  %1026() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_18025() -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), bool], Tensor[(1386), float64], Tensor[(4, 8, 11), float64], Tensor[(18), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1027 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %1028 = cast(meta[relay.Constant][40] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %1029 = reshape(%1028, newshape=[378]) /* ty=Tensor[(378), float32] */;
  %1030 = @func_11759(%1029) /* ty=(Tensor[(432), float32], Tensor[(6, 9, 7), float32], Tensor[(378), float32], Tensor[(4, 8, 11), float64]) */;
  %1031 = cast(meta[relay.Constant][41] /* ty=Tensor[(1386), float64] */, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %1032 = reshape(%1031, newshape=[1386]) /* ty=Tensor[(1386), float64] */;
  %1033 = @func_15955(%1032) /* ty=(Tensor[(4, 8, 11), bool], Tensor[(7, 18), float64], Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64], Tensor[(1386), float64]) */;
  %1034 = cast(meta[relay.Constant][42] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1035 = reshape(%1034, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %1036 = @func_17930(%1035) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(?, 3, 6), int8], Tensor[(18), float32], Tensor[(4, 8, 11), float64], Tensor[(126), float32]) */;
  %1037 = @func_6794() /* ty=(Tensor[(96), int32], Tensor[(5, 14, 5), float32], Tensor[(4, 8, 11), float64]) */;
  %1038 = @func_5934() /* ty=Tensor[(4, 8, 11), float64] */;
  %1039 = %1027.1;
  %1040 = %1030.1;
  %1041 = %1033.0;
  %1042 = %1036.0;
  %1043 = %1037.2;
  %1044 = @func_3425() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1038, %1039, %1040, meta[relay.Constant][40] /* ty=Tensor[(378), float32] */, %1041, meta[relay.Constant][41] /* ty=Tensor[(1386), float64] */, %1042, meta[relay.Constant][42] /* ty=Tensor[(18), float32] */, %1043, %1044)
}

def @func_16002() -> Tensor[(4, 8, 11), float64] {
  @func_16000() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_2213(%var_2212: Tensor[(8, 6, 5), uint16]) -> (Tensor[(8, 6, 5), float32], Tensor[(350), float32]) {
  %1057 = fn (%var_2190: Tensor[(8, 6, 5), uint16]) -> (Tensor[(8, 6, 5), float32], Tensor[(350), float32]) {
    %1045 = cast(meta[relay.Constant][43] /* ty=Tensor[(8, 6, 5), uint16] */, dtype="uint16") /* ty=Tensor[(8, 6, 5), uint16] */;
    %1046 = shape_of(%var_2190, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1047 = cast(%var_2190, dtype="uint16") /* ty=Tensor[(8, 6, 5), uint16] */;
    %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1049 = right_shift(%1047, %1048) /* ty=Tensor[(8, 6, 5), uint16] */;
    %1050 = cast(%var_2190, dtype="float32") /* ty=Tensor[(8, 6, 5), float32] */;
    %1051 = shape_of(%1049, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1052 = cast(%1049, dtype="float32") /* ty=Tensor[(8, 6, 5), float32] */;
    %1053 = dyn.reshape(%1050, %1051, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1054 = @func_1619() /* ty=(Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) */;
    %1055 = floor_divide(%1052, %1053) /* ty=Tensor[(8, 6, 5), float32] */;
    %1056 = %1054.5;
    (%1055, %1056)
  };
  %1057(%var_2212) /* ty=(Tensor[(8, 6, 5), float32], Tensor[(350), float32]) */
}

def @func_1103(%var_1102: Tensor[(5, 14, 5), float32]) -> Tensor[(5, 14, 5), float32] {
  %1059 = fn (%var_1093: Tensor[(5, 14, 5), float32]) -> Tensor[(5, 14, 5), float32] {
    %1058 = cast(%var_1093, dtype="float32") /* ty=Tensor[(5, 14, 5), float32] */;
    cosh(%1058) /* ty=Tensor[(5, 14, 5), float32] */
  };
  %1059(%var_1102) /* ty=Tensor[(5, 14, 5), float32] */
}

def @func_8359() -> (Tensor[(4, 8, 11), float64],) {
  %1060 = @func_3425() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1060,)
}

def @func_13634() -> (Tensor[(4, 8, 11), float64],) {
  @func_13632() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_8938(%var_8920: Tensor[(231), int16], %var_8932: Tensor[(432), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(352), float64], Tensor[(231), int8], Tensor[(3, 12, 12), float32], Tensor[(432), float32]) {
  %1061 = cast(meta[relay.Constant][44] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %1062 = reshape(%1061, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %1063 = @func_4894(%1062) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1064 = @func_7774() /* ty=Tensor[(231), int16] */;
  %1065 = cast(%var_8920, dtype="int8") /* ty=Tensor[(231), int8] */;
  %1066 = shape_of(%1064, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1067 = cast(%1064, dtype="int8") /* ty=Tensor[(231), int8] */;
  %1068 = dyn.reshape(%1065, %1066, newshape=[]) /* ty=Tensor[(?), int8] */;
  %1069 = cast(%var_8932, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1070 = reshape(%1069, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
  %1071 = @func_1456(%1070) /* ty=(Tensor[(3, 12, 12), float32],) */;
  %1072 = %1063.0;
  %1073 = logical_xor(%1067, %1068) /* ty=Tensor[(231), int8] */;
  %1074 = %1071.0;
  (%1072, meta[relay.Constant][44] /* ty=Tensor[(352), float64] */, %1073, %1074, %var_8932)
}

def @func_8868() -> (Tensor[(4, 8, 11), float64],) {
  %1076 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %1075 = @func_5934() /* ty=Tensor[(4, 8, 11), float64] */;
    (%1075,)
  };
  %1076() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_6512() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */
}

def @func_11019() -> (Tensor[(4, 8, 11), bool],) {
  %1077 = @func_6329() /* ty=Tensor[(4, 8, 11), bool] */;
  (%1077,)
}

def @func_9454(%var_9451: Tensor[(6, 9, 7), float32]) -> (Tensor[(6, 9, 7), float32],) {
  %1078 = cast(%var_9451, dtype="float32") /* ty=Tensor[(6, 9, 7), float32] */;
  %1079 = sigmoid(%1078) /* ty=Tensor[(6, 9, 7), float32] */;
  (%1079,)
}

def @func_13256() -> Tensor[(4, 8, 11), float64] {
  %1081 = fn () -> Tensor[(4, 8, 11), float64] {
    %1080 = @func_10089() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */;
    %1080.0
  };
  %1081() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_7711() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) {
  %1085 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) {
    %1082 = @func_2408() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %1083 = %1082.0;
    %1084 = @func_5919() /* ty=Tensor[(4, 8, 11), bool] */;
    (%1083, %1084)
  };
  %1085() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) */
}

def @func_9905() -> (Tensor[(4, 8, 11), float64],) {
  %1087 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %1086 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
    (%1086,)
  };
  %1087() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_11036() -> Tensor[(4, 8, 11), float64] {
  @func_11034() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_7774() -> Tensor[(231), int16] {
  %1088 = @func_4423() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) */;
  %1088.3
}

def @func_13895(%var_13894: Tensor[(11, 9, 7), uint32]) -> (Tensor[(11, 9, 7), uint32],) {
  %1094 = fn (%var_13886: Tensor[(11, 9, 7), uint32]) -> (Tensor[(11, 9, 7), uint32],) {
    %1089 = cast(meta[relay.Constant][45] /* ty=Tensor[(11, 9, 7), uint32] */, dtype="uint32") /* ty=Tensor[(11, 9, 7), uint32] */;
    %1090 = shape_of(%var_13886, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1091 = cast(%var_13886, dtype="uint32") /* ty=Tensor[(11, 9, 7), uint32] */;
    %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1093 = multiply(%1091, %1092) /* ty=Tensor[(11, 9, 7), uint32] */;
    (%1093,)
  };
  %1094(%var_13894) /* ty=(Tensor[(11, 9, 7), uint32],) */
}

def @func_1981() -> (Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) {
  @func_1979() /* ty=(Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) */
}

def @func_5746(%var_5744: uint32) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], uint32, Tensor[(16, 15, 11), float64]) {
  @func_5743(%var_5744) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], uint32, Tensor[(16, 15, 11), float64]) */
}

def @func_13632() -> (Tensor[(4, 8, 11), float64],) {
  %1095 = @func_10164() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64]) */;
  %1096 = %1095.0;
  (%1096,)
}

def @func_11615() -> (Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(231), int32], Tensor[(4, 8, 11), bool]) {
  @func_11613() /* ty=(Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(231), int32], Tensor[(4, 8, 11), bool]) */
}

def @func_4423() -> (Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 11, 3), int32], Tensor[(231), int16]) {
  %1097 = cast(meta[relay.Constant][46] /* ty=Tensor[(9, 1, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %1098 = @func_2761() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1099 = cast(meta[relay.Constant][47] /* ty=Tensor[(231), int16] */, dtype="int16") /* ty=Tensor[(231), int16] */;
  %1100 = reshape(%1099, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), int16] */;
  %1101 = @func_571(%1100) /* ty=(Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), int32]) */;
  %1102 = acosh(%1097) /* ty=Tensor[(9, 1, 11), float32] */;
  %1103 = %1098.0;
  %1104 = %1101.1;
  (%1102, %1103, %1104, meta[relay.Constant][47] /* ty=Tensor[(231), int16] */)
}

def @func_13173() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1110 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %1105 = @func_4264() /* ty=(Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) */;
    %1106 = @func_2761() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1107 = %1105.1;
    %1108 = @func_5934() /* ty=Tensor[(4, 8, 11), float64] */;
    %1109 = %1106.0;
    (%1107, %1108, %1109)
  };
  %1110() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_9390() -> (Tensor[(4, 8, 11), float64],) {
  %1113 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %1111 = @func_2761() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1112 = %1111.0;
    (%1112,)
  };
  %1113() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_8942(%var_8940: Tensor[(231), int16], %var_8941: Tensor[(432), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(352), float64], Tensor[(231), int8], Tensor[(3, 12, 12), float32], Tensor[(432), float32]) {
  @func_8938(%var_8940, %var_8941) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(352), float64], Tensor[(231), int8], Tensor[(3, 12, 12), float32], Tensor[(432), float32]) */
}

def @func_5743(%var_5729: uint32) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], uint32, Tensor[(16, 15, 11), float64]) {
  %1114 = @func_5263() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1115 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1116 = @func_3100() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1117 = cast(%var_5729, dtype="uint32") /* ty=uint32 */;
  %1118 = reshape(%1117, newshape=[]) /* ty=uint32 */;
  %1119 = @func_5489(%1118) /* ty=(Tensor[(16, 15, 11), uint32], Tensor[(4, 8, 11), bool]) */;
  %1120 = %1119.0;
  %1121 = cast(%1120, dtype="float64") /* ty=Tensor[(16, 15, 11), float64] */;
  %1122 = %1114.1;
  %1123 = %1115.0;
  %1124 = %1116.0;
  %1125 = asinh(%1121) /* ty=Tensor[(16, 15, 11), float64] */;
  (%1122, %1123, %1124, %var_5729, %1125)
}

def @func_12625() -> Tensor[(96), int32] {
  %1126 = @func_8458() /* ty=(Tensor[(96), int32],) */;
  %1126.0
}

def @func_13435() -> Tensor[(4, 8, 11), float64] {
  @func_13433() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_12284() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_12282() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_3584() -> (Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) {
  %1127 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1128 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
  %1129 = reshape(%1128, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
  %1130 = @func_2592(%1129) /* ty=(Tensor[(?, 3, 6), int8],) */;
  %1131 = %1127.0;
  %1132 = %1130.0;
  (%1131, %1132, meta[relay.Constant][48] /* ty=Tensor[(6, 3), float32] */)
}

def @func_2080(%var_2071: Tensor[(13, 12, 2), float32]) -> (Tensor[(13, 12, 2), float32],) {
  %1133 = cast(meta[relay.Constant][49] /* ty=Tensor[(13, 12, 2), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 2), float32] */;
  %1134 = shape_of(%var_2071, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1135 = cast(%var_2071, dtype="float32") /* ty=Tensor[(13, 12, 2), float32] */;
  %1136 = dyn.reshape(%1133, %1134, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1137 = floor_mod(%1135, %1136) /* ty=Tensor[(13, 12, 2), float32] */;
  (%1137,)
}

def @func_13123() -> (Tensor[(4, 8, 11), float64],) {
  %1140 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %1138 = @func_12827() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1139 = %1138.0;
    (%1139,)
  };
  %1140() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_10522() -> (Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  @func_10520() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */
}

def @func_13847() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_13845() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_14619() -> (Tensor[(96), int32], Tensor[(4, 8, 11), float64]) {
  %1141 = @func_10398() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) */;
  %1142 = %1141.1;
  %1143 = @func_14228() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1142, %1143)
}

def @func_17815() -> (Tensor[(4, 8, 11), float64],) {
  @func_17813() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_15563() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_15561() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_17785() -> Tensor[(1, 16, 9), float64] {
  %1145 = fn () -> Tensor[(1, 16, 9), float64] {
    %1144 = @func_17666() /* ty=(Tensor[(1, 16, 9), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32]) */;
    %1144.0
  };
  %1145() /* ty=Tensor[(1, 16, 9), float64] */
}

def @func_9854(%var_9853: Tensor[(20), float64]) -> (Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, ?, 5), int8], Tensor[(20), float64]) {
  %1156 = fn (%var_9841: Tensor[(20), float64]) -> (Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, ?, 5), int8], Tensor[(20), float64]) {
    %1146 = @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
    %1147 = @func_7539() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %1148 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %1149 = cast(%var_9841, dtype="float64") /* ty=Tensor[(20), float64] */;
    %1150 = reshape(%1149, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float64] */;
    %1151 = @func_3408(%1150) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, ?, 5), int8]) */;
    %1152 = %1146.3;
    %1153 = %1147.1;
    %1154 = %1148.1;
    %1155 = %1151.1;
    (%1152, %1153, %1154, %1155, %var_9841)
  };
  %1156(%var_9853) /* ty=(Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, ?, 5), int8], Tensor[(20), float64]) */
}

def @func_13104(%var_13102: Tensor[(3072), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), float64]) {
  @func_13101(%var_13102) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_7740() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) {
  @func_7738() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) */
}

def @func_14368() -> (Tensor[(4, 8, 11), float64],) {
  %1157 = @func_7551() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1158 = %1157.0;
  (%1158,)
}

def @func_11021() -> (Tensor[(4, 8, 11), bool],) {
  @func_11019() /* ty=(Tensor[(4, 8, 11), bool],) */
}

def @func_7540() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1162 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %1159 = @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
    %1160 = %1159.2;
    %1161 = @func_2724() /* ty=Tensor[(4, 8, 11), float64] */;
    (%1160, %1161)
  };
  %1162() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_13480() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_13478() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_4266() -> (Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) {
  @func_4264() /* ty=(Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_15660() -> (Tensor[(4, 8, 11), float64],) {
  @func_15658() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_6466(%var_6454: Tensor[(13, 16, 16), float32], %var_6458: Tensor[(13, 16, 16), float32]) -> (Tensor[(13, 16, 16), bool], Tensor[(4, 8, 11), float64]) {
  %1163 = cast(%var_6454, dtype="float32") /* ty=Tensor[(13, 16, 16), float32] */;
  %1164 = acosh(%1163) /* ty=Tensor[(13, 16, 16), float32] */;
  %1165 = cast(%var_6458, dtype="bool") /* ty=Tensor[(13, 16, 16), bool] */;
  %1166 = shape_of(%1164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1167 = cast(%1164, dtype="bool") /* ty=Tensor[(13, 16, 16), bool] */;
  %1168 = dyn.reshape(%1165, %1166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1169 = @func_2843() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1170 = equal(%1167, %1168) /* ty=Tensor[(13, 16, 16), bool] */;
  %1171 = %1169.0;
  (%1170, %1171)
}

def @func_4344(%var_4342: Tensor[(1, 13, 14), float64]) -> Tensor[(1, 13, 14), float64] {
  @func_4341(%var_4342) /* ty=Tensor[(1, 13, 14), float64] */
}

def @func_10893(%var_10891: Tensor[(312), float32]) -> (Tensor[(11, 13, 6), float64], Tensor[(312), float32], Tensor[(1, 312), float32]) {
  @func_10890(%var_10891) /* ty=(Tensor[(11, 13, 6), float64], Tensor[(312), float32], Tensor[(1, 312), float32]) */
}

def @func_8802() -> (Tensor[(4, 8, 11), float64],) {
  %1174 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %1172 = @func_2761() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1173 = %1172.0;
    (%1173,)
  };
  %1174() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_2263() -> (Tensor[(4, 8, 11), float64],) {
  @func_2261() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_14848() -> (Tensor[(4, 8, 11), float64],) {
  @func_14846() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_8593() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_8591() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_16685() -> (Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64], Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 3, 4), float64], Tensor[(1, 84), uint32], Tensor[(4, 8, 11), float64]) {
  @func_16683() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(11, 13, 6), float64], Tensor[(9, 1, 11), float32], Tensor[(4, 8, 11), float64], Tensor[(7, 3, 4), float64], Tensor[(1, 84), uint32], Tensor[(4, 8, 11), float64]) */
}

def @func_7197() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1175 = @func_5263() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1176 = @func_1896() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1177 = @func_3326() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1178 = %1175.0;
  %1179 = %1176.0;
  %1180 = %1177.0;
  (%1178, %1179, %1180)
}

def @func_16000() -> Tensor[(4, 8, 11), float64] {
  %1181 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1181.1
}

def @func_14001() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(126, 3), float32]) {
  @func_13999() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(126, 3), float32]) */
}

def @func_17426() -> (Tensor[(4, 8, 11), float64],) {
  @func_17424() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_2931(%var_2929: int64, %var_2930: Tensor[(14, 4, 15), int64]) -> Tensor[(14, 4, 15), int64] {
  @func_2927(%var_2929, %var_2930) /* ty=Tensor[(14, 4, 15), int64] */
}

def @func_17540() -> Tensor[(4, 8, 11), float64] {
  %1182 = fn () -> Tensor[(4, 8, 11), float64] {
    @func_16418() /* ty=Tensor[(4, 8, 11), float64] */
  };
  %1182() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_8829() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1187 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %1183 = @func_7223() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1184 = @func_5263() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %1185 = %1183.0;
    %1186 = %1184.1;
    (%1185, %1186)
  };
  %1187() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_10832() -> Tensor[(4, 8, 11), float64] {
  %1188 = @func_6510() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %1188.2
}

def @func_13984() -> (Tensor[(4, 8, 11), float64], Tensor[(16, 15, 11), uint32], uint32) {
  %1195 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(16, 15, 11), uint32], uint32) {
    %1189 = @func_8867() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1190 = cast(meta[relay.Constant][50] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %1191 = reshape(%1190, newshape=[]) /* ty=uint32 */;
    %1192 = @func_5489(%1191) /* ty=(Tensor[(16, 15, 11), uint32], Tensor[(4, 8, 11), bool]) */;
    %1193 = %1189.0;
    %1194 = %1192.0;
    (%1193, %1194, meta[relay.Constant][50] /* ty=uint32 */)
  };
  %1195() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(16, 15, 11), uint32], uint32) */
}

def @func_1299() -> Tensor[(4, 8, 11), float64] {
  @func_1297() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_1648() -> (Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) {
  %1202 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) {
    %1196 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1197 = cast(meta[relay.Constant][51] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
    %1198 = reshape(%1197, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
    %1199 = @func_144(%1198) /* ty=(Tensor[(12, 16, 16), float64],) */;
    %1200 = %1196.0;
    %1201 = %1199.0;
    (%1200, %1201, meta[relay.Constant][51] /* ty=Tensor[(3072), float64] */)
  };
  %1202() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) */
}

def @func_16252(%var_16250: Tensor[(840), int64], %var_16251: uint32) -> (Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(840), int64], uint32, Tensor[(4, 8, 11), float64]) {
  %1217 = fn (%var_16221: Tensor[(840), int64], %var_16222: uint32) -> (Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(840), int64], uint32, Tensor[(4, 8, 11), float64]) {
    %1203 = @func_4264() /* ty=(Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64]) */;
    %1204 = cast(meta[relay.Constant][52] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
    %1205 = reshape(%1204, newshape=[3072]) /* ty=Tensor[(3072), float64] */;
    %1206 = @func_13101(%1205) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), float64]) */;
    %1207 = cast(%var_16221, dtype="int64") /* ty=Tensor[(840), int64] */;
    %1208 = cast(%var_16222, dtype="uint32") /* ty=uint32 */;
    %1209 = reshape(%1207, newshape=[840]) /* ty=Tensor[(840), int64] */;
    %1210 = reshape(%1208, newshape=[]) /* ty=uint32 */;
    %1211 = @func_11688(%1209, %1210) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(840), int64], Tensor[(840), int64], Tensor[(4, 8, 11), float64], uint32, Tensor[(4, 8, 11), bool]) */;
    %1212 = @func_14483() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %1213 = %1203.0;
    %1214 = %1206.0;
    %1215 = %1211.0;
    %1216 = %1212.0;
    (%1213, %1214, meta[relay.Constant][52] /* ty=Tensor[(3072), float64] */, %1215, %var_16221, %var_16222, %1216)
  };
  %1217(%var_16250, %var_16251) /* ty=(Tensor[(11, 13, 6), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), float64], Tensor[(840), int64], uint32, Tensor[(4, 8, 11), float64]) */
}

def @func_3809() -> (Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32]) {
  %1233 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32]) {
    %1218 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %1219 = @func_1647() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) */;
    %1220 = %1219.2;
    %1221 = cast(%1220, dtype="float64") /* ty=Tensor[(3072), float64] */;
    %1222 = @func_3584() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) */;
    %1223 = %1222.0;
    %1224 = cast(%1223, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
    %1225 = cast(meta[relay.Constant][53] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %1226 = reshape(%1225, newshape=[7, 18]) /* ty=Tensor[(7, 18), float32] */;
    %1227 = @func_3186(%1226) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(7, 18), bool]) */;
    %1228 = %1218.0;
    %1229 = atanh(%1221) /* ty=Tensor[(3072), float64] */;
    %1230 = @func_2557() /* ty=Tensor[(4, 8, 11), bool] */;
    %1231 = atan(%1224) /* ty=Tensor[(4, 8, 11), float64] */;
    %1232 = %1227.1;
    (%1228, %1229, %1230, %1231, %1232, meta[relay.Constant][53] /* ty=Tensor[(126), float32] */)
  };
  %1233() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32]) */
}

def @func_17839() -> (Tensor[(4, 8, 11), float64],) {
  %1234 = @func_8327() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1234,)
}

def @func_15658() -> (Tensor[(4, 8, 11), float64],) {
  %1235 = @func_10832() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1235,)
}

def @func_4289() -> (Tensor[(4, 8, 11), float64],) {
  @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_7223() -> (Tensor[(4, 8, 11), float64],) {
  %1236 = @func_5615() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1237 = %1236.0;
  (%1237,)
}

def @func_12014() -> Tensor[(4, 8, 11), float64] {
  %1239 = fn () -> Tensor[(4, 8, 11), float64] {
    %1238 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1238.0
  };
  %1239() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_10834() -> Tensor[(4, 8, 11), float64] {
  @func_10832() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_12778() -> Tensor[(4, 8, 11), float64] {
  @func_12776() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_13101(%var_13097: Tensor[(3072), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), float64]) {
  %1240 = @func_8591() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1241 = @func_11278() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96, 1), int32]) */;
  %1242 = cast(meta[relay.Constant][54] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1243 = reshape(%1242, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
  %1244 = @func_2592(%1243) /* ty=(Tensor[(?, 3, 6), int8],) */;
  %1245 = %1244.0;
  %1246 = cast(meta[relay.Constant][54] /* ty=Tensor[(18), float32] */, dtype="int8") /* ty=Tensor[(18), int8] */;
  %1247 = shape_of(%1245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1248 = cast(%1245, dtype="int8") /* ty=Tensor[(?, 3, 6), int8] */;
  %1249 = dyn.reshape(%1246, %1247, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1250 = cast(%var_13097, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %1251 = reshape(%1250, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %1252 = @func_144(%1251) /* ty=(Tensor[(12, 16, 16), float64],) */;
  %1253 = @func_8016() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1254 = %1240.1;
  %1255 = %1241.2;
  %1256 = add(%1248, %1249) /* ty=Tensor[(?, 3, 6), int8] */;
  %1257 = %1252.0;
  %1258 = %1253.1;
  (%1254, %1255, %1256, %1257, %var_13097, %1258)
}

def @func_6429() -> (Tensor[(4, 8, 11), bool],) {
  %1260 = fn () -> (Tensor[(4, 8, 11), bool],) {
    %1259 = @func_5919() /* ty=Tensor[(4, 8, 11), bool] */;
    (%1259,)
  };
  %1260() /* ty=(Tensor[(4, 8, 11), bool],) */
}

def @func_2423(%var_2421: Tensor[(96), int32]) -> (Tensor[(432), float32], Tensor[(6, 2, 8), bool], Tensor[(96), int32]) {
  @func_2420(%var_2421) /* ty=(Tensor[(432), float32], Tensor[(6, 2, 8), bool], Tensor[(96), int32]) */
}

def @func_12453() -> (Tensor[(7, 8, 7), float64],) {
  %1261 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 7), float64] */;
  %1262 = log10(%1261) /* ty=Tensor[(7, 8, 7), float64] */;
  (%1262,)
}

def @func_17716() -> (uint32,) {
  %1265 = fn () -> (uint32,) {
    %1263 = @func_13983() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(16, 15, 11), uint32], uint32) */;
    %1264 = %1263.2;
    (%1264,)
  };
  %1265() /* ty=(uint32,) */
}

def @func_6124() -> Tensor[(4, 8, 11), float64] {
  @func_6122() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_18052() -> (Tensor[(7, 11, 3), int32],) {
  %1268 = fn () -> (Tensor[(7, 11, 3), int32],) {
    %1266 = @func_14691() /* ty=(Tensor[(7, 11, 3), int32],) */;
    %1267 = %1266.0;
    (%1267,)
  };
  %1268() /* ty=(Tensor[(7, 11, 3), int32],) */
}

def @func_8328() -> Tensor[(4, 8, 11), float64] {
  %1270 = fn () -> Tensor[(4, 8, 11), float64] {
    %1269 = @func_2261() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1269.0
  };
  %1270() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_14750() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1271 = @func_12827() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1272 = @func_3326() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1273 = %1271.0;
  %1274 = %1272.3;
  (%1273, %1274)
}

def @func_17101(%var_17094: Tensor[(1, 728), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), float64], Tensor[(4, 8, 11), float64], Tensor[(432), float32], Tensor[(768, 4), float64], Tensor[(1, 728), float32]) {
  %1275 = @func_8257() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */;
  %1276 = @func_16189() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool]) */;
  %1277 = %1276.1;
  %1278 = cast(%1277, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %1279 = exp(%1278) /* ty=Tensor[(6, 2, 8), float64] */;
  %1280 = cast(%1279, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %1281 = @func_6141() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1282 = cast(meta[relay.Constant][56] /* ty=Tensor[(768, 4), float64] */, dtype="float64") /* ty=Tensor[(768, 4), float64] */;
  %1283 = cast(%var_17094, dtype="float32") /* ty=Tensor[(1, 728), float32] */;
  %1284 = reshape(%1282, newshape=[3072]) /* ty=Tensor[(3072), float64] */;
  %1285 = reshape(%1283, newshape=[364, 2]) /* ty=Tensor[(364, 2), float32] */;
  %1286 = @func_15041(%1284, %1285) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(6, 2, 8), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32], Tensor[(364, 2), float32], Tensor[(4, 8, 11), float64], Tensor[(3, 12, 12), float32], Tensor[(96), int32]) */;
  %1287 = %1275.0;
  %1288 = log10(%1280) /* ty=Tensor[(6, 2, 8), float64] */;
  %1289 = %1281.0;
  %1290 = %1286.8;
  (%1287, %1288, %1289, %1290, meta[relay.Constant][56] /* ty=Tensor[(768, 4), float64] */, %var_17094)
}

def @func_2595(%var_2593: Tensor[(1, 3, 6), float32]) -> (Tensor[(?, 3, 6), int8],) {
  @func_2592(%var_2593) /* ty=(Tensor[(?, 3, 6), int8],) */
}

def @func_7249() -> Tensor[(4, 8, 11), float64] {
  @func_7247() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_14548() -> Tensor[(4, 8, 11), float64] {
  @func_14546() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_16798() -> (Tensor[(432), float32],) {
  @func_16796() /* ty=(Tensor[(432), float32],) */
}

def @func_8525() -> Tensor[(4, 8, 11), float64] {
  @func_1699() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_3425() -> Tensor[(4, 8, 11), float64] {
  %1291 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1291.0
}

def @func_18084() -> Tensor[(4, 8, 11), float64] {
  @func_12013() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_146(%var_145: Tensor[(12, 16, 16), float64]) -> (Tensor[(12, 16, 16), float64],) {
  %1297 = fn (%var_138: Tensor[(12, 16, 16), float64]) -> (Tensor[(12, 16, 16), float64],) {
    %1292 = cast(meta[relay.Constant][57] /* ty=Tensor[(12, 16, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 16, 16), float64] */;
    %1293 = shape_of(%var_138, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1294 = cast(%var_138, dtype="float64") /* ty=Tensor[(12, 16, 16), float64] */;
    %1295 = dyn.reshape(%1292, %1293, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1296 = floor_mod(%1294, %1295) /* ty=Tensor[(12, 16, 16), float64] */;
    (%1296,)
  };
  %1297(%var_145) /* ty=(Tensor[(12, 16, 16), float64],) */
}

def @func_17463() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 10, 4), float32], Tensor[(16, 10), float32], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) {
  %1298 = cast(meta[relay.Constant][58] /* ty=Tensor[(16, 10), float32] */, dtype="float32") /* ty=Tensor[(16, 10), float32] */;
  %1299 = reshape(%1298, newshape=[4, 10, 4]) /* ty=Tensor[(4, 10, 4), float32] */;
  %1300 = @func_13288(%1299) /* ty=(Tensor[(4, 10, 4), float32],) */;
  %1301 = @func_11019() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %1302 = @func_1865() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1303 = @func_4016() /* ty=Tensor[(4, 8, 11), float64] */;
  %1304 = %1300.0;
  %1305 = %1301.0;
  %1306 = %1302.0;
  (%1303, %1304, meta[relay.Constant][58] /* ty=Tensor[(16, 10), float32] */, %1305, %1306)
}

def @func_12963() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_12961() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_11156(%var_11154: Tensor[(312), float32]) -> (Tensor[(12, 16, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) {
  @func_11153(%var_11154) /* ty=(Tensor[(12, 16, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */
}

def @func_6331() -> Tensor[(4, 8, 11), bool] {
  @func_6329() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_2055() -> (Tensor[(4, 8, 11), bool],) {
  @func_2053() /* ty=(Tensor[(4, 8, 11), bool],) */
}

def @func_14370() -> (Tensor[(4, 8, 11), float64],) {
  @func_14368() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_2420(%var_2415: Tensor[(96), int32]) -> (Tensor[(432), float32], Tensor[(6, 2, 8), bool], Tensor[(96), int32]) {
  %1307 = @func_1979() /* ty=(Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) */;
  %1308 = cast(%var_2415, dtype="int32") /* ty=Tensor[(96), int32] */;
  %1309 = reshape(%1308, newshape=[6, 2, 8]) /* ty=Tensor[(6, 2, 8), int32] */;
  %1310 = %1307.0;
  %1311 = @func_997(%1309) /* ty=Tensor[(6, 2, 8), bool] */;
  (%1310, %1311, %var_2415)
}

def @func_1000(%var_998: Tensor[(6, 2, 8), int32]) -> Tensor[(6, 2, 8), bool] {
  @func_997(%var_998) /* ty=Tensor[(6, 2, 8), bool] */
}

def @func_10496() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_10494() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_2909(%var_2907: Tensor[(84), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), bool], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64]) {
  @func_2906(%var_2907) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), bool], Tensor[(7, 4, 3), float32], Tensor[(84), float32], Tensor[(4, 8, 11), float64]) */
}

def @func_6141() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1312 = @func_2843() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1313 = %1312.0;
  %1314 = @func_4016() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1313, %1314)
}

def @func_7507() -> (Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(3072), float64]) {
  %1315 = @func_6794() /* ty=(Tensor[(96), int32], Tensor[(5, 14, 5), float32], Tensor[(4, 8, 11), float64]) */;
  %1316 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %1317 = @func_1647() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) */;
  %1318 = %1315.0;
  %1319 = %1316.0;
  %1320 = %1317.2;
  (%1318, %1319, %1320)
}

def @func_13433() -> Tensor[(4, 8, 11), float64] {
  %1321 = @func_12282() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1321.1
}

def @func_14846() -> (Tensor[(4, 8, 11), float64],) {
  %1322 = @func_8048() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1322,)
}

def @func_2669(%var_2667: Tensor[(4, 8, 11), float64], %var_2668: Tensor[(432), float32]) -> (Tensor[(4, 8, 11), int8], Tensor[(3, 12, 12), float32], Tensor[(432), float32]) {
  @func_2665(%var_2667, %var_2668) /* ty=(Tensor[(4, 8, 11), int8], Tensor[(3, 12, 12), float32], Tensor[(432), float32]) */
}

def @func_1979() -> (Tensor[(432), float32], Tensor[(12, 16, 16), float64], Tensor[(1536, 2), float64]) {
  %1323 = @func_1619() /* ty=(Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) */;
  %1324 = cast(meta[relay.Constant][59] /* ty=Tensor[(1536, 2), float64] */, dtype="float64") /* ty=Tensor[(1536, 2), float64] */;
  %1325 = reshape(%1324, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %1326 = @func_144(%1325) /* ty=(Tensor[(12, 16, 16), float64],) */;
  %1327 = %1323.1;
  %1328 = %1326.0;
  (%1327, %1328, meta[relay.Constant][59] /* ty=Tensor[(1536, 2), float64] */)
}

def @func_4196() -> (Tensor[(?, 3, 6), int8], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1335 = fn () -> (Tensor[(?, 3, 6), int8], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %1329 = @func_3584() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) */;
    %1330 = @func_1647() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(12, 16, 16), float64], Tensor[(3072), float64]) */;
    %1331 = @func_3584() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(6, 3), float32]) */;
    %1332 = %1329.1;
    %1333 = %1330.0;
    %1334 = %1331.0;
    (%1332, %1333, %1334)
  };
  %1335() /* ty=(Tensor[(?, 3, 6), int8], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_17424() -> (Tensor[(4, 8, 11), float64],) {
  %1336 = @func_12013() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1336,)
}

def @func_12923() -> Tensor[(4, 8, 11), float64] {
  %1337 = @func_7539() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1337.0
}

def @func_1837() -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) {
  %1346 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) {
    %1338 = @func_1467() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1339 = cast(meta[relay.Constant][60] /* ty=Tensor[(96), int32] */, dtype="int32") /* ty=Tensor[(96), int32] */;
    %1340 = reshape(%1339, newshape=[6, 2, 8]) /* ty=Tensor[(6, 2, 8), int32] */;
    %1341 = @func_997(%1340) /* ty=Tensor[(6, 2, 8), bool] */;
    %1342 = cast(%1341, dtype="int32") /* ty=Tensor[(6, 2, 8), int32] */;
    %1343 = reshape(%1342, newshape=[6, 2, 8]) /* ty=Tensor[(6, 2, 8), int32] */;
    %1344 = %1338.0;
    %1345 = @func_997(%1343) /* ty=Tensor[(6, 2, 8), bool] */;
    (%1344, %1341, meta[relay.Constant][60] /* ty=Tensor[(96), int32] */, %1345)
  };
  %1346() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */
}

def @func_9553() -> (Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1347 = @func_8566() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1348 = cast(meta[relay.Constant][61] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1349 = reshape(%1348, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
  %1350 = @func_6446(%1349) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64]) */;
  %1351 = @func_2427() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1352 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1353 = %1347.0;
  %1354 = %1350.1;
  %1355 = %1351.0;
  %1356 = %1352.0;
  (%1353, %1354, meta[relay.Constant][61] /* ty=Tensor[(144), float64] */, %1355, %1356)
}

def @func_3283() -> (Tensor[(4, 8, 11), float64],) {
  %1357 = @func_3100() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1358 = %1357.0;
  (%1358,)
}

def @func_2927(%var_2916: int64, %var_2917: Tensor[(14, 4, 15), int64]) -> Tensor[(14, 4, 15), int64] {
  %1359 = cast(%var_2916, dtype="int64") /* ty=int64 */;
  %1360 = cast(%var_2917, dtype="int64") /* ty=Tensor[(14, 4, 15), int64] */;
  subtract(%1359, %1360) /* ty=Tensor[(14, 4, 15), int64] */
}

def @func_16067() -> (Tensor[(11, 14, 9), float64], Tensor[(96), int32]) {
  @func_16065() /* ty=(Tensor[(11, 14, 9), float64], Tensor[(96), int32]) */
}

def @func_9776(%var_9775: Tensor[(9, 11, 14), float64]) -> (Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64]) {
  %1365 = fn (%var_9749: Tensor[(9, 11, 14), float64]) -> (Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64]) {
    %1361 = cast(%var_9749, dtype="float64") /* ty=Tensor[(9, 11, 14), float64] */;
    %1362 = @func_5615() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1363 = log2(%1361) /* ty=Tensor[(9, 11, 14), float64] */;
    %1364 = %1362.0;
    (%1363, %1364)
  };
  %1365(%var_9775) /* ty=(Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_1699() -> Tensor[(4, 8, 11), float64] {
  @func_1297() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_9958() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_9956() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_9422() -> (Tensor[(4, 8, 11), float64],) {
  @func_9420() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_6831(%var_6829: Tensor[(432), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64]) {
  @func_6828(%var_6829) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64]) */
}

def @func_12796() -> (Tensor[(4, 8, 11), float64],) {
  %1366 = @func_7371() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1366,)
}

def @func_9710(%var_9709: Tensor[(1, 312), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(13, 12, 2), float32], Tensor[(1, 312), float32]) {
  %1373 = fn (%var_9698: Tensor[(1, 312), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(13, 12, 2), float32], Tensor[(1, 312), float32]) {
    %1367 = @func_7766() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1368 = cast(%var_9698, dtype="float32") /* ty=Tensor[(1, 312), float32] */;
    %1369 = reshape(%1368, newshape=[13, 12, 2]) /* ty=Tensor[(13, 12, 2), float32] */;
    %1370 = @func_2080(%1369) /* ty=(Tensor[(13, 12, 2), float32],) */;
    %1371 = %1367.0;
    %1372 = %1370.0;
    (%1371, %1372, %var_9698)
  };
  %1373(%var_9709) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(13, 12, 2), float32], Tensor[(1, 312), float32]) */
}

def @func_13953(%var_13952: Tensor[(117, 1), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(117, 1), float64], Tensor[(9, 13, 1), float32], Tensor[(4, 8, 11), float64], Tensor[(20), float64], Tensor[(4, 8, 11), float64]) {
  %1388 = fn (%var_13911: Tensor[(117, 1), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(117, 1), float64], Tensor[(9, 13, 1), float32], Tensor[(4, 8, 11), float64], Tensor[(20), float64], Tensor[(4, 8, 11), float64]) {
    %1374 = @func_13874() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1375 = cast(%var_13911, dtype="float64") /* ty=Tensor[(117, 1), float64] */;
    %1376 = reshape(%1375, newshape=[9, 13, 1]) /* ty=Tensor[(9, 13, 1), float64] */;
    %1377 = @func_12564(%1376) /* ty=(Tensor[(9, 13, 1), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) */;
    %1378 = %1377.0;
    %1379 = cast(%1378, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
    %1380 = cast(meta[relay.Constant][62] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %1381 = reshape(%1380, newshape=[20]) /* ty=Tensor[(20), float64] */;
    %1382 = @func_9852(%1381) /* ty=(Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, ?, 5), int8], Tensor[(20), float64]) */;
    %1383 = @func_13122() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1384 = %1374.0;
    %1385 = atan(%1379) /* ty=Tensor[(9, 13, 1), float32] */;
    %1386 = %1382.1;
    %1387 = %1383.0;
    (%1384, %var_13911, %1385, %1386, meta[relay.Constant][62] /* ty=Tensor[(20), float64] */, %1387)
  };
  %1388(%var_13952) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(117, 1), float64], Tensor[(9, 13, 1), float32], Tensor[(4, 8, 11), float64], Tensor[(20), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_8460() -> (Tensor[(96), int32],) {
  @func_8458() /* ty=(Tensor[(96), int32],) */
}

def @func_11920(%var_11919: Tensor[(1386), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(1386), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1400 = fn (%var_11902: Tensor[(1386), float64]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(1386), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %1389 = @func_4287() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1390 = cast(%var_11902, dtype="float64") /* ty=Tensor[(1386), float64] */;
    %1391 = reshape(%1390, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float64] */;
    %1392 = @func_9774(%1391) /* ty=(Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64]) */;
    %1393 = @func_2301() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %1394 = @func_11250() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1395 = @func_10832() /* ty=Tensor[(4, 8, 11), float64] */;
    %1396 = %1389.0;
    %1397 = %1392.1;
    %1398 = %1393.1;
    %1399 = %1394.0;
    (%1395, %1396, %1397, %var_11902, %1398, %1399)
  };
  %1400(%var_11919) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(1386), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_7006() -> Tensor[(4, 8, 11), bool] {
  @func_7004() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_10261(%var_10259: Tensor[(840), int64]) -> (Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) {
  @func_10258(%var_10259) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) */
}

def @func_14573() -> (Tensor[(4, 8, 11), float64],) {
  @func_14571() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_4658(%var_4657: Tensor[(18), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), bool]) {
  %1413 = fn (%var_4612: Tensor[(18), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), bool]) {
    %1401 = @func_3206() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %1402 = cast(%var_4612, dtype="float32") /* ty=Tensor[(18), float32] */;
    %1403 = reshape(%1402, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
    %1404 = @func_2592(%1403) /* ty=(Tensor[(?, 3, 6), int8],) */;
    %1405 = %1404.0;
    %1406 = cast(%var_4612, dtype="bool") /* ty=Tensor[(18), bool] */;
    %1407 = shape_of(%1405, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1408 = cast(%1405, dtype="bool") /* ty=Tensor[(?, 3, 6), bool] */;
    %1409 = dyn.reshape(%1406, %1407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1410 = @func_3736() /* ty=Tensor[(4, 8, 11), float64] */;
    %1411 = %1401.1;
    %1412 = not_equal(%1408, %1409) /* ty=Tensor[(?, 3, 6), bool] */;
    (%1410, %1411, %1412)
  };
  %1413(%var_4657) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), bool]) */
}

def @func_1865() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1414 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1415 = @func_1310() /* ty=Tensor[(4, 8, 11), float64] */;
  %1416 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
  %1417 = %1414.0;
  (%1415, %1416, %1417)
}

def @func_13037(%var_13036: Tensor[(3, 42), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], Tensor[(840, 1), int64], Tensor[(4, 8, 11), float64], Tensor[(3, 42), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1430 = fn (%var_13013: Tensor[(3, 42), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], Tensor[(840, 1), int64], Tensor[(4, 8, 11), float64], Tensor[(3, 42), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
    %1418 = cast(meta[relay.Constant][63] /* ty=Tensor[(840, 1), int64] */, dtype="int64") /* ty=Tensor[(840, 1), int64] */;
    %1419 = reshape(%1418, newshape=[840]) /* ty=Tensor[(840), int64] */;
    %1420 = @func_10258(%1419) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], int64, Tensor[(840), int64]) */;
    %1421 = cast(%var_13013, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
    %1422 = reshape(%1421, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %1423 = @func_4080(%1422) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32], Tensor[(4, 8, 11), float64], Tensor[(84), float32]) */;
    %1424 = @func_7539() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %1425 = @func_8408() /* ty=Tensor[(4, 8, 11), float64] */;
    %1426 = %1420.1;
    %1427 = %1423.3;
    %1428 = @func_2526() /* ty=Tensor[(4, 8, 11), float64] */;
    %1429 = %1424.1;
    (%1425, %1426, meta[relay.Constant][63] /* ty=Tensor[(840, 1), int64] */, %1427, %var_13013, %1428, %1429)
  };
  %1430(%var_13036) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(14, 4, 15), int64], Tensor[(840, 1), int64], Tensor[(4, 8, 11), float64], Tensor[(3, 42), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_11118() -> Tensor[(4, 8, 11), bool] {
  %1432 = fn () -> Tensor[(4, 8, 11), bool] {
    %1431 = @func_10865() /* ty=(Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), bool]) */;
    %1431.0
  };
  %1432() /* ty=Tensor[(4, 8, 11), bool] */
}

def @func_6143() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_6141() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_9486() -> (Tensor[(11, 13, 6), float64],) {
  %1435 = fn () -> (Tensor[(11, 13, 6), float64],) {
    %1433 = @func_6008() /* ty=(Tensor[(11, 13, 6), float64],) */;
    %1434 = %1433.0;
    (%1434,)
  };
  %1435() /* ty=(Tensor[(11, 13, 6), float64],) */
}

def @func_15955(%var_15929: Tensor[(1386), float64]) -> (Tensor[(4, 8, 11), bool], Tensor[(7, 18), float64], Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64], Tensor[(1386), float64]) {
  %1436 = @func_3105() /* ty=(Tensor[(4, 8, 11), bool],) */;
  %1437 = @func_3916() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(1, 126), float32]) */;
  %1438 = cast(%var_15929, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %1439 = reshape(%1438, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float64] */;
  %1440 = @func_9774(%1439) /* ty=(Tensor[(9, 11, 14), float64], Tensor[(4, 8, 11), float64]) */;
  %1441 = cast(%var_15929, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %1442 = %1436.0;
  %1443 = %1437.1;
  %1444 = %1440.0;
  %1445 = @func_12776() /* ty=Tensor[(4, 8, 11), float64] */;
  %1446 = atan(%1441) /* ty=Tensor[(1386), float64] */;
  (%1442, %1443, %1444, %1445, %1446)
}

def @func_997(%var_992: Tensor[(6, 2, 8), int32]) -> Tensor[(6, 2, 8), bool] {
  %1447 = cast(meta[relay.Constant][64] /* ty=Tensor[(6, 2, 8), int32] */, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %1448 = shape_of(%var_992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1449 = cast(%var_992, dtype="bool") /* ty=Tensor[(6, 2, 8), bool] */;
  %1450 = dyn.reshape(%1447, %1448, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1449, %1450) /* ty=Tensor[(6, 2, 8), bool] */
}

def @func_7588() -> (Tensor[(4, 8, 11), float64],) {
  @func_7586() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_17149() -> (Tensor[(4, 8, 11), float64],) {
  %1451 = @func_13122() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1452 = %1451.0;
  (%1452,)
}

def @func_7509() -> (Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(3072), float64]) {
  @func_7507() /* ty=(Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(3072), float64]) */
}

def @func_14283() -> (Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
  %1457 = fn () -> (Tensor[(4, 8, 11), float64], Tensor[(432), float32]) {
    %1453 = @func_7766() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1454 = @func_3841() /* ty=(Tensor[(432), float32], Tensor[(4, 8, 11), bool]) */;
    %1455 = %1453.0;
    %1456 = %1454.0;
    (%1455, %1456)
  };
  %1457() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(432), float32]) */
}

def @func_17526() -> (Tensor[(4, 8, 11), float64],) {
  %1460 = fn () -> (Tensor[(4, 8, 11), float64],) {
    %1458 = @func_8591() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %1459 = %1458.1;
    (%1459,)
  };
  %1460() /* ty=(Tensor[(4, 8, 11), float64],) */
}

def @func_12282() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  %1461 = @func_5565() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
  %1462 = %1461.1;
  %1463 = @func_8655() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1462, %1463)
}

def @func_9303(%var_9284: Tensor[(2, 72), float64]) -> (Tensor[(6, 2, 8), bool], Tensor[(1, 16, 9), float64], Tensor[(2, 72), float64]) {
  %1464 = @func_5169() /* ty=(Tensor[(6, 2, 8), bool],) */;
  %1465 = cast(%var_9284, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %1466 = reshape(%1465, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
  %1467 = @func_6446(%1466) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(1, 16, 9), float64]) */;
  %1468 = %1464.0;
  %1469 = %1467.1;
  (%1468, %1469, %var_9284)
}

def @func_9420() -> (Tensor[(4, 8, 11), float64],) {
  %1470 = @func_5475() /* ty=Tensor[(4, 8, 11), float64] */;
  (%1470,)
}

def @func_14407() -> Tensor[(7, 8, 7), float64] {
  %1471 = @func_12453() /* ty=(Tensor[(7, 8, 7), float64],) */;
  %1471.0
}

def @func_5476() -> Tensor[(4, 8, 11), float64] {
  %1472 = fn () -> Tensor[(4, 8, 11), float64] {
    @func_2724() /* ty=Tensor[(4, 8, 11), float64] */
  };
  %1472() /* ty=Tensor[(4, 8, 11), float64] */
}

def @func_11542() -> (Tensor[(11, 13, 6), float64],) {
  %1475 = fn () -> (Tensor[(11, 13, 6), float64],) {
    %1473 = @func_9485() /* ty=(Tensor[(11, 13, 6), float64],) */;
    %1474 = %1473.0;
    (%1474,)
  };
  %1475() /* ty=(Tensor[(11, 13, 6), float64],) */
}

def @func_5670(%var_5669: Tensor[(432), float32]) -> (Tensor[(4, 8, 11), bool], Tensor[(7, 18), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) {
  %1488 = fn (%var_5633: Tensor[(432), float32]) -> (Tensor[(4, 8, 11), bool], Tensor[(7, 18), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) {
    %1476 = @func_3808() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64], Tensor[(7, 18), float64], Tensor[(126), float32]) */;
    %1477 = cast(%var_5633, dtype="float32") /* ty=Tensor[(432), float32] */;
    %1478 = reshape(%1477, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
    %1479 = @func_1456(%1478) /* ty=(Tensor[(3, 12, 12), float32],) */;
    %1480 = @func_5565() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */;
    %1481 = @func_3105() /* ty=(Tensor[(4, 8, 11), bool],) */;
    %1482 = @func_2557() /* ty=Tensor[(4, 8, 11), bool] */;
    %1483 = %1476.4;
    %1484 = %1479.0;
    %1485 = %1480.0;
    %1486 = %1481.0;
    %1487 = @func_1699() /* ty=Tensor[(4, 8, 11), float64] */;
    (%1482, %1483, %1484, %var_5633, %1485, %1486, %1487)
  };
  %1488(%var_5669) /* ty=(Tensor[(4, 8, 11), bool], Tensor[(7, 18), float64], Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */
}

def @func_15041(%var_14988: Tensor[(3072), float64], %var_15028: Tensor[(364, 2), float32]) -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(3072), float64], Tensor[(6, 2, 8), bool], Tensor[(4, 8, 11), float64], Tensor[(432), float32], Tensor[(364, 2), float32], Tensor[(4, 8, 11), float64], Tensor[(3, 12, 12), float32], Tensor[(96), int32]) {
  %1489 = @func_8801() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1490 = @func_10398() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) */;
  %1491 = @func_10398() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(96), int32], Tensor[(231), int8]) */;
  %1492 = @func_7710() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool]) */;
  %1493 = cast(%var_14988, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %1494 = reshape(%1493, newshape=[3072]) /* ty=Tensor[(3072), float64] */;
  %1495 = @func_13101(%1494) /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(?, 3, 6), int8], Tensor[(12, 16, 16), float64], Tensor[(3072), float64], Tensor[(4, 8, 11), float64]) */;
  %1496 = @func_1836() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(6, 2, 8), bool], Tensor[(96), int32], Tensor[(6, 2, 8), bool]) */;
  %1497 = @func_10089() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(4, 8, 11), float64]) */;
  %1498 = cast(%var_15028, dtype="float32") /* ty=Tensor[(364, 2), float32] */;
  %1499 = %1495.1;
  %1500 = cast(%1499, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %1501 = reshape(%1498, newshape=[4, 14, 13]) /* ty=Tensor[(4, 14, 13), float32] */;
  %1502 = reshape(%1500, newshape=[16, 22]) /* ty=Tensor[(16, 22), float64] */;
  %1503 = @func_7964(%1501, %1502) /* ty=(Tensor[(4, 14, 13), float32], Tensor[(432), float32], Tensor[(16, 22), float64], Tensor[(432), float32], Tensor[(4, 14, 13), float32]) */;
  %1504 = @func_3283() /* ty=(Tensor[(4, 8, 11), float64],) */;
  %1505 = %1492.0;
  %1506 = cast(%1505, dtype="float64") /* ty=Tensor[(4, 8, 11), float64] */;
  %1507 = %1503.1;
  %1508 = cast(%1507, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1509 = reshape(%1506, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), float64] */;
  %1510 = reshape(%1508, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %1511 = @func_2665(%1509, %1510) /* ty=(Tensor[(4, 8, 11), int8], Tensor[(3, 12, 12), float32], Tensor[(432), float32]) */;
  %1512 = @func_4169() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) */;
  %1513 = %1489.0;
  %1514 = %1490.0;
  %1515 = %1491.1;
  %1516 = %1496.1;
  %1517 = %1497.2;
  %1518 = %1504.0;
  %1519 = %1511.1;
  %1520 = %1512.2;
  (%1513, %1514, %1515, %1505, %1499, %var_14988, %1516, %1517, %1507, %var_15028, %1518, %1519, %1520)
}

def @func_4171() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) {
  @func_4169() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(96), int32]) */
}

def @func_16699() -> (Tensor[(96), int32], Tensor[(9, 5, 6), uint32], uint32, Tensor[(270), uint32]) {
  @func_16697() /* ty=(Tensor[(96), int32], Tensor[(9, 5, 6), uint32], uint32, Tensor[(270), uint32]) */
}

def @func_7598(%var_7596: Tensor[(12, 16, 5), float64]) -> Tensor[(12, 16, 5), float64] {
  @func_7595(%var_7596) /* ty=Tensor[(12, 16, 5), float64] */
}

def @func_17182() -> (Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) {
  @func_17180() /* ty=(Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), float64]) */
}

def @func_1620() -> (Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) {
  %1542 = fn () -> (Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) {
    %1521 = cast(meta[relay.Constant][65] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %1522 = reshape(%1521, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), float32] */;
    %1523 = @func_1456(%1522) /* ty=(Tensor[(3, 12, 12), float32],) */;
    %1524 = @func_1211() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1525 = %1524.0;
    %1526 = @func_1297() /* ty=Tensor[(4, 8, 11), float64] */;
    %1527 = cast(%1526, dtype="bool") /* ty=Tensor[(4, 8, 11), bool] */;
    %1528 = shape_of(%1525, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1529 = cast(%1525, dtype="bool") /* ty=Tensor[(4, 8, 11), bool] */;
    %1530 = dyn.reshape(%1527, %1528, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1531 = cast(meta[relay.Constant][66] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
    %1532 = reshape(%1531, newshape=[5, 14, 5]) /* ty=Tensor[(5, 14, 5), float32] */;
    %1533 = @func_1467() /* ty=(Tensor[(4, 8, 11), float64],) */;
    %1534 = @func_1101(%1532) /* ty=Tensor[(5, 14, 5), float32] */;
    %1535 = cast(%1534, dtype="float32") /* ty=Tensor[(5, 14, 5), float32] */;
    %1536 = reshape(%1535, newshape=[5, 14, 5]) /* ty=Tensor[(5, 14, 5), float32] */;
    %1537 = %1523.0;
    %1538 = @func_1310() /* ty=Tensor[(4, 8, 11), float64] */;
    %1539 = logical_or(%1529, %1530) /* ty=Tensor[(4, 8, 11), bool] */;
    %1540 = %1533.0;
    %1541 = @func_1101(%1536) /* ty=Tensor[(5, 14, 5), float32] */;
    (%1537, meta[relay.Constant][65] /* ty=Tensor[(432), float32] */, %1538, %1539, %1534, meta[relay.Constant][66] /* ty=Tensor[(350), float32] */, %1540, %1541)
  };
  %1542() /* ty=(Tensor[(3, 12, 12), float32], Tensor[(432), float32], Tensor[(4, 8, 11), float64], Tensor[(4, 8, 11), bool], Tensor[(5, 14, 5), float32], Tensor[(350), float32], Tensor[(4, 8, 11), float64], Tensor[(5, 14, 5), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen689/build/output.py", line 5809, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:52:25] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


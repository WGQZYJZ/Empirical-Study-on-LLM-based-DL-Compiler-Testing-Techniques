import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_8 = relay.var("var_8", dtype = "int32", shape = ())#candidate|8|()|var|int32
var_9 = relay.var("var_9", dtype = "int32", shape = (1, 10, 2))#candidate|9|(1, 10, 2)|var|int32
bop_10 = relay.greater_equal(var_8.astype('bool'), var_9.astype('bool')) # shape=(1, 10, 2)
output = bop_10
output2 = bop_10
func_50 = relay.Function([var_8,var_9,], output)
mod['func_50'] = func_50
mod = relay.transform.InferType()(mod)
mutated_mod['func_50'] = func_50
mutated_mod = relay.transform.InferType()(mutated_mod)
func_50_call = mutated_mod.get_global_var('func_50')
var_52 = relay.var("var_52", dtype = "int32", shape = ())#candidate|52|()|var|int32
var_53 = relay.var("var_53", dtype = "int32", shape = (1, 10, 2))#candidate|53|(1, 10, 2)|var|int32
call_51 = func_50_call(var_52,var_53,)
output = call_51
func_54 = relay.Function([var_52,var_53,], output)
mutated_mod['func_54'] = func_54
mutated_mod = relay.transform.InferType()(mutated_mod)
const_100 = relay.const([[[5,7,-2,-4,6,-6,-3,-9,-6,-3,-3],[-3,-8,2,-2,1,2,3,-8,5,-2,-3],[4,6,-6,-8,-6,2,2,7,4,3,8],[2,-10,2,-7,-9,-8,10,-3,-4,9,-4],[-1,-7,3,-1,-6,8,1,10,-4,9,-3],[5,9,-7,-7,-1,4,-3,2,7,-6,-5],[-3,-5,3,1,4,4,-7,-4,-1,-3,7],[-9,10,4,-1,3,4,-2,-3,-5,-9,2],[9,10,-1,5,9,-6,10,-4,-10,6,4],[-3,9,4,8,-5,2,-6,-8,-2,5,-3],[9,-7,-4,-5,10,-7,-7,-8,7,-3,-9]],[[-3,-2,-2,-2,-5,4,-1,4,7,3,3],[-7,6,-4,-4,-2,10,1,-2,-8,-7,8],[1,4,-5,3,9,-1,-3,-6,8,3,3],[-9,-10,-3,-9,5,-2,-7,-5,7,10,9],[-2,10,4,-9,1,1,5,8,-4,2,-1],[-6,-9,10,-10,-3,-3,-4,8,5,1,1],[-9,-10,4,-2,-2,1,1,3,2,6,8],[-4,3,-8,-5,-10,9,-9,3,8,-10,-9],[2,-2,7,-10,8,-5,-3,-5,3,-3,7],[-3,-5,-10,-2,4,2,-8,4,7,-2,-10],[5,-3,3,9,10,-4,5,-10,4,10,-1]],[[-4,6,4,-4,-3,4,-7,4,8,-2,-10],[8,-5,-5,-6,-5,1,4,1,2,8,2],[2,3,-9,-6,-1,9,7,-3,2,5,-1],[-1,-8,-6,10,2,-3,5,10,-1,8,-7],[5,9,-7,-5,5,1,-2,10,5,7,4],[10,-5,-5,2,-7,-3,8,-1,10,-8,1],[-8,-3,10,-2,2,-8,-4,10,-6,-3,-3],[9,-4,4,-10,4,-4,2,7,-10,-6,5],[-3,6,-4,-8,-1,-5,-8,9,-1,-7,-9],[1,-2,4,1,-10,6,6,6,-7,3,-2],[-10,-10,-3,8,-7,-10,1,-1,-5,9,-8]],[[1,8,-2,1,-3,-6,-2,1,3,-10,-1],[8,3,2,5,6,-5,-4,-7,-3,-4,5],[-10,-5,-6,-7,-5,-8,8,-2,-1,7,-5],[5,5,-4,8,6,-8,10,-5,-3,-4,3],[-3,3,5,2,-10,-6,6,6,9,-2,3],[1,1,-2,-4,-6,-10,-1,-8,7,-3,-5],[-2,4,4,-8,-10,-9,-4,-7,-4,7,2],[10,-4,-2,-1,5,9,-7,-7,-2,-6,9],[9,-2,1,-8,-7,6,7,-8,4,-2,-5],[6,3,-1,6,-3,-8,-10,2,5,-8,3],[-7,-6,4,-4,8,-3,7,-2,-3,-1,-9]],[[1,1,-3,7,6,4,-6,9,-9,1,8],[3,-2,6,-7,-4,-6,-4,-6,4,-6,-2],[-1,2,10,2,-1,9,-3,-7,-1,3,-8],[8,-10,3,-3,6,-10,3,-10,-7,2,-4],[-2,-9,4,2,-9,-3,3,2,-3,-9,9],[-2,-7,-1,6,5,-8,2,-4,-3,5,9],[4,-3,4,-1,-1,3,3,-6,9,6,6],[1,-10,-1,2,2,-5,-4,-6,1,9,5],[8,-8,5,-6,2,8,-2,7,-3,10,4],[7,9,7,-2,10,8,-6,-2,3,-10,5],[4,-3,-3,-4,-7,8,9,-5,-2,10,3]],[[-2,-8,8,-7,-9,-7,7,5,10,2,-9],[-7,-3,-9,8,9,-6,6,5,7,4,8],[5,-1,-7,-4,6,-3,10,-10,-4,10,-7],[2,-10,8,4,-7,9,-5,-3,-3,10,-5],[-7,-1,-5,-1,-9,-6,3,-5,8,-5,10],[-3,8,-1,3,-3,1,1,6,8,-6,-4],[-8,5,3,-3,9,7,4,-10,-3,9,-6],[2,4,-7,6,-7,-2,-10,-2,9,1,-3],[-3,-3,-5,-10,3,-4,4,7,-3,-4,-9],[-4,-9,4,-9,6,9,8,-2,-4,-2,1],[-10,-6,3,9,-2,2,-6,-1,3,-8,-9]],[[-8,-7,-5,1,-5,-4,-5,8,-8,-9,-4],[-9,9,-4,-6,-3,1,5,9,4,10,-2],[5,-8,-2,3,1,1,-4,9,6,-2,-4],[-7,-6,6,6,-10,-7,4,-7,-3,9,-10],[-9,-2,-5,-5,5,1,-10,-7,2,-7,-6],[-8,8,-1,5,1,-2,-8,9,-5,5,6],[-2,10,-8,5,-8,7,4,4,-9,3,1],[-10,7,5,-1,5,-3,9,4,7,5,-9],[-10,-8,1,2,-5,2,-10,-3,-9,-6,5],[-6,-7,10,-7,-1,-5,5,8,-6,2,4],[7,2,-6,-2,2,-10,1,1,1,4,-10]],[[-10,8,3,5,1,5,-10,4,1,-10,-6],[-1,10,8,-7,-6,-7,6,6,7,5,-5],[-2,9,-4,4,-1,-7,-6,8,5,4,-8],[-4,-2,-4,-3,-4,-7,-8,-3,10,-7,8],[6,-9,-9,5,-3,-6,9,6,10,-9,-4],[-7,-9,-10,6,2,-3,4,-3,-1,-7,-5],[-6,8,-10,2,-4,-10,8,1,-7,7,-1],[-2,-10,-5,10,1,3,-4,8,7,-5,-7],[7,6,-9,4,3,-8,-8,8,-5,6,2],[-10,-5,4,-6,-4,9,6,2,1,7,10],[4,-5,-9,-8,-2,5,7,-9,2,-7,3]]], dtype = "uint16")#candidate|100|(8, 11, 11)|const|uint16
var_101 = relay.var("var_101", dtype = "uint16", shape = (8, 11, 11))#candidate|101|(8, 11, 11)|var|uint16
bop_102 = relay.greater(const_100.astype('bool'), relay.reshape(var_101.astype('bool'), relay.shape_of(const_100))) # shape=(8, 11, 11)
output = bop_102
output2 = bop_102
func_107 = relay.Function([var_101,], output)
mod['func_107'] = func_107
mod = relay.transform.InferType()(mod)
var_108 = relay.var("var_108", dtype = "uint16", shape = (8, 11, 11))#candidate|108|(8, 11, 11)|var|uint16
output = func_107(var_108)
func_109 = relay.Function([var_108], output)
mutated_mod['func_109'] = func_109
mutated_mod = relay.transform.InferType()(mutated_mod)
var_335 = relay.var("var_335", dtype = "int8", shape = (6, 13, 7))#candidate|335|(6, 13, 7)|var|int8
var_336 = relay.var("var_336", dtype = "int8", shape = (6, 13, 7))#candidate|336|(6, 13, 7)|var|int8
bop_337 = relay.less_equal(var_335.astype('bool'), relay.reshape(var_336.astype('bool'), relay.shape_of(var_335))) # shape=(6, 13, 7)
output = relay.Tuple([bop_337,])
output2 = relay.Tuple([bop_337,])
func_363 = relay.Function([var_335,var_336,], output)
mod['func_363'] = func_363
mod = relay.transform.InferType()(mod)
var_364 = relay.var("var_364", dtype = "int8", shape = (6, 13, 7))#candidate|364|(6, 13, 7)|var|int8
var_365 = relay.var("var_365", dtype = "int8", shape = (6, 13, 7))#candidate|365|(6, 13, 7)|var|int8
output = func_363(var_364,var_365,)
func_366 = relay.Function([var_364,var_365,], output)
mutated_mod['func_366'] = func_366
mutated_mod = relay.transform.InferType()(mutated_mod)
const_373 = relay.const([[[1.192908,-5.967010,3.991985,6.893820,-6.390988,-6.703022,-1.932216],[-6.864401,1.126234,5.385345,8.539953,-7.042466,-9.604537,0.361430],[8.954011,-6.926500,-4.125370,-9.774749,-0.276975,-6.808641,7.298552],[-6.853825,9.566156,-7.231776,4.230006,-7.271046,-4.013042,-1.637238]],[[5.721503,-0.039563,6.466917,8.259852,3.433152,5.082722,9.075324],[1.191588,-0.478331,0.525127,-0.428241,5.218013,1.439968,-1.310015],[-9.056284,-5.944956,2.480745,-7.341150,9.567258,-2.966585,5.238136],[-5.120132,4.131547,1.735233,0.260703,-0.883910,2.391313,4.205838]],[[5.043794,-2.138881,6.177136,4.047946,1.335269,6.549724,1.193980],[-3.194547,6.484575,-3.382071,-1.076102,6.358371,-2.274407,0.197256],[9.011214,-1.742750,4.066384,-7.994725,9.699497,1.966989,-4.282066],[4.867822,-1.763646,-2.535343,-2.062724,5.985281,0.525863,-0.376060]],[[-0.850191,6.137774,9.101749,-3.424206,-2.420716,6.585331,-5.285301],[-9.110041,0.354391,-1.842763,9.723804,8.116892,3.421186,-9.053768],[2.569009,-0.618840,3.801211,3.630106,8.510733,9.062420,9.559391],[7.281789,6.378722,-5.226231,6.590139,-9.399136,6.499076,-0.684034]],[[-1.249564,5.852933,-7.212711,9.484312,3.363471,-7.884207,-8.440605],[-8.866854,-2.304577,2.495566,-2.656494,-2.304171,8.160597,-3.172862],[-8.023554,4.943914,-7.657181,9.230949,3.523530,-2.210231,6.908147],[5.248806,-7.249650,8.898348,-3.976052,-7.098015,-7.875834,-7.118146]],[[8.800067,7.717621,-3.796583,2.008994,6.500047,0.555834,9.876907],[-7.677922,-7.467609,6.935025,9.616626,1.034400,4.354865,-0.427762],[-7.717055,0.364576,-6.710247,5.541922,-7.957311,3.053734,5.869500],[-8.415555,-8.701114,-6.898253,-0.503141,7.722468,-5.176010,4.389099]],[[-4.673515,-1.349787,2.561847,-1.279098,-1.472653,-1.688399,-8.536915],[-0.419978,-3.251675,0.061061,5.804256,8.843210,3.571290,-1.959355],[7.042678,1.675489,1.590152,-1.029305,-2.872480,-7.203804,-4.005392],[2.572183,-9.278222,0.516088,-4.476326,0.159503,-2.959536,5.832866]],[[3.170193,1.629902,-0.906983,-3.796774,-7.819881,-1.779854,-5.084263],[0.809871,3.775356,7.848372,8.716601,-8.034881,3.690854,4.261004],[-2.051861,6.106434,-7.404885,-3.870176,-2.990773,7.315392,6.291352],[8.828727,-1.927892,-4.880481,4.608734,-5.863835,-2.059909,-5.125123]],[[-9.985858,6.767249,-5.016420,2.342438,-6.066509,0.207192,-6.531631],[7.272299,-7.205536,8.549351,-6.035884,-4.301274,-5.308119,-3.705634],[6.790197,-3.795780,-0.539248,-2.582192,8.186635,-9.847990,9.253393],[-2.343345,-4.269850,2.136851,-2.692126,9.914334,0.963375,-9.618097]],[[-6.028229,-2.793332,5.434539,-1.760781,3.072997,-5.331834,-0.649547],[-0.052591,3.106823,7.549992,-7.923119,-7.873842,-2.182628,2.555155],[-5.233289,5.785039,-1.274866,-1.425774,-0.190773,-4.136515,-8.137026],[-1.398569,3.547908,-6.273720,6.258180,-4.374378,0.466981,-4.258330]],[[-6.138038,6.979468,1.393073,-1.986851,-3.974459,0.571704,1.354749],[-2.670089,7.460613,-8.916985,2.062048,0.429021,-5.006316,4.212362],[-2.555928,7.832821,2.122686,0.299056,8.369841,9.261930,4.838318],[0.328888,-8.135273,-2.048310,-3.708168,-3.141255,8.546802,4.287366]],[[6.665823,5.528468,-3.398528,-5.436124,0.566305,3.831458,5.918110],[3.995692,1.692051,9.180214,-4.167990,1.152808,-8.261097,2.364311],[4.935762,-4.370865,0.998871,2.866021,-1.542290,7.838132,8.442550],[6.123984,5.648311,1.478721,4.675553,-3.275658,-6.627978,-9.799564]],[[8.745768,1.246230,-7.876552,6.156901,1.137693,-8.482634,1.909870],[-9.458733,-7.373094,6.318006,-4.670284,-2.414649,-9.578079,7.802537],[5.254402,0.110791,1.996766,0.311252,-4.584098,6.603983,9.327164],[-7.193258,-7.803466,-8.566776,-7.158686,-9.919060,-1.186098,-5.753584]],[[-5.959615,-6.917845,6.023947,-8.741912,-5.290258,6.979549,6.437140],[-6.001562,-2.350836,3.412134,4.245756,6.016944,5.310664,-6.979611],[-7.646651,-5.861202,9.872725,-4.224491,0.070553,9.387957,0.555118],[-3.729466,-9.390848,7.886068,9.634660,0.768207,-5.980816,-0.465698]]], dtype = "float64")#candidate|373|(14, 4, 7)|const|float64
uop_374 = relay.atan(const_373.astype('float64')) # shape=(14, 4, 7)
func_363_call = mod.get_global_var('func_363')
func_366_call = mutated_mod.get_global_var('func_366')
var_378 = relay.var("var_378", dtype = "int8", shape = (546,))#candidate|378|(546,)|var|int8
call_377 = relay.TupleGetItem(func_363_call(relay.reshape(var_378.astype('int8'), [6, 13, 7]), relay.reshape(var_378.astype('int8'), [6, 13, 7]), ), 0)
call_379 = relay.TupleGetItem(func_366_call(relay.reshape(var_378.astype('int8'), [6, 13, 7]), relay.reshape(var_378.astype('int8'), [6, 13, 7]), ), 0)
func_107_call = mod.get_global_var('func_107')
func_109_call = mutated_mod.get_global_var('func_109')
const_382 = relay.const([2,-2,2,6,-3,-8,3,9,6,10,-9,1,5,-1,4,8,9,6,-1,3,-7,1,10,7,-7,1,1,-9,5,9,-8,-7,7,10,-6,-6,-2,2,-6,-10,-7,8,-1,6,-6,5,-2,-3,-6,8,6,6,10,9,-8,-8,10,-4,-4,-8,5,-4,-8,7,8,7,-9,1,2,5,1,-6,3,3,-10,6,4,4,7,-7,9,8,-8,9,-2,-9,-2,-5,5,-10,3,-4,-8,-1,2,-9,-2,10,9,-8,-4,4,-4,-10,-1,5,8,2,-8,10,-9,-2,7,10,1,-7,-7,-2,-3,9,3,-9,3,-9,-2,-2,10,-3,6,-5,3,2,6,-10,-6,-5,5,2,-5,1,-1,-10,7,-2,-9,9,-10,2,5,-4,-3,10,3,5,4,-7,9,8,3,8,-8,1,-8,-5,-5,5,-10,-5,8,2,6,-9,-7,10,6,1,4,1,5,6,6,7,8,-8,-3,-2,-10,-5,-5,-8,-2,-6,-10,-8,-4,-6,-8,4,-6,6,-3,-10,9,-9,-10,-7,5,-1,-2,-2,5,-5,-1,-3,-3,8,-9,-10,-6,3,7,10,-5,7,-10,-4,-6,-10,-9,-6,3,-10,-4,9,1,-8,5,-8,-9,-10,5,5,-4,-8,9,-7,10,3,8,-6,7,5,1,6,10,8,1,-7,-10,8,-1,-10,-10,6,8,-7,7,-8,-7,8,-10,7,10,6,8,-9,-9,-1,3,-9,3,-9,9,-9,-2,8,-3,-5,6,5,7,7,3,5,7,-1,9,9,7,-6,4,3,6,2,-3,-10,-9,4,-4,9,10,-2,-8,-7,-10,6,-7,-1,8,7,-10,-2,3,-2,3,-8,3,-2,-2,6,3,4,-10,1,10,-1,-4,-1,7,3,7,4,3,1,-8,5,-10,9,8,1,-9,-10,5,1,-7,5,8,-5,7,6,4,7,2,7,-8,-8,3,2,-1,2,-9,-1,-6,10,2,-9,7,4,1,-1,-2,-8,9,2,4,8,-3,-2,7,4,-8,-8,10,6,5,-2,8,-3,1,9,-1,1,-5,-5,-5,-2,2,7,5,-5,3,-9,-7,-10,-8,-4,-5,3,5,2,6,2,7,-2,-5,3,2,10,2,8,10,-1,6,-5,-3,-3,-5,7,-6,-2,-5,10,-7,-7,-2,-1,8,7,7,4,-3,6,-4,7,3,-1,-8,-6,-3,6,-9,-10,-8,-10,9,4,3,-9,5,6,-7,6,10,-10,4,-10,2,9,-5,6,5,7,10,-4,1,-2,-7,-6,10,-9,4,5,-7,6,5,7,2,5,-9,-6,9,3,-6,-10,-6,1,8,6,2,9,-5,-5,-4,8,1,6,-2,3,-9,-6,-6,5,-3,-1,-4,-2,1,-6,10,-8,8,1,2,-9,1,-8,-2,-10,5,-10,4,-7,-9,-7,7,-2,-9,4,-10,-6,10,-7,6,-7,-1,-9,-1,9,9,3,-1,-10,9,-6,7,-2,-6,1,-6,-5,7,9,2,10,-6,-7,7,9,-1,6,7,-7,5,-6,-6,8,-5,-3,-7,-8,5,9,-3,7,5,2,-1,6,-6,-9,-3,6,-5,7,-2,-6,10,-9,6,-7,-1,-5,-7,-8,-5,-5,-3,-8,-10,2,-10,10,-4,3,5,10,-8,-6,-8,-7,-3,-3,1,-7,-6,6,-7,-6,-3,8,-10,4,5,-2,-6,8,-9,-6,-4,-3,1,-8,6,-7,4,7,-8,-1,-2,-10,10,-8,10,-9,-8,-7,-4,7,-9,-8,-4,9,7,6,1,-8,3,7,-1,-10,-1,-7,-1,4,1,-5,9,6,3,3,-10,-2,6,-6,8,-5,-2,5,-7,3,2,-4,3,-7,3,-8,-1,-6,4,4,-8,2,-1,3,-7,-7,-6,2,-2,6,8,-8,6,6,6,3,-8,5,-5,7,-5,-3,-7,10,3,-5,-2,2,5,-10,-7,-6,-2,-4,9,9,8,-5,-10,-2,-3,-5,-10,-2,4,-7,-7,-6,3,-5,1,-6,-9,-4,10,-1,-3,-9,-3,9,5,6,10,-2,-10,-7,1,10,8,7,9,2,-4,6,-2,-3,-2,10,1,-7,6,-3,-9,9,6,5,3,9,8,5,2,-8,8,-6,-7,3,-9,2,-1,5,-6,3,10,1,9,10,5,-6,6,-6,-5,6,-7,-1,-1,6,-1,-9,2,10,7,1,-8,4,8,-6,-1,8,5,4,10,-3,10,-1,-3,4,-3,-1,1,-4,7,6,4,-4,5,-5,10,5,2,-2,9,5,2,-2,1,-4,7,6,5,-2,-10,7,-5,-9,10,-1,9,10,2,-4,7,-3,7,-8,9,-5,7,8,4,-8,-9,3,7,-9,7,-3,-1,-1,-6,-3,10,-4,7,8,9,6,-7,8,-6,4,-8,10,-3,-10,-1,-4,10,-8,1,-8,4,-8,7,-8,3,-6,8,2,8,-10,6,10,3,-3,-5,-5,-7,3,-9,8,-2,-4,-2,-2,2,-7,-8,-4,-6,7,10,-4,5,2,8,-7,-4,-1,-1,5,8,2,3,-9,5,-2,-8,-9], dtype = "uint16")#candidate|382|(968,)|const|uint16
call_381 = func_107_call(relay.reshape(const_382.astype('uint16'), [8, 11, 11]))
call_383 = func_107_call(relay.reshape(const_382.astype('uint16'), [8, 11, 11]))
output = relay.Tuple([uop_374,call_377,var_378,call_381,const_382,])
output2 = relay.Tuple([uop_374,call_379,var_378,call_383,const_382,])
func_397 = relay.Function([var_378,], output)
mod['func_397'] = func_397
mod = relay.transform.InferType()(mod)
mutated_mod['func_397'] = func_397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_398 = relay.var("var_398", dtype = "int8", shape = (546,))#candidate|398|(546,)|var|int8
func_397_call = mutated_mod.get_global_var('func_397')
call_399 = func_397_call(var_398)
output = call_399
func_400 = relay.Function([var_398], output)
mutated_mod['func_400'] = func_400
mutated_mod = relay.transform.InferType()(mutated_mod)
var_425 = relay.var("var_425", dtype = "float32", shape = (11, 10, 7))#candidate|425|(11, 10, 7)|var|float32
uop_426 = relay.tan(var_425.astype('float32')) # shape=(11, 10, 7)
var_432 = relay.var("var_432", dtype = "float32", shape = (11, 10, 7))#candidate|432|(11, 10, 7)|var|float32
bop_433 = relay.bitwise_and(var_425.astype('int64'), relay.reshape(var_432.astype('int64'), relay.shape_of(var_425))) # shape=(11, 10, 7)
var_441 = relay.var("var_441", dtype = "float32", shape = (11, 10, 7))#candidate|441|(11, 10, 7)|var|float32
bop_442 = relay.subtract(uop_426.astype('int64'), relay.reshape(var_441.astype('int64'), relay.shape_of(uop_426))) # shape=(11, 10, 7)
func_50_call = mod.get_global_var('func_50')
func_54_call = mutated_mod.get_global_var('func_54')
var_450 = relay.var("var_450", dtype = "int32", shape = ())#candidate|450|()|var|int32
var_451 = relay.var("var_451", dtype = "int32", shape = (20,))#candidate|451|(20,)|var|int32
call_449 = func_50_call(relay.reshape(var_450.astype('int32'), []), relay.reshape(var_451.astype('int32'), [1, 10, 2]), )
call_452 = func_50_call(relay.reshape(var_450.astype('int32'), []), relay.reshape(var_451.astype('int32'), [1, 10, 2]), )
uop_455 = relay.acos(uop_426.astype('float64')) # shape=(11, 10, 7)
func_50_call = mod.get_global_var('func_50')
func_54_call = mutated_mod.get_global_var('func_54')
call_460 = func_50_call(relay.reshape(var_450.astype('int32'), []), relay.reshape(var_451.astype('int32'), [1, 10, 2]), )
call_461 = func_50_call(relay.reshape(var_450.astype('int32'), []), relay.reshape(var_451.astype('int32'), [1, 10, 2]), )
bop_462 = relay.not_equal(uop_455.astype('bool'), relay.reshape(uop_426.astype('bool'), relay.shape_of(uop_455))) # shape=(11, 10, 7)
output = relay.Tuple([bop_433,bop_442,call_449,var_450,var_451,call_460,bop_462,])
output2 = relay.Tuple([bop_433,bop_442,call_452,var_450,var_451,call_461,bop_462,])
func_466 = relay.Function([var_425,var_432,var_441,var_450,var_451,], output)
mod['func_466'] = func_466
mod = relay.transform.InferType()(mod)
var_467 = relay.var("var_467", dtype = "float32", shape = (11, 10, 7))#candidate|467|(11, 10, 7)|var|float32
var_468 = relay.var("var_468", dtype = "float32", shape = (11, 10, 7))#candidate|468|(11, 10, 7)|var|float32
var_469 = relay.var("var_469", dtype = "float32", shape = (11, 10, 7))#candidate|469|(11, 10, 7)|var|float32
var_470 = relay.var("var_470", dtype = "int32", shape = ())#candidate|470|()|var|int32
var_471 = relay.var("var_471", dtype = "int32", shape = (20,))#candidate|471|(20,)|var|int32
output = func_466(var_467,var_468,var_469,var_470,var_471,)
func_472 = relay.Function([var_467,var_468,var_469,var_470,var_471,], output)
mutated_mod['func_472'] = func_472
mutated_mod = relay.transform.InferType()(mutated_mod)
var_515 = relay.var("var_515", dtype = "int8", shape = ())#candidate|515|()|var|int8
var_516 = relay.var("var_516", dtype = "int8", shape = (13, 9, 2))#candidate|516|(13, 9, 2)|var|int8
bop_517 = relay.not_equal(var_515.astype('bool'), var_516.astype('bool')) # shape=(13, 9, 2)
func_466_call = mod.get_global_var('func_466')
func_472_call = mutated_mod.get_global_var('func_472')
var_521 = relay.var("var_521", dtype = "float32", shape = (770,))#candidate|521|(770,)|var|float32
const_522 = relay.const([[5],[4],[6],[-8],[8],[-8],[1],[2],[1],[10],[-6],[8],[-8],[-6],[-6],[3],[-10],[-1],[-9],[-1]], dtype = "int32")#candidate|522|(20, 1)|const|int32
call_520 = relay.TupleGetItem(func_466_call(relay.reshape(var_521.astype('float32'), [11, 10, 7]), relay.reshape(var_521.astype('float32'), [11, 10, 7]), relay.reshape(var_521.astype('float32'), [11, 10, 7]), relay.reshape(var_515.astype('int32'), []), relay.reshape(const_522.astype('int32'), [20,]), ), 5)
call_523 = relay.TupleGetItem(func_472_call(relay.reshape(var_521.astype('float32'), [11, 10, 7]), relay.reshape(var_521.astype('float32'), [11, 10, 7]), relay.reshape(var_521.astype('float32'), [11, 10, 7]), relay.reshape(var_515.astype('int32'), []), relay.reshape(const_522.astype('int32'), [20,]), ), 5)
func_50_call = mod.get_global_var('func_50')
func_54_call = mutated_mod.get_global_var('func_54')
call_530 = func_50_call(relay.reshape(var_515.astype('int32'), []), relay.reshape(call_520.astype('int32'), [1, 10, 2]), )
call_531 = func_50_call(relay.reshape(var_515.astype('int32'), []), relay.reshape(call_520.astype('int32'), [1, 10, 2]), )
var_537 = relay.var("var_537", dtype = "int32", shape = (20, 12))#candidate|537|(20, 12)|var|int32
bop_538 = relay.divide(const_522.astype('float32'), var_537.astype('float32')) # shape=(20, 12)
bop_544 = relay.left_shift(call_520.astype('int64'), relay.reshape(const_522.astype('int64'), relay.shape_of(call_520))) # shape=(1, 10, 2)
bop_547 = relay.left_shift(call_523.astype('int64'), relay.reshape(const_522.astype('int64'), relay.shape_of(call_523))) # shape=(1, 10, 2)
uop_548 = relay.sigmoid(bop_544.astype('float64')) # shape=(1, 10, 2)
uop_550 = relay.sigmoid(bop_547.astype('float64')) # shape=(1, 10, 2)
func_107_call = mod.get_global_var('func_107')
func_109_call = mutated_mod.get_global_var('func_109')
const_556 = relay.const([4,-8,3,2,-5,1,-4,-10,4,-9,-1,10,-10,-5,7,8,3,10,-7,7,7,-8,8,-9,-7,-5,-7,8,-9,-8,6,-8,1,-5,4,-2,2,4,-8,-2,3,-3,-2,10,5,-8,2,-2,-7,3,10,2,5,-2,9,10,-1,4,6,-5,-2,6,10,-8,6,8,-7,10,4,-9,-5,-5,-3,-2,-5,-2,3,-10,7,-1,1,10,10,4,-1,-7,1,7,-2,-3,-9,3,-2,-4,-5,1,-4,6,1,8,-2,-2,-8,4,-9,9,1,-7,-9,3,6,9,-7,4,4,1,6,8,-2,5,1,-9,-8,-9,-7,-10,-6,-5,-4,10,8,4,7,-7,6,2,8,2,-6,-4,3,8,-2,4,-1,-6,8,-2,-3,5,10,9,-7,-5,-3,-9,-2,-8,1,2,4,10,7,-8,10,-10,-9,10,1,10,-4,-10,8,-1,-8,9,-1,6,1,-6,7,5,6,-3,-3,-1,-4,3,9,-8,-9,10,6,-5,2,-9,-9,7,10,-4,-3,-9,-8,-8,8,-5,-3,-6,3,-5,5,3,8,1,10,-2,2,9,-6,6,-2,-3,-6,-3,10,-5,4,9,10,2,7,2,-5,-9,9,-5,8,6,-6,-4,-7,-1,9,-2,2,-8,10,-8,2,-8,-7,-1,-2,1,-4,-4,4,-1,-7,-1,-1,-8,8,5,-5,10,-7,-5,8,7,-10,4,-6,8,-1,10,5,-2,4,-2,2,1,3,-6,-1,-4,4,9,-6,-3,4,-9,-3,-4,8,-6,-8,-10,4,-1,-1,-7,6,4,3,-8,-3,7,-8,3,-7,-8,7,-5,6,-7,4,1,-10,-1,-2,-1,8,3,9,1,6,-2,-9,-5,2,1,5,-7,7,-7,8,6,-6,-1,-4,2,4,-4,-8,8,-8,-7,1,8,-1,-8,5,-7,2,7,-2,7,-2,1,-7,-3,7,10,5,5,4,-6,-9,3,3,-9,-10,3,7,-3,2,-1,-7,1,10,-9,1,-5,-10,-2,-8,-6,-7,-10,2,9,9,-6,-3,-8,3,9,-5,-4,5,-6,5,3,2,6,-7,9,-9,4,-2,-6,2,-10,-2,-1,-8,-9,-8,7,-6,-3,2,-10,-7,-2,1,-5,-5,-1,7,1,-7,-10,-5,-7,4,5,-2,-6,3,9,7,-6,-6,7,-7,1,-1,2,-2,6,-7,-1,-7,-9,4,-4,-9,-1,-7,2,-9,9,8,7,-10,-5,5,7,2,4,-3,6,9,1,-8,-10,-6,8,-2,-3,7,9,-5,-5,4,2,6,-9,7,-10,3,-5,-1,-2,-7,5,-4,-5,-3,-3,-10,4,4,10,5,8,10,-6,6,3,-4,7,-3,4,-5,-4,-3,10,6,-1,-1,-1,-2,-3,-7,-10,-5,9,-1,5,-2,-10,1,-4,-1,-10,-2,3,-7,2,3,7,1,5,10,10,2,9,-10,-10,6,1,-2,3,1,5,9,9,9,4,5,-1,3,-10,-3,-2,-2,-6,-7,6,-6,1,5,5,-5,3,-4,9,-6,-8,1,7,-3,10,4,2,-6,-3,-5,5,1,4,-4,-1,-1,-9,-9,6,1,-3,-1,-5,8,-6,-8,4,8,-3,10,3,2,-2,10,2,5,8,-8,10,1,-8,-8,-8,-10,-9,6,-2,7,7,3,1,-5,-3,-10,-9,-3,-9,1,7,10,-4,1,-5,9,8,-3,1,7,-1,10,-9,-8,4,-10,3,-1,6,-10,-10,5,2,-8,8,-8,6,10,1,-6,7,7,5,6,10,4,-6,2,1,-10,7,7,-6,-9,-6,3,10,-5,10,6,-7,1,-1,1,3,10,-1,-3,7,5,6,9,10,1,-7,-1,9,-8,-7,4,-10,9,-3,-10,4,-4,-5,-6,-8,4,-4,-2,7,7,8,-3,8,-2,6,-3,-7,-1,-1,7,4,7,-6,-4,8,6,-3,-6,3,-1,-10,-9,1,-9,-9,-4,-8,2,1,-7,-7,6,-4,-10,10,5,-6,-9,4,-9,-4,5,-7,4,-5,8,-5,-4,7,-5,-5,-9,3,-8,-5,10,-2,-1,-4,-9,-7,-2,9,1,-10,-3,5,4,1,6,10,5,-5,-3,3,-9,-6,3,9,-1,8,-3,-7,4,-10,-4,-8,-2,-7,-3,4,-9,5,8,-5,2,-7,8,-2,2,3,-10,-6,6,-7,2,-1,4,4,-9,-2,-2,-7,-5,-3,1,-4,6,5,-1,-1,6,7,-9,1,-10,10,-4,-2,-8,-7,-8,-1,-8,8,-1,-6,4,-6,-4,2,3,-6,1,-7,3,-7,2,-9,6,-2,8,-5,-1,5,9,-1,-9,9,-7,6,-8,-2,3,-3,-9,-8,-4,1,-6,-3,2,-5,-5,1,-1,-3,-2,-3,6,-1,-10,-4,-4,2,-1,-2,2,-6,-4,-8,-3,-7,-8,7,-6,-9,-1,-3,-9,-4,-1,-5,-6,10,7,-8,-1,-7,-5,10,-7,10,-3,-3,-7,5,3,-8,1,2,6,-10,7,3,-4,-5,-4,-8,-5,1,8,-7,8,-2,3,-6,-6,-3,6,4,1,-10,2,3], dtype = "uint16")#candidate|556|(968,)|const|uint16
call_555 = func_107_call(relay.reshape(const_556.astype('uint16'), [8, 11, 11]))
call_557 = func_107_call(relay.reshape(const_556.astype('uint16'), [8, 11, 11]))
var_558 = relay.var("var_558", dtype = "float64", shape = (8, 10, 2))#candidate|558|(8, 10, 2)|var|float64
bop_559 = relay.mod(uop_548.astype('float32'), var_558.astype('float32')) # shape=(8, 10, 2)
bop_562 = relay.mod(uop_550.astype('float32'), var_558.astype('float32')) # shape=(8, 10, 2)
bop_577 = relay.less(bop_559.astype('bool'), call_520.astype('bool')) # shape=(8, 10, 2)
bop_580 = relay.less(bop_562.astype('bool'), call_523.astype('bool')) # shape=(8, 10, 2)
uop_588 = relay.sin(bop_559.astype('float64')) # shape=(8, 10, 2)
uop_590 = relay.sin(bop_562.astype('float64')) # shape=(8, 10, 2)
bop_592 = relay.subtract(uop_588.astype('int16'), call_520.astype('int16')) # shape=(8, 10, 2)
bop_595 = relay.subtract(uop_590.astype('int16'), call_523.astype('int16')) # shape=(8, 10, 2)
var_608 = relay.var("var_608", dtype = "int16", shape = (8, 10, 2))#candidate|608|(8, 10, 2)|var|int16
bop_609 = relay.logical_or(bop_592.astype('bool'), relay.reshape(var_608.astype('bool'), relay.shape_of(bop_592))) # shape=(8, 10, 2)
bop_612 = relay.logical_or(bop_595.astype('bool'), relay.reshape(var_608.astype('bool'), relay.shape_of(bop_595))) # shape=(8, 10, 2)
bop_616 = relay.left_shift(bop_609.astype('int16'), relay.reshape(bop_592.astype('int16'), relay.shape_of(bop_609))) # shape=(8, 10, 2)
bop_619 = relay.left_shift(bop_612.astype('int16'), relay.reshape(bop_595.astype('int16'), relay.shape_of(bop_612))) # shape=(8, 10, 2)
bop_621 = relay.greater_equal(bop_616.astype('bool'), relay.reshape(bop_592.astype('bool'), relay.shape_of(bop_616))) # shape=(8, 10, 2)
bop_624 = relay.greater_equal(bop_619.astype('bool'), relay.reshape(bop_595.astype('bool'), relay.shape_of(bop_619))) # shape=(8, 10, 2)
bop_628 = relay.add(uop_548.astype('uint64'), bop_616.astype('uint64')) # shape=(8, 10, 2)
bop_631 = relay.add(uop_550.astype('uint64'), bop_619.astype('uint64')) # shape=(8, 10, 2)
output = relay.Tuple([bop_517,var_521,call_530,bop_538,call_555,const_556,bop_577,bop_621,bop_628,])
output2 = relay.Tuple([bop_517,var_521,call_531,bop_538,call_557,const_556,bop_580,bop_624,bop_631,])
func_653 = relay.Function([var_515,var_516,var_521,var_537,var_558,var_608,], output)
mod['func_653'] = func_653
mod = relay.transform.InferType()(mod)
mutated_mod['func_653'] = func_653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_653_call = mutated_mod.get_global_var('func_653')
var_655 = relay.var("var_655", dtype = "int8", shape = ())#candidate|655|()|var|int8
var_656 = relay.var("var_656", dtype = "int8", shape = (13, 9, 2))#candidate|656|(13, 9, 2)|var|int8
var_657 = relay.var("var_657", dtype = "float32", shape = (770,))#candidate|657|(770,)|var|float32
var_658 = relay.var("var_658", dtype = "int32", shape = (20, 12))#candidate|658|(20, 12)|var|int32
var_659 = relay.var("var_659", dtype = "float64", shape = (8, 10, 2))#candidate|659|(8, 10, 2)|var|float64
var_660 = relay.var("var_660", dtype = "int16", shape = (8, 10, 2))#candidate|660|(8, 10, 2)|var|int16
call_654 = func_653_call(var_655,var_656,var_657,var_658,var_659,var_660,)
output = call_654
func_661 = relay.Function([var_655,var_656,var_657,var_658,var_659,var_660,], output)
mutated_mod['func_661'] = func_661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_915 = relay.var("var_915", dtype = "int64", shape = (15, 7, 12))#candidate|915|(15, 7, 12)|var|int64
var_916 = relay.var("var_916", dtype = "int64", shape = (15, 7, 12))#candidate|916|(15, 7, 12)|var|int64
bop_917 = relay.less_equal(var_915.astype('bool'), relay.reshape(var_916.astype('bool'), relay.shape_of(var_915))) # shape=(15, 7, 12)
func_107_call = mod.get_global_var('func_107')
func_109_call = mutated_mod.get_global_var('func_109')
var_924 = relay.var("var_924", dtype = "uint16", shape = (968,))#candidate|924|(968,)|var|uint16
call_923 = func_107_call(relay.reshape(var_924.astype('uint16'), [8, 11, 11]))
call_925 = func_107_call(relay.reshape(var_924.astype('uint16'), [8, 11, 11]))
output = relay.Tuple([bop_917,call_923,var_924,])
output2 = relay.Tuple([bop_917,call_925,var_924,])
func_927 = relay.Function([var_915,var_916,var_924,], output)
mod['func_927'] = func_927
mod = relay.transform.InferType()(mod)
mutated_mod['func_927'] = func_927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_927_call = mutated_mod.get_global_var('func_927')
var_929 = relay.var("var_929", dtype = "int64", shape = (15, 7, 12))#candidate|929|(15, 7, 12)|var|int64
var_930 = relay.var("var_930", dtype = "int64", shape = (15, 7, 12))#candidate|930|(15, 7, 12)|var|int64
var_931 = relay.var("var_931", dtype = "uint16", shape = (968,))#candidate|931|(968,)|var|uint16
call_928 = func_927_call(var_929,var_930,var_931,)
output = call_928
func_932 = relay.Function([var_929,var_930,var_931,], output)
mutated_mod['func_932'] = func_932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_947 = relay.var("var_947", dtype = "float64", shape = (9, 15, 16))#candidate|947|(9, 15, 16)|var|float64
uop_948 = relay.rsqrt(var_947.astype('float64')) # shape=(9, 15, 16)
func_107_call = mod.get_global_var('func_107')
func_109_call = mutated_mod.get_global_var('func_109')
const_951 = relay.const([1,2,-2,-8,7,2,-8,-4,-2,-8,7,2,-3,7,2,-2,8,4,-2,-8,-4,-6,5,-1,-8,-10,1,8,-10,9,-3,-4,-4,4,-3,-2,1,1,7,-5,-1,2,8,-5,7,10,-6,4,5,5,-10,-6,6,-9,9,1,-10,1,3,6,-3,-1,-1,10,-2,-3,-5,-3,8,5,-7,-7,-9,7,-6,3,1,10,-10,-7,7,-5,3,-3,-4,-6,7,10,-2,10,-3,-9,9,-4,2,-1,5,1,-8,7,-3,2,6,7,-2,8,-2,-10,8,1,-7,-1,10,10,-6,-1,10,10,7,2,6,7,-8,-2,10,8,-6,10,1,-6,-7,-6,10,10,5,9,3,3,2,10,7,-9,-7,10,1,2,5,-4,6,-4,-10,-6,10,6,5,4,-2,-6,4,-6,4,-4,10,3,5,-8,-2,-8,6,-4,10,4,3,-2,5,-3,-9,-7,-6,-4,-8,4,9,-2,-9,-7,-6,-4,10,-7,5,-6,-6,1,3,-1,-10,-1,-10,-3,3,10,10,10,10,-6,7,9,-5,3,8,9,2,6,-4,3,-10,7,-6,1,-4,3,1,3,4,5,4,1,-5,8,-5,-7,3,-6,-2,-7,4,-8,-1,4,-10,1,-5,10,9,-9,10,-1,3,3,2,4,9,-4,4,10,-7,10,5,-3,-9,-9,10,5,7,9,-10,-9,4,3,-1,5,-6,-1,-4,-5,7,-3,6,-2,-8,2,5,-6,5,10,2,4,-8,-9,9,7,-8,7,-10,6,-2,-3,10,-10,1,-10,3,1,1,4,-3,-10,-3,4,-7,-1,-9,-8,6,-5,-5,-9,1,10,1,-5,-8,5,1,-7,2,-9,-2,1,4,4,2,-10,3,-8,7,-9,8,8,-5,-10,-3,-9,4,3,-9,1,-10,8,-2,-8,-10,6,2,9,-9,6,6,6,-9,-1,-6,10,3,9,-4,6,3,2,-8,-5,-10,6,8,9,1,-4,10,2,3,1,-10,1,-3,-9,6,5,-4,-5,4,-8,1,3,9,7,9,-9,-6,-2,-5,-9,4,-10,-8,-1,-6,9,-4,-1,10,-4,7,-7,6,-4,-10,-6,9,-5,1,-9,-6,6,-3,-2,6,-1,1,-8,7,8,4,-4,-1,8,-4,9,-5,1,-4,10,-10,3,-1,6,2,5,-1,-7,-7,-2,-3,-2,-10,8,-5,5,1,5,-8,10,-9,6,-4,-10,-9,2,5,-10,-5,10,7,5,3,10,5,3,-4,3,1,1,-8,-10,6,-10,6,-3,5,-3,-2,-10,-4,8,-2,-8,-4,3,-1,-7,-10,-10,-4,3,4,8,10,10,2,4,1,-7,2,-7,2,1,-10,2,5,5,-1,5,2,-5,-3,10,-10,9,8,4,1,-2,6,6,7,-3,4,-10,-3,-3,-4,10,-2,4,6,-8,3,9,3,-5,5,-1,-5,-7,5,-5,-5,-3,-6,6,6,1,5,-3,5,1,5,1,4,-10,-10,-10,-10,1,-1,-9,1,8,-10,-4,-8,-7,8,5,-7,-3,-10,1,5,7,1,2,-6,7,1,2,-8,-2,-6,8,-4,10,1,5,7,1,7,-9,-4,-8,-10,4,-9,4,-5,-9,-1,-4,-4,10,2,9,-5,-4,-7,-3,5,6,-4,-9,3,2,1,-8,-7,-4,8,-10,-4,-1,9,7,-1,-7,-3,6,6,-2,3,2,6,9,-1,-8,-5,5,5,7,-7,1,-3,-8,6,-8,9,9,7,-1,8,3,-2,-5,-10,-3,7,9,-2,10,6,-8,-7,-10,4,-3,3,-6,-2,-2,-5,1,10,3,6,1,-3,-7,-6,7,10,-4,5,10,3,2,-8,10,-1,-1,8,9,2,2,-4,-10,8,-9,-4,-2,4,4,5,9,7,-4,-5,6,10,-5,-6,1,9,-9,-1,-1,-3,7,9,7,-8,-2,-4,10,6,-8,-2,-8,-9,5,6,-4,-3,10,-7,-9,-5,-9,7,3,-9,-6,10,-4,-1,-10,7,7,-5,3,1,10,-2,7,2,-5,-2,4,6,-4,6,-3,8,-6,-6,-8,2,-5,8,-6,-5,-3,-3,-1,-2,-4,-9,-5,7,-1,-10,-2,-8,7,-10,-8,5,1,8,-6,7,1,9,4,-7,10,5,-10,-10,10,-9,4,10,1,-9,8,-1,3,-5,7,-3,9,-1,-2,-5,1,-1,-7,2,8,-7,9,-5,5,3,-2,-10,-4,-2,-10,-9,1,7,8,6,-3,2,8,-6,9,-6,6,4,7,-8,-2,-9,6,1,-7,2,7,-2,3,-7,-9,-5,-6,-7,-6,-9,4,1,6,-6,6,-1,-3,-7,2,1,6,-6,-7,-7,-10,1,-6,5,-4,-3,10,5,-8,2,-8,-3,10,-7,4,8,-2,-1,-1,10,-7,8,-10,3,-5,10,-9,-8,-4,-4,10,-6,10,3,-4,-7,-8,2,-7,-8,9,8,2,-5,-2,9,-2,6,-4,3,10,3,-6,7,-8,-8,2,-5,1,-3,10,6,-8,-3,-9,-2,-8,-10,8,8,10,-2,-1,9,8], dtype = "uint16")#candidate|951|(968,)|const|uint16
call_950 = func_107_call(relay.reshape(const_951.astype('uint16'), [8, 11, 11]))
call_952 = func_107_call(relay.reshape(const_951.astype('uint16'), [8, 11, 11]))
func_927_call = mod.get_global_var('func_927')
func_932_call = mutated_mod.get_global_var('func_932')
var_962 = relay.var("var_962", dtype = "int64", shape = (1260,))#candidate|962|(1260,)|var|int64
call_961 = relay.TupleGetItem(func_927_call(relay.reshape(var_962.astype('int64'), [15, 7, 12]), relay.reshape(var_962.astype('int64'), [15, 7, 12]), relay.reshape(const_951.astype('uint16'), [968,]), ), 0)
call_963 = relay.TupleGetItem(func_932_call(relay.reshape(var_962.astype('int64'), [15, 7, 12]), relay.reshape(var_962.astype('int64'), [15, 7, 12]), relay.reshape(const_951.astype('uint16'), [968,]), ), 0)
uop_978 = relay.acos(uop_948.astype('float64')) # shape=(9, 15, 16)
output = relay.Tuple([call_950,const_951,call_961,var_962,uop_978,])
output2 = relay.Tuple([call_952,const_951,call_963,var_962,uop_978,])
func_984 = relay.Function([var_947,var_962,], output)
mod['func_984'] = func_984
mod = relay.transform.InferType()(mod)
var_985 = relay.var("var_985", dtype = "float64", shape = (9, 15, 16))#candidate|985|(9, 15, 16)|var|float64
var_986 = relay.var("var_986", dtype = "int64", shape = (1260,))#candidate|986|(1260,)|var|int64
output = func_984(var_985,var_986,)
func_987 = relay.Function([var_985,var_986,], output)
mutated_mod['func_987'] = func_987
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1139 = relay.var("var_1139", dtype = "float64", shape = (4, 11))#candidate|1139|(4, 11)|var|float64
uop_1140 = relay.sqrt(var_1139.astype('float64')) # shape=(4, 11)
output = uop_1140
output2 = uop_1140
func_1144 = relay.Function([var_1139,], output)
mod['func_1144'] = func_1144
mod = relay.transform.InferType()(mod)
mutated_mod['func_1144'] = func_1144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1145 = relay.var("var_1145", dtype = "float64", shape = (4, 11))#candidate|1145|(4, 11)|var|float64
func_1144_call = mutated_mod.get_global_var('func_1144')
call_1146 = func_1144_call(var_1145)
output = call_1146
func_1147 = relay.Function([var_1145], output)
mutated_mod['func_1147'] = func_1147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1260 = relay.var("var_1260", dtype = "float32", shape = (4, 15, 7))#candidate|1260|(4, 15, 7)|var|float32
uop_1261 = relay.asin(var_1260.astype('float32')) # shape=(4, 15, 7)
output = uop_1261
output2 = uop_1261
func_1266 = relay.Function([var_1260,], output)
mod['func_1266'] = func_1266
mod = relay.transform.InferType()(mod)
mutated_mod['func_1266'] = func_1266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1267 = relay.var("var_1267", dtype = "float32", shape = (4, 15, 7))#candidate|1267|(4, 15, 7)|var|float32
func_1266_call = mutated_mod.get_global_var('func_1266')
call_1268 = func_1266_call(var_1267)
output = call_1268
func_1269 = relay.Function([var_1267], output)
mutated_mod['func_1269'] = func_1269
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1592 = relay.var("var_1592", dtype = "uint64", shape = ())#candidate|1592|()|var|uint64
const_1593 = relay.const([[[-10,3,4,3],[-2,9,-1,8],[-9,8,5,-9],[9,2,4,5]],[[9,-10,-6,2],[-9,-8,9,10],[5,3,1,-9],[-3,-10,-6,-3]],[[-5,-7,-5,8],[10,-4,-2,-5],[2,8,-2,-6],[9,4,-2,-8]],[[1,5,4,9],[9,-3,10,9],[5,-5,-6,4],[8,-1,-4,-5]]], dtype = "uint64")#candidate|1593|(4, 4, 4)|const|uint64
bop_1594 = relay.subtract(var_1592.astype('uint64'), const_1593.astype('uint64')) # shape=(4, 4, 4)
output = relay.Tuple([bop_1594,])
output2 = relay.Tuple([bop_1594,])
func_1598 = relay.Function([var_1592,], output)
mod['func_1598'] = func_1598
mod = relay.transform.InferType()(mod)
var_1599 = relay.var("var_1599", dtype = "uint64", shape = ())#candidate|1599|()|var|uint64
output = func_1598(var_1599)
func_1600 = relay.Function([var_1599], output)
mutated_mod['func_1600'] = func_1600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1752 = relay.var("var_1752", dtype = "int8", shape = ())#candidate|1752|()|var|int8
const_1753 = relay.const([[[1,-7,-5,-8,6,-5,-9,10,-6,-1]],[[-1,5,-2,8,3,5,9,-10,1,-1]],[[-1,9,5,9,-6,-6,-9,-5,-2,-10]],[[-7,8,-8,-2,8,3,-2,-9,-6,10]],[[-1,3,5,-8,10,-3,4,5,-2,1]],[[2,7,-8,1,-7,8,-7,-7,-8,1]]], dtype = "int8")#candidate|1753|(6, 1, 10)|const|int8
bop_1754 = relay.bitwise_or(var_1752.astype('int8'), const_1753.astype('int8')) # shape=(6, 1, 10)
func_1144_call = mod.get_global_var('func_1144')
func_1147_call = mutated_mod.get_global_var('func_1147')
const_1763 = relay.const([0.367913,-2.729541,9.601704,2.140590,-7.468930,2.889663,-5.454822,-2.679614,-9.783607,0.842578,1.375059,2.347592,2.000769,1.234927,3.391650,-5.554472,9.438272,-9.870489,-1.935122,8.236398,6.267577,2.956807,9.178703,-0.044954,7.313467,-9.124893,7.270931,-2.494252,-9.769912,3.706842,-7.369111,-1.812837,-2.678266,8.403833,5.006308,8.599194,7.448340,-3.201926,-9.600451,-5.438922,-9.205263,7.930227,-2.646210,-0.656345], dtype = "float64")#candidate|1763|(44,)|const|float64
call_1762 = func_1144_call(relay.reshape(const_1763.astype('float64'), [4, 11]))
call_1764 = func_1144_call(relay.reshape(const_1763.astype('float64'), [4, 11]))
output = relay.Tuple([bop_1754,call_1762,const_1763,])
output2 = relay.Tuple([bop_1754,call_1764,const_1763,])
func_1765 = relay.Function([var_1752,], output)
mod['func_1765'] = func_1765
mod = relay.transform.InferType()(mod)
var_1766 = relay.var("var_1766", dtype = "int8", shape = ())#candidate|1766|()|var|int8
output = func_1765(var_1766)
func_1767 = relay.Function([var_1766], output)
mutated_mod['func_1767'] = func_1767
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1957 = relay.var("var_1957", dtype = "float32", shape = (14, 3, 2))#candidate|1957|(14, 3, 2)|var|float32
uop_1958 = relay.log2(var_1957.astype('float32')) # shape=(14, 3, 2)
output = uop_1958
output2 = uop_1958
func_1960 = relay.Function([var_1957,], output)
mod['func_1960'] = func_1960
mod = relay.transform.InferType()(mod)
var_1961 = relay.var("var_1961", dtype = "float32", shape = (14, 3, 2))#candidate|1961|(14, 3, 2)|var|float32
output = func_1960(var_1961)
func_1962 = relay.Function([var_1961], output)
mutated_mod['func_1962'] = func_1962
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2026 = relay.var("var_2026", dtype = "int16", shape = (16, 9, 6))#candidate|2026|(16, 9, 6)|var|int16
var_2027 = relay.var("var_2027", dtype = "int16", shape = (16, 9, 6))#candidate|2027|(16, 9, 6)|var|int16
bop_2028 = relay.greater_equal(var_2026.astype('bool'), relay.reshape(var_2027.astype('bool'), relay.shape_of(var_2026))) # shape=(16, 9, 6)
output = relay.Tuple([bop_2028,])
output2 = relay.Tuple([bop_2028,])
func_2036 = relay.Function([var_2026,var_2027,], output)
mod['func_2036'] = func_2036
mod = relay.transform.InferType()(mod)
var_2037 = relay.var("var_2037", dtype = "int16", shape = (16, 9, 6))#candidate|2037|(16, 9, 6)|var|int16
var_2038 = relay.var("var_2038", dtype = "int16", shape = (16, 9, 6))#candidate|2038|(16, 9, 6)|var|int16
output = func_2036(var_2037,var_2038,)
func_2039 = relay.Function([var_2037,var_2038,], output)
mutated_mod['func_2039'] = func_2039
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2086 = relay.const(0.017149, dtype = "float64")#candidate|2086|()|const|float64
var_2087 = relay.var("var_2087", dtype = "float64", shape = (12, 7, 6))#candidate|2087|(12, 7, 6)|var|float64
bop_2088 = relay.floor_divide(const_2086.astype('float64'), var_2087.astype('float64')) # shape=(12, 7, 6)
output = bop_2088
output2 = bop_2088
func_2091 = relay.Function([var_2087,], output)
mod['func_2091'] = func_2091
mod = relay.transform.InferType()(mod)
mutated_mod['func_2091'] = func_2091
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2092 = relay.var("var_2092", dtype = "float64", shape = (12, 7, 6))#candidate|2092|(12, 7, 6)|var|float64
func_2091_call = mutated_mod.get_global_var('func_2091')
call_2093 = func_2091_call(var_2092)
output = call_2093
func_2094 = relay.Function([var_2092], output)
mutated_mod['func_2094'] = func_2094
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2292 = relay.var("var_2292", dtype = "float64", shape = (3, 15, 4))#candidate|2292|(3, 15, 4)|var|float64
uop_2293 = relay.acosh(var_2292.astype('float64')) # shape=(3, 15, 4)
output = uop_2293
output2 = uop_2293
func_2295 = relay.Function([var_2292,], output)
mod['func_2295'] = func_2295
mod = relay.transform.InferType()(mod)
mutated_mod['func_2295'] = func_2295
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2296 = relay.var("var_2296", dtype = "float64", shape = (3, 15, 4))#candidate|2296|(3, 15, 4)|var|float64
func_2295_call = mutated_mod.get_global_var('func_2295')
call_2297 = func_2295_call(var_2296)
output = call_2297
func_2298 = relay.Function([var_2296], output)
mutated_mod['func_2298'] = func_2298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2353 = relay.var("var_2353", dtype = "uint16", shape = ())#candidate|2353|()|var|uint16
var_2354 = relay.var("var_2354", dtype = "uint16", shape = (16, 10, 12))#candidate|2354|(16, 10, 12)|var|uint16
bop_2355 = relay.left_shift(var_2353.astype('uint16'), var_2354.astype('uint16')) # shape=(16, 10, 12)
uop_2369 = relay.log(var_2354.astype('float32')) # shape=(16, 10, 12)
output = relay.Tuple([bop_2355,uop_2369,])
output2 = relay.Tuple([bop_2355,uop_2369,])
func_2371 = relay.Function([var_2353,var_2354,], output)
mod['func_2371'] = func_2371
mod = relay.transform.InferType()(mod)
var_2372 = relay.var("var_2372", dtype = "uint16", shape = ())#candidate|2372|()|var|uint16
var_2373 = relay.var("var_2373", dtype = "uint16", shape = (16, 10, 12))#candidate|2373|(16, 10, 12)|var|uint16
output = func_2371(var_2372,var_2373,)
func_2374 = relay.Function([var_2372,var_2373,], output)
mutated_mod['func_2374'] = func_2374
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2404 = relay.const([[[2.175965,8.343163,4.773989,-8.343600],[0.040377,5.727055,-8.578976,5.126872],[-6.915899,2.651033,-5.181943,-1.390544],[-7.505828,5.777356,4.310477,0.183441],[-5.795142,-7.756959,7.498367,4.031401]],[[-4.756006,8.072808,-6.708985,-6.992893],[-7.859296,8.279312,-3.956884,7.318602],[9.915621,7.518851,4.809165,5.219789],[1.030749,-4.240147,0.944656,-2.863187],[-7.860743,-9.910210,-9.285857,0.392112]],[[0.559967,1.232832,-0.411854,-7.610611],[6.133401,-3.887181,-6.570840,-6.970508],[-6.305613,-1.738626,5.350183,7.041501],[-1.695741,-2.559031,-2.296751,5.518962],[-0.778748,4.910694,-6.456582,-9.950248]],[[7.066360,-8.093836,2.212984,-6.784733],[7.683082,9.951633,2.183152,-3.913712],[-1.585746,-3.525179,-1.412337,-7.932595],[-2.177878,-2.689915,1.855242,-7.037255],[5.817974,-8.012442,8.939612,-0.800016]],[[-8.600821,2.894497,-2.283746,3.051491],[-5.874194,-8.988937,-0.789394,7.324105],[-9.539593,7.176259,9.520406,5.742807],[-2.336882,0.840456,-6.350022,3.062277],[1.265813,-8.003431,-2.906349,-6.079998]],[[6.355136,-2.203733,-6.637519,-4.051528],[9.848959,-6.692967,9.053721,3.608905],[-6.831057,2.817681,3.314312,9.694962],[-0.783439,-4.499626,2.362573,9.309249],[0.620964,-1.446686,-9.183114,7.177063]],[[-1.898313,-2.177934,7.961967,-3.251382],[-5.783130,-0.279587,-8.173435,-1.563396],[6.725332,1.600566,3.746195,7.008030],[-9.541732,-7.540370,-9.870759,-8.083855],[-2.083112,-6.157603,0.317712,7.407436]],[[-9.955042,1.409076,6.602660,1.363278],[-4.246312,5.936441,-9.559315,6.047156],[0.146535,6.559988,3.024218,-6.152311],[-9.859285,3.223971,8.195109,5.110426],[-5.604203,-7.413728,-6.025524,-2.298293]],[[9.644900,-8.452880,-8.456650,-0.523495],[-1.529159,1.011463,-1.859445,8.195101],[-0.060260,-6.391465,2.626391,3.472879],[-0.551691,9.300505,-1.854300,4.831302],[0.986045,9.287248,7.480400,7.420251]],[[2.819749,5.162714,2.294858,-8.970119],[2.034603,1.168967,-7.512244,-9.895015],[3.860936,8.740628,1.885109,0.228682],[-5.732677,-9.581860,-0.544013,9.406516],[-8.299539,5.030759,2.783223,6.664630]],[[-0.813803,8.326367,-5.863874,2.874621],[1.160358,6.707135,-2.067234,-7.764516],[7.839568,-9.204346,-9.976572,5.264118],[4.813168,-1.406446,-4.761823,8.551010],[7.615651,5.650476,7.276180,4.606810]],[[8.922515,5.998357,0.277289,-3.199433],[0.444010,-6.312364,2.162032,-1.411749],[0.224339,5.982150,9.956822,-0.034434],[-5.247488,-3.489258,2.754193,-8.361097],[-2.732461,-4.419816,4.440141,-4.157810]],[[8.835582,0.416793,-7.585979,0.875768],[-4.593350,6.266725,-6.329842,-4.505091],[4.632469,-3.755550,-1.864663,3.392628],[-3.135749,-2.138612,-1.458955,-1.333263],[-3.924885,-6.229811,-0.523281,-8.012593]],[[5.359119,-4.883889,1.850657,-4.388505],[7.340271,8.411984,3.537537,-2.143060],[-4.276941,-3.951576,8.527640,7.245001],[-3.593968,-9.294327,0.924917,3.379669],[-5.708067,-9.048319,3.047581,-3.365637]]], dtype = "float32")#candidate|2404|(14, 5, 4)|const|float32
uop_2405 = relay.atan(const_2404.astype('float32')) # shape=(14, 5, 4)
var_2408 = relay.var("var_2408", dtype = "float32", shape = (14, 5, 4))#candidate|2408|(14, 5, 4)|var|float32
bop_2409 = relay.logical_or(const_2404.astype('bool'), relay.reshape(var_2408.astype('bool'), relay.shape_of(const_2404))) # shape=(14, 5, 4)
output = relay.Tuple([uop_2405,bop_2409,])
output2 = relay.Tuple([uop_2405,bop_2409,])
func_2413 = relay.Function([var_2408,], output)
mod['func_2413'] = func_2413
mod = relay.transform.InferType()(mod)
mutated_mod['func_2413'] = func_2413
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2414 = relay.var("var_2414", dtype = "float32", shape = (14, 5, 4))#candidate|2414|(14, 5, 4)|var|float32
func_2413_call = mutated_mod.get_global_var('func_2413')
call_2415 = func_2413_call(var_2414)
output = call_2415
func_2416 = relay.Function([var_2414], output)
mutated_mod['func_2416'] = func_2416
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2483 = relay.var("var_2483", dtype = "float32", shape = (15, 3, 1))#candidate|2483|(15, 3, 1)|var|float32
uop_2484 = relay.asin(var_2483.astype('float32')) # shape=(15, 3, 1)
output = relay.Tuple([uop_2484,])
output2 = relay.Tuple([uop_2484,])
func_2488 = relay.Function([var_2483,], output)
mod['func_2488'] = func_2488
mod = relay.transform.InferType()(mod)
var_2489 = relay.var("var_2489", dtype = "float32", shape = (15, 3, 1))#candidate|2489|(15, 3, 1)|var|float32
output = func_2488(var_2489)
func_2490 = relay.Function([var_2489], output)
mutated_mod['func_2490'] = func_2490
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2674 = relay.const([[[7.028994,-3.747129,-9.546496,5.038347,7.973488,6.656835,-7.686170,2.063041],[-8.374731,-7.836296,6.117785,7.260911,-3.658648,-9.678889,4.975034,-5.464709],[-6.837766,-5.862449,3.663389,-0.260442,-3.131847,-6.725529,6.574308,-2.802930],[-0.352072,-2.088946,5.970724,3.417749,3.229096,2.559677,2.942359,5.723209],[-2.468604,3.986019,3.842019,-0.236953,8.258748,-8.462230,-3.121396,-0.836582],[5.897854,-3.271679,4.473797,-2.339374,8.694442,1.986676,0.893331,2.666091],[-7.497265,0.669998,-7.447946,-8.009195,-8.172520,-5.926925,6.717447,-9.434361],[6.436782,-7.358915,-2.346335,6.809287,-9.499316,-0.670044,-7.095784,5.570890],[-7.798086,-8.530684,-6.647661,-9.756772,-1.477509,7.660115,-1.260043,-0.306879],[-6.883770,-5.035877,-9.581991,-2.740969,-9.730594,-0.470731,-2.474094,-6.189820]],[[1.402574,0.259959,7.733576,-5.676823,-8.505731,8.966510,5.607905,-9.766809],[-2.617690,-9.325315,8.095053,7.269442,-8.261328,-0.927681,7.471578,0.090789],[2.522099,-2.847285,6.079041,-8.124965,-7.560549,-4.183748,-3.420948,6.996779],[5.385093,3.436710,0.365512,-5.750102,-5.181304,-2.508346,3.299541,-8.504450],[7.225293,7.872457,-0.658235,-1.584875,-2.457350,-2.365517,-8.596519,1.047146],[-4.552663,-5.495538,-5.195608,1.707597,2.919800,-0.093699,6.760826,5.246186],[-3.218574,8.192861,6.042205,3.137459,-2.865943,-0.110770,-2.532961,-7.239018],[-2.157930,-3.371959,-5.491361,4.445809,5.887191,-3.540474,2.265603,4.192972],[7.656915,-5.226768,1.325917,-6.684373,8.972149,-2.154931,-8.636601,-8.322724],[9.316024,7.348821,-3.096714,2.583862,9.552999,8.188348,1.499935,-2.659931]],[[1.415672,1.150346,-5.709110,2.704126,-7.160683,0.397248,-6.097470,8.222117],[-4.139016,0.291829,-7.345875,9.265467,2.854275,-9.518126,7.322013,3.546211],[2.830236,0.826059,-1.375052,4.260921,-8.381300,8.267391,0.309863,-5.502487],[-7.222007,-5.010697,-5.001683,-7.473474,-7.044736,5.333211,8.801297,4.713181],[4.472628,-6.947384,1.402860,0.779887,0.690148,-2.469127,6.984263,-9.034919],[5.134554,-3.065780,-8.862859,5.054796,4.587771,6.041238,9.499967,8.457655],[8.528682,-7.391032,-8.561414,7.323673,-7.696029,-4.634525,-8.701219,3.567164],[3.054511,-4.585708,-4.602022,6.382716,-2.200373,-5.839278,2.630673,-7.790581],[-0.685270,8.572047,-5.524863,-2.195214,-1.485103,0.818769,3.075949,-0.436521],[-8.611654,0.116657,-3.801738,7.643414,1.815526,-2.391739,1.122519,3.699251]],[[9.284080,-3.018817,8.102853,6.163254,9.310733,5.586866,2.779431,-3.215427],[-4.857722,7.736985,-7.050173,9.839336,-3.786987,-1.613129,-3.097953,3.329990],[-3.454243,-0.719240,-9.844256,8.516241,-8.226346,3.924869,6.419538,8.253615],[5.635296,-4.729065,3.451127,1.698205,-0.323213,-8.480924,7.522668,-1.254931],[3.051190,-3.612148,-6.612873,-0.148786,-5.125437,3.860407,0.183560,1.273589],[5.082695,-6.832212,2.312643,-5.570409,4.537004,-2.322118,5.521218,-7.478412],[6.458422,-2.784633,-5.646812,-9.372279,-0.809620,-7.464458,0.533115,-3.037077],[-1.297012,7.876876,-5.952094,5.859653,-8.344404,7.735065,-7.816240,4.013637],[-1.430562,-3.998539,-6.689426,0.284898,-5.054527,-5.468556,2.603910,-7.268713],[2.176186,5.600726,2.585643,9.741786,-9.557167,1.849889,-3.680401,4.280990]],[[4.223364,7.891313,-6.208350,-4.924592,0.893582,-4.253375,-3.388271,-5.509710],[7.161366,5.519038,-0.437791,-1.879240,4.419123,0.258078,-5.691800,-2.758924],[-0.634512,1.498077,-7.899218,8.662364,-9.679038,-0.979951,-8.422221,-0.348040],[-7.310044,1.025067,-3.283149,-0.776527,2.055631,2.227547,-8.255899,6.259128],[-9.853335,6.214276,9.523598,-8.935238,7.847630,-8.202341,2.557589,0.615792],[-2.698915,-2.304697,-6.081783,0.536006,-3.344600,-5.368133,-2.543512,-6.698954],[-8.729279,-9.065689,-6.967147,-5.026108,5.407480,-7.812159,9.205822,9.281077],[-4.580399,2.007457,-9.766387,-6.411745,7.337481,0.770434,0.660239,-7.667354],[0.840429,6.031369,5.473711,0.042847,-7.160465,3.797265,6.122386,1.012160],[-2.937299,9.235654,6.800703,-4.831256,-9.541356,1.362578,5.277829,7.035603]],[[-8.318866,-3.347672,-0.369917,-6.505253,9.401789,4.273602,-7.236682,-0.616876],[1.836474,5.420095,-4.245659,5.774913,2.087486,-1.692927,8.345786,-1.482623],[-3.067981,2.636528,-0.902561,2.373761,-2.613291,0.624829,4.985906,1.938439],[7.637136,-3.595975,-5.501368,-0.237985,-6.652986,-8.859121,-1.708991,3.981910],[-2.978913,-9.659194,-5.639988,-4.155097,-6.109166,-2.782765,-4.201025,-2.607920],[-8.350590,4.759055,-8.404647,2.944637,-8.892239,-5.852456,-0.929553,5.603478],[9.127272,7.204881,6.011141,-5.160961,7.307698,4.775521,-2.596348,5.386849],[-8.460922,-2.955513,-1.986009,0.483474,8.803656,-0.878611,3.025526,-3.818489],[7.489339,3.002553,-6.657714,-9.916843,-0.731323,6.555968,6.793556,7.541405],[5.304400,-2.780863,4.041571,-2.119274,-3.880888,-2.602084,-0.192140,-8.460695]],[[7.450784,-1.442004,5.829803,2.731128,-9.424981,-6.884465,-7.876033,-2.104965],[9.945833,5.634435,-3.459678,-8.192956,-3.498703,5.989450,9.625570,-3.780856],[4.696433,-9.636294,4.921861,-4.534936,-6.316713,9.801145,-7.814500,-8.254136],[9.681185,0.005074,4.874889,-4.431784,-5.069026,-0.223428,8.572182,-6.441205],[3.057902,9.282574,2.538249,7.287093,-1.563570,-3.877622,-7.832712,9.721223],[-8.635541,4.258936,-6.161151,-3.001817,1.114770,-9.041852,2.785906,5.676907],[-9.173851,-8.375229,-3.519159,5.648701,-1.224968,-2.768960,5.004340,-2.765753],[-0.801121,8.690422,5.095583,4.703320,4.209189,2.589907,3.353351,9.496054],[8.415070,7.993996,5.556101,6.575315,-6.049966,-0.828871,8.936908,7.742010],[2.164557,-9.094454,-9.475833,3.150087,8.289385,6.160041,-1.224985,-6.721135]],[[-5.164741,3.929181,3.286825,1.626130,-3.100338,0.876980,8.429692,0.635871],[7.862150,6.064643,-7.657615,1.999435,-1.789648,-1.774536,-5.451947,-7.522427],[-3.328986,-6.056767,-7.064392,1.719937,-0.908007,-0.865643,1.132365,-4.558544],[9.188919,8.666144,-8.798060,-2.224070,9.639070,4.699724,1.214372,-5.093707],[-2.846007,6.449212,-3.891281,5.014359,2.247190,-0.060844,-3.327887,-2.040676],[7.644840,8.688185,-8.193531,-0.418467,-6.511868,1.706519,1.573134,4.095469],[2.627390,5.903637,7.952722,-9.835598,-2.615369,1.782770,2.858263,9.863864],[7.525282,-8.404835,-7.528966,2.395426,0.449288,-1.312245,-0.450350,-9.331189],[4.596615,-9.789856,-4.870284,2.247811,9.017056,4.926287,-9.633803,6.940802],[0.740297,-4.855472,-8.614929,-9.168993,-7.889738,6.856401,-0.448453,-5.092156]],[[4.821287,-2.010557,8.928314,-1.229934,0.190447,4.367303,-9.892599,7.234984],[2.679650,7.971541,-0.393937,6.270031,9.347445,4.456811,-0.654468,1.072919],[-7.569423,9.627263,4.362669,8.580149,-9.182521,8.489368,7.167966,-0.351418],[-5.777850,8.614966,-5.269568,5.359072,0.654008,7.570757,6.991342,6.999245],[1.489591,2.832825,-0.551411,5.692556,-6.685897,-0.270629,3.987125,-6.831673],[-4.455380,-3.447594,-8.384293,-9.545779,9.780736,3.618194,-0.288156,-0.313062],[3.823618,8.515815,-6.668947,-9.433549,0.621164,4.027000,-4.115154,-2.916155],[7.657300,6.274135,-7.527569,3.997199,3.948432,-2.561302,2.523839,2.087582],[8.059189,-2.930271,6.025106,-9.655871,9.540618,-4.020906,5.702822,1.626395],[7.982939,-2.608657,-4.974029,1.049534,-2.774951,-9.700677,4.674460,-8.748939]],[[-4.689940,-7.236158,-7.305627,-1.436401,-3.121481,1.951278,1.534057,-0.793148],[6.332943,-2.619265,-2.252889,5.462203,-7.826642,-2.079668,-5.202968,-6.385544],[-0.212740,-0.879355,7.111906,-0.712413,3.710246,9.116918,-6.407637,-3.887650],[-4.446858,-1.785613,-1.154363,0.869132,1.475878,-0.019008,-8.543374,-2.020672],[-4.398994,6.672678,7.242643,7.292145,7.358381,3.802065,4.991452,4.597401],[-8.574693,-9.845410,-6.300788,9.041799,-3.789835,0.388559,-7.156611,5.378996],[-0.138298,-8.164420,-2.568819,2.176177,-4.183198,-9.781380,-2.631962,1.652540],[0.292646,6.462594,5.021719,2.884221,8.417115,1.435221,-2.965461,-1.547287],[8.291304,-6.859809,-1.216747,-3.445877,-4.715708,-0.761492,-9.354979,1.831546],[-3.823321,6.541179,-9.689385,7.896322,0.470933,1.591580,4.493751,1.515875]],[[0.977660,-9.355525,0.588849,-0.243567,2.713957,-0.898869,4.762253,7.347356],[-3.088902,4.696177,0.724159,-6.658439,0.354583,-5.217543,7.464625,-3.225220],[5.464164,7.553047,0.074362,-3.118221,-8.510861,-0.758011,7.369249,2.358683],[3.255270,-6.075461,1.362777,2.662394,-4.647783,0.316281,8.090477,-5.117522],[7.149839,9.165244,-9.542559,3.414197,-9.806709,-0.572739,-6.954728,-5.176302],[-0.564537,-9.635942,4.033038,1.297269,-0.926138,-0.584540,-9.678176,-2.129274],[-1.082742,-5.503212,-0.200619,2.452552,5.599193,-1.112421,-8.989216,4.866270],[9.640834,-7.008063,-8.776939,-8.925222,9.885268,-2.311504,-0.198966,6.704390],[5.417520,8.223728,7.728617,-8.909047,-4.374372,-8.687323,3.427716,5.476688],[-4.171948,-0.644633,2.012174,7.405292,0.244445,-7.174373,-0.676379,-5.029965]],[[6.168322,2.155330,-0.685426,-5.889867,-9.404393,1.268507,-9.736421,-5.600300],[5.622083,1.830727,-4.793604,2.030717,6.722739,7.999644,4.220697,7.369446],[6.257296,1.171744,-4.141526,-6.086982,1.275909,4.383938,-7.636420,-6.616578],[-5.999963,0.955880,-3.210189,-1.128114,-0.222172,3.910428,9.325646,6.310468],[-6.777162,-3.234936,-6.175848,4.175792,5.751499,5.753461,9.084055,2.941646],[-4.697081,-3.049335,9.976391,-0.837894,-6.596481,9.381143,-0.640863,-8.101804],[6.226694,9.778666,0.654956,0.075239,3.613551,-4.764036,-3.576983,-7.499550],[-5.905560,0.945157,7.580325,-4.369931,-5.500864,9.342251,-5.250578,1.738282],[4.334981,0.495804,8.085122,7.909219,1.993068,7.591794,2.639858,-2.938586],[-7.121977,9.246472,7.538734,4.863608,5.203833,-8.018881,-0.944911,5.123344]],[[2.881475,-9.534314,-5.077547,9.450726,-2.639817,8.811697,4.102268,1.925236],[-5.841447,0.103990,-3.359213,7.038835,-7.321454,1.963153,9.844113,-9.737786],[2.639978,5.865867,-7.519119,-2.979719,-5.701173,-3.068694,2.147396,1.059986],[-2.127018,-9.786336,-7.696969,-8.361476,4.121421,9.151468,-5.442521,7.971376],[2.102378,6.794716,-5.717410,-7.623768,-0.894046,-5.411197,-2.036702,2.332021],[-3.233176,-6.006239,0.077450,5.688443,-4.664337,8.701485,-2.857405,7.254742],[2.569885,2.766351,-6.848831,-8.343709,-0.184040,-1.476167,8.546264,3.986767],[6.023566,-9.086313,-1.568066,-0.932443,-1.120282,-9.220086,-0.375518,-6.811061],[-9.422635,9.011328,8.612528,0.079910,-6.599481,1.161865,7.421792,-3.110498],[-3.928317,3.044988,-3.622171,4.648795,5.921334,-9.950253,5.037220,-9.701463]],[[-9.914657,-4.161549,9.066103,-8.388239,-5.079022,2.314950,-3.885987,-8.486437],[-5.689872,-5.771722,6.348756,-0.357888,3.770677,4.389160,7.709811,-6.931593],[8.954360,-5.314618,7.687402,7.994559,-2.960174,8.698875,-1.881363,5.570061],[-6.890073,7.607185,5.634459,-4.233712,-8.303675,-1.128210,5.866303,-3.798567],[5.509663,-6.395797,7.092386,-0.740839,-6.142038,-7.444181,-4.366909,-1.088458],[5.180288,-1.937525,3.092991,8.824470,-9.180213,3.929158,9.218789,4.748736],[-9.187936,1.995549,7.907457,1.292625,1.049885,-5.827575,3.514314,-7.898299],[-5.308403,-7.220074,-2.766061,-1.917065,9.720352,-6.660104,0.196361,9.914201],[5.248299,5.346580,7.636470,5.909418,-3.380490,-5.027701,-1.725744,8.766859],[6.665258,-2.879442,4.941785,4.258813,-5.115667,4.848299,9.088652,-9.885522]],[[8.656816,7.550316,-3.751602,-7.304058,-8.498249,9.978092,6.644794,6.496970],[-1.147484,-6.191973,-1.196575,-5.808412,-2.550930,-9.986540,-1.121094,-7.313082],[-2.735025,-2.397229,-9.388740,-4.817487,3.193983,2.704580,-3.981163,-4.712035],[-5.965529,-7.871737,-2.532478,-2.725341,0.371821,-2.488983,2.953175,8.622456],[-3.721218,-4.088136,-1.764997,3.965323,-6.884216,3.192497,1.639075,7.260651],[-0.211473,4.531192,-9.410666,8.660923,-4.623042,-2.900724,0.931940,-6.552065],[3.115635,-1.257484,7.881790,-8.954328,5.062051,-8.553127,6.384055,-2.967716],[8.899518,-9.684248,8.435555,4.855812,6.429079,4.847516,-3.434098,-3.180238],[9.536818,0.205988,-1.674299,-3.736195,1.557471,-6.921688,2.888125,2.109570],[-1.807056,-7.244022,5.035975,-2.086685,1.238999,4.362572,2.712179,-4.291337]]], dtype = "float32")#candidate|2674|(15, 10, 8)|const|float32
uop_2675 = relay.rsqrt(const_2674.astype('float32')) # shape=(15, 10, 8)
bop_2678 = relay.add(uop_2675.astype('int32'), relay.reshape(const_2674.astype('int32'), relay.shape_of(uop_2675))) # shape=(15, 10, 8)
func_1765_call = mod.get_global_var('func_1765')
func_1767_call = mutated_mod.get_global_var('func_1767')
var_2683 = relay.var("var_2683", dtype = "int8", shape = ())#candidate|2683|()|var|int8
call_2682 = relay.TupleGetItem(func_1765_call(relay.reshape(var_2683.astype('int8'), [])), 1)
call_2684 = relay.TupleGetItem(func_1767_call(relay.reshape(var_2683.astype('int8'), [])), 1)
func_2371_call = mod.get_global_var('func_2371')
func_2374_call = mutated_mod.get_global_var('func_2374')
var_2686 = relay.var("var_2686", dtype = "uint16", shape = (8, 240))#candidate|2686|(8, 240)|var|uint16
call_2685 = relay.TupleGetItem(func_2371_call(relay.reshape(var_2683.astype('uint16'), []), relay.reshape(var_2686.astype('uint16'), [16, 10, 12]), ), 0)
call_2687 = relay.TupleGetItem(func_2374_call(relay.reshape(var_2683.astype('uint16'), []), relay.reshape(var_2686.astype('uint16'), [16, 10, 12]), ), 0)
func_107_call = mod.get_global_var('func_107')
func_109_call = mutated_mod.get_global_var('func_109')
const_2690 = relay.const([-6,2,-4,7,4,-7,7,6,-8,8,1,-8,-2,5,8,9,-2,6,-6,9,10,-9,-10,4,-5,2,6,-6,-7,-2,-4,8,6,9,8,1,3,-4,-4,-1,-3,-2,2,-7,-8,3,2,5,5,9,3,-9,2,1,2,-3,-4,-3,-3,-5,-1,-3,10,-2,-4,-10,5,-5,-3,-10,-10,-9,10,-1,4,3,6,10,-6,3,-5,6,2,-4,-10,1,9,-4,-4,3,-3,-3,4,5,6,-7,2,-1,-9,-9,-1,-10,-2,1,-9,4,-1,-1,10,3,5,-9,7,1,-6,6,-3,-10,-9,1,-3,10,-1,1,6,-9,5,-7,-9,10,-9,3,-3,6,-3,-3,-1,-2,-3,-4,-8,1,-3,8,9,7,6,-1,-4,4,4,-6,10,7,-3,-4,6,-4,8,-10,4,4,-1,1,-3,-3,-2,-2,-10,-8,8,4,1,-2,4,5,-1,-7,5,-8,-5,-3,-1,-1,-4,4,5,5,-7,-5,8,8,9,2,5,2,10,-9,10,1,-3,5,2,3,8,-2,-8,-8,8,-10,-1,-3,8,3,3,4,-1,-3,-1,-4,-4,7,-9,-10,-6,-9,3,-7,5,-10,6,-4,3,9,6,4,2,-4,6,-7,2,-9,-10,-5,10,5,9,10,1,-7,5,-6,3,-9,2,1,-3,-1,1,-2,-3,-5,-8,-4,8,-3,3,1,9,-4,5,-7,8,-3,-5,-9,2,1,-3,-9,6,-6,-3,-2,-5,3,2,10,9,-10,-6,5,7,8,-10,-10,10,5,3,6,-4,9,1,7,-1,-6,-7,7,-6,-3,1,-7,1,4,9,-1,-9,10,-10,-9,5,-9,6,-6,10,-1,5,2,9,-10,-6,-3,1,-4,-2,3,-6,-10,8,-7,9,7,-7,10,7,-4,8,7,-3,-2,3,2,6,4,-10,-2,8,-3,-10,-10,-10,9,4,-1,8,1,7,-3,-5,-8,-7,-4,-2,9,-9,-9,3,-8,8,3,-3,9,6,-4,8,-8,2,9,8,-6,-7,7,-6,5,6,-10,-10,8,1,-9,-4,6,-8,2,3,4,-4,7,7,6,2,2,-6,-10,-2,8,7,-2,8,-4,1,-2,8,-8,3,-8,-1,7,-1,-4,7,9,-3,10,6,-4,-1,-3,-6,-5,7,4,-4,-3,7,9,9,-9,-10,6,2,-2,-4,3,8,-9,-1,-10,3,1,-3,5,6,-6,2,2,-10,8,-9,-4,-8,9,3,4,5,5,4,9,3,-8,-5,-2,3,9,-10,9,5,7,7,5,5,-9,-9,10,-4,-10,9,6,-1,-5,9,10,2,-3,9,3,9,2,10,1,-10,-5,-2,-10,7,3,-9,-1,2,-2,-3,4,8,-1,10,4,-2,9,-9,6,-6,3,3,8,9,6,-6,-3,8,3,-5,-10,-6,-2,1,5,8,5,-2,-9,-5,-3,7,7,10,-5,-9,-4,5,-1,6,4,-4,7,1,4,-5,1,3,-9,-10,-7,-1,-3,9,-5,-10,10,7,7,-7,6,-10,-4,-4,7,7,-10,-7,7,9,-10,10,-2,-9,-6,1,-8,8,-7,3,6,-8,-8,-3,10,4,8,1,-10,-8,9,-8,-4,7,3,-3,-9,7,-5,-4,-2,-6,4,-10,-10,-1,-10,3,9,3,-9,-3,9,-8,2,-1,2,-3,-7,-1,1,-5,4,5,10,-5,8,9,-10,4,-1,-4,-4,-7,2,-7,1,6,-2,9,8,-2,4,4,10,-3,4,-4,-8,9,-1,3,-10,5,9,-5,8,5,-9,-5,8,-2,9,1,6,-5,6,-9,8,-8,8,8,-9,9,2,8,3,-4,-5,8,-3,-8,-5,-5,1,-4,5,6,-2,5,-10,-6,3,5,-5,9,10,-6,4,-9,-5,5,-2,-5,9,-2,2,-4,-10,-5,4,2,3,8,-9,4,10,3,2,8,-7,10,8,6,-3,-2,7,10,2,-7,6,7,1,-8,10,-6,-6,-8,-10,-2,-7,3,-8,2,-2,-3,10,-2,1,-6,6,10,8,-8,-2,5,-7,-3,-1,7,4,2,1,5,-6,3,-2,-5,8,-1,4,-2,-2,7,8,7,-3,5,4,4,-4,-3,-9,-9,10,9,-5,6,-6,3,7,7,10,2,4,4,-4,-4,-3,-9,-2,10,1,-5,1,2,-7,-7,-1,-10,6,4,-9,4,3,9,-6,-5,7,4,7,5,5,10,1,-4,4,-1,-8,8,-10,9,8,-3,-3,2,-2,-5,-8,-4,6,10,-6,4,-7,7,1,-3,9,3,-10,-3,1,1,2,-2,3,-8,-4,5,7,7,10,-7,4,3,5,10,2,9,7,2,-3,3,7,9,1,-3,5,-2,-10,-7,-8,4,8,-6,5,9,10,-5,1,2,9,-5,-5,-7,1,-1,1,-3,-9,4,-6,-3,-4,-3,4,6,-1,10,-9,1,1,3,7,10,4,1,-6,6,5,-6,-7,2,5,-1,3,8,-4,-5,-6,7,1,-10,4,-9,-5,8,7,-9,-4,-1,-2,10,-2,7,1], dtype = "uint16")#candidate|2690|(968,)|const|uint16
call_2689 = func_107_call(relay.reshape(const_2690.astype('uint16'), [8, 11, 11]))
call_2691 = func_107_call(relay.reshape(const_2690.astype('uint16'), [8, 11, 11]))
bop_2700 = relay.maximum(bop_2678.astype('uint16'), relay.reshape(const_2674.astype('uint16'), relay.shape_of(bop_2678))) # shape=(15, 10, 8)
func_466_call = mod.get_global_var('func_466')
func_472_call = mutated_mod.get_global_var('func_472')
const_2706 = relay.const([-4.000071,3.571962,5.107450,1.975781,0.138132,7.106479,-2.100551,1.169846,-8.763536,-7.866462,0.067232,5.565484,-9.264584,-3.524746,2.067729,-2.560694,-7.251370,3.609093,-1.382876,-8.803454,-5.231460,0.497692,-3.201564,4.272447,2.740246,-4.080586,3.363782,3.070729,3.251873,2.515119,2.783022,9.995641,4.656736,5.651852,7.935609,5.655951,4.183964,6.486092,0.880016,6.957790,-4.674029,5.160299,5.126123,7.087699,3.948783,1.378635,0.604602,-5.860148,-8.804322,-3.606832,6.948205,0.261279,8.241058,-1.263104,4.579029,2.295217,8.086190,2.970245,2.339029,-3.794321,-4.110366,9.621128,-1.797805,-5.455515,-9.895242,-9.221982,6.694812,-0.466548,-7.657238,5.297671,-7.529434,5.061217,-1.233855,7.488499,-4.780643,-6.463857,7.647097,-1.931198,9.558560,-9.402256,4.112054,9.109255,-2.618015,2.714643,7.161666,4.253415,1.281666,4.520360,0.140304,-9.069120,-5.558471,-2.287721,-5.806459,1.186404,-9.718447,2.877760,4.623357,-9.738305,3.659971,-8.600605,-1.469834,-9.364820,7.920915,5.236765,-6.604443,-0.714371,-4.877347,2.600065,1.547018,-1.419130,-9.687857,7.763074,0.941833,-7.066142,-7.660056,8.149995,-7.615431,-4.648370,4.835180,-1.855234,6.059362,3.092497,-4.098417,8.960428,0.359153,2.170254,4.400100,4.226120,-4.721933,3.894372,0.909338,8.706852,1.137456,4.851303,-4.259256,-9.502917,-6.082497,9.611878,-5.186884,-5.007539,2.305171,-8.965801,-6.644352,1.097059,3.268023,2.723588,7.051674,-4.338901,3.338261,8.145209,4.441023,2.465744,8.307642,-4.141231,2.544646,-3.686211,-5.207377,-4.302190,-5.302222,4.446178,-9.898657,-0.482377,-0.731820,-9.061305,-5.643109,9.882262,-7.154722,7.027677,5.834905,6.071294,-4.843054,6.138273,-0.439676,-0.809042,0.139440,-0.340550,-9.493545,7.082633,6.208491,-5.376056,-7.636488,-5.247269,6.035417,-8.418342,7.343650,9.111519,6.658235,0.708175,-4.952274,4.013063,6.377828,-0.973965,-2.777705,-5.662280,9.606646,-6.805016,-1.953085,-4.886492,-6.649792,9.111593,7.445473,-3.900788,3.246805,-0.551278,1.734153,-5.894022,-5.354853,-5.013946,-1.167056,-1.527751,-6.626420,5.116242,0.703992,-1.457092,3.132963,-1.604665,-8.168340,1.650356,-8.297170,-6.555988,7.666441,-9.154103,1.714054,4.206211,-6.074886,0.272062,-8.307593,0.636666,1.757040,9.418950,0.173386,6.792979,-6.521562,-7.010829,-3.222223,-6.289432,4.144377,9.875172,-1.418701,-4.872440,9.542634,8.818218,1.059459,1.044437,-0.253857,1.365346,-7.950717,7.128360,1.811946,0.703559,-8.512701,-2.652913,9.563703,-8.375684,-2.083589,-5.758894,6.024346,1.484350,-5.399388,7.215540,8.006592,8.311287,6.352506,6.324669,-2.854588,-6.704454,-6.363021,-4.605430,2.672252,5.542534,1.893307,9.287792,5.689432,3.608659,6.062246,-6.633101,3.802504,1.832428,3.852916,-8.093230,2.800662,-3.572515,1.747399,3.177781,-1.252153,-7.960664,-7.938928,-8.479156,-6.005588,-2.751678,-8.438080,-0.619998,-8.063490,-6.896692,-3.472275,1.168496,1.903636,-5.933291,-9.023969,6.367217,-0.065018,-3.092267,9.439462,6.700734,0.741194,-8.434549,-5.857292,5.027811,-2.000230,-3.519695,-3.984557,-7.040372,-6.008290,-3.234443,7.353475,5.990650,0.395068,-5.643457,-5.971868,-7.770136,5.849181,3.172891,-2.402422,-9.677088,-3.624387,3.651308,-7.696171,-1.470758,-1.160629,6.647016,2.112404,-3.407894,5.095091,1.906695,-9.324582,0.108875,-8.800357,1.217253,9.696564,5.122521,0.501005,2.710676,7.481835,-6.945346,-8.619459,4.735088,-8.328628,1.590792,-5.535444,7.979273,-5.634764,4.163168,5.271881,7.965588,-3.791092,-4.640613,-1.343459,-6.078634,2.104893,5.688502,-2.246572,4.182322,-9.692782,-4.835916,-3.763361,6.768031,-1.909196,0.029182,-9.617820,6.201264,-0.136007,-8.015421,2.067891,-3.635256,0.376924,-3.223496,-9.129227,-7.636975,-2.081767,3.130212,-2.621835,-9.849271,2.268585,-5.094765,-4.988706,9.242317,0.191563,0.874766,-7.855428,3.818426,-5.990445,4.921207,-9.182742,1.564955,9.209455,1.680958,-4.947899,-2.025892,9.500101,5.804372,-6.169200,-7.284680,-2.735483,-9.662478,1.766146,-4.403610,-9.632566,-5.124221,6.320912,6.133856,2.381452,-4.476526,-1.909497,4.720659,5.666414,-3.897597,2.458005,9.664653,-6.877290,-7.732079,0.653530,9.592902,8.841635,-1.920023,-0.046888,1.796665,-2.379367,5.771064,-8.408425,6.730188,5.812177,-1.996314,-7.371706,-6.890007,8.075561,5.268099,8.293905,-1.473836,-8.049196,0.187432,8.053730,-1.876019,-6.438049,-5.386258,2.574562,-9.966808,0.135681,6.476662,-5.829396,0.470275,2.984834,-7.759516,7.742341,2.648595,-5.781686,-1.513816,8.166584,9.500563,-3.159277,-0.609412,0.134974,-1.607041,1.872394,2.831103,4.659216,-6.317934,8.465099,0.407741,2.198365,-5.322661,5.313408,7.501460,-1.107350,-0.093715,4.775574,-8.584281,6.106705,3.881342,-7.407810,-5.870871,5.461416,-7.040794,-2.217930,-6.276010,-6.651295,3.246917,8.678855,-1.707221,3.255838,0.591504,-5.226413,-1.912351,-9.208579,-8.153644,-5.145464,3.192017,7.808531,-1.516991,6.433829,-6.205411,2.414097,-3.376783,-2.767898,-1.871256,6.549677,-7.877275,7.854350,-8.943315,1.562728,9.478236,8.582007,2.177600,-1.753219,-3.515528,-9.099468,-4.511217,-4.313163,4.736871,5.095646,7.953551,2.331968,-2.401456,-5.633069,-7.876638,-1.252548,7.335094,-8.943042,-9.393332,-8.809289,2.294031,5.017198,-4.287854,-8.397255,4.273747,-1.977533,-9.928933,-8.710577,-8.731236,1.770813,-6.754666,-1.896550,-8.328540,5.737297,-5.435188,8.101059,-0.035267,2.545306,5.604201,-7.576899,0.119625,2.911988,-5.428353,8.188426,-1.459394,-2.432395,-4.955287,-5.470917,9.929579,4.903592,3.992849,2.942383,-5.514173,-5.006783,-0.503022,-7.093475,7.763089,-1.307948,0.718818,0.584631,-2.678165,9.141696,-3.730307,7.549041,3.847771,9.225295,-8.928978,-1.436682,6.773328,-4.434455,-3.663567,-6.914384,-0.411835,8.406615,-9.733379,0.633629,-7.544561,6.101231,-0.200769,2.241757,5.789150,-4.723710,9.573184,-3.264061,7.010094,9.057333,0.701444,-2.528902,-6.122424,-9.826160,-8.147012,2.649991,-8.871287,4.221786,-2.815196,-6.267816,-4.752866,5.717547,1.070001,-7.280344,-5.856305,-5.987396,5.836047,8.281749,2.140013,-6.642581,1.743291,-9.244794,-5.742086,-8.119438,-6.854394,8.589007,9.863022,8.538283,-9.887672,1.044221,8.695646,3.329173,-9.007939,-6.197090,-2.643468,6.222083,-3.254000,0.168106,-8.580445,7.512624,-6.790065,0.413893,9.468409,-5.108952,-2.759798,-2.580467,-4.792914,3.118875,-1.438975,-4.244712,-1.395193,-7.528856,7.495642,-0.438875,0.111503,3.555963,-5.428906,4.086685,9.412058,9.061986,-3.981919,1.753044,9.780965,7.904547,-3.067887,-0.769710,-5.369972,3.058512,-1.546841,7.867775,-9.867035,4.571323,1.213655,-4.028872,8.137675,-9.322604,-7.430542,-8.774612,-6.231830,7.437158,3.146258,-3.153547,7.305679,5.781771,2.389066,1.348119,7.877809,-3.810775,-4.843008,1.382336,-5.123296,9.113641,5.265110,5.812699,8.137997,-6.966552,-7.652435,-7.722865,9.120699,-4.725709,-8.725737,-6.583012,-5.008302,-0.528749,3.828235,-9.639090,-0.671008,-2.312095,4.193577,8.169188,8.380202,5.816908,-4.709720,7.491636,-2.195287,-9.885438,3.861684,-0.835558,3.645845,-8.623312,7.747604,3.994686,-6.277659,3.588931,0.063975,3.140072,8.510001,-3.285558,-1.354695,9.559414,2.087824,-6.782155,-4.097330,6.242702,7.267744,-4.548957,-8.524147,-9.130255,-1.968131,8.041498,6.960713,-2.446668,0.339894,-9.045961,-3.732552,-4.395656,-2.163131,-9.706364,-6.256390,-2.360417,-6.970311,-8.990986,-9.065357,6.131870,-7.573387,-3.306313,3.965855,-2.029149,-3.433433,6.219520,-9.355897,-0.006966,-2.127099,5.539476,-4.518681,-7.971605,4.631199,-9.338008,-2.083864,-4.650059,-1.855895,-4.031102,8.472131,-7.459474,3.595562], dtype = "float32")#candidate|2706|(770,)|const|float32
const_2707 = relay.const([-6,8,3,1,-9,-7,-1,7,10,2,8,-10,-4,1,6,7,-9,5,5,9], dtype = "int32")#candidate|2707|(20,)|const|int32
call_2705 = relay.TupleGetItem(func_466_call(relay.reshape(const_2706.astype('float32'), [11, 10, 7]), relay.reshape(const_2706.astype('float32'), [11, 10, 7]), relay.reshape(const_2706.astype('float32'), [11, 10, 7]), relay.reshape(var_2683.astype('int32'), []), relay.reshape(const_2707.astype('int32'), [20,]), ), 5)
call_2708 = relay.TupleGetItem(func_472_call(relay.reshape(const_2706.astype('float32'), [11, 10, 7]), relay.reshape(const_2706.astype('float32'), [11, 10, 7]), relay.reshape(const_2706.astype('float32'), [11, 10, 7]), relay.reshape(var_2683.astype('int32'), []), relay.reshape(const_2707.astype('int32'), [20,]), ), 5)
output = relay.Tuple([call_2682,var_2683,call_2685,var_2686,call_2689,const_2690,bop_2700,call_2705,const_2706,const_2707,])
output2 = relay.Tuple([call_2684,var_2683,call_2687,var_2686,call_2691,const_2690,bop_2700,call_2708,const_2706,const_2707,])
func_2714 = relay.Function([var_2683,var_2686,], output)
mod['func_2714'] = func_2714
mod = relay.transform.InferType()(mod)
mutated_mod['func_2714'] = func_2714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2714_call = mutated_mod.get_global_var('func_2714')
var_2716 = relay.var("var_2716", dtype = "int8", shape = ())#candidate|2716|()|var|int8
var_2717 = relay.var("var_2717", dtype = "uint16", shape = (8, 240))#candidate|2717|(8, 240)|var|uint16
call_2715 = func_2714_call(var_2716,var_2717,)
output = call_2715
func_2718 = relay.Function([var_2716,var_2717,], output)
mutated_mod['func_2718'] = func_2718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2735 = relay.var("var_2735", dtype = "float64", shape = (13, 10, 3))#candidate|2735|(13, 10, 3)|var|float64
uop_2736 = relay.exp(var_2735.astype('float64')) # shape=(13, 10, 3)
uop_2739 = relay.acosh(uop_2736.astype('float64')) # shape=(13, 10, 3)
func_1960_call = mod.get_global_var('func_1960')
func_1962_call = mutated_mod.get_global_var('func_1962')
const_2745 = relay.const([3.904194,2.465207,7.303085,-9.503840,5.097165,-6.013001,2.914330,-4.260738,5.944770,6.674928,9.592078,-0.793513,-1.780176,-7.584110,-5.637038,-7.960106,-3.314932,-2.586920,7.046866,8.883406,-0.068922,-6.323192,-4.630710,1.975670,5.623689,-5.117820,-6.107126,-9.228048,2.980250,2.929025,0.184946,2.531741,3.462633,5.451170,-6.090082,0.408234,0.547174,3.896422,1.985140,7.161934,1.035149,7.228713,-2.101431,8.416705,-8.717232,1.461028,-1.678314,5.486418,-1.211707,7.695871,-4.907872,-2.012783,-4.441565,3.273261,-9.887729,-0.479042,-9.003380,-8.835931,9.096690,-4.405617,-3.622829,4.715927,-1.009859,-2.240748,-0.416997,-5.710754,9.187835,-0.016672,-0.859077,9.499871,-3.578544,-1.213316,6.442380,7.120961,-3.028419,-4.804432,1.133334,-9.842512,-1.682983,5.024426,-3.333374,3.434542,-9.972593,4.313928], dtype = "float32")#candidate|2745|(84,)|const|float32
call_2744 = func_1960_call(relay.reshape(const_2745.astype('float32'), [14, 3, 2]))
call_2746 = func_1960_call(relay.reshape(const_2745.astype('float32'), [14, 3, 2]))
output = relay.Tuple([uop_2739,call_2744,const_2745,])
output2 = relay.Tuple([uop_2739,call_2746,const_2745,])
func_2750 = relay.Function([var_2735,], output)
mod['func_2750'] = func_2750
mod = relay.transform.InferType()(mod)
mutated_mod['func_2750'] = func_2750
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2751 = relay.var("var_2751", dtype = "float64", shape = (13, 10, 3))#candidate|2751|(13, 10, 3)|var|float64
func_2750_call = mutated_mod.get_global_var('func_2750')
call_2752 = func_2750_call(var_2751)
output = call_2752
func_2753 = relay.Function([var_2751], output)
mutated_mod['func_2753'] = func_2753
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2958 = relay.var("var_2958", dtype = "float64", shape = ())#candidate|2958|()|var|float64
const_2959 = relay.const([[[2.404691,-6.118281,-5.252436,-3.826811,6.496568,-4.945877,-8.838733,8.101763,-3.212740],[1.481836,6.609289,-5.544119,-0.179221,3.896838,1.695922,-0.189017,9.802872,-8.598630],[4.744368,5.606324,2.097963,8.800968,8.814724,0.342487,4.619293,-7.545166,-9.919667],[2.857027,5.743722,1.332608,-1.137560,4.314940,-4.078060,0.191659,-1.686679,-6.145328],[-6.091101,-1.324316,-8.677149,2.259742,-6.294763,-3.439432,3.088607,-7.060982,-6.656061],[8.249745,2.163524,2.164952,8.995716,-5.962109,9.951184,0.909170,-1.655179,3.501224],[-6.876766,-2.089247,-2.768413,6.479539,-0.634544,1.901633,1.815518,8.404376,6.998123],[-1.936953,-2.727798,1.497521,6.245012,0.126036,-7.423775,-7.404506,-8.484182,2.780462],[-2.306025,-4.681877,-7.931987,6.782295,-3.478440,3.382292,0.711434,-3.226584,-5.970855],[4.049783,5.516670,1.680319,-1.371806,-2.940909,-5.970413,1.894161,-4.693404,8.441065]]], dtype = "float64")#candidate|2959|(1, 10, 9)|const|float64
bop_2960 = relay.floor_mod(var_2958.astype('float64'), const_2959.astype('float64')) # shape=(1, 10, 9)
bop_2972 = relay.bitwise_and(bop_2960.astype('int8'), relay.reshape(const_2959.astype('int8'), relay.shape_of(bop_2960))) # shape=(1, 10, 9)
bop_2983 = relay.not_equal(bop_2972.astype('bool'), relay.reshape(bop_2960.astype('bool'), relay.shape_of(bop_2972))) # shape=(1, 10, 9)
bop_2999 = relay.logical_xor(const_2959.astype('int16'), relay.reshape(bop_2972.astype('int16'), relay.shape_of(const_2959))) # shape=(1, 10, 9)
var_3004 = relay.var("var_3004", dtype = "bool", shape = (5, 10, 9))#candidate|3004|(5, 10, 9)|var|bool
bop_3005 = relay.floor_divide(bop_2983.astype('float64'), var_3004.astype('float64')) # shape=(5, 10, 9)
bop_3014 = relay.mod(var_3004.astype('float32'), bop_2983.astype('float32')) # shape=(5, 10, 9)
output = relay.Tuple([bop_2999,bop_3005,bop_3014,])
output2 = relay.Tuple([bop_2999,bop_3005,bop_3014,])
func_3020 = relay.Function([var_2958,var_3004,], output)
mod['func_3020'] = func_3020
mod = relay.transform.InferType()(mod)
var_3021 = relay.var("var_3021", dtype = "float64", shape = ())#candidate|3021|()|var|float64
var_3022 = relay.var("var_3022", dtype = "bool", shape = (5, 10, 9))#candidate|3022|(5, 10, 9)|var|bool
output = func_3020(var_3021,var_3022,)
func_3023 = relay.Function([var_3021,var_3022,], output)
mutated_mod['func_3023'] = func_3023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3051 = relay.var("var_3051", dtype = "float64", shape = (11, 16, 14))#candidate|3051|(11, 16, 14)|var|float64
uop_3052 = relay.atanh(var_3051.astype('float64')) # shape=(11, 16, 14)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
var_3063 = relay.var("var_3063", dtype = "uint64", shape = ())#candidate|3063|()|var|uint64
call_3062 = relay.TupleGetItem(func_1598_call(relay.reshape(var_3063.astype('uint64'), [])), 0)
call_3064 = relay.TupleGetItem(func_1600_call(relay.reshape(var_3063.astype('uint64'), [])), 0)
output = relay.Tuple([uop_3052,call_3062,var_3063,])
output2 = relay.Tuple([uop_3052,call_3064,var_3063,])
func_3073 = relay.Function([var_3051,var_3063,], output)
mod['func_3073'] = func_3073
mod = relay.transform.InferType()(mod)
var_3074 = relay.var("var_3074", dtype = "float64", shape = (11, 16, 14))#candidate|3074|(11, 16, 14)|var|float64
var_3075 = relay.var("var_3075", dtype = "uint64", shape = ())#candidate|3075|()|var|uint64
output = func_3073(var_3074,var_3075,)
func_3076 = relay.Function([var_3074,var_3075,], output)
mutated_mod['func_3076'] = func_3076
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3168 = relay.const(2.968719, dtype = "float32")#candidate|3168|()|const|float32
var_3169 = relay.var("var_3169", dtype = "float32", shape = (4, 9, 14))#candidate|3169|(4, 9, 14)|var|float32
bop_3170 = relay.floor_divide(const_3168.astype('float32'), var_3169.astype('float32')) # shape=(4, 9, 14)
output = relay.Tuple([bop_3170,])
output2 = relay.Tuple([bop_3170,])
func_3177 = relay.Function([var_3169,], output)
mod['func_3177'] = func_3177
mod = relay.transform.InferType()(mod)
mutated_mod['func_3177'] = func_3177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3178 = relay.var("var_3178", dtype = "float32", shape = (4, 9, 14))#candidate|3178|(4, 9, 14)|var|float32
func_3177_call = mutated_mod.get_global_var('func_3177')
call_3179 = func_3177_call(var_3178)
output = call_3179
func_3180 = relay.Function([var_3178], output)
mutated_mod['func_3180'] = func_3180
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3239 = relay.const([[[-1,3,-2,5,-3,-3,5,4,-5,8,4,2],[10,6,2,-9,8,-4,10,-6,-6,-5,-5,4],[7,-1,-2,8,8,9,7,5,-1,-4,8,6]],[[-7,6,10,-3,4,8,6,7,-10,-6,-4,2],[9,6,8,-3,3,-8,-1,-1,-4,10,5,-5],[-4,3,1,-3,3,-10,-3,3,-4,10,1,-2]],[[-10,-6,10,9,-2,1,-8,-6,8,-10,-8,-1],[-6,-10,4,-6,4,9,-5,9,-3,-3,-9,-3],[-4,9,8,6,1,-4,10,9,-2,-10,-1,4]],[[-9,8,-3,-4,4,9,-3,7,-3,-9,1,-8],[8,-9,7,4,8,6,3,-10,-5,-8,-6,-2],[-5,3,-1,-8,1,2,1,-5,-8,-2,-3,7]],[[-3,-6,-9,9,3,2,7,7,-9,5,2,9],[-3,10,-5,-3,1,9,-2,-8,4,-9,1,-8],[-4,2,-5,8,4,-5,7,9,-1,-10,7,-8]],[[-7,2,4,10,-3,3,-3,-9,1,8,-3,-3],[-3,9,-8,-3,-5,-5,-4,-6,9,-8,-2,-9],[-10,8,4,-10,-6,-9,8,-1,8,4,3,1]],[[-1,4,4,6,-10,9,-8,1,2,10,3,-2],[9,4,-6,-4,2,2,-1,1,-5,-7,3,-8],[-9,2,-10,-4,-10,1,-1,-5,-2,2,7,9]],[[6,-6,-2,-2,3,-3,-10,-3,5,-6,-8,-1],[10,-8,-7,-9,-10,9,-1,5,7,-10,6,7],[7,8,-6,8,2,-5,2,1,-10,6,-3,7]],[[10,5,1,7,-5,3,-4,9,10,7,7,6],[8,1,4,9,7,9,-8,-6,-3,-6,4,5],[9,-6,7,6,-5,-7,6,2,-2,1,-9,-2]],[[-8,9,4,-5,-5,-1,-4,-10,-5,5,-2,5],[10,-3,5,-9,-4,8,-2,10,6,4,8,9],[10,5,3,-8,-9,9,-6,10,9,-5,1,-10]],[[7,-6,-7,-8,-3,1,-6,8,-7,1,7,3],[-7,7,-6,-6,-3,7,9,7,10,-7,-4,-4],[-2,-6,6,5,8,3,10,-6,-2,-3,10,-5]],[[9,-9,-7,-5,7,9,1,-9,7,2,1,-10],[-2,-6,-6,-5,2,-7,-8,-7,-4,-8,-10,3],[-9,7,-6,5,-2,2,-3,-1,2,6,-10,5]],[[-1,8,-2,-1,7,-2,-4,3,-9,4,-2,9],[-2,-2,-9,-6,-9,-2,-7,-1,10,9,2,2],[5,-5,10,8,8,6,-6,6,1,8,2,2]]], dtype = "int32")#candidate|3239|(13, 3, 12)|const|int32
const_3240 = relay.const([[[1,6,-10,-7,-5,5,-2,-7,7,-8,-10,-2],[3,1,2,-9,3,7,4,-10,5,-7,8,-9],[-7,-8,3,-7,9,8,5,8,-3,-3,7,8]],[[-1,-10,-10,-3,-6,-5,9,5,1,3,1,3],[-4,-4,2,-4,8,1,5,-8,-5,9,-6,-3],[-8,-2,8,6,2,5,-4,6,-7,2,10,-2]],[[-5,-8,7,-6,10,5,-3,-1,3,-10,7,8],[4,-3,-10,-9,7,-5,-1,-9,-1,10,-7,1],[-5,4,-9,-3,2,9,-2,-8,8,-1,-4,-1]],[[-7,9,9,6,4,-5,2,-8,-5,-10,-5,-6],[-2,1,9,3,2,2,5,-5,-9,2,10,8],[4,4,6,2,7,6,-7,4,2,-1,5,5]],[[-8,-5,-6,-6,1,-10,10,-7,-7,-2,3,-2],[-1,3,10,-8,-5,-9,-6,-1,-6,5,3,10],[-2,-4,6,1,10,-3,-2,-9,6,7,-2,10]],[[-9,4,7,-4,4,-6,-4,10,-1,-2,-6,9],[8,5,-4,10,1,7,-5,9,-7,-4,1,4],[-6,4,-7,3,7,-7,-4,6,10,3,4,-9]],[[-8,3,4,1,4,-2,-6,-8,3,-8,4,-2],[7,2,-7,6,1,-5,7,-6,1,3,5,4],[9,-4,-6,-9,-2,-6,-1,4,-2,-8,-7,9]],[[6,-7,3,8,-1,-5,9,-10,5,1,8,8],[6,-8,-4,-3,1,1,9,-8,-4,-9,-6,-5],[7,-7,-1,5,-4,-2,-4,-9,3,8,1,-6]],[[8,-9,6,-7,10,-8,-2,-8,-7,-5,5,5],[5,-4,9,5,-5,4,-8,4,7,-9,-4,5],[7,-4,5,-2,5,9,6,-3,-8,-2,-10,-4]],[[-8,-7,-2,-8,4,3,3,10,-1,-4,-4,-8],[6,3,-8,-4,-2,3,-5,2,4,7,-9,7],[-9,-7,-10,7,4,-3,-7,-1,9,-2,4,2]],[[-9,7,-7,10,-9,-10,1,-6,-9,7,7,-6],[1,-9,-2,-5,1,1,-8,3,-7,6,-10,2],[1,-5,9,-5,9,-7,6,-4,-4,2,-7,9]],[[7,3,-10,-9,6,1,5,-6,-9,-9,-5,-9],[-9,2,7,-1,1,-4,-9,-1,-6,10,6,10],[-9,10,2,-4,2,9,9,4,6,-8,2,9]],[[2,1,-5,5,10,9,-7,-4,-9,8,5,-8],[3,-5,7,-3,5,-9,7,-6,3,8,8,-9],[-7,5,-3,2,-8,1,4,4,-9,2,1,2]]], dtype = "int32")#candidate|3240|(13, 3, 12)|const|int32
bop_3241 = relay.maximum(const_3239.astype('int32'), relay.reshape(const_3240.astype('int32'), relay.shape_of(const_3239))) # shape=(13, 3, 12)
func_1266_call = mod.get_global_var('func_1266')
func_1269_call = mutated_mod.get_global_var('func_1269')
const_3245 = relay.const([[-0.134215],[-4.022561],[1.687416],[-6.908058],[-0.484960],[3.825949],[3.609829],[6.146532],[-7.037244],[4.159150],[-7.050035],[-4.183990],[2.827415],[7.604877],[-0.984163],[-3.689934],[4.097437],[-9.341579],[-6.011635],[-0.942640],[6.642749],[-2.436179],[1.509247],[-3.709744],[-7.595766],[5.672393],[5.942680],[3.733822],[4.133787],[-3.088756],[-6.278928],[7.423806],[1.202697],[3.364234],[-9.624607],[-9.007916],[4.930646],[3.479153],[-6.331208],[-9.044323],[5.531472],[5.009005],[8.924336],[7.573867],[0.280779],[-7.733295],[-4.380643],[-9.303330],[-5.789651],[1.649643],[9.586361],[-4.119433],[-1.422850],[5.855520],[5.134143],[-2.986038],[-7.095805],[6.505289],[-7.529215],[-3.221177],[-9.322506],[-9.999786],[-7.027619],[-5.871918],[-5.432084],[-5.113352],[4.083944],[-2.356444],[-6.644174],[-4.335682],[-0.735539],[-2.537577],[-3.729340],[-6.313749],[-5.070809],[1.184275],[-1.875021],[1.066248],[-8.718428],[0.676572],[-8.861160],[-9.514481],[-5.663120],[0.664306],[0.732030],[-2.130879],[-0.057018],[-1.826336],[5.098070],[-7.996297],[1.672355],[-0.008376],[0.841922],[1.665458],[-5.071278],[-0.037371],[-6.868250],[-2.176691],[4.159488],[4.337531],[-7.715511],[-8.938411],[-8.346878],[7.408782],[-4.654216],[5.625161],[9.733385],[1.380226],[4.564967],[-0.161582],[9.397588],[-2.847564],[-4.526367],[-3.991970],[9.115738],[-2.689521],[2.991247],[-3.229549],[2.362529],[5.967580],[0.570570],[0.182202],[9.931391],[2.530617],[1.469722],[-0.520464],[-7.852993],[-2.204457],[2.072586],[2.655305],[-7.893982],[-7.722041],[-0.222145],[1.600197],[4.862891],[0.630175],[1.428161],[9.167180],[5.202163],[-7.796778],[9.479877],[7.813771],[3.473652],[-6.634959],[-0.004040],[1.811031],[2.817999],[8.260199],[9.601993],[8.383919],[7.710559],[8.602812],[2.504048],[6.761461],[-2.426374],[-0.639797],[-2.101049],[5.529638],[5.903924],[3.086280],[1.329366],[2.513036],[-0.761950],[7.635749],[4.172699],[-9.135297],[9.554080],[-8.262601],[4.145553],[-3.235571],[2.765317],[7.009155],[-5.902013],[8.654240],[-9.501164],[-2.138631],[-6.456834],[-2.191669],[-8.067323],[-4.146701],[-6.943308],[-9.067848],[-2.197540],[-6.972891],[7.449005],[4.480743],[1.077587],[-5.912284],[-0.861699],[-9.106186],[-9.885230],[-7.514460],[-1.748649],[-2.654057],[-7.267205],[-3.199756],[2.417814],[9.515882],[6.381593],[3.856125],[-2.983374],[1.315751],[8.741889],[4.753436],[-7.469242],[-7.431511],[-4.845950],[1.921891],[6.481156],[7.272281],[-3.313314],[-5.207129],[9.186118],[1.480824],[-0.010193],[3.376543],[-6.585458],[-3.558922],[-5.284900],[1.104692],[1.471837],[-7.779061],[-6.366203],[-5.016304],[9.937972],[-3.734827],[-4.550822],[3.411551],[-6.925028],[-6.377552],[-5.978137],[1.332878],[0.696893],[-7.061699],[4.556570],[-9.812194],[-8.266471],[6.075259],[-4.851978],[-1.104506],[5.547493],[8.048264],[-9.642693],[2.143125],[9.082639],[2.675182],[6.113221],[-4.621257],[-8.374542],[7.179747],[-0.372737],[0.888960],[-1.909763],[-6.780014],[-8.718566],[-2.881398],[8.735261],[8.038966],[-5.362287],[-3.153510],[4.358806],[3.011288],[-3.790417],[0.761235],[7.131684],[-6.833936],[-5.956286],[-1.279512],[-7.997603],[0.212715],[9.957164],[2.954915],[1.792384],[-0.355952],[6.467819],[7.672261],[-6.968214],[-3.215010],[8.431144],[-8.928751],[-6.233782],[-5.431409],[-7.345209],[0.354138],[0.552398],[4.457534],[-3.584821],[4.945926],[-8.885676],[0.432023],[-8.575219],[-8.947514],[-4.869640],[3.026311],[-9.591233],[-0.144142],[8.846339],[1.904604],[8.312748],[-2.186304],[0.334058],[9.461735],[-3.856888],[2.682522],[8.278189],[3.680555],[8.201330],[-7.509532],[-7.691208],[9.366253],[8.706181],[5.499907],[5.579454],[-1.889611],[3.753768],[6.899455],[2.212191],[-0.451235],[-1.529140],[-1.422347],[-4.740260],[7.698676],[0.050702],[5.369710],[-2.104065],[-0.352972],[-0.156384],[-7.370661],[-5.491593],[-2.513123],[2.624834],[-2.872126],[0.504981],[0.440342],[-9.889694],[2.188759],[0.723088],[-5.876439],[-2.920965],[-6.289481],[3.181498],[7.666632],[-4.417001],[9.878548],[-3.184740],[-5.750308],[0.491764],[-7.203537],[8.701473],[-8.071116],[5.094610],[-3.599908],[2.798560],[3.658758],[1.105122],[-0.546453],[-8.274603],[-6.656094],[0.213846],[1.160818],[-3.980215],[0.800112],[-1.281652],[-4.584100],[2.354589],[8.455900],[-1.923996],[7.570602],[5.992910],[4.197740],[-3.669320],[0.828201],[4.357743],[5.770520],[6.885476],[3.429850],[-4.425612],[7.339545],[-5.107084],[-3.485373],[8.549517],[1.237991],[-1.086241],[9.600149],[4.658137],[-7.836115],[-4.033894],[8.752067],[9.609823],[-8.450260],[6.992113],[-0.483028],[-8.210374],[1.204887],[2.710594],[0.007294],[7.855017],[-3.418412],[8.370738],[9.012063],[9.056967],[8.470485],[9.302161],[2.262735],[6.962166],[2.926235],[4.433704],[5.653058],[-6.498179],[5.869387],[-1.546284],[-4.644960],[1.926692],[5.015755],[-8.975152],[1.488775],[-3.293074],[4.368565],[0.508410],[0.497862]], dtype = "float32")#candidate|3245|(420, 1)|const|float32
call_3244 = func_1266_call(relay.reshape(const_3245.astype('float32'), [4, 15, 7]))
call_3246 = func_1266_call(relay.reshape(const_3245.astype('float32'), [4, 15, 7]))
output = relay.Tuple([bop_3241,call_3244,const_3245,])
output2 = relay.Tuple([bop_3241,call_3246,const_3245,])
func_3248 = relay.Function([], output)
mod['func_3248'] = func_3248
mod = relay.transform.InferType()(mod)
output = func_3248()
func_3249 = relay.Function([], output)
mutated_mod['func_3249'] = func_3249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3248_call = mod.get_global_var('func_3248')
func_3249_call = mutated_mod.get_global_var('func_3249')
call_3260 = relay.TupleGetItem(func_3248_call(), 1)
call_3261 = relay.TupleGetItem(func_3249_call(), 1)
func_3073_call = mod.get_global_var('func_3073')
func_3076_call = mutated_mod.get_global_var('func_3076')
var_3274 = relay.var("var_3274", dtype = "float64", shape = (2464,))#candidate|3274|(2464,)|var|float64
const_3275 = relay.const(-10, dtype = "uint64")#candidate|3275|()|const|uint64
call_3273 = relay.TupleGetItem(func_3073_call(relay.reshape(var_3274.astype('float64'), [11, 16, 14]), relay.reshape(const_3275.astype('uint64'), []), ), 1)
call_3276 = relay.TupleGetItem(func_3076_call(relay.reshape(var_3274.astype('float64'), [11, 16, 14]), relay.reshape(const_3275.astype('uint64'), []), ), 1)
func_2036_call = mod.get_global_var('func_2036')
func_2039_call = mutated_mod.get_global_var('func_2039')
var_3280 = relay.var("var_3280", dtype = "int16", shape = (864,))#candidate|3280|(864,)|var|int16
call_3279 = relay.TupleGetItem(func_2036_call(relay.reshape(var_3280.astype('int16'), [16, 9, 6]), relay.reshape(var_3280.astype('int16'), [16, 9, 6]), ), 0)
call_3281 = relay.TupleGetItem(func_2039_call(relay.reshape(var_3280.astype('int16'), [16, 9, 6]), relay.reshape(var_3280.astype('int16'), [16, 9, 6]), ), 0)
func_3073_call = mod.get_global_var('func_3073')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_3291 = relay.TupleGetItem(func_3073_call(relay.reshape(var_3274.astype('float64'), [11, 16, 14]), relay.reshape(const_3275.astype('uint64'), []), ), 0)
call_3292 = relay.TupleGetItem(func_3076_call(relay.reshape(var_3274.astype('float64'), [11, 16, 14]), relay.reshape(const_3275.astype('uint64'), []), ), 0)
output = relay.Tuple([call_3260,call_3273,var_3274,const_3275,call_3279,var_3280,call_3291,])
output2 = relay.Tuple([call_3261,call_3276,var_3274,const_3275,call_3281,var_3280,call_3292,])
func_3294 = relay.Function([var_3274,var_3280,], output)
mod['func_3294'] = func_3294
mod = relay.transform.InferType()(mod)
mutated_mod['func_3294'] = func_3294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3294_call = mutated_mod.get_global_var('func_3294')
var_3296 = relay.var("var_3296", dtype = "float64", shape = (2464,))#candidate|3296|(2464,)|var|float64
var_3297 = relay.var("var_3297", dtype = "int16", shape = (864,))#candidate|3297|(864,)|var|int16
call_3295 = func_3294_call(var_3296,var_3297,)
output = call_3295
func_3298 = relay.Function([var_3296,var_3297,], output)
mutated_mod['func_3298'] = func_3298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3248_call = mod.get_global_var('func_3248')
func_3249_call = mutated_mod.get_global_var('func_3249')
call_3300 = relay.TupleGetItem(func_3248_call(), 1)
call_3301 = relay.TupleGetItem(func_3249_call(), 1)
func_50_call = mod.get_global_var('func_50')
func_54_call = mutated_mod.get_global_var('func_54')
const_3305 = relay.const(3, dtype = "int32")#candidate|3305|()|const|int32
const_3306 = relay.const([[-3,3,-10,1],[10,-1,-2,5],[-10,3,-8,1],[6,-4,3,8],[-3,-9,-10,6]], dtype = "int32")#candidate|3306|(5, 4)|const|int32
call_3304 = func_50_call(relay.reshape(const_3305.astype('int32'), []), relay.reshape(const_3306.astype('int32'), [1, 10, 2]), )
call_3307 = func_50_call(relay.reshape(const_3305.astype('int32'), []), relay.reshape(const_3306.astype('int32'), [1, 10, 2]), )
output = relay.Tuple([call_3300,call_3304,const_3305,const_3306,])
output2 = relay.Tuple([call_3301,call_3307,const_3305,const_3306,])
func_3320 = relay.Function([], output)
mod['func_3320'] = func_3320
mod = relay.transform.InferType()(mod)
output = func_3320()
func_3321 = relay.Function([], output)
mutated_mod['func_3321'] = func_3321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3248_call = mod.get_global_var('func_3248')
func_3249_call = mutated_mod.get_global_var('func_3249')
call_3324 = relay.TupleGetItem(func_3248_call(), 2)
call_3325 = relay.TupleGetItem(func_3249_call(), 2)
output = call_3324
output2 = call_3325
func_3347 = relay.Function([], output)
mod['func_3347'] = func_3347
mod = relay.transform.InferType()(mod)
output = func_3347()
func_3348 = relay.Function([], output)
mutated_mod['func_3348'] = func_3348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3320_call = mod.get_global_var('func_3320')
func_3321_call = mutated_mod.get_global_var('func_3321')
call_3375 = relay.TupleGetItem(func_3320_call(), 3)
call_3376 = relay.TupleGetItem(func_3321_call(), 3)
func_2036_call = mod.get_global_var('func_2036')
func_2039_call = mutated_mod.get_global_var('func_2039')
const_3402 = relay.const([-3,3,-9,-5,6,-4,-4,-1,-4,2,4,10,2,-1,9,6,-4,8,-7,-4,7,-6,-6,7,3,6,5,-7,3,9,-4,3,-5,1,-6,-5,-4,5,9,-10,9,10,-1,5,8,3,1,2,-9,-8,-10,9,3,2,5,-4,7,2,-4,-9,1,4,7,7,-9,-2,-9,10,6,6,3,6,6,7,5,10,-7,-7,10,-2,-1,5,7,2,9,-5,-9,-4,10,-5,-5,-10,-1,7,-1,10,5,-3,-3,6,-4,6,-3,-10,-10,-8,2,-7,3,6,-5,9,4,-2,9,-10,-10,-6,-5,-6,1,-1,-1,10,4,-1,4,1,-2,-6,-3,-5,1,8,8,-2,-9,4,3,4,-9,8,-7,-1,4,-1,4,-3,-5,-2,4,-6,8,3,-5,9,-3,7,-8,8,-8,2,-3,6,6,5,-3,-5,10,-10,-4,-8,10,9,-8,1,-6,-7,-9,-8,-2,-7,3,-5,9,-7,6,1,3,-3,7,-6,-8,3,-7,-4,-6,-5,2,-4,-5,3,-8,-7,-6,-3,-6,-9,3,4,5,-10,-7,-1,-7,10,-6,5,-1,7,5,-4,9,7,-5,4,7,10,3,6,4,1,-1,6,-9,3,4,-4,1,7,-2,-4,8,-4,-5,8,8,-1,-6,-3,1,10,3,8,-5,10,7,8,-7,-4,-3,-2,-4,2,-4,-6,2,10,-9,-9,-7,-4,4,10,4,-4,8,10,2,5,-6,1,-8,3,-3,-4,3,5,-9,9,-8,-10,10,2,1,-8,-10,-5,9,-6,2,3,7,3,2,9,4,10,-1,-5,-10,1,9,-6,6,3,1,3,3,-4,-7,-4,-2,4,7,-8,-2,8,-7,-2,-8,2,10,-7,-1,-7,-4,9,7,1,-5,-2,-10,-8,5,-1,-8,2,8,10,-10,10,-10,-2,-4,-3,-4,6,5,10,-8,5,-5,4,6,-5,-3,-10,5,1,5,-10,9,2,2,6,-4,-5,-7,2,-3,10,3,-10,-4,-10,7,7,-8,3,-2,1,9,-6,-5,8,5,-3,-9,-7,-7,9,10,1,-8,9,3,-7,8,-9,-2,-8,-6,-5,7,6,-2,-8,-5,-10,5,-3,1,-3,3,-1,-10,2,-1,2,1,-2,5,5,10,4,-7,6,-7,7,2,5,-7,9,-5,8,9,9,3,-7,-9,10,8,-4,-6,6,-10,-9,9,-7,-9,10,-8,-3,1,5,8,6,3,10,-2,7,-9,-9,2,-3,-4,8,-2,-4,-10,-4,8,6,-9,-1,3,1,4,-10,-9,-7,8,6,8,-4,2,-9,-6,-2,-1,6,-2,-8,8,-3,3,-9,-9,10,8,8,-1,-8,1,-4,2,-6,4,1,4,-10,-5,-7,-5,-4,2,-10,-6,-2,8,-9,3,-3,1,-10,7,3,10,-8,8,7,-3,-3,-5,8,-10,-4,-4,1,-10,-2,2,2,-5,6,-4,3,9,-8,2,10,1,-4,-2,10,-7,-2,8,-10,6,-6,8,8,5,4,10,-1,9,-7,2,4,10,8,-7,10,-6,-4,6,-4,7,-10,3,9,-7,-4,4,8,-1,3,-7,-3,-1,-9,-8,10,2,-4,1,8,2,7,-9,1,3,2,-10,5,4,10,9,-9,10,-6,9,-1,8,-6,-2,1,-2,7,9,-5,8,-5,5,-7,-7,8,-1,-6,6,9,10,5,-2,6,-6,2,-4,10,1,6,4,-6,2,5,-6,8,-2,-10,7,6,6,-5,7,2,7,-7,-2,6,-7,-4,3,10,4,4,5,5,9,2,7,5,-1,-5,-5,7,-3,-6,-10,4,6,7,7,3,-2,-4,-8,-5,3,-10,-2,-10,-5,-1,-3,-2,2,-8,-1,-9,-5,-2,-3,-2,6,3,-8,-10,1,9,-6,-1,-8,1,2,-2,10,10,2,10,-3,-7,7,-3,1,-10,-10,-7,-2,10,6,-10,8,4,1,8,-6,-2,-4,-3,6,-2,-6,5,-9,1,6,6,3,-4,3,-8,-8,-3,-7,5,-2,8,-8,-10,-9,-4,4,9,-7,2,4,8,2,2,10,3,-6,3,-5,1,-4,8,-5,5,-7,-2,7,-3,-3,-8,-4,-6,1,6,-10,9,4,-10,-4,8,2,-4,-2,-9,4,10,8,10,-5,5,-5,-9,-6,5,6,3,5,-6,-8,4,2,-2,9,-10,-2,10,-3,-6,8,1,7,1,-3,1,-3,3,-10,-8,1,-3,-6,8,-10,10,-6,-1,5,6,-10,-9,-3,-10,9,2,-5,1], dtype = "int16")#candidate|3402|(864,)|const|int16
call_3401 = relay.TupleGetItem(func_2036_call(relay.reshape(const_3402.astype('int16'), [16, 9, 6]), relay.reshape(const_3402.astype('int16'), [16, 9, 6]), ), 0)
call_3403 = relay.TupleGetItem(func_2039_call(relay.reshape(const_3402.astype('int16'), [16, 9, 6]), relay.reshape(const_3402.astype('int16'), [16, 9, 6]), ), 0)
bop_3423 = relay.logical_or(call_3401.astype('bool'), relay.reshape(const_3402.astype('bool'), relay.shape_of(call_3401))) # shape=(16, 9, 6)
bop_3426 = relay.logical_or(call_3403.astype('bool'), relay.reshape(const_3402.astype('bool'), relay.shape_of(call_3403))) # shape=(16, 9, 6)
output = relay.Tuple([call_3375,bop_3423,])
output2 = relay.Tuple([call_3376,bop_3426,])
func_3434 = relay.Function([], output)
mod['func_3434'] = func_3434
mod = relay.transform.InferType()(mod)
output = func_3434()
func_3435 = relay.Function([], output)
mutated_mod['func_3435'] = func_3435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3563 = relay.var("var_3563", dtype = "bool", shape = (6, 9, 3))#candidate|3563|(6, 9, 3)|var|bool
var_3564 = relay.var("var_3564", dtype = "bool", shape = (6, 9, 3))#candidate|3564|(6, 9, 3)|var|bool
bop_3565 = relay.logical_and(var_3563.astype('bool'), relay.reshape(var_3564.astype('bool'), relay.shape_of(var_3563))) # shape=(6, 9, 3)
output = relay.Tuple([bop_3565,])
output2 = relay.Tuple([bop_3565,])
func_3568 = relay.Function([var_3563,var_3564,], output)
mod['func_3568'] = func_3568
mod = relay.transform.InferType()(mod)
mutated_mod['func_3568'] = func_3568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3568_call = mutated_mod.get_global_var('func_3568')
var_3570 = relay.var("var_3570", dtype = "bool", shape = (6, 9, 3))#candidate|3570|(6, 9, 3)|var|bool
var_3571 = relay.var("var_3571", dtype = "bool", shape = (6, 9, 3))#candidate|3571|(6, 9, 3)|var|bool
call_3569 = func_3568_call(var_3570,var_3571,)
output = call_3569
func_3572 = relay.Function([var_3570,var_3571,], output)
mutated_mod['func_3572'] = func_3572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3320_call = mod.get_global_var('func_3320')
func_3321_call = mutated_mod.get_global_var('func_3321')
call_3595 = relay.TupleGetItem(func_3320_call(), 2)
call_3596 = relay.TupleGetItem(func_3321_call(), 2)
func_107_call = mod.get_global_var('func_107')
func_109_call = mutated_mod.get_global_var('func_109')
var_3599 = relay.var("var_3599", dtype = "uint16", shape = (968,))#candidate|3599|(968,)|var|uint16
call_3598 = func_107_call(relay.reshape(var_3599.astype('uint16'), [8, 11, 11]))
call_3600 = func_107_call(relay.reshape(var_3599.astype('uint16'), [8, 11, 11]))
output = relay.Tuple([call_3595,call_3598,var_3599,])
output2 = relay.Tuple([call_3596,call_3600,var_3599,])
func_3619 = relay.Function([var_3599,], output)
mod['func_3619'] = func_3619
mod = relay.transform.InferType()(mod)
var_3620 = relay.var("var_3620", dtype = "uint16", shape = (968,))#candidate|3620|(968,)|var|uint16
output = func_3619(var_3620)
func_3621 = relay.Function([var_3620], output)
mutated_mod['func_3621'] = func_3621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3320_call = mod.get_global_var('func_3320')
func_3321_call = mutated_mod.get_global_var('func_3321')
call_3625 = relay.TupleGetItem(func_3320_call(), 2)
call_3626 = relay.TupleGetItem(func_3321_call(), 2)
func_2371_call = mod.get_global_var('func_2371')
func_2374_call = mutated_mod.get_global_var('func_2374')
var_3641 = relay.var("var_3641", dtype = "uint16", shape = (1920,))#candidate|3641|(1920,)|var|uint16
call_3640 = relay.TupleGetItem(func_2371_call(relay.reshape(call_3625.astype('uint16'), []), relay.reshape(var_3641.astype('uint16'), [16, 10, 12]), ), 1)
call_3642 = relay.TupleGetItem(func_2374_call(relay.reshape(call_3625.astype('uint16'), []), relay.reshape(var_3641.astype('uint16'), [16, 10, 12]), ), 1)
output = relay.Tuple([call_3625,call_3640,var_3641,])
output2 = relay.Tuple([call_3626,call_3642,var_3641,])
func_3653 = relay.Function([var_3641,], output)
mod['func_3653'] = func_3653
mod = relay.transform.InferType()(mod)
var_3654 = relay.var("var_3654", dtype = "uint16", shape = (1920,))#candidate|3654|(1920,)|var|uint16
output = func_3653(var_3654)
func_3655 = relay.Function([var_3654], output)
mutated_mod['func_3655'] = func_3655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3347_call = mod.get_global_var('func_3347')
func_3348_call = mutated_mod.get_global_var('func_3348')
call_3667 = func_3347_call()
call_3668 = func_3347_call()
func_2295_call = mod.get_global_var('func_2295')
func_2298_call = mutated_mod.get_global_var('func_2298')
const_3675 = relay.const([7.925854,9.456804,-0.923600,2.828298,-9.699345,-0.510695,9.883678,-8.770339,-8.622603,1.577756,-0.232001,9.507050,3.231761,0.340673,-9.198683,-0.831733,-0.352288,-5.121311,1.667506,-4.075023,2.171109,-3.523527,1.395092,-2.247523,-8.709545,-3.956872,7.541400,-1.700520,3.494650,3.652732,0.898103,-8.322725,-8.510088,-5.023886,-5.376156,2.417978,1.761681,2.186217,-0.776560,-2.445216,8.661665,2.510934,-3.361053,8.907686,8.112496,6.898956,-5.983666,6.884421,-4.796505,-7.776724,-1.621496,-1.421598,9.266485,4.623418,1.876004,2.823885,-8.847396,4.972645,-5.061806,1.960705,-1.613535,-4.696998,-1.652671,9.069255,3.065221,5.785671,5.566213,9.003247,8.173178,-5.634553,4.355231,6.295538,-5.208512,-3.746371,9.942722,8.877679,9.723579,3.015563,6.916815,-8.528493,-8.692447,-1.586656,-6.582373,7.494505,-8.502139,-5.786143,7.658292,-3.421816,2.329566,-2.741081,-0.021632,-2.836044,-4.975728,9.245215,-9.781819,-9.054377,8.841258,-8.622816,8.671855,-9.137231,2.120148,3.538390,-3.395911,-9.196911,-9.930608,8.584604,-6.710884,-9.371777,2.184101,-0.134143,-0.094713,-6.908357,-4.043487,5.390542,-7.949228,7.480886,-1.429052,-0.114554,-9.085072,-4.607725,-5.142879,1.908468,0.652405,5.352662,8.556942,-0.358578,-7.447225,-6.524674,5.793490,-7.592917,3.006888,1.417817,-2.009837,-4.368406,5.995703,-7.457547,-9.598883,-0.429890,5.724987,-6.886198,-5.218102,-2.760150,-7.609082,7.468410,-2.422159,4.340645,9.929357,-4.431502,4.439550,6.076281,4.206935,-5.195134,5.115034,-3.989568,-4.999834,-3.241857,8.267217,0.470652,9.200555,-0.162462,4.195888,7.612449,-3.434605,-9.537182,-7.170268,-1.476443,6.837545,-1.445352,-2.989476,-2.679133,2.860627,6.099289,7.974040,-8.843636,9.885799,3.480173,1.587255,9.093585,-1.738596,4.335961], dtype = "float64")#candidate|3675|(180,)|const|float64
call_3674 = func_2295_call(relay.reshape(const_3675.astype('float64'), [3, 15, 4]))
call_3676 = func_2295_call(relay.reshape(const_3675.astype('float64'), [3, 15, 4]))
bop_3682 = relay.multiply(call_3674.astype('int64'), relay.reshape(const_3675.astype('int64'), relay.shape_of(call_3674))) # shape=(3, 15, 4)
bop_3685 = relay.multiply(call_3676.astype('int64'), relay.reshape(const_3675.astype('int64'), relay.shape_of(call_3676))) # shape=(3, 15, 4)
output = relay.Tuple([call_3667,bop_3682,])
output2 = relay.Tuple([call_3668,bop_3685,])
func_3692 = relay.Function([], output)
mod['func_3692'] = func_3692
mod = relay.transform.InferType()(mod)
output = func_3692()
func_3693 = relay.Function([], output)
mutated_mod['func_3693'] = func_3693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3347_call = mod.get_global_var('func_3347')
func_3348_call = mutated_mod.get_global_var('func_3348')
call_3707 = func_3347_call()
call_3708 = func_3347_call()
output = relay.Tuple([call_3707,])
output2 = relay.Tuple([call_3708,])
func_3709 = relay.Function([], output)
mod['func_3709'] = func_3709
mod = relay.transform.InferType()(mod)
mutated_mod['func_3709'] = func_3709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3709_call = mutated_mod.get_global_var('func_3709')
call_3710 = func_3709_call()
output = call_3710
func_3711 = relay.Function([], output)
mutated_mod['func_3711'] = func_3711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3347_call = mod.get_global_var('func_3347')
func_3348_call = mutated_mod.get_global_var('func_3348')
call_3754 = func_3347_call()
call_3755 = func_3347_call()
func_2036_call = mod.get_global_var('func_2036')
func_2039_call = mutated_mod.get_global_var('func_2039')
var_3804 = relay.var("var_3804", dtype = "int16", shape = (864,))#candidate|3804|(864,)|var|int16
call_3803 = relay.TupleGetItem(func_2036_call(relay.reshape(var_3804.astype('int16'), [16, 9, 6]), relay.reshape(var_3804.astype('int16'), [16, 9, 6]), ), 0)
call_3805 = relay.TupleGetItem(func_2039_call(relay.reshape(var_3804.astype('int16'), [16, 9, 6]), relay.reshape(var_3804.astype('int16'), [16, 9, 6]), ), 0)
var_3806 = relay.var("var_3806", dtype = "float32", shape = (420, 16))#candidate|3806|(420, 16)|var|float32
bop_3807 = relay.less(call_3754.astype('bool'), var_3806.astype('bool')) # shape=(420, 16)
bop_3810 = relay.less(call_3755.astype('bool'), var_3806.astype('bool')) # shape=(420, 16)
uop_3811 = relay.asinh(bop_3807.astype('float64')) # shape=(420, 16)
uop_3813 = relay.asinh(bop_3810.astype('float64')) # shape=(420, 16)
bop_3822 = relay.mod(uop_3811.astype('float32'), call_3754.astype('float32')) # shape=(420, 16)
bop_3825 = relay.mod(uop_3813.astype('float32'), call_3755.astype('float32')) # shape=(420, 16)
bop_3838 = relay.bitwise_and(uop_3811.astype('uint8'), relay.reshape(bop_3822.astype('uint8'), relay.shape_of(uop_3811))) # shape=(420, 16)
bop_3841 = relay.bitwise_and(uop_3813.astype('uint8'), relay.reshape(bop_3825.astype('uint8'), relay.shape_of(uop_3813))) # shape=(420, 16)
bop_3847 = relay.subtract(bop_3838.astype('float64'), relay.reshape(var_3806.astype('float64'), relay.shape_of(bop_3838))) # shape=(420, 16)
bop_3850 = relay.subtract(bop_3841.astype('float64'), relay.reshape(var_3806.astype('float64'), relay.shape_of(bop_3841))) # shape=(420, 16)
output = relay.Tuple([call_3803,var_3804,bop_3847,])
output2 = relay.Tuple([call_3805,var_3804,bop_3850,])
func_3867 = relay.Function([var_3804,var_3806,], output)
mod['func_3867'] = func_3867
mod = relay.transform.InferType()(mod)
mutated_mod['func_3867'] = func_3867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3867_call = mutated_mod.get_global_var('func_3867')
var_3869 = relay.var("var_3869", dtype = "int16", shape = (864,))#candidate|3869|(864,)|var|int16
var_3870 = relay.var("var_3870", dtype = "float32", shape = (420, 16))#candidate|3870|(420, 16)|var|float32
call_3868 = func_3867_call(var_3869,var_3870,)
output = call_3868
func_3871 = relay.Function([var_3869,var_3870,], output)
mutated_mod['func_3871'] = func_3871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3692_call = mod.get_global_var('func_3692')
func_3693_call = mutated_mod.get_global_var('func_3693')
call_3887 = relay.TupleGetItem(func_3692_call(), 0)
call_3888 = relay.TupleGetItem(func_3693_call(), 0)
var_3909 = relay.var("var_3909", dtype = "float32", shape = (420, 16))#candidate|3909|(420, 16)|var|float32
bop_3910 = relay.floor_divide(call_3887.astype('float32'), var_3909.astype('float32')) # shape=(420, 16)
bop_3913 = relay.floor_divide(call_3888.astype('float32'), var_3909.astype('float32')) # shape=(420, 16)
output = relay.Tuple([bop_3910,])
output2 = relay.Tuple([bop_3913,])
func_3916 = relay.Function([var_3909,], output)
mod['func_3916'] = func_3916
mod = relay.transform.InferType()(mod)
mutated_mod['func_3916'] = func_3916
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3917 = relay.var("var_3917", dtype = "float32", shape = (420, 16))#candidate|3917|(420, 16)|var|float32
func_3916_call = mutated_mod.get_global_var('func_3916')
call_3918 = func_3916_call(var_3917)
output = call_3918
func_3919 = relay.Function([var_3917], output)
mutated_mod['func_3919'] = func_3919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3248_call = mod.get_global_var('func_3248')
func_3249_call = mutated_mod.get_global_var('func_3249')
call_3932 = relay.TupleGetItem(func_3248_call(), 0)
call_3933 = relay.TupleGetItem(func_3249_call(), 0)
uop_3941 = relay.log10(call_3932.astype('float64')) # shape=(13, 3, 12)
uop_3943 = relay.log10(call_3933.astype('float64')) # shape=(13, 3, 12)
output = uop_3941
output2 = uop_3943
func_3948 = relay.Function([], output)
mod['func_3948'] = func_3948
mod = relay.transform.InferType()(mod)
mutated_mod['func_3948'] = func_3948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mutated_mod.get_global_var('func_3948')
call_3949 = func_3948_call()
output = call_3949
func_3950 = relay.Function([], output)
mutated_mod['func_3950'] = func_3950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3434_call = mod.get_global_var('func_3434')
func_3435_call = mutated_mod.get_global_var('func_3435')
call_3973 = relay.TupleGetItem(func_3434_call(), 1)
call_3974 = relay.TupleGetItem(func_3435_call(), 1)
var_3986 = relay.var("var_3986", dtype = "bool", shape = (16, 9, 6))#candidate|3986|(16, 9, 6)|var|bool
bop_3987 = relay.floor_mod(call_3973.astype('float64'), relay.reshape(var_3986.astype('float64'), relay.shape_of(call_3973))) # shape=(16, 9, 6)
bop_3990 = relay.floor_mod(call_3974.astype('float64'), relay.reshape(var_3986.astype('float64'), relay.shape_of(call_3974))) # shape=(16, 9, 6)
func_3709_call = mod.get_global_var('func_3709')
func_3711_call = mutated_mod.get_global_var('func_3711')
call_3992 = relay.TupleGetItem(func_3709_call(), 0)
call_3993 = relay.TupleGetItem(func_3711_call(), 0)
output = relay.Tuple([bop_3987,call_3992,])
output2 = relay.Tuple([bop_3990,call_3993,])
func_4002 = relay.Function([var_3986,], output)
mod['func_4002'] = func_4002
mod = relay.transform.InferType()(mod)
mutated_mod['func_4002'] = func_4002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4003 = relay.var("var_4003", dtype = "bool", shape = (16, 9, 6))#candidate|4003|(16, 9, 6)|var|bool
func_4002_call = mutated_mod.get_global_var('func_4002')
call_4004 = func_4002_call(var_4003)
output = call_4004
func_4005 = relay.Function([var_4003], output)
mutated_mod['func_4005'] = func_4005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4015 = relay.var("var_4015", dtype = "float32", shape = (1, 9, 16))#candidate|4015|(1, 9, 16)|var|float32
uop_4016 = relay.cos(var_4015.astype('float32')) # shape=(1, 9, 16)
func_3867_call = mod.get_global_var('func_3867')
func_3871_call = mutated_mod.get_global_var('func_3871')
var_4024 = relay.var("var_4024", dtype = "int16", shape = (864,))#candidate|4024|(864,)|var|int16
var_4025 = relay.var("var_4025", dtype = "float32", shape = (1, 6720))#candidate|4025|(1, 6720)|var|float32
call_4023 = relay.TupleGetItem(func_3867_call(relay.reshape(var_4024.astype('int16'), [864,]), relay.reshape(var_4025.astype('float32'), [420, 16]), ), 0)
call_4026 = relay.TupleGetItem(func_3871_call(relay.reshape(var_4024.astype('int16'), [864,]), relay.reshape(var_4025.astype('float32'), [420, 16]), ), 0)
uop_4031 = relay.log(uop_4016.astype('float64')) # shape=(1, 9, 16)
output = relay.Tuple([call_4023,var_4024,var_4025,uop_4031,])
output2 = relay.Tuple([call_4026,var_4024,var_4025,uop_4031,])
func_4035 = relay.Function([var_4015,var_4024,var_4025,], output)
mod['func_4035'] = func_4035
mod = relay.transform.InferType()(mod)
mutated_mod['func_4035'] = func_4035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4035_call = mutated_mod.get_global_var('func_4035')
var_4037 = relay.var("var_4037", dtype = "float32", shape = (1, 9, 16))#candidate|4037|(1, 9, 16)|var|float32
var_4038 = relay.var("var_4038", dtype = "int16", shape = (864,))#candidate|4038|(864,)|var|int16
var_4039 = relay.var("var_4039", dtype = "float32", shape = (1, 6720))#candidate|4039|(1, 6720)|var|float32
call_4036 = func_4035_call(var_4037,var_4038,var_4039,)
output = call_4036
func_4040 = relay.Function([var_4037,var_4038,var_4039,], output)
mutated_mod['func_4040'] = func_4040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3709_call = mod.get_global_var('func_3709')
func_3711_call = mutated_mod.get_global_var('func_3711')
call_4073 = relay.TupleGetItem(func_3709_call(), 0)
call_4074 = relay.TupleGetItem(func_3711_call(), 0)
output = call_4073
output2 = call_4074
func_4075 = relay.Function([], output)
mod['func_4075'] = func_4075
mod = relay.transform.InferType()(mod)
mutated_mod['func_4075'] = func_4075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4075_call = mutated_mod.get_global_var('func_4075')
call_4076 = func_4075_call()
output = call_4076
func_4077 = relay.Function([], output)
mutated_mod['func_4077'] = func_4077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mod.get_global_var('func_3948')
func_3950_call = mutated_mod.get_global_var('func_3950')
call_4227 = func_3948_call()
call_4228 = func_3948_call()
func_3020_call = mod.get_global_var('func_3020')
func_3023_call = mutated_mod.get_global_var('func_3023')
const_4244 = relay.const(-1.689551, dtype = "float64")#candidate|4244|()|const|float64
var_4245 = relay.var("var_4245", dtype = "bool", shape = (450,))#candidate|4245|(450,)|var|bool
call_4243 = relay.TupleGetItem(func_3020_call(relay.reshape(const_4244.astype('float64'), []), relay.reshape(var_4245.astype('bool'), [5, 10, 9]), ), 0)
call_4246 = relay.TupleGetItem(func_3023_call(relay.reshape(const_4244.astype('float64'), []), relay.reshape(var_4245.astype('bool'), [5, 10, 9]), ), 0)
func_3294_call = mod.get_global_var('func_3294')
func_3298_call = mutated_mod.get_global_var('func_3298')
var_4250 = relay.var("var_4250", dtype = "float64", shape = (2464,))#candidate|4250|(2464,)|var|float64
const_4251 = relay.const([[10],[-8],[-4],[3],[-10],[-3],[10],[6],[-2],[-3],[8],[2],[2],[9],[-2],[3],[8],[4],[8],[-4],[-2],[3],[-5],[-1],[6],[3],[2],[10],[-3],[-7],[-7],[9],[-4],[9],[-10],[8],[-10],[-5],[10],[9],[2],[1],[-7],[-7],[-9],[-7],[5],[-4],[-9],[-10],[-6],[3],[1],[-2],[-6],[6],[2],[1],[10],[2],[-4],[-8],[5],[9],[6],[4],[-8],[-1],[-9],[-10],[3],[2],[-5],[7],[-2],[-7],[-7],[5],[-10],[9],[2],[10],[-2],[-8],[4],[-5],[-4],[-2],[-1],[8],[-9],[-10],[-1],[-10],[9],[-9],[-5],[-2],[-1],[-8],[-10],[2],[4],[-5],[-5],[10],[10],[-10],[-5],[4],[-2],[-7],[-3],[3],[-1],[9],[-8],[5],[6],[-6],[-5],[-7],[-6],[-5],[-9],[-7],[3],[9],[-4],[10],[-7],[-5],[1],[-6],[-2],[-10],[-9],[-1],[5],[-8],[-7],[7],[-10],[6],[3],[7],[6],[-5],[-2],[3],[-3],[10],[-1],[-9],[-6],[-1],[1],[-3],[-6],[-2],[6],[9],[1],[-8],[-4],[6],[6],[-9],[6],[-1],[4],[-5],[2],[5],[10],[7],[7],[9],[-9],[-1],[-8],[10],[3],[-10],[9],[1],[-5],[-8],[8],[-7],[9],[6],[1],[3],[10],[4],[-1],[3],[6],[-2],[5],[10],[-2],[7],[10],[-10],[-9],[6],[-2],[9],[-1],[2],[-9],[-5],[-6],[-2],[2],[1],[10],[6],[3],[10],[2],[1],[5],[6],[2],[9],[2],[-8],[10],[-9],[2],[6],[9],[2],[8],[3],[8],[-6],[1],[8],[-1],[-7],[-10],[1],[-5],[-2],[-2],[8],[10],[3],[-2],[10],[8],[2],[9],[7],[8],[10],[10],[-7],[4],[3],[10],[9],[-3],[-10],[1],[-6],[7],[10],[-9],[-3],[-2],[-6],[6],[9],[-5],[-10],[-6],[-4],[3],[6],[5],[3],[-10],[-7],[4],[8],[5],[-8],[9],[5],[-2],[8],[-5],[-8],[10],[2],[-6],[7],[-10],[6],[6],[-9],[8],[-4],[-7],[-1],[-3],[10],[5],[4],[-4],[1],[3],[-7],[-4],[-6],[7],[-1],[-5],[3],[3],[4],[7],[2],[1],[-7],[6],[4],[-6],[2],[-4],[-10],[4],[-7],[6],[10],[8],[-3],[-7],[6],[5],[-3],[-1],[-8],[-10],[7],[-9],[-6],[-8],[-1],[-4],[2],[-6],[-6],[-4],[-2],[-8],[-9],[4],[6],[-10],[-7],[-9],[1],[5],[-2],[2],[3],[-10],[2],[3],[-2],[9],[-2],[1],[-4],[-10],[-7],[3],[6],[9],[-8],[-1],[10],[2],[-5],[3],[8],[9],[2],[7],[-10],[-8],[-5],[4],[-8],[-9],[-5],[-7],[-2],[-4],[-4],[6],[-1],[-3],[4],[1],[-6],[-10],[10],[4],[8],[-4],[4],[5],[-2],[4],[-8],[-9],[5],[3],[1],[-3],[3],[-10],[9],[2],[-9],[-8],[10],[10],[-4],[8],[-7],[2],[1],[3],[-9],[1],[-2],[-6],[-6],[8],[-5],[-8],[-2],[6],[5],[8],[1],[5],[-5],[-5],[7],[-6],[-8],[-1],[1],[2],[8],[10],[10],[-5],[-10],[-8],[5],[4],[-4],[-4],[-5],[-1],[5],[7],[-3],[-3],[-1],[-10],[8],[6],[10],[-10],[1],[-5],[-3],[7],[1],[10],[4],[-3],[8],[-10],[8],[-10],[7],[8],[-3],[-10],[-4],[-1],[-6],[-6],[-8],[5],[6],[9],[-6],[5],[-8],[2],[-2],[-3],[-1],[-9],[-10],[2],[9],[-2],[-6],[9],[5],[-8],[-4],[4],[-7],[-7],[9],[5],[-3],[-4],[5],[8],[6],[10],[-7],[4],[6],[4],[6],[-2],[-8],[-3],[9],[8],[-2],[-4],[10],[2],[-1],[10],[3],[1],[-7],[-7],[-5],[-5],[8],[-10],[5],[8],[10],[-6],[-5],[8],[3],[6],[-3],[3],[-4],[-10],[-9],[-1],[-4],[5],[-9],[-1],[-6],[-9],[5],[9],[-7],[-4],[-5],[-8],[-7],[-9],[-7],[7],[-1],[3],[5],[9],[10],[2],[-5],[-5],[-9],[-1],[-6],[-3],[-1],[-1],[-3],[10],[-1],[4],[-6],[5],[10],[3],[-10],[8],[-5],[-4],[-1],[-4],[-9],[9],[-3],[6],[3],[-10],[-2],[6],[4],[-7],[-6],[-6],[7],[-4],[6],[1],[4],[9],[-10],[-3],[-6],[1],[-8],[2],[-6],[8],[8],[-5],[-3],[3],[6],[9],[5],[-7],[-5],[-7],[3],[-3],[-7],[-5],[-5],[-5],[9],[10],[-8],[5],[9],[5],[-2],[-9],[5],[1],[6],[-9],[10],[5],[8],[-10],[1],[-1],[3],[4],[8],[5],[4],[-10],[-10],[4],[-7],[-6],[-8],[-2],[-3],[5],[4],[-3],[-10],[8],[8],[9],[-7],[-10],[-1],[10],[1],[3],[-9],[8],[-9],[5],[7],[-2],[-7],[-4],[-4],[-9],[-3],[8],[7],[-2],[-6],[-8],[1],[-6],[-6],[-6],[1],[9],[-8],[4],[-7],[7],[-6],[-6],[2],[9],[-2],[-4],[2],[-5],[-5],[1],[-1],[-3],[-5],[-3],[4],[4],[4],[2],[7],[-6],[10],[-4],[-4],[-1],[2],[-2],[-4],[9],[3],[-4],[3],[-6],[-10],[-3],[-4],[8],[10],[6],[-10],[10],[3],[-2],[6],[8],[7],[-8],[-10],[5],[5],[-6],[6],[-2],[-7],[8],[-9],[9],[10],[-1],[-5],[8],[1],[-2],[2],[-2],[5],[7],[4],[-8],[10],[-8],[6],[-3],[9],[7],[-4],[-7],[2],[-7],[-7],[1],[-7],[-5],[-8],[1],[1],[-8],[-7],[7],[6],[-1],[10],[-5],[-7],[5],[1],[8],[-6],[10],[8],[-1],[3],[7],[-2],[-7],[10],[-9],[7],[-1],[6],[2],[3],[9],[5],[-3],[-3],[1],[6],[9],[4],[-6],[-5],[3],[1],[-8],[-1],[6],[2],[-3],[-5],[7],[3],[-7],[6]], dtype = "int16")#candidate|4251|(864, 1)|const|int16
call_4249 = relay.TupleGetItem(func_3294_call(relay.reshape(var_4250.astype('float64'), [2464,]), relay.reshape(const_4251.astype('int16'), [864,]), ), 4)
call_4252 = relay.TupleGetItem(func_3298_call(relay.reshape(var_4250.astype('float64'), [2464,]), relay.reshape(const_4251.astype('int16'), [864,]), ), 4)
func_3568_call = mod.get_global_var('func_3568')
func_3572_call = mutated_mod.get_global_var('func_3572')
var_4265 = relay.var("var_4265", dtype = "bool", shape = (18, 9))#candidate|4265|(18, 9)|var|bool
call_4264 = relay.TupleGetItem(func_3568_call(relay.reshape(var_4265.astype('bool'), [6, 9, 3]), relay.reshape(var_4265.astype('bool'), [6, 9, 3]), ), 0)
call_4266 = relay.TupleGetItem(func_3572_call(relay.reshape(var_4265.astype('bool'), [6, 9, 3]), relay.reshape(var_4265.astype('bool'), [6, 9, 3]), ), 0)
uop_4268 = relay.sinh(var_4265.astype('float32')) # shape=(18, 9)
func_2036_call = mod.get_global_var('func_2036')
func_2039_call = mutated_mod.get_global_var('func_2039')
call_4274 = relay.TupleGetItem(func_2036_call(relay.reshape(call_4249.astype('int16'), [16, 9, 6]), relay.reshape(call_4249.astype('int16'), [16, 9, 6]), ), 0)
call_4275 = relay.TupleGetItem(func_2039_call(relay.reshape(call_4249.astype('int16'), [16, 9, 6]), relay.reshape(call_4249.astype('int16'), [16, 9, 6]), ), 0)
output = relay.Tuple([call_4227,call_4243,const_4244,var_4245,call_4249,var_4250,const_4251,call_4264,uop_4268,call_4274,])
output2 = relay.Tuple([call_4228,call_4246,const_4244,var_4245,call_4252,var_4250,const_4251,call_4266,uop_4268,call_4275,])
func_4277 = relay.Function([var_4245,var_4250,var_4265,], output)
mod['func_4277'] = func_4277
mod = relay.transform.InferType()(mod)
var_4278 = relay.var("var_4278", dtype = "bool", shape = (450,))#candidate|4278|(450,)|var|bool
var_4279 = relay.var("var_4279", dtype = "float64", shape = (2464,))#candidate|4279|(2464,)|var|float64
var_4280 = relay.var("var_4280", dtype = "bool", shape = (18, 9))#candidate|4280|(18, 9)|var|bool
output = func_4277(var_4278,var_4279,var_4280,)
func_4281 = relay.Function([var_4278,var_4279,var_4280,], output)
mutated_mod['func_4281'] = func_4281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3709_call = mod.get_global_var('func_3709')
func_3711_call = mutated_mod.get_global_var('func_3711')
call_4336 = relay.TupleGetItem(func_3709_call(), 0)
call_4337 = relay.TupleGetItem(func_3711_call(), 0)
const_4345 = relay.const([[7.759747,6.830679,-3.290628,2.961545,3.661242,-6.427335,-3.963409],[6.298488,3.469823,-0.725034,-0.319664,1.837580,-4.043810,6.702462],[-8.623351,-4.589041,-9.030840,-7.271558,-6.761161,4.436599,-6.042711],[-2.470778,5.472361,6.101871,-8.484477,-4.477219,-6.982362,0.887128],[2.364937,-5.813135,0.005146,0.328824,2.373343,-2.328998,3.471391],[4.144770,3.870497,-5.294919,8.135900,4.237297,6.595947,-8.352304],[7.119543,-3.777219,0.691834,6.933949,-8.792078,-3.210644,-9.181987],[3.445177,-8.396740,-7.561305,7.346939,-3.451207,-4.230601,-1.443274],[-8.172702,-3.597959,-1.189390,-1.686667,7.618594,-6.547257,-6.074014],[7.283845,-4.311707,6.524067,9.329141,-3.361387,-2.646227,-6.799495],[5.034212,2.180161,8.011885,4.608811,-1.799158,0.988998,0.285536],[4.629615,-8.952600,1.425393,-4.082368,0.591607,-0.085397,-7.582282],[1.745963,5.826570,2.272215,-0.286333,-6.592857,-0.472750,9.659623],[2.248665,2.029210,-3.043279,8.942529,-8.283459,-8.902427,-1.137533],[-0.865881,-0.928980,5.325246,-2.239920,-6.139299,8.629918,-9.027471],[8.710308,-9.441788,6.826404,-6.841181,6.476587,7.996219,7.999607],[-2.453697,-5.380942,-8.897265,-2.345566,-3.557906,-5.955039,3.325011],[-0.747776,0.353046,2.053773,-5.892842,9.734523,-4.980335,-5.270386],[6.017295,-4.208512,2.061423,-4.677412,8.574323,5.742887,2.455078],[-1.324269,-8.588695,-6.013619,-4.809254,6.070787,-2.726911,9.893898],[4.364126,-2.003185,8.725961,-5.791689,5.690723,-4.508977,6.091243],[0.236571,6.089665,5.111679,-1.283662,7.149095,6.445749,4.753534],[-5.953192,4.138225,-9.998342,-1.412669,-4.164240,3.104307,9.239791],[-0.825042,7.438429,0.714869,4.222062,-1.992031,-9.978311,-8.096298],[-6.932850,-9.260609,6.891616,3.678736,7.138669,9.015941,-6.412169],[-3.742723,2.751500,8.111153,-6.421068,3.724720,1.610506,5.845701],[-1.877908,-8.690184,9.689606,8.098789,-3.008996,-9.146310,-9.889783],[6.225840,-3.706150,-5.234771,-6.661063,0.593918,-6.460859,-3.859674],[-3.957132,2.413974,4.690441,-4.115726,-8.486952,3.937208,-3.355219],[9.983797,-6.600160,6.732431,-7.638898,-5.398809,6.448252,4.490400],[-9.188513,-0.297262,0.737435,1.989911,8.780656,8.319743,3.931149],[-5.334545,-4.465005,-8.051803,-9.213867,-6.934738,4.049528,5.967015],[-4.748541,-8.014049,-3.849704,6.750411,9.778157,-1.276096,-1.707678],[-2.727414,9.261586,4.112727,-5.531756,-4.730361,-0.881897,5.885942],[1.633454,-0.272774,5.401333,-0.241946,2.396420,9.780442,8.787395],[6.907279,6.192377,1.817758,-4.009256,0.625715,9.482208,4.924175],[-4.695292,0.654067,6.413674,4.808411,0.536907,-5.451690,8.338266],[6.115439,-7.612598,8.864800,-4.898572,-4.606698,9.273611,-5.361409],[6.200850,-1.025001,-7.689457,9.546264,-9.063066,8.497164,-0.770808],[-2.860981,8.578057,-6.816498,5.384647,-7.194797,5.767839,-7.793596],[-7.982664,9.428891,6.597829,2.821291,1.531466,0.573256,1.467136],[8.936629,1.257435,4.033098,7.677215,-2.512653,0.795978,6.589891],[3.512534,-1.606889,-1.957222,1.109638,9.118335,4.044866,5.426435],[-0.792890,2.399839,-5.483084,-4.270559,-9.956810,-7.754222,-6.518430],[8.974415,-9.810777,6.800660,-5.718493,-2.357538,2.740905,-1.528170],[-0.061721,-7.432888,-0.049310,3.265284,-6.101751,-3.508902,4.883040],[3.710819,7.597850,7.060825,0.675280,-1.014231,-6.880923,0.335805],[-7.462390,4.932178,2.443496,-4.393286,1.107712,-0.217131,3.019040],[-3.002553,9.628605,-3.419987,-2.483552,-7.484487,-5.866502,0.893847],[6.588643,7.010389,-0.904191,1.206821,-6.466665,4.486947,6.808752],[7.621033,8.562618,5.499313,0.799375,9.413721,-0.589885,0.282666],[-9.364749,7.965324,1.286305,6.409897,2.546699,7.846897,-4.248546],[-2.154672,-6.521641,-4.994868,7.421957,8.989587,2.158019,2.457726],[-1.989990,4.291482,2.436151,3.477689,3.500999,6.158085,0.284514],[-2.692929,2.039689,3.685907,-3.727931,4.050609,6.899301,-7.676394],[0.831262,-0.218239,-2.041073,-2.702136,8.532100,-0.737213,5.128172],[7.442726,-9.220318,-9.367007,-3.457653,1.899663,-6.619553,9.513344],[1.624418,-6.115841,8.597904,4.718903,-8.011003,7.332385,6.561547],[-1.335840,8.740010,8.149117,9.888460,-3.245501,1.517221,-3.759961],[-8.795130,8.344438,3.337122,7.781680,1.252884,-2.087990,-3.293553],[0.852461,1.751165,-6.028838,0.527563,-7.485243,-7.999860,2.299789],[8.514557,0.538210,2.794238,9.030915,-6.214814,9.559118,9.126114],[-9.141418,7.912808,6.822525,6.235230,-9.728281,7.812459,-7.716258],[0.917018,3.213572,3.083909,-9.163920,-4.337240,-0.023824,-4.171639],[-4.260834,6.575855,-3.739000,-7.118608,-5.456246,9.494455,-5.834495],[5.522442,-2.599906,-2.161291,8.976114,-7.555983,-0.949920,-1.216275],[-3.766129,-3.685869,-5.804774,0.160421,9.453774,6.085695,9.039957],[-2.477788,8.804226,-2.510463,-0.565623,-5.243375,2.653813,2.600494],[2.327772,-8.774189,0.467697,-9.588097,-9.510836,-1.640116,5.295367],[5.638053,-2.667104,-7.846811,-1.769936,-9.257423,-7.331112,-4.268947],[7.304689,6.594017,9.852864,-2.166564,6.504452,1.747025,-6.404442],[5.858091,0.008287,8.915562,-3.134738,3.311485,-7.362527,3.854981],[-0.113000,-6.046121,7.489721,-9.007454,9.130470,5.719274,8.359659],[9.273544,-8.745113,8.623661,1.256244,-3.744323,0.777041,-5.119435],[2.990062,-8.112251,-4.907782,5.144620,-2.208892,-2.744880,4.470395],[-8.709716,-1.836136,-6.038531,-3.138048,-1.085447,-6.456627,8.452927],[5.559500,-7.167601,0.106870,-8.367854,3.937906,-8.253247,-9.119360],[-9.978631,-9.372580,-5.657600,-7.959083,-6.016709,8.398684,-9.031190],[8.256860,2.774367,-9.967684,8.307751,-0.521381,3.088168,9.233111],[1.358336,-1.794207,6.908593,8.650999,-0.626080,1.097233,-6.903979],[8.553119,-4.973092,9.813639,6.534498,3.682589,9.404424,6.960445],[-9.337359,-1.373207,-6.133362,4.464351,-6.630768,7.018716,-7.682213],[0.247849,7.795547,9.701138,3.516550,4.567702,-2.605884,2.572874],[-6.894551,-2.075486,4.582028,7.919008,-8.310156,-8.099354,7.388584],[4.415547,-6.297102,-5.989710,2.385759,0.306229,-8.186749,-2.701980],[-8.721152,0.860209,-3.267033,0.593811,-6.796766,1.282837,1.754937],[8.692005,5.232938,-3.022037,2.374368,-8.222092,-8.304163,7.944651],[-7.581783,-2.791036,4.400265,-8.576932,3.641920,-4.195658,-8.971321],[-3.520147,2.182604,-0.323755,-2.240379,-4.627433,2.859215,8.852333],[-0.856128,8.096191,-8.397563,1.916453,2.026568,1.453372,5.692010],[-1.603993,1.997544,3.457643,3.520342,6.471427,-0.038705,7.210553],[-9.067670,-9.037925,-4.521842,-7.768722,7.522701,-5.989135,0.099160],[4.926580,6.443139,-5.854715,5.921938,5.875244,7.978212,-8.490935],[-0.194907,3.545354,-7.559334,-2.902851,8.462421,6.828506,-7.087312],[4.311168,6.533520,0.932597,9.553878,4.807425,7.072229,0.847486],[-6.479751,5.822402,2.870218,4.734935,-5.799910,-4.739863,-3.265920],[-8.937537,-9.044359,-6.708698,-0.376825,-7.526397,3.374027,-7.290167],[3.576970,4.311822,-2.574180,-9.339301,-2.433629,3.571193,8.552707],[-7.273958,-5.011023,8.970588,9.792272,-6.331317,3.483831,6.064738],[0.568407,3.163428,1.323435,-1.186499,9.968437,8.156745,-8.911740],[-1.750826,0.557535,-7.167172,3.102421,-2.378396,1.534048,3.801500],[5.600007,-9.058086,-1.976668,4.945331,-9.794002,3.418741,5.702236],[0.199822,-3.496864,4.353065,8.549045,0.944208,3.401689,6.632360],[-3.526432,7.072997,8.306352,-4.853911,-4.045562,1.991303,7.112059],[-0.413440,7.532174,5.063389,-7.096405,8.231905,-5.163439,-6.322524],[-2.682975,-7.664897,-6.695760,2.135948,1.920703,-6.143365,6.045424],[3.750882,-0.838891,2.592131,0.022799,4.688532,-7.272029,1.515702],[9.587861,-0.389442,4.481928,5.009897,9.427167,2.483429,-9.431356],[-3.515080,4.285644,1.254422,9.712022,-6.267985,5.337303,-9.302748],[-9.139267,-1.250991,-0.197832,-9.668534,9.529360,8.550808,-0.745091],[-4.627440,-6.988659,-6.474040,-3.603512,-1.500258,3.217466,-8.917177],[-9.794611,-0.372590,7.570084,9.078712,0.941816,9.085224,0.984809],[2.058566,-3.257096,-3.179201,-3.522123,-8.117647,-5.696897,0.323923],[4.842524,-5.991786,-4.078606,6.219866,7.510674,3.442239,-8.654310],[-9.136718,-5.863405,5.420834,9.021243,5.457377,-8.784121,-3.626706],[-8.028365,-9.987231,7.431501,-2.596014,3.569296,5.625550,-8.470236],[-2.065101,-8.005167,-2.990205,-8.651008,3.718121,5.420183,-0.210922],[-6.004535,7.329815,-6.174138,6.641987,-8.663573,3.116208,9.896188],[3.919202,-8.073523,-6.786974,-6.105769,5.664457,-6.439695,-7.558138],[7.366245,5.435164,1.808667,3.611873,6.470128,0.345254,-9.510963],[0.950147,-1.251156,7.487750,-9.867442,3.481116,-7.059353,-3.843612],[8.192041,-5.191136,0.805013,-1.610494,-4.633121,-4.534454,-4.887599],[-0.441122,-3.701525,-7.372133,-0.649967,0.769325,3.857332,3.359097],[2.079110,-7.362815,-3.311626,-4.842658,6.646301,-1.839300,-3.256656],[3.026919,-8.079417,1.425622,1.826122,7.440956,5.464997,4.541087],[1.006828,-0.442612,-7.680927,7.840522,8.541438,-1.373729,8.430724],[1.450502,6.396541,-4.318001,-2.180244,-0.858749,-6.585963,8.089964],[8.596336,-9.669191,0.172276,7.989852,-5.674736,-4.952011,-1.686707],[-4.042864,6.520461,1.425665,-5.927981,-0.528251,6.646412,-6.131889],[6.925635,3.293224,-3.380428,9.014142,-1.534272,6.247705,-9.606652],[4.535086,-4.384359,-5.290062,9.392549,-9.014703,8.324615,-2.870626],[-9.965146,-6.809097,-7.746707,-4.184264,-1.393402,-3.513345,-2.037972],[9.357736,0.145595,-6.122710,-0.586101,0.109182,-4.300237,7.538786],[-7.707615,0.943228,-5.035848,-8.637554,5.929667,-3.278711,6.077877],[7.085040,-0.878843,-0.914113,9.504176,-8.217854,3.503661,8.509940],[0.208986,5.504089,-4.372686,-9.484731,7.728788,0.206042,8.457134],[-7.548974,-4.941132,3.770857,-0.617367,-4.511338,-0.371198,5.093028],[-9.906627,8.452314,2.042647,4.020776,8.663896,-3.222146,5.058694],[-5.749114,9.026670,1.501677,-4.730150,1.403763,-7.861000,-8.351739],[-6.112613,-4.201751,-1.903529,-3.089212,-9.014999,2.606560,-8.656633],[-1.801046,2.052627,-0.921401,2.904069,-8.505206,-0.615929,-0.677408],[9.383496,9.173635,-8.393120,-0.526053,-7.427010,-0.867427,-8.915057],[-6.464196,-2.606116,-0.694834,3.244798,-1.423209,-7.696771,-0.510188],[-4.478548,8.639403,4.161593,9.104188,-6.286961,-7.582908,2.990849],[-9.579422,-3.067779,-2.635723,1.208897,-3.503819,8.299753,-8.176787],[1.655250,6.019373,4.403289,5.465747,2.062098,4.269432,-6.328460],[-7.916110,-5.644180,-8.427006,-8.582929,7.315002,1.909412,-0.014380],[1.721739,2.588048,-9.446807,-6.020241,7.283451,-8.545698,2.134216],[7.762712,-9.023318,8.151188,-3.934171,0.981238,-3.100678,-8.601990],[3.558844,-6.242060,7.480965,2.181522,-4.421399,-0.700182,-4.132083],[4.416400,-6.698199,6.549136,-1.277434,2.192986,-9.861896,0.406410],[-8.214484,2.683633,8.198368,-7.534558,3.063083,-7.062193,3.728245],[0.465787,9.732025,3.257601,0.716902,-4.622695,9.407407,-5.421605],[3.020788,-9.946175,-2.601757,4.727162,-9.604044,-5.732473,3.132203],[1.445369,0.653848,-5.515971,8.887560,-7.393889,5.625938,4.845850],[3.624589,-1.154851,1.189635,-4.372202,-5.772285,4.880405,2.497300],[-8.869269,-3.991564,5.846155,1.924381,5.961843,-4.192506,0.752109],[-2.250283,-7.176654,9.990455,-3.924094,-1.790122,-6.385360,-3.728548],[2.960597,7.817058,1.514998,6.879033,-9.364384,-9.851731,-3.324323],[4.297335,-5.886736,-7.633449,9.829713,-1.946258,-3.380854,-7.132392],[7.354540,5.815126,-2.211973,6.417161,-7.099006,1.707620,2.787268],[-1.164242,-4.173115,2.993055,-8.588031,3.490450,4.314169,7.955221],[-0.692111,-5.800306,3.991139,-6.513345,3.823255,7.056220,0.109906],[-5.065632,-2.547315,-8.186787,-4.247303,-6.971109,0.302411,3.792962],[3.333243,-8.369080,-7.027368,9.762625,-0.627763,-0.616841,6.328158],[-5.087915,-1.341068,9.733380,7.130957,6.521863,-3.558158,-6.227443],[6.548462,-4.590772,3.771283,2.257038,-9.946454,2.305752,-5.656619],[-9.480978,5.949748,-0.489228,2.922101,-1.256236,7.949454,-6.173306],[7.325052,1.536074,-4.624870,3.817263,9.017806,-7.600048,-5.844496],[-3.814906,5.661764,-9.040952,3.788616,-9.780349,7.547636,-7.828624],[-6.821176,-3.401708,6.439290,-4.787586,7.339357,2.847240,-1.158093],[-1.006360,0.004886,-8.087336,3.626223,4.837660,3.840072,3.244222],[2.890184,-2.516098,0.761737,1.007850,-3.890949,-4.099292,-4.833732],[-1.394225,5.305249,5.813580,-9.817899,6.227905,-1.618595,-8.937434],[-4.554250,-5.852582,9.292838,7.399502,7.981087,-2.214870,6.051601],[-9.767976,-6.896033,-2.936095,8.523878,0.798787,4.340945,-5.644740],[7.026081,-3.678093,-5.836637,2.315386,5.275807,-8.375622,-4.630706],[-6.182332,-9.516775,2.549070,-5.471457,-1.376571,1.096014,4.761444],[4.388692,-5.252848,-0.240260,-5.679973,-6.896731,9.840456,2.581240],[-4.075888,-8.562560,9.056400,0.234406,9.216011,-0.809739,-3.274664],[8.532580,2.237515,6.504973,-4.216561,-6.418464,-4.627600,-5.387020],[-9.867365,-5.544838,2.863930,3.752621,2.603440,4.583820,-5.883794],[-2.972518,5.747294,-0.748142,-2.899393,5.205982,-7.367876,-9.768229],[-7.125965,-6.463660,-5.597567,4.811751,5.899067,-2.102925,-2.768610],[8.761101,9.115258,2.055887,-9.184557,6.007490,3.183796,1.840504],[-8.924379,-0.428292,-3.202196,9.263636,9.210371,4.292245,-1.610811],[6.636155,8.156176,0.413525,5.218652,-3.672362,1.011403,-3.848558],[-1.301099,-7.981159,1.845876,1.322497,9.193850,-4.022607,1.679021],[2.460628,0.671138,-6.888415,5.722443,-1.503002,-4.245898,-1.683608],[-5.963146,-3.844850,-1.905343,-6.258666,-4.242786,-9.520938,-0.347919],[-7.323292,-6.619649,9.546217,3.766508,-8.186415,-0.402370,3.767676],[0.546924,-7.410793,-0.488599,-0.853555,2.509486,6.232534,-4.896892],[0.157152,-3.810337,8.700548,1.226349,1.780609,-0.247951,5.217716],[-6.537902,-0.038013,0.646060,4.750116,4.312843,-8.543531,-9.201119],[-2.024582,2.836081,-2.149366,-0.189559,-6.125544,-9.616846,-6.937921],[-6.707966,5.961959,-2.848636,-7.252413,-7.864958,5.000645,-0.613392],[-1.616018,9.692095,3.405034,-0.537441,1.609844,9.310800,-2.576528],[1.556599,3.734977,3.364296,-4.215393,-4.740991,6.906309,-8.178726],[-6.839944,-6.130334,-8.505528,-2.834985,6.012517,0.368623,8.905354],[-6.047834,-0.476265,-8.314639,6.875185,2.573000,7.639193,3.227662],[-3.144484,3.241981,-2.679374,-9.175825,-8.301594,-7.149619,0.519634],[-5.194386,1.254945,3.070591,-2.827643,3.248792,7.888988,3.633600],[-2.114864,5.468066,-5.430507,3.879222,-9.271989,4.103403,-7.085022],[-1.595392,0.366485,-2.726296,-9.846646,4.419575,2.185413,-9.745246],[6.717556,8.264660,-7.383782,-7.954842,-1.249517,3.536127,1.813968],[1.581375,8.121928,-0.622222,-3.399748,6.089433,-0.251493,9.802935],[0.118776,-1.599365,7.061574,-9.589415,-2.084522,-3.635723,-5.879719],[8.845667,6.449715,-6.039335,0.032278,4.345233,0.124944,-7.057768],[3.414105,-5.446059,9.053806,0.199063,-8.251897,4.116991,1.727046],[9.763500,0.222632,1.585043,9.369413,1.032412,-3.671650,-7.170330],[5.196598,4.044273,-0.012967,8.251045,-9.025751,-3.682052,-2.772176],[0.168644,-3.054566,-4.514655,-9.482872,-5.648292,3.386493,-1.657830],[-8.137234,1.877546,3.659008,1.309607,-7.688682,8.758671,6.171241],[-1.038682,6.158871,6.804867,-6.937086,-8.208434,-4.292832,2.041228],[-6.956998,6.157768,-3.405473,6.039328,-6.151753,-3.230172,4.433717],[3.304094,7.284366,2.690389,-8.584125,-9.374231,-9.742797,6.054775],[2.014830,-8.395455,-3.270031,8.935330,-1.703870,-0.942663,6.479975],[-3.344466,-7.523975,9.246843,5.399008,8.439522,-2.477014,-0.997927],[-9.648677,2.797400,-3.118334,2.906065,5.229998,-5.743457,2.112986],[-4.845521,3.306384,-7.116854,2.601086,8.059716,-1.865540,-5.313453],[2.796185,5.061175,-1.150765,4.029917,-5.369783,1.545869,2.164632],[4.710925,-7.042186,4.036723,-4.744328,4.660779,-2.644215,-5.481672],[0.838468,3.397188,-2.962721,-5.723833,9.009823,2.756840,7.131880],[4.710688,-4.803939,3.388528,2.101810,-0.689355,-2.971098,8.550165],[3.230631,1.973343,-4.274996,8.774346,3.846559,6.853959,0.733522],[-4.845773,4.716246,-3.004898,9.012877,-0.193716,-6.525547,-4.521177],[-6.784734,6.722461,-4.416900,4.583240,7.120438,3.595784,-8.648351],[4.478977,8.008454,-4.551869,-2.588579,3.099952,3.638906,-9.263926],[-5.688105,-5.580099,-9.578539,-8.271370,5.492400,4.188446,-9.036641],[8.206614,8.593160,6.372958,6.104345,5.040344,-9.414630,1.320052],[-0.684738,5.029179,-8.035957,7.857121,-3.428177,5.662971,6.277652],[-1.629629,5.884308,0.851448,2.483548,-3.795248,-5.061367,-4.742728],[-1.073911,-7.340190,4.917524,1.393958,-3.094304,-3.915879,4.322304],[-4.953231,-4.626418,-6.765697,-5.654917,-0.054899,-2.269788,-0.975290],[-0.935732,4.362026,-0.395526,6.029555,-9.644822,-4.283493,9.949485],[4.011236,-6.003129,-6.236785,-9.928225,1.650347,-5.892829,-9.197972],[-2.944438,8.147588,1.362683,2.405495,5.743319,4.895269,9.020257],[-6.824076,-6.598371,8.554509,4.582895,6.843573,1.421120,-0.164971],[-1.690939,-6.235423,-0.399766,3.415402,0.128973,5.673256,7.864056],[-3.670221,-2.372583,-5.152003,-0.349190,-8.567730,4.752747,0.035301],[-8.283691,-8.862724,5.275727,3.522797,-4.426984,7.702914,8.862796],[-9.661687,-7.193603,9.373856,0.149047,2.191543,-0.734450,3.591324],[-1.294702,-7.889916,5.474008,4.910295,0.790064,-6.426271,-1.653246],[3.438387,-9.164953,-7.630701,-9.871116,-5.008091,7.060328,8.856904],[7.957451,1.529052,-6.584479,-4.712769,-4.471048,-8.993955,-8.468978],[-4.773264,-3.301280,-1.435834,2.177754,7.098585,-8.794674,-7.358116],[-2.615724,0.764105,-5.517879,2.708935,-4.542560,-1.998794,6.246414],[6.344970,4.373434,-9.449437,4.800304,7.365488,-2.691201,6.821350],[-8.023301,-2.812450,4.550989,-1.921028,8.315845,-6.920281,8.263537],[-9.888037,6.107283,-2.048004,7.563143,5.448992,0.393313,-2.648371],[1.070621,-3.205555,0.091518,-8.021584,8.762019,-5.035514,-7.730467],[-9.626854,-5.194749,2.292283,-9.588880,-7.194572,-5.309625,0.839319],[-8.994961,2.677286,5.885886,5.349061,8.218536,2.375669,-7.971360],[0.716495,7.227492,-1.225569,-8.732220,7.594384,1.107973,3.050408],[7.673665,3.584493,-2.199976,-9.550886,1.845508,-0.347206,1.780803],[5.116181,3.798263,4.447069,-3.873269,-9.510092,5.577530,-4.765054],[-1.607785,-9.548547,-0.809177,4.972877,7.966979,-0.093665,-4.042739],[5.493236,-2.641862,3.328180,6.454307,-6.338763,3.859905,-4.307544],[3.017881,0.013384,-3.592113,0.160559,-0.743788,3.647071,-5.081276],[-7.735255,-0.305743,6.042476,-6.957596,7.614516,6.624217,9.643081],[-6.780471,5.586770,-8.023625,6.559995,-0.234360,3.458346,-9.677460],[-4.220935,-4.082844,9.244217,-5.449084,-6.635654,2.634530,-7.548247],[3.155630,9.995472,-4.464099,1.194751,-6.043780,8.060972,-3.362639],[1.623306,-6.710913,0.351590,-7.925024,5.129103,0.255758,9.897223],[8.502918,6.819107,6.210705,4.731380,0.297102,2.214866,1.713765],[9.444541,5.964104,-3.803884,-2.633279,2.603117,-0.346537,-4.182717],[-0.412018,1.985074,7.381510,-2.074557,6.595779,-6.234934,0.125129],[-3.308706,7.286260,-6.611149,-5.544703,-8.028693,-2.881042,1.042369],[-2.888755,2.121119,6.925347,2.595781,0.681084,-2.828062,4.717748],[-5.136214,-4.125043,1.240091,-6.992249,-7.282280,8.349077,8.046584],[-6.404015,-6.738339,-4.203495,2.465109,-2.072972,0.666226,4.246769],[8.678038,-5.722778,0.134486,-4.217513,-0.646980,-3.902417,-0.599087],[3.828889,8.944707,-1.408083,8.303885,5.257532,3.158946,0.391324],[-2.714136,-7.093154,6.962195,3.542602,8.050195,4.364755,-7.094612],[-7.304264,8.494847,-6.139400,-3.072102,0.303595,-7.382775,-2.287570],[-7.806138,-7.970325,-5.954068,-6.867401,8.700765,-0.071029,-1.663057],[2.106137,1.395215,3.058979,9.789081,-0.898521,-0.908930,5.180072],[-6.122280,-8.464520,2.649566,1.574628,0.595275,2.925239,9.189313],[4.867734,-1.349599,-3.932312,7.565385,-2.553037,-9.682661,-7.027959],[-9.967247,8.037161,2.809968,-4.971276,-0.785700,0.766355,4.458396],[-1.685731,-2.645755,-5.781406,-1.925848,1.616644,-7.004832,4.891756],[-1.214190,-5.738332,0.565981,5.787084,8.574323,-7.330011,-7.724657],[-9.603949,-0.089748,-0.453532,-0.161980,8.902586,-9.386983,-1.536600],[4.759483,6.719409,7.478805,-0.522733,5.828973,-3.730173,1.638367],[-4.449103,-8.382931,-3.042488,2.556671,4.360247,2.598815,9.208177],[4.718285,3.852938,1.986781,-3.078060,-4.618308,4.628392,5.338873],[-3.757280,-5.384878,-1.465439,9.845568,-3.969180,8.764473,4.423950],[-3.262493,-4.636606,-0.393982,-1.640729,-5.293653,8.538960,-9.592111],[-7.463329,-8.202897,-1.479628,6.535177,6.740153,5.701237,-2.939929],[9.176279,-3.738073,-2.995485,-2.490025,-0.566888,-0.984580,4.994991],[6.480936,-6.948963,8.391234,-4.226613,-0.949226,-3.968709,6.769204],[4.110808,2.681725,0.216873,-1.291140,-3.107935,-2.884614,-4.891147],[-3.453022,-5.539097,1.286563,9.217817,8.181003,-6.354481,-8.032811],[0.388328,2.816284,6.975964,-1.817362,-9.264328,-3.902581,9.882127],[0.933243,1.463518,9.996065,7.015078,-6.374590,-7.675644,-8.180630],[7.630161,1.288379,-2.785355,0.627705,7.048006,-0.095819,2.466250],[5.466411,-2.330665,-7.366380,-5.231359,7.419352,-5.964996,-1.554990],[-5.524973,0.965213,5.157469,-2.275963,9.095253,6.780335,6.372704],[-5.165419,-7.390656,2.906615,-4.375935,-5.807006,-4.466713,-1.908244],[-1.019431,5.788038,-2.527102,-7.862347,6.198605,8.760655,8.475355],[-2.093568,6.750749,8.698718,-6.977794,-3.456660,-6.993437,6.414115],[-6.552612,9.647199,-2.540951,8.035886,0.600484,3.737417,0.784021],[-8.868665,4.067277,9.600204,6.899365,5.927027,-0.384413,8.559235],[-2.060473,9.710374,-6.207165,1.084390,2.738576,2.014685,3.467856],[8.389430,-7.499020,0.101167,-2.606393,-5.219265,3.312951,2.867172],[4.462883,-2.006508,7.901675,-7.573968,-2.602300,2.232807,3.009197],[-4.551416,6.411527,7.018826,3.557824,8.936610,7.626895,-4.775599],[8.087206,-9.027024,-8.947249,6.588613,-4.021059,8.047759,7.157051],[-1.408450,-0.176213,3.978494,6.012810,9.485048,9.035858,-4.672496],[-2.776213,2.037565,8.465862,-5.960718,-7.538912,8.102878,9.705680],[9.867883,5.659945,9.366856,7.005659,0.060549,7.475580,3.481052],[-1.415902,-3.958267,-6.744424,-9.363061,2.283664,0.225217,-2.086478],[0.121167,-1.626055,8.283404,-1.658833,4.669057,8.575438,-4.940045],[1.258951,-9.265302,-2.208047,-6.883191,-9.035270,-6.850168,2.189426],[-1.386226,-2.462031,0.878723,-0.011549,4.914585,-5.606175,-4.852496],[2.211562,-3.193484,4.821298,-5.592788,9.731432,-5.297346,-1.353469],[-1.184128,8.595338,5.419990,-0.619803,-4.340941,5.610313,1.784523],[-1.540872,-2.913688,5.399681,-7.603381,2.955370,-4.999220,0.875272],[-5.212164,2.435426,1.769040,5.240114,-6.585391,8.442456,9.058880],[-7.149642,-8.410678,-5.922014,9.086538,-2.461002,-7.718175,-5.205646],[-7.872132,-4.407615,2.322484,5.505207,-2.648648,-6.521895,-5.877532],[3.766366,-7.445145,1.347853,-3.293151,7.745086,0.321587,9.082630],[3.255308,-4.263547,0.016246,8.070903,-1.367522,8.511546,3.366676],[8.073528,7.654203,3.017357,2.812568,8.630235,6.143651,7.035215],[-3.918747,-2.490666,-1.361288,3.344679,5.519064,6.304748,-4.593086],[-2.167385,-8.289973,5.972759,-2.381279,7.339864,4.616649,4.960033],[-1.775440,1.199171,2.650921,-2.847444,-5.443585,1.894245,-5.528390],[8.575558,7.191557,4.866338,-4.505657,-7.740991,3.593788,-0.876814],[-1.197060,6.931404,-4.920305,4.113592,9.170390,2.719352,4.042028],[5.532139,7.659328,-3.160829,6.258431,-1.416045,2.590739,-4.366746],[5.935901,8.898168,5.912277,-5.432666,-3.274241,5.686304,9.977956],[6.560543,-8.369635,6.515660,-3.415139,-1.414277,4.859860,2.479403],[4.795662,4.692887,-1.650423,-8.890271,-0.172338,0.577872,-7.574827],[-6.012825,9.004297,0.832343,-9.171250,-2.806919,-7.775495,-2.801924],[4.936902,-0.032783,-8.957015,6.358762,3.757728,-4.604226,-0.870698],[-1.212617,-1.388306,6.253597,-5.663601,2.744275,9.575189,9.381585],[6.794485,5.311457,3.618153,5.392514,6.443295,-7.438301,5.224176],[-5.355717,-3.419416,-5.086175,6.985684,6.845949,-3.909407,9.732762],[-3.106891,-8.105993,-8.598440,-0.831155,3.544070,9.085536,3.318279],[0.266017,-5.436943,-2.435503,-7.195078,-7.558106,-1.518787,-6.952662],[-2.330114,-6.185734,-6.089901,-6.380018,-3.682149,7.445644,5.730405],[3.400188,-7.261583,4.518488,-2.487235,-7.133487,-2.877407,2.628503],[-1.812592,-6.209059,3.666785,4.439080,5.732258,-3.124843,-4.964084],[3.055901,4.619572,-9.555302,-2.251101,-8.438012,-6.870923,7.339958],[6.093928,4.700759,-1.239742,6.736200,0.477638,-7.607263,-1.262418],[-6.513192,-2.850900,-8.391215,-0.620532,9.752854,-0.300556,-1.601420],[-2.597818,-5.501769,-5.415808,4.001503,2.790276,-7.044482,0.501378],[6.632899,9.770874,0.263580,9.220452,0.176509,-2.673168,-7.611761],[5.865712,7.808743,5.361568,5.014275,-0.973136,-4.990266,3.008149],[-0.624312,3.295264,0.774135,8.665442,-1.202750,-6.275385,0.169203],[2.242189,-5.775214,-6.351829,-5.531591,3.823027,3.597665,7.556061],[9.660122,-7.342066,2.769772,7.691991,-9.803114,1.787945,4.956912],[4.920135,4.865572,6.715889,0.061777,8.541831,0.121126,0.628679],[-7.920124,-5.364989,-3.296907,0.051062,2.425087,-8.352352,-7.902424],[-0.146369,7.160383,-3.390920,-6.654082,-4.103779,2.428308,-6.763362],[-2.702519,4.911214,-5.502900,-1.549655,-7.770442,-5.820903,-2.811181],[3.034475,3.890479,0.096079,9.453654,5.944592,7.863755,1.173266],[5.644610,4.815746,-8.688980,4.928026,-1.362368,6.274844,8.519350],[-3.492729,-9.457040,-6.097416,-3.313975,-3.584310,6.543406,6.078411],[-5.707759,4.902476,-2.622401,1.544793,0.448992,5.062098,4.508238],[-2.263526,9.621088,-0.401945,5.178768,2.124302,-9.860313,2.738224],[4.654935,-8.623571,-0.371090,1.025128,-8.557110,6.938368,1.689560],[-2.784086,9.328641,-5.872086,0.638566,-2.444604,1.080872,-3.376399],[1.298990,-4.194561,7.166396,-3.996183,-9.267678,-4.155032,1.694499],[1.027452,7.403226,8.785247,-4.143363,0.737046,-2.011846,-9.303110],[9.650491,-9.145882,2.016991,9.434049,4.359143,-4.946609,2.343741],[4.479111,-9.859098,-6.754317,-1.535776,-7.152421,6.076629,-4.091324],[1.639503,3.413008,-6.521100,9.954244,-8.605346,-9.440350,5.991446],[-3.709426,5.546192,4.068124,-7.063243,6.915651,8.932518,4.217836],[1.070091,-1.811488,5.511491,6.104710,9.316157,1.552524,8.655625],[-6.471180,-2.658974,-6.431962,-4.318884,4.952052,2.313376,6.307075],[-0.372097,3.398929,-5.254309,-5.969500,1.854914,2.014866,-0.119797],[7.448786,-5.565062,-6.478296,-2.681706,5.327893,-9.105108,6.895958],[0.085141,-7.909294,7.755003,-4.207465,-8.212824,3.887243,-3.698961],[-9.067114,9.994264,8.581469,5.287469,-4.914693,-2.787958,-5.690422],[-2.776424,-7.914142,-4.280004,3.442095,-8.740785,-0.136514,-4.719436],[-5.907013,-9.550937,-3.954750,-3.424887,-7.898613,8.966173,1.931118],[-8.738957,6.324122,1.223093,-2.099378,-1.085170,-1.620793,2.095924],[3.238771,-2.691052,4.573815,8.017200,3.674755,8.364229,7.326073],[-6.218394,-0.471192,3.636904,-9.796845,4.083493,-9.040418,-6.435908],[-5.864482,7.950101,-8.622955,6.248370,7.426916,3.413708,7.499546],[-7.794606,1.276122,3.806706,1.436145,1.612835,-4.269182,-3.313011],[2.076238,3.137415,8.007042,2.245802,-1.305969,9.304534,0.111226],[-6.543972,7.212163,-1.458931,-6.366671,-3.478021,-4.895811,2.370612],[-3.799771,3.678121,-0.652660,3.376320,-2.202666,1.016159,3.525551],[-6.527407,7.178580,6.384044,0.702843,-8.889362,-7.015078,2.132817],[-3.505758,0.896060,-6.060335,-7.643815,2.444979,-0.208545,3.959664],[-1.436294,-9.653592,4.985238,-0.500576,-4.308583,-8.463579,0.037576],[7.556952,4.471034,1.724938,-4.401950,-0.048946,-0.835318,-3.259169],[6.240184,9.622901,1.650828,-1.967290,3.294127,3.588557,-2.447052],[-3.548889,-1.423889,-7.287358,-6.135977,-5.798898,9.559886,2.973512],[-2.610464,6.513110,3.930567,-3.353997,-2.347061,-9.757767,3.973457],[-2.292537,7.610160,3.991838,-1.172369,-2.454457,1.985663,-3.927911],[9.679349,-8.093800,7.100534,4.917033,-0.021486,0.662430,-8.415223],[5.478097,-5.147804,0.238991,-3.464160,8.586549,-3.366164,5.692946],[5.901583,-1.951056,-6.380772,-9.516827,-0.663293,-6.794700,1.365157],[-1.395167,6.072443,2.906771,1.957364,-3.097634,6.612367,-3.665630],[5.656559,9.568146,7.455579,9.022335,3.556276,-1.972988,7.158482],[-6.403399,-9.006319,-4.070815,-5.150259,3.029577,-1.470324,-2.722039],[-3.604690,8.628958,-8.319163,-3.759076,-7.474369,7.687118,3.146637],[-2.105772,1.984644,-0.398236,4.448963,4.761246,-8.968269,9.423009],[-0.576430,0.584722,-6.664501,-8.326293,2.691116,4.824392,-0.089687],[0.411516,-9.922332,-9.820683,6.751330,5.878363,3.473366,-1.780908],[-0.187558,-6.339443,5.490190,3.515588,-3.560470,7.557821,-2.640333],[-8.117743,4.412515,-5.282523,0.570668,5.991640,3.263826,0.706525],[-7.028305,7.280531,0.603769,9.223627,3.756270,-8.249443,3.301120],[5.689381,-8.121708,-5.491944,-4.951417,5.678506,-0.102045,-4.738774],[-5.938216,-3.292510,0.419164,7.932616,-0.584142,-0.111138,5.809953],[9.896527,-4.640000,-5.697322,-7.198040,-5.290018,1.458998,-6.214133],[2.219846,-2.410264,-3.256014,-6.157167,-8.702831,-2.980566,-9.383376],[-8.028393,-0.458487,-6.942512,-3.963949,5.057061,-5.944683,7.145777],[-4.476416,9.042138,-5.074558,6.224368,-6.174747,6.518620,3.731976],[2.790038,-8.158054,2.587868,-2.870940,2.408141,-9.662616,2.611512],[-0.044711,-6.951585,7.641069,-6.060677,8.494045,-4.230511,7.183902],[-0.191580,-0.360448,1.753520,2.676294,5.723430,-7.515339,0.486601],[3.706053,0.197644,1.861967,-7.618534,9.358865,3.175620,-8.165605],[1.798583,9.402950,-4.394481,6.873225,-3.675767,-6.433985,-8.056687],[-7.143222,2.640109,3.346251,5.975025,6.967316,6.292793,0.711291],[9.991241,-3.850369,3.353816,3.866150,7.983626,8.575527,5.252180],[3.779040,3.240148,5.416118,-7.469351,6.983474,-7.162171,2.308887]], dtype = "float32")#candidate|4345|(420, 7)|const|float32
bop_4346 = relay.less_equal(call_4336.astype('bool'), const_4345.astype('bool')) # shape=(420, 7)
bop_4349 = relay.less_equal(call_4337.astype('bool'), const_4345.astype('bool')) # shape=(420, 7)
output = bop_4346
output2 = bop_4349
func_4350 = relay.Function([], output)
mod['func_4350'] = func_4350
mod = relay.transform.InferType()(mod)
output = func_4350()
func_4351 = relay.Function([], output)
mutated_mod['func_4351'] = func_4351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4350_call = mod.get_global_var('func_4350')
func_4351_call = mutated_mod.get_global_var('func_4351')
call_4389 = func_4350_call()
call_4390 = func_4350_call()
var_4399 = relay.var("var_4399", dtype = "bool", shape = (420, 7))#candidate|4399|(420, 7)|var|bool
bop_4400 = relay.logical_xor(call_4389.astype('uint64'), relay.reshape(var_4399.astype('uint64'), relay.shape_of(call_4389))) # shape=(420, 7)
bop_4403 = relay.logical_xor(call_4390.astype('uint64'), relay.reshape(var_4399.astype('uint64'), relay.shape_of(call_4390))) # shape=(420, 7)
output = bop_4400
output2 = bop_4403
func_4415 = relay.Function([var_4399,], output)
mod['func_4415'] = func_4415
mod = relay.transform.InferType()(mod)
mutated_mod['func_4415'] = func_4415
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4416 = relay.var("var_4416", dtype = "bool", shape = (420, 7))#candidate|4416|(420, 7)|var|bool
func_4415_call = mutated_mod.get_global_var('func_4415')
call_4417 = func_4415_call(var_4416)
output = call_4417
func_4418 = relay.Function([var_4416], output)
mutated_mod['func_4418'] = func_4418
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4449 = relay.const([[[-8.506913,-3.473930,-7.197690,-6.163586],[-1.568184,-0.037978,0.258575,-1.433597],[-2.629884,-3.913412,7.864595,-9.259013],[5.809628,-0.716031,9.715103,-4.513755],[9.959393,5.077789,9.772629,4.890416],[7.336383,7.379305,-8.000357,9.376404]],[[6.276292,-2.729538,-1.514291,-4.449572],[5.035838,4.322286,-3.898826,-2.179610],[8.190890,7.571313,4.015977,-8.325075],[2.871771,6.644261,3.157121,-9.099561],[-9.822228,9.846491,1.744466,-7.005138],[-7.517938,7.504559,8.088455,-2.013042]],[[9.627565,-9.226229,4.282644,-4.798921],[-1.321789,-7.312876,-9.532300,-8.053045],[0.429405,-7.364646,7.853442,-5.639862],[-1.169179,-5.584896,2.889653,-4.225791],[-9.806625,-8.298038,5.403515,-4.463401],[-1.466771,2.679949,4.077150,-3.835431]],[[5.256267,-8.972998,9.022052,6.197945],[-2.038050,-3.940087,-0.534672,2.419757],[2.574574,-3.718668,-5.407241,-8.508085],[0.425504,0.591189,1.710310,-6.952014],[-2.373156,6.560396,7.401782,-3.832288],[-7.358128,3.990801,2.591650,9.487502]],[[-9.944814,-9.429785,7.700669,-3.498912],[-9.859096,3.680991,6.139671,3.178469],[-1.839748,8.636897,6.013563,-2.925588],[-0.586972,-9.841336,-3.857740,-9.417259],[-7.148238,7.972399,2.169721,-0.406370],[7.159119,4.170898,8.350163,8.456708]],[[9.772917,5.301224,-1.665462,-5.327891],[-5.310785,-5.568125,2.779079,6.709610],[8.931055,2.060368,-3.140515,8.536239],[6.414371,-2.128238,1.812845,9.427030],[1.525417,0.247962,-8.101039,-4.818490],[-9.484097,2.992387,-0.118939,7.434991]],[[1.928937,-6.136880,9.056870,1.292029],[2.209985,8.427759,8.910385,6.680953],[-2.730678,-3.935450,4.998098,1.999960],[-1.242297,5.829840,7.210392,-2.299931],[5.942732,7.183610,-8.562320,9.865005],[-1.636784,-8.699536,0.562795,-3.379482]],[[-1.036944,-0.891598,-3.287161,-6.272724],[-5.949341,1.729765,-0.025599,-4.457689],[-3.103099,-2.494651,1.210980,-4.798234],[1.375550,9.270862,3.066466,-4.058086],[8.171389,2.680737,-5.530207,-6.084816],[8.830028,-6.755129,6.266767,1.390675]],[[-8.727513,0.675341,5.755356,-7.582710],[-6.637276,-1.054188,4.101072,-6.497340],[9.129434,-2.365505,2.344666,7.772084],[-1.571518,-0.720770,-1.635132,-5.418240],[-1.704305,-0.114120,9.582071,-5.341703],[4.711623,7.548747,9.054557,9.553125]],[[9.530153,-3.800411,-3.542720,8.916147],[3.528613,-4.855349,6.377707,4.384073],[-0.700473,-9.938613,-1.850319,-7.693750],[6.262085,-5.299537,0.761770,7.257636],[-4.143921,3.487847,1.019131,3.068743],[-9.620942,2.193191,-5.849736,2.687045]],[[-0.757332,0.333107,-2.925761,-7.612974],[6.517001,-4.228263,-0.153507,-2.388397],[2.826709,2.640487,-7.368790,-5.931655],[9.912149,4.992187,-6.472795,-5.428439],[-9.688101,8.409044,5.080289,-9.691793],[-7.044779,7.951804,-2.272890,3.955585]],[[4.644089,7.160600,-8.268838,8.269930],[8.333613,3.927627,7.014754,-3.339217],[0.113052,0.876833,-3.228369,-8.096118],[-1.007424,0.545143,9.744783,7.162576],[-5.264271,-0.912107,-5.208607,-2.983612],[-2.358693,0.290694,6.936524,3.985372]],[[4.173362,-1.932973,-5.974097,-6.898822],[-5.817846,-1.044849,4.670675,0.012106],[-3.068371,-2.698569,4.678044,-7.234005],[-3.237871,6.165228,3.168710,1.879312],[4.202432,-8.153784,-8.911409,3.801339],[6.303399,-6.961713,4.954167,-7.417754]],[[5.551640,-5.095373,1.620406,0.051231],[-4.703675,0.239540,8.744833,-6.617152],[-8.277946,7.913930,3.227853,-7.042878],[-1.913157,2.404262,-4.690160,9.486953],[-4.690049,-0.640178,-1.717070,-6.479972],[-4.834136,-4.423750,-5.626285,6.093203]]], dtype = "float64")#candidate|4449|(14, 6, 4)|const|float64
uop_4450 = relay.cos(const_4449.astype('float64')) # shape=(14, 6, 4)
func_363_call = mod.get_global_var('func_363')
func_366_call = mutated_mod.get_global_var('func_366')
var_4463 = relay.var("var_4463", dtype = "int8", shape = (546,))#candidate|4463|(546,)|var|int8
call_4462 = relay.TupleGetItem(func_363_call(relay.reshape(var_4463.astype('int8'), [6, 13, 7]), relay.reshape(var_4463.astype('int8'), [6, 13, 7]), ), 0)
call_4464 = relay.TupleGetItem(func_366_call(relay.reshape(var_4463.astype('int8'), [6, 13, 7]), relay.reshape(var_4463.astype('int8'), [6, 13, 7]), ), 0)
func_3916_call = mod.get_global_var('func_3916')
func_3919_call = mutated_mod.get_global_var('func_3919')
var_4470 = relay.var("var_4470", dtype = "float32", shape = (6720,))#candidate|4470|(6720,)|var|float32
call_4469 = relay.TupleGetItem(func_3916_call(relay.reshape(var_4470.astype('float32'), [420, 16])), 0)
call_4471 = relay.TupleGetItem(func_3919_call(relay.reshape(var_4470.astype('float32'), [420, 16])), 0)
output = relay.Tuple([uop_4450,call_4462,var_4463,call_4469,var_4470,])
output2 = relay.Tuple([uop_4450,call_4464,var_4463,call_4471,var_4470,])
func_4474 = relay.Function([var_4463,var_4470,], output)
mod['func_4474'] = func_4474
mod = relay.transform.InferType()(mod)
var_4475 = relay.var("var_4475", dtype = "int8", shape = (546,))#candidate|4475|(546,)|var|int8
var_4476 = relay.var("var_4476", dtype = "float32", shape = (6720,))#candidate|4476|(6720,)|var|float32
output = func_4474(var_4475,var_4476,)
func_4477 = relay.Function([var_4475,var_4476,], output)
mutated_mod['func_4477'] = func_4477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4517 = relay.var("var_4517", dtype = "int16", shape = (14, 11, 15))#candidate|4517|(14, 11, 15)|var|int16
var_4518 = relay.var("var_4518", dtype = "int16", shape = (14, 11, 15))#candidate|4518|(14, 11, 15)|var|int16
bop_4519 = relay.add(var_4517.astype('int16'), relay.reshape(var_4518.astype('int16'), relay.shape_of(var_4517))) # shape=(14, 11, 15)
func_2091_call = mod.get_global_var('func_2091')
func_2094_call = mutated_mod.get_global_var('func_2094')
const_4528 = relay.const([3.740959,-0.705836,-8.307343,3.639765,-8.320516,-3.879947,8.809618,-1.291262,1.908670,-9.111784,0.042847,1.109564,6.511200,3.846794,4.516029,-6.702145,5.818761,-3.797583,-5.327715,0.576773,-2.663682,4.440797,3.322230,3.832264,-3.084737,-7.448749,-4.250078,-3.837333,-9.923896,2.903570,-8.493222,-1.517472,-5.271085,6.865291,-7.813332,-8.370757,-8.229773,-3.210369,0.286556,-6.601862,-2.507902,-7.756416,6.288832,-9.460126,-0.457355,0.637256,-1.855656,-4.183526,-1.052009,6.076739,-0.790339,5.518430,-4.186429,-9.297085,2.941641,7.292234,-8.969644,5.191153,-0.489987,4.858212,2.652794,1.014581,6.302556,-0.836516,7.095970,-0.776742,4.810841,1.248437,-3.589689,-9.284448,-6.721008,1.615578,2.784681,-6.748564,-2.170068,-6.016747,6.141750,6.591639,5.495340,-1.522678,-2.447851,-2.411221,0.528194,9.997546,-3.503670,1.261026,7.810581,5.672718,9.511599,-1.265020,5.038432,4.016332,-0.961852,6.878026,6.663493,-9.645901,6.057364,2.535979,-8.972533,-3.981591,-8.422961,-7.916110,-8.398286,-1.991667,4.045628,6.613676,7.775991,2.776610,-4.248834,1.785738,6.466398,6.886455,1.705122,0.801641,8.267692,-7.857777,6.409845,6.987361,-7.212471,-6.082620,-3.505495,-5.471334,-5.931444,1.304795,2.056609,-2.610794,-9.655517,0.695118,4.366380,-4.797818,-6.386320,-5.480633,6.848414,9.712235,-4.146972,8.642412,6.470858,-4.306806,-5.342924,-0.864176,1.818929,-0.264413,-3.773964,7.437671,-4.521234,-2.503507,-6.526747,-8.848149,-3.980100,6.901391,4.747457,7.931373,-4.669376,9.229181,7.317759,-4.039610,-2.952006,0.150452,-2.256969,-4.531286,-5.555220,6.342517,-9.300322,-8.445125,3.696784,4.651055,-3.563194,-2.600413,-1.722285,6.034033,3.148288,-8.739549,-9.979786,4.664267,-7.143549,2.847859,-8.022252,9.721035,9.916095,-3.932070,9.582672,2.029793,-6.922179,8.203380,4.638681,8.902649,-5.027924,8.290010,5.228588,-6.168682,-7.630666,-0.877058,-4.053470,9.883786,3.759367,1.341615,9.246845,-0.171893,-3.677550,5.326334,2.547178,-8.756613,-6.117906,-8.064023,-5.226161,-1.630383,8.955604,-5.168764,-6.097893,7.083553,7.602268,5.452750,7.681286,-3.350623,9.983649,-3.466512,-3.658045,-4.773759,-8.647789,-0.389369,0.056571,2.475943,0.417350,1.715830,-5.417511,6.864789,9.822845,-8.887996,8.749112,-6.134413,-3.110368,6.396171,6.322804,-0.424977,-6.888622,3.187185,7.017828,-8.598262,-0.400748,-1.399083,-2.917334,-8.330147,-8.987966,7.977598,5.445593,-5.760447,-8.536105,7.764460,-2.506410,7.939500,-7.919471,-0.964058,1.240029,7.297663,-5.457314,-7.751230,4.357427,-1.654728,-5.950499,4.363007,6.400122,7.249617,3.560350,-9.558240,-6.237044,3.813096,-2.430493,-2.715385,-6.042405,0.341239,-3.398790,-4.979592,-7.529851,8.755061,-5.179242,-3.509933,2.887313,8.931643,-0.383712,-9.699629,0.633466,-0.899418,9.541663,0.992679,-0.877886,1.328984,8.637568,-5.192005,-9.878973,-4.033659,3.197627,7.747680,-4.763156,5.714248,-7.732940,-4.937870,8.450220,5.460783,4.647956,7.342909,0.632068,-2.557828,-7.190960,-8.165676,6.012044,4.700191,1.983572,4.720010,1.391586,8.471322,-4.247658,6.165832,-3.210607,-2.652443,7.228406,8.802822,-6.897509,8.003412,-9.299460,-4.173005,-5.498778,-1.663724,-7.127898,-1.082712,8.201726,6.030579,2.582806,7.543940,3.474848,8.001463,5.959496,1.571225,5.605919,-5.171467,-3.768289,8.920757,-7.476595,-3.178578,6.195153,-7.847315,-4.262572,-2.538051,-3.880480,1.971585,8.055400,7.095168,3.564741,7.258573,0.704354,3.698251,-5.694176,1.178123,-0.548778,5.576278,-2.101628,-9.624854,3.190458,-9.378492,5.628141,2.566978,-9.459941,0.129674,9.822655,-3.575395,5.925249,-3.934786,-6.858658,-4.208703,5.158587,-4.024578,-4.374614,3.526497,3.410830,7.272442,2.442496,-3.439806,1.999888,-4.822317,-0.756208,-8.974707,-1.770475,4.374079,-5.761472,6.019192,3.358393,3.014755,0.194948,2.198929,-6.778798,7.117205,4.060079,6.502409,6.687228,1.739274,8.480324,5.959086,-6.982278,-4.603724,2.802194,-3.157572,-1.079916,-0.755729,-7.648098,-3.346904,-9.321212,1.038293,9.164417,9.166719,-0.692462,-2.852302,-3.114582,8.269508,-4.251588,6.068342,7.731936,-0.834210,2.768021,9.084653,-1.469562,-6.224620,7.641635,-5.294936,-1.578862,-7.658013,-0.555476,-1.513005,-7.297115,8.019078,-5.017817,-1.939871,0.657625,7.765058,7.115670,-1.376320,-6.367095,4.075966,-8.363650,2.412924,3.925709,0.343837,-0.904553,-8.062296,1.101190,-6.829196,-3.109030,-2.449484,3.727803,-0.016689,-7.386839,9.266257,2.857212,5.509556,-8.103056,-0.760950,-5.779633,-8.111103,-3.944832,9.377186,-7.298357,4.140444,6.022035,-2.630330,9.776289,2.679841,-3.072282,-1.661547,5.243888,2.692725,-9.097830,5.397365,-3.520111,-6.302797,-7.364561,-4.104252,5.289819,7.839309,1.535457,8.760796,-3.957317,5.619840,2.654479,-3.540358,4.959910,7.128011,-0.344567,-6.958094,-1.844644,8.985688,-8.283895,3.860470,3.958162,-7.363078,8.011227,0.721800,5.511608,-8.944522,-7.951240,9.301911,-3.448059,-1.291391,-5.021860,1.532822,6.385139,5.100311], dtype = "float64")#candidate|4528|(504,)|const|float64
call_4527 = func_2091_call(relay.reshape(const_4528.astype('float64'), [12, 7, 6]))
call_4529 = func_2091_call(relay.reshape(const_4528.astype('float64'), [12, 7, 6]))
output = relay.Tuple([bop_4519,call_4527,const_4528,])
output2 = relay.Tuple([bop_4519,call_4529,const_4528,])
func_4537 = relay.Function([var_4517,var_4518,], output)
mod['func_4537'] = func_4537
mod = relay.transform.InferType()(mod)
var_4538 = relay.var("var_4538", dtype = "int16", shape = (14, 11, 15))#candidate|4538|(14, 11, 15)|var|int16
var_4539 = relay.var("var_4539", dtype = "int16", shape = (14, 11, 15))#candidate|4539|(14, 11, 15)|var|int16
output = func_4537(var_4538,var_4539,)
func_4540 = relay.Function([var_4538,var_4539,], output)
mutated_mod['func_4540'] = func_4540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mod.get_global_var('func_3948')
func_3950_call = mutated_mod.get_global_var('func_3950')
call_4559 = func_3948_call()
call_4560 = func_3948_call()
func_3653_call = mod.get_global_var('func_3653')
func_3655_call = mutated_mod.get_global_var('func_3655')
const_4564 = relay.const([9,3,9,8,-8,-7,-7,4,-8,1,-10,-1,3,5,8,-1,-3,2,8,7,4,2,8,9,-9,-5,3,10,-6,3,-6,-8,-9,-4,-10,-2,4,6,-9,2,-5,7,-3,-6,-9,-10,5,7,-10,-10,9,-5,-7,-6,7,-6,-5,2,9,6,1,2,-5,2,7,6,-6,-10,-5,3,4,-6,-4,8,10,-9,9,-7,-10,10,10,5,10,-1,2,8,-5,7,-5,-1,7,4,-1,10,9,-1,9,-7,1,-3,3,-9,6,-8,-10,-5,-10,5,-1,5,9,9,1,-5,3,5,1,-6,9,7,-2,-8,-5,-4,-10,-8,-6,-4,-2,-9,-1,5,-8,9,5,-1,-10,9,-4,2,3,-2,7,-6,-7,8,-1,9,3,1,6,5,10,3,-9,7,-7,3,-5,6,5,-1,8,10,-10,9,2,1,-10,-6,-9,10,-2,-1,3,-8,-1,7,-10,1,7,-3,-4,2,1,2,5,-6,-7,3,-4,10,-1,-3,3,1,3,-2,-2,-2,6,-1,-8,-7,7,6,-2,-5,3,-6,-3,8,-2,-5,-7,-5,1,-4,-6,5,-1,-3,5,-6,9,5,-8,9,5,4,3,7,-7,4,-3,5,1,-9,-9,5,6,1,4,3,6,-3,7,6,4,5,10,-3,1,7,4,7,3,3,-10,9,2,-6,4,2,1,-7,-9,-1,-10,-2,10,6,9,-1,6,2,1,-6,9,5,7,-10,10,-9,-8,7,-10,1,2,6,-1,-5,-10,9,1,9,8,6,-1,-10,-6,8,10,5,1,-10,-4,5,8,-1,-10,6,-10,-5,7,-9,-2,1,6,6,9,-8,-10,7,8,6,-10,3,-7,10,-4,9,6,10,5,-9,-9,-7,1,7,-4,5,-9,6,9,-10,-7,-8,8,-4,3,9,-2,3,2,1,4,2,8,-9,-3,9,9,-10,-7,-4,-10,2,-9,5,6,-1,-6,4,-8,1,4,-9,1,-2,8,1,-8,1,-10,1,6,6,5,-6,-5,-6,10,1,-9,-2,-8,-6,-5,-4,-7,1,-8,-5,-7,8,9,10,-9,1,-4,4,5,8,9,7,8,-9,-4,-9,-5,-4,1,4,-5,-8,9,10,-4,-5,2,-8,9,7,4,-6,-5,3,-4,-5,-3,7,7,-5,-8,1,-10,2,-10,5,-7,3,1,9,5,6,1,10,-3,-6,-3,2,-9,5,3,3,10,5,2,-1,-2,-6,10,-8,1,3,2,-9,10,-10,5,7,9,-9,8,9,6,-2,3,9,-5,-10,-10,7,5,4,-3,5,5,-5,5,2,9,-10,-3,6,1,-4,-5,10,-10,-9,-7,7,8,4,3,-7,-7,7,-5,-7,-1,7,2,7,6,-7,8,-5,-5,4,-5,2,-9,2,-6,-10,10,6,-9,-7,6,-9,7,5,-3,2,1,9,-5,-3,10,1,-3,3,7,-8,-4,-9,3,5,-4,-3,10,-2,5,-9,9,6,-6,-5,-10,6,-1,9,3,-9,10,10,6,-9,9,9,-8,1,5,-7,-2,1,1,7,-3,-9,-10,4,-2,8,-3,-9,-1,6,-8,-3,7,-4,-5,10,-5,10,9,1,9,1,6,4,10,-7,3,9,-5,8,-3,-5,-9,-4,-1,10,-6,-5,-10,-4,-8,-1,1,3,-4,-4,-9,-7,-8,-9,-8,10,-9,-10,3,-1,5,4,-5,-1,-7,-8,-6,7,6,4,4,-9,10,-3,-3,5,-8,1,-5,-2,7,-1,5,-8,5,-4,-7,-3,10,9,-10,-1,-3,-2,5,5,6,-9,-3,9,-9,8,-5,1,8,-1,4,7,-6,-10,-4,7,10,-10,-2,-2,5,-7,2,8,-9,8,-2,-3,-5,9,7,-1,1,9,-4,2,-2,10,8,3,6,1,6,4,8,-3,1,-3,7,4,4,3,-7,-9,10,10,-3,3,6,3,3,2,-9,-6,10,2,-8,-1,5,-7,4,-10,-10,-8,-2,-2,-6,1,-1,4,9,-7,-8,-1,8,1,-5,1,-3,4,10,2,-2,3,-10,-7,4,5,2,-6,-3,-4,-7,-6,6,8,7,3,-3,-5,3,1,5,9,1,8,4,2,7,-6,9,-8,-5,6,-7,-10,-2,-10,-8,-2,6,-3,-2,-6,5,1,-5,10,1,-8,6,9,-3,-3,-9,2,-5,-8,1,7,3,2,8,-9,-8,7,5,10,-6,8,7,1,-6,8,-2,-5,-2,4,-9,-9,10,-10,4,4,10,5,4,9,4,7,-4,-2,9,6,-1,-4,-5,-7,-2,-8,4,4,-9,8,-2,-1,9,-1,-3,6,-6,-4,-5,-9,-1,3,-2,3,-10,9,8,-8,-5,-5,8,2,-4,-6,-7,-9,-5,6,-1,-1,4,3,-9,-10,10,5,-9,-5,-3,-5,7,1,-8,9,7,-10,-9,-2,-4,5,10,-5,6,5,2,-2,-3,10,9,1,-1,-9,-2,1,5,-3,7,-5,9,-4,9,-9,-8,-4,-2,7,3,-6,-6,4,-4,-8,4,-7,3,-1,9,5,-3,-6,-1,8,8,-1,-10,10,2,6,1,-9,7,7,2,-3,8,-9,4,-4,-1,1,-2,7,6,9,9,2,-8,3,-8,8,-10,6,6,8,-7,-1,9,2,-3,5,-9,-1,-5,-10,1,-10,4,-4,-5,10,-3,-10,8,8,-3,5,-1,10,1,10,9,-2,7,3,-10,4,3,6,6,-5,8,-10,6,-6,3,8,7,4,6,3,-2,1,-1,-7,2,5,-3,10,8,-6,-1,2,4,9,-3,10,-1,1,8,10,-3,10,1,-3,6,-7,-6,5,5,2,8,5,10,5,7,8,10,4,-5,-10,10,8,-8,-4,8,-3,7,-10,-6,-7,-10,-3,-10,-2,7,8,1,1,-10,2,-2,-8,5,-8,-1,-7,9,-1,-8,3,-7,3,10,7,9,-10,8,-2,4,-5,-6,-7,-2,-3,1,8,-9,-4,-4,-9,-2,-6,8,3,-1,-8,3,-1,2,-7,-9,1,-5,9,7,4,8,2,-1,8,7,8,-3,-5,4,10,-9,3,7,5,9,-5,-9,-3,-6,-2,-8,1,1,6,9,7,6,-2,-2,-7,6,8,-1,-6,1,-9,8,2,-7,-3,4,-4,1,-3,5,-4,4,-6,2,-5,2,3,6,-9,4,9,3,-10,3,9,-5,-9,-6,7,9,-10,6,10,9,-4,3,-2,-9,3,8,-10,-7,-4,-5,1,-3,-6,-6,-8,8,-9,5,7,6,8,6,-6,8,-5,1,1,-7,-2,5,-8,-1,-4,-10,4,5,-9,1,-1,3,2,-4,-7,-1,-3,-8,1,-2,10,8,-8,-8,-1,2,6,9,-1,-2,-3,-9,1,-1,-9,-7,-5,-4,5,1,9,-1,-3,6,3,-4,2,7,3,4,-1,2,6,-10,-8,-1,6,-3,-10,3,-8,4,-2,-3,-8,-8,8,4,6,6,-5,-4,-7,-10,-7,-4,1,2,10,-8,-4,9,6,7,9,7,-2,-7,-9,10,1,8,-4,5,8,4,10,4,-9,10,-6,-4,-10,-9,-9,5,-3,-1,-5,-10,-2,5,-6,-9,-9,4,8,4,-8,-8,-2,-8,6,-1,-10,2,-3,-5,5,5,5,-9,-7,2,8,4,-3,-4,-6,7,-5,-5,7,9,-3,6,-6,-10,10,8,-2,-7,-9,-3,5,8,-1,8,2,-8,4,3,-8,2,-7,-5,5,5,4,-8,9,1,-8,10,6,6,-3,-9,4,-1,4,-1,10,2,5,7,5,-8,6,-4,5,4,1,-8,-7,-7,5,-9,-5,2,-2,-5,-6,-1,-10,-7,-4,-2,-6,-1,1,5,7,4,-6,3,-3,4,-1,2,-9,8,-1,10,3,4,9,-4,1,8,2,7,10,-9,-8,4,-1,1,-5,1,4,3,-3,2,5,-3,-3,-6,-2,6,5,7,4,-6,-1,-8,2,-8,10,-1,2,-2,4,8,3,8,-5,4,5,8,-8,-2,-10,5,2,3,-2,9,-4,-6,10,-7,-8,-4,-10,2,-9,-8,7,-8,-1,-5,7,9,-10,10,-8,4,-5,-3,-1,1,-1,10,2,9,7,4,-7,-5,1,-8,2,9,8,-10,-6,10,2,5,6,-7,9,8,8,4,9,-8,-2,8,-6,-1,-3,-2,-9,-9,3,7,-7,8,8,-3,-2,2,8,5,10,8,5,8,-9,8,-3,1,-1,5,1,-10,9,-8,-2,2,-9,7,10,-7,-2,-10,1,5,2,-5,8,-7,-5,-5,-10,-1,5,2,-3,8,-3,2,-2,9,-5,-9,8,-9,3,-4,-10,9,-4,3,-9,5,-9,-9,4,-5,2,1,9,7,-5,-2,-5,-10,-3,8,-6,-5,10,6,-4,2,-6,-8,-6,-7,-3,3,2,-8,-8,9,1,-1,-2,4,9,-1,-2,9,3,6,5,-5,7,-3,2,-1,8,4,8,-5,8,3,5,8,6,-6,-5,7,6,9,2,3,-1,-9,8,7,1,8,1,-6,9,-9,2,-8,-8,10,-6,-1,1,7,5,7,-5,-2,8,5,-9,-4,10,1,9,-7,4,4,-9,7,7,10,9,-10,1,6,10,10,2,-8,-3,-9,-5,4,-6,-8,5,6,-3,10,-2,3,-6,1,-4,-2,6,-6,6,4,1,6,-3,9,-1,-7,3,6,-5,-7,6,8,1,-2,3,9,-10,-9,9,9,7,4,8,-9,-9,-1,-8,-8,10,7,7,-9,-1,2,-8,-2,6,5,8,-8,2,1,-8,-10,8,-4,-3,2,3,6,4,6,-7,-8,9,-3,5,3,-4,2,10,7,-8,9,-4,5,-6,9,-4,-10,3,5,7,9,-1,-3,6,-8,10,6,-4,-5,-1,-4,3,9,-7,-4,-2,-6,-6,8,1,-6,3,7,4,6,8,2,3,-7,-8,5,-4,5,-9,1,8,3,9,7,-3,1,-4,-3,6,7,1,-4,-2,4,-1,-3,2,2,-7,-7,3,-2,-10,-6,-2,-10,9,-7,-4,-4,8,6,5,-5,7,3,-9], dtype = "uint16")#candidate|4564|(1920,)|const|uint16
call_4563 = relay.TupleGetItem(func_3653_call(relay.reshape(const_4564.astype('uint16'), [1920,])), 0)
call_4565 = relay.TupleGetItem(func_3655_call(relay.reshape(const_4564.astype('uint16'), [1920,])), 0)
func_984_call = mod.get_global_var('func_984')
func_987_call = mutated_mod.get_global_var('func_987')
var_4568 = relay.var("var_4568", dtype = "float64", shape = (2160,))#candidate|4568|(2160,)|var|float64
var_4569 = relay.var("var_4569", dtype = "int64", shape = (1260,))#candidate|4569|(1260,)|var|int64
call_4567 = relay.TupleGetItem(func_984_call(relay.reshape(var_4568.astype('float64'), [9, 15, 16]), relay.reshape(var_4569.astype('int64'), [1260,]), ), 0)
call_4570 = relay.TupleGetItem(func_987_call(relay.reshape(var_4568.astype('float64'), [9, 15, 16]), relay.reshape(var_4569.astype('int64'), [1260,]), ), 0)
func_3653_call = mod.get_global_var('func_3653')
func_3655_call = mutated_mod.get_global_var('func_3655')
call_4576 = relay.TupleGetItem(func_3653_call(relay.reshape(const_4564.astype('uint16'), [1920,])), 0)
call_4577 = relay.TupleGetItem(func_3655_call(relay.reshape(const_4564.astype('uint16'), [1920,])), 0)
func_2714_call = mod.get_global_var('func_2714')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_4585 = relay.TupleGetItem(func_2714_call(relay.reshape(call_4563.astype('int8'), []), relay.reshape(const_4564.astype('uint16'), [8, 240]), ), 6)
call_4586 = relay.TupleGetItem(func_2718_call(relay.reshape(call_4563.astype('int8'), []), relay.reshape(const_4564.astype('uint16'), [8, 240]), ), 6)
output = relay.Tuple([call_4559,call_4563,const_4564,call_4567,var_4568,var_4569,call_4576,call_4585,])
output2 = relay.Tuple([call_4560,call_4565,const_4564,call_4570,var_4568,var_4569,call_4577,call_4586,])
func_4598 = relay.Function([var_4568,var_4569,], output)
mod['func_4598'] = func_4598
mod = relay.transform.InferType()(mod)
mutated_mod['func_4598'] = func_4598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4598_call = mutated_mod.get_global_var('func_4598')
var_4600 = relay.var("var_4600", dtype = "float64", shape = (2160,))#candidate|4600|(2160,)|var|float64
var_4601 = relay.var("var_4601", dtype = "int64", shape = (1260,))#candidate|4601|(1260,)|var|int64
call_4599 = func_4598_call(var_4600,var_4601,)
output = call_4599
func_4602 = relay.Function([var_4600,var_4601,], output)
mutated_mod['func_4602'] = func_4602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3347_call = mod.get_global_var('func_3347')
func_3348_call = mutated_mod.get_global_var('func_3348')
call_4607 = func_3347_call()
call_4608 = func_3347_call()
var_4614 = relay.var("var_4614", dtype = "float32", shape = (420, 8))#candidate|4614|(420, 8)|var|float32
bop_4615 = relay.power(call_4607.astype('float64'), var_4614.astype('float64')) # shape=(420, 8)
bop_4618 = relay.power(call_4608.astype('float64'), var_4614.astype('float64')) # shape=(420, 8)
output = relay.Tuple([bop_4615,])
output2 = relay.Tuple([bop_4618,])
func_4627 = relay.Function([var_4614,], output)
mod['func_4627'] = func_4627
mod = relay.transform.InferType()(mod)
mutated_mod['func_4627'] = func_4627
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4628 = relay.var("var_4628", dtype = "float32", shape = (420, 8))#candidate|4628|(420, 8)|var|float32
func_4627_call = mutated_mod.get_global_var('func_4627')
call_4629 = func_4627_call(var_4628)
output = call_4629
func_4630 = relay.Function([var_4628], output)
mutated_mod['func_4630'] = func_4630
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4641 = relay.var("var_4641", dtype = "float64", shape = (3, 6, 7))#candidate|4641|(3, 6, 7)|var|float64
uop_4642 = relay.exp(var_4641.astype('float64')) # shape=(3, 6, 7)
var_4644 = relay.var("var_4644", dtype = "float64", shape = (3, 6, 7))#candidate|4644|(3, 6, 7)|var|float64
bop_4645 = relay.not_equal(uop_4642.astype('bool'), relay.reshape(var_4644.astype('bool'), relay.shape_of(uop_4642))) # shape=(3, 6, 7)
output = relay.Tuple([bop_4645,])
output2 = relay.Tuple([bop_4645,])
func_4651 = relay.Function([var_4641,var_4644,], output)
mod['func_4651'] = func_4651
mod = relay.transform.InferType()(mod)
mutated_mod['func_4651'] = func_4651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4651_call = mutated_mod.get_global_var('func_4651')
var_4653 = relay.var("var_4653", dtype = "float64", shape = (3, 6, 7))#candidate|4653|(3, 6, 7)|var|float64
var_4654 = relay.var("var_4654", dtype = "float64", shape = (3, 6, 7))#candidate|4654|(3, 6, 7)|var|float64
call_4652 = func_4651_call(var_4653,var_4654,)
output = call_4652
func_4655 = relay.Function([var_4653,var_4654,], output)
mutated_mod['func_4655'] = func_4655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4661 = relay.var("var_4661", dtype = "float32", shape = (6, 6, 16))#candidate|4661|(6, 6, 16)|var|float32
uop_4662 = relay.cosh(var_4661.astype('float32')) # shape=(6, 6, 16)
output = relay.Tuple([uop_4662,])
output2 = relay.Tuple([uop_4662,])
func_4674 = relay.Function([var_4661,], output)
mod['func_4674'] = func_4674
mod = relay.transform.InferType()(mod)
mutated_mod['func_4674'] = func_4674
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4675 = relay.var("var_4675", dtype = "float32", shape = (6, 6, 16))#candidate|4675|(6, 6, 16)|var|float32
func_4674_call = mutated_mod.get_global_var('func_4674')
call_4676 = func_4674_call(var_4675)
output = call_4676
func_4677 = relay.Function([var_4675], output)
mutated_mod['func_4677'] = func_4677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3248_call = mod.get_global_var('func_3248')
func_3249_call = mutated_mod.get_global_var('func_3249')
call_4710 = relay.TupleGetItem(func_3248_call(), 1)
call_4711 = relay.TupleGetItem(func_3249_call(), 1)
output = relay.Tuple([call_4710,])
output2 = relay.Tuple([call_4711,])
func_4723 = relay.Function([], output)
mod['func_4723'] = func_4723
mod = relay.transform.InferType()(mod)
output = func_4723()
func_4724 = relay.Function([], output)
mutated_mod['func_4724'] = func_4724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3709_call = mod.get_global_var('func_3709')
func_3711_call = mutated_mod.get_global_var('func_3711')
call_4730 = relay.TupleGetItem(func_3709_call(), 0)
call_4731 = relay.TupleGetItem(func_3711_call(), 0)
func_984_call = mod.get_global_var('func_984')
func_987_call = mutated_mod.get_global_var('func_987')
const_4735 = relay.const([5.176573,6.675855,1.861878,7.589900,-5.390085,-6.999557,-9.489562,9.194927,2.063541,3.766695,-2.092729,5.682648,-3.917421,-6.527393,7.180631,-1.551308,-6.082459,3.803673,-4.652477,-4.883150,8.665932,-5.447661,7.546811,-6.254455,2.319323,-7.968630,6.631309,-0.296125,-3.512584,-4.129645,-7.741363,-6.123233,-2.472948,-0.255474,2.054325,-5.573062,-4.587086,-8.981151,-6.024124,-5.811854,-0.154491,9.616061,-3.214884,0.018490,-9.608612,4.806026,9.564250,8.785691,2.832506,-0.431584,-4.937482,5.479134,8.832478,3.663968,-0.008132,0.454323,-2.022597,1.566973,-1.894590,4.227806,-8.056062,9.025593,7.040891,8.701098,-0.074073,0.831285,-9.842252,2.217346,-6.378458,7.700010,2.916079,-9.805991,1.707539,-8.703992,-5.434083,5.112781,-3.859718,-9.924711,6.362448,-8.841224,6.768000,2.174163,-9.372559,0.689682,2.441348,-0.213402,1.185595,-9.115896,-0.251138,-7.112585,3.417285,3.265772,-2.456930,3.504304,0.946642,-0.221356,5.038503,3.292481,-3.885008,-4.082778,1.491147,-9.686956,4.339925,-0.862654,-4.244450,7.131268,-8.100974,5.580565,-6.291106,-9.351561,9.583083,7.778714,-0.280107,-9.463550,5.130037,-6.454841,8.598008,-6.293006,-2.661674,-2.730257,8.109786,-2.852531,-5.957927,0.794036,-8.906743,8.808627,-7.835674,-1.529485,1.650919,8.607326,8.502632,0.411195,9.314305,-2.627008,-8.953240,-8.504768,-6.855281,3.718285,-8.794855,4.195502,6.586119,-0.055437,7.167255,-1.906584,-6.897984,-3.714713,-6.308539,-5.231883,1.178015,8.494007,-5.243188,1.514957,-2.534365,5.456050,7.059947,7.922123,6.321577,-6.472288,-2.711541,2.396297,5.665825,-6.332056,-3.065368,9.491801,9.243058,7.697366,-4.638507,-6.435359,-4.769292,3.386423,9.643691,-6.652813,6.995793,5.263317,7.672321,-6.483271,-8.164927,-7.022923,5.912085,-0.265677,-8.544493,-4.059501,7.383804,8.437609,9.362206,2.137296,4.813318,8.372661,3.017558,-5.983926,-6.632879,6.695056,-5.177846,6.517247,7.753970,-5.859209,9.437863,-2.048097,-3.334128,-8.067269,-4.745355,-0.695668,4.899118,-5.739900,-6.430103,-4.127780,0.817370,-5.184945,0.014519,-1.314598,7.028518,7.708118,4.356497,8.949733,4.963379,0.771316,-1.855612,-6.835599,-0.293555,-0.088321,6.438045,0.415500,-9.404434,-0.461629,2.660626,-4.707928,-4.352608,0.847755,1.101377,9.990253,6.786079,-3.721818,-3.648572,2.244258,-2.876861,1.399083,-2.199347,-3.946014,-4.783603,7.718584,9.053607,3.956347,1.941578,-7.106815,7.767836,8.859508,-6.149977,-9.133171,-3.391198,1.530296,9.176089,1.721354,2.732995,-7.554749,-9.305538,2.508001,2.728028,6.316666,-4.532973,8.584295,4.517113,-6.113578,1.957952,-6.430001,-9.699717,-0.166848,4.003396,-3.474070,8.256689,-2.600142,-6.714748,-8.392961,-8.187554,-4.438342,8.179265,7.594377,-1.096327,-4.095644,-0.049020,-6.828620,3.081871,8.792093,-7.677681,5.205848,-3.181026,9.313148,-7.296769,9.193795,-0.296238,9.980744,7.844105,-9.066637,-3.282888,0.580561,-4.151605,4.989930,-1.615712,-7.240209,-0.610202,6.845422,7.307501,7.368577,-4.084331,2.663666,-1.338323,-5.979165,5.244195,-7.577985,4.082649,-0.851175,7.832192,8.933237,-3.466883,-4.023220,-9.417120,-4.180255,-4.889277,3.056226,-2.220213,2.981543,8.609751,-2.191627,7.620415,-7.710035,0.046254,-5.899811,-4.625380,-4.912426,3.797251,-9.583193,-4.264126,6.060271,-6.784036,9.006366,4.582078,-1.475211,-3.161423,3.829735,3.568189,9.978176,2.693472,5.967568,7.031291,-7.185514,-1.103705,-8.442216,9.887155,4.544503,-5.224423,-3.492617,-1.671355,-0.259096,-4.331632,-0.810832,4.591147,-8.381772,0.740624,8.857622,5.917005,4.042770,-7.026555,3.333332,8.501257,3.755969,6.367952,-4.296058,-5.125365,5.357881,-5.505965,-0.148963,3.596812,-3.828298,-4.238367,2.729989,-3.171063,1.486925,6.950893,-8.967627,-4.128937,-0.504562,-3.934440,4.139674,-3.001974,5.067162,-9.441175,-8.539955,-6.852642,-1.004775,-2.775194,-9.056327,-2.213651,2.373677,-0.142575,-9.431067,-6.796235,3.115989,6.981131,3.978963,6.458995,7.240544,3.154839,3.460174,-3.871322,-4.839658,8.941175,0.143103,1.584221,6.593149,2.722091,-8.319274,6.564845,-2.778887,-0.414090,-5.871324,-3.520314,5.146908,7.927325,0.761014,-0.607034,0.936815,-5.581058,4.603153,0.042160,-5.072153,-5.942537,-5.359020,-2.979406,7.910498,4.682144,-0.617814,6.443433,0.177746,-1.208720,-9.622252,-9.958443,-8.917786,0.390977,-3.225576,1.368870,9.135838,7.147972,8.014260,-4.647322,-4.905022,-3.111689,3.256579,-6.871432,-5.369524,0.387913,6.721723,-9.259849,-8.204036,5.259892,5.452230,0.785229,4.447341,-6.153323,-2.282467,0.319945,-3.647061,2.862559,9.701542,-1.467967,-5.818359,-9.489085,-2.858073,-2.486555,-0.637971,7.189279,-4.377807,-9.089627,-4.684134,-1.014552,9.574881,8.677210,6.031591,6.447024,7.485875,-8.956257,7.308488,3.348714,-6.434945,0.627182,-3.774637,-0.878311,7.844084,-2.372162,5.090480,7.301920,-8.127067,7.742200,3.618922,-4.920262,-2.768299,8.588852,1.994945,1.067912,-2.923049,6.195971,-8.628315,2.474128,-8.937599,3.040824,-9.761919,8.612260,7.103153,-9.454728,1.028704,5.832160,2.885387,-4.149557,-3.299308,-1.019731,-1.713070,8.030689,2.402544,-8.312517,-1.583073,-9.316901,-0.293221,0.149153,-4.127731,4.417726,-8.039337,7.495894,2.601618,-3.149305,-0.734080,-0.743647,-9.386665,4.469641,-1.273412,-3.717686,2.101616,9.691826,-1.571267,2.030798,-9.180378,-4.507179,-7.221398,-9.464684,0.168871,5.406464,-9.743197,-0.466149,5.725220,-8.923035,-2.470502,-6.723421,7.145010,2.527723,-3.826944,-2.005455,2.419530,5.490201,2.794722,3.194389,-7.847206,-0.758616,-5.617587,-3.050235,-8.687542,5.393978,4.522232,-0.659731,1.791645,-0.428157,-2.118707,-7.288051,1.179835,2.803745,-2.530443,-4.924529,7.015034,6.248822,8.133652,7.661689,-9.980306,-0.048155,-2.187872,2.536080,5.129392,7.262789,-4.172092,6.022955,1.535897,-4.038847,-2.927863,4.926292,9.041300,7.647827,-5.858767,-1.468586,-0.966020,-8.058814,7.533329,-0.111454,0.988029,6.828091,-0.562222,3.486038,7.756799,0.135189,-5.089063,-4.568607,9.492977,6.778385,-4.867197,-7.230466,-9.618142,-7.177414,-7.886337,-3.758253,-0.373829,-5.416775,1.885795,9.936120,6.552226,-5.284987,7.072817,-8.892110,-2.393902,-7.742546,4.543002,9.987804,0.803581,-9.447137,4.215081,1.649217,-9.531261,-0.623120,7.745934,-5.170949,-8.355781,4.784104,3.426023,-4.478661,9.423864,5.584940,0.812861,-3.671021,-6.611758,9.066192,-5.208545,0.060333,-9.081189,-4.775751,8.549971,-8.207130,4.372238,2.072044,7.969522,-9.145341,-6.435926,-0.914699,7.748582,-8.175798,4.648007,0.100935,-0.516439,-4.775777,-5.859862,6.818051,8.570529,4.118448,4.619274,-3.190198,-0.827943,0.614609,-4.066741,-0.043475,-8.400883,5.309686,-1.521595,6.317721,0.431826,7.899417,-7.778312,-2.735633,6.793273,-4.479696,-7.512674,7.525717,-3.098017,-7.791154,-3.755444,-7.285675,1.166957,-6.112809,-2.167170,1.865675,8.331726,5.315239,4.329835,-4.261315,7.341248,2.648692,3.666422,-3.747672,1.070294,-6.011411,7.071070,-7.615018,-3.043481,2.726783,8.628988,-8.833609,7.116296,-0.236876,0.938003,9.444438,-8.984048,8.094658,-6.365267,2.562045,-4.911751,9.079757,-4.605664,-5.545231,1.291517,3.392265,-3.364515,2.702719,5.346562,-6.419823,-8.802357,7.805157,-6.920782,-9.623653,-6.001909,-7.972694,7.250179,-7.607093,-3.774894,-5.001518,-7.740563,-3.347195,-8.711405,7.421782,9.143142,-9.792242,0.102183,-9.545701,-8.048808,-5.582343,-1.760427,3.237004,4.189796,6.306363,9.225504,4.603334,9.983611,-2.428897,5.309594,4.812070,-1.875835,6.690550,0.352799,3.370983,-2.530822,-7.276321,1.626062,8.573321,-6.013784,-0.814974,-5.471416,5.394999,1.438944,7.888115,9.532199,9.683503,1.918256,-2.533344,7.110907,-8.365904,4.617129,-2.820403,0.712272,0.736361,2.732849,5.089804,1.147400,6.800290,-3.432131,-2.225349,-6.882012,9.146383,-6.012351,-9.279969,-6.612424,9.578168,-6.475782,-6.272752,7.697695,8.594171,3.834897,0.769758,7.729315,4.538553,8.299464,-8.178233,7.981332,3.956962,0.578556,1.836073,4.420148,9.662841,6.725364,6.146387,-5.903821,0.706973,8.775154,-8.973772,8.562301,-0.814806,9.284438,-7.312867,1.552667,-2.328973,-5.237455,-3.293456,2.007889,6.847348,7.446489,2.937263,2.763416,3.078171,3.157265,6.128085,7.857476,-7.956451,-5.747991,3.883687,-0.110308,-7.351904,-4.064273,-8.949883,6.422607,-4.536726,-0.001354,-6.124606,-4.978895,-1.886765,3.600036,-1.417640,-5.776226,-7.521186,-8.611527,-5.177662,5.648819,4.924286,1.139364,9.211202,8.146430,7.487812,-8.398199,8.809915,2.653900,-5.434370,8.591505,2.501609,8.936363,8.045193,8.539699,7.327710,-4.333088,-9.572037,-5.997797,-6.796934,9.671352,-6.869727,6.364927,-4.226134,0.095159,-9.767685,-2.575027,-3.293486,0.471332,3.051206,7.647604,8.765542,1.622680,6.545450,-1.409227,0.515487,7.286953,1.190417,9.699621,0.987600,-7.374549,9.921269,8.575735,5.814806,4.212886,-0.335239,5.929428,5.169868,2.819234,-1.313429,-0.395376,-9.323419,0.924423,8.014320,3.598095,-8.463174,-4.480012,-1.877821,5.405188,-6.379509,-8.779640,-3.317152,-5.924834,-5.710967,-9.140546,0.778570,-0.214673,2.179263,8.115197,-6.142432,7.150091,8.189492,6.355100,-1.169337,3.254796,6.556853,9.096243,1.740953,0.346353,8.154397,-7.385184,6.176515,-0.656352,2.538858,4.313061,4.566721,-9.567274,-3.140367,-5.092715,-9.322480,7.708123,-7.462136,1.749203,-8.400859,0.292357,6.214904,8.010742,2.942181,7.604207,4.185959,-0.530543,9.616846,5.907545,-5.672951,-5.680709,1.331612,7.342689,-5.319847,5.364999,6.086744,9.890619,9.837625,3.075643,-6.743090,8.375271,4.992976,-3.505535,-9.803078,-6.643701,-9.958038,9.272825,-8.237719,4.125187,-4.523277,-0.134524,4.343648,-9.653097,-5.091243,9.900143,-8.856482,-2.203864,0.988700,-6.278220,7.503701,-8.999055,-8.644889,5.725429,-6.048190,3.257045,-3.609434,7.028843,4.624001,-1.076619,8.638605,9.959980,-1.781029,-5.873524,-8.529316,7.258268,0.989840,8.509630,9.207557,2.080316,6.116667,-6.321577,-5.070869,-8.763782,6.171758,7.220515,-9.539861,-3.132158,-8.692031,-5.623218,-9.883998,-2.734557,-1.044423,3.469759,6.455465,6.823721,6.566541,-5.872471,8.498698,-0.921502,6.136267,-0.181905,-5.807679,-7.278648,8.413322,0.306224,-7.708697,6.353604,-2.755633,-7.861222,1.742052,-8.354615,-9.291180,-0.750318,2.404981,-0.914371,-0.272375,9.965244,-7.539475,-7.711067,-2.629612,1.686200,4.733792,8.846175,1.748781,5.511392,-5.621712,1.609496,-3.435891,-0.320345,-8.278570,-3.039356,7.847716,6.348002,6.895525,9.519764,-5.603715,-1.019549,-3.088324,1.657989,-3.854890,-6.491182,-7.630363,9.849879,-8.089322,5.037201,-9.915070,7.117968,2.675301,6.238795,-5.595108,-7.579272,7.359296,4.875588,8.949741,3.694120,6.652617,-3.870324,-1.311496,0.381690,8.175479,3.904317,-5.235740,-9.606374,-5.748802,0.665507,-6.616519,3.136313,-1.528672,9.902573,8.382442,7.968750,0.066250,-3.793522,8.530308,-2.798621,-5.656256,1.043297,-9.074224,-4.601874,0.179700,-9.023778,-6.863338,-5.134444,-1.411417,-1.030398,-5.664774,-5.639701,8.084032,6.594045,-3.255226,3.076508,-8.099481,-9.473400,-3.258260,9.670396,-0.113110,-9.886924,2.286479,6.947818,-1.843022,5.856844,-5.054058,-9.588511,-4.146330,-9.955445,5.913477,-6.080492,-7.297629,5.253804,3.839033,0.106420,-9.547965,-0.853066,-5.855648,2.249186,9.850810,0.574406,-4.279274,2.500079,-8.234935,-2.001651,-4.594005,7.393370,5.511114,6.745205,4.667082,-2.434934,-0.933427,1.539020,-4.365217,-7.337090,0.732328,3.212137,9.495179,-5.332400,0.482712,-6.344796,8.308174,-3.471731,-7.465934,-7.133919,-9.134898,0.150520,4.382233,3.127345,4.072219,-7.538541,-5.250343,-3.859071,-5.280774,5.293928,3.084110,8.992068,5.552747,2.891323,-4.543216,9.603533,-1.588872,2.625107,2.995518,-6.078389,-0.422327,9.060480,-8.849246,5.367629,-7.222598,-7.598979,-5.034624,4.652817,-4.850969,7.585860,-6.047015,5.850141,4.172629,-4.272826,-5.524618,7.269744,2.409882,4.047570,-9.759134,5.793733,5.342897,4.044539,3.879296,9.966568,0.564503,-3.613913,1.424523,7.607563,8.529440,6.390302,-4.373926,-6.723794,4.823910,5.197128,-9.012021,-3.558177,4.977784,3.002483,-0.647348,-0.975539,2.003447,9.277714,-1.781715,5.531623,2.822808,8.549002,4.849249,2.745076,0.061044,8.759297,2.827099,2.421554,4.989070,-3.296090,2.279005,9.132426,9.941496,7.595683,8.728112,4.317636,2.484225,-5.204445,3.484258,3.556396,7.422629,-8.388257,5.048080,1.115168,2.409141,-3.021541,-8.466663,3.315526,2.168608,3.836850,-3.325900,9.831409,-9.301364,-5.944521,1.055277,-5.394201,-0.928225,-6.960957,4.941623,-5.327131,2.627890,7.983959,8.096186,9.575641,-7.062687,2.524271,-3.883935,-7.534724,0.266634,-2.619965,6.957488,4.992799,7.342720,4.239642,9.085345,3.022005,-4.001779,-7.048308,-1.104604,-3.549923,-6.955943,9.894663,-6.813899,1.453040,-3.390779,6.331009,6.322435,-6.798861,-1.000020,5.376257,9.925805,-6.190243,4.791320,5.259423,-7.375620,-6.805293,-3.406285,2.329417,-7.435452,-2.957148,-6.183084,-7.678795,-9.266789,0.884397,-1.433814,-0.216090,7.983866,0.754557,8.383180,-6.183642,5.876164,-5.075998,-1.101591,-6.899260,0.752778,-7.697320,-6.254539,3.557138,2.819405,6.521496,6.302428,0.457503,-1.676000,9.883502,-0.318214,-8.524022,7.302455,6.296827,-4.401077,-8.987021,-9.500174,-4.096517,7.708152,4.858927,-9.064911,-2.993310,-9.121218,-4.950680,-1.491132,-7.234790,-4.385249,-3.236320,6.362529,7.768694,-6.921503,7.588344,-9.023708,4.185907,0.425618,-6.328722,-4.752449,4.742144,6.361380,3.160853,-9.382222,-9.517376,-6.377458,-8.137413,-2.781750,-3.996197,9.368255,9.649404,2.330267,6.590983,9.358170,-5.614537,-0.708218,-0.873028,2.926741,9.137250,6.555555,-1.307147,7.883253,8.654561,9.972498,-4.660562,-8.783687,-9.395335,-3.056213,-5.338997,-1.838114,9.570359,3.708698,-2.697597,-1.603448,-6.670651,0.788313,3.630505,4.579334,-7.219945,-1.918255,7.309343,-0.809033,-0.054311,6.354286,-9.801202,0.474427,-3.715039,3.060119,-0.949260,-3.953596,2.066147,0.040443,-3.368913,4.746979,7.846273,4.588083,-9.892136,2.549217,1.053001,-9.279561,-6.407316,9.793614,-8.748024,7.652142,-2.340154,0.465815,4.339047,7.167929,5.596648,-8.865393,-5.335369,7.249922,9.655997,-0.903093,0.545167,-4.486211,-6.825169,-6.323280,-8.605516,3.499595,1.744411,-7.443558,-6.551163,7.243131,-3.466639,-0.803743,9.821780,-9.240418,-8.915921,5.992093,8.203063,6.254168,-9.146323,-5.400552,1.196140,1.616044,-3.014374,5.157743,5.222699,-5.974116,-2.062654,0.089568,-1.676775,-4.190835,-5.049418,-4.195362,0.641597,9.912841,6.136536,-2.152214,-6.798388,5.380703,9.897473,2.421005,5.690863,7.028716,-9.848859,-2.757210,-1.508667,-5.314266,-4.474609,-1.911798,-5.728780,9.118449,8.180344,1.480434,-3.954061,-9.777079,5.376631,-1.037971,0.715615,9.788609,-5.968862,-3.531895,-0.971034,7.660718,5.876320,1.418273,-5.913081,3.240902,-9.950003,3.753735,2.185226,5.207650,3.688026,-6.836503,3.346068,-8.751952,8.216449,-4.993673,4.802005,-4.247912,2.579636,2.112427,1.853136,3.553204,8.611136,-3.782526,-8.846501,3.771789,0.648221,-5.185590,8.705781,3.925982,7.477560,5.075103,1.201841,5.374996,2.578888,-8.777492,7.222480,-7.052118,-8.715173,5.288109,-0.215736,-7.037903,-5.553547,-8.846522,-7.747453,-7.800060,0.560437,-4.641685,-3.056632,5.438910,-0.011386,-8.018379,2.866856,-6.768892,9.815696,-8.503616,2.094832,4.875974,0.403061,7.897995,6.922059,5.589271,6.229705,-9.005815,9.191339,9.409104,1.378202,9.094309,8.141298,2.084367,-2.645355,-1.268698,-2.391657,4.478144,-2.268450,3.070366,8.237854,-9.976420,5.984866,-3.710827,3.829192,-6.084479,3.712953,5.128987,-2.397845,3.660807,8.834283,-6.474687,8.757179,2.474439,-6.283997,-1.959635,-3.787032,4.552488,8.944702,-6.993529,9.904367,8.959071,8.635418,8.552363,4.978794,-1.059152,0.883392,4.298462,-9.794421,-0.830999,2.867386,-5.197876,0.105995,4.446167,8.438548,6.889686,8.249782,9.479139,-6.670496,-5.836362,9.988399,-3.896753,2.468986,-0.760380,-6.995287,-3.451937,6.602055,9.505406,-8.301892,8.061626,2.464582,2.184094,9.526023,3.753008,7.714854,-6.813134,-6.363873,8.398412,-8.129528,9.302155,-9.765174,-4.241708,5.689366,7.451029,9.601942,1.011417,4.225784,5.788903,-8.201689,-4.049662,-9.710988,-8.156948,5.745484,-6.657184,1.059430,2.571008,4.178863,3.857960,6.738291,9.240631,1.622951,2.453576,5.187883,-3.059558,8.793469,0.709711,0.983270,-7.535765,-3.318388,-0.290632,0.592116,9.757747,8.267229,8.522963,0.752285,5.828627,5.487525,-1.690766,4.018084,-8.326300,9.648731,-4.411737,-6.534365,-3.785487,1.555861,-7.392636,-9.505514,-3.960357,6.089680,-7.789771,-5.821265,7.888585,1.489506,-2.606000,-0.141090,7.612856,-0.721892,-1.045841,9.354992,6.653267,6.520414,9.411129,-1.706422,-4.156850,2.745918,-5.066669,-4.627666,1.229657,1.427388,5.691644,4.814841,-8.836926,-0.711814,-1.728778,7.771491,1.114213,9.928882,-2.411529,-5.236545,9.861491,9.830340,4.707215,-5.725878,4.067700,-5.225606,2.220426,-8.365151,3.920684,0.055964,-8.961240,-0.580960,3.552069,-2.767105,4.563916,-6.706497,-1.343898,-9.163736,-3.950414,-9.616617,5.848392,-3.779903,-2.201691,-5.817897,8.352066,4.143462,-8.457065,2.603397,-5.559378,4.335430,-6.388238,-2.544731,0.434794,-6.927886,9.882973,-1.763122,4.259199,-4.827656,6.337286,-8.344769,-0.151119,-7.161172,1.845192,-4.548063,3.634852,8.447466,-7.108733,-4.793553,-8.335611,2.051426,0.669533,-6.900978,-1.787247,1.904441,5.244195,-9.617087,4.499369,-6.697987,4.919166,-2.527859,-5.900785,-7.870537,-2.550379,2.704801,-8.473377,-2.291542,-0.844217,-7.715256,0.961746,-3.934900,1.933538,-9.251405,3.212386,6.116992,-7.125869,2.183264,9.238057,5.957035,-7.322987,5.806297,9.944328,-1.496636,-7.510146,-8.463930,-3.393207,6.886637,8.373853,2.962607,-9.194126,8.192747,-1.682062,-4.187831,7.812806,3.214794,-9.148682,-5.586893,1.051631,9.598897,2.132476,3.403510,-2.863950,-0.565315,6.138472,-4.441343,-6.423563,-1.745468,-6.123662,5.248738,-4.734832,1.186877,4.686769,-7.198875,-2.072067,-0.783050,2.452996,-9.023666,-3.472280,6.876275,-7.199949,-1.624076,-4.238534,9.118562,3.546651,-3.966405,-6.851996,-9.681487,3.271070,-4.918984,-6.272953,9.322270,-0.145163,7.097033,-6.848528,-0.249344,-5.699447,-5.075512,0.274494,8.751982,-8.198071,-6.231485,6.148557,-6.253424,4.718445,-3.899871,6.709520,6.611013,0.570757,6.283003,-0.787172,-4.053914,-6.473567,6.807267,0.343417,-6.787125,-9.834375,-3.812430,1.588239,-6.555992,2.394376,-4.223287,-6.862805,-8.873085,-2.141415,-8.315284,-3.230680,6.715426,7.904462,-1.759678,7.162306,-4.610295,-9.987389,7.427538,7.144363,-0.100653,-0.319922,1.204838,6.168429,8.435860,5.655621,-2.984381,-3.137597,-1.583854,-9.358765,-4.451858,0.476526,9.002231,7.526960,7.748443,-4.879915,6.300487,-9.509174,1.583184,9.906155,1.277269,-2.657347,-7.286216,2.413171,-8.765427,2.886460,2.621650,3.660914,-2.270853,9.737310,5.774784,-9.788796,4.737154,-4.943468,-7.821987,1.248433,-4.595328,0.085799,-2.695319,-2.810909,-2.450414,-6.011490,-9.037092,-4.198182,-0.085232,4.379047,4.470098,2.366089,-5.903608,0.606098,9.722488,6.178036,1.496344,-7.080426,0.943934,-2.137458,-2.916150,-2.883204,7.376407,-9.727338,-8.193899,2.184209,3.668552,-8.805390,-4.881466,-1.239800,-8.719710,-7.386136,-7.466134,-9.795437,3.048743,6.440437,3.347280,-3.787740,-4.035173,-7.920144,-3.550996,-9.605295,-4.696080,-8.403104,-7.366243,-1.836315,-6.430289,-7.077938,5.798245,-0.650977,-4.814199,7.849606,2.940966,-3.804906,-5.903451,3.950967,-5.742101,-0.043810,-0.609025,-1.070792,6.503204,-5.968239,2.983373,-9.771894,1.701891,6.224878,-3.013585,6.777423,-1.090067,2.999907,-8.770644,-5.784758,-0.081971,-0.111096,7.217684,5.128271,0.325915,-5.765307,7.374601,-3.516494,0.322346,-2.128350,-8.394861,-8.235606,0.326693,4.387903,-4.374887,-0.969088,-8.081241,9.760880,6.874716,-0.946966,-6.363632,3.684141,2.202595,-8.383173,4.836479,-7.600700,-7.624871,4.774427,-4.831726,-4.338607,-7.711961,0.884080,8.813269,-8.450324,3.398675,5.329748,2.147192,5.846901,-4.492842,7.262872,-6.827857,7.184401,-9.006013,-4.341909,4.315235,5.515838,-6.998122,-2.902416,-3.066486,-3.291720,5.545621,8.174728,0.612126,2.067127,8.733198,0.970681,-8.833841,-5.021267,6.704213,0.304369,6.084334,-6.727366,6.740660,9.131371,9.846000,-1.639419,-3.900800,9.035247,-0.014188,9.367497,-4.596423,-9.391229,-8.722473,3.242494,5.256107,-8.512056,-1.578246,-5.134793,-8.810973,6.891042,-2.281059,-7.914398,5.926039,-9.869120,0.367885,1.197311,-4.506940,-9.020077,9.782106,3.247061,4.599519,3.698985,-2.827784,3.040560,-5.005415,1.219967,-5.281879,0.319528,4.497493,-8.406568,6.591146,-0.043072,7.279884,-4.208184,0.817665,5.834020,-6.046614,-4.936932,3.779545,5.892787,-1.619054,-7.117845,-7.012310,-6.210854,4.063030,-8.922575,1.480360,-5.573540,-3.633532,9.700359,-6.674852,-7.650339,5.197104,-9.179269,-2.972067,-0.731550,-5.767938,-3.996108,-6.366119,-7.864670,9.550335,4.614924,-9.170318,3.073885,-6.362949,-3.606090,6.980235,6.023865,0.805830,4.742043,0.776528,-2.649617,-2.687729,2.552292,1.530254,-6.005751,-0.666880,3.241503,-0.272438,1.016697,9.354834,8.261013,-4.823036,-6.903986,-8.498727,-7.256362,4.142301,8.296785,4.073166,0.200534,7.399215,8.659844,5.098163,-9.413076,2.898667,-7.272498,6.566253,2.184149,4.038387,0.711683,-6.836757], dtype = "float64")#candidate|4735|(2160,)|const|float64
const_4736 = relay.const([[-5,3,-9,1,10,-2,8,-8,-5,10,-5,10,-4,1],[-9,4,-8,-3,-1,-4,-10,9,4,-6,8,4,2,5],[-1,2,9,-3,-2,-5,3,-3,-8,2,2,2,3,-3],[-9,4,5,1,-1,-3,3,5,-9,-10,5,-10,1,6],[7,-2,10,-6,4,-8,-2,-8,-7,2,3,5,-5,4],[-7,1,-2,10,-8,6,4,7,-3,2,9,-7,7,2],[-7,7,9,-9,8,2,6,8,-9,9,-9,3,-4,-2],[-10,-2,-1,10,4,10,9,-7,-9,8,-9,2,-7,-8],[3,3,-4,-10,-3,-4,2,-10,-5,7,-4,-2,1,3],[-8,10,-10,-7,-7,1,1,-6,7,-3,4,6,6,-3],[3,6,6,5,6,-4,2,2,1,4,5,2,-1,9],[6,6,-7,-3,6,-1,-3,-7,8,-6,-9,-9,-2,-8],[-7,10,-9,7,7,-7,9,7,-2,-6,-4,-1,7,-9],[-9,1,4,-1,6,-6,-7,7,-2,-9,7,-7,2,-5],[-8,-5,1,-4,7,-7,3,-7,-10,-10,7,9,7,-4],[-5,-7,3,-9,7,-1,-9,7,-6,4,-9,8,-4,-9],[-2,1,1,-10,9,1,5,10,2,5,4,-2,6,8],[-7,-2,-9,8,-8,-6,-2,-2,-9,-10,-4,9,-6,2],[2,-1,-6,-2,5,-8,-2,9,9,10,6,1,7,-7],[-2,5,8,5,-1,2,8,-7,2,4,-7,-1,6,-2],[-1,-6,-9,-7,8,-10,8,5,2,6,-7,-7,-7,-1],[2,6,4,6,-4,8,-4,1,2,8,7,8,-8,-2],[3,8,7,-9,-7,-2,-8,2,-3,-4,10,-9,-9,5],[-9,-2,10,-10,-5,8,3,-2,-2,-3,-9,2,-10,-8],[-5,6,-10,8,8,7,-6,3,4,-10,-10,-3,-9,-10],[-5,10,1,-4,2,-1,2,4,-10,7,4,2,10,5],[-10,10,3,-5,-6,5,3,-10,1,-2,3,-7,-9,-3],[4,-10,-2,2,-2,2,-6,-6,3,5,-10,-7,8,-1],[2,-6,1,3,-10,-3,-9,-10,1,7,4,2,-1,-8],[-4,6,3,2,-9,9,7,-2,6,5,-8,5,-4,-5],[-7,-4,1,5,-1,8,-2,-9,-1,-7,-3,-6,5,-2],[-8,4,9,6,-5,4,10,5,-10,-8,7,8,8,-10],[5,9,-10,-1,-10,-1,-10,10,8,1,-4,-7,-4,9],[-8,4,3,-1,6,-2,-10,1,7,-1,1,-2,-1,-3],[5,7,-5,1,4,-8,5,-9,2,-7,3,5,8,-8],[10,3,7,3,1,-7,5,7,7,4,-8,-2,9,-5],[-7,-3,6,4,-6,-3,-8,-3,-8,-4,-8,8,-1,7],[8,-4,-6,-1,5,-4,-2,-1,1,-5,6,-6,10,-10],[-4,3,-8,-6,6,-7,-5,-5,9,-7,-1,1,-4,4],[1,-8,-1,-7,-8,5,2,-6,-4,4,-6,-6,-3,-4],[4,-4,-2,-1,1,-5,-1,-10,2,-10,6,10,2,9],[-10,6,-3,-10,1,9,9,1,-4,-3,-9,-3,-6,9],[8,7,4,-4,4,-1,5,-6,-4,4,-10,-2,-1,-5],[7,-7,3,3,-5,-4,10,5,5,-10,10,5,-3,8],[4,-1,7,-8,-9,-10,7,-5,-7,-2,4,1,6,-4],[5,-2,-3,-9,-8,3,-7,4,-4,3,-1,-6,-7,-9],[-3,3,-2,6,-10,8,-4,-7,-1,-7,2,-8,4,-10],[-1,7,9,-3,-7,-8,5,-4,4,-2,-4,2,10,3],[-6,-7,9,2,-6,-10,-5,9,-4,-9,-6,-5,-3,-10],[-9,-6,-3,1,-9,-1,7,7,10,1,2,-2,4,-1],[-4,-7,4,-7,8,-1,10,-3,1,-8,7,5,-1,8],[-4,-2,1,-1,-3,-4,-6,-10,-4,3,5,8,-3,1],[-8,1,1,-10,3,9,-10,8,5,2,3,7,-9,9],[-6,7,-1,-5,4,-7,9,-4,7,6,-2,-5,4,-2],[-7,-6,-3,-8,-3,-7,10,-3,-7,7,1,-10,-4,9],[-7,2,3,-6,2,1,8,-2,1,7,-4,-6,10,9],[10,-1,-2,8,10,4,-1,7,2,-10,-7,-2,3,-8],[-3,6,-9,-10,-9,-8,4,1,6,5,-7,2,-1,-9],[-4,7,5,3,-8,7,-3,6,-5,-5,7,9,-6,-10],[-9,1,-5,3,4,6,-10,1,5,1,6,-1,7,-7],[-4,9,-5,7,1,-9,-9,-6,5,-4,-5,-2,-2,-4],[-6,-9,-7,4,-9,1,4,-6,5,3,9,2,-2,-9],[-7,3,-5,4,1,3,8,3,-3,4,-10,10,4,-7],[4,1,6,-7,-6,-4,-8,8,-2,7,-9,5,-9,1],[5,-10,-2,4,-6,-1,-1,-1,2,4,-2,1,-3,-3],[9,6,1,-7,-8,1,2,-8,6,4,1,-4,-9,6],[-1,-6,4,6,-9,-6,-6,3,-10,-2,10,-8,4,-8],[7,6,-5,-8,-6,2,-9,-4,-7,4,-6,6,2,1],[-6,-10,-2,-10,-1,-6,3,4,-6,9,-3,-1,-9,7],[2,7,6,8,-4,-5,-7,1,8,-3,2,-10,-3,6],[-9,-3,-4,9,-8,7,7,8,-2,-5,-4,7,-10,-3],[-9,7,5,-10,-2,8,-8,-3,-7,-9,10,1,10,-2],[-6,-5,7,6,-4,2,7,-8,-4,-10,-2,10,-10,-7],[-1,-3,5,4,2,5,-6,1,-6,-8,10,3,-6,-5],[4,-9,1,1,-1,-8,-5,-10,10,8,-8,8,4,-9],[4,9,4,-4,1,10,2,-7,-1,-10,6,-8,-4,-2],[10,1,5,-2,7,3,1,9,3,10,3,-8,-10,5],[5,-6,-1,8,8,-5,8,-2,5,-2,-1,4,-6,5],[9,2,9,10,5,-6,-8,8,2,4,-5,-4,3,-10],[-10,-5,-5,4,4,-4,10,2,2,5,-3,-9,-9,3],[-3,-1,6,-2,4,4,10,7,-9,-9,2,-7,6,1],[1,7,7,-8,5,-7,-6,7,1,5,6,3,9,-10],[7,10,7,3,5,-10,-1,-1,8,-4,-3,-10,-4,-4],[-2,8,10,-9,-5,-3,-4,-3,2,6,4,-10,9,-6],[3,-4,8,6,1,-5,8,9,4,8,7,-5,-4,-10],[3,3,-9,10,-10,5,2,8,-9,3,-8,-9,-5,-6],[9,1,1,7,3,-7,-6,4,4,7,6,9,10,-9],[-2,7,10,-1,-2,-2,8,7,4,3,3,3,9,-5],[10,8,-8,1,-3,-10,-5,-1,4,8,-1,-9,-10,-6],[-6,9,-5,-10,-2,-1,-5,9,5,-2,9,-10,10,7]], dtype = "int64")#candidate|4736|(90, 14)|const|int64
call_4734 = relay.TupleGetItem(func_984_call(relay.reshape(const_4735.astype('float64'), [9, 15, 16]), relay.reshape(const_4736.astype('int64'), [1260,]), ), 1)
call_4737 = relay.TupleGetItem(func_987_call(relay.reshape(const_4735.astype('float64'), [9, 15, 16]), relay.reshape(const_4736.astype('int64'), [1260,]), ), 1)
func_4627_call = mod.get_global_var('func_4627')
func_4630_call = mutated_mod.get_global_var('func_4630')
const_4740 = relay.const([[0.349575,7.030014,-6.579715,2.737765,-2.532325,7.537474,-3.878214,-9.481133,2.383925,0.681101,-3.321951,5.410141,-5.774639,2.206961,9.213995,-0.294982,-6.542491,4.893959,-1.358786,-5.080515,6.219771,9.801857,9.837839,2.420635,5.416802,5.933535,4.399273,-1.068517,-3.303883,-3.155264,-6.654641,-7.039289,8.229924,-1.626430,-2.188427,-5.306263,-4.068965,6.419562,-0.759076,-1.499580,4.525882,5.914902,-7.110883,7.084676,6.393619,8.051952,-2.558879,-5.567246,4.106822,1.401966,9.401376,5.381073,8.613150,1.476264,2.704470,5.262222,-1.037618,0.241088,1.333502,6.109585,8.975212,-3.399081,-9.423843,6.492063,5.066925,2.300322,-1.503071,-4.136892,0.957109,4.031506,-6.255434,-6.941144,-2.719099,8.556648,-2.741284,-1.444135,3.916683,6.201673,-6.404654,8.921936,9.599146,-2.646128,-4.965913,0.546124,4.155235,-6.250408,9.995287,-9.590714,6.442541,2.467274,-8.478685,8.291751,8.728693,5.499240,5.655584,5.074812,8.883020,-8.942385,8.190572,6.987382,3.047857,-8.714720,-1.206605,-4.483523,-0.588923,1.684808,2.658844,2.502339,5.813142,-9.242585,3.295238,6.278251,-4.720167,-9.056619,3.485043,-7.511758,-1.737287,-5.009131,6.885085,-8.003348,-2.929266,-3.597827,-0.516039,-2.421008,-2.973542,-1.261618,1.090732,-4.909453,1.453821,6.150187,-9.295435,8.560344,-7.871816,-4.480251,-8.424339,3.033524,-2.189852,1.319012,9.262279,6.009817,-8.303968,-8.949746,1.156313,0.053778,1.692780,-2.409401,-7.387101,-6.659957,2.685752,-8.882568,2.533475,-3.371731,7.808576,-8.196076,-5.934102,-0.601833,7.167621,-9.487678,2.414628,-5.690091,-3.688938,0.920404,-0.631554,5.380287,-4.723481,-8.916728,6.200105,4.796721,-7.090009,-4.339358,6.015682,2.533888,1.697129,-6.451079,-9.014959,7.486389,8.364931,9.982919,6.819683,1.518229,3.518595,9.242676,-9.790858,7.127962,3.088765,7.095992,4.862774,3.589789,-2.008822,9.768017,-8.390473,8.287102,4.143025,-5.703842,6.191153,-7.591525,3.504659,-7.718814,2.402469,-2.783812,7.513992,5.568972,-8.569372,3.581394,-3.141549,3.167822,8.521394,-1.656379,-4.190840,1.275240,-6.804358,-5.801826,-9.153446,-5.909417,-4.495186,-9.579277,-2.060877,-2.048431,-9.817103,-1.068185,4.695948,-5.889029,-9.267406,9.150014,8.458483,2.109253,0.542687,5.898336,-2.111903,6.566766,-3.524876,-1.524096,2.701632,2.347784,-0.670091,6.999157,-1.989204,-0.110824,-8.860829,7.930798],[2.387397,-1.776017,-8.916233,-7.844811,8.936563,1.531079,6.189125,-9.105189,0.829376,-9.698755,4.447965,7.656636,5.715947,0.299540,3.541228,9.940927,1.855794,5.670710,0.753225,-6.505887,0.963592,-2.504071,3.796712,-2.132368,9.118727,-9.613831,-0.027353,-9.650805,8.537754,8.174389,-7.439315,3.269863,-9.550156,4.785736,-7.669260,-8.642536,8.586840,-2.625679,-9.493038,6.377610,-8.272584,-7.538444,3.038879,-4.682100,-8.019199,-2.312658,1.104455,-1.106419,-1.803067,9.179933,9.998298,6.811940,9.044891,5.611073,-0.791682,9.386033,-8.921762,7.257508,-4.978361,1.905339,2.801563,5.197593,4.770668,4.482030,3.641364,7.739646,-2.931973,0.381313,-0.092241,4.273513,-1.166945,9.315544,5.472566,-3.077233,4.171979,-5.722375,0.842370,0.068470,-5.756694,7.467404,7.713583,-4.393267,9.458737,8.011840,0.944759,-7.196593,8.162928,-2.448325,-8.646054,-7.003240,-9.205645,-9.382382,-7.015730,2.493271,-4.713104,-9.705303,6.912459,-9.772560,9.322446,-0.131623,-7.937192,-9.676810,6.628809,-5.708559,8.216798,3.553698,-6.950402,-8.638625,5.308126,0.768593,-6.917469,7.429263,-6.480956,-7.918372,-7.904018,-9.440565,8.333388,-2.476141,-1.778327,-4.732714,-0.514922,5.150882,7.582731,1.874348,7.179944,1.273086,2.870157,5.526728,-1.992695,6.888028,3.898656,9.526078,-2.449534,4.418803,8.548292,-2.860157,7.956281,-3.527324,1.413669,2.407801,-0.874123,-1.056775,2.945644,0.010138,0.744986,-3.339041,6.193172,8.600749,-5.353406,-0.624340,-9.357066,8.894501,-2.453137,5.327591,0.227351,0.594940,0.771580,3.653851,5.635756,-0.429217,7.565403,4.013471,-6.906383,-6.061054,9.987651,-2.135060,-0.003743,0.904116,3.028931,-0.789173,3.650911,-7.690254,-0.758785,-6.462029,7.621959,-3.651137,3.188026,5.908165,6.713872,-1.834042,-5.509635,-0.211291,-7.333959,5.308279,-7.945195,8.843176,0.740653,-1.097139,2.243081,-1.892688,8.482709,-9.349770,-8.219079,5.903053,5.802475,9.856263,-5.901146,-6.496714,3.212649,7.464229,-3.575295,-5.168895,-8.504725,7.200129,5.728707,-6.543228,-7.091684,8.261084,-9.390451,-0.285133,5.985516,3.360875,-4.659355,-3.497764,-1.205908,5.759998,-8.184745,-7.672200,9.389714,4.412867,3.237795,2.265791,-4.231788,7.354649,8.372683,-3.849303,2.991543,8.749475,-6.428755,7.757170,4.676525,9.814241,-0.889732,-0.195231,7.003658,-3.127889,-5.638893,-8.931319,7.931275,1.128099],[-4.382111,1.695144,-3.080826,1.346177,-3.367896,6.790844,5.977216,-7.639583,-7.821157,5.021181,-4.888361,0.172143,-1.199836,7.727283,9.787630,-1.414018,-5.505672,9.013384,-2.501762,2.685225,3.085812,-4.403503,6.902367,7.975841,-7.598515,1.939726,-8.323058,5.821758,5.395438,-7.086772,5.142232,-8.523346,-6.116368,-5.960466,-0.209954,-1.458033,-1.190825,-0.389596,2.612112,-6.518861,8.706774,-8.717767,-9.112736,-9.174301,-0.339976,-5.077947,8.202693,0.819987,-3.523348,6.952118,-8.899665,-1.639643,-7.208204,-2.709018,-3.798075,2.763776,8.834043,-3.215172,4.939321,6.624239,0.302986,-9.931058,-6.602859,1.990680,1.079660,6.913686,-9.830928,9.284442,-5.950700,-0.050829,-7.167368,-6.106886,9.881912,2.686806,1.982120,-7.606660,-3.373169,-0.245958,-4.715161,6.631825,-1.942284,8.414274,-2.174138,3.361632,9.340725,-8.878274,-6.121352,1.452414,8.560156,-5.457107,4.872757,1.929859,6.183176,-2.522904,3.944869,-0.427865,-2.218484,-7.829212,-8.170386,2.242938,8.198713,7.505657,3.260347,9.020792,1.817470,4.314089,-6.186052,-3.570796,-6.937950,-7.162691,-7.691315,0.264074,-8.594108,1.140952,-0.858840,-0.049386,-4.830657,1.274642,-7.913750,-4.312415,-4.898655,-3.085455,7.667187,5.296031,3.260488,1.318379,-9.665869,-3.046135,1.916320,1.365797,4.303102,5.169934,1.799960,7.447501,-3.596633,0.081871,3.172727,5.818019,-9.055918,9.454473,-2.253411,1.634371,8.802483,-7.442041,5.326076,-3.187872,0.653480,0.485414,-1.476842,1.439649,-1.139290,-3.823178,-0.772109,-0.831907,-3.046141,1.512897,3.415989,4.402715,-8.625356,9.732681,8.321112,-4.744580,2.566789,0.629074,-1.818569,-3.661426,9.456406,5.327229,6.724933,-2.988434,1.765926,-3.787074,-0.488796,1.355784,0.218991,-3.125254,6.936296,-8.815191,-0.039708,-2.402720,-6.431126,-8.511894,3.114685,4.340421,9.373525,-6.071527,1.847950,5.167243,-8.811067,8.548976,8.239534,-2.484395,-6.762492,-2.394938,-2.271504,-4.164554,8.718693,-0.617338,-5.571643,9.430787,6.386310,-2.456123,6.159125,-7.253992,-3.430101,5.716556,-9.391915,-0.468340,-3.080858,4.663951,-8.204576,9.220033,-2.393794,-2.428515,-5.740397,3.224054,-8.418548,-2.821798,1.968108,4.989369,-3.692550,-2.012488,2.627172,-5.741739,7.357976,-5.173969,4.268722,7.290474,-1.028687,-0.876910,-5.657026,-2.050392,2.970129,-3.476855,-3.407827,-1.870875,-3.738633,6.674535,-1.349453,-1.778768],[4.870960,1.099293,-6.848591,5.074302,-8.729943,3.419812,4.187964,8.238583,4.233589,9.947993,-3.663781,-2.013531,-5.965736,-5.552001,0.493568,-3.864859,8.646758,8.109466,2.181795,-7.596832,-9.396456,-3.416266,-7.596653,-7.181816,5.744475,0.853256,-9.059204,-0.060103,1.598491,2.116767,8.719579,1.640390,7.955212,7.252186,3.478939,-0.511083,2.814385,6.329048,6.497001,1.241496,-3.540707,-7.360108,8.395861,1.517766,3.221202,9.933925,0.762967,3.792593,-0.326653,4.061245,1.390058,3.102117,-7.373604,-6.925870,5.123433,-8.281548,-3.464981,-1.196492,4.322286,-2.108821,-2.800166,-6.884395,-9.341679,-2.433976,-3.240052,9.436688,0.946988,-8.517147,3.813979,2.649012,2.542623,-8.497685,-2.409823,4.573847,5.180343,-8.454478,9.870279,4.793252,9.185955,-4.199489,8.236513,9.072960,0.763920,-6.547181,-9.130555,4.461261,2.084140,7.493318,-0.740211,3.000954,-5.777321,5.137519,-9.288795,9.368606,-2.784153,8.986267,2.216250,-8.762228,3.001636,-6.467524,9.576460,3.513151,7.460134,-7.471326,7.315042,0.714088,-4.459430,3.313106,5.746407,-1.381747,1.161127,7.327528,-9.344549,7.712662,-0.410784,2.260535,7.870840,-2.406289,7.873754,-1.100586,5.493209,-9.721432,-8.859893,-9.122606,-9.806611,4.764362,9.449288,2.100706,-3.590815,8.372477,-6.230996,-1.318014,8.201027,-2.684930,-7.124173,5.140021,4.109316,0.966032,6.053973,5.558768,-5.305136,1.513234,-4.626257,2.935039,5.195925,7.678717,4.109754,7.177653,5.371942,8.194934,-7.611337,2.617907,-0.142769,9.222104,-4.700925,8.772348,1.713095,-8.126790,6.374432,1.806261,-7.503247,-8.691779,-3.345894,-5.529423,-5.874680,4.995853,-1.361424,-8.607382,7.330429,1.657740,-8.895786,-5.172039,8.718704,1.291086,-6.383994,-2.501897,-3.106032,-7.182065,-6.327469,-7.172790,-2.730422,-1.844414,-2.611881,5.529224,-8.258125,8.188604,-6.538571,7.512225,0.910083,-7.380475,4.449567,-7.651949,-0.128529,-4.886998,-7.150656,9.540065,7.062084,4.771968,-4.267629,3.551443,2.970582,5.371026,5.007687,-0.919180,-9.323546,-4.342357,8.432156,8.134233,-7.706999,-6.653660,-7.501654,7.930839,4.513531,5.680074,-5.323515,1.344660,3.284209,9.892256,2.860289,8.295466,-6.854201,9.169157,3.716348,7.287506,-0.145263,-3.985872,0.767821,-5.906817,-7.977800,-4.893589,2.001299,9.735303,2.022613,3.157701,-9.640145,-7.682037,-9.669372,-4.461748,-3.731800,6.674787],[2.428515,7.316104,-4.497181,-7.846117,1.611145,7.141742,-5.173393,1.801923,0.526305,-0.550436,-7.458608,-1.336847,-0.880611,-5.653434,2.601819,2.414441,2.139872,9.896366,1.343011,-1.137121,0.433310,3.908731,-8.987194,0.634712,4.071231,7.172715,-6.053314,-0.902441,-8.448165,8.034713,3.408735,9.925342,7.269713,-8.344753,-0.422674,7.069103,-5.249179,8.609360,0.069186,-5.580708,-8.848957,-5.151110,9.856953,9.021596,5.335167,5.066447,5.074189,0.618699,-3.742211,0.510623,2.881116,-4.309225,8.491364,-9.859222,-7.514225,4.084428,7.627801,3.530657,2.013385,-8.096477,6.796057,2.530112,-6.821320,1.701954,-2.573651,3.728753,9.689333,0.394850,0.542498,6.112924,-1.712881,-7.658363,1.181632,-2.765462,-3.944941,7.494129,6.038241,3.537263,-0.380172,-4.039246,2.482637,-4.291634,5.758115,-6.628081,7.684065,-2.397040,-3.283173,7.364927,-8.862662,-8.219972,9.076372,-4.126801,-4.953082,-2.242050,-5.213576,9.819908,2.721889,-9.730418,3.799489,1.720440,-0.019483,-5.092219,4.049955,-1.724297,-8.896391,-5.143785,8.771787,-7.491512,-4.769044,-3.652427,5.593775,9.570474,9.824674,0.589722,-5.365626,4.319094,-9.193295,2.669289,-9.977732,5.440521,2.588260,-5.640685,-8.846072,-4.565599,9.630482,3.668238,1.152951,3.006022,-2.611545,8.644904,-9.159605,1.460493,9.828877,-0.783930,2.891730,-4.916598,3.866382,9.162590,1.859595,1.073042,-7.468976,0.356113,7.564603,-2.425860,3.942121,-6.003751,-5.173888,-5.942507,-5.870135,3.887338,-9.778555,-0.088440,-4.246389,4.246679,-8.267619,2.599037,7.912657,-7.185415,3.753303,-2.423533,-2.905435,-8.765806,-3.146180,-9.805462,5.960582,-4.715259,8.229317,-0.619448,-6.581511,5.155378,-8.055047,2.163270,1.803163,-0.817298,-5.406967,3.609589,0.898456,-8.124205,-1.225835,-7.532005,-2.450192,7.956488,-3.549584,-9.457679,9.098160,0.514855,-9.504486,1.984492,-2.926625,-2.807548,-1.074701,7.695068,-5.620206,-5.887517,3.153893,-3.325987,0.573969,3.518283,7.817277,1.980787,-1.548333,-4.216183,0.987752,-2.183116,0.540480,0.504790,9.568337,4.927485,-4.520980,-7.537681,9.466623,1.477115,4.045175,-0.054856,-2.162674,0.234502,-9.976128,5.129272,-2.926528,3.992838,0.784098,1.592380,9.302286,-4.968266,-5.066909,7.115843,8.952010,0.645343,-7.911521,-6.743666,1.049856,7.348540,2.298103,9.570756,-7.109385,-2.652903,3.153727,-2.124360,-5.627676,-9.365781],[-8.075919,-2.469907,4.117495,-1.793654,5.611933,-0.306375,-9.233684,-3.469354,4.994256,9.587502,-2.574905,0.920032,-6.833998,2.164080,-3.454951,8.429087,7.437534,-9.213831,3.707954,-0.089886,7.262510,0.125781,-4.313245,-0.559508,-4.525715,-6.517588,7.164202,-2.296758,8.772871,-2.399481,-7.009017,-1.466489,-8.023139,-5.421323,2.043737,-7.338171,6.816360,9.876656,-2.018262,3.870353,3.832884,6.949660,4.484936,-7.847436,9.478407,-1.508246,0.290597,-0.229953,-1.195149,2.250594,4.901985,-8.152274,-1.802142,6.970267,9.087318,3.193277,-8.736602,1.316267,-4.681471,-4.474524,5.085987,2.953248,-5.209730,-0.504211,-4.491416,-9.202195,5.439514,1.612383,-3.741141,-1.496598,1.047935,8.603452,0.781689,-2.951290,-6.464249,1.969570,0.307086,-2.305532,-5.764938,-7.001087,1.160874,1.505936,-4.151391,-6.307853,6.466543,-6.774052,-5.274917,-2.002188,8.908447,9.033324,0.967549,7.681642,-4.701502,-6.952692,-6.952254,4.529441,-6.954192,-2.575242,5.468151,3.002760,-4.805865,-9.373621,4.333604,-9.435038,9.365808,1.483466,-9.484096,3.196195,-6.825815,-7.691511,5.057856,-2.471884,-7.789462,-4.410917,2.257889,-0.255389,6.072130,-6.648650,0.191597,3.850702,1.519408,4.742283,6.867691,-2.895387,8.084374,-6.339144,-9.829318,-7.908148,-2.814677,7.874926,-8.036232,4.045164,-3.516373,5.919049,-1.612171,-6.092156,1.501961,9.778438,-4.999254,-7.436043,-5.357008,-8.178011,-1.915633,5.246737,8.610726,-4.840146,-0.128754,-7.489232,-7.981975,-6.055891,-7.399038,-5.053541,9.111858,6.790741,5.516775,9.351093,-1.355720,-3.976932,-3.881773,2.843836,-8.315880,7.417276,2.881828,7.803852,4.759142,-0.175366,-5.004254,3.027495,1.168825,-2.281122,8.695677,-1.005038,9.355003,-9.378434,0.873298,-5.198619,6.669589,-4.457195,1.024860,-4.948754,-6.284550,-1.490970,7.759796,-3.494398,-9.132025,1.578046,-8.125994,-4.681902,5.335018,5.597750,-7.585702,-7.955597,6.447596,2.233834,4.638145,-9.053267,-2.956441,-0.960064,-2.862727,-4.479697,9.156710,-5.086587,-1.225179,-5.372320,9.480998,-9.050872,0.416228,-8.958699,1.341976,6.413244,9.426928,-3.754184,-9.930880,-2.720135,4.495096,-8.174459,-3.930400,-0.841499,9.941068,-3.087009,-0.082509,-9.296653,-1.844791,3.278096,-2.626606,-3.681441,-9.718524,-1.453033,0.060125,0.626446,1.482872,-0.500527,7.738454,-3.678354,0.839257,3.334209,3.694753,1.478663,-9.347668,-5.783334],[5.489635,9.341775,5.289926,-1.941691,-7.442707,-9.441783,6.134817,2.126243,0.836678,2.558050,5.760519,5.024569,4.386092,-7.910530,7.311383,-0.819613,6.329934,-9.378340,3.800833,5.342315,-5.132942,-1.618046,-6.511288,-1.513058,5.679448,-2.839001,6.759478,-5.134609,-7.556981,-2.323028,5.128857,-2.226118,-6.500588,3.839530,-4.623894,0.871738,-0.637276,-0.702604,-3.271177,9.565297,0.017455,-4.440085,9.826481,6.219987,8.970909,8.183898,-1.149527,1.552538,-5.988482,4.170115,2.103304,4.687870,-7.731613,0.966231,0.525992,-6.929215,-5.600957,0.820859,9.994953,-9.117314,-9.198036,3.810113,5.791775,-0.743257,-6.494582,-8.863514,-6.203331,9.269696,-0.849658,2.783677,7.664968,-2.070808,-6.273270,7.665382,-0.051565,-3.191462,3.790654,4.367493,-7.722514,-1.701610,2.274243,0.834993,5.589217,-6.388445,6.485371,4.585989,-3.283696,-2.330949,0.019140,-3.145954,7.529481,-6.670054,5.792525,-7.907414,6.222595,-2.358202,2.269974,3.025547,-2.395957,-5.602386,4.152863,1.028705,6.517913,2.205057,1.095234,-2.649760,-3.428823,-7.386663,9.371005,-5.675424,6.619258,0.797736,-2.264496,4.402754,9.745769,-7.554253,3.572051,-3.015738,7.774422,4.190526,8.996118,-0.165116,6.453384,0.920287,4.137788,6.044865,-8.646148,4.912921,6.139397,-7.790684,8.747025,-1.803704,-0.336561,4.268605,-8.819195,-3.934813,0.416771,8.177214,2.625222,9.185158,-3.605856,-3.900119,8.485750,7.298246,-0.960686,8.635729,-8.910362,1.482379,-6.531675,7.338701,4.200679,7.050007,-7.877627,0.605112,6.534064,-9.719758,-7.002862,6.656205,-1.638629,-8.011366,-2.901450,-7.501399,5.407901,0.804362,3.497182,-0.340311,-5.024842,7.611855,5.193312,8.942572,2.258512,-7.865915,-9.376293,8.436910,8.351520,5.037500,-5.792204,-8.562426,8.871424,7.754335,-3.788341,-9.745477,2.922290,1.955871,-9.819517,-0.334819,-4.411437,6.759059,-8.617603,-9.247752,6.895427,1.175676,6.257518,4.804890,4.017008,6.367217,4.225223,-3.993551,0.776218,0.062003,-5.249023,0.421725,-9.776543,2.778225,-8.911864,-5.590538,-6.706222,4.303091,-8.882293,-6.534452,0.226594,7.108369,3.813867,-9.436125,-0.427562,0.478852,1.039734,8.299923,6.720716,-2.072503,-5.445186,4.072520,-0.534074,4.383694,-2.332975,-8.511390,1.977493,-8.841476,2.863767,-9.500204,-5.665989,6.797946,-4.477211,5.504258,7.276612,8.896515,2.885936,-8.626528,7.360852,-4.128399],[-5.732103,-8.133557,-9.737359,-7.885758,5.487232,3.478667,-5.479562,4.918597,-6.040672,4.649084,-5.478738,4.933203,2.655462,2.096947,1.952454,-0.006367,-7.884128,-1.338355,5.620277,-5.397307,1.398346,-1.814889,-9.924555,-6.066463,9.308288,2.605853,0.755570,0.004552,-7.988903,3.796489,-7.778203,1.876759,-9.507576,8.580997,4.345654,-0.089824,-2.273537,-2.795480,-4.195811,7.556165,-5.155584,8.350780,9.907109,4.785890,1.067826,-3.867482,-7.804327,-7.876357,5.124791,9.896868,-9.959908,4.086498,-2.595915,2.042824,-1.882007,-4.983024,6.994127,-4.923939,-8.743816,8.594203,6.611425,4.705362,4.445853,-4.640933,-5.454867,4.325921,-7.418036,9.590192,7.278100,4.816149,3.584212,-8.025255,-4.094275,8.464505,-2.099180,-0.547026,-0.344549,-5.079906,-0.040354,-9.935923,-4.952371,6.161802,-6.399047,1.810521,3.581924,-8.823528,5.865247,-6.328707,4.863578,-0.112148,-4.097389,4.334312,6.452724,-2.323193,6.052426,-5.253539,3.536243,-2.007188,-9.265921,7.888042,-9.797485,-1.144317,-3.089854,3.091027,-1.328067,-6.138521,0.341503,-8.546100,6.673621,-0.236721,7.550520,-2.387244,-1.636288,2.596402,-7.437854,-0.104479,-8.737717,-3.851799,0.705021,-5.035358,-1.314007,-7.974502,5.202615,-5.970450,-2.463872,9.733192,0.113445,-3.288760,-1.662336,-2.199792,-8.756671,9.000106,9.223637,0.002566,-3.659018,-8.302298,-6.344425,-5.826586,6.725838,-8.040473,1.207365,-2.570123,8.070456,-7.048853,-5.304215,0.907482,2.916955,6.945441,-3.071285,-6.269578,-7.181643,0.255963,0.078364,-5.226249,-9.300466,-8.382510,-4.232158,-5.447299,2.834880,3.737984,3.123247,-4.830547,-0.838088,3.180760,9.778056,5.759593,6.892071,-0.468825,-4.153678,4.134898,-8.479584,-8.252137,-8.427103,-7.481345,7.350392,6.945887,-6.787264,7.179597,3.206662,-9.403797,-8.116306,1.038458,-8.764652,5.988655,-4.911677,-1.845092,-5.906033,-9.199991,0.006966,7.813093,-1.900138,-0.969124,-5.237671,6.487640,-4.275816,-4.516649,2.998196,-5.911716,-3.820544,-8.559692,8.462868,9.250410,4.900358,-1.046130,-9.975451,4.251869,6.368360,-6.840972,-8.421937,5.560924,8.688886,1.398232,0.509341,-4.036807,8.029728,3.054884,5.963149,1.794926,-0.949299,-8.390516,3.299342,1.037651,3.359487,-1.169740,-3.025768,-2.836781,-4.300944,-9.269841,-0.593766,2.694657,-5.677379,-4.059461,3.879546,-0.163271,6.005699,-6.216746,0.881042,2.783470,7.252519,-0.252297],[-4.946816,3.080966,-8.873551,-8.431418,9.906955,4.966463,-5.801308,8.429082,9.059757,1.434464,-7.038812,4.710751,-7.784366,-0.234835,-8.104414,3.689809,-2.527770,6.136562,-3.449247,8.839968,3.098269,9.180820,-0.697113,4.416688,7.506677,-4.931079,5.015091,6.097558,4.916615,4.789778,-7.937464,-2.658334,-0.806704,3.128428,3.363461,-7.441287,0.113078,5.000810,-4.188126,7.070718,9.000796,-3.150132,8.875553,-6.092285,8.382074,0.953184,-1.663057,-2.451942,3.279638,-5.812166,-4.545410,-9.486782,-7.021306,7.188072,-6.917047,-4.000376,3.651669,-6.320521,-9.304105,7.449604,6.766706,9.107349,-5.850232,-0.755826,-2.025520,-8.309029,2.485060,-2.477180,-9.577040,-9.429161,6.631211,2.474531,5.026608,0.711975,-2.082975,-5.083361,5.615623,-4.684052,5.441692,-6.295467,2.206036,4.881590,4.815024,-2.794136,1.786445,-6.281980,-0.895825,8.525540,-3.117792,9.993549,8.407971,-7.178895,-8.575478,-5.716944,9.950861,5.957988,-3.565216,0.750958,-4.939045,3.867423,-7.218538,-6.828231,3.646145,8.574579,6.927635,3.034356,-3.843775,0.334165,-3.730318,-8.096894,-1.816080,-7.137099,-9.656711,-3.674433,2.862619,3.332222,-5.414538,-1.402394,9.097333,8.820158,7.442547,-8.429616,-8.013638,-1.036712,9.777658,-2.938178,-3.072148,-4.630629,-4.477962,7.054094,4.777378,5.672107,3.928585,7.573341,0.259632,7.836647,7.988918,-8.421791,2.341938,-1.612216,-0.882187,0.909259,5.582877,9.166503,-4.462846,-7.700698,9.816695,9.734102,9.490593,-8.713191,0.422831,7.141694,1.354416,-4.657344,-4.491092,2.755515,3.568509,8.121777,4.946287,-2.674775,-0.393080,4.630437,4.404773,-0.088633,6.246962,0.955807,-5.353010,-7.781100,9.763528,-7.756940,7.116126,-3.795728,-4.997307,-2.419186,-5.577331,-9.670716,1.940033,6.709330,-2.327648,9.191079,-7.572562,1.171857,-2.830029,-4.452565,-3.484976,9.777971,-7.133049,4.738749,-9.593881,-4.305317,-6.797057,5.568617,-7.133124,-7.027992,-3.372979,3.649747,0.248395,7.540004,-9.244098,1.070028,-9.768578,-4.240834,-4.944002,-0.136091,0.803371,1.382287,8.481614,3.206295,8.460107,-5.725018,-4.413118,-7.838157,-7.417539,5.724498,5.535279,-8.118443,9.762330,9.178530,-2.322771,-9.723325,-7.757020,2.197465,-0.846734,-2.239015,3.737009,0.198067,-0.824424,3.680231,6.283889,0.787570,7.747579,9.355150,-0.254810,-0.059629,-1.781963,6.327150,-4.726325,-8.208557,6.091720,9.755846],[3.146340,-1.576658,-0.186741,6.237288,-9.413516,5.872165,-1.486633,7.232246,9.281738,9.520628,-0.662603,-7.363355,9.179064,-4.606653,1.761703,0.925121,-9.535142,-0.329842,1.135594,0.252597,-6.527695,4.188944,5.119689,-2.687196,-6.331896,-0.914964,-3.983258,-7.623906,1.458638,-1.757759,-6.570314,3.101020,-9.306311,2.917735,6.838981,7.634323,4.381750,-1.247572,9.753440,1.151612,-3.183333,0.628336,7.018988,2.589699,-1.314726,2.403168,1.683940,7.746088,0.466641,-6.555493,7.279763,-6.378412,-4.360268,9.135985,9.946212,-3.159583,-8.067829,-6.770231,3.115290,-2.501372,-5.908306,-3.096141,9.541138,1.835017,-6.904130,8.939625,5.623982,6.415937,9.595836,-5.089063,6.038841,-2.738980,-8.529305,5.563069,-6.505174,3.223902,-8.956182,8.814553,9.664863,-8.011194,-9.664219,-9.574675,6.143555,0.104400,-7.184103,-9.791393,-6.563631,-3.649102,8.856328,-6.499225,6.556702,-5.646541,8.537509,0.877861,-5.595200,6.938602,-7.096506,6.458576,3.746296,-1.923875,-7.072864,5.573231,9.305416,6.210833,-6.490209,2.848631,4.446384,3.649007,9.586152,5.748799,-3.700403,-0.709826,-8.242787,-8.996345,-9.074570,-5.850485,9.474865,-9.207732,5.394136,-0.677865,5.886790,3.448617,9.708162,-3.085797,-3.017020,8.712108,-6.744379,1.086465,5.914010,-5.800952,-7.773129,-1.141131,-7.537383,-2.177319,-3.392917,9.187474,-2.303191,-2.452120,4.539381,-3.841977,-9.122353,-6.092827,0.430425,-4.085874,-6.312759,6.359926,3.904850,-7.921853,-2.474244,7.977873,5.153724,-9.958777,3.498065,-9.829964,8.095077,-4.209569,-4.809358,-7.147596,-6.518410,-9.430404,2.856698,5.379244,5.394744,0.972957,0.206882,-7.203721,3.171746,-9.619032,5.824989,-6.893817,-0.252922,-6.762062,3.028347,-3.630870,7.518062,-3.506170,-5.017274,5.878002,-6.734870,9.796165,5.118920,-3.688095,5.359098,-4.740243,2.892179,1.074696,2.299286,-2.014935,1.463039,8.885161,5.643213,7.219428,9.208504,0.187831,0.639097,6.894741,-2.661585,-4.609879,8.400850,-8.634013,6.599841,-9.237098,-5.716507,9.253264,2.804111,-7.002603,7.517874,4.993393,7.946388,-5.606214,9.987907,2.716246,5.141035,8.653176,-8.135527,-7.713221,-5.816536,2.111385,8.962445,-3.056963,8.605954,-6.095949,-3.345582,6.062194,-8.308387,6.649885,-6.752099,-6.320768,-2.703836,-6.773085,1.533088,-5.812459,7.281411,-5.476399,-7.912356,3.748809,-9.525715,-5.296816,5.886355,-4.309321],[2.473350,-2.672299,-3.189493,-8.492232,-4.234913,-7.036564,3.177270,2.677080,-2.376312,7.671411,-8.509885,-3.026431,-7.016664,-5.618669,-4.558901,-9.383564,-1.350870,3.290063,6.576282,6.215507,-4.199690,7.550209,-1.517138,-9.797509,7.643027,2.752478,2.207242,-9.774112,9.656225,5.833289,1.454849,8.671205,-6.217524,-1.969242,-4.260188,-4.778943,3.686301,-1.305582,-5.454538,-7.314114,7.082747,-9.148051,2.920203,-6.976213,2.457977,3.316146,7.072430,-5.956639,8.499972,8.080592,-1.245653,8.492323,-2.255722,9.862658,-6.386604,-4.032751,3.288912,-5.163605,3.975311,8.305433,8.603390,7.680064,-2.764523,-7.201757,-9.310741,0.067496,4.825335,6.572745,5.731837,5.224480,-0.934376,9.634598,-2.307029,5.126568,-2.302163,-8.141608,8.570447,6.491487,2.998401,4.713668,9.752779,-8.361813,0.922314,-3.505080,-9.125944,8.639862,2.957132,-9.371481,-6.009740,9.351625,0.536615,-7.721560,9.331433,-4.833744,-8.693322,3.356663,-0.434863,-8.974264,1.147826,-4.598869,-6.081802,-4.539009,-5.836756,9.179035,-4.648668,-6.088999,-2.500817,-6.197280,-4.330809,-2.483881,9.550828,-2.224391,8.728492,3.256245,-7.522660,-9.843727,2.717349,-6.517137,-8.031343,8.757528,0.117689,-3.081491,-9.379919,7.371444,1.730522,5.420479,5.781384,-7.784413,8.655679,0.693960,-2.958757,-3.738815,1.117283,4.977220,2.757840,-2.235577,-0.864516,-4.540599,-6.060571,5.421551,-3.561201,-1.403267,4.134028,-2.644043,-3.049118,-1.248503,-4.540108,1.242033,0.509914,1.237826,0.864204,5.782964,-8.927529,-7.859158,-9.373369,-1.685348,5.275397,-1.581136,2.252666,5.833316,4.247557,-1.935525,-7.129891,9.424599,8.207498,-9.042674,-0.596773,-3.921012,-5.741411,1.095367,4.424043,8.152447,-3.392864,6.225438,-3.201399,-1.847302,-8.747439,1.510012,-1.686435,-1.920905,5.162688,-6.081090,6.489251,-4.417248,8.672083,-2.824634,8.991769,6.778771,5.822359,-9.245897,9.468156,7.193185,4.510504,0.334283,3.333950,9.704462,-7.835713,6.803564,6.198228,6.715844,9.012535,5.912292,0.896753,0.118614,0.643570,6.640270,-1.765398,-2.742909,6.711345,4.016984,5.439471,-5.837827,-5.894360,9.694747,7.666920,-7.753858,-2.959012,-6.939430,0.883589,7.146790,1.598746,7.182910,0.769220,8.532840,4.308518,-7.319041,-0.401148,3.556503,-8.320798,-0.178467,3.335542,-6.928434,-9.302450,-4.956503,-1.122336,-4.909090,-7.406851,9.241973,8.776050,-4.401352],[8.872684,7.586282,5.450144,-1.493488,-8.954024,-4.897665,-5.640302,0.550676,9.332471,-4.971208,2.803511,7.126002,-4.854887,-5.157602,4.272654,8.506774,8.056189,-4.490826,7.501583,-3.188174,6.844835,3.715079,1.823564,-6.522715,-3.217100,7.121204,7.987337,4.106883,4.253083,1.622287,8.362282,-5.530000,-7.032811,5.362272,4.987175,8.743071,-0.101578,-5.467405,5.987907,-0.098220,8.861292,-0.332900,-5.760999,4.170812,5.943737,7.150399,4.592453,7.642356,-9.859095,5.120141,-1.888140,9.023743,3.070697,-7.378028,-3.879641,3.392995,-0.304831,2.402036,5.755481,9.053433,9.613789,6.466046,-7.919092,-3.231554,-2.701063,-0.846145,-0.604437,0.113557,-9.092825,2.304626,9.495923,-9.700566,-7.774955,-7.432259,-8.795184,-5.114509,-7.153796,-1.801797,-4.522051,-5.402809,-8.943999,1.364896,-4.919371,8.278819,-0.166053,9.047634,9.094814,-1.824499,8.088370,0.316389,-1.373222,-6.010455,-7.954343,8.485612,4.482584,3.062437,-0.723719,9.145834,9.049937,5.309205,7.558329,9.581921,7.053682,-6.299103,0.732879,-4.823701,4.636989,-1.678391,-9.119995,-2.146018,0.513288,8.336127,-9.764469,-8.564067,2.383532,5.008986,7.936337,5.768452,-3.926370,8.208708,-4.509182,5.110921,-4.221499,4.029010,4.007456,7.451678,4.477718,2.098051,5.834833,3.992903,2.873391,1.077550,-5.079291,3.116627,-3.149029,-7.329217,3.140132,-7.550199,8.765298,-7.561552,0.487336,-8.805747,-9.375788,-6.599129,8.101652,8.997646,-4.761094,2.570728,3.109711,-2.153886,-4.310473,-4.979304,-2.771647,7.101064,-6.395374,7.742226,8.656030,-7.574990,6.775432,6.411832,8.013317,5.758818,3.965721,-9.331450,-0.923082,-4.290488,6.468143,-7.732657,2.215755,5.450770,4.687818,7.319584,-8.384447,-2.729428,-5.666312,1.506413,-7.450513,-6.388870,8.413229,8.146718,6.444162,-9.347502,-7.989113,-7.342328,9.718416,-5.729327,-8.452958,2.332621,7.523348,-5.566626,-1.367025,1.254517,8.153270,-9.598630,-0.242688,-8.081476,-3.899430,-0.828608,7.139405,-9.654402,8.897398,1.220582,8.169604,-5.821011,-1.759345,-0.619327,-6.786685,-0.958994,1.850054,2.080792,-1.456992,5.048510,-8.247791,1.433097,9.674199,-8.851816,-1.827733,-3.984255,4.356829,5.823465,-2.502984,-6.170812,7.453728,-0.009888,6.387619,9.794302,9.937908,-9.921324,-4.068168,8.061277,-4.710089,-2.941671,2.623284,-0.210479,-3.591966,-6.715459,4.219118,1.620824,5.326620,-9.561342],[8.528344,-7.992545,-3.742895,8.971319,9.318679,-5.734467,-8.085712,-1.774022,-7.068790,-0.737381,-3.135746,6.498719,0.901386,7.053843,-8.807305,-4.396768,4.214677,-4.590110,9.440703,-0.233412,-3.224873,-6.212623,-3.961131,-3.408019,6.372450,6.055323,8.115700,-6.821444,4.449113,-9.505539,9.739906,-0.689566,4.009067,-6.779809,-5.590077,1.761528,-7.179979,5.179607,8.765759,4.264261,2.339082,-7.854975,9.758576,2.979681,-6.930755,-1.844996,-3.625727,-9.187850,6.492061,7.051961,-6.440959,-5.030369,-1.620028,0.896770,1.309302,1.991511,8.791582,4.368125,-2.949797,9.236056,-9.487493,-9.279293,-2.910641,7.537769,4.072188,4.317130,5.821369,-0.572471,-2.377162,8.944124,-4.730495,-0.630527,4.013701,-8.189423,-9.709618,-8.247424,8.418468,-5.801652,-9.913541,8.806624,-4.833679,8.108944,-1.952398,3.444555,3.262939,-1.449953,1.182290,9.005102,4.341382,-1.379687,1.248675,-2.217728,3.549353,8.681541,-0.214107,-1.823047,0.748433,7.164405,2.202236,-3.536330,6.593545,1.847081,4.700001,3.890069,-2.862867,6.506685,5.690852,9.199145,-7.126017,-4.914812,5.087359,7.563699,-9.430015,3.585874,6.648804,-3.594340,-2.130385,-9.813743,-8.225064,-2.028025,9.647230,-4.727472,-6.437167,-1.004975,-2.272199,8.776519,7.825137,6.004648,2.224791,0.624229,-8.290867,-1.153634,3.937290,4.896778,-9.905556,5.672974,4.037886,-6.745003,8.552252,-3.069185,3.015864,7.085135,-9.168577,-4.339079,8.051338,-5.302043,7.902404,4.262077,7.334566,-3.644557,-6.965289,-5.188607,-9.216432,7.452500,0.210399,3.675635,-6.480730,0.843662,2.400968,-3.811805,8.803543,4.907575,8.061889,-6.691097,8.287116,4.453358,-5.102359,8.462983,-1.595659,-4.055281,-1.688292,2.693814,-7.487380,2.321419,-0.651467,5.431209,-8.945577,5.215169,9.564384,0.048865,-0.491662,-1.381356,-4.586058,5.696108,6.583821,-9.109345,-0.244646,-2.209869,-5.807284,-4.288356,2.222274,-4.074711,-5.928084,-8.725782,0.365839,-4.318701,-9.042269,-4.031579,-0.494924,7.375787,6.276482,8.650102,1.143446,1.605230,2.159174,1.531160,2.596741,3.020932,1.176859,6.310479,6.360415,-5.169689,-0.999155,-6.165113,5.266543,-6.329480,3.171440,-4.008422,6.233857,-0.246879,6.619234,-2.006753,3.563871,4.423232,1.428295,-3.308842,-8.593365,-6.650076,5.459717,-6.465462,-5.260338,-9.956834,-3.444114,7.019287,-8.690179,1.378526,1.321953,-9.925517,8.507526,1.058601],[-5.765553,7.592973,-1.502700,9.928962,-4.467418,-2.444477,1.469647,-5.334636,7.150654,6.158346,4.663996,-3.756848,-8.200533,7.257589,-7.022747,-6.879960,-4.004939,6.680069,4.692506,6.760439,-6.341394,3.204726,-6.008551,-8.505349,0.016577,2.773645,-3.628543,5.222415,-0.253635,-4.030368,2.625898,0.812693,-6.069435,-9.414777,7.952146,5.588117,-3.338720,7.853675,-8.089215,-9.297504,-9.754932,-0.299848,0.753967,5.906499,-1.854616,-9.926869,8.754187,-6.767173,7.880355,4.408043,-7.145238,-6.421455,9.062305,7.737562,6.276108,4.625774,2.412089,-7.711885,4.601113,-6.721234,8.053611,9.731312,-1.793822,-3.921580,2.690433,-1.157235,-5.761024,-9.982514,2.612363,1.483863,6.295745,-6.672557,-3.478814,-5.748904,-3.368570,-2.352855,4.569646,-5.934328,5.630229,3.487120,2.934394,-7.433833,8.311070,3.042032,-6.437059,9.797876,-4.851636,-1.113733,0.258613,-0.691115,7.458394,1.743663,3.269422,-6.522741,0.817131,4.548151,1.545348,-0.148723,-4.475002,5.092412,0.578410,-0.517395,-9.975527,-0.706467,1.250562,-3.887400,3.666254,-6.242029,2.901284,5.188311,-4.698060,9.854172,-2.426454,-5.692872,-5.714181,2.477432,9.342049,3.317618,-6.831682,8.399863,-8.805056,-7.809543,5.952074,-7.837673,3.668936,0.975096,-6.655140,-9.184986,1.485617,3.438629,-7.523430,5.469790,5.750894,-8.271147,-6.157805,4.941212,4.942322,1.710405,-8.529401,5.901343,1.549971,-3.672876,-3.777664,5.001153,4.127933,4.013741,3.612500,0.486928,5.314374,6.155814,3.609592,-9.349091,-5.262864,-9.004262,-0.472370,3.145985,-3.109834,4.023870,-6.494705,-4.175275,-8.022649,5.414119,-9.081976,-9.634858,-4.118389,-6.399269,-3.652746,-9.225133,-9.592231,-9.166419,3.724680,-3.723932,4.197904,-8.071347,-4.415869,9.483462,-0.347491,3.093264,-6.969466,-4.919993,6.580645,-3.023839,2.173811,-3.871302,6.363275,-2.427835,-4.181984,1.639460,4.527509,7.637495,-0.963330,-5.495581,-0.678696,-5.632033,0.209505,9.246113,5.622799,-0.722461,3.415321,-2.391939,2.662638,3.186413,8.022364,6.874088,-1.404230,7.580602,-9.644256,5.011135,5.825998,8.865553,-4.221808,3.825120,-3.116022,-7.622808,-3.143887,5.151664,-2.641175,-1.656569,6.472404,-8.620230,-0.877340,-6.693456,2.755295,7.294013,5.904794,1.748502,-2.618613,9.179671,-7.711965,-5.060589,-6.632948,7.978832,-4.849146,8.421559,7.333977,2.262533,6.640358,-2.806712,4.290533,5.957426]], dtype = "float32")#candidate|4740|(14, 240)|const|float32
call_4739 = relay.TupleGetItem(func_4627_call(relay.reshape(const_4740.astype('float32'), [420, 8])), 0)
call_4741 = relay.TupleGetItem(func_4630_call(relay.reshape(const_4740.astype('float32'), [420, 8])), 0)
uop_4749 = relay.log(call_4739.astype('float32')) # shape=(420, 8)
uop_4751 = relay.log(call_4741.astype('float32')) # shape=(420, 8)
output = relay.Tuple([call_4730,call_4734,const_4735,const_4736,const_4740,uop_4749,])
output2 = relay.Tuple([call_4731,call_4737,const_4735,const_4736,const_4740,uop_4751,])
func_4753 = relay.Function([], output)
mod['func_4753'] = func_4753
mod = relay.transform.InferType()(mod)
output = func_4753()
func_4754 = relay.Function([], output)
mutated_mod['func_4754'] = func_4754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4753_call = mod.get_global_var('func_4753')
func_4754_call = mutated_mod.get_global_var('func_4754')
call_4764 = relay.TupleGetItem(func_4753_call(), 0)
call_4765 = relay.TupleGetItem(func_4754_call(), 0)
output = call_4764
output2 = call_4765
func_4775 = relay.Function([], output)
mod['func_4775'] = func_4775
mod = relay.transform.InferType()(mod)
output = func_4775()
func_4776 = relay.Function([], output)
mutated_mod['func_4776'] = func_4776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3248_call = mod.get_global_var('func_3248')
func_3249_call = mutated_mod.get_global_var('func_3249')
call_4803 = relay.TupleGetItem(func_3248_call(), 1)
call_4804 = relay.TupleGetItem(func_3249_call(), 1)
func_927_call = mod.get_global_var('func_927')
func_932_call = mutated_mod.get_global_var('func_932')
const_4807 = relay.const([-1,2,8,-8,-5,7,5,1,-7,6,-6,-9,8,-10,8,1,-8,-1,8,3,4,-5,4,-4,4,-4,2,5,-9,1,4,-7,4,-9,1,-8,-2,4,10,-8,10,7,5,-2,-8,-4,-6,3,10,4,3,-6,4,-4,8,9,4,-9,-9,-5,-3,-7,1,1,-1,-5,-7,-1,1,-3,7,-8,-9,2,-6,-3,8,-10,-2,-2,-3,7,-8,-1,4,-7,-8,-4,9,-5,4,6,9,-1,-6,-4,-8,1,1,-4,-7,-8,5,4,-5,-1,-10,-1,4,2,4,10,-8,9,-4,4,5,8,1,4,-2,7,5,-1,-1,-10,10,1,5,-7,5,10,-5,-10,10,-6,-10,-2,-2,-5,-7,-10,-6,-5,2,-8,5,-5,-6,-9,-8,7,-8,4,-6,-3,-1,-2,-3,-8,10,10,-5,8,-1,-8,-1,-8,7,-9,10,-8,2,-9,-8,9,-2,5,-5,1,-1,-6,5,3,7,-7,-3,-7,-4,1,-1,7,-1,-3,9,-4,-2,-5,6,10,-2,-8,9,-2,-10,-2,5,-6,-6,-3,-4,5,7,4,-10,7,-1,-8,10,3,5,3,-9,-6,-10,9,-6,-10,6,8,-6,9,10,8,-9,10,-10,-4,1,-3,-9,-5,-9,-9,8,-3,4,2,3,-6,4,-8,10,-3,-2,-4,-3,7,3,-8,-7,7,-7,7,-2,-2,-2,1,2,5,-2,-8,-9,8,-3,4,9,1,-2,-6,3,9,10,-9,3,8,-4,-2,-1,6,-7,4,-4,2,3,-8,-5,6,-6,8,9,-9,-4,8,3,9,-6,4,8,-4,3,1,-1,-5,-10,-10,-1,-3,-2,-10,5,-3,-2,1,-4,-5,8,-6,3,-8,4,-3,7,-10,7,1,9,2,-2,3,9,2,-4,-6,10,9,2,-9,-9,7,8,7,2,9,2,10,4,9,-2,6,-3,-6,-8,-5,3,-1,7,-8,-7,3,-3,-3,4,-4,10,-8,4,7,8,-8,-3,-4,9,1,9,7,6,-6,3,9,-9,-8,3,-4,9,-4,1,3,7,7,-8,7,-6,8,-2,-5,-4,-3,-10,9,-9,10,-10,1,8,5,-2,-2,5,8,-7,-10,7,9,2,-5,-9,-2,-9,-6,3,-1,-4,-3,-4,-8,-5,-1,2,10,-8,-5,-9,7,2,-2,-7,-1,-9,9,9,-2,8,9,-5,-3,1,1,-7,-7,-4,-5,6,-3,2,6,-1,-8,-4,-8,3,4,-1,5,5,-6,-4,1,9,-3,-6,-4,9,-8,8,-4,7,-6,-4,4,-6,-10,5,8,-7,-7,-2,-2,3,-4,5,-4,7,-1,-3,-4,-7,-9,8,-8,-10,10,6,-5,-3,1,-8,-10,-3,9,6,-6,8,7,5,-4,8,9,7,4,2,6,8,-8,-7,-8,-10,5,-10,-5,8,9,3,-2,1,-10,9,6,4,-10,-9,-1,5,-9,10,9,5,-6,8,-9,-3,-6,5,-2,6,-9,2,-5,7,1,8,-9,-10,1,4,10,9,2,8,4,-7,10,-4,-6,7,-2,9,-7,-6,-8,-10,-8,2,4,7,5,-2,5,8,-9,-1,1,2,-1,-8,-9,-5,7,8,-9,-3,10,7,-3,9,1,3,-1,4,3,1,10,8,5,-1,2,-1,1,-10,-5,6,-10,-2,4,-3,5,9,-9,-5,3,-1,1,-7,-9,7,-5,-2,4,6,-7,6,-4,-9,2,-1,3,-9,-3,-7,3,-6,8,3,-1,3,9,-2,-4,10,-7,8,3,4,-4,-6,-6,-3,-2,8,5,-1,-1,-1,-4,-1,-4,-2,-8,2,-7,9,3,-10,10,8,9,4,-2,7,8,8,-8,-8,9,8,-8,-1,-1,-6,9,6,3,10,-5,-1,4,6,2,-6,-5,8,1,6,10,-1,-10,-7,-9,8,3,-8,9,-6,-1,3,-7,3,10,-10,-3,-9,9,6,4,-3,-3,1,6,-4,-2,-5,8,8,7,-10,10,5,-9,9,-5,8,3,10,9,-8,-3,-1,-3,2,-9,-2,4,-10,8,-6,-2,-1,-6,-6,-8,-7,1,3,8,-2,8,4,1,4,-3,-4,-7,-2,7,1,4,4,7,-9,-3,-10,5,2,9,-7,8,-9,-4,7,9,-7,-7,10,10,-7,-10,-1,-2,-3,9,-3,-9,2,-1,7,9,7,-8,-8,-6,-9,-1,-3,5,3,-6,-1,-7,10,-1,2,-4,-4,5,9,8,-2,-2,3,1,-1,10,-3,2,7,-4,-3,-7,1,10,5,-1,6,-2,-1,5,-3,2,4,-1,9,-1,6,-9,9,-8,-7,1,-2,-2,-7,3,-2,6,-10,8,-4,2,-6,-8,2,1,-5,-3,-7,-10,-4,4,1,-3,-1,-10,1,-7,-3,-3,-1,4,-7,2,6,8,-8,-5,6,-10,10,-2,-2,-9,1,1,6,-7,4,7,-5,9,1,2,3,-2,10,5,2,8,-6,5,-6,-7,6,-10,10,4,-3,-9,-8,1,-7,-1,-2,2,8,4,-2,4,-4,10,-6,-7,3,-7,-9,1,9,-2,-1,-3,-2,4,-5,-5,-5,-4,1,9,-5,7,7,9,9,6,-6,10,-5,3,5,8,-2,2,-2,-7,9,3,3,-1,3,-2,-8,6,-1,1,4,-7,-4,10,-9,-4,-3,4,1,8,-5,-3,-5,4,6,3,9,-6,10,-8,3,9,1,1,1,5,10,-8,-7,-2,-2,-4,-4,1,-8,-4,2,-8,5,4,9,-1,-1,7,-1,-2,-3,-3,1,-2,2,-10,7,9,7,9,7,8,-9,6,1,5,6,-2,2,6,8,-10,3,-7,3,8,-6,-7,-9,-6,-1,-6,-7,-4,10,2,-5,3,2,-8,-7,-6,-3,9,6,-6,-4,-5,-1,-9,10,-1,6,3,-5,6,7,7,4,6,1,8,6,-6,2,-10,-9,-7,4,-6,1,4,-3,-2,9,9,-1,5,10,-4,9,5,2,4,2,-8,-1,10,3,4,-9,-2,-10,8,10,-2,-4,8,1,-6,3,3,-4,9,5,9,-6,6,8,8,4,7,-1,7,-9,2,-5,-8,-9,8,2,-10,10,8,10,6,-8,-5,1,8,3,4,6,-10,-10,-9,-8,3,-6,6,7,-1,8,-3,-6,-9,-2,10,4,2,-10,8,-9,6,4,-3,-5,-7,10,1,2,6,2,3,-6,2,4,-4,3,-10,3,7,8,10,-5,-2,3,-10,-6,5,-7,-9,-8,-4,4,-7,7,-4,9,1,-7,10,2,8,-4,9,-1,10,1,10,10,-2,-5,-2,-10,-8,-7,-8,-10,-7,9,-4], dtype = "int64")#candidate|4807|(1260,)|const|int64
const_4808 = relay.const([[2,3,-9,-10,9,9,-4,-6,-5,2,-1,10,6,-10,1,-10,-10,-4,-7,-3,6,-6,9,5,-8,-9,-7,1,-4,6,1,-6,-10,-1,-7,-1,-6,-5,-1,-9,7,-8,-9,-8,9,6,-1,-2,5,7,-8,4,7,9,10,-7,-7,3,-3,7,-6,-6,7,9,-3,-5,5,7,1,-10,-5,9,-3,10,-3,1,-1,-6,7,2,2,-3,7,2,7,8,-10,-7,-9,-8,5,-10,6,-7,-3,-3,6,-5,7,10,9,7,5,2,-1,4,2,2,-2,-1,8,2,-9,7,-4,9,5,3,-1,3,7,-10,1,-7,3,-10,1,6,-8,-7,10,-8,-5,4,-7,-10,4,5,1,10,9,4,-3,3,3,-6,9,9,-4,-2,2,7,-1,3,4,6,5,-7,-2,10,2,8,9,-7,-2,5,-10,-10,-7,-3,-6,6,10,-10,6,6,5,3,-5,6,-9,1,-5,10,-6,3,-3,3,-6,4,2,-2,-7,-10,5,-10,-9,4,4,8,-9,1,-1,3,-9,9,-10,10,-6,-2,8,-5,-2,3,-7,5,-1,7,-3,9,-1,7,9,-9,-10,6,-2,7,4,-2,-10,-6,-7,2,3,-4,-2,-6,-10,8,7,-8,-6,4,6,10,7,4,9,4,9,-6,10,-2,8,-10,3,-5,4,1,-9,3,-7,10,5,9,1,-7,-9,1,8,-6,9,1,3,1,-5,10,3,9,3,4,-3,-6,9,-4,9,9,3,1,-4,-10,1,2,-7,4,8,5,-10,-6,8,-5,1,-7,5,-10,2,-9,-7,7,-1,5,8,1,-9,-6,-8,-6,-6,-1,10,-2,-1,-5,2,-4,2,2,-9,7,-1,-7,-5,-8,-5,-4,2,7,-8,4,2,-5,-9,-4,10,-8,-6,2,9,4,10,-1,5,8,8,-3,1,-7,-3,-9,-4,-5,-4,-4,6,-1,6,-1,-7,4,2,-10,-5,3,7,2,9,-2,4,-9,3,-9,1,-2,10,8,3,-4,4,-8,-9,2,10,2,9,-6,-3,-3,-4,7,-3,3,2,6,-5,6,-7,-2,2,2,-9,-6,-3,9,6,-9,-2,4,-2,-1,-3,10,5,8,8,-9,-8,9,3,-9,7,-7,4,2,-10,-4,-10,-4,8,2,-9,3,5,-1,4,-9,-9,10,6,9,5,-10,8,9,3,2,-2,1,8,10,-3,-1,-5,-6,-2,-8,8,3,-9,4,6,6,-10,7,-1,10,-6,-6,3,-4,7,-4,-8,-5,-3,-1,-4,7,7,1,-1,-2,3,9,-10,-3,-3,-3,7,-9,4,7,8,1,-8,-3,-7,-7,3,-8,-7,1,9,-2,-2,7,3,-6,-8,4,1,-6,-2,-9,-8,-7,10,-6,2,5,1,9,-6,2,-4,-9,-6,3,7,-3,1,-2,8,7,-8,-3,6,2,9,-5,2,7,-10,-6,-4,-4,6,5,-3,-3,7,-1,-10,-7,7,-3,8,9,-2,-9,-1,-3,-10,-3,1,6,-6,2,-10,-6,-1,-7,8,-10,-2,-9,3,-2,-10,-6,4,10,-8,5,-3,6,9,4,-1,10,-3,-6,10,-9,-6,-3,6,-2,8,-2,-8,3,-2,-7,-3,-6,-5,-5,4,-7,-9,-3,-4,1,2,-2,-4,8,-4,-10,-1,5,3,-2,4,-7,2,9,-5,-7,-4,9,-4,5,-3,6,1,9,1,-1,1,-9,-10,-8,-7,-5,-5,-10,-1,-8,-9,-8,6,-6,-9,4,-7,-4,9,5,8,-10,2,4,6,10,8,10,7,3,-5,9,-9,-10,-4,8,-4,-5,-10,-2,2,-6,3,-4,-1,8,3,-7,-10,-3,-1,6,-1,2,1,10,7,2,9,10,-3,6,-8,2,-2,-2,-8,-10,9,-8,7,2,3,6,1,4,6,4,6,2,1,-3,-2,7,5,4,5,-8,1,2,1,6,7,5,-5,1,3,-6,7,10,9,3,-9,2,-8,4,2,9,1,3,3,4,8,-2,-1,6,-4,4,4,7,-2,-1,10,-4,-6,-9,-2,4,10,6,6,-3,-3,-8,-5,-8,6,1,-9,-9,3,5,-8,7,3,-1,-5,3,-1,4,-6,5,2,-7,3,8,-3,-1,-2,-1,4,-5,-6,7,-9,-5,3,-6,6,-8,1,-4,8,5,6,4,6,8,-10,-1,-8,-6,6,8,7,-2,-1,-3,6,9,-2,3,-6,3,-8,7,-1,-8,8,3,-1,4,-3,-1,4,10,-6,-7,-4,8,-5,7,-1,4,-3,5,-2,-6,-7,-4,10,1,7,-6,-8,-2,-3,-8,-7,2,-9,-4,7,6,10,6,-3,3,5,-10,6,-6,4,3,-8,1,-3,10,8,3,5,-7,-4,-8,-2,2,4,-8,5,2,-6,3,-10,9,-9,6,-2,4,-5,-5,-3,-4,-6,-5,-4,6,-2,1,-2,-1,-5,-8,-2,-2,-5,4,3,-6,2,10,10,8,-5,-3,-3,1,-3,-2,-1,10,1,-3,1,3,-1,-9,-1,3,8,-4,-10,9,-5,-8,7,-10,1,-3]], dtype = "uint16")#candidate|4808|(1, 968)|const|uint16
call_4806 = relay.TupleGetItem(func_927_call(relay.reshape(const_4807.astype('int64'), [15, 7, 12]), relay.reshape(const_4807.astype('int64'), [15, 7, 12]), relay.reshape(const_4808.astype('uint16'), [968,]), ), 2)
call_4809 = relay.TupleGetItem(func_932_call(relay.reshape(const_4807.astype('int64'), [15, 7, 12]), relay.reshape(const_4807.astype('int64'), [15, 7, 12]), relay.reshape(const_4808.astype('uint16'), [968,]), ), 2)
output = relay.Tuple([call_4803,call_4806,const_4807,const_4808,])
output2 = relay.Tuple([call_4804,call_4809,const_4807,const_4808,])
func_4816 = relay.Function([], output)
mod['func_4816'] = func_4816
mod = relay.transform.InferType()(mod)
output = func_4816()
func_4817 = relay.Function([], output)
mutated_mod['func_4817'] = func_4817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mod.get_global_var('func_3948')
func_3950_call = mutated_mod.get_global_var('func_3950')
call_4898 = func_3948_call()
call_4899 = func_3948_call()
output = relay.Tuple([call_4898,])
output2 = relay.Tuple([call_4899,])
func_4907 = relay.Function([], output)
mod['func_4907'] = func_4907
mod = relay.transform.InferType()(mod)
output = func_4907()
func_4908 = relay.Function([], output)
mutated_mod['func_4908'] = func_4908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4723_call = mod.get_global_var('func_4723')
func_4724_call = mutated_mod.get_global_var('func_4724')
call_4924 = relay.TupleGetItem(func_4723_call(), 0)
call_4925 = relay.TupleGetItem(func_4724_call(), 0)
var_4933 = relay.var("var_4933", dtype = "float32", shape = (4, 15, 7))#candidate|4933|(4, 15, 7)|var|float32
bop_4934 = relay.bitwise_and(call_4924.astype('int16'), relay.reshape(var_4933.astype('int16'), relay.shape_of(call_4924))) # shape=(4, 15, 7)
bop_4937 = relay.bitwise_and(call_4925.astype('int16'), relay.reshape(var_4933.astype('int16'), relay.shape_of(call_4925))) # shape=(4, 15, 7)
func_4627_call = mod.get_global_var('func_4627')
func_4630_call = mutated_mod.get_global_var('func_4630')
var_4941 = relay.var("var_4941", dtype = "float32", shape = (840, 4))#candidate|4941|(840, 4)|var|float32
call_4940 = relay.TupleGetItem(func_4627_call(relay.reshape(var_4941.astype('float32'), [420, 8])), 0)
call_4942 = relay.TupleGetItem(func_4630_call(relay.reshape(var_4941.astype('float32'), [420, 8])), 0)
uop_4946 = relay.tan(bop_4934.astype('float64')) # shape=(4, 15, 7)
uop_4948 = relay.tan(bop_4937.astype('float64')) # shape=(4, 15, 7)
var_4950 = relay.var("var_4950", dtype = "float64", shape = (4, 15, 7))#candidate|4950|(4, 15, 7)|var|float64
bop_4951 = relay.mod(uop_4946.astype('float64'), relay.reshape(var_4950.astype('float64'), relay.shape_of(uop_4946))) # shape=(4, 15, 7)
bop_4954 = relay.mod(uop_4948.astype('float64'), relay.reshape(var_4950.astype('float64'), relay.shape_of(uop_4948))) # shape=(4, 15, 7)
output = relay.Tuple([call_4940,var_4941,bop_4951,])
output2 = relay.Tuple([call_4942,var_4941,bop_4954,])
func_4964 = relay.Function([var_4933,var_4941,var_4950,], output)
mod['func_4964'] = func_4964
mod = relay.transform.InferType()(mod)
mutated_mod['func_4964'] = func_4964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4964_call = mutated_mod.get_global_var('func_4964')
var_4966 = relay.var("var_4966", dtype = "float32", shape = (4, 15, 7))#candidate|4966|(4, 15, 7)|var|float32
var_4967 = relay.var("var_4967", dtype = "float32", shape = (840, 4))#candidate|4967|(840, 4)|var|float32
var_4968 = relay.var("var_4968", dtype = "float64", shape = (4, 15, 7))#candidate|4968|(4, 15, 7)|var|float64
call_4965 = func_4964_call(var_4966,var_4967,var_4968,)
output = call_4965
func_4969 = relay.Function([var_4966,var_4967,var_4968,], output)
mutated_mod['func_4969'] = func_4969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3320_call = mod.get_global_var('func_3320')
func_3321_call = mutated_mod.get_global_var('func_3321')
call_4984 = relay.TupleGetItem(func_3320_call(), 0)
call_4985 = relay.TupleGetItem(func_3321_call(), 0)
var_4992 = relay.var("var_4992", dtype = "float32", shape = (4, 15, 7))#candidate|4992|(4, 15, 7)|var|float32
bop_4993 = relay.bitwise_or(call_4984.astype('int8'), relay.reshape(var_4992.astype('int8'), relay.shape_of(call_4984))) # shape=(4, 15, 7)
bop_4996 = relay.bitwise_or(call_4985.astype('int8'), relay.reshape(var_4992.astype('int8'), relay.shape_of(call_4985))) # shape=(4, 15, 7)
uop_4999 = relay.atanh(var_4992.astype('float64')) # shape=(4, 15, 7)
output = relay.Tuple([bop_4993,uop_4999,])
output2 = relay.Tuple([bop_4996,uop_4999,])
func_5003 = relay.Function([var_4992,], output)
mod['func_5003'] = func_5003
mod = relay.transform.InferType()(mod)
var_5004 = relay.var("var_5004", dtype = "float32", shape = (4, 15, 7))#candidate|5004|(4, 15, 7)|var|float32
output = func_5003(var_5004)
func_5005 = relay.Function([var_5004], output)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3709_call = mod.get_global_var('func_3709')
func_3711_call = mutated_mod.get_global_var('func_3711')
call_5092 = relay.TupleGetItem(func_3709_call(), 0)
call_5093 = relay.TupleGetItem(func_3711_call(), 0)
uop_5105 = relay.log10(call_5092.astype('float64')) # shape=(420, 1)
uop_5107 = relay.log10(call_5093.astype('float64')) # shape=(420, 1)
func_107_call = mod.get_global_var('func_107')
func_109_call = mutated_mod.get_global_var('func_109')
const_5109 = relay.const([[8,-5,10,-3,2,-7,-5,4,6,-6,8,3,-7,10,4,-9,2,3,6,8,-10,-2,-5,-8,8,-8,-3,-10,3,-2,-8,7,-5,-3,-8,10,7,6,10,-10,10,-5,-8,-3],[-6,6,-8,-5,5,3,-8,-5,6,-4,-7,-5,4,-2,-6,1,-2,6,-2,-10,-7,-4,7,-8,1,9,8,-5,-5,-3,1,-3,-3,-2,7,3,8,-9,-7,8,-2,-5,5,3],[8,1,1,2,-2,-8,8,-3,7,1,-10,1,8,-2,-10,2,-10,7,8,5,6,7,5,2,3,-7,4,2,-5,-4,-9,3,1,3,9,-7,3,1,-5,1,6,-10,-7,-4],[-9,7,5,9,8,-5,-2,-2,-8,7,5,3,8,-4,6,-7,-6,-2,4,7,3,-1,-6,-4,-7,10,-8,5,-8,1,9,-8,-2,-8,-2,-10,-8,-2,5,9,-4,4,-5,10],[-2,-7,6,-7,-6,7,-7,4,10,-10,-1,-7,-9,1,-1,-7,-9,-5,-10,7,5,-7,-1,-10,7,5,8,-7,2,2,6,-8,6,3,-6,-3,4,-3,-10,-7,-2,7,4,-8],[-3,-2,2,5,5,-5,8,-10,-5,-9,-8,4,-9,-10,6,-9,-10,7,3,1,1,7,-3,2,-3,-3,-7,9,-7,-9,8,-1,1,2,1,1,1,-9,-6,10,-4,-8,-1,5],[9,10,-3,6,10,-5,-5,-1,4,-9,-5,-10,4,-7,9,3,-7,-5,-6,4,1,7,8,2,-9,2,10,10,2,-10,-3,-8,8,1,-6,-9,4,5,-3,-4,6,8,-2,1],[-8,-6,4,1,7,5,7,-10,-2,-5,-10,1,6,3,8,3,-4,6,1,9,7,3,10,7,8,10,10,7,9,-8,-3,2,8,-3,-3,-10,6,6,-5,-9,6,5,1,4],[10,-6,2,8,3,-10,-6,9,-2,-2,-2,3,2,-4,8,2,1,-2,-5,-3,-4,9,3,-5,-4,3,-8,4,4,1,-5,1,3,8,-4,8,-6,-9,4,-4,-9,-6,5,6],[-7,3,-10,-9,8,10,-10,1,7,5,-3,2,7,-10,-10,-4,-5,-1,1,-7,1,10,-10,-7,2,8,10,9,2,2,8,-8,-2,8,-3,4,-6,5,-7,1,-4,-5,1,-6],[7,-4,3,-8,5,2,-2,-9,-3,4,-7,-1,6,-7,-2,-1,-10,-4,10,-2,7,-2,10,-9,8,-3,10,5,-2,4,-7,2,1,10,7,8,-6,7,4,9,1,4,-7,-7],[3,-2,-6,8,10,1,-2,3,9,-3,8,-4,3,-8,9,9,7,-4,4,4,-2,3,-6,-9,10,10,4,-5,-2,-7,-10,-6,-6,2,2,5,-1,-5,9,-1,-8,7,5,-8],[4,-9,-10,1,-5,7,9,9,-4,-6,-2,2,-8,-1,10,9,5,-8,4,2,-2,-5,2,-10,2,-9,-3,-4,9,-5,9,3,-5,-10,10,-6,-2,3,7,-2,9,5,2,4],[-7,2,-6,-9,-4,8,4,6,5,1,3,4,5,-4,9,10,-9,-3,5,-4,4,5,-5,3,2,-5,7,5,-9,9,-6,-5,1,-10,1,-9,7,2,-7,-4,-6,2,-10,-5],[5,-8,-3,8,2,-2,1,7,-5,9,-3,3,-6,3,1,7,-2,-8,10,10,-3,5,6,-1,-3,5,7,-5,2,-1,8,10,2,6,4,-4,-2,1,4,-9,4,3,1,-6],[-8,5,-4,-5,-4,10,10,-7,6,-8,-1,7,10,-9,-8,3,4,9,6,-4,-8,10,-10,-10,-6,7,9,5,4,2,2,5,5,2,1,-2,4,-8,-1,-1,1,4,-1,-9],[6,-6,-7,2,6,-3,-4,7,7,10,-8,-4,-10,8,1,6,-9,6,3,9,-4,8,9,3,5,-3,8,-1,-8,-10,6,-6,8,2,10,3,-4,-1,10,-9,9,5,1,-6],[5,-10,3,8,8,5,1,-1,2,-10,-5,-5,-4,4,8,-6,5,4,10,9,1,-5,3,9,-7,6,-9,8,3,9,-9,4,1,-2,-9,-10,-7,5,10,-7,-5,10,-6,-9],[8,2,-3,5,-6,6,10,-8,-10,8,8,-8,8,9,4,-5,-6,-4,-3,4,6,5,-7,-2,7,-8,5,8,-3,7,4,4,9,2,6,1,7,7,-10,-2,1,2,7,-1],[-6,2,2,-4,3,-5,4,-3,4,7,-1,1,-3,9,-2,2,1,-1,-9,4,-3,-1,4,9,5,2,-9,9,-5,-3,1,6,-1,-2,4,-4,-4,-5,10,6,4,-9,-10,-6],[-9,3,-6,9,-8,10,1,-10,-9,-3,2,2,7,10,2,-2,5,-10,-4,10,1,5,-4,-7,3,1,1,-3,9,-8,7,3,-5,5,-1,3,-5,-6,-5,-3,4,6,-1,4],[10,2,-1,-1,7,8,-1,2,1,-6,-10,7,-4,7,-9,5,4,9,2,4,4,-5,-4,2,4,2,-6,6,-9,7,-8,7,10,9,-6,9,-6,-4,3,4,3,-9,-2,-10]], dtype = "uint16")#candidate|5109|(22, 44)|const|uint16
call_5108 = func_107_call(relay.reshape(const_5109.astype('uint16'), [8, 11, 11]))
call_5110 = func_107_call(relay.reshape(const_5109.astype('uint16'), [8, 11, 11]))
bop_5112 = relay.power(const_5109.astype('float64'), relay.reshape(call_5108.astype('float64'), relay.shape_of(const_5109))) # shape=(22, 44)
bop_5115 = relay.power(const_5109.astype('float64'), relay.reshape(call_5110.astype('float64'), relay.shape_of(const_5109))) # shape=(22, 44)
func_4723_call = mod.get_global_var('func_4723')
func_4724_call = mutated_mod.get_global_var('func_4724')
call_5119 = relay.TupleGetItem(func_4723_call(), 0)
call_5120 = relay.TupleGetItem(func_4724_call(), 0)
output = relay.Tuple([uop_5105,bop_5112,call_5119,])
output2 = relay.Tuple([uop_5107,bop_5115,call_5120,])
func_5142 = relay.Function([], output)
mod['func_5142'] = func_5142
mod = relay.transform.InferType()(mod)
mutated_mod['func_5142'] = func_5142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mutated_mod.get_global_var('func_5142')
call_5143 = func_5142_call()
output = call_5143
func_5144 = relay.Function([], output)
mutated_mod['func_5144'] = func_5144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mod.get_global_var('func_3948')
func_3950_call = mutated_mod.get_global_var('func_3950')
call_5183 = func_3948_call()
call_5184 = func_3948_call()
var_5188 = relay.var("var_5188", dtype = "float64", shape = (13, 3, 12))#candidate|5188|(13, 3, 12)|var|float64
bop_5189 = relay.subtract(call_5183.astype('int64'), relay.reshape(var_5188.astype('int64'), relay.shape_of(call_5183))) # shape=(13, 3, 12)
bop_5192 = relay.subtract(call_5184.astype('int64'), relay.reshape(var_5188.astype('int64'), relay.shape_of(call_5184))) # shape=(13, 3, 12)
bop_5196 = relay.divide(call_5183.astype('float32'), relay.reshape(var_5188.astype('float32'), relay.shape_of(call_5183))) # shape=(13, 3, 12)
bop_5199 = relay.divide(call_5184.astype('float32'), relay.reshape(var_5188.astype('float32'), relay.shape_of(call_5184))) # shape=(13, 3, 12)
output = relay.Tuple([bop_5189,bop_5196,])
output2 = relay.Tuple([bop_5192,bop_5199,])
func_5212 = relay.Function([var_5188,], output)
mod['func_5212'] = func_5212
mod = relay.transform.InferType()(mod)
mutated_mod['func_5212'] = func_5212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5213 = relay.var("var_5213", dtype = "float64", shape = (13, 3, 12))#candidate|5213|(13, 3, 12)|var|float64
func_5212_call = mutated_mod.get_global_var('func_5212')
call_5214 = func_5212_call(var_5213)
output = call_5214
func_5215 = relay.Function([var_5213], output)
mutated_mod['func_5215'] = func_5215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mod.get_global_var('func_3948')
func_3950_call = mutated_mod.get_global_var('func_3950')
call_5225 = func_3948_call()
call_5226 = func_3948_call()
output = call_5225
output2 = call_5226
func_5246 = relay.Function([], output)
mod['func_5246'] = func_5246
mod = relay.transform.InferType()(mod)
mutated_mod['func_5246'] = func_5246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5246_call = mutated_mod.get_global_var('func_5246')
call_5247 = func_5246_call()
output = call_5247
func_5248 = relay.Function([], output)
mutated_mod['func_5248'] = func_5248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4907_call = mod.get_global_var('func_4907')
func_4908_call = mutated_mod.get_global_var('func_4908')
call_5253 = relay.TupleGetItem(func_4907_call(), 0)
call_5254 = relay.TupleGetItem(func_4908_call(), 0)
output = relay.Tuple([call_5253,])
output2 = relay.Tuple([call_5254,])
func_5257 = relay.Function([], output)
mod['func_5257'] = func_5257
mod = relay.transform.InferType()(mod)
output = func_5257()
func_5258 = relay.Function([], output)
mutated_mod['func_5258'] = func_5258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5285 = relay.var("var_5285", dtype = "uint8", shape = (9, 8, 1))#candidate|5285|(9, 8, 1)|var|uint8
var_5286 = relay.var("var_5286", dtype = "uint8", shape = (9, 8, 14))#candidate|5286|(9, 8, 14)|var|uint8
bop_5287 = relay.bitwise_xor(var_5285.astype('uint8'), var_5286.astype('uint8')) # shape=(9, 8, 14)
uop_5294 = relay.atanh(var_5285.astype('float32')) # shape=(9, 8, 1)
func_4075_call = mod.get_global_var('func_4075')
func_4077_call = mutated_mod.get_global_var('func_4077')
call_5311 = func_4075_call()
call_5312 = func_4075_call()
uop_5319 = relay.tan(uop_5294.astype('float32')) # shape=(9, 8, 1)
bop_5321 = relay.bitwise_xor(uop_5319.astype('uint32'), relay.reshape(uop_5294.astype('uint32'), relay.shape_of(uop_5319))) # shape=(9, 8, 1)
output = relay.Tuple([bop_5287,call_5311,bop_5321,])
output2 = relay.Tuple([bop_5287,call_5312,bop_5321,])
func_5324 = relay.Function([var_5285,var_5286,], output)
mod['func_5324'] = func_5324
mod = relay.transform.InferType()(mod)
mutated_mod['func_5324'] = func_5324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5324_call = mutated_mod.get_global_var('func_5324')
var_5326 = relay.var("var_5326", dtype = "uint8", shape = (9, 8, 1))#candidate|5326|(9, 8, 1)|var|uint8
var_5327 = relay.var("var_5327", dtype = "uint8", shape = (9, 8, 14))#candidate|5327|(9, 8, 14)|var|uint8
call_5325 = func_5324_call(var_5326,var_5327,)
output = call_5325
func_5328 = relay.Function([var_5326,var_5327,], output)
mutated_mod['func_5328'] = func_5328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5378 = relay.var("var_5378", dtype = "uint64", shape = (15, 9, 14))#candidate|5378|(15, 9, 14)|var|uint64
const_5379 = relay.const([[[10,-7,1,4,-1,-6,-1,10,10,-10,-7,8,1,-2],[8,-4,-1,3,5,1,-6,-8,1,1,-5,4,4,-3],[-2,5,2,-8,10,-4,9,-10,2,1,5,7,-5,-5],[-2,5,-3,6,10,8,-7,5,-10,10,5,9,5,2],[-4,-2,3,-4,8,2,4,-7,6,7,-9,10,-10,5],[-5,-7,4,-7,7,-5,-1,-2,-9,-6,-3,3,-1,7],[1,7,9,-5,1,9,-3,-4,1,9,-5,7,9,-1],[2,-2,-7,7,10,8,3,-1,2,-1,1,5,7,5],[1,-6,3,-3,6,-6,-3,-10,-2,5,8,8,-7,5]],[[-4,-10,6,7,-6,10,2,8,2,4,-9,-1,6,-6],[2,-9,-4,1,-6,1,-1,-4,9,-10,8,-9,2,5],[9,3,3,-6,-10,8,7,8,10,-1,-3,-4,-7,-9],[-2,9,6,-3,-3,-5,-7,-8,2,-2,-9,-5,-6,-5],[-1,1,9,-7,1,3,8,-6,-4,-9,4,1,4,8],[-5,4,7,1,7,-2,-7,-4,-6,-10,-7,-9,10,-4],[5,6,-7,8,-8,-2,7,5,1,-7,-10,-7,5,7],[5,-10,5,2,8,6,9,3,1,7,7,-9,10,3],[-4,-9,-4,-1,6,-1,-3,2,-6,-5,-3,9,6,-7]],[[7,-10,-2,10,-9,-5,4,1,4,7,-10,-6,-5,-3],[4,7,-9,2,7,7,1,-3,9,-2,9,4,-4,-4],[-7,9,-6,5,-5,-9,7,8,-10,-4,-7,4,6,7],[10,8,-8,-3,5,-4,-2,-1,-8,8,-2,-9,-7,-6],[2,-2,7,-2,-4,3,-2,10,-9,3,-1,-7,5,3],[8,-4,5,3,-3,10,1,-9,-10,4,-9,9,2,-5],[4,9,-7,2,-9,7,1,3,1,-4,-2,-10,-7,-3],[7,-6,-5,-2,-9,6,3,-2,-1,6,-9,-2,-9,4],[-3,7,-4,-10,-9,1,9,6,3,8,-4,-7,-5,6]],[[1,-3,6,4,-4,-6,9,9,-5,1,4,3,4,-5],[-8,4,-10,4,9,-3,-4,-6,-6,-2,1,-10,-1,-4],[-2,-3,-9,-10,5,2,-5,7,-6,2,-9,7,-6,-4],[2,1,7,4,4,-3,-9,-5,2,4,6,-3,10,2],[7,-4,-3,4,-10,4,-2,5,3,-8,1,-6,9,9],[-9,9,10,-6,-10,-3,-7,-4,-7,4,8,-7,-7,-5],[2,10,-6,7,10,-9,4,-1,-2,-1,6,8,-1,-3],[10,7,-2,3,-3,6,-6,6,-10,10,-3,-10,8,3],[7,-10,-3,-8,5,5,-6,3,-7,-9,-5,-8,1,7]],[[7,1,-7,-10,-9,5,2,1,-2,-9,3,-7,-8,-7],[4,10,-6,-5,3,3,-6,7,-2,-7,5,5,-5,-6],[-9,3,7,-5,4,5,-7,-3,-9,-10,-9,7,-10,-1],[5,9,-2,-7,4,1,-4,-9,-9,2,3,8,7,-7],[8,-4,-7,8,5,-6,9,-1,8,-4,2,-4,9,6],[-9,-7,-1,1,5,-5,9,9,1,-3,-10,5,-4,-7],[-2,1,6,-8,8,-2,3,3,-9,9,4,2,-8,8],[-7,-7,7,-10,-5,-7,2,-5,-9,4,-3,-9,-5,-1],[-7,7,3,2,-1,1,1,-10,-9,7,-5,5,5,5]],[[4,-5,4,-6,-5,4,-1,3,-5,6,-1,-2,-5,4],[-1,-10,-2,10,6,-2,-4,-6,-3,6,3,2,2,-10],[-10,-7,-1,10,1,-3,5,5,-4,-2,-1,7,-10,-7],[4,9,2,-7,-2,-10,8,-9,9,-2,-6,-9,5,-2],[4,5,-7,-4,-2,-3,9,-9,-7,7,4,-8,-6,-9],[5,-3,-1,9,-7,-8,-3,5,-4,-8,-5,-8,6,1],[-5,2,4,-10,-8,-6,1,1,-4,-7,-3,3,10,6],[7,10,2,1,9,-4,2,9,-3,-9,-1,7,-1,-9],[-10,-9,-4,1,2,3,-5,8,4,-1,2,-4,-8,4]],[[-1,-2,-9,10,-1,9,-2,5,-7,5,4,8,7,8],[3,5,-4,5,-8,-7,5,-2,-6,6,-2,7,-8,2],[7,1,10,3,2,9,2,-9,-2,8,10,3,7,-7],[-5,2,-7,-1,10,-4,2,2,-9,-5,-4,9,8,-5],[2,-2,1,10,-1,-8,4,3,5,-2,-10,5,7,-7],[6,10,6,-6,9,8,8,1,7,-10,3,9,6,-7],[-6,9,-10,9,-2,6,2,3,9,-3,-10,-3,2,4],[3,-2,10,2,-2,-6,7,-8,-6,-10,3,-3,6,-5],[7,-8,-3,-1,2,10,8,8,10,6,-5,10,2,2]],[[-9,-6,-6,-9,5,-1,5,10,-1,-9,-4,-4,-3,-10],[8,-5,-9,-5,5,6,-4,-8,-2,2,-7,-4,-10,-4],[5,-10,-8,-1,-3,-3,-10,10,-10,3,-7,5,10,8],[10,-2,8,7,4,2,-4,-8,8,8,-6,-9,-10,6],[-6,9,-6,10,-1,-9,-4,-4,8,5,-2,3,4,1],[-10,3,3,1,-10,-3,-7,10,5,-2,-8,8,-9,-9],[7,-6,-1,3,10,-3,-5,5,-1,5,-1,-9,-3,-10],[-10,-7,3,5,4,-5,-2,-9,7,10,1,3,2,10],[9,-10,-10,-7,10,-6,10,1,2,-10,3,8,-5,5]],[[-3,7,-4,-10,-5,9,8,10,-9,-1,-10,-1,-1,9],[9,5,9,-1,-10,9,-9,1,-4,-7,-3,-3,9,9],[2,-6,-2,-3,5,-3,-7,2,-3,-3,-5,9,9,4],[7,-6,1,-9,4,-3,-6,-6,1,8,1,10,-2,-8],[4,-8,5,-9,7,1,-2,2,3,2,8,-7,-1,-8],[7,-5,6,-1,7,-7,-9,-6,5,10,8,9,2,-6],[2,-8,-8,1,4,6,3,8,4,-3,-3,-4,-5,-8],[10,1,-10,2,-10,3,-4,-7,-4,8,-8,4,6,-4],[-4,9,8,5,-9,-5,1,-4,9,-1,8,-9,-2,8]],[[3,-10,-4,-1,1,10,5,8,5,1,7,5,3,2],[8,-3,1,10,-4,-8,8,-4,3,-1,8,-10,-5,-8],[10,-4,-9,-3,-2,-8,5,1,3,-8,-9,-5,-10,2],[4,4,2,-4,4,-1,-2,5,6,3,-3,-8,-10,1],[-1,-7,-5,-9,-8,-7,-2,-1,9,4,-1,-5,-7,-9],[7,1,3,3,9,-6,-6,-3,3,-3,-1,-10,-3,7],[9,1,5,5,9,7,-1,7,8,-6,-6,-5,-7,9],[1,1,3,-7,-3,-8,2,2,-2,3,-3,-3,9,5],[-5,5,2,6,-8,-6,5,7,3,3,10,-5,4,-1]],[[-8,-6,-1,-8,8,10,7,9,4,-1,5,2,9,-8],[7,-5,-6,-9,5,9,9,9,7,-8,-6,-10,5,8],[-1,-9,6,5,-9,8,-10,-5,-8,7,-6,8,5,3],[-10,-4,-7,-1,-8,-6,1,-9,3,-3,2,-8,-6,8],[-4,1,-2,-7,7,6,6,-2,-8,-1,-7,-1,6,-7],[8,6,-8,8,-2,-1,-6,-6,-8,1,-9,6,1,-5],[9,-1,-9,8,2,7,2,-4,-4,-1,9,10,-8,-4],[-6,-6,-2,3,-2,9,7,-7,-2,7,1,2,-2,10],[9,-7,-4,1,9,-9,4,-4,-2,2,-4,-3,7,-9]],[[-6,-6,-2,1,7,-3,-7,-7,10,4,4,7,-4,-7],[4,9,4,6,-10,9,2,-4,-4,-1,-2,-6,2,-8],[-4,9,-2,7,-4,9,1,-9,-2,1,4,10,-9,-4],[-10,9,-9,1,5,-5,-2,-2,2,5,4,10,9,4],[8,9,2,3,6,-1,3,-1,10,-1,3,-8,3,-5],[-8,10,-8,-6,-7,-2,-5,6,-10,-5,8,-5,-4,-10],[-3,-9,5,-8,8,-5,-3,10,9,5,2,-2,-8,5],[-1,8,1,4,-7,-1,8,-10,3,8,5,-1,-7,-1],[-9,-8,-1,-6,-6,-8,-5,-5,-7,4,4,-1,-9,-8]],[[-5,-3,3,-9,-8,7,-5,6,-8,-3,-6,4,-10,9],[-7,-6,-5,-9,10,5,2,3,-8,7,8,10,6,-5],[7,6,10,8,-10,-6,-4,-8,4,4,-10,8,9,-3],[-10,-1,-2,-2,-10,-10,7,1,-8,8,10,-3,-2,-8],[9,-8,-10,7,-8,4,7,-6,-1,-6,8,10,9,-8],[-4,-4,10,1,2,1,7,6,1,-8,1,-1,1,6],[-7,-1,-3,-6,-6,4,-7,6,2,7,5,8,-1,-4],[-2,-2,-7,2,7,-2,6,-1,-2,-8,10,-8,1,3],[-4,-4,-1,7,-9,-7,-8,-9,4,-9,6,1,-3,3]],[[6,5,6,6,6,-5,-4,-1,-9,7,8,-2,-5,2],[-3,-1,-2,-8,-6,8,-10,8,3,-6,-10,10,1,6],[-6,-6,-3,7,-3,-8,9,-2,-6,3,-2,4,2,-1],[7,-10,6,-9,3,8,10,3,-9,8,-7,-7,-10,10],[6,-6,1,-3,2,-9,9,-8,-3,-8,-8,-10,-9,-4],[1,-2,5,9,4,4,5,8,1,4,-9,-6,1,1],[-6,-1,-9,1,1,-2,3,10,1,5,5,8,2,-2],[2,4,-8,-3,10,-1,-8,-7,-2,1,6,-7,-3,-5],[-9,-9,10,-8,-10,5,9,-4,-2,-5,7,-10,-2,-4]],[[-2,-2,-7,3,-6,-6,-6,-8,-1,-9,5,-7,-2,7],[-4,10,1,-8,-5,-6,5,-7,6,-5,2,-10,-8,9],[-4,5,-7,-5,-7,9,-7,2,10,3,9,-1,-2,5],[-7,-1,1,2,-10,-8,-3,8,-3,-2,-2,-7,2,1],[10,-3,10,-10,9,9,-1,6,-4,-2,7,-10,-10,1],[6,6,-7,2,5,8,-6,-3,4,10,6,-6,7,-3],[2,9,-5,3,5,1,7,-6,-8,9,10,1,1,-2],[-3,5,10,-3,-10,9,2,-9,-1,2,-4,1,-8,4],[2,-8,-3,-2,9,-8,-4,6,6,2,10,7,5,-2]]], dtype = "uint64")#candidate|5379|(15, 9, 14)|const|uint64
bop_5380 = relay.logical_xor(var_5378.astype('uint64'), relay.reshape(const_5379.astype('uint64'), relay.shape_of(var_5378))) # shape=(15, 9, 14)
output = bop_5380
output2 = bop_5380
func_5394 = relay.Function([var_5378,], output)
mod['func_5394'] = func_5394
mod = relay.transform.InferType()(mod)
var_5395 = relay.var("var_5395", dtype = "uint64", shape = (15, 9, 14))#candidate|5395|(15, 9, 14)|var|uint64
output = func_5394(var_5395)
func_5396 = relay.Function([var_5395], output)
mutated_mod['func_5396'] = func_5396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4816_call = mod.get_global_var('func_4816')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_5409 = relay.TupleGetItem(func_4816_call(), 3)
call_5410 = relay.TupleGetItem(func_4817_call(), 3)
func_3020_call = mod.get_global_var('func_3020')
func_3023_call = mutated_mod.get_global_var('func_3023')
const_5417 = relay.const(-9.036917, dtype = "float64")#candidate|5417|()|const|float64
const_5418 = relay.const([[False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,True,True,True,False,True,False,True],[True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,True,False],[False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,True,True,True,False,False,False],[True,False,True,True,True,True,False,False,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True],[False,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,False,True,False,False,False,True],[True,True,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False],[False,False,True,False,True,False,False,False,True,False,False,True,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,False],[True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True],[False,False,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,True],[True,True,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True]], dtype = "bool")#candidate|5418|(10, 45)|const|bool
call_5416 = relay.TupleGetItem(func_3020_call(relay.reshape(const_5417.astype('float64'), []), relay.reshape(const_5418.astype('bool'), [5, 10, 9]), ), 1)
call_5419 = relay.TupleGetItem(func_3023_call(relay.reshape(const_5417.astype('float64'), []), relay.reshape(const_5418.astype('bool'), [5, 10, 9]), ), 1)
bop_5422 = relay.less_equal(const_5418.astype('bool'), relay.reshape(call_5416.astype('bool'), relay.shape_of(const_5418))) # shape=(10, 45)
bop_5425 = relay.less_equal(const_5418.astype('bool'), relay.reshape(call_5419.astype('bool'), relay.shape_of(const_5418))) # shape=(10, 45)
output = relay.Tuple([call_5409,const_5417,bop_5422,])
output2 = relay.Tuple([call_5410,const_5417,bop_5425,])
func_5438 = relay.Function([], output)
mod['func_5438'] = func_5438
mod = relay.transform.InferType()(mod)
output = func_5438()
func_5439 = relay.Function([], output)
mutated_mod['func_5439'] = func_5439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5257_call = mod.get_global_var('func_5257')
func_5258_call = mutated_mod.get_global_var('func_5258')
call_5459 = relay.TupleGetItem(func_5257_call(), 0)
call_5460 = relay.TupleGetItem(func_5258_call(), 0)
var_5468 = relay.var("var_5468", dtype = "float64", shape = (13, 3, 12))#candidate|5468|(13, 3, 12)|var|float64
bop_5469 = relay.bitwise_and(call_5459.astype('uint16'), relay.reshape(var_5468.astype('uint16'), relay.shape_of(call_5459))) # shape=(13, 3, 12)
bop_5472 = relay.bitwise_and(call_5460.astype('uint16'), relay.reshape(var_5468.astype('uint16'), relay.shape_of(call_5460))) # shape=(13, 3, 12)
output = bop_5469
output2 = bop_5472
func_5477 = relay.Function([var_5468,], output)
mod['func_5477'] = func_5477
mod = relay.transform.InferType()(mod)
mutated_mod['func_5477'] = func_5477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5478 = relay.var("var_5478", dtype = "float64", shape = (13, 3, 12))#candidate|5478|(13, 3, 12)|var|float64
func_5477_call = mutated_mod.get_global_var('func_5477')
call_5479 = func_5477_call(var_5478)
output = call_5479
func_5480 = relay.Function([var_5478], output)
mutated_mod['func_5480'] = func_5480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4075_call = mod.get_global_var('func_4075')
func_4077_call = mutated_mod.get_global_var('func_4077')
call_5482 = func_4075_call()
call_5483 = func_4075_call()
const_5487 = relay.constdtype = "float32")#candidate|5487|(420, 11)|const|float32
bop_5488 = relay.logical_xor(call_5482.astype('int64'), const_5487.astype('int64')) # shape=(420, 11)
bop_5491 = relay.logical_xor(call_5483.astype('int64'), const_5487.astype('int64')) # shape=(420, 11)
output = relay.Tuple([bop_5488,])
output2 = relay.Tuple([bop_5491,])
func_5496 = relay.Function([], output)
mod['func_5496'] = func_5496
mod = relay.transform.InferType()(mod)
output = func_5496()
func_5497 = relay.Function([], output)
mutated_mod['func_5497'] = func_5497
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5521 = relay.const([[[-1.513026,-4.519846,-7.265713,-0.882380,9.763671,-0.132178,5.861986,-0.334245,4.421024,-5.915755,-8.030332,7.596622],[5.531857,-9.018580,-5.473310,6.727986,-8.465867,6.671486,-8.495287,-4.532749,-3.731067,3.040172,8.960674,0.604009],[-1.428310,6.025213,-7.286168,-1.109225,4.363673,9.204544,-7.132648,5.290742,-2.803849,3.160751,-7.263436,-0.793303],[7.887285,-8.875949,4.237811,0.550077,3.858892,4.035045,3.363064,2.303050,-3.809504,3.764264,-7.343265,4.723882],[1.394115,8.683840,-5.314822,-6.842397,2.379874,1.102955,-3.753107,2.931607,3.833920,2.543161,-0.963960,-3.360639],[9.549932,-5.068839,-4.166709,-3.510828,-1.491041,5.267605,8.148568,-8.322484,-3.141577,9.552334,-2.413925,5.241143],[7.813512,3.477480,2.959144,-2.186719,0.378466,-7.361422,7.577236,0.083931,-4.096148,-3.066769,-7.216421,3.905862],[-8.900100,9.478411,9.922981,3.777353,8.832918,-7.015594,-4.691902,4.654919,6.152851,3.295122,-8.179893,8.456577],[6.001265,-5.719319,-7.898073,-2.298969,-9.647334,-6.008062,-9.379335,4.643479,-4.533530,3.087757,-3.711607,-7.700965],[-5.103154,-3.857297,-9.438129,-2.022969,-7.661472,6.883237,-2.383008,9.891402,2.292381,-5.573331,1.587801,7.909022],[8.566159,-6.605558,2.884277,-8.798397,-8.455345,-4.350065,-8.111284,-5.234830,7.421146,2.458517,-0.755637,-5.633643],[-7.583958,4.050761,-8.156170,3.345053,8.822187,-9.771547,-6.036349,4.743049,1.322910,5.248277,-9.952088,-7.272685],[4.902271,8.197935,5.548703,4.372645,-1.726195,5.334786,4.018795,-2.895324,3.217723,6.335425,4.341826,-0.879388]],[[-8.456589,-4.809595,-2.056211,-6.944631,4.611394,6.704456,-8.130903,-3.361616,0.046113,0.036026,4.181641,-3.650674],[-6.614880,-7.926708,-9.707489,9.861839,6.930738,6.737003,-0.166738,7.750299,5.545047,-2.480571,-0.430821,-3.018869],[8.300707,-8.144057,0.915946,2.664574,1.209784,-3.931815,-0.177241,-0.823422,1.483835,1.554403,-9.474311,4.418420],[6.858861,6.232048,0.205272,-1.158677,1.270071,5.625100,2.883101,0.885032,-2.759610,-2.501168,9.947964,-3.854429],[-5.593319,-2.563802,9.725918,-5.867692,-0.860547,-2.206589,5.253444,-5.115794,0.846385,2.800899,-5.009159,8.403468],[-4.566218,5.563667,3.197965,3.709822,-6.596486,-3.010052,3.152912,-3.119581,-1.094817,5.443911,7.496674,-4.077302],[3.821010,8.337903,-6.925623,3.765214,-7.333878,-1.199276,-7.308784,1.059518,-7.201748,-6.126562,-1.430660,9.743992],[7.761346,-5.950426,-6.621200,-1.660093,6.329244,5.631338,-6.646333,-8.702525,7.218112,-5.136659,-7.113949,-0.558373],[8.709331,3.377309,-9.070478,-5.410763,5.046544,-4.873891,-4.515111,-9.927044,8.305960,1.224291,-0.907050,-0.534615],[9.760369,4.274022,9.079153,-7.647141,2.684967,-2.404256,-9.013359,7.078009,-8.083349,6.150765,-2.240215,-1.154423],[4.494042,-3.234939,6.831251,3.362312,3.142385,4.459244,3.585543,-9.120478,2.637301,-1.290334,9.312545,1.536204],[2.831042,-7.023316,-2.410936,6.731778,2.444368,2.434053,0.935305,7.532077,-1.632397,8.620143,-4.428449,-3.691664],[-1.990475,6.986307,-4.056673,4.539653,6.296666,-3.024163,-7.859570,6.192001,7.235926,0.844817,9.205345,1.602468]],[[3.367167,6.870228,-4.002127,9.497829,-0.575144,0.246540,9.020190,0.080901,-7.593204,3.411094,9.910288,-3.027108],[3.802321,8.384490,-1.100282,-9.562296,6.480458,5.077848,9.884533,5.455937,9.520096,8.555633,3.344309,6.155108],[-4.449501,5.599412,0.823220,-7.275887,0.933036,-2.321172,-5.993594,4.453713,-1.997586,-1.418928,5.081531,-0.848926],[-1.437517,4.356913,-0.246834,8.809507,9.209952,-9.784015,0.558797,-1.290388,0.284849,-3.665044,5.889633,4.776616],[4.478079,-4.428880,8.189293,5.808021,-1.521420,-1.249355,-8.500148,3.553676,-7.108815,-8.539813,-4.137958,-8.507367],[6.245437,9.206751,-0.308818,7.885408,-2.041990,-0.290342,-4.510615,3.078632,-3.019677,7.575763,-6.879474,7.815695],[-3.622727,-1.416567,-8.595216,-2.619177,4.407802,-8.591529,9.350916,0.039470,9.361738,3.209670,-9.975949,-0.354125],[-3.433210,7.507443,-7.578959,3.768346,-1.517255,2.159030,-6.741461,7.679636,-4.852677,5.283011,6.525936,6.639645],[-7.530261,-8.353419,-2.253977,-4.849467,-0.272855,2.503517,-0.487884,8.278623,-0.657495,1.296188,3.222038,-9.929655],[-8.895130,5.094996,8.451817,3.773171,3.224312,-1.229497,-0.254420,0.183369,-5.370026,-8.567496,3.179661,6.282826],[-8.397939,7.612315,2.691885,3.046749,8.959961,2.764585,-5.348306,7.511050,-2.550802,5.149290,-0.212820,6.103979],[8.848619,2.761569,-8.584582,-2.736874,4.880833,-6.483947,3.881742,-1.066072,-6.675877,4.292048,-8.601113,-1.743370],[-1.830836,-1.965733,-4.849230,5.432906,5.610312,6.194511,-7.710916,-8.695353,8.951714,-9.278699,4.544455,9.755850]],[[1.410386,-4.977957,8.754090,-3.251595,-9.388879,-5.888282,8.933837,-1.888030,-6.754804,-8.546785,1.707438,-7.479699],[8.553315,9.078577,-0.195976,-1.856587,-3.313144,2.357308,9.796165,9.552443,-1.401371,6.970526,-3.791206,-8.918808],[7.500511,5.336907,-6.590769,4.328686,-1.385497,-4.575217,9.088921,-4.397222,5.795620,-3.113026,-0.749439,-3.234802],[4.537125,-8.892075,8.060311,8.070100,2.390100,8.846686,-4.274537,8.119660,1.974858,2.052120,-4.905334,-6.341238],[-3.439964,-4.816435,6.679799,0.538302,-8.920522,-7.463430,7.876360,-7.288447,-6.109619,-4.917087,-6.334384,1.409415],[0.892986,1.662039,4.261614,4.949221,-1.739823,-8.650022,-9.844549,-2.292953,5.126366,-6.166045,-3.928385,7.264216],[-7.804489,-1.466857,4.146742,-2.867239,-5.588511,-4.132692,-5.724188,2.002746,7.250254,-7.667376,-5.242173,0.639293],[3.361473,-0.292814,-2.293291,-8.021625,0.459811,-7.992563,-5.104533,9.448229,-9.069247,-7.037541,6.028358,1.693730],[5.892703,-2.406424,-8.387082,4.151352,6.644228,-9.200326,7.398210,-2.156085,9.707678,9.116367,7.984807,-7.210704],[-6.794155,-5.094972,9.258186,1.027310,5.390831,-5.745238,1.572490,0.889662,7.903834,-1.407094,-0.536271,5.813033],[0.262314,-3.579851,6.727101,-5.164590,5.388026,5.712343,-5.202970,-7.755193,-2.745628,-6.921073,-7.474117,-8.236557],[8.784583,9.301116,7.107015,3.592014,4.825014,1.872509,-5.372749,0.950518,0.296180,-8.321013,5.371082,8.713611],[2.226305,0.968956,-5.866007,1.942774,-7.285219,1.766580,6.918223,5.470656,-5.866807,6.462699,-1.412631,5.070993]],[[8.253449,-9.060188,-5.155894,-0.392587,0.342551,9.009840,5.331687,2.277203,8.355132,6.334975,1.049876,-9.317646],[-6.109927,-9.746088,-6.155526,-5.312963,-6.686785,-3.917878,-8.557182,-1.324289,-2.176604,4.437324,5.685650,1.710754],[-0.016456,5.677464,4.620535,2.416490,-6.402500,0.005563,4.629595,-2.835196,-2.655408,-3.045978,-6.798333,-2.734977],[4.242401,-7.076507,-5.856409,3.713212,1.206726,-4.217068,-7.316421,-9.967550,2.749136,5.837235,2.168706,-2.549573],[-5.574107,-1.878461,-3.031547,9.443324,8.487177,-2.717928,-4.761086,-4.277791,-4.912419,-7.523673,-6.918913,3.309978],[-9.338268,4.993363,3.897743,8.980050,-6.663137,-0.172421,-0.429760,-7.066088,4.342720,7.694340,8.534218,5.374052],[-3.005639,-9.192173,-3.315695,9.814806,9.412242,-2.946768,-8.242979,-2.090336,-9.169989,9.086875,4.069567,-5.315408],[-1.646427,-8.965273,5.292230,-0.479053,1.688559,-4.119729,-5.692217,1.593834,-7.585995,-8.198182,3.501248,-5.385370],[2.952136,9.197242,5.193201,-1.368063,1.971326,0.967693,-8.284687,4.907055,9.364394,-1.234525,2.940232,6.671446],[5.646445,-0.914089,-0.651131,-0.471687,4.205480,-4.442510,5.676296,-1.164672,8.110032,3.502091,0.901183,-1.100399],[3.895049,7.161281,-0.678751,-4.960846,-8.662777,-5.125304,5.765688,5.901642,-6.173828,-4.646632,-6.868940,7.380384],[-6.337454,3.573700,9.184686,-9.473710,-7.018121,2.059489,-1.174479,6.865181,-8.908859,-1.928858,-9.057238,-3.135233],[1.955800,2.470811,-2.149632,-2.939932,4.742865,-6.322514,7.451238,0.463688,-4.679627,-8.240126,0.529008,-3.881220]],[[4.627793,3.027404,-5.410102,6.145421,-7.404282,0.359215,9.495625,-3.303530,2.434067,0.569316,9.847503,0.162499],[6.082003,7.599796,7.413938,-7.177017,-5.737318,-4.231692,-6.378885,-4.464897,-3.926981,7.048433,2.534967,4.734404],[-4.033420,5.282428,5.329770,-8.786720,-4.717488,8.041150,1.932892,2.072294,-7.963633,-2.381889,8.262976,6.547087],[-4.127802,2.449833,-4.364115,-3.418091,4.229402,8.329235,-3.386888,9.276171,3.434690,-7.979750,-8.626700,-2.846817],[-2.902254,2.782187,1.008541,9.639811,9.114902,-9.744140,1.996181,9.716431,-7.328020,-6.815696,-9.971207,-6.880567],[-4.997454,-8.662764,-9.523234,8.264365,0.207277,-1.533202,-6.562457,-6.115640,-3.589212,5.704344,8.981839,-0.123337],[3.221328,0.555192,-1.117840,2.492285,-9.661082,5.400578,-7.500719,2.259734,-2.686602,0.520421,-1.374652,-7.816480],[-8.999623,-8.630120,-0.728386,1.781178,5.869810,2.192036,-1.721538,5.886323,-0.760967,0.616699,2.736523,-2.045290],[-1.828828,-2.312949,2.939373,1.525115,0.744455,-7.190562,-3.425787,4.151377,-6.887665,6.662009,-8.532764,5.336395],[-0.180222,3.326740,-4.693409,8.107606,7.426420,4.108327,-3.424337,-6.896409,-5.577064,-5.501995,4.432899,6.079487],[-6.413955,-8.923115,7.548464,-2.192108,6.543396,0.181716,2.863709,-5.423962,2.923119,-2.452425,6.574358,2.086401],[0.282253,-8.470207,1.396360,-9.472481,2.942878,-5.977055,-0.455644,-0.462800,7.119933,9.637029,-3.712099,6.651546],[2.501702,5.416427,2.344590,3.789897,-7.878241,7.082816,4.435198,-0.835305,-1.071667,7.389057,7.651718,-5.358357]],[[3.295158,6.599248,-7.479101,9.700515,-2.094956,-5.711569,4.073651,-5.475592,4.150550,-1.319774,1.206969,4.285181],[7.858585,6.542385,-2.723222,0.126016,2.160430,4.744678,-7.726453,-9.969609,-1.398125,-5.954771,-0.496465,8.046950],[-8.231083,-3.691810,-0.901035,5.342690,-7.912344,-6.199574,4.741111,-7.447509,7.948761,-4.174861,2.656463,-3.961983],[4.027766,2.075703,-5.206314,8.813998,-2.381211,-5.022546,-2.092943,3.387006,-4.875895,6.153854,3.673787,2.168719],[-0.610026,-0.751986,-4.550478,5.182496,4.484691,9.845989,5.063343,-6.044675,-2.525284,8.761025,8.356158,7.547226],[-9.654829,4.688494,-0.802939,-0.417941,-3.725034,-8.400898,-7.678886,-2.616614,1.604212,3.067461,-8.479869,-5.743476],[-3.488569,4.789511,-5.054017,-8.151675,-1.591316,1.734797,-0.073899,1.212395,-1.144791,1.781871,5.613997,7.618332],[6.983153,4.196043,-1.331799,-6.353996,6.146956,-2.693559,-3.668938,2.438328,-5.049168,7.394395,-1.814498,1.307766],[0.930356,6.957230,-7.985463,3.865190,8.356375,-0.211225,-0.917148,7.689131,-7.664590,-4.743466,-1.427966,0.759759],[-4.391609,4.688030,5.887454,9.972343,6.774045,6.278089,5.156907,8.889210,-5.506426,1.534911,-0.357463,-3.516389],[-6.353034,8.589532,-2.046112,-3.145173,5.796336,-4.966927,-1.343149,9.261466,-1.079350,-5.519566,7.149944,0.577415],[7.484512,4.927908,7.608300,-8.358077,-4.891181,-7.467453,5.561631,0.663358,-5.260182,7.906975,6.159720,-7.436440],[-8.654582,-8.089068,-7.926547,2.479799,-3.983043,7.530446,-3.751077,4.749126,7.394652,-0.436538,-8.097173,1.354416]],[[3.447381,-4.265637,-7.763307,-2.511088,7.187769,-4.798575,-8.093799,1.919203,-6.448954,-0.348961,-3.363925,4.958492],[9.777211,-6.857955,1.458722,-6.745362,0.372801,-6.307668,7.508945,-4.944342,3.866244,-3.880702,-4.015002,-4.696406],[-1.590787,7.105420,-8.161554,-6.854112,-1.272690,-7.046127,7.436640,-2.974644,7.559734,-9.173782,-8.468537,0.749643],[5.438617,7.585685,5.157787,8.669435,8.591793,-1.116599,1.543712,3.928429,-9.151191,-0.682762,7.116495,-2.284460],[3.823446,5.753211,0.192781,2.735076,0.307515,-6.605840,-3.696965,-9.352546,-8.407899,2.033697,-4.645457,-3.297413],[-3.763209,-2.126681,7.751546,-0.441984,4.013613,-6.581454,-4.737631,1.675901,1.994175,-5.052430,9.870038,0.959002],[-9.758503,-2.632076,9.224403,1.449239,1.600312,9.577540,-6.258949,9.279707,-1.336995,-8.164596,6.540959,-4.093869],[8.212110,-7.812392,9.016366,-8.324724,-0.162039,-6.217827,1.905822,-3.686873,4.229829,-6.063630,0.429806,7.208253],[9.339802,3.705186,-2.642854,8.133918,-3.235239,-3.950857,8.206544,1.701556,4.316888,-0.158428,4.072046,4.196402],[-7.045850,-8.131397,1.548605,4.389073,9.432410,9.647216,-3.954670,1.617855,-0.911573,5.417127,5.256554,-9.174027],[-5.429694,7.296565,1.281615,0.461745,-3.980010,3.494722,6.603736,8.780673,2.086044,-8.749977,7.263783,2.151830],[-6.347376,-6.066493,5.205052,-7.723872,1.960788,-9.080536,3.769676,-9.820259,3.810389,1.276162,1.535332,-1.080029],[-3.368601,-0.618512,-1.155287,8.128910,-1.803100,-6.815684,-2.846671,-7.661967,5.773059,-7.959769,-7.127292,-9.876718]],[[9.372404,-7.202888,-5.611974,4.391045,-8.451608,7.879004,2.157752,0.040592,-6.913647,-2.841438,-5.651571,-1.292966],[8.230304,-5.445518,4.920081,6.873728,5.109644,4.362926,-4.937194,-2.735617,2.248316,-8.488071,-4.740942,-4.659799],[1.549138,-9.785326,5.290628,2.730796,7.985960,-5.011981,2.931203,6.265888,-8.280600,-5.663316,-5.190427,0.157977],[-8.358269,-7.597268,4.745855,5.473896,9.212741,-3.027770,-3.305480,2.668505,-4.664153,2.323988,-3.094723,-1.863354],[3.797148,2.996306,6.410694,2.519470,-6.287001,-6.937962,0.947925,4.724085,5.467781,8.013467,3.038550,-9.099950],[9.690950,3.510777,-9.430176,-6.756553,5.124134,3.763474,-5.080788,-7.085755,8.320138,-8.524484,0.202923,1.542640],[3.057008,-3.702040,-7.229058,-4.487753,-5.339653,0.895434,1.648739,4.155989,7.587697,6.837407,6.839342,9.652654],[3.451368,5.945826,8.612552,3.342735,-4.043808,4.673648,-2.292429,-5.562814,-7.046660,-3.456126,2.635055,-5.509369],[-7.682414,-4.209298,2.355453,-2.718018,1.537885,8.282943,2.760251,6.834538,1.217100,-4.794415,7.416811,-1.136260],[-2.893414,1.279811,-1.599733,-6.048408,-2.163223,8.365121,-7.114475,-3.083577,6.238025,-7.337864,-9.300813,-4.861714],[6.505701,-4.393623,4.269646,-5.383410,6.784719,7.685335,0.958689,-5.191524,-1.549394,9.627113,-5.525815,-0.730623],[-5.557183,-2.027479,0.043565,-8.534669,0.648232,7.562249,4.850419,-6.606529,6.462406,6.624008,6.574769,-6.413733],[8.123523,2.307658,5.291942,9.027163,-7.662706,1.552073,4.850471,-6.247510,-8.888640,1.541652,3.779391,-4.565859]],[[-4.137109,8.950527,5.926894,1.343198,-2.088771,-2.571093,6.590534,5.627040,3.797909,1.132794,-6.348819,6.751109],[0.804558,-2.862859,-6.744862,0.984272,-1.389685,0.300367,4.977499,-3.561859,5.418966,2.876538,4.783890,-5.383210],[0.298214,8.022848,-9.092226,-6.218217,8.378355,-0.082884,2.953360,-2.008788,4.131567,-5.723811,6.629006,-8.543235],[6.408347,9.307591,-6.355143,-2.742576,7.939318,2.918461,-7.860253,7.150160,-9.201642,-3.815241,6.433117,-6.250296],[-7.360037,4.102177,1.021903,-6.020210,-9.682843,6.890106,5.414536,-0.767768,1.019102,-6.424194,-2.661629,-4.972370],[-8.557204,-1.841229,6.602869,-0.729105,5.470495,7.657213,0.665388,-8.241486,0.742494,-1.170614,2.353194,4.604300],[-5.831823,-9.516986,5.330698,1.467644,5.980216,-5.284500,-3.705973,-9.368077,-8.817500,5.492362,5.831222,3.629702],[3.894058,-4.212401,4.306837,-7.171750,3.150208,-1.184312,2.394493,-5.869651,8.753334,1.361914,9.775565,-0.423990],[-8.394003,0.367518,1.041552,-5.049610,-9.340547,1.689127,7.924557,3.110944,-2.726351,9.011343,-6.842888,5.291986],[-3.057841,7.928521,-6.393762,-2.730756,6.309457,2.684068,-3.570398,-5.248782,-1.974399,-9.653308,4.420167,-2.740479],[9.299026,2.739350,-9.308729,-6.988896,7.165304,-4.779023,5.536087,-7.784193,2.661290,5.353520,-2.515459,-5.271638],[5.916245,-3.440693,4.227496,-9.943708,-3.657180,-8.086639,-4.403830,-3.216103,-9.795261,-1.106071,1.097344,3.292706],[-3.946576,-8.617764,-1.011486,6.964617,-9.299071,-0.182850,-0.926913,-6.644962,-8.358063,7.827294,9.673108,-9.443684]],[[1.471249,4.957197,-0.715987,9.134543,3.469493,5.802647,-9.678750,6.206159,-5.887108,-2.024646,9.188442,4.584751],[7.038551,-5.600389,-8.558674,5.746666,3.621493,-6.576110,8.588533,-8.480293,-5.053125,-6.206440,-9.517264,5.884783],[1.734051,-5.639495,-2.668041,-2.207029,-6.108029,4.626490,4.626448,-7.998338,0.968425,-9.768586,-3.855678,-7.285780],[-0.601268,-0.469933,-0.059438,5.170786,4.588591,-5.313860,-6.162007,-3.288554,-1.443812,2.747448,-8.049472,-6.198367],[8.012168,-1.691367,-2.198354,-0.654144,6.319056,9.284822,-2.533182,4.420981,-9.519687,3.203742,-5.092167,-1.338161],[0.044436,-2.216446,2.340142,-2.954176,-2.361514,4.156416,7.135832,0.418934,-3.286261,-8.338638,-2.404761,-5.156031],[-4.591860,9.268276,4.623042,0.096281,8.935524,-0.321395,-6.094451,1.974701,2.168451,9.210290,-1.181661,8.810603],[-0.377492,7.887114,4.506222,5.809710,-6.924791,-0.815947,-3.118570,-9.135894,-4.799275,6.964487,7.146841,0.716984],[3.685472,8.643915,5.500196,-0.089672,5.244124,-7.796818,8.387984,-8.527409,-4.503428,-2.498205,-4.845184,2.099080],[0.937864,5.086703,1.812893,-3.693810,-7.111504,1.760557,-6.200798,9.596069,5.405266,9.288284,3.215302,-6.147745],[-3.302858,7.546149,-2.949153,3.312879,6.315944,-1.308931,8.588680,6.399657,4.190294,-2.359906,-6.211939,8.896401],[0.146357,-3.323341,-8.550891,9.597947,0.020342,0.065740,1.316358,-6.320407,7.944541,3.430820,7.822403,-7.602858],[1.879913,-8.771573,-1.391613,-9.055359,-0.402432,5.340453,2.284150,-1.544127,1.788585,-1.345555,-4.939039,4.744004]],[[-9.988357,1.964885,3.714125,-8.613835,-7.468753,-6.752624,-8.594671,-0.349289,5.624870,5.093527,-8.107919,-7.512032],[8.912340,-3.537970,6.950300,7.848180,5.569286,5.707170,2.046249,5.858439,-2.229080,-9.869243,-8.394626,-8.039334],[-2.247658,8.455355,7.039171,-9.869682,-5.904311,-6.396640,-0.209626,8.820705,-4.624992,-4.328836,-0.833029,6.691235],[8.003292,4.701881,3.032120,-8.616009,8.147483,-2.986877,2.174541,1.790151,-4.259182,6.992072,-1.134638,-7.055862],[3.593097,-0.599848,-3.288886,-0.781047,0.532598,-6.458078,4.382664,2.993039,-3.398155,3.056128,-9.382171,1.205485],[9.191550,-2.120403,-6.322741,-5.372471,2.814732,2.936523,4.040228,-8.524747,-9.716988,3.119865,2.340156,-0.847619],[-6.262457,5.927292,8.860241,6.347493,5.664948,-1.621946,-7.495320,9.970172,9.923682,-3.253608,-9.583590,0.578305],[7.846272,8.065942,7.142410,-2.983621,7.837045,7.064781,-7.519746,3.520775,-2.929653,0.874124,4.456427,-1.009557],[-1.116775,3.393343,0.200190,9.138866,4.994575,2.417443,-0.282641,-8.839467,0.937344,-1.600905,8.755480,9.608879],[3.996783,-9.464605,9.782629,4.663703,5.064536,1.882427,-5.318839,2.440255,3.166739,-8.208398,-5.204634,6.772102],[-0.313858,-0.569799,-3.349106,7.514960,-8.191454,-9.939341,3.012689,8.791361,-9.679812,2.402539,0.407601,-0.895336],[-8.140550,8.813742,0.524288,-5.530082,-7.234205,5.627245,4.285822,6.445061,0.930820,7.203101,6.263798,1.481465],[0.665604,-1.808113,-4.311180,3.761442,-1.245576,1.499016,-1.047954,5.468025,-7.336139,0.463579,-1.119421,-3.609475]],[[-0.856877,-1.410279,-8.282911,7.267394,-1.245905,7.454943,-0.323772,3.132534,9.288306,-5.460111,2.745741,-3.457354],[8.084162,6.994953,-5.889005,6.223490,8.697346,8.666037,5.834885,-5.511611,-8.904200,-9.115608,-0.443418,2.084001],[0.385652,8.574389,-2.911666,-7.172262,6.596409,2.986178,8.075870,-2.090678,-2.952884,5.121322,-2.168318,7.828736],[2.091803,2.579915,-6.141491,3.721810,6.620908,-6.735313,-2.587466,1.898101,-5.144990,-0.538223,3.522954,-0.164467],[-1.500849,9.854790,0.954778,8.838220,5.771118,8.037621,-5.396407,6.302794,1.727064,9.890267,-0.389109,-3.680484],[1.101787,5.258281,2.812483,-7.917402,6.694311,3.149885,-6.283718,3.323774,2.696099,5.822065,2.891289,7.552755],[-6.721268,-9.461809,8.892684,2.283752,6.735817,8.129588,5.216183,-4.630380,-9.530405,5.268176,6.446445,-8.571477],[8.779285,-7.606872,-4.847147,-4.468185,-2.055177,6.804160,4.777325,-7.662223,1.877705,5.936408,3.688621,2.321479],[6.437901,-8.983815,3.762703,-2.041381,6.032640,4.294066,-2.474383,-2.256240,7.646505,0.534516,7.149703,9.200239],[4.137934,7.557186,3.654777,-4.020264,8.461682,8.012127,0.476411,-0.651570,-2.931397,-2.372120,0.693935,6.118414],[7.644453,4.545031,-9.465481,6.224295,0.564160,-1.025449,-0.916729,-7.592599,1.978736,-5.582421,3.328041,1.020051],[3.819711,-4.749493,7.104542,3.675270,-9.020016,3.806954,0.578358,4.083597,7.446806,9.068540,-2.060239,1.245632],[6.463793,3.338849,-7.393100,-9.094971,-0.784549,-5.883592,-3.735093,-8.358011,-1.708540,2.462442,6.239542,0.730270]],[[-1.976608,-6.433506,-5.398908,2.772717,5.857114,-2.018666,1.872587,3.200885,0.693990,9.083797,5.439952,5.817766],[0.687383,-3.924532,3.628400,6.300072,-6.431976,-5.962167,-8.136533,0.895404,-5.779243,9.063729,-9.574214,-2.619917],[0.893748,-8.847737,3.850183,-0.886019,-6.872946,2.389410,-7.879794,-1.331717,-3.529636,7.569309,-9.189202,5.129668],[-0.745453,-3.671600,2.298162,0.233950,5.348030,-0.401895,7.522268,5.595917,6.586174,6.789938,-9.438550,-8.346810],[-9.020014,8.713889,-6.932429,-5.619375,2.027577,-8.595499,0.288217,9.752092,5.587394,2.043497,6.316202,-1.350306],[-5.101493,-1.457530,6.630629,7.830221,5.051140,-7.687330,1.902780,-6.630375,-4.322957,-3.935784,-5.585613,-7.895285],[2.000059,-8.710952,-7.601450,3.366757,-9.778816,0.724577,-2.381666,-0.548269,5.568807,-9.833000,2.483318,-4.417896],[1.949383,1.882961,-4.276463,6.836298,3.418402,-9.185429,-8.407771,-4.881841,-0.332058,7.889264,9.570237,-7.027614],[-3.177325,7.865078,6.367957,2.466480,-4.508456,4.871661,-7.466922,-8.963562,-8.314486,-8.193788,-7.308496,-4.602778],[-1.817106,-7.476676,7.353231,9.185222,6.565209,9.050796,-8.268188,1.317891,5.155256,7.031635,5.439161,3.373813],[0.884767,-6.754777,7.712785,-7.669373,-6.409567,4.960897,4.379601,-8.916925,8.724361,9.428713,-9.491212,6.227806],[1.574655,-2.081412,-2.941382,5.610879,1.527000,-5.465287,-3.854352,-2.132840,8.294794,-1.180210,-5.843768,2.979521],[-2.094642,9.389805,4.375145,-6.033344,-9.488036,8.927748,-3.477187,-8.439069,-8.963202,-3.594086,9.800967,-7.858777]],[[-4.129118,4.852778,2.126298,9.424106,7.757522,-8.091763,4.466516,-8.383726,2.760875,-1.104460,-8.543393,4.449963],[3.831567,6.568756,9.260872,7.812568,-0.680811,-5.252725,7.168722,6.999849,6.563869,0.158260,-4.660525,-6.819952],[5.284891,5.110283,6.933167,2.197727,9.967173,5.139320,-9.194300,-9.626232,7.204928,-4.985645,-2.868369,4.432899],[9.955787,-7.980803,-6.992354,-5.123026,-4.480661,3.979763,-4.335598,-9.140218,5.540642,-3.032131,4.696151,-7.713331],[-6.567403,6.713976,-9.495216,-9.528110,-2.795959,2.623215,5.119177,-1.299120,-6.645252,4.430819,-3.872854,-7.813048],[9.754171,9.097028,4.511601,5.965146,-6.758904,5.509985,0.731623,7.202133,-1.260751,1.973207,-2.338266,4.722741],[5.295167,8.539278,7.254712,-1.993788,7.907473,5.087139,8.377768,-3.273330,3.163842,9.830584,9.585527,-3.501608],[3.132109,5.431241,-0.991912,-6.203290,0.407339,9.278567,2.556315,8.199216,-0.682229,-8.660693,8.082377,8.679834],[-9.601323,5.063307,7.459669,6.146851,5.998596,-8.518936,-5.864417,-6.178392,2.201650,-6.775344,9.252210,7.312518],[-8.714754,5.559489,-6.916959,-2.952727,8.393226,-1.966353,-4.666590,-9.178724,-3.133770,0.741434,8.519245,-8.685013],[8.895244,-9.444931,-0.642917,-0.775808,6.849339,-4.300897,2.479234,-3.716031,-8.134398,7.973143,-1.582323,2.738444],[5.033063,1.007381,-7.505970,9.902789,-3.979606,-1.502430,4.242376,8.209177,-5.217471,-2.377276,9.312975,4.584134],[8.512218,-4.732218,-2.975641,-0.058438,-5.472361,-7.260409,6.579279,-6.971968,2.038537,-4.067951,-6.192494,8.335019]]], dtype = "float64")#candidate|5521|(15, 13, 12)|const|float64
uop_5522 = relay.acos(const_5521.astype('float64')) # shape=(15, 13, 12)
uop_5533 = relay.asinh(uop_5522.astype('float64')) # shape=(15, 13, 12)
const_5538 = relay.const([[[6.625743,-7.846722,-5.000990,-8.312762,-1.256806,-9.211270,4.585644,-5.406412,-6.594245,-8.768061,4.434638,3.564831],[-5.024566,-5.424331,-2.890951,-7.773384,4.068377,-1.767804,3.591915,2.897492,-9.201873,-5.741163,-8.743383,-5.517497],[3.196649,9.474882,1.630470,-7.911294,-1.621668,6.440655,-8.912043,-7.606234,-2.360842,-6.489585,-2.381225,3.216390],[7.100613,-9.259764,-1.091920,-1.079135,4.647781,0.715598,-6.917336,-3.854440,-4.292854,-7.298064,2.449252,7.998459],[4.737088,-1.198123,2.339007,-6.043537,7.744947,-0.963403,2.476500,9.026947,-1.547309,2.624524,-3.643130,0.922744],[2.795472,7.242840,2.729577,-6.912424,-4.503296,-3.673497,2.046463,-4.930809,6.419422,-1.463714,3.347129,1.902771],[-3.639768,6.677852,-2.953326,-6.729996,-9.690943,3.584823,-9.914238,-4.483818,-5.338007,-1.434198,5.752844,-3.591949],[9.706705,2.260422,-7.045677,5.151455,2.839390,5.888143,2.037844,-6.247554,2.038058,4.315998,1.547872,9.278875],[-6.749435,1.765421,-4.019017,-8.052559,1.286762,8.427973,-4.320732,-5.395450,4.744222,-3.213651,9.738990,-5.221252],[-0.385798,-3.196010,8.793699,4.990534,2.845041,7.796823,-3.824452,-2.735735,8.184904,5.741578,-7.400273,5.758805],[9.489347,-2.295113,-2.677641,2.357234,0.548404,6.205046,7.316281,-1.744210,3.052063,5.601690,-3.528062,8.027801],[1.951696,3.703318,4.261016,2.911900,-4.891422,2.580894,-0.261627,9.500643,2.218171,-7.812164,8.640627,7.128940],[-1.583467,-0.351645,-9.821801,-2.781212,-3.458016,6.929380,-2.437922,-3.738344,6.149282,-8.089360,3.752981,3.735728]],[[-4.962579,1.900502,-3.886069,-7.768660,3.145239,6.685689,0.961000,5.742767,-5.178537,1.479247,3.287158,4.827917],[1.598897,-7.577189,-5.708772,8.318138,4.169228,-6.601749,-5.868692,-8.373364,-9.751629,2.598606,8.574436,9.433518],[-8.429596,0.487342,7.780400,-4.754646,-3.108212,0.885411,-9.410988,7.127210,5.640245,9.528450,-6.049028,-4.523034],[-5.366510,-1.076168,-2.759018,2.674904,-0.241551,4.847688,5.453808,9.454687,-2.089725,-4.052402,3.841867,6.658996],[-7.788616,-2.330256,-7.460867,5.830669,6.017478,1.495101,5.037263,-7.067966,8.242459,1.606941,1.371476,-0.819475],[4.213755,-9.739406,-8.481026,-7.621516,-5.046151,6.789135,9.964062,9.998458,9.069913,-2.486348,9.748729,-8.605177],[-5.501780,-8.366242,-6.202972,-3.109142,4.637897,0.269864,-3.370567,-6.617208,-9.757399,2.316773,-7.447129,-3.134234],[3.732877,4.061774,5.402494,4.876375,1.617076,0.802794,-1.255528,-3.639138,-6.865835,6.026732,7.122301,-3.557001],[-1.478445,5.519969,-4.337209,-9.702269,-0.847264,3.449620,0.470742,-4.013127,-1.902279,8.637818,1.304174,-5.795771],[1.671182,-4.620981,-7.845987,-3.684406,-5.437208,4.945819,-0.988015,2.227212,8.283743,-8.986048,4.342238,-9.701201],[5.425566,4.618693,7.438179,-5.397407,7.219096,0.799980,2.706631,-8.244861,9.516857,7.312745,9.435568,-0.063745],[4.767404,-7.923347,2.789294,-9.578826,-2.773588,3.379389,8.852733,-9.797708,-0.079360,-5.119920,0.958045,-2.253126],[3.057634,-9.686605,-7.473388,3.436993,-7.463501,-0.089697,-8.794655,-1.039974,-1.120338,-7.581680,0.735448,7.806811]],[[-1.321172,-6.115148,-0.011752,-1.503401,-7.838203,0.766761,-0.551164,-9.864340,-1.422084,-5.623452,4.487436,6.837943],[8.867420,0.693652,-0.484801,-2.511146,4.599719,-9.054073,5.308563,0.132861,-2.639132,-9.753243,3.855805,4.427593],[-9.002895,5.661250,-4.607443,8.424497,-2.992347,-5.825522,0.326875,-2.072229,1.929651,3.116068,3.928806,-8.956480],[2.754075,-1.092823,0.489695,-1.810001,-5.212326,1.239599,-7.375013,-2.233359,-5.061884,1.616941,9.463589,-5.546317],[-5.627716,-1.750995,-3.584917,7.362009,5.734899,-4.478111,1.594325,-3.534640,-9.477155,-9.789115,4.764512,-3.713840],[-7.344363,2.547046,1.762862,-8.403278,9.303198,3.890433,-7.668348,7.274477,7.915102,-5.915547,-1.324269,-2.089040],[3.254090,7.169786,5.296887,-0.150692,0.359314,3.419916,7.411384,1.194256,-0.959821,-2.896333,2.965340,1.093549],[9.738323,-1.723917,-9.550804,6.311931,2.172038,-3.432897,-4.066910,-5.603110,1.253626,-8.542700,-7.011346,9.015019],[-2.003022,6.716406,-4.196259,-7.018011,-5.980708,6.215039,2.027597,-7.269960,-0.479197,6.807725,2.063785,-3.991644],[-8.944531,8.703982,-2.581129,2.589887,-3.969179,0.013043,5.518099,4.910930,-5.130374,3.233806,4.713414,-1.620757],[-8.170385,-4.074134,-7.567645,-3.788011,9.435133,0.795871,8.497539,-6.032258,1.578880,-6.319935,-2.343729,-0.896990],[-2.921950,-9.622775,-5.089365,9.292788,2.326088,-1.469678,9.328509,-9.029420,4.112258,-1.654935,-3.491326,-6.452437],[-1.629909,2.559251,-1.596066,8.544605,3.367114,-5.844264,5.995945,-3.775394,9.502430,-8.892855,-5.270496,3.930307]],[[-2.376853,-6.048195,6.844705,-5.555312,8.145575,-9.192161,9.601889,-7.103028,2.974935,-4.550603,9.461670,6.304575],[-4.895555,2.493745,-9.764592,-8.056454,-3.790478,-4.730798,1.128630,-0.570831,-6.209036,9.803079,-0.902915,-1.665142],[-3.246396,-0.039991,3.032156,0.815387,3.650702,-9.909643,0.130887,-0.131607,1.832859,1.975590,1.724592,2.324886],[-4.884638,-9.556956,5.796281,1.615712,4.986557,9.283000,7.312090,-3.460543,5.998112,3.866726,9.817914,-9.113451],[-0.732296,-5.367686,2.080771,6.747980,-8.102643,8.555530,-2.877112,1.265406,-2.122248,-7.600475,5.680321,0.898069],[-7.914778,-6.754198,-7.467689,-3.341981,-2.994291,5.845455,2.876916,-0.168512,-3.626954,2.436554,-8.102636,-4.462344],[1.988512,-1.867468,-1.586272,6.884513,-3.581978,-8.816795,-3.595530,9.853554,4.731559,5.610832,4.294727,-2.701699],[4.335823,-0.165096,4.726975,-3.477064,-7.483993,8.438153,-0.148079,8.160969,-2.021853,-4.153344,-1.154360,-9.103321],[-6.933499,-8.127770,2.762760,8.193955,-7.801010,-2.649786,-8.832156,-2.704779,7.412103,1.139155,-4.970176,7.631803],[1.083631,-9.939861,7.063319,3.633253,-1.569447,-9.977903,5.548624,-5.893429,1.006317,8.238129,3.669342,-4.687592],[2.716005,9.328831,-5.558902,6.943119,-0.847105,-2.668642,-2.047877,0.395782,4.663179,-7.715410,4.768008,0.673883],[8.893408,-3.539891,-2.520851,6.428939,0.502988,-5.195901,5.669384,9.321267,8.508885,-6.612156,1.490985,-3.788396],[7.187657,9.288694,0.045273,5.554338,1.328943,5.267390,6.200667,-2.736436,4.335409,-6.604806,-0.545223,-7.435405]],[[8.964206,8.252321,-2.225000,-3.964005,-4.833641,-9.726614,-3.955525,-1.830826,-2.478151,5.781961,-6.819451,-2.496096],[-6.400553,8.811003,-8.378262,-6.144193,-5.344188,-7.401761,6.372040,-5.132015,0.935129,4.495478,-4.466361,8.052171],[-2.568387,-5.284540,-8.516524,-5.292617,-9.711129,9.724390,-3.532445,-5.012565,2.837661,2.354369,7.793065,-9.159739],[2.136414,-0.754228,2.577464,-5.351089,0.791198,7.080129,8.009763,-1.289553,0.194019,-8.771262,-3.776031,-6.267333],[3.402215,-7.347784,9.841472,2.107803,9.295504,-9.856834,-0.177522,-6.222090,-0.590104,4.846371,0.653554,8.953905],[-2.733020,-7.629802,-2.303623,-8.768267,1.187711,0.432229,-9.537287,6.558383,-1.369827,-0.141340,-3.839654,-0.817798],[-6.324532,-1.178657,-9.148195,-8.503466,9.242797,1.623484,1.006230,9.359146,-5.192437,1.473539,-7.651647,-7.451204],[4.975578,9.932914,6.505014,-3.993744,0.547393,-4.199112,-4.701560,-1.114981,2.625330,4.524355,-9.464910,0.424419],[6.272719,9.045506,6.535959,3.874759,-9.536699,-1.854941,-8.647383,-3.114457,1.907897,5.541198,9.527115,5.559165],[7.733830,-8.850595,-6.111963,8.611896,-0.927766,7.307157,-9.935724,-9.706557,8.335764,8.500793,3.079374,5.658726],[-2.555198,-8.338424,0.005076,-4.517005,6.872279,-9.058540,1.107392,4.010257,-5.042172,3.035403,8.934959,2.754199],[7.253742,3.260474,-2.305647,9.989714,4.945718,7.958415,-2.394453,-9.042337,-3.991561,1.923697,-6.192447,9.761997],[6.703165,7.133471,8.845762,7.391352,0.290689,6.643691,9.603940,-0.682102,0.023417,2.438203,-3.611560,1.191011]],[[-2.305859,-0.532116,0.994981,8.557754,-3.754940,-2.171419,-5.914900,-0.264507,-7.475891,1.471174,5.003559,-6.910165],[7.836704,-1.824236,4.872251,-2.677595,-2.006202,-2.117772,3.388336,-1.231657,0.307524,2.402011,-8.136254,1.039201],[0.142969,-2.010500,0.031683,6.484592,1.192118,-3.018672,1.677513,-8.974461,5.339574,-5.286875,3.036697,-5.626131],[4.499852,-5.438545,-0.748460,-4.115700,-3.453165,-3.186335,4.756529,9.192669,6.745667,-5.876651,-6.151449,-0.687677],[6.597779,-8.913176,7.946940,1.699197,-3.067191,-6.792445,-2.922693,8.398317,7.192424,-2.875012,6.726748,5.295028],[4.411773,-4.885522,6.433675,0.947821,0.130188,0.423802,-2.481798,4.398677,-7.011847,8.263295,-3.353323,6.209132],[-6.940835,-5.127193,7.105565,-5.861535,3.204897,7.290781,2.449187,-6.641325,-8.485728,0.490704,-9.975297,-3.371440],[-4.239256,2.260246,-6.850344,2.946786,-9.556915,-7.010081,6.438143,-3.409239,8.720007,4.137229,-1.577223,5.677507],[0.208628,-3.251947,8.729474,-9.987055,-5.773616,-7.068446,2.569632,-1.374713,-2.976133,2.201067,4.506189,-3.351939],[4.132141,-0.918622,8.918517,1.055402,-2.416812,6.546132,-5.200760,-8.844137,3.745127,7.814929,-2.979895,6.952114],[-8.718581,-1.871898,-9.112885,6.779496,9.955110,-4.986958,4.588939,4.665449,7.242189,-9.353836,3.131565,-2.775183],[2.855207,0.036122,4.570834,-9.517121,7.334626,-4.108939,-0.692059,-1.958471,9.551934,-1.801873,-9.585890,-4.099670],[-1.673931,3.747890,5.692651,1.882033,4.854652,-2.746965,6.197350,-1.306044,-2.959834,-3.359507,-9.104278,-0.250293]],[[6.754934,8.999942,-8.946266,5.126880,-2.844324,-7.502306,6.464326,-7.697025,-4.053177,6.115293,-7.260231,3.763737],[-3.262211,5.589342,-1.512327,-4.122380,-6.518291,0.496292,-8.403729,-8.737191,7.961060,-4.206578,-8.284790,1.225221],[-0.501069,-5.250108,-9.284169,5.913675,8.630423,-0.174024,-6.555180,-4.862698,-3.507771,2.490895,-1.454981,5.694221],[6.364593,-7.091045,-9.582947,-2.678950,2.744231,3.277463,-0.454614,-2.301104,2.093717,5.036176,-1.034432,0.198112],[7.956169,7.485534,-2.319359,1.907890,-8.872739,8.702018,8.511486,3.585665,-7.746922,3.561274,9.288304,-8.962469],[-7.270082,-5.851498,9.493348,8.792331,2.331314,2.798233,6.924627,0.474073,-1.127108,-5.721988,-7.228799,-9.226175],[9.640759,-7.229347,-4.407194,0.349351,-6.993318,8.442478,9.578027,3.083615,8.289980,-3.083110,3.232410,-0.983550],[-7.120846,-0.995040,9.346013,3.850136,-6.601110,2.361954,4.232153,8.602520,0.847655,3.477653,3.118547,6.306468],[0.834812,3.644828,0.284120,7.977702,-2.276359,-8.255327,-0.540596,-0.895637,8.260453,8.641502,9.633907,5.818096],[0.628334,1.346238,4.196904,7.617811,1.269035,5.620358,6.890977,-4.156252,-6.806450,5.164381,8.902883,7.712133],[1.244886,4.049503,3.979133,7.052307,5.006293,5.938379,4.556359,-3.624874,1.664045,8.555552,-2.239949,6.312573],[9.464217,2.739210,-1.464128,8.983397,-8.156843,-8.799712,8.434242,-8.569872,5.766870,1.007439,4.731441,2.004780],[-6.372874,4.527598,-4.823639,3.406308,8.010422,-3.506897,-9.456125,3.774824,-5.412947,-9.233370,-7.490600,0.359028]],[[7.021003,-4.870588,-2.219856,9.264230,9.559820,6.033983,6.151743,9.287834,6.945465,2.759661,0.585437,-4.132972],[-6.358093,-0.879290,-5.520785,-1.538099,-9.397972,-6.401888,-1.411131,6.693990,-2.689545,-7.576174,-3.336251,-8.641978],[3.938546,0.440357,-5.371745,6.795614,-1.113355,5.338297,8.288265,-6.399213,3.845748,-8.043062,2.410734,0.181813],[-6.865097,3.994949,6.444394,-0.447627,9.421759,4.114502,-0.716380,6.851986,-5.308346,8.916352,-5.901757,-7.265481],[-6.420104,-5.215383,-3.650878,8.273962,9.654005,4.866611,-7.299707,7.928426,2.200617,9.788914,9.437208,9.353792],[-3.484116,7.339295,-7.535300,-6.996495,-2.808745,-9.380055,-0.052994,3.128924,5.737941,-9.396285,3.919601,4.557332],[-6.960534,-8.396822,9.529597,-2.597798,-0.635018,0.946851,0.187614,8.888463,-6.553231,-2.349367,4.616397,-5.346445],[9.618246,-2.079415,-8.869590,8.177117,-4.487189,2.491350,7.884329,3.496935,8.174725,3.688146,-7.320770,8.557705],[-8.778311,7.761012,0.686042,-1.397451,-7.351539,2.405311,9.319789,-3.581433,-6.513870,4.277307,4.978265,4.252180],[2.852794,5.343113,7.885548,-4.401372,-5.099028,0.835955,5.703325,-5.021529,-0.810360,7.957851,0.360450,-1.406869],[9.188433,6.472831,-1.786717,0.207219,1.424858,-0.488465,0.163343,6.451306,-9.344636,-7.615709,-0.367307,-9.972766],[-7.185119,-2.379961,1.595670,-8.150334,7.602594,9.827020,-2.580305,0.966000,0.988065,6.255962,6.577880,-6.612270],[6.626961,8.014223,-0.868743,7.471475,8.294241,-8.202198,-8.594205,3.200650,-5.501973,1.379399,-5.535890,2.493751]],[[-1.491853,-6.229386,8.768158,-8.559952,7.980141,-9.343353,1.351748,0.123620,-4.282919,5.080184,-5.426923,-7.944315],[1.610031,7.363933,-7.083475,1.244533,8.438897,-2.627808,-5.544559,-5.337717,5.015775,4.224861,-6.610179,3.807726],[-6.855384,8.474780,-0.348111,-3.703072,0.772899,4.618646,-6.868077,4.145721,-9.737214,-6.882375,-0.406019,4.333218],[4.207327,-7.813462,5.689156,-6.448862,-9.975092,-1.098661,7.530320,-1.623753,-9.860704,6.788043,-4.626549,2.713957],[-3.105984,4.938099,-1.285931,-9.470017,-8.995118,9.110876,9.653135,9.037052,3.762177,-0.683612,-2.581470,8.139999],[-6.762930,6.399040,3.830770,5.189412,-1.767159,-7.251394,6.572415,4.249256,4.344873,5.588732,-4.486368,-7.441933],[-8.660692,4.557053,6.555157,-1.131930,3.774553,-8.959371,-5.732417,-9.466111,5.021344,0.984940,-1.687315,-1.139190],[4.566319,-6.175314,-8.762036,4.913775,8.738119,-3.128134,5.394200,-5.886242,-2.328384,-0.663274,-4.118527,-8.549853],[1.480569,1.145501,-2.200569,-5.456294,7.970820,4.322786,3.188183,7.373759,8.937907,-7.459193,-0.930257,3.111763],[8.805747,6.545658,0.750051,5.126048,7.754414,-7.154599,-2.073544,5.885086,8.814115,-1.854466,8.924362,6.700109],[1.402408,6.469723,-0.646377,-1.996438,-7.808856,2.819365,0.260876,4.714435,7.552409,-1.457918,-5.077700,-8.860575],[6.919566,-3.433472,-1.886724,1.481315,5.139820,3.205245,-2.415819,-7.697799,1.167400,-0.263264,-6.158078,2.282494],[9.095868,-7.400800,2.291981,0.708891,9.688727,0.263227,3.301040,2.323765,2.514113,-3.463973,-8.640708,4.831358]],[[-6.348828,8.073976,9.114012,4.034837,-2.086887,-6.853013,-2.805911,-4.714124,1.947958,6.195076,6.074052,-3.892455],[9.663195,-4.131683,1.676865,4.201317,7.374463,-1.356209,0.782916,0.623072,2.663710,8.381819,6.736282,2.853172],[8.750719,9.397473,7.317306,0.351727,-4.111860,0.380972,4.579808,6.136463,0.602037,1.255821,1.874381,-7.168584],[-4.983057,-1.163717,-2.853295,2.872114,-8.976107,-9.551020,-0.958008,-2.385953,4.421885,-6.904953,-9.583692,2.693423],[6.638159,-9.300388,0.354517,-0.103267,-0.113402,5.502282,-0.899038,-6.418852,1.464538,3.022535,4.163421,-3.392585],[8.280061,7.499027,-5.838597,0.271110,-1.227381,4.193482,-9.334945,0.135306,-3.378433,4.680130,3.045181,-5.535842],[-1.262989,-9.526479,3.120842,-0.408729,7.997893,3.621107,-5.474385,-4.589556,-4.072960,-2.140633,9.622050,-1.673587],[-2.861493,-0.812460,5.156096,-7.974242,-8.902287,9.732573,0.489483,-2.889510,-3.106087,1.797434,-4.886371,6.654345],[3.665384,-1.261691,0.905808,-0.355149,-1.286691,-9.604862,0.169794,-0.575491,9.153543,-5.664549,5.079505,-0.422219],[-8.390424,0.247276,3.359089,9.203277,-3.226755,3.258873,-7.203064,-1.884529,-6.137589,1.242944,0.830572,-7.937229],[6.078246,-5.754744,0.089657,-6.679591,-4.842702,1.871792,-6.493134,-4.623116,-6.781419,5.545685,8.944895,1.196709],[-6.417445,-0.287798,-0.425021,-0.788587,1.989715,0.711491,8.874272,-2.491461,6.136419,4.089059,-7.166841,-7.924883],[9.593623,-8.510505,4.628085,6.723150,-1.820881,-3.359728,-5.190959,-3.174341,2.485449,-5.717500,-5.817197,-0.536903]],[[-9.712303,0.168795,3.493752,8.543922,4.590600,4.096771,-5.072207,-1.831938,-3.996101,6.231725,-4.053241,-2.953220],[6.965203,-6.063872,1.813370,2.175599,3.644049,7.688376,6.967430,5.855285,-6.050067,5.290927,2.045617,6.916758],[-3.464581,-0.985514,-7.283524,-4.039745,-7.309941,8.367797,4.047865,4.624108,-1.812922,2.480984,-6.445349,-1.544681],[-3.477319,3.544615,-4.210565,8.108860,1.960681,8.444368,4.458543,-8.553117,-3.049891,4.460116,-5.387475,-4.481372],[6.659822,-1.770015,2.926743,-6.193941,7.984377,4.278639,-0.526241,-7.226496,4.246221,-8.811960,-1.589774,-0.298134],[-0.291433,-2.958404,-4.744513,5.049777,9.327373,8.821475,5.675595,-0.676105,5.297706,-6.802188,-3.398125,-5.865611],[-7.204815,-0.720262,0.094699,0.821076,6.830831,-1.418479,4.480519,6.761638,-5.129204,9.638503,7.874455,-6.447146],[4.413896,-2.256605,7.351361,7.197426,0.408451,-1.824086,-4.130227,2.554297,-6.877299,-0.045879,3.523239,-6.079985],[-0.292526,0.737034,3.063369,8.654249,-5.075507,-7.825873,-1.581796,1.772630,-9.502644,-2.330326,-3.043632,-3.792567],[7.665764,-6.027468,-8.869748,-1.750811,-9.681816,-0.685351,2.905033,-2.857355,-7.898160,-8.323994,9.353498,-6.512903],[1.271608,-6.575605,-2.381665,-0.272165,6.925855,2.515058,9.495437,6.992175,0.961596,5.154941,0.653079,7.918781],[5.394964,-4.064347,4.874368,-4.863046,6.300731,-3.326073,6.358801,1.734500,2.991664,-6.488854,7.233129,-4.160629],[-1.532968,5.434164,-7.880031,1.407577,-1.239449,-4.430732,-3.995603,2.556761,0.761536,-9.383216,-0.200575,-6.955076]],[[-3.197631,8.753004,-6.002201,-9.569095,1.756974,-1.338909,-7.324165,8.923574,5.505148,7.978621,-0.572560,0.786902],[-8.790908,-1.976883,1.746022,8.358141,-2.906624,4.684850,-0.985750,4.134823,-8.916850,5.006299,4.975928,5.187650],[-6.712053,-7.274717,9.455401,3.914580,4.916761,2.850043,-6.031510,-6.816905,8.997580,0.535456,-8.936954,4.295540],[-1.722759,3.088795,-1.226882,-4.572909,8.772960,0.581638,-5.699588,1.679644,6.479851,-3.203187,1.671825,-1.350493],[9.440353,-8.270445,-1.646104,-6.481546,0.444655,-0.509126,-2.947324,-8.034683,9.884547,9.383000,-8.147399,-8.706509],[4.996197,9.083147,2.948727,7.293534,0.863485,-1.776594,9.236496,-8.947037,6.632924,-2.269132,7.093816,6.429674],[5.892639,-1.364492,7.780903,2.691372,-7.943609,7.969723,-6.009069,-2.164400,5.448538,6.693203,3.603924,3.257304],[-6.046577,-9.460641,-3.805860,-1.529509,-2.657862,-8.849931,6.914257,-3.445723,-6.143500,-7.567529,-9.654492,4.931874],[3.134874,7.965275,-9.927847,9.644732,-7.756220,8.347612,-1.963148,-8.824894,-2.098595,-3.466488,-8.443186,7.501262],[5.672658,5.415542,-9.339210,5.225033,5.314119,-9.064040,4.868457,-7.781365,-6.293217,-8.251202,-9.624799,2.345343],[3.770279,-0.101058,2.843666,8.641549,8.139326,-9.965491,2.262656,-5.671205,-9.099408,-2.092893,-3.271964,-4.375463],[-9.002363,5.234822,3.244648,-2.071867,8.837182,4.923602,-8.183698,9.531833,6.546164,-8.410386,3.104118,-0.703102],[8.699396,6.062868,9.681435,-5.807909,-3.679025,-1.888256,9.585993,4.152726,-2.207600,7.833904,2.573507,-4.556606]],[[-1.789659,3.631444,9.082646,-0.049379,-1.474057,4.990400,4.274912,-9.409559,7.127465,3.200590,8.055568,5.152956],[8.746473,-0.897961,2.976831,-3.245228,8.380316,7.189947,3.260265,-0.800368,6.798559,7.975691,9.847260,6.152389],[5.626091,5.022124,2.867765,-5.681387,1.834066,2.273308,0.875249,9.681268,4.603731,-3.623795,-1.248906,-8.319412],[-5.863342,-1.429901,4.204207,-0.990295,-5.338334,4.754300,2.799323,2.824230,7.104723,0.511874,-2.001125,1.425302],[-2.133330,-6.072520,-0.326538,-0.347704,-8.089152,7.349457,-7.610517,-5.952445,4.798342,-0.733180,9.372906,-8.446057],[-6.081006,-2.468242,-1.325042,-1.863849,3.083410,2.699444,-2.102399,-8.044977,-3.230181,-8.539570,6.232806,0.627486],[6.222462,2.768996,2.609890,7.838968,-8.258020,-4.705940,0.706940,3.161815,8.055222,3.585736,-8.454408,1.005581],[6.135919,-1.754789,-0.861413,0.663752,6.316168,0.228982,-8.847597,4.696026,-5.754033,2.396344,-7.679309,-4.357956],[3.591416,2.547470,7.179317,-0.763125,2.441299,6.330238,6.163443,4.093875,-2.687014,5.570023,9.721402,0.337780],[3.006457,3.655510,7.957596,1.515427,6.036661,-6.789200,7.326781,3.042047,4.798245,0.400852,-1.473657,-0.514963],[3.313415,5.041478,-8.889573,-9.730698,-9.027853,5.017572,8.013617,-5.660183,-8.412169,3.996361,-1.365833,-4.710647],[4.382430,-4.051667,-5.037287,-6.653032,-6.425744,-0.376482,-5.756920,-8.752018,-8.959616,-1.741678,5.598533,6.609459],[-5.592417,8.511323,6.459832,-6.308195,1.434289,-3.047085,4.356338,9.740087,4.870329,-6.302700,-5.887480,-8.473469]],[[3.891185,-9.641525,4.259125,-7.550667,-8.294424,-1.912204,3.649462,6.867533,3.815399,-8.916866,-0.526514,8.423774],[5.674129,-4.986737,-0.017470,-3.412853,4.831340,-4.502680,-0.112230,-8.269519,1.288858,2.717648,-2.023466,5.910763],[-7.486033,-9.469609,-9.442003,-8.692037,-7.929143,1.845312,6.464907,-5.204559,2.629225,-2.917519,6.022288,-0.982194],[0.565654,8.891375,-5.385610,-1.721483,-5.292195,-6.184317,-6.029416,-4.672265,3.840313,9.545184,2.281546,3.976447],[2.483805,3.085780,9.694650,9.489747,5.596460,-1.955763,8.809988,-6.701174,7.424447,-7.475235,-0.123584,-9.401892],[6.510780,-3.912827,5.885728,6.449592,0.665009,0.462074,-3.909781,-3.184839,6.134759,-6.947223,3.814518,-7.363281],[3.726450,-3.302804,6.374029,5.786852,-2.844216,-4.395013,6.474233,-5.137995,-1.695747,4.265754,-2.177346,-5.323005],[-7.326532,7.532554,8.146162,9.640538,-2.606137,-2.283551,-5.165675,-6.925672,-9.169203,4.717327,-3.520175,-4.892501],[6.889102,-2.022778,5.908064,-2.466027,7.116272,8.428338,7.823316,4.726869,-7.007168,-8.573641,0.857748,-4.676059],[6.083972,9.179281,1.484824,-9.897038,-5.685370,3.705833,0.385275,2.207989,6.636441,0.437374,8.691841,-6.542945],[3.010293,0.869437,-9.396594,-1.917600,1.010138,6.531686,7.144341,6.007052,-9.576843,-0.164126,-4.382764,-4.305986],[-8.039749,0.806472,-3.734811,-0.222200,-4.783113,-2.231444,6.392162,-0.697552,4.158723,9.026988,6.577327,-8.127207],[3.031807,6.828995,-5.926018,2.579563,7.041765,4.251614,3.949842,7.965760,7.597271,-5.796893,-8.391996,2.846825]],[[-5.809369,1.415232,1.803231,-4.195184,-9.787083,5.246389,8.722440,4.411513,6.624338,0.029160,-9.871441,-8.015901],[-7.521599,-4.311169,0.212168,-3.911954,7.097132,3.336830,2.843864,9.063123,6.736947,3.885417,-4.961522,5.818486],[9.828751,-1.480882,-5.590112,7.747690,2.101390,3.279607,1.059881,-6.709958,5.190043,1.556894,8.916636,-2.783732],[6.155343,-8.378358,1.797962,0.563591,-0.868745,-5.962031,-5.883413,2.562779,-1.517444,-7.656152,7.508136,-0.517642],[-3.573072,1.487635,-8.266823,-1.510404,9.645507,9.736858,9.090970,4.878204,-5.612645,-3.545627,2.268720,-5.594414],[-1.493993,6.833893,-7.226760,8.665897,-3.595328,-8.362832,-0.047218,-8.208141,8.017697,-3.160906,5.820777,-8.108019],[-4.978227,-7.956310,3.631774,0.949055,-2.236283,3.453752,-7.093283,5.605542,0.938555,2.879016,6.744047,-9.953162],[-2.624923,1.106600,-3.328886,8.446727,-2.232089,1.729298,5.120402,5.489288,5.961036,-4.344052,4.170276,-0.947842],[6.503251,0.413204,-0.941714,-0.558620,-1.736206,-4.227020,8.736243,6.843148,7.012865,3.841764,6.466784,-6.123798],[6.528916,-1.587754,7.070485,-6.060489,6.730018,7.342897,5.399478,-9.940884,2.175431,-2.950457,-0.255159,-2.428439],[-2.509467,-1.272650,-7.953149,4.824581,6.950262,7.714804,-8.122286,-7.257110,4.894397,7.088241,2.221901,-3.533131],[-3.784903,9.406651,1.836034,2.981957,-0.194905,8.325660,-9.621707,-2.754124,9.559487,-6.145683,9.389210,4.976251],[-6.594284,9.689195,-2.723777,-0.922019,8.146491,9.278593,1.229718,-6.859600,1.740649,6.169943,-1.984644,9.236849]]], dtype = "float64")#candidate|5538|(15, 13, 12)|const|float64
bop_5539 = relay.logical_and(uop_5533.astype('bool'), relay.reshape(const_5538.astype('bool'), relay.shape_of(uop_5533))) # shape=(15, 13, 12)
output = relay.Tuple([bop_5539,])
output2 = relay.Tuple([bop_5539,])
func_5556 = relay.Function([], output)
mod['func_5556'] = func_5556
mod = relay.transform.InferType()(mod)
mutated_mod['func_5556'] = func_5556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5556_call = mutated_mod.get_global_var('func_5556')
call_5557 = func_5556_call()
output = call_5557
func_5558 = relay.Function([], output)
mutated_mod['func_5558'] = func_5558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3248_call = mod.get_global_var('func_3248')
func_3249_call = mutated_mod.get_global_var('func_3249')
call_5657 = relay.TupleGetItem(func_3248_call(), 1)
call_5658 = relay.TupleGetItem(func_3249_call(), 1)
uop_5661 = relay.rsqrt(call_5657.astype('float32')) # shape=(4, 15, 7)
uop_5663 = relay.rsqrt(call_5658.astype('float32')) # shape=(4, 15, 7)
var_5671 = relay.var("var_5671", dtype = "float32", shape = (4, 15, 7))#candidate|5671|(4, 15, 7)|var|float32
bop_5672 = relay.logical_and(uop_5661.astype('bool'), relay.reshape(var_5671.astype('bool'), relay.shape_of(uop_5661))) # shape=(4, 15, 7)
bop_5675 = relay.logical_and(uop_5663.astype('bool'), relay.reshape(var_5671.astype('bool'), relay.shape_of(uop_5663))) # shape=(4, 15, 7)
output = relay.Tuple([bop_5672,])
output2 = relay.Tuple([bop_5675,])
func_5685 = relay.Function([var_5671,], output)
mod['func_5685'] = func_5685
mod = relay.transform.InferType()(mod)
var_5686 = relay.var("var_5686", dtype = "float32", shape = (4, 15, 7))#candidate|5686|(4, 15, 7)|var|float32
output = func_5685(var_5686)
func_5687 = relay.Function([var_5686], output)
mutated_mod['func_5687'] = func_5687
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5706 = relay.const([[[5]],[[-4]],[[2]],[[9]],[[-9]],[[-6]],[[1]],[[1]]], dtype = "uint32")#candidate|5706|(8, 1, 1)|const|uint32
const_5707 = relay.const([[[-10,-5,-8],[-1,4,-10],[10,3,-4],[3,-2,-8],[-4,-6,-3],[-8,-9,3],[8,4,2],[2,7,5],[10,7,-2],[6,1,8],[-2,6,1],[-7,-7,-2],[-6,10,-2],[9,4,3],[10,-3,3],[6,10,-5]],[[3,-10,4],[9,6,7],[4,-9,-9],[-8,4,-9],[-5,-2,-7],[5,-10,10],[9,-6,-9],[-3,7,3],[6,5,5],[7,-3,6],[-6,1,10],[-10,3,5],[6,-6,2],[1,3,8],[-1,9,-3],[-5,-5,-3]],[[-8,-3,-6],[2,6,7],[9,6,3],[9,8,-10],[-2,8,-9],[-2,5,-9],[-4,4,-9],[10,6,-10],[-9,-5,-9],[-7,-9,-8],[-7,7,-8],[2,-7,3],[-5,6,8],[-2,-6,-3],[-3,-6,7],[-1,6,6]],[[-4,5,-5],[9,-1,5],[10,-6,6],[1,-10,-10],[-5,-1,8],[-5,6,-6],[-10,2,8],[3,-7,-4],[6,10,6],[-1,10,-2],[-9,-5,-10],[-7,5,-4],[-9,1,-3],[6,-4,-5],[6,-1,-10],[-9,1,6]],[[-4,-4,2],[-2,-4,-4],[-9,8,7],[-2,-3,-3],[8,-4,5],[-10,2,-10],[1,-5,4],[-4,4,-4],[7,-5,-1],[-5,-10,7],[10,-6,3],[-9,7,-9],[-5,-4,5],[9,-6,-4],[3,-7,8],[-10,-3,-1]],[[2,1,3],[-10,5,9],[-2,3,5],[8,-7,-2],[-10,5,9],[-10,-7,-10],[-2,-3,4],[6,2,-5],[-7,6,-7],[10,1,1],[-3,-2,-3],[-3,5,-4],[7,7,9],[6,-5,1],[1,1,9],[5,-4,-2]],[[-1,6,2],[7,9,-9],[-5,6,9],[4,-9,1],[9,-9,3],[2,10,-4],[-7,2,-6],[-2,-9,-3],[-6,-6,3],[4,-5,7],[-8,-6,8],[-1,-2,8],[-7,8,-3],[-2,-1,-5],[-10,-8,-5],[7,-5,-4]],[[-2,9,9],[3,-2,-1],[4,-3,4],[1,8,-10],[-6,6,9],[-6,4,-6],[-3,-10,10],[9,5,-8],[9,-4,9],[-9,9,6],[-7,1,-8],[-6,-6,7],[6,-1,-5],[1,-10,-10],[-6,-4,6],[5,4,5]]], dtype = "uint32")#candidate|5707|(8, 16, 3)|const|uint32
bop_5708 = relay.bitwise_and(const_5706.astype('uint32'), const_5707.astype('uint32')) # shape=(8, 16, 3)
var_5724 = relay.var("var_5724", dtype = "uint32", shape = (8, 12, 10))#candidate|5724|(8, 12, 10)|var|uint32
bop_5725 = relay.logical_xor(const_5706.astype('int64'), var_5724.astype('int64')) # shape=(8, 12, 10)
bop_5728 = relay.bitwise_or(const_5707.astype('int32'), const_5706.astype('int32')) # shape=(8, 16, 3)
func_4964_call = mod.get_global_var('func_4964')
func_4969_call = mutated_mod.get_global_var('func_4969')
var_5732 = relay.var("var_5732", dtype = "float32", shape = (420,))#candidate|5732|(420,)|var|float32
const_5733 = relay.const([[4.208054,-1.972973,-3.971659,7.634651],[-6.587172,-2.461278,5.960782,-3.746261],[-9.356756,-1.283189,-7.147953,-6.951939],[8.079770,-0.050130,-2.426641,8.368786],[1.608268,-1.421230,7.622222,-8.516372],[4.115608,3.293083,-6.844420,7.855289],[3.993958,-8.643342,-9.293438,-3.171820],[9.031809,2.717793,-7.135781,5.504146],[-9.950562,-1.118406,7.119945,-3.418103],[2.971016,8.049150,3.046534,-1.609965],[3.236023,-9.365328,6.391470,4.601992],[0.574821,-3.119267,-1.527042,2.438309],[7.591509,-2.202445,-7.617383,-4.735067],[3.975934,3.942899,-9.845213,6.754350],[4.014818,3.867538,-2.622606,4.074437],[-1.468776,-0.720422,1.887666,3.045710],[9.349802,8.798257,-9.896778,9.612439],[1.793191,-4.686309,-6.897842,0.658549],[-5.130903,-4.437562,-1.985432,-4.798319],[-9.496560,7.777930,8.667291,-7.902370],[-8.133010,-6.881813,6.263433,-5.433447],[9.426531,-3.353160,-7.912646,0.943008],[1.990605,-1.526903,1.807397,-4.756083],[5.483347,1.367842,-3.680445,7.009659],[0.908697,-1.155703,7.560104,3.382563],[7.404542,-9.556191,-5.101907,-1.028038],[9.114470,9.361705,-5.924667,-9.314933],[4.294112,-0.287947,-9.115847,-3.523512],[9.187583,-6.604206,-9.141626,8.326135],[-1.731065,9.902444,8.338323,-1.403137],[-1.331722,0.472458,7.525479,-6.130581],[0.065244,-6.358653,-2.139186,6.790752],[0.517319,-2.430541,-3.510642,-0.682087],[5.522724,4.262366,7.775282,-3.049044],[6.202504,-2.201265,2.095386,1.641756],[9.878539,-8.674851,-1.003528,-2.361271],[-1.236472,8.889384,-5.263312,1.650920],[-4.330806,0.939934,-2.413915,9.724987],[2.652319,-7.166566,8.232770,-9.929020],[7.649657,-2.509104,-2.772806,-6.230847],[-4.076312,6.388253,4.057621,-1.566277],[3.885583,3.612983,5.827340,4.411678],[2.347630,-2.263051,3.696243,6.565113],[5.788402,9.458748,-8.946685,-9.996350],[5.437016,-6.602254,-0.070080,-4.489747],[-1.234966,8.336634,1.976410,-1.306796],[-9.070538,0.942207,8.079633,2.287134],[-9.946655,3.308803,-5.726373,4.471496],[1.527244,-4.450317,8.748269,-2.020875],[-7.427338,4.102974,-2.395379,-1.331749],[-9.032875,9.895228,5.444635,8.077598],[9.012865,-8.741261,-1.202486,2.373789],[7.703548,-5.410397,8.700863,-5.290968],[-6.590663,9.486213,-2.330367,-6.986914],[3.568295,-6.314299,-6.779199,-1.198397],[-6.303029,6.512114,3.673267,6.817596],[-6.532026,9.044105,-6.639163,0.153042],[6.999672,0.441625,2.020802,4.490723],[0.980368,4.540557,6.738321,2.697013],[-7.080364,-3.457126,-0.138484,3.172200],[9.372107,-7.600859,-8.808430,9.124014],[-7.866382,8.286965,-5.940008,-9.178463],[1.473551,3.847956,6.133286,-7.618406],[8.819486,9.339175,-4.624961,-7.024639],[0.756145,5.572631,-6.631245,-1.568091],[-2.390301,-9.384917,-0.916660,-3.466350],[-9.789507,-6.569329,7.204830,-0.663089],[2.689130,-3.172409,-6.732467,-9.175745],[6.835108,8.637164,-5.281876,-2.201088],[-5.867504,4.483472,9.723779,-8.428123],[7.178409,7.728826,3.444902,6.266046],[-2.467427,3.877819,-2.046073,-1.645362],[7.117209,0.640056,0.755474,-0.173509],[2.024319,-1.892976,-2.142033,-2.870516],[9.525203,-5.657420,9.811662,-3.753432],[6.924916,-8.385901,2.128758,1.645229],[7.832151,-2.590231,-3.287442,-3.753106],[-2.313197,-2.024989,9.932690,-3.189897],[-7.146887,4.334000,-7.841948,2.829847],[1.637906,5.892408,2.429126,-2.197119],[0.189218,1.185450,8.154643,9.170663],[0.739636,-9.826229,2.909019,1.199535],[2.923041,5.192007,-9.721267,1.184435],[1.773891,-4.395521,9.176283,1.433848],[8.250229,-7.592965,-2.723892,-4.110413],[0.938765,-4.067471,0.378546,1.096170],[-1.989592,-2.695274,4.311920,2.777051],[-3.093993,9.268132,-2.666135,7.918811],[-8.225380,-8.355109,1.407034,-3.078842],[-1.892545,1.247490,-9.470629,-0.802624],[-6.475509,-3.358299,6.079948,-6.273595],[6.981886,9.773597,-9.548915,-8.952032],[8.291608,0.564930,9.341787,2.754558],[-0.759985,-9.467713,1.264939,6.082260],[1.168675,-7.178579,0.701290,1.443329],[-4.927503,-9.652805,9.165531,6.546103],[-8.276447,8.061607,-7.292942,7.035347],[-9.098932,-9.828475,-4.861579,5.218878],[6.931205,-0.727529,-7.888620,8.536415],[3.905111,4.175938,-5.718277,6.404256],[3.509496,1.568520,4.716963,-9.741385],[-9.094526,-2.085239,-1.896443,-5.172119],[0.403407,4.770751,-5.021062,-3.854448],[-6.250814,-4.421197,8.146746,8.065783],[3.878430,-2.791052,4.530212,-5.007232],[5.441141,7.355511,-2.751853,1.012126],[-2.339904,3.273220,-5.672999,-1.900619],[1.482015,6.211115,-8.622752,7.756581],[7.756859,3.382983,-3.511468,-4.275836],[-9.496372,3.851573,-5.140482,-1.798777],[9.319308,0.621571,6.828612,0.639150],[2.246421,7.130591,6.636115,1.467786],[0.915586,-8.255211,-1.186331,1.017544],[-0.660258,3.632274,-0.219430,4.632115],[4.183781,8.364824,5.915413,2.451032],[5.454143,-1.181808,3.381394,-6.780228],[-2.735221,-1.124857,6.936790,8.650357],[-8.595615,-9.991863,-4.350064,7.221171],[8.341274,5.366798,7.256342,1.846917],[5.680671,0.729627,7.355055,8.851436],[-2.220050,-0.892755,-3.470140,6.579697],[-8.108732,7.327244,-2.218840,-4.738157],[0.622051,-6.719598,-4.138475,7.630599],[6.092070,-5.816462,-8.579594,7.815515],[9.992404,0.314141,3.935615,-5.942327],[-0.848328,6.018518,-1.379968,-8.949989],[5.336047,-4.453238,-6.037369,7.996102],[8.405896,-2.191969,-5.155001,-0.157089],[1.023226,4.444859,6.298194,-4.509393],[3.011673,-7.748186,1.996298,2.908062],[5.700434,-7.113087,6.745389,2.589790],[8.485933,3.204527,6.221563,5.027674],[7.791761,-0.468709,6.533942,-0.292132],[-4.388827,-0.219159,-1.490124,-0.893808],[-7.783219,0.273557,-5.860973,-4.228255],[7.204480,1.459405,7.350681,7.681244],[5.179359,9.676884,8.904326,4.832050],[-2.043886,1.413493,2.643973,-3.739065],[1.354685,-0.472892,2.094564,8.419030],[-3.015893,9.420390,-5.722882,-3.280664],[-2.451159,-5.315415,5.897057,2.996731],[3.068246,-8.656661,-3.212107,-3.908945],[6.295776,-8.377371,7.892057,1.538398],[-1.366883,-8.254708,5.540616,5.291738],[-3.189673,6.328554,9.490707,-1.108637],[-8.611029,-3.626736,9.972986,-9.259918],[2.341650,8.423415,-8.922975,-1.519242],[-0.845043,6.974647,9.757616,8.950865],[-2.627385,3.483081,-6.406657,8.759663],[5.701772,2.649168,-4.891672,8.154138],[-8.095126,4.065617,2.509922,-5.730309],[-9.453866,2.614765,-0.396978,9.441774],[-5.368586,-7.641868,-3.501260,6.983965],[4.401084,1.515171,-4.937255,0.386439],[2.698127,8.272509,-7.022034,-1.863752],[-7.453463,-9.113522,7.680285,2.004402],[0.719994,-7.576129,2.902368,7.755722],[-6.612428,9.652421,2.221376,-2.474861],[1.436472,0.405736,0.078298,-3.738100],[7.613499,-7.904237,-3.307062,-6.341037],[7.066789,-8.529618,-1.391362,-9.665487],[-5.736832,0.541253,-9.473695,-3.540732],[-5.317648,-5.488173,-5.652954,6.009558],[1.841090,-0.244302,5.945712,5.281990],[4.069951,-8.638961,2.128485,-1.523787],[-0.213982,9.181020,2.107715,-0.410231],[7.029937,0.475263,4.190517,-7.712206],[-0.899230,-1.009904,4.117140,6.404369],[3.125645,2.471952,-2.570835,-8.468419],[3.061406,4.428769,-1.745020,-9.419751],[-6.846117,7.343310,-7.999213,4.322334],[-0.265888,3.512766,0.966584,-8.306317],[-0.083902,-6.327457,2.972630,4.323741],[-5.156267,-1.449778,-1.109301,9.086647],[-1.428256,-6.059311,-7.972972,-4.979746],[6.674884,-9.533099,-2.144804,-3.699443],[-3.049654,8.059843,6.066876,7.514453],[2.182890,-2.796623,-7.446641,7.257275],[-4.515695,-5.520640,6.975739,4.783317],[-7.228920,7.865466,-6.160310,2.319603],[-1.324810,8.985666,1.750015,-6.181069],[-8.558392,-4.892678,-3.870067,9.141281],[9.771988,5.806838,-9.547059,5.059087],[-8.011865,5.042340,-9.266953,-1.654066],[7.049192,1.560603,-2.693492,-4.950933],[-1.813826,8.341892,-6.738697,-4.293101],[-4.773271,-6.653894,-7.247899,4.815849],[-6.613698,-4.448754,8.070738,-0.383738],[-2.513177,9.337489,4.448091,3.781774],[-1.993422,-4.761496,3.502490,-9.893393],[-2.212506,1.068935,8.624267,0.363367],[3.982077,-1.022194,-3.921555,-3.095414],[-2.617412,3.841871,7.585120,-7.092006],[-7.569514,-9.837547,7.738512,9.907583],[6.025558,-3.540263,-4.544199,-2.653238],[0.726147,-0.446163,2.651006,-8.417619],[7.231845,2.453863,-0.733399,-3.888939],[-5.202646,3.152266,-0.263750,1.880236],[7.229053,-6.181437,-2.925916,7.572791],[0.110449,1.869932,-5.806894,2.167891],[-3.990585,-5.585876,-2.982318,1.127907],[0.914608,-4.235453,6.179395,1.659583],[8.395775,-0.809294,6.155491,-7.532842],[-7.505810,7.514503,5.552692,-3.396798],[-8.430573,9.396838,9.245355,1.135739],[5.666827,-1.853548,-0.884194,3.446440],[2.290438,7.273111,1.209065,-2.963990],[1.661831,7.114463,-7.954965,-1.288875],[-4.270217,2.509529,-4.541045,8.746770],[-8.680847,0.242889,0.052845,-9.244333],[-6.126411,4.766151,2.947890,7.203575],[-0.989523,-5.311701,-5.352559,4.451372],[-6.949480,3.886041,1.615086,-7.676043],[-7.053476,-3.840876,-0.008223,0.916040],[-1.730606,-7.578128,-0.427019,7.370436],[-1.479389,1.594721,-8.417289,-6.525593],[8.538347,-0.836890,-7.451594,-1.255936],[-8.208970,-5.689080,2.232935,5.917333],[1.405027,-6.318781,-6.103635,-3.180572],[3.158175,7.749393,-7.529866,-3.922230],[0.269774,-7.271560,2.896794,7.529310],[-9.205321,-2.602095,2.964933,5.188196],[0.069712,-8.916385,6.548600,5.988075],[-4.232221,9.514755,-3.050025,-5.485058],[-9.018648,9.631832,4.634996,2.498377],[-9.141922,5.587745,6.573922,-1.307959],[-2.295512,-1.212322,0.340941,-8.379664],[4.792973,-0.367501,4.907285,3.496242],[-8.468654,0.410045,7.207805,1.190461],[-3.066829,0.583940,1.435415,8.345712],[-4.789770,-7.450081,6.249948,6.578396],[-8.686976,-3.787059,-9.749218,1.334334],[-8.109987,-5.811279,3.334667,3.056127],[3.161940,1.464755,0.448491,-9.925928],[1.678290,7.513109,-6.543845,9.062381],[3.455739,-7.939940,8.308667,-3.455419],[3.562745,-9.814343,-5.629952,-3.243085],[-2.311471,-5.348664,-9.300385,-8.357147],[9.529826,-8.412281,-9.442484,-0.768636],[3.508627,-3.946910,-2.486607,-1.487690],[8.592076,-2.346336,1.407911,0.449304],[5.238893,6.611247,1.355409,3.917454],[6.901535,-8.861423,9.789199,5.862144],[9.641982,9.523786,-7.858112,1.603190],[-6.418298,1.269106,8.867615,-8.590527],[2.238668,-1.196823,4.617350,1.318042],[-9.170131,-8.453724,1.139290,-6.728392],[2.875122,-2.659370,-4.799933,-8.868713],[-9.877944,-3.097249,-2.721361,-8.118512],[-4.056282,-2.538795,-9.882012,-3.732529],[0.579826,-2.322446,5.058056,-8.125243],[-0.601017,-3.287383,-0.447335,-1.728822],[0.851763,-5.651113,3.232654,4.570818],[-7.666706,7.296085,7.061028,8.019473],[-0.487165,8.151856,-9.772587,5.706122],[3.004642,2.765609,-1.250758,-4.930952],[-9.660746,1.674042,6.606245,4.963071],[4.561331,-9.317747,6.762986,1.249663],[5.929392,5.558028,-1.105922,-7.610430],[-0.293019,-5.274750,4.820658,-8.453868],[3.369934,4.630552,-0.854761,-3.572308],[7.062127,5.370514,-5.459724,6.689142],[3.416555,-6.081386,9.329125,3.804952],[-8.695750,-3.449586,-4.987338,-0.621133],[-3.978262,-2.342382,-5.232714,-9.653704],[1.066777,-8.225891,5.564455,7.825085],[-4.851431,-9.962437,8.352354,-9.332376],[5.871253,9.924442,3.301074,-1.195510],[-8.079572,4.340523,1.354955,-1.422143],[1.921142,2.497240,-4.221757,8.735857],[-1.233697,-2.283187,-9.897503,8.433329],[3.842718,2.240851,-7.631045,2.179938],[0.965929,-3.429065,-8.210854,8.611532],[2.689711,-6.749446,-2.037180,1.601348],[-6.016918,-2.485919,-4.421765,-2.456258],[-6.530945,-2.670339,0.267481,6.885522],[-0.715863,-7.762871,0.807136,-3.898588],[-0.377282,-3.503050,4.724537,6.255447],[-7.164154,-4.290708,4.924264,-2.036043],[-1.858543,7.089292,-7.391175,-3.259834],[-5.143570,-4.128420,5.830978,-5.702341],[3.750306,-5.729609,-9.430697,-7.567739],[1.969672,3.243635,-2.255994,-4.580963],[7.636416,-2.649207,2.593209,-0.689055],[4.645202,7.531507,-9.363606,-9.718098],[-3.861466,-2.584587,-9.094765,1.863878],[1.588158,4.101197,2.262787,-3.553283],[2.655751,-7.463720,-7.237577,-7.058832],[4.692454,-9.206252,1.056480,-4.145712],[0.496421,5.243502,1.599155,6.939452],[7.404661,-0.630167,-4.098988,2.551954],[-7.872512,-1.480246,7.738325,-5.366490],[-2.172674,-1.371714,-9.994728,-9.290161],[2.840924,8.606781,-6.605473,8.797599],[6.038085,-3.769401,-9.341602,4.195244],[-7.879462,9.465285,-6.375672,-6.470262],[-9.053389,4.222313,7.658483,-8.436591],[9.980672,-7.687737,-6.913600,0.240129],[2.420046,-8.637430,-5.000033,-0.358225],[6.049805,-3.141496,-5.244042,6.627785],[8.270426,9.713215,-5.537534,9.251482],[2.919618,3.547535,7.750606,-9.597785],[4.030978,-9.189138,-4.269612,-2.952437],[9.871078,-4.269766,4.639829,-5.646604],[-9.315034,-5.827369,-0.840274,-1.960343],[6.870370,6.516708,-8.807099,6.461039],[-6.567296,6.418317,0.915952,3.281037],[-5.660542,-3.390144,0.624287,-2.562308],[-5.097100,-0.533008,-0.838515,-4.883233],[-0.454295,-8.961624,2.330445,-3.162640],[-6.109060,9.066649,2.205372,-6.051003],[-1.561232,-6.706430,8.024020,1.229366],[9.990408,-4.618647,-8.650770,3.472064],[5.593121,3.443308,9.660778,-9.867877],[-8.706908,3.320532,-6.218850,9.502940],[-3.231641,-4.566021,9.620276,4.758848],[7.396199,-7.168659,1.583994,5.718811],[-1.794663,4.008313,-2.078691,8.991972],[5.043771,3.125162,-2.461703,-9.591983],[-9.683157,-2.360474,-7.147623,-3.712533],[-9.335045,7.223786,-0.788149,-9.909703],[-9.792617,-0.599050,2.643641,9.722881],[4.647696,3.169439,6.455109,-9.719645],[-6.611199,6.301943,3.146555,8.065925],[7.649874,1.645771,2.627164,-0.696301],[9.981937,-0.895430,-4.232848,-1.999127],[-3.534876,8.890225,6.958232,1.548909],[-5.772057,2.314095,-4.766684,5.479583],[0.502330,3.343904,-8.147897,-6.492224],[2.825335,4.814397,-0.620531,5.810518],[8.614020,0.822312,-7.498911,-5.822385],[0.695521,-6.402929,-8.382987,8.492171],[-5.516534,-9.786819,-3.234283,7.101857],[-4.587198,0.174856,-7.788604,4.357053],[2.040174,-1.196096,-0.778401,0.423949],[-9.114777,2.329103,5.633814,5.569277],[-4.464080,1.252738,-6.500310,-2.536300],[3.046661,-3.253851,-8.870084,3.655047],[-7.838822,7.246975,-3.529961,-2.533194],[0.753951,-0.331104,0.004715,-6.976406],[0.328969,-4.644950,-4.351015,-3.493724],[1.411980,8.244780,0.201787,1.212152],[4.332305,-7.151514,5.859092,-4.936735],[-1.461991,-6.971247,-1.826256,4.879092],[-3.995601,-8.390193,-2.490213,-2.098671],[0.161616,8.146252,-4.314979,-0.347201],[-3.003974,0.332897,9.785153,-0.321918],[-1.728103,8.998108,1.532395,0.114239],[6.521234,6.826165,-1.086324,3.215530],[5.347322,-2.115313,1.056266,6.822775],[8.609889,-7.253453,4.749165,9.398020],[6.946460,-2.910745,4.663466,-0.056085],[8.876326,5.544805,1.572186,6.638548],[6.718959,-9.856068,-0.143130,-4.135355],[-5.134427,8.271397,9.147462,-6.425069],[1.244486,-1.985799,-7.542114,9.869638],[-2.505707,9.056230,4.266056,-3.649728],[4.742688,-9.429145,3.764210,2.359428],[4.990088,4.739342,3.290389,4.779514],[-2.848984,-8.410263,-2.114686,4.297548],[-9.834878,-3.713354,8.403651,-6.540425],[1.662890,8.250854,-6.212598,-4.048835],[5.694489,-5.038354,5.164527,9.953299],[8.165382,-2.084893,-6.791523,-7.926665],[7.312551,-4.558382,-0.264740,7.449999],[9.341308,-4.768224,0.051077,0.416566],[-5.904660,-1.750805,1.035708,7.333224],[3.237098,-2.264144,9.194752,-6.412438],[7.473768,-6.887245,4.834528,0.356005],[-6.763124,-2.926780,6.710965,-6.915733],[-0.279723,0.156082,-3.869601,-7.931594],[7.233964,4.423432,-6.661505,8.014757],[3.192394,5.704732,7.089786,1.273934],[-4.398364,3.554124,-9.669928,9.582301],[-7.253729,-7.701141,0.770620,-2.626104],[-6.584156,-2.615984,4.929736,-7.823714],[8.524555,-2.943500,7.430139,-3.949174],[8.395076,8.089684,5.039541,-3.102870],[7.650841,-9.424272,-5.532025,8.586609],[8.798618,1.958329,9.897134,3.432185],[5.639876,3.561347,3.004335,-3.068473],[-8.330935,-5.655311,-3.681285,8.634004],[-1.616714,-5.914425,4.908450,7.935365],[5.594625,7.213974,-1.865845,8.150814],[-6.069518,-4.535446,-8.249580,0.589704],[-3.679631,-4.618882,-3.233875,5.323768],[-6.742291,6.371374,1.344931,-6.599073],[8.896762,-8.061002,-0.230229,7.744641],[-9.928834,-9.513887,-1.853790,9.297968],[-4.344124,5.177292,-0.546596,0.163035],[3.184665,-3.826958,1.923508,3.199572],[-7.977058,-8.973362,-5.785265,-6.973554],[-2.217646,1.502440,-9.235605,9.224172],[7.600494,7.065481,3.702700,-8.865027],[-5.224547,-3.638054,9.821077,-9.668461],[9.782595,-8.391232,8.528298,-0.897488],[9.915945,-9.512486,2.674415,-4.819338],[3.227499,-4.370702,-6.248797,0.111814],[7.422769,-0.718610,1.357479,-3.838430],[-1.330596,-0.941100,9.379696,9.260056],[3.061404,-1.378891,5.305369,3.933053],[0.127809,-2.929039,-2.593499,-8.148679],[9.584499,-1.705395,8.737301,6.530795],[0.949484,0.812947,-5.445238,5.053717],[6.997099,-2.321772,8.876795,1.857987],[2.348232,-2.075356,1.834441,8.308188],[-9.034415,1.033217,3.477353,2.661779],[4.797801,7.428634,4.735337,6.418575],[8.482501,6.443610,4.696623,5.812120],[-9.968536,-1.436987,-9.672853,-1.182761],[0.554533,-6.037346,-7.492328,5.775885],[4.275472,-9.602955,2.503078,1.262002],[1.428196,2.154025,1.208266,-5.408564],[0.989448,8.494307,-4.678492,-1.970802],[2.712659,-6.285352,-1.582118,3.748879],[2.430253,-1.768175,6.390893,4.937553],[-5.090467,2.484680,3.079142,-0.040558],[-4.844068,-9.132381,1.959582,-4.514046],[0.405647,1.437942,-6.175626,1.602238],[-5.708251,2.620479,6.676358,-2.112949],[3.033367,1.572668,9.618719,0.389487],[4.898549,5.311452,-9.038454,-4.279332],[-0.693932,8.000981,-1.250804,-7.121559],[-2.679409,8.272268,-1.022492,-5.864686],[9.545850,-0.527736,7.169218,2.948962],[6.811874,2.575397,-1.319359,-5.552498],[8.002275,-0.451726,-7.065474,-7.786633],[-9.658781,3.617931,-0.881711,-0.270870],[0.026181,-4.405471,6.327414,-4.220435],[-2.224294,-8.561381,1.733416,-5.455657],[0.649527,-0.174078,8.547758,-5.960518],[-6.478667,2.899931,9.989534,8.111891],[-8.189327,7.056137,6.444453,5.215508],[-2.012289,-9.939912,-0.373974,-4.162967],[0.356125,6.015822,-6.184382,-3.376604],[2.267644,6.589117,-3.191896,-0.032608],[-0.822374,-0.153939,0.042142,-9.560328],[9.211399,0.141250,5.726007,5.206318],[-6.664649,5.296789,4.911633,-5.723095],[2.582100,3.056390,-4.695796,6.025854],[-4.671701,-2.118074,9.674133,3.879513],[5.242789,-0.983849,-1.426450,-9.371035],[-9.484983,9.015197,4.605037,7.120913],[9.705461,-0.404714,-8.006999,6.118044],[7.220758,-5.873965,-0.777041,-8.780191],[-9.123961,-8.610448,-3.729747,6.751870],[-1.763355,-0.807535,-7.667003,6.041097],[7.162179,4.233691,7.515225,-8.199431],[-0.868337,3.669418,-6.566639,0.076239],[-8.623838,0.956045,-6.647422,6.058590],[-1.130500,-3.613213,4.822493,-6.680857],[-2.211171,-6.390563,-7.928259,-7.429736],[2.921885,9.386219,9.724072,-0.430979],[-4.582785,8.161305,6.836724,-4.484698],[-4.731245,-4.969058,-5.987534,-9.307779],[5.117911,-8.954716,9.898538,-6.310258],[-8.141361,-6.138931,-6.266175,0.117799],[5.783666,2.461267,9.466165,-1.058307],[9.899753,-6.562628,8.649294,-4.396070],[4.389177,3.348813,4.723323,-9.904945],[4.181444,-6.871870,9.100134,4.863459],[-5.850610,9.783566,-9.119488,8.336943],[5.612441,6.502036,5.199768,8.790712],[-6.670064,2.453585,-6.742472,7.109694],[1.330302,-8.711815,0.063943,3.730962],[-0.175311,4.187569,-7.975198,-7.546037],[-3.990278,-5.740640,3.604596,6.734170],[-9.966538,-7.537645,-6.284761,6.507034],[5.945333,-2.258067,5.790919,-2.853816],[8.539445,-7.350065,-6.924533,7.421546],[-8.890142,-5.804713,2.343508,4.071721],[5.085267,-6.708523,4.502291,2.495198],[2.740395,9.033387,6.290987,1.307460],[0.601828,-3.086268,-0.471129,8.390795],[4.019543,9.672668,2.877732,8.152741],[-9.173625,-1.298547,1.258616,-3.584375],[1.450591,8.452312,4.718191,6.867666],[-9.093785,-4.422460,6.223260,6.577861],[-3.886489,7.880566,7.048635,-9.654437],[4.280383,1.673761,-2.792293,5.497320],[7.901564,-9.245195,4.182648,4.334730],[2.201699,4.265814,8.091009,7.851433],[0.134441,0.543821,6.208195,-7.545956],[-1.676722,5.841940,5.775770,0.269480],[5.971985,1.052097,2.028213,-8.926574],[-0.808769,-7.538511,-8.973400,3.433998],[-6.368956,-9.990040,-9.175682,-3.103176],[-4.616241,5.758221,4.214126,-9.490774],[-8.175518,1.402673,0.798841,-5.519407],[0.605758,9.901178,1.622265,3.149063],[-3.817837,8.887054,-2.810776,4.179494],[-0.196746,-9.983545,6.468579,-9.090335],[-0.065342,-6.736748,-3.562588,-4.921174],[2.316288,7.108308,-7.094585,-1.289830],[5.305033,-0.888456,-7.838660,-5.302975],[-2.758374,-6.841552,-6.461121,-9.977970],[-6.229872,-7.650444,9.180064,6.117850],[-2.127217,9.054999,8.990380,8.587958],[-5.697756,6.261828,-3.751575,3.264311],[-0.834010,-6.728516,-8.910797,-9.545409],[2.287286,8.601922,8.323043,3.151178],[-6.155403,-5.479143,5.639830,-7.768540],[2.525291,-0.443200,5.229710,9.202270],[3.895116,-2.256592,-0.334609,-5.935007],[7.036118,-2.073437,-7.949181,4.543005],[2.363422,3.300494,4.608336,-4.133317],[6.193409,-1.146957,-1.705253,-8.571755],[-0.298868,0.633179,4.021894,-6.297552],[-1.121525,5.673114,9.757923,4.223941],[1.631763,6.203132,-3.805166,6.391153],[-6.316843,-9.698433,3.385458,-5.060062],[-1.115495,-4.817577,7.102285,-3.674656],[-5.767129,1.672699,-1.750646,-6.700206],[2.436192,2.898324,5.883153,3.245439],[-4.663581,-0.614151,-3.309063,3.847366],[-5.794648,9.627147,4.301941,4.110853],[3.498045,0.730358,1.402852,1.755166],[9.185172,-8.591441,-9.784780,-4.476547],[-1.777586,-1.621103,7.877471,7.378880],[-2.676664,8.054658,-2.840454,3.144801],[3.251470,-5.909222,-7.008535,2.832584],[-8.219693,-1.675363,6.753750,0.867048],[7.894682,8.390285,-4.053585,-4.950371],[9.663233,-7.671054,4.360706,5.360806],[-2.092283,1.555639,-3.387063,-5.628835],[0.486572,0.054869,4.523706,-2.693004],[-1.644992,4.215562,-8.770068,8.284384],[5.586889,3.743660,0.441500,-2.477471],[-9.465460,-8.969520,-0.898436,1.829621],[9.636573,5.775730,-2.637887,8.032660],[1.087696,5.994939,6.509171,5.708919],[-0.291046,2.109564,2.400459,7.329152],[9.016646,-5.103378,-7.030054,9.840670],[-8.993289,-4.290959,-8.731906,-1.263762],[-6.031277,7.689087,-6.217970,-9.056647],[-8.308791,2.620170,3.295801,7.901534],[-7.566091,7.288873,-3.283734,1.846896],[8.804684,3.668958,0.646751,1.500938],[7.661805,1.113014,4.125584,-8.991744],[5.922306,2.508110,-4.281297,-7.641808],[1.244698,6.073615,-3.802273,-1.274390],[-0.433783,-8.782767,8.114782,1.194192],[-1.815205,7.679940,-8.854061,2.058883],[2.586878,7.951190,-0.023311,-3.585806],[6.297929,1.418120,-3.392001,5.977773],[7.700874,7.975307,3.262171,7.538313],[3.885891,2.148781,-4.583425,-3.435741],[3.942147,9.427291,8.994192,9.608410],[6.357737,-6.893204,4.235704,-6.635864],[9.264456,1.070874,-7.090812,0.934210],[9.829107,1.978802,5.765690,3.570221],[8.631579,-8.349571,8.544148,2.465777],[-1.961529,-3.721113,6.325242,-0.430633],[-5.413239,5.262976,-0.568485,1.457217],[7.744392,7.927879,-9.880959,-5.569635],[5.793147,-4.477483,-1.139740,8.239826],[0.290147,-8.175914,-9.695914,-7.997375],[2.095083,8.693978,-2.723861,9.876878],[-4.424663,-2.168753,-7.777796,-4.628321],[-1.846014,-5.403793,1.588752,1.355609],[0.086707,5.017197,8.021042,1.691948],[-5.069681,-1.421849,2.405628,-2.880307],[2.394698,-0.283017,2.929692,5.942827],[2.163426,3.246524,-9.080067,8.665534],[-2.652894,9.590335,-3.371639,-9.748530],[-4.605926,8.267107,2.654242,8.775066],[7.212616,-7.470471,-3.956242,-7.001951],[7.383780,-1.666969,-7.428539,3.783676],[6.155482,-2.307605,9.510596,-4.792713],[-7.772103,6.203610,4.788140,-6.914575],[-5.204435,-3.711893,-6.479815,-1.157257],[-3.885614,8.662133,8.136309,0.371923],[-1.927366,-2.938154,4.039761,1.719290],[6.384333,8.571640,4.032788,5.313480],[-8.007784,-4.603409,-2.144433,-9.295138],[-3.527529,5.466667,-1.053821,-3.513817],[5.421946,3.867653,3.629866,-1.361137],[3.567700,0.386338,0.539751,0.562341],[-8.248160,-3.530831,-2.884105,1.533498],[0.487415,-3.919919,-2.202614,-5.926913],[-2.845717,-8.643131,-5.282264,-3.486564],[-3.275801,-0.109295,-9.631616,0.837447],[7.566491,9.936156,-1.658100,-4.155201],[4.825679,4.714851,9.967274,4.655881],[4.407631,4.279652,-9.390370,-2.770614],[-8.295584,-1.310777,-5.428634,2.766655],[-0.913609,8.198297,-6.158566,-9.363882],[8.543747,2.990695,0.873856,-6.084265],[-4.564243,-8.321837,9.718552,7.439849],[2.633982,-0.397916,7.407982,7.960856],[-9.077269,-9.027629,0.279965,-6.942722],[-4.954139,9.706518,1.806496,4.325497],[-9.682947,-4.306452,-4.398775,7.694636],[-8.345242,4.645489,3.349689,0.550565],[7.742386,-9.581994,-7.027030,2.112086],[-0.383526,-6.880154,-2.561923,8.938739],[7.011552,-8.288590,3.443094,1.842400],[9.680184,8.130344,7.343713,-3.225339],[-8.988979,6.653836,-2.863906,-8.984362],[-7.218801,-4.012521,-9.961855,6.455729],[7.176311,5.847607,6.757357,-9.008375],[8.725779,3.043945,-8.253670,2.971498],[8.101925,8.471198,-6.826887,-8.048213],[-3.050747,6.483630,4.940698,-8.862425],[1.546239,8.717310,-2.070676,2.717058],[-5.825642,9.892345,0.980318,7.825396],[4.748799,-6.994055,-7.890142,-4.740076],[4.669324,3.728132,-6.369382,0.300920],[2.484441,-1.565007,7.764906,8.767117],[6.618306,-8.775025,-8.936328,0.507491],[7.414259,3.320641,-0.253992,-7.667422],[6.103772,-1.769596,-0.996023,0.874445],[3.291072,7.663574,-3.480531,-6.521300],[9.066114,-2.937688,-3.208006,-8.560472],[9.756898,-8.857457,8.837975,3.675374],[-3.409443,3.164152,9.143517,0.371684],[-3.073890,0.616325,0.951847,-1.051142],[6.055111,-1.802976,-5.085787,7.874300],[-8.743991,-4.830227,-9.249158,9.068439],[9.944813,7.282061,0.260534,6.181426],[-7.719811,-0.769400,-1.503122,-3.848524],[1.793850,-1.239119,0.949216,6.498038],[9.377799,-1.156157,6.125899,-8.209391],[-5.174236,-0.228310,-2.088896,5.237906],[-8.669207,9.184866,2.884709,-7.528946],[-7.831941,-1.284252,-5.715823,-6.258887],[9.121989,-5.304690,-0.554168,-1.565858],[-8.326375,-6.233581,-1.154716,6.331646],[-7.424039,-1.047476,1.163991,-3.151752],[2.063591,1.890080,1.711499,3.415768],[-0.924271,2.336477,-1.047309,9.977006],[-7.843155,-9.804646,-4.496023,-1.993019],[-6.817868,-7.479658,8.659576,4.228888],[2.248655,4.174652,-2.514033,-3.847816],[-0.852361,1.681355,5.556405,5.121273],[5.689925,-1.921271,-1.136558,-2.651364],[6.380089,-9.143291,0.854397,1.517804],[-1.642295,0.207954,9.163686,-0.242972],[-2.366347,4.931178,-1.292361,4.235922],[-7.378180,7.319264,-0.035855,5.095247],[-9.949844,1.741404,7.718667,2.111722],[7.179181,5.451542,-3.395835,-8.481331],[2.236934,-3.987669,-5.093693,0.876113],[1.658040,6.895245,-4.981640,-2.349456],[-3.989420,3.156064,-5.497810,-0.682677],[9.471157,0.633679,3.171652,-6.737716],[5.134484,-0.785909,4.388178,-7.047145],[7.003813,-7.233347,-7.691263,-5.191691],[-6.269505,-2.561383,-6.905937,-4.816777],[-3.848589,3.044168,8.876426,6.811905],[-8.050012,7.535956,2.825539,9.508235],[0.982967,9.857150,-3.669367,8.858575],[5.448291,9.257774,-9.017741,5.349627],[7.017646,-7.544835,7.889767,5.400575],[2.193595,1.376921,-5.009550,4.924869],[-0.896147,3.977291,5.547555,-5.937470],[0.659253,-3.656696,4.335551,-4.704460],[2.221814,-3.964240,-2.155684,-1.712153],[-6.033838,4.878094,-7.352137,-8.211253],[4.882305,6.454287,-6.616327,1.286742],[-0.612589,4.031914,6.208623,-1.154182],[-5.427960,9.720766,6.819047,3.754274],[8.128841,-9.658244,0.084740,4.231748],[9.232357,8.904899,-4.316402,3.092376],[5.492457,-2.808662,-1.287132,2.129208],[9.724254,-4.772854,-2.471889,-9.925095],[-8.184022,-8.997595,-9.274912,-0.799019],[-2.035809,9.113304,-7.979688,9.222840],[-9.312794,-9.537635,2.278577,1.675179],[0.368059,8.553477,4.646475,6.268311],[-5.064287,-6.888449,4.751497,-5.873815],[-0.906777,-8.769998,-1.503388,-7.532858],[-1.174635,-3.194797,-5.572507,-1.245024],[0.234590,-5.645701,-3.497804,-2.797582],[9.529422,9.939002,7.281826,-7.338955],[1.287968,-7.983926,6.506209,-3.312297],[3.343110,9.419433,4.667533,2.768704],[2.240375,8.944495,-0.396029,-5.068105],[-8.112668,-2.093508,-6.070164,-1.730869],[-7.357261,5.940860,0.024375,0.608772],[-5.263881,4.922581,-1.117944,-1.657711],[-0.935844,1.207554,6.207218,-4.968509],[1.230911,1.747574,1.213147,-0.094686],[-3.992139,5.790499,7.445459,1.908766],[5.587894,0.722022,6.258866,0.715935],[-0.765303,-7.021039,2.158262,6.975289],[-0.472101,-4.483268,-5.987842,9.248198],[-0.927650,2.913709,9.838503,-9.845121],[0.448262,-0.245272,9.562282,-7.020043],[8.238421,-8.601320,8.970470,3.904699],[-7.848641,4.430116,-8.450441,-8.486595],[-3.734360,6.269308,-4.881668,-3.093131],[6.815304,-3.863065,7.814409,-2.819056],[-8.893724,3.433617,4.993453,5.554569],[-3.490116,-3.471968,3.190315,2.231080],[-6.911640,0.111203,-4.504292,-3.548368],[-2.198023,8.820704,7.811484,-1.272936],[-8.179332,7.476807,3.844153,1.307351],[-4.994872,-9.231894,-6.574631,8.931023],[-0.700355,8.755510,-2.463746,9.403296],[4.596313,-0.176879,-4.154703,-9.676315],[-0.452743,-9.701488,-9.340905,7.070074],[-1.843465,-5.314709,-4.317230,2.742280],[-0.582660,4.255246,8.151430,8.385330],[1.488453,6.422087,9.440508,-0.536649],[-3.217468,8.421028,8.468363,6.350877],[-8.663086,-6.357996,2.566965,-8.879766],[7.980058,-1.059883,-4.099884,9.620713],[-8.391793,7.364155,-9.314315,9.011167],[2.239679,3.590035,-2.050395,-8.929000],[-9.490107,5.281741,-3.809668,2.473135],[7.879802,-0.394632,9.687006,-0.162036],[8.749074,0.011792,8.851913,-0.001070],[7.039426,6.464222,-3.807343,0.767658],[7.302228,-7.424334,-3.533851,8.343305],[4.501226,9.782180,7.667028,-0.039960],[6.230272,-0.060498,1.561864,9.864985],[-4.893919,-2.692874,-8.047194,9.028592],[-5.419028,-8.153204,1.951771,-9.461924],[6.407619,0.301723,9.079955,9.061166],[-9.093452,-9.199677,-1.489112,-6.871061],[-5.508013,2.637581,-4.971969,-1.742502],[-9.451097,4.965289,-9.872159,1.860000],[3.692354,-0.549840,-9.758050,-6.084530],[6.529828,-7.880111,-8.708836,-1.746640],[7.013973,-0.946379,-6.135009,-8.228206],[0.872000,-2.272193,-3.519577,4.317318],[2.340038,-7.992369,-9.335527,-8.354421],[2.610214,9.591955,5.598161,0.981088],[-7.859895,1.425790,-9.780528,8.908074],[6.763571,-7.996149,7.625185,-0.724409],[6.793431,3.320424,5.801095,-4.734361],[-4.367236,-3.297045,1.120140,5.974029],[9.071837,9.372851,-2.896235,9.772355],[-4.175583,8.883052,-7.401074,-9.325659],[7.697431,5.377190,5.403328,0.517075],[8.540365,-8.422010,4.600513,-0.405043],[-6.208557,2.714744,4.050353,-5.028569],[-9.439088,1.625689,7.667232,-5.193849],[2.563333,7.019001,4.264900,7.885690],[6.004922,-0.074837,2.334880,7.331811],[-1.137392,-4.752816,-7.743213,0.811607],[2.440768,3.238124,0.270124,6.110494],[7.539272,6.488243,9.085795,4.144872],[-1.761747,-4.694865,6.435057,4.990706],[-7.822805,1.381729,6.916083,0.699134],[4.966085,0.397853,-3.272076,-9.148595],[-2.595854,3.314249,-9.175469,-4.462709],[-3.428605,-5.759070,-9.363325,3.382261],[7.848155,1.023458,7.057176,2.572271],[6.923663,1.103578,2.193880,7.310807],[-0.205086,-4.057247,-4.281348,6.565497],[7.512117,-0.249661,-3.180374,-9.334310],[-0.321037,-2.492915,-7.435813,-7.114477],[-6.305990,1.668020,5.054451,8.184148],[6.328277,-6.606326,-8.848326,-7.944086],[8.871513,-6.910306,-1.218977,-1.622007],[-2.322662,9.902276,-9.364247,8.842649],[8.210841,9.935493,1.553117,-0.485800],[-2.073315,-6.550003,2.899449,-3.308020],[2.086225,-6.665614,3.612218,-4.229609],[4.565725,-7.226302,-3.308454,-6.141573],[-7.039612,-9.957540,4.681390,8.250712],[-4.334516,-0.243728,-0.563350,-3.317437],[3.975622,-2.144950,6.122272,8.775963],[-9.843803,2.268973,2.742779,-4.525480],[2.374293,3.157081,-2.724891,-3.375410],[5.057535,-0.857826,5.658298,0.685555],[4.228757,3.807222,9.122318,5.104863],[-3.009093,-2.306564,-7.748044,3.379247],[8.484672,-2.415491,3.559716,-1.874162],[-3.506368,5.333695,-5.620617,-5.528031],[-8.717938,-0.704584,-9.198903,3.197712],[-6.374903,-7.024104,-7.553939,-0.231070],[3.239865,4.126035,3.876193,2.676455],[-6.601576,1.866798,8.399349,-3.389941],[1.123713,7.142264,-1.647000,-7.624970],[-4.061818,-3.898613,7.226406,8.441146],[8.456482,5.871046,-5.865635,-9.493624],[8.232883,3.657287,-6.784215,-9.357438],[3.444609,7.123084,-6.258348,-9.572347],[5.155267,-8.588557,-3.017362,4.352150],[-5.252481,-9.214763,7.223172,-3.962691],[2.729405,9.971952,6.197539,6.225590],[-2.623130,6.316506,2.941140,0.880028],[-1.472830,6.988004,8.074644,-2.386237],[1.864854,4.521122,-6.804375,-3.084562],[1.953542,7.185173,2.283257,7.388663],[2.848153,9.583737,4.279406,8.626725],[-7.037383,-9.104942,7.424207,1.793320],[5.119936,2.461268,-2.346707,3.594058],[-4.795813,3.240499,-2.558078,1.233891],[0.023931,-5.588923,6.111132,-3.218337],[-7.651816,-1.850892,1.661724,-3.168445],[-9.501460,-1.703359,9.383158,-7.510486],[-9.666982,-3.304714,3.087810,8.735523],[-1.900465,5.780277,6.751006,1.024103],[-2.288390,-2.926456,8.615357,-3.501272],[-2.937552,9.163793,2.076324,6.469571],[9.534060,-0.438370,6.722813,0.959268],[9.723337,-3.968297,-4.190597,-1.368146],[3.819232,-1.731704,9.604856,-0.747759],[-5.848776,-9.034445,4.773977,1.837991],[6.485795,6.456241,4.869556,-7.043470],[6.052951,-8.920731,-4.884345,-7.370577],[0.625894,-0.016044,-0.554031,-3.840337],[-3.510590,-8.914859,0.592413,-3.068809],[7.581800,4.953899,-7.854340,3.998413],[-2.989987,1.942955,-9.019058,-2.396254],[8.026837,-1.016833,6.627430,-6.834873],[6.802164,-5.407640,-4.826925,7.129492],[-2.114833,9.137943,-5.733287,0.187652],[-4.732590,3.624876,-5.297435,-4.277541],[0.716584,0.187203,0.692602,-5.871758],[-2.989958,0.016002,-6.422381,-7.579620],[-5.874222,3.591044,-6.777594,4.501520],[-6.005787,7.261413,1.211605,-8.963797],[8.859518,7.851626,0.841596,3.290690],[-6.214744,-9.523934,-6.752619,-4.585634],[-5.716643,0.908950,-6.889698,5.462378],[-5.370393,9.703301,-0.113948,-7.459533],[-1.924592,2.937090,2.295044,9.059131],[7.504851,-6.553949,8.262629,-2.162360],[8.118358,-9.037714,0.852016,-3.497825],[2.374110,3.841963,6.399546,1.049862],[4.133366,6.741080,3.475635,8.126187],[-8.760351,-9.817830,-9.343813,-6.759428],[0.309304,6.615980,-4.916088,-5.768904],[5.612722,-5.323951,6.762036,-5.306128],[-6.445197,8.597513,3.454429,-9.821184],[4.447157,6.132720,-1.975096,1.079089],[-1.921035,-6.497472,-7.331478,-8.194511],[-2.244331,-1.325294,-6.056682,-4.765010],[-9.242530,6.846428,-6.119156,5.084293],[-2.935663,5.111209,-9.694839,-3.825901],[1.349761,-1.722462,1.152778,-0.444385],[0.827554,9.747340,8.678602,-6.554396],[-7.197257,7.266210,3.809330,-3.124931],[5.285161,-1.437980,-4.473676,2.889215],[5.523352,6.108526,-5.898660,-5.433560]], dtype = "float32")#candidate|5733|(840, 4)|const|float32
call_5731 = relay.TupleGetItem(func_4964_call(relay.reshape(var_5732.astype('float32'), [4, 15, 7]), relay.reshape(const_5733.astype('float32'), [840, 4]), relay.reshape(var_5732.astype('float64'), [4, 15, 7]), ), 1)
call_5734 = relay.TupleGetItem(func_4969_call(relay.reshape(var_5732.astype('float32'), [4, 15, 7]), relay.reshape(const_5733.astype('float32'), [840, 4]), relay.reshape(var_5732.astype('float64'), [4, 15, 7]), ), 1)
func_1266_call = mod.get_global_var('func_1266')
func_1269_call = mutated_mod.get_global_var('func_1269')
call_5753 = func_1266_call(relay.reshape(var_5732.astype('float32'), [4, 15, 7]))
call_5754 = func_1266_call(relay.reshape(var_5732.astype('float32'), [4, 15, 7]))
bop_5755 = relay.add(const_5706.astype('int16'), call_5731.astype('int16')) # shape=(8, 840, 4)
bop_5758 = relay.add(const_5706.astype('int16'), call_5734.astype('int16')) # shape=(8, 840, 4)
output = relay.Tuple([bop_5708,bop_5725,bop_5728,var_5732,const_5733,call_5753,bop_5755,])
output2 = relay.Tuple([bop_5708,bop_5725,bop_5728,var_5732,const_5733,call_5754,bop_5758,])
F = relay.Function([var_5724,var_5732,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5724,var_5732,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

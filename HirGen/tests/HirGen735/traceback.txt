==========mod==========
#[version = "0.0.5"]
def @func_7850() -> (Tensor[(5, 15, 15), float64],) {
  %0 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  (%0,)
}

def @func_267() -> (Tensor[(5, 15, 15), float32],) {
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %2 = sigmoid(%1) /* ty=Tensor[(5, 15, 15), float32] */;
  (%2,)
}

def @func_8782() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %3 = @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %4 = @func_3228() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %5 = %3.0;
  %6 = %4.3;
  (%5, %6)
}

def @func_6843() -> Tensor[(5, 15, 15), float64] {
  %7 = @func_2718() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %7.0
}

def @func_13666() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) {
  %8 = @func_12199() /* ty=Tensor[(5, 15, 15), int64] */;
  %9 = @func_5153() /* ty=Tensor[(5, 15, 15), float32] */;
  (%8, %9)
}

def @func_6985() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(28, ?), bool], Tensor[(28, 1), float32]) {
  %10 = @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %11 = @func_3107() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), float32]) */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(28, 1), float64] */, dtype="float64") /* ty=Tensor[(28, 1), float64] */;
  %13 = reshape(%12, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %14 = @func_5675(%13) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %15 = %14.2;
  %16 = cast(%15, dtype="bool") /* ty=Tensor[(28), bool] */;
  %17 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(28, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(28, 1), float64] */, dtype="bool") /* ty=Tensor[(28, 1), bool] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(28, 1), float64] */, dtype="float32") /* ty=Tensor[(28, 1), float32] */;
  %21 = %10.0;
  %22 = %11.2;
  %23 = less_equal(%18, %19) /* ty=Tensor[(28, ?), bool] */;
  %24 = asin(%20) /* ty=Tensor[(28, 1), float32] */;
  (%21, %22, %23, %24)
}

def @func_12748() -> (Tensor[(5, 15, 15), float64],) {
  %25 = @func_4991() /* ty=Tensor[(5, 15, 15), float64] */;
  (%25,)
}

def @func_4007() -> (Tensor[(5, 15, 15), float32],) {
  %26 = @func_2735() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %27 = %26.0;
  (%27,)
}

def @func_3266() -> (Tensor[(5, 15, 15), float32],) {
  %28 = @func_1367() /* ty=Tensor[(5, 15, 15), float32] */;
  (%28,)
}

def @func_12412() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(1, 120), float64], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8]) {
  %29 = @func_8400() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %30 = @func_11676() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 120), float64] */, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
  %32 = reshape(%31, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %33 = @func_9704(%32) /* ty=(Tensor[(5, 15, 15), bool], Tensor[(12, 15, 16), int64], Tensor[(120), float64]) */;
  %34 = @func_10109() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %35 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
  %36 = %29.0;
  %37 = %30.5;
  %38 = %33.0;
  %39 = %34.1;
  %40 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
  (%35, %36, %37, %38, meta[relay.Constant][2] /* ty=Tensor[(1, 120), float64] */, %39, %40)
}

def @func_2756() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %41 = @func_2051() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %42 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
  %43 = %41.0;
  (%42, %43)
}

def @func_14512() -> (Tensor[(5, 15, 15), int64],) {
  %44 = @func_11263() /* ty=Tensor[(5, 15, 15), int64] */;
  (%44,)
}

def @func_17777() -> Tensor[(5, 15, 15), float32] {
  %45 = @func_13649() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %45.0
}

def @func_13869(%var_13814: Tensor[(13, 9, 14), bool], %var_13822: Tensor[(13, 9, 14), bool]) -> (Tensor[(13, 9, 14), int64], Tensor[(5, 15, 15), float32], Tensor[(11, 15, 3), int16], Tensor[(11, 13, 12), uint8]) {
  %46 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 9, 14), bool] */, dtype="bool") /* ty=Tensor[(13, 9, 14), bool] */;
  %47 = shape_of(%var_13814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(%var_13814, dtype="bool") /* ty=Tensor[(13, 9, 14), bool] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %50 = logical_or(%48, %49) /* ty=Tensor[(13, 9, 14), bool] */;
  %51 = cast(%var_13822, dtype="int64") /* ty=Tensor[(13, 9, 14), int64] */;
  %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
  %53 = cast(%50, dtype="int64") /* ty=Tensor[(13, 9, 14), int64] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %55 = @func_10970() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %56 = @func_13497() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %57 = %56.0;
  %58 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 15, 3), float32] */, dtype="int16") /* ty=Tensor[(11, 15, 3), int16] */;
  %59 = shape_of(%57, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%57, dtype="int16") /* ty=Tensor[(11, 15, 3), int16] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %62 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %63 = multiply(%53, %54) /* ty=Tensor[(13, 9, 14), int64] */;
  %64 = %55.0;
  %65 = bitwise_or(%60, %61) /* ty=Tensor[(11, 15, 3), int16] */;
  %66 = %62.0;
  (%63, %64, %65, %66)
}

def @func_8754() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) {
  %67 = @func_2545() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %68 = @func_6257() /* ty=Tensor[(5, 15, 15), int64] */;
  %69 = %67.1;
  (%68, %69)
}

def @func_7406(%var_7346: Tensor[(12, 15, 16), float32]) -> (Tensor[(12, 15, 16), bool], Tensor[(12, 15, 16), int64]) {
  %70 = cast(%var_7346, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
  %71 = cosh(%70) /* ty=Tensor[(12, 15, 16), float32] */;
  %72 = cast(%71, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
  %73 = sigmoid(%72) /* ty=Tensor[(12, 15, 16), float64] */;
  %74 = cast(%var_7346, dtype="bool") /* ty=Tensor[(12, 15, 16), bool] */;
  %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%73, dtype="bool") /* ty=Tensor[(12, 15, 16), bool] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %78 = cast(%73, dtype="int64") /* ty=Tensor[(12, 15, 16), int64] */;
  %79 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%71, dtype="int64") /* ty=Tensor[(12, 15, 16), int64] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %82 = greater(%76, %77) /* ty=Tensor[(12, 15, 16), bool] */;
  %83 = bitwise_or(%80, %81) /* ty=Tensor[(12, 15, 16), int64] */;
  (%82, %83)
}

def @func_10640() -> Tensor[(5, 15, 15), float32] {
  %84 = @func_9239() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %84.0
}

def @func_12055() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float64]) {
  %85 = @func_2718() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %86 = @func_8122() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %87 = %86.1;
  %88 = cast(%87, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %89 = reshape(%88, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %90 = %85.0;
  %91 = @func_637(%89) /* ty=Tensor[(5, 15, 15), bool] */;
  %92 = @func_4167() /* ty=Tensor[(5, 15, 15), float64] */;
  (%90, %87, %91, %92)
}

def @func_11263() -> Tensor[(5, 15, 15), int64] {
  %93 = @func_10722() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %93.0
}

def @func_11898() -> (Tensor[(5, 15, 15), float32],) {
  %94 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
  (%94,)
}

def @func_2504() -> Tensor[(5, 15, 15), float32] {
  @func_1001() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_13292() -> (Tensor[(5, 15, 15), float32],) {
  %95 = @func_10373() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(15, 75), float32], Tensor[(5, 15, 15), float32], Tensor[(28), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %96 = %95.5;
  (%96,)
}

def @func_9872() -> Tensor[(11, 13, 12), float32] {
  %97 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %98 = %97.1;
  %99 = cast(%98, dtype="float32") /* ty=Tensor[(11, 13, 12), float32] */;
  cos(%99) /* ty=Tensor[(11, 13, 12), float32] */
}

def @func_17096() -> Tensor[(512), float32] {
  %100 = @func_3107() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), float32]) */;
  %101 = %100.1;
  %102 = cast(%101, dtype="float32") /* ty=Tensor[(512), float32] */;
  tan(%102) /* ty=Tensor[(512), float32] */
}

def @func_5424() -> Tensor[(5, 15, 15), bool] {
  %103 = @func_4958() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %104 = %103.0;
  %105 = @func_3228() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %106 = %105.2;
  %107 = cast(%106, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %108 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%104, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%109, %110) /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_15794() -> (Tensor[(5, 15, 15), float32],) {
  %111 = @func_5982() /* ty=Tensor[(5, 15, 15), float32] */;
  (%111,)
}

def @func_2545() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %112 = @func_656() /* ty=Tensor[(5, 15, 15), float32] */;
  %113 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
  (%112, %113)
}

def @func_15145() -> Tensor[(5, 15, 15), float64] {
  %114 = @func_7850() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %114.0
}

def @func_1856() -> (Tensor[(5, 15, 15), float32],) {
  %115 = @func_1367() /* ty=Tensor[(5, 15, 15), float32] */;
  (%115,)
}

def @func_4247(%var_4201: Tensor[(11, 13, 12), uint8]) -> (Tensor[(11, 13, 12), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %116 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %117 = %116.0;
  %118 = cast(%var_4201, dtype="float32") /* ty=Tensor[(11, 13, 12), float32] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%117, dtype="float32") /* ty=Tensor[(11, 13, 12), float32] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %122 = @func_2051() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %123 = %122.1;
  %124 = cast(%123, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %125 = floor_mod(%120, %121) /* ty=Tensor[(11, 13, 12), float32] */;
  %126 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
  %127 = atanh(%124) /* ty=Tensor[(5, 15, 15), float64] */;
  (%125, %126, %127)
}

def @func_1344() -> Tensor[(11, 13, 12), uint8] {
  %128 = cast(meta[relay.Constant][5] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %129 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 13, 12), uint8] */, dtype="uint8") /* ty=Tensor[(11, 13, 12), uint8] */;
  bitwise_or(%128, %129) /* ty=Tensor[(11, 13, 12), uint8] */
}

def @func_2578() -> (Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) {
  %130 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %131 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %132 = %131.0;
  %133 = cast(%132, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %134 = %130.6;
  %135 = acos(%133) /* ty=Tensor[(5, 15, 15), float32] */;
  (%134, %135)
}

def @func_15315(%var_15303: Tensor[(182, 9), bool]) -> (Tensor[(5, 15, 15), float32], Tensor[(13, 9, 14), int64], Tensor[(182, 9), bool]) {
  %136 = @func_4407() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %137 = cast(%var_15303, dtype="bool") /* ty=Tensor[(182, 9), bool] */;
  %138 = cast(%var_15303, dtype="bool") /* ty=Tensor[(182, 9), bool] */;
  %139 = reshape(%137, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), bool] */;
  %140 = reshape(%138, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), bool] */;
  %141 = @func_13869(%139, %140) /* ty=(Tensor[(13, 9, 14), int64], Tensor[(5, 15, 15), float32], Tensor[(11, 15, 3), int16], Tensor[(11, 13, 12), uint8]) */;
  %142 = cast(meta[relay.Constant][7] /* ty=Tensor[(182, 9), bool] */, dtype="bool") /* ty=Tensor[(182, 9), bool] */;
  %143 = shape_of(%var_15303, dtype="int32") /* ty=Tensor[(2), int32] */;
  %144 = cast(%var_15303, dtype="bool") /* ty=Tensor[(182, 9), bool] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %146 = %136.0;
  %147 = %141.0;
  %148 = less_equal(%144, %145) /* ty=Tensor[(182, 9), bool] */;
  (%146, %147, %148)
}

def @func_8468(%var_8458: Tensor[(9, 12, 11), float32]) -> (Tensor[(9, 12, 11), float32], Tensor[(13, 16, 16), int8], Tensor[(3328, 1), float64]) {
  %149 = cast(%var_8458, dtype="float32") /* ty=Tensor[(9, 12, 11), float32] */;
  %150 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(9, 12, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(meta[relay.Constant][8] /* ty=Tensor[(9, 12, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 12, 11), float32] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %153 = cast(meta[relay.Constant][9] /* ty=Tensor[(3328, 1), float64] */, dtype="float64") /* ty=Tensor[(3328, 1), float64] */;
  %154 = reshape(%153, newshape=[13, 16, 16]) /* ty=Tensor[(13, 16, 16), float64] */;
  %155 = power(%151, %152) /* ty=Tensor[(9, 12, 11), float32] */;
  %156 = @func_3415(%154) /* ty=Tensor[(13, 16, 16), int8] */;
  (%155, %156, meta[relay.Constant][9] /* ty=Tensor[(3328, 1), float64] */)
}

def @func_2305(%var_2288: Tensor[(5, 6, 11), float64]) -> (Tensor[(5, 6, 11), int64], Tensor[(5, 15, 15), float64]) {
  %157 = cast(%var_2288, dtype="float64") /* ty=Tensor[(5, 6, 11), float64] */;
  %158 = asin(%157) /* ty=Tensor[(5, 6, 11), float64] */;
  %159 = cast(%158, dtype="int64") /* ty=Tensor[(5, 6, 11), int64] */;
  %160 = shape_of(%var_2288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%var_2288, dtype="int64") /* ty=Tensor[(5, 6, 11), int64] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %163 = left_shift(%161, %162) /* ty=Tensor[(5, 6, 11), int64] */;
  %164 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  (%163, %164)
}

def @func_9239() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %165 = @func_5122() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) */;
  %166 = @func_8122() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %167 = %165.2;
  %168 = %166.1;
  (%167, %168)
}

def @func_13437() -> Tensor[(5, 15, 15), float32] {
  %169 = @func_1532() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */;
  %169.2
}

def @func_4639() -> Tensor[(5, 15, 15), float64] {
  %170 = @func_2718() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %170.0
}

def @func_15424() -> (Tensor[(5, 15, 15), float32],) {
  %171 = @func_1176() /* ty=Tensor[(5, 15, 15), float32] */;
  (%171,)
}

def @func_1573() -> (Tensor[(5, 15, 15), float32],) {
  %172 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %173 = %172.0;
  (%173,)
}

def @func_1367() -> Tensor[(5, 15, 15), float32] {
  @func_1231() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_5675(%var_5642: Tensor[(28), float64]) -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %174 = @func_2653() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %175 = cast(%var_5642, dtype="float64") /* ty=Tensor[(28), float64] */;
  %176 = reshape(%175, newshape=[14, 1, 2]) /* ty=Tensor[(14, 1, 2), float64] */;
  %177 = @func_376(%176) /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */;
  %178 = %174.3;
  %179 = %177.1;
  %180 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
  %181 = @func_2947() /* ty=Tensor[(5, 15, 15), float32] */;
  (%178, %179, %var_5642, %180, %181)
}

def @func_10547() -> Tensor[(5, 15, 15), bool] {
  @func_4319() /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_12525() -> Tensor[(5, 15, 15), float64] {
  %182 = @func_12055() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float64]) */;
  %182.0
}

def @func_9407() -> Tensor[(5, 15, 15), float32] {
  %183 = @func_3971() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %183.0
}

def @func_4125() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %184 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %185 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %186 = @func_267() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %187 = %184.0;
  %188 = %185.1;
  %189 = %186.0;
  (%187, %188, %189)
}

def @func_6257() -> Tensor[(5, 15, 15), int64] {
  %190 = @func_5963() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) */;
  %190.0
}

def @func_4296() -> Tensor[(5, 15, 15), float32] {
  %191 = @func_2545() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %191.0
}

def @func_10373() -> (Tensor[(5, 15, 15), float32], Tensor[(15, 75), float32], Tensor[(5, 15, 15), float32], Tensor[(28), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %192 = @func_3790() /* ty=Tensor[(5, 15, 15), float32] */;
  %193 = cast(%192, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %194 = cast(%192, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %195 = reshape(%193, newshape=[15, 75]) /* ty=Tensor[(15, 75), bool] */;
  %196 = reshape(%194, newshape=[15, 75]) /* ty=Tensor[(15, 75), bool] */;
  %197 = @func_9177(%195, %196) /* ty=(Tensor[(12, 11, 14), bool], Tensor[(15, 75), float32], Tensor[(15, 75), uint8]) */;
  %198 = cast(meta[relay.Constant][10] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %199 = reshape(%198, newshape=[1, 28]) /* ty=Tensor[(1, 28), float64] */;
  %200 = @func_8901(%199) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(1, 28), float64], Tensor[(5, 15, 15), float32]) */;
  %201 = cast(meta[relay.Constant][11] /* ty=Tensor[(28), float64] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %202 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(28), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %203 = cast(meta[relay.Constant][10] /* ty=Tensor[(28), float64] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?), bool] */;
  %205 = @func_8042() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %206 = %197.1;
  %207 = %200.0;
  %208 = not_equal(%203, %204) /* ty=Tensor[(28), bool] */;
  %209 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
  %210 = %205.1;
  (%192, %206, %207, %208, %209, %210)
}

def @func_15620() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %211 = @func_5315() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %212 = %211.0;
  %213 = @func_8570() /* ty=Tensor[(5, 15, 15), float32] */;
  %214 = @func_11419() /* ty=Tensor[(5, 15, 15), float64] */;
  (%212, %213, %214)
}

def @func_15886() -> (Tensor[(5, 15, 15), float32], Tensor[(3, 10, 10), int64], Tensor[(300), int64], Tensor[(5, 15, 15), float64]) {
  %215 = @func_2991() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %216 = cast(meta[relay.Constant][12] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
  %217 = cast(meta[relay.Constant][12] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
  %218 = reshape(%216, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), int64] */;
  %219 = reshape(%217, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), int64] */;
  %220 = @func_14449(%218, %219) /* ty=(Tensor[(3, 10, 10), int64],) */;
  %221 = @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %222 = %215.0;
  %223 = %220.0;
  %224 = %221.0;
  (%222, %223, meta[relay.Constant][12] /* ty=Tensor[(300), int64] */, %224)
}

def @func_15534() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), float64]) {
  %225 = @func_4007() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %226 = %225.0;
  %227 = cast(%226, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %228 = reshape(%227, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %229 = @func_1779(%228) /* ty=(Tensor[(5, 15, 15), uint64], Tensor[(5, 15, 15), float32]) */;
  %230 = @func_12721() /* ty=(Tensor[(14, ?, 2), bool],) */;
  %231 = %230.0;
  %232 = cast(%231, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
  %233 = atan(%232) /* ty=Tensor[(14, ?, 2), float64] */;
  %234 = cast(%231, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
  %235 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%233, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %238 = %229.1;
  %239 = floor_mod(%236, %237) /* ty=Tensor[(14, ?, 2), float64] */;
  (%226, %238, %239)
}

def @func_17492() -> Tensor[(5, 15, 15), float32] {
  @func_9745() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_6054() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %240 = @func_4905() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %241 = @func_3228() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %242 = %240.0;
  %243 = %241.2;
  %244 = @func_3790() /* ty=Tensor[(5, 15, 15), float32] */;
  (%242, %243, %244)
}

def @func_11010() -> (Tensor[(11, 15, 3), float32],) {
  %245 = @func_10020() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %246 = %245.0;
  (%246,)
}

def @func_3790() -> Tensor[(5, 15, 15), float32] {
  @func_2689() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_3500() -> (Tensor[(5, 15, 15), float32],) {
  %247 = @func_1176() /* ty=Tensor[(5, 15, 15), float32] */;
  (%247,)
}

def @func_15291() -> Tensor[(5, 15, 15), float32] {
  @func_9745() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_284() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %248 = @func_267() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %249 = @func_267() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %250 = %248.0;
  %251 = %249.0;
  (%250, %251)
}

def @func_6682() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32]) {
  %252 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
  %253 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%252, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %257 = add(%255, %256) /* ty=Tensor[(5, 15, 15), float32] */;
  %258 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
  %259 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
  (%257, %258, %259)
}

def @func_1406() -> (Tensor[(5, 15, 15), float32],) {
  %260 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
  (%260,)
}

def @func_3027() -> (Tensor[(5, 15, 15), float32],) {
  %261 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %262 = %261.0;
  (%262,)
}

def @func_7120() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) {
  %263 = @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %264 = %263.0;
  %265 = cast(%264, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %266 = reshape(%265, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %267 = @func_1779(%266) /* ty=(Tensor[(5, 15, 15), uint64], Tensor[(5, 15, 15), float32]) */;
  %268 = @func_6257() /* ty=Tensor[(5, 15, 15), int64] */;
  %269 = @func_1658() /* ty=Tensor[(5, 15, 15), float64] */;
  %270 = @func_1658() /* ty=Tensor[(5, 15, 15), float64] */;
  %271 = %267.0;
  (%268, %269, %270, %264, %271)
}

def @func_3830(%var_3816: Tensor[(5, 15, 15), float32]) -> (Tensor[(5, 15, 15), uint16],) {
  %272 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %273 = %272.3;
  %274 = cast(%var_3816, dtype="uint16") /* ty=Tensor[(5, 15, 15), uint16] */;
  %275 = shape_of(%273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%273, dtype="uint16") /* ty=Tensor[(5, 15, 15), uint16] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %278 = multiply(%276, %277) /* ty=Tensor[(5, 15, 15), uint16] */;
  (%278,)
}

def @func_2991() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %279 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %280 = %279.0;
  %281 = cast(%280, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %282 = reshape(%281, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %283 = @func_637(%282) /* ty=Tensor[(5, 15, 15), bool] */;
  (%280, %283)
}

def @func_12919() -> (Tensor[(5, 15, 15), bool],) {
  %284 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %285 = %284.6;
  (%285,)
}

def @func_13619() -> (Tensor[(5, 15, 15), float32],) {
  %286 = @func_8279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %287 = %286.0;
  (%287,)
}

def @func_13199(%var_13178: Tensor[(11, 15, 3), float32]) -> (Tensor[(11, 15, 3), bool], Tensor[(5, 15, 15), bool]) {
  %288 = @func_10020() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %289 = %288.0;
  %290 = cast(%var_13178, dtype="bool") /* ty=Tensor[(11, 15, 3), bool] */;
  %291 = shape_of(%289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%289, dtype="bool") /* ty=Tensor[(11, 15, 3), bool] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %294 = @func_9115() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %295 = less_equal(%292, %293) /* ty=Tensor[(11, 15, 3), bool] */;
  %296 = %294.2;
  (%295, %296)
}

def @func_15003() -> Tensor[(5, 15, 15), float32] {
  @func_5982() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_13497() -> (Tensor[(11, 15, 3), float32],) {
  %297 = @func_11010() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %298 = %297.0;
  (%298,)
}

def @func_10690() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %299 = @func_9745() /* ty=Tensor[(5, 15, 15), float32] */;
  %300 = @func_5424() /* ty=Tensor[(5, 15, 15), bool] */;
  (%299, %300)
}

def @func_4407() -> (Tensor[(5, 15, 15), float32],) {
  %301 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %302 = %301.1;
  (%302,)
}

def @func_3902() -> (Tensor[(5, 15, 15), float32],) {
  %303 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %304 = %303.0;
  (%304,)
}

def @func_9447() -> Tensor[(512), int8] {
  %305 = @func_2892() /* ty=(Tensor[(512), int8],) */;
  %305.0
}

def @func_13749() -> (Tensor[(5, 15, 15), int64],) {
  %306 = @func_6257() /* ty=Tensor[(5, 15, 15), int64] */;
  (%306,)
}

def @func_11773() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %307 = @func_4296() /* ty=Tensor[(5, 15, 15), float32] */;
  %308 = @func_656() /* ty=Tensor[(5, 15, 15), float32] */;
  (%307, %308)
}

def @func_16190() -> (Tensor[(5, 15, 15), float64],) {
  %309 = @func_4167() /* ty=Tensor[(5, 15, 15), float64] */;
  (%309,)
}

def @func_1001() -> Tensor[(5, 15, 15), float32] {
  @func_656() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_8901(%var_8885: Tensor[(1, 28), float64]) -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(1, 28), float64], Tensor[(5, 15, 15), float32]) {
  %310 = @func_5017() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %311 = cast(%var_8885, dtype="float64") /* ty=Tensor[(1, 28), float64] */;
  %312 = %310.0;
  %313 = cast(%312, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %314 = reshape(%311, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %315 = reshape(%313, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %316 = @func_580(%314, %315) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */;
  %317 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
  %318 = @func_4319() /* ty=Tensor[(5, 15, 15), bool] */;
  %319 = @func_8570() /* ty=Tensor[(5, 15, 15), float32] */;
  %320 = %316.2;
  %321 = %317.0;
  (%312, %318, %319, %320, %var_8885, %321)
}

def @func_2021() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) {
  %322 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %323 = @func_1532() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */;
  %324 = %323.6;
  %325 = cast(%324, dtype="float32") /* ty=Tensor[(12, 11, 14), float32] */;
  %326 = asinh(%325) /* ty=Tensor[(12, 11, 14), float32] */;
  %327 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 11, 14), float32] */, dtype="int32") /* ty=Tensor[(12, 11, 14), int32] */;
  %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%326, dtype="int32") /* ty=Tensor[(12, 11, 14), int32] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %331 = @func_1532() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */;
  %332 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
  %333 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  %334 = %322.0;
  %335 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
  %336 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
  %337 = bitwise_xor(%329, %330) /* ty=Tensor[(12, 11, 14), int32] */;
  %338 = %331.6;
  %339 = %332.1;
  (%333, %334, %335, %336, %337, %338, %339)
}

def @func_12274(%var_12250: Tensor[(10, 7, 3), float64]) -> (Tensor[(10, 7, 3), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %340 = cast(%var_12250, dtype="float64") /* ty=Tensor[(10, 7, 3), float64] */;
  %341 = @func_10527() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %342 = @func_4958() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %343 = atanh(%340) /* ty=Tensor[(10, 7, 3), float64] */;
  %344 = %341.0;
  %345 = %342.2;
  (%343, %344, %345)
}

def @func_16663() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64]) {
  %346 = @func_11382() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %347 = @func_267() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %348 = @func_5963() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) */;
  %349 = %346.1;
  %350 = %347.0;
  %351 = %348.0;
  (%349, %350, %351)
}

def @func_15387() -> (Tensor[(5, 15, 15), float32],) {
  %352 = @func_10998() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %353 = %352.3;
  (%353,)
}

def @func_14545() -> Tensor[(5, 15, 15), bool] {
  %354 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %354.6
}

def @func_9343(%var_9273: Tensor[(4, 1, 3), float64]) -> (Tensor[(4, 10, 3), bool], Tensor[(5, 15, 15), float64], Tensor[(4, 10, 3), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %355 = cast(%var_9273, dtype="bool") /* ty=Tensor[(4, 1, 3), bool] */;
  %356 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 10, 3), float64] */, dtype="bool") /* ty=Tensor[(4, 10, 3), bool] */;
  %357 = @func_4958() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %358 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(4, 10, 3), float64] */;
  %359 = @func_2653() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %360 = equal(%355, %356) /* ty=Tensor[(4, 10, 3), bool] */;
  %361 = %357.2;
  %362 = cos(%358) /* ty=Tensor[(4, 10, 3), float64] */;
  %363 = @func_6793() /* ty=Tensor[(5, 15, 15), float32] */;
  %364 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
  %365 = %359.2;
  (%360, %361, %362, %363, %364, %365)
}

def @func_6793() -> Tensor[(5, 15, 15), float32] {
  @func_5982() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_11107() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(128, 4), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %366 = cast(meta[relay.Constant][16] /* ty=Tensor[(128, 4), int8] */, dtype="int8") /* ty=Tensor[(128, 4), int8] */;
  %367 = reshape(%366, newshape=[512]) /* ty=Tensor[(512), int8] */;
  %368 = @func_7492(%367) /* ty=(Tensor[(5, 15, 15), float64], Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), float32], Tensor[(5, 15, 15), float32]) */;
  %369 = @func_9239() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %370 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %371 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  %372 = @func_5982() /* ty=Tensor[(5, 15, 15), float32] */;
  %373 = %368.2;
  %374 = %369.0;
  %375 = %370.0;
  (%371, %372, %373, meta[relay.Constant][16] /* ty=Tensor[(128, 4), int8] */, %374, %375)
}

def @func_2051() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %376 = @func_267() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %377 = @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %378 = %376.0;
  %379 = %377.0;
  (%378, %379)
}

def @func_7492(%var_7448: Tensor[(512), int8]) -> (Tensor[(5, 15, 15), float64], Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), float32], Tensor[(5, 15, 15), float32]) {
  %380 = cast(%var_7448, dtype="int8") /* ty=Tensor[(512), int8] */;
  %381 = reshape(%380, newshape=[512]) /* ty=Tensor[(512), int8] */;
  %382 = @func_976(%381) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %383 = %382.1;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(16, 8, 4), float32] */;
  %385 = @func_7237() /* ty=Tensor[(5, 15, 15), float64] */;
  %386 = @func_3562() /* ty=Tensor[(5, 15, 15), float32] */;
  %387 = cos(%384) /* ty=Tensor[(16, 8, 4), float32] */;
  %388 = @func_5778() /* ty=Tensor[(5, 15, 15), float32] */;
  (%385, %var_7448, %386, %387, %388)
}

def @func_13649() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %389 = @func_5982() /* ty=Tensor[(5, 15, 15), float32] */;
  %390 = @func_7770() /* ty=Tensor[(5, 15, 15), float32] */;
  (%389, %390)
}

def @func_15090(%var_15072: Tensor[(3, 6, 13), float32], %var_15086: Tensor[(3, 6, 13), float32]) -> (Tensor[(3, 6, 13), uint32],) {
  %391 = cast(%var_15072, dtype="float32") /* ty=Tensor[(3, 6, 13), float32] */;
  %392 = exp(%391) /* ty=Tensor[(3, 6, 13), float32] */;
  %393 = cast(%var_15086, dtype="uint32") /* ty=Tensor[(3, 6, 13), uint32] */;
  %394 = shape_of(%392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%392, dtype="uint32") /* ty=Tensor[(3, 6, 13), uint32] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %397 = left_shift(%395, %396) /* ty=Tensor[(3, 6, 13), uint32] */;
  (%397,)
}

def @func_9665() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %398 = @func_1176() /* ty=Tensor[(5, 15, 15), float32] */;
  %399 = @func_7237() /* ty=Tensor[(5, 15, 15), float64] */;
  (%398, %399)
}

def @func_16046() -> (Tensor[(5, 15, 15), float64], Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) {
  %400 = @func_2653() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %401 = @func_10490() /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */;
  %402 = @func_11773() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %403 = %400.2;
  %404 = %401.0;
  %405 = %402.0;
  (%403, %404, %405)
}

def @func_10587(%var_10566: Tensor[(4, 11, 11), int16], %var_10579: Tensor[(12), float64]) -> (Tensor[(4, 11, 11), uint64], Tensor[(4, 10, 3), float64], Tensor[(12), float64]) {
  %406 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 11, 11), int16] */, dtype="bool") /* ty=Tensor[(4, 11, 11), bool] */;
  %407 = shape_of(%var_10566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%var_10566, dtype="bool") /* ty=Tensor[(4, 11, 11), bool] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %410 = greater_equal(%408, %409) /* ty=Tensor[(4, 11, 11), bool] */;
  %411 = cast(%410, dtype="uint64") /* ty=Tensor[(4, 11, 11), uint64] */;
  %412 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(4, 11, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 11, 11), int16] */, dtype="uint64") /* ty=Tensor[(4, 11, 11), uint64] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %415 = cast(%var_10579, dtype="float64") /* ty=Tensor[(12), float64] */;
  %416 = reshape(%415, newshape=[4, 1, 3]) /* ty=Tensor[(4, 1, 3), float64] */;
  %417 = @func_9343(%416) /* ty=(Tensor[(4, 10, 3), bool], Tensor[(5, 15, 15), float64], Tensor[(4, 10, 3), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %418 = left_shift(%413, %414) /* ty=Tensor[(4, 11, 11), uint64] */;
  %419 = %417.2;
  (%418, %419, %var_10579)
}

def @func_6360() -> (Tensor[(5, 15, 15), float32],) {
  %420 = @func_1176() /* ty=Tensor[(5, 15, 15), float32] */;
  (%420,)
}

def @func_3107() -> (Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), float32]) {
  %421 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %422 = @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */;
  %423 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
  %424 = %421.3;
  %425 = %422.0;
  (%423, %424, %425)
}

def @func_3562() -> Tensor[(5, 15, 15), float32] {
  @func_1001() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_11382() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %426 = @func_2653() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %427 = @func_8378() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64]) */;
  %428 = %426.0;
  %429 = @func_6002() /* ty=Tensor[(5, 15, 15), float32] */;
  %430 = %427.0;
  (%428, %429, %430)
}

def @func_11419() -> Tensor[(5, 15, 15), float64] {
  %431 = @func_7120() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */;
  %431.1
}

def @func_4958() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  %432 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %433 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
  %434 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %435 = %434.1;
  %436 = cast(%435, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %437 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%433, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %440 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %441 = %432.1;
  %442 = @func_1658() /* ty=Tensor[(5, 15, 15), float64] */;
  %443 = floor_divide(%438, %439) /* ty=Tensor[(5, 15, 15), float64] */;
  %444 = %440.0;
  (%441, %442, %443, %444)
}

def @func_14174() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), int32], Tensor[(14, ?, 2), float64]) {
  %445 = @func_6054() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %446 = @func_3500() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %447 = @func_12302() /* ty=Tensor[(14, ?, 2), bool] */;
  %448 = cast(%447, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
  %449 = tan(%448) /* ty=Tensor[(14, ?, 2), float64] */;
  %450 = cast(%447, dtype="int32") /* ty=Tensor[(14, ?, 2), int32] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%449, dtype="int32") /* ty=Tensor[(14, ?, 2), int32] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %454 = cast(%447, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
  %455 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%449, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %458 = mod(%456, %457) /* ty=Tensor[(14, ?, 2), float64] */;
  %459 = cast(%458, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
  %460 = %445.2;
  %461 = %446.0;
  %462 = right_shift(%452, %453) /* ty=Tensor[(14, ?, 2), int32] */;
  %463 = asinh(%459) /* ty=Tensor[(14, ?, 2), float64] */;
  (%460, %461, %462, %463)
}

def @func_8400() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %464 = @func_6482() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %465 = %464.0;
  %466 = @func_2947() /* ty=Tensor[(5, 15, 15), float32] */;
  (%465, %466)
}

def @func_16514() -> (Tensor[(5, 15, 15), float32],) {
  %467 = @func_11898() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %468 = %467.0;
  (%468,)
}

def @func_8570() -> Tensor[(5, 15, 15), float32] {
  %469 = @func_4407() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %469.0
}

def @func_5315() -> (Tensor[(5, 15, 15), float64],) {
  %470 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  (%470,)
}

def @func_16722() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) {
  %471 = @func_14644() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %472 = @func_12919() /* ty=(Tensor[(5, 15, 15), bool],) */;
  %473 = @func_3677() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %474 = %471.0;
  %475 = %472.0;
  %476 = %473.0;
  (%474, %475, %476)
}

def @func_14010() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %477 = @func_8547() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %478 = @func_4007() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %479 = %477.1;
  %480 = %478.0;
  (%479, %480)
}

def @func_14954() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %481 = @func_10998() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %482 = @func_5255() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %483 = %481.1;
  %484 = %482.1;
  (%483, %484)
}

def @func_17047() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %485 = @func_14475() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %486 = @func_2051() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %487 = %485.0;
  %488 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
  %489 = %486.1;
  (%487, %488, %489)
}

def @func_580(%var_538: Tensor[(28), float64], %var_557: Tensor[(5, 15, 15), float32]) -> (Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) {
  %490 = cast(%var_538, dtype="float64") /* ty=Tensor[(28), float64] */;
  %491 = reshape(%490, newshape=[14, 1, 2]) /* ty=Tensor[(14, 1, 2), float64] */;
  %492 = @func_376(%491) /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */;
  %493 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %494 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %495 = %494.0;
  %496 = cast(%var_557, dtype="uint64") /* ty=Tensor[(5, 15, 15), uint64] */;
  %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %498 = cast(%495, dtype="uint64") /* ty=Tensor[(5, 15, 15), uint64] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %500 = %492.1;
  %501 = %493.0;
  %502 = bitwise_xor(%498, %499) /* ty=Tensor[(5, 15, 15), uint64] */;
  (%500, %var_538, %501, %502)
}

def @func_12302() -> Tensor[(14, ?, 2), bool] {
  %503 = @func_10490() /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */;
  %503.0
}

def @func_8351() -> Tensor[(5, 15, 15), float32] {
  @func_7770() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_8169(%var_8163: Tensor[(2, 13, 3), uint16], %var_8164: Tensor[(2, 13, 3), uint16]) -> (Tensor[(2, 13, 3), bool],) {
  %504 = cast(%var_8164, dtype="bool") /* ty=Tensor[(2, 13, 3), bool] */;
  %505 = shape_of(%var_8163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(%var_8163, dtype="bool") /* ty=Tensor[(2, 13, 3), bool] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %508 = greater(%506, %507) /* ty=Tensor[(2, 13, 3), bool] */;
  (%508,)
}

def @func_9745() -> Tensor[(5, 15, 15), float32] {
  %509 = @func_7219() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %509.0
}

def @func_13694() -> (Tensor[(5, 15, 15), float32],) {
  %510 = @func_6360() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %511 = %510.0;
  (%511,)
}

def @func_14644() -> (Tensor[(5, 15, 15), float32],) {
  %512 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %513 = %512.0;
  (%513,)
}

def @func_6338(%var_6296: Tensor[(7, 3, 1), bool], %var_6297: Tensor[(7, 3, 3), bool]) -> (Tensor[(7, 3, 3), bool], Tensor[(5, 15, 15), uint16], Tensor[(1125), float32], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) {
  %514 = cast(%var_6296, dtype="bool") /* ty=Tensor[(7, 3, 1), bool] */;
  %515 = cast(%var_6297, dtype="bool") /* ty=Tensor[(7, 3, 3), bool] */;
  %516 = cast(meta[relay.Constant][18] /* ty=Tensor[(1125), float32] */, dtype="float32") /* ty=Tensor[(1125), float32] */;
  %517 = reshape(%516, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %518 = @func_3830(%517) /* ty=(Tensor[(5, 15, 15), uint16],) */;
  %519 = @func_5963() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) */;
  %520 = @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %521 = logical_or(%514, %515) /* ty=Tensor[(7, 3, 3), bool] */;
  %522 = %518.0;
  %523 = %519.0;
  %524 = %520.0;
  (%521, %522, meta[relay.Constant][18] /* ty=Tensor[(1125), float32] */, %523, %524)
}

def @func_10239() -> (Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32], Tensor[(28, 1), float32]) {
  %525 = @func_2735() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %526 = @func_5887() /* ty=(Tensor[(14, ?, 2), bool],) */;
  %527 = @func_3228() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %528 = @func_9637() /* ty=(Tensor[(28, 1), float32],) */;
  %529 = @func_9447() /* ty=Tensor[(512), int8] */;
  %530 = %525.0;
  %531 = %526.0;
  %532 = %527.1;
  %533 = %528.0;
  (%529, %530, %531, %532, %533)
}

def @func_9704(%var_9692: Tensor[(120), float64]) -> (Tensor[(5, 15, 15), bool], Tensor[(12, 15, 16), int64], Tensor[(120), float64]) {
  %534 = @func_9115() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %535 = cast(%var_9692, dtype="float64") /* ty=Tensor[(120), float64] */;
  %536 = cast(%var_9692, dtype="float64") /* ty=Tensor[(120), float64] */;
  %537 = reshape(%535, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), float64] */;
  %538 = reshape(%536, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), float64] */;
  %539 = @func_9518(%537, %538) /* ty=(Tensor[(12, 15, 16), int64], Tensor[(48, 60), float32], Tensor[(8, 5, 3), bool]) */;
  %540 = %534.2;
  %541 = %539.0;
  (%540, %541, %var_9692)
}

def @func_15696() -> (Tensor[(5, 15, 15), float32],) {
  %542 = @func_12095() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %543 = %542.0;
  (%543,)
}

def @func_12573() -> (Tensor[(5, 15, 15), int64],) {
  %544 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
  %545 = %544.2;
  (%545,)
}

def @func_6527() -> (Tensor[(5, 15, 15), float32],) {
  %546 = @func_5585() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %547 = %546.1;
  (%547,)
}

def @func_10664() -> Tensor[(11, 13, 12), uint8] {
  %548 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %548.1
}

def @func_10527() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %549 = @func_4726() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %550 = %549.3;
  %551 = @func_6793() /* ty=Tensor[(5, 15, 15), float32] */;
  (%550, %551)
}

def @func_333() -> Tensor[(5, 15, 15), float32] {
  %552 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %552.0
}

def @func_505(%var_497: Tensor[(16, 8, 4), int8], %var_498: Tensor[(16, 8, 4), int8]) -> Tensor[(16, 8, 4), bool] {
  %553 = cast(%var_498, dtype="bool") /* ty=Tensor[(16, 8, 4), bool] */;
  %554 = shape_of(%var_497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%var_497, dtype="bool") /* ty=Tensor[(16, 8, 4), bool] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%555, %556) /* ty=Tensor[(16, 8, 4), bool] */
}

def @func_3228() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %557 = @func_2756() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %558 = @func_2947() /* ty=Tensor[(5, 15, 15), float32] */;
  %559 = @func_1367() /* ty=Tensor[(5, 15, 15), float32] */;
  %560 = %557.0;
  %561 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  (%558, %559, %560, %561)
}

def @func_8279() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %562 = @func_3344() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %563 = @func_7219() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %564 = @func_3562() /* ty=Tensor[(5, 15, 15), float32] */;
  %565 = %562.1;
  %566 = @func_5778() /* ty=Tensor[(5, 15, 15), float32] */;
  %567 = %563.1;
  (%564, %565, %566, %567)
}

def @func_11804() -> (Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32]) {
  %568 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
  %569 = @func_5982() /* ty=Tensor[(5, 15, 15), float32] */;
  (%568, %569)
}

def @func_7219() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %570 = @func_2991() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %571 = @func_3107() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), float32]) */;
  %572 = @func_4007() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %573 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
  %574 = %570.1;
  %575 = @func_6257() /* ty=Tensor[(5, 15, 15), int64] */;
  %576 = %571.0;
  %577 = %572.0;
  (%573, %574, %575, %576, %577)
}

def @func_12685() -> (Tensor[(5, 15, 15), float32],) {
  %578 = @func_2756() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %579 = %578.0;
  (%579,)
}

def @func_14053() -> (Tensor[(5, 15, 15), float64],) {
  %580 = @func_5315() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %581 = %580.0;
  (%581,)
}

def @func_14882(%var_14843: Tensor[(540), float64]) -> (Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(9, 5, 12), float64], Tensor[(540), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(512), int8]) {
  %582 = @func_12919() /* ty=(Tensor[(5, 15, 15), bool],) */;
  %583 = @func_8122() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %584 = @func_8400() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %585 = cast(%var_14843, dtype="float64") /* ty=Tensor[(540), float64] */;
  %586 = reshape(%585, newshape=[9, 5, 12]) /* ty=Tensor[(9, 5, 12), float64] */;
  %587 = @func_2892() /* ty=(Tensor[(512), int8],) */;
  %588 = %582.0;
  %589 = %583.0;
  %590 = %584.1;
  %591 = @func_11563(%586) /* ty=Tensor[(9, 5, 12), float64] */;
  %592 = @func_7770() /* ty=Tensor[(5, 15, 15), float32] */;
  %593 = @func_6002() /* ty=Tensor[(5, 15, 15), float32] */;
  %594 = %587.0;
  (%588, %589, %590, %591, %var_14843, %592, %593, %594)
}

def @func_8435() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %595 = @func_6482() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %596 = @func_5692() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %597 = @func_8279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %598 = %595.0;
  %599 = %596.0;
  %600 = %597.1;
  (%598, %599, %600)
}

def @func_16123() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 15, 5), uint16], Tensor[(825), uint16], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(12, 11, 14), uint32]) {
  %601 = @func_15387() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %602 = cast(meta[relay.Constant][19] /* ty=Tensor[(825), uint16] */, dtype="uint16") /* ty=Tensor[(825), uint16] */;
  %603 = cast(meta[relay.Constant][19] /* ty=Tensor[(825), uint16] */, dtype="uint16") /* ty=Tensor[(825), uint16] */;
  %604 = reshape(%602, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), uint16] */;
  %605 = reshape(%603, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), uint16] */;
  %606 = @func_10405(%604, %605) /* ty=(Tensor[(11, 15, 5), uint16],) */;
  %607 = @func_15620() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %608 = @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %609 = @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */;
  %610 = %601.0;
  %611 = %606.0;
  %612 = %607.0;
  %613 = @func_872() /* ty=Tensor[(5, 15, 15), float32] */;
  %614 = %608.0;
  %615 = %609.1;
  (%610, %611, meta[relay.Constant][19] /* ty=Tensor[(825), uint16] */, %612, %613, %614, %615)
}

def @func_16895() -> Tensor[(5, 15, 15), float32] {
  %616 = @func_16234() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %616.2
}

def @func_2430(%var_2409: Tensor[(5, 15, 15), float64]) -> (Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) {
  %617 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %618 = %617.0;
  %619 = cast(%var_2409, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %620 = shape_of(%618, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(%618, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %623 = @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */;
  %624 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
  %625 = less(%621, %622) /* ty=Tensor[(5, 15, 15), bool] */;
  %626 = %623.0;
  (%624, %625, %626)
}

def @func_684() -> (Tensor[(5, 15, 15), int64],) {
  %627 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %628 = %627.1;
  %629 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
  %630 = cast(%629, dtype="int64") /* ty=Tensor[(5, 15, 15), int64] */;
  %631 = shape_of(%628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%628, dtype="int64") /* ty=Tensor[(5, 15, 15), int64] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %634 = left_shift(%632, %633) /* ty=Tensor[(5, 15, 15), int64] */;
  (%634,)
}

def @func_2735() -> (Tensor[(5, 15, 15), float32],) {
  %635 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
  (%635,)
}

def @func_7582() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %636 = @func_2756() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %637 = %636.0;
  %638 = @func_4319() /* ty=Tensor[(5, 15, 15), bool] */;
  (%637, %638)
}

def @func_6414() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %639 = @func_872() /* ty=Tensor[(5, 15, 15), float32] */;
  %640 = @func_3562() /* ty=Tensor[(5, 15, 15), float32] */;
  %641 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  (%639, %640, %641)
}

def @func_5153() -> Tensor[(5, 15, 15), float32] {
  %642 = @func_3266() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %643 = %642.0;
  %644 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %645 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%643, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%646, %647) /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_8209() -> Tensor[(11, 13, 12), uint8] {
  %648 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %648.1
}

def @func_15560(%var_15547: Tensor[(5, 3, 12), float32]) -> (Tensor[(5, 3, 12), float32],) {
  %649 = cast(%var_15547, dtype="float32") /* ty=Tensor[(5, 3, 12), float32] */;
  %650 = acos(%649) /* ty=Tensor[(5, 3, 12), float32] */;
  (%650,)
}

def @func_16685() -> (Tensor[(11, 15, 3), float32], Tensor[(5, 15, 15), float32]) {
  %651 = @func_13497() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %652 = @func_5255() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %653 = %651.0;
  %654 = %652.1;
  (%653, %654)
}

def @func_751(%var_736: Tensor[(4, 10, 7), float64]) -> (Tensor[(4, 10, 7), float64], Tensor[(5, 15, 15), float32], Tensor[(7, 4), float64], Tensor[(15, 75), float32], Tensor[(5, 15, 15), int64]) {
  %655 = cast(%var_736, dtype="float64") /* ty=Tensor[(4, 10, 7), float64] */;
  %656 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 4), float64] */;
  %657 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 75), float32] */, dtype="float32") /* ty=Tensor[(15, 75), float32] */;
  %658 = reshape(%656, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %659 = reshape(%657, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %660 = @func_580(%658, %659) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */;
  %661 = @func_684() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %662 = acos(%655) /* ty=Tensor[(4, 10, 7), float64] */;
  %663 = %660.2;
  %664 = %661.0;
  (%662, %663, meta[relay.Constant][21] /* ty=Tensor[(7, 4), float64] */, meta[relay.Constant][22] /* ty=Tensor[(15, 75), float32] */, %664)
}

def @func_8378() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64]) {
  %665 = @func_3790() /* ty=Tensor[(5, 15, 15), float32] */;
  %666 = @func_3562() /* ty=Tensor[(5, 15, 15), float32] */;
  %667 = @func_6257() /* ty=Tensor[(5, 15, 15), int64] */;
  (%665, %666, %667)
}

def @func_17662() -> Tensor[(11, 15, 3), float32] {
  %668 = @func_13497() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %668.0
}

def @func_10490() -> (Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) {
  %669 = @func_5887() /* ty=(Tensor[(14, ?, 2), bool],) */;
  %670 = @func_6482() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %671 = %669.0;
  %672 = %670.0;
  (%671, %672)
}

def @func_11948() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %673 = @func_7120() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */;
  %674 = @func_10690() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %675 = @func_8841() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %676 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %677 = %673.2;
  %678 = %674.1;
  %679 = %675.0;
  %680 = %676.0;
  %681 = @func_5424() /* ty=Tensor[(5, 15, 15), bool] */;
  (%677, %678, %679, %680, %681)
}

def @func_10334() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %682 = @func_4407() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %683 = @func_5315() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %684 = %682.0;
  %685 = %683.0;
  (%684, %685)
}

def @func_14431(%var_14410: Tensor[(8, 2, 15), float32]) -> (Tensor[(8, 2, 15), bool], Tensor[(5, 15, 15), float32]) {
  %686 = cast(%var_14410, dtype="float32") /* ty=Tensor[(8, 2, 15), float32] */;
  %687 = rsqrt(%686) /* ty=Tensor[(8, 2, 15), float32] */;
  %688 = cast(%var_14410, dtype="bool") /* ty=Tensor[(8, 2, 15), bool] */;
  %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%687, dtype="bool") /* ty=Tensor[(8, 2, 15), bool] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %692 = @func_9986() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %693 = not_equal(%690, %691) /* ty=Tensor[(8, 2, 15), bool] */;
  %694 = %692.1;
  (%693, %694)
}

def @func_12199() -> Tensor[(5, 15, 15), int64] {
  @func_6257() /* ty=Tensor[(5, 15, 15), int64] */
}

def @func_12595(%var_12585: Tensor[(4, 5, 10), float32]) -> (Tensor[(4, 5, 10), float32], Tensor[(4, 5, 10), float32]) {
  %695 = cast(%var_12585, dtype="float32") /* ty=Tensor[(4, 5, 10), float32] */;
  %696 = cast(%var_12585, dtype="float32") /* ty=Tensor[(4, 5, 10), float32] */;
  %697 = acosh(%695) /* ty=Tensor[(4, 5, 10), float32] */;
  %698 = atanh(%696) /* ty=Tensor[(4, 5, 10), float32] */;
  (%697, %698)
}

def @func_8042() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %699 = @func_3971() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %700 = @func_6360() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %701 = @func_2504() /* ty=Tensor[(5, 15, 15), float32] */;
  %702 = %699.0;
  %703 = %700.0;
  (%701, %702, %703)
}

def @func_2947() -> Tensor[(5, 15, 15), float32] {
  %704 = @func_2545() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %704.1
}

def @func_12183(%var_12116: Tensor[(14, 10, 13), int32]) -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(14, 10, 13), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, 10, 13), float64]) {
  %705 = @func_5692() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %706 = @func_9115() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %707 = @func_8628() /* ty=(Tensor[(11, 13, 12), uint8],) */;
  %708 = cast(%var_12116, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %709 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(14, 10, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 10, 13), int32] */, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %712 = greater_equal(%710, %711) /* ty=Tensor[(14, 10, 13), bool] */;
  %713 = cast(%712, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %714 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(14, 10, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 10, 13), int32] */, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %717 = cast(meta[relay.Constant][24] /* ty=Tensor[(512), int8] */, dtype="int8") /* ty=Tensor[(512), int8] */;
  %718 = cast(meta[relay.Constant][24] /* ty=Tensor[(512), int8] */, dtype="int8") /* ty=Tensor[(512), int8] */;
  %719 = reshape(%717, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
  %720 = reshape(%718, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
  %721 = @func_9986() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %722 = @func_4407() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %723 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %724 = @func_6727() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %725 = @func_10998() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %726 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 10, 13), int32] */, dtype="float32") /* ty=Tensor[(14, 10, 13), float32] */;
  %727 = sqrt(%726) /* ty=Tensor[(14, 10, 13), float32] */;
  %728 = cast(%727, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %729 = %705.0;
  %730 = %706.1;
  %731 = %707.0;
  %732 = less_equal(%715, %716) /* ty=Tensor[(14, 10, 13), bool] */;
  %733 = @func_505(%719, %720) /* ty=Tensor[(16, 8, 4), bool] */;
  %734 = @func_11142() /* ty=Tensor[(5, 15, 15), float32] */;
  %735 = %721.3;
  %736 = %722.0;
  %737 = %723.1;
  %738 = %724.0;
  %739 = %725.2;
  %740 = tan(%728) /* ty=Tensor[(14, 10, 13), float64] */;
  (%729, %730, %731, %732, %733, meta[relay.Constant][24] /* ty=Tensor[(512), int8] */, %734, %735, %736, %737, %738, %739, %740)
}

def @func_11464() -> Tensor[(5, 15, 15), float32] {
  @func_5153() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_6907() -> (Tensor[(5, 15, 15), float32],) {
  %741 = @func_6633() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %742 = %741.1;
  (%742,)
}

def @func_10298() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %743 = @func_9604() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), int64]) */;
  %744 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %745 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %746 = %743.1;
  %747 = %744.0;
  %748 = %745.0;
  (%746, %747, %748)
}

def @func_14268(%var_14259: Tensor[(512), int8]) -> (Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) {
  %749 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %750 = cast(%var_14259, dtype="int8") /* ty=Tensor[(512), int8] */;
  %751 = cast(%var_14259, dtype="int8") /* ty=Tensor[(512), int8] */;
  %752 = reshape(%750, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
  %753 = reshape(%751, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
  %754 = %749.0;
  %755 = @func_505(%752, %753) /* ty=Tensor[(16, 8, 4), bool] */;
  (%754, %755, %var_14259)
}

def @func_1779(%var_1756: Tensor[(5, 15, 15), float32]) -> (Tensor[(5, 15, 15), uint64], Tensor[(5, 15, 15), float32]) {
  %756 = @func_656() /* ty=Tensor[(5, 15, 15), float32] */;
  %757 = cast(%var_1756, dtype="uint64") /* ty=Tensor[(5, 15, 15), uint64] */;
  %758 = shape_of(%756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%756, dtype="uint64") /* ty=Tensor[(5, 15, 15), uint64] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %761 = maximum(%759, %760) /* ty=Tensor[(5, 15, 15), uint64] */;
  %762 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
  (%761, %762)
}

def @func_15370() -> Tensor[(5, 15, 15), float32] {
  %763 = @func_3500() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %763.0
}

def @func_3415(%var_3384: Tensor[(13, 16, 16), float64]) -> Tensor[(13, 16, 16), int8] {
  %764 = cast(%var_3384, dtype="float64") /* ty=Tensor[(13, 16, 16), float64] */;
  %765 = log2(%764) /* ty=Tensor[(13, 16, 16), float64] */;
  %766 = cast(%var_3384, dtype="int8") /* ty=Tensor[(13, 16, 16), int8] */;
  %767 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%765, dtype="int8") /* ty=Tensor[(13, 16, 16), int8] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%768, %769) /* ty=Tensor[(13, 16, 16), int8] */
}

def @func_13081() -> (Tensor[(5, 15, 15), float32], Tensor[(15, 75), uint8]) {
  %770 = @func_5153() /* ty=Tensor[(5, 15, 15), float32] */;
  %771 = cast(%770, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %772 = cast(%770, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %773 = reshape(%771, newshape=[15, 75]) /* ty=Tensor[(15, 75), bool] */;
  %774 = reshape(%772, newshape=[15, 75]) /* ty=Tensor[(15, 75), bool] */;
  %775 = @func_9177(%773, %774) /* ty=(Tensor[(12, 11, 14), bool], Tensor[(15, 75), float32], Tensor[(15, 75), uint8]) */;
  %776 = %775.2;
  (%770, %776)
}

def @func_15244() -> (Tensor[(5, 15, 15), bool],) {
  %777 = @func_15179() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %778 = %777.1;
  (%778,)
}

def @func_321() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %779 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %780 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %781 = %779.1;
  %782 = %780.1;
  (%781, %782)
}

def @func_16136() -> Tensor[(11, 13, 12), uint8] {
  %783 = @func_11804() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32]) */;
  %783.0
}

def @func_12790() -> Tensor[(5, 15, 15), float32] {
  %784 = @func_5255() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %784.1
}

def @func_12095() -> (Tensor[(5, 15, 15), float32],) {
  %785 = @func_2756() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %786 = %785.1;
  (%786,)
}

def @func_16312(%var_16278: Tensor[(12), float64]) -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), bool], Tensor[(4, 11, 11), uint64], Tensor[(12), float64], Tensor[(484), float32], Tensor[(5, 15, 15), bool], Tensor[(484), float32]) {
  %787 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %788 = cast(meta[relay.Constant][25] /* ty=Tensor[(484), int16] */, dtype="int16") /* ty=Tensor[(484), int16] */;
  %789 = cast(%var_16278, dtype="float64") /* ty=Tensor[(12), float64] */;
  %790 = reshape(%788, newshape=[4, 11, 11]) /* ty=Tensor[(4, 11, 11), int16] */;
  %791 = reshape(%789, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %792 = @func_10587(%790, %791) /* ty=(Tensor[(4, 11, 11), uint64], Tensor[(4, 10, 3), float64], Tensor[(12), float64]) */;
  %793 = cast(meta[relay.Constant][25] /* ty=Tensor[(484), int16] */, dtype="float32") /* ty=Tensor[(484), float32] */;
  %794 = @func_15244() /* ty=(Tensor[(5, 15, 15), bool],) */;
  %795 = cast(meta[relay.Constant][25] /* ty=Tensor[(484), int16] */, dtype="float32") /* ty=Tensor[(484), float32] */;
  %796 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  %797 = %787.6;
  %798 = %792.0;
  %799 = sinh(%793) /* ty=Tensor[(484), float32] */;
  %800 = %794.0;
  %801 = sigmoid(%795) /* ty=Tensor[(484), float32] */;
  (%796, %797, %798, %var_16278, %799, %800, %801)
}

def @func_5191() -> (Tensor[(5, 15, 15), float64],) {
  %802 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  (%802,)
}

def @func_17635() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(11, 13, 12), float32], Tensor[(1716), uint8]) {
  %803 = @func_267() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %804 = @func_11948() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %805 = cast(meta[relay.Constant][26] /* ty=Tensor[(1716), uint8] */, dtype="uint8") /* ty=Tensor[(1716), uint8] */;
  %806 = reshape(%805, newshape=[11, 13, 12]) /* ty=Tensor[(11, 13, 12), uint8] */;
  %807 = @func_4247(%806) /* ty=(Tensor[(11, 13, 12), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %808 = %803.0;
  %809 = %804.4;
  %810 = %807.0;
  (%808, %809, %810, meta[relay.Constant][26] /* ty=Tensor[(1716), uint8] */)
}

def @func_6002() -> Tensor[(5, 15, 15), float32] {
  %811 = @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */;
  %811.0
}

def @func_15941() -> (Tensor[(11, 13, 12), uint8],) {
  %812 = @func_15739() /* ty=(Tensor[(11, 13, 12), uint8],) */;
  %813 = %812.0;
  (%813,)
}

def @func_11142() -> Tensor[(5, 15, 15), float32] {
  %814 = @func_6727() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %814.0
}

def @func_5887() -> (Tensor[(14, ?, 2), bool],) {
  %815 = @func_5122() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) */;
  %816 = %815.3;
  (%816,)
}

def @func_12499() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) {
  %817 = @func_2735() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %818 = %817.0;
  %819 = @func_12199() /* ty=Tensor[(5, 15, 15), int64] */;
  %820 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
  (%818, %819, %820)
}

def @func_10970() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %821 = @func_6727() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %822 = @func_8400() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %823 = @func_10109() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %824 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
  %825 = %821.0;
  %826 = %822.0;
  %827 = %823.1;
  (%824, %825, %826, %827)
}

def @func_5982() -> Tensor[(5, 15, 15), float32] {
  %828 = @func_1573() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %828.0
}

def @func_3344() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %829 = @func_2735() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %830 = @func_2161() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %831 = %829.0;
  %832 = %830.1;
  (%831, %832)
}

def @func_1076() -> Tensor[(5, 15, 15), float64] {
  @func_1034() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_12721() -> (Tensor[(14, ?, 2), bool],) {
  %833 = @func_12302() /* ty=Tensor[(14, ?, 2), bool] */;
  (%833,)
}

def @func_12946() -> (Tensor[(5, 15, 15), float64], Tensor[(12, 11, 14), bool], Tensor[(12, 15, 16), int64], Tensor[(120), float64]) {
  %834 = @func_2718() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %835 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %836 = cast(meta[relay.Constant][27] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %837 = reshape(%836, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %838 = @func_9704(%837) /* ty=(Tensor[(5, 15, 15), bool], Tensor[(12, 15, 16), int64], Tensor[(120), float64]) */;
  %839 = %834.0;
  %840 = %835.5;
  %841 = %838.1;
  (%839, %840, %841, meta[relay.Constant][27] /* ty=Tensor[(120), float64] */)
}

def @func_13041() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), float32], Tensor[(5, 15, 15), float64]) {
  %842 = @func_2756() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %843 = %842.1;
  %844 = @func_9872() /* ty=Tensor[(11, 13, 12), float32] */;
  %845 = @func_4991() /* ty=Tensor[(5, 15, 15), float64] */;
  (%843, %844, %845)
}

def @func_17549() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %846 = @func_3790() /* ty=Tensor[(5, 15, 15), float32] */;
  %847 = @func_2947() /* ty=Tensor[(5, 15, 15), float32] */;
  (%846, %847)
}

def @func_628() -> (Tensor[(5, 15, 15), float32],) {
  %848 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %849 = %848.1;
  (%849,)
}

def @func_14227() -> Tensor[(14, ?, 2), bool] {
  %850 = @func_12721() /* ty=(Tensor[(14, ?, 2), bool],) */;
  %850.0
}

def @func_2689() -> Tensor[(5, 15, 15), float32] {
  %851 = @func_1573() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %851.0
}

def @func_2191() -> (Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) {
  %852 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
  %853 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
  (%852, %853)
}

def @func_17689(%var_17684: Tensor[(12), float64]) -> (Tensor[(5, 15, 15), float32], Tensor[(4, 11, 11), uint64], Tensor[(484), int16], Tensor[(12), float64], Tensor[(512), int8]) {
  %854 = @func_12685() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %855 = cast(meta[relay.Constant][28] /* ty=Tensor[(484), int16] */, dtype="int16") /* ty=Tensor[(484), int16] */;
  %856 = cast(%var_17684, dtype="float64") /* ty=Tensor[(12), float64] */;
  %857 = reshape(%855, newshape=[4, 11, 11]) /* ty=Tensor[(4, 11, 11), int16] */;
  %858 = reshape(%856, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %859 = @func_10587(%857, %858) /* ty=(Tensor[(4, 11, 11), uint64], Tensor[(4, 10, 3), float64], Tensor[(12), float64]) */;
  %860 = @func_17174() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float64]) */;
  %861 = %854.0;
  %862 = %859.0;
  %863 = %860.0;
  (%861, %862, meta[relay.Constant][28] /* ty=Tensor[(484), int16] */, %var_17684, %863)
}

def @func_14449(%var_14442: Tensor[(3, 10, 10), int64], %var_14443: Tensor[(3, 10, 10), int64]) -> (Tensor[(3, 10, 10), int64],) {
  %864 = cast(%var_14443, dtype="int64") /* ty=Tensor[(3, 10, 10), int64] */;
  %865 = shape_of(%var_14442, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%var_14442, dtype="int64") /* ty=Tensor[(3, 10, 10), int64] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %868 = multiply(%866, %867) /* ty=Tensor[(3, 10, 10), int64] */;
  (%868,)
}

def @func_2892() -> (Tensor[(512), int8],) {
  %869 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %870 = %869.3;
  (%870,)
}

def @func_10109() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %871 = @func_1001() /* ty=Tensor[(5, 15, 15), float32] */;
  %872 = @func_3562() /* ty=Tensor[(5, 15, 15), float32] */;
  (%871, %872)
}

def @func_4319() -> Tensor[(5, 15, 15), bool] {
  %873 = @func_2578() /* ty=(Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) */;
  %874 = %873.0;
  %875 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 15, 15), bool] */, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %876 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%874, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%877, %878) /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_17803() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %879 = @func_3027() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %880 = @func_5315() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %881 = %879.0;
  %882 = %880.0;
  (%881, %882)
}

def @func_5692() -> (Tensor[(5, 15, 15), float32],) {
  %883 = @func_2735() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %884 = %883.0;
  (%884,)
}

def @func_5122() -> (Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) {
  %885 = @func_2892() /* ty=(Tensor[(512), int8],) */;
  %886 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %887 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %888 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 4), float64] */;
  %889 = reshape(%888, newshape=[14, 1, 2]) /* ty=Tensor[(14, 1, 2), float64] */;
  %890 = @func_376(%889) /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */;
  %891 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
  %892 = %885.0;
  %893 = %886.0;
  %894 = %887.3;
  %895 = %890.0;
  %896 = %891.2;
  (%892, %893, %894, %895, meta[relay.Constant][30] /* ty=Tensor[(7, 4), float64] */, %896)
}

def @func_5017() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %897 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %898 = @func_3266() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %899 = %897.1;
  %900 = %898.0;
  (%899, %900)
}

def @func_426() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %901 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %902 = %901.1;
  %903 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
  (%902, %903)
}

def @func_12878() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(512), int8], Tensor[(11, 15, 3), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %904 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %905 = @func_5122() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) */;
  %906 = @func_10020() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %907 = @func_5315() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %908 = %904.0;
  %909 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
  %910 = %905.0;
  %911 = %906.0;
  %912 = @func_5153() /* ty=Tensor[(5, 15, 15), float32] */;
  %913 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
  %914 = %907.0;
  (%908, %909, %910, %911, %912, %913, %914)
}

def @func_8122() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %915 = @func_1856() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %916 = @func_2756() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %917 = %915.0;
  %918 = %916.1;
  (%917, %918)
}

def @func_1532() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) {
  %919 = @func_684() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %920 = @func_1001() /* ty=Tensor[(5, 15, 15), float32] */;
  %921 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 15, 15), float32] */, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %922 = shape_of(%920, dtype="int32") /* ty=Tensor[(3), int32] */;
  %923 = cast(%920, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %925 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %926 = @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %927 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %928 = %919.0;
  %929 = @func_872() /* ty=Tensor[(5, 15, 15), float32] */;
  %930 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
  %931 = logical_and(%923, %924) /* ty=Tensor[(5, 15, 15), bool] */;
  %932 = %925.1;
  %933 = %926.0;
  %934 = %927.1;
  (%928, %929, %930, %931, %932, %933, %934)
}

def @func_5898() -> Tensor[(5, 15, 15), float32] {
  %935 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %935.1
}

def @func_10089(%var_10074: Tensor[(12), float64]) -> (Tensor[(11, 13, 12), uint8], Tensor[(4, 10, 3), bool], Tensor[(12), float64], Tensor[(11, 13, 12), uint8]) {
  %936 = cast(%var_10074, dtype="float64") /* ty=Tensor[(12), float64] */;
  %937 = reshape(%936, newshape=[4, 1, 3]) /* ty=Tensor[(4, 1, 3), float64] */;
  %938 = @func_9343(%937) /* ty=(Tensor[(4, 10, 3), bool], Tensor[(5, 15, 15), float64], Tensor[(4, 10, 3), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %939 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %940 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
  %941 = %938.0;
  %942 = %939.1;
  (%940, %941, %var_10074, %942)
}

def @func_8628() -> (Tensor[(11, 13, 12), uint8],) {
  %943 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %944 = %943.1;
  (%944,)
}

def @func_14392() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %945 = @func_5255() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %946 = @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %947 = @func_13437() /* ty=Tensor[(5, 15, 15), float32] */;
  %948 = %945.1;
  %949 = %946.0;
  (%947, %948, %949)
}

def @func_1279() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %950 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
  %951 = cast(%950, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %952 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
  %953 = tan(%951) /* ty=Tensor[(5, 15, 15), float32] */;
  %954 = %952.0;
  %955 = @func_872() /* ty=Tensor[(5, 15, 15), float32] */;
  (%953, %954, %955)
}

def @func_7770() -> Tensor[(5, 15, 15), float32] {
  %956 = @func_1573() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %956.0
}

def @func_14475() -> (Tensor[(5, 15, 15), float64],) {
  %957 = @func_14053() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %958 = %957.0;
  (%958,)
}

def @main(%var_17830: float32, %var_17831: Tensor[(3, 1, 1), float32]) -> (Tensor[(3, 1, 1), float32],) {
  %959 = cast(%var_17830, dtype="float32") /* ty=float32 */;
  %960 = cast(%var_17831, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
  %961 = minimum(%959, %960) /* ty=Tensor[(3, 1, 1), float32] */;
  (%961,)
}

def @func_15988() -> (Tensor[(12, 11, 14), uint32], Tensor[(5, 15, 15), float32]) {
  %962 = @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */;
  %963 = @func_13292() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %964 = %962.1;
  %965 = %963.0;
  (%964, %965)
}

def @func_6482() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %966 = @func_3677() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %967 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
  %968 = %966.0;
  (%967, %968)
}

def @func_11542(%var_11486: Tensor[(11, 13, 12), uint8], %var_11531: Tensor[(1, 63), bool]) -> (Tensor[(11, 13, 12), bool], Tensor[(5, 15, 15), int64], Tensor[(21), bool], Tensor[(14, 63), bool]) {
  %969 = @func_10664() /* ty=Tensor[(11, 13, 12), uint8] */;
  %970 = cast(%var_11486, dtype="bool") /* ty=Tensor[(11, 13, 12), bool] */;
  %971 = shape_of(%969, dtype="int32") /* ty=Tensor[(3), int32] */;
  %972 = cast(%969, dtype="bool") /* ty=Tensor[(11, 13, 12), bool] */;
  %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %974 = cast(meta[relay.Constant][32] /* ty=Tensor[(21), bool] */, dtype="bool") /* ty=Tensor[(21), bool] */;
  %975 = cast(%var_11531, dtype="bool") /* ty=Tensor[(1, 63), bool] */;
  %976 = reshape(%974, newshape=[7, 3, 1]) /* ty=Tensor[(7, 3, 1), bool] */;
  %977 = reshape(%975, newshape=[7, 3, 3]) /* ty=Tensor[(7, 3, 3), bool] */;
  %978 = @func_6338(%976, %977) /* ty=(Tensor[(7, 3, 3), bool], Tensor[(5, 15, 15), uint16], Tensor[(1125), float32], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) */;
  %979 = cast(%var_11531, dtype="bool") /* ty=Tensor[(1, 63), bool] */;
  %980 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 63), bool] */, dtype="bool") /* ty=Tensor[(14, 63), bool] */;
  %981 = less_equal(%972, %973) /* ty=Tensor[(11, 13, 12), bool] */;
  %982 = %978.3;
  %983 = less_equal(%979, %980) /* ty=Tensor[(14, 63), bool] */;
  (%981, %982, meta[relay.Constant][32] /* ty=Tensor[(21), bool] */, %983)
}

def @func_4905() -> (Tensor[(5, 15, 15), int64],) {
  %984 = @func_684() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %985 = %984.0;
  (%985,)
}

def @func_5585() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %986 = @func_1573() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %987 = @func_4296() /* ty=Tensor[(5, 15, 15), float32] */;
  %988 = %986.0;
  (%987, %988)
}

def @func_6727() -> (Tensor[(5, 15, 15), float32],) {
  %989 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
  (%989,)
}

def @func_9828() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %990 = @func_3562() /* ty=Tensor[(5, 15, 15), float32] */;
  %991 = @func_7237() /* ty=Tensor[(5, 15, 15), float64] */;
  (%990, %991)
}

def @func_8841() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %992 = @func_7007() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %993 = %992.0;
  %994 = @func_6002() /* ty=Tensor[(5, 15, 15), float32] */;
  %995 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  (%993, %994, %995)
}

def @func_5255() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  %996 = @func_3228() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %997 = @func_4991() /* ty=Tensor[(5, 15, 15), float64] */;
  %998 = %996.0;
  (%997, %998)
}

def @func_940() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) {
  %999 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1000 = %999.1;
  %1001 = cast(%1000, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %1002 = reshape(%1001, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %1003 = @func_684() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %1004 = @func_637(%1002) /* ty=Tensor[(5, 15, 15), bool] */;
  %1005 = %1003.0;
  (%1000, %1004, %1005)
}

def @func_1231() -> Tensor[(5, 15, 15), float32] {
  @func_917() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_14904() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1006 = @func_2161() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %1007 = @func_14698() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) */;
  %1008 = %1006.1;
  %1009 = %1007.1;
  (%1008, %1009)
}

def @func_17174() -> (Tensor[(512), int8], Tensor[(5, 15, 15), float64]) {
  %1010 = @func_9447() /* ty=Tensor[(512), int8] */;
  %1011 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1010, %1011)
}

def @func_14790(%var_14776: Tensor[(13, 7, 16), float32]) -> Tensor[(13, 7, 16), float32] {
  %1012 = cast(%var_14776, dtype="float32") /* ty=Tensor[(13, 7, 16), float32] */;
  acos(%1012) /* ty=Tensor[(13, 7, 16), float32] */
}

def @func_10020() -> (Tensor[(11, 15, 3), float32],) {
  %1013 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 3), float32] */;
  %1014 = cosh(%1013) /* ty=Tensor[(11, 15, 3), float32] */;
  (%1014,)
}

def @func_15179() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %1015 = @func_9901() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1016 = %1015.0;
  %1017 = @func_10547() /* ty=Tensor[(5, 15, 15), bool] */;
  (%1016, %1017)
}

def @func_15041() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %1018 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1019 = @func_4582() /* ty=Tensor[(5, 15, 15), float32] */;
  %1020 = %1018.1;
  %1021 = @func_4167() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1019, %1020, %1021)
}

def @func_4167() -> Tensor[(5, 15, 15), float64] {
  %1022 = @func_3677() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1023 = %1022.0;
  %1024 = cast(%1023, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  rsqrt(%1024) /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_5963() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) {
  %1025 = @func_4905() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %1026 = %1025.0;
  %1027 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1026, %1027)
}

def @func_1658() -> Tensor[(5, 15, 15), float64] {
  %1028 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1029 = %1028.1;
  %1030 = cast(%1029, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  acosh(%1030) /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_17292() -> (Tensor[(5, 15, 15), float32],) {
  %1031 = @func_15988() /* ty=(Tensor[(12, 11, 14), uint32], Tensor[(5, 15, 15), float32]) */;
  %1032 = %1031.1;
  (%1032,)
}

def @func_17252() -> (Tensor[(5, 15, 15), float32],) {
  %1033 = @func_2689() /* ty=Tensor[(5, 15, 15), float32] */;
  (%1033,)
}

def @func_1154() -> (Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) {
  %1034 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1035 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 11, 14), float64] */, dtype="float64") /* ty=Tensor[(12, 11, 14), float64] */;
  %1036 = acos(%1035) /* ty=Tensor[(12, 11, 14), float64] */;
  %1037 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 11, 14), float64] */, dtype="bool") /* ty=Tensor[(12, 11, 14), bool] */;
  %1038 = shape_of(%1036, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1039 = cast(%1036, dtype="bool") /* ty=Tensor[(12, 11, 14), bool] */;
  %1040 = dyn.reshape(%1037, %1038, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1041 = cast(meta[relay.Constant][36] /* ty=Tensor[(512), int8] */, dtype="int8") /* ty=Tensor[(512), int8] */;
  %1042 = cast(meta[relay.Constant][36] /* ty=Tensor[(512), int8] */, dtype="int8") /* ty=Tensor[(512), int8] */;
  %1043 = reshape(%1041, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
  %1044 = reshape(%1042, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
  %1045 = %1034.1;
  %1046 = less_equal(%1039, %1040) /* ty=Tensor[(12, 11, 14), bool] */;
  %1047 = @func_505(%1043, %1044) /* ty=Tensor[(16, 8, 4), bool] */;
  (%1045, %1046, %1047, meta[relay.Constant][36] /* ty=Tensor[(512), int8] */)
}

def @func_6633() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1048 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1049 = @func_4007() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1050 = %1048.0;
  %1051 = %1049.0;
  (%1050, %1051)
}

def @func_9901() -> (Tensor[(5, 15, 15), float32],) {
  %1052 = @func_6682() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32]) */;
  %1053 = %1052.0;
  (%1053,)
}

def @func_15739() -> (Tensor[(11, 13, 12), uint8],) {
  %1054 = @func_8209() /* ty=Tensor[(11, 13, 12), uint8] */;
  (%1054,)
}

def @func_376(%var_356: Tensor[(14, 1, 2), float64]) -> (Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) {
  %1055 = cast(%var_356, dtype="float64") /* ty=Tensor[(14, 1, 2), float64] */;
  %1056 = atanh(%1055) /* ty=Tensor[(14, 1, 2), float64] */;
  %1057 = cast(%1056, dtype="float32") /* ty=Tensor[(14, 1, 2), float32] */;
  %1058 = log10(%1057) /* ty=Tensor[(14, 1, 2), float32] */;
  %1059 = cast(%var_356, dtype="bool") /* ty=Tensor[(14, 1, 2), bool] */;
  %1060 = shape_of(%1058, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1061 = cast(%1058, dtype="bool") /* ty=Tensor[(14, 1, 2), bool] */;
  %1062 = dyn.reshape(%1059, %1060, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1063 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1064 = less_equal(%1061, %1062) /* ty=Tensor[(14, ?, 2), bool] */;
  %1065 = %1063.1;
  (%1064, %1065)
}

def @func_8129() -> (Tensor[(5, 15, 15), float64],) {
  %1066 = @func_6414() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %1067 = %1066.2;
  (%1067,)
}

def @func_6582() -> (Tensor[(5, 15, 15), float32],) {
  %1068 = @func_5017() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1069 = %1068.1;
  (%1069,)
}

def @func_8991(%var_8957: Tensor[(1188), float32], %var_8985: Tensor[(11, 13, 12), uint8]) -> (Tensor[(5, 15, 15), float32], Tensor[(3328, 1188), float32], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), bool]) {
  %1070 = @func_5122() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) */;
  %1071 = cast(%var_8957, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %1072 = reshape(%1071, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), float32] */;
  %1073 = @func_8468(%1072) /* ty=(Tensor[(9, 12, 11), float32], Tensor[(13, 16, 16), int8], Tensor[(3328, 1), float64]) */;
  %1074 = %1073.2;
  %1075 = cast(%1074, dtype="uint32") /* ty=Tensor[(3328, 1), uint32] */;
  %1076 = cast(%var_8957, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %1077 = multiply(%1075, %1076) /* ty=Tensor[(3328, 1188), uint32] */;
  %1078 = cast(%1077, dtype="float32") /* ty=Tensor[(3328, 1188), float32] */;
  %1079 = @func_3344() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1080 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %1081 = %1080.0;
  %1082 = cast(%var_8985, dtype="bool") /* ty=Tensor[(11, 13, 12), bool] */;
  %1083 = shape_of(%1081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1084 = cast(%1081, dtype="bool") /* ty=Tensor[(11, 13, 12), bool] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1086 = %1070.2;
  %1087 = log(%1078) /* ty=Tensor[(3328, 1188), float32] */;
  %1088 = %1079.0;
  %1089 = less(%1084, %1085) /* ty=Tensor[(11, 13, 12), bool] */;
  (%1086, %1087, %1088, %1089)
}

def @func_2270(%var_2247: Tensor[(5, 15, 15), bool]) -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  %1090 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
  %1091 = %1090.1;
  %1092 = cast(%var_2247, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %1093 = shape_of(%1091, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1094 = cast(%1091, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1096 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
  %1097 = divide(%1094, %1095) /* ty=Tensor[(5, 15, 15), float64] */;
  %1098 = %1096.0;
  (%1097, %1098)
}

def @func_11223() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %1099 = @func_6414() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %1100 = @func_9407() /* ty=Tensor[(5, 15, 15), float32] */;
  %1101 = %1099.2;
  (%1100, %1101)
}

def @func_4991() -> Tensor[(5, 15, 15), float64] {
  %1102 = @func_4958() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %1102.1
}

def @func_8547() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  %1103 = @func_7237() /* ty=Tensor[(5, 15, 15), float64] */;
  %1104 = cast(%1103, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %1105 = reshape(%1104, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float64] */;
  %1106 = @func_2430(%1105) /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) */;
  %1107 = %1106.1;
  %1108 = cast(%1107, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %1109 = exp(%1108) /* ty=Tensor[(5, 15, 15), float32] */;
  (%1103, %1109)
}

def @func_4343() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %1110 = @func_656() /* ty=Tensor[(5, 15, 15), float32] */;
  %1111 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1110, %1111)
}

def @func_10405(%var_10396: Tensor[(11, 15, 5), uint16], %var_10397: Tensor[(11, 15, 5), uint16]) -> (Tensor[(11, 15, 5), uint16],) {
  %1112 = cast(%var_10397, dtype="uint16") /* ty=Tensor[(11, 15, 5), uint16] */;
  %1113 = shape_of(%var_10396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1114 = cast(%var_10396, dtype="uint16") /* ty=Tensor[(11, 15, 5), uint16] */;
  %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1116 = bitwise_and(%1114, %1115) /* ty=Tensor[(11, 15, 5), uint16] */;
  (%1116,)
}

def @func_11029() -> Tensor[(5, 15, 15), bool] {
  @func_5424() /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_15459() -> Tensor[(5, 15, 15), int64] {
  %1117 = @func_13749() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %1117.0
}

def @func_10852() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %1118 = @func_3677() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1119 = @func_5122() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) */;
  %1120 = @func_7219() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1121 = @func_5982() /* ty=Tensor[(5, 15, 15), float32] */;
  %1122 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  %1123 = %1118.0;
  %1124 = %1119.3;
  %1125 = %1120.4;
  %1126 = @func_4167() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1121, %1122, %1123, %1124, %1125, %1126)
}

def @func_4582() -> Tensor[(5, 15, 15), float32] {
  %1127 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1127.0
}

def @func_2161() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  %1128 = @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */;
  %1129 = @func_1658() /* ty=Tensor[(5, 15, 15), float64] */;
  %1130 = %1128.0;
  (%1129, %1130)
}

def @func_12109() -> Tensor[(5, 15, 15), float32] {
  @func_917() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_14698() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) {
  %1131 = @func_2787() /* ty=Tensor[(5, 15, 15), int64] */;
  %1132 = @func_6002() /* ty=Tensor[(5, 15, 15), float32] */;
  (%1131, %1132)
}

def @func_4549() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint16]) {
  %1133 = @func_3500() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1134 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %1135 = %1134.0;
  %1136 = cast(%1135, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %1137 = reshape(%1136, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %1138 = @func_3830(%1137) /* ty=(Tensor[(5, 15, 15), uint16],) */;
  %1139 = %1133.0;
  %1140 = %1138.0;
  (%1139, %1135, %1140)
}

def @func_16436() -> (Tensor[(5, 15, 15), float64],) {
  %1141 = @func_13321() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1141,)
}

def @func_2138() -> (Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) {
  %1142 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1143 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %1144 = %1143.1;
  %1145 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 11, 14), bool] */, dtype="uint32") /* ty=Tensor[(12, 11, 14), uint32] */;
  %1146 = shape_of(%1144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1147 = cast(%1144, dtype="uint32") /* ty=Tensor[(12, 11, 14), uint32] */;
  %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1149 = %1142.0;
  %1150 = bitwise_or(%1147, %1148) /* ty=Tensor[(12, 11, 14), uint32] */;
  (%1149, %1150)
}

def @func_7007() -> (Tensor[(5, 15, 15), float32],) {
  %1151 = @func_3027() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1152 = %1151.0;
  (%1152,)
}

def @func_2653() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1153 = @func_1532() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */;
  %1154 = @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1155 = %1153.0;
  %1156 = @func_1001() /* ty=Tensor[(5, 15, 15), float32] */;
  %1157 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  %1158 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
  %1159 = %1154.0;
  (%1155, %1156, %1157, %1158, %1159)
}

def @func_9518(%var_9483: Tensor[(8, 5, 3), float64], %var_9507: Tensor[(8, 5, 3), float64]) -> (Tensor[(12, 15, 16), int64], Tensor[(48, 60), float32], Tensor[(8, 5, 3), bool]) {
  %1160 = cast(meta[relay.Constant][38] /* ty=Tensor[(48, 60), float32] */, dtype="float32") /* ty=Tensor[(48, 60), float32] */;
  %1161 = reshape(%1160, newshape=[12, 15, 16]) /* ty=Tensor[(12, 15, 16), float32] */;
  %1162 = @func_7406(%1161) /* ty=(Tensor[(12, 15, 16), bool], Tensor[(12, 15, 16), int64]) */;
  %1163 = cast(%var_9483, dtype="float64") /* ty=Tensor[(8, 5, 3), float64] */;
  %1164 = exp(%1163) /* ty=Tensor[(8, 5, 3), float64] */;
  %1165 = cast(%1164, dtype="float64") /* ty=Tensor[(8, 5, 3), float64] */;
  %1166 = sigmoid(%1165) /* ty=Tensor[(8, 5, 3), float64] */;
  %1167 = cast(%var_9507, dtype="bool") /* ty=Tensor[(8, 5, 3), bool] */;
  %1168 = shape_of(%1166, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1169 = cast(%1166, dtype="bool") /* ty=Tensor[(8, 5, 3), bool] */;
  %1170 = dyn.reshape(%1167, %1168, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1171 = %1162.1;
  %1172 = greater(%1169, %1170) /* ty=Tensor[(8, 5, 3), bool] */;
  (%1171, meta[relay.Constant][38] /* ty=Tensor[(48, 60), float32] */, %1172)
}

def @func_16824() -> (Tensor[(5, 15, 15), bool], Tensor[(11, 15, 3), float32]) {
  %1173 = @func_10020() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %1174 = %1173.0;
  %1175 = cast(%1174, dtype="float32") /* ty=Tensor[(11, 15, 3), float32] */;
  %1176 = @func_4319() /* ty=Tensor[(5, 15, 15), bool] */;
  %1177 = sinh(%1175) /* ty=Tensor[(11, 15, 3), float32] */;
  (%1176, %1177)
}

def @func_1034() -> Tensor[(5, 15, 15), float64] {
  %1178 = @func_684() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %1179 = %1178.0;
  %1180 = cast(%1179, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  sin(%1180) /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_10998() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1181 = @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %1182 = @func_2051() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1183 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1184 = @func_10298() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1185 = %1181.0;
  %1186 = %1182.1;
  %1187 = %1183.0;
  %1188 = %1184.2;
  (%1185, %1186, %1187, %1188)
}

def @func_5044() -> Tensor[(5, 15, 15), float32] {
  %1189 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1189.1
}

def @func_12633(%var_12631: Tensor[(1125), float64]) -> (Tensor[(11, 15, 3), float32], Tensor[(5, 15, 15), float32], Tensor[(1125), float64]) {
  %1190 = @func_11010() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %1191 = cast(%var_12631, dtype="float64") /* ty=Tensor[(1125), float64] */;
  %1192 = reshape(%1191, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float64] */;
  %1193 = @func_2430(%1192) /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) */;
  %1194 = %1190.0;
  %1195 = %1193.2;
  (%1194, %1195, %var_12631)
}

def @func_13338() -> (Tensor[(5, 15, 15), float64],) {
  %1196 = @func_7237() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1196,)
}

def @func_656() -> Tensor[(5, 15, 15), float32] {
  %1197 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1197.0
}

def @func_9637() -> (Tensor[(28, 1), float32],) {
  %1198 = @func_6985() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(28, ?), bool], Tensor[(28, 1), float32]) */;
  %1199 = %1198.3;
  (%1199,)
}

def @func_3971() -> (Tensor[(5, 15, 15), float32],) {
  %1200 = @func_3107() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), float32]) */;
  %1201 = %1200.2;
  (%1201,)
}

def @func_2787() -> Tensor[(5, 15, 15), int64] {
  %1202 = @func_2653() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1202.0
}

def @func_11676() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  %1203 = @func_1573() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1204 = @func_2991() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %1205 = cast(meta[relay.Constant][39] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %1206 = %1203.0;
  %1207 = cast(%1206, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %1208 = reshape(%1205, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %1209 = reshape(%1207, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %1210 = @func_580(%1208, %1209) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */;
  %1211 = @func_8782() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %1212 = @func_8042() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1213 = %1204.0;
  %1214 = %1210.2;
  %1215 = %1211.1;
  %1216 = %1212.1;
  (%1206, %1213, %1214, meta[relay.Constant][39] /* ty=Tensor[(28), float64] */, %1215, %1216)
}

def @func_637(%var_632: Tensor[(5, 15, 15), float32]) -> Tensor[(5, 15, 15), bool] {
  %1217 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1218 = %1217.0;
  %1219 = cast(%var_632, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %1220 = shape_of(%1218, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1221 = cast(%1218, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %1222 = dyn.reshape(%1219, %1220, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1221, %1222) /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_9604() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), int64]) {
  %1223 = @func_7120() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */;
  %1224 = cast(meta[relay.Constant][40] /* ty=Tensor[(512), int8] */, dtype="int8") /* ty=Tensor[(512), int8] */;
  %1225 = reshape(%1224, newshape=[512]) /* ty=Tensor[(512), int8] */;
  %1226 = @func_976(%1225) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %1227 = %1223.1;
  %1228 = @func_1176() /* ty=Tensor[(5, 15, 15), float32] */;
  %1229 = %1226.0;
  %1230 = @func_6257() /* ty=Tensor[(5, 15, 15), int64] */;
  (%1227, %1228, %1229, meta[relay.Constant][40] /* ty=Tensor[(512), int8] */, %1230)
}

def @func_17133() -> (Tensor[(5, 15, 15), float32],) {
  %1231 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
  (%1231,)
}

def @func_6111() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8]) {
  %1232 = @func_6054() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1233 = @func_4905() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %1234 = %1233.0;
  %1235 = cast(%1234, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %1236 = @func_5585() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1237 = @func_2051() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1238 = %1232.2;
  %1239 = log10(%1235) /* ty=Tensor[(5, 15, 15), float64] */;
  %1240 = %1236.0;
  %1241 = %1237.1;
  %1242 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
  (%1238, %1239, %1240, %1241, %1242)
}

def @func_5778() -> Tensor[(5, 15, 15), float32] {
  @func_3790() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_16234() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1243 = @func_2161() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %1244 = @func_4125() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1245 = %1243.0;
  %1246 = %1244.2;
  %1247 = @func_872() /* ty=Tensor[(5, 15, 15), float32] */;
  (%1245, %1246, %1247)
}

def @func_3677() -> (Tensor[(5, 15, 15), float32],) {
  %1248 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %1249 = %1248.0;
  (%1249,)
}

def @func_11563(%var_11557: Tensor[(9, 5, 12), float64]) -> Tensor[(9, 5, 12), float64] {
  %1250 = cast(%var_11557, dtype="float64") /* ty=Tensor[(9, 5, 12), float64] */;
  sqrt(%1250) /* ty=Tensor[(9, 5, 12), float64] */
}

def @func_9986() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %1251 = @func_7219() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1252 = @func_2689() /* ty=Tensor[(5, 15, 15), float32] */;
  %1253 = @func_872() /* ty=Tensor[(5, 15, 15), float32] */;
  %1254 = %1251.4;
  %1255 = @func_6843() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1252, %1253, %1254, %1255)
}

def @func_1176() -> Tensor[(5, 15, 15), float32] {
  %1256 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1256.0
}

def @func_14603() -> (Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) {
  %1257 = @func_10490() /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */;
  %1258 = @func_9239() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1259 = %1257.0;
  %1260 = %1258.1;
  (%1259, %1260)
}

def @func_10722() -> (Tensor[(5, 15, 15), int64],) {
  %1261 = @func_2787() /* ty=Tensor[(5, 15, 15), int64] */;
  (%1261,)
}

def @func_13321() -> Tensor[(5, 15, 15), float64] {
  @func_1658() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_872() -> Tensor[(5, 15, 15), float32] {
  %1262 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1262.0
}

def @func_917() -> Tensor[(5, 15, 15), float32] {
  %1263 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1263.1
}

def @func_976(%var_966: Tensor[(512), int8]) -> (Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) {
  %1264 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1265 = cast(%var_966, dtype="int8") /* ty=Tensor[(512), int8] */;
  %1266 = cast(%var_966, dtype="int8") /* ty=Tensor[(512), int8] */;
  %1267 = reshape(%1265, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
  %1268 = reshape(%1266, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
  %1269 = %1264.1;
  %1270 = @func_505(%1267, %1268) /* ty=Tensor[(16, 8, 4), bool] */;
  (%1269, %1270, %var_966)
}

def @func_11720(%var_11711: Tensor[(3, 16, 1), float32]) -> Tensor[(3, 16, 1), float32] {
  %1271 = cast(%var_11711, dtype="float32") /* ty=Tensor[(3, 16, 1), float32] */;
  atanh(%1271) /* ty=Tensor[(3, 16, 1), float32] */
}

def @func_9115() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %1272 = @func_1532() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */;
  %1273 = @func_7582() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %1274 = @func_8351() /* ty=Tensor[(5, 15, 15), float32] */;
  %1275 = %1272.2;
  %1276 = %1273.1;
  (%1274, %1275, %1276)
}

def @func_4726() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1277 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %1278 = @func_3266() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1279 = @func_3266() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1280 = @func_3790() /* ty=Tensor[(5, 15, 15), float32] */;
  %1281 = %1277.0;
  %1282 = %1278.0;
  %1283 = %1279.0;
  (%1280, %1281, %1282, %1283)
}

def @func_7237() -> Tensor[(5, 15, 15), float64] {
  %1284 = @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %1284.0
}

def @func_2718() -> (Tensor[(5, 15, 15), float64],) {
  %1285 = @func_1658() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1285,)
}

def @func_9177(%var_9152: Tensor[(15, 75), bool], %var_9169: Tensor[(15, 75), bool]) -> (Tensor[(12, 11, 14), bool], Tensor[(15, 75), float32], Tensor[(15, 75), uint8]) {
  %1286 = @func_1532() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */;
  %1287 = cast(%var_9152, dtype="float64") /* ty=Tensor[(15, 75), float64] */;
  %1288 = exp(%1287) /* ty=Tensor[(15, 75), float64] */;
  %1289 = cast(%var_9152, dtype="bool") /* ty=Tensor[(15, 75), bool] */;
  %1290 = reshape(%1289, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), bool] */;
  %1291 = @func_2270(%1290) /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %1292 = %1291.1;
  %1293 = cast(%1292, dtype="int8") /* ty=Tensor[(5, 15, 15), int8] */;
  %1294 = shape_of(%1288, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1295 = cast(%1288, dtype="int8") /* ty=Tensor[(15, 75), int8] */;
  %1296 = dyn.reshape(%1293, %1294, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1297 = add(%1295, %1296) /* ty=Tensor[(15, 75), int8] */;
  %1298 = cast(%1297, dtype="float32") /* ty=Tensor[(15, 75), float32] */;
  %1299 = cast(%var_9169, dtype="uint8") /* ty=Tensor[(15, 75), uint8] */;
  %1300 = shape_of(%var_9152, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1301 = cast(%var_9152, dtype="uint8") /* ty=Tensor[(15, 75), uint8] */;
  %1302 = dyn.reshape(%1299, %1300, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1303 = %1286.6;
  %1304 = log(%1298) /* ty=Tensor[(15, 75), float32] */;
  %1305 = logical_xor(%1301, %1302) /* ty=Tensor[(15, 75), uint8] */;
  (%1303, %1304, %1305)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5586() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %3 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %0 = @func_1573() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1 = @func_4296() /* ty=Tensor[(5, 15, 15), float32] */;
    %2 = %0.0;
    (%1, %2)
  };
  %3() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_4249(%var_4248: Tensor[(11, 13, 12), uint8]) -> (Tensor[(11, 13, 12), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %16 = fn (%var_4201: Tensor[(11, 13, 12), uint8]) -> (Tensor[(11, 13, 12), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
    %4 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
    %5 = %4.0;
    %6 = cast(%var_4201, dtype="float32") /* ty=Tensor[(11, 13, 12), float32] */;
    %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
    %8 = cast(%5, dtype="float32") /* ty=Tensor[(11, 13, 12), float32] */;
    %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %10 = @func_2051() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %11 = %10.1;
    %12 = cast(%11, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
    %13 = floor_mod(%8, %9) /* ty=Tensor[(11, 13, 12), float32] */;
    %14 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
    %15 = atanh(%12) /* ty=Tensor[(5, 15, 15), float64] */;
    (%13, %14, %15)
  };
  %16(%var_4248) /* ty=(Tensor[(11, 13, 12), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_11029() -> Tensor[(5, 15, 15), bool] {
  @func_5424() /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_17635() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(11, 13, 12), float32], Tensor[(1716), uint8]) {
  %17 = @func_267() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %18 = @func_11948() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(1716), uint8] */, dtype="uint8") /* ty=Tensor[(1716), uint8] */;
  %20 = reshape(%19, newshape=[11, 13, 12]) /* ty=Tensor[(11, 13, 12), uint8] */;
  %21 = @func_4247(%20) /* ty=(Tensor[(11, 13, 12), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %22 = %17.0;
  %23 = %18.4;
  %24 = %21.0;
  (%22, %23, %24, meta[relay.Constant][0] /* ty=Tensor[(1716), uint8] */)
}

def @func_2140() -> (Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) {
  @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */
}

def @func_13650() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %27 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %25 = @func_5982() /* ty=Tensor[(5, 15, 15), float32] */;
    %26 = @func_7770() /* ty=Tensor[(5, 15, 15), float32] */;
    (%25, %26)
  };
  %27() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_6683() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32]) {
  %36 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32]) {
    %28 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
    %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
    %30 = shape_of(%28, dtype="int32") /* ty=Tensor[(3), int32] */;
    %31 = cast(%28, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
    %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %33 = add(%31, %32) /* ty=Tensor[(5, 15, 15), float32] */;
    %34 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
    %35 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
    (%33, %34, %35)
  };
  %36() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32]) */
}

def @func_8549() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  @func_8547() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */
}

def @func_8210() -> Tensor[(11, 13, 12), uint8] {
  %38 = fn () -> Tensor[(11, 13, 12), uint8] {
    %37 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
    %37.1
  };
  %38() /* ty=Tensor[(11, 13, 12), uint8] */
}

def @func_9447() -> Tensor[(512), int8] {
  %39 = @func_2892() /* ty=(Tensor[(512), int8],) */;
  %39.0
}

def @func_16047() -> (Tensor[(5, 15, 15), float64], Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) {
  %46 = fn () -> (Tensor[(5, 15, 15), float64], Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) {
    %40 = @func_2653() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %41 = @func_10490() /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */;
    %42 = @func_11773() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %43 = %40.2;
    %44 = %41.0;
    %45 = %42.0;
    (%43, %44, %45)
  };
  %46() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */
}

def @func_16665() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64]) {
  @func_16663() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64]) */
}

def @func_11545(%var_11543: Tensor[(11, 13, 12), uint8], %var_11544: Tensor[(1, 63), bool]) -> (Tensor[(11, 13, 12), bool], Tensor[(5, 15, 15), int64], Tensor[(21), bool], Tensor[(14, 63), bool]) {
  %62 = fn (%var_11486: Tensor[(11, 13, 12), uint8], %var_11531: Tensor[(1, 63), bool]) -> (Tensor[(11, 13, 12), bool], Tensor[(5, 15, 15), int64], Tensor[(21), bool], Tensor[(14, 63), bool]) {
    %47 = @func_10664() /* ty=Tensor[(11, 13, 12), uint8] */;
    %48 = cast(%var_11486, dtype="bool") /* ty=Tensor[(11, 13, 12), bool] */;
    %49 = shape_of(%47, dtype="int32") /* ty=Tensor[(3), int32] */;
    %50 = cast(%47, dtype="bool") /* ty=Tensor[(11, 13, 12), bool] */;
    %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %52 = cast(meta[relay.Constant][2] /* ty=Tensor[(21), bool] */, dtype="bool") /* ty=Tensor[(21), bool] */;
    %53 = cast(%var_11531, dtype="bool") /* ty=Tensor[(1, 63), bool] */;
    %54 = reshape(%52, newshape=[7, 3, 1]) /* ty=Tensor[(7, 3, 1), bool] */;
    %55 = reshape(%53, newshape=[7, 3, 3]) /* ty=Tensor[(7, 3, 3), bool] */;
    %56 = @func_6338(%54, %55) /* ty=(Tensor[(7, 3, 3), bool], Tensor[(5, 15, 15), uint16], Tensor[(1125), float32], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) */;
    %57 = cast(%var_11531, dtype="bool") /* ty=Tensor[(1, 63), bool] */;
    %58 = cast(meta[relay.Constant][3] /* ty=Tensor[(14, 63), bool] */, dtype="bool") /* ty=Tensor[(14, 63), bool] */;
    %59 = less_equal(%50, %51) /* ty=Tensor[(11, 13, 12), bool] */;
    %60 = %56.3;
    %61 = less_equal(%57, %58) /* ty=Tensor[(14, 63), bool] */;
    (%59, %60, meta[relay.Constant][2] /* ty=Tensor[(21), bool] */, %61)
  };
  %62(%var_11543, %var_11544) /* ty=(Tensor[(11, 13, 12), bool], Tensor[(5, 15, 15), int64], Tensor[(21), bool], Tensor[(14, 63), bool]) */
}

def @func_5191() -> (Tensor[(5, 15, 15), float64],) {
  %63 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  (%63,)
}

def @func_1076() -> Tensor[(5, 15, 15), float64] {
  @func_1034() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_7584() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  @func_7582() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */
}

def @func_9604() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), int64]) {
  %64 = @func_7120() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */;
  %65 = cast(meta[relay.Constant][4] /* ty=Tensor[(512), int8] */, dtype="int8") /* ty=Tensor[(512), int8] */;
  %66 = reshape(%65, newshape=[512]) /* ty=Tensor[(512), int8] */;
  %67 = @func_976(%66) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %68 = %64.1;
  %69 = @func_1176() /* ty=Tensor[(5, 15, 15), float32] */;
  %70 = %67.0;
  %71 = @func_6257() /* ty=Tensor[(5, 15, 15), int64] */;
  (%68, %69, %70, meta[relay.Constant][4] /* ty=Tensor[(512), int8] */, %71)
}

def @func_14228() -> Tensor[(14, ?, 2), bool] {
  %73 = fn () -> Tensor[(14, ?, 2), bool] {
    %72 = @func_12721() /* ty=(Tensor[(14, ?, 2), bool],) */;
    %72.0
  };
  %73() /* ty=Tensor[(14, ?, 2), bool] */
}

def @func_14956() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_14954() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_753(%var_752: Tensor[(4, 10, 7), float64]) -> (Tensor[(4, 10, 7), float64], Tensor[(5, 15, 15), float32], Tensor[(7, 4), float64], Tensor[(15, 75), float32], Tensor[(5, 15, 15), int64]) {
  %84 = fn (%var_736: Tensor[(4, 10, 7), float64]) -> (Tensor[(4, 10, 7), float64], Tensor[(5, 15, 15), float32], Tensor[(7, 4), float64], Tensor[(15, 75), float32], Tensor[(5, 15, 15), int64]) {
    %74 = cast(%var_736, dtype="float64") /* ty=Tensor[(4, 10, 7), float64] */;
    %75 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 4), float64] */;
    %76 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 75), float32] */, dtype="float32") /* ty=Tensor[(15, 75), float32] */;
    %77 = reshape(%75, newshape=[28]) /* ty=Tensor[(28), float64] */;
    %78 = reshape(%76, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
    %79 = @func_580(%77, %78) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */;
    %80 = @func_684() /* ty=(Tensor[(5, 15, 15), int64],) */;
    %81 = acos(%74) /* ty=Tensor[(4, 10, 7), float64] */;
    %82 = %79.2;
    %83 = %80.0;
    (%81, %82, meta[relay.Constant][5] /* ty=Tensor[(7, 4), float64] */, meta[relay.Constant][6] /* ty=Tensor[(15, 75), float32] */, %83)
  };
  %84(%var_752) /* ty=(Tensor[(4, 10, 7), float64], Tensor[(5, 15, 15), float32], Tensor[(7, 4), float64], Tensor[(15, 75), float32], Tensor[(5, 15, 15), int64]) */
}

def @func_4319() -> Tensor[(5, 15, 15), bool] {
  %85 = @func_2578() /* ty=(Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) */;
  %86 = %85.0;
  %87 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 15, 15), bool] */, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%89, %90) /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_10853() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %100 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
    %91 = @func_3677() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %92 = @func_5122() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) */;
    %93 = @func_7219() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %94 = @func_5982() /* ty=Tensor[(5, 15, 15), float32] */;
    %95 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
    %96 = %91.0;
    %97 = %92.3;
    %98 = %93.4;
    %99 = @func_4167() /* ty=Tensor[(5, 15, 15), float64] */;
    (%94, %95, %96, %97, %98, %99)
  };
  %100() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_6342(%var_6340: Tensor[(7, 3, 1), bool], %var_6341: Tensor[(7, 3, 3), bool]) -> (Tensor[(7, 3, 3), bool], Tensor[(5, 15, 15), uint16], Tensor[(1125), float32], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) {
  @func_6338(%var_6340, %var_6341) /* ty=(Tensor[(7, 3, 3), bool], Tensor[(5, 15, 15), uint16], Tensor[(1125), float32], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) */
}

def @func_12055() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float64]) {
  %101 = @func_2718() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %102 = @func_8122() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %103 = %102.1;
  %104 = cast(%103, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %105 = reshape(%104, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %106 = %101.0;
  %107 = @func_637(%105) /* ty=Tensor[(5, 15, 15), bool] */;
  %108 = @func_4167() /* ty=Tensor[(5, 15, 15), float64] */;
  (%106, %103, %107, %108)
}

def @func_5692() -> (Tensor[(5, 15, 15), float32],) {
  %109 = @func_2735() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %110 = %109.0;
  (%110,)
}

def @func_14545() -> Tensor[(5, 15, 15), bool] {
  %111 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %111.6
}

def @func_6844() -> Tensor[(5, 15, 15), float64] {
  %113 = fn () -> Tensor[(5, 15, 15), float64] {
    %112 = @func_2718() /* ty=(Tensor[(5, 15, 15), float64],) */;
    %112.0
  };
  %113() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_15426() -> (Tensor[(5, 15, 15), float32],) {
  @func_15424() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_13437() -> Tensor[(5, 15, 15), float32] {
  %114 = @func_1532() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */;
  %114.2
}

def @func_1658() -> Tensor[(5, 15, 15), float64] {
  %115 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %116 = %115.1;
  %117 = cast(%116, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  acosh(%117) /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_13668() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) {
  @func_13666() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) */
}

def @func_8352() -> Tensor[(5, 15, 15), float32] {
  %118 = fn () -> Tensor[(5, 15, 15), float32] {
    @func_7770() /* ty=Tensor[(5, 15, 15), float32] */
  };
  %118() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_2992() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %124 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
    %119 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %120 = %119.0;
    %121 = cast(%120, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
    %122 = reshape(%121, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
    %123 = @func_637(%122) /* ty=Tensor[(5, 15, 15), bool] */;
    (%120, %123)
  };
  %124() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */
}

def @func_3502() -> (Tensor[(5, 15, 15), float32],) {
  @func_3500() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_16190() -> (Tensor[(5, 15, 15), float64],) {
  %125 = @func_4167() /* ty=Tensor[(5, 15, 15), float64] */;
  (%125,)
}

def @func_15145() -> Tensor[(5, 15, 15), float64] {
  %126 = @func_7850() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %126.0
}

def @func_8841() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %127 = @func_7007() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %128 = %127.0;
  %129 = @func_6002() /* ty=Tensor[(5, 15, 15), float32] */;
  %130 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  (%128, %129, %130)
}

def @func_14431(%var_14410: Tensor[(8, 2, 15), float32]) -> (Tensor[(8, 2, 15), bool], Tensor[(5, 15, 15), float32]) {
  %131 = cast(%var_14410, dtype="float32") /* ty=Tensor[(8, 2, 15), float32] */;
  %132 = rsqrt(%131) /* ty=Tensor[(8, 2, 15), float32] */;
  %133 = cast(%var_14410, dtype="bool") /* ty=Tensor[(8, 2, 15), bool] */;
  %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(%132, dtype="bool") /* ty=Tensor[(8, 2, 15), bool] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %137 = @func_9986() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %138 = not_equal(%135, %136) /* ty=Tensor[(8, 2, 15), bool] */;
  %139 = %137.1;
  (%138, %139)
}

def @func_1345() -> Tensor[(11, 13, 12), uint8] {
  %142 = fn () -> Tensor[(11, 13, 12), uint8] {
    %140 = cast(meta[relay.Constant][8] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %141 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 13, 12), uint8] */, dtype="uint8") /* ty=Tensor[(11, 13, 12), uint8] */;
    bitwise_or(%140, %141) /* ty=Tensor[(11, 13, 12), uint8] */
  };
  %142() /* ty=Tensor[(11, 13, 12), uint8] */
}

def @func_1280() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %149 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %143 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
    %144 = cast(%143, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
    %145 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
    %146 = tan(%144) /* ty=Tensor[(5, 15, 15), float32] */;
    %147 = %145.0;
    %148 = @func_872() /* ty=Tensor[(5, 15, 15), float32] */;
    (%146, %147, %148)
  };
  %149() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_16123() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 15, 5), uint16], Tensor[(825), uint16], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(12, 11, 14), uint32]) {
  %150 = @func_15387() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %151 = cast(meta[relay.Constant][10] /* ty=Tensor[(825), uint16] */, dtype="uint16") /* ty=Tensor[(825), uint16] */;
  %152 = cast(meta[relay.Constant][10] /* ty=Tensor[(825), uint16] */, dtype="uint16") /* ty=Tensor[(825), uint16] */;
  %153 = reshape(%151, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), uint16] */;
  %154 = reshape(%152, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), uint16] */;
  %155 = @func_10405(%153, %154) /* ty=(Tensor[(11, 15, 5), uint16],) */;
  %156 = @func_15620() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %157 = @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %158 = @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */;
  %159 = %150.0;
  %160 = %155.0;
  %161 = %156.0;
  %162 = @func_872() /* ty=Tensor[(5, 15, 15), float32] */;
  %163 = %157.0;
  %164 = %158.1;
  (%159, %160, meta[relay.Constant][10] /* ty=Tensor[(825), uint16] */, %161, %162, %163, %164)
}

def @func_428() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_15387() -> (Tensor[(5, 15, 15), float32],) {
  %165 = @func_10998() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %166 = %165.3;
  (%166,)
}

def @func_8400() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %167 = @func_6482() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %168 = %167.0;
  %169 = @func_2947() /* ty=Tensor[(5, 15, 15), float32] */;
  (%168, %169)
}

def @func_14268(%var_14259: Tensor[(512), int8]) -> (Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) {
  %170 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %171 = cast(%var_14259, dtype="int8") /* ty=Tensor[(512), int8] */;
  %172 = cast(%var_14259, dtype="int8") /* ty=Tensor[(512), int8] */;
  %173 = reshape(%171, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
  %174 = reshape(%172, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
  %175 = %170.0;
  %176 = @func_505(%173, %174) /* ty=Tensor[(16, 8, 4), bool] */;
  (%175, %176, %var_14259)
}

def @func_15697() -> (Tensor[(5, 15, 15), float32],) {
  %179 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %177 = @func_12095() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %178 = %177.0;
    (%178,)
  };
  %179() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_13620() -> (Tensor[(5, 15, 15), float32],) {
  %182 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %180 = @func_8279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
    %181 = %180.0;
    (%181,)
  };
  %182() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_17664() -> Tensor[(11, 15, 3), float32] {
  @func_17662() /* ty=Tensor[(11, 15, 3), float32] */
}

def @func_16234() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %183 = @func_2161() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %184 = @func_4125() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %185 = %183.0;
  %186 = %184.2;
  %187 = @func_872() /* ty=Tensor[(5, 15, 15), float32] */;
  (%185, %186, %187)
}

def @func_10091(%var_10090: Tensor[(12), float64]) -> (Tensor[(11, 13, 12), uint8], Tensor[(4, 10, 3), bool], Tensor[(12), float64], Tensor[(11, 13, 12), uint8]) {
  %195 = fn (%var_10074: Tensor[(12), float64]) -> (Tensor[(11, 13, 12), uint8], Tensor[(4, 10, 3), bool], Tensor[(12), float64], Tensor[(11, 13, 12), uint8]) {
    %188 = cast(%var_10074, dtype="float64") /* ty=Tensor[(12), float64] */;
    %189 = reshape(%188, newshape=[4, 1, 3]) /* ty=Tensor[(4, 1, 3), float64] */;
    %190 = @func_9343(%189) /* ty=(Tensor[(4, 10, 3), bool], Tensor[(5, 15, 15), float64], Tensor[(4, 10, 3), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
    %191 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
    %192 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
    %193 = %190.0;
    %194 = %191.1;
    (%192, %193, %var_10074, %194)
  };
  %195(%var_10090) /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(4, 10, 3), bool], Tensor[(12), float64], Tensor[(11, 13, 12), uint8]) */
}

def @func_4321() -> Tensor[(5, 15, 15), bool] {
  @func_4319() /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_2138() -> (Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) {
  %196 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %197 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %198 = %197.1;
  %199 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 11, 14), bool] */, dtype="uint32") /* ty=Tensor[(12, 11, 14), uint32] */;
  %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%198, dtype="uint32") /* ty=Tensor[(12, 11, 14), uint32] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %203 = %196.0;
  %204 = bitwise_or(%201, %202) /* ty=Tensor[(12, 11, 14), uint32] */;
  (%203, %204)
}

def @func_3027() -> (Tensor[(5, 15, 15), float32],) {
  %205 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %206 = %205.0;
  (%206,)
}

def @func_16315(%var_16313: Tensor[(12), float64]) -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), bool], Tensor[(4, 11, 11), uint64], Tensor[(12), float64], Tensor[(484), float32], Tensor[(5, 15, 15), bool], Tensor[(484), float32]) {
  @func_16312(%var_16313) /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), bool], Tensor[(4, 11, 11), uint64], Tensor[(12), float64], Tensor[(484), float32], Tensor[(5, 15, 15), bool], Tensor[(484), float32]) */
}

def @func_9637() -> (Tensor[(28, 1), float32],) {
  %207 = @func_6985() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(28, ?), bool], Tensor[(28, 1), float32]) */;
  %208 = %207.3;
  (%208,)
}

def @func_4993() -> Tensor[(5, 15, 15), float64] {
  @func_4991() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_11563(%var_11557: Tensor[(9, 5, 12), float64]) -> Tensor[(9, 5, 12), float64] {
  %209 = cast(%var_11557, dtype="float64") /* ty=Tensor[(9, 5, 12), float64] */;
  sqrt(%209) /* ty=Tensor[(9, 5, 12), float64] */
}

def @func_15372() -> Tensor[(5, 15, 15), float32] {
  @func_15370() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_1858() -> (Tensor[(5, 15, 15), float32],) {
  @func_1856() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_2505() -> Tensor[(5, 15, 15), float32] {
  %210 = fn () -> Tensor[(5, 15, 15), float32] {
    @func_1001() /* ty=Tensor[(5, 15, 15), float32] */
  };
  %210() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_12790() -> Tensor[(5, 15, 15), float32] {
  %211 = @func_5255() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %211.1
}

def @func_5965() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) {
  @func_5963() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) */
}

def @func_2191() -> (Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) {
  %212 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
  %213 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
  (%212, %213)
}

def @func_2892() -> (Tensor[(512), int8],) {
  %214 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %215 = %214.3;
  (%215,)
}

def @func_10691() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %218 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
    %216 = @func_9745() /* ty=Tensor[(5, 15, 15), float32] */;
    %217 = @func_5424() /* ty=Tensor[(5, 15, 15), bool] */;
    (%216, %217)
  };
  %218() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */
}

def @func_16236() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_16234() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_3228() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %219 = @func_2756() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %220 = @func_2947() /* ty=Tensor[(5, 15, 15), float32] */;
  %221 = @func_1367() /* ty=Tensor[(5, 15, 15), float32] */;
  %222 = %219.0;
  %223 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  (%220, %221, %222, %223)
}

def @func_9829() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %226 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
    %224 = @func_3562() /* ty=Tensor[(5, 15, 15), float32] */;
    %225 = @func_7237() /* ty=Tensor[(5, 15, 15), float64] */;
    (%224, %225)
  };
  %226() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_14790(%var_14776: Tensor[(13, 7, 16), float32]) -> Tensor[(13, 7, 16), float32] {
  %227 = cast(%var_14776, dtype="float32") /* ty=Tensor[(13, 7, 16), float32] */;
  acos(%227) /* ty=Tensor[(13, 7, 16), float32] */
}

def @func_2308(%var_2306: Tensor[(5, 6, 11), float64]) -> (Tensor[(5, 6, 11), int64], Tensor[(5, 15, 15), float64]) {
  @func_2305(%var_2306) /* ty=(Tensor[(5, 6, 11), int64], Tensor[(5, 15, 15), float64]) */
}

def @func_16515() -> (Tensor[(5, 15, 15), float32],) {
  %230 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %228 = @func_11898() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %229 = %228.0;
    (%229,)
  };
  %230() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_4408() -> (Tensor[(5, 15, 15), float32],) {
  %233 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %231 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %232 = %231.1;
    (%232,)
  };
  %233() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_11805() -> (Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32]) {
  %236 = fn () -> (Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32]) {
    %234 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
    %235 = @func_5982() /* ty=Tensor[(5, 15, 15), float32] */;
    (%234, %235)
  };
  %236() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32]) */
}

def @func_15315(%var_15303: Tensor[(182, 9), bool]) -> (Tensor[(5, 15, 15), float32], Tensor[(13, 9, 14), int64], Tensor[(182, 9), bool]) {
  %237 = @func_4407() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %238 = cast(%var_15303, dtype="bool") /* ty=Tensor[(182, 9), bool] */;
  %239 = cast(%var_15303, dtype="bool") /* ty=Tensor[(182, 9), bool] */;
  %240 = reshape(%238, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), bool] */;
  %241 = reshape(%239, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), bool] */;
  %242 = @func_13869(%240, %241) /* ty=(Tensor[(13, 9, 14), int64], Tensor[(5, 15, 15), float32], Tensor[(11, 15, 3), int16], Tensor[(11, 13, 12), uint8]) */;
  %243 = cast(meta[relay.Constant][12] /* ty=Tensor[(182, 9), bool] */, dtype="bool") /* ty=Tensor[(182, 9), bool] */;
  %244 = shape_of(%var_15303, dtype="int32") /* ty=Tensor[(2), int32] */;
  %245 = cast(%var_15303, dtype="bool") /* ty=Tensor[(182, 9), bool] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %247 = %237.0;
  %248 = %242.0;
  %249 = less_equal(%245, %246) /* ty=Tensor[(182, 9), bool] */;
  (%247, %248, %249)
}

def @func_14175() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), int32], Tensor[(14, ?, 2), float64]) {
  %269 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), int32], Tensor[(14, ?, 2), float64]) {
    %250 = @func_6054() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %251 = @func_3500() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %252 = @func_12302() /* ty=Tensor[(14, ?, 2), bool] */;
    %253 = cast(%252, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
    %254 = tan(%253) /* ty=Tensor[(14, ?, 2), float64] */;
    %255 = cast(%252, dtype="int32") /* ty=Tensor[(14, ?, 2), int32] */;
    %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(3), int32] */;
    %257 = cast(%254, dtype="int32") /* ty=Tensor[(14, ?, 2), int32] */;
    %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %259 = cast(%252, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
    %260 = shape_of(%254, dtype="int32") /* ty=Tensor[(3), int32] */;
    %261 = cast(%254, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
    %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %263 = mod(%261, %262) /* ty=Tensor[(14, ?, 2), float64] */;
    %264 = cast(%263, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
    %265 = %250.2;
    %266 = %251.0;
    %267 = right_shift(%257, %258) /* ty=Tensor[(14, ?, 2), int32] */;
    %268 = asinh(%264) /* ty=Tensor[(14, ?, 2), float64] */;
    (%265, %266, %267, %268)
  };
  %269() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), int32], Tensor[(14, ?, 2), float64]) */
}

def @func_1001() -> Tensor[(5, 15, 15), float32] {
  @func_656() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_2053() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_2051() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_14698() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) {
  %270 = @func_2787() /* ty=Tensor[(5, 15, 15), int64] */;
  %271 = @func_6002() /* ty=Tensor[(5, 15, 15), float32] */;
  (%270, %271)
}

def @func_16125() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 15, 5), uint16], Tensor[(825), uint16], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(12, 11, 14), uint32]) {
  @func_16123() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(11, 15, 5), uint16], Tensor[(825), uint16], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(12, 11, 14), uint32]) */
}

def @func_4007() -> (Tensor[(5, 15, 15), float32],) {
  %272 = @func_2735() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %273 = %272.0;
  (%273,)
}

def @func_12946() -> (Tensor[(5, 15, 15), float64], Tensor[(12, 11, 14), bool], Tensor[(12, 15, 16), int64], Tensor[(120), float64]) {
  %274 = @func_2718() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %275 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %276 = cast(meta[relay.Constant][13] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %277 = reshape(%276, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %278 = @func_9704(%277) /* ty=(Tensor[(5, 15, 15), bool], Tensor[(12, 15, 16), int64], Tensor[(120), float64]) */;
  %279 = %274.0;
  %280 = %275.5;
  %281 = %278.1;
  (%279, %280, %281, meta[relay.Constant][13] /* ty=Tensor[(120), float64] */)
}

def @func_17637() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(11, 13, 12), float32], Tensor[(1716), uint8]) {
  @func_17635() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(11, 13, 12), float32], Tensor[(1716), uint8]) */
}

def @func_5256() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  %285 = fn () -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
    %282 = @func_3228() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
    %283 = @func_4991() /* ty=Tensor[(5, 15, 15), float64] */;
    %284 = %282.0;
    (%283, %284)
  };
  %285() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */
}

def @func_8044() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_8042() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_10405(%var_10396: Tensor[(11, 15, 5), uint16], %var_10397: Tensor[(11, 15, 5), uint16]) -> (Tensor[(11, 15, 5), uint16],) {
  %286 = cast(%var_10397, dtype="uint16") /* ty=Tensor[(11, 15, 5), uint16] */;
  %287 = shape_of(%var_10396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%var_10396, dtype="uint16") /* ty=Tensor[(11, 15, 5), uint16] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %290 = bitwise_and(%288, %289) /* ty=Tensor[(11, 15, 5), uint16] */;
  (%290,)
}

def @func_5044() -> Tensor[(5, 15, 15), float32] {
  %291 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %291.1
}

def @func_14055() -> (Tensor[(5, 15, 15), float64],) {
  @func_14053() /* ty=(Tensor[(5, 15, 15), float64],) */
}

def @func_6794() -> Tensor[(5, 15, 15), float32] {
  %292 = fn () -> Tensor[(5, 15, 15), float32] {
    @func_5982() /* ty=Tensor[(5, 15, 15), float32] */
  };
  %292() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_14700() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) {
  @func_14698() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) */
}

def @func_8995(%var_8993: Tensor[(1188), float32], %var_8994: Tensor[(11, 13, 12), uint8]) -> (Tensor[(5, 15, 15), float32], Tensor[(3328, 1188), float32], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), bool]) {
  @func_8991(%var_8993, %var_8994) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(3328, 1188), float32], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), bool]) */
}

def @func_7239() -> Tensor[(5, 15, 15), float64] {
  @func_7237() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_12573() -> (Tensor[(5, 15, 15), int64],) {
  %293 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
  %294 = %293.2;
  (%294,)
}

def @func_13081() -> (Tensor[(5, 15, 15), float32], Tensor[(15, 75), uint8]) {
  %295 = @func_5153() /* ty=Tensor[(5, 15, 15), float32] */;
  %296 = cast(%295, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %297 = cast(%295, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %298 = reshape(%296, newshape=[15, 75]) /* ty=Tensor[(15, 75), bool] */;
  %299 = reshape(%297, newshape=[15, 75]) /* ty=Tensor[(15, 75), bool] */;
  %300 = @func_9177(%298, %299) /* ty=(Tensor[(12, 11, 14), bool], Tensor[(15, 75), float32], Tensor[(15, 75), uint8]) */;
  %301 = %300.2;
  (%295, %301)
}

def @func_4959() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  %315 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
    %302 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %303 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
    %304 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %305 = %304.1;
    %306 = cast(%305, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
    %307 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
    %308 = cast(%303, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
    %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %310 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %311 = %302.1;
    %312 = @func_1658() /* ty=Tensor[(5, 15, 15), float64] */;
    %313 = floor_divide(%308, %309) /* ty=Tensor[(5, 15, 15), float64] */;
    %314 = %310.0;
    (%311, %312, %313, %314)
  };
  %315() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */
}

def @func_12687() -> (Tensor[(5, 15, 15), float32],) {
  @func_12685() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_10664() -> Tensor[(11, 13, 12), uint8] {
  %316 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %316.1
}

def @func_9667() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  @func_9665() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_15292() -> Tensor[(5, 15, 15), float32] {
  %317 = fn () -> Tensor[(5, 15, 15), float32] {
    @func_9745() /* ty=Tensor[(5, 15, 15), float32] */
  };
  %317() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_8756() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) {
  @func_8754() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) */
}

def @func_1036() -> Tensor[(5, 15, 15), float64] {
  @func_1034() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_13695() -> (Tensor[(5, 15, 15), float32],) {
  %320 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %318 = @func_6360() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %319 = %318.0;
    (%319,)
  };
  %320() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_17176() -> (Tensor[(512), int8], Tensor[(5, 15, 15), float64]) {
  @func_17174() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float64]) */
}

def @func_1034() -> Tensor[(5, 15, 15), float64] {
  %321 = @func_684() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %322 = %321.0;
  %323 = cast(%322, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  sin(%323) /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_9902() -> (Tensor[(5, 15, 15), float32],) {
  %326 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %324 = @func_6682() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32]) */;
    %325 = %324.0;
    (%325,)
  };
  %326() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_505(%var_497: Tensor[(16, 8, 4), int8], %var_498: Tensor[(16, 8, 4), int8]) -> Tensor[(16, 8, 4), bool] {
  %327 = cast(%var_498, dtype="bool") /* ty=Tensor[(16, 8, 4), bool] */;
  %328 = shape_of(%var_497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%var_497, dtype="bool") /* ty=Tensor[(16, 8, 4), bool] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%329, %330) /* ty=Tensor[(16, 8, 4), bool] */
}

def @func_17097() -> Tensor[(512), float32] {
  %334 = fn () -> Tensor[(512), float32] {
    %331 = @func_3107() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), float32]) */;
    %332 = %331.1;
    %333 = cast(%332, dtype="float32") /* ty=Tensor[(512), float32] */;
    tan(%333) /* ty=Tensor[(512), float32] */
  };
  %334() /* ty=Tensor[(512), float32] */
}

def @func_656() -> Tensor[(5, 15, 15), float32] {
  %335 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %335.0
}

def @func_14053() -> (Tensor[(5, 15, 15), float64],) {
  %336 = @func_5315() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %337 = %336.0;
  (%337,)
}

def @func_4126() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %344 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %338 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %339 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %340 = @func_267() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %341 = %338.0;
    %342 = %339.1;
    %343 = %340.0;
    (%341, %342, %343)
  };
  %344() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_2653() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %345 = @func_1532() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */;
  %346 = @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %347 = %345.0;
  %348 = @func_1001() /* ty=Tensor[(5, 15, 15), float32] */;
  %349 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  %350 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
  %351 = %346.0;
  (%347, %348, %349, %350, %351)
}

def @func_13750() -> (Tensor[(5, 15, 15), int64],) {
  %353 = fn () -> (Tensor[(5, 15, 15), int64],) {
    %352 = @func_6257() /* ty=Tensor[(5, 15, 15), int64] */;
    (%352,)
  };
  %353() /* ty=(Tensor[(5, 15, 15), int64],) */
}

def @func_17691(%var_17690: Tensor[(12), float64]) -> (Tensor[(5, 15, 15), float32], Tensor[(4, 11, 11), uint64], Tensor[(484), int16], Tensor[(12), float64], Tensor[(512), int8]) {
  %364 = fn (%var_17684: Tensor[(12), float64]) -> (Tensor[(5, 15, 15), float32], Tensor[(4, 11, 11), uint64], Tensor[(484), int16], Tensor[(12), float64], Tensor[(512), int8]) {
    %354 = @func_12685() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %355 = cast(meta[relay.Constant][14] /* ty=Tensor[(484), int16] */, dtype="int16") /* ty=Tensor[(484), int16] */;
    %356 = cast(%var_17684, dtype="float64") /* ty=Tensor[(12), float64] */;
    %357 = reshape(%355, newshape=[4, 11, 11]) /* ty=Tensor[(4, 11, 11), int16] */;
    %358 = reshape(%356, newshape=[12]) /* ty=Tensor[(12), float64] */;
    %359 = @func_10587(%357, %358) /* ty=(Tensor[(4, 11, 11), uint64], Tensor[(4, 10, 3), float64], Tensor[(12), float64]) */;
    %360 = @func_17174() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float64]) */;
    %361 = %354.0;
    %362 = %359.0;
    %363 = %360.0;
    (%361, %362, meta[relay.Constant][14] /* ty=Tensor[(484), int16] */, %var_17684, %363)
  };
  %364(%var_17690) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(4, 11, 11), uint64], Tensor[(484), int16], Tensor[(12), float64], Tensor[(512), int8]) */
}

def @func_2737() -> (Tensor[(5, 15, 15), float32],) {
  @func_2735() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_10375() -> (Tensor[(5, 15, 15), float32], Tensor[(15, 75), float32], Tensor[(5, 15, 15), float32], Tensor[(28), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_10373() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(15, 75), float32], Tensor[(5, 15, 15), float32], Tensor[(28), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_3417(%var_3416: Tensor[(13, 16, 16), float64]) -> Tensor[(13, 16, 16), int8] {
  %371 = fn (%var_3384: Tensor[(13, 16, 16), float64]) -> Tensor[(13, 16, 16), int8] {
    %365 = cast(%var_3384, dtype="float64") /* ty=Tensor[(13, 16, 16), float64] */;
    %366 = log2(%365) /* ty=Tensor[(13, 16, 16), float64] */;
    %367 = cast(%var_3384, dtype="int8") /* ty=Tensor[(13, 16, 16), int8] */;
    %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
    %369 = cast(%366, dtype="int8") /* ty=Tensor[(13, 16, 16), int8] */;
    %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    logical_xor(%369, %370) /* ty=Tensor[(13, 16, 16), int8] */
  };
  %371(%var_3416) /* ty=Tensor[(13, 16, 16), int8] */
}

def @func_8991(%var_8957: Tensor[(1188), float32], %var_8985: Tensor[(11, 13, 12), uint8]) -> (Tensor[(5, 15, 15), float32], Tensor[(3328, 1188), float32], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), bool]) {
  %372 = @func_5122() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) */;
  %373 = cast(%var_8957, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %374 = reshape(%373, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), float32] */;
  %375 = @func_8468(%374) /* ty=(Tensor[(9, 12, 11), float32], Tensor[(13, 16, 16), int8], Tensor[(3328, 1), float64]) */;
  %376 = %375.2;
  %377 = cast(%376, dtype="uint32") /* ty=Tensor[(3328, 1), uint32] */;
  %378 = cast(%var_8957, dtype="uint32") /* ty=Tensor[(1188), uint32] */;
  %379 = multiply(%377, %378) /* ty=Tensor[(3328, 1188), uint32] */;
  %380 = cast(%379, dtype="float32") /* ty=Tensor[(3328, 1188), float32] */;
  %381 = @func_3344() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %382 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %383 = %382.0;
  %384 = cast(%var_8985, dtype="bool") /* ty=Tensor[(11, 13, 12), bool] */;
  %385 = shape_of(%383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(%383, dtype="bool") /* ty=Tensor[(11, 13, 12), bool] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %388 = %372.2;
  %389 = log(%380) /* ty=Tensor[(3328, 1188), float32] */;
  %390 = %381.0;
  %391 = less(%386, %387) /* ty=Tensor[(11, 13, 12), bool] */;
  (%388, %389, %390, %391)
}

def @func_2720() -> (Tensor[(5, 15, 15), float64],) {
  @func_2718() /* ty=(Tensor[(5, 15, 15), float64],) */
}

def @func_13041() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), float32], Tensor[(5, 15, 15), float64]) {
  %392 = @func_2756() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %393 = %392.1;
  %394 = @func_9872() /* ty=Tensor[(11, 13, 12), float32] */;
  %395 = @func_4991() /* ty=Tensor[(5, 15, 15), float64] */;
  (%393, %394, %395)
}

def @func_16312(%var_16278: Tensor[(12), float64]) -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), bool], Tensor[(4, 11, 11), uint64], Tensor[(12), float64], Tensor[(484), float32], Tensor[(5, 15, 15), bool], Tensor[(484), float32]) {
  %396 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %397 = cast(meta[relay.Constant][15] /* ty=Tensor[(484), int16] */, dtype="int16") /* ty=Tensor[(484), int16] */;
  %398 = cast(%var_16278, dtype="float64") /* ty=Tensor[(12), float64] */;
  %399 = reshape(%397, newshape=[4, 11, 11]) /* ty=Tensor[(4, 11, 11), int16] */;
  %400 = reshape(%398, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %401 = @func_10587(%399, %400) /* ty=(Tensor[(4, 11, 11), uint64], Tensor[(4, 10, 3), float64], Tensor[(12), float64]) */;
  %402 = cast(meta[relay.Constant][15] /* ty=Tensor[(484), int16] */, dtype="float32") /* ty=Tensor[(484), float32] */;
  %403 = @func_15244() /* ty=(Tensor[(5, 15, 15), bool],) */;
  %404 = cast(meta[relay.Constant][15] /* ty=Tensor[(484), int16] */, dtype="float32") /* ty=Tensor[(484), float32] */;
  %405 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  %406 = %396.6;
  %407 = %401.0;
  %408 = sinh(%402) /* ty=Tensor[(484), float32] */;
  %409 = %403.0;
  %410 = sigmoid(%404) /* ty=Tensor[(484), float32] */;
  (%405, %406, %407, %var_16278, %408, %409, %410)
}

def @func_7406(%var_7346: Tensor[(12, 15, 16), float32]) -> (Tensor[(12, 15, 16), bool], Tensor[(12, 15, 16), int64]) {
  %411 = cast(%var_7346, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
  %412 = cosh(%411) /* ty=Tensor[(12, 15, 16), float32] */;
  %413 = cast(%412, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
  %414 = sigmoid(%413) /* ty=Tensor[(12, 15, 16), float64] */;
  %415 = cast(%var_7346, dtype="bool") /* ty=Tensor[(12, 15, 16), bool] */;
  %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%414, dtype="bool") /* ty=Tensor[(12, 15, 16), bool] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %419 = cast(%414, dtype="int64") /* ty=Tensor[(12, 15, 16), int64] */;
  %420 = shape_of(%412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%412, dtype="int64") /* ty=Tensor[(12, 15, 16), int64] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %423 = greater(%417, %418) /* ty=Tensor[(12, 15, 16), bool] */;
  %424 = bitwise_or(%421, %422) /* ty=Tensor[(12, 15, 16), int64] */;
  (%423, %424)
}

def @func_6113() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8]) {
  @func_6111() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8]) */
}

def @func_333() -> Tensor[(5, 15, 15), float32] {
  %425 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %425.0
}

def @func_5315() -> (Tensor[(5, 15, 15), float64],) {
  %426 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  (%426,)
}

def @func_5317() -> (Tensor[(5, 15, 15), float64],) {
  @func_5315() /* ty=(Tensor[(5, 15, 15), float64],) */
}

def @func_9665() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %427 = @func_1176() /* ty=Tensor[(5, 15, 15), float32] */;
  %428 = @func_7237() /* ty=Tensor[(5, 15, 15), float64] */;
  (%427, %428)
}

def @func_1406() -> (Tensor[(5, 15, 15), float32],) {
  %429 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
  (%429,)
}

def @func_1781(%var_1780: Tensor[(5, 15, 15), float32]) -> (Tensor[(5, 15, 15), uint64], Tensor[(5, 15, 15), float32]) {
  %437 = fn (%var_1756: Tensor[(5, 15, 15), float32]) -> (Tensor[(5, 15, 15), uint64], Tensor[(5, 15, 15), float32]) {
    %430 = @func_656() /* ty=Tensor[(5, 15, 15), float32] */;
    %431 = cast(%var_1756, dtype="uint64") /* ty=Tensor[(5, 15, 15), uint64] */;
    %432 = shape_of(%430, dtype="int32") /* ty=Tensor[(3), int32] */;
    %433 = cast(%430, dtype="uint64") /* ty=Tensor[(5, 15, 15), uint64] */;
    %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %435 = maximum(%433, %434) /* ty=Tensor[(5, 15, 15), uint64] */;
    %436 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
    (%435, %436)
  };
  %437(%var_1780) /* ty=(Tensor[(5, 15, 15), uint64], Tensor[(5, 15, 15), float32]) */
}

def @func_637(%var_632: Tensor[(5, 15, 15), float32]) -> Tensor[(5, 15, 15), bool] {
  %438 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %439 = %438.0;
  %440 = cast(%var_632, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %441 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%439, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%442, %443) /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_2894() -> (Tensor[(512), int8],) {
  @func_2892() /* ty=(Tensor[(512), int8],) */
}

def @func_17779() -> Tensor[(5, 15, 15), float32] {
  @func_17777() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_6360() -> (Tensor[(5, 15, 15), float32],) {
  %444 = @func_1176() /* ty=Tensor[(5, 15, 15), float32] */;
  (%444,)
}

def @func_4343() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %445 = @func_656() /* ty=Tensor[(5, 15, 15), float32] */;
  %446 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  (%445, %446)
}

def @func_6729() -> (Tensor[(5, 15, 15), float32],) {
  @func_6727() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_8379() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64]) {
  %450 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64]) {
    %447 = @func_3790() /* ty=Tensor[(5, 15, 15), float32] */;
    %448 = @func_3562() /* ty=Tensor[(5, 15, 15), float32] */;
    %449 = @func_6257() /* ty=Tensor[(5, 15, 15), int64] */;
    (%447, %448, %449)
  };
  %450() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64]) */
}

def @func_4583() -> Tensor[(5, 15, 15), float32] {
  %452 = fn () -> Tensor[(5, 15, 15), float32] {
    %451 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %451.0
  };
  %452() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_3562() -> Tensor[(5, 15, 15), float32] {
  @func_1001() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_6004() -> Tensor[(5, 15, 15), float32] {
  @func_6002() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_3830(%var_3816: Tensor[(5, 15, 15), float32]) -> (Tensor[(5, 15, 15), uint16],) {
  %453 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %454 = %453.3;
  %455 = cast(%var_3816, dtype="uint16") /* ty=Tensor[(5, 15, 15), uint16] */;
  %456 = shape_of(%454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%454, dtype="uint16") /* ty=Tensor[(5, 15, 15), uint16] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %459 = multiply(%457, %458) /* ty=Tensor[(5, 15, 15), uint16] */;
  (%459,)
}

def @func_3029() -> (Tensor[(5, 15, 15), float32],) {
  @func_3027() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_14477() -> (Tensor[(5, 15, 15), float64],) {
  @func_14475() /* ty=(Tensor[(5, 15, 15), float64],) */
}

def @func_11108() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(128, 4), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %470 = fn () -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(128, 4), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %460 = cast(meta[relay.Constant][16] /* ty=Tensor[(128, 4), int8] */, dtype="int8") /* ty=Tensor[(128, 4), int8] */;
    %461 = reshape(%460, newshape=[512]) /* ty=Tensor[(512), int8] */;
    %462 = @func_7492(%461) /* ty=(Tensor[(5, 15, 15), float64], Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), float32], Tensor[(5, 15, 15), float32]) */;
    %463 = @func_9239() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %464 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %465 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
    %466 = @func_5982() /* ty=Tensor[(5, 15, 15), float32] */;
    %467 = %462.2;
    %468 = %463.0;
    %469 = %464.0;
    (%465, %466, %467, meta[relay.Constant][16] /* ty=Tensor[(128, 4), int8] */, %468, %469)
  };
  %470() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(128, 4), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_10373() -> (Tensor[(5, 15, 15), float32], Tensor[(15, 75), float32], Tensor[(5, 15, 15), float32], Tensor[(28), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %471 = @func_3790() /* ty=Tensor[(5, 15, 15), float32] */;
  %472 = cast(%471, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %473 = cast(%471, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %474 = reshape(%472, newshape=[15, 75]) /* ty=Tensor[(15, 75), bool] */;
  %475 = reshape(%473, newshape=[15, 75]) /* ty=Tensor[(15, 75), bool] */;
  %476 = @func_9177(%474, %475) /* ty=(Tensor[(12, 11, 14), bool], Tensor[(15, 75), float32], Tensor[(15, 75), uint8]) */;
  %477 = cast(meta[relay.Constant][17] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %478 = reshape(%477, newshape=[1, 28]) /* ty=Tensor[(1, 28), float64] */;
  %479 = @func_8901(%478) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(1, 28), float64], Tensor[(5, 15, 15), float32]) */;
  %480 = cast(meta[relay.Constant][18] /* ty=Tensor[(28), float64] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %481 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(28), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %482 = cast(meta[relay.Constant][17] /* ty=Tensor[(28), float64] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?), bool] */;
  %484 = @func_8042() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %485 = %476.1;
  %486 = %479.0;
  %487 = not_equal(%482, %483) /* ty=Tensor[(28), bool] */;
  %488 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
  %489 = %484.1;
  (%471, %485, %486, %487, %488, %489)
}

def @func_2193() -> (Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) {
  @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */
}

def @func_978(%var_977: Tensor[(512), int8]) -> (Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) {
  %497 = fn (%var_966: Tensor[(512), int8]) -> (Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) {
    %490 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %491 = cast(%var_966, dtype="int8") /* ty=Tensor[(512), int8] */;
    %492 = cast(%var_966, dtype="int8") /* ty=Tensor[(512), int8] */;
    %493 = reshape(%491, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
    %494 = reshape(%492, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
    %495 = %490.1;
    %496 = @func_505(%493, %494) /* ty=Tensor[(16, 8, 4), bool] */;
    (%495, %496, %var_966)
  };
  %497(%var_977) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */
}

def @func_7409(%var_7407: Tensor[(12, 15, 16), float32]) -> (Tensor[(12, 15, 16), bool], Tensor[(12, 15, 16), int64]) {
  @func_7406(%var_7407) /* ty=(Tensor[(12, 15, 16), bool], Tensor[(12, 15, 16), int64]) */
}

def @func_12792() -> Tensor[(5, 15, 15), float32] {
  @func_12790() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_11421() -> Tensor[(5, 15, 15), float64] {
  @func_11419() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_14012() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_14010() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_15147() -> Tensor[(5, 15, 15), float64] {
  @func_15145() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_16137() -> Tensor[(11, 13, 12), uint8] {
  %499 = fn () -> Tensor[(11, 13, 12), uint8] {
    %498 = @func_11804() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32]) */;
    %498.0
  };
  %499() /* ty=Tensor[(11, 13, 12), uint8] */
}

def @func_919() -> Tensor[(5, 15, 15), float32] {
  @func_917() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_9345(%var_9344: Tensor[(4, 1, 3), float64]) -> (Tensor[(4, 10, 3), bool], Tensor[(5, 15, 15), float64], Tensor[(4, 10, 3), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %511 = fn (%var_9273: Tensor[(4, 1, 3), float64]) -> (Tensor[(4, 10, 3), bool], Tensor[(5, 15, 15), float64], Tensor[(4, 10, 3), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
    %500 = cast(%var_9273, dtype="bool") /* ty=Tensor[(4, 1, 3), bool] */;
    %501 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 10, 3), float64] */, dtype="bool") /* ty=Tensor[(4, 10, 3), bool] */;
    %502 = @func_4958() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
    %503 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(4, 10, 3), float64] */;
    %504 = @func_2653() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %505 = equal(%500, %501) /* ty=Tensor[(4, 10, 3), bool] */;
    %506 = %502.2;
    %507 = cos(%503) /* ty=Tensor[(4, 10, 3), float64] */;
    %508 = @func_6793() /* ty=Tensor[(5, 15, 15), float32] */;
    %509 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
    %510 = %504.2;
    (%505, %506, %507, %508, %509, %510)
  };
  %511(%var_9344) /* ty=(Tensor[(4, 10, 3), bool], Tensor[(5, 15, 15), float64], Tensor[(4, 10, 3), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_13872(%var_13870: Tensor[(13, 9, 14), bool], %var_13871: Tensor[(13, 9, 14), bool]) -> (Tensor[(13, 9, 14), int64], Tensor[(5, 15, 15), float32], Tensor[(11, 15, 3), int16], Tensor[(11, 13, 12), uint8]) {
  %533 = fn (%var_13814: Tensor[(13, 9, 14), bool], %var_13822: Tensor[(13, 9, 14), bool]) -> (Tensor[(13, 9, 14), int64], Tensor[(5, 15, 15), float32], Tensor[(11, 15, 3), int16], Tensor[(11, 13, 12), uint8]) {
    %512 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 9, 14), bool] */, dtype="bool") /* ty=Tensor[(13, 9, 14), bool] */;
    %513 = shape_of(%var_13814, dtype="int32") /* ty=Tensor[(3), int32] */;
    %514 = cast(%var_13814, dtype="bool") /* ty=Tensor[(13, 9, 14), bool] */;
    %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %516 = logical_or(%514, %515) /* ty=Tensor[(13, 9, 14), bool] */;
    %517 = cast(%var_13822, dtype="int64") /* ty=Tensor[(13, 9, 14), int64] */;
    %518 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
    %519 = cast(%516, dtype="int64") /* ty=Tensor[(13, 9, 14), int64] */;
    %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %521 = @func_10970() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %522 = @func_13497() /* ty=(Tensor[(11, 15, 3), float32],) */;
    %523 = %522.0;
    %524 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 15, 3), float32] */, dtype="int16") /* ty=Tensor[(11, 15, 3), int16] */;
    %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(3), int32] */;
    %526 = cast(%523, dtype="int16") /* ty=Tensor[(11, 15, 3), int16] */;
    %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %528 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
    %529 = multiply(%519, %520) /* ty=Tensor[(13, 9, 14), int64] */;
    %530 = %521.0;
    %531 = bitwise_or(%526, %527) /* ty=Tensor[(11, 15, 3), int16] */;
    %532 = %528.0;
    (%529, %530, %531, %532)
  };
  %533(%var_13870, %var_13871) /* ty=(Tensor[(13, 9, 14), int64], Tensor[(5, 15, 15), float32], Tensor[(11, 15, 3), int16], Tensor[(11, 13, 12), uint8]) */
}

def @func_8571() -> Tensor[(5, 15, 15), float32] {
  %535 = fn () -> Tensor[(5, 15, 15), float32] {
    %534 = @func_4407() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %534.0
  };
  %535() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_7007() -> (Tensor[(5, 15, 15), float32],) {
  %536 = @func_3027() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %537 = %536.0;
  (%537,)
}

def @func_4297() -> Tensor[(5, 15, 15), float32] {
  %539 = fn () -> Tensor[(5, 15, 15), float32] {
    %538 = @func_2545() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %538.0
  };
  %539() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_9872() -> Tensor[(11, 13, 12), float32] {
  %540 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %541 = %540.1;
  %542 = cast(%541, dtype="float32") /* ty=Tensor[(11, 13, 12), float32] */;
  cos(%542) /* ty=Tensor[(11, 13, 12), float32] */
}

def @func_658() -> Tensor[(5, 15, 15), float32] {
  @func_656() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_1078() -> Tensor[(5, 15, 15), float64] {
  @func_1076() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_4907() -> (Tensor[(5, 15, 15), int64],) {
  @func_4905() /* ty=(Tensor[(5, 15, 15), int64],) */
}

def @func_5193() -> (Tensor[(5, 15, 15), float64],) {
  @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */
}

def @func_3790() -> Tensor[(5, 15, 15), float32] {
  @func_2689() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_15093(%var_15091: Tensor[(3, 6, 13), float32], %var_15092: Tensor[(3, 6, 13), float32]) -> (Tensor[(3, 6, 13), uint32],) {
  %550 = fn (%var_15072: Tensor[(3, 6, 13), float32], %var_15086: Tensor[(3, 6, 13), float32]) -> (Tensor[(3, 6, 13), uint32],) {
    %543 = cast(%var_15072, dtype="float32") /* ty=Tensor[(3, 6, 13), float32] */;
    %544 = exp(%543) /* ty=Tensor[(3, 6, 13), float32] */;
    %545 = cast(%var_15086, dtype="uint32") /* ty=Tensor[(3, 6, 13), uint32] */;
    %546 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
    %547 = cast(%544, dtype="uint32") /* ty=Tensor[(3, 6, 13), uint32] */;
    %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %549 = left_shift(%547, %548) /* ty=Tensor[(3, 6, 13), uint32] */;
    (%549,)
  };
  %550(%var_15091, %var_15092) /* ty=(Tensor[(3, 6, 13), uint32],) */
}

def @func_5694() -> (Tensor[(5, 15, 15), float32],) {
  @func_5692() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_11723(%var_11721: Tensor[(3, 16, 1), float32]) -> Tensor[(3, 16, 1), float32] {
  @func_11720(%var_11721) /* ty=Tensor[(3, 16, 1), float32] */
}

def @func_4168() -> Tensor[(5, 15, 15), float64] {
  %554 = fn () -> Tensor[(5, 15, 15), float64] {
    %551 = @func_3677() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %552 = %551.0;
    %553 = cast(%552, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
    rsqrt(%553) /* ty=Tensor[(5, 15, 15), float64] */
  };
  %554() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_9239() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %555 = @func_5122() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) */;
  %556 = @func_8122() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %557 = %555.2;
  %558 = %556.1;
  (%557, %558)
}

def @func_13043() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), float32], Tensor[(5, 15, 15), float64]) {
  @func_13041() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_8042() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %559 = @func_3971() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %560 = @func_6360() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %561 = @func_2504() /* ty=Tensor[(5, 15, 15), float32] */;
  %562 = %559.0;
  %563 = %560.0;
  (%561, %562, %563)
}

def @func_13340() -> (Tensor[(5, 15, 15), float64],) {
  @func_13338() /* ty=(Tensor[(5, 15, 15), float64],) */
}

def @func_3973() -> (Tensor[(5, 15, 15), float32],) {
  @func_3971() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_6987() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(28, ?), bool], Tensor[(28, 1), float32]) {
  @func_6985() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(28, ?), bool], Tensor[(28, 1), float32]) */
}

def @func_14605() -> (Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) {
  @func_14603() /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */
}

def @func_14906() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_14904() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_3678() -> (Tensor[(5, 15, 15), float32],) {
  %566 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %564 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
    %565 = %564.0;
    (%565,)
  };
  %566() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_13201(%var_13200: Tensor[(11, 15, 3), float32]) -> (Tensor[(11, 15, 3), bool], Tensor[(5, 15, 15), bool]) {
  %576 = fn (%var_13178: Tensor[(11, 15, 3), float32]) -> (Tensor[(11, 15, 3), bool], Tensor[(5, 15, 15), bool]) {
    %567 = @func_10020() /* ty=(Tensor[(11, 15, 3), float32],) */;
    %568 = %567.0;
    %569 = cast(%var_13178, dtype="bool") /* ty=Tensor[(11, 15, 3), bool] */;
    %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
    %571 = cast(%568, dtype="bool") /* ty=Tensor[(11, 15, 3), bool] */;
    %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %573 = @func_9115() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
    %574 = less_equal(%571, %572) /* ty=Tensor[(11, 15, 3), bool] */;
    %575 = %573.2;
    (%574, %575)
  };
  %576(%var_13200) /* ty=(Tensor[(11, 15, 3), bool], Tensor[(5, 15, 15), bool]) */
}

def @func_1408() -> (Tensor[(5, 15, 15), float32],) {
  @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_8754() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) {
  %577 = @func_2545() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %578 = @func_6257() /* ty=Tensor[(5, 15, 15), int64] */;
  %579 = %577.1;
  (%578, %579)
}

def @func_2163() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  @func_2161() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */
}

def @func_2051() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %580 = @func_267() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %581 = @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %582 = %580.0;
  %583 = %581.0;
  (%582, %583)
}

def @func_13321() -> Tensor[(5, 15, 15), float64] {
  @func_1658() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_6727() -> (Tensor[(5, 15, 15), float32],) {
  %584 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
  (%584,)
}

def @func_5778() -> Tensor[(5, 15, 15), float32] {
  @func_3790() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_1003() -> Tensor[(5, 15, 15), float32] {
  @func_1001() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_14393() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %590 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %585 = @func_5255() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
    %586 = @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %587 = @func_13437() /* ty=Tensor[(5, 15, 15), float32] */;
    %588 = %585.1;
    %589 = %586.0;
    (%587, %588, %589)
  };
  %590() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_12721() -> (Tensor[(14, ?, 2), bool],) {
  %591 = @func_12302() /* ty=Tensor[(14, ?, 2), bool] */;
  (%591,)
}

def @func_14271(%var_14269: Tensor[(512), int8]) -> (Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) {
  @func_14268(%var_14269) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */
}

def @func_4991() -> Tensor[(5, 15, 15), float64] {
  %592 = @func_4958() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %592.1
}

def @func_9449() -> Tensor[(512), int8] {
  @func_9447() /* ty=Tensor[(512), int8] */
}

def @func_12200() -> Tensor[(5, 15, 15), int64] {
  %593 = fn () -> Tensor[(5, 15, 15), int64] {
    @func_6257() /* ty=Tensor[(5, 15, 15), int64] */
  };
  %593() /* ty=Tensor[(5, 15, 15), int64] */
}

def @func_5018() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %598 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %594 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %595 = @func_3266() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %596 = %594.1;
    %597 = %595.0;
    (%596, %597)
  };
  %598() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_11464() -> Tensor[(5, 15, 15), float32] {
  @func_5153() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_15942() -> (Tensor[(11, 13, 12), uint8],) {
  %601 = fn () -> (Tensor[(11, 13, 12), uint8],) {
    %599 = @func_15739() /* ty=(Tensor[(11, 13, 12), uint8],) */;
    %600 = %599.0;
    (%600,)
  };
  %601() /* ty=(Tensor[(11, 13, 12), uint8],) */
}

def @func_9988() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  @func_9986() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_15535() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), float64]) {
  %617 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), float64]) {
    %602 = @func_4007() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %603 = %602.0;
    %604 = cast(%603, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
    %605 = reshape(%604, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
    %606 = @func_1779(%605) /* ty=(Tensor[(5, 15, 15), uint64], Tensor[(5, 15, 15), float32]) */;
    %607 = @func_12721() /* ty=(Tensor[(14, ?, 2), bool],) */;
    %608 = %607.0;
    %609 = cast(%608, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
    %610 = atan(%609) /* ty=Tensor[(14, ?, 2), float64] */;
    %611 = cast(%608, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
    %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(3), int32] */;
    %613 = cast(%610, dtype="float64") /* ty=Tensor[(14, ?, 2), float64] */;
    %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %615 = %606.1;
    %616 = floor_mod(%613, %614) /* ty=Tensor[(14, ?, 2), float64] */;
    (%603, %615, %616)
  };
  %617() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), float64]) */
}

def @func_3971() -> (Tensor[(5, 15, 15), float32],) {
  %618 = @func_3107() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), float32]) */;
  %619 = %618.2;
  (%619,)
}

def @func_11000() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_10998() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_10110() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %622 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %620 = @func_1001() /* ty=Tensor[(5, 15, 15), float32] */;
    %621 = @func_3562() /* ty=Tensor[(5, 15, 15), float32] */;
    (%620, %621)
  };
  %622() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_13083() -> (Tensor[(5, 15, 15), float32], Tensor[(15, 75), uint8]) {
  @func_13081() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(15, 75), uint8]) */
}

def @func_14954() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %623 = @func_10998() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %624 = @func_5255() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %625 = %623.1;
  %626 = %624.1;
  (%625, %626)
}

def @func_7852() -> (Tensor[(5, 15, 15), float64],) {
  @func_7850() /* ty=(Tensor[(5, 15, 15), float64],) */
}

def @func_11899() -> (Tensor[(5, 15, 15), float32],) {
  %628 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %627 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
    (%627,)
  };
  %628() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_6985() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(28, ?), bool], Tensor[(28, 1), float32]) {
  %629 = @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %630 = @func_3107() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), float32]) */;
  %631 = cast(meta[relay.Constant][22] /* ty=Tensor[(28, 1), float64] */, dtype="float64") /* ty=Tensor[(28, 1), float64] */;
  %632 = reshape(%631, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %633 = @func_5675(%632) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %634 = %633.2;
  %635 = cast(%634, dtype="bool") /* ty=Tensor[(28), bool] */;
  %636 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(28, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %637 = cast(meta[relay.Constant][22] /* ty=Tensor[(28, 1), float64] */, dtype="bool") /* ty=Tensor[(28, 1), bool] */;
  %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %639 = cast(meta[relay.Constant][22] /* ty=Tensor[(28, 1), float64] */, dtype="float32") /* ty=Tensor[(28, 1), float32] */;
  %640 = %629.0;
  %641 = %630.2;
  %642 = less_equal(%637, %638) /* ty=Tensor[(28, ?), bool] */;
  %643 = asin(%639) /* ty=Tensor[(28, 1), float32] */;
  (%640, %641, %642, %643)
}

def @func_10492() -> (Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) {
  @func_10490() /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */
}

def @func_11775() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_11773() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_16723() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) {
  %650 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) {
    %644 = @func_14644() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %645 = @func_12919() /* ty=(Tensor[(5, 15, 15), bool],) */;
    %646 = @func_3677() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %647 = %644.0;
    %648 = %645.0;
    %649 = %646.0;
    (%647, %648, %649)
  };
  %650() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) */
}

def @func_6111() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8]) {
  %651 = @func_6054() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %652 = @func_4905() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %653 = %652.0;
  %654 = cast(%653, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %655 = @func_5585() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %656 = @func_2051() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %657 = %651.2;
  %658 = log10(%654) /* ty=Tensor[(5, 15, 15), float64] */;
  %659 = %655.0;
  %660 = %656.1;
  %661 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
  (%657, %658, %659, %660, %661)
}

def @func_3230() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  @func_3228() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_8122() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %662 = @func_1856() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %663 = @func_2756() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %664 = %662.0;
  %665 = %663.1;
  (%664, %665)
}

def @func_7009() -> (Tensor[(5, 15, 15), float32],) {
  @func_7007() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_12500() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) {
  %670 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) {
    %666 = @func_2735() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %667 = %666.0;
    %668 = @func_12199() /* ty=Tensor[(5, 15, 15), int64] */;
    %669 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
    (%667, %668, %669)
  };
  %670() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) */
}

def @func_13338() -> (Tensor[(5, 15, 15), float64],) {
  %671 = @func_7237() /* ty=Tensor[(5, 15, 15), float64] */;
  (%671,)
}

def @func_11143() -> Tensor[(5, 15, 15), float32] {
  %673 = fn () -> Tensor[(5, 15, 15), float32] {
    %672 = @func_6727() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %672.0
  };
  %673() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_6907() -> (Tensor[(5, 15, 15), float32],) {
  %674 = @func_6633() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %675 = %674.1;
  (%675,)
}

def @func_15795() -> (Tensor[(5, 15, 15), float32],) {
  %677 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %676 = @func_5982() /* ty=Tensor[(5, 15, 15), float32] */;
    (%676,)
  };
  %677() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_15245() -> (Tensor[(5, 15, 15), bool],) {
  %680 = fn () -> (Tensor[(5, 15, 15), bool],) {
    %678 = @func_15179() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
    %679 = %678.1;
    (%679,)
  };
  %680() /* ty=(Tensor[(5, 15, 15), bool],) */
}

def @func_15621() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %685 = fn () -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
    %681 = @func_5315() /* ty=(Tensor[(5, 15, 15), float64],) */;
    %682 = %681.0;
    %683 = @func_8570() /* ty=Tensor[(5, 15, 15), float32] */;
    %684 = @func_11419() /* ty=Tensor[(5, 15, 15), float64] */;
    (%682, %683, %684)
  };
  %685() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_3833(%var_3831: Tensor[(5, 15, 15), float32]) -> (Tensor[(5, 15, 15), uint16],) {
  @func_3830(%var_3831) /* ty=(Tensor[(5, 15, 15), uint16],) */
}

def @func_12527() -> Tensor[(5, 15, 15), float64] {
  @func_12525() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_16685() -> (Tensor[(11, 15, 3), float32], Tensor[(5, 15, 15), float32]) {
  %686 = @func_13497() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %687 = @func_5255() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %688 = %686.0;
  %689 = %687.1;
  (%688, %689)
}

def @func_12276(%var_12275: Tensor[(10, 7, 3), float64]) -> (Tensor[(10, 7, 3), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %696 = fn (%var_12250: Tensor[(10, 7, 3), float64]) -> (Tensor[(10, 7, 3), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
    %690 = cast(%var_12250, dtype="float64") /* ty=Tensor[(10, 7, 3), float64] */;
    %691 = @func_10527() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %692 = @func_4958() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
    %693 = atanh(%690) /* ty=Tensor[(10, 7, 3), float64] */;
    %694 = %691.0;
    %695 = %692.2;
    (%693, %694, %695)
  };
  %696(%var_12275) /* ty=(Tensor[(10, 7, 3), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_16826() -> (Tensor[(5, 15, 15), bool], Tensor[(11, 15, 3), float32]) {
  @func_16824() /* ty=(Tensor[(5, 15, 15), bool], Tensor[(11, 15, 3), float32]) */
}

def @func_2273(%var_2271: Tensor[(5, 15, 15), bool]) -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  @func_2270(%var_2271) /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */
}

def @func_5675(%var_5642: Tensor[(28), float64]) -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %697 = @func_2653() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %698 = cast(%var_5642, dtype="float64") /* ty=Tensor[(28), float64] */;
  %699 = reshape(%698, newshape=[14, 1, 2]) /* ty=Tensor[(14, 1, 2), float64] */;
  %700 = @func_376(%699) /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */;
  %701 = %697.3;
  %702 = %700.1;
  %703 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
  %704 = @func_2947() /* ty=Tensor[(5, 15, 15), float32] */;
  (%701, %702, %var_5642, %703, %704)
}

def @func_17253() -> (Tensor[(5, 15, 15), float32],) {
  %706 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %705 = @func_2689() /* ty=Tensor[(5, 15, 15), float32] */;
    (%705,)
  };
  %706() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_1856() -> (Tensor[(5, 15, 15), float32],) {
  %707 = @func_1367() /* ty=Tensor[(5, 15, 15), float32] */;
  (%707,)
}

def @func_7850() -> (Tensor[(5, 15, 15), float64],) {
  %708 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  (%708,)
}

def @func_2735() -> (Tensor[(5, 15, 15), float32],) {
  %709 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
  (%709,)
}

def @func_11419() -> Tensor[(5, 15, 15), float64] {
  %710 = @func_7120() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */;
  %710.1
}

def @func_15318(%var_15316: Tensor[(182, 9), bool]) -> (Tensor[(5, 15, 15), float32], Tensor[(13, 9, 14), int64], Tensor[(182, 9), bool]) {
  @func_15315(%var_15316) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(13, 9, 14), int64], Tensor[(182, 9), bool]) */
}

def @func_10971() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %718 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %711 = @func_6727() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %712 = @func_8400() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %713 = @func_10109() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %714 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
    %715 = %711.0;
    %716 = %712.0;
    %717 = %713.1;
    (%714, %715, %716, %717)
  };
  %718() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_426() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %719 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %720 = %719.1;
  %721 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
  (%720, %721)
}

def @func_5887() -> (Tensor[(14, ?, 2), bool],) {
  %722 = @func_5122() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) */;
  %723 = %722.3;
  (%723,)
}

def @func_2788() -> Tensor[(5, 15, 15), int64] {
  %725 = fn () -> Tensor[(5, 15, 15), int64] {
    %724 = @func_2653() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %724.0
  };
  %725() /* ty=Tensor[(5, 15, 15), int64] */
}

def @func_13498() -> (Tensor[(11, 15, 3), float32],) {
  %728 = fn () -> (Tensor[(11, 15, 3), float32],) {
    %726 = @func_11010() /* ty=(Tensor[(11, 15, 3), float32],) */;
    %727 = %726.0;
    (%727,)
  };
  %728() /* ty=(Tensor[(11, 15, 3), float32],) */
}

def @func_629() -> (Tensor[(5, 15, 15), float32],) {
  %731 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %729 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %730 = %729.1;
    (%730,)
  };
  %731() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_15741() -> (Tensor[(11, 13, 12), uint8],) {
  @func_15739() /* ty=(Tensor[(11, 13, 12), uint8],) */
}

def @func_14514() -> (Tensor[(5, 15, 15), int64],) {
  @func_14512() /* ty=(Tensor[(5, 15, 15), int64],) */
}

def @func_8547() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  %732 = @func_7237() /* ty=Tensor[(5, 15, 15), float64] */;
  %733 = cast(%732, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %734 = reshape(%733, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float64] */;
  %735 = @func_2430(%734) /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) */;
  %736 = %735.1;
  %737 = cast(%736, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %738 = exp(%737) /* ty=Tensor[(5, 15, 15), float32] */;
  (%732, %738)
}

def @func_11031() -> Tensor[(5, 15, 15), bool] {
  @func_11029() /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_2691() -> Tensor[(5, 15, 15), float32] {
  @func_2689() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_8281() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  @func_8279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */
}

def @func_16663() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64]) {
  %739 = @func_11382() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %740 = @func_267() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %741 = @func_5963() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) */;
  %742 = %739.1;
  %743 = %740.0;
  %744 = %741.0;
  (%742, %743, %744)
}

def @main(%var_17830: float32, %var_17831: Tensor[(3, 1, 1), float32]) -> (Tensor[(3, 1, 1), float32],) {
  %745 = cast(%var_17830, dtype="float32") /* ty=float32 */;
  %746 = cast(%var_17831, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
  %747 = minimum(%745, %746) /* ty=Tensor[(3, 1, 1), float32] */;
  (%747,)
}

def @func_16192() -> (Tensor[(5, 15, 15), float64],) {
  @func_16190() /* ty=(Tensor[(5, 15, 15), float64],) */
}

def @func_2545() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %748 = @func_656() /* ty=Tensor[(5, 15, 15), float32] */;
  %749 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
  (%748, %749)
}

def @func_6362() -> (Tensor[(5, 15, 15), float32],) {
  @func_6360() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_9241() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_9239() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_4905() -> (Tensor[(5, 15, 15), int64],) {
  %750 = @func_684() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %751 = %750.0;
  (%751,)
}

def @func_583(%var_581: Tensor[(28), float64], %var_582: Tensor[(5, 15, 15), float32]) -> (Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) {
  %765 = fn (%var_538: Tensor[(28), float64], %var_557: Tensor[(5, 15, 15), float32]) -> (Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) {
    %752 = cast(%var_538, dtype="float64") /* ty=Tensor[(28), float64] */;
    %753 = reshape(%752, newshape=[14, 1, 2]) /* ty=Tensor[(14, 1, 2), float64] */;
    %754 = @func_376(%753) /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */;
    %755 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %756 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %757 = %756.0;
    %758 = cast(%var_557, dtype="uint64") /* ty=Tensor[(5, 15, 15), uint64] */;
    %759 = shape_of(%757, dtype="int32") /* ty=Tensor[(3), int32] */;
    %760 = cast(%757, dtype="uint64") /* ty=Tensor[(5, 15, 15), uint64] */;
    %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %762 = %754.1;
    %763 = %755.0;
    %764 = bitwise_xor(%760, %761) /* ty=Tensor[(5, 15, 15), uint64] */;
    (%762, %var_538, %763, %764)
  };
  %765(%var_581, %var_582) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */
}

def @func_7220() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %774 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %766 = @func_2991() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
    %767 = @func_3107() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), float32]) */;
    %768 = @func_4007() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %769 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
    %770 = %766.1;
    %771 = @func_6257() /* ty=Tensor[(5, 15, 15), int64] */;
    %772 = %767.0;
    %773 = %768.0;
    (%769, %770, %771, %772, %773)
  };
  %774() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_10240() -> (Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32], Tensor[(28, 1), float32]) {
  %784 = fn () -> (Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32], Tensor[(28, 1), float32]) {
    %775 = @func_2735() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %776 = @func_5887() /* ty=(Tensor[(14, ?, 2), bool],) */;
    %777 = @func_3228() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
    %778 = @func_9637() /* ty=(Tensor[(28, 1), float32],) */;
    %779 = @func_9447() /* ty=Tensor[(512), int8] */;
    %780 = %775.0;
    %781 = %776.0;
    %782 = %777.1;
    %783 = %778.0;
    (%779, %780, %781, %782, %783)
  };
  %784() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32], Tensor[(28, 1), float32]) */
}

def @func_16438() -> (Tensor[(5, 15, 15), float64],) {
  @func_16436() /* ty=(Tensor[(5, 15, 15), float64],) */
}

def @func_15004() -> Tensor[(5, 15, 15), float32] {
  %785 = fn () -> Tensor[(5, 15, 15), float32] {
    @func_5982() /* ty=Tensor[(5, 15, 15), float32] */
  };
  %785() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_11676() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  %786 = @func_1573() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %787 = @func_2991() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %788 = cast(meta[relay.Constant][23] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %789 = %786.0;
  %790 = cast(%789, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %791 = reshape(%788, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %792 = reshape(%790, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %793 = @func_580(%791, %792) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */;
  %794 = @func_8782() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %795 = @func_8042() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %796 = %787.0;
  %797 = %793.2;
  %798 = %794.1;
  %799 = %795.1;
  (%789, %796, %797, meta[relay.Constant][23] /* ty=Tensor[(28), float64] */, %798, %799)
}

def @func_11678() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  @func_11676() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */
}

def @func_12095() -> (Tensor[(5, 15, 15), float32],) {
  %800 = @func_2756() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %801 = %800.1;
  (%801,)
}

def @func_15389() -> (Tensor[(5, 15, 15), float32],) {
  @func_15387() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_10591(%var_10589: Tensor[(4, 11, 11), int16], %var_10590: Tensor[(12), float64]) -> (Tensor[(4, 11, 11), uint64], Tensor[(4, 10, 3), float64], Tensor[(12), float64]) {
  @func_10587(%var_10589, %var_10590) /* ty=(Tensor[(4, 11, 11), uint64], Tensor[(4, 10, 3), float64], Tensor[(12), float64]) */
}

def @func_16824() -> (Tensor[(5, 15, 15), bool], Tensor[(11, 15, 3), float32]) {
  %802 = @func_10020() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %803 = %802.0;
  %804 = cast(%803, dtype="float32") /* ty=Tensor[(11, 15, 3), float32] */;
  %805 = @func_4319() /* ty=Tensor[(5, 15, 15), bool] */;
  %806 = sinh(%804) /* ty=Tensor[(11, 15, 3), float32] */;
  (%805, %806)
}

def @func_17803() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %807 = @func_3027() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %808 = @func_5315() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %809 = %807.0;
  %810 = %808.0;
  (%809, %810)
}

def @func_11566(%var_11564: Tensor[(9, 5, 12), float64]) -> Tensor[(9, 5, 12), float64] {
  @func_11563(%var_11564) /* ty=Tensor[(9, 5, 12), float64] */
}

def @func_2757() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %814 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %811 = @func_2051() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %812 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
    %813 = %811.0;
    (%812, %813)
  };
  %814() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_4345() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  @func_4343() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_3267() -> (Tensor[(5, 15, 15), float32],) {
  %816 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %815 = @func_1367() /* ty=Tensor[(5, 15, 15), float32] */;
    (%815,)
  };
  %816() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_5963() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) {
  %817 = @func_4905() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %818 = %817.0;
  %819 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  (%818, %819)
}

def @func_11384() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_11382() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_2432(%var_2431: Tensor[(5, 15, 15), float64]) -> (Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) {
  %830 = fn (%var_2409: Tensor[(5, 15, 15), float64]) -> (Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) {
    %820 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
    %821 = %820.0;
    %822 = cast(%var_2409, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
    %823 = shape_of(%821, dtype="int32") /* ty=Tensor[(3), int32] */;
    %824 = cast(%821, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
    %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %826 = @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */;
    %827 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
    %828 = less(%824, %825) /* ty=Tensor[(5, 15, 15), bool] */;
    %829 = %826.0;
    (%827, %828, %829)
  };
  %830(%var_2431) /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) */
}

def @func_10666() -> Tensor[(11, 13, 12), uint8] {
  @func_10664() /* ty=Tensor[(11, 13, 12), uint8] */
}

def @func_9606() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), int64]) {
  @func_9604() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), int64]) */
}

def @func_940() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) {
  %831 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %832 = %831.1;
  %833 = cast(%832, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %834 = reshape(%833, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %835 = @func_684() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %836 = @func_637(%834) /* ty=Tensor[(5, 15, 15), bool] */;
  %837 = %835.0;
  (%832, %836, %837)
}

def @func_17777() -> Tensor[(5, 15, 15), float32] {
  %838 = @func_13649() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %838.0
}

def @func_14453(%var_14451: Tensor[(3, 10, 10), int64], %var_14452: Tensor[(3, 10, 10), int64]) -> (Tensor[(3, 10, 10), int64],) {
  @func_14449(%var_14451, %var_14452) /* ty=(Tensor[(3, 10, 10), int64],) */
}

def @func_13666() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) {
  %839 = @func_12199() /* ty=Tensor[(5, 15, 15), int64] */;
  %840 = @func_5153() /* ty=Tensor[(5, 15, 15), float32] */;
  (%839, %840)
}

def @func_10409(%var_10407: Tensor[(11, 15, 5), uint16], %var_10408: Tensor[(11, 15, 5), uint16]) -> (Tensor[(11, 15, 5), uint16],) {
  @func_10405(%var_10407, %var_10408) /* ty=(Tensor[(11, 15, 5), uint16],) */
}

def @func_7492(%var_7448: Tensor[(512), int8]) -> (Tensor[(5, 15, 15), float64], Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), float32], Tensor[(5, 15, 15), float32]) {
  %841 = cast(%var_7448, dtype="int8") /* ty=Tensor[(512), int8] */;
  %842 = reshape(%841, newshape=[512]) /* ty=Tensor[(512), int8] */;
  %843 = @func_976(%842) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %844 = %843.1;
  %845 = cast(%844, dtype="float32") /* ty=Tensor[(16, 8, 4), float32] */;
  %846 = @func_7237() /* ty=Tensor[(5, 15, 15), float64] */;
  %847 = @func_3562() /* ty=Tensor[(5, 15, 15), float32] */;
  %848 = cos(%845) /* ty=Tensor[(16, 8, 4), float32] */;
  %849 = @func_5778() /* ty=Tensor[(5, 15, 15), float32] */;
  (%846, %var_7448, %847, %848, %849)
}

def @func_12920() -> (Tensor[(5, 15, 15), bool],) {
  %852 = fn () -> (Tensor[(5, 15, 15), bool],) {
    %850 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
    %851 = %850.6;
    (%851,)
  };
  %852() /* ty=(Tensor[(5, 15, 15), bool],) */
}

def @func_17294() -> (Tensor[(5, 15, 15), float32],) {
  @func_17292() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_12057() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float64]) {
  @func_12055() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float64]) */
}

def @func_17134() -> (Tensor[(5, 15, 15), float32],) {
  %854 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %853 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
    (%853,)
  };
  %854() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_15562(%var_15561: Tensor[(5, 3, 12), float32]) -> (Tensor[(5, 3, 12), float32],) {
  %857 = fn (%var_15547: Tensor[(5, 3, 12), float32]) -> (Tensor[(5, 3, 12), float32],) {
    %855 = cast(%var_15547, dtype="float32") /* ty=Tensor[(5, 3, 12), float32] */;
    %856 = acos(%855) /* ty=Tensor[(5, 3, 12), float32] */;
    (%856,)
  };
  %857(%var_15561) /* ty=(Tensor[(5, 3, 12), float32],) */
}

def @func_5678(%var_5676: Tensor[(28), float64]) -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_5675(%var_5676) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_9115() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %858 = @func_1532() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */;
  %859 = @func_7582() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %860 = @func_8351() /* ty=Tensor[(5, 15, 15), float32] */;
  %861 = %858.2;
  %862 = %859.1;
  (%860, %861, %862)
}

def @func_10527() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %863 = @func_4726() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %864 = %863.3;
  %865 = @func_6793() /* ty=Tensor[(5, 15, 15), float32] */;
  (%864, %865)
}

def @func_7121() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) {
  %875 = fn () -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) {
    %866 = @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %867 = %866.0;
    %868 = cast(%867, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
    %869 = reshape(%868, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
    %870 = @func_1779(%869) /* ty=(Tensor[(5, 15, 15), uint64], Tensor[(5, 15, 15), float32]) */;
    %871 = @func_6257() /* ty=Tensor[(5, 15, 15), int64] */;
    %872 = @func_1658() /* ty=Tensor[(5, 15, 15), float64] */;
    %873 = @func_1658() /* ty=Tensor[(5, 15, 15), float64] */;
    %874 = %870.0;
    (%871, %872, %873, %867, %874)
  };
  %875() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */
}

def @func_10642() -> Tensor[(5, 15, 15), float32] {
  @func_10640() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_5899() -> Tensor[(5, 15, 15), float32] {
  %877 = fn () -> Tensor[(5, 15, 15), float32] {
    %876 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %876.1
  };
  %877() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_5424() -> Tensor[(5, 15, 15), bool] {
  %878 = @func_4958() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %879 = %878.0;
  %880 = @func_3228() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %881 = %880.2;
  %882 = cast(%881, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %883 = shape_of(%879, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(%879, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%884, %885) /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_4549() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint16]) {
  %886 = @func_3500() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %887 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %888 = %887.0;
  %889 = cast(%888, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %890 = reshape(%889, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %891 = @func_3830(%890) /* ty=(Tensor[(5, 15, 15), uint16],) */;
  %892 = %886.0;
  %893 = %891.0;
  (%892, %888, %893)
}

def @func_5154() -> Tensor[(5, 15, 15), float32] {
  %900 = fn () -> Tensor[(5, 15, 15), float32] {
    %894 = @func_3266() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %895 = %894.0;
    %896 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
    %897 = shape_of(%895, dtype="int32") /* ty=Tensor[(3), int32] */;
    %898 = cast(%895, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
    %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%898, %899) /* ty=Tensor[(5, 15, 15), float32] */
  };
  %900() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_17551() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_17549() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_9747() -> Tensor[(5, 15, 15), float32] {
  @func_9745() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_14904() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %901 = @func_2161() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %902 = @func_14698() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32]) */;
  %903 = %901.1;
  %904 = %902.1;
  (%903, %904)
}

def @func_11263() -> Tensor[(5, 15, 15), int64] {
  %905 = @func_10722() /* ty=(Tensor[(5, 15, 15), int64],) */;
  %905.0
}

def @func_12598(%var_12596: Tensor[(4, 5, 10), float32]) -> (Tensor[(4, 5, 10), float32], Tensor[(4, 5, 10), float32]) {
  @func_12595(%var_12596) /* ty=(Tensor[(4, 5, 10), float32], Tensor[(4, 5, 10), float32]) */
}

def @func_2022() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) {
  %924 = fn () -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) {
    %906 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %907 = @func_1532() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */;
    %908 = %907.6;
    %909 = cast(%908, dtype="float32") /* ty=Tensor[(12, 11, 14), float32] */;
    %910 = asinh(%909) /* ty=Tensor[(12, 11, 14), float32] */;
    %911 = cast(meta[relay.Constant][25] /* ty=Tensor[(12, 11, 14), float32] */, dtype="int32") /* ty=Tensor[(12, 11, 14), int32] */;
    %912 = shape_of(%910, dtype="int32") /* ty=Tensor[(3), int32] */;
    %913 = cast(%910, dtype="int32") /* ty=Tensor[(12, 11, 14), int32] */;
    %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %915 = @func_1532() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */;
    %916 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
    %917 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
    %918 = %906.0;
    %919 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
    %920 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
    %921 = bitwise_xor(%913, %914) /* ty=Tensor[(12, 11, 14), int32] */;
    %922 = %915.6;
    %923 = %916.1;
    (%917, %918, %919, %920, %921, %922, %923)
  };
  %924() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */
}

def @func_12685() -> (Tensor[(5, 15, 15), float32],) {
  %925 = @func_2756() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %926 = %925.0;
  (%926,)
}

def @func_9408() -> Tensor[(5, 15, 15), float32] {
  %928 = fn () -> Tensor[(5, 15, 15), float32] {
    %927 = @func_3971() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %927.0
  };
  %928() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_12525() -> Tensor[(5, 15, 15), float64] {
  %929 = @func_12055() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float64]) */;
  %929.0
}

def @func_16687() -> (Tensor[(11, 15, 3), float32], Tensor[(5, 15, 15), float32]) {
  @func_16685() /* ty=(Tensor[(11, 15, 3), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_15042() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %934 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
    %930 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %931 = @func_4582() /* ty=Tensor[(5, 15, 15), float32] */;
    %932 = %930.1;
    %933 = @func_4167() /* ty=Tensor[(5, 15, 15), float64] */;
    (%931, %932, %933)
  };
  %934() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_10723() -> (Tensor[(5, 15, 15), int64],) {
  %936 = fn () -> (Tensor[(5, 15, 15), int64],) {
    %935 = @func_2787() /* ty=Tensor[(5, 15, 15), int64] */;
    (%935,)
  };
  %936() /* ty=(Tensor[(5, 15, 15), int64],) */
}

def @func_6582() -> (Tensor[(5, 15, 15), float32],) {
  %937 = @func_5017() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %938 = %937.1;
  (%938,)
}

def @func_13439() -> Tensor[(5, 15, 15), float32] {
  @func_13437() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_6002() -> Tensor[(5, 15, 15), float32] {
  %939 = @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */;
  %939.0
}

def @func_9117() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  @func_9115() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */
}

def @func_8629() -> (Tensor[(11, 13, 12), uint8],) {
  %942 = fn () -> (Tensor[(11, 13, 12), uint8],) {
    %940 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
    %941 = %940.1;
    (%941,)
  };
  %942() /* ty=(Tensor[(11, 13, 12), uint8],) */
}

def @func_8172(%var_8170: Tensor[(2, 13, 3), uint16], %var_8171: Tensor[(2, 13, 3), uint16]) -> (Tensor[(2, 13, 3), bool],) {
  %948 = fn (%var_8163: Tensor[(2, 13, 3), uint16], %var_8164: Tensor[(2, 13, 3), uint16]) -> (Tensor[(2, 13, 3), bool],) {
    %943 = cast(%var_8164, dtype="bool") /* ty=Tensor[(2, 13, 3), bool] */;
    %944 = shape_of(%var_8163, dtype="int32") /* ty=Tensor[(3), int32] */;
    %945 = cast(%var_8163, dtype="bool") /* ty=Tensor[(2, 13, 3), bool] */;
    %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %947 = greater(%945, %946) /* ty=Tensor[(2, 13, 3), bool] */;
    (%947,)
  };
  %948(%var_8170, %var_8171) /* ty=(Tensor[(2, 13, 3), bool],) */
}

def @func_9745() -> Tensor[(5, 15, 15), float32] {
  %949 = @func_7219() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %949.0
}

def @func_12636(%var_12634: Tensor[(1125), float64]) -> (Tensor[(11, 15, 3), float32], Tensor[(5, 15, 15), float32], Tensor[(1125), float64]) {
  @func_12633(%var_12634) /* ty=(Tensor[(11, 15, 3), float32], Tensor[(5, 15, 15), float32], Tensor[(1125), float64]) */
}

def @func_17493() -> Tensor[(5, 15, 15), float32] {
  %950 = fn () -> Tensor[(5, 15, 15), float32] {
    @func_9745() /* ty=Tensor[(5, 15, 15), float32] */
  };
  %950() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_16895() -> Tensor[(5, 15, 15), float32] {
  %951 = @func_16234() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %951.2
}

def @func_268() -> (Tensor[(5, 15, 15), float32],) {
  %954 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %952 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
    %953 = sigmoid(%952) /* ty=Tensor[(5, 15, 15), float32] */;
    (%953,)
  };
  %954() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_4009() -> (Tensor[(5, 15, 15), float32],) {
  @func_4007() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_13294() -> (Tensor[(5, 15, 15), float32],) {
  @func_13292() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_7237() -> Tensor[(5, 15, 15), float64] {
  %955 = @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %955.0
}

def @func_286() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_2270(%var_2247: Tensor[(5, 15, 15), bool]) -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  %956 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
  %957 = %956.1;
  %958 = cast(%var_2247, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %959 = shape_of(%957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%957, dtype="float64") /* ty=Tensor[(5, 15, 15), float64] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %962 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
  %963 = divide(%960, %961) /* ty=Tensor[(5, 15, 15), float64] */;
  %964 = %962.0;
  (%963, %964)
}

def @func_9180(%var_9178: Tensor[(15, 75), bool], %var_9179: Tensor[(15, 75), bool]) -> (Tensor[(12, 11, 14), bool], Tensor[(15, 75), float32], Tensor[(15, 75), uint8]) {
  %985 = fn (%var_9152: Tensor[(15, 75), bool], %var_9169: Tensor[(15, 75), bool]) -> (Tensor[(12, 11, 14), bool], Tensor[(15, 75), float32], Tensor[(15, 75), uint8]) {
    %965 = @func_1532() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */;
    %966 = cast(%var_9152, dtype="float64") /* ty=Tensor[(15, 75), float64] */;
    %967 = exp(%966) /* ty=Tensor[(15, 75), float64] */;
    %968 = cast(%var_9152, dtype="bool") /* ty=Tensor[(15, 75), bool] */;
    %969 = reshape(%968, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), bool] */;
    %970 = @func_2270(%969) /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
    %971 = %970.1;
    %972 = cast(%971, dtype="int8") /* ty=Tensor[(5, 15, 15), int8] */;
    %973 = shape_of(%967, dtype="int32") /* ty=Tensor[(2), int32] */;
    %974 = cast(%967, dtype="int8") /* ty=Tensor[(15, 75), int8] */;
    %975 = dyn.reshape(%972, %973, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %976 = add(%974, %975) /* ty=Tensor[(15, 75), int8] */;
    %977 = cast(%976, dtype="float32") /* ty=Tensor[(15, 75), float32] */;
    %978 = cast(%var_9169, dtype="uint8") /* ty=Tensor[(15, 75), uint8] */;
    %979 = shape_of(%var_9152, dtype="int32") /* ty=Tensor[(2), int32] */;
    %980 = cast(%var_9152, dtype="uint8") /* ty=Tensor[(15, 75), uint8] */;
    %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %982 = %965.6;
    %983 = log(%977) /* ty=Tensor[(15, 75), float32] */;
    %984 = logical_xor(%980, %981) /* ty=Tensor[(15, 75), uint8] */;
    (%982, %983, %984)
  };
  %985(%var_9178, %var_9179) /* ty=(Tensor[(12, 11, 14), bool], Tensor[(15, 75), float32], Tensor[(15, 75), uint8]) */
}

def @func_6414() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %986 = @func_872() /* ty=Tensor[(5, 15, 15), float32] */;
  %987 = @func_3562() /* ty=Tensor[(5, 15, 15), float32] */;
  %988 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  (%986, %987, %988)
}

def @func_10335() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %993 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
    %989 = @func_4407() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %990 = @func_5315() /* ty=(Tensor[(5, 15, 15), float64],) */;
    %991 = %989.0;
    %992 = %990.0;
    (%991, %992)
  };
  %993() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_1232() -> Tensor[(5, 15, 15), float32] {
  %994 = fn () -> Tensor[(5, 15, 15), float32] {
    @func_917() /* ty=Tensor[(5, 15, 15), float32] */
  };
  %994() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_12303() -> Tensor[(14, ?, 2), bool] {
  %996 = fn () -> Tensor[(14, ?, 2), bool] {
    %995 = @func_10490() /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */;
    %995.0
  };
  %996() /* ty=Tensor[(14, ?, 2), bool] */
}

def @func_6484() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_6482() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_12109() -> Tensor[(5, 15, 15), float32] {
  @func_917() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_1367() -> Tensor[(5, 15, 15), float32] {
  @func_1231() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_6529() -> (Tensor[(5, 15, 15), float32],) {
  @func_6527() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_3346() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_3344() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_14010() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %997 = @func_8547() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %998 = @func_4007() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %999 = %997.1;
  %1000 = %998.0;
  (%999, %1000)
}

def @func_15990() -> (Tensor[(12, 11, 14), uint32], Tensor[(5, 15, 15), float32]) {
  @func_15988() /* ty=(Tensor[(12, 11, 14), uint32], Tensor[(5, 15, 15), float32]) */
}

def @func_8402() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_8400() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_5426() -> Tensor[(5, 15, 15), bool] {
  @func_5424() /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_17662() -> Tensor[(11, 15, 3), float32] {
  %1001 = @func_13497() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %1001.0
}

def @func_14793(%var_14791: Tensor[(13, 7, 16), float32]) -> Tensor[(13, 7, 16), float32] {
  @func_14790(%var_14791) /* ty=Tensor[(13, 7, 16), float32] */
}

def @func_9874() -> Tensor[(11, 13, 12), float32] {
  @func_9872() /* ty=Tensor[(11, 13, 12), float32] */
}

def @func_2547() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_2545() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_6055() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1007 = fn () -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %1002 = @func_4905() /* ty=(Tensor[(5, 15, 15), int64],) */;
    %1003 = @func_3228() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
    %1004 = %1002.0;
    %1005 = %1003.2;
    %1006 = @func_3790() /* ty=Tensor[(5, 15, 15), float32] */;
    (%1004, %1005, %1006)
  };
  %1007() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_11224() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %1011 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
    %1008 = @func_6414() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
    %1009 = @func_9407() /* ty=Tensor[(5, 15, 15), float32] */;
    %1010 = %1008.2;
    (%1009, %1010)
  };
  %1011() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_2579() -> (Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) {
  %1018 = fn () -> (Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) {
    %1012 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
    %1013 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1014 = %1013.0;
    %1015 = cast(%1014, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
    %1016 = %1012.6;
    %1017 = acos(%1015) /* ty=Tensor[(5, 15, 15), float32] */;
    (%1016, %1017)
  };
  %1018() /* ty=(Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) */
}

def @func_10529() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_10527() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_17805() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  @func_17803() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_12111() -> Tensor[(5, 15, 15), float32] {
  @func_12109() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_917() -> Tensor[(5, 15, 15), float32] {
  %1019 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1019.1
}

def @func_10640() -> Tensor[(5, 15, 15), float32] {
  %1020 = @func_9239() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1020.0
}

def @func_1155() -> (Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) {
  %1035 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) {
    %1021 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1022 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 11, 14), float64] */, dtype="float64") /* ty=Tensor[(12, 11, 14), float64] */;
    %1023 = acos(%1022) /* ty=Tensor[(12, 11, 14), float64] */;
    %1024 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 11, 14), float64] */, dtype="bool") /* ty=Tensor[(12, 11, 14), bool] */;
    %1025 = shape_of(%1023, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1026 = cast(%1023, dtype="bool") /* ty=Tensor[(12, 11, 14), bool] */;
    %1027 = dyn.reshape(%1024, %1025, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1028 = cast(meta[relay.Constant][28] /* ty=Tensor[(512), int8] */, dtype="int8") /* ty=Tensor[(512), int8] */;
    %1029 = cast(meta[relay.Constant][28] /* ty=Tensor[(512), int8] */, dtype="int8") /* ty=Tensor[(512), int8] */;
    %1030 = reshape(%1028, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
    %1031 = reshape(%1029, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
    %1032 = %1021.1;
    %1033 = less_equal(%1026, %1027) /* ty=Tensor[(12, 11, 14), bool] */;
    %1034 = @func_505(%1030, %1031) /* ty=Tensor[(16, 8, 4), bool] */;
    (%1032, %1033, %1034, meta[relay.Constant][28] /* ty=Tensor[(512), int8] */)
  };
  %1035() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */
}

def @func_17048() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1041 = fn () -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %1036 = @func_14475() /* ty=(Tensor[(5, 15, 15), float64],) */;
    %1037 = @func_2051() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1038 = %1036.0;
    %1039 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
    %1040 = %1037.1;
    (%1038, %1039, %1040)
  };
  %1041() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_2947() -> Tensor[(5, 15, 15), float32] {
  %1042 = @func_2545() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1042.1
}

def @func_8279() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %1043 = @func_3344() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1044 = @func_7219() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1045 = @func_3562() /* ty=Tensor[(5, 15, 15), float32] */;
  %1046 = %1043.1;
  %1047 = @func_5778() /* ty=Tensor[(5, 15, 15), float32] */;
  %1048 = %1044.1;
  (%1045, %1046, %1047, %1048)
}

def @func_942() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) {
  @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */
}

def @func_6527() -> (Tensor[(5, 15, 15), float32],) {
  %1049 = @func_5585() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1050 = %1049.1;
  (%1050,)
}

def @func_4726() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1051 = @func_2191() /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(11, 13, 12), uint8]) */;
  %1052 = @func_3266() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1053 = @func_3266() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1054 = @func_3790() /* ty=Tensor[(5, 15, 15), float32] */;
  %1055 = %1051.0;
  %1056 = %1052.0;
  %1057 = %1053.0;
  (%1054, %1055, %1056, %1057)
}

def @func_14449(%var_14442: Tensor[(3, 10, 10), int64], %var_14443: Tensor[(3, 10, 10), int64]) -> (Tensor[(3, 10, 10), int64],) {
  %1058 = cast(%var_14443, dtype="int64") /* ty=Tensor[(3, 10, 10), int64] */;
  %1059 = shape_of(%var_14442, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1060 = cast(%var_14442, dtype="int64") /* ty=Tensor[(3, 10, 10), int64] */;
  %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1062 = multiply(%1060, %1061) /* ty=Tensor[(3, 10, 10), int64] */;
  (%1062,)
}

def @func_8784() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  @func_8782() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_16897() -> Tensor[(5, 15, 15), float32] {
  @func_16895() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_12633(%var_12631: Tensor[(1125), float64]) -> (Tensor[(11, 15, 3), float32], Tensor[(5, 15, 15), float32], Tensor[(1125), float64]) {
  %1063 = @func_11010() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %1064 = cast(%var_12631, dtype="float64") /* ty=Tensor[(1125), float64] */;
  %1065 = reshape(%1064, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float64] */;
  %1066 = @func_2430(%1065) /* ty=(Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32]) */;
  %1067 = %1063.0;
  %1068 = %1066.2;
  (%1067, %1068, %var_12631)
}

def @func_6416() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  @func_6414() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_3109() -> (Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), float32]) {
  @func_3107() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), float32]) */
}

def @func_10547() -> Tensor[(5, 15, 15), bool] {
  @func_4319() /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_10490() -> (Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) {
  %1069 = @func_5887() /* ty=(Tensor[(14, ?, 2), bool],) */;
  %1070 = @func_6482() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1071 = %1069.0;
  %1072 = %1070.0;
  (%1071, %1072)
}

def @func_5780() -> Tensor[(5, 15, 15), float32] {
  @func_5778() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_9639() -> (Tensor[(28, 1), float32],) {
  @func_9637() /* ty=(Tensor[(28, 1), float32],) */
}

def @func_13323() -> Tensor[(5, 15, 15), float64] {
  @func_13321() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_3344() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1073 = @func_2735() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1074 = @func_2161() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
  %1075 = %1073.0;
  %1076 = %1074.1;
  (%1075, %1076)
}

def @func_10549() -> Tensor[(5, 15, 15), bool] {
  @func_10547() /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_12185(%var_12184: Tensor[(14, 10, 13), int32]) -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(14, 10, 13), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, 10, 13), float64]) {
  %1113 = fn (%var_12116: Tensor[(14, 10, 13), int32]) -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(14, 10, 13), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, 10, 13), float64]) {
    %1077 = @func_5692() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1078 = @func_9115() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
    %1079 = @func_8628() /* ty=(Tensor[(11, 13, 12), uint8],) */;
    %1080 = cast(%var_12116, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
    %1081 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(14, 10, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1082 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 10, 13), int32] */, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
    %1083 = dyn.reshape(%1080, %1081, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1084 = greater_equal(%1082, %1083) /* ty=Tensor[(14, 10, 13), bool] */;
    %1085 = cast(%1084, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
    %1086 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(14, 10, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1087 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 10, 13), int32] */, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
    %1088 = dyn.reshape(%1085, %1086, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1089 = cast(meta[relay.Constant][30] /* ty=Tensor[(512), int8] */, dtype="int8") /* ty=Tensor[(512), int8] */;
    %1090 = cast(meta[relay.Constant][30] /* ty=Tensor[(512), int8] */, dtype="int8") /* ty=Tensor[(512), int8] */;
    %1091 = reshape(%1089, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
    %1092 = reshape(%1090, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), int8] */;
    %1093 = @func_9986() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
    %1094 = @func_4407() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1095 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1096 = @func_6727() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1097 = @func_10998() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1098 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 10, 13), int32] */, dtype="float32") /* ty=Tensor[(14, 10, 13), float32] */;
    %1099 = sqrt(%1098) /* ty=Tensor[(14, 10, 13), float32] */;
    %1100 = cast(%1099, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
    %1101 = %1077.0;
    %1102 = %1078.1;
    %1103 = %1079.0;
    %1104 = less_equal(%1087, %1088) /* ty=Tensor[(14, 10, 13), bool] */;
    %1105 = @func_505(%1091, %1092) /* ty=Tensor[(16, 8, 4), bool] */;
    %1106 = @func_11142() /* ty=Tensor[(5, 15, 15), float32] */;
    %1107 = %1093.3;
    %1108 = %1094.0;
    %1109 = %1095.1;
    %1110 = %1096.0;
    %1111 = %1097.2;
    %1112 = tan(%1100) /* ty=Tensor[(14, 10, 13), float64] */;
    (%1101, %1102, %1103, %1104, %1105, meta[relay.Constant][30] /* ty=Tensor[(512), int8] */, %1106, %1107, %1108, %1109, %1110, %1111, %1112)
  };
  %1113(%var_12184) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(14, 10, 13), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, 10, 13), float64]) */
}

def @func_14475() -> (Tensor[(5, 15, 15), float64],) {
  %1114 = @func_14053() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %1115 = %1114.0;
  (%1115,)
}

def @func_2718() -> (Tensor[(5, 15, 15), float64],) {
  %1116 = @func_1658() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1116,)
}

def @func_15424() -> (Tensor[(5, 15, 15), float32],) {
  %1117 = @func_1176() /* ty=Tensor[(5, 15, 15), float32] */;
  (%1117,)
}

def @func_17292() -> (Tensor[(5, 15, 15), float32],) {
  %1118 = @func_15988() /* ty=(Tensor[(12, 11, 14), uint32], Tensor[(5, 15, 15), float32]) */;
  %1119 = %1118.1;
  (%1119,)
}

def @func_9704(%var_9692: Tensor[(120), float64]) -> (Tensor[(5, 15, 15), bool], Tensor[(12, 15, 16), int64], Tensor[(120), float64]) {
  %1120 = @func_9115() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %1121 = cast(%var_9692, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1122 = cast(%var_9692, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1123 = reshape(%1121, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), float64] */;
  %1124 = reshape(%1122, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), float64] */;
  %1125 = @func_9518(%1123, %1124) /* ty=(Tensor[(12, 15, 16), int64], Tensor[(48, 60), float32], Tensor[(8, 5, 3), bool]) */;
  %1126 = %1120.2;
  %1127 = %1125.0;
  (%1126, %1127, %var_9692)
}

def @func_8437() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_8435() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_640(%var_638: Tensor[(5, 15, 15), float32]) -> Tensor[(5, 15, 15), bool] {
  @func_637(%var_638) /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_11382() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1128 = @func_2653() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1129 = @func_8378() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), int64]) */;
  %1130 = %1128.0;
  %1131 = @func_6002() /* ty=Tensor[(5, 15, 15), float32] */;
  %1132 = %1129.0;
  (%1130, %1131, %1132)
}

def @func_1369() -> Tensor[(5, 15, 15), float32] {
  @func_1367() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_12575() -> (Tensor[(5, 15, 15), int64],) {
  @func_12573() /* ty=(Tensor[(5, 15, 15), int64],) */
}

def @func_509(%var_507: Tensor[(16, 8, 4), int8], %var_508: Tensor[(16, 8, 4), int8]) -> Tensor[(16, 8, 4), bool] {
  @func_505(%var_507, %var_508) /* ty=Tensor[(16, 8, 4), bool] */
}

def @func_6482() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1133 = @func_3677() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1134 = @func_917() /* ty=Tensor[(5, 15, 15), float32] */;
  %1135 = %1133.0;
  (%1134, %1135)
}

def @func_1533() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) {
  %1152 = fn () -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) {
    %1136 = @func_684() /* ty=(Tensor[(5, 15, 15), int64],) */;
    %1137 = @func_1001() /* ty=Tensor[(5, 15, 15), float32] */;
    %1138 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 15, 15), float32] */, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
    %1139 = shape_of(%1137, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1140 = cast(%1137, dtype="bool") /* ty=Tensor[(5, 15, 15), bool] */;
    %1141 = dyn.reshape(%1138, %1139, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1142 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1143 = @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1144 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
    %1145 = %1136.0;
    %1146 = @func_872() /* ty=Tensor[(5, 15, 15), float32] */;
    %1147 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
    %1148 = logical_and(%1140, %1141) /* ty=Tensor[(5, 15, 15), bool] */;
    %1149 = %1142.1;
    %1150 = %1143.0;
    %1151 = %1144.1;
    (%1145, %1146, %1147, %1148, %1149, %1150, %1151)
  };
  %1152() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool]) */
}

def @func_10299() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1159 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %1153 = @func_9604() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), int64]) */;
    %1154 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1155 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1156 = %1153.1;
    %1157 = %1154.0;
    %1158 = %1155.0;
    (%1156, %1157, %1158)
  };
  %1159() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_8470(%var_8469: Tensor[(9, 12, 11), float32]) -> (Tensor[(9, 12, 11), float32], Tensor[(13, 16, 16), int8], Tensor[(3328, 1), float64]) {
  %1168 = fn (%var_8458: Tensor[(9, 12, 11), float32]) -> (Tensor[(9, 12, 11), float32], Tensor[(13, 16, 16), int8], Tensor[(3328, 1), float64]) {
    %1160 = cast(%var_8458, dtype="float32") /* ty=Tensor[(9, 12, 11), float32] */;
    %1161 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(9, 12, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1162 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 12, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 12, 11), float32] */;
    %1163 = dyn.reshape(%1160, %1161, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1164 = cast(meta[relay.Constant][33] /* ty=Tensor[(3328, 1), float64] */, dtype="float64") /* ty=Tensor[(3328, 1), float64] */;
    %1165 = reshape(%1164, newshape=[13, 16, 16]) /* ty=Tensor[(13, 16, 16), float64] */;
    %1166 = power(%1162, %1163) /* ty=Tensor[(9, 12, 11), float32] */;
    %1167 = @func_3415(%1165) /* ty=Tensor[(13, 16, 16), int8] */;
    (%1166, %1167, meta[relay.Constant][33] /* ty=Tensor[(3328, 1), float64] */)
  };
  %1168(%var_8469) /* ty=(Tensor[(9, 12, 11), float32], Tensor[(13, 16, 16), int8], Tensor[(3328, 1), float64]) */
}

def @func_13292() -> (Tensor[(5, 15, 15), float32],) {
  %1169 = @func_10373() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(15, 75), float32], Tensor[(5, 15, 15), float32], Tensor[(28), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1170 = %1169.5;
  (%1170,)
}

def @func_10998() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1171 = @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %1172 = @func_2051() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1173 = @func_1279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1174 = @func_10298() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1175 = %1171.0;
  %1176 = %1172.1;
  %1177 = %1173.0;
  %1178 = %1174.2;
  (%1175, %1176, %1177, %1178)
}

def @func_14645() -> (Tensor[(5, 15, 15), float32],) {
  %1181 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %1179 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1180 = %1179.0;
    (%1180,)
  };
  %1181() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_11773() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1182 = @func_4296() /* ty=Tensor[(5, 15, 15), float32] */;
  %1183 = @func_656() /* ty=Tensor[(5, 15, 15), float32] */;
  (%1182, %1183)
}

def @func_1660() -> Tensor[(5, 15, 15), float64] {
  @func_1658() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_6257() -> Tensor[(5, 15, 15), int64] {
  %1184 = @func_5963() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) */;
  %1184.0
}

def @func_335() -> Tensor[(5, 15, 15), float32] {
  @func_333() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_7582() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %1185 = @func_2756() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1186 = %1185.0;
  %1187 = @func_4319() /* ty=Tensor[(5, 15, 15), bool] */;
  (%1186, %1187)
}

def @func_376(%var_356: Tensor[(14, 1, 2), float64]) -> (Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) {
  %1188 = cast(%var_356, dtype="float64") /* ty=Tensor[(14, 1, 2), float64] */;
  %1189 = atanh(%1188) /* ty=Tensor[(14, 1, 2), float64] */;
  %1190 = cast(%1189, dtype="float32") /* ty=Tensor[(14, 1, 2), float32] */;
  %1191 = log10(%1190) /* ty=Tensor[(14, 1, 2), float32] */;
  %1192 = cast(%var_356, dtype="bool") /* ty=Tensor[(14, 1, 2), bool] */;
  %1193 = shape_of(%1191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1194 = cast(%1191, dtype="bool") /* ty=Tensor[(14, 1, 2), bool] */;
  %1195 = dyn.reshape(%1192, %1193, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1196 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1197 = less_equal(%1194, %1195) /* ty=Tensor[(14, ?, 2), bool] */;
  %1198 = %1196.1;
  (%1197, %1198)
}

def @func_6259() -> Tensor[(5, 15, 15), int64] {
  @func_6257() /* ty=Tensor[(5, 15, 15), int64] */
}

def @func_1574() -> (Tensor[(5, 15, 15), float32],) {
  %1201 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %1199 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1200 = %1199.0;
    (%1200,)
  };
  %1201() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_11949() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %1211 = fn () -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
    %1202 = @func_7120() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */;
    %1203 = @func_10690() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
    %1204 = @func_8841() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
    %1205 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
    %1206 = %1202.2;
    %1207 = %1203.1;
    %1208 = %1204.0;
    %1209 = %1205.0;
    %1210 = @func_5424() /* ty=Tensor[(5, 15, 15), bool] */;
    (%1206, %1207, %1208, %1209, %1210)
  };
  %1211() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */
}

def @func_11265() -> Tensor[(5, 15, 15), int64] {
  @func_11263() /* ty=Tensor[(5, 15, 15), int64] */
}

def @func_322() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1216 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %1212 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1213 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1214 = %1212.1;
    %1215 = %1213.1;
    (%1214, %1215)
  };
  %1216() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_12723() -> (Tensor[(14, ?, 2), bool],) {
  @func_12721() /* ty=(Tensor[(14, ?, 2), bool],) */
}

def @func_8124() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_8122() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_16436() -> (Tensor[(5, 15, 15), float64],) {
  %1217 = @func_13321() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1217,)
}

def @func_9521(%var_9519: Tensor[(8, 5, 3), float64], %var_9520: Tensor[(8, 5, 3), float64]) -> (Tensor[(12, 15, 16), int64], Tensor[(48, 60), float32], Tensor[(8, 5, 3), bool]) {
  %1231 = fn (%var_9483: Tensor[(8, 5, 3), float64], %var_9507: Tensor[(8, 5, 3), float64]) -> (Tensor[(12, 15, 16), int64], Tensor[(48, 60), float32], Tensor[(8, 5, 3), bool]) {
    %1218 = cast(meta[relay.Constant][34] /* ty=Tensor[(48, 60), float32] */, dtype="float32") /* ty=Tensor[(48, 60), float32] */;
    %1219 = reshape(%1218, newshape=[12, 15, 16]) /* ty=Tensor[(12, 15, 16), float32] */;
    %1220 = @func_7406(%1219) /* ty=(Tensor[(12, 15, 16), bool], Tensor[(12, 15, 16), int64]) */;
    %1221 = cast(%var_9483, dtype="float64") /* ty=Tensor[(8, 5, 3), float64] */;
    %1222 = exp(%1221) /* ty=Tensor[(8, 5, 3), float64] */;
    %1223 = cast(%1222, dtype="float64") /* ty=Tensor[(8, 5, 3), float64] */;
    %1224 = sigmoid(%1223) /* ty=Tensor[(8, 5, 3), float64] */;
    %1225 = cast(%var_9507, dtype="bool") /* ty=Tensor[(8, 5, 3), bool] */;
    %1226 = shape_of(%1224, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1227 = cast(%1224, dtype="bool") /* ty=Tensor[(8, 5, 3), bool] */;
    %1228 = dyn.reshape(%1225, %1226, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1229 = %1220.1;
    %1230 = greater(%1227, %1228) /* ty=Tensor[(8, 5, 3), bool] */;
    (%1229, meta[relay.Constant][34] /* ty=Tensor[(48, 60), float32] */, %1230)
  };
  %1231(%var_9519, %var_9520) /* ty=(Tensor[(12, 15, 16), int64], Tensor[(48, 60), float32], Tensor[(8, 5, 3), bool]) */
}

def @func_2689() -> Tensor[(5, 15, 15), float32] {
  %1232 = @func_1573() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1232.0
}

def @func_14547() -> Tensor[(5, 15, 15), bool] {
  @func_14545() /* ty=Tensor[(5, 15, 15), bool] */
}

def @func_2161() -> (Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) {
  %1233 = @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */;
  %1234 = @func_1658() /* ty=Tensor[(5, 15, 15), float64] */;
  %1235 = %1233.0;
  (%1234, %1235)
}

def @func_4640() -> Tensor[(5, 15, 15), float64] {
  %1237 = fn () -> Tensor[(5, 15, 15), float64] {
    %1236 = @func_2718() /* ty=(Tensor[(5, 15, 15), float64],) */;
    %1236.0
  };
  %1237() /* ty=Tensor[(5, 15, 15), float64] */
}

def @func_7495(%var_7493: Tensor[(512), int8]) -> (Tensor[(5, 15, 15), float64], Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), float32], Tensor[(5, 15, 15), float32]) {
  @func_7492(%var_7493) /* ty=(Tensor[(5, 15, 15), float64], Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(16, 8, 4), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_14434(%var_14432: Tensor[(8, 2, 15), float32]) -> (Tensor[(8, 2, 15), bool], Tensor[(5, 15, 15), float32]) {
  @func_14431(%var_14432) /* ty=(Tensor[(8, 2, 15), bool], Tensor[(5, 15, 15), float32]) */
}

def @func_15988() -> (Tensor[(12, 11, 14), uint32], Tensor[(5, 15, 15), float32]) {
  %1238 = @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */;
  %1239 = @func_13292() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1240 = %1238.1;
  %1241 = %1239.0;
  (%1240, %1241)
}

def @func_685() -> (Tensor[(5, 15, 15), int64],) {
  %1250 = fn () -> (Tensor[(5, 15, 15), int64],) {
    %1242 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1243 = %1242.1;
    %1244 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
    %1245 = cast(%1244, dtype="int64") /* ty=Tensor[(5, 15, 15), int64] */;
    %1246 = shape_of(%1243, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1247 = cast(%1243, dtype="int64") /* ty=Tensor[(5, 15, 15), int64] */;
    %1248 = dyn.reshape(%1245, %1246, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1249 = left_shift(%1247, %1248) /* ty=Tensor[(5, 15, 15), int64] */;
    (%1249,)
  };
  %1250() /* ty=(Tensor[(5, 15, 15), int64],) */
}

def @func_873() -> Tensor[(5, 15, 15), float32] {
  %1252 = fn () -> Tensor[(5, 15, 15), float32] {
    %1251 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1251.0
  };
  %1252() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_5046() -> Tensor[(5, 15, 15), float32] {
  @func_5044() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_12749() -> (Tensor[(5, 15, 15), float64],) {
  %1254 = fn () -> (Tensor[(5, 15, 15), float64],) {
    %1253 = @func_4991() /* ty=Tensor[(5, 15, 15), float64] */;
    (%1253,)
  };
  %1254() /* ty=(Tensor[(5, 15, 15), float64],) */
}

def @func_9986() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %1255 = @func_7219() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1256 = @func_2689() /* ty=Tensor[(5, 15, 15), float32] */;
  %1257 = @func_872() /* ty=Tensor[(5, 15, 15), float32] */;
  %1258 = %1255.4;
  %1259 = @func_6843() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1256, %1257, %1258, %1259)
}

def @func_8130() -> (Tensor[(5, 15, 15), float64],) {
  %1262 = fn () -> (Tensor[(5, 15, 15), float64],) {
    %1260 = @func_6414() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
    %1261 = %1260.2;
    (%1261,)
  };
  %1262() /* ty=(Tensor[(5, 15, 15), float64],) */
}

def @func_5124() -> (Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) {
  @func_5122() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) */
}

def @func_11466() -> Tensor[(5, 15, 15), float32] {
  @func_11464() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_2655() -> (Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_2653() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_8901(%var_8885: Tensor[(1, 28), float64]) -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(1, 28), float64], Tensor[(5, 15, 15), float32]) {
  %1263 = @func_5017() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1264 = cast(%var_8885, dtype="float64") /* ty=Tensor[(1, 28), float64] */;
  %1265 = %1263.0;
  %1266 = cast(%1265, dtype="float32") /* ty=Tensor[(5, 15, 15), float32] */;
  %1267 = reshape(%1264, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %1268 = reshape(%1266, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %1269 = @func_580(%1267, %1268) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint64]) */;
  %1270 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
  %1271 = @func_4319() /* ty=Tensor[(5, 15, 15), bool] */;
  %1272 = @func_8570() /* ty=Tensor[(5, 15, 15), float32] */;
  %1273 = %1269.2;
  %1274 = %1270.0;
  (%1265, %1271, %1272, %1273, %var_8885, %1274)
}

def @func_3107() -> (Tensor[(5, 15, 15), float32], Tensor[(512), int8], Tensor[(5, 15, 15), float32]) {
  %1275 = @func_1154() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), bool], Tensor[(16, 8, 4), bool], Tensor[(512), int8]) */;
  %1276 = @func_2138() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), uint32]) */;
  %1277 = @func_333() /* ty=Tensor[(5, 15, 15), float32] */;
  %1278 = %1275.3;
  %1279 = %1276.0;
  (%1277, %1278, %1279)
}

def @func_11010() -> (Tensor[(11, 15, 3), float32],) {
  %1280 = @func_10020() /* ty=(Tensor[(11, 15, 3), float32],) */;
  %1281 = %1280.0;
  (%1281,)
}

def @func_6584() -> (Tensor[(5, 15, 15), float32],) {
  @func_6582() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_10587(%var_10566: Tensor[(4, 11, 11), int16], %var_10579: Tensor[(12), float64]) -> (Tensor[(4, 11, 11), uint64], Tensor[(4, 10, 3), float64], Tensor[(12), float64]) {
  %1282 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 11, 11), int16] */, dtype="bool") /* ty=Tensor[(4, 11, 11), bool] */;
  %1283 = shape_of(%var_10566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1284 = cast(%var_10566, dtype="bool") /* ty=Tensor[(4, 11, 11), bool] */;
  %1285 = dyn.reshape(%1282, %1283, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1286 = greater_equal(%1284, %1285) /* ty=Tensor[(4, 11, 11), bool] */;
  %1287 = cast(%1286, dtype="uint64") /* ty=Tensor[(4, 11, 11), uint64] */;
  %1288 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(4, 11, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1289 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 11, 11), int16] */, dtype="uint64") /* ty=Tensor[(4, 11, 11), uint64] */;
  %1290 = dyn.reshape(%1287, %1288, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1291 = cast(%var_10579, dtype="float64") /* ty=Tensor[(12), float64] */;
  %1292 = reshape(%1291, newshape=[4, 1, 3]) /* ty=Tensor[(4, 1, 3), float64] */;
  %1293 = @func_9343(%1292) /* ty=(Tensor[(4, 10, 3), bool], Tensor[(5, 15, 15), float64], Tensor[(4, 10, 3), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %1294 = left_shift(%1289, %1290) /* ty=Tensor[(4, 11, 11), uint64] */;
  %1295 = %1293.2;
  (%1294, %1295, %var_10579)
}

def @func_4728() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  @func_4726() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_12948() -> (Tensor[(5, 15, 15), float64], Tensor[(12, 11, 14), bool], Tensor[(12, 15, 16), int64], Tensor[(120), float64]) {
  @func_12946() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(12, 11, 14), bool], Tensor[(12, 15, 16), int64], Tensor[(120), float64]) */
}

def @func_15460() -> Tensor[(5, 15, 15), int64] {
  %1297 = fn () -> Tensor[(5, 15, 15), int64] {
    %1296 = @func_13749() /* ty=(Tensor[(5, 15, 15), int64],) */;
    %1296.0
  };
  %1297() /* ty=Tensor[(5, 15, 15), int64] */
}

def @func_9707(%var_9705: Tensor[(120), float64]) -> (Tensor[(5, 15, 15), bool], Tensor[(12, 15, 16), int64], Tensor[(120), float64]) {
  @func_9704(%var_9705) /* ty=(Tensor[(5, 15, 15), bool], Tensor[(12, 15, 16), int64], Tensor[(120), float64]) */
}

def @func_11720(%var_11711: Tensor[(3, 16, 1), float32]) -> Tensor[(3, 16, 1), float32] {
  %1298 = cast(%var_11711, dtype="float32") /* ty=Tensor[(3, 16, 1), float32] */;
  atanh(%1298) /* ty=Tensor[(3, 16, 1), float32] */
}

def @func_10022() -> (Tensor[(11, 15, 3), float32],) {
  @func_10020() /* ty=(Tensor[(11, 15, 3), float32],) */
}

def @func_8904(%var_8902: Tensor[(1, 28), float64]) -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(1, 28), float64], Tensor[(5, 15, 15), float32]) {
  @func_8901(%var_8902) /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(1, 28), float64], Tensor[(5, 15, 15), float32]) */
}

def @func_8843() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  @func_8841() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_12879() -> (Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(512), int8], Tensor[(11, 15, 3), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %1310 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(512), int8], Tensor[(11, 15, 3), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
    %1299 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1300 = @func_5122() /* ty=(Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) */;
    %1301 = @func_10020() /* ty=(Tensor[(11, 15, 3), float32],) */;
    %1302 = @func_5315() /* ty=(Tensor[(5, 15, 15), float64],) */;
    %1303 = %1299.0;
    %1304 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
    %1305 = %1300.0;
    %1306 = %1301.0;
    %1307 = @func_5153() /* ty=Tensor[(5, 15, 15), float32] */;
    %1308 = @func_5044() /* ty=Tensor[(5, 15, 15), float32] */;
    %1309 = %1302.0;
    (%1303, %1304, %1305, %1306, %1307, %1308, %1309)
  };
  %1310() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8], Tensor[(512), int8], Tensor[(11, 15, 3), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */
}

def @func_8435() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1311 = @func_6482() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1312 = @func_5692() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1313 = @func_8279() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
  %1314 = %1311.0;
  %1315 = %1312.0;
  %1316 = %1313.1;
  (%1314, %1315, %1316)
}

def @func_12413() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(1, 120), float64], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8]) {
  %1329 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(1, 120), float64], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8]) {
    %1317 = @func_8400() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1318 = @func_11676() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(28), float64], Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32]) */;
    %1319 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 120), float64] */, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
    %1320 = reshape(%1319, newshape=[120]) /* ty=Tensor[(120), float64] */;
    %1321 = @func_9704(%1320) /* ty=(Tensor[(5, 15, 15), bool], Tensor[(12, 15, 16), int64], Tensor[(120), float64]) */;
    %1322 = @func_10109() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1323 = @func_1231() /* ty=Tensor[(5, 15, 15), float32] */;
    %1324 = %1317.0;
    %1325 = %1318.5;
    %1326 = %1321.0;
    %1327 = %1322.1;
    %1328 = @func_1344() /* ty=Tensor[(11, 13, 12), uint8] */;
    (%1323, %1324, %1325, %1326, meta[relay.Constant][36] /* ty=Tensor[(1, 120), float64] */, %1327, %1328)
  };
  %1329() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(1, 120), float64], Tensor[(5, 15, 15), float32], Tensor[(11, 13, 12), uint8]) */
}

def @func_14884(%var_14883: Tensor[(540), float64]) -> (Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(9, 5, 12), float64], Tensor[(540), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(512), int8]) {
  %1343 = fn (%var_14843: Tensor[(540), float64]) -> (Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(9, 5, 12), float64], Tensor[(540), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(512), int8]) {
    %1330 = @func_12919() /* ty=(Tensor[(5, 15, 15), bool],) */;
    %1331 = @func_8122() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1332 = @func_8400() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1333 = cast(%var_14843, dtype="float64") /* ty=Tensor[(540), float64] */;
    %1334 = reshape(%1333, newshape=[9, 5, 12]) /* ty=Tensor[(9, 5, 12), float64] */;
    %1335 = @func_2892() /* ty=(Tensor[(512), int8],) */;
    %1336 = %1330.0;
    %1337 = %1331.0;
    %1338 = %1332.1;
    %1339 = @func_11563(%1334) /* ty=Tensor[(9, 5, 12), float64] */;
    %1340 = @func_7770() /* ty=Tensor[(5, 15, 15), float32] */;
    %1341 = @func_6002() /* ty=Tensor[(5, 15, 15), float32] */;
    %1342 = %1335.0;
    (%1336, %1337, %1338, %1339, %var_14843, %1340, %1341, %1342)
  };
  %1343(%var_14883) /* ty=(Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(9, 5, 12), float64], Tensor[(540), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(512), int8]) */
}

def @func_15739() -> (Tensor[(11, 13, 12), uint8],) {
  %1344 = @func_8209() /* ty=Tensor[(11, 13, 12), uint8] */;
  (%1344,)
}

def @func_12595(%var_12585: Tensor[(4, 5, 10), float32]) -> (Tensor[(4, 5, 10), float32], Tensor[(4, 5, 10), float32]) {
  %1345 = cast(%var_12585, dtype="float32") /* ty=Tensor[(4, 5, 10), float32] */;
  %1346 = cast(%var_12585, dtype="float32") /* ty=Tensor[(4, 5, 10), float32] */;
  %1347 = acosh(%1345) /* ty=Tensor[(4, 5, 10), float32] */;
  %1348 = atanh(%1346) /* ty=Tensor[(4, 5, 10), float32] */;
  (%1347, %1348)
}

def @func_3792() -> Tensor[(5, 15, 15), float32] {
  @func_3790() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_6634() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1353 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
    %1349 = @func_426() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1350 = @func_4007() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1351 = %1349.0;
    %1352 = %1350.0;
    (%1351, %1352)
  };
  %1353() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */
}

def @func_3564() -> Tensor[(5, 15, 15), float32] {
  @func_3562() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_4551() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint16]) {
  @func_4549() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), uint16]) */
}

def @func_15370() -> Tensor[(5, 15, 15), float32] {
  %1354 = @func_3500() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1354.0
}

def @func_14512() -> (Tensor[(5, 15, 15), int64],) {
  %1355 = @func_11263() /* ty=Tensor[(5, 15, 15), int64] */;
  (%1355,)
}

def @func_14603() -> (Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) {
  %1356 = @func_10490() /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */;
  %1357 = @func_9239() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1358 = %1356.0;
  %1359 = %1357.1;
  (%1358, %1359)
}

def @func_7771() -> Tensor[(5, 15, 15), float32] {
  %1361 = fn () -> Tensor[(5, 15, 15), float32] {
    %1360 = @func_1573() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1360.0
  };
  %1361() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_8782() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) {
  %1362 = @func_1406() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1363 = @func_3228() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float64]) */;
  %1364 = %1362.0;
  %1365 = %1363.3;
  (%1364, %1365)
}

def @func_3903() -> (Tensor[(5, 15, 15), float32],) {
  %1368 = fn () -> (Tensor[(5, 15, 15), float32],) {
    %1366 = @func_284() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
    %1367 = %1366.0;
    (%1367,)
  };
  %1368() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_5122() -> (Tensor[(512), int8], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(14, ?, 2), bool], Tensor[(7, 4), float64], Tensor[(5, 15, 15), int64]) {
  %1369 = @func_2892() /* ty=(Tensor[(512), int8],) */;
  %1370 = @func_321() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) */;
  %1371 = @func_2021() /* ty=(Tensor[(5, 15, 15), float64], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32], Tensor[(12, 11, 14), int32], Tensor[(12, 11, 14), bool], Tensor[(5, 15, 15), bool]) */;
  %1372 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 4), float64] */;
  %1373 = reshape(%1372, newshape=[14, 1, 2]) /* ty=Tensor[(14, 1, 2), float64] */;
  %1374 = @func_376(%1373) /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */;
  %1375 = @func_940() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool], Tensor[(5, 15, 15), int64]) */;
  %1376 = %1369.0;
  %1377 = %1370.0;
  %1378 = %1371.3;
  %1379 = %1374.0;
  %1380 = %1375.2;
  (%1376, %1377, %1378, %1379, meta[relay.Constant][37] /* ty=Tensor[(7, 4), float64] */, %1380)
}

def @func_6909() -> (Tensor[(5, 15, 15), float32],) {
  @func_6907() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_6338(%var_6296: Tensor[(7, 3, 1), bool], %var_6297: Tensor[(7, 3, 3), bool]) -> (Tensor[(7, 3, 3), bool], Tensor[(5, 15, 15), uint16], Tensor[(1125), float32], Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) {
  %1381 = cast(%var_6296, dtype="bool") /* ty=Tensor[(7, 3, 1), bool] */;
  %1382 = cast(%var_6297, dtype="bool") /* ty=Tensor[(7, 3, 3), bool] */;
  %1383 = cast(meta[relay.Constant][38] /* ty=Tensor[(1125), float32] */, dtype="float32") /* ty=Tensor[(1125), float32] */;
  %1384 = reshape(%1383, newshape=[5, 15, 15]) /* ty=Tensor[(5, 15, 15), float32] */;
  %1385 = @func_3830(%1384) /* ty=(Tensor[(5, 15, 15), uint16],) */;
  %1386 = @func_5963() /* ty=(Tensor[(5, 15, 15), int64], Tensor[(5, 15, 15), float64]) */;
  %1387 = @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */;
  %1388 = logical_or(%1381, %1382) /* ty=Tensor[(7, 3, 3), bool] */;
  %1389 = %1385.0;
  %1390 = %1386.0;
  %1391 = %1387.0;
  (%1388, %1389, meta[relay.Constant][38] /* ty=Tensor[(1125), float32] */, %1390, %1391)
}

def @func_15180() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
  %1395 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) {
    %1392 = @func_9901() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1393 = %1392.0;
    %1394 = @func_10547() /* ty=Tensor[(5, 15, 15), bool] */;
    (%1393, %1394)
  };
  %1395() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */
}

def @func_15887() -> (Tensor[(5, 15, 15), float32], Tensor[(3, 10, 10), int64], Tensor[(300), int64], Tensor[(5, 15, 15), float64]) {
  %1406 = fn () -> (Tensor[(5, 15, 15), float32], Tensor[(3, 10, 10), int64], Tensor[(300), int64], Tensor[(5, 15, 15), float64]) {
    %1396 = @func_2991() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), bool]) */;
    %1397 = cast(meta[relay.Constant][39] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
    %1398 = cast(meta[relay.Constant][39] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
    %1399 = reshape(%1397, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), int64] */;
    %1400 = reshape(%1398, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), int64] */;
    %1401 = @func_14449(%1399, %1400) /* ty=(Tensor[(3, 10, 10), int64],) */;
    %1402 = @func_5191() /* ty=(Tensor[(5, 15, 15), float64],) */;
    %1403 = %1396.0;
    %1404 = %1401.0;
    %1405 = %1402.0;
    (%1403, %1404, meta[relay.Constant][39] /* ty=Tensor[(300), int64] */, %1405)
  };
  %1406() /* ty=(Tensor[(5, 15, 15), float32], Tensor[(3, 10, 10), int64], Tensor[(300), int64], Tensor[(5, 15, 15), float64]) */
}

def @func_3500() -> (Tensor[(5, 15, 15), float32],) {
  %1407 = @func_1176() /* ty=Tensor[(5, 15, 15), float32] */;
  (%1407,)
}

def @func_284() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1408 = @func_267() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1409 = @func_267() /* ty=(Tensor[(5, 15, 15), float32],) */;
  %1410 = %1408.0;
  %1411 = %1409.0;
  (%1410, %1411)
}

def @func_379(%var_377: Tensor[(14, 1, 2), float64]) -> (Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) {
  @func_376(%var_377) /* ty=(Tensor[(14, ?, 2), bool], Tensor[(5, 15, 15), float32]) */
}

def @func_5889() -> (Tensor[(14, ?, 2), bool],) {
  @func_5887() /* ty=(Tensor[(14, ?, 2), bool],) */
}

def @func_11012() -> (Tensor[(11, 15, 3), float32],) {
  @func_11010() /* ty=(Tensor[(11, 15, 3), float32],) */
}

def @func_1177() -> Tensor[(5, 15, 15), float32] {
  %1413 = fn () -> Tensor[(5, 15, 15), float32] {
    %1412 = @func_628() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1412.0
  };
  %1413() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_2949() -> Tensor[(5, 15, 15), float32] {
  @func_2947() /* ty=Tensor[(5, 15, 15), float32] */
}

def @func_10020() -> (Tensor[(11, 15, 3), float32],) {
  %1414 = cast(meta[relay.Constant][40] /* ty=Tensor[(11, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 3), float32] */;
  %1415 = cosh(%1414) /* ty=Tensor[(11, 15, 3), float32] */;
  (%1415,)
}

def @func_12097() -> (Tensor[(5, 15, 15), float32],) {
  @func_12095() /* ty=(Tensor[(5, 15, 15), float32],) */
}

def @func_2305(%var_2288: Tensor[(5, 6, 11), float64]) -> (Tensor[(5, 6, 11), int64], Tensor[(5, 15, 15), float64]) {
  %1416 = cast(%var_2288, dtype="float64") /* ty=Tensor[(5, 6, 11), float64] */;
  %1417 = asin(%1416) /* ty=Tensor[(5, 6, 11), float64] */;
  %1418 = cast(%1417, dtype="int64") /* ty=Tensor[(5, 6, 11), int64] */;
  %1419 = shape_of(%var_2288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1420 = cast(%var_2288, dtype="int64") /* ty=Tensor[(5, 6, 11), int64] */;
  %1421 = dyn.reshape(%1418, %1419, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1422 = left_shift(%1420, %1421) /* ty=Tensor[(5, 6, 11), int64] */;
  %1423 = @func_1034() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1422, %1423)
}

def @func_17549() -> (Tensor[(5, 15, 15), float32], Tensor[(5, 15, 15), float32]) {
  %1424 = @func_3790() /* ty=Tensor[(5, 15, 15), float32] */;
  %1425 = @func_2947() /* ty=Tensor[(5, 15, 15), float32] */;
  (%1424, %1425)
}

def @func_17174() -> (Tensor[(512), int8], Tensor[(5, 15, 15), float64]) {
  %1426 = @func_9447() /* ty=Tensor[(512), int8] */;
  %1427 = @func_1076() /* ty=Tensor[(5, 15, 15), float64] */;
  (%1426, %1427)
}

def @func_5983() -> Tensor[(5, 15, 15), float32] {
  %1429 = fn () -> Tensor[(5, 15, 15), float32] {
    %1428 = @func_1573() /* ty=(Tensor[(5, 15, 15), float32],) */;
    %1428.0
  };
  %1429() /* ty=Tensor[(5, 15, 15), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen735/build/output.py:5845: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen735/build/output.py", line 5850, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(3) tvmgen_default_fused_minimum_kernel0(float* __restrict__ T_minimum, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_minimum[(((int)threadIdx.x))] = min(placeholder[(0)], placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~

